import { AfterViewInit, Injector, NgZone, OnInit, QueryList } from '@angular/core';
import { ActiveModalRef, AdaptModalService } from '@bmc-ux/adapt-angular';
import { ActionListControlComponent } from '@helix/platform/view/designer';
import { IRowActionData } from '../record-grid-row-action-editor-widget.types';
import { IDefinitionPickerComponentOptions, IExpressionFormControlOptions, IIconPickerFormControlOptions, ISelectFormControlOptions, RxExpressionEditorService } from '@helix/platform/shared/components';
import { IExpressionConfigurator, IPlainObject } from '@helix/platform/shared/api';
import { CdkDrag, CdkDropList } from '@angular/cdk/drag-drop';
import { CdkDragDrop } from '@angular/cdk/drag-drop/';
import { TranslateService } from '@ngx-translate/core';
import { RxRecordDefinitionCacheService } from '@helix/platform/record/api';
import { RxModalClass } from '@helix/platform/ui-kit';
import { NgForm } from '@angular/forms';
import { RxGuidService } from '@helix/platform/utils';
import * as i0 from "@angular/core";
export declare class RecordGridRowActionEditorModalComponent extends RxModalClass implements OnInit, AfterViewInit {
    context: ActiveModalRef;
    private adaptModalService;
    private rxExpressionEditorService;
    private translateService;
    private rxRecordDefinitionCacheService;
    private ngZone;
    private rxGuidService;
    protected injector: Injector;
    private accordionTabEls;
    rowActionsForm: NgForm;
    expressionConfigurator: IExpressionConfigurator;
    isReadOnly: boolean;
    rowActions: IRowActionData[];
    selectFormControlOptions: ISelectFormControlOptions;
    availableOnDevicesFormControlOptions: ISelectFormControlOptions;
    recordDefinitionPickerOptions: IDefinitionPickerComponentOptions;
    iconPickerOptions: IIconPickerFormControlOptions;
    draggableSelectedRowAction: QueryList<CdkDrag<IRowActionData>>;
    selectedRowActionsDropList: CdkDropList;
    actionListControlComponents: QueryList<ActionListControlComponent>;
    expressionFormControlOptions: IExpressionFormControlOptions;
    private activeActionIndex;
    private rowActionIndex;
    constructor(context: ActiveModalRef, adaptModalService: AdaptModalService, rxExpressionEditorService: RxExpressionEditorService, translateService: TranslateService, rxRecordDefinitionCacheService: RxRecordDefinitionCacheService, ngZone: NgZone, rxGuidService: RxGuidService, injector: Injector);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    cancel(): void;
    trackByGuid(index: number, rowAction: IRowActionData): string;
    addRowAction(): void;
    removeRowAction(index: number, $event: MouseEvent): void;
    openExpressionEditor(event: IPlainObject, rowAction: any, propertyPath: string): void;
    getExpressionFormControlOptions(propertyPath: string): IExpressionFormControlOptions;
    saveActions(): void;
    moveRowAction(fromIndex: number, toIndex: number): void;
    onDropInSelectedRowActionsContainer($event: CdkDragDrop<IRowActionData[], any>): void;
    onRecordDefinitionChange(rowAction: IRowActionData): void;
    setSecurityFieldDefinitions(rowAction: IRowActionData): void;
    private getRowActionLabel;
    private getSelectFormControlOptions;
    private openActiveAction;
    toggleOpen(expandAll: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RecordGridRowActionEditorModalComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RecordGridRowActionEditorModalComponent, "rx-record-grid-row-action-editor-modal", never, {}, {}, never, never>;
}
