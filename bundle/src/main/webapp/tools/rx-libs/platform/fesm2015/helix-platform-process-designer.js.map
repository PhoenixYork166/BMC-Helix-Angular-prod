{"version":3,"file":"helix-platform-process-designer.js","sources":["../../../../libs/platform/process/designer/process-designer/process-designer.service.ts","../../../../libs/platform/process/designer/process-designer/process-designer-graph.class.ts","../../../../libs/platform/process/designer/process-designer/process-designer.component.ts","../../../../libs/platform/process/designer/process-designer/process-designer.component.html","../../../../libs/platform/process/designer/process-designer/process-designer.module.ts","../../../../libs/platform/process/designer/process-designer-page/process-designer-page.component.ts","../../../../libs/platform/process/designer/process-designer-page/process-designer-page.component.html","../../../../libs/platform/process/designer/process-designer-page/process-designer-page.module.ts","../../../../libs/platform/process/designer/helix-platform-process-designer.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { chain, find, reduce, some } from 'lodash';\n\nimport {\n  IActionType,\n  IBundleDescriptor,\n  RX_DESIGNER,\n  RX_DESIGNER_ELEMENT_SHAPE,\n  RxActionTypeUtilsService,\n  RxBundleCacheService,\n  RxDesignerCacheService,\n  RxGlobalCacheService\n} from '@helix/platform/shared/api';\nimport { IDesignerPaletteNode, IDesignerPaletteTree } from '@helix/platform/shared/components';\nimport {\n  IProcessElementDescriptor,\n  RX_PROCESS_DEFINITION,\n  RxProcessDefinitionService,\n  RxProcessElementRegistryService\n} from '@helix/platform/process/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxProcessDesignerService {\n  constructor(\n    private rxActionTypeUtilsService: RxActionTypeUtilsService,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxDesignerCacheService: RxDesignerCacheService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxProcessDefinitionService: RxProcessDefinitionService,\n    private rxProcessElementRegistryService: RxProcessElementRegistryService\n  ) {}\n\n  buildPalette(actionTypes: IActionType[], bundleDescriptors: IBundleDescriptor[]): IDesignerPaletteTree[] {\n    const registeredElementNodes = reduce<IProcessElementDescriptor, IDesignerPaletteNode[]>(\n      this.rxProcessElementRegistryService.getAll(),\n      (nodes, registeredElement) => {\n        if (registeredElement.displayName) {\n          nodes.push({\n            group: registeredElement.group,\n            label: registeredElement.displayName,\n            paletteItem: registeredElement.paletteItem,\n            value: {\n              actionTypeName: this.rxProcessDefinitionService.getServerActionTypeName(registeredElement.type),\n              resourceType: registeredElement.resourceType,\n              type: registeredElement.type\n            }\n          });\n        }\n\n        return nodes;\n      },\n      []\n    );\n\n    const serverActionNodes = reduce<IActionType, IDesignerPaletteNode[]>(\n      actionTypes,\n      (nodes, actionType) => {\n        const isActionRegistered = some(\n          registeredElementNodes,\n          (registeredElementNode) => registeredElementNode.value.actionTypeName === actionType.actionTypeName\n        );\n\n        if (!isActionRegistered) {\n          nodes.push({\n            group:\n              this.rxActionTypeUtilsService.getActionTypeBundleFriendlyName(bundleDescriptors, actionType) ||\n              RX_PROCESS_DEFINITION.standardProcessElementGroups.platformActions.name,\n            label:\n              actionType.displayName || this.rxActionTypeUtilsService.prettifyActionTypeName(actionType.actionTypeName),\n            paletteItem: {\n              border: RX_DESIGNER.paletteItemBorder.solid,\n              icon: {\n                path: actionType.isDeprecated\n                  ? RX_DESIGNER_ELEMENT_SHAPE.bpmnIcons.info\n                  : RX_DESIGNER_ELEMENT_SHAPE.bpmnIcons.gear,\n                position: RX_DESIGNER.paletteIconPosition.top\n              },\n              label: RX_DESIGNER.paletteItemLabel.inner,\n              shape: RX_DESIGNER.paletteItemShape.rectangle\n            },\n            value: {\n              actionTypeName: actionType.actionTypeName,\n              resourceType: RX_PROCESS_DEFINITION.processElementResourceTypes.processAction,\n              type: this.rxProcessDefinitionService.getServerActionModelType(actionType.actionTypeName)\n            }\n          });\n        }\n\n        return nodes;\n      },\n      []\n    );\n\n    return chain([...registeredElementNodes, ...serverActionNodes])\n      .sortBy('label')\n      .reduce<IDesignerPaletteTree[]>((tree, element) => {\n        const group = find(tree, { label: element.group });\n\n        if (group) {\n          group.children.push(element);\n        } else {\n          tree.push({\n            label: element.group,\n            children: [element]\n          });\n        }\n\n        return tree;\n      }, [])\n      .sortBy('label')\n      .sortBy((node) => {\n        const group = find(RX_PROCESS_DEFINITION.processElementGroups, { name: node.label });\n\n        return group?.priority ?? RX_PROCESS_DEFINITION.standardProcessElementGroups.default.priority;\n      })\n      .value();\n  }\n}\n","import { chain, clone, has, isFunction, pick } from 'lodash';\n\nimport { RxIdService, RxJsonParserService } from '@helix/platform/utils';\nimport { IDesignerGraph, IDesignerGraphConfig } from '@helix/platform/shared/api';\nimport { RX_DESIGNER_CANVAS } from '@helix/platform/shared/components';\nimport {\n  IProcessDefinition,\n  IProcessFlowElementDefinition,\n  ISubProcessDefinition,\n  RxProcessElementRegistryService,\n  RxProcessElementSearchService\n} from '@helix/platform/process/api';\nimport {\n  IProcessDefinitionModel,\n  RxEndEventService,\n  RxProcessService,\n  RxStartEventService\n} from '@helix/platform/process/elements';\n\ndeclare var joint: any;\n\nexport class RxProcessDesignerGraph\n  extends joint.dia.Graph\n  implements IDesignerGraph<IProcessDefinition, IProcessDefinitionModel>\n{\n  rxEndEventService: RxEndEventService;\n  rxIdService: RxIdService;\n  rxJsonParserService: RxJsonParserService;\n  rxProcessElementRegistryService: RxProcessElementRegistryService;\n  rxProcessElementSearchService: RxProcessElementSearchService;\n  rxProcessService: RxProcessService;\n  rxStartEventService: RxStartEventService;\n\n  constructor(config: IDesignerGraphConfig) {\n    super(config.options);\n\n    this.rxEndEventService = config.injector.get(RxEndEventService);\n    this.rxIdService = config.injector.get(RxIdService);\n    this.rxJsonParserService = config.injector.get(RxJsonParserService);\n    this.rxProcessElementRegistryService = config.injector.get(RxProcessElementRegistryService);\n    this.rxProcessElementSearchService = config.injector.get(RxProcessElementSearchService);\n    this.rxProcessService = config.injector.get(RxProcessService);\n    this.rxStartEventService = config.injector.get(RxStartEventService);\n  }\n\n  // joint.dia.Graph methods\n  reset(): void {\n    this.off('add');\n    this.off('change');\n\n    this.clear();\n  }\n\n  // Custom methods\n  addDefaultElements(definitionModel: IProcessDefinitionModel): void {\n    this.addCell(\n      this.rxProcessService.getShape({\n        definitionModel,\n        id: this.get('processId')\n      })\n    );\n\n    const isGraphEmpty = chain(this.getCells())\n      .reject({ id: this.get('processId') })\n      .isEmpty()\n      .value();\n\n    if (isGraphEmpty) {\n      const elementSize = 30;\n\n      this.addCells([\n        this.rxStartEventService.getShape({\n          position: {\n            x: elementSize,\n            y: (RX_DESIGNER_CANVAS.paperOptions.height - elementSize) / 2\n          }\n        }),\n\n        this.rxEndEventService.getShape({\n          position: {\n            x: RX_DESIGNER_CANVAS.paperOptions.width - 2 * elementSize,\n            y: (RX_DESIGNER_CANVAS.paperOptions.height - elementSize) / 2\n          }\n        })\n      ]);\n    }\n  }\n\n  // TODO-VS: update when element shapes logic is implemented\n  getDefinitionFromGraph(): Partial<IProcessDefinition> {\n    return {\n      ...this.getDefinitionBase(this.getCell(this.get('processId'))),\n      flowElements: this.getFlowElements(this.getCells()),\n      layout: this.getLayout(this.get('cells').models)\n    };\n  }\n\n  // TODO-VS: update types\n  loadGraphFromDefinition(definition: IProcessDefinition): any {\n    return this.fromJSON(this.getJsonObject(definition));\n  }\n\n  // TODO-VS: update types\n  private getDefinitionBase(processCell: any): Partial<IProcessDefinition> {\n    return this.rxProcessService.getDefinitionFromModel(processCell.prop('definitionModel'));\n  }\n\n  // TODO-VS: update types\n  private getFlowElements(cells: any[]): Array<ISubProcessDefinition | Partial<IProcessFlowElementDefinition>> {\n    return chain(cells)\n      .reject({ id: this.get('processId') })\n      .map((cell) => {\n        const elementModel = cell.prop('elementModel');\n\n        const elementService = this.rxProcessElementRegistryService.get(elementModel.type).elementService;\n\n        return elementService.getDefinitionFromModel(elementModel);\n      })\n      .value();\n  }\n\n  // TODO-VS: update types\n  private getJsonObject(definition: IProcessDefinition): any {\n    const jsonObject = this.rxJsonParserService.tryParseJson(definition.layout, { cells: [] });\n\n    jsonObject.cells.forEach((cell) => {\n      const embeddedElementIds = chain(jsonObject.cells).filter({ parent: cell.id }).map('id').value();\n\n      if (embeddedElementIds.length) {\n        cell.embeds = embeddedElementIds;\n      }\n\n      cell.ownerProcessDefinitionName = definition.lastUpdateTime ? definition.name : definition.guid;\n\n      const flowElement = this.rxProcessElementSearchService.findByGuid(definition, this.rxIdService.get(cell.id));\n\n      const elementService = this.rxProcessElementRegistryService.get(cell.type).elementService;\n\n      cell.elementModel = elementService.getModelFromDefinition(flowElement);\n    });\n\n    return jsonObject;\n  }\n\n  // TODO-VS: update types\n  private getLayout(models: any[]): string {\n    const cells = chain(models)\n      .reject({ id: this.get('processId') })\n      .map((cell) => {\n        if (isFunction(cell.getLayout)) {\n          return this.adaptCell(cell.getLayout());\n        }\n      })\n      .value();\n\n    return cells.length ? JSON.stringify({ cells: cells }) : null;\n  }\n\n  // TODO-VS: update types\n  private adaptCell(cell: any) {\n    return this.removeRedundantProperties(cell);\n  }\n\n  // remove properties from the process and sub-process layouts\n  // that are set programmatically and don't have to be persisted\n  // TODO-VS: update types\n  private removeRedundantProperties(cell: any): any {\n    let attrs;\n\n    if (has(cell, 'attrs[\".label\"]')) {\n      attrs = {\n        '.label': clone(cell.attrs['.label'])\n      };\n    }\n\n    // list of properties that must be kept in the layout, all others will be set programmatically\n    let adaptedCell = pick<any>(cell, [\n      'collapsedSize',\n      'content',\n      'expanded',\n      'flowType',\n      'id',\n      'labels',\n      'parent',\n      'position',\n      'size',\n      'source',\n      'target',\n      'type',\n      'vertices',\n      'z'\n    ]);\n\n    if (attrs) {\n      adaptedCell.attrs = attrs;\n    }\n\n    return adaptedCell;\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { CdkDragDrop } from '@angular/cdk/drag-drop/drag-events';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AdaptSidebarComponent } from '@bmc-ux/adapt-angular';\nimport { BehaviorSubject, combineLatest, forkJoin, merge, Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  startWith,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n  withLatestFrom\n} from 'rxjs/operators';\nimport { find, forEach, isEmpty, isEqual, reject, some } from 'lodash';\n\nimport { IValidationIssue, IValidationIssueSection, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { RxGuidService, RxIdService } from '@helix/platform/utils';\nimport {\n  IDesignerConfiguration,\n  IPlainObject,\n  RxBundleCacheService,\n  RxCommandManagerService,\n  RxDesignerCacheService,\n  RxGlobalCacheService,\n  RxOverlayService\n} from '@helix/platform/shared/api';\nimport {\n  IProcessDefinition,\n  RxProcessDataDictionaryService,\n  RxProcessDefinitionService,\n  RxProcessElementRegistryService,\n  RxProcessElementSearchService\n} from '@helix/platform/process/api';\nimport { IProcessDefinitionModel, RxProcessService } from '@helix/platform/process/elements';\n\nimport { RxProcessDesignerService } from './process-designer.service';\nimport { RxProcessDesignerGraph } from './process-designer-graph.class';\n\n@Component({\n  selector: 'rx-process-designer',\n  templateUrl: './process-designer.component.html',\n  styleUrls: ['./process-designer.component.scss']\n})\nexport class ProcessDesignerComponent implements OnInit, OnChanges, OnDestroy {\n  @Input()\n  configuration: IDesignerConfiguration;\n\n  @Output()\n  closeDesigner: EventEmitter<void> = new EventEmitter<void>();\n\n  @Output()\n  definitionErrorLoading: EventEmitter<void> = new EventEmitter();\n\n  @Output()\n  definitionSaved: EventEmitter<string> = new EventEmitter();\n\n  @ViewChild('inspectorSidebar', { static: false })\n  inspectorSidebar: AdaptSidebarComponent;\n\n  // TODO-VS: update types\n  droppedElement: CdkDragDrop<any>;\n\n  private bundleIdSubject = new BehaviorSubject<string>(null);\n  private definitionModelChangeSubject = new Subject<IProcessDefinitionModel>();\n  private selectedElementModelChangeSubject = new Subject<any>();\n  private definitionNameSubject = new BehaviorSubject<string>(null);\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private focusDefinitionInspectorSubject = new BehaviorSubject<{ editorName: string; data: IPlainObject }>(null);\n  private focusSelectedElementInspectorSubject = new BehaviorSubject<{ editorName: string; data: IPlainObject }>(null);\n\n  private graph = new RxProcessDesignerGraph({\n    injector: this.injector,\n    options: {\n      processId: this.rxGuidService.generate()\n    }\n  });\n\n  private graphChangeSubject = new Subject<RxProcessDesignerGraph>();\n  private graphChange$ = this.graphChangeSubject.pipe(shareReplay(1));\n  private isDesignModeSubject = new BehaviorSubject<boolean>(true);\n  private selectedElementGuidSubject = new BehaviorSubject<string>(null);\n  private selectedElementGuid$ = this.selectedElementGuidSubject.pipe(distinctUntilChanged(isEqual), shareReplay(1));\n\n  private paletteElementsTree$ = forkJoin([\n    this.rxBundleCacheService.getActionTypes(),\n    this.rxGlobalCacheService.getBundleDescriptors(),\n    this.rxGlobalCacheService.getFunctionDescriptors()\n  ]).pipe(\n    tap(([actionTypes, bundleDescriptors, functionDescriptors]) => {\n      this.rxDesignerCacheService.setActionTypes(actionTypes);\n      this.rxDesignerCacheService.setFunctionDescriptors(functionDescriptors);\n    }),\n    map(([actionTypes, bundleDescriptors]) =>\n      this.rxProcessDesignerService.buildPalette(actionTypes, bundleDescriptors)\n    ),\n    shareReplay(1)\n  );\n\n  private definition$ = combineLatest([this.definitionNameSubject, this.paletteElementsTree$]).pipe(\n    switchMap(([definitionName]) =>\n      definitionName ? this.rxProcessDefinitionService.get(definitionName) : this.rxProcessDefinitionService.getNew()\n    ),\n    shareReplay(1)\n  );\n\n  private isReadOnly$ = combineLatest([\n    this.definition$,\n    this.bundleIdSubject.pipe(switchMap((bundleId) => this.rxOverlayService.areNewDefinitionsAllowed(bundleId)))\n  ]).pipe(\n    map(\n      ([definition, areNewDefinitionsAllowed]) =>\n        !areNewDefinitionsAllowed || !this.rxOverlayService.isCustomizationEnabled('allowOverlay', definition)\n    ),\n    distinctUntilChanged(),\n    shareReplay(1)\n  );\n\n  private definitionModelFromDefinition$ = this.definition$.pipe(\n    map((definition: IProcessDefinition) =>\n      this.rxProcessService.getModelFromDefinition(definition, this.configuration.bundleId)\n    )\n  );\n\n  private graph$ = combineLatest([this.definition$, this.definitionModelFromDefinition$, this.isReadOnly$]).pipe(\n    tap(([definition, definitionModelFromDefinition, isReadOnly]) => {\n      if (!isReadOnly) {\n        this.graph.on('add', (element, elements, options) => {\n          this.graphChangeSubject.next(this.graph);\n        });\n\n        this.graph.on('change', (element, elementModel, changedProperty) => {\n          if (!element.changed.position) {\n            this.graphChangeSubject.next(this.graph);\n          }\n        });\n      }\n\n      this.graph.loadGraphFromDefinition(definition);\n      this.graph.addDefaultElements(definitionModelFromDefinition);\n    }),\n    map(() => this.graph),\n    shareReplay(1)\n  );\n\n  private definitionModelFromGraph$ = this.graphChange$.pipe(\n    map((graph) => graph.getCell(graph.get('processId')).prop('definitionModel')),\n    distinctUntilChanged(isEqual)\n  );\n\n  private definitionModel$ = merge(this.definitionModelFromDefinition$, this.definitionModelFromGraph$).pipe(\n    shareReplay(1)\n  );\n\n  private definitionInspectorConfig$ = this.definitionModel$.pipe(\n    map((definitionModel) => this.rxProcessService.getInspectorConfig(definitionModel))\n  );\n\n  private selectedElementModelFromDefinition$ = combineLatest([this.definition$, this.selectedElementGuid$]).pipe(\n    map(([definition, selectedElementGuid]) => {\n      let selectedElementModel = null;\n\n      if (selectedElementGuid) {\n        const flowElement = this.rxProcessElementSearchService.find(definition, {\n          guid: selectedElementGuid\n        });\n\n        if (flowElement) {\n          const selectedElement = find(JSON.parse(definition.layout).cells, {\n            id: this.rxIdService.getBase(selectedElementGuid)\n          });\n\n          const elementService = this.rxProcessElementRegistryService.get(selectedElement.type).elementService;\n\n          selectedElementModel = elementService.getModelFromDefinition(flowElement);\n        }\n      }\n\n      return selectedElementModel;\n    })\n  );\n\n  private selectedElementModelFromGraph$ = combineLatest([this.graphChange$, this.selectedElementGuid$]).pipe(\n    map(([graph, selectedElementGuid]) => {\n      let selectedElementModel = null;\n\n      if (selectedElementGuid) {\n        const selectedElementCell = graph.getCell(this.rxIdService.getBase(selectedElementGuid));\n\n        selectedElementModel = selectedElementCell.prop('elementModel');\n      }\n\n      return selectedElementModel;\n    })\n  );\n\n  private selectedElementModel$ = merge(\n    this.selectedElementModelFromDefinition$,\n    this.selectedElementModelFromGraph$\n  ).pipe(\n    tap((selectedElementModel) => {\n      if (this.inspectorSidebar?.isPanelOpened) {\n        if (isEmpty(selectedElementModel)) {\n          this.openInspectorSidebarPanel(0);\n        } else {\n          this.openInspectorSidebarPanel(1);\n        }\n      }\n    }),\n    shareReplay(1)\n  );\n\n  private selectedElementInspectorConfig$ = combineLatest([this.selectedElementModel$, this.definitionModel$]).pipe(\n    map(([selectedElementModel, definitionModel]) => {\n      let selectedElementInspectorConfig = null;\n\n      if (selectedElementModel) {\n        const elementService = this.rxProcessElementRegistryService.get(selectedElementModel.type).elementService;\n\n        selectedElementInspectorConfig = elementService.getInspectorConfig(selectedElementModel, {\n          processDefinitionModel: definitionModel\n        });\n      }\n\n      return selectedElementInspectorConfig;\n    })\n  );\n\n  private definitionForCodeViewer$ = this.isDesignModeSubject.pipe(\n    switchMap((isDesignMode) => {\n      return isDesignMode\n        ? of(null)\n        : this.graph$.pipe(\n            take(1),\n            map((graph) => graph.getDefinitionFromGraph())\n          );\n    })\n  );\n\n  private bundleFriendlyName$ = this.bundleIdSubject.pipe(\n    switchMap((bundleId: string) => this.rxGlobalCacheService.getBundleFriendlyName(bundleId))\n  );\n\n  // TODO-VS: update canvas configuration (interactive property)\n  private canvasConfiguration$ = this.isReadOnly$.pipe(\n    map((isReadOnly) => {\n      return {\n        elementRegistry: this.rxProcessElementRegistryService,\n        enableMultiSelection: true,\n        interactive: !isReadOnly,\n        isReadOnly,\n        showToolbar: true\n      };\n    })\n  );\n\n  private breadcrumbItems$ = combineLatest([this.definitionModel$, this.selectedElementModel$]).pipe(\n    map(([definitionModel, selectedElementModel]) => {\n      const breadcrumbItems = [\n        {\n          label:\n            definitionModel.name ||\n            `<${this.translateService.instant('com.bmc.arsys.rx.client.process-designer.new-process.label')}>`,\n          data: {}\n        }\n      ];\n\n      if (selectedElementModel) {\n        breadcrumbItems.push({\n          label: selectedElementModel.label,\n          data: {}\n        });\n      }\n\n      return breadcrumbItems;\n    })\n  );\n\n  private elementValidationIssueSections$: Observable<IValidationIssueSection[]> = this.graphChange$.pipe(\n    switchMap((graph) => {\n      const cells = reject(graph.getCells(), { id: graph.get('processId') });\n\n      return forkJoin(\n        cells.map((cell) => {\n          const elementModel = cell.prop('elementModel');\n          const cellType = cell.prop('type');\n\n          const elementRegistry = this.rxProcessElementRegistryService.get(cellType);\n\n          return elementRegistry.elementService.validate(elementModel, reject(cells, { id: elementModel.id })).pipe(\n            map((elementValidationIssues) => ({\n              title: cell.prop('elementModel').label || this.translateService.instant(elementRegistry.displayName),\n              issues: elementValidationIssues\n            }))\n          );\n        })\n      );\n    })\n  );\n\n  private processValidationIssueSection$: Observable<IValidationIssueSection> = this.graphChange$.pipe(\n    switchMap((graph) => {\n      const processCell = graph.getCell(graph.get('processId'));\n\n      return this.rxProcessService.validate(\n        processCell.prop('definitionModel'),\n        reject(graph.getCells(), { id: processCell.id })\n      );\n    }),\n    map((processValidationIssues) => ({\n      title: this.translateService.instant('com.bmc.arsys.rx.client.process-definition.label'),\n      issues: processValidationIssues\n    }))\n  );\n\n  private validationIssueSections$ = combineLatest([\n    this.processValidationIssueSection$,\n    this.elementValidationIssueSections$\n  ]).pipe(\n    map(([processValidationIssueSection, elementValidationIssueSections]) => {\n      const validationIssueSections: IValidationIssueSection[] = [];\n\n      if (!isEmpty(processValidationIssueSection.issues)) {\n        validationIssueSections.push(processValidationIssueSection);\n      }\n\n      elementValidationIssueSections.forEach((elementValidationIssueSection) => {\n        if (!isEmpty(elementValidationIssueSection.issues)) {\n          validationIssueSections.push(elementValidationIssueSection);\n        }\n      });\n\n      return validationIssueSections;\n    }),\n    shareReplay(1)\n  );\n\n  private hasValidationErrors$ = this.validationIssueSections$.pipe(\n    map((sections) => some(sections, (section) => find(section.issues, { type: ValidationIssueType.Error }))),\n    distinctUntilChanged(),\n    shareReplay(1)\n  );\n\n  // TODO-VS: update the logic to rely on command manager\n  private isSaveButtonDisabled$ = combineLatest([this.hasValidationErrors$, this.isReadOnly$]).pipe(\n    map(([hasValidationErrors, isReadOnly]) => hasValidationErrors || isReadOnly),\n    startWith(true)\n  );\n\n  selectedElementInspectorDesignerItemModel$ = combineLatest([this.selectedElementModel$, this.graph$]).pipe(\n    map(([selectedElementModel, graph]) => ({\n      elementModel: selectedElementModel,\n      graph\n    }))\n  );\n\n  focusDefinitionInspector$ = this.focusDefinitionInspectorSubject.asObservable();\n  focusSelectedElementInspector$ = this.focusSelectedElementInspectorSubject.asObservable();\n\n  vm$ = combineLatest([\n    this.breadcrumbItems$,\n    this.bundleFriendlyName$,\n    this.canvasConfiguration$,\n    this.definitionForCodeViewer$,\n    this.definitionInspectorConfig$,\n    this.definitionModel$,\n    this.graph$,\n    this.hasValidationErrors$,\n    this.isReadOnly$,\n    this.isSaveButtonDisabled$,\n    this.paletteElementsTree$,\n    this.selectedElementInspectorConfig$,\n    this.selectedElementModel$,\n    this.validationIssueSections$\n  ]).pipe(\n    map(\n      ([\n        breadcrumbItems,\n        bundleFriendlyName,\n        canvasConfiguration,\n        definitionForCodeViewer,\n        definitionInspectorConfig,\n        definitionModel,\n        graph,\n        hasValidationErrors,\n        isReadOnly,\n        isSaveButtonDisabled,\n        paletteElementsTree,\n        selectedElementInspectorConfig,\n        selectedElementModel,\n        validationIssueSections\n      ]) => ({\n        breadcrumbItems,\n        bundleFriendlyName,\n        canvasConfiguration,\n        definitionForCodeViewer,\n        definitionInspectorConfig,\n        definitionModel,\n        graph,\n        hasValidationErrors,\n        isReadOnly,\n        isSaveButtonDisabled,\n        paletteElementsTree,\n        selectedElementInspectorConfig,\n        selectedElementModel,\n        validationIssueSections\n      })\n    )\n  );\n\n  constructor(\n    private readonly injector: Injector,\n    private readonly rxBundleCacheService: RxBundleCacheService,\n    private readonly rxCommandManagerService: RxCommandManagerService,\n    private readonly rxDesignerCacheService: RxDesignerCacheService,\n    private readonly rxGlobalCacheService: RxGlobalCacheService,\n    private readonly rxGuidService: RxGuidService,\n    private readonly rxIdService: RxIdService,\n    private readonly rxOverlayService: RxOverlayService,\n    private readonly rxProcessDataDictionaryService: RxProcessDataDictionaryService,\n    private readonly rxProcessDefinitionService: RxProcessDefinitionService,\n    private readonly rxProcessDesignerService: RxProcessDesignerService,\n    private readonly rxProcessElementRegistryService: RxProcessElementRegistryService,\n    private readonly rxProcessElementSearchService: RxProcessElementSearchService,\n    private readonly rxProcessService: RxProcessService,\n    private readonly translateService: TranslateService\n  ) {}\n\n  ngOnInit(): void {\n    // TODO-VS: update logic not to debounce model change here\n    this.definitionModelChangeSubject\n      .pipe(debounceTime(300), withLatestFrom(this.graph$), takeUntil(this.destroyed$))\n      .subscribe(([definitionModel, graph]) => {\n        const processCell = graph.getCell(graph.get('processId'));\n        const commandManager = this.rxCommandManagerService.get();\n\n        commandManager.initBatchCommand();\n\n        forEach(definitionModel, (propertyValue, propertyName) => {\n          processCell.prop(`definitionModel/${propertyName}`, propertyValue);\n        });\n\n        commandManager.storeBatchCommand();\n      });\n\n    // TODO-VS: update logic not to debounce model change here\n    this.selectedElementModelChangeSubject\n      .pipe(debounceTime(300), withLatestFrom(this.graph$), takeUntil(this.destroyed$))\n      .subscribe(([selectedElementModel, graph]) => {\n        const selectedElementCell = graph.getCell(this.rxIdService.getBase(selectedElementModel.guid));\n        const commandManager = this.rxCommandManagerService.get();\n\n        commandManager.initBatchCommand();\n\n        forEach(selectedElementModel, (propertyValue, propertyName) => {\n          selectedElementCell.prop(`elementModel/${propertyName}`, propertyValue);\n        });\n\n        commandManager.storeBatchCommand();\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.configuration.currentValue.definitionName) {\n      this.graph.reset();\n      this.rxProcessDataDictionaryService.clear();\n\n      this.isDesignModeSubject.next(true);\n      this.definitionNameSubject.next(changes.configuration.currentValue.definitionName);\n    }\n\n    if (changes.configuration.currentValue.bundleId) {\n      this.bundleIdSubject.next(changes.configuration.currentValue.bundleId);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.rxProcessDataDictionaryService.clear();\n\n    this.bundleIdSubject.complete();\n    this.definitionModelChangeSubject.complete();\n    this.definitionNameSubject.complete();\n    this.focusDefinitionInspectorSubject.complete();\n    this.focusSelectedElementInspectorSubject.complete();\n    this.graphChangeSubject.complete();\n    this.isDesignModeSubject.complete();\n    this.selectedElementGuidSubject.complete();\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  canDeactivate(): boolean {\n    return true;\n  }\n\n  onBreadcrumbSelected(guid: string): void {\n    if (guid) {\n      this.openInspectorSidebarPanel(1);\n    } else {\n      this.openInspectorSidebarPanel(0);\n    }\n  }\n\n  onCanvasElementSelected(guid: string): void {\n    if (!guid) {\n      this.openInspectorSidebarPanel(0);\n    }\n\n    this.selectedElementGuidSubject.next(guid);\n  }\n\n  onCorrectIssue(validationIssue: IValidationIssue): void {\n    this.openInspectorSidebarPanel(validationIssue.data.inspectorTabIndex);\n\n    if (validationIssue.data.inspectorTabIndex === 0) {\n      setTimeout(\n        () =>\n          this.focusDefinitionInspectorSubject.next({\n            editorName: validationIssue.data.propertyName,\n            data: validationIssue.data\n          }),\n        10\n      );\n    } else if (validationIssue.data.inspectorTabIndex === 1) {\n      this.selectedElementGuidSubject.next(validationIssue.data.guid);\n\n      setTimeout(\n        () =>\n          this.focusSelectedElementInspectorSubject.next({\n            editorName: validationIssue.data.propertyName,\n            data: validationIssue.data\n          }),\n        10\n      );\n    }\n  }\n\n  onDefinitionInspectorInitialized(): void {\n    this.focusDefinitionInspectorSubject.next({\n      editorName: 'name',\n      data: {}\n    });\n  }\n\n  onDefinitionModelChange(definitionModel: IProcessDefinitionModel): void {\n    this.definitionModelChangeSubject.next(definitionModel);\n  }\n\n  // TODO-VS: update types\n  onPaletteElementDropped(dropData: CdkDragDrop<any>) {\n    this.droppedElement = dropData;\n  }\n\n  onSelectedElementModelChange(selectedElementModel: any): void {\n    this.selectedElementModelChangeSubject.next(selectedElementModel);\n  }\n\n  saveDefinition(): void {\n    this.graph$\n      .pipe(\n        take(1),\n        map((graph) => graph.getDefinitionFromGraph())\n      )\n      .subscribe();\n  }\n\n  toggleDesignMode(): void {\n    this.isDesignModeSubject.next(!this.isDesignModeSubject.value);\n  }\n\n  private openInspectorSidebarPanel(id: number): void {\n    this.inspectorSidebar.openPanel(id);\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <rx-designer-header\n    [bundleName]=\"vm.bundleFriendlyName\"\n    [breadcrumbItems]=\"vm.breadcrumbItems\"\n    [isSaveButtonDisabled]=\"vm.isSaveButtonDisabled\"\n    (breadcrumbSelected)=\"onBreadcrumbSelected($event.data.guid)\"\n    (toggleDesignMode)=\"toggleDesignMode()\"\n    (closeDesigner)=\"closeDesigner.emit()\"\n    (save)=\"saveDefinition()\"\n  ></rx-designer-header>\n\n  <div class=\"rx-designer-component\" [hidden]=\"vm.definitionForCodeViewer\">\n    <adapt-sidebar position=\"right\" panelWidth=\"280px\" [openedId]=\"0\" #inspectorSidebar>\n      <adapt-sidebar-item\n        headerTitle=\"{{ 'com.bmc.arsys.rx.client.process-designer.inspector.process-properties.title' | translate }}\"\n        tooltipText=\"{{ 'com.bmc.arsys.rx.client.process-designer.inspector.process-properties.title' | translate }}\"\n        iconClass=\"d-icon-pencil\"\n      >\n        <rx-form-builder\n          [config]=\"vm.definitionInspectorConfig\"\n          [model]=\"vm.definitionModel\"\n          [focusEditor$]=\"focusDefinitionInspector$\"\n          (formInitialized)=\"onDefinitionInspectorInitialized()\"\n          [isReadOnly]=\"vm.isReadOnly\"\n          (modelChange)=\"onDefinitionModelChange($event)\"\n        ></rx-form-builder>\n      </adapt-sidebar-item>\n\n      <adapt-sidebar-item\n        headerTitle=\"{{ 'com.bmc.arsys.rx.client.process-designer.inspector.element-properties.title' | translate }}\"\n        tooltipText=\"{{ 'com.bmc.arsys.rx.client.process-designer.inspector.element-properties.title' | translate }}\"\n        iconClass=\"d-icon-gear\"\n      >\n        <rx-form-builder\n          *ngIf=\"vm.selectedElementInspectorConfig; else missingElementAlert\"\n          rxInspector\n          [config]=\"vm.selectedElementInspectorConfig\"\n          [model]=\"vm.selectedElementModel\"\n          [designerItemModel]=\"selectedElementInspectorDesignerItemModel$\"\n          [focusEditor$]=\"focusSelectedElementInspector$\"\n          [isReadOnly]=\"vm.isReadOnly\"\n          (modelChange)=\"onSelectedElementModelChange($event)\"\n        ></rx-form-builder>\n\n        <ng-template #missingElementAlert>\n          <adapt-alert\n            class=\"p-3 definition-valid-message\"\n            [config]=\"{\n              content: 'com.bmc.arsys.rx.client.process-designer.inspector.missing-element.label' | translate,\n              variant: 'info',\n              type: 'inline'\n            }\"\n          ></adapt-alert>\n        </ng-template>\n      </adapt-sidebar-item>\n\n      <adapt-sidebar-item\n        headerTitle=\"{{ 'com.bmc.arsys.rx.client.designer.validation-issues.label' | translate }}\"\n        tooltipText=\"{{ 'com.bmc.arsys.rx.client.designer.validation-issues.label' | translate }}\"\n        [iconClass]=\"vm.hasValidationErrors ? 'd-icon-exclamation_triangle text-danger' : 'd-icon-exclamation_triangle'\"\n      >\n        <rx-validation-issues\n          [issueSections]=\"vm.validationIssueSections\"\n          [definitionTypeDisplayName]=\"'com.bmc.arsys.rx.client.common.process-definition.label' | translate\"\n          (correctIssue)=\"onCorrectIssue($event)\"\n        ></rx-validation-issues>\n      </adapt-sidebar-item>\n\n      <div class=\"main\">\n        <!-- TODO-VS: remove blade in favour of adapt sidebar -->\n        <rx-blade [title]=\"'Palette'\" rx-id=\"palette\" [isExpanded]=\"true\">\n          <rx-designer-palette\n            [tree]=\"vm.paletteElementsTree\"\n            (elementDropped)=\"onPaletteElementDropped($event)\"\n          ></rx-designer-palette>\n        </rx-blade>\n\n        <rx-designer-canvas\n          [configuration]=\"vm.canvasConfiguration\"\n          [graph]=\"vm.graph\"\n          [droppedElement]=\"droppedElement\"\n          (elementSelected)=\"onCanvasElementSelected($event)\"\n        ></rx-designer-canvas>\n      </div>\n    </adapt-sidebar>\n  </div>\n\n  <adapt-code-viewer\n    *ngIf=\"vm.definitionForCodeViewer\"\n    class=\"full-size\"\n    theme=\"light\"\n    lang=\"javascript\"\n    [hasToolbar]=\"false\"\n    [code]=\"vm.definitionForCodeViewer | json\"\n  ></adapt-code-viewer>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { assign } from 'lodash';\nimport { AdaptAlertModule, AdaptCodeViewerModule, AdaptSidebarModule, AdaptTabsModule } from '@bmc-ux/adapt-angular';\n\nimport { RxBladeModule, RxJsonViewerModule, RxValidationIssuesModule } from '@helix/platform/ui-kit';\nimport { RX_DESIGNER_ELEMENT_SHAPE } from '@helix/platform/shared/api';\nimport {\n  RxDesignerCanvasModule,\n  RxDesignerHeaderModule,\n  RxDesignerPaletteModule,\n  RxFormBuilderModule,\n  RxInspectorModule\n} from '@helix/platform/shared/components';\nimport { RxProcessElementsModule } from '@helix/platform/process/elements';\nimport { RxServerActionsModule } from '@helix/platform/process/server-actions';\n\nimport { ProcessDesignerComponent } from './process-designer.component';\n\ndeclare var joint: any;\n\njoint.shapes.rx = joint.shapes.rx || {};\n\n@NgModule({\n  declarations: [ProcessDesignerComponent],\n  imports: [\n    AdaptAlertModule,\n    AdaptCodeViewerModule,\n    AdaptSidebarModule,\n    AdaptTabsModule,\n    CommonModule,\n    RxBladeModule,\n    RxDesignerCanvasModule,\n    RxDesignerHeaderModule,\n    RxDesignerPaletteModule,\n    RxFormBuilderModule,\n    RxInspectorModule,\n    RxJsonViewerModule,\n    RxProcessElementsModule,\n    RxServerActionsModule,\n    RxValidationIssuesModule,\n    TranslateModule\n  ],\n  exports: [ProcessDesignerComponent]\n})\nexport class ProcessDesignerModule {\n  constructor() {\n    assign(joint.shapes.bpmn.icons, RX_DESIGNER_ELEMENT_SHAPE.bpmnIcons);\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs';\n\nimport { RxUtilityModalsService } from '@helix/platform/ui-kit';\nimport {\n  IComponentCanDeactivate,\n  IDesignerConfiguration,\n  RX_APPLICATION,\n  RxBundleCacheService,\n  RxComponentCanDeactivateGuard,\n  RxDefinitionNameService,\n  RxPageTitleService\n} from '@helix/platform/shared/api';\n\nimport { ProcessDesignerComponent } from '../process-designer/process-designer.component';\n\n@Component({\n  selector: 'rx-process-designer-page',\n  templateUrl: './process-designer-page.component.html'\n})\nexport class ProcessDesignerPageComponent implements OnInit, OnDestroy, IComponentCanDeactivate {\n  @ViewChild(ProcessDesignerComponent)\n  private processDesignerComponent: ProcessDesignerComponent;\n\n  configuration: IDesignerConfiguration;\n  isInitialized = false;\n\n  private isNewProcess: boolean;\n  private subscription: Subscription;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxComponentCanDeactivateGuard: RxComponentCanDeactivateGuard,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxPageTitleService: RxPageTitleService,\n    private rxUtilityModalsService: RxUtilityModalsService,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit(): void {\n    this.rxComponentCanDeactivateGuard.setPageComponent(this);\n\n    this.subscription = this.activatedRoute.params.subscribe(({ definitionName, bundleId }) => {\n      this.rxBundleCacheService.bundleId = bundleId || this.rxDefinitionNameService.getBundleId(definitionName);\n\n      this.isInitialized = true;\n      this.isNewProcess = !definitionName;\n\n      this.rxPageTitleService.set([\n        this.rxDefinitionNameService.getDisplayName(definitionName),\n        this.translateService.instant('com.bmc.arsys.rx.client.process-designer.title')\n      ]);\n\n      this.configuration = {\n        ...this.configuration,\n        bundleId: this.rxBundleCacheService.bundleId,\n        definitionName\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n    this.rxComponentCanDeactivateGuard.setPageComponent(null);\n  }\n\n  canDeactivate(): boolean {\n    return this.processDesignerComponent?.canDeactivate() ?? true;\n  }\n\n  confirmDeactivation(): Promise<boolean> {\n    return this.rxUtilityModalsService.confirmUnsavedChanges();\n  }\n\n  onCloseDesigner(): void {\n    this.router.navigate([\n      RX_APPLICATION.innovationStudioBundleId,\n      this.rxBundleCacheService.bundleId,\n      'process-definitions'\n    ]);\n  }\n\n  onDefinitionErrorLoading(): void {\n    this.router.navigate(['new2', this.rxBundleCacheService.bundleId], { relativeTo: this.activatedRoute.parent });\n  }\n\n  onDefinitionSaved(processDefinitionName: string): void {\n    if (this.isNewProcess) {\n      this.router.navigate(['edit2', processDefinitionName], { relativeTo: this.activatedRoute.parent });\n    }\n  }\n}\n","<rx-process-designer\n  *ngIf=\"isInitialized\"\n  [configuration]=\"configuration\"\n  (closeDesigner)=\"onCloseDesigner()\"\n  (definitionErrorLoading)=\"onDefinitionErrorLoading()\"\n  (definitionSaved)=\"onDefinitionSaved($event)\"\n></rx-process-designer>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProcessDesignerModule } from '../process-designer';\nimport { ProcessDesignerPageComponent } from './process-designer-page.component';\n\n@NgModule({\n  declarations: [ProcessDesignerPageComponent],\n  imports: [CommonModule, ProcessDesignerModule],\n  exports: [ProcessDesignerPageComponent]\n})\nexport class ProcessDesignerPageModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}