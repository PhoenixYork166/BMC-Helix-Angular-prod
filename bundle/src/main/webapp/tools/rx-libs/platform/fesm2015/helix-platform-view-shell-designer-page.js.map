{"version":3,"file":"helix-platform-view-shell-designer-page.js","sources":["../../../../libs/platform/view/shell-designer-page/shell-model.service.ts","../../../../libs/platform/view/shell-designer-page/shell-designer-page.component.ts","../../../../libs/platform/view/shell-designer-page/shell-designer-page.component.html","../../../../libs/platform/view/shell-designer-page/components/shell/controls/shell-global-search-records-control/shell-global-search-records-modal/shell-global-search-records-modal.component.ts","../../../../libs/platform/view/shell-designer-page/components/shell/controls/shell-global-search-records-control/shell-global-search-records-modal/shell-global-search-records-modal.component.html","../../../../libs/platform/view/shell-designer-page/components/shell/controls/shell-global-search-records-control/shell-global-search-records-control.component.ts","../../../../libs/platform/view/shell-designer-page/components/shell/controls/shell-global-search-records-control/shell-global-search-records-control.component.html","../../../../libs/platform/view/shell-designer-page/components/shell/controls/shell-menu-items-control/shell-menu-items-control.component.ts","../../../../libs/platform/view/shell-designer-page/components/shell/controls/shell-menu-items-control/shell-menu-items-control.component.html","../../../../libs/platform/view/shell-designer-page/components/shell/shell-design.model.ts","../../../../libs/platform/view/shell-designer-page/components/shell/shell-design.component.ts","../../../../libs/platform/view/shell-designer-page/components/shell/shell-design.component.html","../../../../libs/platform/view/shell-designer-page/components/shell/controls/shell-global-search-records-control/shell-global-search-records-modal/shell-global-search-records-modal.module.ts","../../../../libs/platform/view/shell-designer-page/components/shell/controls/shell-global-search-records-control/shell-global-search-records-control.module.ts","../../../../libs/platform/view/shell-designer-page/components/shell/controls/shell-menu-items-control/shell-menu-items-control.module.ts","../../../../libs/platform/view/shell-designer-page/components/shell/shell-design-adapter.service.ts","../../../../libs/platform/view/shell-designer-page/components/shell/shell-design.module.ts","../../../../libs/platform/view/shell-designer-page/components/shell-menu-item/shell-menu-item-design.model.ts","../../../../libs/platform/view/shell-designer-page/components/shell-menu-item/shell-menu-item-design.component.ts","../../../../libs/platform/view/shell-designer-page/components/shell-menu-item/shell-menu-item-design.component.html","../../../../libs/platform/view/shell-designer-page/components/shell-menu-item/shell-menu-item-expression-configurator.class.ts","../../../../libs/platform/view/shell-designer-page/components/shell-menu-item/shell-menu-item-design-adapter.service.ts","../../../../libs/platform/view/shell-designer-page/components/shell-menu-item/shell-menu-item-design.module.ts","../../../../libs/platform/view/shell-designer-page/components/shell-menu-group/shell-menu-group-design.model.ts","../../../../libs/platform/view/shell-designer-page/components/shell-menu-group/shell-menu-group-design.component.ts","../../../../libs/platform/view/shell-designer-page/components/shell-menu-group/shell-menu-group-design.component.html","../../../../libs/platform/view/shell-designer-page/components/shell-menu-group/shell-menu-group-design.module.ts","../../../../libs/platform/view/shell-designer-page/components/shell-user-menu/shell-user-menu-design.component.ts","../../../../libs/platform/view/shell-designer-page/components/shell-user-menu/shell-user-menu-design.component.html","../../../../libs/platform/view/shell-designer-page/components/shell-user-menu/shell-user-menu-design.model.ts","../../../../libs/platform/view/shell-designer-page/components/shell-user-menu/shell-user-menu-design.module.ts","../../../../libs/platform/view/shell-designer-page/components/shell-action/shell-action-design.model.ts","../../../../libs/platform/view/shell-designer-page/components/shell-action/shell-action-design.component.ts","../../../../libs/platform/view/shell-designer-page/components/shell-action/shell-action-design.component.html","../../../../libs/platform/view/shell-designer-page/components/shell-action/shell-action-design.module.ts","../../../../libs/platform/view/shell-designer-page/components/shell-components.module.ts","../../../../libs/platform/view/shell-designer-page/shell-designer-page.module.ts","../../../../libs/platform/view/shell-designer-page/helix-platform-view-shell-designer-page.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  IViewDesignerInspectorConfig,\n  RxViewCustomizationOptionsComponent,\n  RxViewRevertCustomizationComponent,\n  ViewDesignerFacade\n} from '@helix/platform/view/designer';\nimport { IFormSectionBuilderConfig } from '@helix/platform/shared/api';\n\n@Injectable()\nexport class RxShellModel {\n  constructor(private viewDesignerFacade: ViewDesignerFacade) {\n    this.viewDesignerFacade.setViewInspectorConfig(this.getInspector());\n  }\n\n  private getInspector(): IViewDesignerInspectorConfig {\n    const layout: IFormSectionBuilderConfig[] = [\n      {\n        label: 'General',\n        controls: [\n          {\n            component: RxViewRevertCustomizationComponent\n          },\n          {\n            component: RxViewCustomizationOptionsComponent\n          }\n        ]\n      }\n    ];\n\n    return {\n      inspectorSectionConfigs: layout\n    } as IViewDesignerInspectorConfig;\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { IViewDesignerConfiguration, RX_VIEW_MODEL, RxViewDesignerComponent } from '@helix/platform/view/designer';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, pluck, switchMap, tap } from 'rxjs/operators';\nimport { RxUtilityModalsService } from '@helix/platform/ui-kit';\nimport {\n  IComponentCanDeactivate,\n  RX_APPLICATION,\n  RxBundleCacheService,\n  RxComponentCanDeactivateGuard,\n  RxDefinitionNameService,\n  RxGlobalCacheService,\n  RxPageTitleService,\n  RxPreviousStateService\n} from '@helix/platform/shared/api';\nimport { RX_SHELL } from '@helix/platform/view/api';\nimport { RxShellModel } from './shell-model.service';\nimport { values } from 'lodash';\n\n@Component({\n  selector: 'rx-shell-designer-page',\n  templateUrl: './shell-designer-page.component.html',\n  styleUrls: ['./shell-designer-page.component.scss'],\n  providers: [\n    RxShellModel,\n    {\n      provide: RX_VIEW_MODEL,\n      useExisting: RxShellModel\n    }\n  ]\n})\nexport class RxShellDesignerPageComponent implements OnInit, OnDestroy, IComponentCanDeactivate {\n  @ViewChild(RxViewDesignerComponent, { static: false })\n  private viewDesignerComponent: RxViewDesignerComponent;\n\n  configuration$: Observable<IViewDesignerConfiguration> = this.activatedRoute.params.pipe(\n    pluck('bundleId'),\n    switchMap((bundleId) => this.rxGlobalCacheService.getBundleDescriptor(bundleId)),\n    tap((bundleDescriptor) => {\n      this.rxBundleCacheService.bundleId = bundleDescriptor.id;\n\n      this.rxPageTitleService.set(\n        ['Application shell', bundleDescriptor.friendlyName],\n        RX_APPLICATION.innovationStudioBundleId\n      );\n    }),\n    map((bundleDescriptor) => ({\n      bundleId: bundleDescriptor.id,\n      viewDefinitionName: this.rxDefinitionNameService.getDefinitionName(\n        bundleDescriptor.id,\n        RX_APPLICATION.shellDefinitionName\n      ),\n      disablePreview: true,\n      paletteComponentsPredicate: (descriptor) => values(RX_SHELL.navBar).includes(descriptor.type)\n    }))\n  );\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private rxComponentCanDeactivateGuard: RxComponentCanDeactivateGuard,\n    private rxUtilityModalsService: RxUtilityModalsService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxPageTitleService: RxPageTitleService,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxPreviousStateService: RxPreviousStateService\n  ) {}\n\n  ngOnInit(): void {\n    this.rxComponentCanDeactivateGuard.setPageComponent(this);\n  }\n\n  ngOnDestroy(): void {\n    this.rxComponentCanDeactivateGuard.setPageComponent(null);\n  }\n\n  canDeactivate(): boolean {\n    if (this.viewDesignerComponent) {\n      return this.viewDesignerComponent.canDeactivate();\n    }\n\n    return true;\n  }\n\n  onCloseDesigner(): void {\n    this.rxPreviousStateService.goToPrevState();\n  }\n\n  confirmDeactivation(): Promise<boolean> {\n    return this.rxUtilityModalsService.confirmUnsavedChanges();\n  }\n}\n","<rx-view-designer\n  *ngIf=\"configuration$ | async as config\"\n  [configuration]=\"config\"\n  (closeDesigner)=\"onCloseDesigner()\"\n></rx-view-designer>\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Injector,\n  OnInit,\n  QueryList,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActiveModalRef, AdaptAccordionTabComponent, DismissReasons, TreeWrap } from '@bmc-ux/adapt-angular';\nimport {\n  IShellGlobalSearchRecordItem,\n  IShellGlobalSearchRecordsModalConfig,\n  IShellGlobalSearchSelectedItem\n} from './shell-global-search-records-modal.types';\nimport { RxRecordDefinitionDataPageService } from '@helix/platform/record/api';\nimport { IDataPageResult, RxDefinitionNameService } from '@helix/platform/shared/api';\nimport { CdkDragDrop } from '@angular/cdk/drag-drop/drag-events';\nimport { IDefinitionPickerComponentOptions, RxDefinitionPickerType } from '@helix/platform/shared/components';\nimport { IShellGlobalSearchRecord } from '../../../shell-design.types';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TreeNode } from 'primeng/api/treenode';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { findIndex } from 'lodash';\n\n@Component({\n  selector: 'rx-shell-global-search-records-modal',\n  templateUrl: './shell-global-search-records-modal.component.html',\n  styleUrls: ['./shell-global-search-records-modal.component.scss']\n})\nexport class RxShellGlobalSearchRecordsModalComponent extends RxModalClass implements OnInit, AfterViewInit {\n  @ViewChildren(AdaptAccordionTabComponent, { read: ElementRef })\n  private accordionTabEls: QueryList<ElementRef>;\n\n  @ViewChild('selectedRecordsForm', { read: NgForm, static: true })\n  selectedRecordsForm: NgForm;\n\n  config: IShellGlobalSearchRecordsModalConfig = this.activeModalRef.getData();\n  availableRecordDefinitionItems: IShellGlobalSearchRecordItem[];\n  filteredRecordDefinitionItems: TreeNode<IShellGlobalSearchRecordItem>[] = [];\n  selectedRecords: IShellGlobalSearchSelectedItem[];\n  treeWrap: TreeWrap = TreeWrap.WrapAll;\n  DismissReasons = DismissReasons;\n\n  definitionPickerOptions: IDefinitionPickerComponentOptions = {\n    label: 'Display view when clicked',\n    definitionType: RxDefinitionPickerType.View,\n    required: true\n  };\n\n  constructor(\n    public activeModalRef: ActiveModalRef,\n    private recordDefinitionDataPageService: RxRecordDefinitionDataPageService,\n    private definitionNameService: RxDefinitionNameService,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.selectedRecords = this.config.selectedRecords.map((record) => ({\n      ...record,\n      isOpen: record.name === this.config.recordToEdit?.name\n    }));\n\n    this.getRecordDefinitions().subscribe((records) => {\n      this.availableRecordDefinitionItems = records;\n      this.updateFilteredItems();\n    });\n  }\n\n  updateFilteredItems(): void {\n    this.filteredRecordDefinitionItems = this.availableRecordDefinitionItems\n      .filter((item) => !this.selectedRecords.find((record) => record.name === item.name))\n      .map((item) => ({\n        data: item,\n        label: item.definitionName\n      }));\n  }\n\n  addRecord(recordItem: IShellGlobalSearchRecordItem): void {\n    this.markAsDirty();\n    this.selectedRecords.push({ ...recordItem, isOpen: true, view: null });\n    this.updateFilteredItems();\n\n    setTimeout(() => {\n      this.accordionTabEls.last.nativeElement.scrollIntoView({\n        block: 'nearest'\n      });\n    });\n  }\n\n  toggleOpen(expandAll: boolean): void {\n    this.selectedRecords.forEach((record) => (record.isOpen = expandAll));\n  }\n\n  onSelectedRecordsListDrop(event: CdkDragDrop<IShellGlobalSearchRecordItem>): void {\n    this.addRecord(event.item.data);\n  }\n\n  removeRecord(record: IShellGlobalSearchSelectedItem): void {\n    this.markAsDirty();\n\n    this.selectedRecords = this.selectedRecords.filter((item) => item.name !== record.name);\n\n    this.updateFilteredItems();\n  }\n\n  onSave(): void {\n    const result: IShellGlobalSearchRecord[] = this.selectedRecords.map((record) => ({\n      name: record.name,\n      view: record.view,\n      definitionName: record.definitionName\n    }));\n\n    this.activeModalRef.close(result);\n  }\n\n  private getRecordDefinitions(): Observable<IShellGlobalSearchRecordItem[]> {\n    return this.recordDefinitionDataPageService\n      .get({\n        params: {\n          propertySelection: 'name',\n          excludeCustomRecordDefinitions: true\n        }\n      })\n      .pipe(\n        map((result: IDataPageResult) =>\n          result.data.map((record) => ({\n            name: record.name,\n            definitionName: this.definitionNameService.getDisplayName(record.name)\n          }))\n        )\n      );\n  }\n\n  ngAfterViewInit(): void {\n    const selectedRecordIndex = findIndex(this.selectedRecords, 'isOpen');\n\n    if (selectedRecordIndex !== -1) {\n      this.accordionTabEls.toArray()[selectedRecordIndex].nativeElement.scrollIntoView({\n        block: 'nearest'\n      });\n    }\n  }\n}\n","<div class=\"designer-modal-body modal-body d-flex mh-100\">\n  <div class=\"row flex-grow-1 w-100\">\n    <div *ngIf=\"!config.isReadOnly\" class=\"col-4 border-right d-flex flex-column mh-100\">\n      <div class=\"d-flex align-items-start justify-content-between\">\n        <h4 class=\"mt-2\">\n          {{ 'com.bmc.arsys.rx.client.shell.shell-global-search-records.available-records.title' | translate }}\n        </h4>\n      </div>\n\n      <div class=\"rx-card card flex-grow-1 mt-2\">\n        <div class=\"card-block\">\n          <div\n            *ngIf=\"filteredRecordDefinitionItems.length\"\n            cdkDropList\n            cdkDropListSortingDisabled\n            [cdkDropListConnectedTo]=\"['selected-record-items']\"\n          >\n            <adapt-tree\n              [value]=\"filteredRecordDefinitionItems\"\n              filter=\"true\"\n              [wrap]=\"treeWrap\"\n            >\n              <ng-template let-record adaptTreeNodeTemplate>\n                <div\n                  *ngIf=\"record.data\"\n                  class=\"rx-tree-draggable-node\"\n                  cdkDrag\n                  [cdkDragData]=\"record.data\"\n                >\n                  <div (dblclick)=\"addRecord(record.data)\">\n                    <button\n                      type=\"button\"\n                      class=\"rx-button-unstyled d-icon-plus_circle\"\n                      (click)=\"addRecord(record.data)\"\n                    ></button>\n\n                    <span class=\"rx-tree-node-label ml-3\">{{ record.data.definitionName }}</span>\n                  </div>\n                </div>\n              </ng-template>\n            </adapt-tree>\n          </div>\n\n          <div *ngIf=\"!filteredRecordDefinitionItems.length\"\n               class=\"d-flex justify-content-center h-100 align-items-center mt-2\">\n            <adapt-empty-state\n              class=\"w-100\"\n              label=\"{{ 'com.bmc.arsys.rx.client.shell.shell-global-search-records.available-records.empty-state.message' | translate }}\"\n              type=\"search\"\n            ></adapt-empty-state>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"d-flex flex-column mh-100 {{ config.isReadOnly ? 'col' : 'col-8' }}\">\n      <div class=\"d-flex align-items-start justify-content-between\">\n        <h4 class=\"mt-2\">\n          {{ 'com.bmc.arsys.rx.client.shell.shell-global-search-records.record-included-in-search-results.title' | translate }}\n        </h4>\n\n        <div *ngIf=\"selectedRecords.length\" class=\"btn-group\">\n          <button\n            adapt-button\n            btn-type=\"tertiary\"\n            type=\"button\"\n            rx-id=\"expand-all-button\"\n            (click)=\"toggleOpen(true)\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.expand-all.label' | translate }}\n          </button>\n\n          <button\n            adapt-button\n            btn-type=\"tertiary\"\n            type=\"button\"\n            rx-id=\"collapse-all-button\"\n            (click)=\"toggleOpen(false)\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.collapse-all.label' | translate }}\n          </button>\n        </div>\n      </div>\n\n      <div\n        id=\"selected-record-items\"\n        class=\"designer-modal-accordion-wrapper\"\n        cdkDropList\n        (cdkDropListDropped)=\"onSelectedRecordsListDrop($event)\"\n      >\n        <adapt-accordion [multiselect]=\"true\">\n          <form #selectedRecordsForm=\"ngForm\">\n            <div\n              *ngFor=\"\n              let record of selectedRecords;\n              let index = index;\n              let first = first;\n              let last = last;\n            \"\n              class=\"designer-modal-accordion-content\"\n              cdkDrag\n              cdkDragLockAxis=\"y\"\n              [cdkDragDisabled]=\"true\"\n            >\n              <adapt-accordion-tab\n                class=\"d-block\"\n                [isOpen]=\"record.isOpen\"\n                (open)=\"record.isOpen = true\"\n                (close)=\"record.isOpen = false\"\n              >\n                <div class=\"card-title-text w-100\">\n                  <div class=\"designer-modal-card-title-content\">\n                    <div class=\"left-header-block pl-0\">\n                      <div class=\"rx-ellipsis\" [title]=\"record.definitionName\" rx-id=\"card-title\">\n                        {{ record.definitionName }}\n                      </div>\n                    </div>\n\n                    <div *ngIf=\"!config.isReadOnly\" class=\"right-header-block\">\n                      <button\n                        class=\"d-icon-left-cross_adapt p-1 pr-4 ml-3\"\n                        adapt-button\n                        size=\"small\"\n                        type=\"button\"\n                        (click)=\"$event.stopPropagation(); removeRecord(record)\"\n                        rx-id=\"remove-button\"\n                      >\n                        {{ 'com.bmc.arsys.rx.client.common.remove.label' | translate }}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n                <rx-definition-picker\n                  class=\"d-block w-50\"\n                  [name]=\"'selectedRecordName-' + index\"\n                  required=\"true\"\n                  [isDisabled]=\"config.isReadOnly\"\n                  [options]=\"definitionPickerOptions\"\n                  [(ngModel)]=\"record.view\"\n                  (ngModelChange)=\"markAsDirty()\"\n                ></rx-definition-picker>\n              </adapt-accordion-tab>\n            </div>\n          </form>\n        </adapt-accordion>\n      </div>\n\n      <div *ngIf=\"!selectedRecords.length\" class=\"d-flex justify-content-center h-100 align-items-center mt-2\">\n        <adapt-empty-state\n          class=\"w-100\"\n          label=\"{{ 'com.bmc.arsys.rx.client.shell.shell-global-search-records.record-included-in-search-results.empty-state.message' | translate }}\"\n          type=\"config\"\n        ></adapt-empty-state>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal-footer\">\n  <button\n    *ngIf=\"!config.isReadOnly\"\n    adapt-button\n    btn-type=\"primary\"\n    type=\"button\"\n    rx-id=\"save-button\"\n    [disabled]=\"selectedRecordsForm.form.invalid || !isDirty()\"\n    (click)=\"onSave()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button\n    adapt-button\n    btn-type=\"secondary\"\n    type=\"button\"\n    rx-id=\"cancel-button\"\n    (click)=\"activeModalRef.dismiss(DismissReasons.CLOSE_BTN)\"\n  >\n    {{ config.isReadOnly ? ('com.bmc.arsys.rx.client.common.close.label' | translate) : ('com.bmc.arsys.rx.client.common.cancel.label' | translate) }}\n  </button>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { IFormControlComponent, IFormFocusable } from '@helix/platform/shared/api';\nimport { noop } from 'lodash';\nimport { RxShellGlobalSearchRecordsModalComponent } from './shell-global-search-records-modal/shell-global-search-records-modal.component';\nimport { IShellGlobalSearchRecordsModalConfig } from './shell-global-search-records-modal/shell-global-search-records-modal.types';\nimport { IShellGlobalSearchRecord } from '../../shell-design.types';\nimport { OpenViewActionModalSize } from '@helix/platform/view/api';\nimport { RxModalService } from '@helix/platform/ui-kit';\n\n@Component({\n  selector: 'rx-shell-global-search-records-control',\n  templateUrl: './shell-global-search-records-control.component.html',\n  styleUrls: ['./shell-global-search-records-control.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RxShellGlobalSearchRecordsControlComponent,\n      multi: true\n    }\n  ]\n})\nexport class RxShellGlobalSearchRecordsControlComponent\n  extends ValueAccessor<IShellGlobalSearchRecord[]>\n  implements IFormControlComponent, IFormFocusable\n{\n  @Input()\n  options;\n\n  constructor(private rxModalService: RxModalService) {\n    super();\n  }\n\n  openModal(recordToEdit?: IShellGlobalSearchRecord): void {\n    this.rxModalService\n      .openModal({\n        title: 'Configure results view',\n        data: {\n          selectedRecords: this.value,\n          recordToEdit,\n          isReadOnly: this.isDisabled\n        } as IShellGlobalSearchRecordsModalConfig,\n        content: RxShellGlobalSearchRecordsModalComponent,\n        size: OpenViewActionModalSize.Large as any,\n        testID: 'configure-results-view'\n      })\n      .then((records) => {\n        this.value = records;\n      })\n      .catch(noop);\n  }\n\n  focus(): void {\n    this.openModal();\n  }\n\n  edit(record: IShellGlobalSearchRecord): void {\n    this.openModal(record);\n  }\n\n  remove(record: IShellGlobalSearchRecord): void {\n    this.value = this.value.filter((item) => item !== record);\n  }\n}\n","<adapt-button btn-type=\"tertiary\" rx-id=\"open-modal-button\" class=\"p-0 pb-1\" (click)=\"openModal()\" [hidden]=\"isDisabled\">\n  <span class=\"d-icon-plus_circle\"></span>\n  Configure results view\n</adapt-button>\n\n<ng-container *ngIf=\"value.length\">\n  <div class=\"my-1\">Records included in search results</div>\n\n  <div class=\"border px-2 py-1 mb-1 global-records-list\" *ngFor=\"let item of value\">\n    <div class=\"d-flex\">\n      <strong class=\"mr-auto mt-1 d-flex global-record-title flex-fill text-truncate\">{{ item.definitionName }}</strong>\n\n      <button\n        class=\"d-icon-left-pencil p-1\"\n        adapt-button\n        btn-type=\"tertiary\"\n        size=\"small\"\n        type=\"button\"\n        rx-id=\"edit-button\"\n        (click)=\"edit(item)\"\n      ></button>\n\n      <button\n        class=\"d-icon-left-cross_adapt p-1\"\n        adapt-button\n        btn-type=\"tertiary\"\n        size=\"small\"\n        type=\"button\"\n        rx-id=\"remove-button\"\n        *ngIf=\"!isDisabled\"\n        (click)=\"remove(item)\"\n      ></button>\n    </div>\n  </div>\n</ng-container>\n","import { Component, Injector, Input } from '@angular/core';\nimport { IShellMenuItemsWidgetConfig } from './shell-menu-items-control.types';\nimport { RX_SHELL } from '@helix/platform/view/api';\nimport { IShellMenuItem } from '../../shell-design.types';\nimport { InspectorWidgetBase } from '@helix/platform/shared/components';\nimport { IFormWidgetComponent, IPlainObject } from '@helix/platform/shared/api';\nimport { RxShellDesignModel } from '../../shell-design.model';\nimport { RxUtilityModalsService } from '@helix/platform/ui-kit';\n\n@Component({\n  selector: 'rx-shell-menu-items-control',\n  templateUrl: './shell-menu-items-control.component.html'\n})\nexport class RxShellMenuItemsControlComponent\n  extends InspectorWidgetBase<IPlainObject, RxShellDesignModel>\n  implements IFormWidgetComponent {\n  @Input()\n  options: IShellMenuItemsWidgetConfig;\n\n  @Input()\n  isDisabled: boolean;\n\n  menuGroupLabel = 'Menu group';\n\n  menuItemTypeToLabelMap = {\n    [RX_SHELL.navBar.menuItem]: 'Menu item',\n    [RX_SHELL.navBar.menuGroup]: this.menuGroupLabel,\n    [RX_SHELL.navBar.userMenu]: this.menuGroupLabel\n  };\n\n  actionNameToLabelMap = {\n    [RX_SHELL.actions.launchURL]: 'Launch URL',\n    [RX_SHELL.actions.navigateToView]: 'Navigate to view',\n    [RX_SHELL.actions.navigateToSmartReporting]: 'Navigate to Smart Reporting'\n  };\n\n  constructor(protected injector: Injector, private rxUtilityModalsService: RxUtilityModalsService) {\n    super(injector);\n  }\n\n  edit(menuItem: IShellMenuItem): void {\n    this.designerItemModel.selectMenuItem(menuItem.guid);\n  }\n\n  remove(menuItem: IShellMenuItem): void {\n    this.rxUtilityModalsService\n      .confirm('Are you sure you want to delete this menu item?')\n      .then((isConfirmed: boolean) => {\n        if (isConfirmed) {\n          this.designerItemModel.removeMenuItem(menuItem.guid);\n        }\n      });\n  }\n\n  canBeRemoved(menuItem: IShellMenuItem): boolean {\n    return menuItem.type !== RX_SHELL.navBar.userMenu && !this.isDisabled;\n  }\n\n  trackByGuid(index: number, menuItem: IShellMenuItem): string {\n    return menuItem.guid;\n  }\n}\n","<ng-container *ngIf=\"this.designerItemModel.menuItems$ | async as menuItems\">\n  <p *ngIf=\"menuItems.length === 0\">\n    No menu items have been defined. Drag and drop menu groups or menu items onto the canvas to define the menu.\n  </p>\n\n  <div *ngFor=\"let item of menuItems; trackBy: trackByGuid\">\n    <ng-container *ngTemplateOutlet=\"itemTpl; context: { $implicit: item }\"></ng-container>\n\n    <div class=\"ml-2\" *ngFor=\"let child of item.children; trackBy: trackByGuid\">\n      <ng-container *ngTemplateOutlet=\"itemTpl; context: { $implicit: child }\"></ng-container>\n    </div>\n  </div>\n</ng-container>\n\n<ng-template #itemTpl let-item>\n  <div class=\"border px-2 py-1 mb-2 d-flex align-items-start\">\n    <div class=\"mr-auto\">\n      <div class=\"font-weight-bold\">{{ item.data.menuItemName || item.data.menuGroupName }}</div>\n      <span class=\"text-secondary\">{{ menuItemTypeToLabelMap[item.type] }}</span>\n      <span class=\"text-secondary\" *ngIf=\"item.data.actionName\">\n        ({{ actionNameToLabelMap[item.data.actionName] }})</span\n      >\n    </div>\n\n    <button\n      class=\"d-icon-left-pencil p-1\"\n      adapt-button\n      btn-type=\"tertiary\"\n      size=\"small\"\n      type=\"button\"\n      rx-id=\"edit-button\"\n      (click)=\"edit(item)\"\n    ></button>\n\n    <button\n      class=\"d-icon-left-cross_adapt p-1\"\n      adapt-button\n      btn-type=\"tertiary\"\n      size=\"small\"\n      type=\"button\"\n      rx-id=\"remove-button\"\n      *ngIf=\"canBeRemoved(item)\"\n      (click)=\"remove(item)\"\n    ></button>\n  </div>\n</ng-template>\n","import { IFormControlBuilderConfig } from '@helix/platform/shared/api';\nimport { IViewDesignerComponentModel, RX_SHELL } from '@helix/platform/view/api';\nimport {\n  IViewComponentDesignValidationIssue,\n  IViewDesignerInspectorConfig,\n  ViewDesignerComponentModel\n} from '@helix/platform/view/designer';\nimport { combineLatest, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { omit } from 'lodash';\nimport { SwitchFormControlComponent } from '@helix/platform/shared/components';\nimport {\n  IShellDesignProperties,\n  IShellGlobalSearchRecord,\n  IShellMenuItem,\n  IShellProperties\n} from './shell-design.types';\nimport { RxShellGlobalSearchRecordsControlComponent } from './controls/shell-global-search-records-control/shell-global-search-records-control.component';\nimport { RxShellMenuItemsControlComponent } from './controls/shell-menu-items-control/shell-menu-items-control.component';\n\nexport class RxShellDesignModel\n  extends ViewDesignerComponentModel<IShellDesignProperties>\n  implements IViewDesignerComponentModel<IShellDesignProperties> {\n  allowAppSwitching$ = this.sandbox.getComponentPropertyValue('allowAppSwitching');\n  globalSearchEnabled$ = this.sandbox.getComponentPropertyValue('globalSearchEnabled');\n  menuItems$ = this.sandbox.getChildComponentsTree();\n\n  private childMenuItemsCount$ = this.sandbox\n    .getChildComponentGuids((component) => component.type === RX_SHELL.navBar.menuItem, true)\n    .pipe(\n      map((items: string[]) => items.length),\n      distinctUntilChanged()\n    );\n\n  static getInitialProperties(initialProperties?: IShellProperties): IShellDesignProperties {\n    const result: IShellDesignProperties = {\n      allowAppSwitching: true,\n      globalSearchDisabled: true,\n      globalSearchRecords: [],\n      ...initialProperties,\n\n      // removing custom search state if definition saved in old designer\n      // as custom state not supported anymore\n      globalSearchUseDefault: true,\n      globalSearchCustomSearchState: null\n    };\n\n    // additional inverted design field\n    result.globalSearchEnabled = !result.globalSearchDisabled;\n\n    return result;\n  }\n\n  rxInit(): void {\n    this.sandbox.getComponentPropertyValue('globalSearchDisabled').subscribe((globalSearchDisabled) => {\n      this.sandbox.updateInspectorConfig(this.getInspector(globalSearchDisabled));\n    });\n\n    this.globalSearchEnabled$.subscribe((globalSearchEnabled) => {\n      this.sandbox.updateComponentProperties({ globalSearchDisabled: !globalSearchEnabled });\n    });\n\n    combineLatest([\n      this.sandbox.getComponentPropertyValue('globalSearchRecords'),\n      this.sandbox.getComponentPropertyValue('globalSearchDisabled'),\n      this.childMenuItemsCount$\n    ]).subscribe(([globalSearchRecords, globalSearchDisabled, childMenuItemsCount]) => {\n      this.sandbox.setValidationIssues(this.validate(globalSearchRecords, globalSearchDisabled, childMenuItemsCount));\n    });\n  }\n\n  getPropertiesByName(props: IShellDesignProperties): IShellProperties {\n    return omit(props, 'globalSearchEnabled');\n  }\n\n  public removeMenuItem(guid: string): void {\n    this.sandbox.removeComponents([guid]);\n  }\n\n  public selectMenuItem(guid: string): void {\n    this.sandbox.selectComponent(guid);\n  }\n\n  private validate(\n    globalSearchRecords: IShellGlobalSearchRecord[],\n    globalSearchDisabled: boolean,\n    childMenuItemsCount: number\n  ): IViewComponentDesignValidationIssue[] {\n    const validationIssues: IViewComponentDesignValidationIssue[] = [];\n\n    if (childMenuItemsCount === 0) {\n      validationIssues.push(this.sandbox.createError('Please add at least one menu item.'));\n    }\n\n    if (!globalSearchDisabled && globalSearchRecords.length === 0) {\n      validationIssues.push(\n        this.sandbox.createError(\n          'Please include at least one record in the global search results view.',\n          'globalSearchRecords'\n        )\n      );\n    }\n\n    return validationIssues;\n  }\n\n  private getInspector(globalSearchDisabled: boolean): IViewDesignerInspectorConfig {\n    const globalSearchSectionItems: IFormControlBuilderConfig[] = [\n      {\n        name: 'globalSearchEnabled',\n        component: SwitchFormControlComponent,\n        options: {\n          label: 'Enable global search'\n        }\n      }\n    ];\n\n    if (!globalSearchDisabled) {\n      globalSearchSectionItems.push({\n        name: 'globalSearchRecords',\n        component: RxShellGlobalSearchRecordsControlComponent\n      });\n    }\n\n    return {\n      inspectorSectionConfigs: [\n        {\n          label: 'General',\n          controls: [\n            {\n              name: 'allowAppSwitching',\n              component: SwitchFormControlComponent,\n              options: {\n                label: 'Enable application launcher'\n              }\n            }\n          ]\n        },\n        {\n          label: 'Global search',\n          controls: globalSearchSectionItems\n        },\n        {\n          label: 'Menu items',\n          controls: [\n            {\n              component: RxShellMenuItemsControlComponent,\n              options: {\n                model: this\n              }\n            }\n          ]\n        }\n      ]\n    };\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { IViewComponentDropPredicateData, ViewDesignerFacade } from '@helix/platform/view/designer';\nimport { RxShellDesignModel } from './shell-design.model';\nimport { RX_SHELL } from '@helix/platform/view/api';\n\n@Component({\n  selector: 'rx-shell-design',\n  templateUrl: './shell-design.component.html',\n  styleUrls: ['./shell-design.component.scss']\n})\nexport class RxShellDesignComponent {\n  @Input()\n  model: RxShellDesignModel;\n\n  constructor(public viewDesignerFacade: ViewDesignerFacade) {}\n\n  dropPredicate(data: IViewComponentDropPredicateData): boolean {\n    return data.draggedViewComponentDescriptor.type !== RX_SHELL.navBar.action;\n  }\n\n  dropPredicateAction(data: IViewComponentDropPredicateData): boolean {\n    return data.draggedViewComponentDescriptor.type === RX_SHELL.navBar.action;\n  }\n}\n","<div class=\"shell-design d-flex align-items-start pl-2\">\n  <span class=\"a-product\">\n    <span class=\"a-product__logo logo-light logo-helix\"></span>\n    <span class=\"a-product__name\">\n      {{ viewDesignerFacade.bundleFriendlyName$ | async }}\n    </span>\n  </span>\n\n  <span class=\"a-sep\"></span>\n\n  <rx-canvas-outlet\n    class=\"shell-design-outlet d-block flex-grow-1\"\n    [class.allow-app-switch]=\"model.allowAppSwitching$ | async\"\n    [class.global-search]=\"model.globalSearchEnabled$ | async\"\n    dropListOrientation=\"horizontal\"\n    [dropPredicate]=\"dropPredicate\"\n  ></rx-canvas-outlet>\n\n  <rx-canvas-outlet\n    class=\"shell-design-outlet actions d-block flex-grow-1\"\n    [name]=\"'actions'\"\n    [dropPredicate]=\"dropPredicateAction\"\n    dropListOrientation=\"horizontal\"\n  ></rx-canvas-outlet>\n\n  <span *ngIf=\"model.globalSearchEnabled$ | async\" class=\"shell-button d-icon-search ml-auto\"></span>\n  <span *ngIf=\"model.allowAppSwitching$ | async\" class=\"shell-button d-icon-tiles ml-auto\"></span>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RxShellGlobalSearchRecordsModalComponent } from './shell-global-search-records-modal.component';\nimport { AdaptAccordionModule, AdaptButtonModule, AdaptEmptyStateModule, AdaptTreeModule } from '@bmc-ux/adapt-angular';\nimport { FormsModule } from '@angular/forms';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { RxDefinitionPickerModule } from '@helix/platform/shared/components';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [RxShellGlobalSearchRecordsModalComponent],\n  exports: [RxShellGlobalSearchRecordsModalComponent],\n  entryComponents: [RxShellGlobalSearchRecordsModalComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    DragDropModule,\n    AdaptEmptyStateModule,\n    AdaptButtonModule,\n    AdaptAccordionModule,\n    RxDefinitionPickerModule,\n    AdaptTreeModule,\n    TranslateModule\n  ]\n})\nexport class RxShellGlobalSearchRecordsModalModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RxShellGlobalSearchRecordsControlComponent } from './shell-global-search-records-control.component';\nimport { AdaptButtonModule } from '@bmc-ux/adapt-angular';\nimport { RxShellGlobalSearchRecordsModalModule } from './shell-global-search-records-modal/shell-global-search-records-modal.module';\n\n@NgModule({\n  declarations: [RxShellGlobalSearchRecordsControlComponent],\n  exports: [RxShellGlobalSearchRecordsControlComponent],\n  entryComponents: [RxShellGlobalSearchRecordsControlComponent],\n  imports: [CommonModule, AdaptButtonModule, RxShellGlobalSearchRecordsModalModule]\n})\nexport class RxShellGlobalSearchRecordsControlModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RxShellMenuItemsControlComponent } from './shell-menu-items-control.component';\nimport { AdaptButtonModule } from '@bmc-ux/adapt-angular';\n\n@NgModule({\n  declarations: [RxShellMenuItemsControlComponent],\n  imports: [CommonModule, AdaptButtonModule]\n})\nexport class RxShellMenuItemsControlModule {}\n","import { Injectable } from '@angular/core';\nimport { IDefinitionAdapter } from '@helix/platform/shared/api';\nimport {\n  IContainerViewComponentDefinition,\n  IViewDefinition,\n  IViewLayout,\n  RX_SHELL,\n  RX_VIEW_DEFINITION,\n  RxViewLayout\n} from '@helix/platform/view/api';\nimport { RxGuidService } from '@helix/platform/utils';\n\n@Injectable()\nexport class RxShellDesignAdapterService\n  implements IDefinitionAdapter<IContainerViewComponentDefinition, IViewDefinition> {\n  constructor(private rxGuidService: RxGuidService) {}\n\n  adaptDefinition(componentDefinition: IContainerViewComponentDefinition): void {\n    this.addAddUserMenu(componentDefinition);\n    this.addActionsOutlet(componentDefinition);\n  }\n\n  addAddUserMenu(componentDefinition: IContainerViewComponentDefinition): void {\n    const userMenuGuid = this.rxGuidService.generate();\n\n    const userMenuDefinition = {\n      resourceType: RX_VIEW_DEFINITION.resourceTypes.containerViewComponent,\n      guid: userMenuGuid,\n      type: RX_SHELL.navBar.userMenu,\n      layout: JSON.stringify(RxViewLayout.getViewLayoutForDefaultOutlet()),\n      componentDefinitions: [],\n      propertiesByName: {\n        menuGroupName: 'User menu'\n      }\n    };\n\n    const userMenu = componentDefinition.componentDefinitions.find(\n      (component) => component.type === RX_SHELL.navBar.userMenu\n    );\n\n    if (!userMenu) {\n      const layout: IViewLayout = JSON.parse(componentDefinition.layout);\n\n      layout.outlets[0].columns[0].children.push(userMenuGuid);\n      componentDefinition.layout = JSON.stringify(layout);\n\n      componentDefinition.componentDefinitions.push(userMenuDefinition);\n    }\n  }\n\n  addActionsOutlet(componentDefinition: IContainerViewComponentDefinition): void {\n    const layout: IViewLayout = JSON.parse(componentDefinition.layout);\n\n    if (!layout.outlets.find((outlet) => outlet.name === RX_SHELL.outlets.actions)) {\n      layout.outlets.push(RxViewLayout.getOutlet(RX_SHELL.outlets.actions));\n      componentDefinition.layout = JSON.stringify(layout);\n    }\n  }\n}\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RxShellDesignComponent } from './shell-design.component';\nimport {\n  RX_SHELL,\n  RX_VIEW_DEFINITION,\n  RxViewComponentRegistryService,\n  ViewComponentPropertyType\n} from '@helix/platform/view/api';\nimport { RX_APPLICATION, RxDefinitionAdapterRegistryService } from '@helix/platform/shared/api';\nimport { RxShellDesignModel } from './shell-design.model';\nimport { ViewDesignerCanvasModule } from '@helix/platform/view/designer';\nimport { RxShellGlobalSearchRecordsControlModule } from './controls/shell-global-search-records-control/shell-global-search-records-control.module';\nimport { RxShellMenuItemsControlModule } from './controls/shell-menu-items-control/shell-menu-items-control.module';\nimport { RxShellDesignAdapterService } from './shell-design-adapter.service';\n\n@NgModule({\n  declarations: [RxShellDesignComponent],\n  imports: [\n    CommonModule,\n    ViewDesignerCanvasModule,\n    RxShellGlobalSearchRecordsControlModule,\n    RxShellMenuItemsControlModule\n  ],\n  providers: [RxShellDesignAdapterService]\n})\nexport class RxShellDesignModule {\n  constructor(\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxDefinitionAdapterRegistryService: RxDefinitionAdapterRegistryService,\n    private rxShellDesignAdapterService: RxShellDesignAdapterService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: RX_SHELL.componentName,\n      outlets: [\n        {\n          name: RX_VIEW_DEFINITION.defaultOutletName\n        },\n        {\n          name: RX_SHELL.outlets.actions\n        }\n      ],\n      properties: [\n        {\n          name: 'allowAppSwitching',\n          designType: ViewComponentPropertyType.Boolean\n        },\n        {\n          name: 'globalSearchDisabled',\n          designType: ViewComponentPropertyType.Boolean\n        },\n        {\n          name: 'globalSearchUseDefault',\n          designType: ViewComponentPropertyType.Boolean\n        },\n        {\n          name: 'globalSearchRecords',\n          designType: ViewComponentPropertyType.Array\n        }\n      ],\n      name: 'Navigation bar',\n      hidden: true,\n      group: 'Shell navigation',\n      icon: 'layout',\n      designComponentFactory: this.componentFactoryResolver.resolveComponentFactory(RxShellDesignComponent),\n      designComponentModel: RxShellDesignModel,\n      bundleId: RX_APPLICATION.platformBundleId,\n      options: {\n        static: true\n      }\n    });\n\n    this.rxDefinitionAdapterRegistryService.registerDesignAdapter(\n      RX_SHELL.componentName,\n      this.rxShellDesignAdapterService\n    );\n  }\n}\n","import { IFormControlBuilderConfig, IPlainObject, RX_PERMISSION, Tooltip } from '@helix/platform/shared/api';\nimport {\n  IViewDefinition,\n  IViewDefinitionPermission,\n  IViewDesignerComponentModel,\n  IViewLayout,\n  OpenViewActionLaunchBehavior,\n  OpenViewActionModalSize,\n  OpenViewActionType,\n  RX_LAUNCH_BEHAVIOR,\n  RX_SHELL,\n  RxViewDefinitionCacheService,\n  RxViewLayout\n} from '@helix/platform/view/api';\nimport {\n  IComponentPermissionEditorConfig,\n  IViewComponentDesignValidationIssue,\n  IViewDesignerInspectorConfig,\n  IViewDesignerInspectorSectionConfig,\n  RxComponentPermissionEditorWidgetComponent,\n  validateCssClassName,\n  validateCssClassNames,\n  ViewDesignerComponentModel,\n  ViewDesignerFacade\n} from '@helix/platform/view/designer';\nimport {\n  IconPickerFormControlComponent,\n  ISelectFormControlOptions,\n  ITagsFormControlOptions,\n  ITextFormControlOptions,\n  SelectFormControlComponent,\n  SwitchFormControlComponent,\n  TagsFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { forEach, isEmpty, keys, map as _map, pick, reject, transform, trim } from 'lodash';\nimport { IRxShellMenuItemProperties } from './shell-menu-item-design.types';\nimport { map, pairwise, pluck, skip, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { RxOpenViewModelHelperService } from '@helix/platform/view/actions';\n\nexport interface IShellActionDescriptor {\n  name: string;\n  label: string;\n  parameters?: IFormControlBuilderConfig[];\n  requiredParams?: IPlainObject;\n  defaultParams?: IPlainObject;\n}\n\nexport class RxShellMenuItemDesignModel\n  extends ViewDesignerComponentModel<IRxShellMenuItemProperties>\n  implements IViewDesignerComponentModel<IRxShellMenuItemProperties>\n{\n  componentProperties$: Observable<IRxShellMenuItemProperties> = this.sandbox.componentProperties$;\n  label$ = this.componentProperties$.pipe(pluck('menuItemName'));\n\n  isActionItem$: Observable<boolean> = this.sandbox.getParentComponentGuid().pipe(\n    switchMap((guid) => this.sandbox.getLayout(guid)),\n    map((layout) => this.isActionItem(layout))\n  );\n\n  menuItemIcon$: Observable<string> = this.sandbox.getComponentPropertyValue('menuItemIcon');\n  iconClass$ = this.menuItemIcon$.pipe(map((className) => (className ? `d-icon-left-${className}` : '')));\n  menuItemNameLabel = 'Label';\n\n  rxViewDefinitionCacheService = this.injector.get(RxViewDefinitionCacheService);\n  viewDesignerFacade = this.injector.get(ViewDesignerFacade);\n  rxOpenViewModelHelperService = this.injector.get(RxOpenViewModelHelperService);\n\n  shellActions: { [actionName: string]: IShellActionDescriptor } = {\n    [RX_SHELL.actions.launchURL]: {\n      name: RX_SHELL.actions.launchURL,\n      label: 'Launch URL',\n      parameters: [\n        {\n          name: 'url',\n          component: TextFormControlComponent,\n          options: {\n            label: 'URL',\n            required: true\n          } as ITextFormControlOptions\n        },\n        {\n          name: 'launchBehavior',\n          component: SelectFormControlComponent,\n          options: {\n            label: 'Launch behavior',\n            options: _map(RX_LAUNCH_BEHAVIOR, (value) => ({\n              name: value.content,\n              id: value.value\n            })),\n            required: true,\n            sortAlphabetically: false\n          } as ISelectFormControlOptions\n        }\n      ],\n      requiredParams: {\n        url: 'URL',\n        launchBehavior: 'Launch behavior'\n      },\n      defaultParams: {\n        url: null,\n        launchBehavior: RX_LAUNCH_BEHAVIOR.newWindow.value\n      }\n    },\n    [RX_SHELL.actions.navigateToView]: {\n      name: RX_SHELL.actions.navigateToView,\n      label: 'Open view',\n      requiredParams: {\n        viewDefinitionName: 'View'\n      },\n      defaultParams: {\n        viewDefinitionName: null,\n        'viewParams.*': null,\n        'presentation.type': OpenViewActionType.FullWidth,\n        'presentation.launchBehavior': OpenViewActionLaunchBehavior.SameWindow,\n        'presentation.modalSize': null,\n        'presentation.title': null\n      }\n    },\n    [RX_SHELL.actions.navigateToSmartReporting]: {\n      name: RX_SHELL.actions.navigateToSmartReporting,\n      label: 'Navigate to Smart Reporting'\n    }\n  };\n\n  private viewDefinitionName$: Observable<string> = this.sandbox.getComponentPropertyValue('viewDefinitionName');\n\n  private inputParams$ = this.viewDefinitionName$.pipe(\n    switchMap((viewDefinitionName) => this.getViewInputParams(viewDefinitionName)),\n    map((params) => _map(params, 'name')),\n    tap((currentViewInputNames) => {\n      this.currentViewInputNames = currentViewInputNames;\n    })\n  );\n\n  private currentViewInputNames: string[] = [];\n\n  isInShellRoot: boolean;\n\n  private isInShellRoot$: Observable<boolean> = this.sandbox.getParentComponentGuid().pipe(\n    switchMap((guid) => this.viewDesignerFacade.getComponentType(guid)),\n    map((type) => type === RX_SHELL.componentName),\n    tap<boolean>((isInShellRoot) => (this.isInShellRoot = isInShellRoot))\n  );\n\n  static getInitialProperties(initialProperties?: IRxShellMenuItemProperties): IRxShellMenuItemProperties {\n    const result: IRxShellMenuItemProperties = {\n      menuItemName: 'New menu item',\n      menuItemIcon: null,\n      hidden: false,\n      styles: null,\n\n      actionName: RX_SHELL.actions.navigateToView,\n      'presentation.type': OpenViewActionType.FullWidth,\n      'presentation.launchBehavior': OpenViewActionLaunchBehavior.SameWindow,\n\n      ...initialProperties\n    };\n\n    // navigateToState not supported anymore, so converting to navigateToView\n    if (result.actionName === RX_SHELL.actions.navigateToState) {\n      result.actionName = RX_SHELL.actions.navigateToView;\n\n      delete result.state;\n    }\n\n    if (result.actionName === RX_SHELL.actions.navigateToView) {\n      result['presentation.modalSize'] = OpenViewActionModalSize.Medium;\n    }\n\n    return result;\n  }\n\n  static getDefaultPermissions(): IViewDefinitionPermission[] {\n    return [\n      {\n        ownerId: RX_PERMISSION.permissionDialogMetadata.viewComponent.defaultPermission,\n        type: RX_PERMISSION.permissionDialogMetadata.viewComponent.defaultPermittedAction\n      } as IViewDefinitionPermission\n    ];\n  }\n\n  rxInit(): void {\n    combineLatest([this.componentProperties$, this.inputParams$, this.isInShellRoot$, this.isActionItem$]).subscribe(\n      ([props, inputParams, isInShellRoot, isActionItem]) => {\n        this.sandbox.updateInspectorConfig(this.getInspector(props, inputParams, isInShellRoot, isActionItem));\n        this.sandbox.setValidationIssues(this.validate(props));\n      }\n    );\n\n    // clear view input params after viewDefinitionName is changed\n    this.viewDefinitionName$\n      .pipe(skip(1), withLatestFrom(this.componentProperties$))\n      .subscribe(([viewDefinitionName, props]) => {\n        const viewParams = this.getEmptyViewParams(props);\n\n        if (!isEmpty(viewParams)) {\n          this.sandbox.updateComponentProperties(viewParams);\n        }\n      });\n\n    this.sandbox.getComponentPropertyValue('menuItemName').subscribe((menuGroupName) => {\n      this.sandbox.setBreadcrumbs(menuGroupName);\n    });\n\n    // clear previous action properties after actionName is changed\n    this.sandbox\n      .getComponentPropertyValue('actionName')\n      .pipe(pairwise(), withLatestFrom(this.componentProperties$))\n      .subscribe(([[prevActionName, actionName], props]) => {\n        const prevProps = this.getActionDefaultProps(prevActionName, props);\n        const nextProps = this.getActionDefaultProps(actionName, props);\n        const result = { ...prevProps, ...nextProps };\n\n        if (!isEmpty(result)) {\n          this.sandbox.updateComponentProperties(result);\n        }\n      });\n  }\n\n  getPropertiesByName(props: IRxShellMenuItemProperties): IRxShellMenuItemProperties {\n    const componentProps = ['menuItemName', 'menuItemIcon', 'hidden', 'styles', 'actionName'];\n    const viewParams =\n      props.actionName === RX_SHELL.actions.navigateToView\n        ? this.currentViewInputNames.map((name) => `viewParams.${name}`)\n        : [];\n\n    const actionProps = reject(this.getActionProps(props.actionName, props), (prop) => {\n      return props['presentation.type'] === OpenViewActionType.FullWidth\n        ? prop === 'presentation.modalSize' || prop === 'presentation.title'\n        : prop === 'presentation.launchBehavior';\n    });\n\n    return pick(props, ...componentProps, ...actionProps, ...viewParams) as IRxShellMenuItemProperties;\n  }\n\n  private getEmptyViewParams(props: IRxShellMenuItemProperties): IPlainObject {\n    return transform(\n      props,\n      (result, value, key) => {\n        if (key.startsWith('viewParams')) {\n          result[key] = null;\n        }\n      },\n      {}\n    );\n  }\n\n  private getActionDefaultProps(actionName: string, props: IRxShellMenuItemProperties): IPlainObject {\n    const currentAction = this.shellActions[actionName];\n\n    return transform(\n      currentAction.defaultParams,\n      (res, value: any, name: string) => {\n        if (name.endsWith('.*')) {\n          const key = name.replace('*', '');\n\n          forEach(props, (propValue, propName) => {\n            if (propName.startsWith(key)) {\n              res[propName] = value;\n            }\n          });\n        } else {\n          res[name] = value;\n        }\n      },\n      {}\n    );\n  }\n\n  private getActionProps(actionName: string, props: IRxShellMenuItemProperties): string[] {\n    const currentAction = this.shellActions[actionName];\n\n    return transform(\n      currentAction.defaultParams,\n      (res, value: any, name: string) => {\n        if (!name.endsWith('.*')) {\n          res.push(name);\n        }\n      },\n      []\n    );\n  }\n\n  private getInspector(\n    props: IRxShellMenuItemProperties,\n    viewInputParamNames: string[],\n    isInShellRoot: boolean,\n    isActionItem = false\n  ): IViewDesignerInspectorConfig {\n    const inspector: IViewDesignerInspectorConfig = {\n      inspectorSectionConfigs: [\n        {\n          label: 'General',\n          controls: [\n            {\n              name: 'menuItemName',\n              component: TextFormControlComponent,\n              options: {\n                label: this.menuItemNameLabel,\n                required: true\n              }\n            },\n            {\n              name: 'hidden',\n              component: SwitchFormControlComponent,\n              options: {\n                label: 'Hidden'\n              }\n            },\n            {\n              name: 'styles',\n              component: TagsFormControlComponent,\n              options: {\n                label: 'CSS classes',\n                placeholder: 'Add CSS classes',\n                tooltip: new Tooltip('Enter CSS class names to apply to this view component.'),\n                errorCheck: validateCssClassName\n              } as ITagsFormControlOptions\n            },\n            {\n              component: RxComponentPermissionEditorWidgetComponent,\n              options: {\n                label: 'Permissions',\n                type: 'view',\n                componentGuid: this.sandbox.guid\n              } as IComponentPermissionEditorConfig\n            }\n          ]\n        }\n      ]\n    };\n\n    const menuItemIconControl = {\n      name: 'menuItemIcon',\n      component: IconPickerFormControlComponent,\n      options: {\n        label: 'Icon'\n      }\n    };\n\n    if (!isInShellRoot || isActionItem) {\n      inspector.inspectorSectionConfigs[0].controls.splice(1, 0, menuItemIconControl);\n    }\n\n    const actionSection: IViewDesignerInspectorSectionConfig = {\n      label: 'Action',\n      controls: [\n        {\n          name: 'actionName',\n          component: SelectFormControlComponent,\n          options: {\n            label: 'Action name',\n            options: _map(this.shellActions, (actionDescriptor) => ({\n              name: actionDescriptor.label,\n              id: actionDescriptor.name\n            }))\n          } as ISelectFormControlOptions\n        }\n      ]\n    };\n\n    inspector.inspectorSectionConfigs.push(actionSection);\n\n    if (props.actionName) {\n      const actionDescriptor = this.shellActions[props.actionName];\n\n      if (actionDescriptor?.parameters?.length) {\n        actionSection.controls.push(...actionDescriptor.parameters);\n      }\n\n      if (props.actionName === RX_SHELL.actions.navigateToView) {\n        actionSection.controls.push(\n          ...this.rxOpenViewModelHelperService.getOpenViewInspector(\n            viewInputParamNames.map((name) => ({ name })),\n            props['presentation.type'],\n            props['presentation.modalSize'],\n            this.expressionConfigurator\n          )\n        );\n      }\n    }\n\n    return inspector;\n  }\n\n  protected validate(props: IRxShellMenuItemProperties): IViewComponentDesignValidationIssue[] {\n    const validationIssues: IViewComponentDesignValidationIssue[] = [];\n\n    if (!trim(props.menuItemName)) {\n      validationIssues.push(this.sandbox.createError('Label cannot be blank.', 'menuItemName'));\n    }\n\n    validationIssues.push(...this.validateActionParams(props), ...validateCssClassNames(props.styles));\n\n    return validationIssues;\n  }\n\n  private validateActionParams(props: IRxShellMenuItemProperties): IViewComponentDesignValidationIssue[] {\n    const validationIssues: IViewComponentDesignValidationIssue[] = [];\n    const currentAction = this.shellActions[props.actionName];\n\n    (keys(currentAction.requiredParams) || [])\n      .filter((param) => !props[param])\n      .forEach((param) => {\n        validationIssues.push(\n          this.sandbox.createError(`${currentAction.requiredParams[param] || param} cannot be blank.`, param)\n        );\n      });\n\n    return validationIssues;\n  }\n\n  private getViewInputParams(viewDefinitionName: string): Observable<IViewDefinition['inputParams']> {\n    return viewDefinitionName\n      ? this.rxViewDefinitionCacheService.getViewDefinition(viewDefinitionName).pipe(pluck('inputParams'))\n      : of([]);\n  }\n\n  private isActionItem(layout: IViewLayout): boolean {\n    const actionOutlet = layout?.outlets.find((outlet) => outlet.name === RX_SHELL.outlets.actions);\n\n    return (actionOutlet && RxViewLayout.outletHasChild(actionOutlet, this.sandbox.guid)) || false;\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { RxShellMenuItemDesignModel } from './shell-menu-item-design.model';\n@Component({\n  selector: 'rx-shell-menu-item-design',\n  templateUrl: './shell-menu-item-design.component.html',\n  styleUrls: ['./shell-menu-item-design.component.scss']\n})\nexport class RxShellMenuItemDesignComponent {\n  @Input()\n  model: RxShellMenuItemDesignModel;\n}\n","<span class=\"label\" [ngClass]=\"model.iconClass$ | async\">{{ model.label$ | async }}</span>\n","import { Observable, of } from 'rxjs';\nimport {\n  ExpressionOperatorGroup,\n  ExpressionOperatorRowsByGroup,\n  IDataDictionary,\n  IExpressionConfiguratorDefaultPropertyConfig,\n  RxExpressionConfigurator\n} from '@helix/platform/shared/api';\n\nexport class RxShellMenuItemExpressionConfigurator extends RxExpressionConfigurator {\n  commonDataDictionary$: Observable<IDataDictionary> = of([\n    {\n      label: 'General',\n      expanded: true,\n      children: [\n        {\n          label: 'Current person ID',\n          expression: '${keywords.personId}'\n        },\n        {\n          label: 'Current user ID',\n          expression: '${keywords.userId}'\n        }\n      ]\n    }\n  ]);\n\n  getDefaultConfig(): IExpressionConfiguratorDefaultPropertyConfig {\n    return {\n      ...super.getDefaultConfig(),\n      operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.AllClient)\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { get } from 'lodash';\n\nimport { IDefinitionAdapter } from '@helix/platform/shared/api';\nimport { IContainerViewComponentDefinition, IViewDefinition, RX_LEGACY_ICONS } from '@helix/platform/view/api';\n\n@Injectable()\nexport class RxShellMenuItemDesignAdapterService\n  implements IDefinitionAdapter<IContainerViewComponentDefinition, IViewDefinition> {\n  adaptDefinition(componentDefinition: IContainerViewComponentDefinition): void {\n    if (componentDefinition.propertiesByName.menuItemIcon) {\n      componentDefinition.propertiesByName.menuItemIcon = get(\n        RX_LEGACY_ICONS,\n        componentDefinition.propertiesByName.menuItemIcon,\n        componentDefinition.propertiesByName.menuItemIcon\n      );\n    }\n  }\n}\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RX_SHELL, RxViewComponentRegistryService, ViewComponentPropertyType } from '@helix/platform/view/api';\nimport { RX_APPLICATION, RxDefinitionAdapterRegistryService } from '@helix/platform/shared/api';\n\nimport { RxShellMenuItemDesignComponent } from './shell-menu-item-design.component';\nimport { RxShellMenuItemDesignModel } from './shell-menu-item-design.model';\nimport { RxShellMenuItemExpressionConfigurator } from './shell-menu-item-expression-configurator.class';\nimport { RxShellMenuItemDesignAdapterService } from './shell-menu-item-design-adapter.service';\n\n@NgModule({\n  declarations: [RxShellMenuItemDesignComponent],\n  imports: [CommonModule],\n  providers: [RxShellMenuItemDesignAdapterService]\n})\nexport class RxShellMenuItemDesignModule {\n  constructor(\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxDefinitionAdapterRegistryService: RxDefinitionAdapterRegistryService,\n    private rxShellMenuItemDesignAdapterService: RxShellMenuItemDesignAdapterService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: RX_SHELL.navBar.menuItem,\n      properties: [\n        {\n          name: 'menuItemName',\n          localizable: true\n        },\n        {\n          name: 'hidden',\n          designType: ViewComponentPropertyType.Boolean\n        }\n      ],\n      name: 'Menu item',\n      group: 'Shell navigation',\n      icon: 'list',\n      index: 2,\n      designComponentFactory: this.componentFactoryResolver.resolveComponentFactory(RxShellMenuItemDesignComponent),\n      designComponentModel: RxShellMenuItemDesignModel,\n      bundleId: RX_APPLICATION.platformBundleId,\n      expressionConfigurator: RxShellMenuItemExpressionConfigurator\n    });\n\n    this.rxDefinitionAdapterRegistryService.registerDesignAdapter(\n      RX_SHELL.navBar.menuItem,\n      this.rxShellMenuItemDesignAdapterService\n    );\n  }\n}\n","import { RX_PERMISSION, Tooltip } from '@helix/platform/shared/api';\nimport { IViewDefinitionPermission, IViewDesignerComponentModel } from '@helix/platform/view/api';\nimport {\n  IComponentPermissionEditorConfig,\n  IViewComponentDesignValidationIssue,\n  IViewDesignerInspectorConfig,\n  RxComponentPermissionEditorWidgetComponent,\n  validateCssClassName,\n  validateCssClassNames,\n  ViewDesignerComponentModel\n} from '@helix/platform/view/designer';\nimport {\n  ITagsFormControlOptions,\n  SwitchFormControlComponent,\n  TagsFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { IRxShellMenuGroupProps } from './shell-menu-group-design.types';\nimport { trim } from 'lodash';\nimport { pluck } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nexport class RxShellMenuGroupDesignModel\n  extends ViewDesignerComponentModel<IRxShellMenuGroupProps>\n  implements IViewDesignerComponentModel<IRxShellMenuGroupProps> {\n  componentProperties$: Observable<IRxShellMenuGroupProps> = this.sandbox.componentProperties$;\n  label$ = this.componentProperties$.pipe(pluck('menuGroupName'));\n\n  static getInitialProperties(initialProperties?: IRxShellMenuGroupProps): IRxShellMenuGroupProps {\n    return {\n      menuGroupName: 'Menu group',\n      hidden: false,\n      styles: null,\n      ...initialProperties\n    };\n  }\n\n  static getDefaultPermissions(): IViewDefinitionPermission[] {\n    const defaultPermissions: IViewDefinitionPermission[] = [\n      {\n        ownerId: RX_PERMISSION.permissionDialogMetadata.viewComponent.defaultPermission,\n        type: RX_PERMISSION.permissionDialogMetadata.viewComponent.defaultPermittedAction\n      } as IViewDefinitionPermission\n    ];\n\n    return defaultPermissions;\n  }\n\n  rxInit(): void {\n    this.sandbox.updateInspectorConfig(this.getInspector());\n\n    this.componentProperties$.subscribe((props: IRxShellMenuGroupProps) => {\n      this.sandbox.setValidationIssues(this.validate(props));\n    });\n\n    this.sandbox.getComponentPropertyValue('menuGroupName').subscribe((menuGroupName) => {\n      this.sandbox.setBreadcrumbs(menuGroupName);\n    });\n  }\n\n  private validate(props: IRxShellMenuGroupProps): IViewComponentDesignValidationIssue[] {\n    const validationIssues: IViewComponentDesignValidationIssue[] = [];\n\n    if (!trim(props.menuGroupName)) {\n      validationIssues.push(this.sandbox.createError('Label cannot be blank.', 'menuGroupName'));\n    }\n\n    validationIssues.push(...validateCssClassNames(props.styles));\n\n    return validationIssues;\n  }\n\n  private getInspector(): IViewDesignerInspectorConfig {\n    return {\n      inspectorSectionConfigs: [\n        {\n          label: 'Properties',\n          controls: [\n            {\n              name: 'menuGroupName',\n              component: TextFormControlComponent,\n              options: {\n                label: 'Label',\n                required: true\n              }\n            },\n            {\n              name: 'hidden',\n              component: SwitchFormControlComponent,\n              options: {\n                label: 'Hidden'\n              }\n            },\n            {\n              name: 'styles',\n              component: TagsFormControlComponent,\n              options: {\n                label: 'CSS classes',\n                placeholder: 'Add CSS classes',\n                tooltip: new Tooltip('Enter CSS class names to apply to this view component.'),\n                errorCheck: validateCssClassName\n              } as ITagsFormControlOptions\n            },\n            {\n              component: RxComponentPermissionEditorWidgetComponent,\n              options: {\n                label: 'Permissions',\n                type: 'view',\n                componentGuid: this.sandbox.guid\n              } as IComponentPermissionEditorConfig\n            }\n          ]\n        }\n      ]\n    };\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { RxShellMenuGroupDesignModel } from './shell-menu-group-design.model';\nimport { IViewComponentDropPredicateData } from '@helix/platform/view/designer';\nimport { RX_SHELL } from '@helix/platform/view/api';\n\n@Component({\n  selector: 'rx-shell-menu-group-design',\n  templateUrl: './shell-menu-group-design.component.html',\n  styleUrls: ['./shell-menu-group-design.component.scss']\n})\nexport class RxShellMenuGroupDesignComponent {\n  @Input()\n  model: RxShellMenuGroupDesignModel;\n\n  dropPredicate(data: IViewComponentDropPredicateData): boolean {\n    return data.draggedViewComponentDescriptor.type === RX_SHELL.navBar.menuItem;\n  }\n}\n","<div adaptDropdown [autoClose]=\"false\" [placement]=\"['bottom-left']\">\n  <div class=\"label-wrapper pr-0\" adaptDropdownToggle>\n    <span class=\"label d-icon-right-angle_down\">{{ model.label$ | async }}</span>\n  </div>\n\n  <rx-canvas-outlet adaptDropdownMenu [dropPredicate]=\"dropPredicate\"></rx-canvas-outlet>\n</div>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RxShellMenuGroupDesignComponent } from './shell-menu-group-design.component';\nimport {\n  RX_SHELL,\n  RX_VIEW_DEFINITION,\n  RxViewComponentRegistryService,\n  ViewComponentPropertyType\n} from '@helix/platform/view/api';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxShellMenuGroupDesignModel } from './shell-menu-group-design.model';\nimport { RxComponentPermissionEditorWidgetModule, ViewDesignerCanvasModule } from '@helix/platform/view/designer';\nimport { AdaptDropdownModule } from '@bmc-ux/adapt-angular';\n\n@NgModule({\n  declarations: [RxShellMenuGroupDesignComponent],\n  imports: [CommonModule, ViewDesignerCanvasModule, RxComponentPermissionEditorWidgetModule, AdaptDropdownModule]\n})\nexport class RxShellMenuGroupDesignModule {\n  constructor(\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {\n    rxViewComponentRegistryService.register({\n      type: RX_SHELL.navBar.menuGroup,\n      properties: [\n        {\n          name: 'menuGroupName',\n          localizable: true\n        },\n        {\n          name: 'hidden',\n          designType: ViewComponentPropertyType.Boolean\n        }\n      ],\n      name: 'Menu',\n      group: 'Shell navigation',\n      icon: 'app_list',\n      index: 1,\n      designComponentFactory: this.componentFactoryResolver.resolveComponentFactory(RxShellMenuGroupDesignComponent),\n      designComponentModel: RxShellMenuGroupDesignModel,\n      bundleId: RX_APPLICATION.platformBundleId,\n      outlets: [\n        {\n          name: RX_VIEW_DEFINITION.defaultOutletName\n        }\n      ]\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { IViewComponentDropPredicateData } from '@helix/platform/view/designer';\nimport { RX_SHELL } from '@helix/platform/view/api';\n@Component({\n  selector: 'rx-shell-user-menu-design',\n  templateUrl: './shell-user-menu-design.component.html',\n  styleUrls: ['./shell-user-menu-design.component.scss']\n})\nexport class RxShellUserMenuDesignComponent {\n  dropPredicate(data: IViewComponentDropPredicateData): boolean {\n    return data.draggedViewComponentDescriptor.type === RX_SHELL.navBar.menuItem;\n  }\n}\n","<div adaptDropdown [autoClose]=\"false\" [placement]=\"['bottom-right']\">\n  <div class=\"label-wrapper pr-0\" adaptDropdownToggle>\n    <span class=\"label d-icon-user_circle d-icon-right-angle_down\"></span>\n  </div>\n\n  <div adaptDropdownMenu class=\"drop\">\n    <rx-canvas-outlet [dropPredicate]=\"dropPredicate\"></rx-canvas-outlet>\n    <div class=\"d-icon-left-wrench_o px-3 pt-2\">My Preferences</div>\n    <div class=\"d-icon-left-exit px-3 py-2\">Sign Out</div>\n  </div>\n</div>\n","import { IPlainObject } from '@helix/platform/shared/api';\nimport { IViewDesignerComponentModel } from '@helix/platform/view/api';\nimport { ViewDesignerComponentModel } from '@helix/platform/view/designer';\n\nexport class RxShellUserMenuDesignModel\n  extends ViewDesignerComponentModel<IPlainObject>\n  implements IViewDesignerComponentModel<IPlainObject> {}\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RxShellUserMenuDesignComponent } from './shell-user-menu-design.component';\nimport { RX_SHELL, RX_VIEW_DEFINITION, RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxShellUserMenuDesignModel } from './shell-user-menu-design.model';\nimport { ViewDesignerCanvasModule } from '@helix/platform/view/designer';\nimport { AdaptDropdownModule } from '@bmc-ux/adapt-angular';\n\n@NgModule({\n  declarations: [RxShellUserMenuDesignComponent],\n  imports: [CommonModule, ViewDesignerCanvasModule, AdaptDropdownModule]\n})\nexport class RxShellUserMenuDesignModule {\n  constructor(\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {\n    rxViewComponentRegistryService.register({\n      type: RX_SHELL.navBar.userMenu,\n      properties: [],\n      name: 'User menu',\n      hidden: true,\n      group: 'Shell navigation',\n      icon: 'cube_square',\n      designComponentFactory: this.componentFactoryResolver.resolveComponentFactory(RxShellUserMenuDesignComponent),\n      designComponentModel: RxShellUserMenuDesignModel,\n      bundleId: RX_APPLICATION.platformBundleId,\n      outlets: [\n        {\n          name: RX_VIEW_DEFINITION.defaultOutletName\n        }\n      ],\n      options: {\n        static: true\n      }\n    });\n  }\n}\n","import { RxShellMenuItemDesignModel } from '../shell-menu-item/shell-menu-item-design.model';\nimport { map } from 'rxjs/operators';\nimport { IRxShellMenuItemProperties } from '../shell-menu-item/shell-menu-item-design.types';\nimport { IViewComponentDesignValidationIssue } from '@helix/platform/view/designer';\n\nexport class RxShellActionDesignModel extends RxShellMenuItemDesignModel {\n  iconClass$ = this.menuItemIcon$.pipe(map((className) => (className ? `d-icon-${className}` : '')));\n  menuItemNameLabel = 'Tooltip';\n\n  static getInitialProperties(initialProperties?: IRxShellMenuItemProperties): IRxShellMenuItemProperties {\n    const result = super.getInitialProperties({\n      ...initialProperties,\n      menuItemName: initialProperties?.menuItemName ?? 'New action'\n    });\n\n    result.menuItemIcon = result.menuItemIcon || 'triangle_right_circle_o';\n\n    return result;\n  }\n\n  validate(props: IRxShellMenuItemProperties): IViewComponentDesignValidationIssue[] {\n    const validationIssues = super.validate(props);\n\n    if (!props.menuItemIcon) {\n      validationIssues.push(this.sandbox.createError(`Icon cannot be blank.`, 'menuItemIcon'));\n    }\n\n    return validationIssues;\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { RxShellActionDesignModel } from './shell-action-design.model';\n\n@Component({\n  selector: 'rx-shell-action-design',\n  templateUrl: './shell-action-design.component.html',\n  styleUrls: ['./shell-action-design.component.scss']\n})\nexport class RxShellActionDesignComponent {\n  @Input()\n  model: RxShellActionDesignModel;\n}\n","<span class=\"label\" [ngClass]=\"model.iconClass$ | async\" [title]=\"model.label$ | async\"></span>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RxShellActionDesignComponent } from './shell-action-design.component';\nimport { RX_SHELL, RxViewComponentRegistryService, ViewComponentPropertyType } from '@helix/platform/view/api';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxShellActionDesignModel } from './shell-action-design.model';\nimport { RxShellMenuItemExpressionConfigurator } from '../shell-menu-item/shell-menu-item-expression-configurator.class';\n\n@NgModule({\n  declarations: [RxShellActionDesignComponent],\n  imports: [CommonModule]\n})\nexport class RxShellActionDesignModule {\n  constructor(\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {\n    rxViewComponentRegistryService.register({\n      type: RX_SHELL.navBar.action,\n      properties: [\n        {\n          name: 'menuItemName',\n          localizable: true\n        },\n        {\n          name: 'hidden',\n          designType: ViewComponentPropertyType.Boolean\n        }\n      ],\n      name: 'Action',\n      group: 'Shell navigation',\n      icon: 'triangle_right_circle_o',\n      index: 3,\n      designComponentFactory: this.componentFactoryResolver.resolveComponentFactory(RxShellActionDesignComponent),\n      designComponentModel: RxShellActionDesignModel,\n      bundleId: RX_APPLICATION.platformBundleId,\n      expressionConfigurator: RxShellMenuItemExpressionConfigurator\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { RxShellDesignModule } from './shell/shell-design.module';\nimport { RxShellMenuItemDesignModule } from './shell-menu-item/shell-menu-item-design.module';\nimport { RxShellMenuGroupDesignModule } from './shell-menu-group/shell-menu-group-design.module';\nimport { RxShellUserMenuDesignModule } from './shell-user-menu/shell-user-menu-design.module';\nimport { RxShellActionDesignModule } from './shell-action/shell-action-design.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RxShellDesignModule,\n    RxShellMenuItemDesignModule,\n    RxShellMenuGroupDesignModule,\n    RxShellUserMenuDesignModule,\n    RxShellActionDesignModule\n  ]\n})\nexport class RxShellComponentsModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RxShellDesignerPageComponent } from './shell-designer-page.component';\nimport { ViewDesignerModule } from '@helix/platform/view/designer';\nimport { RxShellComponentsModule } from './components/shell-components.module';\n\n@NgModule({\n  declarations: [RxShellDesignerPageComponent],\n  exports: [RxShellDesignerPageComponent],\n  imports: [CommonModule, ViewDesignerModule, RxShellComponentsModule]\n})\nexport class RxShellDesignerPageModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["_map"],"mappings":"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"}