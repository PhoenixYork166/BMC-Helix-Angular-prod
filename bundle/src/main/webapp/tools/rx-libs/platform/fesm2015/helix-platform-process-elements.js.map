{"version":3,"file":"helix-platform-process-elements.js","sources":["../../../../libs/platform/process/elements/end-event/end-event.service.ts","../../../../libs/platform/process/elements/shared/process-shape/process-shape.mixin.ts","../../../../libs/platform/process/elements/end-event/end-event.class.ts","../../../../libs/platform/process/elements/shared/process-shape/process-shape-view.mixin.ts","../../../../libs/platform/process/elements/end-event/end-event-view.class.ts","../../../../libs/platform/process/elements/end-event/end-event-registration.module.ts","../../../../libs/platform/process/elements/process/process.class.ts","../../../../libs/platform/process/elements/process/process.service.ts","../../../../libs/platform/process/elements/shared/components/expression-input-map-inspector-widget/expression-input-map-inspector-widget.component.ts","../../../../libs/platform/process/elements/shared/components/expression-input-map-inspector-widget/expression-input-map-inspector-widget.component.html","../../../../libs/platform/process/elements/process-action/process-action-expression-configurator.class.ts","../../../../libs/platform/process/elements/process-action/process-action.service.ts","../../../../libs/platform/process/elements/process-action/process-action.class.ts","../../../../libs/platform/process/elements/process-action/process-action-view.class.ts","../../../../libs/platform/process/elements/process-action/process-action-registration.module.ts","../../../../libs/platform/process/elements/shared/components/expression-input-map-inspector-widget/expression-input-map-inspector-widget.module.ts","../../../../libs/platform/process/elements/start-event/start-event.service.ts","../../../../libs/platform/process/elements/start-event/start-event.class.ts","../../../../libs/platform/process/elements/start-event/start-event-view.class.ts","../../../../libs/platform/process/elements/start-event/start-event-registration.module.ts","../../../../libs/platform/process/elements/process-element.service.ts","../../../../libs/platform/process/elements/process-elements.module.ts","../../../../libs/platform/process/elements/process-shapes.ts","../../../../libs/platform/process/elements/designer-cell-highlighter.class.ts","../../../../libs/platform/process/elements/rappid-paper.service.ts","../../../../libs/platform/process/elements/helix-platform-process-elements.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable, of } from 'rxjs';\nimport { isEmpty, some } from 'lodash';\n\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { RxStringService } from '@helix/platform/utils';\nimport {\n  IDataDictionaryBranch,\n  IDesignerElementService,\n  IFormBuilderConfig,\n  IPlainObject\n} from '@helix/platform/shared/api';\nimport {\n  ITextareaFormControlOptions,\n  ITextFormControlOptions,\n  TextareaFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { IProcessFlowElementDefinition, RX_PROCESS_DEFINITION } from '@helix/platform/process/api';\n\nimport { IEndEventModel } from './end-event.interfaces';\n\ndeclare var joint: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxEndEventService implements IDesignerElementService<IProcessFlowElementDefinition, IEndEventModel> {\n  constructor(private rxStringService: RxStringService, private translateService: TranslateService) {}\n\n  getDefinitionFromModel(model: IEndEventModel): Partial<IProcessFlowElementDefinition> {\n    return {\n      description: model.description,\n      guid: model.guid,\n      name: model.name,\n      resourceType: model.resourceType\n    };\n  }\n\n  // TODO-VS: add position and size inspector groups\n  getInspectorConfig(): IFormBuilderConfig {\n    return [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n        controls: [\n          {\n            name: 'label',\n            component: TextFormControlComponent,\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.label.label')\n            } as ITextFormControlOptions\n          },\n          {\n            name: 'description',\n            component: TextareaFormControlComponent,\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label'),\n              rows: 3\n            } as ITextareaFormControlOptions\n          },\n          {\n            name: 'guid',\n            component: TextFormControlComponent,\n            isDisabled: true,\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.id.label')\n            } as ITextareaFormControlOptions\n          }\n        ]\n      }\n    ];\n  }\n\n  // TODO-VS: update logic and types\n  getModelFromDefinition(definition?: IProcessFlowElementDefinition): IEndEventModel {\n    let elementModel = {\n      description: '',\n      guid: null,\n      label: '',\n      name: RX_PROCESS_DEFINITION.processElementDisplayNames.endEvent,\n      resourceType: RX_PROCESS_DEFINITION.processElementResourceTypes.endEvent,\n      type: RX_PROCESS_DEFINITION.processElementTypes.endEvent\n    };\n\n    if (definition) {\n      elementModel = {\n        ...elementModel,\n        description: definition.description,\n        guid: definition.guid,\n        label: definition.name,\n        name: definition.name,\n        resourceType: definition.resourceType\n      };\n    }\n\n    return elementModel;\n  }\n\n  getShape(options: IPlainObject): any {\n    return new joint.shapes.rx.EndEvent({\n      elementModel: this.getModelFromDefinition(),\n      position: options.position\n    });\n  }\n\n  setCommonDataDictionaryBranch(guid: string, dataDictionaryBranch: Observable<IDataDictionaryBranch>): void {}\n\n  validate(model: IEndEventModel, availableCells: any): Observable<IValidationIssue[]> {\n    const validationIssues: IValidationIssue[] = [];\n\n    const inboundLinks = availableCells.filter((cell) => cell.prop('targetNode') === model.guid);\n\n    if (inboundLinks.length < 1) {\n      validationIssues.push({\n        type: ValidationIssueType.Warning,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.is-required.message', {\n          propertyName: this.translateService.instant(\n            'com.bmc.arsys.rx.client.process-designer.inbound-sequence-flow.label'\n          )\n        }),\n        data: {\n          guid: model.guid,\n          inspectorTabIndex: 1\n        }\n      });\n    }\n\n    const outboundLinks = availableCells.filter((cell) => cell.prop('sourceNode') === model.guid);\n\n    if (!isEmpty(outboundLinks)) {\n      validationIssues.push({\n        type: ValidationIssueType.Warning,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.process-designer.elements.end-event.validation.outbound-sequence-flow.message'\n        ),\n        data: {\n          guid: model.guid,\n          inspectorTabIndex: 1\n        }\n      });\n    }\n\n    if (this.rxStringService.isEmptySafe(model.label)) {\n      if (some(availableCells, (cell) => cell.prop('label') === model.label)) {\n        validationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.validation.must-be-unique.message',\n            {\n              propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.label.label')\n            }\n          ),\n          data: {\n            guid: model.guid,\n            inspectorTabIndex: 1,\n            propertyName: 'label'\n          }\n        });\n      }\n    }\n\n    return of(validationIssues);\n  }\n}\n","import { chain, escape, isEmpty, omit, truncate } from 'lodash';\n\nimport { Constructor, RxIdService } from '@helix/platform/utils';\nimport { RxCommandManagerService, RxRootInjector } from '@helix/platform/shared/api';\n\ndeclare var joint: any;\n\nexport function RxProcessShapeMixin<TBase extends Constructor>(Base: TBase) {\n  return class RxProcessShape extends Base {\n    labelPath = 'content';\n\n    initialize(config: any): void {\n      // @ts-ignore\n      super.initialize(config);\n\n      // @ts-ignore\n      this.on('change:size', this.onSizeChange);\n      // @ts-ignore\n      this.on('change:position', this.onPositionChange);\n      // @ts-ignore\n      this.on('change:id', this.onIdChange);\n      // @ts-ignore\n      this.on('change:elementModel', this.onElementModelChange);\n\n      // @ts-ignore\n      this.prop('elementModel/guid', RxRootInjector.injector.get(RxIdService).get(this.get('id')));\n\n      // @ts-ignore\n      const labelPath = this.get('labelPath') || 'content';\n      // @ts-ignore\n      this.prop('elementModel/label', this.prop(labelPath));\n    }\n\n    getCommandManager(): any {\n      return RxRootInjector.injector.get(RxCommandManagerService).get();\n    }\n\n    canBeEmbedded(parentView, paper): boolean {\n      const hasNeighbors = !isEmpty(paper.model.getNeighbors(this));\n\n      // @ts-ignore\n      const hasBoundaryElementsWithNeighbors = chain(this.getEmbeddedCells())\n        .filter({ isBoundaryEvent: true })\n        .some((embeddedCell) => !isEmpty(paper.model.getNeighbors(embeddedCell)));\n\n      return !hasNeighbors && !hasBoundaryElementsWithNeighbors;\n    }\n\n    canEmbedElement(childView, paper): boolean {\n      return false;\n    }\n\n    getLabel(): string {\n      // @ts-ignore\n      return this.prop('elementModel/label');\n    }\n\n    getLayout(): string[] {\n      // @ts-ignore\n      return omit(this.toJSON(), [\n        'elementModel',\n        'embeds',\n        'layout',\n        'parentProcessDefinition',\n        'ownerProcessDefinitionName',\n        'localizableProperties',\n        'inputMapFields'\n      ]);\n    }\n\n    getParentId(): string {\n      // @ts-ignore\n      return this.get('parent');\n    }\n\n    onActivityTypeChange(element, type): void {\n      switch (type) {\n        case 'task':\n          element.attr({\n            '.inner': {\n              visibility: 'hidden'\n            },\n            '.outer': {\n              'stroke-width': 2, //changed original value 1 to new value 2\n              'stroke-dasharray': 'none'\n            },\n            path: {\n              ref: '.outer'\n            },\n            image: {\n              ref: '.outer'\n            },\n            rect: {\n              rx: 4,\n              ry: 4\n            }\n          });\n\n          break;\n\n        case 'event-sub-process':\n          element.attr({\n            '.inner': {\n              visibility: 'hidden'\n            },\n            '.outer': {\n              'stroke-width': 2, //changed original value 1 to new value 2\n              'stroke-dasharray': '1,2'\n            },\n            path: {\n              ref: '.outer'\n            },\n            image: {\n              ref: '.outer'\n            },\n            rect: {\n              rx: 4,\n              ry: 4\n            }\n          });\n\n          break;\n\n        case 'call-activity':\n          element.attr({\n            '.inner': {\n              visibility: 'hidden'\n            },\n            '.outer': {\n              'stroke-width': 4, //changed original value 5 to new value 4\n              'stroke-dasharray': 'none'\n            },\n            path: {\n              ref: '.outer'\n            },\n            image: {\n              ref: '.outer'\n            },\n            rect: {\n              rx: 4,\n              ry: 4\n            }\n          });\n\n          break;\n      }\n    }\n\n    updateContent(): void {\n      // @ts-ignore\n      const content = this.get('content');\n      // @ts-ignore\n      const label = this.id ? content : truncate(content, { length: 20 });\n\n      const tooltip = label === content ? '' : content;\n\n      if (joint.env.test('svgforeignobject')) {\n        // Content element is a <div> element.\n        // @ts-ignore\n        this.attr({\n          '.content': {\n            // escape the label to patch XSS vulnerability (http://clientio.freshdesk.com/helpdesk/tickets/522)\n            html: escape(label),\n            title: tooltip\n          }\n        });\n      } else {\n        // Content element is a <text> element.\n        // SVG elements don't have innerHTML attribute.\n        // @ts-ignore\n        this.attr({\n          '.content': {\n            text: label,\n            title: tooltip\n          }\n        });\n      }\n    }\n\n    updateName(): void {\n      // @ts-ignore\n      this.prop('elementModel/name', this.getLabel() || this.get('defaultName'));\n    }\n\n    private onIdChange(element, id): void {\n      const guid = element.prop('elementModel/guid');\n\n      if (guid) {\n        element.prop('lastId', RxRootInjector.injector.get(RxIdService).getBase(guid), { silent: true });\n      }\n\n      element.prop('elementModel/guid', RxRootInjector.injector.get(RxIdService).get(id), { silent: true });\n    }\n\n    private onElementModelChange(element, elementModel, options): void {\n      if (options.propertyPath === 'elementModel/label') {\n        // @ts-ignore\n        const labelPath = this.get('labelPath') || 'content';\n\n        if (labelPath) {\n          element.prop(labelPath, this.getLabel());\n        }\n      }\n\n      this.updateName();\n    }\n\n    private onPositionChange(element, position, options): void {\n      if (!options.translateBy && options.propertyValue) {\n        // @ts-ignore\n        const previousPosition = this.previous('position');\n\n        const parentMovedBy = {\n          cx: previousPosition.x - position.x,\n          cy: previousPosition.y - position.y\n        };\n\n        // @ts-ignore\n        this.getEmbeddedCells().forEach((embeddedCell) => {\n          if (embeddedCell._snapToParentBorder) {\n            embeddedCell._snapToParentBorder(this, parentMovedBy);\n          }\n        });\n      }\n    }\n\n    private onSizeChange(element): void {\n      element.getEmbeddedCells().forEach((embeddedCell) => {\n        if (embeddedCell.isBoundaryEvent && embeddedCell._snapToParentBorder) {\n          embeddedCell._snapToParentBorder(embeddedCell);\n        }\n      });\n    }\n  };\n}\n","import { RX_PROCESS_DEFINITION } from '@helix/platform/process/api';\n\nimport { RxProcessShapeMixin } from '../shared/process-shape/process-shape.mixin';\n\ndeclare var joint: any;\n\nexport class RxEndEvent extends RxProcessShapeMixin(joint.shapes.bpmn.Event) {\n  initialize(config: any): any {\n    // @ts-ignore\n    super.initialize(config);\n  }\n\n  defaults(): any {\n    return joint.util.deepSupplement(\n      {\n        attrs: {\n          '.label': {\n            fill: 'gray'\n          }\n        },\n\n        defaultName: RX_PROCESS_DEFINITION.processElementDisplayNames.endEvent,\n        eventType: 'end',\n        icon: 'transparent',\n        labelPath: 'attrs/.label/text',\n\n        size: {\n          width: 30,\n          height: 30\n        },\n\n        type: RX_PROCESS_DEFINITION.processElementTypes.endEvent\n      },\n      joint.shapes.bpmn.Event.prototype.defaults\n    );\n  }\n}\n","import { chain, filter, isEmpty, isFunction, map, max, min } from 'lodash';\n\nimport { Constructor } from '@helix/platform/utils';\n\ndeclare var joint: any;\n\nexport function RxProcessShapeViewMixin<TBase extends Constructor>(Base: TBase) {\n  return class RxProcessShapeView extends Base {\n    initialize(config: any): void {\n      // @ts-ignore\n      super.initialize(config);\n    }\n\n    canInteract(): boolean {\n      // @ts-ignore\n      return isFunction(this.paper.options.interactive)\n        ? // @ts-ignore\n          this.paper.options.interactive(this)\n        : // @ts-ignore\n          this.paper.options.interactive;\n    }\n\n    prepareEmbedding(): void {\n      // @ts-ignore\n      const hasNeighbors = !isEmpty(this.paper.model.getNeighbors(this.model));\n\n      // @ts-ignore\n      const hasBoundaryElementsWithNeighbors = chain(this.model.getEmbeddedCells())\n        .filter({ isBoundaryEvent: true })\n        .some(function (embeddedCell) {\n          return !isEmpty(this.paper.model.getNeighbors(embeddedCell));\n        });\n\n      // @ts-ignore\n      if (this.model.get('parent') && !hasNeighbors && !hasBoundaryElementsWithNeighbors) {\n        joint.dia.ElementView.prototype.prepareEmbedding.apply(this, arguments);\n      }\n    }\n\n    getEmbeddedBBox(): any {\n      let result;\n\n      // @ts-ignore\n      const embeddedCellModels = filter(this.model.getEmbeddedCells(), (cellModel) => {\n        return cellModel && cellModel.get('type') !== 'rx.SequenceFlow' && !cellModel.isBoundaryEvent;\n      });\n\n      if (embeddedCellModels.length) {\n        const bboxes = chain(embeddedCellModels)\n          .map((cellModel) => {\n            // @ts-ignore\n            var view = this.paper.findViewByModel(cellModel);\n\n            // @ts-ignore\n            return new joint.V(view.el).bbox(false, this.paper.viewport);\n          })\n          .value();\n\n        const minX = min(map(bboxes, (bbox) => bbox.x));\n\n        const minY = min(map(bboxes, (bbox) => bbox.y));\n\n        const maxX = max(map(bboxes, (bbox) => bbox.x + bbox.width));\n\n        const maxY = max(map(bboxes, (bbox) => bbox.y + bbox.height));\n\n        result = joint.g.rect(minX, minY, maxX - minX, maxY - minY);\n      } else {\n        result = joint.g.rect(0, 0, 0, 0);\n      }\n\n      return result;\n    }\n  };\n}\n","import { RxProcessShapeViewMixin } from '../shared/process-shape/process-shape-view.mixin';\n\ndeclare var joint: any;\n\nexport class RxEndEventView extends RxProcessShapeViewMixin(joint.dia.ElementView) {\n  initialize(config: any): any {\n    // @ts-ignore\n    super.initialize(config);\n  }\n\n  // TODO-VS: remove\n  sgResize(opt): any {\n    // @ts-ignore\n    const scalable = this.scalableNode;\n\n    scalable.attr('transform', `scale(${0.5},${0.5})`);\n\n    // @ts-ignore\n    super.update();\n\n    // // @ts-ignore\n    // var model = this.model;\n    // var angle = model.angle();\n    // var size = model.size();\n    // // @ts-ignore\n    // var scalable = this.scalableNode;\n    //\n    // var recursive = false;\n    // if (scalable.node.getElementsByTagName('path').length > 0) {\n    //   // If scalable has at least one descendant that is a path, we need to switch to recursive bbox calculation.\n    //   // If there are no path descendants, group bbox calculation works and so we can use the (faster) native function directly.\n    //   recursive = true;\n    // }\n    //\n    // var scalableBBox = scalable.getBBox({ recursive: recursive });\n    //\n    // var sx = size.width / (60 || 1);\n    // var sy = size.height / (60 || 1);\n    //\n    // scalable.attr('transform', 'scale(' + sx + ',' + sy + ')');\n    //\n    // // @ts-ignore\n    // super.update();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { RX_DESIGNER } from '@helix/platform/shared/api';\nimport { RX_PROCESS_DEFINITION, RxProcessElementRegistryService } from '@helix/platform/process/api';\n\nimport { RxEndEventService } from './end-event.service';\nimport { RxEndEvent } from './end-event.class';\nimport { RxEndEventView } from './end-event-view.class';\n\n@NgModule()\nexport class RxEndEventRegistrationModule {\n  constructor(\n    rxEndEventService: RxEndEventService,\n    rxProcessElementRegistryService: RxProcessElementRegistryService,\n    translateService: TranslateService\n  ) {\n    rxProcessElementRegistryService.register({\n      displayName: translateService.instant(\n        'com.bmc.arsys.rx.client.process-designer.elements.end-event.display-name.label'\n      ),\n      elementService: rxEndEventService,\n      group: RX_PROCESS_DEFINITION.standardProcessElementGroups.events.name,\n      paletteItem: {\n        border: RX_DESIGNER.paletteItemBorder.bold,\n        label: RX_DESIGNER.paletteItemLabel.outer,\n        shape: RX_DESIGNER.paletteItemShape.circle\n      },\n      resourceType: RX_PROCESS_DEFINITION.processElementResourceTypes.endEvent,\n      shapeClass: RxEndEvent,\n      shapeType: 'EndEvent',\n      type: RX_PROCESS_DEFINITION.processElementTypes.endEvent,\n      viewShapeClass: RxEndEventView,\n      viewShapeType: 'EndEventView'\n    });\n  }\n}\n","declare var joint: any;\n\nexport class RxProcess extends joint.dia.Element {\n  constructor(options: any) {\n    super(options);\n\n    this.markup = '<g></g>';\n  }\n\n  defaults(): any {\n    return joint.util.defaultsDeep(\n      {\n        position: { x: 0, y: 0 },\n        size: { width: 1, height: 1 },\n        type: 'rx.Process'\n      },\n      super.defaults\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable, of } from 'rxjs';\nimport { isEmpty } from 'lodash';\n\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { RxStringService } from '@helix/platform/utils';\nimport {\n  ICustomizationOptions,\n  IFormBuilderConfig,\n  RxDefinitionNameService,\n  Tooltip,\n  IPlainObject\n} from '@helix/platform/shared/api';\nimport {\n  CustomizationOptionsComponent,\n  IPermissionEditorComponentOptions,\n  IRevertCustomizationOptions,\n  ISelectFormControlOptions,\n  ISwitcherFormControlOptions,\n  ITextareaFormControlOptions,\n  ITextFormControlOptions,\n  RxPermissionEditorComponent,\n  RxRevertCustomizationComponent,\n  SelectFormControlComponent,\n  SwitchFormControlComponent,\n  TextareaFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IProcessDefinition, RX_PROCESS_DEFINITION } from '@helix/platform/process/api';\n\nimport { IProcessDefinitionModel } from './process.types';\nimport { RxProcess } from './process.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxProcessService {\n  constructor(\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxStringService: RxStringService,\n    private translateService: TranslateService\n  ) {}\n\n  // TODO-VS: update when variable editor is implemented\n  getDefinitionFromModel(definitionModel: IProcessDefinitionModel): Partial<IProcessDefinition> {\n    return {\n      allowOverlay: definitionModel.customizationOptions.allowOverlay,\n      contextKeyParam: definitionModel.contextKeyParam,\n      description: definitionModel.description,\n      guid: definitionModel.guid,\n      inputParams: definitionModel.inputParams,\n      isEnabled: definitionModel.isEnabled,\n      localVariables: definitionModel.localVariables,\n      name: this.rxDefinitionNameService.getDefinitionName(definitionModel.bundleId, definitionModel.name),\n      outputParams: definitionModel.outputParams,\n      overlayDescriptor: definitionModel.overlayDescriptor,\n      overlayGroupId: definitionModel.overlayGroupId,\n      permissions: definitionModel.permissions,\n      runAsUser: RX_PROCESS_DEFINITION.runAsUser[definitionModel.runAsUser].definitionValue,\n      scope: definitionModel.customizationOptions.scope\n    };\n  }\n\n  getInspectorConfig(definitionModel: IProcessDefinitionModel): IFormBuilderConfig {\n    return [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n        controls: [\n          {\n            name: 'name',\n            component: TextFormControlComponent,\n            isDisabled: Boolean(definitionModel.lastUpdateTime),\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n              required: true\n            } as ITextFormControlOptions\n          },\n          {\n            name: 'description',\n            component: TextareaFormControlComponent,\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label'),\n              rows: 3\n            } as ITextareaFormControlOptions\n          },\n          {\n            name: 'guid',\n            component: TextFormControlComponent,\n            isDisabled: true,\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.id.label')\n            } as ITextareaFormControlOptions\n          },\n          {\n            name: 'owner',\n            component: TextFormControlComponent,\n            hidden: !Boolean(definitionModel.owner),\n            isDisabled: true,\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.owner.label')\n            } as ITextareaFormControlOptions\n          },\n          {\n            name: 'lastUpdateTime',\n            component: TextFormControlComponent,\n            hidden: !Boolean(definitionModel.lastUpdateTime),\n            isDisabled: true,\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.modified-date.label')\n            } as ITextareaFormControlOptions\n          },\n          {\n            name: 'lastChangedBy',\n            component: TextFormControlComponent,\n            hidden: !Boolean(definitionModel.lastChangedBy),\n            isDisabled: true,\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.modified-by.label')\n            } as ITextareaFormControlOptions\n          },\n          {\n            component: RxRevertCustomizationComponent,\n            options: {\n              overlayGroupId: definitionModel.overlayGroupId,\n              overlayDescriptor: definitionModel.overlayDescriptor\n            } as IRevertCustomizationOptions\n          },\n          {\n            name: 'customizationOptions',\n            component: CustomizationOptionsComponent,\n            options: {\n              definitionTypeDisplayName: this.translateService\n                .instant('com.bmc.arsys.rx.client.process-definition.label')\n                .toLowerCase(),\n              allowOverlay: definitionModel.customizationOptions.allowOverlay,\n              scope: definitionModel.customizationOptions.scope,\n              overlayGroupId: definitionModel.overlayGroupId,\n              overlayDescriptor: definitionModel.overlayDescriptor\n            } as ICustomizationOptions\n          },\n          {\n            name: 'isEnabled',\n            component: SwitchFormControlComponent,\n            options: {\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.process-designer.elements.process.process-enabled.label'\n              )\n            } as ISwitcherFormControlOptions\n          },\n          {\n            name: 'runAsUser',\n            component: SelectFormControlComponent,\n            options: {\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.process-designer.elements.process.run-as.label'\n              ),\n              tooltip: new Tooltip(\n                this.translateService.instant(\n                  'com.bmc.arsys.rx.client.process-designer.elements.process.run-as.tooltip'\n                )\n              ),\n              options: [\n                {\n                  name: this.translateService.instant('com.bmc.arsys.rx.client.common.administrator.label'),\n                  id: RX_PROCESS_DEFINITION.runAsUser.administrator.modelValue\n                },\n                {\n                  name: this.translateService.instant('com.bmc.arsys.rx.client.common.current-user.label'),\n                  id: RX_PROCESS_DEFINITION.runAsUser.currentUser.modelValue\n                }\n              ]\n            } as ISelectFormControlOptions\n          }\n        ]\n      },\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.variables.label'),\n        controls: [\n          // TODO-VS: add variables editor\n        ]\n      },\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.permissions.label'),\n        controls: [\n          {\n            name: 'permissions',\n            component: RxPermissionEditorComponent,\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.permissions.label'),\n              type: 'process'\n            } as IPermissionEditorComponentOptions\n          }\n        ]\n      }\n    ];\n  }\n\n  // TODO-VS: update when variable editor is implemented\n  getModelFromDefinition(definition: IProcessDefinition, bundleId: string): IProcessDefinitionModel {\n    return {\n      bundleId,\n      contextKeyParam: definition.contextKeyParam,\n      customizationOptions: {\n        allowOverlay: definition.allowOverlay,\n        scope: definition.scope\n      },\n      description: definition.description,\n      guid: definition.guid,\n      inputParams: definition.inputParams,\n      isEnabled: definition.isEnabled,\n      lastChangedBy: definition.lastChangedBy,\n      lastUpdateTime: definition.lastUpdateTime,\n      localVariables: definition.localVariables,\n      name: Boolean(definition.lastUpdateTime)\n        ? this.rxDefinitionNameService.getDisplayName(definition.name)\n        : definition.name,\n      outputParams: definition.outputParams,\n      overlayDescriptor: null,\n      overlayGroupId: definition.overlayGroupId,\n      owner: definition.owner,\n      permissions: definition.permissions,\n      runAsUser: definition.runAsUser\n        ? RX_PROCESS_DEFINITION.runAsUser.currentUser.modelValue\n        : RX_PROCESS_DEFINITION.runAsUser.administrator.modelValue\n    };\n  }\n\n  getShape(options: IPlainObject): RxProcess {\n    return new RxProcess(options);\n  }\n\n  validate(definitionModel: IProcessDefinitionModel, availableCells: any[]): Observable<IValidationIssue[]> {\n    const validationIssues = [];\n\n    if (this.rxStringService.isEmptySafe(definitionModel.name)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label')\n          }\n        ),\n        data: {\n          propertyName: 'name',\n          inspectorTabIndex: 0\n        }\n      });\n    }\n\n    if (definitionModel.name && !RX_RECORD_DEFINITION.validDefinitionNameRegex.test(definitionModel.name)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label')\n          }\n        ),\n        data: {\n          propertyName: 'name',\n          inspectorTabIndex: 0\n        }\n      });\n    }\n\n    const startEvents = availableCells.filter(\n      (cell) => cell.prop('type') === RX_PROCESS_DEFINITION.processElementTypes.startEvent\n    );\n\n    if (startEvents.length != 1) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.process-designer.elements.process.validation.single-start-event.message'\n        ),\n        data: {\n          inspectorTabIndex: 0\n        }\n      });\n    }\n\n    const endEvents = availableCells.filter(\n      (cell) => cell.prop('type') === RX_PROCESS_DEFINITION.processElementTypes.endEvent\n    );\n\n    if (isEmpty(endEvents)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.process-designer.elements.process.validation.no-end-event.label'\n        ),\n        data: {\n          inspectorTabIndex: 0\n        }\n      });\n    }\n\n    return of(validationIssues);\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  Injector,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { map, pluck, take, takeUntil } from 'rxjs/operators';\nimport { isEqual } from 'lodash';\n\nimport { RxIdService } from '@helix/platform/utils';\nimport { IFormWidgetComponent, IProcessActionElementModel, RxDesignerCacheService } from '@helix/platform/shared/api';\nimport {\n  IExpressionEditorProperty,\n  IExpressionEditorPropertyChange,\n  InspectorWidgetBase,\n  RxExpressionEditorService\n} from '@helix/platform/shared/components';\nimport { ISelectedElementInspectorDesignerItemModel } from '@helix/platform/process/api';\n\nimport {\n  IExpressionInputMapInspectorConfig,\n  IExpressionInputMapInspectorWidgetOptions\n} from './expression-input-map-inspector-widget.types';\n\n@Component({\n  selector: 'rx-expression-input-map-inspector-widget',\n  templateUrl: './expression-input-map-inspector-widget.component.html',\n  styleUrls: ['./expression-input-map-inspector-widget.component.scss']\n})\nexport class RxExpressionInputMapInspectorWidgetComponent\n  extends InspectorWidgetBase<\n    IExpressionInputMapInspectorWidgetOptions,\n    Observable<ISelectedElementInspectorDesignerItemModel<IProcessActionElementModel>>\n  >\n  implements OnInit, OnDestroy, OnChanges, IFormWidgetComponent\n{\n  @ViewChild('expressionInputMapInspector', { read: ElementRef })\n  expressionInputMapInspectorElementRef: ElementRef;\n\n  config: IExpressionInputMapInspectorConfig[];\n  elementModel$: Observable<IProcessActionElementModel>;\n  graph$: Observable<any>;\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  constructor(\n    private renderer: Renderer2,\n    private rxDesignerCacheService: RxDesignerCacheService,\n    private rxExpressionEditorService: RxExpressionEditorService,\n    private rxIdService: RxIdService,\n    protected injector: Injector\n  ) {\n    super(injector);\n  }\n\n  ngOnInit(): void {\n    this.elementModel$ = this.designerItemModel.pipe(pluck('elementModel'), takeUntil(this.destroyed$));\n    this.graph$ = this.designerItemModel.pipe(pluck('graph'), takeUntil(this.destroyed$));\n\n    this.patchConfig(this.options);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!isEqual(changes.options.currentValue, changes.options.previousValue)) {\n      this.patchConfig(changes.options.currentValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  openExpressionEditor(\n    section: IExpressionInputMapInspectorConfig,\n    elementModel: IProcessActionElementModel,\n    inspectorElementRef: ElementRef\n  ) {\n    this.graph$.pipe(take(1)).subscribe((graph) => {\n      this.rxExpressionEditorService\n        .openEditor({\n          expressionConfigurator: this.options.expressionConfigurator,\n\n          expressionPropertyNavigator: {\n            getProperties: this.getExpressionProperties.bind(this, elementModel, inspectorElementRef)\n          },\n\n          isReadOnly: false,\n\n          property: {\n            path: `inputMap/${section.name}`,\n            value: elementModel.inputMap[section.name],\n            label: section.options.label\n          }\n        })\n        .pipe(takeUntil(this.destroyed$))\n        .subscribe((expression: IExpressionEditorPropertyChange) => {\n          const selectedElementCell = graph.getCell(this.rxIdService.getBase(elementModel.guid));\n\n          selectedElementCell.prop(`elementModel/${expression.path}`, expression.value);\n        });\n    });\n  }\n\n  private getExpressionProperties(\n    elementModel: IProcessActionElementModel,\n    inspectorElementRef: ElementRef\n  ): Observable<IExpressionEditorProperty[]> {\n    return of(elementModel.inputMap).pipe(\n      map((modelProperties) =>\n        Array.from(\n          this.renderer\n            .selectRootElement(inspectorElementRef.nativeElement, true)\n            .querySelectorAll('rx-expression-form-control')\n        ).map((element: Element) => {\n          const propertyPath = element.getAttribute('property-path');\n\n          return {\n            path: `inputMap/${propertyPath}`,\n            value: modelProperties[propertyPath],\n            label: element.getAttribute('property-label')\n          };\n        })\n      )\n    );\n  }\n\n  private patchConfig(options: IExpressionInputMapInspectorWidgetOptions): void {\n    this.config = options.expressionInputMapInspectorOptions.map((expressionInputMapInspectorOption) => ({\n      name: expressionInputMapInspectorOption.name,\n      options: {\n        label: expressionInputMapInspectorOption.label,\n        dataDictionary$: options.expressionConfigurator.getDataDictionary(\n          `inputMap/${expressionInputMapInspectorOption.name}`\n        ),\n        operators: options.expressionConfigurator.getOperators(`inputMap/${expressionInputMapInspectorOption.name}`)\n      }\n    }));\n  }\n}\n","<div *ngIf=\"elementModel$ | async as elementModel\" #expressionInputMapInspector>\n  <rx-expression-form-control\n    *ngFor=\"let section of config\"\n    [options]=\"section.options\"\n    [propertyPath]=\"section.name\"\n    [ngModel]=\"elementModel.inputMap[section.name]\"\n    (events)=\"openExpressionEditor(section, elementModel, expressionInputMapInspectorElementRef)\"\n  >\n  </rx-expression-form-control>\n</div>\n","import { Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { IDataDictionary, RxServerActionExpressionConfigurator } from '@helix/platform/shared/api';\nimport { RxProcessDataDictionaryService } from '@helix/platform/process/api';\n\nexport class RxProcessActionExpressionConfigurator extends RxServerActionExpressionConfigurator {\n  constructor(protected injector: Injector) {\n    super(injector);\n\n    this.configureForProperty({\n      propertyPath: /outputMap\\/.*/,\n      dataDictionary$: this.getOutputMapDataDictionary()\n    });\n  }\n\n  protected getDataDictionaryService(): any {\n    return this.injector.get(RxProcessDataDictionaryService);\n  }\n\n  getOutputMapDataDictionary(): Observable<IDataDictionary> {\n    return this.commonDataDictionary$;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { chain, isArray, isEmpty, reduce, transform } from 'lodash';\n\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport {\n  IAssignmentExpression,\n  IDataDictionary,\n  IDataDictionaryBranch,\n  IExpressionConfigurator,\n  IFormBuilderConfig,\n  IFormControlBuilderConfig,\n  IFormWidgetBuilderConfig,\n  IPlainObject,\n  IProcessActionElementModel,\n  IServiceParameter,\n  RxActionTypeUtilsService,\n  RxServerActionService,\n  Tooltip\n} from '@helix/platform/shared/api';\nimport {\n  AssignmentExpressionListFormControlComponent,\n  AssignmentExpressionListTargetFieldType,\n  IAssignmentExpressionListFormControlOptions,\n  ILabelFormControlOptions,\n  ISelectFormControlOptions,\n  ITextareaFormControlOptions,\n  ITextFormControlOptions,\n  LabelFormControlComponent,\n  SelectFormControlComponent,\n  TextareaFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport {\n  IServiceTaskDefinition,\n  RX_PROCESS_DEFINITION,\n  RxProcessDataDictionaryService\n} from '@helix/platform/process/api';\n\nimport { RxExpressionInputMapInspectorWidgetComponent } from '../shared/components/expression-input-map-inspector-widget/expression-input-map-inspector-widget.component';\nimport { IOutputDataDictionaryBranch, IProcessActionElementService } from './process-action.types';\nimport { RxProcessActionExpressionConfigurator } from './process-action-expression-configurator.class';\n\ndeclare var joint: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxProcessActionService extends RxServerActionService implements IProcessActionElementService {\n  private rxActionTypeUtilsService: RxActionTypeUtilsService;\n  private rxProcessDataDictionaryService: RxProcessDataDictionaryService;\n\n  private expressionConfigurator: IExpressionConfigurator;\n\n  constructor(protected injector: Injector) {\n    super(injector);\n\n    this.rxActionTypeUtilsService = injector.get(RxActionTypeUtilsService);\n    this.rxProcessDataDictionaryService = injector.get(RxProcessDataDictionaryService);\n  }\n\n  // PUBLIC\n  // TODO-VS: eliminate Partial (new IProcessDefinitionLight to eliminate overlayDescriptor form IDefinitionLight?)\n  getDefinitionFromModel(model: IProcessActionElementModel): Partial<IServiceTaskDefinition> {\n    return {\n      actionTypeName: model.actionTypeName,\n      description: model.description,\n      guid: model.guid,\n      inputMap: this.getInputMapFromModel(model),\n      multiInstanceLoopDefinition: model.multiInstanceLoopDefinition,\n      name: model.name,\n      outputMap: model.outputMap,\n      resourceType: model.resourceType,\n      runAsUser: RX_PROCESS_DEFINITION.runAsUser[model.runAsUser].definitionValue\n    };\n  }\n\n  getExpressionConfigurator(): IExpressionConfigurator {\n    return (this.expressionConfigurator ??= new (this.getExpressionConfiguratorClass())(this.injector));\n  }\n\n  getInspectorConfig(model: IProcessActionElementModel, options: IPlainObject): IFormBuilderConfig {\n    const generalConfigControls: IFormControlBuilderConfig[] = [\n      {\n        name: 'actionTypeName',\n        component: TextFormControlComponent,\n        isDisabled: true,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.server-action-properties.action-type-name.label'\n          )\n        } as ITextFormControlOptions\n      },\n      {\n        name: 'label',\n        component: TextFormControlComponent,\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.label.label'),\n          required: true\n        } as ITextFormControlOptions\n      },\n      {\n        name: 'description',\n        component: TextareaFormControlComponent,\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label'),\n          rows: 3\n        } as ITextareaFormControlOptions\n      },\n      {\n        name: 'guid',\n        component: TextFormControlComponent,\n        isDisabled: true,\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.id.label')\n        } as ITextareaFormControlOptions\n      },\n      {\n        name: 'runAsUser',\n        component: SelectFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.process-designer.elements.process.run-as.label'\n          ),\n          tooltip: new Tooltip(\n            this.translateService.instant('com.bmc.arsys.rx.client.process-designer.elements.inspector.run-as.tooltip')\n          ),\n          options: [\n            {\n              name: this.translateService.instant('com.bmc.arsys.rx.client.common.administrator.label'),\n              id: RX_PROCESS_DEFINITION.runAsUser.administrator.modelValue\n            },\n            {\n              name: this.translateService.instant('com.bmc.arsys.rx.client.common.current-user.label'),\n              id: RX_PROCESS_DEFINITION.runAsUser.currentUser.modelValue\n            },\n            {\n              name: this.translateService.instant(\n                'com.bmc.arsys.rx.client.process-designer.process-action.inherit-from-process.label'\n              ),\n              id: RX_PROCESS_DEFINITION.runAsUser.inheritFromProcess.modelValue\n            }\n          ]\n        } as ISelectFormControlOptions\n      }\n    ];\n\n    if (model.isDeprecated) {\n      generalConfigControls.unshift({\n        name: 'isDeprecated',\n        component: LabelFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.server-action-properties.deprecated.label',\n            {\n              definitionType: this.translateService.instant('com.bmc.arsys.rx.client.definition-type.process.label')\n            }\n          )\n        } as ILabelFormControlOptions\n      });\n    }\n\n    return [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n        controls: generalConfigControls\n      },\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.designer.element-properties.input-map.label'),\n        controls: [this.getInputMapInspectorWidgetConfig(model)]\n      },\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.designer.element-properties.output-map.label'),\n        controls: [\n          {\n            name: 'outputMap',\n            component: AssignmentExpressionListFormControlComponent,\n            options: {\n              confirmationMessage:\n                'com.bmc.arsys.rx.client.designer.inspector.delete-output-map-item-confirmation.message',\n              sourceFieldOptions: {\n                expressionConfigurator: this.getExpressionConfigurator(),\n                options: {\n                  dataDictionary$: this.getExpressionConfigurator().getDataDictionary('outputMap'),\n                  operators: this.getExpressionConfigurator().getOperators('outputMap')\n                }\n              },\n              targetFieldOptions: {\n                type: AssignmentExpressionListTargetFieldType.Select,\n                options: {\n                  options: chain([\n                    ...options.processDefinitionModel.inputParams,\n                    ...options.processDefinitionModel.outputParams,\n                    ...options.processDefinitionModel.localVariables\n                  ])\n                    .map('name')\n                    .uniq()\n                    .map((name) => ({\n                      name,\n                      id: name\n                    }))\n                    .value()\n                }\n              }\n            } as IAssignmentExpressionListFormControlOptions\n          }\n        ]\n      }\n    ];\n  }\n\n  getModelFromDefinition(definition: IServiceTaskDefinition): IProcessActionElementModel {\n    const actionType = super.getActionTypeByName(definition.actionTypeName);\n\n    const name =\n      actionType.displayName || this.rxActionTypeUtilsService.prettifyActionTypeName(actionType.actionTypeName);\n\n    return definition.guid\n      ? {\n          actionTypeName: definition.actionTypeName,\n          deprecatedText: actionType.deprecatedText,\n          description: definition.description,\n          guid: definition.guid,\n          inputMap: this.getInputMapFromDefinition(definition),\n          isDeprecated: actionType.isDeprecated,\n          label: definition.name,\n          multiInstanceLoopDefinition: definition.multiInstanceLoopDefinition,\n          name: definition.name,\n          outputMap: definition.outputMap,\n          resourceType: definition.resourceType,\n          runAsUser: this.getRunAsUserFromDefinition(definition),\n          type: this.getElementType(actionType.actionTypeName)\n        }\n      : {\n          actionTypeName: actionType.actionTypeName,\n          deprecatedText: actionType.deprecatedText,\n          description: '',\n          guid: '',\n          inputMap: {},\n          isDeprecated: actionType.isDeprecated,\n          label: name,\n          multiInstanceLoopDefinition: null,\n          name,\n          outputMap: [],\n          resourceType: RX_PROCESS_DEFINITION.processElementResourceTypes.processAction,\n          runAsUser: RX_PROCESS_DEFINITION.runAsUser.inheritFromProcess.modelValue,\n          type: this.getElementType(actionType.actionTypeName)\n        };\n  }\n\n  // TODO-VS: update types\n  getShape(options: IPlainObject): any {\n    const ProcessActionClass = this.getClass();\n    const classConfig = super.getClassConfig(options);\n\n    return new ProcessActionClass(classConfig);\n  }\n\n  setCommonDataDictionaryBranch(guid: string, dataDictionaryBranch: Observable<IDataDictionaryBranch>): void {\n    this.rxProcessDataDictionaryService.setCommonActivitiesDataDictionaryBranch(guid, dataDictionaryBranch);\n  }\n\n  // TODO-VS: update types\n  validate(model: IProcessActionElementModel, availableCells: any): Observable<IValidationIssue[]> {\n    return super.validateServerAction(model, availableCells).pipe(\n      map((serverActionValidationIssues) => {\n        const validationIssues = [...serverActionValidationIssues];\n\n        const inboundLinks = availableCells.filter((cell) => cell.prop('targetNode') === model.guid);\n        const outboundLinks = availableCells.filter((cell) => cell.prop('sourceNode') === model.guid);\n\n        if (isEmpty(inboundLinks)) {\n          validationIssues.push({\n            type: ValidationIssueType.Warning,\n            description: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.validation.is-required.message',\n              {\n                propertyName: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.process-designer.inbound-sequence-flow.label'\n                )\n              }\n            ),\n            data: {\n              guid: model.guid,\n              inspectorTabIndex: 1\n            }\n          });\n        }\n\n        if (outboundLinks.length !== 1) {\n          validationIssues.push({\n            type: ValidationIssueType.Warning,\n            description: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.validation.is-required.message',\n              {\n                propertyName: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.process-designer.outbound-sequence-flow.label'\n                )\n              }\n            ),\n            data: {\n              guid: model.guid,\n              inspectorTabIndex: 1\n            }\n          });\n        }\n\n        return validationIssues;\n      })\n    );\n  }\n\n  // OVERRIDES\n  buildDataDictionaryBranch(model: IProcessActionElementModel): Observable<IDataDictionaryBranch> {\n    const outputParams = super.getActionTypeByName(model.actionTypeName).outputParams;\n\n    return isEmpty(outputParams)\n      ? of(null)\n      : this.buildOutputDataDictionaryBranch(model, outputParams).pipe(\n          map((outputDataDictionaryBranch) => {\n            const isArrayOrListDataType = this.rxActionTypeUtilsService.isActionParameterArrayOrList(outputParams[0]);\n\n            if (isArray(outputDataDictionaryBranch)) {\n              let children = outputDataDictionaryBranch;\n\n              if (isEmpty(outputDataDictionaryBranch)) {\n                children = this.buildDefaultOutputDataDictionaryBranch(outputParams[0].dataTypeDetail);\n              }\n\n              return {\n                label: model.label,\n                icon: 'd-icon-arrow_chart',\n                children: [\n                  {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.designer.keywords.output.label'),\n                    icon: 'd-icon-arrow_chart',\n                    expression: '${activityResults.' + model.guid + '.output' + (isArrayOrListDataType ? '[0]}' : '}'),\n                    children: this.updateOutputDataDictionaryBranch(children, model.guid, isArrayOrListDataType)\n                  }\n                ]\n              };\n            } else {\n              return null;\n            }\n          })\n        );\n  }\n\n  buildOutputDataDictionaryBranch(\n    model: IProcessActionElementModel,\n    outputParams?: IServiceParameter[]\n  ): Observable<IOutputDataDictionaryBranch[]> {\n    return of([]);\n  }\n\n  getClass(): any {\n    return joint.shapes.rx.ProcessAction;\n  }\n\n  getDefinitionInputMapParam(inputParamName: string, inputParamValue: string): IAssignmentExpression {\n    return {\n      assignTarget: inputParamName,\n      expression: inputParamValue\n    };\n  }\n\n  getElementType(actionTypeName: string): string {\n    return RX_PROCESS_DEFINITION.processElementTypes.processAction;\n  }\n\n  getExpressionConfiguratorClass(): any {\n    return RxProcessActionExpressionConfigurator;\n  }\n\n  getInputMapInspectorWidgetConfig(model: IProcessActionElementModel): IFormWidgetBuilderConfig {\n    const actionType = this.getActionTypeByName(model.actionTypeName);\n\n    return {\n      component: RxExpressionInputMapInspectorWidgetComponent,\n      options: {\n        expressionConfigurator: this.getExpressionConfigurator(),\n        expressionInputMapInspectorOptions: actionType.inputParams.map((inputParam) => ({\n          name: inputParam.name,\n          label: inputParam.displayName || this.rxStringService.prettify(inputParam.name)\n        }))\n      }\n    };\n  }\n\n  getInputMapFromDefinition(definition: IServiceTaskDefinition): IPlainObject {\n    const actionType = super.getActionTypeByName(definition.actionTypeName);\n\n    const initialInputMap = actionType\n      ? transform(actionType.inputParams, (inputMap, inputParam) => (inputMap[inputParam.name] = ''), {})\n      : {};\n\n    return transform(\n      definition?.inputMap || [],\n      (inputMap, inputMapField) => (inputMap[inputMapField.assignTarget] = inputMapField.expression),\n      initialInputMap\n    );\n  }\n\n  // HELPERS\n  private buildDefaultOutputDataDictionaryBranch(\n    outputParams: IServiceParameter[],\n    outputPropertyPathOpener?: string\n  ): IOutputDataDictionaryBranch[] {\n    return isEmpty(outputParams)\n      ? null\n      : outputParams.map((outputParam) => {\n          const isArrayOrListDataType = this.rxActionTypeUtilsService.isActionParameterArrayOrList(outputParam);\n\n          const outputPropertyPath =\n            (outputPropertyPathOpener ? outputPropertyPathOpener + '.' + outputParam.name : outputParam.name) +\n            (isArrayOrListDataType ? '[0]' : '');\n\n          return {\n            label: this.rxStringService.prettify(outputParam.name),\n            outputPropertyPath: outputPropertyPath,\n            children: this.buildDefaultOutputDataDictionaryBranch(outputParam.dataTypeDetail, outputPropertyPath)\n          };\n        });\n  }\n\n  private getInputMapFromModel(model: IProcessActionElementModel): IAssignmentExpression[] {\n    return reduce(\n      model.inputMap,\n      (inputMap, propertyValue, propertyName) => {\n        let inputMapParam;\n\n        if (!isEmpty(propertyValue)) {\n          inputMapParam = this.getDefinitionInputMapParam(propertyName, propertyValue);\n\n          if (inputMapParam) {\n            inputMap.push(inputMapParam);\n          }\n        }\n\n        return inputMap;\n      },\n      []\n    );\n  }\n\n  private getOutputDataDictionaryExpression(\n    flowElementGuid: string,\n    isArrayOrListDataType: boolean,\n    outputPropertyPath: string | number\n  ): string {\n    return (\n      '${activityResults.' +\n      flowElementGuid +\n      '.output' +\n      (isArrayOrListDataType ? '[0].' : '.') +\n      outputPropertyPath +\n      '}'\n    );\n  }\n\n  private getRunAsUserFromDefinition(definition: IServiceTaskDefinition): string {\n    let runAsUser: string;\n\n    switch (definition.runAsUser) {\n      case true: {\n        runAsUser = RX_PROCESS_DEFINITION.runAsUser.currentUser.modelValue;\n\n        break;\n      }\n\n      case false: {\n        runAsUser = RX_PROCESS_DEFINITION.runAsUser.administrator.modelValue;\n\n        break;\n      }\n\n      default: {\n        runAsUser = RX_PROCESS_DEFINITION.runAsUser.inheritFromProcess.modelValue;\n\n        break;\n      }\n    }\n\n    return runAsUser;\n  }\n\n  private updateOutputDataDictionaryBranch(\n    children: IOutputDataDictionaryBranch[],\n    flowElementGuid: string,\n    isArrayOrListDataType: boolean\n  ): IDataDictionary {\n    return isEmpty(children)\n      ? null\n      : children.map((child) => {\n          let expression = child.expression;\n\n          if (child.outputPropertyPath) {\n            if (isArray(child.outputPropertyPath)) {\n              expression = child.outputPropertyPath.map((outputPropertyPath) =>\n                this.getOutputDataDictionaryExpression(flowElementGuid, isArrayOrListDataType, outputPropertyPath)\n              );\n            } else {\n              expression = this.getOutputDataDictionaryExpression(\n                flowElementGuid,\n                isArrayOrListDataType,\n                child.outputPropertyPath\n              );\n            }\n          }\n\n          return {\n            label: child.label,\n            icon: expression ? 'd-icon-arrow_chart' : null,\n            expression,\n            children: this.updateOutputDataDictionaryBranch(child.children, flowElementGuid, isArrayOrListDataType)\n          };\n        });\n  }\n}\n","import { IDesignerElementService, RxRootInjector, RxServerActionMixin } from '@helix/platform/shared/api';\nimport { RX_PROCESS_DEFINITION, RxProcessElementRegistryService } from '@helix/platform/process/api';\n\nimport { RxProcessShapeMixin } from '../shared/process-shape/process-shape.mixin';\n\ndeclare var joint: any;\n\nexport class RxProcessAction extends RxServerActionMixin(RxProcessShapeMixin(joint.shapes.bpmn.Activity)) {\n  defaults(): any {\n    return joint.util.deepSupplement(\n      {\n        attrs: {\n          '.icon': {\n            width: 12,\n            height: 12,\n            'ref-x': 3,\n            'ref-y': 3\n          },\n          rect: {\n            rx: 4,\n            ry: 4\n          }\n        },\n\n        icon: 'gear',\n\n        size: {\n          width: 90,\n          height: 60\n        },\n\n        type: RX_PROCESS_DEFINITION.processElementTypes.processAction\n      },\n      // @ts-ignore\n      super.defaults\n    );\n  }\n\n  initialize(config: any): any {\n    // @ts-ignore\n    super.initialize(config);\n  }\n\n  getElementService(type: string): IDesignerElementService {\n    return RxRootInjector.injector.get(RxProcessElementRegistryService).get(type).elementService;\n  }\n}\n","import { RxServerActionViewMixin } from '@helix/platform/shared/api';\n\nimport { RxProcessShapeViewMixin } from '../shared/process-shape/process-shape-view.mixin';\n\ndeclare var joint: any;\n\nexport class RxProcessActionView extends RxServerActionViewMixin(\n  RxProcessShapeViewMixin(joint.shapes.bpmn.ActivityView)\n) {\n  initialize(config: any): any {\n    // @ts-ignore\n    super.initialize(config);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { RX_DESIGNER, RX_DESIGNER_ELEMENT_SHAPE } from '@helix/platform/shared/api';\nimport { RX_PROCESS_DEFINITION, RxProcessElementRegistryService } from '@helix/platform/process/api';\n\nimport { RxProcessActionService } from './process-action.service';\nimport { RxProcessAction } from './process-action.class';\nimport { RxProcessActionView } from './process-action-view.class';\n\n@NgModule()\nexport class RxProcessActionRegistrationModule {\n  constructor(\n    rxProcessElementRegistryService: RxProcessElementRegistryService,\n    rxProcessActionService: RxProcessActionService\n  ) {\n    rxProcessElementRegistryService.register({\n      elementService: rxProcessActionService,\n      group: RX_PROCESS_DEFINITION.standardProcessElementGroups.platformActions.name,\n      paletteItem: {\n        border: RX_DESIGNER.paletteItemBorder.bold,\n        icon: {\n          path: RX_DESIGNER_ELEMENT_SHAPE.bpmnIcons.gear,\n          position: RX_DESIGNER.paletteIconPosition.top\n        },\n        label: RX_DESIGNER.paletteItemLabel.outer,\n        shape: RX_DESIGNER.paletteItemShape.rectangle\n      },\n      resourceType: RX_PROCESS_DEFINITION.processElementResourceTypes.processAction,\n      shapeClass: RxProcessAction,\n      shapeType: 'ProcessAction',\n      type: RX_PROCESS_DEFINITION.processElementTypes.processAction,\n      viewShapeClass: RxProcessActionView,\n      viewShapeType: 'ProcessActionView'\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { ExpressionFormControlModule, RxFormBuilderModule, RxInspectorModule } from '@helix/platform/shared/components';\n\nimport { RxExpressionInputMapInspectorWidgetComponent } from './expression-input-map-inspector-widget.component';\n\n// TODO-VS: move to \"@helix/platform/process/components\"\n@NgModule({\n  declarations: [RxExpressionInputMapInspectorWidgetComponent],\n  imports: [CommonModule, ExpressionFormControlModule, FormsModule, RxFormBuilderModule, RxInspectorModule],\n  exports: [RxExpressionInputMapInspectorWidgetComponent]\n})\nexport class RxExpressionInputMapInspectorWidgetModule {}\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable, of } from 'rxjs';\nimport { isEmpty, some } from 'lodash';\n\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { RxStringService } from '@helix/platform/utils';\nimport {\n  IDataDictionaryBranch,\n  IDesignerElementService,\n  IFormBuilderConfig,\n  IPlainObject\n} from '@helix/platform/shared/api';\nimport {\n  ITextareaFormControlOptions,\n  ITextFormControlOptions,\n  TextareaFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { IProcessFlowElementDefinition, RX_PROCESS_DEFINITION } from '@helix/platform/process/api';\n\nimport { IStartEventModel } from './start-event.interfaces';\n\ndeclare var joint: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxStartEventService implements IDesignerElementService<IProcessFlowElementDefinition, IStartEventModel> {\n  constructor(private rxStringService: RxStringService, private translateService: TranslateService) {}\n\n  getDefinitionFromModel(model: IStartEventModel): Partial<IProcessFlowElementDefinition> {\n    return {\n      description: model.description,\n      guid: model.guid,\n      name: model.name,\n      resourceType: model.resourceType\n    };\n  }\n\n  // TODO-VS: add position and size inspector groups\n  getInspectorConfig(): IFormBuilderConfig {\n    return [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n        controls: [\n          {\n            name: 'label',\n            component: TextFormControlComponent,\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.label.label')\n            } as ITextFormControlOptions\n          },\n          {\n            name: 'description',\n            component: TextareaFormControlComponent,\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label'),\n              rows: 3\n            } as ITextareaFormControlOptions\n          },\n          {\n            name: 'guid',\n            component: TextFormControlComponent,\n            isDisabled: true,\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.id.label')\n            } as ITextareaFormControlOptions\n          }\n        ]\n      }\n    ];\n  }\n\n  getModelFromDefinition(definition?: IProcessFlowElementDefinition): IStartEventModel {\n    let elementModel = {\n      description: '',\n      guid: null,\n      label: '',\n      name: RX_PROCESS_DEFINITION.processElementDisplayNames.startEvent,\n      resourceType: RX_PROCESS_DEFINITION.processElementResourceTypes.startEvent,\n      type: RX_PROCESS_DEFINITION.processElementTypes.startEvent\n    };\n\n    if (definition) {\n      elementModel = {\n        ...elementModel,\n        description: definition.description,\n        guid: definition.guid,\n        label: definition.name,\n        name: definition.name,\n        resourceType: definition.resourceType\n      };\n    }\n\n    return elementModel;\n  }\n\n  getShape(options: IPlainObject): any {\n    return new joint.shapes.rx.StartEvent({\n      elementModel: this.getModelFromDefinition(),\n      position: options.position\n    });\n  }\n\n  setCommonDataDictionaryBranch(guid: string, dataDictionaryBranch: Observable<IDataDictionaryBranch>): void {}\n\n  validate(model: IStartEventModel, availableCells: any): Observable<IValidationIssue[]> {\n    const validationIssues: IValidationIssue[] = [];\n\n    const inboundLinks = availableCells.filter((cell) => cell.prop('targetNode') === model.guid);\n\n    if (!isEmpty(inboundLinks)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.process-designer.elements.start-event.validation.inbound-sequence-flow.message'\n        ),\n        data: {\n          guid: model.guid,\n          inspectorTabIndex: 1\n        }\n      });\n    }\n\n    const outboundLinks = availableCells.filter((cell) => cell.prop('sourceNode') === model.guid);\n\n    if (outboundLinks.length != 1) {\n      validationIssues.push({\n        type: ValidationIssueType.Warning,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.process-designer.elements.start-event.validation.single-outbound-sequence-flow.message'\n        ),\n        data: {\n          guid: model.guid,\n          inspectorTabIndex: 1\n        }\n      });\n    }\n\n    if (this.rxStringService.isEmptySafe(model.label)) {\n      if (some(availableCells, (cell) => cell.prop('label') === model.label)) {\n        validationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.validation.must-be-unique.message',\n            {\n              propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.label.label')\n            }\n          ),\n          data: {\n            guid: model.guid,\n            inspectorTabIndex: 1,\n            propertyName: 'label'\n          }\n        });\n      }\n    }\n\n    return of(validationIssues);\n  }\n}\n","import { RX_PROCESS_DEFINITION } from '@helix/platform/process/api';\n\nimport { RxProcessShapeMixin } from '../shared/process-shape/process-shape.mixin';\n\ndeclare var joint: any;\n\nexport class RxStartEvent extends RxProcessShapeMixin(joint.shapes.bpmn.Event) {\n  defaults(): any {\n    return joint.util.deepSupplement(\n      {\n        attrs: {\n          '.label': {\n            fill: 'gray'\n          }\n        },\n\n        defaultName: RX_PROCESS_DEFINITION.processElementDisplayNames.startEvent,\n        eventType: 'start',\n        icon: 'transparent',\n        labelPath: 'attrs/.label/text',\n\n        size: {\n          width: 30,\n          height: 30\n        },\n\n        type: RX_PROCESS_DEFINITION.processElementTypes.startEvent\n      },\n      // @ts-ignore\n      super.defaults\n    );\n  }\n\n  initialize(config: any): any {\n    // @ts-ignore\n    super.initialize(config);\n  }\n}\n","import { RxProcessShapeViewMixin } from '../shared/process-shape/process-shape-view.mixin';\n\ndeclare var joint: any;\n\nexport class RxStartEventView extends RxProcessShapeViewMixin(joint.dia.ElementView) {\n  initialize(config: any): any {\n    // @ts-ignore\n    super.initialize(config);\n  }\n\n  // TODO-VS: remove\n  sgResize(opt): any {\n    // @ts-ignore\n    const scalable = this.scalableNode;\n\n    scalable.attr('transform', `scale(${0.5},${0.5})`);\n\n    // @ts-ignore\n    super.update();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { RX_DESIGNER } from '@helix/platform/shared/api';\nimport { RX_PROCESS_DEFINITION, RxProcessElementRegistryService } from '@helix/platform/process/api';\n\nimport { RxStartEventService } from './start-event.service';\nimport { RxStartEvent } from './start-event.class';\nimport { RxStartEventView } from './start-event-view.class';\n\n@NgModule()\nexport class RxStartEventRegistrationModule {\n  constructor(\n    rxProcessElementRegistryService: RxProcessElementRegistryService,\n    rxStartEventService: RxStartEventService,\n    translateService: TranslateService\n  ) {\n    rxProcessElementRegistryService.register({\n      displayName: translateService.instant(\n        'com.bmc.arsys.rx.client.process-designer.elements.start-event.display-name.label'\n      ),\n      elementService: rxStartEventService,\n      group: RX_PROCESS_DEFINITION.standardProcessElementGroups.events.name,\n      paletteItem: {\n        border: RX_DESIGNER.paletteItemBorder.solid,\n        label: RX_DESIGNER.paletteItemLabel.outer,\n        shape: RX_DESIGNER.paletteItemShape.circle\n      },\n      resourceType: RX_PROCESS_DEFINITION.processElementResourceTypes.startEvent,\n      shapeClass: RxStartEvent,\n      shapeType: 'StartEvent',\n      type: RX_PROCESS_DEFINITION.processElementTypes.startEvent,\n      viewShapeClass: RxStartEventView,\n      viewShapeType: 'StartEventView'\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { filter, map, startsWith } from 'lodash';\n\nimport { RxIdService, RxJsonParserService } from '@helix/platform/utils';\nimport { IProcessDefinition, RxProcessElementSearchService } from '@helix/platform/process/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxProcessElementService {\n  constructor(\n    private rxIdService: RxIdService,\n    private rxJsonParserService: RxJsonParserService,\n    private rxProcessElementSearchService: RxProcessElementSearchService\n  ) {}\n\n  // TODO-VS: remove in favour of getJsonObject\n  getGraph(definition: IProcessDefinition) {\n    const graph = this.rxJsonParserService.tryParseJson(definition.layout, { cells: [] });\n\n    graph.cells.forEach((cell) => {\n      const embeddedElementIds = map(filter(graph.cells, { parent: cell.id }), 'id');\n\n      if (startsWith(cell.type, 'rx.CallActivity')) {\n        cell.type = 'rx.CallActivity';\n      }\n\n      if (startsWith(cell.type, 'rx.ProcessActions')) {\n        cell.type = 'rx.ProcessAction';\n      }\n\n      if (embeddedElementIds.length) {\n        cell.embeds = embeddedElementIds;\n      }\n\n      cell.processDefinitionName = definition.name;\n\n      const flowElement = this.rxProcessElementSearchService.find(definition, {\n        guid: this.rxIdService.get(cell.id)\n      });\n\n      if (flowElement?.multiInstanceLoopDefinition) {\n        cell.multiInstanceLoopDefinition = flowElement.multiInstanceLoopDefinition;\n      }\n    });\n\n    return graph;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RxOverlayModule } from '@helix/platform/shared/api';\n\nimport { RxExpressionInputMapInspectorWidgetModule } from './shared/components/expression-input-map-inspector-widget/expression-input-map-inspector-widget.module';\nimport { RxProcessActionRegistrationModule } from './process-action/process-action-registration.module';\nimport { RxEndEventRegistrationModule } from './end-event/end-event-registration.module';\nimport { RxStartEventRegistrationModule } from './start-event/start-event-registration.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RxEndEventRegistrationModule,\n    RxExpressionInputMapInspectorWidgetModule,\n    RxOverlayModule,\n    RxProcessActionRegistrationModule,\n    RxStartEventRegistrationModule\n  ]\n})\nexport class RxProcessElementsModule {}\n","import { cloneDeep, defaults, forEach, isUndefined, reject, size, sortBy } from 'lodash';\nimport {\n  IProcessDefinition,\n  RxProcessDefinitionCacheService,\n  RxProcessElementSearchService\n} from '@helix/platform/process/api';\nimport { RX_DESIGNER_ELEMENT_SHAPE, RxRootInjector } from '@helix/platform/shared/api';\nimport { RxProcessElementService } from './process-element.service';\n\ndeclare var joint: any;\n\n// https://github.com/clientIO/joint/issues/817\n// When the size of shape is changed, JointJS resizes shape`s body via scaling.\n// IE11 & MS-Edge do not support `vector-effect`, which results in changing stroke-width.\n// `refHeight` & `refWidth` attributes allow resizing rectangular sub-elements relative to the referenced element without scaling.\njoint.util.deepSupplement(joint.shapes.bpmn.Activity.prototype.defaults, {\n  attrs: {\n    '.body': {\n      refWidth: 1,\n      refHeight: 1\n    }\n  },\n\n  // 1. Removed scalable group (<g class=\"scalable\">) from the original template of Activity element\n  // to resolve the issue of restoring the element size after undo/redo operations.\n  // http://clientio.freshdesk.com/support/tickets/560\n  // https://jira.bmc.com/browse/DRIST-8990\n  // 2. Added multi instance icons\n  markup: [\n    '<g class=\"rotatable\">',\n    '<rect class=\"body outer\"/>',\n    '<rect class=\"body inner\"/>',\n    joint.env.test('svgforeignobject')\n      ? '<foreignObject class=\"fobj\"><body xmlns=\"http://www.w3.org/1999/xhtml\"><div class=\"content\"/></body></foreignObject>'\n      : '<text class=\"content\"/>',\n    '<g class=\"rx-icon-container\">',\n    '<image class=\"icon-multi-instance-sequential\"/>',\n    '<image class=\"icon-multi-instance-parallel\"/>',\n    '<path class=\"sub-process\"/>',\n    '</g>',\n    '<image class=\"icon\"/>',\n    '</g>'\n  ].join('')\n});\n\nexport namespace rx {\n  export class BaseExpandableProcessShape extends joint.shapes.bpmn.Activity {\n    initialize(options) {\n      super.initialize(options);\n\n      const embeddedCells = this.getEmbeddedCells();\n      const embedsWithoutBoundaryEventLength = size(reject(embeddedCells, 'isBoundaryEvent'));\n\n      let modelEmbeds;\n\n      if (embedsWithoutBoundaryEventLength === embeddedCells.length) {\n        modelEmbeds = this.get('embeds');\n      }\n\n      if (this.collection && this.get('expanded') && !embedsWithoutBoundaryEventLength && isUndefined(modelEmbeds)) {\n        RxRootInjector.injector\n          .get(RxProcessDefinitionCacheService)\n          .getProcessDefinition(this.get('processDefinitionName'))\n          .subscribe((processDefinition: IProcessDefinition) => {\n            const flowElement =\n              RxRootInjector.injector\n                .get(RxProcessElementSearchService)\n                .findByGuid(processDefinition, `rx-${this.get('id')}`) || {};\n\n            this.expand(processDefinition, RxRootInjector.injector.get(RxProcessElementService).getGraph(flowElement));\n          });\n      }\n    }\n\n    private expand(definition, graph): void {\n      graph.cells = sortBy(\n        graph.cells,\n        (cell) => cell.type === 'rx.SequenceFlow' || cell.type === 'rx.TextAnnotationAssociation'\n      );\n\n      const cellModels = [];\n\n      forEach(graph.cells, (cell) => {\n        const CellModel = joint.util.getByPath(this.collection.cellNamespace, cell.type, '.');\n        const cellModel = new CellModel(cell);\n\n        if (cellModel.get('expanded')) {\n          const flowElement =\n            RxRootInjector.injector\n              .get(RxProcessElementSearchService)\n              .findByGuid(definition, `rx-${cellModel.get('id')}`) || {};\n\n          cellModel.expand.call(\n            this,\n            definition,\n            RxRootInjector.injector.get(RxProcessElementService).getGraph(flowElement)\n          );\n        }\n\n        cellModels.push(cellModel);\n      });\n\n      this.collection.add(cellModels);\n\n      this.attr({\n        '.sub-process': {\n          display: 'none',\n          visibility: 'hidden'\n        }\n      });\n    }\n  }\n\n  export class BaseCallActivity extends BaseExpandableProcessShape {\n    defaults() {\n      return joint.util.deepSupplement(\n        {\n          activityType: 'call-activity',\n          expanded: false,\n          subProcess: true,\n\n          attrs: {\n            path: {\n              transform: 'scale(0.3, 0.3)',\n              'ref-dy': -15\n            },\n            rect: {\n              rx: 2,\n              ry: 2\n            }\n          }\n        },\n        joint.shapes.bpmn.Activity.prototype.defaults\n      );\n    }\n  }\n\n  export class BaseStaticMultiInstance extends joint.shapes.bpmn.Activity {\n    static initMultiInstanceIcons(model): void {\n      const attrs = cloneDeep(model.get('attrs'));\n\n      const iconAttr = {\n        width: 10,\n        height: 10,\n        y: 1\n      };\n\n      attrs['.sub-process'] = {\n        d: 'M 0 0 L 30 0 30 30 0 30 z M 15 4 L 15 26 M 4 15 L 26 15',\n        stroke: '#000000',\n        fill: 'transparent',\n        transform: 'scale(0.3, 0.3) translate(0, 6)'\n      };\n\n      attrs['.sub-process'].display = model.prop('subProcess') ? '' : 'none';\n\n      attrs['.icon-multi-instance-sequential'] = cloneDeep(iconAttr);\n      attrs['.icon-multi-instance-parallel'] = cloneDeep(iconAttr);\n\n      attrs['.icon-multi-instance-sequential']['xlink:href'] =\n        RX_DESIGNER_ELEMENT_SHAPE.bpmnIcons.multiInstanceSequential;\n\n      attrs['.icon-multi-instance-parallel']['xlink:href'] = RX_DESIGNER_ELEMENT_SHAPE.bpmnIcons.multiInstanceParallel;\n\n      attrs['.rx-icon-container'] = {\n        ref: '.body',\n        'x-alignment': 'middle',\n        'ref-x': 0.5,\n        'ref-dy': -15\n      };\n\n      defaults(attrs['.icon'], attrs.image);\n\n      delete attrs.image;\n      delete attrs.path;\n\n      model.unset('attrs', { silent: true });\n      model.set('attrs', attrs);\n    }\n\n    public static updateMultiInstanceIcons(model): void {\n      const loopType = model.prop('loopType');\n      const attrs = cloneDeep(model.get('attrs'));\n\n      attrs['.icon-multi-instance-sequential'].display = loopType === 'true' ? '' : 'none';\n      attrs['.icon-multi-instance-parallel'].display = loopType === 'false' ? '' : 'none';\n\n      if (model.prop('subProcess')) {\n        attrs['.sub-process'].transform = loopType\n          ? 'scale(0.3, 0.3) translate(50, 6)'\n          : 'scale(0.3, 0.3) translate(0, 6)';\n      }\n\n      model.unset('attrs', { silent: true });\n      model.set('attrs', attrs, { rxSilent: true });\n    }\n  }\n\n  export class BaseMultiInstance extends joint.shapes.bpmn.Activity {\n    public initialize(options): void {\n      super.initialize(options);\n\n      if (options.multiInstanceLoopDefinition) {\n        this.prop('loopType', String(options.multiInstanceLoopDefinition.isSequential), { silent: true });\n      }\n\n      BaseStaticMultiInstance.initMultiInstanceIcons(this);\n      BaseStaticMultiInstance.updateMultiInstanceIcons(this);\n    }\n  }\n\n  export class CallActivity extends BaseCallActivity {\n    initialize(options): void {\n      super.initialize(options);\n\n      if (options.multiInstanceLoopDefinition) {\n        this.prop('loopType', String(options.multiInstanceLoopDefinition.isSequential), { silent: true });\n      }\n\n      BaseStaticMultiInstance.initMultiInstanceIcons(this);\n      BaseStaticMultiInstance.updateMultiInstanceIcons(this);\n    }\n\n    defaults() {\n      return joint.util.deepSupplement(\n        {\n          type: 'rx.CallActivity'\n        },\n        BaseCallActivity.prototype.defaults()\n      );\n    }\n  }\n\n  export class Connector extends BaseMultiInstance {\n    defaults() {\n      return joint.util.deepSupplement(\n        {\n          type: 'rx.Connector',\n          icon: 'connector',\n\n          attrs: {\n            '.icon': {\n              width: 12,\n              height: 12,\n              'ref-x': 3,\n              'ref-y': 3\n            },\n            rect: {\n              rx: 4,\n              ry: 4\n            }\n          }\n        },\n        joint.shapes.bpmn.Activity.prototype.defaults\n      );\n    }\n  }\n\n  export class EndEvent extends joint.shapes.bpmn.Event {\n    defaults() {\n      return joint.util.deepSupplement(\n        {\n          type: 'rx.EndEvent',\n          eventType: 'end',\n\n          attrs: {\n            '.label': {\n              fill: 'gray'\n            }\n          }\n        },\n        joint.shapes.bpmn.Event.prototype.defaults\n      );\n    }\n  }\n\n  export class ErrorBoundaryEvent extends joint.shapes.bpmn.Event {\n    defaults() {\n      return joint.util.deepSupplement(\n        {\n          type: 'rx.ErrorBoundaryEvent',\n          eventType: 'intermediate',\n          icon: 'errorBoundary',\n\n          attrs: {\n            '.label': {\n              fill: 'gray'\n            }\n          }\n        },\n        joint.shapes.bpmn.Event.prototype.defaults\n      );\n    }\n  }\n\n  export class ErrorEndEvent extends joint.shapes.bpmn.Event {\n    defaults() {\n      return joint.util.deepSupplement(\n        {\n          type: 'rx.ErrorEndEvent',\n          eventType: 'end',\n          icon: 'errorEnd',\n\n          attrs: {\n            '.label': {\n              fill: 'gray'\n            }\n          }\n        },\n        joint.shapes.bpmn.Event.prototype.defaults\n      );\n    }\n  }\n\n  export class ExclusiveGateway extends joint.shapes.bpmn.Gateway {\n    defaults() {\n      return joint.util.deepSupplement(\n        {\n          type: 'rx.ExclusiveGateway',\n          icon: 'cross',\n\n          attrs: {\n            '.label': {\n              fill: 'gray'\n            }\n          }\n        },\n        joint.shapes.bpmn.Gateway.prototype.defaults\n      );\n    }\n  }\n\n  export class ParallelGateway extends joint.shapes.bpmn.Gateway {\n    defaults() {\n      return joint.util.deepSupplement(\n        {\n          type: 'rx.ParallelGateway',\n          icon: 'plus',\n\n          attrs: {\n            '.label': {\n              fill: 'gray'\n            }\n          }\n        },\n        joint.shapes.bpmn.Gateway.prototype.defaults\n      );\n    }\n  }\n\n  export class ProcessAction extends joint.shapes.bpmn.Activity {\n    defaults() {\n      return joint.util.deepSupplement(\n        {\n          type: 'rx.ProcessAction',\n          icon: 'gear',\n\n          attrs: {\n            '.icon': {\n              width: 12,\n              height: 12,\n              'ref-x': 3,\n              'ref-y': 3\n            },\n            rect: {\n              rx: 4,\n              ry: 4\n            }\n          },\n\n          size: {\n            width: 70,\n            height: 60\n          }\n        },\n        joint.shapes.bpmn.Activity.prototype.defaults\n      );\n    }\n  }\n\n  export class ReceiveTask extends BaseMultiInstance {\n    defaults() {\n      return joint.util.deepSupplement(\n        {\n          type: 'rx.ReceiveTask',\n          icon: 'message',\n\n          attrs: {\n            '.icon': {\n              width: 12,\n              height: 12,\n              'ref-x': 3,\n              'ref-y': 3\n            },\n            rect: {\n              rx: 4,\n              ry: 4\n            }\n          }\n        },\n        joint.shapes.bpmn.Activity.prototype.defaults\n      );\n    }\n  }\n\n  export class SequenceFlow extends joint.shapes.bpmn.Flow {\n    defaults() {\n      return joint.util.deepSupplement(\n        {\n          type: 'rx.SequenceFlow',\n\n          router: {\n            name: 'manhattan',\n\n            args: {\n              step: 5\n            }\n          }\n        },\n        joint.shapes.bpmn.Flow.prototype.defaults\n      );\n    }\n  }\n\n  export class StartEvent extends joint.shapes.bpmn.Event {\n    defaults() {\n      return joint.util.deepSupplement(\n        {\n          type: 'rx.StartEvent',\n          eventType: 'start',\n\n          attrs: {\n            '.label': {\n              fill: 'gray'\n            }\n          }\n        },\n        joint.shapes.bpmn.Event.prototype.defaults\n      );\n    }\n  }\n\n  export class SubProcess extends BaseExpandableProcessShape {\n    initialize(options): void {\n      super.initialize(options);\n\n      if (options.multiInstanceLoopDefinition) {\n        this.prop('loopType', String(options.multiInstanceLoopDefinition.isSequential), { silent: true });\n      }\n\n      BaseStaticMultiInstance.initMultiInstanceIcons(this);\n      BaseStaticMultiInstance.updateMultiInstanceIcons(this);\n    }\n\n    defaults() {\n      return joint.util.deepSupplement(\n        {\n          type: 'rx.SubProcess',\n          activityType: 'event-sub-process',\n          expanded: false,\n          subProcess: true,\n\n          attrs: {\n            rect: {\n              rx: 4,\n              ry: 4\n            }\n          }\n        },\n        joint.shapes.bpmn.Activity.prototype.defaults\n      );\n    }\n  }\n\n  export class TextAnnotation extends joint.shapes.bpmn.Annotation {\n    defaults() {\n      return joint.util.deepSupplement(\n        {\n          type: 'rx.TextAnnotation',\n\n          attrs: {\n            rect: {\n              rx: 2,\n              ry: 2\n            }\n          }\n        },\n        joint.shapes.bpmn.Annotation.prototype.defaults\n      );\n    }\n  }\n\n  export class TextAnnotationAssociation extends joint.shapes.bpmn.Flow {\n    defaults() {\n      return joint.util.deepSupplement(\n        {\n          type: 'rx.TextAnnotationAssociation',\n          flowType: 'association'\n        },\n        joint.shapes.bpmn.Flow.prototype.defaults\n      );\n    }\n  }\n\n  export class TimerEvent extends joint.shapes.bpmn.Event {\n    defaults() {\n      return joint.util.deepSupplement(\n        {\n          type: 'rx.TimerEvent',\n          eventType: 'intermediate',\n          icon: 'clock',\n\n          attrs: {\n            '.label': {\n              fill: 'gray'\n            }\n          }\n        },\n        joint.shapes.bpmn.Event.prototype.defaults\n      );\n    }\n  }\n\n  export class UserTask extends BaseMultiInstance {\n    defaults() {\n      return joint.util.deepSupplement(\n        {\n          type: 'rx.UserTask',\n          icon: 'user',\n\n          attrs: {\n            '.icon': {\n              width: 12,\n              height: 12,\n              'ref-x': 3,\n              'ref-y': 3\n            },\n            rect: {\n              rx: 4,\n              ry: 4\n            }\n          }\n        },\n        joint.shapes.bpmn.Activity.prototype.defaults\n      );\n    }\n  }\n\n  export class WebRequest extends joint.shapes.bpmn.Activity {\n    defaults() {\n      return joint.util.deepSupplement(\n        {\n          type: 'rx.WebRequest',\n          icon: 'webRequest',\n\n          attrs: {\n            '.icon': {\n              width: 12,\n              height: 12,\n              'ref-x': 3,\n              'ref-y': 3\n            },\n            rect: {\n              rx: 4,\n              ry: 4\n            }\n          }\n        },\n        joint.shapes.bpmn.Activity.prototype.defaults\n      );\n    }\n  }\n}\n","import { extend, result } from 'lodash';\nimport * as Backbone from 'backbone';\nimport * as processShapes from './process-shapes';\n\ndeclare var V: any;\n\nexport class RxDesignerCellHighlighter extends Backbone.View {\n  selectors = {\n    bpmn: {\n      'bpmn.Event': '.scalable circle.outer',\n      'bpmn.Annotation': '.rotatable path.stroke',\n      link: 'path.connection',\n      'bpmn.Flow': 'path.connection',\n      'bpmn.Gateway': '.scalable polygon.body',\n      'bpmn.Activity': '.scalable rect.outer',\n      'basic.Rect': '.scalable rect'\n    },\n    rx: {\n      'rx.TextAnnotation': '.rotatable path.stroke',\n      'rx.TextAnnotationAssociation': 'path.connection',\n      'rx.SequenceFlow': 'path.connection',\n      'rx.ParallelGateway': '.scalable polygon.body',\n      'rx.ExclusiveGateway': '.scalable polygon.body',\n      'rx.StartEvent': '.scalable circle.outer',\n      'rx.EndEvent': '.scalable circle.outer',\n      'rx.SubProcess': '.rotatable rect.outer',\n      'rx.ReceiveTask': '.rotatable rect.outer',\n      'rx.UserTask': '.rotatable rect.outer',\n      'rx.Connector': '.rotatable rect.outer',\n      'rx.TimerEvent': '.scalable circle.outer',\n      'rx.WebRequest': '.rotatable rect.outer'\n    }\n  };\n\n  cellView;\n\n  cellViewHighlighter;\n\n  options: {\n    strokeWidth: 10;\n    circleRadius: 31.5;\n    color: 'green';\n  };\n\n  constructor(cellView) {\n    super();\n\n    this.cellView = cellView;\n\n    this.listenTo(this.cellView.paper, 'scale translate', this.update);\n\n    this.$el = this.cellView.$el;\n  }\n\n  init(options) {\n    this.options = extend({}, result(this, 'options'), options || {});\n\n    this.cellView.model.on('remove', this.eraseHighlightAndRemove);\n\n    this.update();\n  }\n\n  update() {\n    this.eraseHighlight();\n    this.drawHighlight();\n  }\n\n  eraseHighlightAndRemove(evt) {\n    this.eraseHighlight();\n    Backbone.View.prototype.remove.apply(this, arguments);\n  }\n\n  private eraseHighlight() {\n    if (this.cellViewHighlighter) {\n      this.cellViewHighlighter.remove();\n    }\n  }\n\n  private drawHighlight() {\n    let selector;\n\n    switch (true) {\n      case this.cellView.model instanceof processShapes.rx.ProcessAction:\n      case this.cellView.model instanceof processShapes.rx.BaseCallActivity:\n        selector = '.rotatable rect.outer';\n        break;\n\n      default:\n        selector =\n          this.selectors.rx[this.cellView.model.prop('type')] || this.selectors.bpmn[this.cellView.model.prop('type')];\n    }\n\n    const shape = this.cellView.$el.find(selector).first();\n    const highlight = shape[0] ? V(shape[0]).clone() : undefined;\n\n    if (highlight) {\n      highlight.attr({\n        stroke: this.options.color,\n        'stroke-width': this.options.strokeWidth\n      });\n\n      if (highlight.node.tagName === 'circle') {\n        highlight.attr({\n          r: this.options.circleRadius\n        });\n      }\n\n      this.cellViewHighlighter = highlight;\n\n      shape.closest('g').prepend(highlight.node);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { assign, compact, debounce, find, forEach, includes, map } from 'lodash';\nimport { IProcessDefinition, IProcessInstance, RxProcessElementSearchService } from '@helix/platform/process/api';\nimport { RX_GUID, RxIdService, RxTreeService } from '@helix/platform/utils';\nimport { RX_DESIGNER_ELEMENT_SHAPE } from '@helix/platform/shared/api';\nimport { RxDesignerCellHighlighter } from './designer-cell-highlighter.class';\nimport { RxProcessElementService } from './process-element.service';\nimport * as processShapes from './process-shapes';\n\ndeclare var joint: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRappidPaperService {\n  private green = '#89c341';\n  private gray = '#999999';\n  private red = '#f83200';\n\n  constructor(\n    private rxIdService: RxIdService,\n    private rxProcessElementService: RxProcessElementService,\n    private rxProcessElementSearchService: RxProcessElementSearchService,\n    private rxTreeService: RxTreeService\n  ) {\n    assign(joint.shapes.bpmn.icons, RX_DESIGNER_ELEMENT_SHAPE.bpmnIcons);\n  }\n\n  init(element, graph?, shouldZoomToFit: boolean = false) {\n    // : PaperScroller\n    // Do not instantiate paper with width or height parameters equal to 0, (e.g element is hidden in the DOM),\n    // otherwise it will cause RappidJS issue in the Firefox Browser. See DRIST-18107 for more details.\n    const paper = new joint.dia.Paper({\n      width: element.width || 1,\n      height: element.height || 1,\n      model: new joint.dia.Graph(\n        {},\n        {\n          cellNamespace: processShapes\n        }\n      ),\n      cellViewNamespace: processShapes,\n      interactive: false,\n\n      // specifying a non-existent theme to prevent rappid from overriding our styles\n      // due to 'default' theme being applied\n      theme: 'rx'\n    });\n\n    const paperScroller = new joint.ui.PaperScroller({\n      autoResizePaper: true,\n      paper: paper,\n      padding: {\n        padding: 10\n      }\n    });\n\n    element.appendChild(paperScroller.render().el);\n\n    paperScroller.options.paper.on('blank:pointerdown', paperScroller.startPanning);\n\n    this.resetScroll(paperScroller);\n\n    if (graph) {\n      paperScroller.options.paper.model.fromJSON(graph);\n\n      if (shouldZoomToFit) {\n        this.zoomToFit(paperScroller);\n      }\n    }\n\n    return paperScroller;\n  }\n\n  setGraph(\n    paperScroller,\n    processDefinition: IProcessDefinition,\n    processInstance: IProcessInstance,\n    shouldZoomToFit: boolean = false\n  ): void {\n    const graph = this.rxProcessElementService.getGraph(processDefinition);\n\n    const paper = paperScroller.options.paper;\n\n    paper.model.fromJSON(graph);\n\n    if (shouldZoomToFit) {\n      this.zoomToFit(paperScroller);\n    }\n\n    forEach(processInstance.activities, (activity) => {\n      const activityId = this.rxIdService.getBase(activity.activityId);\n      const cell = paper.findViewByModel(activityId);\n\n      if (cell) {\n        if (activity.activities.length && cell.model.get('expanded')) {\n          const subProcessActivities = this.rxTreeService.flattenTree(activity, 'activities');\n          const elements = paper.model.getElements();\n          const graphIds = map(elements, 'id');\n\n          const originalGraphIds = compact(map(elements, (element) => element.get('originalGuid')));\n\n          forEach(subProcessActivities, (subProcessActivity) => {\n            // we need to do this check in order to filter inner elements that are in process\n            // instance json but are not present in graph as their parent is not expanded\n            if (includes(graphIds, this.rxIdService.getBase(subProcessActivity.activityId))) {\n              this.highlightActivity(subProcessActivity, paper, processDefinition);\n            } else if (originalGraphIds && includes(originalGraphIds, subProcessActivity.activityId)) {\n              this.highlightActivity(subProcessActivity, paper, processDefinition);\n            }\n          });\n\n          this.highlightActivity(activity, paper, processDefinition);\n        } else {\n          this.highlightActivity(activity, paper, processDefinition);\n        }\n      }\n    });\n\n    if (processInstance.exceptionMessage) {\n      // exceptionMessage will be like <activityName>(<acitivityGuid>) - [<errorMessage>]\n      // RegExp - find guid from exceptionMessage\n      const guidPattern = new RegExp('\\\\((' + RX_GUID.baseIdPattern + ')\\\\)', 'i');\n      const activityId = guidPattern.exec(processInstance.exceptionMessage);\n\n      if (activityId[0]) {\n        const activityBaseId = this.rxIdService.getBase(activityId[1]);\n\n        this.highlightCell(activityBaseId, paper, this.red, processDefinition);\n      }\n    }\n\n    this.resetScroll(paperScroller);\n  }\n\n  private highlight(cellView, color) {\n    if (cellView instanceof joint.dia.CellView) {\n      const cellHighlighter = new RxDesignerCellHighlighter(cellView);\n\n      cellHighlighter.init({\n        strokeWidth: 10,\n        color: color\n      });\n    }\n  }\n\n  private highlightActivity(activity, paper, plainProcessDefinition) {\n    const activityId = this.rxIdService.getBase(activity.activityId);\n    const color = activity.endTime ? this.gray : this.green;\n\n    this.highlightCell(activityId, paper, color, plainProcessDefinition);\n  }\n\n  private highlightCell(cellId, paper, color, plainProcessDefinition) {\n    const elements = paper.model.getElements();\n\n    let cell;\n    let cellView;\n\n    if (!includes(map(elements, 'id'), cellId)) {\n      cell = find(elements, (element) => element.get('originalGuid') === this.rxIdService.get(cellId));\n\n      cellId = cell ? cell.id : cellId;\n    }\n\n    cellView = paper.findViewByModel(cellId);\n\n    if (cellView) {\n      this.highlight(cellView, color);\n    } else {\n      this.highlightVisibleErroredCell(cellId, false, paper, plainProcessDefinition);\n\n      // Used to highlight errored cell inside expanded sub-processes\n      paper.model.on(\n        'change',\n        debounce(() => {\n          this.highlightVisibleErroredCell(cellId, true, paper, plainProcessDefinition);\n        }, 100)\n      );\n    }\n  }\n\n  private highlightVisibleErroredCell(cellId, isFirstEntry, paper, plainProcessDefinition) {\n    const owner = this.rxProcessElementSearchService.findOwner(plainProcessDefinition, this.rxIdService.get(cellId));\n\n    let cellView;\n    let erroredElement;\n\n    if (isFirstEntry) {\n      erroredElement = find(owner.flowElements, { guid: this.rxIdService.get(cellId) });\n      cellView = paper.findViewByModel(this.rxIdService.getBase(erroredElement.guid));\n    }\n\n    if (!cellView) {\n      cellView = paper.findViewByModel(this.rxIdService.getBase(owner.guid));\n    }\n\n    if (cellView) {\n      this.highlight(cellView, this.red);\n    } else {\n      this.highlightVisibleErroredCell(owner.guid, false, paper, plainProcessDefinition);\n    }\n  }\n\n  private resetScroll(paperScroller) {\n    paperScroller.el.scrollTop = 0;\n    paperScroller.el.scrollLeft = 0;\n  }\n\n  private zoomToFit(paperScroller) {\n    setTimeout(() => {\n      paperScroller.zoomToFit({\n        padding: 10\n      });\n    });\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["map","processShapes.rx"],"mappings":"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"}