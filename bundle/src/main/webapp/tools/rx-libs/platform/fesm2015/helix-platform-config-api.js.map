{"version":3,"file":"helix-platform-config-api.js","sources":["../../../../libs/platform/config/api/config-definition.types.ts","../../../../libs/platform/config/api/config-definition.service.ts","../../../../libs/platform/config/api/helix-platform-config-api.ts"],"sourcesContent":["import { IAdminSettingPermission } from '@helix/platform/shared/api';\nimport { ISelectionFieldOptionProperties } from '@helix/platform/shared/components';\n\nexport enum ShowInLocationOptions {\n  Application = 'Application',\n  InnovationStudio = 'InnovationStudio',\n  Both = 'Both',\n  None = 'None'\n}\n\nexport interface IConfigLocaleList {\n  componentLabel: string;\n  firstMenu: string;\n  secondMenu: string;\n  locale: string;\n}\n\nexport interface IConfigLocale {\n  locale: string;\n  fieldGrouping: string;\n  settingLabel: string;\n}\n\nexport interface IFieldOptions {\n  isNew: boolean;\n  selectionFieldOptionProperties?: ISelectionFieldOptionProperties;\n}\n\nexport enum ImpactRowVisibility {\n  User = 'User',\n  None = 'None'\n}\n\nexport interface IConfigFieldDefinitionGridRow {\n  guid: string;\n  id: string;\n  keySetting: string;\n  dataType: string;\n  required: string;\n  defaultValue: string | number;\n  fieldGrouping: string;\n}\n\nexport interface IConfigFieldDefinition {\n  dataType: string;\n  defaultValue: string | number;\n  fieldOrder: number;\n  id: string;\n  keySetting: boolean;\n  localeList: IConfigLocale[];\n  maxValue?: number;\n  minValue?: number;\n  optionLabelsById?: { [id: number]: string };\n  optionNamesById?: { [id: number]: string };\n  required: boolean;\n}\n\nexport interface IConfigDefinition {\n  componentName: string;\n  parentComponentName: string;\n  permissions: IAdminSettingPermission[];\n  impactRowVisibility: ImpactRowVisibility;\n  showInLocation: string;\n  supportsMultiple: boolean;\n  settingMetaData: IConfigFieldDefinition[];\n  externalLink: string;\n  registeredModuleName: string;\n  viewComponent: boolean;\n  viewToOpen: string;\n  localeList: IConfigLocaleList[];\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable, of } from 'rxjs';\nimport { IConfigDefinition, ImpactRowVisibility, ShowInLocationOptions } from './config-definition.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxConfigDefinitionService {\n  private url = '/api/rx/application/admin-settings/component';\n\n  constructor(private httpClient: HttpClient, private translateService: TranslateService) {}\n\n  getComponents(): Observable<string[]> {\n    return this.httpClient.get<string[]>('/api/rx/application/admin-settings/components-list');\n  }\n\n  get(componentName: string): Observable<IConfigDefinition> {\n    return this.httpClient.get<IConfigDefinition>(`${this.url}/${encodeURIComponent(componentName)}`);\n  }\n\n  update(componentName: string, configDefinition: IConfigDefinition): Observable<any> {\n    return this.httpClient.put(`${this.url}/${encodeURIComponent(componentName)}`, configDefinition);\n  }\n\n  create(configDefinition: IConfigDefinition): Observable<any> {\n    return this.httpClient.post(`${this.url}`, configDefinition);\n  }\n\n  getNew(isApplication: boolean): Observable<IConfigDefinition> {\n    return of({\n      viewToOpen: 'CommonSettings',\n      componentName: null,\n      externalLink: null,\n      impactRowVisibility: ImpactRowVisibility.None,\n      localeList: [\n        {\n          componentLabel: this.translateService.instant(\n            'com.bmc.arsys.rx.client.config-designer.default-component-label.label'\n          ),\n          firstMenu: null,\n          locale: 'en',\n          secondMenu: null\n        }\n      ],\n      parentComponentName: null,\n      permissions: [],\n      registeredModuleName: null,\n      settingMetaData: [],\n      showInLocation: isApplication ? ShowInLocationOptions.Application : ShowInLocationOptions.InnovationStudio,\n      supportsMultiple: false,\n      viewComponent: false\n    });\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;IAGY;AAAZ,WAAY,qBAAqB;IAC/B,oDAA2B,CAAA;IAC3B,8DAAqC,CAAA;IACrC,sCAAa,CAAA;IACb,sCAAa,CAAA;AACf,CAAC,EALW,qBAAqB,KAArB,qBAAqB,QAKhC;IAoBW;AAAZ,WAAY,mBAAmB;IAC7B,oCAAa,CAAA;IACb,oCAAa,CAAA;AACf,CAAC,EAHW,mBAAmB,KAAnB,mBAAmB;;MCnBlB,yBAAyB;IAGpC,YAAoB,UAAsB,EAAU,gBAAkC;QAAlE,eAAU,GAAV,UAAU,CAAY;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAF9E,QAAG,GAAG,8CAA8C,CAAC;KAE6B;IAE1F,aAAa;QACX,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,oDAAoD,CAAC,CAAC;KAC5F;IAED,GAAG,CAAC,aAAqB;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAoB,GAAG,IAAI,CAAC,GAAG,IAAI,kBAAkB,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;KACnG;IAED,MAAM,CAAC,aAAqB,EAAE,gBAAmC;QAC/D,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,kBAAkB,CAAC,aAAa,CAAC,EAAE,EAAE,gBAAgB,CAAC,CAAC;KAClG;IAED,MAAM,CAAC,gBAAmC;QACxC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,gBAAgB,CAAC,CAAC;KAC9D;IAED,MAAM,CAAC,aAAsB;QAC3B,OAAO,EAAE,CAAC;YACR,UAAU,EAAE,gBAAgB;YAC5B,aAAa,EAAE,IAAI;YACnB,YAAY,EAAE,IAAI;YAClB,mBAAmB,EAAE,mBAAmB,CAAC,IAAI;YAC7C,UAAU,EAAE;gBACV;oBACE,cAAc,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAC3C,uEAAuE,CACxE;oBACD,SAAS,EAAE,IAAI;oBACf,MAAM,EAAE,IAAI;oBACZ,UAAU,EAAE,IAAI;iBACjB;aACF;YACD,mBAAmB,EAAE,IAAI;YACzB,WAAW,EAAE,EAAE;YACf,oBAAoB,EAAE,IAAI;YAC1B,eAAe,EAAE,EAAE;YACnB,cAAc,EAAE,aAAa,GAAG,qBAAqB,CAAC,WAAW,GAAG,qBAAqB,CAAC,gBAAgB;YAC1G,gBAAgB,EAAE,KAAK;YACvB,aAAa,EAAE,KAAK;SACrB,CAAC,CAAC;KACJ;;sHA7CU,yBAAyB;0HAAzB,yBAAyB,cAFxB,MAAM;2FAEP,yBAAyB;kBAHrC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;ACRD;;;;;;"}