{"version":3,"file":"helix-platform-config-designer.js","sources":["../../../../libs/platform/config/designer/config-designer.constant.ts","../../../../libs/platform/config/designer/config-designer.service.ts","../../../../libs/platform/config/designer/services/base-field-definition.service.ts","../../../../libs/platform/config/designer/services/attachment-field-definition.service.ts","../../../../libs/platform/config/designer/services/boolean-field-definition.service.ts","../../../../libs/platform/config/designer/services/character-field-definition.service.ts","../../../../libs/platform/config/designer/services/color-field-definition.service.ts","../../../../libs/platform/config/designer/services/date-only-field-definition.service.ts","../../../../libs/platform/config/designer/services/numeric-field-definition.service.ts","../../../../libs/platform/config/designer/services/decimal-field-definition.service.ts","../../../../libs/platform/config/designer/services/integer-field-definition.service.ts","../../../../libs/platform/config/designer/services/secure-field-definition.service.ts","../../../../libs/platform/config/designer/services/selection-field-definition.service.ts","../../../../libs/platform/config/designer/services/field-definition-manager.service.ts","../../../../libs/platform/config/designer/config-designer/+state/config-designer.actions.ts","../../../../libs/platform/config/designer/config-designer/+state/config-designer.selectors.ts","../../../../libs/platform/config/designer/config-designer/config-designer.component.ts","../../../../libs/platform/config/designer/config-designer/config-designer.component.html","../../../../libs/platform/config/designer/config-designer/+state/config-designer-model.reducer.ts","../../../../libs/platform/config/designer/config-designer/field-groups-editor/field-groups-editor.store.ts","../../../../libs/platform/config/designer/config-designer/field-groups-editor/field-groups-editor.component.ts","../../../../libs/platform/config/designer/config-designer/field-groups-editor/field-groups-editor.component.html","../../../../libs/platform/config/designer/config-designer/+state/config-designer.effects.ts","../../../../libs/platform/config/designer/config-designer/config-designer.module.ts","../../../../libs/platform/config/designer/config-designer-page/config-designer-page.component.ts","../../../../libs/platform/config/designer/config-designer-page/config-designer-page.component.html","../../../../libs/platform/config/designer/config-designer-page/config-designer-page.module.ts","../../../../libs/platform/config/designer/helix-platform-config-designer.ts"],"sourcesContent":["import { ShowInLocationOptions } from '@helix/platform/config/api';\n\nexport const RX_CONFIG_DESIGNER = {\n  featureSelector: 'configDesigner',\n\n  settingAccessOptions: {\n    application: {\n      label: 'Application',\n      value: ShowInLocationOptions.Application\n    },\n    innovationStudio: {\n      label: 'Innovation Studio',\n      value: ShowInLocationOptions.InnovationStudio\n    },\n    both: {\n      value: ShowInLocationOptions.Both\n    },\n    none: {\n      value: ShowInLocationOptions.None\n    }\n  },\n  dataTypes: {\n    attachment: {\n      labelKey: 'com.bmc.arsys.rx.client.common.data-types.attachment.label',\n      resourceType: 'com.bmc.arsys.rx.admin-settings.AttachmentFieldDefinition'\n    },\n    color: {\n      labelKey: 'com.bmc.arsys.rx.client.common.data-types.color.label',\n      resourceType: 'com.bmc.arsys.rx.admin-settings.ColorChooserFieldDefinition'\n    },\n    secure: {\n      labelKey: 'com.bmc.arsys.rx.client.common.data-types.secure.label',\n      resourceType: 'com.bmc.arsys.rx.admin-settings.SecureDataFieldDefinition'\n    }\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { IConfigDefinition, IConfigFieldDefinition, ImpactRowVisibility } from '@helix/platform/config/api';\nimport { RX_CONFIG_DESIGNER } from './config-designer.constant';\nimport { isNil } from 'lodash';\nimport { IConfigDefinitionModel, IConfigFieldDefinitionModel } from './config-designer.types';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigDesignerService {\n  getDefinitionFromDefinitionModel(model: IConfigDefinitionModel): IConfigDefinition {\n    return {\n      componentName: model.componentName,\n      showInLocation:\n        model.isSettingAccessibleInApplication && model.isSettingAccessibleInInnovationStudio\n          ? RX_CONFIG_DESIGNER.settingAccessOptions.both.value\n          : model.isSettingAccessibleInApplication\n          ? RX_CONFIG_DESIGNER.settingAccessOptions.application.value\n          : model.isSettingAccessibleInInnovationStudio\n          ? RX_CONFIG_DESIGNER.settingAccessOptions.innovationStudio.value\n          : RX_CONFIG_DESIGNER.settingAccessOptions.none.value,\n      supportsMultiple: model.supportsMultiple,\n      parentComponentName: model.parentComponentName,\n      impactRowVisibility:\n        isNil(model.parentComponentName) && model.supportsMultiple\n          ? model.impactRowVisibility\n          : ImpactRowVisibility.None,\n      permissions: model.permissions,\n      registeredModuleName: model.registeredModuleName,\n      viewComponent: model.viewComponent,\n      externalLink: model.externalLink,\n      viewToOpen: model.viewToOpen,\n      localeList: [\n        {\n          componentLabel: model.componentLabel,\n          firstMenu:\n            isNil(model.parentComponentName) &&\n            (model.isSettingAccessibleInApplication || model.isSettingAccessibleInInnovationStudio)\n              ? model.firstMenu\n              : null,\n          secondMenu:\n            isNil(model.parentComponentName) &&\n            (model.isSettingAccessibleInApplication || model.isSettingAccessibleInInnovationStudio)\n              ? model.secondMenu\n              : null,\n          locale: 'en-US'\n        }\n      ],\n      settingMetaData: model.fields.map<IConfigFieldDefinition>((field: IConfigFieldDefinitionModel) => ({\n        dataType: field.dataType,\n        defaultValue:\n          field.dataType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType\n            ? field.selectionFieldOptionProperties.defaultValue\n            : field.defaultValue,\n        minValue: field.minValue,\n        maxValue: field.maxValue,\n        fieldOrder: field.fieldOrder,\n        id: field.id,\n        keySetting: field.keySetting,\n        required: field.required,\n        optionNamesById: field.selectionFieldOptionProperties?.optionNamesById,\n        optionLabelsById: field.selectionFieldOptionProperties?.optionLabelsById,\n        localeList: [\n          {\n            ...field.localeList[0],\n            settingLabel: field.settingLabel\n          }\n        ]\n      }))\n    };\n  }\n}\n","import { IFieldOptions } from '@helix/platform/config/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport {\n  ISelectFormControlOptions,\n  ISwitcherFormControlOptions,\n  ITextFormControlOptions,\n  SelectFormControlComponent,\n  SwitchFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RX_CONFIG_DESIGNER } from '../config-designer.constant';\nimport { Injector } from '@angular/core';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { IConfigFieldDefinitionModel } from '../config-designer.types';\nimport { trim } from 'lodash';\n\nexport abstract class BaseFieldDefinitionService {\n  protected translateService = this.injector.get(TranslateService);\n\n  private readonly defaultFieldGroupName = this.translateService.instant(\n    'com.bmc.arsys.rx.client.common.general-items.label'\n  );\n\n  abstract readonly dataType: string;\n\n  constructor(private injector: Injector) {}\n\n  getNewFieldDefinitionModel(fieldProperties: Partial<IConfigFieldDefinitionModel>): IConfigFieldDefinitionModel {\n    return {\n      dataType: this.dataType,\n      required: false,\n      defaultValue: null,\n      localeList: [\n        {\n          locale: 'en',\n          fieldGrouping: this.defaultFieldGroupName,\n          settingLabel: fieldProperties.id\n        }\n      ],\n      ...fieldProperties\n    } as IConfigFieldDefinitionModel;\n  }\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    return [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n        controls: [\n          {\n            name: 'id',\n            component: TextFormControlComponent,\n            isDisabled: !options.isNew,\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label'),\n              required: true\n            } as ITextFormControlOptions\n          },\n          {\n            name: 'settingLabel',\n            component: TextFormControlComponent,\n            options: {\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.config-designer.config-properties.field-label.label'\n              ),\n              required: true\n            }\n          },\n          {\n            name: 'dataType',\n            component: SelectFormControlComponent,\n            isDisabled: true,\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.data-type.label'),\n              options: [\n                {\n                  id: RX_CONFIG_DESIGNER.dataTypes.attachment.resourceType,\n                  name: this.translateService.instant(RX_CONFIG_DESIGNER.dataTypes.attachment.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.boolean.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.boolean.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.character.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.character.labelKey)\n                },\n                {\n                  id: RX_CONFIG_DESIGNER.dataTypes.color.resourceType,\n                  name: this.translateService.instant(RX_CONFIG_DESIGNER.dataTypes.color.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.dateOnly.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.decimal.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.decimal.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.integer.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.integer.labelKey)\n                },\n                {\n                  id: RX_CONFIG_DESIGNER.dataTypes.secure.resourceType,\n                  name: this.translateService.instant(RX_CONFIG_DESIGNER.dataTypes.secure.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.selection.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.selection.labelKey)\n                }\n              ]\n            } as ISelectFormControlOptions\n          }\n        ]\n      },\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.details.label'),\n        controls: [\n          {\n            name: 'required',\n            component: SwitchFormControlComponent,\n            options: {\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.config-designer.config-properties.required-field.label'\n              )\n            } as ISwitcherFormControlOptions\n          },\n          {\n            name: 'keySetting',\n            component: SwitchFormControlComponent,\n            options: {\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.config-designer.config-properties.key-field.label'\n              )\n            } as ISwitcherFormControlOptions\n          }\n        ]\n      }\n    ] as IFormBuilderConfig;\n  }\n\n  validate(fieldModel: IConfigFieldDefinitionModel): IValidationIssue[] {\n    const validationIssues: IValidationIssue[] = [];\n\n    if (!trim(fieldModel.id)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label')\n          }\n        ),\n        data: {\n          propertyName: 'id',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (!trim(fieldModel.settingLabel)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.field-label.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'settingLabel',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { CounterFormControlComponent, ICounterFormControlOptions } from '@helix/platform/shared/components';\nimport { RX_CONFIG_DESIGNER } from '../config-designer.constant';\nimport { BaseFieldDefinitionService } from './base-field-definition.service';\nimport { RX_NUMBER } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttachmentFieldDefinitionService extends BaseFieldDefinitionService {\n  dataType = RX_CONFIG_DESIGNER.dataTypes.attachment.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(options);\n\n    // Removed 'Key field for repeated setting' control from Details section\n    inspectorConfig[1].controls.pop();\n\n    // Adding controls specific to attachment field to Details section\n    inspectorConfig[1].controls.push({\n      name: 'maxValue',\n      component: CounterFormControlComponent,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.max-file-size.label'),\n        allowIntegerOnly: true,\n        minValue: 0,\n        maxValue: RX_NUMBER.maxInteger\n      } as ICounterFormControlOptions\n    });\n\n    return inspectorConfig;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { ISelectFormControlOptions, SelectFormControlComponent } from '@helix/platform/shared/components';\nimport { BaseFieldDefinitionService } from './base-field-definition.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BooleanFieldDefinitionService extends BaseFieldDefinitionService {\n  dataType = RX_RECORD_DEFINITION.dataTypes.boolean.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(options);\n\n    // Adding controls specific to boolean field to Details section\n    inspectorConfig[1].controls.splice(1, 0, {\n      name: 'defaultValue',\n      component: SelectFormControlComponent,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n        emptyOption: true,\n        options: [\n          {\n            id: 'true',\n            name: this.translateService.instant('com.bmc.arsys.rx.client.common.true')\n          },\n          {\n            id: 'false',\n            name: this.translateService.instant('com.bmc.arsys.rx.client.common.false')\n          }\n        ]\n      } as ISelectFormControlOptions\n    });\n\n    return inspectorConfig;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport {\n  CounterFormControlComponent,\n  ICounterFormControlOptions,\n  ITextFormControlOptions,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { BaseFieldDefinitionService } from './base-field-definition.service';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { RX_NUMBER, RxNumberUtilsService } from '@helix/platform/utils';\nimport { IConfigFieldDefinitionModel } from '../config-designer.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterFieldDefinitionService extends BaseFieldDefinitionService {\n  dataType = RX_RECORD_DEFINITION.dataTypes.character.resourceType;\n\n  constructor(injector: Injector, private rxNumberUtilsService: RxNumberUtilsService) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(options);\n\n    // Adding controls specific to character field to Details section\n    inspectorConfig[1].controls.splice(\n      1,\n      0,\n      {\n        name: 'minValue',\n        component: CounterFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.config-designer.config-properties.min-length.label'\n          ),\n          allowIntegerOnly: true,\n          minValue: 0,\n          maxValue: RX_NUMBER.maxInteger\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'maxValue',\n        component: CounterFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.config-designer.config-properties.max-length.label'\n          ),\n          allowIntegerOnly: true,\n          minValue: 0,\n          maxValue: RX_NUMBER.maxInteger\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'defaultValue',\n        component: TextFormControlComponent,\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n        } as ITextFormControlOptions\n      }\n    );\n\n    return inspectorConfig;\n  }\n\n  validate(fieldModel: IConfigFieldDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel);\n\n    if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.minValue) && Number(fieldModel.minValue) < 0) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.invalid-min-length-error.message'\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxValue) && Number(fieldModel.maxValue) < 0) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.invalid-min-length-error.message'\n        ),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.minValue && Number(fieldModel.minValue) > RX_NUMBER.maxInteger) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.min-length.label'\n            ),\n            maxValue: RX_NUMBER.maxInteger\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.maxValue && Number(fieldModel.maxValue) > RX_NUMBER.maxInteger) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.max-length.label'\n            ),\n            maxValue: RX_NUMBER.maxInteger\n          }\n        ),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.minValue) &&\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxValue) &&\n      Number(fieldModel.minValue) > Number(fieldModel.maxValue)\n    ) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.min-length.label'\n            ),\n            maxValue: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.max-length.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { ColorPickerFormControlComponent, IColorPickerFormControlOptions } from '@helix/platform/shared/components';\nimport { RX_CONFIG_DESIGNER } from '../config-designer.constant';\nimport { BaseFieldDefinitionService } from './base-field-definition.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColorFieldDefinitionService extends BaseFieldDefinitionService {\n  dataType = RX_CONFIG_DESIGNER.dataTypes.color.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(options);\n\n    // Adding controls specific to color field to Details section\n    inspectorConfig[1].controls.splice(1, 0, {\n      name: 'defaultValue',\n      component: ColorPickerFormControlComponent,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n      } as IColorPickerFormControlOptions\n    });\n\n    return inspectorConfig;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { DateFormControlComponent, IDateFormControlOptions } from '@helix/platform/shared/components';\nimport { BaseFieldDefinitionService } from './base-field-definition.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DateOnlyFieldDefinitionService extends BaseFieldDefinitionService {\n  dataType = RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(options);\n\n    // Adding controls specific to date only field to Details section\n    inspectorConfig[1].controls.splice(1, 0, {\n      name: 'defaultValue',\n      component: DateFormControlComponent,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n      } as IDateFormControlOptions\n    });\n\n    return inspectorConfig;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IConfigFieldDefinitionModel } from '../config-designer.types';\nimport { BaseFieldDefinitionService } from './base-field-definition.service';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { RxNumberUtilsService } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class NumericFieldDefinitionService extends BaseFieldDefinitionService {\n  abstract readonly minValue: number;\n  abstract readonly maxValue: number;\n\n  constructor(injector: Injector, private rxNumberUtilsService: RxNumberUtilsService) {\n    super(injector);\n  }\n\n  validate(fieldModel: IConfigFieldDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel);\n\n    if (fieldModel.minValue && Number(fieldModel.minValue) < this.minValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n            ),\n            minValue: this.minValue\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.minValue && Number(fieldModel.minValue) > this.maxValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n            ),\n            maxValue: this.maxValue\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.maxValue && Number(fieldModel.maxValue) < this.minValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n            ),\n            minValue: this.minValue\n          }\n        ),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.maxValue && Number(fieldModel.maxValue) > this.maxValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n            ),\n            maxValue: this.maxValue\n          }\n        ),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.defaultValue && Number(fieldModel.defaultValue) < this.minValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n            minValue: this.minValue\n          }\n        ),\n        data: {\n          propertyName: 'defaultValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.defaultValue && Number(fieldModel.defaultValue) > this.maxValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n            maxValue: this.maxValue\n          }\n        ),\n        data: {\n          propertyName: 'defaultValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.defaultValue) &&\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.minValue) &&\n      Number(fieldModel.defaultValue) >= this.minValue &&\n      Number(fieldModel.defaultValue) < Number(fieldModel.minValue)\n    ) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n            minValue: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'defaultValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.defaultValue) &&\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxValue) &&\n      Number(fieldModel.defaultValue) <= this.maxValue &&\n      Number(fieldModel.defaultValue) > Number(fieldModel.maxValue)\n    ) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n            maxValue: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'defaultValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.minValue) &&\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxValue) &&\n      Number(fieldModel.minValue) > Number(fieldModel.maxValue)\n    ) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n            ),\n            maxValue: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { CounterFormControlComponent, ICounterFormControlOptions } from '@helix/platform/shared/components';\nimport { RX_NUMBER } from '@helix/platform/utils';\nimport { NumericFieldDefinitionService } from './numeric-field-definition.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DecimalFieldDefinitionService extends NumericFieldDefinitionService {\n  dataType = RX_RECORD_DEFINITION.dataTypes.decimal.resourceType;\n  minValue = RX_NUMBER.minDecimal;\n  maxValue = RX_NUMBER.maxDecimal;\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(options);\n\n    // Adding controls specific to decimal field to Details section\n    inspectorConfig[1].controls.splice(\n      1,\n      0,\n      {\n        name: 'minValue',\n        component: CounterFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n          ),\n          minValue: RX_NUMBER.minDecimal,\n          maxValue: RX_NUMBER.maxDecimal\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'maxValue',\n        component: CounterFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n          ),\n          minValue: RX_NUMBER.minDecimal,\n          maxValue: RX_NUMBER.maxDecimal\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'defaultValue',\n        component: CounterFormControlComponent,\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n          minValue: RX_NUMBER.minDecimal,\n          maxValue: RX_NUMBER.maxDecimal\n        } as ICounterFormControlOptions\n      }\n    );\n\n    return inspectorConfig;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { CounterFormControlComponent, ICounterFormControlOptions } from '@helix/platform/shared/components';\nimport { RX_NUMBER } from '@helix/platform/utils';\nimport { NumericFieldDefinitionService } from './numeric-field-definition.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IntegerFieldDefinitionService extends NumericFieldDefinitionService {\n  dataType = RX_RECORD_DEFINITION.dataTypes.integer.resourceType;\n  minValue = RX_NUMBER.minInteger;\n  maxValue = RX_NUMBER.maxInteger;\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(options);\n\n    // Adding controls specific to integer field to Details section\n    inspectorConfig[1].controls.splice(\n      1,\n      0,\n      {\n        name: 'minValue',\n        component: CounterFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n          ),\n          minValue: RX_NUMBER.minInteger,\n          maxValue: RX_NUMBER.maxInteger,\n          allowIntegerOnly: true\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'maxValue',\n        component: CounterFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n          ),\n          minValue: RX_NUMBER.minInteger,\n          maxValue: RX_NUMBER.maxInteger,\n          allowIntegerOnly: true\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'defaultValue',\n        component: CounterFormControlComponent,\n        options: {\n          allowIntegerOnly: true,\n          minValue: RX_NUMBER.minInteger,\n          maxValue: RX_NUMBER.maxInteger,\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n        } as ICounterFormControlOptions\n      }\n    );\n\n    return inspectorConfig;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { CounterFormControlComponent, ICounterFormControlOptions } from '@helix/platform/shared/components';\nimport { RX_CONFIG_DESIGNER } from '../config-designer.constant';\nimport { BaseFieldDefinitionService } from './base-field-definition.service';\nimport { IConfigFieldDefinitionModel } from '../config-designer.types';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { RX_NUMBER, RxNumberUtilsService } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SecureFieldDefinitionService extends BaseFieldDefinitionService {\n  dataType = RX_CONFIG_DESIGNER.dataTypes.secure.resourceType;\n\n  constructor(injector: Injector, private rxNumberUtilsService: RxNumberUtilsService) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(options);\n\n    // Removed 'Key field for repeated setting' control from Details section\n    inspectorConfig[1].controls.pop();\n\n    // Adding controls specific to secure field to Details section\n    inspectorConfig[1].controls.splice(\n      inspectorConfig[1].controls.length,\n      0,\n      {\n        name: 'minValue',\n        component: CounterFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.config-designer.config-properties.min-length.label'\n          ),\n          allowIntegerOnly: true,\n          minValue: 0,\n          maxValue: RX_NUMBER.maxInteger\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'maxValue',\n        component: CounterFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.config-designer.config-properties.max-length.label'\n          ),\n          allowIntegerOnly: true,\n          minValue: 0,\n          maxValue: RX_NUMBER.maxInteger\n        } as ICounterFormControlOptions\n      }\n    );\n\n    return inspectorConfig;\n  }\n\n  validate(fieldModel: IConfigFieldDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel);\n\n    if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.minValue) && Number(fieldModel.minValue) < 0) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.invalid-min-length-error.message'\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxValue) && Number(fieldModel.maxValue) < 0) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.invalid-max-length-error.message'\n        ),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.minValue && Number(fieldModel.minValue) > RX_NUMBER.maxInteger) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.min-length.label'\n            ),\n            maxValue: RX_NUMBER.maxInteger\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.maxValue && Number(fieldModel.maxValue) > RX_NUMBER.maxInteger) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.max-length.label'\n            ),\n            maxValue: RX_NUMBER.maxInteger\n          }\n        ),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.minValue) &&\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxValue) &&\n      Number(fieldModel.minValue) > Number(fieldModel.maxValue)\n    ) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.min-length.label'\n            ),\n            maxValue: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.max-length.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { ISelectionFieldOptionProperties, SelectionFieldOptionsComponent } from '@helix/platform/shared/components';\nimport { BaseFieldDefinitionService } from './base-field-definition.service';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { isEmpty } from 'lodash';\nimport { IConfigFieldDefinitionModel } from '../config-designer.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelectionFieldDefinitionService extends BaseFieldDefinitionService {\n  dataType = RX_RECORD_DEFINITION.dataTypes.selection.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(options);\n\n    inspectorConfig[1].controls.splice(1, 0, {\n      name: 'selectionFieldOptionProperties',\n      component: SelectionFieldOptionsComponent,\n      options: {\n        defaultValue: options.selectionFieldOptionProperties?.defaultValue,\n        optionNamesById: options.selectionFieldOptionProperties?.optionNamesById,\n        optionLabelsById: options.selectionFieldOptionProperties?.optionLabelsById\n      } as ISelectionFieldOptionProperties\n    });\n\n    return inspectorConfig;\n  }\n\n  validate(fieldModel: IConfigFieldDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel);\n\n    if (isEmpty(fieldModel.selectionFieldOptionProperties?.optionNamesById)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          { propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.options.label') }\n        ),\n        data: {\n          propertyName: 'selectionFieldOptionProperties',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { IConfigFieldDefinitionModel } from '../config-designer.types';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { RX_CONFIG_DESIGNER } from '../config-designer.constant';\nimport { AttachmentFieldDefinitionService } from './attachment-field-definition.service';\nimport { BooleanFieldDefinitionService } from './boolean-field-definition.service';\nimport { CharacterFieldDefinitionService } from './character-field-definition.service';\nimport { ColorFieldDefinitionService } from './color-field-definition.service';\nimport { DateOnlyFieldDefinitionService } from './date-only-field-definition.service';\nimport { DecimalFieldDefinitionService } from './decimal-field-definition.service';\nimport { IntegerFieldDefinitionService } from './integer-field-definition.service';\nimport { SecureFieldDefinitionService } from './secure-field-definition.service';\nimport { SelectionFieldDefinitionService } from './selection-field-definition.service';\nimport { IValidationIssue } from '@helix/platform/ui-kit';\nimport { BaseFieldDefinitionService } from './base-field-definition.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FieldDefinitionManagerService {\n  private fieldServices = new Map<string, BaseFieldDefinitionService>();\n\n  constructor(\n    attachmentFieldDefinitionService: AttachmentFieldDefinitionService,\n    booleanFieldDefinitionService: BooleanFieldDefinitionService,\n    characterFieldDefinitionService: CharacterFieldDefinitionService,\n    colorFieldDefinitionService: ColorFieldDefinitionService,\n    dateOnlyFieldDefinitionService: DateOnlyFieldDefinitionService,\n    decimalFieldDefinitionService: DecimalFieldDefinitionService,\n    integerFieldDefinitionService: IntegerFieldDefinitionService,\n    secureFieldDefinitionService: SecureFieldDefinitionService,\n    selectionFieldDefinitionService: SelectionFieldDefinitionService\n  ) {\n    this.fieldServices.set(RX_CONFIG_DESIGNER.dataTypes.attachment.resourceType, attachmentFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.boolean.resourceType, booleanFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.character.resourceType, characterFieldDefinitionService);\n    this.fieldServices.set(RX_CONFIG_DESIGNER.dataTypes.color.resourceType, colorFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType, dateOnlyFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.decimal.resourceType, decimalFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.integer.resourceType, integerFieldDefinitionService);\n    this.fieldServices.set(RX_CONFIG_DESIGNER.dataTypes.secure.resourceType, secureFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.selection.resourceType, selectionFieldDefinitionService);\n  }\n\n  getNewFieldDefinitionModel(\n    resourceType: string,\n    fieldProperties: Partial<IConfigFieldDefinitionModel>\n  ): IConfigFieldDefinitionModel {\n    return this.fieldServices.get(resourceType).getNewFieldDefinitionModel(fieldProperties);\n  }\n\n  getFieldInspectorConfig(resourceType: string, options: IFieldOptions): IFormBuilderConfig {\n    return this.fieldServices.get(resourceType).getFieldInspectorConfig(options);\n  }\n\n  validate(fieldModel: IConfigFieldDefinitionModel): IValidationIssue[] {\n    return this.fieldServices.get(fieldModel.dataType).validate(fieldModel);\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { IConfigDefinition } from '@helix/platform/config/api';\nimport { IInitConfigDesignerActionPayload } from './config-designer.types';\nimport { IConfigDefinitionModel, IConfigFieldDefinitionModel } from '../../config-designer.types';\n\nexport const init = createAction('[Config Designer] Init', props<{ payload: IInitConfigDesignerActionPayload }>());\n\nexport const loadParentComponents = createAction('[Config Designer] Load Parent Components');\n\nexport const loadParentComponentsSuccess = createAction(\n  '[Config Designer] Load Parent Components Success',\n  props<{ parentComponents: string[] }>()\n);\n\nexport const loadDefinition = createAction('[Config Designer] Load Definition');\n\nexport const loadDefinitionSuccess = createAction(\n  '[Config Designer] Load Definition Success',\n  props<{ definition: IConfigDefinition }>()\n);\n\nexport const initDefinitionModel = createAction(\n  '[Config Designer] Init Definition Model',\n  props<{ definitionModelFromDefinition: IConfigDefinitionModel }>()\n);\n\nexport const markDesignerPristine = createAction('[Config Designer] Mark Designer Pristine');\n\nexport const markDesignerDirty = createAction('[Config Designer] Mark Designer Dirty');\n\nexport const updateDefinitionModelFromDesigner = createAction(\n  '[Config Designer] Update Definition Model From Designer',\n  props<{ definitionModelFromDesigner: IConfigDefinitionModel }>()\n);\n\nexport const updateSelectedFieldModel = createAction(\n  '[Config Designer] Update Selected Field Model',\n  props<{ selectedFieldModel: IConfigFieldDefinitionModel }>()\n);\n\nexport const createNewFieldModel = createAction(\n  '[Config Designer] Create New Field Model',\n  props<{ resourceType: string; isLoginNameField: boolean }>()\n);\n\nexport const addFieldModel = createAction(\n  '[Config Designer] Add Field Model',\n  props<{ newFieldModel: IConfigFieldDefinitionModel }>()\n);\n\nexport const clearSelectedFieldGuid = createAction('[Config Designer] Clear Selected Field GUID');\n\nexport const setSelectedFieldGuid = createAction(\n  '[Config Designer] Set Selected Field GUID',\n  props<{ guid: string }>()\n);\n\nexport const deleteSelectedField = createAction('[Config Designer] Delete Selected Field');\n\nexport const deleteSelectedFieldSuccess = createAction('[Config Designer] Delete Selected Field Success');\n\nexport const toggleDesignMode = createAction('[Config Designer] Toggle Design Mode');\n\nexport const editFieldGroups = createAction('[Config Designer] Edit Field Groups');\n\nexport const setInspectorTabIndex = createAction(\n  '[Config Designer] Set Inspector Tab Index',\n  props<{ inspectorTabIndex: number }>()\n);\n\nexport const saveDefinition = createAction('[Config Designer] Save Definition');\n\nexport const updateDefinition = createAction(\n  '[Config Designer] Update Definition',\n  props<{ definition: IConfigDefinition }>()\n);\n\nexport const saveDefinitionSuccess = createAction(\n  '[Config Designer] Save Definition Success',\n  props<{ savedDefinitionName: string }>()\n);\n\nexport const saveDefinitionError = createAction('[Config Designer] Save Definition Error');\n\nexport const destroy = createAction('[Config Designer] Destroy');\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { IConfigDesignerModel, IConfigDesignerState } from './config-designer.types';\nimport { RX_CONFIG_DESIGNER } from '../../config-designer.constant';\n\nexport const configDesignerStateSelector = createFeatureSelector<IConfigDesignerState>(\n  RX_CONFIG_DESIGNER.featureSelector\n);\n\nexport const configDesignerModelSelector = createSelector(\n  configDesignerStateSelector,\n  (configDesignerState: IConfigDesignerState) => configDesignerState.model\n);\n\nexport const bundleIdSelector = createSelector(\n  configDesignerModelSelector,\n  (configDesignerModel: IConfigDesignerModel) => configDesignerModel.bundleId\n);\n\nexport const definitionNameSelector = createSelector(\n  configDesignerModelSelector,\n  (configDesignerModel: IConfigDesignerModel) => configDesignerModel.definitionName\n);\n\nexport const isDesignModeSelector = createSelector(\n  configDesignerModelSelector,\n  (configDesignerModel: IConfigDesignerModel) => configDesignerModel.isDesignMode\n);\n\nexport const inspectorTabIndexSelector = createSelector(\n  configDesignerModelSelector,\n  (configDesignerModel: IConfigDesignerModel) => configDesignerModel.inspectorTabIndex\n);\n\nexport const parentComponentsSelector = createSelector(\n  configDesignerModelSelector,\n  (configDesignerModel: IConfigDesignerModel) => configDesignerModel.parentComponents\n);\n\nexport const selectedFieldGuidSelector = createSelector(\n  configDesignerModelSelector,\n  (configDesignerModel: IConfigDesignerModel) => configDesignerModel.selectedFieldGuid\n);\n\nexport const definitionModelFromDefinitionSelector = createSelector(\n  configDesignerModelSelector,\n  (configDesignerModel: IConfigDesignerModel) => configDesignerModel.definitionModelFromDefinition\n);\n\nexport const definitionModelSelector = createSelector(\n  configDesignerModelSelector,\n  (configDesignerModel: IConfigDesignerModel) => configDesignerModel.definitionModel\n);\n\nexport const isDirtySelector = createSelector(\n  configDesignerModelSelector,\n  (configDesignerModel: IConfigDesignerModel) => configDesignerModel.isDirty\n);\n\nexport const savedDefinitionNameSelector = createSelector(\n  configDesignerModelSelector,\n  (configDesignerModel: IConfigDesignerModel) => configDesignerModel.savedDefinitionName\n);\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { AdaptDropdownDirective, AdaptIsPanelOpenedCurrentlyModel, AdaptSidebarComponent } from '@bmc-ux/adapt-angular';\nimport { ColumnConfig } from '@bmc-ux/adapt-table';\nimport { IConfigDefinition, IConfigFieldDefinitionGridRow, ImpactRowVisibility } from '@helix/platform/config/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport {\n  IBundleDescriptor,\n  IDesignerConfiguration,\n  IFormBuilderConfig,\n  IFormControlBuilderConfig,\n  IFormSectionBuilderConfig,\n  IPlainObject,\n  RX_PERMISSION,\n  RxDefinitionNameService,\n  RxGlobalCacheService\n} from '@helix/platform/shared/api';\nimport {\n  BooleanFormControlComponent,\n  ICheckboxFormControlOptions,\n  ILabelFormControlOptions,\n  IPermissionEditorComponentOptions,\n  ISelectFormControlOptions,\n  ISwitcherFormControlOptions,\n  ITextFormControlOptions,\n  LabelFormControlComponent,\n  RxPermissionEditorComponent,\n  SelectFormControlComponent,\n  SwitchFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport {\n  IBreadcrumbItem,\n  IValidationIssue,\n  IValidationIssueSection,\n  ValidationIssueType\n} from '@helix/platform/ui-kit';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { chain, filter, find, isEmpty, isNil, isNull, reverse, some, toUpper, trim, uniqBy } from 'lodash';\nimport { combineLatest, Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport { map, shareReplay, skip, startWith, switchMap, take, takeUntil, withLatestFrom } from 'rxjs/operators';\nimport { RX_CONFIG_DESIGNER } from '../config-designer.constant';\nimport { ConfigDesignerService } from '../config-designer.service';\nimport { IConfigDefinitionModel, IConfigFieldDataType, IConfigFieldDefinitionModel } from '../config-designer.types';\nimport { FieldDefinitionManagerService } from '../services/field-definition-manager.service';\nimport * as ConfigDesignerActions from './+state/config-designer.actions';\nimport {\n  bundleIdSelector,\n  definitionModelSelector,\n  inspectorTabIndexSelector,\n  isDesignModeSelector,\n  isDirtySelector,\n  parentComponentsSelector,\n  savedDefinitionNameSelector,\n  selectedFieldGuidSelector\n} from './+state/config-designer.selectors';\n\n@Component({\n  selector: 'rx-config-designer',\n  templateUrl: './config-designer.component.html',\n  styleUrls: ['./config-designer.component.scss']\n})\nexport class ConfigDesignerComponent implements OnInit, OnChanges {\n  @ViewChild(AdaptSidebarComponent, { static: false })\n  adaptSidebarComponent: AdaptSidebarComponent;\n\n  @ViewChild('createNewFieldDropdown', { static: false })\n  createNewFieldDropdown: AdaptDropdownDirective;\n\n  @Input()\n  configuration: IDesignerConfiguration;\n\n  @Output()\n  definitionSaved: EventEmitter<string> = new EventEmitter();\n\n  @Output()\n  definitionErrorLoading: EventEmitter<void> = new EventEmitter();\n\n  @Output()\n  closeDesigner: EventEmitter<void> = new EventEmitter<void>();\n\n  newTitle = `<${this.translateService.instant('com.bmc.arsys.rx.client.config-designer.new-configuration.title')}>`;\n\n  dataTypes: IConfigFieldDataType[] = [\n    {\n      displayName: this.translateService.instant(RX_CONFIG_DESIGNER.dataTypes.attachment.labelKey),\n      dataType: RX_CONFIG_DESIGNER.dataTypes.attachment.resourceType\n    },\n    {\n      displayName: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.boolean.labelKey),\n      dataType: RX_RECORD_DEFINITION.dataTypes.boolean.resourceType\n    },\n    {\n      displayName: this.translateService.instant(RX_CONFIG_DESIGNER.dataTypes.color.labelKey),\n      dataType: RX_CONFIG_DESIGNER.dataTypes.color.resourceType\n    },\n    {\n      displayName: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.character.labelKey),\n      dataType: RX_RECORD_DEFINITION.dataTypes.character.resourceType\n    },\n    {\n      displayName: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.dateOnly.labelKey),\n      dataType: RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType\n    },\n    {\n      displayName: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.integer.labelKey),\n      dataType: RX_RECORD_DEFINITION.dataTypes.integer.resourceType\n    },\n    {\n      displayName: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.selection.labelKey),\n      dataType: RX_RECORD_DEFINITION.dataTypes.selection.resourceType\n    },\n    {\n      displayName: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.decimal.labelKey),\n      dataType: RX_RECORD_DEFINITION.dataTypes.decimal.resourceType\n    },\n    {\n      displayName: this.translateService.instant(RX_CONFIG_DESIGNER.dataTypes.secure.labelKey),\n      dataType: RX_CONFIG_DESIGNER.dataTypes.secure.resourceType\n    }\n  ].sort((a, b) => a.displayName.localeCompare(b.displayName));\n\n  private trueLabel = this.translateService.instant('com.bmc.arsys.rx.client.common.true');\n  private falseLabel = this.translateService.instant('com.bmc.arsys.rx.client.common.false');\n  private yesLabel = this.translateService.instant('com.bmc.arsys.rx.client.common.yes.label');\n  private noLabel = this.translateService.instant('com.bmc.arsys.rx.client.common.no.label');\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  private isApplication$: Observable<boolean> = this.store$.select(bundleIdSelector).pipe(\n    switchMap((bundleId: string) => this.rxGlobalCacheService.getBundleDescriptor(bundleId)),\n    map((bundleDescriptor: IBundleDescriptor) => bundleDescriptor.isApplication)\n  );\n\n  private inspectorTabIndexSubject: Subject<number> = new Subject();\n  private inspectorTabIndex$ = this.store$.select(inspectorTabIndexSelector);\n  private selectedFieldGuid$ = this.store$.select(selectedFieldGuidSelector);\n  private parentComponents$: Observable<string[]> = this.store$.select(parentComponentsSelector);\n  private isDirty$: Observable<boolean> = this.store$.select(isDirtySelector);\n\n  private bundleFriendlyName$ = this.store$\n    .select(bundleIdSelector)\n    .pipe(switchMap((bundleId: string) => this.rxGlobalCacheService.getBundleFriendlyName(bundleId)));\n\n  private definitionModel$: Observable<IConfigDefinitionModel> = this.store$.select(definitionModelSelector);\n\n  private definitionDisplayName$: Observable<string> = this.definitionModel$.pipe(\n    map((definitionModel: IConfigDefinitionModel) => definitionModel.componentName),\n    startWith(null)\n  );\n\n  private validationIssues$: Observable<IValidationIssueSection[]> = this.definitionModel$.pipe(\n    map((definitionModel: IConfigDefinitionModel) => this.validate(definitionModel)),\n    shareReplay(1)\n  );\n\n  private hasValidationErrors$: Observable<boolean> = this.validationIssues$.pipe(\n    map((issueSections: IValidationIssueSection[]) =>\n      some(issueSections, {\n        issues: [{ type: ValidationIssueType.Error }]\n      })\n    )\n  );\n\n  private isSaveButtonDisabled$: Observable<boolean> = combineLatest([this.hasValidationErrors$, this.isDirty$]).pipe(\n    map(([hasValidationErrors, isDirty]) => hasValidationErrors || !isDirty),\n    startWith(true)\n  );\n\n  public definitionInspectorConfig$: Observable<IFormBuilderConfig> = combineLatest([\n    this.parentComponents$,\n    this.bundleFriendlyName$,\n    this.isApplication$,\n    this.definitionModel$\n  ]).pipe(\n    map(([parentComponents, bundleFriendlyName, isApplication, definitionModel]) =>\n      this.getDefinitionInspectorConfig(parentComponents, bundleFriendlyName, isApplication, definitionModel)\n    )\n  );\n\n  private inspectorFocusEditorSubject = new Subject<{ editorName: string; data: IPlainObject }>();\n  inspectorFocusEditor$ = this.inspectorFocusEditorSubject.asObservable();\n\n  private fieldGridRows$: Observable<IConfigFieldDefinitionGridRow[]> = this.definitionModel$.pipe(\n    map((model: IConfigDefinitionModel) =>\n      model.fields.map((field: IConfigFieldDefinitionModel) => ({\n        id: field.id,\n        guid: field.guid,\n        required: field.required ? this.yesLabel : this.noLabel,\n        defaultValue:\n          field.dataType === RX_RECORD_DEFINITION.dataTypes.boolean.resourceType\n            ? this.getBooleanDisplayValue(field.defaultValue as string)\n            : field.dataType === RX_CONFIG_DESIGNER.dataTypes.color.resourceType\n            ? toUpper(field.defaultValue as string)\n            : field.dataType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType\n            ? field.selectionFieldOptionProperties.optionNamesById?.[field.selectionFieldOptionProperties.defaultValue]\n            : field.defaultValue,\n        keySetting: field.keySetting ? this.yesLabel : this.noLabel,\n        dataType: this.getDataTypeName(field.dataType),\n        fieldGrouping: field.localeList[0]?.fieldGrouping\n      }))\n    )\n  );\n\n  private selectedFieldGridRows$: Observable<IConfigFieldDefinitionGridRow[]> = this.selectedFieldGuid$.pipe(\n    withLatestFrom(this.fieldGridRows$),\n    map(([guid, fieldGridRows]) => (guid ? [find(fieldGridRows, { guid })] : [])),\n    startWith([])\n  );\n\n  private selectedFieldModel$: Observable<IConfigFieldDefinitionModel> = combineLatest([\n    this.selectedFieldGuid$,\n    this.definitionModel$\n  ]).pipe(\n    map(([guid, definitionModel]: [string, IConfigDefinitionModel]) => find(definitionModel.fields, { guid })),\n    startWith(null),\n    shareReplay(1)\n  );\n\n  private selectedFieldInspectorConfig$: Observable<IFormBuilderConfig> = this.selectedFieldModel$.pipe(\n    map((fieldModel: IConfigFieldDefinitionModel) =>\n      fieldModel\n        ? this.fieldDefinitionManagerService.getFieldInspectorConfig(fieldModel.dataType, {\n            isNew: fieldModel.isNew,\n            selectionFieldOptionProperties: fieldModel.selectionFieldOptionProperties\n          })\n        : null\n    )\n  );\n\n  private breadcrumbItems$: Observable<IBreadcrumbItem[]> = combineLatest([\n    this.definitionDisplayName$,\n    this.selectedFieldModel$\n  ]).pipe(\n    map(([definitionDisplayName, selectedFieldModel]) =>\n      [\n        {\n          data: null,\n          label:\n            this.rxDefinitionNameService.getDisplayName(this.configuration.definitionName) ||\n            definitionDisplayName ||\n            this.newTitle\n        },\n        { data: null, label: selectedFieldModel?.id }\n      ].filter((item: IBreadcrumbItem) => item.label)\n    )\n  );\n\n  private definitionFromDefinitionModel$: Observable<IConfigDefinition> = this.definitionModel$.pipe(\n    map((definitionModel: IConfigDefinitionModel) =>\n      this.configDesignerService.getDefinitionFromDefinitionModel(definitionModel)\n    )\n  );\n\n  private isDesignMode$ = this.store$.select(isDesignModeSelector);\n\n  private definitionForJsonViewer$: Observable<IConfigDefinition> = this.isDesignMode$.pipe(\n    switchMap((isDesignMode: boolean) => (isDesignMode ? of(null) : this.definitionFromDefinitionModel$))\n  );\n\n  vm$ = combineLatest([\n    this.breadcrumbItems$,\n    this.bundleFriendlyName$,\n    this.definitionDisplayName$,\n    this.definitionForJsonViewer$,\n    this.definitionInspectorConfig$,\n    this.definitionModel$,\n    this.fieldGridRows$,\n    this.hasValidationErrors$,\n    this.isSaveButtonDisabled$,\n    this.selectedFieldGridRows$,\n    this.selectedFieldGuid$,\n    this.selectedFieldInspectorConfig$,\n    this.selectedFieldModel$,\n    this.validationIssues$\n  ]).pipe(\n    map(\n      ([\n        breadcrumbItems,\n        bundleFriendlyName,\n        definitionDisplayName,\n        definitionForJsonViewer,\n        definitionInspectorConfig,\n        definitionModel,\n        fieldGridRows,\n        hasValidationErrors,\n        isSaveButtonDisabled,\n        selectedFieldGridRows,\n        selectedFieldGuid,\n        selectedFieldInspectorConfig,\n        selectedFieldModel,\n        validationIssues\n      ]) => ({\n        breadcrumbItems,\n        bundleFriendlyName,\n        definitionDisplayName,\n        definitionForJsonViewer,\n        definitionInspectorConfig,\n        definitionModel,\n        fieldGridRows,\n        hasValidationErrors,\n        isSaveButtonDisabled,\n        selectedFieldGridRows,\n        selectedFieldGuid,\n        selectedFieldInspectorConfig,\n        selectedFieldModel,\n        validationIssues\n      })\n    )\n  );\n\n  columns: ColumnConfig[] = [\n    {\n      field: 'id',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label'),\n      filterable: false\n    },\n    {\n      field: 'dataType',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.common.data-type.label'),\n      filterable: false\n    },\n    {\n      field: 'required',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.config-designer.grid.column.required-field.title'),\n      filterable: false\n    },\n    {\n      field: 'defaultValue',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n      filterable: false\n    },\n    {\n      field: 'fieldGrouping',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.config-designer.grid.column.field-group.title'),\n      filterable: false\n    },\n    {\n      field: 'keySetting',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.config-designer.grid.column.key-field.title'),\n      filterable: false\n    }\n  ];\n\n  constructor(\n    private store$: Store<any>,\n    private configDesignerService: ConfigDesignerService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private translateService: TranslateService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private fieldDefinitionManagerService: FieldDefinitionManagerService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.configuration.currentValue) {\n      this.store$.dispatch(ConfigDesignerActions.init({ payload: this.configuration }));\n    }\n  }\n\n  ngOnInit(): void {\n    this.inspectorTabIndexSubject.pipe(skip(1), takeUntil(this.destroyed$)).subscribe((inspectorTabIndex: number) => {\n      this.store$.dispatch(ConfigDesignerActions.setInspectorTabIndex({ inspectorTabIndex }));\n    });\n\n    this.inspectorTabIndex$.pipe(skip(1), takeUntil(this.destroyed$)).subscribe((inspectorTabIndex: number) => {\n      if (!isNull(inspectorTabIndex)) {\n        this.adaptSidebarComponent.openPanel(inspectorTabIndex);\n      }\n    });\n\n    this.store$\n      .select(savedDefinitionNameSelector)\n      .pipe(skip(1), takeUntil(this.destroyed$))\n      .subscribe((savedDefinitionName: string) => {\n        this.definitionSaved.emit(savedDefinitionName);\n      });\n  }\n\n  onSelectionChange(selectedFieldModel: IConfigFieldDefinitionModel) {\n    this.store$.dispatch(ConfigDesignerActions.setSelectedFieldGuid({ guid: selectedFieldModel?.guid }));\n  }\n\n  canDeactivate(): boolean {\n    let canDeactivate = true;\n\n    this.isDirty$.pipe(take(1)).subscribe((isDirty) => {\n      canDeactivate = !isDirty;\n    });\n\n    return canDeactivate;\n  }\n\n  saveDefinition(): void {\n    this.store$.dispatch(ConfigDesignerActions.saveDefinition());\n  }\n\n  onCorrectIssue(validationIssue: IValidationIssue) {\n    if (validationIssue.data.noFieldAdded) {\n      this.createNewFieldDropdown.open();\n    }\n\n    if (validationIssue.data.guid) {\n      this.store$.dispatch(ConfigDesignerActions.setSelectedFieldGuid({ guid: validationIssue.data.guid }));\n    } else {\n      this.store$.dispatch(ConfigDesignerActions.setInspectorTabIndex({ inspectorTabIndex: 0 }));\n    }\n\n    if (validationIssue.data.editFieldGroups) {\n      this.store$.dispatch(ConfigDesignerActions.editFieldGroups());\n    }\n\n    setTimeout(\n      () =>\n        this.inspectorFocusEditorSubject.next({\n          editorName: validationIssue.data.propertyName,\n          data: validationIssue.data.data\n        }),\n      10\n    );\n  }\n\n  onDefinitionModelChange(newDefinitionModel: IConfigDefinitionModel): void {\n    this.store$.dispatch(\n      ConfigDesignerActions.updateDefinitionModelFromDesigner({\n        definitionModelFromDesigner: newDefinitionModel\n      })\n    );\n  }\n\n  onSelectedFieldModelChange(newSelectedFieldModel: IConfigFieldDefinitionModel): void {\n    this.store$.dispatch(ConfigDesignerActions.updateSelectedFieldModel({ selectedFieldModel: newSelectedFieldModel }));\n  }\n\n  validate(definitionModel: IConfigDefinitionModel): IValidationIssueSection[] {\n    const duplicateFieldErrorMsg = this.translateService.instant(\n      'com.bmc.arsys.rx.client.designer.validation.must-be-unique.message',\n      { propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label') }\n    );\n\n    const definitionValidationIssues: IValidationIssue[] = [];\n    const fieldValidationIssueSections: IValidationIssueSection[] = [];\n\n    chain(definitionModel.fields)\n      .clone()\n      .reverse()\n      .forEach((fieldModel: IConfigFieldDefinitionModel, index: number, fieldModels: IConfigFieldDefinitionModel[]) => {\n        let issues: IValidationIssue[] = [];\n\n        if (find(fieldModels, (model) => fieldModel.id === model.id, index + 1)) {\n          issues.push({\n            type: ValidationIssueType.Error,\n            description: duplicateFieldErrorMsg,\n            data: {\n              propertyName: 'id',\n              guid: fieldModel.guid\n            }\n          });\n        }\n\n        if (!fieldModel.localeList[0].fieldGrouping) {\n          issues.push({\n            type: ValidationIssueType.Error,\n            description: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.field-has-no-group.message'\n            ),\n            data: {\n              editFieldGroups: true,\n              guid: fieldModel.guid\n            }\n          });\n        }\n\n        issues = issues.concat(this.fieldDefinitionManagerService.validate(fieldModel));\n\n        if (issues.length) {\n          fieldValidationIssueSections.push({\n            title: fieldModel.id,\n            issues: issues\n          });\n        }\n      })\n      .value();\n\n    if (isEmpty(trim(definitionModel.componentName))) {\n      definitionValidationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.component-name.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'componentName'\n        }\n      });\n    }\n\n    if (isEmpty(trim(definitionModel.componentLabel))) {\n      definitionValidationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.component-label.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'componentLabel'\n        }\n      });\n    }\n\n    if (\n      isNil(definitionModel.parentComponentName) &&\n      (definitionModel.isSettingAccessibleInInnovationStudio || definitionModel.isSettingAccessibleInApplication) &&\n      !definitionModel.firstMenu\n    ) {\n      definitionValidationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.first-menu.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'firstMenu'\n        }\n      });\n    }\n\n    if (!definitionModel.fields.length) {\n      definitionValidationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.config-designer.setting-has-no-fields-error.message'\n        ),\n        data: { noFieldAdded: true }\n      });\n    }\n\n    if (definitionModel.impactRowVisibility === ImpactRowVisibility.User) {\n      const keySettingsCount = filter(definitionModel.fields, { keySetting: true }).length;\n\n      if (keySettingsCount > 1) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.config-designer.multiple-key-fields-not-allowed-error.message'\n          ),\n          data: {\n            propertyName: 'keySetting'\n          }\n        });\n      }\n    }\n\n    if (!isNil(definitionModel.parentComponentName)) {\n      const uniqFieldGroups = uniqBy(definitionModel.fields, 'localeList[0].fieldGrouping');\n\n      if (uniqFieldGroups.length > 1) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.config-designer.multiple-field-groups-not-allowed-error.message'\n          ),\n          data: {\n            propertyName: 'parentComponentName'\n          }\n        });\n      }\n    }\n\n    let issues: IValidationIssueSection[] = [];\n\n    if (definitionValidationIssues.length) {\n      issues.push({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.config-designer.title'),\n        issues: definitionValidationIssues\n      });\n    }\n\n    issues = issues.concat(reverse(fieldValidationIssueSections));\n\n    return issues;\n  }\n\n  addNewField(resourceType: string, isLoginNameField = false): void {\n    this.store$.dispatch(ConfigDesignerActions.createNewFieldModel({ resourceType: resourceType, isLoginNameField }));\n  }\n\n  editFieldGroups(): void {\n    this.store$.dispatch(ConfigDesignerActions.editFieldGroups());\n  }\n\n  private getDataTypeName(dataType: string): string {\n    return find(this.dataTypes, { dataType }).displayName;\n  }\n\n  onBreadcrumbSelected(): void {\n    this.store$.dispatch(ConfigDesignerActions.clearSelectedFieldGuid());\n  }\n\n  toggleDesignMode(): void {\n    this.store$.dispatch(ConfigDesignerActions.toggleDesignMode());\n  }\n\n  onSidebarToggle(event: AdaptIsPanelOpenedCurrentlyModel): void {\n    this.inspectorTabIndexSubject.next(event.id);\n  }\n\n  private getDefinitionInspectorConfig(\n    parentComponents: string[],\n    bundleFriendlyName: string,\n    isApplication: boolean,\n    definitionModel: IConfigDefinitionModel\n  ): IFormSectionBuilderConfig[] {\n    const configs: IFormSectionBuilderConfig[] = [];\n    const generalControls: IFormControlBuilderConfig[] = [];\n\n    generalControls.push({\n      name: 'componentName',\n      component: TextFormControlComponent,\n      isDisabled: Boolean(this.configuration.definitionName),\n      options: {\n        label: this.translateService.instant(\n          'com.bmc.arsys.rx.client.config-designer.config-properties.component-name.label'\n        ),\n        required: true\n      } as ITextFormControlOptions\n    });\n\n    if (isNil(definitionModel.parentComponentName)) {\n      generalControls.push({\n        name: '',\n        component: LabelFormControlComponent,\n        options: {\n          labelKey: 'com.bmc.arsys.rx.client.config-designer.config-properties.enable-access-from.label'\n        } as ILabelFormControlOptions\n      });\n\n      generalControls.push({\n        name: 'isSettingAccessibleInInnovationStudio',\n        component: BooleanFormControlComponent,\n        options: {\n          label: 'Innovation Studio',\n          shouldDisplayAsCheckbox: true\n        } as ICheckboxFormControlOptions\n      });\n\n      if (isApplication) {\n        generalControls.push({\n          name: 'isSettingAccessibleInApplication',\n          component: BooleanFormControlComponent,\n          options: {\n            label: bundleFriendlyName,\n            shouldDisplayAsCheckbox: true\n          } as ICheckboxFormControlOptions\n        });\n      }\n    }\n\n    generalControls.push({\n      name: 'componentLabel',\n      component: TextFormControlComponent,\n      options: {\n        label: this.translateService.instant(\n          'com.bmc.arsys.rx.client.config-designer.config-properties.component-label.label'\n        ),\n        required: true\n      } as ITextFormControlOptions\n    });\n\n    generalControls.push({\n      name: 'supportsMultiple',\n      component: SwitchFormControlComponent,\n      options: {\n        label: this.translateService.instant(\n          'com.bmc.arsys.rx.client.config-designer.config-properties.repeat-setting.label'\n        )\n      } as ISwitcherFormControlOptions\n    });\n\n    generalControls.push({\n      name: 'parentComponentName',\n      component: SelectFormControlComponent,\n      options: {\n        label: this.translateService.instant(\n          'com.bmc.arsys.rx.client.config-designer.config-properties.parent-setting.label'\n        ),\n        options: parentComponents\n          .filter((componentName: string) => componentName !== definitionModel.componentName)\n          .map((item: string) => ({ id: item, name: item })),\n        emptyOption: true\n      } as ISelectFormControlOptions\n    });\n\n    if (isNil(definitionModel.parentComponentName) && definitionModel.supportsMultiple) {\n      generalControls.push({\n        name: 'impactRowVisibility',\n        component: SelectFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.config-designer.config-properties.visibility.label'\n          ),\n          options: [\n            {\n              id: ImpactRowVisibility.None,\n              name: this.translateService.instant('com.bmc.arsys.rx.client.common.none.label')\n            },\n            {\n              id: ImpactRowVisibility.User,\n              name: this.translateService.instant(\n                'com.bmc.arsys.rx.client.config-designer.config-properties.visibility.options.user.label'\n              )\n            }\n          ],\n          beforeValueChange: (oldValue, newValue) => {\n            if (newValue === ImpactRowVisibility.User) {\n              const isLoginNameFieldExists = find(definitionModel.fields, {\n                id: 'LoginName',\n                dataType: RX_RECORD_DEFINITION.dataTypes.character.resourceType\n              });\n\n              if (!isLoginNameFieldExists) {\n                setTimeout(() => {\n                  this.addNewField(RX_RECORD_DEFINITION.dataTypes.character.resourceType, true);\n                });\n              }\n            }\n\n            return Promise.resolve(true);\n          }\n        } as ISelectFormControlOptions\n      });\n    }\n\n    if (definitionModel.impactRowVisibility !== ImpactRowVisibility.User) {\n      generalControls.push({\n        name: 'permissions',\n        component: RxPermissionEditorComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.config-designer.config-properties.permissions.label'\n          ),\n          type: 'config',\n          permissionScope: RX_PERMISSION.permissionScope.all\n        } as IPermissionEditorComponentOptions\n      });\n    }\n\n    configs.push({\n      label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n      controls: generalControls\n    });\n\n    if (\n      isNil(definitionModel.parentComponentName) &&\n      (definitionModel.isSettingAccessibleInApplication || definitionModel.isSettingAccessibleInInnovationStudio)\n    ) {\n      configs.push({\n        label: this.translateService.instant(\n          'com.bmc.arsys.rx.client.config-designer.config-properties.navigation-section.label'\n        ),\n        controls: [\n          {\n            name: 'firstMenu',\n            component: TextFormControlComponent,\n            options: {\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.config-designer.config-properties.first-menu.label'\n              ),\n              required: true\n            } as ITextFormControlOptions\n          },\n          {\n            name: 'secondMenu',\n            component: TextFormControlComponent,\n            options: {\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.config-designer.config-properties.second-menu.label'\n              )\n            } as ITextFormControlOptions\n          }\n        ]\n      });\n    }\n\n    return configs;\n  }\n\n  private getBooleanDisplayValue(defaultValue: string): string {\n    if (defaultValue === 'true') {\n      return this.trueLabel;\n    } else if (defaultValue === 'false') {\n      return this.falseLabel;\n    } else {\n      return null;\n    }\n  }\n\n  deleteSelectedField(): void {\n    this.store$.dispatch(ConfigDesignerActions.deleteSelectedField());\n  }\n\n  onFormInitialized() {\n    this.inspectorFocusEditorSubject.next({\n      editorName: 'componentName',\n      data: {}\n    });\n  }\n\n  private destroyConfigDesigner(): void {\n    this.store$.dispatch(ConfigDesignerActions.destroy());\n  }\n\n  ngOnDestroy(): void {\n    this.inspectorTabIndexSubject.complete();\n    this.inspectorFocusEditorSubject.complete();\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n    this.destroyConfigDesigner();\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <rx-designer-header\n    [bundleName]=\"vm.bundleFriendlyName\"\n    [isSaveButtonDisabled]=\"vm.isSaveButtonDisabled\"\n    (save)=\"saveDefinition()\"\n    (closeDesigner)=\"closeDesigner.emit()\"\n    [breadcrumbItems]=\"vm.breadcrumbItems\"\n    (breadcrumbSelected)=\"onBreadcrumbSelected()\"\n    (toggleDesignMode)=\"toggleDesignMode()\"\n    [isDesignMode]=\"!vm.definitionForJsonViewer\"\n  ></rx-designer-header>\n\n  <adapt-sidebar\n    [openedId]=\"0\"\n    [adjustMainContainerWidth]=\"true\"\n    position=\"right\"\n    class=\"h-100\"\n    [hidden]=\"vm.definitionForJsonViewer\"\n    (isPanelOpenedCurrently)=\"onSidebarToggle($event)\"\n  >\n    <adapt-sidebar-item\n      iconClass=\"d-icon-pencil\"\n      [headerTitle]=\"'com.bmc.arsys.rx.client.config-designer.config-properties.title.label' | translate\"\n      [tooltipText]=\"'com.bmc.arsys.rx.client.config-designer.config-properties.title.label' | translate\"\n    >\n      <rx-form-builder\n        [config]=\"vm.definitionInspectorConfig\"\n        [model]=\"vm.definitionModel\"\n        [focusEditor$]=\"inspectorFocusEditor$\"\n        (modelChange)=\"onDefinitionModelChange($event)\"\n        (formInitialized)=\"onFormInitialized()\"\n      ></rx-form-builder>\n    </adapt-sidebar-item>\n\n    <adapt-sidebar-item\n      iconClass=\"d-icon-gear\"\n      [headerTitle]=\"'com.bmc.arsys.rx.client.common.settings.label' | translate\"\n      [tooltipText]=\"'com.bmc.arsys.rx.client.common.settings.label' | translate\"\n    >\n      <rx-form-builder\n        [config]=\"vm.selectedFieldInspectorConfig\"\n        [model]=\"vm.selectedFieldModel\"\n        (modelChange)=\"onSelectedFieldModelChange($event)\"\n        [guid]=\"vm.selectedFieldGuid\"\n        [focusEditor$]=\"inspectorFocusEditor$\"\n      ></rx-form-builder>\n\n      <adapt-alert\n        [hidden]=\"vm.selectedFieldModel\"\n        class=\"p-3\"\n        [config]=\"{\n          content: 'com.bmc.arsys.rx.client.designer.validation.no-field-selected.message' | translate,\n          variant: 'info',\n          type: 'inline'\n        }\"\n      ></adapt-alert>\n    </adapt-sidebar-item>\n\n    <adapt-sidebar-item\n      [iconClass]=\"vm.hasValidationErrors ? 'd-icon-exclamation_triangle text-danger' : 'd-icon-exclamation_triangle'\"\n      headerTitle=\"{{ 'com.bmc.arsys.rx.client.designer.validation-issues.label' | translate }}\"\n      tooltipText=\"{{ 'com.bmc.arsys.rx.client.designer.validation-issues.label' | translate }}\"\n    >\n      <rx-validation-issues\n        (correctIssue)=\"onCorrectIssue($event)\"\n        [issueSections]=\"vm.validationIssues\"\n        [definitionTypeDisplayName]=\"'com.bmc.arsys.rx.client.config-definition.label' | translate\"\n      ></rx-validation-issues>\n    </adapt-sidebar-item>\n\n    <div class=\"main h-100 d-flex flex-column\">\n      <h1 class=\"mt-0\">\n        {{ (configuration.definitionName | rxDefinitionNamePipe) || vm.definitionDisplayName || newTitle }}\n      </h1>\n\n      <section class=\"h-100 d-flex flex-column\">\n        <div class=\"d-flex border border-bottom-0\">\n          <div class=\"dropdown\" adaptDropdown #createNewFieldDropdown>\n            <button\n              adapt-button\n              adaptDropdownToggle\n              type=\"button\"\n              btn-type=\"tertiary\"\n              class=\"d-icon-plus_circle\"\n              rx-id=\"new-field-button\"\n            >\n              {{ 'com.bmc.arsys.rx.client.designer.new-field.button.label' | translate }}\n            </button>\n\n            <div class=\"dropdown-menu\" adaptDropdownMenu>\n              <button *ngFor=\"let dataType of dataTypes\" class=\"dropdown-item\" (click)=\"addNewField(dataType.dataType)\">\n                {{ dataType.displayName }}\n              </button>\n            </div>\n          </div>\n\n          <button\n            adapt-button\n            type=\"button\"\n            btn-type=\"tertiary\"\n            class=\"d-icon-list_ordered\"\n            (click)=\"editFieldGroups()\"\n            rx-id=\"edit-field-groups-button\"\n            [disabled]=\"!vm.fieldGridRows.length\"\n          >\n            {{ 'com.bmc.arsys.rx.client.config-designer.edit-field-groups.label' | translate }}\n          </button>\n\n          <button\n            adapt-button\n            type=\"button\"\n            btn-type=\"tertiary\"\n            class=\"d-icon-trash\"\n            (click)=\"deleteSelectedField()\"\n            rx-id=\"delete-field-button\"\n            [disabled]=\"!vm.selectedFieldGridRows.length\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.delete.label' | translate }}\n          </button>\n        </div>\n\n        <adapt-table\n          [value]=\"vm.fieldGridRows\"\n          [selection]=\"vm.selectedFieldGridRows\"\n          [columns]=\"columns\"\n          [scrollable]=\"true\"\n          scrollHeight=\"flex\"\n          [sortable]=\"true\"\n          [resizableColumns]=\"false\"\n          [bordered]=\"true\"\n          [dataKey]=\"'guid'\"\n          [selectionMode]=\"'single'\"\n          (selectionChange)=\"onSelectionChange($event)\"\n        >\n        </adapt-table>\n      </section>\n    </div>\n  </adapt-sidebar>\n\n  <adapt-code-viewer\n    *ngIf=\"vm.definitionForJsonViewer\"\n    [code]=\"vm.definitionForJsonViewer | json\"\n    [lang]=\"'javascript'\"\n    [hasToolbar]=\"false\"\n    [theme]=\"'light'\"\n    class=\"full-size\"\n  ></adapt-code-viewer>\n</ng-container>\n","import { createReducer, on } from '@ngrx/store';\nimport { IConfigDesignerModel } from './config-designer.types';\nimport * as ConfigDesignerActions from './config-designer.actions';\nimport { IConfigDefinitionModel } from '../../config-designer.types';\nimport { ImpactRowVisibility } from '@helix/platform/config/api';\nimport { cloneDeep, findIndex, isNull, remove } from 'lodash';\n\nconst initialModel: IConfigDefinitionModel = {\n  componentLabel: null,\n  componentName: null,\n  externalLink: null,\n  firstMenu: null,\n  impactRowVisibility: ImpactRowVisibility.None,\n  isSettingAccessibleInApplication: false,\n  isSettingAccessibleInInnovationStudio: false,\n  parentComponentName: null,\n  permissions: [],\n  registeredModuleName: null,\n  secondMenu: null,\n  supportsMultiple: false,\n  viewComponent: false,\n  viewToOpen: null,\n  fields: []\n};\n\nexport const initialState: IConfigDesignerModel = {\n  bundleId: null,\n  definitionName: null,\n  isDesignMode: true,\n  inspectorTabIndex: 0,\n  selectedFieldGuid: null,\n  definitionModel: initialModel,\n  definitionModelFromDefinition: initialModel,\n  parentComponents: [],\n  isDirty: false,\n  savedDefinitionName: null\n};\n\nconst reducer = createReducer(\n  initialState,\n\n  on(ConfigDesignerActions.init, (state: IConfigDesignerModel, { payload }) => ({\n    ...initialState,\n    bundleId: payload.bundleId,\n    definitionName: payload.definitionName\n  })),\n\n  on(ConfigDesignerActions.initDefinitionModel, (state: IConfigDesignerModel, { definitionModelFromDefinition }) => ({\n    ...state,\n    definitionModelFromDefinition,\n    definitionModel: definitionModelFromDefinition\n  })),\n\n  on(ConfigDesignerActions.markDesignerPristine, (state: IConfigDesignerModel) => ({\n    ...state,\n    isDirty: false\n  })),\n\n  on(ConfigDesignerActions.markDesignerDirty, (state: IConfigDesignerModel) => ({\n    ...state,\n    isDirty: true\n  })),\n\n  on(ConfigDesignerActions.loadParentComponentsSuccess, (state: IConfigDesignerModel, { parentComponents }) => ({\n    ...state,\n    parentComponents\n  })),\n\n  on(ConfigDesignerActions.setInspectorTabIndex, (state: IConfigDesignerModel, { inspectorTabIndex }) => ({\n    ...state,\n    inspectorTabIndex\n  })),\n\n  on(ConfigDesignerActions.setSelectedFieldGuid, (state: IConfigDesignerModel, { guid }) => ({\n    ...state,\n    selectedFieldGuid: guid,\n    inspectorTabIndex: guid && !isNull(state.inspectorTabIndex) ? 1 : state.inspectorTabIndex\n  })),\n\n  on(ConfigDesignerActions.clearSelectedFieldGuid, (state: IConfigDesignerModel) => ({\n    ...state,\n    selectedFieldGuid: null,\n    inspectorTabIndex: !isNull(state.inspectorTabIndex) ? 0 : state.inspectorTabIndex\n  })),\n\n  on(ConfigDesignerActions.toggleDesignMode, (state: IConfigDesignerModel) => ({\n    ...state,\n    isDesignMode: !state.isDesignMode\n  })),\n\n  on(\n    ConfigDesignerActions.updateDefinitionModelFromDesigner,\n    (state: IConfigDesignerModel, { definitionModelFromDesigner }) => ({\n      ...state,\n      definitionModel: { ...state.definitionModel, ...definitionModelFromDesigner }\n    })\n  ),\n\n  on(ConfigDesignerActions.updateSelectedFieldModel, (state: IConfigDesignerModel, { selectedFieldModel }) => {\n    const definitionModel = cloneDeep(state.definitionModel);\n    const fieldIndex = findIndex(definitionModel.fields, { guid: state.selectedFieldGuid });\n\n    definitionModel.fields[fieldIndex] = selectedFieldModel;\n\n    return { ...state, definitionModel };\n  }),\n\n  on(ConfigDesignerActions.addFieldModel, (state: IConfigDesignerModel, { newFieldModel }) => {\n    const definitionModel = cloneDeep(state.definitionModel);\n\n    definitionModel.fields.push(newFieldModel);\n\n    return { ...state, definitionModel };\n  }),\n\n  on(ConfigDesignerActions.deleteSelectedFieldSuccess, (state: IConfigDesignerModel) => {\n    const definitionModel = cloneDeep(state.definitionModel);\n\n    remove(definitionModel.fields, { guid: state.selectedFieldGuid });\n\n    return { ...state, definitionModel };\n  }),\n\n  on(ConfigDesignerActions.saveDefinitionSuccess, (state: IConfigDesignerModel, { savedDefinitionName }) => ({\n    ...state,\n    savedDefinitionName\n  })),\n\n  on(ConfigDesignerActions.destroy, (state: IConfigDesignerModel) => ({\n    ...initialState\n  }))\n);\n\nexport function configDesignerModelReducer(state, action) {\n  return reducer(state, action);\n}\n","import { Injectable } from '@angular/core';\nimport { ComponentStore } from '@ngrx/component-store';\nimport { Observable } from 'rxjs';\nimport { chain, reject } from 'lodash';\nimport { RxListBuilderItem, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { IFieldGroupsEditorState, IFieldState } from './field-groups-editor.types';\n\n@Injectable()\nexport class FieldGroupsEditorStore extends ComponentStore<IFieldGroupsEditorState> {\n  readonly fields$: Observable<IFieldState[]> = this.select((state: IFieldGroupsEditorState) => state.fields);\n  readonly groups$: Observable<RxListBuilderItem[]> = this.select((state: IFieldGroupsEditorState) => state.groups);\n  readonly selectedGroupName$: Observable<string> = this.select((state) => state.selectedGroupName);\n\n  readonly availableFields$: Observable<RxSelectOption[]> = this.select(\n    this.fields$,\n    this.selectedGroupName$,\n    (fields, selectedGroupName) =>\n      fields\n        .filter((field: IFieldState) => field.groupName !== selectedGroupName)\n        .map((field: IFieldState, index) => ({\n          name: field.name,\n          id: index,\n          guid: field.guid,\n          checked: field.checked\n        }))\n  );\n\n  readonly checkedAvailableFields$ = this.select(this.availableFields$, (fields) =>\n    fields.filter((field: RxSelectOption) => field.checked)\n  );\n\n  readonly selectedFields$: Observable<RxListBuilderItem[]> = this.select(\n    this.fields$,\n    this.selectedGroupName$,\n    (fields, selectedGroupName) =>\n      chain(fields)\n        .filter((field: IFieldState) => field.groupName === selectedGroupName)\n        .sortBy('fieldOrder')\n        .map((field: IFieldState, index) => ({\n          name: field.name,\n          id: index,\n          guid: field.guid,\n          selected: field.checked\n        }))\n        .value()\n  );\n\n  readonly checkedSelectedFields$ = this.select(this.selectedFields$, (fields) =>\n    fields.filter((field: RxSelectOption) => field.selected)\n  );\n\n  readonly isDirty$: Observable<boolean> = this.select((state: IFieldGroupsEditorState) => state.isDirty);\n\n  readonly vm$ = this.select(\n    this.groups$,\n    this.fields$,\n    this.availableFields$,\n    this.checkedAvailableFields$,\n    this.selectedFields$,\n    this.checkedSelectedFields$,\n    this.isDirty$,\n    (groups, fields, availableFields, checkedAvailableFields, selectedFields, checkedSelectedFields, isDirty) => ({\n      groups,\n      fields,\n      availableFields,\n      checkedAvailableFields,\n      selectedFields,\n      checkedSelectedFields,\n      isDirty\n    })\n  );\n\n  readonly selectGroup = this.updater((state: IFieldGroupsEditorState, groupName: string) => {\n    const groups = state.groups.map((group) => ({\n      ...group,\n      selected: group.name === groupName\n    }));\n\n    return { ...state, groups, selectedGroupName: groupName };\n  });\n\n  readonly markDirty = this.updater((state: IFieldGroupsEditorState) => ({ ...state, isDirty: true }));\n\n  readonly checkField = this.updater((state: IFieldGroupsEditorState, guid: string) => ({\n    ...state,\n    fields: state.fields.map((field) => (field.guid === guid ? { ...field, checked: true } : field))\n  }));\n\n  readonly uncheckField = this.updater((state: IFieldGroupsEditorState, guid: string) => ({\n    ...state,\n    fields: state.fields.map((field) => (field.guid === guid ? { ...field, checked: false } : field))\n  }));\n\n  readonly sortSelectedFields = this.updater((state: IFieldGroupsEditorState, guids: string[]) => ({\n    ...state,\n    fields: state.fields.map((field) => {\n      const index = guids.indexOf(field.guid);\n\n      return index > -1 ? { ...field, fieldOrder: index } : field;\n    })\n  }));\n\n  readonly assignCheckedFields = this.updater((state: IFieldGroupsEditorState) => {\n    const selectedFields = state.fields.filter((field) => field.groupName === state.selectedGroupName);\n    let fieldOrder = selectedFields.length;\n\n    return {\n      ...state,\n      fields: state.fields.map((field) =>\n        field.checked\n          ? {\n              ...field,\n              checked: false,\n              groupName: state.selectedGroupName,\n              fieldOrder: fieldOrder++\n            }\n          : field\n      ),\n      isDirty: true\n    };\n  });\n\n  readonly unassignCheckedFields = this.updater((state: IFieldGroupsEditorState) => ({\n    ...state,\n    fields: state.fields.map((field) =>\n      field.checked ? { ...field, checked: false, fieldOrder: null, groupName: null } : field\n    ),\n    isDirty: true\n  }));\n\n  readonly removeField = this.updater((state: IFieldGroupsEditorState, guid: string) => ({\n    ...state,\n    fields: state.fields.map((field) =>\n      field.guid === guid ? { ...field, groupName: null, fieldOrder: null } : field\n    ),\n    isDirty: true\n  }));\n\n  readonly removeGroup = this.updater((state: IFieldGroupsEditorState, groupName: string) => ({\n    ...state,\n    fields: state.fields.map((field) =>\n      field.groupName === groupName ? { ...field, groupName: null, fieldOrder: null } : field\n    ),\n    groups: reject(state.groups, { name: groupName }),\n    isDirty: true\n  }));\n\n  readonly renameGroup = this.updater(\n    (state: IFieldGroupsEditorState, group: { oldName: string; newName: string }) => ({\n      ...state,\n      fields: state.fields.map((field) =>\n        field.groupName === group.oldName ? { ...field, groupName: group.newName } : field\n      ),\n      isDirty: true\n    })\n  );\n\n  constructor() {\n    super({ fields: [], isDirty: false, groups: [], selectedGroupName: null });\n  }\n}\n","import { Component, Injector, OnInit } from '@angular/core';\nimport {\n  ActiveModalRef,\n  DismissReasons,\n  ListBuilderTextsModel,\n  RxListBuilderItem,\n  RxSelectOption\n} from '@bmc-ux/adapt-angular';\nimport { RxNotificationService } from '@helix/platform/shared/api';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { TranslateService } from '@ngx-translate/core';\nimport { chain, some, trim } from 'lodash';\nimport { FieldGroupsEditorStore } from './field-groups-editor.store';\nimport { ReplaySubject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { IFieldState } from './field-groups-editor.types';\nimport { IConfigFieldDefinitionModel } from '../../config-designer.types';\n\n@Component({\n  selector: 'rx-field-groups-editor',\n  templateUrl: './field-groups-editor.component.html',\n  styleUrls: ['./field-groups-editor.component.scss'],\n  providers: [FieldGroupsEditorStore]\n})\nexport class FieldGroupsEditorComponent extends RxModalClass implements OnInit {\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  listBuilderTexts: ListBuilderTextsModel = {\n    searchPlaceholder: this.translateService.instant(\n      'com.bmc.arsys.rx.client.config-designer.field-groups-list.placeholder'\n    )\n  };\n\n  private duplicateGroupMsg = this.translateService.instant(\n    'com.bmc.arsys.rx.client.designer.validation.duplicate-value.message'\n  );\n\n  itemValidation = (itemName: string, items: RxListBuilderItem[], isEdit: boolean): string =>\n    some(items, (item: RxListBuilderItem) => trim(item.name) === trim(itemName)) ? this.duplicateGroupMsg : null;\n\n  readonly vm$ = this.fieldGroupsEditorStore.vm$;\n\n  constructor(\n    private readonly fieldGroupsEditorStore: FieldGroupsEditorStore,\n    private readonly translateService: TranslateService,\n    private readonly rxNotificationService: RxNotificationService,\n    private readonly activeModalRef: ActiveModalRef,\n    injector: Injector\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.fieldGroupsEditorStore.isDirty$.pipe(filter(Boolean), take(1)).subscribe(() => {\n      this.markAsDirty();\n    });\n\n    const fields: IFieldState[] = this.activeModalRef.getData().fields.map((field: IConfigFieldDefinitionModel) => ({\n      guid: field.guid,\n      name: field.id,\n      groupName: field.localeList[0].fieldGrouping,\n      fieldOrder: field.fieldOrder,\n      checked: false\n    }));\n\n    const groups: RxListBuilderItem[] = chain(fields)\n      .map((field, index) => ({ name: field.groupName, id: index, guid: field.guid }))\n      .filter((group) => !!group.name)\n      .uniqBy('name')\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .value();\n\n    this.fieldGroupsEditorStore.patchState({ fields, groups });\n  }\n\n  onGroupChange(groups: RxListBuilderItem[]): void {\n    this.fieldGroupsEditorStore.selectGroup(groups.find((field) => field.selected)?.name);\n  }\n\n  onGroupAdd(addedGroup: RxListBuilderItem, groups: RxListBuilderItem[]): void {\n    groups.forEach((group) => {\n      group.selected = group === addedGroup;\n    });\n  }\n\n  onGroupRemove(removedGroup: RxListBuilderItem): void {\n    this.fieldGroupsEditorStore.removeGroup(removedGroup.name);\n  }\n\n  onGroupRename([oldGroup, newGroup]: RxListBuilderItem[]): void {\n    this.fieldGroupsEditorStore.renameGroup({ oldName: oldGroup.name, newName: newGroup.name });\n  }\n\n  onAvailableFieldsChange(checkedFields: RxSelectOption[], availableFields: RxSelectOption[]): void {\n    availableFields.forEach((field: RxSelectOption) => {\n      if (some(checkedFields, { guid: field.guid })) {\n        this.fieldGroupsEditorStore.checkField(field.guid);\n      } else {\n        this.fieldGroupsEditorStore.uncheckField(field.guid);\n      }\n    });\n  }\n\n  onSelectedFieldsChange(fields): void {\n    fields.forEach((field) => {\n      if (field.selected) {\n        this.fieldGroupsEditorStore.checkField(field.guid);\n      } else {\n        this.fieldGroupsEditorStore.uncheckField(field.guid);\n      }\n    });\n\n    this.fieldGroupsEditorStore.sortSelectedFields(fields.map((field) => field.guid));\n  }\n\n  onDragEnd(): void {\n    this.fieldGroupsEditorStore.markDirty();\n  }\n\n  moveToSelected(): void {\n    this.fieldGroupsEditorStore.assignCheckedFields();\n  }\n\n  moveToAvailable(): void {\n    this.fieldGroupsEditorStore.unassignCheckedFields();\n  }\n\n  onFieldRemove(removedField): void {\n    this.fieldGroupsEditorStore.removeField(removedField.guid);\n  }\n\n  alphabeticSort(a: RxListBuilderItem, b: RxListBuilderItem): number {\n    return a.name.localeCompare(b.name);\n  }\n\n  optionFormatter(field: RxSelectOption): string {\n    return field.name;\n  }\n\n  saveFieldGroups(): void {\n    this.fieldGroupsEditorStore.fields$.pipe(take(1)).subscribe((fields) => {\n      this.activeModalRef.close({ fields });\n    });\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <div class=\"designer-modal-body modal-body d-flex mh-100 flex-column\">\n    <div class=\"d-flex h-100 flex-fill\">\n      <adapt-rx-list-builder\n        class=\"flex-grow-1 mr-3\"\n        [ngModel]=\"vm.groups\"\n        selectionMode=\"single\"\n        (listItemAdd)=\"onGroupAdd($event, vm.groups)\"\n        (listItemRemove)=\"onGroupRemove($event)\"\n        (listItemUpdate)=\"onGroupRename($event)\"\n        (ngModelChange)=\"onGroupChange($event)\"\n        [customSort]=\"alphabeticSort\"\n        [hideListAreaLabel]=\"true\"\n        [texts]=\"listBuilderTexts\"\n        [itemValidation]=\"itemValidation\"\n        label=\"{{ 'com.bmc.arsys.rx.client.config-designer.field-groups.label' | translate }}\"\n        rx-id=\"field-groups-list\"\n      ></adapt-rx-list-builder>\n\n      <adapt-rx-select\n        class=\"flex-grow-1 h-100 d-flex flex-column\"\n        popupMaxHeight=\"100%\"\n        [options]=\"vm.availableFields\"\n        [ngModel]=\"vm.checkedAvailableFields\"\n        [deselectAllButton]=\"true\"\n        [selectAllButton]=\"true\"\n        [enableFilter]=\"true\"\n        [inline]=\"true\"\n        label=\"{{ 'com.bmc.arsys.rx.client.config-designer.available-fields.label' | translate }}\"\n        [multiple]=\"true\"\n        [singleSelectStyle]=\"'marker'\"\n        [optionFormatter]=\"optionFormatter\"\n        (ngModelChange)=\"onAvailableFieldsChange($event, vm.availableFields)\"\n        rx-id=\"available-fields-list\"\n      ></adapt-rx-select>\n\n      <div class=\"mx-2 d-flex flex-column\">\n        <button\n          type=\"button\"\n          adapt-button\n          class=\"d-icon-right-angle_right mt-auto mb-2\"\n          btn-type=\"secondary\"\n          (click)=\"moveToSelected()\"\n          [disabled]=\"!vm.checkedAvailableFields.length\"\n          rx-id=\"move-to-selected-button\"\n        ></button>\n\n        <button\n          type=\"button\"\n          adapt-button\n          class=\"d-icon-right-angle_left mb-auto\"\n          btn-type=\"secondary\"\n          (click)=\"moveToAvailable()\"\n          [disabled]=\"!vm.checkedSelectedFields.length\"\n          rx-id=\"move-to-available-button\"\n        ></button>\n      </div>\n\n      <adapt-rx-list-builder\n        class=\"flex-grow-1\"\n        [ngModel]=\"vm.selectedFields\"\n        selectionMode=\"multiple\"\n        (listItemRemove)=\"onFieldRemove($event)\"\n        [hideSearchField]=\"true\"\n        [hideListAreaLabel]=\"true\"\n        [hideEdit]=\"true\"\n        (ngModelChange)=\"onSelectedFieldsChange($event)\"\n        (dragend)=\"onDragEnd()\"\n        label=\"{{ 'com.bmc.arsys.rx.client.config-designer.selected-fields.label' | translate }}\"\n        rx-id=\"selected-fields-list\"\n      ></adapt-rx-list-builder>\n    </div>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button\n      type=\"button\"\n      adapt-button\n      btn-type=\"primary\"\n      rx-id=\"save-field-groups-button\"\n      (click)=\"saveFieldGroups()\"\n      [disabled]=\"!vm.isDirty\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n\n    <button type=\"button\" adapt-button btn-type=\"secondary\" rx-id=\"cancel-button\" (click)=\"cancel()\">\n      {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n    </button>\n  </div>\n</ng-container>\n","import { Actions, createEffect, ofType } from '@ngrx/effects';\nimport * as ConfigDesignerActions from './config-designer.actions';\nimport { catchError, filter, map, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { ErrorHandler, Injectable } from '@angular/core';\nimport { IConfigDefinition, IConfigFieldDefinition, RxConfigDefinitionService } from '@helix/platform/config/api';\nimport { RxGuidService } from '@helix/platform/utils';\nimport { RX_CONFIG_DESIGNER } from '../../config-designer.constant';\nimport { FieldDefinitionManagerService } from '../../services/field-definition-manager.service';\nimport { Store } from '@ngrx/store';\nimport {\n  bundleIdSelector,\n  definitionModelFromDefinitionSelector,\n  definitionModelSelector,\n  definitionNameSelector\n} from './config-designer.selectors';\nimport { noop, some } from 'lodash';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  IBundleDescriptor,\n  RxDefinitionNameService,\n  RxGlobalCacheService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport { IConfigDefinitionModel, IConfigFieldDefinitionModel } from '../../config-designer.types';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { ConfigDesignerService } from '../../config-designer.service';\nimport { from, of } from 'rxjs';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { FieldGroupsEditorComponent } from '../field-groups-editor/field-groups-editor.component';\nimport { OpenViewActionModalSize } from '@helix/platform/view/api';\nimport { IFieldState } from '../field-groups-editor/field-groups-editor.types';\n\n@Injectable()\nexport class ConfigDesignerEffects {\n  constructor(\n    private store$: Store<any>,\n    private actions$: Actions,\n    private errorHandler: ErrorHandler,\n    private configDesignerService: ConfigDesignerService,\n    private rxModalService: RxModalService,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService,\n    private fieldDefinitionManagerService: FieldDefinitionManagerService,\n    private rxGuidService: RxGuidService,\n    private rxConfigDefinitionService: RxConfigDefinitionService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxDefinitionNameService: RxDefinitionNameService\n  ) {}\n\n  initConfigDesigner$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.init),\n      map((action) => ConfigDesignerActions.loadParentComponents())\n    )\n  );\n\n  loadParentComponents$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.loadParentComponents),\n      switchMap(() => this.rxConfigDefinitionService.getComponents()),\n      map((parentComponents: string[]) => ConfigDesignerActions.loadParentComponentsSuccess({ parentComponents }))\n    )\n  );\n\n  setParentComponents$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.loadParentComponentsSuccess),\n      map(() => ConfigDesignerActions.loadDefinition())\n    )\n  );\n\n  loadDefinition$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.loadDefinition),\n      withLatestFrom(this.store$.select(bundleIdSelector)),\n      switchMap(([_, bundleId]) => this.rxGlobalCacheService.getBundleDescriptor(bundleId)),\n      withLatestFrom(this.store$.select(definitionNameSelector)),\n      switchMap(([bundleDescriptor, definitionName]: [IBundleDescriptor, string]) =>\n        definitionName\n          ? this.rxConfigDefinitionService.get(this.rxDefinitionNameService.getDisplayName(definitionName))\n          : this.rxConfigDefinitionService.getNew(bundleDescriptor.isApplication)\n      ),\n      map((definition: IConfigDefinition) =>\n        ConfigDesignerActions.loadDefinitionSuccess({\n          definition\n        })\n      )\n    )\n  );\n\n  loadDefinitionSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.loadDefinitionSuccess),\n      map((action) => {\n        const definitionModelFromDefinition = {\n          externalLink: action.definition.externalLink,\n          impactRowVisibility: action.definition.impactRowVisibility,\n          parentComponentName: action.definition.parentComponentName,\n          registeredModuleName: action.definition.registeredModuleName,\n          supportsMultiple: action.definition.supportsMultiple,\n          viewComponent: action.definition.viewComponent,\n          viewToOpen: action.definition.viewToOpen,\n          componentName: action.definition.componentName,\n          permissions: action.definition.permissions,\n          componentLabel: action.definition.localeList[0].componentLabel,\n          firstMenu: action.definition.localeList[0].firstMenu,\n          secondMenu: action.definition.localeList[0].secondMenu,\n          isSettingAccessibleInInnovationStudio:\n            action.definition.showInLocation === RX_CONFIG_DESIGNER.settingAccessOptions.innovationStudio.value ||\n            action.definition.showInLocation === RX_CONFIG_DESIGNER.settingAccessOptions.both.value,\n          isSettingAccessibleInApplication:\n            action.definition.showInLocation === RX_CONFIG_DESIGNER.settingAccessOptions.application.value ||\n            action.definition.showInLocation === RX_CONFIG_DESIGNER.settingAccessOptions.both.value,\n          fields: action.definition.settingMetaData.map<IConfigFieldDefinitionModel>(\n            (field: IConfigFieldDefinition) => ({\n              dataType: field.dataType,\n              defaultValue: field.defaultValue ?? null,\n              fieldOrder: field.fieldOrder,\n              id: field.id,\n              keySetting: field.keySetting,\n              localeList: field.localeList,\n              guid: this.rxGuidService.generate(),\n              maxValue: field.maxValue ?? null,\n              minValue: field.minValue ?? null,\n              selectionFieldOptionProperties: {\n                defaultValue: field.defaultValue as number,\n                optionNamesById: field.optionNamesById,\n                optionLabelsById: field.optionLabelsById\n              },\n              required: field.required,\n              settingLabel: field.localeList[0].settingLabel,\n              isNew: false\n            })\n          )\n        };\n\n        return ConfigDesignerActions.initDefinitionModel({\n          definitionModelFromDefinition\n        });\n      })\n    )\n  );\n\n  markPristine$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        ConfigDesignerActions.initDefinitionModel,\n        ConfigDesignerActions.saveDefinition,\n        ConfigDesignerActions.saveDefinitionSuccess\n      ),\n      map(() => ConfigDesignerActions.markDesignerPristine())\n    )\n  );\n\n  clearSelectedField$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.initDefinitionModel, ConfigDesignerActions.deleteSelectedFieldSuccess),\n      map(() => ConfigDesignerActions.clearSelectedFieldGuid())\n    )\n  );\n\n  markDirty$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        ConfigDesignerActions.updateDefinitionModelFromDesigner,\n        ConfigDesignerActions.updateSelectedFieldModel,\n        ConfigDesignerActions.addFieldModel,\n        ConfigDesignerActions.deleteSelectedFieldSuccess,\n        ConfigDesignerActions.saveDefinitionError\n      ),\n      map(() => ConfigDesignerActions.markDesignerDirty())\n    )\n  );\n\n  createNewFieldModel$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.createNewFieldModel),\n      withLatestFrom(this.store$.select(definitionModelSelector)),\n      map(([action, definitionModel]) => {\n        let newFieldName;\n        let fieldNameSuffix = 0;\n\n        const defaultFieldName = this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.default-field-name.label'\n        );\n\n        do {\n          newFieldName = `${defaultFieldName} ${++fieldNameSuffix}`;\n        } while (some(definitionModel.fields, { id: newFieldName }));\n\n        const guid = this.rxGuidService.generate();\n\n        const newFieldModel = this.fieldDefinitionManagerService.getNewFieldDefinitionModel(action.resourceType, {\n          id: action.isLoginNameField ? 'LoginName' : newFieldName,\n          isNew: true,\n          guid,\n          keySetting: action.isLoginNameField,\n          settingLabel: action.isLoginNameField\n            ? this.translateService.instant('com.bmc.arsys.rx.client.config-designer.login-name-field.label')\n            : newFieldName,\n          minValue: null,\n          maxValue: null,\n          selectionFieldOptionProperties:\n            action.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType\n              ? { defaultValue: null, optionNamesById: null, optionLabelsById: null }\n              : null\n        });\n\n        return ConfigDesignerActions.addFieldModel({ newFieldModel });\n      })\n    )\n  );\n\n  addNewFieldModel$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.addFieldModel),\n      map((action) => ConfigDesignerActions.setSelectedFieldGuid({ guid: action.newFieldModel.guid }))\n    )\n  );\n\n  editFieldGroups$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.editFieldGroups),\n      withLatestFrom(this.store$.select(definitionModelSelector)),\n      switchMap(([_, definitionModel]) =>\n        from(\n          this.rxModalService\n            .openModal({\n              title: this.translateService.instant('com.bmc.arsys.rx.client.config-designer.edit-field-groups.label'),\n              content: FieldGroupsEditorComponent,\n              data: { fields: definitionModel.fields },\n              size: OpenViewActionModalSize.Large as any\n            })\n            .catch(noop)\n        )\n      ),\n      filter(Boolean),\n      withLatestFrom(this.store$.select(definitionModelSelector)),\n      map(([response, definitionModel]: [{ fields: IFieldState[] }, IConfigDefinitionModel]) => {\n        const fields = definitionModel.fields.map((field) => {\n          const updatedField = response.fields.find((item) => item.guid === field.guid);\n\n          return {\n            ...field,\n            fieldOrder: updatedField.fieldOrder,\n            localeList: [\n              {\n                ...field.localeList[0],\n                fieldGrouping: updatedField.groupName\n              }\n            ]\n          };\n        });\n\n        return ConfigDesignerActions.updateDefinitionModelFromDesigner({\n          definitionModelFromDesigner: { ...definitionModel, fields }\n        });\n      })\n    )\n  );\n\n  deleteSelectedField$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.deleteSelectedField),\n      switchMap(() =>\n        from(\n          this.rxModalService.confirm({\n            title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n            modalStyle: RX_MODAL.modalStyles.warning,\n            message: this.translateService.instant('com.bmc.arsys.rx.client.designer.delete-fields-warning.message')\n          })\n        )\n      ),\n      filter(Boolean),\n      map(() => ConfigDesignerActions.deleteSelectedFieldSuccess())\n    )\n  );\n\n  saveDefinition$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.saveDefinition),\n      withLatestFrom(\n        this.store$.select(definitionModelFromDefinitionSelector),\n        this.store$.select(definitionModelSelector),\n        this.store$.select(definitionNameSelector),\n        this.store$.select(bundleIdSelector)\n      ),\n      switchMap(([action, definitionModelFromDefinition, definitionModel, definitionName, bundleId]) => {\n        const definition = this.configDesignerService.getDefinitionFromDefinitionModel(definitionModel);\n\n        if (!definitionName) {\n          return this.rxConfigDefinitionService.create(definition).pipe(\n            map((response) =>\n              ConfigDesignerActions.saveDefinitionSuccess({\n                savedDefinitionName: `${bundleId}:${definitionModel.componentName}`\n              })\n            ),\n            catchError((error) => {\n              this.errorHandler.handleError(error);\n\n              return of(ConfigDesignerActions.saveDefinitionError());\n            })\n          );\n        } else if (\n          definitionModelFromDefinition.impactRowVisibility !== definitionModel.impactRowVisibility ||\n          definitionModelFromDefinition.parentComponentName !== definitionModel.parentComponentName ||\n          definitionModelFromDefinition.supportsMultiple !== definitionModel.supportsMultiple\n        ) {\n          return from(\n            this.rxModalService.confirm({\n              title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n              modalStyle: RX_MODAL.modalStyles.warning,\n              message: this.translateService.instant(\n                'com.bmc.arsys.rx.client.config-designer.setting-data-will-be-deleted-warning.message'\n              )\n            })\n          ).pipe(\n            filter(Boolean),\n            map(() => ConfigDesignerActions.updateDefinition({ definition }))\n          );\n        } else {\n          return [ConfigDesignerActions.updateDefinition({ definition })];\n        }\n      })\n    )\n  );\n\n  updateDefinition$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.updateDefinition),\n      switchMap((action) =>\n        this.rxConfigDefinitionService.update(action.definition.componentName, action.definition).pipe(\n          map((response) =>\n            ConfigDesignerActions.saveDefinitionSuccess({\n              savedDefinitionName: `${action.definition.componentName}`\n            })\n          ),\n          catchError((error) => {\n            this.errorHandler.handleError(error);\n\n            return of(ConfigDesignerActions.saveDefinitionError());\n          })\n        )\n      )\n    )\n  );\n\n  saveDefinitionSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.saveDefinitionSuccess),\n      withLatestFrom(this.store$.select(definitionNameSelector)),\n      tap(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.designer.definition-saved-successfully.message', {\n            definitionTypeDisplayName: this.translateService.instant('com.bmc.arsys.rx.client.config-definition.label')\n          })\n        );\n      }),\n      filter(([_, definitionName]) => !!definitionName),\n      map(() => ConfigDesignerActions.loadDefinition())\n    )\n  );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AdaptAccordionModule,\n  AdaptAlertModule,\n  AdaptBusyModule,\n  AdaptButtonModule,\n  AdaptCodeViewerModule,\n  AdaptDropdownModule,\n  AdaptRxCheckboxModule,\n  AdaptRxCounterModule,\n  AdaptRxLabelModule,\n  AdaptRxListBuilderModule,\n  AdaptRxRadiobuttonModule,\n  AdaptRxSelectModule,\n  AdaptRxTextfieldModule,\n  AdaptSidebarModule\n} from '@bmc-ux/adapt-angular';\nimport { AdaptTableModule } from '@bmc-ux/adapt-table';\nimport { RxRecordDefinitionResourceTypePipeModule } from '@helix/platform/record/api';\nimport { RxDefinitionModule } from '@helix/platform/shared/api';\nimport {\n  ExpressionFormControlModule,\n  FormControlsModule,\n  RxDefinitionPickerModule,\n  RxDesignerHeaderModule,\n  RxFormBuilderModule\n} from '@helix/platform/shared/components';\nimport {\n  RxBladeModule,\n  RxJsonViewerModule,\n  RxLineLoaderModule,\n  RxValidationIssuesModule\n} from '@helix/platform/ui-kit';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ConfigDesignerComponent } from './config-designer.component';\n\nimport { StoreModule } from '@ngrx/store';\nimport { configDesignerModelReducer } from './+state/config-designer-model.reducer';\nimport { RX_CONFIG_DESIGNER } from '../config-designer.constant';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ConfigDesignerEffects } from './+state/config-designer.effects';\nimport { FieldGroupsEditorComponent } from './field-groups-editor/field-groups-editor.component';\n\n@NgModule({\n  declarations: [ConfigDesignerComponent, FieldGroupsEditorComponent],\n  exports: [ConfigDesignerComponent],\n  imports: [\n    AdaptAccordionModule,\n    AdaptButtonModule,\n    AdaptDropdownModule,\n    AdaptRxTextfieldModule,\n    RecordGridModule,\n    CommonModule,\n    FormsModule,\n    FormControlsModule,\n    RxDesignerHeaderModule,\n    RxBladeModule,\n    RxValidationIssuesModule,\n    RxJsonViewerModule,\n    RxFormBuilderModule,\n    AdaptRxCheckboxModule,\n    AdaptRxLabelModule,\n    TranslateModule,\n    RecordGridModule,\n    RxRecordDefinitionResourceTypePipeModule,\n    AdaptAlertModule,\n    RxLineLoaderModule,\n    AdaptTableModule,\n    ReactiveFormsModule,\n    RxDefinitionPickerModule,\n    AdaptRxRadiobuttonModule,\n    AdaptRxSelectModule,\n    ExpressionFormControlModule,\n    AdaptBusyModule,\n    AdaptRxCounterModule,\n    AdaptCodeViewerModule,\n    AdaptSidebarModule,\n    RxDefinitionModule,\n    AdaptRxListBuilderModule,\n    StoreModule.forFeature(RX_CONFIG_DESIGNER.featureSelector, {\n      model: configDesignerModelReducer\n    }),\n    EffectsModule.forFeature([ConfigDesignerEffects])\n  ]\n})\nexport class ConfigDesignerModule {}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  IComponentCanDeactivate,\n  IDesignerConfiguration,\n  RX_APPLICATION,\n  RxBundleCacheService,\n  RxComponentCanDeactivateGuard,\n  RxDefinitionNameService,\n  RxPageTitleService\n} from '@helix/platform/shared/api';\nimport { RxUtilityModalsService } from '@helix/platform/ui-kit';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ConfigDesignerComponent } from '../config-designer/config-designer.component';\n\n@Component({\n  selector: 'rx-config-designer-page',\n  templateUrl: './config-designer-page.component.html'\n})\nexport class ConfigDesignerPageComponent implements OnInit, OnDestroy, IComponentCanDeactivate {\n  isInitialized = false;\n\n  private isNewConfig: boolean;\n  configuration: IDesignerConfiguration;\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  @ViewChild(ConfigDesignerComponent)\n  private configDesignerComponent: ConfigDesignerComponent;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxUtilityModalsService: RxUtilityModalsService,\n    private rxPageTitleService: RxPageTitleService,\n    private router: Router,\n    private translateService: TranslateService,\n    private rxComponentCanDeactivateGuard: RxComponentCanDeactivateGuard\n  ) {}\n\n  ngOnInit(): void {\n    this.rxComponentCanDeactivateGuard.setPageComponent(this);\n\n    this.activatedRoute.params.pipe(takeUntil(this.destroyed$)).subscribe(({ definitionName, bundleId }) => {\n      this.rxBundleCacheService.bundleId = bundleId || this.rxDefinitionNameService.getBundleId(definitionName);\n\n      this.isInitialized = true;\n      this.isNewConfig = !definitionName;\n\n      this.configuration = {\n        ...this.configuration,\n        definitionName: definitionName,\n        bundleId: this.rxBundleCacheService.bundleId\n      };\n\n      this.rxPageTitleService.set([\n        this.rxDefinitionNameService.getDisplayName(definitionName),\n        this.translateService.instant('com.bmc.arsys.rx.client.config-designer.title')\n      ]);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n    this.rxComponentCanDeactivateGuard.setPageComponent(null);\n  }\n\n  onDefinitionSaved(definitionName: string): void {\n    if (this.isNewConfig) {\n      this.router.navigate(['edit2', definitionName], { relativeTo: this.activatedRoute.parent });\n    }\n  }\n\n  onDefinitionErrorLoading(): void {\n    this.router.navigate(['new2', this.rxBundleCacheService.bundleId], { relativeTo: this.activatedRoute.parent });\n  }\n\n  onCloseDesigner(): void {\n    this.router.navigate([\n      RX_APPLICATION.innovationStudioBundleId,\n      this.rxBundleCacheService.bundleId,\n      'config-definitions'\n    ]);\n  }\n\n  canDeactivate(): boolean {\n    return this.configDesignerComponent?.canDeactivate() ?? true;\n  }\n\n  confirmDeactivation(): Promise<boolean> {\n    return this.rxUtilityModalsService.confirmUnsavedChanges();\n  }\n}\n","<rx-config-designer\n  *ngIf=\"isInitialized\"\n  [configuration]=\"configuration\"\n  (definitionSaved)=\"onDefinitionSaved($event)\"\n  (definitionErrorLoading)=\"onDefinitionErrorLoading()\"\n  (closeDesigner)=\"onCloseDesigner()\"\n></rx-config-designer>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ConfigDesignerModule } from '../config-designer/config-designer.module';\nimport { ConfigDesignerPageComponent } from './config-designer-page.component';\n\n@NgModule({\n  declarations: [ConfigDesignerPageComponent],\n  exports: [ConfigDesignerPageComponent],\n  imports: [CommonModule, ConfigDesignerModule]\n})\nexport class ConfigDesignerPageModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["ConfigDesignerActions.init","ConfigDesignerActions.setInspectorTabIndex","ConfigDesignerActions.setSelectedFieldGuid","ConfigDesignerActions.saveDefinition","ConfigDesignerActions.editFieldGroups","ConfigDesignerActions.updateDefinitionModelFromDesigner","ConfigDesignerActions.updateSelectedFieldModel","ConfigDesignerActions.createNewFieldModel","ConfigDesignerActions.clearSelectedFieldGuid","ConfigDesignerActions.toggleDesignMode","ConfigDesignerActions.deleteSelectedField","ConfigDesignerActions.destroy","ConfigDesignerActions.initDefinitionModel","ConfigDesignerActions.markDesignerPristine","ConfigDesignerActions.markDesignerDirty","ConfigDesignerActions.loadParentComponentsSuccess","ConfigDesignerActions.addFieldModel","ConfigDesignerActions.deleteSelectedFieldSuccess","ConfigDesignerActions.saveDefinitionSuccess","filter","ConfigDesignerActions.loadParentComponents","ConfigDesignerActions.loadDefinition","ConfigDesignerActions.loadDefinitionSuccess","ConfigDesignerActions.saveDefinitionError","ConfigDesignerActions.updateDefinition"],"mappings":"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"}