import { EventEmitter, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { AdaptRxControlLabelTooltip, RxSelectOption } from '@bmc-ux/adapt-angular';
import { IAssociationDefinition, ICardinality, RxAssociationCardinalityPipe } from '@helix/platform/association/api';
import { ICustomizationOptions, IDesignerConfiguration, IFormBuilderEvent, RxDefinitionNameService, RxGlobalCacheService, RxNotificationService, RxOverlayService } from '@helix/platform/shared/api';
import { IDefinitionPickerComponentOptions, IRevertCustomizationOptions } from '@helix/platform/shared/components';
import { IBreadcrumbItem, IValidationIssue, IValidationIssueSection } from '@helix/platform/ui-kit';
import { Store } from '@ngrx/store';
import { TranslateService } from '@ngx-translate/core';
import { Observable } from 'rxjs';
import { AssociationDesignerService } from '../association-designer.service';
import * as i0 from "@angular/core";
export declare class RxAssociationDesignerComponent implements OnInit, OnChanges, OnDestroy {
    private store$;
    private associationDesignerService;
    private rxGlobalCacheService;
    private rxAssociationCardinalityPipe;
    private rxDefinitionNameService;
    private translateService;
    private rxOverlayService;
    private rxNotificationService;
    private renderer;
    configuration: IDesignerConfiguration;
    definitionSaved: EventEmitter<string>;
    definitionErrorLoading: EventEmitter<void>;
    closeDesigner: EventEmitter<void>;
    private destroyed$;
    firstRecordDefinitionPickerOptions: IDefinitionPickerComponentOptions;
    secondRecordDefinitionPickerOptions: IDefinitionPickerComponentOptions;
    firstRecordDefinitionRoleTooltip: AdaptRxControlLabelTooltip;
    secondRecordDefinitionRoleTooltip: AdaptRxControlLabelTooltip;
    cascadeDeleteTooltip: AdaptRxControlLabelTooltip;
    cardinalities: ICardinality[];
    validDefinitionNameRegex: RegExp;
    associationForm: FormGroup;
    private isSavingInProgressSubject;
    private isDesignMode$;
    private isDirty$;
    private originalDefinition$;
    private bundleFriendlyName$;
    private definitionModelFromDefinition$;
    private definitionModel$;
    private isExistingDefinition$;
    private isCustomizationEnabled$;
    private scopeCustomizationControlOptions$;
    private revertCustomizationControlOptions$;
    private validationIssues$;
    private definitionFromDefinitionModel$;
    private definitionForJsonViewer$;
    private areNewDefinitionsAllowed$;
    private isReadOnly$;
    private hasValidationErrors$;
    private cascadeDeleteLabel$;
    private recordAssociationLabel$;
    private isModalityDisabled$;
    private isSaveButtonDisabled$;
    private breadcrumbItems$;
    private canCascadeDelete$;
    vm$: Observable<{
        breadcrumbItems: string | boolean | IAssociationDefinition | ICustomizationOptions | IRevertCustomizationOptions | IValidationIssueSection[] | IBreadcrumbItem[];
        bundleFriendlyName: string | boolean | IAssociationDefinition | ICustomizationOptions | IRevertCustomizationOptions | IValidationIssueSection[] | IBreadcrumbItem[];
        canCascadeDelete: string | boolean | IAssociationDefinition | ICustomizationOptions | IRevertCustomizationOptions | IValidationIssueSection[] | IBreadcrumbItem[];
        cascadeDeleteLabel: string | boolean | IAssociationDefinition | ICustomizationOptions | IRevertCustomizationOptions | IValidationIssueSection[] | IBreadcrumbItem[];
        hasValidationErrors: string | boolean | IAssociationDefinition | ICustomizationOptions | IRevertCustomizationOptions | IValidationIssueSection[] | IBreadcrumbItem[];
        isExistingDefinition: string | boolean | IAssociationDefinition | ICustomizationOptions | IRevertCustomizationOptions | IValidationIssueSection[] | IBreadcrumbItem[];
        isModalityDisabled: string | boolean | IAssociationDefinition | ICustomizationOptions | IRevertCustomizationOptions | IValidationIssueSection[] | IBreadcrumbItem[];
        isSaveButtonDisabled: string | boolean | IAssociationDefinition | ICustomizationOptions | IRevertCustomizationOptions | IValidationIssueSection[] | IBreadcrumbItem[];
        recordAssociationLabel: string | boolean | IAssociationDefinition | ICustomizationOptions | IRevertCustomizationOptions | IValidationIssueSection[] | IBreadcrumbItem[];
        revertCustomizationControlOptions: string | boolean | IAssociationDefinition | ICustomizationOptions | IRevertCustomizationOptions | IValidationIssueSection[] | IBreadcrumbItem[];
        scopeCustomizationControlOptions: string | boolean | IAssociationDefinition | ICustomizationOptions | IRevertCustomizationOptions | IValidationIssueSection[] | IBreadcrumbItem[];
        validationIssues: string | boolean | IAssociationDefinition | ICustomizationOptions | IRevertCustomizationOptions | IValidationIssueSection[] | IBreadcrumbItem[];
        definitionForJsonViewer: string | boolean | IAssociationDefinition | ICustomizationOptions | IRevertCustomizationOptions | IValidationIssueSection[] | IBreadcrumbItem[];
        isReadOnly: string | boolean | IAssociationDefinition | ICustomizationOptions | IRevertCustomizationOptions | IValidationIssueSection[] | IBreadcrumbItem[];
    }>;
    constructor(store$: Store<any>, associationDesignerService: AssociationDesignerService, rxGlobalCacheService: RxGlobalCacheService, rxAssociationCardinalityPipe: RxAssociationCardinalityPipe, rxDefinitionNameService: RxDefinitionNameService, translateService: TranslateService, rxOverlayService: RxOverlayService, rxNotificationService: RxNotificationService, renderer: Renderer2);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    canDeactivate(): boolean;
    toggleDesignMode(): void;
    onCorrectIssue(validationIssue: IValidationIssue): void;
    cardinalityOptionsFormatter: (option: RxSelectOption) => string;
    private validate;
    onRevertCustomization(event: IFormBuilderEvent): void;
    private getCardinalityByValue;
    saveDefinition(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RxAssociationDesignerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RxAssociationDesignerComponent, "rx-association-designer", never, { "configuration": "configuration"; }, { "definitionSaved": "definitionSaved"; "definitionErrorLoading": "definitionErrorLoading"; "closeDesigner": "closeDesigner"; }, never, never>;
}
