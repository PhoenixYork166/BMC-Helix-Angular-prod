import { Injector, OnInit } from '@angular/core';
import { AbstractControl, FormBuilder, FormGroup, ValidationErrors } from '@angular/forms';
import { Alert, DockedPanelContext, RxSelectOption, BusyConfig } from '@bmc-ux/adapt-angular';
import { RxRecordInstanceService } from '@helix/platform/record/api';
import { RxBundleCacheService, RxNotificationService } from '@helix/platform/shared/api';
import { IDefinitionPickerComponentOptions } from '@helix/platform/shared/components';
import { TranslateService } from '@ngx-translate/core';
import { RxModalClass } from '@helix/platform/ui-kit';
import { RxCognitiveSearchProjectDataPageService } from '../cognitive-search-project-data-page.service';
import { RxCognitiveSearchCollectionDataPageService } from '../cognitive-search-collection-data-page.service';
import { ICognitiveSearchData } from '../cognitive-search.interfaces';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class CognitiveSearchEditorAdminComponent extends RxModalClass implements OnInit {
    private formBuilder;
    private dockedPanelContext;
    private rxRecordInstanceService;
    private rxNotificationService;
    private rxBundleCacheService;
    private rxCognitiveSearchProjectDataPageService;
    private rxCognitiveSearchCollectionDataPageService;
    private translateService;
    protected injector: Injector;
    searchDatasetForm: FormGroup;
    isEditMode: boolean;
    statusAlert: Alert;
    failedReasonAlert: Alert;
    busyConfig: BusyConfig;
    projects$: Observable<ICognitiveSearchData[]>;
    collections$: Observable<ICognitiveSearchData[]>;
    externalDatasetSourceOptions: RxSelectOption[];
    options: IDefinitionPickerComponentOptions;
    searchLocaleOptions: string[];
    private datasetType;
    private recordInstance;
    private formatDataSource;
    constructor(formBuilder: FormBuilder, dockedPanelContext: DockedPanelContext, rxRecordInstanceService: RxRecordInstanceService, rxNotificationService: RxNotificationService, rxBundleCacheService: RxBundleCacheService, rxCognitiveSearchProjectDataPageService: RxCognitiveSearchProjectDataPageService, rxCognitiveSearchCollectionDataPageService: RxCognitiveSearchCollectionDataPageService, translateService: TranslateService, injector: Injector);
    ngOnInit(): void;
    isDirty(): boolean;
    isHelixPlatformDataset(): boolean;
    isExternalDataset(): boolean;
    private setFormControlValues;
    optionFormatter(option: RxSelectOption): string;
    thresholdRangeValidator(): (control: AbstractControl) => ValidationErrors | null;
    saveSearchDataset(): void;
    private successCallback;
    private prepareAssociatedRecordInstance;
    cancel(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<CognitiveSearchEditorAdminComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CognitiveSearchEditorAdminComponent, "rx-cognitive-search-editor", never, {}, {}, never, never>;
}
