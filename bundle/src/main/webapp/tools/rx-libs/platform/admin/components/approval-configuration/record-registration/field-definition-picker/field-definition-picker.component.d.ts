import { ElementRef, OnChanges, Renderer2, SimpleChanges } from '@angular/core';
import { FieldsTree, IFieldDefinitionPickerComponentOptions } from './field-definition-picker-component.types';
import { AdaptDropdownDirective } from '@bmc-ux/adapt-angular';
import { RxRecordDefinitionCacheService } from '@helix/platform/record/api';
import { ValueAccessor } from '@helix/platform/shared/components';
import { RxDefinitionNameService } from '@helix/platform/shared/api';
import { RxRecordGridUtilsService } from '@helix/platform/view/components';
import { TranslateService } from '@ngx-translate/core';
import { RxFieldDefinitionPickerService } from './field-definition-picker.service';
import { IValueWithLabel, RxObjectUtilsService, RxStringService } from '@helix/platform/utils';
import * as i0 from "@angular/core";
export declare class RxFieldDefinitionPickerComponent extends ValueAccessor<string> implements OnChanges {
    private rxDefinitionNameService;
    private rxRecordGridUtilsService;
    private rxRecordDefinitionCacheService;
    private translateService;
    private rxFieldDefinitionPickerService;
    private rxStringService;
    private rxObjectUtilsService;
    private renderer;
    options: IFieldDefinitionPickerComponentOptions;
    dropdownButton: ElementRef;
    dropdown: AdaptDropdownDirective;
    defaultText: any;
    dropdownWidth: number;
    filteredFieldsTree: FieldsTree;
    label: string;
    searchText: string;
    constructor(rxDefinitionNameService: RxDefinitionNameService, rxRecordGridUtilsService: RxRecordGridUtilsService, rxRecordDefinitionCacheService: RxRecordDefinitionCacheService, translateService: TranslateService, rxFieldDefinitionPickerService: RxFieldDefinitionPickerService, rxStringService: RxStringService, rxObjectUtilsService: RxObjectUtilsService, renderer: Renderer2);
    ngOnChanges(changes: SimpleChanges): void;
    setDropdownWidth(): void;
    selectField(fieldNode: IValueWithLabel): void;
    clearFieldDefinition(e: Event): void;
    reset(): void;
    private updateFieldLabel;
    private initializeAssociatedFieldLabel;
    filterFields(searchText: string): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RxFieldDefinitionPickerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RxFieldDefinitionPickerComponent, "rx-field-definition-picker", never, { "options": "options"; }, {}, never, never>;
}
