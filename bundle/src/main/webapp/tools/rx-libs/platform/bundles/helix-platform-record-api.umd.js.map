{"version":3,"file":"helix-platform-record-api.umd.js","sources":["../../../../libs/platform/record/api/custom-uploader.service.ts","../../../../libs/platform/record/api/record-definition.constant.ts","../../../../libs/platform/record/api/record-definition.types.ts","../../../../libs/platform/record/api/record-definition.service.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../libs/platform/record/api/record-definition-data-page.service.ts","../../../../libs/platform/record/api/record-definition-cache.service.ts","../../../../libs/platform/record/api/record-definition-inheritance-data-page.service.ts","../../../../libs/platform/record/api/record-instance-validation.class.ts","../../../../libs/platform/record/api/record-instance.class.ts","../../../../libs/platform/record/api/record-instance.constant.ts","../../../../libs/platform/record/api/record-instance-data-page.service.ts","../../../../libs/platform/record/api/record-instance-utils.service.ts","../../../../libs/platform/record/api/record-instance.service.ts","../../../../libs/platform/record/api/record-instance-update.service.ts","../../../../libs/platform/record/api/field-definition.service.ts","../../../../libs/platform/record/api/locale.service.ts","../../../../libs/platform/record/api/record-definition-resource-type.pipe.ts","../../../../libs/platform/record/api/record-definition-resource-type-pipe.module.ts","../../../../libs/platform/record/api/record-definition-field-option.pipe.ts","../../../../libs/platform/record/api/record-definition-field-option-pipe.module.ts","../../../../libs/platform/record/api/helix-platform-record-api.ts"],"sourcesContent":["import { RequestBody, SendFileUtils } from '@bmc-ux/adapt-angular';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\n// LMA:: This Service is necessary to override the default UploaderService from\n// the Adapt Uploader Component.\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploaderService implements SendFileUtils {\n  url: string;\n\n  deleteFile(file: any, url?: string): any {\n    return of(null);\n  }\n\n  responseCallback(response?: any): any {}\n\n  sendChunk(requestBody: RequestBody, uploadAsOneChunk?: boolean, url?: string): Observable<any> {\n    return undefined;\n  }\n\n  sendFile(file: any): Observable<any> {\n    return of(null);\n  }\n}\n","import { assign, map, range } from 'lodash';\n\nconst coreFieldIds = {\n  displayId: 1,\n  createdBy: 2,\n  createdDate: 3,\n  assignee: 4,\n  modifiedBy: 5,\n  modifiedDate: 6,\n  status: 7,\n  description: 8,\n  notifierListening: 16,\n  id: 379\n};\n\nconst specialFieldIds = {\n  dataProviderId: 380\n};\n\nconst resourceTypes = {\n  character: 'com.bmc.arsys.rx.standardlib.record.CharacterFieldDefinition',\n  localizedCharacter: 'com.bmc.arsys.rx.standardlib.record.LocalizedCharacterFieldDefinition',\n  dateTime: 'com.bmc.arsys.rx.standardlib.record.DateTimeFieldDefinition',\n  selection: 'com.bmc.arsys.rx.standardlib.record.SelectionFieldDefinition',\n  integer: 'com.bmc.arsys.rx.standardlib.record.IntegerFieldDefinition',\n  decimal: 'com.bmc.arsys.rx.standardlib.record.DecimalFieldDefinition',\n  real: 'com.bmc.arsys.rx.standardlib.record.RealFieldDefinition',\n  timeOnly: 'com.bmc.arsys.rx.standardlib.record.TimeOnlyFieldDefinition',\n  dateOnly: 'com.bmc.arsys.rx.standardlib.record.DateOnlyFieldDefinition',\n  attachment: 'com.bmc.arsys.rx.standardlib.record.AttachmentFieldDefinition',\n  boolean: 'com.bmc.arsys.rx.standardlib.record.BooleanFieldDefinition',\n  recordInstance: 'com.bmc.arsys.rx.services.process.domain.record.RecordInstanceFieldDefinition',\n  object: 'com.bmc.arsys.rx.services.process.domain.record.ObjectFieldDefinition',\n  recordInstanceProcessVariable: 'com.bmc.arsys.rx.services.record.domain.RecordInstance',\n  localizedFieldInstance: 'com.bmc.arsys.rx.services.record.domain.LocalizedFieldInstance',\n  list: 'com.bmc.arsys.rx.standardlib.record.ListFieldDefinition'\n};\n\nconst resourceTypesByFullName = Object.keys(resourceTypes).reduce((currentValue, resourceType) => {\n  currentValue[resourceTypes[resourceType]] = resourceType;\n\n  return currentValue;\n}, {} as { [resourceTypeFullName: string]: string });\n\nconst validBundleIdRegExpString =\n  '[a-zA-Z][a-zA-Z0-9_]*(\\\\.[a-zA-Z0-9_]+)*(\\\\.([a-zA-Z0-9_]+|[a-zA-Z0-9_][a-zA-Z0-9_-]*[a-zA-Z0-9_]))';\n\nconst validDefinitionNameRegExpString = `[\n  'A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A\n\n  'a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A\n\n  '\\xAA\\xBA\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E45\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10D0-\\u10FA\\u10FD-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u2135-\\u2138\\u2D30-\\u2D67\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA78F\\uA7F7\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9E0-\\uA9E4\\uA9E7-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB\\uAADC\\uAAE0-\\uAAEA\\uAAF2\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\n\n  0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19\n\n  \\x20\\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000\n\n  \\\\x2D\\u058A\\u05BE\\u1400\\u1806\\u2010-\\u2015\\u2E17\\u2E1A\\u2E3A\\u2E3B\\u2E40\\u301C\\u3030\\u30A0\\uFE31\\uFE32\\uFE58\\uFE63\\uFF0D\n\n  \\x5F\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF3F\n  ]*`;\n\nexport enum RecordFieldOption {\n  System = 'SYSTEM',\n  Required = 'REQUIRED',\n  Optional = 'OPTIONAL'\n}\n\nconst fieldOptions = {\n  system: RecordFieldOption.System,\n  required: RecordFieldOption.Required,\n  optional: RecordFieldOption.Optional\n};\n\nconst coreDisplayIdField = {\n  resourceType: resourceTypes.character,\n  name: 'Display ID',\n  description: null,\n  id: coreFieldIds.displayId,\n  fieldOption: RecordFieldOption.System,\n  maxLength: 15,\n  defaultValue: null,\n  anyUserAllowedToSubmit: false,\n  allowPermissionsOverlay: false,\n  allowOtherPropertiesOverlay: false\n};\n\nconst coreIdField = {\n  resourceType: resourceTypes.character,\n  name: 'ID',\n  description: null,\n  id: coreFieldIds.id,\n  fieldOption: RecordFieldOption.System,\n  maxLength: 128,\n  defaultValue: null,\n  anyUserAllowedToSubmit: true,\n  allowPermissionsOverlay: false,\n  allowOtherPropertiesOverlay: false\n};\n\nconst joinFieldMapping = 'com.bmc.arsys.rx.services.record.domain.JoinRecordDefinitionFieldMapping';\nconst externalFieldMapping = 'com.bmc.arsys.rx.services.record.domain.ExternalRecordDefinitionFieldMapping';\n\nconst sourceRecordTypes = {\n  primary: 'PRIMARY_RECORD_DEFINITION',\n  secondary: 'SECONDARY_RECORD_DEFINITION'\n};\n\nconst joinRecordDefinitionCoreFields = map([coreDisplayIdField, coreIdField], (coreField) =>\n  assign({}, coreField, {\n    maxLength: 255,\n    fieldMapping: {\n      resourceType: joinFieldMapping,\n      sourceFieldId: coreField.id,\n      source: sourceRecordTypes.primary\n    }\n  })\n);\n\nconst maxReservedFieldId = 536870912;\n\nexport const RX_RECORD_DEFINITION = {\n  coreFieldIds,\n  specialFieldIds,\n\n  alwaysRequiredNonSystemFieldIds: [coreFieldIds.createdBy, coreFieldIds.status, coreFieldIds.description],\n  AR_AUDIT_FIELD_IDS: range(450, 465),\n  AR_MAX_RESERVED_FIELD_ID: maxReservedFieldId,\n  AR_MIN_CUSTOM_FIELD_ID: maxReservedFieldId + 1,\n  AR_CORE_FIELD_IDS: range(1, 50).concat(range(71, 100)).concat([coreFieldIds.id, 399]),\n  keyFieldIds: [coreFieldIds.displayId, coreFieldIds.id],\n\n  coreFields: [\n    coreDisplayIdField,\n    {\n      resourceType: resourceTypes.character,\n      name: 'Created By',\n      description: null,\n      id: coreFieldIds.createdBy,\n      fieldOption: fieldOptions.required,\n      maxLength: 254,\n      defaultValue: '$USER$',\n      anyUserAllowedToSubmit: true,\n      allowPermissionsOverlay: false,\n      allowOtherPropertiesOverlay: false\n    },\n    {\n      resourceType: resourceTypes.dateTime,\n      name: 'Created Date',\n      description: null,\n      id: coreFieldIds.createdDate,\n      fieldOption: fieldOptions.system,\n      defaultValue: null,\n      anyUserAllowedToSubmit: false,\n      allowPermissionsOverlay: false,\n      allowOtherPropertiesOverlay: false\n    },\n    {\n      resourceType: resourceTypes.character,\n      name: 'Assignee',\n      description: null,\n      id: coreFieldIds.assignee,\n      fieldOption: fieldOptions.optional,\n      maxLength: 254,\n      defaultValue: null,\n      anyUserAllowedToSubmit: false,\n      allowPermissionsOverlay: false,\n      allowOtherPropertiesOverlay: false\n    },\n    {\n      resourceType: resourceTypes.character,\n      name: 'Modified By',\n      description: null,\n      id: coreFieldIds.modifiedBy,\n      fieldOption: fieldOptions.system,\n      maxLength: 254,\n      defaultValue: null,\n      anyUserAllowedToSubmit: false,\n      allowPermissionsOverlay: false,\n      allowOtherPropertiesOverlay: false\n    },\n    {\n      resourceType: resourceTypes.dateTime,\n      name: 'Modified Date',\n      description: null,\n      id: coreFieldIds.modifiedDate,\n      fieldOption: fieldOptions.system,\n      defaultValue: null,\n      anyUserAllowedToSubmit: false,\n      allowPermissionsOverlay: false,\n      allowOtherPropertiesOverlay: false\n    },\n    {\n      resourceType: resourceTypes.selection,\n      name: 'Status',\n      description: null,\n      id: coreFieldIds.status,\n      fieldOption: fieldOptions.required,\n      optionNamesById: {\n        0: 'New',\n        1: 'Assigned',\n        2: 'Fixed',\n        3: 'Rejected',\n        4: 'Closed'\n      },\n      displayType: null,\n      defaultValue: 0,\n      anyUserAllowedToSubmit: false,\n      allowPermissionsOverlay: false,\n      allowOtherPropertiesOverlay: false\n    },\n    {\n      resourceType: resourceTypes.character,\n      name: 'Description',\n      description: null,\n      id: coreFieldIds.description,\n      fieldOption: fieldOptions.required,\n      maxLength: 254,\n      defaultValue: null,\n      anyUserAllowedToSubmit: true,\n      allowPermissionsOverlay: false,\n      allowOtherPropertiesOverlay: false\n    },\n    {\n      resourceType: resourceTypes.selection,\n      name: 'Notifier Listening',\n      description: null,\n      id: coreFieldIds.notifierListening,\n      fieldOption: fieldOptions.system,\n      optionNamesById: {\n        0: 'Not Listening',\n        1: 'Listening'\n      },\n      displayType: null,\n      defaultValue: 0,\n      anyUserAllowedToSubmit: false,\n      allowPermissionsOverlay: false,\n      allowOtherPropertiesOverlay: false\n    },\n    coreIdField\n  ],\n\n  sortableCharacterFieldMaxLength: 4000,\n\n  fieldOptions,\n  resourceTypes,\n  resourceTypesByFullName,\n\n  dataTypes: {\n    character: {\n      displayName: 'Text',\n      labelKey: 'com.bmc.arsys.rx.client.common.data-types.character.label',\n      resourceType: resourceTypes.character,\n      shortName: 'Character'\n    },\n    localizedCharacter: {\n      displayName: 'Localized text',\n      labelKey: 'com.bmc.arsys.rx.client.common.data-types.localized-character.label',\n      resourceType: resourceTypes.localizedCharacter,\n      shortName: 'LocalizedCharacter'\n    },\n    integer: {\n      displayName: 'Integer',\n      labelKey: 'com.bmc.arsys.rx.client.common.data-types.integer.label',\n      resourceType: resourceTypes.integer,\n      shortName: 'Integer'\n    },\n    dateTime: {\n      displayName: 'Date/Time',\n      labelKey: 'com.bmc.arsys.rx.client.common.data-types.date-time.label',\n      resourceType: resourceTypes.dateTime,\n      shortName: 'DateTime'\n    },\n    selection: {\n      displayName: 'Selection',\n      labelKey: 'com.bmc.arsys.rx.client.common.data-types.selection.label',\n      resourceType: resourceTypes.selection,\n      shortName: 'Selection'\n    },\n    decimal: {\n      displayName: 'Decimal',\n      labelKey: 'com.bmc.arsys.rx.client.common.data-types.decimal.label',\n      resourceType: resourceTypes.decimal,\n      shortName: 'Decimal'\n    },\n    real: {\n      displayName: 'Floating',\n      labelKey: 'com.bmc.arsys.rx.client.common.data-types.real.label',\n      resourceType: resourceTypes.real,\n      shortName: 'Real'\n    },\n    timeOnly: {\n      displayName: 'Time',\n      labelKey: 'com.bmc.arsys.rx.client.common.data-types.time-only.label',\n      resourceType: resourceTypes.timeOnly,\n      shortName: 'TimeOnly'\n    },\n    dateOnly: {\n      displayName: 'Date',\n      labelKey: 'com.bmc.arsys.rx.client.common.data-types.date-only.label',\n      resourceType: resourceTypes.dateOnly,\n      shortName: 'DateOnly'\n    },\n    attachment: {\n      displayName: 'Attachment',\n      labelKey: 'com.bmc.arsys.rx.client.common.data-types.attachment.label',\n      resourceType: resourceTypes.attachment,\n      shortName: 'Attachment'\n    },\n    boolean: {\n      displayName: 'Boolean',\n      labelKey: 'com.bmc.arsys.rx.client.common.data-types.boolean.label',\n      resourceType: resourceTypes.boolean,\n      shortName: 'Boolean',\n      options: [\n        {\n          value: '',\n          content: ''\n        },\n        {\n          value: '1',\n          content: 'True'\n        },\n        {\n          value: '0',\n          content: 'False'\n        }\n      ]\n    },\n    recordInstance: {\n      displayName: 'Record',\n      resourceType: resourceTypes.recordInstance,\n      skipDefaultValue: true\n    },\n    object: {\n      displayName: 'Object',\n      resourceType: resourceTypes.object,\n      skipDefaultValue: true\n    }\n  },\n  recordDefinitionTypes: {\n    regular: {\n      recordDefinitionType: 'com.bmc.arsys.rx.services.record.domain.RegularRecordDefinition',\n      displayName: 'Regular'\n    },\n    join: {\n      recordDefinitionType: 'com.bmc.arsys.rx.services.record.domain.JoinRecordDefinition',\n      displayName: 'Join'\n    },\n    external: {\n      recordDefinitionType: 'com.bmc.arsys.rx.services.record.domain.ExternalRecordDefinition',\n      displayName: 'External'\n    }\n  },\n\n  externalRecordDefinitionDataSourceTypes: {\n    webApi: 'Web Api'\n  },\n\n  externalRecordDefinitionTypes: {\n    custom: 'Custom'\n  },\n\n  passwordFieldIds: range(50, 71).concat([102, 123, 143]),\n  arCoreFieldIds: range(1, 50).concat(range(71, 100)).concat([coreFieldIds.id, 399]),\n\n  recordInstanceAttachment: '/api/rx/application/record/attachment',\n\n  supportedSystemLocales: {\n    recordDefinitionName: 'Supported System Locales',\n    nameFieldId: 56100,\n    codeFieldId: 56101\n  },\n\n  fieldPermissionTypes: {\n    view: 'VIEW',\n    change: 'CHANGE'\n  },\n\n  groupIds: {\n    assigneeGroup: 7\n  },\n\n  securityLabelIds: {\n    assigneeGroup: 112\n  },\n\n  joinTypes: {\n    inner: {\n      value: 'INNER',\n      displayName: 'Inner join'\n    },\n    outer: {\n      value: 'OUTER',\n      displayName: 'Outer join'\n    }\n  },\n\n  joinRecordDefinitionCoreFieldIds: map(joinRecordDefinitionCoreFields, 'id'),\n  sourceRecordTypes,\n  joinRecordDefinitionCoreFields,\n  joinFieldMapping,\n  externalFieldMapping,\n  externalRecordDefinitionCoreFieldIds: [coreFieldIds.displayId, coreFieldIds.id],\n\n  validDefinitionNameRegExpString: validDefinitionNameRegExpString,\n\n  validDefinitionNameRegex: new RegExp('^' + validDefinitionNameRegExpString + '$'),\n\n  validFullDefinitionName: new RegExp('^' + validBundleIdRegExpString + '\\\\:' + validDefinitionNameRegExpString + '$')\n};\n","import { IFieldDefinition, IFieldDefinitionsById } from './field-definition.interfaces';\nimport { IRecordDefinitionPermission } from './record-definition-permission.interface';\nimport { IDefinition, IOverlayDescriptor } from '@helix/platform/shared/api';\n\ninterface IAssociatedField {\n  sourceFieldId: number;\n  fieldId: number;\n  fieldName: string;\n  sourceNode: string;\n  lastUpdateTime: string;\n  mappedFieldIds: number[];\n}\n\nexport interface IAssociatedAuditFieldsByAssociationName {\n  [associationName: string]: IAssociatedField[];\n}\n\nexport interface IAuditDescriptor {\n  auditRecordDefinitionName: string;\n  auditDataCriteria: string;\n  isEnabled: boolean;\n  associatedAuditFieldsByAssociationName: IAssociatedAuditFieldsByAssociationName;\n}\n\nexport enum ArchiveType {\n  CopyToArchiveAndDeleteFromSource = 'COPY_TO_ARCHIVE_AND_DELETE_FROM_SOURCE',\n  DeleteFromSource = 'DELETE_FROM_SOURCE',\n  None = 'NONE'\n}\n\nexport interface IArchiveDescriptor {\n  ageQualifierFieldId: number;\n  ageQualifierInDays: number;\n  archiveRecordDefinitionName: string;\n  description: string;\n  archiveType: ArchiveType;\n  includeAttachments: boolean;\n  archiveDataCriteria: string;\n  isEnabled: boolean;\n}\n\ninterface IRecordDefinitionOverlayDescriptor extends IOverlayDescriptor {\n  indexesOverlayType?: string;\n}\n\nexport enum AssociationSelectionType {\n  FollowParent = 'FOLLOW_PARENT',\n  Selected = 'SPECIFIC_ONLY',\n  AllEnforced = 'ALL_ENFORCED',\n  All = 'ALL'\n}\n\nexport interface IAssociationsToFollowForArchive {\n  selectionType: AssociationSelectionType;\n  specificAssociationNames: string[];\n}\n\nexport interface IIndexDefinition {\n  indexName: string;\n  unique: boolean;\n  indexFieldIds: number[];\n  ignoreBlankValues: boolean;\n}\n\nexport interface IRecordDefinition extends IDefinition {\n  allowFieldsOverlay?: boolean;\n  allowIndexesOverlay?: boolean;\n  allowNonAdminToDeleteRecordInstances?: boolean;\n  allowOtherPropertiesOverlay?: boolean;\n  allowPermissionsOverlay?: boolean;\n  auditDescriptor?: IAuditDescriptor;\n  archiveDescriptor?: IArchiveDescriptor;\n  associationsToFollowForArchive?: IAssociationsToFollowForArchive;\n  auditSourceRecordDefinitionName?: any;\n  enableCognitiveSearch?: boolean;\n  fieldDefinitions?: IFieldDefinition[];\n  fullPermissions?: IRecordDefinitionPermission[];\n  guid?: string;\n  displayFieldIdInAssociation?: string;\n  indexDefinitions?: IIndexDefinition[];\n  inheritanceDescriptor?: any;\n  isAbstract?: boolean;\n  isAuditRecordDefinition?: boolean;\n  isFinal?: boolean;\n  isSharedInstanceStorage?: boolean;\n  joinCriteria?: string;\n  joinType?: string;\n  localizableStringsByFieldId?: object;\n  overlayDescriptor?: IRecordDefinitionOverlayDescriptor;\n  permissions?: IRecordDefinitionPermission[];\n  primaryRecordDefinitionName?: string;\n  recordInstancePrefix?: string;\n  recordTypeName?: string;\n  resourceType?: string;\n  rowSecurityPropagations?: string[];\n  secondaryRecordDefinitionName?: string;\n  securityLabels?: ISecurityLabel[];\n  shouldExportData?: boolean;\n  upgradeVersion?: number;\n  weightedRelevancyFields?: any;\n  fieldDefinitionsById?: IFieldDefinitionsById;\n  type?: string;\n}\n\nexport interface ISecurityLabel {\n  id: number;\n  name: string;\n  parent?: string;\n  inherited?: boolean;\n  child?: any;\n  securityLabelMapping?: any;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  ICommand,\n  IHttpGetParams,\n  IHttpOptions,\n  RX_BUNDLE,\n  RxCommandFactoryService,\n  IPlainObject\n} from '@helix/platform/shared/api';\nimport { Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { RX_RECORD_DEFINITION } from './record-definition.constant';\nimport { ArchiveType, AssociationSelectionType, IIndexDefinition, IRecordDefinition } from './record-definition.types';\nimport { IFieldDefinition, IFieldDefinitionsById } from './field-definition.interfaces';\nimport { assign, cloneDeep, defaults, get, mapValues, reduce, size } from 'lodash';\nimport { IFieldDefinitionOption } from './field-definition-option.interface';\nimport { ISelectionFieldDefinition } from './selection-field-definition.interface';\nimport { RxGuidService } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRecordDefinitionService {\n  private renameCommand: ICommand = this.rxCommandFactoryService.forResourceType(\n    'com.bmc.arsys.rx.application.record.command.RenameRecordDefinitionCommand'\n  );\n\n  private revertCustomizationCommand: ICommand = this.rxCommandFactoryService.forResourceType(\n    'com.bmc.arsys.rx.application.record.command.RevertRecordDefinitionCommand'\n  );\n\n  constructor(\n    private httpClient: HttpClient,\n    private rxCommandFactoryService: RxCommandFactoryService,\n    private rxGuidService: RxGuidService\n  ) {}\n\n  get(\n    recordDefinitionName: string,\n    options: IHttpGetParams = {},\n    skipLocalization = false\n  ): Observable<IRecordDefinition> {\n    return this.httpClient.get<IRecordDefinition>(this.getUrl(recordDefinitionName), options).pipe(\n      tap((recordDefinition: IRecordDefinition) => {\n        if (!skipLocalization) {\n          this.applyLocalization(recordDefinition);\n        }\n      })\n    );\n  }\n\n  getNew(): Observable<IRecordDefinition> {\n    const definition: IRecordDefinition = {\n      name: '',\n      description: null,\n      resourceType: RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType,\n      fieldDefinitions: cloneDeep(RX_RECORD_DEFINITION.coreFields) as IFieldDefinition[],\n      allowPermissionsOverlay: false,\n      allowOtherPropertiesOverlay: false,\n      allowNonAdminToDeleteRecordInstances: false,\n      allowIndexesOverlay: false,\n      allowFieldsOverlay: false,\n      archiveDescriptor: {\n        ageQualifierFieldId: RX_RECORD_DEFINITION.coreFieldIds.modifiedDate,\n        ageQualifierInDays: 365,\n        archiveDataCriteria: null,\n        archiveRecordDefinitionName: null,\n        archiveType: ArchiveType.None,\n        description: null,\n        includeAttachments: false,\n        isEnabled: false\n      },\n      associationsToFollowForArchive: {\n        specificAssociationNames: [],\n        selectionType: AssociationSelectionType.AllEnforced\n      },\n      enableCognitiveSearch: false,\n      indexDefinitions: [],\n      scope: RX_BUNDLE.definitionScopeTypes.bundle\n    };\n\n    definition.fieldDefinitions.filter(this.isSelectionFieldDefinition).forEach((selectionFieldDefinition) => {\n      selectionFieldDefinition.optionLabelsById = mapValues(selectionFieldDefinition.optionNamesById, () =>\n        this.rxGuidService.generate()\n      );\n    });\n\n    return of(definition);\n  }\n\n  create(recordDefinition: IRecordDefinition): Observable<any> {\n    return this.httpClient.post(this.getUrl(), recordDefinition);\n  }\n\n  update(recordDefinition: IRecordDefinition, options?: IHttpOptions): Observable<any> {\n    return this.httpClient.put(this.getUrl(recordDefinition.name), recordDefinition, options);\n  }\n\n  delete(recordDefinitionName: string): Observable<any> {\n    return this.httpClient.delete(this.getUrl(recordDefinitionName));\n  }\n\n  rename(oldRecordDefinitionName: string, newRecordDefinitionName: string): Observable<any> {\n    return this.renameCommand.execute({\n      name: oldRecordDefinitionName,\n      newName: newRecordDefinitionName\n    });\n  }\n\n  revertCustomization(recordDefinitionName: string): Observable<any> {\n    return this.revertCustomizationCommand.execute({ recordDefinitionName });\n  }\n\n  private getUrl(recordDefinitionName?: string): string {\n    return recordDefinitionName\n      ? `/api/rx/application/record/recorddefinition/${encodeURIComponent(recordDefinitionName)}`\n      : '/api/rx/application/record/recorddefinition';\n  }\n\n  private setOptionsByIdProperty(fieldDefinition: IFieldDefinition): void {\n    fieldDefinition.optionsById = reduce(\n      fieldDefinition.optionNamesById,\n      (optionsById, optionName, optionId) => {\n        optionsById[optionId] = {\n          id: optionId,\n          label: optionName\n        };\n\n        return optionsById;\n      },\n      {} as { [id: string]: IFieldDefinitionOption }\n    );\n  }\n\n  buildFieldDefinitionsByIdMap(recordDefinition: IRecordDefinition): IFieldDefinitionsById {\n    return reduce(\n      recordDefinition.fieldDefinitions,\n      (fieldDefinitionsById, fieldDefinition) => {\n        this.addFieldDefinitionToMap(fieldDefinition, fieldDefinitionsById, fieldDefinition.id);\n\n        return fieldDefinitionsById;\n      },\n      {} as IFieldDefinitionsById\n    );\n  }\n\n  addFieldDefinitionToMap(\n    fieldDefinition: IFieldDefinition,\n    fieldDefinitionsById: IFieldDefinitionsById,\n    field: string | number\n  ): void {\n    if (fieldDefinition.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType) {\n      this.setOptionsByIdProperty(fieldDefinition);\n    }\n\n    fieldDefinitionsById[field] = fieldDefinition;\n  }\n\n  setFieldDefinitionsToOptional(recordDefinition: IRecordDefinition): IRecordDefinition {\n    recordDefinition.fieldDefinitions.forEach((fieldDefinition) => {\n      if (fieldDefinition.fieldOption === RX_RECORD_DEFINITION.fieldOptions.required) {\n        fieldDefinition.fieldOption = RX_RECORD_DEFINITION.fieldOptions.optional;\n      }\n    });\n\n    return recordDefinition;\n  }\n\n  private isSelectionFieldDefinition(fieldDefinition: IFieldDefinition): fieldDefinition is ISelectionFieldDefinition {\n    return fieldDefinition?.resourceType === RX_RECORD_DEFINITION.resourceTypes.selection;\n  }\n\n  applyLocalization(recordDefinition: IRecordDefinition): void {\n    recordDefinition.fieldDefinitions\n      .filter(this.isSelectionFieldDefinition)\n      .forEach((fieldDefinition: ISelectionFieldDefinition) => {\n        const localizableStringsForField = get(recordDefinition.localizableStringsByFieldId, fieldDefinition.id);\n\n        fieldDefinition.optionLabelsById = mapValues(\n          defaults(fieldDefinition.optionLabelsById, fieldDefinition.optionNamesById),\n          (stringGuid, optionId) =>\n            get(localizableStringsForField, stringGuid, fieldDefinition.optionNamesById[optionId])\n        );\n      });\n  }\n\n  isRegularRecord(recordDefinition: IRecordDefinition): boolean {\n    return recordDefinition.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType;\n  }\n\n  isExternalRecord(recordDefinition: IRecordDefinition): boolean {\n    return (\n      recordDefinition.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.external.recordDefinitionType &&\n      !this.isCustomRecord(recordDefinition)\n    );\n  }\n\n  isJoinRecord(recordDefinition: IRecordDefinition): boolean {\n    return recordDefinition.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.join.recordDefinitionType;\n  }\n\n  isCustomRecord(recordDefinition: IRecordDefinition): boolean {\n    return (\n      recordDefinition.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.external.recordDefinitionType &&\n      recordDefinition.type === RX_RECORD_DEFINITION.externalRecordDefinitionTypes.custom\n    );\n  }\n\n  isAutomaticIndex(index: IIndexDefinition): boolean {\n    return (\n      index.unique && size(index.indexFieldIds) === 1 && index.indexFieldIds[0] === RX_RECORD_DEFINITION.coreFieldIds.id\n    );\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\nimport { DataPage } from '@helix/platform/shared/api';\n\nconst recordDefinitionDataPageQuery = 'com.bmc.arsys.rx.application.record.datapage.RecordDefinitionDataPageQuery';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRecordDefinitionDataPageService extends DataPage {\n  constructor(private injector: Injector) {\n    super(injector, recordDefinitionDataPageQuery);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { forkJoin, Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { assign, castArray, fromPairs, isEmpty } from 'lodash';\n\nimport {\n  IAssociationDefinition,\n  IAssociationTree,\n  RxAssociationDefinitionDataPageService,\n  RxAssociationNodeTreeDataPageService\n} from '@helix/platform/association/api';\nimport { IHttpGetParams } from '@helix/platform/shared/api';\n\nimport { IRecordDefinition } from './record-definition.types';\nimport { RxRecordDefinitionService } from './record-definition.service';\n\nexport interface IRecordAssociationDefinitionData {\n  [associationDefinitionName: string]: Array<IAssociationDefinition>;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRecordDefinitionCacheService {\n  private consumers = new Set<Observable<any>>();\n  private recordDefinitions: Map<string, Observable<IRecordDefinition>> = new Map();\n  private recordAssociationDefinitions: Map<string, Observable<any>> = new Map();\n  private recordAssociationTrees: Map<string, Observable<IAssociationTree[]>> = new Map();\n\n  constructor(\n    private rxAssociationDefinitionDataPageService: RxAssociationDefinitionDataPageService,\n    private rxAssociationNodeTreeDataPageService: RxAssociationNodeTreeDataPageService,\n    private rxRecordDefinitionService: RxRecordDefinitionService\n  ) {}\n\n  getRecordAssociationDefinitions(\n    recordDefinitionNames: string[] | string\n  ): Observable<IRecordAssociationDefinitionData> {\n    recordDefinitionNames = castArray(recordDefinitionNames);\n\n    const requestedAssociationDefinitions = [];\n\n    recordDefinitionNames.forEach((recordDefinitionName) => {\n      if (!this.recordAssociationDefinitions.has(recordDefinitionName)) {\n        const recordAssociationDefinition$ = this.rxAssociationDefinitionDataPageService\n          .getRecordAssociationDefinitions(recordDefinitionName)\n          .pipe(\n            map((result) => fromPairs([[recordDefinitionName, result[0].data]])),\n            shareReplay(1)\n          );\n\n        this.recordAssociationDefinitions.set(recordDefinitionName, recordAssociationDefinition$);\n      }\n\n      requestedAssociationDefinitions.push(this.recordAssociationDefinitions.get(recordDefinitionName));\n    });\n\n    return forkJoin(requestedAssociationDefinitions).pipe(\n      map((recordAssociationDefinitionData: Array<IRecordAssociationDefinitionData>) => {\n        return assign({}, ...recordAssociationDefinitionData);\n      })\n    );\n  }\n\n  getRecordAssociationTree(recordDefinitionName: string): Observable<IAssociationTree[]> {\n    if (!this.recordAssociationTrees.has(recordDefinitionName)) {\n      this.recordAssociationTrees.set(\n        recordDefinitionName,\n        this.rxAssociationNodeTreeDataPageService\n          .get({\n            params: {\n              startIndex: 0,\n              pageSize: -1,\n              depth: 2,\n              recorddefinition: recordDefinitionName\n            }\n          })\n          .pipe(\n            map((dataPage) => dataPage.data as IAssociationTree[]),\n            shareReplay(1)\n          )\n      );\n    }\n\n    return this.recordAssociationTrees.get(recordDefinitionName);\n  }\n\n  getRecordAssociationTrees(recordDefinitionNames: string[]): Observable<IAssociationTree[][]> {\n    return forkJoin(\n      recordDefinitionNames.map((recordDefinitionName) => this.getRecordAssociationTree(recordDefinitionName))\n    );\n  }\n\n  getRecordDefinition(recordDefinitionName: string, options?: IHttpGetParams): Observable<IRecordDefinition> {\n    if (!this.recordDefinitions.has(recordDefinitionName)) {\n      const recordDefinition$ = this.rxRecordDefinitionService.get(recordDefinitionName, options).pipe(shareReplay(1));\n\n      this.recordDefinitions.set(recordDefinitionName, recordDefinition$);\n    }\n\n    return this.recordDefinitions.get(recordDefinitionName);\n  }\n\n  getRecordDefinitions(recordDefinitionNames: string[], options?: IHttpGetParams): Observable<IRecordDefinition[]> {\n    return forkJoin(\n      recordDefinitionNames.map((recordDefinitionName) => this.getRecordDefinition(recordDefinitionName, options))\n    );\n  }\n\n  registerConsumer(consumerDestroy$: Observable<any>): void {\n    this.consumers.add(consumerDestroy$);\n\n    consumerDestroy$.subscribe(() => {\n      this.consumers.delete(consumerDestroy$);\n\n      if (isEmpty(this.consumers)) {\n        this.clearCache();\n      }\n    });\n  }\n\n  private clearCache(): void {\n    this.recordDefinitions.clear();\n    this.recordAssociationDefinitions.clear();\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { DataPage } from '@helix/platform/shared/api';\n\nconst recordDefinitionDataPageQuery =\n  'com.bmc.arsys.rx.application.record.datapage.RecordDefinitionInheritanceDataPageQuery';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRecordDefinitionInheritanceDataPageService extends DataPage {\n  constructor(private injector: Injector) {\n    super(injector, recordDefinitionDataPageQuery);\n  }\n}\n","import { RX_RECORD_DEFINITION } from './record-definition.constant';\nimport { IRecordDefinition } from './record-definition.types';\nimport {\n  FieldInstanceValidator,\n  IRecordInstance,\n  IRxFieldValidationResult,\n  IRxValidationResult\n} from './record-instance.types';\nimport { IFieldDefinition } from './field-definition.interfaces';\nimport { IFieldInstance } from './field-instance.interface';\nimport { isEmpty, isFinite, isNil, isString, isNaN } from 'lodash';\nimport BigNumber from 'bignumber.js';\n\ntype NumericOrString = number | BigNumber | string;\n\nexport class RecordInstanceValidation {\n  fieldValidatorsByType = {\n    'com.bmc.arsys.rx.standardlib.record.CharacterFieldDefinition': null,\n    'com.bmc.arsys.rx.standardlib.record.IntegerFieldDefinition': [\n      this.minValidator,\n      this.maxValidator,\n      this.isNaNValidator\n    ],\n    'com.bmc.arsys.rx.standardlib.record.DateTimeFieldDefinition': null,\n    'com.bmc.arsys.rx.standardlib.record.SelectionFieldDefinition': null,\n    'com.bmc.arsys.rx.standardlib.record.DecimalFieldDefinition': [\n      this.minValidator,\n      this.maxValidator,\n      this.isNaNValidator\n    ],\n    'com.bmc.arsys.rx.standardlib.record.RealFieldDefinition': [\n      this.minValidator,\n      this.maxValidator,\n      this.isNaNValidator\n    ],\n    'com.bmc.arsys.rx.standardlib.record.TimeOnlyFieldDefinition': null,\n    'com.bmc.arsys.rx.standardlib.record.DateOnlyFieldDefinition': null\n  };\n\n  private fieldDefinitions: IFieldDefinition[];\n  private fieldInstances: { [fieldId: number]: IFieldInstance };\n\n  validate(recordInstance: IRecordInstance, recordDefinition: IRecordDefinition): IRxValidationResult {\n    this.fieldDefinitions = recordDefinition.fieldDefinitions;\n    this.fieldInstances = recordInstance.fieldInstances;\n\n    const errors = Object.keys(this.fieldInstances).reduce((result, fieldId) => {\n      const fieldErrors = this.validateFieldInstance(this.fieldInstances[fieldId], this.fieldInstances[fieldId].value);\n\n      if (fieldErrors) {\n        result[fieldId] = fieldErrors;\n      }\n\n      return result;\n    }, {});\n\n    return isEmpty(errors) ? null : errors;\n  }\n\n  validateSingleField(fieldId: number, value: any): IRxFieldValidationResult {\n    return this.validateFieldInstance(this.fieldInstances[fieldId], value);\n  }\n\n  private validateFieldInstance(fieldInstance: IFieldInstance, value: any): IRxFieldValidationResult {\n    let errors = {};\n\n    if (fieldInstance) {\n      const fieldValidators = this.getValidatorsForFieldInstance(fieldInstance);\n      const fieldDefinition = this.getFieldDefinition(fieldInstance.id);\n\n      errors = fieldValidators.reduce((result, validator) => {\n        const validatorResponse = validator.call(this, value, fieldDefinition);\n\n        if (validatorResponse) {\n          result = { ...result, ...validatorResponse };\n        }\n\n        return result;\n      }, {});\n    }\n\n    return errors;\n  }\n\n  private getValidatorsForFieldInstance(fieldInstance: IFieldInstance): FieldInstanceValidator[] {\n    const validators = [];\n\n    if (fieldInstance) {\n      const fieldDefinition = this.getFieldDefinition(fieldInstance.id);\n      const fieldType = fieldDefinition.resourceType;\n\n      if (fieldDefinition.fieldOption === RX_RECORD_DEFINITION.fieldOptions.required) {\n        validators.push(this.isRequired);\n      }\n\n      if (this.fieldValidatorsByType[fieldType]) {\n        validators.push(...this.fieldValidatorsByType[fieldType]);\n      }\n    }\n\n    return validators;\n  }\n\n  private getFieldDefinition(fieldId: number): IFieldDefinition {\n    return this.fieldDefinitions.find((definition) => definition.id === fieldId);\n  }\n\n  private isRequired(value: NumericOrString): IRxFieldValidationResult {\n    if (isNil(value) || value === '') {\n      return { required: 'Value is required' };\n    } else {\n      return null;\n    }\n  }\n\n  private isNaNValidator(value: NumericOrString): IRxFieldValidationResult {\n    return isNaN(value) ? { nan: `Value cannot be NaN` } : null;\n  }\n\n  private minValidator(value, fieldDefinition: IFieldDefinition): IRxFieldValidationResult {\n    const minError = { min: `Minimum value is ${fieldDefinition.minValue}` };\n\n    if (BigNumber.isBigNumber(value) || isFinite(value) || this.isFiniteNumberString(value)) {\n      return new BigNumber(value).isLessThan(fieldDefinition.minValue) ? minError : null;\n    } else {\n      return null;\n    }\n  }\n\n  private maxValidator(value: NumericOrString, fieldDefinition: IFieldDefinition): IRxFieldValidationResult {\n    const maxError = { max: `Maximum value is ${fieldDefinition.maxValue}` };\n\n    if (BigNumber.isBigNumber(value) || isFinite(value) || this.isFiniteNumberString(value)) {\n      return new BigNumber(value).isGreaterThan(fieldDefinition.maxValue) ? maxError : null;\n    } else {\n      return null;\n    }\n  }\n\n  private isFiniteNumberString(value: NumericOrString): value is NumericOrString {\n    return isString(value) && value.trim() !== '' && isFinite(Number(value));\n  }\n}\n","import { IRecordDefinition } from './record-definition.types';\nimport { RecordInstanceValidation } from './record-instance-validation.class';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { IFieldInstance } from './field-instance.interface';\nimport {\n  cloneDeep,\n  find,\n  forEach,\n  forOwn,\n  get,\n  includes,\n  isNull,\n  isNaN,\n  isString,\n  isUndefined,\n  reduce,\n  set,\n  some,\n  toNumber\n} from 'lodash';\nimport {\n  IFieldValueChanged,\n  IRecordInstance,\n  IRxFieldValidationResult,\n  IRxRecordInstanceAssociationInstances,\n  IRxValidationResult\n} from './record-instance.types';\nimport { IAssociationRecords } from '@helix/platform/association/api';\nimport { RX_RECORD_DEFINITION } from './record-definition.constant';\nimport { Injector } from '@angular/core';\nimport { RxLocalizationService, RxLogService } from '@helix/platform/shared/api';\nimport BigNumber from 'bignumber.js';\nimport { IFieldDefinition } from './field-definition.interfaces';\nimport { RxNumberUtilsService, RxStringService } from '@helix/platform/utils';\n\nexport class RecordInstance implements IRecordInstance {\n  readonly resourceType: string;\n\n  private fieldValueChangedSubject = new Subject<IFieldValueChanged>();\n\n  validation$ = new BehaviorSubject<IRxValidationResult>(null);\n  id: string;\n  fieldValueChanged$: Observable<IFieldValueChanged> = this.fieldValueChangedSubject.asObservable();\n  displayId: string;\n  recordDefinitionName: string;\n  permittedGroupsBySecurityLabels: any;\n  permittedUsersBySecurityLabels: any;\n  permittedRolesBySecurityLabels: any;\n  fieldInstances: { [fieldId: number]: IFieldInstance };\n  originalData: IRecordInstance;\n  associationInstances: IRxRecordInstanceAssociationInstances;\n\n  private rxLogService: RxLogService = this.injector.get<RxLogService>(RxLogService);\n  private rxLocalizationService: RxLocalizationService =\n    this.injector.get<RxLocalizationService>(RxLocalizationService);\n  private rxStringService: RxStringService = this.injector.get<RxStringService>(RxStringService);\n  private rxNumberUtilsService: RxNumberUtilsService = this.injector.get<RxNumberUtilsService>(RxNumberUtilsService);\n  private validationService: RecordInstanceValidation = new RecordInstanceValidation();\n\n  constructor(public recordDefinition: IRecordDefinition, recordInstance: IRecordInstance, private injector: Injector) {\n    this.prepareRecordInstance(recordInstance);\n\n    this.originalData = cloneDeep(recordInstance);\n\n    Object.assign(this, recordInstance);\n\n    this.validate();\n  }\n\n  private prepareRecordInstance(recordInstance: IRecordInstance): void {\n    // convert numeric field instance values from string to BigNumber instance\n    this.recordDefinition.fieldDefinitions\n      .filter((fieldDefinition) =>\n        includes(\n          [\n            RX_RECORD_DEFINITION.dataTypes.integer.resourceType,\n            RX_RECORD_DEFINITION.dataTypes.decimal.resourceType,\n            RX_RECORD_DEFINITION.dataTypes.real.resourceType\n          ],\n          fieldDefinition.resourceType\n        )\n      )\n      .forEach((fieldDefinition) => {\n        const fieldInstance = recordInstance.fieldInstances[fieldDefinition.id];\n\n        if (fieldInstance && fieldInstance.value) {\n          fieldInstance.value = new BigNumber(fieldInstance.value);\n        }\n      });\n\n    // update decimal field definition min and max numbers based on the precision\n    this.recordDefinition.fieldDefinitions\n      .filter((fieldDefinition) => fieldDefinition.resourceType === RX_RECORD_DEFINITION.dataTypes.decimal.resourceType)\n      .forEach((fieldDefinition: IFieldDefinition) => {\n        // According to the backend side, min and max number must be based on the precision. E.g when:\n        // - precision is 1, safe number will be 1e27 - 0.1 = 99999999999999999999999999.9\n        // - precision is 3, safe number will be 1e25 - 0.001 = 999999999999999999999999.999\n        const base = new BigNumber(0.1).pow(fieldDefinition.precision);\n        const safeRangeNumber = new BigNumber(1e28).multipliedBy(base).minus(base);\n\n        fieldDefinition.maxValue = new BigNumber(fieldDefinition.maxValue);\n        fieldDefinition.minValue = new BigNumber(fieldDefinition.minValue);\n\n        if (fieldDefinition.maxValue.isGreaterThanOrEqualTo(safeRangeNumber)) {\n          fieldDefinition.maxValue = safeRangeNumber;\n        }\n\n        if (fieldDefinition.minValue.isLessThanOrEqualTo(safeRangeNumber.negated())) {\n          fieldDefinition.minValue = safeRangeNumber.negated();\n        }\n      });\n\n    // convert boolean and selection field instance values from string to number\n    this.recordDefinition.fieldDefinitions\n      .filter((fieldDefinition) =>\n        includes(\n          [RX_RECORD_DEFINITION.dataTypes.boolean.resourceType, RX_RECORD_DEFINITION.dataTypes.selection.resourceType],\n          fieldDefinition.resourceType\n        )\n      )\n      .forEach((fieldDefinition) => {\n        const fieldInstance = recordInstance.fieldInstances[fieldDefinition.id];\n\n        if (fieldInstance && fieldInstance.value) {\n          fieldInstance.value = toNumber(fieldInstance.value);\n        }\n      });\n\n    // add default value for localized character field component\n    this.recordDefinition.fieldDefinitions\n      .filter(\n        (fieldDefinition) =>\n          RX_RECORD_DEFINITION.dataTypes.localizedCharacter.resourceType === fieldDefinition.resourceType\n      )\n      .forEach((fieldDefinition) => {\n        const fieldInstance = recordInstance.fieldInstances[fieldDefinition.id];\n        const currentLocaleCode = this.rxLocalizationService.currentLocale;\n        const defaultLocaleCode = 'en-US';\n\n        if (fieldInstance && !fieldInstance.value && fieldInstance.valueByLocale) {\n          fieldInstance.value =\n            fieldInstance.valueByLocale[currentLocaleCode] || fieldInstance.valueByLocale[defaultLocaleCode];\n        }\n      });\n\n    // set placeholder value for password fields\n    RX_RECORD_DEFINITION.passwordFieldIds.forEach((passwordFieldId) => {\n      const passwordFieldInstance = recordInstance.fieldInstances[passwordFieldId];\n\n      if (passwordFieldInstance) {\n        passwordFieldInstance.value = '********';\n      }\n    });\n  }\n\n  getFieldValue(fieldId: number, associatedRecordPath?: string[]): any {\n    const fieldInstance = this.getFieldInstance(fieldId, associatedRecordPath);\n\n    return get(fieldInstance, 'value', null);\n  }\n\n  setFieldValue(fieldId: number, value: any, associatedRecordPath?: string[]): void {\n    const recordInstance = this.getRecordInstance(associatedRecordPath);\n    const fieldInstance = this.getFieldInstance(fieldId, associatedRecordPath);\n    const fieldDefinition = find(recordInstance.recordDefinition.fieldDefinitions, { id: fieldId });\n\n    let newValue = isUndefined(value) ? null : value;\n\n    if (fieldInstance) {\n      switch (fieldDefinition.resourceType) {\n        case RX_RECORD_DEFINITION.dataTypes.character.resourceType:\n        case RX_RECORD_DEFINITION.dataTypes.localizedCharacter.resourceType:\n          if (!isNull(newValue)) {\n            if (!isString(newValue)) {\n              newValue = String(newValue);\n            } else if (this.rxStringService.isEmptySafe(newValue)) {\n              newValue = null;\n            }\n          }\n\n          break;\n\n        case RX_RECORD_DEFINITION.dataTypes.integer.resourceType:\n        case RX_RECORD_DEFINITION.dataTypes.real.resourceType:\n        case RX_RECORD_DEFINITION.dataTypes.decimal.resourceType:\n          if (!isNull(newValue)) {\n            if (this.rxNumberUtilsService.isFiniteOrNumberString(newValue)) {\n              newValue = new BigNumber(value);\n            } else {\n              this.logIncorrectFieldValueWarning(newValue, fieldDefinition);\n              newValue = isNaN(value) ? value : null;\n            }\n          }\n\n          break;\n\n        case RX_RECORD_DEFINITION.dataTypes.selection.resourceType:\n        case RX_RECORD_DEFINITION.dataTypes.boolean.resourceType:\n          if (!isNull(newValue)) {\n            if (!this.rxStringService.isEmptySafe(newValue) && isFinite(Number(newValue))) {\n              newValue = Number(newValue);\n            } else {\n              this.logIncorrectFieldValueWarning(newValue, fieldDefinition);\n              newValue = null;\n            }\n          }\n\n          break;\n\n        case RX_RECORD_DEFINITION.dataTypes.attachment.resourceType:\n          if (value instanceof File) {\n            newValue = value.name;\n            set(fieldInstance, 'file', value);\n          } else {\n            if (!isNull(newValue)) {\n              this.logIncorrectFieldValueWarning(newValue, fieldDefinition);\n            }\n\n            newValue = null;\n\n            delete fieldInstance.file;\n          }\n\n          break;\n      }\n\n      set(fieldInstance, 'value', newValue);\n\n      this.validate();\n\n      recordInstance.fieldValueChangedSubject.next({\n        fieldId,\n        value: fieldInstance.value\n      });\n    }\n  }\n\n  getFieldProp(fieldId: number, prop: string, associatedRecordPath?: string[]): any {\n    const fieldInstance = this.getFieldInstance(fieldId, associatedRecordPath);\n\n    return get(fieldInstance, prop);\n  }\n\n  setFieldProp(fieldId: number, prop: string, value: any, associatedRecordPath?: string[]): void {\n    const fieldInstance = this.getFieldInstance(fieldId, associatedRecordPath);\n\n    set(fieldInstance, prop, value);\n  }\n\n  getFieldInstance(fieldId: number, associatedRecordPath?: string[]): IFieldInstance {\n    if (associatedRecordPath) {\n      return get(this.getRecordInstance(associatedRecordPath), ['fieldInstances', fieldId]);\n    } else {\n      return this.fieldInstances[fieldId];\n    }\n  }\n\n  getRecordInstance(associatedRecordPath?: string[]): RecordInstance {\n    return associatedRecordPath ? get(this, ['associationInstances', ...associatedRecordPath]) : this;\n  }\n\n  isFieldValueChanged(fieldId: number, newValue: any, associatedRecordPath?: string[]) {\n    const fieldDefinition = find(this.getRecordInstance(associatedRecordPath).recordDefinition.fieldDefinitions, {\n      id: fieldId\n    });\n\n    const value = this.getFieldValue(fieldId, associatedRecordPath);\n\n    switch (fieldDefinition.resourceType) {\n      case RX_RECORD_DEFINITION.dataTypes.attachment.resourceType:\n        return value !== (newValue instanceof File ? newValue.name : newValue);\n\n      case RX_RECORD_DEFINITION.dataTypes.integer.resourceType:\n      case RX_RECORD_DEFINITION.dataTypes.real.resourceType:\n      case RX_RECORD_DEFINITION.dataTypes.decimal.resourceType:\n        return !new BigNumber(value).eq(newValue);\n\n      default:\n        return value !== newValue;\n    }\n  }\n\n  revertFieldInstances(): void {\n    this.fieldInstances = cloneDeep(this.originalData.fieldInstances);\n    this.validate();\n\n    forEach(this.getExtensionRecords(), (recordInstance: RecordInstance) => recordInstance.revertFieldInstances());\n  }\n\n  reset(): void {\n    Object.assign(this, cloneDeep(this.originalData));\n    this.associationInstances = null;\n    this.validate();\n  }\n\n  getOriginalRecordInstance(): RecordInstance {\n    return new RecordInstance(this.recordDefinition, this.originalData, this.injector);\n  }\n\n  validate(): void {\n    const errors = this.validationService.validate(this, this.recordDefinition);\n\n    this.validation$.next(errors);\n  }\n\n  validateSingleField(fieldId: number, value: any, associatedRecordPath?: string[]): IRxFieldValidationResult {\n    let result = {};\n\n    if (associatedRecordPath) {\n      const associatedRecordInstance: RecordInstance = this.getRecordInstance(associatedRecordPath);\n\n      if (associatedRecordInstance) {\n        result = associatedRecordInstance.validationService.validateSingleField(fieldId, value);\n      }\n    } else {\n      result = this.validationService.validateSingleField(fieldId, value);\n    }\n\n    return result;\n  }\n\n  private getExtensionRecords(): RecordInstance[] {\n    return reduce(\n      this.associationInstances,\n      (result, value, key) => {\n        forEach(value, (associationRecords: IAssociationRecords, nodeSide: string) => {\n          result.push(...associationRecords.extensions);\n        });\n\n        return result;\n      },\n      []\n    );\n  }\n\n  private isDeletedOrPendingAssociations(): boolean {\n    return some(this.associationInstances, (value) => {\n      return some(value, (associationRecords: IAssociationRecords, nodeSide: string) => {\n        return Boolean(associationRecords.deleted.length || associationRecords.pending.length);\n      });\n    });\n  }\n\n  private logIncorrectFieldValueWarning(value: any, fieldDefinition: IFieldDefinition) {\n    const fieldTypeName = find(RX_RECORD_DEFINITION.dataTypes, {\n      resourceType: fieldDefinition.resourceType\n    }).displayName;\n\n    this.rxLogService.warning(`${value} cannot be assigned to ${fieldTypeName} field.`);\n  }\n\n  prepareForBulkEdit(): void {\n    forEach(this.fieldInstances, (fieldInstance) => {\n      fieldInstance.value = null;\n\n      if (fieldInstance.resourceType === RX_RECORD_DEFINITION.resourceTypes.localizedFieldInstance) {\n        forOwn(fieldInstance.valueByLocale, (value, key) => {\n          fieldInstance.valueByLocale[key] = null;\n        });\n      }\n    });\n\n    this.originalData.fieldInstances = cloneDeep(this.fieldInstances);\n\n    this.validate();\n  }\n}\n","export const RX_RECORD_INSTANCE = {\n  association: {\n    operationResourceTypes: {\n      associate: 'com.bmc.arsys.rx.services.association.domain.AssociateOperation',\n      disassociate: 'com.bmc.arsys.rx.services.association.domain.DisassociateOperation',\n      createAndAssociate: 'com.bmc.arsys.rx.services.association.domain.CreateAndAssociateOperation',\n      update: 'com.bmc.arsys.rx.services.association.domain.UpdateOperation'\n    }\n  },\n\n  dataPageQuery: 'com.bmc.arsys.rx.application.record.datapage.RecordInstanceDataPageQuery'\n};\n","import { DataPage, IDataPageRequestConfiguration, IDataPageResult, RxLogService } from '@helix/platform/shared/api';\nimport { Observable } from 'rxjs';\nimport { Injectable, Injector } from '@angular/core';\nimport { RX_RECORD_INSTANCE } from './record-instance.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRecordInstanceDataPageService extends DataPage {\n  constructor(private injector: Injector, private rxLogService: RxLogService) {\n    super(injector, RX_RECORD_INSTANCE.dataPageQuery);\n  }\n\n  get(dataPageRequestConfiguration: IDataPageRequestConfiguration = {}): Observable<IDataPageResult> {\n    this.rxLogService.warning('RxRecordInstanceDataPageService: The get() method is deprecated. Use post() instead.');\n\n    return super.get(dataPageRequestConfiguration);\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { IDataPageParams, IPlainObject, RxLogService } from '@helix/platform/shared/api';\nimport BigNumber from 'bignumber.js';\nimport { get, isEqual, last, map as _map, toNumber, transform } from 'lodash';\nimport { Observable, of } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { IFieldInstance } from './field-instance.interface';\nimport { RX_RECORD_DEFINITION } from './record-definition.constant';\nimport { RxRecordInstanceDataPageService } from './record-instance-data-page.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRecordInstanceUtilsService {\n  displayFieldsCache: { [serializedParams: string]: IPlainObject[] } = {};\n\n  constructor(\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService,\n    private rxLogService: RxLogService\n  ) {}\n\n  convertFromDataPageRowToPlainRecordInstance(dataPageRow: IPlainObject): {\n    fieldInstances: { [fieldId: number]: IFieldInstance };\n    id: string;\n  } {\n    return {\n      id: dataPageRow[RX_RECORD_DEFINITION.coreFieldIds.id],\n      fieldInstances: transform(\n        dataPageRow,\n        (result, value, key) => {\n          result[key] = {\n            id: toNumber(key),\n            value: value\n          };\n        },\n        {}\n      )\n    };\n  }\n\n  escapeTextWildcards(value) {\n    // escape double quotes with double quotes, e.g. replace \"textInQuotes\" with \"\"textInQuotes\"\"\n    // escape wildcards with backslash, e.g. replace `search%And_` with `search\\%And\\_`\n    return value.replace(/\"/g, '\"\"').replace(/[%_]/g, '\\\\$&');\n  }\n\n  isFieldValueEqual(value: any, other: any) {\n    if (value instanceof BigNumber || other instanceof BigNumber) {\n      return new BigNumber(value).eq(new BigNumber(other));\n    } else {\n      return isEqual(value, other);\n    }\n  }\n\n  isNoRecordFoundError(error: Error) {\n    return error instanceof HttpErrorResponse && get(error, 'error[0].messageNumber') === 302;\n  }\n\n  getFieldValues(\n    recordDefinitionName: string,\n    recordInstanceIds: string[],\n    fieldIds: string[]\n  ): Observable<IPlainObject[]> {\n    const queryExpression = _map(\n      recordInstanceIds,\n      (recordInstanceId) => `'${RX_RECORD_DEFINITION.coreFieldIds.id}'=\"${recordInstanceId}\"`\n    ).join(' OR ');\n\n    const params: IDataPageParams = {\n      recorddefinition: recordDefinitionName,\n      propertySelection: fieldIds.join(','),\n      queryExpression,\n      pageSize: -1,\n      startIndex: 0\n    };\n\n    const serializedParams = JSON.stringify(params);\n\n    if (this.displayFieldsCache[serializedParams]) {\n      return of(this.displayFieldsCache[serializedParams]);\n    }\n\n    return this.rxRecordInstanceDataPageService.post({ params }).pipe(\n      shareReplay(1),\n      map((result) => {\n        this.displayFieldsCache[serializedParams] = result.data;\n\n        return result.data;\n      })\n    );\n  }\n\n  // This method parses content-disposition header and returns decoded file name, for example:\n  // 'attachment; filename*=UTF-8\\'\\'foo+bar.jpg' will become 'foo bar.jpg'\n  // Additional notes:\n  // 1. returns empty string if failed to parse content-disposition\n  // 2. '+'  symbols will be replaced with '%20' which will then be evaluated to spaces after decoding\n  tryParseContentDisposition(contentDisposition: string): string {\n    try {\n      let fileName = contentDisposition.match(/(?:attachment; filename\\*=UTF-8'')(.*)/)[1];\n\n      fileName = fileName.replace(/\\+/g, '%20');\n\n      return decodeURIComponent(fileName);\n    } catch (e) {\n      this.rxLogService.warning(`Cannot parse content-disposition response header: ${contentDisposition}`);\n\n      return '';\n    }\n  }\n}\n","import { Injectable, Injector, NgZone } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { forkJoin, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport {\n  assign,\n  filter,\n  find,\n  forEach,\n  groupBy,\n  has,\n  includes,\n  isEmpty,\n  isEqual,\n  isNull,\n  isNumber,\n  isString,\n  isUndefined,\n  map as _map,\n  pick,\n  remove,\n  sortBy,\n  transform,\n  trim,\n  values\n} from 'lodash';\nimport { saveAs } from 'file-saver';\n\nimport { IAssociationRecords } from '@helix/platform/association/api';\nimport { IAttachedFile } from './attached-file.interface';\nimport { IFieldInstance } from './field-instance.interface';\nimport {\n  ICreatedRecordInstance,\n  IRecordInstance,\n  IRxRecordInstanceAssociationInstances\n} from './record-instance.types';\nimport { RecordInstance } from './record-instance.class';\nimport { RX_RECORD_DEFINITION } from './record-definition.constant';\nimport { RX_RECORD_INSTANCE } from './record-instance.constant';\nimport { RxRecordDefinitionCacheService } from './record-definition-cache.service';\nimport { RxRecordInstanceUtilsService } from './record-instance-utils.service';\nimport { IRecordDefinition } from './record-definition.types';\nimport { IFieldDefinition } from './field-definition.interfaces';\nimport BigNumber from 'bignumber.js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRecordInstanceService {\n  private path = '/api/rx/application/record/recordinstance';\n\n  constructor(\n    private httpClient: HttpClient,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxRecordInstanceUtilsService: RxRecordInstanceUtilsService,\n    private injector: Injector,\n    private ngZone: NgZone\n  ) {}\n\n  get(recordDefinitionName: string, recordInstanceId: string): Observable<RecordInstance> {\n    return this.getRecordInstance(recordDefinitionName, recordInstanceId);\n  }\n\n  getNew(recordDefinitionName: string): Observable<RecordInstance> {\n    return this.getRecordInstance(recordDefinitionName, '0');\n  }\n\n  getEmpty(recordDefinitionName: string): Observable<RecordInstance> {\n    return this.getNew(recordDefinitionName).pipe(tap((recordInstance) => recordInstance.prepareForBulkEdit()));\n  }\n\n  save(\n    recordInstance: RecordInstance,\n    options?: {\n      headers?:\n        | HttpHeaders\n        | {\n            [header: string]: string | string[];\n          };\n    }\n  ): Observable<any> {\n    return this.httpClient.put(\n      `${this.path}/${encodeURIComponent(recordInstance.recordDefinitionName)}/${encodeURIComponent(\n        recordInstance.id\n      )}`,\n      this.prepareRecordInstance(recordInstance),\n      options\n    );\n  }\n\n  delete(recordDefinitionName: string, recordInstanceId: string): Observable<any> {\n    return this.httpClient.delete(\n      `${this.path}/${encodeURIComponent(recordDefinitionName)}/${encodeURIComponent(recordInstanceId)}`\n    );\n  }\n\n  private prepareAttachments(\n    fieldInstances: { [fieldId: number]: IFieldInstance },\n    isAssociation = false\n  ): IAttachedFile[] {\n    const attachedFiles = filter(fieldInstances, (fieldInstance) => Boolean(fieldInstance.file)).map(\n      (attachment: IFieldInstance) => {\n        const keyPrefix = isAssociation ? `${fieldInstances[RX_RECORD_DEFINITION.coreFieldIds.id].value}/` : '';\n\n        return {\n          key: `${keyPrefix}${attachment.id}`,\n          file: attachment.file\n        };\n      }\n    );\n\n    this.cleanAttachmentFiles(fieldInstances);\n\n    return attachedFiles;\n  }\n\n  // There should not be any files in record instance JSON so we are cleaning it\n  private cleanAttachmentFiles(fieldInstances: { [fieldId: number]: IFieldInstance }) {\n    filter(fieldInstances, (fieldInstance) => has(fieldInstance, 'file')).forEach((fieldInstanceWithFile) => {\n      if (fieldInstanceWithFile.file) {\n        delete fieldInstances[fieldInstanceWithFile.id];\n      } else {\n        delete fieldInstances[fieldInstanceWithFile.id].file;\n      }\n    });\n  }\n\n  create(recordInstance: RecordInstance): Observable<ICreatedRecordInstance> {\n    return this.httpClient\n      .post(this.path, this.prepareRecordInstance(recordInstance), {\n        observe: 'response',\n        responseType: 'text'\n      })\n      .pipe(\n        map((res: HttpResponse<any>) => {\n          let result = {};\n          const locationHeader = res.headers.get('location');\n\n          if (locationHeader) {\n            result = {\n              id: locationHeader.substr(locationHeader.lastIndexOf('/') + 1),\n              url: locationHeader\n            };\n          }\n\n          return result;\n        })\n      );\n  }\n\n  private getRecordInstance(recordDefinitionName: string, recordInstanceId: string): Observable<RecordInstance> {\n    return forkJoin([\n      this.rxRecordDefinitionCacheService.getRecordDefinition(recordDefinitionName),\n      this.getRecordInstanceData(recordDefinitionName, recordInstanceId)\n    ]).pipe(\n      map(\n        ([recordDefinition, recordInstanceData]) =>\n          new RecordInstance(recordDefinition, recordInstanceData, this.injector)\n      )\n    );\n  }\n\n  private getRecordInstanceData(recordDefinitionName: string, recordInstanceId: string): Observable<IRecordInstance> {\n    return this.httpClient.get<IRecordInstance>(\n      `${this.path}/${encodeURIComponent(recordDefinitionName)}/${encodeURIComponent(recordInstanceId)}`\n    );\n  }\n\n  private prepareRecordInstance(recordInstance: RecordInstance): IRecordInstance | FormData {\n    const modifiedFieldInstances: { [fieldId: string]: IFieldInstance } = {};\n    const recordInstanceFormData: FormData = new FormData();\n\n    Object.keys(recordInstance.originalData.fieldInstances).forEach((fieldIdKey: string) => {\n      const fieldId = Number(fieldIdKey);\n      const fieldInstance = recordInstance.fieldInstances[fieldId];\n      const originalFieldInstance = recordInstance.originalData.fieldInstances[fieldId];\n\n      if (isString(fieldInstance.value)) {\n        fieldInstance.value = trim(fieldInstance.value);\n      }\n\n      if (\n        isUndefined(originalFieldInstance) ||\n        (fieldInstance.value === null && originalFieldInstance.value !== null) ||\n        (fieldInstance.value !== null && originalFieldInstance.value === null) ||\n        (fieldInstance.value !== null &&\n          originalFieldInstance.value !== null &&\n          !(isNumber(fieldInstance.value) || BigNumber.isBigNumber(fieldInstance.value)) &&\n          String(fieldInstance.value) !== originalFieldInstance.value) ||\n        ((isNumber(fieldInstance.value) || BigNumber.isBigNumber(fieldInstance.value)) &&\n          !new BigNumber(fieldInstance.value).isEqualTo(originalFieldInstance.value)) ||\n        (fieldId === RX_RECORD_DEFINITION.coreFieldIds.modifiedDate && fieldInstance.value !== null) ||\n        (fieldInstance.resourceType === RX_RECORD_DEFINITION.resourceTypes.localizedFieldInstance &&\n          !isEqual(originalFieldInstance.valueByLocale, fieldInstance.valueByLocale))\n      ) {\n        modifiedFieldInstances[fieldId] = fieldInstance;\n      }\n    });\n\n    const preparedRecordInstance = {\n      id: recordInstance.id,\n      resourceType: recordInstance.resourceType,\n      displayId: recordInstance.displayId,\n      recordDefinitionName: recordInstance.recordDefinitionName,\n      permittedGroupsBySecurityLabels: recordInstance.permittedGroupsBySecurityLabels,\n      permittedUsersBySecurityLabels: recordInstance.permittedUsersBySecurityLabels,\n      permittedRolesBySecurityLabels: recordInstance.permittedRolesBySecurityLabels,\n      fieldInstances: modifiedFieldInstances\n    };\n\n    let attachedFiles = this.prepareAttachments(preparedRecordInstance.fieldInstances);\n\n    const associationInstances = this.prepareAssociationInstancesForSaving(recordInstance.associationInstances);\n\n    // We have to use FormData if we have attachments or associated data\n    if (!isEmpty(attachedFiles) || !isEmpty(associationInstances)) {\n      recordInstanceFormData.append('recordInstance', JSON.stringify(preparedRecordInstance));\n\n      if (!isEmpty(associationInstances)) {\n        filter(associationInstances, 'recordInstances').forEach((associationConfig) => {\n          forEach(associationConfig.recordInstances, (instance) => {\n            attachedFiles = attachedFiles.concat(this.prepareAttachments(instance.fieldInstances, true));\n          });\n        });\n\n        recordInstanceFormData.append('associationOperations', JSON.stringify(associationInstances));\n      }\n\n      attachedFiles.forEach((attachment) => {\n        recordInstanceFormData.append(attachment.key, attachment.file, attachment.file.name);\n      });\n\n      return recordInstanceFormData;\n    } else {\n      return preparedRecordInstance;\n    }\n  }\n\n  getAttachmentDownloadUrl(recordDefinitionName: string, fieldId: number, recordInstanceId: string): string {\n    return `${RX_RECORD_DEFINITION.recordInstanceAttachment}/${encodeURIComponent(\n      recordDefinitionName\n    )}/${encodeURIComponent(recordInstanceId)}/${fieldId}`;\n  }\n\n  downloadAttachment(recordDefinitionName: string, fieldId: number, recordInstanceId: string, fileName: string): void {\n    this.httpClient\n      .get(this.getAttachmentDownloadUrl(recordDefinitionName, fieldId, recordInstanceId), { responseType: 'blob' })\n      .subscribe((fileStream) => {\n        if (fileStream) {\n          const file = new Blob([fileStream], {\n            type: fileStream.type\n          });\n\n          this.ngZone.runOutsideAngular(() => {\n            saveAs(file, fileName);\n          });\n        }\n      });\n  }\n\n  getAttachment(recordDefinitionName: string, fieldId: number, recordInstanceId: string): Observable<Blob> {\n    return this.httpClient\n      .get(this.getAttachmentDownloadUrl(recordDefinitionName, fieldId, recordInstanceId), { responseType: 'blob' })\n      .pipe(\n        map((fileStream: Blob) => {\n          return new Blob([fileStream], {\n            type: fileStream.type\n          });\n        })\n      );\n  }\n\n  prepareAssociationInstancesForSaving(associationInstances: IRxRecordInstanceAssociationInstances) {\n    const associationPayload = transform(\n      associationInstances,\n      (result, associationInstance, associationDefinitionName) => {\n        forEach(associationInstance, (associationGroups: IAssociationRecords, key) => {\n          const nodeSide = key.split(':')[0];\n\n          const newAssociations: any[] = remove(associationGroups.pending, 'isNewInstance');\n\n          if (!isEmpty(associationGroups.pending)) {\n            values(groupBy(associationGroups.pending, (instance) => JSON.stringify(instance.rolesConfig))).forEach(\n              (instancesGroup) => {\n                result.push(\n                  assign(\n                    {\n                      associationDefinitionName: associationDefinitionName,\n                      recordInstanceIds: _map(instancesGroup, 'id'),\n                      nodeSide,\n                      resourceType: RX_RECORD_INSTANCE.association.operationResourceTypes.associate\n                    },\n                    instancesGroup[0].rolesConfig\n                  )\n                );\n              }\n            );\n          }\n\n          if (!isEmpty(newAssociations)) {\n            values(groupBy(newAssociations, (instance) => JSON.stringify(instance.rolesConfig))).forEach(\n              (instancesGroup) => {\n                result.push(\n                  assign(\n                    {\n                      associationDefinitionName: associationDefinitionName,\n                      recordInstances: _map(newAssociations, (newAssociation) =>\n                        pick(newAssociation, ['fieldInstances', 'recordDefinitionName'])\n                      ),\n                      nodeSide,\n                      resourceType: RX_RECORD_INSTANCE.association.operationResourceTypes.createAndAssociate\n                    },\n                    instancesGroup[0].rolesConfig\n                  )\n                );\n              }\n            );\n          }\n\n          if (!isEmpty(associationGroups.deleted)) {\n            result.push({\n              associationDefinitionName: associationDefinitionName,\n              recordInstanceIds: _map(associationGroups.deleted, 'id'),\n              nodeSide,\n              resourceType: RX_RECORD_INSTANCE.association.operationResourceTypes.disassociate\n            });\n          }\n\n          if (!isEmpty(associationGroups.extensions)) {\n            const extensionRecordInstance = associationGroups.extensions[0];\n\n            result.push({\n              associationDefinitionName: associationDefinitionName,\n              recordInstances: [this.prepareAssociatedRecordInstanceForSaving(extensionRecordInstance)],\n              nodeSide,\n              resourceType: extensionRecordInstance.isNewInstance\n                ? RX_RECORD_INSTANCE.association.operationResourceTypes.createAndAssociate\n                : RX_RECORD_INSTANCE.association.operationResourceTypes.update\n            });\n          }\n        });\n      },\n      []\n    );\n\n    return sortBy(associationPayload, (associationData) => {\n      // DISASSOCIATE operations must be at the beginning\n      return associationData.operation === 'ASSOCIATE';\n    });\n  }\n\n  prepareAssociatedRecordInstanceForSaving(recordInstance): IRecordInstance {\n    const recordInstanceClone = this.prepareRecordInstance(recordInstance) as IRecordInstance;\n\n    recordInstanceClone.fieldInstances[RX_RECORD_DEFINITION.coreFieldIds.id] =\n      recordInstance.fieldInstances[RX_RECORD_DEFINITION.coreFieldIds.id];\n\n    // todo ychubar fix typings\n    delete (recordInstanceClone as any).isNewInstance;\n\n    return recordInstanceClone;\n  }\n\n  createInstanceFromDataPageRow(dataPageRow, recordDefinition: IRecordDefinition): RecordInstance {\n    const plainRecordInstance = this.rxRecordInstanceUtilsService.convertFromDataPageRowToPlainRecordInstance(\n      dataPageRow\n    ) as IRecordInstance;\n\n    plainRecordInstance.recordDefinitionName = recordDefinition.name;\n\n    forEach(plainRecordInstance.fieldInstances, (fieldInstance, fieldId) => {\n      const fieldDefinition =\n        find(recordDefinition.fieldDefinitions, { id: Number(fieldId) }) || ({} as IFieldDefinition);\n\n      if (fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.localizedCharacter) {\n        fieldInstance.resourceType = RX_RECORD_DEFINITION.resourceTypes.localizedFieldInstance;\n      }\n\n      // normalize record instance fields\n      if (!isNull(fieldInstance.value)) {\n        if (\n          isNumber(fieldInstance.value) &&\n          includes(\n            [RX_RECORD_DEFINITION.resourceTypes.boolean, RX_RECORD_DEFINITION.resourceTypes.selection],\n            fieldDefinition.resourceType\n          )\n        ) {\n          fieldInstance.value = String(fieldInstance.value);\n        }\n      }\n    });\n\n    return new RecordInstance(recordDefinition, plainRecordInstance, this.injector);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RxRecordInstanceService } from './record-instance.service';\nimport { RecordInstance } from './record-instance.class';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { from, Observable, throwError } from 'rxjs';\nimport { RX_ERROR_HANDLING } from '@helix/platform/shared/api';\nimport { RxUtilityModalsService } from '@helix/platform/ui-kit';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRecordInstanceUpdateService {\n  constructor(\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private rxUtilityModalsService: RxUtilityModalsService\n  ) {}\n\n  execute(recordInstance: RecordInstance): Observable<any> {\n    return this.rxRecordInstanceService\n      .save(recordInstance)\n      .pipe(catchError((error) => this.handleModifiedInstanceError(error, recordInstance)));\n  }\n\n  private handleModifiedInstanceError(error, recordInstance: RecordInstance): Observable<any> {\n    if (error.status === RX_ERROR_HANDLING.optimisticLockErrorHttpStatus) {\n      return from(this.rxUtilityModalsService.confirmExternalChange(error.error[0].messageText)).pipe(\n        switchMap((isConfirmed) => {\n          if (isConfirmed) {\n            return this.rxRecordInstanceService.save(recordInstance, {\n              headers: {\n                'Override-Optimistic-Lock': 'true'\n              }\n            });\n          } else {\n            return throwError(error);\n          }\n        })\n      );\n    } else {\n      return throwError(error);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IFieldDefinition } from './field-definition.interfaces';\nimport { RX_RECORD_DEFINITION } from './record-definition.constant';\nimport { includes, inRange, isNumber, get, isUndefined } from 'lodash';\nimport { IRecordDefinition } from './record-definition.types';\nimport { RX_OVERLAY, RxOverlayService } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxFieldDefinitionService {\n  constructor(private rxOverlayService: RxOverlayService) {}\n\n  isSystemField(fieldDefinition: IFieldDefinition): boolean {\n    return fieldDefinition?.fieldOption === RX_RECORD_DEFINITION.fieldOptions.system;\n  }\n\n  isRequiredField(fieldDefinition: IFieldDefinition): boolean {\n    return fieldDefinition?.fieldOption === RX_RECORD_DEFINITION.fieldOptions.required;\n  }\n\n  isPassword(fieldDefinition: IFieldDefinition): boolean {\n    return includes(RX_RECORD_DEFINITION.passwordFieldIds, fieldDefinition.id);\n  }\n\n  isSecured(fieldDefinition: IFieldDefinition): boolean {\n    return fieldDefinition.shouldPersistHashed || fieldDefinition.shouldPersistEncrypted;\n  }\n\n  isReadOnly(fieldDefinition: IFieldDefinition): boolean {\n    return this.isSystemField(fieldDefinition) || this.isInheritedField(fieldDefinition);\n  }\n\n  isInheritedField(fieldDefinition: IFieldDefinition): boolean {\n    return fieldDefinition.hasOwnProperty('isInherited') && fieldDefinition.isInherited;\n  }\n\n  isPropertiesCustomizationEnabled(fieldDefinition: IFieldDefinition): boolean {\n    return (\n      this.isTransient(fieldDefinition) ||\n      this.rxOverlayService.isCustomizationEnabled('allowOtherPropertiesOverlay', fieldDefinition)\n    );\n  }\n\n  isTransient(fieldDefinition): boolean {\n    return isUndefined(fieldDefinition.lastUpdateTime);\n  }\n\n  isOverlayMode(fieldDefinition: IFieldDefinition): boolean {\n    const overlayGroupId = fieldDefinition.overlayGroupId;\n    const overlayDescriptor = fieldDefinition.overlayDescriptor || { parentOverlayGroupId: null };\n\n    return (\n      this.rxOverlayService.getOverlayOperation(overlayGroupId, overlayDescriptor.parentOverlayGroupId) !==\n      RX_OVERLAY.operationTypes.createdInThisOverlayGroup\n    );\n  }\n\n  // Is field ID in a range reserved by BMC\n  isReservedField(fieldDefinition: IFieldDefinition, skipValidate = false): boolean {\n    // if (isNumber(fieldDefinition.id)) {\n    if (!skipValidate) {\n      return this.isExternalRecordField(fieldDefinition)\n        ? includes(RX_RECORD_DEFINITION.externalRecordDefinitionCoreFieldIds, fieldDefinition.id)\n        : fieldDefinition.id <= RX_RECORD_DEFINITION.AR_MAX_RESERVED_FIELD_ID;\n    } else {\n      return false;\n    }\n  }\n\n  isPermissionsCustomizationEnabled(fieldDefinition): boolean {\n    return (\n      this.isTransient(fieldDefinition) ||\n      this.rxOverlayService.isCustomizationEnabled('allowPermissionsOverlay', fieldDefinition)\n    );\n  }\n\n  isSortable(fieldDefinition: IFieldDefinition): boolean {\n    // Records cannot be sorted by a field with unlimited length (maxLength = 0), or by a field longer than 1000 characters.\n    // This applies to character and localized character fields.\n    // Sorting is allowed for fields with unspecified length.\n    return (\n      !isNumber(fieldDefinition.maxLength) ||\n      inRange(fieldDefinition.maxLength, 1, RX_RECORD_DEFINITION.sortableCharacterFieldMaxLength + 1)\n    );\n  }\n\n  isSearchable(fieldDefinition: IFieldDefinition, recordDefinition?: IRecordDefinition): boolean {\n    return (\n      includes(\n        [RX_RECORD_DEFINITION.dataTypes.character.resourceType, RX_RECORD_DEFINITION.dataTypes.attachment.resourceType],\n        fieldDefinition.resourceType\n      ) &&\n      !this.isPassword(fieldDefinition) &&\n      !this.isSecured(fieldDefinition) &&\n      !this.isReadOnly(fieldDefinition) &&\n      this.isPropertiesCustomizationEnabled(fieldDefinition)\n    );\n  }\n\n  isJoinedField(fieldDefinition: IFieldDefinition): boolean {\n    return this.isJoinRecordField(fieldDefinition) && !this.isCoreField(fieldDefinition);\n  }\n\n  isCoreField(fieldDefinition: IFieldDefinition): boolean {\n    let coreFieldIds = RX_RECORD_DEFINITION.arCoreFieldIds;\n\n    if (this.isJoinRecordField(fieldDefinition)) {\n      coreFieldIds = RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds;\n    } else if (this.isExternalRecordField(fieldDefinition)) {\n      coreFieldIds = RX_RECORD_DEFINITION.externalRecordDefinitionCoreFieldIds;\n    }\n\n    return includes(coreFieldIds, fieldDefinition.id);\n  }\n\n  isExternalRecordField(fieldDefinition: IFieldDefinition): boolean {\n    return get(fieldDefinition, 'fieldMapping.resourceType') === RX_RECORD_DEFINITION.externalFieldMapping;\n  }\n\n  canBeAssociatedDisplayField(fieldDefinition: IFieldDefinition): boolean {\n    return (\n      (this.isReservedField(fieldDefinition) || !this.isTransient(fieldDefinition)) &&\n      (fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.character ||\n        fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.localizedCharacter) &&\n      RX_RECORD_DEFINITION.coreFieldIds.id !== fieldDefinition.id\n    );\n  }\n\n  private isJoinRecordField(fieldDefinition: IFieldDefinition): boolean {\n    return get(fieldDefinition, 'fieldMapping.resourceType') === RX_RECORD_DEFINITION.joinFieldMapping;\n  }\n\n  isDataProviderIdField(fieldDefinition: IFieldDefinition, recordDefinition: IRecordDefinition): boolean {\n    const isCustomRecordDefinition =\n      recordDefinition?.type === RX_RECORD_DEFINITION.externalRecordDefinitionTypes.custom;\n\n    return isCustomRecordDefinition && fieldDefinition.id === RX_RECORD_DEFINITION.specialFieldIds.dataProviderId;\n  }\n\n  isFieldInUserOverlay(fieldDefinition: IFieldDefinition): boolean {\n    return (\n      !fieldDefinition.lastUpdateTime ||\n      this.rxOverlayService.getUserDefaultOverlayGroupId() === fieldDefinition.overlayGroupId\n    );\n  }\n}\n","import { Observable } from 'rxjs';\nimport { IDataPageResult } from '@helix/platform/shared/api';\nimport { RX_RECORD_DEFINITION } from './record-definition.constant';\nimport { RxRecordInstanceDataPageService } from './record-instance-data-page.service';\nimport { Injectable } from '@angular/core';\nimport { shareReplay } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxLocaleService {\n  private locales: Observable<IDataPageResult>;\n\n  constructor(private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService) {}\n\n  getLocales(): Observable<IDataPageResult> {\n    if (!this.locales) {\n      this.locales = this.rxRecordInstanceDataPageService\n        .post({\n          params: {\n            recorddefinition: RX_RECORD_DEFINITION.supportedSystemLocales.recordDefinitionName,\n            propertySelection: [\n              RX_RECORD_DEFINITION.supportedSystemLocales.nameFieldId,\n              RX_RECORD_DEFINITION.supportedSystemLocales.codeFieldId\n            ].join(','),\n            sortBy: RX_RECORD_DEFINITION.supportedSystemLocales.nameFieldId\n          }\n        })\n        .pipe(shareReplay(1));\n    }\n\n    return this.locales;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { RX_RECORD_DEFINITION } from './record-definition.constant';\n\n@Pipe({\n  name: 'rxRecordDefinitionResourceType'\n})\nexport class RxRecordDefinitionResourceTypePipe implements PipeTransform {\n  transform(value: string): string {\n    const resourceType = RX_RECORD_DEFINITION.resourceTypesByFullName[value];\n\n    return RX_RECORD_DEFINITION.dataTypes[resourceType]?.displayName || '';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RxRecordDefinitionResourceTypePipe } from './record-definition-resource-type.pipe';\n\n@NgModule({\n  declarations: [RxRecordDefinitionResourceTypePipe],\n  exports: [RxRecordDefinitionResourceTypePipe]\n})\nexport class RxRecordDefinitionResourceTypePipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RX_RECORD_DEFINITION } from './record-definition.constant';\n\n@Pipe({\n  name: 'rxRecordDefinitionFieldOption'\n})\nexport class RxRecordDefinitionFieldOptionPipe implements PipeTransform {\n  constructor(private translateService: TranslateService) {}\n\n  transform(value: string): string {\n    let fieldOption: string;\n\n    if (value === RX_RECORD_DEFINITION.fieldOptions.required) {\n      fieldOption = this.translateService.instant('com.bmc.arsys.rx.client.common.yes.label');\n    } else if (value === RX_RECORD_DEFINITION.fieldOptions.optional) {\n      fieldOption = this.translateService.instant('com.bmc.arsys.rx.client.common.no.label');\n    } else if (value === RX_RECORD_DEFINITION.fieldOptions.system) {\n      fieldOption = `${this.translateService.instant(\n        'com.bmc.arsys.rx.client.common.yes.label'\n      )} (${this.translateService.instant('com.bmc.arsys.rx.client.field-definition.type.system.label')})`;\n    }\n\n    return fieldOption;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RxRecordDefinitionFieldOptionPipe } from './record-definition-field-option.pipe';\n\n@NgModule({\n  declarations: [RxRecordDefinitionFieldOptionPipe],\n  exports: [RxRecordDefinitionFieldOptionPipe]\n})\nexport class RxRecordDefinitionFieldOptionPipeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["of","Injectable","RecordFieldOption","map","assign","range","ArchiveType","AssociationSelectionType","tap","cloneDeep","RX_BUNDLE","mapValues","reduce","get","defaults","size","recordDefinitionDataPageQuery","DataPage","castArray","fromPairs","shareReplay","forkJoin","isEmpty","isNil","isNaN","BigNumber","isFinite","isString","Subject","BehaviorSubject","RxLogService","RxLocalizationService","RxStringService","RxNumberUtilsService","includes","toNumber","find","isUndefined","isNull","set","forEach","some","forOwn","transform","isEqual","HttpErrorResponse","_map","filter","has","trim","isNumber","saveAs","remove","values","groupBy","pick","sortBy","catchError","RX_ERROR_HANDLING","from","switchMap","throwError","RX_OVERLAY","inRange","Pipe","NgModule"],"mappings":"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"}