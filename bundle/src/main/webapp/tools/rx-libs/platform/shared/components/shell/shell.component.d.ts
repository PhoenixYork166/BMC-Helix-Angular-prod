import { Injector, OnDestroy, OnInit, TemplateRef } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { AdaptModalService, AdaptNavigationComponent, AdaptNavigationService, NavigationAction } from '@bmc-ux/adapt-angular';
import { RxNotificationService, RxSmartReportingService, RxUpgradeTrackerService } from '@helix/platform/shared/api';
import { RxModalService } from '@helix/platform/ui-kit';
import { IRxShellConfig, IRxShellMenuItem, RxShellService, RxViewActionService } from '@helix/platform/view/api';
import { Observable } from 'rxjs';
import { ShellBase } from './shell-base.class';
import * as i0 from "@angular/core";
export declare class RxShellComponent extends ShellBase implements OnInit, OnDestroy {
    private adaptModalService;
    private route;
    private rxModalService;
    private rxNotificationService;
    private rxShellService;
    private rxSmartReportingService;
    private rxUpgradeTrackerService;
    private rxViewActionService;
    protected injector: Injector;
    private adaptNavigationService;
    protected adaptNavigation: AdaptNavigationComponent;
    protected userMessagesPopover: TemplateRef<any>;
    private subscriptions;
    constructor(adaptModalService: AdaptModalService, route: ActivatedRoute, rxModalService: RxModalService, rxNotificationService: RxNotificationService, rxShellService: RxShellService, rxSmartReportingService: RxSmartReportingService, rxUpgradeTrackerService: RxUpgradeTrackerService, rxViewActionService: RxViewActionService, injector: Injector, adaptNavigationService: AdaptNavigationService);
    ngOnInit(): void;
    private onNavigationCanceled;
    private openView;
    private openUserPreferences;
    openGainsightPreferences(): void;
    private openUserAvailability;
    protected getNavigationActionItems(): Observable<NavigationAction[]>;
    protected getActiveNavigationMenuItem(): IRxShellMenuItem;
    protected getNavigationMenuItems(): Observable<IRxShellMenuItem[]>;
    protected getUserMenuItems(): Observable<IRxShellMenuItem[]>;
    ngOnDestroy(): void;
    protected getShellConfig(): Observable<IRxShellConfig>;
    static ɵfac: i0.ɵɵFactoryDeclaration<RxShellComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RxShellComponent, "rx-shell", never, {}, {}, never, never>;
}
