import { RxAssociationDefinitionDataPageService } from '@helix/platform/association/api';
import { RxNamedListDefinitionDataPageService } from '@helix/platform/named-list/api';
import { RxProcessDefinitionDataPageService } from '@helix/platform/process/api';
import { RxRecordDefinitionDataPageService } from '@helix/platform/record/api';
import { RxViewDefinitionDataPageService } from '@helix/platform/view/api';
import { Observable } from 'rxjs';
import { IDefinitionDescriptor } from './interfaces/definition-descriptor.interface';
import { RxChatbotDefinitionDataPageService } from '@helix/platform/shared/api';
import * as i0 from "@angular/core";
export declare class RxDefinitionPickerCacheService {
    private recordDefinitionDataPageService;
    private processDefinitionDataPageService;
    private viewDefinitionDataPageService;
    private namedListDefinitionDataPageService;
    private associationDefinitionDataPageService;
    private rxChatbotDefinitionDataPageService;
    private registeredConsumerCount;
    private bundleRecordDefinitionDescriptors;
    private bundleDataRecordDefinitionDescriptors;
    private bundleRegularRecordDefinitionDescriptors;
    private bundleRegularDataRecordDefinitionDescriptors;
    private bundleStandardDataRecordDefinitionDescriptors;
    private bundlePublicRegularDataRecordDefinitionDescriptors;
    private bundleInheritableRecordDefinitionDescriptors;
    private bundleProcessDefinitionDescriptors;
    private bundlePublicProcessDefinitionDescriptors;
    private bundleViewDefinitionDescriptor;
    private bundleNamedListDefinitionDescriptors;
    private bundleAssociationDefinitionDescriptors;
    private bundleChatbotDefinitionDescriptors;
    private rxRecordDefinitionDescriptors;
    private rxDataRecordDefinitionDescriptors;
    private rxStandardDataRecordDefinitionDescriptors;
    private allRecordDefinitionDescriptors;
    private allDataRecordDefinitionDescriptors;
    private allStandardDataRecordDefinitionDescriptors;
    private allRegularRecordDefinitionDescriptors;
    private allRegularDataRecordDefinitionDescriptors;
    private allPublicRegularDataRecordDefinitionDescriptors;
    private rxRegularRecordDefinitionDescriptors;
    private rxRegularDataRecordDefinitionDescriptors;
    private rxPublicRegularDataRecordDefinitionDescriptors;
    private allInheritableRecordDefinitionDescriptors;
    private allProcessDefinitionDescriptors;
    private allPublicProcessDefinitionDescriptors;
    private allViewDefinitionDescriptors;
    private allNamedListDefinitionDescriptors;
    private allAssociationDefinitionDescriptors;
    private allChatbotDefinitionDescriptors;
    constructor(recordDefinitionDataPageService: RxRecordDefinitionDataPageService, processDefinitionDataPageService: RxProcessDefinitionDataPageService, viewDefinitionDataPageService: RxViewDefinitionDataPageService, namedListDefinitionDataPageService: RxNamedListDefinitionDataPageService, associationDefinitionDataPageService: RxAssociationDefinitionDataPageService, rxChatbotDefinitionDataPageService: RxChatbotDefinitionDataPageService);
    getBundleRecordDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]>;
    getBundleDataRecordDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]>;
    getBundleStandardDataRecordDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]>;
    getAllRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]>;
    getAllDataRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]>;
    getAllStandardDataRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]>;
    getRxRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]>;
    getRxDataRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]>;
    getRxStandardDataRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]>;
    getAllRegularRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]>;
    getAllRegularDataRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]>;
    getRxRegularRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]>;
    getRxRegularDataRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]>;
    getBundleRegularRecordDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]>;
    getBundleRegularDataRecordDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]>;
    getAllPublicRegularDataRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]>;
    getRxPublicRegularDataRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]>;
    getBundlePublicRegularDataRecordDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]>;
    getAllInheritableRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]>;
    getBundleInheritableRecordDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]>;
    getAllProcessDefinitionDescriptors(): Observable<IDefinitionDescriptor[]>;
    getAllPublicProcessDefinitionDescriptors(): Observable<IDefinitionDescriptor[]>;
    getBundleProcessDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]>;
    getBundlePublicProcessDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]>;
    getAllViewDefinitionDescriptors(): Observable<IDefinitionDescriptor[]>;
    getBundleViewDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]>;
    getAllNamedListDefinitionDescriptors(): Observable<IDefinitionDescriptor[]>;
    getBundleNamedListDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]>;
    getAllAssociationDefinitionDescriptors(): Observable<IDefinitionDescriptor[]>;
    getBundleAssociationDefinitionDescriptors(bundleId: any): Observable<IDefinitionDescriptor[]>;
    getAllChatbotDefinitionDescriptors(): Observable<IDefinitionDescriptor[]>;
    getBundleChatbotDefinitionDescriptors(bundleId: any): Observable<IDefinitionDescriptor[]>;
    registerConsumer(): void;
    unRegisterConsumer(): void;
    clear(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RxDefinitionPickerCacheService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<RxDefinitionPickerCacheService>;
}
