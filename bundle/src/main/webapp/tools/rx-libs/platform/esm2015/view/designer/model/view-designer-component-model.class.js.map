{"version":3,"file":"view-designer-component-model.class.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/designer/model/view-designer-component-model.class.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,qCAAqC,EAAE,MAAM,4BAA4B,CAAC;AAGnF,MAAM,OAAO,0BAA0B;IAerC,YACY,QAAkB,EAClB,OAAgE;QADhE,aAAQ,GAAR,QAAQ,CAAU;QAClB,YAAO,GAAP,OAAO,CAAyD;IACzE,CAAC;IAZJ,IAAI,sBAAsB;QACxB,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE;YACjC,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,sBAAsB;gBAChF,qCAAqC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAChH;QAED,OAAO,IAAI,CAAC,uBAAuB,CAAC;IACtC,CAAC;IAOD,wBAAwB,CAAC,YAAoB;QAC3C,OAAO,sBAAsB,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,YAAY,GAAG,CAAC;IACpE,CAAC;CACF","sourcesContent":["import { IViewDesignerComponentModel } from '@helix/platform/view/api';\nimport { IExpressionConfigurator, IPlainObject } from '@helix/platform/shared/api';\nimport { Injector } from '@angular/core';\nimport { RxViewComponentExpressionConfigurator } from '../expression-configurator';\nimport { IViewComponentDesignSandbox } from '../public-interfaces/view-component-design-sandbox.interface';\n\nexport class ViewDesignerComponentModel<\n  TComponentProperties = IPlainObject,\n  TComponentDesignProperties = TComponentProperties\n> implements IViewDesignerComponentModel {\n  private _expressionConfigurator: IExpressionConfigurator;\n\n  get expressionConfigurator(): IExpressionConfigurator {\n    if (!this._expressionConfigurator) {\n      this._expressionConfigurator = new (this.sandbox.descriptor.expressionConfigurator ||\n        RxViewComponentExpressionConfigurator)(this.injector, this.sandbox.guid, this, this.sandbox.descriptor.type);\n    }\n\n    return this._expressionConfigurator;\n  }\n\n  constructor(\n    protected injector: Injector,\n    protected sandbox: IViewComponentDesignSandbox<TComponentDesignProperties>\n  ) {}\n\n  getExpressionForProperty(propertyPath: string): string {\n    return `\\${view.components.${this.sandbox.guid}.${propertyPath}}`;\n  }\n}\n"]}