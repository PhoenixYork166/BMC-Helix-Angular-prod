{"version":3,"file":"selection-field-options-editor.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/components/selection-field-options/selection-field-options-editor.component.ts","../../../../../../../libs/platform/shared/components/selection-field-options/selection-field-options-editor.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Injector, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActiveModalRef, DismissReasons } from '@bmc-ux/adapt-angular';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { RxGuidService } from '@helix/platform/utils';\nimport { TranslateService } from '@ngx-translate/core';\nimport { filter, find, forEach, lowerCase, map, max, some, trim } from 'lodash';\nimport { ISelectionOption } from './selection-field-options.interface';\n\n@Component({\n  selector: 'rx-selection-field-options-editor',\n  templateUrl: './selection-field-options-editor.component.html',\n  styleUrls: ['./selection-field-options-editor.component.scss']\n})\nexport class SelectionFieldOptionsEditorComponent extends RxModalClass {\n  @ViewChild('optionSelectionForm')\n  optionSelectionForm: NgForm;\n\n  isReadOnly = this.activeModalRef.getData().isReadOnly;\n\n  selectionOptions: ISelectionOption[] = map(\n    this.activeModalRef.getData().existingOptions,\n    (option: ISelectionOption) => ({\n      name: option.name,\n      id: option.id,\n      stringKey: option.stringKey,\n      isOpen: false\n    })\n  );\n\n  private duplicateOptionNameMsg = this.translateService.instant(\n    'com.bmc.arsys.rx.client.selection-field-options-editor.duplicate-option-name.error'\n  );\n\n  private duplicateOptionIdMsg = this.translateService.instant(\n    'com.bmc.arsys.rx.client.designer.validation.duplicate-value.message'\n  );\n\n  constructor(\n    private activeModalRef: ActiveModalRef,\n    protected injector: Injector,\n    private rxGuidService: RxGuidService,\n    private translateService: TranslateService\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  isDirty(): boolean {\n    return this.optionSelectionForm?.dirty;\n  }\n\n  saveOptions(): void {\n    const optionNamesById = {};\n    const optionKeysById = {};\n\n    forEach(this.selectionOptions, (option: ISelectionOption) => {\n      optionNamesById[option.id] = option.name;\n    });\n\n    forEach(this.selectionOptions, (option: ISelectionOption) => {\n      optionKeysById[option.id] = option.stringKey;\n    });\n\n    this.activeModalRef.close({\n      optionNamesById,\n      optionLabelsById: optionKeysById\n    });\n  }\n\n  addOption(): void {\n    let name;\n    let counter = 0;\n    let existingOption;\n\n    const newOptionLabel = this.translateService.instant(\n      'com.bmc.arsys.rx.client.selection-field-options-editor.new-option.label'\n    );\n\n    do {\n      name = counter === 0 ? newOptionLabel : `${newOptionLabel} ` + counter;\n      counter++;\n      existingOption = find(this.selectionOptions, { name });\n    } while (existingOption);\n\n    this.selectionOptions.push({\n      name,\n      id: this.selectionOptions.length\n        ? max(this.selectionOptions.map((option: ISelectionOption) => option.id)) + 10\n        : 0,\n      stringKey: this.rxGuidService.generate(),\n      isOpen: true\n    });\n\n    this.optionSelectionForm.form.markAsDirty();\n  }\n\n  removeOption(index: number): void {\n    this.selectionOptions.splice(index, 1);\n    this.optionSelectionForm.form.markAsDirty();\n    this.validateIdAndNames('name');\n    this.validateIdAndNames('id');\n  }\n\n  expandAll(): void {\n    this.selectionOptions.forEach((option: ISelectionOption) => (option.isOpen = true));\n  }\n\n  collapseAll(): void {\n    this.selectionOptions.forEach((option: ISelectionOption) => (option.isOpen = false));\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  private getDuplicateOptions(type: 'name' | 'id') {\n    return filter(\n      this.selectionOptions,\n      (option: ISelectionOption) =>\n        filter(this.selectionOptions, (item: ISelectionOption) =>\n          type === 'name' ? lowerCase(item.name) === trim(lowerCase(option.name)) : item.id === option.id\n        ).length > 1\n    );\n  }\n\n  validateIdAndNames(type: 'name' | 'id'): void {\n    if (this.optionSelectionForm.invalid) {\n      return;\n    }\n\n    if (type === 'name') {\n      forEach(this.selectionOptions, (option: ISelectionOption) => {\n        option.invalidNameError = null;\n      });\n\n      this.getDuplicateOptions(type).forEach((option) => {\n        option.invalidNameError = this.duplicateOptionNameMsg;\n      });\n    }\n\n    if (type === 'id') {\n      forEach(this.selectionOptions, (option: ISelectionOption) => {\n        option.invalidIdError = null;\n      });\n\n      this.getDuplicateOptions(type).forEach((option) => {\n        option.invalidIdError = this.duplicateOptionIdMsg;\n      });\n    }\n  }\n\n  isSaveButtonDisabled(): boolean {\n    return (\n      !this.optionSelectionForm?.dirty ||\n      this.optionSelectionForm?.invalid ||\n      some(this.selectionOptions, (option: ISelectionOption) => option.invalidNameError || option.invalidIdError)\n    );\n  }\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n}\n","<div class=\"designer-modal-body modal-body d-flex mh-100 flex-column\">\n  <div class=\"text-right btn-group\">\n    <button\n      type=\"button\"\n      adapt-button\n      btn-type=\"tertiary\"\n      rx-id=\"add-option-button\"\n      class=\"d-icon-left-plus_circle float-left px-0\"\n      (click)=\"addOption()\"\n      *ngIf=\"!isReadOnly\"\n    >\n      {{ 'com.bmc.arsys.rx.client.selection-field-options-editor.add-option.label' | translate }}\n    </button>\n\n    <button type=\"button\" adapt-button btn-type=\"tertiary\" rx-id=\"expand-button\" (click)=\"expandAll()\" class=\"ml-auto\">\n      {{ 'com.bmc.arsys.rx.client.common.expand-all.label' | translate }}\n    </button>\n\n    <button type=\"button\" adapt-button btn-type=\"tertiary\" rx-id=\"collapse-button\" class=\"pr-0\" (click)=\"collapseAll()\">\n      {{ 'com.bmc.arsys.rx.client.common.collapse-all.label' | translate }}\n    </button>\n  </div>\n\n  <div class=\"designer-modal-accordion-wrapper\">\n    <form #optionSelectionForm=\"ngForm\">\n      <adapt-accordion [multiselect]=\"true\" class=\"d-block\">\n        <div\n          *ngFor=\"let option of selectionOptions; let $index = index; trackBy: trackByIndex\"\n          class=\"designer-modal-accordion-content\"\n        >\n          <adapt-accordion-tab\n            class=\"d-block\"\n            [isOpen]=\"option.isOpen\"\n            (open)=\"option.isOpen = true\"\n            (close)=\"option.isOpen = false\"\n          >\n            <div class=\"card-title-text w-100\">\n              <div class=\"designer-modal-card-title-content\">\n                <div class=\"left-header-block pl-0\">\n                  <div class=\"rx-ellipsis\" [title]=\"option.name\" rx-id=\"card-title\">\n                    {{ option.name }}\n                  </div>\n                </div>\n\n                <div class=\"right-header-block\">\n                  <button\n                    class=\"d-icon-left-cross_adapt py-0 pr-3 btn btn-sm\"\n                    adapt-button\n                    size=\"small\"\n                    type=\"button\"\n                    (click)=\"$event.stopPropagation(); removeOption($index)\"\n                    *ngIf=\"!isReadOnly\"\n                  >\n                    {{ 'com.bmc.arsys.rx.client.common.remove.label' | translate }}\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"d-flex\">\n              <div class=\"w-50 pr-2\">\n                <adapt-rx-textfield\n                  maxlength=\"254\"\n                  rx-id=\"option-name\"\n                  label=\"{{ 'com.bmc.arsys.rx.client.common.name.label' | translate }}\"\n                  required=\"true\"\n                  [(ngModel)]=\"option.name\"\n                  [autofocus]=\"true\"\n                  name=\"{{ 'name' + $index }}\"\n                  (ngModelChange)=\"validateIdAndNames('name')\"\n                  [disabled]=\"isReadOnly\"\n                >\n                </adapt-rx-textfield>\n\n                <adapt-alert\n                  *ngIf=\"option.invalidNameError\"\n                  [config]=\"{\n                    variant: 'danger',\n                    dismissible: false,\n                    type: 'inline',\n                    content: option.invalidNameError\n                  }\"\n                ></adapt-alert>\n              </div>\n\n              <div class=\"w-50 pl-2\">\n                <adapt-rx-counter\n                  rx-id=\"option-name\"\n                  label=\"{{ 'com.bmc.arsys.rx.client.selection-field-options-editor.integer-value.label' | translate }}\"\n                  required=\"true\"\n                  [(ngModel)]=\"option.id\"\n                  name=\"{{ 'integerValue' + $index }}\"\n                  (ngModelChange)=\"validateIdAndNames('id')\"\n                  [min]=\"0\"\n                  [max]=\"2147483647\"\n                  [adaptMax]=\"2147483647\"\n                  [adaptMin]=\"0\"\n                  [step]=\"1\"\n                  adaptIntegerNumber\n                  [disabled]=\"isReadOnly\"\n                >\n                </adapt-rx-counter>\n\n                <adapt-alert\n                  *ngIf=\"option.invalidIdError\"\n                  [config]=\"{\n                    variant: 'danger',\n                    dismissible: false,\n                    type: 'inline',\n                    content: option.invalidIdError\n                  }\"\n                ></adapt-alert>\n              </div>\n            </div>\n          </adapt-accordion-tab>\n        </div>\n      </adapt-accordion>\n    </form>\n  </div>\n</div>\n\n<div class=\"modal-footer\">\n  <div *ngIf=\"!isReadOnly\">\n    <button\n      type=\"button\"\n      adapt-button\n      btn-type=\"primary\"\n      rx-id=\"save-button\"\n      (click)=\"saveOptions()\"\n      [disabled]=\"isSaveButtonDisabled()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n\n    <button type=\"button\" adapt-button btn-type=\"secondary\" rx-id=\"cancel-button\" (click)=\"cancel()\">\n      {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n    </button>\n  </div>\n\n  <div *ngIf=\"isReadOnly\">\n    <button type=\"button\" adapt-button btn-type=\"secondary\" rx-id=\"close-button\" (click)=\"cancel()\">\n      {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n    </button>\n  </div>\n</div>\n"]}