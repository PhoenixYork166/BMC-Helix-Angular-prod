{"version":3,"file":"id.service.js","sourceRoot":"","sources":["../../../../../../libs/platform/utils/id/id.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAC;;;AAKrD,MAAM,OAAO,WAAW;IACtB,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAExC,WAAM,GAAG,KAAK,CAAC;IAF4B,CAAC;IAIpD,GAAG,CAAC,MAAc;QAChB,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IACjH,CAAC;IAED,OAAO,CAAC,EAAU;QAChB,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAClD,CAAC;;wGAfU,WAAW;4GAAX,WAAW,cAFV,MAAM;2FAEP,WAAW;kBAHvB,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { RxGuidService } from '../guid/guid.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxIdService {\n  constructor(private rxGuidService: RxGuidService) {}\n\n  private prefix = 'rx-';\n\n  get(cellId: string): string {\n    return cellId ? (cellId.slice(0, this.prefix.length) === this.prefix ? cellId : this.prefix + cellId) : cellId;\n  }\n\n  getBase(id: string): string {\n    return id.slice(this.prefix.length);\n  }\n\n  generate(): string {\n    return this.rxGuidService.generate(this.prefix);\n  }\n}\n"]}