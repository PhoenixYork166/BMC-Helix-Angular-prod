{"version":3,"file":"custom-data-source-provider-picker.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/admin/components/data-source-connections/custom-data-source-provider-picker/custom-data-source-provider-picker.component.ts","../../../../../../../../libs/platform/admin/components/data-source-connections/custom-data-source-provider-picker/custom-data-source-provider-picker.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AACnF,OAAO,EAAE,iBAAiB,EAAE,MAAM,gBAAgB,CAAC;AACnD,OAAO,EAAE,sBAAsB,EAAE,MAAM,uBAAuB,CAAC;AAC/D,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAClE,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;;;;;;AAevD,MAAM,OAAO,yCAA0C,SAAQ,aAAqB;IAalF,YAAoB,gBAAkC,EAAU,QAAmB;QACjF,KAAK,EAAE,CAAC;QADU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAHnF,gBAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,6CAA6C,CAAC,CAAC;IAK3F,CAAC;IAED,gBAAgB;QACd,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QAEhG,IAAI,CAAC,aAAa,GAAG,cAAc,CAAC,WAAW,GAAG,CAAC,CAAC;IACtD,CAAC;IAED,cAAc,CAAC,YAAoB;QACjC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC;IAC5B,CAAC;;sIA1BU,yCAAyC;0HAAzC,yCAAyC,gGARzC;QACT;YACE,OAAO,EAAE,iBAAiB;YAC1B,WAAW,EAAE,yCAAyC;YACtD,KAAK,EAAE,IAAI;SACZ;KACF,4RCjBH,iuDAmDA;2FDhCa,yCAAyC;kBAZrD,SAAS;mBAAC;oBACT,QAAQ,EAAE,uCAAuC;oBACjD,WAAW,EAAE,qDAAqD;oBAClE,SAAS,EAAE,CAAC,qDAAqD,CAAC;oBAClE,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,iBAAiB;4BAC1B,WAAW,2CAA2C;4BACtD,KAAK,EAAE,IAAI;yBACZ;qBACF;iBACF;+HAGC,OAAO;sBADN,KAAK;gBAIN,cAAc;sBADb,SAAS;uBAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;gBAI7C,QAAQ;sBADP,SAAS;uBAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE","sourcesContent":["import { Component, ElementRef, Input, Renderer2, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AdaptDropdownDirective } from '@bmc-ux/adapt-angular';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ICustomDataSourceProviderPickerComponentOptions } from './custom-data-source-provider-picker-component.types';\n\n@Component({\n  selector: 'rx-custom-data-source-provider-picker',\n  templateUrl: './custom-data-source-provider-picker.component.html',\n  styleUrls: ['./custom-data-source-provider-picker.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RxCustomDataSourceProviderPickerComponent,\n      multi: true\n    }\n  ]\n})\nexport class RxCustomDataSourceProviderPickerComponent extends ValueAccessor<string> {\n  @Input()\n  options: ICustomDataSourceProviderPickerComponentOptions;\n\n  @ViewChild('dropdownButton', { static: true })\n  dropdownButton: ElementRef;\n\n  @ViewChild('providerPicker', { static: true })\n  dropdown: AdaptDropdownDirective;\n\n  defaultText = this.translateService.instant('com.bmc.arsys.rx.client.common.select.label');\n  dropdownWidth: number;\n\n  constructor(private translateService: TranslateService, private renderer: Renderer2) {\n    super();\n  }\n\n  setDropdownWidth(): void {\n    const dropdownButton = this.renderer.selectRootElement(this.dropdownButton.nativeElement, true);\n\n    this.dropdownWidth = dropdownButton.clientWidth + 2;\n  }\n\n  selectProvider(providerName: string): void {\n    this.dropdown.close();\n    this.value = providerName;\n  }\n}\n","<div class=\"d-flex\">\n  <adapt-rx-control-label\n    *ngIf=\"options.label\"\n    [label]=\"options.label | translate\"\n    [showRequiredLabel]=\"options.required\"\n  ></adapt-rx-control-label>\n</div>\n\n<div class=\"dropdown\" adaptDropdown [autoClose]=\"'outside'\" [autoFocusFirst]=\"false\" #providerPicker=\"adaptDropdown\">\n  <button\n    rx-id=\"toggle-button\"\n    #dropdownButton\n    class=\"btn btn-secondary\"\n    (click)=\"setDropdownWidth()\"\n    adaptDropdownToggle\n    type=\"button\"\n  >\n    <span class=\"rx-selected-item rx-ellipsis\">\n      {{ (value | rxDefinitionNamePipe) || defaultText }}\n    </span>\n  </button>\n\n  <div class=\"dropdown-menu p-0\" [style.width.px]=\"dropdownWidth\" adaptDropdownMenu>\n    <ul class=\"providers\" *ngIf=\"options.providersTree.length\">\n      <li\n        class=\"provider rx-ellipsis\"\n        *ngFor=\"let providersTreeNode of options.providersTree\"\n        (click)=\"providersTreeNode.isExpanded = !providersTreeNode.isExpanded\"\n      >\n        <span\n          rx-id=\"expand-button\"\n          class=\"expand-arrow d-icon-angle_right\"\n          [class.open]=\"providersTreeNode.isExpanded\"\n        ></span>\n        <span> {{ providersTreeNode.label }} </span>\n\n        <div *ngIf=\"providersTreeNode.isExpanded\">\n          <button\n            class=\"dropdown-item rx-ellipsis\"\n            type=\"button\"\n            *ngFor=\"let provider of providersTreeNode.providers\"\n            (click)=\"$event.stopPropagation(); selectProvider(provider)\"\n            [class.active]=\"value === provider\"\n          >\n            <span>{{ provider | rxDefinitionNamePipe }}</span>\n          </button>\n        </div>\n      </li>\n    </ul>\n  </div>\n</div>\n"]}