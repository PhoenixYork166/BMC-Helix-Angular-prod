{"version":3,"file":"date-time-adapter.class.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/field-components/date-time-field/runtime/date-time-adapter.class.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,sBAAsB,EAAoB,MAAM,uBAAuB,CAAC;AACjF,OAAO,MAAM,MAAM,YAAY,CAAC;;AAGhC,MAAM,OAAO,eAAgB,SAAQ,sBAA8B;IACjE,SAAS,CAAC,UAAkB;QAC1B,IAAI,YAAY,GAAqB,IAAI,CAAC;QAC1C,MAAM,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;QAEhC,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;YAC1B,YAAY,GAAG;gBACb,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;gBACjB,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE;gBACnB,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;gBACjB,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE;gBACnB,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE;gBACvB,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE;aACxB,CAAC;SACH;QAED,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,OAAO,CAAC,IAAsB;QAC5B,OAAO,IAAI;YACT,CAAC,CAAC,IAAI,CAAC,UAAU;gBACf,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;gBAC7B,CAAC,CAAC,MAAM,CAAC;oBACL,IAAI,CAAC,IAAI,IAAI,CAAC;oBACd,IAAI,CAAC,KAAK,IAAI,CAAC;oBACf,IAAI,CAAC,IAAI,IAAI,CAAC;oBACd,IAAI,CAAC,KAAK,IAAI,CAAC;oBACf,IAAI,CAAC,OAAO,IAAI,CAAC;oBACjB,IAAI,CAAC,OAAO,IAAI,CAAC;iBAClB,CAAC,CAAC,WAAW,EAAE;YACpB,CAAC,CAAC,IAAI,CAAC;IACX,CAAC;;4GAhCU,eAAe;gHAAf,eAAe;2FAAf,eAAe;kBAD3B,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AdaptRxDatetimeAdapter, RxDatetimeStruct } from '@bmc-ux/adapt-angular';\nimport moment from 'moment-es6';\n\n@Injectable()\nexport class DateTimeAdapter extends AdaptRxDatetimeAdapter<string> {\n  fromModel(dateString: string): RxDatetimeStruct {\n    let adaptedValue: RxDatetimeStruct = null;\n    const date = moment(dateString);\n\n    if (date && date.isValid()) {\n      adaptedValue = {\n        year: date.year(),\n        month: date.month(),\n        date: date.date(),\n        hours: date.hours(),\n        minutes: date.minutes(),\n        seconds: date.seconds()\n      };\n    }\n\n    return adaptedValue;\n  }\n\n  toModel(date: RxDatetimeStruct): string {\n    return date\n      ? date.parseError\n        ? moment.invalid().toString()\n        : moment([\n            date.year || 0,\n            date.month || 0,\n            date.date || 0,\n            date.hours || 0,\n            date.minutes || 0,\n            date.seconds || 0\n          ]).toISOString()\n      : null;\n  }\n}\n"]}