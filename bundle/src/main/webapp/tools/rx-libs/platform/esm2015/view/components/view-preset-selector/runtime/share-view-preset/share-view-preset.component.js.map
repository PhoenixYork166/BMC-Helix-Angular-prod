{"version":3,"file":"share-view-preset.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/view-preset-selector/runtime/share-view-preset/share-view-preset.component.ts","../../../../../../../../../libs/platform/view/components/view-preset-selector/runtime/share-view-preset/share-view-preset.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Injector, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { ActiveModalRef, DismissReasons } from '@bmc-ux/adapt-angular';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RuntimeViewModelApi } from '@helix/platform/view/runtime';\nimport {\n  IShareViewPresetModalData,\n  IShareViewPresetUserPayload,\n  ITagUserAutocompleteValue\n} from './share-view-preset.types';\nimport { RxCurrentUserService, RxNotificationService } from '@helix/platform/shared/api';\nimport { RxShareViewPresetService } from './share-view-preset.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'rx-share-view-preset',\n  templateUrl: './share-view-preset.component.html',\n  styleUrls: ['./share-view-preset.component.scss']\n})\nexport class ShareViewPresetComponent extends RxModalClass implements OnInit, OnDestroy {\n  private maxRecipients = 100;\n\n  strings = {\n    users: {\n      label: this.translateService.instant(\n        'com.bmc.arsys.rx.client.view-components.view-preset-selector.share-view-preset.users-control.label'\n      ),\n      placeholder: this.translateService.instant(\n        'com.bmc.arsys.rx.client.view-components.view-preset-selector.share-view-preset.users-control.placeholder'\n      )\n    },\n    addButton: this.translateService.instant('com.bmc.arsys.rx.client.common.add.label'),\n    notifyRecipients: this.translateService.instant(\n      'com.bmc.arsys.rx.client.view-components.view-preset-selector.share-view-preset.notify-recipients.label'\n    ),\n    recipients: this.translateService.instant(\n      'com.bmc.arsys.rx.client.view-components.view-preset-selector.share-view-preset.recipients.label'\n    ),\n    savedNotification: {\n      title: this.translateService.instant(\n        'com.bmc.arsys.rx.client.view-components.view-preset-selector.share-view-preset.saved-notification.title'\n      ),\n      message: this.translateService.instant(\n        'com.bmc.arsys.rx.client.view-components.view-preset-selector.share-view-preset.saved-notification.message'\n      )\n    },\n    removedNotification: {\n      title: this.translateService.instant(\n        'com.bmc.arsys.rx.client.view-components.view-preset-selector.share-view-preset.removed-notification.title'\n      ),\n      message: this.translateService.instant(\n        'com.bmc.arsys.rx.client.view-components.view-preset-selector.share-view-preset.removed-notification.message'\n      )\n    },\n    maxRecipientsWarning: this.translateService.instant(\n      'com.bmc.arsys.rx.client.view-components.view-preset-selector.share-view-preset.max-users-warning.message',\n      {\n        maxUserCount: this.maxRecipients\n      }\n    )\n  };\n\n  form = this.formBuilder.group({\n    users: this.formBuilder.control([]),\n    notifyRecipients: this.formBuilder.control(false)\n  });\n\n  modalData: IShareViewPresetModalData = this.activeModalRef.getData();\n  runtimeViewModelApi: RuntimeViewModelApi = this.modalData.runtimeViewModelApi;\n  selectedUsers: IShareViewPresetUserPayload[] = [];\n\n  get isRecipientsLimitReached(): boolean {\n    return this.form.get('users').value.length + this.selectedUsers.length > this.maxRecipients;\n  }\n\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n  private currentUserLoginName = this.rxCurrentUserService.getName();\n  private sharedViewPresetInstanceGuid: string;\n  private isSelectedUsersChanged = false;\n\n  search: (text$: Observable<string>) => Observable<ITagUserAutocompleteValue[]> = (text$: Observable<string>) => {\n    return this.rxShareViewPresetService.getAutocompleteSearch(text$).pipe(\n      map((tags) => {\n        const selectedUsersLoginIDs = this.selectedUsers.map((user) => user.loginId);\n        const tagsInputLoginIDs = this.form.get('users').value.map(({ data }) => data.loginId);\n\n        // exclude current user and users that have already been added\n        return tags.filter(\n          (item) =>\n            item.data.loginId !== this.currentUserLoginName &&\n            !selectedUsersLoginIDs.includes(item.data.loginId) &&\n            !tagsInputLoginIDs.includes(item.data.loginId)\n        );\n      })\n    );\n  };\n\n  constructor(\n    private activeModalRef: ActiveModalRef,\n    protected injector: Injector,\n    private formBuilder: FormBuilder,\n    private translateService: TranslateService,\n    private rxShareViewPresetService: RxShareViewPresetService,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxNotificationService: RxNotificationService\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.loadExistingSharedViewPresetUsers();\n  }\n\n  private loadExistingSharedViewPresetUsers(): void {\n    if (this.modalData.currentViewPreset.userSharedViewPresetGuid) {\n      this.sharedViewPresetInstanceGuid = this.modalData.currentViewPreset.userSharedViewPresetGuid;\n\n      this.rxShareViewPresetService.getSharedViewPresetUsers(this.sharedViewPresetInstanceGuid).subscribe((users) => {\n        this.selectedUsers = users;\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  save(): void {\n    if (this.selectedUsers.length) {\n      this.saveViewPreset();\n    } else {\n      this.removeViewPreset();\n    }\n  }\n\n  private removeViewPreset(): void {\n    this.rxShareViewPresetService.deleteSharedViewPreset(this.sharedViewPresetInstanceGuid).subscribe(() => {\n      this.rxNotificationService.addSuccessMessage(\n        this.strings.removedNotification.message,\n        this.strings.removedNotification.title\n      );\n\n      this.activeModalRef.close(null);\n    });\n  }\n\n  private saveViewPreset(): void {\n    this.rxShareViewPresetService\n      .saveSharedViewPreset(\n        {\n          runtimeViewModelApi: this.runtimeViewModelApi,\n          currentViewPreset: this.modalData.currentViewPreset,\n          presetSelectorGuid: this.modalData.presetSelectorGuid,\n          sharedUsers: this.selectedUsers\n        },\n        this.sharedViewPresetInstanceGuid\n      )\n      .subscribe((sharedViewPresetInstanceGuid) => {\n        this.rxNotificationService.addSuccessMessage(\n          this.strings.savedNotification.message,\n          this.strings.savedNotification.title\n        );\n\n        this.activeModalRef.close(sharedViewPresetInstanceGuid);\n      });\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  onAdd(): void {\n    const usersToAdd = this.form.get('users').value.map((tag: ITagUserAutocompleteValue) => ({\n      ...tag.data\n    }));\n\n    this.selectedUsers = this.selectedUsers.concat(usersToAdd);\n    this.form.get('users').setValue([]);\n    this.isSelectedUsersChanged = true;\n  }\n\n  removeSelectedUsers(selectedUserLoginIds: string[]): void {\n    this.selectedUsers = this.selectedUsers.filter((user) => !selectedUserLoginIds.includes(user.loginId));\n    this.isSelectedUsersChanged = true;\n    this.markAsDirty();\n  }\n\n  // saving is allowed when changing users of existing preset\n  // or creating new preset with at least one user selected\n  isSaveButtonDisabled(): boolean {\n    return !(\n      (this.sharedViewPresetInstanceGuid && this.isSelectedUsersChanged) ||\n      (!this.sharedViewPresetInstanceGuid && this.selectedUsers.length > 0)\n    );\n  }\n}\n","<div class=\"modal-body\">\n  <form [formGroup]=\"form\">\n    <div class=\"row row-no-gutters\">\n      <div class=\"col\">\n        <adapt-tag-field\n          formControlName=\"users\"\n          rx-id=\"users-input\"\n          [label]=\"strings.users.label\"\n          [placeholder]=\"strings.users.placeholder\"\n          [replaceModelOnWrite]=\"true\"\n          [suppressManual]=\"true\"\n          [search]=\"search\"\n          [selectItemTemplate]=\"selectItemTemplate\"\n          (ngModelChange)=\"markAsDirty()\"\n        >\n        </adapt-tag-field>\n        <div class=\"warning mb-3\" *ngIf=\"isRecipientsLimitReached\">\n          <adapt-icon name=\"exclamation_triangle\" class=\"text-warning\"></adapt-icon>\n          {{ strings.maxRecipientsWarning }}\n        </div>\n      </div>\n      <div class=\"col-auto pl-0\">\n        <button\n          class=\"add-button\"\n          adapt-button\n          type=\"button\"\n          btn-type=\"secondary\"\n          rx-id=\"add-button\"\n          [disabled]=\"!form.get('users').value.length || isRecipientsLimitReached\"\n          (click)=\"onAdd()\"\n        >\n          <span>{{ strings.addButton }}</span>\n        </button>\n      </div>\n    </div>\n  </form>\n\n  <adapt-rx-control-label [label]=\"strings.recipients\"></adapt-rx-control-label>\n\n  <rx-share-view-preset-users-grid\n    [users]=\"selectedUsers\"\n    (remove)=\"removeSelectedUsers($event)\"\n  ></rx-share-view-preset-users-grid>\n</div>\n\n<div class=\"modal-footer\">\n  <button\n    adapt-button\n    btn-type=\"primary\"\n    type=\"button\"\n    rx-id=\"save-button\"\n    [disabled]=\"isSaveButtonDisabled()\"\n    (click)=\"save()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n  <button adapt-button btn-type=\"secondary\" type=\"button\" rx-id=\"cancel-button\" (click)=\"cancel()\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n\n<ng-template #selectItemTemplate let-result=\"result\" let-term=\"term\">\n  <strong>{{ result.text }}</strong>\n  <div>{{ result.data.emailAddress }}</div>\n</ng-template>\n"]}