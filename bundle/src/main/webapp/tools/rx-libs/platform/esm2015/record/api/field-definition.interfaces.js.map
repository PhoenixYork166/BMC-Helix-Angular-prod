{"version":3,"file":"field-definition.interfaces.js","sourceRoot":"","sources":["../../../../../../libs/platform/record/api/field-definition.interfaces.ts"],"names":[],"mappings":"","sourcesContent":["import { IFieldDefinitionPermission } from './field-definition-permission.interface';\nimport { IDefinition, IPlainObject } from '@helix/platform/shared/api';\nimport { IFieldDefinitionOption } from './field-definition-option.interface';\nimport { RecordFieldOption } from './record-definition.constant';\nimport BigNumber from 'bignumber.js';\n\nexport interface IFieldDefinition extends IDefinition {\n  allowPermissionsEdit?: boolean;\n  allowOtherPropertiesOverlay?: boolean;\n  allowPermissionsOverlay?: boolean;\n  anyUserAllowedToSubmit?: boolean;\n  auditOption?: 'AUDIT' | 'COPY' | 'AUDIT_AND_COPY';\n  defaultValue?: string;\n  defaultValueByLocale?: IPlainObject;\n  explicitPermissions?: IFieldDefinitionPermission[];\n  fieldMapping?: any;\n  fieldOption?: RecordFieldOption;\n  fieldTypeName?: string;\n  id: number | string;\n  customId?: number;\n  isInherited?: boolean;\n  minValue?: number | BigNumber;\n  maxValue?: number | BigNumber;\n  maxLength?: number;\n  maxSize?: number;\n  precision?: number;\n  namedListDefinition?: string;\n  permissions?: IFieldDefinitionPermission[];\n  resourceType?: string;\n  searchDefinition?: ISearchDefinition;\n  shouldPersistHashed?: boolean;\n  shouldPersistEncrypted?: boolean;\n  optionsById?: { [id: string]: IFieldDefinitionOption };\n  optionNamesById?: { [id: string]: string };\n  optionLabelsById?: { [id: string]: string };\n  pattern?: string;\n}\n\nexport interface IFieldDefinitionsById {\n  [id: string]: IFieldDefinition;\n}\n\nexport interface ISearchDefinition {\n  enableFTSSearch: boolean;\n  enableCognitiveSearch: boolean;\n  enableLiteralSearch: boolean;\n  searchCategoryName: boolean;\n  stripTagsForSearch: boolean;\n}\n"]}