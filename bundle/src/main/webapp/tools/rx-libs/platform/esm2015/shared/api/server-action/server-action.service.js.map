{"version":3,"file":"server-action.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/api/server-action/server-action.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { RxStringService } from '@helix/platform/utils';\n\nimport { IPlainObject } from '../common-types/plain-object.interface';\nimport { RxDesignerCacheService } from '../caching/designer-cache.service';\nimport { IActionType } from '../action-type/action-type.interfaces';\nimport { IServerActionModel } from '../designer/designer.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class RxServerActionService {\n  private rxDesignerCacheService: RxDesignerCacheService = this.injector.get(RxDesignerCacheService);\n  protected rxStringService: RxStringService = this.injector.get(RxStringService);\n  protected translateService: TranslateService = this.injector.get(TranslateService);\n\n  protected constructor(protected injector: Injector) {}\n\n  protected abstract getModelFromDefinition(definition: any): IServerActionModel;\n\n  protected getActionTypeByName(actionTypeName: string): IActionType {\n    return this.rxDesignerCacheService.getActionTypeByNameSync(actionTypeName);\n  }\n\n  // TODO-VS: update types\n  protected getClassConfig(options: IPlainObject): IPlainObject {\n    const model = this.getModelFromDefinition({\n      actionTypeName: options.actionTypeName\n    } as any);\n\n    return {\n      content: model.name,\n      elementModel: model,\n      icon: model.isDeprecated ? 'info' : null,\n      position: options.position,\n      type: model.type\n    };\n  }\n\n  // TODO-VS: update availableCells type\n  protected validateInputMap(model: IServerActionModel, availableCells: any[]): Observable<IValidationIssue[]> {\n    return of([]);\n  }\n\n  // TODO-VS: update availableCells type\n  protected validateServerAction(model: IServerActionModel, availableCells: any[]): Observable<IValidationIssue[]> {\n    return this.validateInputMap(model, availableCells).pipe(\n      map((inputMapValidationIssues) => {\n        const validationIssues: IValidationIssue[] = [...inputMapValidationIssues];\n\n        if (this.rxStringService.isEmptySafe(model.name)) {\n          validationIssues.push({\n            type: ValidationIssueType.Error,\n            description: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n              {\n                propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.label.label')\n              }\n            ),\n            data: {\n              guid: model.guid,\n              inspectorTabIndex: 1\n            }\n          });\n        }\n\n        model.outputMap.forEach((output, index) => {\n          if (this.rxStringService.isEmptySafe(output.assignTarget)) {\n            validationIssues.push({\n              type: ValidationIssueType.Error,\n              description: this.translateService.instant(\n                'com.bmc.arsys.rx.client.designer.validation.output-map.message',\n                {\n                  errorMessage: this.translateService.instant(\n                    'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n                    {\n                      propertyName: this.translateService.instant(\n                        'com.bmc.arsys.rx.client.designer.assignment-expression.target.label'\n                      )\n                    }\n                  )\n                }\n              ),\n              data: {\n                fieldName: 'assignTarget',\n                guid: model.guid,\n                index,\n                inspectorTabIndex: 1,\n                propertyName: 'outputMap'\n              }\n            });\n          }\n\n          if (this.rxStringService.isEmptySafe(output.expression)) {\n            validationIssues.push({\n              type: ValidationIssueType.Error,\n              description: this.translateService.instant(\n                'com.bmc.arsys.rx.client.designer.validation.output-map.message',\n                {\n                  errorMessage: this.translateService.instant(\n                    'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n                    {\n                      propertyName: this.translateService.instant(\n                        'com.bmc.arsys.rx.client.designer.assignment-expression.source.label'\n                      )\n                    }\n                  )\n                }\n              ),\n              data: {\n                fieldName: 'expression',\n                guid: model.guid,\n                index,\n                inspectorTabIndex: 1,\n                propertyName: 'outputMap'\n              }\n            });\n          }\n        });\n\n        return validationIssues;\n      })\n    );\n  }\n}\n"]}