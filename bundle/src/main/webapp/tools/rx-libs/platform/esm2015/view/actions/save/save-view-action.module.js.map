{"version":3,"file":"save-view-action.module.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/actions/save/save-view-action.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,MAAM,4BAA4B,CAAC;AACrE,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACzC,OAAO,EAAE,2BAA2B,EAAE,yBAAyB,EAAE,MAAM,0BAA0B,CAAC;AAClG,OAAO,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAC5D,OAAO,EAAE,8BAA8B,EAAE,0BAA0B,EAAE,MAAM,mCAAmC,CAAC;;;;AAG/G,MAAM,OAAO,oBAAoB;IAC/B,YACU,2BAAwD,EACxD,uBAAgD;QADhD,gCAA2B,GAA3B,2BAA2B,CAA6B;QACxD,4BAAuB,GAAvB,uBAAuB,CAAyB;QAExD,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC;YACxC,IAAI,EAAE,cAAc;YACpB,KAAK,EAAE,MAAM;YACb,QAAQ,EAAE,cAAc,CAAC,gBAAgB;YACzC,OAAO,EAAE,IAAI,CAAC,uBAAuB;YACrC,UAAU,EAAE;gBACV;oBACE,IAAI,EAAE,WAAW;oBACjB,KAAK,EAAE,gBAAgB;oBACvB,MAAM,EAAE,8BAA8B;oBACtC,UAAU,EAAE,IAAI;oBAChB,0BAA0B,EAAE,IAAI;iBACjC;gBACD;oBACE,IAAI,EAAE,gBAAgB;oBACtB,KAAK,EAAE,kBAAkB;oBACzB,MAAM,EAAE,0BAA0B;oBAClC,IAAI,EAAE,yBAAyB,CAAC,OAAO;oBACvC,UAAU,EAAE,yBAAyB,CAAC,OAAO;iBAC9C;gBACD;oBACE,IAAI,EAAE,SAAS;oBACf,0BAA0B,EAAE,IAAI;oBAChC,YAAY,EAAE,aAAa;iBAC5B;aACF;SACF,CAAC,CAAC;IACL,CAAC;;iHAhCU,oBAAoB;kHAApB,oBAAoB;kHAApB,oBAAoB;2FAApB,oBAAoB;kBADhC,QAAQ","sourcesContent":["import { RxSaveViewActionService } from './save-view-action.service';\nimport { NgModule } from '@angular/core';\nimport { RxViewActionRegistryService, ViewComponentPropertyType } from '@helix/platform/view/api';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { ExpressionFormControlComponent, SwitchFormControlComponent } from '@helix/platform/shared/components';\n\n@NgModule()\nexport class SaveViewActionModule {\n  constructor(\n    private rxViewActionRegistryService: RxViewActionRegistryService,\n    private rxSaveViewActionService: RxSaveViewActionService\n  ) {\n    this.rxViewActionRegistryService.register({\n      name: 'rxSaveAction',\n      label: 'Save',\n      bundleId: RX_APPLICATION.platformBundleId,\n      service: this.rxSaveViewActionService,\n      parameters: [\n        {\n          name: 'targetApi',\n          label: 'View/Component',\n          editor: ExpressionFormControlComponent,\n          isRequired: true,\n          enableExpressionEvaluation: true\n        },\n        {\n          name: 'closeAfterSave',\n          label: 'Close after save',\n          editor: SwitchFormControlComponent,\n          type: ViewComponentPropertyType.Boolean,\n          designType: ViewComponentPropertyType.Boolean\n        },\n        {\n          name: 'viewApi',\n          enableExpressionEvaluation: true,\n          defaultValue: '${view.api}'\n        }\n      ]\n    });\n  }\n}\n"]}