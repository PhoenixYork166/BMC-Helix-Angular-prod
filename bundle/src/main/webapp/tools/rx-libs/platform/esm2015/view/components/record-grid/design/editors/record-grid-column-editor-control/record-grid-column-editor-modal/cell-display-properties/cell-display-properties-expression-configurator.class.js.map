{"version":3,"file":"cell-display-properties-expression-configurator.class.js","sourceRoot":"","sources":["../../../../../../../../../../../../libs/platform/view/components/record-grid/design/editors/record-grid-column-editor-control/record-grid-column-editor-modal/cell-display-properties/cell-display-properties-expression-configurator.class.ts"],"names":[],"mappings":"AAAA,OAAO,EAA4C,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AAChH,OAAO,EAAc,EAAE,EAAE,MAAM,MAAM,CAAC;AAGtC,MAAM,OAAO,qDACX,SAAQ,wBAAwB;IAIhC,mCAAmC,CAAC,OAAkC;QACpE,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,OAAO,EAAE,CACP,OAAO,CAAC,GAAG,CAAC,CAAC,MAA+B,EAAE,EAAE,CAAC,CAAC;gBAChD,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,IAAI,EAAE,mBAAmB;gBACzB,UAAU,EAAE,wCAAwC,MAAM,CAAC,OAAO,GAAG;gBACrE,YAAY,EAAE,MAAM,CAAC,eAAe,CAAC,YAAY;aAClD,CAAC,CAAC,CACJ,CAAC;SACH;aAAM;YACL,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;SACf;IACH,CAAC;CACF","sourcesContent":["import { IDataDictionary, IExpressionConfigurator, RxExpressionConfigurator } from '@helix/platform/shared/api';\nimport { Observable, of } from 'rxjs';\nimport { IColumnEditorColumnData } from '../../record-grid-column-editor.types';\n\nexport class RecordGridCellDisplayPropertiesExpressionConfigurator\n  extends RxExpressionConfigurator\n  implements IExpressionConfigurator {\n  commonDataDictionary$: Observable<IDataDictionary>;\n\n  cellDisplayExpressionDataDictionary(columns: IColumnEditorColumnData[]): Observable<IDataDictionary> {\n    if (columns.length) {\n      return of(\n        columns.map((column: IColumnEditorColumnData) => ({\n          label: column.label,\n          icon: 'd-icon-field_text',\n          expression: `\\${view.components.grid.clickableRow.${column.fieldId}}`,\n          resourceType: column.fieldDefinition.resourceType\n        }))\n      );\n    } else {\n      return of([]);\n    }\n  }\n}\n"]}