{"version":3,"file":"service-list-registration.module.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/components/service-list/service-list-registration.module.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,8BAA8B,EAC9B,mBAAmB,EACnB,yBAAyB,EAC1B,MAAM,0BAA0B,CAAC;AAClC,OAAO,EAAE,wBAAwB,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACnE,OAAO,EAAE,gBAAgB,EAAE,MAAM,+BAA+B,CAAC;AACjE,OAAO,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAE5D,OAAO,EAAE,0BAA0B,EAAE,MAAM,wCAAwC,CAAC;AACpF,OAAO,EAAE,uBAAuB,EAAE,MAAM,qCAAqC,CAAC;AAC9E,OAAO,EAAE,sBAAsB,EAAE,MAAM,oCAAoC,CAAC;AAC5E,OAAO,EAAE,oBAAoB,EAAE,MAAM,kCAAkC,CAAC;AACxE,OAAO,EAAE,iBAAiB,EAAE,MAAM,+BAA+B,CAAC;;;AAKlE,MAAM,OAAO,6BAA6B;IACxC,YACU,8BAA8D,EAC9D,wBAAkD;QADlD,mCAA8B,GAA9B,8BAA8B,CAAgC;QAC9D,6BAAwB,GAAxB,wBAAwB,CAA0B;QAE1D,IAAI,CAAC,8BAA8B,CAAC,QAAQ,CAAC;YAC3C,IAAI,EAAE,mBAAmB,CAAC,WAAW;YACrC,gBAAgB,EAAE,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,oBAAoB,CAAC;YAC7F,IAAI,EAAE,cAAc;YACpB,KAAK,EAAE,gBAAgB,CAAC,aAAa,CAAC,iBAAiB,CAAC,KAAK;YAC7D,OAAO,EAAE;gBACP,2BAA2B,EAAE,IAAI;aAClC;YACD,iBAAiB,CAAC,cAAwB;gBACxC,OAAO,cAAc,CAAC,QAAQ,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;YACnE,CAAC;YACD,UAAU,EAAE;gBACV;oBACE,IAAI,EAAE,kBAAkB;oBACxB,0BAA0B,EAAE,IAAI;oBAChC,IAAI,EAAE,yBAAyB,CAAC,MAAM;iBACvC;gBACD;oBACE,IAAI,EAAE,oBAAoB;oBAC1B,0BAA0B,EAAE,IAAI;oBAChC,IAAI,EAAE,yBAAyB,CAAC,MAAM;iBACvC;gBACD;oBACE,IAAI,EAAE,oBAAoB;oBAC1B,0BAA0B,EAAE,IAAI;oBAChC,IAAI,EAAE,yBAAyB,CAAC,MAAM;iBACvC;aACF;YACD,sBAAsB,EAAE,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,0BAA0B,CAAC;YACzG,oBAAoB,EAAE,sBAAsB;YAC5C,IAAI,EAAE,gBAAgB;YACtB,QAAQ,EAAE,cAAc,CAAC,eAAe;YACxC,kBAAkB,EAAE,CAAC,cAAc,CAAC,eAAe,CAAC;SACrD,CAAC,CAAC;IACL,CAAC;;0HAvCU,6BAA6B;2HAA7B,6BAA6B,YAF9B,iBAAiB,EAAE,uBAAuB;2HAEzC,6BAA6B,YAF/B,CAAC,iBAAiB,EAAE,uBAAuB,CAAC;2FAE1C,6BAA6B;kBAHzC,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,iBAAiB,EAAE,uBAAuB,CAAC;iBACtD","sourcesContent":["import {\n  RxViewComponentRegistryService,\n  RxViewComponentType,\n  ViewComponentPropertyType\n} from '@helix/platform/view/api';\nimport { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { RX_VIEW_DESIGNER } from '@helix/platform/view/designer';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\n\nimport { ServiceListDesignComponent } from './design/service-list-design.component';\nimport { ServiceListDesignModule } from './design/service-list-design.module';\nimport { ServiceListDesignModel } from './design/service-list-design.model';\nimport { ServiceListComponent } from './runtime/service-list.component';\nimport { ServiceListModule } from './runtime/service-list.module';\n\n@NgModule({\n  imports: [ServiceListModule, ServiceListDesignModule]\n})\nexport class ServiceListRegistrationModule {\n  constructor(\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {\n    this.rxViewComponentRegistryService.register({\n      type: RxViewComponentType.ServiceList,\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(ServiceListComponent),\n      name: 'Service list',\n      group: RX_VIEW_DESIGNER.stencilGroups.chatbotComponents.label,\n      options: {\n        canBeEmbeddedInRecordEditor: true\n      },\n      canBeInsertedInto(componentTypes: string[]): boolean {\n        return componentTypes.includes(RxViewComponentType.RecordEditor);\n      },\n      properties: [\n        {\n          name: 'serviceRequestId',\n          enableExpressionEvaluation: true,\n          type: ViewComponentPropertyType.String\n        },\n        {\n          name: 'serviceRequestName',\n          enableExpressionEvaluation: true,\n          type: ViewComponentPropertyType.String\n        },\n        {\n          name: 'serviceRequestGuid',\n          enableExpressionEvaluation: true,\n          type: ViewComponentPropertyType.String\n        }\n      ],\n      designComponentFactory: this.componentFactoryResolver.resolveComponentFactory(ServiceListDesignComponent),\n      designComponentModel: ServiceListDesignModel,\n      icon: 'field_dropdown',\n      bundleId: RX_APPLICATION.chatbotBundleId,\n      availableInBundles: [RX_APPLICATION.chatbotBundleId]\n    });\n  }\n}\n"]}