{"version":3,"file":"select-group-field.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/field-components/select-group/design/select-group-field.component.ts","../../../../../../../../../libs/platform/view/components/field-components/select-group/design/select-group-field.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { INamedListDefinition, RxNamedListDefinitionCacheService } from '@helix/platform/named-list/api';\nimport { IRecordDefinition, RxRecordDefinitionCacheService } from '@helix/platform/record/api';\nimport { RxDefinitionNameService } from '@helix/platform/shared/api';\nimport { IDefinitionPickerComponentOptions, RxDefinitionPickerType } from '@helix/platform/shared/components';\nimport { head, isEmpty } from 'lodash';\nimport { of } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'rx-select-group-field',\n  templateUrl: './select-group-field.component.html'\n})\nexport class SelectGroupFieldComponent implements OnInit {\n  @Input()\n  fieldformGroup: AbstractControl;\n\n  @Input()\n  index: number;\n\n  @Input()\n  targetFieldOptions: RxSelectOption[];\n\n  definitionPickerOptions: IDefinitionPickerComponentOptions = {\n    label: 'Named list for options',\n    definitionType: RxDefinitionPickerType.NamedList,\n    required: true\n  };\n\n  filterField: RxSelectOption[] = [];\n  filterFieldIdOptions: RxSelectOption[] = [];\n  sourceRecordDefinitionDisplayName = '';\n  fieldId: RxSelectOption[] = [];\n\n  constructor(\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxNamedListDefinitionCacheService: RxNamedListDefinitionCacheService,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService\n  ) {}\n\n  ngOnInit(): void {\n    this.onNamedListDefinitionNameChange(false);\n  }\n\n  onNamedListDefinitionNameChange(emitEvent: boolean = true): void {\n    of(this.fieldformGroup.get('namedListDefinitionName').value)\n      .pipe(\n        switchMap((namedListDefinitionName) => {\n          if (namedListDefinitionName) {\n            return this.rxNamedListDefinitionCacheService\n              .getNamedListDefinition(namedListDefinitionName)\n              .pipe(map((namedListDefinition: INamedListDefinition) => namedListDefinition.recordDefinitionName));\n          } else {\n            return of(null);\n          }\n        }),\n        take(1)\n      )\n      .subscribe((sourceRecordDefinitionName) => {\n        this.fieldformGroup.get('sourceRecordDefinitionName').setValue(sourceRecordDefinitionName, { emitEvent });\n\n        this.filterFieldIdOptions = [];\n\n        this.setFilterId();\n\n        if (this.index > 0) {\n          this.setOptionFilterFieldIdOptions();\n          this.setSourceRecordDefinitionDisplayName();\n        }\n      });\n  }\n\n  setFilterId(): void {\n    const fieldId = this.fieldformGroup.get('fieldId').value;\n\n    this.fieldId = isEmpty(fieldId) ? [] : [this.targetFieldOptions.find((option) => option.id === fieldId)];\n  }\n\n  setSourceRecordDefinitionDisplayName(): void {\n    const recordDefinitionName = this.fieldformGroup.get('sourceRecordDefinitionName').value;\n\n    this.sourceRecordDefinitionDisplayName =\n      recordDefinitionName && this.rxDefinitionNameService.getDisplayName(recordDefinitionName);\n  }\n\n  setOptionFilterFieldIdOptions(): void {\n    const recordDefinitionName = this.fieldformGroup.get('sourceRecordDefinitionName').value;\n\n    this.filterField = [];\n\n    if (recordDefinitionName) {\n      this.rxRecordDefinitionCacheService\n        .getRecordDefinition(recordDefinitionName)\n        .pipe(\n          map((recordDefinition: IRecordDefinition) => {\n            return recordDefinition.fieldDefinitions.map((fieldDefinition) => ({\n              name: fieldDefinition.name,\n              id: String(fieldDefinition.id)\n            }));\n          })\n        )\n        .subscribe((fieldIdOptions: RxSelectOption[]) => {\n          const filterFieldId = this.fieldformGroup.get('optionFilterFieldId').value;\n\n          this.filterFieldIdOptions = fieldIdOptions;\n\n          this.filterField = isEmpty(filterFieldId)\n            ? []\n            : [this.filterFieldIdOptions.find((option) => option.id === filterFieldId)];\n        });\n    }\n  }\n\n  optionFormatter(option: RxSelectOption): string {\n    return option.name;\n  }\n\n  onSelectFilterField(filterField: RxSelectOption[]): void {\n    this.fieldformGroup.get('optionFilterFieldId').setValue(head(filterField).id);\n  }\n\n  onSelectField(field: RxSelectOption[]): void {\n    this.fieldformGroup.get('fieldId').setValue(head(field).id);\n  }\n}\n","<div>\n  <adapt-rx-textfield\n    label=\"Display label\"\n    required=\"true\"\n    rx-id=\"display-label-field\"\n    [formControl]=\"fieldformGroup.get('label')\"\n    class=\"form-group d-block\"\n  ></adapt-rx-textfield>\n\n  <rx-definition-picker\n    [options]=\"definitionPickerOptions\"\n    [formControl]=\"fieldformGroup.get('namedListDefinitionName')\"\n    (ngModelChange)=\"onNamedListDefinitionNameChange()\"\n    required=\"true\"\n    rx-id=\"named-list-definition-name-field\"\n    class=\"form-group d-block\"\n  ></rx-definition-picker>\n\n  <adapt-rx-select\n    label=\"Field for storing selected option value\"\n    rx-id=\"selected-option-value-target-field\"\n    [ngModel]=\"fieldId\"\n    (ngModelChange)=\"onSelectField($event)\"\n    [options]=\"targetFieldOptions\"\n    [optionFormatter]=\"optionFormatter\"\n    [required]=\"true\"\n    [disabled]=\"fieldformGroup.disabled\"\n    [ngClass]=\"{ 'form-group d-block': index > 0 }\"\n  ></adapt-rx-select>\n\n  <adapt-rx-textfield\n    label=\"Source record definition\"\n    *ngIf=\"index > 0\"\n    class=\"form-group d-block\"\n    [ngModel]=\"sourceRecordDefinitionDisplayName\"\n    disabled\n    rx-id=\"source-record-definition-name-field\"\n    [tooltip]=\"{\n      iconName: 'question_circle_o',\n      content: 'This is the record definition that provides the option values for this named list.',\n      placement: 'top',\n      popoverMode: true\n    }\"\n  ></adapt-rx-textfield>\n\n  <adapt-rx-select\n    *ngIf=\"index > 0\"\n    label=\"Field for filtering option values\"\n    rx-id=\"option-values-filter-field\"\n    [ngModel]=\"filterField\"\n    (ngModelChange)=\"onSelectFilterField($event)\"\n    [options]=\"filterFieldIdOptions\"\n    [optionFormatter]=\"optionFormatter\"\n    [disabled]=\"fieldformGroup.disabled\"\n    [tooltip]=\"{\n      iconName: 'question_circle_o',\n      content: 'Select the field in the source record definition that filters the option values for this named list.',\n      placement: 'top',\n      popoverMode: true\n    }\"\n  ></adapt-rx-select>\n</div>\n"]}