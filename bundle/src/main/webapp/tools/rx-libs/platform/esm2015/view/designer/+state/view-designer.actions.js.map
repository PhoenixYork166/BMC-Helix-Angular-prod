{"version":3,"file":"view-designer.actions.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/designer/+state/view-designer.actions.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAIlD,MAAM,CAAC,MAAM,yBAAyB,GAAG,YAAY,CACnD,8CAA8C,EAC9C,KAAK,EAAkC,CACxC,CAAC;AAEF,MAAM,CAAC,MAAM,uBAAuB,GAAG,YAAY,CAAC,4CAA4C,CAAC,CAAC;AAElG,MAAM,CAAC,MAAM,yBAAyB,GAAG,YAAY,CACnD,8CAA8C,EAC9C,KAAK,EAAuC,CAC7C,CAAC;AAEF,MAAM,CAAC,MAAM,uBAAuB,GAAG,YAAY,CAAC,4CAA4C,CAAC,CAAC;AAElG,MAAM,CAAC,MAAM,0BAA0B,GAAG,YAAY,CACpD,+CAA+C,EAC/C,KAAK,EAAgC,CACtC,CAAC;AAEF,MAAM,CAAC,MAAM,kBAAkB,GAAG,YAAY,CAC5C,sCAAsC,EACtC,KAAK,EAGD,CACL,CAAC;AAEF,MAAM,CAAC,MAAM,6BAA6B,GAAG,YAAY,CACvD,mDAAmD,EACnD,KAAK,EAAkC,CACxC,CAAC;AAEF,MAAM,CAAC,MAAM,2BAA2B,GAAG,YAAY,CACrD,iDAAiD,EACjD,KAAK,EAAoB,CAC1B,CAAC;AAEF,MAAM,CAAC,MAAM,qBAAqB,GAAG,YAAY,CAAC,yCAAyC,CAAC,CAAC;AAE7F,MAAM,CAAC,MAAM,0BAA0B,GAAG,YAAY,CAAC,gDAAgD,CAAC,CAAC;AAEzG,MAAM,CAAC,MAAM,eAAe,GAAG,YAAY,CACzC,mCAAmC,EACnC,KAAK,EAA0C,CAChD,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GAAG,YAAY,CAAC,gCAAgC,EAAE,KAAK,EAAiC,CAAC,CAAC;AAEnH,MAAM,CAAC,MAAM,kBAAkB,GAAG,YAAY,CAAC,sCAAsC,EAAE,KAAK,EAAqB,CAAC,CAAC;AAEnH,MAAM,CAAC,MAAM,kBAAkB,GAAG,YAAY,CAAC,sCAAsC,EAAE,KAAK,EAAqB,CAAC,CAAC;AAEnH,MAAM,CAAC,MAAM,UAAU,GAAG,YAAY,CAAC,6BAA6B,CAAC,CAAC;AAEtE,MAAM,CAAC,MAAM,sBAAsB,GAAG,YAAY,CAAC,2CAA2C,CAAC,CAAC;AAEhG,MAAM,CAAC,MAAM,sBAAsB,GAAG,YAAY,CAChD,0CAA0C,EAC1C,KAAK,EAAqB,CAC3B,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG,YAAY,CAAC,8BAA8B,CAAC,CAAC;AAExE,MAAM,CAAC,MAAM,gBAAgB,GAAG,YAAY,CAC1C,sBAAsB,EACtB,KAAK,EAA+C,CACrD,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG,YAAY,CAAC,yBAAyB,CAAC,CAAC","sourcesContent":["import { IViewDefinition } from '@helix/platform/view/api';\nimport { createAction, props } from '@ngrx/store';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport { IInitViewDesignerActionPayload } from './view-designer.types';\n\nexport const viewDefinitionSaveSuccess = createAction(\n  '[View Designer] View Definition Save Success',\n  props<{ viewDefinitionName: string }>()\n);\n\nexport const viewDefinitionSaveError = createAction('[View Designer] View Definition Save Error');\n\nexport const viewDefinitionLoadSuccess = createAction(\n  '[View Designer] View Definition Load Success',\n  props<{ viewDefinition: IViewDefinition }>()\n);\n\nexport const viewDefinitionLoadError = createAction('[View Designer] View Definition Load Error');\n\nexport const setGeneratedViewDefinition = createAction(\n  '[View Designer] Set Generated View Definition',\n  props<{ payload: IViewDefinition }>()\n);\n\nexport const loadViewDefinition = createAction(\n  '[View Designer] Load View Definition',\n  props<{\n    viewDefinitionName?: string;\n    layoutTemplate?: number;\n  }>()\n);\n\nexport const friendlyBundleNameLoadSuccess = createAction(\n  '[View Designer] Bundle Friendly Name Load Success',\n  props<{ friendlyBundleName: string }>()\n);\n\nexport const friendlyBundleNameLoadError = createAction(\n  '[View Designer] Bundle Friendly Name Load Error',\n  props<{ payload: any }>()\n);\n\nexport const viewModelsInitialized = createAction('[View Designer] View Models Initialized');\n\nexport const viewModelsUpdatedAfterSave = createAction('[View Designer] View Models Updated After Save');\n\nexport const updateViewModel = createAction(\n  '[View Designer] Update View Model',\n  props<{ payload: Partial<IViewDesignModel> }>()\n);\n\nexport const setViewModel = createAction('[View Designer] Set View Model', props<{ payload: IViewDesignModel }>());\n\nexport const selectInspectorTab = createAction('[View Designer] Select Inspector Tab', props<{ tabId: number }>());\n\nexport const saveViewDefinition = createAction('[View Designer] Save View Definition', props<{ payload?: any }>());\n\nexport const runPreview = createAction('[View Designer] Run Preview');\n\nexport const loadFriendlyBundleName = createAction('[View Designer] Load Bundle Friendly Name');\n\nexport const generateViewDefinition = createAction(\n  '[View Designer] Generate View Definition',\n  props<{ payload?: any }>()\n);\n\nexport const clearCanvas = createAction('[View Designer] Clear Canvas');\n\nexport const initViewDesigner = createAction(\n  '[View Designer] Init',\n  props<{ payload: IInitViewDesignerActionPayload }>()\n);\n\nexport const destroyViewDesigner = createAction('[View Designer] Destroy');\n"]}