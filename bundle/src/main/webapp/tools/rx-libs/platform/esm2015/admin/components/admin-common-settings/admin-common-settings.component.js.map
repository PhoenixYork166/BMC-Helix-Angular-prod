{"version":3,"file":"admin-common-settings.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/admin/components/admin-common-settings/admin-common-settings.component.ts","../../../../../../../libs/platform/admin/components/admin-common-settings/admin-common-settings.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { IAdminComponentDefinition, IPlainObject, RxAdminSettingsService } from '@helix/platform/shared/api';\nimport { IRecordGridConfig, RecordGridComponent } from '@helix/platform/view/components';\nimport { flatten, forEach } from 'lodash';\nimport { forkJoin, NEVER, Observable, of, ReplaySubject, Subject, Subscription } from 'rxjs';\nimport { filter, map, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport { AdminCommonSettingsEditorComponent } from '../admin-common-settings-editor/admin-common-settings-editor.component';\nimport { RxAdminCommonSettingsService } from '../services/admin-common-settings.service';\nimport { ICommonSettingsGroup, ICommonSettingsState } from './admin-common-settings.types';\nimport { IGetRecordGridConfigParams, IOpenSettingsDetailsParams } from '../services/admin-common-settings.types';\nimport { IDialogApi, RxModalService } from '@helix/platform/ui-kit';\n\n@Component({\n  selector: 'rx-admin-common-settings',\n  templateUrl: './admin-common-settings.component.html'\n})\nexport class AdminCommonSettingsComponent implements OnInit, OnDestroy {\n  @Input()\n  componentName$: Observable<string>;\n\n  @ViewChild(RecordGridComponent)\n  recordGridComponent: RecordGridComponent;\n\n  @ViewChild(AdminCommonSettingsEditorComponent)\n  adminCommonSettingsEditorComponent: AdminCommonSettingsEditorComponent;\n\n  private componentName: string;\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  busySubscription: Subscription;\n  state: ICommonSettingsState;\n  private dialogApi: any;\n  navigationMenuLabel: string;\n\n  constructor(\n    private rxModalService: RxModalService,\n    private rxAdminSettingsService: RxAdminSettingsService,\n    private rxAdminCommonSettingsService: RxAdminCommonSettingsService\n  ) {\n    this.getRecordGridConfig = this.getRecordGridConfig.bind(this);\n    this.openSettingsDetails = this.openSettingsDetails.bind(this);\n  }\n\n  ngOnInit(): void {\n    let busySubject: Subject<void>;\n\n    this.componentName$\n      .pipe(\n        filter(Boolean),\n        tap((componentName: string) => {\n          busySubject = new Subject<void>();\n\n          this.componentName = componentName;\n          this.state = null;\n          this.busySubscription = busySubject.pipe(take(1)).subscribe();\n        }),\n        switchMap((componentName: string) => this.rxAdminSettingsService.getComponentDefinition(componentName)),\n        tap((adminComponentDefinition: IAdminComponentDefinition) => {\n          this.navigationMenuLabel = adminComponentDefinition.header;\n        }),\n        switchMap((adminComponentDefinition: IAdminComponentDefinition) => {\n          const state: ICommonSettingsState = {\n            headerLabel: adminComponentDefinition.header,\n            createPermission: adminComponentDefinition.createPermission,\n            componentName: adminComponentDefinition.compName,\n            supportsMultiple: false,\n            commonSettingGroups: []\n          };\n\n          const commonSettingGroups$ = [];\n\n          forEach(adminComponentDefinition.groups, (group) => {\n            const propertyConfigs$ = [];\n\n            const commonSettingGroup: ICommonSettingsGroup = {\n              name: group.name,\n              supportsMultiple: group.supportsMultiple,\n              isComponent: group.component,\n              settings: []\n            } as ICommonSettingsGroup;\n\n            if (commonSettingGroup.isComponent) {\n              propertyConfigs$.push(\n                this.rxAdminSettingsService.getComponentDefinition(group.name).pipe(\n                  map((childAdminComponentDefinition) => {\n                    const childGroup = childAdminComponentDefinition.groups[0];\n\n                    if (commonSettingGroup.supportsMultiple) {\n                      commonSettingGroup.controls = childGroup.controls;\n                    }\n\n                    return childGroup.controls.map((control) =>\n                      this.rxAdminCommonSettingsService.createPropertyConfig(control)\n                    );\n                  })\n                )\n              );\n            } else {\n              forEach(group.controls, (control) => {\n                propertyConfigs$.push(of(this.rxAdminCommonSettingsService.createPropertyConfig(control)));\n              });\n            }\n\n            commonSettingGroups$.push(\n              forkJoin(propertyConfigs$).pipe(\n                map((propertyConfigs: IPlainObject[]) => {\n                  commonSettingGroup.propertyConfigs = flatten(propertyConfigs);\n\n                  return commonSettingGroup;\n                })\n              )\n            );\n          });\n\n          return commonSettingGroups$.length\n            ? forkJoin(commonSettingGroups$).pipe(\n                map((commonSettingGroups: ICommonSettingsGroup[]) => {\n                  state.commonSettingGroups = commonSettingGroups;\n\n                  if (adminComponentDefinition.supportsMultiple) {\n                    state.supportsMultiple = true;\n\n                    const controls = flatten(\n                      adminComponentDefinition.groups.filter((group) => !group.component).map((group) => group.controls)\n                    );\n\n                    state.recordGridConfig = this.rxAdminCommonSettingsService\n                      .getRecordGridConfig({\n                        componentName: state.componentName,\n                        controls,\n                        getCurrentGridFn: this.getCurrentGrid.bind(this),\n                        createPermission: state.createPermission,\n                        groups: state.commonSettingGroups,\n                        bladeTitle: state.headerLabel,\n                        ownerKeyValue: null,\n                        groupName: null,\n                        onDialogApiReady: (dialogApi: IDialogApi) => (this.dialogApi = dialogApi)\n                      })\n                      .pipe(\n                        map((recordGridConfig) => ({\n                          ...recordGridConfig,\n                          styles: 'h-auto flex-fill mw-100'\n                        }))\n                      );\n                  }\n\n                  return state;\n                })\n              )\n            : of(null);\n        }),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe((state: ICommonSettingsState) => {\n        this.state = state;\n\n        busySubject.next();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  addNewSetting(): void {\n    this.rxAdminCommonSettingsService\n      .openSettingsDetails({\n        title: this.state.headerLabel,\n        componentName: this.componentName,\n        groups: this.state.commonSettingGroups,\n        onDialogApiReady: (dialogApi: IDialogApi) => (this.dialogApi = dialogApi)\n      })\n      .then(() => {\n        this.dialogApi = null;\n        this.recordGridComponent.api.refresh().subscribe();\n      })\n      .catch(() => {\n        this.dialogApi = null;\n      });\n  }\n\n  onBusy(isBusy: boolean): void {\n    if (isBusy) {\n      this.busySubscription = NEVER.subscribe();\n    } else {\n      this.busySubscription?.unsubscribe();\n    }\n  }\n\n  getRecordGridConfig(options: IGetRecordGridConfigParams): Observable<IRecordGridConfig> {\n    return this.rxAdminCommonSettingsService.getRecordGridConfig(options);\n  }\n\n  openSettingsDetails(options: IOpenSettingsDetailsParams): Promise<any> {\n    return this.rxAdminCommonSettingsService.openSettingsDetails(options);\n  }\n\n  private getCurrentGrid(): RecordGridComponent {\n    return this.recordGridComponent;\n  }\n\n  canClose(): boolean {\n    return Boolean(this.adminCommonSettingsEditorComponent?.canClose() ?? !this.dialogApi?.isDirty());\n  }\n}\n","<rx-admin-settings [busy]=\"busySubscription\" [header]=\"state?.headerLabel || navigationMenuLabel\">\n  <div *ngIf=\"!state\" class=\"d-flex align-items-center justify-content-center h-100\">\n    <adapt-empty-state\n      [type]=\"'config'\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.no-settings-available.message' | translate }}\"\n    ></adapt-empty-state>\n  </div>\n\n  <div *ngIf=\"state\" class=\"d-flex flex-column align-items-start flex-fill\">\n    <ng-container *ngIf=\"state.supportsMultiple\">\n      <button *ngIf=\"state.createPermission\" adapt-button type=\"button\" btn-type=\"tertiary\" (click)=\"addNewSetting()\">\n        <span class=\"d-icon-plus_circle\"></span>\n        {{ 'com.bmc.arsys.rx.client.admin.add-new-setting.label' | translate }}\n      </button>\n\n      <rx-record-grid [config]=\"state.recordGridConfig\"></rx-record-grid>\n    </ng-container>\n\n    <div class=\"flex-fill w-100\" *ngIf=\"!state.supportsMultiple\">\n      <rx-admin-common-settings-editor\n        [componentName]=\"state.componentName\"\n        [groups]=\"state.commonSettingGroups\"\n        [isNew]=\"false\"\n        [createPermission]=\"state.createPermission\"\n        [getRecordGridConfig]=\"getRecordGridConfig\"\n        [openSettingsDetails]=\"openSettingsDetails\"\n        (busy)=\"onBusy($event)\"\n      ></rx-admin-common-settings-editor>\n    </div>\n  </div>\n</rx-admin-settings>\n"]}