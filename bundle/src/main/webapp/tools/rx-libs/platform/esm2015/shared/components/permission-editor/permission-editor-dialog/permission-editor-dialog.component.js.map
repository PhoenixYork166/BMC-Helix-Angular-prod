{"version":3,"file":"permission-editor-dialog.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/shared/components/permission-editor/permission-editor-dialog/permission-editor-dialog.component.ts","../../../../../../../../libs/platform/shared/components/permission-editor/permission-editor-dialog/permission-editor-dialog.component.html"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, Component, ElementRef, Injector, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { ActiveModalRef, DismissReasons } from '@bmc-ux/adapt-angular';\nimport { RX_RECORD_DEFINITION, RxRecordInstanceUtilsService } from '@helix/platform/record/api';\nimport {\n  IDataPageResult,\n  RX_PERMISSION,\n  RxBundleCacheService,\n  RxGroupDataPageService,\n  RxRoleDataPageService\n} from '@helix/platform/shared/api';\nimport { RX_MODAL, RxModalClass, RxModalService } from '@helix/platform/ui-kit';\nimport {\n  cloneDeep,\n  compact,\n  find,\n  flow,\n  forEach,\n  identity,\n  isEmpty,\n  isNumber,\n  map as _map,\n  pull,\n  remove,\n  uniqBy\n} from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IRxSelectWithPaginationOptionsPage } from '../../select-with-pagination';\nimport { IPermission, PermissionOwner } from '../interfaces/permission.interfaces';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-permission-editor-dialog',\n  templateUrl: './permission-editor-dialog.component.html',\n  styleUrls: ['./permission-editor-dialog.component.scss']\n})\nexport class RxPermissionEditorDialogComponent extends RxModalClass implements OnInit, AfterViewInit {\n  @ViewChild('addNewPermissionButton', { read: ElementRef })\n  addNewPermissionButton: ElementRef;\n\n  private metadata;\n\n  permissions: IPermission[] = [];\n  permissionTypes = RX_PERMISSION.permissionType;\n  areSecurityLabelsAvailable = false;\n  permissionScope = '';\n  actionsData;\n  canSave = false;\n\n  buttonLabels = {\n    group: this.translateService.instant('com.bmc.arsys.rx.client.permission-editor.button.group.label'),\n    role: this.translateService.instant('com.bmc.arsys.rx.client.permission-editor.button.role.label'),\n    securityLabel: this.translateService.instant('com.bmc.arsys.rx.client.permission-editor.button.securityLabel.label')\n  };\n\n  constructor(\n    private activeModalRef: ActiveModalRef,\n    private rxGroupDataPage: RxGroupDataPageService,\n    private rxRecordInstanceUtilsService: RxRecordInstanceUtilsService,\n    private rxRoleDataPage: RxRoleDataPageService,\n    private rxModalService: RxModalService,\n    private rxBundleCache: RxBundleCacheService,\n    private renderer: Renderer2,\n    protected injector: Injector,\n    private translateService: TranslateService\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  isDirty(): boolean {\n    return this.canSave;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    const modalData = this.activeModalRef.getData();\n\n    this.metadata = RX_PERMISSION.permissionDialogMetadata[modalData.type];\n    this.actionsData = this.metadata.actions;\n\n    this.permissionScope = modalData.permissionScope || '';\n\n    this.permissions = _map(modalData.assignedPermissions, (assignedPermission: PermissionOwner) => {\n      const permissionType = this.getPermissionOwnerType(assignedPermission);\n\n      const permission: IPermission = {\n        permittedActions: {},\n        type: permissionType,\n        selectedPermissionDescriptor: [\n          {\n            value: assignedPermission.ownerId.value,\n            displayValue: assignedPermission.ownerId.name\n          }\n        ],\n        isWarningShown: false\n      };\n\n      this.setPermissionRestriction(permission, assignedPermission.type);\n\n      if (assignedPermission.ownerId.roleApplicationName) {\n        permission.selectedPermissionDescriptor[0].applicationName = assignedPermission.ownerId.roleApplicationName;\n      }\n\n      return permission;\n    });\n\n    this.canSave = false;\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.renderer.selectRootElement(this.addNewPermissionButton.nativeElement, true).focus();\n    });\n  }\n\n  dismiss(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  roleLoader(\n    startIndex: number,\n    pageSize: number,\n    searchQuery: string\n  ): Observable<IRxSelectWithPaginationOptionsPage> {\n    const queryParams: any = {\n      propertySelection: ['applicationName', 'roleName', 'roleID'].join(','),\n      sortBy: 'roleName'\n    };\n\n    const queryExpression = this.formAdditionalQueryCriteria(searchQuery, 'roleName');\n\n    if (queryExpression) {\n      queryParams.queryExpression = queryExpression;\n    }\n\n    if (this.permissionScope !== RX_PERMISSION.permissionScope.all) {\n      queryParams.applicationName = this.rxBundleCache.bundleId;\n    }\n\n    return this.rxRoleDataPage\n      .get({\n        params: { startIndex, pageSize, ...queryParams }\n      })\n      .pipe(\n        map((roleDataPage: IDataPageResult) => ({\n          totalSize: roleDataPage.totalSize,\n          options: _map(roleDataPage.data, (role) => ({\n            displayValue: role.roleName,\n            value: role.roleID,\n            applicationName: role.applicationName\n          }))\n        }))\n      );\n  }\n\n  groupLoader(\n    startIndex: number,\n    pageSize: number,\n    searchQuery: string\n  ): Observable<IRxSelectWithPaginationOptionsPage> {\n    const queryExpression = compact([\n      this.formAdditionalQueryCriteria(searchQuery, 'groupName'),\n      `('${RX_PERMISSION.groupCategoryFieldId}' != ${RX_PERMISSION.restrictedGroupCategoryForNonFieldPermissions.dynamic}\n      AND '${RX_PERMISSION.groupIdFieldId}' != ${RX_PERMISSION.restrictedGroupIdForNonFieldPermissions.subAdministratorGroup})`\n    ]).join(' AND ');\n\n    const queryParams = {\n      queryExpression: queryExpression,\n      propertySelection: ['groupName', 'groupId'].join(','),\n      sortBy: 'groupName'\n    };\n\n    return this.rxGroupDataPage\n      .get({\n        params: { startIndex, pageSize, ...queryParams }\n      })\n      .pipe(\n        map((groupDataPage: IDataPageResult) => ({\n          totalSize: groupDataPage.totalSize,\n          options: _map(groupDataPage.data, (group) => ({\n            displayValue: group.groupName,\n            value: group.groupId\n          }))\n        }))\n      );\n  }\n\n  addNewPermission(): void {\n    const permission = {\n      permittedActions: {},\n      type: RX_PERMISSION.permissionType.role,\n      selectedPermissionDescriptor: null,\n      isWarningShown: false\n    };\n\n    this.setPermissionRestriction(permission);\n\n    this.permissions.push(permission);\n  }\n\n  setRestrictionForAllPermissions(actionValue: string): void {\n    forEach(this.permissions, (permission: IPermission) => {\n      this.setPermissionRestriction(permission, actionValue);\n    });\n  }\n\n  removePermission(permission: IPermission): void {\n    pull(this.permissions, permission);\n\n    this.canSave = true;\n  }\n\n  setPermissionType(permission: IPermission, type: string): void {\n    permission.type = type;\n    permission.selectedPermissionDescriptor = null;\n    this.setPermissionRestriction(permission);\n  }\n\n  setPermissionRestriction(permission: IPermission, actionValue: string = '', isChecked: boolean = true): void {\n    if (isChecked) {\n      forEach(this.actionsData, (action) => {\n        permission.permittedActions[action.value] = action.value === actionValue;\n      });\n    }\n\n    this.canSave = true;\n  }\n\n  save(): void {\n    const permissionOwners = uniqBy(this.getPermissionOwners(), 'ownerId.name');\n\n    if (permissionOwners.length !== this.permissions.length) {\n      this.rxModalService\n        .confirm({\n          title: 'Warning',\n          modalStyle: RX_MODAL.modalStyles.warning,\n          message: 'Duplicate and misconfigured entries will be removed. Do you want to continue?'\n        })\n        .then((value: boolean) => {\n          if (value) {\n            this.activeModalRef.close({\n              permissions: permissionOwners\n            });\n          } else {\n            forEach(this.permissions, (permission) => {\n              permission.isWarningShown = !find(permission.permittedActions, identity);\n            });\n          }\n        });\n    } else {\n      this.activeModalRef.close({\n        permissions: permissionOwners\n      });\n    }\n  }\n\n  private getPermissionOwners(): PermissionOwner[] {\n    remove(this.permissions, (permission) => isEmpty(permission.selectedPermissionDescriptor));\n\n    const actualPermissions = cloneDeep(this.permissions);\n\n    return flow(\n      (permissions) =>\n        _map(permissions, (permission) => {\n          if (this.actionsData.length === 0) {\n            return this.getPermissionOwner(permission, (this.metadata as any).defaultPermittedAction);\n          } else {\n            let permissionOwner: PermissionOwner;\n\n            forEach(this.actionsData, (action) => {\n              if (permission.permittedActions[action.value]) {\n                permissionOwner = this.getPermissionOwner(permission, action.value);\n              }\n            });\n\n            return permissionOwner;\n          }\n        }),\n      compact\n    )(actualPermissions);\n  }\n\n  private getPermissionOwner(permission: IPermission, type: string): PermissionOwner {\n    const permissionOwner = {\n      ownerId: {\n        value:\n          permission.selectedPermissionDescriptor[0].value === RX_RECORD_DEFINITION.securityLabelIds.assigneeGroup\n            ? RX_RECORD_DEFINITION.groupIds.assigneeGroup\n            : permission.selectedPermissionDescriptor[0].value,\n        type: (permission.type === RX_PERMISSION.permissionType.securityLabel\n          ? RX_PERMISSION.permissionType.group\n          : permission.type\n        ).toUpperCase(),\n        name: permission.selectedPermissionDescriptor[0].displayValue\n      },\n      type: type\n    } as PermissionOwner;\n\n    if (\n      this.permissionScope === RX_PERMISSION.permissionScope.all &&\n      permissionOwner.ownerId.type === RX_PERMISSION.permissionType.role.toUpperCase()\n    ) {\n      permissionOwner.ownerId.roleApplicationName = permission.selectedPermissionDescriptor[0].applicationName;\n    }\n\n    return permissionOwner;\n  }\n\n  private getPermissionOwnerType(permissionOwner: PermissionOwner): string {\n    const permissionOwnerId = permissionOwner.ownerId.value;\n\n    if (isNumber(permissionOwnerId)) {\n      return permissionOwnerId < 0 ? RX_PERMISSION.permissionType.role : RX_PERMISSION.permissionType.group;\n    } else {\n      return permissionOwner.type ? permissionOwner.type.toLowerCase() : RX_PERMISSION.permissionType.role;\n    }\n  }\n\n  private formAdditionalQueryCriteria(searchQuery: string, fieldName: string) {\n    return searchQuery\n      ? `('${fieldName}' LIKE \"%${this.rxRecordInstanceUtilsService.escapeTextWildcards(searchQuery)}%\")`\n      : null;\n  }\n\n  keepKeyValueOrder(): number {\n    return 0;\n  }\n\n  onPermissionDescriptorSelected(): void {\n    this.canSave = true;\n  }\n}\n","<div class=\"modal-header\">\n  <h5 class=\"modal-title\">{{ 'com.bmc.arsys.rx.client.permission-editor.title' | translate }}</h5>\n  <button class=\"close dp-close\" rx-id=\"x-button\" (click)=\"dismiss()\"></button>\n</div>\n\n<div class=\"modal-body\">\n  <button\n    adapt-button\n    btn-type=\"tertiary\"\n    class=\"p-0\"\n    #addNewPermissionButton\n    rx-id=\"add-new-permission-button\"\n    (click)=\"addNewPermission()\"\n  >\n    <span class=\"d-icon-plus_circle\"></span>\n    {{ 'com.bmc.arsys.rx.client.permission-editor.button.add-permission.label' | translate }}\n  </button>\n\n  <div class=\"border-bottom pb-1 d-flex align-items-center\">\n    <div class=\"permission-type mr-2\">\n      <adapt-rx-control-label label=\"{{ 'com.bmc.arsys.rx.client.permission-editor.column.type.label' | translate }}\">\n      </adapt-rx-control-label>\n    </div>\n\n    <div class=\"permission-role-selection d-flex align-items-center mr-2\">\n      <adapt-rx-control-label\n        label=\"{{ 'com.bmc.arsys.rx.client.permission-editor.permission-type.title' | translate }}\"\n      ></adapt-rx-control-label>\n    </div>\n\n    <div class=\"permission-warning\"></div>\n\n    <div class=\"permission-actions d-flex justify-content-center mr-2\" *ngIf=\"actionsData?.length\">\n      <div class=\"permission-action d-flex flex-column justify-content-center mr-1\" *ngFor=\"let action of actionsData\">\n        <adapt-rx-control-label class=\"text-center\" label=\"{{ action.label | translate }}\"></adapt-rx-control-label>\n        <adapt-button\n          btn-type=\"secondary\"\n          size=\"xtra-small\"\n          (click)=\"setRestrictionForAllPermissions(action.value)\"\n          [disabled]=\"permissions.length === 0\"\n        >\n          {{ 'com.bmc.arsys.rx.client.permission-editor.button.set-all.caption' | translate }}\n        </adapt-button>\n      </div>\n    </div>\n\n    <div class=\"remove-permission\"></div>\n  </div>\n\n  <div class=\"border-bottom py-2 d-flex\" *ngFor=\"let permission of permissions\">\n    <div class=\"permission-type mr-2\">\n      <div class=\"btn-group\">\n        <div *ngFor=\"let permissionType of permissionTypes | keyvalue: keepKeyValueOrder\">\n          <button\n            adapt-button\n            type=\"button\"\n            [btn-type]=\"permission.type === permissionType.value ? 'primary' : 'secondary'\"\n            *ngIf=\"\n              permissionType.value !== permissionTypes.securityLabel ||\n              (permissionType.value === permissionTypes.securityLabel && areSecurityLabelsAvailable)\n            \"\n            (click)=\"setPermissionType(permission, permissionType.value)\"\n          >\n            {{ buttonLabels[permissionType.value] }}\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"permission-role-selection mr-2\">\n      <rx-select-with-pagination\n        class=\"select-max-width\"\n        *ngIf=\"permission.type === permissionTypes.role\"\n        [(ngModel)]=\"permission.selectedPermissionDescriptor\"\n        (ngModelChange)=\"onPermissionDescriptorSelected()\"\n        [optionLoader]=\"roleLoader.bind(this)\"\n        [showUncheckAll]=\"false\"\n      ></rx-select-with-pagination>\n\n      <rx-select-with-pagination\n        *ngIf=\"permission.type === permissionTypes.group\"\n        class=\"select-max-width\"\n        [(ngModel)]=\"permission.selectedPermissionDescriptor\"\n        (ngModelChange)=\"onPermissionDescriptorSelected()\"\n        [optionLoader]=\"groupLoader.bind(this)\"\n        [showUncheckAll]=\"false\"\n      ></rx-select-with-pagination>\n    </div>\n\n    <div class=\"permission-warning d-flex align-items-center\">\n      <span *ngIf=\"permission.isWarningShown\" class=\"d-icon-exclamation_triangle\"> </span>\n    </div>\n\n    <div class=\"permission-actions d-flex\" *ngIf=\"actionsData?.length\">\n      <div class=\"permission-action d-flex justify-content-center mr-1\" *ngFor=\"let action of actionsData\">\n        <adapt-rx-checkbox\n          class=\"checkbox-inline m-0\"\n          [(ngModel)]=\"permission.permittedActions[action.value]\"\n          (ngModelChange)=\"setPermissionRestriction(permission, action.value, $event)\"\n        >\n        </adapt-rx-checkbox>\n      </div>\n    </div>\n\n    <div class=\"remove-permission d-flex justify-content-end mr-2\">\n      <button class=\"close\" (click)=\"removePermission(permission)\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal-footer\">\n  <button adapt-button type=\"button\" btn-type=\"primary\" [disabled]=\"!canSave\" rx-id=\"save-button\" (click)=\"save()\">\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n  <button adapt-button type=\"button\" btn-type=\"secondary\" rx-id=\"cancel-button\" (click)=\"dismiss()\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n"]}