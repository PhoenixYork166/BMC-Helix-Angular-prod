{"version":3,"file":"page-title.service.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/shared/api/services/page-title/page-title.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAClD,OAAO,EAAU,QAAQ,EAAE,WAAW,EAAE,MAAM,QAAQ,CAAC;AACvD,OAAO,EAAE,IAAI,EAAE,MAAM,gBAAgB,CAAC;AACtC,OAAO,EAAE,oBAAoB,EAAE,MAAM,oCAAoC,CAAC;AAC1E,OAAO,EAAE,oBAAoB,EAAE,MAAM,oCAAoC,CAAC;AAC1E,OAAO,EAAE,YAAY,EAAE,MAAM,2BAA2B,CAAC;;;;;;AAEzD,MAAM,eAAe,GAAG,KAAK,CAAC;AAK9B,MAAM,OAAO,kBAAkB;IAC7B,YACU,KAAY,EACZ,oBAA0C,EAC1C,oBAA0C,EAC1C,YAA0B;QAH1B,UAAK,GAAL,KAAK,CAAO;QACZ,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,iBAAY,GAAZ,YAAY,CAAc;IACjC,CAAC;IAEJ,GAAG,CAAC,KAAyB,EAAE,QAAiB;QAC9C,IAAI,gBAAgB,GAAG,EAAE,CAAC;QAE1B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACxB,gBAAgB,GAAG,KAAK;iBACrB,MAAM,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;gBACvB,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE;oBAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACnB;gBAED,OAAO,MAAM,CAAC;YAChB,CAAC,EAAE,EAAc,CAAC;iBACjB,IAAI,CAAC,eAAe,CAAC,CAAC;SAC1B;aAAM,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;YAC1B,gBAAgB,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;SACjC;aAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;YAC9B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,sBAAsB,GAAG,KAAK,CAAC,CAAC;SAC3D;QAED,MAAM,eAAe,GAAG,QAAQ,IAAI,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC;QAEvE,IAAI,QAAQ,KAAK,EAAE,IAAI,eAAe,EAAE;YACtC,IAAI,CAAC,oBAAoB;iBACtB,oBAAoB,CAAC,eAAe,CAAC;iBACrC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACb,SAAS,CAAC,CAAC,iBAAiB,EAAE,EAAE;gBAC/B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC;SACN;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;SACvC;IACH,CAAC;;+GAvCU,kBAAkB;mHAAlB,kBAAkB,cAFjB,MAAM;2FAEP,kBAAkB;kBAH9B,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { isNull, isString, isUndefined } from 'lodash';\nimport { take } from 'rxjs/operators';\nimport { RxBundleCacheService } from '../../caching/bundle-cache.service';\nimport { RxGlobalCacheService } from '../../caching/global-cache.service';\nimport { RxLogService } from '../../logging/log.service';\n\nconst TITLE_SEPARATOR = ' - ';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxPageTitleService {\n  constructor(\n    private title: Title,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxLogService: RxLogService\n  ) {}\n\n  set(title?: string | string[], bundleId?: string): void {\n    let currentPageTitle = '';\n\n    if (Array.isArray(title)) {\n      currentPageTitle = title\n        .reduce((result, part) => {\n          if (isString(part) && (part = part.trim())) {\n            result.push(part);\n          }\n\n          return result;\n        }, [] as string[])\n        .join(TITLE_SEPARATOR);\n    } else if (isString(title)) {\n      currentPageTitle = title.trim();\n    } else if (!isUndefined(title)) {\n      this.rxLogService.warning('Invalid page title: ' + title);\n    }\n\n    const currentBundleId = bundleId || this.rxBundleCacheService.bundleId;\n\n    if (bundleId !== '' && currentBundleId) {\n      this.rxGlobalCacheService\n        .getBundleDisplayName(currentBundleId)\n        .pipe(take(1))\n        .subscribe((bundleDisplayName) => {\n          this.title.setTitle([currentPageTitle, bundleDisplayName].filter(Boolean).join(TITLE_SEPARATOR));\n        });\n    } else {\n      this.title.setTitle(currentPageTitle);\n    }\n  }\n}\n"]}