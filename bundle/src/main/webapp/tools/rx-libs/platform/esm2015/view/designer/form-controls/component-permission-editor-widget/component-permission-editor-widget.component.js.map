{"version":3,"file":"component-permission-editor-widget.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/designer/form-controls/component-permission-editor-widget/component-permission-editor-widget.component.ts","../../../../../../../../libs/platform/view/designer/form-controls/component-permission-editor-widget/component-permission-editor-widget.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAqB,MAAM,eAAe,CAAC;AACpE,OAAO,EAAE,kBAAkB,EAAE,MAAM,mCAAmC,CAAC;AACvE,OAAO,EAAE,aAAa,EAAE,MAAM,MAAM,CAAC;AAErC,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;;;;;AAQ3C,MAAM,OAAO,0CAA0C;IAWrD,YAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAJ1D,gBAAW,GAAgC,EAAE,CAAC;QAEtC,eAAU,GAAG,IAAI,aAAa,CAAU,CAAC,CAAC,CAAC;IAEU,CAAC;IAE9D,QAAQ;QACN,IAAI,CAAC,kBAAkB;aACpB,uBAAuB,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;aACnD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAChC,SAAS,CAAC,CAAC,WAAW,EAAE,EAAE;YACzB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC7B,CAAC;IAED,mBAAmB,CAAC,WAAwC;QAC1D,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;YACvE,WAAW;SACZ,CAAC,CAAC;IACL,CAAC;;uIA/BU,0CAA0C;2HAA1C,0CAA0C,uICZvD,2LAMA;2FDMa,0CAA0C;kBAJtD,SAAS;mBAAC;oBACT,QAAQ,EAAE,uCAAuC;oBACjD,WAAW,EAAE,qDAAqD;iBACnE;yGAGC,OAAO;sBADN,KAAK;gBAIN,UAAU;sBADT,KAAK","sourcesContent":["import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ViewDesignerFacade } from '../../+state/view-designer.facade';\nimport { ReplaySubject } from 'rxjs';\nimport { IViewDefinitionPermission } from '@helix/platform/view/api';\nimport { takeUntil } from 'rxjs/operators';\nimport { IComponentPermissionEditorConfig } from './component-permission-editor-widget.types';\nimport { IFormWidgetComponent } from '@helix/platform/shared/api';\n\n@Component({\n  selector: 'rx-component-permission-editor-widget',\n  templateUrl: './component-permission-editor-widget.component.html'\n})\nexport class RxComponentPermissionEditorWidgetComponent implements OnInit, OnDestroy, IFormWidgetComponent {\n  @Input()\n  options: IComponentPermissionEditorConfig;\n\n  @Input()\n  isDisabled: boolean;\n\n  permissions: IViewDefinitionPermission[] = [];\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  constructor(private viewDesignerFacade: ViewDesignerFacade) {}\n\n  ngOnInit(): void {\n    this.viewDesignerFacade\n      .getComponentPermissions(this.options.componentGuid)\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((permissions) => {\n        this.permissions = permissions;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  onPermissionsChange(permissions: IViewDefinitionPermission[]): void {\n    this.viewDesignerFacade.updateComponentModel(this.options.componentGuid, {\n      permissions\n    });\n  }\n}\n","<rx-permission-editor\n  [options]=\"options\"\n  [disabled]=\"isDisabled\"\n  [(ngModel)]=\"permissions\"\n  (ngModelChange)=\"onPermissionsChange($event)\"\n></rx-permission-editor>\n"]}