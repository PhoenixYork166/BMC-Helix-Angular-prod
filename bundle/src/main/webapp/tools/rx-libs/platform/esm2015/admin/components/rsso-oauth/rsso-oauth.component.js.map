{"version":3,"file":"rsso-oauth.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/admin/components/rsso-oauth/rsso-oauth.component.ts","../../../../../../../libs/platform/admin/components/rsso-oauth/rsso-oauth.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { RX_RSSO_OAUTH } from './rsso-oauth.constant';\nimport { find, map } from 'lodash';\nimport { catchError, switchMap, tap } from 'rxjs/operators';\nimport { forkJoin, Subscription, throwError } from 'rxjs';\nimport { RX_APPLICATION, RxCurrentUserService, RxNotificationService } from '@helix/platform/shared/api';\nimport { RecordInstance, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxRssoOAuthConfigurationService } from './rsso-oauth-configuration.service';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { IRssoOAuthSection } from './rsso-oauth.types';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-rsso-oauth',\n  templateUrl: './rsso-oauth.component.html',\n  styleUrls: ['./rsso-oauth.component.scss']\n})\nexport class RssoOauthAdminComponent extends BaseViewComponent implements OnInit {\n  @ViewChild('serviceForm', { read: NgForm, static: false })\n  serviceForm: NgForm;\n\n  sections: IRssoOAuthSection[] = RX_RSSO_OAUTH.sections;\n  busy: Subscription;\n\n  constructor(\n    private rxRssoOAuthService: RxRssoOAuthConfigurationService,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.notifyPropertyChanged('api', {\n      isDirty: () => this.serviceForm.dirty\n    });\n\n    this.busy = this.rxRssoOAuthService\n      .getConfigs()\n      .pipe(\n        switchMap((rssoConfigurations) => {\n          const recondInstanceConfigs$ = map(rssoConfigurations, (configuration) => {\n            const oAuthProviderInConfiguration = find(configuration, {\n              id: String(RX_RSSO_OAUTH.fieldIds.oAuthProvider)\n            }).value;\n\n            const section = find(this.sections, { oAuthProvider: oAuthProviderInConfiguration });\n\n            section.recordInstanceId = find(configuration, {\n              id: String(RX_RECORD_DEFINITION.coreFieldIds.id)\n            }).value;\n\n            return this.rxRssoOAuthService.getConfigRecordInstance(section.recordInstanceId).pipe(\n              tap((recordInstance: RecordInstance) => {\n                map(section.fields, (field) => {\n                  field.value = recordInstance.fieldInstances[field.id].value;\n                });\n              })\n            );\n          });\n\n          return forkJoin(recondInstanceConfigs$);\n        })\n      )\n      .subscribe();\n  }\n\n  save(section: IRssoOAuthSection, form: NgForm): void {\n    section.isSaveInProgress = true;\n\n    this.rxRssoOAuthService\n      .getConfigRecordInstance(section.recordInstanceId)\n      .pipe(\n        switchMap((recordInstance) => {\n          map(section.fields, (field) => {\n            recordInstance.fieldInstances[field.id].value = field.value;\n          });\n\n          recordInstance.setFieldValue(RX_RSSO_OAUTH.fieldIds.oAuthProvider, section.oAuthProvider);\n          recordInstance.setFieldValue(RX_RSSO_OAUTH.fieldIds.bundleId, RX_APPLICATION.chatbotBundleId);\n\n          recordInstance.setFieldValue(\n            RX_RECORD_DEFINITION.coreFieldIds.description,\n            RX_RSSO_OAUTH.oAuthConfigurationDescription\n          );\n\n          return this.rxRssoOAuthService.saveConfigRecordInstance(recordInstance);\n        }),\n        catchError((err) => {\n          section.isSaveInProgress = false;\n\n          return throwError(err);\n        })\n      )\n      .subscribe((response) => {\n        if (response) {\n          section.recordInstanceId = response.id;\n        }\n\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.admin.rsso-auth.rsso-oauth-settings-saved.message')\n        );\n        form.form.markAsPristine();\n        section.isSaveInProgress = false;\n      });\n  }\n\n  isSaveButtonDisabled(form: NgForm): boolean {\n    return form.pristine || form.invalid;\n  }\n\n  isSaveButtonVisible(): boolean {\n    return this.rxCurrentUserService.isAdministrator();\n  }\n\n  isSaveInProgress(section): boolean {\n    return section.isSaveInProgress;\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.admin.rsso-auth.header.title' | translate }}\" [busy]=\"busy\">\n  <adapt-accordion multiselect=\"true\" class=\"pb-4\">\n    <form *ngFor=\"let section of sections\" name=\"section.formName\" #serviceForm=\"ngForm\">\n      <adapt-accordion-tab\n        [title]=\"section.title | translate\"\n        [isOpen]=\"section.isOpen\"\n        class=\"mb-3\"\n        [attr.rx-id]=\"section.rxId\"\n      >\n        <adapt-rx-textfield\n          *ngFor=\"let field of section.fields\"\n          [name]=\"field.name\"\n          [(ngModel)]=\"field.value\"\n          [required]=\"true\"\n          [attr.rx-id]=\"field.rxId\"\n          [label]=\"field.label | translate\"\n          [pattern]=\"field.pattern\"\n          class=\"d-block form-group\"\n          [isPassword]=\"field.type === 'password'\"\n        >\n        </adapt-rx-textfield>\n        <button\n          adapt-button\n          type=\"button\"\n          rx-id=\"save-button\"\n          btn-type=\"primary\"\n          class=\"mt-4\"\n          [disabled]=\"isSaveButtonDisabled(serviceForm)\"\n          [adaptInlineLoader]=\"isSaveInProgress(section)\"\n          *ngIf=\"isSaveButtonVisible()\"\n          (click)=\"save(section, serviceForm)\"\n        >\n          {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n        </button>\n      </adapt-accordion-tab>\n    </form>\n  </adapt-accordion>\n</rx-admin-settings>\n"]}