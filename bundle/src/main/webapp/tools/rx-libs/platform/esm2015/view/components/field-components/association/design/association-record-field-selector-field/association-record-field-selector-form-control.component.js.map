{"version":3,"file":"association-record-field-selector-form-control.component.js","sourceRoot":"","sources":["../../../../../../../../../../libs/platform/view/components/field-components/association/design/association-record-field-selector-field/association-record-field-selector-form-control.component.ts","../../../../../../../../../../libs/platform/view/components/field-components/association/design/association-record-field-selector-field/association-record-field-selector-form-control.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, ElementRef, Input, Renderer2, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { IFormControlComponent, IFormFocusable } from '@helix/platform/shared/api';\nimport {\n  IAssociatedRecordField,\n  IAssociationRecordFieldSelectorFormControlOptions\n} from './association-record-field-selector-form-control.interface';\nimport { noop, sortBy } from 'lodash';\nimport { AssociationRecordFieldSelectorEditorDialogComponent } from './association-record-field-selector-editor-dialog/association-record-field-selector-editor-dialog.component';\nimport { IAssociationRecordFieldSelectorEditorDialogConfig } from './association-record-field-selector-editor-dialog/association-record-field-selector-editor-dialog.interface';\nimport { RxModalService } from '@helix/platform/ui-kit';\n\n@Component({\n  selector: 'rx-association-record-field-selector-form-control',\n  templateUrl: './association-record-field-selector-form-control.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: AssociationRecordFieldSelectorFormControlComponent,\n      multi: true\n    }\n  ]\n})\nexport class AssociationRecordFieldSelectorFormControlComponent\n  extends ValueAccessor<IAssociatedRecordField[]>\n  implements IFormControlComponent, IFormFocusable\n{\n  @Input()\n  options: IAssociationRecordFieldSelectorFormControlOptions;\n\n  @ViewChild('openModalButton', { read: ElementRef, static: true })\n  openModalButton: ElementRef;\n\n  selectedFields: Array<IAssociatedRecordField & { label: string }> = [];\n\n  constructor(private rxModalService: RxModalService, private renderer: Renderer2) {\n    super();\n  }\n\n  focus(): void {\n    this.renderer.selectRootElement(this.openModalButton.nativeElement, true).click();\n  }\n\n  openFieldSelector(fieldToEdit?: IAssociatedRecordField): void {\n    this.rxModalService\n      .openModal({\n        title: this.options.label,\n        data: {\n          fields: this.options.fields,\n          selectedFields: this.value,\n          fieldToEdit: fieldToEdit,\n          isReadOnly: this.isDisabled\n        } as IAssociationRecordFieldSelectorEditorDialogConfig,\n        content: AssociationRecordFieldSelectorEditorDialogComponent\n      })\n      .then((fields) => {\n        this.value = fields;\n      })\n      .catch(noop);\n  }\n\n  onSetValue(): void {\n    this.updateSortedFieldList();\n  }\n\n  onWriteValue(value: IAssociatedRecordField[]): void {\n    this.updateSortedFieldList();\n  }\n\n  removeField(guid: string): void {\n    this.value = this.value.filter((field) => field.guid !== guid);\n  }\n\n  editField(field: IAssociatedRecordField): void {\n    this.openFieldSelector(field);\n  }\n\n  private updateSortedFieldList(): void {\n    this.selectedFields = sortBy(this.value, (field) => Number(field.data.index)).map((field) => ({\n      ...field,\n      label: this.options.fields.find((fieldDefinition) => fieldDefinition.id === Number(field.data.fieldId)).name\n    }));\n  }\n}\n","<button\n  #openModalButton\n  adapt-button\n  type=\"button\"\n  class=\"px-0 py-0\"\n  btn-type=\"tertiary\"\n  (click)=\"openFieldSelector()\"\n  [disabled]=\"isDisabled\"\n>\n  <adapt-icon name=\"plus_circle\" class=\"mr-1\"></adapt-icon>\n  {{ options.label }}\n</button>\n\n<ul class=\"list-unstyled mb-0 mt-2\" *ngIf=\"selectedFields.length > 0\">\n  <li class=\"border px-2 py-1 mb-1 d-flex align-items-center\" *ngFor=\"let field of selectedFields\">\n    <strong class=\"mr-auto\">{{ field.label }}</strong>\n\n    <button\n      class=\"d-icon-left-pencil p-1\"\n      adapt-button\n      btn-type=\"tertiary\"\n      size=\"small\"\n      type=\"button\"\n      [disabled]=\"isDisabled\"\n      (click)=\"editField(field)\"\n    ></button>\n\n    <button\n      class=\"d-icon-left-cross_adapt p-1\"\n      adapt-button\n      btn-type=\"tertiary\"\n      size=\"small\"\n      type=\"button\"\n      [disabled]=\"isDisabled\"\n      (click)=\"removeField(field.guid)\"\n    ></button>\n  </li>\n</ul>\n"]}