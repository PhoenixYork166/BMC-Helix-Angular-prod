{"version":3,"file":"utility-modals.service.js","sourceRoot":"","sources":["../../../../../../libs/platform/ui-kit/modal/utility-modals.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AACjD,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAC5C,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;;;;AAKvD,MAAM,OAAO,sBAAsB;IAGjC,YAAoB,cAA8B,EAAU,gBAAkC;QAA1E,mBAAc,GAAd,cAAc,CAAgB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAFtF,uBAAkB,GAA4B,IAAI,CAAC;IAEsC,CAAC;IAElG,qBAAqB,CAAC,OAAe;QACnC,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;YACjC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,8CAA8C,CAAC;YACpF,UAAU,EAAE,QAAQ,CAAC,WAAW,CAAC,OAAO;YACxC,OAAO,EAAE,GAAG,OAAO,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAClD,8DAA8D,CAC/D,EAAE;SACJ,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CACL,OAAe,EACf,QAAgB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,8CAA8C,CAAC,EAC7F,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,OAAO;QAEpC,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;YACjC,KAAK;YACL,UAAU,EAAE,KAAK;YACjB,OAAO;SACR,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB;QACnB,6CAA6C;QAC7C,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC5B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,cAAc;iBAC1C,OAAO,CACN;gBACE,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,8CAA8C,CAAC;gBACpF,UAAU,EAAE,QAAQ,CAAC,WAAW,CAAC,OAAO;gBACxC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,qDAAqD,CAAC;aAC9F,EACD,KAAK,CACN;iBACA,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACf,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;gBAE/B,OAAO,MAAM,CAAC;YAChB,CAAC,CAAC,CAAC;SACN;QAED,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;;mHA/CU,sBAAsB;uHAAtB,sBAAsB,cAFrB,MAAM;2FAEP,sBAAsB;kBAHlC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { RxModalService } from './modal.service';\nimport { RX_MODAL } from './modal.constant';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxUtilityModalsService {\n  private confirmationResult: Promise<boolean> | null = null;\n\n  constructor(private rxModalService: RxModalService, private translateService: TranslateService) {}\n\n  confirmExternalChange(message: string): Promise<boolean> {\n    return this.rxModalService.confirm({\n      title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n      modalStyle: RX_MODAL.modalStyles.warning,\n      message: `${message} ${this.translateService.instant(\n        'com.bmc.arsys.rx.client.common.continue-confirmation.message'\n      )}`\n    });\n  }\n\n  confirm(\n    message: string,\n    title: string = this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n    style = RX_MODAL.modalStyles.warning\n  ): Promise<boolean> {\n    return this.rxModalService.confirm({\n      title,\n      modalStyle: style,\n      message\n    });\n  }\n\n  confirmUnsavedChanges(): Promise<boolean> {\n    // allow to open only one confirmation dialog\n    if (!this.confirmationResult) {\n      this.confirmationResult = this.rxModalService\n        .confirm(\n          {\n            title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n            modalStyle: RX_MODAL.modalStyles.warning,\n            message: this.translateService.instant('com.bmc.arsys.rx.client.common.unsaved-data.message')\n          },\n          false\n        )\n        .then((result) => {\n          this.confirmationResult = null;\n\n          return result;\n        });\n    }\n\n    return this.confirmationResult;\n  }\n}\n"]}