{"version":3,"file":"association-designer.service.js","sourceRoot":"","sources":["../../../../../../libs/platform/association/designer/association-designer.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { IAssociationDefinitionModel } from './association-designer.types';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  IRecordDefinition,\n  RX_RECORD_DEFINITION,\n  RxRecordDefinitionCacheService,\n  RxRecordDefinitionService\n} from '@helix/platform/record/api';\nimport { Injectable } from '@angular/core';\nimport { RxDefinitionNameService } from '@helix/platform/shared/api';\nimport { IAssociationDefinition, RX_ASSOCIATION_DEFINITION, RxModalityType } from '@helix/platform/association/api';\nimport { find } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AssociationDesignerService {\n  constructor(\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxRecordDefinitionService: RxRecordDefinitionService,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService\n  ) {}\n\n  getDefinitionModelFromDefinition(definition: IAssociationDefinition): IAssociationDefinitionModel {\n    return {\n      cardinality: [find(Object.values(RX_ASSOCIATION_DEFINITION.cardinality), { value: definition.cardinality })],\n      customizationOptions: {\n        scope: definition.scope,\n        allowOverlay: definition.allowOverlay\n      },\n      description: definition.description,\n      guid: definition.guid,\n      isEnabled: definition.isEnabled,\n      lastChangedBy: definition.lastChangedBy,\n      lastUpdateTime: definition.lastUpdateTime,\n      name: definition.name,\n      nodeAId: definition.nodeAId,\n      nodeAKeys: definition.nodeAKeys,\n      nodeAModality: definition.nodeAModality,\n      nodeAName: definition.nodeAName,\n      nodeBId: definition.nodeBId,\n      nodeBKeys: definition.nodeBKeys,\n      nodeBName: definition.nodeBName,\n      overlayDescriptor: definition.overlayDescriptor,\n      overlayGroupId: definition.overlayGroupId,\n      shouldCascadeDelete: definition.shouldCascadeDelete,\n      tags: definition.tags\n    };\n  }\n\n  getDefinitionFromDefinitionModel(model: IAssociationDefinitionModel): IAssociationDefinition {\n    return {\n      allowOverlay: model.customizationOptions.allowOverlay,\n      cardinality: model.cardinality[0].value,\n      description: model.description,\n      guid: model.guid,\n      isEnabled: model.isEnabled,\n      name: model.name,\n      lastUpdateTime: model.lastUpdateTime,\n      nodeAId: model.nodeAId,\n      nodeAKeys: model.nodeAKeys,\n      nodeAModality:\n        model.cardinality[0].value === RX_ASSOCIATION_DEFINITION.cardinality.manyToMany.value\n          ? RxModalityType.Optional\n          : model.nodeAModality,\n      nodeAName: model.nodeAName,\n      nodeBId: model.nodeBId,\n      nodeBKeys:\n        model.cardinality[0].value === RX_ASSOCIATION_DEFINITION.cardinality.manyToMany.value\n          ? [RX_RECORD_DEFINITION.coreFieldIds.id]\n          : model.nodeBKeys,\n      nodeBName: model.nodeBName,\n      scope: model.customizationOptions.scope,\n      shouldCascadeDelete:\n        model.cardinality[0].value === RX_ASSOCIATION_DEFINITION.cardinality.manyToMany.value\n          ? false\n          : model.shouldCascadeDelete,\n      overlayDescriptor: model.overlayDescriptor,\n      overlayGroupId: model.overlayGroupId,\n      tags: model.tags\n    };\n  }\n\n  getRecordDefinition(name: string, forceReload = false): Observable<IRecordDefinition> {\n    return forceReload\n      ? this.rxRecordDefinitionService.get(name, {}, true)\n      : this.rxRecordDefinitionCacheService.getRecordDefinition(name);\n  }\n\n  getForeignKeyFieldName(definitionModel: IAssociationDefinitionModel): string {\n    const fieldNameBase =\n      definitionModel.nodeAName || this.rxDefinitionNameService.getDisplayName(definitionModel.nodeAId);\n\n    return fieldNameBase.toUpperCase() + '_ID';\n  }\n\n  getForeignKeyFieldId(definitionModel: IAssociationDefinitionModel, forceReload = false): Observable<number> {\n    return this.getRecordDefinition(definitionModel.nodeBId, forceReload).pipe(\n      map((recordDefinition: IRecordDefinition) => {\n        const foreignKeyFieldName = this.getForeignKeyFieldName(definitionModel);\n\n        return recordDefinition.fieldDefinitions.find((field) => field.name === foreignKeyFieldName)?.id as number;\n      })\n    );\n  }\n}\n"]}