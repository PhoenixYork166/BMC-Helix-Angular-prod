{"version":3,"file":"extension-container.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/field-components/extension-container/runtime/extension-container.component.ts","../../../../../../../../../libs/platform/view/components/field-components/extension-container/runtime/extension-container.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,iBAAiB,EAAE,MAAM,8BAA8B,CAAC;AACjE,OAAO,EAEL,8BAA8B,EAC9B,yBAAyB,EAC1B,MAAM,4BAA4B,CAAC;AACpC,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;;;;AAO3C,MAAM,OAAO,6BAA8B,SAAQ,iBAAiB;IAIlE,YACU,8BAA8D,EAC9D,yBAAoD;QAE5D,KAAK,EAAE,CAAC;QAHA,mCAA8B,GAA9B,8BAA8B,CAAgC;QAC9D,8BAAyB,GAAzB,yBAAyB,CAA2B;QAL9D,sBAAiB,GAA0C,EAAE,CAAC;IAQ9D,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QAEjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,MAAmC,EAAE,EAAE;YAC7F,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB,CAAC,IAAY;QAC/B,IAAI,CAAC,8BAA8B,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,gBAAgB,EAAE,EAAE;YAC3F,gBAAgB,CAAC,oBAAoB;gBACnC,IAAI,CAAC,yBAAyB,CAAC,4BAA4B,CAAC,gBAAgB,CAAC,CAAC;YAEhF,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC;YAEhD,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;IACL,CAAC;;0HA5BU,6BAA6B;8GAA7B,6BAA6B,qFCd1C,6FACA;2FDaa,6BAA6B;kBAJzC,SAAS;mBAAC;oBACT,QAAQ,EAAE,wBAAwB;oBAClC,WAAW,EAAE,sCAAsC;iBACpD","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport {\n  IRecordDefinition,\n  RxRecordDefinitionCacheService,\n  RxRecordDefinitionService\n} from '@helix/platform/record/api';\nimport { takeUntil } from 'rxjs/operators';\nimport { IRxExtensionContainerConfig } from './extension-container.types';\n\n@Component({\n  selector: 'rx-extension-container',\n  templateUrl: './extension-container.component.html'\n})\nexport class RxExtensionContainerComponent extends BaseViewComponent implements OnInit {\n  recordDefinitions: { [name: string]: IRecordDefinition } = {};\n  state: IRxExtensionContainerConfig;\n\n  constructor(\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxRecordDefinitionService: RxRecordDefinitionService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.config.pipe(takeUntil(this.destroyed$)).subscribe((config: IRxExtensionContainerConfig) => {\n      this.state = config;\n    });\n  }\n\n  loadRecordDefinition(name: string): void {\n    this.rxRecordDefinitionCacheService.getRecordDefinition(name).subscribe((recordDefinition) => {\n      recordDefinition.fieldDefinitionsById =\n        this.rxRecordDefinitionService.buildFieldDefinitionsByIdMap(recordDefinition);\n\n      this.recordDefinitions[name] = recordDefinition;\n\n      this.notifyPropertyChanged('recordDefinitions', this.recordDefinitions);\n    });\n  }\n}\n","<rx-runtime-view-canvas-outlet [hidden]=\"state.hidden\"></rx-runtime-view-canvas-outlet>\n"]}