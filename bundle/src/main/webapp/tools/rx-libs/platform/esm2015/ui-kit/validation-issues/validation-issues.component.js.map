{"version":3,"file":"validation-issues.component.js","sourceRoot":"","sources":["../../../../../../libs/platform/ui-kit/validation-issues/validation-issues.component.ts","../../../../../../libs/platform/ui-kit/validation-issues/validation-issues.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAU,MAAM,EAAE,MAAM,eAAe,CAAC;AAC/E,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AAEvD,OAAO,EAA6C,mBAAmB,EAAE,MAAM,2BAA2B,CAAC;;;;;AAO3G,MAAM,OAAO,2BAA2B;IAkBtC,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAbtD,kBAAa,GAA8B,EAAE,CAAC;QAG9C,iBAAY,GAAmC,IAAI,YAAY,EAAE,CAAC;QAIlE,wBAAmB,GAAG,mBAAmB,CAAC;IAMe,CAAC;IAJ1D,cAAc,CAAC,eAAiC;QAC9C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC1C,CAAC;IAID,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,8DAA8D,EAAE;YAC7G,yBAAyB,EAAE,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE;SACxE,CAAC,CAAC;IACL,CAAC;;wHAxBU,2BAA2B;4GAA3B,2BAA2B,2MCVxC,kqCAqCA;2FD3Ba,2BAA2B;kBALvC,SAAS;mBAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,WAAW,EAAE,oCAAoC;oBACjD,SAAS,EAAE,CAAC,oCAAoC,CAAC;iBAClD;uGAGC,yBAAyB;sBADxB,KAAK;gBAIN,aAAa;sBADZ,KAAK;gBAIN,YAAY;sBADX,MAAM","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { IValidationIssue, IValidationIssueSection, ValidationIssueType } from './validation-issues.types';\n\n@Component({\n  selector: 'rx-validation-issues',\n  templateUrl: './validation-issues.component.html',\n  styleUrls: ['./validation-issues.component.scss']\n})\nexport class RxValidationIssuesComponent implements OnInit {\n  @Input()\n  definitionTypeDisplayName: string;\n\n  @Input()\n  issueSections: IValidationIssueSection[] = [];\n\n  @Output()\n  correctIssue: EventEmitter<IValidationIssue> = new EventEmitter();\n\n  emptyText: string;\n\n  ValidationIssueType = ValidationIssueType;\n\n  onCorrectIssue(validationIssue: IValidationIssue) {\n    this.correctIssue.emit(validationIssue);\n  }\n\n  constructor(private translateService: TranslateService) {}\n\n  ngOnInit(): void {\n    this.emptyText = this.translateService.instant('com.bmc.arsys.rx.client.designer.definition-is-valid.message', {\n      definitionTypeDisplayName: this.definitionTypeDisplayName.toLowerCase()\n    });\n  }\n}\n","<adapt-accordion [config]=\"{ multiselect: true, tabs: [] }\">\n  <adapt-accordion-tab *ngFor=\"let issueSection of issueSections\" [isOpen]=\"true\" [title]=\"issueSection.title\">\n    <div\n      *ngFor=\"let issue of issueSection.issues\"\n      [ngClass]=\"{\n        'issue-warning': issue.type === ValidationIssueType.Warning,\n        'issue-error': issue.type === ValidationIssueType.Error\n      }\"\n      class=\"issue\"\n    >\n      <span class=\"d-icon-exclamation_triangle\"></span>\n\n      <div class=\"issue-info\">\n        <div class=\"issue-type\">{{ issue.type | titlecase }}</div>\n        <div class=\"description\">{{ issue.description }}</div>\n        <button\n          *ngIf=\"!issue.disableCorrection\"\n          (click)=\"onCorrectIssue(issue)\"\n          type=\"button\"\n          class=\"btn btn-link correct-issue\"\n        >\n          Correct\n        </button>\n      </div>\n    </div>\n  </adapt-accordion-tab>\n</adapt-accordion>\n\n<adapt-alert\n  *ngIf=\"issueSections.length === 0\"\n  class=\"p-3 definition-valid-message\"\n  [config]=\"{\n    content: emptyText,\n    variant: 'success',\n    type: 'inline'\n  }\"\n></adapt-alert>\n"]}