import { Component, Injector } from '@angular/core';
import { ApiEditorBase } from '../ipaas-base-apis/api-editor/api-editor-base.class';
import { ActiveModalRef } from '@bmc-ux/adapt-angular';
import { RxMulesoftApisService } from './mulesoft-apis.service';
import * as i0 from "@angular/core";
import * as i1 from "./mulesoft-apis.service";
import * as i2 from "@bmc-ux/adapt-angular";
import * as i3 from "@helix/platform/ui-kit";
import * as i4 from "@angular/forms";
import * as i5 from "@angular/common";
import * as i6 from "@ngx-translate/core";
export class MulesoftApiEditorComponent extends ApiEditorBase {
    constructor(rxMulesoftApisService, activeModalRef, injector) {
        super(activeModalRef, injector);
        this.rxMulesoftApisService = rxMulesoftApisService;
        this.activeModalRef = activeModalRef;
        this.injector = injector;
    }
    ngOnInit() {
        super.ngOnInit();
    }
    getOrganizationsAndEnvironments() {
        return this.rxMulesoftApisService.getOrganizationsAndEnvironments();
    }
    getApiPathDefinitions(environment) {
        return this.rxMulesoftApisService.getApiPathDefinitions(this.selectedOrganization.id, environment.id);
    }
    getApiDefinition(apiId) {
        return this.rxMulesoftApisService.getApiDefinition(apiId);
    }
    editApiDefinition(apiDefinition, formValue) {
        apiDefinition.organizationId = formValue.organization[0].id;
        apiDefinition.environmentId = formValue.environment[0].id;
        return this.rxMulesoftApisService.editApiDefinition(apiDefinition);
    }
    createApiDefinition(apiDefinition, formValue) {
        apiDefinition.organizationId = formValue.organization[0].id;
        apiDefinition.environmentId = formValue.environment[0].id;
        return this.rxMulesoftApisService.createApiDefinition(apiDefinition);
    }
    getEnvironmentList() {
        var _a;
        return ((_a = this.organizations.find((value) => value.id === this.selectedOrganization.id)) === null || _a === void 0 ? void 0 : _a.environments) || [];
    }
}
MulesoftApiEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.1.3", ngImport: i0, type: MulesoftApiEditorComponent, deps: [{ token: i1.RxMulesoftApisService }, { token: i2.ActiveModalRef }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });
MulesoftApiEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.1.3", type: MulesoftApiEditorComponent, selector: "rx-mulesoft-api-editor", usesInheritance: true, ngImport: i0, template: "<div class=\"modal-body api-editor-modal-body\">\n  <rx-busy-indicator [options]=\"{ busy: busy, loaderType: 'section' }\"></rx-busy-indicator>\n\n  <form [formGroup]=\"ipaasApiEditorForm\">\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <h6 class=\"mt-1 mb-3\">\n          {{ 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.api-path.label' | translate }}\n        </h6>\n\n        <adapt-rx-select\n          formControlName=\"organization\"\n          [options]=\"organizations\"\n          [optionFormatter]=\"optionFormatterName\"\n          rx-id=\"organization\"\n          label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.org' | translate }}\"\n          (onSelectionChange)=\"getEnvironments($event.options[0])\"\n          class=\"form-group d-block\"\n        >\n        </adapt-rx-select>\n\n        <adapt-rx-select\n          formControlName=\"environment\"\n          [options]=\"environments\"\n          [optionFormatter]=\"optionFormatterName\"\n          rx-id=\"environment\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.jitterbit-apis.environment.label' | translate }}\"\n          (onSelectionChange)=\"getApiPaths($event.options[0])\"\n          class=\"form-group d-block\"\n        >\n        </adapt-rx-select>\n\n        <adapt-rx-select\n          formControlName=\"apiPath\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.api-path.label' | translate }}\"\n          [options]=\"apiPaths\"\n          [enableFilter]=\"true\"\n          [loadingState]=\"loadingState\"\n          (onSelectionChange)=\"getApiMethods($event.options[0])\"\n          [tooltip]=\"{\n            iconName: 'question_circle_o',\n            content: 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.api-paths.tooltip' | translate,\n            placement: 'right',\n            popoverMode: true\n          }\"\n        >\n        </adapt-rx-select>\n      </div>\n\n      <div class=\"col-md-4\">\n        <h6 class=\"mt-1 mb-3\">\n          {{ 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.api-properties.label' | translate }}\n        </h6>\n\n        <adapt-rx-select-editable\n          formControlName=\"apiGroupName\"\n          [options]=\"groupNameList\"\n          rx-id=\"api-group-name\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.ipaas-apis.api-group-name.label' | translate }}\"\n          class=\"form-group d-block\"\n          customOptionTitle=\"{{ 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.add-new.label' | translate }}\"\n          [customOptionOnTop]=\"true\"\n          [tooltip]=\"{\n            iconName: 'question_circle_o',\n            content: 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.api-group-name.tooltip' | translate,\n            placement: 'right',\n            popoverMode: true\n          }\"\n        >\n        </adapt-rx-select-editable>\n\n        <adapt-rx-textfield\n          formControlName=\"apiName\"\n          rx-id=\"api-name\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.jitterbit-apis.api-name.label' | translate }}\"\n          class=\"form-group d-block\"\n          [tooltip]=\"\n            isEditMode\n              ? {\n                  iconName: 'question_circle_o',\n                  content: 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.edit-api.api-name.tooltip' | translate,\n                  placement: 'right',\n                  popoverMode: true\n                }\n              : null\n          \"\n        >\n        </adapt-rx-textfield>\n\n        <adapt-rx-select\n          formControlName=\"requestMethod\"\n          [options]=\"methodTypeOptions\"\n          (onSelectionChange)=\"getAuthTypes($event.options[0])\"\n          rx-id=\"request-method\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.request-method.label' | translate }}\"\n          class=\"form-group d-block\"\n        >\n        </adapt-rx-select>\n\n        <adapt-rx-select\n          formControlName=\"authorizationType\"\n          [options]=\"authTypeOptions\"\n          [optionFormatter]=\"optionFormatterLabel\"\n          (onSelectionChange)=\"getAuthTypeFields($event.options[0])\"\n          rx-id=\"authorization-type\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.authorization-type.label' | translate }}\"\n          class=\"form-group d-block\"\n        >\n        </adapt-rx-select>\n\n        <ng-container *ngIf=\"!isCustomAuthType\">\n          <div\n            formArrayName=\"authTypeDetails\"\n            *ngFor=\"let authType of ipaasApiEditorForm.get('authTypeDetails')['controls']; let $index = index\"\n          >\n            <div [formGroupName]=\"$index\">\n              <adapt-rx-textfield\n                class=\"form-group d-block\"\n                *ngFor=\"let field of authTypeFields\"\n                [label]=\"field.labelKey | translate\"\n                [isPassword]=\"field.isPassword\"\n                [formControlName]=\"field.name\"\n                [attr.rx-id]=\"field.rxId\"\n                [required]=\"field.isRequired\"\n              >\n              </adapt-rx-textfield>\n            </div>\n          </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"isCustomAuthType\">\n          <button\n            adapt-button\n            type=\"button\"\n            btn-type=\"tertiary\"\n            class=\"d-icon-plus_circle px-0 d-block\"\n            rx-id=\"add-button\"\n            (click)=\"addCustomAuthTypeHeader()\"\n          >\n            {{ 'com.bmc.arsys.rx.client.admin.ipaas-apis.add-http-header.label' | translate }}\n          </button>\n          <div\n            formArrayName=\"customAuthTypeHeaders\"\n            *ngFor=\"\n              let customAuthTypeHeaders of ipaasApiEditorForm.get('customAuthTypeHeaders')['controls'];\n              let $index = index\n            \"\n          >\n            <div [formGroupName]=\"$index\">\n              <div class=\"card form-group\">\n                <div class=\"card-block\">\n                  <div class=\"d-flex justify-content-between\">\n                    <adapt-rx-control-label\n                      label=\"{{ 'com.bmc.arsys.rx.client.admin.ipaas-apis.http-header.label' | translate }}\"\n                      showRequiredLabel=\"true\"\n                    ></adapt-rx-control-label>\n                    <span\n                      class=\"d-icon-cross_adapt form-group alert-link\"\n                      (click)=\"removeCustomAuthTypeHeader($index)\"\n                    ></span>\n                  </div>\n                  <adapt-rx-textfield\n                    formControlName=\"key\"\n                    placeholder=\"{{\n                      'com.bmc.arsys.rx.client.name-value-pairs-editor.enter-name.placeholder' | translate\n                    }}\"\n                    class=\"d-block form-group\"\n                  ></adapt-rx-textfield>\n                  <adapt-rx-textfield\n                    formControlName=\"value\"\n                    placeholder=\"{{\n                      'com.bmc.arsys.rx.client.name-value-pairs-editor.enter-value.placeholder' | translate\n                    }}\"\n                    class=\"d-block\"\n                  ></adapt-rx-textfield>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <button\n            adapt-button\n            type=\"button\"\n            btn-type=\"tertiary\"\n            class=\"d-icon-plus_circle px-0 d-block\"\n            rx-id=\"add-button\"\n            (click)=\"addCustomAuthTypeQueryParam()\"\n          >\n            {{ 'com.bmc.arsys.rx.client.admin.ipaas-apis.add-query-parameter.label' | translate }}\n          </button>\n          <div\n            formArrayName=\"customAuthTypeQueryParams\"\n            *ngFor=\"\n              let customAuthTypeQueryParams of ipaasApiEditorForm.get('customAuthTypeQueryParams')['controls'];\n              let $index = index\n            \"\n          >\n            <div [formGroupName]=\"$index\">\n              <div class=\"card form-group\">\n                <div class=\"card-block\">\n                  <div class=\"d-flex justify-content-between\">\n                    <adapt-rx-control-label\n                      label=\"{{ 'com.bmc.arsys.rx.client.admin.ipaas-apis.query-parameter.label' | translate }}\"\n                      showRequiredLabel=\"true\"\n                    ></adapt-rx-control-label>\n                    <span\n                      class=\"d-icon-cross_adapt form-group alert-link\"\n                      (click)=\"removeCustomAuthTypeQueryParam($index)\"\n                    ></span>\n                  </div>\n                  <adapt-rx-textfield\n                    formControlName=\"key\"\n                    placeholder=\"{{\n                      'com.bmc.arsys.rx.client.name-value-pairs-editor.enter-name.placeholder' | translate\n                    }}\"\n                    class=\"d-block form-group\"\n                  ></adapt-rx-textfield>\n                  <adapt-rx-textfield\n                    formControlName=\"value\"\n                    placeholder=\"{{\n                      'com.bmc.arsys.rx.client.name-value-pairs-editor.enter-value.placeholder' | translate\n                    }}\"\n                    class=\"d-block\"\n                  ></adapt-rx-textfield>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n\n      <div class=\"col-md-4\">\n        <h6 class=\"my-1\">\n          {{ 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.api-variables.label' | translate }}\n        </h6>\n\n        <adapt-tabset [type]=\"'pills'\" [tab-active]=\"activeIndex\" (tab-active-changed)=\"tabChanged($event)\">\n          <adapt-tab-panel\n            adapt-tab-title=\"{{ 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.headers.label' | translate }}\"\n          >\n            <button\n              adapt-button\n              type=\"button\"\n              btn-type=\"tertiary\"\n              class=\"d-icon-plus_circle px-0 align-self-start\"\n              rx-id=\"add-button\"\n              (click)=\"addHeader()\"\n            >\n              {{ 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.add-header.label' | translate }}\n            </button>\n\n            <div\n              formArrayName=\"headers\"\n              *ngFor=\"let header of ipaasApiEditorForm.get('headers')['controls']; let $index = index\"\n            >\n              <div class=\"d-flex\" [formGroupName]=\"$index\">\n                <adapt-rx-textfield\n                  formControlName=\"name\"\n                  class=\"d-block form-group pr-2 flex-fill\"\n                ></adapt-rx-textfield>\n                <button\n                  class=\"d-icon-minus_circle text-danger form-group px-0\"\n                  adapt-button\n                  btn-type=\"tertiary\"\n                  type=\"button\"\n                  (click)=\"removeHeader($index)\"\n                ></button>\n              </div>\n            </div>\n          </adapt-tab-panel>\n\n          <adapt-tab-panel\n            adapt-tab-title=\"{{\n              'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.query-parameters.label' | translate\n            }}\"\n          >\n            <button\n              adapt-button\n              type=\"button\"\n              btn-type=\"tertiary\"\n              class=\"d-icon-plus_circle px-0 align-self-start\"\n              rx-id=\"add-button\"\n              (click)=\"addQueryParameter()\"\n            >\n              {{ 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.add-query-parameter.label' | translate }}\n            </button>\n\n            <div\n              formArrayName=\"queryParameters\"\n              *ngFor=\"let parameter of ipaasApiEditorForm.get('queryParameters')['controls']; let $index = index\"\n            >\n              <div class=\"d-flex\" [formGroupName]=\"$index\">\n                <adapt-rx-textfield\n                  formControlName=\"name\"\n                  class=\"d-block form-group pr-2 flex-fill\"\n                ></adapt-rx-textfield>\n                <button\n                  class=\"d-icon-minus_circle text-danger form-group px-0\"\n                  adapt-button\n                  btn-type=\"tertiary\"\n                  type=\"button\"\n                  (click)=\"removeQueryParameter($index)\"\n                ></button>\n              </div>\n            </div>\n          </adapt-tab-panel>\n        </adapt-tabset>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"modal-footer\">\n  <button\n    adapt-button\n    type=\"button\"\n    btn-type=\"primary\"\n    [disabled]=\"isSaveButtonDisabled()\"\n    (click)=\"save()\"\n    rx-id=\"save-button\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n  <button adapt-button type=\"button\" btn-type=\"secondary\" rx-id=\"cancel-button\" (click)=\"cancel()\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n", styles: [":root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \"Open Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}adapt-rx-select,adapt-rx-select-editable,adapt-rx-textfield{max-width:400px}.api-editor-modal-body{height:645px}.modal-body{overflow-y:auto}\n"], components: [{ type: i3.RxBusyIndicatorComponent, selector: "rx-busy-indicator", inputs: ["options"] }, { type: i2.AdaptRxSelectComponent, selector: "adapt-rx-select", inputs: ["options", "emptyOption", "optionFormatter", "optionContentTemplate", "disabledOptionResolver", "titleFormatter", "focusFirst", "texts", "multiple", "singleSelectStyle", "enableFilter", "inline", "selectAllButton", "deselectAllButton", "loadMoreButton", "loadMoreCallback", "loadMoreInProgress", "loadingState", "placeholder", "size", "closeOnSelect", "placement", "appendToBody", "popupMaxHeight", "popupClass", "pageSize", "ariaInvalid", "virtualScroll", "virtualScrollItemSize", "virtualScrollTemplateCacheSize", "minBufferPx", "maxBufferPx"], outputs: ["onSelectionChange", "onPopupOpenChange", "onFilterValueChange"] }, { type: i2.AdaptRxSelectEditableComponent, selector: "adapt-rx-select-editable", inputs: ["options", "placeholder", "customOptionTitle", "customOptionOnTop", "size", "menuMaxHeight", "placement", "appendToBody", "mobileView", "disabledStyleForReadonlyState", "popupClass", "customValueMatcher"] }, { type: i2.AdaptRxTextfieldComponent, selector: "adapt-rx-textfield", inputs: ["prepend", "append", "isPassword", "autocomplete", "placeholder", "size", "fieldTagText", "fieldTagType", "showValidState", "showValidStateIcon", "showInvalidStateIcon", "validStateMessage", "disabledStyleForReadonlyState"] }, { type: i2.AdaptButtonComponent, selector: "adapt-button, button[adapt-button], a[adapt-button]", inputs: ["btn-type", "size", "disabled", "type", "tabIndex"], exportAs: ["adaptBtn"] }, { type: i2.AdaptRxControlLabelComponent, selector: "adapt-rx-control-label", inputs: ["for", "id", "label", "subLabel", "requiredLabel", "showRequiredLabel", "tooltip", "testID"] }, { type: i2.AdaptTabsComponent, selector: "adapt-tabset", inputs: ["showTabToolbar", "customCssTabContent", "fullHeight", "texts", "enableDnD", "customClassTabList", "allow-tabs-adding", "id", "testID", "dropdown-title", "fadeColor", "carouselMode", "justify", "type", "tab-active"], outputs: ["tab-index-closed", "tab-active-changed", "add-tab-clicked", "tabClicked", "tabDropped"], exportAs: ["adaptTabset"] }, { type: i2.AdaptTabsPanelComponent, selector: "adapt-tab-panel, div[tab-panel]", inputs: ["isActive", "badge-type", "animateBadge", "showBadgeAlert", "badgeAlertVariant", "badgeCustomClass", "adapt-tab-title", "disabled", "isHidden", "icon", "subtext", "icon-right", "icon-close", "aria-label", "aria-labelledby", "kebabMenu", "id", "renderContentWhenInactive", "badge"] }], directives: [{ type: i4.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i4.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i4.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i4.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i4.FormArrayName, selector: "[formArrayName]", inputs: ["formArrayName"] }, { type: i4.FormGroupName, selector: "[formGroupName]", inputs: ["formGroupName"] }, { type: i4.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }], pipes: { "translate": i6.TranslatePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.1.3", ngImport: i0, type: MulesoftApiEditorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'rx-mulesoft-api-editor',
                    templateUrl: '../ipaas-base-apis/api-editor/api-editor.component.html',
                    styleUrls: ['../ipaas-base-apis/api-editor/api-editor.component.scss']
                }]
        }], ctorParameters: function () { return [{ type: i1.RxMulesoftApisService }, { type: i2.ActiveModalRef }, { type: i0.Injector }]; } });
//# sourceMappingURL=mulesoft-api-editor.component.js.map