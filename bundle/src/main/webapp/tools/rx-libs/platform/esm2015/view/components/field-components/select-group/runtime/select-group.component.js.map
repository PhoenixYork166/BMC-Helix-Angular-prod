{"version":3,"file":"select-group.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/field-components/select-group/runtime/select-group.component.ts","../../../../../../../../../libs/platform/view/components/field-components/select-group/runtime/select-group.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACjD,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAClC,OAAO,EAAE,iBAAiB,EAAE,MAAM,8BAA8B,CAAC;;;AAQjE,MAAM,OAAO,oBAAqB,SAAQ,iBAAiB;IAJ3D;;QAQU,oBAAe,GAA2C,IAAI,GAAG,EAAE,CAAC;KAsB7E;IApBC,sBAAsB,CAAC,UAAkB,EAAE,SAAoC;QAC7E,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;IAClD,CAAC;IAED,wBAAwB,CAAC,iBAAyB;QAChD,MAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;QAElE,OAAO,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IACtD,CAAC;IAED,uBAAuB,CAAC,iBAAyB;QAC/C,MAAM,cAAc,GAAG,iBAAiB,GAAG,CAAC,CAAC;QAC7C,MAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAE3D,IAAI,SAAS,EAAE;YACb,SAAS,CAAC,eAAe,EAAE,CAAC;YAE5B,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,CAAC;SAC9C;IACH,CAAC;;iHAzBU,oBAAoB;qGAApB,oBAAoB,4GCVjC,mEACA;2FDSa,oBAAoB;kBAJhC,SAAS;mBAAC;oBACT,QAAQ,EAAE,iBAAiB;oBAC3B,WAAW,EAAE,+BAA+B;iBAC7C;8BAGC,MAAM;sBADL,KAAK","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { SelectGroupFieldComponent } from './select-group-field.component';\nimport { ISelectGroupConfig } from './select-group.types';\n\n@Component({\n  selector: 'rx-select-group',\n  templateUrl: './select-group.component.html'\n})\nexport class SelectGroupComponent extends BaseViewComponent {\n  @Input()\n  config: Observable<ISelectGroupConfig>;\n\n  private fieldComponents: Map<number, SelectGroupFieldComponent> = new Map();\n\n  registerFieldComponent(fieldIndex: number, component: SelectGroupFieldComponent): void {\n    this.fieldComponents.set(fieldIndex, component);\n  }\n\n  getValueForPreviousField(currentFieldIndex: number): any {\n    const component = this.fieldComponents.get(currentFieldIndex - 1);\n\n    return component ? component.getFieldValue() : null;\n  }\n\n  resetValueForNextFields(currentFieldIndex: number): void {\n    const nextFieldIndex = currentFieldIndex + 1;\n    const component = this.fieldComponents.get(nextFieldIndex);\n\n    if (component) {\n      component.resetFieldValue();\n\n      this.resetValueForNextFields(nextFieldIndex);\n    }\n  }\n}\n","<rx-runtime-view-canvas-outlet></rx-runtime-view-canvas-outlet>\n"]}