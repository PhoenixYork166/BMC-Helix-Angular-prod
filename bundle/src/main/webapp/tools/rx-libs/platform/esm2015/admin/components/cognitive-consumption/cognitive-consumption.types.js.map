{"version":3,"file":"cognitive-consumption.types.js","sourceRoot":"","sources":["../../../../../../../libs/platform/admin/components/cognitive-consumption/cognitive-consumption.types.ts"],"names":[],"mappings":"AAUA,MAAM,CAAN,IAAY,UAOX;AAPD,WAAY,UAAU;IACpB,2BAAa,CAAA;IACb,uCAAyB,CAAA;IACzB,mCAAqB,CAAA;IACrB,iDAAmC,CAAA;IACnC,yDAA2C,CAAA;IAC3C,+BAAiB,CAAA;AACnB,CAAC,EAPW,UAAU,KAAV,UAAU,QAOrB;AAED,MAAM,CAAN,IAAY,SAGX;AAHD,WAAY,SAAS;IACnB,0BAAa,CAAA;IACb,mDAAsC,CAAA;AACxC,CAAC,EAHW,SAAS,KAAT,SAAS,QAGpB","sourcesContent":["import {\n  AdaptChartAxis,\n  AdaptChartHeader,\n  AdaptChartLegend,\n  AdaptChartSeries,\n  AdaptChartSeriesFormat,\n  AdaptStackedChartType\n} from '@bmc-ux/adapt-charts';\nimport { IPlainObject } from '@helix/platform/shared/api';\n\nexport enum ChartGroup {\n  Chat = 'chat',\n  ChatByUser = 'chatbyuser',\n  Classify = 'classify',\n  SearchDiskUsage = 'searchdiskusage',\n  SearchDocumentUsage = 'searchdocumentusage',\n  Search = 'search'\n}\n\nexport enum ChartType {\n  Area = 'area',\n  HorizontalColumn = 'horizontal-column'\n}\n\nexport interface ICognitiveConsumptionChart {\n  title: string;\n  type: string;\n}\n\nexport interface ICognitiveConsumptionChartConfig {\n  barWidth?: number;\n  header: AdaptChartHeader; //Chart.Header;\n  height?: number;\n  legend?: AdaptChartLegend; //Chart.Legend;\n  series: AdaptChartSeries<IPlainObject>[]; //Chart.Series<IPlainObject>[];\n  seriesDisplay?: AdaptChartSeriesFormat; //StackedChart.SeriesDisplayFormat;\n  showSlider?: boolean;\n  slidePointsCount?: number;\n  suppressLegend: boolean;\n  type?: AdaptStackedChartType; //StackedChartType;\n  width?: number;\n  xAxis: AdaptChartAxis; //Chart.Axis;\n  yAxis: AdaptChartAxis; //Chart.Axis;\n}\n\nexport interface ICognitiveConsumptionGroupData {\n  capacityName?: string;\n  label: string;\n  unit: string;\n}\n\nexport interface ICognitiveConsumptionGroup extends ICognitiveConsumptionGroupData {\n  charts: ICognitiveConsumptionChart[];\n  id: string;\n}\n\nexport interface ICognitiveConsumptionNotificationConfig {\n  annotations?: any[];\n  encoding?: string;\n  entity: ICognitiveConsumptionNotificationEntity;\n  language?: string;\n  mediaType: IPlainObject;\n  variant?: IPlainObject;\n}\n\nexport interface ICognitiveConsumptionNotificationEntity {\n  action: string;\n  capacity: number;\n  disabled?: boolean;\n  domain: string;\n  emailIds: string[];\n  eventStatisticsGuid?: string;\n  operation?: string;\n  period?: string;\n  thresholds: number[];\n}\n\nexport interface ICognitiveConsumptionNotificationHistory {\n  annotations?: any[];\n  encoding?: string;\n  entity: ICognitiveConsumptionNotificationEntity[];\n  language?: string;\n  mediaType: IPlainObject;\n  variant?: IPlainObject;\n}\n\nexport interface ICognitiveConsumptionNotificationParams {\n  action: string;\n  domain: string;\n}\n\nexport interface ICognitiveConsumptionSection {\n  groups: ICognitiveConsumptionGroup[];\n  id: string;\n  title: string;\n}\n\nexport interface ICognitiveLicenseUsage {\n  endDate: string;\n  licenseUsageCount?: ICognitiveLicenseUsageCount[];\n  operation: string;\n  startDate: string;\n}\n\nexport interface ICognitiveLicenseUsageCount {\n  bundleId: string;\n  capacity: number;\n  count: IPlainObject;\n  countType?: string;\n  total: number;\n}\n\nexport interface ICognitiveLicenseUsageParams {\n  countType: string;\n  endDate: string;\n  startDate: string;\n}\n"]}