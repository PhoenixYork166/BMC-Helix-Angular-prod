{"version":3,"file":"view-designer-validation.reducer.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/designer/+state/view-designer-validation.reducer.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AACpD,OAAO,EAAE,aAAa,EAAE,EAAE,EAAE,MAAM,aAAa,CAAC;AAGhD,OAAO,KAAK,mBAAmB,MAAM,yBAAyB,CAAC;AAC/D,OAAO,KAAK,oBAAoB,MAAM,0BAA0B,CAAC;AAWjE,MAAM,UAAU,eAAe;IAC7B,OAAO;QACL,MAAM,EAAE,EAAE;QACV,gBAAgB,EAAE,EAAE;KACrB,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,MAAM,OAAO,GAAG,aAAa,CAClC,eAAe,EAAE,EAEjB,EAAE,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,mBAAmB,EAAE,eAAe,CAAC,EAElG,EAAE,CAAC,oBAAoB,CAAC,mBAAmB,EAAE,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE;IACvE,IAAI,MAAM,CAAC,MAAM,EAAE;QACjB,uCACK,KAAK,KACR,MAAM,kCACD,KAAK,CAAC,MAAM,KACf,CAAC,IAAI,CAAC,EAAE,MAAM,OAEhB;KACH;SAAM;QACL,IAAI,QAAQ,GAAG,KAAK,CAAC;QAErB,IAAI,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;YAC9B,QAAQ,mCACH,KAAK,KACR,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,GACnC,CAAC;SACH;QAED,OAAO,QAAQ,CAAC;KACjB;AACH,CAAC,CAAC,EAEF,EAAE,CAAC,oBAAoB,CAAC,6BAA6B,EAAE,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE;IAC3E,OAAO,OAAO,CAAC,MAAM,CAAC;QACpB,CAAC,CAAC,KAAK;QACP,CAAC,iCACM,KAAK,KACR,gBAAgB,kCACX,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GACjD,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,IAE7B,CAAC;AACR,CAAC,CAAC,EAEF,EAAE,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;IAC9D,IAAI,QAAQ,GAAG,KAAK,CAAC;IAErB,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,EAAE;QACjD,QAAQ,mCACH,KAAK,KACR,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,GAClC,CAAC;KACH;IAED,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC,EAAE;QAC3D,QAAQ,mCACH,KAAK,KACR,gBAAgB,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,KAAK,CAAC,GACtD,CAAC;KACH;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC,CACH,CAAC;AAEF,MAAM,UAAU,6BAA6B,CAAC,KAAK,EAAE,MAAM;IACzD,OAAO,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAChC,CAAC","sourcesContent":["import { has, omit, isEmpty, omitBy } from 'lodash';\nimport { createReducer, on } from '@ngrx/store';\n\nimport { IViewComponentDesignValidationIssue } from '../public-interfaces';\nimport * as ViewDesignerActions from './view-designer.actions';\nimport * as ViewComponentActions from './view-component.actions';\n\nexport interface IViewDesignerValidationState {\n  issues: {\n    [guid: string]: IViewComponentDesignValidationIssue[];\n  };\n  expressionIssues: {\n    [guid: string]: IViewComponentDesignValidationIssue[];\n  };\n}\n\nexport function getInitialState(): IViewDesignerValidationState {\n  return {\n    issues: {},\n    expressionIssues: {}\n  };\n}\n\nexport const reducer = createReducer<IViewDesignerValidationState>(\n  getInitialState(),\n\n  on(ViewDesignerActions.initViewDesigner, ViewDesignerActions.destroyViewDesigner, getInitialState),\n\n  on(ViewComponentActions.setValidationIssues, (state, { guid, issues }) => {\n    if (issues.length) {\n      return {\n        ...state,\n        issues: {\n          ...state.issues,\n          [guid]: issues\n        }\n      };\n    } else {\n      let newState = state;\n\n      if (has(newState.issues, guid)) {\n        newState = {\n          ...state,\n          issues: omit(state.issues, [guid])\n        };\n      }\n\n      return newState;\n    }\n  }),\n\n  on(ViewComponentActions.setExpressionValidationIssues, (state, { issues }) => {\n    return isEmpty(issues)\n      ? state\n      : {\n          ...state,\n          expressionIssues: {\n            ...omit(state.expressionIssues, Object.keys(issues)),\n            ...omitBy(issues, isEmpty)\n          }\n        };\n  }),\n\n  on(ViewComponentActions.componentsRemoved, (state, { guids }) => {\n    let newState = state;\n\n    if (guids.some((guid) => has(state.issues, guid))) {\n      newState = {\n        ...state,\n        issues: omit(state.issues, guids)\n      };\n    }\n\n    if (guids.some((guid) => has(state.expressionIssues, guid))) {\n      newState = {\n        ...state,\n        expressionIssues: omit(state.expressionIssues, guids)\n      };\n    }\n\n    return newState;\n  })\n);\n\nexport function viewDesignerValidationReducer(state, action) {\n  return reducer(state, action);\n}\n"]}