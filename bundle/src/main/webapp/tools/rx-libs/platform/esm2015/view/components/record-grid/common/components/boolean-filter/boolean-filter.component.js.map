{"version":3,"file":"boolean-filter.component.js","sourceRoot":"","sources":["../../../../../../../../../../libs/platform/view/components/record-grid/common/components/boolean-filter/boolean-filter.component.ts","../../../../../../../../../../libs/platform/view/components/record-grid/common/components/boolean-filter/boolean-filter.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACjD,OAAO,EACL,4BAA4B,EAG7B,MAAM,uBAAuB,CAAC;AAE/B,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAE9B,OAAO,EAAE,+BAA+B,EAAE,MAAM,qDAAqD,CAAC;;;;;;AAMtG,MAAM,OAAO,wBAAwB;IAJrC;QA2BE,uBAAkB,GAAyC,EAAE,CAAC;QAG9D,eAAU,GAAG,KAAK,CAAC;KA8BpB;IApDC,IACI,WAAW,CAAC,MAAwE;QACtF,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAE9C,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAE3B,IAAI,CAAC,cAAc,GAAG,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW;YACvC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;YACvE,CAAC,CAAC,EAAE,CAAC;IACT,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAcD,qBAAqB,CAAC,MAAoB;QACxC,OAAO,MAAM,CAAC,IAAI,CAAC;IACrB,CAAC;IAED,aAAa,CAAC,MAAsB;;QAClC,MAAM,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAEpD,IAAI,CAAC,uBAAuB,CAAC,yBAAyB,CACpD,IAAI,+BAA+B,CAAC,WAAW,EAAE,MAAA,IAAI,CAAC,WAAW,0CAAE,YAAY,CAAC,CACjF,CAAC;IACJ,CAAC;IAED,gBAAgB;;QACd,OAAO,CAAA,MAAA,IAAI,CAAC,YAAY,CAAC,IAAI,0CAAE,aAAa,KAAI,EAAE,CAAC;IACrD,CAAC;IAED,qBAAqB,CAAC,KAAoC;;QACxD,MAAM,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC,MAAA,IAAI,CAAC,WAAW,0CAAE,WAAW,CAAC;YAChE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC;YACjC,CAAC,CAAC,MAAA,IAAI,CAAC,WAAW,0CAAE,WAAW,CAAC;QAElC,IAAI,CAAC,uBAAuB,CAAC,yBAAyB,CACpD,IAAI,+BAA+B,CAAC,KAAK,KAAK,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,MAAA,IAAI,CAAC,WAAW,0CAAE,YAAY,CAAC,CAC9G,CAAC;IACJ,CAAC;;qHAvDU,wBAAwB;yGAAxB,wBAAwB,uPCfrC,svEAyDA;2FD1Ca,wBAAwB;kBAJpC,SAAS;mBAAC;oBACT,QAAQ,EAAE,mBAAmB;oBAC7B,WAAW,EAAE,iCAAiC;iBAC/C;8BAGC,YAAY;sBADX,KAAK;gBAIF,WAAW;sBADd,KAAK;gBAgBN,uBAAuB;sBADtB,KAAK;gBAIN,kBAAkB;sBADjB,KAAK;gBAIN,UAAU;sBADT,KAAK","sourcesContent":["import { Component, Input } from '@angular/core';\nimport {\n  AdaptFilterControlsComponent,\n  AdvancedFilterBooleanDataType,\n  AdvancedFilterOption\n} from '@bmc-ux/adapt-angular';\nimport { SelectOption } from '@bmc-ux/obsolete';\nimport { find } from 'lodash';\nimport { IRecordGridColumnNamedFilterOption } from '../../types/record-grid.types';\nimport { RxRecordGridAdvancedFilterValue } from '../../types/record-grid-advanced-filter-value.class';\n\n@Component({\n  selector: 'rx-boolean-filter',\n  templateUrl: './boolean-filter.component.html'\n})\nexport class RxBooleanFilterComponent {\n  @Input()\n  filterOption: AdvancedFilterOption;\n\n  @Input()\n  set filterValue(values: RxRecordGridAdvancedFilterValue<AdvancedFilterBooleanDataType[]>) {\n    const selectOptions = this.getSelectOptions();\n\n    this._filterValue = values;\n\n    this.selectedValues = values?.filterValue\n      ? values.filterValue.map((value) => find(selectOptions, { id: value }))\n      : [];\n  }\n\n  get filterValue(): RxRecordGridAdvancedFilterValue<AdvancedFilterBooleanDataType[]> {\n    return this._filterValue;\n  }\n\n  @Input()\n  filterControlsComponent: AdaptFilterControlsComponent;\n\n  @Input()\n  namedFilterOptions: IRecordGridColumnNamedFilterOption[] = [];\n\n  @Input()\n  isRequired = false;\n\n  selectedValues: SelectOption[];\n  private _filterValue: RxRecordGridAdvancedFilterValue<AdvancedFilterBooleanDataType[]>;\n\n  selectOptionFormatter(option: SelectOption): string {\n    return option.name;\n  }\n\n  onValueChange(values: SelectOption[]): void {\n    const filterValue = values.map((value) => value.id);\n\n    this.filterControlsComponent.onFilterOptionModelChange(\n      new RxRecordGridAdvancedFilterValue(filterValue, this.filterValue?.namedOptions)\n    );\n  }\n\n  getSelectOptions(): SelectOption[] {\n    return this.filterOption.data?.selectOptions || [];\n  }\n\n  onValueChangeRequired(model: AdvancedFilterBooleanDataType): void {\n    const oldModelValue = Array.isArray(this.filterValue?.filterValue)\n      ? this.filterValue.filterValue[0]\n      : this.filterValue?.filterValue;\n\n    this.filterControlsComponent.onFilterOptionModelChange(\n      new RxRecordGridAdvancedFilterValue(model === oldModelValue ? null : [model], this.filterValue?.namedOptions)\n    );\n  }\n}\n","<rx-named-filter-options-list\n  *ngIf=\"namedFilterOptions?.length\"\n  [namedFilterOptions]=\"namedFilterOptions\"\n  [filterOption]=\"filterOption\"\n  [filterValue]=\"filterValue\"\n  [filterControlsComponent]=\"filterControlsComponent\"\n></rx-named-filter-options-list>\n\n<adapt-rx-select\n  *ngIf=\"!isRequired; else inputsForBooleanTypeTemplate\"\n  class=\"advanced-filter__rx-select advanced-filter__rx-select_simple\"\n  [inline]=\"true\"\n  [multiple]=\"true\"\n  [optionFormatter]=\"selectOptionFormatter\"\n  [options]=\"getSelectOptions()\"\n  [popupMaxHeight]=\"null\"\n  [ngModel]=\"selectedValues\"\n  (ngModelChange)=\"onValueChange($event)\"\n>\n</adapt-rx-select>\n\n<ng-template #inputsForBooleanTypeTemplate>\n  <adapt-rx-radiobutton-group\n    class=\"advanced-filter__radiobutton-group\"\n    [ngModel]=\"filterValue ? filterValue.filterValue[0] : null\"\n    (ngModelChange)=\"onValueChangeRequired($event)\"\n  >\n    <adapt-rx-radiobutton\n      name=\"booleanTypeGroup\"\n      class=\"advanced-filter__radiobutton\"\n      [value]=\"false\"\n      [label]=\"filterControlsComponent.texts.configsTexts.falseLabel\"\n      [testID]=\"filterControlsComponent.testID + '_radio_false'\"\n      [disabled]=\"filterControlsComponent.isInputDisabled(false)\"\n    >\n    </adapt-rx-radiobutton>\n    <adapt-rx-radiobutton\n      name=\"booleanTypeGroup\"\n      class=\"advanced-filter__radiobutton\"\n      [value]=\"true\"\n      [label]=\"filterControlsComponent.texts.configsTexts.trueLabel\"\n      [testID]=\"filterControlsComponent.testID + '_radio_true'\"\n      [disabled]=\"filterControlsComponent.isInputDisabled(true)\"\n    >\n    </adapt-rx-radiobutton>\n    <adapt-rx-radiobutton\n      *ngIf=\"filterControlsComponent.getBooleanTypeOptionParams().hasBlankValue\"\n      name=\"booleanTypeGroup\"\n      class=\"advanced-filter__radiobutton\"\n      [value]=\"filterControlsComponent.getBooleanTypeBlankValue()\"\n      [label]=\"filterControlsComponent.texts.configsTexts.blankLabel\"\n      [testID]=\"filterControlsComponent.testID + '_radio_blank'\"\n      [disabled]=\"filterControlsComponent.isInputDisabled(filterControlsComponent.getBooleanTypeBlankValue())\"\n    >\n    </adapt-rx-radiobutton>\n  </adapt-rx-radiobutton-group>\n</ng-template>\n"]}