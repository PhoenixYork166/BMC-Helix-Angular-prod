{"version":3,"file":"selection-filter.component.js","sourceRoot":"","sources":["../../../../../../../../../../libs/platform/view/components/record-grid/common/components/selection-filter/selection-filter.component.ts","../../../../../../../../../../libs/platform/view/components/record-grid/common/components/selection-filter/selection-filter.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACjD,OAAO,EACL,4BAA4B,EAG7B,MAAM,uBAAuB,CAAC;AAG/B,OAAO,EAAE,+BAA+B,EAAE,MAAM,qDAAqD,CAAC;;;;;;AAMtG,MAAM,OAAO,0BAA0B;IAOrC,IACI,WAAW,CAAC,MAAiD;QAC/D,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAE3B,MAAM,OAAO,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAE/C,IAAI,CAAC,kBAAkB;YACrB,OAAO,CAAC,MAAM,KAAI,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW,CAAA;gBACnC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;gBAC5E,CAAC,CAAC,IAAI,CAAC;IACb,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAQD,uBAAuB;;QACrB,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAuC,CAAC;QAEvE,OAAO,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,mCAAI,EAAE,CAAC;IACnC,CAAC;IAED,sCAAsC,CAAC,KAAqB;;QAC1D,IAAI,CAAC,uBAAuB,CAAC,yBAAyB,CACpD,IAAI,+BAA+B,CACjC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAC1B,MAAA,IAAI,CAAC,WAAW,0CAAE,YAAY,CAC/B,CACF,CAAC;IACJ,CAAC;;uHA1CU,0BAA0B;2GAA1B,0BAA0B,+NCdvC,4iCAyBA;2FDXa,0BAA0B;kBAJtC,SAAS;mBAAC;oBACT,QAAQ,EAAE,qBAAqB;oBAC/B,WAAW,EAAE,mCAAmC;iBACjD;8BAGC,YAAY;sBADX,KAAK;gBAIN,uBAAuB;sBADtB,KAAK;gBAIF,WAAW;sBADd,KAAK;gBAiBN,kBAAkB;sBADjB,KAAK","sourcesContent":["import { Component, Input } from '@angular/core';\nimport {\n  AdaptFilterControlsComponent,\n  AdvancedFilterOption,\n  AdvancedFilterSelectionTypeData\n} from '@bmc-ux/adapt-angular';\nimport { SelectOption } from '@bmc-ux/obsolete';\nimport { IRecordGridColumnNamedFilterOption } from '../../types/record-grid.types';\nimport { RxRecordGridAdvancedFilterValue } from '../../types/record-grid-advanced-filter-value.class';\n\n@Component({\n  selector: 'rx-selection-filter',\n  templateUrl: './selection-filter.component.html'\n})\nexport class RxSelectionFilterComponent {\n  @Input()\n  filterOption: AdvancedFilterOption;\n\n  @Input()\n  filterControlsComponent: AdaptFilterControlsComponent;\n\n  @Input()\n  set filterValue(values: RxRecordGridAdvancedFilterValue<string[]>) {\n    this._filterValue = values;\n\n    const options = this.getSelectionTypeOptions();\n\n    this.selectionTypeModel =\n      options.length && values?.filterValue\n        ? values.filterValue.map((id) => options.find((option) => option.id === id))\n        : null;\n  }\n\n  get filterValue(): RxRecordGridAdvancedFilterValue<string[]> {\n    return this._filterValue;\n  }\n\n  @Input()\n  namedFilterOptions: IRecordGridColumnNamedFilterOption[];\n\n  selectionTypeModel: any[];\n  private _filterValue: RxRecordGridAdvancedFilterValue<string[]>;\n\n  getSelectionTypeOptions(): SelectOption[] {\n    const data = this.filterOption.data as AdvancedFilterSelectionTypeData;\n\n    return data?.selectOptions ?? [];\n  }\n\n  onSelectionTypeFilterOptionModelChange(value: SelectOption[]): void {\n    this.filterControlsComponent.onFilterOptionModelChange(\n      new RxRecordGridAdvancedFilterValue(\n        value.map((val) => val.id),\n        this.filterValue?.namedOptions\n      )\n    );\n  }\n}\n","<rx-named-filter-options-list\n  *ngIf=\"namedFilterOptions?.length\"\n  [namedFilterOptions]=\"namedFilterOptions\"\n  [filterOption]=\"filterOption\"\n  [filterValue]=\"filterValue\"\n  [filterControlsComponent]=\"filterControlsComponent\"\n></rx-named-filter-options-list>\n\n<adapt-rx-select\n  class=\"advanced-filter__rx-select\"\n  [class.advanced-filter__rx-select_simple]=\"filterControlsComponent.canShowSimpleInlineSelect()\"\n  [inline]=\"true\"\n  [multiple]=\"true\"\n  [selectAllButton]=\"true\"\n  [deselectAllButton]=\"true\"\n  [enableFilter]=\"!filterControlsComponent.canShowSimpleInlineSelect()\"\n  [optionFormatter]=\"filterControlsComponent.selectOptionFormatter\"\n  [options]=\"filterControlsComponent.getSelectionTypeOptions()\"\n  [texts]=\"filterControlsComponent.getSelectionTypeTexts()\"\n  [popupMaxHeight]=\"null\"\n  [ngModel]=\"selectionTypeModel\"\n  (ngModelChange)=\"onSelectionTypeFilterOptionModelChange($event)\"\n  [disabledOptionResolver]=\"filterControlsComponent.disabledSelectInputResolverBind\"\n>\n</adapt-rx-select>\n"]}