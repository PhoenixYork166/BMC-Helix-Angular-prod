{"version":3,"file":"http-response-message.interceptor.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/api/error-handling/http-response-message.interceptor.ts"],"names":[],"mappings":"AAAA,OAAO,EAAwD,YAAY,EAAE,MAAM,sBAAsB,CAAC;AAC1G,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AACrC,OAAO,EAAE,iBAAiB,EAAE,MAAM,2BAA2B,CAAC;AAC9D,OAAO,EAAE,6BAA6B,EAAE,MAAM,mCAAmC,CAAC;;;AAGlF,MAAM,OAAO,gCAAgC;IAC3C,YAAoB,sBAAqD;QAArD,2BAAsB,GAAtB,sBAAsB,CAA+B;IAAG,CAAC;IAE7E,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,GAAG,CAAC,CAAC,SAAyB,EAAE,EAAE;YAChC,IAAI,SAAS,YAAY,YAAY,EAAE;gBACrC,MAAM,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;gBAE1E,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,sBAAsB,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;iBAClE;aACF;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;6HAfU,gCAAgC;iIAAhC,gCAAgC;2FAAhC,gCAAgC;kBAD5C,UAAU","sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { RX_ERROR_HANDLING } from './error-handling.constant';\nimport { RxServerMessageHandlerService } from './server-messages-handler.service';\n\n@Injectable()\nexport class RxHttpResponseMessageInterceptor implements HttpInterceptor {\n  constructor(private rxServerMessageHandler: RxServerMessageHandlerService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      tap((httpEvent: HttpEvent<any>) => {\n        if (httpEvent instanceof HttpResponse) {\n          const message = httpEvent.headers.get(RX_ERROR_HANDLING.arMessagesHeader);\n\n          if (message) {\n            this.rxServerMessageHandler.handleServerResponseMessage(message);\n          }\n        }\n      })\n    );\n  }\n}\n"]}