{"version":3,"file":"process-instance-preview.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/process/components/process-instance-preview/process-instance-preview.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { forkJoin, Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, shareReplay, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { isEqual } from 'lodash';\nimport {\n  IProcessDefinition,\n  IProcessInstance,\n  RxProcessDefinitionCacheService,\n  RxProcessInstanceService\n} from '@helix/platform/process/api';\nimport { RxRappidPaperService } from '@helix/platform/process/elements';\nimport { IProcessInstancePreviewConfig } from './process-instance-preview-config.interface';\n\n@Component({\n  selector: 'rx-process-instance-preview',\n  template: '',\n  styleUrls: ['./process-instance-preview.component.scss']\n})\nexport class RxProcessInstancePreviewComponent implements OnDestroy, OnInit {\n  @Input()\n  config: Observable<IProcessInstancePreviewConfig>;\n\n  processDefinitionName: string;\n  processInstanceId: string;\n  zoomToFit = false;\n\n  onClick: ({ processDefinition: IProcessDefinition, processInstance: IProcessInstance, cellView: {} }) => void;\n  processDefinition: IProcessDefinition;\n  processInstance: IProcessInstance = {};\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private paperScroller;\n\n  constructor(\n    private element: ElementRef,\n    private rxProcessDefinitionCacheService: RxProcessDefinitionCacheService,\n    private rxProcessInstanceService: RxProcessInstanceService,\n    private rxRappidPaperService: RxRappidPaperService\n  ) {\n    this.rxProcessDefinitionCacheService.registerConsumer(this.destroyed$);\n  }\n\n  ngOnInit() {\n    const config$ = this.config.pipe(\n      distinctUntilChanged(isEqual),\n      filter((config) => config.processDefinitionName && config.processInstanceId),\n      tap((config) => {\n        this.onClick = config.onClick;\n        this.processDefinitionName = config.processDefinitionName;\n        this.processInstanceId = config.processInstanceId;\n        this.zoomToFit = config.zoomToFit;\n      }),\n      switchMap((config) => {\n        return forkJoin([\n          this.rxProcessDefinitionCacheService.getProcessDefinition(config.processDefinitionName),\n          this.rxProcessInstanceService.get(config.processDefinitionName, config.processInstanceId)\n        ]).pipe(\n          map(([processDefinition, processInstance]) => {\n            this.processDefinition = processDefinition;\n            this.processInstance = processInstance;\n          })\n        );\n      }),\n      shareReplay(1)\n    );\n\n    config$\n      .pipe(\n        tap(() => this.initialize()),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  initialize() {\n    this.paperScroller = this.rxRappidPaperService.init(this.element.nativeElement);\n\n    this.rxRappidPaperService.setGraph(\n      this.paperScroller,\n      this.processDefinition,\n      this.processInstance,\n      this.zoomToFit\n    );\n\n    if (this.onClick) {\n      this.paperScroller.options.paper.on('blank:pointerdown', () => {\n        this.onClick({\n          processDefinition: this.processDefinition,\n          processInstance: this.processInstance,\n          cellView: null\n        });\n      });\n\n      this.paperScroller.options.paper.on('cell:pointerup', (cellView) => {\n        this.onClick({\n          processDefinition: this.processDefinition,\n          processInstance: this.processInstance,\n          cellView: cellView\n        });\n      });\n    }\n  }\n\n  zoomIn(): void {\n    this.paperScroller.zoom(0.2, { max: 4 });\n  }\n\n  zoomOut(): void {\n    this.paperScroller.zoom(-0.2, { min: 0.2 });\n  }\n}\n"]}