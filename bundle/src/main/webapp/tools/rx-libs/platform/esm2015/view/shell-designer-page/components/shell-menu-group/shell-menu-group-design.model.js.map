{"version":3,"file":"shell-menu-group-design.model.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/shell-designer-page/components/shell-menu-group/shell-menu-group-design.model.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AAEpE,OAAO,EAIL,0CAA0C,EAC1C,oBAAoB,EACpB,qBAAqB,EACrB,0BAA0B,EAC3B,MAAM,+BAA+B,CAAC;AACvC,OAAO,EAEL,0BAA0B,EAC1B,wBAAwB,EACxB,wBAAwB,EACzB,MAAM,mCAAmC,CAAC;AAE3C,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAC9B,OAAO,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AAGvC,MAAM,OAAO,2BACX,SAAQ,0BAAkD;IAD5D;;QAGE,yBAAoB,GAAuC,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC;QAC7F,WAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;IA0FlE,CAAC;IAxFC,MAAM,CAAC,oBAAoB,CAAC,iBAA0C;QACpE,uBACE,aAAa,EAAE,YAAY,EAC3B,MAAM,EAAE,KAAK,EACb,MAAM,EAAE,IAAI,IACT,iBAAiB,EACpB;IACJ,CAAC;IAED,MAAM,CAAC,qBAAqB;QAC1B,MAAM,kBAAkB,GAAgC;YACtD;gBACE,OAAO,EAAE,aAAa,CAAC,wBAAwB,CAAC,aAAa,CAAC,iBAAiB;gBAC/E,IAAI,EAAE,aAAa,CAAC,wBAAwB,CAAC,aAAa,CAAC,sBAAsB;aACrD;SAC/B,CAAC;QAEF,OAAO,kBAAkB,CAAC;IAC5B,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;QAExD,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC,KAA6B,EAAE,EAAE;YACpE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,CAAC,aAAa,EAAE,EAAE;YAClF,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,QAAQ,CAAC,KAA6B;QAC5C,MAAM,gBAAgB,GAA0C,EAAE,CAAC;QAEnE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE;YAC9B,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,wBAAwB,EAAE,eAAe,CAAC,CAAC,CAAC;SAC5F;QAED,gBAAgB,CAAC,IAAI,CAAC,GAAG,qBAAqB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;QAE9D,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAEO,YAAY;QAClB,OAAO;YACL,uBAAuB,EAAE;gBACvB;oBACE,KAAK,EAAE,YAAY;oBACnB,QAAQ,EAAE;wBACR;4BACE,IAAI,EAAE,eAAe;4BACrB,SAAS,EAAE,wBAAwB;4BACnC,OAAO,EAAE;gCACP,KAAK,EAAE,OAAO;gCACd,QAAQ,EAAE,IAAI;6BACf;yBACF;wBACD;4BACE,IAAI,EAAE,QAAQ;4BACd,SAAS,EAAE,0BAA0B;4BACrC,OAAO,EAAE;gCACP,KAAK,EAAE,QAAQ;6BAChB;yBACF;wBACD;4BACE,IAAI,EAAE,QAAQ;4BACd,SAAS,EAAE,wBAAwB;4BACnC,OAAO,EAAE;gCACP,KAAK,EAAE,aAAa;gCACpB,WAAW,EAAE,iBAAiB;gCAC9B,OAAO,EAAE,IAAI,OAAO,CAAC,wDAAwD,CAAC;gCAC9E,UAAU,EAAE,oBAAoB;6BACN;yBAC7B;wBACD;4BACE,SAAS,EAAE,0CAA0C;4BACrD,OAAO,EAAE;gCACP,KAAK,EAAE,aAAa;gCACpB,IAAI,EAAE,MAAM;gCACZ,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI;6BACG;yBACtC;qBACF;iBACF;aACF;SACF,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { RX_PERMISSION, Tooltip } from '@helix/platform/shared/api';\nimport { IViewDefinitionPermission, IViewDesignerComponentModel } from '@helix/platform/view/api';\nimport {\n  IComponentPermissionEditorConfig,\n  IViewComponentDesignValidationIssue,\n  IViewDesignerInspectorConfig,\n  RxComponentPermissionEditorWidgetComponent,\n  validateCssClassName,\n  validateCssClassNames,\n  ViewDesignerComponentModel\n} from '@helix/platform/view/designer';\nimport {\n  ITagsFormControlOptions,\n  SwitchFormControlComponent,\n  TagsFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { IRxShellMenuGroupProps } from './shell-menu-group-design.types';\nimport { trim } from 'lodash';\nimport { pluck } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nexport class RxShellMenuGroupDesignModel\n  extends ViewDesignerComponentModel<IRxShellMenuGroupProps>\n  implements IViewDesignerComponentModel<IRxShellMenuGroupProps> {\n  componentProperties$: Observable<IRxShellMenuGroupProps> = this.sandbox.componentProperties$;\n  label$ = this.componentProperties$.pipe(pluck('menuGroupName'));\n\n  static getInitialProperties(initialProperties?: IRxShellMenuGroupProps): IRxShellMenuGroupProps {\n    return {\n      menuGroupName: 'Menu group',\n      hidden: false,\n      styles: null,\n      ...initialProperties\n    };\n  }\n\n  static getDefaultPermissions(): IViewDefinitionPermission[] {\n    const defaultPermissions: IViewDefinitionPermission[] = [\n      {\n        ownerId: RX_PERMISSION.permissionDialogMetadata.viewComponent.defaultPermission,\n        type: RX_PERMISSION.permissionDialogMetadata.viewComponent.defaultPermittedAction\n      } as IViewDefinitionPermission\n    ];\n\n    return defaultPermissions;\n  }\n\n  rxInit(): void {\n    this.sandbox.updateInspectorConfig(this.getInspector());\n\n    this.componentProperties$.subscribe((props: IRxShellMenuGroupProps) => {\n      this.sandbox.setValidationIssues(this.validate(props));\n    });\n\n    this.sandbox.getComponentPropertyValue('menuGroupName').subscribe((menuGroupName) => {\n      this.sandbox.setBreadcrumbs(menuGroupName);\n    });\n  }\n\n  private validate(props: IRxShellMenuGroupProps): IViewComponentDesignValidationIssue[] {\n    const validationIssues: IViewComponentDesignValidationIssue[] = [];\n\n    if (!trim(props.menuGroupName)) {\n      validationIssues.push(this.sandbox.createError('Label cannot be blank.', 'menuGroupName'));\n    }\n\n    validationIssues.push(...validateCssClassNames(props.styles));\n\n    return validationIssues;\n  }\n\n  private getInspector(): IViewDesignerInspectorConfig {\n    return {\n      inspectorSectionConfigs: [\n        {\n          label: 'Properties',\n          controls: [\n            {\n              name: 'menuGroupName',\n              component: TextFormControlComponent,\n              options: {\n                label: 'Label',\n                required: true\n              }\n            },\n            {\n              name: 'hidden',\n              component: SwitchFormControlComponent,\n              options: {\n                label: 'Hidden'\n              }\n            },\n            {\n              name: 'styles',\n              component: TagsFormControlComponent,\n              options: {\n                label: 'CSS classes',\n                placeholder: 'Add CSS classes',\n                tooltip: new Tooltip('Enter CSS class names to apply to this view component.'),\n                errorCheck: validateCssClassName\n              } as ITagsFormControlOptions\n            },\n            {\n              component: RxComponentPermissionEditorWidgetComponent,\n              options: {\n                label: 'Permissions',\n                type: 'view',\n                componentGuid: this.sandbox.guid\n              } as IComponentPermissionEditorConfig\n            }\n          ]\n        }\n      ]\n    };\n  }\n}\n"]}