{"version":3,"file":"tab-container-design.model.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/tab-panel/design/tab-container-design/tab-container-design.model.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injector } from '@angular/core';\nimport {\n  getStandardPropsInspectorConfigs,\n  IViewComponentDesignSandbox,\n  IViewComponentDesignValidationIssue,\n  IViewDesignerInspectorConfig,\n  validateAvailableOnDevicesProp,\n  validateCssClassNames,\n  ViewDesignerComponentModel\n} from '@helix/platform/view/designer';\nimport { Tooltip } from '@helix/platform/shared/api';\nimport {\n  ISelectFormControlOptions,\n  SelectFormControlComponent,\n  SwitchFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { compact, flatten, times, values } from 'lodash';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport { map, skip, take, takeUntil } from 'rxjs/operators';\nimport { ITabContainerDesignProperties, ITabContainerProperties } from './tab-container-design.types';\nimport { RX_CONTAINER } from '../../../container/container.constant';\nimport { ContainerRowWrap } from '../../../container/container.types';\nimport { RX_AVAILABLE_ON_DEVICES_PROP_NAME, RX_STANDARD_PROPS_DEFAULT_VALUES } from '@helix/platform/view/api';\n\nexport class TabContainerDesignModel extends ViewDesignerComponentModel {\n  componentProperties$: Observable<ITabContainerProperties> = this.sandbox.componentProperties$;\n\n  hiddenOnCanvas$ = new BehaviorSubject<boolean>(false);\n  selectedTabGuid$ = new Subject<string>();\n\n  static getInitialProperties(initialProperties?: ITabContainerProperties): ITabContainerDesignProperties {\n    return {\n      columnCount: '1',\n      enableLazyLoading: false,\n      label: '',\n      rowWrap: ContainerRowWrap.Sm,\n      ...RX_STANDARD_PROPS_DEFAULT_VALUES,\n      ...initialProperties\n    };\n  }\n\n  constructor(protected injector: Injector, protected sandbox: IViewComponentDesignSandbox<ITabContainerProperties>) {\n    super(injector, sandbox);\n\n    this.componentProperties$.pipe(take(1)).subscribe(() => {\n      this.sandbox.updateInspectorConfig(this.getInspector());\n    });\n\n    combineLatest([\n      this.sandbox\n        .getComponentPropertyValue('label')\n        .pipe(map((value) => (value ? null : this.sandbox.createError('Label cannot be blank.', 'label')))),\n      this.sandbox.getComponentPropertyValue('styles').pipe(map(validateCssClassNames)),\n      this.sandbox\n        .getComponentPropertyValue(RX_AVAILABLE_ON_DEVICES_PROP_NAME)\n        .pipe(map(validateAvailableOnDevicesProp))\n    ])\n      .pipe(map(flatten), map(compact))\n      .subscribe((validationIssues: IViewComponentDesignValidationIssue[]) =>\n        this.sandbox.setValidationIssues(validationIssues)\n      );\n\n    this.selectedTabGuid$.pipe(takeUntil(this.sandbox.destroyed$)).subscribe((selectedTabGuid) => {\n      this.hiddenOnCanvas$.next(this.sandbox.guid !== selectedTabGuid);\n    });\n\n    this.sandbox\n      .getComponentPropertyValue('columnCount')\n      .pipe(skip(1))\n      .subscribe((columnCount) => {\n        this.sandbox.setLayout(this.getDefaultColumnSpans(Number(columnCount)));\n      });\n\n    this.sandbox.getComponentPropertyValue('label').subscribe((label) => {\n      const componentName = label ? `${this.sandbox.descriptor.name} (${label})` : this.sandbox.descriptor.name;\n\n      this.sandbox.setSettablePropertiesDataDictionary(componentName, [\n        {\n          label: 'Hidden',\n          expression: this.getExpressionForProperty('hidden')\n        }\n      ]);\n\n      this.sandbox.setBreadcrumbs(label);\n    });\n  }\n\n  setContainerLayout(columnSizes: number[]): void {\n    this.sandbox.setLayout(columnSizes);\n  }\n\n  private getDefaultColumnSpans(columnCount: number): number[] {\n    const columnSpans: number[] = [];\n    const span = Math.floor(RX_CONTAINER.maxColumnSpan / columnCount);\n\n    times(columnCount, () => columnSpans.push(span));\n    columnSpans[columnSpans.length - 1] = (RX_CONTAINER.maxColumnSpan % columnCount) + span;\n\n    return columnSpans;\n  }\n\n  private getInspector(): IViewDesignerInspectorConfig {\n    return {\n      inspectorSectionConfigs: [\n        {\n          label: 'General',\n          controls: [\n            {\n              name: 'label',\n              component: TextFormControlComponent,\n              options: {\n                label: 'Label',\n                required: true\n              }\n            },\n            {\n              name: 'enableLazyLoading',\n              component: SwitchFormControlComponent,\n              options: {\n                label: 'Enable lazy loading'\n              }\n            },\n            {\n              name: 'columnCount',\n              component: SelectFormControlComponent,\n              options: {\n                label: 'Number of columns',\n                required: true,\n                tooltip: new Tooltip(\n                  'Resize container columns on the canvas by dragging the dashed column separator line.'\n                ),\n                options: times(6, (index: number) => ({ id: (++index).toString(), name: index.toString() }))\n              } as ISelectFormControlOptions\n            },\n            {\n              name: 'rowWrap',\n              component: SelectFormControlComponent,\n              options: {\n                label: 'Row wrap',\n                sortAlphabetically: false,\n                options: values(RX_CONTAINER.rowWrapOptions),\n                tooltip: new Tooltip(\n                  `The Row wrap property controls the layout of multi-column containers based on\n                    the width of the view. When the width of the view is decreased to a width less\n                    than the selected Row wrap value, each container column after the first one\n                    wraps onto a new line.`\n                )\n              } as ISelectFormControlOptions\n            },\n            ...getStandardPropsInspectorConfigs()\n          ]\n        }\n      ]\n    };\n  }\n}\n"]}