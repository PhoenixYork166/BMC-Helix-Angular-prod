{"version":3,"file":"hkm-access-map-editor.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/admin/components/hkm-access-mapping/hkm-access-map-editor/hkm-access-map-editor.component.ts","../../../../../../../../libs/platform/admin/components/hkm-access-mapping/hkm-access-map-editor/hkm-access-map-editor.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { uniqBy, flatMap } from 'lodash';\n\nimport { AdaptTreeNode, DockedPanelContext, DismissReasons, Alert } from '@bmc-ux/adapt-angular';\n\nimport { RxNotificationService } from '@helix/platform/shared/api';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  IHkmFolder,\n  IHkmPortal,\n  IHkmPortalUserGroup,\n  IItsmCompany,\n  IItsmSupportGroup\n} from '../hkm-access-mapping.types';\n\nimport { RxModalService, RX_MODAL } from '@helix/platform/ui-kit';\nimport { FormControl } from '@angular/forms';\nimport { forkJoin, of, ReplaySubject } from 'rxjs';\nimport { startWith, switchMap, map, takeUntil, tap } from 'rxjs/operators';\nimport { RxHkmAccessMappingService } from '../hkm-access-mapping.service';\n\n@Component({\n  selector: 'rx-hkm-access-map-editor',\n  templateUrl: './hkm-access-map-editor.component.html'\n})\nexport class HkmAccessMapEditorComponent implements OnInit, OnDestroy {\n  constructor(\n    private dockedPanelContext: DockedPanelContext,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService,\n    private rxModalService: RxModalService,\n    private rxHkmAccessMappingService: RxHkmAccessMappingService\n  ) {\n    const contextData = this.dockedPanelContext.getData();\n\n    this.selectedItsmSupportGroups = contextData.selectedSupportGroups;\n    this.portals = contextData.hkmPortals;\n    this.company = contextData.company;\n    this.portalUserGroups = contextData.selectedHkmPortal.userGroups;\n    this.selectedPortal = new FormControl([contextData.selectedHkmPortal]);\n    this.selectedUserGroups = new FormControl(contextData.selectedHkmUserGroups);\n  }\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private userGroupToFoldersMap = new Map<IHkmPortalUserGroup, IHkmFolder[]>();\n  private hkmFolders: IHkmFolder[];\n\n  filesTree: AdaptTreeNode[];\n  company: IItsmCompany;\n  selectedItsmSupportGroups: IItsmSupportGroup[] = [];\n  selectedUserGroups: FormControl;\n  portalUserGroups: IHkmPortalUserGroup[];\n  portals: IHkmPortal[];\n  selectedPortal: FormControl;\n\n  alertConfig: Alert = {\n    title: '',\n    content: this.translateService.instant('com.bmc.arsys.rx.client.hkm-access-mapping-editor.mapping-info.message'),\n    type: 'inline',\n    variant: 'info'\n  };\n\n  ngOnInit(): void {\n    this.selectedPortal.valueChanges.pipe(takeUntil(this.destroyed$)).subscribe(([portal]: IHkmPortal[]) => {\n      this.portalUserGroups = portal.userGroups;\n      this.selectedUserGroups.reset([]);\n    });\n\n    this.selectedUserGroups.valueChanges\n      .pipe(\n        takeUntil(this.destroyed$),\n        startWith(this.selectedUserGroups.value || []),\n        switchMap((userGroups: IHkmPortalUserGroup[]) => {\n          if (userGroups.length === 0) {\n            return of(userGroups);\n          }\n\n          const [selectedPortal]: IHkmPortal[] = this.selectedPortal.value;\n\n          const folderAcecssRequests = userGroups.map((userGroup) => {\n            return this.rxHkmAccessMappingService\n              .getFolderAccess(userGroup.id, selectedPortal.portalId, selectedPortal.nodeId)\n              .pipe(tap((folders) => this.userGroupToFoldersMap.set(userGroup, folders)));\n          });\n\n          return forkJoin(folderAcecssRequests).pipe(map(() => userGroups));\n        })\n      )\n      .subscribe((userGroups) => {\n        this.setUpFoldersFromHkmPortalUserGroups(userGroups);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  cancel(): void {\n    this.dockedPanelContext.dismiss(DismissReasons.ESC);\n  }\n\n  save(): void {\n    if (this.selectedItsmSupportGroups.length === 0) {\n      this.rxNotificationService.addErrorMessage(\n        this.translateService.instant('com.bmc.arsys.rx.client.hkm-access-mapping-editor.select-support-group.message')\n      );\n\n      return;\n    }\n\n    if (this.selectedUserGroups.value.length === 0) {\n      this.rxNotificationService.addErrorMessage(\n        this.translateService.instant('com.bmc.arsys.rx.client.hkm-access-mapping-editor.select-user-group.message')\n      );\n\n      return;\n    }\n\n    const hkmGroupFoldersNames: string[] = this.hkmFolders.map((data) => data.name);\n    const selectedUserGroups = this.selectedUserGroups.value as IHkmPortalUserGroup[];\n\n    const mappingConfigurations = this.selectedItsmSupportGroups.map((itsmSupportGroup: IItsmSupportGroup) => ({\n      AppCompanyID: this.company.permissionId,\n      AppCompanyName: this.company.name,\n      AppGroupName: itsmSupportGroup.supportGroupName,\n      AppName: 'ITSM',\n      IsMapped: true,\n      AppGroupID: itsmSupportGroup.permissionGroupId,\n      HKMPortalID: this.selectedPortal.value[0].portalId,\n      HKMPortalName: this.selectedPortal.value[0].portalName,\n      HKMRoleName: selectedUserGroups.map((group) => group.role).join(','),\n      HKMGroupID: selectedUserGroups.map((group) => group.id).join(','),\n      HKMGroupFoldersNames: hkmGroupFoldersNames,\n      HKMGroupName: selectedUserGroups.map((group) => group.name).join(',')\n    }));\n\n    this.rxHkmAccessMappingService.saveAccessMappings(mappingConfigurations).subscribe(\n      () => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.admin.connection-mapping.mapping-saved.message')\n        );\n\n        this.dockedPanelContext.close(DismissReasons.CLOSE_BTN);\n      },\n      () => {\n        this.dockedPanelContext.close(DismissReasons.BACKDROP_CLICK);\n      }\n    );\n  }\n\n  private hkmFolderSortFn(first: IHkmFolder, second: IHkmFolder): number {\n    if (first.hasFolderChildren !== second.hasFolderChildren) {\n      return +second.hasFolderChildren - +first.hasFolderChildren;\n    }\n\n    return first.name.localeCompare(second.name);\n  }\n\n  private setUpFoldersFromHkmPortalUserGroups(userGroups: IHkmPortalUserGroup[]): void {\n    const items = flatMap(userGroups, (group) =>\n      this.userGroupToFoldersMap\n        .get(group)\n        .filter((folder) => folder.haveAccess)\n        .map((folder) => ({ group, folder }))\n    );\n\n    items.sort((first, second) => this.hkmFolderSortFn(first.folder, second.folder));\n\n    const uniqueItems = uniqBy(items, (item) => item.folder.nodeId);\n\n    this.hkmFolders = uniqueItems.map((item) => item.folder);\n\n    this.filesTree = uniqueItems.map((item) => ({\n      data: item,\n      expandedIcon: item.folder.hasFolderChildren ? 'd-icon-folder_open' : 'd-icon-folder_o',\n      collapsedIcon: item.folder.hasFolderChildren ? 'd-icon-folder' : 'd-icon-folder_o',\n      label: item.folder.name,\n      level: 1,\n      expression: `'${item.folder.nodeId}'`,\n      children: null,\n      leaf: !item.folder.hasFolderChildren\n    }));\n  }\n\n  deleteVisibilityGroup(group: IItsmSupportGroup): void {\n    this.rxModalService\n      .confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.translateService.instant(\n          'com.bmc.arsys.rx.client.hkm-access-mapping-editor.delete-visibility-group.message'\n        )\n      })\n      .then((result: boolean) => {\n        if (result) {\n          this.selectedItsmSupportGroups.forEach((element, index) => {\n            if (element.supportGroupName === group.supportGroupName) {\n              this.selectedItsmSupportGroups.splice(index, 1);\n            }\n          });\n        }\n      });\n  }\n\n  onNodeExpand({ node }: { node: AdaptTreeNode }): void {\n    if (node && !node.children) {\n      this.rxHkmAccessMappingService\n        .getFolderAccess(node.data.group.id, node.data.folder.portalId, node.data.folder.nodeId)\n        .subscribe((hkmFolders: IHkmFolder[]) => {\n          node.children = hkmFolders\n            .filter((folder) => folder.haveAccess)\n            .sort(this.hkmFolderSortFn)\n            .map((folder: IHkmFolder) => ({\n              data: { group: node.data.group, folder },\n              expandedIcon: folder.hasFolderChildren ? 'd-icon-folder_open' : 'd-icon-folder_o',\n              collapsedIcon: folder.hasFolderChildren ? 'd-icon-folder' : 'd-icon-folder_o',\n              label: folder.name,\n              level: 1,\n              expression: `'${folder.nodeId}'`,\n              children: null,\n              leaf: !folder.hasFolderChildren\n            }));\n        });\n    }\n  }\n\n  supportGroupFormatter(group: IItsmSupportGroup): string {\n    return group.supportGroupName;\n  }\n\n  userGroupOptionformatter(group: IHkmPortalUserGroup): string {\n    return group.name;\n  }\n\n  hkmPortalFormatter(portal: IHkmPortal): string {\n    return portal.portalName;\n  }\n}\n","<div class=\"container col d-flex flex-column\" style=\"overflow-y: auto\">\n  <div class=\"row justify-content-between\">\n    <div class=\"col-5 form-control-label\">\n      <adapt-rx-textfield\n        [disabled]=\"true\"\n        rx-id=\"company-field\"\n        [label]=\"'com.bmc.arsys.rx.client.hkm-access-mapping.company.label' | translate\"\n        [(ngModel)]=\"company.name\"\n      ></adapt-rx-textfield>\n    </div>\n    <div class=\"col-1 d-flex align-items-end p-2 justify-content-center\">\n      <adapt-icon name=\"arrow_right\"></adapt-icon>\n    </div>\n    <div class=\"col-6 form-control-label\">\n      <adapt-rx-select\n        [formControl]=\"selectedPortal\"\n        [options]=\"portals\"\n        rx-id=\"portal-select\"\n        [optionFormatter]=\"hkmPortalFormatter\"\n        [label]=\"'com.bmc.arsys.rx.client.hkm-access-mapping-editor.header.label' | translate\"\n      ></adapt-rx-select>\n    </div>\n  </div>\n  <hr />\n  <div class=\"row\">\n    <div class=\"col\">\n      <adapt-alert [config]=\"alertConfig\"></adapt-alert>\n    </div>\n  </div>\n  <div class=\"row flex-grow-1 py-3 justify-content-between\">\n    <div class=\"col-5 d-flex flex-column\">\n      <div class=\"pb-1\">\n        <span class=\"form-control-label\">\n          {{\n            'com.bmc.arsys.rx.client.hkm-access-mapping-editor.support-group.label'\n              | translate: { count: selectedItsmSupportGroups.length }\n          }}\n        </span>\n      </div>\n      <div class=\"card flex-grow-1\" rx-id=\"selected-support-groups\">\n        <div\n          class=\"d-flex px-2 align-items-center adapt-rx-list-item cursor-pointer\"\n          *ngFor=\"let group of selectedItsmSupportGroups\"\n        >\n          <span>{{ group.supportGroupName }}</span>\n          <button\n            type=\"button\"\n            [disabled]=\"false\"\n            class=\"btn btn-link d-icon-trash p-1\"\n            rx-id=\"delete-button\"\n            (click)=\"deleteVisibilityGroup(group)\"\n          ></button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-1 d-flex p-2 mt-4 justify-content-center\">\n      <adapt-icon [name]=\"'arrow_right'\"></adapt-icon>\n    </div>\n    <div class=\"col-6 d-flex flex-column\">\n      <adapt-rx-select\n        [formControl]=\"selectedUserGroups\"\n        rx-id=\"user-groups-select\"\n        [label]=\"'com.bmc.arsys.rx.client.hkm-access-mapping-editor.select-hkm-user-groups.label' | translate\"\n        [options]=\"portalUserGroups\"\n        [optionFormatter]=\"userGroupOptionformatter\"\n        [selectAllButton]=\"true\"\n        [deselectAllButton]=\"true\"\n        [enableFilter]=\"true\"\n        [multiple]=\"true\"\n      >\n      </adapt-rx-select>\n      <div class=\"mt-3 pb-1\">\n        <span class=\"form-control-label\">\n          {{ 'com.bmc.arsys.rx.client.hkm-access-mapping-editor.accessible-folders.title' | translate }}\n        </span>\n      </div>\n      <div class=\"card flex-grow-1 p-2\">\n        <div class=\"mh-100\" style=\"overflow-y: auto\">\n          <adapt-tree [value]=\"filesTree\" (onNodeExpand)=\"onNodeExpand($event)\"> </adapt-tree>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"dp-footer\">\n  <div>\n    <button rx-id=\"save-button\" type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"save()\">\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n  </div>\n  <div>\n    <button rx-id=\"cancel-button\" type=\"button\" class=\"btn btn-secondary\" (click)=\"cancel()\">\n      {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n    </button>\n  </div>\n</div>\n"]}