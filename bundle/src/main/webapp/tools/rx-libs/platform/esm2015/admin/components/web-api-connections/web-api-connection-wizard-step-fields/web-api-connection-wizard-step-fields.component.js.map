{"version":3,"file":"web-api-connection-wizard-step-fields.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/admin/components/web-api-connections/web-api-connection-wizard-step-fields/web-api-connection-wizard-step-fields.component.ts","../../../../../../../../libs/platform/admin/components/web-api-connections/web-api-connection-wizard-step-fields/web-api-connection-wizard-step-fields.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, ViewChild, OnDestroy } from '@angular/core';\nimport {\n  IWebApiConnectionWizardStep,\n  IWebApiConnection,\n  IWebApiConnectionField,\n  IAuthTypeDetails\n} from '../web-api-connections.interfaces';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { get, some } from 'lodash';\nimport { NgForm } from '@angular/forms';\nimport { RX_WEB_API_CONNECTIONS } from '../web-api-connections.constant';\nimport { ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { RxUrlUtilsService } from '@helix/platform/utils';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-web-api-connection-wizard-step-fields',\n  templateUrl: './web-api-connection-wizard-step-fields.component.html',\n  styleUrls: ['./web-api-connection-wizard-step-fields.component.scss']\n})\nexport class WebApiConnectionWizardStepFieldsComponent implements OnInit, OnDestroy {\n  @Input()\n  step: IWebApiConnectionWizardStep;\n\n  @Input()\n  webApiConnection: IWebApiConnection;\n\n  @ViewChild('configurationForm', { read: NgForm, static: true })\n  configurationForm: NgForm;\n\n  @Output()\n  selectionChange: EventEmitter<object> = new EventEmitter<object>();\n\n  @Output()\n  formStatusChange: EventEmitter<object> = new EventEmitter<object>();\n\n  authEndpoint: string;\n\n  @Input()\n  stepDetails: IWebApiConnection | IAuthTypeDetails;\n\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n  private defaultSelection = this.translateService.instant('com.bmc.arsys.rx.client.common.select.label');\n\n  constructor(private rxUrlUtilsService: RxUrlUtilsService, private translateService: TranslateService) {}\n\n  optionFormatter = (option: RxSelectOption): string => {\n    return get(option, 'label', this.defaultSelection);\n  };\n\n  onRadioButtonChange(event, field: IWebApiConnectionField) {\n    if (event.startsWith(RX_WEB_API_CONNECTIONS.authServerEndpoints.default)) {\n      this.stepDetails[field.name] = null;\n    }\n  }\n\n  getSelectionValue(selectedValue, field: IWebApiConnectionField) {\n    return this.translateService.instant(selectedValue.label, {\n      hostName: this.webApiConnection[field.referenceFieldName]\n    });\n  }\n\n  validate(field: IWebApiConnectionField): (control: AbstractControl) => ValidationErrors | null {\n    return (control: AbstractControl) => {\n      let result = null;\n\n      if (field.isUrl && control.value) {\n        const urls = control.value.split(/[,;]/);\n\n        if (some(urls, (url) => !this.rxUrlUtilsService.isValidUrl(url, true))) {\n          result = { invalidUrl: { message: 'Invalid URL.' } };\n        }\n      }\n\n      return result;\n    };\n  }\n\n  ngOnInit() {\n    this.authEndpoint = this.stepDetails['authServerEndpoint']\n      ? RX_WEB_API_CONNECTIONS.authServerEndpoints.custom\n      : RX_WEB_API_CONNECTIONS.authServerEndpoints.default;\n\n    this.configurationForm.statusChanges.pipe(distinctUntilChanged(), takeUntil(this.destroyed$)).subscribe((value) => {\n      this.step.isValid = value === 'VALID';\n      this.formStatusChange.emit();\n    });\n\n    this.configurationForm.valueChanges.pipe(distinctUntilChanged(), takeUntil(this.destroyed$)).subscribe((value) => {\n      this.step.isDirty = !this.configurationForm.pristine;\n      this.formStatusChange.emit();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n","<form [name]=\"step.formName\" #configurationForm=\"ngForm\">\n  <ng-container *ngFor=\"let field of step.fields\">\n    <adapt-rx-select\n      [name]=\"field.name\"\n      [label]=\"field.label | translate\"\n      class=\"d-block form-group\"\n      rx-id=\"field.rxId\"\n      [options]=\"field.selectOptions\"\n      [optionFormatter]=\"optionFormatter\"\n      [(ngModel)]=\"stepDetails[field.name]\"\n      [required]=\"field.required\"\n      *ngIf=\"field.type === 'select'\"\n      [disabled]=\"field.disabled\"\n      (ngModelChange)=\"selectionChange.emit({ selection: $event, fieldName: field.name })\"\n    >\n    </adapt-rx-select>\n\n    <adapt-rx-textfield\n      [name]=\"field.name\"\n      [(ngModel)]=\"stepDetails[field.name]\"\n      [required]=\"field.required\"\n      [attr.rx-id]=\"field.rxId\"\n      [label]=\"field.label | translate\"\n      class=\"d-block form-group\"\n      *ngIf=\"field.type === 'text' || field.type === 'password'\"\n      [isPassword]=\"field.type === 'password'\"\n      [placeholder]=\"field.placeholder\"\n      [rxCustomValidators]=\"validate(field)\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-counter\n      [name]=\"field.name\"\n      [(ngModel)]=\"stepDetails[field.name]\"\n      [required]=\"field.required\"\n      [attr.rx-id]=\"field.rxId\"\n      [label]=\"field.label | translate\"\n      class=\"d-block form-group\"\n      [adaptMin]=\"field.minValue\"\n      [adaptMax]=\"field.maxValue\"\n      *ngIf=\"field.type === 'number' && field.allowIntegerOnly\"\n      [placeholder]=\"field.placeholder\"\n      adaptIntegerNumber\n    >\n    </adapt-rx-counter>\n\n    <adapt-rx-counter\n      [name]=\"field.name\"\n      [(ngModel)]=\"stepDetails[field.name]\"\n      [required]=\"field.required\"\n      [attr.rx-id]=\"field.rxId\"\n      [label]=\"field.label | translate\"\n      class=\"d-block form-group\"\n      [adaptMin]=\"field.minValue\"\n      [adaptMax]=\"field.maxValue\"\n      *ngIf=\"field.type === 'number' && field.allowScientific\"\n      [placeholder]=\"field.placeholder\"\n      adaptScientificNumber\n    >\n    </adapt-rx-counter>\n\n    <rx-name-value-pairs-editor\n      addButtonLabel=\"{{ field.label | translate }}\"\n      *ngIf=\"field.type === 'nameValuePairs'\"\n      [(ngModel)]=\"stepDetails[field.name]\"\n      [name]=\"field.name\"\n    >\n    </rx-name-value-pairs-editor>\n\n    <adapt-rx-radiobutton-group\n      *ngIf=\"field.type === 'radio'\"\n      [(ngModel)]=\"stepDetails[field.name]\"\n      [name]=\"field.name\"\n      [label]=\"field.label | translate\"\n    >\n      <adapt-rx-radiobutton\n        *ngFor=\"let selectionValue of field.selectOptions\"\n        [value]=\"selectionValue.value\"\n        [label]=\"getSelectionValue(selectionValue, field)\"\n      >\n      </adapt-rx-radiobutton>\n    </adapt-rx-radiobutton-group>\n\n    <adapt-rx-radiobutton-group\n      *ngIf=\"field.type === 'serverEndpointRadio'\"\n      [(ngModel)]=\"authEndpoint\"\n      [name]=\"field.name\"\n      [label]=\"field.label | translate\"\n      [tooltip]=\"{\n        iconName: 'question_circle_o',\n        content: field.tooltip | translate,\n        placement: 'auto',\n        popoverMode: true\n      }\"\n      (ngModelChange)=\"onRadioButtonChange($event, field)\"\n    >\n      <adapt-rx-radiobutton\n        *ngFor=\"let selectionValue of field.selectOptions\"\n        [value]=\"selectionValue.value\"\n        [label]=\"getSelectionValue(selectionValue, field)\"\n      >\n      </adapt-rx-radiobutton>\n    </adapt-rx-radiobutton-group>\n\n    <adapt-rx-textfield\n      name=\"url\"\n      *ngIf=\"field.type === 'serverEndpointRadio'\"\n      [disabled]=\"authEndpoint != 'Custom'\"\n      [(ngModel)]=\"stepDetails[field.name]\"\n      [placeholder]=\"field.placeholder | translate\"\n      [required]=\"field.required\"\n      [attr.rx-id]=\"field.rxId\"\n      class=\"d-block form-group\"\n    >\n    </adapt-rx-textfield>\n  </ng-container>\n</form>\n"]}