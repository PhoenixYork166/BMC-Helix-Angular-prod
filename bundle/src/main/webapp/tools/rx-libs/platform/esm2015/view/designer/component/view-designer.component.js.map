{"version":3,"file":"view-designer.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/designer/component/view-designer.component.ts","../../../../../../../libs/platform/view/designer/component/view-designer.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  InjectFlags,\n  InjectionToken,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { RxAssociationDefinitionCacheService } from '@helix/platform/association/api';\nimport { RxNamedListDefinitionCacheService } from '@helix/platform/named-list/api';\nimport { RxProcessDefinitionCacheService } from '@helix/platform/process/api';\nimport { RxRecordDefinitionCacheService } from '@helix/platform/record/api';\nimport {\n  IFormBuilderEvent,\n  IPlainObject,\n  RX_APPLICATION,\n  RxComponentCanDeactivateGuard,\n  RxDefinitionNameService,\n  RxFeatureService,\n  RxLogService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport {\n  IExpressionEditorProperty,\n  RX_EXPRESSION_EDITOR,\n  RX_REVERT_CUSTOMIZATION,\n  RX_VALIDATION_FORM_CONTROL,\n  RxDefinitionPickerCacheService,\n  RxExpressionEditorService,\n  RxGainsightConfiguratorService\n} from '@helix/platform/shared/components';\nimport {\n  IBreadcrumbItem,\n  IValidationIssue,\n  IValidationIssueSection,\n  RX_MODAL,\n  RxModalService,\n  RxUtilityModalsService,\n  ValidationIssueType\n} from '@helix/platform/ui-kit';\nimport {\n  RxViewComponentType,\n  RxViewDefinitionCacheService,\n  RxViewDefinitionService,\n  ViewDefinitionType\n} from '@helix/platform/view/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { cloneDeep, filter as _filter, get, isEqual, isUndefined, pick, set, toPath } from 'lodash';\nimport { BehaviorSubject, combineLatest, EMPTY, Observable, of, ReplaySubject, Subject, Subscription } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  shareReplay,\n  skip,\n  startWith,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n  withLatestFrom\n} from 'rxjs/operators';\nimport { ViewDesignerFacade } from '../+state/view-designer.facade';\nimport { DropComponentData, IViewComponentDropData } from '../components/view-designer-canvas';\nimport { RxViewDefinitionGeneratorService } from '../core/view-definition-generator.service';\nimport { RxViewDesignerModels } from '../core/view-designer-models.service';\nimport { RxViewModel } from '../model/view-model.service';\nimport { IViewDesignerConfiguration } from '../public-interfaces';\nimport { RxViewDesignerHelperService } from './view-designer-helper.service';\n\nexport const RX_VIEW_MODEL = new InjectionToken('RX_VIEW_MODEL');\n\n@Component({\n  selector: 'rx-view-designer',\n  templateUrl: './view-designer.component.html',\n  styleUrls: ['./view-designer.component.scss'],\n  providers: [RxViewModel]\n})\nexport class RxViewDesignerComponent implements OnInit, OnDestroy, OnChanges {\n  @Input()\n  configuration: IViewDesignerConfiguration;\n\n  @Output()\n  viewDefinitionSaved: EventEmitter<string> = new EventEmitter();\n\n  @Output()\n  viewDefinitionErrorLoading: EventEmitter<void> = new EventEmitter();\n\n  @Output()\n  closeDesigner: EventEmitter<void> = new EventEmitter<void>();\n\n  @ViewChild('viewPropertyInspector', { read: ElementRef })\n  viewPropertyInspectorElementRef: ElementRef;\n\n  @ViewChild('viewComponentPropertyInspector', { read: ElementRef })\n  viewComponentPropertyInspectorElementRef: ElementRef;\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private inspectorFocusEditorSubject = new Subject<{ editorName: string; data: IPlainObject }>();\n  private isViewDefinitionChanged$ = new BehaviorSubject<boolean>(false);\n\n  isPreviewAvailable$: Observable<boolean>;\n  isSaveButtonDisabled$: Observable<boolean>;\n\n  validationIssues$: Observable<IValidationIssueSection[]> = this.rxViewDesignerHelperService.validationIssues$.pipe(\n    shareReplay(1),\n    takeUntil(this.destroyed$)\n  );\n\n  breadcrumbItems$: Observable<IBreadcrumbItem[]> = this.rxViewDesignerHelperService.breadcrumbItems$;\n  canvasLayout$ = this.rxViewDesignerHelperService.canvasLayout$;\n  canvasDndListIds = this.rxViewDesignerHelperService.canvasDndListIds;\n\n  private extensionViewRootComponentType = RxViewComponentType.RecordEditor;\n\n  // Component UI State\n  isDesignMode = true;\n  isStencilExpanded = true;\n  isInspectorExpanded = true;\n  isPageView: boolean;\n  viewDefinitionName$: Observable<string>;\n  inspectorFocusEditor$ = this.inspectorFocusEditorSubject.asObservable();\n  hasValidationErrors$: Observable<boolean>;\n  hasValidationWarning$: Observable<boolean>;\n\n  viewComponentInspectorEmptyText$ = this.viewDesignerFacade.selectedComponentInspectorLayout$.pipe(\n    switchMap((selectedComponentLayout) =>\n      selectedComponentLayout\n        ? of(null)\n        : this.viewDesignerFacade.selectedComponentGuid$.pipe(\n            withLatestFrom(this.viewDesignerFacade.viewModel$),\n            map(([selectedComponentGuid, viewModel]) =>\n              selectedComponentGuid && selectedComponentGuid !== viewModel.guid\n                ? 'Selected component has no properties.'\n                : 'Select a component to view its properties here.'\n            )\n          )\n    ),\n    shareReplay({\n      refCount: true,\n      bufferSize: 1\n    })\n  );\n\n  selectedComponentModel$ = this.viewDesignerFacade.selectedComponentGuid$.pipe(\n    map((guid) => this.rxViewDesignerModels.get(guid))\n  );\n\n  isReadOnly$ = this.viewDesignerFacade.isViewReadOnly$;\n\n  paletteComponents$ = combineLatest([\n    this.viewDesignerFacade.isExtensionView$.pipe(tap((isExtensionView) => (this.isExtensionView = isExtensionView))),\n    this.viewDesignerFacade.isExtensionContainerSet$.pipe(\n      tap((isExtensionContainerSet) => (this.isExtensionContainerSet = isExtensionContainerSet))\n    ),\n    this.rxViewDesignerHelperService\n      .getLicensedComponents()\n      .pipe(\n        map((descriptors) =>\n          this.configuration.paletteComponentsPredicate\n            ? descriptors.filter((descriptor) => this.configuration.paletteComponentsPredicate(descriptor))\n            : descriptors\n        )\n      )\n  ]).pipe(\n    switchMap(([isExtensionView, isExtensionContainerSet, componentDescriptors]) =>\n      isExtensionView\n        ? this.viewDesignerFacade.firstViewComponentModelType$.pipe(\n            map((firstViewComponentType) =>\n              firstViewComponentType === this.extensionViewRootComponentType\n                ? componentDescriptors.filter(\n                    ({ type }) =>\n                      type !== this.extensionViewRootComponentType &&\n                      this.rxViewDesignerHelperService.extensionViewAllowedComponentTypes.has(\n                        type as RxViewComponentType\n                      )\n                  )\n                : componentDescriptors.filter(({ type }) => type === this.extensionViewRootComponentType)\n            )\n          )\n        : of(componentDescriptors)\n    )\n  );\n\n  private viewDefinitionChangeSubscription: Subscription;\n\n  rxViewModel: RxViewModel | any;\n  private isExtensionView: boolean;\n  private isExtensionContainerSet: boolean;\n\n  constructor(\n    public viewDesignerFacade: ViewDesignerFacade,\n    private rxNotificationService: RxNotificationService,\n    private rxDefinitionPickerCacheService: RxDefinitionPickerCacheService,\n    private rxNamedListDefinitionCacheService: RxNamedListDefinitionCacheService,\n    private rxModalService: RxModalService,\n    private translateService: TranslateService,\n    private rxUtilityModalsService: RxUtilityModalsService,\n    private rxViewDesignerHelperService: RxViewDesignerHelperService,\n    private rxExpressionEditorService: RxExpressionEditorService,\n    private rxViewDefinitionService: RxViewDefinitionService,\n    private rxComponentCanDeactivateGuard: RxComponentCanDeactivateGuard,\n    private rxViewDefinitionGeneratorService: RxViewDefinitionGeneratorService,\n    private rxViewDesignerModels: RxViewDesignerModels,\n    private rxLogService: RxLogService,\n    private injector: Injector,\n    private renderer: Renderer2,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxAssociationDefinitionCacheService: RxAssociationDefinitionCacheService,\n    private rxProcessDefinitionCacheService: RxProcessDefinitionCacheService,\n    private rxViewDefinitionCacheService: RxViewDefinitionCacheService,\n    private rxGainsightConfiguratorService: RxGainsightConfiguratorService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxFeatureService: RxFeatureService\n  ) {\n    const customViewModel = this.injector.get(RX_VIEW_MODEL, null, InjectFlags.Optional);\n\n    this.rxViewModel = customViewModel || this.injector.get(RxViewModel);\n\n    this.rxDefinitionPickerCacheService.registerConsumer();\n    this.rxNamedListDefinitionCacheService.registerConsumer(this.destroyed$);\n    this.rxAssociationDefinitionCacheService.registerConsumer(this.destroyed$);\n    this.rxProcessDefinitionCacheService.registerConsumer(this.destroyed$);\n    this.rxRecordDefinitionCacheService.registerConsumer(this.destroyed$);\n    this.rxViewDefinitionCacheService.registerConsumer(this.destroyed$);\n  }\n\n  ngOnInit(): void {\n    this.isPreviewAvailable$ = this.viewDesignerFacade.getViewPropertyValue('lastUpdateTime').pipe(\n      map(\n        (lastUpdateTime) =>\n          !this.configuration.disablePreview &&\n          (Boolean(lastUpdateTime) || !isUndefined(this.configuration.viewDefinitionName))\n      ),\n      takeUntil(this.destroyed$)\n    );\n\n    this.viewDefinitionName$ = this.viewDesignerFacade.getViewPropertyValue('name');\n\n    this.viewDesignerFacade\n      .getViewPropertyValue('pageComponent')\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((pageComponent) => {\n        this.isPageView = Boolean(pageComponent);\n      });\n\n    this.viewDesignerFacade.viewDefinitionSaveSuccess$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(({ viewDefinitionName }) => {\n        this.rxNotificationService.addSuccessMessage('View definition saved successfully.');\n        this.viewDefinitionSaved.emit(viewDefinitionName);\n\n        this.initViewDesigner();\n      });\n\n    this.viewDesignerFacade.viewDefinitionLoadError$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(() => this.viewDefinitionErrorLoading.emit());\n\n    this.hasValidationErrors$ = this.validationIssues$.pipe(\n      map((validationIssues) =>\n        Boolean(\n          _filter(validationIssues, {\n            issues: [{ type: ValidationIssueType.Error }]\n          }).length\n        )\n      ),\n      distinctUntilChanged()\n    );\n\n    this.hasValidationWarning$ = this.validationIssues$.pipe(\n      map((validationIssues) =>\n        Boolean(\n          _filter(validationIssues, {\n            issues: [{ type: ValidationIssueType.Warning }]\n          }).length\n        )\n      ),\n      distinctUntilChanged()\n    );\n\n    this.isSaveButtonDisabled$ = combineLatest([\n      this.hasValidationErrors$,\n      this.viewDesignerFacade.areViewModelsReady$,\n      this.isViewDefinitionChanged$,\n      this.isReadOnly$\n    ]).pipe(\n      map(\n        ([hasValidationErrors, areViewModelsReady, isChanged, isReadOnly]) =>\n          hasValidationErrors || !areViewModelsReady || !isChanged || isReadOnly\n      ),\n      startWith(true)\n    );\n\n    this.isReadOnly$.pipe(takeUntil(this.destroyed$)).subscribe((isReadOnly) => {\n      if (isReadOnly) {\n        this.rxNotificationService.addWarningMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.designer.read-only-definition-warning.message')\n        );\n      }\n    });\n\n    if (this.rxFeatureService.isFeatureEnabled('DRD21-11744')) {\n      this.viewDefinitionName$.pipe(take(1)).subscribe((viewDefinitionName) => {\n        this.rxGainsightConfiguratorService.updateGlobalContext({\n          subProductLevel1: {\n            name: 'Design'\n          },\n          subProductLevel2: {\n            name:\n              this.rxDefinitionNameService.getDisplayName(viewDefinitionName) == RX_APPLICATION.shellDefinitionName\n                ? 'Shell designer'\n                : 'View designer'\n          }\n        });\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.configuration.currentValue) {\n      this.initViewDesigner(true);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n    this.inspectorFocusEditorSubject.complete();\n    this.isViewDefinitionChanged$.complete();\n    this.rxDefinitionPickerCacheService.unRegisterConsumer();\n    this.viewDesignerFacade.destroyViewDesigner();\n\n    this.rxGainsightConfiguratorService.removeGlobalContext(['subProductLevel2', 'subProductLevel3']);\n  }\n\n  private initViewDesigner(dispatchInitViewDesignerAction = false): void {\n    // Mark view definition as not changed if it's not. This needs for scenario when view designer\n    // will be reinitialized with another view definition name and current view is dirty.\n    if (this.isViewDefinitionChanged$.getValue()) {\n      this.isViewDefinitionChanged$.next(false);\n    }\n\n    this.viewDefinitionChangeSubscription?.unsubscribe();\n\n    if (dispatchInitViewDesignerAction) {\n      this.viewDesignerFacade.initViewDesigner(\n        pick(this.configuration, ['bundleId', 'viewDefinitionName', 'layoutTemplate'])\n      );\n    }\n\n    this.initViewDefinitionChangeSubscription();\n  }\n\n  private initViewDefinitionChangeSubscription(): void {\n    this.viewDefinitionChangeSubscription = this.viewDesignerFacade.areViewModelsReady$\n      .pipe(\n        // Wait until models state will be updated with view and view components data.\n        filter(Boolean),\n        take(1),\n        switchMap(() =>\n          combineLatest([this.viewDesignerFacade.viewModel$, this.viewDesignerFacade.viewComponentModels$]).pipe(\n            map(([viewModel, viewComponentModels]) =>\n              this.rxViewDefinitionGeneratorService.generate(viewModel, viewComponentModels)\n            ),\n            distinctUntilChanged(isEqual),\n            // Skip first emit from distinctUntilChanged.\n            skip(1),\n            // Complete after first emit, it's considered that view definition gets changed so no needs for further emits.\n            take(1),\n            takeUntil(this.destroyed$)\n          )\n        ),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => {\n        this.isViewDefinitionChanged$.next(true);\n      });\n  }\n\n  onSelectComponent(guid: string): void {\n    this.viewDesignerFacade.selectComponent(guid);\n  }\n\n  onDropComponent(data: DropComponentData): void {\n    this.viewDesignerFacade.insertComponent(data);\n  }\n\n  onRemoveComponent(guid: string): void {\n    this.rxUtilityModalsService\n      .confirm('Are you sure you want to delete this view component?')\n      .then((isConfirmed: boolean) => {\n        if (isConfirmed) {\n          this.viewDesignerFacade.removeViewComponents([guid], true);\n\n          if (this.isPageView) {\n            this.viewDesignerFacade.updateViewProperties({ pageComponent: null });\n          }\n        }\n      });\n  }\n\n  onInspectorTabChange(event: { index: number }): void {\n    this.viewDesignerFacade.selectInspectorTab({ tabId: event.index });\n  }\n\n  toggleDesignMode(): void {\n    if (this.isDesignMode) {\n      this.viewDesignerFacade.generateViewDefinition();\n    }\n\n    this.isDesignMode = !this.isDesignMode;\n  }\n\n  onComponentPropertiesChange(properties: IPlainObject): void {\n    this.viewDesignerFacade.updateSelectedComponentProperties(properties);\n  }\n\n  onEditorEvent(event: IFormBuilderEvent, inspectorElementRef: ElementRef): void {\n    if (event.type === RX_VALIDATION_FORM_CONTROL.events.correctValidationIssue) {\n      this.correctValidationIssue(event.payload.componentGuid, event.payload.propertyName);\n    }\n\n    if (event.type === RX_REVERT_CUSTOMIZATION.events.revertCustomization) {\n      this.revertCustomization();\n    }\n\n    if (event.type === RX_EXPRESSION_EDITOR.events.openExpressionEditor) {\n      this.openExpressionEditor(event.payload, inspectorElementRef);\n    }\n  }\n\n  private getExpressionProperties(inspectorElementRef: ElementRef): Observable<IExpressionEditorProperty[]> {\n    return (\n      this.viewComponentPropertyInspectorElementRef === inspectorElementRef\n        ? this.viewDesignerFacade.selectedComponentProperties$\n        : this.viewDesignerFacade.viewModel$\n    ).pipe(\n      map((properties) =>\n        Array.from(\n          this.renderer\n            .selectRootElement(inspectorElementRef.nativeElement, true)\n            .querySelectorAll('rx-expression-form-control')\n        ).map((element: Element) => {\n          const propertyPath = element.getAttribute('property-path');\n\n          return {\n            path: propertyPath,\n            value: get(properties, propertyPath),\n            label: element.getAttribute('property-label')\n          };\n        })\n      )\n    );\n  }\n\n  private openExpressionEditor(payload: IPlainObject, inspectorElementRef: ElementRef): void {\n    const isComponentInspectorChange = this.viewComponentPropertyInspectorElementRef === inspectorElementRef;\n\n    const props$ = isComponentInspectorChange\n      ? this.viewDesignerFacade.selectedComponentProperties$\n      : this.viewDesignerFacade.viewModel$;\n\n    combineLatest([this.viewDesignerFacade.selectedComponentGuid$, props$])\n      .pipe(\n        take(1),\n        switchMap(([componentGuid, properties]) => {\n          const model = isComponentInspectorChange ? this.rxViewDesignerModels.get(componentGuid) : this.rxViewModel;\n          const expressionConfigurator = model?.expressionConfigurator;\n\n          if (expressionConfigurator) {\n            return this.rxExpressionEditorService\n              .openEditor({\n                property: {\n                  path: payload.propertyPath,\n                  value: get(properties, payload.propertyPath),\n                  label: payload.propertyLabel\n                },\n                isReadOnly: payload.isReadOnly,\n                expressionConfigurator,\n                legend: [\n                  {\n                    label: this.translateService.instant(\n                      'com.bmc.arsys.rx.client.expression-editor.legend.function.label'\n                    ),\n                    icon: 'd-icon-mathematical_function'\n                  },\n                  {\n                    label: this.translateService.instant(\n                      'com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'\n                    ),\n                    icon: 'd-icon-dollar'\n                  },\n                  {\n                    label: this.translateService.instant(\n                      'com.bmc.arsys.rx.client.expression-editor.legend.view-component.label'\n                    ),\n                    icon: 'd-icon-file_o'\n                  },\n                  {\n                    label: this.translateService.instant(\n                      'com.bmc.arsys.rx.client.expression-editor.legend.view-component-property.label'\n                    ),\n                    icon: 'd-icon-file_o_gear'\n                  },\n                  {\n                    label: this.translateService.instant(\n                      'com.bmc.arsys.rx.client.expression-editor.legend.view-input-parameter.label'\n                    ),\n                    icon: 'd-icon-arrow_right_square_input'\n                  }\n                ],\n                expressionPropertyNavigator: {\n                  getProperties: this.getExpressionProperties.bind(this, inspectorElementRef)\n                }\n              })\n              .pipe(\n                withLatestFrom(props$),\n                map(([{ path, value }, props]) => {\n                  if (props.hasOwnProperty(path)) {\n                    return { [path]: value };\n                  } else {\n                    // Don't override nested model properties e.g,\n                    // when 'path' = \"outputParams[1].source\" and 'value' = \"${bar}\", model will be updated from:\n                    // {..., outputParams: [{name: 'foo', source: ${foo}}, {name: 'bar', source: null}] } to:\n                    // {..., outputParams: [{name: 'foo', source: ${foo}}, {name: 'bar', source: ${bar}}] }\n                    const headPropertyName = toPath(path)[0];\n\n                    // clone value because \"set\" mutates object, otherwise expression\n                    // form control component will not be updated with new value.\n                    return set({ [headPropertyName]: cloneDeep(props[headPropertyName]) }, path, value);\n                  }\n                })\n              );\n          } else {\n            this.rxLogService.debug(\n              'View designer: Expression editor cannot be opened without expression configurator.'\n            );\n\n            return EMPTY;\n          }\n        }),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe((value) =>\n        isComponentInspectorChange\n          ? this.viewDesignerFacade.updateSelectedComponentProperties(value)\n          : this.viewDesignerFacade.updateViewProperties(value)\n      );\n  }\n\n  saveViewDefinition(): void {\n    this.viewDesignerFacade.viewModel$\n      .pipe(\n        take(1),\n        switchMap((viewModel) => {\n          const message =\n            viewModel.type === ViewDefinitionType.Shell\n              ? 'If you save your changes now, you will not be able to run this application using the old UI. Do you want to continue?'\n              : 'If you save this view definition, you will not be able to open it in the old view designer. Do you want to continue?';\n\n          if (viewModel.isAngularJsView) {\n            return this.rxModalService.confirm({\n              title: 'Warning',\n              modalStyle: RX_MODAL.modalStyles.warning,\n              message\n            });\n          } else {\n            return of(true);\n          }\n        }),\n        filter(Boolean),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => {\n        this.viewDesignerFacade.saveViewDefinition();\n      });\n  }\n\n  onCorrectIssue(validationIssue: IValidationIssue): void {\n    this.correctValidationIssue(\n      validationIssue.data.guid,\n      validationIssue.data.propertyName,\n      validationIssue.data.data\n    );\n  }\n\n  correctValidationIssue(guid: string, propertyName: string, data?: IPlainObject): void {\n    this.viewDesignerFacade.selectComponent(guid);\n\n    // need to wait until inspector will be visible\n    // there are no way to focus to invisible elements\n    setTimeout(() => this.inspectorFocusEditorSubject.next({ editorName: propertyName, data }), 10);\n  }\n\n  private revertCustomization(): void {\n    this.viewDefinitionName$\n      .pipe(\n        switchMap((viewDefinitionName) => this.rxViewDefinitionService.revertCustomization(viewDefinitionName)),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => {\n        this.rxComponentCanDeactivateGuard.disable();\n        window.location.reload();\n      });\n  }\n\n  onViewPropertiesChange(properties: IPlainObject): void {\n    this.viewDesignerFacade.updateViewProperties(properties);\n  }\n\n  showPreview(): void {\n    this.viewDesignerFacade.runPreview();\n  }\n\n  canDeactivate(): boolean {\n    let canDeactivate = true;\n\n    combineLatest([this.isViewDefinitionChanged$, this.isReadOnly$])\n      .pipe(\n        map(([isChanged, isReadOnly]) => !isChanged || isReadOnly),\n        take(1)\n      )\n      .subscribe((isPristineOrReadOnly) => {\n        canDeactivate = isPristineOrReadOnly;\n      });\n\n    return canDeactivate;\n  }\n\n  onBeforeComponentDropInRoot(event: IViewComponentDropData): void {\n    if (this.isExtensionView) {\n      if (!this.isExtensionContainerSet) {\n        this.rxNotificationService.addWarningMessage('Select Extension container before adding view components.');\n\n        event.preventDrop = true;\n      } else if (event.draggedViewComponentDescriptor.type !== RxViewComponentType.RecordEditor) {\n        this.rxNotificationService.addWarningMessage('This view component can only be added inside a Record editor.');\n\n        event.preventDrop = true;\n      }\n    }\n  }\n}\n","<rx-designer-header\n  [bundleName]=\"viewDesignerFacade.bundleFriendlyName$ | async\"\n  [breadcrumbItems]=\"breadcrumbItems$ | async\"\n  [isDesignMode]=\"isDesignMode\"\n  [isPreviewAvailable]=\"isPreviewAvailable$ | async\"\n  [isSaveButtonDisabled]=\"isSaveButtonDisabled$ | async\"\n  (breadcrumbSelected)=\"onSelectComponent($event.data.guid)\"\n  (toggleDesignMode)=\"toggleDesignMode()\"\n  (showPreview)=\"showPreview()\"\n  (save)=\"saveViewDefinition()\"\n  (closeDesigner)=\"closeDesigner.emit()\"\n></rx-designer-header>\n\n<div class=\"rx-component-view-designer\" [hidden]=\"!isDesignMode\">\n  <rx-blade\n    [title]=\"'Palette'\"\n    rx-id=\"palette\"\n    (toggle)=\"isStencilExpanded = !isStencilExpanded\"\n    [isExpanded]=\"isStencilExpanded\"\n  >\n    <rx-view-designer-palette\n      *ngIf=\"!isPageView && !(isReadOnly$ | async)\"\n      [components]=\"paletteComponents$ | async\"\n      [allowedDropListIds]=\"canvasDndListIds\"\n    ></rx-view-designer-palette>\n\n    <adapt-alert\n      *ngIf=\"isPageView && !(isReadOnly$ | async)\"\n      class=\"p-3\"\n      [config]=\"{\n        content:\n          'There are no view components to display. View with a Page view component cannot contain any other view components.',\n        variant: 'info',\n        type: 'inline'\n      }\"\n    ></adapt-alert>\n\n    <adapt-alert\n      *ngIf=\"!(viewDesignerFacade.isViewDefinitionLoading$ | async) && isReadOnly$ | async\"\n      class=\"p-3\"\n      [config]=\"{\n        content: 'This view is not editable. There are no view components to display.',\n        variant: 'info',\n        type: 'inline'\n      }\"\n    ></adapt-alert>\n  </rx-blade>\n\n  <section class=\"rx-view-designer-container\">\n    <rx-view-designer-canvas\n      class=\"flex-grow-1\"\n      [layout]=\"canvasLayout$ | async\"\n      [isReadOnly]=\"isReadOnly$ | async\"\n      (componentSelect)=\"onSelectComponent($event)\"\n      (componentRemove)=\"onRemoveComponent($event)\"\n      (componentDrop)=\"onDropComponent($event)\"\n      (beforeComponentDropInRoot)=\"onBeforeComponentDropInRoot($event)\"\n    ></rx-view-designer-canvas>\n  </section>\n\n  <rx-blade\n    [title]=\"'Properties'\"\n    dockTo=\"right\"\n    rx-id=\"properties\"\n    (toggle)=\"isInspectorExpanded = !isInspectorExpanded\"\n    [isExpanded]=\"isInspectorExpanded\"\n  >\n    <adapt-tabset\n      [tab-active]=\"viewDesignerFacade.selectedInspectorTabId$ | async\"\n      (tab-active-changed)=\"onInspectorTabChange($event)\"\n      [class.has-validation-warning]=\"hasValidationWarning$ | async\"\n      [class.has-validation-errors]=\"hasValidationErrors$ | async\"\n      customCssTabContent=\"p-0\"\n      justify=\"justified\"\n    >\n      <adapt-tab-panel icon=\"d-icon-pencil\">\n        <rx-form-builder\n          #viewPropertyInspector\n          (modelChange)=\"onViewPropertiesChange($event)\"\n          (editorEvent)=\"onEditorEvent($event, viewPropertyInspectorElementRef)\"\n          [focusEditor$]=\"inspectorFocusEditor$\"\n          [config]=\"viewDesignerFacade.viewInspectorLayout$ | async\"\n          [model]=\"viewDesignerFacade.viewModel$ | async\"\n          [isReadOnly]=\"isReadOnly$ | async\"\n        ></rx-form-builder>\n      </adapt-tab-panel>\n\n      <adapt-tab-panel icon=\"d-icon-gear\">\n        <rx-form-builder\n          rxInspector\n          [designerItemModel]=\"selectedComponentModel$ | async\"\n          #viewComponentPropertyInspector\n          (modelChange)=\"onComponentPropertiesChange($event)\"\n          (editorEvent)=\"onEditorEvent($event, viewComponentPropertyInspectorElementRef)\"\n          [focusEditor$]=\"inspectorFocusEditor$\"\n          [config]=\"viewDesignerFacade.selectedComponentInspectorLayout$ | async\"\n          [model]=\"viewDesignerFacade.selectedComponentProperties$ | async\"\n          [guid]=\"viewDesignerFacade.selectedComponentGuid$ | async\"\n          [isReadOnly]=\"isReadOnly$ | async\"\n        ></rx-form-builder>\n\n        <adapt-alert\n          [hidden]=\"!(viewComponentInspectorEmptyText$ | async)\"\n          class=\"p-3\"\n          [config]=\"{\n            content: viewComponentInspectorEmptyText$ | async,\n            variant: 'info',\n            type: 'inline'\n          }\"\n        ></adapt-alert>\n      </adapt-tab-panel>\n\n      <adapt-tab-panel icon=\"d-icon-exclamation_triangle\">\n        <rx-validation-issues\n          [definitionTypeDisplayName]=\"'com.bmc.arsys.rx.client.view-definition.label' | translate\"\n          (correctIssue)=\"onCorrectIssue($event)\"\n          [issueSections]=\"validationIssues$ | async\"\n        ></rx-validation-issues>\n      </adapt-tab-panel>\n    </adapt-tabset>\n  </rx-blade>\n</div>\n\n<adapt-code-viewer\n  *ngIf=\"!isDesignMode\"\n  [code]=\"viewDesignerFacade.viewDefinition$ | async | json\"\n  [lang]=\"'javascript'\"\n  [hasToolbar]=\"false\"\n  [theme]=\"'light'\"\n  class=\"full-size\"\n>\n</adapt-code-viewer>\n"]}