{"version":3,"file":"launch-process-designer-action.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/actions/launch-process-designer/launch-process-designer-action.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,iBAAiB,EAAiB,MAAM,uBAAuB,CAAC;AACzE,OAAO,EAAE,+BAA+B,EAAE,MAAM,6BAA6B,CAAC;AAC9E,OAAO,EAAsB,uBAAuB,EAAE,MAAM,0BAA0B,CAAC;AACvF,OAAO,EAAE,KAAK,EAAE,IAAI,EAAc,MAAM,MAAM,CAAC;AAC/C,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAE3C,OAAO,EAAE,6BAA6B,EAAE,MAAM,oCAAoC,CAAC;;;;AAKnF,MAAM,OAAO,oCAAoC;IAC/C,YACU,iBAAoC,EACpC,+BAAgE;QADhE,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,oCAA+B,GAA/B,+BAA+B,CAAiC;IACvE,CAAC;IAEJ,OAAO,CAAC,UAA8C;QACpD,OAAO,UAAU,CAAC,qBAAqB;YACrC,CAAC,CAAC,IAAI,CAAC,+BAA+B;iBACjC,oBAAoB,CAAC,UAAU,CAAC,qBAAqB,CAAC;iBACtD,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;YACtD,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC;IAEO,SAAS,CAAC,UAA8C;QAC9D,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;YACjC,OAAO,EAAE,6BAA6B;YACtC,IAAI,EAAE,uBAAuB,CAAC,QAAe;YAC7C,IAAI,EAAE,UAAU;SACjB,CAAC,CAAC;IACL,CAAC;;iIApBU,oCAAoC;qIAApC,oCAAoC,cAFnC,MAAM;2FAEP,oCAAoC;kBAHhD,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AdaptModalService, ModalDeferred } from '@bmc-ux/adapt-angular';\nimport { RxProcessDefinitionCacheService } from '@helix/platform/process/api';\nimport { IViewActionService, OpenViewActionModalSize } from '@helix/platform/view/api';\nimport { defer, from, Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { ILaunchProcessDesignerActionParams } from './launch-process-designer-action.types';\nimport { ProcessDesignerFrameComponent } from './process-designer-frame.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxLaunchProcessDesignerActionService implements IViewActionService<ILaunchProcessDesignerActionParams> {\n  constructor(\n    private adaptModalService: AdaptModalService,\n    private rxProcessDefinitionCacheService: RxProcessDefinitionCacheService\n  ) {}\n\n  execute(parameters: ILaunchProcessDesignerActionParams): Observable<any> {\n    return parameters.processDefinitionName\n      ? this.rxProcessDefinitionCacheService\n          .getProcessDefinition(parameters.processDefinitionName)\n          .pipe(switchMap(() => this.openModal(parameters)))\n      : defer(() => from(this.openModal(parameters)));\n  }\n\n  private openModal(parameters: ILaunchProcessDesignerActionParams): ModalDeferred {\n    return this.adaptModalService.open({\n      content: ProcessDesignerFrameComponent,\n      size: OpenViewActionModalSize.FullSize as any,\n      data: parameters\n    });\n  }\n}\n"]}