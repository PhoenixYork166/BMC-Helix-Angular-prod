{"version":3,"file":"textarea-field.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/field-components/textarea-field/runtime/textarea-field.component.ts","../../../../../../../../../libs/platform/view/components/field-components/textarea-field/runtime/textarea-field.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAEpD,OAAO,EAAE,8BAA8B,EAAE,MAAM,iFAAiF,CAAC;AAEjI,OAAO,EAAE,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;;;;;;;;AAOtE,MAAM,OAAO,sBAAuB,SAAQ,8BAA8B;IAGxE,YAAY,QAAkB,EAAU,wBAAkD;QACxF,KAAK,CAAC,QAAQ,CAAC,CAAC;QADsB,6BAAwB,GAAxB,wBAAwB,CAA0B;IAE1F,CAAC;IAED,mBAAmB,CAAC,MAA6C;QAC/D,KAAK,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QAElC,IAAI,IAAI,CAAC,eAAe,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE;YACxG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;SACjD;IACH,CAAC;;mHAbU,sBAAsB;uGAAtB,sBAAsB,gFCXnC,knBAqBA;2FDVa,sBAAsB;kBALlC,SAAS;mBAAC;oBACT,QAAQ,EAAE,mBAAmB;oBAC7B,WAAW,EAAE,iCAAiC;oBAC9C,SAAS,EAAE,CAAC,iCAAiC,CAAC;iBAC/C","sourcesContent":["import { Component, Injector } from '@angular/core';\nimport { IViewComponent } from '@helix/platform/view/runtime';\nimport { BaseRecordEditorFieldComponent } from '../../base-record-editor-field/runtime/base-record-editor-field-component.class';\nimport { IBaseRecordEditorFieldComponentConfig } from '../../base-record-editor-field/runtime/base-record-editor-field-component.types';\nimport { RxFieldDefinitionService } from '@helix/platform/record/api';\n\n@Component({\n  selector: 'rx-textarea-field',\n  templateUrl: './textarea-field.component.html',\n  styleUrls: ['./textarea-field.component.scss']\n})\nexport class TextareaFieldComponent extends BaseRecordEditorFieldComponent implements IViewComponent {\n  maxLength: number;\n\n  constructor(injector: Injector, private rxFieldDefinitionService: RxFieldDefinitionService) {\n    super(injector);\n  }\n\n  onConfigInitialized(config: IBaseRecordEditorFieldComponentConfig): void {\n    super.onConfigInitialized(config);\n\n    if (this.fieldDefinition.maxLength && !this.rxFieldDefinitionService.isSystemField(this.fieldDefinition)) {\n      this.maxLength = this.fieldDefinition.maxLength;\n    }\n  }\n}\n","<ng-container *ngIf=\"!isHidden\">\n  <rx-read-only-field\n    *ngIf=\"inReadState; else editStateElementRef\"\n    [label]=\"label\"\n    [value]=\"getDisplayValue()\"\n  ></rx-read-only-field>\n</ng-container>\n\n<ng-template #editStateElementRef>\n  <adapt-rx-textarea\n    [formControl]=\"formControl\"\n    [required]=\"isRequired\"\n    [maxlength]=\"maxLength\"\n    [rows]=\"3\"\n    [readonly]=\"isDisabled\"\n    [disabledStyleForReadonlyState]=\"true\"\n    [label]=\"label\"\n    [requiredLabel]=\"'com.bmc.arsys.rx.client.common.required-field.label' | translate\"\n  >\n  </adapt-rx-textarea>\n</ng-template>\n"]}