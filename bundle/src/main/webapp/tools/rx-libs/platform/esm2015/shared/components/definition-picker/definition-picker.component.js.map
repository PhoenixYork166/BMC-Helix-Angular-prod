{"version":3,"file":"definition-picker.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/components/definition-picker/definition-picker.component.ts","../../../../../../../libs/platform/shared/components/definition-picker/definition-picker.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AdaptDropdownDirective, AdaptRxTextfieldComponent } from '@bmc-ux/adapt-angular';\nimport {\n  IBundleDescriptor,\n  IFormControlComponent,\n  IFormFocusable,\n  RX_BUNDLE,\n  RxBundleCacheService,\n  RxDefinitionNameService,\n  RxGlobalCacheService\n} from '@helix/platform/shared/api';\nimport { RxStringService } from '@helix/platform/utils';\nimport { find, get, throttle } from 'lodash';\nimport { Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport { debounceTime, filter, first, map, switchMap, takeUntil } from 'rxjs/operators';\nimport { ValueAccessor } from '../form-builder/value-accessor';\nimport { RxDefinitionPickerCacheService } from './definition-picker-cache.service';\nimport { RX_DEFINITION_PICKER, RxDefinitionPickerScope } from './definition-picker.types';\nimport { IBundleDefinition, IBundleWithDefinitions } from './interfaces/bundle-with-definitions.interface';\nimport { IDefinitionDescriptor } from './interfaces/definition-descriptor.interface';\nimport { IDefinitionPickerComponentOptions } from './interfaces/definition-picker-component-options.interface';\nimport { IDefinitionProperties } from './interfaces/definition-properties.interface';\nimport { IDefinitionTypeDescriptorProperties } from './interfaces/definition-type-descriptor-properties.interface';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-definition-picker',\n  templateUrl: './definition-picker.component.html',\n  styleUrls: ['./definition-picker.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RxDefinitionPickerComponent,\n      multi: true\n    }\n  ]\n})\nexport class RxDefinitionPickerComponent\n  extends ValueAccessor<string>\n  implements IFormControlComponent, IFormFocusable, OnInit, OnDestroy, OnChanges\n{\n  @Input()\n  options: IDefinitionPickerComponentOptions;\n\n  @Input()\n  isDisabled = false;\n\n  @ViewChild('dropdownButton', { static: true })\n  dropdownButton: ElementRef;\n\n  @ViewChild('dropdownMenuHeader', { static: false })\n  dropdownMenuHeader: ElementRef;\n\n  @ViewChild('definitionPicker', { static: true })\n  dropdown: AdaptDropdownDirective;\n\n  config: IDefinitionPickerComponentOptions;\n\n  @ViewChild('definitionTree', { static: false })\n  definitionTreeElementRef: ElementRef;\n\n  @ViewChild('searchField', { static: false })\n  searchField: AdaptRxTextfieldComponent;\n\n  searchMode = false;\n  searchQuery = '';\n  bundles$: Observable<IBundleWithDefinitions[]>;\n  dropdownWidth: number;\n  activeDefinitionScope: RxDefinitionPickerScope;\n  definitionScopes: RxDefinitionPickerScope[];\n  currentBundleFriendlyName$: Observable<string>;\n  allDefinitionsLabel: string;\n\n  onPickerToggle$ = new Subject<boolean>();\n\n  private searchScope: RxDefinitionPickerScope;\n  private previousDefinitionScope: RxDefinitionPickerScope;\n  private definitionTypeDescriptor: IDefinitionTypeDescriptorProperties;\n  private bundleId = '';\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  private globalDefinitionsLabel: string = this.translateService.instant(\n    'com.bmc.arsys.rx.client.common.global-items.label'\n  );\n\n  private defaultOptions: Partial<IDefinitionPickerComponentOptions> = {\n    availableDefinitionPickerStates: {\n      definitionButtonsGroups: [RxDefinitionPickerScope.Bundle, RxDefinitionPickerScope.All],\n      search: RxDefinitionPickerScope.All\n    },\n    texts: {\n      placeholder: this.translateService.instant('com.bmc.arsys.rx.client.common.select.label'),\n      noBundleDeployed: this.translateService.instant(\n        'com.bmc.arsys.rx.client.definition-picker.no-bundle-deployed.label'\n      ),\n      noDefinitionsFound: this.translateService.instant(\n        'com.bmc.arsys.rx.client.definition-picker.no-definitions-found.label'\n      )\n    }\n  };\n\n  private scrollHandlerThrottled = throttle(this.scrollHandler.bind(this), 100);\n\n  constructor(\n    private renderer: Renderer2,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxDefinitionPickerCacheService: RxDefinitionPickerCacheService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxStringService: RxStringService,\n    private translateService: TranslateService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {\n    super();\n  }\n\n  @HostListener('window:resize')\n  onWindowResize(): void {\n    if (this.dropdown.isOpen()) {\n      this.dropdown.close();\n    }\n  }\n\n  ngOnInit(): void {\n    this.config = {\n      ...this.defaultOptions,\n      ...this.options,\n      texts: { ...this.defaultOptions.texts, ...this.options.texts }\n    };\n\n    this.rxDefinitionPickerCacheService.registerConsumer();\n    this.bundleId = this.config.bundleId || this.rxBundleCacheService.bundleId;\n    this.getCurrentBundleFriendlyName();\n    this.definitionTypeDescriptor = RX_DEFINITION_PICKER.definitionTypes[this.config.definitionType];\n    this.definitionScopes = this.config.availableDefinitionPickerStates.definitionButtonsGroups;\n    this.searchScope = this.config.availableDefinitionPickerStates.search;\n    this.allDefinitionsLabel = this.translateService.instant(this.definitionTypeDescriptor.allDefinitionsLabelKey);\n\n    this.onPickerToggle$\n      .pipe(\n        filter((isOpen) => Boolean(isOpen)),\n        first(),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe((isOpen) => {\n        this.getDefinitions(this.definitionScopes[0]);\n      });\n\n    this.onPickerToggle$\n      .pipe(\n        filter((isOpen) => !isOpen),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => this.resetPickerState());\n\n    window.addEventListener('scroll', this.scrollHandlerThrottled, true);\n  }\n\n  ngOnDestroy(): void {\n    this.rxDefinitionPickerCacheService.unRegisterConsumer();\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n\n    window.removeEventListener('scroll', this.scrollHandlerThrottled, true);\n  }\n\n  private scrollHandler(event: Event): void {\n    if (\n      this.dropdown.isOpen() &&\n      get(event.target, 'style.visibility') !== 'hidden' &&\n      !(\n        event.target === this.definitionTreeElementRef?.nativeElement ||\n        event.target === this.searchField?.inputRef.nativeElement\n      )\n    ) {\n      this.dropdown.close();\n    }\n  }\n\n  getDefinitionProperties(definitionDescriptors: IDefinitionDescriptor[]): Observable<IDefinitionProperties[]> {\n    return this.rxGlobalCacheService.getLicensedBundleDescriptors().pipe(\n      map((bundleDescriptors: IBundleDescriptor[]) => {\n        return definitionDescriptors.map((definitionDescriptor) => {\n          const bundleId = this.rxDefinitionNameService.getBundleId(definitionDescriptor.name);\n          const bundleDescriptor = find(bundleDescriptors, { id: bundleId });\n\n          const bundleName = bundleDescriptor\n            ? bundleDescriptor.friendlyName || bundleDescriptor.id\n            : bundleId || this.globalDefinitionsLabel;\n\n          return {\n            bundleName,\n            bundleId,\n            scope: definitionDescriptor.scope,\n            name: definitionDescriptor.name,\n            displayName: this.rxDefinitionNameService.getDisplayName(definitionDescriptor.name)\n          };\n        });\n      })\n    );\n  }\n\n  groupDefinitionsByBundle(definitionProperties: IDefinitionProperties[]): IBundleWithDefinitions[] {\n    const isBundleScopeSelected = this.activeDefinitionScope === RxDefinitionPickerScope.Bundle;\n    let hasExpandedBundle = false;\n\n    const bundleGroups = definitionProperties\n      .sort((a, b) => a.displayName.localeCompare(b.displayName))\n      .reduce((bundles, currentDefinitionProperties) => {\n        let bundle = bundles.find((bundleItem) => bundleItem.name === currentDefinitionProperties.bundleName);\n        const isSelectedDefinition = this.value === currentDefinitionProperties.name;\n\n        if (!bundle) {\n          bundle = {\n            id: currentDefinitionProperties.bundleId,\n            name: currentDefinitionProperties.bundleName,\n            isPublic: currentDefinitionProperties.scope === RX_BUNDLE.definitionScopeTypes.public,\n            definitions: [],\n            isExpanded: false\n          };\n\n          bundles.push(bundle);\n        }\n\n        if (isSelectedDefinition) {\n          bundle.isExpanded = true;\n          hasExpandedBundle = true;\n        }\n\n        bundle.definitions.push({\n          name: currentDefinitionProperties.name,\n          displayName: currentDefinitionProperties.displayName,\n          isPublic: currentDefinitionProperties.scope === RX_BUNDLE.definitionScopeTypes.public\n        });\n\n        return bundles;\n      }, [])\n      .sort((firstBundle: IBundleWithDefinitions, secondBundle: IBundleWithDefinitions): number => {\n        if (\n          (this.activeDefinitionScope === RxDefinitionPickerScope.Bundle && this.bundleId === firstBundle.id) ||\n          firstBundle.name === this.globalDefinitionsLabel\n        ) {\n          return -1;\n        }\n\n        if (\n          (this.activeDefinitionScope === RxDefinitionPickerScope.Bundle && this.bundleId === secondBundle.id) ||\n          secondBundle.name === this.globalDefinitionsLabel\n        ) {\n          return 1;\n        }\n\n        return firstBundle.name.localeCompare(secondBundle.name);\n      });\n\n    if (isBundleScopeSelected && !hasExpandedBundle && bundleGroups[0]) {\n      bundleGroups[0].isExpanded = true;\n    }\n\n    return bundleGroups;\n  }\n\n  getDefinitions(definitionScope: RxDefinitionPickerScope): Observable<IBundleWithDefinitions[]> {\n    this.activeDefinitionScope = definitionScope;\n\n    const dataGetter = this.definitionTypeDescriptor.dataGetters[definitionScope];\n\n    let definitions$;\n\n    if (definitionScope === RX_DEFINITION_PICKER.definitionScopes.bundle) {\n      definitions$ = this.rxGlobalCacheService.getBundleDescriptor(this.bundleId).pipe(\n        switchMap((bundle) => {\n          return bundle ? this.rxDefinitionPickerCacheService[dataGetter](this.bundleId) : of([]);\n        })\n      );\n    } else {\n      definitions$ = this.rxDefinitionPickerCacheService[dataGetter]();\n    }\n\n    return (this.bundles$ = definitions$.pipe(\n      switchMap((descriptors: IDefinitionDescriptor[]) => this.getDefinitionProperties(descriptors)),\n      map((definitionsProperties: IDefinitionProperties[]) => this.groupDefinitionsByBundle(definitionsProperties))\n    ));\n  }\n\n  selectDefinition(definitionName: string): void {\n    this.dropdown.close();\n\n    this.setValue(definitionName).then(() => {\n      // additional reset after value set to update expanded sections\n      this.resetPickerState();\n    });\n  }\n\n  clearDefinition(e: Event): void {\n    e.stopPropagation();\n\n    this.setValue(null);\n  }\n\n  private setValue(newValue: string): Promise<boolean> {\n    if (this.value !== newValue) {\n      if (this.options.beforeValueChange) {\n        return this.options.beforeValueChange(this.value, newValue).then((response) => {\n          if (response) {\n            this.value = newValue;\n          }\n\n          return response;\n        });\n      } else {\n        this.value = newValue;\n\n        return Promise.resolve(true);\n      }\n    } else {\n      return Promise.resolve(false);\n    }\n  }\n\n  setDropdownWidth(): void {\n    setTimeout(() => {\n      const dropdownButton = this.renderer.selectRootElement(this.dropdownButton.nativeElement, true);\n      const dropdownMenuHeader = this.renderer.selectRootElement(this.dropdownMenuHeader.nativeElement, true);\n\n      // 14px - combined left and right padding around the buttons in the header\n      // 2px - border\n      this.dropdownWidth = Math.max(dropdownButton.clientWidth, dropdownMenuHeader.clientWidth + 14) + 2;\n\n      // This is needed when definition picker is used in a component with OnPush change detection strategy\n      // TODO: this needs to be revisited when OnPush strategy is applied to the definition picker itself.\n      this.changeDetectorRef.markForCheck();\n    });\n  }\n\n  enableSearchMode(searchQuery?: string): void {\n    this.searchMode = true;\n    this.previousDefinitionScope = this.activeDefinitionScope;\n\n    if (searchQuery) {\n      this.searchQuery = searchQuery;\n      this.search(searchQuery);\n    } else {\n      this.getDefinitions(this.searchScope);\n    }\n  }\n\n  disableSearchMode(): void {\n    this.resetPickerState();\n  }\n\n  resetPickerState(): void {\n    this.getDefinitions(this.searchMode ? this.previousDefinitionScope : this.activeDefinitionScope);\n    this.searchMode = false;\n    this.searchQuery = '';\n  }\n\n  search(searchQuery: string): Observable<IBundleWithDefinitions[]> {\n    return (this.bundles$ = this.getDefinitions(this.searchScope).pipe(\n      debounceTime(250),\n      map((descriptors: IBundleWithDefinitions[]) =>\n        descriptors\n          .filter((descriptor) => {\n            return searchQuery.includes(':')\n              ? this.rxStringService.caseInsensitiveSearch(descriptor.name, this.getBundleNameSearchQuery(searchQuery))\n              : true;\n          })\n          .map((descriptor) => ({\n            ...descriptor,\n            definitions: descriptor.definitions.filter((definition) => {\n              return this.rxStringService.caseInsensitiveSearch(\n                definition.displayName,\n                this.getDefinitionNameSearchQuery(searchQuery)\n              );\n            })\n          }))\n          .filter((descriptor) => descriptor.definitions.length > 0)\n          .map((descriptor) => ({\n            ...descriptor,\n            isExpanded: true\n          }))\n      )\n    ));\n  }\n\n  focus(): void {\n    this.renderer.selectRootElement(this.dropdownButton.nativeElement, true).click();\n  }\n\n  @HostListener('window:paste', ['$event'])\n  onPaste(event: ClipboardEvent): void {\n    const pastedText = event.clipboardData.getData('text/plain');\n\n    if (this.dropdown.isOpen() && !this.searchMode && pastedText) {\n      this.enableSearchMode(pastedText);\n    }\n  }\n\n  @HostListener('window:keypress', ['$event'])\n  onKeypress(event: KeyboardEvent): void {\n    if (this.dropdown.isOpen() && !this.searchMode && event.key) {\n      this.enableSearchMode(event.key);\n    }\n  }\n\n  trackByBundle(index: number, bundle: IBundleWithDefinitions): string {\n    return bundle.id;\n  }\n\n  trackByDefinition(index: number, bundle: IBundleDefinition): string {\n    return bundle.name;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options && !changes.options.firstChange) {\n      if (changes.options.currentValue.bundleId !== changes.options.previousValue.bundleId) {\n        this.bundleId = this.options.bundleId;\n        this.getCurrentBundleFriendlyName();\n        this.getDefinitions(this.definitionScopes[0]);\n      } else if (changes.options.currentValue.definitionType !== changes.options.previousValue.definitionType) {\n        this.definitionTypeDescriptor =\n          RX_DEFINITION_PICKER.definitionTypes[changes.options.currentValue.definitionType];\n\n        this.allDefinitionsLabel = this.translateService.instant(this.definitionTypeDescriptor.allDefinitionsLabelKey);\n\n        this.getDefinitions(this.definitionScopes[0]);\n\n        this.value = null;\n      }\n    }\n  }\n\n  getCurrentBundleFriendlyName(): void {\n    this.currentBundleFriendlyName$ = this.rxGlobalCacheService\n      .getBundleDescriptor(this.bundleId)\n      .pipe(map((descriptor: IBundleDescriptor) => descriptor?.friendlyName || this.config.texts.noBundleDeployed));\n  }\n\n  getBundleNameSearchQuery(searchQuery: string): string {\n    return this.rxDefinitionNameService.getBundleId(searchQuery) || searchQuery;\n  }\n\n  getDefinitionNameSearchQuery(searchQuery: string): string {\n    return this.rxDefinitionNameService.getDisplayName(searchQuery);\n  }\n}\n","<adapt-rx-control-label\n  [label]=\"options.label\"\n  [tooltip]=\"options.tooltip\"\n  [showRequiredLabel]=\"!!options.required\"\n></adapt-rx-control-label>\n\n<div\n  class=\"dropdown\"\n  adaptDropdown\n  appendToBody=\"true\"\n  [autoClose]=\"'outside'\"\n  (onOpen)=\"onPickerToggle$.next(true);setDropdownWidth()\"\n  (onClose)=\"onPickerToggle$.next(false)\"\n  [autoFocusFirst]=\"false\"\n  #definitionPicker=\"adaptDropdown\"\n>\n  <button\n    rx-id=\"toggle-button\"\n    #dropdownButton\n    class=\"btn btn-secondary\"\n    adaptDropdownToggle\n    type=\"button\"\n    [disabled]=\"isDisabled\"\n  >\n    <span class=\"rx-selected-item\" [title]=\"value || ''\">\n      {{ (value | rxDefinitionNamePipe) || config.texts.placeholder }}\n    </span>\n\n    <span\n      rx-id=\"clear-button\"\n      class=\"d-icon-cross_adapt btn-link\"\n      (click)=\"clearDefinition($event)\"\n      *ngIf=\"value && !isDisabled\"\n    >\n    </span>\n  </button>\n\n  <div class=\"dropdown-menu\" [style.width.px]=\"dropdownWidth\" adaptDropdownMenu>\n    <div class=\"rx-dropdown-panel-header\" [ngClass]=\"searchMode ? 'pl-1' : 'pr-1'\">\n      <div class=\"d-flex\" *ngIf=\"!searchMode; else searchControls\" #dropdownMenuHeader>\n        <div class=\"btn-group bundle-btn-group\">\n          <button\n            type=\"button\"\n            adapt-button\n            *ngFor=\"let definitionScope of definitionScopes\"\n            class=\"rx-header-button\"\n            [btn-type]=\"activeDefinitionScope === definitionScope ? 'primary' : 'secondary'\"\n            size=\"xtra-small\"\n            (click)=\"getDefinitions(definitionScope)\"\n          >\n            <span>{{ definitionScope === 'bundle' ? (currentBundleFriendlyName$ | async) : allDefinitionsLabel }}</span>\n          </button>\n        </div>\n\n        <button\n          type=\"button\"\n          rx-id=\"search-button\"\n          class=\"d-icon-search btn btn-sm btn-link ml-1\"\n          *ngIf=\"!searchMode\"\n          (click)=\"$event.stopPropagation(); enableSearchMode()\"\n        ></button>\n      </div>\n    </div>\n\n    <ul #definitionTree class=\"rx-bundles\" *ngIf=\"dropdownWidth && bundles$ | async as bundles; else busyLoader\">\n      <adapt-empty-state\n        class=\"d-block mt-5\"\n        *ngIf=\"!bundles.length\"\n        type=\"search\"\n        [label]=\"config.texts.noDefinitionsFound\"\n      ></adapt-empty-state>\n\n      <li\n        class=\"rx-bundle\"\n        *ngFor=\"let bundle of bundles; trackBy: trackByBundle\"\n        (click)=\"bundle.isExpanded = !bundle.isExpanded\"\n      >\n        <span\n          rx-id=\"expand-bundle-button\"\n          class=\"expand-arrow d-icon-angle_right\"\n          [class.open]=\"bundle.isExpanded\"\n        ></span>\n\n        <adapt-highlight [result]=\"bundle.name\" [term]=\"searchQuery\"></adapt-highlight>\n\n        <div class=\"rx-definitions\" *ngIf=\"bundle.isExpanded\">\n          <button\n            class=\"dropdown-item\"\n            (click)=\"$event.stopPropagation(); selectDefinition(definition.name)\"\n            *ngFor=\"let definition of bundle.definitions; trackBy: trackByDefinition\"\n            [class.active]=\"value === definition.name\"\n            [title]=\"definition.name\"\n            type=\"button\"\n          >\n            <span *ngIf=\"!definition.isPublic\">* </span>\n\n            <adapt-highlight [result]=\"definition.displayName\" [term]=\"searchQuery\"></adapt-highlight>\n          </button>\n        </div>\n      </li>\n    </ul>\n  </div>\n</div>\n\n<ng-template #busyLoader>\n  <rx-busy-indicator></rx-busy-indicator>\n</ng-template>\n\n<ng-template #searchControls>\n  <button\n    type=\"button\"\n    rx-id=\"back-button\"\n    class=\"d-icon-arrow_left btn btn-sm btn-link mr-1\"\n    (click)=\"$event.stopPropagation(); disableSearchMode()\"\n  ></button>\n\n  <adapt-rx-textfield\n    #searchField\n    (ngModelChange)=\"search($event)\"\n    [autofocus]=\"true\"\n    [(ngModel)]=\"searchQuery\"\n    size=\"sm\"\n  ></adapt-rx-textfield>\n</ng-template>\n"]}