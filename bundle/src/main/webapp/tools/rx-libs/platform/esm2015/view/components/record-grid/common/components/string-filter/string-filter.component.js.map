{"version":3,"file":"string-filter.component.js","sourceRoot":"","sources":["../../../../../../../../../../libs/platform/view/components/record-grid/common/components/string-filter/string-filter.component.ts","../../../../../../../../../../libs/platform/view/components/record-grid/common/components/string-filter/string-filter.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACjD,OAAO,EACL,4BAA4B,EAI5B,UAAU,EACV,mBAAmB,EAEpB,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AAEjC,OAAO,EAAE,+BAA+B,EAAE,MAAM,qDAAqD,CAAC;;;;;;AAMtG,MAAM,OAAO,uBAAuB;IAJpC;QAeE,uBAAkB,GAAyC,EAAE,CAAC;KAa/D;IAXC,mCAAmC,CAAC,KAAgB,EAAE,QAA+B;;QACnF,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,mBAAmB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAE9E,IAAI,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAA,MAAA,IAAI,CAAC,WAAW,0CAAE,WAAW,KAAI,EAAE,CAAC,EAAE;YAC5F,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;SAC/B;aAAM;YACL,IAAI,CAAC,uBAAuB,CAAC,yBAAyB,CACpD,IAAI,+BAA+B,CAAC,QAAQ,EAAE,MAAA,IAAI,CAAC,WAAW,0CAAE,YAAY,CAAC,CAC9E,CAAC;SACH;IACH,CAAC;;oHAvBU,uBAAuB;wGAAvB,uBAAuB,4NClBpC,i2BAsBA;2FDJa,uBAAuB;kBAJnC,SAAS;mBAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,WAAW,EAAE,gCAAgC;iBAC9C;8BAGC,YAAY;sBADX,KAAK;gBAIN,WAAW;sBADV,KAAK;gBAIN,uBAAuB;sBADtB,KAAK;gBAIN,kBAAkB;sBADjB,KAAK","sourcesContent":["import { Component, Input } from '@angular/core';\nimport {\n  AdaptFilterControlsComponent,\n  AdaptMetatagComponent,\n  AdvancedFilterBooleanDataType,\n  AdvancedFilterOption,\n  getTagText,\n  isEmptyOrWhitespace,\n  TagType\n} from '@bmc-ux/adapt-angular';\nimport { isEqual } from 'lodash';\nimport { IRecordGridColumnNamedFilterOption } from '../../types/record-grid.types';\nimport { RxRecordGridAdvancedFilterValue } from '../../types/record-grid-advanced-filter-value.class';\n\n@Component({\n  selector: 'rx-string-filter',\n  templateUrl: './string-filter.component.html'\n})\nexport class RxStringFilterComponent {\n  @Input()\n  filterOption: AdvancedFilterOption;\n\n  @Input()\n  filterValue: RxRecordGridAdvancedFilterValue<AdvancedFilterBooleanDataType[]>;\n\n  @Input()\n  filterControlsComponent: AdaptFilterControlsComponent;\n\n  @Input()\n  namedFilterOptions: IRecordGridColumnNamedFilterOption[] = [];\n\n  onStringTypeFilterOptionModelChange(model: TagType[], tagField: AdaptMetatagComponent) {\n    const newModel = model.filter((tag) => !isEmptyOrWhitespace(getTagText(tag)));\n\n    if (newModel.length < model.length && isEqual(newModel, this.filterValue?.filterValue || [])) {\n      tagField.writeValue(newModel);\n    } else {\n      this.filterControlsComponent.onFilterOptionModelChange(\n        new RxRecordGridAdvancedFilterValue(newModel, this.filterValue?.namedOptions)\n      );\n    }\n  }\n}\n","<rx-named-filter-options-list\n  *ngIf=\"namedFilterOptions?.length\"\n  [namedFilterOptions]=\"namedFilterOptions\"\n  [filterOption]=\"filterOption\"\n  [filterValue]=\"filterValue\"\n  [filterControlsComponent]=\"filterControlsComponent\"\n></rx-named-filter-options-list>\n\n<adapt-tag-field\n  #stringDataTypeTagField\n  mainCls=\"advanced-filter__string-tag-field\"\n  [ngModel]=\"filterValue?.filterValue || []\"\n  popupClass=\"advanced-filter__typeahead-window\"\n  [testID]=\"filterControlsComponent.testID\"\n  (ngModelChange)=\"onStringTypeFilterOptionModelChange($event, stringDataTypeTagField)\"\n  [delimiterSymbol]=\"null\"\n  [placeholder]=\"filterControlsComponent.texts.stringTypeTagFieldPlaceholder\"\n  [replaceModelOnWrite]=\"true\"\n  [disabled]=\"filterControlsComponent.isInputDisabled()\"\n  [hideLabel]=\"true\"\n>\n</adapt-tag-field>\n"]}