{"version":3,"file":"previous-state.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/api/previous-state/previous-state.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACxD,OAAO,EAAE,oBAAoB,EAAE,MAAM,iCAAiC,CAAC;;;;AAKvE,MAAM,OAAO,sBAAsB;IAIjC,YAAoB,MAAc,EAAU,oBAA0C;QAAlE,WAAM,GAAN,MAAM,CAAQ;QAAU,yBAAoB,GAApB,oBAAoB,CAAsB;QACpF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;QAElC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YAChC,IAAI,KAAK,YAAY,aAAa,EAAE;gBAClC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;gBACnC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,IACE,IAAI,CAAC,WAAW;YAChB,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,UAAU;YACpC,IAAI,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,aAAa,QAAQ,EACvE;YACA,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC7C;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC,CAAC;SACjE;IACH,CAAC;;mHAzBU,sBAAsB;uHAAtB,sBAAsB,cAFrB,MAAM;2FAEP,sBAAsB;kBAHlC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { RxGlobalCacheService } from '../caching/global-cache.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxPreviousStateService {\n  private previousUrl: string;\n  private currentUrl: string;\n\n  constructor(private router: Router, private rxGlobalCacheService: RxGlobalCacheService) {\n    this.currentUrl = this.router.url;\n\n    router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.previousUrl = this.currentUrl;\n        this.currentUrl = event.url;\n      }\n    });\n  }\n\n  goToPrevState(): void {\n    if (\n      this.previousUrl &&\n      this.previousUrl !== this.currentUrl &&\n      this.previousUrl !== `${this.rxGlobalCacheService.applicationId}/login`\n    ) {\n      this.router.navigateByUrl(this.previousUrl);\n    } else {\n      this.router.navigate([this.rxGlobalCacheService.applicationId]);\n    }\n  }\n}\n"]}