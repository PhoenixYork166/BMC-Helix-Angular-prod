{"version":3,"file":"form-outlet.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/shared/components/form-builder/components/form-outlet/form-outlet.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChange,\n  SimpleChanges,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { isEqual, kebabCase } from 'lodash';\nimport { ReplaySubject } from 'rxjs';\nimport { FormControlModel } from '../../models/form-control.model';\nimport { IFormControlComponent, IFormFocusable } from '@helix/platform/shared/api';\nimport { takeUntil } from 'rxjs/operators';\nimport { FormWidgetModel } from '../../models/form-widget.model';\nimport { FormBuilderService } from '../form-builder/form-builder.service';\n\n@Component({\n  selector: 'rx-form-outlet',\n  template: '<ng-container #container></ng-container>',\n  styleUrls: ['./form-outlet.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: FormOutletComponent,\n      multi: true\n    }\n  ]\n})\nexport class FormOutletComponent implements OnInit, OnDestroy, ControlValueAccessor, OnChanges {\n  @Input()\n  control: FormControlModel | FormWidgetModel;\n\n  @ViewChild('container', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  private instance: IFormControlComponent;\n  private componentRef: ComponentRef<{}>;\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  constructor(\n    private cr: ComponentFactoryResolver,\n    private formBuilderService: FormBuilderService,\n    private renderer: Renderer2\n  ) {}\n\n  ngOnInit(): void {\n    const factory = this.cr.resolveComponentFactory(this.control.component);\n    const controlName = this.getControlName(this.control);\n\n    this.componentRef = this.container.createComponent(factory);\n    this.renderer.setAttribute(this.componentRef.location.nativeElement, 'rx-id', kebabCase(controlName));\n\n    this.instance = this.componentRef.instance as IFormControlComponent;\n    this.instance.options = this.control.options;\n    this.instance.propertyPath = controlName;\n\n    if (this.instance.events) {\n      this.instance.events.pipe(takeUntil(this.destroyed$)).subscribe((event) => {\n        this.formBuilderService.dispatch(event);\n      });\n    }\n\n    this.formBuilderService.focusEditor$.pipe(takeUntil(this.destroyed$)).subscribe(({ editorName, data }) => {\n      if (controlName === editorName && this.isFocusable(this.instance)) {\n        this.instance.focus(data);\n      }\n    });\n  }\n\n  private getControlName(control: FormControlModel | FormWidgetModel): string {\n    if (control instanceof FormWidgetModel) {\n      return control.component.name;\n    } else if (control instanceof FormControlModel) {\n      return control.name;\n    } else {\n      return '';\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.control && this.instance) {\n      this.instance.options = changes.control.currentValue.options;\n\n      if (this.isSupportChanges(this.instance)) {\n        const onChanges: any = {};\n\n        if (!isEqual(changes.control.previousValue.options, changes.control.currentValue.options)) {\n          onChanges.options = new SimpleChange(\n            changes.control.previousValue.options,\n            changes.control.currentValue.options,\n            false\n          );\n        }\n\n        if (changes.control.previousValue.isDisabled !== changes.control.currentValue.isDisabled) {\n          onChanges.disabled = new SimpleChange(\n            changes.control.previousValue.isDisabled,\n            changes.control.currentValue.isDisabled,\n            false\n          );\n        }\n\n        if (Object.keys(onChanges).length) {\n          this.instance.ngOnChanges(onChanges);\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.componentRef.destroy();\n    this.componentRef = null;\n\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  // proxy calls from ControlValueAccessor interface to control component\n  writeValue(value: any): void {\n    this.instance.writeValue(value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.instance.registerOnChange(fn);\n  }\n\n  registerOnTouched(fn: any): void {\n    this.instance.registerOnTouched(fn);\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.instance.setDisabledState(isDisabled);\n  }\n\n  private isFocusable(instance: IFormControlComponent | IFormFocusable): instance is IFormFocusable {\n    return Boolean((instance as IFormFocusable).focus);\n  }\n\n  private isSupportChanges(instance: IFormControlComponent | OnChanges): instance is OnChanges {\n    return Boolean((instance as OnChanges).ngOnChanges);\n  }\n}\n"]}