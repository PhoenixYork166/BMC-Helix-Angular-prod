{"version":3,"file":"record-data-set-blade.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/admin/components/cognitive-training/components/record-data-set-blade/record-data-set-blade.component.ts","../../../../../../../../../libs/platform/admin/components/cognitive-training/components/record-data-set-blade/record-data-set-blade.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Injector, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { DismissReasons, DockedPanelContext, RxSelectOption, UploaderMode } from '@bmc-ux/adapt-angular';\nimport {\n  IRecordDefinition,\n  RX_RECORD_DEFINITION,\n  RxRecordDefinitionCacheService,\n  RxRecordInstanceService\n} from '@helix/platform/record/api';\nimport { ExpressionOperatorGroup, IPlainObject, RxDefinitionNameService } from '@helix/platform/shared/api';\nimport {\n  IDefinitionPickerComponentOptions,\n  IExpressionEditorPropertyChange,\n  IExpressionFormControlOptions,\n  IGroupButtonFormControlOptions,\n  RxDefinitionPickerType,\n  RxExpressionEditorService\n} from '@helix/platform/shared/components';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { RecordGridFilterMode } from '@helix/platform/view/components';\nimport { assign, find, isEmpty, map as _map, pick } from 'lodash';\nimport moment from 'moment-es6';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { map, shareReplay, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { RxCognitiveTrainingUtilsService } from '../../cognitive-training-utils.service';\nimport { RX_COGNITIVE_TRAINING } from '../../cognitive-training.constant';\nimport { ICognitiveTrainingDataSet } from '../../cognitive-training.types';\nimport { RxRecordDataSetExpressionConfigurator } from '../record-data-set-expression-configurator/record-data-set-expression-configurator.class';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-record-data-set-blade',\n  templateUrl: './record-data-set-blade.component.html'\n})\nexport class RecordDataSetBladeComponent extends RxModalClass implements OnInit, OnDestroy {\n  @ViewChild('recordDataSetForm', { read: NgForm })\n  recordDataSetForm: NgForm;\n\n  contextData: IPlainObject;\n  dataSet: ICognitiveTrainingDataSet;\n  localeOptions: RxSelectOption[];\n  queryExpressionOptions: IExpressionFormControlOptions;\n  csvFileUploadMode = UploaderMode.Auto;\n\n  recordDefinitionPickerOptions: IDefinitionPickerComponentOptions = {\n    label: this.translateService.instant('com.bmc.arsys.rx.client.approval.record-definition-field.label'),\n    definitionType: RxDefinitionPickerType.Record,\n    required: true\n  };\n\n  filterModeOptions: IGroupButtonFormControlOptions = {\n    label: this.translateService.instant(\n      'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set-blade.filters.label'\n    ),\n    items: [\n      {\n        name: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set-blade.basic.label'\n        ),\n        value: RecordGridFilterMode.Basic\n      },\n      {\n        name: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set-blade.expression.label'\n        ),\n        value: RecordGridFilterMode.Expression\n      }\n    ]\n  };\n\n  protected expressionConfigurator;\n\n  private recordDefinitionName$ = new BehaviorSubject<string>('');\n\n  recordDefinition$: Observable<IRecordDefinition> = this.recordDefinitionName$.pipe(\n    switchMap((recordDefinitionName) =>\n      recordDefinitionName ? this.rxRecordDefinitionCacheService.getRecordDefinition(recordDefinitionName) : of(null)\n    ),\n    shareReplay(1)\n  );\n\n  fieldOptions$: Observable<RxSelectOption[]> = this.recordDefinition$.pipe(\n    map((recordDefinition) =>\n      recordDefinition?.fieldDefinitions\n        .map((fieldDefinition) => pick(fieldDefinition, ['name', 'id']))\n        .sort((a, b) => a.name.localeCompare(b.name))\n    ),\n    shareReplay(1)\n  );\n\n  constructor(\n    private dockedPanelContext: DockedPanelContext,\n    private rxCognitiveTrainingUtilsService: RxCognitiveTrainingUtilsService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxExpressionEditorService: RxExpressionEditorService,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private translateService: TranslateService,\n    protected injector: Injector\n  ) {\n    super(dockedPanelContext, injector);\n    this.contextData = this.dockedPanelContext.getData().data;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.expressionConfigurator = new RxRecordDataSetExpressionConfigurator();\n\n    this.expressionConfigurator.configureForProperty({\n      propertyPath: 'queryExpression',\n      operators: this.expressionConfigurator.getOperatorRowsByGroup(ExpressionOperatorGroup.All),\n      dataDictionary$: this.recordDefinition$.pipe(\n        withLatestFrom(this.expressionConfigurator.commonDataDictionary$),\n        map(([recordDefinition, commonDataDictionary]) => [\n          {\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set-blade.filter-by.label'\n            ),\n            children: [\n              {\n                label: this.rxDefinitionNameService.getDisplayName(recordDefinition?.name),\n                children: recordDefinition?.fieldDefinitions.map((field) => ({\n                  label: field.name,\n                  icon: 'd-icon-field_text',\n                  expression: `'${field.id}'`\n                }))\n              }\n            ]\n          },\n          commonDataDictionary[0]\n        ])\n      )\n    });\n\n    this.queryExpressionOptions = {\n      label: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set-blade.expression.label'\n      ),\n      dataDictionary$: this.expressionConfigurator.getDataDictionary('queryExpression'),\n      operators: this.expressionConfigurator.getOperators()\n    };\n\n    this.localeOptions = this.rxCognitiveTrainingUtilsService.getTrainingLocales(this.contextData.trainingType.value);\n\n    const dataSource = this.contextData.recordInstance.getFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource\n    );\n\n    this.dataSet = {\n      dataSetName: this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetName),\n      description: this.contextData.recordInstance.getFieldValue(RX_RECORD_DEFINITION.coreFieldIds.description),\n      csvFile: null,\n\n      locale: [\n        this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.locale) ||\n          RX_COGNITIVE_TRAINING.settings.defaultTrainingLocale\n      ],\n\n      useSeedTrainingData: this.contextData.recordInstance.getFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.useSeedTrainingData\n      ),\n\n      testDataPercent: this.contextData.isNewDataSet\n        ? RX_COGNITIVE_TRAINING.settings.defaultTestDataPercentage\n        : this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.testDataPercent),\n\n      trainDataPercent: this.contextData.isNewDataSet\n        ? RX_COGNITIVE_TRAINING.settings.defaultTrainDataPercentage\n        : this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.trainDataPercent),\n\n      status: find(RX_COGNITIVE_TRAINING.settings.trainingStatuses, {\n        value: this.contextData.recordInstance.getFieldValue(RX_RECORD_DEFINITION.coreFieldIds.status)\n      }),\n\n      lastSubmittedDate: this.contextData.recordInstance.getFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.dateLastSubmitted\n      ),\n\n      lastTrainedDate: this.contextData.recordInstance.getFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.dateLastTrained\n      ),\n\n      machineLearningError: this.contextData.recordInstance.getFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.machineLearningError\n      )\n    };\n\n    let dataSourceHistory = JSON.parse(\n      this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSourceHistory)\n    );\n\n    if (dataSourceHistory) {\n      dataSourceHistory.layout = JSON.parse(dataSourceHistory.layout);\n\n      dataSourceHistory.layout.categoryFields = _map(dataSourceHistory.layout.categoryFields, (categoryField) =>\n        pick(categoryField, ['name', 'id'])\n      );\n\n      dataSourceHistory.layout.textFields = _map(dataSourceHistory.layout.textFields, (textField) =>\n        pick(textField, ['name', 'id'])\n      );\n\n      dataSourceHistory.layout.queryExpressionBasic = {\n        filtersJson: JSON.stringify(dataSourceHistory.layout.queryExpressionBasic.filtersJson),\n        basicFilters: dataSourceHistory.layout.queryExpressionBasic.basicFilters\n      };\n    } else {\n      dataSourceHistory = this.contextData.dataSourceType.dataSourceHistory;\n    }\n\n    this.dataSet.dataSourceHistory = dataSourceHistory;\n\n    this.dataSet.filterMode = dataSourceHistory.queryExpression\n      ? RecordGridFilterMode.Expression\n      : RecordGridFilterMode.Basic;\n\n    if (dataSource && (this.contextData.editDataSet || this.contextData.copyDataSet)) {\n      this.rxRecordInstanceService\n        .getAttachment(\n          RX_COGNITIVE_TRAINING.settings.dataSetDefinitionName,\n          RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n          this.contextData.getAttachmentRecordInstanceId\n        )\n        .subscribe((blob) => {\n          this.dataSet.csvFile = [\n            {\n              data: assign(blob, {\n                name: dataSource\n              }),\n              downloadURL: this.rxRecordInstanceService.getAttachmentDownloadUrl(\n                RX_COGNITIVE_TRAINING.settings.dataSetDefinitionName,\n                RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n                this.contextData.recordInstance.id\n              ),\n              isUploading: true\n            }\n          ];\n        });\n    }\n\n    if (this.dataSet.dataSourceHistory.recordDefinitionName) {\n      this.recordDefinitionName$.next(this.dataSet.dataSourceHistory.recordDefinitionName);\n    }\n  }\n\n  isDirty(): boolean {\n    return this.recordDataSetForm.dirty;\n  }\n\n  ngOnDestroy(): void {\n    this.recordDefinitionName$.complete();\n  }\n\n  openExpressionEditor(): void {\n    this.rxExpressionEditorService\n      .openEditor({\n        property: {\n          path: 'queryExpression',\n          value: this.dataSet.dataSourceHistory.queryExpression,\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set-blade.filter-expression.label'\n          )\n        },\n        expressionConfigurator: this.expressionConfigurator,\n        legend: [\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'),\n            icon: 'd-icon-dollar'\n          },\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.field.label'),\n            icon: 'd-icon-arrow_right_square_input'\n          }\n        ]\n      })\n      .subscribe((expression: IExpressionEditorPropertyChange) => {\n        this.dataSet.dataSourceHistory.queryExpression = expression.value;\n      });\n  }\n\n  isBasicFilterMode(): boolean {\n    return this.dataSet.filterMode === RecordGridFilterMode.Basic;\n  }\n\n  isExpressionFilterMode(): boolean {\n    return this.dataSet.filterMode === RecordGridFilterMode.Expression;\n  }\n\n  optionFormatter = (opt: RxSelectOption) => opt;\n\n  fieldOptionsFormatter = (opt: RxSelectOption) => opt.name;\n\n  onRecordDefinitionNameChange(recordDefinitionName: string): void {\n    this.dataSet.filterMode = RecordGridFilterMode.Basic;\n\n    this.dataSet.dataSourceHistory.layout.queryExpressionBasic = {\n      filtersJson: null,\n      basicFilters: null\n    };\n\n    this.dataSet.dataSourceHistory.queryExpression = null;\n    this.dataSet.dataSourceHistory.layout.textFields = [];\n    this.dataSet.dataSourceHistory.layout.categoryFields = [];\n\n    this.recordDefinitionName$.next(recordDefinitionName);\n  }\n\n  onTrainDataPercentCounterChange(trainDataPercent: number): void {\n    this.dataSet.testDataPercent = 100 - trainDataPercent;\n  }\n\n  onTestDataPercentCounterChange(testDataPercent: number): void {\n    this.dataSet.trainDataPercent = 100 - testDataPercent;\n  }\n\n  onFilterModeChange(): void {\n    this.dataSet.dataSourceHistory.layout.queryExpressionBasic = {\n      filtersJson: null,\n      basicFilters: null\n    };\n\n    this.dataSet.dataSourceHistory.queryExpression = '';\n  }\n\n  onSaveClick(): void {\n    this.contextData.recordInstance.setFieldProp(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n      'file',\n      (!isEmpty(this.dataSet.csvFile) && this.dataSet.csvFile[0].data) || null\n    );\n\n    this.contextData.recordInstance.setFieldProp(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n      'value',\n      (!isEmpty(this.dataSet.csvFile) && this.dataSet.csvFile[0].data.name) || null\n    );\n\n    this.contextData.recordInstance.setFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dateLastSubmitted, moment());\n\n    this.contextData.recordInstance.setFieldValue(\n      RX_RECORD_DEFINITION.coreFieldIds.description,\n      this.dataSet.description\n    );\n\n    this.contextData.recordInstance.setFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.locale,\n      this.dataSet.locale[0]\n    );\n\n    this.contextData.recordInstance.setFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.testDataPercent,\n      this.dataSet.testDataPercent\n    );\n\n    this.contextData.recordInstance.setFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.trainDataPercent,\n      this.dataSet.trainDataPercent\n    );\n\n    this.contextData.recordInstance.setFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSourceHistory,\n      JSON.stringify({\n        layout: JSON.stringify({\n          queryExpressionBasic: {\n            filtersJson: JSON.parse(this.dataSet.dataSourceHistory.layout.queryExpressionBasic.filtersJson),\n            basicFilters: this.dataSet.dataSourceHistory.layout.queryExpressionBasic.basicFilters\n          },\n          textFields: this.dataSet.dataSourceHistory.layout.textFields,\n          categoryFields: this.dataSet.dataSourceHistory.layout.categoryFields\n        }),\n        resourceType: this.contextData.dataSourceType.resourceType,\n        recordDefinitionName: this.dataSet.dataSourceHistory.recordDefinitionName,\n        queryExpression: this.dataSet.dataSourceHistory.queryExpression,\n        trainingDataMapper: {\n          resourceType: this.dataSet.dataSourceHistory.trainingDataMapper.resourceType,\n          textFields: _map(this.dataSet.dataSourceHistory.layout.textFields, 'id'),\n          categoryFields: _map(this.dataSet.dataSourceHistory.layout.categoryFields, 'id')\n        },\n        timeCriteria: this.dataSet.dataSourceHistory.timeCriteria,\n        isScheduleEnabled: this.dataSet.dataSourceHistory.isScheduleEnabled\n      })\n    );\n\n    if (this.contextData.isNewDataSet || this.contextData.copyDataSet) {\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.bundleId,\n        this.contextData.bundleId\n      );\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetName,\n        this.dataSet.dataSetName\n      );\n\n      this.contextData.recordInstance.setFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetID, '');\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.classificationServiceProvider,\n        this.contextData.trainingType.uniqueValue\n      );\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_RECORD_DEFINITION.coreFieldIds.status,\n        RX_COGNITIVE_TRAINING.settings.trainingStatuses.untrained.value\n      );\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.trainingType,\n        this.contextData.trainingType.value\n      );\n\n      this.rxRecordInstanceService.create(this.contextData.recordInstance).subscribe(() => {\n        this.dockedPanelContext.close('save');\n      });\n    } else if (this.contextData.editDataSet) {\n      if (\n        this.dataSet.status.value === RX_COGNITIVE_TRAINING.settings.trainingStatuses.trained.value ||\n        this.dataSet.status.value === RX_COGNITIVE_TRAINING.settings.trainingStatuses.failed.value\n      ) {\n        this.contextData.recordInstance.setFieldValue(\n          RX_RECORD_DEFINITION.coreFieldIds.status,\n          RX_COGNITIVE_TRAINING.settings.trainingStatuses.pendingRetraining.value\n        );\n      }\n\n      this.rxRecordInstanceService.save(this.contextData.recordInstance).subscribe(() => {\n        this.dockedPanelContext.close('save');\n      });\n    }\n  }\n\n  onCloseClick(): void {\n    this.dockedPanelContext.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"dp-body\">\n  <form #recordDataSetForm=\"ngForm\">\n    <div *ngIf=\"contextData.editDataSet\">\n      <div class=\"d-flex justify-content-between m-0 mb-3\">\n        <div>\n          <label class=\"form-control-label\">\n            {{ 'com.bmc.arsys.rx.client.admin.cognitive-training.status.label' | translate }}\n          </label>\n\n          <div>{{ dataSet.status.label }}</div>\n        </div>\n\n        <div>\n          <label class=\"form-control-label\">\n            {{ 'com.bmc.arsys.rx.client.admin.cognitive-training.date-last-submitted.label' | translate }}\n          </label>\n\n          <div>{{ dataSet.lastSubmittedDate | date: 'medium' }}</div>\n        </div>\n\n        <div>\n          <label class=\"form-control-label\">\n            {{ 'com.bmc.arsys.rx.client.admin.cognitive-training.date-last-trained.label' | translate }}\n          </label>\n\n          <div>{{ dataSet.lastTrainedDate | date: 'medium' }}</div>\n        </div>\n      </div>\n\n      <adapt-alert\n        *ngIf=\"dataSet.machineLearningError\"\n        [config]=\"{\n          content: dataSet.machineLearningError,\n          type: 'inline',\n          variant: 'danger'\n        }\"\n      ></adapt-alert>\n    </div>\n\n    <adapt-rx-textfield\n      class=\"form-group d-block\"\n      name=\"data-set-name\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-search.data-set-name.label' | translate }}\"\n      rx-id=\"data-set-name-field\"\n      required\n      [disabled]=\"contextData.editDataSet\"\n      [(ngModel)]=\"dataSet.dataSetName\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-textfield\n      class=\"form-group d-block\"\n      name=\"description\"\n      label=\"{{ 'com.bmc.arsys.rx.client.common.description.label' | translate }}\"\n      rx-id=\"description-field\"\n      required\n      [(ngModel)]=\"dataSet.description\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-textfield\n      class=\"form-group d-block\"\n      name=\"training-type\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-training.training-type.label' | translate }}\"\n      rx-id=\"training-type-field\"\n      required\n      disabled\n      [(ngModel)]=\"contextData.trainingType.displayName\"\n    >\n    </adapt-rx-textfield>\n\n    <span class=\"form-group d-block\" *ngIf=\"dataSet.useSeedTrainingData\">\n      {{ 'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set.seed-data-required.label' | translate }}\n    </span>\n\n    <span class=\"form-group d-block\" *ngIf=\"!dataSet.useSeedTrainingData\">\n      {{ 'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set.no-seed-data-required.label' | translate }}\n    </span>\n\n    <adapt-rx-uploader\n      class=\"form-group d-block\"\n      name=\"csv-file\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-training.csv-file.label' | translate }}\"\n      rx-id=\"csv-file-field\"\n      reusable=\"true\"\n      [uploadMode]=\"csvFileUploadMode\"\n      [allowedTypes]=\"['csv']\"\n      [(ngModel)]=\"dataSet.csvFile\"\n    >\n    </adapt-rx-uploader>\n\n    <adapt-rx-select\n      class=\"form-group d-block\"\n      name=\"locale\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-search.locale.label' | translate }}\"\n      rx-id=\"locale-field\"\n      required\n      [options]=\"localeOptions\"\n      [optionFormatter]=\"optionFormatter\"\n      [(ngModel)]=\"dataSet.locale\"\n    >\n    </adapt-rx-select>\n\n    <rx-definition-picker\n      class=\"form-group d-block\"\n      name=\"record-definition-name\"\n      rx-id=\"record-definition-name-field\"\n      required\n      [options]=\"recordDefinitionPickerOptions\"\n      [(ngModel)]=\"dataSet.dataSourceHistory.recordDefinitionName\"\n      (ngModelChange)=\"onRecordDefinitionNameChange($event)\"\n    >\n    </rx-definition-picker>\n\n    <div *ngIf=\"recordDefinition$ | async\">\n      <rx-group-button-form-control\n        class=\"form-group d-block\"\n        name=\"filter-mode\"\n        rx-id=\"filter-mode-field\"\n        [options]=\"filterModeOptions\"\n        (ngModelChange)=\"onFilterModeChange()\"\n        [(ngModel)]=\"dataSet.filterMode\"\n      >\n      </rx-group-button-form-control>\n\n      <div *ngIf=\"isBasicFilterMode()\">\n        <rx-record-grid-filter-select-control\n          class=\"form-group d-block\"\n          name=\"filters\"\n          rx-id=\"filters-field\"\n          [options]=\"{ primaryRecordDefinition: recordDefinition$ | async }\"\n          [(ngModel)]=\"dataSet.dataSourceHistory.layout.queryExpressionBasic\"\n        >\n        </rx-record-grid-filter-select-control>\n      </div>\n\n      <div *ngIf=\"isExpressionFilterMode()\">\n        <rx-expression-form-control\n          class=\"form-group d-block\"\n          name=\"query-expression\"\n          rx-id=\"query-expression-field\"\n          [options]=\"queryExpressionOptions\"\n          (events)=\"openExpressionEditor()\"\n          [(ngModel)]=\"dataSet.dataSourceHistory.queryExpression\"\n        >\n        </rx-expression-form-control>\n      </div>\n\n      <adapt-rx-select\n        class=\"form-group d-block\"\n        name=\"text-fields\"\n        label=\"{{\n          'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set-blade.text-fields.label' | translate\n        }}\"\n        rx-id=\"text-fields-field\"\n        required\n        multiple=\"true\"\n        [options]=\"fieldOptions$ | async\"\n        [optionFormatter]=\"fieldOptionsFormatter\"\n        [(ngModel)]=\"dataSet.dataSourceHistory.layout.textFields\"\n      >\n      </adapt-rx-select>\n\n      <adapt-rx-select\n        class=\"form-group d-block\"\n        name=\"category-fields\"\n        label=\"{{\n          'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set-blade.category-fields.label' | translate\n        }}\"\n        rx-id=\"category-fields-field\"\n        required\n        multiple=\"true\"\n        [options]=\"fieldOptions$ | async\"\n        [optionFormatter]=\"fieldOptionsFormatter\"\n        [(ngModel)]=\"dataSet.dataSourceHistory.layout.categoryFields\"\n      >\n      </adapt-rx-select>\n    </div>\n\n    <adapt-rx-counter\n      class=\"form-group d-block\"\n      name=\"training-data\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-training.training-data.label' | translate }}\"\n      rx-id=\"training-data-field\"\n      placeholder=\"0\"\n      adaptMin=\"0\"\n      adaptMax=\"100\"\n      min=\"0\"\n      max=\"100\"\n      required\n      (ngModelChange)=\"onTrainDataPercentCounterChange($event)\"\n      [(ngModel)]=\"dataSet.trainDataPercent\"\n    >\n    </adapt-rx-counter>\n\n    <adapt-rx-counter\n      class=\"form-group d-block\"\n      name=\"test-data\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-training.test-data.label' | translate }}\"\n      rx-id=\"test-data-field\"\n      placeholder=\"0\"\n      adaptMin=\"0\"\n      adaptMax=\"100\"\n      min=\"0\"\n      max=\"100\"\n      required\n      (ngModelChange)=\"onTestDataPercentCounterChange($event)\"\n      [(ngModel)]=\"dataSet.testDataPercent\"\n    >\n    </adapt-rx-counter>\n  </form>\n</div>\n\n<div class=\"dp-footer\">\n  <button\n    class=\"mr-2\"\n    type=\"button\"\n    rx-id=\"save-button\"\n    adapt-button\n    btn-type=\"primary\"\n    [disabled]=\"recordDataSetForm.pristine || recordDataSetForm.invalid\"\n    (click)=\"onSaveClick()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button class=\"mr-2\" type=\"button\" rx-id=\"close-button\" adapt-button btn-type=\"secondary\" (click)=\"onCloseClick()\">\n    {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n  </button>\n</div>\n"]}