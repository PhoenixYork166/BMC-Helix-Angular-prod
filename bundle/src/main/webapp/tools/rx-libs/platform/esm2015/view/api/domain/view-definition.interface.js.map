{"version":3,"file":"view-definition.interface.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/api/domain/view-definition.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { AnyViewComponentDefinition } from './view-component-definition.types';\nimport { IViewDefinitionPermission } from './view-definition-permission.interface';\nimport { ViewDefinitionType } from './view-definition-type.enum';\nimport { IDefinition } from '@helix/platform/shared/api';\n\nexport interface IViewDefinition extends IDefinition {\n  readonly guid: string;\n  readonly type?: ViewDefinitionType;\n\n  componentDefinitions: Array<AnyViewComponentDefinition>;\n  allowOverlay?: boolean;\n  inputParams: any[];\n  layout: string;\n  localizableStringsByComponentId?: IViewLocalizableStrings;\n\n  // used to store map of component property names to original localization string guids that is used\n  // to generate localizableStringsByComponentId\n  localizablePropertyToStringGuidMap?: IComponentPropertyNameToStringGuid;\n  outputParams: any[];\n  permissions?: IViewDefinitionPermission[];\n  styles?: string;\n  targetViewDefinitionName?: string;\n  targetExtensionContainerGuid?: string;\n  viewComponentExpressions?: string[];\n}\n\nexport interface IViewLocalizableStrings {\n  [componentGuid: string]: {\n    [stringGuid: string]: string;\n  };\n}\n\nexport interface IComponentPropertyNameToStringGuid {\n  [componentGuid: string]: {\n    [propertyName: string]: string; // string guid\n  };\n}\n"]}