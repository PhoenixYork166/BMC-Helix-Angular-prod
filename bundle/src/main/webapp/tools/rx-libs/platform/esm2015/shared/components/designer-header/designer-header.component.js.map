{"version":3,"file":"designer-header.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/components/designer-header/designer-header.component.ts","../../../../../../../libs/platform/shared/components/designer-header/designer-header.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;;;;;AAQvE,MAAM,OAAO,yBAAyB;IALtC;QAUE,oBAAe,GAAsB,EAAE,CAAC;QAGxC,iBAAY,GAAG,IAAI,CAAC;QAGpB,uBAAkB,GAAG,KAAK,CAAC;QAG3B,yBAAoB,GAAG,KAAK,CAAC;QAG7B,uBAAkB,GAAkC,IAAI,YAAY,EAAmB,CAAC;QAGxF,qBAAgB,GAAuB,IAAI,YAAY,EAAE,CAAC;QAG1D,gBAAW,GAAuB,IAAI,YAAY,EAAE,CAAC;QAGrD,SAAI,GAAuB,IAAI,YAAY,EAAE,CAAC;QAG9C,kBAAa,GAAuB,IAAI,YAAY,EAAQ,CAAC;KAC9D;;sHA9BY,yBAAyB;0GAAzB,yBAAyB,iaCRtC,unDAiEA;2FDzDa,yBAAyB;kBALrC,SAAS;mBAAC;oBACT,QAAQ,EAAE,oBAAoB;oBAC9B,WAAW,EAAE,kCAAkC;oBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;iBAChD;8BAGC,UAAU;sBADT,KAAK;gBAIN,eAAe;sBADd,KAAK;gBAIN,YAAY;sBADX,KAAK;gBAIN,kBAAkB;sBADjB,KAAK;gBAIN,oBAAoB;sBADnB,KAAK;gBAIN,kBAAkB;sBADjB,MAAM;gBAIP,gBAAgB;sBADf,MAAM;gBAIP,WAAW;sBADV,MAAM;gBAIP,IAAI;sBADH,MAAM;gBAIP,aAAa;sBADZ,MAAM","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IBreadcrumbItem } from '@helix/platform/ui-kit';\n\n@Component({\n  selector: 'rx-designer-header',\n  templateUrl: './designer-header.component.html',\n  styleUrls: ['./designer-header.component.scss']\n})\nexport class RxDesignerHeaderComponent {\n  @Input()\n  bundleName: string;\n\n  @Input()\n  breadcrumbItems: IBreadcrumbItem[] = [];\n\n  @Input()\n  isDesignMode = true;\n\n  @Input()\n  isPreviewAvailable = false;\n\n  @Input()\n  isSaveButtonDisabled = false;\n\n  @Output()\n  breadcrumbSelected: EventEmitter<IBreadcrumbItem> = new EventEmitter<IBreadcrumbItem>();\n\n  @Output()\n  toggleDesignMode: EventEmitter<void> = new EventEmitter();\n\n  @Output()\n  showPreview: EventEmitter<void> = new EventEmitter();\n\n  @Output()\n  save: EventEmitter<void> = new EventEmitter();\n\n  @Output()\n  closeDesigner: EventEmitter<void> = new EventEmitter<void>();\n}\n","<div class=\"header-column-left\">\n  <span class=\"bundle-name\">{{ bundleName }}</span>\n</div>\n\n<div class=\"header-column-right\">\n  <div class=\"header-title\">\n    <rx-breadcrumb-bar (selectedItem)=\"breadcrumbSelected.emit($event)\" [items]=\"breadcrumbItems\"></rx-breadcrumb-bar>\n  </div>\n\n  <div class=\"header-buttons\">\n    <button\n      adapt-button\n      type=\"button\"\n      btn-type=\"secondary\"\n      size=\"small\"\n      rx-id=\"json-button\"\n      class=\"header-button\"\n      (click)=\"toggleDesignMode.emit()\"\n    >\n      <span [ngClass]=\"{ 'd-icon-brackets_curly': isDesignMode, 'd-icon-app_eye': !isDesignMode }\"></span>\n      {{ isDesignMode ? 'JSON' : 'UI Design' }}\n    </button>\n\n    <button\n      adapt-button\n      type=\"button\"\n      btn-type=\"secondary\"\n      rx-id=\"preview-button\"\n      size=\"small\"\n      [hidden]=\"!isPreviewAvailable\"\n      (click)=\"showPreview.emit()\"\n      class=\"header-button\"\n    >\n      <span class=\"d-icon-eye\"></span>\n      Preview\n    </button>\n\n    <div class=\"header-button-divider\"></div>\n\n    <button\n      adapt-button\n      type=\"button\"\n      [disabled]=\"isSaveButtonDisabled\"\n      rx-id=\"save-button\"\n      size=\"small\"\n      (click)=\"save.emit()\"\n      btn-type=\"primary\"\n      class=\"header-button\"\n    >\n      Save\n    </button>\n\n    <button\n      adapt-button\n      type=\"button\"\n      rx-id=\"close-button\"\n      size=\"small\"\n      (click)=\"closeDesigner.emit()\"\n      btn-type=\"secondary\"\n      class=\"header-button\"\n    >\n      Close\n    </button>\n  </div>\n</div>\n"]}