{"version":3,"file":"time-form-control.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/shared/components/form-controls/time-form-control/time-form-control.component.ts","../../../../../../../../libs/platform/shared/components/form-controls/time-form-control/time-form-control.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAU,MAAM,eAAe,CAAC;AACzD,OAAO,EAAE,WAAW,EAAE,iBAAiB,EAAE,MAAM,gBAAgB,CAAC;AAChE,OAAO,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAC;AAGnD,OAAO,EAAE,oBAAoB,EAAoB,MAAM,uBAAuB,CAAC;AAC/E,OAAO,MAAM,MAAM,YAAY,CAAC;AAChC,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;;;;AAahC,MAAM,OAAO,wBAAyB,SAAQ,aAAqB;IAXnE;;QAkBE,sBAAiB,GAAG,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;QAExC,eAAU,GAAG,oBAAoB,CAAC,IAAI,CAAC;KA8BxC;IA5BC,QAAQ;QACN,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,KAAuB,EAAE,EAAE;YACxE,IAAI,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;gBAC3D,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;oBAClB,IAAI,EAAE,KAAK,CAAC,KAAK;oBACjB,MAAM,EAAE,KAAK,CAAC,OAAO;oBACrB,OAAO,EAAE,KAAK,CAAC,OAAO,IAAI,CAAC;iBAC5B,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;aACvB;iBAAM;gBACL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,KAAa;QACtB,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAExB,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAEvC,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;YAClB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;gBAC9B,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE;gBAClB,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE;aACxB,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACvC;IACH,CAAC;;qHAtCU,wBAAwB;yGAAxB,wBAAwB,yGARxB;QACT;YACE,OAAO,EAAE,iBAAiB;YAC1B,WAAW,EAAE,wBAAwB;YACrC,KAAK,EAAE,IAAI;SACZ;KACF,iDClBH,4MAQA;2FDYa,wBAAwB;kBAXpC,SAAS;mBAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,WAAW,EAAE,oCAAoC;oBACjD,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,iBAAiB;4BAC1B,WAAW,0BAA0B;4BACrC,KAAK,EAAE,IAAI;yBACZ;qBACF;iBACF;8BAGC,OAAO;sBADN,KAAK;gBAIN,UAAU;sBADT,KAAK","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ValueAccessor } from '../../form-builder';\nimport { IFormControlComponent } from '@helix/platform/shared/api';\nimport { IDateFormControlOptions } from '../date-form-control';\nimport { RxDatetimePickerMode, RxDatetimeStruct } from '@bmc-ux/adapt-angular';\nimport moment from 'moment-es6';\nimport { isNull } from 'lodash';\n\n@Component({\n  selector: 'rx-time-form-control',\n  templateUrl: './time-form-control.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: TimeFormControlComponent,\n      multi: true\n    }\n  ]\n})\nexport class TimeFormControlComponent extends ValueAccessor<string> implements IFormControlComponent, OnInit {\n  @Input()\n  options: IDateFormControlOptions;\n\n  @Input()\n  isDisabled: boolean;\n\n  datePickerControl = new FormControl('');\n\n  pickerMode = RxDatetimePickerMode.Time;\n\n  ngOnInit(): void {\n    this.datePickerControl.valueChanges.subscribe((value: RxDatetimeStruct) => {\n      if (value && !isNull(value.hours) && !isNull(value.minutes)) {\n        this.value = moment({\n          hour: value.hours,\n          minute: value.minutes,\n          seconds: value.seconds || 0\n        }).format('HH:mm:ss');\n      } else {\n        this.value = null;\n      }\n    });\n  }\n\n  writeValue(value: string): void {\n    super.writeValue(value);\n\n    const date = moment(this.value, 'LTS');\n\n    if (date.isValid()) {\n      this.datePickerControl.setValue({\n        hours: date.hour(),\n        minutes: date.minutes()\n      });\n    } else {\n      this.datePickerControl.setValue(null);\n    }\n  }\n}\n","<adapt-rx-datetime\n  [label]=\"options.label\"\n  [disabled]=\"isDisabled\"\n  [mode]=\"pickerMode\"\n  [required]=\"options.required\"\n  [formControl]=\"datePickerControl\"\n>\n</adapt-rx-datetime>\n"]}