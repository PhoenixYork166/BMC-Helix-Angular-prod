{"version":3,"file":"localized-character-field.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/field-components/localized-character-field/runtime/localized-character-field.component.ts","../../../../../../../../../libs/platform/view/components/field-components/localized-character-field/runtime/localized-character-field.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Injector } from '@angular/core';\nimport { IPlainObject, RxLocalizationService } from '@helix/platform/shared/api';\nimport { IViewComponent } from '@helix/platform/view/runtime';\nimport { cloneDeep, isEqual, noop } from 'lodash';\nimport { BaseRecordEditorFieldComponent } from '../../base-record-editor-field/runtime/base-record-editor-field-component.class';\nimport { IBaseRecordEditorFieldComponentConfig } from '../../base-record-editor-field/runtime/base-record-editor-field-component.types';\nimport { LocalizedCharacterFieldValueModalComponent } from '@helix/platform/shared/components';\nimport { RxModalService } from '@helix/platform/ui-kit';\n\n@Component({\n  selector: 'rx-localized-character-field',\n  templateUrl: './localized-character-field.component.html',\n  styleUrls: ['./localized-character-field.component.scss']\n})\nexport class LocalizedCharacterFieldComponent extends BaseRecordEditorFieldComponent implements IViewComponent {\n  private hideCurrentLocale: boolean;\n\n  constructor(\n    injector: Injector,\n    private rxModalService: RxModalService,\n    private rxLocalizationService: RxLocalizationService\n  ) {\n    super(injector);\n  }\n\n  onConfigUpdated(config: IBaseRecordEditorFieldComponentConfig): void {\n    super.onConfigUpdated(config);\n\n    const fieldValue = this.getFieldValue();\n\n    this.hideCurrentLocale = this.getFieldInstanceProp('hideCurrentLocale');\n\n    if (config.value === fieldValue) {\n      const valueByLocale = this.getFieldInstanceProp('valueByLocale');\n\n      valueByLocale[this.rxLocalizationService.currentLocale] = fieldValue;\n      this.setFieldInstanceProp('valueByLocale', valueByLocale);\n    }\n  }\n\n  shouldShowValidationError(): boolean {\n    return this.isRequired && !this.formControl.value && (this.formControl.touched || this.formControl.dirty);\n  }\n\n  selectLocalizedValue(): void {\n    const valueByLocale = this.getFieldInstanceProp('valueByLocale');\n\n    this.rxModalService\n      .openModal({\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.view-components.localized-character-field.dialog.title'\n        ),\n        data: {\n          fieldDefinition: this.fieldDefinition,\n          valueByLocale: cloneDeep(valueByLocale),\n          hideCurrentLocale: this.hideCurrentLocale\n        },\n        size: 'sm',\n        content: LocalizedCharacterFieldValueModalComponent\n      })\n      .then((data) => {\n        if (data) {\n          this.setLocalizedFieldValue(data.valueByLocale, data.currentLocaleValue);\n        }\n      })\n      .catch(noop);\n  }\n\n  private setLocalizedFieldValue(valueByLocale: IPlainObject, currentLocaleValue: string): void {\n    const currentLocaleCode = this.rxLocalizationService.currentLocale;\n    const defaultLocaleCode = 'en-US';\n    const fieldValue = currentLocaleValue || valueByLocale[currentLocaleCode] || valueByLocale[defaultLocaleCode];\n    const currentValueByLocale = this.getFieldInstanceProp('valueByLocale');\n\n    if (!isEqual(valueByLocale, currentValueByLocale)) {\n      this.setFieldInstanceProp('valueByLocale', valueByLocale);\n      this.formControl.markAsDirty();\n      this.recordEditorApi.markAsDirty();\n    }\n\n    this.setFieldValue(fieldValue);\n  }\n}\n","<ng-container *ngIf=\"!isHidden\">\n  <rx-read-only-field\n    *ngIf=\"inReadState; else editStateElementRef\"\n    [label]=\"label\"\n    [value]=\"getDisplayValue()\"\n  ></rx-read-only-field>\n</ng-container>\n\n<ng-template #editStateElementRef>\n  <span class=\"d-flex justify-content-between\" [class.has-danger]=\"formControl.errors && formControl.touched\">\n    <adapt-rx-control-label [label]=\"label\" [id]=\"guid\" [showRequiredLabel]=\"isRequired\"></adapt-rx-control-label>\n\n    <button\n      type=\"button\"\n      class=\"localize-button btn btn-link focusable d-icon-left-pencil p-0\"\n      [disabled]=\"isDisabled\"\n      [attr.aria-describedby]=\"guid\"\n      (click)=\"selectLocalizedValue()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.view-components.localized-character-field.button.localize.label' | translate }}\n    </button>\n  </span>\n\n  <adapt-rx-textfield\n    class=\"mb-0\"\n    [readonly]=\"true\"\n    [formControl]=\"formControl\"\n    [disabledStyleForReadonlyState]=\"true\"\n    [required]=\"isRequired\"\n    [attr.aria-describedby]=\"guid\"\n  >\n  </adapt-rx-textfield>\n</ng-template>\n"]}