{"version":3,"file":"approval-notifications.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/admin/components/approval-notifications/approval-notifications.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,QAAQ,EAAc,MAAM,MAAM,CAAC;AAC5C,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;;;AAM7B,MAAM,OAAO,8BAA8B;IAGzC,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAF1C,4BAAuB,GAAG,mFAAmF,CAAC;IAEjE,CAAC;IAE9C,uBAAuB,CAAC,4BAAoC;QAC1D,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CACxB,GAAG,IAAI,CAAC,uBAAuB,IAAI,4BAA4B,EAAE,CAClE,CAAC;IACJ,CAAC;IAED,0BAA0B,CAAC,0BAAiD;QAC1E,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,0BAA0B,CAAC,CAAC;IACxF,CAAC;IAED,0BAA0B,CAAC,0BAAiD;QAC1E,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CACxB,GAAG,IAAI,CAAC,uBAAuB,IAAI,0BAA0B,CAAC,gBAAgB,EAAE,EAChF,0BAA0B,CAC3B,CAAC;IACJ,CAAC;IAED,2BAA2B,CAAC,iBAA2B;QACrD,OAAO,QAAQ,CACb,GAAG,CAAC,iBAAiB,EAAE,CAAC,EAAE,EAAE,EAAE;YAC5B,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,uBAAuB,IAAI,EAAE,EAAE,CAAC,CAAC;QACzE,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;2HA5BU,8BAA8B;+HAA9B,8BAA8B,cAF7B,MAAM;2FAEP,8BAA8B;kBAH1C,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { forkJoin, Observable } from 'rxjs';\nimport { map } from 'lodash';\nimport { IApprovalNotification } from './approval-notifications.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxApprovalNotificationsService {\n  approvalNotificationApi = '/api/com.bmc.arsys.rx.approval/rx/application/approval/configuration/notification';\n\n  constructor(private httpClient: HttpClient) {}\n\n  getApprovalNotification(notificationRecordInstanceId: string): Observable<IApprovalNotification> {\n    return this.httpClient.get<IApprovalNotification>(\n      `${this.approvalNotificationApi}/${notificationRecordInstanceId}`\n    );\n  }\n\n  createApprovalNotification(approvalNotificationRecord: IApprovalNotification): Observable<any> {\n    return this.httpClient.post(this.approvalNotificationApi, approvalNotificationRecord);\n  }\n\n  updateApprovalNotification(approvalNotificationRecord: IApprovalNotification): Observable<any> {\n    return this.httpClient.put(\n      `${this.approvalNotificationApi}/${approvalNotificationRecord.notificationGuid}`,\n      approvalNotificationRecord\n    );\n  }\n\n  deleteApprovalNotifications(recordInstanceIds: string[]): Observable<any[]> {\n    return forkJoin(\n      map(recordInstanceIds, (id) => {\n        return this.httpClient.delete(`${this.approvalNotificationApi}/${id}`);\n      })\n    );\n  }\n}\n"]}