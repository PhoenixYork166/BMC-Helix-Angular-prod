{"version":3,"file":"value-accessor.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/components/form-builder/value-accessor.ts"],"names":[],"mappings":"AAEA,MAAM,OAAO,aAAa;IAOxB,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,IAAI,KAAK,CAAC,KAAQ;QAChB,IAAI,IAAI,CAAC,UAAU,KAAK,KAAK,EAAE;YAC7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACrB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SACxB;IACH,CAAC;IAED,KAAK,KAAI,CAAC;IAEV,UAAU,CAAC,KAAQ;QACjB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAED,gBAAgB,CAAC,EAAsB;QACrC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,iBAAiB,CAAC,EAAc;QAC9B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,YAAY,CAAC,KAAK,IAAG,CAAC;IAEtB,gBAAgB,CAAC,UAAmB;QAClC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED,sDAAsD;IACtD,UAAU,CAAC,KAAQ,IAAG,CAAC;CACxB","sourcesContent":["import { ControlValueAccessor } from '@angular/forms';\n\nexport class ValueAccessor<T> implements ControlValueAccessor {\n  protected innerValue: T;\n  isDisabled: boolean;\n  onTouched: () => void;\n\n  protected onChange: (T) => void;\n\n  get value(): T {\n    return this.innerValue;\n  }\n\n  set value(value: T) {\n    if (this.innerValue !== value) {\n      this.innerValue = value;\n      this.onChange(value);\n      this.onSetValue(value);\n    }\n  }\n\n  touch() {}\n\n  writeValue(value: T) {\n    this.innerValue = value;\n\n    this.onWriteValue(value);\n  }\n\n  registerOnChange(fn: (value: T) => void) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  onWriteValue(value) {}\n\n  setDisabledState(isDisabled: boolean) {\n    this.isDisabled = isDisabled;\n  }\n\n  // helper that called when control sets value to model\n  onSetValue(value: T) {}\n}\n"]}