{"version":3,"file":"selection-field-definition.service.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/record/designer/record-designer/services/selection-field-definition.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAClE,OAAO,EAAE,4BAA4B,EAAE,MAAM,iCAAiC,CAAC;AAC/E,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAGrD,OAAO,EAAmC,8BAA8B,EAAE,MAAM,mCAAmC,CAAC;AACpH,OAAO,EAAoB,mBAAmB,EAAE,MAAM,wBAAwB,CAAC;AAC/E,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;;AAKjC,MAAM,OAAO,iCAAkC,SAAQ,4BAA4B;IAGjF,YAAY,QAAkB;QAC5B,KAAK,CAAC,QAAQ,CAAC,CAAC;QAHlB,iBAAY,GAAG,oBAAoB,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC;IAIrE,CAAC;IAED,uBAAuB,CACrB,UAAuC,EACvC,eAAuC,EACvC,UAAmB;QAEnB,MAAM,eAAe,GAAG,KAAK,CAAC,uBAAuB,CAAC,UAAU,EAAE,eAAe,EAAE,UAAU,CAAC,CAAC;QAE/F,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC/B,IAAI,EAAE,gCAAgC;YACtC,SAAS,EAAE,8BAA8B;YACzC,OAAO,EAAE;gBACP,UAAU,EAAE,CAAC,IAAI,CAAC,uCAAuC,CAAC,eAAe,CAAC,UAAU,CAAC;aACnD;SACrC,CAAC,CAAC;QAEH,OAAO,eAAe,CAAC;IACzB,CAAC;IAED,QAAQ,CAAC,UAAuC,EAAE,eAAuC;;QACvF,MAAM,gBAAgB,GAAG,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;QAErE,IAAI,OAAO,CAAC,MAAA,UAAU,CAAC,8BAA8B,0CAAE,eAAe,CAAC,EAAE;YACvE,gBAAgB,CAAC,IAAI,CAAC;gBACpB,IAAI,EAAE,mBAAmB,CAAC,KAAK;gBAC/B,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACxC,qEAAqE,EACrE,EAAE,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,8CAA8C,CAAC,EAAE,CAChG;gBACD,IAAI,EAAE;oBACJ,YAAY,EAAE,gCAAgC;oBAC9C,IAAI,EAAE,UAAU,CAAC,IAAI;iBACtB;aACF,CAAC,CAAC;SACJ;QAED,OAAO,gBAAgB,CAAC;IAC1B,CAAC;;8HA3CU,iCAAiC;kIAAjC,iCAAiC,cAFhC,MAAM;2FAEP,iCAAiC;kBAH7C,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { ISelectionFieldOptionProperties, SelectionFieldOptionsComponent } from '@helix/platform/shared/components';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { isEmpty } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxSelectionFieldDefinitionService extends RxBaseFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.selection.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    inspectorConfig[1].controls.push({\n      name: 'selectionFieldOptionProperties',\n      component: SelectionFieldOptionsComponent,\n      options: {\n        isReadOnly: !this.rxFieldDefinitionInspectorHelperService.isFieldEditable(fieldModel)\n      } as ISelectionFieldOptionProperties\n    });\n\n    return inspectorConfig;\n  }\n\n  validate(fieldModel: IRecordFieldDefinitionModel, definitionModel: IRecordDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel, definitionModel);\n\n    if (isEmpty(fieldModel.selectionFieldOptionProperties?.optionNamesById)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          { propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.options.label') }\n        ),\n        data: {\n          propertyName: 'selectionFieldOptionProperties',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n}\n"]}