{"version":3,"file":"association-expression-configurator.class.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/field-components/association/design/association-expression-configurator.class.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,uBAAuB,EAAE,MAAM,4BAA4B,CAAC;AACrE,OAAO,EAEL,qCAAqC,EACtC,MAAM,+BAA+B,CAAC;AACvC,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAE3D,OAAO,EAAE,aAAa,EAAc,EAAE,EAAE,MAAM,MAAM,CAAC;AAGrD,MAAM,OAAO,iCAAkC,SAAQ,qCAAqC;IAG1F,YACY,QAAkB,EAClB,aAAqB,EACrB,cAAsC;QAEhD,KAAK,CAAC,QAAQ,EAAE,aAAa,EAAE,cAAc,CAAC,CAAC;QAJrC,aAAQ,GAAR,QAAQ,CAAU;QAClB,kBAAa,GAAb,aAAa,CAAQ;QACrB,mBAAc,GAAd,cAAc,CAAwB;QAL1C,4BAAuB,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAA0B,uBAAuB,CAAC,CAAC;QASpG,IAAI,CAAC,oBAAoB,CAAC;YACxB,YAAY,EAAE,UAAU;YACxB,eAAe,EAAE,cAAc,CAAC,iBAAiB,CAAC,IAAI,CACpD,SAAS,CAAC,CAAC,gBAAgB,EAAE,EAAE,CAC7B,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,EAAE,gBAAgB,CAAC,CAC7F,CACF;SACF,CAAC,CAAC;IACL,CAAC;IAEO,qBAAqB,CAAC,gBAAwB;QACpD,MAAM,mBAAmB,GACvB,IAAI,CAAC,cAAc,CAAC,2CAA2C,CAAC,IAAI,CAClE,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE,CAClB,KAAK,CAAC,MAAM;YACV,CAAC,CAAC,aAAa,CACX,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CACjB,IAAI,CAAC,cAAc,CAAC,OAAO;iBACxB,yBAAyB,CACxB,2BAA2B,EAC3B,IAAI,CACL;iBACA,IAAI,CACH,GAAG,CACD,CAAC,yBAAyB,EAAkD,EAAE,CAAC,CAAC;gBAC9E,KAAK,EAAE,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,yBAAyB,CAAC;gBAC7E,QAAQ,EAAE;oBACR;wBACE,KAAK,EAAE,yBAAyB;wBAChC,QAAQ,EAAE;4BACR;gCACE,KAAK,EAAE,IAAI;gCACX,UAAU,EAAE,sBAAsB,IAAI,4BAA4B;6BACnE;yBACF;qBACF;iBACF;aACF,CAAC,CACH,CACF,CACJ,CACF,CAAC,IAAI,CACJ,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;gBACjB,KAAK,EAAE,cAAc;gBACrB,QAAQ;aACT,CAAC,CAAC,CACJ;YACH,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CACb,CACF,CAAC;QAEJ,OAAO,IAAI,CAAC,gCAAgC,CAAC,gBAAgB,CAAC,CAAC,IAAI,CACjE,SAAS,CAAC,CAAC,kBAAkB,EAAE,EAAE,CAC/B,mBAAmB,CAAC,IAAI,CACtB,GAAG,CACD,CAAC,kBAAkB,EAAkD,EAAE,CACrE,kBAAkB;YAChB,CAAC,iCACM,kBAAkB,KACrB,QAAQ,EAAE,CAAC,kBAAkB,EAAE,GAAG,kBAAkB,CAAC,QAAQ,CAAC,IAElE,CAAC,CAAC,kBAAkB,CACzB,CACF,CACF,CACF,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { Injector } from '@angular/core';\nimport { RxDefinitionNameService } from '@helix/platform/shared/api';\nimport {\n  IViewComponentDesignCommonDataDictionaryBranch,\n  RxViewComponentExpressionConfigurator\n} from '@helix/platform/view/designer';\nimport { concatMap, switchMap, map } from 'rxjs/operators';\nimport { AssociationDesignModel } from './association-design.model';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { IAssociationDesignProperties } from './association-design.types';\n\nexport class AssociationExpressionConfigurator extends RxViewComponentExpressionConfigurator {\n  private rxDefinitionNameService = this.injector.get<RxDefinitionNameService>(RxDefinitionNameService);\n\n  constructor(\n    protected injector: Injector,\n    protected componentGuid: string,\n    protected componentModel: AssociationDesignModel\n  ) {\n    super(injector, componentGuid, componentModel);\n\n    this.configureForProperty({\n      propertyPath: 'recordId',\n      dataDictionary$: componentModel.recordEditorGuid$.pipe(\n        concatMap((recordEditorGuid) =>\n          this.getCommonDataDictionary(this.getRecordEditorBranch(recordEditorGuid), recordEditorGuid)\n        )\n      )\n    });\n  }\n\n  private getRecordEditorBranch(recordEditorGuid: string): Observable<IViewComponentDesignCommonDataDictionaryBranch> {\n    const associationsBranch$: Observable<IViewComponentDesignCommonDataDictionaryBranch> =\n      this.componentModel.otherAssociationRecordEditorComponentGuids$.pipe(\n        switchMap((guids) =>\n          guids.length\n            ? combineLatest(\n                guids.map((guid) =>\n                  this.componentModel.sandbox\n                    .getComponentPropertyValue<'associationDefinitionName', IAssociationDesignProperties>(\n                      'associationDefinitionName',\n                      guid\n                    )\n                    .pipe(\n                      map(\n                        (associationDefinitionName): IViewComponentDesignCommonDataDictionaryBranch => ({\n                          label: this.rxDefinitionNameService.getDisplayName(associationDefinitionName),\n                          children: [\n                            {\n                              label: 'First associated record',\n                              children: [\n                                {\n                                  label: 'ID',\n                                  expression: `\\${view.components.${guid}.firstAssociatedRecord.id}`\n                                }\n                              ]\n                            }\n                          ]\n                        })\n                      )\n                    )\n                )\n              ).pipe(\n                map((children) => ({\n                  label: 'Associations',\n                  children\n                }))\n              )\n            : of(null)\n        )\n      );\n\n    return this.getComponentCommonDataDictionary(recordEditorGuid).pipe(\n      switchMap((recordEditorBranch) =>\n        associationsBranch$.pipe(\n          map(\n            (associationsBranch): IViewComponentDesignCommonDataDictionaryBranch =>\n              associationsBranch\n                ? {\n                    ...recordEditorBranch,\n                    children: [associationsBranch, ...recordEditorBranch.children]\n                  }\n                : recordEditorBranch\n          )\n        )\n      )\n    );\n  }\n}\n"]}