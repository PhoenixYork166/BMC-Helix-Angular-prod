{"version":3,"file":"data-source-connections.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/admin/components/data-source-connections/data-source-connections.component.ts","../../../../../../../libs/platform/admin/components/data-source-connections/data-source-connections.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,wBAAwB,EAAU,SAAS,EAAE,MAAM,eAAe,CAAC;AACvF,OAAO,EAAc,EAAE,EAAE,MAAM,MAAM,CAAC;AACtC,OAAO,EAKL,mBAAmB,EACnB,gBAAgB,EACjB,MAAM,iCAAiC,CAAC;AACzC,OAAO,EAAE,0BAA0B,EAAE,MAAM,oCAAoC,CAAC;AAChF,OAAO,EAAqB,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AACrF,OAAO,EAAE,qBAAqB,EAAE,MAAM,0DAA0D,CAAC;AAGjG,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AAClE,OAAO,EAA6B,wBAAwB,EAAE,qBAAqB,EAAE,MAAM,4BAA4B,CAAC;AACxH,OAAO,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAC9C,OAAO,EAAE,8BAA8B,EAAE,MAAM,mCAAmC,CAAC;AACnF,OAAO,EAAE,iBAAiB,EAAE,MAAM,uBAAuB,CAAC;AAE1D,OAAO,EAAE,oCAAoC,EAAE,MAAM,4CAA4C,CAAC;AAClG,OAAO,EAAE,uCAAuC,EAAE,MAAM,+CAA+C,CAAC;AACxG,OAAO,EAAE,eAAe,EAAE,MAAM,mCAAmC,CAAC;AACpE,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;;;;;;;;;AAMvD,MAAM,OAAO,mCAAmC;IAY9C,YACU,cAA8B,EAC9B,iBAA2C,EAC3C,8BAA8D,EAC9D,qBAA4C,EAC5C,iBAAoC,EACpC,wBAAkD,EAClD,eAAgC,EAChC,gBAAkC;QAPlC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,sBAAiB,GAAjB,iBAAiB,CAA0B;QAC3C,mCAA8B,GAA9B,8BAA8B,CAAgC;QAC9D,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,oBAAe,GAAf,eAAe,CAAiB;QAChC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAuHpC,YAAO,GAAG,CAAC,WAAsC,EAA+B,EAAE;YACxF,OAAO,WAAW,CAAC,UAAU,CAAC;YAC9B,OAAO,WAAW,CAAC,sBAAsB,CAAC;YAE1C,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;QACpD,CAAC,CAAC;QA1HA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,0BAA0B,CAAC,iBAAiB,CAAC,CAAC;IAChG,CAAC;IAED,QAAQ;QACN,0BAA0B,CAAC,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC,0BAA0B,CAAC,aAAa,CAAC,CAAC,MAAM,CACxG,CAAC,+BAA+B,EAAE,CAAC,GAAG,EAAE,YAAY,CAAC,EAAE,EAAE,CAAC,iCACrD,+BAA+B,KAClC,CAAC,GAAG,CAAC,EAAE;gBACL,KAAK,EAAE,YAAY,CAAC,KAAK;gBACzB,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC;aACvD,IACD,EACF,EAAE,CACI,CAAC;QAET,0BAA0B,CAAC,SAAS,GAAG,0BAA0B,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,iCACzF,QAAQ,KACX,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAClD,CAAC,CAAC;QAEJ,0BAA0B,CAAC,oBAAoB,CAAC,YAAY,GAAG,0BAA0B,CAAC,aAAa,CAAC,QAAQ,CAAC;QACjH,0BAA0B,CAAC,oBAAoB,CAAC,QAAQ,GAAG,0BAA0B,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAExG,MAAM,WAAW,GAAwB;YACvC;gBACE,KAAK,EAAE,CAAC;gBACR,OAAO,EAAE,MAAM,CAAC,oBAAoB,CAAC,YAAY,CAAC,EAAE,CAAC;gBACrD,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,yCAAyC,CAAC;gBAC/E,OAAO,EAAE,KAAK;aACf;YACD;gBACE,KAAK,EAAE,CAAC;gBACR,OAAO,EAAE,MAAM,CAAC,oBAAoB,CAAC,YAAY,CAAC,WAAW,CAAC;gBAC9D,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,2CAA2C,CAAC;gBACjF,SAAS,EAAE,IAAI;gBACf,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,CAAC,oBAAyB,EAAE,aAA2B,EAAE,EAAE,CAC/D,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC;qBAC/C;iBACF;aACF;YACD;gBACE,KAAK,EAAE,CAAC;gBACR,OAAO,EAAE,MAAM,CAAC,qBAAqB,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC;gBACnE,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,yEAAyE,CAAC;aAChH;SACF,CAAC;QAEF,MAAM,gBAAgB,GAAsB;YAC1C,gBAAgB,EAAE;gBAChB;oBACE,EAAE,EAAE,oBAAoB,CAAC,YAAY,CAAC,EAAE;oBACxC,YAAY,EAAE,oBAAoB,CAAC,aAAa,CAAC,SAAS;iBAC3D;gBACD;oBACE,EAAE,EAAE,oBAAoB,CAAC,YAAY,CAAC,WAAW;oBACjD,YAAY,EAAE,oBAAoB,CAAC,aAAa,CAAC,SAAS;iBAC3D;gBACD;oBACE,EAAE,EAAE,qBAAqB,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU;oBACtD,YAAY,EAAE,oBAAoB,CAAC,aAAa,CAAC,SAAS;iBAC3D;aACF;SACF,CAAC;QAEF,MAAM,aAAa,GAA8B;YAC/C;gBACE,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,6CAA6C,CAAC;gBACnF,KAAK,EAAE,UAAU;gBACjB,IAAI,EAAE,OAAO;gBACb,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,GAAG,EAAE;4BACT,IAAI,CAAC,cAAc;iCAChB,OAAO,CAAC;gCACP,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,8CAA8C,CAAC;gCACpF,UAAU,EAAE,QAAQ,CAAC,WAAW,CAAC,OAAO;gCACxC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACpC,mFAAmF,CACpF;6BACF,CAAC;iCACD,IAAI,CAAC,CAAC,MAAe,EAAE,EAAE;gCACxB,IAAI,MAAM,EAAE;oCACV,MAAM,6BAA6B,GAAG,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC;oCAE3F,MAAM,gCAAgC,GAAG,GAAG,CAC1C,6BAA6B,EAC7B,oBAAoB,CAAC,YAAY,CAAC,EAAE,CACrC,CAAC;oCAEF,IAAI,CAAC,8BAA8B;yCAChC,2BAA2B,CAAC,gCAAgC,CAAC;yCAC7D,SAAS,CAAC,GAAG,EAAE;wCACd,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,iDAAiD,CAAC,CAAC;wCAChG,IAAI,CAAC,gCAAgC,EAAE,CAAC;oCAC1C,CAAC,CAAC,CAAC;iCACN;4BACH,CAAC,CAAC,CAAC;wBACP,CAAC;qBACF;iBACF;aACF;SACF,CAAC;QAEF,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;YACzB,eAAe,EAAE,IAAI;YACrB,OAAO,EAAE,WAAW;YACpB,mBAAmB,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,gBAAgB,CAAC;YAC/C,kBAAkB,EAAE,gBAAgB,CAAC,QAAQ;YAC7C,oBAAoB,EAAE,0BAA0B,CAAC,oBAAoB;YACrE,aAAa,EAAE,aAAa;YAC5B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,MAAM,EAAE,WAAW;SACpB,CAAC,CAAC;IACL,CAAC;IASD,YAAY,CAAC,QAAkB,EAAE,MAAoB;QACnD,OAAO,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,0BAA0B;QACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAC9C,wFAAwF,CACzF,CAAC;QACF,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC;QAChC,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC,0BAA0B,CAAC,oBAAoB,CAAC,CAAC;QAEnF,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,wBAAwB,CAAC,QAAqB;QAC5C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAC9C,yFAAyF,CAC1F,CAAC;QACF,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,sDAAsD,CAAC,CAAC;QAC/G,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC,oBAAoB,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QAE3E,IAAI,CAAC,8BAA8B,CAAC,uBAAuB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC1G,IAAI,CAAC,gBAAgB,GAAG;gBACtB,cAAc,EAAE,MAAM,CAAC,cAAc;gBACrC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,0BAA0B,CAAC,aAAa,CAAC,CAAC,IAAI,CACxE,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,KAAK,KAAK,MAAM,CAAC,YAAY,CAC7D;gBACD,QAAQ,EAAE,MAAM,CAAC,QAAQ;gBACzB,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,QAAQ,EAAE,MAAM,CAAC,QAAQ;gBACzB,WAAW,EAAE,MAAM,CAAC,WAAW;gBAC/B,oBAAoB,EAAE,MAAM,CAAC,oBAAoB;gBACjD,oBAAoB,EAAE,MAAM,CAAC,oBAAoB;gBACjD,UAAU,EAAE,IAAI;gBAChB,qBAAqB,EAAE,IAAI;gBAC3B,UAAU,EAAE,MAAM,CAAC,UAAU;aAC9B,CAAC;YAEF,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,gCAAgC;QACtC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,SAAS,EAAE,CAAC;IAC3D,CAAC;IAED,UAAU;QACR,MAAM,sBAAsB,GAAG;YAC7B,KAAK,EAAE,IAAI,CAAC,WAAW;YACvB,WAAW,EAAE,IAAI;YACjB,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,KAAK,EAAE;gBACL;oBACE,EAAE,EAAE,SAAS;oBACb,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,oDAAoD,CAAC;oBACzF,gBAAgB,EAAE,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,oCAAoC,CAAC;iBAC9G;gBACD;oBACE,EAAE,EAAE,uBAAuB;oBAC3B,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACjC,mFAAmF,CACpF;oBACD,gBAAgB,EAAE,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CACrE,uCAAuC,CACxC;iBACF;aACF;SACF,CAAC;QAEF,IAAI,CAAC,eAAe;aACjB,IAAI,CAAqC;YACxC,OAAO,EAAE,IAAI,CAAC,gBAAgB;YAC9B,OAAO,EAAE,sBAAsB;SAChC,CAAC;aACD,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACf,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,IAAI,EAAE,CAAC;aACb;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,IAAI;QACF,IAAI,oBAAoB,GAA0B;YAChD,cAAc,EAAE,IAAI,CAAC,gBAAgB,CAAC,cAAc;YACpD,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,KAAK;YACtD,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ;YACxC,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI;YAChC,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,IAAI,IAAI;YACtD,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ;YACxC,oBAAoB,EAAE,IAAI,CAAC,gBAAgB,CAAC,oBAAoB;YAChE,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,UAAU;SAC7C,CAAC;QAEF,IAAI,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,KAAK,KAAK,0BAA0B,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE;YACtG,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC,CAAC;YACtF,oBAAoB,CAAC,oBAAoB,GAAG,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC;SACxF;aAAM,IAAI,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,KAAK,KAAK,0BAA0B,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE;YAC7G,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC,gBAAgB,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC,CAAC;SACrG;QAED,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU;YACjD,CAAC,CAAC,IAAI,CAAC,8BAA8B,CAAC,0BAA0B,CAAC,IAAI,CAAC,oBAAoB,EAAE,oBAAoB,CAAC;YACjH,CAAC,CAAC,IAAI,CAAC,8BAA8B,CAAC,0BAA0B,CAAC,oBAAoB,CAAC,CAAC;QAEzF,UAAU,CAAC,SAAS,CAAC,GAAG,EAAE;YACxB,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAC1C,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAC3B,iGAAiG,CAClG,CACF,CAAC;YAEF,IAAI,CAAC,gCAAgC,EAAE,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;;gIAnQU,mCAAmC;oHAAnC,mCAAmC,8NC9BhD,skBAgBA;2FDca,mCAAmC;kBAJ/C,SAAS;mBAAC;oBACT,QAAQ,EAAE,kCAAkC;oBAC5C,WAAW,EAAE,0CAA0C;iBACxD;iWAGC,yBAAyB;sBADxB,SAAS;uBAAC,2BAA2B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE","sourcesContent":["import { Component, ComponentFactoryResolver, OnInit, ViewChild } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport {\n  IRecordGridActionButton,\n  IRecordGridColumn,\n  IRecordGridConfig,\n  IRecordGridDataPageParams,\n  RecordGridComponent,\n  RowSelectionMode\n} from '@helix/platform/view/components';\nimport { RX_DATA_SOURCE_CONNECTIONS } from './data-source-connections.constant';\nimport { IRecordDefinition, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RX_CONNECTION_MAPPING } from '../connection-mapping/common/connection-mapping.constant';\nimport { ColumnConfig, RowDataItem } from '@bmc-ux/adapt-table';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { DataPage, IDataPageResult, RxDataPageFactoryService, RxNotificationService } from '@helix/platform/shared/api';\nimport { cloneDeep, map, pick } from 'lodash';\nimport { RxDataSourceConnectionsService } from './data-source-connections.service';\nimport { AdaptModalService } from '@bmc-ux/adapt-angular';\nimport { IDataSourceConnection, IDataSourceConnectionWizardContext } from './data-source-connections.types';\nimport { DataSourceConnectionGeneralComponent } from './data-source-connection-general.component';\nimport { DataSourceConnectionPropertiesComponent } from './data-source-connection-properties.component';\nimport { RxWizardService } from '@helix/platform/shared/components';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-data-source-connections',\n  templateUrl: './data-source-connections.component.html'\n})\nexport class DataSourceConnectionsAdminComponent implements OnInit {\n  @ViewChild('dataSourceConnectionsGrid', { static: true })\n  dataSourceConnectionsGrid: RecordGridComponent;\n\n  private resource: DataPage;\n  private selectedConnectionId: string;\n  private wizardTitle: string;\n  private finishButtonLabel: string;\n\n  recordGridConfig: Observable<IRecordGridConfig>;\n  wizardConfigData: IDataSourceConnectionWizardContext;\n\n  constructor(\n    private rxModalService: RxModalService,\n    private rxDataPageService: RxDataPageFactoryService,\n    private rxDataSourceConnectionsService: RxDataSourceConnectionsService,\n    private rxNotificationService: RxNotificationService,\n    private adaptModalService: AdaptModalService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxWizardService: RxWizardService,\n    private translateService: TranslateService\n  ) {\n    this.resource = this.rxDataPageService.withType(RX_DATA_SOURCE_CONNECTIONS.dataPageQueryType);\n  }\n\n  ngOnInit(): void {\n    RX_DATA_SOURCE_CONNECTIONS.resourceTypes = Object.entries(RX_DATA_SOURCE_CONNECTIONS.resourceTypes).reduce(\n      (resourceTypesWithTranslatedName, [key, resourceType]) => ({\n        ...resourceTypesWithTranslatedName,\n        [key]: {\n          value: resourceType.value,\n          name: this.translateService.instant(resourceType.name)\n        }\n      }),\n      {}\n    ) as any;\n\n    RX_DATA_SOURCE_CONNECTIONS.authTypes = RX_DATA_SOURCE_CONNECTIONS.authTypes.map((authType) => ({\n      ...authType,\n      name: this.translateService.instant(authType.name)\n    }));\n\n    RX_DATA_SOURCE_CONNECTIONS.initialWizardContext.resourceType = RX_DATA_SOURCE_CONNECTIONS.resourceTypes.arSystem;\n    RX_DATA_SOURCE_CONNECTIONS.initialWizardContext.authType = RX_DATA_SOURCE_CONNECTIONS.authTypes[0].name;\n\n    const gridColumns: IRecordGridColumn[] = [\n      {\n        index: 0,\n        fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.id),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.id.label'),\n        visible: false\n      },\n      {\n        index: 1,\n        fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.description),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n        clickable: true,\n        actions: [\n          {\n            name: (previousActionResult: any, lastActionRow: IRowDataItem) =>\n              this.editDataSourceConnection(lastActionRow)\n          }\n        ]\n      },\n      {\n        index: 2,\n        fieldId: String(RX_CONNECTION_MAPPING.dataSource.fields.sourceType),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.data-source-connections.source-type.title')\n      }\n    ];\n\n    const recordDefinition: IRecordDefinition = {\n      fieldDefinitions: [\n        {\n          id: RX_RECORD_DEFINITION.coreFieldIds.id,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_RECORD_DEFINITION.coreFieldIds.description,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_CONNECTION_MAPPING.dataSource.fields.sourceType,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        }\n      ]\n    };\n\n    const actionButtons: IRecordGridActionButton[] = [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n        style: 'tertiary',\n        icon: 'trash',\n        actions: [\n          {\n            name: () => {\n              this.rxModalService\n                .confirm({\n                  title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n                  modalStyle: RX_MODAL.modalStyles.warning,\n                  message: this.translateService.instant(\n                    'com.bmc.arsys.rx.client.admin.data-source-connections.delete-confirmation.message'\n                  )\n                })\n                .then((result: boolean) => {\n                  if (result) {\n                    const selectedDataSourceConnections = this.dataSourceConnectionsGrid.api.getSelectedRows();\n\n                    const selectedDataSourceConnectionsIds = map(\n                      selectedDataSourceConnections,\n                      RX_RECORD_DEFINITION.coreFieldIds.id\n                    );\n\n                    this.rxDataSourceConnectionsService\n                      .deleteDataSourceConnections(selectedDataSourceConnectionsIds)\n                      .subscribe(() => {\n                        this.rxNotificationService.addSuccessMessage('Data source connection(s) deleted successfully.');\n                        this.refreshDataSourceConnectionsGrid();\n                      });\n                  }\n                });\n            }\n          }\n        ]\n      }\n    ];\n\n    this.recordGridConfig = of({\n      enableFiltering: true,\n      columns: gridColumns,\n      getRecordDefinition: () => of(recordDefinition),\n      enableRowSelection: RowSelectionMode.Multiple,\n      recordDefinitionName: RX_DATA_SOURCE_CONNECTIONS.recordDefinitionName,\n      actionButtons: actionButtons,\n      getData: this.getData,\n      styles: 'flex-fill'\n    });\n  }\n\n  private getData = (queryParams: IRecordGridDataPageParams): Observable<IDataPageResult> => {\n    delete queryParams.searchText;\n    delete queryParams.shouldIncludeTotalSize;\n\n    return this.resource.get({ params: queryParams });\n  };\n\n  getCellValue(dataItem: string[], column: ColumnConfig): string {\n    return dataItem[column.field];\n  }\n\n  createDataSourceConnection(): void {\n    this.wizardTitle = this.translateService.instant(\n      'com.bmc.arsys.rx.client.admin.data-source-connections.new-data-source-connection.label'\n    );\n    this.finishButtonLabel = 'Save';\n    this.wizardConfigData = cloneDeep(RX_DATA_SOURCE_CONNECTIONS.initialWizardContext);\n\n    this.openWizard();\n  }\n\n  editDataSourceConnection(dataItem: RowDataItem): void {\n    this.wizardTitle = this.translateService.instant(\n      'com.bmc.arsys.rx.client.admin.data-source-connections.edit-data-source-connection.label'\n    );\n    this.finishButtonLabel = this.translateService.instant('com.bmc.arsys.rx.client.approval.update.button.label');\n    this.selectedConnectionId = dataItem[RX_RECORD_DEFINITION.coreFieldIds.id];\n\n    this.rxDataSourceConnectionsService.getDataSourceConnection(this.selectedConnectionId).subscribe((result) => {\n      this.wizardConfigData = {\n        dataSourceName: result.dataSourceName,\n        resourceType: Object.values(RX_DATA_SOURCE_CONNECTIONS.resourceTypes).find(\n          (resourceType) => resourceType.value === result.resourceType\n        ),\n        hostName: result.hostName,\n        port: result.port,\n        authType: result.authType,\n        rasPassword: result.rasPassword,\n        enforceAuthorization: result.enforceAuthorization,\n        webApiDataSourceGuid: result.webApiDataSourceGuid,\n        isEditMode: true,\n        isGeneralFormPristine: true,\n        providerId: result.providerId\n      };\n\n      this.openWizard();\n    });\n  }\n\n  private refreshDataSourceConnectionsGrid(): void {\n    this.dataSourceConnectionsGrid.api.refresh().subscribe();\n  }\n\n  openWizard(): void {\n    const dataSourceWizardConfig = {\n      title: this.wizardTitle,\n      allowFinish: true,\n      finishButtonLabel: this.finishButtonLabel,\n      steps: [\n        {\n          id: 'general',\n          name: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n          componentFactory: this.componentFactoryResolver.resolveComponentFactory(DataSourceConnectionGeneralComponent)\n        },\n        {\n          id: 'connection-properties',\n          name: this.translateService.instant(\n            'com.bmc.arsys.rx.client.admin.data-source-connections.connection-properties.label'\n          ),\n          componentFactory: this.componentFactoryResolver.resolveComponentFactory(\n            DataSourceConnectionPropertiesComponent\n          )\n        }\n      ]\n    };\n\n    this.rxWizardService\n      .open<IDataSourceConnectionWizardContext>({\n        context: this.wizardConfigData,\n        options: dataSourceWizardConfig\n      })\n      .then((result) => {\n        if (result) {\n          this.save();\n        }\n      });\n  }\n\n  save(): void {\n    let dataSourceConnection: IDataSourceConnection = {\n      dataSourceName: this.wizardConfigData.dataSourceName,\n      resourceType: this.wizardConfigData.resourceType.value,\n      hostName: this.wizardConfigData.hostName,\n      port: this.wizardConfigData.port,\n      rasPassword: this.wizardConfigData.rasPassword || null,\n      authType: this.wizardConfigData.authType,\n      enforceAuthorization: this.wizardConfigData.enforceAuthorization,\n      providerId: this.wizardConfigData.providerId\n    };\n\n    if (this.wizardConfigData.resourceType.value === RX_DATA_SOURCE_CONNECTIONS.resourceTypes.webApi.value) {\n      dataSourceConnection = pick(dataSourceConnection, ['dataSourceName', 'resourceType']);\n      dataSourceConnection.webApiDataSourceGuid = this.wizardConfigData.webApiDataSourceGuid;\n    } else if (this.wizardConfigData.resourceType.value === RX_DATA_SOURCE_CONNECTIONS.resourceTypes.custom.value) {\n      dataSourceConnection = pick(dataSourceConnection, ['dataSourceName', 'resourceType', 'providerId']);\n    }\n\n    const writeEvent = this.wizardConfigData.isEditMode\n      ? this.rxDataSourceConnectionsService.updateDataSourceConnection(this.selectedConnectionId, dataSourceConnection)\n      : this.rxDataSourceConnectionsService.createDataSourceConnection(dataSourceConnection);\n\n    writeEvent.subscribe(() => {\n      this.rxNotificationService.addSuccessMessage(\n        this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.data-source-connections.edit-data-source-connection-saved.message'\n        )\n      );\n\n      this.refreshDataSourceConnectionsGrid();\n    });\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.admin.data-source-connections.header.title' | translate }}\">\n  <ng-container>\n    <button\n      adapt-button\n      type=\"button\"\n      btn-type=\"tertiary\"\n      class=\"d-icon-plus_circle align-self-start\"\n      rx-id=\"new-button\"\n      (click)=\"createDataSourceConnection()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.new.label' | translate }}\n    </button>\n\n    <rx-record-grid #dataSourceConnectionsGrid [config]=\"recordGridConfig\"></rx-record-grid>\n  </ng-container>\n</rx-admin-settings>\n"]}