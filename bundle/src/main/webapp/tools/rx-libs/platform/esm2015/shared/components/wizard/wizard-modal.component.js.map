{"version":3,"file":"wizard-modal.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/components/wizard/wizard-modal.component.ts","../../../../../../../libs/platform/shared/components/wizard/wizard-modal.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Injector, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActiveModalRef, DismissReasons } from '@bmc-ux/adapt-angular';\nimport { IPlainObject } from '@helix/platform/shared/api';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { cloneDeep, findIndex, isNumber } from 'lodash';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { IWizardApi, IWizardConfig, IWizardStep } from './wizard.types';\n\n@Component({\n  selector: 'rx-wizard-modal',\n  templateUrl: './wizard-modal.component.html',\n  styleUrls: ['./wizard-modal.component.scss']\n})\nexport class RxWizardModalComponent extends RxModalClass implements OnInit, OnDestroy {\n  constructor(public activeModalRef: ActiveModalRef, protected injector: Injector) {\n    super(activeModalRef, injector);\n  }\n\n  @ViewChild('adaptTabset', { static: true })\n  adaptTabset;\n\n  activeTabIndex = 0;\n  config: IWizardConfig<any> = this.activeModalRef.getData();\n\n  isWizardCompleted = false;\n\n  private nextSubject: Subject<string> = new Subject();\n  next$ = this.nextSubject.asObservable();\n\n  api: IWizardApi = {\n    isCurrentStepActive: (stepId: string): boolean => {\n      return findIndex(this.config.options.steps, { id: stepId }) === this.activeTabIndex;\n    },\n\n    addStep: (step: IWizardStep, index?: number): void => {\n      if (isNumber(index)) {\n        this.config.options.steps.splice(index, 0, step);\n\n        if (index <= this.activeTabIndex) {\n          setTimeout(() => this.next());\n        }\n      } else {\n        this.config.options.steps.push(step);\n      }\n    },\n\n    complete: (): void => {\n      this.isWizardDirty = false;\n      this.isWizardCompleted = true;\n    },\n\n    disableNextButton: (): void => {\n      this.config.options.isNextButtonDisabled = true;\n    },\n\n    enableNextButton: (): void => {\n      this.config.options.isNextButtonDisabled = false;\n    },\n\n    disablePreviousButton: (): void => {\n      this.config.options.isPreviousButtonDisabled = true;\n    },\n\n    enablePreviousButton: (): void => {\n      this.config.options.isPreviousButtonDisabled = false;\n    },\n\n    disableFinishButton: (): void => {\n      this.config.options.isFinishButtonDisabled = true;\n    },\n\n    enableFinishButton: (): void => {\n      this.config.options.isFinishButtonDisabled = false;\n    },\n\n    getSteps(): IWizardStep[] {\n      return cloneDeep(this.config.options.steps);\n    },\n\n    markPristine: (): void => {\n      this.isWizardDirty = false;\n    },\n\n    markDirty: (): void => {\n      this.isWizardDirty = true;\n    },\n\n    removeNextSteps: (startIndex: number): void => {\n      this.config.options.steps.splice(startIndex);\n    },\n\n    removeStep: (index: number): void => {\n      this.config.options.steps.splice(index, 1);\n    },\n\n    renew: (): void => {\n      this.isWizardCompleted = false;\n    },\n\n    setFinishButtonLabel: (label: string): void => {\n      this.config.options.finishButtonLabel = label;\n    },\n\n    updateContext: (context: IPlainObject, markDirty = true): void => {\n      Object.assign(this.config.context, context);\n\n      this.contextSubject$.next(this.config.context);\n\n      if (markDirty) {\n        this.api.markDirty();\n      }\n    }\n  };\n\n  private contextSubject$: BehaviorSubject<IPlainObject> = new BehaviorSubject<IPlainObject>(this.config.context);\n  private stepsSubject$: BehaviorSubject<IPlainObject> = new BehaviorSubject<IPlainObject>(this.config.options.steps);\n  private tabIndexSubject$: BehaviorSubject<number> = new BehaviorSubject<number>(this.activeTabIndex);\n  private isWizardDirty = false;\n\n  context$: Observable<IPlainObject> = this.contextSubject$.asObservable();\n  steps$: Observable<IPlainObject> = this.stepsSubject$.asObservable();\n  tabIndex$: Observable<number> = this.tabIndexSubject$.asObservable();\n\n  isDirty(): boolean {\n    return this.isWizardDirty;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.config.options.isPreviousButtonDisabled = true;\n    this.config.options.isNextButtonDisabled = false;\n    this.config.options.isFinishButtonDisabled = false;\n\n    this.config.options.steps[this.activeTabIndex].isActivated = true;\n  }\n\n  tabChanged({ index }): void {\n    this.activeTabIndex = index;\n    this.config.options.steps[this.activeTabIndex].isActivated = true;\n\n    this.config.options.isPreviousButtonDisabled = index === 0;\n    this.config.options.isNextButtonDisabled = index === this.config.options.steps.length - 1;\n\n    this.tabIndexSubject$.next(this.activeTabIndex);\n    this.stepsSubject$.next(this.config.options.steps);\n  }\n\n  back(): void {\n    this.adaptTabset.setActiveTab(this.activeTabIndex - 1, true, null);\n  }\n\n  next(force = false): void {\n    if (!force) {\n      this.nextSubject.next(this.config.options.steps[this.activeTabIndex].id);\n    }\n\n    if (force || this.config.options.steps[this.activeTabIndex].handlesNext !== true) {\n      this.adaptTabset.setActiveTab(this.activeTabIndex + 1, true, null);\n    }\n  }\n\n  finish(): void {\n    this.activeModalRef.close(this.config.context);\n  }\n\n  close(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  ngOnDestroy(): void {\n    this.nextSubject.complete();\n    this.contextSubject$.complete();\n    this.stepsSubject$.complete();\n    this.tabIndexSubject$.complete();\n  }\n}\n","<div class=\"modal-header\">\n  <h5 class=\"modal-title\">{{ config.options.title }}</h5>\n\n  <button\n    class=\"close dp-close\"\n    [attr.aria-label]=\"'com.bmc.arsys.rx.client.common.close.label' | translate\"\n    type=\"button\"\n    (click)=\"close()\"\n  ></button>\n</div>\n\n<div class=\"alert alert-info mb-0\" role=\"alert\" *ngIf=\"config.options.notificationMessage\">\n  <div class=\"alert-content\">\n    {{ config.options.notificationMessage }}\n  </div>\n</div>\n\n<div class=\"modal-body\">\n  <adapt-tabset\n    #adaptTabset\n    [type]=\"'stacked'\"\n    [tab-active]=\"activeTabIndex\"\n    (tab-active-changed)=\"tabChanged($event)\"\n    class=\"h-100\"\n    customClassTabList=\"stacked-tab-list\"\n  >\n    <adapt-tab-panel *ngFor=\"let step of config.options.steps\" [adapt-tab-title]=\"step.name\" [disabled]=\"true\">\n      <rx-dynamic-component-renderer\n        *ngIf=\"step.isActivated\"\n        [componentFactory]=\"step.componentFactory\"\n        [context]=\"config.context\"\n        [options]=\"step.options\"\n      ></rx-dynamic-component-renderer>\n    </adapt-tab-panel>\n  </adapt-tabset>\n</div>\n\n<div class=\"modal-footer\">\n  <button\n    adapt-button\n    type=\"button\"\n    btn-type=\"secondary\"\n    *ngIf=\"!isWizardCompleted\"\n    (click)=\"close()\"\n    rx-id=\"cancel-button\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n\n  <button\n    adapt-button\n    type=\"button\"\n    btn-type=\"secondary\"\n    class=\"mr-2 d-icon-left-angle_left\"\n    [disabled]=\"config.options.isPreviousButtonDisabled\"\n    (click)=\"back()\"\n    rx-id=\"previous-button\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.previous-step.label' | translate }}\n  </button>\n\n  <button\n    adapt-button\n    type=\"button\"\n    btn-type=\"primary\"\n    class=\"mr-2 d-icon-right-angle_right\"\n    *ngIf=\"activeTabIndex < config.options.steps.length - 1\"\n    [disabled]=\"config.options.isNextButtonDisabled\"\n    (click)=\"next()\"\n    rx-id=\"next-button\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.next-step.label' | translate }}\n  </button>\n\n  <button\n    adapt-button\n    type=\"button\"\n    btn-type=\"primary\"\n    *ngIf=\"(config.options.allowFinish && activeTabIndex === config.options.steps.length - 1) || isWizardCompleted\"\n    [disabled]=\"config.options.isFinishButtonDisabled\"\n    (click)=\"finish()\"\n    rx-id=\"finish-button\"\n  >\n    {{ config.options.finishButtonLabel }}\n  </button>\n</div>\n"]}