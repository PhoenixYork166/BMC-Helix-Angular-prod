{"version":3,"file":"definition-picker-cache.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/components/definition-picker/definition-picker-cache.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { RxAssociationDefinitionDataPageService } from '@helix/platform/association/api';\nimport { RxNamedListDefinitionDataPageService } from '@helix/platform/named-list/api';\nimport { RxProcessDefinitionDataPageService } from '@helix/platform/process/api';\nimport { RX_RECORD_DEFINITION, RxRecordDefinitionDataPageService } from '@helix/platform/record/api';\nimport { RX_VIEW_DEFINITION, RxViewDefinitionDataPageService } from '@helix/platform/view/api';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { IDefinitionDescriptor } from './interfaces/definition-descriptor.interface';\nimport { RX_BUNDLE, RxChatbotDefinitionDataPageService } from '@helix/platform/shared/api';\nimport { filter } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxDefinitionPickerCacheService {\n  private registeredConsumerCount = 0;\n\n  private bundleRecordDefinitionDescriptors: { [name: string]: Observable<IDefinitionDescriptor[]> } = {};\n  private bundleDataRecordDefinitionDescriptors: { [name: string]: Observable<IDefinitionDescriptor[]> } = {};\n  private bundleRegularRecordDefinitionDescriptors: { [name: string]: Observable<IDefinitionDescriptor[]> } = {};\n  private bundleRegularDataRecordDefinitionDescriptors: { [name: string]: Observable<IDefinitionDescriptor[]> } = {};\n  private bundleStandardDataRecordDefinitionDescriptors: { [name: string]: Observable<IDefinitionDescriptor[]> } = {};\n\n  private bundlePublicRegularDataRecordDefinitionDescriptors: {\n    [name: string]: Observable<IDefinitionDescriptor[]>;\n  } = {};\n\n  private bundleInheritableRecordDefinitionDescriptors: { [name: string]: Observable<IDefinitionDescriptor[]> } = {};\n  private bundleProcessDefinitionDescriptors: { [name: string]: Observable<IDefinitionDescriptor[]> } = {};\n  private bundlePublicProcessDefinitionDescriptors: { [name: string]: Observable<IDefinitionDescriptor[]> } = {};\n  private bundleViewDefinitionDescriptor: { [name: string]: Observable<IDefinitionDescriptor[]> } = {};\n  private bundleNamedListDefinitionDescriptors: { [name: string]: Observable<IDefinitionDescriptor[]> } = {};\n  private bundleAssociationDefinitionDescriptors: { [name: string]: Observable<IDefinitionDescriptor[]> } = {};\n  private bundleChatbotDefinitionDescriptors: { [name: string]: Observable<IDefinitionDescriptor[]> } = {};\n\n  private rxRecordDefinitionDescriptors: Observable<IDefinitionDescriptor[]>;\n  private rxDataRecordDefinitionDescriptors: Observable<IDefinitionDescriptor[]>;\n  private rxStandardDataRecordDefinitionDescriptors: Observable<IDefinitionDescriptor[]>;\n\n  private allRecordDefinitionDescriptors: Observable<IDefinitionDescriptor[]>;\n  private allDataRecordDefinitionDescriptors: Observable<IDefinitionDescriptor[]>;\n  private allStandardDataRecordDefinitionDescriptors: Observable<IDefinitionDescriptor[]>;\n  private allRegularRecordDefinitionDescriptors: Observable<IDefinitionDescriptor[]>;\n  private allRegularDataRecordDefinitionDescriptors: Observable<IDefinitionDescriptor[]>;\n  private allPublicRegularDataRecordDefinitionDescriptors: Observable<IDefinitionDescriptor[]>;\n  private rxRegularRecordDefinitionDescriptors: Observable<IDefinitionDescriptor[]>;\n  private rxRegularDataRecordDefinitionDescriptors: Observable<IDefinitionDescriptor[]>;\n  private rxPublicRegularDataRecordDefinitionDescriptors: Observable<IDefinitionDescriptor[]>;\n  private allInheritableRecordDefinitionDescriptors: Observable<IDefinitionDescriptor[]>;\n  private allProcessDefinitionDescriptors: Observable<IDefinitionDescriptor[]>;\n  private allPublicProcessDefinitionDescriptors: Observable<IDefinitionDescriptor[]>;\n  private allViewDefinitionDescriptors: Observable<IDefinitionDescriptor[]>;\n  private allNamedListDefinitionDescriptors: Observable<IDefinitionDescriptor[]>;\n  private allAssociationDefinitionDescriptors: Observable<IDefinitionDescriptor[]>;\n  private allChatbotDefinitionDescriptors: Observable<IDefinitionDescriptor[]>;\n\n  constructor(\n    private recordDefinitionDataPageService: RxRecordDefinitionDataPageService,\n    private processDefinitionDataPageService: RxProcessDefinitionDataPageService,\n    private viewDefinitionDataPageService: RxViewDefinitionDataPageService,\n    private namedListDefinitionDataPageService: RxNamedListDefinitionDataPageService,\n    private associationDefinitionDataPageService: RxAssociationDefinitionDataPageService,\n    private rxChatbotDefinitionDataPageService: RxChatbotDefinitionDataPageService\n  ) {}\n\n  getBundleRecordDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]> {\n    if (!this.bundleRecordDefinitionDescriptors[bundleId]) {\n      this.bundleRecordDefinitionDescriptors[bundleId] = this.recordDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': bundleId\n          },\n          params: {\n            propertySelection: ['name', 'scope'],\n            requireDependent: true\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.bundleRecordDefinitionDescriptors[bundleId];\n  }\n\n  getBundleDataRecordDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]> {\n    if (!this.bundleDataRecordDefinitionDescriptors[bundleId]) {\n      this.bundleDataRecordDefinitionDescriptors[bundleId] = this.recordDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': bundleId\n          },\n          params: {\n            propertySelection: ['name', 'scope'],\n            requireDependent: true,\n            excludeAuditRecordDefinitions: true\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.bundleDataRecordDefinitionDescriptors[bundleId];\n  }\n\n  getBundleStandardDataRecordDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]> {\n    if (!this.bundleStandardDataRecordDefinitionDescriptors[bundleId]) {\n      this.bundleStandardDataRecordDefinitionDescriptors[bundleId] = this.recordDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': bundleId\n          },\n          params: {\n            propertySelection: ['name', 'scope'],\n            requireDependent: true,\n            excludeAuditRecordDefinitions: true,\n            excludeCustomRecordDefinitions: true\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.bundleStandardDataRecordDefinitionDescriptors[bundleId];\n  }\n\n  getAllRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]> {\n    if (!this.allRecordDefinitionDescriptors) {\n      this.allRecordDefinitionDescriptors = this.recordDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': ''\n          },\n          params: {\n            propertySelection: ['name', 'scope']\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.allRecordDefinitionDescriptors;\n  }\n\n  getAllDataRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]> {\n    if (!this.allDataRecordDefinitionDescriptors) {\n      this.allDataRecordDefinitionDescriptors = this.recordDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': ''\n          },\n          params: {\n            propertySelection: ['name', 'scope'],\n            excludeAuditRecordDefinitions: true\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.allDataRecordDefinitionDescriptors;\n  }\n\n  getAllStandardDataRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]> {\n    if (!this.allStandardDataRecordDefinitionDescriptors) {\n      this.allStandardDataRecordDefinitionDescriptors = this.recordDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': ''\n          },\n          params: {\n            propertySelection: ['name', 'scope'],\n            excludeAuditRecordDefinitions: true,\n            excludeCustomRecordDefinitions: true\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.allStandardDataRecordDefinitionDescriptors;\n  }\n\n  getRxRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]> {\n    if (!this.rxRecordDefinitionDescriptors) {\n      this.rxRecordDefinitionDescriptors = this.recordDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': ''\n          },\n          params: {\n            rxDefinitionsOnly: true,\n            propertySelection: ['name', 'scope']\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.rxRecordDefinitionDescriptors;\n  }\n\n  getRxDataRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]> {\n    if (!this.rxDataRecordDefinitionDescriptors) {\n      this.rxDataRecordDefinitionDescriptors = this.recordDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': ''\n          },\n          params: {\n            propertySelection: ['name', 'scope'],\n            rxDefinitionsOnly: true,\n            excludeAuditRecordDefinitions: true\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.rxDataRecordDefinitionDescriptors;\n  }\n\n  getRxStandardDataRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]> {\n    if (!this.rxStandardDataRecordDefinitionDescriptors) {\n      this.rxStandardDataRecordDefinitionDescriptors = this.recordDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': ''\n          },\n          params: {\n            propertySelection: ['name', 'scope'],\n            rxDefinitionsOnly: true,\n            excludeAuditRecordDefinitions: true,\n            excludeCustomRecordDefinitions: true\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.rxStandardDataRecordDefinitionDescriptors;\n  }\n\n  getAllRegularRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]> {\n    if (!this.allRegularRecordDefinitionDescriptors) {\n      this.allRegularRecordDefinitionDescriptors = this.recordDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': ''\n          },\n          params: {\n            propertySelection: ['name', 'scope'],\n            resourceType: RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.allRegularRecordDefinitionDescriptors;\n  }\n\n  getAllRegularDataRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]> {\n    if (!this.allRegularDataRecordDefinitionDescriptors) {\n      this.allRegularDataRecordDefinitionDescriptors = this.recordDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': ''\n          },\n          params: {\n            propertySelection: ['name', 'scope'],\n            excludeAuditRecordDefinitions: true,\n            resourceType: RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.allRegularDataRecordDefinitionDescriptors;\n  }\n\n  getRxRegularRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]> {\n    if (!this.rxRegularRecordDefinitionDescriptors) {\n      this.rxRegularRecordDefinitionDescriptors = this.recordDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': ''\n          },\n          params: {\n            propertySelection: ['name', 'scope'],\n            rxDefinitionsOnly: true,\n            resourceType: RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.rxRegularRecordDefinitionDescriptors;\n  }\n\n  getRxRegularDataRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]> {\n    if (!this.rxRegularDataRecordDefinitionDescriptors) {\n      this.rxRegularDataRecordDefinitionDescriptors = this.recordDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': ''\n          },\n          params: {\n            propertySelection: ['name', 'scope'],\n            rxDefinitionsOnly: true,\n            resourceType: RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType,\n            excludeAuditRecordDefinitions: true\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.rxRegularDataRecordDefinitionDescriptors;\n  }\n\n  getBundleRegularRecordDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]> {\n    if (!this.bundleRegularRecordDefinitionDescriptors[bundleId]) {\n      this.bundleRegularRecordDefinitionDescriptors[bundleId] = this.recordDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': bundleId\n          },\n          params: {\n            propertySelection: ['name', 'scope'],\n            requireDependent: true,\n            resourceType: RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.bundleRegularRecordDefinitionDescriptors[bundleId];\n  }\n\n  getBundleRegularDataRecordDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]> {\n    if (!this.bundleRegularDataRecordDefinitionDescriptors[bundleId]) {\n      this.bundleRegularDataRecordDefinitionDescriptors[bundleId] = this.recordDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': bundleId\n          },\n          params: {\n            propertySelection: ['name', 'scope'],\n            requireDependent: true,\n            resourceType: RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType,\n            excludeAuditRecordDefinitions: true\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.bundleRegularDataRecordDefinitionDescriptors[bundleId];\n  }\n\n  getAllPublicRegularDataRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]> {\n    if (!this.allPublicRegularDataRecordDefinitionDescriptors) {\n      this.allPublicRegularDataRecordDefinitionDescriptors = this.getAllRegularDataRecordDefinitionDescriptors().pipe(\n        map((recordDefinitionDescriptors: IDefinitionDescriptor[]) =>\n          filter(recordDefinitionDescriptors, { scope: RX_BUNDLE.definitionScopeTypes.public })\n        ),\n        shareReplay(1)\n      );\n    }\n\n    return this.allPublicRegularDataRecordDefinitionDescriptors;\n  }\n\n  getRxPublicRegularDataRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]> {\n    if (!this.rxPublicRegularDataRecordDefinitionDescriptors) {\n      this.rxPublicRegularDataRecordDefinitionDescriptors = this.getRxRegularDataRecordDefinitionDescriptors().pipe(\n        map((recordDefinitionDescriptors: IDefinitionDescriptor[]) =>\n          filter(recordDefinitionDescriptors, { scope: RX_BUNDLE.definitionScopeTypes.public })\n        ),\n        shareReplay(1)\n      );\n    }\n\n    return this.rxPublicRegularDataRecordDefinitionDescriptors;\n  }\n\n  getBundlePublicRegularDataRecordDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]> {\n    if (!this.bundlePublicRegularDataRecordDefinitionDescriptors[bundleId]) {\n      this.bundlePublicRegularDataRecordDefinitionDescriptors[bundleId] =\n        this.getBundleRegularDataRecordDefinitionDescriptors(bundleId).pipe(\n          map((recordDefinitionDescriptors: IDefinitionDescriptor[]) =>\n            filter(recordDefinitionDescriptors, { scope: RX_BUNDLE.definitionScopeTypes.public })\n          )\n        );\n    }\n\n    return this.bundlePublicRegularDataRecordDefinitionDescriptors[bundleId];\n  }\n\n  getAllInheritableRecordDefinitionDescriptors(): Observable<IDefinitionDescriptor[]> {\n    if (!this.allInheritableRecordDefinitionDescriptors) {\n      this.allInheritableRecordDefinitionDescriptors = this.recordDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': ''\n          },\n          params: {\n            propertySelection: ['name', 'scope'],\n            inheritableDefinitionsOnly: true\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.allInheritableRecordDefinitionDescriptors;\n  }\n\n  getBundleInheritableRecordDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]> {\n    if (!this.bundleInheritableRecordDefinitionDescriptors[bundleId]) {\n      this.bundleInheritableRecordDefinitionDescriptors[bundleId] = this.recordDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': bundleId\n          },\n          params: {\n            propertySelection: ['name', 'scope'],\n            requireDependent: true,\n            inheritableDefinitionsOnly: true\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.bundleInheritableRecordDefinitionDescriptors[bundleId];\n  }\n\n  getAllProcessDefinitionDescriptors(): Observable<IDefinitionDescriptor[]> {\n    if (!this.allProcessDefinitionDescriptors) {\n      this.allProcessDefinitionDescriptors = this.processDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': ''\n          },\n          params: {\n            propertySelection: ['name', 'scope']\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.allProcessDefinitionDescriptors;\n  }\n\n  getAllPublicProcessDefinitionDescriptors(): Observable<IDefinitionDescriptor[]> {\n    if (!this.allPublicProcessDefinitionDescriptors) {\n      this.allPublicProcessDefinitionDescriptors = this.getAllProcessDefinitionDescriptors().pipe(\n        map((processDefinitionDescriptors: IDefinitionDescriptor[]) =>\n          filter(processDefinitionDescriptors, { scope: RX_BUNDLE.definitionScopeTypes.public })\n        ),\n        shareReplay(1)\n      );\n    }\n\n    return this.allPublicProcessDefinitionDescriptors;\n  }\n\n  getBundleProcessDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]> {\n    if (!this.bundleProcessDefinitionDescriptors[bundleId]) {\n      this.bundleProcessDefinitionDescriptors[bundleId] = this.processDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': bundleId\n          },\n          params: {\n            propertySelection: ['name', 'scope'],\n            requireDependent: true\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.bundleProcessDefinitionDescriptors[bundleId];\n  }\n\n  getBundlePublicProcessDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]> {\n    if (!this.bundlePublicProcessDefinitionDescriptors[bundleId]) {\n      this.bundlePublicProcessDefinitionDescriptors[bundleId] = this.getBundleProcessDefinitionDescriptors(\n        bundleId\n      ).pipe(\n        map((processDefinitionDescriptors: IDefinitionDescriptor[]) =>\n          filter(processDefinitionDescriptors, { scope: RX_BUNDLE.definitionScopeTypes.public })\n        )\n      );\n    }\n\n    return this.bundlePublicProcessDefinitionDescriptors[bundleId];\n  }\n\n  getAllViewDefinitionDescriptors(): Observable<IDefinitionDescriptor[]> {\n    if (!this.allViewDefinitionDescriptors) {\n      this.allViewDefinitionDescriptors = this.viewDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': ''\n          },\n          params: {\n            propertySelection: ['name', 'scope'],\n            viewType: RX_VIEW_DEFINITION.types.regular\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.allViewDefinitionDescriptors;\n  }\n\n  getBundleViewDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]> {\n    if (!this.bundleViewDefinitionDescriptor[bundleId]) {\n      this.bundleViewDefinitionDescriptor[bundleId] = this.viewDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': bundleId\n          },\n          params: {\n            propertySelection: ['name', 'scope'],\n            requireDependent: true,\n            viewType: RX_VIEW_DEFINITION.types.regular\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.bundleViewDefinitionDescriptor[bundleId];\n  }\n\n  getAllNamedListDefinitionDescriptors(): Observable<IDefinitionDescriptor[]> {\n    if (!this.allNamedListDefinitionDescriptors) {\n      this.allNamedListDefinitionDescriptors = this.namedListDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': ''\n          },\n          params: {\n            propertySelection: ['name', 'scope']\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.allNamedListDefinitionDescriptors;\n  }\n\n  getBundleNamedListDefinitionDescriptors(bundleId: string): Observable<IDefinitionDescriptor[]> {\n    if (!this.bundleNamedListDefinitionDescriptors[bundleId]) {\n      this.bundleNamedListDefinitionDescriptors[bundleId] = this.namedListDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': bundleId\n          },\n          params: {\n            propertySelection: ['name', 'scope'],\n            requireDependent: true\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.bundleNamedListDefinitionDescriptors[bundleId];\n  }\n\n  getAllAssociationDefinitionDescriptors(): Observable<IDefinitionDescriptor[]> {\n    if (!this.allAssociationDefinitionDescriptors) {\n      this.allAssociationDefinitionDescriptors = this.associationDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': ''\n          },\n          params: {\n            propertySelection: ['name', 'scope']\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.allAssociationDefinitionDescriptors;\n  }\n\n  getBundleAssociationDefinitionDescriptors(bundleId): Observable<IDefinitionDescriptor[]> {\n    if (!this.bundleAssociationDefinitionDescriptors[bundleId]) {\n      this.bundleAssociationDefinitionDescriptors[bundleId] = this.associationDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': bundleId\n          },\n          params: {\n            propertySelection: ['name', 'scope'],\n            requireDependent: true\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.bundleAssociationDefinitionDescriptors[bundleId];\n  }\n\n  getAllChatbotDefinitionDescriptors(): Observable<IDefinitionDescriptor[]> {\n    if (!this.allChatbotDefinitionDescriptors) {\n      this.allChatbotDefinitionDescriptors = this.rxChatbotDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': ''\n          },\n          params: {\n            propertySelection: ['chatbotName']\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.allChatbotDefinitionDescriptors;\n  }\n\n  getBundleChatbotDefinitionDescriptors(bundleId): Observable<IDefinitionDescriptor[]> {\n    if (!this.bundleChatbotDefinitionDescriptors[bundleId]) {\n      this.bundleChatbotDefinitionDescriptors[bundleId] = this.rxChatbotDefinitionDataPageService\n        .get({\n          headers: {\n            'default-bundle-scope': bundleId\n          },\n          params: {\n            propertySelection: ['chatbotName']\n          }\n        })\n        .pipe(\n          map((response: any) => response.data),\n          shareReplay(1)\n        );\n    }\n\n    return this.bundleChatbotDefinitionDescriptors[bundleId];\n  }\n\n  registerConsumer() {\n    this.registeredConsumerCount++;\n  }\n\n  unRegisterConsumer() {\n    this.registeredConsumerCount--;\n\n    if (this.registeredConsumerCount === 0) {\n      this.clear();\n    }\n  }\n\n  clear() {\n    this.bundleRecordDefinitionDescriptors = {};\n    this.bundleDataRecordDefinitionDescriptors = {};\n    this.bundleRegularRecordDefinitionDescriptors = {};\n    this.bundleRegularDataRecordDefinitionDescriptors = {};\n    this.bundleStandardDataRecordDefinitionDescriptors = {};\n    this.bundleInheritableRecordDefinitionDescriptors = {};\n    this.bundleProcessDefinitionDescriptors = {};\n    this.bundlePublicProcessDefinitionDescriptors = {};\n    this.bundleViewDefinitionDescriptor = {};\n    this.bundleNamedListDefinitionDescriptors = {};\n    this.bundleAssociationDefinitionDescriptors = {};\n    this.bundleChatbotDefinitionDescriptors = {};\n    this.bundlePublicRegularDataRecordDefinitionDescriptors = {};\n\n    this.rxRecordDefinitionDescriptors = null;\n    this.rxDataRecordDefinitionDescriptors = null;\n    this.rxStandardDataRecordDefinitionDescriptors = null;\n    this.allRecordDefinitionDescriptors = null;\n    this.allDataRecordDefinitionDescriptors = null;\n    this.allStandardDataRecordDefinitionDescriptors = null;\n    this.allRegularRecordDefinitionDescriptors = null;\n    this.allRegularDataRecordDefinitionDescriptors = null;\n    this.rxRegularRecordDefinitionDescriptors = null;\n    this.rxRegularDataRecordDefinitionDescriptors = null;\n    this.allInheritableRecordDefinitionDescriptors = null;\n    this.allProcessDefinitionDescriptors = null;\n    this.allPublicProcessDefinitionDescriptors = null;\n    this.allViewDefinitionDescriptors = null;\n    this.allNamedListDefinitionDescriptors = null;\n    this.allAssociationDefinitionDescriptors = null;\n    this.allChatbotDefinitionDescriptors = null;\n    this.allPublicRegularDataRecordDefinitionDescriptors = null;\n    this.rxPublicRegularDataRecordDefinitionDescriptors = null;\n  }\n}\n"]}