{"version":3,"file":"cognitive-training.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/admin/components/cognitive-training/cognitive-training.component.ts","../../../../../../../libs/platform/admin/components/cognitive-training/cognitive-training.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAqB,MAAM,eAAe,CAAC;AAC7D,OAAO,EAAE,aAAa,EAAgB,MAAM,MAAM,CAAC;AACnD,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAC3C,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAC9B,OAAO,EAAE,iBAAiB,EAAE,MAAM,8BAA8B,CAAC;AAEjE,OAAO,EAAE,qBAAqB,EAAE,MAAM,+BAA+B,CAAC;AACtE,OAAO,EAAE,0BAA0B,EAAE,MAAM,8BAA8B,CAAC;AAC1E,OAAO,EAAE,yBAAyB,EAAiD,MAAM,4BAA4B,CAAC;;;;;;;;AAMtH,MAAM,OAAO,+BAAgC,SAAQ,iBAAiB;IAapE,YAAoB,0BAAsD;QACxE,KAAK,EAAE,CAAC;QADU,+BAA0B,GAA1B,0BAA0B,CAA4B;QAT1E,aAAQ,GAAG,qBAAqB,CAAC,QAAQ,CAAC,QAAQ,CAAC;QAEnD,SAAI,GAA4B;YAC9B,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC;YACvE,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,yBAAyB,CAAC,WAAW,CAAC;SAC3E,CAAC;QAEQ,eAAU,GAAG,IAAI,aAAa,CAAU,CAAC,CAAC,CAAC;IAIrD,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QAEjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,0BAA0B;aACxC,gCAAgC,EAAE;aAClC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAChC,SAAS,CAAC,CAAC,6BAAmD,EAAE,EAAE;YACjE,IAAI,CAAC,YAAY,GAAG,qBAAqB,CAAC,QAAQ,CAAC,aAAa,CAAC,6BAA6B,CAAC,KAAK,CAAC,CAAC;YAEtG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,cAAc,EAAE,qBAAqB,CAAC,QAAQ,CAAC,WAAW,CAAC,uCAAuC,CAAC,IAAI;aACxG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QACrC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC7B,CAAC;;4HAnCU,+BAA+B;gHAA/B,+BAA+B,0FCd5C,o3BAqBA;2FDPa,+BAA+B;kBAJ3C,SAAS;mBAAC;oBACT,QAAQ,EAAE,6BAA6B;oBACvC,WAAW,EAAE,qCAAqC;iBACnD","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ReplaySubject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { find } from 'lodash';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { ISystemConfiguration } from '@helix/platform/shared/api';\nimport { RX_COGNITIVE_TRAINING } from './cognitive-training.constant';\nimport { RxCognitiveTrainingService } from './cognitive-training.service';\nimport { CognitiveTrainingTabNames, ICognitiveTrainingTab, ICognitiveTrainingType } from './cognitive-training.types';\n\n@Component({\n  selector: 'rx-admin-cognitive-training',\n  templateUrl: './cognitive-training.component.html'\n})\nexport class CognitiveTrainingAdminComponent extends BaseViewComponent implements OnInit, OnDestroy {\n  busy: Subscription;\n  trainingType: ICognitiveTrainingType;\n\n  sections = RX_COGNITIVE_TRAINING.settings.sections;\n\n  tabs: ICognitiveTrainingTab[] = [\n    RX_COGNITIVE_TRAINING.settings.tabs[CognitiveTrainingTabNames.DataSets],\n    RX_COGNITIVE_TRAINING.settings.tabs[CognitiveTrainingTabNames.TestResults]\n  ];\n\n  protected destroyed$ = new ReplaySubject<boolean>(1);\n\n  constructor(private rxCognitiveTrainingService: RxCognitiveTrainingService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.busy = this.rxCognitiveTrainingService\n      .getClassificationServiceProvider()\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((classificationServiceProvider: ISystemConfiguration) => {\n        this.trainingType = RX_COGNITIVE_TRAINING.settings.trainingTypes[classificationServiceProvider.value];\n\n        find(this.sections, {\n          evaluationName: RX_COGNITIVE_TRAINING.settings.evaluations.autoClassificationTrainingAndEvaluation.name\n        }).title = this.trainingType.title;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-training.header.title' | translate }}\">\n  <adapt-accordion multiselect=\"true\">\n    <adapt-accordion-tab\n      *ngFor=\"let section of sections\"\n      [title]=\"section.title | translate\"\n      [isOpen]=\"section.isExpanded\"\n    >\n      <adapt-tabset *ngIf=\"trainingType\">\n        <adapt-tab-panel *ngFor=\"let tab of tabs\" [adapt-tab-title]=\"tab.title | translate\">\n          <rx-cognitive-training-record-grid\n            [evaluationName]=\"section.evaluationName\"\n            [tab]=\"tab\"\n            [recordDefinitionName]=\"tab.recordDefinitionName\"\n            [trainingType]=\"trainingType\"\n          >\n          </rx-cognitive-training-record-grid>\n        </adapt-tab-panel>\n      </adapt-tabset>\n    </adapt-accordion-tab>\n  </adapt-accordion>\n</rx-admin-settings>\n"]}