{"version":3,"file":"view-designer-palette.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/designer/components/palette/view-designer-palette.component.ts","../../../../../../../../libs/platform/view/designer/components/palette/view-designer-palette.component.html"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { RxStringService } from '@helix/platform/utils';\nimport { groupBy, lowerCase, map as _map, sortBy, flow } from 'lodash';\nimport { debounceTime, map, startWith } from 'rxjs/operators';\nimport { IViewComponentGroup } from './view-component-group.interface';\nimport { IViewComponentDescriptor } from '@helix/platform/view/api';\nimport { RX_VIEW_DESIGNER } from '../../view-designer.constant';\nimport { IViewComponentDragData } from '../view-designer-canvas';\nimport { combineLatest, Observable, ReplaySubject } from 'rxjs';\n\n@Component({\n  selector: 'rx-view-designer-palette',\n  templateUrl: './view-designer-palette.component.html',\n  styleUrls: ['./view-designer-palette.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ViewDesignerPaletteComponent implements OnInit, OnDestroy {\n  @Input()\n  set components(value: IViewComponentDescriptor[]) {\n    this.componentsSubject$.next(value);\n  }\n\n  @Input()\n  allowedDropListIds: string[] = [];\n\n  filterFormControl = new FormControl();\n  viewComponentGroups$: Observable<IViewComponentGroup[]>;\n\n  private componentsSubject$ = new ReplaySubject<IViewComponentDescriptor[]>(1);\n\n  constructor(public stringService: RxStringService) {}\n\n  ngOnInit(): void {\n    this.viewComponentGroups$ = combineLatest([\n      this.filterFormControl.valueChanges.pipe(debounceTime(200), startWith(null)),\n      this.componentsSubject$\n    ]).pipe(\n      map(([componentNameFilterText, viewComponentDescriptors]) =>\n        flow(\n          (descriptors: IViewComponentDescriptor[]) => groupBy(descriptors, (component) => component.group),\n          (groupsByName): IViewComponentGroup[] =>\n            _map(groupsByName, (components, groupName) => ({\n              name: groupName,\n              components: sortBy(components, (component) =>\n                isFinite(component.index) ? component.index : component.name\n              )\n            })),\n          (groups) =>\n            sortBy(groups, (group) => {\n              if (group.name === RX_VIEW_DESIGNER.stencilGroups.basicComponents.label) {\n                return '1';\n              } else if (group.name === RX_VIEW_DESIGNER.stencilGroups.recordEditorInputs.label) {\n                return '2';\n              } else {\n                return '3' + lowerCase(group.name);\n              }\n            }),\n          (groups) =>\n            componentNameFilterText\n              ? groups\n                  .map((group) => ({\n                    ...group,\n                    components: group.components.filter((component) =>\n                      this.stringService.caseInsensitiveSearch(component.name, componentNameFilterText)\n                    )\n                  }))\n                  .filter((group) => group.components.length)\n              : groups\n        )(viewComponentDescriptors)\n      )\n    );\n  }\n\n  getViewComponentDragData(descriptor: IViewComponentDescriptor): IViewComponentDragData {\n    return {\n      draggedViewComponentDescriptor: descriptor\n    };\n  }\n\n  trackByNameFn<T extends { name: string }>(index, item: T): string {\n    return item.name;\n  }\n\n  ngOnDestroy(): void {\n    this.componentsSubject$.complete();\n  }\n}\n","<div class=\"search-field-container\">\n  <adapt-rx-search\n    [formControl]=\"filterFormControl\"\n    rx-id=\"stencil-search-field\"\n    placeholder=\"Search\"\n  ></adapt-rx-search>\n</div>\n\n<adapt-accordion [config]=\"{ multiselect: true, tabs: [] }\">\n  <adapt-accordion-tab\n    *ngFor=\"let viewComponentsGroup of viewComponentGroups$ | async; trackBy: trackByNameFn\"\n    [title]=\"viewComponentsGroup.name\"\n    [attr.rx-id]=\"stringService.toRxId(viewComponentsGroup.name)\"\n    [isOpen]=\"true\"\n  >\n    <div\n      class=\"group-items-container\"\n      cdkDropList\n      cdkDropListSortingDisabled\n      [cdkDropListConnectedTo]=\"allowedDropListIds\"\n    >\n      <div\n        *ngFor=\"let viewComponent of viewComponentsGroup.components; trackBy: trackByNameFn\"\n        [attr.rx-id]=\"viewComponent.type\"\n        class=\"group-item\"\n        cdkDrag\n        [cdkDragData]=\"getViewComponentDragData(viewComponent)\"\n      >\n        <div class=\"group-item-inner\">\n          <span class=\"item-image d-icon-{{ viewComponent.icon || 'wall' }}\"></span>\n\n          <span class=\"item-name\" title=\"{{ viewComponent.name }}\">\n            {{ viewComponent.name }}\n          </span>\n        </div>\n      </div>\n    </div>\n  </adapt-accordion-tab>\n</adapt-accordion>\n"]}