{"version":3,"file":"record-grid-config.interface.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/record-grid/runtime/types/record-grid-config.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { Observable } from 'rxjs';\nimport { ToolbarConfig } from '@bmc-ux/adapt-table';\n\nimport { IDataPageResult, RxEvaluatedExpression } from '@helix/platform/shared/api';\nimport { IRecordDefinition } from '@helix/platform/record/api';\nimport { IRecordGridFilterData, IRowDataItem } from '@helix/platform/view/api';\n\nimport { IRecordGridColumn } from './record-grid-column.types';\nimport { IRxRecordGridFilter } from '../../common/types/record-grid-filter.types';\nimport { RowSelectionMode } from './row-selection-mode.enum';\nimport { IRecordGridActionButton } from './record-grid-action-button.interface';\nimport { IRecordGridPredefinedFilterPreset } from './record-grid-predefined-filter-preset.interface';\nimport { IRecordGridDataPageParams } from './record-grid-data-page-params.interface';\nimport { IViewPresetSelectorApi } from '../../../view-preset-selector/runtime/view-preset-selector-api.interface';\nimport { IGridViewColumnProperties, IGridViewPresetProperties } from '../../common/types/record-grid.types';\n\nexport interface IRecordGridConfig {\n  actionButtons?: IRecordGridActionButton[];\n  rowActionButtons?: IRecordGridActionButton[];\n  lastActionRow?: IRowDataItem;\n  associatedRecordId?: RxEvaluatedExpression<string>;\n  associatedRecordNodeSide?: string;\n  associationDefinitionName?: string;\n  associatedRoleName?: RxEvaluatedExpression<string>;\n  bordered?: RxEvaluatedExpression<boolean>;\n  cardLayoutWidth?: string | number;\n  columns?: IRecordGridColumn[];\n  defaultFilterPreset?: string | IRecordGridFilterData;\n  emptyStateLabelText?: string;\n  emptyStateWithFilterLabelText?: string;\n  enableColumnSelection?: boolean;\n  enableFiltering?: RxEvaluatedExpression<boolean>;\n  expandable?: boolean;\n  requiredFilters?: RxEvaluatedExpression<number>;\n  getDataForHiddenColumns?: RxEvaluatedExpression<boolean>;\n  enableFilterPresets?: RxEvaluatedExpression<boolean>;\n  enableRowSelection?: RowSelectionMode;\n  filterExpression?: RxEvaluatedExpression<string>;\n  filters?: string;\n  filterTagsLimit?: number;\n  getData?: (queryParams: IRecordGridDataPageParams) => Observable<IDataPageResult>;\n  getRecordDefinition?: () => Observable<IRecordDefinition>;\n  guid?: string;\n  recordDefinitionName?: string;\n  recordGridFilters?: IRxRecordGridFilter[];\n  recordIdField?: string;\n  searchFieldPlaceholderText?: string;\n  showDataForAllLocales?: RxEvaluatedExpression<boolean>;\n  striped?: RxEvaluatedExpression<boolean>;\n  styles?: string;\n  predefinedFilterPresets?: IRecordGridPredefinedFilterPreset[];\n  useExternalFiltering?: boolean;\n  expandGroups?: boolean;\n  toolbarConfig?: ToolbarConfig;\n  viewPresetSelector?: RxEvaluatedExpression<IViewPresetSelectorApi>;\n  viewPresets?: IGridViewPresetConfigData[];\n  virtualScroll?: boolean;\n}\n\nexport interface IGridViewPresetConfigData extends IGridViewPresetProperties {\n  columnViewPresets: IGridViewColumnProperties[];\n  recordGridFilters: IRxRecordGridFilter[];\n}\n"]}