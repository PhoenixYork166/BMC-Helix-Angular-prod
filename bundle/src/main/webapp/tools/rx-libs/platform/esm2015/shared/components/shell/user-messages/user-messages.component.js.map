{"version":3,"file":"user-messages.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/shared/components/shell/user-messages/user-messages.component.ts","../../../../../../../../libs/platform/shared/components/shell/user-messages/user-messages.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, ElementRef, OnDestroy, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { RX_USER_MESSAGE } from './user-message.constants';\nimport { RxUserMessageService } from './user-message.service';\nimport { Subscription } from 'rxjs';\nimport { IRxActiveMessage, IRxMessage } from './user-message.interfaces';\nimport { AdaptModalService } from '@bmc-ux/adapt-angular';\nimport { RxUserMessageModalComponent } from './user-message-modal.component';\nimport { noop } from 'lodash';\n\n@Component({\n  selector: 'rx-user-messages',\n  templateUrl: './user-messages.component.html',\n  styleUrls: ['user-messages.scss']\n})\nexport class RxUserMessagesComponent implements OnDestroy, OnInit {\n  @ViewChild('scrollableNotifications', { static: true }) scrollableNotifications: ElementRef;\n\n  private subscription = new Subscription();\n  loadingInProgress = false;\n  activeMessage = {} as IRxActiveMessage;\n  RX_USER_MESSAGE = RX_USER_MESSAGE;\n\n  constructor(\n    private adaptModalService: AdaptModalService,\n    private rxUserMessageService: RxUserMessageService,\n    private renderer: Renderer2\n  ) {\n    this.activeMessage.count = 0;\n    this.activeMessage.list = [];\n  }\n\n  ngOnInit(): void {\n    this.subscription.add(\n      this.rxUserMessageService.messageFetched$.subscribe(() => {\n        const scrollPosition = this.scrollableNotifications\n          ? this.renderer.selectRootElement(this.scrollableNotifications.nativeElement).scrollTop\n          : null;\n\n        if (!scrollPosition || this.loadingInProgress) {\n          this.activeMessage = this.rxUserMessageService.userMessageModel.messages.active;\n          this.loadingInProgress = false;\n        }\n      })\n    );\n\n    this.rxUserMessageService.launchMessagePolling();\n  }\n\n  getMoreMessages(event): void {\n    this.loadingInProgress = true;\n    this.subscription.add(this.rxUserMessageService.getMessages(RX_USER_MESSAGE.messageTypes.active, true).subscribe());\n    event.stopPropagation();\n  }\n\n  dismissMessage(message?: IRxMessage): void {\n    this.rxUserMessageService.dismissNotification(message);\n  }\n\n  viewAllMessages(): Promise<boolean | string> {\n    return this.adaptModalService\n      .open({\n        content: RxUserMessageModalComponent,\n        data: {},\n        size: 'lg'\n      })\n      .catch(noop);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"rx-container\">\n  <div class=\"title-section default-border d-flex\">\n    <div class=\"title d-inline\">{{ RX_USER_MESSAGE.title | translate }}</div>\n    <div class=\"buttons-wrapper ml-auto\">\n      <button\n        type=\"button\"\n        adapt-button\n        btn-type=\"tertiary\"\n        size=\"small\"\n        (click)=\"viewAllMessages()\"\n        rx-id=\"view-all-messages\"\n      >\n        {{ RX_USER_MESSAGE.showAll | translate }}\n      </button>\n\n      <button\n        type=\"button\"\n        adapt-button\n        btn-type=\"tertiary\"\n        size=\"small\"\n        *ngIf=\"activeMessage.count\"\n        (click)=\"dismissMessage()\"\n        rx-id=\"dismiss-message\"\n      >\n        {{ RX_USER_MESSAGE.dismissAll | translate }}\n      </button>\n    </div>\n  </div>\n\n  <div class=\"empty-holder\" *ngIf=\"activeMessage.count === 0\">\n    {{ RX_USER_MESSAGE.noActiveMessage | translate }}\n  </div>\n\n  <div class=\"active-messages\" *ngIf=\"activeMessage.count\" #scrollableNotifications>\n    <div\n      class=\"item default-border\"\n      *ngFor=\"let message of activeMessage.list\"\n      [ngClass]=\"{ 'item-dismiss': message.dismissInProgress }\"\n    >\n      <div class=\"item-content-section\">\n        <div class=\"item-content-inner-section d-flex align-items-center\">\n          <div class=\"item-icon-section d-icon-bell_o\"></div>\n          <div class=\"item-content-subject font-weight-bold\">{{ message['20000'] }}</div>\n          <div class=\"item-dismiss-section ml-auto\">\n            <button\n              *ngIf=\"!message.dismissInProgress\"\n              [attr.aria-label]=\"RX_USER_MESSAGE.dismissMessage | translate\"\n              (click)=\"dismissMessage(message)\"\n              class=\"close\"\n              rx-id=\"x-button\"\n              type=\"button\"\n            ></button>\n\n            <div class=\"item-dismiss-preloader\">\n              <div class=\"d-preloader d-icon-circle_25_o\" *ngIf=\"message.dismissInProgress\"></div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"item-content-text text-break\" [innerHTML]=\"message['20001']\"></div>\n        <div class=\"item-content-date\">\n          {{ message['6'] | date: 'medium' }}\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"content-load-more\" *ngIf=\"loadingInProgress || activeMessage.count > activeMessage.list.length\">\n    <button\n      type=\"button\"\n      *ngIf=\"!loadingInProgress\"\n      adapt-button\n      btn-type=\"tertiary\"\n      size=\"small\"\n      (click)=\"getMoreMessages($event)\"\n      rx-id=\"show-more\"\n    >\n      {{ RX_USER_MESSAGE.loadMore | translate }}\n    </button>\n\n    <div class=\"d-preloader d-icon-circle_25_o\" *ngIf=\"loadingInProgress\"></div>\n  </div>\n</div>\n"]}