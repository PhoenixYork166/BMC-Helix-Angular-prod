{"version":3,"file":"view-designer-breadcrumbs.reducer.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/designer/+state/view-designer-breadcrumbs.reducer.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AACnC,OAAO,EAAE,aAAa,EAAE,EAAE,EAAE,MAAM,aAAa,CAAC;AAEhD,OAAO,KAAK,mBAAmB,MAAM,yBAAyB,CAAC;AAC/D,OAAO,KAAK,qBAAqB,MAAM,0BAA0B,CAAC;AAQlE,MAAM,UAAU,eAAe;IAC7B,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,MAAM,CAAC,MAAM,OAAO,GAAG,aAAa,CAClC,eAAe,EAAE,EAEjB,EAAE,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,eAAe,CAAC,EAEzD,EAAE,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,eAAe,CAAC,EAE5D,EAAE,CAAC,qBAAqB,CAAC,cAAc,EAAE,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;IAClE,uCAAY,KAAK,KAAE,CAAC,IAAI,CAAC,EAAE,KAAK,IAAG;AACrC,CAAC,CAAC,EAEF,EAAE,CAAC,qBAAqB,CAAC,iBAAiB,EAAE,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;IAC/D,IAAI,QAAQ,GAAG,KAAK,CAAC;IAErB,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE;QAC1C,QAAQ,GAAG,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;KAC/B;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC,CACH,CAAC;AAEF,MAAM,UAAU,8BAA8B,CAAC,KAAK,EAAE,MAAM;IAC1D,OAAO,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAChC,CAAC","sourcesContent":["import { omit, has } from 'lodash';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as ViewDesignerActions from './view-designer.actions';\nimport * as ViewComponentsActions from './view-component.actions';\n\ntype BreadcrumbLabel = string;\n\nexport interface IViewDesignerBreadcrumbsState {\n  [guid: string]: BreadcrumbLabel;\n}\n\nexport function getInitialState(): IViewDesignerBreadcrumbsState {\n  return {};\n}\n\nexport const reducer = createReducer<IViewDesignerBreadcrumbsState>(\n  getInitialState(),\n\n  on(ViewDesignerActions.initViewDesigner, getInitialState),\n\n  on(ViewDesignerActions.destroyViewDesigner, getInitialState),\n\n  on(ViewComponentsActions.setBreadcrumbs, (state, { guid, label }) => {\n    return { ...state, [guid]: label };\n  }),\n\n  on(ViewComponentsActions.componentsRemoved, (state, { guids }) => {\n    let newState = state;\n\n    if (guids.some((guid) => has(state, guid))) {\n      newState = omit(state, guids);\n    }\n\n    return newState;\n  })\n);\n\nexport function viewDesignerBreadcrumbsReducer(state, action) {\n  return reducer(state, action);\n}\n"]}