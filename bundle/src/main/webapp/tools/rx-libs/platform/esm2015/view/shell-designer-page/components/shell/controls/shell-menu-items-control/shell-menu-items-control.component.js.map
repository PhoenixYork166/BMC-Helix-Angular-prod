{"version":3,"file":"shell-menu-items-control.component.js","sourceRoot":"","sources":["../../../../../../../../../../libs/platform/view/shell-designer-page/components/shell/controls/shell-menu-items-control/shell-menu-items-control.component.ts","../../../../../../../../../../libs/platform/view/shell-designer-page/components/shell/controls/shell-menu-items-control/shell-menu-items-control.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAE3D,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AAEpD,OAAO,EAAE,mBAAmB,EAAE,MAAM,mCAAmC,CAAC;AAGxE,OAAO,EAAE,sBAAsB,EAAE,MAAM,wBAAwB,CAAC;;;;;AAMhE,MAAM,OAAO,gCACX,SAAQ,mBAAqD;IAsB7D,YAAsB,QAAkB,EAAU,sBAA8C;QAC9F,KAAK,CAAC,QAAQ,CAAC,CAAC;QADI,aAAQ,GAAR,QAAQ,CAAU;QAAU,2BAAsB,GAAtB,sBAAsB,CAAwB;QAdhG,mBAAc,GAAG,YAAY,CAAC;QAE9B,2BAAsB,GAAG;YACvB,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,WAAW;YACvC,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,cAAc;YAChD,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,cAAc;SAChD,CAAC;QAEF,yBAAoB,GAAG;YACrB,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,YAAY;YAC1C,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,kBAAkB;YACrD,CAAC,QAAQ,CAAC,OAAO,CAAC,wBAAwB,CAAC,EAAE,6BAA6B;SAC3E,CAAC;IAIF,CAAC;IAED,IAAI,CAAC,QAAwB;QAC3B,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,MAAM,CAAC,QAAwB;QAC7B,IAAI,CAAC,sBAAsB;aACxB,OAAO,CAAC,iDAAiD,CAAC;aAC1D,IAAI,CAAC,CAAC,WAAoB,EAAE,EAAE;YAC7B,IAAI,WAAW,EAAE;gBACf,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACtD;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY,CAAC,QAAwB;QACnC,OAAO,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;IACxE,CAAC;IAED,WAAW,CAAC,KAAa,EAAE,QAAwB;QACjD,OAAO,QAAQ,CAAC,IAAI,CAAC;IACvB,CAAC;;6HA/CU,gCAAgC;iHAAhC,gCAAgC,oJCb7C,ulDA8CA;2FDjCa,gCAAgC;kBAJ5C,SAAS;mBAAC;oBACT,QAAQ,EAAE,6BAA6B;oBACvC,WAAW,EAAE,2CAA2C;iBACzD;oIAKC,OAAO;sBADN,KAAK;gBAIN,UAAU;sBADT,KAAK","sourcesContent":["import { Component, Injector, Input } from '@angular/core';\nimport { IShellMenuItemsWidgetConfig } from './shell-menu-items-control.types';\nimport { RX_SHELL } from '@helix/platform/view/api';\nimport { IShellMenuItem } from '../../shell-design.types';\nimport { InspectorWidgetBase } from '@helix/platform/shared/components';\nimport { IFormWidgetComponent, IPlainObject } from '@helix/platform/shared/api';\nimport { RxShellDesignModel } from '../../shell-design.model';\nimport { RxUtilityModalsService } from '@helix/platform/ui-kit';\n\n@Component({\n  selector: 'rx-shell-menu-items-control',\n  templateUrl: './shell-menu-items-control.component.html'\n})\nexport class RxShellMenuItemsControlComponent\n  extends InspectorWidgetBase<IPlainObject, RxShellDesignModel>\n  implements IFormWidgetComponent {\n  @Input()\n  options: IShellMenuItemsWidgetConfig;\n\n  @Input()\n  isDisabled: boolean;\n\n  menuGroupLabel = 'Menu group';\n\n  menuItemTypeToLabelMap = {\n    [RX_SHELL.navBar.menuItem]: 'Menu item',\n    [RX_SHELL.navBar.menuGroup]: this.menuGroupLabel,\n    [RX_SHELL.navBar.userMenu]: this.menuGroupLabel\n  };\n\n  actionNameToLabelMap = {\n    [RX_SHELL.actions.launchURL]: 'Launch URL',\n    [RX_SHELL.actions.navigateToView]: 'Navigate to view',\n    [RX_SHELL.actions.navigateToSmartReporting]: 'Navigate to Smart Reporting'\n  };\n\n  constructor(protected injector: Injector, private rxUtilityModalsService: RxUtilityModalsService) {\n    super(injector);\n  }\n\n  edit(menuItem: IShellMenuItem): void {\n    this.designerItemModel.selectMenuItem(menuItem.guid);\n  }\n\n  remove(menuItem: IShellMenuItem): void {\n    this.rxUtilityModalsService\n      .confirm('Are you sure you want to delete this menu item?')\n      .then((isConfirmed: boolean) => {\n        if (isConfirmed) {\n          this.designerItemModel.removeMenuItem(menuItem.guid);\n        }\n      });\n  }\n\n  canBeRemoved(menuItem: IShellMenuItem): boolean {\n    return menuItem.type !== RX_SHELL.navBar.userMenu && !this.isDisabled;\n  }\n\n  trackByGuid(index: number, menuItem: IShellMenuItem): string {\n    return menuItem.guid;\n  }\n}\n","<ng-container *ngIf=\"this.designerItemModel.menuItems$ | async as menuItems\">\n  <p *ngIf=\"menuItems.length === 0\">\n    No menu items have been defined. Drag and drop menu groups or menu items onto the canvas to define the menu.\n  </p>\n\n  <div *ngFor=\"let item of menuItems; trackBy: trackByGuid\">\n    <ng-container *ngTemplateOutlet=\"itemTpl; context: { $implicit: item }\"></ng-container>\n\n    <div class=\"ml-2\" *ngFor=\"let child of item.children; trackBy: trackByGuid\">\n      <ng-container *ngTemplateOutlet=\"itemTpl; context: { $implicit: child }\"></ng-container>\n    </div>\n  </div>\n</ng-container>\n\n<ng-template #itemTpl let-item>\n  <div class=\"border px-2 py-1 mb-2 d-flex align-items-start\">\n    <div class=\"mr-auto\">\n      <div class=\"font-weight-bold\">{{ item.data.menuItemName || item.data.menuGroupName }}</div>\n      <span class=\"text-secondary\">{{ menuItemTypeToLabelMap[item.type] }}</span>\n      <span class=\"text-secondary\" *ngIf=\"item.data.actionName\">\n        ({{ actionNameToLabelMap[item.data.actionName] }})</span\n      >\n    </div>\n\n    <button\n      class=\"d-icon-left-pencil p-1\"\n      adapt-button\n      btn-type=\"tertiary\"\n      size=\"small\"\n      type=\"button\"\n      rx-id=\"edit-button\"\n      (click)=\"edit(item)\"\n    ></button>\n\n    <button\n      class=\"d-icon-left-cross_adapt p-1\"\n      adapt-button\n      btn-type=\"tertiary\"\n      size=\"small\"\n      type=\"button\"\n      rx-id=\"remove-button\"\n      *ngIf=\"canBeRemoved(item)\"\n      (click)=\"remove(item)\"\n    ></button>\n  </div>\n</ng-template>\n"]}