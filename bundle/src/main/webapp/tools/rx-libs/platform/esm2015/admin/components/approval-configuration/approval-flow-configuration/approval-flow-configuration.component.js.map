{"version":3,"file":"approval-flow-configuration.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/admin/components/approval-configuration/approval-flow-configuration/approval-flow-configuration.component.ts","../../../../../../../../libs/platform/admin/components/approval-configuration/approval-flow-configuration/approval-flow-configuration.component.html"],"names":[],"mappings":"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","sourcesContent":["import { moveItemInArray } from '@angular/cdk/drag-drop';\nimport { CdkDragDrop } from '@angular/cdk/drag-drop/';\nimport { AfterViewInit, Component, ErrorHandler, Injector, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AdaptPopoverDirective, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { ExpressionOperatorGroup, IFunctionalRoleDescriptor, RxNotificationService } from '@helix/platform/shared/api';\nimport {\n  IDefinitionPickerComponentOptions,\n  IExpressionEditorPropertyChange,\n  IExpressionFormControlOptions,\n  RxDefinitionPickerType,\n  RxExpressionEditorService\n} from '@helix/platform/shared/components';\nimport { IDialogApi, RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { OpenViewActionModalSize } from '@helix/platform/view/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  cloneDeep,\n  filter as _filter,\n  find,\n  flatten,\n  flow,\n  forEach,\n  get,\n  map as _map,\n  omit,\n  reject,\n  remove,\n  some,\n  sortBy,\n  trim\n} from 'lodash';\nimport { forkJoin, Observable, of, ReplaySubject } from 'rxjs';\nimport {\n  catchError,\n  defaultIfEmpty,\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n  takeUntil,\n  tap\n} from 'rxjs/operators';\nimport { RX_APPROVAL_CONFIGURATION } from '../approval-configuration.constant';\nimport { RxApprovalConfigurationService } from '../approval-configuration.service';\nimport {\n  IApprovalFlow,\n  IApprovalFlowGroup,\n  IApprovalFlowGroupConfigurationResponse,\n  IApprovalFlowOutcomeAction,\n  IFlowGroupRequestResponse\n} from '../approval-configuration.types';\nimport { RxApprovalExpressionConfigurator } from '../approval-expression-configurator';\nimport { FlowApproversSelectorComponent } from '../flow-approvers-selector/flow-approvers-selector.component';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'rx-approval-flow-configuration',\n  templateUrl: './approval-flow-configuration.component.html',\n  styleUrls: ['./approval-flow-configuration.component.scss']\n})\nexport class ApprovalFlowConfigurationComponent implements OnInit, OnDestroy, AfterViewInit {\n  @Input()\n  registeredRecordDefinitionName: string;\n\n  @ViewChild(AdaptPopoverDirective)\n  adaptPopoverDirective: AdaptPopoverDirective;\n\n  @ViewChild('approvalFlowsForm')\n  approvalFlowsForm: NgForm;\n\n  flowGroupName: string;\n  flowGroupNewName: string;\n  allAvailableFlowGroups: IApprovalFlowGroup[] = [];\n  selectedFlowGroup: IApprovalFlowGroup;\n  flowQualificationOptions: IExpressionFormControlOptions;\n  qualifyApproversOptions: IExpressionFormControlOptions;\n\n  signingCriteriaList: RxSelectOption[] = [\n    {\n      value: RX_APPROVAL_CONFIGURATION.approverCriteria.oneMust,\n      displayValue: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.configuration.if-multiple-approvers.types.one-must-approve'\n      )\n    },\n    {\n      value: RX_APPROVAL_CONFIGURATION.approverCriteria.allMust,\n      displayValue: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.configuration.if-multiple-approvers.types.all-must-approve'\n      )\n    },\n    {\n      value: RX_APPROVAL_CONFIGURATION.approverCriteria.percentage,\n      displayValue: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.configuration.if-multiple-approvers.types.percentage-must-approve'\n      )\n    }\n  ];\n\n  signingCriteriaPercentageList: number[] = RX_APPROVAL_CONFIGURATION.signingCriteriaPercentageList;\n\n  processOnApproveOptions: IDefinitionPickerComponentOptions = {\n    label: this.translateService.instant(\n      'com.bmc.arsys.rx.client.approval.configuration.flow.outcome.on-approve-label'\n    ),\n    definitionType: RxDefinitionPickerType.PublicProcess\n  };\n\n  processOnRejectOptions: IDefinitionPickerComponentOptions = {\n    label: this.translateService.instant(\n      'com.bmc.arsys.rx.client.approval.configuration.flow.outcome.on-rejection-label'\n    ),\n    definitionType: RxDefinitionPickerType.PublicProcess\n  };\n\n  processOnErrorOptions: IDefinitionPickerComponentOptions = {\n    label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.flow.outcome.on-error-label'),\n    definitionType: RxDefinitionPickerType.PublicProcess\n  };\n\n  protected expressionConfigurator: RxApprovalExpressionConfigurator;\n  private existingFlowGroupNames: string[] = [];\n  private dialogApi: IDialogApi;\n  private isSaveInProgress = false;\n  private availableFunctionalRoles: IFunctionalRoleDescriptor[];\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private deletedFlowGroups: string[] = [];\n\n  constructor(\n    private injector: Injector,\n    private errorHandler: ErrorHandler,\n    private rxModalService: RxModalService,\n    private translateService: TranslateService,\n    private rxNotificationService: RxNotificationService,\n    private rxExpressionEditorService: RxExpressionEditorService,\n    private rxApprovalConfigurationService: RxApprovalConfigurationService\n  ) {\n    this.selectedFlowGroup = this.getEmptyFlowGroup();\n  }\n\n  private getEmptyFlowGroup(): IApprovalFlowGroup {\n    return {\n      flowGroup: null,\n      approvalFlowConfigurationList: []\n    };\n  }\n\n  ngOnInit() {\n    this.expressionConfigurator = new RxApprovalExpressionConfigurator(this.injector);\n\n    this.expressionConfigurator.configureForProperty({\n      propertyPath: RX_APPROVAL_CONFIGURATION.flowQualificationProperty,\n      dataDictionary$: this.expressionConfigurator.approvalExpressionDataDictionary(\n        this.registeredRecordDefinitionName\n      ),\n      operators: this.expressionConfigurator.getOperatorRowsByGroup(ExpressionOperatorGroup.All)\n    });\n\n    this.flowQualificationOptions = {\n      label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.qualification'),\n      dataDictionary$: this.expressionConfigurator.getDataDictionary(\n        RX_APPROVAL_CONFIGURATION.flowQualificationProperty\n      ),\n      operators: this.expressionConfigurator.getOperators(RX_APPROVAL_CONFIGURATION.flowQualificationProperty),\n      isRequired: true\n    };\n\n    this.expressionConfigurator.configureForProperty({\n      propertyPath: RX_APPROVAL_CONFIGURATION.approverQualificationProperty,\n      dataDictionary$: this.expressionConfigurator.getCtmPeopleFormFields(this.registeredRecordDefinitionName),\n      operators: this.expressionConfigurator.getOperatorRowsByGroup(ExpressionOperatorGroup.All)\n    });\n\n    this.qualifyApproversOptions = {\n      label: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.configuration.flow.general.qualify-approvers.label'\n      ),\n      dataDictionary$: this.expressionConfigurator.getDataDictionary(\n        RX_APPROVAL_CONFIGURATION.approverQualificationProperty\n      ),\n      operators: this.expressionConfigurator.getOperators(RX_APPROVAL_CONFIGURATION.approverQualificationProperty)\n    };\n\n    this.rxApprovalConfigurationService\n      .getFunctionalRoles()\n      .pipe(\n        tap((functionalRoles: IFunctionalRoleDescriptor[]) => {\n          this.availableFunctionalRoles = functionalRoles;\n        }),\n        switchMap(() => this.getFlowGroups())\n      )\n      .subscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.approvalFlowsForm.form.valueChanges.pipe(distinctUntilChanged(), takeUntil(this.destroyed$)).subscribe(() => {\n      if (this.approvalFlowsForm.dirty) {\n        this.selectedFlowGroup.isDirty = true;\n      }\n    });\n  }\n\n  private getFlowGroups(): Observable<IApprovalFlowGroupConfigurationResponse> {\n    this.existingFlowGroupNames = [];\n    this.deletedFlowGroups = [];\n\n    return this.rxApprovalConfigurationService.getApprovalFlowConfigurations(this.registeredRecordDefinitionName).pipe(\n      tap((flowConfigurationResponse: IApprovalFlowGroupConfigurationResponse) => {\n        this.allAvailableFlowGroups = flowConfigurationResponse.approvalFlowGroupConfigurations;\n\n        if (this.allAvailableFlowGroups?.length) {\n          this.allAvailableFlowGroups = this.allAvailableFlowGroups\n            .map((flowGroup: IApprovalFlowGroup) => {\n              flowGroup.isDirty = false;\n              flowGroup.hasError = false;\n              this.existingFlowGroupNames.push(flowGroup.flowGroup);\n\n              flowGroup.approvalFlowConfigurationList = this.refactorFlowsResponse(\n                flowGroup.approvalFlowConfigurationList\n              );\n\n              return flowGroup;\n            })\n            .sort((a, b) => a.flowGroup.localeCompare(b.flowGroup));\n\n          this.selectedFlowGroup = this.selectedFlowGroup.flowGroup\n            ? find(this.allAvailableFlowGroups, { flowGroup: this.selectedFlowGroup.flowGroup })\n            : this.allAvailableFlowGroups[0];\n\n          this.collapseAll();\n          this.isSaveInProgress = false;\n        }\n      })\n    );\n  }\n\n  preparePayload(flowGroup: IApprovalFlowGroup): IApprovalFlowGroup {\n    const flowGroupConfiguration: IApprovalFlowGroup = cloneDeep(omit(flowGroup, ['isDirty', 'hasError']));\n\n    flowGroupConfiguration.approvalFlowConfigurationList = _map(\n      flowGroupConfiguration.approvalFlowConfigurationList,\n      (approvalFlow: IApprovalFlow) => {\n        approvalFlow = {\n          ...omit(approvalFlow, [\n            'isOpen',\n            'hasError',\n            'approversDisplayValue',\n            'isFieldIdentifyingApprover',\n            'signingCriteriaList'\n          ])\n        };\n\n        approvalFlow.approvalFlowOutcomeMappingList = reject(\n          approvalFlow.approvalFlowOutcomeMappingList,\n          (outcome: IApprovalFlowOutcomeAction) => !outcome.processName\n        );\n\n        approvalFlow.flowName = trim(approvalFlow.flowName);\n        approvalFlow.signingCriteria = approvalFlow.signingCriteria[0].value;\n\n        approvalFlow.approvalOverridePercentage =\n          approvalFlow.signingCriteria === RX_APPROVAL_CONFIGURATION.approverCriteria.percentage\n            ? approvalFlow.approvalOverridePercentage[0]\n            : 0;\n\n        if (\n          approvalFlow.approvers &&\n          !this.rxApprovalConfigurationService.isFieldIdentifyingApprover(approvalFlow.approvers)\n        ) {\n          approvalFlow.approvers = '\\\\\"' + approvalFlow.approvers + '\\\\\"';\n        }\n\n        approvalFlow.approvers = approvalFlow.approvers || RX_APPROVAL_CONFIGURATION.noApproverProvided;\n\n        return approvalFlow;\n      }\n    );\n\n    return flowGroupConfiguration;\n  }\n\n  canSave(): boolean {\n    return !this.isSaveInProgress && ((this.areFlowGroupsValid() && this.isDirty()) || !!this.deletedFlowGroups.length);\n  }\n\n  isDirty(): boolean {\n    return (\n      some(this.allAvailableFlowGroups, (flowGroup: IApprovalFlowGroup) => flowGroup.isDirty) ||\n      Boolean(this.dialogApi?.isDirty()) ||\n      !!this.deletedFlowGroups.length\n    );\n  }\n\n  areFlowGroupsValid(): boolean {\n    return !some(this.allAvailableFlowGroups, this.isInvalidFlowGroup);\n  }\n\n  private isInvalidFlowGroup(flowGroup: IApprovalFlowGroup): boolean {\n    return (\n      !flowGroup.approvalFlowConfigurationList.length ||\n      some(\n        flowGroup.approvalFlowConfigurationList,\n        (flow: IApprovalFlow) =>\n          !flow.flowName || !flow.qualification || (flow.isLevelUp && flow.levels < 1) || flow.hasError\n      )\n    );\n  }\n\n  hasFlowGroups(): string {\n    return this.selectedFlowGroup.flowGroup;\n  }\n\n  private isInvalidFlow(flow: IApprovalFlow): boolean {\n    return (\n      !flow.flowName ||\n      !flow.qualification ||\n      (flow.isLevelUp && flow.levels < 1) ||\n      (!flow.isLevelUp && !flow.approvers && !flow.approverQualification)\n    );\n  }\n\n  markInvalidSelectedGroupAndFlows(): void {\n    this.selectedFlowGroup.approvalFlowConfigurationList.forEach((approvalFlow: IApprovalFlow) => {\n      approvalFlow.hasError = this.isInvalidFlow(approvalFlow);\n    });\n\n    this.selectedFlowGroup.hasError =\n      !this.selectedFlowGroup.approvalFlowConfigurationList.length ||\n      some(this.selectedFlowGroup.approvalFlowConfigurationList, (flow) => flow.hasError);\n  }\n\n  markInvalidGroupsAndFlows(): void {\n    this.allAvailableFlowGroups.forEach((flowGroup: IApprovalFlowGroup) => {\n      flowGroup.approvalFlowConfigurationList.forEach((approvalFlow: IApprovalFlow) => {\n        approvalFlow.hasError = this.isInvalidFlow(approvalFlow);\n      });\n\n      flowGroup.hasError =\n        !flowGroup.approvalFlowConfigurationList.length ||\n        some(flowGroup.approvalFlowConfigurationList, (flow) => flow.hasError);\n    });\n  }\n\n  saveFlowGroups(): void {\n    this.approvalFlowsForm.form.markAsPristine();\n\n    let createFailedCount = 0;\n    let createSuccessCount = 0;\n    let updateFailedCount = 0;\n    let updateSuccessCount = 0;\n    let deleteFailedCount = 0;\n    let deleteSuccessCount = 0;\n\n    const updateRequests$: Observable<IFlowGroupRequestResponse>[] = [];\n    const createRequests$: Observable<IFlowGroupRequestResponse>[] = [];\n\n    const deleteRequests$: Observable<IFlowGroupRequestResponse>[] = this.deletedFlowGroups.map(\n      (flowGroupName: string) =>\n        this.rxApprovalConfigurationService\n          .deleteApprovalFlowGroup(flowGroupName, this.registeredRecordDefinitionName)\n          .pipe(\n            map(() => <IFlowGroupRequestResponse>{ status: 'Success' }),\n            catchError((error: HttpErrorResponse) =>\n              of(<IFlowGroupRequestResponse>{\n                status: 'Failed',\n                error\n              })\n            )\n          )\n    );\n\n    this.allAvailableFlowGroups.forEach((flowGroup: IApprovalFlowGroup) => {\n      if (flowGroup.isDirty) {\n        this.isSaveInProgress = true;\n\n        const flowGroupConfiguration: IApprovalFlowGroup = this.preparePayload(flowGroup);\n\n        if (this.isExistingFlowGroup(flowGroupConfiguration.flowGroup) || flowGroupConfiguration.flowGroupOldName) {\n          updateRequests$.push(\n            this.rxApprovalConfigurationService\n              .updateApprovalFlowGroup(\n                flowGroupConfiguration.flowGroupOldName || flowGroupConfiguration.flowGroup,\n                omit(flowGroupConfiguration, 'flowGroupOldName'),\n                this.registeredRecordDefinitionName\n              )\n              .pipe(\n                map(\n                  () =>\n                    <IFlowGroupRequestResponse>{\n                      status: 'Success'\n                    }\n                ),\n                catchError((error: HttpErrorResponse) =>\n                  of(<IFlowGroupRequestResponse>{\n                    status: 'Failed',\n                    error\n                  })\n                )\n              )\n          );\n        } else {\n          createRequests$.push(\n            this.rxApprovalConfigurationService\n              .saveApprovalFlowGroup(flowGroupConfiguration, this.registeredRecordDefinitionName)\n              .pipe(\n                switchMap(() =>\n                  this.rxApprovalConfigurationService.getApprovalFlowGroup(\n                    this.registeredRecordDefinitionName,\n                    flowGroupConfiguration.flowGroup\n                  )\n                ),\n                tap((createdFlowGroup: IApprovalFlowGroup) => {\n                  this.existingFlowGroupNames.push(createdFlowGroup.flowGroup);\n\n                  const flowGroup = find(this.allAvailableFlowGroups, { flowGroup: createdFlowGroup.flowGroup });\n\n                  flowGroup.isDirty = false;\n\n                  forEach(flowGroup.approvalFlowConfigurationList, (flow: IApprovalFlow, flowIndex: number) => {\n                    flow.approvalProcessId =\n                      createdFlowGroup.approvalFlowConfigurationList[flowIndex].approvalProcessId;\n                    flow.guid = createdFlowGroup.approvalFlowConfigurationList[flowIndex].guid;\n                  });\n                }),\n                map(\n                  () =>\n                    <IFlowGroupRequestResponse>{\n                      status: 'Success'\n                    }\n                ),\n                catchError((error: HttpErrorResponse) =>\n                  of(<IFlowGroupRequestResponse>{\n                    status: 'Failed',\n                    error\n                  })\n                )\n              )\n          );\n        }\n      }\n    });\n\n    forkJoin({\n      createRequests: forkJoin(createRequests$).pipe(defaultIfEmpty([])),\n      updateRequests: forkJoin(updateRequests$).pipe(defaultIfEmpty([])),\n      deleteRequests: forkJoin(deleteRequests$).pipe(defaultIfEmpty([]))\n    })\n      .pipe(\n        tap((response: any) => {\n          let message = '';\n\n          const failedResponses: IFlowGroupRequestResponse[] = flatten(\n            _map(response, (requestResponses) => _filter(requestResponses, { status: 'Failed' }))\n          );\n\n          createFailedCount = _filter(response.createRequests, { status: 'Failed' }).length;\n          createSuccessCount = _filter(response.createRequests, { status: 'Success' }).length;\n          updateFailedCount = _filter(response.updateRequests, { status: 'Failed' }).length;\n          updateSuccessCount = _filter(response.updateRequests, { status: 'Success' }).length;\n          deleteFailedCount = _filter(response.deleteRequests, { status: 'Failed' }).length;\n          deleteSuccessCount = _filter(response.deleteRequests, { status: 'Success' }).length;\n\n          if (createSuccessCount) {\n            message += `${this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.configuration.message.flowgroup.created',\n              { count: createSuccessCount }\n            )}\\n`;\n          }\n\n          if (updateSuccessCount) {\n            message += `${this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.configuration.message.flowgroup.updated',\n              { count: updateSuccessCount }\n            )}\\n`;\n          }\n\n          if (deleteSuccessCount) {\n            message += `${this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.configuration.message.flowgroup.deleted',\n              { count: deleteSuccessCount }\n            )}\\n`;\n          }\n\n          if (createFailedCount) {\n            message += `${this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.configuration.message.flowgroup.create-failed',\n              { count: createFailedCount }\n            )}\\n`;\n          }\n\n          if (updateFailedCount) {\n            message += `${this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.configuration.message.flowgroup.update-failed',\n              { count: updateFailedCount }\n            )}\\n`;\n          }\n\n          if (deleteFailedCount) {\n            message += `${this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.configuration.message.flowgroup.delete-failed',\n              { count: deleteFailedCount }\n            )}\\n`;\n          }\n\n          if (createFailedCount || updateFailedCount || deleteFailedCount) {\n            this.rxNotificationService.addWarningMessage(message);\n          } else {\n            this.rxNotificationService.addSuccessMessage(message);\n          }\n\n          forEach(failedResponses, (requestResponse: IFlowGroupRequestResponse) => {\n            this.errorHandler.handleError(requestResponse.error);\n          });\n        }),\n        filter(() => !(createFailedCount || updateFailedCount || deleteFailedCount)),\n        switchMap(() => this.getFlowGroups())\n      )\n      .subscribe({\n        complete: () => {\n          this.isSaveInProgress = false;\n        }\n      });\n  }\n\n  onKeyDownNew(event: KeyboardEvent): void {\n    if (event.code === 'Enter' && !this.isAddNewFlowGroupButtonDisabled()) {\n      this.addNewFlowGroup();\n    }\n  }\n\n  addNewFlowGroup(): void {\n    this.markInvalidSelectedGroupAndFlows();\n    this.adaptPopoverDirective.close();\n\n    this.allAvailableFlowGroups.push({\n      flowGroup: trim(this.flowGroupName),\n      hasError: true,\n      approvalFlowConfigurationList: []\n    });\n\n    this.allAvailableFlowGroups.sort((a, b) => a.flowGroup.localeCompare(b.flowGroup));\n    this.selectedFlowGroup = find(this.allAvailableFlowGroups, { flowGroup: trim(this.flowGroupName) });\n    this.flowGroupName = null;\n  }\n\n  onKeyDownRename(event: KeyboardEvent, context): void {\n    if (event.code === 'Enter') {\n      this.renameFlowGroup(context);\n    }\n  }\n\n  renameFlowGroup(context: any): void {\n    if (!this.isExistingFlowGroup()) {\n      this.selectedFlowGroup.flowGroup = trim(this.flowGroupNewName);\n\n      context.close();\n    } else {\n      this.rxModalService\n        .confirm({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n          modalStyle: RX_MODAL.modalStyles.warning,\n          message: this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.configuration.message.flowgroup.updatingGroupName'\n          )\n        })\n        .then((result: boolean) => {\n          if (result) {\n            this.selectedFlowGroup.isDirty = true;\n            this.selectedFlowGroup.flowGroupOldName = this.selectedFlowGroup.flowGroup;\n            this.selectedFlowGroup.flowGroup = trim(this.flowGroupNewName);\n          }\n        });\n    }\n  }\n\n  deleteFlowGroup(): void {\n    if (!this.isExistingFlowGroup()) {\n      this.rxModalService\n        .confirm({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n          modalStyle: RX_MODAL.modalStyles.warning,\n          message: this.translateService.instant('com.bmc.arsys.rx.client.common.unsaved-data.message')\n        })\n        .then((result: boolean) => {\n          if (result) {\n            remove(this.allAvailableFlowGroups, { flowGroup: this.selectedFlowGroup.flowGroup });\n            this.setEmptyFlowGroup();\n          }\n        });\n    } else {\n      this.rxModalService\n        .confirm({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n          modalStyle: RX_MODAL.modalStyles.warning,\n          message: this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.configuration.message.flowgroup.confirm'\n          )\n        })\n        .then((result: boolean) => {\n          if (result) {\n            this.deletedFlowGroups.push(this.selectedFlowGroup.flowGroup);\n            remove(this.allAvailableFlowGroups, { flowGroup: this.selectedFlowGroup.flowGroup });\n            this.setEmptyFlowGroup();\n          }\n        });\n    }\n  }\n\n  private setEmptyFlowGroup(): void {\n    this.selectedFlowGroup = this.getEmptyFlowGroup();\n  }\n\n  onFlowQualificationEvent(flowIndex: number): void {\n    this.selectFlowQualificationExpression(flowIndex);\n  }\n\n  private selectFlowQualificationExpression(flowIndex: number): void {\n    this.rxExpressionEditorService\n      .openEditor(\n        {\n          property: {\n            path: RX_APPROVAL_CONFIGURATION.flowQualificationProperty,\n            value: this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].qualification,\n            label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.qualification')\n          },\n          expressionConfigurator: this.expressionConfigurator,\n          legend: [\n            {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'),\n              icon: 'd-icon-dollar'\n            },\n            {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.field.label'),\n              icon: 'd-icon-field_text'\n            }\n          ]\n        },\n        (dialogApi: IDialogApi) => (this.dialogApi = dialogApi)\n      )\n      .subscribe((expression: IExpressionEditorPropertyChange) => {\n        this.dialogApi = null;\n        this.approvalFlowsForm.form.markAsDirty();\n        this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].qualification = expression.value;\n      });\n  }\n\n  onApproverQualificationEvent(flowIndex: number): void {\n    this.selectApproverQualificationExpression(flowIndex);\n  }\n\n  private selectApproverQualificationExpression(flowIndex: number): void {\n    this.rxExpressionEditorService\n      .openEditor(\n        {\n          property: {\n            path: RX_APPROVAL_CONFIGURATION.approverQualificationProperty,\n            value: this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].approverQualification,\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.configuration.flow.general.qualify-approvers.label'\n            )\n          },\n          expressionConfigurator: this.expressionConfigurator,\n          legend: [\n            {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'),\n              icon: 'd-icon-dollar'\n            },\n            {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.field.label'),\n              icon: 'd-icon-field_text'\n            }\n          ]\n        },\n        (dialogApi: IDialogApi) => (this.dialogApi = dialogApi)\n      )\n      .subscribe((expression: IExpressionEditorPropertyChange) => {\n        this.dialogApi = null;\n        this.approvalFlowsForm.form.markAsDirty();\n        this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].approverQualification = expression.value;\n        this.updateFlowErrorState(flowIndex);\n      });\n  }\n\n  private updateFlowErrorState(flowIndex: number): void {\n    this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].hasError = Boolean(\n      !this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].approverQualification &&\n        !this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].approvers\n    );\n\n    this.selectedFlowGroup.hasError = some(\n      this.selectedFlowGroup.approvalFlowConfigurationList,\n      (flow) => flow.hasError\n    );\n  }\n\n  private getFlowEmptyOutcomes(): IApprovalFlowOutcomeAction[] {\n    return [\n      {\n        processName: null,\n        action: '2',\n        statusOutcome: '1'\n      },\n      {\n        processName: null,\n        action: '2',\n        statusOutcome: '2'\n      },\n      {\n        processName: null,\n        action: '2',\n        statusOutcome: '6'\n      }\n    ];\n  }\n\n  private getEmptyGeneralApprovalFlow(): IApprovalFlow {\n    return {\n      isOpen: true,\n      hasError: false,\n      approvalProcessId: null,\n      flowName: '',\n      processType: null,\n      qualification: null,\n      formattedQualification: null,\n      precedence: this.selectedFlowGroup.approvalFlowConfigurationList.length,\n      signingCriteria: this.getCriteria(),\n      signingCriteriaList: this.getFlowCriteriaList(),\n      approvalOverridePercentage: 50,\n      isLevelUp: false,\n      levels: null,\n      approvers: '',\n      applyApproverExclusion: true,\n      approversDisplayValue: '',\n      approverQualification: null,\n      approvalFlowOutcomeMappingList: this.getFlowEmptyOutcomes()\n    };\n  }\n\n  getCriteria(value?: number): RxSelectOption[] {\n    return [find(this.getFlowCriteriaList(), { value: value || RX_APPROVAL_CONFIGURATION.approverCriteria.oneMust })];\n  }\n\n  getFlowCriteriaList(): RxSelectOption[] {\n    return cloneDeep(this.signingCriteriaList);\n  }\n\n  addNewGeneralFlow(): void {\n    this.collapseAll();\n\n    setTimeout(() => {\n      this.selectedFlowGroup.approvalFlowConfigurationList.push(this.getEmptyGeneralApprovalFlow());\n    });\n  }\n\n  addNewLevelUpFlow(): void {\n    this.collapseAll();\n\n    setTimeout(() => {\n      this.selectedFlowGroup.approvalFlowConfigurationList.push({\n        ...this.getEmptyGeneralApprovalFlow(),\n        isLevelUp: true\n      });\n    });\n  }\n\n  selectFlowGroup(flowGroupName: string): void {\n    this.selectedFlowGroup = find(this.allAvailableFlowGroups, { flowGroup: flowGroupName });\n\n    if (!this.selectedFlowGroup.isDirty) {\n      this.approvalFlowsForm.form.markAsPristine();\n    }\n\n    this.collapseAll();\n    this.markInvalidGroupsAndFlows();\n  }\n\n  onSelectedFlowDrop(event: CdkDragDrop<IApprovalFlow>): void {\n    this.moveFlow(event.previousIndex, event.currentIndex);\n  }\n\n  moveFlow(previousIndex: number, currentIndex: number): void {\n    moveItemInArray(this.selectedFlowGroup.approvalFlowConfigurationList, previousIndex, currentIndex);\n    this.resetFlowPrecedences();\n  }\n\n  moveFlowUp(currentIndex: number) {\n    moveItemInArray(this.selectedFlowGroup.approvalFlowConfigurationList, currentIndex, currentIndex - 1);\n    this.resetFlowPrecedences();\n  }\n\n  moveFlowDown(currentIndex: number) {\n    moveItemInArray(this.selectedFlowGroup.approvalFlowConfigurationList, currentIndex, currentIndex + 1);\n    this.resetFlowPrecedences();\n  }\n\n  removeFlow(index: number): void {\n    this.selectedFlowGroup.approvalFlowConfigurationList.splice(index, 1);\n    this.markInvalidSelectedGroupAndFlows();\n    this.resetFlowPrecedences();\n  }\n\n  resetFlowPrecedences(): void {\n    this.approvalFlowsForm.form.markAsDirty();\n\n    this.selectedFlowGroup.approvalFlowConfigurationList = this.selectedFlowGroup.approvalFlowConfigurationList.map(\n      (currentFlow: IApprovalFlow, index: number) => {\n        currentFlow.precedence = index;\n\n        return currentFlow;\n      }\n    );\n  }\n\n  optionFormatter(option: RxSelectOption): string {\n    return option.displayValue;\n  }\n\n  private refactorFlowsResponse(approvalFlows: IApprovalFlow[]): IApprovalFlow[] {\n    return flow(\n      (flows) => sortBy(flows, 'precedence'),\n      (flows) =>\n        _map(flows, (currentFlow: IApprovalFlow) => {\n          currentFlow.isOpen = false;\n          const flowOutcomeMappings = cloneDeep(currentFlow.approvalFlowOutcomeMappingList);\n\n          currentFlow.approvalFlowOutcomeMappingList[0] =\n            find(flowOutcomeMappings, { statusOutcome: '1' }) || this.getFlowEmptyOutcomes()[0];\n\n          currentFlow.approvalFlowOutcomeMappingList[1] =\n            find(flowOutcomeMappings, { statusOutcome: '2' }) || this.getFlowEmptyOutcomes()[1];\n\n          currentFlow.approvalFlowOutcomeMappingList[2] =\n            find(flowOutcomeMappings, { statusOutcome: '6' }) || this.getFlowEmptyOutcomes()[2];\n\n          if (!currentFlow.approvers || currentFlow.approvers === RX_APPROVAL_CONFIGURATION.noApproverProvided) {\n            currentFlow.approvers = '';\n          }\n\n          currentFlow.approvers = currentFlow.approvers.replace(/\\\\\"/g, '');\n          currentFlow.approversDisplayValue = this.getApproversDisplay(currentFlow);\n          currentFlow.signingCriteriaList = this.getFlowCriteriaList();\n          currentFlow.approvalOverridePercentage = [currentFlow.approvalOverridePercentage];\n\n          currentFlow.signingCriteria = [\n            {\n              value: currentFlow.signingCriteria,\n              displayValue: this.getCriteria(currentFlow.signingCriteria)[0].displayValue\n            }\n          ];\n\n          return currentFlow;\n        })\n    )(approvalFlows);\n  }\n\n  isExistingFlowGroup(flowGroupName: string = null): boolean {\n    return this.existingFlowGroupNames.includes(flowGroupName || this.selectedFlowGroup.flowGroup);\n  }\n\n  isRenameFlowGroupButtonDisabled(): boolean {\n    return (\n      trim(this.flowGroupNewName) !== this.selectedFlowGroup.flowGroup &&\n      some(\n        this.allAvailableFlowGroups,\n        (flowGroup) => flowGroup.flowGroup.toLowerCase() === trim(this.flowGroupNewName.toLowerCase())\n      )\n    );\n  }\n\n  isAddNewFlowGroupButtonDisabled(): boolean {\n    return (\n      !this.flowGroupName ||\n      some(\n        this.allAvailableFlowGroups,\n        (flowGroup) => flowGroup.flowGroup.toLowerCase() === trim(this.flowGroupName.toLowerCase())\n      )\n    );\n  }\n\n  expandAll(): void {\n    this.selectedFlowGroup.approvalFlowConfigurationList.forEach(\n      (approvalFlow: IApprovalFlow) => (approvalFlow.isOpen = true)\n    );\n  }\n\n  collapseAll(): void {\n    this.selectedFlowGroup.approvalFlowConfigurationList.forEach(\n      (approvalFlow: IApprovalFlow) => (approvalFlow.isOpen = false)\n    );\n  }\n\n  selectFlowApprovers(flowIndex: number): void {\n    this.rxModalService\n      .openModal({\n        title:\n          this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.configuration.flow.select-approvers-dialog.title'\n          ) +\n          ': ' +\n          this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].flowName,\n        data: {\n          registeredRecordDefinitionName: this.registeredRecordDefinitionName,\n          existingApprovers: this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].approvers,\n          isFieldIdentifyingApprover:\n            this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].isFieldIdentifyingApprover,\n          onApiReady: (dialogApi: IDialogApi) => {\n            this.dialogApi = dialogApi;\n          }\n        },\n        content: FlowApproversSelectorComponent,\n        size: OpenViewActionModalSize.Large as any\n      })\n      .then((result) => {\n        this.dialogApi = null;\n        this.approvalFlowsForm.form.markAsDirty();\n        this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].approvers = result.value;\n        this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].approversDisplayValue = result.displayValue;\n        this.manageApproverCriteriaOption(flowIndex);\n        this.updateFlowErrorState(flowIndex);\n        this.selectedFlowGroup.isDirty = true;\n      })\n      .catch(() => {\n        this.dialogApi = null;\n      });\n  }\n\n  manageApproverCriteriaOption(flowIndex): void {\n    if (\n      this.rxApprovalConfigurationService.isFieldIdentifyingApprover(\n        this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].approvers\n      )\n    ) {\n      this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].signingCriteria = this.getCriteria();\n\n      find(this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].signingCriteriaList, {\n        value: RX_APPROVAL_CONFIGURATION.approverCriteria.percentage\n      }).disabled = true;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  private getApproversDisplay(approvalFlow: IApprovalFlow): string {\n    const approvers = approvalFlow.approvers.split(RX_APPROVAL_CONFIGURATION.approverSeparator);\n\n    return _map(approvers, (approver) => {\n      if (this.rxApprovalConfigurationService.isFieldIdentifyingApprover(approvalFlow.approvers)) {\n        approvalFlow.isFieldIdentifyingApprover = true;\n        approver = this.rxApprovalConfigurationService.getFieldIdentifyingApprover(approver);\n      } else if (this.rxApprovalConfigurationService.isFunctionalRole(approver)) {\n        approver = get(\n          find(this.availableFunctionalRoles, {\n            id: this.rxApprovalConfigurationService.getFunctionalRoleGuid(approver)\n          }),\n          'name'\n        );\n      } else if (this.rxApprovalConfigurationService.isApproverPeople(approver)) {\n        approver = this.rxApprovalConfigurationService.getApproverUser(approver);\n      } else {\n        approver = this.rxApprovalConfigurationService.getLastLabel(approver);\n      }\n\n      return approver;\n    })\n      .filter(Boolean)\n      .join(', ');\n  }\n\n  getFlowName(flow: IApprovalFlow): string {\n    return (\n      flow.flowName ||\n      (flow.isLevelUp\n        ? `[${this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.configuration.flow-group.level-flow.new.default-value'\n          )}]`\n        : `[${this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.configuration.flow-group.general-flow.new.default-value'\n          )}]`)\n    );\n  }\n}\n","<div class=\"row d-flex h-100\">\n  <div class=\"col-3 border-right d-flex flex-column h-100\">\n    <h5>\n      {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.available-flow-groups.title' | translate }}\n    </h5>\n\n    <button\n      type=\"button\"\n      adapt-button\n      btn-type=\"tertiary\"\n      rx-id=\"new-flow-group-button\"\n      class=\"d-icon-plus_circle px-0 align-self-start\"\n      [adaptPopover]=\"newFlowGroupTemplate\"\n      maxWidth=\"365\"\n      autoClose=\"outside\"\n      appendToBody=\"true\"\n      placement=\"bottom-left\"\n      fallbackPlacement=\"bottom\"\n    >\n      {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.new.title' | translate }}\n    </button>\n\n    <div class=\"available-list border p-3 flex-fill\">\n      <div class=\"vertical-center\" *ngIf=\"!allAvailableFlowGroups.length\">\n        <adapt-empty-state\n          [type]=\"'list'\"\n          label=\"{{ 'com.bmc.arsys.rx.client.empty-state.no-items-available.label' | translate }}\"\n        ></adapt-empty-state>\n      </div>\n\n      <button\n        type=\"button\"\n        adapt-button\n        btn-type=\"tertiary\"\n        rx-id=\"rename-flow-group-button\"\n        class=\"d-icon-field_text px-0 pt-0\"\n        [disabled]=\"!selectedFlowGroup.flowGroup\"\n        [adaptPopover]=\"renameFlowGroupTemplate\"\n        maxWidth=\"365\"\n        autoClose=\"outside\"\n        appendToBody=\"true\"\n        placement=\"bottom-left\"\n        fallbackPlacement=\"bottom\"\n        (shown)=\"flowGroupNewName = selectedFlowGroup.flowGroup\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.rename.label' | translate }}\n      </button>\n\n      <button\n        type=\"button\"\n        adapt-button\n        btn-type=\"tertiary\"\n        rx-id=\"delete-flow-group-button\"\n        class=\"d-icon-trash pt-0\"\n        [disabled]=\"!selectedFlowGroup.flowGroup\"\n        (click)=\"deleteFlowGroup()\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.delete.label' | translate }}\n      </button>\n\n      <adapt-rx-radiobutton-group\n        class=\"d-block form-group\"\n        rx-id=\"available-flow-groups\"\n        (ngModelChange)=\"selectFlowGroup($event)\"\n        [(ngModel)]=\"selectedFlowGroup.flowGroup\"\n      >\n        <div *ngFor=\"let group of allAvailableFlowGroups\" class=\"d-flex align-items-center\">\n          <adapt-rx-radiobutton\n            class=\"mb-0 mt-0 wrap-word\"\n            [value]=\"group.flowGroup\"\n            [label]=\"group.flowGroup\"\n          ></adapt-rx-radiobutton>\n\n          <div class=\"ml-1 mb-1 d-icon-exclamation_triangle text-danger\" *ngIf=\"group.hasError\"></div>\n        </div>\n      </adapt-rx-radiobutton-group>\n    </div>\n  </div>\n\n  <div class=\"col-9 d-flex flex-column h-100\">\n    <div class=\"d-flex flex-column h-100\">\n      <h5>\n        {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.selected-flow-group.title' | translate }}:\n        {{ selectedFlowGroup.flowGroup || ('com.bmc.arsys.rx.client.common.none.label' | translate) }}\n      </h5>\n\n      <div class=\"row\">\n        <div class=\"col-12 col-sm-6\">\n          <div class=\"d-inline-flex align-items-center\">\n            <button\n              type=\"button\"\n              adapt-button\n              btn-type=\"tertiary\"\n              rx-id=\"new-general-flow-button\"\n              class=\"d-icon-plus_circle px-0\"\n              [disabled]=\"!selectedFlowGroup.flowGroup\"\n              (click)=\"addNewGeneralFlow()\"\n            >\n              {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.general.new.label' | translate }}\n            </button>\n            <span\n              class=\"d-icon-right-question_circle_o ml-1 mr-4\"\n              adaptPopover=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.flow.general.info' | translate }}\"\n              placement=\"right\"\n              appendToBody=\"true\"\n            >\n            </span>\n          </div>\n\n          <div class=\"d-inline-flex align-items-center\">\n            <button\n              type=\"button\"\n              adapt-button\n              btn-type=\"tertiary\"\n              rx-id=\"new-level-flow-button\"\n              class=\"d-icon-plus_circle px-0\"\n              [disabled]=\"!selectedFlowGroup.flowGroup\"\n              (click)=\"addNewLevelUpFlow()\"\n            >\n              {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.level.new.label' | translate }}\n            </button>\n\n            <span\n              class=\"d-icon-right-question_circle_o ml-1\"\n              adaptPopover=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.flow.level.info' | translate }}\"\n              placement=\"right\"\n              appendToBody=\"true\"\n            >\n            </span>\n          </div>\n        </div>\n\n        <div class=\"col-12 col-sm-6 text-right\">\n          <button\n            type=\"button\"\n            adapt-button\n            btn-type=\"tertiary\"\n            rx-id=\"expand-button\"\n            (click)=\"expandAll()\"\n            *ngIf=\"selectedFlowGroup.approvalFlowConfigurationList.length\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.expand-all.label' | translate }}\n          </button>\n\n          <button\n            type=\"button\"\n            adapt-button\n            btn-type=\"tertiary\"\n            rx-id=\"collapse-button\"\n            (click)=\"collapseAll()\"\n            *ngIf=\"selectedFlowGroup.approvalFlowConfigurationList.length\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.collapse-all.label' | translate }}\n          </button>\n        </div>\n      </div>\n\n      <adapt-alert\n        *ngIf=\"selectedFlowGroup.flowGroup && !selectedFlowGroup.approvalFlowConfigurationList.length\"\n        [config]=\"{\n          variant: 'warning',\n          dismissible: false,\n          content: 'com.bmc.arsys.rx.client.approval.configuration.flow.group-has-no-flows-error.message' | translate\n        }\"\n      ></adapt-alert>\n\n      <div class=\"vertical-center\">\n        <adapt-empty-state\n          *ngIf=\"!selectedFlowGroup.flowGroup && !selectedFlowGroup.approvalFlowConfigurationList.length\"\n          [type]=\"'rules'\"\n          label=\"{{ 'com.bmc.arsys.rx.client.empty-state.no-items-available.label' | translate }}\"\n        ></adapt-empty-state>\n      </div>\n\n      <div\n        class=\"designer-modal-accordion-wrapper flex-fill pt-0\"\n        [ngClass]=\"{ 'border-top': selectedFlowGroup.approvalFlowConfigurationList.length }\"\n        cdkDropList\n        (cdkDropListDropped)=\"onSelectedFlowDrop($event)\"\n      >\n        <form #approvalFlowsForm=\"ngForm\">\n          <adapt-accordion [multiselect]=\"true\" class=\"flex-fill\">\n            <div\n              *ngFor=\"\n                let flow of selectedFlowGroup.approvalFlowConfigurationList;\n                let index = index;\n                let first = first;\n                let last = last\n              \"\n              class=\"designer-modal-accordion-content\"\n              cdkDrag\n              cdkDragLockAxis=\"y\"\n              [cdkDragData]=\"flow\"\n            >\n              <div class=\"d-icon-left-dots designer-modal-drag-handle\" cdkDragHandle></div>\n\n              <adapt-accordion-tab\n                class=\"d-block\"\n                [isOpen]=\"flow.isOpen\"\n                (open)=\"flow.isOpen = true\"\n                (close)=\"flow.isOpen = false; markInvalidSelectedGroupAndFlows()\"\n              >\n                <div class=\"card-title-text w-100\">\n                  <div class=\"designer-modal-card-title-content\">\n                    <div class=\"left-header-block\">\n                      <div class=\"rx-ellipsis\" [title]=\"getFlowName(flow)\" rx-id=\"card-title\">\n                        {{ getFlowName(flow) }}\n                      </div>\n                      <div class=\"d-icon-exclamation_triangle text-danger\" *ngIf=\"flow.hasError\"></div>\n                    </div>\n\n                    <div class=\"right-header-block\">\n                      <div class=\"designer-modal-card-title-index-buttons\">\n                        <button\n                          class=\"d-icon-angle_up px-3 py-1\"\n                          adapt-button\n                          btn-type=\"tertiary\"\n                          size=\"small\"\n                          type=\"button\"\n                          [disabled]=\"first\"\n                          (click)=\"$event.stopPropagation(); moveFlowUp(index)\"\n                        ></button>\n\n                        <button\n                          class=\"d-icon-angle_down px-3 py-1\"\n                          adapt-button\n                          btn-type=\"tertiary\"\n                          size=\"small\"\n                          type=\"button\"\n                          [disabled]=\"last\"\n                          (click)=\"$event.stopPropagation(); moveFlowDown(index)\"\n                        ></button>\n                      </div>\n\n                      <button\n                        class=\"d-icon-left-cross_adapt p-1 pr-4\"\n                        adapt-button\n                        size=\"small\"\n                        type=\"button\"\n                        (click)=\"removeFlow(index)\"\n                      >\n                        {{ 'com.bmc.arsys.rx.client.common.remove.label' | translate }}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n                <adapt-alert\n                  *ngIf=\"flow.hasError\"\n                  [config]=\"{\n                    variant: 'warning',\n                    dismissible: false,\n                    content:\n                      'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.not-selected.message' | translate\n                  }\"\n                ></adapt-alert>\n\n                <adapt-rx-textfield\n                  class=\"form-group d-block\"\n                  rx-id=\"flow-name\"\n                  label=\"{{\n                    'com.bmc.arsys.rx.client.approval.configuration.flow.general.flow-name.label' | translate\n                  }}\"\n                  required=\"true\"\n                  [(ngModel)]=\"flow.flowName\"\n                  [autofocus]=\"true\"\n                  name=\"{{ 'flowName' + index }}\"\n                  maxlength=\"254\"\n                >\n                </adapt-rx-textfield>\n\n                <adapt-rx-counter\n                  *ngIf=\"flow.isLevelUp\"\n                  adaptMin=\"1\"\n                  [min]=\"1\"\n                  class=\"form-group d-block\"\n                  rx-id=\"flow-levels\"\n                  label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.levels' | translate }}\"\n                  required=\"true\"\n                  [(ngModel)]=\"flow.levels\"\n                  name=\"{{ 'levels' + index }}\"\n                >\n                </adapt-rx-counter>\n\n                <rx-expression-form-control\n                  class=\"d-block\"\n                  [ngClass]=\"{ 'form-group': !flow.isLevelUp }\"\n                  rx-id=\"flow-qualification\"\n                  [options]=\"flowQualificationOptions\"\n                  [(ngModel)]=\"flow.qualification\"\n                  (events)=\"onFlowQualificationEvent(index)\"\n                  name=\"{{ 'flowQualification' + index }}\"\n                ></rx-expression-form-control>\n\n                <div *ngIf=\"!flow.isLevelUp\" rx-id=\"flow-approvers\" class=\"form-group\">\n                  <label class=\"form-control-label\">\n                    {{ 'com.bmc.arsys.rx.client.approval.configuration.approvers' | translate }}\n\n                    <button\n                      type=\"button\"\n                      adapt-button\n                      class=\"d-icon-pencil px-1 ml-3 mb-1\"\n                      btn-type=\"tertiary\"\n                      rx-id=\"edit-button\"\n                      (click)=\"selectFlowApprovers(index)\"\n                    >\n                      {{ 'com.bmc.arsys.rx.client.common.edit.label' | translate }}\n                    </button>\n                  </label>\n\n                  <adapt-rx-checkbox\n                    *ngIf=\"!flow.isLevelUp\"\n                    class=\"checkbox-inline ml-4\"\n                    label=\"{{\n                      'com.bmc.arsys.rx.client.approval.configuration.apply-approver-exclusion.label' | translate\n                    }}\"\n                    [(ngModel)]=\"flow.applyApproverExclusion\"\n                    name=\"{{ 'applyApproverExclusion' + index }}\"\n                  >\n                  </adapt-rx-checkbox>\n                  <span\n                    class=\"d-icon-right-question_circle_o ml-1\"\n                    adaptPopover=\"{{\n                      'com.bmc.arsys.rx.client.approval.configuration.apply-approver-exclusion.tooltip' | translate\n                    }}\"\n                    placement=\"right\"\n                    appendToBody=\"true\"\n                  >\n                  </span>\n\n                  <div class=\"approver-list bg-secondary p-1\">\n                    {{ flow.approversDisplayValue }}\n                  </div>\n                </div>\n\n                <rx-expression-form-control\n                  *ngIf=\"!flow.isLevelUp\"\n                  class=\"d-block form-group\"\n                  rx-id=\"approver-qualification\"\n                  [options]=\"qualifyApproversOptions\"\n                  [(ngModel)]=\"flow.approverQualification\"\n                  (events)=\"onApproverQualificationEvent(index)\"\n                  name=\"{{ 'approverQualification' + index }}\"\n                ></rx-expression-form-control>\n\n                <div class=\"row\">\n                  <div class=\"col-12 col-sm-6 form-group\">\n                    <adapt-rx-select\n                      *ngIf=\"!flow.isLevelUp\"\n                      class=\"d-block\"\n                      label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.if.multiple.approvers' | translate }}\"\n                      rx-id=\"signing-criteria\"\n                      [(ngModel)]=\"flow.signingCriteria\"\n                      [options]=\"flow.signingCriteriaList\"\n                      [optionFormatter]=\"optionFormatter\"\n                      name=\"{{ 'signingCriteria' + index }}\"\n                    >\n                    </adapt-rx-select>\n                  </div>\n\n                  <div class=\"col-12 col-sm-6 form-group\">\n                    <adapt-rx-select\n                      *ngIf=\"!flow.isLevelUp && flow.signingCriteria[0]?.value === 2\"\n                      class=\"d-block\"\n                      label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.value.of' | translate }}\"\n                      rx-id=\"signing-criteria-percentage\"\n                      [(ngModel)]=\"flow.approvalOverridePercentage\"\n                      [options]=\"signingCriteriaPercentageList\"\n                      name=\"{{ 'signingCriteriaPercentage' + index }}\"\n                    >\n                    </adapt-rx-select>\n                  </div>\n                </div>\n\n                <hr class=\"my-1\" />\n                <h6>{{ 'com.bmc.arsys.rx.client.approval.configuration.flow.outcome.label' | translate }}</h6>\n\n                <div class=\"row\" *ngIf=\"flow.isOpen\">\n                  <div class=\"col-12 col-sm-6 form-group\">\n                    <rx-definition-picker\n                      [options]=\"processOnApproveOptions\"\n                      [(ngModel)]=\"flow.approvalFlowOutcomeMappingList[0].processName\"\n                      rx-id=\"process-on-approval\"\n                      name=\"{{ 'processOnApproval' + index }}\"\n                    >\n                    </rx-definition-picker>\n                  </div>\n\n                  <div class=\"col-12 col-sm-6 form-group\">\n                    <rx-definition-picker\n                      [options]=\"processOnRejectOptions\"\n                      [(ngModel)]=\"flow.approvalFlowOutcomeMappingList[1].processName\"\n                      rx-id=\"process-on-rejection\"\n                      name=\"{{ 'processOnRejection' + index }}\"\n                    >\n                    </rx-definition-picker>\n                  </div>\n\n                  <div class=\"col-12 col-sm-6 form-group\">\n                    <rx-definition-picker\n                      [options]=\"processOnErrorOptions\"\n                      [(ngModel)]=\"flow.approvalFlowOutcomeMappingList[2].processName\"\n                      rx-id=\"process-on-error\"\n                      name=\"{{ 'processOnError' + index }}\"\n                    >\n                    </rx-definition-picker>\n                  </div>\n                </div>\n              </adapt-accordion-tab>\n            </div>\n          </adapt-accordion>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #newFlowGroupTemplate let-context=\"context\">\n  <div class=\"flow-group-template\">\n    <div class=\"text-center mb-3 font-weight-bold\">\n      {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.new.title' | translate }}\n    </div>\n\n    <adapt-rx-textfield\n      class=\"mb-1 d-block\"\n      rx-id=\"new-flow-button\"\n      label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.flow.flow-group-name.label' | translate }}\"\n      required=\"true\"\n      [(ngModel)]=\"flowGroupName\"\n      [autofocus]=\"true\"\n      (keydown)=\"onKeyDownNew($event)\"\n      maxlength=\"254\"\n    >\n    </adapt-rx-textfield>\n\n    <div class=\"text-danger\" *ngIf=\"flowGroupName && isAddNewFlowGroupButtonDisabled()\">\n      {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.flow-group-exists.warning' | translate }}\n    </div>\n\n    <div class=\"text-right mt-5\">\n      <button\n        type=\"button\"\n        adapt-button\n        btn-type=\"primary\"\n        rx-id=\"add-button\"\n        (click)=\"addNewFlowGroup()\"\n        [disabled]=\"isAddNewFlowGroupButtonDisabled()\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.add.label' | translate }}\n      </button>\n\n      <button\n        type=\"button\"\n        adapt-button\n        btn-type=\"secondary\"\n        rx-id=\"cancel-button\"\n        (click)=\"context.close()\"\n        class=\"ml-2\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n      </button>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #renameFlowGroupTemplate let-context=\"context\">\n  <div class=\"flow-group-template\">\n    <div class=\"text-center mb-3 font-weight-bold\">\n      {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.rename.title' | translate }}\n    </div>\n\n    <adapt-rx-textfield\n      class=\"mb-1 d-block\"\n      rx-id=\"rename-flow-button\"\n      label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.flow.flow-group-name.label' | translate }}\"\n      required=\"true\"\n      [(ngModel)]=\"flowGroupNewName\"\n      [autofocus]=\"true\"\n      (keydown)=\"onKeyDownRename($event, context)\"\n      maxlength=\"254\"\n    >\n    </adapt-rx-textfield>\n\n    <div class=\"text-danger\" *ngIf=\"flowGroupNewName && isRenameFlowGroupButtonDisabled()\">\n      {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.flow-group-exists.warning' | translate }}\n    </div>\n\n    <div class=\"text-right mt-5\">\n      <button\n        type=\"button\"\n        adapt-button\n        btn-type=\"primary\"\n        rx-id=\"rename-button\"\n        (click)=\"renameFlowGroup(context)\"\n        [disabled]=\"isRenameFlowGroupButtonDisabled()\"\n      >\n        {{ 'com.bmc.arsys.rx.client.approval.update.button.label' | translate }}\n      </button>\n    </div>\n  </div>\n</ng-template>\n"]}