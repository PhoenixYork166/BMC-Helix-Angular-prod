{"version":3,"file":"association.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/field-components/association/runtime/association.component.ts","../../../../../../../../../libs/platform/view/components/field-components/association/runtime/association.component.html"],"names":[],"mappings":"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","sourcesContent":["import { DatePipe } from '@angular/common';\nimport { AfterViewInit, Component, OnInit, ViewChild, HostBinding } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport {\n  castArray,\n  find,\n  forEach,\n  get,\n  head,\n  includes,\n  isNil,\n  isString,\n  isUndefined,\n  map as _map,\n  transform,\n  isEmpty,\n  isEqual,\n  every\n} from 'lodash';\nimport { combineLatest, EMPTY, Observable, of } from 'rxjs';\nimport {\n  delay,\n  distinctUntilChanged,\n  filter,\n  map,\n  skip,\n  startWith,\n  switchMap,\n  take,\n  takeUntil,\n  tap\n} from 'rxjs/operators';\nimport {\n  IAssociationDefinition,\n  RX_ASSOCIATION_DEFINITION,\n  RxAssociatedRecordNodeSide,\n  RxAssociationDefinitionService,\n  RxAssociationInstanceDataPageService\n} from '@helix/platform/association/api';\nimport {\n  IFieldDefinition,\n  IRecordDefinition,\n  IRecordInstance,\n  RX_RECORD_DEFINITION,\n  RxRecordDefinitionInheritanceDataPageService,\n  RxRecordInstanceDataPageService,\n  RxRecordInstanceUtilsService\n} from '@helix/platform/record/api';\nimport { IDataPageParams } from '@helix/platform/shared/api';\nimport {\n  IRxSelectWithPaginationOption,\n  IRxSelectWithPaginationOptionsPage,\n  RxSelectWithPaginationComponent\n} from '@helix/platform/shared/components';\nimport { BaseViewComponent, IViewComponent } from '@helix/platform/view/runtime';\n\nimport { RecordEditorState, RxAssociationManagerService } from '../../../record-editor';\nimport { IRecordEditorApi } from '../../../record-editor/runtime/record-editor.types';\nimport { RxAssociationEditingMode } from '../association.types';\nimport { IAssociationRecord, IRolesConfig, IRxAssociationConfig, IRxAssociationFilter } from './association.types';\nimport { IRecordPreviewCardConfig, IRecordPreviewCardField } from './record-preview-card/record-preview-card.types';\n\n@Component({\n  selector: 'rx-association',\n  templateUrl: './association.component.html',\n  styleUrls: ['./association.component.scss']\n})\nexport class RxAssociationComponent extends BaseViewComponent implements AfterViewInit, OnInit, IViewComponent {\n  @ViewChild(RxSelectWithPaginationComponent)\n  selectWithPaginationComponent: RxSelectWithPaginationComponent;\n\n  @HostBinding('class.rx-field-disabled')\n  isDisabled = false;\n\n  api = {\n    associate: (associations) => {\n      this.associationManager.addToPending(associations, this.extractRolesConfig());\n    }\n  };\n\n  areActionsAvailable: boolean;\n\n  config: Observable<IRxAssociationConfig>;\n\n  modelToViewValueAdapterFunc = this.modelToViewValueAdapter.bind(this);\n  optionLoaderFunc = this.getAssociationsOptionPage.bind(this);\n  viewToModelValueAdapterFunc = this.viewToModelValueAdapter.bind(this);\n\n  existingPreviewConfigurations = [];\n  pendingPreviewConfigurations = [];\n\n  private selectedOptions: IRxSelectWithPaginationOption[] = [];\n\n  pendingPageSize = 10;\n  currentPendingCount = 10;\n  totalPendingCount = 0;\n\n  associationCandidateRecordInstances = [];\n  fieldDefinition: IFieldDefinition;\n  fieldDefinitions = {};\n\n  associationDefinitionName: string;\n  associatedRecordNodeSide: RxAssociatedRecordNodeSide;\n  associationManager: RxAssociationManagerService;\n  editingMode: RxAssociationEditingMode;\n  fieldId: string = null;\n  fields: IRecordPreviewCardField[] = [];\n  inReadState = false;\n  permissionType: string;\n  label: string = null;\n  recordDefinition: IRecordDefinition = null;\n  recordDefinitionName: string = null;\n  recordInstance: IRecordInstance;\n  recordEditorApi: IRecordEditorApi;\n  state: RecordEditorState;\n  useDefaultRoles: boolean = null;\n  nodeARole: string = null;\n  nodeBRole: string = null;\n  previewRolesConfig: IRolesConfig;\n\n  private associationFilter: IRxAssociationFilter;\n  private associationFilterNodeSide: RxAssociatedRecordNodeSide;\n\n  formControl: FormControl = new FormControl('', null);\n\n  constructor(\n    private datePipe: DatePipe,\n    private rxAssociationDefinitionService: RxAssociationDefinitionService,\n    private rxAssociationInstanceDataPageService: RxAssociationInstanceDataPageService,\n    private rxRecordDefinitionInheritanceDataPageService: RxRecordDefinitionInheritanceDataPageService,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService,\n    private rxRecordInstanceUtilsService: RxRecordInstanceUtilsService\n  ) {\n    super();\n    this.isHidden = false;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    const config$ = this.config.pipe(\n      filter((config) => Boolean(config.api && config.recordDefinition)),\n      takeUntil(this.destroyed$)\n    );\n\n    config$.pipe(take(1)).subscribe((config) => {\n      this.onConfigInitialized(config);\n      this.onConfigUpdated(config);\n    });\n\n    config$.pipe(skip(1)).subscribe(this.onConfigUpdated.bind(this));\n\n    this.notifyPropertyChanged('api', this.api);\n\n    this.previewRolesConfig = this.extractRolesConfig();\n  }\n\n  ngAfterViewInit(): void {\n    if (this.editingMode === RxAssociationEditingMode.Dropdown) {\n      this.formControl.valueChanges\n        .pipe(distinctUntilChanged(), startWith(this.formControl.value as string), takeUntil(this.destroyed$))\n        .subscribe(() => {\n          this.updateSelectedOptions();\n        });\n    }\n  }\n\n  private onConfigInitialized(config: IRxAssociationConfig): void {\n    this.associationDefinitionName = config.associationDefinitionName;\n    this.associatedRecordNodeSide = config.associatedRecordNodeSide;\n    this.editingMode = config.editingMode || RxAssociationEditingMode.Views;\n    this.fieldId = config.fieldId;\n    this.fields = config.fields;\n    this.recordDefinition = config.recordDefinition;\n    this.recordDefinitionName = config.recordDefinitionName;\n    this.recordEditorApi = config.api;\n    this.state = config.state;\n    this.useDefaultRoles = config.useDefaultRoles;\n    this.nodeARole = config.nodeARole;\n    this.nodeBRole = config.nodeBRole;\n\n    if (this.fieldId) {\n      this.fieldDefinition = config.recordDefinition.fieldDefinitions.find(\n        (definition) => definition.id === Number(this.fieldId)\n      );\n    }\n  }\n\n  private onConfigUpdated(config: IRxAssociationConfig): void {\n    const inReadState: boolean = Boolean(config.inReadState);\n\n    const isDisabled: boolean =\n      Boolean(config.disabled) || this.permissionType === RX_RECORD_DEFINITION.fieldPermissionTypes.view;\n\n    let forceUpdatePreviewCardConfigState = false;\n\n    this.isHidden = Boolean(config.hidden);\n    this.areActionsAvailable = !inReadState && this.editingMode === RxAssociationEditingMode.Views;\n\n    if (this.isDisabled !== isDisabled) {\n      this.isDisabled = isDisabled;\n\n      forceUpdatePreviewCardConfigState = true;\n    }\n\n    if (this.inReadState !== inReadState) {\n      this.inReadState = inReadState;\n\n      forceUpdatePreviewCardConfigState = true;\n    }\n\n    if (forceUpdatePreviewCardConfigState && this.existingPreviewConfigurations.length) {\n      this.updatePreviewCardConfigState();\n    }\n\n    this.label = isUndefined(config.label) ? this.fieldDefinition.name ?? '' : config.label;\n\n    if (\n      this.selectWithPaginationComponent &&\n      this.associationFilter &&\n      get(config, 'associationFilter[0]') &&\n      this.associationFilter.recordInstanceId !== config.associationFilter[0].recordInstanceId\n    ) {\n      // Do not delete existing association until Record editor is ready.\n      // This is needed in case when e.g. one association view component\n      // is filtered by the value selected in the other association view component.\n      // If during initialization, the value in the second view component gets loaded\n      // faster than the value in the first one, the value in the second view component\n      // would be cleared after the first component's value is loaded.\n      if (this.recordEditorApi.isReady()) {\n        this.deleteAllExisting();\n      }\n\n      this.deleteAllPending();\n\n      this.selectWithPaginationComponent.resetLoadedOptions();\n\n      this.associationCandidateRecordInstances = [];\n\n      if (!this.associationFilterNodeSide) {\n        this.rxAssociationDefinitionService\n          .get(this.associationFilter.associationDefinitionName)\n          .pipe(\n            switchMap((associationDefinition: IAssociationDefinition) => {\n              if (associationDefinition.nodeAId === this.recordDefinitionName) {\n                this.associationFilterNodeSide = RxAssociatedRecordNodeSide.NodeA;\n              } else if (associationDefinition.nodeBId === this.recordDefinitionName) {\n                this.associationFilterNodeSide = RxAssociatedRecordNodeSide.NodeB;\n              } else {\n                return this.rxRecordDefinitionInheritanceDataPageService\n                  .get({ params: { recorddefinition: this.recordDefinitionName } })\n                  .pipe(\n                    tap((recordDefinitionInheritanceDataPage: any) => {\n                      const recordDefinitionAncestors = recordDefinitionInheritanceDataPage.data;\n\n                      if (includes(recordDefinitionAncestors, associationDefinition.nodeAId)) {\n                        this.associationFilterNodeSide = RxAssociatedRecordNodeSide.NodeA;\n                      } else if (includes(recordDefinitionAncestors, associationDefinition.nodeBId)) {\n                        this.associatedRecordNodeSide = RxAssociatedRecordNodeSide.NodeB;\n                      } else {\n                        throw new Error(\n                          'No matches for association definition node side within inheritance ancestors.'\n                        );\n                      }\n                    })\n                  );\n              }\n\n              return EMPTY;\n            })\n          )\n          .subscribe();\n      }\n    }\n\n    this.associationFilter = head(config.associationFilter);\n\n    if (config.recordInstance && this.recordInstance !== config.recordInstance) {\n      this.recordInstance = config.recordInstance;\n      this.isDisabled = true;\n\n      this.notifyPropertyChanged('isDisabled', this.isDisabled);\n      this.recordEditorApi.notifyComponentReady(this.guid, false);\n\n      this.associationManager = this.getAssociationManager();\n\n      this.associationManager\n        .initialize()\n        .pipe(\n          delay(0),\n          switchMap(() => this.associationManager.loadExistingAssociations()),\n          tap(() => {\n            this.isDisabled =\n              Boolean(config.disabled) || this.permissionType === RX_RECORD_DEFINITION.fieldPermissionTypes.view;\n\n            this.notifyPropertyChanged('isDisabled', this.isDisabled);\n\n            this.areActionsAvailable = !this.inReadState && this.editingMode === RxAssociationEditingMode.Views;\n\n            if (this.editingMode === RxAssociationEditingMode.Views) {\n              this.fieldDefinitions = transform(\n                this.fields,\n                (result, field: IRecordPreviewCardField) => {\n                  const fieldDefinition = find(this.associationManager.recordDefinition.fieldDefinitions, {\n                    id: Number(field.fieldId)\n                  });\n\n                  result[fieldDefinition.id] = fieldDefinition;\n                },\n                {}\n              );\n            }\n\n            this.associationManager.existing$.pipe(takeUntil(this.destroyed$)).subscribe((newValue) => {\n              this.onAssociationsChanged(newValue, 'existingPreviewConfigurations');\n              this.updateTotalExistingAssociationsCount();\n            });\n\n            this.associationManager.pending$.pipe(takeUntil(this.destroyed$)).subscribe((newValue) => {\n              this.onAssociationsChanged(newValue, 'pendingPreviewConfigurations');\n              this.totalPendingCount = this.pendingPreviewConfigurations.length;\n            });\n\n            combineLatest([this.associationManager.pending$, this.associationManager.existing$])\n              .pipe(take(1))\n              .subscribe(() => {\n                this.recordEditorApi.notifyComponentReady(this.guid, true);\n              });\n          })\n        )\n        .subscribe();\n    }\n  }\n\n  private getAssociationManager(): RxAssociationManagerService {\n    const fieldsIds = this.fieldId\n      ? [this.fieldId, RX_RECORD_DEFINITION.coreFieldIds.id]\n      : _map(this.fields, 'fieldId');\n\n    return this.recordEditorApi.getAssociationManager({\n      associationDefinitionName: this.associationDefinitionName,\n      associatedRecordNodeSide: this.associatedRecordNodeSide || RX_ASSOCIATION_DEFINITION.roles.second.value,\n      associatedRecordInstanceId: this.recordInstance.id,\n      recordDefinitionName: this.recordDefinitionName,\n      fieldIds: fieldsIds,\n      rolesConfig: this.extractRolesConfig()\n    });\n  }\n\n  private getAssociationsOptionPage(\n    startIndex: number,\n    pageSize: number,\n    searchQuery: string\n  ): Observable<IRxSelectWithPaginationOptionsPage> {\n    const params: IDataPageParams = {\n      pageSize: pageSize,\n      startIndex: startIndex,\n      recorddefinition: this.recordDefinitionName,\n      propertySelection: this.associationManager.getFieldIds()\n    };\n\n    let instanceDataPageService: RxAssociationInstanceDataPageService | RxRecordInstanceDataPageService;\n\n    if (this.associationFilter) {\n      if (this.associationFilter.recordInstanceId) {\n        params.associationDefinition = this.associationFilter.associationDefinitionName;\n        params.associatedRecordInstanceId = this.associationFilter.recordInstanceId;\n        params.nodeToQuery = this.associationFilterNodeSide;\n\n        instanceDataPageService = this.rxAssociationInstanceDataPageService;\n      }\n    } else {\n      params.sortBy = this.fieldId;\n\n      if (searchQuery) {\n        params.queryExpression = `('${this.fieldId}' LIKE \"%${this.rxRecordInstanceUtilsService.escapeTextWildcards(\n          searchQuery\n        )}%\")`;\n      }\n\n      instanceDataPageService = this.rxRecordInstanceDataPageService;\n    }\n\n    return instanceDataPageService\n      ? instanceDataPageService.post({ params: params }).pipe(\n          map((result: any) => {\n            this.associationCandidateRecordInstances.push(...result.data);\n\n            return {\n              totalSize: result.totalSize,\n              options: result.data.map((recordInstance) => ({\n                displayValue: recordInstance[this.fieldId] || '',\n                value: recordInstance[RX_RECORD_DEFINITION.coreFieldIds.id]\n              }))\n            };\n          })\n        )\n      : of({\n          options: [],\n          totalSize: 0\n        });\n  }\n\n  deleteAllExisting(): void {\n    this.associationManager.deleteAllExisting();\n  }\n\n  deleteAllPending(): void {\n    this.associationManager.deleteAllPending();\n  }\n\n  loadExistingAssociations(): void {\n    this.associationManager\n      .loadExistingAssociations()\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(() => this.updateTotalExistingAssociationsCount());\n  }\n\n  isReadModeEnabled(): boolean {\n    return this.inReadState;\n  }\n\n  isEditModeEnabled(): boolean {\n    return !this.inReadState;\n  }\n\n  getAssociatedValue(): string {\n    return get(this, 'selectedOptions[0].displayValue');\n  }\n\n  // [{displayValue: 'FOO', value: 'foo'}, {displayValue: 'BAR', value: 'bar'}] -> 'foo;bar;baz'\n  private viewToModelValueAdapter(selectedOptions: IRxSelectWithPaginationOption[]): string {\n    return selectedOptions.map((option) => option.value).join(';');\n  }\n\n  // 'foo;bar;baz' -> [{displayValue: 'FOO', value: 'foo'}, {displayValue: 'BAR', value: 'bar'}]\n  private modelToViewValueAdapter(modelValue: string): IRxSelectWithPaginationOption[] {\n    return modelValue ? castArray(this.selectedOptions) : [];\n  }\n\n  private resetDropdownSelection(): void {\n    this.selectedOptions = [];\n  }\n\n  private updatePreviewCardConfigState(): void {\n    forEach(this.existingPreviewConfigurations, (previewCardConfig: IRecordPreviewCardConfig) => {\n      previewCardConfig.state = this.getStateForPreviewConfiguration();\n    });\n  }\n\n  private updateSelectedOptions(): void {\n    if (this.formControl.value && !isNil(this.formControl.value)) {\n      const pendingAssociation = {\n        id: this.formControl.value,\n        fieldInstances: null\n      };\n\n      const selectedRecordInstance = find(this.associationCandidateRecordInstances, function (association) {\n        return association[RX_RECORD_DEFINITION.coreFieldIds.id] === pendingAssociation.id;\n      });\n\n      pendingAssociation.fieldInstances = transform(\n        selectedRecordInstance,\n        function (result, value, filedId) {\n          result[filedId] = { value: value };\n        },\n        {}\n      );\n\n      this.associationManager.addToPending([pendingAssociation], null);\n    } else {\n      this.deleteAllExisting();\n      this.deleteAllPending();\n    }\n  }\n\n  private buildPreviewConfig(\n    association: IAssociationRecord,\n    fields: IRecordPreviewCardField[],\n    state: string\n  ): IRecordPreviewCardConfig {\n    return {\n      id: association.id,\n      state: state,\n\n      onDelete: (associationId) => {\n        this.associationManager.delete(associationId);\n      },\n\n      fields: _map(fields, (field) => {\n        const fieldDefinition = this.fieldDefinitions[field.fieldId];\n        const fieldInstance = association.fieldInstances[field.fieldId];\n\n        let value;\n\n        if (fieldInstance) {\n          value = fieldInstance.value;\n        }\n\n        if (fieldDefinition.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType) {\n          value = fieldDefinition.optionNamesById[value];\n        }\n\n        if (\n          fieldDefinition.resourceType === RX_RECORD_DEFINITION.dataTypes.dateTime.resourceType ||\n          (fieldDefinition.resourceType === RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType && isString(value))\n        ) {\n          value = this.datePipe.transform(value, 'mediumDate');\n        }\n\n        return {\n          label: field.label,\n          value: value || '<unknown>',\n          index: field.index,\n          fieldId: field.fieldId\n        };\n      })\n    };\n  }\n\n  showPendingAssociations(): void {\n    this.currentPendingCount += this.pendingPageSize;\n  }\n\n  getPendingPreviewConfigurations(): IRecordPreviewCardConfig[] {\n    return this.pendingPreviewConfigurations.slice(0, this.currentPendingCount);\n  }\n\n  private extractRolesConfig(): IRolesConfig {\n    return {\n      useDefaultRoles: this.useDefaultRoles,\n      nodeARole: this.nodeARole,\n      nodeBRole: this.nodeBRole\n    };\n  }\n\n  private updateTotalExistingAssociationsCount(): void {\n    this.associationManager.totalExistingCount =\n      (this.associationManager.remainingAssociatedRecordCount || 0) + this.existingPreviewConfigurations.length;\n  }\n\n  private getStateForPreviewConfiguration(): RecordEditorState {\n    return this.areActionsAvailable && !this.isDisabled ? RecordEditorState.Edit : RecordEditorState.Read;\n  }\n\n  private getFirstAssociationRecord(): IAssociationRecord {\n    return this.associationManager.existing[0] || this.associationManager.pending[0] || {};\n  }\n\n  private onAssociationsChanged(associations: IAssociationRecord[], configName: string): void {\n    const firstAssociatedRecord = this.getFirstAssociationRecord();\n\n    this.notifyPropertyChanged('firstAssociatedRecord', { id: firstAssociatedRecord.id || '' });\n\n    if (this.editingMode === RxAssociationEditingMode.Views) {\n      const associationsToPreview = associations.filter(\n        (association) =>\n          every(this.previewRolesConfig, isEmpty) || isEqual(this.previewRolesConfig, association.rolesConfig)\n      );\n\n      this[configName] = this.rebuildPreviewConfigurations(associationsToPreview);\n    } else if (this.editingMode === RxAssociationEditingMode.Dropdown) {\n      if (firstAssociatedRecord.id) {\n        this.selectedOptions = [\n          {\n            displayValue: firstAssociatedRecord.fieldInstances[this.fieldId]?.value,\n            value: firstAssociatedRecord.id\n          }\n        ];\n      } else {\n        this.resetDropdownSelection();\n      }\n\n      this.formControl.setValue(firstAssociatedRecord.id);\n    }\n  }\n\n  private rebuildPreviewConfigurations(associations: IAssociationRecord[]): IRecordPreviewCardConfig[] {\n    const state = this.getStateForPreviewConfiguration();\n\n    return _map(associations, (association) => {\n      return this.buildPreviewConfig(association, this.fields, state);\n    });\n  }\n}\n","<rx-read-only-field\n  *ngIf=\"!isHidden && isReadModeEnabled() && (existingPreviewConfigurations.length === 0 || editingMode === 'dropdown')\"\n  [label]=\"label\"\n  [value]=\"getAssociatedValue()\"\n></rx-read-only-field>\n\n<div *ngIf=\"!isHidden\" [ngSwitch]=\"editingMode\">\n  <div *ngSwitchCase=\"'views'\" [attr.aria-label]=\"label\" [ngClass]=\"{ 'read-state': isReadModeEnabled() }\">\n    <adapt-rx-control-label *ngIf=\"isEditModeEnabled() || existingPreviewConfigurations.length > 0\" [label]=\"label\">\n    </adapt-rx-control-label>\n\n    <div *ngIf=\"areActionsAvailable\">\n      <rx-runtime-view-canvas-outlet></rx-runtime-view-canvas-outlet>\n    </div>\n\n    <div *ngIf=\"isReadModeEnabled()\">\n      <div [ngSwitch]=\"associationManager.cardinalityType\">\n        <div *ngSwitchCase=\"associationManager.cardinalityTypes.One\">\n          <div *ngIf=\"existingPreviewConfigurations.length || pendingPreviewConfigurations.length\" class=\"list-group\">\n            <rx-record-preview-card\n              [config]=\"existingPreviewConfigurations[0] || pendingPreviewConfigurations[0]\"\n              class=\"list-group-item\"\n            ></rx-record-preview-card>\n          </div>\n        </div>\n\n        <div *ngSwitchDefault>\n          <div class=\"list-group\">\n            <rx-record-preview-card\n              *ngFor=\"let previewCardConfig of existingPreviewConfigurations\"\n              [config]=\"previewCardConfig\"\n              class=\"list-group-item\"\n            ></rx-record-preview-card>\n          </div>\n\n          <button\n            *ngIf=\"\n              associationManager.totalExistingCount >\n              existingPreviewConfigurations.length + associationManager.deleted.length\n            \"\n            (click)=\"loadExistingAssociations()\"\n            adapt-button\n            size=\"small\"\n            btn-type=\"tertiary\"\n            type=\"button\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.show-more.label' | translate }}\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div *ngIf=\"isEditModeEnabled()\">\n      <div *ngIf=\"existingPreviewConfigurations.length\" class=\"form-group\">\n        <div class=\"d-flex justify-content-end pb-1\">\n          <span class=\"preview-count\">\n            {{\n              associationManager.totalExistingCount > 1\n                ? ('com.bmc.arsys.rx.client.view-components.record-editor.association.total-items.label'\n                  | translate\n                    : {\n                        count: associationManager.totalExistingCount\n                      })\n                : ('com.bmc.arsys.rx.client.view-components.record-editor.association.single-item.label' | translate)\n            }}\n          </span>\n\n          <button\n            [hidden]=\"!areActionsAvailable || isDisabled\"\n            (click)=\"deleteAllExisting()\"\n            adapt-button\n            size=\"small\"\n            btn-type=\"tertiary\"\n            class=\"btn btn-link py-0\"\n            type=\"button\"\n          >\n            {{ 'com.bmc.arsys.rx.client.view-components.record-editor.association.button.clear-all.label' | translate }}\n          </button>\n        </div>\n\n        <div class=\"list-group\">\n          <rx-record-preview-card\n            *ngFor=\"let previewCardConfig of existingPreviewConfigurations\"\n            [config]=\"previewCardConfig\"\n            class=\"list-group-item\"\n          ></rx-record-preview-card>\n        </div>\n\n        <button\n          *ngIf=\"\n            associationManager.totalExistingCount >\n            existingPreviewConfigurations.length + associationManager.deleted.length\n          \"\n          (click)=\"loadExistingAssociations()\"\n          adapt-button\n          size=\"small\"\n          btn-type=\"tertiary\"\n          type=\"button\"\n        >\n          {{ 'com.bmc.arsys.rx.client.common.show-more.label' | translate }}\n        </button>\n      </div>\n\n      <div *ngIf=\"pendingPreviewConfigurations.length\" class=\"form-group mt-3\">\n        <div class=\"d-flex justify-content-between\">\n          <div class=\"m-0\">\n            {{\n              'com.bmc.arsys.rx.client.view-components.record-editor.association.pending-associations.label' | translate\n            }}\n            :\n          </div>\n\n          <div class=\"d-flex pb-1\">\n            <span class=\"preview-count\">\n              {{\n                totalPendingCount > 1\n                  ? ('com.bmc.arsys.rx.client.view-components.record-editor.association.total-items.label'\n                    | translate\n                      : {\n                          count: totalPendingCount\n                        })\n                  : ('com.bmc.arsys.rx.client.view-components.record-editor.association.single-item.label' | translate)\n              }}\n            </span>\n\n            <button\n              [hidden]=\"!areActionsAvailable || isDisabled\"\n              (click)=\"deleteAllPending()\"\n              adapt-button\n              size=\"small\"\n              btn-type=\"tertiary\"\n              class=\"btn btn-link py-0\"\n              type=\"button\"\n            >\n              {{\n                'com.bmc.arsys.rx.client.view-components.record-editor.association.button.clear-all.label' | translate\n              }}\n            </button>\n          </div>\n        </div>\n\n        <div class=\"list-group\">\n          <rx-record-preview-card\n            *ngFor=\"let previewCardConfig of getPendingPreviewConfigurations()\"\n            [config]=\"previewCardConfig\"\n            class=\"list-group-item\"\n          ></rx-record-preview-card>\n        </div>\n\n        <button\n          *ngIf=\"totalPendingCount > currentPendingCount\"\n          (click)=\"showPendingAssociations()\"\n          adapt-button\n          size=\"small\"\n          btn-type=\"tertiary\"\n          type=\"button\"\n        >\n          {{ 'com.bmc.arsys.rx.client.common.show-more.label' | translate }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div *ngSwitchCase=\"'dropdown'\">\n    <div *ngIf=\"isEditModeEnabled()\" [attr.aria-label]=\"label\">\n      <rx-select-with-pagination\n        [formControl]=\"formControl\"\n        [readonly]=\"isDisabled\"\n        [label]=\"label\"\n        [modelToViewValueAdapter]=\"modelToViewValueAdapterFunc\"\n        [optionLoader]=\"optionLoaderFunc\"\n        [viewToModelValueAdapter]=\"viewToModelValueAdapterFunc\"\n      ></rx-select-with-pagination>\n    </div>\n  </div>\n</div>\n"]}