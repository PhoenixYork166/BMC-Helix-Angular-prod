{"version":3,"file":"record-customization-options.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/record/designer/record-designer/record-customization-options/record-customization-options.component.ts","../../../../../../../../libs/platform/record/designer/record-designer/record-customization-options/record-customization-options.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n  ICustomizationOptionsEditorData,\n  IScopeSelectionOption,\n  RX_OVERLAY,\n  RxBundleCacheService,\n  RxOverlayService\n} from '@helix/platform/shared/api';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { RxModalService } from '@helix/platform/ui-kit';\nimport { noop } from 'lodash';\nimport { RecordCustomizationOptionsEditorComponent } from './record-customization-options-editor.component';\nimport {\n  IRecordCustomizationControlValue,\n  IRecordCustomizationOptions\n} from './record-customization-options.interfaces';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, mergeMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'rx-scope-record-customization-control',\n  templateUrl: './record-customization-options.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RecordCustomizationOptionsComponent,\n      multi: true\n    }\n  ]\n})\nexport class RecordCustomizationOptionsComponent\n  extends ValueAccessor<IRecordCustomizationControlValue>\n  implements OnChanges\n{\n  @Input()\n  options: IRecordCustomizationOptions;\n\n  allowOverlayLabel: string;\n  definitionScopeName: string;\n  overlayOperation: string;\n  private scopeSelectionOptions: IScopeSelectionOption[];\n  private scopeNameSubject = new BehaviorSubject<string>('');\n\n  private scopeSelectionOptions$ = this.rxBundleCacheService.getDefinitionScopeSelectionOptions().pipe(\n    map((scopeSelectionOptions: IScopeSelectionOption[]) => scopeSelectionOptions),\n    tap((scopeSelectionOptions: IScopeSelectionOption[]) => (this.scopeSelectionOptions = scopeSelectionOptions))\n  );\n\n  private definitionScopeName$ = this.scopeNameSubject.pipe(\n    mergeMap((scopeName: string) =>\n      this.rxBundleCacheService.getDefinitionScopeName(scopeName).pipe(\n        map((definitionScopeName: string) => definitionScopeName),\n        tap((definitionScopeName: string) => (this.definitionScopeName = definitionScopeName))\n      )\n    )\n  );\n\n  vm$ = combineLatest([this.definitionScopeName$, this.scopeSelectionOptions$]).pipe(\n    map(([definitionScopeName, scopeSelectionOptions]) => ({\n      definitionScopeName,\n      scopeSelectionOptions\n    }))\n  );\n\n  constructor(\n    private rxModalService: RxModalService,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxOverlayService: RxOverlayService,\n    private translateService: TranslateService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.options) {\n      this.updateValues();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options) {\n      this.updateValues();\n    }\n  }\n\n  private getOverlayOperation(): string {\n    return this.rxOverlayService.getOverlayOperation(\n      this.options.recordDefinition.overlayGroupId,\n      this.options.recordDefinition.overlayDescriptor?.parentOverlayGroupId || null\n    );\n  }\n\n  private updateValues(): void {\n    this.setAllowOverlayLabel(this.options.recordDefinition.customizationOptions.allowOtherPropertiesOverlay);\n    this.scopeNameSubject.next(this.options.recordDefinition.customizationOptions.scope);\n\n    if (this.options.recordDefinition.overlayGroupId) {\n      this.overlayOperation = this.getOverlayOperation();\n    } else {\n      this.overlayOperation = RX_OVERLAY.operationTypes.createdInThisOverlayGroup;\n    }\n  }\n\n  openCustomizationOptionsEditor(): void {\n    this.rxModalService\n      .openModal({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.designer.scope-customization-options.title'),\n        content: RecordCustomizationOptionsEditorComponent,\n        blockKeyboard: false,\n\n        data: {\n          definitionScopeName: this.definitionScopeName,\n          allowOverlay: this.options.recordDefinition.customizationOptions.allowOtherPropertiesOverlay,\n          scopeSelectionOptions: this.scopeSelectionOptions,\n          isDisabled: this.options.isDisabled,\n          overlayOperation: this.overlayOperation,\n          definitionTypeDisplayName: this.options.definitionTypeDisplayName,\n          recordDefinition: this.options.recordDefinition\n        } as ICustomizationOptionsEditorData\n      })\n      .then((result: IRecordCustomizationControlValue) => {\n        this.setAllowOverlayLabel(result.allowOverlay);\n        this.definitionScopeName = this.scopeSelectionOptions.find((value) => value.id === result.scope).name;\n\n        this.value = result;\n      })\n      .catch(noop);\n  }\n\n  setAllowOverlayLabel(allowOverlay: boolean): void {\n    this.allowOverlayLabel = allowOverlay\n      ? RX_OVERLAY.overlayAllowedLabels.allowed\n      : RX_OVERLAY.overlayAllowedLabels.notAllowed;\n  }\n\n  ngOnDestroy(): void {\n    this.scopeNameSubject.complete();\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <adapt-button\n    btn-type=\"tertiary\"\n    rx-id=\"open-customization-options-editor-link\"\n    (click)=\"openCustomizationOptionsEditor()\"\n    class=\"p-0\"\n  >\n    {{ 'com.bmc.arsys.rx.client.designer.scope-customization-options.title' | translate }}\n  </adapt-button>\n\n  <adapt-icon\n    name=\"question_circle_o\"\n    class=\"ml-2\"\n    placement=\"right\"\n    [adaptPopover]=\"'com.bmc.arsys.rx.client.designer.scope-customization-options.scope.tooltip' | translate\"\n  >\n  </adapt-icon>\n\n  <p rx-id=\"scope\" class=\"mb-0 pt-2\">\n    {{\n      'com.bmc.arsys.rx.client.designer.scope-customization-options.scope.label'\n        | translate: { definitionScopeName: vm.definitionScopeName }\n    }}\n  </p>\n\n  <div rx-id=\"customization\" class=\"pt-2\">\n    {{\n      'com.bmc.arsys.rx.client.designer.scope-customization-options.customization.label'\n        | translate: { allowOverlayLabel: allowOverlayLabel }\n    }}\n  </div>\n</ng-container>\n"]}