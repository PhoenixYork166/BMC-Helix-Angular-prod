{"version":3,"file":"list-form-control.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/shared/components/form-controls/list-form-control/list-form-control.component.ts","../../../../../../../../libs/platform/shared/components/form-controls/list-form-control/list-form-control.component.html"],"names":[],"mappings":"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","sourcesContent":["import { RxStringService } from '@helix/platform/utils';\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IFormControlComponent } from '@helix/platform/shared/api';\nimport { ValueAccessor } from '../../form-builder/value-accessor';\nimport { IListFormControlOptions } from './list-form-control-options.interface';\nimport { forEach, isEqual } from 'lodash';\nimport { ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { IPlainObject } from '@helix/platform/shared/api';\n\n@Component({\n  selector: 'rx-list-form-control',\n  templateUrl: './list-form-control.component.html',\n  styleUrls: ['./list-form-control.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: ListFormControlComponent,\n      multi: true\n    }\n  ]\n})\nexport class ListFormControlComponent extends ValueAccessor<any[]> implements IFormControlComponent, OnInit, OnDestroy {\n  @Input()\n  options: IListFormControlOptions;\n\n  @Input()\n  propertyPath: string;\n\n  @Output()\n  events = new EventEmitter<any>();\n\n  itemList: FormArray = this.formBuilder.array([]);\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  constructor(private formBuilder: FormBuilder, public stringService: RxStringService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.itemList.valueChanges.pipe(takeUntil(this.destroyed$)).subscribe((value) => {\n      this.value = value;\n    });\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    super.setDisabledState(isDisabled);\n\n    if (isDisabled) {\n      this.itemList.disable();\n    } else {\n      this.itemList.enable();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n    this.clearItems();\n  }\n\n  onWriteValue(modelValue): void {\n    if (!isEqual(modelValue, this.itemList.value)) {\n      this.clearItems();\n\n      // initialize values\n      forEach(modelValue, (item) => this.addItem(item));\n    }\n  }\n\n  clearItems(): void {\n    this.itemList.clear();\n  }\n\n  addItem(item: IPlainObject): void {\n    const itemControl = this.createItemFormGroup(item);\n\n    this.itemList.push(itemControl);\n  }\n\n  createItemFormGroup(item: IPlainObject): FormGroup {\n    const formGroupData: IPlainObject = {};\n\n    this.options.items.forEach((i) => {\n      formGroupData[i.propertyName] = item[i.propertyName] || null;\n    });\n\n    return this.formBuilder.group(formGroupData);\n  }\n\n  onItemRemove(index: number): void {\n    this.itemList.removeAt(index);\n  }\n\n  onAddItem(): void {\n    this.addItem({});\n  }\n}\n","<div [formGroup]=\"itemList\">\n  <button\n    (click)=\"onAddItem()\"\n    type=\"button\"\n    class=\"btn btn-sm btn-link px-0 py-0\"\n    [attr.rx-id]=\"'add-item-button'\"\n    *ngIf=\"!isDisabled\"\n  >\n    <span class=\"d-icon-plus_circle mr-1\" aria-hidden=\"true\"></span>\n    {{ options.addItemText }}\n  </button>\n\n  <div class=\"card mt-2\" *ngFor=\"let itemFormGroup of itemList.controls; let i = index\">\n    <div class=\"card-block p-3\">\n      <button\n        *ngIf=\"!isDisabled\"\n        (click)=\"onItemRemove(i)\"\n        class=\"close position-relative\"\n        type=\"button\"\n        aria-label=\"Remove\"\n      ></button>\n\n      <div\n        class=\"form-group\"\n        [ngClass]=\"{ 'mb-0': last, 'mb-3': !last }\"\n        *ngFor=\"let item of options.items; let first = first; let last = last\"\n        [attr.rx-id]=\"stringService.toRxId(item.label)\"\n      >\n        <rx-list-item\n          [config]=\"item\"\n          [control]=\"itemFormGroup.get(item.propertyName)\"\n          [propertyPath]=\"this.propertyPath + '[' + i + '].' + item.propertyName\"\n          (events)=\"events.emit($event)\"\n        >\n        </rx-list-item>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"isDisabled && options.emptyListText && itemList.controls.length === 0\">{{ options.emptyListText }}</div>\n</div>\n"]}