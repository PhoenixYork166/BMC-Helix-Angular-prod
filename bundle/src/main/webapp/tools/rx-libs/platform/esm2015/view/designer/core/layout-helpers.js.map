{"version":3,"file":"layout-helpers.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/designer/core/layout-helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import { includes, uniq, some } from 'lodash';\nimport { IViewComponentDesignModel } from '../interfaces/view-component-design-model.interface';\nimport { IViewComponentDesignModels } from '../interfaces/view-component-design-models.interface';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport { RxViewLayout } from '@helix/platform/view/api';\n\nexport function findParentComponentModel(\n  guid: string,\n  components: IViewComponentDesignModels\n): IViewComponentDesignModel {\n  const currentComponent = components[guid];\n\n  return components[currentComponent?.parentGuid];\n}\n\nexport function findAllParentComponentGuids(guid: string, components: IViewComponentDesignModels): string[] {\n  const result = [guid];\n  let parentModel = findParentComponentModel(guid, components);\n  let nextGuid = parentModel ? parentModel.guid : null;\n\n  while (nextGuid) {\n    result.unshift(nextGuid);\n    parentModel = findParentComponentModel(nextGuid, components);\n\n    nextGuid = parentModel ? parentModel.guid : null;\n  }\n\n  return result;\n}\n\nexport function findParentComponentByType(\n  guid: string,\n  componentType: string,\n  components: IViewComponentDesignModels\n): IViewComponentDesignModel {\n  let result;\n  let parentModel = findParentComponentModel(guid, components);\n  let nextGuid = parentModel ? parentModel.guid : null;\n\n  while (nextGuid) {\n    if (parentModel.type === componentType) {\n      result = parentModel;\n      nextGuid = null;\n    } else {\n      parentModel = findParentComponentModel(nextGuid, components);\n      nextGuid = parentModel ? parentModel.guid : null;\n    }\n  }\n\n  return result;\n}\n\nexport function isComponentContainsChild(\n  guid: string,\n  componentModel: IViewComponentDesignModel | IViewDesignModel\n): boolean {\n  if (componentModel.layout) {\n    const hasChild = RxViewLayout.hasChild(componentModel.layout, guid);\n\n    if (hasChild) {\n      return true;\n    }\n  }\n\n  if (componentModel.childDataComponentGuids) {\n    return includes(componentModel.childDataComponentGuids, guid);\n  } else {\n    return false;\n  }\n}\n\nexport function addChildComponent(\n  componentModel: IViewComponentDesignModel | IViewDesignModel,\n  guid: string,\n  outletName: string,\n  insertIndex?: number,\n  columnIndex = 0,\n  columnSpan = 0\n): IViewComponentDesignModel | IViewDesignModel {\n  const newComponentModel = { ...componentModel };\n\n  newComponentModel.layout = {\n    outlets: componentModel.layout.outlets.map((outlet) => {\n      if (outlet.name === outletName) {\n        const columns = [...outlet.columns];\n\n        insertIndex = isFinite(insertIndex) ? insertIndex : columns[columnIndex].children.length;\n\n        if (!columns[columnIndex]) {\n          columns[columnIndex] = {\n            children: []\n          };\n\n          if (columnSpan) {\n            columns[columnIndex].span = columnSpan;\n          }\n        }\n\n        // todo handle drop in non-first column\n        columns[columnIndex] = {\n          children: [\n            ...columns[columnIndex].children.slice(0, insertIndex),\n            guid,\n            ...columns[columnIndex].children.slice(insertIndex)\n          ],\n          span: columns[columnIndex].span\n        };\n\n        return {\n          ...outlet,\n          columns\n        };\n      } else {\n        return outlet;\n      }\n    })\n  };\n\n  return newComponentModel;\n}\n\nexport function removeChildComponent(\n  componentGuidToRemove: string,\n  parentComponentModel: IViewComponentDesignModel | IViewDesignModel\n): IViewComponentDesignModel | IViewDesignModel {\n  const newParentComponentModel = { ...parentComponentModel };\n\n  if (some(newParentComponentModel.childDataComponentGuids, (guid) => componentGuidToRemove === guid)) {\n    newParentComponentModel.childDataComponentGuids = newParentComponentModel.childDataComponentGuids.filter(\n      (guid) => guid !== componentGuidToRemove\n    );\n  }\n\n  if (parentComponentModel.layout && RxViewLayout.hasChild(parentComponentModel.layout, componentGuidToRemove)) {\n    newParentComponentModel.layout = RxViewLayout.removeChildFromLayout(\n      parentComponentModel.layout,\n      componentGuidToRemove\n    );\n  }\n\n  return newParentComponentModel;\n}\n\nexport function getChildGuidsFromModel(model: IViewComponentDesignModel | IViewDesignModel): string[] {\n  const guids: string[] = [];\n\n  if (model.childDataComponentGuids) {\n    guids.push(...model.childDataComponentGuids);\n  }\n\n  if (model.layout) {\n    guids.push(...RxViewLayout.getViewLayoutChildGuids(model.layout));\n  }\n\n  return uniq(guids);\n}\n\nexport function getAllChildGuids(\n  parentComponent: IViewComponentDesignModel | IViewDesignModel,\n  componentModelsState: IViewComponentDesignModels\n): string[] {\n  const guids = getChildGuidsFromModel(parentComponent);\n\n  return guids.reduce((result, guid) => {\n    result.push(...getAllChildGuids(componentModelsState[guid], componentModelsState));\n\n    return result;\n  }, guids);\n}\n"]}