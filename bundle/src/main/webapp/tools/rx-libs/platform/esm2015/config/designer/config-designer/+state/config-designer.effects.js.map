{"version":3,"file":"config-designer.effects.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/config/designer/config-designer/+state/config-designer.effects.ts"],"names":[],"mappings":"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","sourcesContent":["import { Actions, createEffect, ofType } from '@ngrx/effects';\nimport * as ConfigDesignerActions from './config-designer.actions';\nimport { catchError, filter, map, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { ErrorHandler, Injectable } from '@angular/core';\nimport { IConfigDefinition, IConfigFieldDefinition, RxConfigDefinitionService } from '@helix/platform/config/api';\nimport { RxGuidService } from '@helix/platform/utils';\nimport { RX_CONFIG_DESIGNER } from '../../config-designer.constant';\nimport { FieldDefinitionManagerService } from '../../services/field-definition-manager.service';\nimport { Store } from '@ngrx/store';\nimport {\n  bundleIdSelector,\n  definitionModelFromDefinitionSelector,\n  definitionModelSelector,\n  definitionNameSelector\n} from './config-designer.selectors';\nimport { noop, some } from 'lodash';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  IBundleDescriptor,\n  RxDefinitionNameService,\n  RxGlobalCacheService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport { IConfigDefinitionModel, IConfigFieldDefinitionModel } from '../../config-designer.types';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { ConfigDesignerService } from '../../config-designer.service';\nimport { from, of } from 'rxjs';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { FieldGroupsEditorComponent } from '../field-groups-editor/field-groups-editor.component';\nimport { OpenViewActionModalSize } from '@helix/platform/view/api';\nimport { IFieldState } from '../field-groups-editor/field-groups-editor.types';\n\n@Injectable()\nexport class ConfigDesignerEffects {\n  constructor(\n    private store$: Store<any>,\n    private actions$: Actions,\n    private errorHandler: ErrorHandler,\n    private configDesignerService: ConfigDesignerService,\n    private rxModalService: RxModalService,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService,\n    private fieldDefinitionManagerService: FieldDefinitionManagerService,\n    private rxGuidService: RxGuidService,\n    private rxConfigDefinitionService: RxConfigDefinitionService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxDefinitionNameService: RxDefinitionNameService\n  ) {}\n\n  initConfigDesigner$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.init),\n      map((action) => ConfigDesignerActions.loadParentComponents())\n    )\n  );\n\n  loadParentComponents$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.loadParentComponents),\n      switchMap(() => this.rxConfigDefinitionService.getComponents()),\n      map((parentComponents: string[]) => ConfigDesignerActions.loadParentComponentsSuccess({ parentComponents }))\n    )\n  );\n\n  setParentComponents$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.loadParentComponentsSuccess),\n      map(() => ConfigDesignerActions.loadDefinition())\n    )\n  );\n\n  loadDefinition$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.loadDefinition),\n      withLatestFrom(this.store$.select(bundleIdSelector)),\n      switchMap(([_, bundleId]) => this.rxGlobalCacheService.getBundleDescriptor(bundleId)),\n      withLatestFrom(this.store$.select(definitionNameSelector)),\n      switchMap(([bundleDescriptor, definitionName]: [IBundleDescriptor, string]) =>\n        definitionName\n          ? this.rxConfigDefinitionService.get(this.rxDefinitionNameService.getDisplayName(definitionName))\n          : this.rxConfigDefinitionService.getNew(bundleDescriptor.isApplication)\n      ),\n      map((definition: IConfigDefinition) =>\n        ConfigDesignerActions.loadDefinitionSuccess({\n          definition\n        })\n      )\n    )\n  );\n\n  loadDefinitionSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.loadDefinitionSuccess),\n      map((action) => {\n        const definitionModelFromDefinition = {\n          externalLink: action.definition.externalLink,\n          impactRowVisibility: action.definition.impactRowVisibility,\n          parentComponentName: action.definition.parentComponentName,\n          registeredModuleName: action.definition.registeredModuleName,\n          supportsMultiple: action.definition.supportsMultiple,\n          viewComponent: action.definition.viewComponent,\n          viewToOpen: action.definition.viewToOpen,\n          componentName: action.definition.componentName,\n          permissions: action.definition.permissions,\n          componentLabel: action.definition.localeList[0].componentLabel,\n          firstMenu: action.definition.localeList[0].firstMenu,\n          secondMenu: action.definition.localeList[0].secondMenu,\n          isSettingAccessibleInInnovationStudio:\n            action.definition.showInLocation === RX_CONFIG_DESIGNER.settingAccessOptions.innovationStudio.value ||\n            action.definition.showInLocation === RX_CONFIG_DESIGNER.settingAccessOptions.both.value,\n          isSettingAccessibleInApplication:\n            action.definition.showInLocation === RX_CONFIG_DESIGNER.settingAccessOptions.application.value ||\n            action.definition.showInLocation === RX_CONFIG_DESIGNER.settingAccessOptions.both.value,\n          fields: action.definition.settingMetaData.map<IConfigFieldDefinitionModel>(\n            (field: IConfigFieldDefinition) => ({\n              dataType: field.dataType,\n              defaultValue: field.defaultValue ?? null,\n              fieldOrder: field.fieldOrder,\n              id: field.id,\n              keySetting: field.keySetting,\n              localeList: field.localeList,\n              guid: this.rxGuidService.generate(),\n              maxValue: field.maxValue ?? null,\n              minValue: field.minValue ?? null,\n              selectionFieldOptionProperties: {\n                defaultValue: field.defaultValue as number,\n                optionNamesById: field.optionNamesById,\n                optionLabelsById: field.optionLabelsById\n              },\n              required: field.required,\n              settingLabel: field.localeList[0].settingLabel,\n              isNew: false\n            })\n          )\n        };\n\n        return ConfigDesignerActions.initDefinitionModel({\n          definitionModelFromDefinition\n        });\n      })\n    )\n  );\n\n  markPristine$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        ConfigDesignerActions.initDefinitionModel,\n        ConfigDesignerActions.saveDefinition,\n        ConfigDesignerActions.saveDefinitionSuccess\n      ),\n      map(() => ConfigDesignerActions.markDesignerPristine())\n    )\n  );\n\n  clearSelectedField$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.initDefinitionModel, ConfigDesignerActions.deleteSelectedFieldSuccess),\n      map(() => ConfigDesignerActions.clearSelectedFieldGuid())\n    )\n  );\n\n  markDirty$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        ConfigDesignerActions.updateDefinitionModelFromDesigner,\n        ConfigDesignerActions.updateSelectedFieldModel,\n        ConfigDesignerActions.addFieldModel,\n        ConfigDesignerActions.deleteSelectedFieldSuccess,\n        ConfigDesignerActions.saveDefinitionError\n      ),\n      map(() => ConfigDesignerActions.markDesignerDirty())\n    )\n  );\n\n  createNewFieldModel$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.createNewFieldModel),\n      withLatestFrom(this.store$.select(definitionModelSelector)),\n      map(([action, definitionModel]) => {\n        let newFieldName;\n        let fieldNameSuffix = 0;\n\n        const defaultFieldName = this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.default-field-name.label'\n        );\n\n        do {\n          newFieldName = `${defaultFieldName} ${++fieldNameSuffix}`;\n        } while (some(definitionModel.fields, { id: newFieldName }));\n\n        const guid = this.rxGuidService.generate();\n\n        const newFieldModel = this.fieldDefinitionManagerService.getNewFieldDefinitionModel(action.resourceType, {\n          id: action.isLoginNameField ? 'LoginName' : newFieldName,\n          isNew: true,\n          guid,\n          keySetting: action.isLoginNameField,\n          settingLabel: action.isLoginNameField\n            ? this.translateService.instant('com.bmc.arsys.rx.client.config-designer.login-name-field.label')\n            : newFieldName,\n          minValue: null,\n          maxValue: null,\n          selectionFieldOptionProperties:\n            action.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType\n              ? { defaultValue: null, optionNamesById: null, optionLabelsById: null }\n              : null\n        });\n\n        return ConfigDesignerActions.addFieldModel({ newFieldModel });\n      })\n    )\n  );\n\n  addNewFieldModel$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.addFieldModel),\n      map((action) => ConfigDesignerActions.setSelectedFieldGuid({ guid: action.newFieldModel.guid }))\n    )\n  );\n\n  editFieldGroups$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.editFieldGroups),\n      withLatestFrom(this.store$.select(definitionModelSelector)),\n      switchMap(([_, definitionModel]) =>\n        from(\n          this.rxModalService\n            .openModal({\n              title: this.translateService.instant('com.bmc.arsys.rx.client.config-designer.edit-field-groups.label'),\n              content: FieldGroupsEditorComponent,\n              data: { fields: definitionModel.fields },\n              size: OpenViewActionModalSize.Large as any\n            })\n            .catch(noop)\n        )\n      ),\n      filter(Boolean),\n      withLatestFrom(this.store$.select(definitionModelSelector)),\n      map(([response, definitionModel]: [{ fields: IFieldState[] }, IConfigDefinitionModel]) => {\n        const fields = definitionModel.fields.map((field) => {\n          const updatedField = response.fields.find((item) => item.guid === field.guid);\n\n          return {\n            ...field,\n            fieldOrder: updatedField.fieldOrder,\n            localeList: [\n              {\n                ...field.localeList[0],\n                fieldGrouping: updatedField.groupName\n              }\n            ]\n          };\n        });\n\n        return ConfigDesignerActions.updateDefinitionModelFromDesigner({\n          definitionModelFromDesigner: { ...definitionModel, fields }\n        });\n      })\n    )\n  );\n\n  deleteSelectedField$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.deleteSelectedField),\n      switchMap(() =>\n        from(\n          this.rxModalService.confirm({\n            title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n            modalStyle: RX_MODAL.modalStyles.warning,\n            message: this.translateService.instant('com.bmc.arsys.rx.client.designer.delete-fields-warning.message')\n          })\n        )\n      ),\n      filter(Boolean),\n      map(() => ConfigDesignerActions.deleteSelectedFieldSuccess())\n    )\n  );\n\n  saveDefinition$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.saveDefinition),\n      withLatestFrom(\n        this.store$.select(definitionModelFromDefinitionSelector),\n        this.store$.select(definitionModelSelector),\n        this.store$.select(definitionNameSelector),\n        this.store$.select(bundleIdSelector)\n      ),\n      switchMap(([action, definitionModelFromDefinition, definitionModel, definitionName, bundleId]) => {\n        const definition = this.configDesignerService.getDefinitionFromDefinitionModel(definitionModel);\n\n        if (!definitionName) {\n          return this.rxConfigDefinitionService.create(definition).pipe(\n            map((response) =>\n              ConfigDesignerActions.saveDefinitionSuccess({\n                savedDefinitionName: `${bundleId}:${definitionModel.componentName}`\n              })\n            ),\n            catchError((error) => {\n              this.errorHandler.handleError(error);\n\n              return of(ConfigDesignerActions.saveDefinitionError());\n            })\n          );\n        } else if (\n          definitionModelFromDefinition.impactRowVisibility !== definitionModel.impactRowVisibility ||\n          definitionModelFromDefinition.parentComponentName !== definitionModel.parentComponentName ||\n          definitionModelFromDefinition.supportsMultiple !== definitionModel.supportsMultiple\n        ) {\n          return from(\n            this.rxModalService.confirm({\n              title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n              modalStyle: RX_MODAL.modalStyles.warning,\n              message: this.translateService.instant(\n                'com.bmc.arsys.rx.client.config-designer.setting-data-will-be-deleted-warning.message'\n              )\n            })\n          ).pipe(\n            filter(Boolean),\n            map(() => ConfigDesignerActions.updateDefinition({ definition }))\n          );\n        } else {\n          return [ConfigDesignerActions.updateDefinition({ definition })];\n        }\n      })\n    )\n  );\n\n  updateDefinition$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.updateDefinition),\n      switchMap((action) =>\n        this.rxConfigDefinitionService.update(action.definition.componentName, action.definition).pipe(\n          map((response) =>\n            ConfigDesignerActions.saveDefinitionSuccess({\n              savedDefinitionName: `${action.definition.componentName}`\n            })\n          ),\n          catchError((error) => {\n            this.errorHandler.handleError(error);\n\n            return of(ConfigDesignerActions.saveDefinitionError());\n          })\n        )\n      )\n    )\n  );\n\n  saveDefinitionSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.saveDefinitionSuccess),\n      withLatestFrom(this.store$.select(definitionNameSelector)),\n      tap(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.designer.definition-saved-successfully.message', {\n            definitionTypeDisplayName: this.translateService.instant('com.bmc.arsys.rx.client.config-definition.label')\n          })\n        );\n      }),\n      filter(([_, definitionName]) => !!definitionName),\n      map(() => ConfigDesignerActions.loadDefinition())\n    )\n  );\n}\n"]}