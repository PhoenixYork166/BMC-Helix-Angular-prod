{"version":3,"file":"data-import.types.js","sourceRoot":"","sources":["../../../../../../../libs/platform/dataload/components/data-import/data-import.types.ts"],"names":[],"mappings":"AAEA,MAAM,CAAN,IAAY,WAWX;AAXD,WAAY,WAAW;IACrB,0BAAW,CAAA;IACX,wCAAyB,CAAA;IACzB,sCAAuB,CAAA;IACvB,kCAAmB,CAAA;IACnB,0DAA2C,CAAA;IAC3C,gCAAiB,CAAA;IACjB,oCAAqB,CAAA;IACrB,kCAAmB,CAAA;IACnB,kDAAmC,CAAA;IACnC,gDAAiC,CAAA;AACnC,CAAC,EAXW,WAAW,KAAX,WAAW,QAWtB","sourcesContent":["import { RxSelectOption } from '@bmc-ux/adapt-angular';\r\n\r\nexport enum IDataStatus {\r\n  new = 'New',\r\n  processing = 'Processing',\r\n  processed = 'Processed',\r\n  errored = 'Errored',\r\n  processedWithErrors = 'ProcessedWithErrors',\r\n  queued = 'Queued',\r\n  stopping = 'Stopping',\r\n  stopped = 'Stopped',\r\n  rolloverStopped = 'RolloverStopped',\r\n  upgradeStopped = 'UpgradeStopped'\r\n}\r\n\r\nexport interface IImportedDataStatusInfo {\r\n  message: string;\r\n  status: string;\r\n  updateTime: string;\r\n}\r\n\r\nexport interface ISheetField {\r\n  name: string;\r\n}\r\n\r\nexport interface ISheetDefinition {\r\n  name: string;\r\n  value: string;\r\n}\r\n\r\nexport interface IDataloadExcelSheetConfiguration {\r\n  stepId: string;\r\n  definition: ISheetDefinition;\r\n  fields: ISheetField[];\r\n}\r\n\r\nexport interface IDataloadExcelSheet {\r\n  sheetName: string;\r\n  configurations: IDataloadExcelSheetConfiguration;\r\n}\r\n\r\nexport interface IDataloadWorksheet {\r\n  sheets: IDataloadExcelSheet[];\r\n}\r\n\r\ninterface ITargetDefinition {\r\n  type: string;\r\n  name: string;\r\n}\r\n\r\ninterface ISourceField {\r\n  fieldName: string | RxSelectOption[];\r\n}\r\n\r\nexport interface ITargetField {\r\n  _fieldId: number | string;\r\n  name: string;\r\n}\r\n\r\nexport interface IFieldMapping {\r\n  sourceField: ISourceField;\r\n  targetField: ITargetField | RxSelectOption[];\r\n}\r\n\r\ninterface IDefinitionMappings {\r\n  targetDefinition: ITargetDefinition;\r\n  fieldMappings: IFieldMapping[];\r\n}\r\n\r\ninterface IDuplicateHandlingOptions {\r\n  matchDuplicateBy: ITargetField[];\r\n  handleDuplicateBy: number | RxSelectOption[];\r\n}\r\n\r\nexport interface ISheetDataConfiguration {\r\n  definitionMappings: IDefinitionMappings;\r\n  dataHandlingOptions: number[];\r\n  timeFormatOptions: string | RxSelectOption[];\r\n  duplicateHandlingOptions: IDuplicateHandlingOptions;\r\n}\r\n\r\nexport interface IDataImportSheetConfiguration {\r\n  name: string;\r\n  configurations: ISheetDataConfiguration;\r\n}\r\n\r\nexport interface IDataImportConfiguration {\r\n  sheets: IDataImportSheetConfiguration[];\r\n}\r\n\r\ninterface IDataloadSheetConfigurationByName {\r\n  [sheetName: string]: IDataloadExcelSheetConfiguration;\r\n}\r\n\r\nexport interface IDataImportContext {\r\n  dataImportConfigurations: IDataImportConfiguration;\r\n}\r\n\r\nexport interface IImportJobInfo {\r\n  importJobName: string;\r\n  importJobDescription: string;\r\n  attachmentType: number;\r\n  archivedWorksheetFileName: string;\r\n}\r\n\r\nexport interface IDataloadWizardContext {\r\n  importJobInfo?: IImportJobInfo;\r\n  isClonedConfigMatched: boolean;\r\n  clonedConfigurationInstanceId: string;\r\n  createdRecordInstanceId: string;\r\n  dataImportContext: IDataImportContext;\r\n  excelSheetsConfiguration: IDataloadSheetConfigurationByName;\r\n}\r\n"]}