{"version":3,"file":"http-params.interceptor.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/api/http/http-params.interceptor.ts"],"names":[],"mappings":"AAAA,OAAO,EAAwD,UAAU,EAAE,MAAM,sBAAsB,CAAC;AACxG,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAG3C,OAAO,EAAE,oBAAoB,EAAE,MAAM,8BAA8B,CAAC;;AAKpE,MAAM,OAAO,uBAAuB;IAClC,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC;YAC5B,OAAO,EAAE,IAAI,oBAAoB,EAAE;YACnC,UAAU,EAAE,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE;SACtC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;IAChD,CAAC;;oHARU,uBAAuB;wHAAvB,uBAAuB,cAFtB,MAAM;2FAEP,uBAAuB;kBAHnC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { HttpInterceptor, HttpRequest, HttpEvent, HttpHandler, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { RxHttpParameterCodec } from './http-parameter-codec.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxHttpParamsInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const params = new HttpParams({\n      encoder: new RxHttpParameterCodec(),\n      fromString: request.params.toString()\n    });\n\n    return next.handle(request.clone({ params }));\n  }\n}\n"]}