{"version":3,"file":"view-designer-helper.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/designer/component/view-designer-helper.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { concatMap, filter, first, map, switchMap, switchMapTo, take, tap, withLatestFrom } from 'rxjs/operators';\nimport { flow, isEmpty, mergeWith, reduce } from 'lodash';\nimport { ViewDesignerFacade } from '../+state/view-designer.facade';\nimport { IViewComponentDesignModels } from '../interfaces/view-component-design-models.interface';\nimport { IViewDesignModelState } from '../interfaces/view-design-model-state.interface';\nimport { findAllParentComponentGuids } from '../core/layout-helpers';\nimport {\n  IViewComponentDescriptor,\n  IViewLayout,\n  RxViewComponentRegistryService,\n  RxViewComponentType,\n  ViewDefinitionType,\n  RxViewLayout,\n  BwfViewComponentType\n} from '@helix/platform/view/api';\nimport { RxViewDesignerModels } from '../core/view-designer-models.service';\nimport {\n  IViewDesignerCanvasColumn,\n  IViewDesignerCanvasLayout,\n  IViewDesignerCanvasOutlet\n} from '../components/view-designer-canvas';\nimport { DesignerComponent } from '../components/designer-component/designer.component';\nimport { IBreadcrumbItem, IValidationIssueSection } from '@helix/platform/ui-kit';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { IViewDesignerValidationState } from '../+state/view-designer-validation.reducer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDesignerHelperService {\n  designerComponentFactory = this.componentFactoryResolver.resolveComponentFactory(DesignerComponent);\n  canvasDndListIds: string[] = [];\n\n  extensionViewAllowedComponentTypes = new Set([\n    RxViewComponentType.Container,\n    RxViewComponentType.RichText,\n    RxViewComponentType.RecordEditor,\n\n    RxViewComponentType.Character,\n    RxViewComponentType.Textarea,\n    RxViewComponentType.Boolean,\n    RxViewComponentType.Date,\n    RxViewComponentType.DateTime,\n    RxViewComponentType.Time,\n    RxViewComponentType.Decimal,\n    RxViewComponentType.Floating,\n    RxViewComponentType.Integer,\n    RxViewComponentType.LocalizedCharacter,\n    RxViewComponentType.Selection,\n    RxViewComponentType.SelectGroup,\n    RxViewComponentType.RichTextarea,\n    BwfViewComponentType.DynamicNamedList\n  ]);\n\n  constructor(\n    private viewDesignerFacade: ViewDesignerFacade,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private viewDesignerModels: RxViewDesignerModels\n  ) {}\n\n  canvasLayout$ = this.getRecursiveViewLayoutGuids().pipe(\n    switchMap((guids) =>\n      guids.length\n        ? this.viewDesignerFacade.areViewModelsReady$.pipe(\n            // Wait until component models will be instantiated after save view definition.\n            filter(Boolean),\n            switchMapTo(this.viewDesignerFacade.viewDesignerModelState$.pipe(take(1)))\n          )\n        : this.viewDesignerFacade.viewDesignerModelState$.pipe(take(1))\n    ),\n    map((designModelState): IViewDesignerCanvasLayout => {\n      const viewModel = designModelState.viewDesignModel;\n      const componentModels = designModelState.viewComponentDesignModels;\n\n      this.canvasDndListIds.length = 0;\n\n      return {\n        guid: viewModel.guid,\n        factory: this.designerComponentFactory,\n        outlets: viewModel.layout.outlets.map((outlet) => ({\n          name: outlet.name,\n          columns: outlet.columns.map((column, i) => {\n            const listId = String(`${viewModel.guid}-${outlet.name}-${i}`);\n\n            // do not allow components to be dropped in the root of a SHELL view\n            if (viewModel.type !== ViewDefinitionType.Shell) {\n              this.canvasDndListIds.push(listId);\n            }\n\n            return {\n              ...column,\n              children: column.children.map((childGuid) =>\n                this.initializeCanvasItem(childGuid, componentModels, this.canvasDndListIds)\n              ),\n              listId,\n              dndListIds: this.canvasDndListIds\n            } as IViewDesignerCanvasColumn;\n          })\n        })),\n        model: null,\n        descriptor: null,\n        isSelected$: of(false)\n      };\n    }),\n    tap(() => {\n      // required for DND\n      // https://github.com/angular/components/issues/16671\n      this.canvasDndListIds.reverse();\n    })\n  );\n\n  private viewBreadcrumbItem$ = this.viewDesignerFacade.getViewPropertyValue('displayName').pipe(\n    concatMap((displayName) =>\n      of(\n        displayName\n          ? displayName === RX_APPLICATION.shellDefinitionName\n            ? 'Application shell'\n            : displayName\n          : '<New view>'\n      )\n    ),\n    withLatestFrom(this.viewDesignerFacade.viewModelGuid$),\n    map(\n      ([viewBreadcrumbLabel, guid]): IBreadcrumbItem => ({\n        label: viewBreadcrumbLabel,\n        data: { guid }\n      })\n    )\n  );\n\n  private selectedComponentBreadcrumbItems$ = this.viewDesignerFacade.selectedComponentGuid$.pipe(\n    switchMap((componentGuid) =>\n      componentGuid\n        ? combineLatest([\n            this.viewDesignerFacade.breadcrumbs$,\n            this.viewDesignerFacade.getParentComponentGuid(componentGuid)\n          ]).pipe(\n            withLatestFrom(this.viewDesignerFacade.viewComponentModels$),\n            map(([[breadcrumbs], viewComponentModels]) =>\n              // Handle empty viewComponentModels state during view definition save.\n              isEmpty(viewComponentModels)\n                ? []\n                : findAllParentComponentGuids(componentGuid, viewComponentModels).map((parentGuid) => {\n                    let label = breadcrumbs[parentGuid];\n\n                    if (!label) {\n                      const component = viewComponentModels[parentGuid];\n                      const descriptor = this.rxViewComponentRegistryService.get(component.type);\n\n                      label = descriptor.name;\n                    }\n\n                    return { label, data: { guid: parentGuid } } as IBreadcrumbItem;\n                  })\n            )\n          )\n        : of([])\n    )\n  );\n\n  breadcrumbItems$ = combineLatest([this.viewBreadcrumbItem$, this.selectedComponentBreadcrumbItems$]).pipe(\n    map(([viewItem, componentItems]) => [viewItem, ...componentItems])\n  );\n\n  validationIssues$ = this.viewDesignerFacade.validationIssues$.pipe(\n    withLatestFrom(this.viewDesignerFacade.viewDesignerModelState$),\n    map(\n      ([validationIssuesState, modelState]: [\n        IViewDesignerValidationState,\n        IViewDesignModelState\n      ]): IValidationIssueSection[] =>\n        flow(\n          (state: IViewDesignerValidationState) =>\n            mergeWith({ ...state.issues }, state.expressionIssues, (issues = [], expressionIssues = []) =>\n              issues.concat(expressionIssues)\n            ),\n          (issuesByComponentGuid) =>\n            reduce(\n              issuesByComponentGuid,\n              (result, issues, guid) => {\n                let name;\n\n                if (modelState.viewDesignModel?.guid === guid) {\n                  name = modelState.viewDesignModel.displayName || 'View designer';\n                } else if (modelState.viewComponentDesignModels[guid]) {\n                  const type = modelState.viewComponentDesignModels[guid].type;\n                  const descriptor = this.rxViewComponentRegistryService.get(type);\n\n                  name = descriptor && descriptor.name;\n                }\n\n                if (name) {\n                  result.push({\n                    title: name,\n                    issues: issues.map((issue) => ({\n                      type: issue.type,\n                      description: issue.description,\n                      disableCorrection: issue.disableCorrection,\n                      data: {\n                        guid,\n                        propertyName: issue.propertyName,\n                        data: issue.data\n                      }\n                    }))\n                  } as IValidationIssueSection);\n                }\n\n                return result;\n              },\n              []\n            )\n        )(validationIssuesState)\n    )\n  );\n\n  getLicensedComponents(): Observable<IViewComponentDescriptor[]> {\n    return this.rxViewComponentRegistryService.getLicensedComponents().pipe(\n      first(),\n      map((components) =>\n        components.filter(\n          (component) =>\n            !this.rxViewComponentRegistryService.isDataComponentDescriptor(component) &&\n            !component.hidden &&\n            !component.isPageComponent\n        )\n      )\n    );\n  }\n\n  private getRecursiveViewLayoutGuids(): Observable<string[]> {\n    return this.viewDesignerFacade\n      .getViewPropertyValue('layout')\n      .pipe(switchMap((layout) => this.getRecursiveComponentLayoutGuids(layout)));\n  }\n\n  private getRecursiveComponentLayoutGuids(layout: IViewLayout): Observable<string[]> {\n    const guids = RxViewLayout.getViewLayoutChildGuids(layout);\n\n    return guids.length\n      ? combineLatest(\n          guids.map((guid) =>\n            this.viewDesignerFacade\n              .getComponentLayout(guid)\n              .pipe(\n                switchMap((childLayout) =>\n                  childLayout\n                    ? this.getRecursiveComponentLayoutGuids(childLayout).pipe(\n                        map((childGuids) => [...childGuids, ...guids])\n                      )\n                    : of(guids)\n                )\n              )\n          )\n        )\n      : of([]);\n  }\n\n  private initializeCanvasItem(\n    componentGuid: string,\n    componentModels: IViewComponentDesignModels,\n    dndListIds: string[]\n  ): IViewDesignerCanvasLayout {\n    const componentModel = componentModels[componentGuid];\n    const descriptor = this.rxViewComponentRegistryService.get(componentModel.type);\n\n    const canvasLayout: IViewDesignerCanvasLayout = {\n      guid: componentModel.guid,\n      descriptor,\n      factory: descriptor.designComponentFactory,\n      model: this.viewDesignerModels.get(componentModel.guid),\n      outlets: [],\n      isSelected$: this.viewDesignerFacade.selectedComponentGuid$.pipe(map((guid) => guid === componentModel.guid)),\n      label: descriptor.name\n    };\n\n    if (componentModel.layout) {\n      canvasLayout.viewComponentWithParents = findAllParentComponentGuids(componentModel.guid, componentModels).map(\n        (guid) => ({ guid, type: componentModels[guid].type })\n      );\n\n      componentModel.layout.outlets.forEach((outlet) => {\n        const canvasOutlet: IViewDesignerCanvasOutlet = {\n          name: outlet.name,\n\n          columns: outlet.columns.map((column, i) => {\n            const listId = `${componentModel.guid}-${outlet.name}-${i}`;\n\n            dndListIds.push(listId);\n\n            return {\n              children: column.children.map((childGuid) =>\n                this.initializeCanvasItem(childGuid, componentModels, dndListIds)\n              ),\n              span: column.span,\n              listId,\n              dndListIds\n            };\n          })\n        };\n\n        canvasLayout.outlets.push(canvasOutlet);\n      });\n    }\n\n    return canvasLayout;\n  }\n}\n"]}