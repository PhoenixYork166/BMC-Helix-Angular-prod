{"version":3,"file":"mulesoft-configuration.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/admin/components/ipaas/mulesoft-configuration/mulesoft-configuration.component.ts","../../../../../../../../libs/platform/admin/components/ipaas/mulesoft-configuration/mulesoft-configuration.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';\nimport { find, first } from 'lodash';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { IpaasBaseConfigurationComponent } from '../ipaas-base-configuration/ipaas-base-configuration.component';\nimport {\n  AUTH_TYPE,\n  IAuthenticationOption,\n  IMulesoftSettingParams,\n  MULESOFT_AUTH_TYPE_OPTIONS\n} from './mulesoft-configuration.types';\nimport { IIpaasBaseConfig } from '../ipaas-base-configuration/ipaas-base-configuration.types';\nimport { AdaptValidators } from '@bmc-ux/adapt-angular';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'rx-admin-mulesoft-configuration',\n  templateUrl: './mulesoft-configuration.component.html',\n  styleUrls: ['./mulesoft-configuration.component.scss']\n})\nexport class MulesoftConfigurationAdminComponent extends BaseViewComponent implements OnInit {\n  @ViewChild(IpaasBaseConfigurationComponent)\n  ipaasBaseConfigurationComponent: IpaasBaseConfigurationComponent;\n\n  mulesoftConfigurationForm: FormGroup;\n\n  mulesoftConfig: IIpaasBaseConfig = {\n    componentName: 'iPaaS MuleSoft Configuration',\n    resourceType: 'com.bmc.dsm.ipaas.mulesoft.command.PingMuleSoftCommand',\n    bundleScope: RX_APPLICATION.ipaasMulesoftBundleId,\n    titleKey: 'com.bmc.arsys.rx.client.admin.mulesoft-configuration.header.title',\n    saveMessageKey: 'com.bmc.arsys.rx.client.admin.mulesoft-configuration.saved.message',\n    controlsConfig: {\n      url: ['', AdaptValidators.required()],\n      authType: ['', AdaptValidators.required()],\n      username: '',\n      password: '',\n      clientId: '',\n      clientSecret: ''\n    },\n    getFormValues: (formValue: any) => ({\n      url: formValue.url,\n      authType: this.getAuthTypeOption(formValue.authType),\n      username: formValue.username,\n      password: formValue.password,\n      clientId: formValue.clientId,\n      clientSecret: formValue.clientSecret\n    }),\n    settingNames: {\n      url: 'url',\n      userName: 'username',\n      password: 'password',\n      authType: 'authType',\n      clientId: 'clientId',\n      clientSecret: 'clientSecret'\n    },\n    getPayload: (formValue: any): IMulesoftSettingParams => {\n      switch ((first(formValue.authType) as IAuthenticationOption)?.id) {\n        case AUTH_TYPE.oAuth2: {\n          return {\n            url: formValue.url,\n            authType: this.getAuthTypePayload(formValue.authType),\n            username: null,\n            password: null,\n            clientId: formValue.clientId,\n            clientSecret: formValue.clientSecret\n          };\n        }\n        default: {\n          return {\n            url: formValue.url,\n            authType: this.getAuthTypePayload(formValue.authType),\n            username: formValue.username,\n            password: formValue.password,\n            clientId: null,\n            clientSecret: null\n          };\n        }\n      }\n    }\n  };\n\n  authenticationOptions: IAuthenticationOption[] = MULESOFT_AUTH_TYPE_OPTIONS;\n\n  optionFormatter = (authenticationOption: IAuthenticationOption) => authenticationOption.label;\n\n  constructor(private formBuilder: FormBuilder) {\n    super();\n  }\n\n  ngOnInit() {\n    this.mulesoftConfigurationForm = this.formBuilder.group(this.mulesoftConfig.controlsConfig);\n    this.mulesoftConfigurationForm.patchValue({ authType: [first(MULESOFT_AUTH_TYPE_OPTIONS)] });\n\n    this.authType.valueChanges.pipe(map((authType) => this.getAuthTypePayload(authType))).subscribe((authType) => {\n      if (authType === AUTH_TYPE.basicAuth) {\n        this.mulesoftConfigurationForm.controls.username.setValidators(AdaptValidators.required());\n        this.mulesoftConfigurationForm.controls.username.enable();\n        this.mulesoftConfigurationForm.controls.password.setValidators(AdaptValidators.required());\n        this.mulesoftConfigurationForm.controls.password.enable();\n        this.mulesoftConfigurationForm.controls.clientId.clearValidators();\n        this.mulesoftConfigurationForm.controls.clientId.disable();\n        this.mulesoftConfigurationForm.controls.clientSecret.clearValidators();\n        this.mulesoftConfigurationForm.controls.clientSecret.disable();\n      } else if (authType === AUTH_TYPE.oAuth2) {\n        this.mulesoftConfigurationForm.controls.username.clearValidators();\n        this.mulesoftConfigurationForm.controls.username.disable();\n        this.mulesoftConfigurationForm.controls.password.clearValidators();\n        this.mulesoftConfigurationForm.controls.password.disable();\n        this.mulesoftConfigurationForm.controls.clientId.setValidators(AdaptValidators.required());\n        this.mulesoftConfigurationForm.controls.clientId.enable();\n        this.mulesoftConfigurationForm.controls.clientSecret.setValidators(AdaptValidators.required());\n        this.mulesoftConfigurationForm.controls.clientSecret.enable();\n      }\n    });\n\n    this.mulesoftConfigurationForm.patchValue({ authType: [first(MULESOFT_AUTH_TYPE_OPTIONS)] });\n\n    this.notifyPropertyChanged('api', {\n      isDirty: () => this.ipaasBaseConfigurationComponent.childFormGroup.dirty\n    });\n  }\n\n  get authType(): AbstractControl {\n    return this.mulesoftConfigurationForm.get('authType');\n  }\n\n  private getAuthTypeOption(id: string): IAuthenticationOption[] {\n    const authType = find(MULESOFT_AUTH_TYPE_OPTIONS, { id: id });\n\n    return authType ? [authType] : [];\n  }\n\n  private getAuthTypePayload(authType: IAuthenticationOption[]): string {\n    return first(authType)?.id;\n  }\n}\n","<rx-ipaas-base-configuration [ipaasConfig]=\"mulesoftConfig\" [childFormGroup]=\"mulesoftConfigurationForm\">\n  <ng-container [formGroup]=\"mulesoftConfigurationForm\">\n    <adapt-rx-textfield\n      rx-id=\"endpoint-url\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.mulesoft-configuration.end-point-url.label' | translate }}\"\n      formControlName=\"url\"\n      class=\"d-block form-group\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-select\n      rx-id=\"auth-type\"\n      formControlName=\"authType\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.data-source-connection-properties.authentication.label' | translate }}\"\n      [options]=\"authenticationOptions\"\n      [optionFormatter]=\"optionFormatter\"\n      class=\"d-block form-group\"\n    >\n    </adapt-rx-select>\n\n    <ng-container [ngSwitch]=\"authType.value[0]?.id\">\n      <ng-container *ngSwitchDefault>\n        <adapt-rx-textfield\n          rx-id=\"user-name\"\n          label=\"{{ 'com.bmc.arsys.rx.client.common.user-name.label' | translate }}\"\n          formControlName=\"username\"\n          class=\"d-block form-group\"\n        >\n        </adapt-rx-textfield>\n        <adapt-rx-textfield\n          rx-id=\"password\"\n          label=\"{{ 'com.bmc.arsys.rx.client.common.password.label' | translate }}\"\n          formControlName=\"password\"\n          [isPassword]=\"true\"\n          class=\"d-block form-group\"\n        >\n        </adapt-rx-textfield>\n      </ng-container>\n\n      <ng-container *ngSwitchCase=\"authenticationOptions[1].id\">\n        <adapt-rx-textfield\n          rx-id=\"client-id\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.bmc-service-cloud-account.client-id.label' | translate }}\"\n          formControlName=\"clientId\"\n          class=\"d-block form-group\"\n        >\n        </adapt-rx-textfield>\n        <adapt-rx-textfield\n          rx-id=\"client-secret\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.bmc-service-cloud-account.client-secret.label' | translate }}\"\n          formControlName=\"clientSecret\"\n          [isPassword]=\"true\"\n          class=\"d-block form-group\"\n        >\n        </adapt-rx-textfield>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n</rx-ipaas-base-configuration>\n"]}