{"version":3,"file":"console-logger.class.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/api/logging/console-logger.class.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AACxC,OAAO,EAAE,WAAW,EAAE,MAAM,aAAa,CAAC;AAG1C,MAAM,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AAErD,MAAM,OAAO,eAAe;IAC1B,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAG,CAAC;IAElD,aAAa,CAAC,UAAyB;QACrC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,iBAAiB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE;YAClG,MAAM,eAAe,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAExF,MAAM,IAAI,KAAK,CAAC,kDAAkD,eAAe,IAAI,CAAC,CAAC;SACxF;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;SACzC;IACH,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;IACzC,CAAC;IAED,OAAO;QACL,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IAClC,CAAC;CACF","sourcesContent":["import { every, isArray } from 'lodash';\nimport { LogCategory } from './log.types';\nimport { RxLogService } from './log.service';\n\nconst allowedCategories = Object.values(LogCategory);\n\nexport class RxConsoleLogger {\n  constructor(private rxLogService: RxLogService) {}\n\n  setCategories(categories: LogCategory[]) {\n    if (!isArray(categories) || !every(categories, (category) => allowedCategories.includes(category))) {\n      const validCategories = allowedCategories.map((category) => `'${category}'`).join(', ');\n\n      throw new Error(`Invalid category specified. Valid categories: [${validCategories}].`);\n    } else {\n      this.rxLogService.configure(categories);\n    }\n  }\n\n  getCategories(): string[] {\n    return this.rxLogService.logCategories;\n  }\n\n  disable(): void {\n    this.rxLogService.configure([]);\n  }\n}\n"]}