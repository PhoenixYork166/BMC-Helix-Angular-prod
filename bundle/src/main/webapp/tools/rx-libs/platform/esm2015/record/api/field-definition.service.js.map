{"version":3,"file":"field-definition.service.js","sourceRoot":"","sources":["../../../../../../libs/platform/record/api/field-definition.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { IFieldDefinition } from './field-definition.interfaces';\nimport { RX_RECORD_DEFINITION } from './record-definition.constant';\nimport { includes, inRange, isNumber, get, isUndefined } from 'lodash';\nimport { IRecordDefinition } from './record-definition.types';\nimport { RX_OVERLAY, RxOverlayService } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxFieldDefinitionService {\n  constructor(private rxOverlayService: RxOverlayService) {}\n\n  isSystemField(fieldDefinition: IFieldDefinition): boolean {\n    return fieldDefinition?.fieldOption === RX_RECORD_DEFINITION.fieldOptions.system;\n  }\n\n  isRequiredField(fieldDefinition: IFieldDefinition): boolean {\n    return fieldDefinition?.fieldOption === RX_RECORD_DEFINITION.fieldOptions.required;\n  }\n\n  isPassword(fieldDefinition: IFieldDefinition): boolean {\n    return includes(RX_RECORD_DEFINITION.passwordFieldIds, fieldDefinition.id);\n  }\n\n  isSecured(fieldDefinition: IFieldDefinition): boolean {\n    return fieldDefinition.shouldPersistHashed || fieldDefinition.shouldPersistEncrypted;\n  }\n\n  isReadOnly(fieldDefinition: IFieldDefinition): boolean {\n    return this.isSystemField(fieldDefinition) || this.isInheritedField(fieldDefinition);\n  }\n\n  isInheritedField(fieldDefinition: IFieldDefinition): boolean {\n    return fieldDefinition.hasOwnProperty('isInherited') && fieldDefinition.isInherited;\n  }\n\n  isPropertiesCustomizationEnabled(fieldDefinition: IFieldDefinition): boolean {\n    return (\n      this.isTransient(fieldDefinition) ||\n      this.rxOverlayService.isCustomizationEnabled('allowOtherPropertiesOverlay', fieldDefinition)\n    );\n  }\n\n  isTransient(fieldDefinition): boolean {\n    return isUndefined(fieldDefinition.lastUpdateTime);\n  }\n\n  isOverlayMode(fieldDefinition: IFieldDefinition): boolean {\n    const overlayGroupId = fieldDefinition.overlayGroupId;\n    const overlayDescriptor = fieldDefinition.overlayDescriptor || { parentOverlayGroupId: null };\n\n    return (\n      this.rxOverlayService.getOverlayOperation(overlayGroupId, overlayDescriptor.parentOverlayGroupId) !==\n      RX_OVERLAY.operationTypes.createdInThisOverlayGroup\n    );\n  }\n\n  // Is field ID in a range reserved by BMC\n  isReservedField(fieldDefinition: IFieldDefinition, skipValidate = false): boolean {\n    // if (isNumber(fieldDefinition.id)) {\n    if (!skipValidate) {\n      return this.isExternalRecordField(fieldDefinition)\n        ? includes(RX_RECORD_DEFINITION.externalRecordDefinitionCoreFieldIds, fieldDefinition.id)\n        : fieldDefinition.id <= RX_RECORD_DEFINITION.AR_MAX_RESERVED_FIELD_ID;\n    } else {\n      return false;\n    }\n  }\n\n  isPermissionsCustomizationEnabled(fieldDefinition): boolean {\n    return (\n      this.isTransient(fieldDefinition) ||\n      this.rxOverlayService.isCustomizationEnabled('allowPermissionsOverlay', fieldDefinition)\n    );\n  }\n\n  isSortable(fieldDefinition: IFieldDefinition): boolean {\n    // Records cannot be sorted by a field with unlimited length (maxLength = 0), or by a field longer than 1000 characters.\n    // This applies to character and localized character fields.\n    // Sorting is allowed for fields with unspecified length.\n    return (\n      !isNumber(fieldDefinition.maxLength) ||\n      inRange(fieldDefinition.maxLength, 1, RX_RECORD_DEFINITION.sortableCharacterFieldMaxLength + 1)\n    );\n  }\n\n  isSearchable(fieldDefinition: IFieldDefinition, recordDefinition?: IRecordDefinition): boolean {\n    return (\n      includes(\n        [RX_RECORD_DEFINITION.dataTypes.character.resourceType, RX_RECORD_DEFINITION.dataTypes.attachment.resourceType],\n        fieldDefinition.resourceType\n      ) &&\n      !this.isPassword(fieldDefinition) &&\n      !this.isSecured(fieldDefinition) &&\n      !this.isReadOnly(fieldDefinition) &&\n      this.isPropertiesCustomizationEnabled(fieldDefinition)\n    );\n  }\n\n  isJoinedField(fieldDefinition: IFieldDefinition): boolean {\n    return this.isJoinRecordField(fieldDefinition) && !this.isCoreField(fieldDefinition);\n  }\n\n  isCoreField(fieldDefinition: IFieldDefinition): boolean {\n    let coreFieldIds = RX_RECORD_DEFINITION.arCoreFieldIds;\n\n    if (this.isJoinRecordField(fieldDefinition)) {\n      coreFieldIds = RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds;\n    } else if (this.isExternalRecordField(fieldDefinition)) {\n      coreFieldIds = RX_RECORD_DEFINITION.externalRecordDefinitionCoreFieldIds;\n    }\n\n    return includes(coreFieldIds, fieldDefinition.id);\n  }\n\n  isExternalRecordField(fieldDefinition: IFieldDefinition): boolean {\n    return get(fieldDefinition, 'fieldMapping.resourceType') === RX_RECORD_DEFINITION.externalFieldMapping;\n  }\n\n  canBeAssociatedDisplayField(fieldDefinition: IFieldDefinition): boolean {\n    return (\n      (this.isReservedField(fieldDefinition) || !this.isTransient(fieldDefinition)) &&\n      (fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.character ||\n        fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.localizedCharacter) &&\n      RX_RECORD_DEFINITION.coreFieldIds.id !== fieldDefinition.id\n    );\n  }\n\n  private isJoinRecordField(fieldDefinition: IFieldDefinition): boolean {\n    return get(fieldDefinition, 'fieldMapping.resourceType') === RX_RECORD_DEFINITION.joinFieldMapping;\n  }\n\n  isDataProviderIdField(fieldDefinition: IFieldDefinition, recordDefinition: IRecordDefinition): boolean {\n    const isCustomRecordDefinition =\n      recordDefinition?.type === RX_RECORD_DEFINITION.externalRecordDefinitionTypes.custom;\n\n    return isCustomRecordDefinition && fieldDefinition.id === RX_RECORD_DEFINITION.specialFieldIds.dataProviderId;\n  }\n\n  isFieldInUserOverlay(fieldDefinition: IFieldDefinition): boolean {\n    return (\n      !fieldDefinition.lastUpdateTime ||\n      this.rxOverlayService.getUserDefaultOverlayGroupId() === fieldDefinition.overlayGroupId\n    );\n  }\n}\n"]}