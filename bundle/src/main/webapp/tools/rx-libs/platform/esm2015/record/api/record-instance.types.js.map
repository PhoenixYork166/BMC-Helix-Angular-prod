{"version":3,"file":"record-instance.types.js","sourceRoot":"","sources":["../../../../../../libs/platform/record/api/record-instance.types.ts"],"names":[],"mappings":"","sourcesContent":["import { IFieldInstance } from './field-instance.interface';\nimport { IAssociationRecords } from '@helix/platform/association/api';\n\nexport interface IRecordInstance {\n  readonly resourceType: string;\n  readonly id: string;\n\n  displayId: string;\n  recordDefinitionName: string;\n  permittedGroupsBySecurityLabels: any;\n  permittedUsersBySecurityLabels: any;\n  permittedRolesBySecurityLabels: any;\n  fieldInstances: { [fieldId: number]: IFieldInstance };\n  associationInstances?: IRxRecordInstanceAssociationInstances;\n}\n\nexport interface IRxRecordInstanceAssociationInstances {\n  [associationDefinitionName: string]: {\n    [nodeSide: string]: IAssociationRecords;\n  };\n}\n\nexport interface IRxFieldValidationResult {\n  [validationKey: string]: string;\n}\n\nexport interface IRxValidationResult {\n  [fieldId: string]: IRxFieldValidationResult;\n}\n\nexport type FieldInstanceValidator = () => boolean;\n\nexport interface IFieldValueChanged {\n  fieldId: number;\n  value: any;\n}\n\nexport interface ICreatedRecordInstance {\n  id?: string;\n  url?: string;\n}\n"]}