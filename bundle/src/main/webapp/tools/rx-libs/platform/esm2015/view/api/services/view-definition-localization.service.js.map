{"version":3,"file":"view-definition-localization.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/api/services/view-definition-localization.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  IComponentPropertyNameToStringGuid,\n  IViewDefinition,\n  IViewLocalizableStrings\n} from '../domain/view-definition.interface';\nimport { RxViewDefinitionParserService } from './view-definition-parser.service';\nimport { RxViewComponentRegistryService } from '../registries/view-component-registry.service';\nimport { IViewComponentDescriptor } from '../registries/view-component-descriptor.types.js';\nimport { RxViewActionRegistryService } from '../view-action/view-action-registry.service';\nimport { IViewActionDescriptor } from '../view-action/view-action.interfaces';\nimport { RxGuidService, RxTreeService } from '@helix/platform/utils';\nimport { forEach, isEmpty, set, transform } from 'lodash';\nimport {\n  AnyViewComponentDefinition,\n  IContainerViewComponentDefinition,\n  IViewComponentDefinition\n} from '../domain/view-component-definition.types';\nimport { RxViewComponentType } from '../domain/view-component.types';\nimport { IPlainObject } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDefinitionLocalizationService {\n  constructor(\n    private rxViewDefinitionParserService: RxViewDefinitionParserService,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private rxViewActionRegistryService: RxViewActionRegistryService,\n    private rxGuidService: RxGuidService,\n    private rxTreeService: RxTreeService\n  ) {}\n\n  applyLocalization(viewDefinition: IViewDefinition): IViewDefinition {\n    const componentDefinitions = this.rxTreeService.flatten(viewDefinition, 'componentDefinitions');\n\n    const localizableStringGuidsByComponentGuid: IComponentPropertyNameToStringGuid = {};\n\n    // converting Select Group localization for AngularJS views\n    // todo can be removed after dropping support of AngularJS version\n    this.convertOldSelectGroupLocalization(viewDefinition, componentDefinitions);\n\n    componentDefinitions.forEach((componentDefinition) => {\n      const localizableStrings = viewDefinition.localizableStringsByComponentId[componentDefinition.guid];\n\n      const propertyNameToStringGuidMap = this.applyComponentDefinitionLocalization(\n        componentDefinition,\n        localizableStrings\n      );\n\n      if (!isEmpty(propertyNameToStringGuidMap)) {\n        localizableStringGuidsByComponentGuid[componentDefinition.guid] = propertyNameToStringGuidMap;\n      }\n    });\n\n    viewDefinition.localizablePropertyToStringGuidMap = localizableStringGuidsByComponentGuid;\n\n    return viewDefinition;\n  }\n\n  extractLocalizableStrings(viewDefinition: IViewDefinition): IViewLocalizableStrings {\n    const localizableStrings: IViewLocalizableStrings = {};\n    const localizablePropertyToStringGuidMap = viewDefinition.localizablePropertyToStringGuidMap || {};\n\n    this.rxViewDefinitionParserService\n      .getComponents(viewDefinition, true)\n      .map((item) => item.componentDefinition)\n      .filter((component) => component.type && component.type !== RxViewComponentType.Page)\n      .forEach((component: AnyViewComponentDefinition) => {\n        const componentDescriptor = this.rxViewComponentRegistryService.get(component.type);\n        const propertyNameToStringGuidMap = localizablePropertyToStringGuidMap[component.guid] || {};\n        const componentStrings = {};\n        let localizablePropertyNames;\n\n        if (componentDescriptor.type === RxViewComponentType.Action) {\n          const actionDescriptor = this.rxViewActionRegistryService.get(component.propertiesByName.name);\n\n          localizablePropertyNames = this.getLocalizableActionParameterNames(actionDescriptor);\n        } else {\n          localizablePropertyNames = this.getLocalizableComponentPropertyNames(componentDescriptor);\n        }\n\n        localizablePropertyNames.forEach((localizablePropertyName) => {\n          if (component.propertiesByName[localizablePropertyName]) {\n            const stringGuid = propertyNameToStringGuidMap[localizablePropertyName] || this.rxGuidService.generate();\n\n            componentStrings[stringGuid] = component.propertiesByName[localizablePropertyName];\n            component.propertiesByName[localizablePropertyName] = stringGuid;\n          }\n        });\n\n        if (!isEmpty(componentStrings)) {\n          localizableStrings[component.guid] = componentStrings;\n        }\n      });\n\n    return localizableStrings;\n  }\n\n  private applyComponentDefinitionLocalization(\n    componentDefinition: IViewComponentDefinition,\n    localizableStrings = {}\n  ): IPlainObject {\n    return transform(\n      componentDefinition.propertiesByName,\n      (result, propertyValue: string, propertyName: string) => {\n        if (localizableStrings[propertyValue]) {\n          componentDefinition.propertiesByName[propertyName] = localizableStrings[propertyValue];\n          result[propertyName] = propertyValue;\n        }\n      },\n      {}\n    );\n  }\n\n  private getLocalizableActionParameterNames(actionDescriptor: IViewActionDescriptor): string[] {\n    return (actionDescriptor.parameters || []).reduce<string[]>((parameterNames, parameter) => {\n      if (parameter.localizable) {\n        parameterNames.push(parameter.name);\n      } else if (parameter.attributes) {\n        forEach(parameter.attributes, (attribute) => {\n          if (attribute.localizable) {\n            parameterNames.push(`${parameter.name}.${attribute.name}`);\n          }\n        });\n      }\n\n      return parameterNames;\n    }, []);\n  }\n\n  private getLocalizableComponentPropertyNames(componentDescriptor: IViewComponentDescriptor): string[] {\n    return (componentDescriptor.properties || []).filter((prop) => prop.localizable).map((prop) => prop.name);\n  }\n\n  // this method used to move SelectGroupField localization from SelectGroup localization object\n  // to own one in same way as this done for any other component.\n  // Method should handle only AngularJS views that has legacy labelId property in SelectGroupField\n  private convertOldSelectGroupLocalization(\n    viewDefinition: IViewDefinition,\n    componentDefinitions: AnyViewComponentDefinition[]\n  ) {\n    componentDefinitions\n      .filter((component) => component.type === RxViewComponentType.SelectGroup)\n      .forEach((selectGroup: IContainerViewComponentDefinition) => {\n        selectGroup.componentDefinitions.forEach((selectGroupField) => {\n          if (selectGroupField.propertiesByName.labelId) {\n            const oldStringGuid: string = selectGroupField.propertiesByName.labelId;\n            const newStringGuid: string = this.rxGuidService.generate();\n\n            const localizedLabel: string =\n              viewDefinition.localizableStringsByComponentId[selectGroup.guid][oldStringGuid];\n\n            // setting localized string guid same way as for other components\n            selectGroupField.propertiesByName.label = newStringGuid;\n\n            // moving localization from SelectGroup to SelectGroupField object with new guid\n            // to avoid unexpected server behaviour\n            set(viewDefinition.localizableStringsByComponentId, [selectGroupField.guid, newStringGuid], localizedLabel);\n\n            // removing legacy labelId\n            delete selectGroupField.propertiesByName.labelId;\n\n            // removing string from select group localization object\n            delete viewDefinition.localizableStringsByComponentId[selectGroup.guid][oldStringGuid];\n          }\n        });\n\n        // removing select group localization object if empty\n        if (isEmpty(viewDefinition.localizableStringsByComponentId[selectGroup.guid])) {\n          delete viewDefinition.localizableStringsByComponentId[selectGroup.guid];\n        }\n      });\n  }\n}\n"]}