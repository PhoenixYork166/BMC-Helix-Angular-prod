{"version":3,"file":"attachment-field-design.model.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/field-components/attachment-field/design/attachment-field-design.model.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAGlE,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AACrC,OAAO,EAAE,2BAA2B,EAAE,MAAM,6EAA6E,CAAC;AAG1H,MAAM,OAAO,0BAA2B,SAAQ,2BAA2B;IAA3E;;QACE,uBAAkB,GAAG,CAAC,oBAAoB,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IAoBvE,CAAC;IAlBC,MAAM,CAAC,oBAAoB,CAAC,iBAAoD;QAC9E,MAAM,MAAM,GAAG,2BAA2B,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;QAEnF,OAAO,MAAM,CAAC,KAAK,CAAC;QAEpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,kBAAkB;QAChB,OAAO,KAAK,CAAC,kBAAkB,EAAE,CAAC,IAAI,CACpC,GAAG,CAAC,CAAC,eAA6C,EAAE,EAAE;YACpD,eAAe,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,QAAQ;gBACjD,eAAe,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC;YAEhG,OAAO,eAAe,CAAC;QACzB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IViewDesignerInspectorConfig } from '@helix/platform/view/designer';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BaseRecordEditorFieldDesign } from '../../base-record-editor-field/design/base-record-editor-field-design.class';\nimport { IBaseRecordEditorFieldProperties } from '../../base-record-editor-field/design/base-record-editor-field-design.types';\n\nexport class AttachmentFieldDesignModel extends BaseRecordEditorFieldDesign {\n  fieldResourceTypes = [RX_RECORD_DEFINITION.resourceTypes.attachment];\n\n  static getInitialProperties(initialProperties?: IBaseRecordEditorFieldProperties): IBaseRecordEditorFieldProperties {\n    const result = BaseRecordEditorFieldDesign.getInitialProperties(initialProperties);\n\n    delete result.value;\n\n    return result;\n  }\n\n  getInspectorConfig(): Observable<IViewDesignerInspectorConfig> {\n    return super.getInspectorConfig().pipe(\n      map((inspectorConfig: IViewDesignerInspectorConfig) => {\n        inspectorConfig.inspectorSectionConfigs[0].controls =\n          inspectorConfig.inspectorSectionConfigs[0].controls.filter((field) => field.name !== 'value');\n\n        return inspectorConfig;\n      })\n    );\n  }\n}\n"]}