{"version":3,"file":"admin-settings.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/api/administration/admin-settings.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { last } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IPlainObject } from '../common-types';\nimport {\n  IAdminComponentDefinition,\n  IAdminComponentGridData,\n  IAdminComponentSetting,\n  IAdminComponentSettings,\n  IAdminNavigationMenuItem,\n  IAdminSetting\n} from './administration.types';\nimport { RxCommandFactoryService } from '../command';\n\nconst API_URL = '/api/rx/application/admin-settings/local';\nconst SETTINGS_API_URL = '/api/rx/application/admin-settings/component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxAdminSettingsService {\n  constructor(private httpClient: HttpClient, private rxCommandFactoryService: RxCommandFactoryService) {}\n\n  getComponentGridData(componentName: string, customHeaders?: IPlainObject): Observable<IAdminComponentGridData> {\n    return this.httpClient.get<IAdminComponentGridData>(`${API_URL}/component-griddata/${componentName}`, {\n      headers: new HttpHeaders(customHeaders || {})\n    });\n  }\n\n  getComponentDefinition(componentName: string, customHeaders?: IPlainObject): Observable<IAdminComponentDefinition> {\n    return this.httpClient.get<IAdminComponentDefinition>(`${API_URL}/component-definition/${componentName}`, {\n      headers: new HttpHeaders(customHeaders || {})\n    });\n  }\n\n  getAdminNavigationMenuItems(): Observable<IAdminNavigationMenuItem[]> {\n    return this.httpClient\n      .get<{ AdminNavigationMenu: { items: IAdminNavigationMenuItem[] } }>(`${API_URL}/navigation-menu`)\n      .pipe(\n        map(\n          (navigationMenu: { AdminNavigationMenu: { items: IAdminNavigationMenuItem[] } }) =>\n            navigationMenu.AdminNavigationMenu.items\n        )\n      );\n  }\n\n  getComponentSettings(componentName: string, customHeaders?: IPlainObject): Observable<IAdminComponentSettings> {\n    return this.httpClient.get<IAdminComponentSettings>(`${API_URL}/component-settings/${componentName}`, {\n      headers: new HttpHeaders(customHeaders || {})\n    });\n  }\n\n  deleteComponentSettings(componentName: string, customHeaders?: IPlainObject): Observable<any> {\n    return this.httpClient.delete(`${API_URL}/component-settings/${componentName}`, {\n      headers: new HttpHeaders(customHeaders || {})\n    });\n  }\n\n  createComponentSettings(\n    componentName: string,\n    data: IAdminComponentSetting[],\n    customHeaders?: IPlainObject\n  ): Observable<string> {\n    return this.httpClient\n      .post(`${API_URL}/component-settings/${componentName}`, data, {\n        headers: new HttpHeaders(customHeaders || {}),\n        observe: 'response'\n      })\n      .pipe(map((response) => last(response.headers.get('location')?.split('/')) || ''));\n  }\n\n  updateComponentSettings(componentName: string, data: IAdminComponentSetting[], customHeaders?: IPlainObject) {\n    return this.httpClient.put(`${API_URL}/component-settings/${componentName}`, data, {\n      headers: new HttpHeaders(customHeaders || {})\n    });\n  }\n\n  getAdminSetting(componentName: string, customHeaders?: IPlainObject): Observable<IAdminSetting> {\n    return this.httpClient.get<IAdminSetting>(`${SETTINGS_API_URL}/${componentName}`, {\n      headers: new HttpHeaders(customHeaders || {})\n    });\n  }\n\n  createAdminSetting(data: IAdminSetting) {\n    return this.httpClient.post(SETTINGS_API_URL, data);\n  }\n\n  updateAdminSetting(data: IAdminSetting) {\n    return this.httpClient.put(`${SETTINGS_API_URL}/${data.componentName}`, data);\n  }\n\n  deleteAdminSetting(definitionNames: string[]): Observable<any> {\n    return this.rxCommandFactoryService\n      .forResourceType('com.bmc.arsys.rx.application.admin.command.DeleteAdminSettingsComponentDefinitionsCommand')\n      .execute({ definitionNames });\n  }\n}\n"]}