{"version":3,"file":"gainsight-user-preferences.service.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/shared/components/shell/gainsight/gainsight-user-preferences.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAc,EAAE,EAAE,MAAM,MAAM,CAAC;AAEtC,OAAO,EAAE,gBAAgB,EAAE,MAAM,4BAA4B,CAAC;AAC9D,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;;;;AAKpD,MAAM,OAAO,iCAAiC;IAC5C,YAAoB,UAAsB,EAAU,gBAAkC;QAAlE,eAAU,GAAV,UAAU,CAAY;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAG,CAAC;IAE1F,2BAA2B;QACzB,IAAI,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,aAAa,CAAC,EAAE;YACzD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA4B,YAAY,CAAC,2BAA2B,CAAC,CAAC;SACjG;aAAM;YACL,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;SACjB;IACH,CAAC;IAED,4BAA4B,CAAC,wBAAmD;QAC9E,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,2BAA2B,EAAE,wBAAwB,CAAC,CAAC;IACjG,CAAC;;8HAbU,iCAAiC;kIAAjC,iCAAiC,cAFhC,MAAM;2FAEP,iCAAiC;kBAH7C,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { IGainsightUserPreferences } from './gainsight.types';\nimport { RxFeatureService } from '@helix/platform/shared/api';\nimport { RX_GAINSIGHT } from './gainsight.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxGainsightUserPreferencesService {\n  constructor(private httpClient: HttpClient, private rxFeatureService: RxFeatureService) {}\n\n  getGainsightUserPreferences(): Observable<IGainsightUserPreferences> {\n    if (this.rxFeatureService.isFeatureEnabled('DRD21-11744')) {\n      return this.httpClient.get<IGainsightUserPreferences>(RX_GAINSIGHT.gainsightUserPreferencesApi);\n    } else {\n      return of(null);\n    }\n  }\n\n  saveGainsightUserPreferences(gainsightUserPreferences: IGainsightUserPreferences): Observable<any> {\n    return this.httpClient.put(RX_GAINSIGHT.gainsightUserPreferencesApi, gainsightUserPreferences);\n  }\n}\n"]}