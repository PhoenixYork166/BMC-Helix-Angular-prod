{"version":3,"file":"file-data-set-blade.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/admin/components/cognitive-training/components/file-data-set-blade/file-data-set-blade.component.ts","../../../../../../../../../libs/platform/admin/components/cognitive-training/components/file-data-set-blade/file-data-set-blade.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Injector, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { assign, find, isEmpty } from 'lodash';\nimport moment from 'moment-es6';\nimport { DismissReasons, DockedPanelContext, RxSelectOption, UploaderMode } from '@bmc-ux/adapt-angular';\nimport { RX_RECORD_DEFINITION, RxRecordInstanceService } from '@helix/platform/record/api';\nimport { IPlainObject } from '@helix/platform/shared/api';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { ICognitiveTrainingDataSet } from '../../cognitive-training.types';\nimport { RX_COGNITIVE_TRAINING } from '../../cognitive-training.constant';\nimport { RxCognitiveTrainingUtilsService } from '../../cognitive-training-utils.service';\n\n@Component({\n  selector: 'rx-file-data-set-blade',\n  templateUrl: './file-data-set-blade.component.html'\n})\nexport class FileDataSetBladeComponent extends RxModalClass implements OnInit {\n  @ViewChild('fileDataSetForm', { static: true, read: NgForm })\n  fileDataSetForm: NgForm;\n\n  contextData: IPlainObject;\n  dataSet: ICognitiveTrainingDataSet;\n  localeOptions: RxSelectOption[];\n\n  csvFileUploadMode = UploaderMode.Auto;\n\n  constructor(\n    private dockedPanelContext: DockedPanelContext,\n    private rxCognitiveTrainingUtilsService: RxCognitiveTrainingUtilsService,\n    private rxRecordInstanceService: RxRecordInstanceService,\n    protected injector: Injector\n  ) {\n    super(dockedPanelContext, injector);\n    this.contextData = this.dockedPanelContext.getData().data;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.localeOptions = this.rxCognitiveTrainingUtilsService.getTrainingLocales(this.contextData.trainingType.value);\n\n    const dataSource = this.contextData.recordInstance.getFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource\n    );\n\n    this.dataSet = {\n      dataSetName: this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetName),\n      description: this.contextData.recordInstance.getFieldValue(RX_RECORD_DEFINITION.coreFieldIds.description),\n      csvFile: null,\n\n      locale: [\n        this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.locale) ||\n          RX_COGNITIVE_TRAINING.settings.defaultTrainingLocale\n      ],\n\n      testDataPercent: this.contextData.isNewDataSet\n        ? RX_COGNITIVE_TRAINING.settings.defaultTestDataPercentage\n        : this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.testDataPercent),\n\n      trainDataPercent: this.contextData.isNewDataSet\n        ? RX_COGNITIVE_TRAINING.settings.defaultTrainDataPercentage\n        : this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.trainDataPercent),\n\n      status: find(RX_COGNITIVE_TRAINING.settings.trainingStatuses, {\n        value: this.contextData.recordInstance.getFieldValue(RX_RECORD_DEFINITION.coreFieldIds.status)\n      }),\n\n      lastSubmittedDate: this.contextData.recordInstance.getFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.dateLastSubmitted\n      ),\n\n      lastTrainedDate: this.contextData.recordInstance.getFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.dateLastTrained\n      ),\n      machineLearningError: this.contextData.recordInstance.getFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.machineLearningError\n      )\n    };\n\n    if (dataSource && (this.contextData.editDataSet || this.contextData.copyDataSet)) {\n      this.rxRecordInstanceService\n        .getAttachment(\n          RX_COGNITIVE_TRAINING.settings.dataSetDefinitionName,\n          RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n          this.contextData.getAttachmentRecordInstanceId\n        )\n        .subscribe((blob) => {\n          this.dataSet.csvFile = [\n            {\n              data: assign(blob, {\n                name: dataSource\n              }),\n              downloadURL: this.rxRecordInstanceService.getAttachmentDownloadUrl(\n                RX_COGNITIVE_TRAINING.settings.dataSetDefinitionName,\n                RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n                this.contextData.recordInstance.id\n              ),\n              isUploading: true\n            }\n          ];\n        });\n    }\n  }\n\n  isDirty(): boolean {\n    return this.fileDataSetForm.dirty;\n  }\n\n  optionFormatter = (opt: RxSelectOption) => opt;\n\n  onTrainDataPercentCounterChange(trainDataPercent: number): void {\n    this.dataSet.testDataPercent = 100 - trainDataPercent;\n  }\n\n  onTestDataPercentCounterChange(testDataPercent: number): void {\n    this.dataSet.trainDataPercent = 100 - testDataPercent;\n  }\n\n  onSaveClick(): void {\n    this.contextData.recordInstance.setFieldValue(\n      RX_RECORD_DEFINITION.coreFieldIds.description,\n      this.dataSet.description\n    );\n\n    this.contextData.recordInstance.setFieldProp(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n      'file',\n      (!isEmpty(this.dataSet.csvFile) && this.dataSet.csvFile[0].data) || null\n    );\n\n    this.contextData.recordInstance.setFieldProp(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n      'value',\n      (!isEmpty(this.dataSet.csvFile) && this.dataSet.csvFile[0].data.name) || null\n    );\n\n    this.contextData.recordInstance.setFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSourceHistory,\n      JSON.stringify({\n        resourceType: this.contextData.dataSourceType.resourceType,\n        fileName: this.dataSet.csvFile[0].data.name\n      })\n    );\n\n    this.contextData.recordInstance.setFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.locale,\n      this.dataSet.locale[0]\n    );\n\n    this.contextData.recordInstance.setFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dateLastSubmitted, moment());\n\n    this.contextData.recordInstance.setFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.testDataPercent,\n      this.dataSet.testDataPercent\n    );\n\n    this.contextData.recordInstance.setFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.trainDataPercent,\n      this.dataSet.trainDataPercent\n    );\n\n    if (this.contextData.isNewDataSet || this.contextData.copyDataSet) {\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.bundleId,\n        this.contextData.bundleId\n      );\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetName,\n        this.dataSet.dataSetName\n      );\n\n      this.contextData.recordInstance.setFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetID, '');\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_RECORD_DEFINITION.coreFieldIds.status,\n        RX_COGNITIVE_TRAINING.settings.trainingStatuses.untrained.value\n      );\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.classificationServiceProvider,\n        this.contextData.trainingType.uniqueValue\n      );\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.trainingType,\n        this.contextData.trainingType.value\n      );\n\n      this.rxRecordInstanceService.create(this.contextData.recordInstance).subscribe(() => {\n        this.dockedPanelContext.close('save');\n      });\n    } else if (this.contextData.editDataSet) {\n      if (\n        this.dataSet.status.value === RX_COGNITIVE_TRAINING.settings.trainingStatuses.trained.value ||\n        this.dataSet.status.value === RX_COGNITIVE_TRAINING.settings.trainingStatuses.failed.value\n      ) {\n        this.contextData.recordInstance.setFieldValue(\n          RX_RECORD_DEFINITION.coreFieldIds.status,\n          RX_COGNITIVE_TRAINING.settings.trainingStatuses.pendingRetraining.value\n        );\n      }\n\n      this.rxRecordInstanceService.save(this.contextData.recordInstance).subscribe(() => {\n        this.dockedPanelContext.close('save');\n      });\n    }\n  }\n\n  onCloseClick(): void {\n    this.dockedPanelContext.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"dp-body\">\n  <form #fileDataSetForm=\"ngForm\">\n    <div *ngIf=\"contextData.editDataSet\">\n      <div class=\"d-flex justify-content-between m-0 mb-3\">\n        <div>\n          <label class=\"form-control-label\">\n            {{ 'com.bmc.arsys.rx.client.admin.cognitive-training.status.label' | translate }}\n          </label>\n\n          <div>{{ dataSet.status.label }}</div>\n        </div>\n\n        <div>\n          <label class=\"form-control-label\">\n            {{ 'com.bmc.arsys.rx.client.admin.cognitive-training.date-last-submitted.label' | translate }}\n          </label>\n\n          <div>{{ dataSet.lastSubmittedDate | date: 'medium' }}</div>\n        </div>\n\n        <div>\n          <label class=\"form-control-label\">\n            {{ 'com.bmc.arsys.rx.client.admin.cognitive-training.date-last-trained.label' | translate }}\n          </label>\n\n          <div>{{ dataSet.lastTrainedDate | date: 'medium' }}</div>\n        </div>\n      </div>\n\n      <adapt-alert\n        *ngIf=\"dataSet.machineLearningError\"\n        [config]=\"{\n          content: dataSet.machineLearningError,\n          type: 'inline',\n          variant: 'danger'\n        }\"\n      ></adapt-alert>\n    </div>\n\n    <adapt-rx-textfield\n      class=\"form-group d-block\"\n      name=\"data-set-name\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-search.data-set-name.label' | translate }}\"\n      rx-id=\"data-set-name-field\"\n      required\n      [disabled]=\"contextData.editDataSet\"\n      [(ngModel)]=\"dataSet.dataSetName\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-textfield\n      class=\"form-group d-block\"\n      name=\"description\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.chatbots.description.title' | translate }}\"\n      rx-id=\"description-field\"\n      required\n      [(ngModel)]=\"dataSet.description\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-textfield\n      class=\"form-group d-block\"\n      name=\"training-type\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-training.training-type.label' | translate }}\"\n      rx-id=\"training-type-field\"\n      required\n      disabled\n      [(ngModel)]=\"contextData.trainingType.displayName\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-uploader\n      class=\"form-group d-block\"\n      name=\"csv-file\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-training.csv-file.label' | translate }}\"\n      rx-id=\"csv-file-field\"\n      required\n      reusable=\"true\"\n      [uploadMode]=\"csvFileUploadMode\"\n      [allowedTypes]=\"['csv']\"\n      [(ngModel)]=\"dataSet.csvFile\"\n    >\n    </adapt-rx-uploader>\n\n    <adapt-rx-select\n      class=\"form-group d-block\"\n      name=\"locale\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-search.locale.label' | translate }}\"\n      rx-id=\"locale-field\"\n      required\n      [options]=\"localeOptions\"\n      [optionFormatter]=\"optionFormatter\"\n      [(ngModel)]=\"dataSet.locale\"\n    >\n    </adapt-rx-select>\n\n    <adapt-rx-counter\n      class=\"form-group d-block\"\n      name=\"training-data\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-training.training-data.label' | translate }}\"\n      rx-id=\"training-data-field\"\n      placeholder=\"0\"\n      adaptMin=\"0\"\n      adaptMax=\"100\"\n      min=\"0\"\n      max=\"100\"\n      required\n      (ngModelChange)=\"onTrainDataPercentCounterChange($event)\"\n      [(ngModel)]=\"dataSet.trainDataPercent\"\n    >\n    </adapt-rx-counter>\n\n    <adapt-rx-counter\n      class=\"form-group d-block\"\n      name=\"test-data\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-training.test-data.label' | translate }}\"\n      rx-id=\"test-data-field\"\n      placeholder=\"0\"\n      adaptMin=\"0\"\n      adaptMax=\"100\"\n      min=\"0\"\n      max=\"100\"\n      required\n      (ngModelChange)=\"onTestDataPercentCounterChange($event)\"\n      [(ngModel)]=\"dataSet.testDataPercent\"\n    >\n    </adapt-rx-counter>\n  </form>\n</div>\n\n<div class=\"dp-footer\">\n  <button\n    class=\"mr-2\"\n    type=\"button\"\n    rx-id=\"save-button\"\n    adapt-button\n    btn-type=\"primary\"\n    [disabled]=\"fileDataSetForm.pristine || fileDataSetForm.invalid\"\n    (click)=\"onSaveClick()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button class=\"mr-2\" type=\"button\" rx-id=\"close-button\" adapt-button btn-type=\"secondary\" (click)=\"onCloseClick()\">\n    {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n  </button>\n</div>\n"]}