{"version":3,"file":"named-list-filter-expression-configurator.class.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/designer/expression-configurator/named-list-filter-expression-configurator.class.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injector } from '@angular/core';\nimport { map, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { chain, map as _map } from 'lodash';\nimport { RxViewExpressionConfigurator } from './view-expression-configurator.class';\nimport { RxViewDataDictionaryService } from '../data-dictionary/view-data-dictionary.service';\nimport { RxDefaultExpressionEvaluatorService, IExpressionEvaluator } from '@helix/platform/view/api';\nimport {\n  ExpressionOperatorGroup,\n  ExpressionOperatorRowsByGroup,\n  IDataDictionaryBranch,\n  IExpressionConfiguratorDefaultPropertyConfig\n} from '@helix/platform/shared/api';\nimport {\n  IFieldDefinition,\n  IRecordDefinition,\n  RxRecordDefinitionCacheService,\n  RX_RECORD_DEFINITION\n} from '@helix/platform/record/api';\nimport { RxNamedListDefinitionCacheService } from '@helix/platform/named-list/api';\n\nexport class NamedListFilterExpressionConfigurator extends RxViewExpressionConfigurator {\n  private rxNamedListDefinitionCacheService = this.injector.get(RxNamedListDefinitionCacheService);\n  private rxRecordDefinitionCacheService = this.injector.get(RxRecordDefinitionCacheService);\n  private rxViewDataDictionaryService = this.injector.get(RxViewDataDictionaryService);\n  private rxDefaultExpressionEvaluatorService = this.injector.get(RxDefaultExpressionEvaluatorService);\n\n  constructor(private fieldDefinition: IFieldDefinition, protected injector: Injector) {\n    super(injector);\n  }\n\n  commonDataDictionary$ = this.rxNamedListDefinitionCacheService\n    .getNamedListDefinition(this.fieldDefinition.namedListDefinition)\n    .pipe(\n      switchMap((namedListDefinition) =>\n        this.rxRecordDefinitionCacheService.getRecordDefinition(namedListDefinition.recordDefinitionName)\n      ),\n      switchMap((recordDefinition) => this.getNamedListBranch(recordDefinition)),\n      withLatestFrom(this.rxViewDataDictionaryService.getCommonDataDictionary()),\n      map(([namedListBranch, dataDictionary]) => [namedListBranch, ...dataDictionary])\n    );\n\n  getExpressionEvaluator(): IExpressionEvaluator {\n    return this.rxDefaultExpressionEvaluatorService;\n  }\n\n  getDefaultConfig(): IExpressionConfiguratorDefaultPropertyConfig {\n    return {\n      ...super.getDefaultConfig(),\n      operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.AllServer)\n    };\n  }\n\n  private getNamedListBranch(recordDefinition: IRecordDefinition): Observable<IDataDictionaryBranch> {\n    const namedListDictionaryNodes = chain(recordDefinition.fieldDefinitions)\n      .reject({ resourceType: RX_RECORD_DEFINITION.resourceTypes.attachment })\n      .map((fieldDefinition) => ({\n        label: fieldDefinition.name,\n        expression: `'${fieldDefinition.id}'`,\n        icon: 'd-icon-file_o_gear',\n        children:\n          fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.selection\n            ? [\n                {\n                  label: 'Options',\n                  children: _map(fieldDefinition.optionNamesById, (optionName, optionValue) => ({\n                    label: optionName,\n                    expression: optionValue,\n                    icon: 'd-icon-file_o_gear'\n                  }))\n                }\n              ]\n            : []\n      }))\n      .sortBy('label')\n      .value();\n\n    return of({\n      label: 'Filter by',\n      expanded: true,\n      children: namedListDictionaryNodes\n    });\n  }\n}\n"]}