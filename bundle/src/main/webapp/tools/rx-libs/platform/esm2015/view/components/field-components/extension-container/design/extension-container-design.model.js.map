{"version":3,"file":"extension-container-design.model.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/field-components/extension-container/design/extension-container-design.model.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  getStandardPropsInspectorConfigs,\n  IViewComponentDesignSandbox,\n  IViewDesignerInspectorConfig,\n  validateAvailableOnDevicesProp,\n  validateCssClassNames,\n  ViewDesignerComponentModel\n} from '@helix/platform/view/designer';\nimport { ITextFormControlOptions, TextFormControlComponent } from '@helix/platform/shared/components';\nimport { Injector } from '@angular/core';\nimport { first, map, take, takeUntil } from 'rxjs/operators';\nimport { IExtensionContainerProperties } from './extension-container-design.types';\nimport { combineLatest } from 'rxjs';\nimport { Tooltip } from '@helix/platform/shared/api';\nimport {\n  RX_AVAILABLE_ON_DEVICES_PROP_NAME,\n  RX_STANDARD_PROPS_DEFAULT_VALUES,\n  RxViewComponentType\n} from '@helix/platform/view/api';\nimport { compact, flatten, isEmpty } from 'lodash';\n\nexport class ExtensionContainerDesignModel extends ViewDesignerComponentModel {\n  componentProperties$ = this.sandbox.componentProperties$;\n  parentGuid$ = this.sandbox.getParentComponentGuid(RxViewComponentType.RecordEditor).pipe(take(1));\n\n  initialProperties: IExtensionContainerProperties = {\n    name: '',\n    recordDefinition: '',\n    recordInstance: '',\n    ...RX_STANDARD_PROPS_DEFAULT_VALUES\n  };\n\n  constructor(\n    protected injector: Injector,\n    protected sandbox: IViewComponentDesignSandbox<IExtensionContainerProperties>\n  ) {\n    super(injector, sandbox);\n\n    combineLatest([this.parentGuid$, this.componentProperties$])\n      .pipe(first())\n      .subscribe(([parentGuid, componentProperties]) => {\n        const properties = {\n          ...this.initialProperties,\n          ...componentProperties,\n          recordInstance: `\\${view.components.${parentGuid}.recordInstance}`,\n          recordDefinition: `\\${view.components.${parentGuid}.recordDefinition}`\n        };\n\n        this.sandbox.updateComponentProperties(properties);\n        this.sandbox.updateInspectorConfig(this.getInspectorConfig());\n      });\n\n    combineLatest([\n      this.sandbox.getComponentPropertyValue('name').pipe(\n        map((value) => {\n          if (isEmpty(value)) {\n            return this.sandbox.createError('Name cannot be blank.', 'name');\n          }\n        })\n      ),\n      this.sandbox.getComponentPropertyValue('styles').pipe(map(validateCssClassNames)),\n      this.sandbox\n        .getComponentPropertyValue(RX_AVAILABLE_ON_DEVICES_PROP_NAME)\n        .pipe(map(validateAvailableOnDevicesProp))\n    ])\n      .pipe(map(flatten), map(compact), takeUntil(this.sandbox.destroyed$))\n      .subscribe((validationIssues) => this.sandbox.setValidationIssues(validationIssues));\n  }\n\n  private getInspectorConfig(): IViewDesignerInspectorConfig {\n    return {\n      inspectorSectionConfigs: [\n        {\n          label: 'General',\n          controls: [\n            {\n              name: 'name',\n              component: TextFormControlComponent,\n              options: {\n                label: 'Name',\n                required: true,\n                tooltip: new Tooltip('Enter a name to uniquely identify the Extension container')\n              } as ITextFormControlOptions\n            },\n            ...getStandardPropsInspectorConfigs()\n          ]\n        }\n      ]\n    };\n  }\n}\n"]}