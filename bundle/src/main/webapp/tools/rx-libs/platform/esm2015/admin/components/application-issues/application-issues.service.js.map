{"version":3,"file":"application-issues.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/admin/components/application-issues/application-issues.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAErC,OAAO,EAAE,QAAQ,EAAc,MAAM,MAAM,CAAC;AAC5C,OAAO,EAAE,4BAA4B,EAAwB,MAAM,4BAA4B,CAAC;;;;AAKhG,MAAM,OAAO,0BAA0B;IACrC,YAAoB,UAAsB,EAAU,4BAA0D;QAA1F,eAAU,GAAV,UAAU,CAAY;QAAU,iCAA4B,GAA5B,4BAA4B,CAA8B;IAAG,CAAC;IAElH,qBAAqB;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAsB,gDAAgD,CAAC,CAAC;IACpG,CAAC;IAED,iBAAiB;QACf,OAAO,QAAQ,CAAC;YACd,kBAAkB,EAAE,IAAI,CAAC,qBAAqB,EAAE;YAChD,kBAAkB,EAAE,IAAI,CAAC,4BAA4B,CAAC,gBAAgB,CACpE,4CAA4C,CAC7C;SACF,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YACX,MAAM,mBAAmB,GAAyB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAe,CAAC,CAAC;YACtG,MAAM,cAAc,GAAoB;gBACtC,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;gBAC3C,mBAAmB,EAAE,mBAAmB;aACzC,CAAC;YAEF,OAAO,cAAc,CAAC;QACxB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;uHAxBU,0BAA0B;2HAA1B,0BAA0B,cAFzB,MAAM;2FAEP,0BAA0B;kBAHtC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { IErrorReportingValue, IIssueReportingInfo, IIssuesResource } from './application-issues.types';\nimport { forkJoin, Observable } from 'rxjs';\nimport { RxSystemConfigurationService, ISystemConfiguration } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxApplicationIssuesService {\n  constructor(private httpClient: HttpClient, private rxSystemConfigurationService: RxSystemConfigurationService) {}\n\n  getIssueReportingInfo(): Observable<IIssueReportingInfo> {\n    return this.httpClient.get<IIssueReportingInfo>('/api/rx/application/oauth/token/IssueReporting');\n  }\n\n  getIssuesResource(): Observable<IIssuesResource> {\n    return forkJoin({\n      issueReportingInfo: this.getIssueReportingInfo(),\n      errorReportingInfo: this.rxSystemConfigurationService.getConfiguration(\n        'Error-Reporting-Service-Saas-Configuration'\n      )\n    }).pipe(\n      map((data) => {\n        const errorReportingValue: IErrorReportingValue = JSON.parse(data.errorReportingInfo.value as string);\n        const issuesResource: IIssuesResource = {\n          issueReportingInfo: data.issueReportingInfo,\n          errorReportingValue: errorReportingValue\n        };\n\n        return issuesResource;\n      })\n    );\n  }\n}\n"]}