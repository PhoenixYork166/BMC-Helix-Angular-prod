{"version":3,"file":"rich-expression-editor.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/shared/components/expression-editor/rich-expression-editor/rich-expression-editor.component.ts","../../../../../../../../libs/platform/shared/components/expression-editor/rich-expression-editor/rich-expression-editor.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  HostBinding,\n  Inject,\n  Injector,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\nimport { CKEditor4 } from 'ckeditor4-angular/ckeditor';\nimport { endsWith, flow, includes, isArray, isEmpty, last, noop, reduce, startsWith, trim, uniqueId } from 'lodash';\nimport { distinctUntilChanged, map, startWith } from 'rxjs/operators';\nimport { CKEditorComponent } from 'ckeditor4-angular';\nimport {\n  ExpressionOperator,\n  ExpressionParserToken,\n  IDataDictionary,\n  IDataDictionaryAutocompleteOption,\n  IDataDictionaryBranch,\n  IExpressionOperator,\n  IExpressionOperatorRow,\n  RxDataDictionaryUtils,\n  RxExpressionParserService,\n  RxThemingService,\n  RX_THEMING\n} from '@helix/platform/shared/api';\nimport { DOCUMENT } from '@angular/common';\nimport { RxObjectUtilsService, RxTreeService } from '@helix/platform/utils';\nimport { RX_DATA_DICTIONARY_ITEM_PLUGIN } from '../data-dictionary-item-plugin.constant';\n\nconst narrowOperatorButtons = new Set([\n  ExpressionOperator.LeftGrouping,\n  ExpressionOperator.RightGrouping,\n  ExpressionOperator.DoubleQuote,\n  ExpressionOperator.Add,\n  ExpressionOperator.Subtract,\n  ExpressionOperator.Multiply,\n  ExpressionOperator.Divide,\n  ExpressionOperator.Remainder,\n  ExpressionOperator.GreaterThan,\n  ExpressionOperator.LessThan,\n  ExpressionOperator.Equal,\n  ExpressionOperator.NotEqual,\n  ExpressionOperator.GreaterThanOrEqual,\n  ExpressionOperator.LessThanOrEqual\n]);\n\n@Component({\n  selector: 'rx-rich-expression-editor',\n  templateUrl: 'rich-expression-editor.component.html',\n  styleUrls: ['rich-expression-editor.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RichExpressionEditorComponent,\n      multi: true\n    }\n  ]\n})\nexport class RichExpressionEditorComponent implements ControlValueAccessor, OnInit, OnChanges {\n  type = CKEditor4.EditorType.INLINE;\n\n  ckConfig: CKEditor4.Config = {\n    startupFocus: true,\n    allowedContent: true,\n    extraPlugins: RX_DATA_DICTIONARY_ITEM_PLUGIN.name,\n    toolbar: [],\n    skin: 'expression-editor',\n    title: false,\n    entities: false\n  };\n\n  onChange: (value: string) => void;\n\n  @Input()\n  dataDictionary: IDataDictionary;\n\n  @Input()\n  operatorRows: IExpressionOperatorRow[] = [];\n\n  @ViewChild(CKEditorComponent, { static: true })\n  ckComponent: CKEditorComponent;\n\n  @HostBinding('class')\n  class = 'd-flex flex-column h-100 border';\n\n  control: AbstractControl;\n  operatorsByGroup: { platform: IExpressionOperator[]; custom: IExpressionOperator[] } = { custom: [], platform: [] };\n\n  private initialValue: string;\n  private isCkEditorInstanceReady = false;\n  private onTouched: () => void;\n  private dataDictionaryExpressionsMap: Map<string, IDataDictionaryBranch & { tooltip: string }>;\n  private menuItems: { [itemName: string]: number } = {};\n  private iFrameContentWindow: WindowProxy;\n\n  // Keep operators in descending order by length to find compound operator for autocomplete launch.\n  private autocompleteTriggers = [\n    ExpressionOperator.NotEqual,\n    ExpressionOperator.GreaterThanOrEqual,\n    ExpressionOperator.LessThanOrEqual,\n    ExpressionOperator.LessThan,\n    ExpressionOperator.GreaterThan,\n    ExpressionOperator.Equal\n  ];\n\n  constructor(\n    private injector: Injector,\n    @Inject(DOCUMENT) private document,\n    private rxTreeService: RxTreeService,\n    private rxExpressionParserService: RxExpressionParserService,\n    private rxObjectUtilsService: RxObjectUtilsService,\n    private rxDataDictionaryUtils: RxDataDictionaryUtils,\n    private rxThemingService: RxThemingService\n  ) {}\n\n  ngOnInit(): void {\n    this.control = this.injector.get(NgControl).control;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.dataDictionary) {\n      this.dataDictionaryExpressionsMap = flow(\n        (dataDictionary) => this.rxDataDictionaryUtils.addTooltips(dataDictionary),\n        (dataDictionary) =>\n          this.rxTreeService.flatten({\n            children: dataDictionary\n          }),\n        (dataDictionary) =>\n          reduce(\n            dataDictionary,\n            (dictionary, node) => {\n              if (isArray(node.expression)) {\n                node.expression.forEach((expressionItem) => {\n                  dictionary.push({\n                    ...node,\n                    expression: expressionItem\n                  });\n                });\n              } else {\n                dictionary.push(node);\n              }\n\n              return dictionary;\n            },\n            []\n          ),\n        (dataDictionary) => this.rxObjectUtilsService.mapFromArray(dataDictionary, 'expression')\n      )(this.dataDictionary);\n    }\n  }\n\n  writeValue(value: string): void {\n    if (value) {\n      // encode all HTML tags to avoid their rendering by CKEDITOR, i.e.\n      // html entered by user should be rendered as plain text\n      // For example, <b>STRING</b> should be displayed in the editor exactly the same, as <b>STRING</b>\n      value = CKEDITOR.tools.htmlEncode(value);\n\n      value = this.normalizeExpression(value);\n    } else {\n      value = null;\n    }\n\n    // Ckeditor instance is not ready on first \"writeValue\" call.\n    if (this.isCkEditorInstanceReady) {\n      this.ckComponent.instance.setData(value);\n    } else {\n      this.initialValue = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  onCkEditorInstanceReady(event: CKEditor4.EventInfo): void {\n    this.isCkEditorInstanceReady = true;\n\n    // Even if toolbar doesn't have any items, outer container is displayed and needs to be hidden.\n    this.document.getElementById(`${event.editor.id}_top`).style.display = 'none';\n\n    this.ckComponent.instance.on('change', () => {\n      const value = trim(this.ckComponent.instance.getData());\n\n      if (this.control.value !== value && !this.ckComponent.instance.gettingCursorPosition) {\n        this.onChange(value);\n\n        if (value) {\n          const { position, x, y } = this.getCursor();\n          const expressionBeforeCursor = value.substr(0, position);\n\n          const autocompleteTrigger = this.autocompleteTriggers.find((trigger) =>\n            endsWith(expressionBeforeCursor, trigger)\n          );\n\n          if (autocompleteTrigger) {\n            // Remove autocomplete trigger from expression, e.g '${foo} >=' -> '${foo} '.\n            const expressionToParse = expressionBeforeCursor.slice(0, -autocompleteTrigger.length);\n            const node = this.dataDictionaryExpressionsMap.get(this.getLastExpressionFragment(expressionToParse));\n\n            if (node?.autocompleteOptions) {\n              this.launchAutocomplete(node.autocompleteOptions, x, y);\n            }\n          }\n        }\n      }\n    });\n\n    this.ckComponent.instance.on(\n      'getData',\n      (evt: CKEDITOR.eventInfo) => {\n        evt.data.dataValue = evt.data.dataValue.replace(/<p>|<span>|<\\/p>|<\\/span>|<br \\/>/g, '');\n        evt.data.dataValue = CKEDITOR.tools.htmlDecode(evt.data.dataValue);\n\n        // convert 160 and 8203 charCode space to 32 which supported by server\n        evt.data.dataValue = evt.data.dataValue.replace(new RegExp(String.fromCharCode(160), 'g'), ' ');\n        evt.data.dataValue = evt.data.dataValue.replace(new RegExp(String.fromCharCode(8203), 'g'), ' ');\n      },\n      null,\n      null,\n      15\n    );\n\n    this.ckComponent.instance.on('key', (evt: CKEDITOR.eventInfo) => {\n      if (evt.data.keyCode === 13) {\n        // Enter key\n        evt.cancel();\n      }\n    });\n\n    this.ckComponent.instance.on('paste', (evt: CKEDITOR.eventInfo) => {\n      if (evt.data.method === 'drop') {\n        const value = evt.data.dataTransfer.getData('value');\n\n        if (value) {\n          evt.data.dataValue = value;\n        }\n      }\n\n      if (evt.data.type === 'html') {\n        const container = new CKEDITOR.dom.element('div');\n\n        container.appendHtml(evt.data.dataValue);\n\n        // When selected range with widget is copied to clipboard, start node of bookmark remains unremoved there\n        let elementToRemove = container.findOne('[id*=\"cke_bm_\"]');\n\n        if (elementToRemove) {\n          if (CKEDITOR.env.gecko && container.getChildCount() > 1) {\n            elementToRemove = elementToRemove.getParent();\n          }\n\n          elementToRemove.remove();\n          evt.data.dataValue = container.getHtml();\n        }\n\n        container.remove();\n      }\n    });\n\n    this.ckComponent.instance.on(\n      'toHtml',\n      (evt: CKEDITOR.eventInfo) => {\n        // Check if data value has already been converted to html,\n        // e.g. while dragging a pill from one position to another withing the expression\n        // there is no need to convert it to HTML again\n        if (!includes(evt.data.dataValue, 'rx-id=\"rx-data-dictionary-item\"')) {\n          evt.data.dataValue = this.rxExpressionParserService.parse(evt.data.dataValue, this.transformToTag.bind(this));\n        }\n\n        if (endsWith(evt.data.dataValue, '</span>')) {\n          evt.data.dataValue += '<span>&nbsp;</span>';\n        }\n      },\n      null,\n      null,\n      4\n    );\n\n    // Set initial value when \"toHtml\" listener is already added.\n    this.ckComponent.instance.setData(this.initialValue);\n\n    this.ckComponent.instance.contextMenu.addListener(() => this.menuItems);\n\n    this.ckComponent.instance.contextMenu.onHide = (): void => {\n      this.iFrameContentWindow.removeEventListener('keydown', this.keydownHandler);\n\n      this.menuItems = {};\n    };\n\n    this.control.statusChanges\n      .pipe(\n        map(() => this.control.disabled),\n        startWith(this.control.disabled),\n        distinctUntilChanged()\n      )\n      .subscribe((disabled) => {\n        this.ckComponent.instance.setReadOnly(disabled);\n      });\n\n    delete this.ckComponent.instance._.menuItems.paste;\n    delete this.ckComponent.instance._.menuItems.cut;\n    delete this.ckComponent.instance._.menuItems.copy;\n  }\n\n  insertHtml(html: string): void {\n    this.ckComponent.instance.insertHtml(html);\n  }\n\n  isNarrowOperator(operator: ExpressionOperator): boolean {\n    return narrowOperatorButtons.has(operator);\n  }\n\n  addOperator(value: string): void {\n    if (value !== ExpressionOperator.DoubleQuote && !startsWith(value, '$')) {\n      value += '&nbsp;';\n    }\n\n    this.insertHtml(value);\n  }\n\n  private launchAutocomplete(options: IDataDictionaryAutocompleteOption[], x: number, y: number): void {\n    CKEDITOR.skin.loadPart('rx-suggestions', noop);\n\n    const group = 'suggestions';\n\n    this.ckComponent.instance.addMenuGroup(group);\n\n    options.forEach((option, index) => {\n      const suggestionBoxItem = 'suggestionBox suggestionBoxItem' + index;\n\n      this.menuItems[suggestionBoxItem] = CKEDITOR.TRISTATE_OFF;\n\n      this.ckComponent.instance.addMenuItem(suggestionBoxItem, {\n        label: option.label,\n        group,\n\n        onClick: () => {\n          this.ckComponent.instance.focus();\n\n          this.ckComponent.instance.insertHtml(option.expression);\n        }\n      });\n    });\n\n    this.ckComponent.instance.contextMenu.show(this.ckComponent.instance.document.getBody(), null, x, y);\n\n    const menuPanel = this.ckComponent.instance.contextMenu._.panel;\n\n    menuPanel.element.addClass('rx-suggestions-panel');\n\n    this.iFrameContentWindow = menuPanel._.iframe.$.contentWindow;\n\n    this.iFrameContentWindow.document.documentElement.classList.add('rx-suggestions-panel_container');\n\n    this.rxThemingService.copyCssVariables(RX_THEMING.cssVariablesForCkEditor, this.iFrameContentWindow.document);\n\n    this.iFrameContentWindow.addEventListener('keydown', this.keydownHandler);\n  }\n\n  private transformToTag(token: ExpressionParserToken, expression: string): string {\n    let tag = expression;\n\n    if (\n      [\n        ExpressionParserToken.ArExpression,\n        ExpressionParserToken.RxExpression,\n        ExpressionParserToken.SingleQuoteRxExpression,\n        ExpressionParserToken.SingleQuoteTextExpression\n      ].includes(token)\n    ) {\n      const node = this.dataDictionaryExpressionsMap.get(expression);\n\n      if (node) {\n        tag = [\n          `<span class=\"expression-node\" rx-id=\"rx-data-dictionary-item\" ${RX_DATA_DICTIONARY_ITEM_PLUGIN.widgetAttributeName}=\"${expression}\" title=\"${node.tooltip}\">`,\n          `<span class=\"expression-node-icon ${node.icon || 'd-icon-arrow_right_square_input'}\">&nbsp;</span>`,\n          `<span class=\"expression-node-label\">${node.label}</span>`,\n          '</span>'\n        ].join('');\n      }\n    }\n\n    return tag;\n  }\n\n  private normalizeExpression(expression: string): string {\n    return this.rxExpressionParserService.parse(expression, (token, expressionFragment) => {\n      if (token === ExpressionParserToken.RxStringExpression) {\n        // since multiple \\x20 spaces get collapsed to a single space in HTML. we have to convert them to\n        // non-breaking spaces (&nbsp;) in order to preserve them in expression's literals\n        return expressionFragment.replace(/ /g, '&nbsp;');\n      } else if (token === ExpressionParserToken.ArExpression) {\n        return expressionFragment.replace('\\\\', '');\n      } else {\n        return expressionFragment;\n      }\n    });\n  }\n\n  // parse and get last expression, e.g.\n  // '${foo} + ${bar}' -> '${bar}'\n  // '${foo} + ${bar}  ' -> '${bar}'\n  // '${foo} + \"bar\"' -> undefined\n  private getLastExpressionFragment(expression: string): string {\n    const expressionMap = new Map<string, string>();\n\n    const lastExpressionFragment = last(\n      this.rxExpressionParserService\n        .parse(expression, (token, expressionFragment) => {\n          if (token !== ExpressionParserToken.RxStringExpression) {\n            const node = `$$rx-${uniqueId()}-rx$$`;\n\n            expressionMap.set(node, expressionFragment);\n\n            expressionFragment = node;\n          }\n\n          return expressionFragment;\n        })\n        .split(/(\\$\\$rx-[\\d]+-rx\\$\\$)/g)\n        .filter((element) => !isEmpty(element) && !/^((\\$\\$rx-)|(-rx\\$\\$)|([\\s]+))$/.test(element))\n    );\n\n    return expressionMap.get(lastExpressionFragment);\n  }\n\n  // prevent navigation to the previous page in Edge and Firefox when the user presses the Backspace key\n  private keydownHandler(event: KeyboardEvent): void {\n    if (event.code === 'Backspace') {\n      event.preventDefault();\n    }\n  }\n\n  // Insert a dummy element into current position of caret\n  // in order to get coordinates of caret and expression fragment before the caret\n  // https://ckeditor.com/old/comment/65868#comment-65868\n  private getCursor(): { x: number; y: number; position: number } {\n    this.ckComponent.instance.gettingCursorPosition = true;\n\n    const dummyElement = this.ckComponent.instance.document.createElement('span');\n    const range = this.ckComponent.instance.getSelection().getRanges()[0];\n\n    range.trim(false, true);\n\n    const startContainer = range.startContainer;\n    const nextNode = startContainer.getChild(range.startOffset);\n\n    if (nextNode) {\n      dummyElement.insertBefore(nextNode);\n    } else {\n      startContainer.append(dummyElement);\n    }\n\n    let x = 0;\n    let y = 0;\n\n    let nodeElement = dummyElement.$;\n\n    while (nodeElement.offsetParent) {\n      x += nodeElement.offsetLeft;\n      y += nodeElement.offsetTop;\n      nodeElement = nodeElement.offsetParent;\n    }\n\n    x += nodeElement.offsetLeft;\n    y += nodeElement.offsetTop;\n    y += 30;\n\n    dummyElement.setText(this.ckComponent.instance.id);\n\n    const position = this.ckComponent.instance.getData().indexOf(this.ckComponent.instance.id);\n\n    dummyElement.remove();\n\n    this.ckComponent.instance.gettingCursorPosition = false;\n\n    return {\n      x,\n      y,\n      position\n    };\n  }\n}\n","<ckeditor\n  class=\"flex-grow-1 position-relative form-control border\"\n  [config]=\"ckConfig\"\n  [type]=\"type\"\n  (ready)=\"onCkEditorInstanceReady($event)\"\n  [ngClass]=\"{ 'invalid-expression-border': control.invalid }\"\n></ckeditor>\n\n<adapt-rx-feedback [errors]=\"control.errors\"></adapt-rx-feedback>\n\n<div class=\"border-top bg-gray-200 pt-3 pb-1 px-2\" *ngIf=\"control.enabled\">\n  <div class=\"d-flex flex-wrap justify-content-center\" *ngFor=\"let row of operatorRows\">\n    <button\n      adapt-button\n      type=\"button\"\n      btn-type=\"secondary\"\n      class=\"mx-1 mb-2 bg-white\"\n      [ngClass]=\"isNarrowOperator(operator.value) ? 'narrow-operator' : 'wide-operator'\"\n      (click)=\"addOperator(operator.value)\"\n      [adaptPopover]=\"operator.tooltip ? tooltipContent : null\"\n      [popoverTitle]=\"operator.tooltip?.title\"\n      triggers=\"mouseover:mouseout\"\n      placement=\"auto\"\n      *ngFor=\"let operator of row\"\n    >\n      {{ operator.displayValue }}\n\n      <ng-template #tooltipContent>\n        <span [innerHtml]=\"operator?.tooltip?.content\"></span>\n      </ng-template>\n    </button>\n  </div>\n</div>\n"]}