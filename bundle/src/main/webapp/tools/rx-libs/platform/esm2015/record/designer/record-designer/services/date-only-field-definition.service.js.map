{"version":3,"file":"date-only-field-definition.service.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/record/designer/record-designer/services/date-only-field-definition.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAClE,OAAO,EAAE,4BAA4B,EAAE,MAAM,iCAAiC,CAAC;AAC/E,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAGrD,OAAO,EAAE,wBAAwB,EAA2B,MAAM,mCAAmC,CAAC;;AAKtG,MAAM,OAAO,gCAAiC,SAAQ,4BAA4B;IAGhF,YAAY,QAAkB;QAC5B,KAAK,CAAC,QAAQ,CAAC,CAAC;QAHlB,iBAAY,GAAG,oBAAoB,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;IAIpE,CAAC;IAED,uBAAuB,CACrB,UAAuC,EACvC,eAAuC,EACvC,UAAmB;QAEnB,MAAM,eAAe,GAAG,KAAK,CAAC,uBAAuB,CAAC,UAAU,EAAE,eAAe,EAAE,UAAU,CAAC,CAAC;QAE/F,iEAAiE;QACjE,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC/B,IAAI,EAAE,cAAc;YACpB,UAAU,EAAE,UAAU;YACtB,SAAS,EAAE,wBAAwB;YACnC,OAAO,EAAE;gBACP,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,oDAAoD,CAAC;aAChE;SAC7B,CAAC,CAAC;QAEH,OAAO,eAAe,CAAC;IACzB,CAAC;;6HAzBU,gCAAgC;iIAAhC,gCAAgC,cAF/B,MAAM;2FAEP,gCAAgC;kBAH5C,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { DateFormControlComponent, IDateFormControlOptions } from '@helix/platform/shared/components';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxDateOnlyFieldDefinitionService extends RxBaseFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    // Adding controls specific to date only field to Details section\n    inspectorConfig[1].controls.push({\n      name: 'defaultValue',\n      isDisabled: isReadOnly,\n      component: DateFormControlComponent,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n      } as IDateFormControlOptions\n    });\n\n    return inspectorConfig;\n  }\n}\n"]}