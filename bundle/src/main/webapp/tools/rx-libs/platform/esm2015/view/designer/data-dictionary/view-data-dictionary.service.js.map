{"version":3,"file":"view-data-dictionary.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/designer/data-dictionary/view-data-dictionary.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ViewDesignerFacade } from '../+state/view-designer.facade';\nimport { distinctUntilChanged, filter, map, shareReplay, withLatestFrom } from 'rxjs/operators';\nimport { combineLatest, Observable } from 'rxjs';\nimport { IDataDictionary, IDataDictionaryBranch, RxDataDictionaryUtils } from '@helix/platform/shared/api';\nimport { compact, filter as _filter, find, flow, get, isEqual, map as _map, take } from 'lodash';\nimport { getChildGuidsFromModel } from '../core/layout-helpers';\nimport { RxViewDataDictionaryBuilderService } from '../core/view-data-dictionary-builder.service';\nimport { RX_EXPRESSION_FUNCTIONS, RxViewComponentRegistryService, RxViewLayout } from '@helix/platform/view/api';\nimport { IViewDesignModelState } from '../interfaces/view-design-model-state.interface';\nimport { IViewDesignerSettablePropertiesDataDictionaryState } from '../interfaces/view-designer-settable-properties-data-dictionary.state';\nimport { RxObjectUtilsService } from '@helix/platform/utils';\nimport { IViewDesignerViewCommonDataDictionaryState } from '../interfaces/view-designer-view-data-dictionary-state.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDataDictionaryService {\n  private componentsCommonDataDictionaryStateClone$ = this.viewDesignerFacade.componentsCommonDataDictionaryState$.pipe(\n    map((componentsDataDictionaryState) =>\n      componentsDataDictionaryState ? this.rxObjectUtilsService.cloneDeep(componentsDataDictionaryState) : {}\n    ),\n    shareReplay(1)\n  );\n\n  private viewCommonDataDictionaryStateClone$ = this.viewDesignerFacade.viewCommonDataDictionaryState$.pipe(\n    filter<IViewDesignerViewCommonDataDictionaryState>(Boolean),\n    map((viewDataDictionary) => this.rxObjectUtilsService.cloneDeep(viewDataDictionary)),\n    shareReplay(1)\n  );\n\n  commonDataDictionary$ = this.getCommonDataDictionary();\n\n  settablePropertiesDataDictionary$ = this.viewDesignerFacade.settablePropertiesDataDictionaryState$.pipe(\n    withLatestFrom(this.viewDesignerFacade.viewDesignerModelState$),\n    map(([settablePropsDataDictionaryState, viewDesignerModelState]) =>\n      this.rxObjectUtilsService.cloneDeep(\n        this.getSettablePropsDataDictionary(settablePropsDataDictionaryState, viewDesignerModelState)\n      )\n    )\n  );\n\n  constructor(\n    private viewDesignerFacade: ViewDesignerFacade,\n    private rxViewDataDictionaryBuilderService: RxViewDataDictionaryBuilderService,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private rxObjectUtilsService: RxObjectUtilsService,\n    private rxDataDictionaryUtils: RxDataDictionaryUtils\n  ) {}\n\n  getActionDataDictionary(guid: string): Observable<IDataDictionary> {\n    return combineLatest([this.viewDesignerFacade.actionsDataDictionaryState$, this.getCommonDataDictionary()]).pipe(\n      map(([actionsDataDictionaryState, commonDataDictionary]) => {\n        const currentActionData = find(actionsDataDictionaryState, { guid });\n\n        return [\n          {\n            label: 'Actions',\n            children: currentActionData\n              ? flow(\n                  (branches) => take(branches, currentActionData.index),\n                  (branches) => _map(branches, 'dataDictionaryBranch'),\n                  compact,\n                  (branches) => _filter(branches, (branch) => branch.children?.length),\n                  (branches) => this.rxObjectUtilsService.cloneDeep(branches)\n                )(actionsDataDictionaryState)\n              : []\n          },\n          ...commonDataDictionary\n        ];\n      }),\n      // TODO: performance\n      distinctUntilChanged(isEqual)\n    );\n  }\n\n  getComponentCommonDataDictionary(guid: string): Observable<IDataDictionaryBranch> {\n    return this.componentsCommonDataDictionaryStateClone$.pipe(map((state) => state[guid]));\n  }\n\n  getCommonDataDictionary(componentBranchToReplace?: {\n    [guid: string]: IDataDictionaryBranch;\n  }): Observable<IDataDictionary> {\n    return combineLatest([\n      this.viewCommonDataDictionaryStateClone$,\n      this.componentsCommonDataDictionaryStateClone$.pipe(\n        map((componentsDataDictionaryState) =>\n          Object.values(\n            componentBranchToReplace\n              ? { ...componentsDataDictionaryState, ...componentBranchToReplace }\n              : componentsDataDictionaryState\n          )\n        )\n      )\n    ]).pipe(\n      map(([viewDataDictionaryBranch, componentDataDictionaryBranches]) => [\n        {\n          label: 'General',\n          children: [\n            {\n              label: 'Current user',\n              icon: 'd-icon-dollar',\n              expression: '${keywords.user}'\n            },\n            {\n              label: 'New line',\n              icon: 'd-icon-dollar',\n              expression: '${keywords.newLine}'\n            }\n          ]\n        },\n        {\n          label: 'Functions',\n          children: this.rxDataDictionaryUtils.getFunctionsDataDictionaryBranch(RX_EXPRESSION_FUNCTIONS)\n        },\n        {\n          ...viewDataDictionaryBranch,\n          children: [\n            { label: 'Components', children: compact(componentDataDictionaryBranches), expanded: true },\n            ...viewDataDictionaryBranch.children\n          ]\n        }\n      ])\n    );\n  }\n\n  private getSettablePropsDataDictionary(settablePropsDataDictionaryState, viewDesignerModelState): IDataDictionary {\n    return getChildGuidsFromModel(viewDesignerModelState.viewDesignModel)\n      .map((guid) =>\n        this.getSettablePropsDataDictionaryBranch(guid, viewDesignerModelState, settablePropsDataDictionaryState, true)\n      )\n      .filter(Boolean);\n  }\n\n  private getSettablePropsDataDictionaryBranch(\n    guid: string,\n    modelState: IViewDesignModelState,\n    settablePropsState: IViewDesignerSettablePropertiesDataDictionaryState,\n    expanded = false\n  ): IDataDictionaryBranch {\n    const componentPropsState = settablePropsState[guid];\n    const model = modelState.viewComponentDesignModels[guid];\n    const descriptor = this.rxViewComponentRegistryService.get(model.type);\n    const childGuids = descriptor.outlets && model.layout ? RxViewLayout.getViewLayoutChildGuids(model.layout) : null;\n\n    const componentsDataDictionary = _map(childGuids, (componentGuid) =>\n      this.getSettablePropsDataDictionaryBranch(componentGuid, modelState, settablePropsState)\n    ).filter(Boolean);\n\n    const propsDataDictionary = get(componentPropsState, 'dataDictionary', []);\n\n    if (componentsDataDictionary.length || propsDataDictionary.length) {\n      return {\n        label: componentPropsState?.componentName || descriptor.name,\n        expanded,\n        children:\n          componentsDataDictionary.length && propsDataDictionary.length\n            ? [\n                {\n                  label: 'Components',\n                  children: componentsDataDictionary\n                },\n                {\n                  label: 'Properties',\n                  children: propsDataDictionary\n                }\n              ]\n            : componentsDataDictionary.length\n            ? componentsDataDictionary\n            : propsDataDictionary\n      };\n    }\n  }\n}\n"]}