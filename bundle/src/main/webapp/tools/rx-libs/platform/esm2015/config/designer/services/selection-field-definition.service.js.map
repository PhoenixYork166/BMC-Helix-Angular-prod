{"version":3,"file":"selection-field-definition.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/config/designer/services/selection-field-definition.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAErD,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAElE,OAAO,EAAmC,8BAA8B,EAAE,MAAM,mCAAmC,CAAC;AACpH,OAAO,EAAE,0BAA0B,EAAE,MAAM,iCAAiC,CAAC;AAC7E,OAAO,EAAoB,mBAAmB,EAAE,MAAM,wBAAwB,CAAC;AAC/E,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;;AAMjC,MAAM,OAAO,+BAAgC,SAAQ,0BAA0B;IAG7E,YAAY,QAAkB;QAC5B,KAAK,CAAC,QAAQ,CAAC,CAAC;QAHlB,aAAQ,GAAG,oBAAoB,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC;IAIjE,CAAC;IAED,uBAAuB,CAAC,OAAsB;;QAC5C,MAAM,eAAe,GAAG,KAAK,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;QAE/D,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE;YACvC,IAAI,EAAE,gCAAgC;YACtC,SAAS,EAAE,8BAA8B;YACzC,OAAO,EAAE;gBACP,YAAY,EAAE,MAAA,OAAO,CAAC,8BAA8B,0CAAE,YAAY;gBAClE,eAAe,EAAE,MAAA,OAAO,CAAC,8BAA8B,0CAAE,eAAe;gBACxE,gBAAgB,EAAE,MAAA,OAAO,CAAC,8BAA8B,0CAAE,gBAAgB;aACxC;SACrC,CAAC,CAAC;QAEH,OAAO,eAAe,CAAC;IACzB,CAAC;IAED,QAAQ,CAAC,UAAuC;;QAC9C,MAAM,gBAAgB,GAAG,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAEpD,IAAI,OAAO,CAAC,MAAA,UAAU,CAAC,8BAA8B,0CAAE,eAAe,CAAC,EAAE;YACvE,gBAAgB,CAAC,IAAI,CAAC;gBACpB,IAAI,EAAE,mBAAmB,CAAC,KAAK;gBAC/B,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACxC,qEAAqE,EACrE,EAAE,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,8CAA8C,CAAC,EAAE,CAChG;gBACD,IAAI,EAAE;oBACJ,YAAY,EAAE,gCAAgC;oBAC9C,IAAI,EAAE,UAAU,CAAC,IAAI;iBACtB;aACF,CAAC,CAAC;SACJ;QAED,OAAO,gBAAgB,CAAC;IAC1B,CAAC;;4HAzCU,+BAA+B;gIAA/B,+BAA+B,cAF9B,MAAM;2FAEP,+BAA+B;kBAH3C,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { ISelectionFieldOptionProperties, SelectionFieldOptionsComponent } from '@helix/platform/shared/components';\nimport { BaseFieldDefinitionService } from './base-field-definition.service';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { isEmpty } from 'lodash';\nimport { IConfigFieldDefinitionModel } from '../config-designer.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelectionFieldDefinitionService extends BaseFieldDefinitionService {\n  dataType = RX_RECORD_DEFINITION.dataTypes.selection.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(options);\n\n    inspectorConfig[1].controls.splice(1, 0, {\n      name: 'selectionFieldOptionProperties',\n      component: SelectionFieldOptionsComponent,\n      options: {\n        defaultValue: options.selectionFieldOptionProperties?.defaultValue,\n        optionNamesById: options.selectionFieldOptionProperties?.optionNamesById,\n        optionLabelsById: options.selectionFieldOptionProperties?.optionLabelsById\n      } as ISelectionFieldOptionProperties\n    });\n\n    return inspectorConfig;\n  }\n\n  validate(fieldModel: IConfigFieldDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel);\n\n    if (isEmpty(fieldModel.selectionFieldOptionProperties?.optionNamesById)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          { propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.options.label') }\n        ),\n        data: {\n          propertyName: 'selectionFieldOptionProperties',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n}\n"]}