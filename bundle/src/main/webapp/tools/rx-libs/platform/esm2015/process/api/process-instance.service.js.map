{"version":3,"file":"process-instance.service.js","sourceRoot":"","sources":["../../../../../../libs/platform/process/api/process-instance.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;;;AAOlD,MAAM,OAAO,wBAAwB;IACnC,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAE9C,GAAG,CAAC,qBAA6B,EAAE,iBAAyB;QAC1D,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CACxB,+CAA+C,kBAAkB,CAAC,qBAAqB,CAAC,IAAI,iBAAiB,EAAE,CAChH,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,qBAA6B,EAAE,iBAAyB;QAC7D,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CACxB,mDAAmD,kBAAkB,CACnE,qBAAqB,CACtB,IAAI,iBAAiB,OAAO,CAC9B,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,qBAA6B,EAAE,iBAAyB;QAClE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CACxB,mDAAmD,kBAAkB,CACnE,qBAAqB,CACtB,IAAI,iBAAiB,WAAW,EACjC;YACE,YAAY,EAAE,MAAM;SACrB,CACF,CAAC;IACJ,CAAC;;qHA1BU,wBAAwB;yHAAxB,wBAAwB,cAFvB,MAAM;2FAEP,wBAAwB;kBAHpC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IProcessInstance, IProcessInstanceLog } from './process-instance.interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxProcessInstanceService {\n  constructor(private httpClient: HttpClient) {}\n\n  get(processDefinitionName: string, processInstanceId: string): Observable<IProcessInstance> {\n    return this.httpClient.get<IProcessInstance>(\n      `/api/rx/application/process/processinstance/${encodeURIComponent(processDefinitionName)}/${processInstanceId}`\n    );\n  }\n\n  getLog(processDefinitionName: string, processInstanceId: string): Observable<IProcessInstanceLog> {\n    return this.httpClient.get<IProcessInstanceLog>(\n      `/api/rx/application/process/processinstance/log/${encodeURIComponent(\n        processDefinitionName\n      )}/${processInstanceId}/view`\n    );\n  }\n\n  downloadLog(processDefinitionName: string, processInstanceId: string): Observable<Blob> {\n    return this.httpClient.get(\n      `/api/rx/application/process/processinstance/log/${encodeURIComponent(\n        processDefinitionName\n      )}/${processInstanceId}/download`,\n      {\n        responseType: 'blob'\n      }\n    );\n  }\n}\n"]}