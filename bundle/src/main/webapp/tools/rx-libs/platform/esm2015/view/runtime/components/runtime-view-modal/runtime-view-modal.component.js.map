{"version":3,"file":"runtime-view-modal.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/runtime/components/runtime-view-modal/runtime-view-modal.component.ts","../../../../../../../../libs/platform/view/runtime/components/runtime-view-modal/runtime-view-modal.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACvE,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AACvD,OAAO,EAAE,KAAK,EAAgB,MAAM,MAAM,CAAC;AAC3C,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAC;AAE3F,OAAO,EAAE,sBAAsB,EAAE,MAAM,wBAAwB,CAAC;AAGhE,OAAO,EAAE,4BAA4B,EAAE,MAAM,qCAAqC,CAAC;;;;;;;;AAOnF,MAAM,OAAO,yBAAyB;IAUpC,YACU,4BAA0D,EAC1D,sBAA8C,EAC9C,gBAAkC,EAClC,cAAiC,EACrB,cAA+B,EAC/B,kBAAuC;QALnD,iCAA4B,GAA5B,4BAA4B,CAA8B;QAC1D,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAmB;QACrB,mBAAc,GAAd,cAAc,CAAiB;QAC/B,uBAAkB,GAAlB,kBAAkB,CAAqB;QAV7D,YAAO,GAAG,KAAK,CAAC;QAYd,IAAI,CAAC,OAAO,GAAG,kBAAkB,IAAI,cAAc,CAAC;QACpD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;QAE3C,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAEpC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACxC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAExC,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,OAAO,CAAC,4CAA4C,CAAC,CAAC;IAC3F,CAAC;IAED,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,UAAU;QACR,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;IACjD,CAAC;IAED,OAAO,CAAC,gBAA6C;QACnD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;IACvC,CAAC;IAED,YAAY;QACV,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAE1C,0FAA0F;QAC1F,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;IACtC,CAAC;IAED,WAAW;;QACT,MAAA,IAAI,CAAC,gBAAgB,0CAAE,WAAW,EAAE,CAAC;IACvC,CAAC;;sHApDU,yBAAyB;0GAAzB,yBAAyB,6DCftC,k9CA+DA;2FDhDa,yBAAyB;kBALrC,SAAS;mBAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,WAAW,EAAE,qCAAqC;oBAClD,SAAS,EAAE,CAAC,qCAAqC,CAAC;iBACnD;;0BAgBI,QAAQ;;0BACR,QAAQ","sourcesContent":["import { ChangeDetectorRef, Component, Optional } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NEVER, Subscription } from 'rxjs';\nimport { ActiveModalRef, DismissReasons, DockedPanelContext } from '@bmc-ux/adapt-angular';\n\nimport { RxUtilityModalsService } from '@helix/platform/ui-kit';\nimport { IRuntimeViewConfiguration } from '../../interfaces/runtime-view-configuration.interface';\nimport { IRuntimeViewOutputParameter } from '../../interfaces/runtime-view-output-parameter.interface';\nimport { RxRuntimeViewRegistryService } from '../../runtime-view-registry.service';\n\n@Component({\n  selector: 'rx-runtime-view-modal',\n  templateUrl: './runtime-view-modal.component.html',\n  styleUrls: ['./runtime-view-modal.component.scss']\n})\nexport class RuntimeViewModalComponent {\n  configuration: IRuntimeViewConfiguration;\n  context: ActiveModalRef | DockedPanelContext;\n  title: string;\n  notification: string;\n  isCancellable: boolean;\n  isBlade = false;\n  closeLabel: string;\n  busySubscription: Subscription;\n\n  constructor(\n    private rxRuntimeViewRegistryService: RxRuntimeViewRegistryService,\n    private rxUtilityModalsService: RxUtilityModalsService,\n    private translateService: TranslateService,\n    private changeDetector: ChangeDetectorRef,\n    @Optional() private activeModalRef?: ActiveModalRef,\n    @Optional() private dockedPanelContext?: DockedPanelContext\n  ) {\n    this.context = dockedPanelContext || activeModalRef;\n    this.isBlade = Boolean(dockedPanelContext);\n\n    const data = this.context.getData();\n\n    this.configuration = data.configuration;\n    this.title = data.title;\n    this.notification = data.notification;\n    this.isCancellable = data.isCancellable;\n\n    this.closeLabel = translateService.instant('com.bmc.arsys.rx.client.common.close.label');\n  }\n\n  onCancelView(): void {\n    this.context.dismiss(null);\n  }\n\n  closeModal(): void {\n    this.context.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  onClose(viewOutputParams: IRuntimeViewOutputParameter): void {\n    this.context.close(viewOutputParams);\n  }\n\n  onBeforeLoad(): void {\n    this.busySubscription = NEVER.subscribe();\n\n    // workaround: run changeDetector to avoid the ExpressionChangedAfterItHasBeenCheckedError\n    this.changeDetector.detectChanges();\n  }\n\n  onAfterLoad(): void {\n    this.busySubscription?.unsubscribe();\n  }\n}\n","<ng-container *ngIf=\"title || isCancellable\">\n  <div class=\"dp-header\" *ngIf=\"isBlade; else modalHeader\">\n    <span class=\"dp-title\">{{ title }}</span>\n    <button\n      class=\"close dp-close\"\n      rx-id=\"x-button\"\n      [attr.aria-label]=\"closeLabel\"\n      *ngIf=\"isCancellable\"\n      (click)=\"closeModal()\"\n    ></button>\n  </div>\n</ng-container>\n\n<ng-template #modalHeader>\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title\">{{ title }}</h5>\n    <button\n      class=\"close dp-close\"\n      rx-id=\"x-button\"\n      [attr.aria-label]=\"closeLabel\"\n      *ngIf=\"isCancellable\"\n      (click)=\"closeModal()\"\n    ></button>\n  </div>\n</ng-template>\n\n<adapt-alert\n  *ngIf=\"notification\"\n  class=\"pl-4 pt-4\"\n  [config]=\"{\n    content: notification,\n    type: 'inline',\n    variant: 'info'\n  }\"\n></adapt-alert>\n\n<div\n  [ngClass]=\"{\n    'modal-body p-0': !isBlade,\n    'dp-content': isBlade\n  }\"\n>\n  <div class=\"position-relative\">\n    <rx-busy-indicator\n      [options]=\"{\n        busy: busySubscription,\n        loaderType: 'lineLoader',\n        delay: 250,\n        backdrop: false,\n        message: null\n      }\"\n    >\n    </rx-busy-indicator>\n  </div>\n\n  <rx-runtime-view\n    [configuration]=\"configuration\"\n    (cancelView)=\"onCancelView()\"\n    (closeView)=\"onClose($event)\"\n    (beforeLoad)=\"onBeforeLoad()\"\n    (afterLoad)=\"onAfterLoad()\"\n  ></rx-runtime-view>\n</div>\n"]}