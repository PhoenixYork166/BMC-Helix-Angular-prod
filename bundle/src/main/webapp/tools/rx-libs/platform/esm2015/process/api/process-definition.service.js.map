{"version":3,"file":"process-definition.service.js","sourceRoot":"","sources":["../../../../../../libs/platform/process/api/process-definition.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAc,EAAE,EAAE,MAAM,MAAM,CAAC;AACtC,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAE9B,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAC;AACtD,OAAO,EAAgC,SAAS,EAAE,MAAM,4BAA4B,CAAC;;;;AAOrF,MAAM,OAAO,0BAA0B;IACrC,YAAoB,UAAsB,EAAU,aAA4B;QAA5D,eAAU,GAAV,UAAU,CAAY;QAAU,kBAAa,GAAb,aAAa,CAAe;IAAG,CAAC;IAEpF,GAAG,CAAC,qBAA6B,EAAE,OAAwB;QACzD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAqB,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,EAAE,OAAO,CAAC,CAAC;IAC9F,CAAC;IAED,MAAM;QACJ,OAAO,EAAE,CAAC;YACR,YAAY,EAAE,KAAK;YACnB,SAAS,EAAE,EAAE;YACb,eAAe,EAAE,IAAI;YACrB,WAAW,EAAE,EAAE;YACf,YAAY,EAAE,EAAE;YAChB,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC;YACxC,WAAW,EAAE,EAAE;YACf,SAAS,EAAE,IAAI;YACf,aAAa,EAAE,IAAI;YACnB,cAAc,EAAE,IAAI;YACpB,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;YACrC,cAAc,EAAE,EAAE;YAClB,kBAAkB,EAAE,EAAE;YACtB,IAAI,EAAE,EAAE;YACR,YAAY,EAAE,EAAE;YAChB,iBAAiB,EAAE,IAAI;YACvB,cAAc,EAAE,IAAI;YACpB,KAAK,EAAE,IAAI;YACX,WAAW,EAAE,EAAE;YACf,SAAS,EAAE,KAAK;YAChB,KAAK,EAAE,SAAS,CAAC,oBAAoB,CAAC,MAAM;YAC5C,WAAW,EAAE,IAAI;SAClB,CAAC,CAAC;IACL,CAAC;IAED,wBAAwB,CAAC,cAAsB;QAC7C,OAAO,qBAAqB,cAAc,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC;IACjE,CAAC;IAED,uBAAuB,CAAC,SAAiB;QACvC,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,MAAM,CAAC,iBAAqC,EAAE,OAAsB;QAClE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAC;IAC9F,CAAC;IAED,eAAe,CAAC,qBAA6B,EAAE,OAAwB;QACrE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CACxB,iDAAiD,kBAAkB,CAAC,qBAAqB,CAAC,eAAe,EACzG,OAAO,CACR,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,qBAA6B,EAAE,OAAwB;QACpE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CACxB,iDAAiD,kBAAkB,CAAC,qBAAqB,CAAC,cAAc,EACxG,OAAO,CACR,CAAC;IACJ,CAAC;IAEO,MAAM,CAAC,qBAA8B;QAC3C,OAAO,qBAAqB;YAC1B,CAAC,CAAC,iDAAiD,kBAAkB,CAAC,qBAAqB,CAAC,EAAE;YAC9F,CAAC,CAAC,+CAA+C,CAAC;IACtD,CAAC;;uHAhEU,0BAA0B;2HAA1B,0BAA0B,cAFzB,MAAM;2FAEP,0BAA0B;kBAHtC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { last } from 'lodash';\n\nimport { RxGuidService } from '@helix/platform/utils';\nimport { IHttpGetParams, IHttpOptions, RX_BUNDLE } from '@helix/platform/shared/api';\n\nimport { IFieldDefinitionLight, IProcessDefinition } from './process-definition.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxProcessDefinitionService {\n  constructor(private httpClient: HttpClient, private rxGuidService: RxGuidService) {}\n\n  get(processDefinitionName: string, options?: IHttpGetParams): Observable<IProcessDefinition> {\n    return this.httpClient.get<IProcessDefinition>(this.getUrl(processDefinitionName), options);\n  }\n\n  getNew(): Observable<IProcessDefinition> {\n    return of({\n      allowOverlay: false,\n      artifacts: [],\n      contextKeyParam: null,\n      description: '',\n      flowElements: [],\n      guid: this.rxGuidService.generate('rx-'),\n      inputParams: [],\n      isEnabled: true,\n      lastChangedBy: null,\n      lastUpdateTime: null,\n      layout: JSON.stringify({ cells: [] }),\n      localVariables: [],\n      localizableStrings: {},\n      name: '',\n      outputParams: [],\n      overlayDescriptor: null,\n      overlayGroupId: null,\n      owner: null,\n      permissions: [],\n      runAsUser: false,\n      scope: RX_BUNDLE.definitionScopeTypes.bundle,\n      synchronous: null\n    });\n  }\n\n  getServerActionModelType(actionTypeName: string): string {\n    return `rx.ProcessActions.${actionTypeName.replace(':', '.')}`;\n  }\n\n  getServerActionTypeName(modelType: string): string {\n    return last(modelType.split('.'));\n  }\n\n  update(processDefinition: IProcessDefinition, options?: IHttpOptions): Observable<any> {\n    return this.httpClient.put(this.getUrl(processDefinition.name), processDefinition, options);\n  }\n\n  getOutputParams(processDefinitionName: string, options?: IHttpGetParams): Observable<IFieldDefinitionLight[]> {\n    return this.httpClient.get<IFieldDefinitionLight[]>(\n      `/api/rx/application/process/processdefinition/${encodeURIComponent(processDefinitionName)}/outputParams`,\n      options\n    );\n  }\n\n  getInputParams(processDefinitionName: string, options?: IHttpGetParams): Observable<IFieldDefinitionLight[]> {\n    return this.httpClient.get<IFieldDefinitionLight[]>(\n      `/api/rx/application/process/processdefinition/${encodeURIComponent(processDefinitionName)}/inputParams`,\n      options\n    );\n  }\n\n  private getUrl(processDefinitionName?: string): string {\n    return processDefinitionName\n      ? `/api/rx/application/process/processdefinition/${encodeURIComponent(processDefinitionName)}`\n      : '/api/rx/application/process/processdefinition';\n  }\n}\n"]}