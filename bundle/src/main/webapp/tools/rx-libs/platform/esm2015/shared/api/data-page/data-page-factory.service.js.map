{"version":3,"file":"data-page-factory.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/api/data-page/data-page-factory.service.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;;AAKrD,MAAM,OAAO,wBAAwB;IACnC,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAE1C,QAAQ,CAAC,YAAoB,EAAE,mCAAmE;QAChG,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY,EAAE,mCAAmC,CAAC,CAAC;IACxF,CAAC;;qHALU,wBAAwB;yHAAxB,wBAAwB,cAFvB,MAAM;2FAEP,wBAAwB;kBAHpC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { IDataPageRequestConfiguration } from './data-page-request-configuration.interface';\nimport { DataPage } from './data-page.class';\nimport { Injectable, Injector } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxDataPageFactoryService {\n  constructor(private injector: Injector) {}\n\n  withType(dataPageType: string, defaultDataPageRequestConfiguration?: IDataPageRequestConfiguration): DataPage {\n    return new DataPage(this.injector, dataPageType, defaultDataPageRequestConfiguration);\n  }\n}\n"]}