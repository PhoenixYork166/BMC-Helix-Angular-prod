{"version":3,"file":"named-filter-options-list.component.js","sourceRoot":"","sources":["../../../../../../../../../../libs/platform/view/components/record-grid/common/components/named-filter-options-list/named-filter-options-list.component.ts","../../../../../../../../../../libs/platform/view/components/record-grid/common/components/named-filter-options-list/named-filter-options-list.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvE,OAAO,EAAE,4BAA4B,EAAwB,MAAM,uBAAuB,CAAC;AAC3F,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAEhC,OAAO,EAAE,+BAA+B,EAAE,MAAM,qDAAqD,CAAC;;;;;AAOtG,MAAM,OAAO,iCAAiC;IAL9C;QA6BE,uBAAkB,GAAQ,EAAE,CAAC;QAGpB,6BAAwB,GAA2B,IAAI,YAAY,EAAY,CAAC;QAGzF,4BAAuB,GAA8B,EAAE,CAAC;KA+BzD;IAtDC,IACI,WAAW,CAAC,MAAuC;QACrD,MAAM,GAAG,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,YAAY,CAAC;QAEjC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;QACxG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAcD,iBAAiB,CAAC,KAAa,EAAE,MAA0C;QACzE,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC;IACxB,CAAC;IAED,yBAAyB;;QACvB,MAAM,aAAa,GAAG,IAAI,CAAC,0BAA0B,EAAE,CAAC;QACxD,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAElD,MAAM,KAAK,GAAG,IAAI,+BAA+B,CAC/C,MAAA,MAAA,IAAI,CAAC,WAAW,0CAAE,WAAW,mCAAI,IAAI,CAAC,kBAAkB,EACxD,aAAa,CACd,CAAC;QAEF,IAAI,CAAC,uBAAuB,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;IAChE,CAAC;IAEO,0BAA0B;QAChC,OAAO,MAAM,CACX,IAAI,CAAC,uBAAuB,EAC5B,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE;YACpB,IAAI,KAAK,EAAE;gBACT,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACjB;YAED,OAAO,MAAM,CAAC;QAChB,CAAC,EACD,EAAE,CACH,CAAC;IACJ,CAAC;;8HA5DU,iCAAiC;kHAAjC,iCAAiC,qVCX9C,qYASA;2FDEa,iCAAiC;kBAL7C,SAAS;mBAAC;oBACT,QAAQ,EAAE,8BAA8B;oBACxC,WAAW,EAAE,4CAA4C;oBACzD,SAAS,EAAE,CAAC,4CAA4C,CAAC;iBAC1D;8BAGC,kBAAkB;sBADjB,KAAK;gBAIN,YAAY;sBADX,KAAK;gBAIF,WAAW;sBADd,KAAK;gBAcN,uBAAuB;sBADtB,KAAK;gBAIN,kBAAkB;sBADjB,KAAK;gBAIG,wBAAwB;sBADhC,MAAM","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AdaptFilterControlsComponent, AdvancedFilterOption } from '@bmc-ux/adapt-angular';\nimport { reduce } from 'lodash';\nimport { IRecordGridColumnNamedFilterOption } from '../../types/record-grid.types';\nimport { RxRecordGridAdvancedFilterValue } from '../../types/record-grid-advanced-filter-value.class';\n\n@Component({\n  selector: 'rx-named-filter-options-list',\n  templateUrl: './named-filter-options-list.component.html',\n  styleUrls: ['./named-filter-options-list.component.scss']\n})\nexport class RxNamedFilterOptionsListComponent {\n  @Input()\n  namedFilterOptions: IRecordGridColumnNamedFilterOption[];\n\n  @Input()\n  filterOption: AdvancedFilterOption;\n\n  @Input()\n  set filterValue(values: RxRecordGridAdvancedFilterValue) {\n    const ids = values?.namedOptions;\n\n    this._filterValue = values;\n    Object.keys(this.namedFilterOptionsModel).forEach((key) => (this.namedFilterOptionsModel[key] = false));\n    ids?.forEach((id) => (this.namedFilterOptionsModel[id] = true));\n  }\n\n  get filterValue(): RxRecordGridAdvancedFilterValue {\n    return this._filterValue;\n  }\n\n  @Input()\n  filterControlsComponent: AdaptFilterControlsComponent;\n\n  @Input()\n  defaultFilterValue: any = [];\n\n  @Output()\n  readonly namedFilterOptionsChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n\n  private _filterValue: RxRecordGridAdvancedFilterValue;\n  namedFilterOptionsModel: { [id: string]: boolean } = {};\n\n  trackByOptionGuid(index: number, option: IRecordGridColumnNamedFilterOption): string {\n    return option['guid'];\n  }\n\n  onNamedFilterOptionChange(): void {\n    const selectedGuids = this.getSelectedNamedOptionsIds();\n    this.namedFilterOptionsChange.emit(selectedGuids);\n\n    const value = new RxRecordGridAdvancedFilterValue(\n      this.filterValue?.filterValue ?? this.defaultFilterValue,\n      selectedGuids\n    );\n\n    this.filterControlsComponent.onFilterOptionModelChange(value);\n  }\n\n  private getSelectedNamedOptionsIds(): string[] {\n    return reduce(\n      this.namedFilterOptionsModel,\n      (result, value, id) => {\n        if (value) {\n          result.push(id);\n        }\n\n        return result;\n      },\n      []\n    );\n  }\n}\n","<div class=\"options-wrapper\" *ngIf=\"namedFilterOptions?.length\">\n  <adapt-rx-checkbox\n    class=\"dropdown-item p-0 text-break\"\n    *ngFor=\"let option of namedFilterOptions; trackBy: trackByOptionGuid\"\n    [label]=\"option.title\"\n    [(ngModel)]=\"namedFilterOptionsModel[option.guid]\"\n    (ngModelChange)=\"onNamedFilterOptionChange()\"\n  ></adapt-rx-checkbox>\n</div>\n"]}