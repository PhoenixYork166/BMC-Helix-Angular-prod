{"version":3,"file":"named-filter-options.component.js","sourceRoot":"","sources":["../../../../../../../../../../../../libs/platform/view/components/record-grid/design/editors/record-grid-column-editor-control/record-grid-column-editor-modal/named-filter-options/named-filter-options.component.ts","../../../../../../../../../../../../libs/platform/view/components/record-grid/design/editors/record-grid-column-editor-control/record-grid-column-editor-modal/named-filter-options/named-filter-options.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACjD,OAAO,EAAE,iBAAiB,EAAE,MAAM,gBAAgB,CAAC;AACnD,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAClE,OAAO,EAAE,uBAAuB,EAAE,MAAM,0BAA0B,CAAC;AACnE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AAElD,OAAO,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AACxD,OAAO,EAAE,gDAAgD,EAAE,MAAM,2EAA2E,CAAC;;;;;AAc7I,MAAM,OAAO,qCAAsC,SAAQ,aAA6C;IAOtG,YAAoB,cAA8B;QAChD,KAAK,EAAE,CAAC;QADU,mBAAc,GAAd,cAAc,CAAgB;IAElD,CAAC;IAED,sBAAsB,CAAC,WAAoB;QACzC,IAAI,CAAC,cAAc;aAChB,SAAS,CAAC;YACT,KAAK,EAAE,iCAAiC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;YAC3D,IAAI,EAAE;gBACJ,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC3D,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,WAAW;gBACX,MAAM,EAAE,IAAI,CAAC,MAAM;aACe;YACpC,OAAO,EAAE,gDAAgD;YACzD,IAAI,EAAE,uBAAuB,CAAC,KAAY;YAC1C,MAAM,EAAE,2BAA2B;SACpC,CAAC;aACD,IAAI,CAAC,CAAC,kBAAkD,EAAE,EAAE;YAC3D,IAAI,CAAC,KAAK,GAAG,kBAAkB,CAAC;QAClC,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IAED,qBAAqB,CAAC,WAAmB;QACvC,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAED,kBAAkB,CAAC,iBAA+C;QAChE,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC;IACtD,CAAC;;kIArCU,qCAAqC;sHAArC,qCAAqC,oGARrC;QACT;YACE,OAAO,EAAE,iBAAiB;YAC1B,WAAW,EAAE,qCAAqC;YAClD,KAAK,EAAE,IAAI;SACZ;KACF,iDCnBH,o5CAuCA;2FDlBa,qCAAqC;kBAXjD,SAAS;mBAAC;oBACT,QAAQ,EAAE,yBAAyB;oBACnC,WAAW,EAAE,uCAAuC;oBACpD,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,iBAAiB;4BAC1B,WAAW,uCAAuC;4BAClD,KAAK,EAAE,IAAI;yBACZ;qBACF;iBACF;qGAGC,MAAM;sBADL,KAAK;gBAIN,OAAO;sBADN,KAAK","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { OpenViewActionModalSize } from '@helix/platform/view/api';\nimport { cloneDeep, noop, without } from 'lodash';\nimport { IColumnEditorColumnData } from '../../record-grid-column-editor.types';\nimport { RxModalService } from '@helix/platform/ui-kit';\nimport { RecordGridNamedFilterOptionsEditorModalComponent } from './named-filter-options-editor/named-filter-options-editor-modal.component';\nimport { INamedFilterOptionsEditorConfig, INamedFilterOptionDesignData } from './named-filter-options.types';\n\n@Component({\n  selector: 'rx-named-filter-options',\n  templateUrl: './named-filter-options.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RecordGridNamedFilterOptionsComponent,\n      multi: true\n    }\n  ]\n})\nexport class RecordGridNamedFilterOptionsComponent extends ValueAccessor<INamedFilterOptionDesignData[]> {\n  @Input()\n  column: IColumnEditorColumnData;\n\n  @Input()\n  tooltip: string;\n\n  constructor(private rxModalService: RxModalService) {\n    super();\n  }\n\n  openNamedFilterOptions(activeIndex?: number): void {\n    this.rxModalService\n      .openModal({\n        title: `Edit named filter options for ${this.column.title}`,\n        data: {\n          namedFilterOptions: this.value ? cloneDeep(this.value) : [],\n          isReadOnly: this.isDisabled,\n          activeIndex,\n          column: this.column\n        } as INamedFilterOptionsEditorConfig,\n        content: RecordGridNamedFilterOptionsEditorModalComponent,\n        size: OpenViewActionModalSize.Large as any,\n        testID: 'edit-named-filter-options'\n      })\n      .then((namedFilterOptions: INamedFilterOptionDesignData[]) => {\n        this.value = namedFilterOptions;\n      })\n      .catch(noop);\n  }\n\n  editNamedFilterOption(activeIndex: number): void {\n    this.openNamedFilterOptions(activeIndex);\n  }\n\n  removeFilterOption(namedFilterOption: INamedFilterOptionDesignData): void {\n    this.value = without(this.value, namedFilterOption);\n  }\n}\n","<adapt-button rx-id=\"open-modal-button\" btn-type=\"tertiary\" class=\"px-0 py-0 pb-1\" (click)=\"openNamedFilterOptions()\">\n  <adapt-icon name=\"plus_circle\" class=\"mr-1\"></adapt-icon>\n  Edit named filter options\n</adapt-button>\n\n<span *ngIf=\"tooltip\" class=\"align-middle\">\n  <span class=\"letter-space\"></span>\n  <adapt-icon [name]=\"'question_circle_o'\" [adaptPopover]=\"tooltip\" appendToBody=\"true\"></adapt-icon>\n</span>\n\n<div rx-id=\"named-filter-options\">\n  <div *ngIf=\"!value?.length\" class=\"text-tertiary\">No named filter options added.</div>\n  <ul class=\"list-unstyled mb-0\" *ngIf=\"value?.length > 0\">\n    <li class=\"border px-2 py-1 mb-1 d-flex align-items-center\" *ngFor=\"let option of value; let index = index\">\n      <strong class=\"mr-auto text-break\">{{ option.data.title }}</strong>\n\n      <button\n        class=\"d-icon-left-pencil p-1\"\n        adapt-button\n        btn-type=\"tertiary\"\n        size=\"small\"\n        type=\"button\"\n        (click)=\"editNamedFilterOption(index)\"\n        rx-id=\"edit-button\"\n      ></button>\n\n      <button\n        class=\"d-icon-left-cross_adapt p-1\"\n        adapt-button\n        btn-type=\"tertiary\"\n        size=\"small\"\n        type=\"button\"\n        *ngIf=\"!isDisabled\"\n        (click)=\"removeFilterOption(option)\"\n        rx-id=\"remove-button\"\n      ></button>\n    </li>\n  </ul>\n</div>\n"]}