{"version":3,"file":"functional-role-editor.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/admin/components/functional-roles/functional-role-editor/functional-role-editor.component.ts","../../../../../../../../libs/platform/admin/components/functional-roles/functional-role-editor/functional-role-editor.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Injector, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, NgForm, ValidationErrors } from '@angular/forms';\nimport { ActiveModalRef, AdaptTreeNodeTyped, DismissReasons, RxSelectOption, TreeWrap } from '@bmc-ux/adapt-angular';\nimport {\n  IBundleDescriptor,\n  IFunctionalRole,\n  IFunctionalRoleDescriptor,\n  IRole,\n  RX_APPLICATION,\n  RxGlobalCacheService,\n  RxNotificationService,\n  RxRoleDataPageService\n} from '@helix/platform/shared/api';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { chain, filter, find, has, map as _map } from 'lodash';\nimport { forkJoin, ReplaySubject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, finalize, takeUntil } from 'rxjs/operators';\nimport { RxFuntionalRoleService } from '../functional-role.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\n\n@Component({\n  selector: 'rx-functional-role-editor',\n  templateUrl: './functional-role-editor.component.html',\n  styleUrls: ['./functional-role-editor.component.scss']\n})\nexport class FunctionalRoleEditorComponent extends RxModalClass implements OnInit, OnDestroy {\n  applicationOptions: RxSelectOption[];\n  availableRoles: AdaptTreeNodeTyped<IFunctionalRoleDescriptor>[] = [];\n  busy: Subscription;\n  functionalRole: IFunctionalRole;\n  isEditMode = false;\n  isSaveButtonDisabled = true;\n  selectedApplication: RxSelectOption;\n\n  private oldRoleName: string;\n  private selectedRolesList: AdaptTreeNodeTyped<IFunctionalRoleDescriptor>[] = [];\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n  treeWrap: TreeWrap = TreeWrap.WrapAll;\n\n  @ViewChild('functionalRoleEditorForm', { read: NgForm, static: true })\n  functionalRoleEditorForm: NgForm;\n\n  validatorFn = this.functionalRoleNameValidator.bind(this);\n\n  constructor(\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private activeModalRef: ActiveModalRef,\n    private rxRoleDataPage: RxRoleDataPageService,\n    private rxFuntionalRoleService: RxFuntionalRoleService,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  get selectedRoles(): AdaptTreeNodeTyped<IFunctionalRoleDescriptor>[] {\n    return this.selectedRolesList;\n  }\n\n  set selectedRoles(roles: AdaptTreeNodeTyped<IFunctionalRoleDescriptor>[]) {\n    this.selectedRolesList = roles;\n    this.isSaveButtonDisabled = !this.functionalRoleEditorForm.valid;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    const roleQueryParams = {\n      propertySelection: ['applicationName', 'roleName'].join(','),\n      includeSmartAppRolesOnly: true\n    };\n\n    const excludedBundles = [\n      RX_APPLICATION.innovationStudioBundleId,\n      RX_APPLICATION.standardlib,\n      RX_APPLICATION.settingsBundleId,\n      RX_APPLICATION.platformBundleId\n    ];\n\n    const startIndex = 0;\n    const pageSize = -1;\n\n    this.functionalRole = this.activeModalRef.getData().functionalRole;\n    this.isEditMode = Boolean(this.functionalRole.id);\n\n    this.busy = forkJoin([\n      this.rxRoleDataPage.get({\n        params: { startIndex, pageSize, ...roleQueryParams }\n      }),\n      this.rxGlobalCacheService.getBundleDescriptors()\n    ]).subscribe(([roleDataPage, bundleDescriptors]) => {\n      this.applicationOptions = bundleDescriptors\n        .filter((bundleDescriptor) => !excludedBundles.includes(bundleDescriptor.id))\n        .sort((bundleDescriptor: IBundleDescriptor, bundleDescriptorToCompare: IBundleDescriptor) =>\n          bundleDescriptor.friendlyName.localeCompare(bundleDescriptorToCompare.friendlyName)\n        )\n        .map((bundleDescriptor: IBundleDescriptor) => ({\n          displayValue: bundleDescriptor.friendlyName,\n          value: bundleDescriptor.id\n        }));\n\n      if (!this.isEditMode) {\n        this.selectedApplication = [this.applicationOptions[0]];\n      } else {\n        let selectedApplication = find(this.applicationOptions, { value: this.functionalRole.applicationName });\n\n        if (!selectedApplication) {\n          selectedApplication = {\n            displayValue: this.functionalRole.applicationName,\n            value: this.functionalRole.applicationName\n          };\n\n          this.applicationOptions.push(selectedApplication);\n        }\n\n        this.selectedApplication = [selectedApplication];\n        this.oldRoleName = this.functionalRole.name;\n      }\n\n      this.availableRoles = chain(roleDataPage.data)\n        .groupBy('applicationName')\n        .map((roles, application) => ({\n          children: this.getChildren(roles as IRole[]),\n          leaf: false,\n          label: find(bundleDescriptors, { id: application }).friendlyName,\n          key: application,\n          data: { name: '', applicationName: application }\n        }))\n        .value();\n\n      if (this.isEditMode) {\n        this.updateParentNodesForSelectedRoles();\n      }\n    });\n\n    this.functionalRoleEditorForm.statusChanges\n      .pipe(distinctUntilChanged(), takeUntil(this.destroyed$))\n      .subscribe((value) => {\n        this.isSaveButtonDisabled = !this.functionalRoleEditorForm.valid || this.functionalRoleEditorForm.pristine;\n      });\n\n    this.functionalRoleEditorForm.valueChanges\n      .pipe(distinctUntilChanged(), takeUntil(this.destroyed$))\n      .subscribe((value) => {\n        this.isSaveButtonDisabled = !this.functionalRoleEditorForm.valid || this.functionalRoleEditorForm.pristine;\n      });\n  }\n\n  isDirty(): boolean {\n    return this.functionalRoleEditorForm.dirty;\n  }\n\n  private getChildren(rolesForApplication: IRole[]): AdaptTreeNodeTyped<IFunctionalRoleDescriptor>[] {\n    return rolesForApplication.map((role): AdaptTreeNodeTyped<IFunctionalRoleDescriptor> => {\n      const node: AdaptTreeNodeTyped<IFunctionalRoleDescriptor> = {\n        children: null,\n        leaf: true,\n        label: role.roleName,\n        key: `${role.applicationName}:${role.roleName}`,\n        data: { name: role.roleName, applicationName: role.applicationName }\n      };\n\n      if (this.isEditMode) {\n        this.checkAndAddToSelectedRoles(node);\n      }\n\n      return node;\n    });\n  }\n\n  private checkAndAddToSelectedRoles(node: AdaptTreeNodeTyped<IFunctionalRoleDescriptor>) {\n    if (this.functionalRole.applicationRoles) {\n      if (has(this.functionalRole.applicationRoles, node.data.applicationName)) {\n        const selectedRolesList = this.functionalRole.applicationRoles[node.data.applicationName];\n\n        if (selectedRolesList.includes(node.data.name)) {\n          this.selectedRolesList.push(node);\n        }\n      }\n    }\n  }\n\n  private updateParentNodesForSelectedRoles() {\n    _map(this.selectedRolesList, (role) => {\n      const parentNode = find(\n        this.availableRoles,\n        (availableRole) => availableRole.data.applicationName === role.data.applicationName\n      );\n\n      const selectedChildNodes = filter(this.selectedRolesList, (selectedRole) =>\n        parentNode.children.find(\n          (child) =>\n            child.data.name === selectedRole.data.name &&\n            parentNode.data.applicationName === selectedRole.data.applicationName\n        )\n      );\n\n      if (selectedChildNodes.length === parentNode.children.length) {\n        if (!this.selectedRolesList.includes(parentNode)) {\n          this.selectedRolesList.push(parentNode);\n        }\n      } else {\n        parentNode.partialSelected = true;\n      }\n    });\n  }\n\n  optionFormatter(option: RxSelectOption): string {\n    return option.displayValue;\n  }\n\n  save(): void {\n    this.allowDismiss = false;\n    this.isSaveButtonDisabled = true;\n\n    if (!this.isEditMode) {\n      this.functionalRole.applicationName = this.selectedApplication[0].value;\n    }\n\n    const leafNodes = filter(this.selectedRolesList, (role) => role.leaf);\n\n    this.functionalRole.applicationRoles = chain(leafNodes)\n      .groupBy((role) => role.data.applicationName)\n      .map((roles, applicationName) => ({\n        [applicationName]: roles.map((role) => role.label)\n      }))\n      .reduce((applicationName, roles) => Object.assign(applicationName, roles), {})\n      .value();\n\n    const result$ = this.isEditMode\n      ? this.rxFuntionalRoleService.save(this.functionalRole, this.oldRoleName)\n      : this.rxFuntionalRoleService.create(this.functionalRole);\n\n    result$\n      .pipe(\n        finalize(() => {\n          this.allowDismiss = true;\n          this.isSaveButtonDisabled = false;\n        })\n      )\n      .subscribe(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.admin.functional-roles.functional-role-saved.label')\n        );\n\n        this.activeModalRef.close(true);\n      });\n  }\n\n  functionalRoleNameValidator(control: AbstractControl): ValidationErrors | null {\n    return control.value && !RX_RECORD_DEFINITION.validDefinitionNameRegex.test(control.value)\n      ? {\n          invalidRoleName: {\n            message: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.functional-roles.functional-role-name-validation.message'\n            )\n          }\n        }\n      : null;\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n","<div class=\"modal-header\">\n  <h5 class=\"modal-title\">\n    {{\n      (isEditMode\n        ? 'com.bmc.arsys.rx.client.admin.functional-roles.edit-functional-role.label'\n        : 'com.bmc.arsys.rx.client.admin.functional-roles.create-functional-role.label'\n      ) | translate\n    }}\n  </h5>\n\n  <button class=\"close dp-close\" type=\"button\" rx-id=\"x-button\" [disabled]=\"!allowDismiss\" (click)=\"cancel()\"></button>\n</div>\n\n<div class=\"modal-body functional-role-editor-modal-body d-flex\">\n  <rx-busy-indicator [options]=\"{ busy: busy, loaderType: 'section' }\"></rx-busy-indicator>\n\n  <form #functionalRoleEditorForm=\"ngForm\" class=\"w-100\">\n    <div class=\"row h-100\" *ngIf=\"applicationOptions\">\n      <div class=\"col-6 d-flex flex-column mh-100 mt-2\">\n        <adapt-rx-select\n          class=\"form-group d-block\"\n          label=\"{{ 'com.bmc.arsys.rx.client.common.application-or-library.label' | translate }}\"\n          rx-id=\"application-name\"\n          [(ngModel)]=\"selectedApplication\"\n          [options]=\"applicationOptions\"\n          [optionFormatter]=\"optionFormatter\"\n          required=\"true\"\n          name=\"application\"\n          [readonly]=\"isEditMode\"\n        >\n        </adapt-rx-select>\n        <adapt-rx-textfield\n          rx-id=\"name\"\n          class=\"form-group d-block\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.functional-roles.functional-role-name.label' | translate }}\"\n          required=\"true\"\n          [(ngModel)]=\"functionalRole.name\"\n          name=\"name\"\n          [rxCustomValidators]=\"validatorFn\"\n        >\n        </adapt-rx-textfield>\n        <adapt-rx-textfield\n          rx-id=\"description\"\n          class=\"form-group d-block\"\n          required=\"true\"\n          [(ngModel)]=\"functionalRole.description\"\n          label=\"{{ 'com.bmc.arsys.rx.client.common.description.label' | translate }}\"\n          name=\"description\"\n        ></adapt-rx-textfield>\n        <adapt-rx-textfield\n          *ngIf=\"isEditMode\"\n          rx-id=\"id\"\n          class=\"form-group d-block\"\n          [(ngModel)]=\"functionalRole.id\"\n          label=\"{{ 'com.bmc.arsys.rx.client.common.id.label' | translate }}\"\n          name=\"id\"\n          [readonly]=\"true\"\n          [disabledStyleForReadonlyState]=\"true\"\n        ></adapt-rx-textfield>\n      </div>\n      <div class=\"col-6 d-flex flex-column mh-100 mt-2\">\n        <adapt-rx-control-label label=\"Roles\"> </adapt-rx-control-label>\n        <div class=\"card roles-list-wrapper flex-grow-1\">\n          <div class=\"card-block\">\n            <adapt-tree\n              *ngIf=\"availableRoles.length\"\n              [value]=\"availableRoles\"\n              filter=\"true\"\n              selectionMode=\"checkbox\"\n              [(selection)]=\"selectedRoles\"\n              [wrap]=\"treeWrap\"\n            >\n            </adapt-tree>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n<div class=\"modal-footer\">\n  <button\n    adapt-button\n    btn-type=\"primary\"\n    type=\"button\"\n    rx-id=\"save-button\"\n    (click)=\"save()\"\n    [adaptInlineLoader]=\"!allowDismiss\"\n    [disabled]=\"isSaveButtonDisabled || !allowDismiss\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n  <button\n    adapt-button\n    btn-type=\"secondary\"\n    type=\"button\"\n    rx-id=\"cancel-button\"\n    (click)=\"cancel()\"\n    [disabled]=\"!allowDismiss\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n"]}