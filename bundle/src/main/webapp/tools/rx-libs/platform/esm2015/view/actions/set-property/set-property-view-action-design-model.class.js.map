{"version":3,"file":"set-property-view-action-design-model.class.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/actions/set-property/set-property-view-action-design-model.class.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,yBAAyB,EAAE,MAAM,+BAA+B,CAAC;AAC1E,OAAO,EAAE,8BAA8B,EAAiC,MAAM,mCAAmC,CAAC;AAMlH,OAAO,EAAE,oBAAoB,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,gBAAgB,CAAC;AACnE,OAAO,EAAE,6CAA6C,EAAE,MAAM,0DAA0D,CAAC;AAGzH,MAAM,OAAO,kCAAmC,SAAQ,yBAAyB;IAkB/E,YACY,QAAkB,EACnB,OAAyE;QAElF,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAHf,aAAQ,GAAR,QAAQ,CAAU;QACnB,YAAO,GAAP,OAAO,CAAkE;QAnB1E,2BAAsB,GAAG,IAAI,6CAA6C,CAClF,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,EAC5B,IAAI,CAAC,IAAI,CACV,CAAC;QAmBA,IAAI,CAAC,OAAO,CAAC,iBAAiB;aAC3B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,6BAA6B,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;QAE7F,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,oBAAoB,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,YAAY,EAAE,EAAE;YAC5G,IAAI,YAAY,GAAG,IAAI,CAAC;YAExB,IAAI,YAAY,IAAI,YAAY,CAAC,MAAM,EAAE;gBACvC,mDAAmD;gBACnD,MAAM,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;gBAE7E,IAAI,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;oBACzB,YAAY,GAAG,sBAAsB,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;iBACxD;aACF;YAED,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC;gBAClC,YAAY;aACb,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IArCD,MAAM,CAAC,oBAAoB,CACzB,iBAA6F;QAE7F,uBACE,YAAY,EAAE,IAAI,EAClB,YAAY,EAAE,IAAI,EAClB,aAAa,EAAE,IAAI,IAChB,iBAAiB,EACpB;IACJ,CAAC;IA8BO,qBAAqB;QAC3B,OAAO;YACL;gBACE,IAAI,EAAE,cAAc;gBACpB,SAAS,EAAE,8BAA8B;gBACzC,OAAO,EAAE;oBACP,KAAK,EAAE,eAAe;oBACtB,eAAe,EAAE,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,cAAc,CAAC;oBAC9E,SAAS,EAAE,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,cAAc,CAAC;oBACnE,UAAU,EAAE,IAAI;iBACgB;aACnC;YACD;gBACE,IAAI,EAAE,eAAe;gBACrB,SAAS,EAAE,8BAA8B;gBACzC,OAAO,EAAE;oBACP,KAAK,EAAE,gBAAgB;oBACvB,eAAe,EAAE,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,eAAe,CAAC;oBAC/E,SAAS,EAAE,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,eAAe,CAAC;iBACpC;aACnC;SACF,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { Injector } from '@angular/core';\nimport { RxViewDesignerActionModel } from '@helix/platform/view/designer';\nimport { ExpressionFormControlComponent, IExpressionFormControlOptions } from '@helix/platform/shared/components';\nimport {\n  IViewActionDesignPropertyEditorConfig,\n  IViewActionDesignSandbox,\n  ViewActionDesignEditableProperties\n} from '@helix/platform/view/api';\nimport { distinctUntilChanged, pluck, take } from 'rxjs/operators';\nimport { RxSetPropertyViewActionExpressionConfigurator } from './set-property-view-action-expression-configurator.class';\nimport { ISetPropertyViewActionDesignProperties } from './set-property-view-action.interfaces';\n\nexport class RxSetPropertyViewActionDesignModel extends RxViewDesignerActionModel {\n  protected expressionConfigurator = new RxSetPropertyViewActionExpressionConfigurator(\n    this.injector,\n    this.sandbox.descriptor.name,\n    this.guid\n  );\n\n  static getInitialProperties(\n    initialProperties: ViewActionDesignEditableProperties<ISetPropertyViewActionDesignProperties>\n  ): ViewActionDesignEditableProperties<ISetPropertyViewActionDesignProperties> {\n    return {\n      componentApi: null,\n      propertyPath: null,\n      propertyValue: null,\n      ...initialProperties\n    };\n  }\n\n  constructor(\n    protected injector: Injector,\n    readonly sandbox: IViewActionDesignSandbox<ISetPropertyViewActionDesignProperties>\n  ) {\n    super(injector, sandbox);\n\n    this.sandbox.actionProperties$\n      .pipe(take(1))\n      .subscribe(() => this.sandbox.setActionPropertyEditorConfig(this.getActionEditorConfig()));\n\n    this.sandbox.actionProperties$.pipe(pluck('propertyPath'), distinctUntilChanged()).subscribe((propertyPath) => {\n      let componentApi = null;\n\n      if (propertyPath && propertyPath.length) {\n        // Extract <ID> from ${view.components.<ID>.<Path>}\n        const matches = propertyPath.match(/\\${view\\.components\\.([0-9a-z-]+)\\..+}/);\n\n        if (matches && matches[1]) {\n          componentApi = `\\${view.components.${matches[1]}.api}`;\n        }\n      }\n\n      this.sandbox.updateActionProperties({\n        componentApi\n      });\n    });\n  }\n\n  private getActionEditorConfig(): IViewActionDesignPropertyEditorConfig {\n    return [\n      {\n        name: 'propertyPath',\n        component: ExpressionFormControlComponent,\n        options: {\n          label: 'Property path',\n          dataDictionary$: this.expressionConfigurator.getDataDictionary('propertyPath'),\n          operators: this.expressionConfigurator.getOperators('propertyPath'),\n          isRequired: true\n        } as IExpressionFormControlOptions\n      },\n      {\n        name: 'propertyValue',\n        component: ExpressionFormControlComponent,\n        options: {\n          label: 'Property value',\n          dataDictionary$: this.expressionConfigurator.getDataDictionary('propertyValue'),\n          operators: this.expressionConfigurator.getOperators('propertyValue')\n        } as IExpressionFormControlOptions\n      }\n    ];\n  }\n}\n"]}