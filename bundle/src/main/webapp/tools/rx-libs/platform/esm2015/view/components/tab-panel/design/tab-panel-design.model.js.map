{"version":3,"file":"tab-panel-design.model.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/components/tab-panel/design/tab-panel-design.model.ts"],"names":[],"mappings":"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","sourcesContent":["import { map, shareReplay, take, takeUntil } from 'rxjs/operators';\nimport { isEmpty } from 'lodash';\nimport {\n  getStandardPropsInspectorConfigs,\n  IViewDesignerInspectorConfig,\n  validateStandardProps,\n  ViewDesignerComponentModel\n} from '@helix/platform/view/designer';\nimport { TextFormControlComponent } from '@helix/platform/shared/components';\nimport { Tooltip } from '@helix/platform/shared/api';\nimport {\n  IViewDesignerComponentModel,\n  RX_STANDARD_PROPS_DEFAULT_VALUES,\n  RxViewComponentType\n} from '@helix/platform/view/api';\nimport { ITabPanelProperties } from './tab-panel-design.types';\nimport { ITabContainerProperties } from './tab-container-design/tab-container-design.types';\nimport { combineLatest, ReplaySubject } from 'rxjs';\n\nexport class TabPanelDesignModel\n  extends ViewDesignerComponentModel<ITabPanelProperties>\n  implements IViewDesignerComponentModel<ITabPanelProperties>\n{\n  tabContainerGuids$ = this.sandbox.getChildComponentGuids().pipe(shareReplay(1));\n\n  tabContainerComponents$ = this.sandbox\n    .getChildComponents<ITabContainerProperties>((component) => component.type === RxViewComponentType.TabContainer)\n    .pipe(shareReplay(1), takeUntil(this.sandbox.destroyed$));\n\n  selectedTabGuid$ = new ReplaySubject<string>(null);\n\n  static getInitialProperties(initialProperties?: ITabPanelProperties): ITabPanelProperties {\n    return {\n      name: null,\n      ...RX_STANDARD_PROPS_DEFAULT_VALUES,\n\n      ...initialProperties\n    };\n  }\n\n  rxInit(): void {\n    this.sandbox.componentProperties$.pipe(take(1)).subscribe(() => {\n      this.sandbox.updateInspectorConfig(this.getInspector());\n    });\n\n    this.sandbox.componentProperties$.subscribe((componentProperties) => this.validate(componentProperties));\n\n    this.tabContainerGuids$\n      .pipe(\n        map((guids) => !isEmpty(guids)),\n        take(1)\n      )\n      .subscribe((hasChildComponents) => {\n        if (!hasChildComponents) {\n          this.sandbox.setChildren([\n            {\n              type: RxViewComponentType.TabContainer,\n              data: {\n                label: 'Tab 1'\n              }\n            },\n            {\n              type: RxViewComponentType.TabContainer,\n              data: {\n                label: 'Tab 2'\n              }\n            }\n          ]);\n        }\n      });\n\n    this.sandbox.getComponentPropertyValue('name').subscribe((name) => {\n      const componentName = name ? `${this.sandbox.descriptor.name} (${name})` : this.sandbox.descriptor.name;\n\n      this.sandbox.setSettablePropertiesDataDictionary(componentName, [\n        {\n          label: 'Hidden',\n          expression: this.getExpressionForProperty('hidden')\n        },\n        {\n          label: 'Active Tab Index',\n          expression: this.getExpressionForProperty('activeTabIndex')\n        }\n      ]);\n    });\n  }\n\n  addTab(): void {\n    this.sandbox.addComponent({\n      type: RxViewComponentType.TabContainer,\n\n      propertiesByName: {\n        label: 'New tab'\n      }\n    });\n  }\n\n  removeTab(guid: string): void {\n    this.sandbox.removeComponents([guid]);\n\n    combineLatest([this.selectedTabGuid$, this.tabContainerGuids$])\n      .pipe(take(1), takeUntil(this.sandbox.destroyed$))\n      .subscribe(([selectedTabGuid, tabContainerGuids]) => {\n        if (guid === selectedTabGuid) {\n          this.selectTab(tabContainerGuids[0]);\n        }\n      });\n  }\n\n  selectTab(guid: string, skipSelectComponent: boolean = false): void {\n    this.selectedTabGuid$.next(guid);\n\n    if (!skipSelectComponent) {\n      setTimeout(() => {\n        this.sandbox.selectComponent(guid);\n      });\n    }\n  }\n\n  dropPredicate(): boolean {\n    return false;\n  }\n\n  moveComponent(guid: string, insertIndex: number): void {\n    this.sandbox.moveComponent(guid, insertIndex, this.sandbox.guid);\n  }\n\n  private validate(properties: ITabPanelProperties): void {\n    this.sandbox.setValidationIssues(validateStandardProps(properties));\n  }\n\n  private getInspector(): IViewDesignerInspectorConfig {\n    return {\n      inspectorSectionConfigs: [\n        {\n          label: 'General',\n          controls: [\n            {\n              name: 'name',\n              component: TextFormControlComponent,\n              options: {\n                label: 'Name',\n                tooltip: new Tooltip('Enter a name to uniquely identify the Tab panel')\n              }\n            },\n            ...getStandardPropsInspectorConfigs()\n          ]\n        }\n      ]\n    };\n  }\n}\n"]}