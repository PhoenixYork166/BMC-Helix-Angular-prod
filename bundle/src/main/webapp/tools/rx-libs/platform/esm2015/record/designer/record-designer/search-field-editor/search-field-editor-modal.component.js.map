{"version":3,"file":"search-field-editor-modal.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/record/designer/record-designer/search-field-editor/search-field-editor-modal.component.ts","../../../../../../../../libs/platform/record/designer/record-designer/search-field-editor/search-field-editor-modal.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Injector, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { ActiveModalRef, DismissReasons, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { ReplaySubject } from 'rxjs';\nimport { SearchFieldEditorModalStore } from './search-field-editor-modal.store';\nimport { filter, take } from 'rxjs/operators';\nimport { RX_RECORD_DEFINITION, RxFieldDefinitionService } from '@helix/platform/record/api';\n\n@Component({\n  selector: 'rx-search-field-editor-modal',\n  templateUrl: './search-field-editor-modal.component.html',\n  styleUrls: ['./search-field-editor-modal.component.scss'],\n  providers: [SearchFieldEditorModalStore]\n})\nexport class SearchFieldEditorModalComponent extends RxModalClass implements OnInit, OnDestroy {\n  readonly vm$ = this.searchFieldsEditorModalStore.vm$;\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private recordDefinition = this.activeModalRef.getData().recordDefinition;\n  isReadOnly = this.activeModalRef.getData().isReadOnly;\n\n  constructor(\n    private readonly searchFieldsEditorModalStore: SearchFieldEditorModalStore,\n    private activeModalRef: ActiveModalRef,\n    private formBuilder: FormBuilder,\n    protected injector: Injector,\n    private rxFieldDefinitionService: RxFieldDefinitionService\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.searchFieldsEditorModalStore.isDirty$.pipe(filter(Boolean), take(1)).subscribe(() => {\n      this.markAsDirty();\n    });\n\n    const searchFields = this.activeModalRef.getData().searchFields.map((searchField, index) =>\n      this.formBuilder.group({\n        id: searchField.id,\n        searchFieldName: [[searchField], Validators.required],\n        category: searchField.searchDefinition.searchCategoryName,\n        isOpen: searchField.id === this.activeModalRef.getData().searchFieldIndex,\n        isCategoryVisible: searchField.resourceType !== RX_RECORD_DEFINITION.resourceTypes.attachment,\n        searchDefinition: searchField.searchDefinition\n      })\n    );\n\n    const availableFields = this.recordDefinition.fields\n      .filter((fieldDefinition) => this.rxFieldDefinitionService.isSearchable(fieldDefinition, this.recordDefinition))\n      .filter((fieldDefinition) =>\n        searchFields.every((searchField) => searchField.get('id').value !== fieldDefinition.id)\n      );\n\n    this.searchFieldsEditorModalStore.patchState({ searchFields, availableFields });\n  }\n\n  optionFormatter(selectOption: RxSelectOption): string {\n    return selectOption.name;\n  }\n\n  toggleOpen(toggleValue: boolean): void {\n    this.searchFieldsEditorModalStore.toggleOpen(toggleValue);\n  }\n\n  addNewSearchField(): void {\n    this.searchFieldsEditorModalStore.updateFields(\n      this.formBuilder.group({\n        id: '',\n        searchFieldName: [[], Validators.required],\n        category: '',\n        isOpen: true,\n        isCategoryVisible: true,\n        searchDefinition: {\n          enableFTSSearch: false,\n          enableCognitiveSearch: false\n        }\n      })\n    );\n  }\n\n  onSelectedFieldChange(field: RxSelectOption): void {\n    this.searchFieldsEditorModalStore.updateAvailableFields(field[0]);\n  }\n\n  onSearchCategoryChange(): void {\n    this.searchFieldsEditorModalStore.markDirty();\n  }\n\n  onRemoveSearchField(fieldIndex: number): void {\n    this.searchFieldsEditorModalStore.removeSearchField(fieldIndex);\n  }\n\n  saveSearchFields(): void {\n    this.searchFieldsEditorModalStore.searchFields$.pipe(take(1)).subscribe((searchFields) => {\n      this.activeModalRef.close(searchFields);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <div class=\"designer-modal-body modal-body d-flex mh-100\">\n    <div class=\"row flex-grow-1 w-100\">\n      <div class=\"d-flex flex-column mh-100 col\">\n        <div class=\"d-flex align-items-start justify-content-between\">\n          <button\n            adapt-button\n            btn-type=\"tertiary\"\n            class=\"mt-2 p-0\"\n            rx-id=\"add-new-search-field-button\"\n            *ngIf=\"!isReadOnly\"\n            (click)=\"addNewSearchField()\"\n          >\n            <span class=\"d-icon-plus_circle\"></span>\n            {{ 'com.bmc.arsys.rx.client.record-designer.search-fields.add-search-field.button.label' | translate }}\n          </button>\n\n          <div *ngIf=\"vm.searchFields.length\" class=\"btn-group ml-auto\">\n            <button adapt-button btn-type=\"tertiary\" type=\"button\" rx-id=\"expand-all-button\" (click)=\"toggleOpen(true)\">\n              {{ 'com.bmc.arsys.rx.client.common.expand-all.label' | translate }}\n            </button>\n\n            <button\n              adapt-button\n              btn-type=\"tertiary\"\n              type=\"button\"\n              rx-id=\"collapse-all-button\"\n              (click)=\"toggleOpen(false)\"\n            >\n              {{ 'com.bmc.arsys.rx.client.common.collapse-all.label' | translate }}\n            </button>\n          </div>\n        </div>\n\n        <div\n          class=\"border-bottom pb-1 d-flex align-items-center\"\n          *ngIf=\"vm.searchFields.length\"\n          id=\"selected-search-field\"\n          class=\"designer-modal-accordion-wrapper\"\n        >\n          <adapt-accordion [multiselect]=\"true\">\n            <div\n              *ngFor=\"let searchField of vm.searchFields; let index = index; let first = first; let last = last\"\n              class=\"designer-modal-accordion-content\"\n            >\n              <adapt-accordion-tab\n                class=\"d-block\"\n                [formGroup]=\"searchField\"\n                [isOpen]=\"searchField.get('isOpen').value\"\n                (open)=\"searchField.get('isOpen').setValue(true)\"\n                (close)=\"searchField.get('isOpen').setValue(false)\"\n              >\n                <div class=\"card-title-text w-100\">\n                  <div class=\"designer-modal-card-title-content\">\n                    <div class=\"left-header-block pl-0\">\n                      <div rx-id=\"card-title\">\n                        {{ searchField.get('searchFieldName').value[0]?.name }}\n                      </div>\n                    </div>\n\n                    <div class=\"right-header-block\">\n                      <button\n                        class=\"d-icon-left-cross_adapt p-1 pr-4 ml-3\"\n                        adapt-button\n                        size=\"small\"\n                        type=\"button\"\n                        rx-id=\"remove-button\"\n                        *ngIf=\"!isReadOnly\"\n                        (click)=\"onRemoveSearchField(index)\"\n                      >\n                        {{ 'com.bmc.arsys.rx.client.common.remove.label' | translate }}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row form-group\">\n                  <adapt-rx-select\n                    [ngClass]=\"recordDefinition.enableCognitiveSearch ? 'd-block col-12' : 'd-block col-6'\"\n                    rx-id=\"available-fields\"\n                    label=\"{{ 'com.bmc.arsys.rx.client.record-designer.search-fields.field.label' | translate }}\"\n                    formControlName=\"searchFieldName\"\n                    [options]=\"vm.availableFields\"\n                    [optionFormatter]=\"optionFormatter\"\n                    [optionContentTemplate]=\"optionTemplate\"\n                    (ngModelChange)=\"onSelectedFieldChange($event)\"\n                    [disabled]=\"isReadOnly\"\n                  ></adapt-rx-select>\n\n                  <adapt-rx-textfield\n                    *ngIf=\"!recordDefinition.enableCognitiveSearch && searchField.get('isCategoryVisible').value\"\n                    class=\"d-block col-6\"\n                    rx-id=\"search-field-category\"\n                    label=\"{{\n                      'com.bmc.arsys.rx.client.record-designer.search-fields.search-category-name.label' | translate\n                    }}\"\n                    formControlName=\"category\"\n                    (ngModelChange)=\"onSearchCategoryChange()\"\n                    [disabled]=\"isReadOnly\"\n                  ></adapt-rx-textfield>\n                </div>\n              </adapt-accordion-tab>\n            </div>\n          </adapt-accordion>\n        </div>\n\n        <div *ngIf=\"!vm.searchFields.length\" class=\"d-flex justify-content-center h-100 align-items-center mt-2\">\n          <adapt-empty-state\n            class=\"w-100\"\n            label=\"{{ 'com.bmc.arsys.rx.client.record-designer.search-fields.empty-state.message' | translate }}\"\n            type=\"config\"\n          ></adapt-empty-state>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"modal-footer\">\n    <div *ngIf=\"!isReadOnly\">\n      <button\n        adapt-button\n        type=\"button\"\n        btn-type=\"primary\"\n        rx-id=\"save-button\"\n        (click)=\"saveSearchFields()\"\n        [disabled]=\"!vm.isValid || !vm.isDirty\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n      </button>\n      <button adapt-button type=\"button\" btn-type=\"secondary\" (click)=\"cancel()\" rx-id=\"cancel-button\">\n        {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n      </button>\n    </div>\n\n    <button type=\"button\" adapt-button btn-type=\"secondary\" rx-id=\"close-button\" (click)=\"cancel()\" *ngIf=\"isReadOnly\">\n      {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n    </button>\n  </div>\n</ng-container>\n"]}