import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@bmc-ux/adapt-angular";
import * as i2 from "@angular/common";
export class DataDictionaryNodeComponent {
    constructor() {
        this.expressionNodeSelected = new EventEmitter();
    }
}
DataDictionaryNodeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.1.3", ngImport: i0, type: DataDictionaryNodeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
DataDictionaryNodeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.1.3", type: DataDictionaryNodeComponent, selector: "rx-data-dictionary-node", inputs: { node: "node", filterQuery: "filterQuery" }, outputs: { expressionNodeSelected: "expressionNodeSelected" }, ngImport: i0, template: "<ng-container *ngIf=\"!node.data.expression; else expressionNode\">\n  <adapt-highlight class=\"p-1\" [title]=\"node.label\" [result]=\"node.label\" [term]=\"filterQuery\">></adapt-highlight>\n</ng-container>\n\n<ng-template #expressionNode>\n  <div class=\"d-flex\" rx-id=\"node\">\n    <button\n      type=\"button\"\n      (click)=\"expressionNodeSelected.emit(node)\"\n      class=\"expression-node-button btn btn-link d-icon-plus_circle py-1 px-2\"\n    ></button>\n\n    <span class=\"expression-node\" [draggable]=\"true\" [attr.rx-expression]=\"node.data.expression\">\n      <span [ngClass]=\"node.data.icon || 'd-icon-arrow_right_square_input'\" class=\"expression-node-icon\"></span>\n\n      <adapt-highlight class=\"expression-node-label\" [title]=\"node.label\" [result]=\"node.label\" [term]=\"filterQuery\"\n        >></adapt-highlight\n      >\n    </span>\n\n    <i\n      *ngIf=\"node.data.info?.type === 'function'\"\n      class=\"py-1 px-2 d-icon-question_circle_o\"\n      [adaptPopover]=\"functionInfo\"\n      [popoverTitle]=\"node.data.info.data.signature\"\n      [autoClose]=\"'outside'\"\n      [maxWidth]=\"'350'\"\n    >\n      <ng-template #functionInfo>\n        <p>{{ node.data.info.data.description }}</p>\n\n        <table *ngIf=\"node.data.info.data.parameters?.length\">\n          <tr>\n            <th class=\"pr-4\">Parameter</th>\n            <th>Description</th>\n          </tr>\n\n          <tr class=\"mt-1\" *ngFor=\"let parameter of node.data.info.data.parameters\">\n            <td class=\"align-top\">{{ $any(parameter).name }}</td>\n            <td class=\"align-top\">{{ $any(parameter).description }}</td>\n          </tr>\n        </table>\n      </ng-template>\n    </i>\n  </div>\n</ng-template>\n", styles: [":root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \"Open Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}.expression-node{cursor:move}.expression-node-button{color:#4e5255}\n"], components: [{ type: i1.AdaptHighlightDirective, selector: "adapt-highlight, ngb-highlight", inputs: ["highlightClass", "result", "term"], outputs: ["wordMatch"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i1.AdaptPopoverDirective, selector: "[adaptPopover]", inputs: ["adaptPopover", "popoverTitle", "placement", "fallbackPlacement", "triggers", "container", "appendToBody", "closeBtn", "popupDelay", "disablePopover", "popoverClass", "autoClose", "closeOnOutOfView", "maxWidth", "minWidth"], outputs: ["shown", "hidden"], exportAs: ["adaptPopover"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.1.3", ngImport: i0, type: DataDictionaryNodeComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'rx-data-dictionary-node',
                    templateUrl: './data-dictionary-node.component.html',
                    styleUrls: ['./data-dictionary-node.component.scss']
                }]
        }], propDecorators: { node: [{
                type: Input
            }], filterQuery: [{
                type: Input
            }], expressionNodeSelected: [{
                type: Output
            }] } });
//# sourceMappingURL=data-dictionary-node.component.js.map