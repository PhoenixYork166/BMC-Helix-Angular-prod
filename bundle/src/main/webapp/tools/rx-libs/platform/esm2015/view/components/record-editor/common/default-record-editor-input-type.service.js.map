{"version":3,"file":"default-record-editor-input-type.service.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/components/record-editor/common/default-record-editor-input-type.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAoB,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AACpF,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,QAAQ,CAAC;AAC7C,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAC;;AAKtD,MAAM,OAAO,8BAA8B;IAGzC;QAFA,6BAAwB,GAAG,EAAE,CAAC;QAG5B,IAAI,CAAC,4BAA4B,EAAE,CAAC;IACtC,CAAC;IAED,6BAA6B,CAAC,eAAiC;QAC7D,IAAI,UAAU,CAAC,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC,EAAE;YAC3E,OAAO,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC,eAAe,CAAC,CAAC;SACrF;aAAM;YACL,OAAO,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;SACpE;IACH,CAAC;IAEO,4BAA4B;QAClC,IAAI,CAAC,wBAAwB,mCACxB,aAAa,CAAC,UAAU,KAE3B,CAAC,oBAAoB,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,eAAe,EAAE,EAAE;gBAClE,OAAO,eAAe,CAAC,mBAAmB,IAAI,OAAO,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,EAAE,GAAG,CAAC;oBACtF,CAAC,CAAC,mBAAmB,CAAC,SAAS;oBAC/B,CAAC,CAAC,mBAAmB,CAAC,QAAQ,CAAC;YACnC,CAAC,GACF,CAAC;IACJ,CAAC;;2HAzBU,8BAA8B;+HAA9B,8BAA8B,cAF7B,MAAM;2FAEP,8BAA8B;kBAH1C,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { IFieldDefinition, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { inRange, isFunction } from 'lodash';\nimport { RxViewComponentType } from '@helix/platform/view/api';\nimport { RECORD_EDITOR } from './record-editor.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxDefaultRecordEditorInputType {\n  resourceTypeFieldTypeMap = {};\n\n  constructor() {\n    this.initResourceTypeFieldTypeMap();\n  }\n\n  getFieldTypeByFieldDefinition(fieldDefinition: IFieldDefinition): string {\n    if (isFunction(this.resourceTypeFieldTypeMap[fieldDefinition.resourceType])) {\n      return this.resourceTypeFieldTypeMap[fieldDefinition.resourceType](fieldDefinition);\n    } else {\n      return this.resourceTypeFieldTypeMap[fieldDefinition.resourceType];\n    }\n  }\n\n  private initResourceTypeFieldTypeMap(): void {\n    this.resourceTypeFieldTypeMap = {\n      ...RECORD_EDITOR.fieldTypes,\n\n      [RX_RECORD_DEFINITION.resourceTypes.character]: (fieldDefinition) => {\n        return fieldDefinition.namedListDefinition || inRange(fieldDefinition.maxLength, 1, 255)\n          ? RxViewComponentType.Character\n          : RxViewComponentType.Textarea;\n      }\n    };\n  }\n}\n"]}