{"version":3,"file":"view-action.types.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/api/view-action/view-action.types.ts"],"names":[],"mappings":"AAEA,OAAO,EAAiB,cAAc,IAAI,aAAa,EAAE,MAAM,eAAe,CAAC;AAE/E,MAAM,CAAC,MAAM,cAAc,GAAG;IAC5B,eAAe,EAAE;QACf,QAAQ,EAAE,kBAAkB;QAC5B,SAAS,EAAE,mBAAmB;KAC/B;CACF,CAAC;AAEF,MAAM,CAAN,IAAY,4BAGX;AAHD,WAAY,4BAA4B;IACtC,yDAAyB,CAAA;IACzB,uDAAuB,CAAA;AACzB,CAAC,EAHW,4BAA4B,KAA5B,4BAA4B,QAGvC;AAED,MAAM,CAAN,IAAY,uBAQX;AARD,WAAY,uBAAuB;IACjC,2CAAgB,CAAA;IAChB,0CAAe,CAAA;IACf,2CAAgB,CAAA;IAChB,0CAAe,CAAA;IACf,2CAAgB,CAAA;IAChB,6CAAkB,CAAA;IAClB,oDAAyB,CAAA;AAC3B,CAAC,EARW,uBAAuB,KAAvB,uBAAuB,QAQlC;AAED,MAAM,CAAN,IAAY,kBAKX;AALD,WAAY,kBAAkB;IAC5B,6CAAuB,CAAA;IACvB,qDAA+B,CAAA;IAC/B,yDAAmC,CAAA;IACnC,2DAAqC,CAAA;AACvC,CAAC,EALW,kBAAkB,KAAlB,kBAAkB,QAK7B;AAuBD,MAAM,CAAC,MAAM,YAAY,GAA0B,aAAa,CAAC,cAAc,CAAC,CAAC","sourcesContent":["import { IRecordInstance } from '@helix/platform/record/api';\nimport { IRowDataItem, IRxRecordGridApi } from '../common/record-grid.types';\nimport { TypeDecorator, ÉµmakeDecorator as makeDecorator } from '@angular/core';\n\nexport const RX_VIEW_ACTION = {\n  viewActionNames: {\n    openView: 'rxOpenViewAction',\n    launchUrl: 'rxLaunchUrlAction'\n  }\n};\n\nexport enum OpenViewActionLaunchBehavior {\n  SameWindow = 'sameWindow',\n  NewWindow = 'newWindow'\n}\n\nexport enum OpenViewActionModalSize {\n  Xsmall = 'rx-xs',\n  Small = 'rx-sm',\n  Medium = 'rx-md',\n  Large = 'rx-lg',\n  Xlarge = 'rx-xl',\n  Xxlarge = 'rx-xxl',\n  FullSize = 'rx-full-size'\n}\n\nexport enum OpenViewActionType {\n  FullWidth = 'fullWidth',\n  CenteredModal = 'centeredModal',\n  DockedLeftModal = 'dockedLeftModal',\n  DockedRightModal = 'dockedRightModal'\n}\n\nexport type RecordsSource =\n  | IRxRecordGridApi\n  | IRecordInstance[]\n  | IRecordInstance['id'][]\n  | IRowDataItem\n  | IRowDataItem[]\n  | string;\n\nexport interface RxViewAction {\n  name: string;\n}\n\nexport interface RxViewActionDecorator {\n  /**\n   * Decorator that marks a class as an RxViewAction and supplies configuration metadata.\n   */\n  (rxViewAction?: RxViewAction): TypeDecorator;\n\n  new (rxViewAction?: RxViewAction): RxViewAction;\n}\n\nexport const RxViewAction: RxViewActionDecorator = makeDecorator('RxViewAction');\n"]}