{"version":3,"file":"whatfix-configurator.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/api/whatfix/whatfix-configurator.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, Injectable, RendererFactory2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { assign, defaults, includes, isEmpty } from 'lodash';\nimport { filter, map, shareReplay, switchMapTo, take, tap } from 'rxjs/operators';\nimport { RxCurrentUserService } from '../user/current-user.service';\nimport { RxLogService } from '../logging/log.service';\nimport { RxGlobalCacheService } from '../caching/global-cache.service';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { IPlainObject } from '../common-types/plain-object.interface';\nimport { LogCategory } from '../logging/log.types';\nimport { RX_ADMINISTRATION } from '../administration/administration.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxWhatfixConfiguratorService {\n  private isConfigured = false;\n  private renderer = this.rendererFactory.createRenderer(null, null);\n\n  private defaultConfig$ = combineLatest([\n    this.rxGlobalCacheService.getApplicationBundleDescriptor(),\n    this.rxCurrentUserService.user$\n  ]).pipe(\n    take(1),\n    map(([bundleDescriptor, user]) => {\n      const logCategories = this.rxLogService.logCategories;\n\n      return {\n        application: {\n          id: this.rxGlobalCacheService.applicationId,\n          version: bundleDescriptor.version\n        },\n        environment: {\n          isDebug: includes(logCategories, LogCategory.All) || includes(logCategories, LogCategory.Cli)\n        },\n        user: {\n          id: user.userId,\n          isBusinessAnalyst: this.rxCurrentUserService.isBusinessAnalyst(),\n          isAdministrator: this.rxCurrentUserService.isAdministrator()\n        }\n      };\n    }),\n    shareReplay(1)\n  );\n\n  private isEnabled$ = this.httpClient.get(`${RX_ADMINISTRATION.systemConfigurationUrl}/Whatfix-Disabled`).pipe(\n    map((result: { value: number }) => result.value === 0),\n    shareReplay(1)\n  );\n\n  constructor(\n    @Inject(DOCUMENT) private document,\n    private rendererFactory: RendererFactory2,\n    private httpClient: HttpClient,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxLogService: RxLogService,\n    private rxGlobalCacheService: RxGlobalCacheService\n  ) {}\n\n  setConfig(accountId: string, config?: IPlainObject): void {\n    if (isEmpty(accountId)) {\n      throw new Error('Invalid Whatfix account ID.');\n    }\n\n    this.isEnabled$\n      .pipe(\n        filter((isEnabled) => Boolean(isEnabled) && !this.isConfigured),\n        tap((isEnabled) => {\n          this.rxLogService.debug(isEnabled ? `Whatfix is enabled. Account ID: ${accountId}.` : 'Whatfix is disabled.');\n        }),\n        switchMapTo(config ? of(config) : this.defaultConfig$)\n      )\n      .subscribe((whatfixConfig) => {\n        this.isConfigured = true;\n\n        defaults(window, { rx: {} });\n\n        // this global variable will be used by whatfix integration script loaded below\n        window['rx'].whatfixConfig = whatfixConfig;\n\n        const url = `//cdn.whatfix.com/prod/${accountId}/embed/embed.nocache.js`;\n\n        this.rxLogService.debug(`Loading whatfix integration script from ${url}.`);\n\n        this.loadScript(url);\n      });\n  }\n\n  getDefaultConfig(): Observable<IPlainObject> {\n    return this.isEnabled$.pipe(filter(Boolean), switchMapTo(this.defaultConfig$));\n  }\n\n  private loadScript(url: string): void {\n    const scriptElement = assign(this.renderer.createElement('script'), {\n      type: 'text/javascript',\n      async: true,\n      src: url\n    });\n\n    this.renderer.appendChild(this.document.head, scriptElement);\n  }\n}\n"]}