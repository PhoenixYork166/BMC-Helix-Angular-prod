{"version":3,"file":"view-preset-selector.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/components/view-preset-selector/runtime/view-preset-selector.component.ts","../../../../../../../../libs/platform/view/components/view-preset-selector/runtime/view-preset-selector.component.html"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, combineLatest, EMPTY, iif, Observable, of, Subject, throwError } from 'rxjs';\nimport { catchError, finalize, map, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport { noop, reject, sortBy } from 'lodash';\nimport { RxGuidService } from '@helix/platform/utils';\nimport { RxModalService, RxUtilityModalsService } from '@helix/platform/ui-kit';\nimport { BaseViewComponent, RuntimeViewModelApi } from '@helix/platform/view/runtime';\nimport {\n  IViewPresetSelectorConfig,\n  IViewPresetSelectorDropdownOption,\n  IViewPresetSelectorState\n} from './view-preset-selector.types';\nimport { RxViewPresetSelectorUserPreferencesService } from './view-preset-selector-user-preferences.service';\nimport { IViewPresetSelectorApi } from './view-preset-selector-api.interface';\nimport { RenameViewPresetComponent } from './rename-view-preset/rename-view-preset.component';\nimport { ShareViewPresetComponent } from './share-view-preset/share-view-preset.component';\nimport { RxFeatureService, RxNotificationService } from '@helix/platform/shared/api';\nimport { ISharedViewPresetItem, IShareViewPresetModalData } from './share-view-preset/share-view-preset.types';\nimport { RX_SHARABLE_VIEW_RESETS_FEATURE_NAME } from '../view-preset-selector.types';\nimport { AddSharedViewPresetsComponent } from './add-shared-view-presets/add-shared-view-presets.component';\nimport {\n  IAddSharedViewPresetsModalData,\n  ISharedViewPresetDescriptor\n} from './add-shared-view-presets/add-shared-view-presets.types';\nimport { RxShareViewPresetService } from './share-view-preset/share-view-preset.service';\nimport { IViewPresetsByViewComponentGuid } from '@helix/platform/view/api';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'rx-view-preset-selector',\n  templateUrl: './view-preset-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [RxViewPresetSelectorUserPreferencesService],\n  styleUrls: ['./view-preset-selector.component.scss']\n})\nexport class ViewPresetSelectorComponent extends BaseViewComponent implements OnInit, OnDestroy {\n  @Input()\n  config: Observable<IViewPresetSelectorConfig>;\n\n  @Input()\n  runtimeViewModelApi: RuntimeViewModelApi;\n\n  api: IViewPresetSelectorApi = {\n    getGuid: () => this.guid,\n    markAppliedViewPresetAsEdited: this.markAppliedViewPresetAsEdited.bind(this)\n  };\n\n  private isOperationInProgressSubject = new BehaviorSubject<boolean>(false);\n  private isViewPresetEditedSubject = new BehaviorSubject<boolean>(false);\n\n  viewPresetSelectorModel$: Observable<{\n    isOperationInProgress: boolean;\n    isViewPresetEdited: boolean;\n  }> = combineLatest([this.isOperationInProgressSubject, this.isViewPresetEditedSubject]).pipe(\n    map(([isOperationInProgress, isViewPresetEdited]) => ({\n      isOperationInProgress,\n      isViewPresetEdited\n    }))\n  );\n\n  state: IViewPresetSelectorState;\n\n  strings = {\n    deleteLabel: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n    discardChangesButtonLabel: this.translateService.instant(\n      'com.bmc.arsys.rx.client.view-components.view-preset-selector.discard-changes.button.label'\n    ),\n    editedViewPresetTagLabel: this.translateService.instant(\n      'com.bmc.arsys.rx.client.view-components.view-preset-selector.edited-view-preset-tag.label'\n    ),\n    renameLabel: this.translateService.instant('com.bmc.arsys.rx.client.common.rename.label'),\n    saveLabel: this.translateService.instant('com.bmc.arsys.rx.client.common.save.label'),\n    saveAsLabel: this.translateService.instant('com.bmc.arsys.rx.client.common.save-as.label'),\n    shareLabel: this.translateService.instant(\n      'com.bmc.arsys.rx.client.view-components.view-preset-selector.share.button.label'\n    ),\n    systemPresetsTitle: this.translateService.instant(\n      'com.bmc.arsys.rx.client.view-components.view-preset-selector.preset-type.system.label'\n    ),\n    sharedPresetsTitle: this.translateService.instant(\n      'com.bmc.arsys.rx.client.view-components.view-preset-selector.preset-type.shared-with-me.label'\n    ),\n    customPresetsTitle: this.translateService.instant(\n      'com.bmc.arsys.rx.client.view-components.view-preset-selector.preset-type.created-by-me.label'\n    ),\n    sharedTooltip: this.translateService.instant(\n      'com.bmc.arsys.rx.client.view-components.view-preset-selector.shared-preset.tooltip'\n    ),\n    addSharedViewPresets: this.translateService.instant(\n      'com.bmc.arsys.rx.client.view-components.view-preset-selector.add-shared-view-preset.title'\n    )\n  };\n\n  private userPreferencesChangedSubject = new Subject<void>();\n  isSharingFeatureEnabled = this.rxFeatureService.isFeatureEnabled(RX_SHARABLE_VIEW_RESETS_FEATURE_NAME);\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private rxGuidService: RxGuidService,\n    private rxModalService: RxModalService,\n    private rxUtilityModalsService: RxUtilityModalsService,\n    private rxViewPresetSelectorUserPreferencesService: RxViewPresetSelectorUserPreferencesService,\n    private translateService: TranslateService,\n    private rxFeatureService: RxFeatureService,\n    private rxNotificationService: RxNotificationService,\n    private rxShareViewPresetService: RxShareViewPresetService\n  ) {\n    super();\n\n    this.userPreferencesChangedSubject\n      .pipe(\n        switchMap(() => this.rxViewPresetSelectorUserPreferencesService.save(this.state)),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe();\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.notifyPropertyChanged('api', this.api);\n\n    this.config\n      .pipe(\n        take(1),\n        map((config: IViewPresetSelectorConfig) => ({\n          systemViewPresetOptions: config.viewPresets,\n          customViewPresetOptions: [],\n          sharedViewPresetOptions: [],\n          appliedViewPresetOption: null,\n          isSharingEnabled: config.enableSharing && this.isSharingFeatureEnabled\n        })),\n        switchMap((state: IViewPresetSelectorState) =>\n          this.rxViewPresetSelectorUserPreferencesService.applyUserPreferences(this.guid, state)\n        ),\n        tap(({ state, shouldUpdatePreferences, removedPresetGuid }) => {\n          this.state = state;\n          this.changeDetectorRef.detectChanges();\n          this.isOperationInProgressSubject.next(true);\n\n          if (removedPresetGuid) {\n            this.runtimeViewModelApi.deleteViewPreset(removedPresetGuid).subscribe();\n          }\n\n          if (shouldUpdatePreferences) {\n            this.userPreferencesChangedSubject.next();\n          }\n        }),\n        switchMap(() => this.applyViewPreset(this.state.appliedViewPresetOption)),\n        finalize(() => this.isOperationInProgressSubject.next(false))\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.isOperationInProgressSubject.complete();\n    this.isViewPresetEditedSubject.complete();\n    this.userPreferencesChangedSubject.complete();\n  }\n\n  deleteViewPreset(viewPresetOptionToRemove: IViewPresetSelectorDropdownOption): void {\n    this.rxUtilityModalsService\n      .confirm(\n        this.translateService.instant(\n          viewPresetOptionToRemove.userSharedViewPresetGuid\n            ? 'com.bmc.arsys.rx.client.view-components.view-preset-selector.delete-shared-view-preset-confirmation.message'\n            : 'com.bmc.arsys.rx.client.view-components.view-preset-selector.delete-view-preset-confirmation.message'\n        )\n      )\n      .then((isConfirmed: boolean) => {\n        if (isConfirmed) {\n          const viewPresetGuidToDelete = this.state.appliedViewPresetOption.guid;\n\n          this.state.appliedViewPresetOption = this.state.systemViewPresetOptions[0];\n          this.isViewPresetEditedSubject.next(false);\n\n          this.state.customViewPresetOptions = reject(this.state.customViewPresetOptions, {\n            guid: viewPresetGuidToDelete\n          });\n\n          this.state.sharedViewPresetOptions = reject(this.state.sharedViewPresetOptions, {\n            guid: viewPresetGuidToDelete\n          });\n\n          this.userPreferencesChangedSubject.next();\n          this.isOperationInProgressSubject.next(true);\n\n          this.runtimeViewModelApi\n            .applyViewPreset(this.guid, this.state.appliedViewPresetOption.guid)\n            .pipe(\n              finalize(() => {\n                const deleteSharedViewPreset$ = viewPresetOptionToRemove.userSharedViewPresetGuid\n                  ? this.rxShareViewPresetService.deleteSharedViewPreset(\n                      viewPresetOptionToRemove.userSharedViewPresetGuid\n                    )\n                  : of(null);\n\n                deleteSharedViewPreset$\n                  .pipe(\n                    switchMap(() => this.runtimeViewModelApi.deleteViewPreset(viewPresetGuidToDelete)),\n                    finalize(() => this.isOperationInProgressSubject.next(false))\n                  )\n                  .subscribe();\n              })\n            )\n            .subscribe();\n        }\n      })\n      .catch(noop);\n  }\n\n  discardViewPresetChanges(): void {\n    this.rxUtilityModalsService\n      .confirm(\n        this.translateService.instant(\n          'com.bmc.arsys.rx.client.view-components.view-preset-selector.discard-changes-confirmation.message'\n        )\n      )\n      .then((isConfirmed: boolean) => {\n        if (isConfirmed) {\n          this.isViewPresetEditedSubject.next(false);\n          this.isOperationInProgressSubject.next(true);\n\n          const appliedViewPresetOption = this.state.appliedViewPresetOption;\n\n          iif(\n            () => appliedViewPresetOption.isShared,\n            this.getSharedViewPresetData(appliedViewPresetOption).pipe(\n              switchMap((sharedViewPresets) =>\n                this.runtimeViewModelApi.discardViewPresetChanges(appliedViewPresetOption.guid, sharedViewPresets)\n              )\n            ),\n            this.runtimeViewModelApi.discardViewPresetChanges(appliedViewPresetOption.guid)\n          )\n            .pipe(finalize(() => this.isOperationInProgressSubject.next(false)))\n            .subscribe();\n        }\n      })\n      .catch(noop);\n  }\n\n  renameViewPreset(): void {\n    this.openRenamingModal(this.strings.renameLabel, true)\n      .then((viewPresetName: string) => {\n        this.state.appliedViewPresetOption.label = viewPresetName;\n        this.state.customViewPresetOptions = sortBy(this.state.customViewPresetOptions, 'label');\n        this.userPreferencesChangedSubject.next();\n        this.changeDetectorRef.detectChanges();\n\n        // if preset is shared with others - updating with new name\n        if (this.state.appliedViewPresetOption.userSharedViewPresetGuid) {\n          this.saveSharedViewPreset().subscribe();\n        }\n      })\n      .catch(noop);\n  }\n\n  selectPreset(viewPresetOption: IViewPresetSelectorDropdownOption): void {\n    this.state.appliedViewPresetOption = viewPresetOption;\n    this.isViewPresetEditedSubject.next(false);\n    this.userPreferencesChangedSubject.next();\n    this.isOperationInProgressSubject.next(true);\n\n    this.applyViewPreset(viewPresetOption)\n      .pipe(finalize(() => this.isOperationInProgressSubject.next(false)))\n      .subscribe();\n  }\n\n  saveAsViewPreset(): void {\n    this.openRenamingModal(this.strings.saveAsLabel)\n      .then((viewPresetName: string) => {\n        const viewPreset = {\n          guid: this.rxGuidService.generate(),\n          label: viewPresetName\n        };\n\n        this.state.customViewPresetOptions.push(viewPreset);\n        this.state.customViewPresetOptions = sortBy(this.state.customViewPresetOptions, 'label');\n        this.state.appliedViewPresetOption = viewPreset;\n\n        this.isViewPresetEditedSubject.next(false);\n        this.userPreferencesChangedSubject.next();\n        this.isOperationInProgressSubject.next(true);\n\n        this.runtimeViewModelApi\n          .applyViewPreset(this.guid, this.state.appliedViewPresetOption.guid)\n          .pipe(finalize(() => this.isOperationInProgressSubject.next(false)))\n          .subscribe();\n      })\n      .catch(noop);\n  }\n\n  saveViewPreset(): void {\n    this.isViewPresetEditedSubject.next(false);\n    this.isOperationInProgressSubject.next(true);\n\n    const saveSharedViewPreset$ = this.state.appliedViewPresetOption.userSharedViewPresetGuid\n      ? this.saveSharedViewPreset()\n      : of(null);\n\n    saveSharedViewPreset$\n      .pipe(\n        switchMap(() => this.runtimeViewModelApi.saveViewPreset(this.state.appliedViewPresetOption.guid)),\n        finalize(() => this.isOperationInProgressSubject.next(false))\n      )\n      .subscribe();\n  }\n\n  shareViewPreset(): void {\n    this.rxModalService\n      .openModal({\n        content: ShareViewPresetComponent,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.view-components.view-preset-selector.share-view-preset.title'\n        ),\n        data: {\n          runtimeViewModelApi: this.runtimeViewModelApi,\n          currentViewPreset: this.state.appliedViewPresetOption,\n          presetSelectorGuid: this.guid\n        } as IShareViewPresetModalData,\n        size: 'sm'\n      })\n      .then((sharedViewPresetGuid) => {\n        this.state.appliedViewPresetOption.userSharedViewPresetGuid = sharedViewPresetGuid;\n        this.userPreferencesChangedSubject.next();\n      })\n      .catch(noop);\n  }\n\n  onAddSharedPresetsClick(): void {\n    this.rxShareViewPresetService.getSharedViewPresetsForCurrentUser(this.guid).subscribe((presets) => {\n      const existingSharedPresetsGuids = this.state.sharedViewPresetOptions.map((option) => option.guid);\n      const newPresets = presets.filter((preset) => !existingSharedPresetsGuids.includes(preset.guid));\n\n      if (newPresets.length) {\n        this.openAddSharedPresetsModal(newPresets);\n      } else {\n        this.rxNotificationService.addInfoMessage(\n          this.translateService.instant(\n            'com.bmc.arsys.rx.client.view-components.view-preset-selector.add-shared-view-preset.notification.no-new-presets.message'\n          ),\n          this.translateService.instant(\n            'com.bmc.arsys.rx.client.view-components.view-preset-selector.add-shared-view-preset.notification.no-new-presets.title'\n          )\n        );\n      }\n    });\n  }\n\n  private openAddSharedPresetsModal(newPresets: ISharedViewPresetItem[]) {\n    this.rxModalService\n      .openModal({\n        content: AddSharedViewPresetsComponent,\n        title: this.strings.addSharedViewPresets,\n        data: {\n          presetSelectorGuid: this.guid,\n          newPresets\n        } as IAddSharedViewPresetsModalData,\n        size: 'sm'\n      })\n      .then((addedPresets: ISharedViewPresetDescriptor[]) => {\n        this.state.sharedViewPresetOptions = this.state.sharedViewPresetOptions.concat(\n          addedPresets.map((preset) => ({ ...preset, isShared: true }))\n        );\n        this.userPreferencesChangedSubject.next();\n\n        if (addedPresets.length) {\n          this.rxNotificationService.addSuccessMessage(\n            this.translateService.instant(\n              'com.bmc.arsys.rx.client.view-components.view-preset-selector.add-shared-view-preset.notification.presets-added.message'\n            ),\n            this.translateService.instant(\n              'com.bmc.arsys.rx.client.view-components.view-preset-selector.add-shared-view-preset.notification.presets-added.title'\n            )\n          );\n        }\n      })\n      .catch(noop);\n  }\n\n  private markAppliedViewPresetAsEdited(): void {\n    this.isViewPresetEditedSubject.next(true);\n  }\n\n  private openRenamingModal(fieldLabel: string, isEdit?: boolean): Promise<string> {\n    let existingViewPresets = [...this.state.customViewPresetOptions, ...this.state.systemViewPresetOptions];\n\n    if (isEdit) {\n      existingViewPresets = existingViewPresets.filter(\n        (viewPreset) => viewPreset.guid !== this.state.appliedViewPresetOption.guid\n      );\n    }\n\n    return this.rxModalService.openModal({\n      content: RenameViewPresetComponent,\n      data: {\n        fieldLabel,\n        existingViewPresetNames: existingViewPresets.map(({ label }) => label),\n        viewPresetName: this.state.appliedViewPresetOption.label\n      },\n      size: 'sm'\n    });\n  }\n\n  private applyViewPreset(viewPresetOption: IViewPresetSelectorDropdownOption): Observable<never> {\n    if (viewPresetOption.isShared) {\n      return this.getSharedViewPresetData(viewPresetOption).pipe(\n        switchMap((sharedViewPresets) =>\n          this.runtimeViewModelApi.applyViewPreset(this.guid, viewPresetOption.guid, sharedViewPresets)\n        ),\n        catchError((error) => this.handleSharedViewPresetLoadError(error, viewPresetOption))\n      );\n    } else {\n      return this.runtimeViewModelApi.applyViewPreset(this.guid, viewPresetOption.guid);\n    }\n  }\n\n  private saveSharedViewPreset(): Observable<string> {\n    return this.rxShareViewPresetService.saveSharedViewPreset(\n      {\n        runtimeViewModelApi: this.runtimeViewModelApi,\n        currentViewPreset: this.state.appliedViewPresetOption,\n        presetSelectorGuid: this.guid\n      },\n      this.state.appliedViewPresetOption.userSharedViewPresetGuid\n    );\n  }\n\n  private getSharedViewPresetData(\n    viewPresetOption: IViewPresetSelectorDropdownOption\n  ): Observable<IViewPresetsByViewComponentGuid> {\n    return this.rxShareViewPresetService.getSharedViewPresetData(viewPresetOption.guid).pipe(\n      map(({ viewPresetName, sharedViewPresets }) => {\n        viewPresetOption.label = viewPresetName;\n\n        return sharedViewPresets;\n      })\n    );\n  }\n\n  private handleSharedViewPresetLoadError(\n    error: HttpErrorResponse,\n    viewPresetOption: IViewPresetSelectorDropdownOption\n  ): Observable<never> {\n    if (error.status === 404) {\n      this.state.sharedViewPresetOptions = this.state.sharedViewPresetOptions.filter(\n        (option) => option.guid !== viewPresetOption.guid\n      );\n\n      this.runtimeViewModelApi.deleteViewPreset(viewPresetOption.guid).subscribe();\n\n      // if preset was removed - selecting first system preset instead\n      this.selectPreset(this.state.systemViewPresetOptions[0]);\n\n      return EMPTY;\n    } else {\n      return throwError(error);\n    }\n  }\n}\n","<ng-container *ngIf=\"viewPresetSelectorModel$ | async as viewPresetSelectorModel\">\n  <div class=\"btn-group align-items-center\" *ngIf=\"state\">\n    <div adaptDropdown>\n      <button\n        adapt-button\n        adaptDropdownToggle\n        type=\"button\"\n        btn-type=\"tertiary\"\n        class=\"text-default font-weight-bold text-left\"\n        rx-id=\"toggle-button\"\n        [disabled]=\"viewPresetSelectorModel.isOperationInProgress\"\n      >\n        {{ state.appliedViewPresetOption.label }}\n      </button>\n\n      <div class=\"dropdown-menu {{ isSharingFeatureEnabled ? 'preset-selector' : '' }}\" adaptDropdownMenu tabindex=\"0\">\n        <ng-container *ngIf=\"state.customViewPresetOptions.length\">\n          <div class=\"dropdown-heading\" *ngIf=\"isSharingFeatureEnabled\">{{ strings.customPresetsTitle }}</div>\n          <button\n            *ngFor=\"let customViewPresetOption of state.customViewPresetOptions\"\n            [class.active]=\"customViewPresetOption.guid === state.appliedViewPresetOption.guid\"\n            class=\"dropdown-item\"\n            type=\"button\"\n            (click)=\"selectPreset(customViewPresetOption)\"\n            rx-id=\"custom-view-preset\"\n          >\n            {{ customViewPresetOption.label }}\n\n            <adapt-icon\n              *ngIf=\"customViewPresetOption.userSharedViewPresetGuid && isSharingFeatureEnabled\"\n              name=\"users\"\n              [adaptTooltip]=\"strings.sharedTooltip\"\n              class=\"btn-link float-end ml-2\"\n            ></adapt-icon>\n          </button>\n\n          <div *ngIf=\"!isSharingFeatureEnabled\" class=\"dropdown-divider\"></div>\n        </ng-container>\n\n        <ng-container *ngIf=\"state.isSharingEnabled\">\n          <div class=\"dropdown-heading\">\n            {{ strings.sharedPresetsTitle }}\n\n            <button\n              type=\"button\"\n              class=\"btn btn-link float-end p-0 pl-1 btn-add-shared\"\n              rx-id=\"add-preset-button\"\n              [adaptTooltip]=\"strings.addSharedViewPresets\"\n              (click)=\"onAddSharedPresetsClick()\"\n            >\n              <adapt-icon name=\"plus\"></adapt-icon>\n            </button>\n          </div>\n\n          <button\n            *ngFor=\"let sharedViewPresetOption of state.sharedViewPresetOptions\"\n            class=\"dropdown-item\"\n            [class.active]=\"sharedViewPresetOption.guid === state.appliedViewPresetOption.guid\"\n            type=\"button\"\n            (click)=\"selectPreset(sharedViewPresetOption)\"\n            rx-id=\"shared-view-preset\"\n          >\n            {{ sharedViewPresetOption.label }}\n          </button>\n        </ng-container>\n\n        <div class=\"dropdown-heading\" *ngIf=\"isSharingFeatureEnabled\">{{ strings.systemPresetsTitle }}</div>\n\n        <button\n          *ngFor=\"let systemViewPresetOption of state.systemViewPresetOptions\"\n          class=\"dropdown-item\"\n          [class.active]=\"systemViewPresetOption.guid === state.appliedViewPresetOption.guid\"\n          type=\"button\"\n          (click)=\"selectPreset(systemViewPresetOption)\"\n          rx-id=\"system-view-preset\"\n        >\n          {{ systemViewPresetOption.label }}\n        </button>\n      </div>\n    </div>\n\n    <span class=\"badge badge-secondary extra-small mx-2\" *ngIf=\"viewPresetSelectorModel.isViewPresetEdited\">\n      {{ strings.editedViewPresetTagLabel }}\n    </span>\n\n    <adapt-button\n      btn-type=\"tertiary\"\n      *ngIf=\"\n        !state.appliedViewPresetOption.isSystem &&\n        !state.appliedViewPresetOption.isShared &&\n        viewPresetSelectorModel.isViewPresetEdited\n      \"\n      class=\"d-icon-left-floppy p-2\"\n      rx-id=\"save-button\"\n      [disabled]=\"viewPresetSelectorModel.isOperationInProgress\"\n      (click)=\"saveViewPreset()\"\n    >\n      {{ strings.saveLabel }}\n    </adapt-button>\n\n    <adapt-button\n      btn-type=\"tertiary\"\n      [disabled]=\"viewPresetSelectorModel.isOperationInProgress\"\n      (click)=\"saveAsViewPreset()\"\n      class=\"d-icon-left-save_all_o\"\n      rx-id=\"save-as-button\"\n      *ngIf=\"\n        state.appliedViewPresetOption.isSystem ||\n        state.appliedViewPresetOption.isShared ||\n        !viewPresetSelectorModel.isViewPresetEdited\n      \"\n    >\n      {{ strings.saveAsLabel }}\n    </adapt-button>\n\n    <div\n      class=\"dropdown header-cell-menu-btn\"\n      adaptDropdown\n      *ngIf=\"viewPresetSelectorModel.isViewPresetEdited || !state.appliedViewPresetOption.isSystem\"\n    >\n      <button\n        rx-id=\"more-actions-toggle-button\"\n        class=\"d-icon-ellipsis btn btn-link px-0\"\n        type=\"button\"\n        adaptDropdownToggle\n        [disabled]=\"viewPresetSelectorModel.isOperationInProgress\"\n        [showCaret]=\"false\"\n      ></button>\n\n      <div class=\"dropdown-menu\" adaptDropdownMenu tabindex=\"0\">\n        <adapt-button\n          btn-type=\"tertiary\"\n          *ngIf=\"viewPresetSelectorModel.isViewPresetEdited\"\n          class=\"d-icon-left-undo_adapt dropdown-item\"\n          rx-id=\"discard-changes-button\"\n          (click)=\"discardViewPresetChanges()\"\n        >\n          {{ strings.discardChangesButtonLabel }}\n        </adapt-button>\n\n        <adapt-button\n          btn-type=\"tertiary\"\n          (click)=\"saveAsViewPreset()\"\n          class=\"d-icon-left-save_all_o dropdown-item\"\n          rx-id=\"save-as-button\"\n          *ngIf=\"\n            !state.appliedViewPresetOption.isSystem &&\n            !state.appliedViewPresetOption.isShared &&\n            viewPresetSelectorModel.isViewPresetEdited\n          \"\n        >\n          {{ strings.saveAsLabel }}\n        </adapt-button>\n\n        <adapt-button\n          btn-type=\"tertiary\"\n          *ngIf=\"!state.appliedViewPresetOption.isSystem && !state.appliedViewPresetOption.isShared\"\n          class=\"d-icon-left-field_text dropdown-item\"\n          rx-id=\"rename-selected-view-preset-button\"\n          (click)=\"renameViewPreset()\"\n        >\n          {{ strings.renameLabel }}\n        </adapt-button>\n\n        <adapt-button\n          btn-type=\"tertiary\"\n          *ngIf=\"!state.appliedViewPresetOption.isSystem\"\n          class=\"d-icon-left-trash_adapt dropdown-item\"\n          rx-id=\"remove-selected-view-preset-button\"\n          (click)=\"deleteViewPreset(state.appliedViewPresetOption)\"\n        >\n          {{ strings.deleteLabel }}\n        </adapt-button>\n\n        <adapt-button\n          btn-type=\"tertiary\"\n          *ngIf=\"\n            state.isSharingEnabled &&\n            !state.appliedViewPresetOption.isSystem &&\n            !state.appliedViewPresetOption.isShared &&\n            !viewPresetSelectorModel.isViewPresetEdited\n          \"\n          class=\"d-icon-left-share dropdown-item\"\n          rx-id=\"share-view-preset-button\"\n          (click)=\"shareViewPreset()\"\n        >\n          {{ strings.shareLabel }}\n        </adapt-button>\n      </div>\n    </div>\n  </div>\n</ng-container>\n"]}