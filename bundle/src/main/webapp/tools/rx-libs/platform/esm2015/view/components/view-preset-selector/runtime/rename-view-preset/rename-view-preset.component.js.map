{"version":3,"file":"rename-view-preset.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/view-preset-selector/runtime/rename-view-preset/rename-view-preset.component.ts","../../../../../../../../../libs/platform/view/components/view-preset-selector/runtime/rename-view-preset/rename-view-preset.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAqB,MAAM,eAAe,CAAC;AACvE,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,aAAa,EAAE,MAAM,MAAM,CAAC;AACrC,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAC3C,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACvE,OAAO,EAAE,YAAY,EAAE,MAAM,wBAAwB,CAAC;;;;;;;AAMtD,MAAM,OAAO,yBAA0B,SAAQ,YAAY;IAMzD,YAAoB,cAA8B,EAAY,QAAkB;QAC9E,KAAK,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;QADd,mBAAc,GAAd,cAAc,CAAgB;QAAY,aAAQ,GAAR,QAAQ,CAAU;QAJhF,8BAAyB,GAAgB,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;QAErD,eAAU,GAA2B,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC;QAKhE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;QAC/C,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAEvE,IAAI,CAAC,yBAAyB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YAC/F,IAAI,IAAI,CAAC,yBAAyB,CAAC,KAAK,IAAI,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE;gBACnF,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;aACrE;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;IACnB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC7B,CAAC;IAED,IAAI;QACF,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC,CAAC;IACrG,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;IACxD,CAAC;IAED,sBAAsB,CAAC,cAAsB;QAC3C,MAAM,qBAAqB,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC;QAEpD,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,IAAI,CACjD,CAAC,sBAAsB,EAAE,EAAE,CAAC,sBAAsB,KAAK,qBAAqB,CAC7E,CAAC;IACJ,CAAC;IAEO,4BAA4B,CAAC,cAAsB;QACzD,MAAM,qBAAqB,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC;QAEpD,IAAI,oBAAoB,GAAG,qBAAqB,CAAC;QACjD,IAAI,MAAM,GAAG,CAAC,CAAC;QAEf,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,EAAE;YACzD,oBAAoB,GAAG,GAAG,qBAAqB,IAAI,MAAM,EAAE,EAAE,CAAC;SAC/D;QAED,OAAO,oBAAoB,CAAC;IAC9B,CAAC;;sHAvDU,yBAAyB;0GAAzB,yBAAyB,oFCXtC,6mCAmCA;2FDxBa,yBAAyB;kBAJrC,SAAS;mBAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,WAAW,EAAE,qCAAqC;iBACnD","sourcesContent":["import { Component, Injector, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ActiveModalRef, DismissReasons } from '@bmc-ux/adapt-angular';\nimport { RxModalClass } from '@helix/platform/ui-kit';\n\n@Component({\n  selector: 'rx-rename-view-preset',\n  templateUrl: './rename-view-preset.component.html'\n})\nexport class RenameViewPresetComponent extends RxModalClass implements OnInit, OnDestroy {\n  modalData: any;\n  viewPresetNameFormControl: FormControl = new FormControl('');\n\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  constructor(private activeModalRef: ActiveModalRef, protected injector: Injector) {\n    super(activeModalRef, injector);\n\n    this.modalData = this.activeModalRef.getData();\n    this.viewPresetNameFormControl.setValue(this.modalData.viewPresetName);\n\n    this.viewPresetNameFormControl.valueChanges.pipe(takeUntil(this.destroyed$)).subscribe((value) => {\n      if (this.viewPresetNameFormControl.dirty && value === this.modalData.viewPresetName) {\n        this.viewPresetNameFormControl.reset(this.modalData.viewPresetName);\n      }\n    });\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  save(): void {\n    this.activeModalRef.close(this.generateUniqueViewPresetName(this.viewPresetNameFormControl.value));\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  isViewPresetNameUnique(viewPresetName: string): boolean {\n    const trimmedViewPresetName = viewPresetName.trim();\n\n    return !this.modalData.existingViewPresetNames.some(\n      (existingViewPresetName) => existingViewPresetName === trimmedViewPresetName\n    );\n  }\n\n  private generateUniqueViewPresetName(viewPresetName: string): string {\n    const trimmedViewPresetName = viewPresetName.trim();\n\n    let uniqueViewPresetName = trimmedViewPresetName;\n    let suffix = 1;\n\n    while (!this.isViewPresetNameUnique(uniqueViewPresetName)) {\n      uniqueViewPresetName = `${trimmedViewPresetName}-${suffix++}`;\n    }\n\n    return uniqueViewPresetName;\n  }\n}\n","<div class=\"modal-body\">\n  <adapt-rx-textfield\n    [formControl]=\"viewPresetNameFormControl\"\n    [label]=\"modalData.fieldLabel\"\n    name=\"viewPresetName\"\n    rx-id=\"view-preset-name-field\"\n    [maxlength]=\"254\"\n    required=\"true\"\n    rxNoWhitespace\n    [autofocus]=\"true\"\n  >\n  </adapt-rx-textfield>\n\n  <p *ngIf=\"!isViewPresetNameUnique(viewPresetNameFormControl.value)\" class=\"text-info m-0 pt-1\">\n    {{\n      'com.bmc.arsys.rx.client.view-components.view-preset-selector.view-preset-already-exists.error.message'\n        | translate\n    }}\n  </p>\n</div>\n<div class=\"modal-footer\">\n  <button\n    adapt-button\n    btn-type=\"primary\"\n    type=\"button\"\n    rx-id=\"save-button\"\n    (click)=\"save()\"\n    [disabled]=\"viewPresetNameFormControl.invalid || viewPresetNameFormControl.pristine\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n  <button adapt-button btn-type=\"secondary\" type=\"button\" rx-id=\"cancel-button\" (click)=\"cancel()\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n"]}