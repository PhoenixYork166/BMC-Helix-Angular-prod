{"version":3,"file":"runtime-view-canvas.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/runtime/components/runtime-view-canvas/component/runtime-view-canvas.component.ts","../../../../../../../../../libs/platform/view/runtime/components/runtime-view-canvas/component/runtime-view-canvas.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAqB,MAAM,EAAE,MAAM,eAAe,CAAC;AAC1F,OAAO,EAAE,iBAAiB,EAAE,MAAM,2CAA2C,CAAC;AAC9E,OAAO,EAAE,wBAAwB,EAAE,MAAM,+BAA+B,CAAC;AAEzE,OAAO,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;;;;;AAO3C,MAAM,OAAO,0BAA0B;IAOrC,YAAoB,wBAAkD;QAAlD,6BAAwB,GAAxB,wBAAwB,CAA0B;QAJ5D,6BAAwB,GAAkD,IAAI,YAAY,EAAE,CAAC;QAEvG,aAAQ,GAAqB,IAAI,OAAO,EAAW,CAAC;IAEqB,CAAC;IAE1E,QAAQ;QACN,IAAI,CAAC,wBAAwB,CAAC,yBAAyB;aACpD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC,CAAC,KAAsC,EAAE,EAAE;YACpD,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;;uHApBU,0BAA0B;2GAA1B,0BAA0B,kJAF1B,CAAC,wBAAwB,CAAC,0BCVvC,wHACA;2FDWa,0BAA0B;kBALtC,SAAS;mBAAC;oBACT,QAAQ,EAAE,wBAAwB;oBAClC,WAAW,EAAE,sCAAsC;oBACnD,SAAS,EAAE,CAAC,wBAAwB,CAAC;iBACtC;+GAEU,MAAM;sBAAd,KAAK;gBAEI,wBAAwB;sBAAjC,MAAM","sourcesContent":["import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { RuntimeLayoutItem } from '../../../layout/runtime-layout-item.class';\nimport { RuntimeViewCanvasService } from './runtime-view-canvas.service';\nimport { ICanvasComponentPropertyChanged } from '../interfaces/canvas-component-property-changed.interface';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'rx-runtime-view-canvas',\n  templateUrl: './runtime-view-canvas.component.html',\n  providers: [RuntimeViewCanvasService]\n})\nexport class RuntimeViewCanvasComponent implements OnInit, OnDestroy {\n  @Input() layout: RuntimeLayoutItem;\n\n  @Output() componentPropertyChanged: EventEmitter<ICanvasComponentPropertyChanged> = new EventEmitter();\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  constructor(private runtimeViewCanvasService: RuntimeViewCanvasService) {}\n\n  ngOnInit(): void {\n    this.runtimeViewCanvasService.componentPropertyChanged$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((event: ICanvasComponentPropertyChanged) => {\n        this.componentPropertyChanged.emit(event);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","<rx-runtime-view-canvas-item class=\"root-item\" *ngIf=\"layout\" [layout]=\"layout\"></rx-runtime-view-canvas-item>\n"]}