{"version":3,"file":"connection-mapping.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/admin/components/connection-mapping/common/connection-mapping.component.ts","../../../../../../../../libs/platform/admin/components/connection-mapping/common/connection-mapping.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { RxRecordInstanceService, RxRecordInstanceUpdateService } from '@helix/platform/record/api';\nimport { IPlainObject, RxNotificationService } from '@helix/platform/shared/api';\nimport { get } from 'lodash';\nimport { RX_CONNECTION_MAPPING } from './connection-mapping.constant';\nimport { AliasType } from './connection-mapping.types';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-connection-mapping',\n  templateUrl: './connection-mapping.component.html'\n})\nexport class ConnectionMappingComponent implements OnInit {\n  @Input()\n  configurations: IPlainObject;\n\n  @Input()\n  aliasMapping: IPlainObject;\n\n  @Input()\n  aliasType: AliasType;\n\n  aliasNameId: number = RX_CONNECTION_MAPPING.aliasMapping.fields.aliasName;\n  connectionConfiguration: RxSelectOption;\n\n  constructor(\n    private rxNotificationService: RxNotificationService,\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private rxRecordInstanceUpdateService: RxRecordInstanceUpdateService,\n    private translateService: TranslateService\n  ) {\n    this.optionFormatter = this.optionFormatter.bind(this);\n  }\n\n  ngOnInit() {\n    if (this.aliasMapping[RX_CONNECTION_MAPPING.aliasMapping.fields.aliasValue]) {\n      const connectionConfiguration = this.configurations.find(\n        (config) =>\n          config[RX_CONNECTION_MAPPING.dataSource.fields.id] ===\n          this.aliasMapping[RX_CONNECTION_MAPPING.aliasMapping.fields.aliasValue]\n      );\n\n      this.connectionConfiguration = [connectionConfiguration];\n    }\n  }\n\n  optionFormatter(configurationOption: RxSelectOption): string {\n    const fieldName =\n      this.aliasType === AliasType.Connector\n        ? RX_CONNECTION_MAPPING.connector.fields.target_name\n        : RX_CONNECTION_MAPPING.dataSource.fields.name;\n\n    return get(configurationOption, fieldName, 'Select configuration');\n  }\n\n  onConnectionConfigurationChange(configuration): void {\n    this.rxRecordInstanceService\n      .get(\n        RX_CONNECTION_MAPPING.aliasMapping.recordDefinitionName,\n        this.aliasMapping[RX_CONNECTION_MAPPING.aliasMapping.fields.id]\n      )\n      .subscribe((recordInstance) => {\n        recordInstance.setFieldValue(\n          RX_CONNECTION_MAPPING.aliasMapping.fields.aliasValue,\n          configuration[0][RX_CONNECTION_MAPPING.dataSource.fields.id]\n        );\n\n        this.rxRecordInstanceUpdateService.execute(recordInstance).subscribe(() => {\n          this.rxNotificationService.addSuccessMessage(\n            this.translateService.instant('com.bmc.arsys.rx.client.admin.connection-mapping.mapping-saved.message')\n          );\n        });\n      });\n  }\n}\n","<div class=\"row\">\n  <adapt-rx-textfield\n    class=\"col-md-6 form-group\"\n    rx-id=\"connection-target\"\n    label=\"{{ 'com.bmc.arsys.rx.client.admin.connection-mapping.connection-target.label' | translate }}\"\n    disabled=\"true\"\n    [(ngModel)]=\"aliasMapping[this.aliasNameId]\"\n  ></adapt-rx-textfield>\n\n  <adapt-rx-select\n    class=\"d-block col-md-6 form-group\"\n    rx-id=\"connection-configuration\"\n    label=\"{{ 'com.bmc.arsys.rx.client.admin.connection-mapping.connection-configuration.label' | translate }}\"\n    [ngModel]=\"connectionConfiguration\"\n    [options]=\"configurations\"\n    [optionFormatter]=\"optionFormatter\"\n    (ngModelChange)=\"onConnectionConfigurationChange($event)\"\n  ></adapt-rx-select>\n</div>\n"]}