{"version":3,"file":"associate-view-action.module.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/actions/associate/associate-view-action.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACzC,OAAO,EAAE,2BAA2B,EAAE,yBAAyB,EAAE,MAAM,0BAA0B,CAAC;AAClG,OAAO,EAAE,4BAA4B,EAAE,MAAM,iCAAiC,CAAC;AAC/E,OAAO,EAAE,oBAAoB,EAAE,MAAM,sCAAsC,CAAC;AAC5E,OAAO,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAC5D,OAAO,EAAE,gCAAgC,EAAE,MAAM,4CAA4C,CAAC;;;;AAK9F,MAAM,OAAO,yBAAyB;IACpC,YACU,2BAAwD,EACxD,4BAA0D;QAD1D,gCAA2B,GAA3B,2BAA2B,CAA6B;QACxD,iCAA4B,GAA5B,4BAA4B,CAA8B;QAElE,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC;YACxC,IAAI,EAAE,mBAAmB;YACzB,KAAK,EAAE,mBAAmB;YAC1B,QAAQ,EAAE,cAAc,CAAC,gBAAgB;YACzC,OAAO,EAAE,IAAI,CAAC,4BAA4B;YAC1C,WAAW,EAAE,gCAAgC;YAC7C,UAAU,EAAE;gBACV;oBACE,IAAI,EAAE,sBAAsB;oBAC5B,KAAK,EAAE,gCAAgC;oBACvC,UAAU,EAAE,IAAI;oBAChB,IAAI,EAAE,yBAAyB,CAAC,MAAM;iBACvC;gBACD;oBACE,IAAI,EAAE,2BAA2B;oBACjC,KAAK,EAAE,oBAAoB;oBAC3B,UAAU,EAAE,IAAI;iBACjB;gBACD;oBACE,IAAI,EAAE,2BAA2B;oBACjC,KAAK,EAAE,6BAA6B;oBACpC,UAAU,EAAE,IAAI;iBACjB;gBACD;oBACE,IAAI,EAAE,oBAAoB;oBAC1B,KAAK,EAAE,sBAAsB;oBAC7B,0BAA0B,EAAE,IAAI;oBAChC,UAAU,EAAE,IAAI;iBACjB;gBACD;oBACE,IAAI,EAAE,oBAAoB;oBAC1B,KAAK,EAAE,mDAAmD;oBAC1D,UAAU,EAAE,IAAI;oBAChB,IAAI,EAAE,yBAAyB,CAAC,MAAM;iBACvC;gBACD;oBACE,IAAI,EAAE,iBAAiB;iBACxB;gBACD;oBACE,IAAI,EAAE,WAAW;oBACjB,0BAA0B,EAAE,IAAI;iBACjC;gBACD;oBACE,IAAI,EAAE,WAAW;oBACjB,0BAA0B,EAAE,IAAI;iBACjC;aACF;SACF,CAAC,CAAC;IACL,CAAC;;sHArDU,yBAAyB;uHAAzB,yBAAyB,YAF1B,oBAAoB;uHAEnB,yBAAyB,YAF3B,CAAC,oBAAoB,CAAC;2FAEpB,yBAAyB;kBAHrC,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,oBAAoB,CAAC;iBAChC","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RxViewActionRegistryService, ViewComponentPropertyType } from '@helix/platform/view/api';\nimport { RxAssociateViewActionService } from './associate-view-action.service';\nimport { OpenViewActionModule } from '../open-view/open-view-action.module';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxAssociateViewActionDesignModel } from './associate-view-action-design-model.class';\n\n@NgModule({\n  imports: [OpenViewActionModule]\n})\nexport class AssociateViewActionModule {\n  constructor(\n    private rxViewActionRegistryService: RxViewActionRegistryService,\n    private rxAssociateViewActionService: RxAssociateViewActionService\n  ) {\n    this.rxViewActionRegistryService.register({\n      name: 'rxAssociateAction',\n      label: 'Associate records',\n      bundleId: RX_APPLICATION.platformBundleId,\n      service: this.rxAssociateViewActionService,\n      designModel: RxAssociateViewActionDesignModel,\n      parameters: [\n        {\n          name: 'recordDefinitionName',\n          label: 'Record definition to associate',\n          isRequired: true,\n          type: ViewComponentPropertyType.String\n        },\n        {\n          name: 'associationDefinitionName',\n          label: 'Association to use',\n          isRequired: true\n        },\n        {\n          name: 'associationDefinitionRole',\n          label: 'Associated record node side',\n          isRequired: true\n        },\n        {\n          name: 'associatedRecordId',\n          label: 'Associated record ID',\n          enableExpressionEvaluation: true,\n          isRequired: true\n        },\n        {\n          name: 'viewDefinitionName',\n          label: 'View for selecting or creating associated records',\n          isRequired: true,\n          type: ViewComponentPropertyType.String\n        },\n        {\n          name: 'useDefaultRoles'\n        },\n        {\n          name: 'nodeARole',\n          enableExpressionEvaluation: true\n        },\n        {\n          name: 'nodeBRole',\n          enableExpressionEvaluation: true\n        }\n      ]\n    });\n  }\n}\n"]}