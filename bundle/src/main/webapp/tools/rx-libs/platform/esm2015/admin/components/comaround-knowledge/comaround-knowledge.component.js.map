{"version":3,"file":"comaround-knowledge.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/admin/components/comaround-knowledge/comaround-knowledge.component.ts","../../../../../../../libs/platform/admin/components/comaround-knowledge/comaround-knowledge.component.html"],"names":[],"mappings":"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","sourcesContent":["import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport {\n  IAdminComponentSetting,\n  IAdminComponentSettings,\n  RxAdminSettingsService,\n  RxCommandFactoryService,\n  RxNotificationService,\n  RX_APPLICATION\n} from '@helix/platform/shared/api';\nimport { ConnectionTestStatus } from '@helix/platform/ui-kit';\nimport { RxUrlUtilsService } from '@helix/platform/utils';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { find } from 'lodash';\nimport { Observable, of, Subscription, throwError } from 'rxjs';\nimport { catchError, finalize, switchMap, tap } from 'rxjs/operators';\nimport { RxCognitiveServiceService } from '../cognitive-service/cognitive-service.service';\nimport { RX_COMAROUND_KNOWLEDGE } from './comaround-knowledge.constant';\nimport { ComaroundPortal } from './comaround-knowledge.interfaces';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-comaround-knowledge',\n  templateUrl: './comaround-knowledge.component.html',\n  styleUrls: ['./comaround-knowledge.component.scss']\n})\nexport class ComaroundKnowledgeAdminComponent extends BaseViewComponent implements OnInit, OnDestroy {\n  busy: Subscription;\n  knowledgeConfigForm: FormGroup;\n  connectionTestStatus: ConnectionTestStatus = ConnectionTestStatus.Invalid;\n  availablePortals: ComaroundPortal[] = [];\n  private isNewConfigurationSetting = false;\n  private comaroundComponentSettingsValues: IAdminComponentSetting[] = [];\n  private subscription = new Subscription();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private rxUrlUtilsService: RxUrlUtilsService,\n    private rxNotificationService: RxNotificationService,\n    private rxAdminSettingsService: RxAdminSettingsService,\n    private rxCommandFactoryService: RxCommandFactoryService,\n    private rxCognitiveServiceService: RxCognitiveServiceService,\n    private httpClient: HttpClient,\n    private translateService: TranslateService\n  ) {\n    super();\n  }\n\n  private get comaroundConfigFormGroup(): FormGroup {\n    return this.knowledgeConfigForm.controls.comaroundForm as FormGroup;\n  }\n\n  get portalControl(): FormControl {\n    return this.knowledgeConfigForm.controls.portal as FormControl;\n  }\n\n  ngOnInit(): void {\n    this.notifyPropertyChanged('api', {\n      isDirty: () => this.knowledgeConfigForm.dirty\n    });\n\n    this.knowledgeConfigForm = this.formBuilder.group({\n      comaroundForm: this.formBuilder.group({\n        mainUrl: this.formBuilder.control(null, this.validateUrl),\n        frameUrl: this.formBuilder.control(null, this.validateUrl),\n        subscriptionId: this.formBuilder.control(null, Validators.required),\n        userName: this.formBuilder.control(null, Validators.required),\n        password: this.formBuilder.control(null, Validators.required),\n        serverUrl: this.formBuilder.control(null, [Validators.required, this.validateUrl])\n      }),\n      portal: this.formBuilder.control({ value: [], disabled: true })\n    });\n\n    this.busy = this.getComaroundComponentSettings()\n      .pipe(\n        tap((componentSettings) => {\n          const settingNames = Object.values(RX_COMAROUND_KNOWLEDGE.settingNames);\n          const { values } = componentSettings;\n\n          this.isNewConfigurationSetting = values.length === 0;\n          this.comaroundComponentSettingsValues = values;\n\n          // complete the missing configuration settings\n          // works for new configuration too\n          if (values.length < settingNames.length) {\n            const ownerKey = values[0]?.ownerKeyValue1;\n\n            settingNames\n              .filter((name) => !values.find((setting) => setting.settingName === name))\n              .forEach((name) =>\n                values.push({\n                  // these fields satisfy update/create settings\n                  componentName: RX_COMAROUND_KNOWLEDGE.configName,\n                  ownerKeyValue1: ownerKey,\n                  settingName: name,\n                  settingValue: null\n                } as IAdminComponentSetting)\n              );\n          }\n\n          this.comaroundConfigFormGroup.patchValue({\n            serverUrl: this.getValue(RX_COMAROUND_KNOWLEDGE.settingNames.serverUrl),\n            subscriptionId: this.getValue(RX_COMAROUND_KNOWLEDGE.settingNames.subscriptionId),\n            userName: this.getValue(RX_COMAROUND_KNOWLEDGE.settingNames.userName),\n            password: this.getValue(RX_COMAROUND_KNOWLEDGE.settingNames.password),\n            frameUrl: this.getValue(RX_COMAROUND_KNOWLEDGE.settingNames.frameUrl),\n            mainUrl: this.getValue(RX_COMAROUND_KNOWLEDGE.settingNames.mainUrl)\n          });\n        }),\n        switchMap(() => {\n          return this.getValue(RX_COMAROUND_KNOWLEDGE.settingNames.portalId) ? this.getAvailablePortals() : of([]);\n        }),\n        tap((portals) => {\n          this.availablePortals = portals;\n\n          if (portals.length) {\n            const configuredPortalId = this.getValue(RX_COMAROUND_KNOWLEDGE.settingNames.portalId);\n            let selectedPortal: ComaroundPortal =\n              configuredPortalId && portals.find((portal) => portal.id == configuredPortalId);\n\n            selectedPortal ??= portals.find((portal) => portal.isDefault);\n            this.portalControl.setValue([selectedPortal]);\n          }\n        })\n      )\n      .subscribe();\n\n    this.subscription = this.comaroundConfigFormGroup.valueChanges.subscribe(() => {\n      this.connectionTestStatus =\n        this.comaroundConfigFormGroup.pristine || this.comaroundConfigFormGroup.invalid\n          ? ConnectionTestStatus.Invalid\n          : ConnectionTestStatus.Unknown;\n\n      if (this.portalControl.enabled) {\n        this.portalControl.disable();\n      }\n    });\n  }\n\n  private getComaroundComponentSettings(): Observable<IAdminComponentSettings> {\n    return this.rxAdminSettingsService.getComponentSettings(RX_COMAROUND_KNOWLEDGE.configName, {\n      'default-bundle-scope': RX_APPLICATION.chatbotBundleId\n    });\n  }\n\n  getAvailablePortals(): Observable<ComaroundPortal[]> {\n    return this.httpClient\n      .get<ComaroundPortal[]>('/api/rx/application/knowledge?ComAroundRequest=v1/user/portals')\n      .pipe(catchError(() => of([])));\n  }\n\n  portalOptionFormatter(option: ComaroundPortal) {\n    return option.name;\n  }\n\n  private getValue(settingName: string): string | number {\n    const setting = find(this.comaroundComponentSettingsValues, {\n      settingName\n    });\n\n    return setting?.settingValue;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  isSaveButtonDisabled(): boolean {\n    return (\n      this.knowledgeConfigForm.pristine ||\n      this.knowledgeConfigForm.invalid ||\n      this.connectionTestStatus !== ConnectionTestStatus.Passed\n    );\n  }\n\n  private setValue(settingName: string, value: string): void {\n    const setting = find(this.comaroundComponentSettingsValues, {\n      settingName\n    });\n\n    if (setting) {\n      setting.settingValue = value;\n    }\n  }\n\n  saveConfiguration(): void {\n    const formValue = {\n      ...this.comaroundConfigFormGroup.getRawValue(),\n      portal: this.portalControl.value\n    };\n\n    let adminSetting$: Observable<any>;\n\n    this.setValue(RX_COMAROUND_KNOWLEDGE.settingNames.serverUrl, formValue.serverUrl);\n    this.setValue(RX_COMAROUND_KNOWLEDGE.settingNames.subscriptionId, formValue.subscriptionId);\n    this.setValue(RX_COMAROUND_KNOWLEDGE.settingNames.userName, formValue.userName);\n    this.setValue(RX_COMAROUND_KNOWLEDGE.settingNames.password, formValue.password);\n    this.setValue(RX_COMAROUND_KNOWLEDGE.settingNames.frameUrl, formValue.frameUrl);\n    this.setValue(RX_COMAROUND_KNOWLEDGE.settingNames.mainUrl, formValue.mainUrl);\n    this.setValue(RX_COMAROUND_KNOWLEDGE.settingNames.portalId, formValue.portal[0]?.id);\n\n    if (this.isNewConfigurationSetting) {\n      adminSetting$ = this.rxAdminSettingsService\n        .createComponentSettings(RX_COMAROUND_KNOWLEDGE.configName, this.comaroundComponentSettingsValues)\n        .pipe(\n          switchMap(() => this.getComaroundComponentSettings()),\n          tap((response) => {\n            this.isNewConfigurationSetting = false;\n            this.comaroundComponentSettingsValues = response.values;\n          })\n        );\n    } else {\n      adminSetting$ = this.rxAdminSettingsService.updateComponentSettings(\n        `${RX_COMAROUND_KNOWLEDGE.configName}/${this.comaroundComponentSettingsValues[0].ownerKeyValue1}`,\n        this.comaroundComponentSettingsValues\n      );\n    }\n\n    this.busy = adminSetting$.subscribe(() => {\n      this.knowledgeConfigForm.markAsPristine();\n      this.updateComaroundTokenWithLatestValues();\n\n      this.rxNotificationService.addSuccessMessage(\n        this.translateService.instant('com.bmc.arsys.rx.client.admin.comaround-knowledge.configuration-saved.message')\n      );\n\n      this.connectionTestStatus = ConnectionTestStatus.Invalid;\n      this.portalControl.disable();\n    });\n  }\n\n  private updateComaroundTokenWithLatestValues(): void {\n    this.rxCommandFactoryService\n      .forResourceType('com.bmc.dsm.chatbot.command.UpdateComAroundTokenCommand')\n      .execute({})\n      .subscribe();\n  }\n\n  onTestConnection(): void {\n    const formValue = this.comaroundConfigFormGroup.getRawValue();\n\n    this.knowledgeConfigForm.disable();\n\n    this.rxCognitiveServiceService\n      .testConnection({\n        resourceType: RX_COMAROUND_KNOWLEDGE.pingComAroundCommand,\n        serverUrl: formValue.serverUrl,\n        subscriptionId: formValue.subscriptionId,\n        userName: formValue.userName,\n        password: formValue.password,\n        frameUrl: formValue.frameUrl,\n        mainUrl: formValue.mainUrl\n      })\n      .pipe(\n        finalize(() => this.comaroundConfigFormGroup.enable({ emitEvent: false })),\n        catchError((error: HttpErrorResponse) => {\n          this.connectionTestStatus = ConnectionTestStatus.Failed;\n\n          return throwError(error);\n        })\n      )\n      .subscribe((portals: ComaroundPortal[] | undefined) => {\n        this.availablePortals = portals || [];\n\n        if (portals) {\n          const configuredPortalId = this.getValue(RX_COMAROUND_KNOWLEDGE.settingNames.portalId);\n          let selectedPortal: ComaroundPortal =\n            configuredPortalId && portals.find((portal) => portal.id == configuredPortalId);\n\n          selectedPortal ??= portals.find((portal) => portal.isDefault);\n          this.portalControl.setValue([selectedPortal]);\n          this.portalControl.enable();\n        }\n\n        this.connectionTestStatus = ConnectionTestStatus.Passed;\n      });\n  }\n\n  validateUrl(): (control: AbstractControl) => ValidationErrors | null {\n    return (control: AbstractControl) => {\n      return control.value && !this.rxUrlUtilsService.isValidUrl(control.value, true)\n        ? { invalidUrl: { message: this.translateService.instant('com.bmc.arsys.rx.client.admin.invalid-url.label') } }\n        : null;\n    };\n  }\n}\n","<rx-admin-settings\n  header=\" {{ 'com.bmc.arsys.rx.client.admin.comaround-knowledge.header.title' | translate }}\"\n  [busy]=\"busy\">\n  <form [formGroup]=\"knowledgeConfigForm\">\n    <fieldset formGroupName=\"comaroundForm\">\n      <adapt-rx-textfield\n        rx-id=\"main-url\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.comaround-knowledge.main-url.label' | translate }}\"\n        class=\"d-block form-group\"\n        formControlName=\"mainUrl\">\n      </adapt-rx-textfield>\n\n      <adapt-rx-textfield\n        rx-id=\"frame-url\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.comaround-knowledge.frame-url.label' | translate }}\"\n        class=\"d-block form-group\"\n        formControlName=\"frameUrl\">\n      </adapt-rx-textfield>\n\n      <adapt-rx-textfield\n        rx-id=\"server-url\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.comaround-knowledge.api-endpoint-url.label' | translate }}\"\n        class=\"d-block form-group\"\n        formControlName=\"serverUrl\">\n      </adapt-rx-textfield>\n\n      <adapt-rx-textfield\n        rx-id=\"subscription-id\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.comaround-knowledge.subscription-id.label' | translate }}\"\n        formControlName=\"subscriptionId\"\n        class=\"d-block form-group\">\n      </adapt-rx-textfield>\n\n      <adapt-rx-textfield\n        rx-id=\"user-name\"\n        label=\"{{ 'com.bmc.arsys.rx.client.common.user-name.label' | translate }}\"\n        formControlName=\"userName\"\n        class=\"d-block form-group\">\n      </adapt-rx-textfield>\n\n      <adapt-rx-textfield\n        rx-id=\"password\"\n        label=\"{{ 'com.bmc.arsys.rx.client.common.password.label' | translate }}\"\n        formControlName=\"password\"\n        isPassword=\"true\"\n        class=\"d-block form-group\">\n      </adapt-rx-textfield>\n\n      <rx-connection-tester\n        buttonType=\"secondary\"\n        [status]=\"connectionTestStatus\"\n        (testConnection)=\"onTestConnection()\"\n        rx-id=\"test-button\"\n        class=\"d-block form-group\">\n      </rx-connection-tester>\n\n    </fieldset>\n\n    <hr />\n\n    <adapt-rx-select\n      rx-id=\"portal\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.comaround-knowledge.portal.label' | translate }}\"\n      formControlName=\"portal\"\n      [options]=\"availablePortals\"\n      [optionFormatter]=\"portalOptionFormatter\"\n      class=\"d-block form-group\"></adapt-rx-select>\n\n    <adapt-alert\n      *ngIf=\"portalControl.disabled\"\n      [config]=\"{type: 'inline', variant: 'info', icon: true}\">\n      {{ \"com.bmc.arsys.rx.client.admin.comaround-knowledge.portal-cannot-be-selected.message\" | translate }}\n    </adapt-alert>\n\n    <div class=\"d-flex justify-content-start mt-5\">\n      <button\n        adapt-button\n        class=\"mr-2\"\n        btn-type=\"primary\"\n        type=\"button\"\n        rx-id=\"save-button\"\n        [disabled]=\"isSaveButtonDisabled()\"\n        (click)=\"saveConfiguration()\">\n        {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n      </button>\n    </div>\n  </form>\n</rx-admin-settings>\n"]}