{"version":3,"file":"search-field-editor-modal.store.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/record/designer/record-designer/search-field-editor/search-field-editor-modal.store.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ComponentStore } from '@ngrx/component-store';\nimport { Observable } from 'rxjs';\nimport { IFieldDefinition, RX_RECORD_DEFINITION, ISearchDefinition } from '@helix/platform/record/api';\nimport { IRecordSearchFieldsEditorState } from './search-field.types';\nimport { FormGroup } from '@angular/forms';\nimport { find } from 'lodash';\n\n@Injectable()\nexport class SearchFieldEditorModalStore extends ComponentStore<IRecordSearchFieldsEditorState> {\n  readonly searchFields$ = this.select((state: IRecordSearchFieldsEditorState) => state.searchFields);\n  readonly availableFields$ = this.select((state: IRecordSearchFieldsEditorState) => state.availableFields);\n  readonly isDirty$: Observable<boolean> = this.select((state: IRecordSearchFieldsEditorState) => state.isDirty);\n  readonly isValid$: Observable<boolean> = this.select((state: IRecordSearchFieldsEditorState) => state.isValid);\n\n  readonly vm$ = this.select(\n    this.availableFields$,\n    this.searchFields$,\n    this.isDirty$,\n    this.isValid$,\n    (availableFields, searchFields, isDirty, isValid) => ({\n      availableFields,\n      searchFields,\n      isDirty,\n      isValid\n    })\n  );\n\n  readonly toggleOpen = this.updater((state: IRecordSearchFieldsEditorState, toggleValue: boolean) => {\n    const searchFieldItems = [...state.searchFields];\n\n    searchFieldItems.forEach((control) => {\n      control.get('isOpen').setValue(toggleValue);\n    });\n\n    return {\n      ...state,\n      searchFields: searchFieldItems\n    };\n  });\n\n  readonly updateFields = this.updater((state: IRecordSearchFieldsEditorState, field: FormGroup) => ({\n    ...state,\n    searchFields: [...state.searchFields, field],\n    isValid: false\n  }));\n\n  readonly updateAvailableFields = this.updater((state: IRecordSearchFieldsEditorState, field: IFieldDefinition) => {\n    const updatedSearchFields = [...state.searchFields];\n\n    updatedSearchFields.forEach((control) => {\n      control\n        .get('isCategoryVisible')\n        .setValue(\n          find(state.availableFields, { id: field.id }).resourceType !== RX_RECORD_DEFINITION.resourceTypes.attachment\n        );\n    });\n\n    return {\n      ...state,\n      availableFields: state.availableFields.filter((availableField) => availableField.id !== field.id),\n      isDirty: true,\n      searchFields: updatedSearchFields,\n      isValid: !state.searchFields.some((form) => form.invalid)\n    };\n  });\n\n  readonly removeSearchField = this.updater((state: IRecordSearchFieldsEditorState, fieldIndex: number) => ({\n    ...state,\n    isDirty: true,\n    searchFields: state.searchFields.filter((field, index) => fieldIndex !== index),\n    isValid: !state.searchFields.some((form) => form.invalid)\n  }));\n\n  readonly markDirty = this.updater((state: IRecordSearchFieldsEditorState) => ({\n    ...state,\n    isDirty: true,\n    isValid: !state.searchFields.some((form) => form.invalid)\n  }));\n\n  constructor() {\n    super({\n      searchFields: [],\n      isDirty: false,\n      isCategoryVisible: true,\n      isValid: true,\n      availableFields: [],\n      searchDefinition: {} as ISearchDefinition\n    });\n  }\n}\n"]}