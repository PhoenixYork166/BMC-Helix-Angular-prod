{"version":3,"file":"action-list-editor-dialog.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/designer/form-controls/action-list-control/action-list-editor-dialog/action-list-editor-dialog.component.ts","../../../../../../../../../libs/platform/view/designer/form-controls/action-list-control/action-list-editor-dialog/action-list-editor-dialog.component.html"],"names":[],"mappings":"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","sourcesContent":["import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { AfterViewInit, Component, ElementRef, Injector, OnDestroy, QueryList, ViewChildren } from '@angular/core';\nimport {\n  ActiveModalRef,\n  AdaptAccordionTabComponent,\n  DismissReasons,\n  KeyValueObject,\n  toNumber,\n  TreeWrap\n} from '@bmc-ux/adapt-angular';\nimport { IPlainObject } from '@helix/platform/shared/api';\nimport { RX_EXPRESSION_EDITOR, RxExpressionEditorService } from '@helix/platform/shared/components';\nimport { RxGuidService, RxStringService } from '@helix/platform/utils';\nimport { IViewActionDescriptor, IViewActionDesignModel, RxViewActionRegistryService } from '@helix/platform/view/api';\nimport { cloneDeep, findIndex, flow, get, map as _map, pull, set, sortBy, toPath, transform } from 'lodash';\nimport { BehaviorSubject, Observable, of, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ViewDesignerFacade } from '../../../+state/view-designer.facade';\nimport { IActionLabelsMap, IViewActionListItem } from '../action-list-control.types';\nimport { RxActionListModelManagerService } from '../action-list-model-manager.service';\nimport { IActionEditorDialogConfig, IViewActionEditorDialogItem } from './action-list-editor-dialog.types';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { TreeNode } from 'primeng/api/treenode';\n\n@Component({\n  selector: 'rx-action-list-editor-dialog',\n  templateUrl: './action-list-editor-dialog.component.html',\n  styleUrls: ['./action-list-editor-dialog.component.scss'],\n  providers: [RxActionListModelManagerService]\n})\nexport class ActionListEditorDialogComponent extends RxModalClass implements AfterViewInit, OnDestroy {\n  @ViewChildren(AdaptAccordionTabComponent, { read: ElementRef })\n  private accordionTabEls: QueryList<ElementRef>;\n\n  availableActionDescriptors$ = this.rxViewActionRegistryService.getLicensedActions();\n  availableActionTreeNodes$: Observable<TreeNode<IViewActionDescriptor>[]>;\n  actionLabelsMap$: Observable<IActionLabelsMap>;\n  selectedActions: IViewActionEditorDialogItem[] = [];\n  config: IActionEditorDialogConfig = this.activeModalRef.getData();\n  treeWrap: TreeWrap = TreeWrap.WrapAll;\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private isEditorDirtySubject = new BehaviorSubject<boolean>(false);\n\n  isSaveButtonDisabled$ = this.isEditorDirtySubject.asObservable().pipe(map((isDirty) => !isDirty));\n\n  constructor(\n    private rxViewActionRegistryService: RxViewActionRegistryService,\n    private rxStringService: RxStringService,\n    public activeModalRef: ActiveModalRef,\n    private viewDesignerFacade: ViewDesignerFacade,\n    private rxActionListModelManagerService: RxActionListModelManagerService,\n    private rxExpressionEditorService: RxExpressionEditorService,\n    private rxGuidService: RxGuidService,\n    private translateService: TranslateService,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n\n    this.availableActionTreeNodes$ = this.availableActionDescriptors$.pipe(\n      map((actions) =>\n        actions\n          .filter((action) => !action.hidden)\n          .sort((a, b) => a.label.localeCompare(b.label))\n          .map((action) => ({\n            data: action,\n            label: action.label\n          }))\n      )\n    );\n\n    this.actionLabelsMap$ = this.availableActionDescriptors$.pipe(\n      map(\n        (actions) =>\n          transform(\n            actions,\n            (result, action) => {\n              result[action.name] = action.label;\n            },\n            {}\n          ) as IActionLabelsMap\n      )\n    );\n\n    this.config.selectedActions = _map(this.config.selectedActions, (action) => ({\n      ...action,\n      data: {\n        ...action.data,\n        index: toNumber(action.data.index)\n      }\n    }));\n\n    this.selectedActions = flow(\n      (actions) => sortBy(actions, (action) => action.data.index),\n      (actions) =>\n        _map(actions, (action: IViewActionListItem) => {\n          const descriptor = this.rxViewActionRegistryService.get(action.data.name);\n\n          this.viewDesignerFacade.setActionDataDictionaryBranch(action.guid, action.data.index, action.data.name);\n\n          const model = this.rxActionListModelManagerService.create(descriptor, action.guid, action.data);\n\n          return {\n            isOpen: Boolean(this.config.actionToEdit) && action.guid === this.config.actionToEdit.guid,\n            model,\n            config$: model.sandbox.actionPropertyEditorConfig$.pipe(map((config) => [{ controls: config }])),\n            name: descriptor.name\n          };\n        })\n    )(this.config.selectedActions);\n  }\n\n  isDirty(): boolean {\n    return this.isEditorDirtySubject.getValue();\n  }\n\n  addAction(actionDescriptor: IViewActionDescriptor, index = this.selectedActions.length): void {\n    const guid = this.rxGuidService.generate();\n\n    this.viewDesignerFacade.setActionDataDictionaryBranch(guid, index, actionDescriptor.name);\n\n    const model = this.rxActionListModelManagerService.create(actionDescriptor, guid, {\n      name: actionDescriptor.name,\n      index\n    });\n\n    this.selectedActions.splice(index, 0, {\n      isOpen: true,\n      model,\n      config$: model.sandbox.actionPropertyEditorConfig$.pipe(map((config) => [{ controls: config }])),\n      name: actionDescriptor.name\n    });\n\n    this.updateIndexProp();\n    this.markEditorAsDirty();\n\n    setTimeout(() => {\n      this.accordionTabEls.toArray()[index].nativeElement.scrollIntoView({\n        block: 'nearest'\n      });\n    });\n  }\n\n  onSave(): void {\n    const result: IViewActionListItem[] = this.selectedActions.map((action) => ({\n      guid: action.model.guid,\n      data: action.model.getPropertiesByName(),\n      children: action.model.getChildren?.() ?? null\n    }));\n\n    this.activeModalRef.close(result);\n  }\n\n  removeAction(action: IViewActionEditorDialogItem): void {\n    pull(this.selectedActions, action);\n\n    this.rxActionListModelManagerService.remove(action.model.guid);\n\n    this.viewDesignerFacade.removeActionDataDictionaryBranch(action.model.guid);\n    this.markEditorAsDirty();\n  }\n\n  moveAction(fromIndex: number, toIndex: number): void {\n    moveItemInArray(this.selectedActions, fromIndex, toIndex);\n    this.updateIndexProp();\n    this.markEditorAsDirty();\n  }\n\n  toggleOpen(expandAll: boolean): void {\n    this.selectedActions.forEach((action) => (action.isOpen = expandAll));\n  }\n\n  onSelectedActionsListDrop(event: CdkDragDrop<IViewActionDescriptor | IViewActionEditorDialogItem>): void {\n    const data = event.item.data;\n\n    if (data.model?.guid) {\n      this.moveAction(event.previousIndex, event.currentIndex);\n    } else {\n      this.addAction(data, event.currentIndex);\n    }\n  }\n\n  openExpressionEditor(\n    model: IViewActionDesignModel<IPlainObject>,\n    propertyPath: string,\n    propertyLabel: string,\n    isReadOnly = false,\n    element: Element\n  ): void {\n    this.rxExpressionEditorService\n      .openEditor({\n        property: {\n          path: propertyPath,\n          value: get(model.sandbox.getActionProperties(), propertyPath),\n          label: propertyLabel\n        },\n        isReadOnly,\n        expressionConfigurator: model.getExpressionConfigurator(),\n        legend: [\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.function.label'),\n            icon: 'd-icon-mathematical_function'\n          },\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'),\n            icon: 'd-icon-dollar'\n          },\n          {\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.client.expression-editor.legend.view-component.label'\n            ),\n            icon: 'd-icon-file_o'\n          },\n          {\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.client.expression-editor.legend.view-component-property.label'\n            ),\n            icon: 'd-icon-file_o_gear'\n          },\n          {\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.client.expression-editor.legend.view-input-parameter.label'\n            ),\n            icon: 'd-icon-arrow_right_square_input'\n          }\n        ],\n        expressionPropertyNavigator: {\n          getProperties: () => {\n            const properties = Array.from(element.querySelectorAll('rx-expression-form-control')).map(\n              (controlElement: Element) => {\n                const path = controlElement.getAttribute('property-path');\n\n                return {\n                  path,\n                  value: get(model.sandbox.getActionProperties(), path),\n                  label: controlElement.getAttribute('property-label')\n                };\n              }\n            );\n\n            return of(properties);\n          }\n        }\n      })\n      .pipe(\n        map(({ path, value }) => {\n          const props = model.sandbox.getActionProperties();\n          const headPropertyName = path in props ? path : toPath(path)[0];\n\n          return set({ [headPropertyName]: cloneDeep(props[headPropertyName]) }, path, value);\n        })\n      )\n      .subscribe((props) => {\n        model.sandbox.updateActionProperties(props);\n        this.markEditorAsDirty();\n      });\n  }\n\n  onEvent(event: IPlainObject, model: IViewActionDesignModel, element: Element): void {\n    if (event.type === RX_EXPRESSION_EDITOR.events.openExpressionEditor) {\n      this.openExpressionEditor(\n        model,\n        event.payload.propertyPath,\n        event.payload.propertyLabel,\n        event.payload.isReadOnly,\n        element\n      );\n    }\n  }\n\n  private updateIndexProp(): void {\n    this.selectedActions.forEach((action, index) => {\n      action.model.sandbox.updateActionProperties({\n        index\n      } as KeyValueObject);\n    });\n\n    this.viewDesignerFacade.updateActionDataDictionaryBranchOrder(\n      this.selectedActions.reduce((result, action, index) => {\n        result[action.model.guid] = index;\n\n        return result;\n      }, {})\n    );\n  }\n\n  markEditorAsDirty(): void {\n    this.isEditorDirtySubject.next(true);\n  }\n\n  ngAfterViewInit(): void {\n    const openActionIndex = findIndex(this.selectedActions, 'isOpen');\n\n    if (openActionIndex !== -1) {\n      this.accordionTabEls.toArray()[openActionIndex].nativeElement.scrollIntoView({\n        block: 'nearest'\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.isEditorDirtySubject.complete();\n\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n\n    this.viewDesignerFacade.removeAllActionDataDictionaryBranches();\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"designer-modal-body modal-body d-flex mh-100\">\n  <div class=\"row flex-grow-1 w-100\">\n    <div *ngIf=\"!config.isReadOnly\" class=\"col-4 border-right d-flex flex-column mh-100\">\n      <div class=\"d-flex align-items-start justify-content-between\">\n        <h4 class=\"mt-2\">\n          {{ 'com.bmc.arsys.rx.client.view-components.action-list.available-actions.title' | translate }}\n        </h4>\n      </div>\n\n      <div class=\"rx-card card flex-grow-1 mt-2\">\n        <div class=\"card-block\" *ngIf=\"availableActionTreeNodes$ | async as availableActionTreeNodes\">\n          <div\n            *ngIf=\"availableActionTreeNodes.length; else adaptTreeEmptyStateTemplate\"\n            cdkDropList\n            cdkDropListSortingDisabled\n            [cdkDropListConnectedTo]=\"'selected-action-list'\"\n          >\n            <adapt-tree\n              [value]=\"availableActionTreeNodes\"\n              filter=\"true\"\n              [wrap]=\"treeWrap\"\n            >\n              <ng-template let-action adaptTreeNodeTemplate>\n                <div\n                  *ngIf=\"action.data\"\n                  class=\"rx-tree-draggable-node\"\n                  cdkDrag\n                  [cdkDragData]=\"action.data\"\n                >\n                  <div (dblclick)=\"addAction(action.data)\">\n                    <button\n                      type=\"button\"\n                      class=\"rx-button-unstyled d-icon-plus_circle\"\n                      (click)=\"addAction(action.data)\"\n                    ></button>\n\n                    <span class=\"rx-tree-node-label ml-3\">{{ action.data.label }}</span>\n                  </div>\n                </div>\n              </ng-template>\n            </adapt-tree>\n          </div>\n\n          <ng-template #adaptTreeEmptyStateTemplate>\n            <div class=\"d-flex justify-content-center h-100 align-items-center mt-2\">\n              <adapt-empty-state\n                class=\"w-100\"\n                label=\"{{ 'com.bmc.arsys.rx.client.view-components.action-list.available-actions.empty-state.message' | translate }}\"\n                type=\"search\"\n              ></adapt-empty-state>\n            </div>\n          </ng-template>         \n        </div>\n      </div>\n    </div>\n\n    <div class=\"d-flex flex-column mh-100 {{ config.isReadOnly ? 'col' : 'col-8' }}\">\n      <div class=\"d-flex align-items-start justify-content-between\">\n        <div class=\"d-flex align-items-center\">\n          <h4 class=\"mt-2\">\n            {{ 'com.bmc.arsys.rx.client.view-components.action-list.selected-actions.title' | translate }}\n          </h4>\n\n          <adapt-icon\n            class=\"ml-2\"\n            name=\"question_circle_o\"\n            adaptPopover=\"{{ 'com.bmc.arsys.rx.client.view-components.action-list.selected-actions.tooltip' | translate }}\"\n            appendToBody=\"true\"\n          >\n          </adapt-icon>\n        </div>\n\n        <div *ngIf=\"selectedActions.length\" class=\"btn-group\">\n          <button\n            adapt-button\n            btn-type=\"tertiary\"\n            type=\"button\"\n            rx-id=\"expand-all-button\"\n            (click)=\"toggleOpen(true)\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.expand-all.label' | translate }}\n          </button>\n\n          <button\n            adapt-button\n            btn-type=\"tertiary\"\n            type=\"button\"\n            rx-id=\"collapse-all-button\"\n            (click)=\"toggleOpen(false)\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.collapse-all.label' | translate }}\n          </button>\n        </div>\n      </div>\n\n      <div\n        id=\"selected-action-list\"\n        class=\"designer-modal-accordion-wrapper\"\n        cdkDropList\n        (cdkDropListDropped)=\"onSelectedActionsListDrop($event)\"\n      >\n        <adapt-accordion [multiselect]=\"true\">\n          <div\n            *ngFor=\"\n              let action of selectedActions;\n              let index = index;\n              let first = first;\n              let last = last;\n            \"\n            class=\"designer-modal-accordion-content\"\n            cdkDrag\n            cdkDragLockAxis=\"y\"\n            [cdkDragData]=\"action\"\n            [cdkDragDisabled]=\"config.isReadOnly\"\n            #container\n          >\n            <div *ngIf=\"!config.isReadOnly\" class=\"designer-modal-drag-handle d-icon-left-dots\" cdkDragHandle></div>\n\n            <adapt-accordion-tab\n              class=\"d-block\"\n              [isOpen]=\"action.isOpen\"\n              (open)=\"action.isOpen = true\"\n              (close)=\"action.isOpen = false\"\n            >\n              <div class=\"card-title-text w-100\">\n                <div class=\"designer-modal-card-title-content\">\n                  <div class=\"left-header-block\" [class.pl-0]=\"config.isReadOnly\">\n                    <div *ngIf=\"actionLabelsMap$ | async as actionLabelsMap\" class=\"rx-ellipsis\" [title]=\"actionLabelsMap[action.name]\"\n                      rx-id=\"card-title\">\n                      {{ actionLabelsMap[action.name] }}\n                    </div>\n                  </div>\n\n                  <div *ngIf=\"!config.isReadOnly\" class=\"right-header-block\">\n                    <div class=\"designer-modal-card-title-index-buttons\">\n                      <button\n                        class=\"d-icon-left-triangle_down rx-button-unstyled\"\n                        type=\"button\"\n                        [disabled]=\"last\"\n                        (click)=\"$event.stopPropagation(); moveAction(index, index + 1)\"\n                        rx-id=\"move-down-button\"\n                      ></button>\n\n                      <button\n                        class=\"d-icon-left-triangle_up rx-button-unstyled\"\n                        type=\"button\"\n                        [disabled]=\"first\"\n                        (click)=\"$event.stopPropagation(); moveAction(index, index - 1)\"\n                        rx-id=\"move-up-button\"\n                      ></button>\n                    </div>\n\n                    <button\n                      class=\"d-icon-left-cross_adapt p-1 pr-4 ml-3\"\n                      adapt-button\n                      size=\"small\"\n                      type=\"button\"\n                      (click)=\"$event.stopPropagation(); removeAction(action)\"\n                      rx-id=\"remove-button\"\n                    >\n                      {{ 'com.bmc.arsys.rx.client.common.remove.label' | translate }}\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              <rx-form-builder\n                class=\"d-block\"\n                [config]=\"action.config$ | async\"\n                [model]=\"action.model.sandbox.actionProperties$ | async\"\n                (modelChange)=\"action.model.sandbox.updateActionProperties($event); markEditorAsDirty()\"\n                (editorEvent)=\"onEvent($event, action.model, container)\"\n                [isReadOnly]=\"config.isReadOnly\"\n              ></rx-form-builder>\n            </adapt-accordion-tab>\n          </div>\n        </adapt-accordion>\n      </div>\n\n      <div *ngIf=\"!selectedActions.length\" class=\"d-flex justify-content-center h-100 align-items-center mt-2\">\n        <adapt-empty-state\n          class=\"w-100\"\n          label=\"{{ 'com.bmc.arsys.rx.client.view-components.action-list.selected-actions.empty-state.message' | translate }}\"\n          type=\"config\"\n        ></adapt-empty-state>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal-footer\">\n  <button\n    *ngIf=\"!config.isReadOnly\"\n    adapt-button\n    btn-type=\"primary\"\n    type=\"button\"\n    rx-id=\"save-button\"\n    [disabled]=\"isSaveButtonDisabled$ | async\"\n    (click)=\"onSave()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button adapt-button btn-type=\"secondary\" type=\"button\" rx-id=\"cancel-button\" (click)=\"cancel()\">\n    {{ config.isReadOnly ? ('com.bmc.arsys.rx.client.common.close.label' | translate) :\n    ('com.bmc.arsys.rx.client.common.cancel.label' | translate) }}\n  </button>\n</div>\n"]}