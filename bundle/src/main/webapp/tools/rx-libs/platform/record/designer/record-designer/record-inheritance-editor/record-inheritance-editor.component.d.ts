import { OnChanges, SimpleChanges } from '@angular/core';
import { IPlainObject, RxNotificationService } from '@helix/platform/shared/api';
import { RxRecordDefinitionCacheService, RxFieldDefinitionService } from '@helix/platform/record/api';
import { IDefinitionPickerComponentOptions, ValueAccessor } from '@helix/platform/shared/components';
import { IInheritanceDescriptor, IInheritanceOptions, IInheritanceSelectorControlValue, IRecordInheritanceSelectorOptions } from './record-inheritance-editor.interfaces';
import { TranslateService } from '@ngx-translate/core';
import { RxFieldDefinitionManagerService } from '../services/field-definition-manager.service';
import { RxGuidService } from '@helix/platform/utils';
import * as i0 from "@angular/core";
export declare class RecordInheritanceEditorComponent extends ValueAccessor<IInheritanceSelectorControlValue> implements OnChanges {
    private translateService;
    private rxFieldDefinitionManagerService;
    private rxRecordDefinitionCacheService;
    private rxNotificationService;
    private rxGuidService;
    private rxFieldDefinitionService;
    options: IRecordInheritanceSelectorOptions;
    inheritFrom: string;
    isInheritingCoreFields: boolean;
    state: IPlainObject;
    private inheritedFieldDefinitions;
    private inheritFromRecordDefinition;
    private isNew;
    inheritanceDescriptor: IInheritanceDescriptor | null;
    inheritanceOptions: IInheritanceOptions;
    recordDefinitionPickerOptions: IDefinitionPickerComponentOptions;
    private destroyed$;
    private isReadOnlySubject;
    private isSharedInstanceStorageLockedSubject;
    private inheritingFromSubject;
    private isMakeFinalDisabledSubject;
    private isSharedInstanceStorageDisabled$;
    private inheritFromRecordDefinition$;
    private isCoreFieldsOptionDisabled$;
    vm$: import("rxjs").Observable<{
        isReadOnly: boolean;
        isSharedInstanceStorageDisabled: boolean;
        isMakeFinalDisabled: boolean;
        isCoreFieldsOptionDisabled: any;
    }>;
    constructor(translateService: TranslateService, rxFieldDefinitionManagerService: RxFieldDefinitionManagerService, rxRecordDefinitionCacheService: RxRecordDefinitionCacheService, rxNotificationService: RxNotificationService, rxGuidService: RxGuidService, rxFieldDefinitionService: RxFieldDefinitionService);
    ngOnInit(): void;
    private updateInheritanceOptions;
    onInheritanceOptionsChange(): void;
    onInheritanceDescriptorChange(): void;
    ngOnChanges(changes: SimpleChanges): void;
    onRecordDefinitionNameChange(recordDefinitionName: string): void;
    onInheritCoreFieldsChange(): void;
    private getInheritedFieldDefinitions;
    private updateValues;
    setValue(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RecordInheritanceEditorComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RecordInheritanceEditorComponent, "rx-record-inheritance-selector", never, { "options": "options"; }, {}, never, never>;
}
