import { DatePipe } from '@angular/common';
import { EventEmitter, Injector, OnInit, SimpleChanges, TemplateRef } from '@angular/core';
import { AdaptIsPanelOpenedCurrentlyModel, AdaptSidebarComponent } from '@bmc-ux/adapt-angular';
import { ColumnConfig, DataCellTemplateParams } from '@bmc-ux/adapt-table';
import { IRecordDefinition, RxFieldDefinitionService, RxRecordDefinitionCacheService, RxRecordDefinitionService } from '@helix/platform/record/api';
import { IDesignerConfiguration, IFormBuilderConfig, IFormBuilderEvent, IPlainObject, RxDefinitionNameService, RxGlobalCacheService, RxNotificationService, RxOverlayService } from '@helix/platform/shared/api';
import { IBreadcrumbItem, IValidationIssue, IValidationIssueSection, RxModalService } from '@helix/platform/ui-kit';
import { TranslateService } from '@ngx-translate/core';
import { Observable } from 'rxjs';
import { IRecordDefinitionModel, IRecordFieldDefinitionGridRow, IRecordFieldDefinitionModel } from '../record-designer.types';
import { RxFieldDefinitionManagerService } from './services/field-definition-manager.service';
import { Store } from '@ngrx/store';
import { RxRecordDefinitionValidatorService } from './record-definition-validator.service';
import { RxRecordDesignerInspectorService } from './record-designer-inspector.service';
import { RxRecordDesignerService } from './record-designer.service';
import { RxExpressionEditorService } from '@helix/platform/shared/components';
import { RxGuidService } from '@helix/platform/utils';
import * as i0 from "@angular/core";
export declare class RecordDesignerComponent implements OnInit {
    private store$;
    private rxNotificationService;
    private rxOverlayService;
    private rxRecordDefinitionValidatorService;
    private rxRecordDesignerInspectorService;
    private rxDefinitionNameService;
    private rxFieldDefinitionManagerService;
    private rxRecordDefinitionService;
    private rxGlobalCacheService;
    private translateService;
    private datePipe;
    private rxModalService;
    private rxFieldDefinitionService;
    private rxRecordDesignerService;
    private rxExpressionEditorService;
    private rxRecordDefinitionCacheService;
    private rxGuidService;
    private injector;
    adaptSidebarComponent: AdaptSidebarComponent;
    requiredCellTemplate: TemplateRef<DataCellTemplateParams>;
    dataTypeCellTemplate: TemplateRef<DataCellTemplateParams>;
    inheritedCellTemplate: TemplateRef<DataCellTemplateParams>;
    configuration: IDesignerConfiguration;
    definitionSaved: EventEmitter<string>;
    definitionErrorLoading: EventEmitter<void>;
    closeDesigner: EventEmitter<void>;
    newTitle: string;
    definition: IRecordDefinition;
    columns: ColumnConfig[];
    private isInheritColumnHidden;
    private isJoinRecordDefinition;
    dataTypes: {
        displayName: string;
        labelKey: string;
        resourceType: string;
        shortName: string;
    }[];
    private inspectorTabIndexSubject;
    private inspectorTabIndex$;
    private selectedFieldGuid$;
    private destroyed$;
    private inspectorFocusEditorSubject;
    inspectorFocusEditor$: Observable<{
        editorName: string;
        data: IPlainObject;
    }>;
    private bundleId$;
    private isDesignMode$;
    private definitionModel$;
    private isDirty$;
    private bundleFriendlyName$;
    private definitionDisplayName$;
    private definitionModelFromDefinition$;
    private primaryRecordDefinition$;
    private secondaryRecordDefinition$;
    private joinRecordDataDictionary$;
    private isNewDefinition$;
    private isJoinRecordDefinition$;
    private definitionFromDefinitionModel$;
    private isFieldsCustomizationAllowed$;
    private isPropertiesCustomizationAllowed$;
    private isPermissionsCustomizationAllowed$;
    private isIndexCustomizationAllowed$;
    private areNewDefinitionsAllowed$;
    private isReadOnly$;
    definitionInspectorConfig$: Observable<IFormBuilderConfig>;
    private fieldGridRows$;
    private isExternalRecordDefinition$;
    private selectedFieldGridRows$;
    private selectedFieldModel$;
    private selectedFieldInspectorConfig$;
    private isJoinOrExternalRecord$;
    private validationIssues$;
    private hasValidationErrors$;
    private hasValidationWarnings$;
    private isSaveButtonDisabled$;
    private breadcrumbItems$;
    private definitionForJsonViewer$;
    overriddenRecordProperties$: Observable<any>;
    private isDeleteFieldButtonDisabled$;
    private isCopyFieldButtonDisabled$;
    private expressionConfigurator;
    private dataDictionary$;
    private isInheritColumnHidden$;
    vm$: Observable<{
        breadcrumbItems: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
        bundleFriendlyName: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
        definitionDisplayName: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
        definitionInspectorConfig: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
        definitionModel: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
        hasValidationErrors: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
        hasValidationWarnings: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
        validationIssues: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
        isSaveButtonDisabled: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
        fieldGridRows: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
        selectedFieldGridRows: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
        definitionForJsonViewer: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
        isDesignMode: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
        selectedFieldModel: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
        selectedFieldInspectorConfig: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
        selectedFieldGuid: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
        isFieldsCustomizationAllowed: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
        isDeleteFieldButtonDisabled: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
        isCopyFieldButtonDisabled: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
        isJoinOrExternalRecord: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
        isReadOnly: string | boolean | IRecordFieldDefinitionModel | IRecordDefinitionModel | IRecordDefinition | IFormBuilderConfig | IValidationIssueSection[] | IRecordFieldDefinitionGridRow[] | IBreadcrumbItem[];
    }>;
    constructor(store$: Store<any>, rxNotificationService: RxNotificationService, rxOverlayService: RxOverlayService, rxRecordDefinitionValidatorService: RxRecordDefinitionValidatorService, rxRecordDesignerInspectorService: RxRecordDesignerInspectorService, rxDefinitionNameService: RxDefinitionNameService, rxFieldDefinitionManagerService: RxFieldDefinitionManagerService, rxRecordDefinitionService: RxRecordDefinitionService, rxGlobalCacheService: RxGlobalCacheService, translateService: TranslateService, datePipe: DatePipe, rxModalService: RxModalService, rxFieldDefinitionService: RxFieldDefinitionService, rxRecordDesignerService: RxRecordDesignerService, rxExpressionEditorService: RxExpressionEditorService, rxRecordDefinitionCacheService: RxRecordDefinitionCacheService, rxGuidService: RxGuidService, injector: Injector);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    onEditorEvent(event: IFormBuilderEvent): void;
    onSelectionChange(selectedFieldModel: IRecordFieldDefinitionModel): void;
    onDefinitionModelChange(newDefinitionModel: IRecordDefinitionModel): void;
    onSelectedFieldModelChange(newSelectedFieldModel: IRecordFieldDefinitionModel): void;
    toggleDesignMode(): void;
    onSidebarToggle(event: AdaptIsPanelOpenedCurrentlyModel): void;
    addNewField(resourceType: string): void;
    openAddNewField(): void;
    copySelectedField(): void;
    deleteSelectedField(): void;
    onBreadcrumbSelected(): void;
    canDeactivate(): boolean;
    saveDefinition(): void;
    onCorrectIssue(validationIssue: IValidationIssue): void;
    onFormInitialized(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RecordDesignerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RecordDesignerComponent, "rx-record-designer", never, { "configuration": "configuration"; }, { "definitionSaved": "definitionSaved"; "definitionErrorLoading": "definitionErrorLoading"; "closeDesigner": "closeDesigner"; }, never, never>;
}
