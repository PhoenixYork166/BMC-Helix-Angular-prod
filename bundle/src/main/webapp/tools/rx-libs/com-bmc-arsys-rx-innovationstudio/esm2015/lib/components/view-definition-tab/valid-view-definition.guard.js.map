{"version":3,"file":"valid-view-definition.guard.js","sourceRoot":"","sources":["../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/components/view-definition-tab/valid-view-definition.guard.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAuC,MAAM,EAAW,MAAM,iBAAiB,CAAC;AACvF,OAAO,EAAE,cAAc,EAAE,uBAAuB,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAC3G,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;;;;AAMrC,MAAM,OAAO,0BAA0B;IACrC,YACU,uBAAgD,EAChD,oBAA0C,EAC1C,MAAc;QAFd,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,WAAM,GAAN,MAAM,CAAQ;IACrB,CAAC;IAEJ,WAAW,CAAC,KAA6B;QACvC,MAAM,kBAAkB,GAAG,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC;QACvD,MAAM,QAAQ,GAAG,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;QAE9E,OAAO,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,IAAI,CACjE,GAAG,CAAC,CAAC,gBAAgB,EAAE,EAAE;YACvB,IACE,gBAAgB,CAAC,aAAa;gBAC9B,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,kBAAkB,CAAC,KAAK,cAAc,CAAC,mBAAmB,EACtG;gBACA,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,cAAc,CAAC,wBAAwB,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;aAChG;YAED,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;0IAvBU,0BAA0B;8IAA1B,0BAA0B,cAFzB,MAAM;2FAEP,0BAA0B;kBAHtC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, UrlTree } from '@angular/router';\nimport { RX_APPLICATION, RxDefinitionNameService, RxGlobalCacheService } from '@helix/platform/shared/api';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxValidViewDefinitionGuard implements CanActivate {\n  constructor(\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private router: Router\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot): Observable<boolean | UrlTree> {\n    const viewDefinitionName = route.params.definitionName;\n    const bundleId = this.rxDefinitionNameService.getBundleId(viewDefinitionName);\n\n    return this.rxGlobalCacheService.getBundleDescriptor(bundleId).pipe(\n      map((bundleDescriptor) => {\n        if (\n          bundleDescriptor.isApplication &&\n          this.rxDefinitionNameService.getDisplayName(viewDefinitionName) === RX_APPLICATION.shellDefinitionName\n        ) {\n          return this.router.createUrlTree([RX_APPLICATION.innovationStudioBundleId, 'shell', bundleId]);\n        }\n\n        return true;\n      })\n    );\n  }\n}\n"]}