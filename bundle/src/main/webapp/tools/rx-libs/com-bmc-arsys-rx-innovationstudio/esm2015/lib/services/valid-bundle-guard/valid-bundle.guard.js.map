{"version":3,"file":"valid-bundle.guard.js","sourceRoot":"","sources":["../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/services/valid-bundle-guard/valid-bundle.guard.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAuC,MAAM,EAAgC,MAAM,iBAAiB,CAAC;AAE5G,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAChD,OAAO,EAAE,oBAAoB,EAAE,YAAY,EAAE,gBAAgB,EAAE,MAAM,4BAA4B,CAAC;;;;AAKlG,MAAM,OAAO,kBAAkB;IAG7B,YACU,oBAA0C,EAC1C,MAAc,EACd,gBAAkC,EAClC,YAA0B;QAH1B,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,WAAM,GAAN,MAAM,CAAQ;QACd,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAN5B,mBAAc,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;IAOhE,CAAC;IAEJ,WAAW,CAAC,KAA6B,EAAE,KAA0B;QACnE,OAAO,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClG,CAAC;IAEO,gBAAgB,CAAC,KAA6B;QACpD,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAEhD,OAAO,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,IAAI,CACjE,GAAG,CAAC,CAAC,gBAAgB,EAAE,EAAE;YACvB,IAAI,CAAC,gBAAgB,EAAE;gBACrB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,sBAAsB,QAAQ,6BAA6B,CAAC,CAAC;gBAEvF,OAAO,IAAI,CAAC,cAAc,CAAC;aAC5B;YAED,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;kIA5BU,kBAAkB;sIAAlB,kBAAkB,cAFjB,MAAM;2FAEP,kBAAkB;kBAH9B,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { RxGlobalCacheService, RxLogService, RxSessionService } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AxValidBundleGuard implements CanActivate {\n  private defaultUrlTree = this.router.parseUrl('/innovationstudio');\n\n  constructor(\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private router: Router,\n    private rxSessionService: RxSessionService,\n    private rxLogService: RxLogService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<UrlTree | boolean> {\n    return this.rxSessionService.sessionActive$.pipe(switchMap(() => this.checkBundleState(route)));\n  }\n\n  private checkBundleState(route: ActivatedRouteSnapshot): Observable<UrlTree | boolean> {\n    const bundleId = route.paramMap.get('bundleId');\n\n    return this.rxGlobalCacheService.getBundleDescriptor(bundleId).pipe(\n      map((bundleDescriptor) => {\n        if (!bundleDescriptor) {\n          this.rxLogService.warning(`Invalid bundle ID: ${bundleId}. Redirecting to home page.`);\n\n          return this.defaultUrlTree;\n        }\n\n        return true;\n      })\n    );\n  }\n}\n"]}