{"version":3,"file":"field-selection-step.component.js","sourceRoot":"","sources":["../../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/components/external-record-wizard/field-selection-step/field-selection-step.component.ts","../../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/components/external-record-wizard/field-selection-step/field-selection-step.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnDestroy, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { chain, defaults, get, includes, isEqual, map as _map, reject, some } from 'lodash';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay, takeUntil } from 'rxjs/operators';\nimport { IDataPageResult } from '@helix/platform/shared/api';\nimport { RxWizardModalComponent } from '@helix/platform/shared/components';\nimport { IFieldDefinition, IRecordDefinition, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport {\n  ColumnSortDirection,\n  IRecordGridColumn,\n  IRecordGridConfig,\n  RecordGridComponent,\n  RowSelectionMode\n} from '@helix/platform/view/components';\nimport { IExternalRecordWizardContext } from '../external-record-wizard.types';\n\n@Component({\n  selector: 'ax-field-selection-step',\n  templateUrl: 'field-selection-step.component.html',\n  styleUrls: ['./field-selection-step.component.scss']\n})\nexport class FieldSelectionStepComponent implements OnInit, OnDestroy {\n  @Input()\n  context: IExternalRecordWizardContext;\n\n  @ViewChild('resourceTypeCellTemplate', { static: true })\n  resourceTypeCellTemplate: TemplateRef<any>;\n\n  @ViewChild('availableFieldsGrid')\n  availableFieldsGrid: RecordGridComponent;\n\n  @ViewChild('selectedFieldsGrid')\n  selectedFieldsGrid: RecordGridComponent;\n\n  availableFieldsGridConfig$: Observable<IRecordGridConfig>;\n  availableFieldsSectionLabel: string;\n  selectedFieldsGridConfig$: Observable<IRecordGridConfig>;\n  selectedFieldsSectionLabel: string;\n\n  private externalFieldIdPath = 'fieldMapping.externalFieldId';\n\n  private availableExternalColumns: IFieldDefinition[] = [];\n  private selectedExternalColumns: IFieldDefinition[] = [];\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  constructor(private rxWizardModalComponent: RxWizardModalComponent, private translateService: TranslateService) {}\n\n  ngOnInit() {\n    this.availableFieldsSectionLabel = this.translateService.instant(\n      'com.bmc.arsys.rx.innovation-studio.external-record-wizard.field-selection.available-fields.section.label'\n    );\n    this.selectedFieldsSectionLabel = this.translateService.instant(\n      'com.bmc.arsys.rx.innovation-studio.external-record-wizard.field-selection.selected-fields.section.label'\n    );\n\n    this.rxWizardModalComponent.api.enableFinishButton();\n\n    const fieldSelectionStepContext$ = this.rxWizardModalComponent.context$.pipe(\n      shareReplay(1),\n      takeUntil(this.destroyed$)\n    );\n\n    fieldSelectionStepContext$\n      .pipe(\n        map((stepContext: IExternalRecordWizardContext) => stepContext.mappedInternalFields),\n        distinctUntilChanged(isEqual)\n      )\n      .subscribe(() => this.updateGridsData());\n\n    const gridColumns: IRecordGridColumn[] = [\n      {\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n        fieldId: 'name'\n      },\n      {\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.external-record-wizard.field-selection.field-id.label'\n        ),\n        fieldId: 'id',\n        sortable: {\n          direction: ColumnSortDirection.Asc,\n          priority: 1\n        }\n      },\n      {\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.item-type.label'),\n        fieldId: 'resourceType',\n        cellTemplate: this.resourceTypeCellTemplate\n      }\n    ];\n\n    const selectColumnGridConfig = {\n      columns: gridColumns,\n      enableColumnSelection: false,\n      enableFiltering: false,\n      enableRowSelection: RowSelectionMode.Multiple,\n      recordIdField: 'id',\n      styles: 'flex-fill',\n      useExternalFiltering: false,\n      getRecordDefinition: (): Observable<IRecordDefinition> =>\n        of({\n          fieldDefinitions: [\n            {\n              id: 'name',\n              resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n            },\n            {\n              id: 'id',\n              resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n            },\n            {\n              id: 'resourceType',\n              resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n            }\n          ]\n        })\n    };\n\n    this.availableFieldsGridConfig$ = of(\n      defaults(\n        {\n          emptyStateLabelText: this.translateService.instant(\n            'com.bmc.arsys.rx.innovation-studio.external-record-wizard.field-selection.available-fields.grid.empty-state.label'\n          ),\n          getData: (): Observable<IDataPageResult> =>\n            of({\n              totalSize: this.availableExternalColumns.length,\n              data: this.availableExternalColumns\n            })\n        },\n        selectColumnGridConfig\n      )\n    );\n\n    this.selectedFieldsGridConfig$ = of(\n      defaults(\n        {\n          emptyStateLabelText: this.translateService.instant(\n            'com.bmc.arsys.rx.innovation-studio.external-record-wizard.field-selection.selected-fields.grid.empty-state.label'\n          ),\n          getData: (): Observable<IDataPageResult> =>\n            of({\n              totalSize: this.selectedExternalColumns.length,\n              data: this.selectedExternalColumns\n            })\n        },\n        selectColumnGridConfig\n      )\n    );\n  }\n\n  deselectColumns(): void {\n    const sourceColumnIds = _map(this.selectedFieldsGrid.api.getSelectedRows(), 'id');\n\n    this.moveColumns(sourceColumnIds, this.selectedExternalColumns, this.availableExternalColumns);\n  }\n\n  selectColumns(): void {\n    const sourceColumnIds = _map(this.availableFieldsGrid.api.getSelectedRows(), 'id');\n\n    this.moveColumns(sourceColumnIds, this.availableExternalColumns, this.selectedExternalColumns);\n  }\n\n  private getAvailableColumns(): IFieldDefinition[] {\n    return reject(\n      this.context.externalTableDefinition.fieldDefinitions,\n      (column: IFieldDefinition) => this.isAssociatedColumn(column) || this.isSelectedColumn(column)\n    );\n  }\n\n  private getExternalFieldId(column: IFieldDefinition): string {\n    return get(column, this.externalFieldIdPath);\n  }\n\n  private isAssociatedColumn(column: IFieldDefinition): boolean {\n    return some(this.context.mappedInternalFields, [this.externalFieldIdPath, this.getExternalFieldId(column)]);\n  }\n\n  private isSelectedColumn(column: IFieldDefinition): boolean {\n    return some(this.selectedExternalColumns, [this.externalFieldIdPath, this.getExternalFieldId(column)]);\n  }\n\n  private moveColumns(columnIds: string[], source: IFieldDefinition[], target: IFieldDefinition[]): void {\n    chain(source)\n      .remove((column) => includes(columnIds, column.id))\n      .forEach((column) => target.push(column))\n      .value();\n\n    this.refreshElements();\n\n    this.rxWizardModalComponent.api.updateContext({ selectedExternalFields: this.selectedExternalColumns });\n  }\n\n  private refreshElements(): void {\n    this.availableFieldsGrid?.api.refresh().subscribe();\n    this.selectedFieldsGrid?.api.refresh().subscribe();\n  }\n\n  private updateGridsData(): void {\n    this.selectedExternalColumns = [];\n    this.availableExternalColumns = this.getAvailableColumns();\n\n    this.refreshElements();\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n","<div class=\"rx-external-record-wizard__content\">\n  <div class=\"rx-external-record-wizard__content--left\">\n    <adapt-rx-control-label [label]=\"availableFieldsSectionLabel\"></adapt-rx-control-label>\n    <rx-record-grid #availableFieldsGrid [config]=\"availableFieldsGridConfig$\"></rx-record-grid>\n  </div>\n  <div class=\"rx-external-record-wizard__content--middle\">\n    <button\n      type=\"button\"\n      adapt-button\n      btn-type=\"secondary\"\n      class=\"d-icon-angle_right\"\n      rx-id=\"select-button\"\n      [disabled]=\"!availableFieldsGrid?.api.getSelectedRowCount()\"\n      (click)=\"selectColumns()\"\n    ></button>\n    <button\n      type=\"button\"\n      adapt-button\n      btn-type=\"secondary\"\n      class=\"d-icon-angle_left\"\n      rx-id=\"deselect-button\"\n      [disabled]=\"!selectedFieldsGrid?.api.getSelectedRowCount()\"\n      (click)=\"deselectColumns()\"\n    ></button>\n  </div>\n  <div class=\"rx-external-record-wizard__content--right\">\n    <adapt-rx-control-label [label]=\"selectedFieldsSectionLabel\"></adapt-rx-control-label>\n    <rx-record-grid #selectedFieldsGrid [config]=\"selectedFieldsGridConfig$\"></rx-record-grid>\n  </div>\n</div>\n\n<ng-template #resourceTypeCellTemplate let-dataItem=\"dataItem\">\n  {{ dataItem.resourceType | rxRecordDefinitionResourceType }}\n</ng-template>\n"]}