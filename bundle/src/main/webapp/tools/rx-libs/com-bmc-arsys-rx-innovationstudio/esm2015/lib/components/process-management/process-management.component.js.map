{"version":3,"file":"process-management.component.js","sourceRoot":"","sources":["../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/components/process-management/process-management.component.ts","../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/components/process-management/process-management.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ErrorHandler,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  ActiveTabChangeEvent,\n  AdaptDockedPanelService,\n  AdaptModalService,\n  DismissReasons,\n  RxSelectOption,\n  SelectTexts\n} from '@bmc-ux/adapt-angular';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  forkJoin,\n  from,\n  NEVER,\n  Observable,\n  of,\n  ReplaySubject,\n  Subject,\n  Subscription,\n  throwError\n} from 'rxjs';\nimport { catchError, finalize, map, pluck, shareReplay, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport {\n  castArray,\n  find,\n  findIndex,\n  forOwn,\n  head,\n  isEmpty,\n  mapValues,\n  noop,\n  omit,\n  pickBy,\n  remove,\n  some,\n  transform\n} from 'lodash';\nimport { saveAs } from 'file-saver';\nimport moment from 'moment-es6';\n\nimport { IBreadcrumbItem, IPromptResponse, RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport {\n  IBundleDescriptor,\n  IBundleInfo,\n  IDataPageResult,\n  IPlainObject,\n  RX_APPLICATION,\n  RxBundleCacheService,\n  RxCommandFactoryService,\n  RxDefinitionNameService,\n  RxGlobalCacheService,\n  RxNotificationService,\n  RxPageTitleService,\n  RxPreviousStateService,\n  RxSessionExpirationService,\n  RxSystemConfigurationService\n} from '@helix/platform/shared/api';\nimport { RxGainsightConfiguratorService } from '@helix/platform/shared/components';\nimport { OpenViewActionModalSize } from '@helix/platform/view/api';\nimport {\n  IRecordGridActionButton,\n  IRecordGridColumn,\n  IRecordGridConfig,\n  IRecordGridDataPageParams,\n  RecordGridComponent,\n  RowSelectionMode\n} from '@helix/platform/view/components';\nimport { IRecordDefinition, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport {\n  IProcessDefinition,\n  RxProcessDefinitionDataPageService,\n  RxProcessDefinitionService,\n  RxProcessInstanceCountsByStatusDataPageService,\n  RxProcessInstanceDataPageService,\n  RxProcessInstanceService\n} from '@helix/platform/process/api';\n\nimport { AX_PROCESS_DEFINITION_TAB } from '../process-definition-tab/process-definition-tab.constant';\n\nimport { AX_PROCESS_MANAGEMENT } from './process-management.constant';\nimport {\n  IProcessActionButtonsState,\n  IProcessInstanceStatusCounts,\n  IProcessManagementModel\n} from './process-management.interface';\nimport { ProcessPreviewModalComponent } from './process-preview-modal/process-preview-modal.component';\nimport { ProcessRunModalComponent } from './process-run-modal/process-run-modal.component';\nimport { ProcessViewLogModalComponent } from './process-view-log-modal/process-view-log-modal.component';\n\n@Component({\n  selector: 'ax-process-management',\n  templateUrl: './process-management.component.html',\n  styleUrls: ['./process-management.component.scss']\n})\nexport class ProcessManagementComponent implements OnInit, OnDestroy {\n  @ViewChild('contextKeyCellTemplate', { static: true })\n  contextKeyCellTemplate: TemplateRef<any>;\n\n  @ViewChild('processDefinitionCellTemplate', { static: true })\n  processDefinitionCellTemplate: TemplateRef<any>;\n\n  @ViewChildren(RecordGridComponent)\n  recordGrids: QueryList<RecordGridComponent>;\n\n  activeTabIndex: number;\n  selectedProcess: RxSelectOption;\n\n  activatedTabs = {\n    [AX_PROCESS_DEFINITION_TAB.processInstanceStatuses.active]: false,\n    [AX_PROCESS_DEFINITION_TAB.processInstanceStatuses.suspended]: false,\n    [AX_PROCESS_DEFINITION_TAB.processInstanceStatuses.errored]: false,\n    [AX_PROCESS_DEFINITION_TAB.processInstanceStatuses.completed]: false\n  };\n\n  busySubscription: Subscription = NEVER.subscribe();\n  innovationStudioBundleId = RX_APPLICATION.innovationStudioBundleId;\n\n  processInstanceStatuses = [\n    AX_PROCESS_DEFINITION_TAB.processInstanceStatuses.active,\n    AX_PROCESS_DEFINITION_TAB.processInstanceStatuses.suspended,\n    AX_PROCESS_DEFINITION_TAB.processInstanceStatuses.errored,\n    AX_PROCESS_DEFINITION_TAB.processInstanceStatuses.completed\n  ];\n\n  selectedTimeframe: RxSelectOption = [];\n\n  tabs = mapValues(AX_PROCESS_MANAGEMENT.statusTabs, (tab) => ({\n    ...tab,\n    title: this.translateService.instant(tab.title)\n  }));\n\n  texts: SelectTexts = {\n    searchPlaceholder: this.translateService.instant('com.bmc.arsys.rx.client.common.search.label')\n  };\n\n  timeframes = AX_PROCESS_MANAGEMENT.timeframes.map((timeframe) => ({\n    ...timeframe,\n    label: this.translateService.instant(timeframe.label)\n  }));\n\n  private activeTabStatus = AX_PROCESS_DEFINITION_TAB.processInstanceStatuses.active;\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private refreshProcessInstanceCountsSubject = new Subject<boolean>();\n  private refreshProcessDataSubject = new BehaviorSubject<boolean>(true);\n\n  private breadcrumbItems$: Observable<IBreadcrumbItem[]> = combineLatest([\n    this.refreshProcessInstanceCountsSubject,\n    this.refreshProcessDataSubject\n  ]).pipe(\n    map(() => {\n      const breadcrumbItems: IBreadcrumbItem[] = [\n        {\n          data: {},\n          label: this.translateService.instant('com.bmc.arsys.rx.innovation-studio.manage-processes.menu.label')\n        }\n      ];\n\n      if (this.selectedProcess && this.selectedProcess[0].data.name) {\n        breadcrumbItems.push({\n          label: this.rxDefinitionNameService.getDisplayName(this.selectedProcess[0].data.name),\n          data: {}\n        });\n      }\n\n      return breadcrumbItems;\n    })\n  );\n\n  private bundleId$ = this.activatedRoute.params.pipe(pluck('bundleId'), shareReplay(1));\n\n  private bundleDescriptor$: Observable<IBundleDescriptor> = this.bundleId$.pipe(\n    switchMap((bundleId) => this.rxGlobalCacheService.getBundleDescriptor(bundleId))\n  );\n\n  private isProcessHistoryEnabled$ = this.rxSystemConfigurationService.getConfiguration('Process-History-Level').pipe(\n    take(1),\n    map((processHistoryLevel) => processHistoryLevel.value !== 0),\n    shareReplay(1)\n  );\n\n  private processActionButtonsState$: Observable<IProcessActionButtonsState> = combineLatest([\n    this.refreshProcessInstanceCountsSubject,\n    this.refreshProcessDataSubject\n  ]).pipe(\n    switchMap(() =>\n      of({\n        isRunButtonDisabled: !this.selectedProcess || !(<IProcessDefinition>this.selectedProcess[0].data).isEnabled,\n        isViewButtonDisabled: !this.selectedProcess || isEmpty(this.selectedProcess[0].data.name)\n      })\n    )\n  );\n\n  private processDefinitionOptions$ = this.bundleId$.pipe(\n    switchMap((bundleId) =>\n      combineLatest([\n        this.activatedRoute.queryParams.pipe(pluck('definitionName')),\n        this.getProcessDefinitions(bundleId)\n      ]).pipe(\n        map(([processDefinitionName, processDefinitions]: [string, IDataPageResult]) => {\n          processDefinitionName = processDefinitionName || '';\n\n          const options: RxSelectOption[] = processDefinitions.data.map((processDefinition: IProcessDefinition) => ({\n            label: this.rxDefinitionNameService.getDisplayName(processDefinition.name),\n            data: processDefinition\n          }));\n\n          options.unshift({\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.innovation-studio.process-management.all-processes.label'\n            ),\n            data: { name: '' }\n          });\n\n          const processOption = options.find((option) => option.data.name === processDefinitionName) ?? options[0];\n\n          this.resetProcessSelection(processOption);\n\n          this.refreshProcessInstanceCountsSubject.next();\n\n          return options;\n        })\n      )\n    )\n  );\n\n  private processInstanceCounts$ = this.refreshProcessInstanceCountsSubject.pipe(\n    switchMap(() => {\n      const queryParams = {\n        pageSize: -1,\n        startedAfter: moment().subtract(this.selectedTimeframe[0].value).toISOString()\n      };\n\n      const params = this.selectedProcess[0]?.data.name\n        ? { ...queryParams, processDefinitionName: this.selectedProcess[0].data.name }\n        : queryParams;\n\n      return this.rxProcessInstanceCountsByStatusDataPageService\n        .get({\n          params\n        })\n        .pipe(\n          map((response: IDataPageResult) => response.data[0]),\n          catchError((error) => {\n            this.errorHandler.handleError(error);\n\n            return of({ status: '', data: [] });\n          })\n        );\n    }),\n    map((result: { ERRORED: number; ACTIVE: number; SUSPENDED: number; COMPLETED: number }) =>\n      transform(result, (acc, status, key) => (acc[key] = status), {})\n    )\n  );\n\n  vm$: Observable<IProcessManagementModel> = combineLatest([\n    this.bundleDescriptor$,\n    this.processDefinitionOptions$,\n    this.isProcessHistoryEnabled$,\n    this.processInstanceCounts$,\n    this.processActionButtonsState$,\n    this.breadcrumbItems$\n  ]).pipe(\n    map(\n      ([\n        bundleDescriptor,\n        processDefinitionOptions,\n        isProcessHistoryEnabled,\n        processInstanceCounts,\n        processActionButtonsState,\n        breadcrumbItems\n      ]) => ({\n        bundleDescriptor,\n        processDefinitionOptions,\n        isProcessHistoryEnabled,\n        processInstanceCounts,\n        processActionButtonsState,\n        breadcrumbItems\n      })\n    ),\n    tap(() => {\n      this.busySubscription.unsubscribe();\n    }),\n    catchError((error) => {\n      const bundleDesc: IBundleInfo = { friendlyName: '', id: '' };\n      this.busySubscription.unsubscribe();\n\n      this.errorHandler.handleError(error);\n\n      return of({\n        bundleDescriptor: bundleDesc,\n        processDefinitionOptions: [],\n        isProcessHistoryEnabled: true,\n        processInstanceCounts: [0, 0, 0, 0],\n        processActionButtonsState: { isRunButtonDisabled: true, isViewButtonDisabled: true },\n        breadcrumbItems: []\n      });\n    })\n  );\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private adaptDockedPanelService: AdaptDockedPanelService,\n    private adaptModalService: AdaptModalService,\n    private errorHandler: ErrorHandler,\n    private ngZone: NgZone,\n    private router: Router,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxCommandFactoryService: RxCommandFactoryService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxGainsightConfiguratorService: RxGainsightConfiguratorService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxModalService: RxModalService,\n    private rxNotificationService: RxNotificationService,\n    private rxPageTitleService: RxPageTitleService,\n    private rxPreviousStateService: RxPreviousStateService,\n    private rxProcessDefinitionDataPageService: RxProcessDefinitionDataPageService,\n    private rxProcessDefinitionService: RxProcessDefinitionService,\n    private rxProcessInstanceDataPageService: RxProcessInstanceDataPageService,\n    private rxProcessInstanceCountsByStatusDataPageService: RxProcessInstanceCountsByStatusDataPageService,\n    private rxProcessInstanceService: RxProcessInstanceService,\n    private rxSessionExpirationService: RxSessionExpirationService,\n    private rxSystemConfigurationService: RxSystemConfigurationService,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.params.pipe(pluck('bundleId'), take(1), takeUntil(this.destroyed$)).subscribe((bundleId) => {\n      this.rxBundleCacheService.bundleId = bundleId;\n      this.setPageTitle();\n    });\n\n    this.activatedRoute.queryParams.pipe(takeUntil(this.destroyed$)).subscribe((queryParams) => {\n      let newQueryParams = {};\n      const activeTabIndex = findIndex(this.processInstanceStatuses, (el) => el === queryParams.status);\n      const timeframe = find(this.timeframes, { id: queryParams.timeframe });\n\n      if (activeTabIndex !== -1) {\n        this.activeTabIndex = activeTabIndex;\n        this.activeTabStatus = queryParams.status;\n      } else {\n        newQueryParams = {\n          ...newQueryParams,\n          status: AX_PROCESS_DEFINITION_TAB.processInstanceStatuses.active\n        };\n      }\n\n      if (timeframe) {\n        this.selectedTimeframe = [timeframe];\n      } else {\n        newQueryParams = {\n          ...newQueryParams,\n          timeframe: head(this.timeframes).id\n        };\n      }\n\n      if (!isEmpty(newQueryParams)) {\n        this.router.navigate([], {\n          relativeTo: this.activatedRoute,\n          queryParams: newQueryParams,\n          queryParamsHandling: 'merge'\n        });\n      } else {\n        if (!this.activatedTabs[queryParams.status]) {\n          this.activatedTabs[queryParams.status] = true;\n        } else {\n          this.refreshData();\n        }\n      }\n    });\n\n    this.rxGainsightConfiguratorService.updateGlobalContext({\n      subProductLevel1: {\n        name: 'Design'\n      },\n      subProductLevel2: {\n        name: 'Manage processes'\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.refreshProcessDataSubject.complete();\n    this.refreshProcessInstanceCountsSubject.complete();\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n\n    this.rxGainsightConfiguratorService.removeGlobalContext(['subProductLevel2', 'subProductLevel3']);\n  }\n\n  close(): void {\n    this.router.navigate([\n      RX_APPLICATION.innovationStudioBundleId,\n      this.rxBundleCacheService.bundleId,\n      'process-definitions'\n    ]);\n  }\n\n  getRecordGridConfig(status: string): Observable<IRecordGridConfig> {\n    return of({\n      enableFiltering: true,\n      columns: this.getGridColumns(status),\n      enableRowSelection: RowSelectionMode.Multiple,\n      getRecordDefinition: () => of(this.getRecordDefinition(status)),\n      recordIdField: AX_PROCESS_MANAGEMENT.processInstanceGridColumns.instanceId.fieldId,\n      actionButtons: this.getActionButtons(),\n      emptyStateLabelText: this.translateService.instant(\n        'com.bmc.arsys.rx.innovation-studio.process-management.no-processes.label'\n      ),\n      guid: AX_PROCESS_MANAGEMENT.statusTabs[status].guid,\n      searchFieldPlaceholderText: this.translateService.instant(\n        'com.bmc.arsys.rx.innovation-studio.process-management.search.placeholder'\n      ),\n      getData: (queryParams: IRecordGridDataPageParams) => {\n        remove(queryParams.propertySelection, (property) => property === String(RX_RECORD_DEFINITION.coreFieldIds.id));\n        this.refreshProcessInstanceCountsSubject.next(true);\n\n        return this.getProcessInstanceRuns(\n          {\n            ...omit(queryParams, ['shouldIncludeTotalSize', 'recorddefinition', 'searchText'])\n          },\n          this.tabs[status].status\n        );\n      },\n      styles: 'flex-fill'\n    });\n  }\n\n  onTimeframeChange(timeframe: { id: string }[]) {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: {\n        timeframe: head(timeframe).id\n      },\n      queryParamsHandling: 'merge'\n    });\n  }\n\n  optionFormatter(option: RxSelectOption): string {\n    return option.label;\n  }\n\n  previewProcess(allowRun: boolean): void {\n    this.adaptModalService\n      .open({\n        title: this.rxDefinitionNameService.getDisplayName(this.selectedProcess[0].data.name),\n        content: ProcessPreviewModalComponent,\n        data: {\n          processDefinitionName: this.selectedProcess[0].data.name,\n          allowRun\n        }\n      })\n      .then(() => {\n        this.runProcess();\n      })\n      .catch(noop);\n  }\n\n  refreshData(): void {\n    this.isProcessHistoryEnabled$.subscribe((isProcessHistoryEnabled) => {\n      if (isProcessHistoryEnabled) {\n        this.getCurrentGrid()?.api.refresh().subscribe();\n      } else {\n        this.refreshProcessDataSubject.next(true);\n      }\n\n      const processName = (this.selectedProcess && this.selectedProcess[0].data.name) || '';\n      const route = [RX_APPLICATION.innovationStudioBundleId, 'process', 'manage', this.rxBundleCacheService.bundleId];\n      const currentQueryParams = this.activatedRoute.snapshot.queryParams;\n\n      if (processName) {\n        this.router.navigate(route, { queryParams: { definitionName: processName }, queryParamsHandling: 'merge' });\n      } else {\n        this.router.navigate(route, { queryParams: omit(currentQueryParams, 'definitionName') });\n      }\n    });\n  }\n\n  resetProcessSelection(processDefinitionOption: RxSelectOption): void {\n    this.selectedProcess = [processDefinitionOption];\n    this.refreshData();\n  }\n\n  runProcess() {\n    this.rxProcessDefinitionService.getInputParams(this.selectedProcess[0].data.name).subscribe((inputParams) => {\n      from(\n        this.adaptDockedPanelService.open({\n          title: this.rxDefinitionNameService.getDisplayName(this.selectedProcess[0].data.name),\n          content: ProcessRunModalComponent,\n          size: 'lg',\n          data: { inputParams }\n        })\n      )\n        .pipe(\n          switchMap((inputValues: IPlainObject) => {\n            const hasAttachmentInputs = some(inputValues, (inputValue) =>\n              some(inputValue, (item) => item instanceof File)\n            );\n\n            if (hasAttachmentInputs) {\n              return this.runProcessWithAttachments(inputValues);\n            } else {\n              return this.rxCommandFactoryService\n                .forResourceType('com.bmc.arsys.rx.application.process.command.StartProcessInstanceCommand')\n                .execute({\n                  processDefinitionName: this.selectedProcess[0].data.name,\n                  processInputValues: inputValues\n                });\n            }\n          }),\n          tap(() => {\n            this.rxNotificationService.addSuccessMessage(\n              this.translateService.instant(\n                'com.bmc.arsys.rx.innovation-studio.process-management.run-process.success.message'\n              )\n            );\n\n            this.refreshData();\n          }),\n          catchError((error) => {\n            if (error !== DismissReasons.CLOSE_BTN) {\n              this.refreshData();\n            }\n\n            return throwError(error);\n          })\n        )\n        .subscribe();\n    });\n  }\n\n  tabChanged({ index }: ActiveTabChangeEvent): void {\n    this.activeTabStatus = this.processInstanceStatuses[index];\n\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: {\n        status: this.activeTabStatus\n      },\n      queryParamsHandling: 'merge'\n    });\n  }\n\n  private executeAction(command: string, reason?: string) {\n    const records = castArray(this.getCurrentGrid().api.getSelectedRows());\n\n    const actions$ = records.map((record) => {\n      const payload = {\n        processDefinitionName: record.processDefinitionName,\n        processInstanceId: record.instanceId\n      };\n\n      return this.rxCommandFactoryService\n        .forResourceType(command)\n        .execute(reason ? { ...payload, cancelReason: reason } : payload);\n    });\n\n    forkJoin(actions$)\n      .pipe(\n        finalize(() => {\n          this.refreshData();\n        })\n      )\n      .subscribe();\n  }\n\n  private getActionButtons(): IRecordGridActionButton[] {\n    return [\n      {\n        label: this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.process-management.suspend.button.label'\n        ),\n        style: 'tertiary',\n        iconCls: 'pause_circle_o',\n        hidden: () => this.isActionButtonDisabled(AX_PROCESS_DEFINITION_TAB.processInstanceActions.suspend),\n        actions: [\n          {\n            name: () => {\n              this.executeAction('com.bmc.arsys.rx.application.process.command.SuspendProcessInstanceCommand');\n            }\n          }\n        ]\n      },\n      {\n        label: this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.process-management.resume.button.label'\n        ),\n        style: 'tertiary',\n        iconCls: 'play_o',\n        hidden: () => this.isActionButtonDisabled(AX_PROCESS_DEFINITION_TAB.processInstanceActions.resume),\n        actions: [\n          {\n            name: () => {\n              this.executeAction('com.bmc.arsys.rx.application.process.command.ActivateProcessInstanceCommand');\n            }\n          }\n        ]\n      },\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.cancel.label'),\n        style: 'tertiary',\n        iconCls: 'cross_adapt',\n        hidden: () => this.isActionButtonDisabled(AX_PROCESS_DEFINITION_TAB.processInstanceActions.cancel),\n        actions: [\n          {\n            name: () => {\n              this.rxModalService\n                .prompt({\n                  title: this.translateService.instant(\n                    'com.bmc.arsys.rx.innovation-studio.process-management.cancel-process.label'\n                  ),\n                  modalStyle: RX_MODAL.modalStyles.prompt,\n                  message: this.translateService.instant(\n                    'com.bmc.arsys.rx.innovation-studio.process-management.cancellation-reason.label'\n                  )\n                })\n                .then((promptResponse: IPromptResponse) => {\n                  if (promptResponse.response) {\n                    this.executeAction(\n                      'com.bmc.arsys.rx.application.process.command.CancelProcessInstanceCommand',\n                      promptResponse.answer\n                    );\n                  }\n                });\n            }\n          }\n        ]\n      },\n      {\n        label: this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.process-management.view-log.button.label'\n        ),\n        style: 'tertiary',\n        iconCls: 'monitor_gear_eye',\n        disabled: () => this.isActionButtonDisabled(AX_PROCESS_DEFINITION_TAB.processInstanceActions.viewLog),\n        actions: [\n          {\n            name: () => {\n              const processInstance = this.getCurrentGrid().api.getFirstSelectedRow();\n\n              this.rxProcessInstanceService\n                .getLog(processInstance.processDefinitionName, processInstance.instanceId)\n                .subscribe((data) => {\n                  this.adaptModalService\n                    .open({\n                      title: this.translateService.instant(\n                        'com.bmc.arsys.rx.innovation-studio.process-management.view-log.modal.title',\n                        {\n                          processDefinitionName: this.rxDefinitionNameService.getDisplayName(\n                            processInstance.processDefinitionName\n                          ),\n                          processInstanceId: processInstance.instanceId\n                        }\n                      ),\n                      content: ProcessViewLogModalComponent,\n                      size: OpenViewActionModalSize.Xlarge as any,\n                      data\n                    })\n                    .catch(noop);\n                });\n            }\n          }\n        ]\n      },\n      {\n        label: this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.process-management.download-log.button.label'\n        ),\n        style: 'tertiary',\n        iconCls: 'download',\n        disabled: () => this.isActionButtonDisabled(AX_PROCESS_DEFINITION_TAB.processInstanceActions.downloadLog),\n        actions: [\n          {\n            name: () => {\n              const processInstance = this.getCurrentGrid().api.getFirstSelectedRow();\n\n              this.rxProcessInstanceService\n                .downloadLog(processInstance.processDefinitionName, processInstance.instanceId)\n                .subscribe((fileStream) => {\n                  if (fileStream?.size > 0) {\n                    const file = new Blob([fileStream], {\n                      type: fileStream.type\n                    });\n\n                    this.ngZone.runOutsideAngular(() => {\n                      saveAs(file, 'process.log');\n                    });\n                  } else {\n                    this.rxNotificationService.addInfoMessage(\n                      this.translateService.instant(\n                        'com.bmc.arsys.rx.innovation-studio.process-management.view-log.modal.no-log.label'\n                      ),\n                      ''\n                    );\n                  }\n                });\n            }\n          }\n        ]\n      }\n    ];\n  }\n\n  private getCurrentGrid(): RecordGridComponent {\n    return this.recordGrids.find((grid) => grid.guid === AX_PROCESS_MANAGEMENT.statusTabs[this.activeTabStatus].guid);\n  }\n\n  private getGridColumns(status: string): IRecordGridColumn[] {\n    const gridColumns: IRecordGridColumn[] = AX_PROCESS_MANAGEMENT.statusTabs[status].gridColumns;\n\n    return gridColumns.map((column) => {\n      const columnConfig = { ...column, title: this.translateService.instant(column.title) };\n\n      if (column.fieldId === AX_PROCESS_MANAGEMENT.processInstanceGridColumns.contextKey.fieldId) {\n        columnConfig.cellTemplate = this.contextKeyCellTemplate;\n      } else if (column.fieldId === AX_PROCESS_MANAGEMENT.processInstanceGridColumns.processDefinitionName.fieldId) {\n        columnConfig.cellTemplate = this.processDefinitionCellTemplate;\n      }\n\n      return columnConfig;\n    });\n  }\n\n  private getProcessDefinitions(bundleId: string): Observable<IDataPageResult> {\n    return this.rxSessionExpirationService.keepSessionAlive().pipe(\n      switchMap(() =>\n        this.rxProcessDefinitionDataPageService\n          .get({\n            params: {\n              propertySelection: ['name', 'isEnabled'],\n              bundleId\n            }\n          })\n          .pipe(\n            catchError((error) => {\n              this.errorHandler.handleError(error);\n\n              return this.rxProcessDefinitionDataPageService.getEmptyDataPage();\n            })\n          )\n      )\n    );\n  }\n\n  private getProcessInstanceRuns(parameters: Object, status?: string): Observable<IProcessInstanceStatusCounts> {\n    const params = { ...parameters, startedAfter: moment().subtract(this.selectedTimeframe[0].value).toISOString() };\n\n    const queryParams = this.selectedProcess[0]?.data.name\n      ? { ...params, processDefinitionName: this.selectedProcess[0].data.name }\n      : params;\n\n    return this.rxProcessInstanceDataPageService\n      .get({\n        params: { ...queryParams, status }\n      })\n      .pipe(\n        map((response) => ({ ...response, status })),\n        catchError((error) => {\n          this.errorHandler.handleError(error);\n\n          return of({ status: '', data: [] });\n        })\n      );\n  }\n\n  private getRecordDefinition(status: string): IRecordDefinition {\n    const fieldDefinitions = AX_PROCESS_MANAGEMENT.statusTabs[status].fieldDefinitions;\n\n    const fieldDefinitionsById = fieldDefinitions.reduce((result, fieldDefinition) => {\n      result[fieldDefinition.id] = fieldDefinition;\n\n      return result;\n    }, {});\n\n    return {\n      fieldDefinitions,\n      fieldDefinitionsById\n    };\n  }\n\n  private isActionButtonDisabled(action: string): boolean {\n    const dataSets = this.getCurrentGrid().api.getSelectedRows();\n\n    switch (action) {\n      case AX_PROCESS_DEFINITION_TAB.processInstanceActions.suspend:\n        return some(dataSets, (dataset) => dataset.status !== AX_PROCESS_DEFINITION_TAB.processInstanceStatuses.active);\n\n      case AX_PROCESS_DEFINITION_TAB.processInstanceActions.resume:\n        return some(\n          dataSets,\n          (dataset) => dataset.status !== AX_PROCESS_DEFINITION_TAB.processInstanceStatuses.suspended\n        );\n\n      case AX_PROCESS_DEFINITION_TAB.processInstanceActions.cancel:\n        return some(\n          dataSets,\n          (dataset) =>\n            dataset.status !== AX_PROCESS_DEFINITION_TAB.processInstanceStatuses.suspended &&\n            dataset.status !== AX_PROCESS_DEFINITION_TAB.processInstanceStatuses.active\n        );\n\n      case AX_PROCESS_DEFINITION_TAB.processInstanceActions.downloadLog:\n      case AX_PROCESS_DEFINITION_TAB.processInstanceActions.viewLog:\n        return dataSets.length !== 1;\n\n      default:\n        return true;\n    }\n  }\n\n  private runProcessWithAttachments(inputValues: IPlainObject): Observable<any> {\n    const formData = new FormData();\n    const attachmentInputParams = pickBy(inputValues, (inputValue) => some(inputValue, (item) => item instanceof File));\n\n    forOwn(attachmentInputParams, (inputParamValue, inputParamName) => {\n      inputParamValue.forEach((file) => {\n        formData.append(inputParamName, file);\n      });\n\n      delete inputValues[inputParamName];\n    });\n\n    const commandInstance = {\n      processDefinitionName: this.selectedProcess[0].data.name,\n      resourceType: 'com.bmc.arsys.rx.application.process.command.StartProcessInstanceCommand',\n      processInputValues: inputValues\n    };\n\n    formData.append('commandInstance', JSON.stringify(commandInstance));\n\n    return this.rxCommandFactoryService\n      .forResourceType('com.bmc.arsys.rx.application.process.command.StartProcessInstanceCommand')\n      .execute(formData);\n  }\n\n  private setPageTitle() {\n    this.rxGlobalCacheService\n      .getBundleFriendlyName(this.rxBundleCacheService.bundleId)\n      .pipe(take(1))\n      .subscribe((bundleFriendlyName) => {\n        this.rxPageTitleService.set(\n          [\n            this.translateService.instant('com.bmc.arsys.rx.innovation-studio.manage-processes.menu.label'),\n            bundleFriendlyName\n          ],\n          this.rxGlobalCacheService.applicationId\n        );\n      });\n  }\n}\n","<div class=\"h-100\" *ngIf=\"vm$ | async as vm\">\n  <div class=\"header d-flex align-items-center\">\n    <h5 class=\"rx-ellipsis col-2 pb-1\" [adaptTooltip]=\"vm.bundleDescriptor.friendlyName\">\n      {{ vm.bundleDescriptor.friendlyName }}\n    </h5>\n\n    <div class=\"breadcrumbs-container pt-1\">\n      <rx-breadcrumb-bar\n        (selectedItem)=\"resetProcessSelection(vm.processDefinitionOptions[0])\"\n        [items]=\"vm.breadcrumbItems\"\n      ></rx-breadcrumb-bar>\n    </div>\n\n    <div class=\"ml-auto m-2\">\n      <button rx-id=\"close-button\" adapt-button type=\"button\" size=\"small\" (click)=\"close()\" btn-type=\"secondary\">\n        {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n      </button>\n    </div>\n  </div>\n\n  <div class=\"process-management-container\">\n    <adapt-sidebar [openedId]=\"0\" [adjustMainContainerWidth]=\"true\">\n      <adapt-sidebar-item\n        [iconClass]=\"'d-icon-layout_preview'\"\n        [headerTitle]=\"'com.bmc.arsys.rx.innovation-studio.process-management.process-sidebar.title' | translate\"\n      >\n        <div class=\"d-flex flex-column h-100\">\n          <div class=\"d-flex justify-content-start mb-3\">\n            <button\n              adapt-button\n              type=\"button\"\n              btn-type=\"primary\"\n              rx-id=\"run-button\"\n              class=\"mr-2 d-icon-left-play_o\"\n              size=\"small\"\n              (click)=\"runProcess()\"\n              [disabled]=\"vm.processActionButtonsState.isRunButtonDisabled\"\n            >\n              {{ 'com.bmc.arsys.rx.innovation-studio.process-management.run-process.button.label' | translate }}\n            </button>\n            <button\n              adapt-button\n              type=\"button\"\n              rx-id=\"view-button\"\n              class=\"d-icon-left-eye\"\n              size=\"small\"\n              [disabled]=\"vm.processActionButtonsState.isViewButtonDisabled\"\n              (click)=\"previewProcess(vm.processActionButtonsState.isRunButtonDisabled)\"\n              btn-type=\"secondary\"\n            >\n              {{ 'com.bmc.arsys.rx.innovation-studio.process-management.view-process.button.label' | translate }}\n            </button>\n          </div>\n\n          <div class=\"process-list h-100\">\n            <adapt-rx-select\n              class=\"h-100 d-flex\"\n              [(ngModel)]=\"selectedProcess\"\n              [options]=\"vm.processDefinitionOptions\"\n              [optionFormatter]=\"optionFormatter\"\n              [enableFilter]=\"true\"\n              [inline]=\"true\"\n              [selectAllButton]=\"false\"\n              [deselectAllButton]=\"false\"\n              [texts]=\"texts\"\n              [multiple]=\"false\"\n              [singleSelectStyle]=\"'line'\"\n              [popupMaxHeight]=\"'100%'\"\n              (ngModelChange)=\"refreshData()\"\n            ></adapt-rx-select>\n          </div>\n        </div>\n      </adapt-sidebar-item>\n      <div class=\"main h-100\">\n        <div class=\"h-100 d-flex flex-column\" *ngIf=\"vm.isProcessHistoryEnabled\">\n          <adapt-rx-select\n            class=\"form-group d-block\"\n            [label]=\"'com.bmc.arsys.rx.innovation-studio.process-management.timeframe.select.label' | translate\"\n            rx-id=\"timeframe\"\n            [ngModel]=\"selectedTimeframe\"\n            [options]=\"timeframes\"\n            [optionFormatter]=\"optionFormatter\"\n            (ngModelChange)=\"onTimeframeChange($event)\"\n            name=\"timeframe\"\n          >\n          </adapt-rx-select>\n          <adapt-tabset\n            rx-id=\"tabs\"\n            [type]=\"'pills'\"\n            [tab-active]=\"activeTabIndex\"\n            (tab-active-changed)=\"tabChanged($event)\"\n            class=\"h-100\"\n          >\n            <ng-container *ngFor=\"let status of processInstanceStatuses\">\n              <adapt-tab-panel\n                [adapt-tab-title]=\"tabs[status].title\"\n                [badge]=\"vm.processInstanceCounts[status]\"\n                [badge-type]=\"tabs[status].badgeType\"\n                [attr.rx-id]=\"'process-instances-tab-panel-' + status | lowercase\"\n              >\n                <rx-record-grid\n                  class=\"pt-3\"\n                  *ngIf=\"activatedTabs[status]\"\n                  [config]=\"getRecordGridConfig(status)\"\n                ></rx-record-grid>\n              </adapt-tab-panel>\n            </ng-container>\n          </adapt-tabset>\n        </div>\n\n        <div\n          class=\"d-flex align-items-center justify-content-center h-100\"\n          *ngIf=\"vm.isProcessHistoryEnabled === false\"\n        >\n          <adapt-empty-state\n            type=\"objects\"\n            label=\"{{\n              'com.bmc.arsys.rx.innovation-studio.process-management.process-history-disabled.message' | translate\n            }}\"\n          ></adapt-empty-state>\n        </div>\n      </div>\n    </adapt-sidebar>\n  </div>\n</div>\n<ng-template #contextKeyCellTemplate let-dataItem=\"dataItem\">\n  <div class=\"rx-ellipsis\">\n    <a\n      [routerLink]=\"[\n        '/',\n        innovationStudioBundleId,\n        'process',\n        'instance',\n        dataItem.processDefinitionName,\n        dataItem.instanceId\n      ]\"\n      >{{\n        dataItem.contextKey || 'com.bmc.arsys.rx.innovation-studio.process-management.process-instance.label'\n          | translate\n      }}\n    </a>\n  </div>\n</ng-template>\n\n<ng-template #processDefinitionCellTemplate let-dataItem=\"dataItem\">\n  {{ dataItem.processDefinitionName | rxDefinitionNamePipe }}\n</ng-template>\n\n<rx-busy-indicator [options]=\"{ busy: busySubscription }\"></rx-busy-indicator>\n"]}