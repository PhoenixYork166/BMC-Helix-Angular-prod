{"version":3,"file":"record-id-fields-step.component.js","sourceRoot":"","sources":["../../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/components/external-record-wizard/record-id-fields-step/record-id-fields-step.component.ts","../../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/components/external-record-wizard/record-id-fields-step/record-id-fields-step.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy, Input, ViewChild, TemplateRef } from '@angular/core';\nimport { chain, cloneDeep, defaults, isEmpty, isEqual, sortBy } from 'lodash';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay, skipWhile, switchMap, takeUntil } from 'rxjs/operators';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { IDataPageResult } from '@helix/platform/shared/api';\nimport { RxWizardModalComponent } from '@helix/platform/shared/components';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport { IRecordGridColumn, IRecordGridConfig, RecordGridComponent } from '@helix/platform/view/components';\nimport { IFieldDefinition, IRecordDefinition, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxExternalDataService } from '../../../services/external-data/external-data.service';\nimport { IExternalRecordWizardContext } from '../external-record-wizard.types';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'ax-record-id-fields-step',\n  templateUrl: 'record-id-fields-step.component.html',\n  styleUrls: ['record-id-fields-step.component.scss']\n})\nexport class RecordIdFieldsStepComponent implements OnDestroy, OnInit {\n  @Input()\n  context: IExternalRecordWizardContext;\n\n  @ViewChild('recordIdFieldsStepRecordGrid')\n  recordIdFieldsStepRecordGrid: RecordGridComponent;\n\n  @ViewChild('externalColumnCellTemplate', { static: true })\n  externalColumnCellTemplate: TemplateRef<any>;\n\n  @ViewChild('externalColumnIdCellTemplate', { static: true })\n  externalColumnIdCellTemplate: TemplateRef<any>;\n\n  externalColumns: RxSelectOption[] = [];\n  externalColumnIds: RxSelectOption[] = [];\n\n  recordIdFieldsRecordGridConfig$: Observable<IRecordGridConfig>;\n\n  sectionLabel: string;\n  sectionInfoLabel: string;\n  sectionInfoTooltip: string;\n\n  private internalFieldsForMapping: IFieldDefinition[] = [];\n  private rawExternalColumns: IFieldDefinition[] = [];\n\n  private gridRowsData: {\n    id: string | number;\n    name: string;\n    selectedExternalColumns: RxSelectOption[];\n  }[] = [];\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  constructor(\n    private rxExternalDataService: RxExternalDataService,\n    private rxWizardModalComponent: RxWizardModalComponent,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit() {\n    this.sectionLabel = this.translateService.instant(\n      'com.bmc.arsys.rx.innovation-studio.external-record-wizard.record-id-fields.label'\n    );\n\n    this.sectionInfoLabel = this.translateService.instant(\n      'com.bmc.arsys.rx.innovation-studio.external-record-wizard.record-id-fields.section-info.label'\n    );\n\n    this.sectionInfoTooltip = this.translateService.instant(\n      'com.bmc.arsys.rx.innovation-studio.external-record-wizard.record-id-fields.section-info.tooltip'\n    );\n\n    this.rxWizardModalComponent.api.disableNextButton();\n\n    const recordIdFieldsStepContext$ = this.rxWizardModalComponent.context$.pipe(\n      shareReplay(1),\n      takeUntil(this.destroyed$)\n    );\n\n    recordIdFieldsStepContext$\n      .pipe(\n        map((stepContext: IExternalRecordWizardContext) => stepContext.tableName),\n        distinctUntilChanged(isEqual),\n        switchMap((tableName) => {\n          this.rawExternalColumns = [];\n          this.gridRowsData = [];\n          this.externalColumnIds = [];\n          this.externalColumns = [];\n\n          if (this.recordIdFieldsStepRecordGrid) {\n            this.recordIdFieldsStepRecordGrid.api.refresh().subscribe();\n          }\n\n          if (tableName) {\n            this.internalFieldsForMapping = chain(RX_RECORD_DEFINITION.coreFields)\n              .filter((field) => RX_RECORD_DEFINITION.externalRecordDefinitionCoreFieldIds.includes(field.id))\n              .map((coreField) =>\n                defaults(cloneDeep(coreField), { fieldMapping: { externalFieldId: String(coreField.id) } })\n              )\n              .value() as IFieldDefinition[];\n\n            return this.rxExternalDataService.getArsTableDefinition(this.context.dataSourceName, tableName);\n          } else {\n            this.internalFieldsForMapping = [];\n\n            this.rxWizardModalComponent.api.updateContext({\n              externalTableDefinition: {},\n              mappedInternalFields: []\n            });\n\n            return of();\n          }\n        }),\n        skipWhile(isEmpty)\n      )\n      .subscribe((externalTableDefinition: IRecordDefinition) => {\n        this.rawExternalColumns = externalTableDefinition.fieldDefinitions;\n\n        this.setGridRowsData();\n\n        this.rxWizardModalComponent.api.updateContext({\n          externalTableDefinition,\n          mappedInternalFields: cloneDeep(this.internalFieldsForMapping)\n        });\n\n        this.externalColumnIds = this.rawExternalColumns.map((externalColumn: IFieldDefinition) => ({\n          id: externalColumn.fieldMapping.externalFieldId,\n          name: externalColumn.name\n        }));\n\n        this.externalColumns = sortBy(this.externalColumnIds, 'name');\n\n        this.recordIdFieldsStepRecordGrid.api.refresh().subscribe();\n      });\n\n    const gridColumns: IRecordGridColumn[] = [\n      {\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.external-record-wizard.record-id-fields.grid.record-id-field.label'\n        ),\n        fieldId: 'name'\n      },\n      {\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.external-record-wizard.record-id-fields.grid.field-id.label'\n        ),\n        fieldId: 'id'\n      },\n      {\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.external-record-wizard.record-id-fields.grid.external-record-id-field.label'\n        ),\n        fieldId: 'externalColumnName',\n        sortable: false,\n        cellTemplate: this.externalColumnCellTemplate\n      },\n      {\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.external-record-wizard.record-id-fields.grid.external-field-id.label'\n        ),\n        fieldId: 'externalColumnId',\n        sortable: false,\n        cellTemplate: this.externalColumnIdCellTemplate\n      }\n    ];\n\n    this.recordIdFieldsRecordGridConfig$ = of({\n      columns: gridColumns,\n      enableColumnSelection: false,\n      enableFiltering: false,\n      enableRowSelection: null,\n      recordIdField: 'id',\n      styles: 'flex-fill',\n      toolbarConfig: {\n        filter: false,\n        visibleColumnsMenu: false\n      },\n      useExternalFiltering: false,\n      getRecordDefinition: (): Observable<IRecordDefinition> =>\n        of({\n          fieldDefinitions: [\n            {\n              id: 'name',\n              resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n            },\n            {\n              id: 'id',\n              resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n            },\n            {\n              id: 'externalColumnName',\n              resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n            },\n            {\n              id: 'externalColumnId',\n              resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n            }\n          ]\n        }),\n      getData: (): Observable<IDataPageResult> =>\n        of({\n          totalSize: this.gridRowsData.length,\n          data: this.gridRowsData\n        })\n    });\n\n    this.rxWizardModalComponent.api.enableNextButton();\n  }\n\n  externalColumnOptionFormatter = (externalColumnOption: RxSelectOption): string => externalColumnOption.name;\n  externalColumnIdOptionFormatter = (externalColumnOption: RxSelectOption): string => externalColumnOption.id;\n\n  onExternalColumnChange(rowDataItem: IRowDataItem): void {\n    const field: IFieldDefinition = this.internalFieldsForMapping.find(\n      (internalField: IFieldDefinition) => internalField.id === rowDataItem.id\n    );\n\n    field.fieldMapping.externalFieldId = rowDataItem.selectedExternalColumns[0]?.id || String(field.id);\n\n    this.setGridRowsData();\n    this.rxWizardModalComponent.api.updateContext({ mappedInternalFields: cloneDeep(this.internalFieldsForMapping) });\n    this.recordIdFieldsStepRecordGrid.api.refresh().subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  private setGridRowsData() {\n    this.internalFieldsForMapping.forEach((internalField: IFieldDefinition) => {\n      const externalColumn = this.rawExternalColumns.find(\n        (column: IFieldDefinition) => column.fieldMapping.externalFieldId === internalField.fieldMapping.externalFieldId\n      );\n\n      const selectedExternalColumns: RxSelectOption[] = [];\n\n      if (externalColumn) {\n        selectedExternalColumns.push({\n          id: externalColumn.fieldMapping.externalFieldId,\n          name: externalColumn.name\n        });\n      }\n\n      const gridRowData = this.gridRowsData.find(({ id }) => id === internalField.id);\n\n      if (gridRowData) {\n        gridRowData.selectedExternalColumns = selectedExternalColumns;\n      } else {\n        this.gridRowsData.push({\n          id: internalField.id,\n          name: internalField.name,\n          selectedExternalColumns\n        });\n      }\n    });\n  }\n}\n","<div class=\"section-title\">\n  <adapt-rx-control-label [label]=\"sectionLabel\" class=\"section-label\"></adapt-rx-control-label>\n\n  <ng-template #tooltipContentTemplate>\n    <div class=\"text-left\" [innerHTML]=\"sectionInfoTooltip\"></div>\n  </ng-template>\n\n  <span class=\"section-info\">\n    <adapt-icon\n      name=\"info_circle_o_adapt\"\n      [adaptPopover]=\"tooltipContentTemplate\"\n      width=\"250\"\n      placement=\"bottom\"\n    ></adapt-icon>\n    {{ sectionInfoLabel }}\n  </span>\n</div>\n\n<rx-record-grid #recordIdFieldsStepRecordGrid [config]=\"recordIdFieldsRecordGridConfig$\"></rx-record-grid>\n\n<ng-template #externalColumnCellTemplate let-dataItem=\"dataItem\">\n  <adapt-rx-select\n    [options]=\"externalColumns\"\n    [optionFormatter]=\"externalColumnOptionFormatter\"\n    [emptyOption]=\"true\"\n    [(ngModel)]=\"dataItem.selectedExternalColumns\"\n    (ngModelChange)=\"onExternalColumnChange(dataItem)\"\n    [appendToBody]=\"true\"\n  >\n  </adapt-rx-select>\n</ng-template>\n\n<ng-template #externalColumnIdCellTemplate let-dataItem=\"dataItem\">\n  <adapt-rx-select\n    [options]=\"externalColumnIds\"\n    [optionFormatter]=\"externalColumnIdOptionFormatter\"\n    [emptyOption]=\"true\"\n    [(ngModel)]=\"dataItem.selectedExternalColumns\"\n    (ngModelChange)=\"onExternalColumnChange(dataItem)\"\n    [appendToBody]=\"true\"\n  >\n  </adapt-rx-select>\n</ng-template>\n"]}