{"version":3,"file":"legacy-shell.guard.js","sourceRoot":"","sources":["../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/services/legacy-shell-guard/legacy-shell.guard.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAuC,MAAM,EAAgC,MAAM,iBAAiB,CAAC;AAC5G,OAAO,EAAE,QAAQ,EAAc,EAAE,EAAE,MAAM,MAAM,CAAC;AAChD,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AACjD,OAAO,EAAE,QAAQ,EAAE,MAAM,QAAQ,CAAC;AAElC,OAAO,EACL,cAAc,EACd,2BAA2B,EAC3B,uBAAuB,EACvB,YAAY,EACb,MAAM,4BAA4B,CAAC;AACpC,OAAO,EAAE,uBAAuB,EAAE,MAAM,0BAA0B,CAAC;;;;;AAKnE,MAAM,OAAO,kBAAkB;IAC7B,YACU,MAAc,EACd,2BAAwD,EACxD,uBAAgD,EAChD,uBAAgD,EAChD,YAA0B;QAJ1B,WAAM,GAAN,MAAM,CAAQ;QACd,gCAA2B,GAA3B,2BAA2B,CAA6B;QACxD,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,iBAAY,GAAZ,YAAY,CAAc;IACjC,CAAC;IAEJ,WAAW,CAAC,KAA6B,EAAE,KAA0B;QACnE,MAAM,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC;QAElC,OAAO,QAAQ,CAAC;YACd,sBAAsB,EAAE,IAAI,CAAC,2BAA2B,CAAC,sBAAsB,CAAC,QAAQ,CAAC;YACzF,mBAAmB,EAAE,IAAI,CAAC,uBAAuB,CAAC,GAAG,CACnD,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,QAAQ,EAAE,cAAc,CAAC,mBAAmB,CAAC,CAC7F;SACF,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,EAAE,sBAAsB,EAAE,mBAAmB,EAAE,EAAE,EAAE;YACtD,MAAM,WAAW,GAAG,sBAAsB,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;YAEjG,IAAI,WAAW,IAAI,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,KAAK,OAAO,EAAE;gBAC5D,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,cAAc,CAAC,wBAAwB,EAAE,cAAc,EAAE,QAAQ,CAAC,CAAC,CAAC;aACvG;iBAAM,IAAI,CAAC,WAAW,IAAI,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,KAAK,cAAc,EAAE;gBAC3E,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,cAAc,CAAC,wBAAwB,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;aAChG;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;QACH,CAAC,CAAC,EACF,UAAU,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAEvC,OAAO,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,cAAc,CAAC,wBAAwB,EAAE,QAAQ,EAAE,oBAAoB,CAAC,CAAC,CAAC,CAAC;QAClH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;kIAnCU,kBAAkB;sIAAlB,kBAAkB,cAFjB,MAAM;2FAEP,kBAAkB;kBAH9B,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { includes } from 'lodash';\n\nimport {\n  RX_APPLICATION,\n  RxAngularApplicationService,\n  RxDefinitionNameService,\n  RxLogService\n} from '@helix/platform/shared/api';\nimport { RxViewDefinitionService } from '@helix/platform/view/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AxLegacyShellGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private rxAngularApplicationService: RxAngularApplicationService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxViewDefinitionService: RxViewDefinitionService,\n    private rxLogService: RxLogService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> {\n    const { bundleId } = route.params;\n\n    return forkJoin({\n      isAngularJsApplication: this.rxAngularApplicationService.isAngularJsApplication(bundleId),\n      shellViewDefinition: this.rxViewDefinitionService.get(\n        this.rxDefinitionNameService.getDefinitionName(bundleId, RX_APPLICATION.shellDefinitionName)\n      )\n    }).pipe(\n      map(({ isAngularJsApplication, shellViewDefinition }) => {\n        const isAngularJs = isAngularJsApplication && !includes(shellViewDefinition.layout, '\"outlets\"');\n\n        if (isAngularJs && route.parent.routeConfig.path === 'shell') {\n          return this.router.createUrlTree([RX_APPLICATION.innovationStudioBundleId, 'shell-legacy', bundleId]);\n        } else if (!isAngularJs && route.parent.routeConfig.path === 'shell-legacy') {\n          return this.router.createUrlTree([RX_APPLICATION.innovationStudioBundleId, 'shell', bundleId]);\n        } else {\n          return true;\n        }\n      }),\n      catchError((error) => {\n        this.rxLogService.error(error.message);\n\n        return of(this.router.createUrlTree([RX_APPLICATION.innovationStudioBundleId, bundleId, 'record-definitions']));\n      })\n    );\n  }\n}\n"]}