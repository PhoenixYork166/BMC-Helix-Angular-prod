{"version":3,"sources":["./node_modules/@helix/platform/fesm2015/helix-platform-security-login.js"],"names":["_c0","standalone","LoginPageComponent_adapt_login_1_Template","rf","ctx","_r2","i0","$event","userName","userPassword","login","ctx_r0","bundleFriendlyName","footerItems","isLoading","LoginPageComponent","constructor","activatedRoute","router","title","rxAuthService","rxBundleService","translateService","this","shouldReloadPage","areStylesLoaded","content","copyright","info","instant","helixLogo","get","getCurrentNavigation","window","location","reload","setTitle","paramMap","subscribe","params","bundleId","getFromJsonp","pipe","catchError","navigate","EMPTY","bundleDescriptor","isApplication","friendlyName","err","throwError","ɵfac","t","i1","i2","i3","i4","ɵcmp","type","selectors","decls","vars","consts","template","directives","i6","i5","i7","pipes","encapsulation","routes","path","component","resolve","loader","RxApplicationLoaderResolver","RxLoginLocalizationResolver","pathMatch","LoginPageRoutingModule","ɵmod","imports","exports","RouterModule","ɵinj","LoginPageModule","declarations","CommonModule","TranslateModule","FormsModule","AdaptLoginPageModule","AdaptTextFieldModule","AdaptButtonModule","AdaptRxTextfieldModule"],"mappings":"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","file":"node_modules_helix_platform_fesm2015_helix-platform-security-login_js.js","sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, NgModule } from '@angular/core';\nimport * as i6 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i7 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i5 from '@bmc-ux/adapt-angular';\nimport { AdaptLoginPageModule, AdaptButtonModule, AdaptRxTextfieldModule } from '@bmc-ux/adapt-angular';\nimport { AdaptTextFieldModule } from '@bmc-ux/obsolete';\nimport * as i4 from '@ngx-translate/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport * as i1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i3 from '@helix/platform/shared/api';\nimport { RxApplicationLoaderResolver, RxLoginLocalizationResolver } from '@helix/platform/shared/api';\nimport * as i2 from '@angular/platform-browser';\nimport { get } from 'lodash';\nimport { EMPTY, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nclass LoginPageComponent {\n    constructor(activatedRoute, router, title, rxAuthService, rxBundleService, translateService) {\n        this.activatedRoute = activatedRoute;\n        this.router = router;\n        this.title = title;\n        this.rxAuthService = rxAuthService;\n        this.rxBundleService = rxBundleService;\n        this.translateService = translateService;\n        this.isLoading = false;\n        this.bundleFriendlyName = '';\n        this.shouldReloadPage = true;\n        this.areStylesLoaded = false;\n        this.footerItems = {\n            content: {\n                copyright: 'Copyright 1997 - 2023 BMC Software, Inc.',\n                info: this.translateService.instant('login.trademark'),\n                helixLogo: true\n            }\n        };\n        this.shouldReloadPage = get(this.router.getCurrentNavigation(), 'extras.state.shouldReloadPage');\n        if (this.shouldReloadPage) {\n            window.location.reload();\n        }\n        else {\n            this.title.setTitle('Login');\n            this.activatedRoute.paramMap.subscribe((params) => {\n                const bundleId = params.get('bundleId');\n                this.rxBundleService\n                    .getFromJsonp(bundleId)\n                    .pipe(catchError(() => {\n                    this.router.navigate(['unknown-application']);\n                    return EMPTY;\n                }))\n                    .subscribe((bundleDescriptor) => {\n                    if (bundleDescriptor.isApplication) {\n                        this.bundleFriendlyName = bundleDescriptor.friendlyName;\n                        this.title.setTitle(`Login - ${this.bundleFriendlyName}`);\n                    }\n                    else {\n                        this.router.navigate(['unknown-application']);\n                    }\n                });\n            });\n        }\n    }\n    login() {\n        this.isLoading = true;\n        this.rxAuthService\n            .login(this.userName, this.userPassword)\n            .pipe(catchError((err) => {\n            this.isLoading = false;\n            return throwError(err);\n        }))\n            .subscribe();\n    }\n}\nLoginPageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: LoginPageComponent, deps: [{ token: i1.ActivatedRoute }, { token: i1.Router }, { token: i2.Title }, { token: i3.RxAuthService }, { token: i3.RxBundleService }, { token: i4.TranslateService }], target: i0.ɵɵFactoryTarget.Component });\nLoginPageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: LoginPageComponent, selector: \"rx-login-page\", ngImport: i0, template: \"<link rel=\\\"stylesheet\\\" href=\\\"/helix/assets/adapt-css/dist/css/adapt-css-bs4.min.css\\\" (load)=\\\"areStylesLoaded = true\\\" />\\n\\n<adapt-login\\n  productName=\\\"{{ bundleFriendlyName }}\\\"\\n  logoClass=\\\"logo-bmc-helix logo-light\\\"\\n  [footerConfig]=\\\"footerItems\\\"\\n  *ngIf=\\\"!shouldReloadPage && areStylesLoaded\\\"\\n>\\n  <form class=\\\"form\\\" novalidate autocomplete=\\\"off\\\" method=\\\"post\\\">\\n    <adapt-rx-textfield\\n      class=\\\"form-group textfield\\\"\\n      rx-id=\\\"username\\\"\\n      [label]=\\\"'login.username' | translate\\\"\\n      [name]=\\\"'username'\\\"\\n      [placeholder]=\\\"'login.username' | translate\\\"\\n      [autofocus]=\\\"true\\\"\\n      [(ngModel)]=\\\"userName\\\"\\n    >\\n    </adapt-rx-textfield>\\n\\n    <adapt-rx-textfield\\n      class=\\\"form-group textfield\\\"\\n      rx-id=\\\"password\\\"\\n      [isPassword]=\\\"true\\\"\\n      [label]=\\\"'login.password' | translate\\\"\\n      [placeholder]=\\\"'login.password' | translate\\\"\\n      autocomplete=\\\"off\\\"\\n      [(ngModel)]=\\\"userPassword\\\"\\n      [ngModelOptions]=\\\"{ standalone: true }\\\"\\n    >\\n    </adapt-rx-textfield>\\n\\n    <button\\n      adapt-button\\n      btn-type=\\\"primary\\\"\\n      size=\\\"block\\\"\\n      rx-id=\\\"sign-in-button\\\"\\n      type=\\\"submit\\\"\\n      class=\\\"form__button mb-0\\\"\\n      (click)=\\\"login()\\\"\\n      [disabled]=\\\"!userName || isLoading\\\"\\n    >\\n      {{ 'login.login' | translate }}\\n    </button>\\n  </form>\\n</adapt-login>\\n\", components: [{ type: i5.AdaptLoginPageComponent, selector: \"adapt-login\", inputs: [\"logoClass\", \"footerConfig\", \"productName\"] }, { type: i5.AdaptRxTextfieldComponent, selector: \"adapt-rx-textfield\", inputs: [\"prepend\", \"append\", \"isPassword\", \"autocomplete\", \"placeholder\", \"size\", \"fieldTagText\", \"fieldTagType\", \"showValidState\", \"showValidStateIcon\", \"showInvalidStateIcon\", \"validStateMessage\", \"disabledStyleForReadonlyState\"] }, { type: i5.AdaptButtonComponent, selector: \"adapt-button, button[adapt-button], a[adapt-button]\", inputs: [\"btn-type\", \"size\", \"disabled\", \"type\", \"tabIndex\"], exportAs: [\"adaptBtn\"] }], directives: [{ type: i6.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i7.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i7.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i7.NgForm, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: [\"ngFormOptions\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i7.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i7.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], pipes: { \"translate\": i4.TranslatePipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: LoginPageComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-login-page',\n                    templateUrl: './login-page.component.html'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.ActivatedRoute }, { type: i1.Router }, { type: i2.Title }, { type: i3.RxAuthService }, { type: i3.RxBundleService }, { type: i4.TranslateService }]; } });\n\nconst routes = [\n    {\n        path: '',\n        component: LoginPageComponent,\n        resolve: {\n            loader: RxApplicationLoaderResolver,\n            RxLoginLocalizationResolver\n        },\n        pathMatch: 'full'\n    }\n];\nclass LoginPageRoutingModule {\n}\nLoginPageRoutingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: LoginPageRoutingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLoginPageRoutingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: LoginPageRoutingModule, imports: [i1.RouterModule], exports: [RouterModule] });\nLoginPageRoutingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: LoginPageRoutingModule, imports: [[RouterModule.forChild(routes)], RouterModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: LoginPageRoutingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [RouterModule.forChild(routes)],\n                    exports: [RouterModule]\n                }]\n        }] });\n\nclass LoginPageModule {\n}\nLoginPageModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: LoginPageModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLoginPageModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: LoginPageModule, declarations: [LoginPageComponent], imports: [CommonModule,\n        LoginPageRoutingModule,\n        TranslateModule,\n        FormsModule,\n        AdaptLoginPageModule,\n        AdaptTextFieldModule,\n        AdaptButtonModule,\n        AdaptRxTextfieldModule] });\nLoginPageModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: LoginPageModule, imports: [[\n            CommonModule,\n            LoginPageRoutingModule,\n            TranslateModule,\n            FormsModule,\n            AdaptLoginPageModule,\n            AdaptTextFieldModule,\n            AdaptButtonModule,\n            AdaptRxTextfieldModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: LoginPageModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [LoginPageComponent],\n                    imports: [\n                        CommonModule,\n                        LoginPageRoutingModule,\n                        TranslateModule,\n                        FormsModule,\n                        AdaptLoginPageModule,\n                        AdaptTextFieldModule,\n                        AdaptButtonModule,\n                        AdaptRxTextfieldModule\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LoginPageModule };\n//# sourceMappingURL=helix-platform-security-login.js.map\n"],"sourceRoot":"webpack:///"}