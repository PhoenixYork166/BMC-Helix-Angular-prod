import { AfterViewInit, OnChanges, SimpleChanges, EventEmitter } from "@angular/core";
import * as i0 from "@angular/core";
export declare class NgxKjuaComponent implements AfterViewInit, OnChanges {
    private platformId;
    /**
     * render method
     */
    render: "image" | "svg" | "canvas";
    /**
     * render pixel-perfect lines
     */
    crisp: boolean;
    /**
     * minimum version= 1..40
     */
    minVersion: number;
    /**
     * error correction level
     */
    ecLevel: "L" | "M" | "Q" | "H";
    /**
     * size in pixel
     */
    size: number;
    /**
     * pixel-ratio; undefined for devicePixelRatio
     */
    ratio: number | null;
    /**
     * code color
     */
    fill: string;
    /**
     * background color
     */
    back: string;
    /**
     * content
     */
    text: string;
    /**
     * roundend corners in pc= 0..100
     */
    rounded: number;
    /**
     * quiet zone in modules
     */
    quiet: number;
    /**
     * modes
     */
    mode: "plain" | "label" | "image" | "imagelabel" | "labelimage";
    /**
     * label/image size and pos in pc= 0..100
     */
    mSize: number | number[];
    mPosX: number | number[];
    mPosY: number | number[];
    image: null | HTMLImageElement | string;
    imageAsCode: boolean;
    /**
     * label
     */
    label: string;
    fontname: string;
    fontcolor: string;
    fontoutline: boolean;
    /**
     * If true, rendering is done inside "requestAnimationFrame"-call.
     * Use this if you want to generate more than one code (e.g. batch)
     */
    renderAsync: boolean;
    /**
     * If set, this css-class will be appended to the div-container that contains
     * the qr-code (which is either an img or a canvas)
     */
    cssClass: string;
    /**
     * an optional HTML-ID-attribute for the element (works only with render-mode SVG and image)
     */
    elementId: string;
    codeFinished: EventEmitter<any>;
    div: any;
    private viewInitialized;
    constructor(platformId: Object);
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    get template(): Node;
    renderCode(): void;
    updateView(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxKjuaComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgxKjuaComponent, "ngx-kjua", never, { "render": "render"; "crisp": "crisp"; "minVersion": "minVersion"; "ecLevel": "ecLevel"; "size": "size"; "ratio": "ratio"; "fill": "fill"; "back": "back"; "text": "text"; "rounded": "rounded"; "quiet": "quiet"; "mode": "mode"; "mSize": "mSize"; "mPosX": "mPosX"; "mPosY": "mPosY"; "image": "image"; "imageAsCode": "imageAsCode"; "label": "label"; "fontname": "fontname"; "fontcolor": "fontcolor"; "fontoutline": "fontoutline"; "renderAsync": "renderAsync"; "cssClass": "cssClass"; "elementId": "elementId"; }, { "codeFinished": "codeFinished"; }, never, never>;
}
