{"version":3,"file":"ngx-kjua.mjs","sources":["../../src/app/modules/ngx-kjua/ngx-kjua.component.ts","../../src/app/modules/ngx-kjua/ngx-kjua.module.ts","../../src/app/modules/ngx-kjua/qr-code.helper.ts","../../src/ngx-kjua.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  OnChanges,\n  Output,\n  PLATFORM_ID,\n  SimpleChanges,\n  ViewChild,\n  EventEmitter\n} from \"@angular/core\";\n\nimport {KjuaOptions} from \"kjua-svg\";\nimport * as kjua from \"kjua-svg\";\n\n@Component({\n  selector: \"ngx-kjua\",\n  template: `\n    <div [class]=\"cssClass\" #elem></div>`,\n  styles: [`\n    :host {\n      display: block;\n    }\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxKjuaComponent implements AfterViewInit, OnChanges {\n\n  /**\n   * render method\n   */\n  @Input()\n  render: \"image\" | \"svg\" | \"canvas\" = \"svg\";\n\n  /**\n   * render pixel-perfect lines\n   */\n  @Input()\n  crisp = true;\n\n  /**\n   * minimum version= 1..40\n   */\n  @Input()\n  minVersion = 1;\n\n  /**\n   * error correction level\n   */\n  @Input()\n  ecLevel: \"L\" | \"M\" | \"Q\" | \"H\" = \"L\";\n\n  /**\n   * size in pixel\n   */\n  @Input()\n  size = 200;\n\n  /**\n   * pixel-ratio; undefined for devicePixelRatio\n   */\n  @Input()\n  ratio: number | null = undefined;\n\n  /**\n   * code color\n   */\n  @Input()\n  fill = \"#333\";\n\n  /**\n   * background color\n   */\n  @Input()\n  back = \"#fff\";\n\n  /**\n   * content\n   */\n  @Input()\n  text = \"\";\n\n  /**\n   * roundend corners in pc= 0..100\n   */\n  @Input()\n  rounded = 0;\n\n  /**\n   * quiet zone in modules\n   */\n  @Input()\n  quiet = 0;\n\n  /**\n   * modes\n   */\n  @Input()\n  mode: \"plain\" | \"label\" | \"image\" | \"imagelabel\" | \"labelimage\" = \"plain\";\n\n  /**\n   * label/image size and pos in pc= 0..100\n   */\n  @Input()\n  mSize: number|number[] = 30;\n  @Input()\n  mPosX: number|number[] = 50;\n  @Input()\n  mPosY: number|number[] = 50;\n  @Input()\n  image: null | HTMLImageElement | string = undefined;\n  @Input()\n  imageAsCode = false;\n\n  /**\n   * label\n   */\n  @Input()\n  label = \"\";\n  @Input()\n  fontname = \"sans-serif\";\n  @Input()\n  fontcolor = \"#333\";\n  @Input()\n  fontoutline = true;\n\n  /**\n   * If true, rendering is done inside \"requestAnimationFrame\"-call.\n   * Use this if you want to generate more than one code (e.g. batch)\n   */\n  @Input()\n  renderAsync = false;\n\n  /**\n   * If set, this css-class will be appended to the div-container that contains\n   * the qr-code (which is either an img or a canvas)\n   */\n  @Input()\n  cssClass: string;\n\n  /**\n   * an optional HTML-ID-attribute for the element (works only with render-mode SVG and image)\n   */\n  @Input()\n  elementId: string;\n\n  @Output()\n  codeFinished = new EventEmitter<any>();\n\n  @ViewChild(\"elem\")\n  div;\n\n  private viewInitialized = false;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.viewInitialized = true;\n    this.updateView();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.viewInitialized) {\n      this.updateView();\n    }\n  }\n\n  get template(): Node {\n    const settings: KjuaOptions = {\n      render: this.render,\n      crisp: this.crisp,\n      minVersion: this.minVersion,\n      ecLevel: this.ecLevel,\n      size: this.size,\n      ratio: this.ratio,\n      fill: this.fill,\n      back: this.back,\n      text: this.text,\n      rounded: this.rounded,\n      quiet: this.quiet,\n      mode: this.mode,\n      mSize: this.mSize,\n      mPosX: this.mPosX,\n      mPosY: this.mPosY,\n      label: this.label,\n      fontname: this.fontname,\n      fontcolor: this.fontcolor,\n      image: this.image,\n      fontoutline: this.fontoutline,\n      imageAsCode: this.imageAsCode,\n      elementId: this.elementId\n    };\n    return kjua(settings);\n  }\n\n  renderCode() {\n    this.div.nativeElement.innerHTML = \"\";\n    const node = this.template;\n    this.div.nativeElement.appendChild(node);\n    this.codeFinished.next(node);\n  }\n\n  updateView() {\n    this.div.nativeElement.style.width = +this.size;\n    this.div.nativeElement.style.height = +this.size;\n    if (typeof this.image === \"string\") {\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.onload = () => {\n        if (this.renderAsync) {\n          requestAnimationFrame(() => this.renderCode());\n        } else {\n          this.renderCode();\n        }\n      }\n      img.src = 'data:image/png;base64,' + this.image;\n    } else {\n      if (this.renderAsync) {\n        requestAnimationFrame(() => this.renderCode());\n      } else {\n        this.renderCode();\n      }\n    }\n  }\n}\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {NgxKjuaComponent} from \"./ngx-kjua.component\";\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NgxKjuaComponent\n  ],\n  exports: [\n    NgxKjuaComponent\n  ]\n})\nexport class NgxKjuaModule {\n}\n\n","export class QrCodeHelper {\n\n  /**\n   *  Make the code for creating an SMS.\n   *  Number can be provided as number or string (useful for international format e.g. +1 for USA)\n   *\n   * @paramnumber\n   * @param text\n   */\n  static makeSMS(number: number | string, text?: string): string {\n    if (text) {\n      if (text.length > 160) {\n        return `SMSTO:${number}:${text.substr(0, 160)}`;\n      } else {\n        return `SMSTO:${number}:${text}`;\n      }\n    } else {\n      return `SMSTO:${number}`;\n    }\n  }\n\n  /**\n   * Make the code for making a phone call\n   * Number can be provided as number or string (useful for international format e.g. +1 for USA)\n   *\n   * @param number\n   */\n  static makeCall(number: number | string): string {\n    return `tel:${number}`;\n  }\n\n  /**\n   * Make the code for encoding a location\n   *\n   * @param lat\n   * @param lon\n   * @param meters\n   */\n  static makeGeo(lat: string, lon: string, meters = 400): string {\n    return `geo:${lat},${lon},${meters}`;\n  }\n\n  /**\n   * Make the code for encoding an event in iCal format\n   * You have to do the encoding for the begin and end by yourself (use moment.js!)\n   *\n   * @param description\n   * @param begin\n   * @param end\n   */\n  static makeEvent(description: string, begin: string, end: string): string {\n    return `BEGIN:VEVENT\nSUMMARY:${description}\nDTSTART:${begin}\nDTEND:${end}\nEND:VEVENT`;\n  }\n\n  /**\n   * Make the code for an Email\n   *\n   * @param recipient\n   * @param subject\n   * @param text\n   */\n  static makeEmail(recipient: string, subject?: string, text?: string): string {\n    let retVal = `MATMSG:TO:${recipient};`;\n    if (subject) {\n      retVal += `SUB:${subject}`;\n    }\n    retVal += `;`;\n    if (text) {\n      retVal += `BODY:${text}`;\n    }\n    retVal += `;;`;\n    return retVal;\n  }\n\n  /**\n   * Make the code that lets user login to a WiFi\n   * If no pass is provided, the WiFi is considered as not encrypted (no WPA)\n   *\n   * @param ssid\n   * @param pass\n   * @param hidden\n   */\n  static makeWifi(ssid: string, pass?: string, hidden = false): string {\n    let retVal = `WIFI:${!!pass ? \"T:WPA\" : \"T:nopass\"};S:${ssid};`;\n    if (pass) {\n      retVal += `P:${pass}`;\n    }\n    retVal += `;`;\n    if (hidden) {\n      retVal += `H:true`;\n    }\n    retVal += `;`;\n    return retVal;\n  }\n\n  /**\n   * Make the code that encodes contact information.\n   * Numbers can be provided as number or string (useful for international format e.g. +1 for USA)\n   * Encoding is done with MECARD-format and NOT VCard! VCard gives a longer string and therefore a\n   * bigger code which has a negative impact on readability for scanners. You can, of course, create\n   * a VCard string as well but the format is more complex.\n   *\n   * @param name\n   * @param telNumbers\n   * @param address, values separated with comma\n   * @param email\n   * @param url\n   */\n  static makeContactMeCard(name: string, telNumbers?: string[] | number[], address?: string, email?: string, url?: string): string {\n    let retVal = `MECARD:N:${name};`;\n    if (address) {\n      retVal += `ADR:${address};`;\n    }\n    if (telNumbers && telNumbers.length > 0) {\n      for (let i = 0; i < telNumbers.length; i++) {\n        retVal += `TEL:${telNumbers[i]};`;\n      }\n    }\n    if (email) {\n      retVal += `EMAIL:${email};`;\n    }\n    if (url) {\n      retVal += `URL:${url};`;\n    }\n    retVal += `;`;\n    return retVal;\n  }\n\n\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}