import { EventEmitter, OnInit } from '@angular/core';
import { AdaptRxSelectComponent, RxSelectOption, RxSelectSettings, SelectTexts } from '@bmc-ux/adapt-angular';
import * as i0 from "@angular/core";
export declare class AdaptSelectMigrationComponent implements OnInit {
    selectModel: RxSelectOption | RxSelectOption[];
    value: RxSelectOption | RxSelectOption[];
    set options(opts: RxSelectOption[]);
    set multiple(value: boolean);
    set optionFormatter(fn: (option: RxSelectOption) => string);
    set settings(value: RxSelectSettings);
    set texts(value: SelectTexts);
    set inline(value: boolean);
    readonly selectModelChange: EventEmitter<RxSelectOption | RxSelectOption[]>;
    readonly popupOpenChange: EventEmitter<boolean>;
    readonly filterValueChange: EventEmitter<string>;
    rxSelectComponent: AdaptRxSelectComponent;
    constructor();
    ngOnInit(): void;
    handleOnSelectModelChange(value: RxSelectOption | RxSelectOption[]): void;
    private _setNewSettings;
    private _showWarningMessage;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptSelectMigrationComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptSelectMigrationComponent, "adapt-select-migration", never, { "value": "value"; "options": "options"; "multiple": "multiple"; "optionFormatter": "optionFormatter"; "settings": "settings"; "texts": "texts"; "inline": "inline"; }, { "selectModelChange": "selectModelChange"; "popupOpenChange": "popupOpenChange"; "filterValueChange": "filterValueChange"; }, never, never>;
}
