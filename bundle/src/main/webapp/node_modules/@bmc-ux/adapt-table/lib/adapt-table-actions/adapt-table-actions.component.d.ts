import { ListKeyManager } from '@angular/cdk/a11y';
import { OnDestroy } from '@angular/core';
import { AdaptTableComponent } from '../adapt-table.component';
import { ColumnConfig, RowActionConfig, RowActionParams, RowDataItem, TableCustomTexts } from '../adapt-table.models';
import { PlacementArray, AdaptListKeyManagerItemDirective, AdaptDropdownDirective } from '@bmc-ux/adapt-angular';
import * as i0 from "@angular/core";
export declare class AdaptTableActionsComponent implements OnDestroy {
    table: AdaptTableComponent;
    dropdownPlacement: PlacementArray;
    activeActionItemId: AdaptListKeyManagerItemDirective;
    column: ColumnConfig;
    rowIndex: number;
    dataItem: RowDataItem;
    expanded: boolean;
    editing: boolean;
    texts: TableCustomTexts;
    actionsDropdown: AdaptDropdownDirective;
    private _listKeyManager;
    private _listKeyManagerDestroy;
    constructor(table: AdaptTableComponent);
    get actionsParams(): RowActionParams<RowDataItem>;
    ngOnDestroy(): void;
    onActionClick(action: RowActionConfig): void;
    isHidden(): boolean;
    isDisabled(): boolean;
    isDisabledAction(action: RowActionConfig): boolean;
    getTitle(action: RowActionConfig): string;
    getVisibleActions(): RowActionConfig[];
    keyManagerStateChange(listKeyManager?: ListKeyManager<AdaptListKeyManagerItemDirective>): void;
    keydownHandler(event: KeyboardEvent): void;
    handleOpenChange(isOpen: boolean): void;
    isActiveDescendant(keyManagerItem: AdaptListKeyManagerItemDirective): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptTableActionsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptTableActionsComponent, "adapt-table-actions", never, { "column": "column"; "rowIndex": "rowIndex"; "dataItem": "dataItem"; "expanded": "expanded"; "editing": "editing"; "texts": "texts"; }, {}, never, never>;
}
