import { RxSelectOption, RxSelectSettings, SelectTexts } from '@bmc-ux/adapt-angular';
import { AdaptTableComponent } from '../adapt-table.component';
import { ColumnConfig, PredefinedFilterType, TableCustomTexts } from '../adapt-table.models';
import { AdaptTableFiltersService } from './adapt-table-filters.service';
import * as i0 from "@angular/core";
export declare class AdaptTableFiltersComponent {
    table: AdaptTableComponent;
    private _adaptTableFiltersService;
    columns: ColumnConfig[];
    index: number;
    texts: TableCustomTexts;
    selectSettingsForMultiple: RxSelectSettings;
    selectSettingsForSingle: RxSelectSettings;
    constructor(table: AdaptTableComponent, _adaptTableFiltersService: AdaptTableFiltersService);
    filterName(column: ColumnConfig): PredefinedFilterType;
    isSingleSelect(column: ColumnConfig): boolean;
    setFilter(value: string, column: ColumnConfig, matchMode?: string): void;
    getFilterValue(columnField: string): unknown | null;
    getSelectOptions(column: ColumnConfig): RxSelectOption[];
    getSelectSettings(column: ColumnConfig): RxSelectSettings;
    getSelectTexts(column: ColumnConfig): SelectTexts;
    onSelectModelChange(value: string | string[], column: ColumnConfig): void;
    fireCallback(event: boolean | string, column: ColumnConfig, callbackName: string): void;
    selectOptionFormatter(option: RxSelectOption): string;
    private _getFilterCallbacks;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptTableFiltersComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptTableFiltersComponent, "adapt-table-filters", never, { "columns": "columns"; "index": "index"; "texts": "texts"; }, {}, never, never>;
}
