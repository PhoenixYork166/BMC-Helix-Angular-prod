import { AfterViewInit, ChangeDetectorRef, OnDestroy, TemplateRef } from '@angular/core';
import { Subscription } from 'rxjs';
import { AdaptTableComponent } from '../../adapt-table.component';
import { ColumnConfig, RenderingGroupedRowData, TableBodyTemplateParams } from '../../adapt-table.models';
import { CdkVirtualScrollRepeater } from '@angular/cdk/scrolling';
import * as i0 from "@angular/core";
export declare class TableBody implements OnDestroy, AfterViewInit {
    dt: AdaptTableComponent;
    cd: ChangeDetectorRef;
    pTableBody: ColumnConfig[];
    pTableBodyTemplate: TemplateRef<TableBodyTemplateParams | void>;
    frozen: boolean;
    cdkVirtualForOf: CdkVirtualScrollRepeater<RenderingGroupedRowData[]>;
    subscription: Subscription;
    private _destroyed$;
    constructor(dt: AdaptTableComponent, cd: ChangeDetectorRef);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    getContext(renderRowData: RenderingGroupedRowData, rowIndex: number, isEditable?: boolean, isExpandable?: boolean): TableBodyTemplateParams;
    static ɵfac: i0.ɵɵFactoryDeclaration<TableBody, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TableBody, "[pTableBody]", never, { "pTableBody": "pTableBody"; "pTableBodyTemplate": "pTableBodyTemplate"; "frozen": "frozen"; }, {}, never, never>;
}
