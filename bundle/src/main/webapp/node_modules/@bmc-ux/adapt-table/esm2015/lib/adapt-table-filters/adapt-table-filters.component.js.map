{"version":3,"file":"adapt-table-filters.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-table/src/lib/adapt-table-filters/adapt-table-filters.component.ts","../../../../../../libs/adapt-table/src/lib/adapt-table-filters/adapt-table-filters.html"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input} from '@angular/core';\nimport {RxSelectOption, RxSelectSettings, SelectTexts} from '@bmc-ux/adapt-angular';\nimport {AdaptTableComponent} from '../adapt-table.component';\nimport {\n  ColumnConfig,\n  PredefinedFilterType,\n  SelectFilterCallbacks,\n  TableCustomTexts\n} from '../adapt-table.models';\nimport {AdaptTableFiltersService} from './adapt-table-filters.service';\n\n\n@Component({\n  selector: 'adapt-table-filters',\n  templateUrl: './adapt-table-filters.html',\n})\nexport class AdaptTableFiltersComponent {\n\n  @Input() columns: ColumnConfig[];\n  @Input() index: number;\n  @Input() texts: TableCustomTexts;\n\n  selectSettingsForMultiple: RxSelectSettings = {\n    multiple: true,\n    appendToBody: true,\n    placement: 'bottom-left',\n  };\n\n  selectSettingsForSingle: RxSelectSettings = {\n    multiple: false,\n    enableFilter: true,\n    appendToBody: true,\n    placement: 'bottom-left',\n  };\n\n  constructor(\n    public table: AdaptTableComponent,\n    private _adaptTableFiltersService: AdaptTableFiltersService\n  ) {\n  }\n\n  filterName(column: ColumnConfig): PredefinedFilterType {\n    return this._adaptTableFiltersService.filterName(column);\n  }\n\n  isSingleSelect(column: ColumnConfig): boolean {\n    return this._adaptTableFiltersService.getSelectFilterParams(column).single;\n  }\n\n  setFilter(value: string, column: ColumnConfig, matchMode?: string): void {\n    this._adaptTableFiltersService.setFilter(value, column, this.table, matchMode);\n  }\n\n  getFilterValue(columnField: string): unknown | null {\n    return this._adaptTableFiltersService.getFilterValue(columnField, this.table);\n  }\n\n  getSelectOptions(column: ColumnConfig): RxSelectOption[] {\n    return this._adaptTableFiltersService.getSelectOptions(column);\n  }\n\n  getSelectSettings(column: ColumnConfig): RxSelectSettings {\n    const filterParams = this._adaptTableFiltersService.getSelectFilterParams(column);\n\n    if (filterParams.selectSettings) {\n      return filterParams.selectSettings;\n    } else {\n      return this.isSingleSelect(column) ? this.selectSettingsForSingle : this.selectSettingsForMultiple;\n    }\n  }\n\n  getSelectTexts(column: ColumnConfig): SelectTexts {\n    return this._adaptTableFiltersService.getSelectTexts(column, this.texts);\n  }\n\n  onSelectModelChange(value: string | string[], column: ColumnConfig): void {\n    this._adaptTableFiltersService.onSelectModelChange(value, column, this.table);\n  }\n\n  fireCallback(event: boolean | string, column: ColumnConfig, callbackName: string): void {\n    const callbacks = this._getFilterCallbacks(column);\n\n    if (callbacks && callbacks[callbackName]) {\n      callbacks[callbackName](event);\n    }\n  }\n\n  selectOptionFormatter(option: RxSelectOption): string {\n    return option.name;\n  }\n\n  private _getFilterCallbacks(column: ColumnConfig): SelectFilterCallbacks {\n    const filterParams = this._adaptTableFiltersService.getSelectFilterParams(column);\n\n    return filterParams.callbacks;\n  }\n\n}\n","<ng-container *ngIf=\"columns.length < 2\">\n  <div class=\"adapt-table-filters\" *ngFor=\"let column of columns; trackBy: table.trackByForColumns\">\n\n    <ng-container *ngIf=\"column.filterTemplate; else noFilterTemplate\">\n      <ng-template [ngTemplateOutlet]=\"column.filterTemplate\"\n                   [ngTemplateOutletContext]=\"{column: column, index: index}\">\n      </ng-template>\n    </ng-container>\n    <ng-template #noFilterTemplate>\n      <ng-container [ngSwitch]=\"filterName(column)\">\n        <adapt-rx-search *ngSwitchCase=\"'textFilter'\"\n                         [adaptRadarDisableEventSending]=\"true\"\n                         (ngModelChange)=\"setFilter($event, column)\"\n                         [ngModel]=\"getFilterValue(column.field)\"\n                         [placeholder]=\"texts.textFilterTexts.placeholder\"\n                         [label]=\"texts.textFilterTexts.label\"\n                         [initialAlign]=\"'left'\"\n                         [searchButton]=\"table.explicitSearchBtn\"\n                         [size]=\"'sm'\">\n        </adapt-rx-search>\n\n        <adapt-select-migration *ngSwitchCase=\"'selectFilter'\"\n                                [settings]=\"getSelectSettings(column)\"\n                                [texts]=\"getSelectTexts(column)\"\n                                [options]=\"getSelectOptions(column)\"\n                                [multiple]=\"!isSingleSelect(column)\"\n                                [optionFormatter]=\"selectOptionFormatter\"\n                                [value]=\"getFilterValue(column.field)\"\n                                (selectModelChange)=\"onSelectModelChange($event, column)\"\n                                (popupOpenChange)=\"$event ? fireCallback($event, column, 'dropdownOpened') : fireCallback($event, column, 'dropdownClosed')\"\n                                (filterValueChange)=\"fireCallback($event, column, 'filterValueChanged')\">\n        </adapt-select-migration>\n      </ng-container>\n    </ng-template>\n\n  </div>\n</ng-container>\n\n<adapt-table-merged-filters\n  *ngIf=\"columns.length >= 2\"\n  [columns]=\"columns\"\n  [index]=\"index\"\n  [texts]=\"texts\">\n</adapt-table-merged-filters>\n"]}