import { Directionality } from '@angular/cdk/bidi';
import { EventManager } from '@angular/platform-browser';
import { ChangeDetectorRef, Component, ElementRef, Input, NgZone, QueryList, ViewChild, ViewChildren } from '@angular/core';
import { AdaptFocusMonitorService, AdaptRxSearchComponent, getEventKeyCode, ResizeService, SafeCdr, toNumber } from '@bmc-ux/adapt-angular';
import { DOWN_ARROW, ENTER, SPACE, TAB } from '@angular/cdk/keycodes';
import { asyncScheduler, merge, ReplaySubject, Subject } from 'rxjs';
import { distinctUntilChanged, map, switchMap, take, takeUntil, throttleTime } from 'rxjs/operators';
import { AdaptTableComponent } from '../adapt-table.component';
import { ToolbarItemsByPriority } from '../adapt-table.models';
import { AdaptTableToolbarItemDirective } from './adapt-table-toolbar-item.directive';
import { ExportType } from './../adapt-table.models';
import * as i0 from "@angular/core";
import * as i1 from "../adapt-table.component";
import * as i2 from "@bmc-ux/adapt-angular";
import * as i3 from "@angular/cdk/bidi";
import * as i4 from "@angular/platform-browser";
import * as i5 from "./adapt-table-toolbar-item.directive";
import * as i6 from "@angular/common";
import * as i7 from "@angular/forms";
import * as i8 from "../shared/sortby.pipe";
const _c0 = ["filterInput"];
const _c1 = ["adaptRxSearchComponent"];
const _c2 = ["toolbarContainerEl"];
const _c3 = ["toolbarSectionsSeparatorEl"];
const _c4 = ["toolbarContentSeparatorEl"];
const _c5 = ["toolbarControlsEl"];
const _c6 = ["adaptListKeyManagerItem"];
const _c7 = function (a0) { return { $implicit: a0 }; };
function AdaptTableToolbarComponent_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0, 37);
} if (rf & 2) {
    i0.ɵɵnextContext();
    const _r27 = i0.ɵɵreference(86);
    const _r1 = i0.ɵɵreference(6);
    i0.ɵɵproperty("ngTemplateOutlet", _r27)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, _r1.itemContext));
} }
function AdaptTableToolbarComponent_ng_container_14_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0, 37);
} if (rf & 2) {
    i0.ɵɵnextContext();
    const _r29 = i0.ɵɵreference(89);
    const _r3 = i0.ɵɵreference(12);
    i0.ɵɵproperty("ngTemplateOutlet", _r29)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, _r3.itemContext));
} }
function AdaptTableToolbarComponent_div_17_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0, 37);
} if (rf & 2) {
    i0.ɵɵnextContext();
    const _r47 = i0.ɵɵreference(1);
    i0.ɵɵnextContext();
    const _r31 = i0.ɵɵreference(92);
    i0.ɵɵproperty("ngTemplateOutlet", _r31)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, _r47.itemContext));
} }
function AdaptTableToolbarComponent_div_17_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 38, 39);
    i0.ɵɵtext(2, "\n      ");
    i0.ɵɵtemplate(3, AdaptTableToolbarComponent_div_17_ng_container_3_Template, 1, 4, "ng-container", 5);
    i0.ɵɵtext(4, "\n    ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const _r47 = i0.ɵɵreference(1);
    const ctx_r5 = i0.ɵɵnextContext();
    i0.ɵɵproperty("adaptToolbarItem", ctx_r5.TOOLBAR_ITEMS_BY_PRIORITY.SELECTION_LIMIT);
    i0.ɵɵattribute("data-testid", ctx_r5.testID + "_limit");
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", !(_r47.hideToPopup || _r47.removeFromToolbar));
} }
function AdaptTableToolbarComponent_ng_container_22_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0, 37);
} if (rf & 2) {
    i0.ɵɵnextContext();
    const _r33 = i0.ɵɵreference(95);
    const _r6 = i0.ɵɵreference(20);
    i0.ɵɵproperty("ngTemplateOutlet", _r33)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, _r6.itemContext));
} }
function AdaptTableToolbarComponent_ng_container_28_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0, 37);
} if (rf & 2) {
    i0.ɵɵnextContext();
    const _r35 = i0.ɵɵreference(98);
    const _r8 = i0.ɵɵreference(26);
    i0.ɵɵproperty("ngTemplateOutlet", _r35)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, _r8.itemContext));
} }
function AdaptTableToolbarComponent_ng_container_34_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0, 37);
} if (rf & 2) {
    i0.ɵɵnextContext();
    const _r37 = i0.ɵɵreference(101);
    const _r10 = i0.ɵɵreference(32);
    i0.ɵɵproperty("ngTemplateOutlet", _r37)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, _r10.itemContext));
} }
function AdaptTableToolbarComponent_ng_container_43_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0, 37);
} if (rf & 2) {
    i0.ɵɵnextContext();
    const _r39 = i0.ɵɵreference(104);
    const _r13 = i0.ɵɵreference(41);
    i0.ɵɵproperty("ngTemplateOutlet", _r39)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, _r13.itemContext));
} }
function AdaptTableToolbarComponent_ng_container_49_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0, 37);
} if (rf & 2) {
    i0.ɵɵnextContext();
    const _r25 = i0.ɵɵreference(83);
    const _r15 = i0.ɵɵreference(47);
    i0.ɵɵproperty("ngTemplateOutlet", _r25)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, _r15.itemContext));
} }
function AdaptTableToolbarComponent_ng_container_55_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0, 37);
} if (rf & 2) {
    i0.ɵɵnextContext();
    const _r41 = i0.ɵɵreference(107);
    const _r17 = i0.ɵɵreference(53);
    i0.ɵɵproperty("ngTemplateOutlet", _r41)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, _r17.itemContext));
} }
function AdaptTableToolbarComponent_ng_container_61_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0, 37);
} if (rf & 2) {
    i0.ɵɵnextContext();
    const _r43 = i0.ɵɵreference(110);
    const _r19 = i0.ɵɵreference(59);
    i0.ɵɵproperty("ngTemplateOutlet", _r43)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, _r19.itemContext));
} }
function AdaptTableToolbarComponent_span_73_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "span", 40);
} }
function AdaptTableToolbarComponent_ng_template_76_div_1_div_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 45);
    i0.ɵɵtext(1, "\n            ");
    i0.ɵɵelementContainer(2, 37);
    i0.ɵɵtext(3, "\n          ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    i0.ɵɵnextContext(3);
    const _r29 = i0.ɵɵreference(89);
    const _r3 = i0.ɵɵreference(12);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", _r29)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, _r3.itemContext));
} }
function AdaptTableToolbarComponent_ng_template_76_div_1_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n            ");
    i0.ɵɵelementContainer(2, 37);
    i0.ɵɵtext(3, "\n          ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    i0.ɵɵnextContext(3);
    const _r27 = i0.ɵɵreference(86);
    const _r1 = i0.ɵɵreference(6);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", _r27)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, _r1.itemContext));
} }
function AdaptTableToolbarComponent_ng_template_76_div_1_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n            ");
    i0.ɵɵelementContainer(2, 37);
    i0.ɵɵtext(3, "\n          ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    i0.ɵɵnextContext(3);
    const _r33 = i0.ɵɵreference(95);
    const _r6 = i0.ɵɵreference(20);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", _r33)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, _r6.itemContext));
} }
function AdaptTableToolbarComponent_ng_template_76_div_1_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n            ");
    i0.ɵɵelementContainer(2, 37);
    i0.ɵɵtext(3, "\n          ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    i0.ɵɵnextContext(3);
    const _r43 = i0.ɵɵreference(110);
    const _r19 = i0.ɵɵreference(59);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", _r43)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, _r19.itemContext));
} }
function AdaptTableToolbarComponent_ng_template_76_div_1_ng_container_10_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n            ");
    i0.ɵɵelementContainer(2, 37);
    i0.ɵɵtext(3, "\n          ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    i0.ɵɵnextContext(3);
    const _r39 = i0.ɵɵreference(104);
    const _r13 = i0.ɵɵreference(41);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", _r39)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, _r13.itemContext));
} }
function AdaptTableToolbarComponent_ng_template_76_div_1_ng_container_12_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n            ");
    i0.ɵɵelementContainer(2, 37);
    i0.ɵɵtext(3, "\n          ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    i0.ɵɵnextContext(3);
    const _r25 = i0.ɵɵreference(83);
    const _r15 = i0.ɵɵreference(47);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", _r25)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, _r15.itemContext));
} }
function AdaptTableToolbarComponent_ng_template_76_div_1_ng_container_14_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n            ");
    i0.ɵɵelementContainer(2, 37);
    i0.ɵɵtext(3, "\n          ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    i0.ɵɵnextContext(3);
    const _r37 = i0.ɵɵreference(101);
    const _r10 = i0.ɵɵreference(32);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", _r37)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, _r10.itemContext));
} }
function AdaptTableToolbarComponent_ng_template_76_div_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 42);
    i0.ɵɵtext(1, "\n          ");
    i0.ɵɵtemplate(2, AdaptTableToolbarComponent_ng_template_76_div_1_div_2_Template, 4, 4, "div", 43);
    i0.ɵɵtext(3, "\n\n          ");
    i0.ɵɵtemplate(4, AdaptTableToolbarComponent_ng_template_76_div_1_ng_container_4_Template, 4, 4, "ng-container", 44);
    i0.ɵɵtext(5, "\n\n          ");
    i0.ɵɵtemplate(6, AdaptTableToolbarComponent_ng_template_76_div_1_ng_container_6_Template, 4, 4, "ng-container", 44);
    i0.ɵɵtext(7, "\n\n          ");
    i0.ɵɵtemplate(8, AdaptTableToolbarComponent_ng_template_76_div_1_ng_container_8_Template, 4, 4, "ng-container", 44);
    i0.ɵɵtext(9, "\n\n          ");
    i0.ɵɵtemplate(10, AdaptTableToolbarComponent_ng_template_76_div_1_ng_container_10_Template, 4, 4, "ng-container", 44);
    i0.ɵɵtext(11, "\n\n          ");
    i0.ɵɵtemplate(12, AdaptTableToolbarComponent_ng_template_76_div_1_ng_container_12_Template, 4, 4, "ng-container", 44);
    i0.ɵɵtext(13, "\n\n          ");
    i0.ɵɵtemplate(14, AdaptTableToolbarComponent_ng_template_76_div_1_ng_container_14_Template, 4, 4, "ng-container", 44);
    i0.ɵɵtext(15, "\n        ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r49 = i0.ɵɵnextContext(2);
    const _r3 = i0.ɵɵreference(12);
    const _r1 = i0.ɵɵreference(6);
    const _r6 = i0.ɵɵreference(20);
    const _r19 = i0.ɵɵreference(59);
    const _r13 = i0.ɵɵreference(41);
    const _r15 = i0.ɵɵreference(47);
    const _r10 = i0.ɵɵreference(32);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r49.config.counter && _r3.hideToPopup);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r49.config.refreshButton && _r1.hideToPopup);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r49.config.filter && _r6.hideToPopup);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r49.config.visibleColumnsMenu && _r19.hideToPopup);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r49.config.rightCustomSection && _r13.hideToPopup);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", (ctx_r49.config.export == null ? null : ctx_r49.config.export.exportTypes == null ? null : ctx_r49.config.export.exportTypes.length) && _r15.hideToPopup);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r49.config.leftCustomSection && _r10.hideToPopup);
} }
function AdaptTableToolbarComponent_ng_template_76_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n        ");
    i0.ɵɵtemplate(1, AdaptTableToolbarComponent_ng_template_76_div_1_Template, 16, 7, "div", 41);
    i0.ɵɵtext(2, "\n      ");
} if (rf & 2) {
    const ctx_r24 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r24.hasHiddenItems);
} }
function AdaptTableToolbarComponent_ng_template_82_span_8_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r59 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r59.texts.export);
} }
function AdaptTableToolbarComponent_ng_template_82_ng_template_11_ng_template_8_Template(rf, ctx) { }
function AdaptTableToolbarComponent_ng_template_82_ng_template_11_ng_container_11_ng_template_9_Template(rf, ctx) { }
const _c8 = function (a0) { return { exportSelected: a0 }; };
function AdaptTableToolbarComponent_ng_template_82_ng_template_11_ng_container_11_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n          ");
    i0.ɵɵelement(2, "div", 54);
    i0.ɵɵtext(3, "\n          ");
    i0.ɵɵelementStart(4, "div", 52);
    i0.ɵɵtext(5, "\n            ");
    i0.ɵɵelementStart(6, "p", 53);
    i0.ɵɵtext(7);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(8, "\n            ");
    i0.ɵɵtemplate(9, AdaptTableToolbarComponent_ng_template_82_ng_template_11_ng_container_11_ng_template_9_Template, 0, 0, "ng-template", 37);
    i0.ɵɵtext(10, "\n          ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(11, "\n        ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    i0.ɵɵnextContext(2);
    const _r61 = i0.ɵɵreference(15);
    const ctx_r64 = i0.ɵɵnextContext();
    i0.ɵɵadvance(7);
    i0.ɵɵtextInterpolate(ctx_r64.texts.exportSelected);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", _r61)("ngTemplateOutletContext", i0.ɵɵpureFunction1(5, _c7, i0.ɵɵpureFunction1(3, _c8, ctx_r64.config.export.showExportForSelected)));
} }
const _c9 = function () { return { exportSelected: false }; };
function AdaptTableToolbarComponent_ng_template_82_ng_template_11_Template(rf, ctx) { if (rf & 1) {
    const _r67 = i0.ɵɵgetCurrentView();
    i0.ɵɵtext(0, "\n      ");
    i0.ɵɵelementStart(1, "div", 51);
    i0.ɵɵlistener("keydown", function AdaptTableToolbarComponent_ng_template_82_ng_template_11_Template_div_keydown_1_listener($event) { i0.ɵɵrestoreView(_r67); i0.ɵɵnextContext(); const _r58 = i0.ɵɵreference(2); const ctx_r66 = i0.ɵɵnextContext(); return ctx_r66.handleDropdownMenuKeydown($event, ctx_r66.TOOLBAR_ITEMS_BY_PRIORITY.EXPORT, _r58); });
    i0.ɵɵtext(2, "\n        ");
    i0.ɵɵelementStart(3, "div", 52);
    i0.ɵɵtext(4, "\n          ");
    i0.ɵɵelementStart(5, "p", 53);
    i0.ɵɵtext(6);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(7, "\n          ");
    i0.ɵɵtemplate(8, AdaptTableToolbarComponent_ng_template_82_ng_template_11_ng_template_8_Template, 0, 0, "ng-template", 37);
    i0.ɵɵtext(9, "\n        ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(10, "\n\n        ");
    i0.ɵɵtemplate(11, AdaptTableToolbarComponent_ng_template_82_ng_template_11_ng_container_11_Template, 12, 7, "ng-container", 44);
    i0.ɵɵtext(12, "\n      ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(13, "\n    ");
} if (rf & 2) {
    const context_r57 = i0.ɵɵnextContext().$implicit;
    const _r61 = i0.ɵɵreference(15);
    const ctx_r60 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵattribute("aria-activedescendant", ctx_r60.isActiveDescendant(context_r57.id));
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate(ctx_r60.texts.exportEntireDocument);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", _r61)("ngTemplateOutletContext", i0.ɵɵpureFunction1(6, _c7, i0.ɵɵpureFunction0(5, _c9)));
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", ctx_r60.showExportSelected);
} }
function AdaptTableToolbarComponent_ng_template_82_ng_template_14_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    const _r74 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n        ");
    i0.ɵɵelementStart(2, "span");
    i0.ɵɵtext(3, "\n          ");
    i0.ɵɵelementStart(4, "button", 57, 58);
    i0.ɵɵlistener("keydown", function AdaptTableToolbarComponent_ng_template_82_ng_template_14_ng_container_3_Template_button_keydown_4_listener($event) { i0.ɵɵrestoreView(_r74); i0.ɵɵnextContext(2); const _r58 = i0.ɵɵreference(2); const ctx_r73 = i0.ɵɵnextContext(); return ctx_r73.closeMenuOnKeydown($event, _r58); })("click", function AdaptTableToolbarComponent_ng_template_82_ng_template_14_ng_container_3_Template_button_click_4_listener() { const restoredCtx = i0.ɵɵrestoreView(_r74); const exportItem_r71 = restoredCtx.$implicit; const context_r69 = i0.ɵɵnextContext().$implicit; const ctx_r75 = i0.ɵɵnextContext(2); return ctx_r75.exportAs({ type: ctx_r75.exportType[exportItem_r71.type], selectionOnly: context_r69.exportSelected }); });
    i0.ɵɵtext(6, "\n            ");
    i0.ɵɵelement(7, "span");
    i0.ɵɵtext(8, "\n            ");
    i0.ɵɵelementStart(9, "span");
    i0.ɵɵtext(10);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(11, "\n          ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(12, "\n        ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(13, "\n      ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const exportItem_r71 = ctx.$implicit;
    i0.ɵɵadvance(7);
    i0.ɵɵclassMapInterpolate1("toolbar-export-type-icon d-icon-file_arrow_", exportItem_r71.type.toLowerCase(), "");
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate(exportItem_r71.type);
} }
function AdaptTableToolbarComponent_ng_template_82_ng_template_14_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n    ");
    i0.ɵɵelementStart(1, "div", 55);
    i0.ɵɵtext(2, "\n      ");
    i0.ɵɵtemplate(3, AdaptTableToolbarComponent_ng_template_82_ng_template_14_ng_container_3_Template, 14, 4, "ng-container", 56);
    i0.ɵɵtext(4, "\n    ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(5, "\n  ");
} if (rf & 2) {
    const ctx_r62 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngForOf", ctx_r62.config.export.exportTypes);
} }
const _c10 = function () { return ["left-top", "auto"]; };
const _c11 = function () { return ["bottom-left", "auto"]; };
function AdaptTableToolbarComponent_ng_template_82_Template(rf, ctx) { if (rf & 1) {
    const _r78 = i0.ɵɵgetCurrentView();
    i0.ɵɵtext(0, "\n\n  ");
    i0.ɵɵelementStart(1, "div", 46, 47);
    i0.ɵɵlistener("popupAnimationDone", function AdaptTableToolbarComponent_ng_template_82_Template_div_popupAnimationDone_1_listener() { i0.ɵɵrestoreView(_r78); const _r58 = i0.ɵɵreference(2); const ctx_r77 = i0.ɵɵnextContext(); return ctx_r77.popupAnimationDone(_r58, ctx_r77.TOOLBAR_ITEMS_BY_PRIORITY.EXPORT); });
    i0.ɵɵtext(3, "\n    ");
    i0.ɵɵelementStart(4, "button", 48);
    i0.ɵɵlistener("keydown", function AdaptTableToolbarComponent_ng_template_82_Template_button_keydown_4_listener($event) { i0.ɵɵrestoreView(_r78); const _r58 = i0.ɵɵreference(2); const ctx_r79 = i0.ɵɵnextContext(); return ctx_r79.anchorKeydownHandler($event, _r58); })("click", function AdaptTableToolbarComponent_ng_template_82_Template_button_click_4_listener($event) { i0.ɵɵrestoreView(_r78); const _r58 = i0.ɵɵreference(2); return _r58.toggle($event); });
    i0.ɵɵtext(5, "\n      ");
    i0.ɵɵelement(6, "span", 49);
    i0.ɵɵtext(7, "\n      ");
    i0.ɵɵtemplate(8, AdaptTableToolbarComponent_ng_template_82_span_8_Template, 2, 1, "span", 44);
    i0.ɵɵtext(9, "\n    ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(10, "\n\n    ");
    i0.ɵɵtemplate(11, AdaptTableToolbarComponent_ng_template_82_ng_template_11_Template, 14, 8, "ng-template", 25);
    i0.ɵɵtext(12, "\n  ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(13, "\n\n  ");
    i0.ɵɵtemplate(14, AdaptTableToolbarComponent_ng_template_82_ng_template_14_Template, 6, 1, "ng-template", null, 50, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵtext(16, "\n");
} if (rf & 2) {
    const context_r57 = ctx.$implicit;
    const ctx_r26 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("autoClose", "outside")("placement", context_r57.hidden ? i0.ɵɵpureFunction0(10, _c10) : i0.ɵɵpureFunction0(11, _c11))("appendToBody", true)("restoreFocusAfterClose", ctx_r26.shouldRestoreFocus)("focusNextElementAfterClose", ctx_r26.shouldFocusNext);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngClass", context_r57.hidden ? "list-group-item list-group-item-action caret-right" : "btn btn-link d-icon-right-triangle_down");
    i0.ɵɵadvance(2);
    i0.ɵɵclassProp("mr-1", !context_r57.collapsed || context_r57.hidden);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", context_r57.hidden || !context_r57.collapsed);
} }
function AdaptTableToolbarComponent_ng_template_85_Template(rf, ctx) { if (rf & 1) {
    const _r83 = i0.ɵɵgetCurrentView();
    i0.ɵɵtext(0, "\n  ");
    i0.ɵɵelementStart(1, "div", 59);
    i0.ɵɵtext(2, "\n    ");
    i0.ɵɵelementStart(3, "button", 60);
    i0.ɵɵlistener("click", function AdaptTableToolbarComponent_ng_template_85_Template_button_click_3_listener($event) { i0.ɵɵrestoreView(_r83); const ctx_r82 = i0.ɵɵnextContext(); return ctx_r82.refreshButtonClick($event); });
    i0.ɵɵtext(4, "\n      ");
    i0.ɵɵnamespaceSVG();
    i0.ɵɵelementStart(5, "svg", 61);
    i0.ɵɵtext(6, "\n        ");
    i0.ɵɵelement(7, "path", 62);
    i0.ɵɵtext(8, "\n      ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(9, "\n      ");
    i0.ɵɵnamespaceHTML();
    i0.ɵɵelementStart(10, "span", 59);
    i0.ɵɵtext(11);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(12, "\n    ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(13, "\n  ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(14, "\n");
} if (rf & 2) {
    const context_r81 = ctx.$implicit;
    const ctx_r28 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngClass", !context_r81.hidden ? "p-start-2" : "");
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngClass", !context_r81.hidden ? "px-1" : "btn-block align-start list-group-item px-2");
    i0.ɵɵadvance(2);
    i0.ɵɵclassProp("animated", ctx_r28.table.isRefreshingRowData);
    i0.ɵɵadvance(5);
    i0.ɵɵproperty("ngClass", !context_r81.hidden ? "sr-only" : "ml-1");
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r28.texts.refresh);
} }
function AdaptTableToolbarComponent_ng_template_88_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n  ");
    i0.ɵɵelementContainer(1, 37);
    i0.ɵɵtext(2, "\n");
} if (rf & 2) {
    const context_r84 = ctx.$implicit;
    const ctx_r30 = i0.ɵɵnextContext();
    const _r45 = i0.ɵɵreference(114);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r30.config.counterTemplate || _r45)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, context_r84));
} }
function AdaptTableToolbarComponent_ng_template_91_div_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 66);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r86 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n      ", ctx_r86.showSelectionLimitText(0), "\n    ");
} }
function AdaptTableToolbarComponent_ng_template_91_button_5_Template(rf, ctx) { if (rf & 1) {
    const _r90 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 67);
    i0.ɵɵlistener("click", function AdaptTableToolbarComponent_ng_template_91_button_5_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r90); const ctx_r89 = i0.ɵɵnextContext(2); return ctx_r89.showAllSelectedRows(); });
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r87 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n      ", ctx_r87.showSelectionLimitText(ctx_r87.table.getRowSelectionArray().length), "\n    ");
} }
function AdaptTableToolbarComponent_ng_template_91_button_7_Template(rf, ctx) { if (rf & 1) {
    const _r92 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 67);
    i0.ɵɵlistener("click", function AdaptTableToolbarComponent_ng_template_91_button_7_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r92); const ctx_r91 = i0.ɵɵnextContext(2); return ctx_r91.showAllRows(); });
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r88 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n      ", ctx_r88.texts.showAllSelected, "\n    ");
} }
function AdaptTableToolbarComponent_ng_template_91_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n  ");
    i0.ɵɵelementStart(1, "div", 63);
    i0.ɵɵtext(2, "\n    ");
    i0.ɵɵtemplate(3, AdaptTableToolbarComponent_ng_template_91_div_3_Template, 2, 1, "div", 64);
    i0.ɵɵtext(4, "\n    ");
    i0.ɵɵtemplate(5, AdaptTableToolbarComponent_ng_template_91_button_5_Template, 2, 1, "button", 65);
    i0.ɵɵtext(6, "\n    ");
    i0.ɵɵtemplate(7, AdaptTableToolbarComponent_ng_template_91_button_7_Template, 2, 1, "button", 65);
    i0.ɵɵtext(8, "\n  ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(9, "\n");
} if (rf & 2) {
    const ctx_r32 = i0.ɵɵnextContext();
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", !ctx_r32.table.getRowSelectionArray().length);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r32.table.getRowSelectionArray().length && !ctx_r32.onlySelectedRowsShown);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r32.onlySelectedRowsShown);
} }
function AdaptTableToolbarComponent_ng_template_94_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n  ");
    i0.ɵɵelementContainer(1, 37);
    i0.ɵɵtext(2, "\n");
} if (rf & 2) {
    const context_r93 = ctx.$implicit;
    const ctx_r34 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r34.config.filterTemplate)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, context_r93));
} }
function AdaptTableToolbarComponent_ng_template_97_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n  ");
    i0.ɵɵelementContainer(1, 37);
    i0.ɵɵtext(2, "\n");
} if (rf & 2) {
    const context_r94 = ctx.$implicit;
    const ctx_r36 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r36.config.filterResultsTemplate)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, context_r94));
} }
function AdaptTableToolbarComponent_ng_template_100_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n  ");
    i0.ɵɵelementContainer(1, 37);
    i0.ɵɵtext(2, "\n");
} if (rf & 2) {
    const context_r95 = ctx.$implicit;
    const ctx_r38 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r38.config.leftCustomSectionTemplate)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, context_r95));
} }
function AdaptTableToolbarComponent_ng_template_103_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n  ");
    i0.ɵɵelementContainer(1, 37);
    i0.ɵɵtext(2, "\n");
} if (rf & 2) {
    const context_r96 = ctx.$implicit;
    const ctx_r40 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r40.config.rightCustomSectionTemplate)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c7, context_r96));
} }
function AdaptTableToolbarComponent_ng_template_106_Template(rf, ctx) { if (rf & 1) {
    const _r100 = i0.ɵɵgetCurrentView();
    i0.ɵɵtext(0, "\n  ");
    i0.ɵɵelementStart(1, "div", 68);
    i0.ɵɵtext(2, "\n\n    ");
    i0.ɵɵelementStart(3, "adapt-rx-search", 69, 70);
    i0.ɵɵlistener("ngModelChange", function AdaptTableToolbarComponent_ng_template_106_Template_adapt_rx_search_ngModelChange_3_listener($event) { i0.ɵɵrestoreView(_r100); const ctx_r99 = i0.ɵɵnextContext(); return ctx_r99.searchModel = $event; })("ngModelChange", function AdaptTableToolbarComponent_ng_template_106_Template_adapt_rx_search_ngModelChange_3_listener($event) { i0.ɵɵrestoreView(_r100); const ctx_r101 = i0.ɵɵnextContext(); return ctx_r101.table.setQuickFilter($event); });
    i0.ɵɵelementEnd();
    i0.ɵɵtext(5, "\n  ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(6, "\n");
} if (rf & 2) {
    const ctx_r42 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵclassProp("adapt-table-search_bordered", ctx_r42.table.bordered);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("ngModel", ctx_r42.searchModel)("searchButton", ctx_r42.config.quickFilterTriggerable)("size", ctx_r42.table.bordered ? "default" : "sm")("placeholder", ctx_r42.texts.searchPlaceholder)("label", ctx_r42.texts.searchLabel);
} }
function AdaptTableToolbarComponent_ng_template_109_span_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 72);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r104 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r104.texts.visibleColumnsMenuLabel);
} }
function AdaptTableToolbarComponent_ng_template_109_ng_template_9_ng_template_5_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r112 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 76, 58);
    i0.ɵɵlistener("keydown", function AdaptTableToolbarComponent_ng_template_109_ng_template_9_ng_template_5_div_1_Template_div_keydown_0_listener($event) { i0.ɵɵrestoreView(_r112); i0.ɵɵnextContext(3); const _r103 = i0.ɵɵreference(2); const ctx_r111 = i0.ɵɵnextContext(); return ctx_r111.closeMenuOnKeydown($event, _r103); });
    i0.ɵɵtext(2, "\n            ");
    i0.ɵɵelementStart(3, "div");
    i0.ɵɵtext(4, "\n              ");
    i0.ɵɵelementStart(5, "adapt-rx-checkbox", 77);
    i0.ɵɵlistener("ngModelChange", function AdaptTableToolbarComponent_ng_template_109_ng_template_9_ng_template_5_div_1_Template_adapt_rx_checkbox_ngModelChange_5_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r112); const col_r109 = restoredCtx.$implicit; const ctx_r113 = i0.ɵɵnextContext(4); return ctx_r113.changeColumnVisibility($event, col_r109); });
    i0.ɵɵtext(6, "\n              ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(7, "\n            ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(8, "\n          ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r109 = ctx.$implicit;
    const _r110 = i0.ɵɵreference(1);
    const ctx_r108 = i0.ɵɵnextContext(4);
    i0.ɵɵclassProp("ui-state-disabled", ctx_r108.isLastVisibleColumn(col_r109))("text-active", ctx_r108.isActiveDescendant(_r110) && !ctx_r108.isLastVisibleColumn(col_r109));
    i0.ɵɵproperty("label", col_r109.header);
    i0.ɵɵadvance(5);
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("label", col_r109.header)("disabled", ctx_r108.isLastVisibleColumn(col_r109))("ngModel", ctx_r108.table.isColumnVisible(col_r109));
} }
function AdaptTableToolbarComponent_ng_template_109_ng_template_9_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n          ");
    i0.ɵɵtemplate(1, AdaptTableToolbarComponent_ng_template_109_ng_template_9_ng_template_5_div_1_Template, 9, 9, "div", 75);
    i0.ɵɵpipe(2, "sortBy");
    i0.ɵɵtext(3, "\n        ");
} if (rf & 2) {
    const ctx_r107 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngForOf", i0.ɵɵpipeBind2(2, 2, ctx_r107.table.columns, ctx_r107.visibleColumnsFirst))("ngForTrackBy", ctx_r107.table.trackByForColumns);
} }
function AdaptTableToolbarComponent_ng_template_109_ng_template_9_Template(rf, ctx) { if (rf & 1) {
    const _r115 = i0.ɵɵgetCurrentView();
    i0.ɵɵtext(0, "\n      ");
    i0.ɵɵelementStart(1, "div", 73);
    i0.ɵɵlistener("keydown", function AdaptTableToolbarComponent_ng_template_109_ng_template_9_Template_div_keydown_1_listener($event) { i0.ɵɵrestoreView(_r115); i0.ɵɵnextContext(); const _r103 = i0.ɵɵreference(2); const ctx_r114 = i0.ɵɵnextContext(); return ctx_r114.handleDropdownMenuKeydown($event, ctx_r114.TOOLBAR_ITEMS_BY_PRIORITY.VISIBLE_COLUMNS, _r103); });
    i0.ɵɵtext(2, "\n        ");
    i0.ɵɵelementContainer(3, 37);
    i0.ɵɵtext(4, "\n\n        ");
    i0.ɵɵtemplate(5, AdaptTableToolbarComponent_ng_template_109_ng_template_9_ng_template_5_Template, 4, 5, "ng-template", null, 74, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵtext(7, "\n      ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(8, "\n    ");
} if (rf & 2) {
    const _r106 = i0.ɵɵreference(6);
    const context_r102 = i0.ɵɵnextContext().$implicit;
    const ctx_r105 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵattribute("aria-activedescendant", ctx_r105.isActiveDescendant(context_r102.id));
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r105.config.visibleColumnsMenuTemplate || _r106)("ngTemplateOutletContext", i0.ɵɵpureFunction1(3, _c7, context_r102));
} }
const _c12 = function () { return ["bottom-right", "auto"]; };
function AdaptTableToolbarComponent_ng_template_109_Template(rf, ctx) { if (rf & 1) {
    const _r118 = i0.ɵɵgetCurrentView();
    i0.ɵɵtext(0, "\n  ");
    i0.ɵɵelementStart(1, "div", 46, 47);
    i0.ɵɵlistener("popupAnimationDone", function AdaptTableToolbarComponent_ng_template_109_Template_div_popupAnimationDone_1_listener() { i0.ɵɵrestoreView(_r118); const _r103 = i0.ɵɵreference(2); const ctx_r117 = i0.ɵɵnextContext(); return ctx_r117.popupAnimationDone(_r103, ctx_r117.TOOLBAR_ITEMS_BY_PRIORITY.VISIBLE_COLUMNS); });
    i0.ɵɵtext(3, "\n    ");
    i0.ɵɵelementStart(4, "button", 48);
    i0.ɵɵlistener("keydown", function AdaptTableToolbarComponent_ng_template_109_Template_button_keydown_4_listener($event) { i0.ɵɵrestoreView(_r118); const _r103 = i0.ɵɵreference(2); const ctx_r119 = i0.ɵɵnextContext(); return ctx_r119.anchorKeydownHandler($event, _r103); })("click", function AdaptTableToolbarComponent_ng_template_109_Template_button_click_4_listener($event) { i0.ɵɵrestoreView(_r118); const _r103 = i0.ɵɵreference(2); return _r103.toggle($event); });
    i0.ɵɵtext(5, "\n      ");
    i0.ɵɵtemplate(6, AdaptTableToolbarComponent_ng_template_109_span_6_Template, 2, 1, "span", 71);
    i0.ɵɵtext(7, "\n    ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(8, "\n\n    ");
    i0.ɵɵtemplate(9, AdaptTableToolbarComponent_ng_template_109_ng_template_9_Template, 9, 5, "ng-template", 25);
    i0.ɵɵtext(10, "\n  ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(11, "\n");
} if (rf & 2) {
    const context_r102 = ctx.$implicit;
    const ctx_r44 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("autoClose", "outside")("placement", context_r102.hidden ? i0.ɵɵpureFunction0(8, _c10) : i0.ɵɵpureFunction0(9, _c12))("appendToBody", true)("restoreFocusAfterClose", ctx_r44.shouldRestoreFocus)("focusNextElementAfterClose", ctx_r44.shouldFocusNext);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngClass", ctx_r44.getClassForChangeVisibilityButton(context_r102.hidden));
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", context_r102.hidden || !context_r102.collapsed);
} }
function AdaptTableToolbarComponent_ng_template_113_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n  ");
    i0.ɵɵelementStart(1, "div", 78);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(3, "\n");
} if (rf & 2) {
    const context_r121 = ctx.$implicit;
    const ctx_r46 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngClass", !context_r121.hidden ? "p-start-3 p-end-1" : "");
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r46.getToolbarText());
} }
let nextUniqueId = 0;
export class AdaptTableToolbarComponent {
    constructor(table, focusMonitorService, resizeService, dir, _ngZone, _eventManager, _cdr) {
        this.table = table;
        this.focusMonitorService = focusMonitorService;
        this.resizeService = resizeService;
        this.dir = dir;
        this._ngZone = _ngZone;
        this._eventManager = _eventManager;
        this._cdr = _cdr;
        this.HIDDEN_ITEMS_BTN_WIDTH = 35;
        this.TOOLBAR_ITEMS_HIDE_TOLERANCE = 10;
        this.TOOLBAR_ITEMS_BY_PRIORITY = ToolbarItemsByPriority;
        this.defaultTexts = {};
        this.hasHiddenItems = false;
        this.searchFullSize = false;
        this.filterFocus = false;
        this.openHiddenItemsMenu = false;
        this.onlySelectedRowsShown = false;
        this.isRTL = false;
        this.firstRecalculationComplete = false;
        this.testID = `adapt-toolbar-${++nextUniqueId}`;
        this.searchModel = '';
        this.exportType = ExportType;
        this.config = {};
        this.toolbarItemsByHidePriority = [];
        this._destroyed$ = new ReplaySubject(1);
        this._shouldRestoreFocus = true;
        this._shouldFocusNext = true;
    }
    ngOnInit() {
        this.isRTL = this.dir.value === 'rtl';
        const tableService = this.table.getTableService();
        tableService.selectionSource$
            .pipe(takeUntil(this._destroyed$))
            .subscribe((selection) => {
            var _a;
            if (this.onlySelectedRowsShown) {
                if (this.table.getRowSelectionArray().length) {
                    this.updateSelectedRowsDisplaying(false);
                }
                else {
                    this.showAllRows(false);
                }
            }
            if ((_a = this.config.export) === null || _a === void 0 ? void 0 : _a.showExportForSelected) {
                this.showExportSelected = !!(selection === null || selection === void 0 ? void 0 : selection.length);
            }
        });
        this.table.onFilter.asObservable()
            .pipe(takeUntil(this._destroyed$))
            .subscribe(() => {
            if (this.onlySelectedRowsShown) {
                this.showAllRows(true);
            }
        });
        if (this.config.testID) {
            this.testID = this.config.testID + (++nextUniqueId);
        }
    }
    ngAfterViewInit() {
        this.toolbarItemsByHidePriority = this.getToolbarItemsByHidePriority();
        merge(...this.toolbarItemsByHidePriority.map((item) => item.itemAppearanceChange))
            .pipe(takeUntil(this._destroyed$), 
        // switchMap to take the last emitted value
        switchMap(() => this._ngZone.onStable.pipe(takeUntil(this._destroyed$), take(1))))
            .subscribe(() => {
            this.updateToolbarItems();
        });
        const toolbarUIChange$ = new Subject();
        this.resizeService
            .addResizeEventListener(this.toolbarContainerEl.nativeElement, toolbarUIChange$.next.bind(toolbarUIChange$));
        this.resizeService
            .addResizeEventListener(this.toolbarSectionsSeparatorEl.nativeElement, toolbarUIChange$.next.bind(toolbarUIChange$));
        toolbarUIChange$
            .pipe(throttleTime(100, asyncScheduler, { trailing: true }), map((element) => element.offsetWidth), distinctUntilChanged(), takeUntil(this._destroyed$))
            .subscribe(() => {
            this.updateToolbarItems();
            if (!this.firstRecalculationComplete) {
                this._ngZone.run(() => {
                    this.firstRecalculationComplete = true;
                    SafeCdr.markForCheck(this._cdr);
                });
            }
        });
    }
    ngOnDestroy() {
        this.resizeService.removeResizeEventListener(this.toolbarContainerEl.nativeElement);
        this.resizeService.removeResizeEventListener(this.toolbarSectionsSeparatorEl.nativeElement);
        this._destroyed$.next(true);
        this._destroyed$.complete();
    }
    updateToolbarItems() {
        // Because this code can be invoked outside NgZone, use ngZone.run to be sure that changeDetection fire.
        // https://github.com/angular/angular/blob/5452889aa61a9963f443302d93d8af6c4131aa10/packages/core/src/application_ref.ts#L403
        this._ngZone.run(() => {
            this.recalculateToolbarItemsVisibility();
        });
    }
    /**
     * This method returns not the value of the search model but the value of the search input itself
     * The difference is in case when the model wasn't applied("quickFilterTriggerable"=true and button was not clicked)
     * and you need to take the value of the search and use it somewhere
     * https://github.bmc.com/bmc-ux/adapt-angular/issues/4504
     */
    getQuickFilterInputValue() {
        var _a, _b, _c;
        let value = null;
        if (this.filterInput) {
            value = this.filterInput.nativeElement.value;
        }
        else if (this.adaptRxSearchComponent) {
            value = (_c = (_b = (_a = this.adaptRxSearchComponent) === null || _a === void 0 ? void 0 : _a.inputRef) === null || _b === void 0 ? void 0 : _b.nativeElement) === null || _c === void 0 ? void 0 : _c.value;
        }
        return value;
    }
    setQuickFilterValue(value) {
        this.searchModel = value;
        this.table.setQuickFilter(value);
    }
    changeColumnVisibility(event, column) {
        column.hidden = !event;
        this.table.columnsVisibilityChange.emit([{ column, isHidden: !event }]);
    }
    isLastVisibleColumn(currentColumn) {
        const visibleColumns = this.table.getVisibleColumns();
        return visibleColumns.length === 1 && visibleColumns[0].field === currentColumn.field;
    }
    visibleColumnsFirst(a, b) {
        return toNumber(a.hidden) - toNumber(b.hidden);
    }
    getToolbarText() {
        const table = this.table;
        if (this.getCurrentRowsCount() === 0) {
            return this.texts.noRecordsText;
        }
        if (table.paginator) {
            if (table.totalRecords) {
                return this.getFromToOfText();
            }
            else {
                return this.getFromToText();
            }
        }
        else {
            if (table.enableInfiniteScrolling) {
                if (table.totalRecords && this.getCurrentRowsCount() < table.totalRecords) {
                    return this.getOutOfRowsShownText();
                }
                else {
                    return this.getCurrentRowsCountText();
                }
            }
            else {
                if (table.totalRecords) {
                    return this.getTotalCountText();
                }
                else {
                    return this.getFromToText();
                }
            }
        }
    }
    getFromToOfText() {
        return this.texts.fromToOfTextTemplate
            .replace('{fromRecords}', this.getFromRecordsCount().toString())
            .replace('{toRecords}', this.getToRecordsCountOrZero().toString())
            .replace('{totalRecords}', this.getTotalRecordsOrZero().toString());
    }
    getFromToText() {
        return this.texts.fromToTextTemplate
            .replace('{fromRecords}', this.getFromRecordsCount().toString())
            .replace('{toRecords}', this.getToRecordsCountOrZero().toString());
    }
    getOutOfRowsShownText() {
        return this.texts.outOfShownTextTemplate
            .replace('{currentRecordsCount}', this.getCurrentRowsCount().toString())
            .replace('{totalRecords}', this.getTotalRecordsOrZero().toString());
    }
    getTotalCountText() {
        const txt = this.getTotalRecords() === 1 ? this.texts.totalCountTextTemplate : this.texts.totalCountTextTemplatePlural;
        return txt.replace('{totalRecords}', this.getTotalRecordsOrZero().toString());
    }
    getCurrentRowsCountText() {
        const txt = this.getTotalRecords() === 1 ? this.texts.recordsCountShownTextTemplate : this.texts.recordsCountShownTextTemplatePlural;
        return txt.replace('{currentRecordsCount}', this.getCurrentRowsCount().toString());
    }
    checkFullSizeSearchMode(event) {
        if (this.toolbarContainerEl.nativeElement.offsetWidth <= 400) {
            this.searchFullSize = this.filterFocus || (event && event.target.classList.contains('adapt-table-search_close-btn'));
        }
        else {
            this.searchFullSize = false;
        }
    }
    getFromRecordsCount() {
        return this.table.first + 1;
    }
    getCurrentRowsCount() {
        const dt = this.table;
        return (dt.filteredValue ? dt.filteredValue : dt.value || []).length;
    }
    getToRecordsCount() {
        const dt = this.table;
        const to = Number(dt.rows) + dt.first;
        const total = dt.totalRecords == null ? dt.value.length : dt.totalRecords;
        return to > total ? total : to;
    }
    getToRecordsCountOrZero() {
        return this.getToRecordsCount() || 0;
    }
    showAllSelectedRows() {
        this.onlySelectedRowsShown = true;
        this.preservedFilteredValue = this.table.filteredValue;
        this.preservedTotalRecords = this.table.totalRecords;
        this.preservedFirst = this.table.first;
        this.updateSelectedRowsDisplaying(true);
    }
    updateSelectedRowsDisplaying(goToFirstPage) {
        const selectedRows = this.table.getRowSelectionArray();
        if (goToFirstPage) {
            this.table.first = 0;
        }
        if (this.table.paginator) {
            this.table.totalRecords = selectedRows.length;
            this.table.getTableService().onTotalRecordsChange(selectedRows.length);
        }
        this.table.filteredValue = selectedRows;
        this.table.getTableService().onValueChange(selectedRows);
    }
    showAllRows(dueToFiltersChange = false) {
        this.onlySelectedRowsShown = false;
        if (dueToFiltersChange) {
            if (this.table.lazy) {
                this.table.filteredValue = null;
                this.table.totalRecords = this.preservedTotalRecords;
                this.table.getTableService().onTotalRecordsChange(this.preservedTotalRecords);
            }
        }
        else {
            this.table.filteredValue = this.preservedFilteredValue;
            this.table.totalRecords = this.preservedTotalRecords;
            this.table.getTableService().onTotalRecordsChange(this.preservedTotalRecords);
            this.table.first = this.preservedFirst;
            this.table.firstChange.emit(this.preservedFirst);
        }
        this.table.getTableService().onValueChange(this.table.value);
        this.preservedFilteredValue = null;
        this.preservedTotalRecords = null;
        this.preservedFirst = null;
    }
    showSelectionLimitText(from) {
        return this.isRTL
            ? `${this.texts.selected} ${this.table.selectionLimit} / ${from}`
            : `${from} / ${this.table.selectionLimit} ${this.texts.selected}`;
    }
    getClassForChangeVisibilityButton(isHidden) {
        const isAllColumnsVisible = this.table.columns.length === this.table.getVisibleColumns().length;
        return (isHidden ? 'list-group-item list-group-item-action caret-right' : 'btn btn-link d-icon-right-triangle_down')
            + (isAllColumnsVisible ? ' d-icon-eye' : ' d-icon-eye_closed');
    }
    refreshButtonClick(event) {
        this.table.rowDataRefresh.emit(event);
        this.table.onTableRefresh();
    }
    popupAnimationDone(dropdown, toolbarItemType) {
        this.table.toolbarPopupAnimationDone.emit({ dropdown, focusMonitorService: this.focusMonitorService });
        if (dropdown.isOpen()) {
            this.initFocusMonitor(dropdown, toolbarItemType);
        }
    }
    anchorKeydownHandler(event, dropdown) {
        if (getEventKeyCode(event) === DOWN_ARROW && !dropdown.isOpen()) {
            event.preventDefault();
            dropdown.open(event);
        }
    }
    handleDropdownMenuKeydown(event, toolbarItemType, dropdown) {
        this.connectKeydownWithFocusMonitor(toolbarItemType, event);
        this.closeMenuOnKeydown(event, dropdown);
    }
    closeMenuOnKeydown(event, dropdown) {
        if (getEventKeyCode(event) === TAB) {
            event.preventDefault();
            dropdown.close();
        }
    }
    set shouldRestoreFocus(value) {
        this._shouldRestoreFocus = value;
    }
    get shouldRestoreFocus() {
        return this._shouldRestoreFocus;
    }
    set shouldFocusNext(value) {
        this._shouldFocusNext = value;
    }
    get shouldFocusNext() {
        return this._shouldFocusNext;
    }
    selectOption(optionToSelect) {
        if (optionToSelect.disabled) {
            return;
        }
        this.focusMonitorService.focusOnElement(this.focusMonitorService.keyManager.activeItemIndex);
    }
    isActiveDescendant(keyManagerItem) {
        return keyManagerItem === this.activeDropdownItem;
    }
    exportAs(event) {
        this.table.export.emit(event);
    }
    changeVisibility() {
        const colIndexInTable = this.table.columns.findIndex(col => col.header === this.activeDropdownItem.getLabel());
        const col = this.table.columns[colIndexInTable];
        if (!this.isLastVisibleColumn(col)) {
            col.hidden = !col.hidden;
        }
    }
    getToolbarItemsByHidePriority() {
        return this.toolbarContentItems
            .toArray()
            .sort((a, b) => a.adaptToolbarItem - b.adaptToolbarItem);
    }
    recalculateToolbarItemsVisibility(shouldUpdateItemsWidth = true) {
        this.checkFullSizeSearchMode();
        if (shouldUpdateItemsWidth) {
            this.toolbarItemsByHidePriority.forEach((item) => {
                if (!(this.openHiddenItemsMenu && item.hideToPopup)) {
                    item.recalculateWidth();
                }
            });
        }
        const itemsContainerWidth = this.toolbarContainerEl.nativeElement.offsetWidth - this.HIDDEN_ITEMS_BTN_WIDTH;
        let hasHiddenItems = false;
        let itemsWidth = this.TOOLBAR_ITEMS_HIDE_TOLERANCE;
        const fixedItems = this.toolbarItemsByHidePriority.filter((toolbarItem) => toolbarItem.fixOnToolbar);
        if (fixedItems.length) {
            fixedItems.forEach((fixedItem) => {
                itemsWidth += fixedItem.width;
            });
        }
        // Apply collapsed width
        this.toolbarItemsByHidePriority.forEach((item) => {
            if (item.removeFromToolbar) {
                item.hideToPopup = true;
            }
            else {
                if (!item.fixOnToolbar) {
                    const nextItemsWidth = itemsWidth + item.collapsedWidth;
                    if (nextItemsWidth > itemsContainerWidth) {
                        hasHiddenItems = true;
                        item.hideToPopup = true;
                    }
                    else {
                        item.hideToPopup = false;
                    }
                    itemsWidth = nextItemsWidth;
                }
            }
        });
        // Apply full width
        if (!hasHiddenItems) {
            this.toolbarItemsByHidePriority
                .slice()
                .reverse()
                .forEach((item) => {
                if (!item.fixOnToolbar) {
                    if (!item.hideToPopup) {
                        const nextItemsWidth = itemsWidth + (item.width - item.collapsedWidth);
                        item.collapse = nextItemsWidth > itemsContainerWidth;
                        itemsWidth = nextItemsWidth;
                    }
                }
            });
        }
        this.hasHiddenItems = hasHiddenItems;
        SafeCdr.markForCheck(this._cdr);
    }
    getTotalRecords() {
        return this.table.totalRecords;
    }
    getTotalRecordsOrZero() {
        return this.getTotalRecords() || 0;
    }
    initFocusMonitor(dropdown, toolbarItemType) {
        // Do not initialize focusMonitorService in case user want to use custom template
        if (toolbarItemType === ToolbarItemsByPriority.VISIBLE_COLUMNS && this.config.visibleColumnsMenuTemplate) {
            return;
        }
        this.focusMonitorService.init(this.toolbarDropdownItems);
        this.focusMonitorService.keyManager.withWrap(false);
        if (dropdown.eventInvokedFrom === 'keyboard') {
            this.focusMonitorService.focusOnFirstElement();
        }
        this.activeDropdownItem = this.focusMonitorService.keyManager.activeItem;
    }
    connectKeydownWithFocusMonitor(toolbarItemType, event) {
        // Do not initialize focusMonitorService in case user want to use custom template
        if (toolbarItemType === ToolbarItemsByPriority.VISIBLE_COLUMNS && this.config.visibleColumnsMenuTemplate) {
            return;
        }
        if (getEventKeyCode(event) === SPACE || getEventKeyCode(event) === ENTER) {
            if (toolbarItemType === ToolbarItemsByPriority.VISIBLE_COLUMNS) {
                event.preventDefault();
                this.changeVisibility();
            }
            this.selectOption(this.focusMonitorService.keyManager.activeItem);
            return;
        }
        this.focusMonitorService.onKeyDown(event);
        this.activeDropdownItem = this.focusMonitorService.keyManager.activeItem;
    }
}
AdaptTableToolbarComponent.ɵfac = function AdaptTableToolbarComponent_Factory(t) { return new (t || AdaptTableToolbarComponent)(i0.ɵɵdirectiveInject(i1.AdaptTableComponent), i0.ɵɵdirectiveInject(i2.AdaptFocusMonitorService), i0.ɵɵdirectiveInject(i2.ResizeService), i0.ɵɵdirectiveInject(i3.Directionality), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i4.EventManager), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
AdaptTableToolbarComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptTableToolbarComponent, selectors: [["adapt-table-toolbar"]], viewQuery: function AdaptTableToolbarComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 5);
        i0.ɵɵviewQuery(_c1, 5);
        i0.ɵɵviewQuery(_c2, 5);
        i0.ɵɵviewQuery(_c3, 5);
        i0.ɵɵviewQuery(_c4, 5);
        i0.ɵɵviewQuery(_c5, 5);
        i0.ɵɵviewQuery(AdaptTableToolbarItemDirective, 5);
        i0.ɵɵviewQuery(_c6, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filterInput = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.adaptRxSearchComponent = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toolbarContainerEl = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toolbarSectionsSeparatorEl = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toolbarContentSeparatorEl = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toolbarControlsEl = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toolbarContentItems = _t);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toolbarDropdownItems = _t);
    } }, inputs: { config: "config", texts: "texts" }, features: [i0.ɵɵProvidersFeature([AdaptFocusMonitorService])], decls: 116, vars: 65, consts: [[1, "adapt-table-toolbar"], ["toolbarContainerEl", ""], [1, "adapt-table-toolbar-items"], [1, "adapt-table-toolbar-item", 3, "adaptToolbarItem", "removeFromToolbar"], ["refreshSection", "adaptToolbarItem"], [3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngIf"], ["counterSection", "adaptToolbarItem"], ["class", "adapt-table-toolbar-item", 3, "adaptToolbarItem", 4, "ngIf"], ["filterSection", "adaptToolbarItem"], ["filterResultsSection", "adaptToolbarItem"], [1, "adapt-table-toolbar-item", 3, "adaptToolbarItem", "fixOnToolbar", "removeFromToolbar"], ["leftCustomSection", "adaptToolbarItem"], [1, "flex-grow-1", "flex-shrink-1"], ["toolbarSectionsSeparatorEl", ""], ["rightCustomSection", "adaptToolbarItem"], ["exportToSomeFormat", "adaptToolbarItem"], [1, "adapt-table-toolbar-item", "adapt-table-search-toolbar-container", "justify-content-end", 3, "adaptToolbarItem", "fixOnToolbar", "removeFromToolbar"], ["searchSection", "adaptToolbarItem"], ["visibleColumnsMenuSection", "adaptToolbarItem"], [1, "adapt-table-toolbar-hidden-items-dropdown", "dropdown", "show"], ["toolbarControlsEl", ""], ["adaptDropdown", "", 1, "h-100", 3, "adaptRadarDisableEventSending", "autoClose", "appendToBody", "restoreFocusAfterClose", "focusNextElementAfterClose"], ["hiddenItemsDD", "adaptDropdown"], ["type", "button", "adaptDropdownAnchor", "", 1, "btn", "btn-link", "adapt-table-toolbar-hidden-items-dropdown-btn", 3, "tabIndex", "keydown", "click"], ["class", "d-icon-ellipsis", 4, "ngIf"], ["adaptDropdownMenuTemplate", ""], ["exportToSomeFormatTemplate", ""], ["refreshTemplate", ""], ["counterTemplate", ""], ["selectionLimitTemplate", ""], ["filterTemplate", ""], ["filterResultsTemplate", ""], ["leftCustomSectionTemplate", ""], ["rightCustomSectionTemplate", ""], ["searchTemplate", ""], ["visibleColumnsTemplate", ""], ["counterDefaultTemplate", ""], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "adapt-table-toolbar-item", 3, "adaptToolbarItem"], ["limitSection", "adaptToolbarItem"], [1, "d-icon-ellipsis"], ["class", "dropdown-menu list-group p-0", 4, "ngIf"], [1, "dropdown-menu", "list-group", "p-0"], ["class", "list-group-item p-2", 4, "ngIf"], [4, "ngIf"], [1, "list-group-item", "p-2"], ["adaptDropdown", "", 3, "adaptRadarDisableEventSending", "autoClose", "placement", "appendToBody", "restoreFocusAfterClose", "focusNextElementAfterClose", "popupAnimationDone"], ["ddVisibleCols", "adaptDropdown"], ["type", "button", "adaptDropdownAnchor", "", 3, "ngClass", "keydown", "click"], [1, "d-icon-file_arrow_up"], ["exportTypesTemplate", ""], ["tabindex", "0", 1, "dropdown-menu", 3, "keydown"], [1, "toolbar-export-section-wrapper"], [1, "toolbar-export-menu-header"], [1, "dropdown-divider"], [1, "toolbar-export-menu-items"], [4, "ngFor", "ngForOf"], ["type", "button", "adaptListKeyManagerItem", "", 1, "toolbar-export-menu-item", "dropdown-item", 3, "keydown", "click"], ["adaptListKeyManagerItem", "adaptListKeyManagerItem"], [3, "ngClass"], ["type", "button", 1, "btn", "btn-link", 3, "ngClass", "click"], ["xmlns", "http://www.w3.org/2000/svg", "viewBox", "0 0 20 20", "width", "20", "height", "20", "fill", "currentColor", 1, "infinite", "spin-360", "transition-out", "xtra-slow", "animated"], ["d", "M19.7,10l-3.3,3.9L13,10h2.5c0-3.1-2.5-5.6-5.6-5.6S4.4,6.9,4.4,10s2.5,5.6,5.6,5.6v1.7c-4,0-7.2-3.2-7.2-7.2\n\t                 S6,2.8,10,2.8S17.2,6,17.2,10H19.7z"], [1, "d-flex"], ["class", "adapt-table-toolbar__selection-counter", 4, "ngIf"], ["type", "button", "class", "btn btn-link", 3, "click", 4, "ngIf"], [1, "adapt-table-toolbar__selection-counter"], ["type", "button", 1, "btn", "btn-link", 3, "click"], [1, "adapt-table-search"], [3, "adaptRadarDisableEventSending", "ngModel", "searchButton", "size", "placeholder", "label", "ngModelChange"], ["adaptRxSearchComponent", ""], ["class", "px-1", 4, "ngIf"], [1, "px-1"], ["tabindex", "0", 1, "dropdown-menu", "visible-columns-dropdown", 3, "keydown"], ["visibleColumnsDefaultTemplate", ""], ["class", "dropdown-item  adapt-table-toolbar-dropdown-item", "adaptListKeyManagerItem", "", "tabindex", "0", 3, "label", "ui-state-disabled", "text-active", "keydown", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["adaptListKeyManagerItem", "", "tabindex", "0", 1, "dropdown-item", "adapt-table-toolbar-dropdown-item", 3, "label", "keydown"], [1, "adapt-table-toolbar__column-visibility-control", 3, "adaptRadarDisableEventSending", "label", "disabled", "ngModel", "ngModelChange"], ["role", "status", 3, "ngClass"]], template: function AdaptTableToolbarComponent_Template(rf, ctx) { if (rf & 1) {
        const _r122 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 0, 1);
        i0.ɵɵtext(2, "\n  ");
        i0.ɵɵelementStart(3, "div", 2);
        i0.ɵɵtext(4, "\n    ");
        i0.ɵɵelementStart(5, "div", 3, 4);
        i0.ɵɵtext(7, "\n      ");
        i0.ɵɵtemplate(8, AdaptTableToolbarComponent_ng_container_8_Template, 1, 4, "ng-container", 5);
        i0.ɵɵtext(9, "\n    ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(10, "\n\n    ");
        i0.ɵɵelementStart(11, "div", 3, 6);
        i0.ɵɵtext(13, "\n      ");
        i0.ɵɵtemplate(14, AdaptTableToolbarComponent_ng_container_14_Template, 1, 4, "ng-container", 5);
        i0.ɵɵtext(15, "\n    ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(16, "\n\n    ");
        i0.ɵɵtemplate(17, AdaptTableToolbarComponent_div_17_Template, 5, 3, "div", 7);
        i0.ɵɵtext(18, "\n\n    ");
        i0.ɵɵelementStart(19, "div", 3, 8);
        i0.ɵɵtext(21, "\n      ");
        i0.ɵɵtemplate(22, AdaptTableToolbarComponent_ng_container_22_Template, 1, 4, "ng-container", 5);
        i0.ɵɵtext(23, "\n    ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(24, "\n\n    ");
        i0.ɵɵelementStart(25, "div", 3, 9);
        i0.ɵɵtext(27, "\n      ");
        i0.ɵɵtemplate(28, AdaptTableToolbarComponent_ng_container_28_Template, 1, 4, "ng-container", 5);
        i0.ɵɵtext(29, "\n    ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(30, "\n\n    ");
        i0.ɵɵelementStart(31, "div", 10, 11);
        i0.ɵɵtext(33, "\n      ");
        i0.ɵɵtemplate(34, AdaptTableToolbarComponent_ng_container_34_Template, 1, 4, "ng-container", 5);
        i0.ɵɵtext(35, "\n    ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(36, "\n\n    ");
        i0.ɵɵelement(37, "div", 12, 13);
        i0.ɵɵtext(39, "\n\n    ");
        i0.ɵɵelementStart(40, "div", 10, 14);
        i0.ɵɵtext(42, "\n      ");
        i0.ɵɵtemplate(43, AdaptTableToolbarComponent_ng_container_43_Template, 1, 4, "ng-container", 5);
        i0.ɵɵtext(44, "\n    ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(45, "\n\n    ");
        i0.ɵɵelementStart(46, "div", 10, 15);
        i0.ɵɵtext(48, "\n      ");
        i0.ɵɵtemplate(49, AdaptTableToolbarComponent_ng_container_49_Template, 1, 4, "ng-container", 5);
        i0.ɵɵtext(50, "\n    ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(51, "\n\n    ");
        i0.ɵɵelementStart(52, "div", 16, 17);
        i0.ɵɵtext(54, "\n      ");
        i0.ɵɵtemplate(55, AdaptTableToolbarComponent_ng_container_55_Template, 1, 4, "ng-container", 5);
        i0.ɵɵtext(56, "\n    ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(57, "\n\n    ");
        i0.ɵɵelementStart(58, "div", 3, 18);
        i0.ɵɵtext(60, "\n      ");
        i0.ɵɵtemplate(61, AdaptTableToolbarComponent_ng_container_61_Template, 1, 4, "ng-container", 5);
        i0.ɵɵtext(62, "\n    ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(63, "\n\n  ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(64, "\n\n  ");
        i0.ɵɵelementStart(65, "div", 19, 20);
        i0.ɵɵtext(67, "\n    ");
        i0.ɵɵelementStart(68, "div", 21, 22);
        i0.ɵɵtext(70, "\n      ");
        i0.ɵɵelementStart(71, "button", 23);
        i0.ɵɵlistener("keydown", function AdaptTableToolbarComponent_Template_button_keydown_71_listener($event) { i0.ɵɵrestoreView(_r122); const _r22 = i0.ɵɵreference(69); return ctx.anchorKeydownHandler($event, _r22); })("click", function AdaptTableToolbarComponent_Template_button_click_71_listener($event) { i0.ɵɵrestoreView(_r122); const _r22 = i0.ɵɵreference(69); return _r22.toggle($event); });
        i0.ɵɵtext(72, "\n        ");
        i0.ɵɵtemplate(73, AdaptTableToolbarComponent_span_73_Template, 1, 0, "span", 24);
        i0.ɵɵtext(74, "\n      ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(75, "\n      ");
        i0.ɵɵtemplate(76, AdaptTableToolbarComponent_ng_template_76_Template, 3, 1, "ng-template", 25);
        i0.ɵɵtext(77, "\n    ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(78, "\n  ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(79, "\n");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(80, "\n\n");
        i0.ɵɵtext(81, "\n\n");
        i0.ɵɵtemplate(82, AdaptTableToolbarComponent_ng_template_82_Template, 17, 12, "ng-template", null, 26, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtext(84, "\n\n");
        i0.ɵɵtemplate(85, AdaptTableToolbarComponent_ng_template_85_Template, 15, 6, "ng-template", null, 27, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtext(87, "\n\n");
        i0.ɵɵtemplate(88, AdaptTableToolbarComponent_ng_template_88_Template, 3, 4, "ng-template", null, 28, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtext(90, "\n\n");
        i0.ɵɵtemplate(91, AdaptTableToolbarComponent_ng_template_91_Template, 10, 3, "ng-template", null, 29, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtext(93, "\n\n");
        i0.ɵɵtemplate(94, AdaptTableToolbarComponent_ng_template_94_Template, 3, 4, "ng-template", null, 30, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtext(96, "\n\n");
        i0.ɵɵtemplate(97, AdaptTableToolbarComponent_ng_template_97_Template, 3, 4, "ng-template", null, 31, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtext(99, "\n\n");
        i0.ɵɵtemplate(100, AdaptTableToolbarComponent_ng_template_100_Template, 3, 4, "ng-template", null, 32, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtext(102, "\n\n");
        i0.ɵɵtemplate(103, AdaptTableToolbarComponent_ng_template_103_Template, 3, 4, "ng-template", null, 33, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtext(105, "\n\n");
        i0.ɵɵtemplate(106, AdaptTableToolbarComponent_ng_template_106_Template, 7, 8, "ng-template", null, 34, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtext(108, "\n\n");
        i0.ɵɵtemplate(109, AdaptTableToolbarComponent_ng_template_109_Template, 12, 10, "ng-template", null, 35, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtext(111, "\n\n");
        i0.ɵɵtext(112, "\n\n");
        i0.ɵɵtemplate(113, AdaptTableToolbarComponent_ng_template_113_Template, 4, 2, "ng-template", null, 36, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtext(115, "\n");
    } if (rf & 2) {
        const _r1 = i0.ɵɵreference(6);
        const _r3 = i0.ɵɵreference(12);
        const _r6 = i0.ɵɵreference(20);
        const _r8 = i0.ɵɵreference(26);
        const _r10 = i0.ɵɵreference(32);
        const _r13 = i0.ɵɵreference(41);
        const _r15 = i0.ɵɵreference(47);
        const _r17 = i0.ɵɵreference(53);
        const _r19 = i0.ɵɵreference(59);
        i0.ɵɵclassProp("adapt-table-toolbar_bordered", ctx.table.bordered)("adapt-table-toolbar_loading", !ctx.firstRecalculationComplete);
        i0.ɵɵadvance(5);
        i0.ɵɵproperty("adaptToolbarItem", ctx.TOOLBAR_ITEMS_BY_PRIORITY.REFRESH)("removeFromToolbar", !ctx.config.refreshButton);
        i0.ɵɵattribute("data-testid", ctx.testID + "_refresh");
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", !(_r1.hideToPopup || _r1.removeFromToolbar));
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("adaptToolbarItem", ctx.TOOLBAR_ITEMS_BY_PRIORITY.COUNTER)("removeFromToolbar", !ctx.config.counter);
        i0.ɵɵattribute("data-testid", ctx.testID + "_counter");
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", !(_r3.hideToPopup || _r3.removeFromToolbar));
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx.table.hasSelectionLimit && ctx.config.selectionLimit);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("adaptToolbarItem", ctx.TOOLBAR_ITEMS_BY_PRIORITY.FILTER)("removeFromToolbar", !ctx.config.filter);
        i0.ɵɵattribute("data-testid", ctx.testID + "_filter");
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", !(_r6.hideToPopup || _r6.removeFromToolbar));
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("adaptToolbarItem", ctx.TOOLBAR_ITEMS_BY_PRIORITY.FILTER_RESULTS)("removeFromToolbar", !ctx.config.filterResults);
        i0.ɵɵattribute("data-testid", ctx.testID + "_filter_results");
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", !(_r8.hideToPopup || _r8.removeFromToolbar));
        i0.ɵɵadvance(3);
        i0.ɵɵclassProp("flex-fill", ctx.config.leftCustomSectionFixed);
        i0.ɵɵproperty("adaptToolbarItem", ctx.TOOLBAR_ITEMS_BY_PRIORITY.LEFT_CUSTOM)("fixOnToolbar", ctx.config.leftCustomSectionFixed)("removeFromToolbar", !ctx.config.leftCustomSection);
        i0.ɵɵattribute("data-testid", ctx.testID + "_left_custom");
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", !(_r10.hideToPopup || _r10.removeFromToolbar));
        i0.ɵɵadvance(6);
        i0.ɵɵproperty("adaptToolbarItem", ctx.TOOLBAR_ITEMS_BY_PRIORITY.RIGHT_CUSTOM)("fixOnToolbar", ctx.config.rightCustomSectionFixed)("removeFromToolbar", !ctx.config.rightCustomSection);
        i0.ɵɵattribute("data-testid", ctx.testID + "_right_custom");
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", !(_r13.hideToPopup || _r13.removeFromToolbar));
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("adaptToolbarItem", ctx.TOOLBAR_ITEMS_BY_PRIORITY.EXPORT)("fixOnToolbar", ctx.config.export == null ? null : ctx.config.export.exportSectionFixed)("removeFromToolbar", !(ctx.config.export == null ? null : ctx.config.export.exportTypes == null ? null : ctx.config.export.exportTypes.length));
        i0.ɵɵattribute("data-testid", ctx.testID + "_export");
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", !(_r15.hideToPopup || _r15.removeFromToolbar));
        i0.ɵɵadvance(3);
        i0.ɵɵclassProp("flex-fill", ctx.searchFullSize);
        i0.ɵɵproperty("adaptToolbarItem", ctx.TOOLBAR_ITEMS_BY_PRIORITY.SEARCH)("fixOnToolbar", true)("removeFromToolbar", !ctx.config.quickFilter);
        i0.ɵɵattribute("data-testid", ctx.testID + "_search");
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", !(_r17.hideToPopup || _r17.removeFromToolbar));
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("adaptToolbarItem", ctx.TOOLBAR_ITEMS_BY_PRIORITY.VISIBLE_COLUMNS)("removeFromToolbar", !ctx.config.visibleColumnsMenu);
        i0.ɵɵattribute("data-testid", ctx.testID + "_visible_columns");
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", !(_r19.hideToPopup || _r19.removeFromToolbar));
        i0.ɵɵadvance(4);
        i0.ɵɵstyleProp("max-width", ctx.HIDDEN_ITEMS_BTN_WIDTH, "px");
        i0.ɵɵattribute("data-testid", ctx.testID + "_hidden_buttons");
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("adaptRadarDisableEventSending", true)("autoClose", "outside")("appendToBody", true)("restoreFocusAfterClose", ctx.shouldRestoreFocus)("focusNextElementAfterClose", ctx.shouldFocusNext);
        i0.ɵɵadvance(3);
        i0.ɵɵclassProp("p-0", !ctx.hasHiddenItems)("border-0", !ctx.hasHiddenItems)("px-2", ctx.hasHiddenItems);
        i0.ɵɵproperty("tabIndex", !ctx.hasHiddenItems ? -1 : 0);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.hasHiddenItems);
    } }, directives: [i5.AdaptTableToolbarItemDirective, i6.NgIf, i2.AdaptDropdownDirective, i2.AdaptDropdownAnchorDirective, i2.AdaptDropdownMenuTemplateDirective, i6.NgTemplateOutlet, i6.NgClass, i6.NgForOf, i2.AdaptListKeyManagerItemDirective, i2.AdaptRxSearchComponent, i7.NgControlStatus, i7.NgModel, i2.AdaptRxCheckboxComponent], pipes: [i8.SortByPipe], styles: [".adapt-table-toolbar[_ngcontent-%COMP%] {\n      z-index: 2;\n      overflow: hidden;\n    }\n\n    .adapt-table-toolbar-items[_ngcontent-%COMP%] {\n      flex: 1 1 auto;\n      display: flex;\n      overflow: hidden;\n      margin: 0 -3px;\n    }\n\n    .adapt-table-toolbar-hidden-items-dropdown[_ngcontent-%COMP%] {\n      flex: 0 0 auto;\n      text-align: center\n    }\n\n    .adapt-table-toolbar-hidden-items-dropdown-btn[_ngcontent-%COMP%] {\n      font-size: 16px;\n      padding: 0;\n      height: 100%;\n      width: 100%;\n    }\n\n    .adapt-table-toolbar-item[_ngcontent-%COMP%] {\n      overflow: hidden;\n      flex: 0 0 auto;\n      padding: 0 3px;\n    }\n\n    .adapt-table-toolbar-item_hidden[_ngcontent-%COMP%] {\n      position: absolute;\n      visibility: hidden;\n      opacity: 0;\n      z-index: -1;\n    }"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptTableToolbarComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-table-toolbar',
                templateUrl: './adapt-table-toolbar.html',
                providers: [AdaptFocusMonitorService],
                styles: [`
    .adapt-table-toolbar {
      z-index: 2;
      overflow: hidden;
    }

    .adapt-table-toolbar-items {
      flex: 1 1 auto;
      display: flex;
      overflow: hidden;
      margin: 0 -3px;
    }

    .adapt-table-toolbar-hidden-items-dropdown {
      flex: 0 0 auto;
      text-align: center
    }

    .adapt-table-toolbar-hidden-items-dropdown-btn {
      font-size: 16px;
      padding: 0;
      height: 100%;
      width: 100%;
    }

    .adapt-table-toolbar-item {
      overflow: hidden;
      flex: 0 0 auto;
      padding: 0 3px;
    }

    .adapt-table-toolbar-item_hidden {
      position: absolute;
      visibility: hidden;
      opacity: 0;
      z-index: -1;
    }
  `]
            }]
    }], function () { return [{ type: i1.AdaptTableComponent }, { type: i2.AdaptFocusMonitorService }, { type: i2.ResizeService }, { type: i3.Directionality }, { type: i0.NgZone }, { type: i4.EventManager }, { type: i0.ChangeDetectorRef }]; }, { config: [{
            type: Input
        }], texts: [{
            type: Input
        }], filterInput: [{
            type: ViewChild,
            args: ['filterInput']
        }], adaptRxSearchComponent: [{
            type: ViewChild,
            args: ['adaptRxSearchComponent']
        }], toolbarContainerEl: [{
            type: ViewChild,
            args: ['toolbarContainerEl']
        }], toolbarSectionsSeparatorEl: [{
            type: ViewChild,
            args: ['toolbarSectionsSeparatorEl']
        }], toolbarContentSeparatorEl: [{
            type: ViewChild,
            args: ['toolbarContentSeparatorEl']
        }], toolbarControlsEl: [{
            type: ViewChild,
            args: ['toolbarControlsEl']
        }], toolbarContentItems: [{
            type: ViewChildren,
            args: [AdaptTableToolbarItemDirective]
        }], toolbarDropdownItems: [{
            type: ViewChildren,
            args: ['adaptListKeyManagerItem']
        }] }); })();
//# sourceMappingURL=adapt-table-toolbar.component.js.map