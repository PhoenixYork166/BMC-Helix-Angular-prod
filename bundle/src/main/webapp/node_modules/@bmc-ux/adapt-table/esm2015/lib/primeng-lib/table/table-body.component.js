import { ChangeDetectorRef, Component, Input, TemplateRef, ViewChild } from '@angular/core';
import { ReplaySubject } from 'rxjs';
import { AdaptTableComponent } from '../../adapt-table.component';
import { CdkVirtualForOf } from '@angular/cdk/scrolling';
import { takeUntil } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../../adapt-table.component";
import * as i2 from "@angular/common";
import * as i3 from "@angular/cdk/scrolling";
const _c0 = ["pTableBody", ""];
function TableBody_ng_container_1_ng_container_2_ng_template_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function TableBody_ng_container_1_ng_container_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n          ");
    i0.ɵɵtemplate(1, TableBody_ng_container_1_ng_container_2_ng_template_2_ng_container_1_Template, 1, 0, "ng-container", 2);
    i0.ɵɵtext(2, "\n        ");
} if (rf & 2) {
    const renderRowData_r7 = ctx.$implicit;
    const rowIndex_r8 = ctx.index;
    const ctx_r6 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r6.pTableBodyTemplate)("ngTemplateOutletContext", ctx_r6.getContext(renderRowData_r7, rowIndex_r8, true));
} }
function TableBody_ng_container_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n        ");
    i0.ɵɵtemplate(2, TableBody_ng_container_1_ng_container_2_ng_template_2_Template, 3, 2, "ng-template", 1);
    i0.ɵɵtext(3, "\n      ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r4.dt.getPlainExpandedRenderingRows(ctx_r4.dt.getCurrentPageDisplayingRows()))("ngForTrackBy", ctx_r4.dt.trackByForRenderingRows);
} }
function TableBody_ng_container_1_ng_container_4_ng_template_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function TableBody_ng_container_1_ng_container_4_ng_template_2_ng_container_3_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function TableBody_ng_container_1_ng_container_4_ng_template_2_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n            ");
    i0.ɵɵtemplate(2, TableBody_ng_container_1_ng_container_4_ng_template_2_ng_container_3_ng_container_2_Template, 1, 0, "ng-container", 2);
    i0.ɵɵtext(3, "\n          ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r16 = i0.ɵɵnextContext();
    const renderRowData_r11 = ctx_r16.$implicit;
    const rowIndex_r12 = ctx_r16.index;
    const ctx_r14 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r14.dt.expandedRowTemplateRef)("ngTemplateOutletContext", ctx_r14.getContext(renderRowData_r11, rowIndex_r12));
} }
function TableBody_ng_container_1_ng_container_4_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n          ");
    i0.ɵɵtemplate(1, TableBody_ng_container_1_ng_container_4_ng_template_2_ng_container_1_Template, 1, 0, "ng-container", 2);
    i0.ɵɵtext(2, "\n          ");
    i0.ɵɵtemplate(3, TableBody_ng_container_1_ng_container_4_ng_template_2_ng_container_3_Template, 4, 2, "ng-container", 0);
    i0.ɵɵtext(4, "\n        ");
} if (rf & 2) {
    const renderRowData_r11 = ctx.$implicit;
    const rowIndex_r12 = ctx.index;
    const ctx_r10 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r10.pTableBodyTemplate)("ngTemplateOutletContext", ctx_r10.getContext(renderRowData_r11, rowIndex_r12, true, true));
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r10.dt.isRowExpanded(renderRowData_r11));
} }
function TableBody_ng_container_1_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n        ");
    i0.ɵɵtemplate(2, TableBody_ng_container_1_ng_container_4_ng_template_2_Template, 5, 3, "ng-template", 1);
    i0.ɵɵtext(3, "\n      ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r5 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r5.dt.getPlainExpandedRenderingRows(ctx_r5.dt.getCurrentPageDisplayingRows()))("ngForTrackBy", ctx_r5.dt.trackByForRenderingRows);
} }
function TableBody_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵtemplate(2, TableBody_ng_container_1_ng_container_2_Template, 4, 2, "ng-container", 0);
    i0.ɵɵtext(3, "\n      ");
    i0.ɵɵtemplate(4, TableBody_ng_container_1_ng_container_4_Template, 4, 2, "ng-container", 0);
    i0.ɵɵtext(5, "\n    ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", !ctx_r0.dt.expandedRowTemplateRef);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r0.dt.expandedRowTemplateRef);
} }
function TableBody_ng_container_3_ng_container_2_ng_template_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function TableBody_ng_container_3_ng_container_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n          ");
    i0.ɵɵtemplate(1, TableBody_ng_container_3_ng_container_2_ng_template_2_ng_container_1_Template, 1, 0, "ng-container", 2);
    i0.ɵɵtext(2, "\n        ");
} if (rf & 2) {
    const renderRowData_r20 = ctx.$implicit;
    const rowIndex_r21 = ctx.index;
    const ctx_r19 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r19.pTableBodyTemplate)("ngTemplateOutletContext", ctx_r19.getContext(renderRowData_r20, rowIndex_r21, true));
} }
function TableBody_ng_container_3_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n        ");
    i0.ɵɵtemplate(2, TableBody_ng_container_3_ng_container_2_ng_template_2_Template, 3, 2, "ng-template", 3);
    i0.ɵɵtext(3, "\n      ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r17 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("cdkVirtualForOf", ctx_r17.dt.getPlainExpandedRenderingRows(ctx_r17.dt.getCurrentPageDisplayingRows()))("cdkVirtualForTemplateCacheSize", 0)("cdkVirtualForTrackBy", ctx_r17.dt.trackByForRenderingRows);
} }
function TableBody_ng_container_3_ng_container_4_ng_template_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function TableBody_ng_container_3_ng_container_4_ng_template_2_ng_container_3_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function TableBody_ng_container_3_ng_container_4_ng_template_2_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n            ");
    i0.ɵɵtemplate(2, TableBody_ng_container_3_ng_container_4_ng_template_2_ng_container_3_ng_container_2_Template, 1, 0, "ng-container", 2);
    i0.ɵɵtext(3, "\n          ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r29 = i0.ɵɵnextContext();
    const renderRowData_r24 = ctx_r29.$implicit;
    const rowIndex_r25 = ctx_r29.index;
    const ctx_r27 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r27.dt.expandedRowTemplateRef)("ngTemplateOutletContext", ctx_r27.getContext(renderRowData_r24, rowIndex_r25));
} }
function TableBody_ng_container_3_ng_container_4_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n          ");
    i0.ɵɵtemplate(1, TableBody_ng_container_3_ng_container_4_ng_template_2_ng_container_1_Template, 1, 0, "ng-container", 2);
    i0.ɵɵtext(2, "\n          ");
    i0.ɵɵtemplate(3, TableBody_ng_container_3_ng_container_4_ng_template_2_ng_container_3_Template, 4, 2, "ng-container", 0);
    i0.ɵɵtext(4, "\n        ");
} if (rf & 2) {
    const renderRowData_r24 = ctx.$implicit;
    const rowIndex_r25 = ctx.index;
    const ctx_r23 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r23.pTableBodyTemplate)("ngTemplateOutletContext", ctx_r23.getContext(renderRowData_r24, rowIndex_r25, true, true));
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r23.dt.isRowExpanded(renderRowData_r24));
} }
function TableBody_ng_container_3_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n        ");
    i0.ɵɵtemplate(2, TableBody_ng_container_3_ng_container_4_ng_template_2_Template, 5, 3, "ng-template", 3);
    i0.ɵɵtext(3, "\n      ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r18 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("cdkVirtualForOf", ctx_r18.dt.getPlainExpandedRenderingRows(ctx_r18.dt.getCurrentPageDisplayingRows()))("cdkVirtualForTemplateCacheSize", 0)("cdkVirtualForTrackBy", ctx_r18.dt.trackByForRenderingRows);
} }
function TableBody_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵtemplate(2, TableBody_ng_container_3_ng_container_2_Template, 4, 3, "ng-container", 0);
    i0.ɵɵtext(3, "\n      ");
    i0.ɵɵtemplate(4, TableBody_ng_container_3_ng_container_4_Template, 4, 3, "ng-container", 0);
    i0.ɵɵtext(5, "\n    ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", !ctx_r1.dt.expandedRowTemplateRef);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r1.dt.expandedRowTemplateRef);
} }
function TableBody_ng_container_5_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
const _c1 = function (a0, a1) { return { $implicit: a0, frozen: a1 }; };
function TableBody_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵtemplate(2, TableBody_ng_container_5_ng_container_2_Template, 1, 0, "ng-container", 2);
    i0.ɵɵtext(3, "\n    ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r2.dt.loadingBodyTemplate)("ngTemplateOutletContext", i0.ɵɵpureFunction2(2, _c1, ctx_r2.pTableBody, ctx_r2.frozen));
} }
function TableBody_ng_container_7_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function TableBody_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵtemplate(2, TableBody_ng_container_7_ng_container_2_Template, 1, 0, "ng-container", 2);
    i0.ɵɵtext(3, "\n    ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r3.dt.emptyMessageTemplate)("ngTemplateOutletContext", i0.ɵɵpureFunction2(2, _c1, ctx_r3.pTableBody, ctx_r3.frozen));
} }
// eslint-disable-next-line @angular-eslint/component-class-suffix
export class TableBody {
    constructor(dt, cd) {
        this.dt = dt;
        this.cd = cd;
        this._destroyed$ = new ReplaySubject(1);
        this.subscription = this.dt.tableService.valueSource$.subscribe(() => {
            if (this.dt.virtualScroll) {
                this.cd.detectChanges();
            }
        });
    }
    ngAfterViewInit() {
        // Because of the height changes after group expanded the ExpressionChangedAfterItHasBeenCheckedError error is appeared
        // To avoid that issue re-attach virtual scroll
        if (this.dt.virtualScroll) {
            this.dt.groupExpansion
                .pipe(takeUntil(this._destroyed$))
                .subscribe(() => {
                this.dt.scrollableView.virtualScrollBody.detach();
                setTimeout(() => {
                    this.dt.scrollableView.virtualScrollBody.attach(this.cdkVirtualForOf);
                });
            });
        }
    }
    ngOnDestroy() {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
        this._destroyed$.next(true);
        this._destroyed$.complete();
    }
    getContext(renderRowData, rowIndex, isEditable = false, isExpandable = false) {
        const context = {
            $implicit: renderRowData,
            rowIndex: this.dt.paginator ? (this.dt.first + rowIndex) : rowIndex,
            columns: this.pTableBody
        };
        if (isEditable) {
            context.editing = (this.dt.editMode === 'row' && this.dt.isRowEditing(renderRowData));
        }
        if (isExpandable) {
            context.expanded = this.dt.isRowExpanded(renderRowData);
        }
        return context;
    }
}
TableBody.ɵfac = function TableBody_Factory(t) { return new (t || TableBody)(i0.ɵɵdirectiveInject(i1.AdaptTableComponent), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
TableBody.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TableBody, selectors: [["", "pTableBody", ""]], viewQuery: function TableBody_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(CdkVirtualForOf, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkVirtualForOf = _t.first);
    } }, inputs: { pTableBody: "pTableBody", pTableBodyTemplate: "pTableBodyTemplate", frozen: "frozen" }, attrs: _c0, decls: 9, vars: 4, consts: [[4, "ngIf"], ["ngFor", "", 3, "ngForOf", "ngForTrackBy"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], ["cdkVirtualFor", "", 3, "cdkVirtualForOf", "cdkVirtualForTemplateCacheSize", "cdkVirtualForTrackBy"]], template: function TableBody_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtext(0, "\n    ");
        i0.ɵɵtemplate(1, TableBody_ng_container_1_Template, 6, 2, "ng-container", 0);
        i0.ɵɵtext(2, "\n\n    ");
        i0.ɵɵtemplate(3, TableBody_ng_container_3_Template, 6, 2, "ng-container", 0);
        i0.ɵɵtext(4, "\n    ");
        i0.ɵɵtemplate(5, TableBody_ng_container_5_Template, 4, 5, "ng-container", 0);
        i0.ɵɵtext(6, "\n    ");
        i0.ɵɵtemplate(7, TableBody_ng_container_7_Template, 4, 5, "ng-container", 0);
        i0.ɵɵtext(8, "\n  ");
    } if (rf & 2) {
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx.dt.virtualScroll);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.dt.virtualScroll);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.dt.loading);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.dt.isEmpty() && !ctx.dt.loading);
    } }, directives: [i2.NgIf, i2.NgForOf, i2.NgTemplateOutlet, i3.CdkVirtualForOf], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TableBody, [{
        type: Component,
        args: [{
                selector: '[pTableBody]',
                template: `
    <ng-container *ngIf="!dt.virtualScroll">
      <ng-container *ngIf="!dt.expandedRowTemplateRef">
        <ng-template ngFor
                     let-renderRowData
                     let-rowIndex="index"
                     [ngForOf]="dt.getPlainExpandedRenderingRows(dt.getCurrentPageDisplayingRows())"
                     [ngForTrackBy]="dt.trackByForRenderingRows">
          <ng-container
            *ngTemplateOutlet="pTableBodyTemplate; context: getContext(renderRowData, rowIndex, true)"></ng-container>
        </ng-template>
      </ng-container>
      <ng-container *ngIf="dt.expandedRowTemplateRef">
        <ng-template ngFor
                     let-renderRowData
                     let-rowIndex="index"
                     [ngForOf]="dt.getPlainExpandedRenderingRows(dt.getCurrentPageDisplayingRows())"
                     [ngForTrackBy]="dt.trackByForRenderingRows">
          <ng-container
            *ngTemplateOutlet="pTableBodyTemplate; context: getContext(renderRowData, rowIndex, true, true)"></ng-container>
          <ng-container *ngIf="dt.isRowExpanded(renderRowData)">
            <ng-container
              *ngTemplateOutlet="dt.expandedRowTemplateRef; context: getContext(renderRowData, rowIndex)"></ng-container>
          </ng-container>
        </ng-template>
      </ng-container>
    </ng-container>

    <ng-container *ngIf="dt.virtualScroll">
      <ng-container *ngIf="!dt.expandedRowTemplateRef">
        <ng-template cdkVirtualFor
                     let-renderRowData
                     let-rowIndex="index"
                     [cdkVirtualForOf]="dt.getPlainExpandedRenderingRows(dt.getCurrentPageDisplayingRows())"
                     [cdkVirtualForTemplateCacheSize]="0"
                     [cdkVirtualForTrackBy]="dt.trackByForRenderingRows">
          <ng-container
            *ngTemplateOutlet="pTableBodyTemplate; context: getContext(renderRowData, rowIndex, true)"></ng-container>
        </ng-template>
      </ng-container>
      <ng-container *ngIf="dt.expandedRowTemplateRef">
        <ng-template cdkVirtualFor
                     let-renderRowData
                     let-rowIndex="index"
                     [cdkVirtualForOf]="dt.getPlainExpandedRenderingRows(dt.getCurrentPageDisplayingRows())"
                     [cdkVirtualForTemplateCacheSize]="0"
                     [cdkVirtualForTrackBy]="dt.trackByForRenderingRows">
          <ng-container
            *ngTemplateOutlet="pTableBodyTemplate; context: getContext(renderRowData, rowIndex, true, true)"></ng-container>
          <ng-container *ngIf="dt.isRowExpanded(renderRowData)">
            <ng-container
              *ngTemplateOutlet="dt.expandedRowTemplateRef; context: getContext(renderRowData, rowIndex)"></ng-container>
          </ng-container>
        </ng-template>
      </ng-container>
    </ng-container>
    <ng-container *ngIf="dt.loading">
      <ng-container
        *ngTemplateOutlet="dt.loadingBodyTemplate; context: {$implicit: pTableBody, frozen: frozen}"></ng-container>
    </ng-container>
    <ng-container *ngIf="dt.isEmpty() && !dt.loading">
      <ng-container
        *ngTemplateOutlet="dt.emptyMessageTemplate; context: {$implicit: pTableBody, frozen: frozen}"></ng-container>
    </ng-container>
  `
            }]
    }], function () { return [{ type: i1.AdaptTableComponent }, { type: i0.ChangeDetectorRef }]; }, { pTableBody: [{
            type: Input
        }], pTableBodyTemplate: [{
            type: Input
        }], frozen: [{
            type: Input
        }], cdkVirtualForOf: [{
            type: ViewChild,
            args: [CdkVirtualForOf]
        }] }); })();
//# sourceMappingURL=table-body.component.js.map