{"version":3,"file":"adapt-paginator.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-table/src/lib/adapt-paginator/adapt-paginator.component.ts","../../../../../../libs/adapt-table/src/lib/adapt-paginator/adapt-paginator.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport {\n  AdaptPopoverDirective,\n  AdaptTranslateService,\n  ResizeService,\n  RxSelectOption,\n  SafeCdr\n} from '@bmc-ux/adapt-angular';\nimport {SelectItem} from 'primeng/api';\nimport {Paginator} from 'primeng/paginator';\nimport {ReplaySubject} from 'rxjs';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {AdaptPaginatorAlign, AdaptPaginatorRowsPerPageChangeEvent, PaginationTexts, TableCustomTexts} from '../adapt-table.models';\n\n@Component({\n  selector: 'adapt-paginator',\n  templateUrl: './adapt-paginator.html',\n})\nexport class AdaptPaginatorComponent extends Paginator implements OnChanges, AfterViewInit, OnDestroy {\n\n  defaultTexts: PaginationTexts = {};\n  pagesNumbers: (number | null)[];\n  rowsPerPageModel: SelectItem<number>[];\n\n  @Input() texts: TableCustomTexts;\n  @Input() paginatorAlign: AdaptPaginatorAlign;\n\n  @ViewChild('paginatorContainer', {static: false}) paginatorContainer: ElementRef<HTMLDivElement>;\n\n  private _destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  constructor(\n    private _cd: ChangeDetectorRef,\n    private ts: AdaptTranslateService,\n    private resizeService: ResizeService,\n    private ngZone: NgZone\n  ) {\n    super(_cd);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.rows || changes.totalRecords || changes.rowsPerPageOptions) {\n      this.ngZone.onStable.pipe(takeUntil(this._destroyed$), take(1)).subscribe(() => {\n        // never detectChanges in a subscription to `onStable` without reattaching to the NgZone\n        // (onStable always emits outside the NgZone)\n        this.ngZone.run(() => {\n          this.recalculatePageNumbers();\n          this.rowsPerPageModel = [{label: `${this.rows}`, value: this.rows}];\n          this._cd.detectChanges();\n        });\n      });\n    }\n\n    super.ngOnChanges(changes);\n  }\n\n  ngAfterViewInit(): void {\n    this.onPageChange.pipe(takeUntil(this._destroyed$)).subscribe(() => {\n      this.recalculatePageNumbers();\n    });\n  }\n\n  recalculatePageNumbers(): void {\n    this.pagesNumbers = this.getPagesNumbers();\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed$.next(true);\n    this._destroyed$.complete();\n  }\n\n  getPagesNumbers(): (number | null)[] {\n    if (!this.paginatorContainer) {\n      return [];\n    }\n\n    const smallWidthBreakPoint = 320;\n    const middleWidthBreakPoint = 400;\n    const largeWidthBreakPoint = 500;\n    const paginatorContainerWidth = this.paginatorContainer.nativeElement.offsetWidth;\n\n    const itemsInGroup = paginatorContainerWidth <= middleWidthBreakPoint\n      ? 1 : paginatorContainerWidth > middleWidthBreakPoint && paginatorContainerWidth <= largeWidthBreakPoint\n        ? 2 : 3;\n\n    const allPagesCount = this.getPageCount();\n\n\n    if (allPagesCount <= itemsInGroup) {\n      // TODO: Refactor this if possible\n      // eslint-disable-next-line prefer-spread\n      return Array.apply(null, {length: allPagesCount || 1}).map((a, i) => i + 1);\n    }\n\n    const currentPage = this.getPage() + 1;\n    const firstPages: number[] = [];\n    const pages: number[] = [];\n\n    for (let i = 1; i <= itemsInGroup; i++) {\n      firstPages.push(i);\n    }\n    pages.push(...firstPages);\n\n\n    if (currentPage >= itemsInGroup && currentPage <= (allPagesCount + 1 - itemsInGroup)) {\n      const middlePages: number[] = [];\n\n      if (paginatorContainerWidth >= smallWidthBreakPoint\n        && currentPage - 1 > itemsInGroup && currentPage - 1 < (allPagesCount + 1 - itemsInGroup)) {\n        middlePages.push(currentPage - 1);\n      }\n\n      if (currentPage > itemsInGroup && currentPage < (allPagesCount + 1 - itemsInGroup)) {\n        middlePages.push(currentPage);\n      }\n\n      if (paginatorContainerWidth >= smallWidthBreakPoint\n        && currentPage + 1 > itemsInGroup && currentPage + 1 < (allPagesCount + 1 - itemsInGroup)) {\n        middlePages.push(currentPage + 1);\n      }\n\n      if (middlePages.length && middlePages[0] - 1 !== pages[pages.length - 1]) {\n        pages.push(null);\n      }\n      pages.push(...middlePages);\n    }\n\n    const lastPages: number[] = [];\n    const maxNumb = pages[pages.length - 1];\n\n    for (let i = allPagesCount - itemsInGroup + 1; i <= allPagesCount; i++) {\n      if (maxNumb < i) {\n        lastPages.push(i);\n      }\n    }\n\n    if (lastPages.length && lastPages[0] - 1 !== pages[pages.length - 1]) {\n      pages.push(null);\n    }\n    pages.push(...lastPages);\n\n    return pages;\n  }\n\n  onGotoPageClick(pageNumber: number, adaptPopover: AdaptPopoverDirective): void {\n    this.changePage(pageNumber);\n    adaptPopover.close();\n  }\n\n  trackByForPages(index: number, pageNumber: number): number {\n    // by primary key or index\n    return pageNumber == null ? index : pageNumber;\n  }\n\n  changePage(p: number): void {\n    super.changePage(p);\n    SafeCdr.detectChanges(this._cd);\n  }\n\n  onGotoPopoverShown(): void {\n    SafeCdr.detectChanges(this._cd);\n  }\n\n  rowsPerPageOptionFormatter(opt: RxSelectOption): string {\n    return `${opt.label}`;\n  }\n\n  onRppChange(event: AdaptPaginatorRowsPerPageChangeEvent): void {\n    this.rows = event.rows;\n    super.onRppChange(event);\n  }\n}\n","<div #paginatorContainer\n     [class]=\"styleClass\"\n     [ngStyle]=\"style\"\n     [adaptResize]\n     (elementResize)=\"recalculatePageNumbers()\"\n     [ngClass]=\"'ui-paginator ui-widget ui-widget-header ui-unselectable-text ui-helper-clearfix'\"\n     *ngIf=\"alwaysShow ? true : (pageLinks && pageLinks.length > 1)\">\n  <span class=\"ui-paginator-current d-flex justify-content-between\"\n        *ngIf=\"showCurrentPageReport\">\n    {{currentPageReport}}\n    <span class=\"ui-paginator__row-per-page_small-screen\"\n          *ngIf=\"rowsPerPageOptions\">\n      <ng-template [ngTemplateOutlet]=\"rowsPerPageOptionsTemplate\"></ng-template>\n    </span>\n  </span>\n\n  <div *ngIf=\"paginatorContainer\" class=\"d-table\">\n    <span class=\"ui-paginator__row-per-page\"\n          *ngIf=\"rowsPerPageOptions && paginatorAlign === 'right'\">\n      <ng-template [ngTemplateOutlet]=\"rowsPerPageOptionsTemplate\"></ng-template>\n    </span>\n\n    <button class=\"ui-paginator-prev ui-paginator-element ui-state-default ui-corner-all\"\n            (click)=\"changePage(getPage() - 1)\"\n            [ngClass]=\"{'ui-state-disabled':isFirstPage()}\"\n            [disabled]=\"isFirstPage()\"\n            type=\"button\">\n      <span class=\"ui-paginator-icon pi pi-caret-left\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\">{{texts.prevPageBtnText}}</span>\n    </button>\n\n    <ng-template ngFor\n                 let-pageLink\n                 [ngForOf]=\"pagesNumbers\"\n                 [ngForTrackBy]=\"trackByForPages\">\n      <button *ngIf=\"pageLink !== null; else emptyBtn\"\n              class=\"ui-paginator-page ui-paginator-element ui-state-default ui-corner-all\"\n              (click)=\"changePage(pageLink - 1)\"\n              [ngClass]=\"{'ui-state-active': (pageLink === getPage() + 1)}\"\n              type=\"button\">\n        {{pageLink}}\n      </button>\n\n      <ng-template #emptyBtn>\n        <ng-template #gotoPopover>\n          <div class=\"input-group\">\n            <input #pageNum\n                   type=\"number\"\n                   class=\"form-control ui-paginator-goto-input\"\n                   min=\"1\"\n                   [attr.min]=\"1\"\n                   [attr.max]=\"getPageCount()\"\n                   [placeholder]=\"texts.pageNumberText\"\n                   [value]=\"getPage() + 1\">\n            <span class=\"input-group-btn\">\n\t\t\t\t\t\t\t<button class=\"btn btn-secondary\"\n                      type=\"button\"\n                      (click)=\"onGotoPageClick(pageNum.value - 1, adaptPopover)\">\n                {{ texts.goBtnText }}\n              </button>\n\t\t\t\t\t\t</span>\n          </div>\n        </ng-template>\n\n        <button\n          class=\"ui-paginator-page ui-paginator-element ui-state-default ui-corner-all\"\n          type=\"button\"\n          [adaptPopover]=\"gotoPopover\"\n          [adaptRadarDisableEventSending]=\"true\"\n          [appendToBody]=\"true\"\n          #adaptPopover=\"adaptPopover\"\n          [autoClose]=\"'outside'\"\n          (shown)=\"onGotoPopoverShown()\">...\n        </button>\n\n      </ng-template>\n    </ng-template>\n\n    <button class=\"ui-paginator-next ui-paginator-element ui-state-default ui-corner-all\"\n            (click)=\"changePage(getPage() + 1)\"\n            [ngClass]=\"{'ui-state-disabled':isLastPage()}\"\n            [disabled]=\"isLastPage()\"\n            type=\"button\">\n      <span class=\"ui-paginator-icon pi pi-caret-right\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\">{{texts.nextPageBtnText}}</span>\n    </button>\n\n    <span class=\"ui-paginator__row-per-page\"\n          *ngIf=\"rowsPerPageOptions && paginatorAlign === 'left'\">\n      <ng-template [ngTemplateOutlet]=\"rowsPerPageOptionsTemplate\"></ng-template>\n    </span>\n\n  </div>\n</div>\n\n<ng-template #rowsPerPageOptionsTemplate>\n  <div adaptDropdown\n       [adaptRadarDisableEventSending]=\"true\"\n       [restoreFocusAfterClose]=\"true\"\n       [holdFocusInMenu]=\"true\"\n       class=\"d-inline-block mx-1\"\n       [appendToBody]=\"true\">\n    <button\n      type=\"button\"\n      adapt-button\n      [adaptRadarDisableEventSending]=\"true\"\n      btn-type=\"tertiary\"\n      size=\"small\"\n      id=\"rowsPerPageOptionsDropdownMenu\"\n      adaptDropdownToggle\n      [dropdownTogglerType]=\"'link'\">\n      <span class=\"ui-paginator__row-per-page-label\">{{texts.recordsPerPage}}</span>\n      <span class=\"ui-paginator__row-per-page-label_small-screen\">{{rows}}</span>\n    </button>\n    <div\n      class=\"dropdown-menu\"\n      aria-labelledby=\"rowsPerPageOptionsDropdownMenu\"\n      adaptDropdownMenu>\n      <button class=\"dropdown-item\"\n              type=\"button\"\n              *ngFor=\"let rowPerPage of rowsPerPageOptions\"\n              (click)=\"onRppChange({event: $event, rows: rowPerPage})\"\n              [class.active]=\"rows === rowPerPage\">\n        {{rowPerPage}}\n      </button>\n    </div>\n  </div>\n</ng-template>\n"]}