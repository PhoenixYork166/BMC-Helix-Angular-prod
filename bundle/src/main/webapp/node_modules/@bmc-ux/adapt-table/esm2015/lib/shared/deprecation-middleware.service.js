import { Injectable } from '@angular/core';
import { isEmpty } from 'lodash-es';
import { adaptWarn } from '@bmc-ux/adapt-angular';
import * as i0 from "@angular/core";
export class AdaptTableDeprecationMiddleware {
    init(table) {
        this._table = table;
        this._updateTexts();
    }
    _updateTexts() {
        if (this._table.texts) {
            return;
        }
        if (this._table.tableTexts
            || this._table.paginationTexts
            || this._table.toolbarTexts
            || !isEmpty(this._table.filtersTexts)
            || this._table.headerCellMenuTexts) {
            this._table.texts = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, this._table.tableTexts), this._table.paginationTexts), this._table.toolbarTexts), this._table.filtersTexts), this._table.headerCellMenuTexts);
            adaptWarn('[paginationTexts], [toolbarTexts], [tableTexts], [filtersTexts], [headerCellMenuTexts] are deprecated from v8.26.1. Use [texts] instead');
        }
    }
}
AdaptTableDeprecationMiddleware.ɵfac = function AdaptTableDeprecationMiddleware_Factory(t) { return new (t || AdaptTableDeprecationMiddleware)(); };
AdaptTableDeprecationMiddleware.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AdaptTableDeprecationMiddleware, factory: AdaptTableDeprecationMiddleware.ɵfac, providedIn: 'root' });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptTableDeprecationMiddleware, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], null, null); })();
//# sourceMappingURL=deprecation-middleware.service.js.map