{"version":3,"file":"sort-icon.component.js","sourceRoot":"","sources":["../../../../../../../libs/adapt-table/src/lib/primeng-lib/table/sort-icon.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,KAAK,EAAoB,MAAM,eAAe,CAAC;AAElE,OAAO,EAAC,KAAK,EAAC,MAAM,SAAS,CAAC;;;;;AAU9B,kEAAkE;AAClE,MAAM,OAAO,QAAQ;IAOnB,YAAmB,EAAS;QAAT,OAAE,GAAF,EAAE,CAAO;QAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,EAAE;YAClE,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,OAAO,CAAC,KAAY;QAClB,KAAK,CAAC,cAAc,EAAE,CAAC;IACzB,CAAC;IAED,eAAe;QACb,IAAI,IAAI,CAAC,EAAE,CAAC,QAAQ,KAAK,QAAQ,EAAE;YACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SACvE;aAAM,IAAI,IAAI,CAAC,EAAE,CAAC,QAAQ,KAAK,UAAU,EAAE;YAC1C,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAEjD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAChD;IACH,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;IACH,CAAC;;gEAnCU,QAAQ;2DAAR,QAAQ;QALjB,sBAAA;QAAA,uBACiH;QACnH,oBAAA;;QADK,eAAyG;QAAzG,oHAAyG;;uFAInG,QAAQ;cATpB,SAAS;eAAC;gBACT,8DAA8D;gBAC9D,QAAQ,EAAE,YAAY;gBACtB,QAAQ,EAAE;;;GAGT;aACF;wDAIU,KAAK;kBAAb,KAAK","sourcesContent":["import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {Table} from './table';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'p-sortIcon',\n  template: `\n    <i class=\"ui-sortable-column-icon pi pi-fw\"\n       [ngClass]=\"{'pi-sort-up': sortOrder === 1, 'pi-sort-down': sortOrder === -1, 'pi-sort': sortOrder === 0}\"></i>\n  `\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class SortIcon implements OnInit, OnDestroy {\n\n  @Input() field: string;\n\n  subscription: Subscription;\n  sortOrder: number;\n\n  constructor(public dt: Table) {\n    this.subscription = this.dt.tableService.sortSource$.subscribe(() => {\n      this.updateSortState();\n    });\n  }\n\n  ngOnInit(): void {\n    this.updateSortState();\n  }\n\n  onClick(event: Event): void {\n    event.preventDefault();\n  }\n\n  updateSortState(): void {\n    if (this.dt.sortMode === 'single') {\n      this.sortOrder = this.dt.isSorted(this.field) ? this.dt.sortOrder : 0;\n    } else if (this.dt.sortMode === 'multiple') {\n      const sortMeta = this.dt.getSortMeta(this.field);\n\n      this.sortOrder = sortMeta ? sortMeta.order : 0;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n"]}