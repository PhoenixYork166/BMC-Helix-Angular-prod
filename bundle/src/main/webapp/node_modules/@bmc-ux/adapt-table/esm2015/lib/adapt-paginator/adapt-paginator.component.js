import { ChangeDetectorRef, Component, ElementRef, Input, NgZone, ViewChild } from '@angular/core';
import { AdaptTranslateService, ResizeService, SafeCdr } from '@bmc-ux/adapt-angular';
import { Paginator } from 'primeng/paginator';
import { ReplaySubject } from 'rxjs';
import { take, takeUntil } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@bmc-ux/adapt-angular";
import * as i2 from "@angular/common";
const _c0 = ["paginatorContainer"];
function AdaptPaginatorComponent_div_0_span_3_span_2_ng_template_2_Template(rf, ctx) { }
function AdaptPaginatorComponent_div_0_span_3_span_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 8);
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵtemplate(2, AdaptPaginatorComponent_div_0_span_3_span_2_ng_template_2_Template, 0, 0, "ng-template", 9);
    i0.ɵɵtext(3, "\n    ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    i0.ɵɵnextContext(3);
    const _r1 = i0.ɵɵreference(3);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", _r1);
} }
function AdaptPaginatorComponent_div_0_span_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 6);
    i0.ɵɵtext(1);
    i0.ɵɵtemplate(2, AdaptPaginatorComponent_div_0_span_3_span_2_Template, 4, 1, "span", 7);
    i0.ɵɵtext(3, "\n  ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n    ", ctx_r4.currentPageReport, "\n    ");
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r4.rowsPerPageOptions);
} }
function AdaptPaginatorComponent_div_0_div_5_span_2_ng_template_2_Template(rf, ctx) { }
function AdaptPaginatorComponent_div_0_div_5_span_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 18);
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵtemplate(2, AdaptPaginatorComponent_div_0_div_5_span_2_ng_template_2_Template, 0, 0, "ng-template", 9);
    i0.ɵɵtext(3, "\n    ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    i0.ɵɵnextContext(3);
    const _r1 = i0.ɵɵreference(3);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", _r1);
} }
const _c1 = function (a0) { return { "ui-state-active": a0 }; };
function AdaptPaginatorComponent_div_0_div_5_ng_template_12_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r18 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 21);
    i0.ɵɵlistener("click", function AdaptPaginatorComponent_div_0_div_5_ng_template_12_button_1_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r18); const pageLink_r12 = i0.ɵɵnextContext().$implicit; const ctx_r16 = i0.ɵɵnextContext(3); return ctx_r16.changePage(pageLink_r12 - 1); });
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const pageLink_r12 = i0.ɵɵnextContext().$implicit;
    const ctx_r13 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(2, _c1, pageLink_r12 === ctx_r13.getPage() + 1));
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n        ", pageLink_r12, "\n      ");
} }
function AdaptPaginatorComponent_div_0_div_5_ng_template_12_ng_template_3_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r25 = i0.ɵɵgetCurrentView();
    i0.ɵɵtext(0, "\n          ");
    i0.ɵɵelementStart(1, "div", 25);
    i0.ɵɵtext(2, "\n            ");
    i0.ɵɵelement(3, "input", 26, 27);
    i0.ɵɵtext(5, "\n            ");
    i0.ɵɵelementStart(6, "span", 28);
    i0.ɵɵtext(7, "\n\t\t\t\t\t\t\t");
    i0.ɵɵelementStart(8, "button", 29);
    i0.ɵɵlistener("click", function AdaptPaginatorComponent_div_0_div_5_ng_template_12_ng_template_3_ng_template_1_Template_button_click_8_listener() { i0.ɵɵrestoreView(_r25); const _r23 = i0.ɵɵreference(4); i0.ɵɵnextContext(); const _r22 = i0.ɵɵreference(5); const ctx_r24 = i0.ɵɵnextContext(4); return ctx_r24.onGotoPageClick(_r23.value - 1, _r22); });
    i0.ɵɵtext(9);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(10, "\n\t\t\t\t\t\t");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(11, "\n          ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(12, "\n        ");
} if (rf & 2) {
    const ctx_r21 = i0.ɵɵnextContext(5);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("placeholder", ctx_r21.texts.pageNumberText)("value", ctx_r21.getPage() + 1);
    i0.ɵɵattribute("min", 1)("max", ctx_r21.getPageCount());
    i0.ɵɵadvance(6);
    i0.ɵɵtextInterpolate1("\n                ", ctx_r21.texts.goBtnText, "\n              ");
} }
function AdaptPaginatorComponent_div_0_div_5_ng_template_12_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    const _r27 = i0.ɵɵgetCurrentView();
    i0.ɵɵtext(0, "\n        ");
    i0.ɵɵtemplate(1, AdaptPaginatorComponent_div_0_div_5_ng_template_12_ng_template_3_ng_template_1_Template, 13, 5, "ng-template", null, 22, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵtext(3, "\n\n        ");
    i0.ɵɵelementStart(4, "button", 23, 24);
    i0.ɵɵlistener("shown", function AdaptPaginatorComponent_div_0_div_5_ng_template_12_ng_template_3_Template_button_shown_4_listener() { i0.ɵɵrestoreView(_r27); const ctx_r26 = i0.ɵɵnextContext(4); return ctx_r26.onGotoPopoverShown(); });
    i0.ɵɵtext(6, "...\n        ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(7, "\n\n      ");
} if (rf & 2) {
    const _r20 = i0.ɵɵreference(2);
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("adaptPopover", _r20)("adaptRadarDisableEventSending", true)("appendToBody", true)("autoClose", "outside");
} }
function AdaptPaginatorComponent_div_0_div_5_ng_template_12_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n      ");
    i0.ɵɵtemplate(1, AdaptPaginatorComponent_div_0_div_5_ng_template_12_button_1_Template, 2, 4, "button", 19);
    i0.ɵɵtext(2, "\n\n      ");
    i0.ɵɵtemplate(3, AdaptPaginatorComponent_div_0_div_5_ng_template_12_ng_template_3_Template, 8, 4, "ng-template", null, 20, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵtext(5, "\n    ");
} if (rf & 2) {
    const pageLink_r12 = ctx.$implicit;
    const _r14 = i0.ɵɵreference(4);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", pageLink_r12 !== null)("ngIfElse", _r14);
} }
function AdaptPaginatorComponent_div_0_div_5_span_22_ng_template_2_Template(rf, ctx) { }
function AdaptPaginatorComponent_div_0_div_5_span_22_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 18);
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵtemplate(2, AdaptPaginatorComponent_div_0_div_5_span_22_ng_template_2_Template, 0, 0, "ng-template", 9);
    i0.ɵɵtext(3, "\n    ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    i0.ɵɵnextContext(3);
    const _r1 = i0.ɵɵreference(3);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", _r1);
} }
const _c2 = function (a0) { return { "ui-state-disabled": a0 }; };
function AdaptPaginatorComponent_div_0_div_5_Template(rf, ctx) { if (rf & 1) {
    const _r30 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 10);
    i0.ɵɵtext(1, "\n    ");
    i0.ɵɵtemplate(2, AdaptPaginatorComponent_div_0_div_5_span_2_Template, 4, 1, "span", 11);
    i0.ɵɵtext(3, "\n\n    ");
    i0.ɵɵelementStart(4, "button", 12);
    i0.ɵɵlistener("click", function AdaptPaginatorComponent_div_0_div_5_Template_button_click_4_listener() { i0.ɵɵrestoreView(_r30); const ctx_r29 = i0.ɵɵnextContext(2); return ctx_r29.changePage(ctx_r29.getPage() - 1); });
    i0.ɵɵtext(5, "\n      ");
    i0.ɵɵelement(6, "span", 13);
    i0.ɵɵtext(7, "\n      ");
    i0.ɵɵelementStart(8, "span", 14);
    i0.ɵɵtext(9);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(10, "\n    ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(11, "\n\n    ");
    i0.ɵɵtemplate(12, AdaptPaginatorComponent_div_0_div_5_ng_template_12_Template, 6, 2, "ng-template", 15);
    i0.ɵɵtext(13, "\n\n    ");
    i0.ɵɵelementStart(14, "button", 16);
    i0.ɵɵlistener("click", function AdaptPaginatorComponent_div_0_div_5_Template_button_click_14_listener() { i0.ɵɵrestoreView(_r30); const ctx_r31 = i0.ɵɵnextContext(2); return ctx_r31.changePage(ctx_r31.getPage() + 1); });
    i0.ɵɵtext(15, "\n      ");
    i0.ɵɵelement(16, "span", 17);
    i0.ɵɵtext(17, "\n      ");
    i0.ɵɵelementStart(18, "span", 14);
    i0.ɵɵtext(19);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(20, "\n    ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(21, "\n\n    ");
    i0.ɵɵtemplate(22, AdaptPaginatorComponent_div_0_div_5_span_22_Template, 4, 1, "span", 11);
    i0.ɵɵtext(23, "\n\n  ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r5.rowsPerPageOptions && ctx_r5.paginatorAlign === "right");
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(10, _c2, ctx_r5.isFirstPage()))("disabled", ctx_r5.isFirstPage());
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate(ctx_r5.texts.prevPageBtnText);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngForOf", ctx_r5.pagesNumbers)("ngForTrackBy", ctx_r5.trackByForPages);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(12, _c2, ctx_r5.isLastPage()))("disabled", ctx_r5.isLastPage());
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate(ctx_r5.texts.nextPageBtnText);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", ctx_r5.rowsPerPageOptions && ctx_r5.paginatorAlign === "left");
} }
function AdaptPaginatorComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r33 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 2, 3);
    i0.ɵɵlistener("elementResize", function AdaptPaginatorComponent_div_0_Template_div_elementResize_0_listener() { i0.ɵɵrestoreView(_r33); const ctx_r32 = i0.ɵɵnextContext(); return ctx_r32.recalculatePageNumbers(); });
    i0.ɵɵtext(2, "\n  ");
    i0.ɵɵtemplate(3, AdaptPaginatorComponent_div_0_span_3_Template, 4, 2, "span", 4);
    i0.ɵɵtext(4, "\n\n  ");
    i0.ɵɵtemplate(5, AdaptPaginatorComponent_div_0_div_5_Template, 24, 14, "div", 5);
    i0.ɵɵtext(6, "\n");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const _r3 = i0.ɵɵreference(1);
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵclassMap(ctx_r0.styleClass);
    i0.ɵɵproperty("ngStyle", ctx_r0.style)("ngClass", "ui-paginator ui-widget ui-widget-header ui-unselectable-text ui-helper-clearfix");
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", ctx_r0.showCurrentPageReport);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", _r3);
} }
function AdaptPaginatorComponent_ng_template_2_button_14_Template(rf, ctx) { if (rf & 1) {
    const _r37 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 36);
    i0.ɵɵlistener("click", function AdaptPaginatorComponent_ng_template_2_button_14_Template_button_click_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r37); const rowPerPage_r35 = restoredCtx.$implicit; const ctx_r36 = i0.ɵɵnextContext(2); return ctx_r36.onRppChange({ event: $event, rows: rowPerPage_r35 }); });
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const rowPerPage_r35 = ctx.$implicit;
    const ctx_r34 = i0.ɵɵnextContext(2);
    i0.ɵɵclassProp("active", ctx_r34.rows === rowPerPage_r35);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n        ", rowPerPage_r35, "\n      ");
} }
function AdaptPaginatorComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n  ");
    i0.ɵɵelementStart(1, "div", 30);
    i0.ɵɵtext(2, "\n    ");
    i0.ɵɵelementStart(3, "button", 31);
    i0.ɵɵtext(4, "\n      ");
    i0.ɵɵelementStart(5, "span", 32);
    i0.ɵɵtext(6);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(7, "\n      ");
    i0.ɵɵelementStart(8, "span", 33);
    i0.ɵɵtext(9);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(10, "\n    ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(11, "\n    ");
    i0.ɵɵelementStart(12, "div", 34);
    i0.ɵɵtext(13, "\n      ");
    i0.ɵɵtemplate(14, AdaptPaginatorComponent_ng_template_2_button_14_Template, 2, 3, "button", 35);
    i0.ɵɵtext(15, "\n    ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(16, "\n  ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(17, "\n");
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("restoreFocusAfterClose", true)("holdFocusInMenu", true)("appendToBody", true);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("dropdownTogglerType", "link");
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate(ctx_r2.texts.recordsPerPage);
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate(ctx_r2.rows);
    i0.ɵɵadvance(5);
    i0.ɵɵproperty("ngForOf", ctx_r2.rowsPerPageOptions);
} }
export class AdaptPaginatorComponent extends Paginator {
    constructor(_cd, ts, resizeService, ngZone) {
        super(_cd);
        this._cd = _cd;
        this.ts = ts;
        this.resizeService = resizeService;
        this.ngZone = ngZone;
        this.defaultTexts = {};
        this._destroyed$ = new ReplaySubject(1);
    }
    ngOnChanges(changes) {
        if (changes.rows || changes.totalRecords || changes.rowsPerPageOptions) {
            this.ngZone.onStable.pipe(takeUntil(this._destroyed$), take(1)).subscribe(() => {
                // never detectChanges in a subscription to `onStable` without reattaching to the NgZone
                // (onStable always emits outside the NgZone)
                this.ngZone.run(() => {
                    this.recalculatePageNumbers();
                    this.rowsPerPageModel = [{ label: `${this.rows}`, value: this.rows }];
                    this._cd.detectChanges();
                });
            });
        }
        super.ngOnChanges(changes);
    }
    ngAfterViewInit() {
        this.onPageChange.pipe(takeUntil(this._destroyed$)).subscribe(() => {
            this.recalculatePageNumbers();
        });
    }
    recalculatePageNumbers() {
        this.pagesNumbers = this.getPagesNumbers();
    }
    ngOnDestroy() {
        this._destroyed$.next(true);
        this._destroyed$.complete();
    }
    getPagesNumbers() {
        if (!this.paginatorContainer) {
            return [];
        }
        const smallWidthBreakPoint = 320;
        const middleWidthBreakPoint = 400;
        const largeWidthBreakPoint = 500;
        const paginatorContainerWidth = this.paginatorContainer.nativeElement.offsetWidth;
        const itemsInGroup = paginatorContainerWidth <= middleWidthBreakPoint
            ? 1 : paginatorContainerWidth > middleWidthBreakPoint && paginatorContainerWidth <= largeWidthBreakPoint
            ? 2 : 3;
        const allPagesCount = this.getPageCount();
        if (allPagesCount <= itemsInGroup) {
            // TODO: Refactor this if possible
            // eslint-disable-next-line prefer-spread
            return Array.apply(null, { length: allPagesCount || 1 }).map((a, i) => i + 1);
        }
        const currentPage = this.getPage() + 1;
        const firstPages = [];
        const pages = [];
        for (let i = 1; i <= itemsInGroup; i++) {
            firstPages.push(i);
        }
        pages.push(...firstPages);
        if (currentPage >= itemsInGroup && currentPage <= (allPagesCount + 1 - itemsInGroup)) {
            const middlePages = [];
            if (paginatorContainerWidth >= smallWidthBreakPoint
                && currentPage - 1 > itemsInGroup && currentPage - 1 < (allPagesCount + 1 - itemsInGroup)) {
                middlePages.push(currentPage - 1);
            }
            if (currentPage > itemsInGroup && currentPage < (allPagesCount + 1 - itemsInGroup)) {
                middlePages.push(currentPage);
            }
            if (paginatorContainerWidth >= smallWidthBreakPoint
                && currentPage + 1 > itemsInGroup && currentPage + 1 < (allPagesCount + 1 - itemsInGroup)) {
                middlePages.push(currentPage + 1);
            }
            if (middlePages.length && middlePages[0] - 1 !== pages[pages.length - 1]) {
                pages.push(null);
            }
            pages.push(...middlePages);
        }
        const lastPages = [];
        const maxNumb = pages[pages.length - 1];
        for (let i = allPagesCount - itemsInGroup + 1; i <= allPagesCount; i++) {
            if (maxNumb < i) {
                lastPages.push(i);
            }
        }
        if (lastPages.length && lastPages[0] - 1 !== pages[pages.length - 1]) {
            pages.push(null);
        }
        pages.push(...lastPages);
        return pages;
    }
    onGotoPageClick(pageNumber, adaptPopover) {
        this.changePage(pageNumber);
        adaptPopover.close();
    }
    trackByForPages(index, pageNumber) {
        // by primary key or index
        return pageNumber == null ? index : pageNumber;
    }
    changePage(p) {
        super.changePage(p);
        SafeCdr.detectChanges(this._cd);
    }
    onGotoPopoverShown() {
        SafeCdr.detectChanges(this._cd);
    }
    rowsPerPageOptionFormatter(opt) {
        return `${opt.label}`;
    }
    onRppChange(event) {
        this.rows = event.rows;
        super.onRppChange(event);
    }
}
AdaptPaginatorComponent.ɵfac = function AdaptPaginatorComponent_Factory(t) { return new (t || AdaptPaginatorComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.AdaptTranslateService), i0.ɵɵdirectiveInject(i1.ResizeService), i0.ɵɵdirectiveInject(i0.NgZone)); };
AdaptPaginatorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptPaginatorComponent, selectors: [["adapt-paginator"]], viewQuery: function AdaptPaginatorComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginatorContainer = _t.first);
    } }, inputs: { texts: "texts", paginatorAlign: "paginatorAlign" }, features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 5, vars: 1, consts: [[3, "class", "ngStyle", "adaptResize", "ngClass", "elementResize", 4, "ngIf"], ["rowsPerPageOptionsTemplate", ""], [3, "ngStyle", "adaptResize", "ngClass", "elementResize"], ["paginatorContainer", ""], ["class", "ui-paginator-current d-flex justify-content-between", 4, "ngIf"], ["class", "d-table", 4, "ngIf"], [1, "ui-paginator-current", "d-flex", "justify-content-between"], ["class", "ui-paginator__row-per-page_small-screen", 4, "ngIf"], [1, "ui-paginator__row-per-page_small-screen"], [3, "ngTemplateOutlet"], [1, "d-table"], ["class", "ui-paginator__row-per-page", 4, "ngIf"], ["type", "button", 1, "ui-paginator-prev", "ui-paginator-element", "ui-state-default", "ui-corner-all", 3, "ngClass", "disabled", "click"], ["aria-hidden", "true", 1, "ui-paginator-icon", "pi", "pi-caret-left"], [1, "sr-only"], ["ngFor", "", 3, "ngForOf", "ngForTrackBy"], ["type", "button", 1, "ui-paginator-next", "ui-paginator-element", "ui-state-default", "ui-corner-all", 3, "ngClass", "disabled", "click"], ["aria-hidden", "true", 1, "ui-paginator-icon", "pi", "pi-caret-right"], [1, "ui-paginator__row-per-page"], ["class", "ui-paginator-page ui-paginator-element ui-state-default ui-corner-all", "type", "button", 3, "ngClass", "click", 4, "ngIf", "ngIfElse"], ["emptyBtn", ""], ["type", "button", 1, "ui-paginator-page", "ui-paginator-element", "ui-state-default", "ui-corner-all", 3, "ngClass", "click"], ["gotoPopover", ""], ["type", "button", 1, "ui-paginator-page", "ui-paginator-element", "ui-state-default", "ui-corner-all", 3, "adaptPopover", "adaptRadarDisableEventSending", "appendToBody", "autoClose", "shown"], ["adaptPopover", "adaptPopover"], [1, "input-group"], ["type", "number", "min", "1", 1, "form-control", "ui-paginator-goto-input", 3, "placeholder", "value"], ["pageNum", ""], [1, "input-group-btn"], ["type", "button", 1, "btn", "btn-secondary", 3, "click"], ["adaptDropdown", "", 1, "d-inline-block", "mx-1", 3, "adaptRadarDisableEventSending", "restoreFocusAfterClose", "holdFocusInMenu", "appendToBody"], ["type", "button", "adapt-button", "", "btn-type", "tertiary", "size", "small", "id", "rowsPerPageOptionsDropdownMenu", "adaptDropdownToggle", "", 3, "adaptRadarDisableEventSending", "dropdownTogglerType"], [1, "ui-paginator__row-per-page-label"], [1, "ui-paginator__row-per-page-label_small-screen"], ["aria-labelledby", "rowsPerPageOptionsDropdownMenu", "adaptDropdownMenu", "", 1, "dropdown-menu"], ["class", "dropdown-item", "type", "button", 3, "active", "click", 4, "ngFor", "ngForOf"], ["type", "button", 1, "dropdown-item", 3, "click"]], template: function AdaptPaginatorComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, AdaptPaginatorComponent_div_0_Template, 7, 6, "div", 0);
        i0.ɵɵtext(1, "\n\n");
        i0.ɵɵtemplate(2, AdaptPaginatorComponent_ng_template_2_Template, 18, 9, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtext(4, "\n");
    } if (rf & 2) {
        i0.ɵɵproperty("ngIf", ctx.alwaysShow ? true : ctx.pageLinks && ctx.pageLinks.length > 1);
    } }, directives: [i2.NgIf, i2.NgStyle, i1.AdaptResizeDirective, i2.NgClass, i2.NgTemplateOutlet, i2.NgForOf, i1.AdaptPopoverDirective, i1.AdaptDropdownDirective, i1.AdaptButtonComponent, i1.AdaptDropdownToggleDirective, i1.AdaptDropdownMenuDirective], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptPaginatorComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-paginator',
                templateUrl: './adapt-paginator.html',
            }]
    }], function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.AdaptTranslateService }, { type: i1.ResizeService }, { type: i0.NgZone }]; }, { texts: [{
            type: Input
        }], paginatorAlign: [{
            type: Input
        }], paginatorContainer: [{
            type: ViewChild,
            args: ['paginatorContainer', { static: false }]
        }] }); })();
//# sourceMappingURL=adapt-paginator.component.js.map