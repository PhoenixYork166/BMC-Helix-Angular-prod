{"version":3,"file":"adapt-table-actions.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-table/src/lib/adapt-table-actions/adapt-table-actions.component.ts","../../../../../../libs/adapt-table/src/lib/adapt-table-actions/adapt-table-actions.html"],"names":[],"mappings":"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","sourcesContent":["import {ListKeyManager} from '@angular/cdk/a11y';\nimport {DOWN_ARROW, ENTER} from '@angular/cdk/keycodes';\nimport {Component, Input, OnDestroy, ViewChild} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {AdaptTableComponent} from '../adapt-table.component';\nimport {\n  ColumnConfig,\n  RowActionConfig,\n  RowActionParams,\n  RowDataItem,\n  TableCustomTexts\n} from '../adapt-table.models';\nimport {\n  PlacementArray,\n  getValueOrFunc,\n  AdaptListKeyManagerItemDirective,\n  getEventKeyCode,\n  AdaptDropdownDirective\n} from '@bmc-ux/adapt-angular';\n\n\n@Component({\n  selector: 'adapt-table-actions',\n  templateUrl: './adapt-table-actions.html',\n})\nexport class AdaptTableActionsComponent implements OnDestroy {\n  dropdownPlacement: PlacementArray = ['bottom-right', 'top-right', 'auto'];\n  activeActionItemId: AdaptListKeyManagerItemDirective;\n\n  @Input() column: ColumnConfig;\n  @Input() rowIndex: number;\n  @Input() dataItem: RowDataItem;\n  @Input() expanded: boolean;\n  @Input() editing: boolean;\n  @Input() texts: TableCustomTexts;\n\n  @ViewChild('actionsDropdown', {static: false}) actionsDropdown: AdaptDropdownDirective;\n\n  private _listKeyManager: ListKeyManager<AdaptListKeyManagerItemDirective>;\n  private _listKeyManagerDestroy: Subject<void> = new Subject<void>();\n\n  constructor(public table: AdaptTableComponent) {\n  }\n\n  get actionsParams(): RowActionParams<RowDataItem> {\n    return {\n      column: this.column,\n      rowIndex: this.rowIndex,\n      dataItem: this.dataItem,\n      expanded: this.expanded,\n      editing: this.editing,\n    };\n  }\n\n  ngOnDestroy(): void {\n    this._listKeyManagerDestroy.next();\n  }\n\n  onActionClick(action: RowActionConfig): void {\n    action?.action(this.actionsParams);\n  }\n\n  isHidden(): boolean {\n    return getValueOrFunc(this.column.actionsConfig.hidden, this.actionsParams);\n  }\n\n  isDisabled(): boolean {\n    return getValueOrFunc(this.column.actionsConfig.disabled, this.actionsParams) ||\n      this.getVisibleActions().every(a => this.isDisabledAction(a));\n  }\n\n  isDisabledAction(action: RowActionConfig): boolean {\n    return getValueOrFunc(action.disabled, this.actionsParams);\n  }\n\n  getTitle(action: RowActionConfig): string {\n    return getValueOrFunc(action.title, this.actionsParams);\n  }\n\n  getVisibleActions(): RowActionConfig[] {\n    const params = this.actionsParams;\n\n    return this.column.actionsConfig.actions.filter(a => !getValueOrFunc(a.hidden, params));\n  }\n\n  keyManagerStateChange(listKeyManager?: ListKeyManager<AdaptListKeyManagerItemDirective>): void {\n    this._listKeyManager = listKeyManager;\n\n    if (this._listKeyManager) {\n      this._listKeyManager.change\n        .pipe(takeUntil(this._listKeyManagerDestroy))\n        .subscribe(() => {\n          this.activeActionItemId = this._listKeyManager.activeItem;\n        });\n\n      this._listKeyManager.tabOut\n        .pipe(takeUntil(this._listKeyManagerDestroy))\n        .subscribe(() => {\n          this.actionsDropdown.close();\n        });\n    } else {\n      this._listKeyManagerDestroy.next();\n      this.activeActionItemId = null;\n    }\n  }\n\n  keydownHandler(event: KeyboardEvent): void {\n    if (!this.actionsDropdown.isOpen() && getEventKeyCode(event) === DOWN_ARROW) {\n      event.preventDefault();\n      this.actionsDropdown.open();\n\n      return;\n    }\n\n    if (this._listKeyManager) {\n      this._listKeyManager.onKeydown(event);\n\n      if (getEventKeyCode(event) === ENTER && this.actionsDropdown.isOpen()) {\n        this.onActionClick(this._listKeyManager.activeItem?.item);\n      }\n    }\n  }\n\n  handleOpenChange(isOpen: boolean): void {\n    if (isOpen) {\n      this._listKeyManager.setFirstItemActive();\n    }\n  }\n\n  isActiveDescendant(keyManagerItem: AdaptListKeyManagerItemDirective): boolean {\n    return keyManagerItem === this.activeActionItemId;\n  }\n\n}\n","<div class=\"dropdown\"\n     adaptDropdown\n     [adaptRadarDisableEventSending]=\"true\"\n     *ngIf=\"!isHidden()\"\n     #actionsDropdown\n     [appendToBody]=\"true\"\n     [placement]=\"dropdownPlacement\"\n     (openChange)=\"handleOpenChange($event)\">\n  <button id=\"dropdownMenu\"\n          type=\"button\"\n          class=\"btn btn-secondary btn-xs at-action-dropdown-toggle dropdown-toggle\"\n          adaptDropdownAnchor\n          [attr.aria-expanded]=\"actionsDropdown.isOpen()\"\n          [attr.aria-activedescendant]=\"activeActionItemId\"\n          [disabled]=\"isDisabled()\"\n          (click)=\"actionsDropdown.toggle($event)\"\n          (keydown)=\"keydownHandler($event)\">\n    {{ column.actionsConfig.buttonName || texts.actionButtonDefaultLabel }}</button>\n  <div class=\"dropdown-menu\"\n       aria-labelledby=\"dropdownMenu\"\n       adaptDropdownMenu\n       adaptListKeyManager\n       (keyManagerStateChange)=\"keyManagerStateChange($event)\">\n    <button class=\"dropdown-item\"\n            type=\"button\"\n            tabindex=\"-1\"\n            adaptListKeyManagerItem\n            #adaptListKeyManagerItem=\"adaptListKeyManagerItem\"\n            *ngFor=\"let action of getVisibleActions(); let index = index;\"\n            [id]=\"actionsParams.rowIndex + '_' + index\"\n            [item]=\"action\"\n            [adaptListKeyManagerItemDisabled]=\"isDisabledAction(action)\"\n            [class.text-active]=\"isActiveDescendant(adaptListKeyManagerItem)\"\n            [disabled]=\"isDisabledAction(action)\"\n            (click)=\"onActionClick(action)\">\n      <span *ngIf=\"action.icon\"\n            [ngClass]=\"'at-action-icon ' + action.icon\"></span>{{ getTitle(action) }}\n    </button>\n  </div>\n</div>\n"]}