{"version":3,"file":"adapt-table-header-cell-menu.component.js","sourceRoot":"","sources":["../../../../../../../libs/adapt-table/src/lib/table-header-cell/adapt-table-header-cell-menu/adapt-table-header-cell-menu.component.ts","../../../../../../../libs/adapt-table/src/lib/table-header-cell/adapt-table-header-cell-menu/adapt-table-header-cell-menu.html"],"names":[],"mappings":"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","sourcesContent":["import {transition, trigger, useAnimation} from '@angular/animations';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  NgZone,\n  OnInit\n} from '@angular/core';\nimport {\n  AdaptTranslateService,\n  ANIMATION_DURATION,\n  ANIMATION_NAME,\n  ANIMATION_TIMING_FUNCTION,\n  formatString,\n  RxSelectOption\n} from '@bmc-ux/adapt-angular';\nimport {AdaptTableComponent} from '../../adapt-table.component';\nimport {ColumnConfig, SortOrder, TableCustomTexts} from '../../adapt-table.models';\nimport {SortMeta} from 'primeng/api';\n\n@Component({\n  selector: 'adapt-table-header-cell-menu',\n  templateUrl: './adapt-table-header-cell-menu.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('menuControlAnimation', [\n      transition('void => *', [\n        useAnimation(ANIMATION_NAME.height, {\n          params: {\n            duration: ANIMATION_DURATION.fast,\n            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionIn\n          }\n        })\n      ]),\n      transition('* => void', [\n        useAnimation(ANIMATION_NAME.height, {\n          params: {\n            duration: ANIMATION_DURATION.fast,\n            from: '*',\n            to: '0',\n            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionOut\n          }\n        })\n      ])\n    ])\n  ]\n})\nexport class AdaptTableHeaderCellMenuComponent implements OnInit {\n\n  SortOrder: typeof SortOrder = SortOrder;\n  isRtl: boolean = false;\n\n  @Input() headerCellMenuTexts: TableCustomTexts;\n  @Input() columns: ColumnConfig[];\n  @Input() table: AdaptTableComponent;\n\n\n  get multiSortMeta(): SortMeta[] {\n    return this.table.multiSortMeta;\n  }\n\n  constructor(private _ngZone: NgZone,\n              private ts: AdaptTranslateService,\n              private _dir: Directionality) {\n  }\n\n  ngOnInit(): void {\n    this.isRtl = this._dir.value === 'rtl';\n  }\n\n  isSortApplied(): boolean {\n    return this._getMultiSortMetaLength() >= 1;\n  }\n\n  isCurrentColumnAppliedInSort(sortingColumnField: string): boolean {\n    return this._getMultiSortMetaLength() > 1 && this._isColumnSorted(sortingColumnField);\n  }\n\n  getSortButtonsClass(order: SortOrder, sortingColumnField: string): string {\n    return this.isButtonActive(order, sortingColumnField)\n      ? 'btn-primary adapt-table-sort-menu__btn_active'\n      : 'btn-secondary';\n  }\n\n  getSortOrderOptions(): RxSelectOption[] {\n    return this.multiSortMeta.map((sortMeta, index) => {\n      return {\n        id: sortMeta.field,\n        name: formatString(this.headerCellMenuTexts.selectSortOrderOption, index + 1, this.multiSortMeta.length)\n      };\n    });\n  }\n\n  isButtonActive(order: SortOrder, sortingColumnField: string): boolean {\n    return this.table.getColumnSortOrder(sortingColumnField) === order;\n  }\n\n  optionFormatter(option: RxSelectOption): string {\n    return option.name;\n  }\n\n  onSortDirectionChange(order: SortOrder, sortingColumnField: string): void {\n    if (this.isButtonActive(order, sortingColumnField)) {\n      return;\n    }\n\n    if (this._getMultiSortMetaLength()) {\n      if (this._isColumnSorted(sortingColumnField)) {\n        this.table.updateMultiSortMeta(this.multiSortMeta.map(item => {\n          return {\n            field: item.field,\n            order: item.field === sortingColumnField ? order : item.order\n          };\n        }));\n      } else {\n        this.table.updateMultiSortMeta([\n          ...this.multiSortMeta,\n          {field: sortingColumnField, order}\n        ]);\n      }\n    } else {\n      this.table.updateMultiSortMeta([{field: sortingColumnField, order}]);\n    }\n  }\n\n  changeColumnsSortingOrder(targetModel: RxSelectOption[], sortingColumnField: string): void {\n    const sourceIndex = this.multiSortMeta.findIndex(sortMeta => sortMeta.field === sortingColumnField);\n    const targetIndex = this.multiSortMeta.findIndex(sortMeta => sortMeta.field === targetModel[0].id);\n\n    const multiSortMeta = [...this.multiSortMeta];\n    const sourceItem = multiSortMeta.splice(sourceIndex, 1);\n\n    multiSortMeta.splice(targetIndex, 0, ...sourceItem);\n    this.table.updateMultiSortMeta(multiSortMeta);\n  }\n\n  getSortOrderSelectModelName(fieldId: string): string {\n    const options = this.getSortOrderOptions();\n\n    return options.find(option => option.id === fieldId)?.name;\n  }\n\n  onRemoveCurrentFromSorting(sortingColumnField: string): void {\n    this.table.updateMultiSortMeta(this.multiSortMeta.filter((sortMeta => sortMeta.field !== sortingColumnField)));\n  }\n\n  // Method that implement multiple sorting in PrimeNG(sortMultiple) is overridden in projects/adapt-table/src/lib/primeng-overrides.ts\n  // to allow clearing sort and reset table to default sorting state\n  onClearAllSorting(): void {\n    this.table.updateMultiSortMeta(null);\n  }\n\n  private _getMultiSortMetaLength(): number {\n    return this.multiSortMeta?.length;\n  }\n\n  private _isColumnSorted(sortingColumnField: string): boolean {\n    return this.table.isSorted(sortingColumnField);\n  }\n}\n","<div adaptDropdown\n     #headerCellMenuDropdown=\"adaptDropdown\"\n     [adaptRadarDisableEventSending]=\"true\"\n     [appendToBody]=\"true\"\n     [positionTo]=\"anchorToEl\"\n     [restoreFocusAfterClose]=\"true\"\n     [holdFocusInMenu]=\"true\"\n     [autoClose]=\"'outside'\">\n  <button #anchorToEl\n          adaptDropdownToggle\n          [showCaret]=\"false\"\n          class=\"btn btn-link d-icon-ellipsis adapt-table-sort-menu__kebab\">\n    <span\n      class=\"sr-only\">{{multiSortMeta ? headerCellMenuTexts.orderLabelAddToSort : headerCellMenuTexts.orderLabelSort}}</span>\n  </button>\n\n  <div adaptDropdownMenu\n       class=\"adapt-table-sort-menu__wrapper dropdown-menu\">\n    <div *ngIf=\"headerCellMenuDropdown.isOpen()\">\n      <div *ngFor=\"let column of columns; let firstMenu = first; trackBy: table.trackByForColumns\"\n           [ngClass]=\"{'adapt-table-sort-menu__block_first': firstMenu}\"\n           class=\"adapt-table-sort-menu__block\">\n        <div class=\"adapt-table-sort-menu__controls\">\n          <label class=\"form-control-label mb-2\" for=\"sortButtons\">\n            <span>{{multiSortMeta ? headerCellMenuTexts.orderLabelAddToSort : headerCellMenuTexts.orderLabelSort}}</span>\n          </label>\n\n          <div class=\"adapt-table-sort-menu__btn-wrapper\" id=\"sortButtons\">\n            <div class=\"btn-group\"\n                 [attr.role]=\"'radiogroup'\">\n\n              <button type=\"button\"\n                      adapt-button\n                      [btn-type]=\"isButtonActive(SortOrder.Asc, column.field) ? 'primary' : 'secondary'\"\n                      [attr.role]=\"'radio'\"\n                      [adaptRadarDisableEventSending]=\"true\"\n                      [attr.aria-checked]=\"isButtonActive(SortOrder.Asc, column.field)\"\n                      [ngClass]=\"{'btn-group-padding adapt-table-sort-menu__btn_active': isButtonActive(SortOrder.Asc, column.field)}\"\n                      [tabindex]=\"table.getColumnSortOrder(column.field) === SortOrder.Asc ? -1 : 0\"\n                      (click)=\"onSortDirectionChange(SortOrder.Asc, column.field)\">\n                {{headerCellMenuTexts.orderAscBtn}}\n              </button>\n              <button type=\"button\"\n                      adapt-button\n                      [btn-type]=\"isButtonActive(SortOrder.Desc, column.field) ? 'primary' : 'secondary'\"\n                      [attr.role]=\"'radio'\"\n                      [adaptRadarDisableEventSending]=\"true\"\n                      [attr.aria-checked]=\"isButtonActive(SortOrder.Desc, column.field)\"\n                      [ngClass]=\"{'btn-group-padding adapt-table-sort-menu__btn_active': isButtonActive(SortOrder.Desc, column.field)}\"\n                      [tabindex]=\"table.getColumnSortOrder(column.field) === SortOrder.Desc ? -1 : 0\"\n                      (click)=\"onSortDirectionChange(SortOrder.Desc, column.field)\">\n                {{headerCellMenuTexts.orderDescBtn}}\n              </button>\n\n            </div>\n          </div>\n\n          <div *ngIf=\"isCurrentColumnAppliedInSort(column.field)\"\n               class=\"adapt-table-sort-menu__sort-wrapper\"\n               [@menuControlAnimation]>\n            <div class=\"adapt-table-sort-menu__sort-order-select\">\n              <adapt-rx-select [options]=\"getSortOrderOptions()\"\n                               [adaptRadarDisableEventSending]=\"true\"\n                               [optionFormatter]=\"optionFormatter\"\n                               [appendToBody]=\"true\"\n                               [closeOnSelect]=\"true\"\n                               [ngModel]=\"[{ id: column.field, name: getSortOrderSelectModelName(column.field) }]\"\n                               (ngModelChange)=\"changeColumnsSortingOrder($event, column.field)\"\n                               [label]=\"headerCellMenuTexts.selectSortOrderLabel\">\n              </adapt-rx-select>\n            </div>\n\n            <div class=\"adapt-table-sort-menu__remove-current-btn\">\n              <button class=\"btn btn-secondary w-100\"\n                      type=\"button\"\n                      (click)=\"onRemoveCurrentFromSorting(column.field)\">\n                {{headerCellMenuTexts.removeCurrentFromSortingBtn}}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"isSortApplied()\"\n           [@menuControlAnimation]\n           class=\"adapt-table-sort-menu__clear-all-btn-wrapper\">\n        <div class=\"adapt-table-sort-menu__clear-all-btn\">\n          <button class=\"btn btn-secondary w-100\"\n                  type=\"button\"\n                  (click)=\"onClearAllSorting()\">\n            {{headerCellMenuTexts.clearAllSortingBtn}}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"]}