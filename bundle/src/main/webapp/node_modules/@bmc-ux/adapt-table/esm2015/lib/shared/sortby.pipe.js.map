{"version":3,"file":"sortby.pipe.js","sourceRoot":"","sources":["../../../../../../libs/adapt-table/src/lib/shared/sortby.pipe.ts"],"names":[],"mappings":"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","sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\nimport {isNil, isString, toNumber, toString} from 'lodash-es';\n\n\nexport type compareFn<T> = (a: T, b: T) => number;\nexport type SortType = 'string' | 'number' | 'boolean';\nexport type SortOrder = 'ASC' | 'DESC';\n\n@Pipe({\n  name: 'sortBy'\n})\nexport class SortByPipe<T> implements PipeTransform {\n  transform(items: T[], comparator: string | compareFn<T>, sortType?: SortType, sortOrder: SortOrder = 'ASC'): T[] {\n    if (isNil(items)) {\n      return items;\n    } else {\n      const itemsCopy = [...items];\n\n      if (isString(comparator)) {\n        switch (sortType) {\n          case 'string':\n            itemsCopy.sort((a, b) => {\n              // undefined and null values goes to bottom\\top\n              if (isNil(a[comparator])) {\n                return sortOrder === 'DESC' ? -1 : 1;\n              } else if (isNil(b[comparator])) {\n                return sortOrder === 'DESC' ? 1 : -1;\n              }\n\n              return sortOrder === 'DESC'\n                ? b[comparator].localeCompare(a[comparator])\n                : a[comparator].localeCompare(b[comparator]);\n            });\n            break;\n\n          case 'number':\n            itemsCopy.sort((a, b) => {\n              // undefined and null values goes to bottom\\top\n              if (isNil(a[comparator])) {\n                return sortOrder === 'DESC' ? -1 : 1;\n              } else if (isNil(b[comparator])) {\n                return sortOrder === 'DESC' ? 1 : -1;\n              }\n\n              return sortOrder === 'DESC'\n                ? b[comparator] - a[comparator]\n                : a[comparator] - b[comparator];\n            });\n            break;\n\n          case 'boolean':\n            itemsCopy.sort((a, b) => {\n              // undefined and null values goes to bottom\\top\n              if (isNil(a[comparator])) {\n                return sortOrder === 'DESC' ? -1 : 1;\n              } else if (isNil(b[comparator])) {\n                return sortOrder === 'DESC' ? 1 : -1;\n              }\n\n              return sortOrder === 'DESC'\n                ? toNumber(!!a[comparator]) - toNumber(!!b[comparator])\n                : toNumber(!!b[comparator]) - toNumber(!!a[comparator]);\n            });\n            break;\n\n          default:\n            itemsCopy.sort((a, b) => {\n              if (isNil(a[comparator])) {\n                return sortOrder === 'DESC' ? -1 : 1;\n              } else if (isNil(b[comparator])) {\n                return sortOrder === 'DESC' ? 1 : -1;\n              } else {\n                if (toString(a[comparator]) < toString(b[comparator])) {\n                  return sortOrder === 'DESC' ? 1 : -1;\n                }\n\n                if (toString(a[comparator]) > toString(b[comparator])) {\n                  return sortOrder === 'DESC' ? -1 : 1;\n                }\n              }\n\n              return 0;\n            });\n        }\n      } else {\n        itemsCopy.sort(comparator);\n      }\n\n      return itemsCopy;\n    }\n  }\n}\n"]}