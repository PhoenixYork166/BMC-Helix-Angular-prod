{"version":3,"file":"scrollable-view.component.js","sourceRoot":"","sources":["../../../../../../../libs/adapt-table/src/lib/primeng-lib/table/scrollable-view.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewChecked,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  ViewChild\n} from '@angular/core';\nimport {CdkVirtualScrollViewport} from '@angular/cdk/scrolling';\nimport {EventManager} from '@angular/platform-browser';\nimport {FilterMetadata} from 'primeng/api';\nimport {Subscription} from 'rxjs';\nimport {DomHandler} from 'primeng/dom';\nimport {AdaptTableComponent} from '../../adapt-table.component';\nimport {AdaptTableClasses, AdaptTableEventSource, ColumnConfig} from '../../adapt-table.models';\nimport {calculateScrollbarWidth} from './utils';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: '[pScrollableView]',\n  template: `\n    <div #scrollHeader\n         [class]=\"tableClasses.TableScrollableHeader\"\n         class=\"ui-widget-header\">\n      <div #scrollHeaderBox class=\"ui-table-scrollable-header-box\">\n        <table\n          [class]=\"tableClasses.TableScrollableHeaderTable\"\n          [ngClass]=\"dt.tableStyleClass\"\n          [ngStyle]=\"dt.tableStyle\">\n          <ng-container\n            *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n          <thead class=\"ui-table-thead\">\n          <ng-container\n            *ngTemplateOutlet=\"frozen ? dt.frozenHeaderTemplate||dt.headerTemplate : dt.headerTemplate; context {$implicit: columns}\"></ng-container>\n          </thead>\n          <tbody class=\"ui-table-tbody\">\n          <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"dt.frozenValue\" [ngForTrackBy]=\"dt.rowTrackBy\">\n            <ng-container\n              *ngTemplateOutlet=\"dt.frozenRowsTemplate; context: {$implicit: rowData, rowIndex: rowIndex, columns: columns}\"></ng-container>\n          </ng-template>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    <ng-container *ngIf=\"!dt.virtualScroll; else virtualScrollTemplate\">\n      <div #scrollBody\n           [class]=\"tableClasses.TableScrollableBody\"\n           [ngStyle]=\"{'height': dt.scrollHeight !== 'flex' ? scrollHeight : undefined}\">\n        <table #scrollTable\n               [ngClass]=\"dt.tableStyleClass\"\n               [ngStyle]=\"dt.tableStyle\"\n               [class]=\"tableClasses.TableScrollableBodyTable\">\n          <ng-container\n            *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n          <tbody class=\"ui-table-tbody\"\n                 [pTableBody]=\"columns\"\n                 [pTableBodyTemplate]=\"frozen ? dt.frozenBodyTemplate||dt.bodyTemplate : dt.bodyTemplate\"\n                 [frozen]=\"frozen\"></tbody>\n        </table>\n        <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n        <adapt-table-infinite-scrolling-loader *ngIf=\"canShowInfiniteScrollingLoader()\"\n                                               [infiniteScrollLoading]=\"dt.loadingMore\"></adapt-table-infinite-scrolling-loader>\n      </div>\n    </ng-container>\n    <ng-template #virtualScrollTemplate>\n      <cdk-virtual-scroll-viewport [itemSize]=\"dt.virtualRowHeight\"\n                                   [style.height]=\"dt.scrollHeight !== 'flex' ? scrollHeight : undefined\"\n                                   [minBufferPx]=\"dt.minBufferPx\"\n                                   [maxBufferPx]=\"dt.maxBufferPx\"\n                                   (scrolledIndexChange)=\"onScrollIndexChange($event)\"\n                                   [ngClass]=\"{'ui-table-virtual-scrollable-body_empty': dt.isEmpty()}\"\n                                   [class]=\"tableClasses.TableVirtualScrollableBody\">\n        <table #scrollTable\n               [ngClass]=\"dt.tableStyleClass\"\n               [ngStyle]=\"dt.tableStyle\"\n               [class]=\"tableClasses.TableScrollableBodyTable\">\n          <ng-container\n            *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n          <tbody class=\"ui-table-tbody\"\n                 [pTableBody]=\"columns\"\n                 [pTableBodyTemplate]=\"frozen ? dt.frozenBodyTemplate||dt.bodyTemplate : dt.bodyTemplate\"\n                 [frozen]=\"frozen\"></tbody>\n        </table>\n        <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n        <adapt-table-infinite-scrolling-loader *ngIf=\"canShowInfiniteScrollingLoader()\"\n                                               [infiniteScrollLoading]=\"dt.loadingMore\"></adapt-table-infinite-scrolling-loader>\n      </cdk-virtual-scroll-viewport>\n    </ng-template>\n    <div #scrollFooter [class]=\"tableClasses.TableScrollableFooter\" class=\"ui-widget-header\">\n      <div #scrollFooterBox class=\"ui-table-scrollable-footer-box\">\n        <table\n          [class]=\"tableClasses.TableScrollableFooterTable\"\n          [ngClass]=\"dt.tableStyleClass\"\n          [ngStyle]=\"dt.tableStyle\">\n          <ng-container\n            *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n          <tfoot class=\"ui-table-tfoot\">\n          <ng-container\n            *ngTemplateOutlet=\"frozen ? dt.frozenFooterTemplate||dt.footerTemplate : dt.footerTemplate; context {$implicit: columns}\"></ng-container>\n          </tfoot>\n        </table>\n      </div>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.Default\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ScrollableView implements AfterViewInit, OnDestroy, AfterViewChecked {\n\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('pScrollableView') columns: ColumnConfig[];\n  @Input() frozen: boolean;\n\n  @ViewChild('scrollHeader', {static: false}) scrollHeaderViewChild: ElementRef;\n  @ViewChild('scrollHeaderBox', {static: false}) scrollHeaderBoxViewChild: ElementRef;\n  @ViewChild('scrollBody', {static: false}) scrollBodyViewChild: ElementRef;\n  @ViewChild('scrollTable', {static: false}) scrollTableViewChild: ElementRef;\n  @ViewChild('scrollFooter', {static: false}) scrollFooterViewChild: ElementRef;\n  @ViewChild('scrollFooterBox', {static: false}) scrollFooterBoxViewChild: ElementRef;\n  @ViewChild('scrollableAligner', {static: false}) scrollableAlignerViewChild: ElementRef;\n  @ViewChild(CdkVirtualScrollViewport, {static: false}) virtualScrollBody: CdkVirtualScrollViewport;\n\n  headerScrollListener: Function;\n  bodyScrollListener: EventListenerOrEventListenerObject;\n  footerScrollListener: Function;\n  frozenSiblingBody: HTMLDivElement;\n  _scrollHeight: string;\n  subscription: Subscription;\n  initialized: boolean;\n  preventBodyScrollPropagation: boolean;\n  virtualScrollTimeout: number;\n  virtualPage: number;\n\n  tableClasses: typeof AdaptTableClasses = AdaptTableClasses;\n\n  private _visualViewportResizeListenerBind: () => void = this._visualViewportResizeListener.bind(this);\n\n  constructor(public dt: AdaptTableComponent,\n              public el: ElementRef,\n              public zone: NgZone,\n              private _eventManager: EventManager) {\n    this.subscription = this.dt.tableService.valueSource$.subscribe(() => {\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => {\n          this.alignScrollBar();\n        }, 50);\n      });\n    });\n\n    this.initialized = false;\n  }\n\n  @Input() get scrollHeight(): string {\n    return this._scrollHeight;\n  }\n\n  set scrollHeight(val: string) {\n    this._scrollHeight = val;\n  }\n\n  ngAfterViewChecked(): void {\n    if (!this.initialized && this.el.nativeElement.offsetParent) {\n      this.alignScrollBar();\n      this.initialized = true;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.dt.scrollableView = this;\n\n    if (!this.frozen) {\n      if (this.dt.frozenColumns || this.dt.frozenBodyTemplate) {\n        DomHandler.addClass(this.el.nativeElement, 'ui-table-unfrozen-view');\n      }\n\n      const frozenView = this.el.nativeElement.previousElementSibling;\n\n      if (frozenView) {\n        if (this.dt.virtualScroll) {\n          this.frozenSiblingBody = DomHandler.findSingle(frozenView, `.${AdaptTableClasses.TableVirtualScrollableBody}`);\n        } else {\n          this.frozenSiblingBody = DomHandler.findSingle(frozenView, `.${AdaptTableClasses.TableScrollableBody}`);\n        }\n      }\n    } else {\n      if (this.scrollableAlignerViewChild && this.scrollableAlignerViewChild.nativeElement) {\n        this.scrollableAlignerViewChild.nativeElement.style.height = DomHandler.calculateScrollbarHeight() + 'px';\n      }\n    }\n\n    this.bindEvents();\n    this.alignScrollBar();\n\n    this._subscribeOnVisualViewportResize();\n  }\n\n  canShowInfiniteScrollingLoader(): boolean {\n    const table = this.dt;\n    const value = table.value;\n\n    return table.enableInfiniteScrolling && table.showLoader && value != null && value.length !== 0 &&\n      !table.hasReachedTotalRecords();\n  }\n\n  bindEvents(): void {\n    this.zone.runOutsideAngular(() => {\n      if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n        this.headerScrollListener = this.onHeaderScroll.bind(this);\n        this.scrollHeaderViewChild.nativeElement.addEventListener('scroll', this.headerScrollListener);\n      }\n\n      if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n        this.footerScrollListener = this.onFooterScroll.bind(this);\n        this.scrollFooterViewChild.nativeElement.addEventListener('scroll', this.footerScrollListener);\n      }\n\n      if (!this.frozen) {\n        this.bodyScrollListener = this.onBodyScroll.bind(this);\n\n        if (this.dt.virtualScroll) {\n          this.virtualScrollBody.getElementRef().nativeElement.addEventListener('scroll', this.bodyScrollListener);\n        } else {\n          this.scrollBodyViewChild.nativeElement.addEventListener('scroll', this.bodyScrollListener);\n        }\n      }\n    });\n  }\n\n  unbindEvents(): void {\n    if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n      this.scrollHeaderViewChild.nativeElement.removeEventListener('scroll', this.headerScrollListener);\n    }\n\n    if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n      this.scrollFooterViewChild.nativeElement.removeEventListener('scroll', this.footerScrollListener);\n    }\n\n    if (this.scrollBodyViewChild && this.scrollBodyViewChild.nativeElement) {\n      this.scrollBodyViewChild.nativeElement.removeEventListener('scroll', this.bodyScrollListener);\n    }\n\n    if (this.virtualScrollBody && this.virtualScrollBody.getElementRef()) {\n      this.virtualScrollBody.getElementRef().nativeElement.removeEventListener('scroll', this.bodyScrollListener);\n    }\n  }\n\n  onHeaderScroll(): void {\n    const scrollLeft = this.scrollHeaderViewChild.nativeElement.scrollLeft;\n\n    this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n\n    if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n      this.scrollFooterViewChild.nativeElement.scrollLeft = scrollLeft;\n    }\n\n    this.preventBodyScrollPropagation = true;\n  }\n\n  onFooterScroll(): void {\n    const scrollLeft = this.scrollFooterViewChild.nativeElement.scrollLeft;\n\n    this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n\n    if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n      this.scrollHeaderViewChild.nativeElement.scrollLeft = scrollLeft;\n    }\n\n    this.preventBodyScrollPropagation = true;\n  }\n\n  onBodyScroll(event: Event): void {\n    if (this.preventBodyScrollPropagation) {\n      this.preventBodyScrollPropagation = false;\n\n      return;\n    }\n\n    if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n      if (this.dt.isRtl) {\n        this.scrollHeaderBoxViewChild.nativeElement.style.marginRight = (event.target as Element).scrollLeft + 'px';\n      } else {\n        this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft = -(event.target as Element).scrollLeft + 'px';\n      }\n    }\n\n    if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n      this.scrollFooterBoxViewChild.nativeElement.style.marginLeft = -(event.target as Element).scrollLeft + 'px';\n    }\n\n    if (this.frozenSiblingBody) {\n      this.frozenSiblingBody.scrollTop = (event.target as Element).scrollTop;\n    }\n  }\n\n  // Override\n  hasVerticalOverflow(): boolean {\n    const scrollTablePositionHeight = this.scrollTableViewChild.nativeElement.getBoundingClientRect().height;\n    const scrollBodyPositionHeight = this.dt.virtualScroll\n      ? this.virtualScrollBody.getViewportSize()\n      : this.scrollBodyViewChild.nativeElement.getBoundingClientRect().height;\n\n    return scrollTablePositionHeight > scrollBodyPositionHeight;\n  }\n\n  alignScrollBar(recalculateScrollBarWidth?: boolean): void {\n    if (!this.frozen) {\n      const scrollBarWidth = this.hasVerticalOverflow() ? calculateScrollbarWidth(null, recalculateScrollBarWidth) : 0;\n\n      if (this.dt.isRtl) {\n        this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft = scrollBarWidth + 'px';\n      } else {\n        this.scrollHeaderBoxViewChild.nativeElement.style.marginRight = scrollBarWidth + 'px';\n      }\n\n      if (this.scrollFooterBoxViewChild && this.scrollFooterBoxViewChild.nativeElement) {\n        this.scrollFooterBoxViewChild.nativeElement.style.marginRight = scrollBarWidth + 'px';\n      }\n    }\n    this.initialized = false;\n  }\n\n  ngOnDestroy(): void {\n    this.unbindEvents();\n\n    this.frozenSiblingBody = null;\n\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n\n    if (window.visualViewport) {\n      window.visualViewport.removeEventListener('resize', this._visualViewportResizeListenerBind);\n    }\n\n    this.initialized = false;\n  }\n\n  getPageCount(): number {\n    const dataToRender = this.dt.filteredValue || this.dt.value;\n    const dataLength = dataToRender ? dataToRender.length : 0;\n\n    return Math.ceil(dataLength / this.dt.rows);\n  }\n\n  onScrollIndexChange(index: number): void {\n    // In case we don't want to emit onLazyLoad event on init\n    if (!this.dt.lazyLoadOnInit && index === 0) {\n      return;\n    }\n\n    if (this.dt.lazy) {\n      if (this.virtualScrollTimeout) {\n        clearTimeout(this.virtualScrollTimeout);\n      }\n\n      this.virtualScrollTimeout = window.setTimeout(() => {\n        const page = Math.floor(index / this.dt.rows);\n        const virtualScrollOffset = page === 0 ? 0 : (page - 1) * this.dt.rows;\n        const virtualScrollChunkSize = page === 0 ? this.dt.rows * 2 : this.dt.rows * 3;\n\n        if (page !== this.virtualPage) {\n          this.virtualPage = page;\n          this.dt.onLazyLoad.emit({\n            eventSource: AdaptTableEventSource.LoadMore,\n            first: virtualScrollOffset,\n            rows: virtualScrollChunkSize,\n            sortField: this.dt.sortField,\n            sortOrder: this.dt.sortOrder,\n            filters: this.dt.filters,\n            globalFilter: this.dt.filters && this.dt.filters.global ? (this.dt.filters.global as FilterMetadata).value : null,\n            multiSortMeta: this.dt.multiSortMeta,\n            loadMore: false,\n            infiniteScrollingFirst: null\n          });\n        }\n      }, this.dt.virtualScrollDelay);\n    }\n  }\n\n  scrollToVirtualIndex(index: number): void {\n    if (this.virtualScrollBody) {\n      this.virtualScrollBody.scrollToIndex(index);\n    }\n  }\n\n  scrollTo(options: ScrollToOptions): void {\n    if (this.virtualScrollBody) {\n      this.virtualScrollBody.scrollTo(options);\n    } else {\n      if (this.scrollBodyViewChild.nativeElement.scrollTo) {\n        this.scrollBodyViewChild.nativeElement.scrollTo(options);\n      } else {\n        this.scrollBodyViewChild.nativeElement.scrollLeft = options.left;\n        this.scrollBodyViewChild.nativeElement.scrollTop = options.top;\n      }\n    }\n  }\n\n  private _subscribeOnVisualViewportResize(): void {\n    // Firefox Responsive Design Mode have Viewport Zooming disabled by default\n    if (window.visualViewport) {\n      window.visualViewport.addEventListener('resize', this._visualViewportResizeListenerBind);\n    }\n  }\n\n  private _visualViewportResizeListener(): void {\n    this.zone.runOutsideAngular(() => {\n      this.alignScrollBar(true);\n    });\n  }\n}\n"]}