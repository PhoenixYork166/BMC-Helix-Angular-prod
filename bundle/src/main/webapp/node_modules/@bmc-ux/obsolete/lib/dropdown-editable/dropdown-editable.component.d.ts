import { ElementRef, EventEmitter, NgZone, OnInit } from '@angular/core';
import { AdaptDropdownEditableSize, AdaptDropdownMobileView, AdaptTranslateService, KeyValueObject } from '@bmc-ux/adapt-angular';
import { AdaptRadarGenericDirective, AdaptRadarService } from '@bmc-ux/adapt-radar';
import * as i0 from "@angular/core";
export declare class AdaptDropDownEditableComponent extends AdaptRadarGenericDirective implements OnInit {
    private ts;
    private _ngZone;
    model: string | number;
    customItemModel: string | number;
    editMode: boolean;
    sizeVariants: typeof AdaptDropdownEditableSize;
    defaultTexts: {
        moreTitle?: string;
        label?: string;
    };
    set value(v: string | number);
    get value(): string | number;
    width: string;
    readonly: boolean;
    moreTitle: string;
    label: string;
    items: any[];
    size: AdaptDropdownEditableSize;
    mobileView: AdaptDropdownMobileView;
    customValueOnTop: boolean;
    readonly valueChange: EventEmitter<string | number>;
    customInput: ElementRef<HTMLInputElement>;
    constructor(ts: AdaptTranslateService, _ngZone: NgZone, _adaptRadarService: AdaptRadarService, _elem: ElementRef<HTMLElement>);
    ngOnInit(): void;
    setDefaultTexts(translation: KeyValueObject): void;
    setModel(item: string | number): void;
    enterEditMode(): void;
    exitFocusMode(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptDropDownEditableComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptDropDownEditableComponent, "adapt-dropdown-editable", never, { "value": "value"; "width": "width"; "readonly": "readonly"; "moreTitle": "moreTitle"; "label": "label"; "items": "items"; "size": "size"; "mobileView": "mobileView"; "customValueOnTop": "customValueOnTop"; }, { "valueChange": "valueChange"; }, never, never>;
}
