import { AfterViewInit, ElementRef, EventEmitter, NgZone, OnChanges, QueryList, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';
import { AdaptTranslateService, TooltipPlacement } from '@bmc-ux/adapt-angular';
import { AdaptRadarGenericDirective, AdaptRadarService } from '@bmc-ux/adapt-radar';
import * as i0 from "@angular/core";
export declare class AdaptTimeSlotComponent extends AdaptRadarGenericDirective implements AfterViewInit, OnChanges {
    private _renderer;
    private ts;
    private _ngZone;
    /**
     * Tooltip icon and additional text for it.
     */
    tooltipIcon: string;
    tooltipText: string;
    /**
     * Popover icon and additional content for it.
     */
    popoverIcon: string;
    popoverPlacement: TooltipPlacement;
    popoverTriggers: string;
    popoverContent: string | TemplateRef<any>;
    readonly selectedSlotChanged: EventEmitter<{
        index: any;
        slot: any;
    }>;
    button: QueryList<ElementRef>;
    get label(): string;
    set label(v: string);
    get slot(): any[];
    set slot(v: any[]);
    get selectedSlot(): any;
    set selectedSlot(slot: any);
    private _label;
    private _slot;
    private _selectedSlot;
    constructor(_renderer: Renderer2, ts: AdaptTranslateService, _ngZone: NgZone, _adaptRadarService: AdaptRadarService, _elem: ElementRef<HTMLElement>);
    isSelected(index: number): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private _setSlotMaxWidth;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptTimeSlotComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptTimeSlotComponent, "adapt-time-slot", never, { "tooltipIcon": "tooltipIcon"; "tooltipText": "tooltipText"; "popoverIcon": "popoverIcon"; "popoverPlacement": "popoverPlacement"; "popoverTriggers": "popoverTriggers"; "popoverContent": "popoverContent"; "label": "label"; "slot": "slot"; "selectedSlot": "selectedSlot"; }, { "selectedSlotChanged": "selected-slot-changed"; }, never, never>;
}
