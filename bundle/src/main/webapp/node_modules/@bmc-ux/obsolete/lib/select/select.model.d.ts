import { ColorVariantType, Placement } from '@bmc-ux/adapt-angular';
export declare enum SelectModelFormat {
    number = "number",
    object = "object"
}
export interface SelectOption {
    id: any;
    name: string;
    disabled?: boolean;
    icon?: string;
    iconType?: ColorVariantType | 'default' | 'secondary' | 'tertiary' | 'default-inverse';
    badgeText?: string;
    badgeType?: ColorVariantType | 'secondary';
}
export interface SelectObjectTypeModel {
    id: number;
    name: string;
}
export interface SelectSettings {
    pullRight?: boolean;
    enableSearch?: boolean;
    checkedStyle?: 'checkbox' | 'dpl-iconfont' | 'simple';
    buttonClasses?: string;
    selectionLimit?: number;
    closeOnSelect?: boolean;
    autoUnselect?: boolean;
    showCheckAll?: boolean;
    showUncheckAll?: boolean;
    showCheckedAll?: boolean;
    showTooltip?: boolean;
    dynamicTitleMaxItems?: number;
    maxHeight?: string;
    hideLabel?: boolean;
    cancelBtn?: boolean;
    doneBtn?: boolean;
    titleMobile?: boolean;
    fullWidth?: boolean;
    zIndex?: number;
    placement?: Placement;
    appendToBody?: boolean;
    appendTo?: HTMLElement | 'body';
    positionTo?: HTMLElement;
    enablePositionTracking?: boolean;
    positionTrackingIntervalMs?: number;
    truncateText?: boolean;
    containerWidth?: number;
    emptyOption?: boolean;
    pageSize?: number;
    stickyHeader?: boolean;
    modelFormat?: SelectModelFormat;
}
export interface SelectTexts {
    checkAll?: string;
    checkAllFilter?: string;
    uncheckAll?: string;
    uncheckAllFilter?: string;
    filteredTo?: string;
    checkedAll?: string;
    checked?: string;
    checkedPlural?: string;
    searchPlaceholder?: string;
    defaultTitle?: string;
    headerText?: string;
    headerTextSingle?: string;
    notFound?: string;
    requiredText?: string;
    cancelBtnText?: string;
    doneBtnText?: string;
    titleMobileText?: string;
    numberOptionsText?: string;
    loadingText?: string;
    emptyOptionText?: string;
    loadMore?: string;
    emptyStateTitle?: string;
    emptyStateDescription?: string;
}
