(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/forms'), require('@angular/core'), require('@angular/animations'), require('lodash-es'), require('@angular/cdk/keycodes'), require('@bmc-ux/adapt-angular'), require('@bmc-ux/adapt-radar'), require('@bmc-ux/dpl-iconfont'), require('rxjs/operators'), require('moment-es6'), require('rxjs'), require('@angular/cdk/bidi'), require('@angular/cdk/drag-drop'), require('@angular/router'), require('@angular/platform-browser'), require('@angular/cdk/scrolling')) :
    typeof define === 'function' && define.amd ? define('@bmc-ux/adapt-obsolete', ['exports', '@angular/common', '@angular/forms', '@angular/core', '@angular/animations', 'lodash-es', '@angular/cdk/keycodes', '@bmc-ux/adapt-angular', '@bmc-ux/adapt-radar', '@bmc-ux/dpl-iconfont', 'rxjs/operators', 'moment-es6', 'rxjs', '@angular/cdk/bidi', '@angular/cdk/drag-drop', '@angular/router', '@angular/platform-browser', '@angular/cdk/scrolling'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["bmc-ux"] = global["bmc-ux"] || {}, global["bmc-ux"]["adapt-obsolete"] = {}), global.ng.common, global.ng.forms, global.ng.core, global.ng.animations, global.lodashEs, global.ng.cdk.keycodes, global.i1, global.i2, global.dplIconfont, global.rxjs.operators, global.moment, global.rxjs, global.ng.cdk.bidi, global.ng.cdk.dragDrop, global.ng.router, global.ng.platformBrowser, global.ng.cdk.scrolling));
})(this, (function (exports, i3, i6, i0, i1$1, lodashEs, keycodes, i1, i2, dplIconfont, operators, moment, rxjs, i2$1, i5, i3$1, i4, i3$2) { 'use strict';

    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var moment__default = /*#__PURE__*/_interopDefaultLegacy(moment);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i3__namespace$1 = /*#__PURE__*/_interopNamespace(i3$1);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i3__namespace$2 = /*#__PURE__*/_interopNamespace(i3$2);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var _c0$p = ["container"];
    var _c1$j = ["input"];
    var _c2$h = ["prefixEl"];
    var _c3$d = ["suffixEl"];
    var _c4$a = ["mobileActionsContainer"];
    function AdaptCounterComponent_adapt_rx_control_label_6_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-rx-control-label", 14);
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("for", ctx_r1.id)("label", ctx_r1.label)("requiredLabel", ctx_r1.requiredLabel)("showRequiredLabel", ctx_r1.required)("tooltip", ctx_r1.tooltipConfig);
        }
    }
    function AdaptCounterComponent_div_12_Template(rf, ctx) {
        if (rf & 1) {
            var _r11_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 15, 16);
            i0__namespace.ɵɵlistener("mouseenter", function AdaptCounterComponent_div_12_Template_div_mouseenter_0_listener() { i0__namespace.ɵɵrestoreView(_r11_1); var _r8 = i0__namespace.ɵɵreference(1); var _r9 = i0__namespace.ɵɵreference(4); var ctx_r10 = i0__namespace.ɵɵnextContext(); return ctx_r10.toggleTooltip(_r8, _r9); })("mouseout", function AdaptCounterComponent_div_12_Template_div_mouseout_0_listener() { i0__namespace.ɵɵrestoreView(_r11_1); var _r8 = i0__namespace.ɵɵreference(1); var _r9 = i0__namespace.ɵɵreference(4); var ctx_r12 = i0__namespace.ɵɵnextContext(); return ctx_r12.toggleTooltip(_r8, _r9); });
            i0__namespace.ɵɵtext(2, "\n      ");
            i0__namespace.ɵɵelementStart(3, "span", 17, 18);
            i0__namespace.ɵɵtext(5);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r2 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵpropertyInterpolate("adaptTooltip", ctx_r2.prefix);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true);
            i0__namespace.ɵɵadvance(5);
            i0__namespace.ɵɵtextInterpolate(ctx_r2.prefix);
        }
    }
    function AdaptCounterComponent_div_21_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 19);
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵelement(2, "span", 20);
            i0__namespace.ɵɵtext(3, "\n        ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            i0__namespace.ɵɵproperty("@errorToggleAnimation", undefined);
        }
    }
    function AdaptCounterComponent_div_24_button_11_Template(rf, ctx) {
        if (rf & 1) {
            var _r17_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 29);
            i0__namespace.ɵɵlistener("click", function AdaptCounterComponent_div_24_button_11_Template_button_click_0_listener() { i0__namespace.ɵɵrestoreView(_r17_1); var ctx_r16 = i0__namespace.ɵɵnextContext(2); return ctx_r16.increaseMobile(); })("@highlightMobileIncrease.start", function AdaptCounterComponent_div_24_button_11_Template_button_animation_highlightMobileIncrease_start_0_listener($event) { i0__namespace.ɵɵrestoreView(_r17_1); var ctx_r18 = i0__namespace.ɵɵnextContext(2); return ctx_r18.onAnimationIncreaseStart($event); })("@highlightMobileIncrease.done", function AdaptCounterComponent_div_24_button_11_Template_button_animation_highlightMobileIncrease_done_0_listener($event) { i0__namespace.ɵɵrestoreView(_r17_1); var ctx_r19 = i0__namespace.ɵɵnextContext(2); return ctx_r19.onAnimationIncreaseDone($event); });
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r14 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵstyleProp("pointer-events", ctx_r14.increaseAnimationDone ? "all" : "none");
            i0__namespace.ɵɵproperty("disabled", !ctx_r14.increaseAllowed())("@highlightMobileIncrease", undefined);
            i0__namespace.ɵɵattribute("aria-label", ctx_r14.defaultErrors.increase)("data-testid", ctx_r14.testID + "_plus");
        }
    }
    function AdaptCounterComponent_div_24_button_13_Template(rf, ctx) {
        if (rf & 1) {
            var _r21_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 30);
            i0__namespace.ɵɵlistener("click", function AdaptCounterComponent_div_24_button_13_Template_button_click_0_listener() { i0__namespace.ɵɵrestoreView(_r21_1); var ctx_r20 = i0__namespace.ɵɵnextContext(2); return ctx_r20.decreaseMobile(); })("@highlightMobileDecrease.start", function AdaptCounterComponent_div_24_button_13_Template_button_animation_highlightMobileDecrease_start_0_listener($event) { i0__namespace.ɵɵrestoreView(_r21_1); var ctx_r22 = i0__namespace.ɵɵnextContext(2); return ctx_r22.onAnimationDecreaseStart($event); })("@highlightMobileDecrease.done", function AdaptCounterComponent_div_24_button_13_Template_button_animation_highlightMobileDecrease_done_0_listener($event) { i0__namespace.ɵɵrestoreView(_r21_1); var ctx_r23 = i0__namespace.ɵɵnextContext(2); return ctx_r23.onAnimationDecreaseDone($event); });
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r15 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵstyleProp("pointer-events", ctx_r15.decreaseAnimationDone ? "all" : "none");
            i0__namespace.ɵɵproperty("disabled", !ctx_r15.decreaseAllowed())("@highlightMobileDecrease", undefined);
            i0__namespace.ɵɵattribute("aria-label", ctx_r15.defaultErrors.decrease)("data-testid", ctx_r15.testID + "_minus");
        }
    }
    function AdaptCounterComponent_div_24_Template(rf, ctx) {
        if (rf & 1) {
            var _r25_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 21);
            i0__namespace.ɵɵlistener("click", function AdaptCounterComponent_div_24_Template_div_click_0_listener() { i0__namespace.ɵɵrestoreView(_r25_1); var ctx_r24 = i0__namespace.ɵɵnextContext(); return ctx_r24.checkForMobileSpinners(); });
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵelementStart(2, "button", 22);
            i0__namespace.ɵɵlistener("click", function AdaptCounterComponent_div_24_Template_button_click_2_listener() { i0__namespace.ɵɵrestoreView(_r25_1); var ctx_r26 = i0__namespace.ɵɵnextContext(); return ctx_r26.increaseCounter(); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(3, "\n        ");
            i0__namespace.ɵɵelementStart(4, "button", 23);
            i0__namespace.ɵɵlistener("click", function AdaptCounterComponent_div_24_Template_button_click_4_listener() { i0__namespace.ɵɵrestoreView(_r25_1); var ctx_r27 = i0__namespace.ɵɵnextContext(); return ctx_r27.decreaseCounter(); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(5, "\n\n        ");
            i0__namespace.ɵɵelementStart(6, "div", 24, 25);
            i0__namespace.ɵɵtext(8, "\n          ");
            i0__namespace.ɵɵelementStart(9, "div", 26);
            i0__namespace.ɵɵtext(10, "\n            ");
            i0__namespace.ɵɵtemplate(11, AdaptCounterComponent_div_24_button_11_Template, 1, 6, "button", 27);
            i0__namespace.ɵɵtext(12, "\n            ");
            i0__namespace.ɵɵtemplate(13, AdaptCounterComponent_div_24_button_13_Template, 1, 6, "button", 28);
            i0__namespace.ɵɵtext(14, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(15, "\n        ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(16, "\n      ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r5 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵclassProp("focused", ctx_r5.isMobile && ctx_r5.isSpinnerMobile);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("@highlightArrow", ctx_r5.animateArrowUp)("disabled", ctx_r5.context.disabled || !ctx_r5.increaseAllowed());
            i0__namespace.ɵɵattribute("aria-label", ctx_r5.defaultErrors.increase)("data-testid", ctx_r5.testID + "_plus");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("@highlightArrow", ctx_r5.animateArrowDown)("disabled", ctx_r5.context.disabled || !ctx_r5.decreaseAllowed());
            i0__namespace.ɵɵattribute("aria-label", ctx_r5.defaultErrors.decrease)("data-testid", ctx_r5.testID + "_minus");
            i0__namespace.ɵɵadvance(7);
            i0__namespace.ɵɵproperty("ngIf", ctx_r5.isSpinnerMobile);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r5.isSpinnerMobile);
        }
    }
    function AdaptCounterComponent_div_27_Template(rf, ctx) {
        if (rf & 1) {
            var _r31_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 31, 32);
            i0__namespace.ɵɵlistener("mouseenter", function AdaptCounterComponent_div_27_Template_div_mouseenter_0_listener() { i0__namespace.ɵɵrestoreView(_r31_1); var _r28 = i0__namespace.ɵɵreference(1); var _r29 = i0__namespace.ɵɵreference(4); var ctx_r30 = i0__namespace.ɵɵnextContext(); return ctx_r30.toggleTooltip(_r28, _r29); })("mouseout", function AdaptCounterComponent_div_27_Template_div_mouseout_0_listener() { i0__namespace.ɵɵrestoreView(_r31_1); var _r28 = i0__namespace.ɵɵreference(1); var _r29 = i0__namespace.ɵɵreference(4); var ctx_r32 = i0__namespace.ɵɵnextContext(); return ctx_r32.toggleTooltip(_r28, _r29); });
            i0__namespace.ɵɵtext(2, "\n      ");
            i0__namespace.ɵɵelementStart(3, "span", 17, 33);
            i0__namespace.ɵɵtext(5);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r6 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵpropertyInterpolate("adaptTooltip", ctx_r6.suffix);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true);
            i0__namespace.ɵɵadvance(5);
            i0__namespace.ɵɵtextInterpolate(ctx_r6.suffix);
        }
    }
    function AdaptCounterComponent_div_31_p_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "p", 36);
            i0__namespace.ɵɵtext(1, "\n      ");
            i0__namespace.ɵɵelementStart(2, "b");
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵelementStart(4, "span");
            i0__namespace.ɵɵtext(5);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var e_r34 = ctx.$implicit;
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate1("", e_r34.name, " ");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate(e_r34.text);
        }
    }
    function AdaptCounterComponent_div_31_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 34);
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵtemplate(2, AdaptCounterComponent_div_31_p_2_Template, 7, 2, "p", 35);
            i0__namespace.ɵɵtext(3, "\n  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r7 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("@validationFeedbackAnimation", undefined);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngForOf", ctx_r7.context.errors);
        }
    }
    var _c5$8 = function (a0) { return { "adapt-counter__wrp--disabled": a0 }; };
    // eslint-disable-next-line @typescript-eslint/no-var-requires
    var bigNumber = require('bignumber.js');
    var AdaptCounterComponent = /** @class */ (function (_super) {
        __extends(AdaptCounterComponent, _super);
        function AdaptCounterComponent(_renderer, _injector, _deviceDetection, ts, _adaptRadarService, _elem) {
            var _this = _super.call(this, _injector, ts, _adaptRadarService, _elem, i1.AdaptRadarAngularCustomEventName.AdaptCounter) || this;
            _this._renderer = _renderer;
            _this._injector = _injector;
            _this._deviceDetection = _deviceDetection;
            // Need for using inherited properties in the template
            _this.context = _this;
            _this.animateArrowUp = false;
            _this.animateArrowDown = false;
            _this.isCompact = false;
            _this.increaseAnimationDone = false;
            _this.decreaseAnimationDone = false;
            _this.focused = false;
            _this.isMobile = false;
            _this.isSpinnerMobile = false;
            _this.defaultErrors = {};
            /**
             * Label icon with a tooltip or popover
             */
            _this.tooltipConfig = null;
            _this.label = '';
            _this.allowScientific = true;
            _this.step = 1;
            _this.width = '100%';
            _this.preventInnerValidation = false;
            // eslint-disable-next-line @angular-eslint/no-input-rename
            _this.ariaDescribedBy = null;
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.focus = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.blur = new i0.EventEmitter();
            _this.valueChanged = new i0.EventEmitter();
            _this._patterns = {
                scientific: /^-?(\d+|\d+\.\d+|\.\d+)([eE][-+]?\d+)?$/g,
                normal: /^-?(\d+|\d+\.\d+|\.\d+)?$/g
            };
            _this._numberPatters = /^[+-]?(\d+|\.\d+|\d+\.\d+|\d+\.)(e[+-]?\d+)?$/;
            _this._minWidthToMobile = 200;
            _this._isValidNumber = true;
            _this.propagateChange = function () {
                return;
            };
            _this._onTouchedCallback = function () {
                return;
            };
            _this.id = "c-" + AdaptCounterComponent.id;
            AdaptCounterComponent.id++;
            _this.setDefaultTexts(ts.getCurrentLanguage());
            _this.currentLocale = ts.getCurrentLocale();
            return _this;
        }
        Object.defineProperty(AdaptCounterComponent.prototype, "max", {
            get: function () {
                return !!this._max || this._max === 0 ? this._max : Number.MAX_SAFE_INTEGER;
            },
            set: function (value) {
                this._max = this._isSafeNumber(value) ? parseFloat(value) : bigNumber(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptCounterComponent.prototype, "min", {
            get: function () {
                return !!this._min || this._min === 0 ? this._min : Number.MIN_SAFE_INTEGER;
            },
            set: function (value) {
                this._min = this._isSafeNumber(value) ? parseFloat(value) : bigNumber(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptCounterComponent.prototype, "allowIntegerOnly", {
            get: function () {
                return this._integerOnly;
            },
            set: function (value) {
                this._integerOnly = this.allowScientific ? false : value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptCounterComponent.prototype, "hostClasses", {
            get: function () {
                return [
                    this.mainCls,
                    'adapt-counter',
                    this.isErrorExist ? 'is-error' : '',
                    this.suppressIcons ? 'prevent-success-icon' : ''
                ].join(' ');
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptCounterComponent.prototype, "isErrorExist", {
            get: function () {
                return Boolean(this.errors.length);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptCounterComponent.prototype, "customClass", {
            get: function () {
                var customCls = '';
                switch (this.size) {
                    case 'small':
                        customCls = 'form-control-sm';
                        break;
                    case 'large':
                        customCls = 'form-control-lg';
                        break;
                }
                return customCls;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptCounterComponent.prototype, "inputSize", {
            get: function () {
                return (this._value && this._value.toString().length) || 1;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptCounterComponent.prototype, "value", {
            get: function () {
                return this._value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptCounterComponent.prototype, "_isTruncatedPrefix", {
            get: function () {
                if (i1.isUndefined(this.prefixEl)) {
                    return false;
                }
                var _a = this.prefixEl.nativeElement, scrollWidth = _a.scrollWidth, offsetWidth = _a.offsetWidth;
                return scrollWidth > offsetWidth;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptCounterComponent.prototype, "_isTruncatedSuffix", {
            get: function () {
                if (i1.isUndefined(this.suffixEl)) {
                    return false;
                }
                var _a = this.suffixEl.nativeElement, scrollWidth = _a.scrollWidth, offsetWidth = _a.offsetWidth;
                return scrollWidth > offsetWidth;
            },
            enumerable: false,
            configurable: true
        });
        AdaptCounterComponent.prototype.ngOnInit = function () {
            var _this = this;
            _super.prototype.ngOnInit.call(this);
            this.mainCls = this.mainCls + ' form-group';
            this.isMobile = this._deviceDetection.isMobile();
            _super.prototype.initControl.call(this);
            this.pattern = this.allowScientific ? this._patterns.scientific : this._patterns.normal;
            if (this.step % 1 !== 0) {
                // If step is not an integer then extract the length of the decimal part
                this.precision = this.step.toString().split(/[.]/)[1].length;
            }
            var _loop_1 = function (prop) {
                if (prop) {
                    this_1.overrideBuildInValidatorMessage(prop, function () { return _this._customErrorTexts[prop]; });
                }
            };
            var this_1 = this;
            for (var prop in this._customErrorTexts) {
                _loop_1(prop);
            }
            if (this.context.tooltipIconCls && !this.context.popoverIcon) {
                this.tooltipConfig = {
                    iconName: this.context.tooltipIconCls,
                    content: this.context.tooltipText,
                    placement: 'top',
                    popoverMode: false
                };
            }
            else if (this.context.popoverIcon) {
                this.tooltipConfig = {
                    iconName: this.context.popoverIcon,
                    content: this.popoverContent,
                    placement: this.context.popoverPlacement,
                    popoverMode: true,
                    popoverTriggers: this.context.popoverTriggers
                };
            }
        };
        AdaptCounterComponent.prototype.ngAfterViewInit = function () {
            _super.prototype.ngAfterViewInit.call(this);
            this._renderer.setStyle(this.containerEl.nativeElement, 'width', this.width);
        };
        AdaptCounterComponent.prototype.setDefaultTexts = function (translation) {
            this.defaultErrors.decrease = translation['adapt.counter.decrease'];
            this.defaultErrors.increase = translation['adapt.counter.increase'];
            this.defaultErrors.range = translation['adapt.counter.error.range'];
            this.defaultErrors.rangeName = translation['adapt.counter.error.rangeName'];
            this.defaultErrors.invalid = translation['adapt.counter.error.invalid'];
            this.defaultErrors.invalidName = translation['adapt.counter.error.invalidName'];
        };
        AdaptCounterComponent.prototype.writeValue = function (value) {
            this._setValue(value, false);
            this.counterValue = this._value && this.pattern.test(value) ? value : this._value;
        };
        AdaptCounterComponent.prototype.registerOnChange = function (fn) {
            this.propagateChange = fn;
        };
        AdaptCounterComponent.prototype.registerOnTouched = function (fn) {
            this._onTouchedCallback = fn;
        };
        AdaptCounterComponent.prototype.setDisabledState = function (isDisabled) {
            this._disabled = isDisabled;
            this._closeMobileSpinners();
        };
        AdaptCounterComponent.prototype.checkForMobileSpinners = function () {
            if (this.isMobile && !this.disabled) {
                this._openMobileSpinners();
            }
        };
        AdaptCounterComponent.prototype.increaseCounter = function (animationNeeded) {
            var _this = this;
            if (this.isMobile) {
                return;
            }
            this._onTouchedCallback();
            this.increase();
            if (animationNeeded) {
                var timer_1 = setTimeout(function () {
                    _this.animateArrowUp = false;
                    clearTimeout(timer_1);
                }, parseFloat(i1.ANIMATION_DURATION.fast) * 1000);
                this.animateArrowUp = true;
            }
        };
        AdaptCounterComponent.prototype.decreaseCounter = function (animationNeeded) {
            var _this = this;
            if (this.isMobile) {
                return;
            }
            this._onTouchedCallback();
            this.decrease();
            if (animationNeeded) {
                var timer_2 = setTimeout(function () {
                    _this.animateArrowDown = false;
                    clearTimeout(timer_2);
                }, parseFloat(i1.ANIMATION_DURATION.fast) * 1000);
                this.animateArrowDown = true;
            }
        };
        AdaptCounterComponent.prototype.increaseMobile = function () {
            this._onTouchedCallback();
            this.increase();
        };
        AdaptCounterComponent.prototype.decreaseMobile = function () {
            this._onTouchedCallback();
            this.decrease();
        };
        AdaptCounterComponent.prototype.increase = function () {
            var newValue = this.calculateNewValue(i1.CounterOperations.INCREASE);
            if (newValue === null) { // implicit check
                if (this.min < 0 && this.max > 0) {
                    this._setValue(0, true);
                }
                else {
                    this._setValue(this.min, true);
                }
            }
            else if (newValue < this.min) {
                this._setValue(this.min, true);
            }
            else {
                this._setValue(newValue > this.max ? this.max : newValue, true);
            }
            this.valueChanged.emit(this.value);
            this.counterValue = this.value;
        };
        AdaptCounterComponent.prototype.decrease = function () {
            var newValue = this.calculateNewValue(i1.CounterOperations.DECREASE);
            if (newValue === null) { // implicit check
                if (this.min < 0 && this.max > 0) {
                    this._setValue(0, true);
                }
                else {
                    this._setValue(this.max, true);
                }
            }
            else if (newValue > this.max) {
                this._setValue(this.max, true);
            }
            else {
                this._setValue(newValue < this.min ? this.min : newValue, true);
            }
            this.valueChanged.emit(this.value);
            this.counterValue = this.value;
        };
        AdaptCounterComponent.prototype.calculateNewValue = function (operation) {
            var counterNumValue = parseFloat(this.counterValue);
            if (isNaN(counterNumValue)) {
                return null;
            }
            var valuePrecision = !this.precision && counterNumValue % 1 !== 0
                ? counterNumValue.toString().split(/[.]/)[1].length
                : this.precision;
            switch (operation) {
                case i1.CounterOperations.INCREASE:
                    return this._toFixed(counterNumValue + this.step, valuePrecision);
                case i1.CounterOperations.DECREASE:
                    return this._toFixed(counterNumValue - this.step, valuePrecision);
            }
        };
        AdaptCounterComponent.prototype.increaseAllowed = function () {
            if (isNaN(this.value)) {
                return true;
            }
            return lodashEs.isNil(this.value) || this.value < this.max;
        };
        AdaptCounterComponent.prototype.decreaseAllowed = function () {
            if (isNaN(this.value)) {
                return true;
            }
            return lodashEs.isNil(this.value) || this.value > this.min;
        };
        AdaptCounterComponent.prototype.validate = function (c) {
            if (this.preventInnerValidation) {
                return;
            }
            if (!lodashEs.isNil(c.value)) {
                if (!this._isValidNumber) {
                    return {
                        counterError: this._customErrorTexts.invalidNumberError || {
                            name: this.defaultErrors.invalidName,
                            text: this.defaultErrors.invalid,
                        }
                    };
                }
                var hasRangeError = bigNumber.isBigNumber(c.value) ?
                    (bigNumber(c.value).lt(this.min) || bigNumber(c.value).gt(this.max)) :
                    (c.value < this.min || c.value > this.max) || isNaN(c.value);
                if (hasRangeError) {
                    return {
                        counterError: this._customErrorTexts.rangeError || {
                            name: this.defaultErrors.rangeName,
                            text: i1.formatString(this.defaultErrors.range, this.min.toLocaleString(this.currentLocale), this.max.toLocaleString(this.currentLocale))
                        }
                    };
                }
            }
            return null;
        };
        // TODO: Refactor this if possible
        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
        AdaptCounterComponent.prototype.onInput = function (input) {
            this._setValue(input.value, true);
            this.counterValue = input.value;
            this.valueChanged.emit(!!this.value || this.value === 0 ? this.value : null);
        };
        AdaptCounterComponent.prototype.onKeyPress = function (e) {
            if (this.disabled || this.readonly) {
                return;
            }
            var regExp = new RegExp(this.allowScientific
                ? /^[-+]?\.?[0-9]?[eE]?$/g
                : this.allowIntegerOnly ? /^[-+]?\d?$/g : /^[-+]?\.?[0-9]?$/g);
            var isValidChar = !!regExp.test(e.key);
            if (!isValidChar) {
                e.preventDefault();
                return;
            }
        };
        AdaptCounterComponent.prototype.onFocus = function () {
            this.focused = true;
            this.focus.emit();
        };
        AdaptCounterComponent.prototype.onBlur = function () {
            this.focused = false;
            this.blur.emit();
            this._onTouchedCallback();
            this.propagateChange();
        };
        AdaptCounterComponent.prototype.onKeyDown = function (e) {
            if (this.disabled || this.readonly) {
                return;
            }
            var keyCode = i1.getEventKeyCode(e);
            if (keyCode === keycodes.UP_ARROW || keyCode === keycodes.DOWN_ARROW) {
                e.preventDefault();
                switch (keyCode) {
                    case keycodes.UP_ARROW: {
                        if (this.increaseAllowed()) {
                            this.increaseCounter(true);
                        }
                        break;
                    }
                    case keycodes.DOWN_ARROW: {
                        if (this.decreaseAllowed()) {
                            this.decreaseCounter(true);
                        }
                        break;
                    }
                }
            }
        };
        AdaptCounterComponent.prototype.toggleTooltip = function (tooltip, el) {
            tooltip.delay = 0;
            if (!tooltip.isOpen() && el.offsetWidth >= el.scrollWidth) {
                return;
            }
            if (tooltip.isOpen()) {
                tooltip.close();
            }
            else {
                tooltip.open();
            }
        };
        AdaptCounterComponent.prototype.onAnimationIncreaseStart = function (event) {
            if (event.phaseName === 'start') {
                this.increaseAnimationDone = false;
            }
        };
        AdaptCounterComponent.prototype.onAnimationIncreaseDone = function (event) {
            if (event.phaseName === 'done') {
                this.increaseAnimationDone = true;
            }
        };
        AdaptCounterComponent.prototype.onAnimationDecreaseStart = function (event) {
            if (event.phaseName === 'start') {
                this.decreaseAnimationDone = false;
            }
        };
        AdaptCounterComponent.prototype.onAnimationDecreaseDone = function (event) {
            if (event.phaseName === 'done') {
                this.decreaseAnimationDone = true;
            }
        };
        AdaptCounterComponent.prototype._setValue = function (v, propagateChange) {
            if (v === null || v === undefined || v.toString().length === 0) {
                this._value = null;
            }
            else {
                this._isValidNumber = !!this._numberPatters.test(v.toString());
                this._value = this._isSafeNumber(v) ? parseFloat(v) : bigNumber(v);
            }
            if (propagateChange) {
                this.propagateChange();
            }
        };
        /**
         * Opens the mobile spinners
         */
        AdaptCounterComponent.prototype._openMobileSpinners = function () {
            var _this = this;
            if (!this.isSpinnerMobile) {
                this.isSpinnerMobile = true;
                // Set timeout to skip 'open' click
                setTimeout(function () {
                    _this._removeDocumentClickListener = _this._renderer.listen('document', 'click', function (event) {
                        if (!_this.mobileActionsContainer.nativeElement.contains(event.target)) {
                            _this._closeMobileSpinners();
                        }
                    });
                }, 0);
            }
        };
        /**
         * Closes the mobile spinners
         */
        AdaptCounterComponent.prototype._closeMobileSpinners = function () {
            if (this.isSpinnerMobile) {
                this.isSpinnerMobile = false;
                this._removeDocumentClickListener();
            }
        };
        AdaptCounterComponent.prototype._isSafeNumber = function (value) {
            // for NaN return true
            if (isNaN(value)) {
                return true;
            }
            // check if passed argument is decimal
            var isDecimal = value && value.toString().indexOf('.') > 0;
            var quotient = isDecimal ? value.toString().split(/[.]/)[0] : value.toString();
            if (Number.isSafeInteger(Number(quotient))) {
                if (!isDecimal) {
                    return true;
                }
                return !(Number(quotient) === Number.MAX_SAFE_INTEGER || Number(quotient) === Number.MIN_SAFE_INTEGER);
            }
            return false;
        };
        AdaptCounterComponent.prototype._toFixed = function (value, precision) {
            if (precision === void 0) { precision = 0; }
            var power = Math.pow(10, precision);
            return Math.round(value * power) / power;
        };
        return AdaptCounterComponent;
    }(i1.FormComponent));
    AdaptCounterComponent.id = 0;
    AdaptCounterComponent.ɵfac = function AdaptCounterComponent_Factory(t) { return new (t || AdaptCounterComponent)(i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(i0__namespace.Injector), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptDeviceDetectionService), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef)); };
    AdaptCounterComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptCounterComponent, selectors: [["adapt-counter"]], viewQuery: function AdaptCounterComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$p, 7);
                i0__namespace.ɵɵviewQuery(_c1$j, 7);
                i0__namespace.ɵɵviewQuery(_c2$h, 5);
                i0__namespace.ɵɵviewQuery(_c3$d, 5);
                i0__namespace.ɵɵviewQuery(_c4$a, 5);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.containerEl = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.inputEl = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.prefixEl = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.suffixEl = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.mobileActionsContainer = _t.first);
            }
        }, hostVars: 2, hostBindings: function AdaptCounterComponent_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵclassMap(ctx.hostClasses);
            }
        }, inputs: { id: "id", testID: "testID", name: "name", prefix: "prefix", suffix: "suffix", label: "label", max: "max", min: "min", allowScientific: "allowScientific", step: "step", width: "width", formControl: "formControl", size: "size", preventInnerValidation: "preventInnerValidation", allowIntegerOnly: "allowIntegerOnly", ariaDescribedBy: ["aria-describedby", "ariaDescribedBy"] }, outputs: { focus: "focus", blur: "blur", valueChanged: "valueChanged" }, features: [i0__namespace.ɵɵProvidersFeature([
                i1.createFormControlValueAccessor(AdaptCounterComponent),
                i1.createFormControlValidator(AdaptCounterComponent)
            ]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 34, vars: 23, consts: [[1, "adapt-counter__wrp", 3, "ngClass"], ["container", ""], [1, "adapt-counter__label--wrp"], [3, "for", "label", "requiredLabel", "showRequiredLabel", "tooltip", 4, "ngIf"], [1, "adapt-counter__content"], ["class", "adapt-counter-adding adapt-counter-prefix", "manual", "", "placement", "auto", 3, "adaptRadarDisableEventSending", "adaptTooltip", "mouseenter", "mouseout", 4, "ngIf"], [1, "adapt-counter-container"], [1, "adapt-counter-input-wrapper"], [1, "adapt-counter-input", "form-control", "rx-form-control", 3, "id", "ngClass", "value", "disabled", "readOnly", "input", "keypress", "keydown", "focus", "blur"], ["input", ""], ["class", "adapt-counter-icon", 4, "ngIf"], ["class", "adapt-counter-spinners", 3, "focused", "click", 4, "ngIf"], ["class", "adapt-counter-adding adapt-counter-suffix", "manual", "", "placement", "auto", 3, "adaptRadarDisableEventSending", "adaptTooltip", "mouseenter", "mouseout", 4, "ngIf"], ["class", "adapt-counter-errors-list has-danger", 4, "ngIf"], [3, "for", "label", "requiredLabel", "showRequiredLabel", "tooltip"], ["manual", "", "placement", "auto", 1, "adapt-counter-adding", "adapt-counter-prefix", 3, "adaptRadarDisableEventSending", "adaptTooltip", "mouseenter", "mouseout"], ["prefixTooltip", "tooltip"], [1, "adapt-counter-adding-text"], ["prefixEl", ""], [1, "adapt-counter-icon"], [1, "adapt-counter-icon-error"], [1, "adapt-counter-spinners", 3, "click"], ["type", "button", "role", "button", 1, "adapt-counter-spinner", "adapt-counter-spinner__increase", 3, "disabled", "click"], ["type", "button", "role", "button", 1, "adapt-counter-spinner", "adapt-counter-spinner__decrease", 3, "disabled", "click"], [1, "adapt-counter-spinners--mobile"], ["mobileActionsContainer", ""], [1, "btn-float-block"], ["class", "btn btn-primary btn-circle d-icon-triangle_up adapt-counter-spinner__increase", "type", "button", 3, "pointerEvents", "disabled", "click", 4, "ngIf"], ["class", "btn btn-primary btn-circle d-icon-triangle_down adapt-counter-spinner__decrease", "type", "button", 3, "pointerEvents", "disabled", "click", 4, "ngIf"], ["type", "button", 1, "btn", "btn-primary", "btn-circle", "d-icon-triangle_up", "adapt-counter-spinner__increase", 3, "disabled", "click"], ["type", "button", 1, "btn", "btn-primary", "btn-circle", "d-icon-triangle_down", "adapt-counter-spinner__decrease", 3, "disabled", "click"], ["manual", "", "placement", "auto", 1, "adapt-counter-adding", "adapt-counter-suffix", 3, "adaptRadarDisableEventSending", "adaptTooltip", "mouseenter", "mouseout"], ["suffixTooltip", "tooltip"], ["suffixEl", ""], [1, "adapt-counter-errors-list", "has-danger"], ["class", "form-control-feedback m-0 pt-1 pb-2", 4, "ngFor", "ngForOf"], [1, "form-control-feedback", "m-0", "pt-1", "pb-2"]], template: function AdaptCounterComponent_Template(rf, ctx) {
            if (rf & 1) {
                var _r35_1 = i0__namespace.ɵɵgetCurrentView();
                i0__namespace.ɵɵelementStart(0, "div", 0, 1);
                i0__namespace.ɵɵtext(2, "\n  ");
                i0__namespace.ɵɵtext(3, "\n  ");
                i0__namespace.ɵɵelementStart(4, "div", 2);
                i0__namespace.ɵɵtext(5, "\n    ");
                i0__namespace.ɵɵtemplate(6, AdaptCounterComponent_adapt_rx_control_label_6_Template, 1, 5, "adapt-rx-control-label", 3);
                i0__namespace.ɵɵtext(7, "\n  ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(8, "\n  ");
                i0__namespace.ɵɵtext(9, "\n\n  ");
                i0__namespace.ɵɵelementStart(10, "div", 4);
                i0__namespace.ɵɵtext(11, "\n    ");
                i0__namespace.ɵɵtemplate(12, AdaptCounterComponent_div_12_Template, 7, 3, "div", 5);
                i0__namespace.ɵɵtext(13, "\n\n    ");
                i0__namespace.ɵɵelementStart(14, "div", 6);
                i0__namespace.ɵɵtext(15, "\n      ");
                i0__namespace.ɵɵelementStart(16, "div", 7);
                i0__namespace.ɵɵtext(17, "\n        ");
                i0__namespace.ɵɵelementStart(18, "input", 8, 9);
                i0__namespace.ɵɵlistener("input", function AdaptCounterComponent_Template_input_input_18_listener() { i0__namespace.ɵɵrestoreView(_r35_1); var _r3 = i0__namespace.ɵɵreference(19); return ctx.onInput(_r3); })("keypress", function AdaptCounterComponent_Template_input_keypress_18_listener($event) { return ctx.onKeyPress($event); })("keydown", function AdaptCounterComponent_Template_input_keydown_18_listener($event) { return ctx.onKeyDown($event); })("focus", function AdaptCounterComponent_Template_input_focus_18_listener() { return ctx.onFocus(); })("blur", function AdaptCounterComponent_Template_input_blur_18_listener() { return ctx.onBlur(); });
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(20, "\n        ");
                i0__namespace.ɵɵtemplate(21, AdaptCounterComponent_div_21_Template, 4, 1, "div", 10);
                i0__namespace.ɵɵtext(22, "\n      ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(23, "\n      ");
                i0__namespace.ɵɵtemplate(24, AdaptCounterComponent_div_24_Template, 17, 12, "div", 11);
                i0__namespace.ɵɵtext(25, "\n    ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(26, "\n\n    ");
                i0__namespace.ɵɵtemplate(27, AdaptCounterComponent_div_27_Template, 7, 3, "div", 12);
                i0__namespace.ɵɵtext(28, "\n  ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(29, "\n  ");
                i0__namespace.ɵɵtext(30, "\n  ");
                i0__namespace.ɵɵtemplate(31, AdaptCounterComponent_div_31_Template, 4, 2, "div", 13);
                i0__namespace.ɵɵtext(32, "\n");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(33, "\n");
            }
            if (rf & 2) {
                i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction1(21, _c5$8, ctx.context.disabled));
                i0__namespace.ɵɵadvance(6);
                i0__namespace.ɵɵproperty("ngIf", !ctx.context.hideLabel);
                i0__namespace.ɵɵadvance(4);
                i0__namespace.ɵɵclassProp("adapt-counter__content--compact", ctx.isCompact);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.prefix);
                i0__namespace.ɵɵadvance(4);
                i0__namespace.ɵɵclassProp("focused", ctx.focused);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("id", ctx.id)("ngClass", ctx.customClass)("value", ctx.counterValue)("disabled", ctx.context.disabled)("readOnly", ctx.readonly);
                i0__namespace.ɵɵattribute("data-testid", ctx.testID)("placeholder", ctx.context.placeholder)("aria-describedby", ctx.ariaDescribedBy)("aria-readonly", ctx.readonly)("size", ctx.inputSize);
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngIf", ctx.isErrorExist);
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngIf", !ctx.readonly);
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngIf", ctx.suffix);
                i0__namespace.ɵɵadvance(4);
                i0__namespace.ɵɵproperty("ngIf", ctx.isErrorExist);
            }
        }, directives: [i3__namespace.NgClass, i3__namespace.NgIf, i1__namespace.AdaptDragonInputHandlerDirective, i1__namespace.AdaptRxControlLabelComponent, i1__namespace.AdaptTooltipDirective, i3__namespace.NgForOf], encapsulation: 2, data: { animation: [
                i1$1.trigger('highlightMobileIncrease', [
                    i1$1.transition(':enter', [
                        i1$1.style({ bottom: 0, opacity: 0 }),
                        i1$1.animate(i1.ANIMATION_DURATION.fast + ' ' + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ bottom: 'calc(100% + 10px)', opacity: 1 }))
                    ]),
                    i1$1.transition(':leave', [
                        i1$1.style({ bottom: 'calc(100% + 10px)', opacity: 1 }),
                        i1$1.animate('.12s', i1$1.style({ bottom: 0, opacity: 0 }))
                    ])
                ]),
                i1$1.trigger('highlightMobileDecrease', [
                    i1$1.transition(':enter', [
                        i1$1.style({ top: 0, opacity: 0 }),
                        i1$1.animate(i1.ANIMATION_DURATION.fast + ' ' + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ top: 'calc(100% + 10px)', opacity: 1 }))
                    ]),
                    i1$1.transition(':leave', [
                        i1$1.style({ top: 'calc(100% + 10px)', opacity: 1 }),
                        i1$1.animate('.12s', i1$1.style({ top: 0, opacity: 0 }))
                    ])
                ]),
                i1$1.trigger('validationFeedbackAnimation', [
                    i1$1.transition(':enter', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                    ]),
                    i1$1.transition(':leave', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                    ])
                ]),
                i1$1.trigger('errorToggleAnimation', [
                    i1$1.transition(':enter', [
                        i1$1.style({
                            opacity: 0
                        }),
                        i1$1.animate(250)
                    ]),
                    i1$1.transition(':leave', [
                        i1$1.style({
                            opacity: 1
                        }),
                        // animate(150)
                    ])
                ]),
                i1$1.trigger('highlightArrow', [
                    i1$1.transition('0 => 1', i1$1.animate(i1.ANIMATION_DURATION.medium, i1$1.keyframes([
                        i1$1.style({ color: '*', offset: 0 }),
                        i1$1.style({ color: '#00867E', offset: 1 })
                    ])))
                ])
            ] } });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptCounterComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-counter',
                        templateUrl: './counter.component.html',
                        providers: [
                            i1.createFormControlValueAccessor(AdaptCounterComponent),
                            i1.createFormControlValidator(AdaptCounterComponent)
                        ],
                        animations: [
                            i1$1.trigger('highlightMobileIncrease', [
                                i1$1.transition(':enter', [
                                    i1$1.style({ bottom: 0, opacity: 0 }),
                                    i1$1.animate(i1.ANIMATION_DURATION.fast + ' ' + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ bottom: 'calc(100% + 10px)', opacity: 1 }))
                                ]),
                                i1$1.transition(':leave', [
                                    i1$1.style({ bottom: 'calc(100% + 10px)', opacity: 1 }),
                                    i1$1.animate('.12s', i1$1.style({ bottom: 0, opacity: 0 }))
                                ])
                            ]),
                            i1$1.trigger('highlightMobileDecrease', [
                                i1$1.transition(':enter', [
                                    i1$1.style({ top: 0, opacity: 0 }),
                                    i1$1.animate(i1.ANIMATION_DURATION.fast + ' ' + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ top: 'calc(100% + 10px)', opacity: 1 }))
                                ]),
                                i1$1.transition(':leave', [
                                    i1$1.style({ top: 'calc(100% + 10px)', opacity: 1 }),
                                    i1$1.animate('.12s', i1$1.style({ top: 0, opacity: 0 }))
                                ])
                            ]),
                            i1$1.trigger('validationFeedbackAnimation', [
                                i1$1.transition(':enter', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                                ]),
                                i1$1.transition(':leave', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                                ])
                            ]),
                            i1$1.trigger('errorToggleAnimation', [
                                i1$1.transition(':enter', [
                                    i1$1.style({
                                        opacity: 0
                                    }),
                                    i1$1.animate(250)
                                ]),
                                i1$1.transition(':leave', [
                                    i1$1.style({
                                        opacity: 1
                                    }),
                                    // animate(150)
                                ])
                            ]),
                            i1$1.trigger('highlightArrow', [
                                i1$1.transition('0 => 1', i1$1.animate(i1.ANIMATION_DURATION.medium, i1$1.keyframes([
                                    i1$1.style({ color: '*', offset: 0 }),
                                    i1$1.style({ color: '#00867E', offset: 1 })
                                ])))
                            ])
                        ]
                    }]
            }], function () { return [{ type: i0__namespace.Renderer2 }, { type: i0__namespace.Injector }, { type: i1__namespace.AdaptDeviceDetectionService }, { type: i1__namespace.AdaptTranslateService }, { type: i2__namespace.AdaptRadarService }, { type: i0__namespace.ElementRef }]; }, { id: [{
                    type: i0.Input
                }], testID: [{
                    type: i0.Input
                }], name: [{
                    type: i0.Input
                }], prefix: [{
                    type: i0.Input
                }], suffix: [{
                    type: i0.Input
                }], label: [{
                    type: i0.Input
                }], max: [{
                    type: i0.Input
                }], min: [{
                    type: i0.Input
                }], allowScientific: [{
                    type: i0.Input
                }], step: [{
                    type: i0.Input
                }], width: [{
                    type: i0.Input
                }], formControl: [{
                    type: i0.Input
                }], size: [{
                    type: i0.Input
                }], preventInnerValidation: [{
                    type: i0.Input
                }], allowIntegerOnly: [{
                    type: i0.Input
                }], ariaDescribedBy: [{
                    type: i0.Input,
                    args: ['aria-describedby']
                }], focus: [{
                    type: i0.Output
                }], blur: [{
                    type: i0.Output
                }], valueChanged: [{
                    type: i0.Output
                }], containerEl: [{
                    type: i0.ViewChild,
                    args: ['container', { static: true }]
                }], inputEl: [{
                    type: i0.ViewChild,
                    args: ['input', { static: true }]
                }], prefixEl: [{
                    type: i0.ViewChild,
                    args: ['prefixEl', { static: false }]
                }], suffixEl: [{
                    type: i0.ViewChild,
                    args: ['suffixEl', { static: false }]
                }], mobileActionsContainer: [{
                    type: i0.ViewChild,
                    args: ['mobileActionsContainer', { static: false }]
                }], hostClasses: [{
                    type: i0.HostBinding,
                    args: ['class']
                }] });
    })();

    var AdaptCounterModule = /** @class */ (function () {
        function AdaptCounterModule() {
        }
        return AdaptCounterModule;
    }());
    AdaptCounterModule.ɵfac = function AdaptCounterModule_Factory(t) { return new (t || AdaptCounterModule)(); };
    AdaptCounterModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptCounterModule });
    AdaptCounterModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ providers: [i1.AdaptDeviceDetectionService], imports: [[
                i3.CommonModule,
                i6.FormsModule,
                i1.AdaptIconModule,
                i1.AdaptTooltipModule,
                i1.AdaptPopoverModule.forRoot(),
                i1.AdaptDragonInputHandlerModule,
                i1.AdaptRxLabelModule
            ]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptCounterModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i3.CommonModule,
                            i6.FormsModule,
                            i1.AdaptIconModule,
                            i1.AdaptTooltipModule,
                            i1.AdaptPopoverModule.forRoot(),
                            i1.AdaptDragonInputHandlerModule,
                            i1.AdaptRxLabelModule
                        ],
                        declarations: [AdaptCounterComponent],
                        exports: [AdaptCounterComponent],
                        providers: [i1.AdaptDeviceDetectionService]
                    }]
            }], null, null);
    })();
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptCounterModule, { declarations: [AdaptCounterComponent], imports: [i3.CommonModule,
                i6.FormsModule,
                i1.AdaptIconModule,
                i1.AdaptTooltipModule, i1__namespace.AdaptPopoverModule, i1.AdaptDragonInputHandlerModule,
                i1.AdaptRxLabelModule], exports: [AdaptCounterComponent] });
    })();

    /* eslint-disable @typescript-eslint/no-explicit-any */
    var Calendar2 = /** @class */ (function () {
        function Calendar2() {
        }
        return Calendar2;
    }());
    var Calendar2Day = /** @class */ (function () {
        function Calendar2Day() {
        }
        return Calendar2Day;
    }());
    exports.Clock2FaceUnit = void 0;
    (function (Clock2FaceUnit) {
        Clock2FaceUnit[Clock2FaceUnit["Hours"] = 0] = "Hours";
        Clock2FaceUnit[Clock2FaceUnit["Minutes"] = 1] = "Minutes";
        Clock2FaceUnit[Clock2FaceUnit["Seconds"] = 2] = "Seconds";
    })(exports.Clock2FaceUnit || (exports.Clock2FaceUnit = {}));

    function IsLocaleHasMeridiem(locale) {
        // 24-hours format time string has 8 symbols (ex.: 11:11:11)
        // If more than 8, locale time has meridiem
        return moment__default["default"]([2020, 10, 10, 23, 11, 11]).locale(locale).format('LTS').length > 8;
    }
    function IsDateRangeValid(dStart, dEnd) {
        if (!(dStart && dEnd)) {
            throw new Error('Wrong input params!');
        }
        return dStart.isValid() && dEnd.isValid() && dStart.isSameOrBefore(dEnd);
    }
    function IsTimeRangeValid(tStart, tEnd) {
        if (!(tStart && tEnd)) {
            throw new Error('Wrong input params!');
        }
        var _tStart = moment__default["default"]().startOf('day').hour(tStart.hour()).minute(tStart.minute());
        var _tEnd = moment__default["default"]().startOf('day').hour(tEnd.hour()).minute(tEnd.minute());
        return _tStart.isSameOrBefore(_tEnd);
    }
    function IsTimeInRange(t, tStart, tEnd) {
        if (!(t && tStart && tEnd)) {
            throw new Error('Wrong input params!');
        }
        if (!IsTimeRangeValid(tStart, tEnd)) {
            return false;
        }
        var _t = moment__default["default"]().startOf('day').hour(t.hour()).minute(t.minute());
        var _tStart = moment__default["default"]().startOf('day').hour(tStart.hour()).minute(tStart.minute());
        var _tEnd = moment__default["default"]().startOf('day').hour(tEnd.hour()).minute(tEnd.minute());
        return _t.isBetween(_tStart, _tEnd, null, '[]');
    }
    function IsSameDays(d1, d2) {
        if (!(d1 && d2)) {
            throw new Error('Wrong input params!');
        }
        return d1.isSame(d2, 'year') && d1.isSame(d2, 'month') && d1.isSame(d2, 'day');
    }

    var _c0$o = ["inputControlRef"];
    var _c1$i = ["dropdownRef"];
    var _c2$g = ["calendarContainer"];
    var _c3$c = ["nextBtn"];
    var _c4$9 = ["cancelBtn"];
    var _c5$7 = ["clearBtn"];
    function AdaptDatetime2Component_div_8_Template(rf, ctx) {
        if (rf & 1) {
            var _r11_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div");
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵelementStart(2, "input", 9, 10);
            i0__namespace.ɵɵlistener("input", function AdaptDatetime2Component_div_8_Template_input_input_2_listener() { i0__namespace.ɵɵrestoreView(_r11_1); var _r9 = i0__namespace.ɵɵreference(3); var ctx_r10 = i0__namespace.ɵɵnextContext(); return ctx_r10.inputControlWrite(_r9.value); })("click", function AdaptDatetime2Component_div_8_Template_input_click_2_listener() { i0__namespace.ɵɵrestoreView(_r11_1); var ctx_r12 = i0__namespace.ɵɵnextContext(); return ctx_r12.inputControlClick(); })("keydown.enter", function AdaptDatetime2Component_div_8_Template_input_keydown_enter_2_listener() { i0__namespace.ɵɵrestoreView(_r11_1); var ctx_r13 = i0__namespace.ɵɵnextContext(); return ctx_r13.inputControlClick(); })("blur", function AdaptDatetime2Component_div_8_Template_input_blur_2_listener() { i0__namespace.ɵɵrestoreView(_r11_1); var ctx_r14 = i0__namespace.ɵɵnextContext(); return ctx_r14.inputControlBlur(); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n        ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            var _r0 = i0__namespace.ɵɵreference(2);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵclassMap("a3t-datetime--input-control form-control " + (ctx_r1.inputControlClass || ""));
            i0__namespace.ɵɵclassProp("form-control-disabled-look", ctx_r1.readonly && ctx_r1.disabledStyleForReadonlyState)("readonly", ctx_r1.readonly)("i-date", !ctx_r1.timePicker)("i-date-time", ctx_r1.timePicker && !ctx_r1.timeOnly)("i-time", ctx_r1.timeOnly)("a3t-datetime--input-control_active", _r0.isOpen())("a3t-datetime--input-control_invalid", ctx_r1._self.errors.length > 0 && ctx_r1._self.control.touched);
            i0__namespace.ɵɵproperty("value", ctx_r1.inputControlValue)("disabled", ctx_r1.disabled)("readonly", ctx_r1.readonly);
            i0__namespace.ɵɵattribute("id", ctx_r1.id)("placeholder", ctx_r1.placeholder)("aria-describedby", ctx_r1.ariaDescribedBy);
        }
    }
    function AdaptDatetime2Component_ng_template_11_ng_container_3_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainer(0);
        }
    }
    function AdaptDatetime2Component_ng_template_11_Template(rf, ctx) {
        if (rf & 1) {
            var _r17_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵtext(0, "\n        ");
            i0__namespace.ɵɵelementStart(1, "div", 11);
            i0__namespace.ɵɵlistener("mousedown", function AdaptDatetime2Component_ng_template_11_Template_div_mousedown_1_listener() { i0__namespace.ɵɵrestoreView(_r17_1); var ctx_r16 = i0__namespace.ɵɵnextContext(); return ctx_r16.dropdownMouseDown(); });
            i0__namespace.ɵɵtext(2, "\n          ");
            i0__namespace.ɵɵtemplate(3, AdaptDatetime2Component_ng_template_11_ng_container_3_Template, 1, 0, "ng-container", 6);
            i0__namespace.ɵɵtext(4, "\n        ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(5, "\n      ");
        }
        if (rf & 2) {
            var ctx_r2 = i0__namespace.ɵɵnextContext();
            var _r4 = i0__namespace.ɵɵreference(17);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵclassMap(ctx_r2.dropdownClass || "");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r2.inline)("ngIfThen", _r4);
        }
    }
    function AdaptDatetime2Component_ng_container_14_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainer(0);
        }
    }
    function AdaptDatetime2Component_ng_template_16_div_6_span_18_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span");
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r24 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r24.headings.applyBtn);
        }
    }
    function AdaptDatetime2Component_ng_template_16_div_6_span_20_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span");
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r25 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r25.headings.nextBtn);
        }
    }
    function AdaptDatetime2Component_ng_template_16_div_6_Template(rf, ctx) {
        if (rf & 1) {
            var _r27_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 16);
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵelementStart(2, "div");
            i0__namespace.ɵɵtext(3, "\n            ");
            i0__namespace.ɵɵelementStart(4, "button", 17, 18);
            i0__namespace.ɵɵlistener("click", function AdaptDatetime2Component_ng_template_16_div_6_Template_button_click_4_listener() { i0__namespace.ɵɵrestoreView(_r27_1); var ctx_r26 = i0__namespace.ɵɵnextContext(2); return ctx_r26.pickerCloseAndCancel(); });
            i0__namespace.ɵɵtext(6);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(7, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(8, "\n          ");
            i0__namespace.ɵɵelementStart(9, "div", 19);
            i0__namespace.ɵɵtext(10, "\n            ");
            i0__namespace.ɵɵelementStart(11, "button", 20, 21);
            i0__namespace.ɵɵlistener("click", function AdaptDatetime2Component_ng_template_16_div_6_Template_button_click_11_listener() { i0__namespace.ɵɵrestoreView(_r27_1); var ctx_r28 = i0__namespace.ɵɵnextContext(2); return ctx_r28.pickerClearAll(); });
            i0__namespace.ɵɵtext(13);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(14, "\n            ");
            i0__namespace.ɵɵelementStart(15, "button", 22, 23);
            i0__namespace.ɵɵlistener("click", function AdaptDatetime2Component_ng_template_16_div_6_Template_button_click_15_listener($event) { i0__namespace.ɵɵrestoreView(_r27_1); var ctx_r29 = i0__namespace.ɵɵnextContext(2); $event.stopPropagation(); return ctx_r29.goToNextStep(); });
            i0__namespace.ɵɵtext(17, "\n              ");
            i0__namespace.ɵɵtemplate(18, AdaptDatetime2Component_ng_template_16_div_6_span_18_Template, 2, 1, "span", 4);
            i0__namespace.ɵɵtext(19, "\n              ");
            i0__namespace.ɵɵtemplate(20, AdaptDatetime2Component_ng_template_16_div_6_span_20_Template, 2, 1, "span", 4);
            i0__namespace.ɵɵtext(21, "\n            ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(22, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(23, "\n        ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r19 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵclassProp("two-rows-wrap", ctx_r19.twoRowsWrap || ctx_r19.threeRowsWrap);
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵpropertyInterpolate("id", ctx_r19.id + "-cancel-btn");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate1("\n              ", ctx_r19.headings.cancelBtn, "");
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵclassProp("three-rows-wrap", ctx_r19.threeRowsWrap);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵpropertyInterpolate("id", ctx_r19.id + "-clear-btn");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate1("\n              ", ctx_r19.headings.clearBtn, "");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵpropertyInterpolate("id", ctx_r19.id + "-wizard-step-btn");
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngIf", ctx_r19.isLastWizardStep);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r19.isLastWizardStep);
        }
    }
    function AdaptDatetime2Component_ng_template_16_ng_container_8_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainer(0);
        }
    }
    function AdaptDatetime2Component_ng_template_16_Template(rf, ctx) {
        if (rf & 1) {
            var _r31_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵtext(0, "\n      ");
            i0__namespace.ɵɵelementStart(1, "div", 12, 13);
            i0__namespace.ɵɵtext(3, "\n        ");
            i0__namespace.ɵɵelementStart(4, "adapt-datetime2-picker", 14);
            i0__namespace.ɵɵlistener("timeModeChange", function AdaptDatetime2Component_ng_template_16_Template_adapt_datetime2_picker_timeModeChange_4_listener($event) { i0__namespace.ɵɵrestoreView(_r31_1); var ctx_r30 = i0__namespace.ɵɵnextContext(); return ctx_r30.timeModeChange($event); })("clockFaceChange", function AdaptDatetime2Component_ng_template_16_Template_adapt_datetime2_picker_clockFaceChange_4_listener($event) { i0__namespace.ɵɵrestoreView(_r31_1); var ctx_r32 = i0__namespace.ɵɵnextContext(); return ctx_r32.clockFaceChange($event); })("valueChange", function AdaptDatetime2Component_ng_template_16_Template_adapt_datetime2_picker_valueChange_4_listener($event) { i0__namespace.ɵɵrestoreView(_r31_1); var ctx_r33 = i0__namespace.ɵɵnextContext(); return ctx_r33.selectDateTime($event); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(5, "\n        ");
            i0__namespace.ɵɵtemplate(6, AdaptDatetime2Component_ng_template_16_div_6_Template, 24, 11, "div", 15);
            i0__namespace.ɵɵtext(7, "\n\n        ");
            i0__namespace.ɵɵtemplate(8, AdaptDatetime2Component_ng_template_16_ng_container_8_Template, 1, 0, "ng-container", 6);
            i0__namespace.ɵɵtext(9, "\n      ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(10, "\n    ");
        }
        if (rf & 2) {
            var ctx_r5 = i0__namespace.ɵɵnextContext();
            var _r7 = i0__namespace.ɵɵreference(22);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵclassProp("a3t-datetime-inline-light", ctx_r5.inline && ctx_r5.inlineLight)("a3t-datetime-inline-small", ctx_r5.inline && ctx_r5.inlineSize === "small");
            i0__namespace.ɵɵproperty("ngClass", ctx_r5.isMobile ? "a3t-datetime--calendar-width" : "a3t-datetime--calendar-min-width");
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("initialValue", ctx_r5.initialValue)("activeValue", ctx_r5.value)("dateFilter", ctx_r5.dateFilter)("timePicker", ctx_r5.timePicker)("timeOnly", ctx_r5.timeOnly)("monthAndYearOnly", ctx_r5.monthAndYearOnly)("monthFirst", ctx_r5.monthFirst)("timeSeconds", ctx_r5.seconds)("timeFormat", ctx_r5.timeInputFormat)("timeMode", ctx_r5.timeModeState$.value)("activeFace", ctx_r5.clockFaceState$.value)("disabled", ctx_r5.disabled)("readonly", ctx_r5.readonly)("emptyDateHeading", ctx_r5.headings.emptyDate)("emptyTimeHeading", ctx_r5.headings.emptyTime)("clockHeadings", ctx_r5.headings);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r5.inline);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r5.inline)("ngIfThen", _r7);
        }
    }
    function AdaptDatetime2Component_ng_container_19_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainer(0);
        }
    }
    function AdaptDatetime2Component_ng_template_21_div_1_div_2_div_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "div", 30);
        }
    }
    function AdaptDatetime2Component_ng_template_21_div_1_div_2_strong_5_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "strong");
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var error_r36 = i0__namespace.ɵɵnextContext().$implicit;
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("", error_r36.name, " ");
        }
    }
    function AdaptDatetime2Component_ng_template_21_div_1_div_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 27);
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵtemplate(2, AdaptDatetime2Component_ng_template_21_div_1_div_2_div_2_Template, 1, 0, "div", 28);
            i0__namespace.ɵɵtext(3, "\n          ");
            i0__namespace.ɵɵelementStart(4, "div", 29);
            i0__namespace.ɵɵtemplate(5, AdaptDatetime2Component_ng_template_21_div_1_div_2_strong_5_Template, 2, 1, "strong", 4);
            i0__namespace.ɵɵtext(6);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(7, "\n        ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var error_r36 = ctx.$implicit;
            var ctx_r35 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r35.inline);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngIf", error_r36.name);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(error_r36.text);
        }
    }
    function AdaptDatetime2Component_ng_template_21_div_1_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 25);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵtemplate(2, AdaptDatetime2Component_ng_template_21_div_1_div_2_Template, 8, 3, "div", 26);
            i0__namespace.ɵɵtext(3, "\n      ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r34 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵproperty("@validationFeedbackAnimation", undefined);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngForOf", ctx_r34._self.errors);
        }
    }
    function AdaptDatetime2Component_ng_template_21_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtext(0, "\n      ");
            i0__namespace.ɵɵtemplate(1, AdaptDatetime2Component_ng_template_21_div_1_Template, 4, 2, "div", 24);
            i0__namespace.ɵɵtext(2, "\n    ");
        }
        if (rf & 2) {
            var ctx_r8 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("ngIf", ctx_r8._self.errors.length > 0 && ctx_r8._self.control.touched);
        }
    }
    var _c6$5 = function () { return { isPicker: true }; };
    var MIN_DROPDOWN_WIDTH$1 = 270;
    var AdaptDatetime2Component = /** @class */ (function (_super) {
        __extends(AdaptDatetime2Component, _super);
        function AdaptDatetime2Component(_injector, _deviceDetectorService, _renderer, _changeDetectorRef, _ngZone, ts, _adaptRadarService, _elem) {
            var _this = _super.call(this, _injector, ts, _adaptRadarService, _elem, i1.AdaptRadarAngularCustomEventName.AdaptDatetime2) || this;
            _this._injector = _injector;
            _this._deviceDetectorService = _deviceDetectorService;
            _this._renderer = _renderer;
            _this._changeDetectorRef = _changeDetectorRef;
            _this._ngZone = _ngZone;
            // Self link
            _this._self = _this;
            // UI fields
            _this.inputControlValue = '';
            _this.dropdownAutoClose = 'outside';
            _this.timeModeState$ = new rxjs.BehaviorSubject(false);
            _this.clockFaceState$ = new rxjs.BehaviorSubject(exports.Clock2FaceUnit.Hours);
            _this.isLastWizardStep = false;
            _this.twoRowsWrap = false;
            _this.threeRowsWrap = false;
            _this.defaultTexts = {};
            _this.defaultErrors = {
                invalidValueName: '',
                invalidValue: '',
                disabledDateName: '',
                disabledDate: '',
                disabledTimeName: '',
                disabledTime: '',
            };
            /**
             * Label icon with a tooltip or popover
             */
            _this.tooltipConfig = null;
            /**
             * Datetime input label
             */
            _this.label = '';
            /**
             * Datetime input placeholder
             */
            _this.placeholder = '';
            // - - - - - - - - - - - - - - - - - - - - - - - - - - - -
            // Inputs
            /**
             * DateTime inline mode
             */
            _this.inline = false;
            /**
             * DateTime inline light color scheme mode
             */
            _this.inlineLight = true;
            /**
             * DateTime inline small size mode
             */
            _this.inlineSize = 'default';
            /**
             * Class for datetime dropdown
             */
            _this.dropdownClass = 'dropdown-menu p-0';
            /**
             * Date input format
             */
            _this.dateInputFormat = 'LL';
            /**
             * Time input format without seconds
             */
            _this.timeInputFormat = 'LT';
            /**
             * Time input format with seconds
             */
            _this.timeInputLongFormat = 'LTS';
            /**
             * Toggle time picker
             */
            _this.timePicker = false;
            /**
             * Use only the time picker flag
             */
            _this.timeOnly = false;
            /**
             * Use only the month and year picker flag
             */
            _this.monthAndYearOnly = false;
            _this.monthFirst = false;
            /**
             * Use seconds in time picker
             */
            _this.seconds = false;
            /**
             * Use disabled style for the control if [readonly]=true
             */
            _this.disabledStyleForReadonlyState = false;
            /**
             * Picker placement
             */
            _this.placement = ['bottom-left', 'top-left', 'bottom-right', 'top-right', 'bottom-left'];
            /**
             * Append to body trigger
             */
            _this.appendToBody = false;
            /**
             * Prevent choosing dateTime value step-by-step
             */
            _this.preventWizard = false;
            // eslint-disable-next-line @angular-eslint/no-input-rename
            _this.ariaDescribedBy = null;
            // Outputs
            /**
             * Event on picker open
             */
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.open = new i0.EventEmitter();
            /**
             * Event on picker close
             */
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.close = new i0.EventEmitter();
            /**
             * Event on ngModel change
             */
            _this.valueChange = new i0.EventEmitter();
            /**
             * FormControl focus implementation
             */
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.focus = new i0.EventEmitter();
            /**
             * FormControl blur implementation
             */
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.blur = new i0.EventEmitter();
            // Privates fields for ControlValueAccessor
            _this._onTouchedCallback = rxjs.noop;
            _this._onChangeCallback = rxjs.noop;
            // - - - - - - - - - - - - - - - - - - - - - - - - - - - -
            // Template refs
            // ngModel value
            _this._model = null;
            // previousNgModel value
            _this._previousModel = null;
            _this.dropdownAutoClose = _this._deviceDetectorService.isMobile() ? false : 'outside';
            _this.isMobile = _this._deviceDetectorService.isMobile();
            _this.isIE = _this._deviceDetectorService.isIE();
            _this.setDefaultTexts(ts.getCurrentLanguage());
            return _this;
        }
        Object.defineProperty(AdaptDatetime2Component.prototype, "value", {
            get: function () {
                return this._model;
            },
            set: function (v) {
                if (this.disabled) {
                    return;
                }
                this._model = v;
                this._onChangeCallback(this._model);
                this.valueChange.emit(this._model);
                this._inputControlFormatting();
            },
            enumerable: false,
            configurable: true
        });
        AdaptDatetime2Component.prototype.ngOnInit = function () {
            var _this = this;
            _super.prototype.ngOnInit.call(this);
            this.initControl();
            if (!this.id) {
                this.id = "dt-" + AdaptDatetime2Component.DT_ID++;
            }
            if (!this.name) {
                this.name = this.id + "-form-control";
            }
            if (this.timeOnly) {
                this.timePicker = true;
            }
            if (this.inline) {
                this._openPicker();
            }
            if (!this.mainCls) {
                this.mainCls = this.inline ? '' : 'form-group';
            }
            // Detect close event on dd
            this._dtDropdownOpenChangeSub = this.dropdownRef.onClose.subscribe(function () {
                if (!_this.inline) {
                    _this._closePicker();
                }
            });
            var _loop_1 = function (prop) {
                if (prop) {
                    this_1.overrideBuildInValidatorMessage(prop, function () { return _this._customErrorTexts[prop]; });
                }
            };
            var this_1 = this;
            for (var prop in this._customErrorTexts) {
                _loop_1(prop);
            }
            this.headings = Object.assign(Object.assign({}, this.defaultTexts), this.headings);
            if (this.tooltipIconCls && !this.popoverIcon) {
                this.tooltipConfig = {
                    iconName: this.tooltipIconCls,
                    content: this.tooltipText,
                    placement: 'top',
                    popoverMode: false
                };
            }
            else if (this.popoverIcon) {
                this.tooltipConfig = {
                    iconName: this.popoverIcon,
                    content: this.popoverContent,
                    placement: this.popoverPlacement,
                    popoverMode: true,
                    popoverTriggers: this.popoverTriggers
                };
            }
        };
        AdaptDatetime2Component.prototype.ngOnDestroy = function () {
            this._dtDropdownOpenChangeSub.unsubscribe();
        };
        AdaptDatetime2Component.prototype.setDefaultTexts = function (translation) {
            this.defaultTexts.emptyDate = translation['adapt.datetime.emptyDate'];
            this.defaultTexts.emptyTime = translation['adapt.datetime.emptyTime'];
            this.defaultTexts.emptyMonth = translation['adapt.datetime.emptyMonth'];
            this.defaultTexts.cancelBtn = translation['adapt.common.cancel'];
            this.defaultTexts.clearBtn = translation['adapt.common.clearAll'];
            this.defaultTexts.nextBtn = translation['adapt.common.next'];
            this.defaultTexts.applyBtn = translation['adapt.common.ok'];
            this.defaultTexts.hhBtn = translation['adapt.datetime.hh'];
            this.defaultTexts.mmBtn = translation['adapt.datetime.mm'];
            this.defaultTexts.ssBtn = translation['adapt.datetime.ss'];
            this.defaultTexts.amBtn = translation['adapt.datetime.am'];
            this.defaultTexts.pmBtn = translation['adapt.datetime.pm'];
            this.requiredLabel = translation['adapt.common.required'];
            this.defaultErrors.invalidValueName = translation['adapt.datetime.error.invalidValueName'];
            this.defaultErrors.invalidValue = translation['adapt.datetime.error.invalidValue'];
            this.defaultErrors.disabledDateName = translation['adapt.datetime.error.disabledDateName'];
            this.defaultErrors.disabledDate = translation['adapt.datetime.error.disabledDate'];
            this.defaultErrors.disabledTimeName = translation['adapt.datetime.error.disabledTimeName'];
            this.defaultErrors.disabledTime = translation['adapt.datetime.error.disabledTime'];
        };
        /**
         * Datetime wizard
         */
        AdaptDatetime2Component.prototype.goToNextStep = function () {
            if (this.inline) {
                return;
            }
            if (this.preventWizard) {
                this.pickerCloseAndApply();
                return;
            }
            if (this.timePicker) {
                if (!this.timeModeState$.value) {
                    this.timeModeState$.next(true);
                }
                else {
                    if (this.clockFaceState$.value === (this.seconds ? exports.Clock2FaceUnit.Seconds : exports.Clock2FaceUnit.Minutes)) {
                        if (!!this.value && this.value.isValid()) {
                            this.pickerCloseAndApply();
                        }
                        else {
                            if (this.timeOnly) {
                                this.clockFaceState$.next(exports.Clock2FaceUnit.Hours);
                            }
                            else {
                                this.timeModeState$.next(false);
                            }
                        }
                    }
                    else {
                        this.clockFaceState$.next(this.clockFaceState$.value + 1);
                    }
                }
            }
            else {
                this.pickerCloseAndApply();
            }
            this._checkIfLastWizardStep();
        };
        /**
         * Select date/time on picker
         */
        AdaptDatetime2Component.prototype.selectDateTime = function (v) {
            if (this.disabled || this.readonly) {
                return;
            }
            this.value = v.clone();
            if (this.inline) {
                this._onTouchedCallback();
            }
        };
        /**
         * Close picker and set previous model value
         */
        AdaptDatetime2Component.prototype.pickerCloseAndCancel = function () {
            this.value = this._previousModel;
            this._closePicker();
        };
        /**
         * Close picker and use current value
         */
        AdaptDatetime2Component.prototype.pickerCloseAndApply = function () {
            this._closePicker();
        };
        /**
         * Clear model value
         */
        AdaptDatetime2Component.prototype.pickerClearAll = function () {
            this.value = null;
            this._checkIfLastWizardStep();
            if (this.isMobile) {
                this._closePicker();
            }
        };
        /**
         * Input control (input) handler
         */
        AdaptDatetime2Component.prototype.inputControlWrite = function (v) {
            this.inputControlValue = v;
            this.value = this._tryParseToMoment(v);
        };
        /**
         * Input control (click) handler
         */
        AdaptDatetime2Component.prototype.inputControlClick = function () {
            if (this.disabled || this.readonly) {
                return;
            }
            this.focus.emit();
            if (!this.dropdownRef.isOpen()) {
                this._openPicker();
            }
        };
        /**
         * Input control (blur) handler
         */
        AdaptDatetime2Component.prototype.inputControlBlur = function () {
            this.blur.emit();
            this._inputControlFormatting();
            if (!this.dropdownRef.isOpen()) {
                this._onTouchedCallback();
            }
        };
        /**
         * Dropdown mousedown handler
         */
        AdaptDatetime2Component.prototype.dropdownMouseDown = function () {
            this._blurInput();
        };
        /**
         * Open picker
         */
        /**
         * Time mode change handler
         */
        AdaptDatetime2Component.prototype.timeModeChange = function (v) {
            var _this = this;
            if (this.timeModeState$.value !== v) {
                this.timeModeState$.next(v);
            }
            if (v && (this.clockFaceState$.value !== exports.Clock2FaceUnit.Hours)) {
                this._ngZone.onStable
                    .pipe(operators.take(1))
                    .subscribe(function () {
                    _this.clockFaceState$.next(exports.Clock2FaceUnit.Hours);
                });
            }
            this._checkIfLastWizardStep();
        };
        /**
         * Close picker
         */
        /**
         * Clock face change handler
         */
        AdaptDatetime2Component.prototype.clockFaceChange = function (v) {
            if (this.clockFaceState$.value !== v) {
                this.clockFaceState$.next(v);
            }
            this._checkIfLastWizardStep();
        };
        AdaptDatetime2Component.prototype.writeValue = function (v) {
            this._model = this._getNormalizedModelValue(v);
            this._inputControlFormatting();
        };
        /**
         * Parse and format input control value
         */
        AdaptDatetime2Component.prototype.registerOnChange = function (fn) {
            this._onChangeCallback = fn;
        };
        /**
         * Get formatted [timeMin] prop value
         */
        AdaptDatetime2Component.prototype.registerOnTouched = function (fn) {
            this._onTouchedCallback = fn;
        };
        /**
         * Get formatted [timeMax] prop value
         */
        AdaptDatetime2Component.prototype.setDisabledState = function (isDisabled) {
            this._disabled = isDisabled;
        };
        /**
         * Get format for input control value
         */
        AdaptDatetime2Component.prototype.validate = function (c) {
            var dateFormatError = {
                dateError: this._customErrorTexts.dateFormatError || {
                    name: this.defaultErrors.invalidValueName,
                    text: i1.formatString(this.defaultErrors.invalidValue, moment__default["default"]().format(this._getInputControlFormat()))
                }
            };
            var unselectableDateError = {
                dateError: this._customErrorTexts.unselectableDateError || {
                    name: this.defaultErrors.disabledDateName,
                    text: this.defaultErrors.disabledDate
                }
            };
            var unselectableTimeError = {
                dateError: this._customErrorTexts.unselectableTimeError || {
                    name: this.defaultErrors.disabledTimeName,
                    text: i1.formatString(this.defaultErrors.disabledTime, this._getFormattedStartTime(), this._getFormattedEndTime())
                }
            };
            var controlValue = moment__default["default"].isMoment(c.value) ? c.value : this._getNormalizedModelValue(c.value);
            var errFormat = controlValue && !moment__default["default"](controlValue).isValid();
            var disableDate = controlValue && moment__default["default"](controlValue).isValid() && this.dateFilter && !this.dateFilter(controlValue, c);
            var disableTime = controlValue && moment__default["default"](controlValue).isValid() && this.timeMin && this.timeMax &&
                !IsTimeInRange(controlValue, this.timeMin, this.timeMax);
            return errFormat ? dateFormatError :
                disableDate ? unselectableDateError :
                    disableTime ? unselectableTimeError : null;
        };
        AdaptDatetime2Component.prototype._truncateBtn = function (btn) {
            var xPadings = 10;
            if (btn.offsetWidth + xPadings > window.innerWidth - xPadings) {
                this._renderer.addClass(btn, 'text-truncate');
                return window.innerWidth - xPadings;
            }
            else {
                return btn.offsetWidth + xPadings;
            }
        };
        AdaptDatetime2Component.prototype._wrapButtons = function () {
            var xPadings = 10; // left and right padding
            var cancelBtnWidth = this.cancelBtn.nativeElement.offsetWidth; // cancel button width
            var nextBtnWidth = this.nextBtn.nativeElement.offsetWidth; // next button width
            var clearBtnWidth = this.clearBtn.nativeElement.offsetWidth; // clear button width
            var btnGroupWidth = nextBtnWidth + clearBtnWidth + 5; // clear + next buttons width + margins
            var buttonsWidth = cancelBtnWidth + btnGroupWidth + xPadings; // all buttons width
            var containerWidth = buttonsWidth < MIN_DROPDOWN_WIDTH$1 ? MIN_DROPDOWN_WIDTH$1 : buttonsWidth;
            if (window.innerWidth - xPadings < buttonsWidth) {
                // wrap button in two rows
                if (btnGroupWidth + xPadings < window.innerWidth - xPadings) {
                    var firstRowWidth = btnGroupWidth + xPadings < MIN_DROPDOWN_WIDTH$1 ? MIN_DROPDOWN_WIDTH$1 : btnGroupWidth + xPadings;
                    var secondRowWidth = this._truncateBtn(this.cancelBtn.nativeElement);
                    containerWidth = Math.max(firstRowWidth, secondRowWidth);
                    this._renderer.setStyle(this.calendarContainer.nativeElement, 'width', containerWidth + "px");
                    this.twoRowsWrap = true;
                }
                else {
                    // wrap button in three rows
                    var firstRowWidth = this._truncateBtn(this.nextBtn.nativeElement);
                    var secondRowWidth = this._truncateBtn(this.clearBtn.nativeElement);
                    var thirdRowWidth = this._truncateBtn(this.cancelBtn.nativeElement);
                    var maxButtonWidth = Math.max(firstRowWidth, secondRowWidth, thirdRowWidth);
                    containerWidth = maxButtonWidth < MIN_DROPDOWN_WIDTH$1 ? MIN_DROPDOWN_WIDTH$1 : maxButtonWidth;
                    this._renderer.setStyle(this.calendarContainer.nativeElement, 'width', containerWidth + "px");
                    this.threeRowsWrap = true;
                }
            }
            else {
                this._renderer.setStyle(this.calendarContainer.nativeElement, 'width', containerWidth + "px");
            }
        };
        AdaptDatetime2Component.prototype._openPicker = function () {
            var _this = this;
            this._previousModel = this.value ? this.value.clone() : null;
            if (this.inline) {
                return;
            }
            this._checkIfLastWizardStep();
            if (!this.inline && (this.isMobile || this.isIE)) {
                // in some cases nativeElements is undefined, need to wait zone stable
                this._ngZone.onStable
                    .pipe(operators.take(1))
                    .subscribe(function () {
                    _this._wrapButtons();
                });
            }
            this.timeModeState$.next(this.timeOnly);
            this.clockFaceState$.next(exports.Clock2FaceUnit.Hours);
            this.dropdownRef.open();
            this.open.emit(this.id);
            if (this.isMobile) {
                this._blurInput();
            }
        };
        AdaptDatetime2Component.prototype._closePicker = function () {
            this.twoRowsWrap = false;
            this.threeRowsWrap = false;
            if (this.inline) {
                return;
            }
            this.dropdownRef.close(); // DOUBLE CLOSE BECAUSE OF SUBSCRIPTION
            this.close.emit(this.id);
            this._onTouchedCallback();
            this._blurInput();
        };
        /**
         * Get time format
         */
        AdaptDatetime2Component.prototype._blurInput = function () {
            if (this.inputControlRef) {
                this.inputControlRef.nativeElement.blur();
            }
        };
        AdaptDatetime2Component.prototype._inputControlFormatting = function () {
            if (this.inputControlRef && (this.inputControlRef.nativeElement === document.activeElement)) {
                return;
            }
            if (this.value) {
                if (this.value.isValid()) {
                    this.inputControlValue = this.value.format(this._getInputControlFormat());
                }
            }
            else {
                this.inputControlValue = '';
            }
            if (!this._changeDetectorRef.destroyed) {
                this._changeDetectorRef.detectChanges();
            }
        };
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        // ControlValueAccessor
        AdaptDatetime2Component.prototype._getFormattedStartTime = function () {
            return (this.timeMin || moment__default["default"]().startOf('day')).format(this._getTimeFormat());
        };
        AdaptDatetime2Component.prototype._getFormattedEndTime = function () {
            return (this.timeMax || moment__default["default"]().endOf('day')).format(this._getTimeFormat());
        };
        AdaptDatetime2Component.prototype._getInputControlFormat = function () {
            var format = this.dateInputFormat;
            if (this.timePicker) {
                format += " " + this._getTimeFormat();
                if (this.timeOnly) {
                    format = this._getTimeFormat();
                }
            }
            if (this.monthAndYearOnly) {
                format = 'MMMM, YYYY';
            }
            return format;
        };
        AdaptDatetime2Component.prototype._tryParseToMoment = function (valueToParse) {
            var parseResult = null;
            if (valueToParse) {
                if (this.timeOnly) {
                    // https://stackoverflow.com/questions/34541196/moment-js-gives-invalid-date-in-firefox
                    parseResult = moment__default["default"](moment__default["default"]().format(this.dateInputFormat) + " " + valueToParse, this.dateInputFormat + ' ' + this._getTimeFormat());
                }
                else {
                    parseResult = moment__default["default"](valueToParse, this._getInputControlFormat());
                }
            }
            return parseResult;
        };
        AdaptDatetime2Component.prototype._getTimeFormat = function () {
            return this.seconds ? this.timeInputLongFormat : this.timeInputFormat;
        };
        AdaptDatetime2Component.prototype._getNormalizedModelValue = function (value) {
            var momentValue = null;
            if (value) {
                if (moment__default["default"].isMoment(value) || moment__default["default"].isDate(value)) {
                    momentValue = moment__default["default"](value);
                }
                else if (typeof (value) === 'string') {
                    if (this.writeValueParseFormat) {
                        momentValue = moment__default["default"](value, this.writeValueParseFormat);
                    }
                    else {
                        var formattedDateTime = moment__default["default"](value, [moment__default["default"].ISO_8601, this._getInputControlFormat()]);
                        momentValue = formattedDateTime.isValid() ? formattedDateTime : moment__default["default"](value);
                    }
                }
                else {
                    throw new Error('Wrong DateTime2 model type!');
                }
            }
            return momentValue;
        };
        /**
         * Wizard's last step checking
         */
        AdaptDatetime2Component.prototype._checkIfLastWizardStep = function () {
            var _this = this;
            var wizard = !this.preventWizard;
            var lastTimeStep = this.timePicker && this.timeModeState$.value &&
                (this.clockFaceState$.value === (this.seconds ? exports.Clock2FaceUnit.Seconds : exports.Clock2FaceUnit.Minutes));
            var timePicker = this.timePicker;
            var lastStep = timePicker ? lastTimeStep : true;
            var modelFull = !timePicker || (!!this.value && this.value.isValid());
            this._ngZone.onStable
                .pipe(operators.take(1))
                .subscribe(function () {
                _this.isLastWizardStep = !wizard || lastStep && modelFull;
            });
        };
        return AdaptDatetime2Component;
    }(i1.FormComponent));
    // Static fields
    AdaptDatetime2Component.DT_ID = 1;
    AdaptDatetime2Component.ɵfac = function AdaptDatetime2Component_Factory(t) { return new (t || AdaptDatetime2Component)(i0__namespace.ɵɵdirectiveInject(i0__namespace.Injector), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptDeviceDetectionService), i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(i0__namespace.ChangeDetectorRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.NgZone), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef)); };
    AdaptDatetime2Component.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptDatetime2Component, selectors: [["adapt-datetime2"]], viewQuery: function AdaptDatetime2Component_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$o, 5);
                i0__namespace.ɵɵviewQuery(_c1$i, 7);
                i0__namespace.ɵɵviewQuery(_c2$g, 5);
                i0__namespace.ɵɵviewQuery(_c3$c, 5);
                i0__namespace.ɵɵviewQuery(_c4$9, 5);
                i0__namespace.ɵɵviewQuery(_c5$7, 5);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.inputControlRef = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.dropdownRef = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.calendarContainer = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.nextBtn = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.cancelBtn = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.clearBtn = _t.first);
            }
        }, hostVars: 3, hostBindings: function AdaptDatetime2Component_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵattribute("name", ctx.name);
                i0__namespace.ɵɵstyleProp("display", "block");
            }
        }, inputs: { formControl: "formControl", id: "id", name: "name", label: "label", placeholder: "placeholder", inline: "inline", inlineLight: "inlineLight", inlineSize: "inlineSize", initialValue: "initialValue", inputControlClass: "inputControlClass", dropdownClass: "dropdownClass", dateInputFormat: "dateInputFormat", timeInputFormat: "timeInputFormat", timeInputLongFormat: "timeInputLongFormat", timePicker: "timePicker", timeOnly: "timeOnly", monthAndYearOnly: "monthAndYearOnly", monthFirst: "monthFirst", seconds: "seconds", timeMin: "timeMin", timeMax: "timeMax", dateFilter: "dateFilter", disabledStyleForReadonlyState: "disabledStyleForReadonlyState", placement: "placement", appendToBody: "appendToBody", headings: "headings", preventWizard: "preventWizard", writeValueParseFormat: "writeValueParseFormat", ariaDescribedBy: ["aria-describedby", "ariaDescribedBy"] }, outputs: { open: "open", close: "close", valueChange: "valueChange", focus: "focus", blur: "blur" }, features: [i0__namespace.ɵɵProvidersFeature([
                i1.createFormControlValueAccessor(AdaptDatetime2Component),
                i1.createFormControlValidator(AdaptDatetime2Component),
            ]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 24, vars: 23, consts: [["adaptDropdown", "", 3, "adaptRadarDisableEventSending", "animationPlacement", "placement", "appendToBody", "autoClose", "holdFocusInMenu", "holdFocusOnOpen", "autoFocusFirst", "restoreFocusAfterClose", "mobileView"], ["dropdownRef", "adaptDropdown"], ["adaptDropdownAnchor", ""], [3, "for", "label", "requiredLabel", "showRequiredLabel", "tooltip"], [4, "ngIf"], ["adaptDropdownMenuTemplate", ""], [4, "ngIf", "ngIfThen"], ["calendar", ""], ["errorTemplate", ""], ["autocomplete", "off", 3, "value", "disabled", "readonly", "input", "click", "keydown.enter", "blur"], ["inputControlRef", ""], [3, "mousedown"], [3, "ngClass"], ["calendarContainer", ""], [3, "initialValue", "activeValue", "dateFilter", "timePicker", "timeOnly", "monthAndYearOnly", "monthFirst", "timeSeconds", "timeFormat", "timeMode", "activeFace", "disabled", "readonly", "emptyDateHeading", "emptyTimeHeading", "clockHeadings", "timeModeChange", "clockFaceChange", "valueChange"], ["class", "a3t-datetime--footer", 3, "two-rows-wrap", 4, "ngIf"], [1, "a3t-datetime--footer"], ["type", "button", 1, "btn", "btn-sm", "btn-link", 3, "id", "click"], ["cancelBtn", ""], [1, "d-flex", "justify-content-center"], ["type", "button", 1, "btn", "btn-sm", "btn-secondary", "m-end-1", 3, "id", "click"], ["clearBtn", ""], ["type", "button", 1, "btn", "btn-sm", "btn-primary", 3, "id", "click"], ["nextBtn", ""], ["class", "has-danger", 4, "ngIf"], [1, "has-danger"], ["class", "form-control-feedback d-flex align-items-start m-0 pt-1 pb-0", 4, "ngFor", "ngForOf"], [1, "form-control-feedback", "d-flex", "align-items-start", "m-0", "pt-1", "pb-0"], ["class", "d-icon-exclamation_triangle flex-grow-0 flex-shrink-0 m-end-2", 4, "ngIf"], [1, "flex-grow-1", "flex-shrink-1"], [1, "d-icon-exclamation_triangle", "flex-grow-0", "flex-shrink-0", "m-end-2"]], template: function AdaptDatetime2Component_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵtext(0, "\n    ");
                i0__namespace.ɵɵelementStart(1, "div", 0, 1);
                i0__namespace.ɵɵtext(3, "\n      ");
                i0__namespace.ɵɵelementStart(4, "div", 2);
                i0__namespace.ɵɵtext(5, "\n        ");
                i0__namespace.ɵɵelement(6, "adapt-rx-control-label", 3);
                i0__namespace.ɵɵtext(7, "\n\n        ");
                i0__namespace.ɵɵtemplate(8, AdaptDatetime2Component_div_8_Template, 5, 22, "div", 4);
                i0__namespace.ɵɵtext(9, "\n      ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(10, "\n      ");
                i0__namespace.ɵɵtemplate(11, AdaptDatetime2Component_ng_template_11_Template, 6, 4, "ng-template", 5);
                i0__namespace.ɵɵtext(12, "\n\n    ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(13, "\n\n    ");
                i0__namespace.ɵɵtemplate(14, AdaptDatetime2Component_ng_container_14_Template, 1, 0, "ng-container", 6);
                i0__namespace.ɵɵtext(15, "\n\n    ");
                i0__namespace.ɵɵtemplate(16, AdaptDatetime2Component_ng_template_16_Template, 11, 24, "ng-template", null, 7, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵtext(18, "\n\n    ");
                i0__namespace.ɵɵtemplate(19, AdaptDatetime2Component_ng_container_19_Template, 1, 0, "ng-container", 6);
                i0__namespace.ɵɵtext(20, "\n\n    ");
                i0__namespace.ɵɵtemplate(21, AdaptDatetime2Component_ng_template_21_Template, 3, 1, "ng-template", null, 8, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵtext(23, "\n  ");
            }
            if (rf & 2) {
                var _r4 = i0__namespace.ɵɵreference(17);
                var _r7 = i0__namespace.ɵɵreference(22);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("animationPlacement", "center")("placement", ctx.placement)("appendToBody", ctx.appendToBody)("autoClose", ctx.dropdownAutoClose)("holdFocusInMenu", true)("holdFocusOnOpen", false)("autoFocusFirst", false)("restoreFocusAfterClose", false)("mobileView", i0__namespace.ɵɵpureFunction0(22, _c6$5));
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵclassProp("has-danger", ctx._self.errors.length > 0 && ctx._self.control.touched);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("for", ctx.id)("label", ctx.label)("requiredLabel", ctx.requiredLabel)("showRequiredLabel", ctx._self.required)("tooltip", ctx.tooltipConfig);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", !ctx.inline);
                i0__namespace.ɵɵadvance(6);
                i0__namespace.ɵɵproperty("ngIf", ctx.inline)("ngIfThen", _r4);
                i0__namespace.ɵɵadvance(5);
                i0__namespace.ɵɵproperty("ngIf", !ctx.inline)("ngIfThen", _r7);
            }
        }, encapsulation: 2, data: { animation: [
                i1$1.trigger('heightAnimation', [
                    i1$1.transition('void => *', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.height, {
                            params: {
                                from: '0',
                                to: '*'
                            }
                        })
                    ]),
                    i1$1.transition('* => void', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.height, {
                            params: {
                                from: '*',
                                to: '0'
                            }
                        })
                    ])
                ]),
                i1$1.trigger('validationFeedbackAnimation', [
                    i1$1.transition(':enter', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                    ]),
                    i1$1.transition(':leave', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                    ])
                ])
            ] } });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptDatetime2Component, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-datetime2',
                        template: "\n    <div adaptDropdown\n         [adaptRadarDisableEventSending]=\"true\"\n         #dropdownRef=\"adaptDropdown\"\n         [animationPlacement]=\"'center'\"\n         [placement]=\"placement\"\n         [appendToBody]=\"appendToBody\"\n         [autoClose]=\"dropdownAutoClose\"\n         [holdFocusInMenu]=\"true\"\n         [holdFocusOnOpen]=\"false\"\n         [autoFocusFirst]=\"false\"\n         [restoreFocusAfterClose]=\"false\"\n         [mobileView]=\"{isPicker: true}\">\n      <div adaptDropdownAnchor [class.has-danger]=\"_self.errors.length > 0 && _self.control.touched\">\n        <adapt-rx-control-label [for]=\"id\"\n                                [label]=\"label\"\n                                [requiredLabel]=\"requiredLabel\"\n                                [showRequiredLabel]=\"_self.required\"\n                                [tooltip]=\"tooltipConfig\"></adapt-rx-control-label>\n\n        <div *ngIf=\"!inline\">\n          <input #inputControlRef\n                 autocomplete=\"off\"\n                 [attr.id]=\"id\"\n                 [class]=\"'a3t-datetime--input-control form-control ' + (inputControlClass || '')\"\n                 [class.form-control-disabled-look]=\"readonly && this.disabledStyleForReadonlyState\"\n                 [value]=\"inputControlValue\"\n                 (input)=\"inputControlWrite(inputControlRef.value)\"\n                 (click)=\"inputControlClick()\"\n                 (keydown.enter)=\"inputControlClick()\"\n                 (blur)=\"inputControlBlur()\"\n                 [disabled]=\"disabled\"\n                 [readonly]=\"readonly\"\n                 [attr.placeholder]=\"placeholder\"\n                 [attr.aria-describedby]=\"ariaDescribedBy\"\n                 [class.readonly]=\"readonly\"\n                 [class.i-date]=\"!timePicker\"\n                 [class.i-date-time]=\"timePicker && !timeOnly\"\n                 [class.i-time]=\"timeOnly\"\n                 [class.a3t-datetime--input-control_active]=\"dropdownRef.isOpen()\"\n                 [class.a3t-datetime--input-control_invalid]=\"_self.errors.length > 0 && _self.control.touched\"/>\n        </div>\n      </div>\n      <ng-template adaptDropdownMenuTemplate>\n        <div [class]=\"dropdownClass || ''\" (mousedown)=\"dropdownMouseDown()\">\n          <ng-container *ngIf=\"!inline; then calendar\"></ng-container>\n        </div>\n      </ng-template>\n\n    </div>\n\n    <ng-container *ngIf=\"inline; then calendar\"></ng-container>\n\n    <ng-template #calendar>\n      <div #calendarContainer [ngClass]=\"isMobile ? 'a3t-datetime--calendar-width' : 'a3t-datetime--calendar-min-width'\"\n           [class.a3t-datetime-inline-light]=\"inline && inlineLight\"\n           [class.a3t-datetime-inline-small]=\"inline && inlineSize === 'small'\">\n        <adapt-datetime2-picker [initialValue]=\"initialValue\"\n                                [activeValue]=\"value\"\n                                [dateFilter]=\"dateFilter\"\n                                [timePicker]=\"timePicker\"\n                                [timeOnly]=\"timeOnly\"\n                                [monthAndYearOnly]=\"monthAndYearOnly\"\n                                [monthFirst]=\"monthFirst\"\n                                [timeSeconds]=\"seconds\"\n                                [timeFormat]=\"timeInputFormat\"\n                                [timeMode]=\"timeModeState$.value\"\n                                [activeFace]=\"clockFaceState$.value\"\n                                [disabled]=\"disabled\"\n                                [readonly]=\"readonly\"\n                                [emptyDateHeading]=\"headings.emptyDate\"\n                                [emptyTimeHeading]=\"headings.emptyTime\"\n                                [clockHeadings]=\"headings\"\n                                (timeModeChange)=\"timeModeChange($event)\"\n                                (clockFaceChange)=\"clockFaceChange($event)\"\n                                (valueChange)=\"selectDateTime($event)\"></adapt-datetime2-picker>\n        <div class=\"a3t-datetime--footer\" [class.two-rows-wrap]=\"twoRowsWrap || threeRowsWrap\" *ngIf=\"!inline\">\n          <div>\n            <button #cancelBtn id=\"{{id + '-cancel-btn'}}\" type=\"button\" class=\"btn btn-sm btn-link\"\n                    (click)=\"pickerCloseAndCancel()\">\n              {{headings.cancelBtn}}</button>\n          </div>\n          <div class=\"d-flex justify-content-center\" [class.three-rows-wrap]=\"threeRowsWrap\">\n            <button #clearBtn id=\"{{id + '-clear-btn'}}\" type=\"button\" class=\"btn btn-sm btn-secondary m-end-1\"\n                    (click)=\"pickerClearAll()\">\n              {{headings.clearBtn}}</button>\n            <button #nextBtn id=\"{{id + '-wizard-step-btn'}}\" type=\"button\" class=\"btn btn-sm btn-primary\"\n                    (click)=\"$event.stopPropagation(); goToNextStep()\">\n              <span *ngIf=\"isLastWizardStep\">{{headings.applyBtn}}</span>\n              <span *ngIf=\"!isLastWizardStep\">{{headings.nextBtn}}</span>\n            </button>\n          </div>\n        </div>\n\n        <ng-container *ngIf=\"inline; then errorTemplate\"></ng-container>\n      </div>\n    </ng-template>\n\n    <ng-container *ngIf=\"!inline; then errorTemplate\"></ng-container>\n\n    <ng-template #errorTemplate>\n      <div class=\"has-danger\" *ngIf=\"_self.errors.length > 0 && _self.control.touched\" [@validationFeedbackAnimation]>\n        <div class=\"form-control-feedback d-flex align-items-start m-0 pt-1 pb-0\" *ngFor=\"let error of _self.errors\">\n          <div class=\"d-icon-exclamation_triangle flex-grow-0 flex-shrink-0 m-end-2\" *ngIf=\"inline\"></div>\n          <div class=\"flex-grow-1 flex-shrink-1\"><strong *ngIf=\"error.name\">{{error.name}} </strong>{{error.text}}</div>\n        </div>\n      </div>\n    </ng-template>\n  ",
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: {
                            '[attr.name]': 'name',
                            '[style.display]': '"block"'
                        },
                        animations: [
                            i1$1.trigger('heightAnimation', [
                                i1$1.transition('void => *', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.height, {
                                        params: {
                                            from: '0',
                                            to: '*'
                                        }
                                    })
                                ]),
                                i1$1.transition('* => void', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.height, {
                                        params: {
                                            from: '*',
                                            to: '0'
                                        }
                                    })
                                ])
                            ]),
                            i1$1.trigger('validationFeedbackAnimation', [
                                i1$1.transition(':enter', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                                ]),
                                i1$1.transition(':leave', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                                ])
                            ])
                        ],
                        providers: [
                            i1.createFormControlValueAccessor(AdaptDatetime2Component),
                            i1.createFormControlValidator(AdaptDatetime2Component),
                        ]
                    }]
            }], function () { return [{ type: i0__namespace.Injector }, { type: i1__namespace.AdaptDeviceDetectionService }, { type: i0__namespace.Renderer2 }, { type: i0__namespace.ChangeDetectorRef }, { type: i0__namespace.NgZone }, { type: i1__namespace.AdaptTranslateService }, { type: i2__namespace.AdaptRadarService }, { type: i0__namespace.ElementRef }]; }, { formControl: [{
                    type: i0.Input
                }], id: [{
                    type: i0.Input
                }], name: [{
                    type: i0.Input
                }], label: [{
                    type: i0.Input
                }], placeholder: [{
                    type: i0.Input
                }], inline: [{
                    type: i0.Input
                }], inlineLight: [{
                    type: i0.Input
                }], inlineSize: [{
                    type: i0.Input
                }], initialValue: [{
                    type: i0.Input
                }], inputControlClass: [{
                    type: i0.Input
                }], dropdownClass: [{
                    type: i0.Input
                }], dateInputFormat: [{
                    type: i0.Input
                }], timeInputFormat: [{
                    type: i0.Input
                }], timeInputLongFormat: [{
                    type: i0.Input
                }], timePicker: [{
                    type: i0.Input
                }], timeOnly: [{
                    type: i0.Input
                }], monthAndYearOnly: [{
                    type: i0.Input
                }], monthFirst: [{
                    type: i0.Input
                }], seconds: [{
                    type: i0.Input
                }], timeMin: [{
                    type: i0.Input
                }], timeMax: [{
                    type: i0.Input
                }], dateFilter: [{
                    type: i0.Input
                }], disabledStyleForReadonlyState: [{
                    type: i0.Input
                }], placement: [{
                    type: i0.Input
                }], appendToBody: [{
                    type: i0.Input
                }], headings: [{
                    type: i0.Input
                }], preventWizard: [{
                    type: i0.Input
                }], writeValueParseFormat: [{
                    type: i0.Input
                }], ariaDescribedBy: [{
                    type: i0.Input,
                    args: ['aria-describedby']
                }], open: [{
                    type: i0.Output
                }], close: [{
                    type: i0.Output
                }], valueChange: [{
                    type: i0.Output
                }], focus: [{
                    type: i0.Output
                }], blur: [{
                    type: i0.Output
                }], inputControlRef: [{
                    type: i0.ViewChild,
                    args: ['inputControlRef']
                }], dropdownRef: [{
                    type: i0.ViewChild,
                    args: ['dropdownRef', { static: true }]
                }], calendarContainer: [{
                    type: i0.ViewChild,
                    args: ['calendarContainer']
                }], nextBtn: [{
                    type: i0.ViewChild,
                    args: ['nextBtn']
                }], cancelBtn: [{
                    type: i0.ViewChild,
                    args: ['cancelBtn']
                }], clearBtn: [{
                    type: i0.ViewChild,
                    args: ['clearBtn']
                }] });
    })();

    var _c0$n = ["inputControlRef"];
    var _c1$h = ["dropdownRef"];
    var _c2$f = ["calendarContainer"];
    var _c3$b = ["nextBtn"];
    var _c4$8 = ["cancelBtn"];
    var _c5$6 = ["clearBtn"];
    function AdaptDatetimeRange2Component_div_8_Template(rf, ctx) {
        if (rf & 1) {
            var _r11_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div");
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵelementStart(2, "input", 9, 10);
            i0__namespace.ɵɵlistener("input", function AdaptDatetimeRange2Component_div_8_Template_input_input_2_listener() { i0__namespace.ɵɵrestoreView(_r11_1); var _r9 = i0__namespace.ɵɵreference(3); var ctx_r10 = i0__namespace.ɵɵnextContext(); return ctx_r10.inputControlWrite(_r9.value); })("focus", function AdaptDatetimeRange2Component_div_8_Template_input_focus_2_listener() { i0__namespace.ɵɵrestoreView(_r11_1); var ctx_r12 = i0__namespace.ɵɵnextContext(); return ctx_r12.inputControlFocus(); })("blur", function AdaptDatetimeRange2Component_div_8_Template_input_blur_2_listener() { i0__namespace.ɵɵrestoreView(_r11_1); var ctx_r13 = i0__namespace.ɵɵnextContext(); return ctx_r13.inputControlBlur(); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n        ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            var _r0 = i0__namespace.ɵɵreference(2);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵclassMap("a3t-datetime--input-control form-control " + (ctx_r1.inputControlClass || ""));
            i0__namespace.ɵɵclassProp("form-control-disabled-look", ctx_r1.readonly && ctx_r1.disabledStyleForReadonlyState)("i-date", !ctx_r1.timePicker)("i-date-time", ctx_r1.timePicker && !ctx_r1.timeOnly)("i-time", ctx_r1.timeOnly)("readonly", ctx_r1.readonly)("a3t-datetime--input-control_active", _r0.isOpen())("a3t-datetime--input-control_invalid", ctx_r1._self.errors.length > 0 && ctx_r1._self.control.touched);
            i0__namespace.ɵɵproperty("value", ctx_r1.inputControlValue)("disabled", ctx_r1.disabled)("readonly", ctx_r1.readonly);
            i0__namespace.ɵɵattribute("id", ctx_r1.id)("placeholder", ctx_r1.placeholder)("data-testid", ctx_r1.testID);
        }
    }
    function AdaptDatetimeRange2Component_ng_template_11_ng_container_3_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainer(0);
        }
    }
    function AdaptDatetimeRange2Component_ng_template_11_Template(rf, ctx) {
        if (rf & 1) {
            var _r16_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵtext(0, "\n        ");
            i0__namespace.ɵɵelementStart(1, "div", 11);
            i0__namespace.ɵɵlistener("mousedown", function AdaptDatetimeRange2Component_ng_template_11_Template_div_mousedown_1_listener() { i0__namespace.ɵɵrestoreView(_r16_1); var ctx_r15 = i0__namespace.ɵɵnextContext(); return ctx_r15.dropdownMouseDown(); });
            i0__namespace.ɵɵtext(2, "\n          ");
            i0__namespace.ɵɵtemplate(3, AdaptDatetimeRange2Component_ng_template_11_ng_container_3_Template, 1, 0, "ng-container", 6);
            i0__namespace.ɵɵtext(4, "\n        ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(5, "\n      ");
        }
        if (rf & 2) {
            var ctx_r2 = i0__namespace.ɵɵnextContext();
            var _r4 = i0__namespace.ɵɵreference(17);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵclassMap(ctx_r2.dropdownClass || "");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r2.inline)("ngIfThen", _r4);
        }
    }
    function AdaptDatetimeRange2Component_ng_container_14_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainer(0);
        }
    }
    function AdaptDatetimeRange2Component_ng_template_16_div_21_span_18_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span");
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r23 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r23.headings.applyBtn);
        }
    }
    function AdaptDatetimeRange2Component_ng_template_16_div_21_span_20_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span");
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r24 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r24.headings.nextBtn);
        }
    }
    function AdaptDatetimeRange2Component_ng_template_16_div_21_Template(rf, ctx) {
        if (rf & 1) {
            var _r26_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 18);
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵelementStart(2, "div");
            i0__namespace.ɵɵtext(3, "\n            ");
            i0__namespace.ɵɵelementStart(4, "button", 19, 20);
            i0__namespace.ɵɵlistener("click", function AdaptDatetimeRange2Component_ng_template_16_div_21_Template_button_click_4_listener() { i0__namespace.ɵɵrestoreView(_r26_1); var ctx_r25 = i0__namespace.ɵɵnextContext(2); return ctx_r25.pickerCloseAndCancel(); });
            i0__namespace.ɵɵtext(6);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(7, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(8, "\n          ");
            i0__namespace.ɵɵelementStart(9, "div", 21);
            i0__namespace.ɵɵtext(10, "\n            ");
            i0__namespace.ɵɵelementStart(11, "button", 22, 23);
            i0__namespace.ɵɵlistener("click", function AdaptDatetimeRange2Component_ng_template_16_div_21_Template_button_click_11_listener() { i0__namespace.ɵɵrestoreView(_r26_1); var ctx_r27 = i0__namespace.ɵɵnextContext(2); return ctx_r27.pickerClearAll(); });
            i0__namespace.ɵɵtext(13);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(14, "\n            ");
            i0__namespace.ɵɵelementStart(15, "button", 24, 25);
            i0__namespace.ɵɵlistener("click", function AdaptDatetimeRange2Component_ng_template_16_div_21_Template_button_click_15_listener($event) { i0__namespace.ɵɵrestoreView(_r26_1); var ctx_r28 = i0__namespace.ɵɵnextContext(2); $event.stopPropagation(); return ctx_r28.goToNextStep(); });
            i0__namespace.ɵɵtext(17, "\n              ");
            i0__namespace.ɵɵtemplate(18, AdaptDatetimeRange2Component_ng_template_16_div_21_span_18_Template, 2, 1, "span", 4);
            i0__namespace.ɵɵtext(19, "\n              ");
            i0__namespace.ɵɵtemplate(20, AdaptDatetimeRange2Component_ng_template_16_div_21_span_20_Template, 2, 1, "span", 4);
            i0__namespace.ɵɵtext(21, "\n            ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(22, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(23, "\n        ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r18 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵclassProp("two-rows-wrap", ctx_r18.twoRowsWrap || ctx_r18.threeRowsWrap);
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵattribute("data-testid", ctx_r18.testID + "_cancel");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate1("\n              ", ctx_r18.headings.cancelBtn, "");
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵclassProp("three-rows-wrap", ctx_r18.threeRowsWrap);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵattribute("data-testid", ctx_r18.testID + "_clear");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate1("\n              ", ctx_r18.headings.clearBtn, "");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵattribute("data-testid", ctx_r18.testID + "_apply");
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngIf", ctx_r18.isLastWizardStep);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r18.isLastWizardStep);
        }
    }
    function AdaptDatetimeRange2Component_ng_template_16_ng_container_23_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainer(0);
        }
    }
    function AdaptDatetimeRange2Component_ng_template_16_Template(rf, ctx) {
        if (rf & 1) {
            var _r30_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵtext(0, "\n      ");
            i0__namespace.ɵɵelementStart(1, "div", 12, 13);
            i0__namespace.ɵɵtext(3, "\n        ");
            i0__namespace.ɵɵelementStart(4, "div", 14);
            i0__namespace.ɵɵtext(5, "\n          ");
            i0__namespace.ɵɵelementStart(6, "button", 15);
            i0__namespace.ɵɵlistener("click", function AdaptDatetimeRange2Component_ng_template_16_Template_button_click_6_listener() { i0__namespace.ɵɵrestoreView(_r30_1); var ctx_r29 = i0__namespace.ɵɵnextContext(); return ctx_r29.switchToStartDT(); });
            i0__namespace.ɵɵtext(7);
            i0__namespace.ɵɵelementStart(8, "div");
            i0__namespace.ɵɵtext(9);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(10, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(11, "\n          ");
            i0__namespace.ɵɵelementStart(12, "button", 15);
            i0__namespace.ɵɵlistener("click", function AdaptDatetimeRange2Component_ng_template_16_Template_button_click_12_listener() { i0__namespace.ɵɵrestoreView(_r30_1); var ctx_r31 = i0__namespace.ɵɵnextContext(); return ctx_r31.switchToEndDT(); });
            i0__namespace.ɵɵtext(13);
            i0__namespace.ɵɵelementStart(14, "div");
            i0__namespace.ɵɵtext(15);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(16, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(17, "\n        ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(18, "\n\n        ");
            i0__namespace.ɵɵelementStart(19, "adapt-datetime2-picker", 16);
            i0__namespace.ɵɵlistener("timeModeChange", function AdaptDatetimeRange2Component_ng_template_16_Template_adapt_datetime2_picker_timeModeChange_19_listener($event) { i0__namespace.ɵɵrestoreView(_r30_1); var ctx_r32 = i0__namespace.ɵɵnextContext(); return ctx_r32.timeModeChange($event); })("clockFaceChange", function AdaptDatetimeRange2Component_ng_template_16_Template_adapt_datetime2_picker_clockFaceChange_19_listener($event) { i0__namespace.ɵɵrestoreView(_r30_1); var ctx_r33 = i0__namespace.ɵɵnextContext(); return ctx_r33.clockFaceChange($event); })("valueChange", function AdaptDatetimeRange2Component_ng_template_16_Template_adapt_datetime2_picker_valueChange_19_listener($event) { i0__namespace.ɵɵrestoreView(_r30_1); var ctx_r34 = i0__namespace.ɵɵnextContext(); return ctx_r34.selectDateTime($event); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(20, "\n\n        ");
            i0__namespace.ɵɵtemplate(21, AdaptDatetimeRange2Component_ng_template_16_div_21_Template, 24, 11, "div", 17);
            i0__namespace.ɵɵtext(22, "\n\n        ");
            i0__namespace.ɵɵtemplate(23, AdaptDatetimeRange2Component_ng_template_16_ng_container_23_Template, 1, 0, "ng-container", 6);
            i0__namespace.ɵɵtext(24, "\n      ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(25, "\n    ");
        }
        if (rf & 2) {
            var ctx_r5 = i0__namespace.ɵɵnextContext();
            var _r7 = i0__namespace.ɵɵreference(22);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵclassProp("a3t-datetime-inline-light", ctx_r5.inline && ctx_r5.inlineLight)("a3t-datetime-inline-small", ctx_r5.inline && ctx_r5.inlineSize === "small");
            i0__namespace.ɵɵproperty("ngClass", ctx_r5.isMobile ? "a3t-datetime--calendar-width" : "a3t-datetime--calendar-min-width");
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵclassProp("end-active", ctx_r5.isRtl ? ctx_r5.startRangeActive : !ctx_r5.startRangeActive);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵattribute("data-testid", ctx_r5.testID + "_start");
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n            ", ctx_r5.headings.startLabel, "\n            ");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate(ctx_r5.startValueSummary);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵattribute("data-testid", ctx_r5.testID + "_end");
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n            ", ctx_r5.headings.endLabel, "\n            ");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate(ctx_r5.endValueSummary);
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵproperty("initialValue", ctx_r5.activeDateTime.initialValue)("activeValue", ctx_r5.activeDateTime.activeValue)("dateFilter", ctx_r5.activeDateTime.dateFilter)("dateRange", ctx_r5.activeDateTime.dateRange)("timeMode", ctx_r5.timeModeState$.value)("activeFace", ctx_r5.clockFaceState$.value)("timePicker", ctx_r5.timePicker)("timeOnly", ctx_r5.timeOnly)("timeSeconds", ctx_r5.seconds)("emptyTimeHeading", ctx_r5.headings.emptyTime)("clockHeadings", ctx_r5.headings)("disabled", ctx_r5.disabled)("readonly", ctx_r5.readonly)("hideDatePickerSummary", true)("preventExpandedDateControls", true)("testID", ctx_r5.testID);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r5.inline);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r5.inline)("ngIfThen", _r7);
        }
    }
    function AdaptDatetimeRange2Component_ng_container_19_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainer(0);
        }
    }
    function AdaptDatetimeRange2Component_ng_template_21_div_1_div_2_div_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "div", 32);
        }
    }
    function AdaptDatetimeRange2Component_ng_template_21_div_1_div_2_strong_5_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "strong");
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var error_r37 = i0__namespace.ɵɵnextContext().$implicit;
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("", error_r37.name, " ");
        }
    }
    function AdaptDatetimeRange2Component_ng_template_21_div_1_div_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 29);
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵtemplate(2, AdaptDatetimeRange2Component_ng_template_21_div_1_div_2_div_2_Template, 1, 0, "div", 30);
            i0__namespace.ɵɵtext(3, "\n          ");
            i0__namespace.ɵɵelementStart(4, "div", 31);
            i0__namespace.ɵɵtemplate(5, AdaptDatetimeRange2Component_ng_template_21_div_1_div_2_strong_5_Template, 2, 1, "strong", 4);
            i0__namespace.ɵɵtext(6);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(7, "\n        ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var error_r37 = ctx.$implicit;
            var ctx_r36 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r36.inline);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngIf", error_r37.name);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(error_r37.text);
        }
    }
    function AdaptDatetimeRange2Component_ng_template_21_div_1_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 27);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵtemplate(2, AdaptDatetimeRange2Component_ng_template_21_div_1_div_2_Template, 8, 3, "div", 28);
            i0__namespace.ɵɵtext(3, "\n      ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r35 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵproperty("@validationFeedbackAnimation", undefined);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngForOf", ctx_r35._self.errors);
        }
    }
    function AdaptDatetimeRange2Component_ng_template_21_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtext(0, "\n      ");
            i0__namespace.ɵɵtemplate(1, AdaptDatetimeRange2Component_ng_template_21_div_1_Template, 4, 2, "div", 26);
            i0__namespace.ɵɵtext(2, "\n    ");
        }
        if (rf & 2) {
            var ctx_r8 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("ngIf", ctx_r8._self.errors.length > 0 && ctx_r8._self.control.touched);
        }
    }
    var _c6$4 = function () { return { isPicker: true }; };
    var MIN_DROPDOWN_WIDTH = 270;
    var AdaptDatetimeRange2Component = /** @class */ (function (_super) {
        __extends(AdaptDatetimeRange2Component, _super);
        function AdaptDatetimeRange2Component(_injector, _dir, _deviceDetectorService, _renderer, _changeDetectorRef, _ngZone, ts, _adaptRadarService, _elem) {
            var _this = _super.call(this, _injector, ts, _adaptRadarService, _elem, i1.AdaptRadarAngularCustomEventName.AdaptDatetimeRange2) || this;
            _this._injector = _injector;
            _this._dir = _dir;
            _this._deviceDetectorService = _deviceDetectorService;
            _this._renderer = _renderer;
            _this._changeDetectorRef = _changeDetectorRef;
            _this._ngZone = _ngZone;
            // Self link
            _this._self = _this;
            // UI fields
            _this.inputControlValue = '';
            _this.dropdownAutoClose = 'outside';
            _this.timeModeState$ = new rxjs.BehaviorSubject(false);
            _this.clockFaceState$ = new rxjs.BehaviorSubject(exports.Clock2FaceUnit.Hours);
            _this.isLastWizardStep = false;
            _this.twoRowsWrap = false;
            _this.threeRowsWrap = false;
            _this.isRtl = false;
            _this.defaultTexts = {
                startLabel: '',
                endLabel: ''
            };
            _this.defaultErrors = {
                invalidStartName: '',
                invalidStart: '',
                invalidEndName: '',
                invalidEnd: '',
                rangeName: '',
                range: '',
                rangeOrderName: '',
                rangeOrder: '',
                disabledDateStartName: '',
                disabledDateStart: '',
                disabledDateEndName: '',
                disabledDateEnd: '',
                disabledTimeStartName: '',
                disabledTimeStart: '',
                disabledTimeEndName: '',
                disabledTimeEnd: '',
            };
            /**
             * Label icon with a tooltip or popover
             */
            _this.tooltipConfig = null;
            /**
             * Datetime input label
             */
            _this.label = '';
            /**
             * Datetime input placeholder
             */
            _this.placeholder = '';
            /**
             * DateTime inline mode
             */
            _this.inline = false;
            /**
             * DateTime inline light color scheme mode
             */
            _this.inlineLight = true;
            /**
             * DateTime inline small size mode
             */
            _this.inlineSize = 'default';
            /**
             * Class for datetime dropdown
             */
            _this.dropdownClass = 'dropdown-menu p-0';
            /**
             * Date input format
             */
            _this.dateInputFormat = 'L';
            /**
             * Time input format without seconds
             */
            _this.timeInputFormat = 'LT';
            /**
             * Time input format with seconds
             */
            _this.timeInputLongFormat = 'LTS';
            /**
             * Toggle time picker
             */
            _this.timePicker = false;
            /**
             * Use only the time picker flag
             */
            _this.timeOnly = false;
            /**
             * Use seconds in time picker
             */
            _this.seconds = false;
            /**
             * Use disabled style for the control if [readonly]=true
             */
            _this.disabledStyleForReadonlyState = false;
            /**
             * Picker placement
             */
            _this.placement = ['bottom-left', 'top-left', 'bottom-right', 'top-right', 'bottom-left'];
            /**
             * Append to body trigger
             */
            _this.appendToBody = false;
            /**
             * Prevent choosing dateTime Range value step-by-step
             */
            _this.preventWizard = false;
            // Outputs
            /**
             * Event on picker open
             */
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.open = new i0.EventEmitter();
            /**
             * Event on picker close
             */
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.close = new i0.EventEmitter();
            /**
             * Event on ngModel change
             */
            _this.valueChange = new i0.EventEmitter();
            /**
             * FormControl focus implementation
             */
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.focus = new i0.EventEmitter();
            /**
             * FormControl blur implementation
             */
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.blur = new i0.EventEmitter();
            // - - - - - - - - - - - - - - - - - - - - - - - - - - - -
            // Privates fields for ControlValueAccessor
            _this._onTouchedCallback = rxjs.noop;
            _this._onChangeCallback = rxjs.noop;
            // ngModel value
            _this._model = null;
            // previousNgModel value
            _this._previousModel = null;
            // - - - - - - - - - - - - - - - - - - - - - - - - - - - -
            // Template refs
            // Active range's edge
            _this._dtStartIsActive = true;
            // Subjects
            _this._editInProgress = new rxjs.BehaviorSubject(false);
            _this.dropdownAutoClose = _this._deviceDetectorService.isMobile() ? false : 'outside';
            _this.isMobile = _this._deviceDetectorService.isMobile();
            _this.isIE = _this._deviceDetectorService.isIE();
            _this.setDefaultTexts(ts.getCurrentLanguage());
            return _this;
        }
        Object.defineProperty(AdaptDatetimeRange2Component.prototype, "editInProgress", {
            get: function () {
                var inline = this.inline;
                var ddOpen = this.dropdownRef && this.dropdownRef.isOpen();
                var inputInFocus = this.inputControlRef && (document.activeElement === this.inputControlRef.nativeElement);
                return !inline && (ddOpen || inputInFocus);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetimeRange2Component.prototype, "startValueSummary", {
            get: function () {
                if (this.value && this.value[0]) {
                    return this.value[0].isValid() ? this.value[0].format(this._getInputControlFormat()) : this.headings.invalidValueLabel;
                }
                return this.headings.emptyStartLabel;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetimeRange2Component.prototype, "endValueSummary", {
            get: function () {
                if (this.value && this.value[1]) {
                    return this.value[1].isValid() ? this.value[1].format(this._getInputControlFormat()) : this.headings.invalidValueLabel;
                }
                return this.headings.emptyEndLabel;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetimeRange2Component.prototype, "startRangeActive", {
            get: function () {
                return this._dtStartIsActive;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetimeRange2Component.prototype, "value", {
            get: function () {
                return this._model;
            },
            set: function (v) {
                if (this.disabled) {
                    return;
                }
                if (v && (v[0] || v[1])) {
                    this._model = [v[0], v[1]];
                }
                else {
                    this._model = null;
                }
                this._onChangeCallback(this._model);
                this.valueChange.emit(this._model);
                this._updateActiveDateTime();
                this._inputControlFormatting();
            },
            enumerable: false,
            configurable: true
        });
        AdaptDatetimeRange2Component.prototype.ngOnInit = function () {
            var _this = this;
            _super.prototype.ngOnInit.call(this);
            this.initControl();
            if (!this.id) {
                this.id = "dtr-" + AdaptDatetimeRange2Component.DTR_ID++;
            }
            if (!this.testID) {
                this.testID = "dtr-" + AdaptDatetimeRange2Component.DTR_TEST_ID++;
            }
            if (!this.name) {
                this.name = this.id + "-form-control";
            }
            if (this.timeOnly) {
                this.timePicker = true;
            }
            if (this.inline) {
                this._openPicker();
            }
            if (!this.mainCls) {
                this.mainCls = this.inline ? '' : 'form-group';
            }
            // Detect close event on dd
            this._dtrDropdownOpenChangeSub = this.dropdownRef.onClose.subscribe(function () {
                if (!_this.inline) {
                    _this._closePicker();
                }
            });
            var _loop_1 = function (prop) {
                if (prop) {
                    this_1.overrideBuildInValidatorMessage(prop, function () { return _this._customErrorTexts[prop]; });
                }
            };
            var this_1 = this;
            for (var prop in this._customErrorTexts) {
                _loop_1(prop);
            }
            this._editInProgress
                .pipe(operators.distinctUntilChanged())
                .subscribe(function (inProgress) {
                if (!(_this.control && _this.control.control)) {
                    return;
                }
                if (!inProgress) {
                    _this.control.control.updateValueAndValidity();
                }
            });
            this.headings = Object.assign(Object.assign({}, this.defaultTexts), this.headings);
            if (this.tooltipIconCls && !this.popoverIcon) {
                this.tooltipConfig = {
                    iconName: this.tooltipIconCls,
                    content: this.tooltipText,
                    placement: 'top',
                    popoverMode: false
                };
            }
            else if (this.popoverIcon) {
                this.tooltipConfig = {
                    iconName: this.popoverIcon,
                    content: this.popoverContent,
                    placement: this.popoverPlacement,
                    popoverMode: true,
                    popoverTriggers: this.popoverTriggers
                };
            }
            this.isRtl = this._dir.value === 'rtl';
        };
        AdaptDatetimeRange2Component.prototype.ngOnDestroy = function () {
            this._dtrDropdownOpenChangeSub.unsubscribe();
        };
        AdaptDatetimeRange2Component.prototype.setDefaultTexts = function (translation) {
            this.defaultTexts.startLabel = translation['adapt.datetimeRange.startDate'];
            this.defaultTexts.endLabel = translation['adapt.datetimeRange.endDate'];
            this.defaultTexts.cancelBtn = translation['adapt.common.cancel'];
            this.defaultTexts.clearBtn = translation['adapt.common.clearAll'];
            this.defaultTexts.nextBtn = translation['adapt.common.next'];
            this.defaultTexts.applyBtn = translation['adapt.common.ok'];
            this.defaultTexts.emptyStartLabel = translation['adapt.datetimeRange.emptyStart'];
            this.defaultTexts.emptyEndLabel = translation['adapt.datetimeRange.emptyEnd'];
            this.defaultTexts.emptyTime = translation['adapt.datetimeRange.emptyTime'];
            this.defaultTexts.invalidValueLabel = translation['adapt.datetimeRange.invalidValue'];
            this.requiredLabel = translation['adapt.common.required'];
            this.defaultErrors.invalidStartName = translation['adapt.datetimeRange.error.invalidStartName'];
            this.defaultErrors.invalidStart = translation['adapt.datetimeRange.error.invalidStart'];
            this.defaultErrors.invalidEndName = translation['adapt.datetimeRange.error.invalidEndName'];
            this.defaultErrors.invalidEnd = translation['adapt.datetimeRange.error.invalidEnd'];
            this.defaultErrors.rangeName = translation['adapt.datetimeRange.error.rangeName'];
            this.defaultErrors.range = translation['adapt.datetimeRange.error.range'];
            this.defaultErrors.rangeOrderName = translation['adapt.datetimeRange.error.rangeOrderName'];
            this.defaultErrors.rangeOrder = translation['adapt.datetimeRange.error.rangeOrder'];
            this.defaultErrors.disabledDateStartName = translation['adapt.datetimeRange.error.disabledDateStartName'];
            this.defaultErrors.disabledDateStart = translation['adapt.datetimeRange.error.disabledDateStart'];
            this.defaultErrors.disabledDateEndName = translation['adapt.datetimeRange.error.disabledDateEndName'];
            this.defaultErrors.disabledDateEnd = translation['adapt.datetimeRange.error.disabledDateEnd'];
            this.defaultErrors.disabledTimeStartName = translation['adapt.datetimeRange.error.disabledTimeStartName'];
            this.defaultErrors.disabledTimeStart = translation['adapt.datetimeRange.error.disabledTimeStart'];
            this.defaultErrors.disabledTimeEndName = translation['adapt.datetimeRange.error.disabledTimeEndName'];
            this.defaultErrors.disabledTimeEnd = translation['adapt.datetimeRange.error.disabledTimeEnd'];
        };
        /**
         * Change active range edge to start
         */
        AdaptDatetimeRange2Component.prototype.switchToStartDT = function () {
            this._dtStartIsActive = true;
            this._updateActiveDateTime();
            this.timeModeState$.next(this.timeOnly);
            this.clockFaceState$.next(exports.Clock2FaceUnit.Hours);
        };
        /**
         * Change active range edge to end
         */
        AdaptDatetimeRange2Component.prototype.switchToEndDT = function () {
            this._dtStartIsActive = false;
            this._updateActiveDateTime();
            this.timeModeState$.next(this.timeOnly);
            this.clockFaceState$.next(exports.Clock2FaceUnit.Hours);
        };
        /**
         * Datetime wizard
         */
        AdaptDatetimeRange2Component.prototype.goToNextStep = function () {
            if (this.inline) {
                return;
            }
            if (this.preventWizard) {
                this.pickerCloseAndApply();
                return;
            }
            if (this.timePicker) {
                if (!this.timeModeState$.value) {
                    this.timeModeState$.next(true);
                }
                else {
                    if (this.clockFaceState$.value === (this.seconds ? exports.Clock2FaceUnit.Seconds : exports.Clock2FaceUnit.Minutes)) {
                        if (this._dtStartIsActive) {
                            this.switchToEndDT();
                        }
                        else {
                            if (!!this.value && !!this.value[1] && this.value[1].isValid()) {
                                if (!!this.value && !!this.value[0] && this.value[0].isValid()) {
                                    this.pickerCloseAndApply();
                                }
                                else {
                                    this.switchToStartDT();
                                }
                            }
                            else {
                                this.switchToStartDT();
                            }
                        }
                    }
                    else {
                        this.clockFaceState$.next(this.clockFaceState$.value + 1);
                    }
                }
            }
            else {
                this._dtStartIsActive ? this.switchToEndDT() : this.pickerCloseAndApply();
            }
            this._checkIfLastWizardStep();
        };
        /**
         * Select date/time on picker
         */
        AdaptDatetimeRange2Component.prototype.selectDateTime = function (v) {
            var oldModel = this.value ? [this.value[0], this.value[1]] : [null, null];
            if (this._dtStartIsActive) {
                this.value = [
                    v.clone(),
                    oldModel[1] ? oldModel[1].clone() : null
                ];
            }
            else {
                this.value = [
                    oldModel[0] ? oldModel[0].clone() : null,
                    v.clone()
                ];
            }
            if (this.inline) {
                this._onTouchedCallback();
            }
        };
        /**
         * Close picker and set previous model value
         */
        AdaptDatetimeRange2Component.prototype.pickerCloseAndCancel = function () {
            this.value = this._previousModel;
            this._closePicker();
        };
        /**
         * Close picker and use current value
         */
        AdaptDatetimeRange2Component.prototype.pickerCloseAndApply = function () {
            this._closePicker();
        };
        /**
         * Clear model value
         */
        AdaptDatetimeRange2Component.prototype.pickerClearAll = function () {
            this.value = null;
            this._checkIfLastWizardStep();
            if (this.isMobile) {
                this._closePicker();
            }
        };
        /**
         * Input control (input) handler
         */
        AdaptDatetimeRange2Component.prototype.inputControlWrite = function (v) {
            this.inputControlValue = v;
            if (v) {
                this.value = this._tryParseRange(v);
            }
            else {
                this.value = [null, null];
            }
        };
        /**
         * Input control (focus) handler
         */
        AdaptDatetimeRange2Component.prototype.inputControlFocus = function () {
            if (this.disabled || this.readonly) {
                return;
            }
            this.focus.emit();
            if (!this.dropdownRef.isOpen()) {
                this._openPicker();
            }
            this._editInProgress.next(this.editInProgress);
        };
        /**
         * Input control (blur) handler
         */
        AdaptDatetimeRange2Component.prototype.inputControlBlur = function () {
            this.blur.emit();
            this._inputControlFormatting();
            if (!this.dropdownRef.isOpen()) {
                this._onTouchedCallback();
            }
            this._editInProgress.next(this.editInProgress);
        };
        /**
         * Dropdown mousedown handler
         */
        AdaptDatetimeRange2Component.prototype.dropdownMouseDown = function () {
            if (this.inputControlRef) {
                this.inputControlRef.nativeElement.blur();
            }
        };
        /**
         * Open picker
         */
        /**
         * Time mode change handler
         */
        AdaptDatetimeRange2Component.prototype.timeModeChange = function (v) {
            var _this = this;
            if (this.timeModeState$.value !== v) {
                this.timeModeState$.next(v);
            }
            if (v && (this.clockFaceState$.value !== exports.Clock2FaceUnit.Hours)) {
                this._ngZone.onStable
                    .pipe(operators.take(1))
                    .subscribe(function () {
                    _this.clockFaceState$.next(exports.Clock2FaceUnit.Hours);
                });
            }
            this._checkIfLastWizardStep();
        };
        /**
         * Close picker
         */
        /**
         * Clock face change handler
         */
        AdaptDatetimeRange2Component.prototype.clockFaceChange = function (v) {
            if (this.clockFaceState$.value !== v) {
                this.clockFaceState$.next(v);
            }
            this._checkIfLastWizardStep();
        };
        AdaptDatetimeRange2Component.prototype.writeValue = function (v) {
            this._model = v ? [v[0] ? moment__default["default"](v[0]) : null, v[1] ? moment__default["default"](v[1]) : null] : [null, null];
            this._updateActiveDateTime();
            this._inputControlFormatting();
        };
        /**
         * Get formatted [timeMin] prop value
         */
        AdaptDatetimeRange2Component.prototype.registerOnChange = function (fn) {
            this._onChangeCallback = fn;
        };
        /**
         * Get formatted [timeMax] prop value
         */
        AdaptDatetimeRange2Component.prototype.registerOnTouched = function (fn) {
            this._onTouchedCallback = fn;
        };
        /**
         * Get formatted [timeMin] prop value
         */
        AdaptDatetimeRange2Component.prototype.setDisabledState = function (isDisabled) {
            this._disabled = isDisabled;
        };
        /**
         * Get formatted [timeMax] prop value
         */
        AdaptDatetimeRange2Component.prototype.validate = function (c) {
            var invalidStartValueErrorMsg = {
                dateError: this._customErrorTexts.invalidStartValueError || {
                    name: this.defaultErrors.invalidStartName,
                    text: this.defaultErrors.invalidStart
                }
            };
            var invalidEndValueErrorMsg = {
                dateError: this._customErrorTexts.invalidEndValueError || {
                    name: this.defaultErrors.invalidEndName,
                    text: this.defaultErrors.invalidEnd
                }
            };
            var rangeModelErrorMsg = {
                dateError: this._customErrorTexts.missedRangeValueError || {
                    name: this.defaultErrors.rangeName,
                    text: this.defaultErrors.range
                }
            };
            var rangeErrorMsg = {
                dateError: this._customErrorTexts.rangeValuesOrderError || {
                    name: this.defaultErrors.rangeOrderName,
                    text: this.defaultErrors.rangeOrder
                }
            };
            var startDateErrorMsg = {
                dateError: this._customErrorTexts.unselectableStartDateError || {
                    name: this.defaultErrors.disabledDateStartName,
                    text: this.defaultErrors.disabledDateStart
                }
            };
            var endDateErrorMsg = {
                dateError: this._customErrorTexts.unselectableEndDateError || {
                    name: this.defaultErrors.disabledDateEndName,
                    text: this.defaultErrors.disabledDateEnd
                }
            };
            var unselectableStartTimeErrorMsg = {
                dateError: this._customErrorTexts.unselectableStartTimeError || {
                    name: this.defaultErrors.disabledTimeStartName,
                    text: i1.formatString(this.defaultErrors.disabledTimeStart, this._getFormattedStartMinTime(), this._getFormattedStartMaxTime())
                }
            };
            var unselectableEndTimeErrorMsg = {
                dateError: this._customErrorTexts.unselectableEndTimeError || {
                    name: this.defaultErrors.disabledTimeEndName,
                    text: i1.formatString(this.defaultErrors.disabledTimeEnd, this._getFormattedEndMinTime(), this._getFormattedEndMaxTime())
                }
            };
            var invalidStartValueError = c.value && c.value[0] && !c.value[0].isValid();
            var invalidEndValueError = c.value && c.value[1] && !c.value[1].isValid();
            var rangeModelError = !this.editInProgress && c.value && (c.value[0] || c.value[1]) && !(c.value[0] && c.value[1]);
            var rangeError = c.value && c.value[0] && c.value[0].isValid() && c.value[1] && c.value[1].isValid() &&
                c.value[0].isAfter(c.value[1]);
            var startDateError = c.value && c.value[0] && c.value[0].isValid() && !this._startDateFilter(c.value[0], c);
            var endDateError = c.value && c.value[1] && c.value[1].isValid() && !this._endDateFilter(c.value[1], c);
            var unselectableStartTimeError = c.value && c.value[0] && c.value[0].isValid() && this.startTimeMin && this.startTimeMax &&
                !IsTimeInRange(c.value[0], this.startTimeMin, this.startTimeMax);
            var unselectableEndTimeError = c.value && c.value[1] && c.value[1].isValid() && this.endTimeMin && this.endTimeMax &&
                !IsTimeInRange(c.value[1], this.endTimeMin, this.endTimeMax);
            return invalidStartValueError ? invalidStartValueErrorMsg :
                invalidEndValueError ? invalidEndValueErrorMsg :
                    rangeModelError ? rangeModelErrorMsg :
                        rangeError ? rangeErrorMsg :
                            startDateError ? startDateErrorMsg :
                                endDateError ? endDateErrorMsg :
                                    unselectableStartTimeError ? unselectableStartTimeErrorMsg :
                                        unselectableEndTimeError ? unselectableEndTimeErrorMsg : null;
        };
        /**
         * Get format for input control value
         */
        AdaptDatetimeRange2Component.prototype._truncateBtn = function (btn) {
            var xPadings = 10;
            if (btn.offsetWidth + xPadings > window.innerWidth - xPadings) {
                this._renderer.addClass(btn, 'text-truncate');
                return window.innerWidth - xPadings;
            }
            else {
                return btn.offsetWidth + xPadings;
            }
        };
        AdaptDatetimeRange2Component.prototype._wrapButtons = function () {
            var xPadings = 10; // left and right padding
            var cancelBtnWidth = this.cancelBtn.nativeElement.offsetWidth; // cancel button width
            var nextBtnWidth = this.nextBtn.nativeElement.offsetWidth; // next button width
            var clearBtnWidth = this.clearBtn.nativeElement.offsetWidth; // clear button width
            var btnGroupWidth = nextBtnWidth + clearBtnWidth + 5; // clear + next buttons width + margins
            var buttonsWidth = cancelBtnWidth + btnGroupWidth + xPadings; // all buttons width
            var containerWidth = buttonsWidth < MIN_DROPDOWN_WIDTH ? MIN_DROPDOWN_WIDTH : buttonsWidth;
            if (window.innerWidth - xPadings < buttonsWidth) {
                // wrap button in two rows
                if (btnGroupWidth + xPadings < window.innerWidth - xPadings) {
                    var firstRowWidth = btnGroupWidth + xPadings < MIN_DROPDOWN_WIDTH ? MIN_DROPDOWN_WIDTH : btnGroupWidth + xPadings;
                    var secondRowWidth = this._truncateBtn(this.cancelBtn.nativeElement);
                    containerWidth = Math.max(firstRowWidth, secondRowWidth);
                    this._renderer.setStyle(this.calendarContainer.nativeElement, 'width', containerWidth + "px");
                    this.twoRowsWrap = true;
                }
                else {
                    // wrap button in three rows
                    var firstRowWidth = this._truncateBtn(this.nextBtn.nativeElement);
                    var secondRowWidth = this._truncateBtn(this.clearBtn.nativeElement);
                    var thirdRowWidth = this._truncateBtn(this.cancelBtn.nativeElement);
                    var maxButtonWidth = Math.max(firstRowWidth, secondRowWidth, thirdRowWidth);
                    containerWidth = maxButtonWidth < MIN_DROPDOWN_WIDTH ? MIN_DROPDOWN_WIDTH : maxButtonWidth;
                    this._renderer.setStyle(this.calendarContainer.nativeElement, 'width', containerWidth + "px");
                    this.threeRowsWrap = true;
                }
            }
            else {
                this._renderer.setStyle(this.calendarContainer.nativeElement, 'width', containerWidth + "px");
            }
        };
        AdaptDatetimeRange2Component.prototype._openPicker = function () {
            var _this = this;
            this._updateActiveDateTime();
            if (this._deviceDetectorService.isMobile() && this.inputControlRef) {
                this.inputControlRef.nativeElement.blur();
            }
            if (!this.inline && (this.isMobile || this.isIE)) {
                // in some cases nativeElement is undefined, need to wait for zone stable
                this._ngZone.onStable
                    .pipe(operators.take(1))
                    .subscribe(function () {
                    _this._wrapButtons();
                });
            }
            this._previousModel = this.value ? [
                this.value[0] ? this.value[0].clone() : null,
                this.value[1] ? this.value[1].clone() : null
            ] : null;
            if (this.inline) {
                return;
            }
            this.switchToStartDT();
            this.dropdownRef.open();
            this.open.emit(this.id);
            this._editInProgress.next(this.editInProgress);
        };
        /**
         * Parse text into dateRange model
         */
        AdaptDatetimeRange2Component.prototype._closePicker = function () {
            this.twoRowsWrap = false;
            this.threeRowsWrap = false;
            if (this.inline) {
                return;
            }
            this.dropdownRef.close(); // DOUBLE CLOSE BECAUSE OF SUBSCRIPTION
            this.close.emit(this.id);
            this._onTouchedCallback();
            this._editInProgress.next(this.editInProgress);
        };
        /**
         * Get time format
         */
        AdaptDatetimeRange2Component.prototype._inputControlFormatting = function () {
            if (this.inputControlRef && (this.inputControlRef.nativeElement === document.activeElement)) {
                return;
            }
            if (this.value) {
                if ((this.value[0] && !this.value[0].isValid()) || (this.value[1] && !this.value[1].isValid())) {
                    return;
                }
                if (this.value[0] && this.value[0].isValid()) {
                    this.inputControlValue = this.value[0].format(this._getInputControlFormat());
                }
                else {
                    this.inputControlValue = '';
                }
                if (this.value[1] && this.value[1].isValid()) {
                    this.inputControlValue += ' - ' + this.value[1].format(this._getInputControlFormat());
                }
            }
            else {
                this.inputControlValue = '';
            }
            if (!this._changeDetectorRef.destroyed) {
                this._changeDetectorRef.detectChanges();
            }
        };
        /**
         * Combined filter for the start calendar
         */
        AdaptDatetimeRange2Component.prototype._getFormattedStartMinTime = function () {
            return (this.startTimeMin || moment__default["default"]().startOf('day')).format(this._getTimeFormat());
        };
        /**
         * Combined filter for the end calendar
         */
        AdaptDatetimeRange2Component.prototype._getFormattedStartMaxTime = function () {
            return (this.startTimeMax || moment__default["default"]().endOf('day')).format(this._getTimeFormat());
        };
        AdaptDatetimeRange2Component.prototype._getFormattedEndMinTime = function () {
            return (this.endTimeMin || moment__default["default"]().startOf('day')).format(this._getTimeFormat());
        };
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        // ControlValueAccessor
        AdaptDatetimeRange2Component.prototype._getFormattedEndMaxTime = function () {
            return (this.endTimeMax || moment__default["default"]().endOf('day')).format(this._getTimeFormat());
        };
        AdaptDatetimeRange2Component.prototype._getInputControlFormat = function () {
            var format = this.dateInputFormat;
            if (this.timePicker) {
                format += " " + this._getTimeFormat();
                if (this.timeOnly) {
                    format = this._getTimeFormat();
                }
            }
            return format;
        };
        AdaptDatetimeRange2Component.prototype._tryParseRange = function (v) {
            var start;
            var end;
            var strictSeparator = v.split(/\s\W\s/g);
            if (strictSeparator.length === 2) {
                start = this.timeOnly ?
                    moment__default["default"](moment__default["default"]().format(this.dateInputFormat) + " " + strictSeparator[0], this.dateInputFormat + ' ' + this._getTimeFormat()) :
                    moment__default["default"](strictSeparator[0], this._getInputControlFormat());
                end = this.timeOnly ?
                    moment__default["default"](moment__default["default"]().format(this.dateInputFormat) + " " + strictSeparator[1], this.dateInputFormat + ' ' + this._getTimeFormat()) :
                    moment__default["default"](strictSeparator[1], this._getInputControlFormat());
                return [
                    strictSeparator[0] ? start.clone() : null,
                    strictSeparator[1] ? end.clone() : null
                ];
            }
            start = this.timeOnly ? moment__default["default"](moment__default["default"]().format(this.dateInputFormat) + " " + v) : moment__default["default"](v);
            if (start.isValid()) {
                return [start.clone(), null];
            }
            var parts = v.split(' ');
            if (parts.length > 1) {
                var startStr = '';
                var endStr = '';
                for (var i = 0; i < parts.length; i++) {
                    startStr += (parts[i] + ' ');
                    var testStart = this.timeOnly ? moment__default["default"](moment__default["default"]().format(this.dateInputFormat) + " " + startStr) : moment__default["default"](startStr);
                    if (testStart.isValid()) {
                        start = testStart;
                    }
                    endStr = parts[parts.length - 1 - i] + ' ' + endStr;
                    var testEnd = this.timeOnly ? moment__default["default"](moment__default["default"]().format(this.dateInputFormat) + " " + endStr) : moment__default["default"](endStr);
                    if (testEnd.isValid()) {
                        end = testEnd;
                    }
                }
            }
            return [start.clone(), end ? end.clone() : null];
        };
        AdaptDatetimeRange2Component.prototype._getTimeFormat = function () {
            return this.seconds ? this.timeInputLongFormat : this.timeInputFormat;
        };
        AdaptDatetimeRange2Component.prototype._startDateFilter = function (d, formControl) {
            var acceptedByRangeFilter = this.value && this.value[1] && this.value[1].isValid() ?
                d.clone().startOf('day').isSameOrBefore(this.value[1].clone().startOf('day')) : true;
            var acceptedByCustomFilter = this.startDateFilter ? this.startDateFilter(d, formControl) : true;
            return acceptedByRangeFilter && acceptedByCustomFilter;
        };
        AdaptDatetimeRange2Component.prototype._endDateFilter = function (d, formControl) {
            var acceptedByRangeFilter = this.value && this.value[0] && this.value[0].isValid() ?
                d.clone().startOf('day').isSameOrAfter(this.value[0].clone().startOf('day')) : true;
            var acceptedByCustomFilter = this.endDateFilter ? this.endDateFilter(d, formControl) : true;
            return acceptedByRangeFilter && acceptedByCustomFilter;
        };
        AdaptDatetimeRange2Component.prototype._updateActiveDateTime = function () {
            this.activeDateTime = this._dtStartIsActive ?
                {
                    initialValue: this.initialValue ? this.initialValue[0] : null,
                    activeValue: this.value ? this.value[0] : null,
                    dateFilter: this._startDateFilter.bind(this),
                    dateRange: this.value ? [this.value[0], this.value[1]] : [null, null]
                } :
                {
                    initialValue: this.initialValue ? this.initialValue[1] : null,
                    activeValue: this.value ? this.value[1] : null,
                    dateFilter: this._endDateFilter.bind(this),
                    dateRange: this.value ? [this.value[0], this.value[1]] : [null, null]
                };
        };
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        // Validator
        /**
         * Wizard's last step checking
         */
        AdaptDatetimeRange2Component.prototype._checkIfLastWizardStep = function () {
            var _this = this;
            var wizard = !this.preventWizard;
            var lastRangeValue = !this._dtStartIsActive;
            var lastTimeStep = this.timePicker && this.timeModeState$.value &&
                (this.clockFaceState$.value === (this.seconds ? exports.Clock2FaceUnit.Seconds : exports.Clock2FaceUnit.Minutes));
            var timePicker = this.timePicker;
            var lastStep = timePicker ? lastTimeStep : true;
            var modelFull = !timePicker ||
                (!!this.value && !!this.value[0] && this.value[0].isValid() && !!this.value[1] && this.value[1].isValid());
            this._ngZone.onStable
                .pipe(operators.take(1))
                .subscribe(function () {
                _this.isLastWizardStep = !wizard || (lastRangeValue && lastStep && modelFull);
            });
        };
        return AdaptDatetimeRange2Component;
    }(i1.FormComponent));
    // Static fields
    AdaptDatetimeRange2Component.DTR_ID = 1;
    AdaptDatetimeRange2Component.DTR_TEST_ID = 1;
    AdaptDatetimeRange2Component.ɵfac = function AdaptDatetimeRange2Component_Factory(t) { return new (t || AdaptDatetimeRange2Component)(i0__namespace.ɵɵdirectiveInject(i0__namespace.Injector), i0__namespace.ɵɵdirectiveInject(i2__namespace$1.Directionality), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptDeviceDetectionService), i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(i0__namespace.ChangeDetectorRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.NgZone), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef)); };
    AdaptDatetimeRange2Component.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptDatetimeRange2Component, selectors: [["adapt-datetime-range2"]], viewQuery: function AdaptDatetimeRange2Component_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$n, 5);
                i0__namespace.ɵɵviewQuery(_c1$h, 7);
                i0__namespace.ɵɵviewQuery(_c2$f, 5);
                i0__namespace.ɵɵviewQuery(_c3$b, 5);
                i0__namespace.ɵɵviewQuery(_c4$8, 5);
                i0__namespace.ɵɵviewQuery(_c5$6, 5);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.inputControlRef = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.dropdownRef = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.calendarContainer = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.nextBtn = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.cancelBtn = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.clearBtn = _t.first);
            }
        }, hostVars: 3, hostBindings: function AdaptDatetimeRange2Component_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵattribute("name", ctx.name);
                i0__namespace.ɵɵstyleProp("display", "block");
            }
        }, inputs: { formControl: "formControl", id: "id", testID: "testID", name: "name", label: "label", placeholder: "placeholder", inline: "inline", inlineLight: "inlineLight", inlineSize: "inlineSize", initialValue: "initialValue", inputControlClass: "inputControlClass", dropdownClass: "dropdownClass", dateInputFormat: "dateInputFormat", timeInputFormat: "timeInputFormat", timeInputLongFormat: "timeInputLongFormat", timePicker: "timePicker", timeOnly: "timeOnly", seconds: "seconds", startTimeMin: "startTimeMin", startTimeMax: "startTimeMax", endTimeMin: "endTimeMin", endTimeMax: "endTimeMax", startDateFilter: "startDateFilter", endDateFilter: "endDateFilter", disabledStyleForReadonlyState: "disabledStyleForReadonlyState", placement: "placement", appendToBody: "appendToBody", headings: "headings", preventWizard: "preventWizard" }, outputs: { open: "open", close: "close", valueChange: "valueChange", focus: "focus", blur: "blur" }, features: [i0__namespace.ɵɵProvidersFeature([
                i1.createFormControlValueAccessor(AdaptDatetimeRange2Component),
                i1.createFormControlValidator(AdaptDatetimeRange2Component),
            ]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 24, vars: 23, consts: [["adaptDropdown", "", 3, "adaptRadarDisableEventSending", "animationPlacement", "placement", "appendToBody", "autoClose", "holdFocusInMenu", "holdFocusOnOpen", "autoFocusFirst", "restoreFocusAfterClose", "mobileView"], ["dropdownRef", "adaptDropdown"], ["adaptDropdownAnchor", ""], [3, "for", "label", "requiredLabel", "showRequiredLabel", "tooltip"], [4, "ngIf"], ["adaptDropdownMenuTemplate", ""], [4, "ngIf", "ngIfThen"], ["calendar", ""], ["errorTemplate", ""], ["autocomplete", "off", 3, "value", "disabled", "readonly", "input", "focus", "blur"], ["inputControlRef", ""], [3, "mousedown"], [3, "ngClass"], ["calendarContainer", ""], [1, "a3t-datetime-range--header"], ["type", "button", 3, "click"], [3, "initialValue", "activeValue", "dateFilter", "dateRange", "timeMode", "activeFace", "timePicker", "timeOnly", "timeSeconds", "emptyTimeHeading", "clockHeadings", "disabled", "readonly", "hideDatePickerSummary", "preventExpandedDateControls", "testID", "timeModeChange", "clockFaceChange", "valueChange"], ["class", "a3t-datetime--footer", 3, "two-rows-wrap", 4, "ngIf"], [1, "a3t-datetime--footer"], ["type", "button", 1, "btn", "btn-sm", "btn-link", 3, "click"], ["cancelBtn", ""], [1, "d-flex", "justify-content-center"], ["type", "button", 1, "btn", "btn-sm", "btn-secondary", "m-end-1", 3, "click"], ["clearBtn", ""], ["type", "button", 1, "btn", "btn-sm", "btn-primary", 3, "click"], ["nextBtn", ""], ["class", "has-danger adapt-datetime-range2__validation-errors", 4, "ngIf"], [1, "has-danger", "adapt-datetime-range2__validation-errors"], ["class", "form-control-feedback d-flex align-items-start m-0 pt-1 pb-0", 4, "ngFor", "ngForOf"], [1, "form-control-feedback", "d-flex", "align-items-start", "m-0", "pt-1", "pb-0"], ["class", "d-icon-exclamation_triangle flex-grow-0 flex-shrink-0 m-end-2", 4, "ngIf"], [1, "flex-grow-1", "flex-shrink-1"], [1, "d-icon-exclamation_triangle", "flex-grow-0", "flex-shrink-0", "m-end-2"]], template: function AdaptDatetimeRange2Component_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵtext(0, "\n    ");
                i0__namespace.ɵɵelementStart(1, "div", 0, 1);
                i0__namespace.ɵɵtext(3, "\n      ");
                i0__namespace.ɵɵelementStart(4, "div", 2);
                i0__namespace.ɵɵtext(5, "\n        ");
                i0__namespace.ɵɵelement(6, "adapt-rx-control-label", 3);
                i0__namespace.ɵɵtext(7, "\n\n        ");
                i0__namespace.ɵɵtemplate(8, AdaptDatetimeRange2Component_div_8_Template, 5, 22, "div", 4);
                i0__namespace.ɵɵtext(9, "\n      ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(10, "\n      ");
                i0__namespace.ɵɵtemplate(11, AdaptDatetimeRange2Component_ng_template_11_Template, 6, 4, "ng-template", 5);
                i0__namespace.ɵɵtext(12, "\n    ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(13, "\n\n    ");
                i0__namespace.ɵɵtemplate(14, AdaptDatetimeRange2Component_ng_container_14_Template, 1, 0, "ng-container", 6);
                i0__namespace.ɵɵtext(15, "\n\n    ");
                i0__namespace.ɵɵtemplate(16, AdaptDatetimeRange2Component_ng_template_16_Template, 26, 32, "ng-template", null, 7, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵtext(18, "\n\n    ");
                i0__namespace.ɵɵtemplate(19, AdaptDatetimeRange2Component_ng_container_19_Template, 1, 0, "ng-container", 6);
                i0__namespace.ɵɵtext(20, "\n\n    ");
                i0__namespace.ɵɵtemplate(21, AdaptDatetimeRange2Component_ng_template_21_Template, 3, 1, "ng-template", null, 8, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵtext(23, "\n  ");
            }
            if (rf & 2) {
                var _r4 = i0__namespace.ɵɵreference(17);
                var _r7 = i0__namespace.ɵɵreference(22);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("animationPlacement", "center")("placement", ctx.placement)("appendToBody", ctx.appendToBody)("autoClose", ctx.dropdownAutoClose)("holdFocusInMenu", true)("holdFocusOnOpen", false)("autoFocusFirst", false)("restoreFocusAfterClose", false)("mobileView", i0__namespace.ɵɵpureFunction0(22, _c6$4));
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵclassProp("has-danger", ctx._self.errors.length > 0 && ctx._self.control.touched);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("for", ctx.id)("label", ctx.label)("requiredLabel", ctx.requiredLabel)("showRequiredLabel", ctx._self.required)("tooltip", ctx.tooltipConfig);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", !ctx.inline);
                i0__namespace.ɵɵadvance(6);
                i0__namespace.ɵɵproperty("ngIf", ctx.inline)("ngIfThen", _r4);
                i0__namespace.ɵɵadvance(5);
                i0__namespace.ɵɵproperty("ngIf", !ctx.inline)("ngIfThen", _r7);
            }
        }, encapsulation: 2, data: { animation: [
                i1$1.trigger('heightAnimation', [
                    i1$1.transition('void => *', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.height, {
                            params: {
                                from: '0',
                                to: '*'
                            }
                        })
                    ]),
                    i1$1.transition('* => void', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.height, {
                            params: {
                                from: '*',
                                to: '0'
                            }
                        })
                    ])
                ]),
                i1$1.trigger('validationFeedbackAnimation', [
                    i1$1.transition(':enter', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                    ]),
                    i1$1.transition(':leave', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                    ])
                ])
            ] } });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptDatetimeRange2Component, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-datetime-range2',
                        template: "\n    <div adaptDropdown\n         [adaptRadarDisableEventSending]=\"true\"\n         #dropdownRef=\"adaptDropdown\"\n         [animationPlacement]=\"'center'\"\n         [placement]=\"placement\"\n         [appendToBody]=\"appendToBody\"\n         [autoClose]=\"dropdownAutoClose\"\n         [holdFocusInMenu]=\"true\"\n         [holdFocusOnOpen]=\"false\"\n         [autoFocusFirst]=\"false\"\n         [restoreFocusAfterClose]=\"false\"\n         [mobileView]=\"{isPicker: true}\">\n      <div adaptDropdownAnchor [class.has-danger]=\"_self.errors.length > 0 && _self.control.touched\">\n        <adapt-rx-control-label [for]=\"id\"\n                                [label]=\"label\"\n                                [requiredLabel]=\"requiredLabel\"\n                                [showRequiredLabel]=\"_self.required\"\n                                [tooltip]=\"tooltipConfig\"></adapt-rx-control-label>\n\n        <div *ngIf=\"!inline\">\n          <input #inputControlRef\n                 autocomplete=\"off\"\n                 [attr.id]=\"id\"\n                 [class]=\"'a3t-datetime--input-control form-control ' + (inputControlClass || '')\"\n                 [value]=\"inputControlValue\"\n                 (input)=\"inputControlWrite(inputControlRef.value)\"\n                 (focus)=\"inputControlFocus()\"\n                 (blur)=\"inputControlBlur()\"\n                 [disabled]=\"disabled\"\n                 [readonly]=\"readonly\"\n                 [class.form-control-disabled-look]=\"readonly && this.disabledStyleForReadonlyState\"\n                 [attr.placeholder]=\"placeholder\"\n                 [attr.data-testid]=\"testID\"\n                 [class.i-date]=\"!timePicker\"\n                 [class.i-date-time]=\"timePicker && !timeOnly\"\n                 [class.i-time]=\"timeOnly\"\n                 [class.readonly]=\"readonly\"\n                 [class.a3t-datetime--input-control_active]=\"dropdownRef.isOpen()\"\n                 [class.a3t-datetime--input-control_invalid]=\"_self.errors.length > 0 && _self.control.touched\"/>\n        </div>\n      </div>\n      <ng-template adaptDropdownMenuTemplate>\n        <div [class]=\"dropdownClass || ''\" (mousedown)=\"dropdownMouseDown()\">\n          <ng-container *ngIf=\"!inline; then calendar\"></ng-container>\n        </div>\n      </ng-template>\n    </div>\n\n    <ng-container *ngIf=\"inline; then calendar\"></ng-container>\n\n    <ng-template #calendar>\n      <div #calendarContainer [ngClass]=\"isMobile ? 'a3t-datetime--calendar-width' : 'a3t-datetime--calendar-min-width'\"\n           [class.a3t-datetime-inline-light]=\"inline && inlineLight\"\n           [class.a3t-datetime-inline-small]=\"inline && inlineSize === 'small'\">\n        <div class=\"a3t-datetime-range--header\" [class.end-active]=\"isRtl ? startRangeActive : !startRangeActive\">\n          <button type=\"button\"\n                  [attr.data-testid]=\"testID + '_start'\"\n                  (click)=\"switchToStartDT()\">\n            {{headings.startLabel}}\n            <div>{{startValueSummary}}</div>\n          </button>\n          <button type=\"button\"\n                  [attr.data-testid]=\"testID + '_end'\"\n                  (click)=\"switchToEndDT()\">\n            {{headings.endLabel}}\n            <div>{{endValueSummary}}</div>\n          </button>\n        </div>\n\n        <adapt-datetime2-picker [initialValue]=\"activeDateTime.initialValue\"\n                                [activeValue]=\"activeDateTime.activeValue\"\n                                [dateFilter]=\"activeDateTime.dateFilter\"\n                                [dateRange]=\"activeDateTime.dateRange\"\n                                [timeMode]=\"timeModeState$.value\"\n                                [activeFace]=\"clockFaceState$.value\"\n                                [timePicker]=\"timePicker\"\n                                [timeOnly]=\"timeOnly\"\n                                [timeSeconds]=\"seconds\"\n                                [emptyTimeHeading]=\"headings.emptyTime\"\n                                [clockHeadings]=\"headings\"\n                                [disabled]=\"disabled\"\n                                [readonly]=\"readonly\"\n                                [hideDatePickerSummary]=\"true\"\n                                [preventExpandedDateControls]=\"true\"\n                                [testID]=\"testID\"\n                                (timeModeChange)=\"timeModeChange($event)\"\n                                (clockFaceChange)=\"clockFaceChange($event)\"\n                                (valueChange)=\"selectDateTime($event)\"></adapt-datetime2-picker>\n\n        <div class=\"a3t-datetime--footer\" [class.two-rows-wrap]=\"twoRowsWrap || threeRowsWrap\" *ngIf=\"!inline\">\n          <div>\n            <button #cancelBtn\n                    [attr.data-testid]=\"testID + '_cancel'\"\n                    type=\"button\"\n                    class=\"btn btn-sm btn-link\"\n                    (click)=\"pickerCloseAndCancel()\">\n              {{headings.cancelBtn}}</button>\n          </div>\n          <div class=\"d-flex justify-content-center\" [class.three-rows-wrap]=\"threeRowsWrap\">\n            <button #clearBtn\n                    [attr.data-testid]=\"testID + '_clear'\"\n                    type=\"button\"\n                    class=\"btn btn-sm btn-secondary m-end-1\" (click)=\"pickerClearAll()\">\n              {{headings.clearBtn}}</button>\n            <button #nextBtn\n                    [attr.data-testid]=\"testID + '_apply'\"\n                    type=\"button\"\n                    class=\"btn btn-sm btn-primary\" (click)=\"$event.stopPropagation(); goToNextStep()\">\n              <span *ngIf=\"isLastWizardStep\">{{headings.applyBtn}}</span>\n              <span *ngIf=\"!isLastWizardStep\">{{headings.nextBtn}}</span>\n            </button>\n          </div>\n        </div>\n\n        <ng-container *ngIf=\"inline; then errorTemplate\"></ng-container>\n      </div>\n    </ng-template>\n\n    <ng-container *ngIf=\"!inline; then errorTemplate\"></ng-container>\n\n    <ng-template #errorTemplate>\n      <div class=\"has-danger adapt-datetime-range2__validation-errors\"\n           *ngIf=\"_self.errors.length > 0 && _self.control.touched\"\n           [@validationFeedbackAnimation]>\n        <div class=\"form-control-feedback d-flex align-items-start m-0 pt-1 pb-0\" *ngFor=\"let error of _self.errors\">\n          <div class=\"d-icon-exclamation_triangle flex-grow-0 flex-shrink-0 m-end-2\" *ngIf=\"inline\"></div>\n          <div class=\"flex-grow-1 flex-shrink-1\"><strong *ngIf=\"error.name\">{{error.name}} </strong>{{error.text}}</div>\n        </div>\n      </div>\n    </ng-template>\n  ",
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: {
                            '[attr.name]': 'name',
                            '[style.display]': '"block"'
                        },
                        animations: [
                            i1$1.trigger('heightAnimation', [
                                i1$1.transition('void => *', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.height, {
                                        params: {
                                            from: '0',
                                            to: '*'
                                        }
                                    })
                                ]),
                                i1$1.transition('* => void', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.height, {
                                        params: {
                                            from: '*',
                                            to: '0'
                                        }
                                    })
                                ])
                            ]),
                            i1$1.trigger('validationFeedbackAnimation', [
                                i1$1.transition(':enter', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                                ]),
                                i1$1.transition(':leave', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                                ])
                            ])
                        ],
                        providers: [
                            i1.createFormControlValueAccessor(AdaptDatetimeRange2Component),
                            i1.createFormControlValidator(AdaptDatetimeRange2Component),
                        ]
                    }]
            }], function () { return [{ type: i0__namespace.Injector }, { type: i2__namespace$1.Directionality }, { type: i1__namespace.AdaptDeviceDetectionService }, { type: i0__namespace.Renderer2 }, { type: i0__namespace.ChangeDetectorRef }, { type: i0__namespace.NgZone }, { type: i1__namespace.AdaptTranslateService }, { type: i2__namespace.AdaptRadarService }, { type: i0__namespace.ElementRef }]; }, { formControl: [{
                    type: i0.Input
                }], id: [{
                    type: i0.Input
                }], testID: [{
                    type: i0.Input
                }], name: [{
                    type: i0.Input
                }], label: [{
                    type: i0.Input
                }], placeholder: [{
                    type: i0.Input
                }], inline: [{
                    type: i0.Input
                }], inlineLight: [{
                    type: i0.Input
                }], inlineSize: [{
                    type: i0.Input
                }], initialValue: [{
                    type: i0.Input
                }], inputControlClass: [{
                    type: i0.Input
                }], dropdownClass: [{
                    type: i0.Input
                }], dateInputFormat: [{
                    type: i0.Input
                }], timeInputFormat: [{
                    type: i0.Input
                }], timeInputLongFormat: [{
                    type: i0.Input
                }], timePicker: [{
                    type: i0.Input
                }], timeOnly: [{
                    type: i0.Input
                }], seconds: [{
                    type: i0.Input
                }], startTimeMin: [{
                    type: i0.Input
                }], startTimeMax: [{
                    type: i0.Input
                }], endTimeMin: [{
                    type: i0.Input
                }], endTimeMax: [{
                    type: i0.Input
                }], startDateFilter: [{
                    type: i0.Input
                }], endDateFilter: [{
                    type: i0.Input
                }], disabledStyleForReadonlyState: [{
                    type: i0.Input
                }], placement: [{
                    type: i0.Input
                }], appendToBody: [{
                    type: i0.Input
                }], headings: [{
                    type: i0.Input
                }], preventWizard: [{
                    type: i0.Input
                }], open: [{
                    type: i0.Output
                }], close: [{
                    type: i0.Output
                }], valueChange: [{
                    type: i0.Output
                }], focus: [{
                    type: i0.Output
                }], blur: [{
                    type: i0.Output
                }], inputControlRef: [{
                    type: i0.ViewChild,
                    args: ['inputControlRef']
                }], dropdownRef: [{
                    type: i0.ViewChild,
                    args: ['dropdownRef', { static: true }]
                }], calendarContainer: [{
                    type: i0.ViewChild,
                    args: ['calendarContainer', { static: false }]
                }], nextBtn: [{
                    type: i0.ViewChild,
                    args: ['nextBtn', { static: false }]
                }], cancelBtn: [{
                    type: i0.ViewChild,
                    args: ['cancelBtn', { static: false }]
                }], clearBtn: [{
                    type: i0.ViewChild,
                    args: ['clearBtn', { static: false }]
                }] });
    })();

    var _c0$m = ["calendarContainerRef"];
    function AdaptDatetime2YearPickerComponent_tr_13_ng_container_2_Template(rf, ctx) {
        if (rf & 1) {
            var _r8_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n                  ");
            i0__namespace.ɵɵelementStart(2, "td", 5);
            i0__namespace.ɵɵtext(3, "\n                      ");
            i0__namespace.ɵɵelementStart(4, "button", 6);
            i0__namespace.ɵɵlistener("click", function AdaptDatetime2YearPickerComponent_tr_13_ng_container_2_Template_button_click_4_listener() { var restoredCtx = i0__namespace.ɵɵrestoreView(_r8_1); var year_r5 = restoredCtx.$implicit; var col_r6 = restoredCtx.index; var row_r3 = i0__namespace.ɵɵnextContext().index; var ctx_r7 = i0__namespace.ɵɵnextContext(); return ctx_r7.onYearClick(year_r5.date, row_r3, col_r6); });
            i0__namespace.ɵɵtext(5);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n                  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(7, "\n              ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var year_r5 = ctx.$implicit;
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵclassProp("active", year_r5.isSelected)("today", year_r5.isToday)("disabled", year_r5.isDisabled);
            i0__namespace.ɵɵproperty("disabled", year_r5.isDisabled);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(year_r5.date.format("YYYY"));
        }
    }
    function AdaptDatetime2YearPickerComponent_tr_13_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "tr");
            i0__namespace.ɵɵtext(1, "\n              ");
            i0__namespace.ɵɵtemplate(2, AdaptDatetime2YearPickerComponent_tr_13_ng_container_2_Template, 8, 8, "ng-container", 4);
            i0__namespace.ɵɵtext(3, "\n          ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var years_r2 = ctx.$implicit;
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngForOf", years_r2);
        }
    }
    var AdaptDatetime2YearPickerComponent = /** @class */ (function () {
        function AdaptDatetime2YearPickerComponent(_animationBuilder) {
            this._animationBuilder = _animationBuilder;
            this.animationDirectionForward = true;
            this.disabled = false;
            this.yearSelect = new i0.EventEmitter();
            this._initialDate = moment__default["default"]();
            this._activeDate = null;
            this._animationReady = false;
            this._redraw = true;
            this._activeIndex = 4;
            this._columnsAmount = 3;
            this._rowsAmount = 4;
            this._itemsAmount = this._rowsAmount * this._columnsAmount;
        }
        Object.defineProperty(AdaptDatetime2YearPickerComponent.prototype, "initialDate", {
            set: function (initDate) {
                if (initDate && initDate.isValid()) {
                    this._initialDate = initDate.clone();
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2YearPickerComponent.prototype, "activeDate", {
            set: function (activeDate) {
                if (activeDate && activeDate.isValid()) {
                    this._activeDate = activeDate.clone();
                }
                else {
                    this._activeDate = null;
                }
                if (this.calendar) {
                    this._patchCalendar();
                }
            },
            enumerable: false,
            configurable: true
        });
        AdaptDatetime2YearPickerComponent.prototype.ngOnInit = function () {
            this._initCalendar();
            this._drawCalendar();
        };
        AdaptDatetime2YearPickerComponent.prototype.onYearClick = function (year, row, col) {
            this.yearSelect.emit(year.clone());
            this._activeIndex = this._columnsAmount * row + col;
            this._redraw = false;
        };
        AdaptDatetime2YearPickerComponent.prototype.ngOnChanges = function (changes) {
            if (changes.yearsPage) {
                if (this._redraw || this.yearsPage) {
                    this._drawCalendar();
                    this._redraw = true;
                }
            }
        };
        AdaptDatetime2YearPickerComponent.prototype.ngAfterViewInit = function () {
            this.calendarPlayers.prevOut = this._animationBuilder.build(this.animationsSet.prevOut)
                .create(this.calendarContainerRef.nativeElement);
            this.calendarPlayers.prevIn = this._animationBuilder.build(this.animationsSet.prevIn)
                .create(this.calendarContainerRef.nativeElement);
            this.calendarPlayers.nextOut = this._animationBuilder.build(this.animationsSet.nextOut)
                .create(this.calendarContainerRef.nativeElement);
            this.calendarPlayers.nextIn = this._animationBuilder.build(this.animationsSet.nextIn)
                .create(this.calendarContainerRef.nativeElement);
            this._animationReady = true;
        };
        AdaptDatetime2YearPickerComponent.prototype._initCalendar = function () {
            var _this = this;
            this.calendar =
                Array(this._rowsAmount)
                    .fill(0)
                    .map(function () { return Array(_this._columnsAmount)
                    .fill(0)
                    .map(function () { return new Calendar2Day(); }); });
        };
        AdaptDatetime2YearPickerComponent.prototype._drawCalendar = function () {
            var _this = this;
            var initialDate = Number(this._initialDate.clone().format('YYYY'));
            var startYear = this._initialDate.clone().startOf('year');
            var yearsArr = new Array(this._itemsAmount).fill(0).map(function () { return new Calendar2Day(); });
            yearsArr.forEach(function (item, index) {
                if (_this._activeIndex > index || _this._activeIndex < index) {
                    yearsArr[index].date = startYear.year(initialDate - (_this._activeIndex - index) + (_this._itemsAmount * _this.yearsPage)).clone();
                }
                else {
                    yearsArr[index].date = startYear.year(initialDate + _this._itemsAmount * _this.yearsPage).clone();
                }
            });
            // Animate calendar while component redraw
            this._animateCalendarChange((function () {
                // Need to transform one-dimensional array into multi-dimensional (4 x 3)
                _this.calendar = yearsArr.reduce(function (rows, key, index) {
                    return (index % _this._columnsAmount === 0 ? rows.push([key])
                        : rows[rows.length - 1].push(key)) && rows;
                }, []);
                _this._patchCalendar();
            }).bind(this));
        };
        AdaptDatetime2YearPickerComponent.prototype._animateCalendarChange = function (changeValFn) {
            if (this._animationReady) {
                this.calendarPlayers.prevOut.reset();
                this.calendarPlayers.prevIn.reset();
                this.calendarPlayers.nextOut.reset();
                this.calendarPlayers.nextIn.reset();
                var _in_1 = this.animationDirectionForward ? this.calendarPlayers.nextIn : this.calendarPlayers.prevIn;
                var _out = this.animationDirectionForward ? this.calendarPlayers.nextOut : this.calendarPlayers.prevOut;
                _out.onDone(function () {
                    changeValFn();
                    _in_1.play();
                });
                _out.play();
            }
            else {
                changeValFn();
            }
        };
        AdaptDatetime2YearPickerComponent.prototype._patchCalendar = function () {
            var _this = this;
            this.calendar.forEach(function (years) {
                years.forEach(function (year) {
                    year.isSelected = _this._activeDate ?
                        _this._activeDate.clone().startOf('year').isSame(year.date.startOf('year')) : false;
                    year.isToday = moment__default["default"]().startOf('year').isSame(year.date.startOf('year'));
                    year.isDisabled = _this.disabled;
                });
            });
        };
        return AdaptDatetime2YearPickerComponent;
    }());
    AdaptDatetime2YearPickerComponent.ɵfac = function AdaptDatetime2YearPickerComponent_Factory(t) { return new (t || AdaptDatetime2YearPickerComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace$1.AnimationBuilder)); };
    AdaptDatetime2YearPickerComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptDatetime2YearPickerComponent, selectors: [["adapt-datetime2-year-picker"]], viewQuery: function AdaptDatetime2YearPickerComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$m, 5);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.calendarContainerRef = _t.first);
            }
        }, inputs: { calendarPlayers: "calendarPlayers", animationsSet: "animationsSet", yearsPage: "yearsPage", disabled: "disabled", initialDate: "initialDate", activeDate: "activeDate" }, outputs: { yearSelect: "yearSelect" }, features: [i0__namespace.ɵɵNgOnChangesFeature], decls: 22, vars: 1, consts: [[1, "a3t-calendar--table", "a3t-calendar--year_table"], ["calendarContainerRef", ""], ["aria-hidden", "true"], ["colspan", "3", 1, "a3t-calendar--table-space-cell"], [4, "ngFor", "ngForOf"], ["role", "gridcell", 1, "a3t-calendar--table-day", "a3t-calendar--table-year"], ["type", "button", 3, "disabled", "click"]], template: function AdaptDatetime2YearPickerComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵtext(0, "\n      ");
                i0__namespace.ɵɵelementStart(1, "table", 0);
                i0__namespace.ɵɵtext(2, "\n          ");
                i0__namespace.ɵɵelement(3, "thead");
                i0__namespace.ɵɵtext(4, "\n          ");
                i0__namespace.ɵɵelementStart(5, "tbody", null, 1);
                i0__namespace.ɵɵtext(7, "\n          ");
                i0__namespace.ɵɵelementStart(8, "tr", 2);
                i0__namespace.ɵɵtext(9, "\n              ");
                i0__namespace.ɵɵelement(10, "td", 3);
                i0__namespace.ɵɵtext(11, "\n          ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(12, "\n          ");
                i0__namespace.ɵɵtemplate(13, AdaptDatetime2YearPickerComponent_tr_13_Template, 4, 1, "tr", 4);
                i0__namespace.ɵɵtext(14, "\n          ");
                i0__namespace.ɵɵelementStart(15, "tr", 2);
                i0__namespace.ɵɵtext(16, "\n              ");
                i0__namespace.ɵɵelement(17, "td", 3);
                i0__namespace.ɵɵtext(18, "\n          ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(19, "\n          ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(20, "\n      ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(21, "\n  ");
            }
            if (rf & 2) {
                i0__namespace.ɵɵadvance(13);
                i0__namespace.ɵɵproperty("ngForOf", ctx.calendar);
            }
        }, directives: [i3__namespace.NgForOf], encapsulation: 2 });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptDatetime2YearPickerComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-datetime2-year-picker',
                        template: "\n      <table class=\"a3t-calendar--table a3t-calendar--year_table\">\n          <thead></thead>\n          <tbody #calendarContainerRef>\n          <tr aria-hidden=\"true\">\n              <td colspan=\"3\" class=\"a3t-calendar--table-space-cell\"></td>\n          </tr>\n          <tr *ngFor=\"let years of calendar; let row = index\">\n              <ng-container *ngFor=\"let year of years; let col = index\">\n                  <td class=\"a3t-calendar--table-day a3t-calendar--table-year\"\n                      role=\"gridcell\">\n                      <button\n                              type=\"button\"\n                              (click)=\"onYearClick(year.date, row, col)\"\n                              [class.active]=\"year.isSelected\"\n                              [class.today]=\"year.isToday\"\n                              [class.disabled]=\"year.isDisabled\"\n                              [disabled]=\"year.isDisabled\"\n                      >{{ year.date.format('YYYY') }}</button>\n                  </td>\n              </ng-container>\n          </tr>\n          <tr aria-hidden=\"true\">\n              <td colspan=\"3\" class=\"a3t-calendar--table-space-cell\"></td>\n          </tr>\n          </tbody>\n      </table>\n  "
                    }]
            }], function () { return [{ type: i1__namespace$1.AnimationBuilder }]; }, { calendarContainerRef: [{
                    type: i0.ViewChild,
                    args: ['calendarContainerRef']
                }], calendarPlayers: [{
                    type: i0.Input
                }], animationsSet: [{
                    type: i0.Input
                }], yearsPage: [{
                    type: i0.Input
                }], disabled: [{
                    type: i0.Input
                }], yearSelect: [{
                    type: i0.Output
                }], initialDate: [{
                    type: i0.Input
                }], activeDate: [{
                    type: i0.Input
                }] });
    })();

    function AdaptDatetime2MonthPickerComponent_tr_10_ng_container_2_Template(rf, ctx) {
        if (rf & 1) {
            var _r5_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n            ");
            i0__namespace.ɵɵelementStart(2, "td", 4);
            i0__namespace.ɵɵtext(3, "\n              ");
            i0__namespace.ɵɵelementStart(4, "button", 5);
            i0__namespace.ɵɵlistener("click", function AdaptDatetime2MonthPickerComponent_tr_10_ng_container_2_Template_button_click_4_listener() { var restoredCtx = i0__namespace.ɵɵrestoreView(_r5_1); var month_r3 = restoredCtx.$implicit; var ctx_r4 = i0__namespace.ɵɵnextContext(2); return ctx_r4.onMonthClick(month_r3.date); });
            i0__namespace.ɵɵtext(5);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n            ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(7, "\n          ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var month_r3 = ctx.$implicit;
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵclassProp("active", month_r3.isSelected)("today", month_r3.isToday)("disabled", month_r3.isDisabled);
            i0__namespace.ɵɵproperty("disabled", month_r3.isDisabled);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(month_r3.date.format("MMM"));
        }
    }
    function AdaptDatetime2MonthPickerComponent_tr_10_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "tr");
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵtemplate(2, AdaptDatetime2MonthPickerComponent_tr_10_ng_container_2_Template, 8, 8, "ng-container", 3);
            i0__namespace.ɵɵtext(3, "\n        ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var months_r1 = ctx.$implicit;
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngForOf", months_r1);
        }
    }
    var AdaptDatetime2MonthPickerComponent = /** @class */ (function () {
        function AdaptDatetime2MonthPickerComponent() {
            this.disabled = false;
            this.selectMonth = new i0.EventEmitter();
            this._initialDate = moment__default["default"]();
            this._activeDate = null;
            this._columnsAmount = 3;
            this._rowsAmount = 4;
            this._itemsAmount = this._rowsAmount * this._columnsAmount;
        }
        Object.defineProperty(AdaptDatetime2MonthPickerComponent.prototype, "initialDate", {
            set: function (initDate) {
                if (initDate && initDate.isValid()) {
                    this._initialDate = initDate.clone();
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2MonthPickerComponent.prototype, "activeDate", {
            set: function (activeDate) {
                if (activeDate && activeDate.isValid()) {
                    this._activeDate = activeDate.clone();
                    this._initialDate = activeDate.clone();
                    this._drawCalendar();
                }
                else {
                    this._activeDate = null;
                    if (this.calendar) {
                        this._patchCalendar();
                    }
                }
            },
            enumerable: false,
            configurable: true
        });
        AdaptDatetime2MonthPickerComponent.prototype.ngOnInit = function () {
            this._initCalendar();
            this._drawCalendar();
        };
        AdaptDatetime2MonthPickerComponent.prototype.onMonthClick = function (month) {
            this.selectMonth.emit(month.clone());
        };
        AdaptDatetime2MonthPickerComponent.prototype._initCalendar = function () {
            var _this = this;
            this.calendar =
                Array(this._rowsAmount)
                    .fill(0)
                    .map(function () { return Array(_this._columnsAmount)
                    .fill(0)
                    .map(function () { return new Calendar2Day(); }); });
        };
        AdaptDatetime2MonthPickerComponent.prototype._drawCalendar = function () {
            var _this = this;
            var momentArr = moment__default["default"].monthsShort();
            var startDate = this._initialDate.clone();
            var monthArr = new Array(this._itemsAmount).fill(0).map(function () { return new Calendar2Day(); });
            monthArr.forEach(function (item, index) {
                monthArr[index].date = startDate.month(momentArr[index]).clone();
            });
            this.calendar = monthArr.reduce(function (rows, key, index) {
                return (index % _this._columnsAmount === 0 ? rows.push([key])
                    : rows[rows.length - 1].push(key)) && rows;
            }, []);
            this._patchCalendar();
        };
        AdaptDatetime2MonthPickerComponent.prototype._patchCalendar = function () {
            var _this = this;
            this.calendar.forEach(function (months) {
                months.forEach(function (month) {
                    month.isSelected = _this._activeDate ?
                        _this._activeDate.clone().startOf('month').isSame(month.date.startOf('month')) : false;
                    month.isToday = moment__default["default"]().startOf('month').isSame(month.date.startOf('month'));
                    month.isDisabled = _this.disabled;
                });
            });
        };
        return AdaptDatetime2MonthPickerComponent;
    }());
    AdaptDatetime2MonthPickerComponent.ɵfac = function AdaptDatetime2MonthPickerComponent_Factory(t) { return new (t || AdaptDatetime2MonthPickerComponent)(); };
    AdaptDatetime2MonthPickerComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptDatetime2MonthPickerComponent, selectors: [["adapt-datetime2-month-picker"]], inputs: { initialDate: "initialDate", activeDate: "activeDate", disabled: "disabled" }, outputs: { selectMonth: "selectMonth" }, decls: 19, vars: 1, consts: [[1, "a3t-calendar--table", "a3t-calendar--month_table"], ["aria-hidden", "true"], ["colspan", "3", 1, "a3t-calendar--table-space-cell"], [4, "ngFor", "ngForOf"], ["role", "gridcell", 1, "a3t-calendar--table-day", "a3t-calendar--table-month"], ["type", "button", 3, "disabled", "click"]], template: function AdaptDatetime2MonthPickerComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵtext(0, "\n    ");
                i0__namespace.ɵɵelementStart(1, "table", 0);
                i0__namespace.ɵɵtext(2, "\n      ");
                i0__namespace.ɵɵelementStart(3, "tbody");
                i0__namespace.ɵɵtext(4, "\n        ");
                i0__namespace.ɵɵelementStart(5, "tr", 1);
                i0__namespace.ɵɵtext(6, "\n          ");
                i0__namespace.ɵɵelement(7, "td", 2);
                i0__namespace.ɵɵtext(8, "\n        ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(9, "\n        ");
                i0__namespace.ɵɵtemplate(10, AdaptDatetime2MonthPickerComponent_tr_10_Template, 4, 1, "tr", 3);
                i0__namespace.ɵɵtext(11, "\n        ");
                i0__namespace.ɵɵelementStart(12, "tr", 1);
                i0__namespace.ɵɵtext(13, "\n          ");
                i0__namespace.ɵɵelement(14, "td", 2);
                i0__namespace.ɵɵtext(15, "\n        ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(16, "\n      ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(17, "\n    ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(18, "\n  ");
            }
            if (rf & 2) {
                i0__namespace.ɵɵadvance(10);
                i0__namespace.ɵɵproperty("ngForOf", ctx.calendar);
            }
        }, directives: [i3__namespace.NgForOf], encapsulation: 2 });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptDatetime2MonthPickerComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-datetime2-month-picker',
                        template: "\n    <table class=\"a3t-calendar--table  a3t-calendar--month_table\">\n      <tbody>\n        <tr aria-hidden=\"true\">\n          <td colspan=\"3\" class=\"a3t-calendar--table-space-cell\"></td>\n        </tr>\n        <tr *ngFor=\"let months of calendar\">\n          <ng-container *ngFor=\"let month of months\">\n            <td class=\"a3t-calendar--table-day a3t-calendar--table-month\"\n                role=\"gridcell\">\n              <button type=\"button\"\n                (click)=\"onMonthClick(month.date)\"\n                [class.active]=\"month.isSelected\"\n                [class.today]=\"month.isToday\"\n                [class.disabled]=\"month.isDisabled\"\n                [disabled]=\"month.isDisabled\"\n              >{{month.date.format('MMM')}}</button>\n            </td>\n          </ng-container>\n        </tr>\n        <tr aria-hidden=\"true\">\n          <td colspan=\"3\" class=\"a3t-calendar--table-space-cell\"></td>\n        </tr>\n      </tbody>\n    </table>\n  "
                    }]
            }], null, { initialDate: [{
                    type: i0.Input
                }], activeDate: [{
                    type: i0.Input
                }], disabled: [{
                    type: i0.Input
                }], selectMonth: [{
                    type: i0.Output
                }] });
    })();

    /* eslint-disable @typescript-eslint/no-explicit-any */
    var _c0$l = ["daysTable"];
    var _c1$g = ["calendarContainerRef"];
    function AdaptDatetime2CalendarComponent_div_1_ng_container_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainer(0);
        }
    }
    function AdaptDatetime2CalendarComponent_div_1_ng_container_4_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainer(0);
        }
    }
    function AdaptDatetime2CalendarComponent_div_1_ng_template_6_adapt_icon_5_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-icon", 12);
        }
        if (rf & 2) {
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", "angle_left");
        }
    }
    function AdaptDatetime2CalendarComponent_div_1_ng_template_6_adapt_icon_7_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-icon", 12);
        }
        if (rf & 2) {
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", "angle_right");
        }
    }
    function AdaptDatetime2CalendarComponent_div_1_ng_template_6_adapt_icon_17_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-icon", 12);
        }
        if (rf & 2) {
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", "angle_left");
        }
    }
    function AdaptDatetime2CalendarComponent_div_1_ng_template_6_adapt_icon_19_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-icon", 12);
        }
        if (rf & 2) {
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", "angle_right");
        }
    }
    function AdaptDatetime2CalendarComponent_div_1_ng_template_6_Template(rf, ctx) {
        if (rf & 1) {
            var _r14_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵtext(0, "\n              ");
            i0__namespace.ɵɵelementStart(1, "div", 7);
            i0__namespace.ɵɵtext(2, "\n                  ");
            i0__namespace.ɵɵelementStart(3, "button", 8);
            i0__namespace.ɵɵlistener("click", function AdaptDatetime2CalendarComponent_div_1_ng_template_6_Template_button_click_3_listener($event) { i0__namespace.ɵɵrestoreView(_r14_1); var ctx_r13 = i0__namespace.ɵɵnextContext(2); $event.stopPropagation(); return ctx_r13.calendarUIActions.prevYear(); });
            i0__namespace.ɵɵtext(4, "\n                      ");
            i0__namespace.ɵɵtemplate(5, AdaptDatetime2CalendarComponent_div_1_ng_template_6_adapt_icon_5_Template, 1, 2, "adapt-icon", 9);
            i0__namespace.ɵɵtext(6, "\n                      ");
            i0__namespace.ɵɵtemplate(7, AdaptDatetime2CalendarComponent_div_1_ng_template_6_adapt_icon_7_Template, 1, 2, "adapt-icon", 9);
            i0__namespace.ɵɵtext(8, "\n                  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(9, "\n                  ");
            i0__namespace.ɵɵelementStart(10, "div", 10);
            i0__namespace.ɵɵlistener("keydown.arrowUp", function AdaptDatetime2CalendarComponent_div_1_ng_template_6_Template_div_keydown_arrowUp_10_listener($event) { i0__namespace.ɵɵrestoreView(_r14_1); var ctx_r15 = i0__namespace.ɵɵnextContext(2); $event.preventDefault(); return ctx_r15.calendarUIActions.nextYear(); })("keydown.arrowRight", function AdaptDatetime2CalendarComponent_div_1_ng_template_6_Template_div_keydown_arrowRight_10_listener($event) { i0__namespace.ɵɵrestoreView(_r14_1); var ctx_r16 = i0__namespace.ɵɵnextContext(2); $event.preventDefault(); return ctx_r16.calendarUIActions.nextYear(); })("keydown.arrowDown", function AdaptDatetime2CalendarComponent_div_1_ng_template_6_Template_div_keydown_arrowDown_10_listener($event) { i0__namespace.ɵɵrestoreView(_r14_1); var ctx_r17 = i0__namespace.ɵɵnextContext(2); $event.preventDefault(); return ctx_r17.calendarUIActions.prevYear(); })("keydown.arrowLeft", function AdaptDatetime2CalendarComponent_div_1_ng_template_6_Template_div_keydown_arrowLeft_10_listener($event) { i0__namespace.ɵɵrestoreView(_r14_1); var ctx_r18 = i0__namespace.ɵɵnextContext(2); $event.preventDefault(); return ctx_r18.calendarUIActions.prevYear(); });
            i0__namespace.ɵɵtext(11, "\n                      ");
            i0__namespace.ɵɵelement(12, "div", 11);
            i0__namespace.ɵɵtext(13, "\n                  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(14, "\n                  ");
            i0__namespace.ɵɵelementStart(15, "button", 8);
            i0__namespace.ɵɵlistener("click", function AdaptDatetime2CalendarComponent_div_1_ng_template_6_Template_button_click_15_listener($event) { i0__namespace.ɵɵrestoreView(_r14_1); var ctx_r19 = i0__namespace.ɵɵnextContext(2); $event.stopPropagation(); return ctx_r19.calendarUIActions.nextYear(); });
            i0__namespace.ɵɵtext(16, "\n                      ");
            i0__namespace.ɵɵtemplate(17, AdaptDatetime2CalendarComponent_div_1_ng_template_6_adapt_icon_17_Template, 1, 2, "adapt-icon", 9);
            i0__namespace.ɵɵtext(18, "\n                      ");
            i0__namespace.ɵɵtemplate(19, AdaptDatetime2CalendarComponent_div_1_ng_template_6_adapt_icon_19_Template, 1, 2, "adapt-icon", 9);
            i0__namespace.ɵɵtext(20, "\n                  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(21, "\n              ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(22, "\n          ");
        }
        if (rf & 2) {
            var ctx_r6 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵclassProp("a3t-calendar--year-picker", ctx_r6.monthAndYearOnly);
            i0__namespace.ɵɵattribute("aria-label", ctx_r6.defaultTexts.emptyYear);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵclassProp("disabled", ctx_r6.calendarUIState.disabled)("readonly", ctx_r6.calendarUIState.readonly);
            i0__namespace.ɵɵproperty("disabled", ctx_r6.calendarUIState.disabled);
            i0__namespace.ɵɵattribute("data-testid", ctx_r6.testID + "_prevYear");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r6.isRtl);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r6.isRtl);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵattribute("aria-label", ctx_r6.defaultTexts.emptyYear)("aria-valuenow", ctx_r6.calendarUIState.date.format("YYYY"));
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("adaptTextSlide", ctx_r6.calendarUIState.date.format("YYYY"))("slideForward", ctx_r6.animationDirectionForward);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵclassProp("disabled", ctx_r6.calendarUIState.disabled)("readonly", ctx_r6.calendarUIState.readonly);
            i0__namespace.ɵɵproperty("disabled", ctx_r6.calendarUIState.disabled);
            i0__namespace.ɵɵattribute("data-testid", ctx_r6.testID + "_nextYear");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r6.isRtl);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r6.isRtl);
        }
    }
    function AdaptDatetime2CalendarComponent_div_1_ng_template_9_div_1_adapt_icon_4_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-icon", 12);
        }
        if (rf & 2) {
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", "angle_left");
        }
    }
    function AdaptDatetime2CalendarComponent_div_1_ng_template_9_div_1_adapt_icon_6_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-icon", 12);
        }
        if (rf & 2) {
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", "angle_right");
        }
    }
    function AdaptDatetime2CalendarComponent_div_1_ng_template_9_div_1_adapt_icon_16_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-icon", 12);
        }
        if (rf & 2) {
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", "angle_left");
        }
    }
    function AdaptDatetime2CalendarComponent_div_1_ng_template_9_div_1_adapt_icon_18_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-icon", 12);
        }
        if (rf & 2) {
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", "angle_right");
        }
    }
    function AdaptDatetime2CalendarComponent_div_1_ng_template_9_div_1_Template(rf, ctx) {
        if (rf & 1) {
            var _r26_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 7);
            i0__namespace.ɵɵtext(1, "\n                  ");
            i0__namespace.ɵɵelementStart(2, "button", 8);
            i0__namespace.ɵɵlistener("click", function AdaptDatetime2CalendarComponent_div_1_ng_template_9_div_1_Template_button_click_2_listener($event) { i0__namespace.ɵɵrestoreView(_r26_1); var ctx_r25 = i0__namespace.ɵɵnextContext(3); $event.stopPropagation(); return ctx_r25.calendarUIActions.prevMonth(); });
            i0__namespace.ɵɵtext(3, "\n                      ");
            i0__namespace.ɵɵtemplate(4, AdaptDatetime2CalendarComponent_div_1_ng_template_9_div_1_adapt_icon_4_Template, 1, 2, "adapt-icon", 9);
            i0__namespace.ɵɵtext(5, "\n                      ");
            i0__namespace.ɵɵtemplate(6, AdaptDatetime2CalendarComponent_div_1_ng_template_9_div_1_adapt_icon_6_Template, 1, 2, "adapt-icon", 9);
            i0__namespace.ɵɵtext(7, "\n                  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(8, "\n                  ");
            i0__namespace.ɵɵelementStart(9, "div", 10);
            i0__namespace.ɵɵlistener("keydown.arrowUp", function AdaptDatetime2CalendarComponent_div_1_ng_template_9_div_1_Template_div_keydown_arrowUp_9_listener($event) { i0__namespace.ɵɵrestoreView(_r26_1); var ctx_r27 = i0__namespace.ɵɵnextContext(3); $event.preventDefault(); return ctx_r27.calendarUIActions.nextMonth(); })("keydown.arrowRight", function AdaptDatetime2CalendarComponent_div_1_ng_template_9_div_1_Template_div_keydown_arrowRight_9_listener($event) { i0__namespace.ɵɵrestoreView(_r26_1); var ctx_r28 = i0__namespace.ɵɵnextContext(3); $event.preventDefault(); return ctx_r28.calendarUIActions.nextMonth(); })("keydown.arrowDown", function AdaptDatetime2CalendarComponent_div_1_ng_template_9_div_1_Template_div_keydown_arrowDown_9_listener($event) { i0__namespace.ɵɵrestoreView(_r26_1); var ctx_r29 = i0__namespace.ɵɵnextContext(3); $event.preventDefault(); return ctx_r29.calendarUIActions.prevMonth(); })("keydown.arrowLeft", function AdaptDatetime2CalendarComponent_div_1_ng_template_9_div_1_Template_div_keydown_arrowLeft_9_listener($event) { i0__namespace.ɵɵrestoreView(_r26_1); var ctx_r30 = i0__namespace.ɵɵnextContext(3); $event.preventDefault(); return ctx_r30.calendarUIActions.prevMonth(); });
            i0__namespace.ɵɵtext(10, "\n                      ");
            i0__namespace.ɵɵelement(11, "div", 11);
            i0__namespace.ɵɵtext(12, "\n                  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(13, "\n                  ");
            i0__namespace.ɵɵelementStart(14, "button", 8);
            i0__namespace.ɵɵlistener("click", function AdaptDatetime2CalendarComponent_div_1_ng_template_9_div_1_Template_button_click_14_listener($event) { i0__namespace.ɵɵrestoreView(_r26_1); var ctx_r31 = i0__namespace.ɵɵnextContext(3); $event.stopPropagation(); return ctx_r31.calendarUIActions.nextMonth(); });
            i0__namespace.ɵɵtext(15, "\n                      ");
            i0__namespace.ɵɵtemplate(16, AdaptDatetime2CalendarComponent_div_1_ng_template_9_div_1_adapt_icon_16_Template, 1, 2, "adapt-icon", 9);
            i0__namespace.ɵɵtext(17, "\n                      ");
            i0__namespace.ɵɵtemplate(18, AdaptDatetime2CalendarComponent_div_1_ng_template_9_div_1_adapt_icon_18_Template, 1, 2, "adapt-icon", 9);
            i0__namespace.ɵɵtext(19, "\n                  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(20, "\n              ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r20 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵattribute("aria-label", ctx_r20.defaultTexts.emptyMonth);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵclassProp("disabled", ctx_r20.calendarUIState.disabled)("readonly", ctx_r20.calendarUIState.readonly);
            i0__namespace.ɵɵproperty("disabled", ctx_r20.calendarUIState.disabled);
            i0__namespace.ɵɵattribute("data-testid", ctx_r20.testID + "_prevMonth");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r20.isRtl);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r20.isRtl);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵattribute("aria-label", ctx_r20.defaultTexts.emptyMonth)("aria-valuetext", ctx_r20.calendarUIState.date.format("MMMM"));
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("adaptTextSlide", ctx_r20.calendarUIState.date.format(ctx_r20.calendarUIState.expanded ? "MMMM" : "MMM"))("slideForward", ctx_r20.animationDirectionForward);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵclassProp("disabled", ctx_r20.calendarUIState.disabled)("readonly", ctx_r20.calendarUIState.readonly);
            i0__namespace.ɵɵproperty("disabled", ctx_r20.calendarUIState.disabled);
            i0__namespace.ɵɵattribute("data-testid", ctx_r20.testID + "_nextMonth");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r20.isRtl);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r20.isRtl);
        }
    }
    function AdaptDatetime2CalendarComponent_div_1_ng_template_9_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtext(0, "\n              ");
            i0__namespace.ɵɵtemplate(1, AdaptDatetime2CalendarComponent_div_1_ng_template_9_div_1_Template, 21, 21, "div", 13);
            i0__namespace.ɵɵtext(2, "\n          ");
        }
        if (rf & 2) {
            var ctx_r8 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r8.monthAndYearOnly);
        }
    }
    function AdaptDatetime2CalendarComponent_div_1_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 3);
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵtemplate(2, AdaptDatetime2CalendarComponent_div_1_ng_container_2_Template, 1, 0, "ng-container", 4);
            i0__namespace.ɵɵtext(3, "\n          ");
            i0__namespace.ɵɵtemplate(4, AdaptDatetime2CalendarComponent_div_1_ng_container_4_Template, 1, 0, "ng-container", 4);
            i0__namespace.ɵɵtext(5, "\n\n          ");
            i0__namespace.ɵɵtemplate(6, AdaptDatetime2CalendarComponent_div_1_ng_template_6_Template, 23, 23, "ng-template", null, 5, i0__namespace.ɵɵtemplateRefExtractor);
            i0__namespace.ɵɵtext(8, "\n          ");
            i0__namespace.ɵɵtemplate(9, AdaptDatetime2CalendarComponent_div_1_ng_template_9_Template, 3, 1, "ng-template", null, 6, i0__namespace.ɵɵtemplateRefExtractor);
            i0__namespace.ɵɵtext(11, "\n      ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var _r5 = i0__namespace.ɵɵreference(7);
            var _r7 = i0__namespace.ɵɵreference(10);
            var ctx_r0 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵclassProp("a3t-calendar--controls_expanded", ctx_r0.calendarUIState.expanded);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r0.calendarUIState.expanded)("ngIfThen", _r7)("ngIfElse", _r5);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r0.calendarUIState.expanded)("ngIfThen", _r7)("ngIfElse", _r5);
        }
    }
    function AdaptDatetime2CalendarComponent_table_3_ng_container_7_th_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "th", 22);
        }
    }
    function AdaptDatetime2CalendarComponent_table_3_ng_container_7_th_7_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "th", 22);
        }
    }
    function AdaptDatetime2CalendarComponent_table_3_ng_container_7_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n                  ");
            i0__namespace.ɵɵtemplate(2, AdaptDatetime2CalendarComponent_table_3_ng_container_7_th_2_Template, 1, 0, "th", 20);
            i0__namespace.ɵɵtext(3, "\n                  ");
            i0__namespace.ɵɵelementStart(4, "th", 21);
            i0__namespace.ɵɵtext(5);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n                  ");
            i0__namespace.ɵɵtemplate(7, AdaptDatetime2CalendarComponent_table_3_ng_container_7_th_7_Template, 1, 0, "th", 20);
            i0__namespace.ɵɵtext(8, "\n              ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var dayOfWeek_r36 = ctx.$implicit;
            var first_r37 = ctx.first;
            var last_r38 = ctx.last;
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", first_r37);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate1("\n                      ", dayOfWeek_r36.date.format("dd"), "\n                  ");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", last_r38);
        }
    }
    function AdaptDatetime2CalendarComponent_table_3_tr_19_ng_container_2_td_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "td", 22);
        }
        if (rf & 2) {
            var day_r43 = i0__namespace.ɵɵnextContext().$implicit;
            i0__namespace.ɵɵclassProp("range", day_r43.isInRange && !day_r43.isRangeFrom)("other-month", day_r43.isOtherMonth);
        }
    }
    function AdaptDatetime2CalendarComponent_table_3_tr_19_ng_container_2_td_11_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "td", 22);
        }
        if (rf & 2) {
            var day_r43 = i0__namespace.ɵɵnextContext().$implicit;
            i0__namespace.ɵɵclassProp("range", day_r43.isInRange && !day_r43.isRangeTo)("other-month", day_r43.isOtherMonth);
        }
    }
    function AdaptDatetime2CalendarComponent_table_3_tr_19_ng_container_2_Template(rf, ctx) {
        if (rf & 1) {
            var _r52_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n                  ");
            i0__namespace.ɵɵtemplate(2, AdaptDatetime2CalendarComponent_table_3_tr_19_ng_container_2_td_2_Template, 1, 4, "td", 23);
            i0__namespace.ɵɵtext(3, "\n                  ");
            i0__namespace.ɵɵelementStart(4, "td", 24);
            i0__namespace.ɵɵtext(5, "\n                      ");
            i0__namespace.ɵɵelementStart(6, "button", 25, 26);
            i0__namespace.ɵɵlistener("click", function AdaptDatetime2CalendarComponent_table_3_tr_19_ng_container_2_Template_button_click_6_listener() { var restoredCtx = i0__namespace.ɵɵrestoreView(_r52_1); var day_r43 = restoredCtx.$implicit; var ctx_r51 = i0__namespace.ɵɵnextContext(3); return ctx_r51.onDayClick(day_r43.date); })("keydown.arrowLeft", function AdaptDatetime2CalendarComponent_table_3_tr_19_ng_container_2_Template_button_keydown_arrowLeft_6_listener($event) { i0__namespace.ɵɵrestoreView(_r52_1); var _r47 = i0__namespace.ɵɵreference(7); var ctx_r53 = i0__namespace.ɵɵnextContext(3); return ctx_r53.onDayFocusChange($event, _r47, "l"); })("keydown.arrowUp", function AdaptDatetime2CalendarComponent_table_3_tr_19_ng_container_2_Template_button_keydown_arrowUp_6_listener($event) { i0__namespace.ɵɵrestoreView(_r52_1); var _r47 = i0__namespace.ɵɵreference(7); var ctx_r54 = i0__namespace.ɵɵnextContext(3); return ctx_r54.onDayFocusChange($event, _r47, "t"); })("keydown.arrowRight", function AdaptDatetime2CalendarComponent_table_3_tr_19_ng_container_2_Template_button_keydown_arrowRight_6_listener($event) { i0__namespace.ɵɵrestoreView(_r52_1); var _r47 = i0__namespace.ɵɵreference(7); var ctx_r55 = i0__namespace.ɵɵnextContext(3); return ctx_r55.onDayFocusChange($event, _r47, "r"); })("keydown.arrowDown", function AdaptDatetime2CalendarComponent_table_3_tr_19_ng_container_2_Template_button_keydown_arrowDown_6_listener($event) { i0__namespace.ɵɵrestoreView(_r52_1); var _r47 = i0__namespace.ɵɵreference(7); var ctx_r56 = i0__namespace.ɵɵnextContext(3); return ctx_r56.onDayFocusChange($event, _r47, "b"); });
            i0__namespace.ɵɵtext(8);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(9, "\n                  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(10, "\n                  ");
            i0__namespace.ɵɵtemplate(11, AdaptDatetime2CalendarComponent_table_3_tr_19_ng_container_2_td_11_Template, 1, 4, "td", 23);
            i0__namespace.ɵɵtext(12, "\n              ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var day_r43 = ctx.$implicit;
            var first_r44 = ctx.first;
            var last_r45 = ctx.last;
            var ctx_r42 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", first_r44);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵclassProp("range", day_r43.isInRange && !(day_r43.isRangeFrom && day_r43.isRangeTo))("range-from", ctx_r42.isRtl ? day_r43.isRangeTo && !day_r43.isRangeFrom : day_r43.isRangeFrom && !day_r43.isRangeTo)("range-to", ctx_r42.isRtl ? day_r43.isRangeFrom && !day_r43.isRangeTo : day_r43.isRangeTo && !day_r43.isRangeFrom)("other-month", day_r43.isOtherMonth);
            i0__namespace.ɵɵattribute("aria-label", day_r43.date.format("LL"))("aria-disabled", day_r43.isDisabled || day_r43.isOtherMonth)("aria-readonly", day_r43.isReadonly)("aria-hidden", day_r43.isDisabled || day_r43.isOtherMonth)("aria-selected", day_r43.isSelected);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵclassProp("active", day_r43.isSelected)("today", day_r43.isToday)("range-edge", day_r43.isRangeFrom || day_r43.isRangeTo)("disabled", day_r43.isDisabled || day_r43.isOtherMonth)("readonly", day_r43.isReadonly);
            i0__namespace.ɵɵproperty("disabled", day_r43.isDisabled || day_r43.isOtherMonth);
            i0__namespace.ɵɵattribute("data-testid", ctx_r42.testID + "_day_" + day_r43.date.date());
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate(day_r43.date.date());
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngIf", last_r45);
        }
    }
    function AdaptDatetime2CalendarComponent_table_3_tr_19_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "tr");
            i0__namespace.ɵɵtext(1, "\n              ");
            i0__namespace.ɵɵtemplate(2, AdaptDatetime2CalendarComponent_table_3_tr_19_ng_container_2_Template, 13, 28, "ng-container", 17);
            i0__namespace.ɵɵtext(3, "\n          ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var week_r41 = ctx.$implicit;
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngForOf", week_r41);
        }
    }
    function AdaptDatetime2CalendarComponent_table_3_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "table", 14, 15);
            i0__namespace.ɵɵtext(2, "\n          ");
            i0__namespace.ɵɵelementStart(3, "thead", 16);
            i0__namespace.ɵɵtext(4, "\n          ");
            i0__namespace.ɵɵelementStart(5, "tr");
            i0__namespace.ɵɵtext(6, "\n              ");
            i0__namespace.ɵɵtemplate(7, AdaptDatetime2CalendarComponent_table_3_ng_container_7_Template, 9, 3, "ng-container", 17);
            i0__namespace.ɵɵtext(8, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(9, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(10, "\n          ");
            i0__namespace.ɵɵelementStart(11, "tbody", null, 18);
            i0__namespace.ɵɵtext(13, "\n          ");
            i0__namespace.ɵɵelementStart(14, "tr", 16);
            i0__namespace.ɵɵtext(15, "\n              ");
            i0__namespace.ɵɵelement(16, "td", 19);
            i0__namespace.ɵɵtext(17, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(18, "\n          ");
            i0__namespace.ɵɵtemplate(19, AdaptDatetime2CalendarComponent_table_3_tr_19_Template, 4, 1, "tr", 17);
            i0__namespace.ɵɵtext(20, "\n          ");
            i0__namespace.ɵɵelementStart(21, "tr", 16);
            i0__namespace.ɵɵtext(22, "\n              ");
            i0__namespace.ɵɵelement(23, "td", 19);
            i0__namespace.ɵɵtext(24, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(25, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(26, "\n      ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(7);
            i0__namespace.ɵɵproperty("ngForOf", ctx_r1.calendar[0]);
            i0__namespace.ɵɵadvance(12);
            i0__namespace.ɵɵproperty("ngForOf", ctx_r1.calendar);
        }
    }
    function AdaptDatetime2CalendarComponent_adapt_datetime2_year_picker_5_Template(rf, ctx) {
        if (rf & 1) {
            var _r58_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "adapt-datetime2-year-picker", 27);
            i0__namespace.ɵɵlistener("yearSelect", function AdaptDatetime2CalendarComponent_adapt_datetime2_year_picker_5_Template_adapt_datetime2_year_picker_yearSelect_0_listener($event) { i0__namespace.ɵɵrestoreView(_r58_1); var ctx_r57 = i0__namespace.ɵɵnextContext(); return ctx_r57.yearSelect($event); });
            i0__namespace.ɵɵtext(1, "\n      ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r2 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("initialDate", ctx_r2.initialDate)("yearsPage", ctx_r2.yearsPage)("activeDate", ctx_r2.activeDate)("animationsSet", ctx_r2._animationsSet)("calendarPlayers", ctx_r2._calendarPlayers);
        }
    }
    var _c2$e = ["dndArea"];
    var _c3$a = ["clockFaceContainerRef"];
    function AdaptDatetime2ClockComponent_ng_container_13_span_4_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span", 2);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r5 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵclassProp("active", ctx_r5._activeFace === 2);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r5.texts.ssBtn);
        }
    }
    function AdaptDatetime2ClockComponent_ng_container_13_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n                  ");
            i0__namespace.ɵɵelement(2, "span", 3);
            i0__namespace.ɵɵtext(3, "\n                  ");
            i0__namespace.ɵɵtemplate(4, AdaptDatetime2ClockComponent_ng_container_13_span_4_Template, 2, 3, "span", 11);
            i0__namespace.ɵɵtext(5, "\n              ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r0 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵproperty("ngIf", ctx_r0.seconds);
        }
    }
    function AdaptDatetime2ClockComponent_button_16_Template(rf, ctx) {
        if (rf & 1) {
            var _r7_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 12);
            i0__namespace.ɵɵlistener("click", function AdaptDatetime2ClockComponent_button_16_Template_button_click_0_listener() { i0__namespace.ɵɵrestoreView(_r7_1); var ctx_r6 = i0__namespace.ɵɵnextContext(); return ctx_r6.changeMeridiem(); });
            i0__namespace.ɵɵtext(1, "\n              ");
            i0__namespace.ɵɵelementStart(2, "span", 2);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n              ");
            i0__namespace.ɵɵelement(5, "span", 3);
            i0__namespace.ɵɵtext(6, "\n              ");
            i0__namespace.ɵɵelementStart(7, "span", 2);
            i0__namespace.ɵɵtext(8);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(9, "\n          ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵattribute("data-testid", ctx_r1.testID + "_ampm");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵclassProp("active", !ctx_r1._isPM);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r1.texts.amBtn);
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵclassProp("active", ctx_r1._isPM);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r1.texts.pmBtn);
        }
    }
    function AdaptDatetime2ClockComponent_div_25_div_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 15);
            i0__namespace.ɵɵtext(1, "\n                      ");
            i0__namespace.ɵɵelementStart(2, "div", 16);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n                      ");
            i0__namespace.ɵɵelement(5, "div", 17);
            i0__namespace.ɵɵtext(6, "\n                  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var label_r10 = ctx.$implicit;
            var index_r11 = ctx.index;
            var ticksSet_r8 = i0__namespace.ɵɵnextContext().$implicit;
            var ctx_r9 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵstyleProp("transform", "rotate(" + index_r11 / ticksSet_r8.length * 360 + "deg)");
            i0__namespace.ɵɵclassProp("a3t-clock--tick_active", label_r10.value === ctx_r9.uiFace.active)("readonly", ctx_r9.readonly);
            i0__namespace.ɵɵattribute("data-testid", ctx_r9.testID + "_tick_" + index_r11 / ticksSet_r8.length * 360);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵstyleProp("transform", "rotate(" + -index_r11 / ticksSet_r8.length * 360 + "deg)");
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n                          ", label_r10.uiValue, "\n                      ");
        }
    }
    function AdaptDatetime2ClockComponent_div_25_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 13);
            i0__namespace.ɵɵtext(1, "\n                  ");
            i0__namespace.ɵɵtemplate(2, AdaptDatetime2ClockComponent_div_25_div_2_Template, 7, 10, "div", 14);
            i0__namespace.ɵɵtext(3, "\n              ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ticksSet_r8 = ctx.$implicit;
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngForOf", ticksSet_r8);
        }
    }
    var _c4$7 = ["hoursField"];
    function AdaptDatetime2PickerComponent_div_3_div_2_Template(rf, ctx) {
        if (rf & 1) {
            var _r7_2 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 8);
            i0__namespace.ɵɵtext(1, "\n                  ");
            i0__namespace.ɵɵelement(2, "adapt-icon", 9);
            i0__namespace.ɵɵtext(3, "\n                  ");
            i0__namespace.ɵɵelementStart(4, "button", 10);
            i0__namespace.ɵɵlistener("click", function AdaptDatetime2PickerComponent_div_3_div_2_Template_button_click_4_listener() { i0__namespace.ɵɵrestoreView(_r7_2); var ctx_r6 = i0__namespace.ɵɵnextContext(2); return ctx_r6.timeMode = false; });
            i0__namespace.ɵɵtext(5);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n              ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r3 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵproperty("@heightAnimation", undefined);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", "calendar");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵattribute("data-testid", ctx_r3.testID + "_dateSummary")("aria-label", ctx_r3.dateSummary);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r3.dateSummary);
        }
    }
    function AdaptDatetime2PickerComponent_div_3_div_4_Template(rf, ctx) {
        if (rf & 1) {
            var _r9_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 11);
            i0__namespace.ɵɵtext(1, "\n                  ");
            i0__namespace.ɵɵelementStart(2, "button", 10);
            i0__namespace.ɵɵlistener("click", function AdaptDatetime2PickerComponent_div_3_div_4_Template_button_click_2_listener() { i0__namespace.ɵɵrestoreView(_r9_1); var ctx_r8 = i0__namespace.ɵɵnextContext(2); return ctx_r8.monthMode = false; });
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n              ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r4 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵproperty("@heightAnimation", undefined);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵattribute("data-testid", ctx_r4.testID + "_yearSummary")("aria-label", ctx_r4.yearSummary);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r4.yearSummary);
        }
    }
    function AdaptDatetime2PickerComponent_div_3_div_6_Template(rf, ctx) {
        if (rf & 1) {
            var _r11_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 12);
            i0__namespace.ɵɵtext(1, "\n                  ");
            i0__namespace.ɵɵelementStart(2, "adapt-datetime2-calendar", 13);
            i0__namespace.ɵɵlistener("daySelect", function AdaptDatetime2PickerComponent_div_3_div_6_Template_adapt_datetime2_calendar_daySelect_2_listener($event) { i0__namespace.ɵɵrestoreView(_r11_1); var ctx_r10 = i0__namespace.ɵɵnextContext(2); return ctx_r10.selectDate($event); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(3, "\n              ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r5 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵproperty("@heightAnimation", undefined);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("expandedControlsStyle", !ctx_r5.timePicker && !ctx_r5.preventExpandedDateControls)("initialDate", ctx_r5.initialValue)("activeDate", ctx_r5.activeDate)("monthAndYearOnly", ctx_r5.monthAndYearOnly)("range", ctx_r5.dateRange)("filter", ctx_r5.dateFilter)("disabled", ctx_r5.disabled)("readonly", ctx_r5.readonly)("testID", ctx_r5.testID);
        }
    }
    function AdaptDatetime2PickerComponent_div_3_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 4);
            i0__namespace.ɵɵtext(1, "\n              ");
            i0__namespace.ɵɵtemplate(2, AdaptDatetime2PickerComponent_div_3_div_2_Template, 7, 6, "div", 5);
            i0__namespace.ɵɵtext(3, "\n\n              ");
            i0__namespace.ɵɵtemplate(4, AdaptDatetime2PickerComponent_div_3_div_4_Template, 5, 4, "div", 6);
            i0__namespace.ɵɵtext(5, "\n\n              ");
            i0__namespace.ɵɵtemplate(6, AdaptDatetime2PickerComponent_div_3_div_6_Template, 4, 10, "div", 7);
            i0__namespace.ɵɵtext(7, "\n          ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r0 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r0.timeMode && !ctx_r0.timeOnly && !ctx_r0.hideDatePickerSummary);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r0.monthMode && ctx_r0.monthAndYearOnly && !ctx_r0.hideDatePickerSummary);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r0.timeMode && !ctx_r0.monthAndYearOnly || !ctx_r0.monthMode && ctx_r0.monthAndYearOnly);
        }
    }
    function AdaptDatetime2PickerComponent_div_5_ng_container_10_ng_container_7_Template(rf, ctx) {
        if (rf & 1) {
            var _r20_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementStart(2, "input", 21);
            i0__namespace.ɵɵlistener("focus", function AdaptDatetime2PickerComponent_div_5_ng_container_10_ng_container_7_Template_input_focus_2_listener() { i0__namespace.ɵɵrestoreView(_r20_1); var ctx_r19 = i0__namespace.ɵɵnextContext(3); ctx_r19.activeFace = ctx_r19.activeFaceVariants.Seconds; return ctx_r19.clockFaceChange.emit(ctx_r19.activeFaceVariants.Seconds); })("input", function AdaptDatetime2PickerComponent_div_5_ng_container_10_ng_container_7_Template_input_input_2_listener($event) { i0__namespace.ɵɵrestoreView(_r20_1); var ctx_r21 = i0__namespace.ɵɵnextContext(3); return ctx_r21.timeUnitInput($event, "s"); })("keydown", function AdaptDatetime2PickerComponent_div_5_ng_container_10_ng_container_7_Template_input_keydown_2_listener($event) { i0__namespace.ɵɵrestoreView(_r20_1); var ctx_r22 = i0__namespace.ɵɵnextContext(3); return ctx_r22.timeUnitKeydown($event, "s"); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(3, "\n                              ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r17 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n                                  ", ctx_r17.defaultTexts.timeSeparator, "\n                                  ");
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("value", ctx_r17.timeSummary.ss);
            i0__namespace.ɵɵattribute("aria-valuenow", ctx_r17.timeSummary.ss)("aria-label", ctx_r17.defaultTexts.seconds);
        }
    }
    function AdaptDatetime2PickerComponent_div_5_ng_container_10_ng_container_9_Template(rf, ctx) {
        if (rf & 1) {
            var _r24_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n                                  ");
            i0__namespace.ɵɵelementStart(2, "input", 23);
            i0__namespace.ɵɵlistener("click", function AdaptDatetime2PickerComponent_div_5_ng_container_10_ng_container_9_Template_input_click_2_listener() { i0__namespace.ɵɵrestoreView(_r24_1); var ctx_r23 = i0__namespace.ɵɵnextContext(3); return ctx_r23.changeMeridiem(); })("keydown.arrowUp", function AdaptDatetime2PickerComponent_div_5_ng_container_10_ng_container_9_Template_input_keydown_arrowUp_2_listener($event) { i0__namespace.ɵɵrestoreView(_r24_1); var ctx_r25 = i0__namespace.ɵɵnextContext(3); $event.preventDefault(); return ctx_r25.changeMeridiem(); })("keydown.arrowDown", function AdaptDatetime2PickerComponent_div_5_ng_container_10_ng_container_9_Template_input_keydown_arrowDown_2_listener($event) { i0__namespace.ɵɵrestoreView(_r24_1); var ctx_r26 = i0__namespace.ɵɵnextContext(3); $event.preventDefault(); return ctx_r26.changeMeridiem(); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(3, "\n                              ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r18 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("value", ctx_r18.timeSummary.a);
            i0__namespace.ɵɵattribute("aria-valuenow", ctx_r18.timeSummary.a)("aria-label", ctx_r18.defaultTexts.meridiem);
        }
    }
    function AdaptDatetime2PickerComponent_div_5_ng_container_10_Template(rf, ctx) {
        if (rf & 1) {
            var _r28_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n                              ");
            i0__namespace.ɵɵelementStart(2, "input", 21, 22);
            i0__namespace.ɵɵlistener("focus", function AdaptDatetime2PickerComponent_div_5_ng_container_10_Template_input_focus_2_listener() { i0__namespace.ɵɵrestoreView(_r28_1); var ctx_r27 = i0__namespace.ɵɵnextContext(2); ctx_r27.activeFace = ctx_r27.activeFaceVariants.Hours; return ctx_r27.clockFaceChange.emit(ctx_r27.activeFaceVariants.Hours); })("input", function AdaptDatetime2PickerComponent_div_5_ng_container_10_Template_input_input_2_listener($event) { i0__namespace.ɵɵrestoreView(_r28_1); var ctx_r29 = i0__namespace.ɵɵnextContext(2); return ctx_r29.timeUnitInput($event, "h"); })("keydown", function AdaptDatetime2PickerComponent_div_5_ng_container_10_Template_input_keydown_2_listener($event) { i0__namespace.ɵɵrestoreView(_r28_1); var ctx_r30 = i0__namespace.ɵɵnextContext(2); return ctx_r30.timeUnitKeydown($event, "h"); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4);
            i0__namespace.ɵɵelementStart(5, "input", 21);
            i0__namespace.ɵɵlistener("focus", function AdaptDatetime2PickerComponent_div_5_ng_container_10_Template_input_focus_5_listener() { i0__namespace.ɵɵrestoreView(_r28_1); var ctx_r31 = i0__namespace.ɵɵnextContext(2); ctx_r31.activeFace = ctx_r31.activeFaceVariants.Minutes; return ctx_r31.clockFaceChange.emit(ctx_r31.activeFaceVariants.Minutes); })("input", function AdaptDatetime2PickerComponent_div_5_ng_container_10_Template_input_input_5_listener($event) { i0__namespace.ɵɵrestoreView(_r28_1); var ctx_r32 = i0__namespace.ɵɵnextContext(2); return ctx_r32.timeUnitInput($event, "m"); })("keydown", function AdaptDatetime2PickerComponent_div_5_ng_container_10_Template_input_keydown_5_listener($event) { i0__namespace.ɵɵrestoreView(_r28_1); var ctx_r33 = i0__namespace.ɵɵnextContext(2); return ctx_r33.timeUnitKeydown($event, "m"); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n\n                              ");
            i0__namespace.ɵɵtemplate(7, AdaptDatetime2PickerComponent_div_5_ng_container_10_ng_container_7_Template, 4, 4, "ng-container", 18);
            i0__namespace.ɵɵtext(8, "\n\n                              ");
            i0__namespace.ɵɵtemplate(9, AdaptDatetime2PickerComponent_div_5_ng_container_10_ng_container_9_Template, 4, 3, "ng-container", 18);
            i0__namespace.ɵɵtext(10, "\n                          ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r12 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("value", ctx_r12.timeSummary.hh);
            i0__namespace.ɵɵattribute("aria-valuenow", ctx_r12.timeSummary.hh)("aria-label", ctx_r12.defaultTexts.hours);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate1("\n                              ", ctx_r12.defaultTexts.timeSeparator, "\n                              ");
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("value", ctx_r12.timeSummary.mm);
            i0__namespace.ɵɵattribute("aria-valuenow", ctx_r12.timeSummary.mm)("aria-label", ctx_r12.defaultTexts.minutes);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r12.timeSeconds);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r12.hasMeridiem);
        }
    }
    function AdaptDatetime2PickerComponent_div_5_ng_container_12_Template(rf, ctx) {
        if (rf & 1) {
            var _r35_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n                              ");
            i0__namespace.ɵɵelementStart(2, "span", 24);
            i0__namespace.ɵɵlistener("focus", function AdaptDatetime2PickerComponent_div_5_ng_container_12_Template_span_focus_2_listener() { i0__namespace.ɵɵrestoreView(_r35_1); var ctx_r34 = i0__namespace.ɵɵnextContext(2); return ctx_r34.setCurrentDate(); });
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n                          ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r13 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r13.emptyTimeHeading);
        }
    }
    function AdaptDatetime2PickerComponent_div_5_button_16_Template(rf, ctx) {
        if (rf & 1) {
            var _r37_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 25);
            i0__namespace.ɵɵlistener("click", function AdaptDatetime2PickerComponent_div_5_button_16_Template_button_click_0_listener() { i0__namespace.ɵɵrestoreView(_r37_1); var ctx_r36 = i0__namespace.ɵɵnextContext(2); return ctx_r36.timeMode = !ctx_r36.timeMode; });
            i0__namespace.ɵɵtext(1, "\n                      ");
            i0__namespace.ɵɵelement(2, "adapt-icon", 26);
            i0__namespace.ɵɵtext(3, "\n                  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r14 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵclassProp("rotation-180", !ctx_r14.timeMode);
            i0__namespace.ɵɵattribute("data-testid", ctx_r14.testID + "_timeMode");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", "angle_down");
        }
    }
    function AdaptDatetime2PickerComponent_div_5_div_19_Template(rf, ctx) {
        if (rf & 1) {
            var _r39_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 27);
            i0__namespace.ɵɵtext(1, "\n                  ");
            i0__namespace.ɵɵelementStart(2, "adapt-datetime2-clock", 28);
            i0__namespace.ɵɵlistener("timeSelect", function AdaptDatetime2PickerComponent_div_5_div_19_Template_adapt_datetime2_clock_timeSelect_2_listener($event) { i0__namespace.ɵɵrestoreView(_r39_1); var ctx_r38 = i0__namespace.ɵɵnextContext(2); return ctx_r38.selectTime($event); })("clockFaceChange", function AdaptDatetime2PickerComponent_div_5_div_19_Template_adapt_datetime2_clock_clockFaceChange_2_listener($event) { i0__namespace.ɵɵrestoreView(_r39_1); var ctx_r40 = i0__namespace.ɵɵnextContext(2); return ctx_r40.clockFaceChange.emit($event); });
            i0__namespace.ɵɵtext(3, "\n                  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n              ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r15 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵproperty("@heightAnimation", undefined);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("activeTime", ctx_r15.clockState)("activeFace", ctx_r15.activeFace)("seconds", ctx_r15.timeSeconds)("hasMeridiem", ctx_r15.hasMeridiem)("disabled", ctx_r15.disabled)("readonly", ctx_r15.readonly)("texts", ctx_r15.clockHeadings)("testID", ctx_r15.testID);
        }
    }
    function AdaptDatetime2PickerComponent_div_5_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 14);
            i0__namespace.ɵɵtext(1, "\n              ");
            i0__namespace.ɵɵelementStart(2, "div", 15);
            i0__namespace.ɵɵtext(3, "\n                  ");
            i0__namespace.ɵɵelementStart(4, "div", 16);
            i0__namespace.ɵɵtext(5, "\n                      ");
            i0__namespace.ɵɵelement(6, "adapt-icon", 9);
            i0__namespace.ɵɵtext(7, "\n\n                      ");
            i0__namespace.ɵɵelementStart(8, "div", 17);
            i0__namespace.ɵɵtext(9, "\n                          ");
            i0__namespace.ɵɵtemplate(10, AdaptDatetime2PickerComponent_div_5_ng_container_10_Template, 11, 9, "ng-container", 18);
            i0__namespace.ɵɵtext(11, "\n\n                          ");
            i0__namespace.ɵɵtemplate(12, AdaptDatetime2PickerComponent_div_5_ng_container_12_Template, 5, 1, "ng-container", 18);
            i0__namespace.ɵɵtext(13, "\n\n                      ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(14, "\n                  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(15, "\n\n                  ");
            i0__namespace.ɵɵtemplate(16, AdaptDatetime2PickerComponent_div_5_button_16_Template, 4, 5, "button", 19);
            i0__namespace.ɵɵtext(17, "\n              ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(18, "\n              ");
            i0__namespace.ɵɵtemplate(19, AdaptDatetime2PickerComponent_div_5_div_19_Template, 5, 9, "div", 20);
            i0__namespace.ɵɵtext(20, "\n          ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵclassProp("a3t-datetime--time-picker-summary_active", ctx_r1.timeMode);
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", "clock_o");
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵproperty("ngIf", ctx_r1.timeSummary);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r1.timeSummary);
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r1.timeOnly);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngIf", ctx_r1.timeMode);
        }
    }
    function AdaptDatetime2PickerComponent_div_7_div_19_Template(rf, ctx) {
        if (rf & 1) {
            var _r43_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 33);
            i0__namespace.ɵɵtext(1, "\n                  ");
            i0__namespace.ɵɵelementStart(2, "adapt-datetime2-month-picker", 34);
            i0__namespace.ɵɵlistener("selectMonth", function AdaptDatetime2PickerComponent_div_7_div_19_Template_adapt_datetime2_month_picker_selectMonth_2_listener($event) { i0__namespace.ɵɵrestoreView(_r43_1); var ctx_r42 = i0__namespace.ɵɵnextContext(2); return ctx_r42.selectMonth($event); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(3, "\n              ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r41 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵproperty("@heightAnimation", undefined);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("initialDate", ctx_r41.initialValue)("activeDate", ctx_r41.activeDate);
        }
    }
    function AdaptDatetime2PickerComponent_div_7_Template(rf, ctx) {
        if (rf & 1) {
            var _r45_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 29);
            i0__namespace.ɵɵtext(1, "\n              ");
            i0__namespace.ɵɵelementStart(2, "div", 15);
            i0__namespace.ɵɵtext(3, "\n                  ");
            i0__namespace.ɵɵelementStart(4, "div", 16);
            i0__namespace.ɵɵtext(5, "\n                      ");
            i0__namespace.ɵɵelementStart(6, "div", 17);
            i0__namespace.ɵɵtext(7, "\n              ");
            i0__namespace.ɵɵelementStart(8, "span", 30);
            i0__namespace.ɵɵtext(9);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(10, "\n                      ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(11, "\n                  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(12, "\n\n                  ");
            i0__namespace.ɵɵelementStart(13, "button", 25);
            i0__namespace.ɵɵlistener("click", function AdaptDatetime2PickerComponent_div_7_Template_button_click_13_listener() { i0__namespace.ɵɵrestoreView(_r45_1); var ctx_r44 = i0__namespace.ɵɵnextContext(); return ctx_r44.monthMode = !ctx_r44.monthMode; });
            i0__namespace.ɵɵtext(14, "\n                      ");
            i0__namespace.ɵɵelement(15, "adapt-icon", 31);
            i0__namespace.ɵɵtext(16, "\n                  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(17, "\n              ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(18, "\n              ");
            i0__namespace.ɵɵtemplate(19, AdaptDatetime2PickerComponent_div_7_div_19_Template, 4, 3, "div", 32);
            i0__namespace.ɵɵtext(20, "\n          ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r2 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵclassProp("a3t-datetime--time-picker-summary_active", ctx_r2.monthMode);
            i0__namespace.ɵɵadvance(6);
            i0__namespace.ɵɵattribute("aria-label", ctx_r2.defaultTexts.month);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n                ", ctx_r2.monthSummary, "\n              ");
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵclassProp("rotation-180", !ctx_r2.monthMode);
            i0__namespace.ɵɵattribute("data-testid", ctx_r2.testID + "_monthMode");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", "angle_down");
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵproperty("ngIf", ctx_r2.monthMode);
        }
    }
    var AdaptDatetime2CalendarComponent = /** @class */ (function () {
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        function AdaptDatetime2CalendarComponent(_animationBuilder, _dir, _dt, _dtr, _changeDetectorRef, ts) {
            var _this = this;
            this._animationBuilder = _animationBuilder;
            this._dir = _dir;
            this._dt = _dt;
            this._dtr = _dtr;
            this._changeDetectorRef = _changeDetectorRef;
            this.ts = ts;
            this.animationDirectionForward = true;
            this.isRtl = false;
            this.yearsPage = 0;
            this.defaultTexts = {};
            this.calendarUIActions = {
                prevYear: function () {
                    if (!_this.monthAndYearOnly) {
                        _this.animationDirectionForward = false;
                        _this._initialDate.subtract(1, 'year');
                        _this._drawCalendar();
                    }
                    else {
                        _this.yearsPage--;
                    }
                },
                nextYear: function () {
                    if (!_this.monthAndYearOnly) {
                        _this.animationDirectionForward = true;
                        _this._initialDate.add(1, 'year');
                        _this._drawCalendar();
                    }
                    else {
                        _this.yearsPage++;
                    }
                },
                prevMonth: function () {
                    _this.animationDirectionForward = false;
                    _this._initialDate.subtract(1, 'month');
                    _this._drawCalendar();
                },
                nextMonth: function () {
                    _this.animationDirectionForward = true;
                    _this._initialDate.add(1, 'month');
                    _this._drawCalendar();
                },
            };
            this.monthAndYearOnly = false;
            // Outputs
            this.daySelect = new i0.EventEmitter();
            this._animationsSet = {
                prevOut: [
                    i1$1.style({
                        transform: 'translate(0px, 0px)',
                        opacity: 1
                    }),
                    i1$1.animate('100ms', i1$1.style({
                        transform: 'translate(10px, 0px)',
                        opacity: 0
                    }))
                ],
                prevIn: [
                    i1$1.style({
                        transform: 'translate(-10px, 0px)',
                        opacity: 0
                    }),
                    i1$1.animate('100ms', i1$1.style({
                        transform: 'translate(0px, 0px)',
                        opacity: 1
                    }))
                ],
                nextOut: [
                    i1$1.style({
                        transform: 'translate(0px, 0px)',
                        opacity: 1
                    }),
                    i1$1.animate('100ms', i1$1.style({
                        transform: 'translate(-10px, 0px)',
                        opacity: 0
                    }))
                ],
                nextIn: [
                    i1$1.style({
                        transform: 'translate(10px, 0px)',
                        opacity: 0
                    }),
                    i1$1.animate('100ms', i1$1.style({
                        transform: 'translate(0px, 0px)',
                        opacity: 1
                    }))
                ]
            };
            this._calendarPlayers = {
                nextOut: null,
                nextIn: null,
                prevOut: null,
                prevIn: null
            };
            this._animationReady = false;
            this._initialDate = moment__default["default"]();
            this._activeDate = null;
            this._range = [null, null];
            this._hideControls = false;
            this._expandedControlsStyle = false;
            this._initCalendar();
            this._drawCalendar();
            if (_dt || _dtr) {
                this._formControl = (_dt || _dtr).control.control;
            }
            this.setDefaultTexts(ts.getCurrentLanguage());
        }
        Object.defineProperty(AdaptDatetime2CalendarComponent.prototype, "initialDate", {
            get: function () {
                return this._initialDate;
            },
            // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
            set: function (v) {
                if (v && v.isValid()) {
                    this._initialDate = v.clone();
                    this._drawCalendar();
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2CalendarComponent.prototype, "activeDate", {
            get: function () {
                return this._activeDate;
            },
            set: function (v) {
                if (v !== undefined) {
                    if (v && v.isValid()) {
                        this._activeDate = v.clone();
                        if (this._activeDate.clone().startOf('month').isSame(this._initialDate.clone().startOf('month'))) {
                            this._patchCalendar();
                        }
                        else {
                            this._initialDate = v.clone();
                            this._drawCalendar();
                        }
                    }
                    else {
                        this._activeDate = null;
                        this._patchCalendar();
                    }
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2CalendarComponent.prototype, "filter", {
            // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
            set: function (v) {
                if (v !== undefined) {
                    this._filter = v ? v : null;
                    this._patchCalendar();
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2CalendarComponent.prototype, "range", {
            set: function (v) {
                if (v) {
                    this._range[0] = v[0] && v[0].isValid() ? v[0].clone() : null;
                    this._range[1] = v[1] && v[1].isValid() ? v[1].clone() : null;
                    this._patchCalendar();
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2CalendarComponent.prototype, "disabled", {
            set: function (v) {
                if (v !== undefined) {
                    this._disabled = v;
                    this._patchCalendar();
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2CalendarComponent.prototype, "readonly", {
            set: function (v) {
                if (v !== undefined) {
                    this._readonly = v;
                    this._patchCalendar();
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2CalendarComponent.prototype, "hideControls", {
            set: function (v) {
                if (v !== undefined) {
                    this._hideControls = v;
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2CalendarComponent.prototype, "expandedControlsStyle", {
            // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
            set: function (v) {
                if (v !== undefined) {
                    this._expandedControlsStyle = v;
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2CalendarComponent.prototype, "calendarUIState", {
            // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
            get: function () {
                return {
                    date: this._initialDate,
                    disabled: this._disabled,
                    readonly: this._readonly,
                    hideControls: this._hideControls,
                    expanded: this._expandedControlsStyle
                };
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2CalendarComponent.prototype, "state", {
            // Inputs
            set: function (config) {
                if (!config) {
                    return;
                }
                var needPatch = false;
                var needRedraw = false;
                if (config.initialDate && config.initialDate.isValid()) {
                    this._initialDate = config.initialDate.clone();
                    needRedraw = true;
                }
                if (config.activeDate !== undefined) {
                    if (config.activeDate && config.activeDate.isValid()) {
                        this._activeDate = config.activeDate.clone();
                        if (this._activeDate.clone().startOf('month').isSame(this._initialDate.clone().startOf('month'))) {
                            needPatch = true;
                        }
                        else {
                            this._initialDate = config.activeDate.clone();
                            needRedraw = true;
                        }
                    }
                    else {
                        this._activeDate = null;
                        needPatch = true;
                    }
                }
                if (config.filter !== undefined) {
                    this._filter = config.filter ? config.filter : null;
                    needPatch = true;
                }
                if (config.range) {
                    this._range[0] = config.range[0] && config.range[0].isValid() ? config.range[0].clone() : null;
                    this._range[1] = config.range[1] && config.range[1].isValid() ? config.range[1].clone() : null;
                    needPatch = true;
                }
                if (config.disabled !== undefined) {
                    this._disabled = config.disabled;
                    needPatch = true;
                }
                if (config.readonly !== undefined) {
                    this._readonly = config.readonly;
                    needPatch = true;
                }
                if (config.hideControls !== undefined) {
                    this._hideControls = config.hideControls;
                }
                if (config.expandedControlsStyle !== undefined) {
                    this._expandedControlsStyle = config.expandedControlsStyle;
                }
                // Update
                if (needPatch) {
                    this._patchCalendar();
                }
                if (needRedraw) {
                    this._drawCalendar();
                }
            },
            enumerable: false,
            configurable: true
        });
        AdaptDatetime2CalendarComponent.prototype.ngOnInit = function () {
            this.isRtl = this._dir.value === 'rtl';
        };
        AdaptDatetime2CalendarComponent.prototype.ngAfterViewInit = function () {
            if (!this.monthAndYearOnly) {
                this._calendarPlayers.prevOut = this._animationBuilder.build(this._animationsSet.prevOut)
                    .create(this.calendarContainerRef.nativeElement);
                this._calendarPlayers.prevIn = this._animationBuilder.build(this._animationsSet.prevIn)
                    .create(this.calendarContainerRef.nativeElement);
                this._calendarPlayers.nextOut = this._animationBuilder.build(this._animationsSet.nextOut)
                    .create(this.calendarContainerRef.nativeElement);
                this._calendarPlayers.nextIn = this._animationBuilder.build(this._animationsSet.nextIn)
                    .create(this.calendarContainerRef.nativeElement);
            }
            this._animationReady = true;
        };
        AdaptDatetime2CalendarComponent.prototype.setDefaultTexts = function (translation) {
            this.defaultTexts.emptyYear = translation['adapt.datetime.emptyYear'];
            this.defaultTexts.emptyMonth = translation['adapt.datetime.emptyMonth'];
        };
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        // Private methods
        /**
         * Init days table
         */
        // UI Methods
        /**
         * Calendar day click handler
         */
        AdaptDatetime2CalendarComponent.prototype.onDayClick = function (date) {
            this.daySelect.emit(date.clone());
        };
        AdaptDatetime2CalendarComponent.prototype.yearSelect = function (date) {
            this.daySelect.emit(date.clone());
            this.yearsPage = 0;
        };
        /**
         * Update days table with month change
         */
        /**
         * Keyboard navigation for days table
         */
        AdaptDatetime2CalendarComponent.prototype.onDayFocusChange = function (event, element, direction) {
            if (direction === void 0) { direction = 'r'; }
            event.preventDefault();
            if (!this._calendarDOM) {
                this._calendarDOM = Array.prototype.slice.call(this.daysTable.nativeElement.querySelectorAll('button'));
            }
            var elIndex = this._calendarDOM.indexOf(element);
            var newIndex;
            switch (direction) {
                case 'l':
                case 't': {
                    newIndex = elIndex - (direction === 'l' ? 1 : 7);
                    while ((newIndex >= 0) && this._calendarDOM[newIndex] && this._calendarDOM[newIndex].disabled) {
                        newIndex--;
                    }
                    if (newIndex >= 0) {
                        this._calendarDOM[newIndex].focus();
                    }
                    break;
                }
                case 'r':
                case 'b': {
                    newIndex = elIndex + (direction === 'r' ? 1 : 7);
                    while (this._calendarDOM[newIndex] && this._calendarDOM[newIndex].disabled) {
                        newIndex++;
                    }
                    if (newIndex < this._calendarDOM.length) {
                        this._calendarDOM[newIndex].focus();
                    }
                    break;
                }
            }
        };
        /**
         * Update days table without month change
         */
        AdaptDatetime2CalendarComponent.prototype._initCalendar = function () {
            this.calendar =
                Array(6)
                    .fill(0)
                    .map(function () { return Array(7)
                    .fill(0)
                    .map(function () { return new Calendar2Day(); }); });
        };
        AdaptDatetime2CalendarComponent.prototype._drawCalendar = function () {
            var _this = this;
            var startDay = this._initialDate.clone().startOf('month').startOf('week');
            var tempDate = startDay.clone().subtract(1, 'day');
            this._animateCalendarChange((function () {
                _this.calendar.forEach(function (week, weekIndex) {
                    week.forEach(function (day, dayIndex) {
                        _this.calendar[weekIndex][dayIndex].date = tempDate.add(1, 'day').clone();
                    });
                });
                _this._patchCalendar();
            }).bind(this));
        };
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        AdaptDatetime2CalendarComponent.prototype._patchCalendar = function () {
            var _this = this;
            this.calendar.forEach(function (week) {
                week.forEach(function (day) {
                    day.isSelected = _this._activeDate ?
                        _this._activeDate.clone().startOf('day').isSame(day.date.startOf('day')) : false;
                    day.isToday = moment__default["default"]().startOf('day').isSame(day.date.startOf('day'));
                    day.isOtherMonth = day.date.month() !== _this._initialDate.month();
                    day.isDisabled = _this._disabled ||
                        (_this._filter ? !_this._filter(day.date, _this._formControl) : false);
                    day.isReadonly = _this._readonly;
                    day.isInRange = _this._range[0] && _this._range[1]
                        && day.date.isBetween(_this._range[0], _this._range[1], 'day', '[]');
                    day.isRangeFrom = _this._range[0] && _this._range[0].startOf('day').isSame(day.date.startOf('day'));
                    day.isRangeTo = _this._range[1] && _this._range[1].endOf('day').isSame(day.date.endOf('day'));
                });
            });
        };
        /**
         * Calendar change animation
         */
        AdaptDatetime2CalendarComponent.prototype._animateCalendarChange = function (changeValFn) {
            var _this = this;
            if (!this.monthAndYearOnly) {
                if (this._animationReady) {
                    this._calendarPlayers.prevOut.reset();
                    this._calendarPlayers.prevIn.reset();
                    this._calendarPlayers.nextOut.reset();
                    this._calendarPlayers.nextIn.reset();
                    var _in_1 = this.animationDirectionForward ? this._calendarPlayers.nextIn : this._calendarPlayers.prevIn;
                    var _out = this.animationDirectionForward ? this._calendarPlayers.nextOut : this._calendarPlayers.prevOut;
                    _out.onDone(function () {
                        changeValFn();
                        _in_1.play();
                        i1.SafeCdr.detectChanges(_this._changeDetectorRef);
                    });
                    _out.play();
                }
                else {
                    changeValFn();
                }
            }
        };
        return AdaptDatetime2CalendarComponent;
    }());
    AdaptDatetime2CalendarComponent.ɵfac = function AdaptDatetime2CalendarComponent_Factory(t) { return new (t || AdaptDatetime2CalendarComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace$1.AnimationBuilder), i0__namespace.ɵɵdirectiveInject(i2__namespace$1.Directionality), i0__namespace.ɵɵdirectiveInject(i0.forwardRef(function () { return AdaptDatetime2Component; }), 8), i0__namespace.ɵɵdirectiveInject(i0.forwardRef(function () { return AdaptDatetimeRange2Component; }), 8), i0__namespace.ɵɵdirectiveInject(i0__namespace.ChangeDetectorRef), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService)); };
    AdaptDatetime2CalendarComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptDatetime2CalendarComponent, selectors: [["adapt-datetime2-calendar"]], viewQuery: function AdaptDatetime2CalendarComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$l, 5);
                i0__namespace.ɵɵviewQuery(_c1$g, 5);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.daysTable = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.calendarContainerRef = _t.first);
            }
        }, hostVars: 2, hostBindings: function AdaptDatetime2CalendarComponent_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵclassProp("a3t-calendar", true);
            }
        }, inputs: { testID: "testID", monthAndYearOnly: "monthAndYearOnly", initialDate: "initialDate", activeDate: "activeDate", filter: "filter", range: "range", disabled: "disabled", readonly: "readonly", hideControls: "hideControls", expandedControlsStyle: "expandedControlsStyle", state: "state" }, outputs: { daySelect: "daySelect" }, decls: 7, vars: 3, consts: [["class", "a3t-calendar--controls", 3, "a3t-calendar--controls_expanded", 4, "ngIf"], ["class", "a3t-calendar--table", 4, "ngIf"], [3, "initialDate", "yearsPage", "activeDate", "animationsSet", "calendarPlayers", "yearSelect", 4, "ngIf"], [1, "a3t-calendar--controls"], [4, "ngIf", "ngIfThen", "ngIfElse"], ["pickYear", ""], ["pickMonth", ""], [1, "a3t-calendar--controls-line"], ["type", "button", "aria-hidden", "true", "tabindex", "-1", 1, "a3t-calendar--controls-btn", 3, "disabled", "click"], [3, "adaptRadarDisableEventSending", "name", 4, "ngIf"], ["tabindex", "0", "role", "spinbutton", 1, "a3t-calendar--controls-info", 3, "keydown.arrowUp", "keydown.arrowRight", "keydown.arrowDown", "keydown.arrowLeft"], [3, "adaptTextSlide", "slideForward"], [3, "adaptRadarDisableEventSending", "name"], ["class", "a3t-calendar--controls-line", 4, "ngIf"], [1, "a3t-calendar--table"], ["daysTable", ""], ["aria-hidden", "true"], [4, "ngFor", "ngForOf"], ["calendarContainerRef", ""], ["colspan", "9", 1, "a3t-calendar--table-space-cell"], ["class", "a3t-calendar--table-edge-cell", "aria-hidden", "true", 4, "ngIf"], [1, "a3t-calendar--table-week-name"], ["aria-hidden", "true", 1, "a3t-calendar--table-edge-cell"], ["class", "a3t-calendar--table-edge-cell", "aria-hidden", "true", 3, "range", "other-month", 4, "ngIf"], ["role", "gridcell", 1, "a3t-calendar--table-day"], ["type", "button", 3, "disabled", "click", "keydown.arrowLeft", "keydown.arrowUp", "keydown.arrowRight", "keydown.arrowDown"], ["dayEl", ""], [3, "initialDate", "yearsPage", "activeDate", "animationsSet", "calendarPlayers", "yearSelect"]], template: function AdaptDatetime2CalendarComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵtext(0, "\n      ");
                i0__namespace.ɵɵtemplate(1, AdaptDatetime2CalendarComponent_div_1_Template, 12, 8, "div", 0);
                i0__namespace.ɵɵtext(2, "\n      ");
                i0__namespace.ɵɵtemplate(3, AdaptDatetime2CalendarComponent_table_3_Template, 27, 2, "table", 1);
                i0__namespace.ɵɵtext(4, "\n\n      ");
                i0__namespace.ɵɵtemplate(5, AdaptDatetime2CalendarComponent_adapt_datetime2_year_picker_5_Template, 2, 5, "adapt-datetime2-year-picker", 2);
                i0__namespace.ɵɵtext(6, "\n  ");
            }
            if (rf & 2) {
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("ngIf", !ctx.calendarUIState.hideControls);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", !ctx.monthAndYearOnly);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.monthAndYearOnly);
            }
        }, directives: [i3__namespace.NgIf, i1__namespace.AdaptTextSlideDirective, i1__namespace.AdaptIconComponent, i3__namespace.NgForOf, AdaptDatetime2YearPickerComponent], encapsulation: 2 });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptDatetime2CalendarComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-datetime2-calendar',
                        template: "\n      <div class=\"a3t-calendar--controls\"\n           *ngIf=\"!calendarUIState.hideControls\"\n           [class.a3t-calendar--controls_expanded]=\"calendarUIState.expanded\">\n          <ng-container *ngIf=\"!calendarUIState.expanded; then pickMonth; else pickYear\"></ng-container>\n          <ng-container *ngIf=\"calendarUIState.expanded; then pickMonth; else pickYear\"></ng-container>\n\n          <ng-template #pickYear>\n              <div class=\"a3t-calendar--controls-line\"\n                   [class.a3t-calendar--year-picker]=\"monthAndYearOnly\"\n                   attr.aria-label=\"{{defaultTexts.emptyYear}}\"\n              >\n                  <button type=\"button\"\n                          class=\"a3t-calendar--controls-btn\"\n                          aria-hidden=\"true\"\n                          tabindex=\"-1\"\n                          [attr.data-testid]=\"testID + '_prevYear'\"\n                          [disabled]=\"calendarUIState.disabled\"\n                          [class.disabled]=\"calendarUIState.disabled\"\n                          [class.readonly]=\"calendarUIState.readonly\"\n                          (click)=\"$event.stopPropagation(); calendarUIActions.prevYear()\">\n                      <adapt-icon [adaptRadarDisableEventSending]=\"true\" *ngIf=\"!isRtl\" [name]=\"'angle_left'\"></adapt-icon>\n                      <adapt-icon [adaptRadarDisableEventSending]=\"true\" *ngIf=\"isRtl\" [name]=\"'angle_right'\"></adapt-icon>\n                  </button>\n                  <div class=\"a3t-calendar--controls-info\"\n                       tabindex=\"0\"\n                       attr.aria-label=\"{{defaultTexts.emptyYear}}\"\n                       role=\"spinbutton\"\n                       [attr.aria-valuenow]=\"calendarUIState.date.format('YYYY')\"\n                       (keydown.arrowUp)=\"$event.preventDefault(); calendarUIActions.nextYear()\"\n                       (keydown.arrowRight)=\"$event.preventDefault(); calendarUIActions.nextYear()\"\n                       (keydown.arrowDown)=\"$event.preventDefault(); calendarUIActions.prevYear()\"\n                       (keydown.arrowLeft)=\"$event.preventDefault(); calendarUIActions.prevYear()\">\n                      <div [adaptTextSlide]=\"calendarUIState.date.format('YYYY')\"\n                           [slideForward]=\"animationDirectionForward\"></div>\n                  </div>\n                  <button type=\"button\"\n                          class=\"a3t-calendar--controls-btn\"\n                          aria-hidden=\"true\"\n                          tabindex=\"-1\"\n                          [attr.data-testid]=\"testID + '_nextYear'\"\n                          [disabled]=\"calendarUIState.disabled\"\n                          [class.disabled]=\"calendarUIState.disabled\"\n                          [class.readonly]=\"calendarUIState.readonly\"\n                          (click)=\"$event.stopPropagation(); calendarUIActions.nextYear()\">\n                      <adapt-icon [adaptRadarDisableEventSending]=\"true\" *ngIf=\"isRtl\" [name]=\"'angle_left'\"></adapt-icon>\n                      <adapt-icon [adaptRadarDisableEventSending]=\"true\" *ngIf=\"!isRtl\" [name]=\"'angle_right'\"></adapt-icon>\n                  </button>\n              </div>\n          </ng-template>\n          <ng-template #pickMonth>\n              <div class=\"a3t-calendar--controls-line\"\n                   attr.aria-label=\"{{defaultTexts.emptyMonth}}\"\n                   *ngIf=\"!monthAndYearOnly\">\n                  <button type=\"button\"\n                          class=\"a3t-calendar--controls-btn\"\n                          aria-hidden=\"true\"\n                          tabindex=\"-1\"\n                          [attr.data-testid]=\"testID + '_prevMonth'\"\n                          [disabled]=\"calendarUIState.disabled\"\n                          [class.disabled]=\"calendarUIState.disabled\"\n                          [class.readonly]=\"calendarUIState.readonly\"\n                          (click)=\"$event.stopPropagation(); calendarUIActions.prevMonth()\">\n                      <adapt-icon [adaptRadarDisableEventSending]=\"true\" *ngIf=\"!isRtl\" [name]=\"'angle_left'\"></adapt-icon>\n                      <adapt-icon [adaptRadarDisableEventSending]=\"true\" *ngIf=\"isRtl\" [name]=\"'angle_right'\"></adapt-icon>\n                  </button>\n                  <div class=\"a3t-calendar--controls-info\"\n                       tabindex=\"0\"\n                       attr.aria-label=\"{{defaultTexts.emptyMonth}}\"\n                       role=\"spinbutton\"\n                       [attr.aria-valuetext]=\"calendarUIState.date.format('MMMM')\"\n                       (keydown.arrowUp)=\"$event.preventDefault(); calendarUIActions.nextMonth()\"\n                       (keydown.arrowRight)=\"$event.preventDefault(); calendarUIActions.nextMonth()\"\n                       (keydown.arrowDown)=\"$event.preventDefault(); calendarUIActions.prevMonth()\"\n                       (keydown.arrowLeft)=\"$event.preventDefault(); calendarUIActions.prevMonth()\">\n                      <div [adaptTextSlide]=\"calendarUIState.date.format(calendarUIState.expanded ? 'MMMM' : 'MMM')\"\n                           [slideForward]=\"animationDirectionForward\"></div>\n                  </div>\n                  <button type=\"button\"\n                          class=\"a3t-calendar--controls-btn\"\n                          aria-hidden=\"true\"\n                          tabindex=\"-1\"\n                          [attr.data-testid]=\"testID + '_nextMonth'\"\n                          [disabled]=\"calendarUIState.disabled\"\n                          [class.disabled]=\"calendarUIState.disabled\"\n                          [class.readonly]=\"calendarUIState.readonly\"\n                          (click)=\"$event.stopPropagation(); calendarUIActions.nextMonth()\">\n                      <adapt-icon [adaptRadarDisableEventSending]=\"true\" *ngIf=\"isRtl\" [name]=\"'angle_left'\"></adapt-icon>\n                      <adapt-icon [adaptRadarDisableEventSending]=\"true\" *ngIf=\"!isRtl\" [name]=\"'angle_right'\"></adapt-icon>\n                  </button>\n              </div>\n          </ng-template>\n      </div>\n      <table class=\"a3t-calendar--table\" #daysTable *ngIf=\"!monthAndYearOnly\">\n          <thead aria-hidden=\"true\">\n          <tr>\n              <ng-container *ngFor=\"let dayOfWeek of calendar[0]; let first = first; let last = last\">\n                  <th class=\"a3t-calendar--table-edge-cell\" aria-hidden=\"true\" *ngIf=\"first\"></th>\n                  <th class=\"a3t-calendar--table-week-name\">\n                      {{dayOfWeek.date.format('dd')}}\n                  </th>\n                  <th class=\"a3t-calendar--table-edge-cell\" aria-hidden=\"true\" *ngIf=\"last\"></th>\n              </ng-container>\n          </tr>\n          </thead>\n          <tbody #calendarContainerRef>\n          <tr aria-hidden=\"true\">\n              <td colspan=\"9\" class=\"a3t-calendar--table-space-cell\"></td>\n          </tr>\n          <tr *ngFor=\"let week of calendar\">\n              <ng-container *ngFor=\"let day of week; let first = first; let last = last\">\n                  <td class=\"a3t-calendar--table-edge-cell\"\n                      aria-hidden=\"true\"\n                      *ngIf=\"first\"\n                      [class.range]=\"day.isInRange && !day.isRangeFrom\"\n                      [class.other-month]=\"day.isOtherMonth\"></td>\n                  <td class=\"a3t-calendar--table-day\"\n                      role=\"gridcell\"\n                      [class.range]=\"day.isInRange && !(day.isRangeFrom && day.isRangeTo)\"\n                      [class.range-from]=\"isRtl ? (day.isRangeTo && !day.isRangeFrom) : (day.isRangeFrom && !day.isRangeTo)\"\n                      [class.range-to]=\"isRtl ? (day.isRangeFrom && !day.isRangeTo) : (day.isRangeTo && !day.isRangeFrom)\"\n                      [class.other-month]=\"day.isOtherMonth\"\n                      [attr.aria-label]=\"day.date.format('LL')\"\n                      [attr.aria-disabled]=\"day.isDisabled || day.isOtherMonth\"\n                      [attr.aria-readonly]=\"day.isReadonly\"\n                      [attr.aria-hidden]=\"day.isDisabled || day.isOtherMonth\"\n                      [attr.aria-selected]=\"day.isSelected\">\n                      <button type=\"button\"\n                              #dayEl\n                              (click)=\"onDayClick(day.date)\"\n                              [class.active]=\"day.isSelected\"\n                              [class.today]=\"day.isToday\"\n                              [class.range-edge]=\"day.isRangeFrom || day.isRangeTo\"\n                              [class.disabled]=\"day.isDisabled || day.isOtherMonth\"\n                              [class.readonly]=\"day.isReadonly\"\n                              [disabled]=\"day.isDisabled || day.isOtherMonth\"\n                              [attr.data-testid]=\"testID + '_day_' + day.date.date()\"\n                              (keydown.arrowLeft)=\"onDayFocusChange($event, dayEl, 'l')\"\n                              (keydown.arrowUp)=\"onDayFocusChange($event, dayEl, 't')\"\n                              (keydown.arrowRight)=\"onDayFocusChange($event, dayEl, 'r')\"\n                              (keydown.arrowDown)=\"onDayFocusChange($event, dayEl, 'b')\">{{day.date.date()}}</button>\n                  </td>\n                  <td class=\"a3t-calendar--table-edge-cell\"\n                      aria-hidden=\"true\"\n                      *ngIf=\"last\"\n                      [class.range]=\"day.isInRange && !day.isRangeTo\"\n                      [class.other-month]=\"day.isOtherMonth\"></td>\n              </ng-container>\n          </tr>\n          <tr aria-hidden=\"true\">\n              <td colspan=\"9\" class=\"a3t-calendar--table-space-cell\"></td>\n          </tr>\n          </tbody>\n      </table>\n\n      <adapt-datetime2-year-picker *ngIf=\"monthAndYearOnly\"\n                                   [initialDate]=\"initialDate\"\n                                   [yearsPage]=\"yearsPage\"\n                                   [activeDate]=\"activeDate\"\n                                   (yearSelect)=\"yearSelect($event)\"\n                                   [animationsSet]=\"_animationsSet\"\n                                   [calendarPlayers]=\"_calendarPlayers\">\n      </adapt-datetime2-year-picker>\n  ",
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: {
                            '[class.a3t-calendar]': 'true'
                        }
                    }]
            }], function () {
            return [{ type: i1__namespace$1.AnimationBuilder }, { type: i2__namespace$1.Directionality }, { type: AdaptDatetime2Component, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [i0.forwardRef(function () { return AdaptDatetime2Component; })]
                        }] }, { type: AdaptDatetimeRange2Component, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [i0.forwardRef(function () { return AdaptDatetimeRange2Component; })]
                        }] }, { type: i0__namespace.ChangeDetectorRef }, { type: i1__namespace.AdaptTranslateService }];
        }, { testID: [{
                    type: i0.Input
                }], monthAndYearOnly: [{
                    type: i0.Input
                }], daySelect: [{
                    type: i0.Output
                }], daysTable: [{
                    type: i0.ViewChild,
                    args: ['daysTable']
                }], calendarContainerRef: [{
                    type: i0.ViewChild,
                    args: ['calendarContainerRef']
                }], initialDate: [{
                    type: i0.Input
                }], activeDate: [{
                    type: i0.Input
                }], filter: [{
                    type: i0.Input
                }], range: [{
                    type: i0.Input
                }], disabled: [{
                    type: i0.Input
                }], readonly: [{
                    type: i0.Input
                }], hideControls: [{
                    type: i0.Input
                }], expandedControlsStyle: [{
                    type: i0.Input
                }], state: [{
                    type: i0.Input
                }] });
    })();
    var AdaptDatetime2ClockComponent = /** @class */ (function () {
        function AdaptDatetime2ClockComponent(_renderer, _animationBuilder, ts) {
            this._renderer = _renderer;
            this._animationBuilder = _animationBuilder;
            this.ts = ts;
            this._isPM = false;
            this._activeFace = exports.Clock2FaceUnit.Hours;
            this._hasMeridiem = false;
            this.defaultTexts = {};
            this.seconds = false;
            this.autoFaceSwitch = true;
            this.disabled = false;
            this.readonly = false;
            this.timeSelect = new i0.EventEmitter();
            // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
            this.clockFaceChange = new i0.EventEmitter();
            // Private fields
            this._innerFaceDNDTolerance = .65;
            this._faceSize = 220;
            // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
            this._hoursFaceTicks24 = [
                Array(12)
                    .fill(0)
                    .map(function (x, i) {
                    return {
                        value: i || 12,
                        uiValue: (i || 12).toString()
                    };
                }),
                Array(12)
                    .fill(0)
                    .map(function (x, i) {
                    return {
                        value: i ? i + 12 : 0,
                        uiValue: (i ? i + 12 : 0).toString()
                    };
                })
            ];
            this._hoursFaceTicks12 = [
                Array(12)
                    .fill(0)
                    .map(function (x, i) {
                    return {
                        value: i || 12,
                        uiValue: (i || 12).toString()
                    };
                })
            ];
            // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
            // Private view settings
            this._hoursFace = {
                ticks: this._hoursFaceTicks24
            };
            // UI Fields
            // eslint-disable-next-line @typescript-eslint/member-ordering
            this.uiFace = this._hoursFace;
            // Inputs
            this._minutesFace = {
                ticks: [
                    Array(60)
                        .fill(0)
                        .map(function (x, i) {
                        return {
                            value: i,
                            uiValue: (i % 5 ? '' : i).toString()
                        };
                    })
                ]
            };
            this._secondsFace = {
                ticks: [
                    Array(60)
                        .fill(0)
                        .map(function (x, i) {
                        return {
                            value: i,
                            uiValue: (i % 5 ? '' : i).toString()
                        };
                    })
                ]
            };
            this._animationReady = false;
            this._animationsSet = {
                out: [
                    i1$1.style({
                        transform: 'scale(1)',
                        opacity: 1
                    }),
                    i1$1.animate('100ms', i1$1.style({
                        transform: 'scale(1.1)',
                        opacity: 0
                    }))
                ],
                in: [
                    i1$1.style({
                        transform: 'scale(.9)',
                        opacity: 0
                    }),
                    i1$1.animate('100ms', i1$1.style({
                        transform: 'scale(1)',
                        opacity: 1
                    }))
                ]
            };
            this._animationPlayers = {
                out: null,
                in: null
            };
            this.setDefaultTexts(ts.getCurrentLanguage());
        }
        Object.defineProperty(AdaptDatetime2ClockComponent.prototype, "activeFace", {
            // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
            // Outputs
            set: function (nextFace) {
                if (nextFace === undefined) {
                    return;
                }
                this.gotoNextFace(nextFace);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2ClockComponent.prototype, "hasMeridiem", {
            // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
            set: function (nextMeridiem) {
                this._hasMeridiem = !!nextMeridiem;
                if (this._hasMeridiem) {
                    this._hoursFace.ticks = this._hoursFaceTicks12;
                }
                else {
                    this._hoursFace.ticks = this._hoursFaceTicks24;
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2ClockComponent.prototype, "activeTime", {
            set: function (nextActiveTime) {
                if (!nextActiveTime) {
                    return;
                }
                if (this._hasMeridiem) {
                    this._isPM = nextActiveTime[0] >= 12;
                    var isMidnight = nextActiveTime[0] === 12;
                    this._hoursFace.active = (nextActiveTime[0] - (this._isPM && !isMidnight ? 12 : 0)) || 12;
                }
                else {
                    this._hoursFace.active = nextActiveTime[0];
                }
                this._minutesFace.active = nextActiveTime[1];
                this._secondsFace.active = nextActiveTime[2];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2ClockComponent.prototype, "_model", {
            get: function () {
                var hours = this._hoursFace.active || 0;
                if (this._hasMeridiem) {
                    if (this._isPM) {
                        hours += (hours === 12 ? 0 : 12);
                    }
                    else {
                        hours = (hours === 12 ? 0 : hours);
                    }
                }
                return [
                    hours,
                    this._minutesFace.active || 0,
                    this._secondsFace.active || 0
                ];
            },
            enumerable: false,
            configurable: true
        });
        AdaptDatetime2ClockComponent.prototype.ngOnInit = function () {
            this._initDragNDrop();
            this.texts = Object.assign(Object.assign({}, this.defaultTexts), this.texts);
        };
        AdaptDatetime2ClockComponent.prototype.ngAfterViewInit = function () {
            this._animationPlayers.out = this._animationBuilder.build(this._animationsSet.out)
                .create(this.clockFaceContainerRef.nativeElement);
            this._animationPlayers.in = this._animationBuilder.build(this._animationsSet.in)
                .create(this.clockFaceContainerRef.nativeElement);
            this._animationReady = true;
        };
        AdaptDatetime2ClockComponent.prototype.setDefaultTexts = function (translation) {
            this.defaultTexts.hhBtn = translation['adapt.datetime.hh'];
            this.defaultTexts.mmBtn = translation['adapt.datetime.mm'];
            this.defaultTexts.ssBtn = translation['adapt.datetime.ss'];
            this.defaultTexts.amBtn = translation['adapt.datetime.am'];
            this.defaultTexts.pmBtn = translation['adapt.datetime.pm'];
        };
        /**
         * Return current model state
         */
        AdaptDatetime2ClockComponent.prototype.ngOnDestroy = function () {
            this._dndSubscription.unsubscribe();
        };
        /**
         * Init drag and drop
         */
        /**
         * Change time meridiem
         */
        AdaptDatetime2ClockComponent.prototype.changeMeridiem = function () {
            this._isPM = !this._isPM;
            this.timeSelect.emit(this._model);
        };
        /**
         * Change time unit face
         */
        AdaptDatetime2ClockComponent.prototype.gotoNextFace = function (nextFace) {
            var _this = this;
            if (nextFace === this._activeFace) {
                return;
            }
            if (nextFace === undefined) {
                nextFace = (this._activeFace + 1) % 3;
            }
            this._animateClockFaceChange((function () {
                switch (nextFace) {
                    case exports.Clock2FaceUnit.Hours: {
                        _this.uiFace = _this._hoursFace;
                        _this._activeFace = exports.Clock2FaceUnit.Hours;
                        break;
                    }
                    case exports.Clock2FaceUnit.Minutes: {
                        _this.uiFace = _this._minutesFace;
                        _this._activeFace = exports.Clock2FaceUnit.Minutes;
                        break;
                    }
                    case exports.Clock2FaceUnit.Seconds: {
                        if (_this.seconds) {
                            _this.uiFace = _this._secondsFace;
                            _this._activeFace = exports.Clock2FaceUnit.Seconds;
                        }
                        else {
                            _this.uiFace = _this._hoursFace;
                            _this._activeFace = exports.Clock2FaceUnit.Hours;
                        }
                        break;
                    }
                    default: {
                        _this.uiFace = _this._hoursFace;
                        _this._activeFace = exports.Clock2FaceUnit.Hours;
                        break;
                    }
                }
                _this.clockFaceChange.emit(_this._activeFace);
            }).bind(this));
        };
        AdaptDatetime2ClockComponent.prototype._initDragNDrop = function () {
            var _this = this;
            this._renderer.setStyle(this.dndArea.nativeElement, 'width', this._faceSize + "px");
            this._renderer.setStyle(this.dndArea.nativeElement, 'height', this._faceSize + "px");
            var centerX;
            var centerY;
            var dragStart = function () {
                var elRect = _this.dndArea.nativeElement.getBoundingClientRect();
                centerX = elRect.left + elRect.width / 2;
                centerY = elRect.top + elRect.height / 2;
            };
            var dragEnd = function () {
                if (_this.autoFaceSwitch) {
                    if (!(_this.seconds ? _this._activeFace === exports.Clock2FaceUnit.Seconds : _this._activeFace === exports.Clock2FaceUnit.Minutes)) {
                        _this.gotoNextFace();
                    }
                }
            };
            this._dndSubscription = i1.GetDragNDrop(this.dndArea.nativeElement, null, null, dragStart, dragEnd)
                .pipe(operators.map(function (moveCoords) {
                if (_this.disabled || _this.readonly) {
                    return;
                }
                var angle = Math.round(i1.GetAngle(centerX, centerY, moveCoords.x, moveCoords.y) * 100) / 100;
                var distance = Math.round(i1.GetDistance(centerX, centerY, moveCoords.x, moveCoords.y) * 100) / 100;
                var face = (_this.uiFace.ticks.length === 1) || (distance > _this._faceSize / 2 * _this._innerFaceDNDTolerance) ?
                    _this.uiFace.ticks[0] :
                    _this.uiFace.ticks[1];
                var ticksCount = face.length;
                _this.uiFace.active = face[Math.round(angle * ticksCount / 360) % ticksCount].value;
                return face[Math.round(angle * ticksCount / 360) % ticksCount];
            }), operators.distinctUntilChanged())
                .subscribe(function () {
                _this.timeSelect.emit(_this._model);
            });
        };
        AdaptDatetime2ClockComponent.prototype._animateClockFaceChange = function (changeValFn) {
            var _this = this;
            if (this._animationReady) {
                this._animationPlayers.out.reset();
                this._animationPlayers.in.reset();
                this._animationPlayers.out.onDone(function () {
                    changeValFn();
                    _this._animationPlayers.in.play();
                });
                this._animationPlayers.out.play();
            }
            else {
                changeValFn();
            }
        };
        return AdaptDatetime2ClockComponent;
    }());
    AdaptDatetime2ClockComponent.ɵfac = function AdaptDatetime2ClockComponent_Factory(t) { return new (t || AdaptDatetime2ClockComponent)(i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(i1__namespace$1.AnimationBuilder), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService)); };
    AdaptDatetime2ClockComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptDatetime2ClockComponent, selectors: [["adapt-datetime2-clock"]], viewQuery: function AdaptDatetime2ClockComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c2$e, 7);
                i0__namespace.ɵɵviewQuery(_c3$a, 7);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.dndArea = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.clockFaceContainerRef = _t.first);
            }
        }, hostVars: 5, hostBindings: function AdaptDatetime2ClockComponent_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵattribute("aria-hidden", true);
                i0__namespace.ɵɵclassProp("a3t-clock", true)("a3t-clock_disabled", ctx.disabled);
            }
        }, inputs: { testID: "testID", seconds: "seconds", autoFaceSwitch: "autoFaceSwitch", disabled: "disabled", readonly: "readonly", texts: "texts", activeFace: "activeFace", hasMeridiem: "hasMeridiem", activeTime: "activeTime" }, outputs: { timeSelect: "timeSelect", clockFaceChange: "clockFaceChange" }, decls: 29, vars: 10, consts: [[1, "a3t-clock--controls"], ["type", "button", "tabindex", "-1", 1, "a3t-clock--control-btn", "m-end-2", 3, "click"], [1, "a3t-clock--control-item"], [1, "a3t-clock--control-separator"], [4, "ngIf"], ["type", "button", "class", "a3t-clock--control-btn", "tabindex", "-1", 3, "click", 4, "ngIf"], [1, "a3t-clock--faces"], ["dndArea", ""], [2, "width", "100%", "height", "100%"], ["clockFaceContainerRef", ""], ["class", "a3t-clock--face", 4, "ngFor", "ngForOf"], ["class", "a3t-clock--control-item", 3, "active", 4, "ngIf"], ["type", "button", "tabindex", "-1", 1, "a3t-clock--control-btn", 3, "click"], [1, "a3t-clock--face"], ["class", "a3t-clock--tick", 3, "a3t-clock--tick_active", "readonly", "transform", 4, "ngFor", "ngForOf"], [1, "a3t-clock--tick"], [1, "a3t-clock--tick-label"], [1, "a3t-clock--tick-arrow"]], template: function AdaptDatetime2ClockComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵtext(0, "\n      ");
                i0__namespace.ɵɵelementStart(1, "div", 0);
                i0__namespace.ɵɵtext(2, "\n          ");
                i0__namespace.ɵɵelementStart(3, "button", 1);
                i0__namespace.ɵɵlistener("click", function AdaptDatetime2ClockComponent_Template_button_click_3_listener() { return ctx.gotoNextFace(); });
                i0__namespace.ɵɵtext(4, "\n              ");
                i0__namespace.ɵɵelementStart(5, "span", 2);
                i0__namespace.ɵɵtext(6);
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(7, "\n              ");
                i0__namespace.ɵɵelement(8, "span", 3);
                i0__namespace.ɵɵtext(9, "\n              ");
                i0__namespace.ɵɵelementStart(10, "span", 2);
                i0__namespace.ɵɵtext(11);
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(12, "\n              ");
                i0__namespace.ɵɵtemplate(13, AdaptDatetime2ClockComponent_ng_container_13_Template, 6, 1, "ng-container", 4);
                i0__namespace.ɵɵtext(14, "\n          ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(15, "\n          ");
                i0__namespace.ɵɵtemplate(16, AdaptDatetime2ClockComponent_button_16_Template, 10, 7, "button", 5);
                i0__namespace.ɵɵtext(17, "\n      ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(18, "\n      ");
                i0__namespace.ɵɵelementStart(19, "div", 6, 7);
                i0__namespace.ɵɵtext(21, "\n          ");
                i0__namespace.ɵɵelementStart(22, "div", 8, 9);
                i0__namespace.ɵɵtext(24, "\n              ");
                i0__namespace.ɵɵtemplate(25, AdaptDatetime2ClockComponent_div_25_Template, 4, 1, "div", 10);
                i0__namespace.ɵɵtext(26, "\n          ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(27, "\n      ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(28, "\n  ");
            }
            if (rf & 2) {
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵattribute("data-testid", ctx.testID + "_hhmmss");
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵclassProp("active", ctx._activeFace === 0);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵtextInterpolate(ctx.texts.hhBtn);
                i0__namespace.ɵɵadvance(4);
                i0__namespace.ɵɵclassProp("active", ctx._activeFace === 1);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵtextInterpolate(ctx.texts.mmBtn);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.seconds);
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngIf", ctx._hasMeridiem);
                i0__namespace.ɵɵadvance(9);
                i0__namespace.ɵɵproperty("ngForOf", ctx.uiFace.ticks);
            }
        }, directives: [i3__namespace.NgIf, i3__namespace.NgForOf], encapsulation: 2 });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptDatetime2ClockComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-datetime2-clock',
                        template: "\n      <div class=\"a3t-clock--controls\">\n          <button type=\"button\"\n                  class=\"a3t-clock--control-btn m-end-2\"\n                  [attr.data-testid]=\"testID + '_hhmmss'\"\n                  tabindex=\"-1\" (click)=\"gotoNextFace()\">\n              <span class=\"a3t-clock--control-item\" [class.active]=\"_activeFace === 0\">{{texts.hhBtn}}</span>\n              <span class=\"a3t-clock--control-separator\"></span>\n              <span class=\"a3t-clock--control-item\" [class.active]=\"_activeFace === 1\">{{texts.mmBtn}}</span>\n              <ng-container *ngIf=\"seconds\">\n                  <span class=\"a3t-clock--control-separator\"></span>\n                  <span class=\"a3t-clock--control-item\" [class.active]=\"_activeFace === 2\" *ngIf=\"seconds\">{{texts.ssBtn}}</span>\n              </ng-container>\n          </button>\n          <button type=\"button\"\n                  class=\"a3t-clock--control-btn\"\n                  [attr.data-testid]=\"testID + '_ampm'\"\n                  tabindex=\"-1\" (click)=\"changeMeridiem()\" *ngIf=\"_hasMeridiem\">\n              <span class=\"a3t-clock--control-item\" [class.active]=\"!_isPM\">{{texts.amBtn}}</span>\n              <span class=\"a3t-clock--control-separator\"></span>\n              <span class=\"a3t-clock--control-item\" [class.active]=\"_isPM\">{{texts.pmBtn}}</span>\n          </button>\n      </div>\n      <div class=\"a3t-clock--faces\" #dndArea>\n          <div #clockFaceContainerRef style=\"width: 100%; height: 100%\">\n              <div class=\"a3t-clock--face\" *ngFor=\"let ticksSet of uiFace.ticks\">\n                  <div class=\"a3t-clock--tick\"\n                       *ngFor=\"let label of ticksSet; let index = index\"\n                       [class.a3t-clock--tick_active]=\"label.value === uiFace.active\"\n                       [class.readonly]=\"readonly\"\n                       [attr.data-testid]=\"testID + '_tick_' + index / ticksSet.length * 360\"\n                       [style.transform]=\"'rotate(' + (index / ticksSet.length * 360) + 'deg)'\">\n                      <div class=\"a3t-clock--tick-label\" [style.transform]=\"'rotate(' + (- index / ticksSet.length * 360) + 'deg)'\">\n                          {{label.uiValue}}\n                      </div>\n                      <div class=\"a3t-clock--tick-arrow\"></div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  ",
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: {
                            '[class.a3t-clock]': 'true',
                            '[class.a3t-clock_disabled]': 'disabled',
                            '[attr.aria-hidden]': 'true',
                        }
                    }]
            }], function () { return [{ type: i0__namespace.Renderer2 }, { type: i1__namespace$1.AnimationBuilder }, { type: i1__namespace.AdaptTranslateService }]; }, { testID: [{
                    type: i0.Input
                }], seconds: [{
                    type: i0.Input
                }], autoFaceSwitch: [{
                    type: i0.Input
                }], disabled: [{
                    type: i0.Input
                }], readonly: [{
                    type: i0.Input
                }], texts: [{
                    type: i0.Input
                }], timeSelect: [{
                    type: i0.Output
                }], clockFaceChange: [{
                    type: i0.Output
                }], dndArea: [{
                    type: i0.ViewChild,
                    args: ['dndArea', { static: true }]
                }], clockFaceContainerRef: [{
                    type: i0.ViewChild,
                    args: ['clockFaceContainerRef', { static: true }]
                }], activeFace: [{
                    type: i0.Input
                }], hasMeridiem: [{
                    type: i0.Input
                }], activeTime: [{
                    type: i0.Input
                }] });
    })();
    var AdaptDatetime2PickerComponent = /** @class */ (function () {
        function AdaptDatetime2PickerComponent(ts, _ngZone, _changeDetectorRef) {
            this.ts = ts;
            this._ngZone = _ngZone;
            this._changeDetectorRef = _changeDetectorRef;
            this.monthMode = false;
            this.activeFaceVariants = exports.Clock2FaceUnit;
            this.defaultTexts = {};
            this.dateFormat = 'LL';
            this.timeFormat = 'LT';
            this.timePicker = false;
            this.timeOnly = false;
            this.monthAndYearOnly = false;
            this.monthFirst = false;
            this.timeSeconds = false;
            this.activeFace = exports.Clock2FaceUnit.Hours;
            this.hideDatePickerSummary = false;
            this.valueChange = new i0.EventEmitter();
            this.timeModeChange = new i0.EventEmitter();
            this.clockFaceChange = new i0.EventEmitter();
            this._timeMode = false;
            this._model = {
                year: 0,
                month: 0,
                day: 0,
                hour: 0,
                minute: 0,
                second: 0
            };
            this._localeHasMeridiem = IsLocaleHasMeridiem(moment__default["default"].locale());
            this.setDefaultTexts(ts.getCurrentLanguage());
        }
        Object.defineProperty(AdaptDatetime2PickerComponent.prototype, "timeMode", {
            get: function () {
                return this.timePicker && this._timeMode || this.timeOnly;
            },
            set: function (v) {
                if (!this.timePicker) {
                    return;
                }
                if (v !== undefined) {
                    this._timeMode = !!v;
                    this.timeModeChange.emit(!!v);
                }
                i1.SafeCdr.detectChanges(this._changeDetectorRef);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2PickerComponent.prototype, "activeValue", {
            set: function (v) {
                if (v && v.isValid()) {
                    this._model.year = v.year();
                    this._model.month = v.month();
                    this._model.day = v.date();
                    this._model.hour = v.hour();
                    this._model.minute = v.minute();
                    this._model.second = this.timeSeconds ? v.second() : 0;
                    this.activeDate = v.clone();
                }
                else {
                    this.activeDate = null;
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2PickerComponent.prototype, "clockState", {
            get: function () {
                return [
                    this._model.hour,
                    this._model.minute,
                    this._model.second,
                ];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2PickerComponent.prototype, "hasMeridiem", {
            get: function () {
                var oddTime = false;
                if (this.timeFormat !== 'LT') {
                    oddTime = !!this.timeFormat.match(/a/i);
                }
                else {
                    oddTime = this._localeHasMeridiem;
                }
                return oddTime;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2PickerComponent.prototype, "dateSummary", {
            get: function () {
                return this.activeDate && this.activeDate.isValid() ?
                    this.activeDate.format(this.dateFormat) : (this.emptyDateHeading || this.defaultTexts.emptyDate);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2PickerComponent.prototype, "yearSummary", {
            get: function () {
                return this.activeDate && this.activeDate.isValid() ?
                    this.activeDate.format('YYYY') : (this.emptyDateHeading || this.defaultTexts.emptyYear);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2PickerComponent.prototype, "monthSummary", {
            get: function () {
                return this.activeDate && this.activeDate.isValid() ?
                    this.activeDate.format('MMMM') : this.emptyMonthHeading;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptDatetime2PickerComponent.prototype, "timeSummary", {
            get: function () {
                this.emptyTimeHeading = this.emptyTimeHeading || this.defaultTexts.emptyTime;
                return this.activeDate && this.activeDate.isValid() ? {
                    hh: ('0' + this.activeDate.format(this.hasMeridiem ? 'h' : 'H')).substr(-2),
                    mm: this.activeDate.format('mm'),
                    ss: this.activeDate.format('ss'),
                    a: this.activeDate.format('A')
                } : false;
            },
            enumerable: false,
            configurable: true
        });
        AdaptDatetime2PickerComponent.prototype.ngOnInit = function () {
            var initVal = this.activeDate ? this.activeDate :
                this.initialValue && this.initialValue.isValid() ? this.initialValue : moment__default["default"]();
            if (!this.testID) {
                this.testID = "dt-" + AdaptDatetime2PickerComponent.DT_ID++;
            }
            this._model.year = initVal.year();
            this._model.month = initVal.month();
            this._model.day = initVal.date();
            this._model.hour = initVal.hour();
            this._model.minute = initVal.minute();
            this._model.second = this.timeSeconds ? initVal.second() : 0;
            this.monthMode = this.monthFirst;
        };
        AdaptDatetime2PickerComponent.prototype.setDefaultTexts = function (translation) {
            this.defaultTexts.emptyTime = translation['adapt.datetime.emptyTime'];
            this.defaultTexts.emptyDate = translation['adapt.datetime.emptyDate'];
            this.defaultTexts.emptyYear = translation['adapt.datetime.emptyYear'];
            this.defaultTexts.timeSeparator = translation['adapt.datetime.timeSeparator'];
            this.defaultTexts.hours = translation['adapt.datetime.hours'];
            this.defaultTexts.minutes = translation['adapt.datetime.minutes'];
            this.defaultTexts.seconds = translation['adapt.datetime.seconds'];
            this.defaultTexts.meridiem = translation['adapt.datetime.meridiem'];
            this.defaultTexts.month = translation['adapt.datetime.month'];
            this.defaultTexts.amBtn = translation['adapt.datetime.am'];
            this.defaultTexts.pmBtn = translation['adapt.datetime.pm'];
        };
        AdaptDatetime2PickerComponent.prototype.selectDate = function (v) {
            if (!this.readonly) {
                this._model.year = v.year();
                if (!this.monthAndYearOnly) {
                    this._model.month = v.month();
                    this._model.day = v.date();
                }
                this.activeDate = v.clone();
                this.valueChange.emit(moment__default["default"](this._model));
            }
        };
        AdaptDatetime2PickerComponent.prototype.selectTime = function (v) {
            this._model.hour = v[0];
            this._model.minute = v[1];
            this._model.second = v[2];
            this.valueChange.emit(moment__default["default"](this._model));
        };
        AdaptDatetime2PickerComponent.prototype.selectMonth = function (v) {
            this._model.month = v.month();
            this.activeDate = v.clone();
            this.valueChange.emit(moment__default["default"](this._model));
        };
        AdaptDatetime2PickerComponent.prototype.setCurrentDate = function () {
            var _this = this;
            this.activeDate = moment__default["default"]();
            this._ngZone.onStable
                .pipe(operators.take(1))
                .subscribe(function () {
                _this.hoursField.nativeElement.focus();
            });
        };
        AdaptDatetime2PickerComponent.prototype.changeMeridiem = function () {
            this._model.hour = (this._model.hour + 12) % 24;
            this.valueChange.emit(moment__default["default"](this._model));
        };
        AdaptDatetime2PickerComponent.prototype.timeUnitKeydown = function (event, unit) {
            var keycode = i1.getEventKeyCode(event);
            var action;
            switch (keycode) {
                case keycodes.UP_ARROW: {
                    event.preventDefault();
                    action = '+';
                    break;
                }
                case keycodes.DOWN_ARROW: {
                    event.preventDefault();
                    action = '-';
                    break;
                }
            }
            if (action) {
                switch (unit) {
                    case 'h': {
                        if (this.hasMeridiem) {
                            this._model.hour = action === '+' ?
                                this._model.hour === 11 ? 0 : this._model.hour === 23 ? 12 : this._model.hour + 1 :
                                this._model.hour === 0 ? 11 : this._model.hour === 12 ? 23 : this._model.hour - 1;
                        }
                        else {
                            this._model.hour = action === '+' ?
                                (this._model.hour + 1) % 24 :
                                ((this._model.hour - 1) < 0 ? 23 : this._model.hour - 1);
                        }
                        break;
                    }
                    case 'm': {
                        this._model.minute = action === '+' ?
                            (this._model.minute + 1) % 60 :
                            ((this._model.minute - 1) < 0 ? 59 : this._model.minute - 1);
                        break;
                    }
                    case 's': {
                        this._model.second = action === '+' ?
                            (this._model.second + 1) % 60 :
                            ((this._model.second - 1) < 0 ? 59 : this._model.second - 1);
                        break;
                    }
                }
                this.valueChange.emit(moment__default["default"](this._model));
            }
        };
        AdaptDatetime2PickerComponent.prototype.timeUnitInput = function (event, unit) {
            var value = event.target.value;
            var parsedValue = parseInt(value, 10);
            var parsedValueIsNumber = Number.isInteger(parsedValue);
            switch (unit) {
                case 'h': {
                    this._model.hour = parsedValueIsNumber ? parsedValue % (this.hasMeridiem ? 12 : 24) : 0;
                    break;
                }
                case 'm': {
                    this._model.minute = parsedValueIsNumber ? parsedValue % 60 : 0;
                    break;
                }
                case 's': {
                    this._model.second = parsedValueIsNumber ? parsedValue % 60 : 0;
                    break;
                }
            }
            this.valueChange.emit(moment__default["default"](this._model));
        };
        return AdaptDatetime2PickerComponent;
    }());
    // Locale time format
    AdaptDatetime2PickerComponent.DT_ID = 1;
    AdaptDatetime2PickerComponent.ɵfac = function AdaptDatetime2PickerComponent_Factory(t) { return new (t || AdaptDatetime2PickerComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i0__namespace.NgZone), i0__namespace.ɵɵdirectiveInject(i0__namespace.ChangeDetectorRef)); };
    AdaptDatetime2PickerComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptDatetime2PickerComponent, selectors: [["adapt-datetime2-picker"]], viewQuery: function AdaptDatetime2PickerComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c4$7, 5);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.hoursField = _t.first);
            }
        }, inputs: { dateRange: "dateRange", dateFormat: "dateFormat", dateFilter: "dateFilter", timeFormat: "timeFormat", timePicker: "timePicker", timeOnly: "timeOnly", monthAndYearOnly: "monthAndYearOnly", monthFirst: "monthFirst", timeSeconds: "timeSeconds", activeFace: "activeFace", initialValue: "initialValue", disabled: "disabled", readonly: "readonly", hideDatePickerSummary: "hideDatePickerSummary", preventExpandedDateControls: "preventExpandedDateControls", emptyDateHeading: "emptyDateHeading", emptyTimeHeading: "emptyTimeHeading", emptyMonthHeading: "emptyMonthHeading", clockHeadings: "clockHeadings", testID: "testID", timeMode: "timeMode", activeValue: "activeValue" }, outputs: { valueChange: "valueChange", timeModeChange: "timeModeChange", clockFaceChange: "clockFaceChange" }, decls: 10, vars: 5, consts: [[1, "a3t-datetime"], ["class", "a3t-datetime--date-picker", 4, "ngIf"], ["class", "a3t-datetime--time-picker", 4, "ngIf"], ["class", "a3t-datetime--time-picker a3t-datetime--year-picker", 4, "ngIf"], [1, "a3t-datetime--date-picker"], ["class", "a3t-datetime--date-picker-summary", 4, "ngIf"], ["class", "a3t-datetime--date-picker-summary a3t-datetime--year-picker-summary", 4, "ngIf"], ["class", "a3t-datetime--date-picker-wrapper", 4, "ngIf"], [1, "a3t-datetime--date-picker-summary"], [1, "mx-2", 3, "adaptRadarDisableEventSending", "name"], ["type", "button", 3, "click"], [1, "a3t-datetime--date-picker-summary", "a3t-datetime--year-picker-summary"], [1, "a3t-datetime--date-picker-wrapper"], [3, "expandedControlsStyle", "initialDate", "activeDate", "monthAndYearOnly", "range", "filter", "disabled", "readonly", "testID", "daySelect"], [1, "a3t-datetime--time-picker"], [1, "a3t-datetime--time-picker-summary"], [1, "a3t-datetime--time-picker-summary-info"], [1, "a3t-datetime--time-picker-summary-input-wrapper"], [4, "ngIf"], ["type", "button", "class", "a3t-datetime--time-picker-summary-toggle", "aria-hidden", "true", "tabindex", "-1", 3, "rotation-180", "click", 4, "ngIf"], ["class", "a3t-datetime--time-picker-wrapper", 4, "ngIf"], ["type", "text", "role", "spinbutton", 1, "a3t-datetime--time-picker-summary-input", "a3t-datetime--time-picker-summary-input-field", 3, "value", "focus", "input", "keydown"], ["hoursField", ""], ["type", "button", "role", "spinbutton", 1, "a3t-datetime--time-picker-summary-input", "mx-1", 3, "value", "click", "keydown.arrowUp", "keydown.arrowDown"], ["tabindex", "0", 1, "a3t-datetime--time-picker-summary-input", 3, "focus"], ["type", "button", "aria-hidden", "true", "tabindex", "-1", 1, "a3t-datetime--time-picker-summary-toggle", 3, "click"], [1, "mr-2", 3, "adaptRadarDisableEventSending", "name"], [1, "a3t-datetime--time-picker-wrapper"], [3, "activeTime", "activeFace", "seconds", "hasMeridiem", "disabled", "readonly", "texts", "testID", "timeSelect", "clockFaceChange"], [1, "a3t-datetime--time-picker", "a3t-datetime--year-picker"], ["tabindex", "0", "role", "textbox", 1, "a3t-datetime--time-picker-summary-input"], [1, "ml-1", "mr-1", 3, "adaptRadarDisableEventSending", "name"], ["class", "a3t-datetime--month-picker-wrapper", 4, "ngIf"], [1, "a3t-datetime--month-picker-wrapper"], [3, "initialDate", "activeDate", "selectMonth"]], template: function AdaptDatetime2PickerComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵtext(0, "\n      ");
                i0__namespace.ɵɵelementStart(1, "div", 0);
                i0__namespace.ɵɵtext(2, "\n          ");
                i0__namespace.ɵɵtemplate(3, AdaptDatetime2PickerComponent_div_3_Template, 8, 3, "div", 1);
                i0__namespace.ɵɵtext(4, "\n\n          ");
                i0__namespace.ɵɵtemplate(5, AdaptDatetime2PickerComponent_div_5_Template, 21, 8, "div", 2);
                i0__namespace.ɵɵtext(6, "\n\n          ");
                i0__namespace.ɵɵtemplate(7, AdaptDatetime2PickerComponent_div_7_Template, 21, 10, "div", 3);
                i0__namespace.ɵɵtext(8, "\n      ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(9, "\n  ");
            }
            if (rf & 2) {
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵclassProp("a3t-datetime_compact", ctx.hideDatePickerSummary);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", !ctx.timeOnly);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.timePicker);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.monthAndYearOnly);
            }
        }, directives: [i3__namespace.NgIf, i1__namespace.AdaptIconComponent, AdaptDatetime2CalendarComponent, i1__namespace.AdaptDragonInputHandlerDirective, AdaptDatetime2ClockComponent, AdaptDatetime2MonthPickerComponent], encapsulation: 2, data: { animation: [
                i1$1.trigger('heightAnimation', [
                    i1$1.transition('void => *', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.height, {
                            params: {
                                from: '0',
                                to: '*'
                            }
                        })
                    ]),
                    i1$1.transition('* => void', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.height, {
                            params: {
                                from: '*',
                                to: '0'
                            }
                        })
                    ])
                ])
            ] } });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptDatetime2PickerComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-datetime2-picker',
                        template: "\n      <div class=\"a3t-datetime\" [class.a3t-datetime_compact]=\"hideDatePickerSummary\">\n          <div class=\"a3t-datetime--date-picker\" *ngIf=\"!timeOnly\">\n              <div class=\"a3t-datetime--date-picker-summary\" *ngIf=\"timeMode && !timeOnly && !hideDatePickerSummary\" [@heightAnimation]>\n                  <adapt-icon [adaptRadarDisableEventSending]=\"true\" [name]=\"'calendar'\" class=\"mx-2\"></adapt-icon>\n                  <button type=\"button\" (click)=\"timeMode = false\"\n                          [attr.data-testid]=\"testID + '_dateSummary'\"\n                          [attr.aria-label]=\"dateSummary\">{{dateSummary}}</button>\n              </div>\n\n              <div class=\"a3t-datetime--date-picker-summary a3t-datetime--year-picker-summary\"\n                   *ngIf=\"monthMode && monthAndYearOnly && !hideDatePickerSummary\" [@heightAnimation]>\n                  <button type=\"button\" (click)=\"monthMode = false\"\n                          [attr.data-testid]=\"testID + '_yearSummary'\"\n                          [attr.aria-label]=\"yearSummary\">{{yearSummary}}</button>\n              </div>\n\n              <div class=\"a3t-datetime--date-picker-wrapper\"\n                   *ngIf=\"(!timeMode && !monthAndYearOnly) || (!monthMode && monthAndYearOnly)\" [@heightAnimation]>\n                  <adapt-datetime2-calendar [expandedControlsStyle]=\"!timePicker && !preventExpandedDateControls\"\n                                            [initialDate]=\"initialValue\"\n                                            [activeDate]=\"activeDate\"\n                                            [monthAndYearOnly]=\"monthAndYearOnly\"\n                                            [range]=\"dateRange\"\n                                            [filter]=\"dateFilter\"\n                                            [disabled]=\"disabled\"\n                                            [readonly]=\"readonly\"\n                                            [testID]=\"testID\"\n                                            (daySelect)=\"selectDate($event)\"></adapt-datetime2-calendar>\n              </div>\n          </div>\n\n          <div class=\"a3t-datetime--time-picker\" *ngIf=\"timePicker\">\n              <div class=\"a3t-datetime--time-picker-summary\"\n                   [class.a3t-datetime--time-picker-summary_active]=\"timeMode\">\n                  <div class=\"a3t-datetime--time-picker-summary-info\">\n                      <adapt-icon [adaptRadarDisableEventSending]=\"true\" [name]=\"'clock_o'\" class=\"mx-2\"></adapt-icon>\n\n                      <div class=\"a3t-datetime--time-picker-summary-input-wrapper\">\n                          <ng-container *ngIf=\"timeSummary\">\n                              <input type=\"text\"\n                                     role=\"spinbutton\"\n                                     class=\"a3t-datetime--time-picker-summary-input a3t-datetime--time-picker-summary-input-field\"\n                                     #hoursField\n                                     [value]=\"timeSummary.hh\"\n                                     [attr.aria-valuenow]=\"timeSummary.hh\"\n                                     [attr.aria-label]=\"defaultTexts.hours\"\n                                     (focus)=\"activeFace = activeFaceVariants.Hours; clockFaceChange.emit(activeFaceVariants.Hours)\"\n                                     (input)=\"timeUnitInput($event, 'h')\"\n                                     (keydown)=\"timeUnitKeydown($event, 'h')\"/>\n                              {{this.defaultTexts.timeSeparator}}\n                              <input type=\"text\"\n                                     role=\"spinbutton\"\n                                     class=\"a3t-datetime--time-picker-summary-input a3t-datetime--time-picker-summary-input-field\"\n                                     [value]=\"timeSummary.mm\"\n                                     [attr.aria-valuenow]=\"timeSummary.mm\"\n                                     [attr.aria-label]=\"defaultTexts.minutes\"\n                                     (focus)=\"activeFace = activeFaceVariants.Minutes; clockFaceChange.emit(activeFaceVariants.Minutes)\"\n                                     (input)=\"timeUnitInput($event, 'm')\"\n                                     (keydown)=\"timeUnitKeydown($event, 'm')\"/>\n\n                              <ng-container *ngIf=\"timeSeconds\">\n                                  {{this.defaultTexts.timeSeparator}}\n                                  <input type=\"text\"\n                                         role=\"spinbutton\"\n                                         class=\"a3t-datetime--time-picker-summary-input a3t-datetime--time-picker-summary-input-field\"\n                                         [value]=\"timeSummary.ss\"\n                                         [attr.aria-valuenow]=\"timeSummary.ss\"\n                                         [attr.aria-label]=\"defaultTexts.seconds\"\n                                         (focus)=\"activeFace = activeFaceVariants.Seconds; clockFaceChange.emit(activeFaceVariants.Seconds)\"\n                                         (input)=\"timeUnitInput($event, 's')\"\n                                         (keydown)=\"timeUnitKeydown($event, 's')\"/>\n                              </ng-container>\n\n                              <ng-container *ngIf=\"hasMeridiem\">\n                                  <input type=\"button\"\n                                         role=\"spinbutton\"\n                                         class=\"a3t-datetime--time-picker-summary-input mx-1\"\n                                         [value]=\"timeSummary.a\"\n                                         [attr.aria-valuenow]=\"timeSummary.a\"\n                                         [attr.aria-label]=\"defaultTexts.meridiem\"\n                                         (click)=\"changeMeridiem()\"\n                                         (keydown.arrowUp)=\"$event.preventDefault(); changeMeridiem()\"\n                                         (keydown.arrowDown)=\"$event.preventDefault(); changeMeridiem()\"/>\n                              </ng-container>\n                          </ng-container>\n\n                          <ng-container *ngIf=\"!timeSummary\">\n                              <span tabindex=\"0\" (focus)=\"setCurrentDate()\"\n                                    class=\"a3t-datetime--time-picker-summary-input\">{{emptyTimeHeading}}</span>\n                          </ng-container>\n\n                      </div>\n                  </div>\n\n                  <button type=\"button\"\n                          class=\"a3t-datetime--time-picker-summary-toggle\"\n                          aria-hidden=\"true\"\n                          tabindex=\"-1\"\n                          [class.rotation-180]=\"!timeMode\"\n                          [attr.data-testid]=\"testID + '_timeMode'\"\n                          *ngIf=\"!timeOnly\"\n                          (click)=\"timeMode = !timeMode\">\n                      <adapt-icon [adaptRadarDisableEventSending]=\"true\" [name]=\"'angle_down'\" class=\"mr-2\"></adapt-icon>\n                  </button>\n              </div>\n              <div class=\"a3t-datetime--time-picker-wrapper\"\n                   *ngIf=\"timeMode\"\n                   [@heightAnimation]>\n                  <adapt-datetime2-clock [activeTime]=\"clockState\"\n                                         [activeFace]=\"activeFace\"\n                                         [seconds]=\"timeSeconds\"\n                                         [hasMeridiem]=\"hasMeridiem\"\n                                         [disabled]=\"disabled\"\n                                         [readonly]=\"readonly\"\n                                         [texts]=\"clockHeadings\"\n                                         [testID]=\"testID\"\n                                         (timeSelect)=\"selectTime($event)\"\n                                         (clockFaceChange)=\"clockFaceChange.emit($event)\">\n                  </adapt-datetime2-clock>\n              </div>\n          </div>\n\n          <div class=\"a3t-datetime--time-picker a3t-datetime--year-picker\" *ngIf=\"monthAndYearOnly\">\n              <div class=\"a3t-datetime--time-picker-summary\"\n                   [class.a3t-datetime--time-picker-summary_active]=\"monthMode\">\n                  <div class=\"a3t-datetime--time-picker-summary-info\">\n                      <div class=\"a3t-datetime--time-picker-summary-input-wrapper\">\n              <span class=\"a3t-datetime--time-picker-summary-input\"\n                    tabindex=\"0\"\n                    [attr.aria-label]=\"defaultTexts.month\"\n                    role=\"textbox\">\n                {{ monthSummary }}\n              </span>\n                      </div>\n                  </div>\n\n                  <button type=\"button\"\n                          class=\"a3t-datetime--time-picker-summary-toggle\"\n                          aria-hidden=\"true\"\n                          tabindex=\"-1\"\n                          [attr.data-testid]=\"testID + '_monthMode'\"\n                          [class.rotation-180]=\"!monthMode\"\n                          (click)=\"monthMode = !monthMode\">\n                      <adapt-icon [adaptRadarDisableEventSending]=\"true\" [name]=\"'angle_down'\" class=\"ml-1 mr-1\"></adapt-icon>\n                  </button>\n              </div>\n              <div class=\"a3t-datetime--month-picker-wrapper\" *ngIf=\"monthMode\" [@heightAnimation]>\n                  <adapt-datetime2-month-picker\n                          [initialDate]=\"initialValue\"\n                          [activeDate]=\"activeDate\"\n                          (selectMonth)=\"selectMonth($event)\"\n                  ></adapt-datetime2-month-picker>\n              </div>\n          </div>\n      </div>\n  ",
                        animations: [
                            i1$1.trigger('heightAnimation', [
                                i1$1.transition('void => *', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.height, {
                                        params: {
                                            from: '0',
                                            to: '*'
                                        }
                                    })
                                ]),
                                i1$1.transition('* => void', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.height, {
                                        params: {
                                            from: '*',
                                            to: '0'
                                        }
                                    })
                                ])
                            ])
                        ]
                    }]
            }], function () { return [{ type: i1__namespace.AdaptTranslateService }, { type: i0__namespace.NgZone }, { type: i0__namespace.ChangeDetectorRef }]; }, { hoursField: [{
                    type: i0.ViewChild,
                    args: ['hoursField', { static: false }]
                }], dateRange: [{
                    type: i0.Input
                }], dateFormat: [{
                    type: i0.Input
                }], dateFilter: [{
                    type: i0.Input
                }], timeFormat: [{
                    type: i0.Input
                }], timePicker: [{
                    type: i0.Input
                }], timeOnly: [{
                    type: i0.Input
                }], monthAndYearOnly: [{
                    type: i0.Input
                }], monthFirst: [{
                    type: i0.Input
                }], timeSeconds: [{
                    type: i0.Input
                }], activeFace: [{
                    type: i0.Input
                }], initialValue: [{
                    type: i0.Input
                }], disabled: [{
                    type: i0.Input
                }], readonly: [{
                    type: i0.Input
                }], hideDatePickerSummary: [{
                    type: i0.Input
                }], preventExpandedDateControls: [{
                    type: i0.Input
                }], emptyDateHeading: [{
                    type: i0.Input
                }], emptyTimeHeading: [{
                    type: i0.Input
                }], emptyMonthHeading: [{
                    type: i0.Input
                }], clockHeadings: [{
                    type: i0.Input
                }], testID: [{
                    type: i0.Input
                }], valueChange: [{
                    type: i0.Output
                }], timeModeChange: [{
                    type: i0.Output
                }], clockFaceChange: [{
                    type: i0.Output
                }], timeMode: [{
                    type: i0.Input
                }], activeValue: [{
                    type: i0.Input
                }] });
    })();

    var AdaptDatetime2Module = /** @class */ (function () {
        function AdaptDatetime2Module(iconConfig) {
            iconConfig.registerIcons([dplIconfont.ai_angle_left]);
        }
        return AdaptDatetime2Module;
    }());
    AdaptDatetime2Module.ɵfac = function AdaptDatetime2Module_Factory(t) { return new (t || AdaptDatetime2Module)(i0__namespace.ɵɵinject(i1__namespace.AdaptIconConfig)); };
    AdaptDatetime2Module.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptDatetime2Module });
    AdaptDatetime2Module.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[
                i3.CommonModule,
                i6.FormsModule,
                i1.AdaptDropdownModule.forRoot(),
                i1.AdaptIconModule,
                i1.AdaptPopoverModule.forRoot(),
                i1.AdaptTooltipModule,
                i1.AdaptAnimationDirectivesModule,
                i1.AdaptDragonInputHandlerModule,
                i1.AdaptRxLabelModule
            ]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptDatetime2Module, [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i3.CommonModule,
                            i6.FormsModule,
                            i1.AdaptDropdownModule.forRoot(),
                            i1.AdaptIconModule,
                            i1.AdaptPopoverModule.forRoot(),
                            i1.AdaptTooltipModule,
                            i1.AdaptAnimationDirectivesModule,
                            i1.AdaptDragonInputHandlerModule,
                            i1.AdaptRxLabelModule
                        ],
                        declarations: [
                            AdaptDatetime2CalendarComponent,
                            AdaptDatetime2ClockComponent,
                            AdaptDatetime2Component,
                            AdaptDatetime2PickerComponent,
                            AdaptDatetimeRange2Component,
                            AdaptDatetime2MonthPickerComponent,
                            AdaptDatetime2YearPickerComponent
                        ],
                        exports: [
                            AdaptDatetime2CalendarComponent,
                            AdaptDatetime2ClockComponent,
                            AdaptDatetime2Component,
                            AdaptDatetime2PickerComponent,
                            AdaptDatetimeRange2Component,
                            AdaptDatetime2MonthPickerComponent,
                            AdaptDatetime2YearPickerComponent
                        ]
                    }]
            }], function () { return [{ type: i1__namespace.AdaptIconConfig }]; }, null);
    })();
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptDatetime2Module, { declarations: [AdaptDatetime2CalendarComponent,
                AdaptDatetime2ClockComponent,
                AdaptDatetime2Component,
                AdaptDatetime2PickerComponent,
                AdaptDatetimeRange2Component,
                AdaptDatetime2MonthPickerComponent,
                AdaptDatetime2YearPickerComponent], imports: [i3.CommonModule,
                i6.FormsModule, i1__namespace.AdaptDropdownModule, i1.AdaptIconModule, i1__namespace.AdaptPopoverModule, i1.AdaptTooltipModule,
                i1.AdaptAnimationDirectivesModule,
                i1.AdaptDragonInputHandlerModule,
                i1.AdaptRxLabelModule], exports: [AdaptDatetime2CalendarComponent,
                AdaptDatetime2ClockComponent,
                AdaptDatetime2Component,
                AdaptDatetime2PickerComponent,
                AdaptDatetimeRange2Component,
                AdaptDatetime2MonthPickerComponent,
                AdaptDatetime2YearPickerComponent] });
    })();
    i0__namespace.ɵɵsetComponentScope(AdaptDatetime2Component, [i1__namespace.AdaptDropdownDirective, i1__namespace.AdaptDropdownAnchorDirective, i1__namespace.AdaptRxControlLabelComponent, i3__namespace.NgIf, i1__namespace.AdaptDragonInputHandlerDirective, i1__namespace.AdaptDropdownMenuTemplateDirective, i3__namespace.NgClass, AdaptDatetime2PickerComponent, i3__namespace.NgForOf], []);
    i0__namespace.ɵɵsetComponentScope(AdaptDatetimeRange2Component, [i1__namespace.AdaptDropdownDirective, i1__namespace.AdaptDropdownAnchorDirective, i1__namespace.AdaptRxControlLabelComponent, i3__namespace.NgIf, i1__namespace.AdaptDragonInputHandlerDirective, i1__namespace.AdaptDropdownMenuTemplateDirective, i3__namespace.NgClass, AdaptDatetime2PickerComponent, i3__namespace.NgForOf], []);

    var _c0$k = ["customInput"];
    function AdaptDropDownEditableComponent_ng_template_5_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtext(0, "\n          ");
            i0__namespace.ɵɵelementStart(1, "div", 10);
            i0__namespace.ɵɵtext(2);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(3, "\n        ");
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate2("", ctx_r1.label ? ctx_r1.label + ":" : "", " ", ctx_r1.model, "");
        }
    }
    function AdaptDropDownEditableComponent_div_8_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 11);
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵelementContainer(2, 12);
            i0__namespace.ɵɵtext(3, "\n        ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r2 = i0__namespace.ɵɵnextContext();
            var _r0 = i0__namespace.ɵɵreference(6);
            i0__namespace.ɵɵclassMap("btn btn-secondary w-100 text-default align-start " + ctx_r2.size);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngTemplateOutlet", _r0);
        }
    }
    function AdaptDropDownEditableComponent_button_10_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "button", 13);
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵelementContainer(2, 12);
            i0__namespace.ɵɵtext(3, "\n        ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r3 = i0__namespace.ɵɵnextContext();
            var _r0 = i0__namespace.ɵɵreference(6);
            i0__namespace.ɵɵclassMap("btn btn-secondary dropdown-toggle w-100 align-start " + ctx_r3.size);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngTemplateOutlet", _r0);
        }
    }
    function AdaptDropDownEditableComponent_input_12_Template(rf, ctx) {
        if (rf & 1) {
            var _r12_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "input", 14, 15);
            i0__namespace.ɵɵlistener("ngModelChange", function AdaptDropDownEditableComponent_input_12_Template_input_ngModelChange_0_listener($event) { i0__namespace.ɵɵrestoreView(_r12_1); var ctx_r11 = i0__namespace.ɵɵnextContext(); return ctx_r11.customItemModel = $event; })("blur", function AdaptDropDownEditableComponent_input_12_Template_input_blur_0_listener() { i0__namespace.ɵɵrestoreView(_r12_1); var ctx_r13 = i0__namespace.ɵɵnextContext(); return ctx_r13.exitFocusMode(); })("keyup.esc", function AdaptDropDownEditableComponent_input_12_Template_input_keyup_esc_0_listener() { i0__namespace.ɵɵrestoreView(_r12_1); var ctx_r14 = i0__namespace.ɵɵnextContext(); return ctx_r14.exitFocusMode(); })("keydown.enter", function AdaptDropDownEditableComponent_input_12_Template_input_keydown_enter_0_listener() { i0__namespace.ɵɵrestoreView(_r12_1); var ctx_r15 = i0__namespace.ɵɵnextContext(); return ctx_r15.exitFocusMode(); });
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r4 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵclassProp("form-control-sm", ctx_r4.size === ctx_r4.sizeVariants.small)("form-control-lg", ctx_r4.size === ctx_r4.sizeVariants.large);
            i0__namespace.ɵɵproperty("ngModel", ctx_r4.customItemModel);
        }
    }
    function AdaptDropDownEditableComponent_ng_template_17_ng_template_1_Template(rf, ctx) { }
    function AdaptDropDownEditableComponent_ng_template_17_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtext(0, "\n          ");
            i0__namespace.ɵɵtemplate(1, AdaptDropDownEditableComponent_ng_template_17_ng_template_1_Template, 0, 0, "ng-template", 12);
            i0__namespace.ɵɵtext(2, "\n        ");
        }
        if (rf & 2) {
            i0__namespace.ɵɵnextContext();
            var _r8 = i0__namespace.ɵɵreference(26);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("ngTemplateOutlet", _r8);
        }
    }
    function AdaptDropDownEditableComponent_ng_container_19_Template(rf, ctx) {
        if (rf & 1) {
            var _r19_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵelementStart(2, "button", 16);
            i0__namespace.ɵɵlistener("click", function AdaptDropDownEditableComponent_ng_container_19_Template_button_click_2_listener() { var restoredCtx = i0__namespace.ɵɵrestoreView(_r19_1); var item_r17 = restoredCtx.$implicit; var ctx_r18 = i0__namespace.ɵɵnextContext(); return ctx_r18.setModel(item_r17); });
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n        ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var item_r17 = ctx.$implicit;
            var ctx_r6 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵclassProp("active", item_r17 === ctx_r6.model);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(item_r17);
        }
    }
    function AdaptDropDownEditableComponent_ng_template_21_ng_template_1_Template(rf, ctx) { }
    function AdaptDropDownEditableComponent_ng_template_21_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtext(0, "\n          ");
            i0__namespace.ɵɵtemplate(1, AdaptDropDownEditableComponent_ng_template_21_ng_template_1_Template, 0, 0, "ng-template", 12);
            i0__namespace.ɵɵtext(2, "\n        ");
        }
        if (rf & 2) {
            i0__namespace.ɵɵnextContext();
            var _r8 = i0__namespace.ɵɵreference(26);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("ngTemplateOutlet", _r8);
        }
    }
    function AdaptDropDownEditableComponent_ng_template_25_Template(rf, ctx) {
        if (rf & 1) {
            var _r22_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵtext(0, "\n      ");
            i0__namespace.ɵɵelementStart(1, "button", 17);
            i0__namespace.ɵɵlistener("click", function AdaptDropDownEditableComponent_ng_template_25_Template_button_click_1_listener() { i0__namespace.ɵɵrestoreView(_r22_1); var ctx_r21 = i0__namespace.ɵɵnextContext(); return ctx_r21.enterEditMode(); });
            i0__namespace.ɵɵtext(2, "\n        ");
            i0__namespace.ɵɵelementStart(3, "span");
            i0__namespace.ɵɵtext(4);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(5, "\n      ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n    ");
        }
        if (rf & 2) {
            var ctx_r9 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵclassProp("active", ctx_r9.customItemModel === ctx_r9.model);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵclassProp("text-secondary", !ctx_r9.customItemModel);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r9.customItemModel || ctx_r9.moreTitle);
        }
    }
    var AdaptDropDownEditableComponent = /** @class */ (function (_super) {
        __extends(AdaptDropDownEditableComponent, _super);
        function AdaptDropDownEditableComponent(ts, _ngZone, _adaptRadarService, _elem) {
            var _this = _super.call(this, _adaptRadarService, _elem, i1.AdaptRadarAngularCustomEventName.AdaptDropDownEditable) || this;
            _this.ts = ts;
            _this._ngZone = _ngZone;
            _this.model = 0;
            _this.editMode = false;
            _this.sizeVariants = i1.AdaptDropdownEditableSize;
            _this.defaultTexts = {};
            _this.width = '100%';
            _this.readonly = false;
            // TODO: Refactor this if possible
            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
            _this.items = [];
            _this.size = _this.sizeVariants.medium;
            _this.mobileView = {};
            _this.customValueOnTop = false;
            _this.valueChange = new i0.EventEmitter();
            _this.setDefaultTexts(ts.getCurrentLanguage());
            return _this;
        }
        Object.defineProperty(AdaptDropDownEditableComponent.prototype, "value", {
            get: function () {
                return this.model;
            },
            set: function (v) {
                if (v !== undefined) {
                    this.model = v;
                    if (this.items.length && this.items.indexOf(v) === -1) {
                        this.customItemModel = v;
                    }
                }
            },
            enumerable: false,
            configurable: true
        });
        AdaptDropDownEditableComponent.prototype.ngOnInit = function () {
            this.moreTitle = this.moreTitle || this.defaultTexts.moreTitle;
        };
        AdaptDropDownEditableComponent.prototype.setDefaultTexts = function (translation) {
            this.defaultTexts.moreTitle = translation['adapt.dropdownEditable.more'];
        };
        AdaptDropDownEditableComponent.prototype.setModel = function (item) {
            this.model = item;
            this.customItemModel = null;
            this.valueChange.emit(this.model);
        };
        AdaptDropDownEditableComponent.prototype.enterEditMode = function () {
            var _this = this;
            this.editMode = true;
            this._ngZone.onStable
                .pipe(operators.take(1))
                .subscribe((function () {
                _this.customInput.nativeElement.focus();
            }));
        };
        AdaptDropDownEditableComponent.prototype.exitFocusMode = function () {
            if (this.customItemModel) {
                this.model = this.customItemModel;
                this.valueChange.emit(this.model);
            }
            this.editMode = false;
        };
        return AdaptDropDownEditableComponent;
    }(i2.AdaptRadarGenericDirective));
    AdaptDropDownEditableComponent.ɵfac = function AdaptDropDownEditableComponent_Factory(t) { return new (t || AdaptDropDownEditableComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i0__namespace.NgZone), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef)); };
    AdaptDropDownEditableComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptDropDownEditableComponent, selectors: [["adapt-dropdown-editable"]], viewQuery: function AdaptDropDownEditableComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$k, 5);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.customInput = _t.first);
            }
        }, hostVars: 4, hostBindings: function AdaptDropDownEditableComponent_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵstyleProp("display", "inline-block")("width", ctx.width);
            }
        }, inputs: { value: "value", width: "width", readonly: "readonly", moreTitle: "moreTitle", label: "label", items: "items", size: "size", mobileView: "mobileView", customValueOnTop: "customValueOnTop" }, outputs: { valueChange: "valueChange" }, features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 28, vars: 8, consts: [["adaptDropdown", "", 3, "adaptRadarDisableEventSending", "mobileView"], ["adaptDropdownAnchor", "", 2, "background", "none", "padding", "0"], ["uiValue", ""], ["style", "background: none; border: 0; cursor: default;", 3, "class", 4, "ngIf"], ["type", "button", "adaptDropdownToggle", "", 3, "class", 4, "ngIf"], ["type", "text", "class", "form-control", 3, "form-control-sm", "form-control-lg", "ngModel", "ngModelChange", "blur", "keyup.esc", "keydown.enter", 4, "ngIf"], ["adaptDropdownMenu", "", 1, "dropdown-menu"], [3, "ngIf"], [4, "ngFor", "ngForOf"], ["addCustomValueTemplate", ""], [2, "overflow", "hidden", "white-space", "nowrap", "text-overflow", "ellipsis"], [2, "background", "none", "border", "0", "cursor", "default"], [3, "ngTemplateOutlet"], ["type", "button", "adaptDropdownToggle", ""], ["type", "text", 1, "form-control", 3, "ngModel", "ngModelChange", "blur", "keyup.esc", "keydown.enter"], ["customInput", ""], ["type", "button", 1, "dropdown-item", 3, "click"], ["type", "button", 1, "dropdown-item", "dropdown-item-editable", 3, "click"]], template: function AdaptDropDownEditableComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵtext(0, "\n    ");
                i0__namespace.ɵɵelementStart(1, "div", 0);
                i0__namespace.ɵɵtext(2, "\n      ");
                i0__namespace.ɵɵelementStart(3, "div", 1);
                i0__namespace.ɵɵtext(4, "\n        ");
                i0__namespace.ɵɵtemplate(5, AdaptDropDownEditableComponent_ng_template_5_Template, 4, 2, "ng-template", null, 2, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵtext(7, "\n\n        ");
                i0__namespace.ɵɵtemplate(8, AdaptDropDownEditableComponent_div_8_Template, 4, 3, "div", 3);
                i0__namespace.ɵɵtext(9, "\n        ");
                i0__namespace.ɵɵtemplate(10, AdaptDropDownEditableComponent_button_10_Template, 4, 3, "button", 4);
                i0__namespace.ɵɵtext(11, "\n        ");
                i0__namespace.ɵɵtemplate(12, AdaptDropDownEditableComponent_input_12_Template, 2, 5, "input", 5);
                i0__namespace.ɵɵtext(13, "\n      ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(14, "\n      ");
                i0__namespace.ɵɵelementStart(15, "div", 6);
                i0__namespace.ɵɵtext(16, "\n        ");
                i0__namespace.ɵɵtemplate(17, AdaptDropDownEditableComponent_ng_template_17_Template, 3, 1, "ng-template", 7);
                i0__namespace.ɵɵtext(18, "\n        ");
                i0__namespace.ɵɵtemplate(19, AdaptDropDownEditableComponent_ng_container_19_Template, 5, 3, "ng-container", 8);
                i0__namespace.ɵɵtext(20, "\n        ");
                i0__namespace.ɵɵtemplate(21, AdaptDropDownEditableComponent_ng_template_21_Template, 3, 1, "ng-template", 7);
                i0__namespace.ɵɵtext(22, "\n      ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(23, "\n    ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(24, "\n\n    ");
                i0__namespace.ɵɵtemplate(25, AdaptDropDownEditableComponent_ng_template_25_Template, 7, 5, "ng-template", null, 9, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵtext(27, "\n  ");
            }
            if (rf & 2) {
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("mobileView", ctx.mobileView);
                i0__namespace.ɵɵadvance(7);
                i0__namespace.ɵɵproperty("ngIf", ctx.readonly && !ctx.editMode);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", !ctx.readonly && !ctx.editMode);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.editMode);
                i0__namespace.ɵɵadvance(5);
                i0__namespace.ɵɵproperty("ngIf", ctx.customValueOnTop);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngForOf", ctx.items);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", !ctx.customValueOnTop);
            }
        }, directives: [i1__namespace.AdaptDropdownDirective, i1__namespace.AdaptDropdownAnchorDirective, i3__namespace.NgIf, i1__namespace.AdaptDropdownMenuDirective, i3__namespace.NgForOf, i3__namespace.NgTemplateOutlet, i1__namespace.AdaptDropdownToggleDirective, i1__namespace.AdaptDragonInputHandlerDirective, i6__namespace.DefaultValueAccessor, i6__namespace.NgControlStatus, i6__namespace.NgModel], encapsulation: 2 });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptDropDownEditableComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-dropdown-editable',
                        template: "\n    <div adaptDropdown\n         [adaptRadarDisableEventSending]=\"true\"\n         [mobileView]=\"mobileView\">\n      <div adaptDropdownAnchor style=\"background: none; padding: 0\">\n        <ng-template #uiValue>\n          <div\n            style=\"overflow: hidden; white-space: nowrap; text-overflow: ellipsis\">{{label ? (label + ':') : ''}} {{model}}</div>\n        </ng-template>\n\n        <div\n          *ngIf=\"readonly && !editMode\"\n          [class]=\"'btn btn-secondary w-100 text-default align-start ' + size\"\n          style=\"background: none; border: 0; cursor: default;\">\n          <ng-container [ngTemplateOutlet]=\"uiValue\"></ng-container>\n        </div>\n        <button type=\"button\"\n                [class]=\"'btn btn-secondary dropdown-toggle w-100 align-start ' + size\"\n                *ngIf=\"!readonly && !editMode\"\n                adaptDropdownToggle>\n          <ng-container [ngTemplateOutlet]=\"uiValue\"></ng-container>\n        </button>\n        <input #customInput\n               type=\"text\"\n               class=\"form-control\"\n               [class.form-control-sm]=\"size === sizeVariants.small\"\n               [class.form-control-lg]=\"size === sizeVariants.large\"\n               [(ngModel)]=\"customItemModel\"\n               *ngIf=\"editMode\"\n               (blur)=\"exitFocusMode()\"\n               (keyup.esc)=\"exitFocusMode()\"\n               (keydown.enter)=\"exitFocusMode()\"/>\n      </div>\n      <div adaptDropdownMenu class=\"dropdown-menu\">\n        <ng-template [ngIf]=\"customValueOnTop\">\n          <ng-template [ngTemplateOutlet]=\"addCustomValueTemplate\"></ng-template>\n        </ng-template>\n        <ng-container *ngFor=\"let item of items\">\n          <button class=\"dropdown-item\"\n                  type=\"button\"\n                  [class.active]=\"item === model\"\n                  (click)=\"setModel(item)\">{{item}}</button>\n        </ng-container>\n        <ng-template [ngIf]=\"!customValueOnTop\">\n          <ng-template [ngTemplateOutlet]=\"addCustomValueTemplate\"></ng-template>\n        </ng-template>\n      </div>\n    </div>\n\n    <ng-template #addCustomValueTemplate>\n      <button class=\"dropdown-item dropdown-item-editable\"\n              type=\"button\"\n              [class.active]=\"customItemModel === model\"\n              (click)=\"enterEditMode()\">\n        <span [class.text-secondary]=\"!customItemModel\">{{customItemModel || moreTitle}}</span>\n      </button>\n    </ng-template>\n  ",
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: {
                            '[style.display]': '"inline-block"',
                            '[style.width]': 'width'
                        }
                    }]
            }], function () { return [{ type: i1__namespace.AdaptTranslateService }, { type: i0__namespace.NgZone }, { type: i2__namespace.AdaptRadarService }, { type: i0__namespace.ElementRef }]; }, { value: [{
                    type: i0.Input
                }], width: [{
                    type: i0.Input
                }], readonly: [{
                    type: i0.Input
                }], moreTitle: [{
                    type: i0.Input
                }], label: [{
                    type: i0.Input
                }], items: [{
                    type: i0.Input
                }], size: [{
                    type: i0.Input
                }], mobileView: [{
                    type: i0.Input
                }], customValueOnTop: [{
                    type: i0.Input
                }], valueChange: [{
                    type: i0.Output
                }], customInput: [{
                    type: i0.ViewChild,
                    args: ['customInput']
                }] });
    })();

    var AdaptDropdownEditableModule = /** @class */ (function () {
        function AdaptDropdownEditableModule() {
        }
        return AdaptDropdownEditableModule;
    }());
    AdaptDropdownEditableModule.ɵfac = function AdaptDropdownEditableModule_Factory(t) { return new (t || AdaptDropdownEditableModule)(); };
    AdaptDropdownEditableModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptDropdownEditableModule });
    AdaptDropdownEditableModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[
                i3.CommonModule,
                i6.FormsModule,
                i1.AdaptDropdownModule.forRoot(),
                i1.AdaptDragonInputHandlerModule
            ]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptDropdownEditableModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i3.CommonModule,
                            i6.FormsModule,
                            i1.AdaptDropdownModule.forRoot(),
                            i1.AdaptDragonInputHandlerModule
                        ],
                        declarations: [AdaptDropDownEditableComponent],
                        exports: [AdaptDropDownEditableComponent]
                    }]
            }], null, null);
    })();
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptDropdownEditableModule, { declarations: [AdaptDropDownEditableComponent], imports: [i3.CommonModule,
                i6.FormsModule, i1__namespace.AdaptDropdownModule, i1.AdaptDragonInputHandlerModule], exports: [AdaptDropDownEditableComponent] });
    })();

    exports.SelectModelFormat = void 0;
    (function (SelectModelFormat) {
        SelectModelFormat["number"] = "number";
        SelectModelFormat["object"] = "object";
    })(exports.SelectModelFormat || (exports.SelectModelFormat = {}));

    /**
     * Search filter by name and badgeText
     */
    var AdaptSelectSearchFilter = /** @class */ (function () {
        function AdaptSelectSearchFilter() {
        }
        AdaptSelectSearchFilter.prototype.transform = function (options, args) {
            return options.filter(function (option) {
                return option.name && option.name.toLowerCase().indexOf((args || '').toLowerCase()) > -1
                    || option.badgeText && option.badgeText.toLowerCase().indexOf((args || '').toLowerCase()) > -1;
            });
        };
        return AdaptSelectSearchFilter;
    }());
    AdaptSelectSearchFilter.ɵfac = function AdaptSelectSearchFilter_Factory(t) { return new (t || AdaptSelectSearchFilter)(); };
    AdaptSelectSearchFilter.ɵpipe = /*@__PURE__*/ i0__namespace.ɵɵdefinePipe({ name: "searchFilter", type: AdaptSelectSearchFilter, pure: true });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptSelectSearchFilter, [{
                type: i0.Pipe,
                args: [{
                        name: 'searchFilter'
                    }]
            }], null, null);
    })();
    /**
     * Search filter by name
     */
    var AdaptSelectSearchFilterAsync = /** @class */ (function () {
        function AdaptSelectSearchFilterAsync() {
        }
        AdaptSelectSearchFilterAsync.prototype.transform = function (options, query) {
            return rxjs.of(options).pipe(operators.map(function (data) {
                if (!query) {
                    return data;
                }
                return data.filter(function (option) { return option.name.toLowerCase().indexOf((query || '').toLowerCase()) > -1; });
            }));
        };
        return AdaptSelectSearchFilterAsync;
    }());
    AdaptSelectSearchFilterAsync.ɵfac = function AdaptSelectSearchFilterAsync_Factory(t) { return new (t || AdaptSelectSearchFilterAsync)(); };
    AdaptSelectSearchFilterAsync.ɵpipe = /*@__PURE__*/ i0__namespace.ɵɵdefinePipe({ name: "searchFilterAsync", type: AdaptSelectSearchFilterAsync, pure: true });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptSelectSearchFilterAsync, [{
                type: i0.Pipe,
                args: [{
                        name: 'searchFilterAsync'
                    }]
            }], null, null);
    })();
    var AdaptSelectSearchFilterModule = /** @class */ (function () {
        function AdaptSelectSearchFilterModule() {
        }
        return AdaptSelectSearchFilterModule;
    }());
    AdaptSelectSearchFilterModule.ɵfac = function AdaptSelectSearchFilterModule_Factory(t) { return new (t || AdaptSelectSearchFilterModule)(); };
    AdaptSelectSearchFilterModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptSelectSearchFilterModule });
    AdaptSelectSearchFilterModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[
                i3.CommonModule
            ]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptSelectSearchFilterModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i3.CommonModule
                        ],
                        declarations: [
                            AdaptSelectSearchFilter,
                            AdaptSelectSearchFilterAsync
                        ],
                        exports: [
                            AdaptSelectSearchFilter,
                            AdaptSelectSearchFilterAsync
                        ]
                    }]
            }], null, null);
    })();
    (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptSelectSearchFilterModule, { declarations: [AdaptSelectSearchFilter, AdaptSelectSearchFilterAsync], imports: [i3.CommonModule], exports: [AdaptSelectSearchFilter, AdaptSelectSearchFilterAsync] }); })();

    var _c0$j = ["menu"];
    var _c1$f = ["filterInput"];
    var _c2$d = ["labelElement"];
    var _c3$9 = ["toggleDropdownBtn"];
    var _c4$6 = ["titleWidth"];
    var _c5$5 = ["optionRef"];
    var _c6$3 = ["loadMoreBtn"];
    var _c7$2 = ["dropdownItem"];
    function AdaptSelectComponent_span_4_ng_container_5_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵelement(1, "span", 8);
            i0__namespace.ɵɵelementStart(2, "span", 9);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n      ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r8 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r8.texts.requiredText);
        }
    }
    function AdaptSelectComponent_span_4_Template(rf, ctx) {
        if (rf & 1) {
            var _r10_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "span", 6, 7);
            i0__namespace.ɵɵlistener("click", function AdaptSelectComponent_span_4_Template_span_click_0_listener() { i0__namespace.ɵɵrestoreView(_r10_1); var ctx_r9 = i0__namespace.ɵɵnextContext(); return ctx_r9.toggleDropdown(); });
            i0__namespace.ɵɵtext(2, "\n      ");
            i0__namespace.ɵɵelementStart(3, "span");
            i0__namespace.ɵɵtext(4);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtemplate(5, AdaptSelectComponent_span_4_ng_container_5_Template, 5, 1, "ng-container", 3);
            i0__namespace.ɵɵtext(6, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r0 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵclassProp("sr-only", ctx_r0.settings.hideLabel);
            i0__namespace.ɵɵattribute("id", ctx_r0.ariaLabelledby);
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵtextInterpolate(ctx_r0.label);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("ngIf", ctx_r0.required);
        }
    }
    function AdaptSelectComponent_ng_container_6_adapt_icon_3_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-icon", 12);
        }
        if (rf & 2) {
            var ctx_r11 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", ctx_r11.tooltipInputIcon)("adaptTooltip", ctx_r11.tooltipInputText);
        }
    }
    function AdaptSelectComponent_ng_container_6_adapt_icon_5_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-icon", 13);
        }
        if (rf & 2) {
            var ctx_r12 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", ctx_r12.popoverIcon)("placement", ctx_r12.popoverPlacement)("adaptPopover", ctx_r12.popoverContent)("triggers", ctx_r12.popoverTriggers);
        }
    }
    function AdaptSelectComponent_ng_container_6_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵelement(1, "span", 8);
            i0__namespace.ɵɵtext(2, "\n      ");
            i0__namespace.ɵɵtemplate(3, AdaptSelectComponent_ng_container_6_adapt_icon_3_Template, 1, 3, "adapt-icon", 10);
            i0__namespace.ɵɵtext(4, "\n      ");
            i0__namespace.ɵɵtemplate(5, AdaptSelectComponent_ng_container_6_adapt_icon_5_Template, 1, 5, "adapt-icon", 11);
            i0__namespace.ɵɵtext(6, "\n    ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngIf", ctx_r1.tooltipInputIcon && !ctx_r1.popoverIcon);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r1.popoverIcon);
        }
    }
    function AdaptSelectComponent_button_9_Template(rf, ctx) {
        if (rf & 1) {
            var _r15_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 14, 15);
            i0__namespace.ɵɵlistener("click", function AdaptSelectComponent_button_9_Template_button_click_0_listener() { i0__namespace.ɵɵrestoreView(_r15_1); var ctx_r14 = i0__namespace.ɵɵnextContext(); return ctx_r14.toggleDropdown(); })("keyup", function AdaptSelectComponent_button_9_Template_button_keyup_0_listener($event) { i0__namespace.ɵɵrestoreView(_r15_1); var ctx_r16 = i0__namespace.ɵɵnextContext(); return ctx_r16.uncheckAllOnDelete($event); });
            i0__namespace.ɵɵtext(2);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r2 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵclassProp("disabled", ctx_r2.readonly)("is-active", ctx_r2.isVisible)("dropdown-toggle-up", ctx_r2.placement === "top");
            i0__namespace.ɵɵproperty("ngClass", ctx_r2.settings.buttonClasses)("disabled", ctx_r2.disabled);
            i0__namespace.ɵɵattribute("aria-expanded", ctx_r2.isVisible)("aria-labelledby", ctx_r2.ariaLabelledby + " " + ctx_r2.id + "_button")("aria-describedby", ctx_r2.ariaDescribedBy)("aria-disabled", ctx_r2.disabled)("id", ctx_r2.id + "_button")("aria-readonly", ctx_r2.readonly)("aria-invalid", ctx_r2.isError)("aria-required", ctx_r2.required)("aria-multiselectable", !ctx_r2.single)("aria-activedescendant", ctx_r2.getActiveDescendant())("aria-owns", ctx_r2.isVisible ? ctx_r2.popupId : null);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate1("\n    ", ctx_r2.title, "\n  ");
        }
    }
    function AdaptSelectComponent_ng_container_11_Template(rf, ctx) {
        if (rf & 1) {
            var _r20_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵelementStart(2, "button", 16, 15);
            i0__namespace.ɵɵlistener("click", function AdaptSelectComponent_ng_container_11_Template_button_click_2_listener() { i0__namespace.ɵɵrestoreView(_r20_1); var ctx_r19 = i0__namespace.ɵɵnextContext(); return ctx_r19.toggleDropdown(); })("keyup", function AdaptSelectComponent_ng_container_11_Template_button_keyup_2_listener($event) { i0__namespace.ɵɵrestoreView(_r20_1); var ctx_r21 = i0__namespace.ɵɵnextContext(); return ctx_r21.uncheckAllOnDelete($event); });
            i0__namespace.ɵɵtext(4);
            i0__namespace.ɵɵelementStart(5, "span", 17, 18);
            i0__namespace.ɵɵtext(7);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(8, "\n    ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(9, "\n  ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r3 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵclassProp("is-active", ctx_r3.isVisible);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("adaptTooltip", ctx_r3.tooltipText)("placement", "auto")("ngClass", ctx_r3.settings.buttonClasses)("disabled", ctx_r3.disabled);
            i0__namespace.ɵɵattribute("aria-expanded", ctx_r3.isVisible)("aria-disabled", ctx_r3.disabled)("aria-readonly", ctx_r3.readonly)("aria-invalid", ctx_r3.isError)("aria-required", ctx_r3.required)("aria-multiselectable", !ctx_r3.single)("aria-activedescendant", ctx_r3.getActiveDescendant())("aria-owns", ctx_r3.isVisible ? ctx_r3.popupId : null)("aria-labelledby", ctx_r3.ariaLabelledby + " " + ctx_r3.id + "_button")("aria-describedby", ctx_r3.ariaDescribedBy)("id", ctx_r3.id + "_button");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate1("", ctx_r3.title, "\n      ");
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r3.title);
        }
    }
    function AdaptSelectComponent_ng_container_13_div_2_div_5_button_5_Template(rf, ctx) {
        if (rf & 1) {
            var _r34_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 36);
            i0__namespace.ɵɵlistener("click", function AdaptSelectComponent_ng_container_13_div_2_div_5_button_5_Template_button_click_0_listener($event) { i0__namespace.ɵɵrestoreView(_r34_1); var ctx_r33 = i0__namespace.ɵɵnextContext(4); return ctx_r33.clearSearchFilter($event); });
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            i0__namespace.ɵɵproperty("@searchAnim", undefined);
        }
    }
    function AdaptSelectComponent_ng_container_13_div_2_div_5_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 32);
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵelement(2, "input", 33, 34);
            i0__namespace.ɵɵtext(4, "\n          ");
            i0__namespace.ɵɵtemplate(5, AdaptSelectComponent_ng_container_13_div_2_div_5_button_5_Template, 2, 1, "button", 35);
            i0__namespace.ɵɵtext(6, "\n        ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r24 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵpropertyInterpolate("placeholder", ctx_r24.texts.searchPlaceholder);
            i0__namespace.ɵɵproperty("formControl", ctx_r24.searchFilterText);
            i0__namespace.ɵɵattribute("aria-controls", ctx_r24.popupId);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngIf", ctx_r24.searchFilterText.value.length > 0);
        }
    }
    function AdaptSelectComponent_ng_container_13_div_2_div_9_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 37);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r25 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n            ", ctx_r25.getHeaderText(), "\n          ");
        }
    }
    function AdaptSelectComponent_ng_container_13_div_2_div_11_adapt_custom_actions_5_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-custom-actions", 41);
        }
        if (rf & 2) {
            var ctx_r35 = i0__namespace.ɵɵnextContext(4);
            i0__namespace.ɵɵproperty("actions", ctx_r35.customActions);
        }
    }
    function AdaptSelectComponent_ng_container_13_div_2_div_11_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 38);
            i0__namespace.ɵɵtext(1, "\n            ");
            i0__namespace.ɵɵelementStart(2, "span", 39);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n\n            ");
            i0__namespace.ɵɵtemplate(5, AdaptSelectComponent_ng_container_13_div_2_div_11_adapt_custom_actions_5_Template, 1, 1, "adapt-custom-actions", 40);
            i0__namespace.ɵɵtext(6, "\n          ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r26 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵproperty("@actionsAnim", ctx_r26.settings.showCheckAll || ctx_r26.settings.showUncheckAll || ctx_r26.searchFilterText.value ? "show" : "hide");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("@openClose", ctx_r26.rtl ? ctx_r26.searchFilterText.value ? "showRTL" : "hideRTL" : ctx_r26.searchFilterText.value ? "show" : "hide");
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate2("\n                ", ctx_r26.texts.filteredTo, " ", ctx_r26.getFilteredItems().length, "\n            ");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r26.settings.showCheckAll || ctx_r26.settings.showUncheckAll);
        }
    }
    var _c8$2 = function (a0) { return { "ellipsis": a0 }; };
    function AdaptSelectComponent_ng_container_13_div_2_ng_container_15_button_2_Template(rf, ctx) {
        if (rf & 1) {
            var _r41_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 44, 45);
            i0__namespace.ɵɵlistener("click", function AdaptSelectComponent_ng_container_13_div_2_ng_container_15_button_2_Template_button_click_0_listener($event) { i0__namespace.ɵɵrestoreView(_r41_1); var ctx_r40 = i0__namespace.ɵɵnextContext(4); return ctx_r40.setSelected($event, ctx_r40.nullOption); });
            i0__namespace.ɵɵtext(2, "\n            ");
            i0__namespace.ɵɵelementStart(3, "span", null, 46);
            i0__namespace.ɵɵtext(5);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n              ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r36 = i0__namespace.ɵɵnextContext(4);
            i0__namespace.ɵɵclassProp("active", ctx_r36.isSelected(ctx_r36.nullOption));
            i0__namespace.ɵɵproperty("adaptFocusMonitor", ctx_r36.nullOption.id)("ngClass", i0__namespace.ɵɵpureFunction1(12, _c8$2, ctx_r36.settings.truncateText));
            i0__namespace.ɵɵattribute("id", ctx_r36.id + "-" + ctx_r36.nullOption.id + "_item");
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵstyleProp("white-space", ctx_r36.whiteSpaceOption)("word-break", ctx_r36.wordBreakOption)("font-style", "italic");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate(ctx_r36.nullOption.name);
        }
    }
    function AdaptSelectComponent_ng_container_13_div_2_ng_container_15_button_4_Template(rf, ctx) {
        if (rf & 1) {
            var _r47_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 47, 45);
            i0__namespace.ɵɵlistener("click", function AdaptSelectComponent_ng_container_13_div_2_ng_container_15_button_4_Template_button_click_0_listener($event) { var restoredCtx = i0__namespace.ɵɵrestoreView(_r47_1); var option_r42 = restoredCtx.$implicit; var ctx_r46 = i0__namespace.ɵɵnextContext(4); return ctx_r46.setSelected($event, option_r42); });
            i0__namespace.ɵɵtext(2, "\n            ");
            i0__namespace.ɵɵelementStart(3, "span", null, 46);
            i0__namespace.ɵɵtext(5);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n              ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var option_r42 = ctx.$implicit;
            var index_r43 = ctx.index;
            var ctx_r37 = i0__namespace.ɵɵnextContext(4);
            i0__namespace.ɵɵclassProp("active", ctx_r37.isSelected(option_r42));
            i0__namespace.ɵɵproperty("adaptFocusMonitor", option_r42.id)("disabled", option_r42.disabled)("ngClass", i0__namespace.ɵɵpureFunction1(11, _c8$2, ctx_r37.settings.truncateText));
            i0__namespace.ɵɵattribute("id", ctx_r37.id + "-" + index_r43 + "_item");
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵstyleProp("white-space", ctx_r37.whiteSpaceOption)("word-break", ctx_r37.wordBreakOption);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate(option_r42.name);
        }
    }
    function AdaptSelectComponent_ng_container_13_div_2_ng_container_15_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n              ");
            i0__namespace.ɵɵtemplate(2, AdaptSelectComponent_ng_container_13_div_2_ng_container_15_button_2_Template, 7, 14, "button", 42);
            i0__namespace.ɵɵtext(3, "\n              ");
            i0__namespace.ɵɵtemplate(4, AdaptSelectComponent_ng_container_13_div_2_ng_container_15_button_4_Template, 7, 13, "button", 43);
            i0__namespace.ɵɵpipe(5, "slice");
            i0__namespace.ɵɵtext(6, "\n            ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r27 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r27.settings.emptyOption && !ctx_r27.searchFilterText.value.length);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngForOf", i0__namespace.ɵɵpipeBind3(5, 3, ctx_r27.displayedOptions, 0, ctx_r27.displayedOptionsCount))("ngForTrackBy", ctx_r27.optionsTrackByFn);
        }
    }
    function AdaptSelectComponent_ng_container_13_div_2_ng_container_17_li_4_adapt_icon_12_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "adapt-icon", 57);
            i0__namespace.ɵɵtext(1, "\n                    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var option_r49 = i0__namespace.ɵɵnextContext().$implicit;
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", option_r49.icon)("classList", "text-" + option_r49.iconType);
        }
    }
    function AdaptSelectComponent_ng_container_13_div_2_ng_container_17_li_4_span_14_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span", 58);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var option_r49 = i0__namespace.ɵɵnextContext().$implicit;
            i0__namespace.ɵɵproperty("ngClass", "badge-" + option_r49.badgeType);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n                      ", option_r49.badgeText, "\n                    ");
        }
    }
    function AdaptSelectComponent_ng_container_13_div_2_ng_container_17_li_4_Template(rf, ctx) {
        if (rf & 1) {
            var _r58_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "li", 50, 45);
            i0__namespace.ɵɵlistener("keydown.space", function AdaptSelectComponent_ng_container_13_div_2_ng_container_17_li_4_Template_li_keydown_space_0_listener($event) { var restoredCtx = i0__namespace.ɵɵrestoreView(_r58_1); var option_r49 = restoredCtx.$implicit; var ctx_r57 = i0__namespace.ɵɵnextContext(4); return ctx_r57.setSelected($event, option_r49); })("keyup.enter", function AdaptSelectComponent_ng_container_13_div_2_ng_container_17_li_4_Template_li_keyup_enter_0_listener($event) { var restoredCtx = i0__namespace.ɵɵrestoreView(_r58_1); var option_r49 = restoredCtx.$implicit; var ctx_r59 = i0__namespace.ɵɵnextContext(4); return ctx_r59.setSelected($event, option_r49); });
            i0__namespace.ɵɵtext(2, "\n                  ");
            i0__namespace.ɵɵelementStart(3, "div", 51);
            i0__namespace.ɵɵtext(4, "\n                    ");
            i0__namespace.ɵɵelementStart(5, "label", 52);
            i0__namespace.ɵɵtext(6, "\n                      ");
            i0__namespace.ɵɵelementStart(7, "input", 53);
            i0__namespace.ɵɵlistener("click", function AdaptSelectComponent_ng_container_13_div_2_ng_container_17_li_4_Template_input_click_7_listener($event) { var restoredCtx = i0__namespace.ɵɵrestoreView(_r58_1); var option_r49 = restoredCtx.$implicit; var ctx_r60 = i0__namespace.ɵɵnextContext(4); return ctx_r60.setSelected($event, option_r49); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(8, "\n                      ");
            i0__namespace.ɵɵelementStart(9, "span", 54, 46);
            i0__namespace.ɵɵtext(11, "\n                    ");
            i0__namespace.ɵɵtemplate(12, AdaptSelectComponent_ng_container_13_div_2_ng_container_17_li_4_adapt_icon_12_Template, 2, 3, "adapt-icon", 55);
            i0__namespace.ɵɵtext(13);
            i0__namespace.ɵɵtemplate(14, AdaptSelectComponent_ng_container_13_div_2_ng_container_17_li_4_span_14_Template, 2, 2, "span", 56);
            i0__namespace.ɵɵtext(15, "\n                  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(16, "\n                    ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(17, "\n                  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(18, "\n                ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var option_r49 = ctx.$implicit;
            var index_r50 = ctx.index;
            var ctx_r48 = i0__namespace.ɵɵnextContext(4);
            i0__namespace.ɵɵproperty("adaptFocusMonitor", option_r49.id);
            i0__namespace.ɵɵattribute("id", ctx_r48.id + "-" + index_r50 + "_item")("aria-selected", ctx_r48.isSelected(option_r49));
            i0__namespace.ɵɵadvance(7);
            i0__namespace.ɵɵproperty("disabled", option_r49.disabled)("checked", ctx_r48.isSelected(option_r49));
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵstyleProp("white-space", ctx_r48.whiteSpaceOption)("text-overflow", ctx_r48.textEllipsisOption)("word-break", ctx_r48.wordBreakOption);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngIf", ctx_r48.allowIconsBadges && option_r49.icon);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n                        ", option_r49.name, "\n                        ");
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("ngIf", ctx_r48.allowIconsBadges && option_r49.badgeText);
        }
    }
    function AdaptSelectComponent_ng_container_13_div_2_ng_container_17_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n              ");
            i0__namespace.ɵɵelementStart(2, "ul", 48);
            i0__namespace.ɵɵtext(3, "\n                ");
            i0__namespace.ɵɵtemplate(4, AdaptSelectComponent_ng_container_13_div_2_ng_container_17_li_4_Template, 19, 14, "li", 49);
            i0__namespace.ɵɵpipe(5, "slice");
            i0__namespace.ɵɵtext(6, "\n              ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(7, "\n\n            ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r28 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵproperty("ngForOf", i0__namespace.ɵɵpipeBind3(5, 2, ctx_r28.displayedOptions, 0, ctx_r28.displayedOptionsCount))("ngForTrackBy", ctx_r28.optionsTrackByFn);
        }
    }
    function AdaptSelectComponent_ng_container_13_div_2_div_21_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 59);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r29 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n          ", ctx_r29.texts.notFound, "\n        ");
        }
    }
    function AdaptSelectComponent_ng_container_13_div_2_ng_container_35_Template(rf, ctx) {
        if (rf & 1) {
            var _r63_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵelementStart(2, "button", 60, 61);
            i0__namespace.ɵɵlistener("click", function AdaptSelectComponent_ng_container_13_div_2_ng_container_35_Template_button_click_2_listener() { i0__namespace.ɵɵrestoreView(_r63_1); var ctx_r62 = i0__namespace.ɵɵnextContext(3); return ctx_r62.loadMoreItems(); });
            i0__namespace.ɵɵtext(4);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(5, "\n      ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r30 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("adaptInlineLoader", ctx_r30.loadingDataInProgress)("activeText", ctx_r30.texts.loadingText);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate1("\n          ", ctx_r30.texts.loadMore, "\n        ");
        }
    }
    var _c9$1 = function (a0, a1) { return { "activeLoad": a0, "dropdown_select__menu-sticky": a1 }; };
    function AdaptSelectComponent_ng_container_13_div_2_Template(rf, ctx) {
        if (rf & 1) {
            var _r65_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 20, 21);
            i0__namespace.ɵɵlistener("@selectAnim.done", function AdaptSelectComponent_ng_container_13_div_2_Template_div_animation_selectAnim_done_0_listener($event) { i0__namespace.ɵɵrestoreView(_r65_1); var ctx_r64 = i0__namespace.ɵɵnextContext(2); return ctx_r64.onAnimationDone($event); });
            i0__namespace.ɵɵtext(2, "\n      ");
            i0__namespace.ɵɵelementStart(3, "div", 22);
            i0__namespace.ɵɵtext(4, "\n        ");
            i0__namespace.ɵɵtemplate(5, AdaptSelectComponent_ng_container_13_div_2_div_5_Template, 7, 4, "div", 23);
            i0__namespace.ɵɵtext(6, "\n\n        ");
            i0__namespace.ɵɵelementStart(7, "div", 24);
            i0__namespace.ɵɵtext(8, "\n          ");
            i0__namespace.ɵɵtemplate(9, AdaptSelectComponent_ng_container_13_div_2_div_9_Template, 2, 1, "div", 25);
            i0__namespace.ɵɵtext(10, "\n\n          ");
            i0__namespace.ɵɵtemplate(11, AdaptSelectComponent_ng_container_13_div_2_div_11_Template, 7, 5, "div", 26);
            i0__namespace.ɵɵtext(12, "\n\n          ");
            i0__namespace.ɵɵelementStart(13, "div", 27);
            i0__namespace.ɵɵtext(14, "\n            ");
            i0__namespace.ɵɵtemplate(15, AdaptSelectComponent_ng_container_13_div_2_ng_container_15_Template, 7, 7, "ng-container", 3);
            i0__namespace.ɵɵtext(16, "\n\n            ");
            i0__namespace.ɵɵtemplate(17, AdaptSelectComponent_ng_container_13_div_2_ng_container_17_Template, 8, 6, "ng-container", 3);
            i0__namespace.ɵɵtext(18, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(19, "\n        ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(20, "\n        ");
            i0__namespace.ɵɵtemplate(21, AdaptSelectComponent_ng_container_13_div_2_div_21_Template, 2, 1, "div", 28);
            i0__namespace.ɵɵtext(22, "\n      ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(23, "\n\n      ");
            i0__namespace.ɵɵelementStart(24, "div", 29);
            i0__namespace.ɵɵtext(25, "\n        ");
            i0__namespace.ɵɵelementStart(26, "div", 30);
            i0__namespace.ɵɵtext(27, "\n          ");
            i0__namespace.ɵɵelement(28, "div", 31);
            i0__namespace.ɵɵtext(29, "\n        ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(30, "\n        ");
            i0__namespace.ɵɵelementStart(31, "span");
            i0__namespace.ɵɵtext(32);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(33, "\n      ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(34, "\n\n      ");
            i0__namespace.ɵɵtemplate(35, AdaptSelectComponent_ng_container_13_div_2_ng_container_35_Template, 6, 3, "ng-container", 3);
            i0__namespace.ɵɵtext(36, "\n\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r22 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵstyleProp("max-height", ctx_r22.settings.maxHeight)("z-index", ctx_r22.settings.zIndex);
            i0__namespace.ɵɵclassProp("pull-right", ctx_r22.settings.pullRight)("select-hidden", !ctx_r22.isAnimationReady)("bottom-gap", !ctx_r22.isMobile)("dropdown-menu-right", ctx_r22.settings.pullRight)("dropdown-menu-mobile-placement", ctx_r22.isMobilePlacement)("sticky", ctx_r22.isMobilePlacement && ctx_r22.settings.stickyHeader)("is-top", ctx_r22.placement === "top");
            i0__namespace.ɵɵproperty("@selectAnim", ctx_r22.animationState)("ngClass", i0__namespace.ɵɵpureFunction2(31, _c9$1, ctx_r22.loadingState, ctx_r22.settings.stickyHeader));
            i0__namespace.ɵɵattribute("id", ctx_r22.popupId)("aria-describedby", ctx_r22.ariaDescribedBy)("aria-multiselectable", false);
            i0__namespace.ɵɵadvance(5);
            i0__namespace.ɵɵproperty("ngIf", ctx_r22.settings.enableSearch);
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵproperty("ngIf", ctx_r22.showHeader());
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r22.displayedOptions && ctx_r22.displayedOptions.length !== 0);
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵproperty("ngIf", ctx_r22.displayedOptions && ctx_r22.settings.checkedStyle !== "checkbox");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r22.displayedOptions && ctx_r22.settings.checkedStyle === "checkbox");
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵproperty("ngIf", ctx_r22.displayedOptions && ctx_r22.displayedOptions.length === 0);
            i0__namespace.ɵɵadvance(11);
            i0__namespace.ɵɵtextInterpolate(ctx_r22.texts.loadingText);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngIf", ctx_r22.settings.pageSize && ctx_r22.showMoreButton);
        }
    }
    function AdaptSelectComponent_ng_container_13_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵtemplate(2, AdaptSelectComponent_ng_container_13_div_2_Template, 37, 34, "div", 19);
            i0__namespace.ɵɵtext(3, "\n  ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r4 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r4.isVisible);
        }
    }
    function AdaptSelectComponent_ng_container_16_div_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "div", 64);
        }
        if (rf & 2) {
            i0__namespace.ɵɵproperty("@selectOverlayAnim", undefined);
        }
    }
    function AdaptSelectComponent_ng_container_16_div_4_div_3_button_2_Template(rf, ctx) {
        if (rf & 1) {
            var _r77_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 71);
            i0__namespace.ɵɵlistener("click", function AdaptSelectComponent_ng_container_16_div_4_div_3_button_2_Template_button_click_0_listener() { i0__namespace.ɵɵrestoreView(_r77_1); var ctx_r76 = i0__namespace.ɵɵnextContext(4); return ctx_r76.cancel(); });
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r73 = i0__namespace.ɵɵnextContext(4);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r73.texts.cancelBtnText);
        }
    }
    function AdaptSelectComponent_ng_container_16_div_4_div_3_div_4_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 72);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r74 = i0__namespace.ɵɵnextContext(4);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r74.texts.titleMobileText);
        }
    }
    function AdaptSelectComponent_ng_container_16_div_4_div_3_button_6_Template(rf, ctx) {
        if (rf & 1) {
            var _r79_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 73);
            i0__namespace.ɵɵlistener("click", function AdaptSelectComponent_ng_container_16_div_4_div_3_button_6_Template_button_click_0_listener() { i0__namespace.ɵɵrestoreView(_r79_1); var ctx_r78 = i0__namespace.ɵɵnextContext(4); return ctx_r78.toggleDropdown(); });
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r75 = i0__namespace.ɵɵnextContext(4);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r75.texts.doneBtnText);
        }
    }
    var _c10$1 = function (a0) { return { "m-select__header_sticky": a0 }; };
    function AdaptSelectComponent_ng_container_16_div_4_div_3_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 67);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵtemplate(2, AdaptSelectComponent_ng_container_16_div_4_div_3_button_2_Template, 2, 1, "button", 68);
            i0__namespace.ɵɵtext(3, "\n        ");
            i0__namespace.ɵɵtemplate(4, AdaptSelectComponent_ng_container_16_div_4_div_3_div_4_Template, 2, 1, "div", 69);
            i0__namespace.ɵɵtext(5, "\n        ");
            i0__namespace.ɵɵtemplate(6, AdaptSelectComponent_ng_container_16_div_4_div_3_button_6_Template, 2, 1, "button", 70);
            i0__namespace.ɵɵtext(7, "\n      ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r69 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction1(4, _c10$1, ctx_r69.settings.stickyHeader));
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r69.settings.cancelBtn);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r69.settings.titleMobile);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r69.settings.doneBtn && !ctx_r69.single);
        }
    }
    function AdaptSelectComponent_ng_container_16_div_4_ng_container_5_div_2_a_4_Template(rf, ctx) {
        if (rf & 1) {
            var _r88_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "a", 80);
            i0__namespace.ɵɵlistener("click", function AdaptSelectComponent_ng_container_16_div_4_ng_container_5_div_2_a_4_Template_a_click_0_listener($event) { i0__namespace.ɵɵrestoreView(_r88_1); var ctx_r87 = i0__namespace.ɵɵnextContext(5); return ctx_r87.clearSearchFilter($event); });
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            i0__namespace.ɵɵproperty("@searchAnim", undefined);
        }
    }
    var _c11$1 = function (a0) { return { "m-select__controls_sticky": a0 }; };
    function AdaptSelectComponent_ng_container_16_div_4_ng_container_5_div_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 77);
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵelement(2, "input", 78);
            i0__namespace.ɵɵtext(3, "\n          ");
            i0__namespace.ɵɵtemplate(4, AdaptSelectComponent_ng_container_16_div_4_ng_container_5_div_2_a_4_Template, 2, 1, "a", 79);
            i0__namespace.ɵɵtext(5, "\n        ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r80 = i0__namespace.ɵɵnextContext(4);
            i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction1(5, _c11$1, ctx_r80.settings.stickyHeader));
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵpropertyInterpolate("placeholder", ctx_r80.texts.searchPlaceholder);
            i0__namespace.ɵɵproperty("adaptFocusMonitor", -1)("formControl", ctx_r80.searchFilterText);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r80.searchFilterText.value.length > 0);
        }
    }
    function AdaptSelectComponent_ng_container_16_div_4_ng_container_5_div_4_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 37);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r81 = i0__namespace.ɵɵnextContext(4);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n          ", ctx_r81.getHeaderText(), "\n        ");
        }
    }
    function AdaptSelectComponent_ng_container_16_div_4_ng_container_5_div_6_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 81);
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵelementStart(2, "span", 39);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n\n          ");
            i0__namespace.ɵɵelement(5, "adapt-custom-actions", 41);
            i0__namespace.ɵɵtext(6, "\n        ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r82 = i0__namespace.ɵɵnextContext(4);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("@openClose", ctx_r82.rtl ? ctx_r82.searchFilterText.value ? "showRTL" : "hideRTL" : ctx_r82.searchFilterText.value ? "show" : "hide");
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate2("\n              ", ctx_r82.texts.filteredTo, " ", ctx_r82.getFilteredItems().length, "\n          ");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("actions", ctx_r82.customActions);
        }
    }
    function AdaptSelectComponent_ng_container_16_div_4_ng_container_5_ng_container_8_button_2_Template(rf, ctx) {
        if (rf & 1) {
            var _r94_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 84, 45);
            i0__namespace.ɵɵlistener("click", function AdaptSelectComponent_ng_container_16_div_4_ng_container_5_ng_container_8_button_2_Template_button_click_0_listener($event) { i0__namespace.ɵɵrestoreView(_r94_1); var ctx_r93 = i0__namespace.ɵɵnextContext(5); return ctx_r93.setSelected($event, ctx_r93.nullOption); });
            i0__namespace.ɵɵtext(2, "\n            ");
            i0__namespace.ɵɵelementStart(3, "span", null, 46);
            i0__namespace.ɵɵtext(5);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n          ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r89 = i0__namespace.ɵɵnextContext(5);
            i0__namespace.ɵɵclassProp("active", ctx_r89.isSelected(ctx_r89.nullOption));
            i0__namespace.ɵɵattribute("id", ctx_r89.id + "-" + ctx_r89.nullOption.id + "_item");
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵstyleProp("white-space", ctx_r89.whiteSpaceOption)("word-break", ctx_r89.wordBreakOption)("font-style", "italic");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate(ctx_r89.nullOption.name);
        }
    }
    function AdaptSelectComponent_ng_container_16_div_4_ng_container_5_ng_container_8_button_4_Template(rf, ctx) {
        if (rf & 1) {
            var _r100_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 85, 45);
            i0__namespace.ɵɵlistener("click", function AdaptSelectComponent_ng_container_16_div_4_ng_container_5_ng_container_8_button_4_Template_button_click_0_listener($event) { var restoredCtx = i0__namespace.ɵɵrestoreView(_r100_1); var option_r95 = restoredCtx.$implicit; var ctx_r99 = i0__namespace.ɵɵnextContext(5); return ctx_r99.setSelected($event, option_r95); });
            i0__namespace.ɵɵtext(2, "\n            ");
            i0__namespace.ɵɵelementStart(3, "span", null, 46);
            i0__namespace.ɵɵtext(5);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n          ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var option_r95 = ctx.$implicit;
            var index_r96 = ctx.index;
            var ctx_r90 = i0__namespace.ɵɵnextContext(5);
            i0__namespace.ɵɵclassProp("active", ctx_r90.isSelected(option_r95));
            i0__namespace.ɵɵproperty("disabled", option_r95.disabled);
            i0__namespace.ɵɵattribute("id", ctx_r90.id + "-" + index_r96 + "_item");
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵstyleProp("white-space", ctx_r90.whiteSpaceOption)("word-break", ctx_r90.wordBreakOption);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate(option_r95.name);
        }
    }
    function AdaptSelectComponent_ng_container_16_div_4_ng_container_5_ng_container_8_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵtemplate(2, AdaptSelectComponent_ng_container_16_div_4_ng_container_5_ng_container_8_button_2_Template, 7, 10, "button", 82);
            i0__namespace.ɵɵtext(3, "\n          ");
            i0__namespace.ɵɵtemplate(4, AdaptSelectComponent_ng_container_16_div_4_ng_container_5_ng_container_8_button_4_Template, 7, 9, "button", 83);
            i0__namespace.ɵɵpipe(5, "slice");
            i0__namespace.ɵɵtext(6, "\n        ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r83 = i0__namespace.ɵɵnextContext(4);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r83.settings.emptyOption && !ctx_r83.searchFilterText.value.length);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngForOf", i0__namespace.ɵɵpipeBind3(5, 3, ctx_r83.displayedOptions, 0, ctx_r83.displayedOptionsCount))("ngForTrackBy", ctx_r83.optionsTrackByFn);
        }
    }
    function AdaptSelectComponent_ng_container_16_div_4_ng_container_5_ng_container_10_li_4_adapt_icon_12_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "adapt-icon", 57);
            i0__namespace.ɵɵtext(1, "\n                    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var option_r102 = i0__namespace.ɵɵnextContext().$implicit;
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", option_r102.icon)("classList", "text-" + option_r102.iconType);
        }
    }
    function AdaptSelectComponent_ng_container_16_div_4_ng_container_5_ng_container_10_li_4_span_14_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span", 58);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var option_r102 = i0__namespace.ɵɵnextContext().$implicit;
            i0__namespace.ɵɵproperty("ngClass", "badge-" + option_r102.badgeType);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n                      ", option_r102.badgeText, "\n                    ");
        }
    }
    function AdaptSelectComponent_ng_container_16_div_4_ng_container_5_ng_container_10_li_4_Template(rf, ctx) {
        if (rf & 1) {
            var _r111_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "li", 88, 45);
            i0__namespace.ɵɵlistener("keydown.space", function AdaptSelectComponent_ng_container_16_div_4_ng_container_5_ng_container_10_li_4_Template_li_keydown_space_0_listener($event) { var restoredCtx = i0__namespace.ɵɵrestoreView(_r111_1); var option_r102 = restoredCtx.$implicit; var ctx_r110 = i0__namespace.ɵɵnextContext(5); return ctx_r110.setSelected($event, option_r102); })("keyup.enter", function AdaptSelectComponent_ng_container_16_div_4_ng_container_5_ng_container_10_li_4_Template_li_keyup_enter_0_listener($event) { var restoredCtx = i0__namespace.ɵɵrestoreView(_r111_1); var option_r102 = restoredCtx.$implicit; var ctx_r112 = i0__namespace.ɵɵnextContext(5); return ctx_r112.setSelected($event, option_r102); });
            i0__namespace.ɵɵtext(2, "\n              ");
            i0__namespace.ɵɵelementStart(3, "div", 51);
            i0__namespace.ɵɵtext(4, "\n                ");
            i0__namespace.ɵɵelementStart(5, "label", 52);
            i0__namespace.ɵɵtext(6, "\n                  ");
            i0__namespace.ɵɵelementStart(7, "input", 53);
            i0__namespace.ɵɵlistener("click", function AdaptSelectComponent_ng_container_16_div_4_ng_container_5_ng_container_10_li_4_Template_input_click_7_listener($event) { var restoredCtx = i0__namespace.ɵɵrestoreView(_r111_1); var option_r102 = restoredCtx.$implicit; var ctx_r113 = i0__namespace.ɵɵnextContext(5); return ctx_r113.setSelected($event, option_r102); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(8, "\n                  ");
            i0__namespace.ɵɵelementStart(9, "span", 54, 46);
            i0__namespace.ɵɵtext(11, "\n                    ");
            i0__namespace.ɵɵtemplate(12, AdaptSelectComponent_ng_container_16_div_4_ng_container_5_ng_container_10_li_4_adapt_icon_12_Template, 2, 3, "adapt-icon", 55);
            i0__namespace.ɵɵtext(13);
            i0__namespace.ɵɵtemplate(14, AdaptSelectComponent_ng_container_16_div_4_ng_container_5_ng_container_10_li_4_span_14_Template, 2, 2, "span", 56);
            i0__namespace.ɵɵtext(15, "\n                    ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(16, "\n                ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(17, "\n              ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(18, "\n            ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var option_r102 = ctx.$implicit;
            var index_r103 = ctx.index;
            var ctx_r101 = i0__namespace.ɵɵnextContext(5);
            i0__namespace.ɵɵproperty("adaptFocusMonitor", option_r102.id);
            i0__namespace.ɵɵattribute("id", ctx_r101.id + "-" + index_r103 + "_item")("aria-selected", ctx_r101.isSelected(option_r102));
            i0__namespace.ɵɵadvance(7);
            i0__namespace.ɵɵproperty("disabled", option_r102.disabled)("checked", ctx_r101.isSelected(option_r102));
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵstyleProp("white-space", ctx_r101.whiteSpaceOption)("word-break", ctx_r101.wordBreakOption);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngIf", ctx_r101.allowIconsBadges && option_r102.icon);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n                    ", option_r102.name, "\n                    ");
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("ngIf", ctx_r101.allowIconsBadges && option_r102.badgeText);
        }
    }
    var _c12 = function (a0) { return { "list-unstyled__load-more_mobile": a0 }; };
    function AdaptSelectComponent_ng_container_16_div_4_ng_container_5_ng_container_10_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n\n          ");
            i0__namespace.ɵɵelementStart(2, "ul", 86);
            i0__namespace.ɵɵtext(3, "\n            ");
            i0__namespace.ɵɵtemplate(4, AdaptSelectComponent_ng_container_16_div_4_ng_container_5_ng_container_10_li_4_Template, 19, 12, "li", 87);
            i0__namespace.ɵɵpipe(5, "slice");
            i0__namespace.ɵɵtext(6, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(7, "\n\n        ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r84 = i0__namespace.ɵɵnextContext(4);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction1(7, _c12, ctx_r84.settings.pageSize && ctx_r84.showMoreButton));
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngForOf", i0__namespace.ɵɵpipeBind3(5, 3, ctx_r84.displayedOptions, 0, ctx_r84.displayedOptionsCount))("ngForTrackBy", ctx_r84.optionsTrackByFn);
        }
    }
    function AdaptSelectComponent_ng_container_16_div_4_ng_container_5_div_12_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 89);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r85 = i0__namespace.ɵɵnextContext(4);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n          ", ctx_r85.texts.notFound, "\n        ");
        }
    }
    function AdaptSelectComponent_ng_container_16_div_4_ng_container_5_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵtemplate(2, AdaptSelectComponent_ng_container_16_div_4_ng_container_5_div_2_Template, 6, 7, "div", 74);
            i0__namespace.ɵɵtext(3, "\n\n        ");
            i0__namespace.ɵɵtemplate(4, AdaptSelectComponent_ng_container_16_div_4_ng_container_5_div_4_Template, 2, 1, "div", 25);
            i0__namespace.ɵɵtext(5, "\n\n        ");
            i0__namespace.ɵɵtemplate(6, AdaptSelectComponent_ng_container_16_div_4_ng_container_5_div_6_Template, 7, 4, "div", 75);
            i0__namespace.ɵɵtext(7, "\n\n        ");
            i0__namespace.ɵɵtemplate(8, AdaptSelectComponent_ng_container_16_div_4_ng_container_5_ng_container_8_Template, 7, 7, "ng-container", 3);
            i0__namespace.ɵɵtext(9, "\n\n        ");
            i0__namespace.ɵɵtemplate(10, AdaptSelectComponent_ng_container_16_div_4_ng_container_5_ng_container_10_Template, 8, 9, "ng-container", 3);
            i0__namespace.ɵɵtext(11, "\n        ");
            i0__namespace.ɵɵtemplate(12, AdaptSelectComponent_ng_container_16_div_4_ng_container_5_div_12_Template, 2, 1, "div", 76);
            i0__namespace.ɵɵtext(13, "\n      ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r70 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r70.settings.enableSearch);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r70.showHeader);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r70.displayedOptions && ctx_r70.displayedOptions.length !== 0 && (ctx_r70.settings.showCheckAll || ctx_r70.settings.showUncheckAll));
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r70.displayedOptions && ctx_r70.settings.checkedStyle !== "checkbox");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r70.displayedOptions && ctx_r70.settings.checkedStyle === "checkbox");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r70.displayedOptions && ctx_r70.displayedOptions.length === 0);
        }
    }
    function AdaptSelectComponent_ng_container_16_div_4_ng_container_7_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵelementStart(2, "div", 29);
            i0__namespace.ɵɵtext(3, "\n          ");
            i0__namespace.ɵɵelementStart(4, "div", 30);
            i0__namespace.ɵɵtext(5, "\n            ");
            i0__namespace.ɵɵelement(6, "div", 31);
            i0__namespace.ɵɵtext(7, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(8, "\n          ");
            i0__namespace.ɵɵelementStart(9, "span");
            i0__namespace.ɵɵtext(10);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(11, "\n        ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(12, "\n      ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r71 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(10);
            i0__namespace.ɵɵtextInterpolate(ctx_r71.texts.loadingText);
        }
    }
    function AdaptSelectComponent_ng_container_16_div_4_ng_container_9_Template(rf, ctx) {
        if (rf & 1) {
            var _r115_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵelementStart(2, "button", 90);
            i0__namespace.ɵɵlistener("click", function AdaptSelectComponent_ng_container_16_div_4_ng_container_9_Template_button_click_2_listener() { i0__namespace.ɵɵrestoreView(_r115_1); var ctx_r114 = i0__namespace.ɵɵnextContext(3); return ctx_r114.loadMoreItems(); });
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n      ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r72 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("adaptInlineLoader", ctx_r72.loadingDataInProgress)("activeText", ctx_r72.texts.loadingText);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n          ", ctx_r72.texts.loadMore, "\n        ");
        }
    }
    function AdaptSelectComponent_ng_container_16_div_4_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 65, 21);
            i0__namespace.ɵɵtext(2, "\n\n      ");
            i0__namespace.ɵɵtemplate(3, AdaptSelectComponent_ng_container_16_div_4_div_3_Template, 8, 6, "div", 66);
            i0__namespace.ɵɵtext(4, "\n      ");
            i0__namespace.ɵɵtemplate(5, AdaptSelectComponent_ng_container_16_div_4_ng_container_5_Template, 14, 6, "ng-container", 3);
            i0__namespace.ɵɵtext(6, "\n      ");
            i0__namespace.ɵɵtemplate(7, AdaptSelectComponent_ng_container_16_div_4_ng_container_7_Template, 13, 1, "ng-container", 3);
            i0__namespace.ɵɵtext(8, "\n\n      ");
            i0__namespace.ɵɵtemplate(9, AdaptSelectComponent_ng_container_16_div_4_ng_container_9_Template, 5, 3, "ng-container", 3);
            i0__namespace.ɵɵtext(10, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r67 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵstyleProp("max-height", ctx_r67.settings.maxHeight)("z-index", ctx_r67.settings.zIndex);
            i0__namespace.ɵɵclassProp("pull-right", ctx_r67.settings.pullRight)("dropdown-menu-right", ctx_r67.settings.pullRight);
            i0__namespace.ɵɵproperty("@selectMenuAnim", undefined);
            i0__namespace.ɵɵattribute("id", ctx_r67.popupId)("aria-describedby", ctx_r67.ariaDescribedBy)("aria-multiselectable", !ctx_r67.single);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngIf", ctx_r67.isMobile);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r67.loadingState);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r67.loadingState);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r67.settings.pageSize && ctx_r67.showMoreButton);
        }
    }
    function AdaptSelectComponent_ng_container_16_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵtemplate(2, AdaptSelectComponent_ng_container_16_div_2_Template, 1, 1, "div", 62);
            i0__namespace.ɵɵtext(3, "\n    ");
            i0__namespace.ɵɵtemplate(4, AdaptSelectComponent_ng_container_16_div_4_Template, 11, 16, "div", 63);
            i0__namespace.ɵɵtext(5, "\n  ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r5 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r5.isVisible);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r5.isVisible);
        }
    }
    function AdaptSelectComponent_div_18_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 91);
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵelementStart(2, "p", 92);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r6 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("@validationFeedbackAnimation", undefined);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("@validationFeedbackChangeAnimation", ctx_r6.isError);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r6.displayMessage);
        }
    }
    var MULTISELECT_VALUE_ACCESSOR = {
        provide: i6.NG_VALUE_ACCESSOR,
        useExisting: i0.forwardRef(function () { return AdaptSelectComponent; }),
        multi: true
    };
    var nextId$4 = 0;
    var nextTestId = 0;
    // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle
    var AdaptSelectComponent = /** @class */ (function (_super) {
        __extends(AdaptSelectComponent, _super);
        function AdaptSelectComponent(filterSearch, _renderer, detection, element, _focusHandle, _scrollService, _changeDetectorRef, _ngZone, _layerService, _router, _differs, _eventManager, _dir, _resizeService, _injector, ts, _adaptRadarService, _entityName) {
            var _this = _super.call(this, _adaptRadarService, element, _entityName ? _entityName : i1.AdaptRadarAngularCustomEventName.AdaptSelect) || this;
            _this.filterSearch = filterSearch;
            _this._renderer = _renderer;
            _this.detection = detection;
            _this.element = element;
            _this._focusHandle = _focusHandle;
            _this._scrollService = _scrollService;
            _this._changeDetectorRef = _changeDetectorRef;
            _this._ngZone = _ngZone;
            _this._layerService = _layerService;
            _this._router = _router;
            _this._differs = _differs;
            _this._eventManager = _eventManager;
            _this._dir = _dir;
            _this._resizeService = _resizeService;
            _this._injector = _injector;
            _this.ts = ts;
            _this.tooltipText = '';
            _this.isError = false;
            _this.numSelected = 0;
            _this.isVisible = false;
            _this.searchFilterText = new i6.FormControl('');
            _this.allowIconsBadges = false;
            _this.animationState = 'close';
            _this.rtl = false;
            /**
             * Is dropdown clicked flag
             */
            _this.ddClick = false;
            _this.defaultSettings = {
                pullRight: false,
                enableSearch: false,
                checkedStyle: 'simple',
                buttonClasses: '',
                selectionLimit: 0,
                closeOnSelect: false,
                autoUnselect: false,
                showCheckAll: false,
                showUncheckAll: false,
                showTooltip: false,
                dynamicTitleMaxItems: 1,
                maxHeight: null,
                showCheckedAll: false,
                hideLabel: false,
                cancelBtn: true,
                doneBtn: true,
                titleMobile: true,
                placement: 'auto',
                appendToBody: false,
                appendTo: null,
                positionTo: null,
                enablePositionTracking: false,
                positionTrackingIntervalMs: 50,
                truncateText: false,
                containerWidth: null,
                emptyOption: false,
                stickyHeader: true,
                modelFormat: exports.SelectModelFormat.number
            };
            _this.defaultTexts = {};
            _this.nullOption = {
                id: null,
                name: null
            };
            _this.showMoreButton = false;
            _this.single = false;
            // eslint-disable-next-line @angular-eslint/no-input-rename
            _this.ariaLabelledby = "adapt-select-aria-label-" + nextId$4++;
            // eslint-disable-next-line @angular-eslint/no-input-rename
            _this.ariaDescribedBy = null;
            _this.filterDebounceTime = 300;
            /**
             * Unique id of the element.
             */
            _this.id = "adapt-select-" + nextId$4++;
            /**
             * Unique id of the element.
             */
            _this.testID = "adapt-select-" + nextTestId++;
            _this.emitModelChangeWithSingleValue = false;
            _this.popoverPlacement = 'top';
            _this.popoverTriggers = 'click';
            _this.loadingState = false;
            _this.loadingDataInProgress = false;
            _this.readonly = false;
            // Outputs
            _this.selectionLimitReached = new i0.EventEmitter();
            _this.dropdownClosed = new i0.EventEmitter();
            _this.dropdownOpened = new i0.EventEmitter();
            _this.modelArrayChanged = new i0.EventEmitter();
            _this.filterValueChanged = new i0.EventEmitter();
            _this._resizeSubject = new rxjs.Subject();
            _this._pageNumber = 1;
            _this._focusMonitoringQueryList = new i0.QueryList();
            _this._destroyed$ = new rxjs.ReplaySubject(1);
            /**
             * An object for manage wrapper's scroll.
             */
            _this._scrollManager = null;
            _this._disabled = false;
            _this._required = false;
            /**
             * Document click handler
             */
            _this.documentClickHandler = (function (e) {
                // Check if clicked node inside menu ViewChild to decide should we close dropdown
                // We include labelElement and toggleDropdownButton for correct work of toggleDropdown() method
                var el = e.target;
                if (el instanceof Node && _this.menu.nativeElement.contains(el)
                    || (_this.labelElement && el instanceof Node && _this.labelElement.nativeElement.contains(el))
                    || (_this.toggleDropdownBtn && el instanceof Node && _this.toggleDropdownBtn.nativeElement.contains(el))) {
                    return;
                }
                _this.close();
            });
            // eslint-disable-next-line
            _this.onModelChange = function (_) {
            };
            // eslint-disable-next-line
            _this.onModelTouched = function () {
            };
            /**
             * Emits output with debounce if user filter for something
             */
            _this.valueChangesSubscription = _this.searchFilterText.valueChanges
                .pipe(operators.debounceTime(_this.filterDebounceTime))
                .subscribe(function (value) {
                _this._updateFilteredOptions();
                i1.SafeCdr.detectChanges(_this._changeDetectorRef);
                _this.filterValueChanged.emit(value);
            });
            _this.setDefaultTexts(ts.getCurrentLanguage());
            return _this;
        }
        Object.defineProperty(AdaptSelectComponent.prototype, "options", {
            set: function (options) {
                this._options = options;
                this._updateFilteredOptions();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptSelectComponent.prototype, "isMobile", {
            get: function () {
                return this.detection.deviceMobile();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptSelectComponent.prototype, "toggleStateValidation", {
            set: function (value) {
                this.isError = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptSelectComponent.prototype, "disabled", {
            get: function () {
                return this._disabled;
            },
            set: function (v) {
                this._disabled = i1.toBoolean(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptSelectComponent.prototype, "customClass", {
            get: function () {
                return this._customClass;
            },
            set: function (v) {
                this._renderer.addClass(this.element.nativeElement, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptSelectComponent.prototype, "required", {
            get: function () {
                return this._required || i1.hasRequiredValidator(this._ngControl);
            },
            set: function (v) {
                this._required = i1.toBoolean(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptSelectComponent.prototype, "isAttachedToBody", {
            get: function () {
                return this.settings.appendToBody || this.isMobile || this.settings.appendTo === 'body';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptSelectComponent.prototype, "customActions", {
            get: function () {
                return [
                    {
                        name: this.searchFilterText.value ? this.texts.checkAllFilter : this.texts.checkAll,
                        visible: this.settings.showCheckAll && !this.isHiddenSelectFilteredButton(),
                        onClick: this.checkAll.bind(this)
                    },
                    {
                        name: this.searchFilterText.value ? this.texts.uncheckAllFilter : this.texts.uncheckAll,
                        visible: this.settings.showUncheckAll && !this.isHiddenUncheckFilteredButton(),
                        onClick: this.uncheckAll.bind(this)
                    }
                ];
            },
            enumerable: false,
            configurable: true
        });
        // Check if select was render from <adapt-list-selector> component to allow showing icons and badges
        // From other places showing icons and badges forbidden
        AdaptSelectComponent._shouldAllowIconsBadges = function (ref) {
            if (ref && ref.nativeElement && ref.nativeElement.tagName) {
                return ref.nativeElement.tagName.toLowerCase() === 'adapt-list-selector';
            }
            else {
                return false;
            }
        };
        AdaptSelectComponent.prototype.setDefaultTexts = function (translation) {
            this.defaultTexts.checkAll = translation['adapt.select.checkAll'];
            this.defaultTexts.checkAllFilter = translation['adapt.select.checkAllFilter'];
            this.defaultTexts.uncheckAll = translation['adapt.select.uncheckAll'];
            this.defaultTexts.uncheckAllFilter = translation['adapt.select.uncheckAllFilter'];
            this.defaultTexts.filteredTo = translation['adapt.select.filteredTo'];
            this.defaultTexts.checked = translation['adapt.select.checked'];
            this.defaultTexts.checkedPlural = translation['adapt.select.checkedPlural'];
            this.defaultTexts.checkedAll = translation['adapt.select.checkedAll'];
            this.defaultTexts.searchPlaceholder = translation['adapt.select.searchPlaceholder'];
            this.defaultTexts.defaultTitle = translation['adapt.select.defaultTitle'];
            this.defaultTexts.headerText = translation['adapt.select.headerText'];
            this.defaultTexts.headerTextSingle = translation['adapt.select.headerTextSingle'];
            this.defaultTexts.notFound = translation['adapt.select.notFound'];
            this.defaultTexts.requiredText = translation['adapt.common.required'];
            this.defaultTexts.cancelBtnText = translation['adapt.common.cancel'];
            this.defaultTexts.doneBtnText = translation['adapt.common.done'];
            this.defaultTexts.titleMobileText = translation['adapt.select.titleMobileText'];
            this.defaultTexts.loadingText = translation['adapt.select.loadingText'];
            this.defaultTexts.emptyOptionText = translation['adapt.select.emptyOptionText'];
            this.defaultTexts.loadMore = translation['adapt.select.loadMore'];
            this.defaultTexts.numberOptionsText = translation['adapt.select.numberOptionsText'];
        };
        AdaptSelectComponent.prototype.writeValue = function (value) {
            if (!lodashEs.isUndefined(value)) {
                var valueArray = ((value == null || value === '') && !this.settings.emptyOption) ? [] : Array.isArray(value) ? value : [value];
                var modelValue = this.settings.modelFormat === exports.SelectModelFormat.object && valueArray[0]
                    ? valueArray[0].id
                    : valueArray[0];
                this._setModelAndUpdateStateOnModelChange(valueArray, false);
                if (modelValue !== null) {
                    this._modelDiffer = this._differs.find(this.model).create();
                }
            }
        };
        AdaptSelectComponent.prototype.registerOnChange = function (fn) {
            this.onModelChange = fn;
        };
        AdaptSelectComponent.prototype.registerOnTouched = function (fn) {
            this.onModelTouched = fn;
        };
        AdaptSelectComponent.prototype.setDisabledState = function (isDisabled) {
            this.disabled = isDisabled;
            i1.SafeCdr.markForCheck(this._changeDetectorRef);
        };
        AdaptSelectComponent.prototype.truncateText = function (opt) {
            this.whiteSpaceOption = opt ? 'nowrap' : 'normal';
            this.textEllipsisOption = opt ? 'ellipsis' : 'inherit';
            this.wordBreakOption = opt ? 'inherit' : 'break-word';
        };
        AdaptSelectComponent.prototype.loadMoreItems = function () {
            if (this.loadMoreCallback) {
                this.loadMoreCallback();
            }
            else {
                this._pageNumber++;
                this.showMoreButton = this.displayedOptions.length > this.displayedOptionsCount;
            }
            if (this.settings.enableSearch && this.searchFilterText.value !== '') {
                this._focusHandle.focusOnFirstElement();
            }
        };
        // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle
        AdaptSelectComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.popupId = this.id + '_popup';
            this.rtl = this._dir.value === 'rtl';
            this.settings = Object.assign(Object.assign({}, this.defaultSettings), this.settings);
            this.texts = Object.assign(Object.assign({}, this.defaultTexts), this.texts);
            // additional check for single select header
            // if someone already modified (translated) plural form we are setting it as default
            if (this.single && this.texts.headerText) {
                this.texts.headerTextSingle = this.texts.headerText;
            }
            this.title = this.texts.defaultTitle;
            this.nullOption.name = this.texts.emptyOptionText;
            this.allowIconsBadges = AdaptSelectComponent._shouldAllowIconsBadges(this.parentElementRef);
            this._ngZone.onStable.pipe(operators.take(1)).subscribe(function () { return _this._updateTitleView(); });
            /** Get scroll manager */
            if (this.isMobile) {
                this._scrollManager = this._scrollService.getScrollManager(document.body);
            }
            /** Truncate option */
            this.truncateText(this.settings.truncateText);
            this._ngControl = this._injector.get(i6.NgControl, null);
        };
        Object.defineProperty(AdaptSelectComponent.prototype, "displayedOptionsCount", {
            get: function () {
                var _a, _b;
                if (((_a = this.settings) === null || _a === void 0 ? void 0 : _a.pageSize) && !this.loadMoreCallback) {
                    return this.settings.pageSize * this._pageNumber;
                }
                else {
                    return ((_b = this.displayedOptions) === null || _b === void 0 ? void 0 : _b.length) || 0;
                }
            },
            enumerable: false,
            configurable: true
        });
        // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle
        AdaptSelectComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            _super.prototype.ngAfterViewInit.call(this);
            this._focusHandle.init(this._focusMonitoringQueryList);
            if (this.element) {
                this._focusHandle.registerKeyDown(this.element.nativeElement);
                this._resizeService.addResizeEventListener(this.element.nativeElement, this._resizeSubject.next.bind(this._resizeSubject));
                this._resizeSubject
                    .pipe(operators.throttleTime(100, rxjs.asyncScheduler, { trailing: true }), operators.takeUntil(this._destroyed$))
                    .subscribe(function () {
                    _this._checkTooltipOption();
                });
            }
            this.focusMonitoring.changes
                .pipe(operators.takeUntil(this._destroyed$))
                .subscribe(function () {
                _this._updateFocusMonitoringOnStable();
            });
        };
        AdaptSelectComponent.prototype.onAnimationDone = function (event) {
            var _this = this;
            if (this.isAttachedToBody) {
                if (this._router) {
                    this._router.events
                        .pipe(operators.takeUntil(this._destroyed$))
                        .subscribe(function (n) { return n instanceof i3$1.NavigationStart ? _this._detachFromBody() : ''; });
                }
            }
            if (event.toState === 'void') {
                this._detachFromBody();
            }
        };
        AdaptSelectComponent.prototype.close = function (restoreToggleFocus) {
            if (restoreToggleFocus === void 0) { restoreToggleFocus = false; }
            if (!this.isVisible) {
                return;
            }
            this.isVisible = false;
            this.searchFilterText.setValue('');
            this._applyWrapperScroll();
            this.dropdownClosed.emit(this.model);
            this.animationState = 'close';
            this._updateErrorState();
            this.onModelTouched();
            if (this._removeTapEventListener) {
                this._removeTapEventListener();
            }
            this._layerService.removeComponent(this);
            if ((restoreToggleFocus || this.isAttachedToBody) && this.toggleDropdownBtn) {
                // for preventing jumping of focus
                this.toggleDropdownBtn.nativeElement.focus();
            }
            i1.SafeCdr.markForCheck(this._changeDetectorRef);
            if (this._trackingTimerId) {
                clearInterval(this._trackingTimerId);
                this._trackingTimerId = null;
            }
        };
        AdaptSelectComponent.prototype.open = function () {
            var _this = this;
            if (this.isVisible || this.disabled || this.readonly) {
                return;
            }
            this.isAnimationReady = false;
            this.isVisible = true;
            this._applyWrapperScroll();
            this._removeTapEventListener = this._eventManager.addGlobalEventListener('document', 'tap', this.documentClickHandler.bind(this));
            this._updateFocusMonitoringOnStable();
            this._ngZone.onStable
                .asObservable()
                .pipe(operators.take(1), operators.tap(function () {
                _this._updateMenuWidth();
                _this._attachToBody();
                _this._enableTrackingAnchorPosition();
            }), operators.delay(0), operators.takeUntil(this._destroyed$))
                .subscribe(function () {
                _this._focusOnSelectOption();
                if (_this.isMobile) {
                    // Prevent dropdown-menu height change on searching to avoid going behind the keyboard (adapt-angular#3399)
                    var computedHeight = window.getComputedStyle(_this.menu.nativeElement).height;
                    _this._renderer.setStyle(_this.menu.nativeElement, 'minHeight', computedHeight);
                }
            });
            this.dropdownOpened.emit(this.model);
            this._addToLayoutService();
            this._updateFilteredOptions();
        };
        AdaptSelectComponent.prototype.toggleDropdown = function () {
            if (this.disabled || this.readonly) {
                return;
            }
            if (this.isVisible) {
                this.close();
            }
            else {
                this.open();
            }
        };
        AdaptSelectComponent.prototype.isSelected = function (option) {
            var modelValue = this._findModelBySelectedOption(option);
            return modelValue === null || i1.isDefined(modelValue);
        };
        AdaptSelectComponent.prototype.setSelected = function (e, option) {
            if (i1.getEventKeyCode(e) === keycodes.SPACE) {
                e.preventDefault();
            }
            if (option.disabled) {
                return;
            }
            if (!this.model) {
                this.model = [];
            }
            // don't call preventDefault or do logic below
            // e.preventDefault();
            // https://stackoverflow.com/questions/30426523/
            // according to this article should not call preventDefault or should do this logic
            // const checkboxEl = querySelectorChildrenAndSelf(e.currentTarget as HTMLElement, '.checkbox__input') as HTMLInputElement;
            // if (checkboxEl) {
            //   setTimeout(() => {
            //     checkboxEl.checked = this.isSelected(option);
            //   });
            // }
            var itemToRemove = this._findModelBySelectedOption(option);
            var _c = this.settings, selectionLimit = _c.selectionLimit, autoUnselect = _c.autoUnselect, closeOnSelect = _c.closeOnSelect;
            if (this.single) {
                if (!itemToRemove) {
                    this._setModelAndUpdateStateOnModelChange([this._createModelItem(option)], true);
                }
                this.close(true);
            }
            else {
                if (!lodashEs.isUndefined(itemToRemove)) {
                    this._removeModelItem(itemToRemove);
                }
                else {
                    if ((selectionLimit === 0 || this.model.length < selectionLimit)) {
                        this._addModelItem(this._createModelItem(option));
                    }
                    else {
                        if (autoUnselect) {
                            this._autoUnselect(this._createModelItem(option));
                        }
                        else {
                            this.selectionLimitReached.emit(this.model.length);
                        }
                    }
                }
                this._updateStateOnModelChange(true);
                if (closeOnSelect) {
                    this.close(true);
                }
            }
            this._updateFocusMonitoringOnStable();
        };
        /** For better performance */
        AdaptSelectComponent.prototype.optionsTrackByFn = function (index, option) {
            return option.id;
        };
        AdaptSelectComponent.prototype.clearSearchFilter = function (e) {
            e.preventDefault();
            this.searchFilterText.setValue('');
            e.target.previousElementSibling.focus();
        };
        AdaptSelectComponent.prototype.checkAll = function () {
            var _this = this;
            if (this.settings.enableSearch && this._options && this.searchFilterText.value !== '') {
                // union of selected items in model and filtered items
                this._setModelAndUpdateStateOnModelChange(lodashEs.union(this.model, this.getFilteredItems()), true);
            }
            else {
                this._setModelAndUpdateStateOnModelChange(this.getSelectableOptions()
                    .map(function (item) { return _this._createModelItem(item); }), true);
            }
            this._updateFocusMonitoringOnStable();
        };
        AdaptSelectComponent.prototype.uncheckAll = function () {
            if (this.settings.enableSearch && this._options && this.searchFilterText.value !== '') {
                this._setModelAndUpdateStateOnModelChange(lodashEs.differenceWith(this.model, this.getFilteredItems(), lodashEs.isEqual), true);
            }
            else {
                this._setModelAndUpdateStateOnModelChange([], true);
            }
            this._updateFocusMonitoringOnStable();
        };
        AdaptSelectComponent.prototype.uncheckAllOnDelete = function (event) {
            if (i1.hasKeyboardKeyCode(event, 'Backspace', keycodes.BACKSPACE) || i1.hasKeyboardKeyCode(event, 'Delete', keycodes.DELETE)) {
                this.uncheckAll();
            }
        };
        AdaptSelectComponent.prototype.isHiddenSelectFilteredButton = function () {
            var _this = this;
            return this.getSelectableFilteredOptions().every(function (option) { return _this.isSelectedOption(option); });
        };
        AdaptSelectComponent.prototype.isHiddenUncheckFilteredButton = function () {
            var _this = this;
            return this.getSelectableFilteredOptions().every(function (option) { return !_this.isSelectedOption(option); });
        };
        AdaptSelectComponent.prototype.isSelectedOption = function (option) {
            var _this = this;
            var optionId = option.id;
            return this.model && this.model.some(function (item) { return _this.getSelectedItemId(item) === optionId; });
        };
        AdaptSelectComponent.prototype.getSelectedItemId = function (item) {
            return (typeof item === 'object' && item !== null) ? item.id : item;
        };
        AdaptSelectComponent.prototype.notifyArrayChanged = function () {
            if (!this.model || !this._options) {
                this.modelArray = [];
            }
            else {
                var indexed = lodashEs.keyBy(this._options, 'id');
                var modelIds = this.settings.modelFormat === exports.SelectModelFormat.number
                    ? this.model
                    : this.model.map(function (item) { return item.id; });
                /**
                 * pick({a: 1, b: 2, c: 3, d: 4}, ['a', 'e', 'f']); //=> {a: 1}
                 */
                this.modelArray = lodashEs.pick(indexed, modelIds);
                this.modelArrayChanged.emit(this.modelArray);
            }
        };
        AdaptSelectComponent.prototype.cancel = function () {
            if (!this.single) {
                this.uncheckAll();
            }
            this.close();
        };
        AdaptSelectComponent.prototype.getFilteredItems = function () {
            var _this = this;
            return this.getSelectableFilteredOptions()
                .map(function (item) { return _this._createModelItem(item); });
        };
        AdaptSelectComponent.prototype.getSelectableFilteredOptions = function () {
            var searchValue = this.searchFilterText.value;
            var selectableOptions = this.getSelectableOptions();
            return searchValue ? this.filterSearch.transform(selectableOptions, searchValue) : selectableOptions;
        };
        AdaptSelectComponent.prototype.isDisabled = function (option) {
            return this.disabled || this.readonly || option.disabled
                || (lodashEs.isFunction(this.disabledOptionResolver) ? this.disabledOptionResolver(option) : false);
        };
        AdaptSelectComponent.prototype.getSelectableOptions = function () {
            var _this = this;
            return this._options.filter(function (option) { return !_this.isDisabled(option); });
        };
        AdaptSelectComponent.prototype.allOptionsDisabled = function () {
            var _this = this;
            return lodashEs.isFunction(this.disabledOptionResolver)
                ? this.displayedOptions.every(function (option) { return _this.disabledOptionResolver(option); })
                : false;
        };
        // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle
        AdaptSelectComponent.prototype.ngDoCheck = function () {
            if (this._modelDiffer && this.model) {
                // true: even if changed inside component
                if (this._modelDiffer.diff(this.model)) {
                    this._onModelArrayModified();
                }
            }
        };
        // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle
        AdaptSelectComponent.prototype.ngOnChanges = function (changes) {
            if (changes.options && changes.options.currentValue !== undefined) {
                if (this._options && this.texts && this.settings) {
                    this._updateTitleView();
                }
            }
            if (changes.settings && !lodashEs.isUndefined(changes.settings.previousValue)) {
                this.settings = Object.assign(Object.assign({}, this.defaultSettings), this.settings);
            }
            if (changes.texts && !lodashEs.isUndefined(changes.texts.previousValue)) {
                this.texts = Object.assign(Object.assign({}, this.defaultTexts), this.texts);
                if (changes.texts.currentValue.defaultTitle) {
                    this.title = changes.texts.currentValue.defaultTitle;
                }
                if (changes.texts.currentValue.emptyOptionText) {
                    this.nullOption.name = changes.texts.currentValue.emptyOptionText;
                }
            }
        };
        // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle
        AdaptSelectComponent.prototype.ngOnDestroy = function () {
            _super.prototype.ngOnDestroy.call(this);
            this.close();
            this._detachFromBody();
            this._resizeService.removeResizeEventListener(this.element.nativeElement);
            this.valueChangesSubscription.unsubscribe();
            this._destroyed$.next(true);
            this._destroyed$.complete();
        };
        AdaptSelectComponent.prototype.showHeader = function () {
            var isTextEmpty;
            var isSearchEmpty = false;
            if (this.settings.enableSearch && this._options) {
                isSearchEmpty = this.filterSearch.transform(this._options, this.searchFilterText.value).length === 0;
            }
            if (this.single === true) {
                isTextEmpty = this.texts.headerTextSingle === '';
            }
            else {
                isTextEmpty = this.texts.headerText === '';
            }
            return !!(this._options && !isSearchEmpty && !isTextEmpty);
        };
        AdaptSelectComponent.prototype.getHeaderText = function () {
            return (this.single === true) ? this.texts.headerTextSingle : this.texts.headerText;
        };
        AdaptSelectComponent.prototype.getActiveDescendant = function () {
            return this.optionRef ? this.optionRef.nativeElement.id : null;
        };
        AdaptSelectComponent.prototype._updateFilteredOptions = function () {
            var _a;
            var displayedOptions;
            if (this.searchFilterText.value) { // no need to filter values
                displayedOptions = this._options && this.filterSearch.transform(this._options, this.searchFilterText.value);
            }
            else {
                displayedOptions = this._options;
            }
            this.displayedOptions = displayedOptions;
            if (((_a = this.settings) === null || _a === void 0 ? void 0 : _a.pageSize) && !this.loadMoreCallback) {
                this.showMoreButton = this.displayedOptions.length > this.displayedOptionsCount;
            }
        };
        AdaptSelectComponent.prototype._focusOnSelectOption = function () {
            if (this.single && this.model && this.model.length) {
                if (this.settings.enableSearch) {
                    this._focusHandle.focusOnElement(-1);
                }
                else {
                    var optId_1 = this.getSelectedItemId(this.model[0]);
                    var selectedOptInd = this.focusMonitoring.toArray().findIndex(function (item) { return item.optionId === optId_1; });
                    if (selectedOptInd >= 0) {
                        this._focusHandle.focusOnElement(selectedOptInd);
                    }
                    else {
                        // maybe unreal case
                        this._focusHandle.focusOnFirstElement();
                    }
                }
            }
            else {
                this._focusHandle.focusOnFirstElement();
            }
        };
        /**
         * Update focusMonitor list
         *
         * Need to invoke after each DOM manipulation
         * to be sure that all visible focusable items
         * are available via keyboard
         */
        AdaptSelectComponent.prototype._updateFocusMonitoringOnStable = function () {
            var _this = this;
            this._ngZone.onStable
                .pipe(operators.take(1))
                .subscribe(function () {
                // Get all available focusMonitoring items
                var focusMonitoringList = _this.focusMonitoring.toArray();
                // SelectAll/ClearAll actions are located in the child AdaptCustomActionsComponent component,
                // so we cant get them via @ViewChildren. Need to add them manually
                if (_this.customActionsComponent) {
                    var customActionsFocusList = _this.customActionsComponent.focusMonitorDirectiveQueryList.toArray();
                    if (_this.settings.enableSearch) {
                        // When filter enabled
                        if (_this.searchFilterText.value.length > 0) {
                            // When filter has value: filter clear button exist
                            focusMonitoringList.splice.apply(focusMonitoringList, __spreadArray([2, 0], __read(customActionsFocusList)));
                        }
                        else {
                            // When filter has no value
                            focusMonitoringList.splice.apply(focusMonitoringList, __spreadArray([1, 0], __read(customActionsFocusList)));
                        }
                    }
                    else {
                        focusMonitoringList.splice.apply(focusMonitoringList, __spreadArray([0, 0], __read(customActionsFocusList)));
                    }
                }
                // Reset internal focusMonitoringQueryList with actual focusable elements
                if (_this.detection.isIE()) {
                    // Update QueryList manually for IE 11 because QueryList.prototype.reset method does not work in IE11 properly
                    // it triggers additional cd - which is the cause for dropdown to "blink" on first call to loadMore()
                    _this._focusMonitoringQueryList = new i0.QueryList();
                }
                else {
                    _this._focusMonitoringQueryList.reset(focusMonitoringList);
                }
            });
        };
        AdaptSelectComponent.prototype._addToLayoutService = function () {
            var _this = this;
            this._layerService.addComponent(this, function () {
                _this.close();
            });
        };
        AdaptSelectComponent.prototype._autoUnselect = function (item) {
            this._addModelItem(item);
            this._removeFirstModelItem();
        };
        AdaptSelectComponent.prototype._updateTitleView = function () {
            this._updateNumSelected();
            this._updateTitle();
            i1.SafeCdr.markForCheck(this._changeDetectorRef);
        };
        AdaptSelectComponent.prototype._updateErrorState = function () {
            var model = this.model;
            var modelValue = this.settings.modelFormat === exports.SelectModelFormat.object && model && model[0]
                ? model[0].id
                : model && model[0];
            // Cases like [''], [undefined], [false] - doesn't covered because such model values are not valid
            this.isError = this.required ? !(model && model.length && (modelValue !== null)) : false;
        };
        AdaptSelectComponent.prototype._updateNumSelected = function () {
            this.numSelected = this.model && this.model.length || 0;
        };
        AdaptSelectComponent.prototype._addModelItem = function (item) {
            return this._setModel(__spreadArray(__spreadArray([], __read(this.model)), [item]));
        };
        AdaptSelectComponent.prototype._removeModelItem = function (itemToRemove) {
            return this._setModel(this.model.filter(function (item) { return item !== itemToRemove; }));
        };
        AdaptSelectComponent.prototype._removeFirstModelItem = function () {
            return this._setModel(__spreadArray([], __read(this.model.slice(1))));
        };
        AdaptSelectComponent.prototype._setModel = function (newModel) {
            this.model = newModel;
            return newModel;
        };
        AdaptSelectComponent.prototype._setModelAndUpdateStateOnModelChange = function (newModel, updateErrorAndFireOnModelChangeEvent) {
            this._setModel(newModel);
            this._updateStateOnModelChange(updateErrorAndFireOnModelChangeEvent);
        };
        AdaptSelectComponent.prototype._updateStateOnModelChange = function (updateErrorAndFireOnModelChangeEvent) {
            this._updateTitleView();
            if (updateErrorAndFireOnModelChangeEvent) {
                this._updateErrorState();
                var valueToEmit = this.emitModelChangeWithSingleValue && this.single ?
                    (this.model && this.model.length ? this.model[0] : null) :
                    this.model;
                this.onModelChange(valueToEmit);
                // this.onModelChange();
            }
            this.notifyArrayChanged();
        };
        /**
         * updates the button title with the Selected choice
         */
        AdaptSelectComponent.prototype._updateTitle = function () {
            if (this.numSelected === 0) {
                this.title = this.texts.defaultTitle;
                this._checkTooltipOption();
            }
            else if (this.numSelected > 1 && this.single && this._options) {
                i1.adaptWarn("ADAPT-ANGULAR Warning! Single Select! Use only one selected value instead of " + this.model);
                if (this.model.length > 1) {
                    this._setModel([this.model[this.model.length - 1]]);
                }
                this._filterDynamicMaxTitle();
            }
            else if (this.settings.dynamicTitleMaxItems >= this.numSelected && this._options) {
                this._filterDynamicMaxTitle();
                this._checkTooltipOption();
            }
            else {
                this._numSelectedTitle();
                this._checkTooltipOption(true);
            }
        };
        AdaptSelectComponent.prototype._getFilteredOptions = function () {
            var _this = this;
            var filteredOptions = [];
            // In case we have no options but model exists. For example for cases when options should be loaded on select opening
            if (this.settings.modelFormat === exports.SelectModelFormat.object && this.model && this.model.length) {
                filteredOptions = this.model.filter(function (item) {
                    return i1.isDefined(_this._findModelBySelectedOption(item));
                });
                // In case we have options
            }
            else if (this._options && this._options.length) {
                filteredOptions = this._options.filter(function (option) {
                    return i1.isDefined(_this._findModelBySelectedOption(option));
                });
            }
            return filteredOptions;
        };
        AdaptSelectComponent.prototype._filterDynamicMaxTitle = function () {
            var filteredOptions = this._getFilteredOptions();
            if (filteredOptions.length === 0) {
                this.title = this.texts.defaultTitle;
            }
            else {
                this.title = filteredOptions.map(function (option) { return option.name; })
                    .join(', ');
            }
        };
        AdaptSelectComponent.prototype._numSelectedTitle = function () {
            var _this = this;
            if (!this._options) {
                return;
            }
            var isEqual = function () { return _this.model.length === _this._options.length; };
            var _c = this.texts, checkedPlural = _c.checkedPlural, checked = _c.checked, checkedAll = _c.checkedAll;
            this.settings.showCheckedAll && isEqual() ?
                this.title = checkedAll + " " + checkedPlural :
                this.title = this.numSelected + " " + (this.numSelected === 1 ? checked : checkedPlural);
        };
        AdaptSelectComponent.prototype._updateMenuWidth = function () {
            if (!this.isMobile) {
                this._setMenuMinWidth(this.dropdownItem);
            }
        };
        AdaptSelectComponent.prototype._setMenuMinWidth = function (el) {
            if (el && el.toArray().length > 0) {
                this._renderer.setStyle(this.menu.nativeElement, 'minWidth', this.settings.containerWidth + "px");
            }
        };
        AdaptSelectComponent.prototype._attachToBody = function () {
            var _this = this;
            var _c = this.settings, placement = _c.placement, appendToBody = _c.appendToBody, positionTo = _c.positionTo, appendTo = _c.appendTo;
            if (this.menu && this.element) {
                var host = positionTo || this.element.nativeElement;
                var menu_1 = this.menu.nativeElement;
                var labelElement = this.labelElement && this.labelElement.nativeElement;
                var menuStyle = function (property, val) { return _this._renderer.setStyle(menu_1, property, val); };
                this.placement = this._setPlacement(host, menu_1, placement);
                this.isAnimationReady = true;
                this.animationState = 'open';
                if (!this.isMobile && this.placement === 'top' && this.label) {
                    menuStyle('marginBottom', -(labelElement.offsetHeight) + "px");
                }
                if (this.isAttachedToBody) {
                    this._renderer.addClass(menu_1, 'dd-menu--in-body');
                    this._renderer.appendChild(document.body, menu_1);
                }
                else if (appendTo) {
                    this._renderer.appendChild(appendTo, menu_1);
                }
                if (this.isAttachedToBody || appendTo) {
                    this._menuAttached = menu_1;
                    if (!this.isMobile) {
                        menuStyle('maxWidth', host.offsetWidth + "px");
                        menuStyle('bottom', this.placement === 'top' ? 'auto' : '');
                        i1.positionElements(host, menu_1, this.placement, appendToBody || appendTo === 'body');
                        if (this._menuKeyDownSubscription) {
                            this._menuKeyDownSubscription.unsubscribe();
                        }
                        this._menuKeyDownSubscription = this._focusHandle.registerKeyDown(menu_1);
                    }
                }
            }
        };
        AdaptSelectComponent.prototype._setPlacement = function (host, menu, placement) {
            if (placement === 'auto') {
                var placements = i1.availableTargetPlacements(host, menu);
                this.isMobilePlacement = placement.indexOf('mobile') !== -1 || !placements.length;
                if (placements.indexOf('top') !== -1 && placements.indexOf('bottom') === -1) {
                    placement = 'top';
                }
                else {
                    placement = 'bottom';
                }
            }
            return placement;
        };
        AdaptSelectComponent.prototype._detachFromBody = function () {
            if (this._menuAttached) {
                this._renderer.removeChild(document.body, this._menuAttached);
                this._menuAttached = null;
            }
        };
        AdaptSelectComponent.prototype._checkTooltipOption = function (isNumSelectedTitle) {
            var _this = this;
            if (isNumSelectedTitle === void 0) { isNumSelectedTitle = false; }
            if (this.settings.showTooltip && this.titleWidth) {
                /**
                 * Additional func to parse the string for avoiding the issues
                 */
                var parseString_1 = function (value, num) {
                    if (num === void 0) { num = 10; }
                    return parseInt(value, num);
                };
                this._ngZone.onStable
                    .asObservable()
                    .pipe(operators.distinctUntilChanged(), operators.take(1))
                    .subscribe(function () {
                    if (isNumSelectedTitle) {
                        var filteredOptions = _this._getFilteredOptions();
                        if (filteredOptions.length) {
                            _this.tooltipText = filteredOptions.map(function (option) { return option.name; }).join(', ');
                        }
                    }
                    else {
                        var element = _this.titleWidth.nativeElement;
                        var parentElement = element.parentElement;
                        var computed = getComputedStyle(parentElement);
                        var paddingLeft = parseString_1(computed.paddingLeft);
                        var paddingRight = parseString_1(computed.paddingRight);
                        var total = paddingLeft + paddingRight + element.clientWidth;
                        parentElement.clientWidth < total ? _this.tooltipText = _this.title : _this.tooltipText = '';
                    }
                });
            }
        };
        AdaptSelectComponent.prototype._applyWrapperScroll = function () {
            if (this._scrollManager) {
                this.isMobile && this.isVisible ? this._scrollManager.hide(this) : this._scrollManager.show(this);
            }
        };
        AdaptSelectComponent.prototype._onModelArrayModified = function () {
            this._updateErrorState();
            this._updateTitleView();
        };
        AdaptSelectComponent.prototype._createModelItem = function (option) {
            return this.settings.modelFormat === exports.SelectModelFormat.number
                ? option.id
                : { id: option.id, name: option.name };
        };
        AdaptSelectComponent.prototype._findModelBySelectedOption = function (option) {
            var _this = this;
            if (!this.model || !option) {
                return;
            }
            return this.model.find(function (item) {
                if (lodashEs.isUndefined(item)) {
                    return;
                }
                if (_this.settings.emptyOption && item === null && option.id === null) {
                    return true;
                }
                return item === option.id || (item && item.id === option.id);
            });
        };
        AdaptSelectComponent.prototype._enableTrackingAnchorPosition = function () {
            var _this = this;
            if ((this.settings.appendToBody || this.settings.appendTo === 'body') && this.settings.enablePositionTracking && !this.isMobile) {
                var getSizeAndPositionFromRect_1 = function (rect) {
                    return { height: rect.height, width: rect.width, left: rect.left, top: rect.top };
                };
                var anchor_1 = this.settings.positionTo || this.element.nativeElement;
                var previousAnchorRect_1 = getSizeAndPositionFromRect_1(anchor_1.getBoundingClientRect());
                this._trackingTimerId = window.setInterval(function () {
                    var currentAnchorRect = getSizeAndPositionFromRect_1(anchor_1.getBoundingClientRect());
                    if (!lodashEs.isEqual(previousAnchorRect_1, currentAnchorRect)) {
                        previousAnchorRect_1 = currentAnchorRect;
                        _this._attachToBody();
                        i1.SafeCdr.detectChanges(_this._changeDetectorRef);
                    }
                }, this.settings.positionTrackingIntervalMs);
            }
        };
        return AdaptSelectComponent;
    }(i2.AdaptRadarGenericDirective));
    AdaptSelectComponent.ɵfac = function AdaptSelectComponent_Factory(t) { return new (t || AdaptSelectComponent)(i0__namespace.ɵɵdirectiveInject(AdaptSelectSearchFilter), i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptDeviceDetectionService), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptFocusMonitorService), i0__namespace.ɵɵdirectiveInject(i1__namespace.ScrollManageService), i0__namespace.ɵɵdirectiveInject(i0__namespace.ChangeDetectorRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.NgZone), i0__namespace.ɵɵdirectiveInject(i1__namespace.LayerService), i0__namespace.ɵɵdirectiveInject(i3__namespace$1.Router, 8), i0__namespace.ɵɵdirectiveInject(i0__namespace.IterableDiffers), i0__namespace.ɵɵdirectiveInject(i4__namespace.EventManager), i0__namespace.ɵɵdirectiveInject(i2__namespace$1.Directionality), i0__namespace.ɵɵdirectiveInject(i1__namespace.ResizeService), i0__namespace.ɵɵdirectiveInject(i0__namespace.Injector), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptRadarAngularCustomEventName, 8)); };
    AdaptSelectComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptSelectComponent, selectors: [["adapt-select"]], viewQuery: function AdaptSelectComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$j, 5);
                i0__namespace.ɵɵviewQuery(_c1$f, 5);
                i0__namespace.ɵɵviewQuery(_c2$d, 5);
                i0__namespace.ɵɵviewQuery(_c3$9, 5);
                i0__namespace.ɵɵviewQuery(_c4$6, 5);
                i0__namespace.ɵɵviewQuery(_c5$5, 5);
                i0__namespace.ɵɵviewQuery(i1.AdaptCustomActionsComponent, 5);
                i0__namespace.ɵɵviewQuery(_c6$3, 5);
                i0__namespace.ɵɵviewQuery(_c7$2, 5);
                i0__namespace.ɵɵviewQuery(i1.AdaptFocusMonitorDirective, 5, i1.AdaptFocusMonitorDirective);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.menu = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.filterInput = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.labelElement = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.toggleDropdownBtn = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.titleWidth = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.optionRef = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.customActionsComponent = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.loadMoreBtn = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.dropdownItem = _t);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.focusMonitoring = _t);
            }
        }, hostVars: 9, hostBindings: function AdaptSelectComponent_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵattribute("id", ctx.id);
                i0__namespace.ɵɵclassProp("adapt-select", true)("adapt-select--mobile", ctx.isMobile)("is-responsive", ctx.settings.fullWidth)("is-error", ctx.isError);
            }
        }, inputs: { settings: "settings", showMoreButton: "showMoreButton", loadMoreCallback: "loadMoreCallback", texts: "texts", single: "single", label: "label", displayMessage: "displayMessage", ariaLabelledby: ["aria-labelledby", "ariaLabelledby"], ariaDescribedBy: ["aria-describedby", "ariaDescribedBy"], filterDebounceTime: "filterDebounceTime", id: "id", testID: "testID", tooltipInputIcon: "tooltipInputIcon", tooltipInputText: "tooltipInputText", whiteSpaceOption: "whiteSpaceOption", emitModelChangeWithSingleValue: "emitModelChangeWithSingleValue", popoverIcon: "popoverIcon", popoverPlacement: "popoverPlacement", popoverTriggers: "popoverTriggers", popoverContent: "popoverContent", loadingState: "loadingState", loadingDataInProgress: "loadingDataInProgress", readonly: "readonly", disabledOptionResolver: "disabledOptionResolver", parentElementRef: "parentElementRef", options: "options", toggleStateValidation: "toggleStateValidation", disabled: "disabled", customClass: "customClass", required: "required" }, outputs: { selectionLimitReached: "selectionLimitReached", dropdownClosed: "dropdownClosed", dropdownOpened: "dropdownOpened", modelArrayChanged: "modelArrayChanged", filterValueChanged: "filterValueChanged" }, features: [i0__namespace.ɵɵProvidersFeature([
                MULTISELECT_VALUE_ACCESSOR,
                AdaptSelectSearchFilter,
                i1.AdaptFocusMonitorService
            ]), i0__namespace.ɵɵInheritDefinitionFeature, i0__namespace.ɵɵNgOnChangesFeature], decls: 21, vars: 7, consts: [[1, "dropdown", "dropdown_select"], [1, "adapt-select-label-wrapper"], ["class", "form-control-label mb-1 d-inline-block", 3, "sr-only", "click", 4, "ngIf"], [4, "ngIf"], ["type", "button", "role", "button", "aria-haspopup", "listbox", "class", "dropdown-toggle btn btn-secondary", 3, "ngClass", "disabled", "is-active", "dropdown-toggle-up", "click", "keyup", 4, "ngIf"], ["class", "dropdown_select__error", 4, "ngIf"], [1, "form-control-label", "mb-1", "d-inline-block", 3, "click"], ["labelElement", ""], [1, "letter-space"], [1, "form-control-required"], ["placement", "top", 3, "adaptRadarDisableEventSending", "name", "adaptTooltip", 4, "ngIf"], [3, "adaptRadarDisableEventSending", "name", "placement", "adaptPopover", "triggers", 4, "ngIf"], ["placement", "top", 3, "adaptRadarDisableEventSending", "name", "adaptTooltip"], [3, "adaptRadarDisableEventSending", "name", "placement", "adaptPopover", "triggers"], ["type", "button", "role", "button", "aria-haspopup", "listbox", 1, "dropdown-toggle", "btn", "btn-secondary", 3, "ngClass", "disabled", "click", "keyup"], ["toggleDropdownBtn", ""], ["type", "button", "role", "button", "aria-haspopup", "listbox", 1, "dropdown-toggle", "btn", "btn-secondary", 3, "adaptRadarDisableEventSending", "adaptTooltip", "placement", "ngClass", "disabled", "click", "keyup"], [1, "dropdown-toggle-title"], ["titleWidth", ""], ["class", "dropdown_select__menu", "role", "listbox", 3, "pull-right", "select-hidden", "bottom-gap", "dropdown-menu-right", "dropdown-menu-mobile-placement", "sticky", "max-height", "zIndex", "is-top", "ngClass", 4, "ngIf"], ["role", "listbox", 1, "dropdown_select__menu", 3, "ngClass"], ["menu", ""], [1, "select_option_container"], ["class", "form-group d-icon-search dropdown_select__search", "tabindex", "-1", 4, "ngIf"], [1, "dropdown_select__menu-content-wrapper"], ["class", "dropdown-header", 4, "ngIf"], ["class", "d-flex dropdown-item", 4, "ngIf"], [1, "dropdown_select__menu-content"], ["role", "presentation", "class", "dropdown-header dropdown-help-text ng-scope", "tabindex", "-1", 4, "ngIf"], [1, "select-loader-container"], [1, "loader-container"], [1, "loader-section"], ["tabindex", "-1", 1, "form-group", "d-icon-search", "dropdown_select__search"], ["type", "text", "role", "searchbox", "adaptFocusMonitor", "", 1, "form-control", 3, "placeholder", "formControl"], ["filterInput", ""], ["type", "button", "adaptFocusMonitor", "", "class", "dropdown_select__search-cross d-icon-cross_adapt", 3, "click", 4, "ngIf"], ["type", "button", "adaptFocusMonitor", "", 1, "dropdown_select__search-cross", "d-icon-cross_adapt", 3, "click"], [1, "dropdown-header"], [1, "d-flex", "dropdown-item"], [1, "dropdown__counter"], ["class", "d-flex", 3, "actions", 4, "ngIf"], [1, "d-flex", 3, "actions"], ["class", "dropdown-item", "role", "option", "tabindex", "0", 3, "adaptFocusMonitor", "ngClass", "active", "click", 4, "ngIf"], ["class", "dropdown-item", "role", "option", "tabindex", "0", 3, "adaptFocusMonitor", "disabled", "ngClass", "active", "click", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["role", "option", "tabindex", "0", 1, "dropdown-item", 3, "adaptFocusMonitor", "ngClass", "click"], ["optionRef", ""], ["dropdownItem", ""], ["role", "option", "tabindex", "0", 1, "dropdown-item", 3, "adaptFocusMonitor", "disabled", "ngClass", "click"], [1, "list-unstyled"], ["class", "dropdown-item focusable", "tabindex", "0", "role", "option", 3, "adaptFocusMonitor", "keydown.space", "keyup.enter", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["tabindex", "0", "role", "option", 1, "dropdown-item", "focusable", 3, "adaptFocusMonitor", "keydown.space", "keyup.enter"], [1, "checkbox"], [1, "checkbox__label", "d-block"], ["type", "checkbox", "tabindex", "-1", 1, "checkbox__input", 3, "disabled", "checked", "click"], [1, "checkbox__item"], ["class", "dropdown-item__icon", 3, "adaptRadarDisableEventSending", "name", "classList", 4, "ngIf"], ["class", "badge dropdown-item__badge", 3, "ngClass", 4, "ngIf"], [1, "dropdown-item__icon", 3, "adaptRadarDisableEventSending", "name", "classList"], [1, "badge", "dropdown-item__badge", 3, "ngClass"], ["role", "presentation", "tabindex", "-1", 1, "dropdown-header", "dropdown-help-text", "ng-scope"], ["type", "button", "role", "button", "adaptFocusMonitor", "", 1, "btn", "btn-link", 3, "adaptInlineLoader", "activeText", "click"], ["loadMoreBtn", ""], ["class", "dropdown_select__overlay", 4, "ngIf"], ["class", "dropdown_select__menu dropdown_select__menu--mobile", "role", "listbox", 3, "pull-right", "dropdown-menu-right", "max-height", "zIndex", 4, "ngIf"], [1, "dropdown_select__overlay"], ["role", "listbox", 1, "dropdown_select__menu", "dropdown_select__menu--mobile"], ["class", "m-select__header", 3, "ngClass", 4, "ngIf"], [1, "m-select__header", 3, "ngClass"], ["class", "m-select__button m-select__button--cancel", 3, "click", 4, "ngIf"], ["class", "m-select__title", 4, "ngIf"], ["class", "m-select__button m-select__button--done", 3, "click", 4, "ngIf"], [1, "m-select__button", "m-select__button--cancel", 3, "click"], [1, "m-select__title"], [1, "m-select__button", "m-select__button--done", 3, "click"], ["class", "form-group d-icon-search dropdown_select__search", 3, "ngClass", 4, "ngIf"], ["class", "d-flex dropdown-item dropdown_select__wrap", 4, "ngIf"], ["role", "presentation", "class", "dropdown-header dropdown-help-text ng-scope", 4, "ngIf"], [1, "form-group", "d-icon-search", "dropdown_select__search", 3, "ngClass"], ["type", "text", "aria-describedby", "sizing-addon3", 1, "form-control", 3, "adaptFocusMonitor", "placeholder", "formControl"], ["href", "#", "class", "dropdown_select__search-cross d-icon-cross_adapt", 3, "click", 4, "ngIf"], ["href", "#", 1, "dropdown_select__search-cross", "d-icon-cross_adapt", 3, "click"], [1, "d-flex", "dropdown-item", "dropdown_select__wrap"], ["class", "dropdown-item", "role", "option", "tabindex", "0", 3, "active", "click", 4, "ngIf"], ["class", "dropdown-item", "role", "option", "tabindex", "0", 3, "active", "disabled", "click", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["role", "option", "tabindex", "0", 1, "dropdown-item", 3, "click"], ["role", "option", "tabindex", "0", 1, "dropdown-item", 3, "disabled", "click"], [1, "list-unstyled", 3, "ngClass"], ["class", "dropdown-item focusable", "role", "option", "tabindex", "0", 3, "adaptFocusMonitor", "keydown.space", "keyup.enter", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["role", "option", "tabindex", "0", 1, "dropdown-item", "focusable", 3, "adaptFocusMonitor", "keydown.space", "keyup.enter"], ["role", "presentation", 1, "dropdown-header", "dropdown-help-text", "ng-scope"], ["type", "button", "role", "button", "adaptFocusMonitor", "", 1, "btn", "btn-link", "btn-link__load-more_mobile", 3, "adaptInlineLoader", "activeText", "click"], [1, "dropdown_select__error"], [1, "form-control-feedback", "m-0", "pt-1", "pb-2"]], template: function AdaptSelectComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelementStart(0, "div", 0);
                i0__namespace.ɵɵtext(1, "\n  ");
                i0__namespace.ɵɵelementStart(2, "div", 1);
                i0__namespace.ɵɵtext(3, "\n    ");
                i0__namespace.ɵɵtemplate(4, AdaptSelectComponent_span_4_Template, 7, 5, "span", 2);
                i0__namespace.ɵɵtext(5, "\n    ");
                i0__namespace.ɵɵtemplate(6, AdaptSelectComponent_ng_container_6_Template, 7, 2, "ng-container", 3);
                i0__namespace.ɵɵtext(7, "\n  ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(8, "\n\n  ");
                i0__namespace.ɵɵtemplate(9, AdaptSelectComponent_button_9_Template, 3, 20, "button", 4);
                i0__namespace.ɵɵtext(10, "\n\n  ");
                i0__namespace.ɵɵtemplate(11, AdaptSelectComponent_ng_container_11_Template, 10, 20, "ng-container", 3);
                i0__namespace.ɵɵtext(12, "\n\n  ");
                i0__namespace.ɵɵtemplate(13, AdaptSelectComponent_ng_container_13_Template, 4, 1, "ng-container", 3);
                i0__namespace.ɵɵtext(14, "\n\n\n  ");
                i0__namespace.ɵɵtext(15, "\n\n  ");
                i0__namespace.ɵɵtemplate(16, AdaptSelectComponent_ng_container_16_Template, 6, 2, "ng-container", 3);
                i0__namespace.ɵɵtext(17, "\n\n  ");
                i0__namespace.ɵɵtemplate(18, AdaptSelectComponent_div_18_Template, 5, 3, "div", 5);
                i0__namespace.ɵɵtext(19, "\n\n\n");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(20, "\n");
            }
            if (rf & 2) {
                i0__namespace.ɵɵadvance(4);
                i0__namespace.ɵɵproperty("ngIf", ctx.label);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.label && !ctx.settings.hideLabel);
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngIf", !ctx.settings.showTooltip);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.settings.showTooltip);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", !ctx.isMobile);
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngIf", ctx.isMobile);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.isError && ctx.displayMessage);
            }
        }, directives: [i3__namespace.NgIf, i1__namespace.AdaptIconComponent, i1__namespace.AdaptTooltipDirective, i1__namespace.AdaptPopoverDirective, i3__namespace.NgClass, i1__namespace.AdaptDragonInputHandlerDirective, i6__namespace.DefaultValueAccessor, i1__namespace.AdaptFocusMonitorDirective, i6__namespace.NgControlStatus, i6__namespace.FormControlDirective, i1__namespace.AdaptCustomActionsComponent, i3__namespace.NgForOf, i1__namespace.AdaptInlineStandaloneDirective], pipes: [i3__namespace.SlicePipe], styles: ["\n    .btn-group .adapt-select {\n      margin-bottom: 0\n    }\n\n    .select-hidden {\n      visibility: hidden;\n    }\n\n    .dropdown_select .dropdown_select__search-cross {\n      border: none;\n      background: transparent;\n    }\n\n    .adapt-select--mobile .dropdown-item .checkbox__label .checkbox__item:before,\n    .adapt-select--mobile .dropdown-item .checkbox__label .checkbox__item:after {\n      top: 0.5rem;\n    }\n\n    .dropdown__counter {\n      display: inline-flex;\n      overflow: hidden;\n      color: #959799;\n      white-space: nowrap;\n      opacity: 0;\n      align-self: center;\n    }\n\n    .btn-link__load-more_mobile {\n      border: 0;\n      padding: 0.375rem .875rem;\n    }\n\n    .list-unstyled__load-more_mobile {\n      margin-bottom: 0;\n    }\n  "], encapsulation: 2, data: { animation: [
                i1$1.trigger('selectMenuAnim', [
                    i1$1.transition('void => *', [
                        i1$1.style({ bottom: '-100%', opacity: .2 }),
                        i1$1.animate(".4s " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn, i1$1.style({ bottom: '0', opacity: 1 }))
                    ]),
                    i1$1.transition('* => void', [
                        i1$1.style({ bottom: '0', opacity: 1 }),
                        i1$1.animate(".6s " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ bottom: '-100%', opacity: 0 }))
                    ])
                ]),
                i1$1.trigger('selectOverlayAnim', [
                    i1$1.transition('void => *', [
                        i1$1.style({ visibility: 'hidden', opacity: 0 }),
                        i1$1.animate(".6s " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn, i1$1.style({ visibility: 'visible', opacity: 1 }))
                    ]),
                    i1$1.transition('* => void', [
                        i1$1.style({ visibility: 'visible', opacity: 1 }),
                        i1$1.animate(".6s " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ visibility: 'hidden', opacity: 0 }))
                    ])
                ]),
                i1$1.trigger('selectAnim', [
                    i1$1.state('close', i1$1.style({ transform: 'scale(.5)', opacity: '0' })),
                    i1$1.state('open', i1$1.style({ transform: 'scale(1)', opacity: '1' })),
                    i1$1.transition('close => open', i1$1.animate(i1.ANIMATION_DURATION.fast + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionOut)),
                    i1$1.transition(':leave', [
                        i1$1.style({ transform: 'scale(1)', opacity: '1' }),
                        i1$1.animate(i1.ANIMATION_DURATION.fast + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionOut, i1$1.style({ transform: 'scale(.5)', opacity: '0' }))
                    ])
                ]),
                i1$1.trigger('searchAnim', [
                    i1$1.transition('void => *', [
                        i1$1.style({ visibility: 'hidden', opacity: 0 }),
                        i1$1.animate(i1.ANIMATION_DURATION.fast + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn, i1$1.style({ visibility: 'visible', opacity: .6 }))
                    ]),
                    i1$1.transition('* => void', [
                        i1$1.style({ visibility: 'visible', opacity: .6 }),
                        i1$1.animate(i1.ANIMATION_DURATION.fast + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ visibility: 'hidden', opacity: 0 }))
                    ])
                ]),
                i1$1.trigger('validationFeedbackAnimation', [
                    i1$1.transition(':enter', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                    ]),
                    i1$1.transition(':leave', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                    ])
                ]),
                i1$1.trigger('validationFeedbackChangeAnimation', [
                    i1$1.transition('* => *', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.opacity)
                    ])
                ]),
                i1$1.trigger('openClose', [
                    i1$1.state('show', i1$1.style({
                        width: '*',
                        marginRight: '.875rem',
                        opacity: 1
                    })),
                    // '*, hide' have the same styles for the proper close animation
                    i1$1.state('*', i1$1.style({
                        marginRight: '0',
                        width: '0px',
                        opacity: 0
                    })),
                    i1$1.state('hide', i1$1.style({
                        marginRight: '0',
                        width: '0px',
                        opacity: 0
                    })),
                    i1$1.transition('show => hide', [
                        i1$1.animate(i1.ANIMATION_DURATION.medium + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn)
                    ]),
                    i1$1.transition('hide => show', [
                        i1$1.animate(i1.ANIMATION_DURATION.medium + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut)
                    ]),
                    i1$1.state('showRTL', i1$1.style({
                        width: '*',
                        marginRight: '0',
                        marginLeft: '.875rem',
                        opacity: 1
                    })),
                    i1$1.state('hideRTL', i1$1.style({
                        marginRight: '-2px',
                        marginLeft: '0',
                        width: '0px',
                        opacity: 0
                    })),
                    i1$1.transition('showRTL => hideRTL', [
                        i1$1.animate(i1.ANIMATION_DURATION.medium + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn)
                    ]),
                    i1$1.transition('hideRTL => showRTL', [
                        i1$1.animate(i1.ANIMATION_DURATION.medium + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut)
                    ])
                ]),
                i1$1.trigger('actionsAnim', [
                    i1$1.state('show', i1$1.style({
                        height: '*',
                        padding: '*',
                        opacity: 1
                    })),
                    i1$1.state('*', i1$1.style({
                        height: '0px',
                        padding: '0px',
                        opacity: 0
                    })),
                    i1$1.state('hide', i1$1.style({
                        height: '0px',
                        padding: '0px',
                        opacity: 0
                    })),
                    i1$1.transition('show => hide', [
                        i1$1.animate(i1.ANIMATION_DURATION.fast + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn)
                    ]),
                    i1$1.transition('hide => show', [
                        i1$1.animate(i1.ANIMATION_DURATION.fast + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut)
                    ])
                ])
            ] }, changeDetection: 0 });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptSelectComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-select',
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: {
                            '[class.adapt-select]': 'true',
                            '[class.adapt-select--mobile]': 'isMobile',
                            '[class.is-responsive]': 'settings.fullWidth',
                            '[class.is-error]': 'isError',
                            '[attr.id]': 'id'
                        },
                        templateUrl: './select.component.html',
                        // TODO: remove styles after the adapt-css package update
                        styles: ["\n    .btn-group .adapt-select {\n      margin-bottom: 0\n    }\n\n    .select-hidden {\n      visibility: hidden;\n    }\n\n    .dropdown_select .dropdown_select__search-cross {\n      border: none;\n      background: transparent;\n    }\n\n    .adapt-select--mobile .dropdown-item .checkbox__label .checkbox__item:before,\n    .adapt-select--mobile .dropdown-item .checkbox__label .checkbox__item:after {\n      top: 0.5rem;\n    }\n\n    .dropdown__counter {\n      display: inline-flex;\n      overflow: hidden;\n      color: #959799;\n      white-space: nowrap;\n      opacity: 0;\n      align-self: center;\n    }\n\n    .btn-link__load-more_mobile {\n      border: 0;\n      padding: 0.375rem .875rem;\n    }\n\n    .list-unstyled__load-more_mobile {\n      margin-bottom: 0;\n    }\n  "],
                        providers: [
                            MULTISELECT_VALUE_ACCESSOR,
                            AdaptSelectSearchFilter,
                            i1.AdaptFocusMonitorService
                        ],
                        encapsulation: i0.ViewEncapsulation.None,
                        animations: [
                            i1$1.trigger('selectMenuAnim', [
                                i1$1.transition('void => *', [
                                    i1$1.style({ bottom: '-100%', opacity: .2 }),
                                    i1$1.animate(".4s " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn, i1$1.style({ bottom: '0', opacity: 1 }))
                                ]),
                                i1$1.transition('* => void', [
                                    i1$1.style({ bottom: '0', opacity: 1 }),
                                    i1$1.animate(".6s " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ bottom: '-100%', opacity: 0 }))
                                ])
                            ]),
                            i1$1.trigger('selectOverlayAnim', [
                                i1$1.transition('void => *', [
                                    i1$1.style({ visibility: 'hidden', opacity: 0 }),
                                    i1$1.animate(".6s " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn, i1$1.style({ visibility: 'visible', opacity: 1 }))
                                ]),
                                i1$1.transition('* => void', [
                                    i1$1.style({ visibility: 'visible', opacity: 1 }),
                                    i1$1.animate(".6s " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ visibility: 'hidden', opacity: 0 }))
                                ])
                            ]),
                            i1$1.trigger('selectAnim', [
                                i1$1.state('close', i1$1.style({ transform: 'scale(.5)', opacity: '0' })),
                                i1$1.state('open', i1$1.style({ transform: 'scale(1)', opacity: '1' })),
                                i1$1.transition('close => open', i1$1.animate(i1.ANIMATION_DURATION.fast + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionOut)),
                                i1$1.transition(':leave', [
                                    i1$1.style({ transform: 'scale(1)', opacity: '1' }),
                                    i1$1.animate(i1.ANIMATION_DURATION.fast + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionOut, i1$1.style({ transform: 'scale(.5)', opacity: '0' }))
                                ])
                            ]),
                            i1$1.trigger('searchAnim', [
                                i1$1.transition('void => *', [
                                    i1$1.style({ visibility: 'hidden', opacity: 0 }),
                                    i1$1.animate(i1.ANIMATION_DURATION.fast + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn, i1$1.style({ visibility: 'visible', opacity: .6 }))
                                ]),
                                i1$1.transition('* => void', [
                                    i1$1.style({ visibility: 'visible', opacity: .6 }),
                                    i1$1.animate(i1.ANIMATION_DURATION.fast + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ visibility: 'hidden', opacity: 0 }))
                                ])
                            ]),
                            i1$1.trigger('validationFeedbackAnimation', [
                                i1$1.transition(':enter', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                                ]),
                                i1$1.transition(':leave', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                                ])
                            ]),
                            i1$1.trigger('validationFeedbackChangeAnimation', [
                                i1$1.transition('* => *', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.opacity)
                                ])
                            ]),
                            i1$1.trigger('openClose', [
                                i1$1.state('show', i1$1.style({
                                    width: '*',
                                    marginRight: '.875rem',
                                    opacity: 1
                                })),
                                // '*, hide' have the same styles for the proper close animation
                                i1$1.state('*', i1$1.style({
                                    marginRight: '0',
                                    width: '0px',
                                    opacity: 0
                                })),
                                i1$1.state('hide', i1$1.style({
                                    marginRight: '0',
                                    width: '0px',
                                    opacity: 0
                                })),
                                i1$1.transition('show => hide', [
                                    i1$1.animate(i1.ANIMATION_DURATION.medium + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn)
                                ]),
                                i1$1.transition('hide => show', [
                                    i1$1.animate(i1.ANIMATION_DURATION.medium + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut)
                                ]),
                                i1$1.state('showRTL', i1$1.style({
                                    width: '*',
                                    marginRight: '0',
                                    marginLeft: '.875rem',
                                    opacity: 1
                                })),
                                i1$1.state('hideRTL', i1$1.style({
                                    marginRight: '-2px',
                                    marginLeft: '0',
                                    width: '0px',
                                    opacity: 0
                                })),
                                i1$1.transition('showRTL => hideRTL', [
                                    i1$1.animate(i1.ANIMATION_DURATION.medium + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn)
                                ]),
                                i1$1.transition('hideRTL => showRTL', [
                                    i1$1.animate(i1.ANIMATION_DURATION.medium + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut)
                                ])
                            ]),
                            i1$1.trigger('actionsAnim', [
                                i1$1.state('show', i1$1.style({
                                    height: '*',
                                    padding: '*',
                                    opacity: 1
                                })),
                                i1$1.state('*', i1$1.style({
                                    height: '0px',
                                    padding: '0px',
                                    opacity: 0
                                })),
                                i1$1.state('hide', i1$1.style({
                                    height: '0px',
                                    padding: '0px',
                                    opacity: 0
                                })),
                                i1$1.transition('show => hide', [
                                    i1$1.animate(i1.ANIMATION_DURATION.fast + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn)
                                ]),
                                i1$1.transition('hide => show', [
                                    i1$1.animate(i1.ANIMATION_DURATION.fast + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut)
                                ])
                            ])
                        ],
                        preserveWhitespaces: true,
                        changeDetection: i0.ChangeDetectionStrategy.OnPush
                    }]
            }], function () {
            return [{ type: AdaptSelectSearchFilter }, { type: i0__namespace.Renderer2 }, { type: i1__namespace.AdaptDeviceDetectionService }, { type: i0__namespace.ElementRef }, { type: i1__namespace.AdaptFocusMonitorService }, { type: i1__namespace.ScrollManageService }, { type: i0__namespace.ChangeDetectorRef }, { type: i0__namespace.NgZone }, { type: i1__namespace.LayerService }, { type: i3__namespace$1.Router, decorators: [{
                            type: i0.Optional
                        }] }, { type: i0__namespace.IterableDiffers }, { type: i4__namespace.EventManager }, { type: i2__namespace$1.Directionality }, { type: i1__namespace.ResizeService }, { type: i0__namespace.Injector }, { type: i1__namespace.AdaptTranslateService }, { type: i2__namespace.AdaptRadarService }, { type: i1__namespace.AdaptRadarAngularCustomEventName, decorators: [{
                            type: i0.Optional
                        }] }];
        }, { settings: [{
                    type: i0.Input
                }], showMoreButton: [{
                    type: i0.Input
                }], loadMoreCallback: [{
                    type: i0.Input
                }], texts: [{
                    type: i0.Input
                }], single: [{
                    type: i0.Input
                }], label: [{
                    type: i0.Input
                }], displayMessage: [{
                    type: i0.Input
                }], ariaLabelledby: [{
                    type: i0.Input,
                    args: ['aria-labelledby']
                }], ariaDescribedBy: [{
                    type: i0.Input,
                    args: ['aria-describedby']
                }], filterDebounceTime: [{
                    type: i0.Input
                }], id: [{
                    type: i0.Input
                }], testID: [{
                    type: i0.Input
                }], tooltipInputIcon: [{
                    type: i0.Input
                }], tooltipInputText: [{
                    type: i0.Input
                }], whiteSpaceOption: [{
                    type: i0.Input
                }], emitModelChangeWithSingleValue: [{
                    type: i0.Input
                }], popoverIcon: [{
                    type: i0.Input
                }], popoverPlacement: [{
                    type: i0.Input
                }], popoverTriggers: [{
                    type: i0.Input
                }], popoverContent: [{
                    type: i0.Input
                }], loadingState: [{
                    type: i0.Input
                }], loadingDataInProgress: [{
                    type: i0.Input
                }], readonly: [{
                    type: i0.Input
                }], disabledOptionResolver: [{
                    type: i0.Input
                }], selectionLimitReached: [{
                    type: i0.Output
                }], dropdownClosed: [{
                    type: i0.Output
                }], dropdownOpened: [{
                    type: i0.Output
                }], modelArrayChanged: [{
                    type: i0.Output
                }], filterValueChanged: [{
                    type: i0.Output
                }], menu: [{
                    type: i0.ViewChild,
                    args: ['menu']
                }], filterInput: [{
                    type: i0.ViewChild,
                    args: ['filterInput']
                }], labelElement: [{
                    type: i0.ViewChild,
                    args: ['labelElement']
                }], toggleDropdownBtn: [{
                    type: i0.ViewChild,
                    args: ['toggleDropdownBtn']
                }], titleWidth: [{
                    type: i0.ViewChild,
                    args: ['titleWidth']
                }], optionRef: [{
                    type: i0.ViewChild,
                    args: ['optionRef', { static: false }]
                }], dropdownItem: [{
                    type: i0.ViewChildren,
                    args: ['dropdownItem']
                }], focusMonitoring: [{
                    type: i0.ViewChildren,
                    args: [i1.AdaptFocusMonitorDirective,
                        { read: i1.AdaptFocusMonitorDirective }]
                }], customActionsComponent: [{
                    type: i0.ViewChild,
                    args: [i1.AdaptCustomActionsComponent, { static: false }]
                }], loadMoreBtn: [{
                    type: i0.ViewChild,
                    args: ['loadMoreBtn']
                }], parentElementRef: [{
                    type: i0.Input
                }], options: [{
                    type: i0.Input
                }], toggleStateValidation: [{
                    type: i0.Input
                }], disabled: [{
                    type: i0.Input
                }], customClass: [{
                    type: i0.Input
                }], required: [{
                    type: i0.Input
                }] });
    })();

    var _c0$i = ["list"];
    function AdaptListComponent_adapt_rx_control_label_3_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-rx-control-label", 9);
        }
        if (rf & 2) {
            var ctx_r0 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("label", ctx_r0.label)("requiredLabel", ctx_r0.texts.requiredText)("showRequiredLabel", ctx_r0.required)("tooltip", ctx_r0.tooltipConfig);
        }
    }
    function AdaptListComponent_ng_container_9_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵelementStart(2, "adapt-empty-state", 10);
            i0__namespace.ɵɵtext(3, "\n            ");
            i0__namespace.ɵɵelementStart(4, "div", 11);
            i0__namespace.ɵɵtext(5, "\n              ");
            i0__namespace.ɵɵprojection(6);
            i0__namespace.ɵɵtext(7, "\n            ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(8, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(9, "\n        ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("type", "objects")("label", ctx_r1.texts.notFound);
        }
    }
    function AdaptListComponent_ng_container_14_adapt_icon_6_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-icon", 19);
        }
        if (rf & 2) {
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", "dots");
        }
    }
    function AdaptListComponent_ng_container_14_adapt_icon_10_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-icon", 20);
        }
        if (rf & 2) {
            var item_r6 = i0__namespace.ɵɵnextContext().$implicit;
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", item_r6.icon)("ngClass", "text-" + item_r6.iconType);
        }
    }
    function AdaptListComponent_ng_container_14_span_12_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span", 21);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var item_r6 = i0__namespace.ɵɵnextContext().$implicit;
            i0__namespace.ɵɵproperty("ngClass", "badge-" + item_r6.badgeType);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(item_r6.badgeText);
        }
    }
    function AdaptListComponent_ng_container_14_button_15_Template(rf, ctx) {
        if (rf & 1) {
            var _r16_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 22);
            i0__namespace.ɵɵlistener("click", function AdaptListComponent_ng_container_14_button_15_Template_button_click_0_listener() { i0__namespace.ɵɵrestoreView(_r16_1); var item_r6 = i0__namespace.ɵɵnextContext().$implicit; var ctx_r14 = i0__namespace.ɵɵnextContext(); return ctx_r14.deselectItem(item_r6.id); });
            i0__namespace.ɵɵtext(1, "\n                  ");
            i0__namespace.ɵɵelementStart(2, "span", 23);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n                ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var i_r7 = i0__namespace.ɵɵnextContext().index;
            var ctx_r11 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("disabled", ctx_r11.disabled);
            i0__namespace.ɵɵattribute("aria-labelledby", "deleteText-" + i_r7 + " name-" + i_r7);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("id", "deleteText-" + i_r7);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r11.texts.remove);
        }
    }
    var _c1$e = function (a0, a1) { return { "hover-disabled": a0, "disabled": a1 }; };
    function AdaptListComponent_ng_container_14_Template(rf, ctx) {
        if (rf & 1) {
            var _r19_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n            ");
            i0__namespace.ɵɵelementStart(2, "div", 12);
            i0__namespace.ɵɵlistener("cdkDragMoved", function AdaptListComponent_ng_container_14_Template_div_cdkDragMoved_2_listener() { i0__namespace.ɵɵrestoreView(_r19_1); var ctx_r18 = i0__namespace.ɵɵnextContext(); return ctx_r18.move(); });
            i0__namespace.ɵɵtext(3, "\n              ");
            i0__namespace.ɵɵelementStart(4, "div", 13);
            i0__namespace.ɵɵtext(5, "\n                ");
            i0__namespace.ɵɵtemplate(6, AdaptListComponent_ng_container_14_adapt_icon_6_Template, 1, 2, "adapt-icon", 14);
            i0__namespace.ɵɵtext(7, "\n                ");
            i0__namespace.ɵɵelementStart(8, "span", 15);
            i0__namespace.ɵɵlistener("keydown.ArrowUp", function AdaptListComponent_ng_container_14_Template_span_keydown_ArrowUp_8_listener($event) { var restoredCtx = i0__namespace.ɵɵrestoreView(_r19_1); var i_r7 = restoredCtx.index; var ctx_r20 = i0__namespace.ɵɵnextContext(); return ctx_r20.onUp($event, i_r7); })("keydown.ArrowDown", function AdaptListComponent_ng_container_14_Template_span_keydown_ArrowDown_8_listener($event) { var restoredCtx = i0__namespace.ɵɵrestoreView(_r19_1); var i_r7 = restoredCtx.index; var ctx_r21 = i0__namespace.ɵɵnextContext(); return ctx_r21.onDown($event, i_r7); });
            i0__namespace.ɵɵtext(9, "\n                    ");
            i0__namespace.ɵɵtemplate(10, AdaptListComponent_ng_container_14_adapt_icon_10_Template, 1, 3, "adapt-icon", 16);
            i0__namespace.ɵɵtext(11);
            i0__namespace.ɵɵtemplate(12, AdaptListComponent_ng_container_14_span_12_Template, 2, 2, "span", 17);
            i0__namespace.ɵɵtext(13, "\n                  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(14, "\n\n                ");
            i0__namespace.ɵɵtemplate(15, AdaptListComponent_ng_container_14_button_15_Template, 5, 4, "button", 18);
            i0__namespace.ɵɵtext(16, "\n\n              ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(17, "\n            ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(18, "\n          ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var item_r6 = ctx.$implicit;
            var i_r7 = ctx.index;
            var ctx_r3 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("cdkDragDisabled", ctx_r3.disabled);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction2(9, _c1$e, ctx_r3.hideControls, ctx_r3.disabled));
            i0__namespace.ɵɵattribute("id", ctx_r3.id + "_item_" + i_r7);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !(ctx_r3.disabled || ctx_r3.readonly) && !!ctx_r3.enableDnD);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("id", "name-" + i_r7);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", item_r6.icon);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n                  ", item_r6.name, "\n                  ");
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("ngIf", item_r6.badgeText);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r3.readonly);
        }
    }
    function AdaptListComponent_div_18_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 24);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵelementStart(2, "p", 25);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n      ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r4 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("@validationFeedbackAnimation", undefined);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r4.displayErrorMessage);
        }
    }
    function AdaptListComponent_div_20_p_2_strong_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "strong");
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var error_r23 = i0__namespace.ɵɵnextContext().$implicit;
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("", error_r23.name, " ");
        }
    }
    function AdaptListComponent_div_20_p_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "p", 25);
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵtemplate(2, AdaptListComponent_div_20_p_2_strong_2_Template, 2, 1, "strong", 4);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var error_r23 = ctx.$implicit;
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", error_r23.name);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n          ", error_r23.text, "\n        ");
        }
    }
    function AdaptListComponent_div_20_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 24);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵtemplate(2, AdaptListComponent_div_20_p_2_Template, 4, 2, "p", 26);
            i0__namespace.ɵɵtext(3, "\n      ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r5 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("@validationFeedbackAnimation", undefined);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngForOf", ctx_r5._self.errors);
        }
    }
    var _c2$c = [[["", 8, "empty-text"]]];
    var _c3$8 = function (a0) { return { "is-error": a0 }; };
    var _c4$5 = [".empty-text"];
    var listSelectorCount = 0;
    var AdaptListComponent = /** @class */ (function (_super) {
        __extends(AdaptListComponent, _super);
        function AdaptListComponent(_renderer, element, _injector, _changeDetectorRef, _ngZone, ts, _adaptRadarService) {
            var _this = _super.call(this, _injector, ts, _adaptRadarService, element, i1.AdaptRadarAngularCustomEventName.AdaptList) || this;
            _this._renderer = _renderer;
            _this.element = element;
            _this._injector = _injector;
            _this._changeDetectorRef = _changeDetectorRef;
            _this._ngZone = _ngZone;
            _this._adaptRadarService = _adaptRadarService;
            _this.createdList = [];
            _this.isErrorExist = false;
            _this.isEmptyState = false;
            _this.hideControls = false;
            _this._self = _this;
            _this.defaultSettings = {
                enableSearch: true,
                checkedStyle: 'checkbox',
                showCheckAll: true,
                showUncheckAll: true,
                hideLabel: false
            };
            _this.defaultTexts = { selectTitle: '' };
            /**
             * Label icon with a tooltip or popover
             */
            _this.tooltipConfig = null;
            _this.listChanged = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.focus = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.blur = new i0.EventEmitter();
            _this.selectedIndexes = [];
            _this.enableDnD = true;
            /**
             * Unique id of the element.
             */
            _this.id = "list-selector-" + listSelectorCount++;
            _this._isTouched = false;
            _this._onTouchedCallback = function () {
                return;
            };
            _this.setDefaultTexts(ts.getCurrentLanguage());
            return _this;
        }
        Object.defineProperty(AdaptListComponent.prototype, "customClass", {
            get: function () {
                return this._customClass;
            },
            set: function (v) {
                this._renderer.addClass(this.element.nativeElement, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptListComponent.prototype, "disabled", {
            get: function () {
                return this._disabled;
            },
            set: function (v) {
                this._disabled = i1.toBoolean(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptListComponent.prototype, "maxHeight", {
            get: function () {
                return this._maxHeight;
            },
            set: function (v) {
                this._renderer.setStyle(this.listEl.nativeElement, 'maxHeight', v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptListComponent.prototype, "value", {
            get: function () {
                return this._value;
            },
            set: function (v) {
                this._value = v;
            },
            enumerable: false,
            configurable: true
        });
        AdaptListComponent.prototype.updateListOrder = function (listIndexes) {
            this.createdList = [];
            if (this.selectedIndexes !== listIndexes) {
                this.selectedIndexes = listIndexes;
            }
            /**
             * in case there is existing list that should be loaded
             * we need to show it in given particular order
             * that is why there is a sorting of options base on selectedIndexes
             */
            listIndexes.map(function (index) {
                var element = this.options.find(function (item) { return item.id === index; });
                if (element) {
                    this.createdList.push();
                }
            }.bind(this));
        };
        AdaptListComponent.prototype.ngOnInit = function () {
            var _this = this;
            // Sending radar event directly to avoid issues with the premature invocation of "initControl" in parent ngOnInit()
            // ERROR NullInjectorError: R3InjectorError(AppModule)[NgControl -> NgControl -> NgControl]:
            // So do not call super.ngOnInit() here
            // TODO ?
            this._adaptRadarService.sendGenericComponentEvent(i1.AdaptRadarAngularCustomEventName.AdaptList);
            this.settings = Object.assign(Object.assign({}, this.defaultSettings), this.settings);
            this.texts = Object.assign(Object.assign({}, this.defaultTexts), this.texts);
            this.refToElement = this.element;
            if (!this.displayErrorMessage) {
                this.displayErrorMessage = this.defaultError;
            }
            this.updateListOrder(this.selectedIndexes);
            var _loop_1 = function (prop) {
                if (prop) {
                    this_1.overrideBuildInValidatorMessage(prop, function () { return _this._customErrorTexts[prop]; });
                }
            };
            var this_1 = this;
            for (var prop in this._customErrorTexts) {
                _loop_1(prop);
            }
            if (this.formControl) {
                _super.prototype.initControl.call(this);
            }
            if (this.tooltipInputIcon && !this.popoverIcon) {
                this.tooltipConfig = {
                    iconName: this.tooltipInputIcon,
                    content: this.tooltipInputText,
                    placement: 'top',
                    popoverMode: false
                };
            }
            else if (this.popoverIcon) {
                this.tooltipConfig = {
                    iconName: this.popoverIcon,
                    content: this.popoverContent,
                    placement: this.popoverPlacement,
                    popoverMode: true,
                    popoverTriggers: this.popoverTriggers
                };
            }
        };
        AdaptListComponent.prototype.setDefaultTexts = function (translation) {
            this.defaultTexts.requiredText = translation['adapt.common.required'];
            this.defaultTexts.remove = translation['adapt.listSelector.remove'];
            this.defaultTexts.notFound = translation['adapt.listSelector.notFound'];
            this.defaultTexts.selectTitle = translation['adapt.listSelector.selectTitle'];
            this.defaultError = translation['adapt.listSelector.error'];
        };
        AdaptListComponent.prototype.writeValue = function (value) {
            if (value) {
                this.value = value;
            }
            i1.SafeCdr.detectChanges(this._changeDetectorRef);
        };
        AdaptListComponent.prototype.registerOnChange = function (fn) {
            this.propagateChange = fn;
        };
        AdaptListComponent.prototype.registerOnTouched = function (fn) {
            this._onTouchedCallback = fn;
        };
        AdaptListComponent.prototype.validate = function () {
            return;
        };
        AdaptListComponent.prototype.setDisabledState = function (isDisabled) {
            this.disabled = isDisabled;
        };
        AdaptListComponent.prototype.deselectItem = function (id) {
            /**
             *  without([1, 2, 1, 3, 4], [1, 2]); //=> [3, 4]
             */
            this.selectedIndexes = lodashEs.without(this.selectedIndexes, id);
            this._isTouched = true;
            this._onTouchedCallback();
            this.propagateChange(this.selectedIndexes);
        };
        AdaptListComponent.prototype.updateListBuilder = function (obj) {
            /**
             *  need to convert obj to Array
             *  values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]
             */
            var newItems = lodashEs.values(obj);
            /**
             *  identify values need to be deleted
             *  difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]
             */
            var toBeRemoved = lodashEs.differenceWith(this.createdList, newItems, lodashEs.isEqual);
            /**
             * remove them
             *  without([1, 2, 1, 3, 4], 1, 2); //=> [3, 4]
             */
            var stay = lodashEs.without.apply(void 0, __spreadArray([this.createdList], __read(toBeRemoved)));
            /**
             *  now we need to add new values to the list
             *  union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]
             */
            this.createdList = lodashEs.union(stay, newItems);
            if (this._isTouched) {
                this.propagateChange(this.createdList);
            }
        };
        AdaptListComponent.prototype.onListAnimationDone = function (event) {
            if (event.fromState === 0 || event.toState === 0) {
                return;
            }
            this.isEmptyState = !this.createdList.length;
            this.updateModel();
        };
        AdaptListComponent.prototype.onListAnimationStart = function (event) {
            if (event.fromState === 0 || event.toState === 0) {
                this.isEmptyState = !this.createdList.length;
                this.updateModel();
            }
        };
        AdaptListComponent.prototype.dropdownClosed = function () {
            this._isTouched = true;
            this.checkValid();
            this._onTouchedCallback();
            this.propagateChange(this.createdList);
        };
        // defaultTitle: 'Available (' + this.opts.length + ')',
        AdaptListComponent.prototype.updateSelectTitle = function () {
            // console.log(' (' + (this.options.length - this.selectedIndexes.length) + ')');
            // this.selectTexts.checkedPlural = this.texts.selectTitle + ' (' + (this.options.length - this.selectedIndexes.length) + ')';
            // this.selectTexts.defaultTitle = this.texts.selectTitle + ' (' + (this.options.length - this.selectedIndexes.length) + ')';
        };
        AdaptListComponent.prototype.updateModel = function () {
            this.checkValid();
            this.listChanged.emit(this.createdList);
        };
        AdaptListComponent.prototype.drop = function (event) {
            i5.moveItemInArray(this.createdList, event.previousIndex, event.currentIndex);
            this.hideControls = false;
            this._updateControl();
        };
        AdaptListComponent.prototype.onUp = function (e, prevIndex) {
            if (this.disabled || this.readonly) {
                return;
            }
            e.preventDefault(); // we do not want to scroll the page
            i5.moveItemInArray(this.createdList, prevIndex, (prevIndex === 0) ? 0 : --prevIndex);
            this._ngZone.onStable
                .pipe(operators.take(1))
                .subscribe(function () {
                e.target.focus();
            });
            this._updateControl();
        };
        AdaptListComponent.prototype.onDown = function (e, prevIndex) {
            if (this.disabled || this.readonly) {
                return;
            }
            e.preventDefault();
            var currentIndex = this.createdList.length;
            if (prevIndex !== this.createdList.length) {
                currentIndex = prevIndex++;
            }
            i5.moveItemInArray(this.createdList, prevIndex, currentIndex);
            this._updateControl();
        };
        AdaptListComponent.prototype.move = function () {
            this.hideControls = true;
        };
        AdaptListComponent.prototype.checkValid = function () {
            this.isErrorExist = (this.required && !this.createdList.length && this._isTouched);
        };
        AdaptListComponent.prototype._updateControl = function () {
            this._isTouched = true;
            this._onTouchedCallback();
            this.propagateChange(this.createdList);
            this.updateModel();
        };
        return AdaptListComponent;
    }(i1.FormComponent));
    AdaptListComponent.ɵfac = function AdaptListComponent_Factory(t) { return new (t || AdaptListComponent)(i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.Injector), i0__namespace.ɵɵdirectiveInject(i0__namespace.ChangeDetectorRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.NgZone), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptRadarAngularService)); };
    AdaptListComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptListComponent, selectors: [["adapt-list-selector"]], viewQuery: function AdaptListComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$i, 7);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.listEl = _t.first);
            }
        }, hostVars: 1, hostBindings: function AdaptListComponent_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵattribute("id", ctx.id);
            }
        }, inputs: { selectedIndexes: "selectedIndexes", options: "options", settings: "settings", selectTexts: "selectTexts", texts: "texts", label: "label", enableDnD: "enableDnD", id: "id", name: "name", tooltipInputIcon: "tooltipInputIcon", tooltipInputText: "tooltipInputText", displayErrorMessage: "displayErrorMessage", formControl: "formControl", customClass: "customClass", disabled: "disabled", maxHeight: "maxHeight", updateListOrder: "updateListOrder" }, outputs: { listChanged: "listChanged", focus: "focus", blur: "blur" }, features: [i0__namespace.ɵɵProvidersFeature([
                i1.createFormControlValueAccessor(AdaptListComponent),
                i1.createFormControlValidator(AdaptListComponent),
            ]), i0__namespace.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4$5, decls: 23, vars: 18, consts: [[1, "adapt-list-selector", 3, "ngClass"], [3, "label", "requiredLabel", "showRequiredLabel", "tooltip", 4, "ngIf"], [1, "adapt-list"], [3, "options", "settings", "disabled", "readonly", "parentElementRef", "texts", "ngModel", "customClass", "ngModelChange", "modelArrayChanged", "dropdownClosed"], [4, "ngIf"], ["cdkDropList", "", 1, "adapt-list-container", 3, "cdkDropListDisabled", "cdkDropListDropped"], ["list", ""], [4, "ngFor", "ngForOf"], ["class", "has-danger", 4, "ngIf"], [3, "label", "requiredLabel", "showRequiredLabel", "tooltip"], [3, "type", "label"], [1, "empty-info"], ["cdkDrag", "", "cdkDragLockAxis", "y", 1, "adapt-list-builder__list-wrp", 3, "cdkDragDisabled", "cdkDragMoved"], [1, "adapt-list-item", 3, "ngClass"], ["class", "adapt-list-drag m-end-1", 3, "adaptRadarDisableEventSending", "name", 4, "ngIf"], ["tabindex", "0", 1, "adapt-list-name", 3, "id", "keydown.ArrowUp", "keydown.ArrowDown"], ["class", "adapt-list__icon", 3, "adaptRadarDisableEventSending", "name", "ngClass", 4, "ngIf"], ["class", "badge adapt-list__badge", 3, "ngClass", 4, "ngIf"], ["type", "button", "class", "d-icon-trash_adapt btn btn-link list-remove", 3, "disabled", "click", 4, "ngIf"], [1, "adapt-list-drag", "m-end-1", 3, "adaptRadarDisableEventSending", "name"], [1, "adapt-list__icon", 3, "adaptRadarDisableEventSending", "name", "ngClass"], [1, "badge", "adapt-list__badge", 3, "ngClass"], ["type", "button", 1, "d-icon-trash_adapt", "btn", "btn-link", "list-remove", 3, "disabled", "click"], [1, "sr-only", 3, "id"], [1, "has-danger"], [1, "form-control-feedback", "m-0", "pt-1", "pb-2"], ["class", "form-control-feedback m-0 pt-1 pb-2", 4, "ngFor", "ngForOf"]], template: function AdaptListComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵprojectionDef(_c2$c);
                i0__namespace.ɵɵtext(0, "\n    ");
                i0__namespace.ɵɵelementStart(1, "div", 0);
                i0__namespace.ɵɵtext(2, "\n      ");
                i0__namespace.ɵɵtemplate(3, AdaptListComponent_adapt_rx_control_label_3_Template, 1, 4, "adapt-rx-control-label", 1);
                i0__namespace.ɵɵtext(4, "\n\n      ");
                i0__namespace.ɵɵelementStart(5, "div", 2);
                i0__namespace.ɵɵtext(6, "\n        ");
                i0__namespace.ɵɵelementStart(7, "adapt-select", 3);
                i0__namespace.ɵɵlistener("ngModelChange", function AdaptListComponent_Template_adapt_select_ngModelChange_7_listener($event) { return ctx.selectedIndexes = $event; })("modelArrayChanged", function AdaptListComponent_Template_adapt_select_modelArrayChanged_7_listener($event) { return ctx.updateListBuilder($event); })("dropdownClosed", function AdaptListComponent_Template_adapt_select_dropdownClosed_7_listener() { return ctx.dropdownClosed(); });
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(8, "\n\n        ");
                i0__namespace.ɵɵtemplate(9, AdaptListComponent_ng_container_9_Template, 10, 2, "ng-container", 4);
                i0__namespace.ɵɵtext(10, "\n\n        ");
                i0__namespace.ɵɵelementStart(11, "div", 5, 6);
                i0__namespace.ɵɵlistener("cdkDropListDropped", function AdaptListComponent_Template_div_cdkDropListDropped_11_listener($event) { return ctx.drop($event); })("@listAnimation.done", function AdaptListComponent_Template_div_animation_listAnimation_done_11_listener($event) { return ctx.onListAnimationDone($event); })("@listAnimation.start", function AdaptListComponent_Template_div_animation_listAnimation_start_11_listener($event) { return ctx.onListAnimationStart($event); });
                i0__namespace.ɵɵtext(13, "\n          ");
                i0__namespace.ɵɵtemplate(14, AdaptListComponent_ng_container_14_Template, 19, 12, "ng-container", 7);
                i0__namespace.ɵɵtext(15, "\n        ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(16, "\n      ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(17, "\n\n      ");
                i0__namespace.ɵɵtemplate(18, AdaptListComponent_div_18_Template, 5, 2, "div", 8);
                i0__namespace.ɵɵtext(19, "\n\n      ");
                i0__namespace.ɵɵtemplate(20, AdaptListComponent_div_20_Template, 4, 2, "div", 8);
                i0__namespace.ɵɵtext(21, "\n\n    ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(22, "\n  ");
            }
            if (rf & 2) {
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction1(16, _c3$8, ctx.isErrorExist));
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", !ctx.settings.hideLabel);
                i0__namespace.ɵɵadvance(4);
                i0__namespace.ɵɵproperty("options", ctx.options)("settings", ctx.settings)("disabled", ctx.disabled)("readonly", ctx.readonly)("parentElementRef", ctx.refToElement)("texts", ctx.selectTexts)("ngModel", ctx.selectedIndexes)("customClass", "adapt-list-select");
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.isEmptyState);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("cdkDropListDisabled", ctx.disabled || ctx.readonly || !ctx.enableDnD)("@listAnimation", ctx.createdList.length);
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngForOf", ctx.createdList);
                i0__namespace.ɵɵadvance(4);
                i0__namespace.ɵɵproperty("ngIf", ctx.isErrorExist && !ctx.formControl);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.formControl && ctx._self.errors.length > 0 && ctx._self.control.touched);
            }
        }, directives: [i3__namespace.NgClass, i3__namespace.NgIf, AdaptSelectComponent, i6__namespace.NgControlStatus, i6__namespace.NgModel, i5__namespace.CdkDropList, i3__namespace.NgForOf, i1__namespace.AdaptRxControlLabelComponent, i1__namespace.AdaptEmptyStateComponent, i5__namespace.CdkDrag, i1__namespace.AdaptIconComponent], encapsulation: 2, data: { animation: [
                i1$1.trigger('listAnimation', [
                    i1$1.transition(':enter, * => 0', []),
                    i1$1.transition(':decrement', [
                        i1$1.query('.adapt-list-builder__list-wrp:leave', [
                            i1$1.style({ transform: 'scale(1)', opacity: 1, height: '*' }),
                            i1$1.animate(i1.ANIMATION_DURATION.medium + ' ' + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ transform: 'scale(0.5)', opacity: 0, height: 0 }))
                        ], { optional: true })
                    ]),
                    i1$1.transition(':increment', [
                        i1$1.query('.adapt-list-builder__list-wrp:enter', [
                            i1$1.style({ transform: 'scale(0.5)', opacity: 0 }),
                            i1$1.animate(i1.ANIMATION_DURATION.medium + ' ' + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ transform: 'scale(1)', opacity: 1 }))
                        ], { optional: true })
                    ]),
                ]),
                i1$1.trigger('validationFeedbackAnimation', [
                    i1$1.transition(':enter', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                    ]),
                    i1$1.transition(':leave', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                    ])
                ])
            ] } });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptListComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-list-selector',
                        template: "\n    <div class=\"adapt-list-selector\" [ngClass]=\"{'is-error': isErrorExist}\">\n      <adapt-rx-control-label *ngIf=\"!settings.hideLabel\"\n                              [label]=\"label\"\n                              [requiredLabel]=\"texts.requiredText\"\n                              [showRequiredLabel]=\"required\"\n                              [tooltip]=\"tooltipConfig\"></adapt-rx-control-label>\n\n      <div class=\"adapt-list\">\n        <adapt-select [options]=\"options\"\n                      [settings]=\"settings\"\n                      [disabled]=\"disabled\"\n                      [readonly]=\"readonly\"\n                      [parentElementRef]=\"refToElement\"\n                      [texts]=\"selectTexts\"\n                      [(ngModel)]=\"selectedIndexes\"\n                      (modelArrayChanged)=\"updateListBuilder($event)\"\n                      (dropdownClosed)=\"dropdownClosed()\"\n                      [customClass]=\"'adapt-list-select'\"></adapt-select>\n\n        <ng-container *ngIf=\"isEmptyState\">\n          <adapt-empty-state [type]=\"'objects'\" [label]=\"texts.notFound\">\n            <div class=\"empty-info\">\n              <ng-content select=\".empty-text\"></ng-content>\n            </div>\n          </adapt-empty-state>\n        </ng-container>\n\n        <div cdkDropList class=\"adapt-list-container\" (cdkDropListDropped)=\"drop($event)\" #list\n             [cdkDropListDisabled]=\"disabled || readonly || !enableDnD\"\n             [@listAnimation]=\"createdList.length\"\n             (@listAnimation.done)=\"onListAnimationDone($event)\"\n             (@listAnimation.start)=\"onListAnimationStart($event)\">\n          <ng-container *ngFor=\"let item of createdList; let i = index\">\n            <div class=\"adapt-list-builder__list-wrp\" cdkDrag cdkDragLockAxis=\"y\" (cdkDragMoved)=\"move()\"\n                 [cdkDragDisabled]=\"disabled\">\n              <div class=\"adapt-list-item\" [ngClass]=\"{'hover-disabled' : hideControls, 'disabled' : disabled }\"\n                   [attr.id]=\"id + '_item_' + i\">\n                <adapt-icon *ngIf=\"!(disabled || readonly) && !!enableDnD\"\n                            [adaptRadarDisableEventSending]=\"true\"\n                            [name]=\"'dots'\"\n                            class=\"adapt-list-drag m-end-1\"></adapt-icon>\n                <span class=\"adapt-list-name\" tabindex=\"0\"\n                      (keydown.ArrowUp)=\"onUp($event, i)\"\n                      (keydown.ArrowDown)=\"onDown($event, i)\"\n                      [id]=\"'name-' + i\">\n                    <adapt-icon *ngIf=\"item.icon\"\n                                [adaptRadarDisableEventSending]=\"true\"\n                                [name]=\"item.icon\"\n                                class=\"adapt-list__icon\"\n                                [ngClass]=\"'text-' + item.iconType\"></adapt-icon>\n                  {{item.name}}\n                  <span *ngIf=\"item.badgeText\" class=\"badge adapt-list__badge\"\n                        [ngClass]=\"'badge-'+item.badgeType\">{{item.badgeText}}</span>\n                  </span>\n\n                <button (click)=\"deselectItem(item.id)\"\n                        [disabled]=\"disabled\"\n                        *ngIf=\"!readonly\"\n                        type=\"button\"\n                        class=\"d-icon-trash_adapt btn btn-link list-remove\"\n                        [attr.aria-labelledby]=\"'deleteText-' + i + ' name-' + i\">\n                  <span [id]=\"'deleteText-' + i\" class=\"sr-only\">{{texts.remove}}</span>\n                </button>\n\n              </div>\n            </div>\n          </ng-container>\n        </div>\n      </div>\n\n      <div class=\"has-danger\" *ngIf=\"isErrorExist && !formControl\" [@validationFeedbackAnimation]>\n        <p class=\"form-control-feedback m-0 pt-1 pb-2\">{{displayErrorMessage}}</p>\n      </div>\n\n      <div class=\"has-danger\" *ngIf=\"formControl && _self.errors.length > 0 && _self.control.touched\"\n           [@validationFeedbackAnimation]>\n        <p class=\"form-control-feedback m-0 pt-1 pb-2\" *ngFor=\"let error of _self.errors\">\n          <strong *ngIf=\"error.name\">{{error.name}} </strong>\n          {{error.text}}\n        </p>\n      </div>\n\n    </div>\n  ",
                        animations: [
                            i1$1.trigger('listAnimation', [
                                i1$1.transition(':enter, * => 0', []),
                                i1$1.transition(':decrement', [
                                    i1$1.query('.adapt-list-builder__list-wrp:leave', [
                                        i1$1.style({ transform: 'scale(1)', opacity: 1, height: '*' }),
                                        i1$1.animate(i1.ANIMATION_DURATION.medium + ' ' + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ transform: 'scale(0.5)', opacity: 0, height: 0 }))
                                    ], { optional: true })
                                ]),
                                i1$1.transition(':increment', [
                                    i1$1.query('.adapt-list-builder__list-wrp:enter', [
                                        i1$1.style({ transform: 'scale(0.5)', opacity: 0 }),
                                        i1$1.animate(i1.ANIMATION_DURATION.medium + ' ' + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ transform: 'scale(1)', opacity: 1 }))
                                    ], { optional: true })
                                ]),
                            ]),
                            i1$1.trigger('validationFeedbackAnimation', [
                                i1$1.transition(':enter', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                                ]),
                                i1$1.transition(':leave', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                                ])
                            ])
                        ],
                        providers: [
                            i1.createFormControlValueAccessor(AdaptListComponent),
                            i1.createFormControlValidator(AdaptListComponent),
                        ],
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: {
                            '[attr.id]': 'id'
                        }
                    }]
            }], function () { return [{ type: i0__namespace.Renderer2 }, { type: i0__namespace.ElementRef }, { type: i0__namespace.Injector }, { type: i0__namespace.ChangeDetectorRef }, { type: i0__namespace.NgZone }, { type: i1__namespace.AdaptTranslateService }, { type: i1__namespace.AdaptRadarAngularService }]; }, { listEl: [{
                    type: i0.ViewChild,
                    args: ['list', { static: true }]
                }], listChanged: [{
                    type: i0.Output
                }], focus: [{
                    type: i0.Output
                }], blur: [{
                    type: i0.Output
                }], selectedIndexes: [{
                    type: i0.Input
                }], options: [{
                    type: i0.Input
                }], settings: [{
                    type: i0.Input
                }], selectTexts: [{
                    type: i0.Input
                }], texts: [{
                    type: i0.Input
                }], label: [{
                    type: i0.Input
                }], enableDnD: [{
                    type: i0.Input
                }], id: [{
                    type: i0.Input
                }], name: [{
                    type: i0.Input
                }], tooltipInputIcon: [{
                    type: i0.Input
                }], tooltipInputText: [{
                    type: i0.Input
                }], displayErrorMessage: [{
                    type: i0.Input
                }], formControl: [{
                    type: i0.Input
                }], customClass: [{
                    type: i0.Input
                }], disabled: [{
                    type: i0.Input
                }], maxHeight: [{
                    type: i0.Input
                }], updateListOrder: [{
                    type: i0.Input
                }] });
    })();

    var AdaptSelectModule = /** @class */ (function () {
        function AdaptSelectModule() {
        }
        return AdaptSelectModule;
    }());
    AdaptSelectModule.ɵfac = function AdaptSelectModule_Factory(t) { return new (t || AdaptSelectModule)(); };
    AdaptSelectModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptSelectModule });
    AdaptSelectModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[
                i3.CommonModule,
                i6.FormsModule,
                i4.HammerModule,
                i6.ReactiveFormsModule,
                i1.AdaptIconModule,
                i1.AdaptTooltipModule,
                i1.AdaptPopoverModule.forRoot(),
                i1.AdaptBusyModule,
                AdaptSelectSearchFilterModule,
                i1.AdaptFocusMonitorDirectiveModule,
                i1.AdaptDragonInputHandlerModule,
                i1.AdaptCustomActionsModule
            ]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptSelectModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i3.CommonModule,
                            i6.FormsModule,
                            i4.HammerModule,
                            i6.ReactiveFormsModule,
                            i1.AdaptIconModule,
                            i1.AdaptTooltipModule,
                            i1.AdaptPopoverModule.forRoot(),
                            i1.AdaptBusyModule,
                            AdaptSelectSearchFilterModule,
                            i1.AdaptFocusMonitorDirectiveModule,
                            i1.AdaptDragonInputHandlerModule,
                            i1.AdaptCustomActionsModule
                        ],
                        exports: [AdaptSelectComponent],
                        declarations: [AdaptSelectComponent]
                    }]
            }], null, null);
    })();
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptSelectModule, { declarations: [AdaptSelectComponent], imports: [i3.CommonModule,
                i6.FormsModule,
                i4.HammerModule,
                i6.ReactiveFormsModule,
                i1.AdaptIconModule,
                i1.AdaptTooltipModule, i1__namespace.AdaptPopoverModule, i1.AdaptBusyModule,
                AdaptSelectSearchFilterModule,
                i1.AdaptFocusMonitorDirectiveModule,
                i1.AdaptDragonInputHandlerModule,
                i1.AdaptCustomActionsModule], exports: [AdaptSelectComponent] });
    })();

    var AdaptListSelectorModule = /** @class */ (function () {
        function AdaptListSelectorModule(iconService) {
            iconService.registerIcons([dplIconfont.ai_dots]);
        }
        AdaptListSelectorModule.forRoot = function () {
            return {
                ngModule: AdaptListSelectorModule
            };
        };
        return AdaptListSelectorModule;
    }());
    AdaptListSelectorModule.ɵfac = function AdaptListSelectorModule_Factory(t) { return new (t || AdaptListSelectorModule)(i0__namespace.ɵɵinject(i1__namespace.AdaptIconConfig)); };
    AdaptListSelectorModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptListSelectorModule });
    AdaptListSelectorModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[
                i3.CommonModule,
                i6.FormsModule,
                i5.DragDropModule,
                AdaptSelectModule,
                i1.AdaptEmptyStateModule,
                i1.AdaptIconModule,
                i1.AdaptTooltipModule,
                i1.AdaptPopoverModule,
                i1.AdaptRxLabelModule
            ]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptListSelectorModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i3.CommonModule,
                            i6.FormsModule,
                            i5.DragDropModule,
                            AdaptSelectModule,
                            i1.AdaptEmptyStateModule,
                            i1.AdaptIconModule,
                            i1.AdaptTooltipModule,
                            i1.AdaptPopoverModule,
                            i1.AdaptRxLabelModule
                        ],
                        declarations: [AdaptListComponent],
                        exports: [AdaptListComponent]
                    }]
            }], function () { return [{ type: i1__namespace.AdaptIconConfig }]; }, null);
    })();
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptListSelectorModule, { declarations: [AdaptListComponent], imports: [i3.CommonModule,
                i6.FormsModule,
                i5.DragDropModule,
                AdaptSelectModule,
                i1.AdaptEmptyStateModule,
                i1.AdaptIconModule,
                i1.AdaptTooltipModule,
                i1.AdaptPopoverModule,
                i1.AdaptRxLabelModule], exports: [AdaptListComponent] });
    })();

    function AdaptTextfieldIconsComponent_span_1_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "span", 2);
        }
        if (rf & 2) {
            i0__namespace.ɵɵproperty("@textfieldIconAnim", undefined);
        }
    }
    function AdaptTextfieldIconsComponent_span_3_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "span", 3);
        }
        if (rf & 2) {
            i0__namespace.ɵɵproperty("@textfieldIconAnim", undefined);
        }
    }
    var AdaptTextfieldIconsComponent = /** @class */ (function () {
        function AdaptTextfieldIconsComponent() {
            this.error = false;
            this.success = false;
            this.iconValid = false;
            this.iconInvalid = false;
        }
        return AdaptTextfieldIconsComponent;
    }());
    AdaptTextfieldIconsComponent.ɵfac = function AdaptTextfieldIconsComponent_Factory(t) { return new (t || AdaptTextfieldIconsComponent)(); };
    AdaptTextfieldIconsComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptTextfieldIconsComponent, selectors: [["adapt-textfield-icons"]], inputs: { error: "error", success: "success", iconValid: "iconValid", iconInvalid: "iconInvalid" }, decls: 4, vars: 2, consts: [["class", "form-control-danger form-control--icons", 4, "ngIf"], ["class", "form-control-success form-control--icons", 4, "ngIf"], [1, "form-control-danger", "form-control--icons"], [1, "form-control-success", "form-control--icons"]], template: function AdaptTextfieldIconsComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵtext(0, "\n    ");
                i0__namespace.ɵɵtemplate(1, AdaptTextfieldIconsComponent_span_1_Template, 1, 1, "span", 0);
                i0__namespace.ɵɵtext(2, "\n    ");
                i0__namespace.ɵɵtemplate(3, AdaptTextfieldIconsComponent_span_3_Template, 1, 1, "span", 1);
            }
            if (rf & 2) {
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("ngIf", ctx.error && ctx.iconInvalid);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.success && ctx.iconValid);
            }
        }, directives: [i3__namespace.NgIf], encapsulation: 2, data: { animation: [i1$1.trigger('textfieldIconAnim', [
                    i1$1.transition('void => *', [
                        i1$1.style({ visibility: 'hidden', opacity: 0 }),
                        i1$1.animate(".5s " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn, i1$1.style({ visibility: 'visible', opacity: 1 })),
                    ]),
                    i1$1.transition('* => void', [
                        i1$1.style({ visibility: 'visible', opacity: 1 }),
                        i1$1.animate(".15s " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ visibility: 'hidden', opacity: 0 }))
                    ])
                ])] }, changeDetection: 0 });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptTextfieldIconsComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-textfield-icons',
                        template: "\n    <span class=\"form-control-danger form-control--icons\" *ngIf=\"error && iconInvalid\" [@textfieldIconAnim]></span>\n    <span class=\"form-control-success form-control--icons\" *ngIf=\"success && iconValid\" [@textfieldIconAnim]></span>",
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        animations: [i1$1.trigger('textfieldIconAnim', [
                                i1$1.transition('void => *', [
                                    i1$1.style({ visibility: 'hidden', opacity: 0 }),
                                    i1$1.animate(".5s " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn, i1$1.style({ visibility: 'visible', opacity: 1 })),
                                ]),
                                i1$1.transition('* => void', [
                                    i1$1.style({ visibility: 'visible', opacity: 1 }),
                                    i1$1.animate(".15s " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ visibility: 'hidden', opacity: 0 }))
                                ])
                            ])],
                        encapsulation: i0.ViewEncapsulation.None,
                    }]
            }], null, { error: [{
                    type: i0.Input
                }], success: [{
                    type: i0.Input
                }], iconValid: [{
                    type: i0.Input
                }], iconInvalid: [{
                    type: i0.Input
                }] });
    })();
    var AdaptTextFieldIconsModule = /** @class */ (function () {
        function AdaptTextFieldIconsModule() {
        }
        AdaptTextFieldIconsModule.forRoot = function () {
            return {
                ngModule: AdaptTextFieldIconsModule,
                providers: []
            };
        };
        return AdaptTextFieldIconsModule;
    }());
    AdaptTextFieldIconsModule.ɵfac = function AdaptTextFieldIconsModule_Factory(t) { return new (t || AdaptTextFieldIconsModule)(); };
    AdaptTextFieldIconsModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptTextFieldIconsModule });
    AdaptTextFieldIconsModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[i3.CommonModule]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptTextFieldIconsModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [i3.CommonModule],
                        exports: [AdaptTextfieldIconsComponent],
                        declarations: [AdaptTextfieldIconsComponent],
                    }]
            }], null, null);
    })();
    (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptTextFieldIconsModule, { declarations: [AdaptTextfieldIconsComponent], imports: [i3.CommonModule], exports: [AdaptTextfieldIconsComponent] }); })();

    var _c0$h = ["input"];
    var _c1$d = ["inputTextWidthEl"];
    function AdaptTextFieldComponent_adapt_textfield_icons_9_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-textfield-icons", 11);
        }
        if (rf & 2) {
            var ctx_r0 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("error", ctx_r0.isError)("success", !ctx_r0.isError)("iconValid", ctx_r0.iconValid)("iconInvalid", ctx_r0.iconInvalid);
        }
    }
    function AdaptTextFieldComponent_textarea_11_Template(rf, ctx) {
        if (rf & 1) {
            var _r10_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "textarea", 12, 13);
            i0__namespace.ɵɵlistener("keydown", function AdaptTextFieldComponent_textarea_11_Template_textarea_keydown_0_listener($event) { i0__namespace.ɵɵrestoreView(_r10_1); var ctx_r9 = i0__namespace.ɵɵnextContext(); return ctx_r9.onKeydown($event); })("keypress", function AdaptTextFieldComponent_textarea_11_Template_textarea_keypress_0_listener($event) { i0__namespace.ɵɵrestoreView(_r10_1); var ctx_r11 = i0__namespace.ɵɵnextContext(); return ctx_r11.onKeypress($event); })("keyup", function AdaptTextFieldComponent_textarea_11_Template_textarea_keyup_0_listener($event) { i0__namespace.ɵɵrestoreView(_r10_1); var ctx_r12 = i0__namespace.ɵɵnextContext(); return ctx_r12.onKeyup($event); })("ngModelChange", function AdaptTextFieldComponent_textarea_11_Template_textarea_ngModelChange_0_listener($event) { i0__namespace.ɵɵrestoreView(_r10_1); var ctx_r13 = i0__namespace.ɵɵnextContext(); return ctx_r13.value = $event; })("focus", function AdaptTextFieldComponent_textarea_11_Template_textarea_focus_0_listener($event) { i0__namespace.ɵɵrestoreView(_r10_1); var ctx_r14 = i0__namespace.ɵɵnextContext(); return ctx_r14.onFocus($event); })("blur", function AdaptTextFieldComponent_textarea_11_Template_textarea_blur_0_listener($event) { i0__namespace.ɵɵrestoreView(_r10_1); var ctx_r15 = i0__namespace.ɵɵnextContext(); return ctx_r15.onBlur($event); });
            i0__namespace.ɵɵtext(2, "  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵclassMapInterpolate1("form-control ", ctx_r1.customClass, "");
            i0__namespace.ɵɵclassProp("form-control-disabled-look", ctx_r1.readonly && ctx_r1.disabledStyleForReadonlyState);
            i0__namespace.ɵɵproperty("rows", ctx_r1.rows)("ngModel", ctx_r1.value)("disabled", ctx_r1.disabled)("required", ctx_r1.required)("autofocus", ctx_r1.autofocus)("readonly", ctx_r1.readonly)("placeholder", ctx_r1.placeholder ? ctx_r1.placeholder : "")("pattern", ctx_r1.pattern ? ctx_r1.pattern : ".*");
            i0__namespace.ɵɵattribute("name", ctx_r1.name)("aria-required", ctx_r1.required)("aria-invalid", !ctx_r1.disabled && !ctx_r1.control && !ctx_r1.validState && ctx_r1.isError)("aria-label", ctx_r1.arialabel || null)("aria-describedby", ctx_r1.ariaDescribedBy)("id", ctx_r1.id + "_textarea")("data-testid", ctx_r1.testID + "_textarea")("maxlength", ctx_r1.maxlength)("minlength", ctx_r1.minlength)("tabindex", ctx_r1.tabindex);
        }
    }
    function AdaptTextFieldComponent_input_13_Template(rf, ctx) {
        if (rf & 1) {
            var _r18_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "input", 14, 13);
            i0__namespace.ɵɵlistener("keydown", function AdaptTextFieldComponent_input_13_Template_input_keydown_0_listener($event) { i0__namespace.ɵɵrestoreView(_r18_1); var ctx_r17 = i0__namespace.ɵɵnextContext(); return ctx_r17.onKeydown($event); })("keypress", function AdaptTextFieldComponent_input_13_Template_input_keypress_0_listener($event) { i0__namespace.ɵɵrestoreView(_r18_1); var ctx_r19 = i0__namespace.ɵɵnextContext(); return ctx_r19.onKeypress($event); })("keyup", function AdaptTextFieldComponent_input_13_Template_input_keyup_0_listener($event) { i0__namespace.ɵɵrestoreView(_r18_1); var ctx_r20 = i0__namespace.ɵɵnextContext(); return ctx_r20.onKeyup($event); })("ngModelChange", function AdaptTextFieldComponent_input_13_Template_input_ngModelChange_0_listener($event) { i0__namespace.ɵɵrestoreView(_r18_1); var ctx_r21 = i0__namespace.ɵɵnextContext(); return ctx_r21.value = $event; })("focus", function AdaptTextFieldComponent_input_13_Template_input_focus_0_listener($event) { i0__namespace.ɵɵrestoreView(_r18_1); var ctx_r22 = i0__namespace.ɵɵnextContext(); return ctx_r22.onFocus($event); })("blur", function AdaptTextFieldComponent_input_13_Template_input_blur_0_listener($event) { i0__namespace.ɵɵrestoreView(_r18_1); var ctx_r23 = i0__namespace.ɵɵnextContext(); return ctx_r23.onBlur($event); });
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r2 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵclassMapInterpolate1("form-control ", ctx_r2.customClass, "");
            i0__namespace.ɵɵclassProp("form-control-disabled-look", ctx_r2.readonly && ctx_r2.disabledStyleForReadonlyState)("textfield-padding-transition", ctx_r2.overflowText)("pl-0", ctx_r2.isTextOverflow && !ctx_r2.isRtl)("pr-0", ctx_r2.isTextOverflow && ctx_r2.isRtl);
            i0__namespace.ɵɵproperty("type", ctx_r2.type)("ngModel", ctx_r2.value)("disabled", ctx_r2.disabled)("required", ctx_r2.required)("autofocus", ctx_r2.autofocus)("readonly", ctx_r2.readonly)("autocomplete", ctx_r2.autocomplete ? ctx_r2.autocomplete : "on")("placeholder", ctx_r2.placeholder ? ctx_r2.placeholder : "")("pattern", ctx_r2.pattern ? ctx_r2.pattern : ".*");
            i0__namespace.ɵɵattribute("name", ctx_r2.name)("aria-required", ctx_r2.required)("aria-invalid", !ctx_r2.disabled && !ctx_r2.control && !ctx_r2.validState && ctx_r2.isError)("aria-label", ctx_r2.arialabel || null)("aria-describedby", ctx_r2.ariaDescribedBy)("id", ctx_r2.id + "_input")("data-testid", ctx_r2.testID + "_input")("maxlength", ctx_r2.maxlength)("minlength", ctx_r2.minlength)("min", ctx_r2.min)("max", ctx_r2.max)("step", ctx_r2.step)("tabindex", ctx_r2.tabindex);
        }
    }
    function AdaptTextFieldComponent_div_15_div_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 18);
            i0__namespace.ɵɵtext(1, "\n      ");
            i0__namespace.ɵɵelementStart(2, "span", 19);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r24 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r24.nestedSettings.addOnTextLeft);
        }
    }
    function AdaptTextFieldComponent_div_15_div_7_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 20);
            i0__namespace.ɵɵtext(1, "\n      ");
            i0__namespace.ɵɵelementStart(2, "span", 19);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r26 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵstyleProp("z-index", "34");
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r26.nestedSettings.addOnTextRight);
        }
    }
    function AdaptTextFieldComponent_div_15_Template(rf, ctx) {
        if (rf & 1) {
            var _r28_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 15);
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵtemplate(2, AdaptTextFieldComponent_div_15_div_2_Template, 5, 1, "div", 16);
            i0__namespace.ɵɵtext(3, "\n    ");
            i0__namespace.ɵɵelementStart(4, "input", 14, 13);
            i0__namespace.ɵɵlistener("keydown", function AdaptTextFieldComponent_div_15_Template_input_keydown_4_listener($event) { i0__namespace.ɵɵrestoreView(_r28_1); var ctx_r27 = i0__namespace.ɵɵnextContext(); return ctx_r27.onKeydown($event); })("keypress", function AdaptTextFieldComponent_div_15_Template_input_keypress_4_listener($event) { i0__namespace.ɵɵrestoreView(_r28_1); var ctx_r29 = i0__namespace.ɵɵnextContext(); return ctx_r29.onKeypress($event); })("keyup", function AdaptTextFieldComponent_div_15_Template_input_keyup_4_listener($event) { i0__namespace.ɵɵrestoreView(_r28_1); var ctx_r30 = i0__namespace.ɵɵnextContext(); return ctx_r30.onKeyup($event); })("ngModelChange", function AdaptTextFieldComponent_div_15_Template_input_ngModelChange_4_listener($event) { i0__namespace.ɵɵrestoreView(_r28_1); var ctx_r31 = i0__namespace.ɵɵnextContext(); return ctx_r31.value = $event; })("focus", function AdaptTextFieldComponent_div_15_Template_input_focus_4_listener($event) { i0__namespace.ɵɵrestoreView(_r28_1); var ctx_r32 = i0__namespace.ɵɵnextContext(); return ctx_r32.onFocus($event); })("blur", function AdaptTextFieldComponent_div_15_Template_input_blur_4_listener($event) { i0__namespace.ɵɵrestoreView(_r28_1); var ctx_r33 = i0__namespace.ɵɵnextContext(); return ctx_r33.onBlur($event); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n    ");
            i0__namespace.ɵɵtemplate(7, AdaptTextFieldComponent_div_15_div_7_Template, 5, 3, "div", 17);
            i0__namespace.ɵɵtext(8, "\n  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r3 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("ngClass", ctx_r3.inputGroupClass);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r3.nestedSettings.addOnLeft);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵclassMapInterpolate1("form-control ", ctx_r3.customClass, "");
            i0__namespace.ɵɵclassProp("textfield-padding-transition", ctx_r3.overflowText)("pl-0", ctx_r3.isTextOverflow && !ctx_r3.isRtl)("pr-0", ctx_r3.isTextOverflow && ctx_r3.isRtl);
            i0__namespace.ɵɵproperty("type", ctx_r3.type)("ngModel", ctx_r3.value)("disabled", ctx_r3.disabled)("required", ctx_r3.required)("autofocus", ctx_r3.autofocus)("readonly", ctx_r3.readonly)("autocomplete", ctx_r3.autocomplete ? ctx_r3.autocomplete : "on")("placeholder", ctx_r3.placeholder ? ctx_r3.placeholder : "")("pattern", ctx_r3.pattern ? ctx_r3.pattern : ".*");
            i0__namespace.ɵɵattribute("name", ctx_r3.name)("aria-required", ctx_r3.required)("aria-invalid", !ctx_r3.disabled && !ctx_r3.control && !ctx_r3.validState && ctx_r3.isError)("aria-label", ctx_r3.arialabel || null)("aria-describedby", ctx_r3.ariaDescribedBy)("id", ctx_r3.id + "_input")("data-testid", ctx_r3.testID + "_input")("maxlength", ctx_r3.maxlength)("minlength", ctx_r3.minlength)("min", ctx_r3.min)("max", ctx_r3.max)("step", ctx_r3.step)("tabindex", ctx_r3.tabindex);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngIf", ctx_r3.nestedSettings.addOnRight);
        }
    }
    function AdaptTextFieldComponent_div_18_p_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "p", 23);
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵelementStart(2, "span");
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r34 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("@validationFeedbackChangeAnimation", ctx_r34.isError);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r34.isError ? ctx_r34.errorMessage : !ctx_r34.isError && ctx_r34.isDirty ? ctx_r34.successMessage : "");
        }
    }
    function AdaptTextFieldComponent_div_18_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 21);
            i0__namespace.ɵɵtext(1, "\n  ");
            i0__namespace.ɵɵtemplate(2, AdaptTextFieldComponent_div_18_p_2_Template, 5, 2, "p", 22);
            i0__namespace.ɵɵtext(3, "\n");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r4 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("@validationFeedbackAnimation", undefined);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r4.errorMessage && ctx_r4.errorMessage !== "" || ctx_r4.successMessage && ctx_r4.successMessage !== "");
        }
    }
    function AdaptTextFieldComponent_div_20_p_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "p", 23);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r35 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n    ", ctx_r35.errorMessage, "\n  ");
        }
    }
    function AdaptTextFieldComponent_div_20_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 21);
            i0__namespace.ɵɵtext(1, "\n  ");
            i0__namespace.ɵɵtemplate(2, AdaptTextFieldComponent_div_20_p_2_Template, 2, 1, "p", 22);
            i0__namespace.ɵɵtext(3, "\n");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r5 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("@validationFeedbackAnimation", undefined);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r5.errorMessage && ctx_r5.errorMessage !== "");
        }
    }
    function AdaptTextFieldComponent_div_22_p_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "p", 23);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r36 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n    ", ctx_r36.additionalMessage, "\n  ");
        }
    }
    function AdaptTextFieldComponent_div_22_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div");
            i0__namespace.ɵɵtext(1, "\n  ");
            i0__namespace.ɵɵtemplate(2, AdaptTextFieldComponent_div_22_p_2_Template, 2, 1, "p", 22);
            i0__namespace.ɵɵtext(3, "\n");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r6 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("@validationFeedbackAnimation", undefined);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r6.additionalMessage && ctx_r6.additionalMessage !== "");
        }
    }
    function AdaptTextFieldComponent_div_26_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 24, 25);
            i0__namespace.ɵɵtext(2);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r7 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("ngStyle", ctx_r7.inputStyles);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate(ctx_r7.value);
        }
    }
    var _c2$b = [[["", "label-count", ""]], "*"];
    var _c3$7 = ["[label-count]", "*"];
    var nextId$3 = 0;
    var noop$4 = function () {
        return;
    };
    var cssTextFieldClasses$1 = {
        FOCUS: 'is-focus',
        // REQUIRED: 'is-required', // not used yet
        // DIRTY: 'is-dirty',
        // NG_DIRTY: 'ng-dirty',
        NG_TOUCHED: 'ng-touched',
        // PRISTINE: 'is-pristine',
        FORM_SUCCESS: 'has-success',
        FORM_DANGER: 'has-danger',
        // VALID: 'form-control-success',
        // IN_VALID: 'form-control-danger'
    };
    var DISABLE_NATIVE_VALIDITY_CHECKING = new i0.InjectionToken('disableNativeValidityChecking');
    var ADAPT_TEXTFIELD_ACCESSOR = {
        provide: i6.NG_VALUE_ACCESSOR,
        useExisting: i0.forwardRef(function () { return AdaptTextFieldComponent; }),
        multi: true
    };
    var AdaptTextFieldComponent = /** @class */ (function (_super) {
        __extends(AdaptTextFieldComponent, _super);
        function AdaptTextFieldComponent(elemRef, renderer, _resizeService, _dir, ts, _ngZone, _cdr, _injector, nativeCheckGlobalDisabled, _adaptRadarService) {
            var _this = _super.call(this, _adaptRadarService, elemRef, i1.AdaptRadarAngularCustomEventName.AdaptTextField) || this;
            _this.elemRef = elemRef;
            _this.renderer = renderer;
            _this._resizeService = _resizeService;
            _this._dir = _dir;
            _this.ts = ts;
            _this._ngZone = _ngZone;
            _this._cdr = _cdr;
            _this._injector = _injector;
            _this.nativeCheckGlobalDisabled = nativeCheckGlobalDisabled;
            /**
             * Public variables of textfield component
             */
            _this.isError = false;
            _this.isDirty = false;
            /**
             * addOnTextLeft: string; addOnTextRight: string; addOnLeft: boolean; addOnRight: boolean
             */
            _this.nestedSettingsDefault = {
                addOnLeft: true,
                addOnRight: false,
                addOnTextLeft: '@'
            };
            _this.inputStyles = null;
            _this.isTextOverflow = false;
            _this.isRtl = false;
            _this.defaultTexts = {};
            _this.overflowText = true;
            /**
             * Label icon with a tooltip or popover
             */
            _this.tooltipConfig = null;
            /**
             * The input element type {bs4 view}.
             */
            _this.nested = false;
            /**
             * The input element type; by default is 'text'
             */
            _this.type = 'text';
            /**
             * Unique id of the element.
             */
            _this.id = "adapt-textfield-" + nextId$3++;
            /**
             * Unique testID of the element.
             */
            _this.testID = "adapt-textfield-" + nextId$3++;
            /**
             * Whether the input is with success icon
             */
            _this.iconValid = false;
            /**
             * Whether the input is with error icon
             */
            _this.iconInvalid = true;
            /**
             * TabIndex attribute of the element
             */
            _this.tabindex = null;
            /**
             * Maxlength attribute of the element
             */
            _this.maxlength = null;
            /**
             * Minlength attribute of the element
             */
            _this.minlength = 0;
            /**
             * Autocomplete attribute of the element.
             */
            _this.autocomplete = 'off';
            /**
             * Whether the input is valid
             */
            _this.validState = false;
            _this.popoverPlacement = 'top';
            _this.popoverTriggers = 'click';
            _this.setInvalidState = false;
            _this.debounceTime = 300;
            // eslint-disable-next-line @angular-eslint/no-output-native, @angular-eslint/no-output-rename
            _this.focusEmitter = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-native, @angular-eslint/no-output-rename
            _this.blurEmitter = new i0.EventEmitter();
            _this.valueChanged = new i0.EventEmitter();
            _this.inputKeydown = new i0.EventEmitter();
            _this.inputKeypress = new i0.EventEmitter();
            _this.inputKeyup = new i0.EventEmitter();
            /**
             * Use disabled style for the control if [readonly]=true
             */
            _this.disabledStyleForReadonlyState = false;
            // eslint-disable-next-line @angular-eslint/no-input-rename
            _this.ariaDescribedBy = null;
            /**
             * ControlValueAccessor required interface
             */
            _this.onTouchedCallback = noop$4;
            /**
             * ControlValueAccessor required interface
             */
            _this.onChangeCallback = noop$4;
            /**
             * Private variables of textfield component
             */
            _this._required = false;
            _this._disabled = false;
            _this._readonly = false;
            _this._rows = null;
            _this._disableNativeValidityChecking = false;
            _this._maxrows = -1;
            _this._autofocus = false;
            _this._destroyed$ = new rxjs.ReplaySubject(1);
            _this.el = elemRef.nativeElement;
            _this.isRtl = _dir.value === 'rtl';
            _this.renderer = renderer;
            var translation = ts.getCurrentLanguage();
            _this._successMessage = _this.defaultTexts.valid = translation['adapt.textfield.error.valid'];
            _this._errorMessage = _this.defaultTexts.invalid = translation['adapt.textfield.error.invalid'];
            _this.requiredLabel = translation['adapt.common.required'];
            return _this;
        }
        Object.defineProperty(AdaptTextFieldComponent.prototype, "errorMessage", {
            /**
             * An object used to control when error/success messages are shown
             */
            get: function () {
                return this._errorMessage;
            },
            set: function (value) {
                this._errorMessage = value || this.defaultTexts.invalid;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTextFieldComponent.prototype, "successMessage", {
            get: function () {
                return this._successMessage;
            },
            set: function (value) {
                this._successMessage = value || this.defaultTexts.valid;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTextFieldComponent.prototype, "required", {
            /** Whether the element is required. */
            get: function () {
                return this._required || i1.hasRequiredValidator(this.control || this._ngControl);
            },
            set: function (value) {
                this._required = i1.toBoolean(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTextFieldComponent.prototype, "disabled", {
            /** Whether the element is disabled. */
            get: function () {
                return this._disabled;
            },
            set: function (value) {
                this._disabled = i1.toBoolean(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTextFieldComponent.prototype, "readonly", {
            /** Whether the element is readonly. */
            get: function () {
                return this._readonly;
            },
            set: function (value) {
                this._readonly = i1.toBoolean(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTextFieldComponent.prototype, "rows", {
            /** Whether the element is textarea. */
            get: function () {
                return this._rows;
            },
            set: function (value) {
                this._rows = i1.toNumber(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTextFieldComponent.prototype, "maxrows", {
            /** Whether the element has maxrows. */
            get: function () {
                return this._maxrows;
            },
            set: function (value) {
                this._maxrows = i1.toNumber(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTextFieldComponent.prototype, "autofocus", {
            /** Whether the element has autofocus. */
            get: function () {
                return this._autofocus;
            },
            set: function (value) {
                this._autofocus = i1.toBoolean(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTextFieldComponent.prototype, "disableNativeValidityChecking", {
            // @experimental
            get: function () {
                return this._disableNativeValidityChecking;
            },
            set: function (value) {
                this._disableNativeValidityChecking = i1.toBoolean(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTextFieldComponent.prototype, "value", {
            /** The input element's value. */
            get: function () {
                return this._value;
            },
            set: function (v) {
                if (v !== this._value) {
                    this._value = v;
                    this.onChangeCallback(v);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTextFieldComponent.prototype, "ariaLabel", {
            get: function () {
                return this.arialabel;
            },
            set: function (v) {
                if (v) {
                    this.arialabel = v;
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTextFieldComponent.prototype, "inputGroupClass", {
            get: function () {
                var groupClass = '';
                if (this.customClass) {
                    var classList = this.customClass.split(' ');
                    classList.forEach(function (cls) {
                        if (cls === 'form-control-lg') {
                            groupClass = 'input-group-lg';
                        }
                        if (cls === 'form-control-sm') {
                            groupClass = 'input-group-sm';
                        }
                    });
                }
                return groupClass;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTextFieldComponent.prototype, "additionalMessage", {
            get: function () {
                if (this.control) {
                    for (var propertyName in this.control.errors) {
                        if (Object.prototype.hasOwnProperty.call(this.control.errors, propertyName) && this.control.touched) {
                            return this.errorMessage ? this.errorMessage : this.defaultTexts.invalid;
                        }
                    }
                    if (this.control.valid) {
                        return this.successMessage ? this.successMessage : this.defaultTexts.valid;
                    }
                    return null;
                }
            },
            enumerable: false,
            configurable: true
        });
        /**
         * interface ControlValueAccessor
         * writeValue(obj: any): void
         */
        AdaptTextFieldComponent.prototype.writeValue = function (value) {
            if (this._value !== value) {
                this._value = value;
                if (this._value !== null) {
                    this._applyTextOverflow();
                    this.valueChanged.emit(this._value);
                }
            }
        };
        /**
         * interface ControlValueAccessor
         * registerOnChange(fn: any): void
         */
        AdaptTextFieldComponent.prototype.registerOnChange = function (fn) {
            this.onChangeCallback = fn;
        };
        /**
         * interface ControlValueAccessor
         * registerOnTouched(fn: any): void
         */
        AdaptTextFieldComponent.prototype.registerOnTouched = function (fn) {
            this.onTouchedCallback = fn;
        };
        /**
         * interface ControlValueAccessor
         * setDisabledState(isDisabled: boolean)?: void
         */
        AdaptTextFieldComponent.prototype.setDisabledState = function (isDisabled) {
            this.disabled = isDisabled;
        };
        AdaptTextFieldComponent.prototype.ngOnInit = function () {
            this.nestedSettings = Object.assign(Object.assign({}, this.nestedSettingsDefault), this.nestedSettings);
            if (this.tooltipIcon && !this.popoverIcon) {
                this.tooltipConfig = {
                    iconName: this.tooltipIcon,
                    content: this.tooltipText,
                    placement: 'top',
                    popoverMode: false
                };
            }
            else if (this.popoverIcon) {
                this.tooltipConfig = {
                    iconName: this.popoverIcon,
                    content: this.popoverContent,
                    placement: this.popoverPlacement,
                    popoverMode: true,
                    popoverTriggers: this.popoverTriggers
                };
            }
            this._ngControl = this._injector.get(i6.NgControl, null);
        };
        AdaptTextFieldComponent.prototype.ngOnChanges = function (changes) {
            if (changes.autofocus) {
                this.setFocus();
            }
            // move from setter due to https://github.com/angular/angular/issues/32756
            if (changes.required) {
                i1.SafeCdr.detectChanges(this._cdr);
            }
        };
        AdaptTextFieldComponent.prototype.ngAfterContentChecked = function () {
            this.checkIfValid();
        };
        /**
         * Callback for the cases where the focused state of the input changes
         */
        AdaptTextFieldComponent.prototype.onFocus = function (event) {
            this.renderer.addClass(this.el, cssTextFieldClasses$1.FOCUS);
            this.focusEmitter.emit(event);
        };
        /**
         * Callback for the cases where the focused state is out of input element
         */
        AdaptTextFieldComponent.prototype.onBlur = function (event) {
            this.renderer.addClass(this.el, cssTextFieldClasses$1.FOCUS);
            this.onTouchedCallback();
            this.blurEmitter.emit(event);
        };
        /**
         * Check the input element on touch event
         */
        AdaptTextFieldComponent.prototype.checkOnTouch = function () {
            if (this.inputElement) {
                this.isDirty = this.inputElement.nativeElement.classList.contains(cssTextFieldClasses$1.NG_TOUCHED);
            }
        };
        /**
         * Check the input element on valid/invalid state
         */
        AdaptTextFieldComponent.prototype.checkIfValid = function () {
            if (this.nativeCheckGlobalDisabled === true) {
                return;
            }
            if (this.disableNativeValidityChecking) {
                return;
            }
            if (this.disabled) {
                this._setSuccessState();
                return;
            }
            this.checkOnTouch();
            if (this.setInvalidState && this.inputElement && this.inputElement.nativeElement.validity) {
                this._setErrorState();
                this.inputElement.nativeElement.classList.add(cssTextFieldClasses$1.NG_TOUCHED);
                this.isDirty = true;
                return;
            }
            if (this.inputElement && this.inputElement.nativeElement.validity && this.isDirty) {
                if (!this.inputElement.nativeElement.validity.valid) {
                    this._setErrorState();
                }
                else {
                    this._setSuccessState();
                }
            }
        };
        AdaptTextFieldComponent.prototype.onKeydown = function (event) {
            this.inputKeydown.emit(event);
        };
        AdaptTextFieldComponent.prototype.onKeypress = function (event) {
            this.inputKeypress.emit(event);
        };
        AdaptTextFieldComponent.prototype.onKeyup = function (event) {
            this.inputKeyup.emit(event);
            var input = this.inputElement.nativeElement;
            if (this.maxlength && input.value && input.value.toString().length > this.maxlength) {
                input.value = input.value.toString().substring(0, this.maxlength);
                this.value = input.value.toString().substring(0, this.maxlength);
            }
        };
        AdaptTextFieldComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            _super.prototype.ngAfterViewInit.call(this);
            var input = this.inputElement.nativeElement;
            this._isInput = input.nodeName === 'INPUT';
            if (this._isInput && this.overflowText) {
                this._ngZone.onStable
                    .pipe(operators.take(1))
                    .subscribe(function () {
                    _this.inputStyles = Object.assign({}, i1.getElementStyles(input));
                });
                this._resizeService.addResizeEventListener(this.elemRef.nativeElement, i1.debounce(this._applyTextOverflow.bind(this), 100));
            }
            rxjs.fromEvent(input, 'input')
                .pipe(operators.debounceTime(this.debounceTime), operators.distinctUntilChanged(), operators.tap(this._applyTextOverflow.bind(this)), operators.takeUntil(this._destroyed$))
                .subscribe(function () { return _this.valueChanged.emit(_this.value); });
        };
        AdaptTextFieldComponent.prototype.ngOnDestroy = function () {
            _super.prototype.ngOnDestroy.call(this);
            this._resizeService.removeResizeEventListener(this.elemRef.nativeElement);
            this._destroyed$.next(true);
            this._destroyed$.complete();
        };
        AdaptTextFieldComponent.prototype._applyTextOverflow = function () {
            if (this.overflowText && this.inputElement && this.inputTextWidthEl && this._isInput) {
                var div = this.inputTextWidthEl.nativeElement;
                var input = this.inputElement.nativeElement;
                this.isTextOverflow = div.clientWidth > input.clientWidth;
            }
        };
        AdaptTextFieldComponent.prototype._setErrorState = function () {
            this.isError = true;
            this.renderer.addClass(this.el, cssTextFieldClasses$1.FORM_DANGER);
            if (this.validState) {
                this.renderer.removeClass(this.el, cssTextFieldClasses$1.FORM_SUCCESS);
            }
        };
        AdaptTextFieldComponent.prototype._setSuccessState = function () {
            this.isError = false;
            this.renderer.removeClass(this.el, cssTextFieldClasses$1.FORM_DANGER);
            if (this.validState) {
                this.renderer.addClass(this.el, cssTextFieldClasses$1.FORM_SUCCESS);
            }
        };
        AdaptTextFieldComponent.prototype.setFocus = function () {
            var _this = this;
            if (!this.autofocus) {
                return;
            }
            /**
             * hot fix for autofocus attr in FF and IE
             */
            this._ngZone.onStable
                .pipe(operators.take(1))
                .subscribe(function () {
                _this.inputElement.nativeElement.focus();
            });
        };
        return AdaptTextFieldComponent;
    }(i2.AdaptRadarGenericDirective));
    AdaptTextFieldComponent.ɵfac = function AdaptTextFieldComponent_Factory(t) { return new (t || AdaptTextFieldComponent)(i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(i1__namespace.ResizeService), i0__namespace.ɵɵdirectiveInject(i2__namespace$1.Directionality), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i0__namespace.NgZone), i0__namespace.ɵɵdirectiveInject(i0__namespace.ChangeDetectorRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.Injector), i0__namespace.ɵɵdirectiveInject(DISABLE_NATIVE_VALIDITY_CHECKING, 8), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService)); };
    AdaptTextFieldComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptTextFieldComponent, selectors: [["adapt-textfield"], ["div", "form-group", ""]], viewQuery: function AdaptTextFieldComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$h, 5);
                i0__namespace.ɵɵviewQuery(_c1$d, 5);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.inputElement = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.inputTextWidthEl = _t.first);
            }
        }, hostVars: 7, hostBindings: function AdaptTextFieldComponent_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵattribute("id", ctx.id);
                i0__namespace.ɵɵclassProp("form-group", true)("textfield", true)("is-icons", ctx.iconValid && ctx.validState || ctx.iconInvalid && ctx.isError);
            }
        }, inputs: { overflowText: "overflowText", nested: "nested", nestedSettings: "nestedSettings", customClass: "customClass", label: "label", type: "type", id: "id", testID: "testID", icon: "icon", iconValid: "iconValid", iconInvalid: "iconInvalid", tabindex: "tabindex", maxlength: "maxlength", minlength: "minlength", placeholder: "placeholder", autocomplete: "autocomplete", pattern: "pattern", min: "min", max: "max", step: "step", name: "name", validState: "validState", requiredLabel: "requiredLabel", tooltipIcon: "tooltipIcon", tooltipText: "tooltipText", popoverIcon: "popoverIcon", popoverPlacement: "popoverPlacement", popoverTriggers: "popoverTriggers", popoverContent: "popoverContent", errorMessage: ["error", "errorMessage"], successMessage: ["success", "successMessage"], control: "control", setInvalidState: "setInvalidState", debounceTime: "debounceTime", required: "required", disabled: "disabled", readonly: "readonly", disabledStyleForReadonlyState: "disabledStyleForReadonlyState", rows: "rows", maxrows: "maxrows", autofocus: "autofocus", disableNativeValidityChecking: "disableNativeValidityChecking", ariaLabel: "ariaLabel", ariaDescribedBy: ["aria-describedby", "ariaDescribedBy"] }, outputs: { focusEmitter: "focus", blurEmitter: "blur", valueChanged: "valueChanged", inputKeydown: "inputKeydown", inputKeypress: "inputKeypress", inputKeyup: "inputKeyup" }, features: [i0__namespace.ɵɵProvidersFeature([ADAPT_TEXTFIELD_ACCESSOR]), i0__namespace.ɵɵInheritDefinitionFeature, i0__namespace.ɵɵNgOnChangesFeature], ngContentSelectors: _c3$7, decls: 31, vars: 13, consts: [[1, "adapt-textfield-label-wrapper"], [3, "for", "label", "requiredLabel", "showRequiredLabel", "tooltip"], [1, "textfield__wrapper"], [3, "error", "success", "iconValid", "iconInvalid", 4, "ngIf"], [3, "rows", "class", "form-control-disabled-look", "ngModel", "disabled", "required", "autofocus", "readonly", "placeholder", "pattern", "keydown", "keypress", "keyup", "ngModelChange", "focus", "blur", 4, "ngIf"], [3, "class", "form-control-disabled-look", "textfield-padding-transition", "pl-0", "pr-0", "type", "ngModel", "disabled", "required", "autofocus", "readonly", "autocomplete", "placeholder", "pattern", "keydown", "keypress", "keyup", "ngModelChange", "focus", "blur", 4, "ngIf"], ["class", "input-group", 3, "ngClass", 4, "ngIf"], ["role", "alert", 4, "ngIf"], [4, "ngIf"], [1, "textfield-input-wrapper"], ["class", "textfield-input-element-copy", 3, "ngStyle", 4, "ngIf"], [3, "error", "success", "iconValid", "iconInvalid"], [3, "rows", "ngModel", "disabled", "required", "autofocus", "readonly", "placeholder", "pattern", "keydown", "keypress", "keyup", "ngModelChange", "focus", "blur"], ["input", ""], [3, "type", "ngModel", "disabled", "required", "autofocus", "readonly", "autocomplete", "placeholder", "pattern", "keydown", "keypress", "keyup", "ngModelChange", "focus", "blur"], [1, "input-group", 3, "ngClass"], ["class", "input-group-prepend", 4, "ngIf"], ["class", "input-group-append", 3, "zIndex", 4, "ngIf"], [1, "input-group-prepend"], [1, "input-group-text"], [1, "input-group-append"], ["role", "alert"], ["class", "form-control-feedback m-0 pt-1 pb-2", 4, "ngIf"], [1, "form-control-feedback", "m-0", "pt-1", "pb-2"], [1, "textfield-input-element-copy", 3, "ngStyle"], ["inputTextWidthEl", ""]], template: function AdaptTextFieldComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵprojectionDef(_c2$b);
                i0__namespace.ɵɵelementStart(0, "div", 0);
                i0__namespace.ɵɵtext(1, "\n  ");
                i0__namespace.ɵɵelement(2, "adapt-rx-control-label", 1);
                i0__namespace.ɵɵtext(3, "\n\n  ");
                i0__namespace.ɵɵprojection(4);
                i0__namespace.ɵɵtext(5, "\n");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(6, "\n\n");
                i0__namespace.ɵɵelementStart(7, "div", 2);
                i0__namespace.ɵɵtext(8, "\n\n  ");
                i0__namespace.ɵɵtemplate(9, AdaptTextFieldComponent_adapt_textfield_icons_9_Template, 1, 4, "adapt-textfield-icons", 3);
                i0__namespace.ɵɵtext(10, "\n\n  ");
                i0__namespace.ɵɵtemplate(11, AdaptTextFieldComponent_textarea_11_Template, 3, 23, "textarea", 4);
                i0__namespace.ɵɵtext(12, "\n\n  ");
                i0__namespace.ɵɵtemplate(13, AdaptTextFieldComponent_input_13_Template, 2, 33, "input", 5);
                i0__namespace.ɵɵtext(14, "\n\n  ");
                i0__namespace.ɵɵtemplate(15, AdaptTextFieldComponent_div_15_Template, 9, 34, "div", 6);
                i0__namespace.ɵɵtext(16, "\n");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(17, "\n\n");
                i0__namespace.ɵɵtemplate(18, AdaptTextFieldComponent_div_18_Template, 4, 2, "div", 7);
                i0__namespace.ɵɵtext(19, "\n\n");
                i0__namespace.ɵɵtemplate(20, AdaptTextFieldComponent_div_20_Template, 4, 2, "div", 7);
                i0__namespace.ɵɵtext(21, "\n\n");
                i0__namespace.ɵɵtemplate(22, AdaptTextFieldComponent_div_22_Template, 4, 2, "div", 8);
                i0__namespace.ɵɵtext(23, "\n\n");
                i0__namespace.ɵɵelementStart(24, "div", 9);
                i0__namespace.ɵɵtext(25, "\n  ");
                i0__namespace.ɵɵtemplate(26, AdaptTextFieldComponent_div_26_Template, 3, 2, "div", 10);
                i0__namespace.ɵɵtext(27, "\n");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(28, "\n\n");
                i0__namespace.ɵɵprojection(29, 1);
                i0__namespace.ɵɵtext(30, "\n");
            }
            if (rf & 2) {
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("for", ctx.rows ? ctx.id + "_textarea" : ctx.id + "_input")("label", ctx.label)("requiredLabel", ctx.requiredLabel)("showRequiredLabel", ctx.required)("tooltip", ctx.tooltipConfig);
                i0__namespace.ɵɵadvance(7);
                i0__namespace.ɵɵproperty("ngIf", ctx.iconValid || ctx.iconInvalid);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.rows);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", !ctx.rows && !ctx.nested);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", !ctx.rows && ctx.nested);
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngIf", !ctx.disabled && !ctx.control && ctx.validState && (ctx.isError || !ctx.isError && ctx.isDirty));
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", !ctx.disabled && !ctx.control && !ctx.validState && ctx.isError);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.control && ctx.additionalMessage !== null);
                i0__namespace.ɵɵadvance(4);
                i0__namespace.ɵɵproperty("ngIf", ctx.overflowText);
            }
        }, directives: [i1__namespace.AdaptRxControlLabelComponent, i3__namespace.NgIf, AdaptTextfieldIconsComponent, i1__namespace.AdaptDragonInputHandlerDirective, i6__namespace.DefaultValueAccessor, i6__namespace.NgControlStatus, i6__namespace.NgModel, i6__namespace.RequiredValidator, i6__namespace.MaxLengthValidator, i6__namespace.MinLengthValidator, i6__namespace.PatternValidator, i3__namespace.NgClass, i3__namespace.NgStyle], encapsulation: 2, data: { animation: [
                i1$1.trigger('validationFeedbackAnimation', [
                    i1$1.transition(':enter', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                    ]),
                    i1$1.transition(':leave', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                    ])
                ]),
                i1$1.trigger('validationFeedbackChangeAnimation', [
                    i1$1.transition('* => *', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.opacity)
                    ])
                ])
            ] } });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptTextFieldComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-textfield, div[form-group]',
                        templateUrl: './textfield.component.html',
                        providers: [ADAPT_TEXTFIELD_ACCESSOR],
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: {
                            '[attr.id]': 'id',
                            '[class.form-group]': 'true',
                            '[class.textfield]': 'true',
                            '[class.is-icons]': '(iconValid && validState) || (iconInvalid && isError)'
                        },
                        animations: [
                            i1$1.trigger('validationFeedbackAnimation', [
                                i1$1.transition(':enter', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                                ]),
                                i1$1.transition(':leave', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                                ])
                            ]),
                            i1$1.trigger('validationFeedbackChangeAnimation', [
                                i1$1.transition('* => *', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.opacity)
                                ])
                            ])
                        ],
                        encapsulation: i0.ViewEncapsulation.None
                    }]
            }], function () {
            return [{ type: i0__namespace.ElementRef }, { type: i0__namespace.Renderer2 }, { type: i1__namespace.ResizeService }, { type: i2__namespace$1.Directionality }, { type: i1__namespace.AdaptTranslateService }, { type: i0__namespace.NgZone }, { type: i0__namespace.ChangeDetectorRef }, { type: i0__namespace.Injector }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [DISABLE_NATIVE_VALIDITY_CHECKING]
                        }] }, { type: i2__namespace.AdaptRadarService }];
        }, { overflowText: [{
                    type: i0.Input
                }], nested: [{
                    type: i0.Input
                }], nestedSettings: [{
                    type: i0.Input
                }], customClass: [{
                    type: i0.Input
                }], label: [{
                    type: i0.Input
                }], type: [{
                    type: i0.Input
                }], id: [{
                    type: i0.Input
                }], testID: [{
                    type: i0.Input
                }], icon: [{
                    type: i0.Input
                }], iconValid: [{
                    type: i0.Input
                }], iconInvalid: [{
                    type: i0.Input
                }], tabindex: [{
                    type: i0.Input
                }], maxlength: [{
                    type: i0.Input
                }], minlength: [{
                    type: i0.Input
                }], placeholder: [{
                    type: i0.Input
                }], autocomplete: [{
                    type: i0.Input
                }], pattern: [{
                    type: i0.Input
                }], min: [{
                    type: i0.Input
                }], max: [{
                    type: i0.Input
                }], step: [{
                    type: i0.Input
                }], name: [{
                    type: i0.Input
                }], validState: [{
                    type: i0.Input
                }], requiredLabel: [{
                    type: i0.Input
                }], tooltipIcon: [{
                    type: i0.Input
                }], tooltipText: [{
                    type: i0.Input
                }], popoverIcon: [{
                    type: i0.Input
                }], popoverPlacement: [{
                    type: i0.Input
                }], popoverTriggers: [{
                    type: i0.Input
                }], popoverContent: [{
                    type: i0.Input
                }], errorMessage: [{
                    type: i0.Input,
                    args: ['error']
                }], successMessage: [{
                    type: i0.Input,
                    args: ['success']
                }], control: [{
                    type: i0.Input
                }], setInvalidState: [{
                    type: i0.Input
                }], debounceTime: [{
                    type: i0.Input
                }], inputElement: [{
                    type: i0.ViewChild,
                    args: ['input']
                }], inputTextWidthEl: [{
                    type: i0.ViewChild,
                    args: ['inputTextWidthEl']
                }], focusEmitter: [{
                    type: i0.Output,
                    args: ['focus']
                }], blurEmitter: [{
                    type: i0.Output,
                    args: ['blur']
                }], valueChanged: [{
                    type: i0.Output
                }], inputKeydown: [{
                    type: i0.Output
                }], inputKeypress: [{
                    type: i0.Output
                }], inputKeyup: [{
                    type: i0.Output
                }], required: [{
                    type: i0.Input
                }], disabled: [{
                    type: i0.Input
                }], readonly: [{
                    type: i0.Input
                }], disabledStyleForReadonlyState: [{
                    type: i0.Input
                }], rows: [{
                    type: i0.Input
                }], maxrows: [{
                    type: i0.Input
                }], autofocus: [{
                    type: i0.Input
                }], disableNativeValidityChecking: [{
                    type: i0.Input
                }], ariaLabel: [{
                    type: i0.Input
                }], ariaDescribedBy: [{
                    type: i0.Input,
                    args: ['aria-describedby']
                }] });
    })();

    // TODO update types
    function AdaptListBuilderItemComponent_div_0_ng_container_2_Template(rf, ctx) {
        if (rf & 1) {
            var _r4_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵelementStart(2, "div", 3);
            i0__namespace.ɵɵtext(3, "\n      ");
            i0__namespace.ɵɵelementStart(4, "adapt-textfield", 4);
            i0__namespace.ɵɵlistener("ngModelChange", function AdaptListBuilderItemComponent_div_0_ng_container_2_Template_adapt_textfield_ngModelChange_4_listener($event) { i0__namespace.ɵɵrestoreView(_r4_1); var ctx_r3 = i0__namespace.ɵɵnextContext(2); return ctx_r3.inputControlModel = $event; })("blur", function AdaptListBuilderItemComponent_div_0_ng_container_2_Template_adapt_textfield_blur_4_listener() { i0__namespace.ɵɵrestoreView(_r4_1); var ctx_r5 = i0__namespace.ɵɵnextContext(2); return ctx_r5.isItemDisallowed ? ctx_r5.cancelEditMode() : ctx_r5.exitEditMode(); })("keyup", function AdaptListBuilderItemComponent_div_0_ng_container_2_Template_adapt_textfield_keyup_4_listener() { i0__namespace.ɵɵrestoreView(_r4_1); var ctx_r6 = i0__namespace.ɵɵnextContext(2); return ctx_r6.editChange(); })("keyup.esc", function AdaptListBuilderItemComponent_div_0_ng_container_2_Template_adapt_textfield_keyup_esc_4_listener() { i0__namespace.ɵɵrestoreView(_r4_1); var ctx_r7 = i0__namespace.ɵɵnextContext(2); return ctx_r7.cancelEditMode(); })("keydown.enter", function AdaptListBuilderItemComponent_div_0_ng_container_2_Template_adapt_textfield_keydown_enter_4_listener($event) { return $event.preventDefault(); })("keyup.enter", function AdaptListBuilderItemComponent_div_0_ng_container_2_Template_adapt_textfield_keyup_enter_4_listener() { i0__namespace.ɵɵrestoreView(_r4_1); var ctx_r9 = i0__namespace.ɵɵnextContext(2); return ctx_r9.isItemDisallowed ? false : ctx_r9.exitEditMode(); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(5, "\n    ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n\n    ");
            i0__namespace.ɵɵelementStart(7, "div", 5);
            i0__namespace.ɵɵtext(8, "\n      ");
            i0__namespace.ɵɵelement(9, "adapt-custom-actions", 6);
            i0__namespace.ɵɵtext(10, "\n    ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(11, "\n  ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵproperty("ngModel", ctx_r1.inputControlModel)("autofocus", true);
            i0__namespace.ɵɵadvance(5);
            i0__namespace.ɵɵproperty("alignedTo", ctx_r1.customActionsAlignedTo)("actions", ctx_r1.customActions);
        }
    }
    function AdaptListBuilderItemComponent_div_0_ng_container_4_adapt_icon_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-icon", 13);
        }
        if (rf & 2) {
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", "dots");
        }
    }
    function AdaptListBuilderItemComponent_div_0_ng_container_4_button_11_Template(rf, ctx) {
        if (rf & 1) {
            var _r14_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 14);
            i0__namespace.ɵɵlistener("click", function AdaptListBuilderItemComponent_div_0_ng_container_4_button_11_Template_button_click_0_listener() { i0__namespace.ɵɵrestoreView(_r14_1); var ctx_r13 = i0__namespace.ɵɵnextContext(3); return ctx_r13.enterEditMode(); });
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵelementStart(2, "span", 15);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n      ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r11 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵproperty("placement", ctx_r11.itemActionsTooltipConfig.editBtn.placement)("adaptRadarDisableEventSending", true)("adaptTooltip", ctx_r11.itemActionsTooltipConfig.editBtn.tooltipText);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r11.controlLabels.edit);
        }
    }
    function AdaptListBuilderItemComponent_div_0_ng_container_4_button_13_Template(rf, ctx) {
        if (rf & 1) {
            var _r16_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 16);
            i0__namespace.ɵɵlistener("click", function AdaptListBuilderItemComponent_div_0_ng_container_4_button_13_Template_button_click_0_listener() { i0__namespace.ɵɵrestoreView(_r16_1); var ctx_r15 = i0__namespace.ɵɵnextContext(3); return ctx_r15.deleteItem(); });
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵelementStart(2, "span", 15);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n      ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r12 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵproperty("placement", ctx_r12.itemActionsTooltipConfig.deleteBtn.placement)("adaptRadarDisableEventSending", true)("adaptTooltip", ctx_r12.itemActionsTooltipConfig.deleteBtn.tooltipText);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r12.controlLabels.delete);
        }
    }
    function AdaptListBuilderItemComponent_div_0_ng_container_4_Template(rf, ctx) {
        if (rf & 1) {
            var _r18_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n\n    ");
            i0__namespace.ɵɵtemplate(2, AdaptListBuilderItemComponent_div_0_ng_container_4_adapt_icon_2_Template, 1, 2, "adapt-icon", 7);
            i0__namespace.ɵɵtext(3, "\n\n    ");
            i0__namespace.ɵɵelementStart(4, "span", 8);
            i0__namespace.ɵɵlistener("keydown.ArrowUp", function AdaptListBuilderItemComponent_div_0_ng_container_4_Template_span_keydown_ArrowUp_4_listener($event) { i0__namespace.ɵɵrestoreView(_r18_1); var ctx_r17 = i0__namespace.ɵɵnextContext(2); return ctx_r17.onUp($event); })("keydown.ArrowDown", function AdaptListBuilderItemComponent_div_0_ng_container_4_Template_span_keydown_ArrowDown_4_listener($event) { i0__namespace.ɵɵrestoreView(_r18_1); var ctx_r19 = i0__namespace.ɵɵnextContext(2); return ctx_r19.onDown($event); });
            i0__namespace.ɵɵtext(5, "\n      ");
            i0__namespace.ɵɵelement(6, "adapt-highlight", 9);
            i0__namespace.ɵɵtext(7, "\n    ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(8, "\n\n    ");
            i0__namespace.ɵɵelementStart(9, "div", 10);
            i0__namespace.ɵɵtext(10, "\n      ");
            i0__namespace.ɵɵtemplate(11, AdaptListBuilderItemComponent_div_0_ng_container_4_button_11_Template, 5, 4, "button", 11);
            i0__namespace.ɵɵtext(12, "\n\n      ");
            i0__namespace.ɵɵtemplate(13, AdaptListBuilderItemComponent_div_0_ng_container_4_button_13_Template, 5, 4, "button", 12);
            i0__namespace.ɵɵtext(14, "\n    ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(15, "\n\n  ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r2 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r2.draggable);
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵproperty("result", ctx_r2.listItem.name)("term", ctx_r2.query);
            i0__namespace.ɵɵadvance(5);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r2.hideEdit);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r2.hideDelete);
        }
    }
    var _c0$g = function (a0, a1, a2) { return { "cursor-default": a0, "disabled": a1, "hover-disabled": a2 }; };
    function AdaptListBuilderItemComponent_div_0_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 1);
            i0__namespace.ɵɵtext(1, "\n\n  ");
            i0__namespace.ɵɵtemplate(2, AdaptListBuilderItemComponent_div_0_ng_container_2_Template, 12, 4, "ng-container", 2);
            i0__namespace.ɵɵtext(3, "\n\n\n  ");
            i0__namespace.ɵɵtemplate(4, AdaptListBuilderItemComponent_div_0_ng_container_4_Template, 16, 5, "ng-container", 2);
            i0__namespace.ɵɵtext(5, "\n");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r0 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction3(3, _c0$g, !!ctx_r0.query, ctx_r0.disabled, ctx_r0.disabled || ctx_r0.hideControls || ctx_r0.editMode));
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r0.editMode);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r0.editMode && ctx_r0.listItem);
        }
    }
    var AdaptListBuilderItemComponent = /** @class */ (function () {
        function AdaptListBuilderItemComponent(_ngZone) {
            this._ngZone = _ngZone;
            this.editMode = false;
            this.inputControlModel = '';
            this.customActionsAlignedTo = i1.AdaptCustomActionsAlignEnum.Right;
            this.id = '';
            this.query = '';
            this.hideControls = false;
            this.isItemDisallowed = false;
            this.hideEdit = false;
            this.hideDelete = false;
            this.draggable = true;
            this.disabled = false;
            // eslint-disable-next-line @angular-eslint/no-output-on-prefix
            this.onEdit = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-on-prefix
            this.onDelete = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-on-prefix
            this.onSave = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-on-prefix
            this.onCancel = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-on-prefix
            this.onKeyUp = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-on-prefix
            this.onKeyDown = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-on-prefix
            this.onEditChange = new i0.EventEmitter();
            // ### ControlValueAccessor implementation
            this.propagateChange = function () {
                return;
            };
        }
        Object.defineProperty(AdaptListBuilderItemComponent.prototype, "customActions", {
            get: function () {
                return [
                    {
                        name: this.controlLabels.cancel,
                        visible: true,
                        onClick: this.cancelEditMode.bind(this),
                        onMouseDown: function (event) {
                            event.preventDefault();
                        }
                    },
                    {
                        name: this.controlLabels.save,
                        visible: !this.isItemDisallowed,
                        onClick: this.exitEditMode.bind(this),
                        onMouseDown: function (event) {
                            event.preventDefault();
                        }
                    }
                ];
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Save value and exit edit mode
         */
        AdaptListBuilderItemComponent.prototype.exitEditMode = function () {
            this.editMode = false;
            this.listItem.name = this.inputControlModel;
            this.onSave.emit(this.listItem);
            this.onEditChange.emit('');
        };
        /**
         * Exit edit mode without saving
         */
        AdaptListBuilderItemComponent.prototype.cancelEditMode = function () {
            this.editMode = false;
            this.onCancel.emit(this.listItem);
            this.onEditChange.emit('');
        };
        AdaptListBuilderItemComponent.prototype.enterEditMode = function () {
            this.editMode = true;
            this.inputControlModel = this.listItem.name;
        };
        AdaptListBuilderItemComponent.prototype.deleteItem = function () {
            this.onDelete.emit(this.listItem);
        };
        AdaptListBuilderItemComponent.prototype.editChange = function () {
            this.onEditChange.emit(this.inputControlModel);
        };
        AdaptListBuilderItemComponent.prototype.onUp = function (e) {
            e.preventDefault();
            this.onKeyUp.emit();
            this._ngZone.onStable
                .pipe(operators.take(1))
                .subscribe((function () {
                e.target.focus();
            }).bind(e));
        };
        AdaptListBuilderItemComponent.prototype.onDown = function (e) {
            e.preventDefault();
            this.onKeyDown.emit();
        };
        AdaptListBuilderItemComponent.prototype.writeValue = function (value) {
            if (value) {
                this.listItem = value;
            }
        };
        AdaptListBuilderItemComponent.prototype.registerOnChange = function (fn) {
            this.propagateChange = fn;
        };
        AdaptListBuilderItemComponent.prototype.registerOnTouched = function () {
            return;
        };
        return AdaptListBuilderItemComponent;
    }());
    AdaptListBuilderItemComponent.ɵfac = function AdaptListBuilderItemComponent_Factory(t) { return new (t || AdaptListBuilderItemComponent)(i0__namespace.ɵɵdirectiveInject(i0__namespace.NgZone)); };
    AdaptListBuilderItemComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptListBuilderItemComponent, selectors: [["adapt-list-builder-item"]], hostVars: 3, hostBindings: function AdaptListBuilderItemComponent_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵattribute("id", ctx.id);
                i0__namespace.ɵɵstyleProp("display", "block");
            }
        }, inputs: { id: "id", query: "query", controlLabels: "controlLabels", itemActionsTooltipConfig: "itemActionsTooltipConfig", hideControls: "hideControls", isItemDisallowed: "isItemDisallowed", hideEdit: "hideEdit", hideDelete: "hideDelete", draggable: "draggable", disabled: "disabled" }, outputs: { onEdit: "onEdit", onDelete: "onDelete", onSave: "onSave", onCancel: "onCancel", onKeyUp: "onKeyUp", onKeyDown: "onKeyDown", onEditChange: "onEditChange" }, features: [i0__namespace.ɵɵProvidersFeature([
                {
                    provide: i6.NG_VALUE_ACCESSOR,
                    useExisting: i0.forwardRef(function () { return AdaptListBuilderItemComponent; }),
                    multi: true
                }
            ])], decls: 2, vars: 1, consts: [["class", "adapt-list-item adapt-builder-list-item", 3, "ngClass", 4, "ngIf"], [1, "adapt-list-item", "adapt-builder-list-item", 3, "ngClass"], [4, "ngIf"], [1, "adapt-list-item__edit-mode"], [3, "ngModel", "autofocus", "ngModelChange", "blur", "keyup", "keyup.esc", "keydown.enter", "keyup.enter"], [1, "adapt-list-item__controls"], [3, "alignedTo", "actions"], ["class", "adapt-list-drag m-end-1", 3, "adaptRadarDisableEventSending", "name", 4, "ngIf"], ["tabindex", "0", 1, "adapt-list-name", 3, "keydown.ArrowUp", "keydown.ArrowDown"], [3, "result", "term"], [1, "adapt-buttons-wrapper"], ["type", "button", "class", "d-icon-pencil_adapt btn btn-link list-update", 3, "placement", "adaptRadarDisableEventSending", "adaptTooltip", "click", 4, "ngIf"], ["type", "button", "class", "d-icon-trash_adapt btn btn-link list-remove", 3, "placement", "adaptRadarDisableEventSending", "adaptTooltip", "click", 4, "ngIf"], [1, "adapt-list-drag", "m-end-1", 3, "adaptRadarDisableEventSending", "name"], ["type", "button", 1, "d-icon-pencil_adapt", "btn", "btn-link", "list-update", 3, "placement", "adaptRadarDisableEventSending", "adaptTooltip", "click"], [1, "sr-only"], ["type", "button", 1, "d-icon-trash_adapt", "btn", "btn-link", "list-remove", 3, "placement", "adaptRadarDisableEventSending", "adaptTooltip", "click"]], template: function AdaptListBuilderItemComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵtemplate(0, AdaptListBuilderItemComponent_div_0_Template, 6, 7, "div", 0);
                i0__namespace.ɵɵtext(1, "\n");
            }
            if (rf & 2) {
                i0__namespace.ɵɵproperty("ngIf", ctx.listItem);
            }
        }, directives: [i3__namespace.NgIf, i3__namespace.NgClass, AdaptTextFieldComponent, i6__namespace.NgControlStatus, i6__namespace.NgModel, i1__namespace.AdaptCustomActionsComponent, i1__namespace.AdaptHighlightDirective, i1__namespace.AdaptIconComponent, i1__namespace.AdaptTooltipDirective], encapsulation: 2 });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptListBuilderItemComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-list-builder-item',
                        templateUrl: './list-builder-item.component.html',
                        providers: [
                            {
                                provide: i6.NG_VALUE_ACCESSOR,
                                useExisting: i0.forwardRef(function () { return AdaptListBuilderItemComponent; }),
                                multi: true
                            }
                        ],
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: {
                            '[attr.id]': 'id',
                            '[style.display]': "'block'"
                        }
                    }]
            }], function () { return [{ type: i0__namespace.NgZone }]; }, { id: [{
                    type: i0.Input
                }], query: [{
                    type: i0.Input
                }], controlLabels: [{
                    type: i0.Input
                }], itemActionsTooltipConfig: [{
                    type: i0.Input
                }], hideControls: [{
                    type: i0.Input
                }], isItemDisallowed: [{
                    type: i0.Input
                }], hideEdit: [{
                    type: i0.Input
                }], hideDelete: [{
                    type: i0.Input
                }], draggable: [{
                    type: i0.Input
                }], disabled: [{
                    type: i0.Input
                }], onEdit: [{
                    type: i0.Output
                }], onDelete: [{
                    type: i0.Output
                }], onSave: [{
                    type: i0.Output
                }], onCancel: [{
                    type: i0.Output
                }], onKeyUp: [{
                    type: i0.Output
                }], onKeyDown: [{
                    type: i0.Output
                }], onEditChange: [{
                    type: i0.Output
                }] });
    })();

    var _c0$f = ["list"];
    var _c1$c = ["search"];
    function AdaptListBuilderComponent_adapt_rx_control_label_3_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-rx-control-label", 8);
        }
        if (rf & 2) {
            var ctx_r0 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("label", ctx_r0.label)("requiredLabel", ctx_r0.texts.requiredText)("showRequiredLabel", ctx_r0.required)("subLabel", ctx_r0.subLabel)("tooltip", ctx_r0.tooltipConfig);
        }
    }
    function AdaptListBuilderComponent_div_9_button_7_Template(rf, ctx) {
        if (rf & 1) {
            var _r11_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 14);
            i0__namespace.ɵɵlistener("click", function AdaptListBuilderComponent_div_9_button_7_Template_button_click_0_listener() { i0__namespace.ɵɵrestoreView(_r11_1); var ctx_r10 = i0__namespace.ɵɵnextContext(2); return ctx_r10.addListItem(); });
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r9 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵproperty("disabled", ctx_r9.isItemDisallowed);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n        ", ctx_r9.texts.add, "\n      ");
        }
    }
    function AdaptListBuilderComponent_div_9_Template(rf, ctx) {
        if (rf & 1) {
            var _r13_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 9, 10);
            i0__namespace.ɵɵtext(2, "\n      ");
            i0__namespace.ɵɵelement(3, "span", 11);
            i0__namespace.ɵɵtext(4, "\n      ");
            i0__namespace.ɵɵelementStart(5, "input", 12);
            i0__namespace.ɵɵlistener("ngModelChange", function AdaptListBuilderComponent_div_9_Template_input_ngModelChange_5_listener($event) { i0__namespace.ɵɵrestoreView(_r13_1); var ctx_r12 = i0__namespace.ɵɵnextContext(); return ctx_r12.searchFilterText = $event; })("keyup", function AdaptListBuilderComponent_div_9_Template_input_keyup_5_listener() { i0__namespace.ɵɵrestoreView(_r13_1); var ctx_r14 = i0__namespace.ɵɵnextContext(); return ctx_r14.searchChange(); })("keyup.esc", function AdaptListBuilderComponent_div_9_Template_input_keyup_esc_5_listener() { i0__namespace.ɵɵrestoreView(_r13_1); var ctx_r15 = i0__namespace.ɵɵnextContext(); return ctx_r15.cleanField(); })("keydown.enter", function AdaptListBuilderComponent_div_9_Template_input_keydown_enter_5_listener($event) { return $event.preventDefault(); })("keyup.enter", function AdaptListBuilderComponent_div_9_Template_input_keyup_enter_5_listener() { i0__namespace.ɵɵrestoreView(_r13_1); var ctx_r17 = i0__namespace.ɵɵnextContext(); return ctx_r17.isItemDisallowed ? false : ctx_r17.addListItem(); })("blur", function AdaptListBuilderComponent_div_9_Template_input_blur_5_listener() { i0__namespace.ɵɵrestoreView(_r13_1); var ctx_r18 = i0__namespace.ɵɵnextContext(); return ctx_r18.onBlur(); })("focus", function AdaptListBuilderComponent_div_9_Template_input_focus_5_listener() { i0__namespace.ɵɵrestoreView(_r13_1); var ctx_r19 = i0__namespace.ɵɵnextContext(); return ctx_r19.onFocus(); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n      ");
            i0__namespace.ɵɵtemplate(7, AdaptListBuilderComponent_div_9_button_7_Template, 2, 2, "button", 13);
            i0__namespace.ɵɵtext(8, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(5);
            i0__namespace.ɵɵpropertyInterpolate("placeholder", ctx_r1.texts.searchPlaceholder);
            i0__namespace.ɵɵproperty("ngModel", ctx_r1.searchFilterText)("disabled", ctx_r1.disabled);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !(ctx_r1.disabled || ctx_r1.readonly) && ctx_r1.searchFilterText.length > 0);
        }
    }
    function AdaptListBuilderComponent_ng_container_14_div_2_div_3_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 20);
            i0__namespace.ɵɵtext(1, "\n            ");
            i0__namespace.ɵɵelementStart(2, "span");
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵelement(4, "span", 21);
            i0__namespace.ɵɵtext(5, "\n            ");
            i0__namespace.ɵɵelementStart(6, "span");
            i0__namespace.ɵɵtext(7);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(8, "\n          ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var data_r20 = i0__namespace.ɵɵnextContext(2).ngIf;
            var ctx_r23 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r23.texts.headerText);
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵtextInterpolate2("(", data_r20.length, " ", ctx_r23.texts.numberOptionsText, ")");
        }
    }
    function AdaptListBuilderComponent_ng_container_14_div_2_div_5_Template(rf, ctx) {
        if (rf & 1) {
            var _r29_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 22);
            i0__namespace.ɵɵlistener("cdkDragMoved", function AdaptListBuilderComponent_ng_container_14_div_2_div_5_Template_div_cdkDragMoved_0_listener() { i0__namespace.ɵɵrestoreView(_r29_1); var ctx_r28 = i0__namespace.ɵɵnextContext(3); return ctx_r28.move(); });
            i0__namespace.ɵɵtext(1, "\n\n            ");
            i0__namespace.ɵɵelementStart(2, "adapt-list-builder-item", 23);
            i0__namespace.ɵɵlistener("ngModelChange", function AdaptListBuilderComponent_ng_container_14_div_2_div_5_Template_adapt_list_builder_item_ngModelChange_2_listener($event) { var restoredCtx = i0__namespace.ɵɵrestoreView(_r29_1); var index_r27 = restoredCtx.index; var data_r20 = i0__namespace.ɵɵnextContext(2).ngIf; return (data_r20[index_r27] = $event); })("onEditChange", function AdaptListBuilderComponent_ng_container_14_div_2_div_5_Template_adapt_list_builder_item_onEditChange_2_listener($event) { i0__namespace.ɵɵrestoreView(_r29_1); var ctx_r32 = i0__namespace.ɵɵnextContext(3); return ctx_r32.editChange($event); })("onDelete", function AdaptListBuilderComponent_ng_container_14_div_2_div_5_Template_adapt_list_builder_item_onDelete_2_listener($event) { i0__namespace.ɵɵrestoreView(_r29_1); var ctx_r33 = i0__namespace.ɵɵnextContext(3); return ctx_r33.deleteListItem($event); })("onKeyUp", function AdaptListBuilderComponent_ng_container_14_div_2_div_5_Template_adapt_list_builder_item_onKeyUp_2_listener() { var restoredCtx = i0__namespace.ɵɵrestoreView(_r29_1); var index_r27 = restoredCtx.index; var ctx_r34 = i0__namespace.ɵɵnextContext(3); return ctx_r34.onUp(index_r27); })("onKeyDown", function AdaptListBuilderComponent_ng_container_14_div_2_div_5_Template_adapt_list_builder_item_onKeyDown_2_listener() { var restoredCtx = i0__namespace.ɵɵrestoreView(_r29_1); var index_r27 = restoredCtx.index; var ctx_r35 = i0__namespace.ɵɵnextContext(3); return ctx_r35.onDown(index_r27); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(3, "\n          ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var option_r26 = ctx.$implicit;
            var index_r27 = ctx.index;
            var data_r20 = i0__namespace.ɵɵnextContext(2).ngIf;
            var ctx_r24 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("@itemAnimation", undefined)("cdkDragDisabled", ctx_r24.disabled || ctx_r24.readonly || option_r26.disabled);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngModel", data_r20[index_r27])("id", ctx_r24.id + "_item_" + index_r27)("disabled", option_r26.disabled || ctx_r24.readonly || ctx_r24.disabled)("query", ctx_r24.searchFilterText)("controlLabels", ctx_r24.texts)("itemActionsTooltipConfig", ctx_r24.listItemActionsTooltip)("hideControls", ctx_r24.hideControls)("isItemDisallowed", ctx_r24.isItemDisallowed)("hideEdit", ctx_r24.disabled || ctx_r24.readonly || ctx_r24.hideEdit)("hideDelete", ctx_r24.disabled || ctx_r24.readonly || ctx_r24.hideDelete)("draggable", !(ctx_r24.disabled || ctx_r24.readonly));
        }
    }
    function AdaptListBuilderComponent_ng_container_14_div_2_Template(rf, ctx) {
        if (rf & 1) {
            var _r38_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 16, 17);
            i0__namespace.ɵɵlistener("cdkDropListDropped", function AdaptListBuilderComponent_ng_container_14_div_2_Template_div_cdkDropListDropped_0_listener($event) { i0__namespace.ɵɵrestoreView(_r38_1); var ctx_r37 = i0__namespace.ɵɵnextContext(2); return ctx_r37.drop($event); });
            i0__namespace.ɵɵtext(2, "\n\n          ");
            i0__namespace.ɵɵtemplate(3, AdaptListBuilderComponent_ng_container_14_div_2_div_3_Template, 9, 3, "div", 18);
            i0__namespace.ɵɵtext(4, "\n\n          ");
            i0__namespace.ɵɵtemplate(5, AdaptListBuilderComponent_ng_container_14_div_2_div_5_Template, 4, 13, "div", 19);
            i0__namespace.ɵɵtext(6, "\n\n        ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var data_r20 = i0__namespace.ɵɵnextContext().ngIf;
            var ctx_r21 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("cdkDropListDisabled", !!ctx_r21.searchFilterText || ctx_r21.disabled || ctx_r21.readonly)("@listAnimation", ctx_r21.options.length);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r21.hideListAreaLabel);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngForOf", data_r20);
        }
    }
    function AdaptListBuilderComponent_ng_container_14_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵtemplate(2, AdaptListBuilderComponent_ng_container_14_div_2_Template, 7, 4, "div", 15);
            i0__namespace.ɵɵtext(3, "\n      ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var data_r20 = ctx.ngIf;
            i0__namespace.ɵɵnextContext();
            var _r3 = i0__namespace.ɵɵreference(21);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", data_r20 && data_r20.length)("ngIfElse", _r3);
        }
    }
    function AdaptListBuilderComponent_ng_template_20_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtext(0, "\n      ");
            i0__namespace.ɵɵelementStart(1, "div", 24);
            i0__namespace.ɵɵtext(2, "\n        ");
            i0__namespace.ɵɵelementStart(3, "adapt-empty-state", 25);
            i0__namespace.ɵɵtext(4, "\n          ");
            i0__namespace.ɵɵelementStart(5, "div", 26);
            i0__namespace.ɵɵtext(6, "\n            ");
            i0__namespace.ɵɵprojection(7);
            i0__namespace.ɵɵtext(8, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(9, "\n        ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(10, "\n      ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(11, "\n    ");
        }
        if (rf & 2) {
            var ctx_r4 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("type", "objects")("label", ctx_r4.texts.notFound);
        }
    }
    function AdaptListBuilderComponent_div_24_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div");
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵelementStart(2, "p", 27);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r5 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("@validationFeedbackAnimation", undefined);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r5.displayErrorMessage);
        }
    }
    function AdaptListBuilderComponent_div_26_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div");
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵelementStart(2, "p", 27);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r6 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("@validationFeedbackAnimation", undefined);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r6.validationErrorMessage);
        }
    }
    function AdaptListBuilderComponent_div_28_p_2_strong_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "strong");
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var error_r41 = i0__namespace.ɵɵnextContext().$implicit;
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("", error_r41.name, " ");
        }
    }
    function AdaptListBuilderComponent_div_28_p_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "p", 27);
            i0__namespace.ɵɵtext(1, "\n      ");
            i0__namespace.ɵɵtemplate(2, AdaptListBuilderComponent_div_28_p_2_strong_2_Template, 2, 1, "strong", 5);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var error_r41 = ctx.$implicit;
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", error_r41.name);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n      ", error_r41.text, "\n    ");
        }
    }
    function AdaptListBuilderComponent_div_28_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 28);
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵtemplate(2, AdaptListBuilderComponent_div_28_p_2_Template, 4, 2, "p", 29);
            i0__namespace.ɵɵtext(3, "\n  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r7 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("@validationFeedbackAnimation", undefined);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngForOf", ctx_r7._self.errors);
        }
    }
    var _c2$a = [[["", 8, "empty-text"]]];
    var _c3$6 = function (a0) { return { "is-error": a0 }; };
    var _c4$4 = function (a0) { return { "height": a0 }; };
    var _c5$4 = function (a0) { return { "adapt-list-builder__list": a0 }; };
    var _c6$2 = [".empty-text"];
    var listBuilderCount = 0;
    var AdaptListBuilderComponent = /** @class */ (function (_super) {
        __extends(AdaptListBuilderComponent, _super);
        function AdaptListBuilderComponent(_renderer, _injector, ts, _adaptRadarService, _elem) {
            var _this = _super.call(this, _injector, ts, _adaptRadarService, _elem, i1.AdaptRadarAngularCustomEventName.AdaptListBuilder) || this;
            _this._renderer = _renderer;
            _this._injector = _injector;
            _this._adaptRadarService = _adaptRadarService;
            _this.searchFilterText = '';
            _this.hideControls = false;
            _this._self = _this;
            /**
             * Label icon with a tooltip or popover
             */
            _this.tooltipConfig = null;
            _this.defaultSettings = {
                enableSearch: true,
                checkedStyle: 'dpl-iconfont',
                hideLabel: false,
            };
            _this.defaultItemsTooltipConfig = {
                editBtn: {
                    placement: 'top',
                    tooltipText: ''
                },
                deleteBtn: {
                    placement: 'top',
                    tooltipText: ''
                }
            };
            _this.defaultTexts = {};
            _this.defaultErrorTexts = {};
            _this.isItemDisallowed = false;
            _this.listChanged = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.focus = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.blur = new i0.EventEmitter();
            /**
             * Unique id of the element.
             */
            _this.id = "list-builder-" + listBuilderCount++;
            _this.hideSearchField = false;
            _this.hideEdit = false;
            _this.hideDelete = false;
            _this.hideListAreaLabel = false;
            _this._isTouched = false;
            _this._onTouchedCallback = function () {
                return;
            };
            _this.setDefaultTexts(ts.getCurrentLanguage());
            return _this;
        }
        Object.defineProperty(AdaptListBuilderComponent.prototype, "isErrorExist", {
            get: function () {
                return this.required && !this.options.length && this._isTouched;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptListBuilderComponent.prototype, "value", {
            set: function (v) {
                this._value = v;
            },
            enumerable: false,
            configurable: true
        });
        AdaptListBuilderComponent.prototype.ngOnInit = function () {
            var _this = this;
            // Sending radar event directly to avoid issues with the premature invocation of "initControl" in parent ngOnInit()
            // ERROR NullInjectorError: R3InjectorError(AppModule)[NgControl -> NgControl -> NgControl]:
            // So do not call super.ngOnInit() here
            // TODO ?
            this._adaptRadarService.sendGenericComponentEvent(i1.AdaptRadarAngularCustomEventName.AdaptListBuilder);
            this.settings = Object.assign(Object.assign({}, this.defaultSettings), this.settings);
            this.texts = Object.assign(Object.assign({}, this.defaultTexts), this.texts);
            this.listItemActionsTooltip = Object.assign(Object.assign({}, this.defaultItemsTooltipConfig), this.listItemActionsTooltip);
            if (!this.displayErrorMessage) {
                this.displayErrorMessage = this.defaultErrorTexts.errorEmpty;
            }
            if (!this.validationErrorMessage) {
                this.validationErrorMessage = this.defaultErrorTexts.errorInvalid;
            }
            var _loop_1 = function (prop) {
                if (prop) {
                    this_1.overrideBuildInValidatorMessage(prop, function () { return _this._customErrorTexts[prop]; });
                }
            };
            var this_1 = this;
            for (var prop in this._customErrorTexts) {
                _loop_1(prop);
            }
            if (this.formControl) {
                _super.prototype.initControl.call(this);
            }
            if (this.tooltipInputIcon && !this.popoverIcon) {
                this.tooltipConfig = {
                    iconName: this.tooltipInputIcon,
                    content: this.tooltipInputText,
                    placement: 'top',
                    popoverMode: false
                };
            }
            else if (this.popoverIcon) {
                this.tooltipConfig = {
                    iconName: this.popoverIcon,
                    content: this.popoverContent,
                    placement: this.popoverPlacement,
                    popoverMode: true,
                    popoverTriggers: this.popoverTriggers
                };
            }
        };
        AdaptListBuilderComponent.prototype.setDefaultTexts = function (translation) {
            this.defaultTexts.requiredText = translation['adapt.common.required'];
            this.defaultTexts.searchPlaceholder = translation['adapt.listBuilder.searchPlaceholder'];
            this.defaultTexts.headerText = translation['adapt.listBuilder.headerText'];
            this.defaultTexts.numberOptionsText = translation['adapt.listBuilder.numberOptionsText'];
            this.defaultTexts.add = translation['adapt.listBuilder.add'];
            this.defaultTexts.notFound = translation['adapt.listBuilder.notFound'];
            this.defaultTexts.edit = translation['adapt.common.edit'];
            this.defaultTexts.save = translation['adapt.common.save'];
            this.defaultTexts.cancel = translation['adapt.common.cancel'];
            this.defaultTexts.delete = translation['adapt.common.delete'];
            // by some weird reason we have additional defaults for tooltip texts
            // TODO: double check do we need them
            this.defaultItemsTooltipConfig.editBtn.tooltipText = translation['adapt.listBuilder.editTooltip'];
            this.defaultItemsTooltipConfig.deleteBtn.tooltipText = translation['adapt.listBuilder.deleteTooltip'];
            this.defaultErrorTexts.errorEmpty = translation['adapt.listBuilder.error.empty'];
            this.defaultErrorTexts.errorInvalidName = translation['adapt.listBuilder.error.invalidName'];
            this.defaultErrorTexts.errorInvalid = translation['adapt.listBuilder.error.invalid'];
        };
        AdaptListBuilderComponent.prototype.writeValue = function (value) {
            if (value) {
                this.value = value;
            }
        };
        AdaptListBuilderComponent.prototype.registerOnChange = function (fn) {
            this.propagateChange = fn;
        };
        AdaptListBuilderComponent.prototype.registerOnTouched = function (fn) {
            this._onTouchedCallback = fn;
        };
        AdaptListBuilderComponent.prototype.validate = function () {
            var validationError = {
                invalidData: this._customErrorTexts.validationError || {
                    name: this.defaultErrorTexts.errorInvalidName,
                    text: this.defaultErrorTexts.errorInvalid
                }
            };
            if (!this.options.length) {
                return null;
            }
            return this.isItemDisallowed ? validationError : null;
        };
        AdaptListBuilderComponent.prototype.checkItemDisallowed = function () {
            return this.allowAddingToList && this.allowAddingToList(this.searchFilterText, this.options);
        };
        AdaptListBuilderComponent.prototype.addListItem = function () {
            if (this.disabled || this.readonly) {
                return;
            }
            this.options.push({
                id: this.generateListItemId() ? this.generateListItemId() : '',
                name: this.searchFilterText
            });
            this.cleanField();
            this.updateModel();
        };
        AdaptListBuilderComponent.prototype.deleteListItem = function (option) {
            var index = this.options.indexOf(option);
            this.options.splice(index, 1);
            this.updateModel();
            this._isTouched = true;
        };
        AdaptListBuilderComponent.prototype.editChange = function (value) {
            this.isItemDisallowed = this.allowAddingToList && this.allowAddingToList(value, this.options);
            // Need for reactive forms validation
            this._onTouchedCallback();
            this.propagateChange(this.options);
        };
        AdaptListBuilderComponent.prototype.drop = function (event) {
            i5.moveItemInArray(this.options, event.previousIndex, event.currentIndex);
            this.hideControls = false;
            this.updateModel();
        };
        AdaptListBuilderComponent.prototype.onUp = function (index) {
            if (this.disabled || this.readonly) {
                return;
            }
            i5.moveItemInArray(this.options, index, (index === 0) ? 0 : --index);
            this.updateModel();
        };
        AdaptListBuilderComponent.prototype.onDown = function (index) {
            if (this.disabled || this.readonly) {
                return;
            }
            var currentIndex = this.options.length;
            if (index !== this.options.length) {
                currentIndex = index++;
            }
            i5.moveItemInArray(this.options, index, currentIndex);
            this.updateModel();
        };
        AdaptListBuilderComponent.prototype.move = function () {
            this.hideControls = true;
        };
        AdaptListBuilderComponent.prototype.searchChange = function () {
            this.isItemDisallowed = this.checkItemDisallowed();
            this._onTouchedCallback();
            this.propagateChange(this.options);
        };
        AdaptListBuilderComponent.prototype.cleanField = function () {
            this.searchFilterText = '';
        };
        AdaptListBuilderComponent.prototype.onBlur = function () {
            this._renderer.removeClass(this.search.nativeElement, 'focused');
            this._isTouched = true;
            this.propagateChange(this.options);
            this._onTouchedCallback();
        };
        AdaptListBuilderComponent.prototype.onFocus = function () {
            this._renderer.addClass(this.search.nativeElement, 'focused');
        };
        AdaptListBuilderComponent.prototype.updateModel = function () {
            this.propagateChange(this.options);
            this._onTouchedCallback();
            this.listChanged.emit(this.options);
        };
        return AdaptListBuilderComponent;
    }(i1.FormComponent));
    AdaptListBuilderComponent.ɵfac = function AdaptListBuilderComponent_Factory(t) { return new (t || AdaptListBuilderComponent)(i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(i0__namespace.Injector), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptRadarAngularService), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef)); };
    AdaptListBuilderComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptListBuilderComponent, selectors: [["adapt-list-builder"]], viewQuery: function AdaptListBuilderComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$f, 5);
                i0__namespace.ɵɵviewQuery(_c1$c, 5);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.list = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.search = _t.first);
            }
        }, hostVars: 1, hostBindings: function AdaptListBuilderComponent_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵattribute("id", ctx.id);
            }
        }, inputs: { label: "label", subLabel: ["sub-label", "subLabel"], id: "id", name: "name", tooltipInputIcon: "tooltipInputIcon", tooltipInputText: "tooltipInputText", options: "options", settings: "settings", texts: "texts", listItemActionsTooltip: "listItemActionsTooltip", displayErrorMessage: "displayErrorMessage", validationErrorMessage: "validationErrorMessage", formControl: "formControl", menuHeight: "menuHeight", hideSearchField: "hideSearchField", hideEdit: "hideEdit", hideDelete: "hideDelete", hideListAreaLabel: "hideListAreaLabel", generateListItemId: "generateListItemId", allowAddingToList: "allowAddingToList" }, outputs: { listChanged: "listChanged", focus: "focus", blur: "blur" }, features: [i0__namespace.ɵɵProvidersFeature([
                i1.createFormControlValueAccessor(AdaptListBuilderComponent),
                i1.createFormControlValidator(AdaptListBuilderComponent),
                AdaptSelectSearchFilter
            ]), i0__namespace.ɵɵInheritDefinitionFeature], ngContentSelectors: _c6$2, decls: 31, vars: 24, consts: [[1, "adapt-list-builder", 3, "ngClass"], [3, "label", "requiredLabel", "showRequiredLabel", "subLabel", "tooltip", 4, "ngIf"], [1, "adapt-list-builder__wrp"], ["class", "adapt-list-builder__search", "tabindex", "-1", 4, "ngIf"], [1, "adapt-list-container", "adapt-list", 3, "ngStyle", "ngClass"], [4, "ngIf"], ["empty", ""], ["class", "has-danger", 4, "ngIf"], [3, "label", "requiredLabel", "showRequiredLabel", "subLabel", "tooltip"], ["tabindex", "-1", 1, "adapt-list-builder__search"], ["search", ""], [1, "d-icon-search"], ["type", "text", "tabindex", "0", 1, "form-control", "m-start-1", 3, "ngModel", "placeholder", "disabled", "ngModelChange", "keyup", "keyup.esc", "keydown.enter", "keyup.enter", "blur", "focus"], ["type", "button", "role", "button", "tabindex", "0", "class", "adapt-list-builder__add-item btn btn-link", 3, "disabled", "click", 4, "ngIf"], ["type", "button", "role", "button", "tabindex", "0", 1, "adapt-list-builder__add-item", "btn", "btn-link", 3, "disabled", "click"], ["cdkDropList", "", 3, "cdkDropListDisabled", "cdkDropListDropped", 4, "ngIf", "ngIfElse"], ["cdkDropList", "", 3, "cdkDropListDisabled", "cdkDropListDropped"], ["list", ""], ["class", "adapt-list-builder__list-header", 4, "ngIf"], ["class", "adapt-list-builder__list-wrp", "cdkDrag", "", "cdkDragLockAxis", "y", 3, "cdkDragDisabled", "cdkDragMoved", 4, "ngFor", "ngForOf"], [1, "adapt-list-builder__list-header"], [1, "letter-space"], ["cdkDrag", "", "cdkDragLockAxis", "y", 1, "adapt-list-builder__list-wrp", 3, "cdkDragDisabled", "cdkDragMoved"], [3, "ngModel", "id", "disabled", "query", "controlLabels", "itemActionsTooltipConfig", "hideControls", "isItemDisallowed", "hideEdit", "hideDelete", "draggable", "ngModelChange", "onEditChange", "onDelete", "onKeyUp", "onKeyDown"], [1, "list-container"], [3, "type", "label"], [1, "empty-info"], [1, "form-control-feedback", "m-0", "pt-1", "pb-2"], [1, "has-danger"], ["class", "form-control-feedback m-0 pt-1 pb-2", 4, "ngFor", "ngForOf"]], template: function AdaptListBuilderComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵprojectionDef(_c2$a);
                i0__namespace.ɵɵelementStart(0, "div", 0);
                i0__namespace.ɵɵtext(1, "\n\n  ");
                i0__namespace.ɵɵtext(2, "\n  ");
                i0__namespace.ɵɵtemplate(3, AdaptListBuilderComponent_adapt_rx_control_label_3_Template, 1, 5, "adapt-rx-control-label", 1);
                i0__namespace.ɵɵtext(4, "\n  ");
                i0__namespace.ɵɵtext(5, "\n\n  ");
                i0__namespace.ɵɵelementStart(6, "div", 2);
                i0__namespace.ɵɵtext(7, "\n\n    ");
                i0__namespace.ɵɵtext(8, "\n    ");
                i0__namespace.ɵɵtemplate(9, AdaptListBuilderComponent_div_9_Template, 9, 4, "div", 3);
                i0__namespace.ɵɵtext(10, "\n    ");
                i0__namespace.ɵɵtext(11, "\n\n    ");
                i0__namespace.ɵɵelementStart(12, "div", 4);
                i0__namespace.ɵɵtext(13, "\n      ");
                i0__namespace.ɵɵtemplate(14, AdaptListBuilderComponent_ng_container_14_Template, 4, 2, "ng-container", 5);
                i0__namespace.ɵɵpipe(15, "async");
                i0__namespace.ɵɵpipe(16, "searchFilterAsync");
                i0__namespace.ɵɵtext(17, "\n    ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(18, "\n    ");
                i0__namespace.ɵɵtext(19, "\n\n    ");
                i0__namespace.ɵɵtemplate(20, AdaptListBuilderComponent_ng_template_20_Template, 12, 2, "ng-template", null, 6, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵtext(22, "\n  ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(23, "\n\n  ");
                i0__namespace.ɵɵtemplate(24, AdaptListBuilderComponent_div_24_Template, 5, 2, "div", 5);
                i0__namespace.ɵɵtext(25, "\n\n  ");
                i0__namespace.ɵɵtemplate(26, AdaptListBuilderComponent_div_26_Template, 5, 2, "div", 5);
                i0__namespace.ɵɵtext(27, "\n\n  ");
                i0__namespace.ɵɵtemplate(28, AdaptListBuilderComponent_div_28_Template, 4, 2, "div", 7);
                i0__namespace.ɵɵtext(29, "\n");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(30, "\n");
            }
            if (rf & 2) {
                i0__namespace.ɵɵclassProp("disabled", ctx.disabled)("readonly", ctx.readonly);
                i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction1(18, _c3$6, ctx.isErrorExist || ctx.isItemDisallowed));
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngIf", !ctx.settings.hideLabel);
                i0__namespace.ɵɵadvance(6);
                i0__namespace.ɵɵproperty("ngIf", !ctx.hideSearchField);
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngStyle", i0__namespace.ɵɵpureFunction1(20, _c4$4, ctx.menuHeight))("ngClass", i0__namespace.ɵɵpureFunction1(22, _c5$4, !ctx.hideSearchField));
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", i0__namespace.ɵɵpipeBind1(15, 13, i0__namespace.ɵɵpipeBind2(16, 15, ctx.options, ctx.searchFilterText)));
                i0__namespace.ɵɵadvance(10);
                i0__namespace.ɵɵproperty("ngIf", ctx.isErrorExist && !ctx.isItemDisallowed && !ctx.formControl);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", !ctx.isErrorExist && ctx.isItemDisallowed && !ctx.formControl);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.formControl && ctx._self.errors.length > 0 && ctx._self.control.touched);
            }
        }, directives: [i3__namespace.NgClass, i3__namespace.NgIf, i3__namespace.NgStyle, i1__namespace.AdaptRxControlLabelComponent, i1__namespace.AdaptDragonInputHandlerDirective, i6__namespace.DefaultValueAccessor, i6__namespace.NgControlStatus, i6__namespace.NgModel, i5__namespace.CdkDropList, i3__namespace.NgForOf, i5__namespace.CdkDrag, AdaptListBuilderItemComponent, i1__namespace.AdaptEmptyStateComponent], pipes: [i3__namespace.AsyncPipe, AdaptSelectSearchFilterAsync], encapsulation: 2, data: { animation: [
                i1$1.trigger('listAnimation', [
                    i1$1.transition(':decrement', [
                        i1$1.group([
                            i1$1.query('@itemAnimation', [
                                i1$1.animateChild()
                            ], { optional: true })
                        ])
                    ]),
                    i1$1.transition(':enter, :increment', [
                        i1$1.query('@itemAnimation', [
                            i1$1.animateChild()
                        ], { optional: true })
                    ]),
                ]),
                i1$1.trigger('itemAnimation', [
                    i1$1.transition(':enter', [
                        i1$1.style({ transform: 'scale(0.5)', opacity: 0 }),
                        i1$1.animate(i1.ANIMATION_DURATION.medium + ' ' + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ transform: 'scale(1)', opacity: 1 }))
                    ]),
                    i1$1.transition(':leave', [
                        i1$1.style({ transform: 'scale(1)', opacity: 1, height: '*' }),
                        i1$1.animate(i1.ANIMATION_DURATION.medium + ' ' + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ transform: 'scale(0.5)', opacity: 0, height: '0px' }))
                    ]),
                ]),
                i1$1.trigger('validationFeedbackAnimation', [
                    i1$1.transition(':enter', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                    ]),
                    i1$1.transition(':leave', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                    ])
                ])
            ] } });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptListBuilderComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-list-builder',
                        templateUrl: './list-builder.component.html',
                        providers: [
                            i1.createFormControlValueAccessor(AdaptListBuilderComponent),
                            i1.createFormControlValidator(AdaptListBuilderComponent),
                            AdaptSelectSearchFilter
                        ],
                        animations: [
                            i1$1.trigger('listAnimation', [
                                i1$1.transition(':decrement', [
                                    i1$1.group([
                                        i1$1.query('@itemAnimation', [
                                            i1$1.animateChild()
                                        ], { optional: true })
                                    ])
                                ]),
                                i1$1.transition(':enter, :increment', [
                                    i1$1.query('@itemAnimation', [
                                        i1$1.animateChild()
                                    ], { optional: true })
                                ]),
                            ]),
                            i1$1.trigger('itemAnimation', [
                                i1$1.transition(':enter', [
                                    i1$1.style({ transform: 'scale(0.5)', opacity: 0 }),
                                    i1$1.animate(i1.ANIMATION_DURATION.medium + ' ' + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ transform: 'scale(1)', opacity: 1 }))
                                ]),
                                i1$1.transition(':leave', [
                                    i1$1.style({ transform: 'scale(1)', opacity: 1, height: '*' }),
                                    i1$1.animate(i1.ANIMATION_DURATION.medium + ' ' + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ transform: 'scale(0.5)', opacity: 0, height: '0px' }))
                                ]),
                            ]),
                            i1$1.trigger('validationFeedbackAnimation', [
                                i1$1.transition(':enter', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                                ]),
                                i1$1.transition(':leave', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                                ])
                            ])
                        ],
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: {
                            '[attr.id]': 'id'
                        }
                    }]
            }], function () { return [{ type: i0__namespace.Renderer2 }, { type: i0__namespace.Injector }, { type: i1__namespace.AdaptTranslateService }, { type: i1__namespace.AdaptRadarAngularService }, { type: i0__namespace.ElementRef }]; }, { list: [{
                    type: i0.ViewChild,
                    args: ['list']
                }], search: [{
                    type: i0.ViewChild,
                    args: ['search']
                }], listChanged: [{
                    type: i0.Output
                }], focus: [{
                    type: i0.Output
                }], blur: [{
                    type: i0.Output
                }], label: [{
                    type: i0.Input
                }], subLabel: [{
                    type: i0.Input,
                    args: ['sub-label']
                }], id: [{
                    type: i0.Input
                }], name: [{
                    type: i0.Input
                }], tooltipInputIcon: [{
                    type: i0.Input
                }], tooltipInputText: [{
                    type: i0.Input
                }], options: [{
                    type: i0.Input
                }], settings: [{
                    type: i0.Input
                }], texts: [{
                    type: i0.Input
                }], listItemActionsTooltip: [{
                    type: i0.Input
                }], displayErrorMessage: [{
                    type: i0.Input
                }], validationErrorMessage: [{
                    type: i0.Input
                }], formControl: [{
                    type: i0.Input
                }], menuHeight: [{
                    type: i0.Input
                }], hideSearchField: [{
                    type: i0.Input
                }], hideEdit: [{
                    type: i0.Input
                }], hideDelete: [{
                    type: i0.Input
                }], hideListAreaLabel: [{
                    type: i0.Input
                }], generateListItemId: [{
                    type: i0.Input
                }], allowAddingToList: [{
                    type: i0.Input
                }] });
    })();

    var AdaptTextFieldModule = /** @class */ (function () {
        function AdaptTextFieldModule() {
        }
        return AdaptTextFieldModule;
    }());
    AdaptTextFieldModule.ɵfac = function AdaptTextFieldModule_Factory(t) { return new (t || AdaptTextFieldModule)(); };
    AdaptTextFieldModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptTextFieldModule });
    AdaptTextFieldModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[
                i6.FormsModule,
                i3.CommonModule,
                AdaptTextFieldIconsModule,
                i1.AdaptIconModule,
                i1.AdaptTooltipModule,
                i1.AdaptPopoverModule.forRoot(),
                i1.AdaptDragonInputHandlerModule,
                i1.AdaptRxLabelModule
            ]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptTextFieldModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i6.FormsModule,
                            i3.CommonModule,
                            AdaptTextFieldIconsModule,
                            i1.AdaptIconModule,
                            i1.AdaptTooltipModule,
                            i1.AdaptPopoverModule.forRoot(),
                            i1.AdaptDragonInputHandlerModule,
                            i1.AdaptRxLabelModule
                        ],
                        exports: [AdaptTextFieldComponent],
                        declarations: [AdaptTextFieldComponent],
                    }]
            }], null, null);
    })();
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptTextFieldModule, { declarations: [AdaptTextFieldComponent], imports: [i6.FormsModule,
                i3.CommonModule,
                AdaptTextFieldIconsModule,
                i1.AdaptIconModule,
                i1.AdaptTooltipModule, i1__namespace.AdaptPopoverModule, i1.AdaptDragonInputHandlerModule,
                i1.AdaptRxLabelModule], exports: [AdaptTextFieldComponent] });
    })();

    /* eslint-disable @typescript-eslint/no-explicit-any */
    var _c0$e = ["optionButton"];
    function AdaptTypeaheadWindowComponent_ng_template_1_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtext(0, "\n      ");
            i0__namespace.ɵɵelement(1, "adapt-highlight", 2);
            i0__namespace.ɵɵtext(2, "\n    ");
        }
        if (rf & 2) {
            var result_r4 = ctx.result;
            var term_r5 = ctx.term;
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("result", ctx_r1.formatter(result_r4))("term", term_r5);
        }
    }
    function AdaptTypeaheadWindowComponent_ng_container_4_button_4_ng_template_3_Template(rf, ctx) { }
    var _c1$b = function (a0, a1) { return { result: a0, term: a1 }; };
    function AdaptTypeaheadWindowComponent_ng_container_4_button_4_Template(rf, ctx) {
        if (rf & 1) {
            var _r12_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 5, 6);
            i0__namespace.ɵɵlistener("mouseenter", function AdaptTypeaheadWindowComponent_ng_container_4_button_4_Template_button_mouseenter_0_listener() { var restoredCtx = i0__namespace.ɵɵrestoreView(_r12_1); var idx_r8 = restoredCtx.index; var ctx_r11 = i0__namespace.ɵɵnextContext(2); return ctx_r11.markActive(idx_r8); })("click", function AdaptTypeaheadWindowComponent_ng_container_4_button_4_Template_button_click_0_listener() { var restoredCtx = i0__namespace.ɵɵrestoreView(_r12_1); var result_r7 = restoredCtx.$implicit; var ctx_r13 = i0__namespace.ɵɵnextContext(2); return ctx_r13.select(result_r7); });
            i0__namespace.ɵɵtext(2, "\n          ");
            i0__namespace.ɵɵtemplate(3, AdaptTypeaheadWindowComponent_ng_container_4_button_4_ng_template_3_Template, 0, 0, "ng-template", 7);
            i0__namespace.ɵɵtext(4, "\n        ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var result_r7 = ctx.$implicit;
            var idx_r8 = ctx.index;
            var ctx_r6 = i0__namespace.ɵɵnextContext(2);
            var _r0 = i0__namespace.ɵɵreference(2);
            i0__namespace.ɵɵclassProp("active", idx_r8 === ctx_r6.activeIdx);
            i0__namespace.ɵɵproperty("id", ctx_r6.id + "-" + idx_r8);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngTemplateOutlet", ctx_r6.resultTemplate || _r0)("ngTemplateOutletContext", i0__namespace.ɵɵpureFunction2(5, _c1$b, result_r7, ctx_r6.term));
        }
    }
    var _c2$9 = function (a0) { return { "height": a0 }; };
    function AdaptTypeaheadWindowComponent_ng_container_4_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n      ");
            i0__namespace.ɵɵelementStart(2, "cdk-virtual-scroll-viewport", 3);
            i0__namespace.ɵɵtext(3, "\n        ");
            i0__namespace.ɵɵtemplate(4, AdaptTypeaheadWindowComponent_ng_container_4_button_4_Template, 5, 8, "button", 4);
            i0__namespace.ɵɵtext(5, "\n      ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n    ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r2 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("itemSize", ctx_r2.virtualScrollItemSize)("ngStyle", i0__namespace.ɵɵpureFunction1(4, _c2$9, ctx_r2.virtualScrollDropdownHeight));
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("cdkVirtualForOf", ctx_r2.results)("cdkVirtualForTrackBy", ctx_r2.trackByForResults);
        }
    }
    function AdaptTypeaheadWindowComponent_ng_container_6_button_2_ng_template_3_Template(rf, ctx) { }
    function AdaptTypeaheadWindowComponent_ng_container_6_button_2_Template(rf, ctx) {
        if (rf & 1) {
            var _r20_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 5, 6);
            i0__namespace.ɵɵlistener("mouseenter", function AdaptTypeaheadWindowComponent_ng_container_6_button_2_Template_button_mouseenter_0_listener() { var restoredCtx = i0__namespace.ɵɵrestoreView(_r20_1); var idx_r16 = restoredCtx.index; var ctx_r19 = i0__namespace.ɵɵnextContext(2); return ctx_r19.markActive(idx_r16); })("click", function AdaptTypeaheadWindowComponent_ng_container_6_button_2_Template_button_click_0_listener() { var restoredCtx = i0__namespace.ɵɵrestoreView(_r20_1); var result_r15 = restoredCtx.$implicit; var ctx_r21 = i0__namespace.ɵɵnextContext(2); return ctx_r21.select(result_r15); });
            i0__namespace.ɵɵtext(2, "\n        ");
            i0__namespace.ɵɵtemplate(3, AdaptTypeaheadWindowComponent_ng_container_6_button_2_ng_template_3_Template, 0, 0, "ng-template", 7);
            i0__namespace.ɵɵtext(4, "\n      ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var result_r15 = ctx.$implicit;
            var idx_r16 = ctx.index;
            var ctx_r14 = i0__namespace.ɵɵnextContext(2);
            var _r0 = i0__namespace.ɵɵreference(2);
            i0__namespace.ɵɵclassProp("active", idx_r16 === ctx_r14.activeIdx);
            i0__namespace.ɵɵproperty("id", ctx_r14.id + "-" + idx_r16);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngTemplateOutlet", ctx_r14.resultTemplate || _r0)("ngTemplateOutletContext", i0__namespace.ɵɵpureFunction2(5, _c1$b, result_r15, ctx_r14.term));
        }
    }
    function AdaptTypeaheadWindowComponent_ng_container_6_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n      ");
            i0__namespace.ɵɵtemplate(2, AdaptTypeaheadWindowComponent_ng_container_6_button_2_Template, 5, 8, "button", 8);
            i0__namespace.ɵɵtext(3, "\n    ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r3 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngForOf", ctx_r3.results)("ngForTrackBy", ctx_r3.trackByForResults);
        }
    }
    var AdaptTypeaheadWindowComponent = /** @class */ (function () {
        function AdaptTypeaheadWindowComponent(_elementRef, _ngZone) {
            this._elementRef = _elementRef;
            this._ngZone = _ngZone;
            this.activeIdx = 0;
            /**
             * Flag indicating if the first row should be active initially
             */
            this.focusFirst = true;
            /**
             * A function used to format a given result before display. This function should return a formatted string without any
             * HTML markup
             */
            this.formatter = i1.toString;
            /**
             * The flag informing that the popup is appended to document.body
             */
            this.appendedToBody = false;
            /**
             * Event raised when user selects a particular result row
             */
            // eslint-disable-next-line @angular-eslint/no-output-native, @angular-eslint/no-output-rename
            this.selectEvent = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-rename
            this.activeChangeEvent = new i0.EventEmitter();
        }
        Object.defineProperty(AdaptTypeaheadWindowComponent.prototype, "className", {
            get: function () {
                return "dropdown-menu show " + (this.hostClass || '') + " " + (this.virtualScroll ? 'dropdown-menu_virtual-scroll' : '');
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTypeaheadWindowComponent.prototype, "dropdownWidth", {
            get: function () {
                return this.virtualScroll ? this.virtualScrollDropdownWidth : 'auto';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTypeaheadWindowComponent.prototype, "popupZIndex", {
            get: function () {
                return this.appendedToBody ? '1060' : null;
            },
            enumerable: false,
            configurable: true
        });
        AdaptTypeaheadWindowComponent.prototype.hasActive = function () {
            return this.activeIdx > -1 && this.activeIdx < this.results.length;
        };
        AdaptTypeaheadWindowComponent.prototype.getActive = function () {
            return this.results[this.activeIdx];
        };
        AdaptTypeaheadWindowComponent.prototype.markActive = function (activeIdx) {
            this.activeIdx = activeIdx;
            this._activeChanged();
        };
        AdaptTypeaheadWindowComponent.prototype.next = function () {
            if (this.activeIdx !== this.results.length - 1) {
                this.activeIdx++;
            }
            this._activeChanged();
        };
        AdaptTypeaheadWindowComponent.prototype.prev = function () {
            if (this.activeIdx < 0) {
                this.activeIdx = 0;
            }
            else if (this.activeIdx > 0) {
                this.activeIdx--;
            }
            this._activeChanged();
        };
        AdaptTypeaheadWindowComponent.prototype.resetActive = function () {
            this.activeIdx = this.focusFirst ? 0 : -1;
            this._activeChanged();
        };
        AdaptTypeaheadWindowComponent.prototype.select = function (item) {
            this.selectEvent.emit(item);
        };
        AdaptTypeaheadWindowComponent.prototype.ngOnInit = function () {
            this.resetActive();
        };
        AdaptTypeaheadWindowComponent.prototype.trackByForResults = function (index) {
            return index;
        };
        AdaptTypeaheadWindowComponent.prototype._activeChanged = function () {
            this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);
            this.scrollToActiveItem();
        };
        AdaptTypeaheadWindowComponent.prototype.scrollToActiveItem = function () {
            var _this = this;
            this._ngZone.onStable.pipe(operators.take(1)).subscribe(function () {
                if (!_this.optionButtons) {
                    return;
                }
                var activeButtonElRef = _this.optionButtons.find(function (el) { return el.nativeElement.classList.contains('active'); });
                if (activeButtonElRef) {
                    var buttonEl = activeButtonElRef.nativeElement;
                    i1.scrollToActive(buttonEl);
                }
            });
        };
        return AdaptTypeaheadWindowComponent;
    }());
    AdaptTypeaheadWindowComponent.ɵfac = function AdaptTypeaheadWindowComponent_Factory(t) { return new (t || AdaptTypeaheadWindowComponent)(i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.NgZone)); };
    AdaptTypeaheadWindowComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptTypeaheadWindowComponent, selectors: [["ngb-typeahead-window"], ["adapt-typeahead-window"]], viewQuery: function AdaptTypeaheadWindowComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$e, 5);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.optionButtons = _t);
            }
        }, hostAttrs: ["role", "listbox"], hostVars: 7, hostBindings: function AdaptTypeaheadWindowComponent_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵhostProperty("id", ctx.id);
                i0__namespace.ɵɵclassMap(ctx.className);
                i0__namespace.ɵɵstyleProp("width", ctx.dropdownWidth)("z-index", ctx.popupZIndex);
            }
        }, inputs: { id: "id", focusFirst: "focusFirst", results: "results", term: "term", formatter: "formatter", resultTemplate: "resultTemplate", appendedToBody: "appendedToBody", hostClass: "hostClass", virtualScroll: "virtualScroll", virtualScrollItemSize: "virtualScrollItemSize", virtualScrollDropdownHeight: "virtualScrollDropdownHeight", virtualScrollDropdownWidth: "virtualScrollDropdownWidth" }, outputs: { selectEvent: "select", activeChangeEvent: "activeChange" }, exportAs: ["ngbTypeaheadWindow"], decls: 8, vars: 2, consts: [["rt", ""], [4, "ngIf"], [3, "result", "term"], [3, "itemSize", "ngStyle"], ["type", "button", "class", "dropdown-item", "role", "option", 3, "id", "active", "mouseenter", "click", 4, "cdkVirtualFor", "cdkVirtualForOf", "cdkVirtualForTrackBy"], ["type", "button", "role", "option", 1, "dropdown-item", 3, "id", "mouseenter", "click"], ["optionButton", ""], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["type", "button", "class", "dropdown-item", "role", "option", 3, "id", "active", "mouseenter", "click", 4, "ngFor", "ngForOf", "ngForTrackBy"]], template: function AdaptTypeaheadWindowComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵtext(0, "\n    ");
                i0__namespace.ɵɵtemplate(1, AdaptTypeaheadWindowComponent_ng_template_1_Template, 3, 2, "ng-template", null, 0, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵtext(3, "\n    ");
                i0__namespace.ɵɵtemplate(4, AdaptTypeaheadWindowComponent_ng_container_4_Template, 7, 6, "ng-container", 1);
                i0__namespace.ɵɵtext(5, "\n    ");
                i0__namespace.ɵɵtemplate(6, AdaptTypeaheadWindowComponent_ng_container_6_Template, 4, 2, "ng-container", 1);
                i0__namespace.ɵɵtext(7, "\n  ");
            }
            if (rf & 2) {
                i0__namespace.ɵɵadvance(4);
                i0__namespace.ɵɵproperty("ngIf", ctx.virtualScroll);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", !ctx.virtualScroll);
            }
        }, directives: [i3__namespace.NgIf, i1__namespace.AdaptHighlightDirective, i3__namespace$2.CdkVirtualScrollViewport, i3__namespace$2.CdkFixedSizeVirtualScroll, i3__namespace.NgStyle, i3__namespace$2.CdkVirtualForOf, i3__namespace.NgTemplateOutlet, i3__namespace.NgForOf], encapsulation: 2 });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptTypeaheadWindowComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'ngb-typeahead-window, adapt-typeahead-window',
                        exportAs: 'ngbTypeaheadWindow',
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: { 'role': 'listbox', '[id]': 'id' },
                        template: "\n    <ng-template #rt let-result=\"result\" let-term=\"term\">\n      <adapt-highlight [result]=\"formatter(result)\" [term]=\"term\"></adapt-highlight>\n    </ng-template>\n    <ng-container *ngIf=\"virtualScroll\">\n      <cdk-virtual-scroll-viewport\n        [itemSize]=\"virtualScrollItemSize\"\n        [ngStyle]=\"{'height': virtualScrollDropdownHeight}\">\n        <button #optionButton\n                *cdkVirtualFor=\"let result of results; let idx = index; trackBy: trackByForResults\"\n                type=\"button\"\n                class=\"dropdown-item\"\n                role=\"option\"\n                [id]=\"id + '-' + idx\"\n                [class.active]=\"idx === activeIdx\"\n                (mouseenter)=\"markActive(idx)\"\n                (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n                       [ngTemplateOutletContext]=\"{result: result, term: term}\"></ng-template>\n        </button>\n      </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <ng-container *ngIf=\"!virtualScroll\">\n      <button #optionButton\n              *ngFor=\"let result of results; let idx = index; trackBy: trackByForResults\"\n              type=\"button\"\n              class=\"dropdown-item\"\n              role=\"option\"\n              [id]=\"id + '-' + idx\"\n              [class.active]=\"idx === activeIdx\"\n              (mouseenter)=\"markActive(idx)\"\n              (click)=\"select(result)\">\n        <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n                     [ngTemplateOutletContext]=\"{result: result, term: term}\"></ng-template>\n      </button>\n    </ng-container>\n  "
                    }]
            }], function () { return [{ type: i0__namespace.ElementRef }, { type: i0__namespace.NgZone }]; }, { id: [{
                    type: i0.Input
                }], focusFirst: [{
                    type: i0.Input
                }], results: [{
                    type: i0.Input
                }], term: [{
                    type: i0.Input
                }], formatter: [{
                    type: i0.Input
                }], resultTemplate: [{
                    type: i0.Input
                }], appendedToBody: [{
                    type: i0.Input
                }], hostClass: [{
                    type: i0.Input
                }], virtualScroll: [{
                    type: i0.Input
                }], virtualScrollItemSize: [{
                    type: i0.Input
                }], virtualScrollDropdownHeight: [{
                    type: i0.Input
                }], virtualScrollDropdownWidth: [{
                    type: i0.Input
                }], selectEvent: [{
                    type: i0.Output,
                    args: ['select']
                }], activeChangeEvent: [{
                    type: i0.Output,
                    args: ['activeChange']
                }], optionButtons: [{
                    type: i0.ViewChildren,
                    args: ['optionButton']
                }], className: [{
                    type: i0.HostBinding,
                    args: ['class']
                }], dropdownWidth: [{
                    type: i0.HostBinding,
                    args: ['style.width']
                }], popupZIndex: [{
                    type: i0.HostBinding,
                    args: ['style.zIndex']
                }] });
    })();

    /* eslint-disable @typescript-eslint/no-explicit-any */
    var AdaptTypeaheadConfig = /** @class */ (function () {
        function AdaptTypeaheadConfig() {
            this.editable = false;
            this.focusFirst = false;
            this.showHint = false;
        }
        return AdaptTypeaheadConfig;
    }());
    AdaptTypeaheadConfig.ɵfac = function AdaptTypeaheadConfig_Factory(t) { return new (t || AdaptTypeaheadConfig)(); };
    AdaptTypeaheadConfig.ɵprov = /*@__PURE__*/ i0__namespace.ɵɵdefineInjectable({ token: AdaptTypeaheadConfig, factory: AdaptTypeaheadConfig.ɵfac });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptTypeaheadConfig, [{
                type: i0.Injectable
            }], null, null);
    })();
    /**
     * Configuration service for the AdaptTypeahead component.
     * You can inject this service, typically in your root component, and customize the values of its properties in
     * order to provide default values for all the typeaheads used in the application.
     */
    var AdaptTypeaheadModel = /** @class */ (function () {
        function AdaptTypeaheadModel(_dir) {
            this._dir = _dir;
            this.editable = true;
            this.focusFirst = true;
            this.showHint = false;
            this._isRtl = false;
            this._isRtl = this._dir.value === 'rtl';
            this.placement = 'auto';
        }
        return AdaptTypeaheadModel;
    }());
    AdaptTypeaheadModel.ɵfac = function AdaptTypeaheadModel_Factory(t) { return new (t || AdaptTypeaheadModel)(i0__namespace.ɵɵinject(i2__namespace$1.Directionality)); };
    AdaptTypeaheadModel.ɵprov = /*@__PURE__*/ i0__namespace.ɵɵdefineInjectable({ token: AdaptTypeaheadModel, factory: AdaptTypeaheadModel.ɵfac });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptTypeaheadModel, [{
                type: i0.Injectable
            }], function () { return [{ type: i2__namespace$1.Directionality }]; }, null);
    })();

    /* eslint-disable @typescript-eslint/no-explicit-any */
    var Key;
    (function (Key) {
        Key[Key["Tab"] = 9] = "Tab";
        Key[Key["Enter"] = 13] = "Enter";
        Key[Key["Escape"] = 27] = "Escape";
        Key[Key["ArrowUp"] = 38] = "ArrowUp";
        Key[Key["ArrowDown"] = 40] = "ArrowDown";
    })(Key || (Key = {}));
    var NGB_TYPEAHEAD_VALUE_ACCESSOR = {
        provide: i6.NG_VALUE_ACCESSOR,
        useExisting: i0.forwardRef(function () { return AdaptTypeaheadDirective; }),
        multi: true
    };
    var nextWindowId = 0;
    /**
     * NgbTypeahead directive provides a simple way of creating powerful typeaheads from any text input
     */
    var AdaptTypeaheadDirective = /** @class */ (function () {
        function AdaptTypeaheadDirective(_elementRef, _viewContainerRef, _renderer, _injector, componentFactoryResolver, config, ngZone, _live, _layerService, _deviceDetection, _applicationRef) {
            var _this = this;
            this._elementRef = _elementRef;
            this._viewContainerRef = _viewContainerRef;
            this._renderer = _renderer;
            this._injector = _injector;
            this._live = _live;
            this._layerService = _layerService;
            this._deviceDetection = _deviceDetection;
            this._applicationRef = _applicationRef;
            /**
             * Value for the configurable autocomplete attribute.
             * Defaults to 'off' to disable the native browser autocomplete, but this standard value does not seem
             * to be always correctly taken into account.
             */
            this.autocomplete = 'off';
            /**
             * Disables result provisioning while true
             */
            this.preventResults = false;
            /**
             * Placement of a typeahead accepts:
             * "top", "top-left", "top-right", "bottom", "bottom-left", "bottom-right",
             * "left", "left-top", "left-bottom", "right", "right-top", "right-bottom"
             * and array of above values.
             */
            this.placement = 'auto';
            /**
             * Open popup on focus
             */
            this.openOnFocus = false;
            /**
             * An event emitted when a match is selected. Event payload is of type NgbTypeaheadSelectItemEvent.
             */
            this.selectItem = new i0.EventEmitter();
            /**
             * An event emitted when a typeAhead drop down is shown.
             */
            this.typeAheadPopupOpen = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-on-prefix
            this.onBlur = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-on-prefix
            this.onFocus = new i0.EventEmitter();
            this.popupId = "ngb-typeahead-" + nextWindowId++;
            this._openOnFocus$ = new rxjs.Subject();
            this._isIE = false;
            this._onTouched = function () {
                return;
            };
            this._onChange = function () {
                return;
            };
            this.container = config.container;
            this.editable = config.editable;
            this.focusFirst = config.focusFirst;
            this.showHint = config.showHint;
            this.placement = config.placement;
            this._valueChanges = rxjs.fromEvent(_elementRef.nativeElement, 'input')
                .pipe(operators.map(function ($event) { return $event.target.value; }), operators.mergeMap(function (value) {
                // IE11 emit input event while placeholder contain spec. caracters
                // fix for the issue https://github.bmc.com/bmc-ux/adapt-angular/issues/2836
                // if it's IE need to check if input is focused, if statement is true - emit event
                if (_this._isIE) {
                    return _this._activeElement === _this._elementRef.nativeElement ? rxjs.of(value) : rxjs.EMPTY;
                }
                else {
                    return rxjs.of(value);
                }
            }));
            this._resubscribeTypeahead = new rxjs.BehaviorSubject(null);
            this._popupService = new i1.PopupService(AdaptTypeaheadWindowComponent, _injector, _viewContainerRef, _renderer, componentFactoryResolver, _applicationRef);
            this._zoneSubscription = ngZone.onStable.subscribe(function () {
                if (_this.isPopupOpen()) {
                    var host = _this.positionTo || _this._elementRef.nativeElement;
                    i1.positionElements(host, _this._windowRef.location.nativeElement, _this.placement, _this.container === 'body');
                }
            });
            this._setValueSubscription$ = ngZone.onStable.pipe(operators.take(1)).subscribe(function () {
                _this._inputValueBackup = _this._elementRef.nativeElement.value;
            });
        }
        Object.defineProperty(AdaptTypeaheadDirective.prototype, "_activeElement", {
            get: function () {
                return document.activeElement;
            },
            enumerable: false,
            configurable: true
        });
        AdaptTypeaheadDirective.prototype.ngOnInit = function () {
            var _this = this;
            this._isIE = this._deviceDetection.isIE();
            var inputValues$ = this._valueChanges.pipe(operators.distinctUntilChanged(), operators.tap(function (value) {
                _this._inputValueBackup = value;
                if (_this.editable) {
                    _this._onChange(value);
                }
            }));
            var focus$ = rxjs.merge(inputValues$, this._openOnFocus$);
            var results$ = focus$.pipe(this.ngbTypeahead);
            var processedResults$ = results$.pipe(operators.skipWhile(function () { return _this.preventResults; })).pipe(operators.tap(function (val) {
                if (!_this.editable) {
                    var correctValue = val.filter(function (v) {
                        var newValue = this.backupValue;
                        if (newValue) {
                            newValue = newValue.toLowerCase();
                        }
                        if (this.formatter) {
                            v = this.formatter(v);
                        }
                        return newValue === v.toLowerCase();
                        // if (typeof v === 'string' || v instanceof String) {
                        //   return newValue === v.toLowerCase();
                        // } else if (v.name) { // TODO: change logic to work with any object data
                        //   return newValue === v.name.toLowerCase();
                        // } else if (v.dataValue) {
                        //   return newValue === v.dataValue.toLowerCase();
                        // } else {
                        //   return false;
                        // }
                    }, { 'backupValue': _this._inputValueBackup, 'formatter': _this.inputFormatter });
                    val.length ? _this._onChange(correctValue[0]) : _this._onChange(undefined);
                }
            }));
            var userInput$ = this._resubscribeTypeahead.pipe(operators.switchMap(function () { return processedResults$; }));
            this._subscription = this._subscribeToUserInput(userInput$);
        };
        AdaptTypeaheadDirective.prototype.ngOnDestroy = function () {
            this._closePopup();
            this._unsubscribeFromUserInput();
            this._zoneSubscription.unsubscribe();
            this._setValueSubscription$.unsubscribe();
        };
        AdaptTypeaheadDirective.prototype.registerOnChange = function (fn) {
            this._onChange = fn;
        };
        AdaptTypeaheadDirective.prototype.registerOnTouched = function (fn) {
            this._onTouched = fn;
        };
        AdaptTypeaheadDirective.prototype.writeValue = function (value) {
            var _this = this;
            this._inputValueBackup = this._formatItemForInput(value);
            this._writeInputValue(this._formatItemForInput(value));
            // while [(ngModel)] value changed outside need to update the list by correct items
            setTimeout(function () {
                if (_this.isPopupOpen() && _this._elementRef) {
                    _this._emitInputEvent();
                }
            });
        };
        AdaptTypeaheadDirective.prototype.setDisabledState = function (isDisabled) {
            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
        };
        AdaptTypeaheadDirective.prototype.onDocumentClick = function (event) {
            if (event.target !== this._elementRef.nativeElement) {
                this.dismissPopup();
            }
        };
        /**
         * Dismisses typeahead popup window
         */
        AdaptTypeaheadDirective.prototype.dismissPopup = function () {
            if (this.isPopupOpen()) {
                this._closePopup();
                this._writeInputValue(this._inputValueBackup);
            }
        };
        /**
         * Returns true if the typeahead popup window is displayed
         */
        AdaptTypeaheadDirective.prototype.isPopupOpen = function () {
            return this._windowRef != null;
        };
        AdaptTypeaheadDirective.prototype.handleBlur = function (event) {
            this.onBlur.emit(event);
            this._resubscribeTypeahead.next(null);
            this._onTouched();
        };
        AdaptTypeaheadDirective.prototype.handleFocus = function (event) {
            this.onFocus.emit(event);
            if (this.openOnFocus) {
                this._openOnFocus$.next(this._inputValueBackup);
                return;
            }
            this.typeAheadPopupOpen.emit({ text: this._inputValueBackup, open: false });
        };
        AdaptTypeaheadDirective.prototype.handleKeyDown = function (event) {
            if (!this.isPopupOpen()) {
                return;
            }
            var keyCode = i1.getEventKeyCode(event);
            if (Key[i1.toString(keyCode)]) {
                switch (keyCode) {
                    case Key.ArrowDown:
                        event.preventDefault();
                        this._windowRef.instance.next();
                        this._showHint();
                        break;
                    case Key.ArrowUp:
                        event.preventDefault();
                        this._windowRef.instance.prev();
                        this._showHint();
                        break;
                    case Key.Enter:
                    case Key.Tab: {
                        var result = this._windowRef.instance.getActive();
                        if (i1.isDefined(result)) {
                            event.preventDefault();
                            event.stopPropagation();
                            this._selectResult(result);
                        }
                        this._closePopup();
                        break;
                    }
                }
            }
        };
        AdaptTypeaheadDirective.prototype._openPopup = function () {
            var _this = this;
            if (!this.isPopupOpen()) {
                this.typeAheadPopupOpen.emit({ text: this._inputValueBackup, open: true });
                this._inputValueBackup = this._elementRef.nativeElement.value;
                this._windowRef = this._popupService.open();
                this._windowRef.instance.id = this.popupId;
                this._windowRef.instance.hostClass = this.popupClass;
                this._windowRef.instance.appendedToBody = this.container === 'body';
                this._windowRef.instance.selectEvent.subscribe(function (result) { return _this._selectResultClosePopup(result); });
                this._windowRef.instance.activeChangeEvent.subscribe(function (activeId) { return _this.activeDescendant = activeId; });
                var menu = this._windowRef.location.nativeElement;
                if (this.container) {
                    if (this.container === 'body') {
                        document.body.appendChild(menu);
                    }
                    else {
                        this.container.appendChild(menu);
                    }
                }
                this._layerService.addComponent(this, function (event) {
                    event.preventDefault();
                    _this._resubscribeTypeahead.next(null);
                    _this.dismissPopup();
                });
                if (!i1.isDefined(this._documentListenerFunc)) {
                    this._documentListenerFunc = this._renderer.listen('document', 'click', this.onDocumentClick.bind(this));
                }
            }
        };
        AdaptTypeaheadDirective.prototype._closePopup = function () {
            this._popupService.close();
            this._windowRef = null;
            this.activeDescendant = undefined;
            this._layerService.removeComponent(this);
            this.typeAheadPopupOpen.emit({ text: this._inputValueBackup, open: false });
            if (i1.isDefined(this._documentListenerFunc)) {
                this._documentListenerFunc();
                this._documentListenerFunc = null;
            }
        };
        AdaptTypeaheadDirective.prototype._selectResult = function (result) {
            var defaultPrevented = false;
            this.selectItem.emit({
                item: result,
                preventDefault: function () {
                    defaultPrevented = true;
                }
            });
            this._resubscribeTypeahead.next(null);
            if (!defaultPrevented) {
                if (this.inputFormatter) {
                    this._inputValueBackup = this.inputFormatter(result);
                }
                else {
                    this._inputValueBackup = result;
                }
                this.writeValue(result);
                this._onChange(result);
            }
        };
        AdaptTypeaheadDirective.prototype._selectResultClosePopup = function (result) {
            this._selectResult(result);
            this._closePopup();
        };
        AdaptTypeaheadDirective.prototype._showHint = function () {
            if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {
                var userInputLowerCase = this._inputValueBackup.toLowerCase();
                var formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());
                if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {
                    this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));
                    this._elementRef.nativeElement.setSelectionRange.apply(this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);
                }
                else {
                    this._writeInputValue(this._formatItemForInput(this._windowRef.instance.getActive()));
                }
            }
        };
        AdaptTypeaheadDirective.prototype._formatItemForInput = function (item) {
            return item != null && this.inputFormatter ? this.inputFormatter(item) : i1.toString(item);
        };
        AdaptTypeaheadDirective.prototype._writeInputValue = function (value) {
            this._renderer.setProperty(this._elementRef.nativeElement, 'value', i1.toString(value));
        };
        AdaptTypeaheadDirective.prototype._subscribeToUserInput = function (userInput$) {
            var _this = this;
            return userInput$.subscribe(function (results) {
                if (!results || results.length === 0) {
                    _this._closePopup();
                }
                else {
                    _this._openPopup();
                    _this._windowRef.instance.focusFirst = _this.focusFirst;
                    _this._windowRef.instance.results = results;
                    _this._windowRef.instance.term = _this._elementRef.nativeElement.value;
                    _this._windowRef.instance.virtualScroll = _this.virtualScroll;
                    _this._windowRef.instance.virtualScrollItemSize = _this.virtualScrollItemSize;
                    _this._windowRef.instance.virtualScrollDropdownWidth = _this.virtualScrollDropdownWidth;
                    _this._windowRef.instance.virtualScrollDropdownHeight = _this.virtualScrollDropdownHeight;
                    if (_this.resultFormatter) {
                        _this._windowRef.instance.formatter = _this.resultFormatter;
                    }
                    if (_this.resultTemplate) {
                        _this._windowRef.instance.resultTemplate = _this.resultTemplate;
                    }
                    _this._windowRef.instance.resetActive();
                    // The observable stream we are subscribing to might have async steps
                    // and if a component containing typeahead is using the OnPush strategy
                    // the change detection turn wouldn't be invoked automatically.
                    i1.SafeCdr.detectChanges(_this._windowRef.changeDetectorRef);
                    _this._showHint();
                }
                var count = results.length;
                _this._live.say(count === 0 ? 'No results available' : count + " result" + (count === 1 ? '' : 's') + " available");
            });
        };
        AdaptTypeaheadDirective.prototype._emitInputEvent = function () {
            var event = new Event('input');
            this._elementRef.nativeElement.dispatchEvent(event);
        };
        AdaptTypeaheadDirective.prototype._unsubscribeFromUserInput = function () {
            if (this._subscription) {
                this._subscription.unsubscribe();
            }
            this._subscription = null;
        };
        return AdaptTypeaheadDirective;
    }());
    AdaptTypeaheadDirective.ɵfac = function AdaptTypeaheadDirective_Factory(t) { return new (t || AdaptTypeaheadDirective)(i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.ViewContainerRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(i0__namespace.Injector), i0__namespace.ɵɵdirectiveInject(i0__namespace.ComponentFactoryResolver), i0__namespace.ɵɵdirectiveInject(AdaptTypeaheadModel), i0__namespace.ɵɵdirectiveInject(i0__namespace.NgZone), i0__namespace.ɵɵdirectiveInject(i1__namespace.Live), i0__namespace.ɵɵdirectiveInject(i1__namespace.LayerService), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptDeviceDetectionService), i0__namespace.ɵɵdirectiveInject(i0__namespace.ApplicationRef)); };
    AdaptTypeaheadDirective.ɵdir = /*@__PURE__*/ i0__namespace.ɵɵdefineDirective({ type: AdaptTypeaheadDirective, selectors: [["", "adaptTypeaheadDirective", ""], ["input", "ngbTypeahead", ""]], hostAttrs: ["autocapitalize", "off", "autocorrect", "off", "role", "combobox"], hostVars: 8, hostBindings: function AdaptTypeaheadDirective_HostBindings(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵlistener("blur", function AdaptTypeaheadDirective_blur_HostBindingHandler($event) { return ctx.handleBlur($event); })("keydown", function AdaptTypeaheadDirective_keydown_HostBindingHandler($event) { return ctx.handleKeyDown($event); })("focus", function AdaptTypeaheadDirective_focus_HostBindingHandler($event) { return ctx.handleFocus($event); });
            }
            if (rf & 2) {
                i0__namespace.ɵɵhostProperty("autocomplete", ctx.autocomplete);
                i0__namespace.ɵɵattribute("aria-autocomplete", ctx.showHint ? "both" : "list")("aria-activedescendant", ctx.activeDescendant)("aria-owns", ctx.isPopupOpen() ? ctx.popupId : null)("aria-expanded", ctx.isPopupOpen())("aria-haspopup", "listbox");
                i0__namespace.ɵɵclassProp("open", ctx.isPopupOpen());
            }
        }, inputs: { autocomplete: "autocomplete", container: "container", editable: "editable", focusFirst: "focusFirst", inputFormatter: "inputFormatter", ngbTypeahead: "ngbTypeahead", preventResults: "preventResults", resultFormatter: "resultFormatter", resultTemplate: "resultTemplate", showHint: "showHint", popupClass: "popupClass", placement: "placement", positionTo: "positionTo", openOnFocus: "openOnFocus", virtualScroll: "virtualScroll", virtualScrollItemSize: "virtualScrollItemSize", virtualScrollDropdownWidth: "virtualScrollDropdownWidth", virtualScrollDropdownHeight: "virtualScrollDropdownHeight" }, outputs: { selectItem: "selectItem", typeAheadPopupOpen: "typeAheadPopupOpen", onBlur: "onBlur", onFocus: "onFocus" }, exportAs: ["ngbTypeahead"], features: [i0__namespace.ɵɵProvidersFeature([NGB_TYPEAHEAD_VALUE_ACCESSOR])] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptTypeaheadDirective, [{
                type: i0.Directive,
                args: [{
                        selector: '[adaptTypeaheadDirective], input[ngbTypeahead]',
                        exportAs: 'ngbTypeahead',
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: {
                            '(blur)': 'handleBlur($event)',
                            '[class.open]': 'isPopupOpen()',
                            '(keydown)': 'handleKeyDown($event)',
                            '(focus)': 'handleFocus($event)',
                            '[autocomplete]': 'autocomplete',
                            'autocapitalize': 'off',
                            'autocorrect': 'off',
                            'role': 'combobox',
                            '[attr.aria-autocomplete]': 'showHint ? "both" : "list"',
                            '[attr.aria-activedescendant]': 'activeDescendant',
                            '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',
                            '[attr.aria-expanded]': 'isPopupOpen()',
                            '[attr.aria-haspopup]': '"listbox"'
                        },
                        providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]
                    }]
            }], function () { return [{ type: i0__namespace.ElementRef }, { type: i0__namespace.ViewContainerRef }, { type: i0__namespace.Renderer2 }, { type: i0__namespace.Injector }, { type: i0__namespace.ComponentFactoryResolver }, { type: AdaptTypeaheadModel }, { type: i0__namespace.NgZone }, { type: i1__namespace.Live }, { type: i1__namespace.LayerService }, { type: i1__namespace.AdaptDeviceDetectionService }, { type: i0__namespace.ApplicationRef }]; }, { autocomplete: [{
                    type: i0.Input
                }], container: [{
                    type: i0.Input
                }], editable: [{
                    type: i0.Input
                }], focusFirst: [{
                    type: i0.Input
                }], inputFormatter: [{
                    type: i0.Input
                }], ngbTypeahead: [{
                    type: i0.Input
                }], preventResults: [{
                    type: i0.Input
                }], resultFormatter: [{
                    type: i0.Input
                }], resultTemplate: [{
                    type: i0.Input
                }], showHint: [{
                    type: i0.Input
                }], popupClass: [{
                    type: i0.Input
                }], placement: [{
                    type: i0.Input
                }], positionTo: [{
                    type: i0.Input
                }], openOnFocus: [{
                    type: i0.Input
                }], virtualScroll: [{
                    type: i0.Input
                }], virtualScrollItemSize: [{
                    type: i0.Input
                }], virtualScrollDropdownWidth: [{
                    type: i0.Input
                }], virtualScrollDropdownHeight: [{
                    type: i0.Input
                }], selectItem: [{
                    type: i0.Output
                }], typeAheadPopupOpen: [{
                    type: i0.Output
                }], onBlur: [{
                    type: i0.Output
                }], onFocus: [{
                    type: i0.Output
                }] });
    })();

    var AdaptTypeaheadSubModule = /** @class */ (function () {
        function AdaptTypeaheadSubModule() {
        }
        AdaptTypeaheadSubModule.forRoot = function () {
            return {
                ngModule: AdaptTypeaheadSubModule,
                providers: [
                    i1.Live,
                    AdaptTypeaheadModel, {
                        provide: i1.ARIA_LIVE_DELAY,
                        useValue: i1.DEFAULT_ARIA_LIVE_DELAY
                    },
                    i1.AdaptDeviceDetectionService
                ]
            };
        };
        return AdaptTypeaheadSubModule;
    }());
    AdaptTypeaheadSubModule.ɵfac = function AdaptTypeaheadSubModule_Factory(t) { return new (t || AdaptTypeaheadSubModule)(); };
    AdaptTypeaheadSubModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptTypeaheadSubModule });
    AdaptTypeaheadSubModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[i3.CommonModule, i3$2.ScrollingModule, i1.AdaptHighlightModule]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptTypeaheadSubModule, [{
                type: i0.NgModule,
                args: [{
                        declarations: [
                            AdaptTypeaheadDirective,
                            AdaptTypeaheadWindowComponent
                        ],
                        exports: [AdaptTypeaheadDirective,],
                        imports: [i3.CommonModule, i3$2.ScrollingModule, i1.AdaptHighlightModule],
                        entryComponents: [AdaptTypeaheadWindowComponent]
                    }]
            }], null, null);
    })();
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptTypeaheadSubModule, { declarations: [AdaptTypeaheadDirective,
                AdaptTypeaheadWindowComponent], imports: [i3.CommonModule, i3$2.ScrollingModule, i1.AdaptHighlightModule], exports: [AdaptTypeaheadDirective] });
    })();

    var _c0$d = ["input"];
    function AdaptTypeaheadComponent_div_8_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 5);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵelementStart(2, "p", 6);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n      ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("@validationFeedbackAnimation", undefined);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r1.errorMessage);
        }
    }
    function AdaptTypeaheadComponent_div_10_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 5);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵelementStart(2, "p", 6);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n      ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r2 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("@validationFeedbackAnimation", undefined);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r2.warningMessage);
        }
    }
    var nextId$2 = 0;
    var TYPEAHEAD_VALUE_ACCESSOR = {
        provide: i6.NG_VALUE_ACCESSOR,
        useExisting: i0.forwardRef(function () { return AdaptTypeaheadComponent; }),
        multi: true
    };
    var AdaptTypeaheadComponent = /** @class */ (function (_super) {
        __extends(AdaptTypeaheadComponent, _super);
        function AdaptTypeaheadComponent(config, ts, _injector, _adaptRadarService, _elem) {
            var _this = _super.call(this, _adaptRadarService, _elem, i1.AdaptRadarAngularCustomEventName.AdaptTypeahead) || this;
            _this.ts = ts;
            _this._injector = _injector;
            /**
             * Unique id of the element.
             */
            _this.id = "typeahead-" + nextId$2++;
            /**
             * Placement of a typeahead accepts:
             * "top", "top-left", "top-right", "bottom", "bottom-left", "bottom-right",
             * "left", "left-top", "left-bottom", "right", "right-top", "right-bottom"
             * and array of above values.
             */
            _this.placement = 'auto';
            _this.disabled = false;
            _this.readonly = false;
            /**
             * Open popup on focus
             */
            _this.openOnFocus = false;
            /**
             * Enable virtual scroll for results window. Can be suitable for big amount of results
             */
            _this.virtualScroll = false;
            /**
             * Used to set "itemSize" virtual scroll @Input()
             */
            _this.virtualScrollItemSize = 30;
            /**
             * Used to set width for results dropdown
             */
            _this.virtualScrollDropdownWidth = '25.625rem';
            /**
             * Used to set height for results dropdown
             */
            _this.virtualScrollDropdownHeight = '13.75rem';
            /**
             * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will
             * take precedence so this may be omitted.
             */
            _this.ariaLabel = null;
            /**
             * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element
             */
            _this.ariaLabelledby = null;
            // eslint-disable-next-line @angular-eslint/no-input-rename
            _this.ariaDescribedBy = null;
            /**
             * The value for the `autocomplete` attribute for the `<input>` element.
             * @since v10.14.0
             */
            _this.autocomplete = 'off';
            /**
             * An event emitted when a match is selected. Event payload is of type NgbTypeaheadSelectItemEvent.
             */
            _this.selectItem = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.focus = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.blur = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.click = new i0.EventEmitter();
            /**
             * The internal data model
             */
            _this.innerValue = '';
            /** Actual value, event if it is not matching any typeahead options */
            _this.actualInputValue = '';
            /**
             * If the typeAhead drop down is open
             */
            _this.isTypeAheadOpen = true;
            /**
             * Placeholders for the callbacks which are later provided by the Control Value Accessor
             */
            _this.onTouchedCallback = rxjs.noop;
            _this.onChangeCallback = rxjs.noop;
            _this._isTouched = false;
            _this._required = false;
            _this.editable = config.editable;
            _this.focusFirst = config.focusFirst;
            _this.showHint = config.showHint;
            _this.requiredLabel = ts.getCurrentLanguage()['adapt.common.required'];
            return _this;
        }
        Object.defineProperty(AdaptTypeaheadComponent.prototype, "typeahead", {
            get: function () {
                return this._typeahead;
            },
            /**
             * A function to transform the provided observable text into the array of results.
             * Note that the "this" argument is undefined so you need to explicitly bind it to a desired "this" target.
             */
            /*
              * Typeahead OperatorFunction
            */
            set: function (inputFunction) {
                this._typeahead = inputFunction;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTypeaheadComponent.prototype, "appendToBody", {
            /**
             * Append to body trigger
             */
            set: function (state) {
                if (state && !this.appendToContainer) {
                    this.appendTo = 'body';
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTypeaheadComponent.prototype, "appendTo", {
            /**
             * When specified, the drop-down list will be appended to the selected element
             */
            set: function (element) {
                this.appendToContainer = element;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTypeaheadComponent.prototype, "required", {
            /** Whether the element is required. */
            get: function () {
                return this._required || i1.hasRequiredValidator(this._ngControl);
            },
            set: function (value) {
                this._required = i1.toBoolean(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTypeaheadComponent.prototype, "value", {
            /**
             * get accessor
             */
            get: function () {
                return this.innerValue;
            },
            /**
             * set accessor including call the onchange callback
             */
            set: function (v) {
                if (v !== this.innerValue) {
                    this.innerValue = v;
                    this.onChangeCallback(v);
                }
                this.updateError();
            },
            enumerable: false,
            configurable: true
        });
        AdaptTypeaheadComponent.prototype.ngOnInit = function () {
            this._ngControl = this._injector.get(i6.NgControl, null);
        };
        AdaptTypeaheadComponent.prototype.onFocus = function (event) {
            this.focus.emit(event);
        };
        AdaptTypeaheadComponent.prototype.onSelect = function (event) {
            this.selectItem.emit(event);
        };
        /**
         * Triggered when typeAhead drop down is open or closed
         */
        AdaptTypeaheadComponent.prototype.typeAheadPopUpChange = function (event) {
            this.isTypeAheadOpen = event.open;
            // When input text is empty set as empty instead of undefined
            if (!event.text) {
                this.innerValue = '';
            }
            this.updateError();
        };
        /**
         * Update the error UI
         */
        AdaptTypeaheadComponent.prototype.updateError = function () {
            if (!this._isTouched && (this.isTypeAheadOpen || this.required)) {
                this.isError = false;
                return;
            }
            this.isError = ((this.required && !this.innerValue) || (!this.editable && this.innerValue === undefined)) && !this.actualInputValue;
        };
        AdaptTypeaheadComponent.prototype.updateWarning = function () {
            this.isWarning = !this.editable && this._isTouched
                && !this.innerValue && this.actualInputValue && !this.isTypeAheadOpen;
        };
        AdaptTypeaheadComponent.prototype.onInputChange = function (event) {
            this.actualInputValue = event.target['value'];
        };
        /**
         * Set touched on blur
         */
        AdaptTypeaheadComponent.prototype.onBlur = function (event) {
            this._isTouched = true;
            this.onTouchedCallback();
            this.blur.emit(event);
            this.updateError();
            this.updateWarning();
        };
        /**
         * From ControlValueAccessor interface
         */
        AdaptTypeaheadComponent.prototype.writeValue = function (value) {
            if (value !== this.innerValue) {
                this.innerValue = value;
            }
            this.updateError();
        };
        /**
         * From ControlValueAccessor interface
         */
        AdaptTypeaheadComponent.prototype.registerOnChange = function (fn) {
            this.onChangeCallback = fn;
        };
        /**
         * From ControlValueAccessor interface
         */
        AdaptTypeaheadComponent.prototype.registerOnTouched = function (fn) {
            this.onTouchedCallback = fn;
        };
        AdaptTypeaheadComponent.prototype.setDisabledState = function (isDisabled) {
            this.disabled = isDisabled;
        };
        return AdaptTypeaheadComponent;
    }(i2.AdaptRadarGenericDirective));
    AdaptTypeaheadComponent.ɵfac = function AdaptTypeaheadComponent_Factory(t) { return new (t || AdaptTypeaheadComponent)(i0__namespace.ɵɵdirectiveInject(AdaptTypeaheadConfig), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i0__namespace.Injector), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef)); };
    AdaptTypeaheadComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptTypeaheadComponent, selectors: [["adapt-typeahead"]], viewQuery: function AdaptTypeaheadComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$d, 7);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.inputElement = _t.first);
            }
        }, hostAttrs: [1, "typeahead"], inputs: { typeahead: "typeahead", label: "label", description: "description", id: "id", editable: "editable", focusFirst: "focusFirst", showHint: "showHint", inputFormatter: "inputFormatter", resultFormatter: "resultFormatter", resultTemplate: "resultTemplate", placeholder: "placeholder", placement: "placement", errorMessage: "errorMessage", warningMessage: "warningMessage", disabled: "disabled", readonly: "readonly", appendToBody: "appendToBody", positionTo: "positionTo", appendTo: "appendTo", requiredLabel: "requiredLabel", openOnFocus: "openOnFocus", virtualScroll: "virtualScroll", virtualScrollItemSize: "virtualScrollItemSize", virtualScrollDropdownWidth: "virtualScrollDropdownWidth", virtualScrollDropdownHeight: "virtualScrollDropdownHeight", ariaLabel: ["aria-label", "ariaLabel"], ariaLabelledby: ["aria-labelledby", "ariaLabelledby"], ariaDescribedBy: ["aria-describedby", "ariaDescribedBy"], autocomplete: "autocomplete", required: "required" }, outputs: { selectItem: "selectItem", focus: "focus", blur: "blur", click: "click" }, features: [i0__namespace.ɵɵProvidersFeature([TYPEAHEAD_VALUE_ACCESSOR]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 12, vars: 37, consts: [[1, "dropdown", "show"], [3, "for", "label", "requiredLabel", "subLabel", "showRequiredLabel"], ["type", "text", 1, "form-control", 3, "ngModel", "ngbTypeahead", "preventResults", "disabled", "readOnly", "container", "virtualScroll", "virtualScrollItemSize", "virtualScrollDropdownWidth", "virtualScrollDropdownHeight", "positionTo", "placement", "required", "editable", "showHint", "focusFirst", "inputFormatter", "resultFormatter", "resultTemplate", "placeholder", "openOnFocus", "autocomplete", "ngModelChange", "selectItem", "typeAheadPopupOpen", "click", "onBlur", "onFocus", "input"], ["input", ""], ["role", "alert", 4, "ngIf"], ["role", "alert"], [1, "form-control-feedback", "m-0", "pt-1", "pb-2"]], template: function AdaptTypeaheadComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵtext(0, "\n    ");
                i0__namespace.ɵɵelementStart(1, "div", 0);
                i0__namespace.ɵɵtext(2, "\n      ");
                i0__namespace.ɵɵelement(3, "adapt-rx-control-label", 1);
                i0__namespace.ɵɵtext(4, "\n      ");
                i0__namespace.ɵɵelementStart(5, "input", 2, 3);
                i0__namespace.ɵɵlistener("ngModelChange", function AdaptTypeaheadComponent_Template_input_ngModelChange_5_listener($event) { return ctx.value = $event; })("selectItem", function AdaptTypeaheadComponent_Template_input_selectItem_5_listener($event) { return ctx.onSelect($event); })("typeAheadPopupOpen", function AdaptTypeaheadComponent_Template_input_typeAheadPopupOpen_5_listener($event) { return ctx.typeAheadPopUpChange($event); })("click", function AdaptTypeaheadComponent_Template_input_click_5_listener($event) { return ctx.click.emit($event); })("onBlur", function AdaptTypeaheadComponent_Template_input_onBlur_5_listener($event) { return ctx.onBlur($event); })("onFocus", function AdaptTypeaheadComponent_Template_input_onFocus_5_listener($event) { return ctx.onFocus($event); })("input", function AdaptTypeaheadComponent_Template_input_input_5_listener($event) { return ctx.onInputChange($event); });
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(7, "\n\n      ");
                i0__namespace.ɵɵtemplate(8, AdaptTypeaheadComponent_div_8_Template, 5, 2, "div", 4);
                i0__namespace.ɵɵtext(9, "\n      ");
                i0__namespace.ɵɵtemplate(10, AdaptTypeaheadComponent_div_10_Template, 5, 2, "div", 4);
                i0__namespace.ɵɵtext(11, "\n    ");
                i0__namespace.ɵɵelementEnd();
            }
            if (rf & 2) {
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵclassProp("has-warning", ctx.isWarning && !ctx.isError)("has-danger", !ctx.isWarning && ctx.isError);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("for", ctx.id)("label", ctx.label)("requiredLabel", ctx.requiredLabel)("subLabel", ctx.description)("showRequiredLabel", ctx.required);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngModel", ctx.value)("ngbTypeahead", ctx.typeahead)("preventResults", ctx.disabled || ctx.readonly)("disabled", ctx.disabled)("readOnly", ctx.readonly)("container", ctx.appendToContainer)("virtualScroll", ctx.virtualScroll)("virtualScrollItemSize", ctx.virtualScrollItemSize)("virtualScrollDropdownWidth", ctx.virtualScrollDropdownWidth)("virtualScrollDropdownHeight", ctx.virtualScrollDropdownHeight)("positionTo", ctx.positionTo)("placement", ctx.placement)("required", ctx.required)("editable", ctx.editable)("showHint", ctx.showHint)("focusFirst", ctx.focusFirst)("inputFormatter", ctx.inputFormatter)("resultFormatter", ctx.resultFormatter)("resultTemplate", ctx.resultTemplate)("placeholder", ctx.placeholder || "")("openOnFocus", ctx.openOnFocus)("autocomplete", ctx.autocomplete);
                i0__namespace.ɵɵattribute("id", ctx.id)("aria-label", ctx.ariaLabel)("aria-labelledby", ctx.ariaLabelledby)("aria-describedby", ctx.ariaDescribedBy);
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngIf", ctx.errorMessage && ctx.isError && !ctx.isWarning);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.warningMessage && ctx.isWarning && !ctx.isError);
            }
        }, directives: [i1__namespace.AdaptRxControlLabelComponent, i1__namespace.AdaptDragonInputHandlerDirective, i6__namespace.DefaultValueAccessor, AdaptTypeaheadDirective, i6__namespace.NgControlStatus, i6__namespace.NgModel, i6__namespace.RequiredValidator, i3__namespace.NgIf], encapsulation: 2, data: { animation: [
                i1$1.trigger('validationFeedbackAnimation', [
                    i1$1.transition(':enter', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                    ]),
                    i1$1.transition(':leave', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                    ])
                ])
            ] } });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptTypeaheadComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-typeahead',
                        template: "\n    <div class=\"dropdown show\"\n         [class.has-warning]=\"isWarning && !isError\"\n         [class.has-danger]=\"!isWarning && isError\">\n      <adapt-rx-control-label [for]=\"id\"\n                              [label]=\"label\"\n                              [requiredLabel]=\"requiredLabel\"\n                              [subLabel]=\"description\"\n                              [showRequiredLabel]=\"required\"></adapt-rx-control-label>\n      <input #input\n             type=\"text\"\n             class=\"form-control\"\n             [attr.id]=\"id\"\n             [(ngModel)]=\"value\"\n             [ngbTypeahead]=\"typeahead\"\n             [preventResults]=\"disabled || readonly\"\n             [disabled]=\"disabled\"\n             [readOnly]=\"readonly\"\n             [container]=\"appendToContainer\"\n             [virtualScroll]=\"virtualScroll\"\n             [virtualScrollItemSize]=\"virtualScrollItemSize\"\n             [virtualScrollDropdownWidth]=\"virtualScrollDropdownWidth\"\n             [virtualScrollDropdownHeight]=\"virtualScrollDropdownHeight\"\n             [positionTo]=\"positionTo\"\n             [placement]=\"placement\"\n             [required]=\"required\"\n             [editable]=\"editable\"\n             [showHint]=\"showHint\"\n             [focusFirst]=\"focusFirst\"\n             [inputFormatter]=\"inputFormatter\"\n             [resultFormatter]=\"resultFormatter\"\n             [resultTemplate]=\"resultTemplate\"\n             [placeholder]=\"placeholder || ''\"\n             [openOnFocus]=\"openOnFocus\"\n             [autocomplete]=\"autocomplete\"\n             [attr.aria-label]=\"ariaLabel\"\n             [attr.aria-labelledby]=\"ariaLabelledby\"\n             [attr.aria-describedby]=\"ariaDescribedBy\"\n             (selectItem)=\"onSelect($event)\"\n             (typeAheadPopupOpen)=\"typeAheadPopUpChange($event)\"\n             (click)=\"click.emit($event)\"\n             (onBlur)=\"onBlur($event)\"\n             (onFocus)=\"onFocus($event)\"\n             (input)=\"onInputChange($event)\"/>\n\n      <div *ngIf=\"errorMessage && isError && !isWarning\" [@validationFeedbackAnimation] role=\"alert\">\n        <p class=\"form-control-feedback m-0 pt-1 pb-2\">{{errorMessage}}</p>\n      </div>\n      <div *ngIf=\"warningMessage && isWarning && !isError\" [@validationFeedbackAnimation] role=\"alert\">\n        <p class=\"form-control-feedback m-0 pt-1 pb-2\">{{warningMessage}}</p>\n      </div>\n    </div>",
                        animations: [
                            i1$1.trigger('validationFeedbackAnimation', [
                                i1$1.transition(':enter', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                                ]),
                                i1$1.transition(':leave', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                                ])
                            ])
                        ],
                        providers: [TYPEAHEAD_VALUE_ACCESSOR],
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: { 'class': 'typeahead' }
                    }]
            }], function () { return [{ type: AdaptTypeaheadConfig }, { type: i1__namespace.AdaptTranslateService }, { type: i0__namespace.Injector }, { type: i2__namespace.AdaptRadarService }, { type: i0__namespace.ElementRef }]; }, { typeahead: [{
                    type: i0.Input
                }], label: [{
                    type: i0.Input
                }], description: [{
                    type: i0.Input
                }], id: [{
                    type: i0.Input
                }], editable: [{
                    type: i0.Input
                }], focusFirst: [{
                    type: i0.Input
                }], showHint: [{
                    type: i0.Input
                }], inputFormatter: [{
                    type: i0.Input
                }], resultFormatter: [{
                    type: i0.Input
                }], resultTemplate: [{
                    type: i0.Input
                }], placeholder: [{
                    type: i0.Input
                }], placement: [{
                    type: i0.Input
                }], errorMessage: [{
                    type: i0.Input
                }], warningMessage: [{
                    type: i0.Input
                }], disabled: [{
                    type: i0.Input
                }], readonly: [{
                    type: i0.Input
                }], appendToBody: [{
                    type: i0.Input
                }], positionTo: [{
                    type: i0.Input
                }], appendTo: [{
                    type: i0.Input
                }], requiredLabel: [{
                    type: i0.Input
                }], openOnFocus: [{
                    type: i0.Input
                }], virtualScroll: [{
                    type: i0.Input
                }], virtualScrollItemSize: [{
                    type: i0.Input
                }], virtualScrollDropdownWidth: [{
                    type: i0.Input
                }], virtualScrollDropdownHeight: [{
                    type: i0.Input
                }], ariaLabel: [{
                    type: i0.Input,
                    args: ['aria-label']
                }], ariaLabelledby: [{
                    type: i0.Input,
                    args: ['aria-labelledby']
                }], ariaDescribedBy: [{
                    type: i0.Input,
                    args: ['aria-describedby']
                }], autocomplete: [{
                    type: i0.Input
                }], inputElement: [{
                    type: i0.ViewChild,
                    args: ['input', { static: true }]
                }], selectItem: [{
                    type: i0.Output
                }], focus: [{
                    type: i0.Output
                }], blur: [{
                    type: i0.Output
                }], click: [{
                    type: i0.Output
                }], required: [{
                    type: i0.Input
                }] });
    })();

    var AdaptTypeaheadModule = /** @class */ (function () {
        function AdaptTypeaheadModule() {
        }
        AdaptTypeaheadModule.forRoot = function () {
            return {
                ngModule: AdaptTypeaheadModule,
                providers: [TYPEAHEAD_VALUE_ACCESSOR, AdaptTypeaheadConfig]
            };
        };
        return AdaptTypeaheadModule;
    }());
    AdaptTypeaheadModule.ɵfac = function AdaptTypeaheadModule_Factory(t) { return new (t || AdaptTypeaheadModule)(); };
    AdaptTypeaheadModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptTypeaheadModule });
    AdaptTypeaheadModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[i3.CommonModule, i6.FormsModule, AdaptTypeaheadSubModule.forRoot(), i1.AdaptRxLabelModule, i1.AdaptDragonInputHandlerModule]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptTypeaheadModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [i3.CommonModule, i6.FormsModule, AdaptTypeaheadSubModule.forRoot(), i1.AdaptRxLabelModule, i1.AdaptDragonInputHandlerModule],
                        exports: [AdaptTypeaheadComponent],
                        declarations: [AdaptTypeaheadComponent]
                    }]
            }], null, null);
    })();
    (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptTypeaheadModule, { declarations: [AdaptTypeaheadComponent], imports: [i3.CommonModule, i6.FormsModule, AdaptTypeaheadSubModule, i1.AdaptRxLabelModule, i1.AdaptDragonInputHandlerModule], exports: [AdaptTypeaheadComponent] }); })();

    var AdaptListBuilderModule = /** @class */ (function () {
        function AdaptListBuilderModule(iconService) {
            iconService.registerIcons([dplIconfont.ai_dots]);
        }
        AdaptListBuilderModule.forRoot = function () {
            return {
                ngModule: AdaptListBuilderModule,
                providers: [AdaptSelectSearchFilter]
            };
        };
        return AdaptListBuilderModule;
    }());
    AdaptListBuilderModule.ɵfac = function AdaptListBuilderModule_Factory(t) { return new (t || AdaptListBuilderModule)(i0__namespace.ɵɵinject(i1__namespace.AdaptIconConfig)); };
    AdaptListBuilderModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptListBuilderModule });
    AdaptListBuilderModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[
                i3.CommonModule,
                i5.DragDropModule,
                i6.FormsModule,
                i1.AdaptIconModule,
                i1.AdaptTooltipModule,
                i1.AdaptPopoverModule.forRoot(),
                i1.AdaptEmptyStateModule,
                AdaptSelectSearchFilterModule,
                AdaptTextFieldModule,
                AdaptTypeaheadSubModule,
                i1.AdaptDragonInputHandlerModule,
                i1.AdaptRxLabelModule,
                i1.AdaptCustomActionsModule,
                i1.AdaptHighlightModule,
            ]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptListBuilderModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i3.CommonModule,
                            i5.DragDropModule,
                            i6.FormsModule,
                            i1.AdaptIconModule,
                            i1.AdaptTooltipModule,
                            i1.AdaptPopoverModule.forRoot(),
                            i1.AdaptEmptyStateModule,
                            AdaptSelectSearchFilterModule,
                            AdaptTextFieldModule,
                            AdaptTypeaheadSubModule,
                            i1.AdaptDragonInputHandlerModule,
                            i1.AdaptRxLabelModule,
                            i1.AdaptCustomActionsModule,
                            i1.AdaptHighlightModule,
                        ],
                        declarations: [AdaptListBuilderComponent, AdaptListBuilderItemComponent],
                        exports: [AdaptListBuilderComponent]
                    }]
            }], function () { return [{ type: i1__namespace.AdaptIconConfig }]; }, null);
    })();
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptListBuilderModule, { declarations: [AdaptListBuilderComponent, AdaptListBuilderItemComponent], imports: [i3.CommonModule,
                i5.DragDropModule,
                i6.FormsModule,
                i1.AdaptIconModule,
                i1.AdaptTooltipModule, i1__namespace.AdaptPopoverModule, i1.AdaptEmptyStateModule,
                AdaptSelectSearchFilterModule,
                AdaptTextFieldModule,
                AdaptTypeaheadSubModule,
                i1.AdaptDragonInputHandlerModule,
                i1.AdaptRxLabelModule,
                i1.AdaptCustomActionsModule,
                i1.AdaptHighlightModule], exports: [AdaptListBuilderComponent] });
    })();

    function AdaptRatingComponent_ng_container_0_button_2_Template(rf, ctx) {
        if (rf & 1) {
            var _r6_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 2);
            i0__namespace.ɵɵlistener("mouseenter", function AdaptRatingComponent_ng_container_0_button_2_Template_button_mouseenter_0_listener() { var restoredCtx = i0__namespace.ɵɵrestoreView(_r6_1); var index_r4 = restoredCtx.index; var ctx_r5 = i0__namespace.ɵɵnextContext(2); return ctx_r5.onEnter(index_r4 + 1); })("click", function AdaptRatingComponent_ng_container_0_button_2_Template_button_click_0_listener() { var restoredCtx = i0__namespace.ɵɵrestoreView(_r6_1); var index_r4 = restoredCtx.index; var ctx_r7 = i0__namespace.ɵɵnextContext(2); return ctx_r7.observerOnClick(index_r4 + 1); });
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵelementStart(2, "span", 3);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var rating_r3 = ctx.$implicit;
            var index_r4 = ctx.index;
            var ctx_r2 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵclassProp("is-active", rating_r3.fill === 100)("is-half-active", rating_r3.fill > 0 && rating_r3.fill < 100)("is-readonly", ctx_r2.disabled);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("adaptTooltip", ctx_r2.tooltip[index_r4])("placement", "top");
            i0__namespace.ɵɵattribute("tabindex", ctx_r2.disabled ? -1 : null);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r2.tooltip && ctx_r2.tooltip[index_r4] ? ctx_r2.tooltip[index_r4] : rating_r3.index);
        }
    }
    function AdaptRatingComponent_ng_container_0_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n  ");
            i0__namespace.ɵɵtemplate(2, AdaptRatingComponent_ng_container_0_button_2_Template, 5, 11, "button", 1);
            i0__namespace.ɵɵtext(3, "\n");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r0 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngForOf", ctx_r0.ratingList);
        }
    }
    function AdaptRatingComponent_ng_container_2_span_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span", 5);
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵelementStart(2, "span", 3);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var rating_r9 = ctx.$implicit;
            var index_r10 = ctx.index;
            var ctx_r8 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵclassProp("is-active", rating_r9.fill === 100)("is-half-active", rating_r9.fill > 0 && rating_r9.fill < 100);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("adaptTooltip", ctx_r8.tooltip[index_r10])("placement", "top");
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r8.tooltip && ctx_r8.tooltip[index_r10] ? ctx_r8.tooltip[index_r10] : rating_r9.index);
        }
    }
    function AdaptRatingComponent_ng_container_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n  ");
            i0__namespace.ɵɵtemplate(2, AdaptRatingComponent_ng_container_2_span_2_Template, 5, 8, "span", 4);
            i0__namespace.ɵɵtext(3, "\n");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngForOf", ctx_r1.ratingList);
        }
    }
    var noop$3 = function () {
        return;
    };
    // TODO: Refactor this if possible
    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
    var ADAPT_RATING_ACCESSOR = {
        provide: i6.NG_VALUE_ACCESSOR,
        useExisting: i0.forwardRef(function () { return AdaptRatingComponent; }),
        multi: true
    };
    var AdaptRatingComponent = /** @class */ (function (_super) {
        __extends(AdaptRatingComponent, _super);
        function AdaptRatingComponent(ts, _adaptRadarService, _elem) {
            var _this = _super.call(this, _adaptRadarService, _elem, i1.AdaptRadarAngularCustomEventName.AdaptRating) || this;
            _this.ts = ts;
            _this.ratingList = [];
            // eslint-disable-next-line @angular-eslint/no-output-rename
            _this.activeRateChanged = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-rename
            _this.hoverChanged = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-rename
            _this.leaveChanged = new i0.EventEmitter();
            _this._onTouchedCallback = noop$3;
            // TODO: Refactor this if possible
            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
            _this._onChangeCallback = noop$3;
            _this._size = 'extra-small';
            _this._disabled = false;
            _this._maxValue = 5;
            _this.setDefaultTexts(ts.getCurrentLanguage());
            return _this;
        }
        Object.defineProperty(AdaptRatingComponent.prototype, "size", {
            get: function () {
                return this._size;
            },
            set: function (v) {
                this._size = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptRatingComponent.prototype, "disabled", {
            // TODO: Refactor this if possible
            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
            get: function () {
                return this._disabled;
            },
            // TODO: Refactor this if possible
            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
            set: function (v) {
                this._disabled = i1.toBoolean(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptRatingComponent.prototype, "tooltip", {
            get: function () {
                return this._tooltip;
            },
            set: function (v) {
                this._tooltip = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptRatingComponent.prototype, "maxValue", {
            // TODO: Refactor this if possible
            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
            get: function () {
                return this._maxValue;
            },
            // TODO: Refactor this if possible
            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
            set: function (v) {
                this._maxValue = i1.toNumber(v);
                this._createArrayList();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptRatingComponent.prototype, "rate", {
            // TODO: Refactor this if possible
            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
            get: function () {
                return this._rate;
            },
            // TODO: Refactor this if possible
            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
            set: function (v) {
                this._rate = i1.toNumber(v);
                this._onChangeCallback(v);
            },
            enumerable: false,
            configurable: true
        });
        AdaptRatingComponent.prototype.setDefaultTexts = function (translation) {
            this.tooltip = [
                translation['adapt.rating.like.l1'],
                translation['adapt.rating.like.l2'],
                translation['adapt.rating.like.l3'],
                translation['adapt.rating.like.l4'],
                translation['adapt.rating.like.l5'],
            ];
        };
        AdaptRatingComponent.prototype.writeValue = function (value) {
            if (this._rate !== value) {
                this._rate = value;
            }
            this._updateValue(value);
        };
        // TODO: Refactor this if possible
        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
        AdaptRatingComponent.prototype.registerOnChange = function (fn) {
            this._onChangeCallback = fn;
        };
        // TODO: Refactor this if possible
        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
        AdaptRatingComponent.prototype.registerOnTouched = function (fn) {
            this._onTouchedCallback = fn;
        };
        AdaptRatingComponent.prototype.ngOnInit = function () {
            this._createArrayList();
            this._updateState(this.rate);
        };
        AdaptRatingComponent.prototype.observerOnClick = function (value) {
            this._updateValue(value);
        };
        AdaptRatingComponent.prototype.onEnter = function (value) {
            this.hoverChanged.emit(value);
            if (this._isNotDisabled()) {
                this._updateState(value);
            }
        };
        AdaptRatingComponent.prototype.reset = function () {
            this.leaveChanged.emit(this.currentRating);
            this._updateState(this.rate);
        };
        AdaptRatingComponent.prototype._updateValue = function (v) {
            var ratingValue = this._getValueInRange(v, this.maxValue, 1);
            if (this._isNotDisabled() && this.rate !== ratingValue) {
                this.rate = ratingValue;
            }
            this._updateState(this.rate);
            this.activeRateChanged.emit(this.rate);
        };
        AdaptRatingComponent.prototype._getValueInRange = function (value, max, min) {
            if (min === void 0) { min = 0; }
            return Math.max(Math.min(value, max), min);
        };
        AdaptRatingComponent.prototype._isNotDisabled = function () {
            return !this.readonly && !this.disabled;
        };
        AdaptRatingComponent.prototype._updateState = function (ratingValue) {
            var _this = this;
            this.currentRating = ratingValue;
            this.ratingList.map(function (_, i) { return _.fill = _this._getFillValue(i); });
        };
        AdaptRatingComponent.prototype._createArrayList = function () {
            this.ratingList = Array.from({ length: this.maxValue }, function (_, v) { return ({ fill: 0, index: v }); });
        };
        AdaptRatingComponent.prototype._getFillValue = function (index) {
            var diff = this.currentRating - index;
            if (diff >= 1) {
                return 100;
            }
            if (diff < 1 && diff > 0) {
                return Number.parseInt((diff * 100).toFixed(2), 10);
            }
            return 0;
        };
        return AdaptRatingComponent;
    }(i2.AdaptRadarGenericDirective));
    AdaptRatingComponent.ɵfac = function AdaptRatingComponent_Factory(t) { return new (t || AdaptRatingComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef)); };
    AdaptRatingComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptRatingComponent, selectors: [["adapt-rating"]], hostVars: 10, hostBindings: function AdaptRatingComponent_HostBindings(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵlistener("mouseleave", function AdaptRatingComponent_mouseleave_HostBindingHandler() { return ctx.reset(); });
            }
            if (rf & 2) {
                i0__namespace.ɵɵclassProp("a-rating", true)("a-rating_small", ctx.size === "small" && !ctx.readonly)("a-rating_medium", ctx.size === "medium" && !ctx.readonly)("a-rating_large", ctx.size === "large" && !ctx.readonly)("a-rating_readonly", ctx.readonly);
            }
        }, inputs: { readonly: "readonly", size: "size", disabled: "disabled", tooltip: "tooltip", maxValue: "maxValue", rate: "rate" }, outputs: { activeRateChanged: "active-rate-changed", hoverChanged: "hover-changed", leaveChanged: "leave-changed" }, features: [i0__namespace.ɵɵProvidersFeature([ADAPT_RATING_ACCESSOR]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 4, vars: 2, consts: [[4, "ngIf"], ["type", "button", "class", "a-rating__item d-icon-star_o", 3, "is-active", "is-half-active", "is-readonly", "adaptRadarDisableEventSending", "adaptTooltip", "placement", "mouseenter", "click", 4, "ngFor", "ngForOf"], ["type", "button", 1, "a-rating__item", "d-icon-star_o", 3, "adaptRadarDisableEventSending", "adaptTooltip", "placement", "mouseenter", "click"], [1, "sr-only"], ["class", "a-rating__item d-icon-star_o is-readonly", 3, "is-active", "is-half-active", "adaptRadarDisableEventSending", "adaptTooltip", "placement", 4, "ngFor", "ngForOf"], [1, "a-rating__item", "d-icon-star_o", "is-readonly", 3, "adaptRadarDisableEventSending", "adaptTooltip", "placement"]], template: function AdaptRatingComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵtemplate(0, AdaptRatingComponent_ng_container_0_Template, 4, 1, "ng-container", 0);
                i0__namespace.ɵɵtext(1, "\n\n");
                i0__namespace.ɵɵtemplate(2, AdaptRatingComponent_ng_container_2_Template, 4, 1, "ng-container", 0);
                i0__namespace.ɵɵtext(3, "\n");
            }
            if (rf & 2) {
                i0__namespace.ɵɵproperty("ngIf", !ctx.readonly);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.readonly);
            }
        }, directives: [i3__namespace.NgIf, i3__namespace.NgForOf, i1__namespace.AdaptTooltipDirective], encapsulation: 2 });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptRatingComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-rating',
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: {
                            '[class.a-rating]': 'true',
                            '[class.a-rating_small]': 'size === "small" && !readonly',
                            '[class.a-rating_medium]': 'size === "medium" && !readonly',
                            '[class.a-rating_large]': 'size === "large" && !readonly',
                            '[class.a-rating_readonly]': 'readonly',
                            '(mouseleave)': 'reset()'
                        },
                        templateUrl: './rating.component.html',
                        encapsulation: i0.ViewEncapsulation.None,
                        providers: [ADAPT_RATING_ACCESSOR]
                    }]
            }], function () { return [{ type: i1__namespace.AdaptTranslateService }, { type: i2__namespace.AdaptRadarService }, { type: i0__namespace.ElementRef }]; }, { readonly: [{
                    type: i0.Input
                }], activeRateChanged: [{
                    type: i0.Output,
                    args: ['active-rate-changed']
                }], hoverChanged: [{
                    type: i0.Output,
                    args: ['hover-changed']
                }], leaveChanged: [{
                    type: i0.Output,
                    args: ['leave-changed']
                }], size: [{
                    type: i0.Input
                }], disabled: [{
                    type: i0.Input
                }], tooltip: [{
                    type: i0.Input
                }], maxValue: [{
                    type: i0.Input
                }], rate: [{
                    type: i0.Input
                }] });
    })();

    function AdaptRatingVotingComponent_button_0_span_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span");
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r2 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r2.thanksText);
        }
    }
    var _c0$c = function (a0, a1, a2, a3, a4, a5) { return { "d-icon-star": a0, "d-icon-star_o": a1, "d-icon-thumb_up_adapt": a2, "d-icon-thumb_up_o_adapt": a3, "d-icon-flag": a4, "d-icon-flag_o": a5 }; };
    function AdaptRatingVotingComponent_button_0_span_4_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span", 4);
            i0__namespace.ɵɵtext(1, "\n  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r3 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵpropertyInterpolate("adaptTooltip", ctx_r3.tooltip !== "" ? ctx_r3.tooltip : "");
            i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction6(5, _c0$c, ctx_r3.type === "star" && ctx_r3.isActive, ctx_r3.type === "star" && !ctx_r3.isActive, ctx_r3.type === "like" && ctx_r3.isActive, ctx_r3.type === "like" && !ctx_r3.isActive, ctx_r3.type === "flag" && ctx_r3.isActive, ctx_r3.type === "flag" && !ctx_r3.isActive))("placement", ctx_r3.tooltipPlacement)("adaptRadarDisableEventSending", true);
            i0__namespace.ɵɵattribute("aria-label", ctx_r3.tooltip || "");
        }
    }
    var _c1$a = function (a0, a1, a2, a3, a4) { return { "a-rating-voting__btn": a0, "btn btn-secondary btn-sm": a1, "is-star-icon": a2, "is-active": a3, "active": a4 }; };
    function AdaptRatingVotingComponent_button_0_Template(rf, ctx) {
        if (rf & 1) {
            var _r5_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 2);
            i0__namespace.ɵɵlistener("click", function AdaptRatingVotingComponent_button_0_Template_button_click_0_listener() { i0__namespace.ɵɵrestoreView(_r5_1); var ctx_r4 = i0__namespace.ɵɵnextContext(); return ctx_r4.handleClick(); });
            i0__namespace.ɵɵtext(1, "\n\n  ");
            i0__namespace.ɵɵtemplate(2, AdaptRatingVotingComponent_button_0_span_2_Template, 2, 1, "span", 1);
            i0__namespace.ɵɵtext(3, "\n\n  ");
            i0__namespace.ɵɵtemplate(4, AdaptRatingVotingComponent_button_0_span_4_Template, 2, 12, "span", 3);
            i0__namespace.ɵɵtext(5, "\n");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r0 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction5(3, _c1$a, ctx_r0.type !== "thanks", ctx_r0.type === "thanks", ctx_r0.type === "star", ctx_r0.isActive, ctx_r0.type === "thanks" && ctx_r0.isActive));
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r0.type === "thanks");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r0.type !== "thanks");
        }
    }
    function AdaptRatingVotingComponent_span_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span");
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementStart(2, "span", 5);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("", ctx_r1.thanksAbbrMessage, " ");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate1("\"", ctx_r1.thanksText, "\"");
        }
    }
    var RATING_VOTING_TYPES = [
        'star',
        'flag',
        'like',
        'thanks',
    ];
    var RatingVotingTypeError = /** @class */ (function (_super) {
        __extends(RatingVotingTypeError, _super);
        function RatingVotingTypeError(type) {
            return _super.call(this, "Rating voting type \"" + type + "\" isn't supported (allowed: star, like, flag, thanks).") || this;
        }
        return RatingVotingTypeError;
    }(Error));
    var AdaptRatingVotingComponent = /** @class */ (function (_super) {
        __extends(AdaptRatingVotingComponent, _super);
        function AdaptRatingVotingComponent(ts, _adaptRadarService, _elem) {
            var _this = _super.call(this, _adaptRadarService, _elem, i1.AdaptRadarAngularCustomEventName.AdaptRatingVoting) || this;
            _this.ts = ts;
            _this.isActive = false;
            _this.wasClick = true;
            _this.type = 'star';
            // eslint-disable-next-line @angular-eslint/no-output-on-prefix, @angular-eslint/no-output-rename
            _this.onVotingChanged = new i0.EventEmitter();
            _this._tooltip = '';
            _this._tooltipPlacement = 'top';
            _this.setDefaultTexts(ts.getCurrentLanguage());
            return _this;
        }
        Object.defineProperty(AdaptRatingVotingComponent.prototype, "thanksText", {
            get: function () {
                return this._thanksText;
            },
            set: function (text) {
                this._thanksText = text;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptRatingVotingComponent.prototype, "thanksAbbrMessage", {
            get: function () {
                return this._thanksAbbrMessage;
            },
            set: function (text) {
                this._thanksAbbrMessage = text;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptRatingVotingComponent.prototype, "tooltip", {
            get: function () {
                return this._tooltip;
            },
            set: function (v) {
                this._tooltip = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptRatingVotingComponent.prototype, "tooltipPlacement", {
            get: function () {
                return this._tooltipPlacement;
            },
            set: function (placement) {
                this._tooltipPlacement = placement;
            },
            enumerable: false,
            configurable: true
        });
        AdaptRatingVotingComponent.prototype.setDefaultTexts = function (translation) {
            this.thanksText = translation['adapt.rating.vote.thank'];
            this.thanksAbbrMessage = translation['adapt.rating.vote.confirm'];
        };
        AdaptRatingVotingComponent.prototype.handleClick = function () {
            this.isActive = !this.isActive;
            this.onVotingChanged.emit({ type: this.type, isActive: this.isActive });
            if (this.type === 'thanks') {
                this.wasClick = false;
            }
        };
        AdaptRatingVotingComponent.prototype.ngOnChanges = function () {
            if (this.type && RATING_VOTING_TYPES.indexOf(this.type) === -1) {
                throw new RatingVotingTypeError(this.type);
            }
        };
        return AdaptRatingVotingComponent;
    }(i2.AdaptRadarGenericDirective));
    AdaptRatingVotingComponent.ɵfac = function AdaptRatingVotingComponent_Factory(t) { return new (t || AdaptRatingVotingComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef)); };
    AdaptRatingVotingComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptRatingVotingComponent, selectors: [["adapt-rating-voting"]], hostVars: 2, hostBindings: function AdaptRatingVotingComponent_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵclassProp("a-rating-voting", true);
            }
        }, inputs: { type: "type", thanksText: "thanksText", thanksAbbrMessage: "thanksAbbrMessage", tooltip: "tooltip", tooltipPlacement: "tooltipPlacement" }, outputs: { onVotingChanged: "voting-change" }, features: [i0__namespace.ɵɵInheritDefinitionFeature, i0__namespace.ɵɵNgOnChangesFeature], decls: 4, vars: 2, consts: [["type", "button", 3, "ngClass", "click", 4, "ngIf"], [4, "ngIf"], ["type", "button", 3, "ngClass", "click"], ["class", "a-rating-voting__icon", 3, "ngClass", "placement", "adaptRadarDisableEventSending", "adaptTooltip", 4, "ngIf"], [1, "a-rating-voting__icon", 3, "ngClass", "placement", "adaptRadarDisableEventSending", "adaptTooltip"], [1, "font-weight-semibold"]], template: function AdaptRatingVotingComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵtemplate(0, AdaptRatingVotingComponent_button_0_Template, 6, 9, "button", 0);
                i0__namespace.ɵɵtext(1, "\n\n");
                i0__namespace.ɵɵtemplate(2, AdaptRatingVotingComponent_span_2_Template, 4, 2, "span", 1);
                i0__namespace.ɵɵtext(3, "\n\n\n\n\n");
            }
            if (rf & 2) {
                i0__namespace.ɵɵproperty("ngIf", ctx.wasClick);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", !ctx.wasClick);
            }
        }, directives: [i3__namespace.NgIf, i3__namespace.NgClass, i1__namespace.AdaptTooltipDirective], encapsulation: 2 });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptRatingVotingComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-rating-voting',
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: {
                            '[class.a-rating-voting]': 'true'
                        },
                        templateUrl: './rating-voting.component.html',
                        encapsulation: i0.ViewEncapsulation.None
                    }]
            }], function () { return [{ type: i1__namespace.AdaptTranslateService }, { type: i2__namespace.AdaptRadarService }, { type: i0__namespace.ElementRef }]; }, { type: [{
                    type: i0.Input
                }], onVotingChanged: [{
                    type: i0.Output,
                    args: ['voting-change']
                }], thanksText: [{
                    type: i0.Input
                }], thanksAbbrMessage: [{
                    type: i0.Input
                }], tooltip: [{
                    type: i0.Input
                }], tooltipPlacement: [{
                    type: i0.Input
                }] });
    })();

    exports.RatingLikeEnum = void 0;
    (function (RatingLikeEnum) {
        RatingLikeEnum[RatingLikeEnum["point"] = 5] = "point";
        RatingLikeEnum[RatingLikeEnum["point2"] = 3] = "point2";
    })(exports.RatingLikeEnum || (exports.RatingLikeEnum = {}));

    var _c0$b = function (a0, a1) { return { "is-selected": a0, "is-inactive": a1 }; };
    function AdaptRatingLikeComponent_ng_container_0_button_2_Template(rf, ctx) {
        if (rf & 1) {
            var _r8_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 2);
            i0__namespace.ɵɵlistener("click", function AdaptRatingLikeComponent_ng_container_0_button_2_Template_button_click_0_listener($event) { i0__namespace.ɵɵrestoreView(_r8_1); var index_r2 = i0__namespace.ɵɵnextContext().index; var ctx_r6 = i0__namespace.ɵɵnextContext(); return ctx_r6.handleClick($event, index_r2); });
            i0__namespace.ɵɵtext(1, "\n  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r9 = i0__namespace.ɵɵnextContext();
            var item_r1 = ctx_r9.$implicit;
            var index_r2 = ctx_r9.index;
            var ctx_r5 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵclassMapInterpolate1("a-rating__item is-", item_r1, "");
            i0__namespace.ɵɵclassProp("is-disabled", ctx_r5.disabledList.indexOf(index_r2) !== -1);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("adaptTooltip", !ctx_r5.disabled && ctx_r5.tooltip[index_r2] !== "" ? ctx_r5.tooltip[index_r2] : "")("ngClass", i0__namespace.ɵɵpureFunction2(11, _c0$b, ctx_r5.selectedLike === index_r2, ctx_r5.selectedLike !== index_r2 && ctx_r5.selectedLike !== null))("disabled", ctx_r5.disabled)("placement", ctx_r5.tooltipPlacement);
            i0__namespace.ɵɵattribute("aria-label", ctx_r5.tooltip[index_r2] || "");
        }
    }
    function AdaptRatingLikeComponent_ng_container_0_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n  ");
            i0__namespace.ɵɵtemplate(2, AdaptRatingLikeComponent_ng_container_0_button_2_Template, 2, 14, "button", 1);
            i0__namespace.ɵɵtext(3, "\n");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var last_r3 = ctx.last;
            var first_r4 = ctx.first;
            var ctx_r0 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r0.point === 3 ? !last_r3 && !first_r4 : true);
        }
    }
    var RatingLikeTypes = [
        'terrible',
        'disliked',
        'ok',
        'good',
        'excellent'
    ];
    var RatingLikeValuesError = /** @class */ (function (_super) {
        __extends(RatingLikeValuesError, _super);
        function RatingLikeValuesError(length) {
            return _super.call(this, "Rating Like values parameter should have 3 or 5 string values. Instead got " + length + " values.") || this;
        }
        return RatingLikeValuesError;
    }(Error));
    var AdaptRatingLikeComponent = /** @class */ (function (_super) {
        __extends(AdaptRatingLikeComponent, _super);
        function AdaptRatingLikeComponent(ts, _adaptRadarService, _elem) {
            var _this = _super.call(this, _adaptRadarService, _elem, i1.AdaptRadarAngularCustomEventName.AdaptRatingLike) || this;
            _this.ts = ts;
            _this.selectedLike = null;
            _this.types = RatingLikeTypes;
            _this.disabled = false;
            // eslint-disable-next-line @angular-eslint/no-output-on-prefix
            _this.onChange = new i0.EventEmitter();
            _this._ratingValues = RatingLikeTypes;
            _this._point = exports.RatingLikeEnum.point;
            _this._tooltipPlacement = 'top';
            _this._size = 'small';
            _this._disabledList = [];
            _this.setDefaultTexts(ts.getCurrentLanguage());
            return _this;
        }
        Object.defineProperty(AdaptRatingLikeComponent.prototype, "ratingValues", {
            get: function () {
                return this._ratingValues;
            },
            set: function (v) {
                if (v.length === 5) {
                    this._ratingValues = v;
                }
                else if (v.length === 3) {
                    this._ratingValues = __spreadArray(__spreadArray([''], __read(v)), ['']);
                }
                else {
                    throw new RatingLikeValuesError(v.length);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptRatingLikeComponent.prototype, "point", {
            get: function () {
                return this._point;
            },
            set: function (v) {
                this._point = i1.toNumber(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptRatingLikeComponent.prototype, "tooltip", {
            get: function () {
                return this._tooltip;
            },
            set: function (v) {
                this._tooltip = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptRatingLikeComponent.prototype, "tooltipPlacement", {
            get: function () {
                return this._tooltipPlacement;
            },
            set: function (placement) {
                this._tooltipPlacement = placement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptRatingLikeComponent.prototype, "size", {
            get: function () {
                return this._size;
            },
            set: function (v) {
                this._size = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptRatingLikeComponent.prototype, "disabledList", {
            get: function () {
                return this._disabledList;
            },
            set: function (array) {
                this._disabledList = array;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptRatingLikeComponent.prototype, "rate", {
            // TODO: Refactor this if possible
            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
            set: function (v) {
                var setValue = i1.toNumber(v);
                if (setValue && setValue > 0 && setValue <= this.point) {
                    this.selectedLike = setValue - 1;
                }
            },
            enumerable: false,
            configurable: true
        });
        AdaptRatingLikeComponent.prototype.setDefaultTexts = function (translation) {
            this.tooltip = [
                translation['adapt.rating.like.l1'],
                translation['adapt.rating.like.l2'],
                translation['adapt.rating.like.l3'],
                translation['adapt.rating.like.l4'],
                translation['adapt.rating.like.l5'],
            ];
        };
        AdaptRatingLikeComponent.prototype.handleClick = function (e, index) {
            if (!this.disabled) {
                this._stopDisabled(e, index);
                this.selectedLike = index;
                this.onChange.emit({ type: this.ratingValues[index] });
            }
        };
        AdaptRatingLikeComponent.prototype._stopDisabled = function (e, index) {
            if (this.disabledList.indexOf(index) === -1) {
                e.preventDefault();
                e.stopPropagation();
            }
        };
        return AdaptRatingLikeComponent;
    }(i2.AdaptRadarGenericDirective));
    AdaptRatingLikeComponent.ɵfac = function AdaptRatingLikeComponent_Factory(t) { return new (t || AdaptRatingLikeComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef)); };
    AdaptRatingLikeComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptRatingLikeComponent, selectors: [["adapt-rating-like"]], hostVars: 10, hostBindings: function AdaptRatingLikeComponent_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵclassProp("a-rating", true)("a-rating_like", true)("a-rating_small", ctx.size === "small")("a-rating_medium", ctx.size === "medium")("a-rating_large", ctx.size === "large");
            }
        }, inputs: { disabled: "disabled", ratingValues: "ratingValues", point: "point", tooltip: "tooltip", tooltipPlacement: "tooltipPlacement", size: "size", disabledList: "disabledList", rate: "rate" }, outputs: { onChange: "onChange" }, features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 2, vars: 1, consts: [[4, "ngFor", "ngForOf"], ["type", "button", 3, "class", "is-disabled", "adaptRadarDisableEventSending", "adaptTooltip", "ngClass", "disabled", "placement", "click", 4, "ngIf"], ["type", "button", 3, "adaptRadarDisableEventSending", "adaptTooltip", "ngClass", "disabled", "placement", "click"]], template: function AdaptRatingLikeComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵtemplate(0, AdaptRatingLikeComponent_ng_container_0_Template, 4, 1, "ng-container", 0);
                i0__namespace.ɵɵtext(1, "\n\n");
            }
            if (rf & 2) {
                i0__namespace.ɵɵproperty("ngForOf", ctx.types);
            }
        }, directives: [i3__namespace.NgForOf, i3__namespace.NgIf, i1__namespace.AdaptTooltipDirective, i3__namespace.NgClass], encapsulation: 2 });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptRatingLikeComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-rating-like',
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: {
                            '[class.a-rating]': 'true',
                            '[class.a-rating_like]': 'true',
                            '[class.a-rating_small]': 'size === "small" ',
                            '[class.a-rating_medium]': 'size === "medium" ',
                            '[class.a-rating_large]': 'size === "large" '
                        },
                        templateUrl: './rating-like.component.html',
                        encapsulation: i0.ViewEncapsulation.None
                    }]
            }], function () { return [{ type: i1__namespace.AdaptTranslateService }, { type: i2__namespace.AdaptRadarService }, { type: i0__namespace.ElementRef }]; }, { disabled: [{
                    type: i0.Input
                }], onChange: [{
                    type: i0.Output
                }], ratingValues: [{
                    type: i0.Input
                }], point: [{
                    type: i0.Input
                }], tooltip: [{
                    type: i0.Input
                }], tooltipPlacement: [{
                    type: i0.Input
                }], size: [{
                    type: i0.Input
                }], disabledList: [{
                    type: i0.Input
                }], rate: [{
                    type: i0.Input
                }] });
    })();

    var _c0$a = function (a0) { return { "d-icon-thumb_up_adapt": a0 }; };
    var _c1$9 = function (a0) { return { "d-icon-thumb_down_adapt": a0 }; };
    function AdaptRatingBinaryComponent_div_1_ng_container_2_Template(rf, ctx) {
        if (rf & 1) {
            var _r5_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵelementStart(2, "button", 4);
            i0__namespace.ɵɵlistener("click", function AdaptRatingBinaryComponent_div_1_ng_container_2_Template_button_click_2_listener($event) { i0__namespace.ɵɵrestoreView(_r5_1); var ctx_r4 = i0__namespace.ɵɵnextContext(2); return ctx_r4.handleClick($event, "like"); });
            i0__namespace.ɵɵtext(3, "\n      ");
            i0__namespace.ɵɵelementStart(4, "span");
            i0__namespace.ɵɵtext(5);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n    ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(7, "\n    ");
            i0__namespace.ɵɵelementStart(8, "button", 4);
            i0__namespace.ɵɵlistener("click", function AdaptRatingBinaryComponent_div_1_ng_container_2_Template_button_click_8_listener($event) { i0__namespace.ɵɵrestoreView(_r5_1); var ctx_r6 = i0__namespace.ɵɵnextContext(2); return ctx_r6.handleClick($event, "dislike"); });
            i0__namespace.ɵɵtext(9, "\n      ");
            i0__namespace.ɵɵelementStart(10, "span");
            i0__namespace.ɵɵtext(11);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(12, "\n    ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(13, "\n  ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r2 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction1(8, _c0$a, ctx_r2.type === "icon"));
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵclassProp("sr-only", ctx_r2.type === "icon");
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r2.btnTextLeft);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction1(10, _c1$9, ctx_r2.type === "icon"));
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵclassProp("sr-only", ctx_r2.type === "icon");
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r2.btnTextRight);
        }
    }
    function AdaptRatingBinaryComponent_div_1_div_4_span_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span");
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r7 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r7.showMessage);
        }
    }
    function AdaptRatingBinaryComponent_div_1_div_4_span_4_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span");
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementStart(2, "span", 6);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n      ");
            i0__namespace.ɵɵprojection(5);
            i0__namespace.ɵɵtext(6, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r8 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("", ctx_r8.textMessage, " ");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate3("", ctx_r8.quotesLeft, "", ctx_r8.showBtnValue, "", ctx_r8.quotesRight, ". ");
        }
    }
    function AdaptRatingBinaryComponent_div_1_div_4_a_6_Template(rf, ctx) {
        if (rf & 1) {
            var _r11_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "a", 7);
            i0__namespace.ɵɵlistener("click", function AdaptRatingBinaryComponent_div_1_div_4_a_6_Template_a_click_0_listener($event) { i0__namespace.ɵɵrestoreView(_r11_1); var ctx_r10 = i0__namespace.ɵɵnextContext(3); return ctx_r10.handleClick($event, ""); });
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r9 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r9.undoButton);
        }
    }
    function AdaptRatingBinaryComponent_div_1_div_4_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div");
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵtemplate(2, AdaptRatingBinaryComponent_div_1_div_4_span_2_Template, 2, 1, "span", 3);
            i0__namespace.ɵɵtext(3, "\n    ");
            i0__namespace.ɵɵtemplate(4, AdaptRatingBinaryComponent_div_1_div_4_span_4_Template, 7, 4, "span", 3);
            i0__namespace.ɵɵtext(5, "\n    ");
            i0__namespace.ɵɵtemplate(6, AdaptRatingBinaryComponent_div_1_div_4_a_6_Template, 2, 1, "a", 5);
            i0__namespace.ɵɵtext(7, "\n  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r3 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r3.type === "icon");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r3.type === "text");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r3.undoButton !== "");
        }
    }
    function AdaptRatingBinaryComponent_div_1_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 2);
            i0__namespace.ɵɵtext(1, "\n  ");
            i0__namespace.ɵɵtemplate(2, AdaptRatingBinaryComponent_div_1_ng_container_2_Template, 14, 12, "ng-container", 3);
            i0__namespace.ɵɵtext(3, "\n\n  ");
            i0__namespace.ɵɵtemplate(4, AdaptRatingBinaryComponent_div_1_div_4_Template, 8, 3, "div", 3);
            i0__namespace.ɵɵtext(5, "\n\n");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r0 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r0.toggle);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r0.toggle);
        }
    }
    function AdaptRatingBinaryComponent_div_3_button_11_Template(rf, ctx) {
        if (rf & 1) {
            var _r15_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 14);
            i0__namespace.ɵɵlistener("click", function AdaptRatingBinaryComponent_div_3_button_11_Template_button_click_0_listener() { i0__namespace.ɵɵrestoreView(_r15_1); var ctx_r14 = i0__namespace.ɵɵnextContext(2); return ctx_r14.changeValue("decrease"); });
            i0__namespace.ɵɵtext(1, "\n      ");
            i0__namespace.ɵɵelementStart(2, "span", 10);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r12 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r12.btnTextRight);
        }
    }
    function AdaptRatingBinaryComponent_div_3_div_13_a_2_Template(rf, ctx) {
        if (rf & 1) {
            var _r18_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "a", 7);
            i0__namespace.ɵɵlistener("click", function AdaptRatingBinaryComponent_div_3_div_13_a_2_Template_a_click_0_listener($event) { i0__namespace.ɵɵrestoreView(_r18_1); var ctx_r17 = i0__namespace.ɵɵnextContext(3); return ctx_r17.cancelValue($event); });
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r16 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r16.undoButton);
        }
    }
    function AdaptRatingBinaryComponent_div_3_div_13_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 15);
            i0__namespace.ɵɵtext(1, "\n      ");
            i0__namespace.ɵɵtemplate(2, AdaptRatingBinaryComponent_div_3_div_13_a_2_Template, 2, 1, "a", 5);
            i0__namespace.ɵɵtext(3, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r13 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r13.undoButton !== "");
        }
    }
    function AdaptRatingBinaryComponent_div_3_Template(rf, ctx) {
        if (rf & 1) {
            var _r20_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 8);
            i0__namespace.ɵɵtext(1, "\n\n    ");
            i0__namespace.ɵɵelementStart(2, "button", 9);
            i0__namespace.ɵɵlistener("click", function AdaptRatingBinaryComponent_div_3_Template_button_click_2_listener() { i0__namespace.ɵɵrestoreView(_r20_1); var ctx_r19 = i0__namespace.ɵɵnextContext(); return ctx_r19.changeValue("increase"); });
            i0__namespace.ɵɵtext(3, "\n      ");
            i0__namespace.ɵɵelementStart(4, "span", 10);
            i0__namespace.ɵɵtext(5);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n    ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(7, "\n    ");
            i0__namespace.ɵɵelementStart(8, "div", 11);
            i0__namespace.ɵɵtext(9);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(10, "\n    ");
            i0__namespace.ɵɵtemplate(11, AdaptRatingBinaryComponent_div_3_button_11_Template, 5, 1, "button", 12);
            i0__namespace.ɵɵtext(12, "\n\n    ");
            i0__namespace.ɵɵtemplate(13, AdaptRatingBinaryComponent_div_3_div_13_Template, 4, 1, "div", 13);
            i0__namespace.ɵɵtext(14, "\n\n");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵclassProp("a-rating_btn-hidden", !ctx_r1.toggle);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r1.btnTextLeft);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵclassProp("font-weight-semibold", !ctx_r1.toggle);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r1.value);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r1.toggle);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r1.toggle);
        }
    }
    var _c2$8 = ["*"];
    var RATING_BINARY_TYPE = ['icon', 'text', 'count'];
    var RatingBinaryTypeError = /** @class */ (function (_super) {
        __extends(RatingBinaryTypeError, _super);
        function RatingBinaryTypeError(type) {
            return _super.call(this, "Rating binary type \"" + type + "\" isn't supported (allowed: 'icon', 'text', 'count').") || this;
        }
        return RatingBinaryTypeError;
    }(Error));
    var AdaptRatingBinaryComponent = /** @class */ (function (_super) {
        __extends(AdaptRatingBinaryComponent, _super);
        function AdaptRatingBinaryComponent(_element, _renderer, ts, _adaptRadarService) {
            var _this = _super.call(this, _adaptRadarService, _element, i1.AdaptRadarAngularCustomEventName.AdaptRatingBinary) || this;
            _this._element = _element;
            _this._renderer = _renderer;
            _this.ts = ts;
            _this.toggle = true;
            // eslint-disable-next-line @angular-eslint/no-output-on-prefix, @angular-eslint/no-output-rename
            _this.onChangeValue = new i0.EventEmitter();
            _this._type = 'text';
            _this._value = 12;
            _this.setDefaultTexts(ts.getCurrentLanguage());
            return _this;
        }
        Object.defineProperty(AdaptRatingBinaryComponent.prototype, "type", {
            get: function () {
                return this._type;
            },
            set: function (t) {
                this._type = t;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptRatingBinaryComponent.prototype, "likeMessage", {
            get: function () {
                return this._likeMessage;
            },
            set: function (message) {
                this._likeMessage = message;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptRatingBinaryComponent.prototype, "dislikeMessage", {
            get: function () {
                return this._dislikeMessage;
            },
            set: function (message) {
                this._dislikeMessage = message;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptRatingBinaryComponent.prototype, "textMessage", {
            get: function () {
                return this._textMessage;
            },
            set: function (v) {
                this._textMessage = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptRatingBinaryComponent.prototype, "value", {
            get: function () {
                return this._value;
            },
            set: function (v) {
                this._value = v;
            },
            enumerable: false,
            configurable: true
        });
        AdaptRatingBinaryComponent.prototype.setDefaultTexts = function (translation) {
            this.btnTextLeft = translation['adapt.rating.binary.left'];
            this.btnTextRight = translation['adapt.rating.binary.right'];
            this.undoButton = translation['adapt.common.undo'];
            this.quotesLeft = translation['adapt.common.doubleQuotesLeft'];
            this.quotesRight = translation['adapt.common.doubleQuotesRight'];
            this._likeMessage = translation['adapt.rating.binary.like'];
            this._dislikeMessage = translation['adapt.rating.binary.dislike'];
            this._textMessage = translation['adapt.rating.binary.confirm'];
        };
        AdaptRatingBinaryComponent.prototype.handleClick = function (e, type) {
            if (type === void 0) { type = ''; }
            e.preventDefault();
            this._setHostStyles();
            this._toggleState();
            switch (type) {
                case 'like':
                    this.showMessage = this.likeMessage;
                    this.showBtnValue = this.btnTextLeft;
                    this.onChangeValue.emit({ value: this.btnTextLeft });
                    break;
                case 'dislike':
                    this.showMessage = this.dislikeMessage;
                    this.showBtnValue = this.btnTextRight;
                    this.onChangeValue.emit({ value: this.btnTextRight });
                    break;
                default:
                    this.onChangeValue.emit({ value: this.undoButton });
                    break;
            }
        };
        AdaptRatingBinaryComponent.prototype.changeValue = function (action) {
            this._setHostStyles();
            this._toggleState();
            switch (action) {
                case 'increase':
                    this.savedValue = this.value;
                    this.value++;
                    this.onChangeValue.emit({ value: this.value });
                    break;
                case 'decrease':
                    this.savedValue = this.value;
                    this.value--;
                    this.onChangeValue.emit({ value: this.value });
                    break;
            }
        };
        AdaptRatingBinaryComponent.prototype.cancelValue = function (e) {
            e.preventDefault();
            this.reset();
        };
        AdaptRatingBinaryComponent.prototype.reset = function () {
            this.value = this.savedValue;
            this.onChangeValue.emit({ value: this.undoButton });
            this._toggleState();
        };
        AdaptRatingBinaryComponent.prototype.ngOnChanges = function () {
            if (this.type && RATING_BINARY_TYPE.indexOf(this.type) === -1) {
                throw new RatingBinaryTypeError(this.type);
            }
        };
        AdaptRatingBinaryComponent.prototype._setHostStyles = function () {
            if (this._element) {
                var nativeElement = this._element.nativeElement;
                var offsetHeight = nativeElement.offsetHeight;
                this._renderer.setStyle(nativeElement, 'minHeight', offsetHeight + "px");
                this._renderer.addClass(nativeElement, 'a-rating-center');
            }
        };
        AdaptRatingBinaryComponent.prototype._toggleState = function () {
            this.toggle = !this.toggle;
        };
        return AdaptRatingBinaryComponent;
    }(i2.AdaptRadarGenericDirective));
    AdaptRatingBinaryComponent.ɵfac = function AdaptRatingBinaryComponent_Factory(t) { return new (t || AdaptRatingBinaryComponent)(i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService)); };
    AdaptRatingBinaryComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptRatingBinaryComponent, selectors: [["adapt-rating-binary"]], hostVars: 2, hostBindings: function AdaptRatingBinaryComponent_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵclassProp("a-rating-binary", true);
            }
        }, inputs: { btnTextLeft: "btnTextLeft", btnTextRight: "btnTextRight", undoButton: "undoButton", type: "type", likeMessage: "likeMessage", dislikeMessage: "dislikeMessage", textMessage: "textMessage", value: "value" }, outputs: { onChangeValue: "change-value" }, features: [i0__namespace.ɵɵInheritDefinitionFeature, i0__namespace.ɵɵNgOnChangesFeature], ngContentSelectors: _c2$8, decls: 5, vars: 2, consts: [["class", "btn-group", 4, "ngIf"], ["class", "btn-group a-rating-group", 4, "ngIf"], [1, "btn-group"], [4, "ngIf"], ["type", "button", 1, "btn", "btn-secondary", 3, "ngClass", "click"], ["href", "#", 3, "click", 4, "ngIf"], [1, "font-weight-semibold"], ["href", "#", 3, "click"], [1, "btn-group", "a-rating-group"], ["type", "button", 1, "btn", "btn-secondary", "d-icon-triangle_up", 3, "click"], [1, "sr-only"], [1, "a-rating-group__value"], ["type", "button", "class", "btn btn-secondary d-icon-triangle_down", 3, "click", 4, "ngIf"], ["class", "a-rating__undo-container", 4, "ngIf"], ["type", "button", 1, "btn", "btn-secondary", "d-icon-triangle_down", 3, "click"], [1, "a-rating__undo-container"]], template: function AdaptRatingBinaryComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵprojectionDef();
                i0__namespace.ɵɵtext(0, "\n");
                i0__namespace.ɵɵtemplate(1, AdaptRatingBinaryComponent_div_1_Template, 6, 2, "div", 0);
                i0__namespace.ɵɵtext(2, "\n\n");
                i0__namespace.ɵɵtemplate(3, AdaptRatingBinaryComponent_div_3_Template, 15, 8, "div", 1);
                i0__namespace.ɵɵtext(4, "\n\n\n\n\n");
            }
            if (rf & 2) {
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("ngIf", ctx.type !== "count");
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.type === "count");
            }
        }, directives: [i3__namespace.NgIf, i3__namespace.NgClass], styles: ["\n    /* Hot fix for IE 11 */\n    .a-rating-center::after {\n      content: '';\n      display: inline-block;\n      min-height: inherit;\n      font-size: 0;\n    }\n  "], encapsulation: 2 });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptRatingBinaryComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-rating-binary',
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: {
                            '[class.a-rating-binary]': 'true'
                        },
                        templateUrl: './rating-binary.component.html',
                        encapsulation: i0.ViewEncapsulation.None,
                        styles: ["\n    /* Hot fix for IE 11 */\n    .a-rating-center::after {\n      content: '';\n      display: inline-block;\n      min-height: inherit;\n      font-size: 0;\n    }\n  "]
                    }]
            }], function () { return [{ type: i0__namespace.ElementRef }, { type: i0__namespace.Renderer2 }, { type: i1__namespace.AdaptTranslateService }, { type: i2__namespace.AdaptRadarService }]; }, { btnTextLeft: [{
                    type: i0.Input
                }], btnTextRight: [{
                    type: i0.Input
                }], undoButton: [{
                    type: i0.Input
                }], onChangeValue: [{
                    type: i0.Output,
                    args: ['change-value']
                }], type: [{
                    type: i0.Input
                }], likeMessage: [{
                    type: i0.Input
                }], dislikeMessage: [{
                    type: i0.Input
                }], textMessage: [{
                    type: i0.Input
                }], value: [{
                    type: i0.Input
                }] });
    })();

    var AdaptRatingModule = /** @class */ (function () {
        function AdaptRatingModule() {
        }
        return AdaptRatingModule;
    }());
    AdaptRatingModule.ɵfac = function AdaptRatingModule_Factory(t) { return new (t || AdaptRatingModule)(); };
    AdaptRatingModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptRatingModule });
    AdaptRatingModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[i3.CommonModule, i1.AdaptTooltipModule, i1.AdaptIconModule, i6.FormsModule]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptRatingModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [i3.CommonModule, i1.AdaptTooltipModule, i1.AdaptIconModule, i6.FormsModule],
                        exports: [AdaptRatingComponent, AdaptRatingVotingComponent, AdaptRatingLikeComponent, AdaptRatingBinaryComponent],
                        declarations: [AdaptRatingComponent, AdaptRatingVotingComponent, AdaptRatingLikeComponent, AdaptRatingBinaryComponent]
                    }]
            }], null, null);
    })();
    (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptRatingModule, { declarations: [AdaptRatingComponent, AdaptRatingVotingComponent, AdaptRatingLikeComponent, AdaptRatingBinaryComponent], imports: [i3.CommonModule, i1.AdaptTooltipModule, i1.AdaptIconModule, i6.FormsModule], exports: [AdaptRatingComponent, AdaptRatingVotingComponent, AdaptRatingLikeComponent, AdaptRatingBinaryComponent] }); })();

    var _c0$9 = ["search"];
    var _c1$8 = function (a0, a1) { return { "adapt-search-active": a0, "adapt-search-dirty": a1 }; };
    var _c2$7 = function (a0) { return { "sr-only": a0 }; };
    var _c3$5 = function (a0) { return { "adapt-search-clear-visible": a0 }; };
    function AdaptSearchComponent_div_1_Template(rf, ctx) {
        if (rf & 1) {
            var _r4_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 2);
            i0__namespace.ɵɵtext(1, "\n      ");
            i0__namespace.ɵɵelement(2, "div", 3);
            i0__namespace.ɵɵtext(3, "\n      ");
            i0__namespace.ɵɵelementStart(4, "div", 4);
            i0__namespace.ɵɵtext(5, "\n        ");
            i0__namespace.ɵɵelementStart(6, "label", 5);
            i0__namespace.ɵɵtext(7, "\n          ");
            i0__namespace.ɵɵelementStart(8, "span", 6);
            i0__namespace.ɵɵtext(9);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(10, "\n          ");
            i0__namespace.ɵɵelementStart(11, "span", 7);
            i0__namespace.ɵɵtext(12);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(13, "\n        ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(14, "\n        ");
            i0__namespace.ɵɵelementStart(15, "input", 8, 9);
            i0__namespace.ɵɵlistener("ngModelChange", function AdaptSearchComponent_div_1_Template_input_ngModelChange_15_listener($event) { i0__namespace.ɵɵrestoreView(_r4_1); var ctx_r3 = i0__namespace.ɵɵnextContext(); return ctx_r3.value = $event; })("blur", function AdaptSearchComponent_div_1_Template_input_blur_15_listener() { i0__namespace.ɵɵrestoreView(_r4_1); var ctx_r5 = i0__namespace.ɵɵnextContext(); return ctx_r5.onBlur(); })("focus", function AdaptSearchComponent_div_1_Template_input_focus_15_listener() { i0__namespace.ɵɵrestoreView(_r4_1); var ctx_r6 = i0__namespace.ɵɵnextContext(); return ctx_r6.onFocus(); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(17, "\n      ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(18, "\n      ");
            i0__namespace.ɵɵelementStart(19, "button", 10);
            i0__namespace.ɵɵlistener("click", function AdaptSearchComponent_div_1_Template_button_click_19_listener() { i0__namespace.ɵɵrestoreView(_r4_1); var ctx_r7 = i0__namespace.ɵɵnextContext(); return ctx_r7.clear(); });
            i0__namespace.ɵɵtext(20, "\n        ");
            i0__namespace.ɵɵelementStart(21, "span", 11);
            i0__namespace.ɵɵtext(22);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(23, "\n      ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(24, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r0 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction2(10, _c1$8, ctx_r0.isActive, ctx_r0.canClear || ctx_r0.initialAlign === "left"));
            i0__namespace.ɵɵadvance(6);
            i0__namespace.ɵɵpropertyInterpolate("for", ctx_r0.id);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction1(13, _c2$7, ctx_r0.label || ctx_r0.placeholder));
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r0.label || ctx_r0.placeholder);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r0.placeholder);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("id", ctx_r0.id)("ngModel", ctx_r0.value)("placeholder", ctx_r0.placeholder);
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction1(15, _c3$5, ctx_r0.canClear));
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r0.btnClearText);
        }
    }
    function AdaptSearchComponent_div_3_span_20_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "span", 19);
        }
    }
    var _c4$3 = function (a0) { return { "adapt-search-dirty": a0 }; };
    var _c5$3 = function (a0) { return [a0]; };
    function AdaptSearchComponent_div_3_Template(rf, ctx) {
        if (rf & 1) {
            var _r11_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 12);
            i0__namespace.ɵɵtext(1, "\n      ");
            i0__namespace.ɵɵelementStart(2, "div", 13);
            i0__namespace.ɵɵtext(3, "\n        ");
            i0__namespace.ɵɵelementStart(4, "div", 14);
            i0__namespace.ɵɵtext(5, "\n          ");
            i0__namespace.ɵɵelementStart(6, "input", 15, 9);
            i0__namespace.ɵɵlistener("ngModelChange", function AdaptSearchComponent_div_3_Template_input_ngModelChange_6_listener($event) { i0__namespace.ɵɵrestoreView(_r11_1); var ctx_r10 = i0__namespace.ɵɵnextContext(); return ctx_r10.value = $event; })("blur", function AdaptSearchComponent_div_3_Template_input_blur_6_listener() { i0__namespace.ɵɵrestoreView(_r11_1); var ctx_r12 = i0__namespace.ɵɵnextContext(); return ctx_r12.onBlur(); })("focus", function AdaptSearchComponent_div_3_Template_input_focus_6_listener() { i0__namespace.ɵɵrestoreView(_r11_1); var ctx_r13 = i0__namespace.ɵɵnextContext(); return ctx_r13.onFocus(); })("keyup.enter", function AdaptSearchComponent_div_3_Template_input_keyup_enter_6_listener() { i0__namespace.ɵɵrestoreView(_r11_1); var ctx_r14 = i0__namespace.ɵɵnextContext(); return ctx_r14.setValue(); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(8, "\n          ");
            i0__namespace.ɵɵelementStart(9, "button", 10);
            i0__namespace.ɵɵlistener("click", function AdaptSearchComponent_div_3_Template_button_click_9_listener() { i0__namespace.ɵɵrestoreView(_r11_1); var ctx_r15 = i0__namespace.ɵɵnextContext(); return ctx_r15.clear(); });
            i0__namespace.ɵɵtext(10, "\n            ");
            i0__namespace.ɵɵelementStart(11, "span", 11);
            i0__namespace.ɵɵtext(12);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(13, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(14, "\n        ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(15, "\n        ");
            i0__namespace.ɵɵelementStart(16, "div", 16);
            i0__namespace.ɵɵtext(17, "\n          ");
            i0__namespace.ɵɵelementStart(18, "button", 17);
            i0__namespace.ɵɵlistener("click", function AdaptSearchComponent_div_3_Template_button_click_18_listener() { i0__namespace.ɵɵrestoreView(_r11_1); var ctx_r16 = i0__namespace.ɵɵnextContext(); return ctx_r16.setValue(); });
            i0__namespace.ɵɵtext(19, "\n            ");
            i0__namespace.ɵɵtemplate(20, AdaptSearchComponent_div_3_span_20_Template, 1, 0, "span", 18);
            i0__namespace.ɵɵtext(21, "\n            ");
            i0__namespace.ɵɵelementStart(22, "span");
            i0__namespace.ɵɵtext(23);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(24, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(25, "\n        ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(26, "\n      ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(27, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction1(17, _c4$3, ctx_r1.canClear || ctx_r1.initialAlign === "left"));
            i0__namespace.ɵɵadvance(6);
            i0__namespace.ɵɵclassProp("form-control-sm", ctx_r1.size === "small")("form-control-lg", ctx_r1.size === "large");
            i0__namespace.ɵɵproperty("id", ctx_r1.id)("ngModel", ctx_r1.value)("placeholder", ctx_r1.placeholder);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction1(19, _c3$5, ctx_r1.canClear));
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r1.btnClearText);
            i0__namespace.ɵɵadvance(6);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("ngClass", i0__namespace.ɵɵpureFunction1(21, _c5$3, ctx_r1.explicitSearchBtn ? "explicit-search-btn" : "adapt-search-button"))("size", ctx_r1.size);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r1.explicitSearchBtn);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵclassProp("sr-only", !ctx_r1.explicitSearchBtn);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r1.btnSearchText);
        }
    }
    var nextId$1 = 0;
    var AdaptSearchComponent = /** @class */ (function (_super) {
        __extends(AdaptSearchComponent, _super);
        function AdaptSearchComponent(ts, _adaptRadarService, _elem) {
            var _this = _super.call(this, _adaptRadarService, _elem, i1.AdaptRadarAngularCustomEventName.AdaptSearch) || this;
            _this.ts = ts;
            _this.label = '';
            _this.debounceTime = 300;
            _this.id = "adapt-search-unique-" + nextId$1++;
            _this.triggerableSearch = false;
            _this.size = null;
            _this.explicitSearchBtn = false;
            _this.value = '';
            _this.initialAlign = 'centre';
            _this.valueChanged = new i0.EventEmitter();
            _this.focusChanged = new i0.EventEmitter();
            _this._isActive = false;
            var translation = ts.getCurrentLanguage();
            _this.placeholder = translation['adapt.common.search'];
            _this.btnClearText = translation['adapt.common.clear'];
            _this.btnSearchText = translation['adapt.common.search'];
            return _this;
        }
        Object.defineProperty(AdaptSearchComponent.prototype, "searchValue", {
            get: function () {
                return this.value;
            },
            set: function (searchVal) {
                this.value = searchVal;
            },
            enumerable: false,
            configurable: true
        });
        AdaptSearchComponent.prototype.onClick = function (event) {
            var target = event.target;
            if (!this.triggerableSearch || (this.triggerableSearch && target.classList.contains('adapt-search-clear'))) {
                this.setActive();
            }
        };
        AdaptSearchComponent.prototype.setActive = function () {
            this.search.nativeElement.focus();
            this._changeActive(true);
        };
        AdaptSearchComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            _super.prototype.ngAfterViewInit.call(this);
            if (!this.triggerableSearch) {
                rxjs.fromEvent(this.search.nativeElement, 'input')
                    .pipe(operators.debounceTime(this.debounceTime)).subscribe(function () { return _this.valueChanged.emit(_this.value); });
            }
        };
        Object.defineProperty(AdaptSearchComponent.prototype, "isActive", {
            get: function () {
                return this._isActive;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptSearchComponent.prototype, "isAdaptSearchDirty", {
            get: function () {
                // only check canClear or create separate class with aligning left
                return this.canClear || this.initialAlign === 'left';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptSearchComponent.prototype, "canClear", {
            get: function () {
                return !!this.value;
            },
            enumerable: false,
            configurable: true
        });
        AdaptSearchComponent.prototype.onBlur = function () {
            this._changeActive(false);
        };
        AdaptSearchComponent.prototype.onFocus = function () {
            this._changeActive(true);
        };
        AdaptSearchComponent.prototype.setValue = function () {
            if (this.triggerableSearch) {
                this.valueChanged.emit(this.value);
            }
        };
        AdaptSearchComponent.prototype.clear = function () {
            this.value = '';
            this.valueChanged.emit(this.value);
            this.focusChanged.emit(this._isActive);
        };
        // TODO: Refactor this if possible
        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
        AdaptSearchComponent.prototype._changeActive = function (value) {
            this._isActive = i1.toBoolean(value);
            this.focusChanged.emit(this._isActive);
        };
        return AdaptSearchComponent;
    }(i2.AdaptRadarGenericDirective));
    AdaptSearchComponent.ɵfac = function AdaptSearchComponent_Factory(t) { return new (t || AdaptSearchComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef)); };
    AdaptSearchComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptSearchComponent, selectors: [["adapt-search"]], viewQuery: function AdaptSearchComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$9, 5);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.search = _t.first);
            }
        }, hostBindings: function AdaptSearchComponent_HostBindings(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵlistener("click", function AdaptSearchComponent_click_HostBindingHandler($event) { return ctx.onClick($event); });
            }
        }, inputs: { placeholder: "placeholder", btnClearText: "btnClearText", btnSearchText: "btnSearchText", label: "label", debounceTime: "debounceTime", id: "id", triggerableSearch: "triggerableSearch", size: "size", explicitSearchBtn: "explicitSearchBtn", searchValue: "searchValue", initialAlign: "initialAlign" }, outputs: { valueChanged: "valueChanged", focusChanged: "focusChanged" }, features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 5, vars: 2, consts: [["class", "adapt-search", 3, "ngClass", 4, "ngIf"], ["class", "adapt-search-triggerable", 3, "ngClass", 4, "ngIf"], [1, "adapt-search", 3, "ngClass"], [1, "adapt-search-icon", "d-icon-search"], [1, "adapt-search-field-wrapper"], [1, "adapt-search-field-layout", "adapt-search-field-ellipsis", 3, "for"], [3, "ngClass"], [2, "visibility", "hidden"], ["type", "search", 1, "adapt-search-field", "adapt-search-field-ellipsis", 3, "id", "ngModel", "placeholder", "ngModelChange", "blur", "focus"], ["search", ""], ["type", "button", 1, "adapt-search-clear", "d-icon-cross_adapt", "btn", "btn-link", 3, "ngClass", "click"], [1, "sr-only"], [1, "adapt-search-triggerable", 3, "ngClass"], [1, "input-group", "flex-nowrap"], [2, "position", "relative", "width", "100%"], ["type", "search", 1, "form-control", "adapt-search-field-ellipsis", 3, "id", "ngModel", "placeholder", "ngModelChange", "blur", "focus", "keyup.enter"], [1, "input-group-append"], ["adapt-button", "", "btn-type", "secondary", "type", "button", 3, "adaptRadarDisableEventSending", "ngClass", "size", "click"], ["class", "d-icon-search", 4, "ngIf"], [1, "d-icon-search"]], template: function AdaptSearchComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵtext(0, "\n    ");
                i0__namespace.ɵɵtemplate(1, AdaptSearchComponent_div_1_Template, 25, 17, "div", 0);
                i0__namespace.ɵɵtext(2, "\n\n    ");
                i0__namespace.ɵɵtemplate(3, AdaptSearchComponent_div_3_Template, 28, 23, "div", 1);
                i0__namespace.ɵɵtext(4, "\n  ");
            }
            if (rf & 2) {
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("ngIf", !ctx.triggerableSearch);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.triggerableSearch);
            }
        }, directives: [i3__namespace.NgIf, i3__namespace.NgClass, i1__namespace.AdaptDragonInputHandlerDirective, i6__namespace.DefaultValueAccessor, i6__namespace.NgControlStatus, i6__namespace.NgModel, i1__namespace.AdaptButtonComponent], encapsulation: 2 });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptSearchComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-search',
                        template: "\n    <div *ngIf=\"!triggerableSearch\" class=\"adapt-search\"\n         [ngClass]=\"{'adapt-search-active': isActive, 'adapt-search-dirty': canClear || initialAlign === 'left'}\">\n      <div class=\"adapt-search-icon d-icon-search\"></div>\n      <div class=\"adapt-search-field-wrapper\">\n        <label class=\"adapt-search-field-layout adapt-search-field-ellipsis\" for=\"{{id}}\">\n          <span [ngClass]=\"{'sr-only': label || placeholder}\">{{label || placeholder}}</span>\n          <span style=\"visibility: hidden\">{{placeholder}}</span>\n        </label>\n        <input #search class=\"adapt-search-field adapt-search-field-ellipsis\"\n               type=\"search\"\n               [id]=\"id\"\n               [(ngModel)]=\"value\"\n               [placeholder]=\"placeholder\"\n               (blur)=\"onBlur()\"\n               (focus)=\"onFocus()\"/>\n      </div>\n      <button class=\"adapt-search-clear d-icon-cross_adapt btn btn-link\"\n              (click)=\"clear()\"\n              [ngClass]=\"{'adapt-search-clear-visible': canClear}\"\n              type=\"button\">\n        <span class=\"sr-only\">{{btnClearText}}</span>\n      </button>\n    </div>\n\n    <div *ngIf=\"triggerableSearch\" class=\"adapt-search-triggerable\"\n         [ngClass]=\"{'adapt-search-dirty': canClear || initialAlign === 'left'}\">\n      <div class=\"input-group flex-nowrap\">\n        <div style=\"position: relative; width: 100%;\">\n          <input class=\"form-control adapt-search-field-ellipsis\"\n                 [class.form-control-sm]=\"size === 'small'\"\n                 [class.form-control-lg]=\"size === 'large'\"\n                 type=\"search\"\n                 #search\n                 [id]=\"id\"\n                 [(ngModel)]=\"value\"\n                 [placeholder]=\"placeholder\"\n                 (blur)=\"onBlur()\"\n                 (focus)=\"onFocus()\"\n                 (keyup.enter)=\"setValue()\"/>\n          <button class=\"adapt-search-clear d-icon-cross_adapt btn btn-link\"\n                  (click)=\"clear()\"\n                  [ngClass]=\"{'adapt-search-clear-visible': canClear}\"\n                  type=\"button\">\n            <span class=\"sr-only\">{{btnClearText}}</span>\n          </button>\n        </div>\n        <div class=\"input-group-append\">\n          <button adapt-button\n                  [adaptRadarDisableEventSending]=\"true\"\n                  btn-type=\"secondary\"\n                  [ngClass]=\"[explicitSearchBtn ? 'explicit-search-btn' : 'adapt-search-button']\"\n                  (click)=\"setValue()\"\n                  [size]=\"size\"\n                  type=\"button\">\n            <span *ngIf=\"!explicitSearchBtn\" class=\"d-icon-search\"></span>\n            <span [class.sr-only]=\"!explicitSearchBtn\">{{ btnSearchText }}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  ",
                        encapsulation: i0.ViewEncapsulation.None
                    }]
            }], function () { return [{ type: i1__namespace.AdaptTranslateService }, { type: i2__namespace.AdaptRadarService }, { type: i0__namespace.ElementRef }]; }, { search: [{
                    type: i0.ViewChild,
                    args: ['search', { static: false }]
                }], placeholder: [{
                    type: i0.Input
                }], btnClearText: [{
                    type: i0.Input
                }], btnSearchText: [{
                    type: i0.Input
                }], label: [{
                    type: i0.Input
                }], debounceTime: [{
                    type: i0.Input
                }], id: [{
                    type: i0.Input
                }], triggerableSearch: [{
                    type: i0.Input
                }], size: [{
                    type: i0.Input
                }], explicitSearchBtn: [{
                    type: i0.Input
                }], searchValue: [{
                    type: i0.Input
                }], initialAlign: [{
                    type: i0.Input
                }], valueChanged: [{
                    type: i0.Output
                }], focusChanged: [{
                    type: i0.Output
                }], onClick: [{
                    type: i0.HostListener,
                    args: ['click', ['$event']]
                }] });
    })();

    var AdaptSearchModule = /** @class */ (function () {
        function AdaptSearchModule() {
        }
        return AdaptSearchModule;
    }());
    AdaptSearchModule.ɵfac = function AdaptSearchModule_Factory(t) { return new (t || AdaptSearchModule)(); };
    AdaptSearchModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptSearchModule });
    AdaptSearchModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[i3.CommonModule, i6.FormsModule, i1.AdaptDragonInputHandlerModule, i1.AdaptButtonModule]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptSearchModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [i3.CommonModule, i6.FormsModule, i1.AdaptDragonInputHandlerModule, i1.AdaptButtonModule],
                        declarations: [AdaptSearchComponent],
                        exports: [AdaptSearchComponent]
                    }]
            }], null, null);
    })();
    (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptSearchModule, { declarations: [AdaptSearchComponent], imports: [i3.CommonModule, i6.FormsModule, i1.AdaptDragonInputHandlerModule, i1.AdaptButtonModule], exports: [AdaptSearchComponent] }); })();

    var _c0$8 = ["button"];
    function AdaptTimeSlotComponent_div_2_span_5_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "span", 7);
        }
    }
    function AdaptTimeSlotComponent_div_2_adapt_icon_7_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-icon", 8);
        }
        if (rf & 2) {
            var ctx_r3 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", ctx_r3.tooltipIcon)("adaptTooltip", ctx_r3.tooltipText);
        }
    }
    function AdaptTimeSlotComponent_div_2_adapt_icon_9_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-icon", 9);
        }
        if (rf & 2) {
            var ctx_r4 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵproperty("name", ctx_r4.popoverIcon)("adaptRadarDisableEventSending", true)("placement", ctx_r4.popoverPlacement)("adaptPopover", ctx_r4.popoverContent)("triggers", ctx_r4.popoverTriggers);
        }
    }
    function AdaptTimeSlotComponent_div_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 3);
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵelementStart(2, "span");
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n    ");
            i0__namespace.ɵɵtemplate(5, AdaptTimeSlotComponent_div_2_span_5_Template, 1, 0, "span", 4);
            i0__namespace.ɵɵtext(6, "\n    ");
            i0__namespace.ɵɵtemplate(7, AdaptTimeSlotComponent_div_2_adapt_icon_7_Template, 1, 3, "adapt-icon", 5);
            i0__namespace.ɵɵtext(8, "\n    ");
            i0__namespace.ɵɵtemplate(9, AdaptTimeSlotComponent_div_2_adapt_icon_9_Template, 1, 5, "adapt-icon", 6);
            i0__namespace.ɵɵtext(10, "\n  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r0 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r0.label);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r0.tooltipIcon || ctx_r0.popoverIcon);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r0.tooltipIcon && !ctx_r0.popoverIcon);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r0.popoverIcon);
        }
    }
    function AdaptTimeSlotComponent_div_4_button_2_Template(rf, ctx) {
        if (rf & 1) {
            var _r10_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 12, 13);
            i0__namespace.ɵɵlistener("click", function AdaptTimeSlotComponent_div_4_button_2_Template_button_click_0_listener() { var restoredCtx = i0__namespace.ɵɵrestoreView(_r10_1); var i_r7 = restoredCtx.index; var ctx_r9 = i0__namespace.ɵɵnextContext(2); return ctx_r9.isSelected(i_r7); });
            i0__namespace.ɵɵtext(2);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var s_r6 = ctx.$implicit;
            var i_r7 = ctx.index;
            var ctx_r5 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵclassProp("active", ctx_r5.selectedSlot !== null && ctx_r5.selectedSlot === i_r7);
            i0__namespace.ɵɵproperty("@slotsAnimation", undefined);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate1("\n      ", s_r6, "\n    ");
        }
    }
    function AdaptTimeSlotComponent_div_4_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 10);
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵtemplate(2, AdaptTimeSlotComponent_div_4_button_2_Template, 3, 4, "button", 11);
            i0__namespace.ɵɵtext(3, "\n  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngForOf", ctx_r1.slot);
        }
    }
    var AdaptTimeSlotComponent = /** @class */ (function (_super) {
        __extends(AdaptTimeSlotComponent, _super);
        function AdaptTimeSlotComponent(_renderer, ts, _ngZone, _adaptRadarService, _elem) {
            var _this = _super.call(this, _adaptRadarService, _elem, i1.AdaptRadarAngularCustomEventName.AdaptTimeSlot) || this;
            _this._renderer = _renderer;
            _this.ts = ts;
            _this._ngZone = _ngZone;
            _this.popoverPlacement = 'top';
            _this.popoverTriggers = 'click';
            // TODO: Refactor this if possible
            /* eslint-disable-next-line @typescript-eslint/no-explicit-any, @angular-eslint/no-output-rename */
            _this.selectedSlotChanged = new i0.EventEmitter();
            // TODO: Refactor this if possible
            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
            _this._slot = [];
            _this._selectedSlot = null;
            var translation = ts.getCurrentLanguage();
            _this._label = translation['adapt.timeSlot.available'];
            return _this;
        }
        Object.defineProperty(AdaptTimeSlotComponent.prototype, "label", {
            get: function () {
                return this._label;
            },
            set: function (v) {
                this._label = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTimeSlotComponent.prototype, "slot", {
            // TODO: Refactor this if possible
            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
            get: function () {
                return this._slot;
            },
            // TODO: Refactor this if possible
            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
            set: function (v) {
                this._slot = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTimeSlotComponent.prototype, "selectedSlot", {
            // TODO: Refactor this if possible
            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
            get: function () {
                return this._selectedSlot;
            },
            // TODO: Refactor this if possible
            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
            set: function (slot) {
                this._selectedSlot = i1.toNumber(slot);
            },
            enumerable: false,
            configurable: true
        });
        AdaptTimeSlotComponent.prototype.isSelected = function (index) {
            if (this.selectedSlot === index) {
                this.selectedSlot = null;
                this.selectedSlotChanged.emit({ index: null, slot: null });
            }
            else {
                this.selectedSlot = index;
                this.selectedSlotChanged.emit({ index: this.selectedSlot, slot: this.slot[this.selectedSlot] });
            }
        };
        AdaptTimeSlotComponent.prototype.ngAfterViewInit = function () {
            _super.prototype.ngAfterViewInit.call(this);
            this._setSlotMaxWidth();
        };
        AdaptTimeSlotComponent.prototype.ngOnChanges = function (changes) {
            var _this = this;
            if (changes.slot) {
                this._ngZone.onStable
                    .pipe(operators.take(1))
                    .subscribe(function () {
                    _this._setSlotMaxWidth();
                });
            }
        };
        AdaptTimeSlotComponent.prototype._setSlotMaxWidth = function () {
            var _this = this;
            var btn = this.button.toArray();
            if (btn) {
                var arr = btn.map(function (item) { return item.nativeElement.clientWidth; });
                var max_1 = Math.round(Math.max.apply(Math, __spreadArray([], __read(arr))));
                btn.map(function (_) { return _this._renderer.setStyle(_.nativeElement, 'width', max_1 + "px"); });
            }
        };
        return AdaptTimeSlotComponent;
    }(i2.AdaptRadarGenericDirective));
    AdaptTimeSlotComponent.ɵfac = function AdaptTimeSlotComponent_Factory(t) { return new (t || AdaptTimeSlotComponent)(i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i0__namespace.NgZone), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef)); };
    AdaptTimeSlotComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptTimeSlotComponent, selectors: [["adapt-time-slot"]], viewQuery: function AdaptTimeSlotComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$8, 5);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.button = _t);
            }
        }, inputs: { tooltipIcon: "tooltipIcon", tooltipText: "tooltipText", popoverIcon: "popoverIcon", popoverPlacement: "popoverPlacement", popoverTriggers: "popoverTriggers", popoverContent: "popoverContent", label: "label", slot: "slot", selectedSlot: "selectedSlot" }, outputs: { selectedSlotChanged: "selected-slot-changed" }, features: [i0__namespace.ɵɵInheritDefinitionFeature, i0__namespace.ɵɵNgOnChangesFeature], decls: 7, vars: 2, consts: [[1, "a-slot"], ["class", "a-slot__label form-control-label", 4, "ngIf"], ["class", "a-slot__list", 4, "ngIf"], [1, "a-slot__label", "form-control-label"], ["class", "icon-space", 4, "ngIf"], ["placement", "top", 3, "adaptRadarDisableEventSending", "name", "adaptTooltip", 4, "ngIf"], [3, "name", "adaptRadarDisableEventSending", "placement", "adaptPopover", "triggers", 4, "ngIf"], [1, "icon-space"], ["placement", "top", 3, "adaptRadarDisableEventSending", "name", "adaptTooltip"], [3, "name", "adaptRadarDisableEventSending", "placement", "adaptPopover", "triggers"], [1, "a-slot__list"], ["type", "button", "role", "button", "tabindex", "0", "aria-disabled", "false", "class", "btn btn-secondary btn-sm", 3, "active", "click", 4, "ngFor", "ngForOf"], ["type", "button", "role", "button", "tabindex", "0", "aria-disabled", "false", 1, "btn", "btn-secondary", "btn-sm", 3, "click"], ["button", ""]], template: function AdaptTimeSlotComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelementStart(0, "div", 0);
                i0__namespace.ɵɵtext(1, "\n  ");
                i0__namespace.ɵɵtemplate(2, AdaptTimeSlotComponent_div_2_Template, 11, 4, "div", 1);
                i0__namespace.ɵɵtext(3, "\n\n  ");
                i0__namespace.ɵɵtemplate(4, AdaptTimeSlotComponent_div_4_Template, 4, 1, "div", 2);
                i0__namespace.ɵɵtext(5, "\n");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(6, "\n");
            }
            if (rf & 2) {
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.label !== "");
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.slot && ctx.slot.length > 0);
            }
        }, directives: [i3__namespace.NgIf, i1__namespace.AdaptIconComponent, i1__namespace.AdaptTooltipDirective, i1__namespace.AdaptPopoverDirective, i3__namespace.NgForOf], encapsulation: 2, data: { animation: [
                i1$1.trigger('slotsAnimation', [
                    i1$1.transition('void => *', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.opacity, {
                            params: {
                                duration: i1.ANIMATION_DURATION.medium
                            }
                        })
                    ])
                ])
            ] } });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptTimeSlotComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-time-slot',
                        templateUrl: './time-slot.component.html',
                        encapsulation: i0.ViewEncapsulation.None,
                        animations: [
                            i1$1.trigger('slotsAnimation', [
                                i1$1.transition('void => *', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.opacity, {
                                        params: {
                                            duration: i1.ANIMATION_DURATION.medium
                                        }
                                    })
                                ])
                            ])
                        ]
                    }]
            }], function () { return [{ type: i0__namespace.Renderer2 }, { type: i1__namespace.AdaptTranslateService }, { type: i0__namespace.NgZone }, { type: i2__namespace.AdaptRadarService }, { type: i0__namespace.ElementRef }]; }, { tooltipIcon: [{
                    type: i0.Input
                }], tooltipText: [{
                    type: i0.Input
                }], popoverIcon: [{
                    type: i0.Input
                }], popoverPlacement: [{
                    type: i0.Input
                }], popoverTriggers: [{
                    type: i0.Input
                }], popoverContent: [{
                    type: i0.Input
                }], selectedSlotChanged: [{
                    type: i0.Output,
                    args: ['selected-slot-changed']
                }], button: [{
                    type: i0.ViewChildren,
                    args: ['button']
                }], label: [{
                    type: i0.Input
                }], slot: [{
                    type: i0.Input
                }], selectedSlot: [{
                    type: i0.Input
                }] });
    })();

    var AdaptTimeSlotModule = /** @class */ (function () {
        function AdaptTimeSlotModule() {
        }
        return AdaptTimeSlotModule;
    }());
    AdaptTimeSlotModule.ɵfac = function AdaptTimeSlotModule_Factory(t) { return new (t || AdaptTimeSlotModule)(); };
    AdaptTimeSlotModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptTimeSlotModule });
    AdaptTimeSlotModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[i3.CommonModule, i1.AdaptButtonModule, i1.AdaptIconModule, i1.AdaptTooltipModule, i1.AdaptPopoverModule.forRoot()]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptTimeSlotModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [i3.CommonModule, i1.AdaptButtonModule, i1.AdaptIconModule, i1.AdaptTooltipModule, i1.AdaptPopoverModule.forRoot()],
                        exports: [AdaptTimeSlotComponent],
                        declarations: [AdaptTimeSlotComponent]
                    }]
            }], null, null);
    })();
    (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptTimeSlotModule, { declarations: [AdaptTimeSlotComponent], imports: [i3.CommonModule, i1.AdaptButtonModule, i1.AdaptIconModule, i1.AdaptTooltipModule, i1__namespace.AdaptPopoverModule], exports: [AdaptTimeSlotComponent] }); })();

    function AdaptCheckbox2Component_ng_container_18_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵelement(2, "span", 11);
            i0__namespace.ɵɵtext(3, "\n          ");
            i0__namespace.ɵɵelementStart(4, "span", 12);
            i0__namespace.ɵɵtext(5);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n        ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(5);
            i0__namespace.ɵɵtextInterpolate(ctx_r1.context.requiredLabel);
        }
    }
    function AdaptCheckbox2Component_span_23_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "span", 13);
        }
    }
    function AdaptCheckbox2Component_adapt_icon_25_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-icon", 14);
        }
        if (rf & 2) {
            var ctx_r3 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵpropertyInterpolate("adaptTooltip", ctx_r3.context.tooltipText);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", ctx_r3.context.tooltipIconCls);
        }
    }
    function AdaptCheckbox2Component_adapt_icon_27_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-icon", 15);
        }
        if (rf & 2) {
            var ctx_r4 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("name", ctx_r4.context.popoverIcon)("adaptRadarDisableEventSending", true)("placement", ctx_r4.context.popoverPlacement)("adaptPopover", ctx_r4.context.popoverContent)("triggers", ctx_r4.context.popoverTriggers);
        }
    }
    function AdaptCheckbox2Component_div_32_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div");
            i0__namespace.ɵɵtext(1, "\n  ");
            i0__namespace.ɵɵelementStart(2, "p", 16);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r5 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("@validationFeedbackAnimation", undefined);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r5.displayMessage);
        }
    }
    var _c0$7 = [[["", 8, "checkbox-before"]], [["", 8, "checkbox-after"]]];
    var _c1$7 = function (a0) { return { "checkbox__item_no-label": a0 }; };
    var _c2$6 = function (a0) { return { "sr-only": a0 }; };
    var _c3$4 = [".checkbox-before", ".checkbox-after"];
    var noop$2 = function () {
        return;
    };
    var nextUniqueId$2 = 0;
    var AdaptCheckbox2Component = /** @class */ (function (_super) {
        __extends(AdaptCheckbox2Component, _super);
        function AdaptCheckbox2Component(injector, _element, _renderer, _changeDetectorRef, ts, _adaptRadarService, _entityName) {
            var _this = _super.call(this, injector, ts, _adaptRadarService, _element, _entityName ? _entityName : i1.AdaptRadarAngularCustomEventName.AdaptCheckbox2) || this;
            _this._element = _element;
            _this._renderer = _renderer;
            _this._changeDetectorRef = _changeDetectorRef;
            _this.context = _this;
            /**
             * An unique id for each checkbox/switcher
             */
            _this._uniqueId = "adapt-checkbox-" + ++nextUniqueId$2;
            _this._label = '';
            _this.class = ''; // override the standard class attr with a new one
            /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */
            _this.id = _this._uniqueId;
            /** Name value will be applied to the input element if present */
            _this.name = null;
            /** The tabindex attribute of the native input element */
            _this.tabindex = null;
            _this.stopPropagation = true;
            /**
             * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will
             * take precedence so this may be omitted.
             */
            // eslint-disable-next-line @typescript-eslint/typedef
            _this.ariaLabel = '';
            /**
             * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element
             */
            _this.ariaLabelledby = null;
            /**
             * Control [aria-describedby] attribute text
             */
            _this.ariaDescribedBy = null;
            /** the displayMessage attribute allows to show the additional info for the user */
            _this.displayMessage = 'Please fill out this field';
            /** the toggleMessage attribute will toggle the additional messages */
            _this.toggleMessage = false;
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.focus = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.blur = new i0.EventEmitter();
            /** Event emitted when the switcher value changes. */
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.change = new i0.EventEmitter();
            /** Event emitted when the checkbox's `indeterminate` value changes. */
            _this.indeterminateChange = new i0.EventEmitter();
            _this._onTouchedCallback = noop$2;
            _this._onChangeCallback = noop$2;
            /**
             * Private variables of checkbox/switcher component
             */
            _this._checked = false;
            /**
             * An indeterminate state of checkbox component - by default is false;
             */
            _this._indeterminate = false;
            _this._el = _element.nativeElement;
            return _this;
        }
        Object.defineProperty(AdaptCheckbox2Component.prototype, "hostClasses", {
            get: function () {
                return [
                    this.class,
                    this.mainCls,
                    'checkbox',
                    this.readonly ? 'readonly' : '',
                ].join(' ');
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptCheckbox2Component.prototype, "checked", {
            /** The input/switcher element's value. */
            get: function () {
                return this._checked;
            },
            set: function (checked) {
                this._updateCheckedValue(checked, false);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptCheckbox2Component.prototype, "indeterminate", {
            get: function () {
                return this._indeterminate;
            },
            set: function (indeterminate) {
                var changed = indeterminate !== this._indeterminate;
                this._indeterminate = indeterminate;
                if (changed) {
                    this.indeterminateChange.emit(this._indeterminate);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptCheckbox2Component.prototype, "inputId", {
            get: function () {
                return (this.id || this._uniqueId) + "-input";
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptCheckbox2Component.prototype, "nativeElement", {
            get: function () {
                return this._element.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptCheckbox2Component.prototype, "label", {
            /**
             * The label text of the checkbox component
             */
            get: function () {
                return this._label;
            },
            set: function (v) {
                this._label = v;
            },
            enumerable: false,
            configurable: true
        });
        AdaptCheckbox2Component.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
        };
        AdaptCheckbox2Component.prototype.validate = function () {
            return null;
        };
        /**
         *
         * @returns "true" | "false" | "mixed"
         */
        AdaptCheckbox2Component.prototype._getAriaChecked = function () {
            return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');
        };
        /**
         * interface ControlValueAccessor
         * writeValue(obj: any): void
         */
        AdaptCheckbox2Component.prototype.writeValue = function (checked) {
            this._updateCheckedValue(!!checked, true);
        };
        /**
         * interface ControlValueAccessor
         * registerOnChange(fn: any): void
         */
        AdaptCheckbox2Component.prototype.registerOnChange = function (fn) {
            this._onChangeCallback = fn;
        };
        /**
         * interface ControlValueAccessor
         * registerOnTouched(fn: any): void
         */
        AdaptCheckbox2Component.prototype.registerOnTouched = function (fn) {
            this._onTouchedCallback = fn;
        };
        /**
         * interface ControlValueAccessor
         * setDisabledState(isDisabled: boolean)?: void
         */
        AdaptCheckbox2Component.prototype.setDisabledState = function (isDisabled) {
            this.disabled = isDisabled;
            i1.SafeCdr.markForCheck(this._changeDetectorRef);
        };
        /**
         * Set focus state of the input changes
         */
        AdaptCheckbox2Component.prototype.onFocus = function () {
            this._renderer.addClass(this._el, 'is-focused');
        };
        /**
         * Remove focus state of the input changes
         */
        AdaptCheckbox2Component.prototype.onBlur = function () {
            this._renderer.removeClass(this._el, 'is-focused');
            this._onTouchedCallback();
        };
        /**
         * Toggle the state of input element on user action
         */
        AdaptCheckbox2Component.prototype.onInputClick = function (e) {
            if (this.stopPropagation) {
                e.stopPropagation();
            }
            if (!(this.disabled || this.readonly)) {
                if (this.indeterminate) {
                    this.indeterminate = false;
                    this.indeterminateChange.emit(this.indeterminate);
                }
                this._toggle();
            }
            else {
                e.preventDefault();
            }
        };
        AdaptCheckbox2Component.prototype.onInteractionEvent = function (e) {
            // We always have to stop propagation on the change event.
            // Otherwise the change event, from the input element, will bubble up and
            // emit its event object to the `change` output.
            e.stopPropagation();
        };
        /**
         * Toggle checked/unchecked states in checkbox/switcher component
         */
        AdaptCheckbox2Component.prototype._toggle = function () {
            this.checked = !this.checked;
        };
        AdaptCheckbox2Component.prototype._updateCheckedValue = function (checked, fromOuterComponent) {
            if (checked !== this.checked) {
                this._checked = i1.toBoolean(checked);
                if (!fromOuterComponent) {
                    this.change.emit(checked);
                }
                this._onChangeCallback(checked);
                i1.SafeCdr.markForCheck(this._changeDetectorRef);
            }
        };
        return AdaptCheckbox2Component;
    }(i1.FormComponent));
    AdaptCheckbox2Component.ɵfac = function AdaptCheckbox2Component_Factory(t) { return new (t || AdaptCheckbox2Component)(i0__namespace.ɵɵdirectiveInject(i0__namespace.Injector), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(i0__namespace.ChangeDetectorRef), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptRadarAngularCustomEventName, 8)); };
    AdaptCheckbox2Component.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptCheckbox2Component, selectors: [["adapt-checkbox2"], ["div", "adapt-checkbox2", ""], ["adapt-checkbox"]], hostVars: 2, hostBindings: function AdaptCheckbox2Component_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵclassMap(ctx.hostClasses);
            }
        }, inputs: { class: "class", id: "id", name: "name", tabindex: "tabindex", stopPropagation: "stopPropagation", value: "value", ariaLabel: ["aria-label", "ariaLabel"], ariaLabelledby: ["aria-labelledby", "ariaLabelledby"], ariaDescribedBy: "ariaDescribedBy", displayMessage: "displayMessage", toggleMessage: "toggleMessage", indeterminate: "indeterminate", label: "label" }, outputs: { focus: "focus", blur: "blur", change: "change", indeterminateChange: "indeterminateChange" }, features: [i0__namespace.ɵɵProvidersFeature([
                i1.createFormControlValueAccessor(AdaptCheckbox2Component),
                i1.createFormControlValidator(AdaptCheckbox2Component)
            ]), i0__namespace.ɵɵInheritDefinitionFeature], ngContentSelectors: _c3$4, decls: 34, vars: 26, consts: [[1, "checkbox__label"], ["type", "checkbox", 1, "checkbox__input", 3, "id", "disabled", "readOnly", "checked", "required", "tabIndex", "indeterminate", "focus", "blur", "change", "click"], ["input", ""], [1, "checkbox__item", 3, "ngClass"], [1, "icon-indeterminate"], [1, "font-weight-normal", "form-control-label"], [3, "ngClass"], [4, "ngIf"], ["class", "icon-space", 4, "ngIf"], ["placement", "top", 3, "adaptRadarDisableEventSending", "name", "adaptTooltip", 4, "ngIf"], [3, "name", "adaptRadarDisableEventSending", "placement", "adaptPopover", "triggers", 4, "ngIf"], [1, "letter-space"], [1, "form-control-required"], [1, "icon-space"], ["placement", "top", 3, "adaptRadarDisableEventSending", "name", "adaptTooltip"], [3, "name", "adaptRadarDisableEventSending", "placement", "adaptPopover", "triggers"], [1, "form-control-feedback", "m-0", "pt-1", "pb-2", "adapt-counter-error"]], template: function AdaptCheckbox2Component_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵprojectionDef(_c0$7);
                i0__namespace.ɵɵprojection(0);
                i0__namespace.ɵɵtext(1, "\n\n");
                i0__namespace.ɵɵelementStart(2, "span", 0);
                i0__namespace.ɵɵtext(3, "\n  ");
                i0__namespace.ɵɵelementStart(4, "label");
                i0__namespace.ɵɵtext(5, "\n    ");
                i0__namespace.ɵɵelementStart(6, "input", 1, 2);
                i0__namespace.ɵɵlistener("focus", function AdaptCheckbox2Component_Template_input_focus_6_listener() { return ctx.onFocus(); })("blur", function AdaptCheckbox2Component_Template_input_blur_6_listener() { return ctx.onBlur(); })("change", function AdaptCheckbox2Component_Template_input_change_6_listener($event) { return ctx.onInteractionEvent($event); })("click", function AdaptCheckbox2Component_Template_input_click_6_listener($event) { return ctx.onInputClick($event); });
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(8, "\n\n    ");
                i0__namespace.ɵɵelementStart(9, "div", 3);
                i0__namespace.ɵɵtext(10, "\n      ");
                i0__namespace.ɵɵelement(11, "span", 4);
                i0__namespace.ɵɵtext(12, "\n      ");
                i0__namespace.ɵɵelementStart(13, "span", 5);
                i0__namespace.ɵɵtext(14, "\n        ");
                i0__namespace.ɵɵelementStart(15, "span", 6);
                i0__namespace.ɵɵtext(16);
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(17, "\n        ");
                i0__namespace.ɵɵtemplate(18, AdaptCheckbox2Component_ng_container_18_Template, 7, 1, "ng-container", 7);
                i0__namespace.ɵɵtext(19, "\n      ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(20, "\n    ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(21, "\n  ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(22, "\n\n  ");
                i0__namespace.ɵɵtemplate(23, AdaptCheckbox2Component_span_23_Template, 1, 0, "span", 8);
                i0__namespace.ɵɵtext(24, "\n\n  ");
                i0__namespace.ɵɵtemplate(25, AdaptCheckbox2Component_adapt_icon_25_Template, 1, 3, "adapt-icon", 9);
                i0__namespace.ɵɵtext(26, "\n\n\n  ");
                i0__namespace.ɵɵtemplate(27, AdaptCheckbox2Component_adapt_icon_27_Template, 1, 5, "adapt-icon", 10);
                i0__namespace.ɵɵtext(28, "\n");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(29, "\n\n");
                i0__namespace.ɵɵprojection(30, 1);
                i0__namespace.ɵɵtext(31, "\n\n");
                i0__namespace.ɵɵtemplate(32, AdaptCheckbox2Component_div_32_Template, 5, 2, "div", 7);
                i0__namespace.ɵɵtext(33, "\n\n\n");
            }
            if (rf & 2) {
                i0__namespace.ɵɵadvance(6);
                i0__namespace.ɵɵproperty("id", ctx.inputId)("disabled", ctx.context.disabled)("readOnly", ctx.context.readonly)("checked", ctx.checked)("required", ctx.context.required)("tabIndex", ctx.tabindex)("indeterminate", ctx.indeterminate);
                i0__namespace.ɵɵattribute("value", ctx.value)("name", ctx.context.name)("aria-readonly", ctx.readonly)("aria-label", ctx.ariaLabel)("aria-labelledby", ctx.ariaLabelledby)("aria-describedby", ctx.ariaDescribedBy)("aria-checked", ctx._getAriaChecked());
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction1(22, _c1$7, !ctx.context.label));
                i0__namespace.ɵɵadvance(6);
                i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction1(24, _c2$6, !ctx.context.label));
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵtextInterpolate(ctx.context.label);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.context.required);
                i0__namespace.ɵɵadvance(5);
                i0__namespace.ɵɵproperty("ngIf", ctx.context.tooltipIconCls || ctx.context.popoverIcon);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.context.tooltipIconCls && !ctx.context.popoverIcon);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.context.popoverIcon);
                i0__namespace.ɵɵadvance(5);
                i0__namespace.ɵɵproperty("ngIf", ctx.toggleMessage);
            }
        }, directives: [i3__namespace.NgClass, i3__namespace.NgIf, i1__namespace.AdaptIconComponent, i1__namespace.AdaptTooltipDirective, i1__namespace.AdaptPopoverDirective], styles: [".checkbox__item .adapt-icon { bottom: 0; }"], encapsulation: 2, data: { animation: [
                i1$1.trigger('validationFeedbackAnimation', [
                    i1$1.transition(':enter', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                    ]),
                    i1$1.transition(':leave', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                    ])
                ])
            ] }, changeDetection: 0 });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptCheckbox2Component, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-checkbox2, div[adapt-checkbox2], adapt-checkbox',
                        templateUrl: './checkbox2.component.html',
                        providers: [
                            i1.createFormControlValueAccessor(AdaptCheckbox2Component),
                            i1.createFormControlValidator(AdaptCheckbox2Component)
                        ],
                        styles: ['.checkbox__item .adapt-icon { bottom: 0; }'],
                        encapsulation: i0.ViewEncapsulation.None,
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        animations: [
                            i1$1.trigger('validationFeedbackAnimation', [
                                i1$1.transition(':enter', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                                ]),
                                i1$1.transition(':leave', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                                ])
                            ])
                        ]
                    }]
            }], function () {
            return [{ type: i0__namespace.Injector }, { type: i0__namespace.ElementRef }, { type: i0__namespace.Renderer2 }, { type: i0__namespace.ChangeDetectorRef }, { type: i1__namespace.AdaptTranslateService }, { type: i2__namespace.AdaptRadarService }, { type: i1__namespace.AdaptRadarAngularCustomEventName, decorators: [{
                            type: i0.Optional
                        }] }];
        }, { class: [{
                    type: i0.Input
                }], id: [{
                    type: i0.Input
                }], name: [{
                    type: i0.Input
                }], tabindex: [{
                    type: i0.Input
                }], stopPropagation: [{
                    type: i0.Input
                }], value: [{
                    type: i0.Input
                }], ariaLabel: [{
                    type: i0.Input,
                    args: ['aria-label']
                }], ariaLabelledby: [{
                    type: i0.Input,
                    args: ['aria-labelledby']
                }], ariaDescribedBy: [{
                    type: i0.Input
                }], displayMessage: [{
                    type: i0.Input
                }], toggleMessage: [{
                    type: i0.Input
                }], focus: [{
                    type: i0.Output
                }], blur: [{
                    type: i0.Output
                }], change: [{
                    type: i0.Output
                }], indeterminateChange: [{
                    type: i0.Output
                }], hostClasses: [{
                    type: i0.HostBinding,
                    args: ['class']
                }], indeterminate: [{
                    type: i0.Input
                }], label: [{
                    type: i0.Input
                }] });
    })();

    var AdaptCheckbox2Module = /** @class */ (function () {
        function AdaptCheckbox2Module() {
        }
        return AdaptCheckbox2Module;
    }());
    AdaptCheckbox2Module.ɵfac = function AdaptCheckbox2Module_Factory(t) { return new (t || AdaptCheckbox2Module)(); };
    AdaptCheckbox2Module.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptCheckbox2Module });
    AdaptCheckbox2Module.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[i6.FormsModule, i3.CommonModule, i1.AdaptIconModule, i1.AdaptTooltipModule, i1.AdaptPopoverModule.forRoot()]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptCheckbox2Module, [{
                type: i0.NgModule,
                args: [{
                        imports: [i6.FormsModule, i3.CommonModule, i1.AdaptIconModule, i1.AdaptTooltipModule, i1.AdaptPopoverModule.forRoot()],
                        exports: [AdaptCheckbox2Component],
                        declarations: [AdaptCheckbox2Component]
                    }]
            }], null, null);
    })();
    (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptCheckbox2Module, { declarations: [AdaptCheckbox2Component], imports: [i6.FormsModule, i3.CommonModule, i1.AdaptIconModule, i1.AdaptTooltipModule, i1__namespace.AdaptPopoverModule], exports: [AdaptCheckbox2Component] }); })();

    function AdaptSwitcherComponent_span_13_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span");
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r1.context.label);
        }
    }
    function AdaptSwitcherComponent_span_15_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "span", 11);
        }
    }
    function AdaptSwitcherComponent_span_17_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span", 12);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r3 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r3.context.requiredLabel);
        }
    }
    function AdaptSwitcherComponent_span_21_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "span", 13);
        }
    }
    function AdaptSwitcherComponent_adapt_icon_23_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-icon", 14);
        }
        if (rf & 2) {
            var ctx_r5 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵpropertyInterpolate("adaptTooltip", ctx_r5.context.tooltipText);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("ngClass", ctx_r5.labelPosition === "after" ? "m-start-1" : "m-end-1")("name", ctx_r5.context.tooltipIconCls);
        }
    }
    function AdaptSwitcherComponent_adapt_icon_25_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-icon", 15);
        }
        if (rf & 2) {
            var ctx_r6 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("name", ctx_r6.context.popoverIcon)("adaptRadarDisableEventSending", true)("ngClass", ctx_r6.labelPosition === "after" ? "m-start-1" : "m-end-1")("placement", ctx_r6.context.popoverPlacement)("adaptPopover", ctx_r6.context.popoverContent)("triggers", ctx_r6.context.popoverTriggers);
        }
    }
    var _c0$6 = [[["", 8, "switcher-before"]], [["", 8, "switcher-after"]]];
    var _c1$6 = [".switcher-before", ".switcher-after"];
    var nextUniqueId$1 = 0;
    var AdaptSwitcherComponent = /** @class */ (function (_super) {
        __extends(AdaptSwitcherComponent, _super);
        function AdaptSwitcherComponent(injector, element, renderer, changeDetectorRef, ts, _adaptRadarService) {
            var _this = _super.call(this, injector, element, renderer, changeDetectorRef, ts, _adaptRadarService, i1.AdaptRadarAngularCustomEventName.AdaptSwitcher) || this;
            _this.context = _this;
            _this._label = '';
            _this._uniqueId = "adapt-checkbox-" + ++nextUniqueId$1;
            _this.labelPosition = 'after';
            /**
             * sizes - lg and sm
             */
            _this.size = '';
            /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */
            _this.id = _this._uniqueId;
            /** Name value will be applied to the input element if present */
            _this.name = null;
            /** The tabindex attribute of the native input element */
            _this.tabindex = null;
            /**
             * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will
             * take precedence so this may be omitted.
             */
            _this.ariaLabel = '';
            /**
             * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element
             */
            _this.ariaLabelledby = null;
            _this.ariaDescribedBy = null;
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.focus = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.blur = new i0.EventEmitter();
            /** Event emitted when the switcher value changes. */
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.change = new i0.EventEmitter();
            return _this;
        }
        Object.defineProperty(AdaptSwitcherComponent.prototype, "hostClasses", {
            get: function () {
                return [
                    'switcher',
                    this.labelPosition === 'before' ? 'switcher__before' : ''
                ].join(' ');
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptSwitcherComponent.prototype, "inputId", {
            get: function () {
                return (this.id || this._uniqueId) + "-input";
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptSwitcherComponent.prototype, "label", {
            /**
             * The label text of the checkbox component
             */
            get: function () {
                return this._label;
            },
            set: function (v) {
                this._label = v;
            },
            enumerable: false,
            configurable: true
        });
        AdaptSwitcherComponent.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
        };
        AdaptSwitcherComponent.prototype.onInputClick = function (e) {
            _super.prototype.onInputClick.call(this, e);
        };
        return AdaptSwitcherComponent;
    }(AdaptCheckbox2Component));
    AdaptSwitcherComponent.ɵfac = function AdaptSwitcherComponent_Factory(t) { return new (t || AdaptSwitcherComponent)(i0__namespace.ɵɵdirectiveInject(i0__namespace.Injector), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(i0__namespace.ChangeDetectorRef), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService)); };
    AdaptSwitcherComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptSwitcherComponent, selectors: [["adapt-switcher"], ["div", "adapt-switcher", ""]], hostVars: 6, hostBindings: function AdaptSwitcherComponent_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵclassMap(ctx.hostClasses);
                i0__namespace.ɵɵclassProp("is-checked", ctx.context.checked)("is-disabled", ctx.context.disabled);
            }
        }, inputs: { labelPosition: "labelPosition", size: "size", hostClasses: "hostClasses", id: "id", name: "name", tabindex: "tabindex", label: "label", value: "value", ariaLabel: ["aria-label", "ariaLabel"], ariaLabelledby: ["aria-labelledby", "ariaLabelledby"], ariaDescribedBy: "ariaDescribedBy" }, outputs: { focus: "focus", blur: "blur", change: "change" }, features: [i0__namespace.ɵɵProvidersFeature([
                i1.createFormControlValueAccessor(AdaptSwitcherComponent),
                i1.createFormControlValidator(AdaptSwitcherComponent),
            ]), i0__namespace.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1$6, decls: 30, vars: 22, consts: [[3, "ngClass"], ["type", "checkbox", 3, "id", "disabled", "checked", "required", "tabIndex", "focus", "blur", "change", "click"], ["input", ""], [1, "switch__slider"], [1, "switch__item", "form-control-label", "font-weight-normal", 3, "ngClass"], [4, "ngIf"], ["class", "letter-space", 4, "ngIf"], ["class", "form-control-required", 4, "ngIf"], ["class", "icon-space", 4, "ngIf"], ["placement", "top", 3, "adaptRadarDisableEventSending", "ngClass", "name", "adaptTooltip", 4, "ngIf"], [3, "name", "adaptRadarDisableEventSending", "ngClass", "placement", "adaptPopover", "triggers", 4, "ngIf"], [1, "letter-space"], [1, "form-control-required"], [1, "icon-space"], ["placement", "top", 3, "adaptRadarDisableEventSending", "ngClass", "name", "adaptTooltip"], [3, "name", "adaptRadarDisableEventSending", "ngClass", "placement", "adaptPopover", "triggers"]], template: function AdaptSwitcherComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵprojectionDef(_c0$6);
                i0__namespace.ɵɵprojection(0);
                i0__namespace.ɵɵtext(1, "\n\n");
                i0__namespace.ɵɵelementStart(2, "div", 0);
                i0__namespace.ɵɵtext(3, "\n  ");
                i0__namespace.ɵɵelementStart(4, "label");
                i0__namespace.ɵɵtext(5, "\n    ");
                i0__namespace.ɵɵelementStart(6, "input", 1, 2);
                i0__namespace.ɵɵlistener("focus", function AdaptSwitcherComponent_Template_input_focus_6_listener() { return ctx.context.onFocus(); })("blur", function AdaptSwitcherComponent_Template_input_blur_6_listener() { return ctx.context.onBlur(); })("change", function AdaptSwitcherComponent_Template_input_change_6_listener($event) { return ctx.context.onInteractionEvent($event); })("click", function AdaptSwitcherComponent_Template_input_click_6_listener($event) { return ctx.context.onInputClick($event); });
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(8, "\n    ");
                i0__namespace.ɵɵelement(9, "span", 3);
                i0__namespace.ɵɵtext(10, "\n\n    ");
                i0__namespace.ɵɵelementStart(11, "span", 4);
                i0__namespace.ɵɵtext(12, "\n      ");
                i0__namespace.ɵɵtemplate(13, AdaptSwitcherComponent_span_13_Template, 2, 1, "span", 5);
                i0__namespace.ɵɵtext(14, "\n      ");
                i0__namespace.ɵɵtemplate(15, AdaptSwitcherComponent_span_15_Template, 1, 0, "span", 6);
                i0__namespace.ɵɵtext(16, "\n      ");
                i0__namespace.ɵɵtemplate(17, AdaptSwitcherComponent_span_17_Template, 2, 1, "span", 7);
                i0__namespace.ɵɵtext(18, "\n    ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(19, "\n\n  ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(20, "\n  ");
                i0__namespace.ɵɵtemplate(21, AdaptSwitcherComponent_span_21_Template, 1, 0, "span", 8);
                i0__namespace.ɵɵtext(22, "\n  ");
                i0__namespace.ɵɵtemplate(23, AdaptSwitcherComponent_adapt_icon_23_Template, 1, 4, "adapt-icon", 9);
                i0__namespace.ɵɵtext(24, "\n\n  ");
                i0__namespace.ɵɵtemplate(25, AdaptSwitcherComponent_adapt_icon_25_Template, 1, 6, "adapt-icon", 10);
                i0__namespace.ɵɵtext(26, "\n\n");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(27, "\n\n");
                i0__namespace.ɵɵprojection(28, 1);
                i0__namespace.ɵɵtext(29, "\n");
            }
            if (rf & 2) {
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵclassProp("readonly", ctx.context.readonly);
                i0__namespace.ɵɵproperty("ngClass", ctx.size ? "switch switch-" + ctx.size : "switch");
                i0__namespace.ɵɵadvance(4);
                i0__namespace.ɵɵproperty("id", ctx.context.inputId)("disabled", ctx.context.disabled)("checked", ctx.context.checked)("required", ctx.context.required)("tabIndex", ctx.context.tabindex);
                i0__namespace.ɵɵattribute("value", ctx.context.value)("name", ctx.context.name)("aria-label", ctx.context.ariaLabel || null)("aria-labelledby", ctx.context.ariaLabelledby)("aria-describedby", ctx.context.ariaDescribedBy || null)("aria-checked", ctx.context._getAriaChecked())("aria-required", ctx.context.required);
                i0__namespace.ɵɵadvance(5);
                i0__namespace.ɵɵproperty("ngClass", ctx.labelPosition === "after" ? "m-start-1-5" : "m-end-1-5");
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.context.label);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.required);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.context.required);
                i0__namespace.ɵɵadvance(4);
                i0__namespace.ɵɵproperty("ngIf", ctx.context.tooltipIconCls || ctx.context.popoverIcon);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.context.tooltipIconCls && !ctx.context.popoverIcon);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.context.popoverIcon);
            }
        }, directives: [i3__namespace.NgClass, i3__namespace.NgIf, i1__namespace.AdaptIconComponent, i1__namespace.AdaptTooltipDirective, i1__namespace.AdaptPopoverDirective], encapsulation: 2, changeDetection: 0 });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptSwitcherComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-switcher, div[adapt-switcher]',
                        providers: [
                            i1.createFormControlValueAccessor(AdaptSwitcherComponent),
                            i1.createFormControlValidator(AdaptSwitcherComponent),
                        ],
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: {
                            '[class.is-checked]': 'context.checked',
                            '[class.is-disabled]': 'context.disabled'
                        },
                        templateUrl: './switcher.component.html',
                        encapsulation: i0.ViewEncapsulation.None,
                        changeDetection: i0.ChangeDetectionStrategy.OnPush
                    }]
            }], function () { return [{ type: i0__namespace.Injector }, { type: i0__namespace.ElementRef }, { type: i0__namespace.Renderer2 }, { type: i0__namespace.ChangeDetectorRef }, { type: i1__namespace.AdaptTranslateService }, { type: i2__namespace.AdaptRadarService }]; }, { labelPosition: [{
                    type: i0.Input
                }], size: [{
                    type: i0.Input
                }], hostClasses: [{
                    type: i0.Input
                }, {
                    type: i0.HostBinding,
                    args: ['class']
                }], id: [{
                    type: i0.Input
                }], name: [{
                    type: i0.Input
                }], tabindex: [{
                    type: i0.Input
                }], label: [{
                    type: i0.Input
                }], value: [{
                    type: i0.Input
                }], ariaLabel: [{
                    type: i0.Input,
                    args: ['aria-label']
                }], ariaLabelledby: [{
                    type: i0.Input,
                    args: ['aria-labelledby']
                }], ariaDescribedBy: [{
                    type: i0.Input
                }], focus: [{
                    type: i0.Output
                }], blur: [{
                    type: i0.Output
                }], change: [{
                    type: i0.Output
                }] });
    })();

    var AdaptSwitcherModule = /** @class */ (function () {
        function AdaptSwitcherModule() {
        }
        return AdaptSwitcherModule;
    }());
    AdaptSwitcherModule.ɵfac = function AdaptSwitcherModule_Factory(t) { return new (t || AdaptSwitcherModule)(); };
    AdaptSwitcherModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptSwitcherModule });
    AdaptSwitcherModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[
                i6.FormsModule,
                i3.CommonModule,
                i1.AdaptIconModule,
                i1.AdaptTooltipModule,
                AdaptCheckbox2Module,
                i1.AdaptPopoverModule.forRoot()
            ]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptSwitcherModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i6.FormsModule,
                            i3.CommonModule,
                            i1.AdaptIconModule,
                            i1.AdaptTooltipModule,
                            AdaptCheckbox2Module,
                            i1.AdaptPopoverModule.forRoot()
                        ],
                        exports: [AdaptSwitcherComponent],
                        declarations: [AdaptSwitcherComponent]
                    }]
            }], null, null);
    })();
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptSwitcherModule, { declarations: [AdaptSwitcherComponent], imports: [i6.FormsModule,
                i3.CommonModule,
                i1.AdaptIconModule,
                i1.AdaptTooltipModule,
                AdaptCheckbox2Module, i1__namespace.AdaptPopoverModule], exports: [AdaptSwitcherComponent] });
    })();

    var _c0$5 = ["inlineList"];
    function AdaptSelectInlineComponent_adapt_rx_control_label_0_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-rx-control-label", 8);
        }
        if (rf & 2) {
            var ctx_r0 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("label", ctx_r0.label)("requiredLabel", ctx_r0.texts.requiredText)("showRequiredLabel", ctx_r0.required)("subLabel", ctx_r0.subLabel)("tooltip", ctx_r0.tooltipConfig);
        }
    }
    function AdaptSelectInlineComponent_div_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div");
            i0__namespace.ɵɵtext(1, "\n  ");
            i0__namespace.ɵɵelementStart(2, "p", 9);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("@validationFeedbackAnimation", undefined);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r1.displayMessage);
        }
    }
    function AdaptSelectInlineComponent_div_4_button_4_Template(rf, ctx) {
        if (rf & 1) {
            var _r9_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 13);
            i0__namespace.ɵɵlistener("click", function AdaptSelectInlineComponent_div_4_button_4_Template_button_click_0_listener($event) { i0__namespace.ɵɵrestoreView(_r9_1); var ctx_r8 = i0__namespace.ɵɵnextContext(2); return ctx_r8.clearSearchFilter($event); });
            i0__namespace.ɵɵtext(1, "\n  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            i0__namespace.ɵɵproperty("@searchAnim", undefined);
        }
    }
    function AdaptSelectInlineComponent_div_4_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 10);
            i0__namespace.ɵɵtext(1, "\n  ");
            i0__namespace.ɵɵelement(2, "input", 11);
            i0__namespace.ɵɵtext(3, "\n\n  ");
            i0__namespace.ɵɵtemplate(4, AdaptSelectInlineComponent_div_4_button_4_Template, 2, 1, "button", 12);
            i0__namespace.ɵɵtext(5, "\n");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r2 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵpropertyInterpolate("placeholder", ctx_r2.texts.searchPlaceholder);
            i0__namespace.ɵɵproperty("formControl", ctx_r2.searchFilterText);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r2.searchFilterText.value.length > 0);
        }
    }
    function AdaptSelectInlineComponent_div_9_div_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 16);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r10 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n      ", ctx_r10.getHeaderText(), "\n    ");
        }
    }
    function AdaptSelectInlineComponent_div_9_div_4_ng_container_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵelementStart(2, "span", 18);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n        ");
            i0__namespace.ɵɵelement(5, "adapt-custom-actions", 19);
            i0__namespace.ɵɵtext(6, "\n      ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r12 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("@openClose", ctx_r12.rtl ? ctx_r12.searchFilterText.value ? "showRTL" : "hideRTL" : ctx_r12.searchFilterText.value ? "show" : "hide");
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate2("\n            ", ctx_r12.texts.filteredTo, " ", ctx_r12.getFilteredItems().length, "\n        ");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("actions", ctx_r12.customActions);
        }
    }
    function AdaptSelectInlineComponent_div_9_div_4_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 17);
            i0__namespace.ɵɵtext(1, "\n      ");
            i0__namespace.ɵɵtemplate(2, AdaptSelectInlineComponent_div_9_div_4_ng_container_2_Template, 7, 4, "ng-container", 1);
            i0__namespace.ɵɵtext(3, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r11 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r11.displayedOptions && ctx_r11.displayedOptions.length !== 0 && (ctx_r11.settings.showCheckAll || ctx_r11.settings.showUncheckAll));
        }
    }
    function AdaptSelectInlineComponent_div_9_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div");
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵtemplate(2, AdaptSelectInlineComponent_div_9_div_2_Template, 2, 1, "div", 14);
            i0__namespace.ɵɵtext(3, "\n\n    ");
            i0__namespace.ɵɵtemplate(4, AdaptSelectInlineComponent_div_9_div_4_Template, 4, 1, "div", 15);
            i0__namespace.ɵɵtext(5, "\n  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r4 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r4.showHeader());
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !(ctx_r4.disabled || ctx_r4.readonly || ctx_r4.allOptionsDisabled()));
        }
    }
    function AdaptSelectInlineComponent_li_13_Template(rf, ctx) {
        if (rf & 1) {
            var _r17_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "li", 20);
            i0__namespace.ɵɵlistener("keydown.space", function AdaptSelectInlineComponent_li_13_Template_li_keydown_space_0_listener($event) { var restoredCtx = i0__namespace.ɵɵrestoreView(_r17_1); var option_r13 = restoredCtx.$implicit; var ctx_r16 = i0__namespace.ɵɵnextContext(); return ctx_r16.setSelected($event, option_r13); })("keyup.enter", function AdaptSelectInlineComponent_li_13_Template_li_keyup_enter_0_listener($event) { var restoredCtx = i0__namespace.ɵɵrestoreView(_r17_1); var option_r13 = restoredCtx.$implicit; var ctx_r18 = i0__namespace.ɵɵnextContext(); return ctx_r18.setSelected($event, option_r13); });
            i0__namespace.ɵɵtext(1, "\n      ");
            i0__namespace.ɵɵelementStart(2, "div", 21);
            i0__namespace.ɵɵtext(3, "\n        ");
            i0__namespace.ɵɵelementStart(4, "label", 22);
            i0__namespace.ɵɵtext(5, "\n          ");
            i0__namespace.ɵɵelementStart(6, "input", 23);
            i0__namespace.ɵɵlistener("click", function AdaptSelectInlineComponent_li_13_Template_input_click_6_listener($event) { var restoredCtx = i0__namespace.ɵɵrestoreView(_r17_1); var option_r13 = restoredCtx.$implicit; var ctx_r19 = i0__namespace.ɵɵnextContext(); return ctx_r19.setSelected($event, option_r13); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(7, "\n          ");
            i0__namespace.ɵɵelementStart(8, "span", 24, 25);
            i0__namespace.ɵɵtext(10);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(11, "\n        ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(12, "\n      ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(13, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var option_r13 = ctx.$implicit;
            var i_r14 = ctx.index;
            var ctx_r5 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("adaptFocusMonitor", option_r13.id);
            i0__namespace.ɵɵadvance(6);
            i0__namespace.ɵɵproperty("disabled", ctx_r5.isDisabled(option_r13))("checked", ctx_r5.isSelected(option_r13));
            i0__namespace.ɵɵattribute("data-testid", ctx_r5.testID + "_select_item_" + i_r14);
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵtextInterpolate(option_r13.name);
        }
    }
    function AdaptSelectInlineComponent_div_16_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 26);
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵelement(2, "adapt-empty-state", 27);
            i0__namespace.ɵɵtext(3, "\n  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r6 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("label", ctx_r6.texts.notFound);
        }
    }
    var _c1$5 = function (a0) { return { "a-select-inline__list_search-enabled": a0 }; };
    var _c2$5 = function (a0) { return { "height": a0 }; };
    /**
     * VALUE_ACCESSOR for the select inline
     */
    var SELECT_INLINE_VALUE_ACCESSOR = {
        provide: i6.NG_VALUE_ACCESSOR,
        useExisting: i0.forwardRef(function () { return AdaptSelectInlineComponent; }),
        multi: true
    };
    /** In a list menu 6 rows by default only visible - also it might be redefine on he devs end */
    var MENU_MAX_HEIGHT = 234;
    var AdaptSelectInlineComponent = /** @class */ (function (_super) {
        __extends(AdaptSelectInlineComponent, _super);
        function AdaptSelectInlineComponent(filterSearch, _renderer, detection, element, _focusHandle, _scrollService, _changeDetectorRef, _ngZone, _layerService, _router, _differs, _eventManager, dir, _resizeService, _injector, ts, _adaptRadarService) {
            var _this = _super.call(this, filterSearch, _renderer, detection, element, _focusHandle, _scrollService, _changeDetectorRef, _ngZone, _layerService, _router, _differs, _eventManager, dir, _resizeService, _injector, ts, _adaptRadarService, i1.AdaptRadarAngularCustomEventName.AdaptSelectInline) || this;
            _this.filterSearch = filterSearch;
            _this._renderer = _renderer;
            _this.detection = detection;
            _this.element = element;
            _this._focusHandle = _focusHandle;
            _this._scrollService = _scrollService;
            _this._changeDetectorRef = _changeDetectorRef;
            _this._ngZone = _ngZone;
            _this._router = _router;
            /**
             * Need to redefine the default setting due to new requirements
             */
            _this.defaultSettings = {
                pullRight: false,
                enableSearch: true,
                checkedStyle: 'checkbox',
                buttonClasses: '',
                selectionLimit: 0,
                closeOnSelect: false,
                autoUnselect: false,
                showCheckAll: true,
                showUncheckAll: true,
                showTooltip: false,
                dynamicTitleMaxItems: 1,
                maxHeight: ' ',
                showCheckedAll: false,
                hideLabel: false,
                cancelBtn: true,
                doneBtn: true,
                titleMobile: true,
                modelFormat: exports.SelectModelFormat.number
            };
            /**
             * Label icon with a tooltip or popover
             */
            _this.tooltipConfig = null;
            /* new error behave for the selection - by default false */
            _this.isErrorExist = false;
            // eslint-disable-next-line @angular-eslint/no-input-rename
            _this.menuHeight = MENU_MAX_HEIGHT;
            _this.simpleView = false;
            _this.single = false;
            return _this;
        }
        Object.defineProperty(AdaptSelectInlineComponent.prototype, "customActions", {
            get: function () {
                return [
                    {
                        name: this.searchFilterText.value ? this.texts.checkAllFilter : this.texts.checkAll,
                        visible: !this.isHiddenSelectFilteredButton(),
                        onClick: this.checkAll.bind(this)
                    },
                    {
                        name: this.searchFilterText.value ? this.texts.uncheckAllFilter : this.texts.uncheckAll,
                        visible: !this.isHiddenUncheckFilteredButton(),
                        onClick: this.uncheckAll.bind(this)
                    }
                ];
            },
            enumerable: false,
            configurable: true
        });
        AdaptSelectInlineComponent.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
            this.settings = Object.assign(Object.assign({}, this.defaultSettings), this.settings);
            this.texts = Object.assign(Object.assign({}, this.defaultTexts), this.texts);
            if (this.tooltipInputIcon && !this.popoverIcon) {
                this.tooltipConfig = {
                    iconName: this.tooltipInputIcon,
                    content: this.tooltipInputText,
                    placement: 'top',
                    popoverMode: false
                };
            }
            else if (this.popoverIcon) {
                this.tooltipConfig = {
                    iconName: this.popoverIcon,
                    content: this.popoverContent,
                    placement: this.popoverPlacement,
                    popoverMode: true,
                    popoverTriggers: this.popoverTriggers
                };
            }
        };
        AdaptSelectInlineComponent.prototype.trackByForOptions = function (index, option) {
            return option.id || index;
        };
        return AdaptSelectInlineComponent;
    }(AdaptSelectComponent));
    AdaptSelectInlineComponent.ɵfac = function AdaptSelectInlineComponent_Factory(t) { return new (t || AdaptSelectInlineComponent)(i0__namespace.ɵɵdirectiveInject(AdaptSelectSearchFilter), i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptDeviceDetectionService), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptFocusMonitorService), i0__namespace.ɵɵdirectiveInject(i1__namespace.ScrollManageService), i0__namespace.ɵɵdirectiveInject(i0__namespace.ChangeDetectorRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.NgZone), i0__namespace.ɵɵdirectiveInject(i1__namespace.LayerService), i0__namespace.ɵɵdirectiveInject(i3__namespace$1.Router, 8), i0__namespace.ɵɵdirectiveInject(i0__namespace.IterableDiffers), i0__namespace.ɵɵdirectiveInject(i4__namespace.EventManager), i0__namespace.ɵɵdirectiveInject(i2__namespace$1.Directionality), i0__namespace.ɵɵdirectiveInject(i1__namespace.ResizeService), i0__namespace.ɵɵdirectiveInject(i0__namespace.Injector), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService)); };
    AdaptSelectInlineComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptSelectInlineComponent, selectors: [["adapt-select-inline"], ["div", "select-inline", ""]], viewQuery: function AdaptSelectInlineComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$5, 7);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.inlineList = _t.first);
            }
        }, hostVars: 6, hostBindings: function AdaptSelectInlineComponent_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵclassProp("a-select-inline", true)("is-error", ctx.isErrorExist)("a-select-inline_simple-view", ctx.simpleView);
            }
        }, inputs: { isErrorExist: "isErrorExist", subLabel: ["sub-label", "subLabel"], menuHeight: ["menu-height", "menuHeight"], simpleView: "simpleView" }, features: [i0__namespace.ɵɵProvidersFeature([
                SELECT_INLINE_VALUE_ACCESSOR,
                AdaptSelectSearchFilter,
                i1.AdaptFocusMonitorService
            ]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 19, vars: 13, consts: [[3, "label", "requiredLabel", "showRequiredLabel", "subLabel", "tooltip", 4, "ngIf"], [4, "ngIf"], ["class", "a-select-inline__form form-group d-icon-search ", "tabindex", "-1", 4, "ngIf"], [1, "a-select-inline__list", 3, "ngClass", "ngStyle"], ["inlineList", ""], [1, "list-unstyled", "a-select-inline__list-items"], ["class", "a-select-inline__item focusable", "role", "option", "tabindex", "0", 3, "adaptFocusMonitor", "keydown.space", "keyup.enter", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["role", "presentation", "class", "a-select-inline__header is-helper-text", 4, "ngIf"], [3, "label", "requiredLabel", "showRequiredLabel", "subLabel", "tooltip"], [1, "form-control-feedback", "m-0", "pt-1", "pb-2"], ["tabindex", "-1", 1, "a-select-inline__form", "form-group", "d-icon-search"], ["type", "text", "adaptFocusMonitor", "", 1, "a-select-inline__input", "form-control", 3, "formControl", "placeholder"], ["type", "button", "class", "a-select-inline__close d-icon-cross_adapt", "adaptFocusMonitor", "", 3, "click", 4, "ngIf"], ["type", "button", "adaptFocusMonitor", "", 1, "a-select-inline__close", "d-icon-cross_adapt", 3, "click"], ["class", "dropdown-header", 4, "ngIf"], ["class", "select-inline__select-buttons", 4, "ngIf"], [1, "dropdown-header"], [1, "select-inline__select-buttons"], [1, "select-inline__counter"], [3, "actions"], ["role", "option", "tabindex", "0", 1, "a-select-inline__item", "focusable", 3, "adaptFocusMonitor", "keydown.space", "keyup.enter"], [1, "checkbox"], [1, "checkbox__label"], ["type", "checkbox", "tabindex", "-1", 1, "checkbox__input", 3, "disabled", "checked", "click"], [1, "checkbox__item"], ["dropdownItem", ""], ["role", "presentation", 1, "a-select-inline__header", "is-helper-text"], ["type", "search", 3, "adaptRadarDisableEventSending", "label"]], template: function AdaptSelectInlineComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵtemplate(0, AdaptSelectInlineComponent_adapt_rx_control_label_0_Template, 1, 5, "adapt-rx-control-label", 0);
                i0__namespace.ɵɵtext(1, "\n\n");
                i0__namespace.ɵɵtemplate(2, AdaptSelectInlineComponent_div_2_Template, 5, 2, "div", 1);
                i0__namespace.ɵɵtext(3, "\n\n");
                i0__namespace.ɵɵtemplate(4, AdaptSelectInlineComponent_div_4_Template, 6, 3, "div", 2);
                i0__namespace.ɵɵtext(5, "\n\n");
                i0__namespace.ɵɵelementStart(6, "div", 3, 4);
                i0__namespace.ɵɵtext(8, "\n  ");
                i0__namespace.ɵɵtemplate(9, AdaptSelectInlineComponent_div_9_Template, 6, 2, "div", 1);
                i0__namespace.ɵɵtext(10, "\n\n  ");
                i0__namespace.ɵɵelementStart(11, "ul", 5);
                i0__namespace.ɵɵtext(12, "\n    ");
                i0__namespace.ɵɵtemplate(13, AdaptSelectInlineComponent_li_13_Template, 14, 5, "li", 6);
                i0__namespace.ɵɵtext(14, "\n  ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(15, "\n\n  ");
                i0__namespace.ɵɵtemplate(16, AdaptSelectInlineComponent_div_16_Template, 4, 2, "div", 7);
                i0__namespace.ɵɵtext(17, "\n\n");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(18, "\n");
            }
            if (rf & 2) {
                i0__namespace.ɵɵproperty("ngIf", !ctx.settings.hideLabel);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.isErrorExist && ctx.displayMessage && ctx.displayMessage.length > 0);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.settings.enableSearch && !ctx.simpleView);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction1(9, _c1$5, ctx.settings.enableSearch))("ngStyle", i0__namespace.ɵɵpureFunction1(11, _c2$5, ctx.menuHeight + "px"));
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngIf", !ctx.simpleView);
                i0__namespace.ɵɵadvance(4);
                i0__namespace.ɵɵproperty("ngForOf", ctx.displayedOptions)("ngForTrackBy", ctx.trackByForOptions);
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngIf", ctx.displayedOptions && ctx.displayedOptions.length === 0);
            }
        }, directives: [i3__namespace.NgIf, i3__namespace.NgClass, i3__namespace.NgStyle, i3__namespace.NgForOf, i1__namespace.AdaptRxControlLabelComponent, i1__namespace.AdaptDragonInputHandlerDirective, i6__namespace.DefaultValueAccessor, i1__namespace.AdaptFocusMonitorDirective, i6__namespace.NgControlStatus, i6__namespace.FormControlDirective, i1__namespace.AdaptCustomActionsComponent, i1__namespace.AdaptEmptyStateComponent], styles: ["\n    .a-select-inline__list .dropdown-header {\n      padding: .875rem .875rem .1875rem;\n    }\n\n    .select-inline__select-buttons {\n      padding: 0 14px;\n    }\n\n    .select-inline__counter {\n      display: inline-flex;\n      overflow: hidden;\n      color: #959799;\n      white-space: nowrap;\n      opacity: 0;\n      align-self: center;\n    }\n  "], encapsulation: 2, data: { animation: [
                i1$1.trigger('validationFeedbackAnimation', [
                    i1$1.transition(':enter', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                    ]),
                    i1$1.transition(':leave', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                    ])
                ]),
                i1$1.trigger('validationFeedbackChangeAnimation', [
                    i1$1.transition('* => *', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.opacity)
                    ])
                ]),
                i1$1.trigger('searchAnim', [
                    i1$1.transition('void => *', [
                        i1$1.style({ visibility: 'hidden', opacity: 0 }),
                        i1$1.animate(".25s " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn, i1$1.style({ visibility: 'visible', opacity: .6 }))
                    ]),
                    i1$1.transition('* => void', [
                        i1$1.style({ visibility: 'visible', opacity: .6 }),
                        i1$1.animate(".25s " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ visibility: 'hidden', opacity: 0 }))
                    ])
                ]),
                i1$1.trigger('shadowAnimation', [
                    i1$1.transition('void => *', [
                        i1$1.style({ visibility: 'hidden', opacity: 0, height: 0 }),
                        i1$1.animate(".25s " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn, i1$1.style({ visibility: 'visible', opacity: 1, height: '*' }))
                    ]),
                    i1$1.transition('* => void', [
                        i1$1.style({ visibility: 'visible', opacity: 1, height: '*' }),
                        i1$1.animate(".25s " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ visibility: 'hidden', opacity: 0, height: 0 }))
                    ])
                ]),
                i1$1.trigger('openClose', [
                    i1$1.state('show', i1$1.style({
                        width: '*',
                        marginLeft: '0',
                        marginRight: '.875rem',
                        opacity: 1
                    })),
                    i1$1.state('hide', i1$1.style({
                        marginRight: '0',
                        width: '0px',
                        opacity: 0
                    })),
                    i1$1.transition('show => hide', [
                        i1$1.animate(i1.ANIMATION_DURATION.medium + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn)
                    ]),
                    i1$1.transition('hide => show', [
                        i1$1.animate(i1.ANIMATION_DURATION.medium + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut)
                    ]),
                    i1$1.state('showRTL', i1$1.style({
                        width: '*',
                        opacity: 1,
                        marginLeft: '.875rem',
                    })),
                    i1$1.state('hideRTL', i1$1.style({
                        marginLeft: '0',
                        width: '0px',
                        opacity: 0
                    })),
                    i1$1.transition('showRTL => hideRTL', [
                        i1$1.animate(i1.ANIMATION_DURATION.medium + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn)
                    ]),
                    i1$1.transition('hideRTL => showRTL', [
                        i1$1.animate(i1.ANIMATION_DURATION.medium + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut)
                    ]),
                ]),
            ] } });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptSelectInlineComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-select-inline, div[select-inline]',
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: {
                            '[class.a-select-inline]': 'true',
                            '[class.is-error]': 'isErrorExist'
                        },
                        templateUrl: './select-inline.component.html',
                        encapsulation: i0.ViewEncapsulation.None,
                        providers: [
                            SELECT_INLINE_VALUE_ACCESSOR,
                            AdaptSelectSearchFilter,
                            i1.AdaptFocusMonitorService
                        ],
                        animations: [
                            i1$1.trigger('validationFeedbackAnimation', [
                                i1$1.transition(':enter', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                                ]),
                                i1$1.transition(':leave', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                                ])
                            ]),
                            i1$1.trigger('validationFeedbackChangeAnimation', [
                                i1$1.transition('* => *', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.opacity)
                                ])
                            ]),
                            i1$1.trigger('searchAnim', [
                                i1$1.transition('void => *', [
                                    i1$1.style({ visibility: 'hidden', opacity: 0 }),
                                    i1$1.animate(".25s " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn, i1$1.style({ visibility: 'visible', opacity: .6 }))
                                ]),
                                i1$1.transition('* => void', [
                                    i1$1.style({ visibility: 'visible', opacity: .6 }),
                                    i1$1.animate(".25s " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ visibility: 'hidden', opacity: 0 }))
                                ])
                            ]),
                            i1$1.trigger('shadowAnimation', [
                                i1$1.transition('void => *', [
                                    i1$1.style({ visibility: 'hidden', opacity: 0, height: 0 }),
                                    i1$1.animate(".25s " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn, i1$1.style({ visibility: 'visible', opacity: 1, height: '*' }))
                                ]),
                                i1$1.transition('* => void', [
                                    i1$1.style({ visibility: 'visible', opacity: 1, height: '*' }),
                                    i1$1.animate(".25s " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut, i1$1.style({ visibility: 'hidden', opacity: 0, height: 0 }))
                                ])
                            ]),
                            i1$1.trigger('openClose', [
                                i1$1.state('show', i1$1.style({
                                    width: '*',
                                    marginLeft: '0',
                                    marginRight: '.875rem',
                                    opacity: 1
                                })),
                                i1$1.state('hide', i1$1.style({
                                    marginRight: '0',
                                    width: '0px',
                                    opacity: 0
                                })),
                                i1$1.transition('show => hide', [
                                    i1$1.animate(i1.ANIMATION_DURATION.medium + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn)
                                ]),
                                i1$1.transition('hide => show', [
                                    i1$1.animate(i1.ANIMATION_DURATION.medium + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut)
                                ]),
                                i1$1.state('showRTL', i1$1.style({
                                    width: '*',
                                    opacity: 1,
                                    marginLeft: '.875rem',
                                })),
                                i1$1.state('hideRTL', i1$1.style({
                                    marginLeft: '0',
                                    width: '0px',
                                    opacity: 0
                                })),
                                i1$1.transition('showRTL => hideRTL', [
                                    i1$1.animate(i1.ANIMATION_DURATION.medium + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionIn)
                                ]),
                                i1$1.transition('hideRTL => showRTL', [
                                    i1$1.animate(i1.ANIMATION_DURATION.medium + " " + i1.ANIMATION_TIMING_FUNCTION.base.transitionInOut)
                                ]),
                            ]),
                        ],
                        styles: ["\n    .a-select-inline__list .dropdown-header {\n      padding: .875rem .875rem .1875rem;\n    }\n\n    .select-inline__select-buttons {\n      padding: 0 14px;\n    }\n\n    .select-inline__counter {\n      display: inline-flex;\n      overflow: hidden;\n      color: #959799;\n      white-space: nowrap;\n      opacity: 0;\n      align-self: center;\n    }\n  "]
                    }]
            }], function () {
            return [{ type: AdaptSelectSearchFilter }, { type: i0__namespace.Renderer2 }, { type: i1__namespace.AdaptDeviceDetectionService }, { type: i0__namespace.ElementRef }, { type: i1__namespace.AdaptFocusMonitorService }, { type: i1__namespace.ScrollManageService }, { type: i0__namespace.ChangeDetectorRef }, { type: i0__namespace.NgZone }, { type: i1__namespace.LayerService }, { type: i3__namespace$1.Router, decorators: [{
                            type: i0.Optional
                        }] }, { type: i0__namespace.IterableDiffers }, { type: i4__namespace.EventManager }, { type: i2__namespace$1.Directionality }, { type: i1__namespace.ResizeService }, { type: i0__namespace.Injector }, { type: i1__namespace.AdaptTranslateService }, { type: i2__namespace.AdaptRadarService }];
        }, { isErrorExist: [{
                    type: i0.Input
                }], subLabel: [{
                    type: i0.Input,
                    args: ['sub-label']
                }], menuHeight: [{
                    type: i0.Input,
                    args: ['menu-height']
                }], simpleView: [{
                    type: i0.HostBinding,
                    args: ['class.a-select-inline_simple-view']
                }, {
                    type: i0.Input
                }], inlineList: [{
                    type: i0.ViewChild,
                    args: ['inlineList', { static: true }]
                }] });
    })();

    var AdaptSelectInlineModule = /** @class */ (function () {
        function AdaptSelectInlineModule() {
        }
        return AdaptSelectInlineModule;
    }());
    AdaptSelectInlineModule.ɵfac = function AdaptSelectInlineModule_Factory(t) { return new (t || AdaptSelectInlineModule)(); };
    AdaptSelectInlineModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptSelectInlineModule });
    AdaptSelectInlineModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[
                i3.CommonModule,
                i6.FormsModule,
                i6.FormsModule,
                i6.ReactiveFormsModule,
                i1.AdaptIconModule,
                i1.AdaptTooltipModule,
                i1.AdaptPopoverModule.forRoot(),
                i1.AdaptEmptyStateModule,
                AdaptSelectSearchFilterModule,
                i1.AdaptFocusMonitorDirectiveModule,
                i1.AdaptDragonInputHandlerModule,
                i1.AdaptRxLabelModule,
                i1.AdaptCustomActionsModule
            ]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptSelectInlineModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i3.CommonModule,
                            i6.FormsModule,
                            i6.FormsModule,
                            i6.ReactiveFormsModule,
                            i1.AdaptIconModule,
                            i1.AdaptTooltipModule,
                            i1.AdaptPopoverModule.forRoot(),
                            i1.AdaptEmptyStateModule,
                            AdaptSelectSearchFilterModule,
                            i1.AdaptFocusMonitorDirectiveModule,
                            i1.AdaptDragonInputHandlerModule,
                            i1.AdaptRxLabelModule,
                            i1.AdaptCustomActionsModule
                        ],
                        declarations: [AdaptSelectInlineComponent],
                        exports: [AdaptSelectInlineComponent]
                    }]
            }], null, null);
    })();
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptSelectInlineModule, { declarations: [AdaptSelectInlineComponent], imports: [i3.CommonModule,
                i6.FormsModule,
                i6.FormsModule,
                i6.ReactiveFormsModule,
                i1.AdaptIconModule,
                i1.AdaptTooltipModule, i1__namespace.AdaptPopoverModule, i1.AdaptEmptyStateModule,
                AdaptSelectSearchFilterModule,
                i1.AdaptFocusMonitorDirectiveModule,
                i1.AdaptDragonInputHandlerModule,
                i1.AdaptRxLabelModule,
                i1.AdaptCustomActionsModule], exports: [AdaptSelectInlineComponent] });
    })();

    var _c0$4 = ["input"];
    function AdaptRadioButtonComponent_ng_container_14_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵelement(2, "span", 7);
            i0__namespace.ɵɵtext(3, "\n        ");
            i0__namespace.ɵɵelementStart(4, "span", 8);
            i0__namespace.ɵɵtext(5);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n      ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(5);
            i0__namespace.ɵɵtextInterpolate(ctx_r1.context.requiredLabel);
        }
    }
    function AdaptRadioButtonComponent_adapt_icon_18_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "adapt-icon", 9);
            i0__namespace.ɵɵtext(1, "\n  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r2 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵpropertyInterpolate("adaptTooltip", ctx_r2.context.tooltipText);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("name", ctx_r2.context.tooltipIconCls);
        }
    }
    var _c1$4 = [[["", 8, "radio-before"]], [["", 8, "radio-after"]]];
    var _c2$4 = function (a0) { return { "is-focused": a0 }; };
    var _c3$3 = function (a0) { return { "radio__item_no-label": a0 }; };
    var _c4$2 = function (a0) { return { "sr-only": a0 }; };
    var _c5$2 = [".radio-before", ".radio-after"];
    var noop$1 = function () {
        return;
    };
    var nextUniqueId = 0;
    var AdaptRadioButtonComponent = /** @class */ (function (_super) {
        __extends(AdaptRadioButtonComponent, _super);
        function AdaptRadioButtonComponent(injector, _changeDetectorRef, ts, _adaptRadarService, _elem) {
            var _this = _super.call(this, injector, ts, _adaptRadarService, _elem, i1.AdaptRadarAngularCustomEventName.AdaptRadioButton) || this;
            _this._changeDetectorRef = _changeDetectorRef;
            // Need for using inherited properties in the template
            _this.context = _this;
            _this.isValid = true;
            /** Name value will be applied to the input element if present */
            _this.name = null;
            /** The tabindex attribute of the native input element */
            _this.tabindex = null;
            _this.label = '';
            _this.styleClass = '';
            _this.class = ''; // override the standard class attr with a new one
            /**
             * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will
             * take precedence so this may be omitted.
             */
            // eslint-disable-next-line @typescript-eslint/typedef
            _this.ariaLabel = '';
            /**
             * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element
             */
            _this.ariaLabelledby = null;
            /**
             * Control [aria-describedby] attribute text
             */
            _this.ariaDescribedBy = null;
            // eslint-disable-next-line @angular-eslint/no-output-on-prefix
            _this.onClick = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.focus = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.blur = new i0.EventEmitter();
            _this._uniqueId = "adapt-radiobutton-" + ++nextUniqueId;
            /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */
            // eslint-disable-next-line @typescript-eslint/member-ordering
            _this.testID = _this._uniqueId;
            // eslint-disable-next-line @typescript-eslint/member-ordering
            _this.id = _this._uniqueId;
            _this._onTouchedCallback = noop$1;
            _this._onChangeCallback = noop$1;
            return _this;
        }
        Object.defineProperty(AdaptRadioButtonComponent.prototype, "inputId", {
            get: function () {
                return (this.id || this._uniqueId) + "-input";
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptRadioButtonComponent.prototype, "hostClasses", {
            get: function () {
                return [
                    this.class,
                    'radio',
                    this.disabled ? 'disabled' : '',
                    this.readonly ? 'readonly' : '',
                ].join(' ');
            },
            enumerable: false,
            configurable: true
        });
        AdaptRadioButtonComponent.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
        };
        /**
         * Add a focus state on key-down/tabbing
         */
        AdaptRadioButtonComponent.prototype.onFocus = function () {
            this.focused = true;
        };
        /**
         * Remove a focus state on blur event
         */
        AdaptRadioButtonComponent.prototype.onBlur = function () {
            this.focused = false;
            i1.SafeCdr.markForCheck(this._changeDetectorRef);
        };
        /**
         * The method from an Abstract class
         */
        AdaptRadioButtonComponent.prototype.validate = function () {
            return null;
        };
        AdaptRadioButtonComponent.prototype.onInputClick = function (e) {
            e.stopPropagation();
            if (!(this.disabled || this.readonly)) {
                this.onClick.emit(null);
                this.inputElement.nativeElement.checked = true;
                this.checked = true;
                this._onChangeCallback(this.value);
            }
            else {
                e.preventDefault();
            }
        };
        /**
         * interface ControlValueAccessor
         * writeValue(obj: any): void
         */
        AdaptRadioButtonComponent.prototype.writeValue = function (v) {
            this.checked = (v === this.value);
            if (this.inputElement.nativeElement) {
                this.inputElement.nativeElement.checked = this.checked;
            }
            i1.SafeCdr.markForCheck(this._changeDetectorRef);
        };
        /**
         * interface ControlValueAccessor
         * registerOnChange(fn: any): void
         */
        AdaptRadioButtonComponent.prototype.registerOnChange = function (fn) {
            this._onChangeCallback = fn;
        };
        /**
         * interface ControlValueAccessor
         * registerOnTouched(fn: any): void
         */
        AdaptRadioButtonComponent.prototype.registerOnTouched = function (fn) {
            this._onTouchedCallback = fn;
        };
        /**
         * interface ControlValueAccessor
         * setDisabledState(isDisabled: boolean)?: void
         */
        AdaptRadioButtonComponent.prototype.setDisabledState = function (isDisabled) {
            this.disabled = isDisabled;
            i1.SafeCdr.markForCheck(this._changeDetectorRef);
        };
        AdaptRadioButtonComponent.prototype._onInputChange = function (e) {
            if (this.readonly || this.disabled) {
                e.preventDefault();
            }
            // We always have to stop propagation on the change event.
            // Otherwise the change event, from the input element, will bubble up and
            // emit its event object to the `change` output.
            e.stopPropagation();
        };
        return AdaptRadioButtonComponent;
    }(i1.FormComponent));
    AdaptRadioButtonComponent.ɵfac = function AdaptRadioButtonComponent_Factory(t) { return new (t || AdaptRadioButtonComponent)(i0__namespace.ɵɵdirectiveInject(i0__namespace.Injector), i0__namespace.ɵɵdirectiveInject(i0__namespace.ChangeDetectorRef), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef)); };
    AdaptRadioButtonComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptRadioButtonComponent, selectors: [["adapt-radiobutton"], ["div", "adapt-radiobutton", ""]], viewQuery: function AdaptRadioButtonComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$4, 7);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.inputElement = _t.first);
            }
        }, hostVars: 2, hostBindings: function AdaptRadioButtonComponent_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵclassMap(ctx.hostClasses);
            }
        }, inputs: { value: "value", name: "name", tabindex: "tabindex", label: "label", styleClass: "styleClass", class: "class", ariaLabel: ["aria-label", "ariaLabel"], ariaLabelledby: ["aria-labelledby", "ariaLabelledby"], ariaDescribedBy: "ariaDescribedBy", testID: "testID", id: "id" }, outputs: { onClick: "onClick", focus: "focus", blur: "blur" }, features: [i0__namespace.ɵɵProvidersFeature([
                i1.createFormControlValueAccessor(AdaptRadioButtonComponent),
                i1.createFormControlValidator(AdaptRadioButtonComponent)
            ]), i0__namespace.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5$2, decls: 23, vars: 29, consts: [[1, "radio__label"], ["type", "radio", 3, "disabled", "readOnly", "required", "id", "tabIndex", "checked", "ngClass", "change", "focus", "blur", "click"], ["input", ""], [1, "radio__item", "form-control-label", "font-weight-normal", 3, "ngClass"], [3, "ngClass"], [4, "ngIf"], ["placement", "top", 3, "adaptRadarDisableEventSending", "name", "adaptTooltip", 4, "ngIf"], [1, "letter-space"], [1, "form-control-required"], ["placement", "top", 3, "adaptRadarDisableEventSending", "name", "adaptTooltip"]], template: function AdaptRadioButtonComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵprojectionDef(_c1$4);
                i0__namespace.ɵɵprojection(0);
                i0__namespace.ɵɵtext(1, "\n\n");
                i0__namespace.ɵɵelementStart(2, "span", 0);
                i0__namespace.ɵɵtext(3, "\n  ");
                i0__namespace.ɵɵelementStart(4, "span");
                i0__namespace.ɵɵtext(5, "\n    ");
                i0__namespace.ɵɵelementStart(6, "input", 1, 2);
                i0__namespace.ɵɵlistener("change", function AdaptRadioButtonComponent_Template_input_change_6_listener($event) { return ctx._onInputChange($event); })("focus", function AdaptRadioButtonComponent_Template_input_focus_6_listener() { return ctx.onFocus(); })("blur", function AdaptRadioButtonComponent_Template_input_blur_6_listener() { return ctx.onBlur(); })("click", function AdaptRadioButtonComponent_Template_input_click_6_listener($event) { return ctx.onInputClick($event); });
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(8, "\n\n    ");
                i0__namespace.ɵɵelementStart(9, "label", 3);
                i0__namespace.ɵɵtext(10, "\n      ");
                i0__namespace.ɵɵelementStart(11, "span", 4);
                i0__namespace.ɵɵtext(12);
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(13, "\n      ");
                i0__namespace.ɵɵtemplate(14, AdaptRadioButtonComponent_ng_container_14_Template, 7, 1, "ng-container", 5);
                i0__namespace.ɵɵtext(15, "\n    ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(16, "\n  ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(17, "\n\n  ");
                i0__namespace.ɵɵtemplate(18, AdaptRadioButtonComponent_adapt_icon_18_Template, 2, 3, "adapt-icon", 6);
                i0__namespace.ɵɵtext(19, "\n");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(20, "\n\n");
                i0__namespace.ɵɵprojection(21, 1);
                i0__namespace.ɵɵtext(22, "\n\n");
            }
            if (rf & 2) {
                i0__namespace.ɵɵadvance(4);
                i0__namespace.ɵɵclassMapInterpolate1("radio__label ", ctx.styleClass, "");
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("disabled", ctx.context.disabled)("readOnly", ctx.readonly)("required", ctx.context.required)("id", ctx.inputId)("tabIndex", ctx.tabindex)("checked", ctx.checked)("ngClass", i0__namespace.ɵɵpureFunction1(23, _c2$4, ctx.focused));
                i0__namespace.ɵɵattribute("value", ctx.value)("data-testid", ctx.testID)("name", ctx.context.name)("aria-readonly", ctx.readonly)("aria-label", ctx.ariaLabel)("aria-labelledby", ctx.ariaLabelledby)("aria-describedby", ctx.ariaDescribedBy);
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction1(25, _c3$3, !ctx.context.label));
                i0__namespace.ɵɵattribute("for", ctx.inputId);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngClass", i0__namespace.ɵɵpureFunction1(27, _c4$2, !ctx.context.label));
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵtextInterpolate(ctx.context.label);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.context.required);
                i0__namespace.ɵɵadvance(4);
                i0__namespace.ɵɵproperty("ngIf", ctx.context.tooltipIconCls);
            }
        }, directives: [i3__namespace.NgClass, i3__namespace.NgIf, i1__namespace.AdaptIconComponent, i1__namespace.AdaptTooltipDirective], encapsulation: 2, changeDetection: 0 });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptRadioButtonComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-radiobutton, div[adapt-radiobutton]',
                        templateUrl: './radiobutton.component.html',
                        providers: [
                            i1.createFormControlValueAccessor(AdaptRadioButtonComponent),
                            i1.createFormControlValidator(AdaptRadioButtonComponent)
                        ],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        encapsulation: i0.ViewEncapsulation.None
                    }]
            }], function () { return [{ type: i0__namespace.Injector }, { type: i0__namespace.ChangeDetectorRef }, { type: i1__namespace.AdaptTranslateService }, { type: i2__namespace.AdaptRadarService }, { type: i0__namespace.ElementRef }]; }, { value: [{
                    type: i0.Input
                }], name: [{
                    type: i0.Input
                }], tabindex: [{
                    type: i0.Input
                }], label: [{
                    type: i0.Input
                }], styleClass: [{
                    type: i0.Input
                }], class: [{
                    type: i0.Input
                }], ariaLabel: [{
                    type: i0.Input,
                    args: ['aria-label']
                }], ariaLabelledby: [{
                    type: i0.Input,
                    args: ['aria-labelledby']
                }], ariaDescribedBy: [{
                    type: i0.Input
                }], onClick: [{
                    type: i0.Output
                }], focus: [{
                    type: i0.Output
                }], blur: [{
                    type: i0.Output
                }], inputElement: [{
                    type: i0.ViewChild,
                    args: ['input', { static: true }]
                }], testID: [{
                    type: i0.Input
                }], id: [{
                    type: i0.Input
                }], hostClasses: [{
                    type: i0.HostBinding,
                    args: ['class']
                }] });
    })();

    var AdaptRadioButtonModule = /** @class */ (function () {
        function AdaptRadioButtonModule() {
        }
        return AdaptRadioButtonModule;
    }());
    AdaptRadioButtonModule.ɵfac = function AdaptRadioButtonModule_Factory(t) { return new (t || AdaptRadioButtonModule)(); };
    AdaptRadioButtonModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptRadioButtonModule });
    AdaptRadioButtonModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[i3.CommonModule, i6.FormsModule, i1.AdaptIconModule, i1.AdaptTooltipModule]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptRadioButtonModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [i3.CommonModule, i6.FormsModule, i1.AdaptIconModule, i1.AdaptTooltipModule],
                        exports: [AdaptRadioButtonComponent],
                        declarations: [AdaptRadioButtonComponent],
                    }]
            }], null, null);
    })();
    (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptRadioButtonModule, { declarations: [AdaptRadioButtonComponent], imports: [i3.CommonModule, i6.FormsModule, i1.AdaptIconModule, i1.AdaptTooltipModule], exports: [AdaptRadioButtonComponent] }); })();

    var _c0$3 = ["fileInput"];
    var _c1$3 = ["fileList"];
    var _c2$3 = ["dropEnter"];
    var _c3$2 = ["dnd"];
    var _c4$1 = ["drop"];
    var _c5$1 = ["droppableAreaBlock"];
    function AdaptUploaderComponent_ng_template_17_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtext(0, "\n      ");
        }
    }
    function AdaptUploaderComponent_adapt_alert_23_ng_template_2_ng_container_1_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n            ");
            i0__namespace.ɵɵelementStart(2, "div", 21);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n          ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            i0__namespace.ɵɵnextContext();
            var _r19 = i0__namespace.ɵɵreference(4);
            var ctx_r18 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("adaptPopover", _r19)("adaptRadarDisableEventSending", true)("placement", "auto")("maxWidth", 600);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n              ", ctx_r18.texts.remainingFilesListLabel, "\n            ");
        }
    }
    function AdaptUploaderComponent_adapt_alert_23_ng_template_2_ng_template_3_ng_template_1_span_3_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span");
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r25 = i0__namespace.ɵɵnextContext(5);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("", ctx_r25.texts.comma, " ");
        }
    }
    function AdaptUploaderComponent_adapt_alert_23_ng_template_2_ng_template_3_ng_template_1_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtext(0, "\n              ");
            i0__namespace.ɵɵelementStart(1, "span", 23);
            i0__namespace.ɵɵtext(2);
            i0__namespace.ɵɵtemplate(3, AdaptUploaderComponent_adapt_alert_23_ng_template_2_ng_template_3_ng_template_1_span_3_Template, 2, 1, "span", 11);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n            ");
        }
        if (rf & 2) {
            var file_r22 = ctx.$implicit;
            var last_r24 = ctx.last;
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate(file_r22.name);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("ngIf", !last_r24);
        }
    }
    function AdaptUploaderComponent_adapt_alert_23_ng_template_2_ng_template_3_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtext(0, "\n            ");
            i0__namespace.ɵɵtemplate(1, AdaptUploaderComponent_adapt_alert_23_ng_template_2_ng_template_3_ng_template_1_Template, 5, 2, "ng-template", 22);
            i0__namespace.ɵɵtext(2, "\n          ");
        }
        if (rf & 2) {
            var msg_r15 = i0__namespace.ɵɵnextContext(2).$implicit;
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("ngForOf", msg_r15.files);
        }
    }
    function AdaptUploaderComponent_adapt_alert_23_ng_template_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtext(0);
            i0__namespace.ɵɵtemplate(1, AdaptUploaderComponent_adapt_alert_23_ng_template_2_ng_container_1_Template, 5, 5, "ng-container", 11);
            i0__namespace.ɵɵtext(2, "\n\n          ");
            i0__namespace.ɵɵtemplate(3, AdaptUploaderComponent_adapt_alert_23_ng_template_2_ng_template_3_Template, 3, 1, "ng-template", null, 20, i0__namespace.ɵɵtemplateRefExtractor);
            i0__namespace.ɵɵtext(5, "\n        ");
        }
        if (rf & 2) {
            var msg_r15 = i0__namespace.ɵɵnextContext().$implicit;
            i0__namespace.ɵɵtextInterpolate1("\n          ", msg_r15.text, "\n          ");
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("ngIf", msg_r15.files && msg_r15.files.length);
        }
    }
    var _c6$1 = function (a0, a1, a3) { return { title: a0, content: a1, type: "inline", variant: a3, icon: false }; };
    function AdaptUploaderComponent_adapt_alert_23_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "adapt-alert", 18);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵtemplate(2, AdaptUploaderComponent_adapt_alert_23_ng_template_2_Template, 6, 2, "ng-template", null, 19, i0__namespace.ɵɵtemplateRefExtractor);
            i0__namespace.ɵɵtext(4, "\n      ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var msg_r15 = ctx.$implicit;
            var _r16 = i0__namespace.ɵɵreference(3);
            i0__namespace.ɵɵproperty("config", i0__namespace.ɵɵpureFunction3(1, _c6$1, msg_r15.title ? msg_r15.title : "", _r16, msg_r15.variant));
        }
    }
    var _c7$1 = function (a0, a1) { return { title: a0, content: a1, type: "inline", variant: "danger", icon: false }; };
    function AdaptUploaderComponent_ng_container_25_adapt_alert_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-alert", 18);
        }
        if (rf & 2) {
            var error_r29 = ctx.$implicit;
            i0__namespace.ɵɵproperty("config", i0__namespace.ɵɵpureFunction2(1, _c7$1, error_r29.name, error_r29.text));
        }
    }
    function AdaptUploaderComponent_ng_container_25_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵtemplate(2, AdaptUploaderComponent_ng_container_25_adapt_alert_2_Template, 1, 4, "adapt-alert", 10);
            i0__namespace.ɵɵtext(3, "\n      ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r5 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngForOf", ctx_r5.context.errors);
        }
    }
    function AdaptUploaderComponent_div_29_div_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 30);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵelementStart(2, "p", 27);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n        ");
            i0__namespace.ɵɵelement(5, "span", 28);
            i0__namespace.ɵɵtext(6, "\n        ");
            i0__namespace.ɵɵelementStart(7, "p", 27);
            i0__namespace.ɵɵtext(8);
            i0__namespace.ɵɵpipe(9, "fileTypes");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(10, "\n      ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r30 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r30.texts.allowedTypes);
            i0__namespace.ɵɵadvance(5);
            i0__namespace.ɵɵtextInterpolate(i0__namespace.ɵɵpipeBind2(9, 2, ctx_r30.allowedTypes, ctx_r30.texts.fileTypesDivider));
        }
    }
    function AdaptUploaderComponent_div_29_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 24);
            i0__namespace.ɵɵtext(1, "\n      ");
            i0__namespace.ɵɵtemplate(2, AdaptUploaderComponent_div_29_div_2_Template, 11, 5, "div", 25);
            i0__namespace.ɵɵtext(3, "\n\n      ");
            i0__namespace.ɵɵelementStart(4, "div", 26);
            i0__namespace.ɵɵtext(5, "\n        ");
            i0__namespace.ɵɵelementStart(6, "p", 27);
            i0__namespace.ɵɵtext(7);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(8, "\n        ");
            i0__namespace.ɵɵelement(9, "span", 28);
            i0__namespace.ɵɵtext(10, "\n        ");
            i0__namespace.ɵɵelementStart(11, "p", 27);
            i0__namespace.ɵɵtext(12);
            i0__namespace.ɵɵpipe(13, "fileSize");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(14, "\n      ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(15, "\n\n      ");
            i0__namespace.ɵɵelementStart(16, "div", 29);
            i0__namespace.ɵɵtext(17, "\n        ");
            i0__namespace.ɵɵelementStart(18, "p", 27);
            i0__namespace.ɵɵtext(19);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(20, "\n        ");
            i0__namespace.ɵɵelement(21, "span", 28);
            i0__namespace.ɵɵtext(22, "\n        ");
            i0__namespace.ɵɵelementStart(23, "p", 27);
            i0__namespace.ɵɵtext(24);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(25, "\n      ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(26, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r6 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r6.allowedTypes.length);
            i0__namespace.ɵɵadvance(5);
            i0__namespace.ɵɵtextInterpolate(ctx_r6.texts.maxFileSize);
            i0__namespace.ɵɵadvance(5);
            i0__namespace.ɵɵtextInterpolate(i0__namespace.ɵɵpipeBind1(13, 5, ctx_r6.maxFileSize));
            i0__namespace.ɵɵadvance(7);
            i0__namespace.ɵɵtextInterpolate(ctx_r6.texts.filesCount);
            i0__namespace.ɵɵadvance(5);
            i0__namespace.ɵɵtextInterpolate(ctx_r6.filesCount);
        }
    }
    function AdaptUploaderComponent_div_32_p_6_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "p", 42);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r31 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r31.filesAddedCount);
        }
    }
    function AdaptUploaderComponent_div_32_p_8_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "p", 42);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r32 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵclassProp("text-info", ctx_r32.maxFileCountUploaded);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r32.filesUploadedCount);
        }
    }
    function AdaptUploaderComponent_div_32_button_10_Template(rf, ctx) {
        if (rf & 1) {
            var _r39_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "button", 43);
            i0__namespace.ɵɵlistener("click", function AdaptUploaderComponent_div_32_button_10_Template_button_click_0_listener() { i0__namespace.ɵɵrestoreView(_r39_1); var ctx_r38 = i0__namespace.ɵɵnextContext(2); return ctx_r38.cancelAllUploads(); });
            i0__namespace.ɵɵtext(1, "\n            ");
            i0__namespace.ɵɵelement(2, "span", 44);
            i0__namespace.ɵɵtext(3, "\n            ");
            i0__namespace.ɵɵelementStart(4, "span");
            i0__namespace.ɵɵtext(5);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n          ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r33 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true);
            i0__namespace.ɵɵadvance(5);
            i0__namespace.ɵɵtextInterpolate(ctx_r33.texts.btnCancelAllUploads);
        }
    }
    function AdaptUploaderComponent_div_32_adapt_uploader_item_13_Template(rf, ctx) {
        if (rf & 1) {
            var _r43_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "adapt-uploader-item", 45);
            i0__namespace.ɵɵlistener("afterFileRemove", function AdaptUploaderComponent_div_32_adapt_uploader_item_13_Template_adapt_uploader_item_afterFileRemove_0_listener($event) { i0__namespace.ɵɵrestoreView(_r43_1); var ctx_r42 = i0__namespace.ɵɵnextContext(2); return ctx_r42.removedFromQueue($event); })("fileDeleted", function AdaptUploaderComponent_div_32_adapt_uploader_item_13_Template_adapt_uploader_item_fileDeleted_0_listener($event) { i0__namespace.ɵɵrestoreView(_r43_1); var ctx_r44 = i0__namespace.ɵɵnextContext(2); return ctx_r44.fileDeleted($event); });
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var file_r40 = ctx.$implicit;
            var id_r41 = ctx.index;
            var ctx_r34 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵproperty("disabled", ctx_r34.disabled)("readonly", ctx_r34.readonly)("collapseBlock", false)("reusable", ctx_r34.reusable)("indeterminateFileLoader", ctx_r34.indeterminateFileLoader)("url", ctx_r34.url)("deleteUrl", ctx_r34.deleteUrl)("chunkSize", ctx_r34.chunkSize)("customErrors", ctx_r34.customErrors)("file", file_r40)("id", id_r41)("texts", ctx_r34.texts);
        }
    }
    function AdaptUploaderComponent_div_32_adapt_uploader_item_19_Template(rf, ctx) {
        if (rf & 1) {
            var _r48_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "adapt-uploader-item", 46);
            i0__namespace.ɵɵlistener("afterFileRemove", function AdaptUploaderComponent_div_32_adapt_uploader_item_19_Template_adapt_uploader_item_afterFileRemove_0_listener($event) { i0__namespace.ɵɵrestoreView(_r48_1); var ctx_r47 = i0__namespace.ɵɵnextContext(2); return ctx_r47.removedFromQueue($event); })("fileDeleted", function AdaptUploaderComponent_div_32_adapt_uploader_item_19_Template_adapt_uploader_item_fileDeleted_0_listener($event) { i0__namespace.ɵɵrestoreView(_r48_1); var ctx_r49 = i0__namespace.ɵɵnextContext(2); return ctx_r49.fileDeleted($event); });
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var file_r45 = ctx.$implicit;
            var id_r46 = ctx.index;
            var ctx_r36 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵproperty("disabled", ctx_r36.disabled)("readonly", ctx_r36.readonly)("reusable", ctx_r36.reusable)("indeterminateFileLoader", ctx_r36.indeterminateFileLoader)("url", ctx_r36.url)("deleteUrl", ctx_r36.deleteUrl)("chunkSize", ctx_r36.chunkSize)("customErrors", ctx_r36.customErrors)("file", file_r45)("id", id_r46 + ctx_r36.visibleFiles)("texts", ctx_r36.texts);
        }
    }
    function AdaptUploaderComponent_div_32_div_23_Template(rf, ctx) {
        if (rf & 1) {
            var _r51_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 47);
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵelementStart(2, "button", 48);
            i0__namespace.ɵɵlistener("click", function AdaptUploaderComponent_div_32_div_23_Template_button_click_2_listener() { i0__namespace.ɵɵrestoreView(_r51_1); i0__namespace.ɵɵnextContext(); var _r35 = i0__namespace.ɵɵreference(17); return _r35.toggle(); });
            i0__namespace.ɵɵtext(3, "\n            ");
            i0__namespace.ɵɵelementStart(4, "span");
            i0__namespace.ɵɵtext(5);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(7, "\n        ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            i0__namespace.ɵɵnextContext();
            var _r35 = i0__namespace.ɵɵreference(17);
            var ctx_r37 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵattribute("aria-expanded", !_r35.isCollapsed);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(_r35.isCollapsed ? ctx_r37.texts.showMore : ctx_r37.texts.showLess);
        }
    }
    function AdaptUploaderComponent_div_32_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 31);
            i0__namespace.ɵɵtext(1, "\n      ");
            i0__namespace.ɵɵelementStart(2, "div", 32);
            i0__namespace.ɵɵtext(3, "\n        ");
            i0__namespace.ɵɵelementStart(4, "div", 33);
            i0__namespace.ɵɵtext(5, "\n          ");
            i0__namespace.ɵɵtemplate(6, AdaptUploaderComponent_div_32_p_6_Template, 2, 1, "p", 34);
            i0__namespace.ɵɵtext(7, "\n          ");
            i0__namespace.ɵɵtemplate(8, AdaptUploaderComponent_div_32_p_8_Template, 2, 3, "p", 35);
            i0__namespace.ɵɵtext(9, "\n          ");
            i0__namespace.ɵɵtemplate(10, AdaptUploaderComponent_div_32_button_10_Template, 7, 2, "button", 36);
            i0__namespace.ɵɵtext(11, "\n        ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(12, "\n        ");
            i0__namespace.ɵɵtemplate(13, AdaptUploaderComponent_div_32_adapt_uploader_item_13_Template, 1, 12, "adapt-uploader-item", 37);
            i0__namespace.ɵɵpipe(14, "slice");
            i0__namespace.ɵɵtext(15, "\n\n        ");
            i0__namespace.ɵɵelementStart(16, "div", 38, 39);
            i0__namespace.ɵɵtext(18, "\n          ");
            i0__namespace.ɵɵtemplate(19, AdaptUploaderComponent_div_32_adapt_uploader_item_19_Template, 1, 11, "adapt-uploader-item", 40);
            i0__namespace.ɵɵpipe(20, "slice");
            i0__namespace.ɵɵtext(21, "\n        ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(22, "\n\n        ");
            i0__namespace.ɵɵtemplate(23, AdaptUploaderComponent_div_32_div_23_Template, 8, 2, "div", 41);
            i0__namespace.ɵɵtext(24, "\n      ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(25, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r7 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(6);
            i0__namespace.ɵɵproperty("ngIf", ctx_r7.isManualMode());
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r7.isManualMode());
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r7.isUploadingProcess);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngForOf", i0__namespace.ɵɵpipeBind3(14, 6, ctx_r7.files, 0, ctx_r7.visibleFiles));
            i0__namespace.ɵɵadvance(6);
            i0__namespace.ɵɵproperty("ngForOf", i0__namespace.ɵɵpipeBind2(20, 10, ctx_r7.files, ctx_r7.visibleFiles));
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵproperty("ngIf", ctx_r7.files.length > ctx_r7.visibleFiles);
        }
    }
    var _c8$1 = function (a1) { return { title: "Folders uploading", content: a1, type: "inline", variant: "warning" }; };
    function AdaptUploaderComponent_adapt_alert_35_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "adapt-alert", 49);
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r8 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("config", i0__namespace.ɵɵpureFunction1(1, _c8$1, ctx_r8.folderUploadingForbiddenMsg));
        }
    }
    function AdaptUploaderComponent_ng_template_39_Template(rf, ctx) { }
    function AdaptUploaderComponent_ng_template_42_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtext(0, "\n  ");
            i0__namespace.ɵɵelementStart(1, "adapt-empty-state", 50);
            i0__namespace.ɵɵtext(2, "\n  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(3, "\n");
        }
        if (rf & 2) {
            var ctx_r12 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("type", "objects")("label", ctx_r12.texts.notFound);
        }
    }
    function AdaptUploaderComponent_ng_template_45_ng_container_1_div_7_Template(rf, ctx) {
        if (rf & 1) {
            var _r63_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 61);
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵelementStart(2, "button", 62);
            i0__namespace.ɵɵlistener("click", function AdaptUploaderComponent_ng_template_45_ng_container_1_div_7_Template_button_click_2_listener() { i0__namespace.ɵɵrestoreView(_r63_1); var ctx_r62 = i0__namespace.ɵɵnextContext(3); return ctx_r62.openFileDialog(false); });
            i0__namespace.ɵɵtext(3, "\n            ");
            i0__namespace.ɵɵelement(4, "span", 63);
            i0__namespace.ɵɵtext(5);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n        ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r55 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("adaptTooltip", ctx_r55.selectFilesButtonTooltip)("placement", "auto");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("disabled", ctx_r55.isDisabledSelectBtn);
            i0__namespace.ɵɵattribute("aria-label", ctx_r55.texts.fileBtn)("aria-describedby", ctx_r55.context.ariaDescribedBy || null);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate1("\n            ", ctx_r55.texts.fileBtn, "\n          ");
        }
    }
    function AdaptUploaderComponent_ng_template_45_ng_container_1_div_9_Template(rf, ctx) {
        if (rf & 1) {
            var _r65_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 64);
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵelementStart(2, "button", 62);
            i0__namespace.ɵɵlistener("click", function AdaptUploaderComponent_ng_template_45_ng_container_1_div_9_Template_button_click_2_listener() { i0__namespace.ɵɵrestoreView(_r65_1); var ctx_r64 = i0__namespace.ɵɵnextContext(3); return ctx_r64.openFileDialog(true); });
            i0__namespace.ɵɵtext(3, "\n            ");
            i0__namespace.ɵɵelement(4, "span", 65);
            i0__namespace.ɵɵtext(5);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n        ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r56 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("adaptTooltip", ctx_r56.selectFilesButtonTooltip)("placement", "auto");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("disabled", ctx_r56.isDisabledSelectBtn);
            i0__namespace.ɵɵattribute("aria-label", ctx_r56.texts.folderBtn)("aria-describedby", ctx_r56.context.ariaDescribedBy || null);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate1("\n            ", ctx_r56.texts.folderBtn, "\n          ");
        }
    }
    function AdaptUploaderComponent_ng_template_45_ng_container_1_ng_container_11_span_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span", 68);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r66 = i0__namespace.ɵɵnextContext(4);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n                ", ctx_r66.texts.fileMode, "\n              ");
        }
    }
    function AdaptUploaderComponent_ng_template_45_ng_container_1_ng_container_11_span_4_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span", 68);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r67 = i0__namespace.ɵɵnextContext(4);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n                ", ctx_r67.texts.dirMode, "\n              ");
        }
    }
    function AdaptUploaderComponent_ng_template_45_ng_container_1_ng_container_11_span_6_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span", 68);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r68 = i0__namespace.ɵɵnextContext(4);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n                ", ctx_r68.texts.mixMode, "\n              ");
        }
    }
    function AdaptUploaderComponent_ng_template_45_ng_container_1_ng_container_11_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0, 66);
            i0__namespace.ɵɵtext(1, "\n              ");
            i0__namespace.ɵɵtemplate(2, AdaptUploaderComponent_ng_template_45_ng_container_1_ng_container_11_span_2_Template, 2, 1, "span", 67);
            i0__namespace.ɵɵtext(3, "\n          ");
            i0__namespace.ɵɵtemplate(4, AdaptUploaderComponent_ng_template_45_ng_container_1_ng_container_11_span_4_Template, 2, 1, "span", 67);
            i0__namespace.ɵɵtext(5, "\n          ");
            i0__namespace.ɵɵtemplate(6, AdaptUploaderComponent_ng_template_45_ng_container_1_ng_container_11_span_6_Template, 2, 1, "span", 67);
            i0__namespace.ɵɵtext(7, "\n        ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r57 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵproperty("ngSwitch", ctx_r57.selectionMode);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngSwitchCase", ctx_r57.fileMode());
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngSwitchCase", ctx_r57.dirMode());
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngSwitchCase", ctx_r57.mixMode());
        }
    }
    function AdaptUploaderComponent_ng_template_45_ng_container_1_ng_container_19_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n            ");
            i0__namespace.ɵɵelementStart(2, "div", 69);
            i0__namespace.ɵɵtext(3, "\n              ");
            i0__namespace.ɵɵnamespaceSVG();
            i0__namespace.ɵɵelementStart(4, "svg", 70);
            i0__namespace.ɵɵtext(5, "\n                ");
            i0__namespace.ɵɵelement(6, "path", 71);
            i0__namespace.ɵɵtext(7, "\n              ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(8, "\n              ");
            i0__namespace.ɵɵelementStart(9, "svg", 72);
            i0__namespace.ɵɵtext(10, "\n                ");
            i0__namespace.ɵɵelement(11, "path", 73);
            i0__namespace.ɵɵtext(12, "\n              ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(13, "\n            ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(14, "\n            ");
            i0__namespace.ɵɵnamespaceHTML();
            i0__namespace.ɵɵelementStart(15, "p", 68);
            i0__namespace.ɵɵtext(16);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(17, "\n          ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r59 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(16);
            i0__namespace.ɵɵtextInterpolate(ctx_r59.texts.dragAndDrop);
        }
    }
    function AdaptUploaderComponent_ng_template_45_ng_container_1_ng_container_21_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n            ");
            i0__namespace.ɵɵelementStart(2, "div", 74);
            i0__namespace.ɵɵtext(3, "\n              ");
            i0__namespace.ɵɵnamespaceSVG();
            i0__namespace.ɵɵelementStart(4, "svg", 75);
            i0__namespace.ɵɵtext(5, "\n                        ");
            i0__namespace.ɵɵelement(6, "path", 76);
            i0__namespace.ɵɵtext(7, "\n                  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(8, "\n            ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(9, "\n            ");
            i0__namespace.ɵɵnamespaceHTML();
            i0__namespace.ɵɵelementStart(10, "span", 77);
            i0__namespace.ɵɵtext(11);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(12, "\n          ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r60 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(11);
            i0__namespace.ɵɵtextInterpolate(ctx_r60.uploadLimitExceed);
        }
    }
    function AdaptUploaderComponent_ng_template_45_ng_container_1_div_24_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 78);
            i0__namespace.ɵɵtext(1, "\n          ");
            i0__namespace.ɵɵelementStart(2, "div", 79);
            i0__namespace.ɵɵtext(3, "\n            ");
            i0__namespace.ɵɵnamespaceSVG();
            i0__namespace.ɵɵelementStart(4, "svg", 80);
            i0__namespace.ɵɵtext(5, "\n              ");
            i0__namespace.ɵɵelement(6, "path", 81);
            i0__namespace.ɵɵtext(7, "\n              ");
            i0__namespace.ɵɵelement(8, "path", 82);
            i0__namespace.ɵɵtext(9, "\n            ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(10, "\n            ");
            i0__namespace.ɵɵnamespaceHTML();
            i0__namespace.ɵɵelementStart(11, "div", 83);
            i0__namespace.ɵɵtext(12, "\n              ");
            i0__namespace.ɵɵnamespaceSVG();
            i0__namespace.ɵɵelementStart(13, "svg", 84);
            i0__namespace.ɵɵtext(14, "\n                ");
            i0__namespace.ɵɵelement(15, "path", 85);
            i0__namespace.ɵɵtext(16, "\n              ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(17, "\n            ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(18, "\n          ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(19, "\n          ");
            i0__namespace.ɵɵnamespaceHTML();
            i0__namespace.ɵɵelementStart(20, "p", 68);
            i0__namespace.ɵɵtext(21);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(22, "\n        ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r61 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(21);
            i0__namespace.ɵɵtextInterpolate(ctx_r61.directorySearch);
        }
    }
    var _c9 = function (a0, a1, a2, a3) { return { leftStart: a0, rightStart: a1, leftEnd: a2, rightEnd: a3 }; };
    var _c10 = function (a0) { return { params: a0 }; };
    function AdaptUploaderComponent_ng_template_45_ng_container_1_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵelementStart(2, "div", 51);
            i0__namespace.ɵɵtext(3, "\n      ");
            i0__namespace.ɵɵelementStart(4, "div", 52, 53);
            i0__namespace.ɵɵtext(6, "\n        ");
            i0__namespace.ɵɵtemplate(7, AdaptUploaderComponent_ng_template_45_ng_container_1_div_7_Template, 7, 8, "div", 54);
            i0__namespace.ɵɵtext(8, "\n\n        ");
            i0__namespace.ɵɵtemplate(9, AdaptUploaderComponent_ng_template_45_ng_container_1_div_9_Template, 7, 8, "div", 55);
            i0__namespace.ɵɵtext(10, "\n\n        ");
            i0__namespace.ɵɵtemplate(11, AdaptUploaderComponent_ng_template_45_ng_container_1_ng_container_11_Template, 8, 4, "ng-container", 56);
            i0__namespace.ɵɵtext(12, "\n      ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(13, "\n\n      ");
            i0__namespace.ɵɵelementStart(14, "div", 57, 58);
            i0__namespace.ɵɵtext(16, "\n        ");
            i0__namespace.ɵɵelementStart(17, "div", 59);
            i0__namespace.ɵɵtext(18, "\n          ");
            i0__namespace.ɵɵtemplate(19, AdaptUploaderComponent_ng_template_45_ng_container_1_ng_container_19_Template, 18, 1, "ng-container", 11);
            i0__namespace.ɵɵtext(20, "\n\n          ");
            i0__namespace.ɵɵtemplate(21, AdaptUploaderComponent_ng_template_45_ng_container_1_ng_container_21_Template, 13, 1, "ng-container", 11);
            i0__namespace.ɵɵtext(22, "\n        ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(23, "\n\n        ");
            i0__namespace.ɵɵtemplate(24, AdaptUploaderComponent_ng_template_45_ng_container_1_div_24_Template, 23, 1, "div", 60);
            i0__namespace.ɵɵtext(25, "\n      ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(26, "\n    ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(27, "\n  ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r52 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵproperty("@uploaderInitStateAnim", i0__namespace.ɵɵpureFunction1(14, _c10, i0__namespace.ɵɵpureFunction4(9, _c9, ctx_r52.isRtl ? "auto" : "15%", ctx_r52.isRtl ? "15%" : "auto", ctx_r52.isRtl ? "auto" : "0px", ctx_r52.isRtl ? "0px" : "auto")));
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngIf", ctx_r52.allowFileUploading());
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r52.allowDirUploading());
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r52.enableDnD);
            i0__namespace.ɵɵadvance(6);
            i0__namespace.ɵɵclassProp("hidden", ctx_r52.readFolder);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r52.isUploadLimitExceed);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r52.isUploadLimitExceed);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngIf", ctx_r52.readFolder);
        }
    }
    function AdaptUploaderComponent_ng_template_45_ng_container_3_div_4_Template(rf, ctx) {
        if (rf & 1) {
            var _r72_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 61);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵelementStart(2, "button", 86);
            i0__namespace.ɵɵlistener("click", function AdaptUploaderComponent_ng_template_45_ng_container_3_div_4_Template_button_click_2_listener() { i0__namespace.ɵɵrestoreView(_r72_1); var ctx_r71 = i0__namespace.ɵɵnextContext(3); return ctx_r71.openFileDialog(false); });
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n      ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r69 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("adaptTooltip", ctx_r69.selectFilesButtonTooltip)("placement", "auto");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("disabled", ctx_r69.isDisabledSelectBtn);
            i0__namespace.ɵɵattribute("aria-label", ctx_r69.texts.fileBtn)("aria-describedby", ctx_r69.context.ariaDescribedBy || null);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n          ", ctx_r69.texts.fileBtn, "\n        ");
        }
    }
    function AdaptUploaderComponent_ng_template_45_ng_container_3_div_6_Template(rf, ctx) {
        if (rf & 1) {
            var _r74_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 64);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵelementStart(2, "button", 87);
            i0__namespace.ɵɵlistener("click", function AdaptUploaderComponent_ng_template_45_ng_container_3_div_6_Template_button_click_2_listener() { i0__namespace.ɵɵrestoreView(_r74_1); var ctx_r73 = i0__namespace.ɵɵnextContext(3); return ctx_r73.openFileDialog(true); });
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n      ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r70 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("adaptTooltip", ctx_r70.selectFilesButtonTooltip)("placement", "auto");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("disabled", ctx_r70.isDisabledSelectBtn);
            i0__namespace.ɵɵattribute("aria-label", ctx_r70.texts.folderBtn)("aria-describedby", ctx_r70.context.ariaDescribedBy || null);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n          ", ctx_r70.texts.folderBtn, "\n        ");
        }
    }
    function AdaptUploaderComponent_ng_template_45_ng_container_3_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵelementStart(2, "div", 52);
            i0__namespace.ɵɵtext(3, "\n      ");
            i0__namespace.ɵɵtemplate(4, AdaptUploaderComponent_ng_template_45_ng_container_3_div_4_Template, 5, 8, "div", 54);
            i0__namespace.ɵɵtext(5, "\n\n      ");
            i0__namespace.ɵɵtemplate(6, AdaptUploaderComponent_ng_template_45_ng_container_3_div_6_Template, 5, 8, "div", 55);
            i0__namespace.ɵɵtext(7, "\n    ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(8, "\n  ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r53 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵproperty("ngIf", ctx_r53.allowFileUploading());
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r53.allowDirUploading());
        }
    }
    function AdaptUploaderComponent_ng_template_45_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtext(0, "\n  ");
            i0__namespace.ɵɵtemplate(1, AdaptUploaderComponent_ng_template_45_ng_container_1_Template, 28, 16, "ng-container", 11);
            i0__namespace.ɵɵtext(2, "\n\n  ");
            i0__namespace.ɵɵtemplate(3, AdaptUploaderComponent_ng_template_45_ng_container_3_Template, 9, 2, "ng-container", 11);
            i0__namespace.ɵɵtext(4, "\n");
        }
        if (rf & 2) {
            var ctx_r14 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("ngIf", ctx_r14.enableDnD);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r14.enableDnD);
        }
    }
    var _c11 = ["*"];
    var count$1 = 0;
    var AdaptUploaderComponent = /** @class */ (function (_super) {
        __extends(AdaptUploaderComponent, _super);
        function AdaptUploaderComponent(fileManager, iconService, _renderer, _elRef, _dir, _animationBuilder, _injector, _differs, cd, ts, _adaptRadarService) {
            var _this = _super.call(this, _injector, ts, _adaptRadarService, _elRef, i1.AdaptRadarAngularCustomEventName.AdaptUploader) || this;
            _this.fileManager = fileManager;
            _this.iconService = iconService;
            _this._renderer = _renderer;
            _this._elRef = _elRef;
            _this._dir = _dir;
            _this._animationBuilder = _animationBuilder;
            _this._injector = _injector;
            _this._differs = _differs;
            _this.cd = cd;
            _this._adaptRadarService = _adaptRadarService;
            /* begin text configurations **/
            _this.uploaderTextsDefault = {
                fileStatus: {}
            };
            /**
             * Label icon with a tooltip or popover
             */
            _this.tooltipConfig = null;
            _this.mode = i1.UploaderMode.Auto;
            _this.selectionMode = i1.UploaderSelectionMode.Both;
            _this.enableDnD = true;
            _this.enableFileDialog = true;
            _this.allowedTypes = [];
            _this.forbiddenTypes = [];
            _this.suppressParallel = false;
            _this.filesCount = 1000;
            _this.allowDuplicates = true;
            _this.showUploadFolderAlert = true;
            _this.icons = {};
            _this.visibleFiles = 3;
            _this.reusable = true;
            _this.indeterminateFileLoader = false;
            _this.ariaDescribedBy = null;
            _this.allowDeletion = true;
            _this.customErrors = false;
            /* uploader outputs */
            _this.beforeFileDialogOpen = new i0.EventEmitter();
            _this.afterFileDialogOpen = new i0.EventEmitter();
            _this.beforeFilesAdded = new i0.EventEmitter();
            _this.afterFilesAdded = new i0.EventEmitter();
            _this.dropArea = new i0.EventEmitter();
            _this.dragOver = new i0.EventEmitter();
            _this.startFileUploading = new i0.EventEmitter();
            _this.endFileUploading = new i0.EventEmitter();
            _this.errorFileUploading = new i0.EventEmitter();
            _this.finishedFileUploading = new i0.EventEmitter();
            _this.removedFileFromQueue = new i0.EventEmitter();
            _this.deletedFile = new i0.EventEmitter();
            _this.cancelUploading = new i0.EventEmitter();
            /**
             * Event on ngModel change
             */
            _this.valueChange = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.focus = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-native
            _this.blur = new i0.EventEmitter();
            // Need for using inherited properties in the template
            _this.context = _this;
            _this.statusMessages = [];
            _this.uploaded = [];
            _this.folderUploadingForbiddenMsg = 'Your browser does not support folders uploading.';
            _this.isFoldersNotAllowed = false;
            _this.readFolder = false;
            _this.isDragOverMask = false;
            _this.isRtl = false;
            _this.isUploadLimitExceed = false;
            _this._droppable = 0;
            _this._alreadyUsed = false;
            _this._positioned = false;
            _this._defaultCloudColor = '#D9D9D9';
            _this._activeCloudColor = '#1BB1A8';
            _this._animationPlayers = {
                visibleDnd: null,
                hiddenDnd: null,
                visibleDrop: null,
                hiddenDrop: null
            };
            _this._isTouched = false;
            _this._showFiles = [];
            _this._destroyed$ = new rxjs.ReplaySubject(1);
            _this._chunkSize = i1.FileSize.MB;
            _this._maxFileSize = i1.FileSize.MB * 20;
            _this._onTouchedCallback = function () {
                return;
            };
            _this.isRtl = _this._dir.value === 'rtl';
            _this.id = count$1.toString();
            count$1++;
            _this.setDefaultTexts(ts.getCurrentLanguage());
            return _this;
        }
        Object.defineProperty(AdaptUploaderComponent.prototype, "showFiles", {
            get: function () {
                return this._showFiles;
            },
            set: function (v) {
                this._showFiles = v;
                this.fileManager.resetFilesStorage();
                this._updateUploadedFiles();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptUploaderComponent.prototype, "files", {
            get: function () {
                return this.fileManager.getFiles();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptUploaderComponent.prototype, "maxFileCountUploaded", {
            get: function () {
                return this.uploaded.length >= this.filesCount;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptUploaderComponent.prototype, "hasMaxFileCountSelected", {
            get: function () {
                return this.filesCount <= this.files.length;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptUploaderComponent.prototype, "selectFilesButtonTooltip", {
            get: function () {
                return this.hasMaxFileCountSelected ? i1.formatString(this.texts.btnMaxFilesTooltip, this.filesCount) : '';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptUploaderComponent.prototype, "isDisabledSelectBtn", {
            get: function () {
                return this.disabled || this.disableFileDialog() || !this.allowedUploading() || this.maxFileCountUploaded
                    || this.hasMaxFileCountSelected;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptUploaderComponent.prototype, "isUploadingProcess", {
            get: function () {
                return this.files.some(function (file) { return file.inUploading; });
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptUploaderComponent.prototype, "filesAddedCount", {
            get: function () {
                return i1.formatString(this.texts.filesAddedCount, this.files.length);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptUploaderComponent.prototype, "filesUploadedCount", {
            get: function () {
                return i1.formatString(this.texts.filesUploadedCount, this.uploaded.length, this.files.length);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptUploaderComponent.prototype, "directorySearch", {
            get: function () {
                return i1.formatString(this.texts.directorySearch, this.currentFolder);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptUploaderComponent.prototype, "chunkSize", {
            get: function () {
                return lodashEs.isNil(this._chunkSize) ? this._chunkSize : this._chunkSize.toString();
            },
            set: function (value) {
                this._chunkSize = lodashEs.isNil(value) ? value : i1.retrieveFileSize(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptUploaderComponent.prototype, "maxFileSize", {
            get: function () {
                return this._maxFileSize.toString();
            },
            set: function (value) {
                this._maxFileSize = i1.retrieveFileSize(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptUploaderComponent.prototype, "hostClasses", {
            get: function () {
                return [
                    this.mainCls,
                    'adapt-uploader',
                    this.enableDnD ? '' : 'is-no-dnd',
                    this.isErrorExist ? 'has-danger' : '',
                    this.isWarningExist ? 'has-warning' : '',
                    this.disabled ? 'disabled' : '',
                    this.readonly ? 'readonly' : '',
                    this.suppressIcons ? 'prevent-success-icon' : ''
                ].join(' ');
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptUploaderComponent.prototype, "isErrorExist", {
            get: function () {
                return this.required && !this.files.length && (this.customFormControl ? this.control.touched : this._isTouched);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptUploaderComponent.prototype, "isWarningExist", {
            get: function () {
                return !!this.statusMessages.length && this.statusMessages.some(function (message) { return message.variant === i1.MessageStatus.Warning; });
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptUploaderComponent.prototype, "uploadLimitExceed", {
            get: function () {
                return i1.formatString(this.texts.uploadFilesLimit, this.filesCount - this.files.length);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptUploaderComponent.prototype, "value", {
            get: function () {
                return this._value;
            },
            set: function (v) {
                this._value = v;
            },
            enumerable: false,
            configurable: true
        });
        AdaptUploaderComponent.prototype.ngOnInit = function () {
            var _this = this;
            // Sending radar event directly to avoid issues with the premature invocation of "initControl" in parent ngOnInit()
            // ERROR NullInjectorError: R3InjectorError(AppModule)[NgControl -> NgControl -> NgControl]:
            // So do not call super.ngOnInit() here
            // TODO: ?
            this._adaptRadarService.sendGenericComponentEvent(i1.AdaptRadarAngularCustomEventName.AdaptUploader);
            if (this.customFormControl) {
                this.initControl();
            }
            this.initTextsValues();
            this.initFileErrors();
            this._customErrorTexts = Object.assign({ required: {
                    name: '',
                    text: this.texts.required
                } }, this._customErrorTexts);
            this.iconService.init(this.icons);
            this.fileManager.messagesSubject
                .pipe(operators.takeUntil(this._destroyed$))
                .subscribe(function (msg) {
                _this.statusMessages.push(msg);
            });
            this.fileManager.uploadingStartSubject.pipe(operators.takeUntil(this._destroyed$)).subscribe(function (_a) {
                var file = _a.file;
                var fileEvent = Object.assign(Object.assign({}, file), {
                    // Perhaps always id === 1, because it is the first chunk or file,
                    // but just in case this algorithm
                    id: _this.fileManager.getFileRequestId(_this.fileManager.getChunkStart(i1.INITIAL_CHUNK_NUMBER, _this._chunkSize), _this._chunkSize)
                });
                _this.startFileUploading.emit(fileEvent);
            });
            this.fileManager.uploadedSubject.pipe(operators.takeUntil(this._destroyed$)).subscribe(function (file) {
                _this.uploaded.push(file);
                _this.endFileUploading.emit(file);
            });
            this.fileManager.canceledSubject.pipe(operators.takeUntil(this._destroyed$)).subscribe(function (files) {
                _this.cancelUploading.emit(files);
            });
            this.fileManager.errorUploadingSubject.pipe(operators.takeUntil(this._destroyed$))
                .subscribe(function (data) {
                _this.errorFileUploading.emit(data);
            });
            this.fileManager.uploadingFinishedSubject.pipe(operators.takeUntil(this._destroyed$)).subscribe(function (files) {
                _this.finishedFileUploading.emit(files);
            });
            this.cloudColor = this._defaultCloudColor;
            var _loop_1 = function (prop) {
                if (prop) {
                    this_1.overrideBuildInValidatorMessage(prop, function () { return _this._customErrorTexts[prop]; });
                }
            };
            var this_1 = this;
            for (var prop in this._customErrorTexts) {
                _loop_1(prop);
            }
            this._filesListDiffer = this._differs.find(this.showFiles).create();
            if (this.tooltipIconCls && !this.popoverIcon) {
                this.tooltipConfig = {
                    iconName: this.tooltipIconCls,
                    content: this.tooltipText,
                    placement: 'top',
                    popoverMode: false
                };
            }
            else if (this.popoverIcon) {
                this.tooltipConfig = {
                    iconName: this.popoverIcon,
                    content: this.popoverContent,
                    placement: this.popoverPlacement,
                    popoverMode: true,
                    popoverTriggers: this.popoverTriggers
                };
            }
        };
        AdaptUploaderComponent.prototype.setDefaultTexts = function (translation) {
            this.uploaderTextsDefault.fileBtn = translation['adapt.uploader.attachFiles'];
            this.uploaderTextsDefault.folderBtn = translation['adapt.uploader.attachFolder'];
            this.uploaderTextsDefault.allowedTypes = translation['adapt.uploader.allowedTypes'];
            this.uploaderTextsDefault.fileTypesDivider = translation['adapt.uploader.fileTypesDivider'];
            this.uploaderTextsDefault.maxFileSize = translation['adapt.uploader.maxFileSize'];
            this.uploaderTextsDefault.filesCount = translation['adapt.uploader.filesCount'];
            this.uploaderTextsDefault.fileMode = translation['adapt.uploader.fileMode'];
            this.uploaderTextsDefault.dirMode = translation['adapt.uploader.dirMode'];
            this.uploaderTextsDefault.mixMode = translation['adapt.uploader.mixMode'];
            this.uploaderTextsDefault.dragAndDrop = translation['adapt.uploader.dragAndDrop'];
            this.uploaderTextsDefault.uploadFilesLimit = translation['adapt.uploader.uploadFilesLimit'];
            this.uploaderTextsDefault.required = translation['adapt.uploader.required'];
            this.uploaderTextsDefault.showMore = translation['adapt.uploader.showMore'];
            this.uploaderTextsDefault.showLess = translation['adapt.uploader.showLess'];
            this.uploaderTextsDefault.btnMaxFilesTooltip = translation['adapt.uploader.maxFilesTooltip'];
            this.uploaderTextsDefault.btnCancelUploading = translation['adapt.uploader.cancelUploading'];
            this.uploaderTextsDefault.btnRemoveFile = translation['adapt.uploader.removeFile'];
            this.uploaderTextsDefault.btnDeleteFile = translation['adapt.uploader.deleteFile'];
            this.uploaderTextsDefault.btnRemoveCanceled = translation['adapt.uploader.removeCanceled'];
            this.uploaderTextsDefault.btnDownloadFile = translation['adapt.uploader.downloadFile'];
            this.uploaderTextsDefault.fileStatus.canceled = translation['adapt.uploader.fileStatus.canceled'];
            this.uploaderTextsDefault.fileStatus.uploaded = translation['adapt.uploader.fileStatus.uploaded'];
            this.uploaderTextsDefault.fileStatus.uploading = translation['adapt.uploader.fileStatus.uploading'];
            this.uploaderTextsDefault.filesAddedCount = translation['adapt.uploader.filesAddedCount'];
            this.uploaderTextsDefault.filesUploadedCount = translation['adapt.uploader.filesUploadedCount'];
            this.uploaderTextsDefault.directorySearch = translation['adapt.uploader.directorySearch'];
            this.uploaderTextsDefault.remainingFilesListLabel = translation['adapt.uploader.remainingFilesListLabel'];
            this.uploaderTextsDefault.btnCancelAllUploads = translation['adapt.uploader.cancelAllUploads'];
            this.uploaderTextsDefault.notFound = translation['adapt.uploader.notFound'];
            this.uploaderTextsDefault.comma = translation['adapt.common.comma'];
        };
        AdaptUploaderComponent.prototype.setFilesList = function (files) {
            var _this = this;
            var changes = this._filesListDiffer.diff(files);
            if (changes) {
                changes.forEachAddedItem(function (file) {
                    _this.showFiles.push(file.item);
                    _this.fileManager.updateFilesStorage(file.item, true);
                });
                changes.forEachRemovedItem(function (file) {
                    var index = _this.showFiles.indexOf(file.item);
                    if (index >= 0) {
                        _this.showFiles.splice(index, 1);
                    }
                    _this.fileManager.decreaseFilesStorage(file.item);
                });
                this._markComponentTouched();
                this._propagateChanges();
                this._componentEmptyState();
            }
        };
        AdaptUploaderComponent.prototype.writeValue = function (value) {
            if (value && value.length) {
                this.showFiles = value;
                this.fileManager.updateFilesStorage(value);
                this.clearWarningMessages();
            }
            else {
                this.fileManager.resetFilesStorage();
            }
            this._propagateChanges();
        };
        AdaptUploaderComponent.prototype.registerOnChange = function (fn) {
            this.propagateChange = fn;
        };
        AdaptUploaderComponent.prototype.registerOnTouched = function (fn) {
            this._onTouchedCallback = fn;
        };
        AdaptUploaderComponent.prototype.validate = function () {
            return null;
        };
        AdaptUploaderComponent.prototype.setDisabledState = function (isDisabled) {
            this.disabled = isDisabled;
        };
        AdaptUploaderComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            _super.prototype.ngAfterViewInit.call(this);
            if (!this.droppableArea) {
                this.droppableArea = this.droppableAreaBlock.nativeElement;
            }
            if (i1.isUndefined(this.fileInput.nativeElement.webkitdirectory)) {
                i1.adaptWarn(this.folderUploadingForbiddenMsg);
                this.isFoldersNotAllowed = true;
                this.selectionMode = i1.UploaderSelectionMode.File;
                i1.SafeCdr.detectChanges(this.cd);
            }
            if (this.enableDnD) {
                this.addDragEvents();
            }
            rxjs.fromEvent(this.fileInput.nativeElement, 'change')
                .pipe(operators.takeUntil(this._destroyed$))
                .subscribe(function (e) {
                _this.onChangeFileInput(e);
            });
        };
        AdaptUploaderComponent.prototype.addDragEvents = function () {
            this._onDragEnter = this.ondragEnter.bind(this);
            this.droppableArea.addEventListener('dragenter', this._onDragEnter);
            this._onDragOver = this.ondragOver.bind(this);
            this.droppableArea.addEventListener('dragover', this._onDragOver);
            this._onDragLeave = this.ondragLeave.bind(this);
            this.droppableArea.addEventListener('dragleave', this._onDragLeave);
            this._onDragDrop = this.ondragDrop.bind(this);
            this.droppableArea.addEventListener('drop', this._onDragDrop);
            document.addEventListener('dragover', this._preventDefault);
            document.addEventListener('drop', this._preventDefault);
        };
        AdaptUploaderComponent.prototype.initFileErrors = function () {
            var _this = this;
            if (this.fileErrors) {
                this.fileManager.fileErrors = Object.assign(Object.assign({}, this.fileManager.fileErrors), this.fileErrors);
                Object.keys(this.fileManager.fileErrors).forEach(function (key) { return _this.fileManager.messages[key] = {
                    errorMessage: '',
                    files: []
                }; });
            }
        };
        AdaptUploaderComponent.prototype.initTextsValues = function () {
            this.texts = Object.assign(Object.assign({}, this.uploaderTextsDefault), this.texts);
        };
        AdaptUploaderComponent.prototype.ngOnChanges = function (changes) {
            if (changes.texts && !i1.isUndefined(changes.texts.previousValue)) {
                this.initTextsValues();
            }
            if (changes.fileErrors && !i1.isUndefined(changes.fileErrors.previousValue)) {
                this.initFileErrors();
            }
        };
        AdaptUploaderComponent.prototype.ngOnDestroy = function () {
            _super.prototype.ngOnDestroy.call(this);
            if (!this.disabled && this.enableDnD) {
                this.droppableArea.removeEventListener('dragenter', this._onDragEnter);
                this.droppableArea.removeEventListener('dragover', this._onDragOver);
                this.droppableArea.removeEventListener('dragleave', this._onDragLeave);
                this.droppableArea.removeEventListener('drop', this._onDragDrop);
                document.removeEventListener('dragover', this._preventDefault);
                document.removeEventListener('drop', this._preventDefault);
            }
            this.cancelAllUploads();
            this._destroyed$.next(true);
            this._destroyed$.complete();
        };
        AdaptUploaderComponent.prototype.cancelAllUploads = function () {
            if (this.files.every(function (file) { return !file.inUploading; })) {
                return;
            }
            var uploadInputs = {
                chunkSize: this._chunkSize,
                uploadUrl: this.url,
                customErrors: this.customErrors
            };
            this.fileManager.abortUploading(uploadInputs);
        };
        AdaptUploaderComponent.prototype.ondragEnter = function (e) {
            e.preventDefault();
            e.stopPropagation();
            if (this.disabled || this.readonly || this._droppable || !this.dataHasFiles(e) || this.hasMaxFileCountSelected) {
                return;
            }
            // check if the upload files limit exceeded
            // event.dataTransfer.items is not available in Internet Explorer and Safari
            // Mime types or number of dragged files can therefore not be determined in drag events, only on drop
            // so we explicitly set the value to 0
            var dndFilesCount = e.dataTransfer.items ? e.dataTransfer.items.length : 0;
            this.isUploadLimitExceed = dndFilesCount > (this.filesCount - this.files.length);
            this.isDragOverMask = true;
            this._renderer.addClass(this.droppableArea, 'adapt-drop-wrp');
            this._renderer.addClass(this.dropEnter.nativeElement, 'pointer-events');
            this._droppable++;
            this._createAnimationPlayers();
            this._animateDndChange();
        };
        AdaptUploaderComponent.prototype.ondragOver = function (e) {
            e.preventDefault();
            e.stopPropagation();
            if (this.disabled || this.readonly || this.isUploadLimitExceed) {
                e.dataTransfer.dropEffect = 'none';
            }
            this.dragOver.emit(null);
        };
        AdaptUploaderComponent.prototype.ondragLeave = function (e) {
            e.preventDefault();
            e.stopPropagation();
            if (e.target !== this.droppableArea) {
                return;
            }
            this._droppable--;
            if (!this._droppable) {
                this.isDragOverMask = false;
                this._animateDndChange();
                this._renderer.removeClass(this.dropEnter.nativeElement, 'pointer-events');
                this._renderer.removeClass(this.droppableArea, 'adapt-drop-wrp');
                this._markComponentTouched();
                this._componentEmptyState();
            }
        };
        AdaptUploaderComponent.prototype.ondragDrop = function (e) {
            var _this = this;
            e.preventDefault();
            e.stopPropagation();
            this.clearWarningMessages();
            this._markComponentTouched();
            if (this.hasMaxFileCountSelected) {
                return;
            }
            if (i1.isUndefined(this.fileInput.nativeElement.webkitdirectory)) {
                var files = i1.toArray(e.dataTransfer.files);
                this.addFilesEmission(files);
                this._componentEmptyState();
                return;
            }
            var items = i1.toArray(e.dataTransfer.items);
            this.resolveDroppedItems(items).then(function (values) {
                _this.addFilesEmission(values);
                _this._componentEmptyState();
            }, function (err) {
                _this.statusMessages.push({ title: err.name, text: err.message, variant: i1.MessageStatus.Warning });
                _this.addFilesEmission([]);
                _this._componentEmptyState();
            });
        };
        AdaptUploaderComponent.prototype.resolveDroppedItems = function (items) {
            var _this = this;
            return new Promise(function (resolve, reject) {
                var promises = [];
                var files = [];
                items.forEach(function (item) {
                    var itemEntry = item.webkitGetAsEntry();
                    if (itemEntry.isDirectory) {
                        // Allowed to upload directories and browser know about directories
                        if (_this.allowDirUploading()) {
                            _this.readFolder = true;
                            promises.push(_this.getDirectory(itemEntry));
                            return;
                        }
                        // check if folderSuppress error is already added to the statusMessages array
                        var messageIndex = _this.statusMessages
                            .map(function (message) { return message.text; })
                            .indexOf(_this.fileManager.fileErrors.folderSuppress);
                        if (messageIndex === -1) {
                            _this.statusMessages.push({
                                text: _this.fileManager.fileErrors.folderSuppress,
                                variant: i1.MessageStatus.Warning
                            });
                        }
                    }
                    if (itemEntry.isFile) {
                        if (_this.selectionMode === i1.UploaderSelectionMode.Directory) {
                            // check if fileSuppress error is already added to the statusMessages array
                            var messageIndex = _this.statusMessages
                                .map(function (message) { return message.text; })
                                .indexOf(_this.fileManager.fileErrors.fileSuppress);
                            if (messageIndex === -1) {
                                _this.statusMessages.push({
                                    text: _this.fileManager.fileErrors.fileSuppress,
                                    variant: i1.MessageStatus.Warning
                                });
                            }
                            return;
                        }
                        promises.push(_this.getFile(itemEntry));
                    }
                });
                Promise.all(promises).then(function (values) {
                    files = values.reduce(function (acc, item) {
                        return acc.concat(item);
                    }, files);
                    _this.readFolder = false;
                    resolve(files);
                }, function (err) {
                    _this.statusMessages.push({ title: err.name, text: err.message, variant: i1.MessageStatus.Warning });
                    _this.readFolder = false;
                    reject(err);
                });
            });
        };
        /**
         * Manages ability to select files via file dialog window
         */
        AdaptUploaderComponent.prototype.disableFileDialog = function () {
            return !this.enableFileDialog;
        };
        /**
         * Allows/Forbids to select multiple files for uploading
         */
        AdaptUploaderComponent.prototype.isMultipleAllowed = function () {
            return this.filesCount > 1;
        };
        /**
         * Opens file dialog window for files selection, fires appropriate events
         */
        AdaptUploaderComponent.prototype.openFileDialog = function (isDir) {
            if (!i1.isUndefined(this.fileInput.nativeElement.webkitdirectory)) {
                this.fileInput.nativeElement.webkitdirectory = !!isDir;
            }
            this.beforeFileDialogOpen.emit(null);
            this.fileInput.nativeElement.click();
            this.afterFileDialogOpen.emit(null);
        };
        AdaptUploaderComponent.prototype.onChangeFileInput = function (e) {
            var files = i1.toArray(e.target.files);
            if (files.length) {
                this.addFiles(files);
            }
            this._markComponentTouched();
            this._componentEmptyState();
        };
        AdaptUploaderComponent.prototype.isManualMode = function () {
            return this.mode === i1.UploaderMode.Manual;
        };
        AdaptUploaderComponent.prototype.allowFileUploading = function () {
            return this.selectionMode === i1.UploaderSelectionMode.File || this.selectionMode === i1.UploaderSelectionMode.Both;
        };
        AdaptUploaderComponent.prototype.allowDirUploading = function () {
            return this.selectionMode === i1.UploaderSelectionMode.Directory || this.selectionMode === i1.UploaderSelectionMode.Both;
        };
        AdaptUploaderComponent.prototype.fileMode = function () {
            return i1.UploaderSelectionMode.File;
        };
        AdaptUploaderComponent.prototype.dirMode = function () {
            return i1.UploaderSelectionMode.Directory;
        };
        AdaptUploaderComponent.prototype.mixMode = function () {
            return i1.UploaderSelectionMode.Both;
        };
        AdaptUploaderComponent.prototype.allowedUploading = function () {
            return this.reusable || !this._alreadyUsed;
        };
        AdaptUploaderComponent.prototype.startUploading = function () {
            if (this.readonly || this.disabled) {
                return;
            }
            this._markComponentTouched();
            if (this.isErrorExist) {
                if (!this.customFormControl) {
                    // check if required error is already added to the statusMessages array
                    var messageIndex = this.statusMessages
                        .map(function (message) { return message.text; })
                        .indexOf(this.texts.required);
                    if (messageIndex === -1) {
                        this.statusMessages.push({ text: this.texts.required, variant: i1.MessageStatus.Danger });
                    }
                }
                return;
            }
            if (this.allowedUploading()) {
                var uploadInputs = {
                    chunkSize: this._chunkSize,
                    uploadUrl: this.url,
                    customErrors: this.customErrors
                };
                this.fileManager.startUploading(uploadInputs);
                if (!this.reusable) {
                    this._alreadyUsed = true;
                }
            }
        };
        AdaptUploaderComponent.prototype.removedFromQueue = function (file) {
            var index = this.uploaded.indexOf(file);
            if (index >= 0) {
                this.uploaded.splice(index, 1);
            }
            if (!file.canceled) {
                this.removedFileFromQueue.emit(file);
            }
            this._markComponentTouched();
            this._propagateChanges();
            this._componentEmptyState();
        };
        AdaptUploaderComponent.prototype.fileDeleted = function (file) {
            var index = this.uploaded.indexOf(file);
            if (index >= 0) {
                this.uploaded.splice(index, 1);
            }
            this.deletedFile.emit(file);
            this._markComponentTouched();
            this._propagateChanges();
            this._componentEmptyState();
        };
        AdaptUploaderComponent.prototype.clearWarningMessages = function () {
            this.statusMessages = [];
        };
        /**
         * Adds files to uploader service
         */
        AdaptUploaderComponent.prototype.addFiles = function (files) {
            this.clearWarningMessages();
            if (this.allowedUploading()) {
                if (this.mode === i1.UploaderMode.Auto && !this.reusable) {
                    this._alreadyUsed = true;
                }
                this.beforeFilesAdded.emit(files);
                this.fileManager.addFiles(files, this.allowDeletion, this.mode, this.suppressParallel, this.allowDuplicates, this._maxFileSize, this._chunkSize, this.allowedTypes, this.forbiddenTypes, this.filesCount, this.customErrors, this.url);
                this.afterFilesAdded.emit(files);
                this._propagateChanges();
                // don't do "value = ''" due to secondary event firing in IE with 0 files
                // thus statusMessages are cleared
                // uncomment selection - we need to clear input element, so input change event would fire
                // for the IE we have validation for the files array length
                this.fileInput.nativeElement.value = '';
                this._positioned = false;
            }
        };
        AdaptUploaderComponent.prototype._updateStorageWithUploadedFiles = function () {
            if (this.showFiles) {
                this.fileManager.updateFilesStorage(this.showFiles, true);
            }
        };
        /**
         * Checks if the dragged data has files
         */
        AdaptUploaderComponent.prototype.dataHasFiles = function (e) {
            var types = Array.prototype.slice.call(e.dataTransfer.types);
            return types.indexOf('Files') !== -1;
        };
        AdaptUploaderComponent.prototype.getFile = function (item, dirName) {
            if (dirName === void 0) { dirName = ''; }
            return new Promise(function (resolve, reject) {
                item.file(function (f) {
                    f.fullPath = dirName ? dirName + "/" + f.name : f.name;
                    resolve(f);
                }, function (err) {
                    reject(err);
                });
            });
        };
        AdaptUploaderComponent.prototype.getDirectory = function (item) {
            var _this = this;
            this.currentFolder = item.name;
            return new Promise(function (resolve, reject) {
                var promises = [];
                var reader = item.createReader();
                reader.readEntries(function (entries) {
                    entries.forEach(function (entry) {
                        var promise;
                        if (entry.isDirectory) {
                            promise = _this.getDirectory(entry);
                        }
                        else if (entry.isFile) {
                            promise = _this.getFile(entry, item.fullPath.slice(1));
                        }
                        if (promise) {
                            promises.push(promise);
                        }
                    });
                    Promise.all(promises).then(function (values) {
                        var dirFiles = [];
                        dirFiles = values.reduce(function (acc, value) {
                            return acc.concat(value);
                        }, dirFiles);
                        resolve(dirFiles);
                    }, function (err) {
                        reject(err);
                    });
                });
            });
        };
        AdaptUploaderComponent.prototype.addFilesEmission = function (files) {
            this.dropArea.emit(null);
            if (files.length) {
                this.addFiles(files);
            }
            this._droppable = 0;
            this.isDragOverMask = false;
            this._animateDndChange();
            this._renderer.removeClass(this.droppableArea, 'adapt-drop-wrp');
            this._renderer.removeClass(this.dropEnter.nativeElement, 'pointer-events');
        };
        AdaptUploaderComponent.prototype._preventDefault = function (e) {
            e.preventDefault();
            e.stopPropagation();
        };
        AdaptUploaderComponent.prototype._animateDndChange = function () {
            var _this = this;
            this._animationPlayers.hiddenDnd.reset();
            this._animationPlayers.visibleDnd.reset();
            this._animationPlayers.hiddenDrop.reset();
            this._animationPlayers.visibleDrop.reset();
            var currentPlayerDnd = this.isDragOverMask ? this._animationPlayers.hiddenDnd : this._animationPlayers.visibleDnd;
            var currentPlayerDrop = this.isDragOverMask ? this._animationPlayers.visibleDrop : this._animationPlayers.hiddenDrop;
            currentPlayerDnd.play();
            currentPlayerDrop.play();
            currentPlayerDrop.onDone(function () {
                if (!_this._droppable) {
                    _this.isUploadLimitExceed = false;
                }
            });
        };
        AdaptUploaderComponent.prototype._createAnimationPlayers = function () {
            var _this = this;
            var players = Object.keys(this._animationPlayers);
            players.forEach(function (player) {
                if (_this._animationPlayers[player]) {
                    _this._animationPlayers[player].destroy();
                }
            });
            this._animationPlayers.hiddenDnd = this._animationBuilder.build(i1.ANIMATION_DND.hidden[this._dir.value])
                .create(this.dnd.nativeElement);
            this._animationPlayers.visibleDnd = this._animationBuilder.build(i1.ANIMATION_DND.visible[this._dir.value])
                .create(this.dnd.nativeElement);
            this._animationPlayers.hiddenDrop = this._animationBuilder.build(i1.ANIMATION_DROP.hidden[this._dir.value])
                .create(this.drop.nativeElement);
            this._animationPlayers.visibleDrop = this._animationBuilder.build(i1.ANIMATION_DROP.visible[this._dir.value])
                .create(this.drop.nativeElement);
        };
        AdaptUploaderComponent.prototype._componentEmptyState = function () {
            if (this.files.length) {
                return;
            }
            if (this.isErrorExist && !this.customFormControl) {
                // check if required error is already added to the statusMessages array
                var messageIndex = this.statusMessages
                    .map(function (message) { return message.text; })
                    .indexOf(this.texts.required);
                if (messageIndex === -1) {
                    this.statusMessages.push({ text: this.texts.required, variant: i1.MessageStatus.Danger });
                }
            }
        };
        AdaptUploaderComponent.prototype._markComponentTouched = function () {
            this._isTouched = true;
            this._onTouchedCallback();
        };
        AdaptUploaderComponent.prototype._propagateChanges = function () {
            this.propagateChange(this.files);
            this.valueChange.emit(this.files);
        };
        AdaptUploaderComponent.prototype._updateUploadedFiles = function () {
            var _this = this;
            this.uploaded = [];
            if (this.showFiles.length) {
                this.showFiles.forEach(function (file) {
                    if (file.uploaded === i1.FILE_IS_UPLOADED_PERCENTAGE && !file.canceled && !file.error) {
                        _this.uploaded.push(file);
                    }
                });
            }
            this._updateStorageWithUploadedFiles();
        };
        return AdaptUploaderComponent;
    }(i1.FormComponent));
    AdaptUploaderComponent.ɵfac = function AdaptUploaderComponent_Factory(t) { return new (t || AdaptUploaderComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.FileManager), i0__namespace.ɵɵdirectiveInject(i1__namespace.IconManager), i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef), i0__namespace.ɵɵdirectiveInject(i2__namespace$1.Directionality), i0__namespace.ɵɵdirectiveInject(i1__namespace$1.AnimationBuilder), i0__namespace.ɵɵdirectiveInject(i0__namespace.Injector), i0__namespace.ɵɵdirectiveInject(i0__namespace.IterableDiffers), i0__namespace.ɵɵdirectiveInject(i0__namespace.ChangeDetectorRef), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService)); };
    AdaptUploaderComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptUploaderComponent, selectors: [["adapt-uploader"]], viewQuery: function AdaptUploaderComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$3, 5);
                i0__namespace.ɵɵviewQuery(_c1$3, 5);
                i0__namespace.ɵɵviewQuery(_c2$3, 5);
                i0__namespace.ɵɵviewQuery(_c3$2, 5);
                i0__namespace.ɵɵviewQuery(_c4$1, 5);
                i0__namespace.ɵɵviewQuery(_c5$1, 5);
                i0__namespace.ɵɵviewQuery(i1.AdaptUploaderItemComponent, 5);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.fileInput = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.fileList = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.dropEnter = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.dnd = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.drop = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.droppableAreaBlock = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.filesList = _t);
            }
        }, hostVars: 2, hostBindings: function AdaptUploaderComponent_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵclassMap(ctx.hostClasses);
            }
        }, inputs: { mode: "mode", selectionMode: "selectionMode", enableDnD: "enableDnD", enableFileDialog: "enableFileDialog", allowedTypes: "allowedTypes", forbiddenTypes: "forbiddenTypes", suppressParallel: "suppressParallel", filesCount: "filesCount", allowDuplicates: "allowDuplicates", label: "label", showUploadFolderAlert: "showUploadFolderAlert", url: "url", deleteUrl: "deleteUrl", icons: "icons", visibleFiles: "visibleFiles", reusable: "reusable", indeterminateFileLoader: "indeterminateFileLoader", ariaDescribedBy: "ariaDescribedBy", allowDeletion: "allowDeletion", texts: "texts", showFiles: "showFiles", fileErrors: "fileErrors", droppableArea: "droppableArea", customErrors: "customErrors", name: "name", customFormControl: "customFormControl", chunkSize: "chunkSize", maxFileSize: "maxFileSize" }, outputs: { beforeFileDialogOpen: "beforeFileDialogOpen", afterFileDialogOpen: "afterFileDialogOpen", beforeFilesAdded: "beforeFilesAdded", afterFilesAdded: "afterFilesAdded", dropArea: "dropArea", dragOver: "dragOver", startFileUploading: "startFileUploading", endFileUploading: "endFileUploading", errorFileUploading: "errorFileUploading", finishedFileUploading: "finishedFileUploading", removedFileFromQueue: "removedFileFromQueue", deletedFile: "deletedFile", cancelUploading: "cancelUploading", valueChange: "valueChange", focus: "focus", blur: "blur" }, features: [i0__namespace.ɵɵProvidersFeature([
                i1.createFormControlValueAccessor(AdaptUploaderComponent),
                i1.createFormControlValidator(AdaptUploaderComponent),
                i1.FileManager,
                i1.IconManager
            ]), i0__namespace.ɵɵInheritDefinitionFeature, i0__namespace.ɵɵNgOnChangesFeature], ngContentSelectors: _c11, decls: 48, vars: 12, consts: [["type", "file", "hidden", "", 3, "multiple"], ["fileInput", ""], [1, "adapt-uploader__wrp"], ["droppableAreaBlock", ""], [1, "adapt-uploader__content"], ["dropEnter", ""], [3, "label", "requiredLabel", "showRequiredLabel", "tooltip"], [1, "adapt-uploader-dnd-animation__wrp"], [3, "ngTemplateOutlet"], [1, "adapt-uploader-block-level-text"], ["class", "adapt-uploader-messages", 3, "config", 4, "ngFor", "ngForOf"], [4, "ngIf"], ["class", "adapt-uploader-restrict", 4, "ngIf"], ["class", "adapt-uploader-list-files-wrapper", 4, "ngIf"], [3, "config", 4, "ngIf"], ["emptyTmpl", ""], ["emptyReadonly", ""], ["controlsData", ""], [1, "adapt-uploader-messages", 3, "config"], ["errorMessageTemplate", ""], ["remainingFileListTemplate", ""], [1, "remaining-files-list", 3, "adaptPopover", "adaptRadarDisableEventSending", "placement", "maxWidth"], ["ngFor", "", 3, "ngForOf"], [1, "file-name"], [1, "adapt-uploader-restrict"], ["class", "adapt-uploader-restrict-types", 4, "ngIf"], [1, "adapt-uploader-restrict-size"], [1, "d-inline-block", "mb-0"], [1, "letter-space"], [1, "adapt-uploader-restrict-files-count"], [1, "adapt-uploader-restrict-types"], [1, "adapt-uploader-list-files-wrapper"], [1, "adapt-uploader-list-files-zone"], [1, "adapt-uploader-list-files-zone__header"], ["class", "adapt-uploader-list-title p-start-3", 4, "ngIf"], ["class", "adapt-uploader-list-title p-start-3", 3, "text-info", 4, "ngIf"], ["adapt-button", "", "type", "button", "btn-type", "tertiary", "class", "adapt-uploader-cancel", 3, "adaptRadarDisableEventSending", "click", 4, "ngIf"], [3, "disabled", "readonly", "collapseBlock", "reusable", "indeterminateFileLoader", "url", "deleteUrl", "chunkSize", "customErrors", "file", "id", "texts", "afterFileRemove", "fileDeleted", 4, "ngFor", "ngForOf"], [3, "collapse"], ["fileList", "collapse"], [3, "disabled", "readonly", "reusable", "indeterminateFileLoader", "url", "deleteUrl", "chunkSize", "customErrors", "file", "id", "texts", "afterFileRemove", "fileDeleted", 4, "ngFor", "ngForOf"], ["class", "d-flex justify-content-end mt-1", 4, "ngIf"], [1, "adapt-uploader-list-title", "p-start-3"], ["adapt-button", "", "type", "button", "btn-type", "tertiary", 1, "adapt-uploader-cancel", 3, "adaptRadarDisableEventSending", "click"], [1, "d-icon-cross_adapt", "pr-1"], [3, "disabled", "readonly", "collapseBlock", "reusable", "indeterminateFileLoader", "url", "deleteUrl", "chunkSize", "customErrors", "file", "id", "texts", "afterFileRemove", "fileDeleted"], [3, "disabled", "readonly", "reusable", "indeterminateFileLoader", "url", "deleteUrl", "chunkSize", "customErrors", "file", "id", "texts", "afterFileRemove", "fileDeleted"], [1, "d-flex", "justify-content-end", "mt-1"], ["type", "button", "aria-controls", "collapseExample1", 1, "btn", "btn-link", "btn-uploader-collapse-btn", 3, "click"], [3, "config"], [3, "type", "label"], [1, "adapt-uploader-dnd-animation"], [1, "adapt-uploader-dnd"], ["dnd", ""], ["class", "d-inline-block adapt-uploader-attach-file-btn-wrap", 3, "adaptRadarDisableEventSending", "adaptTooltip", "placement", 4, "ngIf"], ["class", "d-inline-block adapt-uploader-attach-folder-btn-wrap", 3, "adaptRadarDisableEventSending", "adaptTooltip", "placement", 4, "ngIf"], [3, "ngSwitch", 4, "ngIf"], [1, "adapt-uploader-drop"], ["drop", ""], [1, "adapt-uploader-drop-animation"], ["class", "adapt-uploader-search-animation", 4, "ngIf"], [1, "d-inline-block", "adapt-uploader-attach-file-btn-wrap", 3, "adaptRadarDisableEventSending", "adaptTooltip", "placement"], ["type", "button", "adapt-button", "", "btn-type", "secondary", 1, "adapt-uploader-attach-btn", 3, "adaptRadarDisableEventSending", "disabled", "click"], [1, "btn-icon", "d-icon-file_o"], [1, "d-inline-block", "adapt-uploader-attach-folder-btn-wrap", 3, "adaptRadarDisableEventSending", "adaptTooltip", "placement"], [1, "btn-icon", "d-icon-folder_o"], [3, "ngSwitch"], ["class", "adapt-uploader-dnd-text m-start-2", 4, "ngSwitchCase"], [1, "adapt-uploader-dnd-text", "m-start-2"], [1, "adapt-uploader-drop__icon"], ["aria-hidden", "true", "xmlns", "http://www.w3.org/2000/svg", "width", "45", "height", "32", "viewBox", "0 0 72 48", 0, "xml", "space", "preserve", 1, "clound-icon", 2, "enable-background", "new 0 0 72 48"], ["fill", "#D9D9D9", "d", "M72,36c0,6.63-5.37,12-12,12H12C5.37,48,0,42.63,0,36c0-5.98,4.39-10.9,10.12-11.81C9.41,22.26,9,20.18,9,18  C9,8.06,17.06,0,27,0c6.01,0,11.32,2.96,14.59,7.49C43.54,6.56,45.7,6,48,6c8.28,0,15,6.72,15,15c0,1.14-0.15,2.24-0.39,3.3  C67.98,25.5,72,30.27,72,36z", 1, "st0"], ["aria-hidden", "true", "xmlns", "http://www.w3.org/2000/svg", "width", "45", "height", "32", "viewBox", "0 0 72 48", 0, "xml", "space", "preserve", 1, "arrow-icon", 2, "enable-background", "new 0 0 72 48"], ["fill", "#FBFBFB", "d", "M33,48V36H21l15-18l15,18H39v12H33z", 1, "st0"], [1, "adapt-uploader-drop__icon", "adapt-uploader-drop__icon-forbidden"], ["aria-hidden", "true", "xmlns", "http://www.w3.org/2000/svg", "width", "45", "height", "32", "viewBox", "0 0 64 44", 0, "xml", "space", "preserve", 1, "clound-icon__forbidden", 2, "enable-background", "new 0 0 64 44"], ["fill", "#FA7A59", "d", "M54.91,21.93c0.21-0.9,0.34-1.86,0.34-2.84c0-7.13-5.79-12.92-12.92-12.92c-1.99,0-3.85,0.49-5.53,1.29\nC33.99,3.56,29.42,1,24.25,1C15.7,1,8.75,7.95,8.75,16.5c0,1.89,0.36,3.67,0.96,5.32C4.77,22.62,1,26.86,1,32\n\tc0,5.71,4.62,10.33,10.33,10.33h41.33C58.38,42.33,63,37.71,63,32C63,27.07,59.54,22.96,54.91,21.93z M41.14,33.4\n\tc-4.75,4.73-12.22,5.01-17.31,0.85c-0.34-0.26-0.67-0.54-0.98-0.85c-0.31-0.31-0.59-0.65-0.85-0.98\n\tc-4.16-5.09-3.88-12.55,0.85-17.31c4.75-4.73,12.22-5.01,17.31-0.85c0.34,0.26,0.67,0.54,0.98,0.85s0.59,0.65,0.85,0.98\n\tC46.16,21.18,45.87,28.64,41.14,33.4z M25.67,32.41c4.06,3.15,9.92,2.87,13.64-0.85c3.72-3.72,4-9.58,0.85-13.64L25.67,32.41z\n\t M24.69,16.94c-3.72,3.72-4,9.58-0.85,13.64l14.49-14.49C34.27,12.94,28.41,13.22,24.69,16.94z"], [1, "adapt-uploader-dnd-text", "adapt-uploader-dnd-text-forbidden", "m-start-2"], [1, "adapt-uploader-search-animation"], [1, "adapt-uploader-submask-center-inner-read"], ["fill", "#fbfbfb", "aria-hidden", "true", "xmlns", "http://www.w3.org/2000/svg", "width", "50", "height", "38", "viewBox", "0 0 32 32", 1, "adapt-uploader-img-read"], ["fill", "#999999", "d", "M11.983 3.982h-7.981l-4.017 4.017v17.751c0 0.614 0.227 1.134 0.681 1.588s0.988 0.681 1.588 0.681h27.64c0.587 0 1.094-0.2 1.508-0.614s0.614-0.921 0.614-1.508v-15.896c0-0.534-0.2-1.001-0.601-1.401-0.414-0.4-0.867-0.601-1.401-0.601h-14.014l-4.017-4.017z"], ["fill", "#f2f2f2", "d", "M10.888 6.651l3.23 3.23 0.774 0.787h14.454v14.694h-26.693v-16.256l2.442-2.442h5.792z"], [1, "floating"], ["aria-hidden", "true", "xmlns", "http://www.w3.org/2000/svg", "width", "18", "height", "18", "viewBox", "0 0 32 32", 1, "adapt-uploader-img-search", "inner"], ["fill", "#666666", "d", "M31.65 28.686l-8.629-8.627c3.541-4.959 3.090-11.892-1.36-16.342-2.477-2.481-5.725-3.719-8.971-3.719-3.451 0-6.902 1.398-9.428 4.196-4.327 4.792-4.327 12.201 0 16.994 2.527 2.798 5.978 4.196 9.428 4.196 2.583 0 5.168-0.788 7.364-2.358l8.629 8.627c0.35 0.35 0.92 0.35 1.27 0l1.698-1.698c0.35-0.349 0.35-0.918 0-1.269zM6.090 19.292c-3.639-3.639-3.639-9.563 0-13.201 1.762-1.764 4.106-2.734 6.598-2.734s4.834 0.972 6.598 2.734c3.639 3.639 3.639 9.563 0 13.201-1.762 1.764-4.106 2.734-6.598 2.734s-4.837-0.972-6.598-2.734z"], ["type", "button", "adapt-button", "", "btn-type", "secondary", 1, "adapt-uploader-attach-btn", "adapt-uploader-attach-file-btn", 3, "adaptRadarDisableEventSending", "disabled", "click"], ["type", "button", "adapt-button", "", "btn-type", "secondary", 1, "adapt-uploader-attach-btn", "adapt-uploader-attach-folder-btn", 3, "adaptRadarDisableEventSending", "disabled", "click"]], template: function AdaptUploaderComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵprojectionDef();
                i0__namespace.ɵɵelement(0, "input", 0, 1);
                i0__namespace.ɵɵtext(2, "\n\n");
                i0__namespace.ɵɵelementStart(3, "div", 2, 3);
                i0__namespace.ɵɵtext(5, "\n  ");
                i0__namespace.ɵɵelementStart(6, "div", 4, 5);
                i0__namespace.ɵɵtext(8, "\n    ");
                i0__namespace.ɵɵtext(9, "\n    ");
                i0__namespace.ɵɵelement(10, "adapt-rx-control-label", 6);
                i0__namespace.ɵɵtext(11, "\n    ");
                i0__namespace.ɵɵtext(12, "\n\n    ");
                i0__namespace.ɵɵprojection(13);
                i0__namespace.ɵɵtext(14, "\n\n    ");
                i0__namespace.ɵɵelementStart(15, "div", 7);
                i0__namespace.ɵɵtext(16, "\n      ");
                i0__namespace.ɵɵtemplate(17, AdaptUploaderComponent_ng_template_17_Template, 1, 0, "ng-template", 8);
                i0__namespace.ɵɵtext(18, "\n    ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(19, "\n\n    ");
                i0__namespace.ɵɵtext(20, "\n    ");
                i0__namespace.ɵɵelementStart(21, "div", 9);
                i0__namespace.ɵɵtext(22, "\n      ");
                i0__namespace.ɵɵtemplate(23, AdaptUploaderComponent_adapt_alert_23_Template, 5, 5, "adapt-alert", 10);
                i0__namespace.ɵɵtext(24, "\n\n      ");
                i0__namespace.ɵɵtemplate(25, AdaptUploaderComponent_ng_container_25_Template, 4, 1, "ng-container", 11);
                i0__namespace.ɵɵtext(26, "\n    ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(27, "\n\n    ");
                i0__namespace.ɵɵtext(28, "\n    ");
                i0__namespace.ɵɵtemplate(29, AdaptUploaderComponent_div_29_Template, 27, 7, "div", 12);
                i0__namespace.ɵɵtext(30, "\n\n    ");
                i0__namespace.ɵɵtext(31, "\n    ");
                i0__namespace.ɵɵtemplate(32, AdaptUploaderComponent_div_32_Template, 26, 13, "div", 13);
                i0__namespace.ɵɵtext(33, "\n    ");
                i0__namespace.ɵɵtext(34, "\n\n    ");
                i0__namespace.ɵɵtemplate(35, AdaptUploaderComponent_adapt_alert_35_Template, 2, 3, "adapt-alert", 14);
                i0__namespace.ɵɵtext(36, "\n  ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(37, "\n");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(38, "\n\n");
                i0__namespace.ɵɵtemplate(39, AdaptUploaderComponent_ng_template_39_Template, 0, 0, "ng-template", null, 15, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵtext(41, "\n\n");
                i0__namespace.ɵɵtemplate(42, AdaptUploaderComponent_ng_template_42_Template, 4, 2, "ng-template", null, 16, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵtext(44, "\n\n");
                i0__namespace.ɵɵtemplate(45, AdaptUploaderComponent_ng_template_45_Template, 5, 2, "ng-template", null, 17, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵtext(47, "\n");
            }
            if (rf & 2) {
                var _r9 = i0__namespace.ɵɵreference(40);
                var _r11 = i0__namespace.ɵɵreference(43);
                var _r13 = i0__namespace.ɵɵreference(46);
                i0__namespace.ɵɵproperty("multiple", ctx.isMultipleAllowed());
                i0__namespace.ɵɵattribute("aria-label", "File Control");
                i0__namespace.ɵɵadvance(10);
                i0__namespace.ɵɵproperty("label", ctx.label)("requiredLabel", ctx.context.requiredLabel)("showRequiredLabel", ctx.context.required)("tooltip", ctx.tooltipConfig);
                i0__namespace.ɵɵadvance(7);
                i0__namespace.ɵɵproperty("ngTemplateOutlet", ctx.readonly ? ctx.files.length ? _r9 : _r11 : _r13);
                i0__namespace.ɵɵadvance(6);
                i0__namespace.ɵɵproperty("ngForOf", ctx.statusMessages);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.customFormControl && ctx.context.errors && ctx.context.errors.length && ctx.context.control.touched);
                i0__namespace.ɵɵadvance(4);
                i0__namespace.ɵɵproperty("ngIf", !ctx.readonly);
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngIf", ctx.files.length);
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngIf", ctx.isFoldersNotAllowed && ctx.showUploadFolderAlert);
            }
        }, directives: [i1__namespace.AdaptRxControlLabelComponent, i3__namespace.NgTemplateOutlet, i3__namespace.NgForOf, i3__namespace.NgIf, i1__namespace.AdaptAlertComponent, i1__namespace.AdaptPopoverDirective, i1__namespace.AdaptCollapseDirective, i1__namespace.AdaptButtonComponent, i1__namespace.AdaptUploaderItemComponent, i1__namespace.AdaptEmptyStateComponent, i1__namespace.AdaptTooltipDirective, i3__namespace.NgSwitch, i3__namespace.NgSwitchCase], pipes: [i1__namespace.FileSizePipe, i1__namespace.FileTypesPipe, i3__namespace.SlicePipe], encapsulation: 2, data: { animation: [i1.ANIMATION_INIT_STATE] } });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptUploaderComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-uploader',
                        templateUrl: './uploader.component.html',
                        providers: [
                            i1.createFormControlValueAccessor(AdaptUploaderComponent),
                            i1.createFormControlValidator(AdaptUploaderComponent),
                            i1.FileManager,
                            i1.IconManager
                        ],
                        encapsulation: i0.ViewEncapsulation.None,
                        animations: [i1.ANIMATION_INIT_STATE]
                    }]
            }], function () { return [{ type: i1__namespace.FileManager }, { type: i1__namespace.IconManager }, { type: i0__namespace.Renderer2 }, { type: i0__namespace.ElementRef }, { type: i2__namespace$1.Directionality }, { type: i1__namespace$1.AnimationBuilder }, { type: i0__namespace.Injector }, { type: i0__namespace.IterableDiffers }, { type: i0__namespace.ChangeDetectorRef }, { type: i1__namespace.AdaptTranslateService }, { type: i2__namespace.AdaptRadarService }]; }, { fileInput: [{
                    type: i0.ViewChild,
                    args: ['fileInput']
                }], fileList: [{
                    type: i0.ViewChild,
                    args: ['fileList']
                }], dropEnter: [{
                    type: i0.ViewChild,
                    args: ['dropEnter']
                }], dnd: [{
                    type: i0.ViewChild,
                    args: ['dnd']
                }], drop: [{
                    type: i0.ViewChild,
                    args: ['drop']
                }], droppableAreaBlock: [{
                    type: i0.ViewChild,
                    args: ['droppableAreaBlock']
                }], filesList: [{
                    type: i0.ViewChildren,
                    args: [i1.AdaptUploaderItemComponent]
                }], mode: [{
                    type: i0.Input
                }], selectionMode: [{
                    type: i0.Input
                }], enableDnD: [{
                    type: i0.Input
                }], enableFileDialog: [{
                    type: i0.Input
                }], allowedTypes: [{
                    type: i0.Input
                }], forbiddenTypes: [{
                    type: i0.Input
                }], suppressParallel: [{
                    type: i0.Input
                }], filesCount: [{
                    type: i0.Input
                }], allowDuplicates: [{
                    type: i0.Input
                }], label: [{
                    type: i0.Input
                }], showUploadFolderAlert: [{
                    type: i0.Input
                }], url: [{
                    type: i0.Input
                }], deleteUrl: [{
                    type: i0.Input
                }], icons: [{
                    type: i0.Input
                }], visibleFiles: [{
                    type: i0.Input
                }], reusable: [{
                    type: i0.Input
                }], indeterminateFileLoader: [{
                    type: i0.Input
                }], ariaDescribedBy: [{
                    type: i0.Input
                }], allowDeletion: [{
                    type: i0.Input
                }], texts: [{
                    type: i0.Input
                }], showFiles: [{
                    type: i0.Input
                }], fileErrors: [{
                    type: i0.Input
                }], droppableArea: [{
                    type: i0.Input
                }], customErrors: [{
                    type: i0.Input
                }], name: [{
                    type: i0.Input
                }], customFormControl: [{
                    type: i0.Input
                }], beforeFileDialogOpen: [{
                    type: i0.Output
                }], afterFileDialogOpen: [{
                    type: i0.Output
                }], beforeFilesAdded: [{
                    type: i0.Output
                }], afterFilesAdded: [{
                    type: i0.Output
                }], dropArea: [{
                    type: i0.Output
                }], dragOver: [{
                    type: i0.Output
                }], startFileUploading: [{
                    type: i0.Output
                }], endFileUploading: [{
                    type: i0.Output
                }], errorFileUploading: [{
                    type: i0.Output
                }], finishedFileUploading: [{
                    type: i0.Output
                }], removedFileFromQueue: [{
                    type: i0.Output
                }], deletedFile: [{
                    type: i0.Output
                }], cancelUploading: [{
                    type: i0.Output
                }], valueChange: [{
                    type: i0.Output
                }], focus: [{
                    type: i0.Output
                }], blur: [{
                    type: i0.Output
                }], chunkSize: [{
                    type: i0.Input
                }], maxFileSize: [{
                    type: i0.Input
                }], hostClasses: [{
                    type: i0.HostBinding,
                    args: ['class']
                }] });
    })();

    var _c0$2 = ["fileInput"];
    var _c1$2 = ["dropEnter"];
    var _c2$2 = ["dnd"];
    var _c3$1 = ["drop"];
    var _c4 = ["droppableAreaBlock"];
    function AdaptSingleUploaderComponent_ng_template_15_ng_container_5_ng_container_5_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n                ");
            i0__namespace.ɵɵelementStart(2, "div", 19);
            i0__namespace.ɵɵtext(3, "\n                  ");
            i0__namespace.ɵɵnamespaceSVG();
            i0__namespace.ɵɵelementStart(4, "svg", 20);
            i0__namespace.ɵɵtext(5, "\n                ");
            i0__namespace.ɵɵelement(6, "path", 21);
            i0__namespace.ɵɵtext(7, "\n              ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(8, "\n                  ");
            i0__namespace.ɵɵelementStart(9, "svg", 22);
            i0__namespace.ɵɵtext(10, "\n                ");
            i0__namespace.ɵɵelement(11, "path", 23);
            i0__namespace.ɵɵtext(12, "\n              ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(13, "\n                ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(14, "\n                ");
            i0__namespace.ɵɵnamespaceHTML();
            i0__namespace.ɵɵelementStart(15, "span", 24);
            i0__namespace.ɵɵtext(16);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(17, "\n              ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r16 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(16);
            i0__namespace.ɵɵtextInterpolate(ctx_r16.texts.dragAndDrop);
        }
    }
    function AdaptSingleUploaderComponent_ng_template_15_ng_container_5_ng_container_7_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n                ");
            i0__namespace.ɵɵelementStart(2, "div", 25);
            i0__namespace.ɵɵtext(3, "\n                  ");
            i0__namespace.ɵɵnamespaceSVG();
            i0__namespace.ɵɵelementStart(4, "svg", 26);
            i0__namespace.ɵɵtext(5, "\n                        ");
            i0__namespace.ɵɵelement(6, "path", 27);
            i0__namespace.ɵɵtext(7, "\n                  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(8, "\n                ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(9, "\n                ");
            i0__namespace.ɵɵnamespaceHTML();
            i0__namespace.ɵɵelementStart(10, "span", 28);
            i0__namespace.ɵɵtext(11);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(12, "\n              ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r17 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(11);
            i0__namespace.ɵɵtextInterpolate(ctx_r17.texts.uploadFilesLimit);
        }
    }
    function AdaptSingleUploaderComponent_ng_template_15_ng_container_5_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n            ");
            i0__namespace.ɵɵelementStart(2, "div", 17, 18);
            i0__namespace.ɵɵtext(4, "\n              ");
            i0__namespace.ɵɵtemplate(5, AdaptSingleUploaderComponent_ng_template_15_ng_container_5_ng_container_5_Template, 18, 1, "ng-container", 9);
            i0__namespace.ɵɵtext(6, "\n\n              ");
            i0__namespace.ɵɵtemplate(7, AdaptSingleUploaderComponent_ng_template_15_ng_container_5_ng_container_7_Template, 13, 1, "ng-container", 9);
            i0__namespace.ɵɵtext(8, "\n\n            ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(9, "\n          ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r14 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(5);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r14.isUploadLimitExceed);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r14.isUploadLimitExceed);
        }
    }
    function AdaptSingleUploaderComponent_ng_template_15_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtext(0, "\n        ");
            i0__namespace.ɵɵelementStart(1, "div", 15);
            i0__namespace.ɵɵtext(2, "\n          ");
            i0__namespace.ɵɵelementContainer(3, 16);
            i0__namespace.ɵɵtext(4, "\n          ");
            i0__namespace.ɵɵtemplate(5, AdaptSingleUploaderComponent_ng_template_15_ng_container_5_Template, 10, 2, "ng-container", 9);
            i0__namespace.ɵɵtext(6, "\n        ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(7, "\n      ");
        }
        if (rf & 2) {
            var ctx_r4 = i0__namespace.ɵɵnextContext();
            var _r10 = i0__namespace.ɵɵreference(37);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngTemplateOutlet", _r10);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r4.enableDnD);
        }
    }
    function AdaptSingleUploaderComponent_ng_container_18_adapt_uploader_item_2_Template(rf, ctx) {
        if (rf & 1) {
            var _r22_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "adapt-uploader-item", 30);
            i0__namespace.ɵɵlistener("afterFileRemove", function AdaptSingleUploaderComponent_ng_container_18_adapt_uploader_item_2_Template_adapt_uploader_item_afterFileRemove_0_listener($event) { i0__namespace.ɵɵrestoreView(_r22_1); var ctx_r21 = i0__namespace.ɵɵnextContext(2); return ctx_r21.removedFromQueue($event); })("fileDeleted", function AdaptSingleUploaderComponent_ng_container_18_adapt_uploader_item_2_Template_adapt_uploader_item_fileDeleted_0_listener($event) { i0__namespace.ɵɵrestoreView(_r22_1); var ctx_r23 = i0__namespace.ɵɵnextContext(2); return ctx_r23.fileDeleted($event); });
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var file_r19 = ctx.$implicit;
            var id_r20 = ctx.index;
            var ctx_r18 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵproperty("disabled", ctx_r18.disabled)("readonly", ctx_r18.readonly)("url", ctx_r18.url)("deleteUrl", ctx_r18.deleteUrl)("chunkSize", ctx_r18.chunkSize)("customErrors", ctx_r18.customErrors)("file", file_r19)("id", id_r20)("texts", ctx_r18.texts)("componentAnimation", false);
        }
    }
    function AdaptSingleUploaderComponent_ng_container_18_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵtemplate(2, AdaptSingleUploaderComponent_ng_container_18_adapt_uploader_item_2_Template, 1, 10, "adapt-uploader-item", 29);
            i0__namespace.ɵɵtext(3, "\n      ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r5 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngForOf", ctx_r5.files);
        }
    }
    function AdaptSingleUploaderComponent_ng_container_20_ng_template_2_Template(rf, ctx) { }
    function AdaptSingleUploaderComponent_ng_container_20_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵtemplate(2, AdaptSingleUploaderComponent_ng_container_20_ng_template_2_Template, 0, 0, "ng-template", 16);
            i0__namespace.ɵɵtext(3, "\n      ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r6 = i0__namespace.ɵɵnextContext();
            var _r12 = i0__namespace.ɵɵreference(40);
            var _r3 = i0__namespace.ɵɵreference(16);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngTemplateOutlet", ctx_r6.readonly ? _r12 : _r3);
        }
    }
    function AdaptSingleUploaderComponent_adapt_alert_26_ng_template_2_ng_container_1_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n            ");
            i0__namespace.ɵɵelementStart(2, "div", 34);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n          ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            i0__namespace.ɵɵnextContext();
            var _r29 = i0__namespace.ɵɵreference(4);
            var ctx_r28 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("adaptPopover", _r29)("adaptRadarDisableEventSending", true)("placement", "auto")("maxWidth", 600);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n              ", ctx_r28.texts.remainingFilesListLabel, "\n            ");
        }
    }
    function AdaptSingleUploaderComponent_adapt_alert_26_ng_template_2_ng_template_3_ng_template_1_span_3_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span");
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r35 = i0__namespace.ɵɵnextContext(5);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("", ctx_r35.texts.comma, " ");
        }
    }
    function AdaptSingleUploaderComponent_adapt_alert_26_ng_template_2_ng_template_3_ng_template_1_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtext(0, "\n              ");
            i0__namespace.ɵɵelementStart(1, "span", 36);
            i0__namespace.ɵɵtext(2);
            i0__namespace.ɵɵtemplate(3, AdaptSingleUploaderComponent_adapt_alert_26_ng_template_2_ng_template_3_ng_template_1_span_3_Template, 2, 1, "span", 9);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n            ");
        }
        if (rf & 2) {
            var file_r32 = ctx.$implicit;
            var last_r34 = ctx.last;
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate(file_r32.name);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("ngIf", !last_r34);
        }
    }
    function AdaptSingleUploaderComponent_adapt_alert_26_ng_template_2_ng_template_3_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtext(0, "\n            ");
            i0__namespace.ɵɵtemplate(1, AdaptSingleUploaderComponent_adapt_alert_26_ng_template_2_ng_template_3_ng_template_1_Template, 5, 2, "ng-template", 35);
            i0__namespace.ɵɵtext(2, "\n          ");
        }
        if (rf & 2) {
            var msg_r25 = i0__namespace.ɵɵnextContext(2).$implicit;
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("ngForOf", msg_r25.files);
        }
    }
    function AdaptSingleUploaderComponent_adapt_alert_26_ng_template_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtext(0);
            i0__namespace.ɵɵtemplate(1, AdaptSingleUploaderComponent_adapt_alert_26_ng_template_2_ng_container_1_Template, 5, 5, "ng-container", 9);
            i0__namespace.ɵɵtext(2, "\n\n          ");
            i0__namespace.ɵɵtemplate(3, AdaptSingleUploaderComponent_adapt_alert_26_ng_template_2_ng_template_3_Template, 3, 1, "ng-template", null, 33, i0__namespace.ɵɵtemplateRefExtractor);
            i0__namespace.ɵɵtext(5, "\n        ");
        }
        if (rf & 2) {
            var msg_r25 = i0__namespace.ɵɵnextContext().$implicit;
            i0__namespace.ɵɵtextInterpolate1("\n          ", msg_r25.text, "\n          ");
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("ngIf", msg_r25.files && msg_r25.files.length);
        }
    }
    var _c5 = function (a0, a1, a3) { return { title: a0, content: a1, type: "inline", variant: a3, icon: false }; };
    function AdaptSingleUploaderComponent_adapt_alert_26_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "adapt-alert", 31);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵtemplate(2, AdaptSingleUploaderComponent_adapt_alert_26_ng_template_2_Template, 6, 2, "ng-template", null, 32, i0__namespace.ɵɵtemplateRefExtractor);
            i0__namespace.ɵɵtext(4, "\n      ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var msg_r25 = ctx.$implicit;
            var _r26 = i0__namespace.ɵɵreference(3);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("config", i0__namespace.ɵɵpureFunction3(2, _c5, msg_r25.title ? msg_r25.title : "", _r26, msg_r25.variant));
        }
    }
    var _c6 = function (a0, a1) { return { title: a0, content: a1, type: "inline", variant: "danger", icon: false }; };
    function AdaptSingleUploaderComponent_ng_container_28_adapt_alert_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-alert", 31);
        }
        if (rf & 2) {
            var error_r39 = ctx.$implicit;
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("config", i0__namespace.ɵɵpureFunction2(2, _c6, error_r39.name, error_r39.text));
        }
    }
    function AdaptSingleUploaderComponent_ng_container_28_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵtemplate(2, AdaptSingleUploaderComponent_ng_container_28_adapt_alert_2_Template, 1, 5, "adapt-alert", 11);
            i0__namespace.ɵɵtext(3, "\n      ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r8 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngForOf", ctx_r8.context.errors);
        }
    }
    function AdaptSingleUploaderComponent_div_32_div_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 42);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵelementStart(2, "p", 40);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n        ");
            i0__namespace.ɵɵelement(5, "span", 41);
            i0__namespace.ɵɵtext(6, "\n        ");
            i0__namespace.ɵɵelementStart(7, "p", 40);
            i0__namespace.ɵɵtext(8);
            i0__namespace.ɵɵpipe(9, "fileTypes");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(10, "\n      ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r40 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r40.texts.allowedTypes);
            i0__namespace.ɵɵadvance(5);
            i0__namespace.ɵɵtextInterpolate(i0__namespace.ɵɵpipeBind2(9, 2, ctx_r40.allowedTypes, ctx_r40.texts.fileTypesDivider));
        }
    }
    function AdaptSingleUploaderComponent_div_32_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 37);
            i0__namespace.ɵɵtext(1, "\n      ");
            i0__namespace.ɵɵtemplate(2, AdaptSingleUploaderComponent_div_32_div_2_Template, 11, 5, "div", 38);
            i0__namespace.ɵɵtext(3, "\n      ");
            i0__namespace.ɵɵelementStart(4, "div", 39);
            i0__namespace.ɵɵtext(5, "\n        ");
            i0__namespace.ɵɵelementStart(6, "p", 40);
            i0__namespace.ɵɵtext(7);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(8, "\n        ");
            i0__namespace.ɵɵelement(9, "span", 41);
            i0__namespace.ɵɵtext(10, "\n        ");
            i0__namespace.ɵɵelementStart(11, "p", 40);
            i0__namespace.ɵɵtext(12);
            i0__namespace.ɵɵpipe(13, "fileSize");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(14, "\n      ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(15, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r9 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r9.allowedTypes.length);
            i0__namespace.ɵɵadvance(5);
            i0__namespace.ɵɵtextInterpolate(ctx_r9.texts.maxFileSize);
            i0__namespace.ɵɵadvance(5);
            i0__namespace.ɵɵtextInterpolate(i0__namespace.ɵɵpipeBind1(13, 3, ctx_r9.maxFileSize));
        }
    }
    function AdaptSingleUploaderComponent_ng_template_36_span_9_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span", 24);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r42 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n            ", ctx_r42.texts.fileMode, "\n          ");
        }
    }
    var _c7 = function (a0, a1, a2, a3) { return { leftStart: a0, rightStart: a1, leftEnd: a2, rightEnd: a3 }; };
    var _c8 = function (a0) { return { params: a0 }; };
    function AdaptSingleUploaderComponent_ng_template_36_Template(rf, ctx) {
        if (rf & 1) {
            var _r44_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵtext(0, "\n  ");
            i0__namespace.ɵɵelementStart(1, "div", 43, 44);
            i0__namespace.ɵɵtext(3, "\n    ");
            i0__namespace.ɵɵelementStart(4, "button", 45);
            i0__namespace.ɵɵlistener("click", function AdaptSingleUploaderComponent_ng_template_36_Template_button_click_4_listener() { i0__namespace.ɵɵrestoreView(_r44_1); var ctx_r43 = i0__namespace.ɵɵnextContext(); return ctx_r43.openFileDialog(); });
            i0__namespace.ɵɵtext(5, "\n      ");
            i0__namespace.ɵɵelement(6, "span", 46);
            i0__namespace.ɵɵtext(7);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(8, "\n\n    ");
            i0__namespace.ɵɵtemplate(9, AdaptSingleUploaderComponent_ng_template_36_span_9_Template, 2, 1, "span", 47);
            i0__namespace.ɵɵtext(10, "\n  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(11, "\n");
        }
        if (rf & 2) {
            var ctx_r11 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("@uploaderInitStateAnim", i0__namespace.ɵɵpureFunction1(11, _c8, i0__namespace.ɵɵpureFunction4(6, _c7, ctx_r11.isRtl ? "auto" : "15%", ctx_r11.isRtl ? "15%" : "auto", ctx_r11.isRtl ? "auto" : "0px", ctx_r11.isRtl ? "0px" : "auto")));
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("adaptRadarDisableEventSending", true)("disabled", ctx_r11.disabled);
            i0__namespace.ɵɵattribute("aria-label", ctx_r11.texts.fileBtn);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate1("\n      ", ctx_r11.texts.fileBtn, "\n    ");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r11.enableDnD);
        }
    }
    function AdaptSingleUploaderComponent_ng_template_39_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtext(0, "\n  ");
            i0__namespace.ɵɵelementStart(1, "adapt-empty-state", 48);
            i0__namespace.ɵɵtext(2, "\n  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(3, "\n");
        }
        if (rf & 2) {
            var ctx_r13 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("type", "objects")("adaptRadarDisableEventSending", true)("label", ctx_r13.texts.notFound);
        }
    }
    var count = 0;
    var AdaptSingleUploaderComponent = /** @class */ (function (_super) {
        __extends(AdaptSingleUploaderComponent, _super);
        function AdaptSingleUploaderComponent(fileManager, iconManager, _renderer, _elRef, _dir, _animationBuilder, _injector, ts, _adaptRadarService) {
            var _this = _super.call(this, _injector, ts, _adaptRadarService, _elRef, i1.AdaptRadarAngularCustomEventName.AdaptSingleUploader) || this;
            _this.fileManager = fileManager;
            _this.iconManager = iconManager;
            _this._renderer = _renderer;
            _this._elRef = _elRef;
            _this._dir = _dir;
            _this._animationBuilder = _animationBuilder;
            _this._injector = _injector;
            _this._adaptRadarService = _adaptRadarService;
            /* text configurations */
            _this.uploaderTextsDefault = {
                fileStatus: {}
            };
            /**
             * Label icon with a tooltip or popover
             */
            _this.tooltipConfig = null;
            /**
             * Unique id of the element.
             */
            _this.id = "adapt-single-uploader-" + count;
            _this.mode = i1.UploaderMode.Manual;
            _this.enableDnD = true;
            _this.allowedTypes = [];
            _this.forbiddenTypes = [];
            _this.icons = {};
            _this.allowDeletion = true;
            _this.customErrors = false;
            _this.allowDrop = false;
            /* uploader outputs */
            _this.beforeFileDialogOpen = new i0.EventEmitter();
            _this.afterFileDialogOpen = new i0.EventEmitter();
            _this.beforeFileAdded = new i0.EventEmitter();
            _this.afterFileAdded = new i0.EventEmitter();
            _this.startFileUploading = new i0.EventEmitter();
            _this.endFileUploading = new i0.EventEmitter();
            _this.errorFileUploading = new i0.EventEmitter();
            _this.finishedFileUploading = new i0.EventEmitter();
            _this.removedFileFromQueue = new i0.EventEmitter();
            _this.deletedFile = new i0.EventEmitter();
            _this.cancelUploading = new i0.EventEmitter();
            /**
             * Event on ngModel change
             */
            _this.valueChange = new i0.EventEmitter();
            // TODO: Refactor this if possible
            /* eslint-disable-next-line @typescript-eslint/no-explicit-any, @angular-eslint/no-output-native */
            _this.focus = new i0.EventEmitter();
            // TODO: Refactor this if possible
            /* eslint-disable-next-line @typescript-eslint/no-explicit-any, @angular-eslint/no-output-native */
            _this.blur = new i0.EventEmitter();
            // Need for using inherited properties in the template
            _this.context = _this;
            _this.statusMessages = [];
            _this.allowDuplicates = false;
            _this.filesCount = 1;
            _this.suppressParallel = false;
            _this.isDragOverMask = false;
            _this.isRtl = false;
            _this.isUploadLimitExceed = false;
            // we'll get a drop enter for the child and then a drop leave for the target!
            _this._droppable = 0;
            _this._animationPlayers = {
                visibleDnd: null,
                hiddenDnd: null,
                visibleDrop: null,
                hiddenDrop: null
            };
            _this._isTouched = false;
            _this._chunkSize = i1.FileSize.MB;
            _this._destroyed$ = new rxjs.ReplaySubject(1);
            _this._maxFileSize = i1.FileSize.MB * 20;
            _this._onTouchedCallback = function () {
                return;
            };
            _this.isRtl = _this._dir.value === 'rtl';
            count++;
            _this.setDefaultTexts(ts.getCurrentLanguage());
            return _this;
        }
        Object.defineProperty(AdaptSingleUploaderComponent.prototype, "chunkSize", {
            get: function () {
                return lodashEs.isNil(this._chunkSize) ? this._chunkSize : this._chunkSize.toString();
            },
            set: function (value) {
                this._chunkSize = lodashEs.isNil(value) ? value : i1.retrieveFileSize(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptSingleUploaderComponent.prototype, "maxFileSize", {
            get: function () {
                return this._maxFileSize.toString();
            },
            set: function (value) {
                this._maxFileSize = i1.retrieveFileSize(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptSingleUploaderComponent.prototype, "files", {
            get: function () {
                return this.fileManager.getFiles();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptSingleUploaderComponent.prototype, "hostClasses", {
            get: function () {
                return [
                    this.mainCls,
                    'adapt-single-uploader',
                    this.enableDnD ? '' : 'is-no-dnd',
                    this.isErrorExist ? 'has-danger' : '',
                    this.isWarningExist ? 'has-warning' : '',
                    this.disabled ? 'disabled' : '',
                    this.suppressIcons ? 'prevent-success-icon' : ''
                ].join(' ');
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptSingleUploaderComponent.prototype, "isErrorExist", {
            get: function () {
                return this.required && !this.files.length && (this.customFormControl ? this.control.touched : this._isTouched);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptSingleUploaderComponent.prototype, "isWarningExist", {
            get: function () {
                return !!this.statusMessages.length && this.statusMessages.some(function (message) { return message.variant === i1.MessageStatus.Warning; });
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptSingleUploaderComponent.prototype, "value", {
            get: function () {
                return this._value;
            },
            set: function (v) {
                this._value = v;
            },
            enumerable: false,
            configurable: true
        });
        AdaptSingleUploaderComponent.prototype.ngOnInit = function () {
            var _this = this;
            // Sending radar event directly to avoid issues with the premature invocation of "initControl" in parent ngOnInit()
            // ERROR NullInjectorError: R3InjectorError(AppModule)[NgControl -> NgControl -> NgControl]:
            // So do not call super.ngOnInit() here
            // TODO ?
            this._adaptRadarService.sendGenericComponentEvent(i1.AdaptRadarAngularCustomEventName.AdaptSingleUploader);
            if (this.customFormControl) {
                this.initControl();
            }
            this.texts = Object.assign(Object.assign({}, this.uploaderTextsDefault), this.texts);
            this.initFileErrors();
            this._customErrorTexts = Object.assign({ required: {
                    name: '',
                    text: this.texts.required
                } }, this._customErrorTexts);
            this.iconManager.init(this.icons);
            this.fileManager.messagesSubject
                .pipe(operators.takeUntil(this._destroyed$))
                .subscribe(function (msg) {
                _this.statusMessages.push(msg);
            });
            this.fileManager.uploadingStartSubject.pipe(operators.takeUntil(this._destroyed$)).subscribe(function (_a) {
                var file = _a.file;
                var fileEvent = Object.assign(Object.assign({}, file), {
                    // Perhaps always id === 1, because it is the first chunk or file,
                    // but just in case this algorithm
                    id: _this.fileManager.getFileRequestId(_this.fileManager.getChunkStart(i1.INITIAL_CHUNK_NUMBER, _this._chunkSize), _this._chunkSize)
                });
                _this.startFileUploading.emit(fileEvent);
            });
            this.fileManager.uploadedSubject.pipe(operators.takeUntil(this._destroyed$)).subscribe(function (file) {
                _this.endFileUploading.emit(file);
            });
            this.fileManager.canceledSubject.pipe(operators.takeUntil(this._destroyed$)).subscribe(function (files) {
                _this.cancelUploading.emit(files);
            });
            this.fileManager.errorUploadingSubject.pipe(operators.takeUntil(this._destroyed$))
                .subscribe(function (data) {
                _this.errorFileUploading.emit(data);
            });
            this.fileManager.uploadingFinishedSubject.pipe(operators.takeUntil(this._destroyed$)).subscribe(function (files) {
                _this.finishedFileUploading.emit(files);
            });
            this._updateStorageWithUploadedFile();
            var _loop_1 = function (prop) {
                if (prop) {
                    this_1.overrideBuildInValidatorMessage(prop, function () { return _this._customErrorTexts[prop]; });
                }
            };
            var this_1 = this;
            for (var prop in this._customErrorTexts) {
                _loop_1(prop);
            }
            if (this.tooltipIconCls && !this.popoverIcon) {
                this.tooltipConfig = {
                    iconName: this.tooltipIconCls,
                    content: this.tooltipText,
                    placement: 'top',
                    popoverMode: false
                };
            }
            else if (this.popoverIcon) {
                this.tooltipConfig = {
                    iconName: this.popoverIcon,
                    content: this.popoverContent,
                    placement: this.popoverPlacement,
                    popoverMode: true,
                    popoverTriggers: this.popoverTriggers
                };
            }
        };
        AdaptSingleUploaderComponent.prototype.setDefaultTexts = function (translation) {
            this.uploaderTextsDefault.fileBtn = translation['adapt.uploaderSingle.attachFiles'];
            this.uploaderTextsDefault.allowedTypes = translation['adapt.uploader.allowedTypes'];
            this.uploaderTextsDefault.fileTypesDivider = translation['adapt.uploader.fileTypesDivider'];
            this.uploaderTextsDefault.maxFileSize = translation['adapt.uploader.maxFileSize'];
            this.uploaderTextsDefault.fileMode = translation['adapt.uploaderSingle.fileMode'];
            this.uploaderTextsDefault.dragAndDrop = translation['adapt.uploaderSingle.dragAndDrop'];
            this.uploaderTextsDefault.uploadFilesLimit = translation['adapt.uploaderSingle.uploadFilesLimit'];
            this.uploaderTextsDefault.required = translation['adapt.uploader.required'];
            this.uploaderTextsDefault.btnCancelUploading = translation['adapt.uploader.cancelUploading'];
            this.uploaderTextsDefault.btnRemoveFile = translation['adapt.uploader.removeFile'];
            this.uploaderTextsDefault.btnDeleteFile = translation['adapt.uploader.deleteFile'];
            this.uploaderTextsDefault.btnRemoveCanceled = translation['adapt.uploader.removeCanceled'];
            this.uploaderTextsDefault.btnDownloadFile = translation['adapt.uploader.downloadFile'];
            this.uploaderTextsDefault.fileStatus.canceled = translation['adapt.uploader.fileStatus.canceled'];
            this.uploaderTextsDefault.fileStatus.uploaded = translation['adapt.uploader.fileStatus.uploaded'];
            this.uploaderTextsDefault.fileStatus.uploading = translation['adapt.uploader.fileStatus.uploading'];
            this.uploaderTextsDefault.remainingFilesListLabel = translation['adapt.uploader.remainingFilesListLabel'];
            this.uploaderTextsDefault.notFound = translation['adapt.uploader.notFound'];
            this.uploaderTextsDefault.comma = translation['adapt.common.comma'];
        };
        AdaptSingleUploaderComponent.prototype.writeValue = function (value) {
            if (value) {
                this.fileManager.updateFilesStorage([value]);
                this.clearWarningMessages();
            }
            else {
                this.fileManager.resetFilesStorage();
            }
            this._propagateChanges();
        };
        // TODO: Refactor this if possible
        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
        AdaptSingleUploaderComponent.prototype.registerOnChange = function (fn) {
            this.propagateChange = fn;
        };
        // TODO: Refactor this if possible
        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
        AdaptSingleUploaderComponent.prototype.registerOnTouched = function (fn) {
            this._onTouchedCallback = fn;
        };
        AdaptSingleUploaderComponent.prototype.validate = function () {
            return null;
        };
        AdaptSingleUploaderComponent.prototype.setDisabledState = function (isDisabled) {
            this.disabled = isDisabled;
        };
        AdaptSingleUploaderComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            _super.prototype.ngAfterViewInit.call(this);
            if (!this.droppableArea) {
                this.droppableArea = this.droppableAreaBlock.nativeElement;
            }
            if (this.enableDnD) {
                this.addDragEvents();
            }
            rxjs.fromEvent(this.fileInput.nativeElement, 'change')
                .pipe(operators.takeUntil(this._destroyed$))
                .subscribe(function (e) {
                _this.onChangeFileInput(e);
                _this._markComponentTouched();
                _this._componentEmptyState();
            });
        };
        AdaptSingleUploaderComponent.prototype.ngOnChanges = function (changes) {
            if (changes.texts && !lodashEs.isUndefined(changes.texts.previousValue)) {
                this.texts = Object.assign(Object.assign({}, this.uploaderTextsDefault), this.texts);
            }
            if (changes.fileErrors && !lodashEs.isUndefined(changes.fileErrors.previousValue)) {
                this.initFileErrors();
            }
        };
        AdaptSingleUploaderComponent.prototype.onChangeFileInput = function (event) {
            var files = [];
            // since we call onChangeFileInput method on both
            // input.onchange and dragDrop
            // we should first check the event.type to
            // correctly handle the files derivation
            if (event.type === 'drop') {
                // event comes from the dragDrop operation
                files = lodashEs.toArray(event.dataTransfer.files);
            }
            if (event.type === 'change') {
                // event comes from input.onchange
                files = lodashEs.toArray(event.target.files);
            }
            if (files.length) {
                this.addFiles(files);
            }
            if (this.files.length) {
                this._renderer.addClass(this._elRef.nativeElement, 'dropped');
            }
        };
        AdaptSingleUploaderComponent.prototype.initFileErrors = function () {
            var _this = this;
            if (this.fileErrors) {
                this.fileManager.fileErrors = Object.assign(Object.assign({}, this.fileManager.fileErrors), this.fileErrors);
                Object.keys(this.fileManager.fileErrors).forEach(function (key) { return _this.fileManager.messages[key] = {
                    errorMessage: '',
                    files: []
                }; });
            }
        };
        AdaptSingleUploaderComponent.prototype.addDragEvents = function () {
            this._onDragEnter = this.ondragEnter.bind(this);
            this.droppableArea.addEventListener('dragenter', this._onDragEnter);
            this._onDragOver = this.ondragOver.bind(this);
            this.droppableArea.addEventListener('dragover', this._onDragOver);
            this._onDragLeave = this.ondragLeave.bind(this);
            this.droppableArea.addEventListener('dragleave', this._onDragLeave);
            this._onDragDrop = this.ondragDrop.bind(this);
            this.droppableArea.addEventListener('drop', this._onDragDrop);
            document.addEventListener('dragover', this._preventDefault);
            document.addEventListener('drop', this._preventDefault);
        };
        AdaptSingleUploaderComponent.prototype.removedFromQueue = function (file) {
            this._renderer.removeClass(this._elRef.nativeElement, 'dropped');
            if (!file.canceled) {
                this.removedFileFromQueue.emit(file);
            }
            this._markComponentTouched();
            this._propagateChanges();
            this._componentEmptyState();
        };
        AdaptSingleUploaderComponent.prototype.fileDeleted = function (file) {
            this._renderer.removeClass(this._elRef.nativeElement, 'dropped');
            this.deletedFile.emit(file);
            this._markComponentTouched();
            this._propagateChanges();
            this._componentEmptyState();
        };
        AdaptSingleUploaderComponent.prototype.ondragEnter = function (e) {
            e.preventDefault();
            e.stopPropagation();
            if (this.disabled || this.readonly || this._droppable || !this.dataHasFiles(e) || this.files.length) {
                return;
            }
            this.isDragOverMask = true;
            // check if the upload files limit exceeded
            // event.dataTransfer.items is not available in Internet Explorer and Safari
            // Mime types or number of dragged files can therefore not be determined in drag events, only on drop
            // so we explicitly set the value to 0
            var dndFilesCount = e.dataTransfer.items ? e.dataTransfer.items.length : 0;
            this.isUploadLimitExceed = dndFilesCount > this.filesCount;
            this._renderer.addClass(this.droppableArea, 'adapt-drop-wrp');
            this._renderer.addClass(this.dropEnter.nativeElement, 'pointer-events');
            this._droppable++;
            this._createAnimationPlayers();
            this._animateDndChange();
        };
        AdaptSingleUploaderComponent.prototype.ondragOver = function (e) {
            e.preventDefault();
            e.stopPropagation();
            if (this.disabled || this.readonly || this.isUploadLimitExceed) {
                e.dataTransfer.dropEffect = 'none';
            }
        };
        AdaptSingleUploaderComponent.prototype.ondragLeave = function (e) {
            e.preventDefault();
            e.stopPropagation();
            if (e.target !== this.droppableArea) {
                return;
            }
            this._droppable--;
            if (!this._droppable) {
                this.isDragOverMask = false;
                this._animateDndChange();
                this._renderer.removeClass(this.dropEnter.nativeElement, 'pointer-events');
                this._renderer.removeClass(this.droppableArea, 'adapt-drop-wrp');
                this._markComponentTouched();
                this._componentEmptyState();
            }
        };
        AdaptSingleUploaderComponent.prototype.ondragDrop = function (e) {
            e.preventDefault();
            e.stopPropagation();
            this.clearWarningMessages();
            if (lodashEs.isUndefined(this.fileInput.nativeElement.webkitdirectory)) {
                var files = lodashEs.toArray(e.dataTransfer.files);
                if (files.length) {
                    this.addFiles(files);
                }
                if (this.files.length) {
                    this._renderer.addClass(this._elRef.nativeElement, 'dropped');
                }
            }
            else {
                var items = lodashEs.toArray(e.dataTransfer.items);
                var isDirectoryDropped = items.some(function (item) {
                    var itemEntry = item.webkitGetAsEntry();
                    return itemEntry.isDirectory;
                });
                if (isDirectoryDropped) {
                    // check if folderSuppress error is already added to the statusMessages array
                    var messageIndex = this.statusMessages
                        .map(function (message) { return message.text; })
                        .indexOf(this.fileManager.fileErrors.folderSuppress);
                    if (messageIndex === -1) {
                        this.statusMessages.push({ text: this.fileManager.fileErrors.folderSuppress, variant: i1.MessageStatus.Warning });
                    }
                }
                else {
                    this.onChangeFileInput(e);
                }
            }
            this._markComponentTouched();
            this._componentEmptyState();
            this.isDragOverMask = false;
            this._droppable = 0;
            this._renderer.removeClass(this.droppableArea, 'adapt-drop-wrp');
            this._renderer.removeClass(this.dropEnter.nativeElement, 'pointer-events');
            this._animateDndChange();
        };
        /**
         * Opens file dialog window for file selection, fires appropriate events
         */
        AdaptSingleUploaderComponent.prototype.openFileDialog = function () {
            this.beforeFileDialogOpen.emit(null);
            this.fileInput.nativeElement.click();
            this.afterFileDialogOpen.emit(null);
        };
        AdaptSingleUploaderComponent.prototype.startUploading = function () {
            if (this.readonly || this.disabled) {
                return;
            }
            this._markComponentTouched();
            if (this.isErrorExist) {
                if (!this.customFormControl) {
                    // check if required error is already added to the statusMessages array
                    var messageIndex = this.statusMessages
                        .map(function (message) { return message.text; })
                        .indexOf(this.texts.required);
                    if (messageIndex === -1) {
                        this.statusMessages.push({ text: this.texts.required, variant: i1.MessageStatus.Danger });
                    }
                }
                return;
            }
            var uploadInputs = {
                chunkSize: this._chunkSize,
                uploadUrl: this.url,
                customErrors: this.customErrors
            };
            this.fileManager.startUploading(uploadInputs);
        };
        AdaptSingleUploaderComponent.prototype.ngOnDestroy = function () {
            _super.prototype.ngOnDestroy.call(this);
            if (!this.disabled && this.enableDnD) {
                this.isDragOverMask = false;
                this.droppableArea.removeEventListener('dragenter', this._onDragEnter);
                this.droppableArea.removeEventListener('dragover', this._onDragOver);
                this.droppableArea.removeEventListener('dragleave', this._onDragLeave);
                this.droppableArea.removeEventListener('drop', this._onDragDrop);
                document.removeEventListener('dragover', this._preventDefault);
                document.removeEventListener('drop', this._preventDefault);
            }
            this._destroyed$.next(true);
            this._destroyed$.complete();
        };
        AdaptSingleUploaderComponent.prototype.clearWarningMessages = function () {
            this.statusMessages = [];
        };
        /**
         * Adds files to uploader service
         */
        AdaptSingleUploaderComponent.prototype.addFiles = function (files) {
            if (this.files.length) {
                return;
            }
            this.clearWarningMessages();
            this.beforeFileAdded.emit(files);
            this.fileManager.addFiles(files, this.allowDeletion, this.mode, this.suppressParallel, this.allowDuplicates, this._maxFileSize, this._chunkSize, this.allowedTypes, this.forbiddenTypes, this.filesCount, this.customErrors, this.url);
            this.afterFileAdded.emit(files);
            this._propagateChanges();
            // uncomment selection - we need to clear input element, so input change event would fire
            // for the IE we have validation for the files array length
            this.fileInput.nativeElement.value = '';
        };
        AdaptSingleUploaderComponent.prototype._updateStorageWithUploadedFile = function () {
            if (this.showFile) {
                this.fileManager.updateFilesStorage([this.showFile]);
                this._renderer.addClass(this._elRef.nativeElement, 'dropped');
            }
        };
        AdaptSingleUploaderComponent.prototype.dataHasFiles = function (e) {
            var types = Array.prototype.slice.call(e.dataTransfer.types);
            return types.indexOf('Files') !== -1;
        };
        AdaptSingleUploaderComponent.prototype._preventDefault = function (e) {
            e.preventDefault();
            e.stopPropagation();
        };
        AdaptSingleUploaderComponent.prototype._animateDndChange = function () {
            var _this = this;
            this._animationPlayers.hiddenDnd.reset();
            this._animationPlayers.visibleDnd.reset();
            this._animationPlayers.hiddenDrop.reset();
            this._animationPlayers.visibleDrop.reset();
            var currentPlayerDnd = this.isDragOverMask ? this._animationPlayers.hiddenDnd : this._animationPlayers.visibleDnd;
            var currentPlayerDrop = this.isDragOverMask ? this._animationPlayers.visibleDrop : this._animationPlayers.hiddenDrop;
            currentPlayerDnd.play();
            currentPlayerDrop.play();
            currentPlayerDnd.onDone(function () {
                if (!_this._droppable) {
                    _this.isUploadLimitExceed = false;
                }
            });
        };
        AdaptSingleUploaderComponent.prototype._createAnimationPlayers = function () {
            var _this = this;
            var players = Object.keys(this._animationPlayers);
            players.forEach(function (player) {
                if (_this._animationPlayers[player]) {
                    _this._animationPlayers[player].destroy();
                }
            });
            this._animationPlayers.hiddenDnd = this._animationBuilder.build(i1.ANIMATION_DND.hidden[this._dir.value])
                .create(this.dnd.nativeElement);
            this._animationPlayers.visibleDnd = this._animationBuilder.build(i1.ANIMATION_DND.visible[this._dir.value])
                .create(this.dnd.nativeElement);
            this._animationPlayers.hiddenDrop = this._animationBuilder.build(i1.ANIMATION_DROP.hidden[this._dir.value])
                .create(this.drop.nativeElement);
            this._animationPlayers.visibleDrop = this._animationBuilder.build(i1.ANIMATION_DROP.visible[this._dir.value])
                .create(this.drop.nativeElement);
        };
        AdaptSingleUploaderComponent.prototype._componentEmptyState = function () {
            if (this.files.length) {
                return;
            }
            if (this.isErrorExist && !this.customFormControl) {
                // check if required error is already added to the statusMessages array
                var messageIndex = this.statusMessages
                    .map(function (message) { return message.text; })
                    .indexOf(this.texts.required);
                if (messageIndex === -1) {
                    this.statusMessages.push({ text: this.texts.required, variant: i1.MessageStatus.Danger });
                }
            }
        };
        AdaptSingleUploaderComponent.prototype._markComponentTouched = function () {
            this._isTouched = true;
            this._onTouchedCallback();
        };
        AdaptSingleUploaderComponent.prototype._propagateChanges = function () {
            this.propagateChange(this.files);
            this.valueChange.emit(this.files);
        };
        return AdaptSingleUploaderComponent;
    }(i1.FormComponent));
    AdaptSingleUploaderComponent.ɵfac = function AdaptSingleUploaderComponent_Factory(t) { return new (t || AdaptSingleUploaderComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.FileManager), i0__namespace.ɵɵdirectiveInject(i1__namespace.IconManager), i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef), i0__namespace.ɵɵdirectiveInject(i2__namespace$1.Directionality), i0__namespace.ɵɵdirectiveInject(i1__namespace$1.AnimationBuilder), i0__namespace.ɵɵdirectiveInject(i0__namespace.Injector), i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptTranslateService), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService)); };
    AdaptSingleUploaderComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptSingleUploaderComponent, selectors: [["adapt-single-uploader"]], viewQuery: function AdaptSingleUploaderComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$2, 5);
                i0__namespace.ɵɵviewQuery(_c1$2, 5);
                i0__namespace.ɵɵviewQuery(_c2$2, 5);
                i0__namespace.ɵɵviewQuery(_c3$1, 5);
                i0__namespace.ɵɵviewQuery(_c4, 5);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.fileInput = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.dropEnter = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.dnd = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.drop = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.droppableAreaBlock = _t.first);
            }
        }, hostVars: 3, hostBindings: function AdaptSingleUploaderComponent_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵhostProperty("id", ctx.id);
                i0__namespace.ɵɵclassMap(ctx.hostClasses);
            }
        }, inputs: { id: "id", mode: "mode", enableDnD: "enableDnD", allowedTypes: "allowedTypes", forbiddenTypes: "forbiddenTypes", label: "label", url: "url", deleteUrl: "deleteUrl", icons: "icons", allowDeletion: "allowDeletion", texts: "texts", showFile: "showFile", fileErrors: "fileErrors", customErrors: "customErrors", droppableArea: "droppableArea", allowDrop: "allowDrop", name: "name", customFormControl: "customFormControl", chunkSize: "chunkSize", maxFileSize: "maxFileSize" }, outputs: { beforeFileDialogOpen: "beforeFileDialogOpen", afterFileDialogOpen: "afterFileDialogOpen", beforeFileAdded: "beforeFileAdded", afterFileAdded: "afterFileAdded", startFileUploading: "startFileUploading", endFileUploading: "endFileUploading", errorFileUploading: "errorFileUploading", finishedFileUploading: "finishedFileUploading", removedFileFromQueue: "removedFileFromQueue", deletedFile: "deletedFile", cancelUploading: "cancelUploading", valueChange: "valueChange", focus: "focus", blur: "blur" }, features: [i0__namespace.ɵɵProvidersFeature([
                i1.createFormControlValueAccessor(AdaptSingleUploaderComponent),
                i1.createFormControlValidator(AdaptSingleUploaderComponent),
                i1.FileManager,
                i1.IconManager
            ]), i0__namespace.ɵɵInheritDefinitionFeature, i0__namespace.ɵɵNgOnChangesFeature], decls: 42, vars: 10, consts: [["type", "file", "hidden", ""], ["fileInput", ""], [1, "adapt-single-uploader__wrp"], ["droppableAreaBlock", ""], [1, "adapt-single-uploader__content"], ["dropEnter", ""], [3, "label", "requiredLabel", "showRequiredLabel", "tooltip"], [1, "adapt-single-uploader-inner"], ["data", ""], [4, "ngIf"], [1, "adapt-single-uploader__warning-text", "mt-1"], ["class", "adapt-uploader-messages", 3, "adaptRadarDisableEventSending", "config", 4, "ngFor", "ngForOf"], ["class", "adapt-uploader-restrict", 4, "ngIf"], ["dragAndDrop", ""], ["readonlyEmpty", ""], [1, "adapt-single-uploader-dnd-animation"], [3, "ngTemplateOutlet"], [1, "adapt-uploader-drop"], ["drop", ""], [1, "adapt-uploader-drop__icon"], ["aria-hidden", "true", "xmlns", "http://www.w3.org/2000/svg", "width", "45", "height", "32", "viewBox", "0 0 72 48", 0, "xml", "space", "preserve", 1, "clound-icon", 2, "enable-background", "new 0 0 72 48"], ["fill", "#D9D9D9", "d", "M72,36c0,6.63-5.37,12-12,12H12C5.37,48,0,42.63,0,36c0-5.98,4.39-10.9,10.12-11.81C9.41,22.26,9,20.18,9,18  C9,8.06,17.06,0,27,0c6.01,0,11.32,2.96,14.59,7.49C43.54,6.56,45.7,6,48,6c8.28,0,15,6.72,15,15c0,1.14-0.15,2.24-0.39,3.3  C67.98,25.5,72,30.27,72,36z", 1, "st0"], ["aria-hidden", "true", "xmlns", "http://www.w3.org/2000/svg", "width", "45", "height", "32", "viewBox", "0 0 72 48", 0, "xml", "space", "preserve", 1, "arrow-icon", 2, "enable-background", "new 0 0 72 48"], ["fill", "#FBFBFB", "d", "M33,48V36H21l15-18l15,18H39v12H33z", 1, "st0"], [1, "adapt-uploader-dnd-text", "m-start-2"], [1, "adapt-uploader-drop__icon", "adapt-uploader-drop__icon-forbidden"], ["aria-hidden", "true", "xmlns", "http://www.w3.org/2000/svg", "width", "45", "height", "32", "viewBox", "0 0 64 44", 0, "xml", "space", "preserve", 1, "clound-icon__forbidden", 2, "enable-background", "new 0 0 64 44"], ["fill", "#FA7A59", "d", "M54.91,21.93c0.21-0.9,0.34-1.86,0.34-2.84c0-7.13-5.79-12.92-12.92-12.92c-1.99,0-3.85,0.49-5.53,1.29\nC33.99,3.56,29.42,1,24.25,1C15.7,1,8.75,7.95,8.75,16.5c0,1.89,0.36,3.67,0.96,5.32C4.77,22.62,1,26.86,1,32\n\tc0,5.71,4.62,10.33,10.33,10.33h41.33C58.38,42.33,63,37.71,63,32C63,27.07,59.54,22.96,54.91,21.93z M41.14,33.4\n\tc-4.75,4.73-12.22,5.01-17.31,0.85c-0.34-0.26-0.67-0.54-0.98-0.85c-0.31-0.31-0.59-0.65-0.85-0.98\n\tc-4.16-5.09-3.88-12.55,0.85-17.31c4.75-4.73,12.22-5.01,17.31-0.85c0.34,0.26,0.67,0.54,0.98,0.85s0.59,0.65,0.85,0.98\n\tC46.16,21.18,45.87,28.64,41.14,33.4z M25.67,32.41c4.06,3.15,9.92,2.87,13.64-0.85c3.72-3.72,4-9.58,0.85-13.64L25.67,32.41z\n\t M24.69,16.94c-3.72,3.72-4,9.58-0.85,13.64l14.49-14.49C34.27,12.94,28.41,13.22,24.69,16.94z"], [1, "adapt-uploader-dnd-text", "adapt-uploader-dnd-text-forbidden", "m-start-2"], [3, "disabled", "readonly", "url", "deleteUrl", "chunkSize", "customErrors", "file", "id", "texts", "componentAnimation", "afterFileRemove", "fileDeleted", 4, "ngFor", "ngForOf"], [3, "disabled", "readonly", "url", "deleteUrl", "chunkSize", "customErrors", "file", "id", "texts", "componentAnimation", "afterFileRemove", "fileDeleted"], [1, "adapt-uploader-messages", 3, "adaptRadarDisableEventSending", "config"], ["errorMessageTemplate", ""], ["remainingFileListTemplate", ""], [1, "remaining-files-list", 3, "adaptPopover", "adaptRadarDisableEventSending", "placement", "maxWidth"], ["ngFor", "", 3, "ngForOf"], [1, "file-name"], [1, "adapt-uploader-restrict"], ["class", "adapt-uploader-restrict-types", 4, "ngIf"], [1, "adapt-uploader-restrict-size"], [1, "d-inline-block", "mb-0"], [1, "letter-space"], [1, "adapt-uploader-restrict-types"], [1, "adapt-uploader-dnd"], ["dnd", ""], ["type", "button", "adapt-button", "", "btn-type", "secondary", 1, "adapt-uploader-attach-btn", 3, "adaptRadarDisableEventSending", "disabled", "click"], [1, "btn-icon", "d-icon-file_o"], ["class", "adapt-uploader-dnd-text m-start-2", 4, "ngIf"], [3, "type", "adaptRadarDisableEventSending", "label"]], template: function AdaptSingleUploaderComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelement(0, "input", 0, 1);
                i0__namespace.ɵɵtext(2, "\n\n");
                i0__namespace.ɵɵelementStart(3, "div", 2, 3);
                i0__namespace.ɵɵtext(5, "\n  ");
                i0__namespace.ɵɵelementStart(6, "div", 4, 5);
                i0__namespace.ɵɵtext(8, "\n\n    ");
                i0__namespace.ɵɵtext(9, "\n    ");
                i0__namespace.ɵɵelement(10, "adapt-rx-control-label", 6);
                i0__namespace.ɵɵtext(11, "\n    ");
                i0__namespace.ɵɵtext(12, "\n\n    ");
                i0__namespace.ɵɵelementStart(13, "div", 7);
                i0__namespace.ɵɵtext(14, "\n\n      ");
                i0__namespace.ɵɵtemplate(15, AdaptSingleUploaderComponent_ng_template_15_Template, 8, 2, "ng-template", null, 8, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵtext(17, "\n\n      ");
                i0__namespace.ɵɵtemplate(18, AdaptSingleUploaderComponent_ng_container_18_Template, 4, 1, "ng-container", 9);
                i0__namespace.ɵɵtext(19, "\n\n      ");
                i0__namespace.ɵɵtemplate(20, AdaptSingleUploaderComponent_ng_container_20_Template, 4, 1, "ng-container", 9);
                i0__namespace.ɵɵtext(21, "\n    ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(22, "\n\n    ");
                i0__namespace.ɵɵelementStart(23, "div", 10);
                i0__namespace.ɵɵtext(24, "\n      ");
                i0__namespace.ɵɵtext(25, "\n      ");
                i0__namespace.ɵɵtemplate(26, AdaptSingleUploaderComponent_adapt_alert_26_Template, 5, 6, "adapt-alert", 11);
                i0__namespace.ɵɵtext(27, "\n\n      ");
                i0__namespace.ɵɵtemplate(28, AdaptSingleUploaderComponent_ng_container_28_Template, 4, 1, "ng-container", 9);
                i0__namespace.ɵɵtext(29, "\n    ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(30, "\n\n    ");
                i0__namespace.ɵɵtext(31, "\n    ");
                i0__namespace.ɵɵtemplate(32, AdaptSingleUploaderComponent_div_32_Template, 16, 5, "div", 12);
                i0__namespace.ɵɵtext(33, "\n  ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(34, "\n");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(35, "\n\n");
                i0__namespace.ɵɵtemplate(36, AdaptSingleUploaderComponent_ng_template_36_Template, 12, 13, "ng-template", null, 13, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵtext(38, "\n\n");
                i0__namespace.ɵɵtemplate(39, AdaptSingleUploaderComponent_ng_template_39_Template, 4, 3, "ng-template", null, 14, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵtext(41, "\n\n\n");
            }
            if (rf & 2) {
                i0__namespace.ɵɵattribute("aria-label", "File Control");
                i0__namespace.ɵɵadvance(10);
                i0__namespace.ɵɵproperty("label", ctx.label)("requiredLabel", ctx.context.requiredLabel)("showRequiredLabel", ctx.context.required)("tooltip", ctx.tooltipConfig);
                i0__namespace.ɵɵadvance(8);
                i0__namespace.ɵɵproperty("ngIf", !!ctx.files.length);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", !ctx.files.length);
                i0__namespace.ɵɵadvance(6);
                i0__namespace.ɵɵproperty("ngForOf", ctx.statusMessages);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.customFormControl && ctx.context.errors && ctx.context.errors.length && ctx.context.control.touched);
                i0__namespace.ɵɵadvance(4);
                i0__namespace.ɵɵproperty("ngIf", !ctx.readonly);
            }
        }, directives: [i1__namespace.AdaptRxControlLabelComponent, i3__namespace.NgIf, i3__namespace.NgForOf, i3__namespace.NgTemplateOutlet, i1__namespace.AdaptUploaderItemComponent, i1__namespace.AdaptAlertComponent, i1__namespace.AdaptPopoverDirective, i1__namespace.AdaptButtonComponent, i1__namespace.AdaptEmptyStateComponent], pipes: [i1__namespace.FileSizePipe, i1__namespace.FileTypesPipe], styles: ["adapt-uploader-item[_ngcontent-%COMP%] {\n      padding: 13px 0 !important;\n    }"], data: { animation: [i1.ANIMATION_INIT_STATE] } });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptSingleUploaderComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-single-uploader',
                        templateUrl: './single-uploader.component.html',
                        animations: [i1.ANIMATION_INIT_STATE],
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: {
                            '[id]': 'id'
                        },
                        styles: ["\n    adapt-uploader-item {\n      padding: 13px 0 !important;\n    }\n  "],
                        providers: [
                            i1.createFormControlValueAccessor(AdaptSingleUploaderComponent),
                            i1.createFormControlValidator(AdaptSingleUploaderComponent),
                            i1.FileManager,
                            i1.IconManager
                        ]
                    }]
            }], function () { return [{ type: i1__namespace.FileManager }, { type: i1__namespace.IconManager }, { type: i0__namespace.Renderer2 }, { type: i0__namespace.ElementRef }, { type: i2__namespace$1.Directionality }, { type: i1__namespace$1.AnimationBuilder }, { type: i0__namespace.Injector }, { type: i1__namespace.AdaptTranslateService }, { type: i2__namespace.AdaptRadarService }]; }, { fileInput: [{
                    type: i0.ViewChild,
                    args: ['fileInput']
                }], dropEnter: [{
                    type: i0.ViewChild,
                    args: ['dropEnter']
                }], dnd: [{
                    type: i0.ViewChild,
                    args: ['dnd']
                }], drop: [{
                    type: i0.ViewChild,
                    args: ['drop']
                }], droppableAreaBlock: [{
                    type: i0.ViewChild,
                    args: ['droppableAreaBlock']
                }], id: [{
                    type: i0.Input
                }], mode: [{
                    type: i0.Input
                }], enableDnD: [{
                    type: i0.Input
                }], allowedTypes: [{
                    type: i0.Input
                }], forbiddenTypes: [{
                    type: i0.Input
                }], label: [{
                    type: i0.Input
                }], url: [{
                    type: i0.Input
                }], deleteUrl: [{
                    type: i0.Input
                }], icons: [{
                    type: i0.Input
                }], allowDeletion: [{
                    type: i0.Input
                }], texts: [{
                    type: i0.Input
                }], showFile: [{
                    type: i0.Input
                }], fileErrors: [{
                    type: i0.Input
                }], customErrors: [{
                    type: i0.Input
                }], droppableArea: [{
                    type: i0.Input
                }], allowDrop: [{
                    type: i0.Input
                }], name: [{
                    type: i0.Input
                }], customFormControl: [{
                    type: i0.Input
                }], beforeFileDialogOpen: [{
                    type: i0.Output
                }], afterFileDialogOpen: [{
                    type: i0.Output
                }], beforeFileAdded: [{
                    type: i0.Output
                }], afterFileAdded: [{
                    type: i0.Output
                }], startFileUploading: [{
                    type: i0.Output
                }], endFileUploading: [{
                    type: i0.Output
                }], errorFileUploading: [{
                    type: i0.Output
                }], finishedFileUploading: [{
                    type: i0.Output
                }], removedFileFromQueue: [{
                    type: i0.Output
                }], deletedFile: [{
                    type: i0.Output
                }], cancelUploading: [{
                    type: i0.Output
                }], valueChange: [{
                    type: i0.Output
                }], focus: [{
                    type: i0.Output
                }], blur: [{
                    type: i0.Output
                }], chunkSize: [{
                    type: i0.Input
                }], maxFileSize: [{
                    type: i0.Input
                }], hostClasses: [{
                    type: i0.HostBinding,
                    args: ['class']
                }] });
    })();

    var AdaptUploadModule = /** @class */ (function () {
        function AdaptUploadModule() {
        }
        AdaptUploadModule.forRoot = function (config) {
            return {
                ngModule: AdaptUploadModule,
                providers: [
                    (config && config.uploader) ? config.uploader : { provide: 'UploaderService', useClass: i1.SendFileService },
                    { provide: i1.SendFileService, useClass: i1.SendFileService }
                ]
            };
        };
        return AdaptUploadModule;
    }());
    AdaptUploadModule.ɵfac = function AdaptUploadModule_Factory(t) { return new (t || AdaptUploadModule)(); };
    AdaptUploadModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptUploadModule });
    AdaptUploadModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[
                i3.CommonModule,
                i6.FormsModule,
                i1.AdaptButtonModule,
                i1.AdaptAlertModule.forRoot(),
                i1.AdaptCollapseModule,
                i1.AdaptTooltipModule,
                i1.AdaptPopoverModule.forRoot(),
                i1.AdaptIconModule,
                i1.AdaptBusyModule,
                i1.AdaptTruncateFileNameModule,
                i1.AdaptUploadItemModule,
                i1.AdaptFileSizePipeModule,
                i1.AdaptFileTypesPipeModule,
                i1.AdaptEmptyStateModule,
                i1.AdaptRxLabelModule
            ]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptUploadModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i3.CommonModule,
                            i6.FormsModule,
                            i1.AdaptButtonModule,
                            i1.AdaptAlertModule.forRoot(),
                            i1.AdaptCollapseModule,
                            i1.AdaptTooltipModule,
                            i1.AdaptPopoverModule.forRoot(),
                            i1.AdaptIconModule,
                            i1.AdaptBusyModule,
                            i1.AdaptTruncateFileNameModule,
                            i1.AdaptUploadItemModule,
                            i1.AdaptFileSizePipeModule,
                            i1.AdaptFileTypesPipeModule,
                            i1.AdaptEmptyStateModule,
                            i1.AdaptRxLabelModule
                        ],
                        declarations: [
                            AdaptUploaderComponent,
                            AdaptSingleUploaderComponent
                        ],
                        exports: [AdaptUploaderComponent, AdaptSingleUploaderComponent]
                    }]
            }], null, null);
    })();
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptUploadModule, { declarations: [AdaptUploaderComponent,
                AdaptSingleUploaderComponent], imports: [i3.CommonModule,
                i6.FormsModule,
                i1.AdaptButtonModule, i1__namespace.AdaptAlertModule, i1.AdaptCollapseModule,
                i1.AdaptTooltipModule, i1__namespace.AdaptPopoverModule, i1.AdaptIconModule,
                i1.AdaptBusyModule,
                i1.AdaptTruncateFileNameModule,
                i1.AdaptUploadItemModule,
                i1.AdaptFileSizePipeModule,
                i1.AdaptFileTypesPipeModule,
                i1.AdaptEmptyStateModule,
                i1.AdaptRxLabelModule], exports: [AdaptUploaderComponent, AdaptSingleUploaderComponent] });
    })();

    var _c0$1 = ["input"];
    var _c1$1 = ["inputTextWidthEl"];
    function AdaptTextFieldFormBuilderComponent_adapt_textfield_icons_9_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "adapt-textfield-icons", 11);
        }
        if (rf & 2) {
            var ctx_r0 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("error", ctx_r0.control.invalid)("success", !ctx_r0.control.invalid)("iconValid", ctx_r0.iconValid && ctx_r0.validState)("iconInvalid", ctx_r0.iconInvalid);
        }
    }
    function AdaptTextFieldFormBuilderComponent_textarea_11_Template(rf, ctx) {
        if (rf & 1) {
            var _r8_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "textarea", 12);
            i0__namespace.ɵɵlistener("focus", function AdaptTextFieldFormBuilderComponent_textarea_11_Template_textarea_focus_0_listener($event) { i0__namespace.ɵɵrestoreView(_r8_1); var ctx_r7 = i0__namespace.ɵɵnextContext(); return ctx_r7.onFocus($event); })("blur", function AdaptTextFieldFormBuilderComponent_textarea_11_Template_textarea_blur_0_listener($event) { i0__namespace.ɵɵrestoreView(_r8_1); var ctx_r9 = i0__namespace.ɵɵnextContext(); return ctx_r9.onBlur($event); });
            i0__namespace.ɵɵtext(1, "  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵclassMapInterpolate1("form-control ", ctx_r1.customClass, "");
            i0__namespace.ɵɵclassProp("form-control-disabled-look", ctx_r1.readonly && ctx_r1.disabledStyleForReadonlyState);
            i0__namespace.ɵɵproperty("rows", ctx_r1.rows)("formControl", ctx_r1.control)("required", ctx_r1.required)("autofocus", ctx_r1.autofocus)("readonly", ctx_r1.readonly)("placeholder", ctx_r1.placeholder ? ctx_r1.placeholder : "");
            i0__namespace.ɵɵattribute("name", ctx_r1.name)("id", ctx_r1.id)("maxlength", ctx_r1.maxlength)("minlength", ctx_r1.minlength)("tabindex", ctx_r1.tabindex)("aria-label", ctx_r1.ariaLabel)("aria-labelledby", ctx_r1.ariaLabelledby)("aria-describedby", ctx_r1.ariaDescribedBy);
        }
    }
    function AdaptTextFieldFormBuilderComponent_input_13_Template(rf, ctx) {
        if (rf & 1) {
            var _r12_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "input", 13, 14);
            i0__namespace.ɵɵlistener("keyup", function AdaptTextFieldFormBuilderComponent_input_13_Template_input_keyup_0_listener() { i0__namespace.ɵɵrestoreView(_r12_1); var ctx_r11 = i0__namespace.ɵɵnextContext(); return ctx_r11.onKeyup(); })("focus", function AdaptTextFieldFormBuilderComponent_input_13_Template_input_focus_0_listener($event) { i0__namespace.ɵɵrestoreView(_r12_1); var ctx_r13 = i0__namespace.ɵɵnextContext(); return ctx_r13.onFocus($event); })("blur", function AdaptTextFieldFormBuilderComponent_input_13_Template_input_blur_0_listener($event) { i0__namespace.ɵɵrestoreView(_r12_1); var ctx_r14 = i0__namespace.ɵɵnextContext(); return ctx_r14.onBlur($event); });
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r2 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵclassMapInterpolate1("form-control ", ctx_r2.customClass, "");
            i0__namespace.ɵɵclassProp("textfield-padding-transition", ctx_r2.overflowText)("pl-0", ctx_r2.isTextOverflow && !ctx_r2.isRtl)("pr-0", ctx_r2.isTextOverflow && ctx_r2.isRtl)("form-control-disabled-look", ctx_r2.readonly && ctx_r2.disabledStyleForReadonlyState);
            i0__namespace.ɵɵproperty("formControl", ctx_r2.control)("type", ctx_r2.type)("required", ctx_r2.required)("autofocus", ctx_r2.autofocus)("readonly", ctx_r2.readonly)("autocomplete", ctx_r2.autocomplete ? ctx_r2.autocomplete : "on")("placeholder", ctx_r2.placeholder ? ctx_r2.placeholder : "");
            i0__namespace.ɵɵattribute("name", ctx_r2.name)("id", ctx_r2.id)("maxlength", ctx_r2.maxlength)("minlength", ctx_r2.minlength)("min", ctx_r2.min)("max", ctx_r2.max)("step", ctx_r2.step)("tabindex", ctx_r2.tabindex)("aria-label", ctx_r2.ariaLabel)("aria-labelledby", ctx_r2.ariaLabelledby)("aria-describedby", ctx_r2.ariaDescribedBy);
        }
    }
    function AdaptTextFieldFormBuilderComponent_div_15_div_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 18);
            i0__namespace.ɵɵtext(1, "\n      ");
            i0__namespace.ɵɵelementStart(2, "span", 19);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r15 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r15.nestedSettings.addOnTextLeft);
        }
    }
    function AdaptTextFieldFormBuilderComponent_div_15_div_7_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 20);
            i0__namespace.ɵɵtext(1, "\n      ");
            i0__namespace.ɵɵelementStart(2, "span", 19);
            i0__namespace.ɵɵtext(3);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(4, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r17 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵstyleProp("z-index", "34");
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵtextInterpolate(ctx_r17.nestedSettings.addOnTextRight);
        }
    }
    function AdaptTextFieldFormBuilderComponent_div_15_Template(rf, ctx) {
        if (rf & 1) {
            var _r19_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 15);
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵtemplate(2, AdaptTextFieldFormBuilderComponent_div_15_div_2_Template, 5, 1, "div", 16);
            i0__namespace.ɵɵtext(3, "\n    ");
            i0__namespace.ɵɵelementStart(4, "input", 13, 14);
            i0__namespace.ɵɵlistener("keyup", function AdaptTextFieldFormBuilderComponent_div_15_Template_input_keyup_4_listener() { i0__namespace.ɵɵrestoreView(_r19_1); var ctx_r18 = i0__namespace.ɵɵnextContext(); return ctx_r18.onKeyup(); })("focus", function AdaptTextFieldFormBuilderComponent_div_15_Template_input_focus_4_listener($event) { i0__namespace.ɵɵrestoreView(_r19_1); var ctx_r20 = i0__namespace.ɵɵnextContext(); return ctx_r20.onFocus($event); })("blur", function AdaptTextFieldFormBuilderComponent_div_15_Template_input_blur_4_listener($event) { i0__namespace.ɵɵrestoreView(_r19_1); var ctx_r21 = i0__namespace.ɵɵnextContext(); return ctx_r21.onBlur($event); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n    ");
            i0__namespace.ɵɵtemplate(7, AdaptTextFieldFormBuilderComponent_div_15_div_7_Template, 5, 3, "div", 17);
            i0__namespace.ɵɵtext(8, "\n  ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r3 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r3.nestedSettings.addOnLeft);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵclassMapInterpolate1("form-control ", ctx_r3.customClass, "");
            i0__namespace.ɵɵclassProp("textfield-padding-transition", ctx_r3.overflowText)("pl-0", ctx_r3.isTextOverflow && !ctx_r3.isRtl)("pr-0", ctx_r3.isTextOverflow && ctx_r3.isRtl);
            i0__namespace.ɵɵproperty("formControl", ctx_r3.control)("type", ctx_r3.type)("required", ctx_r3.required)("autofocus", ctx_r3.autofocus)("readonly", ctx_r3.readonly)("autocomplete", ctx_r3.autocomplete ? ctx_r3.autocomplete : "on")("placeholder", ctx_r3.placeholder ? ctx_r3.placeholder : "");
            i0__namespace.ɵɵattribute("name", ctx_r3.name)("id", ctx_r3.id)("maxlength", ctx_r3.maxlength)("minlength", ctx_r3.minlength)("min", ctx_r3.min)("max", ctx_r3.max)("step", ctx_r3.step)("tabindex", ctx_r3.tabindex)("aria-label", ctx_r3.ariaLabel)("aria-labelledby", ctx_r3.ariaLabelledby)("aria-describedby", ctx_r3.ariaDescribedBy);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("ngIf", ctx_r3.nestedSettings.addOnRight);
        }
    }
    function AdaptTextFieldFormBuilderComponent_div_18_div_4_p_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "p", 24);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r23 = i0__namespace.ɵɵnextContext(3);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate1("\n        ", ctx_r23.displayMessage, "\n      ");
        }
    }
    function AdaptTextFieldFormBuilderComponent_div_18_div_4_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div");
            i0__namespace.ɵɵtext(1, "\n      ");
            i0__namespace.ɵɵtemplate(2, AdaptTextFieldFormBuilderComponent_div_18_div_4_p_2_Template, 2, 1, "p", 23);
            i0__namespace.ɵɵtext(3, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r22 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵproperty("@validationFeedbackAnimation", undefined);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r22.displayMessage && ctx_r22.displayMessage !== "");
        }
    }
    function AdaptTextFieldFormBuilderComponent_div_18_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 21);
            i0__namespace.ɵɵtext(1, "\n  ");
            i0__namespace.ɵɵelementStart(2, "div", 22);
            i0__namespace.ɵɵtext(3, "\n    ");
            i0__namespace.ɵɵtemplate(4, AdaptTextFieldFormBuilderComponent_div_18_div_4_Template, 4, 2, "div", 8);
            i0__namespace.ɵɵtext(5, "\n  ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n  ");
            i0__namespace.ɵɵprojection(7, 2);
            i0__namespace.ɵɵtext(8, "\n");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r4 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(4);
            i0__namespace.ɵɵproperty("ngIf", ctx_r4.control && ctx_r4.control.touched && ctx_r4.control.invalid && !ctx_r4.validState);
        }
    }
    function AdaptTextFieldFormBuilderComponent_div_20_p_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "p", 24);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r24 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵproperty("@validationFeedbackChangeAnimation", ctx_r24.control.invalid);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(ctx_r24.displayMessage);
        }
    }
    function AdaptTextFieldFormBuilderComponent_div_20_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div");
            i0__namespace.ɵɵtext(1, "\n  ");
            i0__namespace.ɵɵtemplate(2, AdaptTextFieldFormBuilderComponent_div_20_p_2_Template, 2, 2, "p", 23);
            i0__namespace.ɵɵtext(3, "\n");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r5 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("@validationFeedbackAnimation", undefined);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r5.displayMessage && ctx_r5.displayMessage !== "");
        }
    }
    function AdaptTextFieldFormBuilderComponent_div_24_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 25, 26);
            i0__namespace.ɵɵtext(2);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r6 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("ngStyle", ctx_r6.inputStyles);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate(ctx_r6.value);
        }
    }
    var _c2$1 = [[["", 8, "label-count"]], "*", [["", 8, "label-count-bottom"]]];
    var _c3 = [".label-count", "*", ".label-count-bottom"];
    var nextId = 0;
    var noop = function () {
        return;
    };
    var cssTextFieldClasses = {
        FOCUS: 'is-focus',
        // REQUIRED: 'is-required',       // not used yet
        // DIRTY: 'is-dirty',
        // PRISTINE: 'is-pristine',
        // FORM_SUCCESS: 'has-success',
        // FORM_DANGER: 'has-danger',
        // VALID: 'form-control-success',
        // IN_VALID: 'form-control-danger'
    };
    var ADAPT_TEXTFIELD_FORMBUILDER_ACCESSOR = {
        provide: i6.NG_VALUE_ACCESSOR,
        useExisting: i0.forwardRef(function () { return AdaptTextFieldFormBuilderComponent; }),
        multi: true
    };
    var AdaptTextFieldFormBuilderComponent = /** @class */ (function (_super) {
        __extends(AdaptTextFieldFormBuilderComponent, _super);
        function AdaptTextFieldFormBuilderComponent(elemRef, renderer, _dir, _ngZone, _resizeService, _adaptRadarService) {
            var _this = _super.call(this, _adaptRadarService, elemRef, i1.AdaptRadarAngularCustomEventName.AdaptTextFieldFormBuilder) || this;
            _this.elemRef = elemRef;
            _this.renderer = renderer;
            _this._dir = _dir;
            _this._ngZone = _ngZone;
            _this._resizeService = _resizeService;
            _this.nestedSettingsDefault = {
                addOnLeft: true,
                addOnRight: false,
                addOnTextLeft: '@'
            };
            _this.inputStyles = null;
            _this.isTextOverflow = false;
            _this.isRtl = false;
            _this.overflowText = true;
            /**
             * Label icon with a tooltip or popover
             */
            _this.tooltipConfig = null;
            /**
             * The input element type {bs4 view}.
             */
            _this.nested = false;
            /**
             * The input element type; by default is 'text'
             */
            _this.type = 'text';
            /**
             * Unique id of the element.
             */
            _this.id = "adapt-textfield-" + nextId++;
            /**
             * Whether the input is with success icon
             */
            _this.iconValid = false;
            /**
             * Whether the input is with error icon
             */
            _this.iconInvalid = true;
            /**
             * TabIndex attribute of the element
             */
            _this.tabindex = null;
            /**
             * Maxlength attribute of the element
             */
            _this.maxlength = null;
            /**
             * Minlength attribute of the element
             */
            _this.minlength = 0;
            /**
             * Whether the input is valid
             */
            _this.validState = false;
            /**
             * Whether the input is required. The plain text 'requiredLabel' for the input element
             */
            _this.requiredLabel = '(required)';
            _this.popoverPlacement = 'top';
            _this.popoverTriggers = 'click';
            /**
             * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will
             * take precedence so this may be omitted.
             */
            _this.ariaLabel = null;
            /**
             * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element
             */
            _this.ariaLabelledby = null;
            // eslint-disable-next-line @angular-eslint/no-input-rename
            _this.ariaDescribedBy = null;
            // eslint-disable-next-line @angular-eslint/no-output-native, @angular-eslint/no-output-rename
            _this.focusEmitter = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-native, @angular-eslint/no-output-rename
            _this.blurEmitter = new i0.EventEmitter();
            /**
             * Use disabled style for the control if [readonly]=true
             */
            _this.disabledStyleForReadonlyState = false;
            _this._readonly = false;
            _this._rows = null;
            _this._maxrows = -1;
            _this._autofocus = false;
            _this.hasFocus = false;
            _this.onTouchedCallback = noop;
            _this.onChangeCallback = noop;
            _this._destroyed$ = new rxjs.ReplaySubject(1);
            /**
             * Private variables of textfield component
             */
            _this._required = false;
            _this.renderer = renderer;
            _this.isRtl = _dir.value === 'rtl';
            return _this;
        }
        Object.defineProperty(AdaptTextFieldFormBuilderComponent.prototype, "required", {
            /** Whether the element is required. */
            get: function () {
                return this._required;
            },
            set: function (value) {
                this._required = i1.toBoolean(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTextFieldFormBuilderComponent.prototype, "readonly", {
            /** Whether the element is readonly. */
            get: function () {
                return this._readonly;
            },
            set: function (value) {
                this._readonly = i1.toBoolean(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTextFieldFormBuilderComponent.prototype, "rows", {
            /** Whether the element is textarea. */
            get: function () {
                return this._rows;
            },
            set: function (value) {
                this._rows = i1.toNumber(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTextFieldFormBuilderComponent.prototype, "maxrows", {
            /** Whether the element has maxrows. */
            get: function () {
                return this._maxrows;
            },
            set: function (value) {
                this._maxrows = i1.toNumber(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTextFieldFormBuilderComponent.prototype, "autofocus", {
            /** Whether the element has autofocus. */
            get: function () {
                return this._autofocus;
            },
            set: function (value) {
                this._autofocus = i1.toBoolean(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTextFieldFormBuilderComponent.prototype, "value", {
            /** The input element's value. */
            get: function () {
                return this._value;
            },
            set: function (v) {
                if (v !== this._value) {
                    this._value = v;
                    this.onChangeCallback(v);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AdaptTextFieldFormBuilderComponent.prototype, "toggleStateValidation", {
            set: function (value) {
                if (this.control) {
                    if (value) {
                        this.control.markAsDirty();
                        this.control.markAsTouched();
                    }
                    else {
                        this.control.markAsPristine();
                        this.control.markAsUntouched();
                    }
                }
            },
            enumerable: false,
            configurable: true
        });
        /**
         * interface ControlValueAccessor
         * writeValue(obj: any): void
         */
        AdaptTextFieldFormBuilderComponent.prototype.writeValue = function (value) {
            if (this._value !== value) {
                this._value = value;
                this._applyTextOverflow();
            }
        };
        /**
         * interface ControlValueAccessor
         * registerOnChange(fn: any): void
         */
        AdaptTextFieldFormBuilderComponent.prototype.registerOnChange = function (fn) {
            this.onChangeCallback = fn;
        };
        /**
         * interface ControlValueAccessor
         * registerOnTouched(fn: any): void
         */
        AdaptTextFieldFormBuilderComponent.prototype.registerOnTouched = function (fn) {
            this.onTouchedCallback = fn;
        };
        AdaptTextFieldFormBuilderComponent.prototype.ngOnInit = function () {
            this.nestedSettings = Object.assign(Object.assign({}, this.nestedSettingsDefault), this.nestedSettings);
            if (this.tooltipIcon && !this.popoverIcon) {
                this.tooltipConfig = {
                    iconName: this.tooltipIcon,
                    content: this.tooltipText,
                    placement: 'top',
                    popoverMode: false
                };
            }
            else if (this.popoverIcon) {
                this.tooltipConfig = {
                    iconName: this.popoverIcon,
                    content: this.popoverContent,
                    placement: this.popoverPlacement,
                    popoverMode: true,
                    popoverTriggers: this.popoverTriggers
                };
            }
        };
        AdaptTextFieldFormBuilderComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            _super.prototype.ngAfterViewInit.call(this);
            if (this.inputElement && this.overflowText) {
                this._ngZone.onStable
                    .pipe(operators.take(1))
                    .subscribe(function () {
                    _this.inputStyles = Object.assign({}, i1.getElementStyles(_this.inputElement.nativeElement));
                });
                this._resizeService.addResizeEventListener(this.elemRef.nativeElement, i1.debounce(this._applyTextOverflow.bind(this), 100));
                rxjs.fromEvent(this.inputElement.nativeElement, 'input')
                    .pipe(operators.debounceTime(300), operators.distinctUntilChanged(), operators.takeUntil(this._destroyed$))
                    .subscribe(function () {
                    _this._applyTextOverflow();
                });
            }
        };
        AdaptTextFieldFormBuilderComponent.prototype.ngOnDestroy = function () {
            _super.prototype.ngOnDestroy.call(this);
            this._resizeService.removeResizeEventListener(this.elemRef.nativeElement);
            this._destroyed$.next(true);
            this._destroyed$.complete();
        };
        /**
         * Control disabled state from component
         */
        AdaptTextFieldFormBuilderComponent.prototype.ngOnChanges = function (changes) {
            var disableControl = changes.disableControl;
            if (disableControl) {
                disableControl.currentValue ? this.control.disable() : this.control.enable();
            }
        };
        /**
         * Callback for the cases where the focused state of the input changes
         */
        AdaptTextFieldFormBuilderComponent.prototype.onFocus = function (event) {
            this.hasFocus = true;
            this.renderer.addClass(this.elemRef.nativeElement, cssTextFieldClasses.FOCUS);
            this.focusEmitter.emit(event);
        };
        /**
         * Callback for the cases where the focused state is out of input element
         */
        AdaptTextFieldFormBuilderComponent.prototype.onBlur = function (event) {
            this.hasFocus = false;
            this.renderer.addClass(this.elemRef.nativeElement, cssTextFieldClasses.FOCUS);
            this.onTouchedCallback();
            this.blurEmitter.emit(event);
        };
        AdaptTextFieldFormBuilderComponent.prototype.onKeyup = function () {
            this.value = this.inputElement.nativeElement.value;
        };
        AdaptTextFieldFormBuilderComponent.prototype._applyTextOverflow = function () {
            if (this.overflowText && this.inputTextWidthEl && this.inputElement) {
                var div = this.inputTextWidthEl.nativeElement;
                var input = this.inputElement.nativeElement;
                this.isTextOverflow = div.clientWidth > input.clientWidth;
            }
        };
        return AdaptTextFieldFormBuilderComponent;
    }(i2.AdaptRadarGenericDirective));
    AdaptTextFieldFormBuilderComponent.ɵfac = function AdaptTextFieldFormBuilderComponent_Factory(t) { return new (t || AdaptTextFieldFormBuilderComponent)(i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(i2__namespace$1.Directionality), i0__namespace.ɵɵdirectiveInject(i0__namespace.NgZone), i0__namespace.ɵɵdirectiveInject(i1__namespace.ResizeService), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService)); };
    AdaptTextFieldFormBuilderComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptTextFieldFormBuilderComponent, selectors: [["adapt-textfield-formbuilder"]], viewQuery: function AdaptTextFieldFormBuilderComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$1, 5);
                i0__namespace.ɵɵviewQuery(_c1$1, 5);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.inputElement = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.inputTextWidthEl = _t.first);
            }
        }, hostVars: 12, hostBindings: function AdaptTextFieldFormBuilderComponent_HostBindings(rf, ctx) {
            if (rf & 2) {
                i0__namespace.ɵɵclassProp("form-group", true)("textfield", true)("is-counting", ctx.labelCount)("has-danger", ctx.control.touched && ctx.control.invalid)("has-success", !ctx.control.invalid && ctx.validState)("is-icons", ctx.iconValid && !ctx.control.invalid && ctx.validState || ctx.iconInvalid && ctx.control.touched && ctx.control.invalid);
            }
        }, inputs: { overflowText: "overflowText", nested: "nested", nestedSettings: "nestedSettings", customClass: "customClass", label: "label", type: "type", id: "id", icon: "icon", iconValid: "iconValid", iconInvalid: "iconInvalid", tabindex: "tabindex", maxlength: "maxlength", minlength: "minlength", placeholder: "placeholder", autocomplete: "autocomplete", pattern: "pattern", min: "min", max: "max", step: "step", name: "name", control: "control", disableControl: "disableControl", displayMessage: "displayMessage", validState: "validState", requiredLabel: "requiredLabel", tooltipIcon: "tooltipIcon", tooltipText: "tooltipText", popoverIcon: "popoverIcon", popoverPlacement: "popoverPlacement", popoverTriggers: "popoverTriggers", popoverContent: "popoverContent", labelCount: "labelCount", ariaLabel: ["aria-label", "ariaLabel"], ariaLabelledby: ["aria-labelledby", "ariaLabelledby"], ariaDescribedBy: ["aria-describedby", "ariaDescribedBy"], required: "required", readonly: "readonly", disabledStyleForReadonlyState: "disabledStyleForReadonlyState", rows: "rows", maxrows: "maxrows", autofocus: "autofocus", toggleStateValidation: "toggleStateValidation" }, outputs: { focusEmitter: "focus", blurEmitter: "blur" }, features: [i0__namespace.ɵɵProvidersFeature([ADAPT_TEXTFIELD_FORMBUILDER_ACCESSOR]), i0__namespace.ɵɵInheritDefinitionFeature, i0__namespace.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 29, vars: 12, consts: [[1, "adapt-counter-label-wrapper"], [3, "for", "label", "requiredLabel", "showRequiredLabel", "tooltip"], [1, "textfield__wrapper"], [3, "error", "success", "iconValid", "iconInvalid", 4, "ngIf"], [3, "rows", "formControl", "class", "required", "autofocus", "readonly", "form-control-disabled-look", "placeholder", "focus", "blur", 4, "ngIf"], [3, "class", "formControl", "textfield-padding-transition", "pl-0", "pr-0", "type", "required", "autofocus", "form-control-disabled-look", "readonly", "autocomplete", "placeholder", "keyup", "focus", "blur", 4, "ngIf"], ["class", "input-group", 4, "ngIf"], ["class", "form-control-flex pt-0", 4, "ngIf"], [4, "ngIf"], [1, "textfield-input-wrapper"], ["class", "textfield-input-element-copy", 3, "ngStyle", 4, "ngIf"], [3, "error", "success", "iconValid", "iconInvalid"], [3, "rows", "formControl", "required", "autofocus", "readonly", "placeholder", "focus", "blur"], [3, "formControl", "type", "required", "autofocus", "readonly", "autocomplete", "placeholder", "keyup", "focus", "blur"], ["input", ""], [1, "input-group"], ["class", "input-group-prepend", 4, "ngIf"], ["class", "input-group-append", 3, "zIndex", 4, "ngIf"], [1, "input-group-prepend"], [1, "input-group-text"], [1, "input-group-append"], [1, "form-control-flex", "pt-0"], [1, "form-control-flex__feedback"], ["class", "form-control-feedback m-0 pt-1 pb-2", 4, "ngIf"], [1, "form-control-feedback", "m-0", "pt-1", "pb-2"], [1, "textfield-input-element-copy", 3, "ngStyle"], ["inputTextWidthEl", ""]], template: function AdaptTextFieldFormBuilderComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵprojectionDef(_c2$1);
                i0__namespace.ɵɵelementStart(0, "div", 0);
                i0__namespace.ɵɵtext(1, "\n  ");
                i0__namespace.ɵɵelement(2, "adapt-rx-control-label", 1);
                i0__namespace.ɵɵtext(3, "\n\n  ");
                i0__namespace.ɵɵprojection(4);
                i0__namespace.ɵɵtext(5, "\n");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(6, "\n\n");
                i0__namespace.ɵɵelementStart(7, "div", 2);
                i0__namespace.ɵɵtext(8, "\n  ");
                i0__namespace.ɵɵtemplate(9, AdaptTextFieldFormBuilderComponent_adapt_textfield_icons_9_Template, 1, 4, "adapt-textfield-icons", 3);
                i0__namespace.ɵɵtext(10, "\n  ");
                i0__namespace.ɵɵtemplate(11, AdaptTextFieldFormBuilderComponent_textarea_11_Template, 2, 19, "textarea", 4);
                i0__namespace.ɵɵtext(12, "\n\n  ");
                i0__namespace.ɵɵtemplate(13, AdaptTextFieldFormBuilderComponent_input_13_Template, 2, 29, "input", 5);
                i0__namespace.ɵɵtext(14, "\n\n  ");
                i0__namespace.ɵɵtemplate(15, AdaptTextFieldFormBuilderComponent_div_15_Template, 9, 29, "div", 6);
                i0__namespace.ɵɵtext(16, "\n");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(17, "\n\n");
                i0__namespace.ɵɵtemplate(18, AdaptTextFieldFormBuilderComponent_div_18_Template, 9, 1, "div", 7);
                i0__namespace.ɵɵtext(19, "\n\n");
                i0__namespace.ɵɵtemplate(20, AdaptTextFieldFormBuilderComponent_div_20_Template, 4, 2, "div", 8);
                i0__namespace.ɵɵtext(21, "\n\n");
                i0__namespace.ɵɵelementStart(22, "div", 9);
                i0__namespace.ɵɵtext(23, "\n  ");
                i0__namespace.ɵɵtemplate(24, AdaptTextFieldFormBuilderComponent_div_24_Template, 3, 2, "div", 10);
                i0__namespace.ɵɵtext(25, "\n");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(26, "\n\n");
                i0__namespace.ɵɵprojection(27, 1);
                i0__namespace.ɵɵtext(28, "\n");
            }
            if (rf & 2) {
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("for", ctx.id)("label", ctx.label)("requiredLabel", ctx.requiredLabel)("showRequiredLabel", ctx.required)("tooltip", ctx.tooltipConfig);
                i0__namespace.ɵɵadvance(7);
                i0__namespace.ɵɵproperty("ngIf", ctx.iconValid || ctx.iconInvalid);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.rows);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", !ctx.rows && !ctx.nested);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", !ctx.rows && ctx.nested);
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngIf", !ctx.validState);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngIf", ctx.control && ctx.control.touched && ctx.validState);
                i0__namespace.ɵɵadvance(4);
                i0__namespace.ɵɵproperty("ngIf", ctx.overflowText);
            }
        }, directives: [i1__namespace.AdaptRxControlLabelComponent, i3__namespace.NgIf, AdaptTextfieldIconsComponent, i1__namespace.AdaptDragonInputHandlerDirective, i6__namespace.DefaultValueAccessor, i6__namespace.NgControlStatus, i6__namespace.FormControlDirective, i6__namespace.RequiredValidator, i6__namespace.MaxLengthValidator, i6__namespace.MinLengthValidator, i3__namespace.NgStyle], styles: ["\n    .textfield .label-count,\n    .textfield .label-count-bottom {\n      color: #999;\n      font-weight: 500;\n    }\n\n    .textfield.has-danger .label-count,\n    .textfield.has-danger .label-count-bottom {\n      color: #f83200;\n    }\n\n    .form-control-flex {\n      display: flex;\n      flex-flow: row nowrap;\n      justify-content: space-between;\n      padding-top: .25rem;\n      transition: all .3s;\n    }\n\n    .form-control-flex .form-control-feedback {\n      padding-top: 0 !important;\n      padding-bottom: 0 !important;\n    }\n\n    .form-control-flex__feedback {\n      flex: 0 1 auto;\n    }\n\n    .label-count-bottom {\n      text-align: right;\n      flex: 0 0 auto;\n    }\n\n  "], encapsulation: 2, data: { animation: [
                i1$1.trigger('validationFeedbackAnimation', [
                    i1$1.transition(':enter', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                    ]),
                    i1$1.transition(':leave', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                    ])
                ]),
                i1$1.trigger('validationFeedbackChangeAnimation', [
                    i1$1.transition('* => *', [
                        i1$1.useAnimation(i1.ANIMATION_NAME.opacity)
                    ])
                ])
            ] } });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptTextFieldFormBuilderComponent, [{
                type: i0.Component,
                args: [{
                        // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                        host: {
                            '[class.form-group]': 'true',
                            '[class.textfield]': 'true',
                            '[class.is-counting]': 'labelCount',
                            '[class.has-danger]': 'control.touched && control.invalid',
                            '[class.has-success]': '!control.invalid && validState',
                            '[class.is-icons]': '(iconValid && !control.invalid && validState) || (iconInvalid && control.touched && control.invalid)'
                        },
                        selector: 'adapt-textfield-formbuilder',
                        providers: [ADAPT_TEXTFIELD_FORMBUILDER_ACCESSOR],
                        templateUrl: './textfield-formbuilder.component.html',
                        styles: ["\n    .textfield .label-count,\n    .textfield .label-count-bottom {\n      color: #999;\n      font-weight: 500;\n    }\n\n    .textfield.has-danger .label-count,\n    .textfield.has-danger .label-count-bottom {\n      color: #f83200;\n    }\n\n    .form-control-flex {\n      display: flex;\n      flex-flow: row nowrap;\n      justify-content: space-between;\n      padding-top: .25rem;\n      transition: all .3s;\n    }\n\n    .form-control-flex .form-control-feedback {\n      padding-top: 0 !important;\n      padding-bottom: 0 !important;\n    }\n\n    .form-control-flex__feedback {\n      flex: 0 1 auto;\n    }\n\n    .label-count-bottom {\n      text-align: right;\n      flex: 0 0 auto;\n    }\n\n  "],
                        animations: [
                            i1$1.trigger('validationFeedbackAnimation', [
                                i1$1.transition(':enter', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeIn)
                                ]),
                                i1$1.transition(':leave', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.fadeOut)
                                ])
                            ]),
                            i1$1.trigger('validationFeedbackChangeAnimation', [
                                i1$1.transition('* => *', [
                                    i1$1.useAnimation(i1.ANIMATION_NAME.opacity)
                                ])
                            ])
                        ],
                        encapsulation: i0.ViewEncapsulation.None
                    }]
            }], function () { return [{ type: i0__namespace.ElementRef }, { type: i0__namespace.Renderer2 }, { type: i2__namespace$1.Directionality }, { type: i0__namespace.NgZone }, { type: i1__namespace.ResizeService }, { type: i2__namespace.AdaptRadarService }]; }, { inputElement: [{
                    type: i0.ViewChild,
                    args: ['input', { static: false }]
                }], inputTextWidthEl: [{
                    type: i0.ViewChild,
                    args: ['inputTextWidthEl', { static: false }]
                }], overflowText: [{
                    type: i0.Input
                }], nested: [{
                    type: i0.Input
                }], nestedSettings: [{
                    type: i0.Input
                }], customClass: [{
                    type: i0.Input
                }], label: [{
                    type: i0.Input
                }], type: [{
                    type: i0.Input
                }], id: [{
                    type: i0.Input
                }], icon: [{
                    type: i0.Input
                }], iconValid: [{
                    type: i0.Input
                }], iconInvalid: [{
                    type: i0.Input
                }], tabindex: [{
                    type: i0.Input
                }], maxlength: [{
                    type: i0.Input
                }], minlength: [{
                    type: i0.Input
                }], placeholder: [{
                    type: i0.Input
                }], autocomplete: [{
                    type: i0.Input
                }], pattern: [{
                    type: i0.Input
                }], min: [{
                    type: i0.Input
                }], max: [{
                    type: i0.Input
                }], step: [{
                    type: i0.Input
                }], name: [{
                    type: i0.Input
                }], control: [{
                    type: i0.Input
                }], disableControl: [{
                    type: i0.Input
                }], displayMessage: [{
                    type: i0.Input
                }], validState: [{
                    type: i0.Input
                }], requiredLabel: [{
                    type: i0.Input
                }], tooltipIcon: [{
                    type: i0.Input
                }], tooltipText: [{
                    type: i0.Input
                }], popoverIcon: [{
                    type: i0.Input
                }], popoverPlacement: [{
                    type: i0.Input
                }], popoverTriggers: [{
                    type: i0.Input
                }], popoverContent: [{
                    type: i0.Input
                }], labelCount: [{
                    type: i0.Input
                }], ariaLabel: [{
                    type: i0.Input,
                    args: ['aria-label']
                }], ariaLabelledby: [{
                    type: i0.Input,
                    args: ['aria-labelledby']
                }], ariaDescribedBy: [{
                    type: i0.Input,
                    args: ['aria-describedby']
                }], focusEmitter: [{
                    type: i0.Output,
                    args: ['focus']
                }], blurEmitter: [{
                    type: i0.Output,
                    args: ['blur']
                }], required: [{
                    type: i0.Input
                }], readonly: [{
                    type: i0.Input
                }], disabledStyleForReadonlyState: [{
                    type: i0.Input
                }], rows: [{
                    type: i0.Input
                }], maxrows: [{
                    type: i0.Input
                }], autofocus: [{
                    type: i0.Input
                }], toggleStateValidation: [{
                    type: i0.Input
                }] });
    })();

    var AdaptTextFieldFormBuilderModule = /** @class */ (function () {
        function AdaptTextFieldFormBuilderModule() {
        }
        return AdaptTextFieldFormBuilderModule;
    }());
    AdaptTextFieldFormBuilderModule.ɵfac = function AdaptTextFieldFormBuilderModule_Factory(t) { return new (t || AdaptTextFieldFormBuilderModule)(); };
    AdaptTextFieldFormBuilderModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptTextFieldFormBuilderModule });
    AdaptTextFieldFormBuilderModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[
                i6.FormsModule,
                i3.CommonModule,
                i6.ReactiveFormsModule,
                AdaptTextFieldIconsModule,
                i1.AdaptIconModule,
                i1.AdaptTooltipModule,
                i1.AdaptPopoverModule.forRoot(),
                i1.AdaptDragonInputHandlerModule,
                i1.AdaptRxLabelModule
            ]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptTextFieldFormBuilderModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i6.FormsModule,
                            i3.CommonModule,
                            i6.ReactiveFormsModule,
                            AdaptTextFieldIconsModule,
                            i1.AdaptIconModule,
                            i1.AdaptTooltipModule,
                            i1.AdaptPopoverModule.forRoot(),
                            i1.AdaptDragonInputHandlerModule,
                            i1.AdaptRxLabelModule
                        ],
                        exports: [AdaptTextFieldFormBuilderComponent],
                        declarations: [AdaptTextFieldFormBuilderComponent]
                    }]
            }], null, null);
    })();
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptTextFieldFormBuilderModule, { declarations: [AdaptTextFieldFormBuilderComponent], imports: [i6.FormsModule,
                i3.CommonModule,
                i6.ReactiveFormsModule,
                AdaptTextFieldIconsModule,
                i1.AdaptIconModule,
                i1.AdaptTooltipModule, i1__namespace.AdaptPopoverModule, i1.AdaptDragonInputHandlerModule,
                i1.AdaptRxLabelModule], exports: [AdaptTextFieldFormBuilderComponent] });
    })();

    var _c0 = ["list"];
    var _c1 = ["caretPositionDiv"];
    function AdaptMentionListComponent_ng_container_3_ng_template_2_Template(rf, ctx) { }
    var _c2 = function (a0) { return { "$implicit": a0 }; };
    function AdaptMentionListComponent_ng_container_3_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵtemplate(2, AdaptMentionListComponent_ng_container_3_ng_template_2_Template, 0, 0, "ng-template", 8);
            i0__namespace.ɵɵtext(3, "\n  ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngTemplateOutlet", ctx_r1.topSideTemplate)("ngTemplateOutletContext", i0__namespace.ɵɵpureFunction1(2, _c2, ctx_r1.items));
        }
    }
    function AdaptMentionListComponent_li_7_ng_container_2_span_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span");
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var item_r6 = i0__namespace.ɵɵnextContext(2).$implicit;
            var ctx_r10 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(item_r6[ctx_r10.searchKey]);
        }
    }
    function AdaptMentionListComponent_li_7_ng_container_2_span_4_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span");
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var item_r6 = i0__namespace.ɵɵnextContext(2).$implicit;
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(item_r6);
        }
    }
    function AdaptMentionListComponent_li_7_ng_container_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵtemplate(2, AdaptMentionListComponent_li_7_ng_container_2_span_2_Template, 2, 1, "span", 2);
            i0__namespace.ɵɵtext(3, "\n        ");
            i0__namespace.ɵɵtemplate(4, AdaptMentionListComponent_li_7_ng_container_2_span_4_Template, 2, 1, "span", 2);
            i0__namespace.ɵɵtext(5, "\n      ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var ctx_r8 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r8.searchKey);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r8.searchKey);
        }
    }
    function AdaptMentionListComponent_li_7_ng_container_4_ng_template_2_Template(rf, ctx) { }
    function AdaptMentionListComponent_li_7_ng_container_4_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtext(1, "\n        ");
            i0__namespace.ɵɵtemplate(2, AdaptMentionListComponent_li_7_ng_container_4_ng_template_2_Template, 0, 0, "ng-template", 8);
            i0__namespace.ɵɵtext(3, "\n      ");
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var item_r6 = i0__namespace.ɵɵnextContext().$implicit;
            var ctx_r9 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngTemplateOutlet", ctx_r9.itemTemplate)("ngTemplateOutletContext", ctx_r9.getTempalteParams(item_r6));
        }
    }
    function AdaptMentionListComponent_li_7_Template(rf, ctx) {
        if (rf & 1) {
            var _r17_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "li", 9);
            i0__namespace.ɵɵlistener("click", function AdaptMentionListComponent_li_7_Template_li_click_0_listener($event) { var restoredCtx = i0__namespace.ɵɵrestoreView(_r17_1); var i_r7 = restoredCtx.index; var ctx_r16 = i0__namespace.ɵɵnextContext(); return ctx_r16.onClick($event, i_r7); })("mousedown", function AdaptMentionListComponent_li_7_Template_li_mousedown_0_listener($event) { return $event.preventDefault(); });
            i0__namespace.ɵɵtext(1, "\n\n      ");
            i0__namespace.ɵɵtemplate(2, AdaptMentionListComponent_li_7_ng_container_2_Template, 6, 2, "ng-container", 2);
            i0__namespace.ɵɵtext(3, "\n\n      ");
            i0__namespace.ɵɵtemplate(4, AdaptMentionListComponent_li_7_ng_container_4_Template, 4, 2, "ng-container", 2);
            i0__namespace.ɵɵtext(5, "\n    ");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var i_r7 = ctx.index;
            var ctx_r2 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵclassProp("active", ctx_r2.activeItem === i_r7);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", !ctx_r2.itemTemplate);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("ngIf", ctx_r2.itemTemplate);
        }
    }
    function AdaptMentionListComponent_div_10_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "div", 10);
            i0__namespace.ɵɵtext(1, "\n    ");
            i0__namespace.ɵɵelementStart(2, "div", 11);
            i0__namespace.ɵɵtext(3, "\n      ");
            i0__namespace.ɵɵelement(4, "div", 12);
            i0__namespace.ɵɵtext(5, "\n    ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵtext(6, "\n  ");
            i0__namespace.ɵɵelementEnd();
        }
    }
    var AdaptMentionListComponent = /** @class */ (function () {
        function AdaptMentionListComponent(_deviceDetection, _renderer, _elementRef, _dir) {
            this._deviceDetection = _deviceDetection;
            this._renderer = _renderer;
            this._elementRef = _elementRef;
            this._dir = _dir;
            this.mentionStyleConfig = {
                width: '200px',
                maxHeight: '360px'
            };
            this.hidden = true;
            this.showMentionLoader = false;
            this.activeItem = 0;
            this.caretUpdated$ = new rxjs.Subject();
            // eslint-disable-next-line @angular-eslint/no-output-on-prefix
            this.onItemClick = new i0.EventEmitter();
            this._isMobile = false;
            this._isRtl = false;
            this._appendToBody = false;
        }
        Object.defineProperty(AdaptMentionListComponent.prototype, "appendToBody", {
            get: function () {
                return this._appendToBody;
            },
            set: function (v) {
                if (Boolean(v) !== this._appendToBody) {
                    this._appendToBody = Boolean(v);
                    if (this._appendToBody) {
                        this._renderer.appendChild(document.body, this.list.nativeElement);
                    }
                    else {
                        this._renderer.appendChild(this._elementRef.nativeElement, this.list.nativeElement);
                    }
                }
            },
            enumerable: false,
            configurable: true
        });
        AdaptMentionListComponent.prototype.ngOnDestroy = function () {
            if (this.appendToBody) {
                this._renderer.removeChild(document.body, this.list.nativeElement);
            }
        };
        AdaptMentionListComponent.prototype.initializeConfig = function (inputEl, mentionStyleConfig) {
            var _this = this;
            this.inputStyles = Object.assign({}, this._getElementStyles(inputEl));
            this._isMobile = this._deviceDetection.isMobile();
            this._isRtl = this._dir.value === 'rtl';
            this._inputEl = inputEl;
            if (mentionStyleConfig) {
                this.mentionStyleConfig = mentionStyleConfig;
                if (this._isMobile) {
                    this.mentionStyleConfig.width = '100%';
                }
            }
            this.caretUpdated$.subscribe(function (index) {
                _this.activeItem = 0;
                _this._setListPosition(_this._inputEl, index);
            });
        };
        AdaptMentionListComponent.prototype.onClick = function (event, index) {
            event.preventDefault();
            this.activeItem = index;
            this.onItemClick.emit(index);
        };
        AdaptMentionListComponent.prototype.focusNext = function () {
            if (this.items.length - 1 !== this.activeItem) {
                this.activeItem++;
            }
        };
        AdaptMentionListComponent.prototype.focusPrev = function () {
            if (this.activeItem !== 0) {
                this.activeItem--;
            }
        };
        AdaptMentionListComponent.prototype.trackByIndex = function (index) {
            return index;
        };
        AdaptMentionListComponent.prototype.hideList = function () {
            this.hidden = true;
        };
        AdaptMentionListComponent.prototype.showList = function () {
            this.hidden = false;
        };
        AdaptMentionListComponent.prototype.getTempalteParams = function (value) {
            return i1.isString(value) ? { '$implicit': value } : Object.assign({}, value);
        };
        AdaptMentionListComponent.prototype.setTemplates = function (itemTemplate, topSideTemplate) {
            this.itemTemplate = itemTemplate;
            this.topSideTemplate = topSideTemplate;
        };
        AdaptMentionListComponent.prototype.getActiveValue = function () {
            return this.items[this.activeItem];
        };
        AdaptMentionListComponent.prototype.setLoaderState = function (state) {
            this.showMentionLoader = state;
        };
        AdaptMentionListComponent.prototype.setListItems = function (items) {
            this.items = items;
        };
        AdaptMentionListComponent.prototype.setActiveIndex = function (index) {
            this.activeItem = index;
        };
        AdaptMentionListComponent.prototype.setSearchKey = function (searchKey) {
            this.searchKey = searchKey;
        };
        AdaptMentionListComponent.prototype._setListPosition = function (element, caretPosition) {
            this._renderer.setStyle(this.list.nativeElement, 'zIndex', this.appendToBody ? '1070' : '1');
            var ltrPlacement = [
                'bottom-left',
                'bottom',
                'bottom-right',
                'top-left',
                'top',
                'top-right',
                'bottom-left',
                'bottom',
                'bottom-right',
            ];
            var placement = this._isRtl ? i1.convertPlacement(ltrPlacement) : ltrPlacement;
            i1.positionElements(this._getCaretPositionElement(element, caretPosition), this.list.nativeElement, placement, this.appendToBody);
        };
        AdaptMentionListComponent.prototype._getElementStyles = function (element) {
            var isFirefox = this._deviceDetection.isFirefox();
            var isInput = element.nodeName === 'INPUT';
            var computed = window.getComputedStyle(element);
            var properties = [
                'direction',
                'boxSizing',
                'width',
                'height',
                'overflowX',
                'overflowY',
                'borderTopWidth',
                'borderRightWidth',
                'borderBottomWidth',
                'borderLeftWidth',
                'borderStyle',
                'paddingTop',
                'paddingRight',
                'paddingBottom',
                'paddingLeft',
                // https://developer.mozilla.org/en-US/docs/Web/CSS/font
                'fontStyle',
                'fontVariant',
                'fontWeight',
                'fontStretch',
                'fontSize',
                'fontSizeAdjust',
                'lineHeight',
                'fontFamily',
                'textAlign',
                'textTransform',
                'textIndent',
                'textDecoration',
                'letterSpacing',
                'wordSpacing',
                'tabSize',
            ];
            var div = this.caretPositionDiv.nativeElement;
            return this._calculateElementStyles(div, properties, computed, isInput, isFirefox);
        };
        AdaptMentionListComponent.prototype._getCaretPositionElement = function (element, position) {
            var isInput = element.nodeName === 'INPUT';
            var div = this.caretPositionDiv.nativeElement;
            div.textContent = element.value.substring(0, position);
            // The second special handling for input type="text" vs textarea:
            // spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037
            if (isInput) {
                div.textContent = div.textContent.replace(/\s/g, '\u00a0');
            }
            // Create span which will be used for the mention list positioning
            var caretSpan = this._renderer.createElement('span');
            caretSpan.textContent = '';
            this._renderer.appendChild(div, caretSpan);
            // Wrapping must be replicated *exactly*, including when a long word gets
            // onto the next line, with whitespace at the end of the line before.
            // The  *only* reliable way to do that is to copy the *entire* rest of the
            // textarea's content into the <span> created at the caret position.
            var restContentSpan = this._renderer.createElement('span');
            restContentSpan.textContent = element.value.substring(position);
            this._renderer.appendChild(div, restContentSpan);
            // INPUT: Apply the same scrollLeft for case if scroll exist
            div.scrollLeft = element.scrollLeft + caretSpan.offsetWidth + parseInt(div.style.paddingRight, 10);
            // TEXTAREA: Apply the same scrollTop for case if scroll exist
            div.scrollTop = element.scrollTop;
            return caretSpan;
        };
        AdaptMentionListComponent.prototype._calculateElementStyles = function (element, properties, computedStyles, isInput, isFirefox) {
            var styles = {};
            if (isInput) {
                styles.whiteSpace = 'nowrap';
            }
            else {
                // Default textarea styles
                styles.whiteSpace = 'pre-wrap';
                styles.wordWrap = 'break-word';
            }
            // Position off-screen
            styles.position = 'absolute'; // required to return coordinates properly
            styles.top = '0'; // need to place it at the same position as input element
            styles.visibility = 'hidden'; // not 'display: none' because we want rendering
            // Transfer the element's properties to the div
            properties.forEach(function (prop) {
                styles[prop] = computedStyles[prop];
            });
            if (isFirefox) {
                // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275
                if (element.scrollHeight > parseInt(computedStyles.height, 10)) {
                    styles.overflowY = 'scroll';
                }
            }
            else {
                styles.overflow = 'hidden'; // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'
            }
            return styles;
        };
        return AdaptMentionListComponent;
    }());
    AdaptMentionListComponent.ɵfac = function AdaptMentionListComponent_Factory(t) { return new (t || AdaptMentionListComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.AdaptDeviceDetectionService), i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef), i0__namespace.ɵɵdirectiveInject(i2__namespace$1.Directionality)); };
    AdaptMentionListComponent.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AdaptMentionListComponent, selectors: [["adapt-mention-list"]], viewQuery: function AdaptMentionListComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0, 7);
                i0__namespace.ɵɵviewQuery(_c1, 7);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.list = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.caretPositionDiv = _t.first);
            }
        }, inputs: { appendToBody: "appendToBody" }, outputs: { onItemClick: "onItemClick" }, features: [i0__namespace.ɵɵProvidersFeature([i1.AdaptDeviceDetectionService])], decls: 16, vars: 10, consts: [[1, "mention-list-container", "position-absolute", 3, "hidden"], ["list", ""], [4, "ngIf"], [1, "mention-list"], ["class", "mention-list-item", 3, "active", "click", "mousedown", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["class", "mention-loader-container", 4, "ngIf"], [3, "ngStyle"], ["caretPositionDiv", ""], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "mention-list-item", 3, "click", "mousedown"], [1, "mention-loader-container"], [1, "loader-container"], [1, "loader-section"]], template: function AdaptMentionListComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelementStart(0, "div", 0, 1);
                i0__namespace.ɵɵtext(2, "\n  ");
                i0__namespace.ɵɵtemplate(3, AdaptMentionListComponent_ng_container_3_Template, 4, 4, "ng-container", 2);
                i0__namespace.ɵɵtext(4, "\n  ");
                i0__namespace.ɵɵelementStart(5, "ul", 3);
                i0__namespace.ɵɵtext(6, "\n    ");
                i0__namespace.ɵɵtemplate(7, AdaptMentionListComponent_li_7_Template, 6, 4, "li", 4);
                i0__namespace.ɵɵtext(8, "\n  ");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(9, "\n\n  ");
                i0__namespace.ɵɵtemplate(10, AdaptMentionListComponent_div_10_Template, 7, 0, "div", 5);
                i0__namespace.ɵɵtext(11, "\n");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtext(12, "\n\n");
                i0__namespace.ɵɵelement(13, "div", 6, 7);
                i0__namespace.ɵɵtext(15, "\n");
            }
            if (rf & 2) {
                i0__namespace.ɵɵstyleProp("width", ctx.mentionStyleConfig.width)("max-height", ctx.mentionStyleConfig.maxHeight);
                i0__namespace.ɵɵproperty("hidden", ctx.hidden);
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngIf", ctx.topSideTemplate);
                i0__namespace.ɵɵadvance(4);
                i0__namespace.ɵɵproperty("ngForOf", ctx.items)("ngForTrackBy", ctx.trackByIndex);
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngIf", ctx.showMentionLoader);
                i0__namespace.ɵɵadvance(3);
                i0__namespace.ɵɵproperty("ngStyle", ctx.inputStyles);
            }
        }, directives: [i3__namespace.NgIf, i3__namespace.NgForOf, i3__namespace.NgStyle, i3__namespace.NgTemplateOutlet], encapsulation: 2 });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptMentionListComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'adapt-mention-list',
                        templateUrl: './mention-list.component.html',
                        providers: [i1.AdaptDeviceDetectionService]
                    }]
            }], function () { return [{ type: i1__namespace.AdaptDeviceDetectionService }, { type: i0__namespace.Renderer2 }, { type: i0__namespace.ElementRef }, { type: i2__namespace$1.Directionality }]; }, { appendToBody: [{
                    type: i0.Input
                }], list: [{
                    type: i0.ViewChild,
                    args: ['list', { static: true }]
                }], caretPositionDiv: [{
                    type: i0.ViewChild,
                    args: ['caretPositionDiv', { static: true }]
                }], onItemClick: [{
                    type: i0.Output
                }] });
    })();

    // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle
    // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle
    var AdaptMentionDirective = /** @class */ (function (_super) {
        __extends(AdaptMentionDirective, _super);
        function AdaptMentionDirective(_element, _componentFactory, _differs, _renderer, _injector, _appRef, _ngZone, _adaptRadarService) {
            var _this = _super.call(this, _adaptRadarService, _element, i1.AdaptRadarAngularCustomEventName.AdaptMention) || this;
            _this._element = _element;
            _this._componentFactory = _componentFactory;
            _this._differs = _differs;
            _this._renderer = _renderer;
            _this._injector = _injector;
            _this._appRef = _appRef;
            _this._ngZone = _ngZone;
            _this.appendToBody = false;
            _this.mentionItemSelected = new i0.EventEmitter();
            _this.mentionTriggerCharPressed = new i0.EventEmitter();
            _this.mentionSearchValueEntered = new i0.EventEmitter();
            _this._triggerCharsList = {};
            _this._showMentionLoader = false;
            _this._modelDiffer = [];
            return _this;
        }
        Object.defineProperty(AdaptMentionDirective.prototype, "showMentionLoader", {
            get: function () {
                return this._showMentionLoader;
            },
            set: function (state) {
                this._showMentionLoader = state;
                if (this._mentionList) {
                    this._mentionList.setLoaderState(state);
                }
            },
            enumerable: false,
            configurable: true
        });
        // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle
        AdaptMentionDirective.prototype.ngAfterViewInit = function () {
            _super.prototype.ngAfterViewInit.call(this);
            this._inputElement = this._element.nativeElement.querySelector('input') || this._element.nativeElement.querySelector('textarea');
        };
        // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle
        AdaptMentionDirective.prototype.ngOnChanges = function (changes) {
            var _this = this;
            if (changes.mentionConfig) {
                if (this.mentionConfig) {
                    this.mentionConfig.forEach(function (config) {
                        _this._triggerCharsList[config.triggerChar] = config;
                        _this._modelDiffer = [];
                        _this._modelDiffer.push(_this._differs.find([]).create());
                    });
                }
            }
        };
        // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle
        AdaptMentionDirective.prototype.ngDoCheck = function () {
            var _this = this;
            // need for lazy loading
            if (this._modelDiffer.length && this.mentionConfig) {
                var isArrayChanged = this._modelDiffer.some(function (differ, index) {
                    return differ.diff(_this.mentionConfig[index].items);
                });
                if (isArrayChanged) {
                    this._updateMentionList();
                }
            }
        };
        // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle
        AdaptMentionDirective.prototype.ngOnDestroy = function () {
            _super.prototype.ngOnDestroy.call(this);
            if (this._mentionListComponentRef) {
                this._mentionList.onItemClick.unsubscribe();
                this._appRef.detachView(this._mentionListComponentRef.hostView);
                this._mentionListComponentRef.destroy();
                this._mentionListComponentRef = null;
            }
        };
        AdaptMentionDirective.prototype.onKeyDown = function (event) {
            this._createMentionList();
            if (this._mentionList && !this._mentionList.hidden) {
                if (i1.hasKeyboardKeyCode(event, 'ArrowDown', keycodes.DOWN_ARROW) ||
                    i1.hasKeyboardKeyCode(event, 'ArrowUp', keycodes.UP_ARROW) ||
                    i1.hasKeyboardKeyCode(event, 'Tab', keycodes.TAB) ||
                    i1.hasKeyboardKeyCode(event, 'Enter', keycodes.ENTER)) {
                    event.preventDefault();
                    return;
                }
            }
        };
        AdaptMentionDirective.prototype.onKeyUp = function (event) {
            var _this = this;
            this._createMentionList();
            var key = event.key;
            var config;
            this._currentCaretPosition = this._getCaretPosition(this._inputElement);
            this._isComandKeyPress(event);
            if (this._isInteractionKeyPressed(event) || this._currentCaretPosition === 0) {
                config = this._triggerCharsList[key];
            }
            else {
                config = this._triggerCharsList[this._inputElement.value[this._currentCaretPosition - 1]];
            }
            if (config) {
                var inputVal = this._inputElement.value;
                // don't show list if 'triggerChar' is a part of word. For example somemail@somedomain.com
                var preCaret = inputVal[this._currentCaretPosition - 2];
                if ((this._currentCaretPosition > 1 &&
                    ((preCaret === ' ') || (preCaret === '\n') || (preCaret === '\r'))) || this._currentCaretPosition <= 1) {
                    this._initConfig(config);
                }
            }
            if (!config) {
                if (i1.hasKeyboardKeyCode(event, 'Backspace', keycodes.BACKSPACE)) {
                    this._reopenList();
                }
            }
            if (!config && this._startPosition >= 0 && this._searching) {
                if (this._currentCaretPosition < this._startPosition) {
                    this._stopSearching();
                }
                else {
                    if (!this._mentionList.hidden) {
                        if (i1.hasKeyboardKeyCode(event, 'Tab', keycodes.TAB) || i1.hasKeyboardKeyCode(event, 'Enter', keycodes.ENTER)) {
                            event.preventDefault();
                            this._updateInputValue();
                            // fire input event so angular bindings are updated
                            var inputEvent = new Event('input', {
                                bubbles: true,
                                cancelable: true,
                            });
                            this._inputElement.dispatchEvent(inputEvent);
                            return;
                        }
                        if (i1.hasKeyboardKeyCode(event, 'Escape', keycodes.ESCAPE)) {
                            event.preventDefault();
                            this._stopSearching();
                            return;
                        }
                        if (i1.hasKeyboardKeyCode(event, 'ArrowDown', keycodes.DOWN_ARROW)) {
                            event.preventDefault();
                            this._mentionList.focusNext();
                            return;
                        }
                        if (i1.hasKeyboardKeyCode(event, 'ArrowUp', keycodes.UP_ARROW)) {
                            event.preventDefault();
                            this._mentionList.focusPrev();
                            return;
                        }
                    }
                    if (this._searching) {
                        var inputValue = this._inputElement.value;
                        var searchValue = inputValue.substring(this._startPosition, this._currentCaretPosition);
                        this._searchValue = searchValue;
                        this.mentionSearchValueEntered.emit(this._searchValue);
                        this._updateMentionList();
                    }
                }
            }
            this._ngZone.onStable
                .pipe(operators.take(1))
                .subscribe(function () {
                _this._updatePosition();
            });
        };
        AdaptMentionDirective.prototype.onBlur = function () {
            this._stopSearching();
        };
        AdaptMentionDirective.prototype._getLastCharIndex = function (str, char) {
            return str.toLowerCase().lastIndexOf(char);
        };
        AdaptMentionDirective.prototype._isComandKeyPress = function (event) {
            if (i1.hasKeyboardKeyCode(event, 'Shift', keycodes.SHIFT) ||
                i1.hasKeyboardKeyCode(event, 'Alt', keycodes.ALT) ||
                i1.hasKeyboardKeyCode(event, 'Control', keycodes.CONTROL)) {
                return;
            }
        };
        AdaptMentionDirective.prototype._initConfig = function (config) {
            this._currentConfig = config;
            this._searchValue = null;
            this._searching = true;
            this._startPosition = this._currentCaretPosition;
            this._updateMentionList();
            this._mentionList.setTemplates(this._currentConfig.itemTemplate, this._currentConfig.topSideTemplate);
            this.mentionTriggerCharPressed.emit(config.triggerChar);
        };
        AdaptMentionDirective.prototype._reopenList = function () {
            var e_1, _a;
            var value = this._inputElement.value;
            var leftPart = value.substring(0, this._currentCaretPosition);
            var triggerCharConfig = null;
            var newLineReg = /\r|\n/g; // regexp for new line in texture
            // well looks like IE doesn't support matchAll, have to fallback for regexp exec(); Need to replace when deprecate IE11
            // const newLinesMatch = [...leftPart.matchAll(newLineReg)].pop(); // it returns iterator, let convert it to array and grab the last one
            var newLinesMatch = null;
            var result = newLineReg.exec(leftPart);
            while (result) {
                result = newLineReg.exec(leftPart);
                newLinesMatch = result;
            }
            var oneLine;
            var cutOffIndex = 0;
            // if we have a new line, let’s get substring from caret position to its start
            if (newLinesMatch) {
                cutOffIndex = newLinesMatch.index + 1;
                oneLine = leftPart.substring(newLinesMatch.index + 1);
            }
            else {
                oneLine = leftPart;
            }
            // Now we have one line of the text which may contain triggerChars or may not
            var found = false;
            if (this.mentionConfig) {
                for (var stringIndex = oneLine.length - 1; stringIndex >= 0; stringIndex--) {
                    var char = oneLine[stringIndex];
                    var preChar = oneLine[stringIndex - 1] || ' ';
                    try {
                        for (var _b = (e_1 = void 0, __values(this.mentionConfig)), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var config = _c.value;
                            if ((config.triggerChar === char) && (preChar === ' ')) {
                                triggerCharConfig = { index: stringIndex + cutOffIndex, char: config.triggerChar };
                                found = true;
                                break;
                            }
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                    if (found) {
                        break;
                    }
                }
            }
            if (triggerCharConfig) {
                this._startPosition = triggerCharConfig.index + 1;
                this._searching = true;
                this._currentConfig = this._triggerCharsList[triggerCharConfig.char];
                this._mentionList.setTemplates(this._currentConfig.itemTemplate, this._currentConfig.topSideTemplate);
            }
        };
        AdaptMentionDirective.prototype._updateInputValue = function () {
            var selectedConfig = this._mentionList.getActiveValue();
            if (selectedConfig) {
                var selectedValue = this._mentionList.searchKey ? selectedConfig[this._mentionList.searchKey] : selectedConfig;
                this._pasteValue(selectedValue + ' ', this._startPosition, this._currentCaretPosition);
                this.mentionItemSelected.emit(selectedConfig);
            }
            this._stopSearching();
        };
        AdaptMentionDirective.prototype._updateMentionList = function () {
            var _this = this;
            var matches = [];
            var searchKey;
            if (this._currentConfig) {
                var configItems = this._currentConfig.items;
                searchKey = this._currentConfig.searchKey;
                if (this._searchValue) {
                    if (searchKey) {
                        matches = configItems.filter(function (item) { return item[searchKey].toLowerCase().indexOf(_this._searchValue.toLowerCase()) !== -1; });
                    }
                    else {
                        matches = configItems.filter(function (item) { return item.toLowerCase().indexOf(_this._searchValue.toLowerCase()) !== -1; });
                    }
                }
                if (this._searchValue === null || this._searchValue.length === 0) {
                    matches = configItems;
                }
            }
            if (this._mentionList) {
                this._mentionList.setListItems(matches);
                // Show list if results exist or isLoading state
                if (matches.length > 0 || this.showMentionLoader) {
                    this._mentionList.appendToBody = this.appendToBody;
                    this._mentionList.showList();
                }
                else {
                    this._mentionList.hideList();
                }
                this._mentionList.setActiveIndex(0);
                this._mentionList.setSearchKey(searchKey);
            }
        };
        AdaptMentionDirective.prototype._createMentionList = function () {
            var _this = this;
            if (!this._mentionList) {
                var componentFactory = this._componentFactory.resolveComponentFactory(AdaptMentionListComponent);
                this._mentionListComponentRef = componentFactory.create(this._injector);
                this._appRef.attachView(this._mentionListComponentRef.hostView);
                this._renderer.appendChild(this._inputElement.parentNode, this._mentionListComponentRef.location.nativeElement);
                this._mentionList = this._mentionListComponentRef.instance;
                this._mentionList.initializeConfig(this._inputElement, this.mentionStyleConfig);
                this._mentionList.onItemClick.subscribe(function () {
                    _this._updateInputValue();
                });
            }
        };
        AdaptMentionDirective.prototype._hideMentionList = function () {
            if (this._mentionList) {
                this._mentionList.hideList();
            }
        };
        AdaptMentionDirective.prototype._updatePosition = function () {
            this._mentionList.caretUpdated$.next(this._startPosition);
        };
        AdaptMentionDirective.prototype._stopSearching = function () {
            this._hideMentionList();
            this._currentConfig = null;
            this._searching = false;
        };
        AdaptMentionDirective.prototype._getCaretPosition = function (element) {
            return element.value.slice(0, element.selectionStart).length;
        };
        AdaptMentionDirective.prototype._pasteValue = function (text, startPosition, endPosition) {
            var inputValue = this._inputElement.value;
            var value = inputValue.substr(0, startPosition) + text + inputValue.substr(endPosition);
            this._inputElement.value = value;
            var caretPosition = startPosition + text.length;
            this._inputElement.setSelectionRange(caretPosition, caretPosition);
        };
        AdaptMentionDirective.prototype._isInteractionKeyPressed = function (event) {
            return i1.hasKeyboardKeyCode(event, 'Backspace', keycodes.BACKSPACE) || i1.hasKeyboardKeyCode(event, 'Escape', keycodes.ESCAPE) ||
                i1.hasKeyboardKeyCode(event, 'Tab', keycodes.TAB) || i1.hasKeyboardKeyCode(event, 'Enter', keycodes.ENTER) ||
                i1.hasKeyboardKeyCode(event, 'ArrowLeft', keycodes.LEFT_ARROW) || i1.hasKeyboardKeyCode(event, 'ArrowRight', keycodes.RIGHT_ARROW) ||
                i1.hasKeyboardKeyCode(event, 'ArrowDown', keycodes.DOWN_ARROW) || i1.hasKeyboardKeyCode(event, 'ArrowUp', keycodes.UP_ARROW);
        };
        return AdaptMentionDirective;
    }(i2.AdaptRadarGenericDirective));
    AdaptMentionDirective.ɵfac = function AdaptMentionDirective_Factory(t) { return new (t || AdaptMentionDirective)(i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.ComponentFactoryResolver), i0__namespace.ɵɵdirectiveInject(i0__namespace.IterableDiffers), i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(i0__namespace.Injector), i0__namespace.ɵɵdirectiveInject(i0__namespace.ApplicationRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.NgZone), i0__namespace.ɵɵdirectiveInject(i2__namespace.AdaptRadarService)); };
    AdaptMentionDirective.ɵdir = /*@__PURE__*/ i0__namespace.ɵɵdefineDirective({ type: AdaptMentionDirective, selectors: [["", "adaptMention", ""]], hostBindings: function AdaptMentionDirective_HostBindings(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵlistener("keydown", function AdaptMentionDirective_keydown_HostBindingHandler($event) { return ctx.onKeyDown($event); })("keyup", function AdaptMentionDirective_keyup_HostBindingHandler($event) { return ctx.onKeyUp($event); })("blur", function AdaptMentionDirective_blur_HostBindingHandler() { return ctx.onBlur(); });
            }
        }, inputs: { mentionConfig: ["adaptMention", "mentionConfig"], mentionStyleConfig: "mentionStyleConfig", showMentionLoader: "showMentionLoader", appendToBody: "appendToBody" }, outputs: { mentionItemSelected: "mentionItemSelected", mentionTriggerCharPressed: "mentionTriggerCharPressed", mentionSearchValueEntered: "mentionSearchValueEntered" }, features: [i0__namespace.ɵɵInheritDefinitionFeature, i0__namespace.ɵɵNgOnChangesFeature] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptMentionDirective, [{
                type: i0.Directive,
                args: [{
                        selector: '[adaptMention]'
                    }]
            }], function () { return [{ type: i0__namespace.ElementRef }, { type: i0__namespace.ComponentFactoryResolver }, { type: i0__namespace.IterableDiffers }, { type: i0__namespace.Renderer2 }, { type: i0__namespace.Injector }, { type: i0__namespace.ApplicationRef }, { type: i0__namespace.NgZone }, { type: i2__namespace.AdaptRadarService }]; }, { mentionConfig: [{
                    type: i0.Input,
                    args: ['adaptMention']
                }], mentionStyleConfig: [{
                    type: i0.Input
                }], showMentionLoader: [{
                    type: i0.Input
                }], appendToBody: [{
                    type: i0.Input
                }], mentionItemSelected: [{
                    type: i0.Output
                }], mentionTriggerCharPressed: [{
                    type: i0.Output
                }], mentionSearchValueEntered: [{
                    type: i0.Output
                }], onKeyDown: [{
                    type: i0.HostListener,
                    args: ['keydown', ['$event']]
                }], onKeyUp: [{
                    type: i0.HostListener,
                    args: ['keyup', ['$event']]
                }], onBlur: [{
                    type: i0.HostListener,
                    args: ['blur']
                }] });
    })();

    var AdaptMentionModule = /** @class */ (function () {
        function AdaptMentionModule() {
        }
        return AdaptMentionModule;
    }());
    AdaptMentionModule.ɵfac = function AdaptMentionModule_Factory(t) { return new (t || AdaptMentionModule)(); };
    AdaptMentionModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptMentionModule });
    AdaptMentionModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[
                i6.FormsModule,
                i3.CommonModule,
                i1.AdaptDropdownModule.forRoot()
            ]] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptMentionModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i6.FormsModule,
                            i3.CommonModule,
                            i1.AdaptDropdownModule.forRoot()
                        ],
                        exports: [AdaptMentionDirective],
                        declarations: [AdaptMentionDirective, AdaptMentionListComponent],
                        entryComponents: [AdaptMentionListComponent]
                    }]
            }], null, null);
    })();
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptMentionModule, { declarations: [AdaptMentionDirective, AdaptMentionListComponent], imports: [i6.FormsModule,
                i3.CommonModule, i1__namespace.AdaptDropdownModule], exports: [AdaptMentionDirective] });
    })();

    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    /**
     * @publicApi
     */
    var ADAPT_OBSOLETE_VERSION = new i0.Version('12.22.0');

    var ADAPT_MODULES = [
        AdaptCounterModule,
        AdaptDatetime2Module,
        AdaptDropdownEditableModule,
        AdaptListBuilderModule,
        AdaptListSelectorModule,
        AdaptRatingModule,
        AdaptSearchModule,
        AdaptTimeSlotModule,
        AdaptCheckbox2Module,
        AdaptSwitcherModule,
        AdaptSelectModule,
        AdaptSelectInlineModule,
        AdaptRadioButtonModule,
        AdaptUploadModule,
        AdaptTextFieldModule,
        AdaptTextFieldFormBuilderModule,
        AdaptMentionModule,
        AdaptTypeaheadModule
    ];
    var AdaptObsoleteRootModule = /** @class */ (function () {
        function AdaptObsoleteRootModule() {
        }
        return AdaptObsoleteRootModule;
    }());
    AdaptObsoleteRootModule.ɵfac = function AdaptObsoleteRootModule_Factory(t) { return new (t || AdaptObsoleteRootModule)(); };
    AdaptObsoleteRootModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptObsoleteRootModule });
    AdaptObsoleteRootModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[
                i3.CommonModule,
                i6.FormsModule,
                AdaptCounterModule,
                AdaptDatetime2Module,
                AdaptDropdownEditableModule,
                AdaptListBuilderModule.forRoot(),
                AdaptListSelectorModule,
                AdaptRatingModule,
                AdaptSearchModule,
                AdaptTimeSlotModule,
                AdaptCheckbox2Module,
                AdaptSwitcherModule,
                AdaptSelectModule,
                AdaptSelectInlineModule,
                AdaptRadioButtonModule,
                AdaptUploadModule.forRoot(),
                AdaptTextFieldModule,
                AdaptTextFieldFormBuilderModule,
                AdaptMentionModule,
                AdaptTypeaheadModule.forRoot(),
            ], AdaptCounterModule,
            AdaptDatetime2Module,
            AdaptDropdownEditableModule,
            AdaptListBuilderModule,
            AdaptListSelectorModule,
            AdaptRatingModule,
            AdaptSearchModule,
            AdaptTimeSlotModule,
            AdaptCheckbox2Module,
            AdaptSwitcherModule,
            AdaptSelectModule,
            AdaptSelectInlineModule,
            AdaptRadioButtonModule,
            AdaptUploadModule,
            AdaptTextFieldModule,
            AdaptTextFieldFormBuilderModule,
            AdaptMentionModule,
            AdaptTypeaheadModule] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptObsoleteRootModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i3.CommonModule,
                            i6.FormsModule,
                            AdaptCounterModule,
                            AdaptDatetime2Module,
                            AdaptDropdownEditableModule,
                            AdaptListBuilderModule.forRoot(),
                            AdaptListSelectorModule,
                            AdaptRatingModule,
                            AdaptSearchModule,
                            AdaptTimeSlotModule,
                            AdaptCheckbox2Module,
                            AdaptSwitcherModule,
                            AdaptSelectModule,
                            AdaptSelectInlineModule,
                            AdaptRadioButtonModule,
                            AdaptUploadModule.forRoot(),
                            AdaptTextFieldModule,
                            AdaptTextFieldFormBuilderModule,
                            AdaptMentionModule,
                            AdaptTypeaheadModule.forRoot(),
                        ],
                        exports: ADAPT_MODULES
                    }]
            }], null, null);
    })();
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptObsoleteRootModule, { imports: [i3.CommonModule,
                i6.FormsModule,
                AdaptCounterModule,
                AdaptDatetime2Module,
                AdaptDropdownEditableModule, AdaptListBuilderModule, AdaptListSelectorModule,
                AdaptRatingModule,
                AdaptSearchModule,
                AdaptTimeSlotModule,
                AdaptCheckbox2Module,
                AdaptSwitcherModule,
                AdaptSelectModule,
                AdaptSelectInlineModule,
                AdaptRadioButtonModule, AdaptUploadModule, AdaptTextFieldModule,
                AdaptTextFieldFormBuilderModule,
                AdaptMentionModule, AdaptTypeaheadModule], exports: [AdaptCounterModule,
                AdaptDatetime2Module,
                AdaptDropdownEditableModule,
                AdaptListBuilderModule,
                AdaptListSelectorModule,
                AdaptRatingModule,
                AdaptSearchModule,
                AdaptTimeSlotModule,
                AdaptCheckbox2Module,
                AdaptSwitcherModule,
                AdaptSelectModule,
                AdaptSelectInlineModule,
                AdaptRadioButtonModule,
                AdaptUploadModule,
                AdaptTextFieldModule,
                AdaptTextFieldFormBuilderModule,
                AdaptMentionModule,
                AdaptTypeaheadModule] });
    })();
    var AdaptObsoleteModule = /** @class */ (function () {
        function AdaptObsoleteModule() {
        }
        AdaptObsoleteModule.forRoot = function () {
            return { ngModule: AdaptObsoleteRootModule };
        };
        return AdaptObsoleteModule;
    }());
    AdaptObsoleteModule.ɵfac = function AdaptObsoleteModule_Factory(t) { return new (t || AdaptObsoleteModule)(); };
    AdaptObsoleteModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AdaptObsoleteModule });
    AdaptObsoleteModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [ADAPT_MODULES, AdaptCounterModule,
            AdaptDatetime2Module,
            AdaptDropdownEditableModule,
            AdaptListBuilderModule,
            AdaptListSelectorModule,
            AdaptRatingModule,
            AdaptSearchModule,
            AdaptTimeSlotModule,
            AdaptCheckbox2Module,
            AdaptSwitcherModule,
            AdaptSelectModule,
            AdaptSelectInlineModule,
            AdaptRadioButtonModule,
            AdaptUploadModule,
            AdaptTextFieldModule,
            AdaptTextFieldFormBuilderModule,
            AdaptMentionModule,
            AdaptTypeaheadModule] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AdaptObsoleteModule, [{
                type: i0.NgModule,
                args: [{
                        imports: ADAPT_MODULES,
                        exports: ADAPT_MODULES
                    }]
            }], null, null);
    })();
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AdaptObsoleteModule, { imports: [AdaptCounterModule,
                AdaptDatetime2Module,
                AdaptDropdownEditableModule,
                AdaptListBuilderModule,
                AdaptListSelectorModule,
                AdaptRatingModule,
                AdaptSearchModule,
                AdaptTimeSlotModule,
                AdaptCheckbox2Module,
                AdaptSwitcherModule,
                AdaptSelectModule,
                AdaptSelectInlineModule,
                AdaptRadioButtonModule,
                AdaptUploadModule,
                AdaptTextFieldModule,
                AdaptTextFieldFormBuilderModule,
                AdaptMentionModule,
                AdaptTypeaheadModule], exports: [AdaptCounterModule,
                AdaptDatetime2Module,
                AdaptDropdownEditableModule,
                AdaptListBuilderModule,
                AdaptListSelectorModule,
                AdaptRatingModule,
                AdaptSearchModule,
                AdaptTimeSlotModule,
                AdaptCheckbox2Module,
                AdaptSwitcherModule,
                AdaptSelectModule,
                AdaptSelectInlineModule,
                AdaptRadioButtonModule,
                AdaptUploadModule,
                AdaptTextFieldModule,
                AdaptTextFieldFormBuilderModule,
                AdaptMentionModule,
                AdaptTypeaheadModule] });
    })();

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ADAPT_OBSOLETE_VERSION = ADAPT_OBSOLETE_VERSION;
    exports.ADAPT_RATING_ACCESSOR = ADAPT_RATING_ACCESSOR;
    exports.ADAPT_TEXTFIELD_ACCESSOR = ADAPT_TEXTFIELD_ACCESSOR;
    exports.ADAPT_TEXTFIELD_FORMBUILDER_ACCESSOR = ADAPT_TEXTFIELD_FORMBUILDER_ACCESSOR;
    exports.AdaptCheckbox2Component = AdaptCheckbox2Component;
    exports.AdaptCheckbox2Module = AdaptCheckbox2Module;
    exports.AdaptCounterComponent = AdaptCounterComponent;
    exports.AdaptCounterModule = AdaptCounterModule;
    exports.AdaptDatetime2CalendarComponent = AdaptDatetime2CalendarComponent;
    exports.AdaptDatetime2ClockComponent = AdaptDatetime2ClockComponent;
    exports.AdaptDatetime2Component = AdaptDatetime2Component;
    exports.AdaptDatetime2Module = AdaptDatetime2Module;
    exports.AdaptDatetime2MonthPickerComponent = AdaptDatetime2MonthPickerComponent;
    exports.AdaptDatetime2PickerComponent = AdaptDatetime2PickerComponent;
    exports.AdaptDatetime2YearPickerComponent = AdaptDatetime2YearPickerComponent;
    exports.AdaptDatetimeRange2Component = AdaptDatetimeRange2Component;
    exports.AdaptDropDownEditableComponent = AdaptDropDownEditableComponent;
    exports.AdaptDropdownEditableModule = AdaptDropdownEditableModule;
    exports.AdaptListBuilderComponent = AdaptListBuilderComponent;
    exports.AdaptListBuilderModule = AdaptListBuilderModule;
    exports.AdaptListComponent = AdaptListComponent;
    exports.AdaptListSelectorModule = AdaptListSelectorModule;
    exports.AdaptMentionDirective = AdaptMentionDirective;
    exports.AdaptMentionModule = AdaptMentionModule;
    exports.AdaptObsoleteModule = AdaptObsoleteModule;
    exports.AdaptRadioButtonComponent = AdaptRadioButtonComponent;
    exports.AdaptRadioButtonModule = AdaptRadioButtonModule;
    exports.AdaptRatingBinaryComponent = AdaptRatingBinaryComponent;
    exports.AdaptRatingComponent = AdaptRatingComponent;
    exports.AdaptRatingLikeComponent = AdaptRatingLikeComponent;
    exports.AdaptRatingModule = AdaptRatingModule;
    exports.AdaptRatingVotingComponent = AdaptRatingVotingComponent;
    exports.AdaptSearchComponent = AdaptSearchComponent;
    exports.AdaptSearchModule = AdaptSearchModule;
    exports.AdaptSelectComponent = AdaptSelectComponent;
    exports.AdaptSelectInlineComponent = AdaptSelectInlineComponent;
    exports.AdaptSelectInlineModule = AdaptSelectInlineModule;
    exports.AdaptSelectModule = AdaptSelectModule;
    exports.AdaptSelectSearchFilter = AdaptSelectSearchFilter;
    exports.AdaptSelectSearchFilterAsync = AdaptSelectSearchFilterAsync;
    exports.AdaptSelectSearchFilterModule = AdaptSelectSearchFilterModule;
    exports.AdaptSingleUploaderComponent = AdaptSingleUploaderComponent;
    exports.AdaptSwitcherComponent = AdaptSwitcherComponent;
    exports.AdaptSwitcherModule = AdaptSwitcherModule;
    exports.AdaptTextFieldComponent = AdaptTextFieldComponent;
    exports.AdaptTextFieldFormBuilderComponent = AdaptTextFieldFormBuilderComponent;
    exports.AdaptTextFieldFormBuilderModule = AdaptTextFieldFormBuilderModule;
    exports.AdaptTextFieldIconsModule = AdaptTextFieldIconsModule;
    exports.AdaptTextFieldModule = AdaptTextFieldModule;
    exports.AdaptTextfieldIconsComponent = AdaptTextfieldIconsComponent;
    exports.AdaptTimeSlotComponent = AdaptTimeSlotComponent;
    exports.AdaptTimeSlotModule = AdaptTimeSlotModule;
    exports.AdaptTypeaheadComponent = AdaptTypeaheadComponent;
    exports.AdaptTypeaheadConfig = AdaptTypeaheadConfig;
    exports.AdaptTypeaheadDirective = AdaptTypeaheadDirective;
    exports.AdaptTypeaheadModel = AdaptTypeaheadModel;
    exports.AdaptTypeaheadModule = AdaptTypeaheadModule;
    exports.AdaptTypeaheadSubModule = AdaptTypeaheadSubModule;
    exports.AdaptTypeaheadWindowComponent = AdaptTypeaheadWindowComponent;
    exports.AdaptUploadModule = AdaptUploadModule;
    exports.AdaptUploaderComponent = AdaptUploaderComponent;
    exports.Calendar2 = Calendar2;
    exports.Calendar2Day = Calendar2Day;
    exports.DISABLE_NATIVE_VALIDITY_CHECKING = DISABLE_NATIVE_VALIDITY_CHECKING;
    exports.MENU_MAX_HEIGHT = MENU_MAX_HEIGHT;
    exports.RatingBinaryTypeError = RatingBinaryTypeError;
    exports.RatingLikeTypes = RatingLikeTypes;
    exports.RatingLikeValuesError = RatingLikeValuesError;
    exports.RatingVotingTypeError = RatingVotingTypeError;
    exports.TYPEAHEAD_VALUE_ACCESSOR = TYPEAHEAD_VALUE_ACCESSOR;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=bmc-ux-adapt-obsolete.umd.js.map
