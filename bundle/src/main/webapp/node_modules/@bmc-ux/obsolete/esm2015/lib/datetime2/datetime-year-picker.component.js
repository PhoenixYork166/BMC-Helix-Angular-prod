import { Component, ViewChild, Input, Output, ElementRef, EventEmitter } from '@angular/core';
import moment from 'moment-es6';
import { AnimationBuilder } from '@angular/animations';
import { Calendar2Day } from './datetime2.model';
import * as i0 from "@angular/core";
import * as i1 from "@angular/animations";
import * as i2 from "@angular/common";
const _c0 = ["calendarContainerRef"];
function AdaptDatetime2YearPickerComponent_tr_13_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    const _r8 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n                  ");
    i0.ɵɵelementStart(2, "td", 5);
    i0.ɵɵtext(3, "\n                      ");
    i0.ɵɵelementStart(4, "button", 6);
    i0.ɵɵlistener("click", function AdaptDatetime2YearPickerComponent_tr_13_ng_container_2_Template_button_click_4_listener() { const restoredCtx = i0.ɵɵrestoreView(_r8); const year_r5 = restoredCtx.$implicit; const col_r6 = restoredCtx.index; const row_r3 = i0.ɵɵnextContext().index; const ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.onYearClick(year_r5.date, row_r3, col_r6); });
    i0.ɵɵtext(5);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(6, "\n                  ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(7, "\n              ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const year_r5 = ctx.$implicit;
    i0.ɵɵadvance(4);
    i0.ɵɵclassProp("active", year_r5.isSelected)("today", year_r5.isToday)("disabled", year_r5.isDisabled);
    i0.ɵɵproperty("disabled", year_r5.isDisabled);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(year_r5.date.format("YYYY"));
} }
function AdaptDatetime2YearPickerComponent_tr_13_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "tr");
    i0.ɵɵtext(1, "\n              ");
    i0.ɵɵtemplate(2, AdaptDatetime2YearPickerComponent_tr_13_ng_container_2_Template, 8, 8, "ng-container", 4);
    i0.ɵɵtext(3, "\n          ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const years_r2 = ctx.$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", years_r2);
} }
export class AdaptDatetime2YearPickerComponent {
    constructor(_animationBuilder) {
        this._animationBuilder = _animationBuilder;
        this.animationDirectionForward = true;
        this.disabled = false;
        this.yearSelect = new EventEmitter();
        this._initialDate = moment();
        this._activeDate = null;
        this._animationReady = false;
        this._redraw = true;
        this._activeIndex = 4;
        this._columnsAmount = 3;
        this._rowsAmount = 4;
        this._itemsAmount = this._rowsAmount * this._columnsAmount;
    }
    set initialDate(initDate) {
        if (initDate && initDate.isValid()) {
            this._initialDate = initDate.clone();
        }
    }
    set activeDate(activeDate) {
        if (activeDate && activeDate.isValid()) {
            this._activeDate = activeDate.clone();
        }
        else {
            this._activeDate = null;
        }
        if (this.calendar) {
            this._patchCalendar();
        }
    }
    ngOnInit() {
        this._initCalendar();
        this._drawCalendar();
    }
    onYearClick(year, row, col) {
        this.yearSelect.emit(year.clone());
        this._activeIndex = this._columnsAmount * row + col;
        this._redraw = false;
    }
    ngOnChanges(changes) {
        if (changes.yearsPage) {
            if (this._redraw || this.yearsPage) {
                this._drawCalendar();
                this._redraw = true;
            }
        }
    }
    ngAfterViewInit() {
        this.calendarPlayers.prevOut = this._animationBuilder.build(this.animationsSet.prevOut)
            .create(this.calendarContainerRef.nativeElement);
        this.calendarPlayers.prevIn = this._animationBuilder.build(this.animationsSet.prevIn)
            .create(this.calendarContainerRef.nativeElement);
        this.calendarPlayers.nextOut = this._animationBuilder.build(this.animationsSet.nextOut)
            .create(this.calendarContainerRef.nativeElement);
        this.calendarPlayers.nextIn = this._animationBuilder.build(this.animationsSet.nextIn)
            .create(this.calendarContainerRef.nativeElement);
        this._animationReady = true;
    }
    _initCalendar() {
        this.calendar =
            Array(this._rowsAmount)
                .fill(0)
                .map(() => Array(this._columnsAmount)
                .fill(0)
                .map(() => new Calendar2Day()));
    }
    _drawCalendar() {
        const initialDate = Number(this._initialDate.clone().format('YYYY'));
        const startYear = this._initialDate.clone().startOf('year');
        const yearsArr = new Array(this._itemsAmount).fill(0).map(() => new Calendar2Day());
        yearsArr.forEach((item, index) => {
            if (this._activeIndex > index || this._activeIndex < index) {
                yearsArr[index].date = startYear.year(initialDate - (this._activeIndex - index) + (this._itemsAmount * this.yearsPage)).clone();
            }
            else {
                yearsArr[index].date = startYear.year(initialDate + this._itemsAmount * this.yearsPage).clone();
            }
        });
        // Animate calendar while component redraw
        this._animateCalendarChange((() => {
            // Need to transform one-dimensional array into multi-dimensional (4 x 3)
            this.calendar = yearsArr.reduce((rows, key, index) => {
                return (index % this._columnsAmount === 0 ? rows.push([key])
                    : rows[rows.length - 1].push(key)) && rows;
            }, []);
            this._patchCalendar();
        }).bind(this));
    }
    _animateCalendarChange(changeValFn) {
        if (this._animationReady) {
            this.calendarPlayers.prevOut.reset();
            this.calendarPlayers.prevIn.reset();
            this.calendarPlayers.nextOut.reset();
            this.calendarPlayers.nextIn.reset();
            const _in = this.animationDirectionForward ? this.calendarPlayers.nextIn : this.calendarPlayers.prevIn;
            const _out = this.animationDirectionForward ? this.calendarPlayers.nextOut : this.calendarPlayers.prevOut;
            _out.onDone(() => {
                changeValFn();
                _in.play();
            });
            _out.play();
        }
        else {
            changeValFn();
        }
    }
    _patchCalendar() {
        this.calendar.forEach((years) => {
            years.forEach((year) => {
                year.isSelected = this._activeDate ?
                    this._activeDate.clone().startOf('year').isSame(year.date.startOf('year')) : false;
                year.isToday = moment().startOf('year').isSame(year.date.startOf('year'));
                year.isDisabled = this.disabled;
            });
        });
    }
}
AdaptDatetime2YearPickerComponent.ɵfac = function AdaptDatetime2YearPickerComponent_Factory(t) { return new (t || AdaptDatetime2YearPickerComponent)(i0.ɵɵdirectiveInject(i1.AnimationBuilder)); };
AdaptDatetime2YearPickerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptDatetime2YearPickerComponent, selectors: [["adapt-datetime2-year-picker"]], viewQuery: function AdaptDatetime2YearPickerComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.calendarContainerRef = _t.first);
    } }, inputs: { calendarPlayers: "calendarPlayers", animationsSet: "animationsSet", yearsPage: "yearsPage", disabled: "disabled", initialDate: "initialDate", activeDate: "activeDate" }, outputs: { yearSelect: "yearSelect" }, features: [i0.ɵɵNgOnChangesFeature], decls: 22, vars: 1, consts: [[1, "a3t-calendar--table", "a3t-calendar--year_table"], ["calendarContainerRef", ""], ["aria-hidden", "true"], ["colspan", "3", 1, "a3t-calendar--table-space-cell"], [4, "ngFor", "ngForOf"], ["role", "gridcell", 1, "a3t-calendar--table-day", "a3t-calendar--table-year"], ["type", "button", 3, "disabled", "click"]], template: function AdaptDatetime2YearPickerComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtext(0, "\n      ");
        i0.ɵɵelementStart(1, "table", 0);
        i0.ɵɵtext(2, "\n          ");
        i0.ɵɵelement(3, "thead");
        i0.ɵɵtext(4, "\n          ");
        i0.ɵɵelementStart(5, "tbody", null, 1);
        i0.ɵɵtext(7, "\n          ");
        i0.ɵɵelementStart(8, "tr", 2);
        i0.ɵɵtext(9, "\n              ");
        i0.ɵɵelement(10, "td", 3);
        i0.ɵɵtext(11, "\n          ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(12, "\n          ");
        i0.ɵɵtemplate(13, AdaptDatetime2YearPickerComponent_tr_13_Template, 4, 1, "tr", 4);
        i0.ɵɵtext(14, "\n          ");
        i0.ɵɵelementStart(15, "tr", 2);
        i0.ɵɵtext(16, "\n              ");
        i0.ɵɵelement(17, "td", 3);
        i0.ɵɵtext(18, "\n          ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(19, "\n          ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(20, "\n      ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(21, "\n  ");
    } if (rf & 2) {
        i0.ɵɵadvance(13);
        i0.ɵɵproperty("ngForOf", ctx.calendar);
    } }, directives: [i2.NgForOf], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptDatetime2YearPickerComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-datetime2-year-picker',
                template: `
      <table class="a3t-calendar--table a3t-calendar--year_table">
          <thead></thead>
          <tbody #calendarContainerRef>
          <tr aria-hidden="true">
              <td colspan="3" class="a3t-calendar--table-space-cell"></td>
          </tr>
          <tr *ngFor="let years of calendar; let row = index">
              <ng-container *ngFor="let year of years; let col = index">
                  <td class="a3t-calendar--table-day a3t-calendar--table-year"
                      role="gridcell">
                      <button
                              type="button"
                              (click)="onYearClick(year.date, row, col)"
                              [class.active]="year.isSelected"
                              [class.today]="year.isToday"
                              [class.disabled]="year.isDisabled"
                              [disabled]="year.isDisabled"
                      >{{ year.date.format('YYYY') }}</button>
                  </td>
              </ng-container>
          </tr>
          <tr aria-hidden="true">
              <td colspan="3" class="a3t-calendar--table-space-cell"></td>
          </tr>
          </tbody>
      </table>
  `
            }]
    }], function () { return [{ type: i1.AnimationBuilder }]; }, { calendarContainerRef: [{
            type: ViewChild,
            args: ['calendarContainerRef']
        }], calendarPlayers: [{
            type: Input
        }], animationsSet: [{
            type: Input
        }], yearsPage: [{
            type: Input
        }], disabled: [{
            type: Input
        }], yearSelect: [{
            type: Output
        }], initialDate: [{
            type: Input
        }], activeDate: [{
            type: Input
        }] }); })();
//# sourceMappingURL=datetime-year-picker.component.js.map