{"version":3,"file":"datetime-month-picker.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-obsolete/src/lib/datetime2/datetime-month-picker.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Calendar2Day} from './datetime2.model';\nimport {Component, Input, Output, EventEmitter, OnInit} from '@angular/core';\nimport moment from 'moment-es6';\n\n@Component({\n  selector: 'adapt-datetime2-month-picker',\n  template: `\n    <table class=\"a3t-calendar--table  a3t-calendar--month_table\">\n      <tbody>\n        <tr aria-hidden=\"true\">\n          <td colspan=\"3\" class=\"a3t-calendar--table-space-cell\"></td>\n        </tr>\n        <tr *ngFor=\"let months of calendar\">\n          <ng-container *ngFor=\"let month of months\">\n            <td class=\"a3t-calendar--table-day a3t-calendar--table-month\"\n                role=\"gridcell\">\n              <button type=\"button\"\n                (click)=\"onMonthClick(month.date)\"\n                [class.active]=\"month.isSelected\"\n                [class.today]=\"month.isToday\"\n                [class.disabled]=\"month.isDisabled\"\n                [disabled]=\"month.isDisabled\"\n              >{{month.date.format('MMM')}}</button>\n            </td>\n          </ng-container>\n        </tr>\n        <tr aria-hidden=\"true\">\n          <td colspan=\"3\" class=\"a3t-calendar--table-space-cell\"></td>\n        </tr>\n      </tbody>\n    </table>\n  `\n})\nexport class AdaptDatetime2MonthPickerComponent implements OnInit {\n  @Input()\n  set initialDate(initDate: moment.Moment) {\n    if (initDate && initDate.isValid()) {\n      this._initialDate = initDate.clone();\n    }\n  }\n\n  @Input()\n  set activeDate(activeDate: moment.Moment) {\n\n    if (activeDate && activeDate.isValid()) {\n      this._activeDate = activeDate.clone();\n      this._initialDate = activeDate.clone();\n      this._drawCalendar();\n    } else {\n      this._activeDate = null;\n\n      if (this.calendar) {\n        this._patchCalendar();\n      }\n    }\n  }\n\n  @Input() disabled: boolean = false;\n\n  @Output() readonly selectMonth: EventEmitter<moment.Moment> = new EventEmitter<moment.Moment>();\n\n  calendar: Calendar2Day[][];\n\n  private _initialDate: moment.Moment = moment();\n  private _activeDate: moment.Moment = null;\n\n  private _columnsAmount: number = 3;\n  private _rowsAmount: number = 4;\n  private _itemsAmount: number = this._rowsAmount * this._columnsAmount;\n\n  ngOnInit(): void {\n    this._initCalendar();\n    this._drawCalendar();\n  }\n\n  onMonthClick(month: moment.Moment): void {\n    this.selectMonth.emit(month.clone());\n  }\n\n  private _initCalendar(): void {\n    this.calendar =\n      Array(this._rowsAmount)\n        .fill(0)\n        .map(() => Array(this._columnsAmount)\n          .fill(0)\n          .map(() => new Calendar2Day()));\n  }\n\n  private _drawCalendar(): void {\n    const momentArr = moment.monthsShort();\n    const startDate = this._initialDate.clone();\n    const monthArr: Calendar2Day[] = new Array(this._itemsAmount).fill(0).map(() => new Calendar2Day());\n\n    monthArr.forEach((item, index) => {\n      monthArr[index].date = startDate.month(momentArr[index]).clone();\n    });\n\n    this.calendar = monthArr.reduce((rows, key, index) => {\n      return (index % this._columnsAmount === 0 ? rows.push([key])\n        : rows[rows.length - 1].push(key)) && rows;\n    }, []);\n\n    this._patchCalendar();\n  }\n\n  private _patchCalendar(): void {\n    this.calendar.forEach((months: Calendar2Day[]) => {\n      months.forEach((month: Calendar2Day) => {\n        month.isSelected = this._activeDate ?\n          this._activeDate.clone().startOf('month').isSame(month.date.startOf('month')) : false;\n\n        month.isToday = moment().startOf('month').isSame(month.date.startOf('month'));\n        month.isDisabled = this.disabled;\n      });\n    });\n  }\n}\n"]}