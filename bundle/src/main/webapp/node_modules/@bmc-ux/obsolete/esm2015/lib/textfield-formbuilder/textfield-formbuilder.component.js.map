{"version":3,"file":"textfield-formbuilder.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-obsolete/src/lib/textfield-formbuilder/textfield-formbuilder.component.ts","../../../../../../libs/adapt-obsolete/src/lib/textfield-formbuilder/textfield-formbuilder.component.html"],"names":[],"mappings":"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","sourcesContent":["// TODO update types\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {TextfieldNestedSettings} from '../textfield/textfield.interface';\nimport {transition, trigger, useAnimation} from '@angular/animations';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {fromEvent, ReplaySubject} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, take, takeUntil} from 'rxjs/operators';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRxControlLabelTooltip,\n  ANIMATION_NAME,\n  debounce,\n  getElementStyles,\n  ResizeService,\n  toBoolean,\n  toNumber\n} from '@bmc-ux/adapt-angular';\nimport {AdaptRadarGenericDirective, AdaptRadarService} from '@bmc-ux/adapt-radar';\n\nlet nextId = 0;\nconst noop = (): void => {\n  return;\n};\n\nconst cssTextFieldClasses = {\n  FOCUS: 'is-focus',\n  // REQUIRED: 'is-required',       // not used yet\n  // DIRTY: 'is-dirty',\n  // PRISTINE: 'is-pristine',\n  // FORM_SUCCESS: 'has-success',\n  // FORM_DANGER: 'has-danger',\n  // VALID: 'form-control-success',\n  // IN_VALID: 'form-control-danger'\n};\n\nexport const ADAPT_TEXTFIELD_FORMBUILDER_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AdaptTextFieldFormBuilderComponent),\n  multi: true\n};\n\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class.form-group]': 'true',\n    '[class.textfield]': 'true',\n    '[class.is-counting]': 'labelCount',\n    '[class.has-danger]': 'control.touched && control.invalid',\n    '[class.has-success]': '!control.invalid && validState',\n    '[class.is-icons]': '(iconValid && !control.invalid && validState) || (iconInvalid && control.touched && control.invalid)'\n  },\n  selector: 'adapt-textfield-formbuilder',\n  providers: [ADAPT_TEXTFIELD_FORMBUILDER_ACCESSOR],\n  templateUrl: './textfield-formbuilder.component.html',\n  styles: [`\n    .textfield .label-count,\n    .textfield .label-count-bottom {\n      color: #999;\n      font-weight: 500;\n    }\n\n    .textfield.has-danger .label-count,\n    .textfield.has-danger .label-count-bottom {\n      color: #f83200;\n    }\n\n    .form-control-flex {\n      display: flex;\n      flex-flow: row nowrap;\n      justify-content: space-between;\n      padding-top: .25rem;\n      transition: all .3s;\n    }\n\n    .form-control-flex .form-control-feedback {\n      padding-top: 0 !important;\n      padding-bottom: 0 !important;\n    }\n\n    .form-control-flex__feedback {\n      flex: 0 1 auto;\n    }\n\n    .label-count-bottom {\n      text-align: right;\n      flex: 0 0 auto;\n    }\n\n  `],\n  animations: [\n    trigger('validationFeedbackAnimation', [\n      transition(':enter', [\n        useAnimation(ANIMATION_NAME.fadeIn)\n      ]),\n      transition(':leave', [\n        useAnimation(ANIMATION_NAME.fadeOut)\n      ])\n    ]),\n    trigger('validationFeedbackChangeAnimation', [\n      transition('* => *', [\n        useAnimation(ANIMATION_NAME.opacity)\n      ])\n    ])\n  ],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class AdaptTextFieldFormBuilderComponent extends AdaptRadarGenericDirective implements ControlValueAccessor, OnInit, OnChanges, AfterViewInit, OnDestroy {\n\n  nestedSettingsDefault: TextfieldNestedSettings = {\n    addOnLeft: true,\n    addOnRight: false,\n    addOnTextLeft: '@'\n  };\n\n  inputStyles: CSSStyleDeclaration = null;\n  isTextOverflow: boolean = false;\n\n  isRtl: boolean = false;\n\n  /**\n   * Reference to input element\n   */\n  @ViewChild('input', {static: false}) inputElement: ElementRef;\n  @ViewChild('inputTextWidthEl', {static: false}) inputTextWidthEl: ElementRef<HTMLDivElement>;\n\n  @Input() overflowText: boolean = true;\n\n  /**\n   * Label icon with a tooltip or popover\n   */\n  tooltipConfig: AdaptRxControlLabelTooltip = null;\n  /**\n   * The input element type {bs4 view}.\n   */\n  @Input() nested: boolean = false;\n  /**\n   *  Whether the element has settings for type 'nested'\n   */\n  @Input() nestedSettings: TextfieldNestedSettings;\n  /**\n   * Style class of the component.\n   */\n  @Input() customClass: string;\n  /**\n   * The plain text label for the input element\n   */\n  @Input() label: string;\n  /**\n   * The input element type; by default is 'text'\n   */\n  @Input() type: string = 'text';\n  /**\n   * Unique id of the element.\n   */\n  @Input() id: string = `adapt-textfield-${nextId++}`;\n  /**\n   * The icon must be a dpl-iconfont or adapt-iconfont.\n   */\n  @Input() icon: string;\n  /**\n   * Whether the input is with success icon\n   */\n  @Input() iconValid: boolean = false;\n  /**\n   * Whether the input is with error icon\n   */\n  @Input() iconInvalid: boolean = true;\n  /**\n   * TabIndex attribute of the element\n   */\n  @Input() tabindex: number = null;\n  /**\n   * Maxlength attribute of the element\n   */\n  @Input() maxlength: number = null;\n  /**\n   * Minlength attribute of the element\n   */\n  @Input() minlength: number = 0;\n  /**\n   * Placeholder attribute of the element.\n   */\n  @Input() placeholder: string;\n  /**\n   * Autocomplete attribute of the element.\n   */\n  @Input() autocomplete: string;\n  /**\n   * Additional validation patterns of the element [deprecated]\n   */\n  @Input() pattern: any;\n  @Input() min: any;\n  @Input() max: any;\n  @Input() step: any;\n  @Input() name: any;\n  /** FormControl of input element */\n  @Input() control: FormControl;\n  /** Whether the element is disabled */\n  @Input() disableControl: any;\n  /**\n   * An object used to control when error/success messages are shown\n   */\n  @Input() displayMessage: any;\n  /**\n   * Whether the input is valid\n   */\n  @Input() validState: boolean = false;\n  /**\n   * Whether the input is required. The plain text 'requiredLabel' for the input element\n   */\n  @Input() requiredLabel: string = '(required)';\n  /**\n   * Tooltip icon and additional text for it.\n   */\n  @Input() tooltipIcon: string;\n  @Input() tooltipText: string;\n  /**\n   * Popover icon and additional content for it.\n   */\n  @Input() popoverIcon: string;\n  @Input() popoverPlacement: string = 'top';\n  @Input() popoverTriggers: string = 'click';\n  @Input() popoverContent: string | TemplateRef<any>;\n  @Input() labelCount: boolean;\n\n  /**\n   * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n   * take precedence so this may be omitted.\n   */\n  @Input('aria-label') ariaLabel: string | null = null;\n\n  /**\n   * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n   */\n  @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('aria-describedby') ariaDescribedBy: string | null = null;\n\n  // eslint-disable-next-line @angular-eslint/no-output-native, @angular-eslint/no-output-rename\n  @Output('focus')\n  readonly focusEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  // eslint-disable-next-line @angular-eslint/no-output-native, @angular-eslint/no-output-rename\n  @Output('blur')\n  readonly blurEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n  /** Whether the element is required. */\n  @Input()\n  get required(): any {\n    return this._required;\n  }\n\n  set required(value: any) {\n    this._required = toBoolean(value);\n  }\n\n  /** Whether the element is readonly. */\n  @Input()\n  get readonly(): any {\n    return this._readonly;\n  }\n\n  set readonly(value: any) {\n    this._readonly = toBoolean(value);\n  }\n\n  /**\n   * Use disabled style for the control if [readonly]=true\n   */\n  @Input() disabledStyleForReadonlyState: boolean = false;\n\n  /** Whether the element is textarea. */\n  @Input()\n  get rows(): any {\n    return this._rows;\n  }\n\n  set rows(value: any) {\n    this._rows = toNumber(value);\n  }\n\n  /** Whether the element has maxrows. */\n  @Input()\n  get maxrows(): any {\n    return this._maxrows;\n  }\n\n  set maxrows(value: any) {\n    this._maxrows = toNumber(value);\n  }\n\n  /** Whether the element has autofocus. */\n  @Input()\n  get autofocus(): any {\n    return this._autofocus;\n  }\n\n  set autofocus(value: any) {\n    this._autofocus = toBoolean(value);\n  }\n\n  /** The input element's value. */\n  get value(): any {\n    return this._value;\n  }\n\n  set value(v: any) {\n    if (v !== this._value) {\n      this._value = v;\n      this.onChangeCallback(v);\n    }\n  }\n\n  @Input()\n  set toggleStateValidation(value: any) {\n    if (this.control) {\n      if (value) {\n        this.control.markAsDirty();\n        this.control.markAsTouched();\n      } else {\n        this.control.markAsPristine();\n        this.control.markAsUntouched();\n      }\n    }\n  }\n\n  private _readonly: boolean = false;\n  private _rows: number = null;\n  private _maxrows: number = -1;\n  private _autofocus: boolean = false;\n  private _value: string;\n  private hasFocus: boolean = false;\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n  private _destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  /**\n   * Private variables of textfield component\n   */\n  private _required: boolean = false;\n\n  constructor(private elemRef: ElementRef,\n              private renderer: Renderer2,\n              private _dir: Directionality,\n              private _ngZone: NgZone,\n              private _resizeService: ResizeService,\n              _adaptRadarService: AdaptRadarService) {\n    super(_adaptRadarService, elemRef, AdaptRadarAngularCustomEventName.AdaptTextFieldFormBuilder);\n\n    this.renderer = renderer;\n    this.isRtl = _dir.value === 'rtl';\n  }\n\n  /**\n   * interface ControlValueAccessor\n   * writeValue(obj: any): void\n   */\n  writeValue(value: any): void {\n    if (this._value !== value) {\n      this._value = value;\n      this._applyTextOverflow();\n    }\n  }\n\n  /**\n   * interface ControlValueAccessor\n   * registerOnChange(fn: any): void\n   */\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  /**\n   * interface ControlValueAccessor\n   * registerOnTouched(fn: any): void\n   */\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  ngOnInit(): void {\n    this.nestedSettings = {...this.nestedSettingsDefault, ...this.nestedSettings};\n\n    if (this.tooltipIcon && !this.popoverIcon) {\n      this.tooltipConfig = {\n        iconName: this.tooltipIcon,\n        content: this.tooltipText,\n        placement: 'top',\n        popoverMode: false\n      };\n    } else if (this.popoverIcon) {\n      this.tooltipConfig = {\n        iconName: this.popoverIcon,\n        content: this.popoverContent,\n        placement: this.popoverPlacement,\n        popoverMode: true,\n        popoverTriggers: this.popoverTriggers\n      };\n    }\n  }\n\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n\n    if (this.inputElement && this.overflowText) {\n      this._ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => {\n          this.inputStyles = {...getElementStyles(this.inputElement.nativeElement)};\n        });\n\n      this._resizeService.addResizeEventListener(this.elemRef.nativeElement, debounce(this._applyTextOverflow.bind(this), 100));\n\n      fromEvent(this.inputElement.nativeElement, 'input')\n        .pipe(\n          debounceTime(300),\n          distinctUntilChanged(),\n          takeUntil(this._destroyed$)\n        )\n        .subscribe(() => {\n          this._applyTextOverflow();\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n\n    this._resizeService.removeResizeEventListener(this.elemRef.nativeElement);\n    this._destroyed$.next(true);\n    this._destroyed$.complete();\n  }\n\n  /**\n   * Control disabled state from component\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    const disableControl: SimpleChange = changes.disableControl;\n\n    if (disableControl) {\n      disableControl.currentValue ? this.control.disable() : this.control.enable();\n    }\n  }\n\n  /**\n   * Callback for the cases where the focused state of the input changes\n   */\n  onFocus(event: any): void {\n    this.hasFocus = true;\n    this.renderer.addClass(this.elemRef.nativeElement, cssTextFieldClasses.FOCUS);\n    this.focusEmitter.emit(event);\n  }\n\n  /**\n   * Callback for the cases where the focused state is out of input element\n   */\n  onBlur(event: any): void {\n    this.hasFocus = false;\n    this.renderer.addClass(this.elemRef.nativeElement, cssTextFieldClasses.FOCUS);\n    this.onTouchedCallback();\n    this.blurEmitter.emit(event);\n  }\n\n  onKeyup(): void {\n    this.value = this.inputElement.nativeElement.value;\n  }\n\n  private _applyTextOverflow(): void {\n    if (this.overflowText && this.inputTextWidthEl && this.inputElement) {\n      const div = this.inputTextWidthEl.nativeElement;\n      const input = this.inputElement.nativeElement as HTMLInputElement;\n\n      this.isTextOverflow = div.clientWidth > input.clientWidth;\n    }\n  }\n}\n","<div class=\"adapt-counter-label-wrapper\">\n  <adapt-rx-control-label [for]=\"id\"\n                          [label]=\"label\"\n                          [requiredLabel]=\"requiredLabel\"\n                          [showRequiredLabel]=\"required\"\n                          [tooltip]=\"tooltipConfig\"></adapt-rx-control-label>\n\n  <ng-content select=\".label-count\"></ng-content>\n</div>\n\n<div class=\"textfield__wrapper\">\n  <adapt-textfield-icons *ngIf=\"iconValid || iconInvalid\"\n                         [error]=\"control.invalid\"\n                         [success]=\"!control.invalid\"\n                         [iconValid]=\"iconValid && validState\"\n                         [iconInvalid]=\"iconInvalid\"></adapt-textfield-icons>\n  <textarea\n    *ngIf=\"rows\"\n    [rows]=\"rows\"\n    [formControl]=\"control\"\n    class=\"form-control {{customClass}}\"\n    [attr.name]=\"name\"\n    [required]=\"required\"\n    [autofocus]=\"autofocus\"\n    [readonly]=\"readonly\"\n    [class.form-control-disabled-look]=\"readonly && this.disabledStyleForReadonlyState\"\n    [placeholder]=\"placeholder ? placeholder: ''\"\n    [attr.id]=\"id\"\n    [attr.maxlength]=\"maxlength\"\n    [attr.minlength]=\"minlength\"\n    [attr.tabindex]=\"tabindex\"\n    [attr.aria-label]=\"ariaLabel\"\n    [attr.aria-labelledby]=\"ariaLabelledby\"\n    [attr.aria-describedby]=\"ariaDescribedBy\"\n    (focus)=\"onFocus($event)\"\n    (blur)=\"onBlur($event)\">\n  </textarea>\n\n  <input *ngIf=\"!rows && !nested\"\n         #input\n         class=\"form-control {{customClass}}\"\n         [formControl]=\"control\"\n         [class.textfield-padding-transition]=\"overflowText\"\n         [class.pl-0]=\"isTextOverflow && !isRtl\"\n         [class.pr-0]=\"isTextOverflow && isRtl\"\n         [type]=\"type\"\n         [attr.name]=\"name\"\n         [required]=\"required\"\n         [autofocus]=\"autofocus\"\n         [class.form-control-disabled-look]=\"readonly && this.disabledStyleForReadonlyState\"\n         [readonly]=\"readonly\"\n         [autocomplete]=\"autocomplete ? autocomplete : 'on'\"\n         [placeholder]=\"placeholder ? placeholder: ''\"\n         [attr.id]=\"id\"\n         [attr.maxlength]=\"maxlength\"\n         [attr.minlength]=\"minlength\"\n         [attr.min]=\"min\"\n         [attr.max]=\"max\"\n         [attr.step]=\"step\"\n         [attr.tabindex]=\"tabindex\"\n         [attr.aria-label]=\"ariaLabel\"\n         [attr.aria-labelledby]=\"ariaLabelledby\"\n         [attr.aria-describedby]=\"ariaDescribedBy\"\n         (keyup)=\"onKeyup()\"\n         (focus)=\"onFocus($event)\"\n         (blur)=\"onBlur($event)\"/>\n\n  <div class=\"input-group\" *ngIf=\"!rows && nested\">\n    <div class=\"input-group-prepend\" *ngIf=\"nestedSettings.addOnLeft\">\n      <span class=\"input-group-text\">{{nestedSettings.addOnTextLeft}}</span>\n    </div>\n    <input class=\"form-control {{customClass}}\"\n           #input\n           [class.textfield-padding-transition]=\"overflowText\"\n           [class.pl-0]=\"isTextOverflow && !isRtl\"\n           [class.pr-0]=\"isTextOverflow && isRtl\"\n           [formControl]=\"control\"\n           [type]=\"type\"\n           [attr.name]=\"name\"\n           [required]=\"required\"\n           [autofocus]=\"autofocus\"\n           [readonly]=\"readonly\"\n           [autocomplete]=\"autocomplete ? autocomplete : 'on'\"\n           [placeholder]=\"placeholder ? placeholder: ''\"\n           [attr.id]=\"id\"\n           [attr.maxlength]=\"maxlength\"\n           [attr.minlength]=\"minlength\"\n           [attr.min]=\"min\"\n           [attr.max]=\"max\"\n           [attr.step]=\"step\"\n           [attr.tabindex]=\"tabindex\"\n           [attr.aria-label]=\"ariaLabel\"\n           [attr.aria-labelledby]=\"ariaLabelledby\"\n           [attr.aria-describedby]=\"ariaDescribedBy\"\n           (keyup)=\"onKeyup()\"\n           (focus)=\"onFocus($event)\"\n           (blur)=\"onBlur($event)\"/>\n    <div class=\"input-group-append\" *ngIf=\"nestedSettings.addOnRight\" [style.zIndex]=\"'34'\">\n      <span class=\"input-group-text\">{{nestedSettings.addOnTextRight}}</span>\n    </div>\n  </div>\n</div>\n\n<div class=\"form-control-flex pt-0\" *ngIf=\"!validState\">\n  <div class=\"form-control-flex__feedback\">\n    <div *ngIf=\"control && control.touched && control.invalid && !validState\" [@validationFeedbackAnimation]>\n      <p class=\"form-control-feedback m-0 pt-1 pb-2\" *ngIf=\"displayMessage && displayMessage !== ''\">\n        {{displayMessage}}\n      </p>\n    </div>\n  </div>\n  <ng-content select=\".label-count-bottom\"></ng-content>\n</div>\n\n<div *ngIf=\"control && control.touched && validState\" [@validationFeedbackAnimation]>\n  <p class=\"form-control-feedback m-0 pt-1 pb-2\" [@validationFeedbackChangeAnimation]=\"control.invalid\"\n     *ngIf=\"displayMessage && displayMessage !== ''\">{{displayMessage}}</p>\n</div>\n\n<div class=\"textfield-input-wrapper\">\n  <div class=\"textfield-input-element-copy\"\n       [ngStyle]=\"inputStyles\"\n       *ngIf=\"overflowText\"\n       #inputTextWidthEl>{{ value }}</div>\n</div>\n\n<ng-content></ng-content>\n"]}