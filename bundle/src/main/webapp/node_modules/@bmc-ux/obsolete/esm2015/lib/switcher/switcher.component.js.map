{"version":3,"file":"switcher.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-obsolete/src/lib/switcher/switcher.component.ts","../../../../../../libs/adapt-obsolete/src/lib/switcher/switcher.component.html"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Injector,\n  Input,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptTranslateService,\n  createFormControlValidator,\n  createFormControlValueAccessor\n} from '@bmc-ux/adapt-angular';\nimport {AdaptCheckbox2Component} from '../checkbox2/index';\nimport {AdaptRadarService} from '@bmc-ux/adapt-radar';\n\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'adapt-switcher, div[adapt-switcher]',\n  providers: [\n    createFormControlValueAccessor(AdaptSwitcherComponent),\n    createFormControlValidator(AdaptSwitcherComponent),\n  ],\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class.is-checked]': 'context.checked',\n    '[class.is-disabled]': 'context.disabled'\n  },\n  templateUrl: './switcher.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AdaptSwitcherComponent extends AdaptCheckbox2Component implements OnInit {\n  context: AdaptSwitcherComponent = this;\n  _label: string = '';\n  _uniqueId: string = `adapt-checkbox-${++nextUniqueId}`;\n\n  @Input() labelPosition: 'before' | 'after' = 'after';\n\n  /**\n   * sizes - lg and sm\n   */\n  @Input() size: string = '';\n\n  @Input() @HostBinding('class')\n  get hostClasses(): string {\n    return [\n      'switcher',\n      this.labelPosition === 'before' ? 'switcher__before' : ''\n    ].join(' ');\n  }\n\n\n  /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n  @Input() id: string = this._uniqueId;\n\n  get inputId(): string {\n    return `${this.id || this._uniqueId}-input`;\n  }\n\n\n  /** Name value will be applied to the input element if present */\n  @Input() name: string | null = null;\n\n  /** The tabindex attribute of the native input element */\n  @Input() tabindex: number = null;\n\n  /**\n   * The label text of the checkbox component\n   */\n  @Input()\n  get label(): string {\n    return this._label;\n  }\n\n  set label(v: string) {\n    this._label = v;\n  }\n\n  /** The value attribute of the native input element */\n  @Input() value: string;\n\n  /**\n   * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n   * take precedence so this may be omitted.\n   */\n  @Input('aria-label') ariaLabel: string = '';\n\n  /**\n   * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n   */\n  @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n  @Input() ariaDescribedBy: string | null = null;\n\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() readonly focus: EventEmitter<any> = new EventEmitter();\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() readonly blur: EventEmitter<any> = new EventEmitter();\n\n  /** Event emitted when the switcher value changes. */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() readonly change: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  constructor(\n    injector: Injector,\n    element: ElementRef,\n    renderer: Renderer2,\n    changeDetectorRef: ChangeDetectorRef,\n    ts: AdaptTranslateService,\n    _adaptRadarService: AdaptRadarService) {\n    super(injector, element, renderer, changeDetectorRef, ts, _adaptRadarService, AdaptRadarAngularCustomEventName.AdaptSwitcher);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  onInputClick(e: any): void {\n    super.onInputClick(e);\n  }\n}\n","<ng-content select=\".switcher-before\"></ng-content>\n\n<div [ngClass]=\"size ? 'switch switch-' + size : 'switch'\"\n     [class.readonly]=\"context.readonly\">\n  <label>\n    <input #input\n           type=\"checkbox\"\n           [attr.value]=\"context.value\"\n           [attr.name]=\"context.name\"\n           [id]=\"context.inputId\"\n           [disabled]=\"context.disabled\"\n           [checked]=\"context.checked\"\n           [required]=\"context.required\"\n           [tabIndex]=\"context.tabindex\"\n           (focus)=\"context.onFocus()\"\n           (blur)=\"context.onBlur()\"\n           (change)=\"context.onInteractionEvent($event)\"\n           (click)=\"context.onInputClick($event)\"\n           [attr.aria-label]=\"context.ariaLabel || null\"\n           [attr.aria-labelledby]=\"context.ariaLabelledby\"\n           [attr.aria-describedby]=\"context.ariaDescribedBy || null\"\n           [attr.aria-checked]=\"context._getAriaChecked()\"\n           [attr.aria-required]=\"context.required\"\n    />\n    <span class=\"switch__slider\"></span>\n\n    <span class=\"switch__item form-control-label font-weight-normal\"\n          [ngClass]=\"labelPosition === 'after' ? 'm-start-1-5' : 'm-end-1-5'\">\n      <span *ngIf=\"context.label\">{{context.label}}</span>\n      <span class=\"letter-space\" *ngIf=\"required\"></span>\n      <span class=\"form-control-required\" *ngIf=\"context.required\">{{context.requiredLabel}}</span>\n    </span>\n\n  </label>\n  <span class=\"icon-space\" *ngIf=\"context.tooltipIconCls || context.popoverIcon\"></span>\n  <adapt-icon *ngIf=\"context.tooltipIconCls && !context.popoverIcon\"\n              [adaptRadarDisableEventSending]=\"true\"\n              [ngClass]=\"labelPosition === 'after' ? 'm-start-1' : 'm-end-1'\"\n              [name]=\"context.tooltipIconCls\"\n              placement=\"top\"\n              adaptTooltip={{context.tooltipText}}></adapt-icon>\n\n  <adapt-icon *ngIf=\"context.popoverIcon\" [name]=\"context.popoverIcon\"\n              [adaptRadarDisableEventSending]=\"true\"\n              [ngClass]=\"labelPosition === 'after' ? 'm-start-1' : 'm-end-1'\"\n              [placement]=\"context.popoverPlacement\"\n              [adaptPopover]=\"context.popoverContent\"\n              [triggers]=\"context.popoverTriggers\"></adapt-icon>\n\n</div>\n\n<ng-content select=\".switcher-after\"></ng-content>\n"]}