/* eslint-disable @typescript-eslint/no-explicit-any */
import { ChangeDetectorRef, Component, ElementRef, forwardRef, HostBinding, Injector, Input, IterableDiffers, NgZone, Optional, Renderer2, ViewChild, ViewEncapsulation } from '@angular/core';
import { Router } from '@angular/router';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { animate, state, style, transition, trigger, useAnimation } from '@angular/animations';
import { EventManager } from '@angular/platform-browser';
import { Directionality } from '@angular/cdk/bidi';
import { AdaptDeviceDetectionService, AdaptFocusMonitorService, AdaptRadarAngularCustomEventName, AdaptTranslateService, ANIMATION_DURATION, ANIMATION_NAME, ANIMATION_TIMING_FUNCTION, LayerService, ResizeService, ScrollManageService } from '@bmc-ux/adapt-angular';
import { AdaptSelectComponent, AdaptSelectSearchFilter, SelectModelFormat } from '../select/index';
import { AdaptRadarService } from '@bmc-ux/adapt-radar';
import * as i0 from "@angular/core";
import * as i1 from "../select/index";
import * as i2 from "@bmc-ux/adapt-angular";
import * as i3 from "@angular/router";
import * as i4 from "@angular/platform-browser";
import * as i5 from "@angular/cdk/bidi";
import * as i6 from "@bmc-ux/adapt-radar";
import * as i7 from "@angular/common";
import * as i8 from "@angular/forms";
const _c0 = ["inlineList"];
function AdaptSelectInlineComponent_adapt_rx_control_label_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "adapt-rx-control-label", 8);
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵproperty("label", ctx_r0.label)("requiredLabel", ctx_r0.texts.requiredText)("showRequiredLabel", ctx_r0.required)("subLabel", ctx_r0.subLabel)("tooltip", ctx_r0.tooltipConfig);
} }
function AdaptSelectInlineComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1, "\n  ");
    i0.ɵɵelementStart(2, "p", 9);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(4, "\n");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵproperty("@validationFeedbackAnimation", undefined);
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate(ctx_r1.displayMessage);
} }
function AdaptSelectInlineComponent_div_4_button_4_Template(rf, ctx) { if (rf & 1) {
    const _r9 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 13);
    i0.ɵɵlistener("click", function AdaptSelectInlineComponent_div_4_button_4_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(2); return ctx_r8.clearSearchFilter($event); });
    i0.ɵɵtext(1, "\n  ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    i0.ɵɵproperty("@searchAnim", undefined);
} }
function AdaptSelectInlineComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 10);
    i0.ɵɵtext(1, "\n  ");
    i0.ɵɵelement(2, "input", 11);
    i0.ɵɵtext(3, "\n\n  ");
    i0.ɵɵtemplate(4, AdaptSelectInlineComponent_div_4_button_4_Template, 2, 1, "button", 12);
    i0.ɵɵtext(5, "\n");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵpropertyInterpolate("placeholder", ctx_r2.texts.searchPlaceholder);
    i0.ɵɵproperty("formControl", ctx_r2.searchFilterText);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r2.searchFilterText.value.length > 0);
} }
function AdaptSelectInlineComponent_div_9_div_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 16);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r10 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n      ", ctx_r10.getHeaderText(), "\n    ");
} }
function AdaptSelectInlineComponent_div_9_div_4_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n        ");
    i0.ɵɵelementStart(2, "span", 18);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(4, "\n        ");
    i0.ɵɵelement(5, "adapt-custom-actions", 19);
    i0.ɵɵtext(6, "\n      ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r12 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("@openClose", ctx_r12.rtl ? ctx_r12.searchFilterText.value ? "showRTL" : "hideRTL" : ctx_r12.searchFilterText.value ? "show" : "hide");
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate2("\n            ", ctx_r12.texts.filteredTo, " ", ctx_r12.getFilteredItems().length, "\n        ");
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("actions", ctx_r12.customActions);
} }
function AdaptSelectInlineComponent_div_9_div_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 17);
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵtemplate(2, AdaptSelectInlineComponent_div_9_div_4_ng_container_2_Template, 7, 4, "ng-container", 1);
    i0.ɵɵtext(3, "\n    ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r11 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r11.displayedOptions && ctx_r11.displayedOptions.length !== 0 && (ctx_r11.settings.showCheckAll || ctx_r11.settings.showUncheckAll));
} }
function AdaptSelectInlineComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1, "\n    ");
    i0.ɵɵtemplate(2, AdaptSelectInlineComponent_div_9_div_2_Template, 2, 1, "div", 14);
    i0.ɵɵtext(3, "\n\n    ");
    i0.ɵɵtemplate(4, AdaptSelectInlineComponent_div_9_div_4_Template, 4, 1, "div", 15);
    i0.ɵɵtext(5, "\n  ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r4.showHeader());
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", !(ctx_r4.disabled || ctx_r4.readonly || ctx_r4.allOptionsDisabled()));
} }
function AdaptSelectInlineComponent_li_13_Template(rf, ctx) { if (rf & 1) {
    const _r17 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "li", 20);
    i0.ɵɵlistener("keydown.space", function AdaptSelectInlineComponent_li_13_Template_li_keydown_space_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r17); const option_r13 = restoredCtx.$implicit; const ctx_r16 = i0.ɵɵnextContext(); return ctx_r16.setSelected($event, option_r13); })("keyup.enter", function AdaptSelectInlineComponent_li_13_Template_li_keyup_enter_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r17); const option_r13 = restoredCtx.$implicit; const ctx_r18 = i0.ɵɵnextContext(); return ctx_r18.setSelected($event, option_r13); });
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵelementStart(2, "div", 21);
    i0.ɵɵtext(3, "\n        ");
    i0.ɵɵelementStart(4, "label", 22);
    i0.ɵɵtext(5, "\n          ");
    i0.ɵɵelementStart(6, "input", 23);
    i0.ɵɵlistener("click", function AdaptSelectInlineComponent_li_13_Template_input_click_6_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r17); const option_r13 = restoredCtx.$implicit; const ctx_r19 = i0.ɵɵnextContext(); return ctx_r19.setSelected($event, option_r13); });
    i0.ɵɵelementEnd();
    i0.ɵɵtext(7, "\n          ");
    i0.ɵɵelementStart(8, "span", 24, 25);
    i0.ɵɵtext(10);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(11, "\n        ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(12, "\n      ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(13, "\n    ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const option_r13 = ctx.$implicit;
    const i_r14 = ctx.index;
    const ctx_r5 = i0.ɵɵnextContext();
    i0.ɵɵproperty("adaptFocusMonitor", option_r13.id);
    i0.ɵɵadvance(6);
    i0.ɵɵproperty("disabled", ctx_r5.isDisabled(option_r13))("checked", ctx_r5.isSelected(option_r13));
    i0.ɵɵattribute("data-testid", ctx_r5.testID + "_select_item_" + i_r14);
    i0.ɵɵadvance(4);
    i0.ɵɵtextInterpolate(option_r13.name);
} }
function AdaptSelectInlineComponent_div_16_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 26);
    i0.ɵɵtext(1, "\n    ");
    i0.ɵɵelement(2, "adapt-empty-state", 27);
    i0.ɵɵtext(3, "\n  ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("label", ctx_r6.texts.notFound);
} }
const _c1 = function (a0) { return { "a-select-inline__list_search-enabled": a0 }; };
const _c2 = function (a0) { return { "height": a0 }; };
/**
 * VALUE_ACCESSOR for the select inline
 */
const SELECT_INLINE_VALUE_ACCESSOR = {
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef(() => AdaptSelectInlineComponent),
    multi: true
};
/** In a list menu 6 rows by default only visible - also it might be redefine on he devs end */
export const MENU_MAX_HEIGHT = 234;
export class AdaptSelectInlineComponent extends AdaptSelectComponent {
    constructor(filterSearch, _renderer, detection, element, _focusHandle, _scrollService, _changeDetectorRef, _ngZone, _layerService, _router, _differs, _eventManager, dir, _resizeService, _injector, ts, _adaptRadarService) {
        super(filterSearch, _renderer, detection, element, _focusHandle, _scrollService, _changeDetectorRef, _ngZone, _layerService, _router, _differs, _eventManager, dir, _resizeService, _injector, ts, _adaptRadarService, AdaptRadarAngularCustomEventName.AdaptSelectInline);
        this.filterSearch = filterSearch;
        this._renderer = _renderer;
        this.detection = detection;
        this.element = element;
        this._focusHandle = _focusHandle;
        this._scrollService = _scrollService;
        this._changeDetectorRef = _changeDetectorRef;
        this._ngZone = _ngZone;
        this._router = _router;
        /**
         * Need to redefine the default setting due to new requirements
         */
        this.defaultSettings = {
            pullRight: false,
            enableSearch: true,
            checkedStyle: 'checkbox',
            buttonClasses: '',
            selectionLimit: 0,
            closeOnSelect: false,
            autoUnselect: false,
            showCheckAll: true,
            showUncheckAll: true,
            showTooltip: false,
            dynamicTitleMaxItems: 1,
            maxHeight: ' ',
            showCheckedAll: false,
            hideLabel: false,
            cancelBtn: true,
            doneBtn: true,
            titleMobile: true,
            modelFormat: SelectModelFormat.number
        };
        /**
         * Label icon with a tooltip or popover
         */
        this.tooltipConfig = null;
        /* new error behave for the selection - by default false */
        this.isErrorExist = false;
        // eslint-disable-next-line @angular-eslint/no-input-rename
        this.menuHeight = MENU_MAX_HEIGHT;
        this.simpleView = false;
        this.single = false;
    }
    get customActions() {
        return [
            {
                name: this.searchFilterText.value ? this.texts.checkAllFilter : this.texts.checkAll,
                visible: !this.isHiddenSelectFilteredButton(),
                onClick: this.checkAll.bind(this)
            },
            {
                name: this.searchFilterText.value ? this.texts.uncheckAllFilter : this.texts.uncheckAll,
                visible: !this.isHiddenUncheckFilteredButton(),
                onClick: this.uncheckAll.bind(this)
            }
        ];
    }
    ngOnInit() {
        super.ngOnInit();
        this.settings = Object.assign(Object.assign({}, this.defaultSettings), this.settings);
        this.texts = Object.assign(Object.assign({}, this.defaultTexts), this.texts);
        if (this.tooltipInputIcon && !this.popoverIcon) {
            this.tooltipConfig = {
                iconName: this.tooltipInputIcon,
                content: this.tooltipInputText,
                placement: 'top',
                popoverMode: false
            };
        }
        else if (this.popoverIcon) {
            this.tooltipConfig = {
                iconName: this.popoverIcon,
                content: this.popoverContent,
                placement: this.popoverPlacement,
                popoverMode: true,
                popoverTriggers: this.popoverTriggers
            };
        }
    }
    trackByForOptions(index, option) {
        return option.id || index;
    }
}
AdaptSelectInlineComponent.ɵfac = function AdaptSelectInlineComponent_Factory(t) { return new (t || AdaptSelectInlineComponent)(i0.ɵɵdirectiveInject(i1.AdaptSelectSearchFilter), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2.AdaptDeviceDetectionService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.AdaptFocusMonitorService), i0.ɵɵdirectiveInject(i2.ScrollManageService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.LayerService), i0.ɵɵdirectiveInject(i3.Router, 8), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(i4.EventManager), i0.ɵɵdirectiveInject(i5.Directionality), i0.ɵɵdirectiveInject(i2.ResizeService), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i2.AdaptTranslateService), i0.ɵɵdirectiveInject(i6.AdaptRadarService)); };
AdaptSelectInlineComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptSelectInlineComponent, selectors: [["adapt-select-inline"], ["div", "select-inline", ""]], viewQuery: function AdaptSelectInlineComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 7);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inlineList = _t.first);
    } }, hostVars: 6, hostBindings: function AdaptSelectInlineComponent_HostBindings(rf, ctx) { if (rf & 2) {
        i0.ɵɵclassProp("a-select-inline", true)("is-error", ctx.isErrorExist)("a-select-inline_simple-view", ctx.simpleView);
    } }, inputs: { isErrorExist: "isErrorExist", subLabel: ["sub-label", "subLabel"], menuHeight: ["menu-height", "menuHeight"], simpleView: "simpleView" }, features: [i0.ɵɵProvidersFeature([
            SELECT_INLINE_VALUE_ACCESSOR,
            AdaptSelectSearchFilter,
            AdaptFocusMonitorService
        ]), i0.ɵɵInheritDefinitionFeature], decls: 19, vars: 13, consts: [[3, "label", "requiredLabel", "showRequiredLabel", "subLabel", "tooltip", 4, "ngIf"], [4, "ngIf"], ["class", "a-select-inline__form form-group d-icon-search ", "tabindex", "-1", 4, "ngIf"], [1, "a-select-inline__list", 3, "ngClass", "ngStyle"], ["inlineList", ""], [1, "list-unstyled", "a-select-inline__list-items"], ["class", "a-select-inline__item focusable", "role", "option", "tabindex", "0", 3, "adaptFocusMonitor", "keydown.space", "keyup.enter", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["role", "presentation", "class", "a-select-inline__header is-helper-text", 4, "ngIf"], [3, "label", "requiredLabel", "showRequiredLabel", "subLabel", "tooltip"], [1, "form-control-feedback", "m-0", "pt-1", "pb-2"], ["tabindex", "-1", 1, "a-select-inline__form", "form-group", "d-icon-search"], ["type", "text", "adaptFocusMonitor", "", 1, "a-select-inline__input", "form-control", 3, "formControl", "placeholder"], ["type", "button", "class", "a-select-inline__close d-icon-cross_adapt", "adaptFocusMonitor", "", 3, "click", 4, "ngIf"], ["type", "button", "adaptFocusMonitor", "", 1, "a-select-inline__close", "d-icon-cross_adapt", 3, "click"], ["class", "dropdown-header", 4, "ngIf"], ["class", "select-inline__select-buttons", 4, "ngIf"], [1, "dropdown-header"], [1, "select-inline__select-buttons"], [1, "select-inline__counter"], [3, "actions"], ["role", "option", "tabindex", "0", 1, "a-select-inline__item", "focusable", 3, "adaptFocusMonitor", "keydown.space", "keyup.enter"], [1, "checkbox"], [1, "checkbox__label"], ["type", "checkbox", "tabindex", "-1", 1, "checkbox__input", 3, "disabled", "checked", "click"], [1, "checkbox__item"], ["dropdownItem", ""], ["role", "presentation", 1, "a-select-inline__header", "is-helper-text"], ["type", "search", 3, "adaptRadarDisableEventSending", "label"]], template: function AdaptSelectInlineComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, AdaptSelectInlineComponent_adapt_rx_control_label_0_Template, 1, 5, "adapt-rx-control-label", 0);
        i0.ɵɵtext(1, "\n\n");
        i0.ɵɵtemplate(2, AdaptSelectInlineComponent_div_2_Template, 5, 2, "div", 1);
        i0.ɵɵtext(3, "\n\n");
        i0.ɵɵtemplate(4, AdaptSelectInlineComponent_div_4_Template, 6, 3, "div", 2);
        i0.ɵɵtext(5, "\n\n");
        i0.ɵɵelementStart(6, "div", 3, 4);
        i0.ɵɵtext(8, "\n  ");
        i0.ɵɵtemplate(9, AdaptSelectInlineComponent_div_9_Template, 6, 2, "div", 1);
        i0.ɵɵtext(10, "\n\n  ");
        i0.ɵɵelementStart(11, "ul", 5);
        i0.ɵɵtext(12, "\n    ");
        i0.ɵɵtemplate(13, AdaptSelectInlineComponent_li_13_Template, 14, 5, "li", 6);
        i0.ɵɵtext(14, "\n  ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(15, "\n\n  ");
        i0.ɵɵtemplate(16, AdaptSelectInlineComponent_div_16_Template, 4, 2, "div", 7);
        i0.ɵɵtext(17, "\n\n");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(18, "\n");
    } if (rf & 2) {
        i0.ɵɵproperty("ngIf", !ctx.settings.hideLabel);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.isErrorExist && ctx.displayMessage && ctx.displayMessage.length > 0);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.settings.enableSearch && !ctx.simpleView);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(9, _c1, ctx.settings.enableSearch))("ngStyle", i0.ɵɵpureFunction1(11, _c2, ctx.menuHeight + "px"));
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", !ctx.simpleView);
        i0.ɵɵadvance(4);
        i0.ɵɵproperty("ngForOf", ctx.displayedOptions)("ngForTrackBy", ctx.trackByForOptions);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx.displayedOptions && ctx.displayedOptions.length === 0);
    } }, directives: [i7.NgIf, i7.NgClass, i7.NgStyle, i7.NgForOf, i2.AdaptRxControlLabelComponent, i2.AdaptDragonInputHandlerDirective, i8.DefaultValueAccessor, i2.AdaptFocusMonitorDirective, i8.NgControlStatus, i8.FormControlDirective, i2.AdaptCustomActionsComponent, i2.AdaptEmptyStateComponent], styles: ["\n    .a-select-inline__list .dropdown-header {\n      padding: .875rem .875rem .1875rem;\n    }\n\n    .select-inline__select-buttons {\n      padding: 0 14px;\n    }\n\n    .select-inline__counter {\n      display: inline-flex;\n      overflow: hidden;\n      color: #959799;\n      white-space: nowrap;\n      opacity: 0;\n      align-self: center;\n    }\n  "], encapsulation: 2, data: { animation: [
            trigger('validationFeedbackAnimation', [
                transition(':enter', [
                    useAnimation(ANIMATION_NAME.fadeIn)
                ]),
                transition(':leave', [
                    useAnimation(ANIMATION_NAME.fadeOut)
                ])
            ]),
            trigger('validationFeedbackChangeAnimation', [
                transition('* => *', [
                    useAnimation(ANIMATION_NAME.opacity)
                ])
            ]),
            trigger('searchAnim', [
                transition('void => *', [
                    style({ visibility: 'hidden', opacity: 0 }),
                    animate(`.25s ${ANIMATION_TIMING_FUNCTION.base.transitionIn}`, style({ visibility: 'visible', opacity: .6 }))
                ]),
                transition('* => void', [
                    style({ visibility: 'visible', opacity: .6 }),
                    animate(`.25s ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`, style({ visibility: 'hidden', opacity: 0 }))
                ])
            ]),
            trigger('shadowAnimation', [
                transition('void => *', [
                    style({ visibility: 'hidden', opacity: 0, height: 0 }),
                    animate(`.25s ${ANIMATION_TIMING_FUNCTION.base.transitionIn}`, style({ visibility: 'visible', opacity: 1, height: '*' }))
                ]),
                transition('* => void', [
                    style({ visibility: 'visible', opacity: 1, height: '*' }),
                    animate(`.25s ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`, style({ visibility: 'hidden', opacity: 0, height: 0 }))
                ])
            ]),
            trigger('openClose', [
                state('show', style({
                    width: '*',
                    marginLeft: '0',
                    marginRight: '.875rem',
                    opacity: 1
                })),
                state('hide', style({
                    marginRight: '0',
                    width: '0px',
                    opacity: 0
                })),
                transition('show => hide', [
                    animate(`${ANIMATION_DURATION.medium} ${ANIMATION_TIMING_FUNCTION.base.transitionIn}`)
                ]),
                transition('hide => show', [
                    animate(`${ANIMATION_DURATION.medium} ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`)
                ]),
                state('showRTL', style({
                    width: '*',
                    opacity: 1,
                    marginLeft: '.875rem',
                })),
                state('hideRTL', style({
                    marginLeft: '0',
                    width: '0px',
                    opacity: 0
                })),
                transition('showRTL => hideRTL', [
                    animate(`${ANIMATION_DURATION.medium} ${ANIMATION_TIMING_FUNCTION.base.transitionIn}`)
                ]),
                transition('hideRTL => showRTL', [
                    animate(`${ANIMATION_DURATION.medium} ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`)
                ]),
            ]),
        ] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptSelectInlineComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-select-inline, div[select-inline]',
                // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                host: {
                    '[class.a-select-inline]': 'true',
                    '[class.is-error]': 'isErrorExist'
                },
                templateUrl: './select-inline.component.html',
                encapsulation: ViewEncapsulation.None,
                providers: [
                    SELECT_INLINE_VALUE_ACCESSOR,
                    AdaptSelectSearchFilter,
                    AdaptFocusMonitorService
                ],
                animations: [
                    trigger('validationFeedbackAnimation', [
                        transition(':enter', [
                            useAnimation(ANIMATION_NAME.fadeIn)
                        ]),
                        transition(':leave', [
                            useAnimation(ANIMATION_NAME.fadeOut)
                        ])
                    ]),
                    trigger('validationFeedbackChangeAnimation', [
                        transition('* => *', [
                            useAnimation(ANIMATION_NAME.opacity)
                        ])
                    ]),
                    trigger('searchAnim', [
                        transition('void => *', [
                            style({ visibility: 'hidden', opacity: 0 }),
                            animate(`.25s ${ANIMATION_TIMING_FUNCTION.base.transitionIn}`, style({ visibility: 'visible', opacity: .6 }))
                        ]),
                        transition('* => void', [
                            style({ visibility: 'visible', opacity: .6 }),
                            animate(`.25s ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`, style({ visibility: 'hidden', opacity: 0 }))
                        ])
                    ]),
                    trigger('shadowAnimation', [
                        transition('void => *', [
                            style({ visibility: 'hidden', opacity: 0, height: 0 }),
                            animate(`.25s ${ANIMATION_TIMING_FUNCTION.base.transitionIn}`, style({ visibility: 'visible', opacity: 1, height: '*' }))
                        ]),
                        transition('* => void', [
                            style({ visibility: 'visible', opacity: 1, height: '*' }),
                            animate(`.25s ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`, style({ visibility: 'hidden', opacity: 0, height: 0 }))
                        ])
                    ]),
                    trigger('openClose', [
                        state('show', style({
                            width: '*',
                            marginLeft: '0',
                            marginRight: '.875rem',
                            opacity: 1
                        })),
                        state('hide', style({
                            marginRight: '0',
                            width: '0px',
                            opacity: 0
                        })),
                        transition('show => hide', [
                            animate(`${ANIMATION_DURATION.medium} ${ANIMATION_TIMING_FUNCTION.base.transitionIn}`)
                        ]),
                        transition('hide => show', [
                            animate(`${ANIMATION_DURATION.medium} ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`)
                        ]),
                        state('showRTL', style({
                            width: '*',
                            opacity: 1,
                            marginLeft: '.875rem',
                        })),
                        state('hideRTL', style({
                            marginLeft: '0',
                            width: '0px',
                            opacity: 0
                        })),
                        transition('showRTL => hideRTL', [
                            animate(`${ANIMATION_DURATION.medium} ${ANIMATION_TIMING_FUNCTION.base.transitionIn}`)
                        ]),
                        transition('hideRTL => showRTL', [
                            animate(`${ANIMATION_DURATION.medium} ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`)
                        ]),
                    ]),
                ],
                styles: [`
    .a-select-inline__list .dropdown-header {
      padding: .875rem .875rem .1875rem;
    }

    .select-inline__select-buttons {
      padding: 0 14px;
    }

    .select-inline__counter {
      display: inline-flex;
      overflow: hidden;
      color: #959799;
      white-space: nowrap;
      opacity: 0;
      align-self: center;
    }
  `]
            }]
    }], function () { return [{ type: i1.AdaptSelectSearchFilter }, { type: i0.Renderer2 }, { type: i2.AdaptDeviceDetectionService }, { type: i0.ElementRef }, { type: i2.AdaptFocusMonitorService }, { type: i2.ScrollManageService }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i2.LayerService }, { type: i3.Router, decorators: [{
                type: Optional
            }] }, { type: i0.IterableDiffers }, { type: i4.EventManager }, { type: i5.Directionality }, { type: i2.ResizeService }, { type: i0.Injector }, { type: i2.AdaptTranslateService }, { type: i6.AdaptRadarService }]; }, { isErrorExist: [{
            type: Input
        }], subLabel: [{
            type: Input,
            args: ['sub-label']
        }], menuHeight: [{
            type: Input,
            args: ['menu-height']
        }], simpleView: [{
            type: HostBinding,
            args: ['class.a-select-inline_simple-view']
        }, {
            type: Input
        }], inlineList: [{
            type: ViewChild,
            args: ['inlineList', { static: true }]
        }] }); })();
//# sourceMappingURL=select-inline.component.js.map