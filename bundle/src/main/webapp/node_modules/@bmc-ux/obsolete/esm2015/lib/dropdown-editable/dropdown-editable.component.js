import { Component, ElementRef, EventEmitter, Input, NgZone, Output, ViewChild } from '@angular/core';
import { take } from 'rxjs/operators';
import { AdaptDropdownEditableSize, AdaptRadarAngularCustomEventName, AdaptTranslateService } from '@bmc-ux/adapt-angular';
import { AdaptRadarGenericDirective, AdaptRadarService } from '@bmc-ux/adapt-radar';
import * as i0 from "@angular/core";
import * as i1 from "@bmc-ux/adapt-angular";
import * as i2 from "@bmc-ux/adapt-radar";
import * as i3 from "@angular/common";
import * as i4 from "@angular/forms";
const _c0 = ["customInput"];
function AdaptDropDownEditableComponent_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n          ");
    i0.ɵɵelementStart(1, "div", 10);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(3, "\n        ");
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate2("", ctx_r1.label ? ctx_r1.label + ":" : "", " ", ctx_r1.model, "");
} }
function AdaptDropDownEditableComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 11);
    i0.ɵɵtext(1, "\n          ");
    i0.ɵɵelementContainer(2, 12);
    i0.ɵɵtext(3, "\n        ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    const _r0 = i0.ɵɵreference(6);
    i0.ɵɵclassMap("btn btn-secondary w-100 text-default align-start " + ctx_r2.size);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", _r0);
} }
function AdaptDropDownEditableComponent_button_10_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "button", 13);
    i0.ɵɵtext(1, "\n          ");
    i0.ɵɵelementContainer(2, 12);
    i0.ɵɵtext(3, "\n        ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext();
    const _r0 = i0.ɵɵreference(6);
    i0.ɵɵclassMap("btn btn-secondary dropdown-toggle w-100 align-start " + ctx_r3.size);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", _r0);
} }
function AdaptDropDownEditableComponent_input_12_Template(rf, ctx) { if (rf & 1) {
    const _r12 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "input", 14, 15);
    i0.ɵɵlistener("ngModelChange", function AdaptDropDownEditableComponent_input_12_Template_input_ngModelChange_0_listener($event) { i0.ɵɵrestoreView(_r12); const ctx_r11 = i0.ɵɵnextContext(); return ctx_r11.customItemModel = $event; })("blur", function AdaptDropDownEditableComponent_input_12_Template_input_blur_0_listener() { i0.ɵɵrestoreView(_r12); const ctx_r13 = i0.ɵɵnextContext(); return ctx_r13.exitFocusMode(); })("keyup.esc", function AdaptDropDownEditableComponent_input_12_Template_input_keyup_esc_0_listener() { i0.ɵɵrestoreView(_r12); const ctx_r14 = i0.ɵɵnextContext(); return ctx_r14.exitFocusMode(); })("keydown.enter", function AdaptDropDownEditableComponent_input_12_Template_input_keydown_enter_0_listener() { i0.ɵɵrestoreView(_r12); const ctx_r15 = i0.ɵɵnextContext(); return ctx_r15.exitFocusMode(); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext();
    i0.ɵɵclassProp("form-control-sm", ctx_r4.size === ctx_r4.sizeVariants.small)("form-control-lg", ctx_r4.size === ctx_r4.sizeVariants.large);
    i0.ɵɵproperty("ngModel", ctx_r4.customItemModel);
} }
function AdaptDropDownEditableComponent_ng_template_17_ng_template_1_Template(rf, ctx) { }
function AdaptDropDownEditableComponent_ng_template_17_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n          ");
    i0.ɵɵtemplate(1, AdaptDropDownEditableComponent_ng_template_17_ng_template_1_Template, 0, 0, "ng-template", 12);
    i0.ɵɵtext(2, "\n        ");
} if (rf & 2) {
    i0.ɵɵnextContext();
    const _r8 = i0.ɵɵreference(26);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r8);
} }
function AdaptDropDownEditableComponent_ng_container_19_Template(rf, ctx) { if (rf & 1) {
    const _r19 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n          ");
    i0.ɵɵelementStart(2, "button", 16);
    i0.ɵɵlistener("click", function AdaptDropDownEditableComponent_ng_container_19_Template_button_click_2_listener() { const restoredCtx = i0.ɵɵrestoreView(_r19); const item_r17 = restoredCtx.$implicit; const ctx_r18 = i0.ɵɵnextContext(); return ctx_r18.setModel(item_r17); });
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(4, "\n        ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const item_r17 = ctx.$implicit;
    const ctx_r6 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵclassProp("active", item_r17 === ctx_r6.model);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(item_r17);
} }
function AdaptDropDownEditableComponent_ng_template_21_ng_template_1_Template(rf, ctx) { }
function AdaptDropDownEditableComponent_ng_template_21_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n          ");
    i0.ɵɵtemplate(1, AdaptDropDownEditableComponent_ng_template_21_ng_template_1_Template, 0, 0, "ng-template", 12);
    i0.ɵɵtext(2, "\n        ");
} if (rf & 2) {
    i0.ɵɵnextContext();
    const _r8 = i0.ɵɵreference(26);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r8);
} }
function AdaptDropDownEditableComponent_ng_template_25_Template(rf, ctx) { if (rf & 1) {
    const _r22 = i0.ɵɵgetCurrentView();
    i0.ɵɵtext(0, "\n      ");
    i0.ɵɵelementStart(1, "button", 17);
    i0.ɵɵlistener("click", function AdaptDropDownEditableComponent_ng_template_25_Template_button_click_1_listener() { i0.ɵɵrestoreView(_r22); const ctx_r21 = i0.ɵɵnextContext(); return ctx_r21.enterEditMode(); });
    i0.ɵɵtext(2, "\n        ");
    i0.ɵɵelementStart(3, "span");
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(5, "\n      ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(6, "\n    ");
} if (rf & 2) {
    const ctx_r9 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵclassProp("active", ctx_r9.customItemModel === ctx_r9.model);
    i0.ɵɵadvance(2);
    i0.ɵɵclassProp("text-secondary", !ctx_r9.customItemModel);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r9.customItemModel || ctx_r9.moreTitle);
} }
export class AdaptDropDownEditableComponent extends AdaptRadarGenericDirective {
    constructor(ts, _ngZone, _adaptRadarService, _elem) {
        super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptDropDownEditable);
        this.ts = ts;
        this._ngZone = _ngZone;
        this.model = 0;
        this.editMode = false;
        this.sizeVariants = AdaptDropdownEditableSize;
        this.defaultTexts = {};
        this.width = '100%';
        this.readonly = false;
        // TODO: Refactor this if possible
        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
        this.items = [];
        this.size = this.sizeVariants.medium;
        this.mobileView = {};
        this.customValueOnTop = false;
        this.valueChange = new EventEmitter();
        this.setDefaultTexts(ts.getCurrentLanguage());
    }
    set value(v) {
        if (v !== undefined) {
            this.model = v;
            if (this.items.length && this.items.indexOf(v) === -1) {
                this.customItemModel = v;
            }
        }
    }
    get value() {
        return this.model;
    }
    ngOnInit() {
        this.moreTitle = this.moreTitle || this.defaultTexts.moreTitle;
    }
    setDefaultTexts(translation) {
        this.defaultTexts.moreTitle = translation['adapt.dropdownEditable.more'];
    }
    setModel(item) {
        this.model = item;
        this.customItemModel = null;
        this.valueChange.emit(this.model);
    }
    enterEditMode() {
        this.editMode = true;
        this._ngZone.onStable
            .pipe(take(1))
            .subscribe((() => {
            this.customInput.nativeElement.focus();
        }));
    }
    exitFocusMode() {
        if (this.customItemModel) {
            this.model = this.customItemModel;
            this.valueChange.emit(this.model);
        }
        this.editMode = false;
    }
}
AdaptDropDownEditableComponent.ɵfac = function AdaptDropDownEditableComponent_Factory(t) { return new (t || AdaptDropDownEditableComponent)(i0.ɵɵdirectiveInject(i1.AdaptTranslateService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.AdaptRadarService), i0.ɵɵdirectiveInject(i0.ElementRef)); };
AdaptDropDownEditableComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptDropDownEditableComponent, selectors: [["adapt-dropdown-editable"]], viewQuery: function AdaptDropDownEditableComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customInput = _t.first);
    } }, hostVars: 4, hostBindings: function AdaptDropDownEditableComponent_HostBindings(rf, ctx) { if (rf & 2) {
        i0.ɵɵstyleProp("display", "inline-block")("width", ctx.width);
    } }, inputs: { value: "value", width: "width", readonly: "readonly", moreTitle: "moreTitle", label: "label", items: "items", size: "size", mobileView: "mobileView", customValueOnTop: "customValueOnTop" }, outputs: { valueChange: "valueChange" }, features: [i0.ɵɵInheritDefinitionFeature], decls: 28, vars: 8, consts: [["adaptDropdown", "", 3, "adaptRadarDisableEventSending", "mobileView"], ["adaptDropdownAnchor", "", 2, "background", "none", "padding", "0"], ["uiValue", ""], ["style", "background: none; border: 0; cursor: default;", 3, "class", 4, "ngIf"], ["type", "button", "adaptDropdownToggle", "", 3, "class", 4, "ngIf"], ["type", "text", "class", "form-control", 3, "form-control-sm", "form-control-lg", "ngModel", "ngModelChange", "blur", "keyup.esc", "keydown.enter", 4, "ngIf"], ["adaptDropdownMenu", "", 1, "dropdown-menu"], [3, "ngIf"], [4, "ngFor", "ngForOf"], ["addCustomValueTemplate", ""], [2, "overflow", "hidden", "white-space", "nowrap", "text-overflow", "ellipsis"], [2, "background", "none", "border", "0", "cursor", "default"], [3, "ngTemplateOutlet"], ["type", "button", "adaptDropdownToggle", ""], ["type", "text", 1, "form-control", 3, "ngModel", "ngModelChange", "blur", "keyup.esc", "keydown.enter"], ["customInput", ""], ["type", "button", 1, "dropdown-item", 3, "click"], ["type", "button", 1, "dropdown-item", "dropdown-item-editable", 3, "click"]], template: function AdaptDropDownEditableComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtext(0, "\n    ");
        i0.ɵɵelementStart(1, "div", 0);
        i0.ɵɵtext(2, "\n      ");
        i0.ɵɵelementStart(3, "div", 1);
        i0.ɵɵtext(4, "\n        ");
        i0.ɵɵtemplate(5, AdaptDropDownEditableComponent_ng_template_5_Template, 4, 2, "ng-template", null, 2, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtext(7, "\n\n        ");
        i0.ɵɵtemplate(8, AdaptDropDownEditableComponent_div_8_Template, 4, 3, "div", 3);
        i0.ɵɵtext(9, "\n        ");
        i0.ɵɵtemplate(10, AdaptDropDownEditableComponent_button_10_Template, 4, 3, "button", 4);
        i0.ɵɵtext(11, "\n        ");
        i0.ɵɵtemplate(12, AdaptDropDownEditableComponent_input_12_Template, 2, 5, "input", 5);
        i0.ɵɵtext(13, "\n      ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(14, "\n      ");
        i0.ɵɵelementStart(15, "div", 6);
        i0.ɵɵtext(16, "\n        ");
        i0.ɵɵtemplate(17, AdaptDropDownEditableComponent_ng_template_17_Template, 3, 1, "ng-template", 7);
        i0.ɵɵtext(18, "\n        ");
        i0.ɵɵtemplate(19, AdaptDropDownEditableComponent_ng_container_19_Template, 5, 3, "ng-container", 8);
        i0.ɵɵtext(20, "\n        ");
        i0.ɵɵtemplate(21, AdaptDropDownEditableComponent_ng_template_21_Template, 3, 1, "ng-template", 7);
        i0.ɵɵtext(22, "\n      ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(23, "\n    ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(24, "\n\n    ");
        i0.ɵɵtemplate(25, AdaptDropDownEditableComponent_ng_template_25_Template, 7, 5, "ng-template", null, 9, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtext(27, "\n  ");
    } if (rf & 2) {
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("adaptRadarDisableEventSending", true)("mobileView", ctx.mobileView);
        i0.ɵɵadvance(7);
        i0.ɵɵproperty("ngIf", ctx.readonly && !ctx.editMode);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx.readonly && !ctx.editMode);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.editMode);
        i0.ɵɵadvance(5);
        i0.ɵɵproperty("ngIf", ctx.customValueOnTop);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngForOf", ctx.items);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx.customValueOnTop);
    } }, directives: [i1.AdaptDropdownDirective, i1.AdaptDropdownAnchorDirective, i3.NgIf, i1.AdaptDropdownMenuDirective, i3.NgForOf, i3.NgTemplateOutlet, i1.AdaptDropdownToggleDirective, i1.AdaptDragonInputHandlerDirective, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptDropDownEditableComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-dropdown-editable',
                template: `
    <div adaptDropdown
         [adaptRadarDisableEventSending]="true"
         [mobileView]="mobileView">
      <div adaptDropdownAnchor style="background: none; padding: 0">
        <ng-template #uiValue>
          <div
            style="overflow: hidden; white-space: nowrap; text-overflow: ellipsis">{{label ? (label + ':') : ''}} {{model}}</div>
        </ng-template>

        <div
          *ngIf="readonly && !editMode"
          [class]="'btn btn-secondary w-100 text-default align-start ' + size"
          style="background: none; border: 0; cursor: default;">
          <ng-container [ngTemplateOutlet]="uiValue"></ng-container>
        </div>
        <button type="button"
                [class]="'btn btn-secondary dropdown-toggle w-100 align-start ' + size"
                *ngIf="!readonly && !editMode"
                adaptDropdownToggle>
          <ng-container [ngTemplateOutlet]="uiValue"></ng-container>
        </button>
        <input #customInput
               type="text"
               class="form-control"
               [class.form-control-sm]="size === sizeVariants.small"
               [class.form-control-lg]="size === sizeVariants.large"
               [(ngModel)]="customItemModel"
               *ngIf="editMode"
               (blur)="exitFocusMode()"
               (keyup.esc)="exitFocusMode()"
               (keydown.enter)="exitFocusMode()"/>
      </div>
      <div adaptDropdownMenu class="dropdown-menu">
        <ng-template [ngIf]="customValueOnTop">
          <ng-template [ngTemplateOutlet]="addCustomValueTemplate"></ng-template>
        </ng-template>
        <ng-container *ngFor="let item of items">
          <button class="dropdown-item"
                  type="button"
                  [class.active]="item === model"
                  (click)="setModel(item)">{{item}}</button>
        </ng-container>
        <ng-template [ngIf]="!customValueOnTop">
          <ng-template [ngTemplateOutlet]="addCustomValueTemplate"></ng-template>
        </ng-template>
      </div>
    </div>

    <ng-template #addCustomValueTemplate>
      <button class="dropdown-item dropdown-item-editable"
              type="button"
              [class.active]="customItemModel === model"
              (click)="enterEditMode()">
        <span [class.text-secondary]="!customItemModel">{{customItemModel || moreTitle}}</span>
      </button>
    </ng-template>
  `,
                // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                host: {
                    '[style.display]': '"inline-block"',
                    '[style.width]': 'width'
                }
            }]
    }], function () { return [{ type: i1.AdaptTranslateService }, { type: i0.NgZone }, { type: i2.AdaptRadarService }, { type: i0.ElementRef }]; }, { value: [{
            type: Input
        }], width: [{
            type: Input
        }], readonly: [{
            type: Input
        }], moreTitle: [{
            type: Input
        }], label: [{
            type: Input
        }], items: [{
            type: Input
        }], size: [{
            type: Input
        }], mobileView: [{
            type: Input
        }], customValueOnTop: [{
            type: Input
        }], valueChange: [{
            type: Output
        }], customInput: [{
            type: ViewChild,
            args: ['customInput']
        }] }); })();
//# sourceMappingURL=dropdown-editable.component.js.map