{"version":3,"file":"datetime-year-picker.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-obsolete/src/lib/datetime2/datetime-year-picker.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  OnChanges,\n  AfterViewInit,\n  ViewChild,\n  Input,\n  Output,\n  ElementRef,\n  EventEmitter,\n  SimpleChanges,\n  OnInit\n} from '@angular/core';\nimport moment from 'moment-es6';\nimport {AnimationBuilder, AnimationPlayer, AnimationStyleMetadata, AnimationAnimateMetadata} from '@angular/animations';\nimport {Calendar2Day} from './datetime2.model';\n\n@Component({\n  selector: 'adapt-datetime2-year-picker',\n  template: `\n      <table class=\"a3t-calendar--table a3t-calendar--year_table\">\n          <thead></thead>\n          <tbody #calendarContainerRef>\n          <tr aria-hidden=\"true\">\n              <td colspan=\"3\" class=\"a3t-calendar--table-space-cell\"></td>\n          </tr>\n          <tr *ngFor=\"let years of calendar; let row = index\">\n              <ng-container *ngFor=\"let year of years; let col = index\">\n                  <td class=\"a3t-calendar--table-day a3t-calendar--table-year\"\n                      role=\"gridcell\">\n                      <button\n                              type=\"button\"\n                              (click)=\"onYearClick(year.date, row, col)\"\n                              [class.active]=\"year.isSelected\"\n                              [class.today]=\"year.isToday\"\n                              [class.disabled]=\"year.isDisabled\"\n                              [disabled]=\"year.isDisabled\"\n                      >{{ year.date.format('YYYY') }}</button>\n                  </td>\n              </ng-container>\n          </tr>\n          <tr aria-hidden=\"true\">\n              <td colspan=\"3\" class=\"a3t-calendar--table-space-cell\"></td>\n          </tr>\n          </tbody>\n      </table>\n  `\n})\nexport class AdaptDatetime2YearPickerComponent implements OnChanges, AfterViewInit, OnInit {\n  @ViewChild('calendarContainerRef') calendarContainerRef: ElementRef;\n  animationDirectionForward: boolean = true;\n  @Input() calendarPlayers: {\n    nextOut: AnimationPlayer;\n    nextIn: AnimationPlayer;\n    prevOut: AnimationPlayer;\n    prevIn: AnimationPlayer;\n  };\n\n  @Input() animationsSet: {\n    nextOut: (AnimationStyleMetadata | AnimationAnimateMetadata)[];\n    nextIn: (AnimationStyleMetadata | AnimationAnimateMetadata)[];\n    prevOut: (AnimationStyleMetadata | AnimationAnimateMetadata)[];\n    prevIn: (AnimationStyleMetadata | AnimationAnimateMetadata)[];\n  };\n\n  @Input() yearsPage: number;\n  @Input() disabled: boolean = false;\n  @Output() readonly yearSelect: EventEmitter<moment.Moment> = new EventEmitter<moment.Moment>();\n\n  calendar: Calendar2Day[][];\n\n  private _initialDate: moment.Moment = moment();\n  private _activeDate: moment.Moment = null;\n  private _animationReady: boolean = false;\n  private _redraw: boolean = true;\n\n  private _activeIndex: number = 4;\n  private _columnsAmount: number = 3;\n  private _rowsAmount: number = 4;\n  private _itemsAmount: number = this._rowsAmount * this._columnsAmount;\n\n\n  @Input()\n  set initialDate(initDate: moment.Moment) {\n    if (initDate && initDate.isValid()) {\n      this._initialDate = initDate.clone();\n    }\n  }\n\n  @Input()\n  set activeDate(activeDate: moment.Moment) {\n    if (activeDate && activeDate.isValid()) {\n      this._activeDate = activeDate.clone();\n    } else {\n      this._activeDate = null;\n    }\n\n    if (this.calendar) {\n      this._patchCalendar();\n    }\n  }\n\n  constructor(private _animationBuilder: AnimationBuilder) {\n  }\n\n  ngOnInit(): void {\n    this._initCalendar();\n    this._drawCalendar();\n  }\n\n  onYearClick(year: moment.Moment, row: number, col: number): void {\n    this.yearSelect.emit(year.clone());\n    this._activeIndex = this._columnsAmount * row + col;\n    this._redraw = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.yearsPage) {\n      if (this._redraw || this.yearsPage) {\n        this._drawCalendar();\n        this._redraw = true;\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.calendarPlayers.prevOut = this._animationBuilder.build(this.animationsSet.prevOut)\n      .create(this.calendarContainerRef.nativeElement);\n    this.calendarPlayers.prevIn = this._animationBuilder.build(this.animationsSet.prevIn)\n      .create(this.calendarContainerRef.nativeElement);\n    this.calendarPlayers.nextOut = this._animationBuilder.build(this.animationsSet.nextOut)\n      .create(this.calendarContainerRef.nativeElement);\n    this.calendarPlayers.nextIn = this._animationBuilder.build(this.animationsSet.nextIn)\n      .create(this.calendarContainerRef.nativeElement);\n\n    this._animationReady = true;\n  }\n\n  private _initCalendar(): void {\n    this.calendar =\n      Array(this._rowsAmount)\n        .fill(0)\n        .map(() => Array(this._columnsAmount)\n          .fill(0)\n          .map(() => new Calendar2Day()));\n  }\n\n  private _drawCalendar(): void {\n    const initialDate = Number(this._initialDate.clone().format('YYYY'));\n    const startYear = this._initialDate.clone().startOf('year');\n    const yearsArr: Calendar2Day[] = new Array(this._itemsAmount).fill(0).map(() => new Calendar2Day());\n\n    yearsArr.forEach((item, index) => {\n      if (this._activeIndex > index || this._activeIndex < index) {\n        yearsArr[index].date = startYear.year(initialDate - (this._activeIndex - index) + (this._itemsAmount * this.yearsPage)).clone();\n      } else {\n        yearsArr[index].date = startYear.year(initialDate + this._itemsAmount * this.yearsPage).clone();\n      }\n    });\n\n    // Animate calendar while component redraw\n    this._animateCalendarChange((() => {\n      // Need to transform one-dimensional array into multi-dimensional (4 x 3)\n      this.calendar = yearsArr.reduce((rows, key, index) => {\n        return (index % this._columnsAmount === 0 ? rows.push([key])\n          : rows[rows.length - 1].push(key)) && rows;\n      }, []);\n      this._patchCalendar();\n    }).bind(this));\n  }\n\n  private _animateCalendarChange(changeValFn: () => void): void {\n    if (this._animationReady) {\n      this.calendarPlayers.prevOut.reset();\n      this.calendarPlayers.prevIn.reset();\n      this.calendarPlayers.nextOut.reset();\n      this.calendarPlayers.nextIn.reset();\n\n      const _in = this.animationDirectionForward ? this.calendarPlayers.nextIn : this.calendarPlayers.prevIn;\n      const _out = this.animationDirectionForward ? this.calendarPlayers.nextOut : this.calendarPlayers.prevOut;\n\n      _out.onDone(() => {\n        changeValFn();\n        _in.play();\n      });\n\n      _out.play();\n    } else {\n      changeValFn();\n    }\n  }\n\n  private _patchCalendar(): void {\n    this.calendar.forEach((years: Calendar2Day[]) => {\n      years.forEach((year: Calendar2Day) => {\n        year.isSelected = this._activeDate ?\n          this._activeDate.clone().startOf('year').isSame(year.date.startOf('year')) : false;\n\n        year.isToday = moment().startOf('year').isSame(year.date.startOf('year'));\n        year.isDisabled = this.disabled;\n      });\n    });\n  }\n}\n"]}