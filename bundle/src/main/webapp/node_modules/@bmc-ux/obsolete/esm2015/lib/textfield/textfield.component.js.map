{"version":3,"file":"textfield.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-obsolete/src/lib/textfield/textfield.component.ts","../../../../../../libs/adapt-obsolete/src/lib/textfield/textfield.component.html"],"names":[],"mappings":"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","sourcesContent":["// TODO update types if possible\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport {\n  AfterContentChecked,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  InjectionToken,\n  Injector,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR, NgControl} from '@angular/forms';\nimport {TextfieldNestedSettings} from './textfield.interface';\nimport {transition, trigger, useAnimation} from '@angular/animations';\nimport {fromEvent, ReplaySubject} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, take, takeUntil, tap} from 'rxjs/operators';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRxControlLabelTooltip,\n  AdaptTranslateService,\n  ANIMATION_NAME,\n  debounce,\n  getElementStyles,\n  hasRequiredValidator,\n  ResizeService,\n  SafeCdr,\n  toBoolean,\n  toNumber\n} from '@bmc-ux/adapt-angular';\nimport {AdaptRadarGenericDirective, AdaptRadarService} from '@bmc-ux/adapt-radar';\n\n\nlet nextId = 0;\nconst noop = (): void => {\n  return;\n};\n\nconst cssTextFieldClasses = {\n  FOCUS: 'is-focus',\n  // REQUIRED: 'is-required', // not used yet\n  // DIRTY: 'is-dirty',\n  // NG_DIRTY: 'ng-dirty',\n  NG_TOUCHED: 'ng-touched',\n  // PRISTINE: 'is-pristine',\n  FORM_SUCCESS: 'has-success',\n  FORM_DANGER: 'has-danger',\n  // VALID: 'form-control-success',\n  // IN_VALID: 'form-control-danger'\n};\n\nexport const DISABLE_NATIVE_VALIDITY_CHECKING = new InjectionToken<boolean>('disableNativeValidityChecking');\n\nexport const ADAPT_TEXTFIELD_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AdaptTextFieldComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'adapt-textfield, div[form-group]',\n  templateUrl: './textfield.component.html',\n  providers: [ADAPT_TEXTFIELD_ACCESSOR],\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[attr.id]': 'id',\n    '[class.form-group]': 'true',\n    '[class.textfield]': 'true',\n    '[class.is-icons]': '(iconValid && validState) || (iconInvalid && isError)'\n  },\n  animations: [\n    trigger('validationFeedbackAnimation', [\n      transition(':enter', [\n        useAnimation(ANIMATION_NAME.fadeIn)\n      ]),\n      transition(':leave', [\n        useAnimation(ANIMATION_NAME.fadeOut)\n      ])\n    ]),\n    trigger('validationFeedbackChangeAnimation', [\n      transition('* => *', [\n        useAnimation(ANIMATION_NAME.opacity)\n      ])\n    ])\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AdaptTextFieldComponent extends AdaptRadarGenericDirective implements ControlValueAccessor, AfterContentChecked, OnInit, OnChanges, AfterViewInit, OnDestroy {\n\n  /**\n   * Public variables of textfield component\n   */\n  isError: boolean = false;\n  isDirty: boolean = false;\n  /**\n   * addOnTextLeft: string; addOnTextRight: string; addOnLeft: boolean; addOnRight: boolean\n   */\n  nestedSettingsDefault: TextfieldNestedSettings = {\n    addOnLeft: true,\n    addOnRight: false,\n    addOnTextLeft: '@'\n  };\n\n  inputStyles: CSSStyleDeclaration = null;\n  isTextOverflow: boolean = false;\n\n  isRtl: boolean = false;\n  defaultTexts: {\n    valid?: string;\n    invalid?: string;\n  } = {};\n\n  @Input() overflowText: boolean = true;\n  /**\n   * Label icon with a tooltip or popover\n   */\n  tooltipConfig: AdaptRxControlLabelTooltip = null;\n  /**\n   * The input element type {bs4 view}.\n   */\n  @Input() nested: boolean = false;\n  /**\n   *  Whether the element has settings for type 'nested'\n   */\n  @Input() nestedSettings: TextfieldNestedSettings;\n  /**\n   * Style class of the component.\n   */\n  @Input() customClass: string;\n  /**\n   * The plain text label for the input element\n   */\n  @Input() label: string;\n  /**\n   * The input element type; by default is 'text'\n   */\n  @Input() type: string = 'text';\n  /**\n   * Unique id of the element.\n   */\n  @Input() id: string = `adapt-textfield-${nextId++}`;\n  /**\n   * Unique testID of the element.\n   */\n  @Input() testID: string = `adapt-textfield-${nextId++}`;\n  /**\n   * The icon must be a dpl-iconfont or adapt-iconfont.\n   */\n  @Input() icon: string;\n  /**\n   * Whether the input is with success icon\n   */\n  @Input() iconValid: boolean = false;\n  /**\n   * Whether the input is with error icon\n   */\n  @Input() iconInvalid: boolean = true;\n  /**\n   * TabIndex attribute of the element\n   */\n  @Input() tabindex: number = null;\n  /**\n   * Maxlength attribute of the element\n   */\n  @Input() maxlength: number = null;\n  /**\n   * Minlength attribute of the element\n   */\n  @Input() minlength: number = 0;\n  /**\n   * Placeholder attribute of the element.\n   */\n  @Input() placeholder: string;\n  arialabel: string;\n  /**\n   * Autocomplete attribute of the element.\n   */\n  @Input() autocomplete: string = 'off';\n  /**\n   * Additional validation patterns of the element\n   */\n  @Input() pattern: any;\n  @Input() min: any;\n  @Input() max: any;\n  @Input() step: any;\n  /**\n   * Name attribute of the element.\n   */\n  @Input() name: string;\n  /**\n   * Whether the input is valid\n   */\n  @Input() validState: boolean = false;\n  /**\n   * Whether the input is required. The plain text 'requiredLabel' for the input element\n   */\n  @Input() requiredLabel: string;\n  /**\n   * Tooltip icon and additional text for it.\n   */\n  @Input() tooltipIcon: string;\n  @Input() tooltipText: string;\n  /**\n   * Popover icon and additional content for it.\n   */\n  @Input() popoverIcon: string;\n  @Input() popoverPlacement: string = 'top';\n  @Input() popoverTriggers: string = 'click';\n  @Input() popoverContent: string | TemplateRef<any>;\n\n  /**\n   * An object used to control when error/success messages are shown\n   */\n  @Input('error')\n  get errorMessage(): string {\n    return this._errorMessage;\n  }\n\n  set errorMessage(value: string) {\n    this._errorMessage = value || this.defaultTexts.invalid;\n  }\n\n  @Input('success')\n  get successMessage(): string {\n    return this._successMessage;\n  }\n\n  set successMessage(value: string) {\n    this._successMessage = value || this.defaultTexts.valid;\n  }\n\n  /* @experimental. Reactive forms */\n  @Input() control: FormControl;\n  @Input() setInvalidState: boolean = false;\n  @Input() debounceTime: number = 300;\n\n  /**\n   * Reference to input element\n   */\n  @ViewChild('input') inputElement: ElementRef;\n  @ViewChild('inputTextWidthEl') inputTextWidthEl: ElementRef<HTMLDivElement>;\n\n  // eslint-disable-next-line @angular-eslint/no-output-native, @angular-eslint/no-output-rename\n  @Output('focus') readonly focusEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  // eslint-disable-next-line @angular-eslint/no-output-native, @angular-eslint/no-output-rename\n  @Output('blur') readonly blurEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  @Output() readonly valueChanged: EventEmitter<string> = new EventEmitter<string>();\n  @Output() readonly inputKeydown: EventEmitter<KeyboardEvent> = new EventEmitter<KeyboardEvent>();\n  @Output() readonly inputKeypress: EventEmitter<KeyboardEvent> = new EventEmitter<KeyboardEvent>();\n  @Output() readonly inputKeyup: EventEmitter<KeyboardEvent> = new EventEmitter<KeyboardEvent>();\n\n  /** Whether the element is required. */\n  @Input()\n  get required(): any {\n    return this._required || hasRequiredValidator(this.control || this._ngControl);\n  }\n\n  set required(value: any) {\n    this._required = toBoolean(value);\n  }\n\n  /** Whether the element is disabled. */\n  @Input()\n  get disabled(): any {\n    return this._disabled;\n  }\n\n  set disabled(value: any) {\n    this._disabled = toBoolean(value);\n  }\n\n  /** Whether the element is readonly. */\n  @Input()\n  get readonly(): any {\n    return this._readonly;\n  }\n\n  set readonly(value: any) {\n    this._readonly = toBoolean(value);\n  }\n\n  /**\n   * Use disabled style for the control if [readonly]=true\n   */\n  @Input() disabledStyleForReadonlyState: boolean = false;\n\n  /** Whether the element is textarea. */\n  @Input()\n  get rows(): any {\n    return this._rows;\n  }\n\n  set rows(value: any) {\n    this._rows = toNumber(value);\n  }\n\n  /** Whether the element has maxrows. */\n  @Input()\n  get maxrows(): any {\n    return this._maxrows;\n  }\n\n  set maxrows(value: any) {\n    this._maxrows = toNumber(value);\n  }\n\n  /** Whether the element has autofocus. */\n  @Input()\n  get autofocus(): any {\n    return this._autofocus;\n  }\n\n  set autofocus(value: any) {\n    this._autofocus = toBoolean(value);\n  }\n\n  // @experimental\n  @Input()\n  get disableNativeValidityChecking(): any {\n    return this._disableNativeValidityChecking;\n  }\n\n  set disableNativeValidityChecking(value: any) {\n    this._disableNativeValidityChecking = toBoolean(value);\n  }\n\n  /** The input element's value. */\n  get value(): any {\n    return this._value;\n  }\n\n  set value(v: any) {\n    if (v !== this._value) {\n      this._value = v;\n      this.onChangeCallback(v);\n    }\n  }\n\n  @Input()\n  get ariaLabel(): string {\n    return this.arialabel;\n  }\n\n  set ariaLabel(v: string) {\n    if (v) {\n      this.arialabel = v;\n    }\n  }\n\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('aria-describedby') ariaDescribedBy: string | null = null;\n\n  get inputGroupClass(): string {\n    let groupClass = '';\n\n    if (this.customClass) {\n      const classList = this.customClass.split(' ');\n\n      classList.forEach(cls => {\n        if (cls === 'form-control-lg') {\n          groupClass = 'input-group-lg';\n        }\n\n        if (cls === 'form-control-sm') {\n          groupClass = 'input-group-sm';\n        }\n      });\n    }\n\n    return groupClass;\n  }\n\n  private el: HTMLElement;\n  /**\n   * ControlValueAccessor required interface\n   */\n  private onTouchedCallback: () => void = noop;\n  /**\n   * ControlValueAccessor required interface\n   */\n  private onChangeCallback: (_: any) => void = noop;\n\n  /**\n   * Private variables of textfield component\n   */\n  private _required: boolean = false;\n  private _disabled: boolean = false;\n  private _readonly: boolean = false;\n  private _rows: number = null;\n  private _disableNativeValidityChecking: boolean = false;\n  private _maxrows: number = -1;\n  private _autofocus: boolean = false;\n  private _value: string;\n  private _errorMessage: string;\n  private _successMessage: string;\n\n  private _isInput: boolean;\n  private _destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n  private _ngControl: NgControl;\n\n  get additionalMessage(): string | null {\n    if (this.control) {\n      for (const propertyName in this.control.errors) {\n        if (Object.prototype.hasOwnProperty.call(this.control.errors, propertyName) && this.control.touched) {\n          return this.errorMessage ? this.errorMessage : this.defaultTexts.invalid;\n        }\n      }\n\n      if (this.control.valid) {\n        return this.successMessage ? this.successMessage : this.defaultTexts.valid;\n      }\n\n      return null;\n    }\n  }\n\n  constructor(private elemRef: ElementRef,\n              private renderer: Renderer2,\n              private _resizeService: ResizeService,\n              private _dir: Directionality,\n              private ts: AdaptTranslateService,\n              private _ngZone: NgZone,\n              private _cdr: ChangeDetectorRef,\n              private _injector: Injector,\n              @Optional() @Inject(DISABLE_NATIVE_VALIDITY_CHECKING) private nativeCheckGlobalDisabled: boolean,\n              _adaptRadarService: AdaptRadarService) {\n    super(_adaptRadarService, elemRef, AdaptRadarAngularCustomEventName.AdaptTextField);\n\n    this.el = elemRef.nativeElement;\n    this.isRtl = _dir.value === 'rtl';\n    this.renderer = renderer;\n    const translation = ts.getCurrentLanguage();\n\n    this._successMessage = this.defaultTexts.valid = translation['adapt.textfield.error.valid'];\n    this._errorMessage = this.defaultTexts.invalid = translation['adapt.textfield.error.invalid'];\n    this.requiredLabel = translation['adapt.common.required'];\n  }\n\n  /**\n   * interface ControlValueAccessor\n   * writeValue(obj: any): void\n   */\n  writeValue(value: any): void {\n    if (this._value !== value) {\n      this._value = value;\n\n      if (this._value !== null) {\n        this._applyTextOverflow();\n        this.valueChanged.emit(this._value);\n      }\n    }\n  }\n\n  /**\n   * interface ControlValueAccessor\n   * registerOnChange(fn: any): void\n   */\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  /**\n   * interface ControlValueAccessor\n   * registerOnTouched(fn: any): void\n   */\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  /**\n   * interface ControlValueAccessor\n   * setDisabledState(isDisabled: boolean)?: void\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  ngOnInit(): void {\n    this.nestedSettings = {...this.nestedSettingsDefault, ...this.nestedSettings};\n\n    if (this.tooltipIcon && !this.popoverIcon) {\n      this.tooltipConfig = {\n        iconName: this.tooltipIcon,\n        content: this.tooltipText,\n        placement: 'top',\n        popoverMode: false\n      };\n    } else if (this.popoverIcon) {\n      this.tooltipConfig = {\n        iconName: this.popoverIcon,\n        content: this.popoverContent,\n        placement: this.popoverPlacement,\n        popoverMode: true,\n        popoverTriggers: this.popoverTriggers\n      };\n    }\n\n    this._ngControl = this._injector.get(NgControl, null);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.autofocus) {\n      this.setFocus();\n    }\n\n    // move from setter due to https://github.com/angular/angular/issues/32756\n    if (changes.required) {\n      SafeCdr.detectChanges(this._cdr);\n    }\n  }\n\n  ngAfterContentChecked(): void {\n    this.checkIfValid();\n  }\n\n  /**\n   * Callback for the cases where the focused state of the input changes\n   */\n  onFocus(event: any): void {\n    this.renderer.addClass(this.el, cssTextFieldClasses.FOCUS);\n    this.focusEmitter.emit(event);\n  }\n\n  /**\n   * Callback for the cases where the focused state is out of input element\n   */\n  onBlur(event: any): void {\n    this.renderer.addClass(this.el, cssTextFieldClasses.FOCUS);\n    this.onTouchedCallback();\n    this.blurEmitter.emit(event);\n  }\n\n  /**\n   * Check the input element on touch event\n   */\n  checkOnTouch(): void {\n    if (this.inputElement) {\n      this.isDirty = this.inputElement.nativeElement.classList.contains(cssTextFieldClasses.NG_TOUCHED);\n    }\n  }\n\n  /**\n   * Check the input element on valid/invalid state\n   */\n  checkIfValid(): void {\n    if (this.nativeCheckGlobalDisabled === true) {\n      return;\n    }\n\n    if (this.disableNativeValidityChecking) {\n      return;\n    }\n\n    if (this.disabled) {\n      this._setSuccessState();\n\n      return;\n    }\n\n    this.checkOnTouch();\n\n    if (this.setInvalidState && this.inputElement && this.inputElement.nativeElement.validity) {\n      this._setErrorState();\n      this.inputElement.nativeElement.classList.add(cssTextFieldClasses.NG_TOUCHED);\n      this.isDirty = true;\n\n      return;\n    }\n\n    if (this.inputElement && this.inputElement.nativeElement.validity && this.isDirty) {\n      if (!this.inputElement.nativeElement.validity.valid) {\n        this._setErrorState();\n      } else {\n        this._setSuccessState();\n      }\n    }\n  }\n\n  onKeydown(event: KeyboardEvent): void {\n    this.inputKeydown.emit(event);\n  }\n\n  onKeypress(event: KeyboardEvent): void {\n    this.inputKeypress.emit(event);\n  }\n\n  onKeyup(event: KeyboardEvent): void {\n    this.inputKeyup.emit(event);\n    const input = this.inputElement.nativeElement;\n\n    if (this.maxlength && input.value && input.value.toString().length > this.maxlength) {\n      input.value = input.value.toString().substring(0, this.maxlength);\n      this.value = input.value.toString().substring(0, this.maxlength);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n\n    const input = this.inputElement.nativeElement;\n\n    this._isInput = input.nodeName === 'INPUT';\n\n    if (this._isInput && this.overflowText) {\n      this._ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => {\n          this.inputStyles = {...getElementStyles(input)};\n        });\n\n      this._resizeService.addResizeEventListener(this.elemRef.nativeElement, debounce(this._applyTextOverflow.bind(this), 100));\n    }\n\n    fromEvent(input, 'input')\n      .pipe(\n        debounceTime(this.debounceTime),\n        distinctUntilChanged(),\n        tap(this._applyTextOverflow.bind(this)),\n        takeUntil(this._destroyed$)\n      )\n      .subscribe(() => this.valueChanged.emit(this.value));\n\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n\n    this._resizeService.removeResizeEventListener(this.elemRef.nativeElement);\n    this._destroyed$.next(true);\n    this._destroyed$.complete();\n  }\n\n  private _applyTextOverflow(): void {\n    if (this.overflowText && this.inputElement && this.inputTextWidthEl && this._isInput) {\n      const div = this.inputTextWidthEl.nativeElement;\n      const input = this.inputElement.nativeElement as HTMLInputElement;\n\n      this.isTextOverflow = div.clientWidth > input.clientWidth;\n    }\n  }\n\n  private _setErrorState(): void {\n    this.isError = true;\n    this.renderer.addClass(this.el, cssTextFieldClasses.FORM_DANGER);\n\n    if (this.validState) {\n      this.renderer.removeClass(this.el, cssTextFieldClasses.FORM_SUCCESS);\n    }\n  }\n\n  private _setSuccessState(): void {\n    this.isError = false;\n    this.renderer.removeClass(this.el, cssTextFieldClasses.FORM_DANGER);\n\n    if (this.validState) {\n      this.renderer.addClass(this.el, cssTextFieldClasses.FORM_SUCCESS);\n    }\n  }\n\n  private setFocus(): void {\n    if (!this.autofocus) {\n      return;\n    }\n    /**\n     * hot fix for autofocus attr in FF and IE\n     */\n\n    this._ngZone.onStable\n      .pipe(take(1))\n      .subscribe(() => {\n        this.inputElement.nativeElement.focus();\n      });\n  }\n}\n","<div class=\"adapt-textfield-label-wrapper\">\n  <adapt-rx-control-label [for]=\"rows ? id + '_textarea' : id + '_input'\"\n                          [label]=\"label\"\n                          [requiredLabel]=\"requiredLabel\"\n                          [showRequiredLabel]=\"required\"\n                          [tooltip]=\"tooltipConfig\"></adapt-rx-control-label>\n\n  <ng-content select=\"[label-count]\"></ng-content>\n</div>\n\n<div class=\"textfield__wrapper\">\n\n  <adapt-textfield-icons *ngIf=\"iconValid || iconInvalid\" [error]=\"isError\" [success]=\"!isError\" [iconValid]=\"iconValid\"\n                         [iconInvalid]=\"iconInvalid\"></adapt-textfield-icons>\n\n  <textarea\n    #input\n    (keydown)=\"onKeydown($event)\"\n    (keypress)=\"onKeypress($event)\"\n    (keyup)=\"onKeyup($event)\"\n    *ngIf=\"rows\"\n    [rows]=\"rows\"\n    class=\"form-control {{customClass}}\"\n    [class.form-control-disabled-look]=\"readonly && this.disabledStyleForReadonlyState\"\n    [(ngModel)]=\"value\"\n    [attr.name]=\"name\"\n    [disabled]=\"disabled\"\n    [required]=\"required\"\n    [attr.aria-required]=\"required\"\n    [attr.aria-invalid]=\"!disabled && !control && !validState && isError\"\n    [autofocus]=\"autofocus\"\n    [readonly]=\"readonly\"\n    [placeholder]=\"placeholder ? placeholder: ''\"\n    [attr.aria-label]=\"arialabel || null\"\n    [attr.aria-describedby]=\"ariaDescribedBy\"\n    [attr.id]=\"id + '_textarea'\"\n    [attr.data-testid]=\"testID + '_textarea'\"\n    [attr.maxlength]=\"maxlength\"\n    [attr.minlength]=\"minlength\"\n    [pattern]=\"pattern ? pattern : '.*'\"\n    [attr.tabindex]=\"tabindex\"\n    (focus)=\"onFocus($event)\"\n    (blur)=\"onBlur($event)\">\n  </textarea>\n\n  <input\n    #input\n    (keydown)=\"onKeydown($event)\"\n    (keypress)=\"onKeypress($event)\"\n    (keyup)=\"onKeyup($event)\"\n    *ngIf=\"!rows && !nested\"\n    class=\"form-control {{customClass}}\"\n    [class.form-control-disabled-look]=\"readonly && this.disabledStyleForReadonlyState\"\n    [class.textfield-padding-transition]=\"overflowText\"\n    [class.pl-0]=\"isTextOverflow && !isRtl\"\n    [class.pr-0]=\"isTextOverflow && isRtl\"\n    [type]=\"type\"\n    [(ngModel)]=\"value\"\n    [attr.name]=\"name\"\n    [disabled]=\"disabled\"\n    [required]=\"required\"\n    [attr.aria-required]=\"required\"\n    [attr.aria-invalid]=\"!disabled && !control && !validState && isError\"\n    [autofocus]=\"autofocus\"\n    [readonly]=\"readonly\"\n    [autocomplete]=\"autocomplete ? autocomplete : 'on'\"\n    [placeholder]=\"placeholder ? placeholder: ''\"\n    [attr.aria-label]=\"arialabel || null\"\n    [attr.aria-describedby]=\"ariaDescribedBy\"\n    [attr.id]=\"id + '_input'\"\n    [attr.data-testid]=\"testID + '_input'\"\n    [attr.maxlength]=\"maxlength\"\n    [attr.minlength]=\"minlength\"\n    [pattern]=\"pattern ? pattern : '.*'\"\n    [attr.min]=\"min\"\n    [attr.max]=\"max\"\n    [attr.step]=\"step\"\n    [attr.tabindex]=\"tabindex\"\n    (focus)=\"onFocus($event)\"\n    (blur)=\"onBlur($event)\"/>\n\n  <div *ngIf=\"!rows && nested\"\n       class=\"input-group\"\n       [ngClass]=\"inputGroupClass\">\n    <div class=\"input-group-prepend\" *ngIf=\"nestedSettings.addOnLeft\">\n      <span class=\"input-group-text\">{{nestedSettings.addOnTextLeft}}</span>\n    </div>\n    <input\n      #input\n      (keydown)=\"onKeydown($event)\"\n      (keypress)=\"onKeypress($event)\"\n      (keyup)=\"onKeyup($event)\"\n      class=\"form-control {{customClass}}\"\n      [class.textfield-padding-transition]=\"overflowText\"\n      [class.pl-0]=\"isTextOverflow && !isRtl\"\n      [class.pr-0]=\"isTextOverflow && isRtl\"\n      [type]=\"type\"\n      [(ngModel)]=\"value\"\n      [attr.name]=\"name\"\n      [disabled]=\"disabled\"\n      [required]=\"required\"\n      [attr.aria-required]=\"required\"\n      [attr.aria-invalid]=\"!disabled && !control && !validState && isError\"\n      [autofocus]=\"autofocus\"\n      [readonly]=\"readonly\"\n      [autocomplete]=\"autocomplete ? autocomplete : 'on'\"\n      [placeholder]=\"placeholder ? placeholder: ''\"\n      [attr.aria-label]=\"arialabel || null\"\n      [attr.aria-describedby]=\"ariaDescribedBy\"\n      [attr.id]=\"id + '_input'\"\n      [attr.data-testid]=\"testID + '_input'\"\n      [attr.maxlength]=\"maxlength\"\n      [attr.minlength]=\"minlength\"\n      [pattern]=\"pattern ? pattern : '.*'\"\n      [attr.min]=\"min\"\n      [attr.max]=\"max\"\n      [attr.step]=\"step\"\n      [attr.tabindex]=\"tabindex\"\n      (focus)=\"onFocus($event)\"\n      (blur)=\"onBlur($event)\"/>\n    <div class=\"input-group-append\" *ngIf=\"nestedSettings.addOnRight\" [style.zIndex]=\"'34'\">\n      <span class=\"input-group-text\">{{nestedSettings.addOnTextRight}}</span>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"!disabled && !control && validState && (isError || (!isError && isDirty))\" [@validationFeedbackAnimation]\n     role=\"alert\">\n  <p class=\"form-control-feedback m-0 pt-1 pb-2\"\n     *ngIf=\"(errorMessage && errorMessage !== '') || ( successMessage && successMessage !== '')\">\n    <span\n      [@validationFeedbackChangeAnimation]=\"isError\">{{isError ? errorMessage : (!isError && isDirty ? successMessage : '')}}</span>\n  </p>\n</div>\n\n<div *ngIf=\"!disabled && !control && !validState && isError\" [@validationFeedbackAnimation] role=\"alert\">\n  <p class=\"form-control-feedback m-0 pt-1 pb-2\" *ngIf=\"errorMessage && errorMessage !== ''\">\n    {{errorMessage}}\n  </p>\n</div>\n\n<div *ngIf=\"control && additionalMessage !== null\" [@validationFeedbackAnimation]>\n  <p class=\"form-control-feedback m-0 pt-1 pb-2\" *ngIf=\"additionalMessage && additionalMessage !== ''\">\n    {{additionalMessage}}\n  </p>\n</div>\n\n<div class=\"textfield-input-wrapper\">\n  <div class=\"textfield-input-element-copy\"\n       [ngStyle]=\"inputStyles\"\n       *ngIf=\"overflowText\"\n       #inputTextWidthEl>{{ value }}</div>\n</div>\n\n<ng-content></ng-content>\n"]}