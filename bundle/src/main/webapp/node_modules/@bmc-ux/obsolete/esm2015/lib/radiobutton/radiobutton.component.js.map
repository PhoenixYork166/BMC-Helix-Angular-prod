{"version":3,"file":"radiobutton.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-obsolete/src/lib/radiobutton/radiobutton.component.ts","../../../../../../libs/adapt-obsolete/src/lib/radiobutton/radiobutton.component.html"],"names":[],"mappings":"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","sourcesContent":["// TODO update types\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Injector,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, Validator} from '@angular/forms';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptTranslateService,\n  createFormControlValidator,\n  createFormControlValueAccessor,\n  FormComponent,\n  SafeCdr\n} from '@bmc-ux/adapt-angular';\nimport {AdaptRadarService} from '@bmc-ux/adapt-radar';\n\nconst noop = (): void => {\n  return;\n};\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'adapt-radiobutton, div[adapt-radiobutton]',\n  templateUrl: './radiobutton.component.html',\n  providers: [\n    createFormControlValueAccessor(AdaptRadioButtonComponent),\n    createFormControlValidator(AdaptRadioButtonComponent)\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class AdaptRadioButtonComponent extends FormComponent implements OnInit, ControlValueAccessor, Validator {\n  // Need for using inherited properties in the template\n  context: any = this;\n\n  checked: boolean;\n  focused: boolean;\n  isValid: boolean = true;\n\n  /** The value attribute of the native input element */\n  @Input() value: string;\n  /** Name value will be applied to the input element if present */\n  @Input() name: string | null = null;\n  /** The tabindex attribute of the native input element */\n  @Input() tabindex: number = null;\n  @Input() label: string = '';\n  @Input() styleClass: string = '';\n  @Input() class: string = ''; // override the standard class attr with a new one\n  /**\n   * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n   * take precedence so this may be omitted.\n   */\n    // eslint-disable-next-line @typescript-eslint/typedef\n  @Input('aria-label') ariaLabel = '';\n  /**\n   * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n   */\n  @Input('aria-labelledby') ariaLabelledby: string | null = null;\n  /**\n   * Control [aria-describedby] attribute text\n   */\n  @Input() ariaDescribedBy: string = null;\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() readonly onClick: EventEmitter<any> = new EventEmitter();\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() readonly focus: EventEmitter<any> = new EventEmitter();\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() readonly blur: EventEmitter<any> = new EventEmitter();\n  /**\n   * Get an input element of radiobutton\n   */\n  @ViewChild('input', {static: true}) inputElement: ElementRef;\n  private _uniqueId: string = `adapt-radiobutton-${++nextUniqueId}`;\n  /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n  @Input() testID: string = this._uniqueId;\n\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  @Input() id: string = this._uniqueId;\n\n  get inputId(): string {\n    return `${this.id || this._uniqueId}-input`;\n  }\n\n  @HostBinding('class')\n  get hostClasses(): string {\n    return [\n      this.class, // include our new one\n      'radio',\n      this.disabled ? 'disabled' : '',\n      this.readonly ? 'readonly' : '',\n    ].join(' ');\n  }\n\n  private _onTouchedCallback: () => void = noop;\n  private _onChangeCallback: (_: any) => void = noop;\n\n  constructor(injector: Injector,\n              private _changeDetectorRef: ChangeDetectorRef,\n              ts: AdaptTranslateService,\n              _adaptRadarService: AdaptRadarService,\n              _elem: ElementRef<HTMLElement>) {\n    super(injector, ts, _adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptRadioButton);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  /**\n   * Add a focus state on key-down/tabbing\n   */\n  onFocus(): void {\n    this.focused = true;\n  }\n\n  /**\n   * Remove a focus state on blur event\n   */\n  onBlur(): void {\n    this.focused = false;\n    SafeCdr.markForCheck(this._changeDetectorRef);\n  }\n\n  /**\n   * The method from an Abstract class\n   */\n  validate(): null {\n    return null;\n  }\n\n  onInputClick(e: Event): void {\n    e.stopPropagation();\n\n    if (!(this.disabled || this.readonly)) {\n      this.onClick.emit(null);\n      this.inputElement.nativeElement.checked = true;\n      this.checked = true;\n      this._onChangeCallback(this.value);\n    } else {\n      e.preventDefault();\n    }\n  }\n\n  /**\n   * interface ControlValueAccessor\n   * writeValue(obj: any): void\n   */\n  writeValue(v: any): void {\n    this.checked = (v === this.value);\n\n    if (this.inputElement.nativeElement) {\n      this.inputElement.nativeElement.checked = this.checked;\n    }\n\n    SafeCdr.markForCheck(this._changeDetectorRef);\n  }\n\n  /**\n   * interface ControlValueAccessor\n   * registerOnChange(fn: any): void\n   */\n  registerOnChange(fn: any): void {\n    this._onChangeCallback = fn;\n  }\n\n  /**\n   * interface ControlValueAccessor\n   * registerOnTouched(fn: any): void\n   */\n  registerOnTouched(fn: any): void {\n    this._onTouchedCallback = fn;\n  }\n\n  /**\n   * interface ControlValueAccessor\n   * setDisabledState(isDisabled: boolean)?: void\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    SafeCdr.markForCheck(this._changeDetectorRef);\n  }\n\n  _onInputChange(e: Event): void {\n    if (this.readonly || this.disabled) {\n      e.preventDefault();\n    }\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the `change` output.\n    e.stopPropagation();\n  }\n}\n","<ng-content select=\".radio-before\"></ng-content>\n\n<span class=\"radio__label\">\n  <span class=\"radio__label {{styleClass}}\">\n    <input #input\n           type=\"radio\"\n           [disabled]=\"context.disabled\"\n           [readOnly]=\"readonly\"\n           [attr.value]=\"value\"\n           [required]=\"context.required\"\n           [id]=\"inputId\"\n           [attr.data-testid]=\"testID\"\n           [attr.name]=\"context.name\"\n           [tabIndex]=\"tabindex\"\n           [checked]=\"checked\"\n           [attr.aria-readonly]=\"readonly\"\n           (change)=\"_onInputChange($event)\"\n           (focus)=\"onFocus()\"\n           (blur)=\"onBlur()\"\n           (click)=\"onInputClick($event)\"\n           [attr.aria-label]=\"ariaLabel\"\n           [attr.aria-labelledby]=\"ariaLabelledby\"\n           [attr.aria-describedby]=\"ariaDescribedBy\"\n           [ngClass]=\"{'is-focused': focused}\"/>\n\n    <label [attr.for]=\"inputId\" class=\"radio__item form-control-label font-weight-normal\"\n           [ngClass]=\"{'radio__item_no-label': !context.label}\">\n      <span [ngClass]=\"{'sr-only': !context.label}\">{{context.label}}</span>\n      <ng-container *ngIf=\"context.required\">\n        <span class=\"letter-space\"></span>\n        <span class=\"form-control-required\">{{context.requiredLabel}}</span>\n      </ng-container>\n    </label>\n  </span>\n\n  <adapt-icon *ngIf=\"context.tooltipIconCls\"\n              [adaptRadarDisableEventSending]=\"true\"\n              [name]=\"context.tooltipIconCls\"\n              placement=\"top\"\n              adaptTooltip={{context.tooltipText}}>\n  </adapt-icon>\n</span>\n\n<ng-content select=\".radio-after\"></ng-content>\n\n"]}