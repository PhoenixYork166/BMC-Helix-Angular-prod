import { Calendar2Day } from './datetime2.model';
import { Component, Input, Output, EventEmitter } from '@angular/core';
import moment from 'moment-es6';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
function AdaptDatetime2MonthPickerComponent_tr_10_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    const _r5 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n            ");
    i0.ɵɵelementStart(2, "td", 4);
    i0.ɵɵtext(3, "\n              ");
    i0.ɵɵelementStart(4, "button", 5);
    i0.ɵɵlistener("click", function AdaptDatetime2MonthPickerComponent_tr_10_ng_container_2_Template_button_click_4_listener() { const restoredCtx = i0.ɵɵrestoreView(_r5); const month_r3 = restoredCtx.$implicit; const ctx_r4 = i0.ɵɵnextContext(2); return ctx_r4.onMonthClick(month_r3.date); });
    i0.ɵɵtext(5);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(6, "\n            ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(7, "\n          ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const month_r3 = ctx.$implicit;
    i0.ɵɵadvance(4);
    i0.ɵɵclassProp("active", month_r3.isSelected)("today", month_r3.isToday)("disabled", month_r3.isDisabled);
    i0.ɵɵproperty("disabled", month_r3.isDisabled);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(month_r3.date.format("MMM"));
} }
function AdaptDatetime2MonthPickerComponent_tr_10_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "tr");
    i0.ɵɵtext(1, "\n          ");
    i0.ɵɵtemplate(2, AdaptDatetime2MonthPickerComponent_tr_10_ng_container_2_Template, 8, 8, "ng-container", 3);
    i0.ɵɵtext(3, "\n        ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const months_r1 = ctx.$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", months_r1);
} }
export class AdaptDatetime2MonthPickerComponent {
    constructor() {
        this.disabled = false;
        this.selectMonth = new EventEmitter();
        this._initialDate = moment();
        this._activeDate = null;
        this._columnsAmount = 3;
        this._rowsAmount = 4;
        this._itemsAmount = this._rowsAmount * this._columnsAmount;
    }
    set initialDate(initDate) {
        if (initDate && initDate.isValid()) {
            this._initialDate = initDate.clone();
        }
    }
    set activeDate(activeDate) {
        if (activeDate && activeDate.isValid()) {
            this._activeDate = activeDate.clone();
            this._initialDate = activeDate.clone();
            this._drawCalendar();
        }
        else {
            this._activeDate = null;
            if (this.calendar) {
                this._patchCalendar();
            }
        }
    }
    ngOnInit() {
        this._initCalendar();
        this._drawCalendar();
    }
    onMonthClick(month) {
        this.selectMonth.emit(month.clone());
    }
    _initCalendar() {
        this.calendar =
            Array(this._rowsAmount)
                .fill(0)
                .map(() => Array(this._columnsAmount)
                .fill(0)
                .map(() => new Calendar2Day()));
    }
    _drawCalendar() {
        const momentArr = moment.monthsShort();
        const startDate = this._initialDate.clone();
        const monthArr = new Array(this._itemsAmount).fill(0).map(() => new Calendar2Day());
        monthArr.forEach((item, index) => {
            monthArr[index].date = startDate.month(momentArr[index]).clone();
        });
        this.calendar = monthArr.reduce((rows, key, index) => {
            return (index % this._columnsAmount === 0 ? rows.push([key])
                : rows[rows.length - 1].push(key)) && rows;
        }, []);
        this._patchCalendar();
    }
    _patchCalendar() {
        this.calendar.forEach((months) => {
            months.forEach((month) => {
                month.isSelected = this._activeDate ?
                    this._activeDate.clone().startOf('month').isSame(month.date.startOf('month')) : false;
                month.isToday = moment().startOf('month').isSame(month.date.startOf('month'));
                month.isDisabled = this.disabled;
            });
        });
    }
}
AdaptDatetime2MonthPickerComponent.ɵfac = function AdaptDatetime2MonthPickerComponent_Factory(t) { return new (t || AdaptDatetime2MonthPickerComponent)(); };
AdaptDatetime2MonthPickerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptDatetime2MonthPickerComponent, selectors: [["adapt-datetime2-month-picker"]], inputs: { initialDate: "initialDate", activeDate: "activeDate", disabled: "disabled" }, outputs: { selectMonth: "selectMonth" }, decls: 19, vars: 1, consts: [[1, "a3t-calendar--table", "a3t-calendar--month_table"], ["aria-hidden", "true"], ["colspan", "3", 1, "a3t-calendar--table-space-cell"], [4, "ngFor", "ngForOf"], ["role", "gridcell", 1, "a3t-calendar--table-day", "a3t-calendar--table-month"], ["type", "button", 3, "disabled", "click"]], template: function AdaptDatetime2MonthPickerComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtext(0, "\n    ");
        i0.ɵɵelementStart(1, "table", 0);
        i0.ɵɵtext(2, "\n      ");
        i0.ɵɵelementStart(3, "tbody");
        i0.ɵɵtext(4, "\n        ");
        i0.ɵɵelementStart(5, "tr", 1);
        i0.ɵɵtext(6, "\n          ");
        i0.ɵɵelement(7, "td", 2);
        i0.ɵɵtext(8, "\n        ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(9, "\n        ");
        i0.ɵɵtemplate(10, AdaptDatetime2MonthPickerComponent_tr_10_Template, 4, 1, "tr", 3);
        i0.ɵɵtext(11, "\n        ");
        i0.ɵɵelementStart(12, "tr", 1);
        i0.ɵɵtext(13, "\n          ");
        i0.ɵɵelement(14, "td", 2);
        i0.ɵɵtext(15, "\n        ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(16, "\n      ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(17, "\n    ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(18, "\n  ");
    } if (rf & 2) {
        i0.ɵɵadvance(10);
        i0.ɵɵproperty("ngForOf", ctx.calendar);
    } }, directives: [i1.NgForOf], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptDatetime2MonthPickerComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-datetime2-month-picker',
                template: `
    <table class="a3t-calendar--table  a3t-calendar--month_table">
      <tbody>
        <tr aria-hidden="true">
          <td colspan="3" class="a3t-calendar--table-space-cell"></td>
        </tr>
        <tr *ngFor="let months of calendar">
          <ng-container *ngFor="let month of months">
            <td class="a3t-calendar--table-day a3t-calendar--table-month"
                role="gridcell">
              <button type="button"
                (click)="onMonthClick(month.date)"
                [class.active]="month.isSelected"
                [class.today]="month.isToday"
                [class.disabled]="month.isDisabled"
                [disabled]="month.isDisabled"
              >{{month.date.format('MMM')}}</button>
            </td>
          </ng-container>
        </tr>
        <tr aria-hidden="true">
          <td colspan="3" class="a3t-calendar--table-space-cell"></td>
        </tr>
      </tbody>
    </table>
  `
            }]
    }], null, { initialDate: [{
            type: Input
        }], activeDate: [{
            type: Input
        }], disabled: [{
            type: Input
        }], selectMonth: [{
            type: Output
        }] }); })();
//# sourceMappingURL=datetime-month-picker.component.js.map