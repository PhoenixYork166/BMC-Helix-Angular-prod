/* eslint-disable @typescript-eslint/no-explicit-any */
import { Injectable } from '@angular/core';
import { Directionality } from '@angular/cdk/bidi';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/bidi";
export class AdaptTypeaheadConfig {
    constructor() {
        this.editable = false;
        this.focusFirst = false;
        this.showHint = false;
    }
}
AdaptTypeaheadConfig.ɵfac = function AdaptTypeaheadConfig_Factory(t) { return new (t || AdaptTypeaheadConfig)(); };
AdaptTypeaheadConfig.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AdaptTypeaheadConfig, factory: AdaptTypeaheadConfig.ɵfac });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptTypeaheadConfig, [{
        type: Injectable
    }], null, null); })();
/**
 * Configuration service for the AdaptTypeahead component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the typeaheads used in the application.
 */
export class AdaptTypeaheadModel {
    constructor(_dir) {
        this._dir = _dir;
        this.editable = true;
        this.focusFirst = true;
        this.showHint = false;
        this._isRtl = false;
        this._isRtl = this._dir.value === 'rtl';
        this.placement = 'auto';
    }
}
AdaptTypeaheadModel.ɵfac = function AdaptTypeaheadModel_Factory(t) { return new (t || AdaptTypeaheadModel)(i0.ɵɵinject(i1.Directionality)); };
AdaptTypeaheadModel.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AdaptTypeaheadModel, factory: AdaptTypeaheadModel.ɵfac });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptTypeaheadModel, [{
        type: Injectable
    }], function () { return [{ type: i1.Directionality }]; }, null); })();
//# sourceMappingURL=typeahead.config.js.map