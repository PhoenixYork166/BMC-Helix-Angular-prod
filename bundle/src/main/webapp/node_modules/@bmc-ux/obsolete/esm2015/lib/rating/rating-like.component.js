import { Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { AdaptRadarAngularCustomEventName, AdaptTranslateService, toNumber, TooltipPlacement } from '@bmc-ux/adapt-angular';
import { RatingLikeEnum } from './rating-like.enum';
import { AdaptRadarGenericDirective, AdaptRadarService } from '@bmc-ux/adapt-radar';
import * as i0 from "@angular/core";
import * as i1 from "@bmc-ux/adapt-angular";
import * as i2 from "@bmc-ux/adapt-radar";
import * as i3 from "@angular/common";
const _c0 = function (a0, a1) { return { "is-selected": a0, "is-inactive": a1 }; };
function AdaptRatingLikeComponent_ng_container_0_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r8 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 2);
    i0.ɵɵlistener("click", function AdaptRatingLikeComponent_ng_container_0_button_2_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r8); const index_r2 = i0.ɵɵnextContext().index; const ctx_r6 = i0.ɵɵnextContext(); return ctx_r6.handleClick($event, index_r2); });
    i0.ɵɵtext(1, "\n  ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r9 = i0.ɵɵnextContext();
    const item_r1 = ctx_r9.$implicit;
    const index_r2 = ctx_r9.index;
    const ctx_r5 = i0.ɵɵnextContext();
    i0.ɵɵclassMapInterpolate1("a-rating__item is-", item_r1, "");
    i0.ɵɵclassProp("is-disabled", ctx_r5.disabledList.indexOf(index_r2) !== -1);
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("adaptTooltip", !ctx_r5.disabled && ctx_r5.tooltip[index_r2] !== "" ? ctx_r5.tooltip[index_r2] : "")("ngClass", i0.ɵɵpureFunction2(11, _c0, ctx_r5.selectedLike === index_r2, ctx_r5.selectedLike !== index_r2 && ctx_r5.selectedLike !== null))("disabled", ctx_r5.disabled)("placement", ctx_r5.tooltipPlacement);
    i0.ɵɵattribute("aria-label", ctx_r5.tooltip[index_r2] || "");
} }
function AdaptRatingLikeComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n  ");
    i0.ɵɵtemplate(2, AdaptRatingLikeComponent_ng_container_0_button_2_Template, 2, 14, "button", 1);
    i0.ɵɵtext(3, "\n");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const last_r3 = ctx.last;
    const first_r4 = ctx.first;
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r0.point === 3 ? !last_r3 && !first_r4 : true);
} }
export const RatingLikeTypes = [
    'terrible',
    'disliked',
    'ok',
    'good',
    'excellent'
];
export class RatingLikeValuesError extends Error {
    constructor(length) {
        super(`Rating Like values parameter should have 3 or 5 string values. Instead got ${length} values.`);
    }
}
export class AdaptRatingLikeComponent extends AdaptRadarGenericDirective {
    constructor(ts, _adaptRadarService, _elem) {
        super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptRatingLike);
        this.ts = ts;
        this.selectedLike = null;
        this.types = RatingLikeTypes;
        this.disabled = false;
        // eslint-disable-next-line @angular-eslint/no-output-on-prefix
        this.onChange = new EventEmitter();
        this._ratingValues = RatingLikeTypes;
        this._point = RatingLikeEnum.point;
        this._tooltipPlacement = 'top';
        this._size = 'small';
        this._disabledList = [];
        this.setDefaultTexts(ts.getCurrentLanguage());
    }
    get ratingValues() {
        return this._ratingValues;
    }
    set ratingValues(v) {
        if (v.length === 5) {
            this._ratingValues = v;
        }
        else if (v.length === 3) {
            this._ratingValues = ['', ...v, ''];
        }
        else {
            throw new RatingLikeValuesError(v.length);
        }
    }
    get point() {
        return this._point;
    }
    set point(v) {
        this._point = toNumber(v);
    }
    get tooltip() {
        return this._tooltip;
    }
    set tooltip(v) {
        this._tooltip = v;
    }
    get tooltipPlacement() {
        return this._tooltipPlacement;
    }
    set tooltipPlacement(placement) {
        this._tooltipPlacement = placement;
    }
    get size() {
        return this._size;
    }
    set size(v) {
        this._size = v;
    }
    get disabledList() {
        return this._disabledList;
    }
    set disabledList(array) {
        this._disabledList = array;
    }
    // TODO: Refactor this if possible
    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
    set rate(v) {
        const setValue = toNumber(v);
        if (setValue && setValue > 0 && setValue <= this.point) {
            this.selectedLike = setValue - 1;
        }
    }
    setDefaultTexts(translation) {
        this.tooltip = [
            translation['adapt.rating.like.l1'],
            translation['adapt.rating.like.l2'],
            translation['adapt.rating.like.l3'],
            translation['adapt.rating.like.l4'],
            translation['adapt.rating.like.l5'],
        ];
    }
    handleClick(e, index) {
        if (!this.disabled) {
            this._stopDisabled(e, index);
            this.selectedLike = index;
            this.onChange.emit({ type: this.ratingValues[index] });
        }
    }
    _stopDisabled(e, index) {
        if (this.disabledList.indexOf(index) === -1) {
            e.preventDefault();
            e.stopPropagation();
        }
    }
}
AdaptRatingLikeComponent.ɵfac = function AdaptRatingLikeComponent_Factory(t) { return new (t || AdaptRatingLikeComponent)(i0.ɵɵdirectiveInject(i1.AdaptTranslateService), i0.ɵɵdirectiveInject(i2.AdaptRadarService), i0.ɵɵdirectiveInject(i0.ElementRef)); };
AdaptRatingLikeComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptRatingLikeComponent, selectors: [["adapt-rating-like"]], hostVars: 10, hostBindings: function AdaptRatingLikeComponent_HostBindings(rf, ctx) { if (rf & 2) {
        i0.ɵɵclassProp("a-rating", true)("a-rating_like", true)("a-rating_small", ctx.size === "small")("a-rating_medium", ctx.size === "medium")("a-rating_large", ctx.size === "large");
    } }, inputs: { disabled: "disabled", ratingValues: "ratingValues", point: "point", tooltip: "tooltip", tooltipPlacement: "tooltipPlacement", size: "size", disabledList: "disabledList", rate: "rate" }, outputs: { onChange: "onChange" }, features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 1, consts: [[4, "ngFor", "ngForOf"], ["type", "button", 3, "class", "is-disabled", "adaptRadarDisableEventSending", "adaptTooltip", "ngClass", "disabled", "placement", "click", 4, "ngIf"], ["type", "button", 3, "adaptRadarDisableEventSending", "adaptTooltip", "ngClass", "disabled", "placement", "click"]], template: function AdaptRatingLikeComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, AdaptRatingLikeComponent_ng_container_0_Template, 4, 1, "ng-container", 0);
        i0.ɵɵtext(1, "\n\n");
    } if (rf & 2) {
        i0.ɵɵproperty("ngForOf", ctx.types);
    } }, directives: [i3.NgForOf, i3.NgIf, i1.AdaptTooltipDirective, i3.NgClass], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptRatingLikeComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-rating-like',
                // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                host: {
                    '[class.a-rating]': 'true',
                    '[class.a-rating_like]': 'true',
                    '[class.a-rating_small]': 'size === "small" ',
                    '[class.a-rating_medium]': 'size === "medium" ',
                    '[class.a-rating_large]': 'size === "large" '
                },
                templateUrl: './rating-like.component.html',
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: i1.AdaptTranslateService }, { type: i2.AdaptRadarService }, { type: i0.ElementRef }]; }, { disabled: [{
            type: Input
        }], onChange: [{
            type: Output
        }], ratingValues: [{
            type: Input
        }], point: [{
            type: Input
        }], tooltip: [{
            type: Input
        }], tooltipPlacement: [{
            type: Input
        }], size: [{
            type: Input
        }], disabledList: [{
            type: Input
        }], rate: [{
            type: Input
        }] }); })();
//# sourceMappingURL=rating-like.component.js.map