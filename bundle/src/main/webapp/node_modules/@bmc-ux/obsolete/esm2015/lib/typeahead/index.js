import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { AdaptTypeaheadSubModule } from './typeahed.module';
import { AdaptTypeaheadComponent, TYPEAHEAD_VALUE_ACCESSOR } from './typeahead.component';
import { AdaptTypeaheadConfig } from './typeahead.config';
import { AdaptDragonInputHandlerModule, AdaptRxLabelModule } from '@bmc-ux/adapt-angular';
import * as i0 from "@angular/core";
import * as i1 from "./typeahed.module";
export class AdaptTypeaheadModule {
    static forRoot() {
        return {
            ngModule: AdaptTypeaheadModule,
            providers: [TYPEAHEAD_VALUE_ACCESSOR, AdaptTypeaheadConfig]
        };
    }
}
AdaptTypeaheadModule.ɵfac = function AdaptTypeaheadModule_Factory(t) { return new (t || AdaptTypeaheadModule)(); };
AdaptTypeaheadModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: AdaptTypeaheadModule });
AdaptTypeaheadModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[CommonModule, FormsModule, AdaptTypeaheadSubModule.forRoot(), AdaptRxLabelModule, AdaptDragonInputHandlerModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptTypeaheadModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, FormsModule, AdaptTypeaheadSubModule.forRoot(), AdaptRxLabelModule, AdaptDragonInputHandlerModule],
                exports: [AdaptTypeaheadComponent],
                declarations: [AdaptTypeaheadComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(AdaptTypeaheadModule, { declarations: [AdaptTypeaheadComponent], imports: [CommonModule, FormsModule, i1.AdaptTypeaheadSubModule, AdaptRxLabelModule, AdaptDragonInputHandlerModule], exports: [AdaptTypeaheadComponent] }); })();
export * from './typeahed.module';
export * from './typeahead.component';
export { AdaptTypeaheadConfig } from './typeahead.config';
//# sourceMappingURL=index.js.map