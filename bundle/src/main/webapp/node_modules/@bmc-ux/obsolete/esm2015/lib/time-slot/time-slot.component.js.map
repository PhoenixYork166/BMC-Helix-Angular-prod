{"version":3,"file":"time-slot.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-obsolete/src/lib/time-slot/time-slot.component.ts","../../../../../../libs/adapt-obsolete/src/lib/time-slot/time-slot.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  Output,\n  QueryList,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport {transition, trigger, useAnimation} from '@angular/animations';\nimport {take} from 'rxjs/operators';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptTranslateService,\n  ANIMATION_DURATION,\n  ANIMATION_NAME,\n  toNumber,\n  TooltipPlacement\n} from '@bmc-ux/adapt-angular';\nimport {AdaptRadarGenericDirective, AdaptRadarService} from '@bmc-ux/adapt-radar';\n\n@Component({\n  selector: 'adapt-time-slot',\n  templateUrl: './time-slot.component.html',\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('slotsAnimation', [\n      transition('void => *', [\n        useAnimation(ANIMATION_NAME.opacity, {\n          params: {\n            duration: ANIMATION_DURATION.medium\n          }\n        })\n      ])\n    ])\n  ]\n})\n\nexport class AdaptTimeSlotComponent extends AdaptRadarGenericDirective implements AfterViewInit, OnChanges {\n  /**\n   * Tooltip icon and additional text for it.\n   */\n  @Input() tooltipIcon: string;\n  @Input() tooltipText: string;\n  /**\n   * Popover icon and additional content for it.\n   */\n  @Input() popoverIcon: string;\n  @Input() popoverPlacement: TooltipPlacement = 'top';\n  @Input() popoverTriggers: string = 'click';\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Input() popoverContent: string | TemplateRef<any>;\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any, @angular-eslint/no-output-rename */\n  @Output('selected-slot-changed') readonly selectedSlotChanged: EventEmitter<{ index: any; slot: any }> = new EventEmitter();\n\n  @ViewChildren('button') button: QueryList<ElementRef>;\n\n  @Input()\n  get label(): string {\n    return this._label;\n  }\n\n  set label(v: string) {\n    this._label = v;\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Input() get slot(): any[] {\n    return this._slot;\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  set slot(v: any[]) {\n    this._slot = v;\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Input() get selectedSlot(): any {\n    return this._selectedSlot;\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  set selectedSlot(slot: any) {\n    this._selectedSlot = toNumber(slot);\n  }\n\n  private _label: string;\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _slot: any[] = [];\n  private _selectedSlot: number = null;\n\n  constructor(private _renderer: Renderer2,\n              private ts: AdaptTranslateService,\n              private _ngZone: NgZone,\n              _adaptRadarService: AdaptRadarService,\n              _elem: ElementRef<HTMLElement>) {\n    super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptTimeSlot);\n\n    const translation = ts.getCurrentLanguage();\n\n    this._label = translation['adapt.timeSlot.available'];\n  }\n\n  isSelected(index: number): void {\n    if (this.selectedSlot === index) {\n      this.selectedSlot = null;\n      this.selectedSlotChanged.emit({index: null, slot: null});\n    } else {\n      this.selectedSlot = index;\n      this.selectedSlotChanged.emit({index: this.selectedSlot, slot: this.slot[this.selectedSlot]});\n    }\n  }\n\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n\n    this._setSlotMaxWidth();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.slot) {\n      this._ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => {\n          this._setSlotMaxWidth();\n        });\n    }\n  }\n\n  private _setSlotMaxWidth(): void {\n    const btn = this.button.toArray();\n\n    if (btn) {\n      const arr = btn.map(item => item.nativeElement.clientWidth);\n      const max = Math.round(Math.max(...arr));\n\n      btn.map(_ => this._renderer.setStyle(_.nativeElement, 'width', `${max}px`));\n    }\n  }\n}\n","<div class=\"a-slot\">\n  <div class=\"a-slot__label form-control-label\" *ngIf=\"label !== ''\">\n    <span>{{label}}</span>\n    <span class=\"icon-space\" *ngIf=\"tooltipIcon || popoverIcon\"></span>\n    <adapt-icon *ngIf=\"tooltipIcon && !popoverIcon\"\n                [adaptRadarDisableEventSending]=\"true\"\n                [name]=\"tooltipIcon\"\n                placement=\"top\"\n                [adaptTooltip]=\"tooltipText\"></adapt-icon>\n    <adapt-icon *ngIf=\"popoverIcon\"\n                [name]=\"popoverIcon\"\n                [adaptRadarDisableEventSending]=\"true\"\n                [placement]=\"popoverPlacement\"\n                [adaptPopover]=\"popoverContent\"\n                [triggers]=\"popoverTriggers\"></adapt-icon>\n  </div>\n\n  <div class=\"a-slot__list\" *ngIf=\"slot && slot.length > 0\">\n    <button *ngFor=\"let s of slot; let i = index;\"\n            [@slotsAnimation]\n            type=\"button\"\n            role=\"button\"\n            tabindex=\"0\"\n            aria-disabled=\"false\"\n            class=\"btn btn-secondary btn-sm\"\n            [class.active]=\"selectedSlot !== null && selectedSlot === i\"\n            (click)=\"isSelected(i)\" #button>\n      {{s}}\n    </button>\n  </div>\n</div>\n"]}