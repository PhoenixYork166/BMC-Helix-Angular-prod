{"version":3,"file":"dropdown-editable.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-obsolete/src/lib/dropdown-editable/dropdown-editable.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, ElementRef, EventEmitter, Input, NgZone, OnInit, Output, ViewChild} from '@angular/core';\nimport {take} from 'rxjs/operators';\n\nimport {\n  AdaptDropdownEditableSize,\n  AdaptDropdownMobileView, AdaptRadarAngularCustomEventName,\n  AdaptTranslateService,\n  KeyValueObject\n} from '@bmc-ux/adapt-angular';\nimport {AdaptRadarGenericDirective, AdaptRadarService} from '@bmc-ux/adapt-radar';\n\n@Component({\n  selector: 'adapt-dropdown-editable',\n  template: `\n    <div adaptDropdown\n         [adaptRadarDisableEventSending]=\"true\"\n         [mobileView]=\"mobileView\">\n      <div adaptDropdownAnchor style=\"background: none; padding: 0\">\n        <ng-template #uiValue>\n          <div\n            style=\"overflow: hidden; white-space: nowrap; text-overflow: ellipsis\">{{label ? (label + ':') : ''}} {{model}}</div>\n        </ng-template>\n\n        <div\n          *ngIf=\"readonly && !editMode\"\n          [class]=\"'btn btn-secondary w-100 text-default align-start ' + size\"\n          style=\"background: none; border: 0; cursor: default;\">\n          <ng-container [ngTemplateOutlet]=\"uiValue\"></ng-container>\n        </div>\n        <button type=\"button\"\n                [class]=\"'btn btn-secondary dropdown-toggle w-100 align-start ' + size\"\n                *ngIf=\"!readonly && !editMode\"\n                adaptDropdownToggle>\n          <ng-container [ngTemplateOutlet]=\"uiValue\"></ng-container>\n        </button>\n        <input #customInput\n               type=\"text\"\n               class=\"form-control\"\n               [class.form-control-sm]=\"size === sizeVariants.small\"\n               [class.form-control-lg]=\"size === sizeVariants.large\"\n               [(ngModel)]=\"customItemModel\"\n               *ngIf=\"editMode\"\n               (blur)=\"exitFocusMode()\"\n               (keyup.esc)=\"exitFocusMode()\"\n               (keydown.enter)=\"exitFocusMode()\"/>\n      </div>\n      <div adaptDropdownMenu class=\"dropdown-menu\">\n        <ng-template [ngIf]=\"customValueOnTop\">\n          <ng-template [ngTemplateOutlet]=\"addCustomValueTemplate\"></ng-template>\n        </ng-template>\n        <ng-container *ngFor=\"let item of items\">\n          <button class=\"dropdown-item\"\n                  type=\"button\"\n                  [class.active]=\"item === model\"\n                  (click)=\"setModel(item)\">{{item}}</button>\n        </ng-container>\n        <ng-template [ngIf]=\"!customValueOnTop\">\n          <ng-template [ngTemplateOutlet]=\"addCustomValueTemplate\"></ng-template>\n        </ng-template>\n      </div>\n    </div>\n\n    <ng-template #addCustomValueTemplate>\n      <button class=\"dropdown-item dropdown-item-editable\"\n              type=\"button\"\n              [class.active]=\"customItemModel === model\"\n              (click)=\"enterEditMode()\">\n        <span [class.text-secondary]=\"!customItemModel\">{{customItemModel || moreTitle}}</span>\n      </button>\n    </ng-template>\n  `,\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[style.display]': '\"inline-block\"',\n    '[style.width]': 'width'\n  }\n})\nexport class AdaptDropDownEditableComponent extends AdaptRadarGenericDirective implements OnInit {\n  model: string | number = 0;\n  customItemModel: string | number;\n  editMode: boolean = false;\n  sizeVariants: typeof AdaptDropdownEditableSize = AdaptDropdownEditableSize;\n\n  defaultTexts: {\n    moreTitle?: string;\n    label?: string;\n  } = {};\n\n  @Input()\n  set value(v: string | number) {\n    if (v !== undefined) {\n      this.model = v;\n\n      if (this.items.length && this.items.indexOf(v) === -1) {\n        this.customItemModel = v;\n      }\n    }\n  }\n\n  get value(): string | number {\n    return this.model;\n  }\n\n  @Input() width: string = '100%';\n  @Input() readonly: boolean = false;\n  @Input() moreTitle: string;\n  @Input() label: string;\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Input() items: any[] = [];\n  @Input() size: AdaptDropdownEditableSize = this.sizeVariants.medium;\n  @Input() mobileView: AdaptDropdownMobileView = {};\n  @Input() customValueOnTop: boolean = false;\n\n  @Output() readonly valueChange: EventEmitter<string | number> = new EventEmitter();\n\n  @ViewChild('customInput') customInput: ElementRef<HTMLInputElement>;\n\n  constructor(private ts: AdaptTranslateService,\n              private _ngZone: NgZone,\n              _adaptRadarService: AdaptRadarService,\n              _elem: ElementRef<HTMLElement>) {\n    super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptDropDownEditable);\n\n    this.setDefaultTexts(ts.getCurrentLanguage());\n  }\n\n  ngOnInit(): void {\n    this.moreTitle = this.moreTitle || this.defaultTexts.moreTitle;\n  }\n\n  setDefaultTexts(translation: KeyValueObject): void {\n    this.defaultTexts.moreTitle = translation['adapt.dropdownEditable.more'];\n  }\n\n  setModel(item: string | number): void {\n    this.model = item;\n    this.customItemModel = null;\n    this.valueChange.emit(this.model);\n  }\n\n  enterEditMode(): void {\n    this.editMode = true;\n\n    this._ngZone.onStable\n      .pipe(take(1))\n      .subscribe((() => {\n        this.customInput.nativeElement.focus();\n      }));\n  }\n\n  exitFocusMode(): void {\n    if (this.customItemModel) {\n      this.model = this.customItemModel;\n      this.valueChange.emit(this.model);\n    }\n    this.editMode = false;\n  }\n}\n"]}