{"version":3,"file":"mention.directive.js","sourceRoot":"","sources":["../../../../../../libs/adapt-obsolete/src/lib/mention/mention.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Injector,\n  Input,\n  IterableDiffer,\n  IterableDiffers,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\nimport {\n  ALT,\n  BACKSPACE,\n  CONTROL,\n  DOWN_ARROW,\n  ENTER,\n  ESCAPE,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  SHIFT,\n  TAB,\n  UP_ARROW\n} from '@angular/cdk/keycodes';\nimport {\n  AdaptRadarAngularCustomEventName,\n  hasKeyboardKeyCode,\n  KeyValueObject,\n  MentionConfig\n} from '@bmc-ux/adapt-angular';\n\nimport {take} from 'rxjs/operators';\nimport {AdaptMentionListComponent} from './mention-list/mention-list.component';\nimport {MentionStyleConfig} from './mention.model';\nimport {AdaptRadarGenericDirective, AdaptRadarService} from '@bmc-ux/adapt-radar';\n\n// eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle\n@Directive({\n  selector: '[adaptMention]'\n})\n// eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle\nexport class AdaptMentionDirective extends AdaptRadarGenericDirective implements OnDestroy, OnChanges, DoCheck, AfterViewInit {\n\n  @Input('adaptMention') mentionConfig: MentionConfig[];\n  @Input() mentionStyleConfig: MentionStyleConfig;\n\n  @Input()\n  get showMentionLoader(): boolean {\n    return this._showMentionLoader;\n  }\n\n  set showMentionLoader(state: boolean) {\n    this._showMentionLoader = state;\n\n    if (this._mentionList) {\n      this._mentionList.setLoaderState(state);\n    }\n  }\n\n  @Input() appendToBody: boolean = false;\n\n  @Output() readonly mentionItemSelected: EventEmitter<string | KeyValueObject> = new EventEmitter();\n  @Output() readonly mentionTriggerCharPressed: EventEmitter<string> = new EventEmitter();\n  @Output() readonly mentionSearchValueEntered: EventEmitter<string> = new EventEmitter();\n\n  private _triggerCharsList: { [key: string]: MentionConfig } = {};\n\n  private _mentionListComponentRef: ComponentRef<AdaptMentionListComponent>;\n  private _mentionList: AdaptMentionListComponent;\n  private _searchValue: string;\n  private _currentConfig: MentionConfig;\n  private _startPosition: number;\n  private _currentCaretPosition: number;\n  private _searching: boolean;\n  private _showMentionLoader: boolean = false;\n\n  private _inputElement: HTMLInputElement | HTMLTextAreaElement;\n  private _modelDiffer: IterableDiffer<(string | KeyValueObject)>[] = [];\n\n  constructor(private _element: ElementRef<HTMLElement>,\n              private _componentFactory: ComponentFactoryResolver,\n              private _differs: IterableDiffers,\n              private _renderer: Renderer2,\n              private _injector: Injector,\n              private _appRef: ApplicationRef,\n              private _ngZone: NgZone,\n              _adaptRadarService: AdaptRadarService) {\n    super(_adaptRadarService, _element, AdaptRadarAngularCustomEventName.AdaptMention);\n  }\n\n\n  // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n\n    this._inputElement = this._element.nativeElement.querySelector('input') || this._element.nativeElement.querySelector('textarea');\n  }\n\n  // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.mentionConfig) {\n      if (this.mentionConfig) {\n        this.mentionConfig.forEach(config => {\n          this._triggerCharsList[config.triggerChar] = config;\n          this._modelDiffer = [];\n          this._modelDiffer.push(this._differs.find([]).create());\n        });\n      }\n    }\n  }\n\n  // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle\n  ngDoCheck(): void {\n    // need for lazy loading\n    if (this._modelDiffer.length && this.mentionConfig) {\n      const isArrayChanged = this._modelDiffer.some((differ, index) => {\n        return differ.diff(this.mentionConfig[index].items);\n      });\n\n      if (isArrayChanged) {\n        this._updateMentionList();\n      }\n    }\n  }\n\n  // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n\n    if (this._mentionListComponentRef) {\n      this._mentionList.onItemClick.unsubscribe();\n      this._appRef.detachView(this._mentionListComponentRef.hostView);\n      this._mentionListComponentRef.destroy();\n      this._mentionListComponentRef = null;\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    this._createMentionList();\n\n    if (this._mentionList && !this._mentionList.hidden) {\n      if (hasKeyboardKeyCode(event, 'ArrowDown', DOWN_ARROW) ||\n        hasKeyboardKeyCode(event, 'ArrowUp', UP_ARROW) ||\n        hasKeyboardKeyCode(event, 'Tab', TAB) ||\n        hasKeyboardKeyCode(event, 'Enter', ENTER)) {\n        event.preventDefault();\n\n        return;\n      }\n    }\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyUp(event: KeyboardEvent): void {\n    this._createMentionList();\n\n    const {key} = event;\n    let config;\n\n    this._currentCaretPosition = this._getCaretPosition(this._inputElement);\n\n    this._isComandKeyPress(event);\n\n    if (this._isInteractionKeyPressed(event) || this._currentCaretPosition === 0) {\n      config = this._triggerCharsList[key];\n    } else {\n      config = this._triggerCharsList[this._inputElement.value[this._currentCaretPosition - 1]];\n    }\n\n    if (config) {\n      const inputVal = this._inputElement.value;\n\n      // don't show list if 'triggerChar' is a part of word. For example somemail@somedomain.com\n      const preCaret = inputVal[this._currentCaretPosition - 2];\n\n      if ((this._currentCaretPosition > 1 &&\n        ((preCaret === ' ') || (preCaret === '\\n') || (preCaret === '\\r'))) || this._currentCaretPosition <= 1) {\n        this._initConfig(config);\n      }\n    }\n\n    if (!config) {\n      if (hasKeyboardKeyCode(event, 'Backspace', BACKSPACE)) {\n        this._reopenList();\n      }\n    }\n\n    if (!config && this._startPosition >= 0 && this._searching) {\n      if (this._currentCaretPosition < this._startPosition) {\n        this._stopSearching();\n      } else {\n        if (!this._mentionList.hidden) {\n          if (hasKeyboardKeyCode(event, 'Tab', TAB) || hasKeyboardKeyCode(event, 'Enter', ENTER)) {\n            event.preventDefault();\n            this._updateInputValue();\n\n            // fire input event so angular bindings are updated\n            const inputEvent = new Event('input', {\n              bubbles: true,\n              cancelable: true,\n            });\n\n            this._inputElement.dispatchEvent(inputEvent);\n\n            return;\n          }\n\n          if (hasKeyboardKeyCode(event, 'Escape', ESCAPE)) {\n            event.preventDefault();\n            this._stopSearching();\n\n            return;\n          }\n\n          if (hasKeyboardKeyCode(event, 'ArrowDown', DOWN_ARROW)) {\n            event.preventDefault();\n            this._mentionList.focusNext();\n\n            return;\n          }\n\n          if (hasKeyboardKeyCode(event, 'ArrowUp', UP_ARROW)) {\n            event.preventDefault();\n            this._mentionList.focusPrev();\n\n            return;\n          }\n        }\n\n        if (this._searching) {\n          const inputValue = this._inputElement.value;\n          const searchValue = inputValue.substring(this._startPosition, this._currentCaretPosition);\n\n          this._searchValue = searchValue;\n          this.mentionSearchValueEntered.emit(this._searchValue);\n          this._updateMentionList();\n        }\n      }\n    }\n\n    this._ngZone.onStable\n      .pipe(take(1))\n      .subscribe(() => {\n        this._updatePosition();\n      });\n  }\n\n  @HostListener('blur')\n  onBlur(): void {\n    this._stopSearching();\n  }\n\n  private _getLastCharIndex(str: string, char: string): number {\n    return str.toLowerCase().lastIndexOf(char);\n  }\n\n  private _isComandKeyPress(event: KeyboardEvent): void {\n    if (hasKeyboardKeyCode(event, 'Shift', SHIFT) ||\n      hasKeyboardKeyCode(event, 'Alt', ALT) ||\n      hasKeyboardKeyCode(event, 'Control', CONTROL)) {\n      return;\n    }\n  }\n\n  private _initConfig(config: MentionConfig): void {\n    this._currentConfig = config;\n    this._searchValue = null;\n    this._searching = true;\n    this._startPosition = this._currentCaretPosition;\n    this._updateMentionList();\n    this._mentionList.setTemplates(this._currentConfig.itemTemplate, this._currentConfig.topSideTemplate);\n    this.mentionTriggerCharPressed.emit(config.triggerChar);\n  }\n\n  private _reopenList(): void {\n    const value = this._inputElement.value;\n    const leftPart = value.substring(0, this._currentCaretPosition);\n    let triggerCharConfig = null;\n\n    const newLineReg = /\\r|\\n/g;  // regexp for new line in texture\n\n    // well looks like IE doesn't support matchAll, have to fallback for regexp exec(); Need to replace when deprecate IE11\n    // const newLinesMatch = [...leftPart.matchAll(newLineReg)].pop(); // it returns iterator, let convert it to array and grab the last one\n\n    let newLinesMatch = null;\n    let result = newLineReg.exec(leftPart);\n\n    while (result) {\n      result = newLineReg.exec(leftPart);\n      newLinesMatch = result;\n    }\n\n    let oneLine;\n    let cutOffIndex = 0;\n\n    // if we have a new line, let’s get substring from caret position to its start\n    if (newLinesMatch) {\n      cutOffIndex = newLinesMatch.index + 1;\n      oneLine = leftPart.substring(newLinesMatch.index + 1);\n    } else {\n      oneLine = leftPart;\n    }\n\n    // Now we have one line of the text which may contain triggerChars or may not\n    let found = false;\n\n    if (this.mentionConfig) {\n      for (let stringIndex = oneLine.length - 1; stringIndex >= 0; stringIndex--) {\n        const char = oneLine[stringIndex];\n        const preChar = oneLine[stringIndex - 1] || ' ';\n\n        for (const config of this.mentionConfig) {\n          if ((config.triggerChar === char) && (preChar === ' ')) {\n\n            triggerCharConfig = {index: stringIndex + cutOffIndex, char: config.triggerChar};\n            found = true;\n            break;\n          }\n        }\n\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    if (triggerCharConfig) {\n      this._startPosition = triggerCharConfig.index + 1;\n      this._searching = true;\n      this._currentConfig = this._triggerCharsList[triggerCharConfig.char];\n      this._mentionList.setTemplates(this._currentConfig.itemTemplate, this._currentConfig.topSideTemplate);\n    }\n  }\n\n  private _updateInputValue(): void {\n    const selectedConfig = this._mentionList.getActiveValue();\n\n    if (selectedConfig) {\n      const selectedValue = this._mentionList.searchKey ? selectedConfig[this._mentionList.searchKey] : selectedConfig;\n\n      this._pasteValue(selectedValue + ' ', this._startPosition, this._currentCaretPosition);\n      this.mentionItemSelected.emit(selectedConfig);\n    }\n\n    this._stopSearching();\n  }\n\n  private _updateMentionList(): void {\n    let matches = [];\n    let searchKey;\n\n    if (this._currentConfig) {\n      const configItems = this._currentConfig.items;\n\n      searchKey = this._currentConfig.searchKey;\n\n      if (this._searchValue) {\n        if (searchKey) {\n          matches = configItems.filter(item => item[searchKey].toLowerCase().indexOf(this._searchValue.toLowerCase()) !== -1);\n        } else {\n          matches = configItems.filter(item => item.toLowerCase().indexOf(this._searchValue.toLowerCase()) !== -1);\n        }\n      }\n\n      if (this._searchValue === null || this._searchValue.length === 0) {\n        matches = configItems;\n      }\n    }\n\n    if (this._mentionList) {\n      this._mentionList.setListItems(matches);\n\n      // Show list if results exist or isLoading state\n      if (matches.length > 0 || this.showMentionLoader) {\n        this._mentionList.appendToBody = this.appendToBody;\n        this._mentionList.showList();\n      } else {\n        this._mentionList.hideList();\n      }\n      this._mentionList.setActiveIndex(0);\n      this._mentionList.setSearchKey(searchKey);\n    }\n  }\n\n  private _createMentionList(): void {\n    if (!this._mentionList) {\n      const componentFactory = this._componentFactory.resolveComponentFactory(AdaptMentionListComponent);\n\n      this._mentionListComponentRef = componentFactory.create(this._injector);\n\n      this._appRef.attachView(this._mentionListComponentRef.hostView);\n      this._renderer.appendChild(this._inputElement.parentNode, this._mentionListComponentRef.location.nativeElement);\n\n      this._mentionList = this._mentionListComponentRef.instance;\n      this._mentionList.initializeConfig(this._inputElement, this.mentionStyleConfig);\n\n      this._mentionList.onItemClick.subscribe(() => {\n        this._updateInputValue();\n      });\n    }\n  }\n\n  private _hideMentionList(): void {\n    if (this._mentionList) {\n      this._mentionList.hideList();\n    }\n  }\n\n  private _updatePosition(): void {\n    this._mentionList.caretUpdated$.next(this._startPosition);\n  }\n\n  private _stopSearching(): void {\n    this._hideMentionList();\n\n    this._currentConfig = null;\n    this._searching = false;\n  }\n\n  private _getCaretPosition(element: HTMLInputElement | HTMLTextAreaElement): number {\n    return element.value.slice(0, element.selectionStart).length;\n  }\n\n  private _pasteValue(text: string, startPosition: number, endPosition: number): void {\n    const inputValue = this._inputElement.value;\n    const value = inputValue.substr(0, startPosition) + text + inputValue.substr(endPosition);\n\n    this._inputElement.value = value;\n\n    const caretPosition = startPosition + text.length;\n\n    this._inputElement.setSelectionRange(caretPosition, caretPosition);\n  }\n\n  private _isInteractionKeyPressed(event: KeyboardEvent): boolean {\n    return hasKeyboardKeyCode(event, 'Backspace', BACKSPACE) || hasKeyboardKeyCode(event, 'Escape', ESCAPE) ||\n      hasKeyboardKeyCode(event, 'Tab', TAB) || hasKeyboardKeyCode(event, 'Enter', ENTER) ||\n      hasKeyboardKeyCode(event, 'ArrowLeft', LEFT_ARROW) || hasKeyboardKeyCode(event, 'ArrowRight', RIGHT_ARROW) ||\n      hasKeyboardKeyCode(event, 'ArrowDown', DOWN_ARROW) || hasKeyboardKeyCode(event, 'ArrowUp', UP_ARROW);\n  }\n}\n"]}