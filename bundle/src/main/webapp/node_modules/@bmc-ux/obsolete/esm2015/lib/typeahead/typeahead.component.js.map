{"version":3,"file":"typeahead.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-obsolete/src/lib/typeahead/typeahead.component.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\n// Based on ng-bootstrap (https://github.com/ng-bootstrap/ng-bootstrap)\n// Licensed under the MIT License\n\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Injector,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport {noop, Observable, OperatorFunction} from 'rxjs';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR, NgControl} from '@angular/forms';\nimport {transition, trigger, useAnimation} from '@angular/animations';\nimport {ResultTemplateContext} from './typeahead-window';\nimport {AdaptTypeaheadConfig} from './typeahead.config';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptTranslateService,\n  ANIMATION_NAME,\n  hasRequiredValidator,\n  PlacementArray,\n  toBoolean\n} from '@bmc-ux/adapt-angular';\nimport {AdaptRadarGenericDirective, AdaptRadarService} from '@bmc-ux/adapt-radar';\n\n\nlet nextId = 0;\n\nexport const TYPEAHEAD_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AdaptTypeaheadComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'adapt-typeahead',\n  template: `\n    <div class=\"dropdown show\"\n         [class.has-warning]=\"isWarning && !isError\"\n         [class.has-danger]=\"!isWarning && isError\">\n      <adapt-rx-control-label [for]=\"id\"\n                              [label]=\"label\"\n                              [requiredLabel]=\"requiredLabel\"\n                              [subLabel]=\"description\"\n                              [showRequiredLabel]=\"required\"></adapt-rx-control-label>\n      <input #input\n             type=\"text\"\n             class=\"form-control\"\n             [attr.id]=\"id\"\n             [(ngModel)]=\"value\"\n             [ngbTypeahead]=\"typeahead\"\n             [preventResults]=\"disabled || readonly\"\n             [disabled]=\"disabled\"\n             [readOnly]=\"readonly\"\n             [container]=\"appendToContainer\"\n             [virtualScroll]=\"virtualScroll\"\n             [virtualScrollItemSize]=\"virtualScrollItemSize\"\n             [virtualScrollDropdownWidth]=\"virtualScrollDropdownWidth\"\n             [virtualScrollDropdownHeight]=\"virtualScrollDropdownHeight\"\n             [positionTo]=\"positionTo\"\n             [placement]=\"placement\"\n             [required]=\"required\"\n             [editable]=\"editable\"\n             [showHint]=\"showHint\"\n             [focusFirst]=\"focusFirst\"\n             [inputFormatter]=\"inputFormatter\"\n             [resultFormatter]=\"resultFormatter\"\n             [resultTemplate]=\"resultTemplate\"\n             [placeholder]=\"placeholder || ''\"\n             [openOnFocus]=\"openOnFocus\"\n             [autocomplete]=\"autocomplete\"\n             [attr.aria-label]=\"ariaLabel\"\n             [attr.aria-labelledby]=\"ariaLabelledby\"\n             [attr.aria-describedby]=\"ariaDescribedBy\"\n             (selectItem)=\"onSelect($event)\"\n             (typeAheadPopupOpen)=\"typeAheadPopUpChange($event)\"\n             (click)=\"click.emit($event)\"\n             (onBlur)=\"onBlur($event)\"\n             (onFocus)=\"onFocus($event)\"\n             (input)=\"onInputChange($event)\"/>\n\n      <div *ngIf=\"errorMessage && isError && !isWarning\" [@validationFeedbackAnimation] role=\"alert\">\n        <p class=\"form-control-feedback m-0 pt-1 pb-2\">{{errorMessage}}</p>\n      </div>\n      <div *ngIf=\"warningMessage && isWarning && !isError\" [@validationFeedbackAnimation] role=\"alert\">\n        <p class=\"form-control-feedback m-0 pt-1 pb-2\">{{warningMessage}}</p>\n      </div>\n    </div>`,\n  animations: [\n    trigger('validationFeedbackAnimation', [\n      transition(':enter', [\n        useAnimation(ANIMATION_NAME.fadeIn)\n      ]),\n      transition(':leave', [\n        useAnimation(ANIMATION_NAME.fadeOut)\n      ])\n    ])\n  ],\n  providers: [TYPEAHEAD_VALUE_ACCESSOR],\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {'class': 'typeahead'}\n})\nexport class AdaptTypeaheadComponent extends AdaptRadarGenericDirective implements ControlValueAccessor, OnInit {\n  appendToContainer: HTMLElement | 'body';\n  /**\n   * A function to transform the provided observable text into the array of results.\n   * Note that the \"this\" argument is undefined so you need to explicitly bind it to a desired \"this\" target.\n   */\n\n  /*\n    * Typeahead OperatorFunction\n  */\n  @Input() set typeahead(inputFunction: OperatorFunction<string, any[]> | Observable<string>) {\n    this._typeahead = inputFunction;\n  }\n\n  get typeahead(): OperatorFunction<string, any[]> | Observable<string> {\n    return this._typeahead;\n  }\n\n  /**\n   * The plain text label for the input element\n   */\n  @Input() label: string;\n\n  /**\n   * The description for the input element\n   */\n  @Input() description: string;\n\n  /**\n   * Unique id of the element.\n   */\n  @Input() id: string = `typeahead-${nextId++}`;\n\n  /**\n   * A flag indicating if model values should be restricted to the ones selected from the popup only.\n   */\n  @Input() editable: boolean;\n\n  /**\n   * A flag indicating if the first match should automatically be focused as you type.\n   */\n  @Input() focusFirst: boolean;\n\n  /**\n   * Show hint when an option in the result list matches.\n   */\n  @Input() showHint: boolean;\n\n  /**\n   * A function to convert a given value into string to display in the input field\n   */\n  @Input() inputFormatter: Function;\n\n  /**\n   * A function to format a given result before display.\n   * This function should return a formatted string without any HTML markup\n   */\n  @Input() resultFormatter: Function;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Input field placeholder\n   */\n  @Input() placeholder: string;\n\n  /**\n   * Placement of a typeahead accepts:\n   * \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   * \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n   */\n  @Input() placement: PlacementArray = 'auto';\n\n  /**\n   * Input field errorMessage\n   */\n  @Input() errorMessage: string;\n\n  /**\n   * Warning is displayed when user enter some text which is not corresponding any typeahead options.\n   * @since 11.16.0\n   */\n  @Input() warningMessage: string;\n\n  @Input() disabled: boolean = false;\n\n  @Input() readonly: boolean = false;\n\n  /**\n   * Append to body trigger\n   */\n  @Input() set appendToBody(state: boolean) {\n    if (state && !this.appendToContainer) {\n      this.appendTo = 'body';\n    }\n  }\n\n  /**\n   * When specified, the drop-down list will be anchored to the selected element\n   */\n  @Input() positionTo: HTMLElement;\n\n  /**\n   * When specified, the drop-down list will be appended to the selected element\n   */\n  @Input() set appendTo(element: HTMLElement | 'body') {\n    this.appendToContainer = element;\n  }\n\n  /**\n   * Whether the input is required. The plain text 'requiredLabel' for the input element\n   */\n  @Input() requiredLabel: string;\n\n  /**\n   * Open popup on focus\n   */\n  @Input() openOnFocus: boolean = false;\n\n  /**\n   * Enable virtual scroll for results window. Can be suitable for big amount of results\n   */\n  @Input() virtualScroll: boolean = false;\n\n  /**\n   * Used to set \"itemSize\" virtual scroll @Input()\n   */\n  @Input() virtualScrollItemSize: number = 30;\n\n  /**\n   * Used to set width for results dropdown\n   */\n  @Input() virtualScrollDropdownWidth: string = '25.625rem';\n\n  /**\n   * Used to set height for results dropdown\n   */\n  @Input() virtualScrollDropdownHeight: string = '13.75rem';\n\n  /**\n   * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n   * take precedence so this may be omitted.\n   */\n  @Input('aria-label') ariaLabel: string | null = null;\n\n  /**\n   * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n   */\n  @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('aria-describedby') ariaDescribedBy: string | null = null;\n\n  /**\n   * The value for the `autocomplete` attribute for the `<input>` element.\n   * @since v10.14.0\n   */\n  @Input() autocomplete: string = 'off';\n\n  /**\n   * Reference to input element\n   */\n  @ViewChild('input', {static: true}) inputElement: ElementRef;\n\n  /**\n   * An event emitted when a match is selected. Event payload is of type NgbTypeaheadSelectItemEvent.\n   */\n  @Output() readonly selectItem: EventEmitter<any> = new EventEmitter();\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() readonly focus: EventEmitter<any> = new EventEmitter();\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() readonly blur: EventEmitter<any> = new EventEmitter();\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() readonly click: EventEmitter<any> = new EventEmitter();\n  /**\n   * If the error state should be shown to user\n   */\n  isError: boolean;\n\n  /** Make input borders orange in case if user enter wrong text which is not correspond to any typeahead options */\n  isWarning: boolean;\n  /**\n   * The internal data model\n   */\n  private innerValue: any = '';\n\n  /** Actual value, event if it is not matching any typeahead options */\n  private actualInputValue: string = '';\n\n  /**\n   * If the typeAhead drop down is open\n   */\n  private isTypeAheadOpen: boolean = true;\n  /**\n   * Placeholders for the callbacks which are later provided by the Control Value Accessor\n   */\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n  private _isTouched: boolean = false;\n\n  private _required: boolean = false;\n  private _typeahead: OperatorFunction<string, any[]> | Observable<string>;\n\n  private _ngControl: NgControl;\n\n  /** Whether the element is required. */\n  @Input()\n  get required(): any {\n    return this._required || hasRequiredValidator(this._ngControl);\n  }\n\n  set required(value: any) {\n    this._required = toBoolean(value);\n  }\n\n  /**\n   * get accessor\n   */\n  get value(): any {\n    return this.innerValue;\n  }\n\n  /**\n   * set accessor including call the onchange callback\n   */\n  set value(v: any) {\n    if (v !== this.innerValue) {\n      this.innerValue = v;\n      this.onChangeCallback(v);\n    }\n    this.updateError();\n  }\n\n  constructor(config: AdaptTypeaheadConfig,\n              private ts: AdaptTranslateService,\n              private _injector: Injector,\n              _adaptRadarService: AdaptRadarService,\n              _elem: ElementRef<HTMLElement>) {\n    super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptTypeahead);\n\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.requiredLabel = ts.getCurrentLanguage()['adapt.common.required'];\n  }\n\n  ngOnInit(): void {\n    this._ngControl = this._injector.get(NgControl, null);\n  }\n\n  onFocus(event: FocusEvent): void {\n    this.focus.emit(event);\n  }\n\n  onSelect(event: any): void {\n    this.selectItem.emit(event);\n  }\n\n  /**\n   * Triggered when typeAhead drop down is open or closed\n   */\n  typeAheadPopUpChange(event: any): void {\n    this.isTypeAheadOpen = event.open;\n\n    // When input text is empty set as empty instead of undefined\n    if (!event.text) {\n      this.innerValue = '';\n    }\n\n    this.updateError();\n  }\n\n  /**\n   * Update the error UI\n   */\n  updateError(): void {\n    if (!this._isTouched && (this.isTypeAheadOpen || this.required)) {\n      this.isError = false;\n\n      return;\n    }\n\n    this.isError = ((this.required && !this.innerValue) || (!this.editable && this.innerValue === undefined)) && !this.actualInputValue;\n  }\n\n  updateWarning(): void {\n    this.isWarning = !this.editable && this._isTouched\n      && !this.innerValue && this.actualInputValue && !this.isTypeAheadOpen;\n  }\n\n  onInputChange(event: Event): void {\n    this.actualInputValue = event.target['value'];\n  }\n\n  /**\n   * Set touched on blur\n   */\n  onBlur(event: FocusEvent): void {\n    this._isTouched = true;\n    this.onTouchedCallback();\n    this.blur.emit(event);\n    this.updateError();\n    this.updateWarning();\n  }\n\n  /**\n   * From ControlValueAccessor interface\n   */\n  writeValue(value: any): void {\n    if (value !== this.innerValue) {\n      this.innerValue = value;\n    }\n    this.updateError();\n  }\n\n  /**\n   * From ControlValueAccessor interface\n   */\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  /**\n   * From ControlValueAccessor interface\n   */\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n"]}