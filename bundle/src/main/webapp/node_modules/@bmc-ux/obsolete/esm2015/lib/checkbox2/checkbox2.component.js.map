{"version":3,"file":"checkbox2.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-obsolete/src/lib/checkbox2/checkbox2.component.ts","../../../../../../libs/adapt-obsolete/src/lib/checkbox2/checkbox2.component.html"],"names":[],"mappings":"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","sourcesContent":["// TODO update types\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Injector,\n  Input,\n  OnInit, Optional,\n  Output,\n  Renderer2,\n  ViewEncapsulation\n} from '@angular/core';\nimport {transition, trigger, useAnimation} from '@angular/animations';\n\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptTranslateService,\n  ANIMATION_NAME,\n  createFormControlValidator,\n  createFormControlValueAccessor,\n  FormComponent,\n  SafeCdr,\n  toBoolean\n} from '@bmc-ux/adapt-angular';\nimport {AdaptRadarService} from '@bmc-ux/adapt-radar';\n\n\nconst noop = (): void => {\n  return;\n};\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'adapt-checkbox2, div[adapt-checkbox2], adapt-checkbox',\n  templateUrl: './checkbox2.component.html',\n  providers: [\n    createFormControlValueAccessor(AdaptCheckbox2Component),\n    createFormControlValidator(AdaptCheckbox2Component)\n  ],\n  styles: ['.checkbox__item .adapt-icon { bottom: 0; }'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('validationFeedbackAnimation', [\n      transition(':enter', [\n        useAnimation(ANIMATION_NAME.fadeIn)\n      ]),\n      transition(':leave', [\n        useAnimation(ANIMATION_NAME.fadeOut)\n      ])\n    ])\n  ]\n})\nexport class AdaptCheckbox2Component extends FormComponent implements OnInit {\n  context: AdaptCheckbox2Component = this;\n  /**\n   * The host element of the component\n   */\n  _el: HTMLElement;\n  /**\n   * An unique id for each checkbox/switcher\n   */\n  _uniqueId: string = `adapt-checkbox-${++nextUniqueId}`;\n  _label: string = '';\n\n  @Input() class: string = ''; // override the standard class attr with a new one\n  /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n  @Input() id: string = this._uniqueId;\n  /** Name value will be applied to the input element if present */\n  @Input() name: string | null = null;\n  /** The tabindex attribute of the native input element */\n  @Input() tabindex: number = null;\n  @Input() stopPropagation: boolean = true;\n  /** The value attribute of the native input element */\n  @Input() value: string;\n  /**\n   * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n   * take precedence so this may be omitted.\n   */\n    // eslint-disable-next-line @typescript-eslint/typedef\n  @Input('aria-label') ariaLabel = '';\n  /**\n   * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n   */\n  @Input('aria-labelledby') ariaLabelledby: string | null = null;\n  /**\n   * Control [aria-describedby] attribute text\n   */\n  @Input() ariaDescribedBy: string = null;\n  /** the displayMessage attribute allows to show the additional info for the user */\n  @Input() displayMessage: string = 'Please fill out this field';\n  /** the toggleMessage attribute will toggle the additional messages */\n  @Input() toggleMessage: boolean = false;\n\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() readonly focus: EventEmitter<any> = new EventEmitter();\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() readonly blur: EventEmitter<any> = new EventEmitter();\n  /** Event emitted when the switcher value changes. */\n    // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() readonly change: EventEmitter<boolean> = new EventEmitter<boolean>();\n  /** Event emitted when the checkbox's `indeterminate` value changes. */\n  @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  private _onTouchedCallback: () => void = noop;\n  private _onChangeCallback: (_: any) => void = noop;\n\n  @HostBinding('class')\n  get hostClasses(): string {\n    return [\n      this.class, // include our new one\n      this.mainCls,\n      'checkbox',\n      this.readonly ? 'readonly' : '',\n    ].join(' ');\n  }\n\n  /** The input/switcher element's value. */\n  get checked(): boolean {\n    return this._checked;\n  }\n\n  set checked(checked: boolean) {\n    this._updateCheckedValue(checked, false);\n  }\n\n  @Input()\n  get indeterminate(): boolean {\n    return this._indeterminate;\n  }\n\n  set indeterminate(indeterminate: boolean) {\n    const changed = indeterminate !== this._indeterminate;\n\n    this._indeterminate = indeterminate;\n\n    if (changed) {\n      this.indeterminateChange.emit(this._indeterminate);\n    }\n  }\n\n  get inputId(): string {\n    return `${this.id || this._uniqueId}-input`;\n  }\n\n  get nativeElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n\n  /**\n   * The label text of the checkbox component\n   */\n  @Input()\n  get label(): string {\n    return this._label;\n  }\n\n  set label(v: string) {\n    this._label = v;\n  }\n\n  /**\n   * Private variables of checkbox/switcher component\n   */\n\n  private _checked: boolean = false;\n  /**\n   * An indeterminate state of checkbox component - by default is false;\n   */\n  private _indeterminate: boolean = false;\n\n  constructor(injector: Injector,\n              private _element: ElementRef,\n              private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef,\n              ts: AdaptTranslateService,\n              _adaptRadarService: AdaptRadarService,\n              @Optional() _entityName: AdaptRadarAngularCustomEventName) {\n    super(injector, ts, _adaptRadarService, _element, _entityName ? _entityName : AdaptRadarAngularCustomEventName.AdaptCheckbox2);\n    this._el = _element.nativeElement;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  validate(): null {\n    return null;\n  }\n\n  /**\n   *\n   * @returns \"true\" | \"false\" | \"mixed\"\n   */\n  _getAriaChecked(): 'true' | 'false' | 'mixed' {\n    return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n  }\n\n  /**\n   * interface ControlValueAccessor\n   * writeValue(obj: any): void\n   */\n  writeValue(checked: any): void {\n    this._updateCheckedValue(!!checked, true);\n  }\n\n  /**\n   * interface ControlValueAccessor\n   * registerOnChange(fn: any): void\n   */\n  registerOnChange(fn: any): void {\n    this._onChangeCallback = fn;\n  }\n\n  /**\n   * interface ControlValueAccessor\n   * registerOnTouched(fn: any): void\n   */\n  registerOnTouched(fn: any): void {\n    this._onTouchedCallback = fn;\n  }\n\n  /**\n   * interface ControlValueAccessor\n   * setDisabledState(isDisabled: boolean)?: void\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    SafeCdr.markForCheck(this._changeDetectorRef);\n  }\n\n  /**\n   * Set focus state of the input changes\n   */\n  onFocus(): void {\n    this._renderer.addClass(this._el, 'is-focused');\n  }\n\n  /**\n   * Remove focus state of the input changes\n   */\n  onBlur(): void {\n    this._renderer.removeClass(this._el, 'is-focused');\n    this._onTouchedCallback();\n  }\n\n  /**\n   * Toggle the state of input element on user action\n   */\n  onInputClick(e: Event): void {\n    if (this.stopPropagation) {\n      e.stopPropagation();\n    }\n\n    if (!(this.disabled || this.readonly)) {\n      if (this.indeterminate) {\n        this.indeterminate = false;\n        this.indeterminateChange.emit(this.indeterminate);\n      }\n      this._toggle();\n    } else {\n      e.preventDefault();\n    }\n  }\n\n  onInteractionEvent(e: Event): void {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the `change` output.\n    e.stopPropagation();\n  }\n\n\n  /**\n   * Toggle checked/unchecked states in checkbox/switcher component\n   */\n  private _toggle(): void {\n    this.checked = !this.checked;\n  }\n\n  private _updateCheckedValue(checked: boolean, fromOuterComponent: boolean): void {\n    if (checked !== this.checked) {\n      this._checked = toBoolean(checked);\n\n      if (!fromOuterComponent) {\n        this.change.emit(checked);\n      }\n      this._onChangeCallback(checked);\n      SafeCdr.markForCheck(this._changeDetectorRef);\n    }\n  }\n}\n","<ng-content select=\".checkbox-before\"></ng-content>\n\n<span class=\"checkbox__label\">\n  <label>\n    <input #input\n           type=\"checkbox\"\n           class=\"checkbox__input\"\n           [attr.value]=\"value\"\n           [attr.name]=\"context.name\"\n           [id]=\"inputId\"\n           [disabled]=\"context.disabled\"\n           [readOnly]=\"context.readonly\"\n           [attr.aria-readonly]=\"readonly\"\n           [checked]=\"checked\"\n           [required]=\"context.required\"\n           [tabIndex]=\"tabindex\"\n           [indeterminate]=\"indeterminate\"\n           (focus)=\"onFocus()\"\n           (blur)=\"onBlur()\"\n           (change)=\"onInteractionEvent($event)\"\n           (click)=\"onInputClick($event)\"\n           [attr.aria-label]=\"ariaLabel\"\n           [attr.aria-labelledby]=\"ariaLabelledby\"\n           [attr.aria-describedby]=\"ariaDescribedBy\"\n           [attr.aria-checked]=\"_getAriaChecked()\"/>\n\n    <div class=\"checkbox__item\" [ngClass]=\"{'checkbox__item_no-label': !context.label}\">\n      <span class=\"icon-indeterminate\"></span>\n      <span class=\"font-weight-normal form-control-label\">\n        <span [ngClass]=\"{'sr-only': !context.label}\">{{context.label}}</span>\n        <ng-container *ngIf=\"context.required\">\n          <span class=\"letter-space\"></span>\n          <span class=\"form-control-required\">{{context.requiredLabel}}</span>\n        </ng-container>\n      </span>\n    </div>\n  </label>\n\n  <span class=\"icon-space\" *ngIf=\"context.tooltipIconCls || context.popoverIcon\"></span>\n\n  <adapt-icon *ngIf=\"context.tooltipIconCls && !context.popoverIcon\"\n              [adaptRadarDisableEventSending]=\"true\"\n              [name]=\"context.tooltipIconCls\"\n              placement=\"top\"\n              adaptTooltip={{context.tooltipText}}></adapt-icon>\n\n\n  <adapt-icon *ngIf=\"context.popoverIcon\" [name]=\"context.popoverIcon\"\n              [adaptRadarDisableEventSending]=\"true\"\n              [placement]=\"context.popoverPlacement\"\n              [adaptPopover]=\"context.popoverContent\"\n              [triggers]=\"context.popoverTriggers\"></adapt-icon>\n</span>\n\n<ng-content select=\".checkbox-after\"></ng-content>\n\n<div *ngIf=\"toggleMessage\" [@validationFeedbackAnimation]>\n  <p class=\"form-control-feedback m-0 pt-1 pb-2 adapt-counter-error\">{{displayMessage}}</p>\n</div>\n\n\n"]}