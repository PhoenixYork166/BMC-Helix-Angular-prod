{"version":3,"file":"adapt-radar-generic.directive.js","sourceRoot":"","sources":["../../../../../libs/adapt-radar/src/lib/adapt-radar-generic.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAgB,SAAS,EAAE,UAAU,EAAE,KAAK,EAAY,MAAM,eAAe,CAAC;AACrF,OAAO,EAAC,iBAAiB,EAAC,MAAM,uBAAuB,CAAC;AACxD,OAAO,EAAC,yBAAyB,EAAC,MAAM,qBAAqB,CAAC;;;;AAI9D,MAAM,OAAgB,0BAA0B;IAO9C,YAA+B,kBAAqC,EACrC,KAA8B,EAC9B,WAAsC;QAFtC,uBAAkB,GAAlB,kBAAkB,CAAmB;QACrC,UAAK,GAAL,KAAK,CAAyB;QAC9B,gBAAW,GAAX,WAAW,CAA2B;QAL5D,wBAAmB,GAAW,IAAI,CAAC;QACnC,kCAA6B,GAAY,IAAI,CAAC,2BAA2B,EAAE,CAAC;IAKrF,CAAC;IAED,eAAe;QACb,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,kBAAkB,CAAC,2BAA2B,CAAC,IAAI,CAAC,6BAA6B,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACzJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,oCAAoC,EAAE,CAAC;IAC9C,CAAC;IAEO,oCAAoC;QAC1C,IAAI,IAAI,CAAC,yBAAyB,EAAE;YAClC,IAAI,CAAC,yBAAyB,CAAC,UAAU,EAAE,CAAC;YAC5C,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;SACvC;IACH,CAAC;IAEO,2BAA2B;;QACjC,OAAO,CAAC,CAAC,CAAA,MAAA,MAAA,IAAI,CAAC,kBAAkB,CAAC,MAAM,0CAAE,mBAAmB,0CAAE,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA,CAAC;IACtF,CAAC;;oGA7BmB,0BAA0B;6EAA1B,0BAA0B;uFAA1B,0BAA0B;cAD/C,SAAS;qIAKC,mBAAmB;kBAA3B,KAAK;YACG,6BAA6B;kBAArC,KAAK","sourcesContent":["import {AfterViewInit, Directive, ElementRef, Input, OnDestroy} from '@angular/core';\nimport {AdaptRadarService} from './adapt-radar.service';\nimport {AdaptRadarCustomEventName} from './adapt-radar.model';\n\n\n@Directive()\nexport abstract class AdaptRadarGenericDirective implements AfterViewInit, OnDestroy {\n\n  private _elementIntersectObserver: IntersectionObserver;\n\n  @Input() adaptRadarGroupName: string = null;\n  @Input() adaptRadarDisableEventSending: boolean = this._checkIfDisabledFromSending();\n\n  constructor(protected readonly _adaptRadarService: AdaptRadarService,\n              protected readonly _elem: ElementRef<HTMLElement>,\n              protected readonly _entityName: AdaptRadarCustomEventName) {\n  }\n\n  ngAfterViewInit(): void {\n    this._elementIntersectObserver = this._adaptRadarService.subscribeOnElementIntersect(this.adaptRadarDisableEventSending, this._elem, this._entityName);\n  }\n\n  ngOnDestroy(): void {\n    this._unsubscribeFromIntersectionObserver();\n  }\n\n  private _unsubscribeFromIntersectionObserver(): void {\n    if (this._elementIntersectObserver) {\n      this._elementIntersectObserver.disconnect();\n      this._elementIntersectObserver = null;\n    }\n  }\n\n  private _checkIfDisabledFromSending(): boolean {\n    return !!this._adaptRadarService.config?.disableEventSending?.get(this._entityName);\n  }\n}\n"]}