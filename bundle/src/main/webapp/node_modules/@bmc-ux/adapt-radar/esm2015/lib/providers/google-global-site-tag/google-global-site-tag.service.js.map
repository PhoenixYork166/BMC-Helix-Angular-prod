{"version":3,"file":"google-global-site-tag.service.js","sourceRoot":"","sources":["../../../../../../../libs/adapt-radar/src/lib/providers/google-global-site-tag/google-global-site-tag.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable, OnDestroy} from '@angular/core';\nimport {\n  AdaptRadarConfig,\n  AdaptRadarCustomEventData,\n  AdaptRadarCustomEventName,\n  AdaptRadarPagePathEventData,\n  AdaptRadarProviderConfig\n} from '../../adapt-radar.model';\nimport {injectInitScript, injectSourceScript} from '../../adapt-radar.utils';\nimport {googleGlobalSiteTagInitScript, googleGlobalSiteTagSourceScript} from '../providers-scripts';\nimport {\n  AdaptRadarGoogleGlobalSiteTagEventNameEventName,\n  AdaptRadarGoogleGlobalSiteTagPagePathData\n} from './google-global-site-tag.model';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {BehaviorSubject, Observable, ReplaySubject} from 'rxjs';\nimport {AdaptRadarProductInfo} from '../../adapt-radar-products.model';\nimport {isNil} from 'lodash-es';\n\n\ndeclare function gtag(googleGlobalSiteTagEventName: AdaptRadarGoogleGlobalSiteTagEventNameEventName, id: string, googleGlobalSiteTagData: AdaptRadarGoogleGlobalSiteTagPagePathData): void;\n// eslint-disable-next-line no-redeclare\ndeclare function gtag(googleGlobalSiteTagEventName: AdaptRadarGoogleGlobalSiteTagEventNameEventName, customEventName: AdaptRadarCustomEventName, googleGlobalSiteTagData: AdaptRadarCustomEventData): void;\n\n\n@Injectable({providedIn: 'root'})\nexport class AdaptRadarGoogleGlobalSiteTagProvider implements OnDestroy {\n  private _id: string;\n  private _radarConfig: AdaptRadarConfig;\n  private _productInfo: AdaptRadarProductInfo;\n  private _destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n  private _initSource: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  // Observable that can be used to check Gainsight script initialization state\n  readonly init$: Observable<boolean> = this._initSource.asObservable();\n\n  static getInitScript(id: string, customInitScript: string): string {\n    return customInitScript || googleGlobalSiteTagInitScript(id);\n  }\n\n  static getSourceScript(id: string, customSourceScript: string): string {\n    return customSourceScript || googleGlobalSiteTagSourceScript(id);\n  }\n\n  get initProcess$(): Observable<boolean> {\n    return this.init$.pipe(take(1), takeUntil(this._destroyed$));\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed$.next(true);\n    this._destroyed$.complete();\n  }\n\n  /**\n   * The method is used to start collecting the data for the current provider\n   * It allows controlling the data collecting process on the customer side.\n   * For instance to turn on data collecting in run time when it needed based on user preferences or project business logic\n   *\n   * @param providerConfig - config for provider that need to be initialized\n   * @param radarConfig - main RADAR module config\n   */\n  startDataCollecting(providerConfig: AdaptRadarProviderConfig, radarConfig: AdaptRadarConfig): void {\n    this._id = providerConfig.id;\n    this._radarConfig = radarConfig;\n    this._productInfo = radarConfig.productInfo;\n\n    this.initProcess$\n      .subscribe(isInitialized => {\n\n        /**\n         * This window property must be set before any calls to gtag() are made, and it must be set on each page\n         * for which you want to disable Analytics. If the property is not set or set to false, then Analytics will work as usual.\n         */\n        this.toggleUserTracking(true, providerConfig);\n\n        if (isInitialized) {\n          return;\n        }\n\n        if (providerConfig.sourceScript !== false) {\n          injectSourceScript(AdaptRadarGoogleGlobalSiteTagProvider.getSourceScript(providerConfig.id, providerConfig.sourceScript));\n        }\n\n        if (providerConfig.initScript !== false) {\n          injectInitScript(AdaptRadarGoogleGlobalSiteTagProvider.getInitScript(providerConfig.id, providerConfig.initScript));\n        }\n\n        this._initSource.next(true);\n      });\n  }\n\n  stopDataCollecting(providerConfig: AdaptRadarProviderConfig): void {\n    this.toggleUserTracking(false, providerConfig);\n    this._initSource.next(false);\n  }\n\n  /**\n   * Method is used to send specific 'page_path' event for Google Analytics system\n   *\n   * @param pathData - path string that will be logged and used to track which pages was visited\n   *\n   * @example\n   * gtag('config', 'UA-1234567-89', {'page_path': '/new-page.html'});\n   */\n  sendPagePathEvent(pathData: AdaptRadarCustomEventData<AdaptRadarPagePathEventData>): void {\n    this.initProcess$.subscribe(isInitialized => {\n      if (isInitialized && !isNil(pathData)) {\n        gtag(AdaptRadarGoogleGlobalSiteTagEventNameEventName.Config, this._id, {[AdaptRadarCustomEventName.PagePath]: pathData.url});\n      }\n    });\n  }\n\n  /**\n   * Method is used to send custom events into Google Global Site Tag analytics system.\n   *\n   * @param customEventName - name of the event that will be logged into Google Global Site Tag analytics system\n   * @param customEventData - custom data that need to be collect and associate with `customEventName`\n   *\n   * @example\n   * gtag('event', 'video_auto_play_start', {\n   *  'event_label': 'My promotional video',\n   *  'event_category': 'video_auto_play',\n   *  'non_interaction': true\n   * });\n   */\n  sendCustomEvent(customEventName: AdaptRadarCustomEventName, customEventData: AdaptRadarCustomEventData): void {\n    this.initProcess$.subscribe(isInitialized => {\n      if (isInitialized) {\n        if (customEventName === AdaptRadarCustomEventName.PagePath) {\n          this.sendPagePathEvent(customEventData as AdaptRadarPagePathEventData);\n        } else {\n          gtag(AdaptRadarGoogleGlobalSiteTagEventNameEventName.Event, customEventName, customEventData);\n        }\n      }\n    });\n  }\n\n  sendGlobalData(): void {\n    this.initProcess$.subscribe(isInitialized => {\n      if (isInitialized) {\n        // sending global data\n      }\n    });\n  }\n\n  /**\n   * Opt-Out User Tracking\n   * In some cases, it may be necessary to disable Google Analytics on a page without removing the gtag.js tag.\n   * For example, you might do this if your site's privacy policy provides an option for the user to opt-out of Google Analytics.\n   *\n   * The gtag.js library includes a window property that, when set to true, disables gtag.js from sending data to Google Analytics.\n   * When Google Analytics attempts to set a cookie or send data back to the Google Analytics servers,\n   * it will first check if this property is set, and will take no action if the value is set to true.\n   *\n   * Google docs: https://developers.google.com/analytics/devguides/collection/gtagjs/user-opt-out\n   *\n   * @param isEnabled - tracking state (true for Out-In, false for Opt-Out)\n   * @param providerConfig - config for provider that need to be initialized\n   */\n  toggleUserTracking(isEnabled: boolean, providerConfig: AdaptRadarProviderConfig): void {\n    window[`ga-disable-${providerConfig.id}`] = !isEnabled;\n\n    this._initSource.next(isEnabled);\n  }\n}\n"]}