import { Version } from '@angular/core';
export declare enum AdaptRadarProductAreaName {
    ITOM = "ITOM",
    Converge = "Converge",
    EndUser = "End User",
    ServiceManagement = "Service Management",
    Platform = "Platform",
    ADAPT = "ADAPT",
    IZOT = "IZOT"
}
export declare enum AdaptRadarSubProductNameLevel1 {
    Launcher = "Launcher",
    Manage = "Manage",
    Configure = "Configure",
    HelixSSOConfiguration = "Helix SSO Configuration",
    MultiCloudBroker = "Multi-Cloud Broker",
    Integrate = "Integrate",
    Design = "Design",
    Telco = "Telco",
    HR = "HR",
    Finance = "Finance",
    Roles = "Roles",
    Notifications = "Notifications",
    Locations = "Locations",
    Reports = "Reports",
    Catalog = "Catalog",
    Administer = "Administer",
    ITSMInsights = "ITSM Insights",
    ServiceManagementManage = "Manage",
    Chatbot = "Chatbot",
    VirtualAssistant = "Virtual Assistant",
    DWPEndUser = "DWP End User",
    BWFPortal = "BWF Portal",
    SharedTicketConsole = "Shared Ticket Console",
    KnowledgeManagement = "Knowledge Management",
    TimelineCalendar = "Timeline Calendar",
    CMDB = "CMDB",
    View = "View",
    Model = "Model",
    ITOMManage = "Manage",
    Workspace = "Workspace",
    ITOMAdminister = "Administer",
    Logs = "Logs",
    ITOMConfigure = "Configure",
    Dashboard = "Dashboard",
    ITOM = "ITOM",
    Authorize = "Authorize",
    Monitor = "Monitor",
    Policies = "Policies",
    Documentation = "Documentation",
    IconFinder = "Icon Finder",
    ADAPTTools = "ADAPT Tools",
    AMIOps = "AMI Ops",
    Compuware = "Compuware",
    DB2 = "DB2"
}
export declare enum AdaptRadarSubProductNameLevel2 {
    Identities = "Identities",
    Roles = "Roles",
    Tenants = "Tenants",
    Notifications = "Notifications",
    InnovationSuiteConfigurations = "Innovation Suite Configurations",
    SharedConfigurations = "Shared Configurations",
    DataModel = "Data Model",
    UI = "UI",
    RulesDesigner = "Rules Designer",
    ProcessDesigner = "Process Designer",
    Services = "Services",
    Studio = "Studio",
    Features = "Features",
    Configure = "Configure",
    Incidents = "Incidents",
    Change = "Change",
    Problems = "Problems",
    Assets = "Assets",
    LiveChat = "Live Chat",
    Telco = "Telco",
    HR = "HR",
    Finance = "Finance",
    SharedTicketConsoleITSM = "ITSM",
    BWF = "BWF",
    HelixKnowledgeManagement = "Helix Knowledge Management",
    RemedyKnowledgeManagement = "Remedy Knowledge Management",
    BusinessWorkflowsKnowledgeManagement = "Business Workflows Knowledge Management",
    TimelineCalendarITSM = "ITSM",
    CMDB_ITSM = "ITSM",
    Discovery = "Discovery",
    OperationsManagement = "Operations Management",
    EnrichmentSources = "Enrichment Sources",
    EnrichmentPolicies = "Enrichment Policies",
    AlertPolicies = "Alert Policies",
    DataMasking = "Data Masking",
    Entities = "Entities",
    Blueprints = "Blueprints",
    Situations = "Situations",
    Policies = "Policies",
    Connectors = "Connectors",
    Explore = "Explore",
    Collect = "Collect",
    Archive = "Archive",
    Requests = "Requests",
    Reports = "Reports",
    Monitoring = "Monitoring",
    Blackout = "Blackout",
    Alarm = "Alarm",
    Even = "Even",
    SprintPlanner = "Sprint Planner"
}
export declare enum AdaptRadarSubProductNameLevel3 {
    DataManagement = "Data Management",
    Approval = "Approval",
    Assignment = "Assignment",
    ApprovalCentral = "Approval Central",
    Chatbot = "Chatbot",
    ChatOps = "Chat Ops",
    Foundation = "Foundation",
    LiveChatAgentConsole = "Live Chat Agent Console",
    Telco = "Telco",
    HR = "HR",
    Finance = "Finance"
}
export declare enum AdaptRadarHostingType {
    OnPrem = "OnPrem",
    SaaS = "SaaS"
}
export declare enum AdaptRadarCustomerEnvironment {
    Integration = "Integration",
    QA = "QA",
    Stage = "Stage",
    Production = "Production"
}
export interface AdaptRadarGenericProductInfo {
    /**
     * In case team is using semver(https://semver.org/) for versioning of the product,
     * we recommend to use angular "Version" class to have consistency in versions
     *
     * To pass semver version use import {Version} from '@angular/core';
     * version: new Version(11.22.33)
     *
     * In case team doesn't use semver any string can be passed
     */
    version: Version | string;
    /**
     * Product hosting type on-prem or saas
     */
    hosting: AdaptRadarHostingType;
    customerEnvironment: AdaptRadarCustomerEnvironment;
}
export interface AdaptRadarProductAreaInfo extends AdaptRadarGenericProductInfo {
    name: AdaptRadarProductAreaName;
}
export interface AdaptRadarSubProductInfoLevel1 extends AdaptRadarGenericProductInfo {
    name: AdaptRadarSubProductNameLevel1;
}
export interface AdaptRadarSubProductInfoLevel2 extends AdaptRadarGenericProductInfo {
    name: AdaptRadarSubProductNameLevel2 | string;
}
export interface AdaptRadarSubProductInfoLevel3 extends AdaptRadarGenericProductInfo {
    name: AdaptRadarSubProductNameLevel3 | string;
}
export interface AdaptRadarProductInfo {
    productArea: AdaptRadarProductAreaInfo;
    subProductLevel1?: AdaptRadarSubProductInfoLevel1;
    subProductLevel2?: AdaptRadarSubProductInfoLevel2;
    subProductLevel3?: AdaptRadarSubProductInfoLevel3;
}
export interface AdaptRadarProductInfoFlat {
    productAreaName: AdaptRadarProductAreaName;
    productAreaVersion: Version['full'];
    productAreaHosting: AdaptRadarHostingType;
    productAreaCustomerEnvironment: AdaptRadarCustomerEnvironment;
    subProductLevel1Name: AdaptRadarSubProductNameLevel1;
    subProductLevel1Version: Version['full'];
    subProductLevel1Hosting: AdaptRadarHostingType;
    subProductLevel1CustomerEnvironment: AdaptRadarCustomerEnvironment;
    subProductLevel2Name: AdaptRadarSubProductNameLevel2 | string;
    subProductLevel2Version: Version['full'];
    subProductLevel2Hosting: AdaptRadarHostingType;
    subProductLevel2CustomerEnvironment: AdaptRadarCustomerEnvironment;
    subProductLevel3Name: AdaptRadarSubProductNameLevel3 | string;
    subProductLevel3Version: Version['full'];
    subProductLevel3Hosting: AdaptRadarHostingType;
    subProductLevel3CustomerEnvironment: AdaptRadarCustomerEnvironment;
}
/**
 * Used to flatten "productInfo" property for better readability when data sent as a part of analytics event data
 *
 * @param productInfo non flatten version of "productInfo"
 */
export declare function flattenProductInfo(productInfo: AdaptRadarProductInfo): AdaptRadarProductInfoFlat | null;
