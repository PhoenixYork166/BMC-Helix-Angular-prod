import { ApplicationRef, ElementRef } from '@angular/core';
import { AdaptRadarConfig, AdaptRadarCustomEventData, AdaptRadarCustomEventName, AdaptRadarPagePathEventData, AdaptRadarProviderConfig, AdaptRadarSupportedProviders, AdaptRadarSupportedProvidersServices } from './adapt-radar.model';
import { AdaptRadarComponentAccordionData, AdaptRadarComponentMenuData, AdaptRadarComponentNavigationActionData, AdaptRadarComponentNavigationAlertData, AdaptRadarComponentNavigationData, AdaptRadarComponentNavigationHamburgerData, AdaptRadarComponentNavigationMenuData, AdaptRadarComponentProfileData, AdaptRadarComponentRxCheckboxData, AdaptRadarComponentRxCounterData, AdaptRadarComponentRxDateTimeData, AdaptRadarComponentRxFeedbackData, AdaptRadarComponentRxListBuilderData, AdaptRadarComponentRxListSelectorData, AdaptRadarComponentRxRadiobuttonData, AdaptRadarComponentRxRatingBinaryData, AdaptRadarComponentRxRatingDefaultData, AdaptRadarComponentRxRatingLikeData, AdaptRadarComponentRxRatingVotingData, AdaptRadarComponentRxSearchData, AdaptRadarComponentRxSelectData, AdaptRadarComponentRxSwitchData, AdaptRadarComponentRxTextareaData, AdaptRadarComponentRxTextfieldData, AdaptRadarComponentRxTimeSlotData, AdaptRadarComponentTabsData, AdaptRadarComponentTabsKebabMenuData, AdaptRadarGenericComponentData } from './adapt-radar-components.model';
import { AdaptRadarGainsightProvider } from './providers/gainsight/gainsight.service';
import { AdaptRadarGoogleGlobalSiteTagProvider } from './providers/google-global-site-tag/google-global-site-tag.service';
import { AdaptRadarGoogleTagManagerProvider } from './providers/google-tag-manager/google-tag-manager.service';
import * as i0 from "@angular/core";
export declare class AdaptRadarService {
    private _adaptRadarGGSTProvider;
    private _adaptRadarGTMProvider;
    private _adaptRadarGainsightProvider;
    private _applicationRef;
    enabledProvidersHashMap: Map<AdaptRadarSupportedProviders, AdaptRadarProviderConfig>;
    private _config;
    constructor(_adaptRadarGGSTProvider: AdaptRadarGoogleGlobalSiteTagProvider, _adaptRadarGTMProvider: AdaptRadarGoogleTagManagerProvider, _adaptRadarGainsightProvider: AdaptRadarGainsightProvider, _applicationRef: ApplicationRef);
    set config(conf: AdaptRadarConfig);
    get config(): AdaptRadarConfig;
    /**
     * The method is used to start collecting the data for all enabled providers
     * It allows controlling the data collecting process on the customer side.
     * For instance to turn on data collecting in run time when it needed based on user preferences or project business logic
     *
     * In case there is a requirement to toggle data collecting for a specific provider it can be done by calling the "startDataCollecting" method for the needed provider
     */
    startDataCollecting(config: AdaptRadarConfig): void;
    /**
     * The method is used to stop collecting the data for all enabled providers
     * It allows controlling the data collecting process on the customer side.
     * For instance to turn off data collecting in run time when it needed based on user preferences or project business logic
     */
    stopDataCollecting(): void;
    /**
     * Overloading method to have more strict typings for Adapt components
     */
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptGenericComponent, customEventData: AdaptRadarCustomEventData<AdaptRadarGenericComponentData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.PagePath, customEventData: AdaptRadarCustomEventData<AdaptRadarPagePathEventData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptNavigation, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentNavigationData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptNavigationMenu, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentNavigationMenuData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptNavigationAction, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentNavigationActionData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptNavigationAlert, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentNavigationAlertData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptNavigationHamburger, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentNavigationHamburgerData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptMenu, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentMenuData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptProfile, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentProfileData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptTabs, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentTabsData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptTabsKebabMenu, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentTabsKebabMenuData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptRxSearch, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentRxSearchData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptRxTextfield, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentRxTextfieldData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptRxTextarea, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentRxTextareaData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptRxCounter, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentRxCounterData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptRxCheckbox, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentRxCheckboxData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptRxDatetime, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentRxDateTimeData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptRxTimeSlot, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentRxTimeSlotData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptRxListSelector, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentRxListSelectorData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptRxListBuilder, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentRxListBuilderData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptRxRadiobutton, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentRxRadiobuttonData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptRxRating, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentRxRatingDefaultData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptRxRatingBinary, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentRxRatingBinaryData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptRxRatingLike, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentRxRatingLikeData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptRxRatingVoting, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentRxRatingVotingData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptRxSelect, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentRxSelectData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptRxSwitch, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentRxSwitchData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptRxFeedback, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentRxFeedbackData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders(customEventName: AdaptRadarCustomEventName.AdaptAccordion, customEventData: AdaptRadarCustomEventData<AdaptRadarComponentAccordionData>, disableEventSending?: boolean): void;
    sendCustomEventForAllProviders<T, U>(customEventName: T, customEventData: AdaptRadarCustomEventData<U>, disableEventSending?: boolean): void;
    /**
     * Method is used to send "Generic" event for all ADAPT components on Init.
     *
     * @param entityName {AdaptRadarCustomEventName} The name on the class of the component/directive
     */
    sendGenericComponentEvent(entityName: AdaptRadarCustomEventName): void;
    /**
     * Method is used to get an instance of injected provider by its name
     *
     * @param name - the name of supported provider
     *
     * @return - instance of provider by its name
     */
    getProviderByName(name: AdaptRadarSupportedProviders): AdaptRadarSupportedProvidersServices;
    subscribeOnElementIntersect(adaptRadarDisableEventSending: boolean, element: ElementRef<HTMLElement>, entityName: AdaptRadarCustomEventName): IntersectionObserver | null;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptRadarService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<AdaptRadarService>;
}
