import { AfterViewInit, ElementRef, OnDestroy } from '@angular/core';
import { AdaptRadarService } from './adapt-radar.service';
import { AdaptRadarCustomEventName } from './adapt-radar.model';
import * as i0 from "@angular/core";
export declare abstract class AdaptRadarGenericDirective implements AfterViewInit, OnDestroy {
    protected readonly _adaptRadarService: AdaptRadarService;
    protected readonly _elem: ElementRef<HTMLElement>;
    protected readonly _entityName: AdaptRadarCustomEventName;
    private _elementIntersectObserver;
    adaptRadarGroupName: string;
    adaptRadarDisableEventSending: boolean;
    constructor(_adaptRadarService: AdaptRadarService, _elem: ElementRef<HTMLElement>, _entityName: AdaptRadarCustomEventName);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private _unsubscribeFromIntersectionObserver;
    private _checkIfDisabledFromSending;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptRadarGenericDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AdaptRadarGenericDirective, never, never, { "adaptRadarGroupName": "adaptRadarGroupName"; "adaptRadarDisableEventSending": "adaptRadarDisableEventSending"; }, {}, never>;
}
