import { AdaptRadarOneTimeAction } from '../../adapt-radar.model';
export interface AdaptRadarGainsightIdentifyUserData {
    id: string;
    accountId?: string;
    city?: string;
    continent?: string;
    countryCode?: string;
    countryName?: string;
    email?: string;
    firstName?: string;
    firstVisitDate?: number;
    gender?: string;
    guidedTours?: boolean;
    lastName?: string;
    latitude?: string;
    leadDate?: number;
    longitude?: string;
    numberOfVisits?: number;
    onboardingBot?: boolean;
    phone?: string;
    postalCode?: string;
    productUpdates?: boolean;
    regionName?: string;
    role?: string;
    score?: number;
    signUpDate?: number;
    stateCode?: string;
    stateName?: string;
    street?: string;
    subscriptionId?: string;
    surveys?: boolean;
    timeZone?: string;
    jobTitle?: string;
    trackUsage?: boolean;
    customer?: string;
    CSN?: string;
    SFDC?: string;
    globalId?: string;
}
export interface AdaptRadarGainsightIdentifyAccountData {
    id: string;
    city?: string;
    continent?: string;
    countryCode?: string;
    countryName?: string;
    industry?: string;
    naicsCode?: string;
    name?: string;
    numberOfEmployees?: number;
    numberOfUsers?: number;
    numberOfVisitors?: number;
    parentGroupId?: string;
    plan?: string;
    postalCode?: string;
    regionName?: string;
    sfdcId?: string;
    sicCode?: string;
    stateCode?: string;
    stateName?: string;
    street?: string;
    timeZone?: string;
    website?: string;
    customer?: string;
    trialStatus?: boolean;
    CSN?: string;
    SFDC?: string;
}
/**
 * The list of api methods that are used by the "aptrinsic" JavaScript call are as follows with links to customer facing documentation where available:
 *
 * 'track' - https://support.gainsight.com/PX/API_for_Developers/02Usage_of_Different_APIs/Use_Custom_Event_API
 * 'identify' - https://support.gainsight.com/PX/API_for_Developers/01About/Track_your_Users_and_Accounts#The_Identify_Call
 * 'get'
 * 'users'
 * 'set' - https://support.gainsight.com/PX/API_for_Developers/02Usage_of_Different_APIs/Use_Global_Context_API
 * 'initWithExternalState'
 * 'carousel'
 * 'config' - https://support.gainsight.com/PX/API_for_Developers/02Usage_of_Different_APIs/Use_Config_API
 * 'login'
 * 'lead' - https://support.gainsight.com/PX/Install_PX/Track_Users_on_Your_Corporate_Site_Using_PX#Customizing_Lead_Tracking
 * 'account'
 * 'checklog'
 * 'event'
 * 'setOnce' - https://support.gainsight.com/PX/API_for_Developers/02Usage_of_Different_APIs/Use_Global_Context_API#Global_Context
 * 'remove' - https://support.gainsight.com/PX/API_for_Developers/02Usage_of_Different_APIs/Use_Global_Context_API#Remove
 * 'pageView' - https://support.gainsight.com/PX/API_for_Developers/02Usage_of_Different_APIs/Using_The_Page_View_API
 * 'send' - https://support.gainsight.com/PX/API_for_Developers/02Usage_of_Different_APIs/Gainsight_PX_User_Feedback_API
 * 'bot' - https://support.gainsight.com/PX/Integrations/Knowledge_Center_Integrations/Zendesk_Knowledge_Base_Integration#Add_Label_Filters_to_Zendesk_Knowledge_Base
 * 'kcb' - https://support.gainsight.com/PX/API_for_Developers/02Usage_of_Different_APIs/Work_with_Knowledge_Center_Bot_API#Knowledge_Center_Bot_API_Calls
 * 'reset' - https://support.gainsight.com/PX/API_for_Developers/01About/Work_with_Gainsight_PX_Web_SDK#Reset.2FLogout
 * 'addListener' - https://support.gainsight.com/PX/API_for_Developers/02Usage_of_Different_APIs/Javascript_Event_Listener_API
 */
export declare enum AdaptRadarGainsightEventName {
    Track = "track",
    Identify = "identify",
    Get = "get",
    Users = "users",
    Set = "set",
    SetOnce = "setOnce",
    InitWithExternalState = "initWithExternalState",
    Carousel = "carousel",
    Config = "config",
    Login = "login",
    Lead = "lead",
    Account = "account",
    Checklog = "checklog",
    Event = "event",
    Remove = "remove",
    PageView = "pageView",
    Send = "send",
    Bot = "bot",
    Kcb = "kcb",
    Reset = "reset",
    AddListener = "addListener"
}
export declare enum AdaptRadarGainsightIdentifyActionName {
    UserIdentify = "userIdentify"
}
export declare enum AdaptRadarGainsightConfigName {
    EnableTag = "enableTag"
}
export interface AdaptRadarGainsightIdentifyActionData {
    userData: AdaptRadarGainsightIdentifyUserData;
    accountData?: AdaptRadarGainsightIdentifyAccountData;
}
export declare type AdaptRadarGainsightIdentifyAction = AdaptRadarOneTimeAction<AdaptRadarGainsightIdentifyActionName.UserIdentify, AdaptRadarGainsightIdentifyActionData>;
