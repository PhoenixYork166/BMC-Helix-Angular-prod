{"version":3,"file":"bmc-ux-adapt-charts.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../libs/adapt-charts/src/common/models/chart.model.ts","../../../../libs/adapt-charts/src/common/models/stacked-chart.model.ts","../../../../libs/adapt-charts/src/common/chart-slider/chart-slider.component.ts","../../../../libs/adapt-charts/src/common/utils/chart-utils.ts","../../../../libs/adapt-charts/src/area-graph/area-graph-slider.component.ts","../../../../libs/adapt-charts/src/common/legend/chart-gradient-legend.component.ts","../../../../libs/adapt-charts/src/common/services/chart-color.service.ts","../../../../libs/adapt-charts/src/common/legend/chart-legend.component.ts","../../../../libs/adapt-charts/src/common/chart.component.html","../../../../libs/adapt-charts/src/common/chart.component.ts","../../../../libs/adapt-charts/src/common/pipes/cut-number.pipe.ts","../../../../libs/adapt-charts/src/common/utils/text-ellipsis.ts","../../../../libs/adapt-charts/src/stacked-chart/stacked-chart.component.ts","../../../../libs/adapt-charts/src/common/models/heatmap.model.ts","../../../../libs/adapt-charts/src/heatmap/heatmap.component.ts","../../../../libs/adapt-charts/src/common/models/line-graph.model.ts","../../../../libs/adapt-charts/src/line-graph/line-graph.component.html","../../../../libs/adapt-charts/src/line-graph/line-graph.component.ts","../../../../libs/adapt-charts/src/area-graph/area-graph.component.ts","../../../../libs/adapt-charts/src/common/models/pie.model.ts","../../../../libs/adapt-charts/src/pie-chart/pie-chart.component.ts","../../../../libs/adapt-charts/src/common/models/scatter-plot.model.ts","../../../../libs/adapt-charts/src/scatter-plot/scatter-plot.component.html","../../../../libs/adapt-charts/src/scatter-plot/scatter-plot.component.ts","../../../../libs/adapt-charts/src/common/models/treemap.model.ts","../../../../libs/adapt-charts/src/treemap/treemap.component.html","../../../../libs/adapt-charts/src/treemap/treemap.component.ts","../../../../libs/adapt-charts/src/common/models/flow-chart.model.ts","../../../../libs/adapt-charts/src/common/utils/text-ellipsis.directive.ts","../../../../libs/adapt-charts/src/flow-chart/flow-chart.component.html","../../../../libs/adapt-charts/src/flow-chart/flow-chart.component.ts","../../../../libs/adapt-charts/src/version/version.ts","../../../../libs/adapt-charts/src/adapt-charts.module.ts","../../../../libs/adapt-charts/src/public-api.ts","../../../../libs/adapt-charts/src/bmc-ux-adapt-charts.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import {Directive, EventEmitter, Input, Output, TemplateRef} from '@angular/core';\nimport * as d3 from 'd3';\n\n// TODO update types\nexport interface AdaptChartTooltip {\n  color: string;\n  category: string;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  xValue: any;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  yValue: any;\n}\n\n@Directive()\nexport abstract class AdaptChartAbstract {\n  @Input() backgroundColor: string;\n  @Input() width: number;\n  @Input() height: number;\n  @Input() header: AdaptChartHeader;\n  @Input() abstract legend: AdaptChartLegend;\n  @Input() suppressHeader: boolean;\n  @Input() suppressLegend: boolean;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Input() tooltip?: string | TemplateRef<any>;\n  @Input() dataBuilder: (g: AdaptSVGGroupElement, dim: AdaptChartDimensions) => void;\n  @Input() noDataText?: string;\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Output() readonly clickChart: EventEmitter<any>;\n}\n\nexport interface AdaptChartLegend {\n  columns?: number;\n  items: string[] | AdaptChartLegendState[];\n  customColors?: string[];\n  activeHover?: boolean;\n  activeClick?: boolean;\n  width?: number;\n}\n\n// @since 10.8.0\nexport interface AdaptChartGradientLegend {\n  increaseColor: string;\n  decreaseColor: string;\n  zeroColor?: string;\n  increaseText?: string;\n  decreaseText?: string;\n  zeroText?: string;\n  height?: string;\n}\n\nexport interface AdaptChartLegendState {\n  hidden: boolean;\n  hover: boolean;\n  item: string;\n}\n\nexport interface AdaptChartCategoryToggleEvent {\n  category: string;\n}\n\nexport interface AdaptChartCategoryEvent {\n  id: number;\n  event: MouseEvent;\n}\n\nexport interface AdaptChartAxis {\n  title?: string;\n  thickness?: number;\n  categories?: string[];\n}\n\nexport interface AdaptChartDimensions {\n  w: number;\n  h: number;\n}\n\nexport interface AdaptChartHeader {\n  title?: string;\n  subtitle?: string;\n  allowHideLegend?: boolean;\n}\n\nexport interface AdaptChartDataModel<T> {\n  name: string;\n  data: T[];\n}\n\nexport interface AdaptChartSeries<T> {\n  name?: string;\n  hidden?: boolean;\n  data: T[];\n}\n\nexport interface AdaptChartBoundaries {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n}\n\nexport type AdaptChartSeriesFormat = 'vertical' | 'horizontal';\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nexport type AdaptSVGGroupElement = d3.Selection<SVGGElement, any, any, any>;\n\nexport enum AdaptChartSliderType {\n  bar = 'bar',\n  line = 'line',\n  scatterplot = 'scatterplot'\n}\n","import {Directive, Input} from '@angular/core';\nimport {AdaptChartAbstract, AdaptChartAxis, AdaptChartSeries, AdaptChartSeriesFormat} from './chart.model';\n\nexport enum AdaptStackedChartType {\n  Bar = 'bar',\n  Column = 'column',\n  Area = 'area'\n}\n\nexport type AdaptStackedChartSeries = AdaptChartSeries<number>;\n\n@Directive()\nexport abstract class AdaptStackedChartAbstract<T> extends AdaptChartAbstract {\n  @Input() type: AdaptStackedChartType;\n  @Input() xAxis?: AdaptChartAxis;\n  @Input() yAxis?: AdaptChartAxis;\n  @Input() abstract series: AdaptChartSeries<T>[];\n  @Input() hideAxises?: boolean;\n  @Input() seriesDisplay: AdaptChartSeriesFormat;\n  @Input() showSlider?: boolean;\n  @Input() slidePointsCount?: number;                   // Sets the count of data portions per slide\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ReplaySubject} from 'rxjs';\nimport {SafeCdr} from '@bmc-ux/adapt-angular';\n\nimport {AdaptChartAxis, AdaptChartDimensions, AdaptChartSliderType} from '../models/chart.model';\nimport {AdaptStackedChartAbstract, AdaptStackedChartType} from '../models/stacked-chart.model';\n\nlet id = 0;\n\nconst classPrefix = 'adapt-chart-slider';\nconst sliderPaddingTop = 10;\n\n@Component({\n  selector: 'adapt-chart-slider',\n  template: `\n    <div #slider\n         [class]=\"classPrefix\"\n         [style.height.px]=\"height\"\n         (click)=\"onClickSliderArea($event)\" [style.marginLeft.px]=\"leftShift\">\n      <div class=\"{{classPrefix}}-main\">\n        <div #overlayLeft\n             class=\"{{classPrefix}}-side-overlay {{classPrefix}}-side-overlay-right\"></div>\n        <div #dnd\n             (mouseover)=\"onMouseOver()\"\n             (mouseout)=\"onMouseOut()\"\n             (mousedown)=\"onMouseDown($event)\"\n             [style.width.%]=\"100 / monitorsCount\"\n             class=\"{{classPrefix}}-spot\"\n             [ngClass]=\"isActive ? classPrefix + '-spot-active' : ''\"></div>\n        <div class=\"{{classPrefix}}-chart-zone\"\n             (keydown.arrowRight)=\"onSliderShift()\"\n             (keydown.arrowLeft)=\"onSliderShift(true)\">\n          <ng-container *ngIf=\"initComplete\" [ngSwitch]=\"type\">\n            <adapt-stacked-chart #chart\n                                 *ngSwitchCase=\"chartSliderType.bar\"\n                                 [suppressHeader]=\"true\"\n                                 [suppressLegend]=\"true\"\n                                 [renderLegend]=\"false\"\n                                 [showEmptyColIndicator]=\"false\"\n                                 [legend]=\"null\"\n                                 [hideAxises]=\"true\"\n                                 [xAxis]=\"xAxis\"\n                                 [yAxis]=\"{}\"\n                                 [series]=\"data\"\n                                 [height]=\"height - sliderPaddingTop\"\n                                 [type]=\"stackedChartType\"\n                                 [seriesDisplay]=\"stackedChart && stackedChart.seriesDisplay\"></adapt-stacked-chart>\n          </ng-container>\n        </div>\n        <div #overlay class=\"{{classPrefix}}-overlay\" [style.width.%]=\"100 / monitorsCount\"></div>\n        <div #overlayRight\n             class=\"{{classPrefix}}-side-overlay {{classPrefix}}-side-overlay-left\"></div>\n      </div>\n      <div class=\"{{classPrefix}}-line-wrapper\">\n        <div class=\"{{classPrefix}}-line\"></div>\n      </div>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AdaptChartSliderComponent implements OnInit, AfterViewInit, OnDestroy {\n  chartSliderType: typeof AdaptChartSliderType = AdaptChartSliderType;\n  stackedChartType: AdaptStackedChartType = AdaptStackedChartType.Column;\n  classPrefix: string;\n  sliderPaddingTop: number;\n  id: number;\n  isActive: boolean = false;\n  sliderSpotWidth: number = 50;\n  monitorsCount: number;\n  initComplete: boolean = false;\n\n  get overlayLeftWidth(): number {\n    const sliderLeft = this._sliderEl.nativeElement.getBoundingClientRect().left;\n    const {left} = this._dndEl.nativeElement.getBoundingClientRect();\n\n    return left - sliderLeft;\n  }\n\n  get overlayRightWidth(): number {\n    const sliderLeft = this._sliderEl.nativeElement.getBoundingClientRect().left;\n    const sliderWidth = this._sliderEl.nativeElement.getBoundingClientRect().width;\n    const {left, width} = this._dndEl.nativeElement.getBoundingClientRect();\n\n    return sliderWidth - (left - sliderLeft) - width;\n  }\n\n  @Input() type: AdaptChartSliderType;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Input() data: any[];\n  @Input() xAxis: AdaptChartAxis;\n  @Input() height: number = 45;\n  @Input() slidePointsCount: number;\n  @Input() customColors: string[];\n\n  // Cruth: should be injected, but raise an error\n  // TODO check for type improvement\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Input() stackedChart: AdaptStackedChartAbstract<any>;\n  // TODO: has to be refactored\n  @Input() leftShift: number = 0;\n\n  @Input() containerWidth: number;\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Output() readonly rangeChanged: EventEmitter<any> = new EventEmitter();\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @ViewChild('chart') private _chartComponent: any;\n  @ViewChild('slider', {static: true}) private _sliderEl: ElementRef<HTMLDivElement>;\n  @ViewChild('dnd', {static: true}) private _dndEl: ElementRef<HTMLDivElement>;\n  @ViewChild('overlay', {static: true}) private _overlayEl: ElementRef<HTMLDivElement>;\n  @ViewChild('overlayLeft', {static: true}) private _overlayLeftEl: ElementRef<HTMLDivElement>;\n  @ViewChild('overlayRight', {static: true}) private _overlayRightEl: ElementRef<HTMLDivElement>;\n\n  private _inMotion: boolean = false;\n  private _bodyMouseMoveLn: () => void;\n  private _bodyMouseUpLn: () => void;\n  private _gap: number;\n  private _startPoint: number;\n  private _endPoint: number;\n  private _categoryFilter: string[] = [];\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _dataCopy: any[];\n  private _x: number = 0;\n  private _width: number;\n  private _destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  constructor(private _elementRef: ElementRef,\n              private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    id++;\n    this.id = id;\n    this.classPrefix = classPrefix;\n    this.sliderPaddingTop = sliderPaddingTop;\n  }\n\n  ngOnInit(): void {\n    this._dataCopy = this.data.slice();\n    this._bodyMouseMoveLn = this._renderer.listen('body', 'mousemove', (e) => {\n      if (this._inMotion) {\n        const {clientX} = e;\n        const {width} = this._dndEl.nativeElement.getBoundingClientRect();\n        const sliderWidth = this._sliderEl.nativeElement.getBoundingClientRect().width;\n        let x = clientX - this._sliderEl.nativeElement.getBoundingClientRect().left - this._gap;\n\n        x = x < 0 ? 0 : x;\n        x = x > sliderWidth - width ? sliderWidth - width : x;\n\n        this._updateOverlay(x);\n      }\n    });\n    this._bodyMouseUpLn = this._renderer.listen('body', 'mouseup', (e) => {\n      const {target} = e;\n\n      if (target !== this._dndEl.nativeElement) {\n        this.isActive = false;\n      }\n\n      this._inMotion = false;\n    });\n  }\n\n  ngAfterViewInit(): void {\n    const {width} = this._sliderEl.nativeElement.getBoundingClientRect();\n    const dataLength = this._getDataLength();\n    const monitorsCount = Math.ceil(dataLength / this.slidePointsCount);\n\n    this.monitorsCount = monitorsCount;\n    this._width = width;\n    this.sliderSpotWidth = width / monitorsCount;\n    this._updateOverlay(0);\n\n    this.initComplete = true;\n    SafeCdr.detectChanges(this._changeDetectorRef);\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed$.next(true);\n    this._destroyed$.complete();\n\n    this._bodyMouseMoveLn();\n    this._bodyMouseUpLn();\n  }\n\n  onMouseDown(e: MouseEvent): void {\n    const {clientX, target} = e;\n    const {left} = (target as HTMLTextAreaElement).getBoundingClientRect();\n\n    this._gap = Math.floor(clientX - left);\n    this._inMotion = true;\n  }\n\n  onMouseOver(): void {\n    this.isActive = true;\n  }\n\n  onMouseOut(): void {\n    if (!this._inMotion) {\n      this.isActive = false;\n    }\n  }\n\n  onSliderShift(shiftBack?: boolean): void {\n    const indicatorCS = getComputedStyle(this._overlayEl.nativeElement);\n    const indicatorWidth = parseInt(indicatorCS.width, 10);\n    const indicatorLeft = parseInt(indicatorCS.left, 10);\n    const sliderWidth = parseInt(getComputedStyle(this._sliderEl.nativeElement).width, 10);\n\n    let newX;\n\n    if (shiftBack) {\n      newX = indicatorLeft - indicatorWidth;\n\n      if (newX < 0) {\n        newX = 0;\n      }\n    } else {\n      newX = indicatorLeft + indicatorWidth;\n\n      if (newX + indicatorWidth > sliderWidth) {\n        newX = sliderWidth - indicatorWidth;\n      }\n    }\n\n    this._updateOverlay(newX);\n  }\n\n  onClickSliderArea(e: MouseEvent): void {\n    if (this.isActive) {\n      return;\n    }\n\n    const {clientX} = e;\n    const {left, width} = this._sliderEl.nativeElement.getBoundingClientRect();\n    let newLeftSpotPosition = clientX - left - this.sliderSpotWidth / 2;\n\n    newLeftSpotPosition = newLeftSpotPosition < 0 ? 0 : newLeftSpotPosition;\n    newLeftSpotPosition = newLeftSpotPosition > width - this.sliderSpotWidth ? width - this.sliderSpotWidth : newLeftSpotPosition;\n\n    this._updateOverlay(newLeftSpotPosition);\n  }\n\n  updateSlider(dim: AdaptChartDimensions): void {\n    const {height} = this._sliderEl.nativeElement.getBoundingClientRect();\n\n    this._chartComponent.chartComponent.updateChart({\n      w: dim.w - this.leftShift,\n      h: height - this.sliderPaddingTop * 2\n    });\n  }\n\n  showCategory(category: string): void {\n    const categoryId = this._categoryFilter.indexOf(category);\n\n    if (categoryId !== -1) {\n      this._categoryFilter.splice(categoryId, 1);\n    }\n\n    this._updateData();\n  }\n\n  hideCategory(category: string): void {\n    this._categoryFilter.push(category);\n    this._updateData();\n  }\n\n  private _getDataLength(): number {\n    // TODO check for fix\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return this.data[0].data.length;\n  }\n\n  private _updateOverlay(x: number = this._x): void {\n    if (x !== this._x) {\n      this._x = x;\n      this._recalculateDataRange();\n    }\n\n    this._recalculateSpotPosition();\n  }\n\n  private _updateData(): void {\n    const timer = setTimeout(() => {\n      this.data = this._dataCopy.map((item) => {\n        const {name} = item;\n        let {data} = item;\n\n        if (this._categoryFilter.indexOf(name) !== -1) {\n          data = data.map(() => 0);\n        }\n\n        return {name, data};\n      });\n      clearTimeout(timer);\n    }, 250);\n  }\n\n  private _recalculateSpotPosition(): void {\n    const {width} = this._sliderEl.nativeElement.getBoundingClientRect();\n\n    const overlayRightWidth = width - this.sliderSpotWidth - this._x;\n    const overlayLeftWidth = this._x;\n\n    this._renderer.setStyle(this._dndEl.nativeElement, 'left', `${this._x * 100 / width}%`);\n    this._renderer.setStyle(this._overlayEl.nativeElement, 'left', `${this._x * 100 / width}%`);\n    this._renderer.setStyle(this._overlayLeftEl.nativeElement, 'width', `${overlayLeftWidth * 100 / width}%`);\n    this._renderer.setStyle(this._overlayRightEl.nativeElement, 'width', `${overlayRightWidth * 100 / width}%`);\n  }\n\n  private _recalculateDataRange(): void {\n    const {width} = this._sliderEl.nativeElement.getBoundingClientRect();\n    const count = this._getDataLength();\n    const wPiece = width / count;\n\n    this.sliderSpotWidth = width / this.monitorsCount;\n\n    const startPiece = Math.floor(this._x / wPiece);\n    const endPiece = Math.floor((this._x + this.sliderSpotWidth) / wPiece);\n\n    if (this._startPoint !== startPiece) {\n      this._startPoint = startPiece;\n      this._endPoint = endPiece;\n      this.rangeChanged.emit({startPiece, endPiece});\n    }\n  }\n}\n","import * as d3 from 'd3';\n\nexport function nameof<T>(key: keyof T): keyof T {\n  return key;\n}\n\n/**\n * Function allowing to 'wrap' the text from an SVG <text> element with <tspan>.\n * Based on https://github.com/mbostock/d3/issues/1642\n *\n * @example\n *   svg.append(\"g\")\n *      .attr(\"class\", \"x axis\")\n *      .attr(\"transform\", \"translate(0,\" + height + \")\")\n *      .call(xAxis)\n *      .selectAll(\".tick text\")\n *          .call(textWrap, x.rangeBand());\n *\n * @param textItems d3.Selection<Element, string, SVGGElement, string> - d3 selection for one or more <text> object\n * @param width number - global width in which the text will be word-wrapped.\n * @param paddingRightLeft number - Padding right and left between the wrapped text and the 'invisible bax' of 'width' width\n * @param paddingTopBottom number - Padding top and bottom between the wrapped text and the 'invisible bax' of 'width' width\n * @returns number[] - Number of lines created by the function, stored in a Array in case multiple <text> element are passed to the function\n */\nexport function textWrap(textItems: d3.Selection<Element, string, SVGGElement, string>, width: number, paddingRightLeft: number = 5, paddingTopBottom: number): number[] {\n  paddingTopBottom = (paddingTopBottom || 5) - 2; // Default padding (5px), remove 2 pixels because of the borders\n  const maxWidth = width; // I store the tooltip max width\n\n  width = width - (paddingRightLeft * 2); // Take the padding into account\n\n  const arrLineCreatedCount = [];\n\n  textItems.each(function (): void {\n    const text = d3.select(this);\n    const words = text.text().split(/[ \\f\\n\\r\\t\\v]+/).reverse(); // Don't cut non-breaking space (\\xA0), as well as the Unicode characters \\u00A0 \\u2028 \\u2029)\n    const lineHeight = 1.25; // Ems\n    const textAlign = text.style('text-anchor') || 'start'; // 'start' by default (start, middle, end, inherit)\n\n    let word;\n    let line = [];\n    let lineNumber = 0;\n    let x;\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    let y: any = text.attr('y');\n    let dy = parseFloat(text.attr('dy'));\n    let createdLineCount = 1; // Total line created count\n\n    // Clean the data in case <text> does not define those values\n    if (isNaN(dy)) {\n      dy = 0;\n    } // Default padding (0em) : the 'dy' attribute on the first <tspan> _must_ be identical to the 'dy' specified on the <text> element, or start at '0em' if undefined\n\n    // Offset the text position based on the text-anchor\n    const wrapTickLabels = d3.select(text.node().parentNode).classed('tick'); // Don't wrap the 'normal untranslated' <text> element and the translated <g class='tick'><text></text></g> elements the same way..\n\n    if (wrapTickLabels) {\n      switch (textAlign) {\n        case 'start':\n          x = -width / 2;\n          break;\n        case 'middle':\n          x = 0;\n          break;\n        case 'end':\n          x = 0; // width / 2;\n          break;\n        default :\n      }\n    } else { // untranslated <text> elements\n      switch (textAlign) {\n        case 'start':\n          x = paddingRightLeft;\n          break;\n        case 'middle':\n          x = maxWidth / 2;\n          break;\n        case 'end':\n          x = maxWidth - paddingRightLeft;\n          break;\n        default :\n      }\n    }\n    y = +((null === y) ? paddingTopBottom : y);\n\n    let tspan = text.text(null).append('tspan').attr('x', x).attr('y', y).attr('dy', dy + 'em');\n\n    // eslint-disable-next-line no-cond-assign\n    while (word = words.pop()) {\n      line.push(word);\n      tspan.text(line.join(' '));\n\n      if (tspan.node().getComputedTextLength() > width && line.length > 1) {\n        line.pop();\n        tspan.text(line.join(' '));\n        line = [word];\n        tspan = text.append('tspan').attr('x', x).attr('y', y).attr('dy', ++lineNumber * lineHeight + dy + 'em').text(word);\n        ++createdLineCount;\n      }\n    }\n\n    arrLineCreatedCount.push(createdLineCount); // Store the line count in the array\n  });\n\n  return arrLineCreatedCount;\n}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\n/* eslint-disable no-duplicate-imports */\nimport * as d3 from 'd3';\nimport {Axis, AxisDomain} from 'd3';\n/* eslint-enable no-duplicate-imports */\nimport {BrushBehavior} from 'd3-brush';\nimport {AdaptChartDimensions, AdaptSVGGroupElement} from '../common/models/chart.model';\nimport {ReplaySubject} from 'rxjs';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {AdaptAreaGraphData} from '../common/models/area-graph.model';\n\nconst classPrefix = 'adapt-chart-slider';\nconst sliderPaddingTop = 10; // need to be aligned with the css $slider-padding-top: 10;\n\n@Component({\n  selector: 'adapt-area-graph-slider',\n  template: `\n    <div #slider\n         [class]=\"classPrefix\"\n         [style.marginLeft.px]=\"leftShift\">\n      <adapt-area-graph #chart\n                        [xAxis]=\"xAxis\"\n                        [yAxis]=\"{}\"\n                        [legend]=\"{items: [], customColors: customColors}\"\n                        [series]=\"data\"\n                        [height]=\"height\"\n                        [disallowPadding]=\"true\"\n                        [supressAxles]=\"true\"\n                        [suppressLegend]=\"true\"></adapt-area-graph>\n\n      <svg xmlns=\"http://www.w3.org/2000/svg\" #svgBrushContainer\n           class=\"adapt-chart-slider-brush-svg\"\n           tabindex=\"-1\"\n           role=\"graphic/image\"\n           aria-describedby=\"title desc\"\n           attr.viewbox=\"0 0 {{containerWidth - leftShift}} {{height}}\"\n           [attr.width]=\"containerWidth - leftShift\"\n           [attr.height]=\"height\">\n      </svg>\n\n      <ng-container *ngIf=\"isInitialized\">\n        <div class=\"{{classPrefix}}-side-overlay {{classPrefix}}-side-overlay-right\"\n             [style.top.px]=\"sliderPaddingTop\"\n             [style.height.px]=\"height\"\n             [style.width.px]=\"getXPos()\"></div>\n\n        <div class=\"{{classPrefix}}-spot\"\n             [style.top.px]=\"sliderPaddingTop\"\n             [style.zIndex]=\"1\"\n             [style.height.px]=\"height + 5\"\n             [style.width.px]=\"brushWidth\"\n             [style.left.px]=\"getXPos()\"\n             [ngClass]=\"isActive ? classPrefix + '-spot-active' : ''\"></div>\n\n        <div class=\"{{classPrefix}}-side-overlay {{classPrefix}}-side-overlay-left\"\n             [style.top.px]=\"sliderPaddingTop\"\n             [style.height.px]=\"height\"\n             [style.left.px]=\"getXOverlayPos()\"\n             [style.width.px]=\"getRightOverlayWidth()\"></div>\n      </ng-container>\n\n      <div class=\"{{classPrefix}}-line-wrapper\">\n        <div class=\"{{classPrefix}}-line\"></div>\n      </div>\n    </div>\n  `\n})\nexport class AdaptAreaGraphSliderComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  classPrefix: string;\n  sliderPaddingTop: number;\n  isInitialized: boolean = false;\n  brushWidth: number;\n  isActive: boolean = false;\n\n  @Input() xAxis: Axis<AxisDomain>;\n  @Input() height: number = 35;\n  @Input() slidePointsCount: number;\n  @Input() customColors: string[];\n  @Input() xBrush: d3.ScaleLinear<number, number>;\n  @Input() leftShift: number = 0;\n  @Input() containerWidth: number;\n  @Input() data: AdaptAreaGraphData[];\n\n  @Output() readonly rangeChanged: EventEmitter<number[]> = new EventEmitter<number[]>();\n  @Output() readonly scrollEnd: EventEmitter<void> = new EventEmitter();\n\n  @ViewChild('svgBrushContainer') private _svgContainerEl: ElementRef<SVGElement>;\n  @ViewChild('slider') private _sliderEl: ElementRef;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @ViewChild('chart') private _chartComponent: any;\n\n  // TODO check for type improvements\n  //eslint-disable-next-line\n  private _brush: BrushBehavior<any>;\n  private _cX: number = 0;\n  private _xMinValue: number;\n  private _xMaxValue: number;\n  private _g: AdaptSVGGroupElement;\n  private _inMotion: boolean = false;\n  private _dndEl: SVGRectElement;\n  private _destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  constructor(private _ngZone: NgZone) {\n    this.classPrefix = classPrefix;\n    this.sliderPaddingTop = sliderPaddingTop;\n  }\n\n  ngOnInit(): void {\n    this._ngZone.onStable\n      .pipe(takeUntil(this._destroyed$), take(1))\n      .subscribe(() => {\n        this.isInitialized = true;\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.isInitialized && changes.slidePointsCount) {\n      this._g.select('.brush-wrp').remove();\n      this._initBrush();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this._g = <AdaptSVGGroupElement>d3.select(this._svgContainerEl.nativeElement);\n    this._xMinValue = this._chartComponent.getXMinValue(this.data);\n    this._xMaxValue = this._chartComponent.getXMaxValue(this.data);\n\n    this._renderBrushXAxis();\n    this._initBrush();\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed$.next(true);\n    this._destroyed$.complete();\n  }\n\n  getXPos(): number {\n    return parseFloat(this._dndEl.getAttribute('x')) || 0;\n  }\n\n  getXOverlayPos(): number {\n    return this.getXPos() + this.brushWidth;\n  }\n\n  getRightOverlayWidth(): number {\n    return this.containerWidth - this.leftShift - this.getXOverlayPos();\n  }\n\n  showCategory(category: string): void {\n    this._chartComponent.categoryShowHandler(category);\n  }\n\n  hideCategory(category: string): void {\n    this._chartComponent.categoryHideHandler(category);\n  }\n\n  updateSlider(dim: AdaptChartDimensions): void {\n    this.containerWidth = dim.w;\n    const {height} = this._sliderEl.nativeElement.getBoundingClientRect();\n\n    this._chartComponent._updateChart({\n      w: dim.w - this.leftShift,\n      h: height - this.sliderPaddingTop * 2\n    });\n\n    this.xBrush = d3.scaleLinear()\n      .range([0, dim.w - this.leftShift])\n      .domain([this._xMinValue, this._xMaxValue]);\n\n    const x = this._g.select('.axis--x');\n\n    x.call(this._getXAxisLineRenderer());\n\n    this._g.select('.brush-wrp').remove();\n    this._initBrush();\n  }\n\n  private _renderBrushXAxis(): void {\n    this._g\n      .append('g').attr('class', 'axis axis--x')\n      .attr('transform', `translate(0, ${this.height})`)\n      .call(this._getXAxisLineRenderer());\n  }\n\n  private _getXAxisLineRenderer(): Axis<AxisDomain> {\n    return d3.axisBottom(this.xBrush);\n  }\n\n  private _initBrush(): void {\n    // TODO check for refactoring\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const _self = this;\n\n    this._brush = d3.brushX()\n      .extent([[0, 0], [this.containerWidth - this.leftShift, this.height]])\n      .on('brush', function (): void {\n        _self._brushed();\n      })\n      .on('end.brush', function (): void {\n        _self.scrollEnd.emit();\n      });\n\n    this.brushWidth = Math.ceil(this.xBrush((this.xBrush).ticks()[this.slidePointsCount]));\n    this._initBrushHandlers();\n  }\n\n  private _initBrushHandlers(): void {\n    // TODO check for refactoring\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const _self = this;\n\n    this._g\n      .append('g').attr('class', 'brush-wrp')\n      .append('g').attr('class', 'brush')\n      .call(this._brush)\n      .call(this._brush.move, [this._cX, this._cX + this.brushWidth])\n      .call(g => g.select('.selection').attr('stroke', null).attr('fill-opacity', '0.1')\n        .on('mouseover', function (): void {\n          _self.isActive = true;\n        })\n        .on('mousedown', function (): void {\n          _self._inMotion = true;\n        })\n        .on('mouseout', function (): void {\n          if (!_self._inMotion) {\n            _self.isActive = false;\n          }\n        }))\n      .call(g => g.select('.overlay')\n        .datum({type: 'selection'})\n        .on('mousedown', function (): void { // change slider spot position on slider click\n          const [cx] = d3.mouse(this as SVGGElement);\n          const [x0, x1] = [cx - _self.brushWidth / 2, cx + _self.brushWidth / 2];\n          const [r0, r1] = _self.xBrush.range();\n\n          d3.select((this as SVGGElement).parentNode)\n            .call(_self._brush.move, x1 > r1\n              ? [r1 - _self.brushWidth, r1]\n              : x0 < r0\n                ? [r0, r0 + _self.brushWidth]\n                : [x0, x1]);\n        }));\n    // prevent resizing\n    this._g.selectAll('.brush-wrp > .brush > .handle').remove();\n    this._dndEl = this._svgContainerEl.nativeElement.querySelector('rect.selection');\n  }\n\n  private _brushed(): void {\n    this._cX = d3.event.selection[0];\n    const selection = d3.event.selection || this.xBrush.range();\n\n    this.rangeChanged.emit(selection.map((this.xBrush).invert, this.xBrush));\n    this._inMotion = false;\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {AdaptTranslateService, AdaptDeviceDetectionService, KeyValueObject} from '@bmc-ux/adapt-angular';\n\n@Component({\n  selector: 'adapt-chart-gradient-legend',\n  template: `\n    <div class=\"adapt-chart-legend adapt-chart-legend__gradient\"\n         role=\"legend\"\n         [ngStyle]=\"{'width': isMobile ? '100%' : containerWidth ? containerWidth + 'px' : '', 'height': height}\">\n      <div class=\"adapt-chart-legend__gradient-label adapt-chart-legend__gradient-label_top\"\n           [tabIndex]=\"focusable ? 0 : -1\">\n        {{increaseText}}\n      </div>\n      <div class=\"adapt-chart-legend__gradient-label adapt-chart-legend__gradient-label_middle\">\n        <span *ngIf=\"zeroText\" [tabIndex]=\"focusable ? 0 : -1\">{{zeroText}}</span>\n      </div>\n      <div class=\"adapt-chart-legend__gradient-label adapt-chart-legend__gradient-label_bottom\"\n           [tabIndex]=\"focusable ? 0 : -1\">\n        {{decreaseText}}\n      </div>\n      <div class=\"adapt-chart-legend__gradient-block\"\n           [ngStyle]=\"{'backgroundImage': 'linear-gradient(to bottom, ' + increaseColor + ', ' + zeroColor + ' 50%, ' + decreaseColor + ')'}\">\n      </div>\n    </div>\n  `\n})\nexport class ChartGradientLegendComponent implements OnInit {\n  @Input() increaseColor: string;\n  @Input() decreaseColor: string;\n  @Input() zeroColor: string;\n  @Input() increaseText: string;\n  @Input() decreaseText: string;\n  @Input() zeroText: string;\n  @Input() height: string;\n  @Input() containerWidth: number;\n  @Input() focusable: boolean = true;\n\n  get isMobile(): boolean {\n    return this._deviceDetectionService.deviceTablet() || this._deviceDetectionService.deviceMobile();\n  }\n\n  private _defaultTexts: KeyValueObject = {};\n\n  constructor(\n    private _deviceDetectionService: AdaptDeviceDetectionService,\n    private _ts: AdaptTranslateService,\n  ) {\n    this.setDefaultTexts(_ts.getCurrentLanguage());\n  }\n\n  ngOnInit(): void {\n    this.zeroColor = this.zeroColor || '#f0f0f1';\n    this.increaseText = this.increaseText || this._defaultTexts.increaseText;\n    this.decreaseText = this.decreaseText || this._defaultTexts.decreaseText;\n    // Use nullish coalescing to allow pass empty string and hide zeroText\n    this.zeroText = this.zeroText ?? this._defaultTexts.zeroText;\n    this.height = this.height || '100%';\n  }\n\n  setDefaultTexts(translation: KeyValueObject): void {\n    this._defaultTexts.increaseText = translation['adapt.chart.gradientLegend.increaseDefaultText'];\n    this._defaultTexts.decreaseText = translation['adapt.chart.gradientLegend.decreaseDefaultText'];\n    this._defaultTexts.zeroText = translation['adapt.chart.gradientLegend.zeroDefaultText'];\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {ColorType, RGBChannels} from '@bmc-ux/adapt-angular';\nimport * as d3 from 'd3';\n\nexport type ColorRange = string[];\n\nexport enum AdaptChartColorStatus {\n  Default = 0,\n  Success = 1,\n  Warning = 2,\n  Danger = 3,\n  Custom = 4 // @since 9.3.0\n}\n\nexport const STATUS_COLOR_RANGE = {\n  Default: ['#195560', '#267f91'],\n  Success: ['#408600', '#5da627'],\n  Warning: ['#FFBE00', '#FFE438'],\n  Danger: ['#E80B30', '#ff3a49'],\n  Custom: ['#0078CC', '#009AF0']\n};\n\n\nexport type ColorsPalette = 'gradient' | 'high-diff';\n\nexport abstract class ChartColorsFactory {\n\n  static getGradientColors(): string[] {\n    return [\n      '#488EE7',\n      '#1145AC',\n      '#8061C5',\n      '#7E1E85',\n      '#C94FAF',\n      '#E9345D',\n      '#EF6F70',\n      '#DD8A44',\n      '#E7B548',\n      '#D5DB51',\n      '#9DB957',\n      '#54C2C3',\n      '#89F4F4',\n      '#9CD0FB',\n      '#AAB2F5',\n      '#E6A8D7'\n    ];\n  }\n\n  static getHighDiffColors(): string[] {\n    return [\n      '#6487EA',\n      '#E9862F',\n      '#875BCB',\n      '#EFB426',\n      '#90D1FF',\n      '#FF656C',\n      '#95BC44',\n      '#D83FB4',\n      '#00C5C4',\n      '#89008A',\n      '#D3DD27',\n      '#FB025A',\n      '#0242B3',\n      '#F0A3DA',\n      '#62F7F6',\n      '#AAB0FA',\n    ];\n  }\n}\n\n@Injectable()\nexport class ChartColorService {\n  private _gradientColors: string[] = ChartColorsFactory.getGradientColors();\n  private _highDiffColorsColors: string[] = ChartColorsFactory.getHighDiffColors();\n\n\n  static getColorRange(range: ColorRange | AdaptChartColorStatus, count: number): string[] {\n    let _temp: ColorRange;\n\n    if (range instanceof Array) {\n      _temp = range;\n    } else {\n      switch (range) {\n        case (AdaptChartColorStatus.Success): {\n          _temp = STATUS_COLOR_RANGE.Success;\n          break;\n        }\n        case (AdaptChartColorStatus.Warning): {\n          _temp = STATUS_COLOR_RANGE.Warning;\n          break;\n        }\n        case (AdaptChartColorStatus.Danger): {\n          _temp = STATUS_COLOR_RANGE.Danger;\n          break;\n        }\n        default: {\n          _temp = STATUS_COLOR_RANGE.Default;\n          break;\n        }\n      }\n    }\n\n    const _range = [];\n\n    const _scale = d3\n      .scaleLinear<string>()\n      .range(_temp)\n      .domain([1, count]);\n\n    for (let i = 0; i < count; i++) {\n      _range.push(d3.color(_scale(i + 1)).hex());\n    }\n\n    return _range;\n  }\n\n  getColor(id: number, palette?: ColorsPalette): string {\n    const colors = palette === 'high-diff' ? this._highDiffColorsColors : this._gradientColors;\n    const len = colors.length - 1;\n\n    return colors[id % len];\n  }\n\n  getDarken(color: string, percent: number, type: ColorType): string {\n    const colorRGB: RGBChannels = type === ColorType.HEX ? this._parseHEX(color) : this._parseRGB(color);\n\n    Object.keys(colorRGB).forEach((colorComponentName) => {\n      colorRGB[colorComponentName] = Math.floor((1 - percent) * colorRGB[colorComponentName]);\n    });\n\n    return `#${this._decToHEX(colorRGB.r)}${this._decToHEX(colorRGB.g)}${this._decToHEX(colorRGB.b)}`;\n  }\n\n  getContrast(color: string, type: ColorType): string {\n    const channels: RGBChannels = type === ColorType.HEX ? this._parseHEX(color) : this._parseRGB(color);\n\n    // Converts the RGB color space into YIQ\n    const yiq = ((channels.r * 299) + (channels.g * 587) + (channels.b * 114)) / 1000;\n\n    return (yiq >= 128) ? '#000' : '#fff';\n  }\n\n  setColors(newColors: string[]): void {\n    this._gradientColors = newColors;\n  }\n\n  private _parseHEX(color: string): RGBChannels {\n    const colorCode = color.trim().slice(1);\n    let r;\n    let g;\n    let b;\n\n    // In case if color value passed in short variant (eg. #456 instead of #445566)\n    if (colorCode.length === 3) {\n      r = parseInt(colorCode.substring(0, 1) + colorCode.substring(0, 1), 16);\n      g = parseInt(colorCode.substring(1, 2) + colorCode.substring(1, 2), 16);\n      b = parseInt(colorCode.substring(2, 3) + colorCode.substring(2, 3), 16);\n    } else {\n      r = parseInt(colorCode.substring(0, 2), 16);\n      g = parseInt(colorCode.substring(2, 4), 16);\n      b = parseInt(colorCode.substring(4, 6), 16);\n    }\n\n    return {r, g, b};\n  }\n\n  private _parseRGB(color: string): RGBChannels {\n    const colorTrimmed = color.trim();\n    const colorCode = colorTrimmed.substring(4, colorTrimmed.length - 1).replace(/ /g, '').split(',');\n    const [r, g, b] = colorCode.map((c) => parseInt(c, 10));\n\n    return {r, g, b};\n  }\n\n  private _decToHEX(n: number): string {\n    const hex = n.toString(16);\n\n    return hex.length === 1 ? '0' + hex : hex;\n  }\n}\n","import {Component, Input, Output, EventEmitter, OnInit, HostBinding, NgZone, OnDestroy} from '@angular/core';\nimport {DomSanitizer, SafeStyle} from '@angular/platform-browser';\nimport {ListKeyManager} from '@angular/cdk/a11y';\nimport {DOWN_ARROW, ENTER, UP_ARROW, TAB, SPACE} from '@angular/cdk/keycodes';\nimport {isNull, isString} from 'lodash-es';\nimport {ReplaySubject} from 'rxjs';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {\n  AdaptDeviceDetectionService,\n  AdaptListKeyManagerItemDirective,\n  ColorType,\n  getEventKeyCode,\n  isUndefined\n} from '@bmc-ux/adapt-angular';\nimport {ChartColorService, ColorsPalette} from '../services/chart-color.service';\nimport {AdaptChartCategoryEvent, AdaptChartLegendState} from '../models/chart.model';\n\n@Component({\n  selector: 'adapt-chart-legend',\n  template: `\n    <div adaptListKeyManager\n         tabindex=\"0\"\n         class=\"adapt-chart-legend\"\n         [class.adapt-chart-legend-mobile]=\"isMobile\"\n         [ngClass]=\"{ 'adapt-chart-legend-mouse-over': isMouseOver }\"\n         [style.width]=\"isMobile ? '100%' : width + 'px'\"\n         [attr.role]=\"activeClick ? 'listbox' : 'list'\"\n         [attr.aria-multiselectable]=\"activeClick ? true : null\"\n         [attr.aria-activedescendant]=\"activeOption\"\n         (keyManagerStateChange)=\"keyManagerStateChange($event)\"\n         (keydown)=\"legendKeydownHandler($event)\"\n         (keyup.tab)=\"toggleMouseOverStatus()\"\n         (mouseenter)=\"toggleMouseOverStatus()\"\n         (mouseleave)=\"toggleMouseOverStatus()\"\n         (focus)=\"legendFocus = true\"\n         (blur)=\"legendFocus = false\">\n      <ng-container *ngIf=\"!isMobile; else mobileLegend\">\n        <div class=\"adapt-chart-legend-col\"\n             *ngFor=\"let column of columns; let colId = index; trackBy: trackByIndex\">\n          <ng-container *ngFor=\"let legend of column; let id = index; trackBy: trackByIndex\">\n            <button adaptListKeyManagerItem\n                    tabindex=\"-1\"\n                    class=\"adapt-chart-legend-item\"\n                    [class.adapt-chart-legend-item__hidden]=\"legend.hidden\"\n                    [attr.id]=\"columnSize*colId + id\"\n                    [attr.aria-checked]=\"activeClick ? !legend.hidden : null\"\n                    [attr.aria-selected]=\"activeClick ? !legend.hidden : null\"\n                    [attr.type]=\"activeClick ? 'button' : null\"\n                    [attr.role]=\"activeClick ? 'option' : 'listitem'\"\n                    (click)=\"clickLegend(columnSize*colId + id)\"\n                    (mouseenter)=\"enterLegendItem($event, columnSize*colId + id)\"\n                    (mouseleave)=\"leaveLegendItem($event, columnSize*colId + id)\"\n                    (mousemove)=\"moveLegendItem($event, columnSize*colId + id)\">\n              <span class=\"adapt-chart-legend-item-color\"\n                    [style.border-color]=\"getBorderColorById(columnSize*colId + id)\"\n                    [style.background-color]=\"getColorById(columnSize*colId + id)\"></span>\n              <span class=\"adapt-chart-legend-item-text\"\n                    [class.text-active]=\"legendFocus && (activeOption === columnSize*colId + id)\">{{legend.item}}</span>\n            </button>\n            <br/>\n          </ng-container>\n        </div>\n      </ng-container>\n\n      <ng-template #mobileLegend>\n        <button class=\"adapt-chart-legend-item\"\n                type=\"button\"\n                *ngFor=\"let category of legend; let id = index;\"\n                (click)=\"clickLegend(id)\">\n          <span class=\"adapt-chart-legend-item-color\"\n                [style.border-color]=\"getBorderColorById(id)\"\n                [style.background-color]=\"getColorById(id)\"></span>\n          <div class=\"adapt-chart-legend-item-text\">\n            <div>{{category.item}}</div>\n          </div>\n        </button>\n      </ng-template>\n    </div>\n  `,\n  styles: [`\n    :host {\n      position: relative;\n    }\n\n    .adapt-chart-legend-item {\n      background: transparent;\n      border: none;\n    }\n  `]\n})\nexport class ChartLegendComponent implements OnInit, OnDestroy {\n  static id: number = 0;\n  @HostBinding('class') @Input() mainCls: string = '';\n  @HostBinding('class.adapt-chart-legend-scrolled') isScrolled: boolean = false;\n\n  @Input() items: string[] | AdaptChartLegendState[];\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('columns') columnsCount: number = 1;\n  @Input() customColors: string[];\n  @Input() colorsPalette: ColorsPalette;\n  @Input() activeHover: boolean;\n  @Input() activeClick: boolean;\n  @Input() width: number;\n  @Input() focusable: boolean = true;\n\n  @Output() readonly categoryShow: EventEmitter<string> = new EventEmitter();\n  @Output() readonly categoryHide: EventEmitter<string> = new EventEmitter();\n  @Output() readonly categoryEnter: EventEmitter<AdaptChartCategoryEvent> = new EventEmitter();\n  @Output() readonly categoryLeave: EventEmitter<AdaptChartCategoryEvent> = new EventEmitter();\n  @Output() readonly categoryMove: EventEmitter<AdaptChartCategoryEvent> = new EventEmitter();\n\n  id: number;\n  legend: AdaptChartLegendState[] = [];\n  columns: AdaptChartLegendState[][] = [];\n  columnSize: number;\n  isMouseOver: boolean = this.isMobile;\n  activeOption: number = null;\n  legendFocus: boolean = false;\n  _listKeyManager: ListKeyManager<AdaptListKeyManagerItemDirective>;\n\n  private _destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  get isMobile(): boolean {\n    return this._deviceDetectionService.deviceTablet() || this._deviceDetectionService.deviceMobile();\n  }\n\n  constructor(private _chartColorService: ChartColorService,\n              private _deviceDetectionService: AdaptDeviceDetectionService,\n              private _sanitize: DomSanitizer,\n              private _ngZone: NgZone) {\n  }\n\n  ngOnInit(): void {\n    this.initLegend();\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed$.next(true);\n    this._destroyed$.complete();\n  }\n\n  legendKeydownHandler(event: KeyboardEvent): void {\n    switch (getEventKeyCode(event)) {\n      case DOWN_ARROW:\n      case UP_ARROW: {\n        this._listKeyManager?.onKeydown(event);\n\n        break;\n      }\n\n      case ENTER:\n      case SPACE: {\n        if (!isNull(this.activeOption)) {\n          event.preventDefault();\n\n          this.clickLegend(this.activeOption);\n        }\n\n        break;\n      }\n\n      case TAB: {\n        this.toggleMouseOverStatus();\n\n        break;\n      }\n    }\n  }\n\n  keyManagerStateChange(listKeyManager?: ListKeyManager<AdaptListKeyManagerItemDirective>): void {\n    this._listKeyManager = listKeyManager;\n\n    this._ngZone.onStable\n      .pipe(takeUntil(this._destroyed$), take(1))\n      .subscribe(() => {\n        this._listKeyManager?.setFirstItemActive();\n      });\n\n    this._listKeyManager?.change\n      .pipe(takeUntil(this._destroyed$))\n      .subscribe(() => {\n        this.activeOption = this._listKeyManager.activeItemIndex;\n      });\n\n  }\n\n  parseColumns(): void {\n    let columns = (new Array(this.columnsCount)).fill([]);\n\n    columns = columns.map((col, colId) => {\n      const start = colId * this.columnSize;\n      const items = this.legend.slice();\n      const end = start + this.columnSize;\n\n      return items.slice(start, end);\n    });\n\n    this.columns = columns;\n\n    if (!this.legend || !this.legend.length || this.legend.length !== this.items.length) {\n      this.initLegend();\n    }\n  }\n\n  getColorById(id: number): SafeStyle {\n    const defaultColor = this.customColors ? this.customColors[id] : this._chartColorService.getColor(id, this.colorsPalette);\n    const hoverColor = this._chartColorService.getDarken(defaultColor, .14, ColorType.HEX);\n    const color = this.legend[id].hover ? hoverColor : defaultColor;\n\n    return this._sanitize.bypassSecurityTrustStyle(<string>color);\n  }\n\n  getBorderColorById(id: number): SafeStyle {\n    const backgroundColor = this.customColors ? this.customColors[id] : this._chartColorService.getColor(id, this.colorsPalette);\n    const defaultBorderColor = this._chartColorService.getDarken(backgroundColor, .14, ColorType.HEX);\n    const hoverBorderColor = this._chartColorService.getDarken(backgroundColor, .24, ColorType.HEX);\n    const borderColor = this.legend[id].hover ? hoverBorderColor : defaultBorderColor;\n\n    return this._sanitize.bypassSecurityTrustStyle(borderColor);\n  }\n\n  clickLegend(id: number): void {\n    const legend = this.legend[id];\n\n    if (isNull(id) || !this.activeClick) {\n      return;\n    }\n\n    if (legend.hidden) {\n      this._showCategory(legend);\n    } else {\n      this._hideCategory(legend);\n    }\n  }\n\n  toggleMouseOverStatus(): void {\n    if (!this.activeHover) {\n      return;\n    }\n\n    if (this.isMobile) {\n      this.isMouseOver = true;\n\n      return;\n    }\n\n    this.isMouseOver = !this.isMouseOver;\n  }\n\n  enterLegendItem(event: MouseEvent, id: number): void {\n    this.activeOption = id;\n    this.legend[id].hover = true;\n    this.categoryEnter.emit({id, event});\n  }\n\n  leaveLegendItem(event: MouseEvent, id: number): void {\n    this.legend[id].hover = false;\n    this.categoryLeave.emit({id, event});\n  }\n\n  moveLegendItem(event: MouseEvent, id: number): void {\n    this.categoryMove.emit({id, event});\n  }\n\n  update(items: string[] | AdaptChartLegendState[]): void {\n    this.items = items;\n    this.legend = this._getLegend();\n    this.columnSize = Math.ceil(this.items.length / this.columnsCount);\n    this.parseColumns();\n  }\n\n  initLegend(): void {\n    if (isUndefined(this.items) || !this.items.length || isNull(this.items)) {\n      return;\n    }\n\n    this.activeHover = isUndefined(this.activeHover) ? true : this.activeHover;\n    this.activeClick = isUndefined(this.activeClick) ? true : this.activeClick;\n    this.legend = this._getLegend();\n\n    this.columnSize = Math.ceil(this.items.length / this.columnsCount);\n    this.parseColumns();\n  }\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n\n  private _getLegend(): AdaptChartLegendState[] {\n    return isString(this.items[0])\n      ? (this.items as string[]).map((item) => ({item, hidden: false, hover: false}))\n      : (this.items as AdaptChartLegendState[]).map((item) => ({item: item.item, hidden: item.hidden, hover: false}));\n  }\n\n  private _showCategory(legend: AdaptChartLegendState): void {\n    legend.hidden = false;\n\n    this.categoryShow.emit(legend.item);\n  }\n\n  private _hideCategory(legend: AdaptChartLegendState): void {\n    const visibleCount = this.legend.filter((l) => !l.hidden).length;\n\n    if (visibleCount === 1) {\n      return;\n    }\n\n    legend.hidden = true;\n\n    this.categoryHide.emit(legend.item);\n  }\n}\n","<div [style.height.px]=\"chartHeight + chartBottomPadding\">\n  <div #chartContainer\n       class=\"adapt-chart\"\n       (click)=\"clickChartArea($event)\"\n       [class.adapt-chart-mobile]=\"isMobile\"\n       [style.width.px]=\"chartWidth\"\n       [style.height.px]=\"chartHeight\">\n\n    <div class=\"adapt-chart-header\" *ngIf=\"showHeader\">\n      <h1 class=\"adapt-chart-header-title m-0\" *ngIf=\"$this.header.title\">{{$this.header.title}}</h1>\n      <button class=\"adapt-chart-context-menu-btn\"\n              role=\"button\"\n              (click)=\"toggleLegend()\"\n              *ngIf=\"$this?.header?.allowHideLegend && !isMobile && !suppressLegend\">\n      <span [class.d-icon-left-eye]=\"isLegendHidden\"\n            [class.d-icon-left-eye_closed]=\"!isLegendHidden\"></span>\n        <span>{{ isLegendHidden ? 'Show' : 'Hide' }} legend</span>\n      </button>\n    </div>\n\n    <!-- For example, can be used for breadcrumbs -->\n    <ng-container *ngTemplateOutlet=\"topSectionTemplate\"></ng-container>\n\n    <div class=\"adapt-chart-body\">\n      <div #chartArea class=\"adapt-chart-zone\" [style.width.px]=\"0\"\n           [style.backgroundColor]=\"$this.backgroundColor\">\n        <ng-content></ng-content>\n        <svg *ngIf=\"dataBuilder\"\n             xmlns=\"http://www.w3.org/2000/svg\"\n             class=\"adapt-chart-svg\"\n             tabindex=\"0\"\n             role=\"graphic/image\"\n             [attr.aria-label]=\"title || $this?.header?.title || ''\"\n             #svgContainer\n             attr.viewbox=\"0 0 {{currentSVGWidth}} {{currentSVGHeight}}\"\n             [attr.width]=\"currentSVGWidth\"\n             [attr.height]=\"currentSVGHeight ? currentSVGHeight + chartBottomPadding : currentSVGHeight\"\n             [style.transition]=\"transition\">\n          <desc id=\"desc\">{{description}}</desc>\n          <g class=\"adapt-chart-group\"\n             [attr.id]=\"chartContainerId\"\n             [attr.width]=\"currentSVGWidth\"></g>\n        </svg>\n        <div #chartSlider class=\"adapt-chart-slider-wrapper\">\n          <ng-content select=\"adapt-chart-slider\"></ng-content>\n          <ng-content select=\"adapt-area-graph-slider\"></ng-content>\n        </div>\n      </div>\n      <div *ngIf=\"gradientLegend\"\n           [style.width]=\"isMobile ? '100%' : legendWidth + 'px'\"\n           [style.transition]=\"transition\"\n           [ngClass]=\"{ 'adapt-legend-zone__hidden': !showLegend }\"\n           class=\"adapt-legend-zone\">\n        <adapt-chart-gradient-legend\n          [containerWidth]=\"legendWidth - 25\"\n          [increaseColor]=\"gradientLegend.increaseColor\"\n          [decreaseColor]=\"gradientLegend.decreaseColor\"\n          [zeroColor]=\"gradientLegend.zeroColor\"\n          [increaseText]=\"gradientLegend.increaseText\"\n          [decreaseText]=\"gradientLegend.decreaseText\"\n          [zeroText]=\"gradientLegend.zeroText\"\n          [height]=\"gradientLegend.height\"\n          [focusable]=\"showLegend\">\n        </adapt-chart-gradient-legend>\n      </div>\n      <div #legend\n           *ngIf=\"legend && renderLegend\"\n           [style.width]=\"isMobile ? '100%' : legendWidth + 'px'\"\n           [style.transition]=\"transition\"\n           [ngClass]=\"{ 'adapt-legend-zone__hidden': !showLegend }\"\n           class=\"adapt-legend-zone\">\n        <adapt-chart-legend #legendComponent\n                            [focusable]=\"showLegend\"\n                            (categoryShow)=\"categoryShow.emit($event)\"\n                            (categoryHide)=\"categoryHide.emit($event)\"\n                            (categoryEnter)=\"categoryEnter.emit($event)\"\n                            (categoryLeave)=\"categoryLeave.emit($event)\"\n                            (categoryMove)=\"categoryMove.emit($event)\"\n                            [activeHover]=\"$this?.legend?.activeHover\"\n                            [activeClick]=\"$this?.legend?.activeClick\"\n                            [customColors]=\"$this?.legend?.customColors\"\n                            [items]=\"$this?.legend?.items\"\n                            [width]=\"legendWidth - 30\"\n                            [columns]=\"$this?.legend?.columns\"\n                            [colorsPalette]=\"colorsPalette\">\n        </adapt-chart-legend>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {DomSanitizer, SafeStyle} from '@angular/platform-browser';\nimport {ComponentPortal} from '@angular/cdk/portal';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Point} from '@angular/cdk/drag-drop';\nimport {ConnectedPosition} from '@angular/cdk/overlay/position/flexible-connected-position-strategy';\nimport {asapScheduler, ReplaySubject, timer} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {isNull, isNumber, isUndefined} from 'lodash-es';\nimport * as d3 from 'd3';\n\nimport {\n  AdaptDeviceDetectionService,\n  AdaptOverlayService,\n  AdaptOverlayWithPortal,\n  AdaptTooltipComponent,\n  ANIMATION_DURATION,\n  ANIMATION_TIMING_FUNCTION,\n  getOverlayConnectedPositions,\n  SafeCdr,\n} from '@bmc-ux/adapt-angular';\n\nimport {textWrap} from './utils/chart-utils';\n\nimport {\n  AdaptChartAbstract,\n  AdaptChartAxis,\n  AdaptChartCategoryEvent,\n  AdaptChartDimensions,\n  AdaptChartGradientLegend,\n  AdaptChartHeader,\n  AdaptChartLegend,\n  AdaptChartLegendState,\n  AdaptSVGGroupElement\n} from './models/chart.model';\nimport {AdaptChartSliderComponent} from './chart-slider/chart-slider.component';\nimport {ColorsPalette} from './services/chart-color.service';\nimport {ChartLegendComponent} from './legend/chart-legend.component';\nimport {AdaptAreaGraphSliderComponent} from '../area-graph/area-graph-slider.component';\n\nlet CHART_ID = 1;\n\n@Component({\n  selector: 'adapt-chart',\n  templateUrl: './chart.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class AdaptChartComponent extends AdaptChartAbstract implements OnInit, AfterViewInit, OnDestroy {\n  // TODO update types\n  $this: AdaptChartComponent = this;\n\n  @Input() title: string;\n  @Input() description: string;\n  @Input() backgroundColor: string;\n  @Input() width: number;\n  @Input() height: number;\n  @Input() header: AdaptChartHeader;\n  @Input() legend: AdaptChartLegend;\n  /*\n  * Useful to prevent legend rendering on view(eg. on chart slider component)\n  * @since 11.4.0\n  */\n  @Input() renderLegend: boolean = true;\n  @Input() gradientLegend: AdaptChartGradientLegend;\n  @Input() suppressHeader: boolean;\n  @Input() suppressLegend: boolean;\n  @Input() tooltip: string | TemplateRef<unknown>;\n  @Input() noDataText: string;\n  @Input() dataBuilder: (g: AdaptSVGGroupElement, dim: AdaptChartDimensions) => void;\n  @Input() updateChart: (dim: AdaptChartDimensions) => void;\n  @Input() colorsPalette: ColorsPalette;\n  @Input() topSectionTemplate: TemplateRef<void>;\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Input() set data(v: any) {\n    this._data = v;\n\n    if (this._isDataExists()) {\n      this.hideTooltip();\n      this._drawChart();\n    } else {\n      this._showEmptyText = true;\n    }\n  }\n\n  @Output() readonly categoryShow: EventEmitter<string> = new EventEmitter();\n  @Output() readonly categoryHide: EventEmitter<string> = new EventEmitter();\n  @Output() readonly categoryEnter: EventEmitter<AdaptChartCategoryEvent> = new EventEmitter();\n  @Output() readonly categoryLeave: EventEmitter<AdaptChartCategoryEvent> = new EventEmitter();\n  @Output() readonly categoryMove: EventEmitter<AdaptChartCategoryEvent> = new EventEmitter();\n  @Output() readonly clickChart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  chartContainerId: string = 'chartContainer-';\n  id: number;\n  currentContainerWidth: number;\n  currentContainerHeight: number;\n  currentSVGWidth: number;\n  currentSVGHeight: number;\n  isLegendHidden: boolean = false;\n  legendWidth: number = 250;\n  defaultMaxAxisWidth: number = 150;\n\n  @ViewChild('chartContainer', {static: true}) chartContainerEl: ElementRef<HTMLDivElement>;\n  @ViewChild('chartArea', {static: true}) chartAreaEl: ElementRef<HTMLDivElement>;\n  @ViewChild('svgContainer', {static: false}) svgContainerEl: ElementRef<SVGElement>;\n  @ViewChild('legend', {static: false}) legendEl: ElementRef<HTMLDivElement>;\n  @ViewChild('legendComponent', {static: false}) legendComponent: ChartLegendComponent;\n  @ViewChild('chartSlider', {static: true}) chartSliderEl: ElementRef<HTMLDivElement>;\n\n  @ContentChild(AdaptChartSliderComponent, {static: false}) chartSliderCmp: AdaptChartSliderComponent;\n  @ContentChild(AdaptAreaGraphSliderComponent, {static: false}) areaChartSliderCmp: AdaptAreaGraphSliderComponent;\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _data: any;\n  private _emptyText: string = 'No data to show...';\n\n  get isMobile(): boolean {\n    return this._deviceDetectionService.deviceMobile() || this._deviceDetectionService.deviceTablet();\n  }\n\n  get showHeader(): boolean {\n    return !this.suppressHeader\n      && this.header\n      && this._isDataExists()\n      && (!isUndefined(this.header.title)\n        || !isUndefined(this.header.subtitle)\n        || !isUndefined(this.header.allowHideLegend));\n  }\n\n  get showLegend(): boolean {\n    return !this.isLegendHidden && !this.suppressLegend\n      && (!isUndefined(this.legend) && !isUndefined(this.legend.items) && !!this.legend.items.length\n        || !isUndefined(this.gradientLegend));\n  }\n\n  get chartWidth(): number {\n    return isUndefined(this.width) ? this.currentContainerWidth : this.width;\n  }\n\n  get chartHeight(): number {\n    return isUndefined(this.height) ? this.currentContainerHeight : this.height;\n  }\n\n  get transition(): SafeStyle {\n    return this._domSanitizer.bypassSecurityTrustStyle(`all ${ANIMATION_DURATION.fast}\n      ${ANIMATION_TIMING_FUNCTION.base.transitionIn}`);\n  }\n\n  get chartBottomPadding(): number {\n    return this._chartBottomPadding;\n  }\n\n  set chartBottomPadding(value: number) {\n    this._chartBottomPadding = value;\n  }\n\n  private _tooltipOverlayWithPortal: AdaptOverlayWithPortal<AdaptTooltipComponent>;\n  private _tooltipOverlayDefaultOffset: number = 6;\n  private _tooltipOverlayPlacements: {\n    top: ConnectedPosition;\n    bottom: ConnectedPosition;\n    left: ConnectedPosition;\n    right: ConnectedPosition;\n  };\n  private _tooltipDefaultCustomCls: string = 'adapt-chart-tooltip position-static';\n  private _showEmptyText: boolean = false;\n  private _removeClickEventListener: Function;\n  private _removeScrollEventListener: Function;\n  private _chartBottomPadding: number = 0;\n  private _destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n\n  constructor(private _deviceDetectionService: AdaptDeviceDetectionService,\n              private _directionality: Directionality,\n              private _domSanitizer: DomSanitizer,\n              private _injector: Injector,\n              private _ngZone: NgZone,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _overlayService: AdaptOverlayService) {\n    super();\n\n    const placements = getOverlayConnectedPositions(this._directionality.value, this._tooltipOverlayDefaultOffset);\n\n    this._tooltipOverlayPlacements = {\n      top: placements.top,\n      bottom: placements.bottom,\n      left: placements.left,\n      right: placements.right\n    };\n\n    this.id = CHART_ID;\n    this.chartContainerId += CHART_ID;\n    CHART_ID++;\n  }\n\n  ngOnInit(): void {\n    if (this.legend && this.legend.width) {\n      this.legendWidth = this.legend.width;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    timer(0, asapScheduler)\n      .pipe(takeUntil(this._destroyed$))\n      .subscribe(() => {\n        this.redrawChart();\n      });\n\n    if (!(this.width && this.height)) {\n      if (this._showEmptyText) {\n        this._drawEmptyText();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._removeListeners();\n    this._destroyed$.next(true);\n    this._destroyed$.complete();\n\n    this.hideTooltip();\n  }\n\n  redrawChart(): void {\n    const {width, height} = this.chartContainerEl.nativeElement.getBoundingClientRect();\n\n    if (this.header && isUndefined(this.header.allowHideLegend)) {\n      this.header.allowHideLegend = true;\n    }\n\n    if (width && this._isDataExists()) {\n      this.currentContainerWidth = width;\n      this.currentContainerHeight = height;\n      this._initChart();\n    }\n\n    SafeCdr.detectChanges(this._changeDetectorRef);\n  }\n\n  showTooltip(target: HTMLElement | Point,\n              content: string | TemplateRef<unknown>,\n              context?: unknown,\n              customCls?: string,\n              offset?: number,\n              sidePositionsFirst?: boolean): void {\n    this.hideTooltip();\n\n    this._ngZone.run(() => {\n      if (target instanceof Element) {\n        this._tooltipOverlayWithPortal = this._overlayService.openOverlayWithPortal(\n          new ComponentPortal(AdaptTooltipComponent, null, this._injector),\n          {\n            origin: target,\n            positionStrategy: 'connected',\n            scrollStrategy: 'close',\n            connectedPositions: this._getTooltipPositions(offset, sidePositionsFirst)\n          }\n        );\n      } else {\n        this._tooltipOverlayWithPortal = this._overlayService.openOverlayWithPortal(\n          new ComponentPortal(AdaptTooltipComponent, null, this._injector),\n          {\n            origin: target,\n            positionStrategy: 'float',\n            scrollStrategy: 'close'\n          }\n        );\n\n        this._tooltipOverlayWithPortal.overlayRef.updatePosition();\n      }\n\n      this._tooltipOverlayWithPortal.componentRef.instance.content = content;\n      this._tooltipOverlayWithPortal.componentRef.instance.visible = true;\n      this._tooltipOverlayWithPortal.componentRef.instance.customCls = `${this._tooltipDefaultCustomCls} ` + customCls;\n\n      if (context) {\n        this._tooltipOverlayWithPortal.componentRef.instance.context = context;\n      }\n    });\n  }\n\n  hideTooltip(): void {\n    if (this._tooltipOverlayWithPortal) {\n      this._tooltipOverlayWithPortal.destroy();\n      this._tooltipOverlayWithPortal = null;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  updateTooltip(content?: string | TemplateRef<any>, context?: any): void {\n    if (this._tooltipOverlayWithPortal) {\n      if (content) {\n        this._tooltipOverlayWithPortal.componentRef.instance.content = content;\n      }\n\n      if (context) {\n        this._tooltipOverlayWithPortal.componentRef.instance.context = context;\n      }\n\n      this._tooltipOverlayWithPortal.overlayRef.updatePosition();\n    }\n  }\n\n  toggleLegend(): void {\n    const {width} = this.chartAreaEl.nativeElement.getBoundingClientRect();\n    let dim: AdaptChartDimensions;\n\n    this.isLegendHidden = !this.isLegendHidden;\n\n\n    if (!this.isMobile) {\n      dim = {\n        w: width + (this.isLegendHidden ? this.legendWidth : -this.legendWidth),\n        h: this.currentSVGHeight\n      };\n    } else {\n      dim = {\n        w: width,\n        h: this.currentSVGHeight\n      };\n    }\n\n    this._setChartSize(true, false);\n\n    if (this.updateChart) {\n      this.updateChart(dim);\n    }\n\n    if (!isUndefined(this.chartSliderCmp)) {\n      this.chartSliderCmp.updateSlider(dim);\n    }\n\n    if (!isUndefined(this.areaChartSliderCmp)) {\n      this.areaChartSliderCmp.updateSlider(dim);\n    }\n  }\n\n  clear(): void {\n    d3.select(`#${this.chartContainerId}`).selectAll('*').remove();\n  }\n\n  clickChartArea(e: MouseEvent): void {\n    this.clickChart.emit(e);\n  }\n\n  updateLegend(items: string[] | AdaptChartLegendState[]): void {\n    if (this.renderLegend) {\n      this.legendComponent.update(items);\n    }\n  }\n\n  getGroupAndDimensions(): {\n    group: AdaptSVGGroupElement;\n    w: number;\n    h: number;\n  } {\n    const group = <AdaptSVGGroupElement>d3.select(`#${this.chartContainerId}`);\n\n    this._setChartSize();\n\n    return {\n      group,\n      w: this.currentSVGWidth,\n      h: this.currentSVGHeight\n    };\n  }\n\n  // Method creates hidden xAxis block to calculate maximum possible height.\n  // Can be helpful when axis long titles need to be rotated\n  updateChartBottomPadding(axisWidth: number, g: AdaptSVGGroupElement, xAxis: AdaptChartAxis, rotateAxis: boolean = false): void {\n    if (!rotateAxis) {\n      this.chartBottomPadding = 0;\n\n      return;\n    }\n\n    const xScale = d3.scaleBand();\n\n    xScale.range([0, axisWidth]).domain(xAxis.categories);\n    const xScaleCall = d3.axisBottom(xScale).tickSizeOuter(0).tickPadding(12);\n\n    g.select('g.fake-axis').remove();\n\n    const axisBlock = g.append('g')\n      .attr('class', 'fake-axis')\n      .attr('style', 'display: none')\n      .attr('aria-hidden', 'true')\n      .call(xScaleCall);\n\n    const textWidths = [];\n\n    axisBlock.selectAll('text').each(function (): void {\n      const text = d3.select(this);\n      const length = (text.node() as SVGTextContentElement).getComputedTextLength();\n\n      textWidths.push(length);\n    });\n\n    if (textWidths.length) {\n      // TODO: Refactor this if possible\n      // eslint-disable-next-line prefer-spread\n      const largest = Math.max.apply(Math, textWidths);\n      const diagonalHeight = largest > this.defaultMaxAxisWidth ? this.defaultMaxAxisWidth : largest;\n\n      // Because we rotate string on 45 deg, we need to calculate height by Pythagoras theorem\n      this.chartBottomPadding = Math.sqrt(Math.pow(diagonalHeight, 2) / 2);\n    } else {\n      this.chartBottomPadding = 0;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  transformAxisTitles(axisBlock: d3.Selection<d3.BaseType, any, any, any>, shouldRotate: boolean): void {\n    const axisTexts = axisBlock.selectAll('text');\n\n    axisTexts\n      .style('text-anchor', shouldRotate ? 'end' : 'middle')\n      .attr('dx', shouldRotate ? '-.8em' : '0')\n      .attr('dy', shouldRotate ? '.15em' : '9')\n      .attr('transform', shouldRotate ? 'rotate(-45)' : 'rotate(0)');\n\n    if (shouldRotate) {\n      axisTexts.call(textWrap, this.defaultMaxAxisWidth);\n    }\n  }\n\n  private _initChart(): void {\n    this._setContainerSize();\n    this._setChartSize();\n    this._drawChart();\n  }\n\n  /**\n   * This method manages the size of the main container element, dependently on\n   * which size parameters have been set\n   */\n  private _setContainerSize(): void {\n    const {width, height} = this;\n\n    this.currentContainerWidth = isUndefined(width) ? this.currentContainerWidth : width;\n    this.currentContainerHeight = isUndefined(height) ? this.currentContainerHeight : height;\n  }\n\n  private _setChartSize(recalculateWidth: boolean = true, recalculateHeight: boolean = true): void {\n    if (recalculateHeight) {\n      const height = this.chartAreaEl.nativeElement.getBoundingClientRect().height;\n      const sliderHeight = this.chartSliderEl.nativeElement.getBoundingClientRect().height;\n\n      // @TODO: For area chart slider height is 0 on init, because of that chart height recalculate incorrectly when legend toggle\n      this.currentSVGHeight = height - sliderHeight;\n    }\n\n    if (recalculateWidth) {\n      const width = this.chartContainerEl.nativeElement.getBoundingClientRect().width;\n\n      this.currentSVGWidth = width - (this.showLegend && !this.isMobile ? this.legendWidth : 0);\n    }\n  }\n\n  private _drawChart(): void {\n    if (!this.dataBuilder) {\n      return;\n    }\n    const options = this.getGroupAndDimensions();\n\n    options.group.selectAll('*').remove();\n\n    this.dataBuilder(options.group, {\n      w: options.w,\n      h: options.h\n    });\n  }\n\n  private _isDataExists(): boolean {\n    return !isUndefined(this._data) && !isNull(this._data);\n  }\n\n  private _drawEmptyText(): void {\n    const group = <AdaptSVGGroupElement>d3.select(`#${this.chartContainerId}`);\n\n    group.append('text')\n      .attr('text-anchor', 'middle')\n      .style('transform', 'translate(50%, 50%)')\n      .style('font-size', '13px')\n      .style('fill', 'currentcolor')\n      .classed('text-default', true)\n      .text(this.noDataText || this._emptyText);\n  }\n\n  private _removeListeners(): void {\n    if (this._removeClickEventListener) {\n      this._removeClickEventListener();\n    }\n\n    if (this._removeScrollEventListener) {\n      this._removeScrollEventListener();\n    }\n  }\n\n  private _getTooltipPositions(offset?: number, sidePositionsFirst?: boolean): ConnectedPosition[] {\n    if (isNumber(offset) && (offset !== this._tooltipOverlayDefaultOffset)) {\n      this._tooltipOverlayDefaultOffset = offset;\n\n      this._tooltipOverlayPlacements.top.offsetY = -this._tooltipOverlayDefaultOffset;\n      this._tooltipOverlayPlacements.bottom.offsetY = this._tooltipOverlayDefaultOffset;\n      this._tooltipOverlayPlacements.left.offsetX = -this._tooltipOverlayDefaultOffset;\n      this._tooltipOverlayPlacements.right.offsetX = this._tooltipOverlayDefaultOffset;\n    }\n\n    return sidePositionsFirst ?\n      [\n        this._tooltipOverlayPlacements.right,\n        this._tooltipOverlayPlacements.left,\n        this._tooltipOverlayPlacements.top,\n        this._tooltipOverlayPlacements.bottom\n      ] :\n      [\n        this._tooltipOverlayPlacements.top,\n        this._tooltipOverlayPlacements.bottom,\n        this._tooltipOverlayPlacements.left,\n        this._tooltipOverlayPlacements.right\n      ];\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\nabstract class NumberPrefix {\n  static readonly K: number = Math.pow(10, 3);\n  static readonly M: number = Math.pow(10, 6);\n  static readonly G: number = Math.pow(10, 9);\n  static readonly T: number = Math.pow(10, 12);\n}\n\n@Pipe({\n  name: 'cutNumber'\n})\nexport class CutNumberPipe implements PipeTransform {\n  // TODO: Double check 'fractional' argument\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  transform(value: number, fractional: number = 2): string {\n    const prefixes = Object.keys(NumberPrefix);\n    let shortValue: string;\n\n    prefixes.some((prefixCurrent, id) => {\n      const prefixPrevious = prefixes[id - 1];\n\n      if (value < NumberPrefix[prefixCurrent]) {\n        if (prefixPrevious) {\n          const t = value % NumberPrefix[prefixPrevious];\n\n          shortValue = (value / NumberPrefix[prefixPrevious]).toFixed(t ? 1 : 0) + prefixPrevious;\n        } else {\n          shortValue = Number(value.toFixed(6)).toString();\n        }\n      }\n\n      return value < NumberPrefix[prefixCurrent];\n    });\n\n    return shortValue;\n  }\n}\n","/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nexport function textEllipsis(textNode: any, text: string, ellipsisWidth: number): string {\n  let ellipsisText = '';\n  let width = ellipsisWidth;\n\n  const letters = text.split('');\n  const lettersNum = letters.length;\n\n  // Clear all children before inserting text\n  textNode.selectAll('*').remove();\n  const ellipsis = textNode.append('tspan').attr('class', 'ellipsis').text('...');\n  const tSpan = textNode.insert('tspan', ':first-child').text(letters.join(''));\n\n  if ((tSpan.node() as SVGTextContentElement).getComputedTextLength() > width && letters.length) {\n    width = ellipsisWidth - (ellipsis.node() as SVGTextContentElement).getComputedTextLength();\n  }\n\n  // Try the whole line\n  // While it's too long, and we have words left, keep removing words\n  while ((tSpan.node() as SVGTextContentElement).getComputedTextLength() > width && letters.length) {\n    letters.pop();\n    tSpan.text(letters.join(''));\n  }\n\n  if (letters.length === lettersNum) {\n    ellipsis.remove();\n    ellipsisText = tSpan.text();\n  } else {\n    ellipsisText = tSpan.text() + '...';\n  }\n\n  return ellipsisText;\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ANIMATION_DURATION, ColorType, isString, isUndefined} from '@bmc-ux/adapt-angular';\nimport {isFunction} from 'lodash-es';\nimport BigNumber from 'bignumber.js';\nimport * as d3 from 'd3';\nimport {ScaleBand, ScaleLinear, ScalePoint} from 'd3-scale';\nimport {AdaptChartSliderComponent} from '../common/chart-slider/chart-slider.component';\nimport {AdaptChartComponent} from '../common/chart.component';\nimport {\n  AdaptChartAxis,\n  AdaptChartBoundaries,\n  AdaptChartCategoryEvent,\n  AdaptChartCategoryToggleEvent,\n  AdaptChartDimensions,\n  AdaptChartHeader,\n  AdaptChartLegend,\n  AdaptChartLegendState,\n  AdaptChartSeriesFormat,\n  AdaptChartSliderType,\n  AdaptSVGGroupElement\n} from '../common/models/chart.model';\nimport {CutNumberPipe} from '../common/pipes/cut-number.pipe';\nimport {ChartColorService} from '../common/services/chart-color.service';\nimport {nameof} from '../common/utils/chart-utils';\nimport {textEllipsis} from '../common/utils/text-ellipsis';\nimport {\n  AdaptStackedChartAbstract,\n  AdaptStackedChartSeries,\n  AdaptStackedChartType\n} from '../common/models/stacked-chart.model';\n\nexport interface KeyValueNumber {\n  [key: string]: number;\n}\n\nlet chartCounter = 1;\n\ninterface TooltipListInfoData {\n  seriesData: {\n    category: string;\n    value: number;\n    color: string;\n  }[];\n  total: number;\n}\n\nconst DEFAULT_MARGIN = 10;\n\n// TODO update types\n@Component({\n  selector: 'adapt-stacked-chart',\n  template: `\n    <adapt-chart #chart\n                 [width]=\"width\"\n                 [title]=\"header?.title || 'Graph chart'\"\n                 [description]=\"header?.subtitle || 'Graph chart'\"\n                 [height]=\"height\"\n                 [header]=\"header\"\n                 [legend]=\"legend\"\n                 [renderLegend]=\"renderLegend\"\n                 [data]=\"series\"\n                 [backgroundColor]=\"backgroundColor\"\n                 [suppressHeader]=\"suppressHeader\"\n                 [suppressLegend]=\"suppressLegend\"\n                 [tooltip]=\"tooltip\"\n                 (categoryShow)=\"categoryShowHandler($event)\"\n                 (categoryHide)=\"categoryHideHandler($event)\"\n                 (categoryEnter)=\"categoryEnterHandler($event)\"\n                 (categoryLeave)=\"categoryLeaveHandler($event)\"\n                 (clickChart)=\"clickChartArea($event)\"\n                 [noDataText]=\"noDataText\"\n                 [updateChart]=\"updateChart\"\n                 [dataBuilder]=\"_dataBuilder\">\n      <adapt-chart-slider *ngIf=\"showSlider\"\n                          (rangeChanged)=\"changeDataRange($event)\"\n                          [slidePointsCount]=\"slidePointsCount\"\n                          [height]=\"sliderHeight\"\n                          [xAxis]=\"xAxis\"\n                          [data]=\"sliderData\"\n                          [containerWidth]=\"chartWidth\"\n                          [customColors]=\"legend?.customColors\"\n                          [leftShift]=\"leftShift\"\n                          [type]=\"sliderType\"\n                          [stackedChart]=\"getStackedChart()\"></adapt-chart-slider>\n    </adapt-chart>\n\n    <ng-template #tooltipTpl let-data=\"data\">\n      <div class=\"adapt-chart-tooltip-content-container\">\n        <div>\n          <span class=\"adapt-chart-tooltip-color-spot\" [style.background-color]=\"data?.color\"></span>\n          <span class=\"adapt-chart-tooltip-category\">{{ data.category }}:</span>\n          <span><b>{{ data.value }}</b></span>\n        </div>\n        <div>\n          Total:\n          <span><b>{{ data.total }}</b></span>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template #tooltipListInfoTpl let-data=\"data\">\n      <div class=\"chart-tooltip-content-container align-start\">\n        <div *ngFor=\"let d of data.seriesData\">\n          <ng-container *ngIf=\"d.value !== 0\">\n            <span class=\"adapt-chart-tooltip-color-spot\" [style.background-color]=\"d?.color\"></span>\n            <span class=\"adapt-chart-tooltip-category\">{{d.category}}:</span>\n            <span><b>{{ d.value }}</b></span>\n          </ng-container>\n        </div>\n        <hr class=\"mt-1 mb-1\">\n        <div>\n          Total:\n          <span><b>{{data.total}}</b></span>\n        </div>\n      </div>\n    </ng-template>`,\n  encapsulation: ViewEncapsulation.None,\n  providers: [CutNumberPipe]\n})\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nexport class AdaptStackedChartComponent extends AdaptStackedChartAbstract<any> implements OnInit, OnChanges {\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @ViewChild('tooltipTpl', {static: true}) tooltipTemplate: string | TemplateRef<any>;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @ViewChild('tooltipListInfoTpl', {static: true}) tooltipListInfoTemplate: string | TemplateRef<any>;\n  @ViewChild(AdaptChartComponent, {static: true}) chartComponent: AdaptChartComponent;\n  @ViewChild(AdaptChartSliderComponent, {static: false}) chartSliderComponent: AdaptChartSliderComponent;\n\n  sliderType: AdaptChartSliderType = AdaptChartSliderType.bar;\n  sliderMonitorsCount: number;\n  sliderHeight: number = 36;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  sliderData: any;\n  heightZero: number = 0;\n\n  @Input() backgroundColor: string;\n  @Input() width: number;\n  @Input() height: number;\n  @Input() header: AdaptChartHeader;\n  @Input() suppressHeader: boolean;\n  @Input() suppressLegend: boolean;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Input() tooltip: string | TemplateRef<any>;\n  @Input() dataBuilder: (g: AdaptSVGGroupElement, dim: AdaptChartDimensions) => void;\n  @Input() type: AdaptStackedChartType;\n  @Input() xAxis: AdaptChartAxis;\n  @Input() yAxis: AdaptChartAxis;\n  @Input() showSlider: boolean = false;\n  @Input() hasTotalLabels: boolean = false;\n  @Input() seriesDisplay: AdaptChartSeriesFormat;\n  @Input() totalLabelTextFormatter: (val: number | BigNumber, d: d3.SeriesPoint<KeyValueNumber>) => string | number;\n  @Input() barWidth: number;\n  @Input() slidePointsCount: number;\n  @Input() hideAxises: boolean;\n  @Input() rotateXAxis: boolean = false;\n  @Input() xAxisTickFormatResolver: (interval: string | number, index: number) => string;\n  @Input() scientificMode: boolean = false;\n  /*\n  * Useful to prevent legend rendering on view(eg. on chart slider component)\n  * @since 11.4.0\n  */\n  @Input() renderLegend: boolean = true;\n\n  /**\n   * Threshold line in a chart to help determine which data points are either below or above a significant value\n   * @since 10.11.0\n   */\n  @Input() thresholdLine: number;\n\n  @Input() showEmptyColIndicator: boolean = true;\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Output() readonly clickChart: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Output that emits each time chart category shown\n   * @since 12.11.0\n   */\n  @Output() readonly categoryShow: EventEmitter<AdaptChartCategoryToggleEvent> = new EventEmitter<AdaptChartCategoryToggleEvent>();\n\n  /**\n   * Output that emits each time chart category hidden\n   * @since 12.11.0\n   */\n  @Output() readonly categoryHide: EventEmitter<AdaptChartCategoryToggleEvent> = new EventEmitter<AdaptChartCategoryToggleEvent>();\n\n  get isHorizontalSeries(): boolean {\n    return this.seriesDisplay === 'horizontal';\n  }\n\n  @Input()\n  set series(s: AdaptStackedChartSeries[]) {\n    this.sliderData = s;\n\n    this._categoryFilter = [];\n\n    s.forEach(series => {\n      if (series.hidden) {\n        this._categoryFilter.push(series.name);\n      }\n    });\n\n    if (this.showSlider) {\n      this._series = this._getDataRange();\n    } else {\n      this._series = s;\n    }\n\n    if (this.alreadyChanged) {\n      const options = this.chartComponent.getGroupAndDimensions();\n\n      this._g = options.group;\n      this._dim = {\n        w: options.w,\n        h: options.h\n      };\n    }\n\n    if (this._g && this._dim && this.chartComponent) {\n      this.chartComponent.updateLegend(this.series.map((item) => ({\n        item: item.name,\n        hidden: !!item.hidden,\n        hover: false\n      })));\n    }\n  }\n\n  get series(): AdaptStackedChartSeries[] {\n    return this._series;\n  }\n\n  alreadyChanged: boolean = false;\n\n  @Input()\n  set legend(legend: AdaptChartLegend) {\n    this._legend = Object.assign(this._legend, legend);\n\n    if (this.alreadyChanged) {\n      this.chartComponent.redrawChart();\n    }\n  }\n\n  get legend(): AdaptChartLegend {\n    return {\n      customColors: this._legend.customColors,\n      activeHover: this._legend.activeHover,\n      activeClick: this._legend.activeClick,\n      columns: this._legend.columns,\n      width: this._legend.width,\n      items: (this.series && this.series.map((series) => ({\n        item: series.name,\n        hidden: !!series.hidden\n      })) as AdaptChartLegendState[])\n    };\n  }\n\n  get leftShift(): number {\n    return this._margin.left;\n  }\n\n  get chartWidth(): number {\n    return this.width || this.chartComponent.chartWidth;\n  }\n\n  get duration(): number {\n    return parseFloat(ANIMATION_DURATION.fast) * 1000;\n  }\n\n  private get _margin(): AdaptChartBoundaries {\n    return {\n      top: 0,\n      left:\n        !this.hideAxises && this.xAxis ?\n          (this.xAxis.thickness || this._axisXThickness) + (this.xAxis.title ? this._axisTitleThickness : 0) : 0,\n      right: 0,\n      bottom:\n        !this.hideAxises && this.yAxis ?\n          (this.yAxis.thickness || this._axisYThickness) + (this.yAxis.title ? this._axisTitleThickness : 0) : 0\n    };\n  }\n\n  private _g: AdaptSVGGroupElement;\n  private _dim: AdaptChartDimensions;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _data: any[] = [];\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _dataFull: any[] = [];\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _colors: any[] = [];\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _keys: any;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _ordinal: any;\n  private _maxTicksCount: number = 7;\n  private _totalByCol: { [categ: string]: number | BigNumber } = {};\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _highlightColor: any;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _categoryFilter: any[] = [];\n\n  // Default values of xAxis, yAxis and axisTitle thickness\n  private _axisXThickness: number = 50;\n  private _axisYThickness: number = 25;\n  private _axisTitleThickness: number = 20;\n\n  private _legend: AdaptChartLegend = {\n    columns: 2,\n    activeHover: true,\n    activeClick: true,\n    width: 250,\n    customColors: null,\n    items: []\n  };\n  private _series: AdaptStackedChartSeries[] = [];\n\n  private _startDataPiece: number = 0;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _endDataPiece: any;\n\n  private _xScale: ScaleLinear<number, number> | ScaleBand<string> | ScalePoint<string>;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _yScale: any;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _xAxisCall: any;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _yAxisCall: any;\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _bars: d3.Selection<d3.BaseType, d3.Series<KeyValueNumber, string>, SVGGElement, any>;\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _cls: any = {\n    axis: 'adapt-chart-axis',\n    axisHidden: 'adapt-chart-axis__hidden',\n    axisTitle: 'adapt-chart-axis-title',\n    axisXTitle: 'adapt-chart-axis-x-title',\n    axisYTitle: 'adapt-chart-axis-y-title',\n    barXAxis: 'bar-x-axis',\n    barYAxis: 'bar-y-axis',\n    colXAxis: 'col-x-axis',\n    colYAxis: 'col-y-axis',\n    category: 'adapt-chart-bars-category',\n    areaGroup: 'adapt-chart-area-group',\n    areaTooltipLines: 'adapt-chart-area-tooltip-lines',\n    dataRect: 'adapt-chart-data-rect',\n    totalLabelsGroup: 'total-labels-group',\n    totalLabelsGroupItem: 'total-labels-group-item',\n    totalLabelItem: 'total-label-item',\n    thresholdLineArea: 'threshold-line-area'\n  };\n\n  private readonly _emptyColIndicatorWidth: number = 22;\n  private readonly _emptyColIndicatorHeight: number = 24;\n\n  private _id: string;\n\n  constructor(private _cutNumber: CutNumberPipe,\n              private _colorService: ChartColorService) {\n    super();\n\n    this.updateChart = this.updateChart.bind(this);\n    this._dataBuilder = this._dataBuilder.bind(this);\n\n    this._id = `stacked-chart-${chartCounter++}`;\n  }\n\n  ngOnInit(): void {\n    if (this.scientificMode) {\n      BigNumber.config({EXPONENTIAL_AT: 4});\n    }\n\n    if (this.showSlider && !this.slidePointsCount) {\n      this._initSlidePointsCount();\n    }\n\n    this.alreadyChanged = true;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ((changes[nameof<AdaptStackedChartComponent>('type')]\n        || changes[nameof<AdaptStackedChartComponent>('showSlider')]\n        || changes[nameof<AdaptStackedChartComponent>('thresholdLine')]\n        || changes[nameof<AdaptStackedChartComponent>('seriesDisplay')]\n        || changes[nameof<AdaptStackedChartComponent>('hasTotalLabels')]\n        || changes[nameof<AdaptStackedChartComponent>('barWidth')]\n        || changes[nameof<AdaptStackedChartComponent>('rotateXAxis')])\n      && this.alreadyChanged && this._dim) {\n      this.chartComponent.redrawChart();\n    }\n  }\n\n  updateChart(dim?: AdaptChartDimensions): void {\n    if (dim) {\n      this._dim = dim;\n    } else {\n      dim = this._dim;\n    }\n\n    this._initData();\n    this._prepareOrdinal();\n\n    this._updateAxisX(dim);\n    this._updateAxisY(dim);\n    this._updateData();\n    this._updateThresholdLineArea();\n  }\n\n  _dataBuilder(g: AdaptSVGGroupElement, dim: AdaptChartDimensions): void {\n    this._g = g;\n    this._dim = dim;\n\n    this._clear();\n    this._initData();\n    this._prepareOrdinal();\n    this._drawAxisX(g, dim);\n    this._drawAxisY(g, dim);\n    this._drawData(g);\n    this._updateThresholdLineArea();\n  }\n\n  getStackedChart(): AdaptStackedChartComponent {\n    return this;\n  }\n\n  categoryEnterHandler(categoryEvent: AdaptChartCategoryEvent): void {\n    const categoryGroup = this._g.select(`[data-category-id='${categoryEvent.id}']`);\n    const categoryGroupColor = categoryGroup.attr('fill');\n    const hoveredColor = this._colorService.getDarken(categoryGroupColor, .15, ColorType.HEX);\n\n    this._highlightColor = categoryGroupColor;\n\n    categoryGroup.attr('fill', hoveredColor);\n  }\n\n  categoryLeaveHandler(categoryEvent: AdaptChartCategoryEvent): void {\n    const categoryGroup = this._g.select(`[data-category-id='${categoryEvent.id}']`);\n\n    categoryGroup.attr('fill', this._highlightColor);\n  }\n\n  categoryShowHandler(category: string): void {\n    const categoryId = this._categoryFilter.indexOf(category);\n\n    if (categoryId !== -1) {\n      this._categoryFilter.splice(categoryId, 1);\n    }\n\n    this.updateChart(null);\n\n    if (!isUndefined(this.chartSliderComponent)) {\n      this.chartSliderComponent.showCategory(category);\n    }\n\n    this.categoryShow.emit({category});\n  }\n\n  categoryHideHandler(category: string): void {\n    this._categoryFilter.push(category);\n    this.updateChart(null);\n\n    if (!isUndefined(this.chartSliderComponent)) {\n      this.chartSliderComponent.hideCategory(category);\n    }\n\n    this.categoryHide.emit({category});\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  clickChartArea(e: any): void {\n    const target = e.target;\n    const isRect = target.classList.contains(this._cls.dataRect);\n\n    if (isRect) {\n      const color = d3.select(target.parentNode).attr('fill');\n      const categoryId = target.parentNode.getAttribute('data-category-id');\n      const category = this.series[categoryId].name;\n      const id = target.getAttribute('data-id');\n      const value = this._data[id][category];\n      const keys = Object.keys(this._data[id]);\n      const axisCategory = this._data[id].name;\n      const nameId = keys.indexOf('name');\n\n      keys.splice(nameId, 1);\n\n      const total: number = keys.reduce((acc, c) => acc + this._data[id][c], 0);\n\n      this.clickChart.emit({\n        event: e,\n        data: this.series.filter((d) => category === d.name)[0],\n        axisCategory,\n        color,\n        categoryId: category,\n        value,\n        total\n      });\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  changeDataRange(range: any): void {\n    this._startDataPiece = range.startPiece;\n    this._endDataPiece = range.endPiece;\n\n    this._series = this._getDataRange();\n    this._totalByCol = {};\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  getFormattedSeries(data: any): TooltipListInfoData {\n\n    const formattedData = data.series.map(d => {\n      return {\n        categoryName: d.name,\n        seriesValues: Object.entries(d).filter(v => v[0] !== 'name')\n      };\n    });\n\n    const currentCategory = formattedData.find(d => d.categoryName === data.category);\n    const total = currentCategory.seriesValues.reduce((acc: number, cur: number) => acc + cur[1], 0);\n\n    currentCategory.seriesValues = currentCategory.seriesValues.map((d, i) => {\n      return {\n        category: d[0],\n        value: d[1],\n        color: this.legend.customColors ? this._getCustomColorById(i) : this._colorService.getColor(i)\n      };\n    });\n\n    return {\n      seriesData: currentCategory.seriesValues,\n      total\n    };\n  }\n\n  private _initData(): void {\n    if (this.showSlider) {\n      this._endDataPiece = this._endDataPiece || this.slidePointsCount;\n    }\n\n    const ctg = this.showSlider ? this.xAxis.categories.slice(this._startDataPiece, this._endDataPiece) : this.xAxis.categories;\n\n    this._data = [];\n    this._dataFull = [];\n\n    ctg.forEach((c, index) => {\n      const o = {\n        name: c\n      };\n\n      this.series.forEach((s) => {\n        if (this._categoryFilter.indexOf(s.name) === -1) {\n          o[s.name] = o[s.name] || 0;\n          o[s.name] += s.data[index];\n        } else {\n          o[s.name] = 0;\n        }\n      });\n\n      this._data.push(o);\n    });\n\n    this.xAxis.categories.forEach((c, index) => {\n      const o = {\n        name: c\n      };\n\n      this.sliderData.forEach((s) => {\n        if (this._categoryFilter.indexOf(s.name) === -1) {\n          o[s.name] = o[s.name] || 0;\n          o[s.name] += s.data[index];\n        } else {\n          o[s.name] = 0;\n        }\n      });\n\n      this._dataFull.push(o);\n    });\n\n    this._data.forEach((data) => {\n      const {name} = data;\n      const categories = Object.keys(data);\n\n      this._totalByCol[name] = 0;\n\n      categories.forEach((category) => {\n        if (category !== 'name') {\n          if (this.scientificMode) {\n            this._totalByCol[name] = new BigNumber(this._totalByCol[name]).plus(data[category]);\n          } else {\n            this._totalByCol[name] += data[category];\n          }\n        }\n      });\n    });\n  }\n\n  private _prepareOrdinal(): void {\n    this._keys = this.series.map((s) => s.name);\n    this._colors = [];\n    this.series.forEach((s, id) => {\n      this._colors.push(this._legend.customColors ? this._getCustomColorById(id) : this._colorService.getColor(id));\n    });\n\n    this._ordinal = d3.scaleOrdinal()\n      .range(this._colors)\n      .domain(this._keys);\n  }\n\n  private _drawAxisX(g: AdaptSVGGroupElement, dim: AdaptChartDimensions): void {\n    switch (this.type) {\n      case AdaptStackedChartType.Bar: {\n        this._drawAxisXForBar(g, dim);\n        break;\n      }\n      case AdaptStackedChartType.Column: {\n        this._drawAxisXForColumn(g, dim);\n        break;\n      }\n      case AdaptStackedChartType.Area: {\n        this._drawAxisXForArea(g, dim);\n        break;\n      }\n    }\n  }\n\n  private _drawAxisXForBar(g: AdaptSVGGroupElement, dim: AdaptChartDimensions): void {\n    const ticks = this._getTicks().reverse();\n\n    this._drawAxisTitle(g, dim, this.xAxis.title, true);\n\n    this._xScale = d3.scaleLinear();\n    this._xScale.rangeRound([dim.w - this._margin.left - this._margin.right, 0]).domain([ticks[0], 0]);\n    this._xAxisCall = d3.axisBottom(this._xScale)\n      .tickValues(ticks)\n      .tickSize(-dim.h + this._margin.top + this._margin.bottom)\n      .tickFormat((d: number, i: number) => isFunction(this.xAxisTickFormatResolver) ? this.xAxisTickFormatResolver(d, i) : this._getTickFormatForNumber(d))\n      .tickPadding(15);\n\n    g.append('g')\n      .attr('role', 'axis')\n      .attr('class', `${this._cls.axis} ${this._cls.barXAxis} ${this.hideAxises ? this._cls.axisHidden : ''}`)\n      .attr('transform', `translate(${this._margin.left}, ${dim.h - this._margin.top - this._margin.bottom})`)\n      .transition()\n      .duration(this.duration)\n      .call(this._xAxisCall);\n  }\n\n  private _drawAxisXForColumn(g: AdaptSVGGroupElement, dim: AdaptChartDimensions): void {\n    const axisWidth = dim.w - this._margin.left - this._margin.right;\n\n    setTimeout(() => {\n      const axisXTitleBlock = g.select(`.${this._cls.axisXTitle}`);\n\n      axisXTitleBlock.remove();\n      this._drawAxisTitle(g, dim, this.xAxis.title);\n    }, this.duration + 100);\n\n    this._xScale = d3.scaleBand();\n    (this._xScale as ScaleBand<string>)\n      .range([0, axisWidth])\n      .padding(0.25)\n      .domain(this.showSlider ? this.xAxis.categories.slice(this._startDataPiece, this._endDataPiece) : this.xAxis.categories);\n\n    this._xAxisCall = d3.axisBottom(this._xScale)\n      .tickFormat(isFunction(this.xAxisTickFormatResolver) ? this.xAxisTickFormatResolver : null)\n      .tickSizeOuter(0)\n      .tickPadding(12);\n\n    this.chartComponent.updateChartBottomPadding(axisWidth, this._g, this.xAxis, this.rotateXAxis);\n\n    const axisBlock = g.append('g')\n      .attr('role', 'title')\n      .attr('class', `${this._cls.axis} ${this._cls.colXAxis} ${this.hideAxises || this.rotateXAxis ? this._cls.axisHidden : ''}`)\n      .attr('transform', `translate(${this._margin.left}, ${dim.h - this._margin.bottom})`);\n\n    axisBlock\n      .call(this._xAxisCall);\n\n    if (this.rotateXAxis) {\n      setTimeout(() => {\n        this.chartComponent.transformAxisTitles(axisBlock, this.rotateXAxis);\n\n        if (!this.hideAxises) {\n          axisBlock.classed(this._cls.axisHidden, null);\n        }\n      }, this.duration);\n    }\n  }\n\n  private _drawAxisXForArea(g: AdaptSVGGroupElement, dim: AdaptChartDimensions): void {\n    const axisWidth = dim.w - this._margin.left - this._margin.right;\n\n    setTimeout(() => {\n      const axisXTitleBlock = g.select(`.${this._cls.axisXTitle}`);\n\n      axisXTitleBlock.remove();\n      this._drawAxisTitle(g, dim, this.xAxis.title);\n    }, this.duration + 100);\n\n    this._xScale = d3.scalePoint()\n      .range([0, this._dim.w - this._margin.left - this._margin.right])\n      .domain(this.xAxis.categories);\n\n    this._xAxisCall = d3.axisBottom(this._xScale)\n      .tickFormat(isFunction(this.xAxisTickFormatResolver) ? this.xAxisTickFormatResolver : null)\n      .tickSizeOuter(0)\n      .tickPadding(12);\n\n    this.chartComponent.updateChartBottomPadding(axisWidth, this._g, this.xAxis, this.rotateXAxis);\n\n    const axisBlock = g.append('g')\n      .attr('role', 'title')\n      .attr('class', `${this._cls.axis} ${this._cls.colXAxis} ${this.hideAxises || this.rotateXAxis ? this._cls.axisHidden : ''}`)\n      .attr('transform', `translate(${this._margin.left}, ${dim.h - this._margin.bottom})`);\n\n    axisBlock\n      .call(this._xAxisCall);\n\n    if (this.rotateXAxis) {\n      setTimeout(() => {\n        this.chartComponent.transformAxisTitles(axisBlock, this.rotateXAxis);\n\n        if (!this.hideAxises) {\n          axisBlock.classed(this._cls.axisHidden, null);\n        }\n      }, this.duration);\n    }\n  }\n\n  private _drawAxisY(g: AdaptSVGGroupElement, dim: AdaptChartDimensions): void {\n    switch (this.type) {\n      case AdaptStackedChartType.Bar: {\n        this._drawAxisYForBar(g, dim);\n        break;\n      }\n      case AdaptStackedChartType.Column: {\n        this._drawAxisYForColumn(g, dim);\n        break;\n      }\n      case AdaptStackedChartType.Area: {\n        this._drawAxisYForColumn(g, dim);\n        break;\n      }\n    }\n  }\n\n  private _drawAxisYForBar(g: AdaptSVGGroupElement, dim: AdaptChartDimensions): void {\n    /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n    const _self = this;\n\n    this._drawAxisTitle(g, dim, this.yAxis.title);\n\n    this._yScale = d3.scaleBand()\n      .rangeRound([0, dim.h - this._margin.top - this._margin.bottom])\n      .padding(0.25)\n      .domain(this.xAxis.categories);\n    this._yAxisCall = d3\n      .axisLeft(this._yScale)\n      .tickSizeOuter(0)\n      .tickFormat(function (d: string): string {\n          return _self._getTickFormatForString(d, this);\n        }\n      );\n\n    g.append('g')\n      .attr('role', 'axis')\n      .attr('class', `${this._cls.axis} ${this._cls.barYAxis} ${this.hideAxises ? this._cls.axisHidden : ''}`)\n      .attr('transform', `translate(${this._margin.left}, 0)`)\n      .transition()\n      .duration(this.duration)\n      .call(this._yAxisCall);\n  }\n\n  private _drawAxisYForColumn(g: AdaptSVGGroupElement, dim: AdaptChartDimensions): void {\n    const ticks = this._getTicks().reverse();\n\n    this._drawAxisTitle(g, dim, this.yAxis.title, true);\n\n    this._yScale = d3.scaleLinear()\n      .rangeRound([0, dim.h - this._margin.bottom - this._margin.top])\n      .domain([ticks[0], 0]);\n\n    this._yAxisCall = d3.axisLeft(this._yScale)\n      .tickValues(ticks)\n      .tickPadding(8)\n      .tickFormat((d: number) => this._getTickFormatForNumber(d))\n      .tickSize(-dim.w + this._margin.left + this._margin.right);\n\n    g.append('g')\n      .attr('role', 'axis')\n      .attr('class', `${this._cls.axis} ${this._cls.colYAxis} ${this.hideAxises ? this._cls.axisHidden : ''}`)\n      .attr('transform', `translate(${this._margin.left}, 0)`)\n      .transition()\n      .duration(this.duration)\n      .call(this._yAxisCall);\n  }\n\n  private _drawData(g: AdaptSVGGroupElement): void {\n    switch (this.type) {\n      case AdaptStackedChartType.Bar: {\n        this._drawDataBars(g);\n        break;\n      }\n      case AdaptStackedChartType.Column: {\n        this._drawDataColumns(g);\n        break;\n      }\n      case AdaptStackedChartType.Area: {\n        this._drawDataArea(g);\n        break;\n      }\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _drawDataBars(g: any): void {\n    let baseColor: string;\n    /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n    const _this = this;\n\n\n    this._bars = g.append('g')\n      .attr('role', 'data')\n      .selectAll('g')\n      .data(d3.stack().keys(this._keys)(this._data));\n\n    const _xScale = (this._xScale as ScaleLinear<number, number>);\n\n    this._bars\n      .enter()\n      .append('g')\n      .attr('data-category-id', (d, i) => i)\n      .attr('role', 'group')\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .attr('aria-label', function (d: any, i: number): any {\n        return _this.series[i].name;\n      })\n      .attr('class', (d, i) => `category-${i}`)\n      .attr('class', this._cls.category)\n      .attr('fill', (d) => this._ordinal(d.key))\n      .selectAll('rect')\n      .data(d => d)\n      .enter()\n      .append('rect')\n      .attr('class', this._cls.dataRect)\n      .attr('role', 'item')\n      .attr('data-id', (d, id) => id)\n      .attr('x', (d) => _xScale(d[0]) + this._margin.left + 1)\n      .attr('y', (d) => this._getBarYPosition(d.data.name))\n      .attr('width', (d) => _xScale(d[1]) - _xScale(d[0]) === 0 ? this.heightZero : _xScale(d[1]) - _xScale(d[0]))\n      .attr('height', this.barWidth ? this.barWidth : this._yScale.bandwidth())\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .on('mouseenter', function (d: any): void {\n        const {target} = d3.event;\n        const categoryId = target.parentNode.getAttribute('data-category-id');\n\n        _this.chartComponent.showTooltip(target, _this.tooltip || _this.tooltipTemplate, {\n          data: {\n            color: baseColor,\n            category: _this.series[categoryId].name,\n            value: _this._dividePoints(d[0], d[1]),\n            total: _this._totalByCol[d.data.name],\n            data: _this.series[categoryId],\n            event: d3.event\n          }\n        });\n      })\n      .on('mouseleave', function (): void {\n        const rect = d3.select(this);\n\n        _this.chartComponent.hideTooltip();\n\n        rect.attr('fill', null);\n      })\n      .on('mouseover', function (): void {\n        const self = d3.select(this);\n\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        baseColor = self.select<any>(function (): any {\n          return this.parentNode;\n        }).attr('fill');\n        const darkenColor = _this._colorService.getDarken(baseColor, .15, ColorType.HEX);\n\n        self.attr('fill', darkenColor);\n      });\n\n    if (this.showEmptyColIndicator) {\n      // check for the bar(s) with no data\n      const zeroBars: string[] = Object.keys(this._totalByCol).filter((key: string) => this._totalByCol[key] === 0);\n\n      // indicate bar with no data\n      zeroBars.forEach(bar => {\n        const colYPos: number = (this._yScale as ScaleBand<string>)(bar) - this._margin.top;\n        const yAttr = colYPos + (this._yScale as ScaleBand<string>).bandwidth() / 2 - this._emptyColIndicatorHeight / 2;\n        const xAttr = this._margin.left + DEFAULT_MARGIN;\n\n        this._drawEmptyDataIndicator(xAttr, yAttr, bar);\n      });\n    }\n\n    this._bars.exit().remove();\n  }\n\n  private _getBarYPosition(d: number): number {\n    return this.barWidth\n      ? this._yScale(d) + this._margin.top + ((this._yScale as ScaleBand<string>).bandwidth() / 2) - (this.barWidth / 2)\n      : this._yScale(d) + this._margin.top;\n  }\n\n  private _getWidthForColumn(): number {\n    return this.barWidth\n      ? this.barWidth\n      : this.isHorizontalSeries\n        ? (this._xScale as ScaleBand<string>).bandwidth() / this.series.length\n        : (this._xScale as ScaleBand<string>).bandwidth();\n  }\n\n  private _getColumnYPosForHorizontalSeries(d: d3.SeriesPoint<KeyValueNumber>): number {\n    return this._yScale(d[0] ? d[1] - d[0] : d[1]);\n  }\n\n  private _dividePoints(a: number, b: number): string {\n    return this.scientificMode\n      ? new BigNumber(b).minus(a).toString()\n      : Number((b - a).toFixed(6)).toString();\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _getColumnXPos(d: number, node: Node): any {\n    const xPos: number = (this._xScale as ScaleLinear<number, number>)(d) + this._margin.left;\n\n    if (this.isHorizontalSeries) {\n      if (this.barWidth) {\n        return xPos\n          // Based on category index calculate offset for each bar\n          + (this._getCurrentCategoryIndex(node) - (this.series.length / 2)) * this._getWidthForColumn()\n          + ((this._xScale as ScaleBand<string>).bandwidth() / 2);\n      } else {\n        return xPos + (this._getCurrentCategoryIndex(node) * this._getWidthForColumn());\n      }\n    } else {\n      return this.barWidth\n        ? xPos + ((this._xScale as ScaleBand<string>).bandwidth() / 2) - (this._getWidthForColumn() / 2)\n        : xPos;\n    }\n  }\n\n  private _getColumnYPos(d: d3.SeriesPoint<KeyValueNumber>): number {\n    return this.isHorizontalSeries ?\n      this._getColumnYPosForHorizontalSeries(d) :\n      this._yScale(d[1]);\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _setYPos(d: any): number {\n    if (this._yScale(0) - this._getColumnYPosForHorizontalSeries(d) === 0) {\n      return this._getColumnYPos(d) - this.heightZero;\n    } else {\n      return this._getColumnYPos(d);\n    }\n  }\n\n  private _setRectPositionAndScaleForColumnsType(selection: d3.Selection<SVGRectElement, d3.SeriesPoint<KeyValueNumber>, SVGGElement, d3.Series<KeyValueNumber, string>>):\n    d3.Selection<SVGRectElement, d3.SeriesPoint<KeyValueNumber>, SVGGElement, d3.Series<KeyValueNumber, string>> {\n\n    return selection\n      .attr('x', (d, i, groups) => this._getColumnXPos(d.data.name, groups[i]))\n      .attr('y', (d) => this._setYPos(d))\n      .attr('height', (d) => this.isHorizontalSeries ?\n        (this._yScale(0) - this._getColumnYPosForHorizontalSeries(d) === 0 ?\n          this.heightZero : this._yScale(0) - this._getColumnYPosForHorizontalSeries(d)) :\n        (this._yScale(d[0]) - this._yScale(d[1]) === 0) ? this.heightZero : this._yScale(d[0]) - this._yScale(d[1]))\n      .attr('width', () => this._getWidthForColumn());\n  }\n\n  private _drawDataColumns(g: AdaptSVGGroupElement): void {\n    let baseColor: string;\n    /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n    const _this = this;\n\n    this._bars = g.append('g')\n      .attr('role', 'data')\n      .selectAll('g')\n      .data(d3.stack().keys(this._keys)(this._data));\n\n    const gContainer = this._bars\n      .enter()\n      .append('g')\n      .attr('data-category-id', (d, i) => i)\n      .attr('role', 'group')\n      .attr('aria-label', (d, i) => this.series[i].name)\n      .attr('fill', (d) => this._ordinal(d.key))\n      .attr('class', this._cls.category)\n      .selectAll('rect')\n      .data(d => d)\n      .enter();\n\n    let selection = gContainer\n      .append('rect')\n      .attr('class', this._cls.dataRect)\n      .attr('role', 'item')\n      .attr('aria-label', (d) => `${d.data.name}.: ${this._dividePoints(d[0], d[1])}`)\n      .attr('data-id', (d, id) => id);\n\n    selection = this._setRectPositionAndScaleForColumnsType(selection);\n\n    if (this.showEmptyColIndicator) {\n      // check for the column(s) with no data\n      const zeroCols: string[] = Object.keys(this._totalByCol).filter((key: string) => this._totalByCol[key] === 0);\n\n      // indicate column with no data\n      zeroCols.forEach(col => {\n        const colXPos: number = (this._xScale as ScaleBand<string>)(col) + this._margin.left;\n        const xAttr = colXPos + (this._xScale as ScaleBand<string>).bandwidth() / 2 - this._emptyColIndicatorWidth / 2;\n        const yAttr = this._dim.h - this._margin.bottom - this._emptyColIndicatorHeight - DEFAULT_MARGIN;\n\n        this._drawEmptyDataIndicator(xAttr, yAttr, col);\n      });\n    }\n\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    selection.on('mouseenter', function (d: any): void {\n      const {target} = d3.event;\n      let sv = 0;\n      let i = 0;\n      const keys = Object.keys(d.data).filter(k => k !== 'name');\n\n      for (i; i < keys.length; i++) {\n        if (d[0] === sv && d[1] === sv + d.data[keys[i]]) {\n          break;\n        } else {\n          sv += d.data[keys[i]];\n        }\n      }\n\n      _this.chartComponent.showTooltip(target, _this.tooltip || _this.tooltipTemplate, {\n        data: {\n          color: baseColor,\n          category: keys[i],\n          value: _this._dividePoints(d[0], d[1]),\n          total: _this._totalByCol[d.data.name],\n          data: _this.series.filter((r) => r.name === keys[i]),\n          event: d3.event\n        }\n      });\n    })\n      .on('mouseleave', function (): void {\n        const self = d3.select(this);\n\n        _this.chartComponent.hideTooltip();\n\n        self.attr('fill', null);\n      })\n      .on('mouseover', function (): void {\n        const self = d3.select(this);\n\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        baseColor = self.select<any>(function (): any {\n          return this.parentNode;\n        }).attr('fill');\n        const darkenColor = _this._colorService.getDarken(baseColor, .15, ColorType.HEX);\n\n        self.attr('fill', darkenColor);\n      });\n\n    this._addTotalLabels(g);\n    this._bars.exit().remove();\n  }\n\n  private _drawDataArea(g: AdaptSVGGroupElement): void {\n    const series = d3.stack().keys(this._keys)(this._data);\n    const ticks = this._getTicks();\n\n    this._xScale = d3.scalePoint();\n    this._xScale\n      .range([this._margin.left + this._margin.right, this._dim.w])\n      .domain(this.xAxis.categories);\n\n    this._yScale = d3.scaleLinear();\n    this._yScale\n      .rangeRound([0, this._dim.h - this._margin.bottom - this._margin.top])\n      .domain([ticks[ticks.length - 1], 0]);\n\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    const area = d3.area<(number | { data: any })[]>()\n      .x((d, i) => (this._xScale as ScalePoint<string>)(this.xAxis.categories[i]))\n      .y0(d => this._yScale((d as number[])[0]))\n      .y1(d => this._yScale((d as number[])[1]));\n\n    g.append('g')\n      .attr('class', this._cls.areaGroup)\n      .selectAll('path')\n      .data(series)\n      .join('path')\n      .attr('data-category-id', (d, i) => i)\n      .attr('aria-label', (d, i) => this.series[i].name)\n      .attr('fill', (d) => this._ordinal(d.key))\n      .attr('class', this._cls.category)\n      .attr('d', area);\n\n\n    this._g.selectAll(`.${this._cls.areaTooltipLines}`).remove();\n    this._drawTooltipLinesForArea(g, this._dim);\n  }\n\n  private _drawTooltipLinesForArea(g: AdaptSVGGroupElement, dim: AdaptChartDimensions): void {\n    /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n    const _this = this;\n\n    const _xScale = d3.scalePoint()\n      .range([0, dim.w - this._margin.left - this._margin.right])\n      .domain(this.xAxis.categories);\n    const _xAxisCall = d3.axisBottom(_xScale)\n      .tickSize(-dim.h + this._margin.top + this._margin.bottom)\n      .tickPadding(0);\n\n    const areaBlock = g.append('g')\n      .attr('role', 'axis')\n      .attr('class', `${this._cls.colYAxis} ${this._cls.areaTooltipLines}`)\n      .attr('transform', `translate(${this._margin.left}, ${dim.h - this._margin.top - this._margin.bottom})`);\n\n    areaBlock.transition().duration(this.duration).call(_xAxisCall);\n    areaBlock.select('path').attr('opacity', 0);\n    areaBlock.selectAll('g text').remove();\n    areaBlock.selectAll('g line').attr('opacity', 0);\n\n    areaBlock\n      .selectAll('g')\n      .append('rect')\n      .attr('pointer-events', 'all')\n      .attr('width', 20)\n      .attr('height', dim.h - this._margin.top - this._margin.bottom)\n      .attr('x', -10)\n      .attr('y', -dim.h + this._margin.top + this._margin.bottom)\n      .on('mouseover', function (category: string): void {\n        const parent = d3.select(this.parentNode);\n\n        parent.select('line').attr('opacity', 1);\n\n        const {target} = d3.event;\n\n        _this.chartComponent.showTooltip(\n          target,\n          _this.tooltip || _this.tooltipListInfoTemplate,\n          {data: _this.getFormattedSeries({category, series: _this._data, event: d3.event})},\n          null,\n          null,\n          true\n        );\n      })\n      .on('mouseout', function (): void {\n        const parent = d3.select(this.parentNode);\n\n        parent.select('line').attr('opacity', 0);\n        _this.chartComponent.hideTooltip();\n      });\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _addTotalLabels(g: d3.Selection<SVGGElement, any, any, any>): void {\n    const labelsGroup = g.append('g')\n      .attr('class', this._cls.totalLabelsGroup)\n\n      .attr('opacity', this.hasTotalLabels ? '1' : '0')\n      .attr('text-anchor', 'middle');\n\n    this._createTotalLabelsGroupsItems(labelsGroup);\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _createTotalLabelsGroupsItems(labelsGroup: d3.Selection<SVGGElement, any, SVGGElement, any>): void {\n    labelsGroup\n      .selectAll(`g.${this._cls.totalLabelsGroupItem}`)\n      .data(this._getTotalLabelsData())\n      .enter()\n      .append('g')\n      .attr('class', this._cls.totalLabelsGroupItem)\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .attr('opacity', (d: any) => this._getTotalLabelGroupOpacity(d))\n      .selectAll('g')\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .data((d: any) => d)\n      .enter()\n      .append('g')\n      .attr('class', this._cls.totalLabelItem)\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .attr('transform', (d: any, i, groups) => this._getTotalLabelTransform(d, groups[i]))\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .append('text').text((d: any) => this._getTotalLabelText(d) as number | string)\n      .attr('fill', 'currentColor')\n      .exit().remove();\n  }\n\n  private _getTotalLabelGroupOpacity(d: d3.Series<{ [key: string]: number }, string>): string {\n    return (!this.isHorizontalSeries || this._categoryFilter.indexOf(d.key) === -1) ? '1' : '0';\n  }\n\n  private _getTotalLabelText(d: d3.SeriesPoint<KeyValueNumber>): string | number | BigNumber {\n    const value = this.isHorizontalSeries ? d[1] - d[0] : this._totalByCol[d.data.name];\n\n    if (this.totalLabelTextFormatter) {\n      return this.totalLabelTextFormatter(value, d);\n    }\n\n    return value;\n  }\n\n  private _getTotalLabelTransform(d: d3.SeriesPoint<KeyValueNumber>, swg: Node): string {\n    return `translate(${this._getColumnXPos(d.data.name, swg) + this._getWidthForColumn() / 2\n    }, ${this._getColumnYPos(d) - 9})`;\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _getTotalLabelsData(): any {\n    const labelsDataArr = d3.stack().keys(this._keys)(this._data);\n\n    return this.isHorizontalSeries ?\n      labelsDataArr :\n      labelsDataArr.splice(-1);\n  }\n\n  private _getCurrentCategoryIndex(group: Node): number {\n    return d3.select<d3.BaseType, d3.Series<KeyValueNumber, string>>(\n      group.parentNode as d3.BaseType).datum().index;\n  }\n\n  private _getTicks(): number[] {\n    const data = this._dataFull.map((row) => {\n      const keys = Object.keys(row)\n        .filter((key) => key !== 'name');\n\n      return this.isHorizontalSeries ?\n        Math.max(...keys.map(key => row[key]))\n        : keys.reduce((acc, value) => {\n          return acc + row[value];\n        }, 0);\n    });\n\n    let max = Math.max(...data);\n\n    if (max === 0) {\n      max = 1;\n    }\n\n    if (this.thresholdLine && this.thresholdLine > max) {\n      max = this.thresholdLine;\n    }\n\n    let currentStep = Math.pow(10, Math.floor(Math.log10(max))) / 2;\n    const step = Math.pow(10, Math.floor(Math.log10(max))) / 2;\n    let count = Math.floor(max / currentStep) + 1;\n\n    while (count >= this._maxTicksCount) {\n      currentStep += step;\n      count = Math.floor(max / currentStep) + 1;\n    }\n\n    return (new Array(count)).fill(0).map((v, id) => (id + 1) * currentStep);\n  }\n\n  private _clear(): void {\n    this.chartComponent.clear();\n    this._data = [];\n  }\n\n  private _updateData(): void {\n    switch (this.type) {\n      case AdaptStackedChartType.Bar: {\n        const _xScale = (this._xScale as ScaleLinear<number, number>);\n\n        this._g\n          .selectAll(`.${this._cls.category}`)\n          .data(d3.stack().keys(this._keys)(this._data))\n          .selectAll('rect')\n          .data(d => d)\n          .attr('y', (d) => this._yScale(d.data.name) + (this.barWidth ? Math.floor(this._yScale.bandwidth() / 2 - this.barWidth / 2) : 0) + this._margin.top)\n          .attr('height', this.barWidth || this._yScale.bandwidth())\n          .transition()\n          .duration(this.duration)\n          .attr('width', (d) => _xScale(d[1]) - _xScale(d[0]))\n          .attr('x', (d) => _xScale(d[0]) + this._margin.left + 1);\n        break;\n      }\n      case AdaptStackedChartType.Column: {\n        const selection = this._g\n          .selectAll(`.${this._cls.category}`)\n          .data(d3.stack().keys(this._keys)(this._data))\n          .selectAll('rect')\n          .data(d => d)\n          .transition()\n          .duration(this.duration);\n\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this._setRectPositionAndScaleForColumnsType(selection as any);\n\n        if (this.showEmptyColIndicator) {\n          /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n          const _self = this;\n          const emptyDataIndicatorLists = this._g.selectAll('g[class=\"tick empty-column\"]');\n\n          emptyDataIndicatorLists.each(function (): void {\n            const elem = d3.select(this);\n            const col = elem.attr('aria-column');\n\n            const colXPos: number = (_self._xScale as ScaleBand<string>)(col) + _self._margin.left;\n            const xAttr = colXPos + (_self._xScale as ScaleBand<string>).bandwidth() / 2 - _self._emptyColIndicatorWidth / 2;\n            const yAttr = _self._dim.h - _self._margin.bottom - _self._emptyColIndicatorHeight - DEFAULT_MARGIN;\n\n            elem.transition().duration(_self.duration).attr('transform', `translate(${xAttr}, ${yAttr})`);\n          });\n        }\n        break;\n      }\n      case AdaptStackedChartType.Area: {\n        this._g.selectAll(`.${this._cls.areaGroup}`).remove();\n        this._drawDataArea(this._g);\n        break;\n      }\n    }\n\n    const totalsGroup = this._g\n      .selectAll<SVGGElement, d3.SeriesPoint<KeyValueNumber>>(`.${this._cls.totalLabelsGroup}`);\n\n    totalsGroup.transition()\n      .duration(this.duration)\n      .attr('opacity', this.hasTotalLabels ? '1' : '0');\n\n    if (this.hasTotalLabels) {\n      const groupsItems = totalsGroup\n        .selectAll<SVGGElement, d3.SeriesPoint<KeyValueNumber>>(`.${this._cls.totalLabelsGroupItem}`)\n        .data(this._getTotalLabelsData());\n\n\n      groupsItems.exit().remove();\n      this._createTotalLabelsGroupsItems(totalsGroup);\n\n      groupsItems\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        .attr('opacity', (d: any) => this._getTotalLabelGroupOpacity(d))\n        .selectAll<SVGElement, d3.SeriesPoint<KeyValueNumber>>(`.${this._cls.totalLabelItem}`)\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        .data((d: any) => d)\n        .transition()\n        .duration(this.duration)\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        .attr('transform', (d: any, i, groups) => this._getTotalLabelTransform(d, groups[i]))\n        .selectAll<SVGElement, d3.SeriesPoint<KeyValueNumber>>('text')\n        .text((d) => this._getTotalLabelText(d) as number | string);\n    }\n  }\n\n  private _updateThresholdLineArea(): void {\n    let thresholdLineArea = this._g.select(`.${this._cls.thresholdLineArea}`);\n\n    if (!this.thresholdLine) {\n      thresholdLineArea.remove();\n\n      return;\n    }\n\n    if (thresholdLineArea.empty()) {\n      thresholdLineArea = this._g.append('g')\n        .attr('class', this._cls.thresholdLineArea);\n\n      thresholdLineArea.append('rect')\n        .attr('class', 'threshold-area-rect')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('fill', '#000000')\n        .attr('style', 'pointer-events: none; opacity: .1;');\n\n      const defs = thresholdLineArea.append('defs');\n\n      defs.append('marker')\n        .attr('class', 'threshold-line-marker')\n        .attr('id', `${this._id}-marker-start`)\n        .attr('viewBox', '0 0 6 8')\n        .attr('markerWidth', 6)\n        .attr('markerHeight', 8)\n        .attr('refX', 5)\n        .attr('refY', 4)\n        .attr('orient', 'auto')\n        .append('path')\n        .attr('d', 'M 0 0 L 6 4 L 0 8 z');\n\n      defs.append('marker')\n        .attr('class', 'threshold-line-marker')\n        .attr('id', `${this._id}-marker-end`)\n        .attr('viewBox', '0 0 6 8')\n        .attr('markerWidth', 6)\n        .attr('markerHeight', 8)\n        .attr('refX', 1)\n        .attr('refY', 4)\n        .attr('orient', 'auto')\n        .append('path')\n        .attr('d', 'M 0 4 L 6 0 L 6 8 z');\n\n      thresholdLineArea.append('line')\n        .attr('class', 'threshold-line')\n        .attr('stroke-width', 1)\n        .attr('marker-start', `url(#${this._id}-marker-start)`)\n        .attr('marker-end', `url(#${this._id}-marker-end)`);\n\n      thresholdLineArea.append('text')\n        .attr('class', 'threshold-line-title-background');\n\n      thresholdLineArea.append('text')\n        .attr('class', 'threshold-line-title');\n    }\n\n    const maxTick = this._getTicks().pop(); // get the max tick\n    const chartDataAreaWidth = this._dim.w - this._margin.left - this._margin.right;\n    const chartDataAreaHeight = this._dim.h - this._margin.top - this._margin.bottom;\n\n    switch (this.type) {\n      case AdaptStackedChartType.Bar: {\n        const thresholdLineAreaWidth = chartDataAreaWidth - chartDataAreaWidth / maxTick * this.thresholdLine;\n        const thresholdLineAreaLeftShift = this._margin.left + chartDataAreaWidth - thresholdLineAreaWidth;\n\n        thresholdLineArea.select('rect.threshold-area-rect')\n          .transition()\n          .duration(this.duration)\n          .attr('transform', `translate(${thresholdLineAreaLeftShift}, 0)`)\n          .attr('width', thresholdLineAreaWidth)\n          .attr('height', chartDataAreaHeight);\n\n        thresholdLineArea.select('line.threshold-line')\n          .transition()\n          .duration(this.duration)\n          .attr('x1', thresholdLineAreaLeftShift)\n          .attr('x2', thresholdLineAreaLeftShift)\n          .attr('y1', this._margin.top)\n          .attr('y2', this._margin.top + chartDataAreaHeight);\n\n        thresholdLineArea.select('text.threshold-line-title-background')\n          .transition()\n          .duration(this.duration)\n          .attr('x', thresholdLineAreaLeftShift)\n          .attr('y', this._margin.top + chartDataAreaHeight)\n          .attr('text-anchor', 'middle')\n          .attr('dy', '24')\n          .text(this.scientificMode ? new BigNumber(this.thresholdLine).toPrecision(2, 2) : this.thresholdLine);\n\n        thresholdLineArea.select('text.threshold-line-title')\n          .transition()\n          .duration(this.duration)\n          .attr('x', thresholdLineAreaLeftShift)\n          .attr('y', this._margin.top + chartDataAreaHeight)\n          .attr('text-anchor', 'middle')\n          .attr('dy', '24')\n          .text(this.scientificMode ? new BigNumber(this.thresholdLine).toPrecision(2, 2) : this.thresholdLine);\n\n        break;\n      }\n      case AdaptStackedChartType.Column:\n      case AdaptStackedChartType.Area: {\n        const thresholdLineAreaHeight = chartDataAreaHeight - chartDataAreaHeight / maxTick * this.thresholdLine;\n\n        thresholdLineArea.select('rect.threshold-area-rect')\n          .transition()\n          .duration(this.duration)\n          .attr('transform', `translate(${this._margin.left}, 0)`)\n          .attr('width', chartDataAreaWidth)\n          .attr('height', thresholdLineAreaHeight);\n\n        thresholdLineArea.select('line.threshold-line')\n          .transition()\n          .duration(this.duration)\n          .attr('x1', this._margin.left)\n          .attr('x2', this._dim.w)\n          .attr('y1', thresholdLineAreaHeight)\n          .attr('y2', thresholdLineAreaHeight);\n\n        thresholdLineArea.select('text.threshold-line-title-background')\n          .transition()\n          .duration(this.duration)\n          .attr('x', this._margin.left - 8)\n          .attr('y', thresholdLineAreaHeight)\n          .attr('text-anchor', 'end')\n          .attr('dy', '.32em')\n          .text(this.scientificMode ? new BigNumber(this.thresholdLine).toPrecision(2, 2) : this.thresholdLine);\n\n        thresholdLineArea.select('text.threshold-line-title')\n          .transition()\n          .duration(this.duration)\n          .attr('x', this._margin.left - 8)\n          .attr('y', thresholdLineAreaHeight)\n          .attr('text-anchor', 'end')\n          .attr('dy', '.32em')\n          .text(this.scientificMode ? new BigNumber(this.thresholdLine).toPrecision(2, 2) : this.thresholdLine);\n\n        break;\n      }\n    }\n\n    // If we have the same tick as the thresholdLine - remove that\n    d3.selectAll('g.tick')\n      .filter(d => d === this.thresholdLine)\n      .remove();\n  }\n\n  private _drawAxisTitle(g: AdaptSVGGroupElement, dim: AdaptChartDimensions, text: string, rotate: boolean = false): void {\n    if (!isString(text) || this.hideAxises) {\n      return;\n    }\n\n    let translate: string;\n    const axisTitle = g.append('g')\n      .attr('class', `${this._cls.axisTitle} ${(rotate ? this._cls.axisYTitle : this._cls.axisXTitle)}`)\n      .attr('role', 'title');\n\n    if (rotate) {\n      translate = `rotate(-90) translate(-${(dim.h - this._axisTitleThickness) / 2} ${this._axisTitleThickness / 2})`;\n    } else {\n      translate = `translate(${(dim.w + this._axisTitleThickness) / 2} ${dim.h + this.chartComponent.chartBottomPadding})`;\n    }\n\n    axisTitle\n      .attr('transform', translate)\n      .append('text')\n      .text(text)\n      .attr('text-anchor', 'middle')\n      .attr('transform', `translate(${(this._axisTitleThickness / (rotate ? 2 : 1))} 0)`);\n  }\n\n  private _updateAxisTitle(g: AdaptSVGGroupElement, dim: AdaptChartDimensions): void {\n    g.select(`.${this._cls.axisXTitle}`)\n      .transition()\n      .duration(this.duration)\n      .attr('transform', `translate(${(dim.w + this._axisTitleThickness) / 2} ${dim.h + this.chartComponent.chartBottomPadding})`);\n  }\n\n  /* Update X Axis */\n  private _updateAxisX(dim: AdaptChartDimensions): void {\n    switch (this.type) {\n      case AdaptStackedChartType.Bar: {\n        this._updateAxisXForBar(dim);\n        break;\n      }\n      case AdaptStackedChartType.Column: {\n        this._updateAxisXForColumn(dim);\n        break;\n      }\n      case AdaptStackedChartType.Area: {\n        this._updateAxisXForArea(dim);\n        break;\n      }\n    }\n  }\n\n  private _updateAxisXForBar(dim: AdaptChartDimensions): void {\n    const ticks = this._getTicks().reverse();\n\n    this._xScale = d3.scaleLinear();\n    this._xScale.rangeRound([dim.w - this._margin.left - this._margin.right, 0]).domain([ticks[0], 0]);\n    this._xAxisCall = d3.axisBottom(this._xScale)\n      .tickValues(ticks)\n      .tickSize(-dim.h + this._margin.top + this._margin.bottom)\n      .tickFormat((d: number, i: number) => isFunction(this.xAxisTickFormatResolver) ? this.xAxisTickFormatResolver(d, i) : this._getTickFormatForNumber(d))\n      .tickPadding(15);\n\n    this._g.select(`.${this._cls.barXAxis}`)\n      .transition()\n      .duration(this.duration)\n      .call(this._xAxisCall);\n  }\n\n  private _updateAxisXForColumn(dim: AdaptChartDimensions): void {\n    this._xScale = d3.scaleBand();\n    (this._xScale as ScaleBand<string>)\n      .range([0, dim.w - this._margin.left - this._margin.right])\n      .padding(0.25)\n      .domain(this.showSlider ? this.xAxis.categories.slice(this._startDataPiece, this._endDataPiece) : this.xAxis.categories);\n\n    this._xAxisCall = d3.axisBottom(this._xScale)\n      .tickFormat(isFunction(this.xAxisTickFormatResolver) ? this.xAxisTickFormatResolver : null)\n      .tickSizeOuter(0)\n      .tickPadding(12);\n\n    this.chartComponent.updateChartBottomPadding(dim.w - this._margin.left - this._margin.right, this._g, this.xAxis, this.rotateXAxis);\n\n    const axisBlock = this._g.select(`.${this._cls.colXAxis}`)\n      .attr('class', `${this._cls.axis} ${this._cls.colXAxis} ${this.hideAxises || this.rotateXAxis ? this._cls.axisHidden : ''}`);\n\n    axisBlock\n      .transition()\n      .duration(this.duration)\n      .call(this._xAxisCall);\n\n    setTimeout(() => {\n      this.chartComponent.transformAxisTitles(axisBlock, this.rotateXAxis);\n\n      if (!this.hideAxises) {\n        axisBlock.classed(this._cls.axisHidden, null);\n      }\n    }, this.rotateXAxis ? this.duration + 100 : 0);\n\n    this._updateAxisTitle(this._g, dim);\n  }\n\n  private _updateAxisXForArea(dim: AdaptChartDimensions): void {\n    this._xScale = d3.scalePoint();\n    (this._xScale as ScalePoint<string>)\n      .range([0, dim.w - this._margin.left - this._margin.right])\n      .domain(this.showSlider ? this.xAxis.categories.slice(this._startDataPiece, this._endDataPiece) : this.xAxis.categories);\n\n    this._xAxisCall = d3.axisBottom(this._xScale)\n      .tickFormat(isFunction(this.xAxisTickFormatResolver) ? this.xAxisTickFormatResolver : null)\n      .tickSizeOuter(0)\n      .tickPadding(12);\n\n    this.chartComponent.updateChartBottomPadding(dim.w - this._margin.left - this._margin.right, this._g, this.xAxis, this.rotateXAxis);\n\n    const axisBlock = this._g.select(`.${this._cls.colXAxis}`)\n      .attr('class', `${this._cls.axis} ${this._cls.colXAxis} ${this.hideAxises || this.rotateXAxis ? this._cls.axisHidden : ''}`);\n\n    axisBlock\n      .transition()\n      .duration(this.duration)\n      .call(this._xAxisCall);\n\n    setTimeout(() => {\n      this.chartComponent.transformAxisTitles(axisBlock, this.rotateXAxis);\n\n      if (!this.hideAxises) {\n        axisBlock.classed(this._cls.axisHidden, null);\n      }\n    }, this.rotateXAxis ? this.duration + 100 : 0);\n\n    this._updateAxisTitle(this._g, dim);\n  }\n\n  /* Update Y Axis */\n  private _updateAxisY(dim: AdaptChartDimensions): void {\n    switch (this.type) {\n      case AdaptStackedChartType.Bar: {\n        this._updateAxisYForBar(dim);\n        break;\n      }\n      case AdaptStackedChartType.Column: {\n        this._updateAxisYForColumn(dim);\n        break;\n      }\n      case AdaptStackedChartType.Area: {\n        this._updateAxisYForColumn(dim);\n        break;\n      }\n    }\n  }\n\n  private _updateAxisYForBar(dim: AdaptChartDimensions): void {\n    /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n    const _self = this;\n\n    this._yScale = d3.scaleBand()\n      .rangeRound([0, dim.h - this._margin.top - this._margin.bottom])\n      .padding(0.25)\n      .domain(this.xAxis.categories);\n    this._yAxisCall = d3\n      .axisLeft(this._yScale)\n      .tickSizeOuter(0)\n      .tickFormat(function (d: string): string {\n          return _self._getTickFormatForString(d, this);\n        }\n      );\n\n    this._g.select(`.${this._cls.barYAxis}`)\n      .transition()\n      .duration(this.duration)\n      .call(this._yAxisCall);\n  }\n\n  private _updateAxisYForColumn(dim: AdaptChartDimensions): void {\n    const ticks = this._getTicks().reverse();\n\n    this._yScale = d3.scaleLinear()\n      .rangeRound([0, dim.h - this._margin.bottom - this._margin.top])\n      .domain([ticks[0], 0]);\n\n    this._yAxisCall = d3.axisLeft(this._yScale)\n      .tickValues(ticks)\n      .tickFormat((d: number) => this._getTickFormatForNumber(d))\n      .tickSize(-dim.w + this._margin.left + this._margin.right);\n\n    this._g.select(`.${this._cls.colYAxis}`)\n      .transition()\n      .duration(this.duration)\n      .call(this._yAxisCall);\n  }\n\n  private _getCustomColorById(id: number): string {\n    const customColors = this._legend.customColors;\n    const len = customColors.length;\n    const index = id % len;\n\n    return customColors[index];\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _getDataRange(): any {\n    return this.sliderData.map((item) => {\n      const {name, hidden} = item;\n      let {data} = item;\n\n      data = data.slice(this._startDataPiece, this._endDataPiece);\n\n      return {name, data, hidden};\n    });\n  }\n\n  private _getDataLength(): number {\n    return this._series[0].data.length;\n  }\n\n  private _initSlidePointsCount(): void {\n    const dataLength = this._getDataLength();\n\n    if (dataLength < 12) {\n      this.slidePointsCount = 4;\n    } else if (dataLength >= 12 && dataLength < 36) {\n      this.slidePointsCount = 6;\n    } else {\n      this.slidePointsCount = 12;\n    }\n\n    this.sliderMonitorsCount = Math.ceil(dataLength / this.slidePointsCount);\n  }\n\n  /* empty data indicator */\n  private _drawEmptyDataIndicator(x: number, y: number, column: string): void {\n    const emptyGroupInfo = this._g.select('g[role=\"data\"]')\n      .append('g')\n      .attr('role', 'group')\n      .attr('class', 'tick empty-column')\n      .attr('aria-label', 'empty column')\n      .attr('aria-column', column)\n      .attr('transform', `translate(${x}, ${y})`);\n\n    emptyGroupInfo.append('rect')\n      .attr('role', 'item')\n      .attr('width', this._emptyColIndicatorWidth)\n      .attr('height', this._emptyColIndicatorHeight)\n      .attr('rx', 2);\n    emptyGroupInfo.append('text')\n      .attr('x', this._emptyColIndicatorWidth / 2)\n      .attr('y', this._emptyColIndicatorHeight / 2)\n      .attr('alignment-baseline', 'middle')\n      .attr('text-anchor', 'middle')\n      .attr('dy', '.1rem')\n      .text('0');\n  }\n\n  private _getTickFormatForNumber(d: number): string {\n    return this.scientificMode\n      ? new BigNumber(d).toPrecision(2, 2)\n      : this._cutNumber.transform(d, 0);\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _getTickFormatForString(d: string, _this: any): string {\n    const tickNode = d3.select(_this);\n    const ellipsisText = textEllipsis(tickNode, d, this.xAxis ? (this.xAxis.thickness || this._axisXThickness) : 0);\n\n    if (ellipsisText !== d) {\n      tickNode\n        .on('mouseenter', () => {\n          const {target} = d3.event;\n\n          this.chartComponent.showTooltip(target, d);\n        })\n        .on('mouseleave', () => {\n          this.chartComponent.hideTooltip();\n        });\n    }\n\n    return ellipsisText;\n  }\n}\n","import {Directive, Input} from '@angular/core';\nimport {AdaptChartAbstract, AdaptChartAxis} from './chart.model';\n\n@Directive()\nexport abstract class AdaptHeatmapAbstract<T> extends AdaptChartAbstract {\n  @Input() data: AdaptHeatmapData<T>;\n  @Input() xAxis: AdaptChartAxis;\n  @Input() yAxis: AdaptChartAxis;\n}\n\nexport interface AdaptHeatmapData<T> {\n  reverse?: boolean;\n  items: AdaptHeatmapNode<T>[][];\n}\n\nexport interface AdaptHeatmapActionsMenu<T> {\n  target: SVGElement;\n  event: MouseEvent;\n  actions: AdaptHeatmapNodeAction<T>[];\n  context: T;\n}\n\nexport interface AdaptHeatmapNodeAction<T> {\n  title: string;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  callback: (target: SVGElement, event: MouseEvent, context: T) => any;\n}\n\nexport interface AdaptHeatmapNode<T> {\n  name: string;\n  size: number;\n  status: {\n    name: string;\n    bg: string;\n    color?: string;\n    icon?: string;\n    iconColor?: string;\n  };\n  info?: string;\n  progress?: number;\n  content?: T;\n  actions?: AdaptHeatmapNodeAction<T>[];\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport * as d3 from 'd3';\n\nimport {AdaptDropdownDirective, AdaptDropdownToggleDirective, AdaptIconConfig, SafeCdr} from '@bmc-ux/adapt-angular';\nimport {ai_ellipsis} from '@bmc-ux/dpl-iconfont';\n\nimport {AdaptChartComponent} from '../common/chart.component';\nimport {\n  AdaptChartAxis,\n  AdaptChartBoundaries,\n  AdaptChartCategoryEvent,\n  AdaptChartDimensions,\n  AdaptChartHeader,\n  AdaptChartLegend,\n  AdaptSVGGroupElement\n} from '../common/models/chart.model';\nimport {\n  AdaptHeatmapAbstract,\n  AdaptHeatmapActionsMenu,\n  AdaptHeatmapNode,\n  AdaptHeatmapNodeAction\n} from '../common/models/heatmap.model';\n\nconst ICON_HEIGHT = 14;\nconst LINE_HEIGHT = 18;\nconst NODE_PADDING = 15;\n\ninterface ChatGridData {\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  data: AdaptHeatmapNode<any>;\n  x0: number;\n  y0: number;\n  x1: number;\n  y1: number;\n}\n\n// TODO update types\n\n@Component({\n  selector: 'adapt-heatmap',\n  styles: [`\n    .heatmap-chart_hidden-menu {\n      opacity: 0;\n      visibility: hidden;\n      height: 0\n    }\n  `],\n  template: `\n    <adapt-chart #chartBase\n                 [data]=\"data\"\n                 [width]=\"width\"\n                 [height]=\"height\"\n                 [header]=\"header\"\n                 [legend]=\"_legend\"\n                 [backgroundColor]=\"backgroundColor\"\n                 [suppressHeader]=\"suppressHeader\"\n                 [suppressLegend]=\"suppressLegend\"\n                 [tooltip]=\"tooltip\"\n                 [dataBuilder]=\"_dataBuilder\"\n                 [updateChart]=\"_updateChart\"\n                 [noDataText]=\"noDataText\"\n                 (categoryEnter)=\"_categoryEnter($event)\"\n                 (categoryLeave)=\"_categoryLeave($event)\"></adapt-chart>\n\n    <div class=\"dropdown heatmap-chart_hidden-menu\"\n         adaptDropdown\n         #menuContainer\n         *ngIf=\"hasActionMenu\"\n         [adaptRadarDisableEventSending]=\"true\"\n         [appendToBody]=\"true\"\n         (popupAnimationDone)=\"popupAnimationDone()\">\n      <button #menuAnchor adaptDropdownToggle type=\"button\"></button>\n      <ng-template adaptDropdownMenuTemplate>\n        <div class=\"dropdown-menu\">\n          <div *ngIf=\"menuData && menuData.actions && menuData.actions.length\">\n            <button class=\"dropdown-item\"\n                    type=\"button\"\n                    *ngFor=\"let action of menuData.actions;\"\n                    (click)=\"callAction(menuData.target, menuData.event, menuData.context, action)\">\n              {{action.title}}\n            </button>\n          </div>\n        </div>\n      </ng-template>\n    </div>\n\n    <ng-template #heatmapDefaultTooltip let-c=\"context\">\n      <div class=\"text-left\">\n        <div>\n          <adapt-icon class=\"icon-inline\"\n                      [adaptRadarDisableEventSending]=\"true\"\n                      *ngIf=\"c.status.icon\"\n                      [name]=\"c.status.icon\"\n                      [style.color]=\"c.status.iconColor || c.status.color || defaultColor\"></adapt-icon>\n          {{c.name}}\n        </div>\n        <div class=\"pt-2\" *ngIf=\"c.info\">\n          <small class=\"text-secondary\">{{c.info}}</small>\n        </div>\n        <div class=\"pt-2\" *ngIf=\"c.progress\">\n          <label class=\"progress-label\" [style.marginLeft]=\"c.progress + '%'\">{{c.progress}}%</label>\n          <div class=\"progress\">\n            <div class=\"progress-bar bg-primary-muted\"\n                 role=\"progressbar\"\n                 [style.width]=\"c.progress + '%'\"\n                 [attr.aria-valuenow]=\"c.progress\"\n                 aria-valuemin=\"0\"\n                 aria-valuemax=\"100\"></div>\n          </div>\n        </div>\n        <div class=\"pt-2\">\n          <div style=\"width: 8px; height: 8px; margin: 0 4px 1px 2px; display: inline-block; vertical-align: middle\"\n               [style.backgroundColor]=\"c.status.bg\"></div>\n          {{c.status.name}}\n        </div>\n      </div>\n    </ng-template>\n  `\n})\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nexport class AdaptHeatmapComponent extends AdaptHeatmapAbstract<any> implements OnInit, OnDestroy {\n  _legend: AdaptChartLegend;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  menuData: AdaptHeatmapActionsMenu<any>;\n  hasActionMenu: boolean = false;\n  defaultColor: string = getComputedStyle(document.documentElement).getPropertyValue('--gray-900');\n\n  @ViewChild(AdaptChartComponent, {static: true}) chartBase: AdaptChartComponent;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @ViewChild('heatmapDefaultTooltip', {static: true}) heatmapDefaultTooltip: any;\n  @ViewChild('menuAnchor', {\n    read: AdaptDropdownToggleDirective,\n    static: false\n  }) menuAnchor: AdaptDropdownToggleDirective;\n  @ViewChild('menuContainer', {read: AdaptDropdownDirective, static: false}) menuContainer: AdaptDropdownDirective;\n\n  // Chart data builder\n  _dataBuilder: (g: AdaptSVGGroupElement, dim: AdaptChartDimensions) => void = (function (g: AdaptSVGGroupElement, dim: AdaptChartDimensions): void {\n    this._g = g;\n\n    this._calculateMargin();\n\n    const chartWidth = dim.w - (this._margin.left + this._margin.right);\n    const chartHeight = dim.h - (this._margin.top + this._margin.bottom);\n    const openTooltip = this._openTooltip.bind(this);\n    const closeTooltip = this._closeTooltip.bind(this);\n    const openMenu = this._openMenu.bind(this);\n    const margin = this._margin;\n    const ellipsis = this._ellipsis;\n    const clickChart = this.clickChart;\n\n    const _data = this._getPreparedData(chartWidth, chartHeight);\n    const _getIcon = (name: string): string => this._iconConfig.getIcon(name);\n\n    // Draw chart\n    const nodeGroup = this._g.selectAll('g')\n      .attr('transform', `translate(${margin.left} ${margin.top})`)\n      .data(_data)\n      .enter()\n      .append('g')\n      .attr('class', (d: ChatGridData) => `heatmap-node status-group-${d.data.status.name.split(' ').join('_').toLowerCase()}`)\n      .attr('id', (d: ChatGridData) => d.data.name.split(' ').join('_'))\n      .attr('transform', (d: ChatGridData) => `translate(${d.x0}, ${d.y0})`)\n      .on('mouseenter', function (d: ChatGridData): void {\n        const eventDetail = d3.event.detail;\n        const self = d3.select(this);\n\n        if (eventDetail === 0 || eventDetail?.eventSource !== 'legend') {\n          openTooltip(self.node(), {context: d.data});\n        }\n\n        d3.select(this)\n          .selectAll('rect')\n          .each(function (): void {\n            const _r = d3.select(this).node() as HTMLElement;\n\n            if (!_r.classList.contains('menu-icon')) {\n              _r.style.fill = d3.rgb(_r.style.fill).darker(.3).formatHex();\n            }\n          });\n      })\n      .on('mouseleave', function (): void {\n        closeTooltip();\n\n        d3.select(this)\n          .selectAll('rect')\n          .each(function (): void {\n            const _r = d3.select(this).node() as HTMLElement;\n\n            if (!_r.classList.contains('menu-icon')) {\n              _r.style.fill = d3.rgb(_r.style.fill).brighter(.3).formatHex();\n            }\n          });\n      })\n      .on('click', function (d: ChatGridData): void {\n        closeTooltip();\n        clickChart.emit(d.data);\n        d3.event.stopPropagation();\n      });\n\n    nodeGroup.append('g')\n      .attr('class', 'treemap-node-bg')\n      .each(function (d: ChatGridData): void {\n        const _node = d3.select(this);\n\n        _node.append('rect')\n          .attr('width', d.x1 - d.x0)\n          .attr('height', d.y1 - d.y0)\n          .attr('style', () => {\n            return `\n              fill: ${d.data.status.bg};\n              opacity: .6;\n              transition: fill .2s;\n              cursor: pointer;`;\n          });\n\n        _node.append('rect')\n          .attr('width', () => {\n            const c = d.data.progress ? d.data.progress / 100 : 1;\n\n            return (d.x1 - d.x0) * c;\n          })\n          .attr('height', d.y1 - d.y0)\n          .attr('style', () => {\n            return `\n              fill: ${d.data.status.bg};\n              transition: fill .2s;\n              cursor: pointer;`;\n          });\n      });\n\n\n    const _defaultColor = getComputedStyle(document.documentElement).getPropertyValue('--gray-900');\n\n    nodeGroup.append('g')\n      .attr('class', 'treemap-node-text')\n      .each(function (d: ChatGridData): void {\n        const _node = d3.select(this);\n        let _icon;\n        let _info;\n\n        if (d.data.status.icon && (d.y1 - d.y0 > 60)) {\n          _icon = _node.append('g')\n            .attr('transform', `translate(${(d.x1 - d.x0) / 2 - ICON_HEIGHT / 2}, 0)`)\n            .html(_getIcon(d.data.status.icon))\n            .select('svg')\n            .attr('width', ICON_HEIGHT)\n            .attr('height', ICON_HEIGHT)\n            .attr('fill', d.data.status.iconColor || d.data.status.color || _defaultColor);\n        }\n\n        const _name = _node.append('text')\n          .attr('transform', `translate(${(d.x1 - d.x0) / 2}, 0)`)\n          .attr('dy', _icon ? LINE_HEIGHT + ICON_HEIGHT : 0)\n          .attr('text-anchor', 'middle')\n          .attr('fill', d.data.status.color || _defaultColor)\n          .attr('style', 'font-size: 13px;');\n\n        ellipsis(_name, d.data.name, d.x1 - d.x0 - NODE_PADDING);\n\n        if (_icon) {\n          _node.attr('transform', `translate(0, ${(d.y1 - d.y0) / 2 - ICON_HEIGHT})`);\n        } else {\n          _node.attr('transform', `translate(0, ${(d.y1 - d.y0) / 2 + LINE_HEIGHT / 2})`);\n        }\n\n        if (d.data.info && (d.y1 - d.y0 > 40)) {\n          _info = _node.append('text')\n            .attr('transform', `translate(${(d.x1 - d.x0) / 2}, 0)`)\n            .attr('dy', _icon ? LINE_HEIGHT * 2 + ICON_HEIGHT : LINE_HEIGHT)\n            .attr('text-anchor', 'middle')\n            .attr('fill', d.data.status.color || _defaultColor)\n            .attr('style', 'font-size: 12px; opacity: .7');\n\n          ellipsis(_info, d.data.info, d.x1 - d.x0 - NODE_PADDING);\n\n          if (_icon) {\n            _node.attr('transform', `translate(0, ${(d.y1 - d.y0) / 2 - ICON_HEIGHT - LINE_HEIGHT / 2})`);\n          } else {\n            _node.attr('transform', `translate(0, ${(d.y1 - d.y0) / 2})`);\n          }\n        }\n      });\n\n    // Draw kebab menu icon\n    nodeGroup\n      .append('g')\n      .attr('class', 'heatmap__actions-menu')\n      .each(function (d: ChatGridData): void {\n        if (d.data.actions) {\n          const _node = d3.select(this);\n\n          _node.append('rect')\n            .attr('class', 'menu-icon')\n            .attr('cursor', 'pointer')\n            .attr('fill', 'transparent')\n            .attr('height', 20)\n            .attr('width', 20)\n            .attr('transform', `translate(${(d.x1 - d.x0) - 24}, 10)`);\n\n          _node.append('g')\n            .attr('transform', `translate(${(d.x1 - d.x0) - 24}, 10)`)\n            .html(ai_ellipsis.data)\n            .select('svg')\n            .attr('cursor', 'pointer')\n            .attr('fill', _defaultColor)\n            .attr('height', 20)\n            .attr('width', 20);\n        }\n      })\n      .on('click', function (d: ChatGridData): void {\n        if (d.data.actions) {\n          const self = d3.select(this);\n\n          openMenu(self.node(), d3.event, d.data);\n          d3.event.stopPropagation();\n        }\n      });\n\n    // Draw Axises\n    if (this.xAxis) {\n      const axisScaleX = d3\n        .scaleBand()\n        .domain(this.xAxis.categories)\n        .range([0, chartWidth]);\n\n      const xAxis = d3.axisBottom(axisScaleX)\n        .tickSizeOuter(0)\n        .tickSize(0)\n        .tickPadding(10);\n\n      this._g.append('g')\n        .attr('class', 'adapt-chart-axis xAxis')\n        .attr('transform', `translate(${margin.left}, ${chartHeight})`)\n        .call(xAxis);\n    }\n\n    if (this.yAxis) {\n      const axisScaleY = d3\n        .scaleBand()\n        .domain(this.yAxis.categories)\n        .range([0, chartHeight]);\n\n\n      const yAxis = d3\n        .axisLeft(axisScaleY)\n        .tickSizeOuter(0)\n        .tickSize(0)\n        .tickPadding(10);\n\n\n      this._g.append('g')\n        .attr('class', 'adapt-chart-axis')\n        .attr('transform', `translate(${margin.left}, 0)`)\n        .call(yAxis);\n    }\n\n    SafeCdr.detectChanges(this._changeDetectorRef);\n  }).bind(this);\n\n  // Chart update function\n  _updateChart: (dim: AdaptChartDimensions) => void = (function (dim: AdaptChartDimensions): void {\n\n    this._calculateMargin();\n\n    const chartWidth = dim.w - (this._margin.left + this._margin.right);\n    const chartHeight = dim.h - (this._margin.top + this._margin.bottom);\n\n    const _data = this._getPreparedData(chartWidth, chartHeight);\n\n    this._g.selectAll('g.heatmap-node')\n      .data(_data)\n      .transition()\n      .duration(200)\n      .attr('transform', (d: ChatGridData) => `translate(${d.x0}, ${d.y0})`);\n\n    this._g.selectAll('g.treemap-node-bg rect:first-child')\n      .data(_data)\n      .transition()\n      .duration(200)\n      .attr('width', (d: ChatGridData) => d.x1 - d.x0);\n\n    this._g.selectAll('g.treemap-node-bg rect:last-child')\n      .data(_data)\n      .transition()\n      .duration(200)\n      .attr('width', (d: ChatGridData) => {\n        const c = d.data.progress ? d.data.progress / 100 : 1;\n\n        return (d.x1 - d.x0) * c;\n      });\n\n    this._g.selectAll('g.heatmap__actions-menu rect')\n      .data(_data.filter((d) => d.data.actions))\n      .transition()\n      .duration(200)\n      .attr('transform', (d) => `translate(${(d.x1 - d.x0) - 24}, 10)`);\n\n    this._g.selectAll('g.heatmap__actions-menu use')\n      .data(_data.filter((d) => d.data.actions))\n      .transition()\n      .duration(200)\n      .attr('transform', (d) => `translate(${(d.x1 - d.x0) - 24}, 10)`);\n\n\n    this._g.selectAll('.treemap-node-text')\n      .data(_data)\n      .each(function (d: ChatGridData): void {\n        d3.select(this).select('use')\n          .transition()\n          .duration(200)\n          .attr('transform', `translate(${(d.x1 - d.x0) / 2 - ICON_HEIGHT / 2}, 0)`);\n\n        d3.select(this).selectAll('text')\n          .transition()\n          .duration(200)\n          .attr('transform', `translate(${(d.x1 - d.x0) / 2}, 0)`);\n      });\n\n\n    if (this.xAxis) {\n      const axisScaleX = d3\n        .scaleBand()\n        .domain(this.xAxis.categories)\n        .range([0, chartWidth]);\n\n      const xAxis = d3.axisBottom(axisScaleX)\n        .tickSizeOuter(0)\n        .tickSize(0)\n        .tickPadding(10);\n\n      this._g.select('g.adapt-chart-axis.xAxis')\n        .transition()\n        .duration(200)\n        .call(xAxis);\n    }\n\n  }).bind(this);\n\n  // Inputs\n  @Input() backgroundColor: string;\n  @Input() width: number;\n  @Input() height: number;\n  @Input() header: AdaptChartHeader;\n  @Input() legend: AdaptChartLegend;\n  @Input() suppressHeader: boolean;\n  @Input() suppressLegend: boolean;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Input() tooltip: string | TemplateRef<any>;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Input() data: any;\n  @Input() xAxis: AdaptChartAxis;\n  @Input() yAxis: AdaptChartAxis;\n  @Input() noDataText: string;\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Output() readonly clickChart: EventEmitter<AdaptHeatmapNode<any>> = new EventEmitter();\n\n  private _g: AdaptSVGGroupElement;\n  private _margin: AdaptChartBoundaries = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n  private _removeClickEventListener: Function;\n  private _removeScrollEventListener: Function;\n\n  private _closeMenuBind: (event: AdaptHeatmapComponent) => boolean | void = this._closeMenu.bind(this);\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              private _renderer: Renderer2,\n              private _iconConfig: AdaptIconConfig) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.legend) {\n      this.legend.columns = 1;\n      this.legend.activeHover = false;\n      this.legend.activeClick = false;\n    }\n\n    this._initLegend();\n  }\n\n  ngOnDestroy(): void {\n    this._removeListeners();\n  }\n\n  callAction<T>(target: SVGElement, event: MouseEvent, context: T, action: AdaptHeatmapNodeAction<T>): void {\n    action.callback(target, event, context);\n  }\n\n  popupAnimationDone(): void {\n    if (this.menuContainer.isOpen()) {\n      this._removeClickEventListener = this._renderer.listen('document', 'click', this._closeMenuBind);\n      this._removeScrollEventListener = this._renderer.listen('document', 'scroll', this._closeMenuBind);\n    } else {\n      this._removeListeners();\n    }\n  }\n\n  _categoryEnter(categoryEvent: AdaptChartCategoryEvent): void {\n    // Pass \"detail\" via custom params to not show the tooltip when items highlighted through legend items hover\n    this._g\n      .selectAll(`.status-group-${this._legend.items[categoryEvent.id.toString()].split(' ').join('_').toLowerCase()}`)\n      .dispatch('mouseenter', {bubbles: true, cancelable: true, detail: {eventSource: 'legend'}});\n  }\n\n  _categoryLeave(categoryEvent: AdaptChartCategoryEvent): void {\n    this._g\n      .selectAll(`.status-group-${this._legend.items[categoryEvent.id.toString()].split(' ').join('_').toLowerCase()}`)\n      .dispatch('mouseleave');\n  }\n\n  private _calculateMargin(): void {\n    this._margin.left = this.yAxis ? 60 : 0;\n    this._margin.bottom = this.xAxis ? 38 : 0;\n  }\n\n  private _getPreparedData(w: number, h: number): ChatGridData[] {\n    const padding = 1;\n    const chartWidth = Math.round(w);\n    const rowCount = this.data.items.length;\n    const rowHeight = Math.round(h / rowCount);\n\n    const chartGrid: ChatGridData[] = [];\n\n    this.data.items.forEach((row, rIndex) => {\n      let rowWidth = 0;\n\n      row.forEach((el) => {\n        rowWidth += el.size;\n      });\n\n      let colWidth = this._margin.left + 1;\n\n      const colWidthMultiplier = chartWidth / rowWidth;\n\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      row.forEach((col: AdaptHeatmapNode<any>) => {\n        chartGrid.push({\n          data: col,\n          x0: Math.round(colWidth),\n          y0: Math.round(this._margin.top + rowHeight * rIndex),\n          x1: Math.round(colWidth + colWidthMultiplier * col.size - padding),\n          y1: Math.round(this._margin.top + rowHeight * rIndex + rowHeight - padding)\n        });\n\n        colWidth += colWidthMultiplier * col.size;\n      });\n    });\n\n    // Check if there is at least one item with action. If there are no actions no sense to render dropdown component\n    this.hasActionMenu = chartGrid.some(item => item.data.actions && item.data.actions.length);\n\n    return chartGrid;\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _openMenu(target: any, event: MouseEvent, context: any): void {\n    this._closeTooltip();\n    this.menuContainer.placement = 'bottom-right';\n    this.menuContainer.positionTo = target;\n    this.menuData = {target, event, context, actions: context.actions};\n    this.menuAnchor.toggleOpen(event);\n\n    SafeCdr.detectChanges(this._changeDetectorRef);\n  }\n\n  private _closeMenu(): void {\n    if (this.menuContainer) {\n      this.menuContainer.close();\n    }\n\n    this._removeListeners();\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _openTooltip(target: any, context?: any): void {\n    this.chartBase.showTooltip(target, this.tooltip || this.heatmapDefaultTooltip, context);\n  }\n\n  private _closeTooltip(): void {\n    this.chartBase.hideTooltip();\n  }\n\n  private _initLegend(): void {\n    if (this.suppressLegend) {\n      return;\n    }\n\n    const legendItems = [];\n\n    this.data.items.forEach((row) => {\n      row.forEach((col) => {\n        if (col.status) {\n          const sameStatuses = legendItems.filter((lItem) => {\n            return col.status.name === lItem.name;\n          });\n\n          if (!sameStatuses.length) {\n            legendItems.push({name: col.status.name, color: col.status.bg});\n          }\n        }\n      });\n    });\n\n    if (legendItems.length) {\n      this._legend = {\n        columns: 1,\n        items: legendItems.map(el => el.name),\n        customColors: legendItems.map(el => el.color),\n        activeHover: false,\n        activeClick: false\n      };\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _ellipsis(textNode: any, text: string, ellipsisWidth: number): void {\n\n    const letters = text.split('');\n\n    const ellipsis = textNode.append('tspan').attr('class', 'ellipsis').text('...');\n    const width = ellipsisWidth - (ellipsis.node() as SVGTextContentElement).getComputedTextLength();\n    const numWords = letters.length;\n\n    const tspan = textNode.insert('tspan', ':first-child').text(letters.join(''));\n\n    // Try the whole line\n    // While it's too long, and we have words left, keep removing words\n\n    while ((tspan.node() as SVGTextContentElement).getComputedTextLength() > width && letters.length) {\n      letters.pop();\n      tspan.text(letters.join(''));\n    }\n\n    if (letters.length === numWords) {\n      ellipsis.remove();\n    }\n  }\n\n  private _removeListeners(): void {\n    if (this._removeClickEventListener) {\n      this._removeClickEventListener();\n      this._removeClickEventListener = null;\n    }\n\n    if (this._removeScrollEventListener) {\n      this._removeScrollEventListener();\n      this._removeScrollEventListener = null;\n    }\n  }\n}\n","import {Directive, Input} from '@angular/core';\nimport {AdaptChartAbstract, AdaptChartAxis, AdaptChartDataModel, AdaptChartSeries} from './chart.model';\n\n@Directive()\nexport abstract class AdaptLineGraphAbstract<T> extends AdaptChartAbstract {\n  @Input() xAxis?: AdaptChartAxis;\n  @Input() yAxis?: AdaptChartAxis;\n  @Input() abstract series: AdaptChartSeries<T>[];\n  @Input() hideAxises?: boolean;\n}\n\nexport interface AdaptLineGraphDateAndData {\n  date: string;\n  data: number;\n}\n\nexport interface AdaptLineGraphData extends AdaptChartDataModel<AdaptLineGraphDateAndData> {\n  hidden: boolean;\n}\n","<adapt-chart [width]=\"width\"\n             [height]=\"height\"\n             [legend]=\"legend\"\n             [data]=\"series\"\n             [backgroundColor]=\"backgroundColor\"\n             [suppressHeader]=\"suppressHeader\"\n             [suppressLegend]=\"suppressLegend\"\n             [tooltip]=\"tooltip\"\n             [header]=\"header\"\n             (categoryShow)=\"categoryShowHandler($event)\"\n             (categoryHide)=\"categoryHideHandler($event)\"\n             (categoryEnter)=\"categoryEnter($event)\"\n             (categoryLeave)=\"categoryLeave()\"\n             [noDataText]=\"noDataText\"\n             [updateChart]=\"_updateChartBind\"\n             [dataBuilder]=\"_dataBuilderBind\"\n             [colorsPalette]=\"colorsPalette\">\n  <adapt-area-graph-slider *ngIf=\"showSlider && slidePointsCount && chartWidth\"\n                           [data]=\"sliderData\"\n                           [xAxis]=\"xAxis\"\n                           [slidePointsCount]=\"slidePointsCount\"\n                           [customColors]=\"legend?.customColors\"\n                           [xBrush]=\"xBrush\"\n                           [leftShift]=\"leftShift\"\n                           [containerWidth]=\"chartWidth\"\n                           (rangeChanged)=\"rangeChanged($event)\"\n                           (scrollEnd)=\"scrollEnd()\"></adapt-area-graph-slider>\n</adapt-chart>\n\n<ng-template #tooltipTpl let-data=\"data\">\n  <div class=\"chart-tooltip-content-container\">\n    <div class=\"chart-tooltip-content-wrapper\">\n      <span class=\"chart-tooltip-color-spot\" [style.background]=\"data?.color\"></span>\n      <span class=\"chart-tooltip-category\">{{ data.category }}</span>\n    </div>\n    <div>\n      {{getTooltipXValueTitle()}}:\n      <span><b>{{data.xValue}}</b></span>\n    </div>\n\n    <div>\n      {{yAxis?.title}}:\n      <span><b>{{data.yValue}}</b></span>\n    </div>\n  </div>\n</ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {Point} from '@angular/cdk/drag-drop';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {ReplaySubject} from 'rxjs';\nimport BigNumber from 'bignumber.js';\n/* eslint-disable no-duplicate-imports */\nimport * as d3 from 'd3';\nimport {AxisDomain, AxisScale} from 'd3'; // do not remove - that's for ngc\nimport {isNumber} from 'lodash-es';\n/* eslint-enable no-duplicate-imports */\nimport {CutNumberPipe} from '../common/pipes/cut-number.pipe';\nimport {ChartColorService, ColorsPalette} from '../common/services/chart-color.service';\nimport {\n  AdaptChartAxis,\n  AdaptChartBoundaries,\n  AdaptChartCategoryEvent,\n  AdaptChartCategoryToggleEvent,\n  AdaptChartDimensions,\n  AdaptChartHeader,\n  AdaptChartLegend,\n  AdaptChartLegendState,\n  AdaptChartSeries,\n  AdaptChartTooltip,\n  AdaptSVGGroupElement,\n} from '../common/models/chart.model';\nimport {nameof} from '../common/utils/chart-utils';\nimport {AdaptAreaGraphData} from '../common/models/area-graph.model';\nimport {AdaptLineGraphAbstract, AdaptLineGraphData, AdaptLineGraphDateAndData} from '../common/models/line-graph.model';\nimport {AdaptChartComponent} from '../common/chart.component';\nimport {AdaptAreaGraphSliderComponent} from '../area-graph/area-graph-slider.component';\n\nimport {AdaptDeviceDetectionService, ANIMATION_DURATION, ColorType, isUndefined, SafeCdr} from '@bmc-ux/adapt-angular';\n\n// TODO fix types\ninterface NumericalValues {\n  circleRadius: number;\n  maxTicksCount: number;\n  axisShift: AdaptChartBoundaries;\n  margin: AdaptChartBoundaries;\n  marginMobile: number;\n}\n\nlet chartCounter = 1;\n\n@Component({\n  selector: 'adapt-line-graph',\n  templateUrl: './line-graph.component.html',\n  providers: [CutNumberPipe],\n  encapsulation: ViewEncapsulation.None\n})\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nexport class AdaptLineGraphComponent extends AdaptLineGraphAbstract<any> implements OnInit, OnChanges, OnDestroy {\n  alreadyChanged: boolean = false;\n  sliderData: AdaptAreaGraphData[] = [];\n  xBrush: d3.ScalePoint<string>;\n  sliderDomainData: number[] = [];\n\n  _dataBuilderBind: (g: AdaptSVGGroupElement, dim: AdaptChartDimensions) => void = this._dataBuilder.bind(this);\n  _updateChartBind: (dim: AdaptChartDimensions) => void = this._updateChart.bind(this);\n\n  readonly componentNumericalValues: NumericalValues = {\n    circleRadius: 6,\n    maxTicksCount: 7,\n    axisShift: {\n      top: 0,\n      right: 0,\n      bottom: 25,\n      left: 25\n    },\n    margin: {\n      top: 0,\n      right: 0,\n      bottom: 25,\n      left: 50\n    },\n    marginMobile: 40\n  };\n\n  protected circleRadius: number = this.componentNumericalValues.circleRadius;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  protected _series: AdaptChartSeries<any>[] = [];\n  protected _maxTicksCount: number = this.componentNumericalValues.maxTicksCount;\n  protected _data: AdaptLineGraphData[] = [];\n  protected _dim: AdaptChartDimensions;\n  protected _g: AdaptSVGGroupElement;\n  protected _gW: AdaptSVGGroupElement;\n  protected _x: d3.ScalePoint<string>;\n  protected _y: d3.ScaleLinear<number, number>;\n  protected _line: d3.Line<Point>;\n  protected _isDeselected: string[] = [];\n  protected _colors: string[] = [];\n  protected _destroy$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  protected _axisShift: AdaptChartBoundaries = {...this.componentNumericalValues.axisShift};\n\n  protected _highLightColor: string;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  protected _pathLines: any;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  protected _pathLineCurrent: any;\n\n  protected get _margin(): AdaptChartBoundaries {\n    return {\n      top: 0,\n      left: this.isMobile()\n        ? this.componentNumericalValues.marginMobile\n        : this.disallowPadding\n          ? 0\n          : this.yAxis && this.yAxis.title ? this.componentNumericalValues.margin.left + this._axisShift.left : this.componentNumericalValues.margin.left,\n      right: 0,\n      bottom: this.disallowPadding\n        ? 0\n        : this.xAxis && this.xAxis.title ? this.componentNumericalValues.margin.bottom + this._axisShift.bottom : this.componentNumericalValues.margin.bottom\n    };\n  }\n\n  get duration(): number {\n    return parseFloat(ANIMATION_DURATION.fast) * 1000;\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @ViewChild('tooltipTpl', {static: true}) tooltipTemplate: string | TemplateRef<any>;\n  @ViewChild(AdaptChartComponent, {static: true}) chartComponent: AdaptChartComponent;\n  @ViewChild(AdaptAreaGraphSliderComponent, {static: false}) chartSliderComponent: AdaptAreaGraphSliderComponent;\n\n  @Input() backgroundColor: string;\n  @Input() width: number;\n  @Input() height: number;\n  @Input() header: AdaptChartHeader;\n  @Input() colorsPalette: ColorsPalette = 'gradient';\n  @Input() supressAxles: boolean = false;\n  @Input() noDataText: string;\n  @Input() xAxis: AdaptChartAxis;\n  @Input() yAxis: AdaptChartAxis;\n  @Input() suppressHeader: boolean;\n  @Input() suppressLegend: boolean;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Input() tooltip: string | TemplateRef<any>;\n  @Input() dataBuilder: (g: AdaptSVGGroupElement, dim: AdaptChartDimensions) => void;\n  @Input() updateChart: (dim: AdaptChartDimensions) => void;\n  @Input() showLineCircles: boolean = true;\n  @Input() rotateXAxis: boolean = false;\n  @Input() showSlider: boolean = false;\n  @Input() slidePointsCount: number;\n  @Input() disallowPadding: boolean = false;\n  @Input() scientificMode: boolean = false;\n\n  /**\n   * Threshold line in a chart to help determine which data points are either below or above a significant value\n   * @since 10.11.0\n   */\n  @Input() set thresholdLine(value: number) {\n    this._thresholdLine = isNumber(value) ? value : null;\n\n    if (this.alreadyChanged) {\n      this._updateThresholdLineArea();\n    }\n  }\n\n  get thresholdLine(): number {\n    return this._thresholdLine;\n  }\n\n  @Input()\n  set legend(legend: AdaptChartLegend) {\n    this._legend = Object.assign(this._legend, legend);\n\n    if (this.alreadyChanged) {\n      this.chartComponent.redrawChart();\n    }\n  }\n\n  get legend(): AdaptChartLegend {\n    return {\n      customColors: this._legend.customColors,\n      activeHover: this._legend.activeHover,\n      activeClick: this._legend.activeClick,\n      columns: this._legend.columns,\n      width: this._legend.width,\n      items: (this.series.map((series) => ({item: series.name, hidden: !!series.hidden})) as AdaptChartLegendState[])\n    };\n  }\n\n  @Input()\n  set series(series: AdaptChartSeries<number>[] | AdaptChartSeries<Point>[]) {\n    this._series = series;\n\n    this._isDeselected = [];\n\n    series.forEach(s => {\n      if (s.hidden) {\n        this._isDeselected.push(s.name);\n      }\n    });\n\n    // such transformation needed for proper display\n    // of the slider for area graph\n    this.sliderData = [...this.mapDataFromSeries(series)];\n\n    if (this.alreadyChanged) {\n      const options = this.chartComponent.getGroupAndDimensions();\n\n      this._g = options.group;\n      this._dim = {\n        w: options.w,\n        h: options.h\n      };\n    }\n\n    if (this._g && this._dim && this.chartComponent) {\n      this.chartComponent.updateLegend(this.series.map((item) => ({\n        item: item.name,\n        hidden: !!item.hidden,\n        hover: false\n      })));\n    }\n  }\n\n  get series(): AdaptChartSeries<number>[] | AdaptChartSeries<Point>[] {\n    return this._series;\n  }\n\n  get leftShift(): number {\n    return this._margin.left;\n  }\n\n  get chartWidth(): number {\n    return this.chartComponent.currentSVGWidth;\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Output() readonly clickChart: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Output that emits each time chart category shown\n   * @since 12.11.0\n   */\n  @Output() readonly categoryShow: EventEmitter<AdaptChartCategoryToggleEvent> = new EventEmitter<AdaptChartCategoryToggleEvent>();\n\n  /**\n   * Output that emits each time chart category hidden\n   * @since 12.11.0\n   */\n  @Output() readonly categoryHide: EventEmitter<AdaptChartCategoryToggleEvent> = new EventEmitter<AdaptChartCategoryToggleEvent>();\n\n  private _thresholdLine: number = null;\n\n  private _legend: AdaptChartLegend = {\n    columns: 1,\n    activeHover: true,\n    activeClick: true,\n    width: 250,\n    customColors: null,\n    items: []\n  };\n\n  protected _id: string;\n\n  constructor(protected _cutNumber: CutNumberPipe,\n              protected _deviceDetectionService: AdaptDeviceDetectionService,\n              protected _colorService: ChartColorService,\n              private _ngZone: NgZone,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    super();\n\n    this._id = `line-graph-${chartCounter++}`;\n  }\n\n  ngOnInit(): void {\n    if (this.scientificMode) {\n      BigNumber.config({EXPONENTIAL_AT: 4});\n    }\n\n    this.alreadyChanged = true;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this._dim && (changes[this.nameof('showLineCircles')]\n      || changes[this.nameof('supressAxles')]\n      || changes[this.nameof('rotateXAxis')]\n      || changes[this.nameof('showSlider')])) {\n      this._detectViewChanges();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  _dataBuilder(g: AdaptSVGGroupElement, dim: AdaptChartDimensions): void {\n    this._g = g;\n    this._dim = dim;\n    this._initClipPath();\n    this._clear();\n    this._initData();\n    this._initAxis(g, dim);\n    this._drawLines(g);\n    this._drawDropShadow();\n    this._updateThresholdLineArea();\n  }\n\n  _updateChart(dim: AdaptChartDimensions, skipUpdateAxisX: boolean = false): void {\n    this._dim = dim; // after updating from toggling legend or create separate method for input\n    this._initData();\n\n    // update clipPath\n    if (this._g) {\n      this._g.select(`#${this._id}_clip > rect`)\n        .attr('width', dim.w - (this._margin.left + this._margin.right))\n        .attr('height', dim.h - (this._margin.top + this._margin.bottom));\n    }\n\n    if (!skipUpdateAxisX) {\n      this._updateAxis(dim);\n    }\n\n    this._updateDataLines();\n    this._updateThresholdLineArea();\n  }\n\n  isMobile(): boolean {\n    return this._deviceDetectionService.deviceMobile() || this._deviceDetectionService.deviceTablet();\n  }\n\n  categoryShowHandler(category: string): void {\n    const index = this._isDeselected.indexOf(category);\n\n    if (index !== -1) {\n      this._isDeselected.splice(index, 1);\n    }\n\n    this._updateChart(this._dim, true);\n\n    this.series.forEach((item, ind) => {\n      if (item.name.indexOf(category) !== -1) {\n        item.hidden = false;\n\n        this._g\n          .select(`[data-line-graph-id='${ind}']`)\n          .style('display', 'block');\n      }\n    });\n\n\n    if (!isUndefined(this.chartSliderComponent)) {\n      this.chartSliderComponent.showCategory(category);\n    }\n\n    this.categoryShow.emit({category});\n  }\n\n  categoryHideHandler(category: string): void {\n    this._isDeselected.push(category);\n    this.series.forEach((item, index) => {\n      if (item.name.indexOf(category) !== -1) {\n        item.hidden = true;\n\n        this._g\n          .select(`[data-line-graph-id='${index}']`)\n          .style('display', 'none');\n      }\n    });\n\n    this._updateChart(this._dim, true);\n\n    if (!isUndefined(this.chartSliderComponent)) {\n      this.chartSliderComponent.hideCategory(category);\n    }\n\n    this.categoryHide.emit({category});\n  }\n\n  categoryEnter(categoryEvent: AdaptChartCategoryEvent): void {\n    const ind = this._isDeselected.indexOf(this.series[categoryEvent.id].name);\n\n    if (ind === -1) {\n      const selectedGroup = this._g.select(`g[data-line-graph-id='${categoryEvent.id}']`);\n      const selectedLine = selectedGroup.select('path');\n      const linesWrapper = (selectedGroup.node() as SVGGElement).parentNode;\n\n      const colorLine = selectedLine.attr('stroke');\n\n      this._highLightColor = colorLine;\n\n      this._pathLines = linesWrapper.querySelectorAll('.line-chart-lines');\n\n      this._pathLines.forEach(line => {\n        const pathLineColor = line.getAttribute('stroke');\n\n        if (pathLineColor === colorLine) {\n          line.setAttribute('stroke-width', '3');\n          this._pathLineCurrent = line;\n        } else {\n          line.setAttribute('stroke-width', '1');\n        }\n      });\n\n      if (this.showLineCircles) {\n        const lineCirclesWrapper = this._g.select('.line-graph-circle-wrapper').node() as SVGGElement;\n        const circles = lineCirclesWrapper.querySelectorAll('.line-graph-circle');\n\n        circles.forEach(circle => {\n          if (circle.getAttribute('fill') !== colorLine) {\n            circle.setAttribute('r', '4');\n          }\n        });\n      }\n    }\n  }\n\n  categoryLeave(): void {\n    if (this._pathLineCurrent) {\n      this._pathLineCurrent.setAttribute('stroke-width', '2');\n    }\n\n    if (this._pathLines) {\n      this._pathLines.forEach(line => {\n        line.classList.remove('line-graph-transition');\n        line.setAttribute('stroke-width', '2');\n      });\n    }\n\n    if (this.showLineCircles) {\n      const lineCirclesWrapper = this._g.select('.line-graph-circle-wrapper').node() as SVGGElement;\n      const circles = lineCirclesWrapper.querySelectorAll('.line-graph-circle');\n\n      circles.forEach(circle => {\n        if (circle.getAttribute('fill') !== this._highLightColor) {\n          circle.classList.remove('line-graph-transition');\n          circle.setAttribute('r', '6');\n        }\n      });\n    }\n  }\n\n  getTooltipXValueTitle(): string {\n    return this.xAxis ? this.xAxis.title : '';\n  }\n\n  rangeChanged(data: number[]): void {\n    this.sliderDomainData = data;\n\n    // In case X axes text are rotated call update on the scroll end.\n    // This is prevent incorrect text splitting on multiple lines\n    if (!this.rotateXAxis) {\n      this._updateXAxis(this._dim);\n    }\n    this._updateDataLines();\n  }\n\n  scrollEnd(): void {\n    if (this.rotateXAxis) {\n      this._updateXAxis(this._dim);\n    }\n  }\n\n  protected getXAxisLineRenderer(dim: AdaptChartDimensions): d3.Axis<d3.AxisDomain> {\n    return d3.axisBottom(this._x as AxisScale<AxisDomain>)\n      .tickPadding(10)\n      .tickSize(-dim.h + (this._margin.top + this._margin.bottom))\n      .tickSizeOuter(0);\n  }\n\n  protected getYPosFunc(dim: AdaptChartDimensions, ticksVal: number[]): d3.ScaleLinear<number, number> {\n    return d3.scaleLinear()\n      .rangeRound([0, dim.h - this._margin.bottom - this._margin.top])\n      .domain([ticksVal[0], 0]);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected getXPosFunc(dim: AdaptChartDimensions, domain: (number | string)[] = []): d3.ScalePoint<string> | d3.ScaleLinear<number, number> {\n    return d3.scalePoint()\n      .range([0, dim.w - (this._margin.left + this._margin.right)])\n      .domain(this.xAxis.categories);\n  }\n\n  protected _getCustomColorById(id: number): string {\n    const customColors = this.legend.customColors;\n    const len = customColors.length;\n    const index = id % len;\n\n    return customColors[index];\n  }\n\n  protected _drawLines(g: AdaptSVGGroupElement): void {\n    // TODO check if it can be refactored\n    /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n    const _self = this;\n\n    this._gW = g.append('g')\n      .attr('class', 'area-chart-data')\n      .attr('transform', `translate(${this._margin.left}, 0)`);\n\n    this._line = this.getLineRenderer();\n\n    this._colors = [];\n\n    this._data.forEach((dt, i) => {\n      this._colors.push(this.legend.customColors?.length ? this._getCustomColorById(i) : this._colorService.getColor(i, this.colorsPalette));\n\n      const lineWrapper =\n        this._gW\n          .append('g')\n          .attr('class', 'line-chart-line-g')\n          .attr('display', dt.hidden ? 'none' : 'block')\n          .attr('id', this._colors[i])\n          .attr('data-line-graph-id', i);\n\n      this.drawLineForSeries(lineWrapper, dt, i);\n\n      this.drawAreaForSeries(lineWrapper, dt, i);\n\n\n      this.drawLineCircles(lineWrapper, i, dt)\n        .on('mouseover', function (d: AdaptLineGraphDateAndData): void {\n          /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n          const circleEl = this;\n\n          _self.onCircleMouseover(circleEl, dt, d);\n        })\n\n        .on('mouseout', function (): void {\n          /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n          const circleEl = this;\n\n          _self.onCircleMouseout(circleEl);\n        });\n\n    });\n\n    this.toggleLineCirclesVisibility(this._g, this.showLineCircles);\n  }\n\n\n  protected onCircleMouseout(circleEl: SVGCircleElement): void {\n    const circleRadius = this.circleRadius;\n\n    const circleParentLineEl = this.getCircleLine(circleEl);\n\n    circleParentLineEl.attr('stroke-width', '2');\n    const circleSelection = d3.select(circleEl);\n\n    this._gW.selectAll('.line-chart-lines')\n      .classed('line-graph-transition', false)\n      .attr('stroke-width', '2');\n\n    const baseColor = circleSelection.attr('fill-old');\n\n    d3.selectAll('.line-graph-circle-wrapper .line-graph-circle').each(function (): void {\n      if (d3.select(this).attr('fill') !== baseColor) {\n        d3.select(this)\n          .classed('line-graph-transition', false)\n          .attr('r', circleRadius);\n      }\n    });\n\n    circleSelection\n      .attr('fill', baseColor)\n      .style('filter', null)\n      .attr('fill-old', null);\n\n    this.chartComponent.hideTooltip();\n  }\n\n  protected onCircleMouseover(circleEl: SVGCircleElement, dt: AdaptLineGraphData, d: AdaptLineGraphDateAndData): void {\n    const circleSelection = d3.select(circleEl);\n    const circleParentLineSelection = this.getCircleLine(circleEl);\n    const circleParentLineEl = circleParentLineSelection.node();\n    const baseColor = circleSelection.attr('fill');\n\n    circleSelection.attr('fill-old', baseColor);\n    const colorHex = this.getCircleDarkenColor(baseColor, circleParentLineSelection);\n\n    d3.selectAll('.line-chart-line-g').each(function (): void {\n      if (d3.select(this).attr('data-id') === baseColor && (this as HTMLElement).nextElementSibling !== null) {\n        (this as HTMLElement).parentNode.appendChild((this as HTMLElement));\n      }\n    });\n\n    this._gW.selectAll('.line-chart-lines').each(function (): void {\n      if (circleParentLineEl === this) {\n        d3.select(this).attr('stroke-width', '3');\n      } else {\n        d3.select(this).classed('line-graph-transition', true).attr('stroke-width', '1');\n      }\n    });\n\n    d3.selectAll('.line-graph-circle-wrapper .line-graph-circle').each(function (): void {\n      if (d3.select(this).attr('fill') !== baseColor) {\n        d3.select(this).classed('line-graph-transition', true).attr('r', 4);\n      }\n    });\n\n    this.showCircleTooltip(circleParentLineSelection.attr('stroke'), dt, d);\n\n    circleSelection\n      .attr('r', 8)\n      .style('filter', 'url(#drop-shadow)')\n      .attr('fill', colorHex);\n  }\n\n  protected showCircleTooltip(baseColor: string, dt: AdaptLineGraphData,\n                              /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                              d: AdaptLineGraphDateAndData | any): void {\n    this.chartComponent.showTooltip(d3.event.target, this.tooltip || this.tooltipTemplate, {\n      data: this.getTooltipData(baseColor, dt, d)\n    });\n  }\n\n  protected getTooltipData(baseColor: string, dt: AdaptLineGraphData,\n                           /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                           d: AdaptLineGraphDateAndData | any): AdaptChartTooltip {\n    return {\n      color: baseColor,\n      category: dt.name,\n      xValue: (d as AdaptLineGraphDateAndData).date,\n      yValue: this.scientificMode ? new BigNumber((d as AdaptLineGraphDateAndData).data) : (d as AdaptLineGraphDateAndData).data\n    };\n  }\n\n  // TODO check if useless arg can be removed\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected getCircleDarkenColor(baseColor: string, circleParentLineSelection: d3.Selection<d3.BaseType, {}, null, undefined>): string {\n    return this._colorService.getDarken(baseColor, .15, ColorType.HEX);\n  }\n\n  protected drawLineCircles(lineWrapper: AdaptSVGGroupElement, i: number, dt: AdaptLineGraphData):\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    d3.Selection<SVGCircleElement, AdaptLineGraphDateAndData, SVGGElement, any> {\n    const circleSel = lineWrapper\n      .append('g')\n      .attr('class', 'line-graph-circle-wrapper')\n      .attr('data-id', this._colors[i])\n      .selectAll('dots')\n      .data(this.getDataForCirclesOrLines(dt))\n      .enter()\n      .append('circle')\n      .attr('r', this.circleRadius)\n      .attr('class', 'line-graph-circle')\n      .attr('fill', this.getCircleColor(i));\n\n    return this.setCirclePosition(circleSel);\n  }\n\n  protected toggleLineCirclesVisibility(g: AdaptSVGGroupElement, isShown: boolean): void {\n    if (g) {\n      g.selectAll('.line-graph-circle-wrapper').style('display', isShown ? 'block' : 'none');\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  protected getDataForCirclesOrLines(dt: AdaptLineGraphData): any[] {\n    return dt.data;\n  }\n\n  protected setCirclePosition(\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    circleSel: d3.Selection<SVGCircleElement, any, SVGGElement, any>):\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    d3.Selection<SVGCircleElement, any, SVGGElement, any> {\n    return circleSel\n      .attr('cx', (d: AdaptLineGraphDateAndData) => this._x(d.date))\n      .attr('cy', (d: AdaptLineGraphDateAndData) => this._y(d.data));\n  }\n\n  protected drawLineForSeries(lineWrapper: AdaptSVGGroupElement, dt: AdaptLineGraphData, i: number):\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    d3.Selection<SVGPathElement, any[], any, any> {\n    return lineWrapper\n      .append('path')\n      .datum(this.getDataForCirclesOrLines(dt))\n      .attr('clip-path', `url(#${this._id}_clip)`)\n      .attr('fill', 'none')\n      .attr('class', 'line-chart-lines')\n      .attr('stroke', this._colors[i])\n      .attr('stroke-width', '2')\n      .attr('d', this._line);\n  }\n\n  protected getCircleColor(i: number): string {\n    return this._colors[i];\n  }\n\n\n  // for overriding\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected drawAreaForSeries(lineWrapper: AdaptSVGGroupElement, dt: AdaptLineGraphData, i: number): void {\n    // Nothing to draw\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  protected getLineRenderer(): d3.Line<any> {\n    return d3.line<AdaptLineGraphDateAndData>()\n      .x((d) => this._x(d.date))\n      .y((d) => this._y(d.data));\n  }\n\n\n  // for overriding\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  protected updateLinesAreas(): void {\n\n  }\n\n  // for overriding\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  protected restrictXPosTicks(): void {\n\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  protected mapDataFromSeries(series: AdaptChartSeries<any>[]): AdaptLineGraphData[] {\n    return series.map((item): AdaptLineGraphData => {\n      const data = item.data.map((tt, index): AdaptLineGraphDateAndData => {\n        return {\n          date: this.xAxis.categories[index],\n          data: tt\n        };\n      });\n\n      return {\n        name: item.name,\n        hidden: item.hidden,\n        data\n      };\n    });\n  }\n\n  protected getDataYValues(row: AdaptLineGraphData): number[] {\n    return row.data.map((item) => item.data);\n  }\n\n  protected nameof(key: keyof AdaptLineGraphComponent): keyof AdaptLineGraphComponent {\n    return nameof<AdaptLineGraphComponent>(key);\n  }\n\n  protected _detectViewChanges(): void {\n    this._updateChart(this._dim); // Update chart data\n    SafeCdr.detectChanges(this._changeDetectorRef);\n\n    this._ngZone.onStable\n      .pipe(take(1), takeUntil(this._destroy$))\n      .subscribe(() => {\n        this._ngZone.run(() => {\n          this.chartComponent.redrawChart(); // Redraw chart using the latest dimensions\n          SafeCdr.detectChanges(this._changeDetectorRef);\n        });\n      });\n  }\n\n  private _initAxis(g: AdaptSVGGroupElement, dim: AdaptChartDimensions): void {\n    const axisWidth = dim.w - this._margin.left - this._margin.right;\n    const ticks = this._getTicks().reverse();\n\n    if (this.yAxis && this.yAxis.title) {\n      g.append('g')\n        .attr('class', 'adapt-chart-axis-title')\n        .attr('transform', `rotate(-90) translate(-${(dim.h - this._axisShift.bottom) / 2} ${this._axisShift.left / 2})`)\n        .style('opacity', this.supressAxles ? 0 : 1)\n        .append('text').text(this.yAxis.title)\n        .attr('text-anchor', 'middle')\n        .attr('transform', `translate(${(this._axisShift.bottom / 2)} 0)`);\n    }\n\n    if (this.xAxis && this.xAxis.title) {\n      g.append('g')\n        .attr('class', 'adapt-chart-axis-title adapt-chart-axis-title--x')\n        .attr('transform', `translate(${(dim.w + this._axisShift.left) / 2} ${dim.h + this.chartComponent.chartBottomPadding})`)\n        .style('opacity', this.supressAxles ? 0 : 1)\n        .append('text').text(this.xAxis.title)\n        .attr('text-anchor', 'middle')\n        .attr('transform', `translate(${(this._axisShift.left)} 0)`);\n    }\n\n    if (this.xAxis && this.xAxis.categories) {\n      this._x = this.xBrush = this.getXPosFunc(dim) as d3.ScalePoint<string>;\n      this.restrictXPosTicks();\n    }\n\n    const axisBlock = g.append('g').attr('class', 'axis axis--x');\n\n    this.renderXAxis(dim, axisBlock);\n\n    if (this.rotateXAxis) {\n      this.chartComponent.transformAxisTitles(axisBlock, this.rotateXAxis);\n      this.chartComponent.updateChartBottomPadding(axisWidth, g, this.xAxis, this.rotateXAxis);\n    }\n\n    const ticksOrCategs = isUndefined(this.yAxis.categories) ? ticks : this.yAxis.categories.reverse();\n\n    // TODO: can be y axis categories?\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    this._y = this.getYPosFunc(dim, ticksOrCategs as any[]);\n    this.renderYAxis(g.append('g').attr('class', 'axis axis--y'), ticksOrCategs, dim);\n  }\n\n  private renderYAxis(g: AdaptSVGGroupElement, ticksVal: (number | string)[], dim: AdaptChartDimensions): void {\n    g.attr('transform', `translate(${this._margin.left}, 0)`)\n      .style('opacity', this.supressAxles ? 0 : 1)\n      .call(\n        this.getYAxisRenderer(ticksVal, dim)\n      );\n  }\n\n  private getYAxisRenderer(ticksVal: (string | number)[], dim: AdaptChartDimensions):\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    (selection: AdaptSVGGroupElement, ...args: any[]) => void {\n    return d3.axisLeft(this._y)\n      .ticks(ticksVal)\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .tickValues(ticksVal as any[])\n      .tickFormat((d: number) => {\n        if (this.scientificMode) {\n          return new BigNumber(d).toPrecision(2, 2);\n        } else {\n          return this._cutNumber.transform(d, 0);\n        }\n      })\n      .tickSize(-dim.w + (this._margin.left + this._margin.right))\n      .tickPadding(3);\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private renderXAxis(dim: AdaptChartDimensions, el: d3.Selection<d3.BaseType, any, any, any>): void {\n    el.attr('transform', `translate(${this._margin.left}, ${dim.h - this._margin.top - this._margin.bottom})`)\n      .style('opacity', this.supressAxles ? 0 : 1)\n      .call(\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.getXAxisLineRenderer(dim) as any\n      );\n  }\n\n  private _updateXAxis(dim: AdaptChartDimensions): void {\n    this._x = this.getXPosFunc(\n      dim,\n      this.showSlider && this.slidePointsCount ? this.sliderDomainData : []) as d3.ScalePoint<string>;\n\n    if (this._g) {\n      const axisBlock = this._g.select('.axis--x');\n\n      axisBlock.attr('class', `axis axis--x ${this.rotateXAxis ? 'adapt-chart-axis__hidden' : ''}`);\n      this.renderXAxis(dim, axisBlock);\n\n      this.chartComponent.transformAxisTitles(axisBlock, this.rotateXAxis);\n      this.chartComponent.updateChartBottomPadding(dim.w - this._margin.left - this._margin.right, this._g, this.xAxis, this.rotateXAxis);\n      axisBlock.classed('adapt-chart-axis__hidden', null);\n\n      this._g.select('.adapt-chart-axis-title--x')\n        .transition()\n        .duration(this.duration)\n        .attr('transform', `translate(${(dim.w + this._axisShift.left) / 2} ${dim.h + this.chartComponent.chartBottomPadding})`);\n\n      this._g.selectAll('.adapt-chart-axis-title')\n        .style('opacity', this.supressAxles ? 0 : 1);\n    }\n  }\n\n  private _updateYAxis(dim: AdaptChartDimensions): void {\n    const ticks = this._getTicks().reverse();\n    const ticksOrCategs = isUndefined(this.yAxis.categories) ? ticks : this.yAxis.categories.reverse();\n\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    this._y = this.getYPosFunc(dim, ticksOrCategs as any[]);\n\n    if (this._g) {\n      this._g.select('.axis--y')\n        .attr('transform', `translate(${this._margin.left}, 0)`)\n        .transition()\n        .duration(this.duration)\n        .call(\n          /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n          this.getYAxisRenderer(ticksOrCategs, dim) as any\n        );\n\n      this.renderYAxis(\n        this._g.select<SVGGElement>('.axis--y')\n          .transition()\n          /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n          .duration(this.duration) as any,\n        ticksOrCategs, dim);\n    }\n  }\n\n  private _updateAxis(dim: AdaptChartDimensions): void {\n    this._updateXAxis(dim);\n    this._updateYAxis(dim);\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private getCircleLine(el: SVGCircleElement): d3.Selection<SVGPathElement, any, any, any> {\n    return d3\n      .select(el.closest('.line-chart-line-g'))\n      .select<SVGPathElement>('.line-chart-lines');\n  }\n\n  private _updateDataLines(): void {\n    this._line = this.getLineRenderer();\n\n    if (this._g) {\n      this._g.selectAll('.line-chart-lines').attr('d', this._line);\n\n      this._g.selectAll<SVGCircleElement, AdaptLineGraphDateAndData>('.line-graph-circle').each((d, i, g) => {\n        this.setCirclePosition(d3.select(g[i]));\n      });\n    }\n\n    this.toggleLineCirclesVisibility(this._g, this.showLineCircles);\n\n    this.updateLinesAreas();\n  }\n\n  private _initData(): void {\n    this._data = this.mapDataFromSeries(this.series);\n  }\n\n  private _getTicks(): number[] {\n    let data: number[] = [];\n\n    this._data.forEach(row => {\n      data = data.concat(this.getDataYValues(row));\n    });\n\n    let max = Math.max(...data);\n\n    if (max === 0) {\n      max = 1;\n    }\n\n    if (this.thresholdLine && this.thresholdLine > max) {\n      max = this.thresholdLine;\n    }\n\n    let currentStep = Math.pow(10, Math.floor(Math.log10(max))) / 2;\n    const step = Math.pow(10, Math.floor(Math.log10(max))) / 2;\n    let count = Math.floor(max / currentStep) + 1;\n\n    while (count >= this._maxTicksCount) {\n      currentStep += step;\n      count = Math.floor(max / currentStep) + 1;\n    }\n\n    return (new Array(count)).fill(0).map((v, id) => (id + 1) * currentStep);\n  }\n\n  private _initClipPath(): void {\n    // Add a clipPath: we restrict lines appearing by explicitly setting width and height - everything out of this area won't be drawn\n    // useful for the situation once we show the graph slider\n    this._g.append('defs').append('svg:clipPath')\n      .attr('id', `${this._id}_clip`)\n      .append('svg:rect')\n      .attr('width', this._dim.w - (this._margin.left + this._margin.right))\n      .attr('height', this._dim.h - (this._margin.top + this._margin.bottom))\n      .attr('x', 0)\n      .attr('y', 0);\n  }\n\n  private _clear(): void {\n    this._data = [];\n  }\n\n  private _updateThresholdLineArea(): void {\n    const thresholdLineAreaClass = 'threshold-line-area';\n    let thresholdLineArea;\n\n    if (this._g) {\n      thresholdLineArea = this._g.select(`.${thresholdLineAreaClass}`);\n    }\n\n    if (!this.thresholdLine && thresholdLineArea) {\n      thresholdLineArea.remove();\n\n      return;\n    }\n\n    if (thresholdLineArea?.empty()) {\n      thresholdLineArea = this._g.append('g')\n        .attr('class', thresholdLineAreaClass);\n\n      thresholdLineArea.append('rect')\n        .attr('class', 'threshold-area-rect')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('fill', '#000000')\n        .attr('style', 'pointer-events: none; opacity: .1;');\n\n      const defs = thresholdLineArea.append('defs');\n\n      defs.append('marker')\n        .attr('class', 'threshold-line-marker')\n        .attr('id', `${this._id}-marker-start`)\n        .attr('viewBox', '0 0 6 8')\n        .attr('markerWidth', 6)\n        .attr('markerHeight', 8)\n        .attr('refX', 5)\n        .attr('refY', 4)\n        .attr('orient', 'auto')\n        .append('path')\n        .attr('d', 'M 0 0 L 6 4 L 0 8 z');\n\n      defs.append('marker')\n        .attr('class', 'threshold-line-marker')\n        .attr('id', `${this._id}-marker-end`)\n        .attr('viewBox', '0 0 6 8')\n        .attr('markerWidth', 6)\n        .attr('markerHeight', 8)\n        .attr('refX', 1)\n        .attr('refY', 4)\n        .attr('orient', 'auto')\n        .append('path')\n        .attr('d', 'M 0 4 L 6 0 L 6 8 z');\n\n      thresholdLineArea.append('line')\n        .attr('class', 'threshold-line')\n        .attr('stroke-width', 1)\n        .attr('marker-start', `url(#${this._id}-marker-start)`)\n        .attr('marker-end', `url(#${this._id}-marker-end)`);\n\n      thresholdLineArea.append('text')\n        .attr('class', 'threshold-line-title-background');\n\n      thresholdLineArea.append('text')\n        .attr('class', 'threshold-line-title');\n    }\n\n    const maxTick = this._getTicks().pop(); // get the max tick\n    const chartDataAreaWidth = this._dim.w - this._margin.left - this._margin.right;\n    const chartDataAreaHeight = this._dim.h - this._margin.top - this._margin.bottom;\n    const thresholdLineAreaHeight = chartDataAreaHeight - chartDataAreaHeight / maxTick * this.thresholdLine;\n\n    if (thresholdLineArea) {\n      thresholdLineArea.select('rect.threshold-area-rect')\n        .transition()\n        .duration(this.duration)\n        .attr('transform', `translate(${this._margin.left}, 0)`)\n        .attr('width', chartDataAreaWidth)\n        .attr('height', thresholdLineAreaHeight);\n\n      thresholdLineArea.select('line.threshold-line')\n        .transition()\n        .duration(this.duration)\n        .attr('x1', this._margin.left)\n        .attr('x2', this._dim.w)\n        .attr('y1', thresholdLineAreaHeight)\n        .attr('y2', thresholdLineAreaHeight);\n\n      thresholdLineArea.select('text.threshold-line-title-background')\n        .transition()\n        .duration(this.duration)\n        .attr('x', this._margin.left - 8)\n        .attr('y', thresholdLineAreaHeight)\n        .attr('text-anchor', 'end')\n        .attr('dy', '.32em')\n        .text(this.scientificMode ? new BigNumber(this.thresholdLine).toPrecision(2, 2) : this.thresholdLine);\n\n      thresholdLineArea.select('text.threshold-line-title')\n        .transition()\n        .duration(this.duration)\n        .attr('x', this._margin.left - 8)\n        .attr('y', thresholdLineAreaHeight)\n        .attr('text-anchor', 'end')\n        .attr('dy', '.32em')\n        .text(this.scientificMode ? new BigNumber(this.thresholdLine).toPrecision(2, 2) : this.thresholdLine);\n\n    }\n    // If we have the same tick as the thresholdLine - remove that\n    d3.selectAll('g.tick')\n      .filter(d => d === this.thresholdLine)\n      .remove();\n  }\n\n  private _drawDropShadow(): void {\n    const defs = this._g\n      .append('defs');\n\n    const filter =\n      defs.append('filter')\n        .attr('id', 'drop-shadow')\n        .attr('x', '-50%')\n        .attr('y', '-50%')\n        .attr('width', '180%')\n        .attr('height', '180%')\n        .attr('filterUnits', 'userSpaceOnUse');\n\n    filter\n      .append('feGaussianBlur')\n      .attr('in', 'SourceAlpha')\n      .attr('stdDeviation', 3);\n\n    filter\n      .append('feOffset')\n      .attr('dx', 0)\n      .attr('dy', 1)\n      .attr('result', 'offsetBlur');\n\n    filter\n      .append('feOffset')\n      .attr('dx', 0)\n      .attr('dy', 2)\n      .attr('result', 'offsetBlur');\n\n    filter\n      .append('feColorMatrix')\n      .attr('type', 'matrix')\n      .attr('values', '0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.22 0');\n\n    const feMerge =\n      filter\n        .append('feMerge');\n\n    feMerge\n      .append('feMergeNode');\n\n    feMerge\n      .append('feMergeNode')\n      .attr('in', 'SourceGraphic');\n\n    feMerge\n      .append('feMergeNode')\n      .attr('in', 'SourceGraphic');\n  }\n\n}\n","import {AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation} from '@angular/core';\nimport {Point} from '@angular/cdk/drag-drop';\nimport {asapScheduler, timer} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport BigNumber from 'bignumber.js';\nimport * as d3 from 'd3';\nimport {inRange} from 'lodash-es';\nimport {CutNumberPipe} from '../common/pipes/cut-number.pipe';\nimport {ColorType} from '@bmc-ux/adapt-angular';\nimport {AdaptLineGraphComponent} from '../line-graph/line-graph.component';\nimport {AdaptAreaGraphData, AdaptAreaGraphSeries} from '../common/models/area-graph.model';\nimport {AdaptChartCategoryToggleEvent, AdaptChartDimensions, AdaptChartTooltip} from '../common/models/chart.model';\nimport {AdaptLineGraphDateAndData} from '../common/models/line-graph.model';\n\nlet chartCounter = 1;\n\n@Component({\n  selector: 'adapt-area-graph',\n  templateUrl: '../line-graph/line-graph.component.html',\n  providers: [CutNumberPipe],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AdaptAreaGraphComponent extends AdaptLineGraphComponent implements OnInit, AfterViewInit {\n  @Input() formatXAxisValue: (domainValue: d3.AxisDomain, index: number) => string;\n\n  protected _data: AdaptAreaGraphData[] = [];\n  protected _series: AdaptAreaGraphSeries[] = [];\n  protected circleRadius: number = 4;\n  protected _id: string;\n  private areaOpacity: number = 0.25;\n  private areaOpacityForHovered: number = 0.75;\n\n  /**\n   * Output that emits each time chart category shown\n   * @since 12.11.0\n   */\n  @Output() readonly categoryShow: EventEmitter<AdaptChartCategoryToggleEvent> = new EventEmitter<AdaptChartCategoryToggleEvent>();\n\n  /**\n   * Output that emits each time chart category hidden\n   * @since 12.11.0\n   */\n  @Output() readonly categoryHide: EventEmitter<AdaptChartCategoryToggleEvent> = new EventEmitter<AdaptChartCategoryToggleEvent>();\n\n  @Input() getTooltipXValueTitle(): string {\n    return 'x';\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this._id = `area-graph-${chartCounter++}`;\n  }\n\n  ngAfterViewInit(): void {\n    // The change consists of two line graphs (one is the main, second in the slider),\n    // so need to check the chart view after they both have been drawn\n    timer(0, asapScheduler)\n      .pipe(takeUntil(this._destroy$))\n      .subscribe(() => {\n        this._detectViewChanges();\n      });\n  }\n\n  getXMaxValue(data: AdaptAreaGraphData[]): number {\n    let maxYVal: number = data[0].xyPointData[0].x;\n\n    data.forEach(dataItem => {\n\n      // assume that last value is the biggest value\n      const value = dataItem.xyPointData[dataItem.xyPointData.length - 1].x;\n\n      if (value > maxYVal) {\n        maxYVal = value;\n      }\n    });\n\n    return maxYVal;\n  }\n\n  getXMinValue(data: AdaptAreaGraphData[]): number {\n    let minYVal: number = data[0].xyPointData[0].x;\n\n    data.forEach(dataItem => {\n\n      // assume that first value is the lowest value\n      const value = dataItem.xyPointData[0].x;\n\n      if (value < minYVal) {\n        minYVal = value;\n      }\n    });\n\n    return minYVal;\n  }\n\n  protected getCircleColor(): string {\n    return 'transparent';\n  }\n\n  protected getLineRenderer(): d3.Line<Point> {\n    return d3.line<Point>()\n      .x((d) => this._xPos(d.x))\n      .y((d) => this._y(d.y));\n  }\n\n  protected getXPosFunc(dim: AdaptChartDimensions, domain: (number | string)[] = []): d3.ScaleLinear<number, number> {\n    const [min, max] = domain as number[];\n\n    return d3.scaleLinear()\n      .range([0, dim.w - (this._margin.left + this._margin.right)])\n      .domain([min || this.getXMinValue(this._data), max || this.getXMaxValue(this._data)]);\n  }\n\n  protected getYPosFunc(dim: AdaptChartDimensions, ticksVal: number[]): d3.ScaleLinear<number, number> {\n    return d3.scaleLinear()\n      .range([0, dim.h - this._margin.bottom - this._margin.top])\n      .domain([ticksVal[0], 0]);\n  }\n\n  protected getXAxisLineRenderer(dim: AdaptChartDimensions): d3.Axis<d3.AxisDomain> {\n    const baseRenderer = super.getXAxisLineRenderer(dim);\n\n    const cats = [...this.xAxis.categories];\n\n    if (cats && cats.length) {\n      // for proper rendering with categories\n      const maxX = this.getXMaxValue(this._data);\n      const minX = this.getXMinValue(this._data);\n      const minMaxRange = maxX - minX;\n      const tickStep = minMaxRange / (cats.length - 1);\n\n      let tickValuesArray = cats.map((category, index) => minX + tickStep * index);\n\n      if (this.showSlider && this.sliderDomainData?.length) {\n        const [min, max] = this.sliderDomainData;\n\n        tickValuesArray = tickValuesArray.filter((tick, index) => {\n          if (inRange(tick, min, max)) {\n            return true;\n          }\n\n          cats[index] = null;\n        });\n      }\n\n      return baseRenderer\n        .tickValues(tickValuesArray)\n        .tickFormat((val, ind) => cats.filter(category => !!category)[ind]);\n    }\n\n    if (this.showSlider && this.slidePointsCount) {\n      baseRenderer.ticks(this.slidePointsCount);\n    }\n\n    if (this.formatXAxisValue) {\n      return baseRenderer.tickFormat(this.formatXAxisValue);\n    }\n\n    return baseRenderer;\n  }\n\n  protected mapDataFromSeries(series: AdaptAreaGraphSeries[]): AdaptAreaGraphData[] {\n    return series.map((item): AdaptAreaGraphData => {\n      return {\n        name: item.name,\n        hidden: item.hidden,\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        data: item.data as any[], // not used in area, used in line graph\n        xyPointData: item.data, // used in area\n      };\n    });\n  }\n\n  // TODO check for type improvement\n  // eslint-disable-next-line\n  protected drawAreaForSeries(lineWrapper: d3.Selection<SVGGElement, any, any, any>, dt: AdaptAreaGraphData, i: number): void {\n    lineWrapper.append('path')\n      .datum(dt.xyPointData)\n      .classed('line-graph-transition line-chart-area', true)\n      .attr('clip-path', `url(#${this._id}_clip)`)\n      .attr('fill', this._colors[i])\n      .attr('fill-opacity', this.areaOpacity)\n      .attr('stroke', 'none')\n      .attr('d', this.getAreaFilling())\n      .on('mouseover', (data, ind, group) => {\n        this.fillAreaDarkerColor(group[ind]);\n      })\n      .on('mouseout', (data, ind, group) => {\n        this.fillAreaDefaultColor(group[ind]);\n      });\n  }\n\n  protected onCircleMouseover(circleEl: SVGCircleElement, dt: AdaptAreaGraphData, d: AdaptLineGraphDateAndData): void {\n    super.onCircleMouseover(circleEl, dt, d);\n    this.fillAreaDarkerColor(\n      d3.select(circleEl.closest('.line-chart-line-g')).select('.line-chart-area').node() as SVGPathElement\n    );\n  }\n\n  protected onCircleMouseout(circleEl: SVGCircleElement): void {\n    super.onCircleMouseout(circleEl);\n\n    this.fillAreaDefaultColor(\n      d3.select(circleEl.closest('.line-chart-line-g')).select('.line-chart-area').node() as SVGPathElement\n    );\n  }\n\n  protected getCircleDarkenColor(baseColor: string, circleParentLineSelection: d3.Selection<d3.BaseType, {}, null, undefined>): string {\n    return this._colorService.getDarken(circleParentLineSelection.attr('stroke'), .15, ColorType.HEX);\n  }\n\n  protected getDataForCirclesOrLines(dt: AdaptAreaGraphData): Point[] {\n    return dt.xyPointData;\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  protected setCirclePosition(circleSel: d3.Selection<SVGCircleElement, any, SVGGElement, any>):\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    d3.Selection<SVGCircleElement, any, SVGGElement, any> {\n    return circleSel\n      .attr('cx', (d) => this._xPos(d.x))\n      .attr('cy', (d) => this._y(d.y));\n  }\n\n  protected updateLinesAreas(): void {\n    this._g.selectAll<SVGPathElement, Point>('.line-chart-area').each((dat, i, g) => {\n      d3.select(g[i]).attr('d', this.getAreaFilling());\n    });\n  }\n\n  protected restrictXPosTicks(): void {\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    const ticksCount = (this._x as any).ticks();\n\n    if (this.showSlider && this.slidePointsCount) {\n      this._x = d3.scaleLinear()\n        .range([0, this._dim.w - (this._margin.left + this._margin.right)])\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        .domain([ticksCount[0], ticksCount[this.slidePointsCount]]) as any;\n    }\n  }\n\n  protected getTooltipData(baseColor: string, dt: AdaptAreaGraphData, d: Point): AdaptChartTooltip {\n    return {\n      color: baseColor,\n      category: dt.name,\n      xValue: d.x,\n      yValue: this.scientificMode ? new BigNumber(d.y).toPrecision(2, 2) : d.y,\n    };\n  }\n\n  protected getDataYValues(row: AdaptAreaGraphData): number[] {\n    return row.xyPointData.map((item) => item.y);\n  }\n\n  private get _xPos(): d3.ScaleLinear<number, number> {\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    return this._x as any as d3.ScaleLinear<number, number>;\n  }\n\n  private getAreaFilling(): d3.Area<Point> {\n    return d3.area<Point>()\n      .x((d) => this._xPos(d.x))\n      .y0(this._y(0))\n      .y1((d) => this._y(d.y));\n  }\n\n  private fillAreaDarkerColor(el: SVGPathElement): void {\n    d3.select(el).attr('fill-opacity', this.areaOpacityForHovered);\n  }\n\n  private fillAreaDefaultColor(el: SVGPathElement): void {\n    d3.select(el).attr('fill-opacity', this.areaOpacity);\n  }\n}\n","import {Directive, Input} from '@angular/core';\nimport {AdaptChartAbstract} from './chart.model';\n\n@Directive()\nexport abstract class AdaptPieChartAbstract extends AdaptChartAbstract {\n  @Input() innerRadius?: number;\n  @Input() abstract series: AdaptPieData[];\n}\n\nexport interface AdaptPieData {\n  name: string;\n  hidden?: boolean;\n  y: number;\n}\n\nexport interface AdaptPieClickEvent {\n  event: MouseEvent;\n  data: AdaptPieData;\n  color: string;\n  category: string;\n  value: number;\n  total: number;\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {Point} from '@angular/cdk/drag-drop';\nimport * as d3 from 'd3';\nimport {ChartColorService} from '../common/services/chart-color.service';\nimport {ANIMATION_DURATION, ColorType, isUndefined} from '@bmc-ux/adapt-angular';\nimport {\n  AdaptChartCategoryEvent,\n  AdaptChartCategoryToggleEvent,\n  AdaptChartDimensions,\n  AdaptChartHeader,\n  AdaptChartLegend,\n  AdaptChartLegendState,\n  AdaptSVGGroupElement\n} from '../common/models/chart.model';\nimport {AdaptChartComponent} from '../common/chart.component';\nimport {AdaptPieChartAbstract, AdaptPieClickEvent, AdaptPieData} from '../common/models/pie.model';\n\n\n// TODO fix types\n@Component({\n  selector: 'adapt-pie-chart',\n  template: `\n    <adapt-chart #chart\n                 [width]=\"$this.width\"\n                 [height]=\"$this.height\"\n                 [header]=\"$this.header\"\n                 [legend]=\"$this.legend\"\n                 [data]=\"series\"\n                 [backgroundColor]=\"$this.backgroundColor\"\n                 [suppressHeader]=\"$this.suppressHeader\"\n                 [suppressLegend]=\"$this.suppressLegend\"\n                 [tooltip]=\"$this.tooltip\"\n                 (categoryEnter)=\"categoryEnter($event)\"\n                 (categoryLeave)=\"categoryLeave($event)\"\n                 (categoryMove)=\"categoryMove($event)\"\n                 (categoryShow)=\"categoryShowHandler($event)\"\n                 (categoryHide)=\"categoryHideHandler($event)\"\n                 (clickChart)=\"clickChartArea($event)\"\n                 [noDataText]=\"noDataText\"\n                 [updateChart]=\"_updateChart\"\n                 [dataBuilder]=\"_dataBuilder\"></adapt-chart>\n\n    <ng-template #tooltipTpl let-data=\"data\">\n      <div class=\"adapt-pie-chart-tooltip\">\n        <span [style.background-color]=\"data.color\" class=\"adapt-pie-chart-tooltip__color\"></span>\n        <span class=\"adapt-pie-chart-tooltip__category\">{{data.category}}</span>\n        <b>\n          <span>{{data.value}}</span>\n          <span>({{data.value / data.total | percent}})</span>\n        </b>\n      </div>\n    </ng-template>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AdaptPieChartComponent extends AdaptPieChartAbstract implements OnInit, OnChanges {\n  $this: AdaptPieChartComponent = this;\n\n  @Input() backgroundColor: string;\n  @Input() width: number;\n  @Input() height: number;\n  @Input() header: AdaptChartHeader;\n  @Input() suppressHeader: boolean;\n  @Input() suppressLegend: boolean;\n  @Input() tooltip: string | TemplateRef<unknown>;\n  @Input() dataBuilder: (g: AdaptSVGGroupElement, dim: AdaptChartDimensions) => void;\n  @Input() innerRadius: number;\n  @Input() showLegendTooltip: boolean = false;\n\n  @Input()\n  set series(s: AdaptPieData[]) {\n    this._series = s;\n\n    if (s) {\n      this._updateFilter(s);\n    }\n\n    if (this.alreadyChanged) {\n      const options = this.chartComponent.getGroupAndDimensions();\n\n      this._g = options.group;\n      this._dim = {\n        w: options.w,\n        h: options.h\n      };\n    }\n\n    if (this._g && this._dim && this.chartComponent) {\n      this.chartComponent.updateLegend(this.series.map((item) => ({\n        item: item.name,\n        hidden: !!item.hidden,\n        hover: false\n      })));\n    }\n  }\n\n  get series(): AdaptPieData[] {\n    return this._series;\n  }\n\n  @Output() readonly clickChart: EventEmitter<AdaptPieClickEvent> = new EventEmitter<AdaptPieClickEvent>();\n\n  /**\n   * Output that emits each time chart category shown\n   * @since 12.11.0\n   */\n  @Output() readonly categoryShow: EventEmitter<AdaptChartCategoryToggleEvent> = new EventEmitter<AdaptChartCategoryToggleEvent>();\n\n  /**\n   * Output that emits each time chart category hidden\n   * @since 12.11.0\n   */\n  @Output() readonly categoryHide: EventEmitter<AdaptChartCategoryToggleEvent> = new EventEmitter<AdaptChartCategoryToggleEvent>();\n\n  @Input()\n  set legend(legend: AdaptChartLegend) {\n    this._legend = Object.assign(this._legend, legend);\n  }\n\n  get legend(): AdaptChartLegend {\n    return {\n      customColors: this._legend.customColors,\n      activeHover: this._legend.activeHover,\n      activeClick: this._legend.activeClick,\n      columns: this._legend.columns,\n      width: this._legend.width,\n      items: (this.series && this.series.map((series) => ({\n        item: series.name,\n        hidden: !!series.hidden\n      })) as AdaptChartLegendState[])\n    };\n  }\n\n  get duration(): number {\n    return parseFloat(ANIMATION_DURATION.fast) * 1000;\n  }\n\n  @ViewChild(AdaptChartComponent, {static: true}) chartComponent: AdaptChartComponent;\n  @ViewChild('chart', {static: true}) chart: ElementRef;\n  @ViewChild('tooltipTpl', {static: true}) tooltipTemplate: string | TemplateRef<unknown>;\n\n  alreadyChanged: boolean = false;\n  total: number;\n\n  _dataBuilder: (g: AdaptSVGGroupElement, dim: AdaptChartDimensions) => void = (function (g: AdaptSVGGroupElement, dim: AdaptChartDimensions) {\n    this._clear();\n    this._g = g;\n    this._dim = dim;\n    this._renderChart();\n  }).bind(this);\n\n  // TODO check if it can be refactored\n  _updateChart: () => void = (function () {\n    /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n    const __this = this;\n    const oldData = this._pie(this._data);\n    const data = this.series.map((d: AdaptPieData) => {\n      return {\n        name: d.name,\n        y: this._filter.indexOf(d.name) === -1 ? d.y : 0\n      };\n    });\n\n    this.total = data.reduce((acc, cur) => {\n      acc += cur.y;\n\n      return acc;\n    }, 0);\n    this._initData();\n    this._path = this._path.data(this._pie(this._data));\n    this._path\n      .transition()\n      .duration(this.duration)\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .attrTween('d', function (d: any, index: number) {\n        const startInter = d3.interpolate(oldData[index].startAngle, d.startAngle);\n        const endInter = d3.interpolate(oldData[index].endAngle, d.endAngle);\n\n        return function (t: number) {\n          d.startAngle = startInter(t);\n          d.endAngle = endInter(t);\n\n          return __this._arc(d);\n        };\n      });\n\n    if (this.innerRadius > 1) {\n      this._g\n        .selectAll('.adapt-pie-chart-main-label-sum')\n        .text(`${this.total}`);\n    }\n  }).bind(this);\n\n  private donutProportion: number = 16 / 25;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _g: any;\n  private _radius: number;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _pie: d3.Pie<any, number | { valueOf(): number }>;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _colors: any;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _data: any;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _arc: any;\n  private _initialColor: string;\n  private _dim: AdaptChartDimensions;\n  private _filter: string[] = [];\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _path: any;\n  private _cls: {\n    arc: string;\n    arcPart: string;\n    segment: string;\n    sectorIdentifier: string;\n    summary: string;\n    summaryLabel: string;\n    summaryText: string;\n  } = {\n    arc: 'arc',\n    arcPart: 'arc-part',\n    segment: 'arc-segment',\n    sectorIdentifier: 'adapt-pie-chart-sector',\n    summary: 'adapt-pie-chart-summary',\n    summaryLabel: 'adapt-pie-chart-main-label',\n    summaryText: 'adapt-pie-chart-main-label-sum'\n  };\n  private _legend: AdaptChartLegend = {\n    columns: 1,\n    activeHover: true,\n    activeClick: true,\n    width: 250,\n    customColors: null,\n    items: []\n  };\n  private _series: AdaptPieData[] = [];\n  private _legendTooltipPoint: Point = {x: 0, y: 0};\n\n  constructor(private _colorService: ChartColorService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.header) {\n      this.header.allowHideLegend = false;\n    }\n  }\n\n  ngOnChanges(): void {\n    if (this.alreadyChanged && this._g && this._dim) {\n      this._data = [];\n      this._updateFilter(this.series);\n      this._clear();\n      this._renderChart();\n      this._updateChart();\n    }\n\n    this.alreadyChanged = true;\n  }\n\n  categoryEnter(categoryEvent: AdaptChartCategoryEvent): void {\n    const group = this._g.select(`#adapt-pie-chart-sector-${categoryEvent.id}`);\n    const color = group.attr('fill');\n    const hoverColor = this._colorService.getDarken(color, .15, ColorType.HEX);\n\n    this._initialColor = color;\n\n    group.attr('fill', hoverColor);\n\n    if (this.showLegendTooltip) {\n      this._legendTooltipPoint.x = categoryEvent.event.clientX;\n      this._legendTooltipPoint.y = categoryEvent.event.clientY;\n\n      const id = categoryEvent.id;\n      const tooltipTpl = this.tooltip || this.tooltipTemplate;\n      const data = this.series.map((d: AdaptPieData) => {\n        return {\n          name: d.name,\n          y: this._filter.indexOf(d.name) === -1 ? d.y : 0\n        };\n      });\n\n      this.chartComponent.showTooltip(this._legendTooltipPoint, tooltipTpl, {\n        data: {\n          color: this._legend.customColors ? this._getCustomColorById(id) : this._colorService.getColor(id),\n          category: data[id].name,\n          value: this.series[id].y,\n          total: this.total,\n          data: this.series[id],\n          event: categoryEvent.event\n        }\n      });\n    }\n  }\n\n  categoryLeave(categoryEvent: AdaptChartCategoryEvent): void {\n    const group = this._g.select(`#adapt-pie-chart-sector-${categoryEvent.id}`);\n\n    group.attr('fill', this._initialColor);\n\n    if (this.showLegendTooltip) {\n      this.chartComponent.hideTooltip();\n    }\n  }\n\n  categoryMove(categoryEvent: AdaptChartCategoryEvent): void {\n    this._legendTooltipPoint.x = categoryEvent.event.clientX;\n    this._legendTooltipPoint.y = categoryEvent.event.clientY;\n\n    this.chartComponent.updateTooltip();\n  }\n\n  categoryShowHandler(category: string): void {\n    const categoryId = this._filter.indexOf(category);\n\n    if (categoryId !== -1) {\n      this._filter.splice(categoryId, 1);\n      this._updateChart();\n    }\n\n    this.categoryShow.emit({category});\n  }\n\n  categoryHideHandler(category: string): void {\n    this._filter.push(category);\n    this._updateChart();\n\n    this.categoryHide.emit({category});\n  }\n\n  clickChartArea(e: MouseEvent): void {\n    const target = e.target as HTMLElement;\n    const isSector = target.classList.contains(this._cls.segment);\n\n    if (isSector) {\n      const id = (target.parentNode as HTMLElement)?.getAttribute('id');\n      const index = id.split('-').reverse()[0];\n      const total = this.series.reduce((acc, v) => acc + v.y, 0);\n      const color = d3.select(target.parentNode).attr('fill');\n\n      this.clickChart.emit({\n        event: e,\n        data: this.series[index],\n        color,\n        category: this.series[index].name,\n        value: this.series[index].y,\n        total\n      });\n    }\n  }\n\n  private _renderChart(): void {\n    this._initData();\n\n    if (this.innerRadius > 0) {\n      this._addSummary();\n    }\n\n    this._createColor();\n    this._createPie();\n    this._createDataChart();\n  }\n\n  private _initData(): void {\n    this._data = this.series.map((d: AdaptPieData) => this._filter.indexOf(d.name) === -1 ? d.y : 0);\n  }\n\n  private _createColor(): void {\n    this._colors = this._data.map((d, id) => {\n      return this._legend.customColors ? this._getCustomColorById(id) : this._colorService.getColor(id);\n    });\n    this._radius = Math.min(this._dim.w, this._dim.h) / 2;\n    this._g.attr('transform', `translate(${this._radius} ${this._radius})`);\n    this._arc = d3.arc()\n      .innerRadius(this._getInnerRadius())\n      .outerRadius(this._radius);\n  }\n\n  private _createPie(): void {\n    this._pie = d3.pie()\n      .sort(null);\n  }\n\n  private _createDataChart(): void {\n    /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n    const __this = this;\n    const tooltipTpl = this.tooltip || this.tooltipTemplate;\n    const data = this.series.map((d: AdaptPieData) => {\n      return {\n        name: d.name,\n        y: this._filter.indexOf(d.name) === -1 ? d.y : 0\n      };\n    });\n    const arc = this._g.selectAll(`.${this._cls.arc}`)\n      .data(this._pie(this._data))\n      .enter()\n      .each((d) => {\n        d.outerRadius = this._radius;\n      })\n      .append('g')\n      .attr('class', this._cls.arcPart)\n      .attr('id', (d, id) => `${this._cls.sectorIdentifier}-${id}`)\n      .attr('fill', (d, colorId) => this._colors[colorId]);\n\n    this.total = data.reduce((acc, cur) => {\n      acc += cur.y;\n\n      return acc;\n    }, 0);\n\n    this._path = arc.append('path')\n      .attr('class', this._cls.segment)\n      .attr('d', this._arc);\n\n    const tooltipAnchorPoint: Point = {x: 0, y: 0};\n\n    this._path.on('mouseenter', (d) => {\n      const {clientX, clientY} = d3.event;\n      const {index, value} = d;\n\n      tooltipAnchorPoint.x = clientX;\n      tooltipAnchorPoint.y = clientY;\n\n      this.chartComponent.showTooltip(tooltipAnchorPoint, tooltipTpl, {\n        data: {\n          color: __this._legend.customColors ? __this._getCustomColorById(index) : __this._colorService.getColor(index),\n          category: data[index].name,\n          value: value,\n          total: this.total,\n          data: __this.series[index],\n          event: d3.event\n        }\n      });\n    });\n\n    this._path.on('mousemove', () => {\n      const {clientX, clientY} = d3.event;\n\n      tooltipAnchorPoint.x = clientX;\n      tooltipAnchorPoint.y = clientY;\n\n      this.chartComponent.updateTooltip();\n    });\n\n    arc.on('mouseenter', function () {\n      __this._initialColor = d3.select(this)\n        .attr('fill');\n\n      d3.select(this)\n        .attr('fill', __this._colorService.getDarken(__this._initialColor, .15, ColorType.HEX));\n    })\n      .on('mouseout', function () {\n        __this.chartComponent.hideTooltip();\n\n        d3.select(this)\n          .attr('fill', __this._initialColor);\n      });\n  }\n\n  private _getInnerRadius(): number {\n    const maxInnerRadius = this._radius * (1 + this.donutProportion) / 2;\n    let minInnerRadius = this._radius * (1 - (1 - this.donutProportion) * 2);\n    let innerRadius = 0;\n\n    if (this.innerRadius > 0) {\n      const node = this._g\n        .select(`.${this._cls.summary}`)\n        .node();\n      const width = node ? node.getBoundingClientRect().width : 0;\n\n      minInnerRadius = Math.floor(width / 2) + 15;\n    }\n\n    if (!isUndefined(this.innerRadius) || this.innerRadius > 0) {\n      innerRadius = this.innerRadius;\n      innerRadius = innerRadius < minInnerRadius ? minInnerRadius : innerRadius;\n      innerRadius = innerRadius > maxInnerRadius ? maxInnerRadius : innerRadius;\n    }\n\n    return innerRadius;\n  }\n\n  private _clear(): void {\n    if (this._g) {\n      this._g.selectAll('*').remove();\n    }\n  }\n\n  private _addSummary(): void {\n    const data = this.series.map((d: AdaptPieData) => {\n      return {\n        name: d.name,\n        y: this._filter.indexOf(d.name) === -1 ? d.y : 0\n      };\n    });\n    const text = this._g\n      .append('text')\n      .attr('class', this._cls.summary);\n\n    this.total = data.reduce((acc, cur) => {\n      acc += cur.y;\n\n      return acc;\n    }, 0);\n\n    text.append('tspan')\n      .attr('text-anchor', 'middle')\n      .attr('x', 0)\n      .attr('y', '-.4em')\n      .attr('class', this._cls.summaryLabel)\n      .text('Total');\n\n    text.append('tspan')\n      .attr('text-anchor', 'middle')\n      .attr('x', 0)\n      .attr('y', '.8em')\n      .attr('class', this._cls.summaryText)\n      .text(`${this.total}`);\n  }\n\n  private _getCustomColorById(id: number): string {\n    const customColors = this._legend.customColors;\n    const len = customColors.length;\n    const index = id % len;\n\n    return customColors[index];\n  }\n\n  private _updateFilter(series: AdaptPieData[]): void {\n    this._filter = [];\n\n    series.forEach(s => {\n      if (s.hidden) {\n        this._filter.push(s.name);\n      }\n    });\n  }\n}\n","import {Directive, Input} from '@angular/core';\nimport {AdaptChartAbstract, AdaptChartAxis, AdaptChartSeries} from './chart.model';\n\n@Directive()\nexport abstract class AdaptScatterPlotAbstract<T> extends AdaptChartAbstract {\n  @Input() xAxis?: AdaptChartAxis;\n  @Input() yAxis?: AdaptChartAxis;\n  @Input() abstract series: AdaptChartSeries<T>[];\n  @Input() hideAxises?: boolean;\n}\n\nexport interface AdaptScatterPlotData {\n  name: string;\n  hidden?: boolean;\n  color?: string;\n  data: number[][];\n}\n","<adapt-chart [width]=\"width\"\n             [height]=\"height\"\n             [header]=\"header\"\n             [data]=\"series\"\n             [dataBuilder]=\"_dataBuilder\"\n             [legend]=\"legend\"\n             [updateChart]=\"_updateChart\"\n             [backgroundColor]=\"backgroundColor\"\n             [suppressHeader]=\"suppressHeader\"\n             [suppressLegend]=\"suppressLegend\"\n             [noDataText]=\"noDataText\"\n             (categoryShow)=\"categoryShowHandler($event)\"\n             (categoryHide)=\"categoryHideHandler($event)\"\n             (categoryEnter)=\"categoryEnter($event)\"\n             (categoryLeave)=\"categoryLeave()\"\n></adapt-chart>\n\n<ng-template #tooltipTpl let-data=\"data\">\n  <div class=\"chart-tooltip-content-container\">\n    <div class=\"chart-tooltip-content-wrapper\">\n      <span class=\"chart-tooltip-color-spot\" [style.background]=\"data?.color\"></span>\n      <span class=\"chart-tooltip-category\">{{ data?.category }}</span>\n    </div>\n    <div>\n      {{xAxis?.title}}:\n      <span><b>{{data.xValue}}</b></span>\n    </div>\n\n    <div>\n      {{yAxis?.title}}:\n      <span><b>{{data.yValue}}</b></span>\n    </div>\n  </div>\n</ng-template>\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild, ViewEncapsulation} from '@angular/core';\nimport BigNumber from 'bignumber.js';\n// eslint-disable-next-line no-duplicate-imports, @typescript-eslint/no-unused-vars\nimport * as d3 from 'd3';\nimport {CutNumberPipe} from '../common/pipes/cut-number.pipe';\nimport {ChartColorService} from '../common/services/chart-color.service';\nimport {AdaptChartComponent} from '../common/chart.component';\nimport {\n  AdaptChartAxis,\n  AdaptChartBoundaries,\n  AdaptChartCategoryEvent,\n  AdaptChartCategoryToggleEvent,\n  AdaptChartDimensions,\n  AdaptChartHeader,\n  AdaptChartLegend,\n  AdaptChartLegendState,\n  AdaptSVGGroupElement\n} from '../common/models/chart.model';\n\nimport {AdaptDeviceDetectionService, ANIMATION_DURATION, ColorType} from '@bmc-ux/adapt-angular';\nimport {AdaptScatterPlotAbstract, AdaptScatterPlotData} from '../common/models/scatter-plot.model';\n\n\n@Component({\n  selector: 'adapt-scatter-plot',\n  templateUrl: './scatter-plot.component.html',\n  providers: [CutNumberPipe],\n  encapsulation: ViewEncapsulation.None\n})\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nexport class AdaptScatterPlotComponent extends AdaptScatterPlotAbstract<any> implements OnInit {\n  alreadyChanged: boolean = false;\n\n  @Input() backgroundColor: string;\n  @Input() width: number;\n  @Input() height: number;\n  @Input() header: AdaptChartHeader;\n\n  @Input() set series(s: AdaptScatterPlotData[]) {\n    this._series = s;\n\n    this._isDeselected = [];\n\n    s.forEach(series => {\n      if (series.hidden) {\n        this._isDeselected.push(series.name);\n      }\n    });\n\n    if (this.alreadyChanged) {\n      const options = this.chartComponent.getGroupAndDimensions();\n\n      this._g = options.group;\n      this._dim = {\n        w: options.w,\n        h: options.h\n      };\n    }\n\n    if (this._g && this._dim && this.chartComponent) {\n      this.chartComponent.updateLegend(this.series.map((item) => item.name));\n    }\n  }\n\n  get series(): AdaptScatterPlotData[] {\n    return this._series;\n  }\n\n  @Input() xAxis: AdaptChartAxis;\n  @Input() yAxis: AdaptChartAxis;\n  @Input() noDataText: string;\n\n  @Input()\n  set legend(legend: AdaptChartLegend) {\n    this._legend = Object.assign(this._legend, legend);\n\n    if (this.alreadyChanged) {\n      this.chartComponent.redrawChart();\n    }\n  }\n\n  get legend(): AdaptChartLegend {\n    return {\n      customColors: this._legend.customColors,\n      activeHover: this._legend.activeHover,\n      activeClick: this._legend.activeClick,\n      columns: this._legend.columns,\n      width: this._legend.width,\n      items: (this.series && this.series.map((series) => ({\n        item: series.name,\n        hidden: !!series.hidden\n      })) as AdaptChartLegendState[])\n    };\n  }\n\n  @Input() suppressHeader: boolean;\n  @Input() suppressLegend: boolean;\n  @Input() tooltip: string | TemplateRef<unknown>;\n  @Input() dataBuilder: (g: AdaptSVGGroupElement, dim: AdaptChartDimensions) => void;\n  @Input() updateChart: (g: AdaptSVGGroupElement, dim: AdaptChartDimensions) => void;\n  @Input() scientificMode: boolean = false;\n\n\n  @Output() readonly clickChart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * Output that emits each time chart category shown\n   * @since 12.11.0\n   */\n  @Output() readonly categoryShow: EventEmitter<AdaptChartCategoryToggleEvent> = new EventEmitter<AdaptChartCategoryToggleEvent>();\n\n  /**\n   * Output that emits each time chart category hidden\n   * @since 12.11.0\n   */\n  @Output() readonly categoryHide: EventEmitter<AdaptChartCategoryToggleEvent> = new EventEmitter<AdaptChartCategoryToggleEvent>();\n\n  @ViewChild('tooltipTpl', {static: true}) tooltipTemplate: string | TemplateRef<unknown>;\n  @ViewChild(AdaptChartComponent, {static: true}) chartComponent: AdaptChartComponent;\n\n  private _series: AdaptScatterPlotData[] = [];\n  private _highLightColor: string;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _regLine: any;\n  private _margin: AdaptChartBoundaries = {\n    top: 0,\n    right: 0,\n    bottom: 25,\n    left: 30\n  };\n  private _dim: AdaptChartDimensions;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _g: any;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _gW: any;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _x: any;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _y: any;\n  private _line: d3.Line<[number, number]>;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _colors: any[] = [];\n\n  private _axisShift: AdaptChartBoundaries = {\n    top: 0,\n    right: 0,\n    bottom: 25,\n    left: 25\n  };\n  private _axisScientificLeftShift: number = 60;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _generatedData: any[] = [];\n  private _isDeselected: string[] = [];\n\n  private _legend: AdaptChartLegend = {\n    columns: 1,\n    activeHover: true,\n    activeClick: true,\n    width: 250,\n    customColors: null,\n    items: []\n  };\n\n  get duration(): number {\n    return parseFloat(ANIMATION_DURATION.fast) * 1000;\n  }\n\n  get axisShiftLeft(): number {\n    return this.scientificMode ? this._axisScientificLeftShift : this._axisShift.left;\n  }\n\n  constructor(private _cutNumber: CutNumberPipe,\n              private _deviceDetectionService: AdaptDeviceDetectionService,\n              private _colorService: ChartColorService) {\n    super();\n  }\n\n  _updateChart: (dim: AdaptChartDimensions) => void = (dim: AdaptChartDimensions): void => {\n    this._updatedScatterChart(dim);\n  };\n\n  _dataBuilder: (g: AdaptSVGGroupElement, dim: AdaptChartDimensions) => void = (g: AdaptSVGGroupElement, dim: AdaptChartDimensions): void => {\n    this._g = g;\n    this._dim = dim;\n    this._initAxis(g, dim);\n    this._drawLines(g);\n    this._drawDropShadow();\n  };\n\n  ngOnInit(): void {\n    if (this.isMobile()) {\n      this._margin.left = 40;\n    }\n\n    if (this.xAxis && this.xAxis.title) {\n      this._margin.bottom += this._axisShift.bottom;\n    }\n\n    if (this.yAxis && this.yAxis.title) {\n      this._margin.left += this.axisShiftLeft;\n    }\n\n    this.alreadyChanged = true;\n  }\n\n  isMobile(): boolean {\n    return this._deviceDetectionService.deviceMobile() || this._deviceDetectionService.deviceTablet();\n  }\n\n  categoryShowHandler(category: string): void {\n    const ind = this._isDeselected.indexOf(category);\n\n    if (ind !== -1) {\n      this._isDeselected.splice(ind, 1);\n    }\n\n    this._updatedScatterChart(this._dim);\n\n    this.series.forEach((item, index) => {\n      if (item.name.indexOf(category) !== -1) {\n        item.hidden = false;\n\n        this._g\n          .select(`[data-line-graph-id='${index}']`)\n          .style('transition', 'all .3s ease')\n          .style('opacity', '1')\n          .style('visibility', 'visible')\n          .attr('data-disabled', 'false');\n      }\n    });\n\n    this.categoryShow.emit({category});\n  }\n\n  categoryHideHandler(category: string): void {\n    /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n    const _self = this;\n\n    this._isDeselected.push(category);\n\n    this.series.forEach((item, index) => {\n      if (item.name.indexOf(category) !== -1) {\n        item.hidden = true;\n\n        this._g\n          .select(`[data-line-graph-id='${index}']`)\n          .style('transition', 'all .3s ease')\n          .style('opacity', '0')\n          .style('visibility', 'hidden');\n      }\n    });\n\n    d3.selectAll('.scatter-regression-line')\n      .each(function () {\n        if (d3.select(this).attr('id') === _self._highLightColor) {\n          _self._regLine = d3.select(this);\n          _self._regLine\n            .style('visibility', 'hidden')\n            .style('opacity', '0');\n        }\n      });\n\n    this._updatedScatterChart(this._dim);\n\n    this.categoryHide.emit({category});\n  }\n\n  categoryEnter(categoryEvent: AdaptChartCategoryEvent): void {\n    /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n    const _self = this;\n    const ind = this._isDeselected.indexOf(this.series[categoryEvent.id].name);\n\n    if (ind === -1) {\n      const selectedLine = this._g.select(`[data-line-graph-id='${categoryEvent.id}']  .scatter-plot-circle`);\n      const colorLine = selectedLine.attr('fill');\n      const colorHexLine = _self._colorService.getDarken(colorLine, .22, ColorType.HEX);\n\n      this._highLightColor = colorLine;\n\n      d3.selectAll('.scatter-plot-circle-wrapper .scatter-plot-circle').each(function () {\n        if (d3.select(this).attr('fill').toLowerCase().trim() !== colorLine.toLowerCase().trim()) {\n          d3.select(this).classed('scatter-transition', true).attr('r', 3.5);\n        }\n      });\n\n      d3.selectAll('.scatter-chart-line-g').each(function () {\n        if (d3.select(this).attr('id').toLowerCase().trim() === colorLine.toLowerCase().trim() &&\n          (this as HTMLElement).nextElementSibling !== null) {\n          (this as HTMLElement).parentNode.appendChild((this as HTMLElement));\n        }\n      });\n\n      d3.selectAll('.scatter-regression-line').each(function () {\n        if (d3.select(this).attr('id').toLowerCase().trim() === colorLine.toLowerCase().trim()) {\n          _self._regLine = d3.select(this);\n          _self._regLine\n            .style('visibility', 'visible')\n            .attr('stroke', colorHexLine)\n            .style('opacity', '1');\n        }\n      });\n    }\n  }\n\n  categoryLeave(): void {\n    /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n    const _self = this;\n\n    d3.selectAll('.scatter-plot-circle-wrapper .scatter-plot-circle').each(function () {\n      if (d3.select(this).attr('fill').toLowerCase().trim() !== _self._highLightColor?.toLowerCase().trim()) {\n        d3.select(this).classed('scatter-transition', false).attr('r', 5);\n      }\n    });\n\n    if (this._regLine) {\n      this._regLine\n        .attr('stroke', this._highLightColor)\n        .style('visibility', 'hidden')\n        .style('opacity', '0');\n    }\n  }\n\n  private _getCustomColorById(id: number): string {\n    const customColors = this.legend.customColors;\n    const len = customColors.length;\n    const index = id % len;\n\n    return customColors[index];\n  }\n\n  private _updatedScatterChart(dim: AdaptChartDimensions): void {\n    this._generatedData = [];\n    this._updateAxis(dim);\n    this._updateDataLines();\n  }\n\n  private _initAxis(g: AdaptSVGGroupElement, dim: AdaptChartDimensions): void {\n    this._generatedData = [];\n\n    if (this.series) {\n\n      this.series.forEach(dt => dt.data.map(d => this._generatedData.push({data1: d[0], data2: d[1]})));\n\n      if (this.yAxis && this.yAxis.title) {\n        g.append('g')\n          .attr('class', 'adapt-chart-axis-title')\n          .attr('transform', `rotate(-90) translate(-${(dim.h - this._axisShift.bottom) / 2} ${this.axisShiftLeft / 4})`)\n          .append('text')\n          .text(this.yAxis.title)\n          .attr('text-anchor', 'middle')\n          .attr('transform', `translate(${(this._axisShift.bottom / 2)} 0)`);\n      }\n\n      if (this.xAxis && this.xAxis.title) {\n        g.append('g')\n          .attr('class', 'adapt-chart-axis-title adapt-chart-axis-title--x')\n          .attr('transform', `translate(${(dim.w + this.axisShiftLeft) / 2} ${dim.h})`)\n          .append('text')\n          .text(this.xAxis.title)\n          .attr('text-anchor', 'middle')\n          .attr('transform', `translate(${(this.axisShiftLeft)} 0)`);\n      }\n\n\n      this._x = d3\n        .scaleLinear()\n        .domain([d3.min(this._generatedData, (d) => d.data1), d3.max(this._generatedData, (d) => d.data1)])\n        .range([0, dim.w - (this._margin.left + this._margin.right)]);\n\n      this._y = d3\n        .scaleLinear()\n        .domain([d3.min(this._generatedData, (d) => d.data2), d3.max(this._generatedData, (d) => d.data2)])\n        .range([dim.h - this._margin.top - this._margin.bottom, 0]);\n\n      g.append('g')\n        .attr('class', 'axis axis--y')\n        .attr('transform', `translate(${this._margin.left}, 0)`)\n        .transition()\n        .duration(this.duration)\n        .call(\n          d3.axisLeft(this._y)\n            .ticks(7)\n            .tickPadding(10)\n            .tickFormat((d: number) => this._getTickFormatForNumber(d))\n            .tickSize(-dim.w + (this._margin.left + this._margin.right))\n            .tickSizeOuter(0));\n\n      g.append('g')\n        .attr('class', 'axis axis--x')\n        .attr('transform', `translate(${this._margin.left}, ${dim.h - this._margin.top - this._margin.bottom})`)\n        .transition()\n        .duration(this.duration)\n        .call(\n          d3.axisBottom(this._x)\n            .tickPadding(10)\n            .tickFormat((d: number) => this._getTickFormatForNumber(d))\n            .tickSize(-dim.h + (this._margin.top + this._margin.bottom))\n            .tickSizeOuter(0));\n\n      const xAxis = this._generatedData.map(d => d.data1);\n      const yAxis = this._generatedData.map(d => d.data2);\n      const regression = this._leastSquaresequation(xAxis, yAxis);\n\n      this._line = d3.line()\n        .x((d) => this._x(d['data1']))\n        .y((d) => this._y(regression(d['data1'])));\n    }\n\n  }\n\n  private _updateAxis(dim: AdaptChartDimensions): void {\n    this.series.forEach(dt => dt.data.map(d => {\n      if (this._isDeselected.indexOf(dt.name) === -1) {\n        return this._generatedData.push({data1: d[0], data2: d[1]});\n      }\n    }));\n\n    this._g.select('.adapt-chart-axis-title--x')\n      .transition()\n      .duration(this.duration)\n      .attr('transform', `translate(${(dim.w + this.axisShiftLeft) / 2} ${dim.h})`);\n\n    this._x = d3\n      .scaleLinear()\n      .domain([d3.min(this._generatedData, (d) => d.data1), d3.max(this._generatedData, (d) => d.data1)])\n      .range([0, dim.w - (this._margin.left + this._margin.right)]);\n\n    this._g.select('.axis--x')\n      .transition()\n      .duration(this.duration)\n      .attr('transform', `translate(${this._margin.left}, ${dim.h - this._margin.top - this._margin.bottom})`)\n      .call(\n        d3.axisBottom(this._x)\n          .tickPadding(10)\n          .tickFormat((d: number) => this._getTickFormatForNumber(d))\n          .tickSize(-dim.h + (this._margin.top + this._margin.bottom))\n          .tickSizeOuter(0));\n\n    this._y = d3\n      .scaleLinear()\n      .domain([d3.min(this._generatedData, (d) => d.data2), d3.max(this._generatedData, (d) => d.data2)])\n      .range([dim.h - this._margin.top - this._margin.bottom, 0]);\n\n    this._g.select('.axis--y')\n      .transition()\n      .duration(this.duration)\n      .attr('transform', `translate(${this._margin.left}, 0)`)\n      .call(\n        d3.axisLeft(this._y)\n          .ticks(7)\n          .tickPadding(10)\n          .tickFormat((d: number) => this._getTickFormatForNumber(d))\n          .tickSize(-dim.w + (this._margin.left + this._margin.right))\n          .tickSizeOuter(0));\n\n\n    const xAxis = this._generatedData.map(d => d.data1);\n    const yAxis = this._generatedData.map(d => d.data2);\n    const regression = this._leastSquaresequation(xAxis, yAxis);\n\n    this._line = d3.line()\n      .x((d) => this._x(d['data1']))\n      .y((d) => this._y(regression(d['data1'])));\n  }\n\n  private _updateDataLines(): void {\n    this._g.selectAll('.scatter-plot-circle').attr('cx', (d) => this._x(d.data1)).attr('cy', (d) => this._y(d.data2));\n    this._g.selectAll('.scatter-regression-line').attr('d', this._line);\n  }\n\n  private _drawLines(g: AdaptSVGGroupElement): void {\n    /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n    const _self = this;\n    let baseColor: string;\n    let colorHex: string;\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    let regLine: any;\n    let colorHexLine: string;\n\n    this._gW = g.append('g')\n      .attr('transform', `translate(${this._margin.left}, 0)`);\n\n    if (this.series) {\n      this._colors = [];\n\n      this.series.map((dt, i) =>\n        this._colors.push(this.legend.customColors ? this._getCustomColorById(i) : this._colorService.getColor(i)));\n\n      this.series.forEach((dt, i) => {\n        this._generatedData = dt.data.map(d => {\n          return {\n            data1: d[0],\n            data2: d[1]\n          };\n        });\n\n        g.append('g')\n          .attr('transform', `translate(${this._margin.left}, 0)`)\n          .append('path')\n          .datum(this._generatedData)\n          .attr('id', this._colors[i])\n          .attr('stroke', this._colors[i])\n          .attr('fill', 'none')\n          .attr('stroke-width', '2px')\n          .classed('scatter-regression-line', true)\n          .style('opacity', '0')\n          .style('visibility', 'hidden')\n          .attr('d', this._line);\n\n        const lineWrapper =\n          this._gW\n            .append('g')\n            .attr('class', 'scatter-chart-line-g')\n            .style('opacity', dt.hidden ? 0 : 1)\n            .style('visibility', dt.hidden ? 'hidden' : 'visible')\n            .attr('id', this._colors[i])\n            .attr('data-line-graph-id', i);\n\n        lineWrapper\n          .append('g')\n          .attr('class', 'scatter-plot-circle-wrapper')\n          .attr('id', this._colors[i])\n          .selectAll('dots')\n          .data(this._generatedData)\n          .enter()\n          .append('circle')\n          .attr('r', 5)\n          .attr('class', 'scatter-plot-circle')\n          .attr('fill', this._colors[i])\n          .attr('cx', (d) => this._x(d.data1))\n          .attr('cy', (d) => this._y(d.data2))\n          /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n          .on('mouseover', function (d: any) {\n            const __this = d3.select(this);\n\n            baseColor = __this.attr('fill');\n            colorHex = _self._colorService.getDarken(baseColor, .15, ColorType.HEX);\n            colorHexLine = _self._colorService.getDarken(baseColor, .22, ColorType.HEX);\n\n            d3.selectAll('.scatter-plot-circle-wrapper .scatter-plot-circle').each(function () {\n              if (d3.select(this).attr('fill') !== baseColor) {\n                d3.select(this)\n                  .classed('scatter-transition', true)\n                  .attr('r', 3.5);\n              }\n            });\n\n            d3.selectAll('.scatter-chart-line-g').each(function () {\n              if (d3.select(this).attr('id') === baseColor && (this as HTMLElement).nextElementSibling !== null) {\n                (this as HTMLElement).parentNode.appendChild((this as HTMLElement));\n              }\n            });\n\n            d3.selectAll('.scatter-regression-line').each(function () {\n              if (d3.select(this).attr('id').toLowerCase().trim() === baseColor.toLowerCase().trim()) {\n                regLine = d3.select(this);\n                regLine\n                  .style('visibility', 'visible')\n                  .attr('stroke', colorHexLine)\n                  .style('opacity', '1');\n              }\n            });\n\n            __this\n              .attr('r', 7)\n              .style('opacity', '1')\n              .style('filter', 'url(#drop-shadow)')\n              .attr('fill', colorHex);\n\n            _self.chartComponent.showTooltip(d3.event.target, _self.tooltipTemplate, {\n              data: {\n                color: baseColor,\n                category: dt.name,\n                xValue: _self.scientificMode ? new BigNumber(d.data1).toPrecision(2, 2) : d.data1,\n                yValue: _self.scientificMode ? new BigNumber(d.data2).toPrecision(2, 2) : d.data2,\n              }\n            });\n          })\n          .on('mouseout', function () {\n            d3.selectAll('.scatter-plot-circle-wrapper .scatter-plot-circle').each(function () {\n              if (d3.select(this).attr('fill').toLowerCase().trim() !== baseColor.toLowerCase().trim()) {\n                d3.select(this)\n                  .classed('scatter-transition', false)\n                  .attr('r', 5);\n              }\n            });\n\n            regLine\n              .attr('stroke', baseColor)\n              .style('visibility', 'hidden')\n              .style('opacity', '0');\n\n            d3.select(this)\n              .style('opacity', '.8')\n              .style('filter', null)\n              .attr('fill', baseColor);\n\n            _self.chartComponent.hideTooltip();\n          });\n      });\n    }\n  }\n\n  /**\n   * http://bl.ocks.org/tommyogden/f416a5c27971908845a9\n   */\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _leastSquaresequation(xAxisData: any[], yAxisData: any[]): (x: number) => number {\n    const ReduceAddition = (prev, cur): number => prev + cur;\n\n    // finding the mean of Xaxis and Yaxis data\n    const xBar = xAxisData.reduce(ReduceAddition) * 1.0 / xAxisData.length;\n    const yBar = yAxisData.reduce(ReduceAddition) * 1.0 / yAxisData.length;\n    const SquareXX = xAxisData.map(d => Math.pow(d - xBar, 2)).reduce(ReduceAddition);\n    // const ssYY = yAxisData.map(d => Math.pow(d - yBar, 2)).reduce(ReduceAddition);\n    const MeanDiffXY = xAxisData.map((d, i) => (d - xBar) * (yAxisData[i] - yBar)).reduce(ReduceAddition);\n    const slope = MeanDiffXY / SquareXX;\n    const intercept = yBar - (xBar * slope);\n\n    // returning regression function\n    return function (x: number) {\n      return x * slope + intercept;\n    };\n  }\n\n  private _drawDropShadow(): void {\n    const defs = this._g\n      .append('defs');\n\n    const filter = defs\n      .append('filter')\n      .attr('id', 'drop-shadow')\n      .attr('x', '-50%')\n      .attr('y', '-50%')\n      .attr('width', '180%')\n      .attr('height', '180%')\n      .attr('filterUnits', 'userSpaceOnUse');\n\n    filter\n      .append('feGaussianBlur')\n      .attr('in', 'SourceAlpha')\n      .attr('stdDeviation', 3);\n\n    filter\n      .append('feOffset')\n      .attr('dx', 0)\n      .attr('dy', 1)\n      .attr('result', 'offsetblur');\n\n    filter\n      .append('feOffset')\n      .attr('dx', 0)\n      .attr('dy', 2)\n      .attr('result', 'offsetblur');\n\n    filter\n      .append('feColorMatrix')\n      .attr('type', 'matrix')\n      .attr('values', '0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.22 0');\n\n    const feMerge = filter\n      .append('feMerge');\n\n    feMerge\n      .append('feMergeNode');\n\n    feMerge\n      .append('feMergeNode')\n      .attr('in', 'SourceGraphic');\n\n    feMerge\n      .append('feMergeNode')\n      .attr('in', 'SourceGraphic');\n\n  }\n\n  private _getTickFormatForNumber(d: number): string {\n    return this.scientificMode\n      ? new BigNumber(d).toPrecision(2, 2)\n      : this._cutNumber.transform(d, 0);\n  }\n}\n","import {Directive, Input} from '@angular/core';\nimport {AdaptChartAbstract} from './chart.model';\nimport {AdaptChartColorStatus} from '../services/chart-color.service';\nimport * as d3 from 'd3';\n\n@Directive()\nexport abstract class AdaptTreemapAbstract extends AdaptChartAbstract {\n  @Input() data: AdaptTreemapData | AdaptTreemapGroupData;\n}\n\nexport interface AdaptTreemapData {\n  name: string;\n  status?: AdaptChartColorStatus;\n\n  color?: string; // @since 10.15.0\n  customColorsRange?: string[]; // @since 9.3.0\n  children: AdaptTreemapDataChildren[];\n}\n\nexport interface AdaptTreemapDataChildren {\n  name: string;\n  id?: string;\n  size?: number;\n  status?: AdaptChartColorStatus;\n  color?: string; // @since 10.15.0\n  customColorsRange?: string[]; // @since 9.3.0\n  info?: string; // @since 9.2.0\n  actions?: AdaptTreemapNodeAction[]; // @since 9.2.0\n  children?: AdaptTreemapDataChildren[];\n}\n\n\n// @since 10.17.0\nexport interface AdaptTreemapGroupData {\n  name: string;\n  id?: string;\n  color?: string;\n  info?: string;\n  size?: number;\n  actions?: AdaptTreemapNodeAction[];\n  children?: AdaptTreemapGroupData[];\n}\n\n// @since 9.2.0\nexport interface AdaptTreemapActionsMenu {\n  target: SVGElement;\n  event: MouseEvent;\n  actions: AdaptTreemapNodeAction[];\n  context: AdaptTreemapDataChildren;\n}\n\n// @since 9.2.0\nexport interface AdaptTreemapNodeAction {\n  title: string;\n  callback: (target: SVGElement, event: MouseEvent, context: AdaptTreemapDataChildren) => void;\n}\n\n// @since 10.17.0\nexport interface AdaptTreemapGroupEnterEvent {\n  data: AdaptTreemapGroupData;\n  event: MouseEvent;\n  node?: d3.HierarchyRectangularNode<AdaptTreemapGroupData>;\n}\n","<adapt-chart #chartBase\n             [data]=\"innerData\"\n             [width]=\"width\"\n             [height]=\"height\"\n             [backgroundColor]=\"backgroundColor\"\n             [header]=\"header\"\n             [legend]=\"_legend\"\n             [gradientLegend]=\"gradientLegend\"\n             [suppressHeader]=\"suppressHeader\"\n             [suppressLegend]=\"suppressLegend\"\n             [dataBuilder]=\"groupView ? dataBuilderForGroupsBind : dataBuilderBind\"\n             [updateChart]=\"groupView ? updateChartForGroupsBind : updateChartBind\"\n             [noDataText]=\"noDataText\"\n             [topSectionTemplate]=\"treemapBreadCrumbsTemplate\"\n             (categoryEnter)=\"categoryEnter($event)\"\n             (categoryLeave)=\"categoryLeave($event)\"></adapt-chart>\n\n<div class=\"dropdown treemap-chart_hidden-menu\"\n     adaptDropdown\n     [adaptRadarDisableEventSending]=\"true\"\n     #menuContainer\n     *ngIf=\"hasActionMenu\"\n     [appendToBody]=\"true\"\n     [restoreFocusAfterClose]=\"true\"\n     (popupAnimationDone)=\"popupAnimationDone()\">\n  <button #menuAnchor adaptDropdownToggle type=\"button\"></button>\n  <ng-template adaptDropdownMenuTemplate>\n    <div class=\"dropdown-menu\"\n         #optionsListRef\n         tabindex=\"0\"\n         aria-labelledby=\"dropdownMenu\"\n         [attr.aria-activedescendant]=\"getActiveDescendant()\"\n         (keydown)=\"keydownHandler($event)\">\n      <div *ngIf=\"menuData && menuData.actions && menuData.actions.length\">\n        <button class=\"dropdown-item\"\n                [class.text-active]=\"isActiveDescendant(index)\"\n                type=\"button\"\n                role=\"button\"\n                tabindex=\"-1\"\n                adaptListKeyManagerItem\n                id=\"treemap__actions__action-{{index}}\"\n                *ngFor=\"let action of menuData.actions; let index = index;\"\n                (click)=\"callAction(menuData.target, menuData.event, menuData.context, action)\">\n          {{action.title}}\n        </button>\n      </div>\n    </div>\n  </ng-template>\n</div>\n\n<ng-template #treemapDefaultTooltip let-context=\"context\">\n  <div>\n    <strong>{{context.name}}</strong>\n    <div>{{context.size}}</div>\n  </div>\n</ng-template>\n\n<ng-template #treemapGroupTooltip let-parentContext=\"parentContext\" let-childContext=\"childContext\">\n  <div class=\"treemap__group-tooltip\">\n    <span class=\"adapt-chart-tooltip-color-spot mr-1\" [style.background-color]=\"parentContext.color\"></span>\n    {{parentContext.name}}: <strong>{{childContext.name}}</strong>\n  </div>\n</ng-template>\n\n<ng-template #treemapBreadCrumbsTemplate>\n  <ol class=\"breadcrumb mb-0\" *ngIf=\"breadCrumbs.length\">\n    <li class=\"breadcrumb-item\"\n        *ngFor=\"let breadCrumb of breadCrumbs; let last = last\"\n        [class.active]=\"last\">\n      <a href=\"javascript:void(0)\"\n         *ngIf=\"!last\"\n         (click)=\"navigateToGroup($event, breadCrumb, data)\">{{breadCrumb}}</a>\n      <ng-container *ngIf=\"last\">{{breadCrumb}}</ng-container>\n    </li>\n  </ol>\n</ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  isDevMode,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport {ListKeyManager} from '@angular/cdk/a11y';\nimport {DOWN_ARROW, ENTER, ESCAPE, SPACE, TAB, UP_ARROW} from '@angular/cdk/keycodes';\nimport {Point} from '@angular/cdk/drag-drop';\n\nimport {cloneDeep, isArray} from 'lodash-es';\nimport * as d3 from 'd3';\n\nimport {\n  AdaptDropdownDirective,\n  AdaptDropdownToggleDirective,\n  adaptError,\n  AdaptListKeyManagerItemDirective,\n  ColorType,\n  getEventKeyCode,\n  isDefined,\n  isFunction,\n  SafeCdr\n} from '@bmc-ux/adapt-angular';\nimport {ai_ellipsis} from '@bmc-ux/dpl-iconfont';\n\nimport {AdaptChartComponent} from '../common/chart.component';\nimport {\n  AdaptChartCategoryEvent,\n  AdaptChartDimensions,\n  AdaptChartGradientLegend,\n  AdaptChartHeader,\n  AdaptChartLegend,\n  AdaptSVGGroupElement\n} from '../common/models/chart.model';\nimport {\n  AdaptTreemapAbstract,\n  AdaptTreemapActionsMenu,\n  AdaptTreemapData,\n  AdaptTreemapDataChildren,\n  AdaptTreemapGroupData,\n  AdaptTreemapGroupEnterEvent,\n  AdaptTreemapNodeAction\n} from '../common/models/treemap.model';\nimport {AdaptChartColorStatus, ChartColorService} from '../common/services/chart-color.service';\n\nconst NODE_PADDING = 15;\n\n// TODO update types\n@Component({\n  selector: 'adapt-treemap',\n  templateUrl: './treemap.component.html',\n  exportAs: 'treemap'\n})\nexport class AdaptTreemapComponent extends AdaptTreemapAbstract implements OnInit, OnChanges, OnDestroy {\n  _legend: AdaptChartLegend;\n  menuData: AdaptTreemapActionsMenu;\n  hasActionMenu: boolean = false;\n  innerData: AdaptTreemapData | AdaptTreemapGroupData;\n  breadCrumbs: string[] = [];\n\n  // Chart data builder\n  dataBuilderBind: (g: AdaptSVGGroupElement, dim: AdaptChartDimensions) => void = this._dataBuilder.bind(this);\n  // Chart update function\n  updateChartBind: (dim: AdaptChartDimensions) => void = this._updateChart.bind(this);\n\n  // Chart data builder for grouped treemap\n  dataBuilderForGroupsBind: (g: AdaptSVGGroupElement, dim: AdaptChartDimensions) => void = this._dataBuilderForGroups.bind(this);\n  // Chart update function for grouped treemap\n  updateChartForGroupsBind: (dim: AdaptChartDimensions) => void = this._updateChartForGroups.bind(this);\n\n  @ViewChild(AdaptChartComponent, {static: true}) chartBase: AdaptChartComponent;\n  @ViewChild('treemapDefaultTooltip', {static: true}) treemapDefaultTooltip: TemplateRef<AdaptTreemapDataChildren>;\n  @ViewChild('treemapGroupTooltip', {static: true}) treemapGroupTooltip: TemplateRef<{ parentContext: AdaptTreemapData; childContext: AdaptTreemapData }>;\n  @ViewChild('menuAnchor', {\n    read: AdaptDropdownToggleDirective,\n    static: false\n  }) menuAnchor: AdaptDropdownToggleDirective;\n  @ViewChild('menuContainer', {read: AdaptDropdownDirective, static: false}) menuContainer: AdaptDropdownDirective;\n  @ViewChild('optionsListRef', {static: false}) optionsListRef: ElementRef<HTMLDivElement>;\n  @ViewChildren(AdaptListKeyManagerItemDirective) items: QueryList<AdaptListKeyManagerItemDirective>;\n\n  // Inputs\n  @Input() backgroundColor: string;\n  @Input() width: number;\n  @Input() height: number;\n  @Input() header: AdaptChartHeader;\n  @Input() legend: AdaptChartLegend;\n  @Input() gradientLegend: AdaptChartGradientLegend;\n  @Input() suppressHeader: boolean;\n  @Input() suppressLegend: boolean;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Input() tooltip: string | TemplateRef<any>;\n  @Input() data: AdaptTreemapData | AdaptTreemapGroupData;\n  @Input() noDataText: string;\n  @Input() showSizeInName: boolean = true;\n\n  /**\n   * @since 10.14.0\n   */\n  @Input() groupView: boolean = false;\n\n  // Outputs\n  @Output() readonly clickChart: EventEmitter<AdaptTreemapData | AdaptTreemapGroupData> = new EventEmitter();\n  @Output() readonly groupEntered: EventEmitter<AdaptTreemapGroupEnterEvent> = new EventEmitter();\n\n  private _g: AdaptSVGGroupElement;\n  private _removeClickEventListener: Function;\n  private _removeScrollEventListener: Function;\n  private _tooltipEl: HTMLElement;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _tooltipMouseleaveHandler: (this: HTMLElement, ev: HTMLElementEventMap['mouseleave']) => any;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _activeNode: any;\n  private _tooltipPoint: Point = {x: 0, y: 0};\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _targetWithActions: any;\n  private _listKeyManager: ListKeyManager<AdaptListKeyManagerItemDirective>;\n\n  private _closeMenuBind: (event: AdaptTreemapComponent) => boolean | void = this._closeMenu.bind(this);\n\n  constructor(private _renderer: Renderer2,\n              private _chartColorService: ChartColorService,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    super();\n  }\n\n  categoryEnter(categoryEvent: AdaptChartCategoryEvent): void {\n    this._getRelatedToLegendNodes(categoryEvent.id.toString()).dispatch('mouseenter', {\n      bubbles: true,\n      cancelable: true,\n      detail: {eventSource: 'legend'}\n    });\n  }\n\n  categoryLeave(categoryEvent: AdaptChartCategoryEvent): void {\n    this._getRelatedToLegendNodes(categoryEvent.id.toString()).dispatch('mouseleave');\n  }\n\n  ngOnInit(): void {\n    this.innerData = cloneDeep(this.data);\n    this._initLegend();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['data']) {\n      this.innerData = changes['data'].currentValue;\n      this.breadCrumbs = [];\n      this._updateLegend(changes['data'].firstChange);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._removeListeners();\n  }\n\n  popupAnimationDone(): void {\n    if (this.menuContainer.isOpen()) {\n      this.optionsListRef.nativeElement.focus();\n      this._listKeyManager = new ListKeyManager(this.items)\n        .withWrap(false)\n        .withHomeAndEnd();\n      this._listKeyManager.setFirstItemActive();\n\n      this._removeClickEventListener = this._renderer.listen('document', 'click', this._closeMenuBind);\n      this._removeScrollEventListener = this._renderer.listen('document', 'scroll', this._closeMenuBind);\n    } else {\n      this._listKeyManager = null;\n      this._removeListeners();\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  keydownHandler(event: any): void {\n    if (this._listKeyManager) {\n      switch (getEventKeyCode(event)) {\n        case DOWN_ARROW:\n        case UP_ARROW: {\n          this._listKeyManager.onKeydown(event);\n\n          break;\n        }\n\n        case ENTER: {\n          this.callAction(this.menuData.target, this.menuData.event, this.menuData.context, this.menuData.actions[this._listKeyManager.activeItemIndex]);\n          this.menuContainer.close();\n\n          break;\n        }\n\n        case TAB: {\n          if (this.menuContainer.isOpen()) {\n            this.menuContainer.close();\n          }\n\n          break;\n        }\n      }\n    }\n  }\n\n  getActiveDescendant(): string {\n    return this._listKeyManager ? `treemap__actions__action-${this._listKeyManager.activeItemIndex}` : undefined;\n  }\n\n  isActiveDescendant(index: number): boolean {\n    return index === this._listKeyManager?.activeItemIndex;\n  }\n\n  callAction(target: SVGElement, event: MouseEvent, context: AdaptTreemapDataChildren, action: AdaptTreemapNodeAction): void {\n    action.callback(target, event, context);\n  }\n\n  enterGroup(event: MouseEvent, d: d3.HierarchyRectangularNode<AdaptTreemapGroupData>): void {\n    this.innerData = d.data;\n    this._legend = this._prepareGroupLegend();\n    this.chartBase.updateLegend(this._legend.items);\n\n    this.groupEntered.emit({event, data: d.data, node: d});\n\n    SafeCdr.detectChanges(this._changeDetectorRef);\n  }\n\n  updateBreadCrumbs(d: d3.HierarchyRectangularNode<AdaptTreemapGroupData>): void {\n    if (!this.breadCrumbs.length) {\n      this.breadCrumbs.push(this.innerData.name);\n    }\n\n    this.breadCrumbs.push(d.data.name);\n  }\n\n  navigateToGroup(event: MouseEvent, name: string, data: AdaptTreemapGroupData): void {\n    if (data.name === name) {\n      this.innerData = cloneDeep(data);\n      this.breadCrumbs = this.breadCrumbs.slice(0, this.breadCrumbs.indexOf(name) + 1);\n\n      if (this.breadCrumbs.length === 1) {\n        this.breadCrumbs = [];\n      }\n\n      this._legend = this._prepareGroupLegend();\n      this.chartBase.updateLegend(this._legend.items);\n\n      this.groupEntered.emit({event, data});\n\n      SafeCdr.detectChanges(this._changeDetectorRef);\n\n      return;\n    }\n\n    if (data.children) {\n      data.children.forEach(child => {\n        this.navigateToGroup(event, name, child);\n      });\n    }\n  }\n\n  private _dataBuilder(g: AdaptSVGGroupElement, dim: AdaptChartDimensions): void {\n    /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n    const _this = this;\n\n    this._g = g;\n\n    const data = this.innerData;\n    const openTooltip = this._openTooltip.bind(this);\n    const closeTooltip = this._closeTooltip.bind(this);\n    const ellipsis = this._ellipsis;\n    const clickChart = this.clickChart;\n    const openMenu = this._openMenu.bind(this);\n    const showSizeInName = this.showSizeInName;\n    const chartColorService = this._chartColorService;\n\n    // Check if there is at least one item with action. If there are no actions no sense to render dropdown component\n    this.hasActionMenu = this._isDataContainsActions(data);\n\n    const treemap = d3.treemap<AdaptTreemapDataChildren>()\n      .tile(d3.treemapResquarify)\n      .size([dim.w, dim.h])\n      .round(true)\n      .paddingInner(1);\n\n    const root = d3.hierarchy<AdaptTreemapDataChildren>(data)\n      .eachBefore((d) => {\n        d.data.id = (d.parent ? d.parent.data.id + '.' : '') + d.data.name;\n      })\n      .sum((d) => d.size)\n      .sort((a, b) => b.height - a.height || b.value - a.value);\n\n    treemap(root);\n\n    let _currColorGroup = '';\n    let _currColorRange = [];\n    let _currColorRangeCounter = 0;\n\n    const nodeGroup = this._g.selectAll('g')\n      .data(root.leaves())\n      .enter()\n      .append('g')\n      .attr('class', (d) => `treemap-node status-group-${d.data.id.split(' ').join('_')}`)\n      .attr('id', (d) => d.data.id.split(' ').join('_'))\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .attr('transform', (d: d3.HierarchyRectangularNode<any>) => `translate(${d.x0}, ${d.y0})`);\n\n    const nodeGroupInnerElem = nodeGroup\n      .append('g')\n      .attr('class', 'treemap-node__inner')\n      .attr('tabindex', 0)\n      .attr('aria-label', (d) => `${d.data.name}` + (showSizeInName ? ` (${d.data.size})` : ''))\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .on('mouseenter', function (d: d3.HierarchyNode<any>): void {\n        const rect = d3.select(this).select('rect');\n        const oldColor = (rect.node() as SVGElement).style.fill;\n        const target = d3.select(this);\n        const tooltipCustomCls = d.data.id.split('.').join('_').split(' ').join('_');\n        const eventDetail = d3.event.detail;\n\n        if (eventDetail === 0 || eventDetail?.eventSource !== 'legend') {\n          openTooltip(target, {context: d.data}, `treemap_tooltip treemap_tooltip__${tooltipCustomCls}`, 1);\n\n          _this._tooltipEl = window.document.querySelector(`.treemap_tooltip__${tooltipCustomCls}`);\n\n          if (isDefined(_this._tooltipEl)) {\n            _this._tooltipMouseleaveHandler = () => {\n              closeTooltip();\n              _this._tooltipEl.removeEventListener('mouseleave', _this._tooltipMouseleaveHandler);\n            };\n            _this._tooltipEl.addEventListener('mouseleave', _this._tooltipMouseleaveHandler);\n          }\n        }\n\n        (rect.node() as SVGElement).style.fill = d3.rgb(oldColor).darker(.3).formatHex();\n      })\n      .on('mouseleave', function (): void {\n\n        const rect = d3.select(this).select('rect');\n        const oldColor = (rect.node() as SVGElement).style.fill;\n\n        if (!d3.event?.toElement?.offsetParent?.classList.contains('adapt-tooltip-inner')) {\n          closeTooltip();\n          _this._removeTooltipMouseleaveListener();\n        }\n\n        (rect.node() as SVGElement).style.fill = d3.rgb(oldColor).brighter(.3).formatHex();\n      })\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .on('click', function (d: d3.HierarchyRectangularNode<any>): void {\n        closeTooltip();\n        _this._removeTooltipMouseleaveListener();\n\n        clickChart.emit(d.data);\n        d3.event.stopPropagation();\n      });\n\n    nodeGroupInnerElem.append('rect')\n      .attr('class', 'treemap__node-rect')\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .attr('width', (d: d3.HierarchyRectangularNode<any>) => d.x1 - d.x0)\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .attr('height', (d: d3.HierarchyRectangularNode<any>) => d.y1 - d.y0)\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .attr('style', function (d: any): string {\n        if (!_currColorGroup || !(_currColorGroup === d.parent.data.id)) {\n\n          const customColorsRange = d.parent.data.customColorsRange;\n\n          if (isDevMode && customColorsRange && customColorsRange.length !== 2\n            || customColorsRange && customColorsRange[0] && customColorsRange[0].length !== 7\n            || customColorsRange && customColorsRange[1] && customColorsRange[1].length !== 7) {\n            adaptError('ADAPT-ANGULAR Error! \\n Treemap component! \\n Please pass correct color range. \"customColorsRange\" property should be an array of 2 values, and each value should be HEX format color 7 chars length each. (eg. customColorsRange: [\"#000000\", \"#ffffff\"])');\n          }\n\n          _currColorGroup = d.parent.data.id;\n          _currColorRange = ChartColorService.getColorRange(\n            d.parent.data.status === AdaptChartColorStatus.Custom\n              ? customColorsRange\n              : d.parent.data.status,\n            d.parent.children.length);\n          _currColorRangeCounter = 0;\n        }\n\n        const bg = d.data.color ? d.data.color : _currColorRange[_currColorRangeCounter];\n        const currentChild = d.parent.children[_currColorRangeCounter];\n\n        if (isDefined(currentChild)) {\n          currentChild.bg = bg;\n          currentChild.textColor = chartColorService.getContrast(bg, ColorType.HEX);\n        }\n\n        _currColorRangeCounter++;\n\n        return `\n          fill: ${bg};\n          transition: fill .2s;\n          cursor: pointer;\n        `;\n      });\n\n\n    nodeGroupInnerElem.append('g')\n      .attr('class', 'treemap-node-text')\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .each(function (d: any): void {\n        const _node = d3.select(this);\n\n        _node.attr('id', `${d.data.id.split(' ').join('_')}_text`);\n\n        const _name = _node.append('text')\n          .attr('class', 'treemap__node-name')\n          .attr('transform', `translate(${(d.x1 - d.x0) / 2}, ${(d.y1 - d.y0) / 2})`)\n          .attr('style', () => {\n            return `\n              text-anchor: middle;\n              dominant-baseline: middle;\n              font-size: 13px;\n              fill: ${d.textColor};\n            `;\n          });\n\n        ellipsis(_name, `${d.data.name}` + (showSizeInName ? ` (${d.data.size})` : ''), d.x1 - d.x0 - NODE_PADDING);\n\n        const lineHeight = 22;\n        const _info = _node.append('text')\n          .attr('class', 'treemap__node-info-text')\n          .attr('transform', `translate(${(d.x1 - d.x0) / 2}, ${(d.y1 - d.y0) / 2})`)\n          .attr('dy', lineHeight)\n          .attr('text-anchor', 'middle')\n          .attr('style', `font-size: 12px; opacity: .7; fill: ${d.textColor}`);\n\n        if (d.data.info && (d.y1 - d.y0 > 40)) {\n          ellipsis(_info, d.data.info, d.x1 - d.x0 - NODE_PADDING);\n        }\n      });\n\n    this._buildActionsMenu(nodeGroup, openMenu);\n\n    SafeCdr.detectChanges(this._changeDetectorRef);\n  }\n\n  private _updateChart(dim: AdaptChartDimensions): void {\n    const data = this.innerData;\n    const ellipsis = this._ellipsis;\n    const showSizeInName = this.showSizeInName;\n\n    // Check if there is at least one item with action. If there are no actions no sense to render dropdown component\n    this.hasActionMenu = this._isDataContainsActions(data);\n\n    const treemap = d3.treemap<AdaptTreemapDataChildren>()\n      .tile(d3.treemapResquarify)\n      .size([dim.w, dim.h])\n      .round(true)\n      .paddingInner(1);\n\n    const root = d3.hierarchy<AdaptTreemapDataChildren>(data)\n      .eachBefore((d) => {\n        d.data.id = (d.parent ? d.parent.data.id + '.' : '') + d.data.name;\n      })\n      .sum((d) => d.size)\n      .sort((a, b) => b.height - a.height || b.value - a.value);\n\n    treemap(root);\n    const leaves = root.leaves();\n\n    this._g.selectAll('g.treemap-node')\n      .data(leaves)\n      .transition()\n      .duration(200)\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .attr('transform', (d: d3.HierarchyRectangularNode<any>) => `translate(${d.x0}, ${d.y0})`);\n\n    this._g.selectAll('g.treemap__actions-menu rect')\n      .data(leaves.filter((d) => d.data.actions))\n      .transition()\n      .duration(200)\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .attr('transform', (d: d3.HierarchyRectangularNode<any>) => `translate(${(d.x1 - d.x0) - 24}, 10)`);\n\n    this._g.selectAll('g.treemap__actions-menu use')\n      .data(leaves.filter((d) => d.data.actions))\n      .transition()\n      .duration(200)\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .attr('transform', (d: d3.HierarchyRectangularNode<any>) => `translate(${(d.x1 - d.x0) - 24}, 10)`);\n\n    this._g.selectAll('rect.treemap__node-rect')\n      .data(leaves)\n      .transition()\n      .duration(200)\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .attr('width', (d: d3.HierarchyRectangularNode<any>) => d.x1 - d.x0)\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .attr('height', (d: d3.HierarchyRectangularNode<any>) => d.y1 - d.y0);\n\n    this._g.selectAll('text.treemap__node-name')\n      .data(leaves)\n      .transition()\n      .duration(200)\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .attr('transform', (d: d3.HierarchyRectangularNode<any>) => `translate(${(d.x1 - d.x0) / 2}, ${(d.y1 - d.y0) / 2})`)\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .each(function (d: d3.HierarchyRectangularNode<any>): void {\n        d3.select(this).text('');\n        ellipsis(d3.select(this), `${d.data.name}` + (showSizeInName ? ` (${d.data.size})` : ''), d.x1 - d.x0 - NODE_PADDING);\n      });\n\n    this._g.selectAll('text.treemap__node-info-text')\n      .data(leaves)\n      .transition()\n      .duration(200)\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .attr('transform', (d: d3.HierarchyRectangularNode<any>) => `translate(${(d.x1 - d.x0) / 2}, ${(d.y1 - d.y0) / 2})`)\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .each(function (d: d3.HierarchyRectangularNode<any>): void {\n        d3.select(this).text('');\n\n        if (d.data.info && (d.y1 - d.y0 > 40)) {\n          ellipsis(d3.select(this), d.data.info, d.x1 - d.x0 - NODE_PADDING);\n        }\n      });\n\n  }\n\n  private _dataBuilderForGroups(g: AdaptSVGGroupElement, dim: AdaptChartDimensions): void {\n    /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n    const _this = this;\n\n    this._g = g;\n\n    const data: AdaptTreemapGroupData = this.innerData;\n    const ellipsis = this._ellipsis;\n    const clickChart = this.clickChart;\n    const showSizeInName = this.showSizeInName;\n    const openMenu = this._openMenu.bind(this);\n\n    // Check if there is at least one item with action. If there are no actions no sense to render dropdown component\n    this.hasActionMenu = this._isDataContainsActions(data);\n\n    const treemap = d3.treemap()\n      .tile(d3.treemapResquarify)\n      .size([dim.w, dim.h])\n      .round(true)\n      .paddingInner(1)\n      .paddingOuter(1);\n\n    const root = d3.hierarchy(data)\n      .eachBefore((d) => {\n        d.data.id = (d.parent ? d.parent.data.id + '.' : '') + d.data.name;\n      })\n      // Ignore size value of node if it has children, because only it's children should be calculated to create correct view\n      .sum((d) => d.children?.length ? 0 : d.size)\n      .sort((a, b) => b.height - a.height || b.value - a.value);\n\n    treemap(root);\n\n    const nodeGroup = this._g.selectAll('g')\n      .data(root.children)\n      .enter()\n      .append('g')\n      .attr('class', (d) => `treemap-node ${d.data.children?.length ? 'treemap-node__parent' : 'treemap-node__child'}`)\n      .attr('id', (d) => d.data.id.split(' ').join('_'))\n      .attr('transform', (d: d3.HierarchyRectangularNode<AdaptTreemapGroupData>) => `translate(${d.x0}, ${d.y0})`);\n\n    const nodeGroupInnerElem = nodeGroup\n      .append('g')\n      .attr('class', 'treemap-node__inner')\n      .attr('tabindex', 0)\n      .attr('aria-label', (d) => `${d.data.name}` + (showSizeInName ? ` (${d.data.size})` : ''))\n      .each(function (d: d3.HierarchyRectangularNode<AdaptTreemapGroupData>): void {\n        if (_this.groupView && d.children) {\n          const node = d3.select(this);\n\n          node.attr('role', 'button')\n            .attr('aria-expanded', false);\n        }\n      })\n      .on('click', function (d: d3.HierarchyRectangularNode<AdaptTreemapGroupData>): void {\n        d3.event.stopPropagation();\n\n        if (_this.groupView && d.children) {\n          _this._activeNode = d;\n\n          _this.chartBase.hideTooltip();\n          _this.updateBreadCrumbs(d);\n          _this.enterGroup(d3.event, d);\n        }\n      })\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .on('keydown', function (d: d3.HierarchyRectangularNode<any>): void {\n        if (d3.event.keyCode === ENTER || d3.event.keyCode === SPACE) {\n          if (_this.groupView && d.children) {\n            _this._activeNode = d;\n\n            _this.chartBase.hideTooltip();\n            _this.updateBreadCrumbs(d);\n            _this.enterGroup(d3.event, d);\n          }\n        }\n      });\n\n    const itemsWithChildren = nodeGroupInnerElem.filter(d => !!d.children?.length);\n    const itemsWithoutChildren = nodeGroupInnerElem.filter(d => !d.children?.length);\n\n    if (itemsWithChildren.size() > 0) {\n      itemsWithChildren\n        .each(function (parentData: d3.HierarchyRectangularNode<AdaptTreemapGroupData>): void {\n          const parentItem = d3.select(this);\n\n          parentItem\n            .append('rect')\n            .attr('width', parentData.x1 - parentData.x0)\n            .attr('height', parentData.y1 - parentData.y0)\n            .attr('fill', 'transparent')\n            .on('mouseenter', function (): void {\n              _this._hideParentLabel(parentItem);\n            })\n            .on('mouseleave', function (): void {\n              _this._showParentLabel(parentItem, parentData);\n            });\n\n          parentData.children.forEach((childData: d3.HierarchyRectangularNode<AdaptTreemapGroupData>) => {\n            const childItem = parentItem\n              .append('g')\n              .attr('class', 'treemap-node__child')\n              .attr('tabindex', 0)\n              .attr('aria-label', childData.data.name);\n\n            const childRect = childItem\n              .append('rect')\n              .attr('class', 'treemap__node-rect')\n              .attr('transform', `translate(${childData.x0 - parentData.x0}, ${childData.y0 - parentData.y0})`)\n              .attr('width', childData.x1 - childData.x0)\n              .attr('height', childData.y1 - childData.y0)\n              .attr('style', `fill: ${childData.data.color}; transition: fill .2s; cursor: pointer;`);\n\n            childItem\n              .on('mouseenter', function (): void {\n                const oldColor = (childRect.node() as SVGElement).style.fill;\n\n                (childRect.node() as SVGElement).style.fill = d3.rgb(oldColor).darker(.3).formatHex();\n\n                _this._hideParentLabel(parentItem);\n\n                const {clientX, clientY} = d3.event;\n\n                _this._tooltipPoint.x = clientX;\n                _this._tooltipPoint.y = clientY;\n                _this.chartBase.showTooltip(_this._tooltipPoint, _this.treemapGroupTooltip, {\n                  parentContext: parentData.data,\n                  childContext: childData.data\n                });\n              })\n              .on('mousemove', function (): void {\n                const {clientX, clientY} = d3.event;\n\n                _this._tooltipPoint.x = clientX;\n                _this._tooltipPoint.y = clientY;\n\n                _this.chartBase.updateTooltip();\n              })\n              .on('mouseleave', function (): void {\n                const oldColor = (childRect.node() as SVGElement).style.fill;\n\n                (childRect.node() as SVGElement).style.fill = d3.rgb(oldColor).brighter(.3).formatHex();\n\n                _this._showParentLabel(parentItem, parentData);\n                _this.chartBase.hideTooltip();\n              });\n\n            const _name = childItem\n              .append('text')\n              .attr('class', 'treemap__node-child-label')\n              .attr('opacity', '0')\n              .attr('transform', `translate(${(childData.x0 - parentData.x0 + ((childData.x1 - childData.x0) / 2))}, ${(childData.y0 - parentData.y0 + ((childData.y1 - childData.y0) / 2))})`)\n              .attr('style', `text-anchor: middle; dominant-baseline: middle; font-size: 13px; fill: ${_this._chartColorService.getContrast(childData.data.color, ColorType.HEX)};`);\n\n            ellipsis(_name, `${childData.data.name}` + (showSizeInName ? ` (${childData.data.size})` : ''), childData.x1 - childData.x0 - NODE_PADDING);\n          });\n        })\n        .on('mouseenter', function (): void {\n          const texts = d3.select(this).selectAll('.treemap__node-child-label');\n\n          texts.attr('opacity', '1');\n        })\n        .on('mouseleave', function (): void {\n          const texts = d3.select(this).selectAll('.treemap__node-child-label');\n\n          texts.attr('opacity', '0');\n        });\n\n      itemsWithChildren\n        .append('g')\n        .attr('class', 'treemap-node-parent-label')\n        .each(function (parentData: d3.HierarchyRectangularNode<AdaptTreemapGroupData>): void {\n          const _node = d3.select(this);\n          const tooltipWrapperHeight = 60;\n\n          _node\n            .append('foreignObject')\n            .attr('width', parentData.x1 - parentData.x0)\n            .attr('height', 1)\n            .attr('overflow', 'visible')\n            .attr('transform', `translate(0, ${((parentData.y1 - parentData.y0) / 2) - (tooltipWrapperHeight / 2)})`)\n            .append('xhtml:div')\n            .html(`\n                <div class=\"treemap__group-parent-tooltip shadow-1\">\n                    <div class=\"treemap__group-parent-tooltip-color\"\n                         style=\"background-color: ${parentData.data.color}; border-color: ${_this._chartColorService.getDarken(parentData.data.color, .14, ColorType.HEX)};\">&nbsp;</div>\n                    <div class=\"treemap__group-parent-tooltip-text align-start\" id=\"${parentData.data.id.split(' ').join('_')}_text\">${parentData.data.name}</div>\n                </div>\n            `)\n            .attr('class', 'treemap__group-parent-tooltip-wrapper');\n        });\n    }\n\n    if (itemsWithoutChildren.size() > 0) {\n      itemsWithoutChildren.append('rect')\n        .attr('class', 'treemap__node-rect')\n        .attr('width', (d: d3.HierarchyRectangularNode<AdaptTreemapGroupData>) => d.x1 - d.x0)\n        .attr('height', (d: d3.HierarchyRectangularNode<AdaptTreemapGroupData>) => d.y1 - d.y0)\n        .attr('style', (d: d3.HierarchyRectangularNode<AdaptTreemapGroupData>) => `fill: ${d.data.color}; transition: fill .2s; cursor: pointer;`)\n        .on('click', function (d: d3.HierarchyRectangularNode<AdaptTreemapGroupData>): void {\n          clickChart.emit(d.data);\n        });\n\n      itemsWithoutChildren.append('g')\n        .attr('class', 'treemap-node-text treemap-node-text_no-child')\n        .each(function (d: d3.HierarchyRectangularNode<AdaptTreemapGroupData>): void {\n          const _node = d3.select(this);\n\n          const _name = _node.append('text')\n            .attr('class', 'treemap__node-name')\n            .attr('transform', `translate(${(d.x1 - d.x0) / 2}, ${(d.y1 - d.y0) / 2})`)\n            .attr('style', `text-anchor: middle; dominant-baseline: middle; font-size: 13px; fill: ${_this._chartColorService.getContrast(d.data.color, ColorType.HEX)};`);\n\n          ellipsis(_name, `${d.data.name}` + (showSizeInName ? ` (${d.data.size})` : ''), d.x1 - d.x0 - NODE_PADDING);\n\n          const lineHeight = 22;\n          const _info = _node.append('text')\n            .attr('class', 'treemap__node-info-text')\n            .attr('transform', `translate(${(d.x1 - d.x0) / 2}, ${(d.y1 - d.y0) / 2})`)\n            .attr('dy', lineHeight)\n            .attr('text-anchor', 'middle')\n            .attr('style', `font-size: 12px; opacity: .7; fill: ${_this._chartColorService.getContrast(d.data.color, ColorType.HEX)}`);\n\n          if (d.data.info && (d.y1 - d.y0 > 40)) {\n            ellipsis(_info, d.data.info, d.x1 - d.x0 - NODE_PADDING);\n          }\n        });\n    }\n\n    this._buildActionsMenu(nodeGroup, openMenu);\n  }\n\n  private _updateChartForGroups(dim: AdaptChartDimensions): void {\n    this._g.selectAll('g').remove();\n    this._dataBuilderForGroups(this._g, dim);\n  }\n\n  private _showParentLabel(item: AdaptSVGGroupElement, data: d3.HierarchyRectangularNode<AdaptTreemapGroupData>): void {\n    item\n      .select('.treemap-node-parent-label > foreignObject')\n      .attr('style', `opacity: 1; height: 1px; overflow: visible; width: ${data.x1 - data.x0}px;`);\n  }\n\n  private _hideParentLabel(item: AdaptSVGGroupElement): void {\n    item\n      .select('.treemap-node-parent-label > foreignObject')\n      .attr('style', 'opacity: 0; height: 1px; overflow: hidden; width: 0;');\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _buildActionsMenu(nodeGroup: AdaptSVGGroupElement, openMenu: (event: MouseEvent, context: any) => void): void {\n    /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n    const _this = this;\n\n    // Draw kebab menu icon\n    nodeGroup\n      .append('g')\n      .attr('class', 'treemap__actions-menu')\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .each(function (d: any): void {\n        if (d.data.actions) {\n          const _node = d3.select(this);\n\n          _node.attr('tabindex', 0)\n            .attr('role', 'button')\n            .attr('aria-haspopup', true)\n            .attr('aria-expanded', false);\n\n          _node.append('rect')\n            .attr('cursor', 'pointer')\n            .attr('fill', 'transparent')\n            .attr('height', 20)\n            .attr('width', 20)\n            .attr('transform', `translate(${(d.x1 - d.x0) - 24}, 10)`);\n\n          _node.append('g')\n            .attr('transform', `translate(${(d.x1 - d.x0) - 24}, 10)`)\n            .html(ai_ellipsis.data)\n            .select('svg')\n            .attr('cursor', 'pointer')\n            .attr('fill', d.textColor)\n            .attr('height', 20)\n            .attr('width', 20);\n        }\n      })\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .on('click', function (d: d3.HierarchyRectangularNode<any>): void {\n        if (d.data.actions) {\n          d3.event.stopPropagation();\n          _this._targetWithActions = d3.select(this);\n          openMenu(d3.event, d.data);\n        }\n      })\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      .on('keydown', function (d: d3.HierarchyRectangularNode<any>): void {\n        if (!d.data?.actions?.length) {\n          return;\n        }\n\n        if (d3.event.keyCode === ENTER || d3.event.keyCode === DOWN_ARROW || d3.event.keyCode === SPACE) {\n          d3.event.preventDefault();\n          _this._targetWithActions = d3.select(this);\n          openMenu(d3.event, d.data);\n        }\n\n        if ((d3.event.keyCode === ESCAPE) && _this.menuContainer.isOpen()) {\n          d3.event.preventDefault();\n          _this._closeMenu();\n        }\n      });\n  }\n\n  private _openMenu(event: MouseEvent, context: AdaptTreemapDataChildren): void {\n    this._closeTooltip();\n    this.menuContainer.placement = ['bottom-right', 'top-right', 'right', 'left'];\n    this.menuContainer.positionTo = this._targetWithActions.node();\n    this.menuData = {target: this._targetWithActions.node(), event, context, actions: context.actions};\n\n    if (this.menuContainer.isOpen()) {\n      this._closeMenu();\n    } else {\n      this.menuContainer.open(event);\n      this._targetWithActions.attr('aria-expanded', true);\n    }\n\n    SafeCdr.detectChanges(this._changeDetectorRef);\n  }\n\n  private _closeMenu(): void {\n    if (this.menuContainer) {\n      this.menuContainer.close();\n      this._targetWithActions?.attr('aria-expanded', false);\n    }\n\n    this._removeListeners();\n  }\n\n  private _isDataContainsActions(data: AdaptTreemapData | AdaptTreemapGroupData): boolean {\n    return data.children.some(item => item.actions && item.actions.length\n      || item.children && item.children.some(childrenItem => childrenItem.actions && childrenItem.actions.length));\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _openTooltip(target: any, context?: AdaptTreemapDataChildren, customCls?: string, offset?: number): void {\n    this.chartBase.showTooltip(target.node(), this.tooltip || this.treemapDefaultTooltip, context, customCls, offset);\n  }\n\n  private _closeTooltip(): void {\n    this.chartBase.hideTooltip();\n\n    this._removeListeners();\n  }\n\n  private _prepareLegend(): AdaptChartLegend {\n    let legendItems = [];\n    const data = this.innerData as AdaptTreemapData;\n\n    const flattenData = this._flattenByChildren(data.children);\n\n    // In case if data contains \"color\" property assume that user use \"custom colors\" approach to control colors\n    if (flattenData.some(d => d.color)) {\n      legendItems = flattenData;\n    } else {\n\n      if (isDefined(data.status)) {\n        legendItems.push({\n          name: data.name,\n          status: data.status,\n          color: data.status === AdaptChartColorStatus.Custom\n            ? data.customColorsRange\n            : ChartColorService.getColorRange(data.status, 1)\n        });\n      }\n\n      data.children.forEach((elem) => {\n\n        if (isDefined(elem.status)) {\n          const sameStatuses = legendItems.filter((lItem) => {\n            return elem.status !== AdaptChartColorStatus.Custom && elem.status === lItem.status;\n          });\n\n          if (!sameStatuses.length) {\n            legendItems.push({\n              name: elem.name,\n              status: elem.status,\n              color: elem.status === AdaptChartColorStatus.Custom\n                ? elem.customColorsRange\n                : ChartColorService.getColorRange(elem.status, 1)\n            });\n          }\n        }\n      });\n    }\n\n    if (legendItems.length) {\n      legendItems.sort((a, b) => {\n        return a.status - b.status;\n      });\n\n      return {\n        columns: 1,\n        items: legendItems.map(el => el.name),\n        customColors: legendItems.map(el => isArray(el.color) ? el.color[0] : el.color),\n        activeHover: false,\n        activeClick: false,\n        ...this.legend\n      };\n\n    }\n  }\n\n  private _prepareGroupLegend(): AdaptChartLegend {\n    const data = this.innerData as AdaptTreemapGroupData;\n\n    if (data.children) {\n      return {\n        columns: 1,\n        items: data.children.map(el => el.name),\n        customColors: data.children.map(el => isArray(el.color) ? el.color[0] : el.color),\n        activeHover: false,\n        activeClick: false,\n        ...this.legend\n      };\n    }\n  }\n\n  private _initLegend(): void {\n    if (this.suppressLegend) {\n      return;\n    }\n\n    if (!this.gradientLegend) {\n      this._legend = this.groupView ? this._prepareGroupLegend() : this._prepareLegend();\n    }\n  }\n\n  private _updateLegend(isFirstChange: boolean): void {\n    if (this.suppressLegend) {\n      return;\n    }\n\n    if (!isFirstChange) {\n      if (!this.gradientLegend) {\n        this._legend = this.groupView ? this._prepareGroupLegend() : this._prepareLegend();\n        this.chartBase.updateLegend(this._legend.items);\n      }\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _ellipsis(textNode: any, text: string, ellipsisWidth: number): void {\n\n    const letters = text.split('');\n\n    const ellipsis = textNode.append('tspan').attr('class', 'ellipsis').text('...');\n    const width = ellipsisWidth - (ellipsis.node() as SVGTextContentElement).getComputedTextLength();\n    const numWords = letters.length;\n\n    const tspan = textNode.insert('tspan', ':first-child').text(letters.join(''));\n\n    // Try the whole line\n    // While it's too long, and we have words left, keep removing words\n\n    while ((tspan.node() as SVGTextContentElement).getComputedTextLength() > width && letters.length) {\n      letters.pop();\n      tspan.text(letters.join(''));\n    }\n\n    if (letters.length === numWords) {\n      ellipsis.remove();\n    }\n  }\n\n  private _removeListeners(): void {\n    if (this._removeClickEventListener) {\n      this._removeClickEventListener();\n      this._removeClickEventListener = null;\n    }\n\n    if (this._removeScrollEventListener) {\n      this._removeScrollEventListener();\n      this._removeScrollEventListener = null;\n    }\n  }\n\n  private _removeTooltipMouseleaveListener(): void {\n    if (isDefined(this._tooltipEl) && isFunction(this._tooltipMouseleaveHandler)) {\n      this._tooltipEl.removeEventListener('mouseleave', this._tooltipMouseleaveHandler);\n      this._tooltipEl = null;\n      this._tooltipMouseleaveHandler = null;\n    }\n  }\n\n  private _flattenByChildren(array: AdaptTreemapDataChildren[], result: AdaptTreemapDataChildren[] = []): AdaptTreemapDataChildren[] {\n    array.forEach(el => {\n      if (el.children) {\n        this._flattenByChildren(el.children, result);\n      } else {\n        result.push(el);\n      }\n    });\n\n    return result;\n  }\n\n  private _getRelatedToLegendNodes(index: string): d3.Selection<SVGGElement, AdaptTreemapData, SVGGElement, AdaptTreemapData> {\n    const currentLegendItem = this._legend.items[parseInt(index, 10)];\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    const allNodes: any = this._g.selectAll('.treemap-node');\n\n    return allNodes.filter(node => node.data.id.indexOf(currentLegendItem) > -1);\n  }\n}\n","import {TemplateRef} from '@angular/core';\nimport {Edge as FlowEdge, Node as FlowNode} from '@swimlane/ngx-graph';\nimport {AdaptChartColorStatus} from '../services/chart-color.service';\n\nexport enum AdaptFlowChartOrientation {\n  LEFT_TO_RIGHT = 'LR',\n  RIGHT_TO_LEFT = 'RL',\n  TOP_TO_BOTTOM = 'TB',\n  BOTTOM_TO_TOP = 'BT'\n}\n\nexport interface AdaptFlowChartNode extends FlowNode {\n  data?: {\n    text: string;\n    icon?: string;\n    status?: AdaptChartColorStatus;\n    iconCustomClass?: string;\n  }[];\n  description?: string;\n  icon?: string;\n  status?: AdaptChartColorStatus;\n  type?: string;\n  iconCustomClass?: string;\n}\n\nexport interface AdaptFlowChartEdge extends FlowEdge {\n  type?: string;\n}\n\nexport interface AdaptFlowChartTexts {\n  fitGraphButton: string;\n}\n\nexport interface AdaptFlowChartEmptyStateConfig {\n  label?: string;\n  inverted?: boolean;\n}\n\nexport interface AdaptFlowChartCustomTemplate {\n  /**\n   * Template for node\n   * @since v12.24.0\n   */\n  nodeTemplate?: TemplateRef<{$implicit: AdaptFlowChartNode}>;\n\n  /**\n   * Template for defs\n   * @since v12.24.0\n   */\n  defsTemplate?: TemplateRef<void>;\n\n  /**\n   * Template for link\n   * @since v12.24.0\n   */\n  linkTemplate?: TemplateRef<{$implicit: AdaptFlowChartEdge}>;\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport {textEllipsis} from './text-ellipsis';\nimport {select} from 'd3';\n\n\n@Directive({selector: 'svg text[adaptTextEllipsis]'})\nexport class AdaptTextEllipsisDirective implements OnChanges {\n  @Input() text: string;\n  @Input() width: number;\n\n  constructor(private _el: ElementRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes) {\n      const el = select(this._el.nativeElement);\n\n      textEllipsis(el, this.text, this.width);\n    }\n  }\n}\n","<div *ngIf=\"loading\"\n     class=\"loader-container adapt-flow-chart__loader\">\n  <div class=\"loader-section\"></div>\n</div>\n\n<div *ngIf=\"showEmptyState()\"\n     class=\"adapt-flow-chart__empty-state\">\n  <adapt-empty-state [type]=\"'chart'\"\n                     [inverted]=\"emptyStateConfig.inverted\"\n                     [label]=\"emptyStateConfig.label\"></adapt-empty-state>\n</div>\n\n<div class=\"adapt-flow-chart__zoom-slider-wrapper\">\n  <div *ngIf=\"showGraph() && enableZoom\">\n    <adapt-slider [(ngModel)]=\"zoomLevel\"\n                  [customStepChange]=\"true\"\n                  [min]=\"minZoomLevel\"\n                  [max]=\"maxZoomLevel\"\n                  [formatter]=\"sliderValueFormatter\"\n                  [step]=\"0.05\"\n                  [styleClass]=\"'adapt-flow-chart__zoom-slider'\"\n                  orientation=\"vertical\">\n    </adapt-slider>\n    <button class=\"adapt-flow-chart__zoom-fit-button\"\n            (click)=\"fitGraph()\">\n      {{texts.fitGraphButton}}\n    </button>\n  </div>\n</div>\n\n<!-- For some reasons [panningEnabled]=\"true\" doesn't work in IE, so disable it for now -->\n<ngx-graph *ngIf=\"showGraph()\"\n           [links]=\"links || []\"\n           [nodes]=\"nodes\"\n           [curve]=\"curve\"\n           [draggingEnabled]=\"false\"\n           [layoutSettings]=\"layoutSettings\"\n           [enableZoom]=\"enableZoom\"\n           [zoomSpeed]=\"zoomSpeed\"\n           [autoZoom]=\"autoZoom\"\n           [autoCenter]=\"autoCenter\"\n           [center$]=\"center$\"\n           [zoomToFit$]=\"zoomToFit$\"\n           [update$]=\"update$\"\n           [panToNode$]=\"panToNode$\"\n           [panningEnabled]=\"!isIE\"\n           [zoomLevel]=\"zoomLevel\"\n           [minZoomLevel]=\"minZoomLevel\"\n           [maxZoomLevel]=\"maxZoomLevel\"\n           (zoomChange)=\"handleZoomChangeDebounced($event)\"\n           version=\"1.1\"\n           xmlns:svg=\"http://www.w3.org/2000/svg\">\n\n  <ng-template #nodeTemplate let-node>\n    <ng-container *ngIf=\"customTemplateConfig?.nodeTemplate; else defaultNodeTemplate\">\n      <ng-template [ngTemplateOutlet]=\"customTemplateConfig.nodeTemplate\"\n                   [ngTemplateOutletContext]=\"{$implicit: node}\"></ng-template>\n    </ng-container>\n\n    <ng-template #defaultNodeTemplate>\n      <svg:g (click)=\"handleNodeClick($event, node)\"\n             (mouseover)=\"handleMouseOver(node)\" (mouseleave)=\"nodeHoverId=''\"\n             *ngIf=\"node && node.dimension && node.dimension.width\"\n             class=\"node\">\n        <defs>\n          <filter id=\"shadow{{componentLevelId}}\" height=\"150%\">\n            <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"2.5\" result=\"blur\"></feGaussianBlur>\n            <feOffset dx=\"0\" dy=\"2\" result=\"offsetBlur\"/>\n            <feOffset dx=\"0\" dy=\"4\" result=\"offsetBlur2\" in=\"blur\"/>\n            <feFlood flood-color=\"black\" flood-opacity=\"0.14\" result=\"offsetColor\"></feFlood>\n            <feFlood flood-color=\"black\" flood-opacity=\"0.06\" result=\"offsetColor2\"></feFlood>\n            <feComposite in=\"offsetColor\" in2=\"offsetBlur\" operator=\"in\" result=\"offsetBlur\"></feComposite>\n            <feComposite in=\"offsetColor2\" in2=\"offsetBlur2\" operator=\"in\" result=\"offsetBlur2\"></feComposite>\n            <feMerge>\n              <feMergeNode in=\"offsetBlur\"/>\n              <feMergeNode in=\"offsetBlur2\"/>\n              <feMergeNode in=\"SourceGraphic\"/>\n            </feMerge>\n          </filter>\n\n          <filter id=\"shadow-hover{{componentLevelId}}\" height=\"150%\">\n            <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"7\" result=\"blur\"></feGaussianBlur>\n            <feOffset dx=\"0\" dy=\"4\" result=\"offsetBlur\"/>\n            <feOffset dx=\"0\" dy=\"9\" result=\"offsetBlur2\" in=\"blur\"/>\n            <feFlood flood-color=\"black\" flood-opacity=\"0.17\" result=\"offsetColor\"></feFlood>\n            <feFlood flood-color=\"black\" flood-opacity=\"0.09\" result=\"offsetColor2\"></feFlood>\n            <feComposite in=\"offsetColor\" in2=\"offsetBlur\" operator=\"in\" result=\"offsetBlur\"></feComposite>\n            <feComposite in=\"offsetColor2\" in2=\"offsetBlur2\" operator=\"in\" result=\"offsetBlur2\"></feComposite>\n            <feMerge>\n              <feMergeNode in=\"offsetBlur\"/>\n              <feMergeNode in=\"offsetBlur2\"/>\n              <feMergeNode in=\"SourceGraphic\"/>\n            </feMerge>\n          </filter>\n        </defs>\n        <rect [attr.rx]=\"node.type === 'rounded' ? nodeRoundRadix : 0\"\n              [attr.width]=\"node.dimension.width\"\n              [attr.height]=\"node.dimension.height\"\n              [attr.fill]=\"defaultBackgroundColor\"\n              [ngStyle]=\"{'filter': nodeHoverId && nodeHoverId === node.id ? 'url(#shadow-hover' + componentLevelId + ')' : 'url(#shadow' + componentLevelId + ')'}\"\n              class=\"adapt-flow-chart__box\">\n        </rect>\n        <svg:g>\n          <svg:svg *ngIf=\"node.icon\"\n                   [attr.class]=\"node.iconCustomClass\"\n                   [attr.fill]=\"getStatusColor(node.status)\"\n                   [attr.height]=\"mainIconDimension\"\n                   [attr.width]=\"mainIconDimension\"\n                   [attr.x]=\"mainIconLeftPadding\"\n                   [attr.y]=\"mainIconTopPadding\">\n            <svg:g [innerHTML]=\"getSvgIcon(node.icon)\"></svg:g>\n          </svg:svg>\n          <svg:text class=\"adapt-flow-chart__label\"\n                    alignment-baseline=\"central\"\n                    adaptTextEllipsis\n                    [text]=\"node.label\"\n                    [width]=\"node.dimension.width - (mainIconLeftPadding * 3) - mainIconDimension\"\n                    [attr.fill]=\"defaultLabelColor\"\n                    [attr.x]=\"node.icon ? mainTextLeftPadding : basicLeftPadding + additionalLeftPadding\"\n                    [attr.y]=\"mainTextTopPadding\">\n          </svg:text>\n          <!--mainIconLeftPadding * 3 - multiply on 3 because text should be moved on 2 padding of icon and one\n          padding for itself from the right side-->\n          <!--mainTextTopPadding * 2 - multiply on 2 because description text should be placed under main title-->\n          <svg:text alignment-baseline=\"central\"\n                    adaptTextEllipsis\n                    [text]=\"node.description\"\n                    [width]=\"node.dimension.width - (mainIconLeftPadding * 3) - mainIconDimension\"\n                    [attr.fill]=\"defaultColor\"\n                    [attr.x]=\"node.icon ? mainTextLeftPadding : basicLeftPadding + additionalLeftPadding\"\n                    [attr.y]=\"(mainTextTopPadding - mainTextTopGap) * 2\">\n          </svg:text>\n          <svg:line *ngIf=\"node.data && node.data.length\"\n                    [attr.x1]=\"0\"\n                    [attr.y1]=\"defaultNodeHeight\"\n                    [attr.x2]=\"node.dimension.width\"\n                    [attr.y2]=\"defaultNodeHeight\"\n                    stroke=\"lightgrey\"/>\n        </svg:g>\n        <svg:g *ngIf=\"node.data && node.data.length\">\n          <svg:g *ngFor=\"let info of node.data; let i = index; let last = last; trackBy: trackByForNodeData\">\n            <svg:svg *ngIf=\"info.icon\"\n                     [attr.class]=\"info.iconCustomClass\"\n                     [attr.fill]=\"getStatusColor(info.status) || defaultLabelColor\"\n                     [attr.height]=\"additionalIconDimension\"\n                     [attr.width]=\"additionalIconDimension\"\n                     [attr.x]=\"basicLeftPadding + additionalLeftPadding\"\n                     [attr.y]=\"additionalIconTopPadding + i * additionalInfoRowHeight\">\n              <svg:g [innerHTML]=\"getSvgIcon(info.icon)\"></svg:g>\n            </svg:svg>\n            <!--basicLeftPadding * 3 - multiply on 3 because text should be moved on 2 padding of icon\n            and one padding for itself from the right side-->\n            <svg:text adaptTextEllipsis\n                      [text]=\"info.text\"\n                      [width]=\"node.dimension.width - (basicLeftPadding * 3) - additionalIconDimension\"\n                      [attr.fill]=\"defaultColor\"\n                      [attr.x]=\"info.icon ? basicLeftPadding * 3 : basicLeftPadding + additionalLeftPadding\"\n                      [attr.y]=\"additionalTextTopPadding + i * additionalInfoRowHeight\">\n            </svg:text>\n            <svg:line *ngIf=\"!last\"\n                      [attr.x1]=\"0\"\n                      [attr.y1]=\"additionalLineTopPadding + i * additionalInfoRowHeight\"\n                      [attr.x2]=\"node.dimension.width\"\n                      [attr.y2]=\"additionalLineTopPadding + i * additionalInfoRowHeight\"\n                      stroke=\"lightgrey\"/>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ng-template>\n  </ng-template>\n\n  <ng-template #defsTemplate>\n    <ng-container *ngIf=\"customTemplateConfig?.defsTemplate; else defaultDefsTemplate\">\n      <ng-template [ngTemplateOutlet]=\"customTemplateConfig.defsTemplate\"></ng-template>\n    </ng-container>\n\n    <ng-template #defaultDefsTemplate>\n      <svg:marker id=\"arrow{{componentLevelId}}\"\n                  markerWidth=\"8\"\n                  markerHeight=\"7\"\n                  refX=\"7\"\n                  refY=\"3\"\n                  orient=\"auto\">\n        <svg:polygon points=\"0 0, 8 3, 0 6\"\n                     fill=\"#333\"/>\n      </svg:marker>\n    </ng-template>\n  </ng-template>\n\n  <ng-template #linkTemplate let-link>\n    <ng-container *ngIf=\"customTemplateConfig?.linkTemplate; else defaultLinkTemplate\">\n      <ng-template [ngTemplateOutlet]=\"customTemplateConfig.linkTemplate\"\n                   [ngTemplateOutletContext]=\"{$implicit: link}\"></ng-template>\n    </ng-container>\n\n    <ng-template #defaultLinkTemplate>\n      <svg:g class=\"edge\">\n        <!--\n        !!! Please pay attention! <base href=\"/\"> inside index file can corrupt arrow icons\n        The problem in wrong url resolving in marker-end=\"url(#arrow)\"\n        Please use provide: APP_BASE_HREF, useValue: '/' instead\n        https://stackoverflow.com/questions/18259032/using-base-tag-on-a-page-that-contains-svg-marker-elements-fails-to-render-marke\n        -->\n        <svg:path class=\"line\"\n                  [attr.stroke-dasharray]=\"link.type === 'stroke' ? strokeLineLength : 0\"\n                  stroke-width=\"2\"\n                  stroke=\"#333\"\n                  [attr.marker-end]=\"'url(#arrow' + componentLevelId + ')'\">\n        </svg:path>\n        <svg:g *ngIf=\"link.label && link.midPoint\"\n               [attr.transform]=\"'translate(' + (link.midPoint.x) + ',' + (link.midPoint.y) + ')'\">\n          <rect class=\"adapt-flow-chart__edge-label-bg\"\n                width=\"90\"\n                height=\"30\"\n                x=\"-45\"\n                y=\"-18\"\n                rx=\"3\"\n                [attr.filter]=\"'url(#shadow' + componentLevelId + ')'\">\n          </rect>\n          <svg:text adaptTextEllipsis\n                    [text]=\"link.label\"\n                    [width]=\"70\"\n                    class=\"adapt-flow-chart__edge-label-text\"\n                    alignment-baseline=\"central\">\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ng-template>\n  </ng-template>\n</ngx-graph>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\nimport * as shape from 'd3-shape';\nimport {Subject} from 'rxjs';\n\nimport {\n  AdaptDeviceDetectionService,\n  AdaptIconConfig,\n  adaptWarn,\n  debounce,\n  SafeCdr,\n  toBoolean\n} from '@bmc-ux/adapt-angular';\nimport {AdaptSvgIconName} from '@bmc-ux/dpl-iconfont';\n\nimport {\n  AdaptFlowChartCustomTemplate,\n  AdaptFlowChartEdge,\n  AdaptFlowChartEmptyStateConfig,\n  AdaptFlowChartNode,\n  AdaptFlowChartOrientation,\n  AdaptFlowChartTexts\n} from '../common/models/flow-chart.model';\nimport {ChartColorService, AdaptChartColorStatus} from '../common/services/chart-color.service';\n\n@Component({\n  selector: 'adapt-flow-chart',\n  templateUrl: './flow-chart.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AdaptFlowChartComponent implements OnInit, OnChanges {\n  center$: Subject<boolean> = new Subject();\n  zoomToFit$: Subject<boolean> = new Subject();\n  panToNode$: Subject<string> = new Subject();\n  update$: Subject<boolean> = new Subject();\n\n  mainTextLeftPadding: number = 70;\n  mainTextTopPadding: number = 34;\n  mainTextTopGap: number = 6;\n\n  mainIconDimension: number = 40;\n  mainIconLeftPadding: number = 15;\n  mainIconTopPadding: number = 20;\n\n  defaultNodeHeight: number = 78;\n  defaultNodeWidth: number = 280;\n\n  nodeRoundRadix: number = 45;\n  additionalInfoRowHeight: number = 42;\n  additionalIconDimension: number = 13;\n  basicLeftPadding: number = 12;\n  additionalLeftPadding: number = 4;\n  additionalIconTopPadding: number = 93;\n  additionalTextTopPadding: number = 103;\n  additionalLineTopPadding: number = 120;\n\n  defaultColor: string = 'currentcolor';\n  defaultLabelColor: string = 'var(--color-active)';\n  defaultBackgroundColor: string = '#fff';\n  strokeLineLength: number = 4;\n\n  layoutSettings: { orientation: AdaptFlowChartOrientation } = {\n    orientation: AdaptFlowChartOrientation.BOTTOM_TO_TOP\n  };\n\n  zoomLevel: number;\n  minZoomLevel: number = 0.1;\n  maxZoomLevel: number = 4;\n  handleZoomChangeDebounced: Function = debounce(this.handleZoomChange.bind(this), 200);\n\n  loading: boolean = true;\n  isIE: boolean = false;\n  componentLevelId: string;\n  nodeHoverId: string = '';\n\n  @Input() links: AdaptFlowChartEdge[];\n  @Input() nodes: AdaptFlowChartNode[];\n  @Input() curve: shape.CurveFactory = shape.curveCatmullRom;\n  @Input() orientation: AdaptFlowChartOrientation = AdaptFlowChartOrientation.BOTTOM_TO_TOP;\n\n  @Input() zoomSpeed: number = 0.04;\n  // @Input() draggingEnabled = false;\n  @Input() enableZoom: boolean = true;\n  @Input() autoZoom: boolean = false;\n  @Input() autoCenter: boolean = false;\n  @Input() texts: AdaptFlowChartTexts;\n  @Input() autoCenterToNode: string;\n  @Input() hasEmptyState: boolean = true;\n  @Input() emptyStateConfig: AdaptFlowChartEmptyStateConfig;\n\n  /**\n   * Allows to use a custom template for chart elements. Can be node, link or defs templates\n   * @since v12.24.0\n   * @docs-default\n   */\n  @Input() customTemplateConfig: AdaptFlowChartCustomTemplate;\n\n  @Output() readonly clickNode: EventEmitter<{ event: Event; node: AdaptFlowChartNode }>\n    = new EventEmitter<{ event: Event; node: AdaptFlowChartNode }>();\n\n  @HostBinding('class') class: string = 'adapt-flow-chart';\n  @HostBinding('style.background-color') @Input() backgroundColor: string;\n\n  private _defaultTexts: AdaptFlowChartTexts = {\n    fitGraphButton: 'Fit to screen'\n  };\n\n  private _defaultEmptyStateConfig: AdaptFlowChartEmptyStateConfig = {\n    label: '',\n    inverted: false\n  };\n\n  constructor(private _deviceDetection: AdaptDeviceDetectionService,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _domSanitizer: DomSanitizer,\n              private _iconConfig: AdaptIconConfig) {\n  }\n\n  ngOnInit(): void {\n    this.componentLevelId = Math.floor(Math.random() * 1000000).toString();\n    this.isIE = this._deviceDetection.isIE();\n    this.texts = {...this._defaultTexts, ...this.texts};\n    this.emptyStateConfig = {...this._defaultEmptyStateConfig, ...this.emptyStateConfig};\n    this.layoutSettings.orientation = this.orientation;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const nodes = changes.nodes;\n\n    if (this.nodes && nodes && nodes.previousValue !== nodes.currentValue) {\n      this.nodes.forEach(node => {\n        node.dimension = {\n          width: node.dimension && node.dimension.width || this.defaultNodeWidth,\n          height: this.getNodeHeight(node)\n        };\n      });\n\n      if (this.autoCenterToNode) {\n        if (this.autoCenter) {\n          this.autoCenter = false;\n          adaptWarn(`ADAPT-ANGULAR Warning! Flow chart component!\n          Seems like \"autoCenter\" is enabled with \"autoCenterToNode\".\n          In this case \"autoCenter\" will be disabled for correct work of \"autoCenterToNode\"`);\n        }\n        setTimeout(() => {\n          this.panToNode$.next(this.autoCenterToNode);\n          this.autoCenterToNode = null;\n        });\n      }\n\n      this.loading = false;\n    }\n  }\n\n  showEmptyState(): boolean {\n    return this.hasEmptyState && !this.loading && (!this.nodes || this.nodes.length === 0);\n  }\n\n  showGraph(): boolean {\n    return toBoolean(!this.loading && this.nodes && this.nodes.length !== 0);\n  }\n\n  getStatusColor(status: AdaptChartColorStatus): string {\n    return status || status === 0 ? ChartColorService.getColorRange(status, 1)[0] : this.defaultColor;\n  }\n\n  getSvgIcon(name: string): SafeHtml {\n    return this._domSanitizer.bypassSecurityTrustHtml(this._iconConfig.getIcon(name as AdaptSvgIconName));\n  }\n\n  fitGraph(): void {\n    this.zoomToFit$.next(true);\n    // At the same time centring graph for better user experience\n    this.center$.next(true);\n  }\n\n  handleNodeClick(event: Event, node: AdaptFlowChartNode): void {\n    this.clickNode.emit({event, node});\n  }\n\n  handleMouseOver(node: AdaptFlowChartNode): void {\n    this.nodeHoverId = node.id;\n  }\n\n  handleZoomMouseDown(): void {\n    this._disableAutoZoom();\n  }\n\n  handleZoomChange(zoomLevel: number): void {\n    this._disableAutoZoom();\n    this.zoomLevel = zoomLevel;\n\n    SafeCdr.markForCheck(this._changeDetectorRef);\n  }\n\n  getNodeHeight(node: AdaptFlowChartNode): number {\n    if (node.data && node.data.length) {\n      return this.defaultNodeHeight + node.data.length * this.additionalInfoRowHeight;\n    } else {\n      return node.dimension && node.dimension.height || this.defaultNodeHeight;\n    }\n  }\n\n  trackByForNodeData(index: number): number {\n    return index;\n  }\n\n  sliderValueFormatter(value: number): string {\n    if ((value ^ 0) === value) {\n      return value.toString();\n    } else {\n      const digitsAfterComma: number = value.toString().split('.')[1].length;\n      const roundTo: number = digitsAfterComma > 2 ? 2 : 1;\n\n      return value.toFixed(roundTo);\n    }\n  }\n\n  private _disableAutoZoom(): void {\n    // This hack need to be done to allow zooming with slider if autoZoom feature was enabled by default\n    if (this.autoZoom) {\n      this.autoZoom = false;\n    }\n\n    // Also need to disable autoCenter to avoid centring on zooming\n    if (this.autoCenter) {\n      this.autoCenter = false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n\n/**\n * @publicApi\n */\nexport const ADAPT_CHARTS_VERSION = new Version('12.25.0');\n","import {NgModule, NO_ERRORS_SCHEMA} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {AdaptChartComponent} from './common/chart.component';\nimport {\n  AdaptDropdownModule,\n  AdaptEmptyStateModule,\n  AdaptIconModule,\n  AdaptListKeyManagerModule,\n  AdaptSliderModule,\n  AdaptTooltipModule\n} from '@bmc-ux/adapt-angular';\nimport {AdaptHeatmapComponent} from './heatmap/heatmap.component';\nimport {AdaptLineGraphComponent} from './line-graph/line-graph.component';\nimport {AdaptScatterPlotComponent} from './scatter-plot/scatter-plot.component';\nimport {AdaptTreemapComponent} from './treemap/treemap.component';\nimport {ChartColorService} from './common/services/chart-color.service';\nimport {ChartLegendComponent} from './common/legend/chart-legend.component';\nimport {ChartGradientLegendComponent} from './common/legend/chart-gradient-legend.component';\nimport {CutNumberPipe} from './common/pipes/cut-number.pipe';\nimport {AdaptPieChartComponent} from './pie-chart/pie-chart.component';\nimport {AdaptStackedChartComponent} from './stacked-chart/stacked-chart.component';\nimport {AdaptChartSliderComponent} from './common/chart-slider/chart-slider.component';\nimport {AdaptAreaGraphComponent} from './area-graph/area-graph.component';\nimport {AdaptAreaGraphSliderComponent} from './area-graph/area-graph-slider.component';\nimport {NgxGraphModule} from '@swimlane/ngx-graph';\nimport {AdaptFlowChartComponent} from './flow-chart/flow-chart.component';\nimport {AdaptTextEllipsisDirective} from './common/utils/text-ellipsis.directive';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  imports: [\n    AdaptTooltipModule,\n    NgxGraphModule,\n    FormsModule,\n    AdaptSliderModule,\n    AdaptEmptyStateModule,\n    AdaptDropdownModule,\n    CommonModule,\n    AdaptListKeyManagerModule,\n    AdaptIconModule\n  ],\n  declarations: [\n    AdaptChartComponent,\n    AdaptHeatmapComponent,\n    AdaptLineGraphComponent,\n    AdaptScatterPlotComponent,\n    AdaptTreemapComponent,\n    ChartLegendComponent,\n    ChartGradientLegendComponent,\n    CutNumberPipe,\n    AdaptPieChartComponent,\n    AdaptStackedChartComponent,\n    AdaptChartSliderComponent,\n    AdaptAreaGraphSliderComponent,\n    AdaptAreaGraphComponent,\n    AdaptFlowChartComponent,\n    AdaptTextEllipsisDirective,\n  ],\n  providers: [\n    ChartColorService\n  ],\n  exports: [\n    AdaptChartComponent,\n    AdaptHeatmapComponent,\n    AdaptLineGraphComponent,\n    AdaptScatterPlotComponent,\n    AdaptTreemapComponent,\n    ChartLegendComponent,\n    ChartGradientLegendComponent,\n    AdaptPieChartComponent,\n    AdaptStackedChartComponent,\n    AdaptAreaGraphComponent,\n    AdaptFlowChartComponent,\n    AdaptTextEllipsisDirective\n  ],\n  schemas: [NO_ERRORS_SCHEMA]\n})\nexport class AdaptChartsModule {\n}\n","/*\n * Public API Surface of adapt-charts\n */\n\nexport * from './stacked-chart/stacked-chart.component';\nexport * from './heatmap/heatmap.component';\nexport * from './line-graph/line-graph.component';\nexport * from './area-graph/area-graph.component';\nexport * from './pie-chart/pie-chart.component';\nexport * from './scatter-plot/scatter-plot.component';\nexport * from './treemap/treemap.component';\nexport * from './flow-chart/flow-chart.component';\nexport * from './common/models/chart.model';\nexport * from './common/services/chart-color.service';\nexport * from './common/utils/text-ellipsis';\nexport * from './common/utils/text-ellipsis.directive';\nexport * from './common/legend/chart-legend.component';\nexport * from './common/legend/chart-gradient-legend.component';\nexport * from './common/chart.component';\n\nexport * from './common/models/area-graph.model';\nexport * from './common/models/chart.model';\nexport * from './common/models/flow-chart.model';\nexport * from './common/models/heatmap.model';\nexport * from './common/models/line-graph.model';\nexport * from './common/models/pie.model';\nexport * from './common/models/scatter-plot.model';\nexport * from './common/models/stacked-chart.model';\nexport * from './common/models/treemap.model';\n\nexport * from './version/version';\n\nexport {AdaptChartsModule} from './adapt-charts.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Directive","Input","Output","AdaptChartSliderType","AdaptStackedChartType","i0","_c6","classPrefix","sliderPaddingTop","EventEmitter","ReplaySubject","SafeCdr","Component","ViewEncapsulation","ViewChild","d3","takeUntil","take","_c5","_c4","i1","_c0","_c1","AdaptChartColorStatus","ColorType","Injectable","getEventKeyCode","DOWN_ARROW","UP_ARROW","ENTER","SPACE","isNull","TAB","isUndefined","isString","i1.ChartColorService","i2","i3","HostBinding","getOverlayConnectedPositions","ANIMATION_DURATION","ANIMATION_TIMING_FUNCTION","timer","asapScheduler","ComponentPortal","AdaptTooltipComponent","isNumber","ContentChild","Pipe","chartCounter","BigNumber","isFunction","i1.CutNumberPipe","i2.ChartColorService","NODE_PADDING","ai_ellipsis","AdaptDropdownToggleDirective","AdaptDropdownDirective","i3.ChartColorService","inRange","cloneDeep","ListKeyManager","isDefined","isDevMode","adaptError","ESCAPE","isArray","AdaptListKeyManagerItemDirective","ViewChildren","AdaptFlowChartOrientation","select","Subject","debounce","shape","adaptWarn","toBoolean","ChangeDetectionStrategy","Version","AdaptTooltipModule","NgxGraphModule","FormsModule","AdaptSliderModule","AdaptEmptyStateModule","AdaptDropdownModule","CommonModule","AdaptListKeyManagerModule","AdaptIconModule","NgModule","NO_ERRORS_SCHEMA"],"mappings":"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"}