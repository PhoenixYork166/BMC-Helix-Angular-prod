import { ChangeDetectorRef, EventEmitter, OnDestroy, OnInit, Renderer2, TemplateRef } from '@angular/core';
import { AdaptDropdownDirective, AdaptDropdownToggleDirective, AdaptIconConfig } from '@bmc-ux/adapt-angular';
import { AdaptChartComponent } from '../common/chart.component';
import { AdaptChartAxis, AdaptChartCategoryEvent, AdaptChartDimensions, AdaptChartHeader, AdaptChartLegend, AdaptSVGGroupElement } from '../common/models/chart.model';
import { AdaptHeatmapAbstract, AdaptHeatmapActionsMenu, AdaptHeatmapNode, AdaptHeatmapNodeAction } from '../common/models/heatmap.model';
import * as i0 from "@angular/core";
export declare class AdaptHeatmapComponent extends AdaptHeatmapAbstract<any> implements OnInit, OnDestroy {
    private _changeDetectorRef;
    private _renderer;
    private _iconConfig;
    _legend: AdaptChartLegend;
    menuData: AdaptHeatmapActionsMenu<any>;
    hasActionMenu: boolean;
    defaultColor: string;
    chartBase: AdaptChartComponent;
    heatmapDefaultTooltip: any;
    menuAnchor: AdaptDropdownToggleDirective;
    menuContainer: AdaptDropdownDirective;
    _dataBuilder: (g: AdaptSVGGroupElement, dim: AdaptChartDimensions) => void;
    _updateChart: (dim: AdaptChartDimensions) => void;
    backgroundColor: string;
    width: number;
    height: number;
    header: AdaptChartHeader;
    legend: AdaptChartLegend;
    suppressHeader: boolean;
    suppressLegend: boolean;
    tooltip: string | TemplateRef<any>;
    data: any;
    xAxis: AdaptChartAxis;
    yAxis: AdaptChartAxis;
    noDataText: string;
    readonly clickChart: EventEmitter<AdaptHeatmapNode<any>>;
    private _g;
    private _margin;
    private _removeClickEventListener;
    private _removeScrollEventListener;
    private _closeMenuBind;
    constructor(_changeDetectorRef: ChangeDetectorRef, _renderer: Renderer2, _iconConfig: AdaptIconConfig);
    ngOnInit(): void;
    ngOnDestroy(): void;
    callAction<T>(target: SVGElement, event: MouseEvent, context: T, action: AdaptHeatmapNodeAction<T>): void;
    popupAnimationDone(): void;
    _categoryEnter(categoryEvent: AdaptChartCategoryEvent): void;
    _categoryLeave(categoryEvent: AdaptChartCategoryEvent): void;
    private _calculateMargin;
    private _getPreparedData;
    private _openMenu;
    private _closeMenu;
    private _openTooltip;
    private _closeTooltip;
    private _initLegend;
    private _ellipsis;
    private _removeListeners;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptHeatmapComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptHeatmapComponent, "adapt-heatmap", never, { "backgroundColor": "backgroundColor"; "width": "width"; "height": "height"; "header": "header"; "legend": "legend"; "suppressHeader": "suppressHeader"; "suppressLegend": "suppressLegend"; "tooltip": "tooltip"; "data": "data"; "xAxis": "xAxis"; "yAxis": "yAxis"; "noDataText": "noDataText"; }, { "clickChart": "clickChart"; }, never, never>;
}
