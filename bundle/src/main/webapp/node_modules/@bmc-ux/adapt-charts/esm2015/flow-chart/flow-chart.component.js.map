{"version":3,"file":"flow-chart.component.js","sourceRoot":"","sources":["../../../../../libs/adapt-charts/src/flow-chart/flow-chart.component.ts","../../../../../libs/adapt-charts/src/flow-chart/flow-chart.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\nimport * as shape from 'd3-shape';\nimport {Subject} from 'rxjs';\n\nimport {\n  AdaptDeviceDetectionService,\n  AdaptIconConfig,\n  adaptWarn,\n  debounce,\n  SafeCdr,\n  toBoolean\n} from '@bmc-ux/adapt-angular';\nimport {AdaptSvgIconName} from '@bmc-ux/dpl-iconfont';\n\nimport {\n  AdaptFlowChartCustomTemplate,\n  AdaptFlowChartEdge,\n  AdaptFlowChartEmptyStateConfig,\n  AdaptFlowChartNode,\n  AdaptFlowChartOrientation,\n  AdaptFlowChartTexts\n} from '../common/models/flow-chart.model';\nimport {ChartColorService, AdaptChartColorStatus} from '../common/services/chart-color.service';\n\n@Component({\n  selector: 'adapt-flow-chart',\n  templateUrl: './flow-chart.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AdaptFlowChartComponent implements OnInit, OnChanges {\n  center$: Subject<boolean> = new Subject();\n  zoomToFit$: Subject<boolean> = new Subject();\n  panToNode$: Subject<string> = new Subject();\n  update$: Subject<boolean> = new Subject();\n\n  mainTextLeftPadding: number = 70;\n  mainTextTopPadding: number = 34;\n  mainTextTopGap: number = 6;\n\n  mainIconDimension: number = 40;\n  mainIconLeftPadding: number = 15;\n  mainIconTopPadding: number = 20;\n\n  defaultNodeHeight: number = 78;\n  defaultNodeWidth: number = 280;\n\n  nodeRoundRadix: number = 45;\n  additionalInfoRowHeight: number = 42;\n  additionalIconDimension: number = 13;\n  basicLeftPadding: number = 12;\n  additionalLeftPadding: number = 4;\n  additionalIconTopPadding: number = 93;\n  additionalTextTopPadding: number = 103;\n  additionalLineTopPadding: number = 120;\n\n  defaultColor: string = 'currentcolor';\n  defaultLabelColor: string = 'var(--color-active)';\n  defaultBackgroundColor: string = '#fff';\n  strokeLineLength: number = 4;\n\n  layoutSettings: { orientation: AdaptFlowChartOrientation } = {\n    orientation: AdaptFlowChartOrientation.BOTTOM_TO_TOP\n  };\n\n  zoomLevel: number;\n  minZoomLevel: number = 0.1;\n  maxZoomLevel: number = 4;\n  handleZoomChangeDebounced: Function = debounce(this.handleZoomChange.bind(this), 200);\n\n  loading: boolean = true;\n  isIE: boolean = false;\n  componentLevelId: string;\n  nodeHoverId: string = '';\n\n  @Input() links: AdaptFlowChartEdge[];\n  @Input() nodes: AdaptFlowChartNode[];\n  @Input() curve: shape.CurveFactory = shape.curveCatmullRom;\n  @Input() orientation: AdaptFlowChartOrientation = AdaptFlowChartOrientation.BOTTOM_TO_TOP;\n\n  @Input() zoomSpeed: number = 0.04;\n  // @Input() draggingEnabled = false;\n  @Input() enableZoom: boolean = true;\n  @Input() autoZoom: boolean = false;\n  @Input() autoCenter: boolean = false;\n  @Input() texts: AdaptFlowChartTexts;\n  @Input() autoCenterToNode: string;\n  @Input() hasEmptyState: boolean = true;\n  @Input() emptyStateConfig: AdaptFlowChartEmptyStateConfig;\n\n  /**\n   * Allows to use a custom template for chart elements. Can be node, link or defs templates\n   * @since v12.24.0\n   * @docs-default\n   */\n  @Input() customTemplateConfig: AdaptFlowChartCustomTemplate;\n\n  @Output() readonly clickNode: EventEmitter<{ event: Event; node: AdaptFlowChartNode }>\n    = new EventEmitter<{ event: Event; node: AdaptFlowChartNode }>();\n\n  @HostBinding('class') class: string = 'adapt-flow-chart';\n  @HostBinding('style.background-color') @Input() backgroundColor: string;\n\n  private _defaultTexts: AdaptFlowChartTexts = {\n    fitGraphButton: 'Fit to screen'\n  };\n\n  private _defaultEmptyStateConfig: AdaptFlowChartEmptyStateConfig = {\n    label: '',\n    inverted: false\n  };\n\n  constructor(private _deviceDetection: AdaptDeviceDetectionService,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _domSanitizer: DomSanitizer,\n              private _iconConfig: AdaptIconConfig) {\n  }\n\n  ngOnInit(): void {\n    this.componentLevelId = Math.floor(Math.random() * 1000000).toString();\n    this.isIE = this._deviceDetection.isIE();\n    this.texts = {...this._defaultTexts, ...this.texts};\n    this.emptyStateConfig = {...this._defaultEmptyStateConfig, ...this.emptyStateConfig};\n    this.layoutSettings.orientation = this.orientation;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const nodes = changes.nodes;\n\n    if (this.nodes && nodes && nodes.previousValue !== nodes.currentValue) {\n      this.nodes.forEach(node => {\n        node.dimension = {\n          width: node.dimension && node.dimension.width || this.defaultNodeWidth,\n          height: this.getNodeHeight(node)\n        };\n      });\n\n      if (this.autoCenterToNode) {\n        if (this.autoCenter) {\n          this.autoCenter = false;\n          adaptWarn(`ADAPT-ANGULAR Warning! Flow chart component!\n          Seems like \"autoCenter\" is enabled with \"autoCenterToNode\".\n          In this case \"autoCenter\" will be disabled for correct work of \"autoCenterToNode\"`);\n        }\n        setTimeout(() => {\n          this.panToNode$.next(this.autoCenterToNode);\n          this.autoCenterToNode = null;\n        });\n      }\n\n      this.loading = false;\n    }\n  }\n\n  showEmptyState(): boolean {\n    return this.hasEmptyState && !this.loading && (!this.nodes || this.nodes.length === 0);\n  }\n\n  showGraph(): boolean {\n    return toBoolean(!this.loading && this.nodes && this.nodes.length !== 0);\n  }\n\n  getStatusColor(status: AdaptChartColorStatus): string {\n    return status || status === 0 ? ChartColorService.getColorRange(status, 1)[0] : this.defaultColor;\n  }\n\n  getSvgIcon(name: string): SafeHtml {\n    return this._domSanitizer.bypassSecurityTrustHtml(this._iconConfig.getIcon(name as AdaptSvgIconName));\n  }\n\n  fitGraph(): void {\n    this.zoomToFit$.next(true);\n    // At the same time centring graph for better user experience\n    this.center$.next(true);\n  }\n\n  handleNodeClick(event: Event, node: AdaptFlowChartNode): void {\n    this.clickNode.emit({event, node});\n  }\n\n  handleMouseOver(node: AdaptFlowChartNode): void {\n    this.nodeHoverId = node.id;\n  }\n\n  handleZoomMouseDown(): void {\n    this._disableAutoZoom();\n  }\n\n  handleZoomChange(zoomLevel: number): void {\n    this._disableAutoZoom();\n    this.zoomLevel = zoomLevel;\n\n    SafeCdr.markForCheck(this._changeDetectorRef);\n  }\n\n  getNodeHeight(node: AdaptFlowChartNode): number {\n    if (node.data && node.data.length) {\n      return this.defaultNodeHeight + node.data.length * this.additionalInfoRowHeight;\n    } else {\n      return node.dimension && node.dimension.height || this.defaultNodeHeight;\n    }\n  }\n\n  trackByForNodeData(index: number): number {\n    return index;\n  }\n\n  sliderValueFormatter(value: number): string {\n    if ((value ^ 0) === value) {\n      return value.toString();\n    } else {\n      const digitsAfterComma: number = value.toString().split('.')[1].length;\n      const roundTo: number = digitsAfterComma > 2 ? 2 : 1;\n\n      return value.toFixed(roundTo);\n    }\n  }\n\n  private _disableAutoZoom(): void {\n    // This hack need to be done to allow zooming with slider if autoZoom feature was enabled by default\n    if (this.autoZoom) {\n      this.autoZoom = false;\n    }\n\n    // Also need to disable autoCenter to avoid centring on zooming\n    if (this.autoCenter) {\n      this.autoCenter = false;\n    }\n  }\n}\n","<div *ngIf=\"loading\"\n     class=\"loader-container adapt-flow-chart__loader\">\n  <div class=\"loader-section\"></div>\n</div>\n\n<div *ngIf=\"showEmptyState()\"\n     class=\"adapt-flow-chart__empty-state\">\n  <adapt-empty-state [type]=\"'chart'\"\n                     [inverted]=\"emptyStateConfig.inverted\"\n                     [label]=\"emptyStateConfig.label\"></adapt-empty-state>\n</div>\n\n<div class=\"adapt-flow-chart__zoom-slider-wrapper\">\n  <div *ngIf=\"showGraph() && enableZoom\">\n    <adapt-slider [(ngModel)]=\"zoomLevel\"\n                  [customStepChange]=\"true\"\n                  [min]=\"minZoomLevel\"\n                  [max]=\"maxZoomLevel\"\n                  [formatter]=\"sliderValueFormatter\"\n                  [step]=\"0.05\"\n                  [styleClass]=\"'adapt-flow-chart__zoom-slider'\"\n                  orientation=\"vertical\">\n    </adapt-slider>\n    <button class=\"adapt-flow-chart__zoom-fit-button\"\n            (click)=\"fitGraph()\">\n      {{texts.fitGraphButton}}\n    </button>\n  </div>\n</div>\n\n<!-- For some reasons [panningEnabled]=\"true\" doesn't work in IE, so disable it for now -->\n<ngx-graph *ngIf=\"showGraph()\"\n           [links]=\"links || []\"\n           [nodes]=\"nodes\"\n           [curve]=\"curve\"\n           [draggingEnabled]=\"false\"\n           [layoutSettings]=\"layoutSettings\"\n           [enableZoom]=\"enableZoom\"\n           [zoomSpeed]=\"zoomSpeed\"\n           [autoZoom]=\"autoZoom\"\n           [autoCenter]=\"autoCenter\"\n           [center$]=\"center$\"\n           [zoomToFit$]=\"zoomToFit$\"\n           [update$]=\"update$\"\n           [panToNode$]=\"panToNode$\"\n           [panningEnabled]=\"!isIE\"\n           [zoomLevel]=\"zoomLevel\"\n           [minZoomLevel]=\"minZoomLevel\"\n           [maxZoomLevel]=\"maxZoomLevel\"\n           (zoomChange)=\"handleZoomChangeDebounced($event)\"\n           version=\"1.1\"\n           xmlns:svg=\"http://www.w3.org/2000/svg\">\n\n  <ng-template #nodeTemplate let-node>\n    <ng-container *ngIf=\"customTemplateConfig?.nodeTemplate; else defaultNodeTemplate\">\n      <ng-template [ngTemplateOutlet]=\"customTemplateConfig.nodeTemplate\"\n                   [ngTemplateOutletContext]=\"{$implicit: node}\"></ng-template>\n    </ng-container>\n\n    <ng-template #defaultNodeTemplate>\n      <svg:g (click)=\"handleNodeClick($event, node)\"\n             (mouseover)=\"handleMouseOver(node)\" (mouseleave)=\"nodeHoverId=''\"\n             *ngIf=\"node && node.dimension && node.dimension.width\"\n             class=\"node\">\n        <defs>\n          <filter id=\"shadow{{componentLevelId}}\" height=\"150%\">\n            <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"2.5\" result=\"blur\"></feGaussianBlur>\n            <feOffset dx=\"0\" dy=\"2\" result=\"offsetBlur\"/>\n            <feOffset dx=\"0\" dy=\"4\" result=\"offsetBlur2\" in=\"blur\"/>\n            <feFlood flood-color=\"black\" flood-opacity=\"0.14\" result=\"offsetColor\"></feFlood>\n            <feFlood flood-color=\"black\" flood-opacity=\"0.06\" result=\"offsetColor2\"></feFlood>\n            <feComposite in=\"offsetColor\" in2=\"offsetBlur\" operator=\"in\" result=\"offsetBlur\"></feComposite>\n            <feComposite in=\"offsetColor2\" in2=\"offsetBlur2\" operator=\"in\" result=\"offsetBlur2\"></feComposite>\n            <feMerge>\n              <feMergeNode in=\"offsetBlur\"/>\n              <feMergeNode in=\"offsetBlur2\"/>\n              <feMergeNode in=\"SourceGraphic\"/>\n            </feMerge>\n          </filter>\n\n          <filter id=\"shadow-hover{{componentLevelId}}\" height=\"150%\">\n            <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"7\" result=\"blur\"></feGaussianBlur>\n            <feOffset dx=\"0\" dy=\"4\" result=\"offsetBlur\"/>\n            <feOffset dx=\"0\" dy=\"9\" result=\"offsetBlur2\" in=\"blur\"/>\n            <feFlood flood-color=\"black\" flood-opacity=\"0.17\" result=\"offsetColor\"></feFlood>\n            <feFlood flood-color=\"black\" flood-opacity=\"0.09\" result=\"offsetColor2\"></feFlood>\n            <feComposite in=\"offsetColor\" in2=\"offsetBlur\" operator=\"in\" result=\"offsetBlur\"></feComposite>\n            <feComposite in=\"offsetColor2\" in2=\"offsetBlur2\" operator=\"in\" result=\"offsetBlur2\"></feComposite>\n            <feMerge>\n              <feMergeNode in=\"offsetBlur\"/>\n              <feMergeNode in=\"offsetBlur2\"/>\n              <feMergeNode in=\"SourceGraphic\"/>\n            </feMerge>\n          </filter>\n        </defs>\n        <rect [attr.rx]=\"node.type === 'rounded' ? nodeRoundRadix : 0\"\n              [attr.width]=\"node.dimension.width\"\n              [attr.height]=\"node.dimension.height\"\n              [attr.fill]=\"defaultBackgroundColor\"\n              [ngStyle]=\"{'filter': nodeHoverId && nodeHoverId === node.id ? 'url(#shadow-hover' + componentLevelId + ')' : 'url(#shadow' + componentLevelId + ')'}\"\n              class=\"adapt-flow-chart__box\">\n        </rect>\n        <svg:g>\n          <svg:svg *ngIf=\"node.icon\"\n                   [attr.class]=\"node.iconCustomClass\"\n                   [attr.fill]=\"getStatusColor(node.status)\"\n                   [attr.height]=\"mainIconDimension\"\n                   [attr.width]=\"mainIconDimension\"\n                   [attr.x]=\"mainIconLeftPadding\"\n                   [attr.y]=\"mainIconTopPadding\">\n            <svg:g [innerHTML]=\"getSvgIcon(node.icon)\"></svg:g>\n          </svg:svg>\n          <svg:text class=\"adapt-flow-chart__label\"\n                    alignment-baseline=\"central\"\n                    adaptTextEllipsis\n                    [text]=\"node.label\"\n                    [width]=\"node.dimension.width - (mainIconLeftPadding * 3) - mainIconDimension\"\n                    [attr.fill]=\"defaultLabelColor\"\n                    [attr.x]=\"node.icon ? mainTextLeftPadding : basicLeftPadding + additionalLeftPadding\"\n                    [attr.y]=\"mainTextTopPadding\">\n          </svg:text>\n          <!--mainIconLeftPadding * 3 - multiply on 3 because text should be moved on 2 padding of icon and one\n          padding for itself from the right side-->\n          <!--mainTextTopPadding * 2 - multiply on 2 because description text should be placed under main title-->\n          <svg:text alignment-baseline=\"central\"\n                    adaptTextEllipsis\n                    [text]=\"node.description\"\n                    [width]=\"node.dimension.width - (mainIconLeftPadding * 3) - mainIconDimension\"\n                    [attr.fill]=\"defaultColor\"\n                    [attr.x]=\"node.icon ? mainTextLeftPadding : basicLeftPadding + additionalLeftPadding\"\n                    [attr.y]=\"(mainTextTopPadding - mainTextTopGap) * 2\">\n          </svg:text>\n          <svg:line *ngIf=\"node.data && node.data.length\"\n                    [attr.x1]=\"0\"\n                    [attr.y1]=\"defaultNodeHeight\"\n                    [attr.x2]=\"node.dimension.width\"\n                    [attr.y2]=\"defaultNodeHeight\"\n                    stroke=\"lightgrey\"/>\n        </svg:g>\n        <svg:g *ngIf=\"node.data && node.data.length\">\n          <svg:g *ngFor=\"let info of node.data; let i = index; let last = last; trackBy: trackByForNodeData\">\n            <svg:svg *ngIf=\"info.icon\"\n                     [attr.class]=\"info.iconCustomClass\"\n                     [attr.fill]=\"getStatusColor(info.status) || defaultLabelColor\"\n                     [attr.height]=\"additionalIconDimension\"\n                     [attr.width]=\"additionalIconDimension\"\n                     [attr.x]=\"basicLeftPadding + additionalLeftPadding\"\n                     [attr.y]=\"additionalIconTopPadding + i * additionalInfoRowHeight\">\n              <svg:g [innerHTML]=\"getSvgIcon(info.icon)\"></svg:g>\n            </svg:svg>\n            <!--basicLeftPadding * 3 - multiply on 3 because text should be moved on 2 padding of icon\n            and one padding for itself from the right side-->\n            <svg:text adaptTextEllipsis\n                      [text]=\"info.text\"\n                      [width]=\"node.dimension.width - (basicLeftPadding * 3) - additionalIconDimension\"\n                      [attr.fill]=\"defaultColor\"\n                      [attr.x]=\"info.icon ? basicLeftPadding * 3 : basicLeftPadding + additionalLeftPadding\"\n                      [attr.y]=\"additionalTextTopPadding + i * additionalInfoRowHeight\">\n            </svg:text>\n            <svg:line *ngIf=\"!last\"\n                      [attr.x1]=\"0\"\n                      [attr.y1]=\"additionalLineTopPadding + i * additionalInfoRowHeight\"\n                      [attr.x2]=\"node.dimension.width\"\n                      [attr.y2]=\"additionalLineTopPadding + i * additionalInfoRowHeight\"\n                      stroke=\"lightgrey\"/>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ng-template>\n  </ng-template>\n\n  <ng-template #defsTemplate>\n    <ng-container *ngIf=\"customTemplateConfig?.defsTemplate; else defaultDefsTemplate\">\n      <ng-template [ngTemplateOutlet]=\"customTemplateConfig.defsTemplate\"></ng-template>\n    </ng-container>\n\n    <ng-template #defaultDefsTemplate>\n      <svg:marker id=\"arrow{{componentLevelId}}\"\n                  markerWidth=\"8\"\n                  markerHeight=\"7\"\n                  refX=\"7\"\n                  refY=\"3\"\n                  orient=\"auto\">\n        <svg:polygon points=\"0 0, 8 3, 0 6\"\n                     fill=\"#333\"/>\n      </svg:marker>\n    </ng-template>\n  </ng-template>\n\n  <ng-template #linkTemplate let-link>\n    <ng-container *ngIf=\"customTemplateConfig?.linkTemplate; else defaultLinkTemplate\">\n      <ng-template [ngTemplateOutlet]=\"customTemplateConfig.linkTemplate\"\n                   [ngTemplateOutletContext]=\"{$implicit: link}\"></ng-template>\n    </ng-container>\n\n    <ng-template #defaultLinkTemplate>\n      <svg:g class=\"edge\">\n        <!--\n        !!! Please pay attention! <base href=\"/\"> inside index file can corrupt arrow icons\n        The problem in wrong url resolving in marker-end=\"url(#arrow)\"\n        Please use provide: APP_BASE_HREF, useValue: '/' instead\n        https://stackoverflow.com/questions/18259032/using-base-tag-on-a-page-that-contains-svg-marker-elements-fails-to-render-marke\n        -->\n        <svg:path class=\"line\"\n                  [attr.stroke-dasharray]=\"link.type === 'stroke' ? strokeLineLength : 0\"\n                  stroke-width=\"2\"\n                  stroke=\"#333\"\n                  [attr.marker-end]=\"'url(#arrow' + componentLevelId + ')'\">\n        </svg:path>\n        <svg:g *ngIf=\"link.label && link.midPoint\"\n               [attr.transform]=\"'translate(' + (link.midPoint.x) + ',' + (link.midPoint.y) + ')'\">\n          <rect class=\"adapt-flow-chart__edge-label-bg\"\n                width=\"90\"\n                height=\"30\"\n                x=\"-45\"\n                y=\"-18\"\n                rx=\"3\"\n                [attr.filter]=\"'url(#shadow' + componentLevelId + ')'\">\n          </rect>\n          <svg:text adaptTextEllipsis\n                    [text]=\"link.label\"\n                    [width]=\"70\"\n                    class=\"adapt-flow-chart__edge-label-text\"\n                    alignment-baseline=\"central\">\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ng-template>\n  </ng-template>\n</ngx-graph>\n"]}