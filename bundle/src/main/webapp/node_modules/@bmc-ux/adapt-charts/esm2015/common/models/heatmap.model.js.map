{"version":3,"file":"heatmap.model.js","sourceRoot":"","sources":["../../../../../../libs/adapt-charts/src/common/models/heatmap.model.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,KAAK,EAAC,MAAM,eAAe,CAAC;AAC/C,OAAO,EAAC,kBAAkB,EAAiB,MAAM,eAAe,CAAC;;AAGjE,MAAM,OAAgB,oBAAwB,SAAQ,kBAAkB;;4PAAlD,oBAAoB,SAApB,oBAAoB;uEAApB,oBAAoB;uFAApB,oBAAoB;cADzC,SAAS;gBAEC,IAAI;kBAAZ,KAAK;YACG,KAAK;kBAAb,KAAK;YACG,KAAK;kBAAb,KAAK","sourcesContent":["import {Directive, Input} from '@angular/core';\nimport {AdaptChartAbstract, AdaptChartAxis} from './chart.model';\n\n@Directive()\nexport abstract class AdaptHeatmapAbstract<T> extends AdaptChartAbstract {\n  @Input() data: AdaptHeatmapData<T>;\n  @Input() xAxis: AdaptChartAxis;\n  @Input() yAxis: AdaptChartAxis;\n}\n\nexport interface AdaptHeatmapData<T> {\n  reverse?: boolean;\n  items: AdaptHeatmapNode<T>[][];\n}\n\nexport interface AdaptHeatmapActionsMenu<T> {\n  target: SVGElement;\n  event: MouseEvent;\n  actions: AdaptHeatmapNodeAction<T>[];\n  context: T;\n}\n\nexport interface AdaptHeatmapNodeAction<T> {\n  title: string;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  callback: (target: SVGElement, event: MouseEvent, context: T) => any;\n}\n\nexport interface AdaptHeatmapNode<T> {\n  name: string;\n  size: number;\n  status: {\n    name: string;\n    bg: string;\n    color?: string;\n    icon?: string;\n    iconColor?: string;\n  };\n  info?: string;\n  progress?: number;\n  content?: T;\n  actions?: AdaptHeatmapNodeAction<T>[];\n}\n"]}