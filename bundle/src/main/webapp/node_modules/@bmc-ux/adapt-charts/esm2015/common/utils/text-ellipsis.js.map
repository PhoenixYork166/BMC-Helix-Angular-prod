{"version":3,"file":"text-ellipsis.js","sourceRoot":"","sources":["../../../../../../libs/adapt-charts/src/common/utils/text-ellipsis.ts"],"names":[],"mappings":"AAAA,iEAAiE;AACjE,MAAM,UAAU,YAAY,CAAC,QAAa,EAAE,IAAY,EAAE,aAAqB;IAC7E,IAAI,YAAY,GAAG,EAAE,CAAC;IACtB,IAAI,KAAK,GAAG,aAAa,CAAC;IAE1B,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAC/B,MAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC;IAElC,2CAA2C;IAC3C,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;IACjC,MAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChF,MAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAE9E,IAAK,KAAK,CAAC,IAAI,EAA4B,CAAC,qBAAqB,EAAE,GAAG,KAAK,IAAI,OAAO,CAAC,MAAM,EAAE;QAC7F,KAAK,GAAG,aAAa,GAAI,QAAQ,CAAC,IAAI,EAA4B,CAAC,qBAAqB,EAAE,CAAC;KAC5F;IAED,qBAAqB;IACrB,mEAAmE;IACnE,OAAQ,KAAK,CAAC,IAAI,EAA4B,CAAC,qBAAqB,EAAE,GAAG,KAAK,IAAI,OAAO,CAAC,MAAM,EAAE;QAChG,OAAO,CAAC,GAAG,EAAE,CAAC;QACd,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;KAC9B;IAED,IAAI,OAAO,CAAC,MAAM,KAAK,UAAU,EAAE;QACjC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAClB,YAAY,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;KAC7B;SAAM;QACL,YAAY,GAAG,KAAK,CAAC,IAAI,EAAE,GAAG,KAAK,CAAC;KACrC;IAED,OAAO,YAAY,CAAC;AACtB,CAAC","sourcesContent":["/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nexport function textEllipsis(textNode: any, text: string, ellipsisWidth: number): string {\n  let ellipsisText = '';\n  let width = ellipsisWidth;\n\n  const letters = text.split('');\n  const lettersNum = letters.length;\n\n  // Clear all children before inserting text\n  textNode.selectAll('*').remove();\n  const ellipsis = textNode.append('tspan').attr('class', 'ellipsis').text('...');\n  const tSpan = textNode.insert('tspan', ':first-child').text(letters.join(''));\n\n  if ((tSpan.node() as SVGTextContentElement).getComputedTextLength() > width && letters.length) {\n    width = ellipsisWidth - (ellipsis.node() as SVGTextContentElement).getComputedTextLength();\n  }\n\n  // Try the whole line\n  // While it's too long, and we have words left, keep removing words\n  while ((tSpan.node() as SVGTextContentElement).getComputedTextLength() > width && letters.length) {\n    letters.pop();\n    tSpan.text(letters.join(''));\n  }\n\n  if (letters.length === lettersNum) {\n    ellipsis.remove();\n    ellipsisText = tSpan.text();\n  } else {\n    ellipsisText = tSpan.text() + '...';\n  }\n\n  return ellipsisText;\n}\n"]}