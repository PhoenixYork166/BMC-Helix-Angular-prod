{"version":3,"file":"chart-color.service.js","sourceRoot":"","sources":["../../../../../../libs/adapt-charts/src/common/services/chart-color.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\nimport {ColorType, RGBChannels} from '@bmc-ux/adapt-angular';\nimport * as d3 from 'd3';\n\nexport type ColorRange = string[];\n\nexport enum AdaptChartColorStatus {\n  Default = 0,\n  Success = 1,\n  Warning = 2,\n  Danger = 3,\n  Custom = 4 // @since 9.3.0\n}\n\nexport const STATUS_COLOR_RANGE = {\n  Default: ['#195560', '#267f91'],\n  Success: ['#408600', '#5da627'],\n  Warning: ['#FFBE00', '#FFE438'],\n  Danger: ['#E80B30', '#ff3a49'],\n  Custom: ['#0078CC', '#009AF0']\n};\n\n\nexport type ColorsPalette = 'gradient' | 'high-diff';\n\nexport abstract class ChartColorsFactory {\n\n  static getGradientColors(): string[] {\n    return [\n      '#488EE7',\n      '#1145AC',\n      '#8061C5',\n      '#7E1E85',\n      '#C94FAF',\n      '#E9345D',\n      '#EF6F70',\n      '#DD8A44',\n      '#E7B548',\n      '#D5DB51',\n      '#9DB957',\n      '#54C2C3',\n      '#89F4F4',\n      '#9CD0FB',\n      '#AAB2F5',\n      '#E6A8D7'\n    ];\n  }\n\n  static getHighDiffColors(): string[] {\n    return [\n      '#6487EA',\n      '#E9862F',\n      '#875BCB',\n      '#EFB426',\n      '#90D1FF',\n      '#FF656C',\n      '#95BC44',\n      '#D83FB4',\n      '#00C5C4',\n      '#89008A',\n      '#D3DD27',\n      '#FB025A',\n      '#0242B3',\n      '#F0A3DA',\n      '#62F7F6',\n      '#AAB0FA',\n    ];\n  }\n}\n\n@Injectable()\nexport class ChartColorService {\n  private _gradientColors: string[] = ChartColorsFactory.getGradientColors();\n  private _highDiffColorsColors: string[] = ChartColorsFactory.getHighDiffColors();\n\n\n  static getColorRange(range: ColorRange | AdaptChartColorStatus, count: number): string[] {\n    let _temp: ColorRange;\n\n    if (range instanceof Array) {\n      _temp = range;\n    } else {\n      switch (range) {\n        case (AdaptChartColorStatus.Success): {\n          _temp = STATUS_COLOR_RANGE.Success;\n          break;\n        }\n        case (AdaptChartColorStatus.Warning): {\n          _temp = STATUS_COLOR_RANGE.Warning;\n          break;\n        }\n        case (AdaptChartColorStatus.Danger): {\n          _temp = STATUS_COLOR_RANGE.Danger;\n          break;\n        }\n        default: {\n          _temp = STATUS_COLOR_RANGE.Default;\n          break;\n        }\n      }\n    }\n\n    const _range = [];\n\n    const _scale = d3\n      .scaleLinear<string>()\n      .range(_temp)\n      .domain([1, count]);\n\n    for (let i = 0; i < count; i++) {\n      _range.push(d3.color(_scale(i + 1)).hex());\n    }\n\n    return _range;\n  }\n\n  getColor(id: number, palette?: ColorsPalette): string {\n    const colors = palette === 'high-diff' ? this._highDiffColorsColors : this._gradientColors;\n    const len = colors.length - 1;\n\n    return colors[id % len];\n  }\n\n  getDarken(color: string, percent: number, type: ColorType): string {\n    const colorRGB: RGBChannels = type === ColorType.HEX ? this._parseHEX(color) : this._parseRGB(color);\n\n    Object.keys(colorRGB).forEach((colorComponentName) => {\n      colorRGB[colorComponentName] = Math.floor((1 - percent) * colorRGB[colorComponentName]);\n    });\n\n    return `#${this._decToHEX(colorRGB.r)}${this._decToHEX(colorRGB.g)}${this._decToHEX(colorRGB.b)}`;\n  }\n\n  getContrast(color: string, type: ColorType): string {\n    const channels: RGBChannels = type === ColorType.HEX ? this._parseHEX(color) : this._parseRGB(color);\n\n    // Converts the RGB color space into YIQ\n    const yiq = ((channels.r * 299) + (channels.g * 587) + (channels.b * 114)) / 1000;\n\n    return (yiq >= 128) ? '#000' : '#fff';\n  }\n\n  setColors(newColors: string[]): void {\n    this._gradientColors = newColors;\n  }\n\n  private _parseHEX(color: string): RGBChannels {\n    const colorCode = color.trim().slice(1);\n    let r;\n    let g;\n    let b;\n\n    // In case if color value passed in short variant (eg. #456 instead of #445566)\n    if (colorCode.length === 3) {\n      r = parseInt(colorCode.substring(0, 1) + colorCode.substring(0, 1), 16);\n      g = parseInt(colorCode.substring(1, 2) + colorCode.substring(1, 2), 16);\n      b = parseInt(colorCode.substring(2, 3) + colorCode.substring(2, 3), 16);\n    } else {\n      r = parseInt(colorCode.substring(0, 2), 16);\n      g = parseInt(colorCode.substring(2, 4), 16);\n      b = parseInt(colorCode.substring(4, 6), 16);\n    }\n\n    return {r, g, b};\n  }\n\n  private _parseRGB(color: string): RGBChannels {\n    const colorTrimmed = color.trim();\n    const colorCode = colorTrimmed.substring(4, colorTrimmed.length - 1).replace(/ /g, '').split(',');\n    const [r, g, b] = colorCode.map((c) => parseInt(c, 10));\n\n    return {r, g, b};\n  }\n\n  private _decToHEX(n: number): string {\n    const hex = n.toString(16);\n\n    return hex.length === 1 ? '0' + hex : hex;\n  }\n}\n"]}