{"version":3,"file":"chart-legend.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-charts/src/common/legend/chart-legend.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input, Output, EventEmitter, OnInit, HostBinding, NgZone, OnDestroy} from '@angular/core';\nimport {DomSanitizer, SafeStyle} from '@angular/platform-browser';\nimport {ListKeyManager} from '@angular/cdk/a11y';\nimport {DOWN_ARROW, ENTER, UP_ARROW, TAB, SPACE} from '@angular/cdk/keycodes';\nimport {isNull, isString} from 'lodash-es';\nimport {ReplaySubject} from 'rxjs';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {\n  AdaptDeviceDetectionService,\n  AdaptListKeyManagerItemDirective,\n  ColorType,\n  getEventKeyCode,\n  isUndefined\n} from '@bmc-ux/adapt-angular';\nimport {ChartColorService, ColorsPalette} from '../services/chart-color.service';\nimport {AdaptChartCategoryEvent, AdaptChartLegendState} from '../models/chart.model';\n\n@Component({\n  selector: 'adapt-chart-legend',\n  template: `\n    <div adaptListKeyManager\n         tabindex=\"0\"\n         class=\"adapt-chart-legend\"\n         [class.adapt-chart-legend-mobile]=\"isMobile\"\n         [ngClass]=\"{ 'adapt-chart-legend-mouse-over': isMouseOver }\"\n         [style.width]=\"isMobile ? '100%' : width + 'px'\"\n         [attr.role]=\"activeClick ? 'listbox' : 'list'\"\n         [attr.aria-multiselectable]=\"activeClick ? true : null\"\n         [attr.aria-activedescendant]=\"activeOption\"\n         (keyManagerStateChange)=\"keyManagerStateChange($event)\"\n         (keydown)=\"legendKeydownHandler($event)\"\n         (keyup.tab)=\"toggleMouseOverStatus()\"\n         (mouseenter)=\"toggleMouseOverStatus()\"\n         (mouseleave)=\"toggleMouseOverStatus()\"\n         (focus)=\"legendFocus = true\"\n         (blur)=\"legendFocus = false\">\n      <ng-container *ngIf=\"!isMobile; else mobileLegend\">\n        <div class=\"adapt-chart-legend-col\"\n             *ngFor=\"let column of columns; let colId = index; trackBy: trackByIndex\">\n          <ng-container *ngFor=\"let legend of column; let id = index; trackBy: trackByIndex\">\n            <button adaptListKeyManagerItem\n                    tabindex=\"-1\"\n                    class=\"adapt-chart-legend-item\"\n                    [class.adapt-chart-legend-item__hidden]=\"legend.hidden\"\n                    [attr.id]=\"columnSize*colId + id\"\n                    [attr.aria-checked]=\"activeClick ? !legend.hidden : null\"\n                    [attr.aria-selected]=\"activeClick ? !legend.hidden : null\"\n                    [attr.type]=\"activeClick ? 'button' : null\"\n                    [attr.role]=\"activeClick ? 'option' : 'listitem'\"\n                    (click)=\"clickLegend(columnSize*colId + id)\"\n                    (mouseenter)=\"enterLegendItem($event, columnSize*colId + id)\"\n                    (mouseleave)=\"leaveLegendItem($event, columnSize*colId + id)\"\n                    (mousemove)=\"moveLegendItem($event, columnSize*colId + id)\">\n              <span class=\"adapt-chart-legend-item-color\"\n                    [style.border-color]=\"getBorderColorById(columnSize*colId + id)\"\n                    [style.background-color]=\"getColorById(columnSize*colId + id)\"></span>\n              <span class=\"adapt-chart-legend-item-text\"\n                    [class.text-active]=\"legendFocus && (activeOption === columnSize*colId + id)\">{{legend.item}}</span>\n            </button>\n            <br/>\n          </ng-container>\n        </div>\n      </ng-container>\n\n      <ng-template #mobileLegend>\n        <button class=\"adapt-chart-legend-item\"\n                type=\"button\"\n                *ngFor=\"let category of legend; let id = index;\"\n                (click)=\"clickLegend(id)\">\n          <span class=\"adapt-chart-legend-item-color\"\n                [style.border-color]=\"getBorderColorById(id)\"\n                [style.background-color]=\"getColorById(id)\"></span>\n          <div class=\"adapt-chart-legend-item-text\">\n            <div>{{category.item}}</div>\n          </div>\n        </button>\n      </ng-template>\n    </div>\n  `,\n  styles: [`\n    :host {\n      position: relative;\n    }\n\n    .adapt-chart-legend-item {\n      background: transparent;\n      border: none;\n    }\n  `]\n})\nexport class ChartLegendComponent implements OnInit, OnDestroy {\n  static id: number = 0;\n  @HostBinding('class') @Input() mainCls: string = '';\n  @HostBinding('class.adapt-chart-legend-scrolled') isScrolled: boolean = false;\n\n  @Input() items: string[] | AdaptChartLegendState[];\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('columns') columnsCount: number = 1;\n  @Input() customColors: string[];\n  @Input() colorsPalette: ColorsPalette;\n  @Input() activeHover: boolean;\n  @Input() activeClick: boolean;\n  @Input() width: number;\n  @Input() focusable: boolean = true;\n\n  @Output() readonly categoryShow: EventEmitter<string> = new EventEmitter();\n  @Output() readonly categoryHide: EventEmitter<string> = new EventEmitter();\n  @Output() readonly categoryEnter: EventEmitter<AdaptChartCategoryEvent> = new EventEmitter();\n  @Output() readonly categoryLeave: EventEmitter<AdaptChartCategoryEvent> = new EventEmitter();\n  @Output() readonly categoryMove: EventEmitter<AdaptChartCategoryEvent> = new EventEmitter();\n\n  id: number;\n  legend: AdaptChartLegendState[] = [];\n  columns: AdaptChartLegendState[][] = [];\n  columnSize: number;\n  isMouseOver: boolean = this.isMobile;\n  activeOption: number = null;\n  legendFocus: boolean = false;\n  _listKeyManager: ListKeyManager<AdaptListKeyManagerItemDirective>;\n\n  private _destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  get isMobile(): boolean {\n    return this._deviceDetectionService.deviceTablet() || this._deviceDetectionService.deviceMobile();\n  }\n\n  constructor(private _chartColorService: ChartColorService,\n              private _deviceDetectionService: AdaptDeviceDetectionService,\n              private _sanitize: DomSanitizer,\n              private _ngZone: NgZone) {\n  }\n\n  ngOnInit(): void {\n    this.initLegend();\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed$.next(true);\n    this._destroyed$.complete();\n  }\n\n  legendKeydownHandler(event: KeyboardEvent): void {\n    switch (getEventKeyCode(event)) {\n      case DOWN_ARROW:\n      case UP_ARROW: {\n        this._listKeyManager?.onKeydown(event);\n\n        break;\n      }\n\n      case ENTER:\n      case SPACE: {\n        if (!isNull(this.activeOption)) {\n          event.preventDefault();\n\n          this.clickLegend(this.activeOption);\n        }\n\n        break;\n      }\n\n      case TAB: {\n        this.toggleMouseOverStatus();\n\n        break;\n      }\n    }\n  }\n\n  keyManagerStateChange(listKeyManager?: ListKeyManager<AdaptListKeyManagerItemDirective>): void {\n    this._listKeyManager = listKeyManager;\n\n    this._ngZone.onStable\n      .pipe(takeUntil(this._destroyed$), take(1))\n      .subscribe(() => {\n        this._listKeyManager?.setFirstItemActive();\n      });\n\n    this._listKeyManager?.change\n      .pipe(takeUntil(this._destroyed$))\n      .subscribe(() => {\n        this.activeOption = this._listKeyManager.activeItemIndex;\n      });\n\n  }\n\n  parseColumns(): void {\n    let columns = (new Array(this.columnsCount)).fill([]);\n\n    columns = columns.map((col, colId) => {\n      const start = colId * this.columnSize;\n      const items = this.legend.slice();\n      const end = start + this.columnSize;\n\n      return items.slice(start, end);\n    });\n\n    this.columns = columns;\n\n    if (!this.legend || !this.legend.length || this.legend.length !== this.items.length) {\n      this.initLegend();\n    }\n  }\n\n  getColorById(id: number): SafeStyle {\n    const defaultColor = this.customColors ? this.customColors[id] : this._chartColorService.getColor(id, this.colorsPalette);\n    const hoverColor = this._chartColorService.getDarken(defaultColor, .14, ColorType.HEX);\n    const color = this.legend[id].hover ? hoverColor : defaultColor;\n\n    return this._sanitize.bypassSecurityTrustStyle(<string>color);\n  }\n\n  getBorderColorById(id: number): SafeStyle {\n    const backgroundColor = this.customColors ? this.customColors[id] : this._chartColorService.getColor(id, this.colorsPalette);\n    const defaultBorderColor = this._chartColorService.getDarken(backgroundColor, .14, ColorType.HEX);\n    const hoverBorderColor = this._chartColorService.getDarken(backgroundColor, .24, ColorType.HEX);\n    const borderColor = this.legend[id].hover ? hoverBorderColor : defaultBorderColor;\n\n    return this._sanitize.bypassSecurityTrustStyle(borderColor);\n  }\n\n  clickLegend(id: number): void {\n    const legend = this.legend[id];\n\n    if (isNull(id) || !this.activeClick) {\n      return;\n    }\n\n    if (legend.hidden) {\n      this._showCategory(legend);\n    } else {\n      this._hideCategory(legend);\n    }\n  }\n\n  toggleMouseOverStatus(): void {\n    if (!this.activeHover) {\n      return;\n    }\n\n    if (this.isMobile) {\n      this.isMouseOver = true;\n\n      return;\n    }\n\n    this.isMouseOver = !this.isMouseOver;\n  }\n\n  enterLegendItem(event: MouseEvent, id: number): void {\n    this.activeOption = id;\n    this.legend[id].hover = true;\n    this.categoryEnter.emit({id, event});\n  }\n\n  leaveLegendItem(event: MouseEvent, id: number): void {\n    this.legend[id].hover = false;\n    this.categoryLeave.emit({id, event});\n  }\n\n  moveLegendItem(event: MouseEvent, id: number): void {\n    this.categoryMove.emit({id, event});\n  }\n\n  update(items: string[] | AdaptChartLegendState[]): void {\n    this.items = items;\n    this.legend = this._getLegend();\n    this.columnSize = Math.ceil(this.items.length / this.columnsCount);\n    this.parseColumns();\n  }\n\n  initLegend(): void {\n    if (isUndefined(this.items) || !this.items.length || isNull(this.items)) {\n      return;\n    }\n\n    this.activeHover = isUndefined(this.activeHover) ? true : this.activeHover;\n    this.activeClick = isUndefined(this.activeClick) ? true : this.activeClick;\n    this.legend = this._getLegend();\n\n    this.columnSize = Math.ceil(this.items.length / this.columnsCount);\n    this.parseColumns();\n  }\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n\n  private _getLegend(): AdaptChartLegendState[] {\n    return isString(this.items[0])\n      ? (this.items as string[]).map((item) => ({item, hidden: false, hover: false}))\n      : (this.items as AdaptChartLegendState[]).map((item) => ({item: item.item, hidden: item.hidden, hover: false}));\n  }\n\n  private _showCategory(legend: AdaptChartLegendState): void {\n    legend.hidden = false;\n\n    this.categoryShow.emit(legend.item);\n  }\n\n  private _hideCategory(legend: AdaptChartLegendState): void {\n    const visibleCount = this.legend.filter((l) => !l.hidden).length;\n\n    if (visibleCount === 1) {\n      return;\n    }\n\n    legend.hidden = true;\n\n    this.categoryHide.emit(legend.item);\n  }\n}\n"]}