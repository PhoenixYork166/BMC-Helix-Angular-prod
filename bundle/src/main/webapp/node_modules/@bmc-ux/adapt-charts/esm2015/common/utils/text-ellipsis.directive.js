import { Directive, ElementRef, Input, } from '@angular/core';
import { textEllipsis } from './text-ellipsis';
import { select } from 'd3';
import * as i0 from "@angular/core";
export class AdaptTextEllipsisDirective {
    constructor(_el) {
        this._el = _el;
    }
    ngOnChanges(changes) {
        if (changes) {
            const el = select(this._el.nativeElement);
            textEllipsis(el, this.text, this.width);
        }
    }
}
AdaptTextEllipsisDirective.ɵfac = function AdaptTextEllipsisDirective_Factory(t) { return new (t || AdaptTextEllipsisDirective)(i0.ɵɵdirectiveInject(i0.ElementRef)); };
AdaptTextEllipsisDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: AdaptTextEllipsisDirective, selectors: [["text", "adaptTextEllipsis", ""]], inputs: { text: "text", width: "width" }, features: [i0.ɵɵNgOnChangesFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptTextEllipsisDirective, [{
        type: Directive,
        args: [{ selector: 'svg text[adaptTextEllipsis]' }]
    }], function () { return [{ type: i0.ElementRef }]; }, { text: [{
            type: Input
        }], width: [{
            type: Input
        }] }); })();
//# sourceMappingURL=text-ellipsis.directive.js.map