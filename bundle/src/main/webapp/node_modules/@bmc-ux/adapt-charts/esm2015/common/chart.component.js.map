{"version":3,"file":"chart.component.js","sourceRoot":"","sources":["../../../../../libs/adapt-charts/src/common/chart.component.ts","../../../../../libs/adapt-charts/src/common/chart.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {DomSanitizer, SafeStyle} from '@angular/platform-browser';\nimport {ComponentPortal} from '@angular/cdk/portal';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Point} from '@angular/cdk/drag-drop';\nimport {ConnectedPosition} from '@angular/cdk/overlay/position/flexible-connected-position-strategy';\nimport {asapScheduler, ReplaySubject, timer} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {isNull, isNumber, isUndefined} from 'lodash-es';\nimport * as d3 from 'd3';\n\nimport {\n  AdaptDeviceDetectionService,\n  AdaptOverlayService,\n  AdaptOverlayWithPortal,\n  AdaptTooltipComponent,\n  ANIMATION_DURATION,\n  ANIMATION_TIMING_FUNCTION,\n  getOverlayConnectedPositions,\n  SafeCdr,\n} from '@bmc-ux/adapt-angular';\n\nimport {textWrap} from './utils/chart-utils';\n\nimport {\n  AdaptChartAbstract,\n  AdaptChartAxis,\n  AdaptChartCategoryEvent,\n  AdaptChartDimensions,\n  AdaptChartGradientLegend,\n  AdaptChartHeader,\n  AdaptChartLegend,\n  AdaptChartLegendState,\n  AdaptSVGGroupElement\n} from './models/chart.model';\nimport {AdaptChartSliderComponent} from './chart-slider/chart-slider.component';\nimport {ColorsPalette} from './services/chart-color.service';\nimport {ChartLegendComponent} from './legend/chart-legend.component';\nimport {AdaptAreaGraphSliderComponent} from '../area-graph/area-graph-slider.component';\n\nlet CHART_ID = 1;\n\n@Component({\n  selector: 'adapt-chart',\n  templateUrl: './chart.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class AdaptChartComponent extends AdaptChartAbstract implements OnInit, AfterViewInit, OnDestroy {\n  // TODO update types\n  $this: AdaptChartComponent = this;\n\n  @Input() title: string;\n  @Input() description: string;\n  @Input() backgroundColor: string;\n  @Input() width: number;\n  @Input() height: number;\n  @Input() header: AdaptChartHeader;\n  @Input() legend: AdaptChartLegend;\n  /*\n  * Useful to prevent legend rendering on view(eg. on chart slider component)\n  * @since 11.4.0\n  */\n  @Input() renderLegend: boolean = true;\n  @Input() gradientLegend: AdaptChartGradientLegend;\n  @Input() suppressHeader: boolean;\n  @Input() suppressLegend: boolean;\n  @Input() tooltip: string | TemplateRef<unknown>;\n  @Input() noDataText: string;\n  @Input() dataBuilder: (g: AdaptSVGGroupElement, dim: AdaptChartDimensions) => void;\n  @Input() updateChart: (dim: AdaptChartDimensions) => void;\n  @Input() colorsPalette: ColorsPalette;\n  @Input() topSectionTemplate: TemplateRef<void>;\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Input() set data(v: any) {\n    this._data = v;\n\n    if (this._isDataExists()) {\n      this.hideTooltip();\n      this._drawChart();\n    } else {\n      this._showEmptyText = true;\n    }\n  }\n\n  @Output() readonly categoryShow: EventEmitter<string> = new EventEmitter();\n  @Output() readonly categoryHide: EventEmitter<string> = new EventEmitter();\n  @Output() readonly categoryEnter: EventEmitter<AdaptChartCategoryEvent> = new EventEmitter();\n  @Output() readonly categoryLeave: EventEmitter<AdaptChartCategoryEvent> = new EventEmitter();\n  @Output() readonly categoryMove: EventEmitter<AdaptChartCategoryEvent> = new EventEmitter();\n  @Output() readonly clickChart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  chartContainerId: string = 'chartContainer-';\n  id: number;\n  currentContainerWidth: number;\n  currentContainerHeight: number;\n  currentSVGWidth: number;\n  currentSVGHeight: number;\n  isLegendHidden: boolean = false;\n  legendWidth: number = 250;\n  defaultMaxAxisWidth: number = 150;\n\n  @ViewChild('chartContainer', {static: true}) chartContainerEl: ElementRef<HTMLDivElement>;\n  @ViewChild('chartArea', {static: true}) chartAreaEl: ElementRef<HTMLDivElement>;\n  @ViewChild('svgContainer', {static: false}) svgContainerEl: ElementRef<SVGElement>;\n  @ViewChild('legend', {static: false}) legendEl: ElementRef<HTMLDivElement>;\n  @ViewChild('legendComponent', {static: false}) legendComponent: ChartLegendComponent;\n  @ViewChild('chartSlider', {static: true}) chartSliderEl: ElementRef<HTMLDivElement>;\n\n  @ContentChild(AdaptChartSliderComponent, {static: false}) chartSliderCmp: AdaptChartSliderComponent;\n  @ContentChild(AdaptAreaGraphSliderComponent, {static: false}) areaChartSliderCmp: AdaptAreaGraphSliderComponent;\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _data: any;\n  private _emptyText: string = 'No data to show...';\n\n  get isMobile(): boolean {\n    return this._deviceDetectionService.deviceMobile() || this._deviceDetectionService.deviceTablet();\n  }\n\n  get showHeader(): boolean {\n    return !this.suppressHeader\n      && this.header\n      && this._isDataExists()\n      && (!isUndefined(this.header.title)\n        || !isUndefined(this.header.subtitle)\n        || !isUndefined(this.header.allowHideLegend));\n  }\n\n  get showLegend(): boolean {\n    return !this.isLegendHidden && !this.suppressLegend\n      && (!isUndefined(this.legend) && !isUndefined(this.legend.items) && !!this.legend.items.length\n        || !isUndefined(this.gradientLegend));\n  }\n\n  get chartWidth(): number {\n    return isUndefined(this.width) ? this.currentContainerWidth : this.width;\n  }\n\n  get chartHeight(): number {\n    return isUndefined(this.height) ? this.currentContainerHeight : this.height;\n  }\n\n  get transition(): SafeStyle {\n    return this._domSanitizer.bypassSecurityTrustStyle(`all ${ANIMATION_DURATION.fast}\n      ${ANIMATION_TIMING_FUNCTION.base.transitionIn}`);\n  }\n\n  get chartBottomPadding(): number {\n    return this._chartBottomPadding;\n  }\n\n  set chartBottomPadding(value: number) {\n    this._chartBottomPadding = value;\n  }\n\n  private _tooltipOverlayWithPortal: AdaptOverlayWithPortal<AdaptTooltipComponent>;\n  private _tooltipOverlayDefaultOffset: number = 6;\n  private _tooltipOverlayPlacements: {\n    top: ConnectedPosition;\n    bottom: ConnectedPosition;\n    left: ConnectedPosition;\n    right: ConnectedPosition;\n  };\n  private _tooltipDefaultCustomCls: string = 'adapt-chart-tooltip position-static';\n  private _showEmptyText: boolean = false;\n  private _removeClickEventListener: Function;\n  private _removeScrollEventListener: Function;\n  private _chartBottomPadding: number = 0;\n  private _destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n\n  constructor(private _deviceDetectionService: AdaptDeviceDetectionService,\n              private _directionality: Directionality,\n              private _domSanitizer: DomSanitizer,\n              private _injector: Injector,\n              private _ngZone: NgZone,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _overlayService: AdaptOverlayService) {\n    super();\n\n    const placements = getOverlayConnectedPositions(this._directionality.value, this._tooltipOverlayDefaultOffset);\n\n    this._tooltipOverlayPlacements = {\n      top: placements.top,\n      bottom: placements.bottom,\n      left: placements.left,\n      right: placements.right\n    };\n\n    this.id = CHART_ID;\n    this.chartContainerId += CHART_ID;\n    CHART_ID++;\n  }\n\n  ngOnInit(): void {\n    if (this.legend && this.legend.width) {\n      this.legendWidth = this.legend.width;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    timer(0, asapScheduler)\n      .pipe(takeUntil(this._destroyed$))\n      .subscribe(() => {\n        this.redrawChart();\n      });\n\n    if (!(this.width && this.height)) {\n      if (this._showEmptyText) {\n        this._drawEmptyText();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._removeListeners();\n    this._destroyed$.next(true);\n    this._destroyed$.complete();\n\n    this.hideTooltip();\n  }\n\n  redrawChart(): void {\n    const {width, height} = this.chartContainerEl.nativeElement.getBoundingClientRect();\n\n    if (this.header && isUndefined(this.header.allowHideLegend)) {\n      this.header.allowHideLegend = true;\n    }\n\n    if (width && this._isDataExists()) {\n      this.currentContainerWidth = width;\n      this.currentContainerHeight = height;\n      this._initChart();\n    }\n\n    SafeCdr.detectChanges(this._changeDetectorRef);\n  }\n\n  showTooltip(target: HTMLElement | Point,\n              content: string | TemplateRef<unknown>,\n              context?: unknown,\n              customCls?: string,\n              offset?: number,\n              sidePositionsFirst?: boolean): void {\n    this.hideTooltip();\n\n    this._ngZone.run(() => {\n      if (target instanceof Element) {\n        this._tooltipOverlayWithPortal = this._overlayService.openOverlayWithPortal(\n          new ComponentPortal(AdaptTooltipComponent, null, this._injector),\n          {\n            origin: target,\n            positionStrategy: 'connected',\n            scrollStrategy: 'close',\n            connectedPositions: this._getTooltipPositions(offset, sidePositionsFirst)\n          }\n        );\n      } else {\n        this._tooltipOverlayWithPortal = this._overlayService.openOverlayWithPortal(\n          new ComponentPortal(AdaptTooltipComponent, null, this._injector),\n          {\n            origin: target,\n            positionStrategy: 'float',\n            scrollStrategy: 'close'\n          }\n        );\n\n        this._tooltipOverlayWithPortal.overlayRef.updatePosition();\n      }\n\n      this._tooltipOverlayWithPortal.componentRef.instance.content = content;\n      this._tooltipOverlayWithPortal.componentRef.instance.visible = true;\n      this._tooltipOverlayWithPortal.componentRef.instance.customCls = `${this._tooltipDefaultCustomCls} ` + customCls;\n\n      if (context) {\n        this._tooltipOverlayWithPortal.componentRef.instance.context = context;\n      }\n    });\n  }\n\n  hideTooltip(): void {\n    if (this._tooltipOverlayWithPortal) {\n      this._tooltipOverlayWithPortal.destroy();\n      this._tooltipOverlayWithPortal = null;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  updateTooltip(content?: string | TemplateRef<any>, context?: any): void {\n    if (this._tooltipOverlayWithPortal) {\n      if (content) {\n        this._tooltipOverlayWithPortal.componentRef.instance.content = content;\n      }\n\n      if (context) {\n        this._tooltipOverlayWithPortal.componentRef.instance.context = context;\n      }\n\n      this._tooltipOverlayWithPortal.overlayRef.updatePosition();\n    }\n  }\n\n  toggleLegend(): void {\n    const {width} = this.chartAreaEl.nativeElement.getBoundingClientRect();\n    let dim: AdaptChartDimensions;\n\n    this.isLegendHidden = !this.isLegendHidden;\n\n\n    if (!this.isMobile) {\n      dim = {\n        w: width + (this.isLegendHidden ? this.legendWidth : -this.legendWidth),\n        h: this.currentSVGHeight\n      };\n    } else {\n      dim = {\n        w: width,\n        h: this.currentSVGHeight\n      };\n    }\n\n    this._setChartSize(true, false);\n\n    if (this.updateChart) {\n      this.updateChart(dim);\n    }\n\n    if (!isUndefined(this.chartSliderCmp)) {\n      this.chartSliderCmp.updateSlider(dim);\n    }\n\n    if (!isUndefined(this.areaChartSliderCmp)) {\n      this.areaChartSliderCmp.updateSlider(dim);\n    }\n  }\n\n  clear(): void {\n    d3.select(`#${this.chartContainerId}`).selectAll('*').remove();\n  }\n\n  clickChartArea(e: MouseEvent): void {\n    this.clickChart.emit(e);\n  }\n\n  updateLegend(items: string[] | AdaptChartLegendState[]): void {\n    if (this.renderLegend) {\n      this.legendComponent.update(items);\n    }\n  }\n\n  getGroupAndDimensions(): {\n    group: AdaptSVGGroupElement;\n    w: number;\n    h: number;\n  } {\n    const group = <AdaptSVGGroupElement>d3.select(`#${this.chartContainerId}`);\n\n    this._setChartSize();\n\n    return {\n      group,\n      w: this.currentSVGWidth,\n      h: this.currentSVGHeight\n    };\n  }\n\n  // Method creates hidden xAxis block to calculate maximum possible height.\n  // Can be helpful when axis long titles need to be rotated\n  updateChartBottomPadding(axisWidth: number, g: AdaptSVGGroupElement, xAxis: AdaptChartAxis, rotateAxis: boolean = false): void {\n    if (!rotateAxis) {\n      this.chartBottomPadding = 0;\n\n      return;\n    }\n\n    const xScale = d3.scaleBand();\n\n    xScale.range([0, axisWidth]).domain(xAxis.categories);\n    const xScaleCall = d3.axisBottom(xScale).tickSizeOuter(0).tickPadding(12);\n\n    g.select('g.fake-axis').remove();\n\n    const axisBlock = g.append('g')\n      .attr('class', 'fake-axis')\n      .attr('style', 'display: none')\n      .attr('aria-hidden', 'true')\n      .call(xScaleCall);\n\n    const textWidths = [];\n\n    axisBlock.selectAll('text').each(function (): void {\n      const text = d3.select(this);\n      const length = (text.node() as SVGTextContentElement).getComputedTextLength();\n\n      textWidths.push(length);\n    });\n\n    if (textWidths.length) {\n      // TODO: Refactor this if possible\n      // eslint-disable-next-line prefer-spread\n      const largest = Math.max.apply(Math, textWidths);\n      const diagonalHeight = largest > this.defaultMaxAxisWidth ? this.defaultMaxAxisWidth : largest;\n\n      // Because we rotate string on 45 deg, we need to calculate height by Pythagoras theorem\n      this.chartBottomPadding = Math.sqrt(Math.pow(diagonalHeight, 2) / 2);\n    } else {\n      this.chartBottomPadding = 0;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  transformAxisTitles(axisBlock: d3.Selection<d3.BaseType, any, any, any>, shouldRotate: boolean): void {\n    const axisTexts = axisBlock.selectAll('text');\n\n    axisTexts\n      .style('text-anchor', shouldRotate ? 'end' : 'middle')\n      .attr('dx', shouldRotate ? '-.8em' : '0')\n      .attr('dy', shouldRotate ? '.15em' : '9')\n      .attr('transform', shouldRotate ? 'rotate(-45)' : 'rotate(0)');\n\n    if (shouldRotate) {\n      axisTexts.call(textWrap, this.defaultMaxAxisWidth);\n    }\n  }\n\n  private _initChart(): void {\n    this._setContainerSize();\n    this._setChartSize();\n    this._drawChart();\n  }\n\n  /**\n   * This method manages the size of the main container element, dependently on\n   * which size parameters have been set\n   */\n  private _setContainerSize(): void {\n    const {width, height} = this;\n\n    this.currentContainerWidth = isUndefined(width) ? this.currentContainerWidth : width;\n    this.currentContainerHeight = isUndefined(height) ? this.currentContainerHeight : height;\n  }\n\n  private _setChartSize(recalculateWidth: boolean = true, recalculateHeight: boolean = true): void {\n    if (recalculateHeight) {\n      const height = this.chartAreaEl.nativeElement.getBoundingClientRect().height;\n      const sliderHeight = this.chartSliderEl.nativeElement.getBoundingClientRect().height;\n\n      // @TODO: For area chart slider height is 0 on init, because of that chart height recalculate incorrectly when legend toggle\n      this.currentSVGHeight = height - sliderHeight;\n    }\n\n    if (recalculateWidth) {\n      const width = this.chartContainerEl.nativeElement.getBoundingClientRect().width;\n\n      this.currentSVGWidth = width - (this.showLegend && !this.isMobile ? this.legendWidth : 0);\n    }\n  }\n\n  private _drawChart(): void {\n    if (!this.dataBuilder) {\n      return;\n    }\n    const options = this.getGroupAndDimensions();\n\n    options.group.selectAll('*').remove();\n\n    this.dataBuilder(options.group, {\n      w: options.w,\n      h: options.h\n    });\n  }\n\n  private _isDataExists(): boolean {\n    return !isUndefined(this._data) && !isNull(this._data);\n  }\n\n  private _drawEmptyText(): void {\n    const group = <AdaptSVGGroupElement>d3.select(`#${this.chartContainerId}`);\n\n    group.append('text')\n      .attr('text-anchor', 'middle')\n      .style('transform', 'translate(50%, 50%)')\n      .style('font-size', '13px')\n      .style('fill', 'currentcolor')\n      .classed('text-default', true)\n      .text(this.noDataText || this._emptyText);\n  }\n\n  private _removeListeners(): void {\n    if (this._removeClickEventListener) {\n      this._removeClickEventListener();\n    }\n\n    if (this._removeScrollEventListener) {\n      this._removeScrollEventListener();\n    }\n  }\n\n  private _getTooltipPositions(offset?: number, sidePositionsFirst?: boolean): ConnectedPosition[] {\n    if (isNumber(offset) && (offset !== this._tooltipOverlayDefaultOffset)) {\n      this._tooltipOverlayDefaultOffset = offset;\n\n      this._tooltipOverlayPlacements.top.offsetY = -this._tooltipOverlayDefaultOffset;\n      this._tooltipOverlayPlacements.bottom.offsetY = this._tooltipOverlayDefaultOffset;\n      this._tooltipOverlayPlacements.left.offsetX = -this._tooltipOverlayDefaultOffset;\n      this._tooltipOverlayPlacements.right.offsetX = this._tooltipOverlayDefaultOffset;\n    }\n\n    return sidePositionsFirst ?\n      [\n        this._tooltipOverlayPlacements.right,\n        this._tooltipOverlayPlacements.left,\n        this._tooltipOverlayPlacements.top,\n        this._tooltipOverlayPlacements.bottom\n      ] :\n      [\n        this._tooltipOverlayPlacements.top,\n        this._tooltipOverlayPlacements.bottom,\n        this._tooltipOverlayPlacements.left,\n        this._tooltipOverlayPlacements.right\n      ];\n  }\n}\n","<div [style.height.px]=\"chartHeight + chartBottomPadding\">\n  <div #chartContainer\n       class=\"adapt-chart\"\n       (click)=\"clickChartArea($event)\"\n       [class.adapt-chart-mobile]=\"isMobile\"\n       [style.width.px]=\"chartWidth\"\n       [style.height.px]=\"chartHeight\">\n\n    <div class=\"adapt-chart-header\" *ngIf=\"showHeader\">\n      <h1 class=\"adapt-chart-header-title m-0\" *ngIf=\"$this.header.title\">{{$this.header.title}}</h1>\n      <button class=\"adapt-chart-context-menu-btn\"\n              role=\"button\"\n              (click)=\"toggleLegend()\"\n              *ngIf=\"$this?.header?.allowHideLegend && !isMobile && !suppressLegend\">\n      <span [class.d-icon-left-eye]=\"isLegendHidden\"\n            [class.d-icon-left-eye_closed]=\"!isLegendHidden\"></span>\n        <span>{{ isLegendHidden ? 'Show' : 'Hide' }} legend</span>\n      </button>\n    </div>\n\n    <!-- For example, can be used for breadcrumbs -->\n    <ng-container *ngTemplateOutlet=\"topSectionTemplate\"></ng-container>\n\n    <div class=\"adapt-chart-body\">\n      <div #chartArea class=\"adapt-chart-zone\" [style.width.px]=\"0\"\n           [style.backgroundColor]=\"$this.backgroundColor\">\n        <ng-content></ng-content>\n        <svg *ngIf=\"dataBuilder\"\n             xmlns=\"http://www.w3.org/2000/svg\"\n             class=\"adapt-chart-svg\"\n             tabindex=\"0\"\n             role=\"graphic/image\"\n             [attr.aria-label]=\"title || $this?.header?.title || ''\"\n             #svgContainer\n             attr.viewbox=\"0 0 {{currentSVGWidth}} {{currentSVGHeight}}\"\n             [attr.width]=\"currentSVGWidth\"\n             [attr.height]=\"currentSVGHeight ? currentSVGHeight + chartBottomPadding : currentSVGHeight\"\n             [style.transition]=\"transition\">\n          <desc id=\"desc\">{{description}}</desc>\n          <g class=\"adapt-chart-group\"\n             [attr.id]=\"chartContainerId\"\n             [attr.width]=\"currentSVGWidth\"></g>\n        </svg>\n        <div #chartSlider class=\"adapt-chart-slider-wrapper\">\n          <ng-content select=\"adapt-chart-slider\"></ng-content>\n          <ng-content select=\"adapt-area-graph-slider\"></ng-content>\n        </div>\n      </div>\n      <div *ngIf=\"gradientLegend\"\n           [style.width]=\"isMobile ? '100%' : legendWidth + 'px'\"\n           [style.transition]=\"transition\"\n           [ngClass]=\"{ 'adapt-legend-zone__hidden': !showLegend }\"\n           class=\"adapt-legend-zone\">\n        <adapt-chart-gradient-legend\n          [containerWidth]=\"legendWidth - 25\"\n          [increaseColor]=\"gradientLegend.increaseColor\"\n          [decreaseColor]=\"gradientLegend.decreaseColor\"\n          [zeroColor]=\"gradientLegend.zeroColor\"\n          [increaseText]=\"gradientLegend.increaseText\"\n          [decreaseText]=\"gradientLegend.decreaseText\"\n          [zeroText]=\"gradientLegend.zeroText\"\n          [height]=\"gradientLegend.height\"\n          [focusable]=\"showLegend\">\n        </adapt-chart-gradient-legend>\n      </div>\n      <div #legend\n           *ngIf=\"legend && renderLegend\"\n           [style.width]=\"isMobile ? '100%' : legendWidth + 'px'\"\n           [style.transition]=\"transition\"\n           [ngClass]=\"{ 'adapt-legend-zone__hidden': !showLegend }\"\n           class=\"adapt-legend-zone\">\n        <adapt-chart-legend #legendComponent\n                            [focusable]=\"showLegend\"\n                            (categoryShow)=\"categoryShow.emit($event)\"\n                            (categoryHide)=\"categoryHide.emit($event)\"\n                            (categoryEnter)=\"categoryEnter.emit($event)\"\n                            (categoryLeave)=\"categoryLeave.emit($event)\"\n                            (categoryMove)=\"categoryMove.emit($event)\"\n                            [activeHover]=\"$this?.legend?.activeHover\"\n                            [activeClick]=\"$this?.legend?.activeClick\"\n                            [customColors]=\"$this?.legend?.customColors\"\n                            [items]=\"$this?.legend?.items\"\n                            [width]=\"legendWidth - 30\"\n                            [columns]=\"$this?.legend?.columns\"\n                            [colorsPalette]=\"colorsPalette\">\n        </adapt-chart-legend>\n      </div>\n    </div>\n  </div>\n</div>\n"]}