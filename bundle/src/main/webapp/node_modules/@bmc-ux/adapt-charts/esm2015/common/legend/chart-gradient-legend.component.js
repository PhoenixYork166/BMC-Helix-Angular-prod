import { Component, Input } from '@angular/core';
import { AdaptTranslateService, AdaptDeviceDetectionService } from '@bmc-ux/adapt-angular';
import * as i0 from "@angular/core";
import * as i1 from "@bmc-ux/adapt-angular";
import * as i2 from "@angular/common";
function ChartGradientLegendComponent_span_8_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 6);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵproperty("tabIndex", ctx_r0.focusable ? 0 : -1);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r0.zeroText);
} }
const _c0 = function (a0, a1) { return { "width": a0, "height": a1 }; };
const _c1 = function (a0) { return { "backgroundImage": a0 }; };
export class ChartGradientLegendComponent {
    constructor(_deviceDetectionService, _ts) {
        this._deviceDetectionService = _deviceDetectionService;
        this._ts = _ts;
        this.focusable = true;
        this._defaultTexts = {};
        this.setDefaultTexts(_ts.getCurrentLanguage());
    }
    get isMobile() {
        return this._deviceDetectionService.deviceTablet() || this._deviceDetectionService.deviceMobile();
    }
    ngOnInit() {
        var _a;
        this.zeroColor = this.zeroColor || '#f0f0f1';
        this.increaseText = this.increaseText || this._defaultTexts.increaseText;
        this.decreaseText = this.decreaseText || this._defaultTexts.decreaseText;
        // Use nullish coalescing to allow pass empty string and hide zeroText
        this.zeroText = (_a = this.zeroText) !== null && _a !== void 0 ? _a : this._defaultTexts.zeroText;
        this.height = this.height || '100%';
    }
    setDefaultTexts(translation) {
        this._defaultTexts.increaseText = translation['adapt.chart.gradientLegend.increaseDefaultText'];
        this._defaultTexts.decreaseText = translation['adapt.chart.gradientLegend.decreaseDefaultText'];
        this._defaultTexts.zeroText = translation['adapt.chart.gradientLegend.zeroDefaultText'];
    }
}
ChartGradientLegendComponent.ɵfac = function ChartGradientLegendComponent_Factory(t) { return new (t || ChartGradientLegendComponent)(i0.ɵɵdirectiveInject(i1.AdaptDeviceDetectionService), i0.ɵɵdirectiveInject(i1.AdaptTranslateService)); };
ChartGradientLegendComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ChartGradientLegendComponent, selectors: [["adapt-chart-gradient-legend"]], inputs: { increaseColor: "increaseColor", decreaseColor: "decreaseColor", zeroColor: "zeroColor", increaseText: "increaseText", decreaseText: "decreaseText", zeroText: "zeroText", height: "height", containerWidth: "containerWidth", focusable: "focusable" }, decls: 18, vars: 12, consts: [["role", "legend", 1, "adapt-chart-legend", "adapt-chart-legend__gradient", 3, "ngStyle"], [1, "adapt-chart-legend__gradient-label", "adapt-chart-legend__gradient-label_top", 3, "tabIndex"], [1, "adapt-chart-legend__gradient-label", "adapt-chart-legend__gradient-label_middle"], [3, "tabIndex", 4, "ngIf"], [1, "adapt-chart-legend__gradient-label", "adapt-chart-legend__gradient-label_bottom", 3, "tabIndex"], [1, "adapt-chart-legend__gradient-block", 3, "ngStyle"], [3, "tabIndex"]], template: function ChartGradientLegendComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtext(0, "\n    ");
        i0.ɵɵelementStart(1, "div", 0);
        i0.ɵɵtext(2, "\n      ");
        i0.ɵɵelementStart(3, "div", 1);
        i0.ɵɵtext(4);
        i0.ɵɵelementEnd();
        i0.ɵɵtext(5, "\n      ");
        i0.ɵɵelementStart(6, "div", 2);
        i0.ɵɵtext(7, "\n        ");
        i0.ɵɵtemplate(8, ChartGradientLegendComponent_span_8_Template, 2, 2, "span", 3);
        i0.ɵɵtext(9, "\n      ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(10, "\n      ");
        i0.ɵɵelementStart(11, "div", 4);
        i0.ɵɵtext(12);
        i0.ɵɵelementEnd();
        i0.ɵɵtext(13, "\n      ");
        i0.ɵɵelementStart(14, "div", 5);
        i0.ɵɵtext(15, "\n      ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(16, "\n    ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(17, "\n  ");
    } if (rf & 2) {
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction2(7, _c0, ctx.isMobile ? "100%" : ctx.containerWidth ? ctx.containerWidth + "px" : "", ctx.height));
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("tabIndex", ctx.focusable ? 0 : -1);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1("\n        ", ctx.increaseText, "\n      ");
        i0.ɵɵadvance(4);
        i0.ɵɵproperty("ngIf", ctx.zeroText);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("tabIndex", ctx.focusable ? 0 : -1);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1("\n        ", ctx.decreaseText, "\n      ");
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction1(10, _c1, "linear-gradient(to bottom, " + ctx.increaseColor + ", " + ctx.zeroColor + " 50%, " + ctx.decreaseColor + ")"));
    } }, directives: [i2.NgStyle, i2.NgIf], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(ChartGradientLegendComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-chart-gradient-legend',
                template: `
    <div class="adapt-chart-legend adapt-chart-legend__gradient"
         role="legend"
         [ngStyle]="{'width': isMobile ? '100%' : containerWidth ? containerWidth + 'px' : '', 'height': height}">
      <div class="adapt-chart-legend__gradient-label adapt-chart-legend__gradient-label_top"
           [tabIndex]="focusable ? 0 : -1">
        {{increaseText}}
      </div>
      <div class="adapt-chart-legend__gradient-label adapt-chart-legend__gradient-label_middle">
        <span *ngIf="zeroText" [tabIndex]="focusable ? 0 : -1">{{zeroText}}</span>
      </div>
      <div class="adapt-chart-legend__gradient-label adapt-chart-legend__gradient-label_bottom"
           [tabIndex]="focusable ? 0 : -1">
        {{decreaseText}}
      </div>
      <div class="adapt-chart-legend__gradient-block"
           [ngStyle]="{'backgroundImage': 'linear-gradient(to bottom, ' + increaseColor + ', ' + zeroColor + ' 50%, ' + decreaseColor + ')'}">
      </div>
    </div>
  `
            }]
    }], function () { return [{ type: i1.AdaptDeviceDetectionService }, { type: i1.AdaptTranslateService }]; }, { increaseColor: [{
            type: Input
        }], decreaseColor: [{
            type: Input
        }], zeroColor: [{
            type: Input
        }], increaseText: [{
            type: Input
        }], decreaseText: [{
            type: Input
        }], zeroText: [{
            type: Input
        }], height: [{
            type: Input
        }], containerWidth: [{
            type: Input
        }], focusable: [{
            type: Input
        }] }); })();
//# sourceMappingURL=chart-gradient-legend.component.js.map