import { Pipe } from '@angular/core';
import * as i0 from "@angular/core";
class NumberPrefix {
}
NumberPrefix.K = Math.pow(10, 3);
NumberPrefix.M = Math.pow(10, 6);
NumberPrefix.G = Math.pow(10, 9);
NumberPrefix.T = Math.pow(10, 12);
export class CutNumberPipe {
    // TODO: Double check 'fractional' argument
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    transform(value, fractional = 2) {
        const prefixes = Object.keys(NumberPrefix);
        let shortValue;
        prefixes.some((prefixCurrent, id) => {
            const prefixPrevious = prefixes[id - 1];
            if (value < NumberPrefix[prefixCurrent]) {
                if (prefixPrevious) {
                    const t = value % NumberPrefix[prefixPrevious];
                    shortValue = (value / NumberPrefix[prefixPrevious]).toFixed(t ? 1 : 0) + prefixPrevious;
                }
                else {
                    shortValue = Number(value.toFixed(6)).toString();
                }
            }
            return value < NumberPrefix[prefixCurrent];
        });
        return shortValue;
    }
}
CutNumberPipe.ɵfac = function CutNumberPipe_Factory(t) { return new (t || CutNumberPipe)(); };
CutNumberPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: "cutNumber", type: CutNumberPipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(CutNumberPipe, [{
        type: Pipe,
        args: [{
                name: 'cutNumber'
            }]
    }], null, null); })();
//# sourceMappingURL=cut-number.pipe.js.map