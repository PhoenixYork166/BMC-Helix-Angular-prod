{"version":3,"file":"chart-slider.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-charts/src/common/chart-slider/chart-slider.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ReplaySubject} from 'rxjs';\nimport {SafeCdr} from '@bmc-ux/adapt-angular';\n\nimport {AdaptChartAxis, AdaptChartDimensions, AdaptChartSliderType} from '../models/chart.model';\nimport {AdaptStackedChartAbstract, AdaptStackedChartType} from '../models/stacked-chart.model';\n\nlet id = 0;\n\nconst classPrefix = 'adapt-chart-slider';\nconst sliderPaddingTop = 10;\n\n@Component({\n  selector: 'adapt-chart-slider',\n  template: `\n    <div #slider\n         [class]=\"classPrefix\"\n         [style.height.px]=\"height\"\n         (click)=\"onClickSliderArea($event)\" [style.marginLeft.px]=\"leftShift\">\n      <div class=\"{{classPrefix}}-main\">\n        <div #overlayLeft\n             class=\"{{classPrefix}}-side-overlay {{classPrefix}}-side-overlay-right\"></div>\n        <div #dnd\n             (mouseover)=\"onMouseOver()\"\n             (mouseout)=\"onMouseOut()\"\n             (mousedown)=\"onMouseDown($event)\"\n             [style.width.%]=\"100 / monitorsCount\"\n             class=\"{{classPrefix}}-spot\"\n             [ngClass]=\"isActive ? classPrefix + '-spot-active' : ''\"></div>\n        <div class=\"{{classPrefix}}-chart-zone\"\n             (keydown.arrowRight)=\"onSliderShift()\"\n             (keydown.arrowLeft)=\"onSliderShift(true)\">\n          <ng-container *ngIf=\"initComplete\" [ngSwitch]=\"type\">\n            <adapt-stacked-chart #chart\n                                 *ngSwitchCase=\"chartSliderType.bar\"\n                                 [suppressHeader]=\"true\"\n                                 [suppressLegend]=\"true\"\n                                 [renderLegend]=\"false\"\n                                 [showEmptyColIndicator]=\"false\"\n                                 [legend]=\"null\"\n                                 [hideAxises]=\"true\"\n                                 [xAxis]=\"xAxis\"\n                                 [yAxis]=\"{}\"\n                                 [series]=\"data\"\n                                 [height]=\"height - sliderPaddingTop\"\n                                 [type]=\"stackedChartType\"\n                                 [seriesDisplay]=\"stackedChart && stackedChart.seriesDisplay\"></adapt-stacked-chart>\n          </ng-container>\n        </div>\n        <div #overlay class=\"{{classPrefix}}-overlay\" [style.width.%]=\"100 / monitorsCount\"></div>\n        <div #overlayRight\n             class=\"{{classPrefix}}-side-overlay {{classPrefix}}-side-overlay-left\"></div>\n      </div>\n      <div class=\"{{classPrefix}}-line-wrapper\">\n        <div class=\"{{classPrefix}}-line\"></div>\n      </div>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AdaptChartSliderComponent implements OnInit, AfterViewInit, OnDestroy {\n  chartSliderType: typeof AdaptChartSliderType = AdaptChartSliderType;\n  stackedChartType: AdaptStackedChartType = AdaptStackedChartType.Column;\n  classPrefix: string;\n  sliderPaddingTop: number;\n  id: number;\n  isActive: boolean = false;\n  sliderSpotWidth: number = 50;\n  monitorsCount: number;\n  initComplete: boolean = false;\n\n  get overlayLeftWidth(): number {\n    const sliderLeft = this._sliderEl.nativeElement.getBoundingClientRect().left;\n    const {left} = this._dndEl.nativeElement.getBoundingClientRect();\n\n    return left - sliderLeft;\n  }\n\n  get overlayRightWidth(): number {\n    const sliderLeft = this._sliderEl.nativeElement.getBoundingClientRect().left;\n    const sliderWidth = this._sliderEl.nativeElement.getBoundingClientRect().width;\n    const {left, width} = this._dndEl.nativeElement.getBoundingClientRect();\n\n    return sliderWidth - (left - sliderLeft) - width;\n  }\n\n  @Input() type: AdaptChartSliderType;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Input() data: any[];\n  @Input() xAxis: AdaptChartAxis;\n  @Input() height: number = 45;\n  @Input() slidePointsCount: number;\n  @Input() customColors: string[];\n\n  // Cruth: should be injected, but raise an error\n  // TODO check for type improvement\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Input() stackedChart: AdaptStackedChartAbstract<any>;\n  // TODO: has to be refactored\n  @Input() leftShift: number = 0;\n\n  @Input() containerWidth: number;\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Output() readonly rangeChanged: EventEmitter<any> = new EventEmitter();\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @ViewChild('chart') private _chartComponent: any;\n  @ViewChild('slider', {static: true}) private _sliderEl: ElementRef<HTMLDivElement>;\n  @ViewChild('dnd', {static: true}) private _dndEl: ElementRef<HTMLDivElement>;\n  @ViewChild('overlay', {static: true}) private _overlayEl: ElementRef<HTMLDivElement>;\n  @ViewChild('overlayLeft', {static: true}) private _overlayLeftEl: ElementRef<HTMLDivElement>;\n  @ViewChild('overlayRight', {static: true}) private _overlayRightEl: ElementRef<HTMLDivElement>;\n\n  private _inMotion: boolean = false;\n  private _bodyMouseMoveLn: () => void;\n  private _bodyMouseUpLn: () => void;\n  private _gap: number;\n  private _startPoint: number;\n  private _endPoint: number;\n  private _categoryFilter: string[] = [];\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _dataCopy: any[];\n  private _x: number = 0;\n  private _width: number;\n  private _destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  constructor(private _elementRef: ElementRef,\n              private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    id++;\n    this.id = id;\n    this.classPrefix = classPrefix;\n    this.sliderPaddingTop = sliderPaddingTop;\n  }\n\n  ngOnInit(): void {\n    this._dataCopy = this.data.slice();\n    this._bodyMouseMoveLn = this._renderer.listen('body', 'mousemove', (e) => {\n      if (this._inMotion) {\n        const {clientX} = e;\n        const {width} = this._dndEl.nativeElement.getBoundingClientRect();\n        const sliderWidth = this._sliderEl.nativeElement.getBoundingClientRect().width;\n        let x = clientX - this._sliderEl.nativeElement.getBoundingClientRect().left - this._gap;\n\n        x = x < 0 ? 0 : x;\n        x = x > sliderWidth - width ? sliderWidth - width : x;\n\n        this._updateOverlay(x);\n      }\n    });\n    this._bodyMouseUpLn = this._renderer.listen('body', 'mouseup', (e) => {\n      const {target} = e;\n\n      if (target !== this._dndEl.nativeElement) {\n        this.isActive = false;\n      }\n\n      this._inMotion = false;\n    });\n  }\n\n  ngAfterViewInit(): void {\n    const {width} = this._sliderEl.nativeElement.getBoundingClientRect();\n    const dataLength = this._getDataLength();\n    const monitorsCount = Math.ceil(dataLength / this.slidePointsCount);\n\n    this.monitorsCount = monitorsCount;\n    this._width = width;\n    this.sliderSpotWidth = width / monitorsCount;\n    this._updateOverlay(0);\n\n    this.initComplete = true;\n    SafeCdr.detectChanges(this._changeDetectorRef);\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed$.next(true);\n    this._destroyed$.complete();\n\n    this._bodyMouseMoveLn();\n    this._bodyMouseUpLn();\n  }\n\n  onMouseDown(e: MouseEvent): void {\n    const {clientX, target} = e;\n    const {left} = (target as HTMLTextAreaElement).getBoundingClientRect();\n\n    this._gap = Math.floor(clientX - left);\n    this._inMotion = true;\n  }\n\n  onMouseOver(): void {\n    this.isActive = true;\n  }\n\n  onMouseOut(): void {\n    if (!this._inMotion) {\n      this.isActive = false;\n    }\n  }\n\n  onSliderShift(shiftBack?: boolean): void {\n    const indicatorCS = getComputedStyle(this._overlayEl.nativeElement);\n    const indicatorWidth = parseInt(indicatorCS.width, 10);\n    const indicatorLeft = parseInt(indicatorCS.left, 10);\n    const sliderWidth = parseInt(getComputedStyle(this._sliderEl.nativeElement).width, 10);\n\n    let newX;\n\n    if (shiftBack) {\n      newX = indicatorLeft - indicatorWidth;\n\n      if (newX < 0) {\n        newX = 0;\n      }\n    } else {\n      newX = indicatorLeft + indicatorWidth;\n\n      if (newX + indicatorWidth > sliderWidth) {\n        newX = sliderWidth - indicatorWidth;\n      }\n    }\n\n    this._updateOverlay(newX);\n  }\n\n  onClickSliderArea(e: MouseEvent): void {\n    if (this.isActive) {\n      return;\n    }\n\n    const {clientX} = e;\n    const {left, width} = this._sliderEl.nativeElement.getBoundingClientRect();\n    let newLeftSpotPosition = clientX - left - this.sliderSpotWidth / 2;\n\n    newLeftSpotPosition = newLeftSpotPosition < 0 ? 0 : newLeftSpotPosition;\n    newLeftSpotPosition = newLeftSpotPosition > width - this.sliderSpotWidth ? width - this.sliderSpotWidth : newLeftSpotPosition;\n\n    this._updateOverlay(newLeftSpotPosition);\n  }\n\n  updateSlider(dim: AdaptChartDimensions): void {\n    const {height} = this._sliderEl.nativeElement.getBoundingClientRect();\n\n    this._chartComponent.chartComponent.updateChart({\n      w: dim.w - this.leftShift,\n      h: height - this.sliderPaddingTop * 2\n    });\n  }\n\n  showCategory(category: string): void {\n    const categoryId = this._categoryFilter.indexOf(category);\n\n    if (categoryId !== -1) {\n      this._categoryFilter.splice(categoryId, 1);\n    }\n\n    this._updateData();\n  }\n\n  hideCategory(category: string): void {\n    this._categoryFilter.push(category);\n    this._updateData();\n  }\n\n  private _getDataLength(): number {\n    // TODO check for fix\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return this.data[0].data.length;\n  }\n\n  private _updateOverlay(x: number = this._x): void {\n    if (x !== this._x) {\n      this._x = x;\n      this._recalculateDataRange();\n    }\n\n    this._recalculateSpotPosition();\n  }\n\n  private _updateData(): void {\n    const timer = setTimeout(() => {\n      this.data = this._dataCopy.map((item) => {\n        const {name} = item;\n        let {data} = item;\n\n        if (this._categoryFilter.indexOf(name) !== -1) {\n          data = data.map(() => 0);\n        }\n\n        return {name, data};\n      });\n      clearTimeout(timer);\n    }, 250);\n  }\n\n  private _recalculateSpotPosition(): void {\n    const {width} = this._sliderEl.nativeElement.getBoundingClientRect();\n\n    const overlayRightWidth = width - this.sliderSpotWidth - this._x;\n    const overlayLeftWidth = this._x;\n\n    this._renderer.setStyle(this._dndEl.nativeElement, 'left', `${this._x * 100 / width}%`);\n    this._renderer.setStyle(this._overlayEl.nativeElement, 'left', `${this._x * 100 / width}%`);\n    this._renderer.setStyle(this._overlayLeftEl.nativeElement, 'width', `${overlayLeftWidth * 100 / width}%`);\n    this._renderer.setStyle(this._overlayRightEl.nativeElement, 'width', `${overlayRightWidth * 100 / width}%`);\n  }\n\n  private _recalculateDataRange(): void {\n    const {width} = this._sliderEl.nativeElement.getBoundingClientRect();\n    const count = this._getDataLength();\n    const wPiece = width / count;\n\n    this.sliderSpotWidth = width / this.monitorsCount;\n\n    const startPiece = Math.floor(this._x / wPiece);\n    const endPiece = Math.floor((this._x + this.sliderSpotWidth) / wPiece);\n\n    if (this._startPoint !== startPiece) {\n      this._startPoint = startPiece;\n      this._endPoint = endPiece;\n      this.rangeChanged.emit({startPiece, endPiece});\n    }\n  }\n}\n"]}