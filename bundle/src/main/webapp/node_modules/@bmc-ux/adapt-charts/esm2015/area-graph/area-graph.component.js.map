{"version":3,"file":"area-graph.component.js","sourceRoot":"","sources":["../../../../../libs/adapt-charts/src/area-graph/area-graph.component.ts","../../../../../libs/adapt-charts/src/line-graph/line-graph.component.html"],"names":[],"mappings":"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","sourcesContent":["import {AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation} from '@angular/core';\nimport {Point} from '@angular/cdk/drag-drop';\nimport {asapScheduler, timer} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport BigNumber from 'bignumber.js';\nimport * as d3 from 'd3';\nimport {inRange} from 'lodash-es';\nimport {CutNumberPipe} from '../common/pipes/cut-number.pipe';\nimport {ColorType} from '@bmc-ux/adapt-angular';\nimport {AdaptLineGraphComponent} from '../line-graph/line-graph.component';\nimport {AdaptAreaGraphData, AdaptAreaGraphSeries} from '../common/models/area-graph.model';\nimport {AdaptChartCategoryToggleEvent, AdaptChartDimensions, AdaptChartTooltip} from '../common/models/chart.model';\nimport {AdaptLineGraphDateAndData} from '../common/models/line-graph.model';\n\nlet chartCounter = 1;\n\n@Component({\n  selector: 'adapt-area-graph',\n  templateUrl: '../line-graph/line-graph.component.html',\n  providers: [CutNumberPipe],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AdaptAreaGraphComponent extends AdaptLineGraphComponent implements OnInit, AfterViewInit {\n  @Input() formatXAxisValue: (domainValue: d3.AxisDomain, index: number) => string;\n\n  protected _data: AdaptAreaGraphData[] = [];\n  protected _series: AdaptAreaGraphSeries[] = [];\n  protected circleRadius: number = 4;\n  protected _id: string;\n  private areaOpacity: number = 0.25;\n  private areaOpacityForHovered: number = 0.75;\n\n  /**\n   * Output that emits each time chart category shown\n   * @since 12.11.0\n   */\n  @Output() readonly categoryShow: EventEmitter<AdaptChartCategoryToggleEvent> = new EventEmitter<AdaptChartCategoryToggleEvent>();\n\n  /**\n   * Output that emits each time chart category hidden\n   * @since 12.11.0\n   */\n  @Output() readonly categoryHide: EventEmitter<AdaptChartCategoryToggleEvent> = new EventEmitter<AdaptChartCategoryToggleEvent>();\n\n  @Input() getTooltipXValueTitle(): string {\n    return 'x';\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this._id = `area-graph-${chartCounter++}`;\n  }\n\n  ngAfterViewInit(): void {\n    // The change consists of two line graphs (one is the main, second in the slider),\n    // so need to check the chart view after they both have been drawn\n    timer(0, asapScheduler)\n      .pipe(takeUntil(this._destroy$))\n      .subscribe(() => {\n        this._detectViewChanges();\n      });\n  }\n\n  getXMaxValue(data: AdaptAreaGraphData[]): number {\n    let maxYVal: number = data[0].xyPointData[0].x;\n\n    data.forEach(dataItem => {\n\n      // assume that last value is the biggest value\n      const value = dataItem.xyPointData[dataItem.xyPointData.length - 1].x;\n\n      if (value > maxYVal) {\n        maxYVal = value;\n      }\n    });\n\n    return maxYVal;\n  }\n\n  getXMinValue(data: AdaptAreaGraphData[]): number {\n    let minYVal: number = data[0].xyPointData[0].x;\n\n    data.forEach(dataItem => {\n\n      // assume that first value is the lowest value\n      const value = dataItem.xyPointData[0].x;\n\n      if (value < minYVal) {\n        minYVal = value;\n      }\n    });\n\n    return minYVal;\n  }\n\n  protected getCircleColor(): string {\n    return 'transparent';\n  }\n\n  protected getLineRenderer(): d3.Line<Point> {\n    return d3.line<Point>()\n      .x((d) => this._xPos(d.x))\n      .y((d) => this._y(d.y));\n  }\n\n  protected getXPosFunc(dim: AdaptChartDimensions, domain: (number | string)[] = []): d3.ScaleLinear<number, number> {\n    const [min, max] = domain as number[];\n\n    return d3.scaleLinear()\n      .range([0, dim.w - (this._margin.left + this._margin.right)])\n      .domain([min || this.getXMinValue(this._data), max || this.getXMaxValue(this._data)]);\n  }\n\n  protected getYPosFunc(dim: AdaptChartDimensions, ticksVal: number[]): d3.ScaleLinear<number, number> {\n    return d3.scaleLinear()\n      .range([0, dim.h - this._margin.bottom - this._margin.top])\n      .domain([ticksVal[0], 0]);\n  }\n\n  protected getXAxisLineRenderer(dim: AdaptChartDimensions): d3.Axis<d3.AxisDomain> {\n    const baseRenderer = super.getXAxisLineRenderer(dim);\n\n    const cats = [...this.xAxis.categories];\n\n    if (cats && cats.length) {\n      // for proper rendering with categories\n      const maxX = this.getXMaxValue(this._data);\n      const minX = this.getXMinValue(this._data);\n      const minMaxRange = maxX - minX;\n      const tickStep = minMaxRange / (cats.length - 1);\n\n      let tickValuesArray = cats.map((category, index) => minX + tickStep * index);\n\n      if (this.showSlider && this.sliderDomainData?.length) {\n        const [min, max] = this.sliderDomainData;\n\n        tickValuesArray = tickValuesArray.filter((tick, index) => {\n          if (inRange(tick, min, max)) {\n            return true;\n          }\n\n          cats[index] = null;\n        });\n      }\n\n      return baseRenderer\n        .tickValues(tickValuesArray)\n        .tickFormat((val, ind) => cats.filter(category => !!category)[ind]);\n    }\n\n    if (this.showSlider && this.slidePointsCount) {\n      baseRenderer.ticks(this.slidePointsCount);\n    }\n\n    if (this.formatXAxisValue) {\n      return baseRenderer.tickFormat(this.formatXAxisValue);\n    }\n\n    return baseRenderer;\n  }\n\n  protected mapDataFromSeries(series: AdaptAreaGraphSeries[]): AdaptAreaGraphData[] {\n    return series.map((item): AdaptAreaGraphData => {\n      return {\n        name: item.name,\n        hidden: item.hidden,\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        data: item.data as any[], // not used in area, used in line graph\n        xyPointData: item.data, // used in area\n      };\n    });\n  }\n\n  // TODO check for type improvement\n  // eslint-disable-next-line\n  protected drawAreaForSeries(lineWrapper: d3.Selection<SVGGElement, any, any, any>, dt: AdaptAreaGraphData, i: number): void {\n    lineWrapper.append('path')\n      .datum(dt.xyPointData)\n      .classed('line-graph-transition line-chart-area', true)\n      .attr('clip-path', `url(#${this._id}_clip)`)\n      .attr('fill', this._colors[i])\n      .attr('fill-opacity', this.areaOpacity)\n      .attr('stroke', 'none')\n      .attr('d', this.getAreaFilling())\n      .on('mouseover', (data, ind, group) => {\n        this.fillAreaDarkerColor(group[ind]);\n      })\n      .on('mouseout', (data, ind, group) => {\n        this.fillAreaDefaultColor(group[ind]);\n      });\n  }\n\n  protected onCircleMouseover(circleEl: SVGCircleElement, dt: AdaptAreaGraphData, d: AdaptLineGraphDateAndData): void {\n    super.onCircleMouseover(circleEl, dt, d);\n    this.fillAreaDarkerColor(\n      d3.select(circleEl.closest('.line-chart-line-g')).select('.line-chart-area').node() as SVGPathElement\n    );\n  }\n\n  protected onCircleMouseout(circleEl: SVGCircleElement): void {\n    super.onCircleMouseout(circleEl);\n\n    this.fillAreaDefaultColor(\n      d3.select(circleEl.closest('.line-chart-line-g')).select('.line-chart-area').node() as SVGPathElement\n    );\n  }\n\n  protected getCircleDarkenColor(baseColor: string, circleParentLineSelection: d3.Selection<d3.BaseType, {}, null, undefined>): string {\n    return this._colorService.getDarken(circleParentLineSelection.attr('stroke'), .15, ColorType.HEX);\n  }\n\n  protected getDataForCirclesOrLines(dt: AdaptAreaGraphData): Point[] {\n    return dt.xyPointData;\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  protected setCirclePosition(circleSel: d3.Selection<SVGCircleElement, any, SVGGElement, any>):\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    d3.Selection<SVGCircleElement, any, SVGGElement, any> {\n    return circleSel\n      .attr('cx', (d) => this._xPos(d.x))\n      .attr('cy', (d) => this._y(d.y));\n  }\n\n  protected updateLinesAreas(): void {\n    this._g.selectAll<SVGPathElement, Point>('.line-chart-area').each((dat, i, g) => {\n      d3.select(g[i]).attr('d', this.getAreaFilling());\n    });\n  }\n\n  protected restrictXPosTicks(): void {\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    const ticksCount = (this._x as any).ticks();\n\n    if (this.showSlider && this.slidePointsCount) {\n      this._x = d3.scaleLinear()\n        .range([0, this._dim.w - (this._margin.left + this._margin.right)])\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        .domain([ticksCount[0], ticksCount[this.slidePointsCount]]) as any;\n    }\n  }\n\n  protected getTooltipData(baseColor: string, dt: AdaptAreaGraphData, d: Point): AdaptChartTooltip {\n    return {\n      color: baseColor,\n      category: dt.name,\n      xValue: d.x,\n      yValue: this.scientificMode ? new BigNumber(d.y).toPrecision(2, 2) : d.y,\n    };\n  }\n\n  protected getDataYValues(row: AdaptAreaGraphData): number[] {\n    return row.xyPointData.map((item) => item.y);\n  }\n\n  private get _xPos(): d3.ScaleLinear<number, number> {\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    return this._x as any as d3.ScaleLinear<number, number>;\n  }\n\n  private getAreaFilling(): d3.Area<Point> {\n    return d3.area<Point>()\n      .x((d) => this._xPos(d.x))\n      .y0(this._y(0))\n      .y1((d) => this._y(d.y));\n  }\n\n  private fillAreaDarkerColor(el: SVGPathElement): void {\n    d3.select(el).attr('fill-opacity', this.areaOpacityForHovered);\n  }\n\n  private fillAreaDefaultColor(el: SVGPathElement): void {\n    d3.select(el).attr('fill-opacity', this.areaOpacity);\n  }\n}\n","<adapt-chart [width]=\"width\"\n             [height]=\"height\"\n             [legend]=\"legend\"\n             [data]=\"series\"\n             [backgroundColor]=\"backgroundColor\"\n             [suppressHeader]=\"suppressHeader\"\n             [suppressLegend]=\"suppressLegend\"\n             [tooltip]=\"tooltip\"\n             [header]=\"header\"\n             (categoryShow)=\"categoryShowHandler($event)\"\n             (categoryHide)=\"categoryHideHandler($event)\"\n             (categoryEnter)=\"categoryEnter($event)\"\n             (categoryLeave)=\"categoryLeave()\"\n             [noDataText]=\"noDataText\"\n             [updateChart]=\"_updateChartBind\"\n             [dataBuilder]=\"_dataBuilderBind\"\n             [colorsPalette]=\"colorsPalette\">\n  <adapt-area-graph-slider *ngIf=\"showSlider && slidePointsCount && chartWidth\"\n                           [data]=\"sliderData\"\n                           [xAxis]=\"xAxis\"\n                           [slidePointsCount]=\"slidePointsCount\"\n                           [customColors]=\"legend?.customColors\"\n                           [xBrush]=\"xBrush\"\n                           [leftShift]=\"leftShift\"\n                           [containerWidth]=\"chartWidth\"\n                           (rangeChanged)=\"rangeChanged($event)\"\n                           (scrollEnd)=\"scrollEnd()\"></adapt-area-graph-slider>\n</adapt-chart>\n\n<ng-template #tooltipTpl let-data=\"data\">\n  <div class=\"chart-tooltip-content-container\">\n    <div class=\"chart-tooltip-content-wrapper\">\n      <span class=\"chart-tooltip-color-spot\" [style.background]=\"data?.color\"></span>\n      <span class=\"chart-tooltip-category\">{{ data.category }}</span>\n    </div>\n    <div>\n      {{getTooltipXValueTitle()}}:\n      <span><b>{{data.xValue}}</b></span>\n    </div>\n\n    <div>\n      {{yAxis?.title}}:\n      <span><b>{{data.yValue}}</b></span>\n    </div>\n  </div>\n</ng-template>\n"]}