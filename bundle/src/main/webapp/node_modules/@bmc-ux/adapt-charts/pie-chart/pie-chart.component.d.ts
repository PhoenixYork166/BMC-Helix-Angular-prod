import { ElementRef, EventEmitter, OnChanges, OnInit, TemplateRef } from '@angular/core';
import { ChartColorService } from '../common/services/chart-color.service';
import { AdaptChartCategoryEvent, AdaptChartCategoryToggleEvent, AdaptChartDimensions, AdaptChartHeader, AdaptChartLegend, AdaptSVGGroupElement } from '../common/models/chart.model';
import { AdaptChartComponent } from '../common/chart.component';
import { AdaptPieChartAbstract, AdaptPieClickEvent, AdaptPieData } from '../common/models/pie.model';
import * as i0 from "@angular/core";
export declare class AdaptPieChartComponent extends AdaptPieChartAbstract implements OnInit, OnChanges {
    private _colorService;
    $this: AdaptPieChartComponent;
    backgroundColor: string;
    width: number;
    height: number;
    header: AdaptChartHeader;
    suppressHeader: boolean;
    suppressLegend: boolean;
    tooltip: string | TemplateRef<unknown>;
    dataBuilder: (g: AdaptSVGGroupElement, dim: AdaptChartDimensions) => void;
    innerRadius: number;
    showLegendTooltip: boolean;
    set series(s: AdaptPieData[]);
    get series(): AdaptPieData[];
    readonly clickChart: EventEmitter<AdaptPieClickEvent>;
    /**
     * Output that emits each time chart category shown
     * @since 12.11.0
     */
    readonly categoryShow: EventEmitter<AdaptChartCategoryToggleEvent>;
    /**
     * Output that emits each time chart category hidden
     * @since 12.11.0
     */
    readonly categoryHide: EventEmitter<AdaptChartCategoryToggleEvent>;
    set legend(legend: AdaptChartLegend);
    get legend(): AdaptChartLegend;
    get duration(): number;
    chartComponent: AdaptChartComponent;
    chart: ElementRef;
    tooltipTemplate: string | TemplateRef<unknown>;
    alreadyChanged: boolean;
    total: number;
    _dataBuilder: (g: AdaptSVGGroupElement, dim: AdaptChartDimensions) => void;
    _updateChart: () => void;
    private donutProportion;
    private _g;
    private _radius;
    private _pie;
    private _colors;
    private _data;
    private _arc;
    private _initialColor;
    private _dim;
    private _filter;
    private _path;
    private _cls;
    private _legend;
    private _series;
    private _legendTooltipPoint;
    constructor(_colorService: ChartColorService);
    ngOnInit(): void;
    ngOnChanges(): void;
    categoryEnter(categoryEvent: AdaptChartCategoryEvent): void;
    categoryLeave(categoryEvent: AdaptChartCategoryEvent): void;
    categoryMove(categoryEvent: AdaptChartCategoryEvent): void;
    categoryShowHandler(category: string): void;
    categoryHideHandler(category: string): void;
    clickChartArea(e: MouseEvent): void;
    private _renderChart;
    private _initData;
    private _createColor;
    private _createPie;
    private _createDataChart;
    private _getInnerRadius;
    private _clear;
    private _addSummary;
    private _getCustomColorById;
    private _updateFilter;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptPieChartComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptPieChartComponent, "adapt-pie-chart", never, { "backgroundColor": "backgroundColor"; "width": "width"; "height": "height"; "header": "header"; "suppressHeader": "suppressHeader"; "suppressLegend": "suppressLegend"; "tooltip": "tooltip"; "dataBuilder": "dataBuilder"; "innerRadius": "innerRadius"; "showLegendTooltip": "showLegendTooltip"; "series": "series"; "legend": "legend"; }, { "clickChart": "clickChart"; "categoryShow": "categoryShow"; "categoryHide": "categoryHide"; }, never, never>;
}
