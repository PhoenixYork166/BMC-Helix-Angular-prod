import { AdaptChartAbstract } from './chart.model';
import { AdaptChartColorStatus } from '../services/chart-color.service';
import * as d3 from 'd3';
import * as i0 from "@angular/core";
export declare abstract class AdaptTreemapAbstract extends AdaptChartAbstract {
    data: AdaptTreemapData | AdaptTreemapGroupData;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptTreemapAbstract, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AdaptTreemapAbstract, never, never, { "data": "data"; }, {}, never>;
}
export interface AdaptTreemapData {
    name: string;
    status?: AdaptChartColorStatus;
    color?: string;
    customColorsRange?: string[];
    children: AdaptTreemapDataChildren[];
}
export interface AdaptTreemapDataChildren {
    name: string;
    id?: string;
    size?: number;
    status?: AdaptChartColorStatus;
    color?: string;
    customColorsRange?: string[];
    info?: string;
    actions?: AdaptTreemapNodeAction[];
    children?: AdaptTreemapDataChildren[];
}
export interface AdaptTreemapGroupData {
    name: string;
    id?: string;
    color?: string;
    info?: string;
    size?: number;
    actions?: AdaptTreemapNodeAction[];
    children?: AdaptTreemapGroupData[];
}
export interface AdaptTreemapActionsMenu {
    target: SVGElement;
    event: MouseEvent;
    actions: AdaptTreemapNodeAction[];
    context: AdaptTreemapDataChildren;
}
export interface AdaptTreemapNodeAction {
    title: string;
    callback: (target: SVGElement, event: MouseEvent, context: AdaptTreemapDataChildren) => void;
}
export interface AdaptTreemapGroupEnterEvent {
    data: AdaptTreemapGroupData;
    event: MouseEvent;
    node?: d3.HierarchyRectangularNode<AdaptTreemapGroupData>;
}
