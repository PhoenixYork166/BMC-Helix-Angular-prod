import { AdaptChartAbstract, AdaptChartAxis } from './chart.model';
import * as i0 from "@angular/core";
export declare abstract class AdaptHeatmapAbstract<T> extends AdaptChartAbstract {
    data: AdaptHeatmapData<T>;
    xAxis: AdaptChartAxis;
    yAxis: AdaptChartAxis;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptHeatmapAbstract<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AdaptHeatmapAbstract<any>, never, never, { "data": "data"; "xAxis": "xAxis"; "yAxis": "yAxis"; }, {}, never>;
}
export interface AdaptHeatmapData<T> {
    reverse?: boolean;
    items: AdaptHeatmapNode<T>[][];
}
export interface AdaptHeatmapActionsMenu<T> {
    target: SVGElement;
    event: MouseEvent;
    actions: AdaptHeatmapNodeAction<T>[];
    context: T;
}
export interface AdaptHeatmapNodeAction<T> {
    title: string;
    callback: (target: SVGElement, event: MouseEvent, context: T) => any;
}
export interface AdaptHeatmapNode<T> {
    name: string;
    size: number;
    status: {
        name: string;
        bg: string;
        color?: string;
        icon?: string;
        iconColor?: string;
    };
    info?: string;
    progress?: number;
    content?: T;
    actions?: AdaptHeatmapNodeAction<T>[];
}
