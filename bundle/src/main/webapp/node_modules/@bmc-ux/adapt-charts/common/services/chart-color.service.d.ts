import { ColorType } from '@bmc-ux/adapt-angular';
import * as i0 from "@angular/core";
export declare type ColorRange = string[];
export declare enum AdaptChartColorStatus {
    Default = 0,
    Success = 1,
    Warning = 2,
    Danger = 3,
    Custom = 4
}
export declare const STATUS_COLOR_RANGE: {
    Default: string[];
    Success: string[];
    Warning: string[];
    Danger: string[];
    Custom: string[];
};
export declare type ColorsPalette = 'gradient' | 'high-diff';
export declare abstract class ChartColorsFactory {
    static getGradientColors(): string[];
    static getHighDiffColors(): string[];
}
export declare class ChartColorService {
    private _gradientColors;
    private _highDiffColorsColors;
    static getColorRange(range: ColorRange | AdaptChartColorStatus, count: number): string[];
    getColor(id: number, palette?: ColorsPalette): string;
    getDarken(color: string, percent: number, type: ColorType): string;
    getContrast(color: string, type: ColorType): string;
    setColors(newColors: string[]): void;
    private _parseHEX;
    private _parseRGB;
    private _decToHEX;
    static ɵfac: i0.ɵɵFactoryDeclaration<ChartColorService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ChartColorService>;
}
