import { NgZone, OnDestroy } from '@angular/core';
import { Observable } from 'rxjs';
import { AlertAnimatedConfig } from '../alert-animated/adapt-alert.model';
import * as i0 from "@angular/core";
export declare class AdaptNavigationService implements OnDestroy {
    private _ngZone;
    private _alertsSubject;
    get alertsState(): Observable<AlertAnimatedConfig>;
    get loaderState(): Observable<LoaderState>;
    private _loaderSubject;
    private _loaderMessageTimeout;
    private _isLoading;
    private _loadingContent?;
    private _destroyed$;
    constructor(_ngZone: NgZone);
    ngOnDestroy(): void;
    openAlert(alert: AlertAnimatedConfig): void;
    setLoaderContent(elem: string | Element): void;
    setLoaderMessage(str: string): void;
    showLoader(message?: string, delay?: number, loadingContent?: string | Element): void;
    hideLoader(): void;
    private _blockLoadingContent;
    private _unblockLoadingContent;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptNavigationService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<AdaptNavigationService>;
}
/**
 * Loader state interface
 */
export interface LoaderState {
    show: boolean;
    message?: string;
}
