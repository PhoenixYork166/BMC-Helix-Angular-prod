import { PipeTransform } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export interface TruncateConfig {
    preffixLength: number;
    suffixLength: number;
}
export interface TruncatedTextData {
    value: string;
    truncated: boolean;
}
export declare class AdaptTruncatePipe implements PipeTransform {
    transform(value: string, limit: number | TruncateConfig, trail?: string): string;
    truncate(value: string, limit: number | TruncateConfig, trail?: string): TruncatedTextData;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptTruncatePipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<AdaptTruncatePipe, "truncate">;
    static ɵprov: i0.ɵɵInjectableDeclaration<AdaptTruncatePipe>;
}
export declare class AdaptTruncatePipeModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptTruncatePipeModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<AdaptTruncatePipeModule, [typeof AdaptTruncatePipe], [typeof i1.CommonModule], [typeof AdaptTruncatePipe]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<AdaptTruncatePipeModule>;
}
