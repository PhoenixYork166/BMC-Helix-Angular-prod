import { DomSanitizer } from '@angular/platform-browser';
import { KeyValueObject } from '../../common.models';
import * as i0 from "@angular/core";
export interface Icon {
    icon: string;
    color?: string;
}
export declare abstract class Icons {
    static readonly CLOUD: string;
    static readonly ARROW: string;
    static readonly CLOUD_FORBIDDEN: string;
    static readonly DIRECTORY: string;
    static readonly SEARCH: string;
    static readonly WORD: string;
    static readonly IMG: string;
    static readonly XLS: string;
    static readonly PPT: string;
    static readonly PDF: string;
    static readonly ARCHIVE: string;
    static readonly MOVIE: string;
    static readonly DEFAULT: string;
}
export declare class IconManager {
    private _sanitizer;
    private _tmplIcons;
    private _icons;
    constructor(_sanitizer: DomSanitizer);
    /**
     * Initiates the icons set
     */
    init(icons: KeyValueObject<Icon>): void;
    /**
     * Gets the icon for file type and sets up the base color
     */
    getIcon(type: string, baseColor?: string): string;
    getTmplComponentIcons(): KeyValueObject<string>;
    static ɵfac: i0.ɵɵFactoryDeclaration<IconManager, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<IconManager>;
}
