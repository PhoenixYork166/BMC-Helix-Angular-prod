import { NgZone } from '@angular/core';
import { Platform } from '@angular/cdk/platform';
import { Direction } from '@angular/cdk/bidi';
import { ConnectedPosition, FlexibleConnectedPositionStrategyOrigin, Overlay, OverlayConfig, OverlayContainer, PositionStrategy, RepositionScrollStrategyConfig, ScrollStrategy, ViewportRuler } from '@angular/cdk/overlay';
import { AdaptOverlayConfig, AdaptOverlayConnectedPositions, AdaptOverlayConnectedPositionName, AdaptOverlayPositionStrategy, AdaptOverlayScrollStrategy } from './overlay.model';
export declare function getOverlayConnectedPositions(direction?: Direction, offset?: number): AdaptOverlayConnectedPositions;
export declare function getOverlayConnectedPosition(positionName: AdaptOverlayConnectedPositionName, direction?: Direction, config?: {
    weight?: number;
    offsetX?: number;
    offsetY?: number;
    panelClass?: string | string[];
}): ConnectedPosition;
export declare function getPositionStrategy(connectedPositions: ConnectedPosition[], origin: FlexibleConnectedPositionStrategyOrigin, positionStrategy: AdaptOverlayPositionStrategy, transformOriginSelector: string, direction: Direction, document: Document, overlay: Overlay, overlayContainer: OverlayContainer, platform: Platform, viewportRuler: ViewportRuler): PositionStrategy;
export declare function getScrollStrategy(scrollStrategy: AdaptOverlayScrollStrategy, overlay: Overlay, viewportRuler: ViewportRuler, ngZone: NgZone, repositionScrollStrategyConfig?: RepositionScrollStrategyConfig): ScrollStrategy;
export declare function getCalculatedOverlayConfig(adaptOverlayConfig: AdaptOverlayConfig, overlayConfig: OverlayConfig, overlay: Overlay, direction: Direction, viewportRuler: ViewportRuler, ngZone: NgZone, document: Document, platform: Platform, overlayContainer: OverlayContainer): OverlayConfig;
