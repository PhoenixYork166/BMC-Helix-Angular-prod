import { AfterViewInit, EventEmitter, OnDestroy, QueryList } from '@angular/core';
import { ListKeyManager } from '@angular/cdk/a11y';
import { AdaptListKeyManagerItemDirective } from './adapt-list-key-manager-item.directive';
import * as i0 from "@angular/core";
export declare class AdaptListKeyManagerDirective implements AfterViewInit, OnDestroy {
    readonly keyManagerStateChange: EventEmitter<ListKeyManager<AdaptListKeyManagerItemDirective>>;
    items: QueryList<AdaptListKeyManagerItemDirective>;
    private _keyManager;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptListKeyManagerDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AdaptListKeyManagerDirective, "[adaptListKeyManager]", ["adaptListKeyManager"], {}, { "keyManagerStateChange": "keyManagerStateChange"; }, ["items"]>;
}
