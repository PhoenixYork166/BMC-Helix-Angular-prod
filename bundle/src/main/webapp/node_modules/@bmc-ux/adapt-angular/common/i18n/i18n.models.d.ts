import { ValueOf } from '../common.models';
export declare const AdaptRxError: {
    readonly Default: "adapt.rx.error.default";
    readonly Required: "adapt.rx.error.required";
    readonly RequiredTrue: "adapt.rx.error.requiredTrue";
    readonly Min: "adapt.rx.error.min";
    readonly Max: "adapt.rx.error.max";
    readonly MinLength: "adapt.rx.error.minLength";
    readonly MaxLength: "adapt.rx.error.maxLength";
    readonly Email: "adapt.rx.error.email";
    readonly Pattern: "adapt.rx.error.pattern";
    readonly Range: "adapt.rx.error.range";
    readonly MinKey: "{min}";
    readonly MaxKey: "{max}";
    readonly ActualKey: "{actual}";
    readonly RequiredLengthKey: "{requiredLength}";
    readonly ActualLengthKey: "{actualLength}";
    readonly RequiredPatternKey: "{requiredPattern}";
    readonly ActualValueKey: "{actualValue}";
};
export declare type AdaptRxErrorType = ValueOf<typeof AdaptRxError>;
export declare const AdaptDatetimeError: {
    readonly InvalidValueName: "adapt.datetime.error.invalidValueName";
    readonly InvalidValue: "adapt.datetime.error.invalidValue";
    readonly DisabledDateName: "adapt.datetime.error.disabledDateName";
    readonly DisabledDate: "adapt.datetime.error.disabledDate";
    readonly DisabledTimeName: "adapt.datetime.error.disabledTimeName";
    readonly DisabledTime: "adapt.datetime.error.disabledTime";
    readonly Arg0Key: "{0}";
    readonly Arg1Key: "{1}";
};
export declare type AdaptDatetimeErrorType = ValueOf<typeof AdaptDatetimeError>;
export declare const AdaptDatetimeRangeError: {
    InvalidRangeOrder: string;
    InvalidStartName: string;
    InvalidEndName: string;
};
export declare type AdaptDatetimeRangeErrorType = ValueOf<typeof AdaptDatetimeRangeError>;
