import { ElementRef, EventEmitter, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';
import { AdaptModalService } from '../../modal/modal.service';
import { AdaptMessageService } from '../../toast/toast-message.service';
import { AdaptRadarAngularGenericDirective, AdaptRadarAngularService } from '../../common/radar/adapt-radar';
import { AdaptAgreementModalOpenEvent, AdaptAgreementState, AdaptNotificationAgreementText } from '../argeement.model';
import { AdaptTranslateService } from '../../common/i18n';
import * as i0 from "@angular/core";
export declare class AdaptAgreementNotificationComponent extends AdaptRadarAngularGenericDirective implements OnChanges {
    private _modalService;
    private _messageService;
    protected readonly _adaptRadarService: AdaptRadarAngularService;
    private _ts;
    texts: AdaptNotificationAgreementText;
    openModal: boolean;
    testID: string;
    state: AdaptAgreementState;
    readonly submitButtonClick: EventEmitter<void>;
    readonly modalOpen: EventEmitter<AdaptAgreementModalOpenEvent>;
    mTemplate: TemplateRef<void>;
    constructor(_modalService: AdaptModalService, _messageService: AdaptMessageService, _adaptRadarService: AdaptRadarAngularService, _elem: ElementRef<HTMLElement>, _ts: AdaptTranslateService);
    ngOnChanges(changes: SimpleChanges): void;
    open(): void;
    handleSubmit(close: () => void): void;
    isSettingChanged(state: boolean): boolean;
    private _setDefaultTexts;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptAgreementNotificationComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptAgreementNotificationComponent, "adapt-agreement-notification", never, { "openModal": "openModal"; "testID": "testID"; "state": "state"; }, { "submitButtonClick": "submitButtonClick"; "modalOpen": "modalOpen"; }, never, never>;
}
