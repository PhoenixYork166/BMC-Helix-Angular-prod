import { AfterViewInit, ChangeDetectorRef, ElementRef, NgZone, OnInit } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AdaptTranslateService } from '../../common/i18n/index';
import { AdaptRadarAngularCustomEventName, AdaptRadarAngularService } from '../../common/radar/adapt-radar';
import { AdaptRxFeedbackComponent, AdaptRxFormControlDirective } from '../form-control/index';
import { AdaptRxRadiobuttonComponent } from './adapt-rx-radiobutton.component';
import * as i0 from "@angular/core";
export declare class AdaptRxRadiobuttonGroupComponent extends AdaptRxFormControlDirective implements OnInit, AfterViewInit {
    ts: AdaptTranslateService;
    private _ngZone;
    protected controlName: string;
    analyticsComponentName: typeof AdaptRadarAngularCustomEventName;
    _selectedRadioButton: AdaptRxRadiobuttonComponent;
    _radioButtons: AdaptRxRadiobuttonComponent[];
    /**
     * From control name. Need for check and set [name] attribute for radio options
     * @docs-default
     */
    formControlName: string;
    /**
     * Reference on AdaptRxFeedbackComponent
     */
    adaptRxFeedbackRef: AdaptRxFeedbackComponent;
    private _value;
    constructor(ngControl: NgControl, _changeDetectorRef: ChangeDetectorRef, ts: AdaptTranslateService, _ngZone: NgZone, _adaptRadarService: AdaptRadarAngularService, _elem: ElementRef<HTMLElement>);
    /**
     * Check if the control has UI error state
     */
    get hasDangerState(): boolean;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    get value(): any;
    set value(newValue: any);
    /**
     * Mark formControl as touched.
     * Wrapper to be able to invoke protected _onTouch
     */
    markAsTouched(): void;
    /**
     * Propagate formControl change.
     * Wrapper to be able to invoke protected _onChange
     */
    propagateChange(): void;
    /**
     * Implementation of base abstract member
     */
    writeValue(value: string): void;
    /**
     * Implementation from the base class
     */
    protected _focusNativeElement(): void;
    /**
     * Updates the `selected` radio button from the internal _value state.
     */
    private _updateSelectedRadioFromValue;
    /**
     * Check if selected radioButton is checked
     */
    private _checkSelectedRadioButton;
    /**
     * Check if [name] and [formControlName] attributes set.
     * Took from Angular -> radio_control_value_accessor
     */
    private _checkName;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptRxRadiobuttonGroupComponent, [{ optional: true; self: true; }, null, null, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptRxRadiobuttonGroupComponent, "adapt-rx-radiobutton-group", never, { "formControlName": "formControlName"; }, {}, never, ["*"]>;
}
