import { WeekDay } from '@angular/common';
import { RxDatetimeStruct } from './adapt-rx-datetime.types';
import * as i0 from "@angular/core";
export declare function ADAPT_RX_DATETIME_18N_FACTORY(locale: string): AdaptRxDatetimeI18nDefaultService;
/**
 * A service supplying i18n data to the RxDatetime component.
 *
 * The default implementation of this service uses the Angular locale and registered locale data for
 * weekdays and month names (as explained in the Angular i18n guide).
 */
export declare abstract class AdaptRxDatetimeI18nService {
    /**
     * Returns the long or short weekday name to display in the heading of the month view.
     * 0=Sun ... 6=Sat.
     */
    abstract getWeekdayNames(short?: boolean, locale?: string): string[];
    /**
     * Returns the long or short month name to display in the activeTime picker navigation.
     * 0=Jan ... 11=Dec.
     */
    abstract getMonthNames(short?: boolean, locale?: string): string[];
    /**
     * Returns formatted datetime string.
     */
    abstract getDateLabel(date: RxDatetimeStruct, locale?: string): string;
    /**
     * Returns time format.
     */
    abstract getTimeFormat(locale?: string): 12 | 24;
    /**
     * Returns first day of week.
     */
    abstract getFirstDayOfWeek(locale?: string): WeekDay;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptRxDatetimeI18nService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<AdaptRxDatetimeI18nService>;
}
export declare class AdaptRxDatetimeI18nDefaultService extends AdaptRxDatetimeI18nService {
    private _locale;
    constructor(_locale: string);
    getWeekdayNames(short: boolean, locale?: string): string[];
    getMonthNames(short: boolean, locale?: string): string[];
    getDateLabel(date: RxDatetimeStruct, locale?: string): string;
    getTimeFormat(locale?: string): 12 | 24;
    getFirstDayOfWeek(locale?: string): WeekDay;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptRxDatetimeI18nDefaultService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<AdaptRxDatetimeI18nDefaultService>;
}
