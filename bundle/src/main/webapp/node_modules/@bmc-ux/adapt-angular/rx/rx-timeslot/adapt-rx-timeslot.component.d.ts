import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnChanges, QueryList, Renderer2, SimpleChanges } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AdaptRadarAngularCustomEventName, AdaptRadarAngularService } from '../../common/radar/adapt-radar';
import { AdaptRxFeedbackComponent, AdaptRxFormControlDirective } from '../form-control/index';
import { AdaptTranslateService } from '../../common/i18n/index';
import * as i0 from "@angular/core";
export declare class AdaptRxTimeSlotComponent extends AdaptRxFormControlDirective implements AfterViewInit, OnChanges {
    private _renderer;
    private _ngZone;
    ts: AdaptTranslateService;
    protected controlName: string;
    analyticsComponentName: typeof AdaptRadarAngularCustomEventName;
    selectedSlot: string;
    /**
     * An array with available time slots
     * @docs-default
     */
    slots: string[];
    /**
     * Select slot emitter
     */
    readonly onSelectedSlotChanged: EventEmitter<string>;
    /**
     * Reference to AdaptRxFeedbackComponent
     */
    adaptRxFeedbackRef: AdaptRxFeedbackComponent;
    /**
     * Reference to slots buttons ElementRefs
     */
    buttonRef: QueryList<ElementRef<HTMLButtonElement>>;
    constructor(ngControl: NgControl, _renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef, _ngZone: NgZone, ts: AdaptTranslateService, _adaptRadarService: AdaptRadarAngularService, _elem: ElementRef<HTMLElement>);
    /**
     * Check if the control has UI error state
     */
    get hasDangerState(): boolean;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    selectSlot(slot: string): void;
    writeValue(slot: any): void;
    blurHandler(event: FocusEvent): void;
    /**
     * Implementation of superClass member
     */
    protected _focusNativeElement(): void;
    /**
     * Calculates max-widths of each slot
     */
    private _setSlotMaxWidth;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptRxTimeSlotComponent, [{ optional: true; self: true; }, null, null, null, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptRxTimeSlotComponent, "adapt-rx-timeslot", never, { "slots": "slots"; }, { "onSelectedSlotChanged": "onSelectedSlotChanged"; }, never, never>;
}
