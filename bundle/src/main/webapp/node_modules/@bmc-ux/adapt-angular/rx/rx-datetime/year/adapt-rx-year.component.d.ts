import { EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { Directionality } from '@angular/cdk/bidi';
import { AdaptRxDatetimeConfigService } from '../adapt-rx-datetime-config.service';
import { RxDateStruct, RxDatetimeTexts, RxYear, RxYearConfig } from '../adapt-rx-datetime.types';
import * as i0 from "@angular/core";
export declare class AdaptRxYearComponent implements OnInit, OnChanges {
    private _dir;
    static DisplayYearsRows: number;
    static DisplayYearsInRow: number;
    static DisplayYearsCount: number;
    today: Date;
    config: RxYearConfig;
    year: number;
    activeYear: number;
    filter: (year: RxDateStruct) => boolean;
    disabled: boolean;
    rangeFrom: number;
    rangeTo: number;
    texts: RxDatetimeTexts;
    testID: string;
    years: RxYear[][];
    isRtl: boolean;
    animationCounter: number;
    readonly onYearChange: EventEmitter<number>;
    constructor(datetimeConfigService: AdaptRxDatetimeConfigService, _dir: Directionality);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    get displayYears(): string;
    changeYearsList(event: KeyboardEvent): void;
    nextYearsGroup(): void;
    prevYearsGroup(): void;
    onYearClick(year: RxYear): void;
    trackByFn(index: number, item: RxYear): number;
    private _updateYears;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptRxYearComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptRxYearComponent, "adapt-rx-year", never, { "year": "year"; "activeYear": "activeYear"; "filter": "filter"; "disabled": "disabled"; "rangeFrom": "rangeFrom"; "rangeTo": "rangeTo"; "texts": "texts"; "testID": "testID"; }, { "onYearChange": "onYearChange"; }, never, never>;
}
