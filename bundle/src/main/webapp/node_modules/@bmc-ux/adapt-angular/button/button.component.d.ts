import { AfterViewInit, ElementRef, OnChanges, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { ColorVariantType } from '../common/common.models';
import { AdaptRadarAngularGenericDirective, AdaptRadarAngularService } from '../common/radar/adapt-radar';
import * as i0 from "@angular/core";
declare type ButtonColorType = ColorVariantType | 'secondary' | 'tertiary' | 'toolbar' | 'critical' | 'special';
declare type ButtonTypeAttribute = 'button' | 'submit' | 'reset';
declare type ButtonSizeType = 'xtra-large' | 'xtra-small' | 'small' | 'default' | 'large' | 'block';
/**
 * An Error for 'btn-type' user input
 */
export declare class AdaptBtnTypeError extends Error {
    constructor(type: string);
}
/**
 * An Error for 'size' user input
 */
export declare class AdaptSizeError extends Error {
    constructor(type: string);
}
export declare class AdaptButtonComponent extends AdaptRadarAngularGenericDirective implements OnInit, OnChanges, AfterViewInit, OnDestroy {
    elem: ElementRef;
    private _renderer;
    /**
     * Specifies type of the button.
     * Supported values: "primary", "secondary", "tertiary", "toolbar", "success", "info", "warning", "critical", "special"
     * @docs-default
     */
    get type(): ButtonColorType;
    set type(v: ButtonColorType);
    /**
     * Specifies size of the button.
     * Supported values: "xtra-small", "small", "large", "default", "xtra-large", "block"
     * @docs-default
     */
    get size(): ButtonSizeType;
    set size(v: ButtonSizeType);
    /**
     * When present, it specifies that the element should be disabled
     * @docs-default false
     */
    get disabled(): boolean;
    set disabled(value: boolean);
    set typeAttr(value: ButtonTypeAttribute);
    /**
     * Native element tabindex
     * @since v10.14.0
     * @docs-default 0
     */
    tabIndex: number;
    private _typeAttr;
    private _type;
    private _size;
    private _disabled;
    private _clickSubscription;
    constructor(elem: ElementRef, _renderer: Renderer2, _adaptRadarService: AdaptRadarAngularService, _elem: ElementRef<HTMLElement>);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    /**
     * Throw the error if the user make the mistake with 'btn-type' or 'size' user inputs
     */
    ngOnChanges(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptButtonComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptButtonComponent, "adapt-button, button[adapt-button], a[adapt-button]", ["adaptBtn"], { "type": "btn-type"; "size": "size"; "disabled": "disabled"; "typeAttr": "type"; "tabIndex": "tabIndex"; }, {}, never, [".icon", "*"]>;
}
export {};
