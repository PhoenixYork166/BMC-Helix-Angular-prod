import { AfterContentInit, AfterViewInit, ElementRef, EventEmitter, NgZone, OnDestroy, OnInit, QueryList, Renderer2 } from '@angular/core';
import { ResizeService } from '../common/resize/resize.service';
import { AdaptSubnavItemComponent } from './subnav-item.component';
import { AdaptSubnavDropdownComponent } from './subnav-dropdown.component';
import { AdaptRadarAngularGenericDirective, AdaptRadarAngularService } from '../common/radar/adapt-radar';
import * as i0 from "@angular/core";
export declare class AdaptSubnavComponent extends AdaptRadarAngularGenericDirective implements OnInit, AfterContentInit, AfterViewInit, OnDestroy {
    private _elementRef;
    private _resizeService;
    private _renderer;
    private _ngZone;
    /**
     * Needs when SubnavComponent uses as a directive
     * @docs-default
     */
    adaptSubnav: any;
    /**
     * The minimum free space when overflow items start collapsing
     * @docs-default 20
     */
    gutter: number;
    /**
     * Default css class list for host element
     * @docs-default d-flex flex-nowrap text-no-wrap
     */
    defaultCssClass: string;
    readonly visibilityChanged: EventEmitter<AdaptSubnavItemComponent[]>;
    subnavDropdown: AdaptSubnavDropdownComponent;
    subnavItemsList: QueryList<AdaptSubnavItemComponent>;
    private hasHiddenItems$;
    private _destroyed$;
    private subnavItemsByHidePriority;
    constructor(_elementRef: ElementRef<HTMLElement>, _resizeService: ResizeService, _renderer: Renderer2, _ngZone: NgZone, _adaptRadarService: AdaptRadarAngularService, _elem: ElementRef<HTMLElement>);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private getSubnavItemsByHidePriority;
    private checkSubnavItemsVisibility;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptSubnavComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptSubnavComponent, "adapt-subnav, [adaptSubnav]", never, { "adaptSubnav": "adaptSubnav"; "gutter": "gutter"; "defaultCssClass": "defaultCssClass"; }, { "visibilityChanged": "visibilityChanged"; }, ["subnavDropdown", "subnavItemsList"], ["*"]>;
}
