import { AfterViewInit, ElementRef, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { Location } from '@angular/common';
import { ActivatedRoute } from '@angular/router';
import { AdaptAnimateScrollService } from '../common/scroll/scroll.service';
import { AdaptDeviceDetectionService } from '../common/device-detection.service';
import { AdaptAnchorNavigatorModel } from './anchor-navigator.model';
import { AdaptRadarAngularGenericDirective, AdaptRadarAngularService } from '../common/radar/adapt-radar';
import * as i0 from "@angular/core";
export declare class AdaptAnchorNavigatorComponent extends AdaptRadarAngularGenericDirective implements OnInit, AfterViewInit, OnDestroy {
    private _element;
    private _ngZone;
    private _renderer;
    private _animateScrollService;
    private document;
    private _activatedRouter;
    private _location;
    private _device;
    isMobile: boolean;
    isNavigatorVisible: boolean;
    /**
     * An array of anchor links used to build navigation list. Detailed interface description can be found below
     * @docs-default
     */
    list: AdaptAnchorNavigatorModel[];
    /**
     * Header on the top of navigation list
     * @docs-default
     */
    listHeader: string;
    /**
     * DOM node class used to mark blocks for navigation
     * @docs-default _scroll-spy
     */
    anchorBlockClass: string;
    /**
     * The distance in pixels above scroll target where the animation should stop.
     * Setting a positive number results in the scroll target being more in the middle of the screen, negative numbers will produce scrolling "too far"
     * @docs-default 0
     */
    scrollOffset: number;
    /**
     * The duration how long a scrollTo animation should last by default
     * @docs-default 400
     */
    scrollDuration: number;
    /**
     * Container for anchors to detect the scroll events on
     * @since v10.6.0
     * @docs-default document.body
     */
    set scrollContainer(elem: HTMLElement);
    defaultClass: boolean;
    private _anchorLinkComponents;
    private _anchorContentItems;
    private _fragment;
    private readonly _dotSize;
    private _destroyed$;
    private _scrollContainer;
    private _isViewInitialized;
    constructor(_element: ElementRef, _ngZone: NgZone, _renderer: Renderer2, _animateScrollService: AdaptAnimateScrollService, document: any, // https://github.com/angular/angular/issues/20351
    _activatedRouter: ActivatedRoute, _location: Location, _device: AdaptDeviceDetectionService, _adaptRadarService: AdaptRadarAngularService, _elem: ElementRef<HTMLElement>);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    toggleNavigatorVisibility(event: Event): void;
    scrollTo(item: AdaptAnchorNavigatorModel): void;
    ngOnDestroy(): void;
    trackByFn(index: number): number;
    private _setInitialContainerScroll;
    private _isContentWithinViewport;
    private _fixedOnScroll;
    private _detachLineAnimation;
    private _applyLineAnimation;
    private _anchorPreset;
    private _calculateScrolledContentDistance;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptAnchorNavigatorComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptAnchorNavigatorComponent, "adapt-anchor-navigator", never, { "list": "list"; "listHeader": "listHeader"; "anchorBlockClass": "anchorBlockClass"; "scrollOffset": "scrollOffset"; "scrollDuration": "scrollDuration"; "scrollContainer": "scrollContainer"; }, {}, never, never>;
}
