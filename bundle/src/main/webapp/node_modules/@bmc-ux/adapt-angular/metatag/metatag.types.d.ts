import { DefaultPreventable } from '../common/common.models';
export interface MetatagTexts {
    placeholder?: string;
    mainErrorText?: string;
    warningStateText?: string;
}
export interface TagModel<TData = any> {
    text: string;
    data?: TData;
}
export declare type TagType<TData = any> = string | TagModel<TData>;
export declare enum TagAddingSource {
    /**
     * Add tag from dropdown list
     */
    List = "list",
    /**
     * Add tag using model
     */
    Model = "model",
    /**
     * Add tag from input field
     */
    Input = "input"
}
export interface TagStyleFormatterParam {
    /**
     * Tag index
     */
    index: number;
    /**
     * Tag instance
     */
    tag: TagType;
}
export interface TagTemplateData {
    /**
     * Tag instance
     */
    tag: TagType;
    /**
     * Tag index
     */
    index: number;
}
export interface RemoveTagEvent extends DefaultPreventable {
    /**
     * Tag instance
     */
    tag: TagType;
    /**
     * Tag index
     */
    index: number;
    /**
     * Browser native event
     */
    domEvent: MouseEvent | KeyboardEvent;
}
export interface AddTagEvent extends DefaultPreventable {
    /**
     * Tag instance
     */
    tag: TagType;
    /**
     * Tag add source. Can be List, Model or Input
     */
    addingSource: TagAddingSource;
}
export interface InitTagEditingEvent extends DefaultPreventable {
    /**
     * Tag instance
     */
    tag: TagType;
    /**
     * Tag index
     */
    index: number;
}
