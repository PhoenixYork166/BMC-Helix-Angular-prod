import { ChangeDetectorRef, ElementRef, NgZone, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { AdaptWorkflowInput, AdaptWorkflowSize } from '../workflow.model';
import { Directionality } from '@angular/cdk/bidi';
import * as i0 from "@angular/core";
export declare class AdaptWorkflowBarComponent implements AdaptWorkflowInput, OnChanges, OnDestroy {
    dir: Directionality;
    private _ngZone;
    private _el;
    private _changeDetectorRef;
    verticalList: number[];
    /**
     * Sets the CSS class for the component.
     * @docs-default
     */
    mainCls: string;
    /**
     * Sets the size of the component
     * @docs-default medium
     */
    size: AdaptWorkflowSize;
    /**
     * Min value of the workflow bar
     * @docs-default 0
     */
    min: number;
    /**
     * Max value of the workflow bar
     * @docs-default 100
     */
    max: number;
    /**
     * The number of decimal digits
     * @docs-default 0
     */
    floor: number;
    /**
     * The array of objects that represents the progress of the workflow
     * @docs-default []
     */
    progress: any;
    /**
     * @docs-default
     */
    activeIndex: number;
    /**
     * Sets the direction for workflow bar
     * @docs-default horizontal
     */
    direction: 'horizontal' | 'vertical';
    /**
     * Hook to detect changes
     * @docs-default false
     */
    wasChanged: boolean;
    get classes(): string;
    private _destroyed$;
    constructor(dir: Directionality, _ngZone: NgZone, _el: ElementRef, _changeDetectorRef: ChangeDetectorRef);
    calcVerticalDistance(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptWorkflowBarComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptWorkflowBarComponent, "adapt-workflow-bar", never, { "mainCls": "mainCls"; "size": "size"; "min": "min"; "max": "max"; "floor": "floor"; "progress": "progress"; "activeIndex": "activeIndex"; "direction": "direction"; "wasChanged": "wasChanged"; }, {}, never, never>;
}
