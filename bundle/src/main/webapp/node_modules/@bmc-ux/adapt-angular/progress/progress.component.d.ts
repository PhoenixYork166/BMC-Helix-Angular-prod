import { Directionality } from '@angular/cdk/bidi';
import { AfterViewInit, ElementRef, OnChanges, OnInit, QueryList, SimpleChanges } from '@angular/core';
import { AdaptProgressConfig, AdaptProgressIndicator } from './progress.config';
import { AdaptRadarAngularGenericDirective, AdaptRadarAngularService } from '../common/radar/adapt-radar';
import * as i0 from "@angular/core";
export declare class AdaptProgressComponent extends AdaptRadarAngularGenericDirective implements OnInit, AfterViewInit, OnChanges {
    private _dir;
    /**
     * Configuration for progress bar (see an example below).
     * @docs-default
     */
    config: AdaptProgressConfig;
    progressBar: ElementRef<HTMLDivElement>;
    sumLabel: ElementRef<HTMLLabelElement>;
    indicators: QueryList<ElementRef<HTMLDivElement>>;
    /**
     * Shows the sum of all segments
     */
    sum: number;
    isRtl: boolean;
    defaultIndicatorMinWidth: number;
    constructor(_dir: Directionality, _adaptRadarService: AdaptRadarAngularService, _elem: ElementRef<HTMLElement>);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    getOffsetValue(value: number): number;
    getIndicatorWidth(indicator: AdaptProgressIndicator, offsetWidth: number): number;
    isIndicatorTitleInverted(indicator: AdaptProgressIndicator, offsetWidth: number): boolean;
    trackByFunc(index: number): number;
    private _fadeOutOverlappedIndicators;
    private _calcTotalValue;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptProgressComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptProgressComponent, "adapt-progress", never, { "config": "config"; }, {}, never, never>;
}
