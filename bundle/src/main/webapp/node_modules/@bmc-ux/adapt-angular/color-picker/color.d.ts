import { AfterViewInit, ElementRef, EventEmitter } from '@angular/core';
import { AdaptRGBColor } from '../common/color.utils';
import { ColorType } from '../common/common.enums';
import * as i0 from "@angular/core";
export declare class ColorComponent implements AfterViewInit {
    mapDragging: boolean;
    stripDragging: boolean;
    colorMapState: {
        x?: number;
        y?: number;
        color: string;
    };
    colorStripState: {
        y?: number;
        color: string;
    };
    colorType: ColorType;
    width: number;
    height: number;
    colorStripWidth: number;
    set color(color: AdaptRGBColor);
    readonly colorChange: EventEmitter<AdaptRGBColor>;
    colorMapCanvas: ElementRef<HTMLCanvasElement>;
    colorStripCanvas: ElementRef<HTMLCanvasElement>;
    colorStripArea: ElementRef<HTMLDivElement>;
    private _mapColor;
    private _stripColor;
    private _colorMapContext;
    private _colorStripContext;
    ngAfterViewInit(): void;
    private _initColorMap;
    private _initColorStrip;
    private _fillColorMap;
    private _selectColor;
    private _selectStripColor;
    private _setColor;
    static ɵfac: i0.ɵɵFactoryDeclaration<ColorComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ColorComponent, "adapt-color", never, { "colorType": "colorType"; "width": "width"; "height": "height"; "colorStripWidth": "colorStripWidth"; "color": "color"; }, { "colorChange": "colorChange"; }, never, never>;
}
