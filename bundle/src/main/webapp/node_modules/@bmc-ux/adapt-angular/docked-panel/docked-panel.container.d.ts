import { EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { AnimationEvent } from '@angular/animations';
import { DismissReasons } from '../common/common.enums';
import { AdaptDockedPanelConfig } from './docked-panel.config';
import { AdaptDockedPanelStackService } from './docked-panel-stack.service';
import * as i0 from "@angular/core";
export declare class AdaptDockedPanelContainerComponent implements OnInit, OnDestroy {
    private _dpConfig;
    dps: AdaptDockedPanelStackService;
    position: string;
    top: string;
    left: string;
    right: string;
    bottom: string;
    zIndex: string;
    readonly onPanelClosed: EventEmitter<void>;
    readonly onDismiss: EventEmitter<DismissReasons>;
    private _historyChangeEvent;
    constructor(_dpConfig: AdaptDockedPanelConfig);
    ngOnInit(): void;
    ngOnDestroy(): void;
    closeAnimationEnd(event: AnimationEvent): void;
    containerClick(e: MouseEvent): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptDockedPanelContainerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptDockedPanelContainerComponent, "adapt-docked-panel-container", never, {}, { "onPanelClosed": "onPanelClosed"; "onDismiss": "onDismiss"; }, never, never>;
}
