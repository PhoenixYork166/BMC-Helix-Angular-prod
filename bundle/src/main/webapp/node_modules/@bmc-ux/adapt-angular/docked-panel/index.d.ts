import { ModuleWithProviders } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./docked-panel.container";
import * as i2 from "./docked-panel.component";
import * as i3 from "@angular/common";
import * as i4 from "../modal/over-modal";
import * as i5 from "../alert-animated/index";
import * as i6 from "../modal/index";
import * as i7 from "@angular/cdk/overlay";
import * as i8 from "../focus-holder/index";
export declare class AdaptDockedPanelModule {
    /**
     * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
     * Will be removed in a short while
     *
     * @deprecated 11.16.0
     */
    static forRoot(): ModuleWithProviders<AdaptDockedPanelModule>;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptDockedPanelModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<AdaptDockedPanelModule, [typeof i1.AdaptDockedPanelContainerComponent, typeof i2.AdaptDockedPanelComponent], [typeof i3.CommonModule, typeof i4.AdaptOverModalModule, typeof i5.AdaptAlertAnimatedModule, typeof i6.AdaptModalModule, typeof i7.OverlayModule, typeof i8.AdaptFocusHolderModule], [typeof i1.AdaptDockedPanelContainerComponent, typeof i2.AdaptDockedPanelComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<AdaptDockedPanelModule>;
}
export * from './docked-panel.component';
export * from './docked-panel.container';
export * from './docked-panel.config';
export * from './docked-panel.model';
export * from './docked-panel.service';
export * from './docked-panel.context';
