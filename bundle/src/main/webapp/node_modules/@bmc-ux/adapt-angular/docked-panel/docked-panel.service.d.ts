import { Injector } from '@angular/core';
import { Observable } from 'rxjs';
import { ScrollManageService } from '../common/scroll-manage.service';
import { AlertAnimatedConfig } from '../alert-animated/adapt-alert.model';
import { DockedDeferred, DockedPanel, DockedPanelInstance } from './docked-panel.model';
import { AdaptDockedPanelStackService } from './docked-panel-stack.service';
import * as i0 from "@angular/core";
export declare class AdaptDockedPanelService {
    private _injector;
    private _scrollService;
    private _adaptDockedPanelStackService;
    direction: string;
    hideBackdrop: boolean;
    private _wrapper;
    private _scrollManager;
    private _alertsSubject;
    constructor(_injector: Injector, _scrollService: ScrollManageService, _adaptDockedPanelStackService: AdaptDockedPanelStackService);
    get openedPanels(): DockedPanelInstance[];
    get parentDP(): DockedPanelInstance;
    get activeDP(): DockedPanelInstance;
    get alertsState(): Observable<AlertAnimatedConfig>;
    open(dpConfig: DockedPanel): DockedDeferred;
    updateConfig(config: DockedPanel, dockedPanelInstance: DockedPanelInstance): void;
    close(id: string): void;
    closeAllDockedPanels(): void;
    openAlert(alert: AlertAnimatedConfig): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptDockedPanelService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<AdaptDockedPanelService>;
}
