import { TemplateRef, Type } from '@angular/core';
import { OverModal, OverModalConfig } from '../modal/index';
import { PopupDeferred } from '../common/popup-deferred';
export declare enum DockedPanelDirection {
    DEFAULT = "right",
    LEFT = "left",
    RIGHT = "right"
}
export declare enum DockedPanelFooterAlign {
    DEFAULT = "auto",
    AUTO = "auto",
    REVERSE = "reverse",
    LEFT = "left",
    RIGHT = "right"
}
export declare type DockedPanelContent = string | TemplateRef<any> | Type<any>;
export interface DockedPanel {
    /**
     * DockedPanel open direction
     */
    direction?: DockedPanelDirection | string;
    /**
     * DockedPanel title
     */
    title?: string;
    /**
     * DockedPanel content. Can be string, template or component
     */
    content?: DockedPanelContent;
    /**
     * Footer appearance: always be in the bottom of the docked panel (dy default) or float with content on scroll
     */
    floatFooter?: boolean;
    /**
     * Footer content align
     */
    footerAlign?: DockedPanelFooterAlign | string;
    /**
     * OverModal config
     */
    overModal?: OverModal | OverModalConfig;
    /**
     * Flag to hide/show backdrop
     */
    hideBackdrop?: boolean;
    /**
     * Flag to allow/reject dismiss action on backdrop click
     */
    blockDismiss?: boolean;
    /**
     * Flag to allow/reject dismiss action on ESC click
     */
    blockKeyboard?: boolean;
    /**
     * Callback on dismiss. If returns false, dismiss action will be refused
     */
    beforeDismiss?: (reason: any) => boolean;
    /**
     * Custom data. can be used in template
     */
    data?: any;
    /**
     * Docked panel size
     */
    size?: string;
    /**
     * Used to create data-testid attribute that can be used for testing purpose
     */
    testID?: string;
    /**
     * Close all dropdowns/popover while dockedPanel is opened
     */
    closeAllOpenedItems?: boolean;
}
export declare class DockedPanelInstance {
    static idCounter: number;
    id: string;
    config: DockedPanel;
    inactive: boolean;
    promise: DockedDeferred;
    overModalOpen: boolean;
    contentInstanceRef: unknown;
    static getNewId(): string;
    constructor(config: DockedPanel);
    updateConfig(config: DockedPanel): void;
}
export declare class DockedDeferred extends PopupDeferred {
}
