import { ComponentFactoryResolver, ElementRef, EventEmitter, OnDestroy, OnInit, Renderer2, ViewContainerRef } from '@angular/core';
import { AlertAnimatedConfig, AlertCloseEvent } from '../alert-animated/adapt-alert.model';
import { DismissReasons } from '../common/common.enums';
import { AdaptTranslateService } from '../common/i18n/index';
import { LayerService } from '../common/layer-service';
import { AdaptOverlayService } from '../common/overlay/index';
import { AdaptDockedPanelService } from './docked-panel.service';
import { AdaptDockedPanelConfig } from './docked-panel.config';
import { DockedPanelContent, DockedPanelInstance } from './docked-panel.model';
import { DockedPanelContext } from './docked-panel.context';
import { AdaptRadarAngularGenericDirective, AdaptRadarAngularService } from '../common/radar/adapt-radar';
import * as i0 from "@angular/core";
export declare class AdaptDockedPanelComponent extends AdaptRadarAngularGenericDirective implements OnInit, OnDestroy {
    private _dockedPanelConfig;
    private _componentFactoryResolver;
    private _dockedPanelContext;
    private _renderer2;
    private _dockedPanelService;
    private _layerService;
    private _overlayService;
    ts: AdaptTranslateService;
    modalClassInstance: boolean;
    dismissReason: typeof DismissReasons;
    defaultConfig: AdaptDockedPanelConfig;
    closeText: string;
    context: DockedPanelContext;
    overModal: any;
    alerts: AlertAnimatedConfig[];
    readonly alertClosed: EventEmitter<AlertCloseEvent>;
    panel: DockedPanelInstance;
    floatFooter: boolean;
    contentPlacement: ViewContainerRef;
    private _beforeDismiss;
    private _destroyed$;
    set content(newContent: DockedPanelContent);
    constructor(_dockedPanelConfig: AdaptDockedPanelConfig, _componentFactoryResolver: ComponentFactoryResolver, _dockedPanelContext: DockedPanelContext, _renderer2: Renderer2, _dockedPanelService: AdaptDockedPanelService, _layerService: LayerService, _overlayService: AdaptOverlayService, ts: AdaptTranslateService, _adaptRadarService: AdaptRadarAngularService, _elem: ElementRef<HTMLElement>);
    ngOnInit(): void;
    ngOnDestroy(): void;
    dismiss(reason: DismissReasons): void;
    close(result: any): void;
    openOverModal(): void;
    closeOverModal(): void;
    private _loadContent;
    private _getData;
    private _alertSubscriptionHandler;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptDockedPanelComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptDockedPanelComponent, "adapt-docked-panel", never, { "panel": "panel"; "floatFooter": "floatFooter"; "content": "content"; }, { "alertClosed": "alertClosed"; }, never, never>;
}
