import { AfterContentInit, ElementRef, OnDestroy, ChangeDetectorRef } from '@angular/core';
import { DomSanitizer, SafeHtml } from '@angular/platform-browser';
import { ResizeService } from '../common/resize/resize.service';
import { AdaptRadarAngularGenericDirective, AdaptRadarAngularService } from '../common/radar/adapt-radar';
import { AdaptEmptyStateType, EmptyStateSizes } from './empty-state.types';
import * as i0 from "@angular/core";
export declare class AdaptEmptyStateComponent extends AdaptRadarAngularGenericDirective implements AfterContentInit, OnDestroy {
    private _domSanitizer;
    private _resizeService;
    private _changeDetectorRef;
    private _currentSize;
    selectedEmptyStates: EmptyStateSizes;
    emptyStateSvg: SafeHtml;
    /**
     * Empty state label
     * @docs-default
     */
    label: string;
    /**
     * Empty state icon to be used.
     * Note: string type added for backport compatibility
     * @docs-default
     */
    set type(emptyStateType: AdaptEmptyStateType);
    /**
     * Toggle inverted mode
     * @docs-default false
     */
    inverted: boolean;
    emptyStateContainer: ElementRef;
    private _defaultType;
    constructor(_domSanitizer: DomSanitizer, _resizeService: ResizeService, _changeDetectorRef: ChangeDetectorRef, _adaptRadarService: AdaptRadarAngularService, _elem: ElementRef<HTMLElement>);
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    private _checkSize;
    private _getEmptyStateHtml;
    private _getEmptyStateSvg;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptEmptyStateComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptEmptyStateComponent, "adapt-empty-state", never, { "label": "label"; "type": "type"; "inverted": "inverted"; }, {}, never, ["*"]>;
}
