import { TagModel } from '../../metatag/index';
import { AdaptRxDatetimeParserFormatter } from '../../rx/rx-datetime/index';
import { AdvancedFilterDataTypesConfigs, AdvancedFilterDataTypesConfigsTexts, AdvancedFilterExpressionTip, AdvancedFilterOption, AdvancedFilterOptionConfig } from './advanced-filter.models';
import * as i0 from "@angular/core";
export declare class AdvancedFilterDataTypesConfigsService {
    private _rxDatetimeParserFormatter;
    static isEmptyOnEmptyValues(value: unknown[]): boolean;
    static getExpressionRawValues(option: AdvancedFilterOption, searchTerm: string, filterNamePrefix?: string): string | null;
    static createAdvancedFilterTag<TValue>(value: TValue, filterOption: AdvancedFilterOption<TValue>, filterOptionConfig: AdvancedFilterOptionConfig<TValue>, isIncompletedExpression: boolean, tagText?: string): TagModel<AdvancedFilterExpressionTip<TValue>>;
    constructor(_rxDatetimeParserFormatter: AdaptRxDatetimeParserFormatter);
    getConfigs(texts: AdvancedFilterDataTypesConfigsTexts): AdvancedFilterDataTypesConfigs;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdvancedFilterDataTypesConfigsService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<AdvancedFilterDataTypesConfigsService>;
}
