import { ElementRef, EventEmitter, NgZone, OnDestroy, OnInit } from '@angular/core';
import { ListKeyManager } from '@angular/cdk/a11y';
import { SimpleFilterOption, SimpleFilterTexts } from './simple-filter.models';
import { BaseFilterDirective } from '../base-filter';
import { AdaptTranslateService } from '../../common/i18n/index';
import { KeyValueObject } from '../../common/common.models';
import { AdaptListKeyManagerItemDirective } from '../../common/list-key-manager/index';
import { AdaptDropdownDirective, AdaptDropdownMobileView } from '../../dropdown/index';
import { AdaptDeviceDetectionService } from '../../common/device-detection.service';
import { AdaptRadarAngularService } from '../../common/radar/adapt-radar';
import * as i0 from "@angular/core";
export declare class AdaptSimpleFilterComponent extends BaseFilterDirective<SimpleFilterTexts> implements OnDestroy, OnInit {
    private _translateService;
    private _deviceDetection;
    private _ngZone;
    activeDescendant: string;
    isTablet: boolean;
    get mobileViewConfig(): AdaptDropdownMobileView;
    activeFilterOption: SimpleFilterOption;
    filterOptions: SimpleFilterOption[];
    /**
     * This input controls if filter button (anchor) should be disabled
     */
    anchorDisabled: boolean;
    readonly activeFilterOptionChange: EventEmitter<SimpleFilterOption>;
    popup: AdaptDropdownDirective;
    private _listKeyManager;
    private _listKeyManagerDestroy;
    constructor(_translateService: AdaptTranslateService, _deviceDetection: AdaptDeviceDetectionService, _ngZone: NgZone, _adaptRadarService: AdaptRadarAngularService, _elem: ElementRef<HTMLElement>);
    ngOnInit(): void;
    ngOnDestroy(): void;
    get popupId(): string;
    setDefaultTexts(translation: KeyValueObject): void;
    selectFilter(filterOption: SimpleFilterOption): void;
    isActiveFilterOption(filterOption: SimpleFilterOption): boolean;
    isActiveDescendant(keyManagerItem: AdaptListKeyManagerItemDirective): boolean;
    getDropdownAnchorLabel(): string;
    keydownHandler(event: KeyboardEvent): void;
    keyManagerStateChange(listKeyManager?: ListKeyManager<AdaptListKeyManagerItemDirective>): void;
    onItemMouseover(index: number): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptSimpleFilterComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptSimpleFilterComponent, "adapt-simple-filter", never, { "activeFilterOption": "activeFilterOption"; "filterOptions": "filterOptions"; "anchorDisabled": "anchorDisabled"; }, { "activeFilterOptionChange": "activeFilterOptionChange"; }, never, never>;
}
