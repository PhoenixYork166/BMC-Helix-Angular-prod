{"version":3,"file":"subnav-dropdown.component.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/subnav/subnav-dropdown.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, ElementRef, Input, OnInit, QueryList, Renderer2, ViewChild} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BehaviorSubject} from 'rxjs';\n\nimport {AdaptDropdownDirective} from '../dropdown/index';\nimport {AdaptSubnavItemComponent} from './subnav-item.component';\n\n@Component({\n  selector: 'adapt-subnav-dropdown, [adaptSubnavDropdown]',\n  template: `\n    <div adaptDropdown\n         [adaptRadarDisableEventSending]=\"true\"\n         #adaptDropdownDirective\n         [placement]=\"['bottom-right', 'top-right', 'auto']\"\n         [appendToBody]=\"true\"\n         [holdFocusInMenu]=\"true\"\n         [restoreFocusAfterClose]=\"true\"\n         [autoClose]=\"autoClose\">\n      <div adaptDropdownAnchor (click)=\"adaptDropdownDirective.toggle($event)\">\n        <ng-content></ng-content>\n      </div>\n      <div adaptDropdownMenu class=\"dropdown-menu\">\n        <ng-container *ngFor=\"let item of subnavItemsList\">\n          <ng-container [ngTemplateOutlet]=\"item.isHidden ? item.adaptSubnavItem : emptyTmpl\"\n                        [ngTemplateOutletContext]=\"{$implicit: item.isHidden}\"></ng-container>\n        </ng-container>\n      </div>\n    </div>\n\n    <ng-template #emptyTmpl></ng-template>\n  `\n})\nexport class AdaptSubnavDropdownComponent implements OnInit {\n  /**\n   * Needs when SubnavDropdownComponent uses as a directive\n   * @docs-default\n   */\n  @Input() adaptSubnavDropdown: unknown;\n\n  /**\n   * Default css class list for host element\n   * @docs-default d-block\n   */\n  @Input() defaultCssClass: string = 'd-block';\n\n  /**\n   * Indicates that dropdown should be closed when selecting one of dropdown items (click) or pressing ESC.\n   * @since v11.5.0\n   * @docs-default true\n   */\n  @Input() autoClose: boolean | 'outside' | 'inside' = true;\n\n  @ViewChild('adaptDropdownDirective', {static: true, read: AdaptDropdownDirective}) adaptDropdownDirective: AdaptDropdownDirective;\n  @ViewChild('adaptDropdownDirective', {static: true, read: ElementRef}) adaptDropdownElementRef: ElementRef<HTMLElement>;\n\n  showDropdown$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  subnavItemsList: QueryList<AdaptSubnavItemComponent>;\n\n  get width(): number {\n    return this.adaptDropdownElementRef ? this.adaptDropdownElementRef.nativeElement.offsetWidth : 0;\n  }\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              private _renderer: Renderer2,\n              private _directionality: Directionality) {\n  }\n\n  ngOnInit(): void {\n    this._renderer.addClass(this._elementRef.nativeElement, 'position-relative');\n\n    this.defaultCssClass.split(' ').forEach(cssClass => {\n      this._renderer.addClass(this.adaptDropdownElementRef.nativeElement, cssClass);\n    });\n\n    this.showDropdown$\n      .subscribe(show => {\n        if (show) {\n          this._renderer.removeClass(this.adaptDropdownElementRef.nativeElement, 'invisible');\n          this._renderer.removeClass(this.adaptDropdownElementRef.nativeElement, 'position-absolute');\n          this._renderer.removeStyle(this.adaptDropdownElementRef.nativeElement, 'left');\n          this._renderer.removeStyle(this.adaptDropdownElementRef.nativeElement, 'right');\n        } else {\n          this._renderer.addClass(this.adaptDropdownElementRef.nativeElement, 'invisible');\n          this._renderer.addClass(this.adaptDropdownElementRef.nativeElement, 'position-absolute');\n          this._renderer\n            .setStyle(this.adaptDropdownElementRef.nativeElement, this._directionality.value === 'rtl' ? 'left' : 'right', 0);\n          this.adaptDropdownDirective.close();\n        }\n      });\n  }\n}\n"]}