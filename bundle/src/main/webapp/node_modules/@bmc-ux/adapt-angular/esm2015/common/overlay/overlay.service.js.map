{"version":3,"file":"overlay.service.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/common/overlay/overlay.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,MAAM,EAAE,UAAU,EAAE,MAAM,EAAC,MAAM,eAAe,CAAC;AACzD,OAAO,EAAC,cAAc,EAAC,MAAM,mBAAmB,CAAC;AACjD,OAAO,EAAC,QAAQ,EAAC,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAC,OAAO,EAAiB,gBAAgB,EAAE,aAAa,EAAC,MAAM,sBAAsB,CAAC;AAE7F,OAAO,EAAC,QAAQ,EAAC,MAAM,iBAAiB,CAAC;AAGzC,OAAO,EAAC,sBAAsB,EAAC,MAAM,uBAAuB,CAAC;;;;;AAK7D,MAAM,OAAO,mBAAmB;IAG9B,YAAsC,SAAmB,EACrC,eAA+B,EAC/B,OAAe,EACf,QAAiB,EACjB,iBAAmC,EACnC,SAAmB,EACnB,cAA6B;QANX,cAAS,GAAT,SAAS,CAAU;QACrC,oBAAe,GAAf,eAAe,CAAgB;QAC/B,YAAO,GAAP,OAAO,CAAQ;QACf,aAAQ,GAAR,QAAQ,CAAS;QACjB,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,cAAS,GAAT,SAAS,CAAU;QACnB,mBAAc,GAAd,cAAc,CAAe;QARjD,4BAAuB,GAAY,IAAI,CAAC;IASxC,CAAC;IAED;;OAEG;IACH,qBAAqB,CAAI,MAAuD,EACvD,kBAAuC,EACvC,aAA6B;QACpD,OAAO,IAAI,sBAAsB,CAC/B,MAAM,EACN,kBAAkB,EAClB,aAAa,EACb,IAAI,CAAC,eAAe,CAAC,KAAK,EAC1B,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,cAAc,CACpB,CAAC;IACJ,CAAC;;sFA9BU,mBAAmB,cAGV,QAAQ;yEAHjB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;uFAEP,mBAAmB;cAH/B,UAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;sCAIkD,QAAQ;sBAA5C,MAAM;uBAAC,QAAQ","sourcesContent":["import {Inject, Injectable, NgZone} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\nimport {Overlay, OverlayConfig, OverlayContainer, ViewportRuler} from '@angular/cdk/overlay';\nimport {ComponentPortal, DomPortal, TemplatePortal} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/common';\n\nimport {AdaptOverlayConfig} from './overlay.model';\nimport {AdaptOverlayWithPortal} from './overlay-with-portal';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdaptOverlayService {\n  enableCDKOverlayControl: boolean = true;\n\n  constructor(@Inject(DOCUMENT) private _document: Document,\n              private _directionality: Directionality,\n              private _ngZone: NgZone,\n              private _overlay: Overlay,\n              private _overlayContainer: OverlayContainer,\n              private _platform: Platform,\n              private _viewportRuler: ViewportRuler) {\n  }\n\n  /**\n   * Opens cdk overlay with passed portal\n   */\n  openOverlayWithPortal<T>(portal: ComponentPortal<T> | TemplatePortal | DomPortal,\n                           adaptOverlayConfig?: AdaptOverlayConfig,\n                           overlayConfig?: OverlayConfig): AdaptOverlayWithPortal<T> {\n    return new AdaptOverlayWithPortal(\n      portal,\n      adaptOverlayConfig,\n      overlayConfig,\n      this._directionality.value,\n      this._document,\n      this._ngZone,\n      this._overlay,\n      this._overlayContainer,\n      this._platform,\n      this._viewportRuler\n    );\n  }\n}\n"]}