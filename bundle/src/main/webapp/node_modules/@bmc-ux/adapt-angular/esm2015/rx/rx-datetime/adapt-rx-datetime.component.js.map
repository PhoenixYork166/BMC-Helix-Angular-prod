{"version":3,"file":"adapt-rx-datetime.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/rx/rx-datetime/adapt-rx-datetime.component.ts","../../../../../../libs/adapt-angular/src/rx/rx-datetime/adapt-rx-datetime.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  LOCALE_ID,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  Self,\n  ViewChild\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport type {WeekDay} from '@angular/common';\nimport {ENTER, SPACE, TAB} from '@angular/cdk/keycodes';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {isFunction, isNil, pick} from 'lodash-es';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularCustomEventType,\n  AdaptRadarAngularService\n} from '../../common/radar/adapt-radar';\nimport {AdaptInteractionSourceService, getInteractionSource} from '../../common/interaction-source';\nimport {AdaptRxFeedbackComponent, AdaptRxFormControlDirective} from '../form-control/index';\nimport {PlacementArray} from '../../common/positioning';\nimport {AdaptDeviceDetectionService} from '../../common/device-detection.service';\nimport {AdaptTranslateService} from '../../common/i18n/index';\nimport {AdaptDropdownCloseReason, AdaptDropdownDirective, AdaptDropdownMobileView} from '../../dropdown/index';\nimport {SafeCdr} from '../../common/safe-cdr';\nimport {getEventKeyCode} from '../../common/key-codes';\nimport {getFocusableElements} from '../../common/focus';\nimport {getDateParts} from './common/partition.utils';\nimport {checkIfPropsDefined, getDatetimeModelPropsByMode, getStructWithDefaults} from './common/common.utils';\n\nimport {RxDateStruct, RxDatetimePickerMode, RxDatetimeStruct, RxDatetimeTexts} from './adapt-rx-datetime.types';\nimport {AdaptRxDatetimeConfigService} from './adapt-rx-datetime-config.service';\nimport {AdaptRxDatetimeAdapter} from './adapt-rx-datetime-adapter.service';\nimport {AdaptRxDatetimeI18nService} from './adapt-rx-datetime-i18n.service';\nimport {AdaptRxDatetimeParserFormatter} from './adapt-rx-datetime-parser-formatter.service';\nimport {AdaptRxDatetimePickerComponent} from './datetime-picker/adapt-rx-datetime-picker.component';\nimport {FocusOrigin} from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'adapt-rx-datetime',\n  templateUrl: './adapt-rx-datetime.component.html',\n  preserveWhitespaces: false\n})\nexport class AdaptRxDatetimeComponent extends AdaptRxFormControlDirective implements OnInit {\n  protected controlName: string = 'datetime';\n\n  analyticsComponentName: typeof AdaptRadarAngularCustomEventName = AdaptRadarAngularCustomEventName;\n\n  /**\n   * Placeholder attribute\n   * @docs-default\n   */\n  @Input() placeholder: string;\n\n  /**\n   * Inline mode\n   * @docs-default false\n   */\n  @Input() inline: boolean = false;\n\n  /**\n   * The preferred placement of the typeahead\n   * @docs-default auto\n   */\n  @Input() placement: PlacementArray = 'auto';\n\n  /**\n   * Attach popup to the body\n   * @docs-default false\n   */\n  @Input() appendToBody: boolean = false;\n\n  /**\n   * Light theme for inline mode\n   * @docs-default false\n   */\n  @Input() inlineLight: boolean = true;\n\n  /**\n   * Small size for inline mode\n   * @docs-default false\n   */\n  @Input() inlineCompact: boolean = false;\n\n  /**\n   * Day filter\n   * @docs-default\n   */\n  @Input() dayFilter: (date: RxDateStruct) => boolean;\n\n  /**\n   * Trigger for disable picker's wizard\n   * @docs-default false\n   */\n  @Input() disableWizard: boolean = false;\n\n  /**\n   * Picker's mode\n   * @docs-default RxDatetimePickerMode.Date\n   */\n  @Input() mode: RxDatetimePickerMode = RxDatetimePickerMode.Date;\n\n  /**\n   * Enables seconds for time\n   * @docs-default false\n   */\n  @Input() hasSeconds: boolean = false;\n\n  /**\n   * Enables/disables 12-hours time format.\n   * By default time format calculates automatically\n   * @docs-default\n   */\n  @Input() set use12HoursTime(value: boolean) {\n    this._use12HoursTime = value;\n  }\n\n  get use12HoursTime(): boolean {\n    return !isNil(this._use12HoursTime) ? this._use12HoursTime : this._datetimeI18nService.getTimeFormat(this.localeID) === 12;\n  }\n\n  /**\n   * Calendar first day of week.\n   * By default calculates automatically\n   * @docs-default\n   */\n  @Input() set firstDayOfWeek(value: WeekDay) {\n    this._firstDayOfWeek = value;\n  }\n\n  get firstDayOfWeek(): WeekDay {\n    return !isNil(this._firstDayOfWeek) ? this._firstDayOfWeek : this._datetimeI18nService.getFirstDayOfWeek(this.localeID);\n  }\n\n  /**\n   * Initial datetime uses when there is model\n   * @docs-default\n   */\n  @Input() initialDatetime: RxDatetimeStruct;\n\n  /**\n   * Callback that returns default datetime struct to fill the empty struct properties emitted by the picker\n   * @docs-default\n   * @since v12.11.0\n   */\n  @Input() defaultDatetime: (mode?: RxDatetimePickerMode, hasSeconds?: boolean) => RxDatetimeStruct;\n\n  /**\n   * Use disable styles for readonly state\n   * @docs-default false\n   * @since v10.5.0\n   */\n  @Input() disabledStyleForReadonlyState: boolean = false;\n\n  /**\n   * Custom class for the dropdown menu\n   * @docs-default\n   * @since 10.13.0\n   */\n  @Input() popupClass: string;\n\n  /**\n   * Datetime texts\n   * @docs-default\n   */\n  @Input()\n  get texts(): RxDatetimeTexts {\n    return this._texts;\n  }\n\n  set texts(value: RxDatetimeTexts) {\n    this._texts = {...this._defaultTexts, ...value};\n  }\n\n  /**\n   * Input format\n   * @docs-default\n   * @since v12.12.0\n   */\n  @Input() inputFormat: string;\n\n  /* eslint-disable @angular-eslint/no-output-on-prefix */\n  /**\n   * An event fired when the popup is opened or closed\n   */\n  @Output() readonly onPopupOpenChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /**\n   * An event fired when model change\n   */\n  @Output() readonly onDatetimeChange: EventEmitter<RxDatetimeStruct> = new EventEmitter<RxDatetimeStruct>();\n  /* eslint-enable @angular-eslint/no-output-on-prefix */\n\n  /**\n   * Reference to input control\n   */\n  @ViewChild('inputControlRef', {static: false}) inputControlRef: ElementRef<HTMLInputElement>;\n\n  /**\n   * Reference to popup open button\n   */\n  @ViewChild('openPopupRef', {static: false}) openPopupRef: ElementRef<HTMLInputElement>;\n\n  /**\n   * Reference to AdaptRxFeedbackComponent\n   */\n  @ViewChild('adaptRxFeedbackRef', {static: true}) adaptRxFeedbackRef: AdaptRxFeedbackComponent;\n\n  /**\n   * Reference to AdaptDropdownDirective\n   */\n  @ViewChild('adaptDropdownDirective', {static: false}) popup: AdaptDropdownDirective;\n\n  /**\n   * Reference to AdaptRxDatetimePickerComponent\n   */\n  @ViewChild('adaptRxDatetimePickerComponent', {static: false}) datetimePickerComponent: AdaptRxDatetimePickerComponent;\n\n  /**\n   * Reference to picker menu container\n   */\n  @ViewChild('datetimePickerContainer', {static: false}) datetimePickerContainer: ElementRef<HTMLElement>;\n\n  PICKER_MODE: typeof RxDatetimePickerMode = RxDatetimePickerMode;\n\n  inputValue: string = '';\n  isMobile: boolean = false;\n  isLastWizardStep: boolean = false;\n  pickerActiveDatetime: RxDatetimeStruct;\n  defaultInitialDatetime: RxDatetimeStruct;\n\n  mobileViewConfig: AdaptDropdownMobileView = {\n    isPicker: true\n  };\n\n  get controlValue(): RxDatetimeStruct {\n    return this._datetimeAdapter.fromModel(this._controlValue);\n  }\n\n  set controlValue(value: RxDatetimeStruct) {\n    const nextValue = isFunction(this.defaultDatetime) ?\n      getStructWithDefaults(value, this.defaultDatetime(this.mode, this.hasSeconds)) : value;\n\n    this._controlValue = this._datetimeAdapter.toModel(nextValue);\n    this.pickerActiveDatetime = this.controlValue;\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _controlValue: any;\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _backupControlValue: any;\n  private _use12HoursTime: boolean;\n  private _firstDayOfWeek: WeekDay;\n  private _defaultTexts: RxDatetimeTexts;\n  private _texts: RxDatetimeTexts;\n  private _popupFocusableElements: HTMLElement[];\n  private _openWithKeyboard: boolean = false;\n  private _targetOpen: HTMLInputElement | HTMLButtonElement;\n\n  constructor(@Optional() @Self() ngControl: NgControl,\n              _datetimeConfigService: AdaptRxDatetimeConfigService,\n              _deviceDetectionService: AdaptDeviceDetectionService,\n              private _datetimeI18nService: AdaptRxDatetimeI18nService,\n              // TODO: Refactor this if possible\n              /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n              private _datetimeAdapter: AdaptRxDatetimeAdapter<any>,\n              private _datetimeParserFormatter: AdaptRxDatetimeParserFormatter,\n              _changeDetectorRef: ChangeDetectorRef,\n              private _renderer: Renderer2,\n              public ts: AdaptTranslateService,\n              @Inject(LOCALE_ID) public localeID: string,\n              _adaptRadarService: AdaptRadarAngularService,\n              private _interactionSourceOriginService: AdaptInteractionSourceService,\n              _elem: ElementRef<HTMLElement>) {\n    super(ngControl, ts, _adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptRxDatetime, _changeDetectorRef);\n\n    this.isMobile = _deviceDetectionService.isMobile();\n    this._texts = this._defaultTexts = _datetimeConfigService.texts;\n  }\n\n  /**\n   * Check if the control has UI error state\n   */\n  get hasDangerState(): boolean {\n    return this.adaptRxFeedbackRef.hasUIErrorState;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this._updateInputValue();\n  }\n\n  datetimeOpenHandler(event: MouseEvent | KeyboardEvent): void {\n    if (!this.nonInteractive && !this.popup.isOpen()) {\n      const interactionSource: FocusOrigin = getInteractionSource(event);\n      const keyCode: number = event ? getEventKeyCode(event as KeyboardEvent) : null;\n\n      this._targetOpen = event ? (event.target as HTMLInputElement | HTMLButtonElement) : null;\n\n      if (this.isMobile && this._targetOpen === this.inputControlRef.nativeElement) {\n        this._onTouched();\n      }\n\n      if (interactionSource === 'keyboard' && keyCode !== ENTER && keyCode !== SPACE) {\n        return;\n      }\n\n      this._openWithKeyboard = interactionSource === 'keyboard';\n      this.popup.open(event);\n    }\n  }\n\n  onInput(value: string): void {\n    this.inputValue = value;\n\n    const parsedDatetime =\n      this._datetimeParserFormatter.parse(value, this.mode, this.hasSeconds, this.use12HoursTime, this.localeID, this.inputFormat);\n\n    if (!parsedDatetime) {\n      this.controlValue = null;\n\n    } else if (parsedDatetime.parseError) {\n      this.controlValue = parsedDatetime;\n\n    } else {\n      const propsToPick = getDatetimeModelPropsByMode(this.mode, this.hasSeconds);\n\n      this.controlValue = Object.assign({\n        year: null,\n        month: null,\n        date: null,\n        hours: null,\n        minutes: null,\n        seconds: null\n      }, pick(parsedDatetime, propsToPick));\n    }\n\n    if (this.popup.isOpen()) {\n      this._checkWizardLastStep();\n    }\n\n    this._propagateChange();\n  }\n\n  blurHandler(event: FocusEvent): void {\n    super.blurHandler(event);\n\n    if (!this.popup.isOpen()) {\n      this._updateInputValue();\n      this._onTouched();\n    }\n  }\n\n  focusHandler(event: FocusEvent): void {\n    super.focusHandler(event);\n\n    this._adaptRadarService.sendCustomEventForAllProviders(AdaptRadarAngularCustomEventName.AdaptRxDatetime, {\n      GroupName: this.adaptRadarGroupName,\n      EventType: AdaptRadarAngularCustomEventType.Focus,\n      Label: this.label,\n      Required: this.required,\n      ReadOnly: this.readonly,\n      Disabled: this.disabled,\n\n      Type: this.mode,\n      Range: false,\n      Inline: this.inline,\n      InputMethod: this._interactionSourceOriginService.getLastInteractionSourceOrigin()\n      /*DynamicEntry: boolean;*/\n    });\n  }\n\n  /**\n   * Popup toggle handler\n   */\n  popupOpenChangeHandler(isOpen: boolean, closeReason?: AdaptDropdownCloseReason): void {\n    this.onPopupOpenChange.emit(isOpen);\n\n    if (isOpen) {\n      this.defaultInitialDatetime = getDateParts(new Date());\n\n      this.popup.popupAnimationDone\n        .pipe(takeUntil(this.destroy$), take(1))\n        .subscribe(() => {\n          this._popupFocusableElements = getFocusableElements(this.datetimePickerContainer.nativeElement);\n\n          if (this._openWithKeyboard) {\n            this._popupFocusableElements[0].focus();\n          }\n        });\n\n      this._backupControlValue = this._controlValue;\n\n    } else {\n      if (document.activeElement !== this.inputControlRef.nativeElement) {\n        this._updateInputValue();\n      }\n\n      this._onTouched();\n\n      if (closeReason === AdaptDropdownCloseReason.Esc && this._targetOpen) {\n        this._targetOpen.focus();\n      }\n    }\n  }\n\n  datetimePickerContainerKeydown(event: KeyboardEvent): void {\n    if (getEventKeyCode(event) === TAB) {\n      if (event.shiftKey) {\n        if (event.target === this._popupFocusableElements[0]) {\n          event.preventDefault();\n          this.popup.close();\n        }\n      } else {\n        if (event.target === this._popupFocusableElements[this._popupFocusableElements.length - 1]) {\n          event.preventDefault();\n          this.popup.close();\n        }\n      }\n    }\n  }\n\n  pickerCloseAndCancel(): void {\n    this._controlValue = this._backupControlValue;\n    this.pickerActiveDatetime = this.controlValue;\n    this._propagateChange();\n    this._updateInputValue();\n    this.popup.close();\n    this.inputControlRef.nativeElement.focus();\n  }\n\n  pickerClearAll(): void {\n    this.controlValue = null;\n    this.pickerActiveDatetime = null;\n    this._propagateChange();\n    this._updateInputValue();\n    this._checkWizardLastStep();\n  }\n\n  goToNextStep(): void {\n    if (this.isLastWizardStep) {\n      this.popup.close();\n      this.inputControlRef.nativeElement.focus();\n    } else {\n      this.datetimePickerComponent.publicApi.nextStep();\n      this._checkWizardLastStep();\n    }\n  }\n\n  onPickerValueChange(newValue: RxDatetimeStruct): void {\n    this._adaptRadarService.sendCustomEventForAllProviders(AdaptRadarAngularCustomEventName.AdaptRxDatetime, {\n      GroupName: this.adaptRadarGroupName,\n      EventType: AdaptRadarAngularCustomEventType.ValueChanged,\n      Label: this.label,\n      Required: this.required,\n      ReadOnly: this.readonly,\n      Disabled: this.disabled,\n\n      Type: this.mode,\n      Range: false,\n      Inline: this.inline,\n      /*InputMethod: getInteractionSourceOrigin(event, this.isMobile)*/\n      /*DynamicEntry: boolean;*/\n    });\n\n    this.controlValue = newValue;\n    this.onDatetimeChange.emit(this.controlValue);\n    this._propagateChange();\n    this._updateInputValue();\n    this._checkWizardLastStep();\n\n    if (this.inline) {\n      this._onTouched();\n    }\n  }\n\n  onPickerStateChange(): void {\n    if (!this.inline) {\n      this._checkWizardLastStep();\n    }\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  writeValue(value: any): void {\n    this.controlValue = this._datetimeAdapter.fromModel(value);\n    this._updateInputValue();\n\n    if (this.popup?.isOpen()) {\n      this._checkWizardLastStep();\n    }\n\n    SafeCdr.detectChanges(this._changeDetectorRef);\n  }\n\n  protected _focusNativeElement(): void {\n    if (!this.inline) {\n      this.inputControlRef.nativeElement.focus();\n    }\n  }\n\n  private _isModelFull(): boolean {\n    return checkIfPropsDefined(this.controlValue, getDatetimeModelPropsByMode(this.mode, this.hasSeconds));\n  }\n\n  private _updateInputValue(): void {\n    if (this._isModelFull()) {\n      this.inputValue =\n        this._datetimeParserFormatter.format(this.controlValue, this.mode, this.hasSeconds, this.use12HoursTime, this.localeID, this.inputFormat);\n    }\n\n    if (!this.controlValue) {\n      this.inputValue = '';\n    }\n  }\n\n  private _checkWizardLastStep(): void {\n    // In PROD mode this.datetimePickerComponent is undefined\n    // Add extra change detection to prevent fix it\n    // https://github.bmc.com/bmc-ux/adapt-angular/issues/6721\n    SafeCdr.detectChanges(this._changeDetectorRef);\n\n    const modeWithoutWizard = this.mode === RxDatetimePickerMode.Date ||\n      this.mode === RxDatetimePickerMode.Year ||\n      this.mode === RxDatetimePickerMode.Month;\n\n    this.isLastWizardStep = this.disableWizard || modeWithoutWizard || (this._isModelFull() && this.datetimePickerComponent?.publicApi.isLastStep());\n  }\n\n  private _propagateChange(): void {\n    this._onChange(this._controlValue);\n  }\n}\n","<div [class.has-danger]=\"adaptRxFeedbackRef.hasUIErrorState\"\n     [class.has-warning]=\"warningMessage\">\n  <adapt-rx-control-label [for]=\"id\"\n                          [label]=\"label\"\n                          [subLabel]=\"subLabel\"\n                          [requiredLabel]=\"requiredLabel\"\n                          [showRequiredLabel]=\"required\"\n                          [tooltip]=\"tooltip\"\n                          [testID]=\"testID\"></adapt-rx-control-label>\n\n  <ng-container [ngTemplateOutlet]=\"inline ? dateTimeInlineTemplate : dateTimeDropdownTemplate\"\n                [ngTemplateOutletContext]=\"{$implicit: adaptRxFeedbackRef.hasUIErrorState}\"></ng-container>\n\n  <adapt-rx-feedback #adaptRxFeedbackRef\n                     [ariaErrorMessage]=\"ariaErrorMessage\"\n                     [errors]=\"ngControl.errors\"\n                     [warningMessage]=\"warningMessage\"\n                     [controlTouched]=\"ngControl.touched\"\n                     (messageAppeared)=\"handleMessageAppeared($event, analyticsComponentName.AdaptRxDatetime)\"></adapt-rx-feedback>\n</div>\n\n<ng-template #dateTimePickerTemplate>\n  <adapt-rx-datetime-picker #adaptRxDatetimePickerComponent\n                            [mode]=\"mode\"\n                            [expandedControlsStyle]=\"mode === PICKER_MODE.Date\"\n                            [dayFilter]=\"dayFilter\"\n                            [hasSeconds]=\"hasSeconds\"\n                            [use12HoursTime]=\"use12HoursTime\"\n                            [firstDayOfWeek]=\"firstDayOfWeek\"\n                            [initialDatetime]=\"initialDatetime || defaultInitialDatetime\"\n                            [activeDatetime]=\"pickerActiveDatetime\"\n                            [disabled]=\"disabled\"\n                            [readonly]=\"readonly\"\n                            [texts]=\"texts\"\n                            [testID]=\"testID\"\n                            [attr.data-testid]=\"testID + '_picker'\"\n                            (pickerValueChange)=\"onPickerValueChange($event)\"\n                            (pickerStateChange)=\"onPickerStateChange()\">\n    <adapt-rx-feedback [errors]=\"ngControl.errors\"\n                       [ariaErrorMessage]=\"ariaErrorMessage\"\n                       [warningMessage]=\"warningMessage\"\n                       [controlTouched]=\"ngControl.touched\"\n                       [alertFeedbackStyle]=\"true\"\n                       [alertFeedbackTruncation]=\"!isMobile\"></adapt-rx-feedback>\n  </adapt-rx-datetime-picker>\n</ng-template>\n\n<ng-template #dateTimeInlineTemplate>\n  <div class=\"a3t-datetime--calendar-min-width\"\n       [class.a3t-datetime-inline]=\"inline\"\n       [class.a3t-datetime-inline-light]=\"inlineLight\"\n       [class.a3t-datetime-inline-small]=\"inlineCompact\">\n    <ng-template [ngTemplateOutlet]=\"dateTimePickerTemplate\"></ng-template>\n  </div>\n</ng-template>\n\n<ng-template #dateTimeDropdownTemplate let-hasErrors>\n  <div adaptDropdown\n       [adaptRadarDisableEventSending]=\"true\"\n       #adaptDropdownDirective=\"adaptDropdown\"\n       [placement]=\"placement\"\n       [holdFocusInMenu]=\"false\"\n       [autoFocusFirst]=\"false\"\n       [restoreFocusAfterClose]=\"true\"\n       [appendToBody]=\"appendToBody\"\n       [autoClose]=\"'outside'\"\n       [mobileView]=\"mobileViewConfig\"\n       (onOpen)=\"popupOpenChangeHandler(true)\"\n       (onClose)=\"popupOpenChangeHandler(false, $event)\">\n    <div adaptDropdownAnchor\n         class=\"input-group a3t-datetime--controls-wrapper\"\n         [class.a3t-datetime--controls-wrapper-active]=\"adaptDropdownDirective.isOpen()\">\n      <input type=\"text\"\n             class=\"form-control rx-form-control a3t-datetime--input-control\"\n             #inputControlRef\n             [id]=\"id\"\n             [value]=\"inputValue\"\n             [required]=\"required\"\n             [disabled]=\"disabled\"\n             [readOnly]=\"readonly || (isMobile && !disabled)\"\n             [autofocus]=\"autofocus\"\n             [attr.autocomplete]=\"'off'\"\n             [attr.tabindex]=\"tabIndex\"\n             [attr.data-testid]=\"testID\"\n             [attr.placeholder]=\"placeholder\"\n             [attr.name]=\"name\"\n             [attr.aria-label]=\"ariaLabel\"\n             [attr.aria-labelledby]=\"ariaLabelledby\"\n             [attr.aria-describedby]=\"ariaDescribedBy\"\n             [attr.aria-required]=\"required\"\n             [attr.aria-invalid]=\"hasDangerState\"\n             [attr.aria-errormessage]=\"ariaErrorMessage\"\n             [attr.aria-readonly]=\"readonly\"\n             [attr.aria-disabled]=\"disabled\"\n             [class.a3t-datetime--input-control_invalid]=\"hasErrors\"\n             [class.a3t-datetime--input-control_mobile]=\"isMobile && !readonly\"\n             [class.a3t-datetime--input-control_readonly]=\"readonly && !this.disabledStyleForReadonlyState\"\n             [class.form-control-danger]=\"adaptRxFeedbackRef.hasUIErrorState\"\n             [class.form-control-disabled-look]=\"readonly && this.disabledStyleForReadonlyState\"\n             (click)=\"datetimeOpenHandler($event)\"\n             (input)=\"onInput(inputControlRef.value)\"\n             (focus)=\"focusHandler($event)\"\n             (blur)=\"blurHandler($event)\"/>\n      <button *ngIf=\"!(readonly && !this.disabledStyleForReadonlyState)\"\n              #openPopupRef\n              class=\"a3t-datetime--calendar-control input-group-append\"\n              type=\"button\"\n              role=\"button\"\n              [disabled]=\"disabled\"\n              [attr.data-testid]=\"testID + '_calendar-control'\"\n              [attr.aria-invalid]=\"hasDangerState\"\n              [attr.aria-errormessage]=\"ariaErrorMessage\"\n              [attr.aria-readonly]=\"readonly\"\n              [attr.aria-disabled]=\"disabled\"\n              [class.disabled-look]=\"readonly && this.disabledStyleForReadonlyState\"\n              [class.a3t-datetime--calendar-control_invalid]=\"hasErrors\"\n              (click)=\"datetimeOpenHandler($event)\"\n              (keydown)=\"datetimeOpenHandler($event)\">\n        <i class=\"a3t-datetime--calendar-control__icon\"\n           [class.d-icon-calendar]=\"mode === PICKER_MODE.Date || mode === PICKER_MODE.Year || mode === PICKER_MODE.YearMonth || mode === PICKER_MODE.Month\"\n           [class.d-icon-calendar_clock_o]=\"mode === PICKER_MODE.DateTime\"\n           [class.d-icon-clock_o]=\"mode === PICKER_MODE.Time\"></i>\n        <span class=\"sr-only\">{{mode === PICKER_MODE.Time ? texts.clockBtn : texts.calendarBtn}}</span>\n      </button>\n    </div>\n    <ng-template adaptDropdownMenuTemplate>\n      <div class=\"dropdown-menu p-0\"\n           #datetimePickerContainer\n           [ngClass]=\"[isMobile ? 'a3t-datetime--calendar-width' : 'a3t-datetime--calendar-min-width', popupClass || '']\"\n           (keydown)=\"datetimePickerContainerKeydown($event)\">\n        <ng-template [ngTemplateOutlet]=\"dateTimePickerTemplate\"></ng-template>\n\n        <div class=\"a3t-datetime--footer\">\n          <div>\n            <button type=\"button\"\n                    #closeAndCancelButton\n                    class=\"btn btn-sm btn-link\"\n                    [attr.data-testid]=\"testID + '_cancel'\"\n                    (click)=\"pickerCloseAndCancel()\"\n                    (keydown.arrowRight)=\"$event.preventDefault(); clearButton.focus()\">\n              {{texts.cancelBtn}}\n            </button>\n          </div>\n          <div class=\"d-flex justify-content-center\">\n            <button type=\"button\"\n                    #clearButton\n                    class=\"btn btn-sm btn-secondary m-end-1\"\n                    [attr.data-testid]=\"testID + '_clear'\"\n                    (click)=\"pickerClearAll()\"\n                    (keydown.arrowLeft)=\"$event.preventDefault(); closeAndCancelButton.focus()\"\n                    (keydown.arrowRight)=\"$event.preventDefault(); wizardNextButton.focus()\">\n              {{texts.clearBtn}}\n            </button>\n            <button type=\"button\"\n                    #wizardNextButton\n                    class=\"btn btn-sm btn-primary\"\n                    [attr.data-testid]=\"testID + '_apply'\"\n                    (click)=\"goToNextStep()\"\n                    (keydown.arrowLeft)=\"$event.preventDefault(); clearButton.focus()\">\n              <span *ngIf=\"isLastWizardStep\">{{texts.applyBtn}}</span>\n              <span *ngIf=\"!isLastWizardStep\">{{texts.nextBtn}}</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </div>\n</ng-template>\n"]}