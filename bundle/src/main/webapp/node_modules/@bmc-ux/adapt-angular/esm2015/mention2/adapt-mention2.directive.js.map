{"version":3,"file":"adapt-mention2.directive.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/mention2/adapt-mention2.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  Directive,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  Input,\n  IterableDiffer,\n  IterableDiffers,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  Renderer2,\n  Self\n} from '@angular/core';\nimport {Platform} from '@angular/cdk/platform';\nimport {NgControl} from '@angular/forms';\nimport {ComponentPortal} from '@angular/cdk/portal';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BACKSPACE, DOWN_ARROW, ENTER, ESCAPE, LEFT_ARROW, RIGHT_ARROW, TAB, UP_ARROW} from '@angular/cdk/keycodes';\nimport {fromEvent, ReplaySubject, Subscription} from 'rxjs';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {isNil} from 'lodash-es';\n\nimport {getEventKeyCode} from '../common/key-codes';\nimport {regExpEscape} from '../common/utilities';\nimport {AdaptOverlayService, AdaptOverlayWithPortal, getOverlayConnectedPosition} from '../common/overlay/index';\n\nimport {\n  AdaptMention2Group,\n  AdaptMention2Item,\n  AdaptMention2ItemWithMeta,\n  AdaptMention2ViewItem\n} from './adapt-mention2.types';\nimport {\n  getCaretPosition,\n  getMention2ItemName,\n  parseMention2ModelString,\n  setCaretPosition\n} from './adapt-mention2-utils';\nimport {AdaptMention2ListComponent} from './adapt-mention2-list.component';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularGenericDirective,\n  AdaptRadarAngularService\n} from '../common/radar/adapt-radar';\n\n\n@Directive({\n  selector: '[adaptMention2]'\n})\nexport class AdaptMention2Directive extends AdaptRadarAngularGenericDirective implements AfterViewInit, DoCheck, OnDestroy {\n  static DefaultSearchKey: string = 'name';\n\n  /**\n   * An array of data to represent mention tag list\n   * @docs-default\n   */\n  @Input() adaptMention2: AdaptMention2Group[];\n\n  /**\n   * Mention directive model\n   * @docs-default\n   */\n  @Input() set mentionModel(value: string) {\n    this._adaptMentionModel = value || '';\n    this._cacheMentionsFromString(this._adaptMentionModel);\n\n    if (this._viewInitComplete && !this._entryElementFocus) {\n      // Allow writeValue only after view init to be sure that ngControl and layout are ready\n      this._writeValueToEntryElement();\n    }\n  }\n\n  /**\n   * When set to truthy, shows busy loader while data are loading\n   * @since v10.15.0\n   * @docs-default false\n   */\n  @Input() set showMentionLoader(state: boolean) {\n    this._showMentionLoader = state;\n\n    if (this._mentionListOverlayWithPortal) {\n      this._mentionListOverlayWithPortal.componentRef.instance.isLoading = state;\n    }\n  }\n\n  get showMentionLoader(): boolean {\n    return this._showMentionLoader;\n  }\n\n  /**\n   * Class list for mention tag (only for [contenteditable])\n   * @docs-default text-active\n   */\n  @Input() mentionClassList: string = 'text-active';\n\n  /**\n   * Mention filter.\n   * Changed in 10.15.1. Added 'searchKey' param\n   * @docs-default\n   */\n  @Input() mentionFilter: (value: AdaptMention2Item, query: string, searchKey?: string) => boolean;\n\n  /**\n   * Mention list popup max width\n   * @docs-default 200px\n   */\n  @Input() mentionListMaxWidth: string = '200px';\n\n  /**\n   * Mention list popup max height\n   * @docs-default 200px\n   */\n  @Input() mentionListMaxHeight: string = '200px';\n\n  /**\n   * Fires when mention model change\n   */\n  @Output() readonly mentionModelChange: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * Fires when search value is entered\n   * @since v10.15.0\n   */\n  @Output() readonly mentionSearchValueEntered: EventEmitter<string> = new EventEmitter();\n\n  /**\n   * Fires when item from the options list is selected\n   * @since v10.15.0\n   */\n  @Output() readonly mentionItemSelected: EventEmitter<AdaptMention2Item> = new EventEmitter();\n\n  /**\n   * Fires when mention trigger char is pressed\n   * @since v10.15.0\n   */\n  @Output() readonly mentionTriggerCharPressed: EventEmitter<string> = new EventEmitter();\n\n  private _adaptMentionModel: string;\n  private _cachedViewMentionItems: Map<string, AdaptMention2ViewItem> = new Map<string, AdaptMention2ViewItem>();\n\n  private _showMentionLoader: boolean = false;\n\n  private _entryElement: HTMLElement;\n  private _entryElementContentEditable: boolean;\n  private _entryElementFocus: boolean = false;\n\n  private _spyWrapperElement: HTMLElement;\n  private _spyElementBeforeCaret: HTMLElement;\n  private _spyElementAfterCaret: HTMLElement;\n  private _spyCaret: HTMLElement;\n\n  private _viewInitComplete: boolean = false;\n\n  private _activeGroup: AdaptMention2Group;\n  private _activePosition: number;\n  private _activeQuery: string;\n\n  private _mentionListOverlayWithPortal: AdaptOverlayWithPortal<AdaptMention2ListComponent>;\n  private _mentionListSelectItem$: Subscription;\n  private _destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  private _mentionDiffer: IterableDiffer<AdaptMention2Item>[] = [];\n\n  constructor(@Optional() @Self() private _ngControl: NgControl,\n              private _elementRef: ElementRef<HTMLElement>,\n              private _ngZone: NgZone,\n              private _renderer: Renderer2,\n              private _platform: Platform,\n              private _differs: IterableDiffers,\n              private _overlayService: AdaptOverlayService,\n              private _injector: Injector,\n              private _dir: Directionality,\n              _adaptRadarService: AdaptRadarAngularService,\n              _elem: ElementRef<HTMLElement>) {\n    super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptMention2);\n\n    this._mentionDiffer = new Array(this.adaptMention2?.length).fill(_differs.find([]).create(null));\n  }\n\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n\n    this._configureEntryElement();\n    this._configureEntryElementSpy();\n    this._configureEntryElementListeners();\n\n    this._viewInitComplete = true;\n\n    // Manually init entryElement if the mentionModel has been set before initComplete\n    this._ngZone.onStable\n      .pipe(takeUntil(this._destroyed$), take(1))\n      .subscribe(() => {\n        this._writeValueToEntryElement(true);\n      });\n  }\n\n  ngDoCheck(): void {\n    // needed for lazy loading\n    if (this._mentionListOverlayWithPortal) {\n      if (this._mentionDiffer.length && !isNil(this.adaptMention2)) {\n        const isArrayChanged = this._mentionDiffer.some((differ, index) => {\n          return differ.diff(this.adaptMention2[index]?.items);\n        });\n\n        if (isArrayChanged && this._entryElementFocus) {\n          this._openList();\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._closeList();\n\n    this._destroyed$.next(true);\n    this._destroyed$.complete();\n  }\n\n  /**\n   * Configure entryElement\n   */\n  private _configureEntryElement(): void {\n    const hostElement = this._elementRef.nativeElement;\n\n    if (hostElement instanceof HTMLInputElement || hostElement instanceof HTMLTextAreaElement) {\n      // Get hostElement as entryElement if it is <input> or <textarea>\n      this._entryElement = hostElement;\n    } else {\n      // Search inside of hostElement for <input> or <textarea>\n      this._entryElement = hostElement.querySelector('input[type=\"text\"], textarea');\n\n      // Fallback to host element if no inputLike elements found.\n      this._entryElement = this._entryElement || hostElement;\n    }\n\n    this._entryElementContentEditable =\n      !(this._entryElement instanceof HTMLInputElement || this._entryElement instanceof HTMLTextAreaElement);\n\n    if (this._entryElementContentEditable) {\n      // Extra configuration for [contenteditable] element\n      this._renderer.setStyle(this._entryElement, 'whiteSpace', 'pre-wrap'); // Show all the content including spaces\n\n      if (this._platform.WEBKIT) {\n        // Prohibit adding <div> on ENTER (Chrome)\n        this._renderer.setStyle(this._entryElement, 'display', 'inline-block');\n      }\n    }\n  }\n\n  /**\n   * Configure spy element for cursor position detection\n   */\n  private _configureEntryElementSpy(): void {\n    // Create SpyWrapperElement\n    this._spyWrapperElement = this._renderer.createElement('div');\n\n    const entryElementComputedStyle = getComputedStyle(this._entryElement);\n\n    [\n      'boxSizing',\n      'width',\n      'height',\n      'overflowX',\n      'overflowY',\n\n      'borderTopWidth',\n      'borderRightWidth',\n      'borderBottomWidth',\n      'borderLeftWidth',\n\n      'paddingTop',\n      'paddingRight',\n      'paddingBottom',\n      'paddingLeft',\n\n      'fontStyle',\n      'fontVariant',\n      'fontWeight',\n      'fontStretch',\n      'fontSize',\n      'lineHeight',\n      'fontFamily',\n\n      'textAlign',\n      'textTransform',\n      'textIndent',\n      'textDecoration',\n\n      'letterSpacing',\n      'wordSpacing'\n    ].forEach((styleProp) => {\n      this._renderer.setStyle(this._spyWrapperElement, styleProp, entryElementComputedStyle[styleProp]);\n    });\n\n    if (this._entryElement instanceof HTMLInputElement) {\n      this._renderer.setStyle(this._spyWrapperElement, 'whiteSpace', 'pre');\n      this._renderer.setStyle(this._spyWrapperElement, 'overflowX', 'scroll');\n\n    } else if (this._entryElement instanceof HTMLTextAreaElement) {\n      this._renderer.setStyle(this._spyWrapperElement, 'whiteSpace', 'pre-wrap');\n\n    } else {\n      // [contenteditable]\n      this._renderer.setStyle(this._spyWrapperElement, 'whiteSpace', 'pre-wrap');\n    }\n\n    this._spyElementBeforeCaret = this._renderer.createElement('span');\n    this._renderer.appendChild(this._spyWrapperElement, this._spyElementBeforeCaret);\n\n    this._spyCaret = this._renderer.createElement('span');\n    this._renderer.appendChild(this._spyWrapperElement, this._spyCaret);\n\n    this._spyElementAfterCaret = this._renderer.createElement('span');\n    this._renderer.appendChild(this._spyWrapperElement, this._spyElementAfterCaret);\n\n    // Create wrapper for Spy elements\n    const spyElementsWrapper = this._renderer.createElement('div');\n\n    this._renderer.setStyle(spyElementsWrapper, 'position', 'absolute');\n    this._renderer.setStyle(spyElementsWrapper, 'zIndex', '-1');\n    this._renderer.setStyle(spyElementsWrapper, 'opacity', '0');\n\n    this._renderer.appendChild(spyElementsWrapper, this._spyWrapperElement);\n    this._renderer.insertBefore(this._entryElement.parentElement, spyElementsWrapper, this._entryElement);\n  }\n\n  /**\n   * Configure entryElement event listeners\n   */\n  private _configureEntryElementListeners(): void {\n    fromEvent(this._entryElement, 'input')\n      .pipe(takeUntil(this._destroyed$))\n      .subscribe((event: InputEvent) => {\n        this._inputSourceValueChange(this._getEntryElementValue(), event);\n\n        // Deleting the entire content of contenteditable keeps a <br>\n        // FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=1513303\n        // Delete it manually\n        if (\n          this._entryElementContentEditable &&\n          this._entryElement.childNodes.length === 1 &&\n          this._entryElement.childNodes[0].nodeType === 1 &&\n          (this._entryElement.childNodes[0] as HTMLElement).tagName.toLocaleLowerCase() === 'br'\n        ) {\n          this._entryElement.innerHTML = '';\n          this._entryElement.focus();\n        }\n      });\n\n    fromEvent(this._entryElement, 'focus')\n      .pipe(takeUntil(this._destroyed$))\n      .subscribe(() => {\n        this._entryElementFocus = true;\n      });\n\n    fromEvent(this._entryElement, 'blur')\n      .pipe(takeUntil(this._destroyed$))\n      .subscribe(() => {\n        this._entryElementFocus = false;\n      });\n\n    fromEvent(this._entryElement, 'keydown')\n      .pipe(takeUntil(this._destroyed$))\n      .subscribe((event: KeyboardEvent) => {\n        switch (getEventKeyCode(event)) {\n          case UP_ARROW: {\n            if (this._mentionListOverlayWithPortal) {\n              event.preventDefault();\n              this._mentionListOverlayWithPortal.componentRef.instance.activatePrev();\n            }\n\n            break;\n          }\n          case DOWN_ARROW: {\n            if (this._mentionListOverlayWithPortal) {\n              event.preventDefault();\n              this._mentionListOverlayWithPortal.componentRef.instance.activateNext();\n            }\n\n            break;\n          }\n          case ENTER: {\n            if (this._mentionListOverlayWithPortal) {\n              event.preventDefault();\n              this._mentionListOverlayWithPortal.componentRef.instance.selectActive();\n            } else {\n              // <br> for new lines instead of <div>\n              if (this._entryElementContentEditable) {\n                document.execCommand('defaultParagraphSeparator', false, 'br');\n              }\n            }\n\n            break;\n          }\n          case BACKSPACE: {\n            if (!this._entryElementContentEditable || !this._getEntryElementValue()) {\n              break;\n            }\n\n            const selection: Selection = window.getSelection();\n\n            if (selection.isCollapsed) {\n              const anchorNode: Node = selection.anchorNode;\n              let targetMentionElement;\n\n              if (anchorNode instanceof HTMLElement && anchorNode.dataset.group) {\n                // Anchor is a targetMentionElement\n                targetMentionElement = anchorNode;\n\n              } else if (anchorNode.parentElement instanceof HTMLElement && anchorNode.parentElement.dataset.group) {\n                // Anchor is a textNode inside the targetMentionElement\n                targetMentionElement = anchorNode.parentElement;\n\n              } else if (anchorNode === this._entryElement) {\n                // Anchor is an entryElement\n                const newAnchorNode = this._entryElement.childNodes[selection.anchorOffset - 1];\n\n                if (newAnchorNode) {\n                  if (newAnchorNode instanceof HTMLElement && newAnchorNode.dataset.group) {\n                    targetMentionElement = newAnchorNode;\n                  } else if (newAnchorNode.previousSibling instanceof HTMLElement && newAnchorNode.previousSibling.dataset.group) {\n                    targetMentionElement = newAnchorNode.previousSibling;\n                  }\n                }\n\n              } else if (selection.anchorOffset === 0) {\n                if (anchorNode.previousSibling instanceof HTMLElement && anchorNode.previousSibling.dataset.group) {\n                  // Anchor is a textNode right after the targetMentionElement\n                  targetMentionElement = anchorNode.previousSibling;\n                }\n              }\n\n              if (targetMentionElement) {\n                event.preventDefault();\n\n                const range = document.createRange();\n\n                range.selectNode(targetMentionElement);\n                selection.removeAllRanges();\n                selection.addRange(range);\n              }\n            }\n\n            break;\n          }\n          case TAB: {\n            this._closeList();\n            break;\n          }\n        }\n      });\n\n    fromEvent(this._entryElement, 'keyup')\n      .pipe(takeUntil(this._destroyed$))\n      .subscribe((event: KeyboardEvent) => {\n        if (this._mentionListOverlayWithPortal) {\n          switch (getEventKeyCode(event)) {\n            case LEFT_ARROW:\n            case RIGHT_ARROW: {\n              this._checkCaretPosition();\n              break;\n            }\n          }\n        }\n      });\n  }\n\n  /**\n   * Write value to entryElement or ngControl\n   */\n  private _writeValueToEntryElement(firstInit?: boolean): void {\n    if (this._ngControl && this._ngControl.control) {\n      const _uiString = this._getUIString();\n\n      if (firstInit && !_uiString) {\n        return;\n      }\n\n      this._ngControl.control.setValue(_uiString);\n    } else {\n      if (this._entryElementContentEditable) {\n        const _uiLayout = this._getUILayout();\n\n        if (firstInit && !_uiLayout.length) {\n          return;\n        }\n\n        this._entryElement.innerHTML = '';\n\n        _uiLayout.forEach((element) => {\n          this._renderer.appendChild(this._entryElement, element);\n        });\n      } else {\n        const _uiString = this._getUIString();\n\n        if (firstInit && !_uiString) {\n          return;\n        }\n\n        (this._entryElement as HTMLInputElement).value = _uiString;\n      }\n    }\n  }\n\n  /**\n   * Emit entryElement value change, update caret position\n   */\n  private _inputSourceValueChange(value: string, event?: InputEvent): void {\n    this.mentionModelChange.emit(this._applyMetadataToString(value));\n\n    if (this._entryElementFocus) {\n      this._checkCaretPosition(event);\n    }\n  }\n\n  /**\n   * Returns UI string without metadata\n   */\n  private _getUIString(): string {\n    const rawMentionModel = parseMention2ModelString(this._adaptMentionModel);\n    let resultString = '';\n\n    rawMentionModel.forEach((modelPart) => {\n      resultString += typeof modelPart === 'string' ?\n        modelPart : modelPart.group + modelPart.name;\n    });\n\n    return resultString;\n  }\n\n  /**\n   * Returns layout representation of UI string\n   */\n  private _getUILayout(): HTMLElement[] {\n    const layoutArray: HTMLElement[] = [];\n\n    parseMention2ModelString(this._adaptMentionModel)\n      .forEach((modelPart) => {\n        let mentionElement;\n\n        if (typeof modelPart === 'string') {\n          mentionElement = this._renderer.createText(modelPart);\n        } else {\n          mentionElement = this._renderer.createElement('span');\n          mentionElement.textContent = modelPart.group + modelPart.name;\n\n          // Chrome: creates <font> element if contenteditable='true'\n          // FF: does not delete element if contenteditable='false'\n          mentionElement.setAttribute('contenteditable', false);\n\n          mentionElement.setAttribute('class', this.mentionClassList);\n          mentionElement.dataset.group = modelPart.group;\n          mentionElement.dataset.name = modelPart.name;\n          mentionElement.dataset.meta = modelPart.meta;\n          mentionElement.dataset.initial = modelPart.initial;\n\n          mentionElement.addEventListener('click', () => {\n            const tempTextNode = this._renderer.createText('');\n\n            this._renderer.insertBefore(mentionElement.parentNode, tempTextNode, mentionElement.nextSibling);\n            window.getSelection().collapse(tempTextNode);\n          });\n        }\n\n        layoutArray.push(mentionElement);\n      });\n\n    return layoutArray;\n  }\n\n  /**\n   * Store all new mention model items\n   */\n  private _cacheMentionsFromString(value: string): void {\n    (parseMention2ModelString(value).filter(elem => typeof elem !== 'string') as AdaptMention2ViewItem[])\n      .forEach(mentionItem => {\n        this._cachedViewMentionItems.set(mentionItem.group + mentionItem.name, mentionItem);\n      });\n  }\n\n  /**\n   * Expand string with metadata from cached mention items\n   */\n  private _applyMetadataToString(value: string): string {\n    if (value) {\n      this._cachedViewMentionItems.forEach((mentionItem, mentionViewKey) => {\n        value = value.replace(new RegExp(regExpEscape(mentionViewKey), 'gm'), mentionItem.initial);\n      });\n    }\n\n    return value;\n  }\n\n  /**\n   * Returns entryElement string value\n   */\n  private _getEntryElementValue(): string {\n    const inputElement = this._entryElement;\n\n    return this._entryElementContentEditable ? inputElement.textContent : (inputElement as HTMLInputElement).value;\n  }\n\n  /**\n   * Check caret position\n   * Open mention list popup if mentionGroup found\n   */\n  private _checkCaretPosition(event?: InputEvent): void {\n    if (!this.adaptMention2) {\n      return;\n    }\n\n    const caretPosition = getCaretPosition(this._entryElement);\n\n    if (caretPosition) {\n      const stringBeforeCaret = this._getEntryElementValue().slice(0, caretPosition);\n      const lastWordBeforeCaret = stringBeforeCaret.split(/\\s/).pop();\n      const previousActiveGroupTrigger = this._activeGroup?.trigger;\n\n      this._activeGroup = this.adaptMention2\n        .find((mentionGroup) => mentionGroup.trigger === lastWordBeforeCaret[0]) || null;\n\n      if (this._activeGroup) {\n        const previousActivePosition = this._activePosition;\n        const previousActiveQuery = this._activeQuery;\n\n        this._activePosition = stringBeforeCaret.length - lastWordBeforeCaret.length;\n        this._activeQuery = lastWordBeforeCaret.slice(1);\n\n        if ((event && event.data === this._activeGroup.trigger) ||\n          (previousActivePosition !== this._activePosition) ||\n          (previousActiveGroupTrigger !== this._activeGroup.trigger) ||\n          (previousActiveQuery === '' && this._activeQuery === '')) {\n          this.mentionTriggerCharPressed.emit(this._activeGroup.trigger);\n        }\n\n        this.mentionSearchValueEntered.emit(this._activeQuery);\n\n        this._spyElementBeforeCaret.textContent = this._getEntryElementValue().slice(0, this._activePosition);\n        this._spyCaret.textContent = this._activeGroup.trigger + this._activeQuery;\n        this._spyElementAfterCaret.textContent = this._getEntryElementValue().slice(caretPosition);\n\n        this._renderer.setStyle(this._spyWrapperElement, 'width', this._entryElement.offsetWidth + 'px');\n        this._renderer.setStyle(this._spyWrapperElement, 'height', this._entryElement.offsetHeight + 'px');\n        this._renderer.setProperty(this._spyWrapperElement, 'scrollLeft', this._entryElement.scrollLeft);\n        this._renderer.setProperty(this._spyWrapperElement, 'scrollTop', this._entryElement.scrollTop);\n\n        this._openList();\n\n      } else {\n        this._closeList();\n\n        this._activePosition = null;\n        this._activeQuery = null;\n      }\n\n    } else {\n      this._closeList();\n      this._activeGroup = null;\n      this._activePosition = null;\n      this._activeQuery = null;\n    }\n  }\n\n  /**\n   * Append mention from mention list to UI and model\n   */\n  private _appendMention(mention: AdaptMention2ViewItem): void {\n    if (!isNil(this._activePosition)) {\n      const space = '\\u00A0';\n      const newMentionLabel = mention.group + mention.name;\n      const beforeCaretPart = this._getEntryElementValue().slice(0, this._activePosition);\n      const afterCaretPart = this._getEntryElementValue()\n        .slice(this._activePosition + this._activeGroup.trigger.length + this._activeQuery.length);\n      const newEntryElementValue = beforeCaretPart + newMentionLabel + space + afterCaretPart;\n\n      // Force set new mention to cache to apply the latest metadata to string\n      this._cachedViewMentionItems.set(newMentionLabel, mention);\n      // Update mentionModel to reflect changes to UI\n      this.mentionModel = this._applyMetadataToString(newEntryElementValue);\n\n      if (this._entryElementFocus) {\n        this._writeValueToEntryElement();\n      }\n      // Emit mentionModel change\n      this._inputSourceValueChange(newEntryElementValue);\n      // Close list\n      this._closeList();\n\n      this._ngZone.onStable\n        .pipe(takeUntil(this._destroyed$), take(1))\n        .subscribe(() => {\n          const newCaretPosition = (beforeCaretPart + newMentionLabel + space).length;\n\n          setCaretPosition(this._entryElement, newCaretPosition);\n\n          // Restore focus state after click on the list\n          this._entryElement.focus();\n        });\n    }\n  }\n\n  /**\n   * Open mention list\n   */\n  private _openList(): void {\n    if (!this._mentionListOverlayWithPortal) {\n      this._mentionListOverlayWithPortal = this._overlayService.openOverlayWithPortal(\n        new ComponentPortal(AdaptMention2ListComponent, null, this._injector),\n        {\n          origin: this._spyCaret,\n          transformOriginSelector: '.adapt-dd-menu',\n          scrollStrategy: 'close',\n          positionStrategy: 'connected',\n          connectedPositions: [\n            getOverlayConnectedPosition('bottom-left', this._dir.value),\n            getOverlayConnectedPosition('top-left', this._dir.value)\n          ]\n        }\n      );\n\n      this._mentionListOverlayWithPortal.overlayRef.keydownEvents()\n        .pipe(takeUntil(this._mentionListOverlayWithPortal.destroy$))\n        .subscribe((event: KeyboardEvent) => {\n          if (getEventKeyCode(event) === ESCAPE) {\n            this._closeList();\n          }\n        });\n\n      this._mentionListOverlayWithPortal.overlayRef.outsidePointerEvents()\n        .pipe(takeUntil(this._mentionListOverlayWithPortal.destroy$))\n        .subscribe(() => {\n          this._closeList();\n        });\n    }\n\n    this._mentionListOverlayWithPortal.componentRef.instance.list =\n      this._activeGroup.items.filter((item: AdaptMention2ItemWithMeta | string) => {\n        return (this.mentionFilter || this._defaultFilter)(item, this._activeQuery, this._activeGroup.searchKey);\n      });\n    this._mentionListOverlayWithPortal.componentRef.instance.searchKey = this._activeGroup.searchKey || AdaptMention2Directive.DefaultSearchKey;\n    this._mentionListOverlayWithPortal.componentRef.instance.isLoading = this.showMentionLoader;\n    this._mentionListOverlayWithPortal.componentRef.instance.itemTemplate = this._activeGroup.itemTemplate;\n    this._mentionListOverlayWithPortal.componentRef.instance.maxHeight = this.mentionListMaxHeight;\n    this._mentionListOverlayWithPortal.componentRef.instance.maxWidth = this.mentionListMaxWidth;\n\n    if (this._mentionListSelectItem$) {\n      this._mentionListSelectItem$.unsubscribe();\n    }\n\n    this._mentionListSelectItem$ =\n      this._mentionListOverlayWithPortal.componentRef.instance.selectItem\n        .pipe(takeUntil(this._mentionListOverlayWithPortal.destroy$))\n        .subscribe((item: AdaptMention2ItemWithMeta) => {\n          const itemName = getMention2ItemName(item, this._activeGroup.searchKey || AdaptMention2Directive.DefaultSearchKey);\n\n          const newMention: AdaptMention2ViewItem = {\n            group: this._activeGroup.trigger,\n            name: itemName,\n            meta: item.meta || '',\n            initial: `${this._activeGroup.trigger}[${itemName}](${item.meta || ''})`\n          };\n\n          this._appendMention(newMention);\n          this.mentionItemSelected.emit(item);\n        });\n\n    setTimeout(() => {\n      if (this._mentionListOverlayWithPortal) {\n        // Update list position after the UI updated with a new data\n        this._mentionListOverlayWithPortal.updatePositionForce();\n      }\n    });\n  }\n\n  /**\n   * Close mention list\n   */\n  private _closeList(): void {\n    if (this._mentionListOverlayWithPortal) {\n      this._mentionListOverlayWithPortal.destroy();\n      this._mentionListOverlayWithPortal = null;\n\n      if (this._mentionListSelectItem$) {\n        this._mentionListSelectItem$.unsubscribe();\n        this._mentionListSelectItem$ = null;\n      }\n    }\n  }\n\n  /**\n   * Default mention item filter\n   */\n  private _defaultFilter(item: AdaptMention2Item, query: string, searchKey?: string): boolean {\n    return Boolean(\n      getMention2ItemName(item, searchKey || AdaptMention2Directive.DefaultSearchKey)\n        .match(new RegExp(regExpEscape(query), 'gmi'))\n    );\n  }\n}\n"]}