{"version":3,"file":"adapt-rx-radiobutton-group.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/rx/rx-radiobutton/adapt-rx-radiobutton-group.component.ts","../../../../../../libs/adapt-angular/src/rx/rx-radiobutton/adapt-rx-radiobutton-group.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnInit,\n  Optional,\n  Self,\n  ViewChild\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {isEqual} from 'lodash-es';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {AdaptTranslateService} from '../../common/i18n/index';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularService\n} from '../../common/radar/adapt-radar';\nimport {AdaptRxFeedbackComponent, AdaptRxFormControlDirective} from '../form-control/index';\n\nimport {AdaptRxRadiobuttonComponent} from './adapt-rx-radiobutton.component';\n\n@Component({\n  selector: 'adapt-rx-radiobutton-group',\n  templateUrl: './adapt-rx-radiobutton-group.component.html'\n})\nexport class AdaptRxRadiobuttonGroupComponent extends AdaptRxFormControlDirective implements OnInit, AfterViewInit {\n  protected controlName: string = 'radiobutton-group';\n\n  analyticsComponentName: typeof AdaptRadarAngularCustomEventName = AdaptRadarAngularCustomEventName;\n\n  _selectedRadioButton: AdaptRxRadiobuttonComponent;\n  _radioButtons: AdaptRxRadiobuttonComponent[] = [];\n\n  /**\n   * From control name. Need for check and set [name] attribute for radio options\n   * @docs-default\n   */\n  @Input() formControlName: string;\n\n  /**\n   * Reference on AdaptRxFeedbackComponent\n   */\n  @ViewChild('adaptRxFeedbackRef', {static: true}) adaptRxFeedbackRef: AdaptRxFeedbackComponent;\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _value: any;\n\n  constructor(@Optional() @Self() ngControl: NgControl,\n              _changeDetectorRef: ChangeDetectorRef,\n              public ts: AdaptTranslateService,\n              private _ngZone: NgZone,\n              _adaptRadarService: AdaptRadarAngularService,\n              _elem: ElementRef<HTMLElement>) {\n    super(ngControl, ts, _adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptRxRadiobuttonGroup, _changeDetectorRef);\n  }\n\n  /**\n   * Check if the control has UI error state\n   */\n  get hasDangerState(): boolean {\n    return this.adaptRxFeedbackRef.hasUIErrorState;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this._checkName();\n  }\n\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n\n    this._ngZone.onStable\n      .pipe(takeUntil(this.destroy$), take(1))\n      .subscribe(() => {\n        if (this._radioButtons.length) {\n          if (this.autofocus) {\n            (this._selectedRadioButton || this._radioButtons[0]).inputRef.nativeElement.focus();\n          }\n\n          if (this.tabIndex || this.tabIndex === 0) {\n            this._radioButtons.forEach(radiobutton => {\n              radiobutton.tabIndex = this.tabIndex;\n            });\n          }\n        }\n      });\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  get value(): any {\n    return this._value;\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  set value(newValue: any) {\n    if (!isEqual(this._value, newValue)) {\n      // Set this before proceeding to ensure no circular loop occurs with selection.\n      this._value = newValue;\n\n      this._updateSelectedRadioFromValue();\n      this._checkSelectedRadioButton();\n\n      this.stateChanges$.next();\n    }\n  }\n\n  /**\n   * Mark formControl as touched.\n   * Wrapper to be able to invoke protected _onTouch\n   */\n  markAsTouched(): void {\n    this._onTouched();\n  }\n\n  /**\n   * Propagate formControl change.\n   * Wrapper to be able to invoke protected _onChange\n   */\n  propagateChange(): void {\n    this._onChange(this._value);\n  }\n\n  /**\n   * Implementation of base abstract member\n   */\n  writeValue(value: string): void {\n    if (value !== undefined) {\n      this._value = value;\n    }\n\n    this._updateSelectedRadioFromValue();\n    this._checkSelectedRadioButton();\n  }\n\n  /**\n   * Implementation from the base class\n   */\n  protected _focusNativeElement(): void {\n    // This logic is located in the ngAfterViewInit\n  }\n\n  /**\n   * Updates the `selected` radio button from the internal _value state.\n   */\n  private _updateSelectedRadioFromValue(): void {\n    // If the value already matches the selected radio, do nothing.\n    const isAlreadySelected = this._selectedRadioButton && this._selectedRadioButton.value === this._value;\n\n    if (this._radioButtons && !isAlreadySelected) {\n      this._selectedRadioButton = null;\n      this._radioButtons.forEach(radio => {\n        radio.checked = this.value === radio.value;\n\n        if (radio.checked) {\n          this._selectedRadioButton = radio;\n        }\n      });\n    }\n  }\n\n  /**\n   * Check if selected radioButton is checked\n   */\n  private _checkSelectedRadioButton(): void {\n    if (this._selectedRadioButton && !this._selectedRadioButton.checked) {\n      this._selectedRadioButton.checked = true;\n    }\n  }\n\n  /**\n   * Check if [name] and [formControlName] attributes set.\n   * Took from Angular -> radio_control_value_accessor\n   */\n  private _checkName(): void {\n    if (this.name && this.formControlName && this.name !== this.formControlName) {\n      throw new Error(`\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <adapt-rx-radiobutton-group formControlName=\"food\" name=\"food\">\n    `);\n    }\n\n    if (!this.name && this.formControlName) {\n      this.name = this.formControlName;\n    }\n\n    if (!this.name && !this.formControlName) {\n      this.name = `${this.id}_options`;\n    }\n  }\n}\n","<div role=\"radiogroup\"\n     [class.has-danger]=\"adaptRxFeedbackRef.hasUIErrorState\"\n     [class.has-warning]=\"warningMessage\">\n  <adapt-rx-control-label [for]=\"null\"\n                          [label]=\"label\"\n                          [subLabel]=\"subLabel\"\n                          [requiredLabel]=\"requiredLabel\"\n                          [showRequiredLabel]=\"required\"\n                          [tooltip]=\"tooltip\"\n                          [testID]=\"testID\"></adapt-rx-control-label>\n\n  <fieldset [attr.aria-labelledby]=\"ariaLabelledby\"\n            [attr.aria-describedby]=\"ariaDescribedBy\"\n            [attr.aria-invalid]=\"hasDangerState\"\n            [attr.aria-errormessage]=\"ariaErrorMessage\">\n    <legend class=\"sr-only\">{{label || ariaLabel}}</legend>\n    <ng-content></ng-content>\n  </fieldset>\n\n  <adapt-rx-feedback #adaptRxFeedbackRef\n                     [ariaErrorMessage]=\"ariaErrorMessage\"\n                     [errors]=\"ngControl.errors\"\n                     [warningMessage]=\"warningMessage\"\n                     [controlTouched]=\"ngControl.touched\"\n                     (messageAppeared)=\"handleMessageAppeared($event, analyticsComponentName.AdaptRxRadiobutton)\"></adapt-rx-feedback>\n</div>\n"]}