/* eslint-disable @typescript-eslint/no-explicit-any */
import { Component, Input, Output, EventEmitter, ViewEncapsulation } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { animate, style, transition, trigger, useAnimation } from '@angular/animations';
import { Directionality } from '@angular/cdk/bidi';
import { FileManager } from '../common/uploader/services/file-manager';
import { IconManager } from '../common/uploader/services/icons-manager';
import { ANIMATION_DURATION, ANIMATION_NAME, ANIMATION_TIMING_FUNCTION } from '../common/animation';
import { FILE_IS_UPLOADED_PERCENTAGE } from '../common/uploader/consts/uploader.consts';
import * as i0 from "@angular/core";
import * as i1 from "../common/uploader/services/file-manager";
import * as i2 from "../common/uploader/services/icons-manager";
import * as i3 from "@angular/platform-browser";
import * as i4 from "@angular/cdk/bidi";
import * as i5 from "../busy-loader/busy.directive";
import * as i6 from "@angular/common";
import * as i7 from "../truncate-file-name/truncate-file-name.directive";
import * as i8 from "../tooltip/tooltip.directive";
function AdaptUploaderItemComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n  ");
    i0.ɵɵelementStart(1, "span", 7);
    i0.ɵɵtext(2, "\n    ");
    i0.ɵɵelementStart(3, "span", 8);
    i0.ɵɵtext(4, "\n    ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(5, "\n  ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(6, "\n");
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("content", ctx_r1.getFileName());
} }
function AdaptUploaderItemComponent_a_10_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "a", 9);
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵelementStart(2, "span", 10);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(4, "\n      ");
    i0.ɵɵelementStart(5, "span", 11);
    i0.ɵɵtext(6, "\n        ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(7, "\n    ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    const _r0 = i0.ɵɵreference(1);
    i0.ɵɵproperty("download", ctx_r2.getFileName())("href", ctx_r2.file.downloadURL, i0.ɵɵsanitizeUrl);
    i0.ɵɵattribute("aria-label", ctx_r2.getFileName(true))("data-testid", ctx_r2.testID + "_download");
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate(ctx_r2.texts.btnDownloadFile);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("adaptTooltip", _r0)("adaptRadarDisableEventSending", true)("content", ctx_r2.getFileName());
} }
function AdaptUploaderItemComponent_ng_container_13_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r9 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 14);
    i0.ɵɵlistener("click", function AdaptUploaderItemComponent_ng_container_13_button_3_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(2); return ctx_r8.customDownload(ctx_r8.file); });
    i0.ɵɵtext(1, "\n        ");
    i0.ɵɵelementStart(2, "span", 10);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(4, "\n        ");
    i0.ɵɵelementStart(5, "span", 11);
    i0.ɵɵtext(6, "\n        ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(7, "\n      ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = i0.ɵɵnextContext(2);
    const _r0 = i0.ɵɵreference(1);
    i0.ɵɵattribute("aria-label", ctx_r5.getFileName(true))("data-testid", ctx_r5.testID + "_download");
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate(ctx_r5.texts.btnDownloadFile);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("adaptTooltip", _r0)("adaptRadarDisableEventSending", true)("content", ctx_r5.getFileName());
} }
function AdaptUploaderItemComponent_ng_container_13_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n        ");
    i0.ɵɵelementStart(1, "span", 15);
    i0.ɵɵtext(2, "\n          ");
    i0.ɵɵelementStart(3, "span", 11);
    i0.ɵɵtext(4, "\n          ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(5, "\n        ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(6, "\n      ");
} if (rf & 2) {
    const ctx_r7 = i0.ɵɵnextContext(2);
    const _r0 = i0.ɵɵreference(1);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("adaptTooltip", _r0)("adaptRadarDisableEventSending", true)("content", ctx_r7.getFileName());
} }
function AdaptUploaderItemComponent_ng_container_13_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵtext(2, "\n      ");
    i0.ɵɵtemplate(3, AdaptUploaderItemComponent_ng_container_13_button_3_Template, 8, 6, "button", 12);
    i0.ɵɵtext(4, "\n      ");
    i0.ɵɵtext(5, "\n\n      ");
    i0.ɵɵtext(6, "\n      ");
    i0.ɵɵtemplate(7, AdaptUploaderItemComponent_ng_container_13_ng_template_7_Template, 7, 3, "ng-template", null, 13, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵtext(9, "\n      ");
    i0.ɵɵtext(10, "\n    ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const _r6 = i0.ɵɵreference(8);
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", ctx_r3.isFileUploaded && ctx_r3.enableCustomDownload && !ctx_r3.disabled)("ngIfElse", _r6);
} }
const _c0 = function (a0) { return { "adapt-uploader-item-status-bar_uploaded": a0 }; };
function AdaptUploaderItemComponent_div_16_div_3_div_3_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n            ");
    i0.ɵɵelementStart(2, "div", 26);
    i0.ɵɵtext(3, "\n                ");
    i0.ɵɵelementStart(4, "span", 27);
    i0.ɵɵtext(5, "\n                ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(6, "\n            ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(7, "\n            ");
    i0.ɵɵelementStart(8, "span");
    i0.ɵɵtext(9);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(10, "\n          ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r15 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(4);
    i0.ɵɵstyleProp("width", ctx_r15.file.uploaded + "%");
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(4, _c0, ctx_r15.file.uploaded === 100));
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate(ctx_r15.file.uploaded + "%");
} }
function AdaptUploaderItemComponent_div_16_div_3_div_3_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n            ");
    i0.ɵɵelementStart(2, "div", 28);
    i0.ɵɵtext(3, "\n              ");
    i0.ɵɵelementStart(4, "div", 29);
    i0.ɵɵtext(5, "\n                ");
    i0.ɵɵelement(6, "div", 30);
    i0.ɵɵtext(7, "\n                ");
    i0.ɵɵelement(8, "div", 31);
    i0.ɵɵtext(9, "\n                ");
    i0.ɵɵelement(10, "div", 32);
    i0.ɵɵtext(11, "\n              ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(12, "\n            ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(13, "\n          ");
    i0.ɵɵelementContainerEnd();
} }
function AdaptUploaderItemComponent_div_16_div_3_div_3_button_12_Template(rf, ctx) { if (rf & 1) {
    const _r19 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 33);
    i0.ɵɵlistener("click", function AdaptUploaderItemComponent_div_16_div_3_div_3_button_12_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r19); const ctx_r18 = i0.ɵɵnextContext(4); return ctx_r18.cancelItemUploading(); });
    i0.ɵɵtext(1, "\n        ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r17 = i0.ɵɵnextContext(4);
    i0.ɵɵproperty("disabled", ctx_r17.disabled)("placement", "auto")("adaptRadarDisableEventSending", true)("adaptTooltip", ctx_r17.texts.btnCancelUploading);
    i0.ɵɵattribute("data-testid", ctx_r17.testID + "_cancel-upload")("aria-label", ctx_r17.texts.btnCancelUploading + " " + ctx_r17.file.data.name);
} }
function AdaptUploaderItemComponent_div_16_div_3_div_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 23);
    i0.ɵɵtext(1, "\n        ");
    i0.ɵɵelementStart(2, "div", 24);
    i0.ɵɵtext(3, "\n          ");
    i0.ɵɵelementStart(4, "span");
    i0.ɵɵtext(5);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(6, "\n\n          ");
    i0.ɵɵtemplate(7, AdaptUploaderItemComponent_div_16_div_3_div_3_ng_container_7_Template, 11, 6, "ng-container", 5);
    i0.ɵɵtext(8, "\n\n          ");
    i0.ɵɵtemplate(9, AdaptUploaderItemComponent_div_16_div_3_div_3_ng_container_9_Template, 14, 0, "ng-container", 5);
    i0.ɵɵtext(10, "\n        ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(11, "\n\n        ");
    i0.ɵɵtemplate(12, AdaptUploaderItemComponent_div_16_div_3_div_3_button_12_Template, 2, 6, "button", 25);
    i0.ɵɵtext(13, "\n      ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r13 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("@fadeInOut", undefined);
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate(ctx_r13.texts.fileStatus.uploading);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", !ctx_r13.indeterminateFileLoader);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r13.indeterminateFileLoader);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", ctx_r13.file.uploaded !== 100);
} }
function AdaptUploaderItemComponent_div_16_div_3_div_7_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n          ");
    i0.ɵɵelementStart(1, "div", 36);
    i0.ɵɵtext(2, "\n            ");
    i0.ɵɵelement(3, "span", 37);
    i0.ɵɵtext(4, "\n            ");
    i0.ɵɵelementStart(5, "span", 38);
    i0.ɵɵtext(6);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(7, "\n          ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(8, "\n        ");
} if (rf & 2) {
    const ctx_r20 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(6);
    i0.ɵɵtextInterpolate(ctx_r20.texts.fileStatus.uploaded);
} }
function AdaptUploaderItemComponent_div_16_div_3_div_7_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n          ");
    i0.ɵɵelementStart(1, "div", 39);
    i0.ɵɵtext(2, "\n            ");
    i0.ɵɵelement(3, "span", 40);
    i0.ɵɵtext(4, "\n            ");
    i0.ɵɵelementStart(5, "span", 41);
    i0.ɵɵtext(6);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(7, "\n          ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(8, "\n        ");
} if (rf & 2) {
    const ctx_r21 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(6);
    i0.ɵɵtextInterpolate(ctx_r21.texts.fileStatus.canceled);
} }
function AdaptUploaderItemComponent_div_16_div_3_div_7_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 34);
    i0.ɵɵtext(1, "\n\n        ");
    i0.ɵɵtemplate(2, AdaptUploaderItemComponent_div_16_div_3_div_7_ng_template_2_Template, 9, 1, "ng-template", 35);
    i0.ɵɵtext(3, "\n\n        ");
    i0.ɵɵtemplate(4, AdaptUploaderItemComponent_div_16_div_3_div_7_ng_template_4_Template, 9, 1, "ng-template", 35);
    i0.ɵɵtext(5, "\n      ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r14 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("@fadeInOut", undefined);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r14.file.uploaded === 100 && !ctx_r14.file.canceled);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r14.file.canceled);
} }
function AdaptUploaderItemComponent_div_16_div_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 20);
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵtext(2, "\n      ");
    i0.ɵɵtemplate(3, AdaptUploaderItemComponent_div_16_div_3_div_3_Template, 14, 5, "div", 21);
    i0.ɵɵtext(4, "\n      ");
    i0.ɵɵtext(5, "\n\n      ");
    i0.ɵɵtext(6, "\n      ");
    i0.ɵɵtemplate(7, AdaptUploaderItemComponent_div_16_div_3_div_7_Template, 6, 3, "div", 22);
    i0.ɵɵtext(8, "\n    ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r10 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", ctx_r10.file.inUploading);
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngIf", !ctx_r10.file.inUploading && !ctx_r10.file.inDeleting && !ctx_r10.file.deleted);
} }
function AdaptUploaderItemComponent_div_16_div_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 42);
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵelementStart(2, "div", 43);
    i0.ɵɵtext(3, "\n        ");
    i0.ɵɵelement(4, "span", 44);
    i0.ɵɵtext(5, "\n        ");
    i0.ɵɵelementStart(6, "span", 41);
    i0.ɵɵtext(7);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(8, "\n      ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(9, "\n    ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r11 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("@blockGrow", undefined);
    i0.ɵɵadvance(7);
    i0.ɵɵtextInterpolate(ctx_r11.file.errorText);
} }
function AdaptUploaderItemComponent_div_16_div_9_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r26 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 49);
    i0.ɵɵlistener("click", function AdaptUploaderItemComponent_div_16_div_9_button_3_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r26); const ctx_r25 = i0.ɵɵnextContext(3); return ctx_r25.deleteItem(); });
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r22 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("disabled", ctx_r22.disabled)("placement", "auto")("adaptRadarDisableEventSending", true)("adaptTooltip", ctx_r22.texts.btnDeleteFile);
    i0.ɵɵattribute("data-testid", ctx_r22.testID + "_delete")("aria-label", ctx_r22.texts.btnDeleteFile + " " + ctx_r22.file.data.name);
} }
function AdaptUploaderItemComponent_div_16_div_9_button_5_Template(rf, ctx) { if (rf & 1) {
    const _r28 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 50);
    i0.ɵɵlistener("click", function AdaptUploaderItemComponent_div_16_div_9_button_5_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r28); const ctx_r27 = i0.ɵɵnextContext(3); return ctx_r27.removeItem(); });
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r23 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("disabled", ctx_r23.disabled)("placement", "auto")("adaptRadarDisableEventSending", true)("adaptTooltip", ctx_r23.texts.btnRemoveFile);
    i0.ɵɵattribute("data-testid", ctx_r23.testID + "_remove")("aria-label", ctx_r23.texts.btnRemoveFile + " " + ctx_r23.file.data.name);
} }
function AdaptUploaderItemComponent_div_16_div_9_button_7_Template(rf, ctx) { if (rf & 1) {
    const _r30 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 51);
    i0.ɵɵlistener("click", function AdaptUploaderItemComponent_div_16_div_9_button_7_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r30); const ctx_r29 = i0.ɵɵnextContext(3); return ctx_r29.removeItem(); });
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r24 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("disabled", ctx_r24.disabled)("placement", "auto")("adaptRadarDisableEventSending", true)("adaptTooltip", ctx_r24.texts.btnRemoveCanceled + " " + ctx_r24.file.data.name);
    i0.ɵɵattribute("data-testid", ctx_r24.testID + "_remove")("aria-label", ctx_r24.texts.btnRemoveCanceled + " " + ctx_r24.file.data.name);
} }
function AdaptUploaderItemComponent_div_16_div_9_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 45);
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵtext(2, "\n      ");
    i0.ɵɵtemplate(3, AdaptUploaderItemComponent_div_16_div_9_button_3_Template, 2, 6, "button", 46);
    i0.ɵɵtext(4, "\n\n      ");
    i0.ɵɵtemplate(5, AdaptUploaderItemComponent_div_16_div_9_button_5_Template, 2, 6, "button", 47);
    i0.ɵɵtext(6, "\n\n      ");
    i0.ɵɵtemplate(7, AdaptUploaderItemComponent_div_16_div_9_button_7_Template, 2, 6, "button", 48);
    i0.ɵɵtext(8, "\n    ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r12 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", ctx_r12.file.uploaded === 100 && ctx_r12.file.allowDeletion && ctx_r12.file.ok);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", (ctx_r12.file.uploaded !== 100 || !ctx_r12.file.ok) && !ctx_r12.file.canceled);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r12.file.canceled);
} }
function AdaptUploaderItemComponent_div_16_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 16);
    i0.ɵɵtext(1, "\n    ");
    i0.ɵɵtext(2, "\n    ");
    i0.ɵɵtemplate(3, AdaptUploaderItemComponent_div_16_div_3_Template, 9, 2, "div", 17);
    i0.ɵɵtext(4, "\n\n\n    ");
    i0.ɵɵtext(5, "\n    ");
    i0.ɵɵtemplate(6, AdaptUploaderItemComponent_div_16_div_6_Template, 10, 2, "div", 18);
    i0.ɵɵtext(7, "\n\n    ");
    i0.ɵɵtext(8, "\n    ");
    i0.ɵɵtemplate(9, AdaptUploaderItemComponent_div_16_div_9_Template, 9, 3, "div", 19);
    i0.ɵɵtext(10, "\n  ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext();
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", !ctx_r4.file.error);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", ctx_r4.file.error && ctx_r4.file.errorText);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", !ctx_r4.file.inUploading);
} }
const _c1 = function (a0) { return { "canceled": a0 }; };
export class AdaptUploaderItemComponent {
    constructor(fileManager, iconService, _sanitizer, _dir) {
        this.fileManager = fileManager;
        this.iconService = iconService;
        this._sanitizer = _sanitizer;
        this._dir = _dir;
        this.collapseBlock = false;
        this.reusable = true;
        this.file = {};
        this.componentAnimation = true;
        this.beforeFileRemove = new EventEmitter();
        this.afterFileRemove = new EventEmitter();
        this.fileDeleted = new EventEmitter();
        this.isRtl = false;
        this.loader = {
            busy: null,
            backdrop: true,
            delay: 0,
            minDuration: 1000,
            message: '',
            loaderType: 'section'
        };
        this.isRtl = this._dir.value === 'rtl';
    }
    get isFileUploaded() {
        return this.file.uploaded === FILE_IS_UPLOADED_PERCENTAGE && !this.file.canceled && !this.file.error;
    }
    ngOnInit() {
        const type = this.file.data.name.split('.').reverse()[0];
        this.icon = this._sanitizer.bypassSecurityTrustHtml(this.iconService.getIcon(type.toLowerCase()));
    }
    /**
     * Removes file from uploading list
     */
    removeItem() {
        this.beforeFileRemove.emit(this.file);
        this.fileManager.removeFile(this.file.fileId);
        this.afterFileRemove.emit(this.file);
    }
    /**
     * Removes file from the server
     */
    deleteItem() {
        const uploadInputs = {
            chunkSize: parseFloat(this.chunkSize),
            uploadUrl: this.url,
            customErrors: this.customErrors
        };
        const promise = this.fileManager.deleteFileFromServer(this.file, this.deleteUrl, uploadInputs);
        const loaderCopy = Object.assign({}, this.loader);
        loaderCopy.busy = promise;
        this.loader = loaderCopy;
        promise.then((file) => {
            this.fileDeleted.emit(file);
        });
    }
    getFileName(isFileDownload = false) {
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-ignore TODO fix types
        const fileName = this.file.data.fullPath || this.file.data.webkitRelativePath || this.file.data.name;
        return isFileDownload ? `${this.texts.btnDownloadFile} ${fileName}` : fileName;
    }
    cancelItemUploading() {
        const uploadInputs = {
            chunkSize: parseFloat(this.chunkSize),
            uploadUrl: this.url,
            customErrors: this.customErrors
        };
        this.fileManager.abortUploading(uploadInputs, this.file);
    }
}
AdaptUploaderItemComponent.ɵfac = function AdaptUploaderItemComponent_Factory(t) { return new (t || AdaptUploaderItemComponent)(i0.ɵɵdirectiveInject(i1.FileManager), i0.ɵɵdirectiveInject(i2.IconManager), i0.ɵɵdirectiveInject(i3.DomSanitizer), i0.ɵɵdirectiveInject(i4.Directionality)); };
AdaptUploaderItemComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptUploaderItemComponent, selectors: [["adapt-uploader-item"]], hostVars: 7, hostBindings: function AdaptUploaderItemComponent_HostBindings(rf, ctx) { if (rf & 2) {
        i0.ɵɵsyntheticHostProperty("@uploaderItemAnimation", ctx.componentAnimation);
        i0.ɵɵclassProp("adapt-uploader-item", true)("disabled", ctx.disabled)("readonly", ctx.readonly);
    } }, inputs: { collapseBlock: "collapseBlock", reusable: "reusable", disabled: "disabled", readonly: "readonly", id: "id", file: "file", texts: "texts", componentAnimation: "componentAnimation", indeterminateFileLoader: "indeterminateFileLoader", url: "url", deleteUrl: "deleteUrl", chunkSize: "chunkSize", customErrors: "customErrors", testID: "testID", enableCustomDownload: "enableCustomDownload", customDownload: "customDownload" }, outputs: { beforeFileRemove: "beforeFileRemove", afterFileRemove: "afterFileRemove", fileDeleted: "fileDeleted" }, decls: 19, vars: 9, consts: [["uploderItemTooltipTmpl", ""], [1, "adapt-uploader-item__wrp", 3, "ngBusy", "ngClass"], [1, "adapt-uploader-file", "p-start-3"], [1, "adapt-uploader-file-image", 3, "innerHTML"], ["target", "_blank", "class", "adapt-uploader-file-name m-end-1 ltr", 3, "download", "href", 4, "ngIf"], [4, "ngIf"], ["class", "adapt-uploader-status", "role", "status", 4, "ngIf"], [1, "ltr"], ["adaptTruncateFileName", "", 1, "adapt-uploader-file-name__truncate", 3, "content"], ["target", "_blank", 1, "adapt-uploader-file-name", "m-end-1", "ltr", 3, "download", "href"], [1, "sr-only"], ["placement", "auto", "adaptTruncateFileName", "", 1, "adapt-uploader-file-name__truncate", "m-end-2", 3, "adaptTooltip", "adaptRadarDisableEventSending", "content"], ["class", "btn btn-link p-0 m-end-1 adapt-uploader-file-name", "type", "button", 3, "click", 4, "ngIf", "ngIfElse"], ["simpleFilenameTmpl", ""], ["type", "button", 1, "btn", "btn-link", "p-0", "m-end-1", "adapt-uploader-file-name", 3, "click"], [1, "adapt-uploader-file-name", "m-end-1", "ltr"], ["role", "status", 1, "adapt-uploader-status"], ["class", "adapt-uploader-status__wrp", 4, "ngIf"], ["class", "adapt-uploader-file-error", 4, "ngIf"], ["class", "adapt-uploader-item__controls", 4, "ngIf"], [1, "adapt-uploader-status__wrp"], ["class", "adapt-uploader-file-uploading", 4, "ngIf"], ["class", "adapt-uploader-file-uploaded", 4, "ngIf"], [1, "adapt-uploader-file-uploading"], [1, "adapt-uploading-progress"], ["type", "button", "class", "adapt-uploader-item-cancel d-icon-cross_adapt btn m-start-3", 3, "disabled", "placement", "adaptRadarDisableEventSending", "adaptTooltip", "click", 4, "ngIf"], [1, "adapt-uploader-item-status-bar-wrapper"], [1, "adapt-uploader-item-status-bar", 3, "ngClass"], [1, "adapt-uploader-item-indeterminate-loader-wrapper"], [1, "adapt-alert-bar"], [1, "progress-bar-intermediate", "lay1"], [1, "progress-bar-intermediate", "lay2"], [1, "progress-bar-intermediate", "lay3"], ["type", "button", 1, "adapt-uploader-item-cancel", "d-icon-cross_adapt", "btn", "m-start-3", 3, "disabled", "placement", "adaptRadarDisableEventSending", "adaptTooltip", "click"], [1, "adapt-uploader-file-uploaded"], [3, "ngIf"], [1, "upload-status", "text-success", "m-end-1"], [1, "d-icon-check_circle", "success-icon"], [1, "success-text"], [1, "upload-status", "text-info", "m-end-1"], [1, "d-icon-info_circle", "success-icon"], [1, "error-text"], [1, "adapt-uploader-file-error"], [1, "upload-status", "text-danger", "m-end-1"], [1, "d-icon-exclamation_triangle", "error-icon"], [1, "adapt-uploader-item__controls"], ["type", "button", "class", "adapt-uploader-item-delete d-icon-trash_adapt btn", 3, "disabled", "placement", "adaptRadarDisableEventSending", "adaptTooltip", "click", 4, "ngIf"], ["type", "button", "class", "adapt-uploader-item-remove d-icon-cross_adapt btn m-start-2", 3, "disabled", "placement", "adaptRadarDisableEventSending", "adaptTooltip", "click", 4, "ngIf"], ["type", "button", "class", "adapt-uploader-item-remove d-icon-cross_adapt btn", 3, "disabled", "placement", "adaptRadarDisableEventSending", "adaptTooltip", "click", 4, "ngIf"], ["type", "button", 1, "adapt-uploader-item-delete", "d-icon-trash_adapt", "btn", 3, "disabled", "placement", "adaptRadarDisableEventSending", "adaptTooltip", "click"], ["type", "button", 1, "adapt-uploader-item-remove", "d-icon-cross_adapt", "btn", "m-start-2", 3, "disabled", "placement", "adaptRadarDisableEventSending", "adaptTooltip", "click"], ["type", "button", 1, "adapt-uploader-item-remove", "d-icon-cross_adapt", "btn", 3, "disabled", "placement", "adaptRadarDisableEventSending", "adaptTooltip", "click"]], template: function AdaptUploaderItemComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, AdaptUploaderItemComponent_ng_template_0_Template, 7, 1, "ng-template", null, 0, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtext(2, "\n\n");
        i0.ɵɵelementStart(3, "div", 1);
        i0.ɵɵtext(4, "\n  ");
        i0.ɵɵelementStart(5, "div", 2);
        i0.ɵɵtext(6, "\n    ");
        i0.ɵɵelement(7, "div", 3);
        i0.ɵɵtext(8, "\n    ");
        i0.ɵɵtext(9, "\n    ");
        i0.ɵɵtemplate(10, AdaptUploaderItemComponent_a_10_Template, 8, 8, "a", 4);
        i0.ɵɵtext(11, "\n    ");
        i0.ɵɵtext(12, "\n\n    ");
        i0.ɵɵtemplate(13, AdaptUploaderItemComponent_ng_container_13_Template, 11, 2, "ng-container", 5);
        i0.ɵɵtext(14, "\n  ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(15, "\n\n  ");
        i0.ɵɵtemplate(16, AdaptUploaderItemComponent_div_16_Template, 11, 3, "div", 6);
        i0.ɵɵtext(17, "\n");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(18, "\n");
    } if (rf & 2) {
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("@itemAppearance", ctx.isRtl)("ngBusy", ctx.loader)("ngClass", i0.ɵɵpureFunction1(7, _c1, ctx.file.canceled));
        i0.ɵɵadvance(4);
        i0.ɵɵproperty("innerHTML", ctx.icon, i0.ɵɵsanitizeHtml);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx.file.downloadURL);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", !ctx.file.downloadURL);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", !ctx.readonly);
    } }, directives: [i5.AdaptBusyDirective, i6.NgClass, i6.NgIf, i7.AdaptTruncateFileNameDirective, i8.AdaptTooltipDirective], encapsulation: 2, data: { animation: [
            trigger('uploaderItemAnimation', [
                transition('true => void', [
                    useAnimation(ANIMATION_NAME.height, {
                        params: {
                            duration: '0.1s',
                            from: '*',
                            to: '0',
                            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionOut
                        }
                    })
                ])
            ]),
            trigger('itemAppearance', [
                transition('void => true', [
                    useAnimation(ANIMATION_NAME.moveIn, {
                        params: {
                            translateX: -5,
                            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionInOut
                        }
                    })
                ]),
                transition('void => false', [
                    useAnimation(ANIMATION_NAME.moveIn, {
                        params: {
                            translateX: 5,
                            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionInOut
                        }
                    })
                ])
            ]),
            trigger('fadeInOut', [
                transition('void => *', [
                    useAnimation(ANIMATION_NAME.opacity)
                ]),
                transition('* => void', [
                    useAnimation(ANIMATION_NAME.opacity, {
                        params: {
                            from: '*',
                            to: '0'
                        }
                    })
                ])
            ]),
            trigger('blockGrow', [
                transition(':enter', [
                    style({
                        height: 0,
                        opacity: 0
                    }),
                    animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionInOut),
                ])
            ])
        ] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptUploaderItemComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-uploader-item',
                templateUrl: './uploader-item.component.html',
                animations: [
                    trigger('uploaderItemAnimation', [
                        transition('true => void', [
                            useAnimation(ANIMATION_NAME.height, {
                                params: {
                                    duration: '0.1s',
                                    from: '*',
                                    to: '0',
                                    timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionOut
                                }
                            })
                        ])
                    ]),
                    trigger('itemAppearance', [
                        transition('void => true', [
                            useAnimation(ANIMATION_NAME.moveIn, {
                                params: {
                                    translateX: -5,
                                    timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionInOut
                                }
                            })
                        ]),
                        transition('void => false', [
                            useAnimation(ANIMATION_NAME.moveIn, {
                                params: {
                                    translateX: 5,
                                    timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionInOut
                                }
                            })
                        ])
                    ]),
                    trigger('fadeInOut', [
                        transition('void => *', [
                            useAnimation(ANIMATION_NAME.opacity)
                        ]),
                        transition('* => void', [
                            useAnimation(ANIMATION_NAME.opacity, {
                                params: {
                                    from: '*',
                                    to: '0'
                                }
                            })
                        ])
                    ]),
                    trigger('blockGrow', [
                        transition(':enter', [
                            style({
                                height: 0,
                                opacity: 0
                            }),
                            animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionInOut),
                        ])
                    ])
                ],
                // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                host: {
                    '[class.adapt-uploader-item]': 'true',
                    '[class.disabled]': 'disabled',
                    '[class.readonly]': 'readonly',
                    '[@uploaderItemAnimation]': 'componentAnimation'
                },
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: i1.FileManager }, { type: i2.IconManager }, { type: i3.DomSanitizer }, { type: i4.Directionality }]; }, { collapseBlock: [{
            type: Input
        }], reusable: [{
            type: Input
        }], disabled: [{
            type: Input
        }], readonly: [{
            type: Input
        }], id: [{
            type: Input
        }], file: [{
            type: Input
        }], texts: [{
            type: Input
        }], componentAnimation: [{
            type: Input
        }], indeterminateFileLoader: [{
            type: Input
        }], url: [{
            type: Input
        }], deleteUrl: [{
            type: Input
        }], chunkSize: [{
            type: Input
        }], customErrors: [{
            type: Input
        }], testID: [{
            type: Input
        }], enableCustomDownload: [{
            type: Input
        }], customDownload: [{
            type: Input
        }], beforeFileRemove: [{
            type: Output
        }], afterFileRemove: [{
            type: Output
        }], fileDeleted: [{
            type: Output
        }] }); })();
//# sourceMappingURL=uploader-item.component.js.map