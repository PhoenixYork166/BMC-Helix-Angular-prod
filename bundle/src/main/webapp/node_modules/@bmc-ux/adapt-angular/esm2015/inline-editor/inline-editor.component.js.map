{"version":3,"file":"inline-editor.component.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/inline-editor/inline-editor.component.ts","../../../../../libs/adapt-angular/src/inline-editor/inline-editor.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {transition, trigger, useAnimation} from '@angular/animations';\nimport {ANIMATION_NAME} from '../common/animation';\nimport {combineLatest, Observable, Subject, Subscription} from 'rxjs';\nimport {distinctUntilChanged, map} from 'rxjs/operators';\nimport {AdaptCustomAction, AdaptCustomActionsAlignEnum} from '../custom-actions/adapt-custom-actions.model';\nimport {AdaptTranslateService} from '../common/i18n/index';\nimport {formatString} from '../common/utilities';\nimport {KeyValueObject} from '../common/common.models';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularGenericDirective,\n  AdaptRadarAngularService\n} from '../common/radar/adapt-radar';\nimport {SafeCdr} from '../common/safe-cdr';\n\nexport interface InlineEditorTextsModel {\n  edit?: string;\n  add?: string;\n  save?: string;\n  cancel?: string;\n}\n\nexport interface InlineEditorError {\n  name?: string;\n  message: string;\n}\n\n@Component({\n  selector: 'adapt-inline-editor',\n  templateUrl: './inline-editor.html',\n  animations: [\n    trigger('editorModeChangeAnimation', [\n      transition('void => *', [\n        useAnimation(ANIMATION_NAME.opacity)\n      ])\n    ]),\n    trigger('validationFeedbackAnimation', [\n      transition(':enter', [\n        useAnimation(ANIMATION_NAME.fadeIn)\n      ]),\n      transition(':leave', [\n        useAnimation(ANIMATION_NAME.fadeOut)\n      ])\n    ]),\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AdaptInlineEditorComponent),\n      multi: true\n    }\n  ]\n})\nexport class AdaptInlineEditorComponent extends AdaptRadarAngularGenericDirective implements ControlValueAccessor, OnInit, OnDestroy {\n  // Template fields\n  hasErrors: boolean = false;\n  oldControlModel: string = '';\n  editMode: boolean = false;\n  defaultTexts: {\n    edit?: string;\n    add?: string;\n    save?: string;\n    cancel?: string;\n    minError?: string;\n    maxError?: string;\n  } = {};\n  rowsCount: number = 0;\n  textFieldInput$: Subject<string> = new Subject<string>();\n  defaultErrors$: Observable<InlineEditorError[]>;\n  customErrors$: Observable<InlineEditorError[]>;\n  customActionsAlignedTo: AdaptCustomActionsAlignEnum = AdaptCustomActionsAlignEnum.Right;\n\n  /**\n   * The number of rows in the textarea(editable mode). If didn't set, will be calculate automatically\n   * @docs-default\n   */\n  @Input() rows: number;\n\n  /**\n   * The min length for the input field\n   * @docs-default\n   */\n  @Input() minLength: number;\n\n  /**\n   * The max length for the input field\n   * @docs-default\n   */\n  @Input() maxLength: number;\n\n  /**\n   * The label of the component\n   * @docs-default\n   */\n  @Input() label: string;\n\n  /**\n   * Input control placeholder\n   * @docs-default\n   */\n  @Input() placeholder: string;\n\n  /**\n   * Custom UI Controls labels\n   * @docs-default\n   */\n  @Input()\n  set controlLabels(value: InlineEditorTextsModel) {\n    this._controlLabels = {...this.defaultTexts, ...value};\n  }\n\n  get controlLabels(): InlineEditorTextsModel {\n    return this._controlLabels;\n  }\n\n  /**\n   * Select text by entering edit mode\n   * @docs-default\n   */\n  @Input() selectTextOnEdit: boolean;\n\n  /**\n   * Start edit on text click\n   * @docs-default\n   */\n  @Input() editOnClick: boolean;\n\n  /**\n   * Save text on control's blur event\n   * @docs-default\n   */\n  @Input() saveOnBlur: boolean;\n\n  /**\n   * Show edit button only on mouseover\n   * @docs-default\n   */\n  @Input() showEditControlOnHover: boolean;\n\n  /**\n   * Hide edit button in view mode\n   * @docs-default\n   */\n  @Input() hideViewControls: boolean;\n\n  /**\n   * Hide save and cancel buttons in edit mode\n   * @docs-default\n   */\n  @Input() hideEditControls: boolean;\n\n  /**\n   * Add class to button, e.g. 'btn-toolbar' to show it inside toolbar\n   * @since v10.6.0\n   * @docs-default\n   */\n  @Input() buttonClass: string;\n\n  /**\n   * minLength error message\n   * @docs-default\n   */\n  @Input()\n  set minLengthErrorText(obj: InlineEditorError) {\n    if (obj) {\n      this._minLengthErrorText = {\n        name: obj.name || '',\n        message: obj.message ? formatString(obj.message, this.minLength) : ''\n      };\n    }\n  }\n\n  get minLengthErrorText(): InlineEditorError {\n    return this._minLengthErrorText;\n  }\n\n  /**\n   * maxLength error message\n   * @docs-default\n   */\n  @Input() maxLengthErrorText: InlineEditorError;\n\n  /**\n   * Set of error callbacks. Each of them will be invoke on text input\n   * @docs-default\n   */\n  @Input() customErrors: ((str: string) => InlineEditorError)[] = [];\n\n  /**\n   * An event fired when on save\n   */\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any, @angular-eslint/no-output-on-prefix */\n  @Output() readonly onSave: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * An event fired when on cancel\n   */\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any, @angular-eslint/no-output-on-prefix */\n  @Output() readonly onCancel: EventEmitter<any> = new EventEmitter();\n\n  // ElRefs\n  @ViewChild('viewBlock') viewBlock: ElementRef<HTMLSpanElement>;\n  @ViewChild('viewBlockRow') viewBlockRow: ElementRef<HTMLSpanElement>;\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  get value(): any {\n    return this._model;\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  set value(v: any) {\n    this._model = v;\n    this.propagateChange(this._model);\n  }\n\n  get customActions(): AdaptCustomAction[] {\n    return [\n      {\n        name: this.controlLabels.cancel,\n        visible: true,\n        onClick: this.cancelEdit.bind(this)\n      },\n      {\n        name: this.controlLabels.save,\n        visible: !this.hasErrors,\n        onClick: this.saveEdit.bind(this)\n      }\n    ];\n  }\n\n  // Private fields\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _model: any;\n  private _errorsSubscription: Subscription;\n  private _controlLabels: InlineEditorTextsModel = {};\n  private _minLengthErrorText: InlineEditorError;\n\n  constructor(private ts: AdaptTranslateService,\n              private _changeDetectorRef: ChangeDetectorRef,\n              _adaptRadarService: AdaptRadarAngularService,\n              _elem: ElementRef<HTMLElement>) {\n    super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptInlineEditor);\n\n    this.setDefaultTexts(ts.getCurrentLanguage());\n  }\n\n  ngOnInit(): void {\n    this.controlLabels = {...this.defaultTexts, ...this.controlLabels};\n\n    if (!this.minLengthErrorText) {\n      this.minLengthErrorText = {\n        name: '',\n        message: formatString(this.defaultTexts.minError, this.minLength)\n      };\n    }\n\n    if (!this.maxLengthErrorText) {\n      this.maxLengthErrorText = {name: '', message: this.defaultTexts.maxError};\n    }\n\n    this._initErrors();\n  }\n\n  setDefaultTexts(translation: KeyValueObject): void {\n    this.defaultTexts.edit = translation['adapt.common.edit'];\n    this.defaultTexts.add = translation['adapt.common.add'];\n    this.defaultTexts.save = translation['adapt.common.save'];\n    this.defaultTexts.cancel = translation['adapt.common.cancel'];\n    this.defaultTexts.minError = translation['adapt.inlineEditor.error.min'];\n    this.defaultTexts.maxError = translation['adapt.inlineEditor.error.max'];\n  }\n\n  ngOnDestroy(): void {\n    this._errorsSubscription.unsubscribe();\n  }\n\n  enterEditMode(): void {\n    if (this.rows) {\n      this.rowsCount = this.rows > 1 ? this.rows : 0;\n    } else {\n      this._autoCalculateRows();\n    }\n\n    this.editMode = true;\n    this.oldControlModel = this.value;\n  }\n\n  /**\n   * Save value and exit edit mode\n   */\n  saveEdit(): void {\n    this.editMode = false;\n    this.onSave.emit(this.value);\n  }\n\n  /**\n   * Exit edit mode without saving\n   */\n  cancelEdit(): void {\n    this.editMode = false;\n\n    // setting old value\n    this.value = this.oldControlModel;\n    this.onCancel.emit(this.value);\n  }\n\n  viewTextClick(): void {\n    if (this.editOnClick) {\n      this.enterEditMode();\n    }\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  inputControlFocus(event: any): void {\n    if (this.selectTextOnEdit) {\n      event.target.select();\n    }\n  }\n\n  inputControlBlur(): void {\n    if (this.saveOnBlur) {\n      this.saveEdit();\n    }\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  writeValue(v: any): void {\n    if (v) {\n      this._model = v;\n    }\n\n    SafeCdr.detectChanges(this._changeDetectorRef);\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line  */\n  registerOnTouched(fn: any): void {\n  }\n\n  private _autoCalculateRows(): void {\n    const viewBlockHeight = this.viewBlock.nativeElement.getBoundingClientRect().height;\n    const viewBlockRowHeight = this.viewBlockRow.nativeElement.getBoundingClientRect().height;\n\n    this.rowsCount = Math.round(viewBlockHeight / viewBlockRowHeight) || 1;\n  }\n\n  private _initErrors(): void {\n    this.defaultErrors$ = combineLatest([\n      this.textFieldInput$\n        .pipe(\n          map(inputText => this.minLength && ((inputText ? inputText.length : 0) < this.minLength)),\n          distinctUntilChanged(),\n          map(isError => isError ? this.minLengthErrorText : null)\n        ),\n      this.textFieldInput$\n        .pipe(\n          map(inputText => this.maxLength && ((inputText ? inputText.length : 0) > this.maxLength)),\n          distinctUntilChanged(),\n          map(isError => isError ? this.maxLengthErrorText : null)\n        )\n    ]);\n\n    this.customErrors$ = combineLatest(\n      this.customErrors\n        .map(mapCallback =>\n          this.textFieldInput$.pipe(\n            map(mapCallback),\n            distinctUntilChanged((a, b) => {\n                return JSON.stringify(a) === JSON.stringify(b);\n              }\n            ))\n        )\n    );\n\n    this._errorsSubscription = combineLatest<InlineEditorError[][]>\n    (this.customErrors.length ? [this.defaultErrors$, this.customErrors$] :\n      this.defaultErrors$).subscribe(errorsList => {\n      this.hasErrors = errorsList.some(errors => (errors || []).some(err2 => !!err2));\n    });\n  }\n\n  // ### ControlValueAccessor implementation\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line */\n  private propagateChange: (_: any) => void = (_: any): void => {\n  };\n}\n","<label class=\"form-control-label\" *ngIf=\"label\">{{label}}</label>\n<div class=\"a-editor\" [class.a-editor_controls-on-hover]=\"showEditControlOnHover\">\n  <div class=\"a-editor__edit-mode-block\"\n       *ngIf=\"editMode\"\n       [@editorModeChangeAnimation]>\n    <div class=\"form-group\" [class.has-danger]=\"hasErrors\">\n      <adapt-rx-textfield class=\"a-editor-edit-input\"\n                          [adaptRadarDisableEventSending]=\"true\"\n                          [(ngModel)]=\"value\"\n                          [placeholder]=\"placeholder\"\n                          [autofocus]=\"true\"\n                          (onFocus)=\"inputControlFocus($event)\"\n                          (onBlur)=\"inputControlBlur()\"\n                          (ngModelChange)=\"textFieldInput$.next($event)\"\n                          (keyup.esc)=\"cancelEdit()\"\n                          (keydown.meta.enter)=\"saveEdit()\"\n                          (keydown.control.enter)=\"saveEdit()\"></adapt-rx-textfield>\n    </div>\n\n    <div class=\"a-editor-feedback has-danger\">\n      <ng-container *ngFor=\"let error of defaultErrors$ | async\">\n        <div class=\"form-control-feedback\" *ngIf=\"error\" [@validationFeedbackAnimation]>\n          <strong *ngIf=\"error.name\">{{error.name}} </strong>\n          {{error.message}}\n        </div>\n      </ng-container>\n\n      <ng-container *ngFor=\"let error of customErrors$ | async\">\n        <div class=\"form-control-feedback\" *ngIf=\"error\" [@validationFeedbackAnimation]>\n          <strong *ngIf=\"error.name\">{{error.name}} </strong>\n          {{error.message}}\n        </div>\n      </ng-container>\n    </div>\n\n    <div class=\"a-editor-edit-controls\" *ngIf=\"!hideEditControls\">\n      <div class=\"a-editor-edit-controls__left text-secondary\" *ngIf=\"maxLength\" aria-hidden=\"true\">\n        {{value ? value.length : 0}} / {{maxLength}}\n      </div>\n\n      <div class=\"a-editor-edit-controls__right\">\n        <adapt-custom-actions [alignedTo]=\"customActionsAlignedTo\"\n                              [actions]=\"customActions\"\n                              [adaptRadarDisableEventSending]=\"true\">\n        </adapt-custom-actions>\n      </div>\n    </div>\n  </div>\n  <div class=\"a-editor__view-mode-block\"\n       *ngIf=\"!editMode\"\n       [attr.tabindex]=\"editOnClick ? 0 : -1\"\n       (click)=\"viewTextClick()\"\n       (focus)=\"viewTextClick()\"\n       [class.edit-on-click]=\"editOnClick\"\n       [@editorModeChangeAnimation]>\n    <span #viewBlock class=\"a-editor-text\">{{value}}</span>\n    <span #viewBlockRow>&nbsp;</span>\n    <button type=\"button\"\n            class=\"a-editor-btn a-editor-btn_start-edit btn btn-link {{buttonClass}}\"\n            *ngIf=\"!hideViewControls\"\n            (click)=\"enterEditMode()\">\n      <span class=\"d-icon-pencil_adapt\"></span>\n      {{value && value.length ? controlLabels.edit : controlLabels.add}}\n    </button>\n  </div>\n</div>\n"]}