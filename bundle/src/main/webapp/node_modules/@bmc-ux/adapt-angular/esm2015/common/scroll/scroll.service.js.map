{"version":3,"file":"scroll.service.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/common/scroll/scroll.service.ts"],"names":[],"mappings":"AAAA,qDAAqD;AACrD,mFAAmF;AACnF,OAAO,EAAC,UAAU,EAAC,MAAM,eAAe,CAAC;AACzC,OAAO,EAAC,UAAU,EAAC,MAAM,WAAW,CAAC;;AAErC,MAAM,CAAC,MAAM,eAAe,GAAW,EAAE,CAAC;AAK1C,MAAM,OAAO,yBAAyB;IAEpC,iBAAiB,CAAC,SAAsB;QACtC,IAAI,CAAC,SAAS,EAAE;YACd,OAAO,MAAM,CAAC;SACf;QAED,OAAO,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;IAC7D,CAAC;IAED,cAAc,CAAC,OAAoB;QACjC,OAAO,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC;IAClD,CAAC;IAED;;;;;;;OAOG;IAEH,eAAe,CAAC,SAAiB,EAAE,WAAmB,GAAG,EAAE,SAAiB,CAAC,EAAE,SAAuB;QACpG,MAAM,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QAEtD,IAAI,CAAC,UAAU,EAAE;YACf,UAAU,CAAC,iDAAiD,SAAS,EAAE,CAAC,CAAC;YAEzE,OAAO;SACR;QAED,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;QAEzD,MAAM,EAAE,GAAG,cAAc,KAAK,MAAM;YAClC,CAAC,CAAC,MAAM,CAAC,WAAW,GAAG,UAAU,CAAC,qBAAqB,EAAE,CAAC,GAAG;YAC7D,CAAC,CAAC,UAAU,CAAC,qBAAqB,EAAE,CAAC,GAAG,CAAC;QAE3C,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;IACjE,CAAC;IAED;;;;;;;OAOG;IACK,QAAQ,CAAC,cAAoC,EAAE,EAAU,EAAE,QAAgB,EAAE,MAAc,EAAE,SAAuB;QAC1H,4CAA4C;QAC5C,MAAM,QAAQ,GAAG,cAAc,KAAK,MAAM,CAAC;QAC3C,MAAM,eAAe,GAAG,MAAM,CAAC,WAAW,IAAI,QAAQ,CAAC,eAAe,CAAC,SAAS,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;QACjH,kCAAkC;QAClC,4DAA4D;QAC5D,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,aAAa,CAAC;QAClB,MAAM,aAAa,GAAG,GAAS,EAAE;YAC/B,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAEtE,IAAI,SAAS,IAAI,CAAC,QAAQ,EAAE;gBAC1B,SAAS,CAAC,SAAS,GAAG,GAAG,CAAC;aAC3B;iBAAM;gBACL,yEAAyE;gBACzE,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;aAC3B;YAED,IAAI,IAAI,GAAG,QAAQ,EAAE;gBACnB,IAAI,IAAI,eAAe,CAAC;gBACxB,UAAU,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;aAC5C;QACH,CAAC,CAAC;QAEF,IAAI,CAAC,SAAS,EAAE;YACd,aAAa,GAAG,eAAe,CAAC;SACjC;aAAM;YACL,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC;SAClE;QAED,2DAA2D;QAC3D,IAAI,SAAS,IAAI,CAAC,QAAQ,EAAE;YAC1B,EAAE,GAAG,EAAE,GAAG,SAAS,CAAC,qBAAqB,EAAE,CAAC,GAAG,GAAG,aAAa,CAAC;SACjE;QAED,MAAM,QAAQ,GAAG,EAAE,GAAG,aAAa,GAAG,MAAM,CAAC;QAC7C,IAAI,IAAI,GAAG,CAAC,CAAC;QAEb,aAAa,EAAE,CAAC;IAClB,CAAC;IAED,uEAAuE;IAC/D,WAAW,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;QAC5D,gBAAgB;QAChB,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;YACpB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAC1B;QAED,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC5C,CAAC;;kGAlGU,yBAAyB;+EAAzB,yBAAyB,WAAzB,yBAAyB,mBAFxB,MAAM;uFAEP,yBAAyB;cAHrC,UAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","sourcesContent":["// https://github.com/mansour-ahmed/ng-animate-scroll\n// LICENSE - https://github.com/mansour-ahmed/ng-animate-scroll/blob/master/LICENSE\nimport {Injectable} from '@angular/core';\nimport {adaptError} from '../logger';\n\nexport const INCREMENT_VALUE: number = 20;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdaptAnimateScrollService {\n\n  getListenerTarget(container: HTMLElement): HTMLElement | Window {\n    if (!container) {\n      return window;\n    }\n\n    return this.isDocumentBody(container) ? window : container;\n  }\n\n  isDocumentBody(element: HTMLElement): boolean {\n    return element.tagName.toUpperCase() === 'BODY';\n  }\n\n  /**\n   * @desc scrollToItem Fn scrolls to an items by utilising the animated scroll fn (scrollTo)\n   *       and calculating the height of the header to accurately find the item's position.\n   * @param elementID: element's ID that will be scrolled to.\n   * @param duration: duration in milliseconds, default is 400.\n   * @param offset: offset for scroll.\n   * @param container: the container html native element, window will be used if not set\n   */\n\n  scrollToElement(elementID: string, duration: number = 400, offset: number = 0, container?: HTMLElement): void {\n    const targetElem = document.getElementById(elementID);\n\n    if (!targetElem) {\n      adaptError(`Could not find element with the following ID: ${elementID}`);\n\n      return;\n    }\n\n    const listenerTarget = this.getListenerTarget(container);\n\n    const to = listenerTarget === window\n      ? window.pageYOffset + targetElem.getBoundingClientRect().top\n      : targetElem.getBoundingClientRect().top;\n\n    this.scrollTo(listenerTarget, to, duration, offset, container);\n  }\n\n  /**\n   * @desc scrollTo Fn allows scrolling with animation.\n   * @param listenerTarget: the container (html native element or window) on which scroll events will be listened.\n   * @param to: is the location to scroll to.\n   * @param duration: is the length of the animation.\n   * @param offset: offset for scroll.\n   * @param container: the container element\n   */\n  private scrollTo(listenerTarget: HTMLElement | Window, to: number, duration: number, offset: number, container?: HTMLElement): void {\n    // Whether or not the listener is the Window\n    const isWindow = listenerTarget === window;\n    const windowScrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n    // TODO check if can be refactored\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const that = this;\n    let startPosition;\n    const animateScroll = (): void => {\n      const val = that.easingLogic(time, startPosition, distance, duration);\n\n      if (container && !isWindow) {\n        container.scrollTop = val;\n      } else {\n        // to allow scroll function on different browsers both chrome and firefox\n        top.window.scroll(0, val);\n      }\n\n      if (time < duration) {\n        time += INCREMENT_VALUE;\n        setTimeout(animateScroll, INCREMENT_VALUE);\n      }\n    };\n\n    if (!container) {\n      startPosition = windowScrollTop;\n    } else {\n      startPosition = isWindow ? windowScrollTop : container.scrollTop;\n    }\n\n    // Correction for Starting Position of nested HTML Elements\n    if (container && !isWindow) {\n      to = to - container.getBoundingClientRect().top + startPosition;\n    }\n\n    const distance = to - startPosition + offset;\n    let time = 0;\n\n    animateScroll();\n  }\n\n  // t: current time, b: begInnIng value, c: change In value, d: duration\n  private easingLogic(t: number, b: number, c: number, d: number): number {\n    // easeInOutQuad\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t + b;\n    }\n\n    return -c / 2 * ((--t) * (t - 2) - 1) + b;\n  }\n}\n"]}