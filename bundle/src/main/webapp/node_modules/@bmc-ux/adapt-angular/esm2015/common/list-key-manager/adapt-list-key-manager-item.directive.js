import { Directive, ElementRef, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class AdaptListKeyManagerItemDirective {
    constructor(_elementRef) {
        this._elementRef = _elementRef;
        // Use alias to avoid collision with [disabled] property of form elements
        this.disabled = false;
    }
    getLabel() {
        return this.label;
    }
    getNativeElement() {
        return this._elementRef.nativeElement;
    }
}
AdaptListKeyManagerItemDirective.ɵfac = function AdaptListKeyManagerItemDirective_Factory(t) { return new (t || AdaptListKeyManagerItemDirective)(i0.ɵɵdirectiveInject(i0.ElementRef)); };
AdaptListKeyManagerItemDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: AdaptListKeyManagerItemDirective, selectors: [["", "adaptListKeyManagerItem", ""]], inputs: { item: "item", label: "label", disabled: ["adaptListKeyManagerItemDisabled", "disabled"] }, exportAs: ["adaptListKeyManagerItem"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptListKeyManagerItemDirective, [{
        type: Directive,
        args: [{
                selector: '[adaptListKeyManagerItem]',
                exportAs: 'adaptListKeyManagerItem'
            }]
    }], function () { return [{ type: i0.ElementRef }]; }, { item: [{
            type: Input
        }], label: [{
            type: Input
        }], disabled: [{
            type: Input,
            args: ['adaptListKeyManagerItemDisabled']
        }] }); })();
//# sourceMappingURL=adapt-list-key-manager-item.directive.js.map