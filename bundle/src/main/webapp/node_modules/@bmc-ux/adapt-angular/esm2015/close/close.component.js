import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';
import { AdaptTranslateService } from '../common/i18n/index';
import { AdaptRadarAngularCustomEventName, AdaptRadarAngularGenericDirective, AdaptRadarAngularService } from '../common/radar/adapt-radar';
import * as i0 from "@angular/core";
import * as i1 from "../common/i18n/index";
import * as i2 from "../common/radar/adapt-radar";
export class AdaptCloseComponent extends AdaptRadarAngularGenericDirective {
    constructor(ts, _adaptRadarService, _elem) {
        super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptClose);
        this.ts = ts;
        /**
         * When specified, switches component from the default to inverted style
         * @docs-default false
         */
        this.inverse = false;
        /* eslint-disable @angular-eslint/no-output-native */
        /**
         * Emits an event when the button is clicked
         */
        this.close = new EventEmitter();
        this.closeText = ts.getCurrentLanguage()['adapt.common.close'];
    }
    closeClick() {
        this.close.emit();
    }
}
AdaptCloseComponent.ɵfac = function AdaptCloseComponent_Factory(t) { return new (t || AdaptCloseComponent)(i0.ɵɵdirectiveInject(i1.AdaptTranslateService), i0.ɵɵdirectiveInject(i2.AdaptRadarAngularService), i0.ɵɵdirectiveInject(i0.ElementRef)); };
AdaptCloseComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptCloseComponent, selectors: [["adapt-close"]], inputs: { inverse: "inverse" }, outputs: { close: "close" }, features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 4, consts: [["type", "button", 3, "click"]], template: function AdaptCloseComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtext(0, "\n    ");
        i0.ɵɵelementStart(1, "button", 0);
        i0.ɵɵlistener("click", function AdaptCloseComponent_Template_button_click_1_listener() { return ctx.closeClick(); });
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("close ", ctx.inverse ? "close-inverse" : "", "");
        i0.ɵɵattribute("aria-label", ctx.closeText);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptCloseComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-close',
                template: `
    <button class="close {{inverse ? 'close-inverse' : ''}}" [attr.aria-label]="closeText" type="button"
            (click)="closeClick()"></button>`
            }]
    }], function () { return [{ type: i1.AdaptTranslateService }, { type: i2.AdaptRadarAngularService }, { type: i0.ElementRef }]; }, { inverse: [{
            type: Input
        }], close: [{
            type: Output
        }] }); })();
//# sourceMappingURL=close.component.js.map