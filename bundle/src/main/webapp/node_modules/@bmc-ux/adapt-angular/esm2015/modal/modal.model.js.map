{"version":3,"file":"modal.model.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/modal/modal.model.ts"],"names":[],"mappings":"AACA,OAAO,EAAC,YAAY,EAAE,UAAU,EAAC,MAAM,eAAe,CAAC;AAIvD,OAAO,EAAC,aAAa,EAAC,MAAM,0BAA0B,CAAC;;AAoFvD,kCAAkC;AAClC,uDAAuD;AACvD;;;GAGG;AACH,MAAM,OAAO,aAAc,SAAQ,aAAa;CAAG;AAEnD;;;GAGG;AAEH,MAAM,OAAO,cAAc;IAD3B;QAEE;;;WAGG;QACH,gBAAW,GAAkC,IAAI,YAAY,EAAmB,CAAC;KA+ClF;IA7CC,kCAAkC;IAClC,uDAAuD;IACvD,sDAAsD;IACtD,yDAAyD;IACzD;;OAEG;IACH,KAAK,CAAC,MAAY;IAClB,CAAC;IAED;;OAEG;IACH,OAAO,CAAC,MAAY;IACpB,CAAC;IACD,sDAAsD;IAEtD;;OAEG;IACH,aAAa,CAAC,MAAkB;IAChC,CAAC;IAED;;OAEG;IACH,cAAc;IACd,CAAC;IAGD,kCAAkC;IAClC,uDAAuD;IACvD;;OAEG;IACH,OAAO;IACP,CAAC;IACD,sDAAsD;IAEtD;;;OAGG;IACH,SAAS,CAAC,KAA0B;IACpC,CAAC;;4EAnDU,cAAc;oEAAd,cAAc,WAAd,cAAc;uFAAd,cAAc;cAD1B,UAAU","sourcesContent":["import {OverModal} from './over-modal';\nimport {EventEmitter, Injectable} from '@angular/core';\n\nimport {ColorVariantType} from '../common/common.models';\nimport {AlertAnimatedConfig, AlertCloseEvent} from '../alert-animated/index';\nimport {PopupDeferred} from '../common/popup-deferred';\n\nexport type ModalSize = '' | 'sm' | 'lg';\n\nexport interface ModalConfig {\n  // TODO: Refactor this if possible\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  /**\n   * Content can be provided as a string, TemplateRef or a component type.\n   * In case component type is passed as content, you can inject ActiveModalRef to access the context.\n   */\n  content?: any;\n\n  /**\n   * Additional passed data to the modal/dialog\n   */\n  data?: any;\n\n  /**\n   * Callback on modal/dialog dismiss. If returns false, dismiss action will be refused.\n   */\n  beforeDismiss?: (reason: any) => boolean;\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n  /**\n   * Switch Modal to Dialog\n   */\n  isDialog?: boolean;\n\n  /**\n   * Dialog type (not allowed for modals)\n   */\n  type?: ColorVariantType | 'default';\n\n  /**\n   * Modal/dialog size\n   */\n  size?: ModalSize;\n\n  /**\n   * Modal/dialog title\n   */\n  title?: string;\n\n  /**\n   * Allow footer content left align\n   */\n  footerAlignLeft?: boolean;\n\n  /**\n   * Flag to hide/show backdrop ('true' by default for dialogs)\n   */\n  hideBackdrop?: boolean;\n\n  /**\n   * Flag to enable/disable close on ESC button ('true' by default for dialogs)\n   */\n  blockKeyboard?: boolean;\n  customClass?: string;\n\n  /**\n   * Show header constantly even if the title hasn't been passed\n   */\n  showEmptyHeader?: boolean;\n\n  /**\n   * Used to create data-testid attribute that can be used for testing purpose\n   */\n  testID?: string;\n\n  /**\n   * Close all dropdowns/popovers while modal opened\n   */\n  closeAllOpenedItems?: boolean;\n}\n\n/**\n * Modal config interface\n */\nexport interface ModalDialog extends ModalConfig {\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  content: any;\n}\n\n// TODO: Refactor this if possible\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Wrapper for Promise\n * @description Need to support resolve() and reject() methods on Promise instance.\n */\nexport class ModalDeferred extends PopupDeferred {}\n\n/**\n * A reference to an active (currently opened) modal/dialog.\n * Instances of this class can be injected into components passed as modal content.\n */\n@Injectable()\nexport class ActiveModalRef {\n  /**\n   * EventEmitter fires events on alert closed\n   * @since v10.17.0\n   */\n  alertClosed: EventEmitter<AlertCloseEvent> = new EventEmitter<AlertCloseEvent>();\n\n  // TODO: Refactor this if possible\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  /* eslint-disable @typescript-eslint/no-empty-function */\n  /**\n   * Can be used to close a modal, passing an optional result\n   */\n  close(result?: any): void {\n  }\n\n  /**\n   * Can be used to dismiss a modal, passing an optional reason\n   */\n  dismiss(reason?: any): void {\n  }\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n\n  /**\n   * Can be used to open an overModal (only for modal component)\n   */\n  openOverModal(config?: OverModal): void {\n  }\n\n  /**\n   * Can be used to close an overModal (only for modal component)\n   */\n  closeOverModal(): void {\n  }\n\n\n  // TODO: Refactor this if possible\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  /**\n   * Can be used to get passed data\n   */\n  getData(): any {\n  }\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n\n  /**\n   * Open alert for current modal instance\n   * @since v10.17.0\n   */\n  openAlert(alert: AlertAnimatedConfig): void {\n  }\n}\n"]}