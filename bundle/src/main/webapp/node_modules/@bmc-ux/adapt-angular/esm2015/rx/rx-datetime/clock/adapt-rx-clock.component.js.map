{"version":3,"file":"adapt-rx-clock.component.js","sourceRoot":"","sources":["../../../../../../../libs/adapt-angular/src/rx/rx-datetime/clock/adapt-rx-clock.component.ts","../../../../../../../libs/adapt-angular/src/rx/rx-datetime/clock/adapt-rx-clock.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport {trigger} from '@angular/animations';\nimport {ReplaySubject} from 'rxjs';\nimport {distinctUntilChanged, map, takeUntil} from 'rxjs/operators';\nimport {isNil, isUndefined} from 'lodash-es';\n\nimport {GetAngle, GetDistance, GetDragNDrop} from '../../../common/drag-n-drop';\nimport {ZOOM_ANIMATION} from '../common/common.utils';\nimport {SafeCdr} from '../../../common/safe-cdr';\n\nimport {AdaptRxDatetimeConfigService} from '../adapt-rx-datetime-config.service';\nimport {\n  RxClockConfig,\n  RxClockFace,\n  RxClockFaceTick,\n  RxClockFaceTicks,\n  RxClockMode,\n  RxClockTouchPoint,\n  RxDatetimeTexts,\n  RxTimeStruct\n} from '../adapt-rx-datetime.types';\nimport {getClockTicks} from './adapt-rx-clock-ticks';\n\n@Component({\n  selector: 'adapt-rx-clock',\n  templateUrl: './adapt-rx-clock.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('zoomAnimation', ZOOM_ANIMATION)\n  ]\n})\nexport class AdaptRxClockComponent implements OnInit, OnChanges, OnDestroy {\n  static Hours24Ticks: RxClockFaceTicks = getClockTicks(RxClockFace.Hours24);\n  static Hours12Ticks: RxClockFaceTicks = getClockTicks(RxClockFace.Hours12);\n  static MinutesTicks: RxClockFaceTicks = getClockTicks(RxClockFace.Minutes);\n  static SecondsTicks: RxClockFaceTicks = getClockTicks(RxClockFace.Seconds);\n\n  config: RxClockConfig = {\n    activeMode: RxClockMode.Hours,\n    activeTime: undefined,\n    initialTime: undefined,\n    use12HoursTime: false,\n    hasSeconds: false,\n    disabled: false,\n    texts: undefined\n  };\n\n  @Input() activeMode: RxClockMode;\n  @Input() activeTime: RxTimeStruct;\n  @Input() initialTime: RxTimeStruct;\n  @Input() use12HoursTime: boolean;\n  @Input() hasSeconds: boolean;\n  @Input() disabled: boolean;\n  @Input() texts: RxDatetimeTexts;\n  @Input() testID: string;\n\n\n  isPM: boolean = false;\n\n  rxClockMode: typeof RxClockMode = RxClockMode;\n\n  clockFaceTicks: {\n    hours: RxClockFaceTicks;\n    minutes: RxClockFaceTicks;\n    seconds: RxClockFaceTicks;\n  } = {\n    hours: AdaptRxClockComponent.Hours24Ticks,\n    minutes: AdaptRxClockComponent.MinutesTicks,\n    seconds: AdaptRxClockComponent.SecondsTicks\n  };\n\n  uiValue: RxTimeStruct = {\n    hours: null,\n    minutes: null,\n    seconds: null\n  };\n\n  /* eslint-disable @angular-eslint/no-output-on-prefix */\n  /**\n   * An event firing on clock mode change\n   */\n  @Output() readonly onModeChange: EventEmitter<RxClockMode> = new EventEmitter<RxClockMode>();\n\n  /**\n   * An event firing on time change\n   * It happens on each drag end\n   */\n  @Output() readonly onTimeChange: EventEmitter<RxTimeStruct> = new EventEmitter<RxTimeStruct>();\n\n  /**\n   * An event firing on hoursLabel change\n   * It happens on while dragging\n   */\n  @Output() readonly onHoursChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /**\n   * An event firing on minutesLabel change\n   * It happens on while dragging\n   */\n  @Output() readonly onMinutesChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /**\n   * An event firing on secondsLabel change\n   * It happens on while dragging\n   */\n  @Output() readonly onSecondsChange: EventEmitter<number> = new EventEmitter<number>();\n  /* eslint-enable @angular-eslint/no-output-on-prefix */\n\n  /**\n   * DrugAndDrop anchor ref\n   */\n  @ViewChild('dndContainerRef', {static: true}) dndContainerRef: ElementRef<HTMLElement>;\n\n  private _innerFaceTouchAreaSize: number = .65; // part of the face radius\n  private _faceSize: number = 220;\n  private _destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  constructor(_datetimeConfigService: AdaptRxDatetimeConfigService,\n              private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    this.config.texts = _datetimeConfigService.texts;\n  }\n\n  ngOnInit(): void {\n    this._initDragNDrop();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasSeconds && !isNil(changes.hasSeconds.currentValue)) {\n      this.config.hasSeconds = changes.hasSeconds.currentValue;\n    }\n\n    if (changes.activeMode && !isUndefined(changes.activeMode.currentValue)) {\n      this.gotoNextFace(changes.activeMode.currentValue);\n    }\n\n    if (changes.activeTime && !isUndefined(changes.activeTime.currentValue)) {\n      this.config.activeTime = changes.activeTime.currentValue;\n      this._updateUIValue();\n      this._checkMeridiem();\n    }\n\n    if (changes.use12HoursTime && !isNil(changes.use12HoursTime.currentValue)) {\n      this.config.use12HoursTime = changes.use12HoursTime.currentValue;\n      this._checkMeridiem();\n    }\n\n    if (changes.initialTime && !isUndefined(changes.initialTime.currentValue)) {\n      this.config.initialTime = changes.initialTime.currentValue;\n      this._updateUIValue();\n      this._checkMeridiem();\n    }\n\n    if (changes.disabled && !isNil(changes.disabled.currentValue)) {\n      this.config.disabled = changes.disabled.currentValue;\n    }\n\n    if (changes.texts && !isNil(changes.texts.currentValue)) {\n      Object.assign(this.config.texts, changes.texts.currentValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed$.next(true);\n    this._destroyed$.complete();\n  }\n\n  /**\n   * Change time use12HoursTime\n   */\n  changeMeridiem(): void {\n    this.isPM = !this.isPM;\n\n    if (this.config.activeTime) {\n      if (this.config.use12HoursTime) {\n        if (this.isPM) {\n          this.config.activeTime.hours = this.uiValue.hours === 12 ? 12 : this.uiValue.hours + 12;\n        } else {\n          this.config.activeTime.hours = this.uiValue.hours === 12 ? 0 : this.uiValue.hours;\n        }\n      }\n\n      this.onTimeChange.emit(this.config.activeTime);\n      this.onHoursChange.emit(this.config.activeTime.hours);\n    }\n  }\n\n  /**\n   * Change clock mode\n   */\n  gotoNextFace(nextFace?: RxClockMode): void {\n    if (nextFace === this.config.activeMode) {\n      return;\n    }\n\n    if (nextFace === null) {\n      nextFace = (this.config.activeMode + 1) % (this.config.hasSeconds ? 3 : 2);\n    }\n\n    switch (nextFace) {\n      case RxClockMode.Hours: {\n        this.config.activeMode = RxClockMode.Hours;\n        break;\n      }\n      case RxClockMode.Minutes: {\n        this.config.activeMode = RxClockMode.Minutes;\n        break;\n      }\n      case RxClockMode.Seconds: {\n        if (this.config.hasSeconds) {\n          this.config.activeMode = RxClockMode.Seconds;\n        } else {\n          this.config.activeMode = RxClockMode.Hours;\n        }\n\n        break;\n      }\n    }\n\n    this.onModeChange.emit(this.config.activeMode);\n  }\n\n  /**\n   * Check activeTime according to use12HoursTime\n   */\n  private _checkMeridiem(): void {\n    if (this.config.use12HoursTime) {\n      this.clockFaceTicks.hours = AdaptRxClockComponent.Hours12Ticks;\n\n      if (this.config.activeTime && !isNil(this.config.activeTime.hours)) {\n        this.isPM = this.config.activeTime.hours >= 12;\n        this.uiValue.hours = (this.config.activeTime.hours % 12) || 12;\n      }\n\n    } else {\n      this.clockFaceTicks.hours = AdaptRxClockComponent.Hours24Ticks;\n    }\n  }\n\n  /**\n   * Drag and drop initialization\n   */\n  private _initDragNDrop(): void {\n    this._renderer.setStyle(this.dndContainerRef.nativeElement, 'width', `${this._faceSize}px`);\n    this._renderer.setStyle(this.dndContainerRef.nativeElement, 'height', `${this._faceSize}px`);\n\n    let centerX;\n    let centerY;\n\n    const dragStart = (): void => {\n      const elRect = this.dndContainerRef.nativeElement.getBoundingClientRect();\n\n      centerX = elRect.left + elRect.width / 2;\n      centerY = elRect.top + elRect.height / 2;\n    };\n\n    const dragEnd = (): void => {\n      this.onTimeChange.emit(this.config.activeTime);\n    };\n\n    GetDragNDrop(this.dndContainerRef.nativeElement, null, null, dragStart, dragEnd)\n      .pipe(\n        map(moveCoords => {\n          if (this.config.disabled) {\n            return;\n          }\n\n          const angle = Math.round(GetAngle(centerX, centerY, moveCoords.x, moveCoords.y) * 100) / 100;\n          const distance = Math.round(GetDistance(centerX, centerY, moveCoords.x, moveCoords.y) * 100) / 100;\n\n          return {angle: angle, distanceFromCenter: distance};\n        }),\n        distinctUntilChanged(),\n        takeUntil(this._destroyed$)\n      )\n      .subscribe(this._touchPointChange.bind(this));\n  }\n\n  /**\n   * Drag and drop handler\n   */\n  private _touchPointChange(touchPoint: RxClockTouchPoint): void {\n    if (touchPoint) {\n      const newValue = {...this.config.activeTime};\n\n      switch (this.config.activeMode) {\n        case RxClockMode.Hours: {\n          this.uiValue.hours = this._getClockFaceTick(touchPoint, this.clockFaceTicks.hours).value;\n          newValue.hours = this.uiValue.hours;\n\n          if (this.config.use12HoursTime) {\n            if (this.isPM) {\n              newValue.hours = newValue.hours === 12 ? 12 : newValue.hours + 12;\n            } else {\n              newValue.hours = newValue.hours === 12 ? 0 : newValue.hours;\n            }\n          }\n\n          this.onHoursChange.emit(newValue.hours);\n\n          break;\n        }\n        case RxClockMode.Minutes: {\n          this.uiValue.minutes = this._getClockFaceTick(touchPoint, this.clockFaceTicks.minutes).value;\n          newValue.minutes = this.uiValue.minutes;\n          this.onMinutesChange.emit(newValue.minutes);\n\n          break;\n        }\n        case RxClockMode.Seconds: {\n          this.uiValue.seconds = this._getClockFaceTick(touchPoint, this.clockFaceTicks.seconds).value;\n          newValue.seconds = this.uiValue.seconds;\n          this.onSecondsChange.emit(newValue.seconds);\n\n          break;\n        }\n      }\n\n      this.config.activeTime = {...newValue};\n\n      SafeCdr.detectChanges(this._changeDetectorRef);\n    }\n  }\n\n  /**\n   * Returns clock face activeTime according to touch point location\n   */\n  private _getClockFaceTick(touchPoint: RxClockTouchPoint, activeFaceTicks: RxClockFaceTicks): RxClockFaceTick {\n    const actualTicksSet =\n      (activeFaceTicks.length === 1) || (touchPoint.distanceFromCenter > this._faceSize / 2 * this._innerFaceTouchAreaSize) ?\n        activeFaceTicks[0] : activeFaceTicks[1];\n\n    return actualTicksSet[Math.round(touchPoint.angle * actualTicksSet.length / 360) % actualTicksSet.length];\n  }\n\n  private _updateUIValue(): void {\n    if (this.config.initialTime) {\n      this.config.activeTime = {\n        hours: isNil(this.config.activeTime?.hours) ? this.config.initialTime.hours : this.config.activeTime.hours,\n        minutes: isNil(this.config.activeTime?.minutes) ? this.config.initialTime.minutes : this.config.activeTime.minutes,\n        seconds: isNil(this.config.activeTime?.seconds) ? this.config.initialTime.seconds : this.config.activeTime.seconds,\n      };\n    }\n\n    this.uiValue = {...this.config.activeTime};\n  }\n}\n","<div class=\"a3t-clock\" [class.a3t-clock_disabled]=\"config.disabled\">\n  <div class=\"a3t-clock--controls\">\n    <button type=\"button\"\n            tabindex=\"-1\"\n            class=\"a3t-clock--control-btn m-end-2\"\n            [attr.data-testid]=\"testID + '_hhmmss'\"\n            [disabled]=\"config.disabled\"\n            (click)=\"gotoNextFace(null)\">\n      <span class=\"a3t-clock--control-item\"\n            [class.active]=\"config.activeMode === rxClockMode.Hours\">{{config.texts.clock.hhBtn}}</span>\n      <span class=\"a3t-clock--control-separator\"></span>\n      <span class=\"a3t-clock--control-item\"\n            [class.active]=\"config.activeMode === rxClockMode.Minutes\">{{config.texts.clock.mmBtn}}</span>\n      <ng-container *ngIf=\"config.hasSeconds\">\n        <span class=\"a3t-clock--control-separator\"></span>\n        <span class=\"a3t-clock--control-item\"\n              [class.active]=\"config.activeMode === rxClockMode.Seconds\">{{config.texts.clock.ssBtn}}</span>\n      </ng-container>\n    </button>\n    <button type=\"button\"\n            tabindex=\"-1\"\n            class=\"a3t-clock--control-btn\"\n            *ngIf=\"config.use12HoursTime\"\n            [attr.data-testid]=\"testID + '_ampm'\"\n            [disabled]=\"config.disabled\"\n            (click)=\"changeMeridiem()\">\n      <span class=\"a3t-clock--control-item\" [class.active]=\"!isPM\">{{config.texts.clock.amBtn}}</span>\n      <span class=\"a3t-clock--control-separator\"></span>\n      <span class=\"a3t-clock--control-item\" [class.active]=\"isPM\">{{config.texts.clock.pmBtn}}</span>\n    </button>\n  </div>\n  <div class=\"a3t-clock--faces\" #dndContainerRef [@zoomAnimation]=\"config.activeMode\">\n    <div *ngIf=\"config.activeMode === rxClockMode.Hours\" style=\"position:absolute; width: 100%; height: 100%\">\n      <ng-template [ngTemplateOutlet]=\"clockFaceTemplate\"\n                   [ngTemplateOutletContext]=\"{$implicit: clockFaceTicks.hours, active: uiValue.hours}\"></ng-template>\n    </div>\n    <div *ngIf=\"config.activeMode === rxClockMode.Minutes\" style=\"position:absolute; width: 100%; height: 100%\">\n      <ng-template [ngTemplateOutlet]=\"clockFaceTemplate\"\n                   [ngTemplateOutletContext]=\"{$implicit: clockFaceTicks.minutes, active: uiValue.minutes}\"></ng-template>\n    </div>\n    <div *ngIf=\"config.activeMode === rxClockMode.Seconds\" style=\"position:absolute; width: 100%; height: 100%\">\n      <ng-template [ngTemplateOutlet]=\"clockFaceTemplate\"\n                   [ngTemplateOutletContext]=\"{$implicit: clockFaceTicks.seconds, active: uiValue.seconds}\"></ng-template>\n    </div>\n  </div>\n</div>\n\n<ng-template #clockFaceTemplate let-ticks let-active=\"active\">\n  <div class=\"a3t-clock--face\" *ngFor=\"let ticksSet of ticks\">\n    <div class=\"a3t-clock--tick\"\n         *ngFor=\"let label of ticksSet; let index = index\"\n         [class.a3t-clock--tick_active]=\"label.value === active\"\n         [attr.data-testid]=\"testID + '_tick_' + index / ticksSet.length * 360\"\n         [style.transform]=\"'rotate(' + (index / ticksSet.length * 360) + 'deg)'\">\n      <div class=\"a3t-clock--tick-label\" [style.transform]=\"'rotate(' + (- index / ticksSet.length * 360) + 'deg)'\">\n        {{label.uiValue}}\n      </div>\n      <div class=\"a3t-clock--tick-arrow\"></div>\n      <div class=\"a3t-clock--tick-center\"></div>\n    </div>\n  </div>\n</ng-template>\n"]}