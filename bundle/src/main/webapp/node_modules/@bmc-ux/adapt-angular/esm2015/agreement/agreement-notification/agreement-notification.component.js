import { Component, ElementRef, EventEmitter, Input, Output, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';
import { isNil } from 'lodash-es';
import { AdaptModalService } from '../../modal/modal.service';
import { AdaptMessageService } from '../../toast/toast-message.service';
import { AdaptRadarAngularCustomEventName, AdaptRadarAngularGenericDirective, AdaptRadarAngularService } from '../../common/radar/adapt-radar';
import { AdaptTranslateService } from '../../common/i18n';
import * as i0 from "@angular/core";
import * as i1 from "../../modal/modal.service";
import * as i2 from "../../toast/toast-message.service";
import * as i3 from "../../common/radar/adapt-radar";
import * as i4 from "../../common/i18n";
import * as i5 from "@angular/common";
import * as i6 from "../../alert/alert.component";
import * as i7 from "../../badge/badge.component";
const _c0 = ["mTemplate"];
function AdaptAgreementNotificationComponent_ng_template_0_p_16_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1, "\n        ");
    i0.ɵɵelementStart(2, "adapt-badge", 8);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("variant", ctx_r3.state.accountPerformance ? "success" : "danger");
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n          ", ctx_r3.state.accountPerformance ? ctx_r3.texts.enabledText : ctx_r3.texts.disabledText, "\n        ");
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n        ", ctx_r3.texts.performanceLabel, "\n      ");
} }
function AdaptAgreementNotificationComponent_ng_template_0_p_18_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1, "\n        ");
    i0.ɵɵelementStart(2, "adapt-badge", 8);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("variant", ctx_r4.state.accountMarketing ? "success" : "danger");
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n          ", ctx_r4.state.accountMarketing ? ctx_r4.texts.enabledText : ctx_r4.texts.disabledText, "\n        ");
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n        ", ctx_r4.texts.marketingLabel, "\n      ");
} }
const _c1 = function (a0) { return { content: a0, type: "inline", variant: "info" }; };
function AdaptAgreementNotificationComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    const _r6 = i0.ɵɵgetCurrentView();
    i0.ɵɵtext(0, "\n  ");
    i0.ɵɵelementStart(1, "div", 1);
    i0.ɵɵtext(2, "\n    ");
    i0.ɵɵelementStart(3, "h5");
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(5, "\n  ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(6, "\n  ");
    i0.ɵɵelementStart(7, "div", 2);
    i0.ɵɵtext(8, "\n    ");
    i0.ɵɵelementStart(9, "p");
    i0.ɵɵtext(10);
    i0.ɵɵelement(11, "br");
    i0.ɵɵtext(12);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(13, "\n\n    ");
    i0.ɵɵelementStart(14, "div", 3);
    i0.ɵɵtext(15, "\n      ");
    i0.ɵɵtemplate(16, AdaptAgreementNotificationComponent_ng_template_0_p_16_Template, 5, 4, "p", 4);
    i0.ɵɵtext(17, "\n\n      ");
    i0.ɵɵtemplate(18, AdaptAgreementNotificationComponent_ng_template_0_p_18_Template, 5, 4, "p", 4);
    i0.ɵɵtext(19, "\n    ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(20, "\n\n    ");
    i0.ɵɵelement(21, "adapt-alert", 5);
    i0.ɵɵtext(22, "\n  ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(23, "\n  ");
    i0.ɵɵelementStart(24, "div", 6);
    i0.ɵɵtext(25, "\n    ");
    i0.ɵɵelementStart(26, "button", 7);
    i0.ɵɵlistener("click", function AdaptAgreementNotificationComponent_ng_template_0_Template_button_click_26_listener() { const restoredCtx = i0.ɵɵrestoreView(_r6); const close_r2 = restoredCtx.close; const ctx_r5 = i0.ɵɵnextContext(); return ctx_r5.handleSubmit(close_r2); });
    i0.ɵɵtext(27);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(28, "\n  ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(29, "\n");
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(3);
    i0.ɵɵclassMap("modal-title text-default");
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r1.texts.modalHeader);
    i0.ɵɵadvance(6);
    i0.ɵɵtextInterpolate(ctx_r1.texts.modalText1);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(ctx_r1.texts.modalText2);
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngIf", ctx_r1.state && ctx_r1.isSettingChanged(ctx_r1.state.accountPerformance));
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r1.state && ctx_r1.isSettingChanged(ctx_r1.state.accountMarketing));
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("config", i0.ɵɵpureFunction1(10, _c1, ctx_r1.texts.alertText));
    i0.ɵɵadvance(6);
    i0.ɵɵtextInterpolate1("", ctx_r1.texts.buttonText, "\n    ");
} }
export class AdaptAgreementNotificationComponent extends AdaptRadarAngularGenericDirective {
    constructor(_modalService, _messageService, _adaptRadarService, _elem, _ts) {
        super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptAgreementNotification);
        this._modalService = _modalService;
        this._messageService = _messageService;
        this._adaptRadarService = _adaptRadarService;
        this._ts = _ts;
        this.texts = {};
        this.openModal = false;
        this.submitButtonClick = new EventEmitter();
        this.modalOpen = new EventEmitter();
        this._setDefaultTexts(_ts.getCurrentLanguage());
    }
    ngOnChanges(changes) {
        var _a;
        if ((_a = changes['openModal']) === null || _a === void 0 ? void 0 : _a.currentValue) {
            this.open();
        }
    }
    open() {
        const promise = this._modalService
            .open({
            title: null,
            content: this.mTemplate,
            testID: this.testID,
            blockKeyboard: true,
            beforeDismiss: () => false
        });
        this.modalOpen.emit({ promise });
    }
    handleSubmit(close) {
        this.submitButtonClick.emit();
        close();
    }
    isSettingChanged(state) {
        return !isNil(state);
    }
    _setDefaultTexts(translation) {
        this.texts.modalHeader = translation['adapt.agreement.notification.modalHeader'];
        this.texts.modalText1 = translation['adapt.agreement.notification.modalText1'];
        this.texts.modalText2 = translation['adapt.agreement.notification.modalText2'];
        this.texts.enabledText = translation['adapt.agreement.notification.enabledText'];
        this.texts.disabledText = translation['adapt.agreement.notification.disabledText'];
        this.texts.performanceLabel = translation['adapt.agreement.common.performanceLabel'];
        this.texts.marketingLabel = translation['adapt.agreement.common.marketingLabel'];
        this.texts.alertText = translation['adapt.agreement.notification.alertText'];
        this.texts.buttonText = translation['adapt.agreement.notification.buttonText'];
    }
}
AdaptAgreementNotificationComponent.ɵfac = function AdaptAgreementNotificationComponent_Factory(t) { return new (t || AdaptAgreementNotificationComponent)(i0.ɵɵdirectiveInject(i1.AdaptModalService), i0.ɵɵdirectiveInject(i2.AdaptMessageService), i0.ɵɵdirectiveInject(i3.AdaptRadarAngularService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i4.AdaptTranslateService)); };
AdaptAgreementNotificationComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptAgreementNotificationComponent, selectors: [["adapt-agreement-notification"]], viewQuery: function AdaptAgreementNotificationComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mTemplate = _t.first);
    } }, inputs: { openModal: "openModal", testID: "testID", state: "state" }, outputs: { submitButtonClick: "submitButtonClick", modalOpen: "modalOpen" }, features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 3, vars: 0, consts: [["mTemplate", ""], [1, "modal-header"], [1, "modal-body"], [1, "agreement__content-text"], [4, "ngIf"], [3, "adaptRadarDisableEventSending", "config"], [1, "modal-footer"], ["type", "button", 1, "btn", "btn-primary", 3, "click"], [1, "agreement__badge", 3, "adaptRadarDisableEventSending", "variant"]], template: function AdaptAgreementNotificationComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, AdaptAgreementNotificationComponent_ng_template_0_Template, 30, 12, "ng-template", null, 0, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtext(2, "\n");
    } }, directives: [i5.NgIf, i6.AdaptAlertComponent, i7.AdaptBadgeComponent], styles: [".adapt-agreement.adapt-agreement_no-shadow{box-shadow:none}.agreement__main-title{margin:0 0 1rem}.agreement__separator{margin:1rem 0}.agreement__switcher{font-size:.9375rem}.agreement__content{margin-left:4.125em}.adapt-agreement__content_empty-state{font-size:.9375rem;text-align:center;width:100%}.agreement__content-text{margin:1rem 0}.agreement__badge .badge{min-width:70px}.agreement__collapse-btn{color:var(--text-primary)}adapt-alert .text-info{display:flex}.agreement__text-hidden .collapse-block{height:0;overflow:hidden;visibility:hidden}"], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptAgreementNotificationComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-agreement-notification',
                styleUrls: ['../agreement.scss'],
                templateUrl: './agreement-notification.component.html',
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: i1.AdaptModalService }, { type: i2.AdaptMessageService }, { type: i3.AdaptRadarAngularService }, { type: i0.ElementRef }, { type: i4.AdaptTranslateService }]; }, { openModal: [{
            type: Input
        }], testID: [{
            type: Input
        }], state: [{
            type: Input
        }], submitButtonClick: [{
            type: Output
        }], modalOpen: [{
            type: Output
        }], mTemplate: [{
            type: ViewChild,
            args: ['mTemplate']
        }] }); })();
//# sourceMappingURL=agreement-notification.component.js.map