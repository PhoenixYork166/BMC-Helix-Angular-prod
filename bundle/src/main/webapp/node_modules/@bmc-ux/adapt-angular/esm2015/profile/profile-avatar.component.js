import { ChangeDetectorRef, Component, Input } from '@angular/core';
import { ReplaySubject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { toString } from '../common/utilities';
import { checkURL } from '../common/check-url';
import { SafeCdr } from '../common/safe-cdr';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
const _c0 = function (a0) { return { "background-image": a0 }; };
export class AdaptProfileAvatarComponent {
    constructor(_changeDetectorRef) {
        this._changeDetectorRef = _changeDetectorRef;
        this.imgSrcError = false;
        this._destroyed$ = new ReplaySubject(1);
        this.formatter = toString;
    }
    ngOnInit() {
        if (this.profileUserName) {
            this.userInitial = this.getInitial(this.profileUserName);
        }
    }
    ngOnChanges(changes) {
        var _a, _b, _c, _d, _e, _f, _g;
        if (((_a = changes.profileImage) === null || _a === void 0 ? void 0 : _a.currentValue) !== ((_b = changes.profileImage) === null || _b === void 0 ? void 0 : _b.previousValue)) {
            if (!((_c = changes.profileImage) === null || _c === void 0 ? void 0 : _c.currentValue)) {
                this.imgSrcError = true;
                return;
            }
            checkURL(changes.profileImage.currentValue)
                .pipe(takeUntil(this._destroyed$))
                .subscribe(() => {
                this.imgSrcError = false;
                SafeCdr.detectChanges(this._changeDetectorRef);
            }, () => {
                this.imgSrcError = true;
                SafeCdr.detectChanges(this._changeDetectorRef);
            });
        }
        if (((_d = changes.profileUserName) === null || _d === void 0 ? void 0 : _d.currentValue) !== ((_e = changes.profileUserName) === null || _e === void 0 ? void 0 : _e.previousValue)) {
            this.userInitial = this.getInitial(changes.profileUserName.currentValue);
        }
        if (((_f = changes.formatter) === null || _f === void 0 ? void 0 : _f.currentValue) !== ((_g = changes.formatter) === null || _g === void 0 ? void 0 : _g.previousValue)) {
            this.userInitial = this.getInitial(this.profileUserName);
        }
    }
    ngOnDestroy() {
        this._destroyed$.next(true);
        this._destroyed$.complete();
    }
    getInitial(name) {
        const initial = this.formatter ? this.formatter(name) : name.trim();
        return initial ? initial[0].toUpperCase() : '';
    }
}
AdaptProfileAvatarComponent.ɵfac = function AdaptProfileAvatarComponent_Factory(t) { return new (t || AdaptProfileAvatarComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
AdaptProfileAvatarComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptProfileAvatarComponent, selectors: [["adapt-profile-avatar"]], inputs: { customClass: "customClass", profileImage: "profileImage", profileUserName: "profileUserName", formatter: "formatter" }, features: [i0.ɵɵNgOnChangesFeature], decls: 7, vars: 8, consts: [[3, "ngClass", "ngStyle"]], template: function AdaptProfileAvatarComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtext(0, "\n      ");
        i0.ɵɵelementStart(1, "span", 0);
        i0.ɵɵtext(2, "\n      ");
        i0.ɵɵelementStart(3, "span");
        i0.ɵɵtext(4);
        i0.ɵɵelementEnd();
        i0.ɵɵtext(5, "\n    ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(6, "\n  ");
    } if (rf & 2) {
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("a-profile__avatar ", ctx.customClass, "");
        i0.ɵɵproperty("ngClass", !ctx.imgSrcError && ctx.profileImage ? "a-profile__avatar--imaged" : "a-profile_delault-icon")("ngStyle", i0.ɵɵpureFunction1(6, _c0, !ctx.imgSrcError && ctx.profileImage ? "url(\"" + ctx.profileImage + "\")" : "none"));
        i0.ɵɵadvance(3);
        i0.ɵɵtextInterpolate(ctx.userInitial);
    } }, directives: [i1.NgClass, i1.NgStyle], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptProfileAvatarComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-profile-avatar',
                template: `
      <span class="a-profile__avatar {{customClass}}"
            [ngClass]="!imgSrcError && profileImage ? 'a-profile__avatar--imaged': 'a-profile_delault-icon'"
            [ngStyle]="{'background-image': !imgSrcError && profileImage ? 'url(&#34;' + profileImage + '&#34;)' : 'none'}">
      <span>{{ userInitial }}</span>
    </span>
  `
            }]
    }], function () { return [{ type: i0.ChangeDetectorRef }]; }, { customClass: [{
            type: Input
        }], profileImage: [{
            type: Input
        }], profileUserName: [{
            type: Input
        }], formatter: [{
            type: Input
        }] }); })();
//# sourceMappingURL=profile-avatar.component.js.map