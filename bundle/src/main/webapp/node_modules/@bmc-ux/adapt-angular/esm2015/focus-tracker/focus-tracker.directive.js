/**
 * Additional info
 * Please add => Focusin/focusout polyfill for Firefox based on this gist by @nuxodin. Addresses this bug in Firefox.
 * github: https://github.com/paulcpederson/focusin
 *
 * Install
 * npm install focusin
 *
 * Or, just copy focusin.min.js into your project if you don't use browserify.
 * The minified script automatically runs the polyfill method, so all you have to do is include it.
 *
 * Usage
 * focusin is a polyfill, so you don't need to assign it to a variable, just require it and call the polyfill method.
 * Obviously meant for browser environments and not Node.js.
 * If you only require the module no code will be attached to the window.
 * require('focusin').polyfill()
 */
import { Directive } from '@angular/core';
import { AdaptFocusTrackerService } from './focus-tracker.service';
import * as i0 from "@angular/core";
import * as i1 from "./focus-tracker.service";
export class AdaptFocusTrackerDirective {
    constructor(focusTracker) {
        this.focusTracker = focusTracker;
    }
    ngAfterViewInit() {
        this.focusTracker.enableFocusTracker();
    }
    ngOnDestroy() {
        this.focusTracker.disableFocusTracker();
    }
}
AdaptFocusTrackerDirective.ɵfac = function AdaptFocusTrackerDirective_Factory(t) { return new (t || AdaptFocusTrackerDirective)(i0.ɵɵdirectiveInject(i1.AdaptFocusTrackerService)); };
AdaptFocusTrackerDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: AdaptFocusTrackerDirective, selectors: [["", "adaptFocusTracker", ""], ["", "adapt-focus-tracker", ""]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptFocusTrackerDirective, [{
        type: Directive,
        args: [{
                selector: '[adaptFocusTracker], [adapt-focus-tracker]'
            }]
    }], function () { return [{ type: i1.AdaptFocusTrackerService }]; }, null); })();
//# sourceMappingURL=focus-tracker.directive.js.map