{"version":3,"file":"tooltip.service.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/tooltip/tooltip.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {ElementRef, Injectable} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Point} from '@angular/cdk/drag-drop';\n\nimport {TooltipPlacement} from '../common/positioning';\n\nexport interface PositionPointsData {\n  point: Point;\n  translatePoint: Point;\n}\n\n@Injectable()\nexport class TooltipService {\n  private _offset: number = 15;\n  private _arrowSize: number = 6;\n\n  constructor(private elementRef: ElementRef,\n              private dir: Directionality) {\n  }\n\n  getActualPosition(x: number, y: number): Point {\n    x += this._offset;\n    y -= this._offset / 2;\n\n    if (this.dir.value === 'rtl') {\n      x -= this._offset + this.elementRef.nativeElement.offsetWidth;\n    } else {\n      x += this._offset;\n    }\n\n    return {x, y};\n  }\n\n  getFixedPosition(target: HTMLElement, placement: TooltipPlacement): PositionPointsData {\n    let point: Point;\n    let translatePoint: Point;\n    const objectHeightWidth = this.getWidthHeight(this.elementRef);\n\n    switch (placement) {\n      case TooltipPlacement.Top: {\n        point = this.getTopPosition(target);\n        translatePoint = {\n          x: Math.round(-objectHeightWidth.x / 2),\n          y: Math.round(-objectHeightWidth.y)\n        };\n        break;\n      }\n      case TooltipPlacement.Right: {\n        point = this.getRightPosition(target);\n        translatePoint = {\n          x: 0,\n          y: Math.round(-objectHeightWidth.y / 2)\n        };\n        break;\n      }\n      case TooltipPlacement.Bottom: {\n        point = this.getBottomPosition(target);\n        translatePoint = {\n          x: Math.round(-objectHeightWidth.x / 2),\n          y: 0\n        };\n        break;\n      }\n      case TooltipPlacement.Left: {\n        point = this.getLeftPosition(target);\n        translatePoint = {\n          x: Math.round(-objectHeightWidth.x),\n          y: Math.round(-objectHeightWidth.y / 2)\n        };\n        break;\n      }\n    }\n\n    return {point, translatePoint};\n  }\n\n  getAutoPosition(target: HTMLElement): Promise<{ point: Point; placement: string }> {\n    // TODO check if can be refactored\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n\n    return new Promise((resolve) => {\n      const timer = setTimeout(() => {\n        const t = self.getTopPosition(target);\n        const b = self.getBottomPosition(target);\n        const l = self.getLeftPosition(target);\n        const r = self.getRightPosition(target);\n        const {innerWidth, innerHeight} = window;\n        const {width, height} = self.elementRef.nativeElement.getBoundingClientRect();\n\n        if (t.y - height - self._arrowSize >= 0 &&\n          t.x - width - self._arrowSize >= 0 &&\n          t.x + width + self._arrowSize <= innerWidth) {\n          resolve({\n            point: t,\n            placement: 'top'\n          });\n        } else if (b.y + height + self._arrowSize <= innerHeight &&\n          b.x - width - self._arrowSize >= 0 &&\n          b.x + width + self._arrowSize <= innerWidth) {\n          resolve({\n            point: b,\n            placement: 'bottom'\n          });\n        } else if (l.x - width - self._arrowSize >= 0) {\n          resolve({\n            point: l,\n            placement: 'left'\n          });\n        } else if (r.x + width + self._arrowSize <= innerWidth) {\n          resolve({\n            point: r,\n            placement: 'right'\n          });\n        } else {\n          resolve({\n            point: t,\n            placement: 'top'\n          });\n        }\n        clearTimeout(timer);\n      }, 0);\n    });\n  }\n\n  private getTopPosition(target: HTMLElement): Point {\n    const {top, left, width} = target.getBoundingClientRect();\n\n    return {x: left + width / 2, y: top - this._arrowSize};\n  }\n\n  private getRightPosition(target: HTMLElement): Point {\n    const {top, left, width, height} = target.getBoundingClientRect();\n\n    return {x: left + width + this._arrowSize, y: top + height / 2};\n  }\n\n  private getBottomPosition(target: HTMLElement): Point {\n    const {top, left, width, height} = target.getBoundingClientRect();\n\n    return {x: left + width / 2, y: top + height + this._arrowSize};\n  }\n\n  private getLeftPosition(target: HTMLElement): Point {\n    const {top, left, height} = target.getBoundingClientRect();\n\n    return {x: left - this._arrowSize, y: top + height / 2};\n  }\n\n  private getWidthHeight(el: ElementRef): Point {\n    const {width, height} = el.nativeElement.getBoundingClientRect();\n\n    return {x: width, y: height};\n  }\n}\n"]}