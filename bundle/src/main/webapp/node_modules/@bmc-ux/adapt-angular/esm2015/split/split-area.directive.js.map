{"version":3,"file":"split-area.directive.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/split/split-area.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {Directive, OnInit, OnDestroy, Input, ElementRef, Renderer2} from '@angular/core';\nimport {AdaptSplitComponent} from './split.component';\nimport {toBoolean} from '../common/utilities';\n\n\n@Directive({\n  selector: 'div[adaptSplitArea], div[adapt-split-area]',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class.hided]': '!visible'\n  }\n})\nexport class AdaptSplitAreaDirective implements OnInit, OnDestroy {\n\n  eventsLockFct: Function[] = [];\n\n  /**\n   * Order of the area. Useful if you show/hide areas using NgIf/NgFor and wants to keep the same order.\n   * If specified for all, areas displayed from order min to max\n   * @docs-default\n   */\n  @Input() set order(v: number) {\n    this._order = !isNaN(v) ? v : null;\n    this.split.updateArea(this, this._order, this._size, this._minSizePixel);\n  }\n\n  /**\n   * Percentage size of the area. If null or if all areas sizes not equal to 100, all areas will have the same size\n   * @docs-default\n   */\n  @Input() set size(v: number) {\n    this._size = !isNaN(v) ? v : null;\n    this.split.updateArea(this, this._order, this._size, this._minSizePixel);\n  }\n\n  @Input() set minSizePixel(v: number) {\n    this._minSizePixel = (!isNaN(v) && v > 0) ? v : 0;\n    this.split.updateArea(this, this._order, this._size, this._minSizePixel);\n  }\n\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  /**\n   * Toggles area visibility without removing it from the DOM. Useful for specific case like routing\n   * @docs-default true\n   */\n  @Input() set visible(v: boolean) {\n    this._visible = toBoolean(v);\n\n    if (this.visible) {\n      this.split.showArea(this);\n    } else {\n      this.split.hideArea(this);\n    }\n  }\n\n  private _order: number | null = null;\n  private _size: number | null = null;\n  private _minSizePixel: number = 0;\n  private _visible: boolean = true;\n\n  constructor(private elementRef: ElementRef,\n              private renderer: Renderer2,\n              private split: AdaptSplitComponent) {\n  }\n\n  ngOnInit(): void {\n    this.renderer.addClass(this.elementRef.nativeElement, 'split-area');\n    this.split.addArea(this, this._order, this._size, this._minSizePixel);\n  }\n\n  // TODO check if e argument can be removed\n  /*eslint-disable @typescript-eslint/no-unused-vars */\n\n  lockEvents(): void {\n    this.eventsLockFct.push(this.renderer.listen(this.elementRef.nativeElement, 'selectstart', e => false));\n    this.eventsLockFct.push(this.renderer.listen(this.elementRef.nativeElement, 'dragstart', e => false));\n  }\n  /*eslint-enable @typescript-eslint/no-unused-vars */\n\n  unlockEvents(): void {\n    while (this.eventsLockFct.length > 0) {\n      const fct = this.eventsLockFct.pop();\n\n      if (fct) {\n        fct();\n      }\n    }\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  setStyle(key: string, value: any): void {\n    this.renderer.setStyle(this.elementRef.nativeElement, key, value);\n  }\n\n  ngOnDestroy(): void {\n    this.split.removeArea(this);\n  }\n}\n"]}