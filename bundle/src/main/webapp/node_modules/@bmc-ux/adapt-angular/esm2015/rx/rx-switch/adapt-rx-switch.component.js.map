{"version":3,"file":"adapt-rx-switch.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/rx/rx-switch/adapt-rx-switch.component.ts","../../../../../../libs/adapt-angular/src/rx/rx-switch/adapt-rx-switch.component.html"],"names":[],"mappings":"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","sourcesContent":["import {ChangeDetectorRef, Component, ElementRef, Input, OnInit, Optional, Self, ViewChild} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularCustomEventType,\n  AdaptRadarAngularService\n} from '../../common/radar/adapt-radar';\n\nimport {AdaptRxFeedbackComponent, AdaptRxFormControlDirective} from '../form-control/index';\nimport {AdaptTranslateService} from '../../common/i18n/index';\n\n@Component({\n  selector: 'adapt-rx-switch',\n  templateUrl: './adapt-rx-switch.component.html',\n  preserveWhitespaces: false\n})\nexport class AdaptRxSwitchComponent extends AdaptRxFormControlDirective implements OnInit {\n  protected controlName: string = 'switch';\n\n  analyticsComponentName: typeof AdaptRadarAngularCustomEventName = AdaptRadarAngularCustomEventName;\n\n  /**\n   * Native input [value]\n   * @docs-default\n   */\n  @Input() value: string;\n\n  /**\n   * Control size\n   * @docs-default ''\n   */\n  @Input() size: string = '';\n\n  /**\n   * Enables 'before' label placement\n   * @docs-default false\n   */\n  @Input() isLabelBefore: boolean = false;\n\n  /**\n   * Toggle [checked] attribute.\n   * @docs-default\n   */\n  @Input()\n  get checked(): boolean {\n    return this._checked;\n  }\n\n  set checked(value: boolean) {\n    this._checked = Boolean(value);\n    this._checked = value;\n    this._onChange(this._checked);\n    this.stateChanges$.next();\n  }\n\n  /**\n   * Input reference\n   */\n  @ViewChild('inputRef', {static: true}) inputRef: ElementRef<HTMLInputElement>;\n\n  /**\n   * Reference on AdaptRxFeedbackComponent\n   */\n  @ViewChild('adaptRxFeedbackRef', {static: true}) adaptRxFeedbackRef: AdaptRxFeedbackComponent;\n\n  private _checked: boolean;\n  private _checkedStateOnInit: boolean;\n\n  constructor(@Optional() @Self() ngControl: NgControl,\n              _changeDetectorRef: ChangeDetectorRef,\n              public ts: AdaptTranslateService,\n              _adaptRadarService: AdaptRadarAngularService,\n              _elem: ElementRef<HTMLElement>) {\n    super(ngControl, ts, _adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptRxSwitch, _changeDetectorRef);\n  }\n\n  /**\n   * Check if the control has UI error state\n   */\n  get hasDangerState(): boolean {\n    return this.adaptRxFeedbackRef.hasUIErrorState;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this._checkedStateOnInit = this.checked;\n  }\n\n  inputClickHandler(event: Event): void {\n    this._adaptRadarService.sendCustomEventForAllProviders(AdaptRadarAngularCustomEventName.AdaptRxSwitch, {\n      GroupName: this.adaptRadarGroupName,\n      EventType: AdaptRadarAngularCustomEventType.Click,\n      Label: this.label,\n      Required: this.required,\n      Disabled: this.disabled,\n      ReadOnly: this.readonly,\n      DefaultState: this._checkedStateOnInit ? 'on' : 'off',\n      // The value is inverse because we get previous \"checked\" state here\n      SwitchedState: this.checked ? 'off' : 'on'\n    });\n\n    this._onTouched();\n\n    if (this.readonly) {\n      event.preventDefault();\n    }\n  }\n\n  inputChangeHandler(): void {\n    this.checked = !this.checked;\n  }\n\n  blurHandler(event: FocusEvent): void {\n    super.blurHandler(event);\n\n    this._onTouched();\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  writeValue(value: any): void {\n    if (value !== undefined) {\n      this._checked = Boolean(value);\n    }\n  }\n\n  protected _focusNativeElement(): void {\n    this.inputRef.nativeElement.focus();\n  }\n}\n","<div class=\"switcher\"\n     [class.switcher__before]=\"isLabelBefore\"\n     [class.has-danger]=\"adaptRxFeedbackRef.hasUIErrorState\"\n     [class.has-warning]=\"warningMessage\">\n  <div class=\"switch\"\n       [ngClass]=\"size ? 'switch-' + size : null\"\n       [class.readonly]=\"readonly\">\n    <label class=\"d-flex flex-row align-items-start\">\n      <input #inputRef\n             type=\"checkbox\"\n             role=\"checkbox\"\n             [id]=\"id\"\n             [required]=\"required\"\n             [disabled]=\"disabled\"\n             [readOnly]=\"readonly\"\n             [checked]=\"checked\"\n             [autofocus]=\"autofocus\"\n             [attr.name]=\"name\"\n             [attr.tabindex]=\"tabIndex\"\n             [attr.data-testid]=\"testID + '_input'\"\n             [attr.value]=\"value\"\n             [attr.aria-label]=\"ariaLabel\"\n             [attr.aria-labelledby]=\"ariaLabelledby\"\n             [attr.aria-describedby]=\"ariaDescribedBy\"\n             [attr.aria-checked]=\"checked\"\n             [attr.aria-required]=\"required\"\n             [attr.aria-invalid]=\"hasDangerState\"\n             [attr.aria-errormessage]=\"ariaErrorMessage\"\n             (click)=\"inputClickHandler($event)\"\n             (change)=\"inputChangeHandler()\"\n             (focus)=\"focusHandler($event)\"\n             (blur)=\"blurHandler($event)\"/>\n\n      <span class=\"switch__slider flex-shrink-0 flex-grow-0\"></span>\n\n      <div class=\"switch__item flex-shrink-1 flex-grow-1\"\n           [ngClass]=\"isLabelBefore ? 'label-before' : 'label-after'\">\n        <ng-container *ngIf=\"label\">\n          <span>{{label}}</span>\n\n          <ng-container *ngIf=\"required && requiredLabel\">\n            <span class=\"letter-space\"></span>\n            <span class=\"form-control-required\">{{requiredLabel}}</span>\n          </ng-container>\n\n          <span *ngIf=\"tooltip?.content\" (click)=\"$event.preventDefault()\">\n            <span class=\"letter-space\"></span>\n            <adapt-rx-control-label-tooltip [tooltip]=\"tooltip\"\n                                            [testID]=\"testID\"></adapt-rx-control-label-tooltip>\n          </span>\n\n          <div *ngIf=\"subLabel\" class=\"text-secondary\">{{subLabel}}</div>\n        </ng-container>\n      </div>\n    </label>\n  </div>\n\n  <adapt-rx-feedback #adaptRxFeedbackRef\n                     [ariaErrorMessage]=\"ariaErrorMessage\"\n                     [errors]=\"ngControl.errors\"\n                     [warningMessage]=\"warningMessage\"\n                     [controlTouched]=\"ngControl.touched\"\n                     (messageAppeared)=\"handleMessageAppeared($event, analyticsComponentName.AdaptRxSwitch)\"></adapt-rx-feedback>\n</div>\n"]}