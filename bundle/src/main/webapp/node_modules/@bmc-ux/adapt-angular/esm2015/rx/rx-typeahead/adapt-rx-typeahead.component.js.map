{"version":3,"file":"adapt-rx-typeahead.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/rx/rx-typeahead/adapt-rx-typeahead.component.ts","../../../../../../libs/adapt-angular/src/rx/rx-typeahead/adapt-rx-typeahead.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  Self,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {BACKSPACE, DELETE, DOWN_ARROW, ENTER, TAB, UP_ARROW} from '@angular/cdk/keycodes';\nimport {BehaviorSubject, fromEvent, Observable, OperatorFunction, Subject, Subscription, timer} from 'rxjs';\nimport {map, switchMap, take, takeUntil, tap} from 'rxjs/operators';\nimport {isNumber, toString} from 'lodash-es';\n\nimport {PlacementArray} from '../../common/positioning';\nimport {getEventKeyCode} from '../../common/key-codes';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularService\n} from '../../common/radar/adapt-radar';\nimport {AdaptDropdownDirective} from '../../dropdown/index';\nimport {AdaptRxFeedbackComponent, AdaptRxFormControlDirective, FormControlSize} from '../form-control/index';\nimport {\n  RxTypeaheadOption,\n  RxTypeaheadResultTemplateContext,\n  RxTypeaheadSelectItemEvent\n} from './adapt-rx-typeahead.types';\nimport {AdaptRxTypeaheadConfigService} from './adapt-rx-typeahead-config.service';\nimport {AdaptTranslateService} from '../../common/i18n/index';\nimport {AdaptDeviceDetectionService} from '../../common/device-detection.service';\nimport {KeyValueObject} from '../../common/common.models';\n\n@Component({\n  selector: 'adapt-rx-typeahead',\n  templateUrl: './adapt-rx-typeahead.component.html',\n  encapsulation: ViewEncapsulation.None,\n  styles: [`\n    /* Hack to avoid mobile zoom-in on input focus */\n    .typeahead-input_mobile, .typeahead-input_mobile:focus {\n      font-size: 1rem !important;\n    }\n  `]\n})\nexport class AdaptRxTypeaheadComponent extends AdaptRxFormControlDirective implements OnInit, OnDestroy, OnChanges {\n  protected controlName: string = 'typeahead';\n\n  term: string; // search term typed by user\n  results: RxTypeaheadOption[]; // results of searching by term\n  activeResultIndex: number = 0; // index of active result in the popup\n  activeDescendant: string; // [aria-activedescendant] value\n  isMobileOrTablet: boolean = false;\n  emptyResultMessage: string;\n\n  readonly RESULT_ACTIVE_CLASS: string = 'text-active';\n\n  /**\n   * The value for the \"autocomplete\" attribute for the \"<input>\" element\n   * @docs-default off\n   */\n  @Input() autocomplete: string = 'off';\n\n  /**\n   * A placeholder string for the input filed\n   * @docs-default\n   */\n  @Input() placeholder: string;\n\n  /**\n   * Allows using a custom entered text as a model value.\n   * In case if there is no matched options with entered value\n   * @docs-default false\n   */\n  @Input() editable: boolean = false;\n\n  /**\n   * Hold focus on the first result item while typing\n   * @docs-default true\n   */\n  @Input() focusFirst: boolean = true;\n\n  /**\n   *  After menu close, restore focus the element which was in focus before menu open\n   *  @docs-default false\n   */\n  @Input() restoreFocusAfterClose: boolean = false;\n\n  /**\n   * The function that converts an item from the result list to a \"string\" to display in the \"<input>\" field\n   * @docs-default item\n   */\n  @Input() inputFormatter: (item: RxTypeaheadOption) => string = toString;\n\n  /**\n   * The function that converts a stream of text values from the \"<input>\" element to the stream of the array of result items.\n   * Use it instead of (text: Observable<string>) => Observable<any[]> as it provides better type-checking\n   * @docs-default\n   */\n  @Input() typeahead: OperatorFunction<string, RxTypeaheadOption[]>;\n\n  /**\n   * The function that converts an item from the result list to a \"string\" to display in the popup\n   * @docs-default item\n   */\n  @Input() resultFormatter: (item: RxTypeaheadOption) => string = toString;\n\n  /**\n   * The template to override the way resulting items are displayed in the popup\n   * @docs-default\n   */\n  @Input() resultTemplate: TemplateRef<RxTypeaheadResultTemplateContext>;\n\n  /**\n   * Show the hint in the \"<input>\" when an item in the result list matches\n   * @docs-default false\n   */\n  @Input() showHint: boolean = false;\n\n  /**\n   * The preferred placement of the typeahead\n   * @docs-default bottom-left\n   */\n  @Input() placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right', 'auto'];\n\n  /**\n   * Attach popup to the body\n   * @docs-default false\n   */\n  @Input() appendToBody: boolean;\n\n  /**\n   * Control size\n   * @docs-default default\n   */\n  @Input() size: FormControlSize = 'default';\n\n  /**\n   * Max height in pixels for the popup before scroll visible. On mobile max height calculates automatically\n   * @docs-default 200\n   */\n  @Input() popupMaxHeight: number = 200;\n\n  /**\n   * Use disable styles for readonly state\n   * @docs-default false\n   */\n  @Input() disabledStyleForReadonlyState: boolean = false;\n\n  /**\n   * Use to toggle virtual scroll feature to render results. Can be suitable for big amount of results\n   * @docs-default false\n   */\n  @Input() virtualScroll: boolean = false;\n\n  /**\n   * Set <b>[itemSize]</b> input for virtual scroll feature. More info can be found here - <a href=\"https://material.angular.io/cdk/scrolling/api\" target=\"_blank\">https://material.angular.io/cdk/scrolling/api</a>\n   * @docs-default 32\n   */\n  @Input() virtualScrollItemSize: number = 32;\n\n  /**\n   * Minimum amount of content buffer (in pixels) that the viewport must render.\n   * @docs-default 400\n   */\n  @Input() minBufferPx: number = 400;\n\n  /**\n   * Configures how much buffer space to render back up to when it detects that more buffer is required.\n   * @docs-default 1200\n   */\n  @Input() maxBufferPx: number = 1200;\n\n  /**\n   * Use to set results dropdown height. On mobile height calculates automatically\n   * @docs-default 13.75rem\n   */\n  @Input() virtualScrollDropdownHeight: string = '13.75rem';\n\n  /**\n   * Custom class for the dropdown menu\n   * @docs-default\n   * @since v10.11.0\n   */\n  @Input() popupClass: string;\n\n  /**\n   * Popup width. By default, it calculates automatically:\n   * it takes the width of the input element if it's more than 200px, otherwise has 200px width.\n   * @docs-default\n   * @since v10.15.0\n   */\n  @Input() popupWidth: string;\n\n  /**\n   * Offset from the top edge of the viewport during auto-scroll when focusing on input on mobile devices.\n   * To disable autoscroll need to pass 'null'.\n   * @docs-default 0\n   * @since v11.2.0\n   */\n  @Input() mobileFocusAutoscrollTopOffset: number = 0;\n\n  /**\n   * Allow showing the empty result message if no items to display\n   * @docs-default false\n   * @since v11.8.0\n   */\n  @Input() showEmptyResultMessage: boolean = false;\n\n  /**\n   * The message that will be shown under the result list if at least one result item exists\n   * @docs-default\n   * @since v11.8.0\n   */\n  @Input() resultStatusMessage: string;\n\n  /**\n   * Control clear button visibility\n   * @docs-default true\n   *\n   * @since v12.15.0\n   */\n  @Input() showClearButton: boolean = true;\n\n  /**\n   * Clear button text (sr-only)\n   * @docs-default Clear\n   *\n   * @since v12.15.0\n   */\n  @Input() clearButtonText: string;\n\n  /* eslint-disable @angular-eslint/no-output-on-prefix */\n  /**\n   * An event emitted right before an item is selected from the result list.\n   */\n  @Output() readonly onSelectItem: EventEmitter<RxTypeaheadSelectItemEvent> = new EventEmitter<RxTypeaheadSelectItemEvent>();\n  /* eslint-enable @angular-eslint/no-output-on-prefix */\n\n  /**\n   * Native input reference\n   */\n  @ViewChild('inputRef', {static: true}) inputRef: ElementRef<HTMLInputElement>;\n\n  @ViewChild('typeaheadContainer', {static: true}) typeaheadContainer: ElementRef<HTMLDivElement>;\n\n  /**\n   * Popup reference\n   */\n  @ViewChild('adaptDropdownDirective', {static: true}) popup: AdaptDropdownDirective;\n\n  /**\n   * Reference on AdaptRxFeedbackComponent\n   */\n  @ViewChild('adaptRxFeedbackRef', {static: true}) adaptRxFeedbackRef: AdaptRxFeedbackComponent;\n\n  private _subscription: Subscription;\n  private _closed$: Subject<null> = new Subject();\n  private _inputValueBackup: string;\n  private _valueChanges: Observable<string>;\n  private _resubscribeTypeahead: BehaviorSubject<null>;\n  private _removeVisualViewportResizeListener: () => void;\n  private _lastKeyCode: number;\n  private _inputWidth: number;\n  private _inputInFocus: boolean = false;\n\n  /**\n   * Indicates if input was changed after selection from listbox.\n   */\n  private _inputValueChanged: boolean = false;\n\n  constructor(@Optional() @Self() ngControl: NgControl,\n              private _renderer: Renderer2,\n              private _ngZone: NgZone,\n              adaptRxTypeaheadConfigService: AdaptRxTypeaheadConfigService,\n              _changeDetectorRef: ChangeDetectorRef,\n              public ts: AdaptTranslateService,\n              private _deviceDetector: AdaptDeviceDetectionService,\n              _adaptRadarService: AdaptRadarAngularService,\n              _elem: ElementRef<HTMLElement>) {\n    super(ngControl, ts, _adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptRxTypeahead, _changeDetectorRef);\n\n    this.size = adaptRxTypeaheadConfigService.size;\n    this.editable = adaptRxTypeaheadConfigService.editable;\n    this.focusFirst = adaptRxTypeaheadConfigService.focusFirst;\n    this.showHint = adaptRxTypeaheadConfigService.showHint;\n    this.placement = adaptRxTypeaheadConfigService.placement;\n\n    this.setDefaultTexts(ts.getCurrentLanguage());\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.isMobileOrTablet = this._deviceDetector.isMobile() || this._deviceDetector.deviceTablet();\n\n    this._valueChanges = fromEvent<Event>(this.inputRef.nativeElement, 'input')\n      .pipe(map($event => ($event.target as HTMLInputElement).value));\n\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n\n    const inputValues$ = this._valueChanges.pipe(tap(value => {\n      this._inputValueBackup = value;\n      this._inputValueChanged = true;\n      this._onChange(this.editable ? value : undefined);\n    }));\n    const results$ = inputValues$.pipe(this.typeahead);\n    const userInput$ = this._resubscribeTypeahead.pipe(switchMap(() => results$));\n\n    this._subscription = this._subscribeToUserInput(userInput$);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // on changes to the input formatter, update the displayed input value by\n    // applying the new formatter to the current value of the bound form control\n    if (changes.inputFormatter && this.ngControl && this.ngControl.value) {\n      this._writeInputValue(this._getFormattedItemForInput(this.ngControl.value));\n    }\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n\n    this._closePopup();\n    this._unsubscribeFromUserInput();\n    this._unsubscribeFromVisualViewportResize();\n  }\n\n  setDefaultTexts(translation: KeyValueObject): void {\n    this.emptyResultMessage = translation['adapt.select.notFound'];\n    this.clearButtonText = this.clearButtonText || translation['adapt.common.clear'];\n  }\n\n  get popupId(): string {\n    return this.id + '_popup';\n  }\n\n  /**\n   * Check if the control has UI error state\n   */\n  get hasDangerState(): boolean {\n    return this.adaptRxFeedbackRef.hasUIErrorState;\n  }\n\n  /**\n   * Check if component should have success appearance if no errors\n   */\n  get hasSuccessState(): boolean {\n    // return this.showValidState && this.ngControl.touched && !this.ngControl.errors;\n    return false;\n  }\n\n  /**\n   * Get active result value\n   */\n  get activeResult(): RxTypeaheadOption {\n    return this.results ? this.results[this.activeResultIndex] : undefined;\n  }\n\n  /**\n   * Own instance implementation of writeValue from ControlValueAccessor\n   */\n  writeValue(value: RxTypeaheadOption): void {\n    const formattedValue = this._getFormattedItemForInput(value);\n\n    this._writeInputValue(formattedValue);\n    this._inputValueBackup = formattedValue;\n  }\n\n  /**\n   * Dismisses typeahead popup window\n   */\n  dismissPopup(): void {\n    this._resubscribeTypeahead.next(null);\n    this.activeDescendant = undefined;\n\n    if (!this._inputInFocus) {\n      this._onTouched();\n    }\n  }\n\n  /**\n   * Handle native input (blur) event\n   */\n  blurHandler(event: FocusEvent): void {\n    super.blurHandler(event);\n    this._inputInFocus = false;\n\n    this._resubscribeTypeahead.next(null);\n    this._unsubscribeFromVisualViewportResize();\n\n    if (!this.popup.isOpen()) {\n      this._setValueFromProposal();\n      this._onTouched();\n    }\n  }\n\n  focusHandler(event: FocusEvent): void {\n    super.focusHandler(event);\n    this._inputInFocus = true;\n\n    this._inputWidth = this.typeaheadContainer.nativeElement.offsetWidth;\n\n    if (this.isMobileOrTablet) {\n      if (!this._removeVisualViewportResizeListener) {\n        const visualViewport = window.visualViewport;\n        const dropdownVerticalMargin = this.virtualScroll ? 20 : 10;\n\n        this._removeVisualViewportResizeListener = this._renderer.listen(visualViewport, 'resize', () => {\n          this.popupMaxHeight = visualViewport.height - this.typeaheadContainer.nativeElement.offsetHeight - dropdownVerticalMargin;\n        });\n      }\n\n      if (isNumber(this.mobileFocusAutoscrollTopOffset)) {\n        this._ngZone.runOutsideAngular(() => {\n          // This timer is added to properly scroll to the top of typeahead component on mobile devices\n          timer(200)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n              this.typeaheadContainer.nativeElement.scrollIntoView({behavior: 'auto'});\n              window.scrollBy(0, -this.mobileFocusAutoscrollTopOffset);\n            });\n        });\n      }\n    }\n  }\n\n  getDropdownStyles(): KeyValueObject {\n    const minWidth = 200;\n\n    return {\n      width: this.popupWidth ? `${this.popupWidth}` : `${this._inputWidth >= minWidth ? this._inputWidth : minWidth}px`,\n      maxHeight: this.virtualScroll ? 'auto' : `${this.popupMaxHeight}px`\n    };\n  }\n\n  /**\n   * Handle native input (keydown) event\n   */\n  inputKeydownHandler(event: KeyboardEvent): void {\n    this._lastKeyCode = getEventKeyCode(event);\n\n    if (!this.popup.isOpen()) {\n      return;\n    }\n\n    switch (this._lastKeyCode) {\n      case DOWN_ARROW: {\n        event.preventDefault();\n        this._activateNextResult();\n        this._showHint(false);\n        this._scrollToActiveResultItem();\n        break;\n      }\n      case UP_ARROW: {\n        event.preventDefault();\n        this._activatePrevResult();\n        this._showHint(false);\n        this._scrollToActiveResultItem();\n        break;\n      }\n      case ENTER: {\n        const result = this.activeResult;\n\n        if (result !== null && result !== undefined) {\n          event.preventDefault();\n          event.stopPropagation();\n          this._selectResult(result);\n        }\n\n        this._closePopup();\n        break;\n      }\n      case TAB: {\n        this._closePopup();\n        break;\n      }\n    }\n  }\n\n  /**\n   * Select result\n   */\n  selectResult(item: string): void {\n    this._selectResult(item);\n    this._closePopup();\n  }\n\n  trackByForResults(index: number, item: RxTypeaheadOption): RxTypeaheadOption {\n    return item;\n  }\n\n  clearSearchValue(): void {\n    this.writeValue('');\n    this._onChange('');\n    this._inputValueChanged = false;\n    this._closePopup();\n    this.term = '';\n    this._focusNativeElement();\n  }\n\n  /**\n   * Implementation from the base class\n   */\n  protected _focusNativeElement(): void {\n    this.inputRef.nativeElement.focus();\n  }\n\n  /**\n   * Check if active result present\n   */\n  private _hasActiveResult(): boolean {\n    return this.activeResultIndex > -1 && this.activeResultIndex < this.results.length;\n  }\n\n  /**\n   * Activate the next result from results list\n   */\n  private _activateNextResult(): void {\n    if (this.activeResultIndex < this.results.length - 1) {\n      this.activeResultIndex++;\n    }\n    this._activeResultChanged();\n  }\n\n  /**\n   * Activate the prev result from results list\n   */\n  private _activatePrevResult(): void {\n    if (this.activeResultIndex > 0) {\n      this.activeResultIndex--;\n    }\n    this._activeResultChanged();\n  }\n\n  /**\n   * Reset active result\n   */\n  private _resetActiveResult(): void {\n    const setDefault = (): number => this.activeResultIndex = this.popup.isOpen() && this.focusFirst ? 0 : -1;\n\n    if (this._inputValueBackup) {\n      const firstMatchedIndex = this.results.findIndex(item => this._getFormattedItemForInput(item)?.toLowerCase().startsWith(this._inputValueBackup.toLowerCase()));\n\n      if (firstMatchedIndex > -1) {\n        this.activeResultIndex = firstMatchedIndex;\n      } else {\n        setDefault();\n      }\n    } else {\n      setDefault();\n    }\n    this._activeResultChanged();\n  }\n\n  /**\n   * Active result changed\n   */\n  private _activeResultChanged(): void {\n    this.activeDescendant = (this.activeResultIndex >= 0 && this.activeResult) ?\n      this.popupId + '-' + this.resultFormatter(this.activeResult) : undefined;\n  }\n\n  /**\n   * Scroll to active result item\n   */\n  private _scrollToActiveResultItem(): void {\n    this._ngZone.onStable.pipe(takeUntil(this.destroy$), take(1)).subscribe(() => {\n      const activeItem: HTMLElement = document.querySelector(`#${this.popupId} .${this.RESULT_ACTIVE_CLASS}`);\n\n      if (activeItem) {\n        activeItem.scrollIntoView({block: 'nearest', inline: 'nearest'});\n      }\n    });\n  }\n\n  /**\n   * Open result's popup\n   */\n  private _openPopup(): void {\n    if (this.readonly || this.disabled) {\n      return;\n    }\n\n    if (!this.popup.isOpen()) {\n      this._inputValueBackup = this.inputRef.nativeElement.value;\n      this.popup.open();\n      this._activeResultChanged();\n    } else {\n      this._ngZone.onStable\n        .pipe(\n          takeUntil(this.destroy$),\n          take(1)\n        )\n        .subscribe(() => {\n          this.popup?.menuWindowRef?.instance.recalculatePosition();\n        });\n    }\n  }\n\n  /**\n   * Close result's popup\n   */\n  private _closePopup(): void {\n    this._closed$.next();\n    this.popup.close();\n    this.activeDescendant = undefined;\n  }\n\n  /**\n   * Select result and propagate change\n   */\n  private _selectResult(result: RxTypeaheadOption): void {\n    let defaultPrevented = false;\n\n    this.onSelectItem.emit({\n      item: result,\n      preventDefault: () => {\n        defaultPrevented = true;\n      }\n    });\n    this._resubscribeTypeahead.next(null);\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n      this._onChange(result);\n      this._inputValueChanged = false;\n    }\n  }\n\n  /**\n   * Show hint in the input\n   * @param onlyFromStart - indicate that hint should display only if input value is a start of proposal values.\n   * For example, if onlyFromStart = true, then on \"app\" input \"apple\" hint would be shown, \"pineapple\" would not.\n   */\n  private _showHint(onlyFromStart: boolean = true): void {\n    if (this.showHint && this._hasActiveResult() && this._inputValueBackup\n      && ![BACKSPACE, DELETE].includes(this._lastKeyCode)) {\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\n      const formattedVal = this._getFormattedItemForInput(this.activeResult);\n\n      if (userInputLowerCase === formattedVal?.substr(0, this._inputValueBackup.length).toLowerCase()) {\n        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n        this.inputRef.nativeElement.setSelectionRange.apply(\n          this.inputRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n      } else if (!onlyFromStart) {\n        this._writeInputValue(formattedVal);\n      }\n    }\n  }\n\n  /**\n   * Returns formatted item if [inputFormatter] defined or toString(item)\n   */\n  private _getFormattedItemForInput(item: RxTypeaheadOption): string {\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  /**\n   * Write value to native input\n   */\n  private _writeInputValue(value: string): void {\n    this._renderer.setProperty(this.inputRef.nativeElement, 'value', toString(value));\n  }\n\n  /**\n   * Subscribe to native control (input) event\n   */\n  private _subscribeToUserInput(userInput$: Observable<RxTypeaheadOption[]>): Subscription {\n    return userInput$.subscribe((results) => {\n      if (!results?.length && !this.showEmptyResultMessage) {\n        this._closePopup();\n      } else {\n        if (this.isMobileOrTablet) {\n          // Timeout added to wait until focus animation on mobile devices stabilized and dropdown can be shown with correct max-height\n          setTimeout(() => {\n            this._openPopup();\n          }, 300);\n        } else {\n          this._openPopup();\n        }\n\n        this.results = results;\n        this.term = this.inputRef.nativeElement.value;\n\n        this._resetActiveResult();\n        this._showHint();\n      }\n    });\n  }\n\n  /**\n   * Unsubscribe from native control (input) event\n   */\n  private _unsubscribeFromUserInput(): void {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n    this._subscription = null;\n  }\n\n  private _unsubscribeFromVisualViewportResize(): void {\n    if (this._removeVisualViewportResizeListener) {\n      this._removeVisualViewportResizeListener();\n      this._removeVisualViewportResizeListener = null;\n    }\n  }\n\n  private _setValueFromProposal(): void {\n    if (!this.editable && this._inputValueBackup && this._inputValueChanged) {\n      if (this.showHint && this.activeResult && (this.activeResult.toLowerCase() === this.inputRef.nativeElement.value)) {\n        this._selectResult(this.activeResult);\n      } else if (!this.showHint && this.results) {\n        const relativeResult = this.results\n          .find(item => this._getFormattedItemForInput(item)?.toLowerCase() === this._inputValueBackup.toLowerCase());\n\n        relativeResult !== undefined && this._selectResult(relativeResult);\n      }\n    }\n  }\n}\n","<div [class.has-danger]=\"hasDangerState\"\n     [class.has-warning]=\"warningMessage\"\n     [class.has-success]=\"hasSuccessState\"\n     #typeaheadContainer>\n  <adapt-rx-control-label [for]=\"id\"\n                          [label]=\"label\"\n                          [subLabel]=\"subLabel\"\n                          [requiredLabel]=\"requiredLabel\"\n                          [showRequiredLabel]=\"required\"\n                          [tooltip]=\"tooltip\"\n                          [testID]=\"testID\"></adapt-rx-control-label>\n\n  <div adaptDropdown\n       [adaptRadarDisableEventSending]=\"true\"\n       #adaptDropdownDirective=\"adaptDropdown\"\n       [setMobileState]=\"false\"\n       [autoFocusFirst]=\"false\"\n       [placement]=\"placement\"\n       [appendToBody]=\"appendToBody\"\n       [autoClose]=\"'outside'\"\n       [restoreFocusAfterClose]=\"restoreFocusAfterClose\"\n       (onClose)=\"dismissPopup()\">\n    <div adaptDropdownAnchor class=\"rx-typeahead__input-wrapper\">\n      <input type=\"text\"\n             #inputRef\n             class=\"form-control rx-form-control\"\n             [class.form-control-disabled-look]=\"readonly && this.disabledStyleForReadonlyState\"\n             [class.form-control-sm]=\"size === 'sm'\"\n             [class.form-control-lg]=\"size === 'lg'\"\n             [class.typeahead-input_mobile]=\"isMobileOrTablet\"\n             autocapitalize=\"off\"\n             autocorrect=\"off\"\n             role=\"combobox\"\n             aria-multiline=\"false\"\n             [id]=\"id\"\n             [required]=\"required\"\n             [disabled]=\"disabled\"\n             [readOnly]=\"readonly\"\n             [autofocus]=\"autofocus\"\n             [autocomplete]=\"autocomplete\"\n             [attr.placeholder]=\"placeholder\"\n             [attr.tabindex]=\"tabIndex\"\n             [attr.data-testid]=\"testID + '_input'\"\n             [attr.aria-label]=\"ariaLabel\"\n             [attr.aria-labelledby]=\"ariaLabelledby\"\n             [attr.aria-describedby]=\"ariaDescribedBy\"\n             [attr.aria-required]=\"required\"\n             [attr.aria-invalid]=\"hasDangerState\"\n             [attr.aria-errormessage]=\"ariaErrorMessage\"\n             [attr.aria-autocomplete]=\"showHint ? 'both' : 'list'\"\n             [attr.aria-activedescendant]=\"activeDescendant\"\n             [attr.aria-controls]=\"adaptDropdownDirective.isOpen() ? popupId : null\"\n             [attr.aria-expanded]=\"adaptDropdownDirective.isOpen()\"\n             [attr.aria-readonly]=\"readonly\"\n             [attr.aria-disabled]=\"disabled\"\n             (focus)=\"focusHandler($event)\"\n             (blur)=\"blurHandler($event)\"\n             (keydown)=\"inputKeydownHandler($event)\">\n      <button class=\"btn btn-link d-icon-cross_adapt rx-typeahead__clear-btn\"\n              type=\"button\"\n              *ngIf=\"showClearButton && inputRef.value && !(disabled || readonly)\"\n              [class.btn-sm]=\"size === 'sm'\"\n              [class.btn-lg]=\"size === 'lg'\"\n              [disabled]=\"disabled || readonly\"\n              [attr.data-testid]=\"testID + '_clear'\"\n              (click)=\"clearSearchValue()\">\n        <span class=\"sr-only\">{{clearButtonText}}</span>\n      </button>\n    </div>\n\n    <ng-template adaptDropdownMenuTemplate>\n      <div class=\"dropdown-menu\"\n           adaptDropdownMenu\n           role=\"listbox\"\n           aria-live=\"polite\"\n           [id]=\"popupId\"\n           [ngStyle]=\"getDropdownStyles()\"\n           [ngClass]=\"popupClass\">\n        <ng-template #defaultResultTemplate\n                     let-result=\"result\"\n                     let-term=\"term\"\n                     let-formatter=\"formatter\">\n          <adapt-highlight [result]=\"resultFormatter(result)\" [term]=\"term\"></adapt-highlight>\n        </ng-template>\n\n        <div class=\"px-3\">\n          <adapt-rx-feedback #popupFeedback\n                             [errors]=\"ngControl.errors\"\n                             [warningMessage]=\"warningMessage\"\n                             [controlTouched]=\"ngControl.touched\"\n                             [alertFeedbackStyle]=\"true\"\n                             [alertFeedbackTruncation]=\"!isMobileOrTablet\"></adapt-rx-feedback>\n        </div>\n\n        <div class=\"rx-typeahead-popup-content\" [class.mt-2]=\"popupFeedback.hasUIErrorState || warningMessage\">\n          <ng-container *ngIf=\"virtualScroll\">\n            <cdk-virtual-scroll-viewport\n              [itemSize]=\"virtualScrollItemSize\"\n              [minBufferPx]=\"minBufferPx\"\n              [maxBufferPx]=\"maxBufferPx\"\n              [style.height]=\"isMobileOrTablet ? popupMaxHeight + 'px' : virtualScrollDropdownHeight\">\n              <button type=\"button\"\n                      class=\"dropdown-item rx-typeahead__dropdown-item\"\n                      role=\"option\"\n                      tabindex=\"-1\"\n                      *cdkVirtualFor=\"let result of results; let index = index; trackBy: trackByForResults\"\n                      [id]=\"popupId + '-' + resultFormatter(result)\"\n                      [attr.data-testid]=\"testID + '_item-' + index\"\n                      [ngClass]=\"index === activeResultIndex ? RESULT_ACTIVE_CLASS : ''\"\n                      (click)=\"selectResult(result)\">\n                <ng-template [ngTemplateOutlet]=\"resultTemplate || defaultResultTemplate\"\n                             [ngTemplateOutletContext]=\"{\n                                result: result,\n                                term: term,\n                                formatter: resultFormatter\n                                }\"></ng-template>\n              </button>\n            </cdk-virtual-scroll-viewport>\n          </ng-container>\n\n          <ng-container *ngIf=\"!virtualScroll\">\n            <button type=\"button\"\n                    class=\"dropdown-item rx-typeahead__dropdown-item\"\n                    role=\"option\"\n                    tabindex=\"-1\"\n                    *ngFor=\"let result of results; let index = index; trackBy: trackByForResults\"\n                    [attr.data-testid]=\"testID + '_item-' + index\"\n                    [id]=\"popupId + '-' + resultFormatter(result)\"\n                    [ngClass]=\"index === activeResultIndex ? RESULT_ACTIVE_CLASS : ''\"\n                    (click)=\"selectResult(result)\">\n              <ng-template [ngTemplateOutlet]=\"resultTemplate || defaultResultTemplate\"\n                           [ngTemplateOutletContext]=\"{\n                                result: result,\n                                term: term,\n                                formatter: resultFormatter\n                                }\"></ng-template>\n            </button>\n          </ng-container>\n        </div>\n\n        <div role=\"status\" tabindex=\"-1\">\n          <div *ngIf=\"resultStatusMessage && results?.length\"\n               class=\"dropdown-header text-tertiary font-weight-default pt-3\">{{resultStatusMessage}}</div>\n\n          <div *ngIf=\"showEmptyResultMessage && !results?.length\"\n               class=\"dropdown-header text-tertiary font-weight-default\">{{emptyResultMessage}}</div>\n        </div>\n      </div>\n    </ng-template>\n  </div>\n\n  <adapt-rx-feedback #adaptRxFeedbackRef\n                     [ariaErrorMessage]=\"ariaErrorMessage\"\n                     [errors]=\"ngControl.errors\"\n                     [warningMessage]=\"warningMessage\"\n                     [controlTouched]=\"ngControl.touched\"></adapt-rx-feedback>\n</div>\n"]}