import { Component, ComponentFactoryResolver, ElementRef, Optional, SkipSelf, ViewChild, ViewContainerRef } from '@angular/core';
import { AdaptTranslateService } from '../common/i18n/index';
import { AdaptRadarAngularService } from '../common/radar/adapt-radar';
import { ModalDirective } from './modal';
import { ModalAnimation } from './modal.animation';
import { ActiveModalRef } from './modal.model';
import * as i0 from "@angular/core";
import * as i1 from "./modal.model";
import * as i2 from "../common/i18n/index";
import * as i3 from "../common/radar/adapt-radar";
const _c0 = ["contentPlacement"];
function AdaptDialogComponent_div_9_h5_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "h5", 12);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(2);
    i0.ɵɵclassProp("text-default", (ctx_r4._self.config.type || ctx_r4._self.configService.type) === "warning");
    i0.ɵɵproperty("id", ctx_r4.id + "_title");
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n                ", ctx_r4._self.title, "\n              ");
} }
function AdaptDialogComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    const _r6 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 9);
    i0.ɵɵtext(1, "\n              ");
    i0.ɵɵtemplate(2, AdaptDialogComponent_div_9_h5_2_Template, 2, 4, "h5", 10);
    i0.ɵɵtext(3, "\n              ");
    i0.ɵɵelementStart(4, "button", 11);
    i0.ɵɵlistener("click", function AdaptDialogComponent_div_9_Template_button_click_4_listener() { i0.ɵɵrestoreView(_r6); const ctx_r5 = i0.ɵɵnextContext(); return ctx_r5._self.dismiss(ctx_r5._self.reason.CLOSE_BTN); });
    i0.ɵɵelementEnd();
    i0.ɵɵtext(5, "\n            ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r0._self.title);
    i0.ɵɵadvance(2);
    i0.ɵɵclassProp("close-inverse", !((ctx_r0._self.config.type || ctx_r0._self.configService.type) === "warning" || (ctx_r0._self.config.type || ctx_r0._self.configService.type) === "default"));
    i0.ɵɵattribute("aria-label", ctx_r0.closeText);
} }
function AdaptDialogComponent_ng_template_14_Template(rf, ctx) { }
/**
 * Adapt Dialog Component
 */
export class AdaptDialogComponent extends ModalDirective {
    constructor(_elRef, _componentFactoryResolver, _activeModalRef, _rootActiveModalRef, ts, _adaptRadarService) {
        // Call the parent constructor
        super(_elRef, _componentFactoryResolver, _activeModalRef, _rootActiveModalRef, ts, _adaptRadarService);
        this.ts = ts;
        this._self = this;
    }
    get modalDialogClass() {
        return '__is-dialog modal-dialog modal-' + (this.config.type || this.configService.type) + ' modal-size-' + (this.config.size || 'sm');
    }
    // Implementation of Modal abstract method
    getContentPlacementRef() {
        return this.contentPlacement;
    }
    ngOnInit() {
        super.ngOnInit();
    }
}
AdaptDialogComponent.ɵfac = function AdaptDialogComponent_Factory(t) { return new (t || AdaptDialogComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i1.ActiveModalRef), i0.ɵɵdirectiveInject(i1.ActiveModalRef, 12), i0.ɵɵdirectiveInject(i2.AdaptTranslateService), i0.ɵɵdirectiveInject(i3.AdaptRadarAngularService)); };
AdaptDialogComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptDialogComponent, selectors: [["adapt-dialog"]], viewQuery: function AdaptDialogComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 7, ViewContainerRef);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentPlacement = _t.first);
    } }, hostVars: 8, hostBindings: function AdaptDialogComponent_HostBindings(rf, ctx) { if (rf & 1) {
        i0.ɵɵsyntheticHostListener("@modalAnimation.done", function AdaptDialogComponent_animation_modalAnimation_done_HostBindingHandler($event) { return ctx._self.modalCloseAnimationEnd($event); });
    } if (rf & 2) {
        i0.ɵɵsyntheticHostProperty("@modalAnimation", true)("@backdropAnimation", true);
        i0.ɵɵclassMap(ctx._self.config.customClass || "");
        i0.ɵɵstyleProp("position", "fixed")("z-index", 1058);
    } }, features: [i0.ɵɵProvidersFeature([ActiveModalRef]), i0.ɵɵInheritDefinitionFeature], decls: 23, vars: 12, consts: [["role", "dialog", "aria-modal", "true", 1, "modal", 3, "adaptFocusHolder"], [1, "modal-scroll-container"], [3, "ngClass"], [1, "modal-content"], ["class", "modal-header", 4, "ngIf"], [3, "adaptRadarDisableEventSending", "config", "isVisible", "alertClosed"], ["alertsSection", ""], ["contentPlacement", ""], [1, "modal-backdrop", "fade"], [1, "modal-header"], ["class", "modal-title", 3, "id", "text-default", 4, "ngIf"], ["type", "button", "role", "button", "data-dismiss", "modal", 1, "close", 3, "click"], [1, "modal-title", 3, "id"]], template: function AdaptDialogComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtext(0, "\n    ");
        i0.ɵɵelementStart(1, "div", 0);
        i0.ɵɵtext(2, "\n      ");
        i0.ɵɵelementStart(3, "div", 1);
        i0.ɵɵtext(4, "\n        ");
        i0.ɵɵelementStart(5, "div", 2);
        i0.ɵɵtext(6, "\n          ");
        i0.ɵɵelementStart(7, "div", 3);
        i0.ɵɵtext(8, "\n            ");
        i0.ɵɵtemplate(9, AdaptDialogComponent_div_9_Template, 6, 4, "div", 4);
        i0.ɵɵtext(10, "\n            ");
        i0.ɵɵelementStart(11, "adapt-alert-animated", 5, 6);
        i0.ɵɵlistener("alertClosed", function AdaptDialogComponent_Template_adapt_alert_animated_alertClosed_11_listener($event) { return ctx.alertClosed.emit($event); });
        i0.ɵɵelementEnd();
        i0.ɵɵtext(13, "\n            ");
        i0.ɵɵtemplate(14, AdaptDialogComponent_ng_template_14_Template, 0, 0, "ng-template", null, 7, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtext(16, "\n          ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(17, "\n        ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(18, "\n      ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(19, "\n    ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(20, "\n\n    ");
        i0.ɵɵelement(21, "div", 8);
        i0.ɵɵtext(22, "\n  ");
    } if (rf & 2) {
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("adaptFocusHolder", true);
        i0.ɵɵattribute("aria-labelledby", ctx._self.title ? ctx.id + "_title" : undefined)("data-testid", ctx._self.config.testID);
        i0.ɵɵadvance(4);
        i0.ɵɵproperty("ngClass", ctx.modalDialogClass);
        i0.ɵɵadvance(2);
        i0.ɵɵclassProp("footer-align_left", ctx._self.config.footerAlignLeft || ctx._self.configService.footerAlignLeft);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx._self.showHeader);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("adaptRadarDisableEventSending", true)("config", ctx.alerts)("isVisible", ctx.alerts.length > 0);
        i0.ɵɵadvance(10);
        i0.ɵɵclassProp("show", !(ctx._self.config.hideBackdrop === undefined || ctx._self.config.hideBackdrop === true));
    } }, styles: [".modal-header[_ngcontent-%COMP%]{min-height:34px}"], data: { animation: ModalAnimation } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptDialogComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-dialog',
                template: `
    <div class="modal"
         role="dialog"
         aria-modal="true"
         [attr.aria-labelledby]="_self.title ? id + '_title' : undefined"
         [attr.data-testid]="_self.config.testID"
         [adaptFocusHolder]="true">
      <div class="modal-scroll-container">
        <div [ngClass]="modalDialogClass">
          <div class="modal-content"
               [class.footer-align_left]="_self.config.footerAlignLeft || _self.configService.footerAlignLeft">
            <div class="modal-header" *ngIf="_self.showHeader">
              <h5 class="modal-title"
                  *ngIf="_self.title"
                  [id]="id + '_title'"
                  [class.text-default]="(_self.config.type || _self.configService.type) === 'warning'">
                {{_self.title}}
              </h5>
              <button type="button"
                      role="button"
                      data-dismiss="modal"
                      class="close"
                      [class.close-inverse]="!((_self.config.type || _self.configService.type) === 'warning' || (_self.config.type || _self.configService.type) === 'default')"
                      [attr.aria-label]="closeText"
                      (click)="_self.dismiss(_self.reason.CLOSE_BTN)"></button>
            </div>
            <adapt-alert-animated #alertsSection
                                  [adaptRadarDisableEventSending]="true"
                                  [config]="alerts"
                                  [isVisible]="alerts.length > 0"
                                  (alertClosed)="alertClosed.emit($event)"></adapt-alert-animated>
            <ng-template #contentPlacement></ng-template>
          </div>
        </div>
      </div>
    </div>

    <div class="modal-backdrop fade"
         [class.show]="!(_self.config.hideBackdrop === undefined || _self.config.hideBackdrop === true)"></div>
  `,
                animations: ModalAnimation,
                // TODO: Move to @HostBinding
                // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                host: {
                    '[class]': '_self.config.customClass || ""',
                    '[style.position]': '"fixed"',
                    '[style.zIndex]': '1058',
                    '[@modalAnimation]': 'true',
                    '[@backdropAnimation]': 'true',
                    '(@modalAnimation.done)': '_self.modalCloseAnimationEnd($event)'
                },
                providers: [ActiveModalRef],
                styleUrls: ['./modal.css']
            }]
    }], function () { return [{ type: i0.ElementRef }, { type: i0.ComponentFactoryResolver }, { type: i1.ActiveModalRef }, { type: i1.ActiveModalRef, decorators: [{
                type: SkipSelf
            }, {
                type: Optional
            }] }, { type: i2.AdaptTranslateService }, { type: i3.AdaptRadarAngularService }]; }, { contentPlacement: [{
            type: ViewChild,
            args: ['contentPlacement', { read: ViewContainerRef, static: true }]
        }] }); })();
//# sourceMappingURL=dialog.component.js.map