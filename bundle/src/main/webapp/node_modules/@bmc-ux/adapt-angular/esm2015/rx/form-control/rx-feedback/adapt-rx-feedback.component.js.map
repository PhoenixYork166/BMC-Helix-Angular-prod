{"version":3,"file":"adapt-rx-feedback.component.js","sourceRoot":"","sources":["../../../../../../../libs/adapt-angular/src/rx/form-control/rx-feedback/adapt-rx-feedback.component.ts","../../../../../../../libs/adapt-angular/src/rx/form-control/rx-feedback/adapt-rx-feedback.component.html"],"names":[],"mappings":"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","sourcesContent":["import {ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, Output} from '@angular/core';\nimport {ValidationErrors} from '@angular/forms';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {asyncScheduler, ReplaySubject, Subject} from 'rxjs';\nimport {takeUntil, throttleTime} from 'rxjs/operators';\nimport {isEqual} from 'lodash-es';\n\nimport {SafeCdr} from '../../../common/safe-cdr';\nimport {FeedbackError, FeedbackMessage} from '../adapt-rx-form-control.types';\n\nimport {AdaptRxErrorBody} from '../rx-validators/index';\nimport {AdaptRxFeedbackService} from './adapt-rx-feedback.service';\n\n@Component({\n  selector: 'adapt-rx-feedback',\n  templateUrl: './adapt-rx-feedback.component.html',\n  animations: [\n    trigger('feedbackAnimation', [\n      state('void', style({overflow: 'hidden'})),\n      state('*', style({overflow: 'visible'})),\n      transition(\n        ':enter',\n        [\n          style({height: 0, opacity: 0, overflow: 'hidden'}),\n          animate('0.2s ease-in',\n            style({height: '*', opacity: 1, overflow: 'hidden'}))\n        ]\n      ),\n      transition(\n        ':leave',\n        [\n          style({height: '*', opacity: 1, overflow: 'hidden'}),\n          animate('0.2s ease-out',\n            style({height: 0, opacity: 0, overflow: 'hidden'}))\n        ]\n      )\n    ])\n  ]\n})\nexport class AdaptRxFeedbackComponent implements OnDestroy {\n  validationErrors: FeedbackError[] = [];\n\n  /**\n   * The ID of element which error state should be described\n   */\n  @Input() ariaErrorMessage: string;\n\n  /**\n   * Errors object\n   */\n  @Input() set errors(value: ValidationErrors | null) {\n    if (!isEqual(value, this._rawErrors)) {\n      this._rawErrors = value;\n      this._checkForErrors$.next();\n    }\n  }\n\n  /**\n   * Indicator if control touched\n   * Some of errors by default must be visible only if the control touched\n   */\n  @Input() set controlTouched(value: boolean) {\n    const isTouchedNext = Boolean(value);\n\n    if (this._isTouched !== isTouchedNext) {\n      this._isTouched = isTouchedNext;\n      this._checkForErrors$.next();\n    }\n  }\n\n  /**\n   * Success message\n   */\n  @Input() successMessage: string;\n\n  /**\n   * Warning message\n   */\n  @Input() warningMessage: string;\n\n  /**\n   * Show feedback messages with alert style\n   */\n  @Input() alertFeedbackStyle: boolean;\n\n  /**\n   * Enable alert truncation.\n   * Available only for [alertFeedbackStyle]\n   */\n  @Input() alertFeedbackTruncation: boolean;\n\n  /**\n   * The event firing when the component shows error state\n   */\n  @Output() readonly messageAppeared: EventEmitter<FeedbackMessage> = new EventEmitter<FeedbackMessage>();\n\n  private _rawErrors: ValidationErrors | null = null;\n  private _isTouched: boolean = false;\n  private _checkForErrors$: Subject<void> = new Subject();\n  private _destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              private _feedbackService: AdaptRxFeedbackService) {\n    // Subscribe on errors checking. Using subject to avoid redundant checking method calls\n    this._checkForErrors$\n      .pipe(\n        takeUntil(this._destroyed$),\n        throttleTime(100, asyncScheduler, {trailing: true})\n      )\n      .subscribe(() => {\n        this._checkForErrors();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed$.next(true);\n    this._destroyed$.complete();\n  }\n\n  /**\n   * Check if the error state is being\n   */\n  get hasUIErrorState(): boolean {\n    return Boolean(this.validationErrors.length);\n  }\n\n  /**\n   * Check if it must be success message be shown\n   */\n  get hasSuccessStateMessage(): boolean {\n    return Boolean(this.successMessage) && !this.validationErrors.length && this._isTouched;\n  }\n\n  /**\n   * Check if there are errors\n   */\n  protected _checkForErrors(): void {\n    const actualNgControlErrors = this._rawErrors;\n\n    if (actualNgControlErrors) {\n      Object.keys(actualNgControlErrors).forEach((actualNgControlErrorName) => {\n        // Get actual error from stored validation errors\n        const storedValidationError = this.validationErrors.find(elem => elem.name === actualNgControlErrorName);\n\n        // Get actual error body\n        let actualErrorBody: AdaptRxErrorBody = actualNgControlErrors[actualNgControlErrorName];\n\n        // Get error body by error key or default\n        const defaultError = this._feedbackService.defaultValidationErrors[actualNgControlErrorName] ||\n          this._feedbackService.defaultValidationErrors['default'];\n\n        // Extend actual error body with default properties\n        actualErrorBody = {\n          message: defaultError.getMessage(actualNgControlErrors[actualNgControlErrorName]),\n          showOnTouched: Boolean(defaultError.showOnTouched),\n          priority: defaultError.priority,\n          ...actualErrorBody\n        };\n\n        if (storedValidationError) {\n          // If actual error was stored previously, just update stored validation error body\n          storedValidationError.body = actualErrorBody;\n        } else {\n          if (!actualErrorBody.showOnTouched || (actualErrorBody.showOnTouched && this._isTouched)) {\n            this.validationErrors.push({name: actualNgControlErrorName, body: actualErrorBody});\n          }\n        }\n      });\n\n      // Find and remove errors in stored errors array which dont exist in FormControl\n      const errorsToRemove = this.validationErrors.filter(errorToRemove => {\n        return !Object.prototype.hasOwnProperty.call(actualNgControlErrors, errorToRemove.name) || (errorToRemove.body.showOnTouched && !this._isTouched);\n      });\n\n      errorsToRemove.forEach(errorToRemove => {\n        const index = this.validationErrors.indexOf(errorToRemove);\n\n        this.validationErrors.splice(index, 1);\n      });\n\n    } else {\n      this.validationErrors.length = 0;\n    }\n\n    // Sort validation errors by priority\n    this.validationErrors.sort((prevError, nextError) =>\n      prevError.body.priority - nextError.body.priority);\n\n    if (this.validationErrors.length > 0) {\n      this.messageAppeared.emit({errors: this.validationErrors});\n    }\n\n    // If the parent component uses OnPush strategy need to additionally notify about changes\n    SafeCdr.markForCheck(this._changeDetectorRef);\n  }\n}\n","<div class=\"form-control-feedback\">\n  <div *ngFor=\"let error of validationErrors\" [@feedbackAnimation]\n       class=\"rx-feedback-alert text-danger\"\n       [attr.id]=\"ariaErrorMessage\"\n       role=\"alert\">\n    <ng-container *ngIf=\"!alertFeedbackStyle\">{{error.body.message}}</ng-container>\n    <ng-container *ngIf=\"alertFeedbackStyle\" [ngTemplateOutlet]=\"solidFeedbackTemplate\"\n                  [ngTemplateOutletContext]=\"{$implicit: error.body.message, type: 'danger'}\"></ng-container>\n  </div>\n\n  <div *ngIf=\"hasSuccessStateMessage\" [@feedbackAnimation]\n       class=\"rx-feedback-alert text-success\"\n       role=\"alert\">\n    <ng-container *ngIf=\"!alertFeedbackStyle\">{{successMessage}}</ng-container>\n    <ng-container *ngIf=\"alertFeedbackStyle\" [ngTemplateOutlet]=\"solidFeedbackTemplate\"\n                  [ngTemplateOutletContext]=\"{$implicit: successMessage, type: 'success'}\"></ng-container>\n  </div>\n\n  <div *ngIf=\"warningMessage\" [@feedbackAnimation]\n       class=\"rx-feedback-alert text-warning\"\n       role=\"alert\">\n    <ng-container *ngIf=\"!alertFeedbackStyle\">{{warningMessage}}</ng-container>\n    <ng-container *ngIf=\"alertFeedbackStyle\" [ngTemplateOutlet]=\"solidFeedbackTemplate\"\n                  [ngTemplateOutletContext]=\"{$implicit: warningMessage, type: 'warning'}\"></ng-container>\n  </div>\n</div>\n\n<ng-template #solidFeedbackTemplate let-message let-type=\"type\">\n  <div class=\"py-1\" [class.alert_truncated-wrapper]=\"alertFeedbackTruncation\">\n    <div class=\"alert m-0 invisible\" *ngIf=\"alertFeedbackTruncation\">\n      <div class=\"alert-content\">&nbsp;</div>\n    </div>\n\n    <div class=\"alert m-0\"\n         [class.alert_truncated]=\"alertFeedbackTruncation\"\n         [class.alert-success]=\"type === 'success'\"\n         [class.alert-danger]=\"type === 'danger'\"\n         [class.alert-warning]=\"type === 'warning'\">\n      <div class=\"alert-icon\"\n           [class.d-icon-check_circle]=\"type === 'success'\"\n           [class.d-icon-exclamation_triangle]=\"type === 'danger'\"\n           [class.d-icon-exclamation_circle]=\"type === 'warning'\"></div>\n      <div class=\"alert-content\">{{message}}</div>\n    </div>\n  </div>\n</ng-template>\n"]}