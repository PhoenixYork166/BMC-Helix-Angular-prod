{"version":3,"file":"overlay-with-portal.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/common/overlay/overlay-with-portal.ts"],"names":[],"mappings":"AAKA,OAAO,EAAC,OAAO,EAAC,MAAM,MAAM,CAAC;AAG7B,OAAO,EAAC,0BAA0B,EAAE,mBAAmB,EAAC,MAAM,kBAAkB,CAAC;AAEjF,MAAM,OAAO,sBAAsB;IAKjC,YAAmB,MAAuD,EACtD,mBAAuC,EACvC,cAA6B,EAC7B,UAAqB,EACrB,SAAmB,EACnB,OAAe,EACf,QAAiB,EACjB,iBAAmC,EACnC,SAAmB,EACnB,cAA6B;QAT9B,WAAM,GAAN,MAAM,CAAiD;QACtD,wBAAmB,GAAnB,mBAAmB,CAAoB;QACvC,mBAAc,GAAd,cAAc,CAAe;QAC7B,eAAU,GAAV,UAAU,CAAW;QACrB,cAAS,GAAT,SAAS,CAAU;QACnB,YAAO,GAAP,OAAO,CAAQ;QACf,aAAQ,GAAR,QAAQ,CAAS;QACjB,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,cAAS,GAAT,SAAS,CAAU;QACnB,mBAAc,GAAd,cAAc,CAAe;QAXjD,aAAQ,GAAkB,IAAI,OAAO,EAAQ,CAAC;QAY5C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACxC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1D,CAAC;IAED;;OAEG;IACH,OAAO;QACL,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IAED;;OAEG;IACH,mBAAmB;;QACjB,IAAI,CAAC,UAAU,CAAC,sBAAsB,CACpC,mBAAmB,CACjB,MAAA,IAAI,CAAC,mBAAmB,0CAAE,kBAAkB,EAC5C,MAAA,IAAI,CAAC,mBAAmB,0CAAE,MAAM,EAChC,MAAA,IAAI,CAAC,mBAAmB,0CAAE,gBAAgB,EAC1C,MAAA,IAAI,CAAC,mBAAmB,0CAAE,uBAAuB,EACjD,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,cAAc,CAAC,CACvB,CAAC;IACJ,CAAC;IAEO,cAAc;QACpB,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CACzB,0BAA0B,CACxB,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,iBAAiB,CAAC,CAC1B,CAAC;IACJ,CAAC;CACF","sourcesContent":["import {ComponentPortal, DomPortal, TemplatePortal} from '@angular/cdk/portal';\nimport {ComponentRef, NgZone} from '@angular/core';\nimport {Direction} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\nimport {Overlay, OverlayConfig, OverlayContainer, OverlayRef, ViewportRuler} from '@angular/cdk/overlay';\nimport {Subject} from 'rxjs';\n\nimport {AdaptOverlayConfig} from './overlay.model';\nimport {getCalculatedOverlayConfig, getPositionStrategy} from './overlay-common';\n\nexport class AdaptOverlayWithPortal<T> {\n  overlayRef: OverlayRef;\n  componentRef: ComponentRef<T>;\n  destroy$: Subject<void> = new Subject<void>();\n\n  constructor(public portal: ComponentPortal<T> | TemplatePortal | DomPortal,\n              private _adaptOverlayConfig: AdaptOverlayConfig,\n              private _overlayConfig: OverlayConfig,\n              private _direction: Direction,\n              private _document: Document,\n              private _ngZone: NgZone,\n              private _overlay: Overlay,\n              private _overlayContainer: OverlayContainer,\n              private _platform: Platform,\n              private _viewportRuler: ViewportRuler) {\n    this.overlayRef = this._getOverlayRef();\n    this.componentRef = this.overlayRef.attach(this.portal);\n  }\n\n  /**\n   * Destroy the overlay\n   */\n  destroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.destroy$ = null;\n\n    this.overlayRef.detach();\n    this.componentRef = null;\n\n    this.overlayRef.dispose();\n    this.overlayRef = null;\n  }\n\n  /**\n   * Update the overlay position with updating the current position strategy\n   */\n  updatePositionForce(): void {\n    this.overlayRef.updatePositionStrategy(\n      getPositionStrategy(\n        this._adaptOverlayConfig?.connectedPositions,\n        this._adaptOverlayConfig?.origin,\n        this._adaptOverlayConfig?.positionStrategy,\n        this._adaptOverlayConfig?.transformOriginSelector,\n        this._direction,\n        this._document,\n        this._overlay,\n        this._overlayContainer,\n        this._platform,\n        this._viewportRuler)\n    );\n  }\n\n  private _getOverlayRef(): OverlayRef {\n    return this._overlay.create(\n      getCalculatedOverlayConfig(\n        this._adaptOverlayConfig,\n        this._overlayConfig,\n        this._overlay,\n        this._direction,\n        this._viewportRuler,\n        this._ngZone,\n        this._document,\n        this._platform,\n        this._overlayContainer)\n    );\n  }\n}\n"]}