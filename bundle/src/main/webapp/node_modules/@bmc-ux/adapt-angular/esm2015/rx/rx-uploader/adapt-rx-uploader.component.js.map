{"version":3,"file":"adapt-rx-uploader.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/rx/rx-uploader/adapt-rx-uploader.component.ts","../../../../../../libs/adapt-angular/src/rx/rx-uploader/adapt-rx-uploader.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Injector,\n  Input,\n  KeyValueDiffers,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Renderer2,\n  Self,\n  TemplateRef,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {AnimationBuilder, AnimationPlayer} from '@angular/animations';\nimport {NgControl} from '@angular/forms';\nimport {fromEvent, merge} from 'rxjs';\nimport {filter, take, takeUntil, tap} from 'rxjs/operators';\nimport {isEqual, isNil} from 'lodash-es';\nimport {AdaptRadarAngularCustomEventName, AdaptRadarAngularService} from '../../common/radar/adapt-radar';\n\nimport {AdaptRxFeedbackComponent, AdaptRxFormControlDirective} from '../form-control/index';\nimport {AdaptRxUploaderConfigService} from './adapt-rx-uploader-config.service';\nimport {formatString, isUndefined, toArray} from '../../common/utilities';\nimport {KeyValueObject} from '../../common/common.models';\nimport {retrieveFileSize} from '../../common/uploader/uploader';\nimport {Icon, IconManager} from '../../common/uploader/services/icons-manager';\nimport {FileManager} from '../../common/uploader/services/file-manager';\nimport {ANIMATION_DND, ANIMATION_DROP, ANIMATION_INIT_STATE} from '../../common/uploader/animations/animations';\nimport {UploaderMode, UploaderSelectionMode} from '../../common/uploader/enums/uploader.enum';\nimport {\n  FileErrors,\n  FileObj,\n  FileSystemDirectoryEntry,\n  FileSystemEntry,\n  FileSystemFileEntry,\n  UploaderFeedbackMessage,\n  UploaderTexts\n} from '../../common/uploader/models/uploader.models';\nimport {FILE_IS_UPLOADED_PERCENTAGE} from '../../common/uploader/consts/uploader.consts';\nimport {MessageStatus} from '../../common/common.enums';\nimport {AdaptUploaderItemComponent} from '../../uploader-item/index';\nimport {AdaptTranslateService} from '../../common/i18n/index';\nimport {adaptWarn} from '../../common/logger';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'adapt-rx-uploader',\n  templateUrl: './adapt-rx-uploader.component.html',\n  providers: [FileManager, IconManager],\n  animations: [ANIMATION_INIT_STATE]\n})\n// eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle\nexport class AdaptRxUploaderComponent extends AdaptRxFormControlDirective implements OnInit, AfterViewInit, OnDestroy {\n  protected controlName: string = 'uploader';\n\n  tmplSvgIcons: KeyValueObject<string> = {}; // object with svg icons used in the component template\n  uploaderFeedbackMessages: UploaderFeedbackMessage[] = []; // to track feedback from the FileManager service\n  isRtl: boolean = false; // to detect animation direction\n  readFolder: boolean = false; // to switch svg icons\n  isUploadLimitExceed: boolean = false; // whether amount of dragged files exceeded the allowed files count\n  isFoldersAllowed: boolean = true; // whether folders are allowed to be picked and dropped\n  uploaderTextsDefault: UploaderTexts = {\n    fileStatus: {}\n  }; // default texts configuration\n\n  folderUploadingForbiddenMsg: string = 'Your browser does not support folders uploading.';\n\n  /**\n   * Sets uploader mode (please use UploaderMode enum to set the mode): <br/><span><b>UploaderMode.Auto</b> - upload files at once they have been added to uploader</span><br/><span><b>UploaderMode.Manual</b> - upload files manually (use startUploading method of Uploader Component)</span>.\n   * @docs-default UploaderMode.Manual\n   */\n  @Input() uploadMode: UploaderMode;\n\n  /**\n   * Sets uploader selection mode (please use UploaderSelectionMode enum to set the mode): <br/><span><b>UploaderSelectionMode.File</b> - allows to select and upload only files</span><br/><span><b>UploaderSelectionMode.Directory</b> - allows to select and upload only folders</span><br/><span><b>UploaderSelectionMode.Both</b> - allows to select and upload both files and folders.</span>.\n   * @docs-default UploaderSelectionMode.File\n   */\n  @Input() selectionMode: UploaderSelectionMode;\n\n  /**\n   * Enables \"Attach\" button to open file dialog window.\n   * @docs-default true\n   */\n  @Input() enableFileDialog: boolean;\n\n  /**\n   * Defines what kind of file types allowed for upload. By default - all file types available.\n   * @docs-default []\n   */\n  @Input() allowedTypes: string[];\n\n  /**\n   * Defines what kind of file types forbidden for upload. By default - all file types available.\n   * @docs-default []\n   */\n  @Input() forbiddenTypes: string[];\n\n  /**\n   * Forbids parallel uploading. In this case files would be uploaded one by one.\n   * @docs-default false\n   */\n  @Input() suppressParallel: boolean;\n\n  /**\n   * Limits the count of files which could be added to uploader.\n   * @docs-default 1\n   */\n  @Input() filesCount: number;\n\n  /**\n   * Allows or forbids duplicates of files to be added to uploader (by file name).\n   * @docs-default false\n   */\n  @Input() allowDuplicates: boolean;\n\n  /**\n   * Allows or forbids appearing alert about browser support of folders upload.\n   * @docs-default true\n   */\n  @Input() showUploadFolderAlert: boolean;\n\n  /**\n   * Limits the count of added and/or uploaded files to show in the show more state.\n   * @docs-default 3\n   */\n  @Input() visibleFiles: number;\n\n  /**\n   * Sets the ability to use component several time.\n   * @docs-default false\n   */\n  @Input() reusable: boolean;\n\n  /**\n   * Sets the ability to remove uploaded files from server.\n   * @docs-default true\n   */\n  @Input() allowDeletion: boolean;\n\n  /**\n   * Overrides server error responses.\n   * @docs-default true\n   */\n  @Input() customErrors: boolean;\n\n  /**\n   * Shows indeterminate loading indicator on file uploading.\n   * @docs-default false\n   */\n  @Input() indeterminateFileLoader: boolean;\n\n  /**\n   * Sets up the url address for files uploading. If you don't use URL parameter then you should set up service for uploading.\n   * @docs-default\n   */\n  @Input() url: string;\n\n  /**\n   * Sets up the url address for files deleting. If you don't use URL parameter then you should set up service for removing.\n   * @docs-default\n   */\n  @Input() deleteUrl: string;\n\n  /**\n   * Sets the target drop area to start animate uploader container.\n   * @docs-default\n   */\n  @Input() droppableArea: HTMLElement;\n\n  // custom uploader item download\n  /**\n   * When set to true, allows usage of custom method for file download instead of standard \"download\" attribute.\n   * Please pay attention, if \"downloadURL\" property is provided for the uploaded file, component will be used with default \"download\" attribute.\n   * @docs-default false\n   * @since v10.6.0\n   */\n  @Input() enableCustomDownload: boolean = false;\n\n  /**\n   * Reference to callback function that will be invoked to download uploaded file.\n   * @docs-default\n   * @since v10.6.0\n   */\n  @Input() customDownload: (file: FileObj) => void;\n\n  /**\n   * When specified, allows popover item of the warning messages to be attached to the body.\n   * @docs-default false\n   * @since v10.12.0\n   */\n  @Input() popoverAppendToBody: boolean = false;\n\n  /**\n   * When specified, provides an information about file type restrictions.\n   * @docs-default true\n   * @since v10.14.0\n   */\n  @Input() showTypesRestriction: boolean = true;\n\n  /**\n   * When specified, provides an information about min file size restrictions.\n   * @docs-default true\n   * @since v10.14.0\n   */\n  @Input() showMinSizeRestriction: boolean = true;\n\n  /**\n   * When specified, provides an information about max file size restrictions.\n   * @docs-default true\n   * @since v10.14.0\n   */\n  @Input() showMaxSizeRestriction: boolean = true;\n\n  /**\n   * When specified, provides an information about max files count restrictions.\n   * @docs-default true\n   * @since v10.14.0\n   */\n  @Input() showFilesCountRestriction: boolean = true;\n\n  /**\n   * Configurable object for component's text.\n   * @docs-default {}\n   */\n  @Input()\n  set texts(value: UploaderTexts) {\n\n    if (!isEqual(this._texts, value)) {\n      this._texts = value;\n      this._initTextsObject();\n    }\n  }\n\n  get texts(): UploaderTexts {\n    return this._texts;\n  }\n\n  /**\n   * Sets up icons for an appropriate file types. <br />\n   * Component includes pre-defined icons for file extensions: <br />.docx, .doc, .xls, .xlsx, .ppt, .pptx, .zip, .7z, .dmg, .rar, .jpg, .jpeg, .png, .bmp, .gif, .avi, .pdf.\n   * @docs-default {}\n   */\n  @Input()\n  set icons(value: KeyValueObject<Icon>) {\n    if (this._iconService && !isEqual(this._icons, value)) {\n      this._icons = value;\n      this._iconService.init(this._icons);\n    }\n  }\n\n  get icons(): KeyValueObject<Icon> {\n    return this._icons;\n  }\n\n  /**\n   * Configurable object for errors on file upload.\n   * @docs-default {}\n   */\n  @Input()\n  set fileErrors(value: FileErrors) {\n    if (this._fileManager && !isEqual(this._fileErrors, value)) {\n      this._fileErrors = value;\n      this._initFileErrorsObject();\n    }\n  }\n\n  get fileErrors(): FileErrors {\n    return this._fileErrors;\n  }\n\n  /**\n   * Enables drag area for receiving files.\n   * @docs-default true\n   */\n  @Input()\n  set enableDnD(value: boolean) {\n    this._enableDnD = value;\n\n    if (this.droppableArea) {\n      this._enableDnD ? this._addAreaDragEvents() : this._removeAreaDragEvents();\n    }\n  }\n\n  get enableDnD(): boolean {\n    return this._enableDnD;\n  }\n\n  /**\n   * Limits the size of files which could be uploaded. The same parsing behavior as for chunkSize.\n   * @docs-default 20 MB\n   */\n  @Input()\n  set maxFileSize(value: string) {\n    this._maxFileSize = isNil(value) ? value : retrieveFileSize(value);\n  }\n\n  get maxFileSize(): string {\n    return isNil(this._maxFileSize) ? this._maxFileSize : this._maxFileSize.toString();\n  }\n\n  /**\n   * Prevents files that are smaller in size to be uploaded. If value is not set, empty files are allowed. The same parsing behavior as for chunkSize.\n   * @docs-default\n   * @since v10.9.0\n   */\n  @Input()\n  set minFileSize(value: string) {\n    this._minFileSize = isNil(value) ? value : retrieveFileSize(value);\n  }\n\n  get minFileSize(): string {\n    return isNil(this._minFileSize) ? this._minFileSize : this._minFileSize.toString();\n  }\n\n  /**\n   The size of the chunk on which file would be divided during uploading. <br />By default it is 1MB chunk. <br />\n   You could use string value of the size, for instance, '100 KB' or '100KB'. Also, you could use value without suffix: '1000', in this case it would be equal '1000 B'. <br /> <br />\n   In case if 'null' passed it means that file should be loaded as one chunk. <br /> Also the response may have different interface based on 'observe' option passed to 'http.post()' method. <br/>\n   More information can be found here:<br/> <a href=\"https://angular.io/api/common/http/HttpClient#options\" target=\"_blank\">https://angular.io/api/common/http/HttpClient#options</a></li><br/> <a href=\"https://angular.io/api/common/http/HttpResponse\" target=\"_blank\">https://angular.io/api/common/http/HttpResponse</a></li>\n   * @docs-default 1 MB\n   * @since v10.9.0\n   */\n  @Input()\n  set chunkSize(value: string) {\n    this._chunkSize = isNil(value) ? value : retrieveFileSize(value);\n  }\n\n  get chunkSize(): string {\n    return isNil(this._chunkSize) ? this._chunkSize : this._chunkSize.toString();\n  }\n\n  /* uploader outputs */\n  /**\n   * Fires before the file dialog has been opened.\n   */\n  @Output() readonly beforeFileDialogOpen: EventEmitter<null> = new EventEmitter();\n\n  /**\n   * Fires after the file dialog has been opened.\n   */\n  @Output() readonly afterFileDialogOpen: EventEmitter<null> = new EventEmitter();\n\n  /**\n   * Array '<File>'. Fires before files have to be added to the uploader storage.\n   */\n  @Output() readonly beforeFilesAdded: EventEmitter<(File | FileSystemEntry)[]> = new EventEmitter();\n\n  /**\n   * Array '<File>'. Fires after files have been added to the uploader storage.\n   */\n  @Output() readonly afterFilesAdded: EventEmitter<FileObj[]> = new EventEmitter();\n\n  /**\n   * Fires when file data has been dropped to the drop area.\n   */\n  @Output() readonly dropped: EventEmitter<null> = new EventEmitter();\n\n  /**\n   * Fires when file data is dragging over the drop area.\n   */\n  @Output() readonly dragOver: EventEmitter<null> = new EventEmitter();\n\n  /**\n   * Fires when file starts uploading. Provides the file (FileObj) which started uploading.\n   */\n  @Output() readonly startFileUploading: EventEmitter<FileObj> = new EventEmitter();\n\n  /**\n   * Fires when file is uploading. Provides the file (FileObj) which is uploading.\n   * @since v12.17.0\n   */\n  @Output() readonly processFileUploading: EventEmitter<FileObj> = new EventEmitter();\n\n  /**\n   * Fires when the file is totally uploaded to the server. Provides the file which ended uploading.\n   */\n  @Output() readonly endFileUploading: EventEmitter<FileObj> = new EventEmitter();\n\n  /**\n   * Fires when error appears during uploading. Provides the file (FileObj) which failed uploading and an error (HttpErrorResponse) while executing the request.\n   */\n  @Output() readonly errorFileUploading: EventEmitter<{ file: FileObj; error: HttpErrorResponse }> = new EventEmitter();\n\n  /**\n   * Fires when file has been uploaded.\n   */\n  @Output() readonly finishedFileUploading: EventEmitter<FileObj[]> = new EventEmitter();\n\n  /**\n   * Fires when file has been removed from the uploading queue.\n   */\n  @Output() readonly removedFileFromQueue: EventEmitter<FileObj> = new EventEmitter();\n\n  /**\n   * Fires when file has been deleted from the server.\n   */\n  @Output() readonly deletedFile: EventEmitter<FileObj> = new EventEmitter();\n\n  /**\n   * Fires when file(s) uploading process has been canceled.\n   */\n  @Output() readonly cancelUploading: EventEmitter<FileObj[]> = new EventEmitter();\n\n\n  @ViewChild('fileInput', {static: false}) fileInput: ElementRef;\n  @ViewChild('droppableAreaBlock', {static: false}) droppableAreaBlock: ElementRef;\n  @ViewChild('dropEnter', {static: false}) dropEnter: ElementRef;\n  @ViewChild('dnd', {static: false}) dnd: ElementRef;\n  @ViewChild('drop', {static: false}) drop: ElementRef;\n  @ViewChildren(AdaptUploaderItemComponent) filesList: QueryList<AdaptUploaderItemComponent>;\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @ViewChild('emptyTmpl', {static: true}) emptyTmpl: TemplateRef<any>;\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @ViewChild('emptyReadonly', {static: true}) emptyReadonly: TemplateRef<any>;\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @ViewChild('fileAttachmentControls', {static: true}) fileAttachmentControls: TemplateRef<any>;\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @ViewChild('dndAnimationTmpl', {static: true}) dndAnimationTmpl: TemplateRef<any>;\n\n  /**\n   * Reference on AdaptRxFeedbackComponent\n   */\n  @ViewChild('adaptRxFeedbackRef', {static: true}) adaptRxFeedbackRef: AdaptRxFeedbackComponent;\n\n  private _uniqueId: string = `adapt-rx-uploader-${++nextUniqueId}`;\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n\n  /**\n   * String for test id data attribute. For test purposes\n   * @docs-default adapt-rx-uploader-${++nextUniqueId}\n   * @since v10.6.0\n   */\n  @Input() testID: string = this._uniqueId;\n\n  private _isComponentInFocus: boolean = false;\n  private _chunkSize: number;\n  private _maxFileSize: number;\n  private _minFileSize: number;\n  private _droppable: number = 0;\n  private _alreadyUsed: boolean = false;\n  private _isDragOverMask: boolean = false;\n  private _uploaded: string[] = [];\n  private _currentFolder: string;\n  private _enableDnD: boolean;\n  private _texts: UploaderTexts = {};\n  private _icons: KeyValueObject<Icon> = {};\n  private _fileErrors: FileErrors = {};\n  private _animationPlayers: {\n    visibleDnd: AnimationPlayer;\n    hiddenDnd: AnimationPlayer;\n    visibleDrop: AnimationPlayer;\n    hiddenDrop: AnimationPlayer;\n  } = {\n    visibleDnd: null,\n    hiddenDnd: null,\n    visibleDrop: null,\n    hiddenDrop: null\n  };\n\n  private _onDragEnter: () => void;\n  private _onDragOver: () => void;\n  private _onDragLeave: () => void;\n  private _onDragDrop: () => void;\n\n  get isEmptyFileAllowed(): boolean {\n    return this._minFileSize === 0;\n  }\n\n  /**\n   * Files added to the fileManager service to be further uploaded\n   * or files that have been already uploaded\n   */\n  get files(): FileObj[] {\n    return this._fileManager.getFiles();\n  }\n\n  /**\n   * Whether amount of the uploaded files has been reached\n   */\n  get maxFileCountUploaded(): boolean {\n    return this._uploaded.length >= this.filesCount;\n  }\n\n  /**\n   * Whether amount of the added to the component files has been reached\n   */\n  get maxFileCountSelected(): boolean {\n    return this.filesCount <= this.files.length;\n  }\n\n  /**\n   * Allows/Forbids to select multiple files for uploading\n   */\n  get isMultipleAllowed(): boolean {\n    return this.filesCount > 1;\n  }\n\n  get selectFilesButtonTooltip(): string {\n    return this.isMultipleAllowed && this.maxFileCountSelected\n      ? formatString(this.texts.btnMaxFilesTooltip, this.filesCount)\n      : '';\n  }\n\n  /**\n   * Whether further file(s) attachment is allowed\n   */\n  get isDisabledSelectBtn(): boolean {\n    return this.disabled || this.isDisableFileDialog || !this.allowedUploading || this.maxFileCountUploaded\n      || this.maxFileCountSelected;\n  }\n\n  /**\n   * Whether file(s) added to the component is currently uploading to the server\n   */\n  get isUploadingProcess(): boolean {\n    return this.files.some(file => file.inUploading);\n  }\n\n  /**\n   * Represents files count added to the component - only for multiple upload\n   */\n  get filesAddedCount(): string {\n    return formatString(this.texts.filesAddedCount, this.files.length);\n  }\n\n  /**\n   * Represents files count that have been already uploaded to the server,\n   * available for multiple upload only\n   */\n  get filesUploadedCount(): string {\n    return formatString(this.texts.filesUploadedCount, this._uploaded.length, this.files.length);\n  }\n\n  /**\n   * Represents folder name in which files search is currently running\n   */\n  get directorySearch(): string {\n    return formatString(this.texts.directorySearch, this._currentFolder);\n  }\n\n  /**\n   * String to be shown once amount of dragged files exceeded the allowed files count\n   */\n  get uploadLimitExceed(): string {\n    return this.isMultipleAllowed ?\n      formatString(this.texts.uploadFilesLimit, this.filesCount - this.files.length) : this.texts.uploadFilesLimitSingle;\n  }\n\n  /**\n   * Manages ability to select files via file dialog window\n   */\n  get isDisableFileDialog(): boolean {\n    return !this.enableFileDialog;\n  }\n\n  get isManualMode(): boolean {\n    return this.uploadMode === UploaderMode.Manual;\n  }\n\n  /**\n   * Allows/Forbids files uploading depending on config properties\n   */\n  get allowFileUploading(): boolean {\n    return this.selectionMode === UploaderSelectionMode.File\n      || this.selectionMode === UploaderSelectionMode.Both;\n  }\n\n  /**\n   * Allows/Forbids directories uploading depending on config properties\n   */\n  get allowDirUploading(): boolean {\n    return this.isMultipleAllowed && (this.selectionMode === UploaderSelectionMode.Directory\n      || this.selectionMode === UploaderSelectionMode.Both);\n  }\n\n  /**\n   * Whether file(s) uploading is allowed\n   */\n  get allowedUploading(): boolean {\n    return this.reusable || !this._alreadyUsed;\n  }\n\n  /**\n   * Check if the control has UI error state\n   */\n  get hasDangerState(): boolean {\n    return this.adaptRxFeedbackRef.hasUIErrorState;\n  }\n\n  get hasWarningState(): boolean {\n    return Boolean(this.uploaderFeedbackMessages.length) || Boolean(this.warningMessage);\n  }\n\n  get fileMode(): UploaderSelectionMode.File {\n    return UploaderSelectionMode.File;\n  }\n\n  get dirMode(): UploaderSelectionMode.Directory {\n    return UploaderSelectionMode.Directory;\n  }\n\n  get mixMode(): UploaderSelectionMode.Both {\n    return UploaderSelectionMode.Both;\n  }\n\n\n  constructor(@Optional() @Self() public ngControl: NgControl,\n              @Optional() @Self() private _fileManager: FileManager,\n              @Optional() @Self() private _iconService: IconManager,\n              uploaderConfig: AdaptRxUploaderConfigService,\n              _changeDetectorRef: ChangeDetectorRef,\n              private _renderer: Renderer2,\n              private _elRef: ElementRef,\n              private _dir: Directionality,\n              private _animationBuilder: AnimationBuilder,\n              private _injector: Injector,\n              private _keyValueDiffers: KeyValueDiffers,\n              private _ngZone: NgZone,\n              // TODO: Refactor this if possible\n              /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n              @Inject(DOCUMENT) private document: any, // https://github.com/angular/angular/issues/20351\n              public ts: AdaptTranslateService,\n              _adaptRadarService: AdaptRadarAngularService,\n              _elem: ElementRef<HTMLElement>) {\n    super(ngControl, ts, _adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptRxUploader, _changeDetectorRef);\n\n    this.uploadMode = uploaderConfig.uploadMode;\n    this.selectionMode = uploaderConfig.selectionMode;\n    this.enableDnD = uploaderConfig.enableDnD;\n    this.enableFileDialog = uploaderConfig.enableFileDialog;\n    this.allowedTypes = uploaderConfig.allowedTypes;\n    this.forbiddenTypes = uploaderConfig.forbiddenTypes;\n    this.suppressParallel = uploaderConfig.suppressParallel;\n    this.filesCount = uploaderConfig.filesCount;\n    this.allowDuplicates = uploaderConfig.allowDuplicates;\n    this.showUploadFolderAlert = uploaderConfig.showUploadFolderAlert;\n    this.visibleFiles = uploaderConfig.visibleFiles;\n    this.reusable = uploaderConfig.reusable;\n    this.allowDeletion = uploaderConfig.allowDeletion;\n    this.customErrors = uploaderConfig.customErrors;\n    this.indeterminateFileLoader = uploaderConfig.indeterminateFileLoader;\n    this.url = uploaderConfig.url;\n    this.deleteUrl = uploaderConfig.deleteUrl;\n\n    this.chunkSize = uploaderConfig.chunkSize;\n    this.maxFileSize = uploaderConfig.maxFileSize;\n    this.minFileSize = uploaderConfig.minFileSize;\n    this.setDefaultTexts(ts.getCurrentLanguage());\n  }\n\n  // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.isRtl = this._dir.value === 'rtl';\n\n    this._initTextsObject();\n    this._initFileErrorsObject();\n    this._iconService.init(this.icons);\n\n    this.tmplSvgIcons = this._iconService.getTmplComponentIcons();\n\n    this._addDocumentDragEvents();\n\n    // feedback from FileManager service\n    this._fileManager.messagesSubject\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((msg: UploaderFeedbackMessage) => {\n        this.uploaderFeedbackMessages.push(msg);\n      });\n\n    this._fileManager.uploadingStartSubject\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(({file}) => {\n        // revert changes from\n        // https://github.bmc.com/bmc-ux/adapt-angular/commit/2751c882186d3a62e33ffb3d44efff436ba1198f\n        // since we included the total file size in the RequestBody for each file's chunk send.\n        // With the new logic, every file added to the component will be assigned with the unique id\n        this._changeDetectorRef.detectChanges();\n        this.startFileUploading.emit(file);\n      });\n\n    this._fileManager.uploadedSubject\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((file: FileObj) => {\n        this._uploaded.push(file.fileId);\n        this._changeDetectorRef.detectChanges();\n        this.endFileUploading.emit(file);\n      });\n\n    this._fileManager.canceledSubject\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((files: FileObj[]) => {\n        this.cancelUploading.emit(files);\n      });\n\n    this._fileManager.errorUploadingSubject\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data: { file: FileObj; error: HttpErrorResponse }) => {\n        this._changeDetectorRef.detectChanges();\n        this.errorFileUploading.emit(data);\n      });\n\n    this._fileManager.uploadingProcessSubject\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((file: FileObj) => {\n        this._changeDetectorRef.detectChanges();\n        this.processFileUploading.emit(file);\n      });\n\n    this._fileManager.uploadingFinishedSubject\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((files: FileObj[]) => {\n        this._changeDetectorRef.detectChanges();\n        this.finishedFileUploading.emit(files);\n      });\n  }\n\n  // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n\n    if (this.enableDnD) {\n      this._removeAreaDragEvents();\n    }\n\n    this._removeDocumentDragEvents();\n    this.cancelAllUploads();\n  }\n\n  // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n\n    if (!this.droppableArea) {\n      this.droppableArea = this.droppableAreaBlock.nativeElement;\n    }\n\n    this._ngZone.onStable\n      .pipe(takeUntil(this.destroy$), take(1))\n      .subscribe(() => {\n        if (isUndefined(this.fileInput.nativeElement.webkitdirectory)) {\n          adaptWarn(this.folderUploadingForbiddenMsg);\n          this.isFoldersAllowed = false;\n          this.selectionMode = UploaderSelectionMode.File;\n        }\n      });\n\n    fromEvent(this.fileInput.nativeElement, 'change')\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((e: Event) => {\n        this.onChangeFileInput(e);\n      });\n\n    fromEvent(this._elRef.nativeElement, 'focusin')\n      .pipe(\n        tap((e: FocusEvent) => e.stopPropagation()),\n        filter(() => !this._isComponentInFocus),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(() => {\n        this._isComponentInFocus = true;\n        this.onFocus.emit();\n      });\n\n    merge(\n      fromEvent(document, 'click'),\n      fromEvent(document, 'focusin'),\n      fromEvent(window, 'blur') // in case component is the last element on the page\n    ).pipe(\n      filter(() => this._isComponentInFocus && !this._elRef.nativeElement.contains(document.activeElement)),\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.onBlur.emit();\n\n      this._isComponentInFocus = false;\n      this._onTouched();\n    });\n\n    this.enableDnD = this._enableDnD; //run setter\n  }\n\n  setDefaultTexts(translation: KeyValueObject): void {\n    this.uploaderTextsDefault.fileBtn = translation['adapt.uploader.attachFiles'];\n    this.uploaderTextsDefault.folderBtn = translation['adapt.uploader.attachFolder'];\n    this.uploaderTextsDefault.allowedTypes = translation['adapt.uploader.allowedTypes'];\n    this.uploaderTextsDefault.fileTypesDivider = translation['adapt.uploader.fileTypesDivider'];\n    this.uploaderTextsDefault.maxFileSize = translation['adapt.uploader.maxFileSize'];\n    this.uploaderTextsDefault.minFileSize = translation['adapt.uploader.minFileSize'];\n    this.uploaderTextsDefault.filesCount = translation['adapt.uploader.filesCount'];\n    this.uploaderTextsDefault.fileMode = translation['adapt.uploader.fileMode'];\n    this.uploaderTextsDefault.dirMode = translation['adapt.uploader.dirMode'];\n    this.uploaderTextsDefault.mixMode = translation['adapt.uploader.mixMode'];\n    this.uploaderTextsDefault.dragAndDrop = translation['adapt.uploader.dragAndDrop'];\n    this.uploaderTextsDefault.uploadFilesLimit = translation['adapt.uploader.uploadFilesLimit'];\n    this.uploaderTextsDefault.required = translation['adapt.uploader.required'];\n    this.uploaderTextsDefault.showMore = translation['adapt.uploader.showMore'];\n    this.uploaderTextsDefault.showLess = translation['adapt.uploader.showLess'];\n    this.uploaderTextsDefault.btnMaxFilesTooltip = translation['adapt.uploader.maxFilesTooltip'];\n    this.uploaderTextsDefault.btnCancelUploading = translation['adapt.uploader.cancelUploading'];\n    this.uploaderTextsDefault.btnRemoveFile = translation['adapt.uploader.removeFile'];\n    this.uploaderTextsDefault.btnDeleteFile = translation['adapt.uploader.deleteFile'];\n    this.uploaderTextsDefault.btnRemoveCanceled = translation['adapt.uploader.removeCanceled'];\n    this.uploaderTextsDefault.btnDownloadFile = translation['adapt.uploader.downloadFile'];\n    this.uploaderTextsDefault.fileStatus.canceled = translation['adapt.uploader.fileStatus.canceled'];\n    this.uploaderTextsDefault.fileStatus.uploaded = translation['adapt.uploader.fileStatus.uploaded'];\n    this.uploaderTextsDefault.fileStatus.uploading = translation['adapt.uploader.fileStatus.uploading'];\n    this.uploaderTextsDefault.filesAddedCount = translation['adapt.uploader.filesAddedCount'];\n    this.uploaderTextsDefault.filesUploadedCount = translation['adapt.uploader.filesUploadedCount'];\n    this.uploaderTextsDefault.directorySearch = translation['adapt.uploader.directorySearch'];\n    this.uploaderTextsDefault.remainingFilesListLabel = translation['adapt.uploader.remainingFilesListLabel'];\n    this.uploaderTextsDefault.btnCancelAllUploads = translation['adapt.uploader.cancelAllUploads'];\n    this.uploaderTextsDefault.notFound = translation['adapt.uploader.notFound'];\n    this.uploaderTextsDefault.comma = translation['adapt.common.comma'];\n    this.uploaderTextsDefault.fileBtnSingle = translation['adapt.uploaderSingle.attachFiles'];\n    this.uploaderTextsDefault.uploadFilesLimitSingle = translation['adapt.uploaderSingle.uploadFilesLimit'];\n    this.uploaderTextsDefault.fileModeSingle = translation['adapt.uploaderSingle.fileMode'];\n    this.uploaderTextsDefault.dragAndDropSingle = translation['adapt.uploaderSingle.dragAndDrop'];\n  }\n\n  trackByFn(index: number, item: FileObj | UploaderFeedbackMessage): FileObj | UploaderFeedbackMessage {\n    return item;\n  }\n\n  /**\n   * Rewrite parent method\n   */\n  writeValue(value: FileObj[] | null): void {\n    // reset uploaded array\n    this._uploaded.length = 0;\n\n    if (Array.isArray(value) && value.length) {\n      if (!this.allowedUploading) {\n        return;\n      }\n\n      this._fileManager.updateFilesStorage(value);\n\n      // store already uploaded files\n      value.forEach(file => {\n        if (file.uploaded === FILE_IS_UPLOADED_PERCENTAGE && !file.canceled && !file.error) {\n          this._uploaded.push(file.fileId);\n        }\n      });\n\n      // need to check whether uploaded files count\n      // equal to the allowed files amount to mark component as already used\n      // once setting value via form control\n      this._alreadyUsed = this._uploaded.length === this.filesCount;\n      this.uploaderFeedbackMessages = [];\n\n      this._changeDetectorRef.detectChanges();\n\n      return;\n    }\n\n    this._fileManager.resetFilesStorage();\n    this._changeDetectorRef.detectChanges();\n  }\n\n  /**\n   *  Cancels all files currently uploading\n   */\n  cancelAllUploads(): void {\n    if (this.files.every(file => !file.inUploading)) {\n      return;\n    }\n\n    const uploadInputs = {\n      chunkSize: this._chunkSize,\n      uploadUrl: this.url,\n      customErrors: this.customErrors\n    };\n\n    this._fileManager.abortUploading(uploadInputs);\n    this._changeDetectorRef.detectChanges();\n  }\n\n  /**\n   * Opens file dialog window for files selection, fires appropriate events\n   */\n  openFileDialog(isDir: boolean): void {\n    if (!isUndefined(this.fileInput.nativeElement.webkitdirectory)) {\n      this.fileInput.nativeElement.webkitdirectory = !!isDir;\n    }\n\n    this.beforeFileDialogOpen.emit(null);\n    this.fileInput.nativeElement.click();\n    this.afterFileDialogOpen.emit(null);\n  }\n\n  onChangeFileInput(e: Event): void {\n    const files = toArray((e.target as HTMLInputElement).files);\n\n    if (files.length) {\n      this._addFiles(files);\n    }\n\n    this._onTouched();\n  }\n\n  removedFromQueue(file: FileObj): void {\n    const index = this._uploaded.findIndex((id) => id === file.fileId);\n\n    if (index >= 0) {\n      this._uploaded.splice(index, 1);\n    }\n\n    if (!file.canceled) {\n      this.removedFileFromQueue.emit(file);\n    }\n\n    this.uploaderFeedbackMessages.length = 0;\n\n    this._onChange(this.files);\n    this._onTouched();\n\n    this._changeDetectorRef.detectChanges();\n  }\n\n  fileDeleted(file: FileObj): void {\n    const index = this._uploaded.findIndex((id) => id === file.fileId);\n\n    if (index >= 0) {\n      this._uploaded.splice(index, 1);\n    }\n\n    this.deletedFile.emit(file);\n    this.uploaderFeedbackMessages.length = 0;\n\n    this._onChange(this.files);\n    this._onTouched();\n\n    this._changeDetectorRef.detectChanges();\n  }\n\n  startUploading(): void {\n    if (this.nonInteractive) {\n      return;\n    }\n\n    if (this.ngControl.errors) {\n      this._onTouched();\n\n      return;\n    }\n\n    if (this.allowedUploading) {\n      const uploadInputs = {\n        chunkSize: this._chunkSize,\n        uploadUrl: this.url,\n        customErrors: this.customErrors\n      };\n\n      this.uploaderFeedbackMessages.length = 0;\n      this._fileManager.startUploading(uploadInputs);\n\n      if (!this.reusable) {\n        this._alreadyUsed = true;\n      }\n    }\n\n    this._changeDetectorRef.detectChanges();\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  getTemplate(): TemplateRef<any> {\n    if (!this.readonly) {\n      if (!this.isMultipleAllowed && !this.files.length || this.isMultipleAllowed) {\n        return this.enableDnD ? this.dndAnimationTmpl : this.fileAttachmentControls;\n      }\n    }\n\n    if (this.isMultipleAllowed) {\n      return this.files.length ? this.emptyTmpl : this.emptyReadonly;\n    }\n\n    if (!this.files.length) {\n      return this.emptyReadonly;\n    }\n  }\n\n  /**\n   * Implementation from the base class\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  protected _focusNativeElement(): void {\n  }\n\n  private _initTextsObject(): void {\n    this.texts = {...this.uploaderTextsDefault, ...this.texts};\n  }\n\n  private _initFileErrorsObject(): void {\n    this._fileManager.fileErrors = {...this._fileManager.fileErrors, ...this.fileErrors};\n  }\n\n  private _preventDefault: (e: DragEvent) => void = (e: DragEvent): void => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  private _dataHasFiles(e: DragEvent): boolean {\n    const types = Array.prototype.slice.call(e.dataTransfer.types);\n\n    return types.indexOf('Files') !== -1;\n  }\n\n  private _addAreaDragEvents(): void {\n    this._onDragEnter = this._ondragEnter.bind(this);\n    this.droppableArea.addEventListener('dragenter', this._onDragEnter);\n\n    this._onDragOver = this._ondragOver.bind(this);\n    this.droppableArea.addEventListener('dragover', this._onDragOver);\n\n    this._onDragLeave = this._ondragLeave.bind(this);\n    this.droppableArea.addEventListener('dragleave', this._onDragLeave);\n\n    this._onDragDrop = this._ondragDrop.bind(this);\n    this.droppableArea.addEventListener('drop', this._onDragDrop);\n  }\n\n  private _addDocumentDragEvents(): void {\n    document.addEventListener('dragover', this._preventDefault);\n    document.addEventListener('drop', this._preventDefault);\n  }\n\n  private _removeAreaDragEvents(): void {\n    this.droppableArea.removeEventListener('dragenter', this._onDragEnter);\n    this.droppableArea.removeEventListener('dragover', this._onDragOver);\n    this.droppableArea.removeEventListener('dragleave', this._onDragLeave);\n    this.droppableArea.removeEventListener('drop', this._onDragDrop);\n  }\n\n  private _removeDocumentDragEvents(): void {\n    document.removeEventListener('dragover', this._preventDefault);\n    document.removeEventListener('drop', this._preventDefault);\n  }\n\n  private _ondragEnter(e: DragEvent): void {\n    this._preventDefault(e);\n\n    if (this.nonInteractive || this._droppable || !this._dataHasFiles(e) || this.maxFileCountSelected) {\n      return;\n    }\n\n    // event.dataTransfer.items is not available in Internet Explorer and Safari\n    // Mime types or number of dragged files can therefore not be determined in drag events, only on drop\n    // so we explicitly set the value to 0\n    const dndFilesCount: number = e.dataTransfer.items ? e.dataTransfer.items.length : 0;\n\n    this.isUploadLimitExceed = dndFilesCount > (this.filesCount - this.files.length);\n\n    this._isDragOverMask = true;\n    this._renderer.addClass(this.droppableArea, 'adapt-rx-drop-area');\n\n    this._droppable++;\n\n    this._createAnimationPlayers();\n    this._animateDndChange();\n  }\n\n  private _ondragOver(e: DragEvent): void {\n    this._preventDefault(e);\n\n    if (this.nonInteractive || this.isUploadLimitExceed || this.maxFileCountSelected) {\n      e.dataTransfer.dropEffect = 'none';\n    }\n\n    this.dragOver.emit(null);\n  }\n\n  private _ondragLeave(e: DragEvent): void {\n    this._preventDefault(e);\n\n    if (e.target !== this.droppableArea) {\n      return;\n    }\n\n    this._droppable--;\n\n    if (!this._droppable) {\n      this._isDragOverMask = false;\n      this._animateDndChange();\n\n      this._renderer.removeClass(this.droppableArea, 'adapt-rx-drop-area');\n\n      this._onTouched();\n    }\n  }\n\n  private _ondragDrop(e: DragEvent): void {\n    this._preventDefault(e);\n\n    this.uploaderFeedbackMessages.length = 0;\n\n    if (isUndefined(this.fileInput.nativeElement.webkitdirectory)) {\n      const files = toArray(e.dataTransfer.files);\n\n      this._addFilesEmission(files);\n\n      return;\n    }\n\n    const items = toArray(e.dataTransfer.items);\n\n    this._resolveDroppedItems(items)\n      .then((values) => {\n        this._addFilesEmission(values);\n      })\n      .catch((err: DOMException) => {\n        this.uploaderFeedbackMessages.push({\n          title: err.name,\n          text: err.message,\n          variant: MessageStatus.Warning\n        });\n\n        this._addFilesEmission([]);\n      });\n  }\n\n  private _resolveDroppedItems(items: DataTransferItem[]): Promise<FileSystemEntry[]> {\n    return new Promise((resolve, reject) => {\n      const promises = [];\n      let files = [];\n\n      items.forEach((item) => {\n        const itemEntry: FileSystemDirectoryEntry | FileSystemFileEntry = item.webkitGetAsEntry();\n\n        if (itemEntry.isDirectory) {\n          // Allowed to upload directories and browser know about directories\n          if (this.allowDirUploading) {\n            this.readFolder = true;\n            promises.push(this._getDirectory(itemEntry));\n\n            return;\n          }\n\n          // check if folderSuppress error is already added to the uploaderFeedbackMessages array\n          const messageIndex = this.uploaderFeedbackMessages\n            .map(message => message.text)\n            .indexOf(this._fileManager.fileErrors.folderSuppress);\n\n          if (messageIndex === -1) {\n            this.uploaderFeedbackMessages.push({\n              text: this._fileManager.fileErrors.folderSuppress,\n              variant: MessageStatus.Warning\n            });\n          }\n        }\n\n        if (itemEntry.isFile) {\n          if (this.selectionMode === UploaderSelectionMode.Directory) {\n            // check if fileSuppress error is already added to the uploaderFeedbackMessages array\n            const messageIndex = this.uploaderFeedbackMessages\n              .map(message => message.text)\n              .indexOf(this._fileManager.fileErrors.fileSuppress);\n\n            if (messageIndex === -1) {\n              this.uploaderFeedbackMessages.push({\n                text: this._fileManager.fileErrors.fileSuppress,\n                variant: MessageStatus.Warning\n              });\n            }\n\n            return;\n          }\n\n          promises.push(this._getFile(itemEntry));\n        }\n      });\n\n      Promise.all(promises)\n        .then((values) => {\n          files = values.reduce((acc, item) => {\n            return acc.concat(item);\n          }, files);\n\n          this.readFolder = false;\n          resolve(files);\n        })\n        .catch((err: DOMException) => {\n          this.uploaderFeedbackMessages.push({\n            title: err.name,\n            text: err.message,\n            variant: MessageStatus.Warning\n          });\n\n          this.readFolder = false;\n          reject(err);\n        });\n    });\n  }\n\n  private _getDirectory(item: FileSystemDirectoryEntry): Promise<FileSystemEntry[]> {\n    this._currentFolder = item.name;\n\n    return new Promise((resolve, reject) => {\n      const promises = [];\n      const reader = item.createReader();\n\n      reader.readEntries((entries: (FileSystemDirectoryEntry | FileSystemFileEntry)[]) => {\n        entries.forEach((entry) => {\n          let promise: Promise<FileSystemEntry> | Promise<FileSystemEntry[]>;\n\n          if (entry.isDirectory) {\n            promise = this._getDirectory(entry);\n          } else if (entry.isFile) {\n            promise = this._getFile(entry, item.fullPath.slice(1));\n          }\n\n          if (promise) {\n            promises.push(promise);\n          }\n        });\n\n        Promise.all(promises)\n          .then((values) => {\n            let dirFiles = [];\n\n            dirFiles = values.reduce((acc, value) => {\n              return acc.concat(value);\n            }, dirFiles);\n\n            resolve(dirFiles);\n          })\n          .catch((err: DOMException) => {\n            reject(err);\n          });\n      });\n    });\n  }\n\n  private _getFile(item: FileSystemFileEntry, dirName: string = ''): Promise<FileSystemEntry> {\n    return new Promise<FileSystemEntry>((resolve, reject) => {\n      item.file((f) => {\n        f.fullPath = dirName ? `${dirName}/${f.name}` : f.name;\n        resolve(f);\n      }, (err: DOMException) => {\n        reject(err);\n      });\n    });\n  }\n\n  private _addFilesEmission(files: (File | FileSystemEntry)[]): void {\n    this.dropped.emit(null);\n\n    if (files.length) {\n      this._addFiles(files);\n    }\n\n    this._droppable = 0;\n    this._isDragOverMask = false;\n    this._animateDndChange();\n\n    this._renderer.removeClass(this.droppableArea, 'adapt-rx-drop-area');\n\n    this._onChange(this.files);\n    this._onTouched();\n\n    this._changeDetectorRef.detectChanges();\n  }\n\n  private _addFiles(files: (File | FileSystemEntry)[]): void {\n    this.uploaderFeedbackMessages.length = 0;\n\n    if (!this.allowedUploading) {\n      return;\n    }\n\n    if (this.uploadMode === UploaderMode.Auto && !this.reusable) {\n      this._alreadyUsed = true;\n    }\n\n    this.beforeFilesAdded.emit(files);\n    this._fileManager.addFiles(\n      files,\n      this.allowDeletion,\n      this.uploadMode,\n      this.suppressParallel,\n      this.allowDuplicates,\n      this._maxFileSize,\n      this._chunkSize,\n      this.allowedTypes,\n      this.forbiddenTypes,\n      this.filesCount,\n      this.customErrors,\n      this.url, this._minFileSize);\n    this.afterFilesAdded.emit(this.files);\n\n    this._onChange(this.files);\n\n    this.fileInput.nativeElement.value = '';\n\n    this._changeDetectorRef.detectChanges();\n  }\n\n  private _createAnimationPlayers(): void {\n    const players = Object.keys(this._animationPlayers);\n\n    players.forEach((player) => {\n      if (this._animationPlayers[player]) {\n        this._animationPlayers[player].destroy();\n      }\n    });\n\n    this._animationPlayers.hiddenDnd = this._animationBuilder.build(ANIMATION_DND.hidden[this._dir.value])\n      .create(this.dnd.nativeElement);\n    this._animationPlayers.visibleDnd = this._animationBuilder.build(ANIMATION_DND.visible[this._dir.value])\n      .create(this.dnd.nativeElement);\n    this._animationPlayers.hiddenDrop = this._animationBuilder.build(ANIMATION_DROP.hidden[this._dir.value])\n      .create(this.drop.nativeElement);\n    this._animationPlayers.visibleDrop = this._animationBuilder.build(ANIMATION_DROP.visible[this._dir.value])\n      .create(this.drop.nativeElement);\n  }\n\n  private _animateDndChange(): void {\n    this._animationPlayers.hiddenDnd.reset();\n    this._animationPlayers.visibleDnd.reset();\n    this._animationPlayers.hiddenDrop.reset();\n    this._animationPlayers.visibleDrop.reset();\n\n    const currentPlayerDnd = this._isDragOverMask ? this._animationPlayers.hiddenDnd : this._animationPlayers.visibleDnd;\n    const currentPlayerDrop = this._isDragOverMask ? this._animationPlayers.visibleDrop : this._animationPlayers.hiddenDrop;\n\n    currentPlayerDnd.play();\n    currentPlayerDrop.play();\n\n    currentPlayerDrop.onDone(() => {\n      if (!this._droppable) {\n        this.isUploadLimitExceed = false;\n      }\n    });\n  }\n}\n","<input #fileInput type=\"file\" hidden\n       [multiple]=\"isMultipleAllowed\"\n       [attr.aria-label]=\"'File Control'\"\n       [attr.aria-hidden]/>\n\n<div class=\"adapt-rx-uploader\"\n     [class.has-danger]=\"hasDangerState\"\n     [class.has-warning]=\"hasWarningState\"\n     [class.disabled]=\"disabled\"\n     [class.readonly]=\"readonly\"\n     [class.is-no-dnd]=\"!enableDnD\">\n  <div class=\"adapt-rx-uploader__wrp\" #droppableAreaBlock>\n    <div class=\"adapt-rx-uploader__content\" #dropEnter>\n      <!--  Label  -->\n      <adapt-rx-control-label [for]=\"id\"\n                              [label]=\"label\"\n                              [requiredLabel]=\"requiredLabel\"\n                              [showRequiredLabel]=\"required\"\n                              [tooltip]=\"tooltip\"\n                              [testID]=\"testID\"></adapt-rx-control-label>\n      <!--  Label END  -->\n\n      <ng-content></ng-content>\n\n      <div class=\"adapt-rx-uploader__controls\"\n           [class.borderless]=\"enableDnD && !isMultipleAllowed && files.length\">\n        <ng-container *ngIf=\"!isMultipleAllowed\">\n          <ng-container *ngIf=\"files.length\">\n            <adapt-uploader-item *ngFor=\"let file of files;\n                                         trackBy: trackByFn\"\n                                 [disabled]=\"disabled\"\n                                 [readonly]=\"readonly\"\n                                 [reusable]=\"reusable\"\n                                 [indeterminateFileLoader]=\"indeterminateFileLoader\"\n                                 [url]=\"url\"\n                                 [deleteUrl]=\"deleteUrl\"\n                                 [chunkSize]=\"chunkSize\"\n                                 [customErrors]=\"customErrors\"\n                                 [enableCustomDownload]=\"enableCustomDownload\"\n                                 [customDownload]=\"customDownload\"\n                                 (afterFileRemove)=\"removedFromQueue($event)\"\n                                 (fileDeleted)=\"fileDeleted($event)\"\n                                 [file]=\"file\"\n                                 [testID]=\"testID + '_uploader-item'\"\n                                 [texts]=\"texts\"\n                                 [componentAnimation]=\"false\"></adapt-uploader-item>\n          </ng-container>\n\n          <ng-template [ngTemplateOutlet]=\"getTemplate()\"></ng-template>\n        </ng-container>\n\n        <ng-container *ngIf=\"isMultipleAllowed\">\n          <ng-template [ngTemplateOutlet]=\"getTemplate()\"></ng-template>\n        </ng-container>\n      </div>\n\n      <!--  Feedback - errors & warnings  -->\n      <div class=\"adapt-rx-uploader__feedback-info mt-1\">\n        <adapt-alert *ngFor=\"let msg of uploaderFeedbackMessages;\n                             trackBy: trackByFn\"\n                     [config]=\"{title: msg.title ? msg.title : '', content: errorMessageTemplate, type: 'inline', variant: msg.variant, icon: false}\"\n                     class=\"adapt-rx-uploader__feedback-message\">\n          <ng-template #errorMessageTemplate>\n            {{msg.text}}\n            <ng-container *ngIf=\"msg.files && msg.files.length\">\n              <div [adaptPopover]=\"remainingFileListTemplate\"\n                   [adaptRadarDisableEventSending]=\"true\"\n                   [appendToBody]=\"popoverAppendToBody\"\n                   [placement]=\"'auto'\"\n                   [maxWidth]=\"600\"\n                   class=\"feedback__remaining-files-list\">\n                {{ texts.remainingFilesListLabel }}\n              </div>\n            </ng-container>\n\n            <ng-template #remainingFileListTemplate>\n              <ng-template ngFor let-file let-index=\"index\" let-last=\"last\" [ngForOf]=\"msg.files\">\n                <span class=\"file-name\">{{file.name}}<span *ngIf=\"!last\">, </span></span>\n              </ng-template>\n            </ng-template>\n          </ng-template>\n        </adapt-alert>\n\n        <adapt-rx-feedback #adaptRxFeedbackRef\n                           [ariaErrorMessage]=\"ariaErrorMessage\"\n                           [errors]=\"ngControl.errors\"\n                           [warningMessage]=\"warningMessage\"\n                           [controlTouched]=\"ngControl.touched\"></adapt-rx-feedback>\n      </div>\n      <!--  Feedback - errors & warnings END  -->\n\n      <!--  Restricts  -->\n      <div class=\"adapt-rx-uploader__restrict mt-1\" *ngIf=\"!readonly\">\n        <div class=\"restrict-item\" *ngIf=\"showTypesRestriction && allowedTypes?.length\">\n          <p class=\"d-inline-block mb-0\">{{texts.allowedTypes}}</p>\n          <span class=\"letter-space\"></span>\n          <p class=\"d-inline-block mb-0\">{{allowedTypes | fileTypes:texts.fileTypesDivider}}</p>\n        </div>\n\n        <div class=\"restrict-item\" *ngIf=\"showMinSizeRestriction && !isEmptyFileAllowed\">\n          <p class=\"d-inline-block mb-0\">{{texts.minFileSize}}</p>\n          <span class=\"letter-space\"></span>\n          <p class=\"d-inline-block mb-0 ltr\">{{minFileSize| fileSize}}</p>\n        </div>\n\n        <div class=\"restrict-item\" *ngIf=\"showMaxSizeRestriction\">\n          <p class=\"d-inline-block mb-0\">{{texts.maxFileSize}}</p>\n          <span class=\"letter-space\"></span>\n          <p class=\"d-inline-block mb-0 ltr\">{{maxFileSize| fileSize}}</p>\n        </div>\n\n        <div class=\"restrict-item\" *ngIf=\"showFilesCountRestriction && isMultipleAllowed\">\n          <p class=\"d-inline-block mb-0\">{{texts.filesCount}}</p>\n          <span class=\"letter-space\"></span>\n          <p class=\"d-inline-block mb-0\">{{filesCount}}</p>\n        </div>\n\n      </div>\n      <!--  Restricts END  -->\n\n      <!--  Files wrapper  -->\n      <div class=\"adapt-rx-uploader__files-list mt-3\"\n           *ngIf=\"isMultipleAllowed && files.length\">\n        <div class=\"adapt-rx-uploader__files-list__wrp\">\n          <div class=\"files-list__title mb-1\">\n            <p *ngIf=\"isManualMode\"\n               role=\"status\"\n               class=\"font-weight-bold m-start-3 mb-0\">\n              {{ filesAddedCount }}\n            </p>\n            <p *ngIf=\"!isManualMode\"\n               role=\"status\"\n               class=\"font-weight-bold m-start-3 mb-0\"\n               [class.text-info]=\"maxFileCountUploaded\">\n              {{ filesUploadedCount }}\n            </p>\n            <button adapt-button\n                    btn-type=\"tertiary\"\n                    class=\"adapt-rx-uploader__cancel-uploading\"\n                    [adaptRadarDisableEventSending]=\"true\"\n                    [attr.data-testid]=\"testID + '_cancel-uploading'\"\n                    (click)=\"cancelAllUploads()\" *ngIf=\"isUploadingProcess\">\n              <span class=\"d-icon-cross_adapt pr-1\"></span>\n              <span>{{texts.btnCancelAllUploads}}</span>\n            </button>\n          </div>\n\n          <adapt-uploader-item *ngFor=\"let file of files | slice:0:visibleFiles;\n                                       trackBy: trackByFn\"\n                               [disabled]=\"disabled\"\n                               [readonly]=\"readonly\"\n                               [collapseBlock]=\"false\"\n                               [reusable]=\"reusable\"\n                               [indeterminateFileLoader]=\"indeterminateFileLoader\"\n                               [url]=\"url\"\n                               [deleteUrl]=\"deleteUrl\"\n                               [chunkSize]=\"chunkSize\"\n                               [customErrors]=\"customErrors\"\n                               [enableCustomDownload]=\"enableCustomDownload\"\n                               [customDownload]=\"customDownload\"\n                               (afterFileRemove)=\"removedFromQueue($event)\"\n                               (fileDeleted)=\"fileDeleted($event)\"\n                               [file]=\"file\"\n                               [testID]=\"testID + '_uploader-item'\"\n                               [texts]=\"texts\"></adapt-uploader-item>\n\n          <div #fileList=\"collapse\" [collapse]>\n            <adapt-uploader-item *ngFor=\"let file of files | slice:visibleFiles;\n                                         trackBy: trackByFn\"\n                                 [disabled]=\"disabled\"\n                                 [readonly]=\"readonly\"\n                                 [reusable]=\"reusable\"\n                                 [indeterminateFileLoader]=\"indeterminateFileLoader\"\n                                 [url]=\"url\"\n                                 [deleteUrl]=\"deleteUrl\"\n                                 [chunkSize]=\"chunkSize\"\n                                 [customErrors]=\"customErrors\"\n                                 [enableCustomDownload]=\"enableCustomDownload\"\n                                 [customDownload]=\"customDownload\"\n                                 (afterFileRemove)=\"removedFromQueue($event)\"\n                                 (fileDeleted)=\"fileDeleted($event)\"\n                                 [file]=\"file\"\n                                 [testID]=\"testID + '_uploader-item'\"\n                                 [texts]=\"texts\"></adapt-uploader-item>\n          </div>\n\n          <div class=\"d-flex justify-content-end mt-1\" *ngIf=\"files.length > visibleFiles\">\n            <button class=\"btn btn-link btn-uploader-collapse-btn\" (click)=\"fileList.toggle()\"\n                    [attr.aria-expanded]=\"!fileList.isCollapsed\">\n              <span>{{fileList.isCollapsed ? texts.showMore : texts.showLess}}</span>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!--  Files wrapper END  -->\n    </div>\n  </div>\n\n  <adapt-alert *ngIf=\"!isFoldersAllowed && showUploadFolderAlert\"\n               [config]=\"{title: 'Folders uploading', content: folderUploadingForbiddenMsg, type: 'inline', variant: 'warning'}\">\n  </adapt-alert>\n</div>\n\n<ng-template #emptyTmpl></ng-template>\n\n<ng-template #emptyReadonly>\n  <adapt-empty-state [type]=\"'objects'\"\n                     [label]=\"texts.notFound\">\n  </adapt-empty-state>\n</ng-template>\n\n<ng-template #fileAttachmentControls>\n  <div *ngIf=\"allowFileUploading\"\n       [adaptRadarDisableEventSending]=\"true\"\n       [adaptTooltip]=\"selectFilesButtonTooltip\"\n       [placement]=\"'auto'\"\n       class=\"d-inline-block adapt-rx-uploader-file-attach-btn__wrp\">\n    <button type=\"button\"\n            adapt-button\n            btn-type=\"secondary\"\n            class=\"adapt-rx-uploader-attach-btn\"\n            [adaptRadarDisableEventSending]=\"true\"\n            [attr.data-testid]=\"testID + '_file-attach'\"\n            [attr.aria-labelledby]=\"ariaLabelledby\"\n            [attr.aria-describedby]=\"ariaDescribedBy\"\n            [attr.aria-invalid]=\"hasDangerState\"\n            [attr.aria-errormessage]=\"ariaErrorMessage\"\n            [disabled]=\"isDisabledSelectBtn\"\n            (click)=\"openFileDialog(false)\">\n      <span class=\"btn-icon d-icon-file_o\"></span>\n      {{ isMultipleAllowed ? texts.fileBtn : texts.fileBtnSingle }}\n    </button>\n  </div>\n\n  <div *ngIf=\"allowDirUploading\"\n       [adaptTooltip]=\"selectFilesButtonTooltip\"\n       [adaptRadarDisableEventSending]=\"true\"\n       [placement]=\"'auto'\"\n       class=\"d-inline-block adapt-rx-uploader-folder-attach-btn__wrp\">\n    <button type=\"button\"\n            adapt-button\n            btn-type=\"secondary\"\n            class=\"adapt-rx-uploader-attach-btn\"\n            [adaptRadarDisableEventSending]=\"true\"\n            [attr.data-testid]=\"testID + '_folder-attach'\"\n            [disabled]=\"isDisabledSelectBtn\"\n            (click)=\"openFileDialog(true)\">\n      <span class=\"btn-icon d-icon-folder_o\"></span>\n      {{ texts.folderBtn }}\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #dndAnimationTmpl>\n  <div class=\"animation__block-wrp\">\n    <div class=\"animation__dnd\" #dnd\n         [@uploaderInitStateAnim]=\"{params: {leftStart: isRtl ? 'auto' : '15%',\n                                                rightStart: isRtl ? '15%' : 'auto',\n                                                leftEnd: isRtl ? 'auto' : '0px',\n                                                rightEnd: isRtl ? '0px' : 'auto'}}\">\n      <ng-container [ngTemplateOutlet]=\"!isDisableFileDialog ? fileAttachmentControls : emptyTmpl\"></ng-container>\n\n      <ng-container *ngIf=\"!isMultipleAllowed\">\n        <span class=\"adapt-rx-uploader__dnd-text m-0 m-start-2\">\n          {{ isMultipleAllowed ? texts.fileMode : texts.fileModeSingle }}\n        </span>\n      </ng-container>\n\n      <ng-container *ngIf=\"isMultipleAllowed\">\n        <ng-container [ngSwitch]=\"selectionMode\">\n          <span class=\"adapt-rx-uploader__dnd-text m-0 m-start-2\" *ngSwitchCase=\"fileMode\">\n            {{ isMultipleAllowed ? texts.fileMode : texts.fileModeSingle }}\n          </span>\n          <span class=\"adapt-rx-uploader__dnd-text m-0 m-start-2\" *ngSwitchCase=\"dirMode\">\n            {{ texts.dirMode }}\n          </span>\n          <span class=\"adapt-rx-uploader__dnd-text m-0 m-start-2\" *ngSwitchCase=\"mixMode\">\n            {{ texts.mixMode }}\n          </span>\n        </ng-container>\n      </ng-container>\n    </div>\n\n    <div class=\"animation__drop\" #drop>\n      <div class=\"adapt-rx-uploader__drop-animation\"\n           [class.hidden]=\"readFolder\">\n        <ng-container *ngIf=\"!isUploadLimitExceed\">\n          <div class=\"drop-icon\">\n            <div class=\"icon svg-cloud-icon\" [innerHTML]=\"tmplSvgIcons.tmplCloud\"></div>\n            <div class=\"icon svg-arrow-icon\" [innerHTML]=\"tmplSvgIcons.tmplArrow\"></div>\n          </div>\n          <p class=\"adapt-rx-uploader__dnd-text m-0 m-start-2\">\n            {{ isMultipleAllowed ? texts.dragAndDrop : texts.dragAndDropSingle }}\n          </p>\n        </ng-container>\n\n        <ng-container *ngIf=\"isUploadLimitExceed\">\n          <div class=\"drop-icon\">\n            <div class=\"icon svg-cloud-icon__forbidden\" [innerHTML]=\"tmplSvgIcons.tmplCloudForbidden\"></div>\n          </div>\n          <p class=\"adapt-rx-uploader__dnd-text adapt-rx-uploader__dnd-text-forbidden m-0 m-start-2\">\n            {{ uploadLimitExceed }}\n          </p>\n        </ng-container>\n      </div>\n\n      <div class=\"adapt-rx-uploader__search-animation\"\n           *ngIf=\"readFolder\">\n        <div class=\"drop-icon drop-icon__search\">\n          <div class=\"icon svg-directory-read\" [innerHTML]=\"tmplSvgIcons.tmplDirectory\"></div>\n          <div class=\"icon svg-search\" [innerHTML]=\"tmplSvgIcons.tmplSearch\"></div>\n        </div>\n        <p class=\"adapt-rx-uploader__dnd-text m-0 m-start-2\">\n          {{ directorySearch }}\n        </p>\n      </div>\n    </div>\n  </div>\n</ng-template>\n"]}