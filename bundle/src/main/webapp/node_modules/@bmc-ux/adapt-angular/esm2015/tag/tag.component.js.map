{"version":3,"file":"tag.component.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/tag/tag.component.ts","../../../../../libs/adapt-angular/src/tag/tag.component.html"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,UAAU,EACV,YAAY,EACZ,KAAK,EACL,MAAM,EACN,SAAS,EACT,iBAAiB,EAClB,MAAM,eAAe,CAAC;AACvB,OAAO,EAAC,qBAAqB,EAAC,MAAM,sBAAsB,CAAC;AAC3D,OAAO,EACL,gCAAgC,EAChC,iCAAiC,EACjC,wBAAwB,EACzB,MAAM,6BAA6B,CAAC;AACrC,OAAO,EAAC,WAAW,EAAC,MAAM,WAAW,CAAC;AACtC,OAAO,EAAuB,UAAU,EAAC,MAAM,uBAAuB,CAAC;;;;;;;;ICbrE,4BAQiC;IAF9B,+KAA0B,KAAK,IAAC,gKACP,IAAI,IADG,gJAEvB,0BAAmB,IAFI;IAEF,iBAAI;;;IAJlC,oDAAmC,mCAAA;;;ADkBxC,MAAM,OAAO,iBAAkB,SAAQ,iCAAiC;IAkCtE,YAAY,EAAyB,EACzB,kBAA4C,EAC5C,KAA8B;QACxC,KAAK,CAAC,kBAAkB,EAAE,KAAK,EAAE,gCAAgC,CAAC,QAAQ,CAAC,CAAC;QAjB9E;;WAEG;QACgB,WAAM,GAA6C,IAAI,YAAY,EAA8B,CAAC;QAIrH,mBAAc,GAAY,IAAI,CAAC;QAY7B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,kBAAkB,EAAE,CAAC,qBAAqB,CAAC,CAAC;IACtE,CAAC;IAED,0BAA0B;IAC1B;;;OAGG;IACK,eAAe,CAAC,OAAe;QACrC,OAAO,CAAC,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACtG,CAAC;IAED,IAAI,QAAQ;QACV,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAEnD,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAChD,IAAI,UAAU,GAAW,SAAS,IAAI,CAAC,IAAI,EAAE,CAAC;YAE9C,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,UAAU,GAAG,UAAU,GAAG,WAAW,CAAC;aACvC;YAED,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC1B;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,IAAI,QAAQ;QACV,IAAI,KAAK,GAAG,EAAE,CAAC;QAEf,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACjD,KAAK,GAAG,EAAC,eAAe,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,aAAa,EAAE,EAAC,CAAC;SACnE;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,WAAW;QACb,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,IAAI,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAC3F,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/F,CAAC;IAEO,aAAa;QACnB,IAAI,CAAC,qBAAqB,GAAG,UAAU,CAAC,aAAa,CAAC,SAAS,EAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7E,IAAI,CAAC,oBAAoB,GAAG,UAAU,CAAC,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAE3E,IAAI,IAAI,CAAC,qBAAqB,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE;YACtE,OAAO,SAAS,CAAC;SAClB;aAAM,IAAI,IAAI,CAAC,qBAAqB,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE;YAC7E,OAAO,SAAS,CAAC;SAClB;IACH,CAAC;;kFAlGU,iBAAiB;oEAAjB,iBAAiB;;;;;;;QCzB9B,+BAE2B;QACzB,oBAAA;QAAA,8DAQqC;QACrC,oBAAA;QAAA,qCAAe;QAAA,kBAAyB;QAAA,iBAAO;QACjD,kBAAA;QAAA,iBAAO;QACP,kBAAA;;QAbM,sCAAoB,yBAAA;QAEpB,eAAiB;QAAjB,sCAAiB;;uFDsBV,iBAAiB;cAL7B,SAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,sBAAsB;gBACnC,aAAa,EAAE,iBAAiB,CAAC,IAAI;aACtC;wIAOU,IAAI;kBAAZ,KAAK;YAMG,SAAS;kBAAjB,KAAK;YAMG,QAAQ;kBAAhB,KAAK;YAKa,MAAM;kBAAxB,MAAM;YAE+B,OAAO;kBAA5C,SAAS;mBAAC,SAAS,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC","sourcesContent":["import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {AdaptTranslateService} from '../common/i18n/index';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularGenericDirective,\n  AdaptRadarAngularService\n} from '../common/radar/adapt-radar';\nimport {isUndefined} from 'lodash-es';\nimport {AdaptContrastResults, ColorUtils} from '../common/color.utils';\nimport {AdaptTagType} from './index';\nimport {KeyValueObject} from '../common/common.models';\n\n@Component({\n  selector: 'adapt-tag',\n  templateUrl: './tag.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class AdaptTagComponent extends AdaptRadarAngularGenericDirective {\n  /**\n   * Specifies type of the tag.\n   * Supported values: \"primary\", \"info\", \"success\", \"warning\", \"danger\", \"active\", \"secondary\", \"any color value for custom color\"\n   * @docs-default\n   */\n  @Input() type: AdaptTagType | string;\n\n  /**\n   * Shows close button and active status\n   * @docs-default undefined (or true if \"remove\" has subscribers)\n   */\n  @Input() removable: boolean;\n\n  /**\n   * Disabled tags can`t be removed. Also tag color is muted\n   * @since 11.16.0\n   **/\n  @Input() disabled: boolean;\n\n  /**\n   * Emits an event for tag item removing (but item will be not removed automatically)\n   */\n  @Output() readonly remove: EventEmitter<MouseEvent | KeyboardEvent> = new EventEmitter<MouseEvent | KeyboardEvent>();\n\n  @ViewChild('content', {static: true}) content: ElementRef<HTMLElement>;\n\n  iconAriaHidden: boolean = true;\n\n  private _closeBtnText: string;\n\n  private _contrastLightResults: AdaptContrastResults;\n  private _contrastDarkResults: AdaptContrastResults;\n\n  constructor(ts: AdaptTranslateService,\n              _adaptRadarService: AdaptRadarAngularService,\n              _elem: ElementRef<HTMLElement>) {\n    super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptTag);\n\n    this._closeBtnText = ts.getCurrentLanguage()['adapt.common.remove'];\n  }\n\n  // user defined type guard\n  /**\n   * type check for user defined types \n   * ref: https://www.typescriptlang.org/docs/handbook/advanced-types.html#user-defined-type-guards\n   */\n  private _isAdaptTagType(tagType: string): tagType is AdaptTagType {\n    return ['primary', 'info', 'success', 'warning', 'danger', 'active', 'secondary'].includes(tagType);\n  }\n\n  get tagClass(): string[] {\n    const classes = this.isRemovable ? ['active'] : [];\n\n    if (this.type && this._isAdaptTagType(this.type)) {\n      let styleClass: string = `a-tag-${this.type}`;\n\n      if (this.disabled) {\n        styleClass = styleClass + '-disabled';\n      }\n\n      classes.push(styleClass);\n    }\n\n    return classes;\n  }\n\n  get tagStyle(): KeyValueObject {\n    let style = {};\n\n    if (this.type && !this._isAdaptTagType(this.type)) {\n      style = {backgroundColor: this.type, color: this._getTextColor()};\n    }\n\n    return style;\n  }\n\n  get isRemovable(): boolean {\n    if (this.disabled) {\n      return false;\n    }\n\n    return this.removable || (!!this.remove.observers.length && isUndefined(this.removable));\n  }\n\n  get closeBtnText(): string {\n    return this._closeBtnText + (this.content ? ` ${this.content.nativeElement.innerText}` : '');\n  }\n\n  private _getTextColor(): string {\n    this._contrastLightResults = ColorUtils.checkContrast('#FFFFFF' , this.type);\n    this._contrastDarkResults = ColorUtils.checkContrast('#333333', this.type);\n\n    if (this._contrastLightResults.ratio > this._contrastDarkResults.ratio) {\n      return '#FFFFFF';\n    } else if (this._contrastLightResults.ratio < this._contrastDarkResults.ratio) {\n      return '#333333';\n    }\n  }\n}\n","<span class=\"a-tag\"\n      [ngClass]=\"tagClass\"\n      [ngStyle]=\"tagStyle\">\n  <a *ngIf=\"isRemovable\"\n     role=\"button\"\n     tabindex=\"0\"\n     class=\"close close-inverse\"\n     [attr.aria-hidden]=\"iconAriaHidden\"\n     [attr.aria-label]=\"closeBtnText\"\n     (focus)=\"iconAriaHidden = false\"\n     (blur)=\"iconAriaHidden = true\"\n     (click)=\"remove.emit($event)\"></a>\n  <span #content><ng-content></ng-content></span>\n</span>\n"]}