import { Component, ElementRef, Input, TemplateRef, ViewChild } from '@angular/core';
import { transition, trigger, useAnimation } from '@angular/animations';
import { AdaptDeviceDetectionService } from '../common/device-detection.service';
import { ANIMATION_NAME } from '../common/animation';
import { AdaptRadarAngularCustomEventName, AdaptRadarAngularGenericDirective, AdaptRadarAngularService } from '../common/radar/adapt-radar';
import * as i0 from "@angular/core";
import * as i1 from "../common/device-detection.service";
import * as i2 from "../common/radar/adapt-radar";
import * as i3 from "@angular/common";
import * as i4 from "../rx/form-control/rx-control-label/adapt-rx-control-label.component";
const _c0 = ["anchor"];
const _c1 = ["content"];
function AdaptBeardComponent_adapt_rx_control_label_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "adapt-rx-control-label", 5);
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵproperty("label", ctx_r0.label);
} }
function AdaptBeardComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    const _r5 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 6, 7);
    i0.ɵɵlistener("mouseenter", function AdaptBeardComponent_div_6_Template_div_mouseenter_0_listener() { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.onMouseEnter(); });
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵclassProp("hidden", ctx_r1.isMouseEnter);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("\n      ", ctx_r1.description, "\n    ");
} }
const _c2 = function (a0) { return { $implicit: a0 }; };
function AdaptBeardComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    const _r8 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 8, 9);
    i0.ɵɵlistener("mouseleave", function AdaptBeardComponent_div_8_Template_div_mouseleave_0_listener() { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.onMouseLeave(); });
    i0.ɵɵtext(2, "\n      ");
    i0.ɵɵelementContainer(3, 10);
    i0.ɵɵtext(4, "\n    ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵproperty("@contentBlockAnimation", undefined);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r2.template)("ngTemplateOutletContext", i0.ɵɵpureFunction1(3, _c2, ctx_r2.tmplContext));
} }
export class AdaptBeardComponent extends AdaptRadarAngularGenericDirective {
    constructor(_deviceDetector, _adaptRadarService, _elem) {
        super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptBeard);
        this._deviceDetector = _deviceDetector;
        this.isMobile = false;
        this.isMouseEnter = false;
        /**
         * Template to be displayed as collapsed content
         * @docs-default null
         */
        this.template = null;
        /**
         * A context object which can be passed to customize the template output. Please notice, under the hood $implicit key is used
         * @docs-default null
         */
        this.tmplContext = null;
    }
    ngOnInit() {
        this.isMobile = this._deviceDetector.isMobile();
    }
    onMouseEnter() {
        this.isMouseEnter = true;
    }
    onMouseLeave() {
        if (this.isMobile) {
            return;
        }
        this.isMouseEnter = false;
    }
}
AdaptBeardComponent.ɵfac = function AdaptBeardComponent_Factory(t) { return new (t || AdaptBeardComponent)(i0.ɵɵdirectiveInject(i1.AdaptDeviceDetectionService), i0.ɵɵdirectiveInject(i2.AdaptRadarAngularService), i0.ɵɵdirectiveInject(i0.ElementRef)); };
AdaptBeardComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptBeardComponent, selectors: [["adapt-beard"]], viewQuery: function AdaptBeardComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 5);
        i0.ɵɵviewQuery(_c1, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tmplAnchor = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tmplContent = _t.first);
    } }, inputs: { label: "label", description: "description", template: "template", tmplContext: "tmplContext" }, features: [i0.ɵɵInheritDefinitionFeature], decls: 12, vars: 5, consts: [[1, "adapt-beard"], [3, "label", 4, "ngIf"], [1, "adapt-beard__content"], ["class", "adapt-beard__content-anchor", 3, "hidden", "mouseenter", 4, "ngIf"], ["class", "adapt-beard__content-info", 3, "mouseleave", 4, "ngIf"], [3, "label"], [1, "adapt-beard__content-anchor", 3, "mouseenter"], ["anchor", ""], [1, "adapt-beard__content-info", 3, "mouseleave"], ["content", ""], [3, "ngTemplateOutlet", "ngTemplateOutletContext"]], template: function AdaptBeardComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 0);
        i0.ɵɵtext(1, "\n\n  ");
        i0.ɵɵtemplate(2, AdaptBeardComponent_adapt_rx_control_label_2_Template, 1, 1, "adapt-rx-control-label", 1);
        i0.ɵɵtext(3, "\n\n  ");
        i0.ɵɵelementStart(4, "div", 2);
        i0.ɵɵtext(5, "\n    ");
        i0.ɵɵtemplate(6, AdaptBeardComponent_div_6_Template, 3, 3, "div", 3);
        i0.ɵɵtext(7, "\n\n    ");
        i0.ɵɵtemplate(8, AdaptBeardComponent_div_8_Template, 5, 5, "div", 4);
        i0.ɵɵtext(9, "\n  ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(10, "\n");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(11, "\n");
    } if (rf & 2) {
        i0.ɵɵclassProp("desktop-view", !ctx.isMobile);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.label);
        i0.ɵɵadvance(4);
        i0.ɵɵproperty("ngIf", !ctx.isMobile);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.isMouseEnter || ctx.isMobile);
    } }, directives: [i3.NgIf, i4.AdaptRxControlLabelComponent, i3.NgTemplateOutlet], encapsulation: 2, data: { animation: [
            trigger('contentBlockAnimation', [
                transition(':enter', [
                    useAnimation(ANIMATION_NAME.fadeIn)
                ]),
                transition(':leave', [
                    useAnimation(ANIMATION_NAME.fadeOut)
                ])
            ])
        ] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptBeardComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-beard',
                templateUrl: './beard.component.html',
                animations: [
                    trigger('contentBlockAnimation', [
                        transition(':enter', [
                            useAnimation(ANIMATION_NAME.fadeIn)
                        ]),
                        transition(':leave', [
                            useAnimation(ANIMATION_NAME.fadeOut)
                        ])
                    ])
                ]
            }]
    }], function () { return [{ type: i1.AdaptDeviceDetectionService }, { type: i2.AdaptRadarAngularService }, { type: i0.ElementRef }]; }, { label: [{
            type: Input
        }], description: [{
            type: Input
        }], template: [{
            type: Input
        }], tmplContext: [{
            type: Input
        }], tmplAnchor: [{
            type: ViewChild,
            args: ['anchor', { static: false }]
        }], tmplContent: [{
            type: ViewChild,
            args: ['content', { static: false }]
        }] }); })();
//# sourceMappingURL=beard.component.js.map