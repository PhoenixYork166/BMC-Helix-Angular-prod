import { Input, Directive, ElementRef } from '@angular/core';
import * as i0 from "@angular/core";
export class AdaptInlineStandaloneDirective {
    constructor(_elementRef) {
        this._elementRef = _elementRef;
        this.adaptInlineLoader = false;
        this._cls = {
            normal: 'adapt-build-in-loader',
            active: 'adapt-build-in-loader-active'
        };
        this._isInitialized = false;
        _elementRef.nativeElement.classList.add(this._cls.normal);
    }
    ngAfterViewInit() {
        this._initText = this._elementRef.nativeElement.textContent;
        this._isInitialized = true;
        this.toggleLoader();
    }
    ngOnChanges() {
        if (this._isInitialized) {
            this.toggleLoader();
        }
    }
    toggleLoader() {
        if (this.adaptInlineLoader) {
            this._elementRef.nativeElement.classList.add(this._cls.active);
            this._initText = this._elementRef.nativeElement.textContent;
            if (this.activeText) {
                this._elementRef.nativeElement.textContent = this.activeText;
            }
        }
        else {
            this._elementRef.nativeElement.classList.remove(this._cls.active);
            if (this.activeText) {
                this._elementRef.nativeElement.textContent = this._initText;
            }
        }
    }
}
AdaptInlineStandaloneDirective.ɵfac = function AdaptInlineStandaloneDirective_Factory(t) { return new (t || AdaptInlineStandaloneDirective)(i0.ɵɵdirectiveInject(i0.ElementRef)); };
AdaptInlineStandaloneDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: AdaptInlineStandaloneDirective, selectors: [["", "adaptInlineLoader", ""]], inputs: { adaptInlineLoader: "adaptInlineLoader", activeText: "activeText" }, features: [i0.ɵɵNgOnChangesFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptInlineStandaloneDirective, [{
        type: Directive,
        args: [{
                selector: '[adaptInlineLoader]'
            }]
    }], function () { return [{ type: i0.ElementRef }]; }, { adaptInlineLoader: [{
            type: Input
        }], activeText: [{
            type: Input
        }] }); })();
//# sourceMappingURL=busy-inline-standalone.directive.js.map