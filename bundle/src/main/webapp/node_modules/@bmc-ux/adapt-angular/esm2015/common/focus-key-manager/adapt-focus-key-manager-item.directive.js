import { Directive, ElementRef, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class AdaptFocusKeyManagerItemDirective {
    constructor(_elementRef) {
        this._elementRef = _elementRef;
    }
    focus() {
        this._elementRef.nativeElement.focus();
    }
}
AdaptFocusKeyManagerItemDirective.ɵfac = function AdaptFocusKeyManagerItemDirective_Factory(t) { return new (t || AdaptFocusKeyManagerItemDirective)(i0.ɵɵdirectiveInject(i0.ElementRef)); };
AdaptFocusKeyManagerItemDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: AdaptFocusKeyManagerItemDirective, selectors: [["", "adaptFocusKeyManagerItem", ""]], inputs: { disabled: "disabled" }, exportAs: ["adaptFocusKeyManagerItem"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptFocusKeyManagerItemDirective, [{
        type: Directive,
        args: [{
                selector: '[adaptFocusKeyManagerItem]',
                exportAs: 'adaptFocusKeyManagerItem'
            }]
    }], function () { return [{ type: i0.ElementRef }]; }, { disabled: [{
            type: Input
        }] }); })();
//# sourceMappingURL=adapt-focus-key-manager-item.directive.js.map