{"version":3,"file":"scroll-manage.service.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/common/scroll-manage.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\nimport {AdaptDeviceDetectionService} from './device-detection.service';\n\nlet CONTAINER_ID = 1;\n\nexport interface ScrollManagerApi {\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  hide: (hiddenScrollSubscriber?: any) => void; // make a parameter optional for backward compatibility\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  show: (hiddenScrollSubscriber?: any) => void; // make a parameter optional for backward compatibility\n}\n\n/**\n * The service for manage scrollbar visibility for the current container\n *\n * getScrollManager(element: HTMLElement) - returns an object for manipulation scroll visibility for element\n * Scroll manage object:\n * {\n *  hide: () => void;   <–– hide scrollbar\n *  show: () => void    <–– show scrollbar\n * }\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScrollManageService {\n  /**\n   * Containers for whom provide scroll manager\n   */\n  private _containers: ContainerScrollManager[] = [];\n  /**\n   * Style container which will be contains all computed styles\n   */\n  private _styleListContainer: HTMLStyleElement;\n  /**\n   * Computed scrollbar width\n   */\n  private _scrollbarWidth: number;\n\n  constructor(private _deviceDetectionService: AdaptDeviceDetectionService) {\n    this._calculateScrollbarWidth();\n    this._createStyleContainer();\n  }\n\n  /**\n   * Public API\n   * returns hide: (() => void); show: (() => void)\n   */\n  getScrollManager(element: HTMLElement): ScrollManagerApi {\n    let scrollEl = this._getContainer(element);\n\n    if (!scrollEl) {\n      scrollEl = new ContainerScrollManager(element, this._scrollbarWidth, this._updateStyleList.bind(this), this._deviceDetectionService);\n      this._containers.push(scrollEl);\n      this._updateStyleList();\n    }\n\n    return scrollEl.api;\n  }\n\n  /**\n   * Method for search the container among registered\n   * returns ContainerScrollManager\n   */\n  private _getContainer(el: HTMLElement): ContainerScrollManager {\n    return this._containers.find((elem) => {\n      return elem.el === el;\n    });\n  }\n\n  /**\n   * Method for calculating scrollbar width in the current environment\n   */\n  private _calculateScrollbarWidth(): void {\n    // Set up and add to DOM temporary outer div\n    const outer = document.createElement('div');\n\n    outer.style.visibility = 'hidden';\n    outer.style.width = '100px';\n\n    document.body.appendChild(outer);\n\n    // Get width without scroll\n    const widthNoScroll = outer.offsetWidth;\n\n    // Force scrollbars\n    outer.style.overflow = 'scroll';\n\n    // Set up and add to DOM temporary inner div\n    const inner = document.createElement('div');\n\n    inner.style.width = '100%';\n    outer.appendChild(inner);\n\n    // Get width with scroll\n    const widthWithScroll = inner.offsetWidth;\n\n    // Remove temporary divs\n    outer.parentNode.removeChild(outer);\n\n    // Get scrollbar width\n    this._scrollbarWidth = widthNoScroll - widthWithScroll;\n  }\n\n  /**\n   * Method for creation style container\n   */\n  private _createStyleContainer(): void {\n    this._styleListContainer = document.createElement('style');\n    this._styleListContainer.type = 'text/css';\n    document.getElementsByTagName('head')[0].appendChild(this._styleListContainer);\n  }\n\n  /**\n   * Method for updating all styles in the style container\n   */\n  private _updateStyleList(): void {\n    const containersStyleList = this._containers.map((elem) => {\n      return elem.style;\n    });\n\n    this._styleListContainer.innerText = containersStyleList.join('\\n') + '\\n.overflow-hidden{overflow: hidden!important;}';\n  }\n}\n\n/**\n * The class represents scrollbar manager for container\n */\nexport class ContainerScrollManager {\n  // Public fields\n  style: string;\n  el: HTMLElement;\n  api: ScrollManagerApi = {\n    hide: this.hideScroll.bind(this),\n    show: this.showScroll.bind(this)\n  };\n\n  // Private fields\n  private cssClass: string;\n  private scrollbarWidth: number;\n  private styleUpdateCallback: () => void;\n  private deviceDetection: AdaptDeviceDetectionService;\n  private top: number;\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private hiddenScrollSubscribers: Set<any> = new Set<any>();\n\n  constructor(element: HTMLElement,\n              scrollbarWidth: number,\n              styleUpdateCallback: () => void,\n              deviceDetectionService: AdaptDeviceDetectionService) {\n    this.el = element;\n    this.cssClass = `sc-${CONTAINER_ID++}-hide-scroll`;\n    this.scrollbarWidth = scrollbarWidth;\n    this.styleUpdateCallback = styleUpdateCallback;\n    this.deviceDetection = deviceDetectionService;\n  }\n\n  /**\n   * Method for checking container paddingRight property and calculating additional styles according to that\n   */\n  private _checkContainer(): void {\n    const elementPadding = parseInt(getComputedStyle(this.el).paddingRight, 10) + this.scrollbarWidth;\n\n    this.style = `.${this.cssClass}{padding-right: ${elementPadding}px!important;}`;\n    this.styleUpdateCallback();\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  /**\n   * Hide scroll for current container\n   */\n  private hideScroll(hiddenScrollSubscriber: any): void {\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n    if (hiddenScrollSubscriber && !this.hiddenScrollSubscribers.has(hiddenScrollSubscriber)) {\n      this.hiddenScrollSubscribers.add(hiddenScrollSubscriber);\n    }\n\n    // fix for ios devices\n    if (this.deviceDetection.iosPlatform()) {\n      this.top = document.body.getBoundingClientRect().top;\n      this.el.style.position = 'fixed';\n      this.el.style.width = '100%';\n      this.el.style.top = this.top + 'px';\n\n      return;\n    }\n\n    const w1 = getComputedStyle(this.el).width;\n\n    this.el.classList.add('overflow-hidden');\n    const w2 = getComputedStyle(this.el).width;\n\n    // Check if the scroll was visible before overflow restriction\n    if (w1 !== w2) {\n      this._checkContainer();\n      this.el.classList.add(this.cssClass);\n    }\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  /**\n   * Show scroll for current container\n   */\n  private showScroll(hiddenScrollSubscriber: any): void {\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n    if (hiddenScrollSubscriber) {\n      this.hiddenScrollSubscribers.delete(hiddenScrollSubscriber);\n\n      if (this.hiddenScrollSubscribers.size > 0) {\n        return;\n      }\n    }\n\n    // fix for ios devices\n    if (this.deviceDetection.iosPlatform()) {\n      const n = this.top * (-1);\n\n      this.el.style.removeProperty('position');\n      this.el.style.removeProperty('width');\n      this.el.style.removeProperty('top');\n\n      // position = 'static';\n      window.scroll(0, n);\n\n      return;\n    }\n\n    this.el.classList.remove('overflow-hidden');\n    this.el.classList.remove(this.cssClass);\n  }\n}\n"]}