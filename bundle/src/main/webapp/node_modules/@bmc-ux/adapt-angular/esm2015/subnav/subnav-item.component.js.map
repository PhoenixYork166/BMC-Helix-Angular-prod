{"version":3,"file":"subnav-item.component.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/subnav/subnav-item.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,iBAAiB,EACjB,SAAS,EACT,UAAU,EACV,KAAK,EAEL,SAAS,EACT,WAAW,EACX,SAAS,EACT,gBAAgB,EACjB,MAAM,eAAe,CAAC;AACvB,OAAO,EAAC,OAAO,EAAC,MAAM,oBAAoB,CAAC;;;;;;AAW3C,MAAM,OAAO,wBAAwB;IAiDnC,YAAoB,WAAoC,EACpC,SAAoB,EACpB,kBAAqC;QAFrC,gBAAW,GAAX,WAAW,CAAyB;QACpC,cAAS,GAAT,SAAS,CAAW;QACpB,uBAAkB,GAAlB,kBAAkB,CAAmB;QA1CzD;;;WAGG;QACM,oBAAe,GAAW,SAAS,CAAC;QAE7C;;;WAGG;QACM,kBAAa,GAAY,KAAK,CAAC;QAExC;;;WAGG;QACM,aAAQ,GAAW,CAAC,CAAC;QAqBtB,cAAS,GAAY,KAAK,CAAC;QAC3B,WAAM,GAAW,CAAC,CAAC;IAK3B,CAAC;IAvBD,IAAI,QAAQ,CAAC,CAAU;QACrB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACjD,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,IAAI,KAAK;QACP,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,WAAW,CAAC;SAC1D;QAED,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAUD,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACjD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;IACL,CAAC;;gGA1DU,wBAAwB;2EAAxB,wBAAwB;+BA2BJ,gBAAgB;;;;;QAjC3C,wBAAA;QAAA,2BAC+E;QAE/E,0BAAA;QAAA,0HAAsC;QAC1C,oBAAA;;;QAJkB,eAA4D;QAA5D,4EAA4D,qEAAA;;uFAMnE,wBAAwB;cATpC,SAAS;eAAC;gBACT,QAAQ,EAAE,sCAAsC;gBAChD,QAAQ,EAAE;;;;;GAKT;aACF;qHAQU,eAAe;kBAAvB,KAAK;YAMG,eAAe;kBAAvB,KAAK;YAMG,aAAa;kBAArB,KAAK;YAMG,QAAQ;kBAAhB,KAAK;YAE0D,SAAS;kBAAxE,SAAS;mBAAC,WAAW,EAAE,EAAC,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE,IAAI,EAAC","sourcesContent":["import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport {SafeCdr} from '../common/safe-cdr';\n\n@Component({\n  selector: 'adapt-subnav-item, [adaptSubnavItem]',\n  template: `\n      <ng-container [ngTemplateOutlet]=\"!isHidden ? adaptSubnavItem : emptyTmpl\"\n                    [ngTemplateOutletContext]=\"{$implicit: isHidden}\"></ng-container>\n\n      <ng-template #emptyTmpl></ng-template>\n  `\n})\nexport class AdaptSubnavItemComponent implements OnInit {\n  /**\n   * Item's content template\n   * @docs-default\n   */\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Input() adaptSubnavItem: TemplateRef<any>;\n\n  /**\n   * Default css class list for host element\n   * @docs-default d-block\n   */\n  @Input() defaultCssClass: string = 'd-block';\n\n  /**\n   * Prevent item to be hidden\n   * @docs-default false\n   */\n  @Input() preventHiding: boolean = false;\n\n  /**\n   * Visibility priority\n   * @docs-default 0\n   */\n  @Input() priority: number = 0;\n\n  @ViewChild('container', {read: ViewContainerRef, static: true}) container: ViewContainerRef;\n\n  set isHidden(v: boolean) {\n    this._isHidden = v;\n    SafeCdr.detectChanges(this._changeDetectorRef);\n  }\n\n  get isHidden(): boolean {\n    return this._isHidden;\n  }\n\n  get width(): number {\n    if (!this.isHidden) {\n      this._width = this._elementRef.nativeElement.offsetWidth;\n    }\n\n    return this._width;\n  }\n\n  private _isHidden: boolean = false;\n  private _width: number = 0;\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnInit(): void {\n    this.defaultCssClass.split(' ').forEach(cssClass => {\n      this._renderer.addClass(this._elementRef.nativeElement, cssClass);\n    });\n  }\n}\n"]}