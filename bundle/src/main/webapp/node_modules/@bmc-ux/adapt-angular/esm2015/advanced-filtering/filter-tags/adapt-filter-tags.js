import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, HostBinding, Input, Output, } from '@angular/core';
import { formatString } from '../../common/utilities';
import { SafeCdr } from '../../common/safe-cdr';
import * as i0 from "@angular/core";
import * as i1 from "../../subnav/subnav.component";
import * as i2 from "@angular/common";
import * as i3 from "../../subnav/subnav-dropdown.component";
import * as i4 from "../../subnav/subnav-item.component";
import * as i5 from "../../tag/tag.component";
function AdaptFilterTagsComponent_ng_container_2_ng_container_2_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    const _r9 = i0.ɵɵgetCurrentView();
    i0.ɵɵtext(0, "\n          ");
    i0.ɵɵelementStart(1, "div", 7);
    i0.ɵɵtext(2, "\n            ");
    i0.ɵɵelementStart(3, "adapt-tag", 8);
    i0.ɵɵlistener("remove", function AdaptFilterTagsComponent_ng_container_2_ng_container_2_ng_template_4_Template_adapt_tag_remove_3_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(); const tag_r2 = ctx_r8.$implicit; const index_r3 = ctx_r8.index; const ctx_r7 = i0.ɵɵnextContext(2); return ctx_r7.onRemove($event, tag_r2, index_r3); });
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(5, "\n          ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(6, "\n        ");
} if (rf & 2) {
    const hidden_r6 = ctx.$implicit;
    const tag_r2 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance(1);
    i0.ɵɵclassProp("advanced-filter-tags__item_dropdown-item", hidden_r6);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("type", "active");
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n              ", tag_r2.text, "\n            ");
} }
function AdaptFilterTagsComponent_ng_container_2_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵelementStart(2, "adapt-subnav-item", 5);
    i0.ɵɵtext(3, "\n        ");
    i0.ɵɵtemplate(4, AdaptFilterTagsComponent_ng_container_2_ng_container_2_ng_template_4_Template, 7, 5, "ng-template", null, 6, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵtext(6, "\n      ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(7, "\n    ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const _r4 = i0.ɵɵreference(5);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("adaptSubnavItem", _r4);
} }
function AdaptFilterTagsComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n    ");
    i0.ɵɵtemplate(2, AdaptFilterTagsComponent_ng_container_2_ng_container_2_Template, 8, 1, "ng-container", 4);
    i0.ɵɵtext(3, "\n  ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r0.tags)("ngForTrackBy", ctx_r0.trackByForOutsideTag);
} }
export class AdaptFilterTagsComponent {
    constructor(_cdr) {
        this._cdr = _cdr;
        this.remove = new EventEmitter();
        this.visibilityChanged = new EventEmitter();
        this.class = true;
    }
    trackByForOutsideTag(index, tag) {
        var _a, _b, _c;
        return ((_b = (_a = tag) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.filterOption.id)
            || ((_c = tag) === null || _c === void 0 ? void 0 : _c.parent.data.id)
            || index;
    }
    onRemove(domEvent, tag, index) {
        this.remove.emit({ domEvent, tag, index });
    }
    handleVisibilityChanged(items) {
        const hiddenItemsCount = items.filter(item => item.isHidden).length;
        this.hiddenTagsLabel = formatString(this.texts.hiddenItemsCounterLabel, hiddenItemsCount);
        this.visibilityChanged.emit({ hiddenItemsCount });
        SafeCdr.detectChanges(this._cdr);
    }
}
AdaptFilterTagsComponent.ɵfac = function AdaptFilterTagsComponent_Factory(t) { return new (t || AdaptFilterTagsComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
AdaptFilterTagsComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptFilterTagsComponent, selectors: [["adapt-filter-tags"]], hostVars: 2, hostBindings: function AdaptFilterTagsComponent_HostBindings(rf, ctx) { if (rf & 2) {
        i0.ɵɵclassProp("advanced-filter-tags-component", ctx.class);
    } }, inputs: { tags: "tags", texts: "texts" }, outputs: { remove: "remove", visibilityChanged: "visibilityChanged" }, decls: 11, vars: 4, consts: [[1, "advanced-filter-tags", 3, "adaptRadarDisableEventSending", "visibilityChanged"], [4, "ngIf"], [3, "autoClose"], ["type", "button", 1, "btn", "btn-link", "advanced-filter-tags__dropdown-toggle-button"], [4, "ngFor", "ngForOf", "ngForTrackBy"], [1, "advanced-filter-tags__item", 3, "adaptSubnavItem"], ["itemTmpl", ""], [1, "text-no-wrap"], [3, "adaptRadarDisableEventSending", "type", "remove"]], template: function AdaptFilterTagsComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "adapt-subnav", 0);
        i0.ɵɵlistener("visibilityChanged", function AdaptFilterTagsComponent_Template_adapt_subnav_visibilityChanged_0_listener($event) { return ctx.handleVisibilityChanged($event); });
        i0.ɵɵtext(1, "\n  ");
        i0.ɵɵtemplate(2, AdaptFilterTagsComponent_ng_container_2_Template, 4, 2, "ng-container", 1);
        i0.ɵɵtext(3, "\n\n  ");
        i0.ɵɵelementStart(4, "adapt-subnav-dropdown", 2);
        i0.ɵɵtext(5, "\n    ");
        i0.ɵɵelementStart(6, "button", 3);
        i0.ɵɵtext(7);
        i0.ɵɵelementEnd();
        i0.ɵɵtext(8, "\n  ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(9, "\n");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(10, "\n");
    } if (rf & 2) {
        i0.ɵɵproperty("adaptRadarDisableEventSending", true);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.tags == null ? null : ctx.tags.length);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("autoClose", "outside");
        i0.ɵɵadvance(3);
        i0.ɵɵtextInterpolate1("\n      ", ctx.hiddenTagsLabel, "\n    ");
    } }, directives: [i1.AdaptSubnavComponent, i2.NgIf, i3.AdaptSubnavDropdownComponent, i2.NgForOf, i4.AdaptSubnavItemComponent, i5.AdaptTagComponent], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptFilterTagsComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-filter-tags',
                templateUrl: './adapt-filter-tags.html',
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: i0.ChangeDetectorRef }]; }, { tags: [{
            type: Input
        }], texts: [{
            type: Input
        }], remove: [{
            type: Output
        }], visibilityChanged: [{
            type: Output
        }], class: [{
            type: HostBinding,
            args: ['class.advanced-filter-tags-component']
        }] }); })();
//# sourceMappingURL=adapt-filter-tags.js.map