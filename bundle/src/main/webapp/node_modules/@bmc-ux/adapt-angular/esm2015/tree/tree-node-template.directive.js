import { Directive, TemplateRef, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class AdaptTreeNodeTemplateDirective {
    // TODO: Refactor this if possible
    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
    constructor(template) {
        this.template = template;
    }
    ngOnInit() {
        this.name = this.name || 'default';
    }
}
AdaptTreeNodeTemplateDirective.ɵfac = function AdaptTreeNodeTemplateDirective_Factory(t) { return new (t || AdaptTreeNodeTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef)); };
AdaptTreeNodeTemplateDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: AdaptTreeNodeTemplateDirective, selectors: [["", "adaptTreeNodeTemplate", ""]], inputs: { name: ["adaptTreeNodeTemplate", "name"] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptTreeNodeTemplateDirective, [{
        type: Directive,
        args: [{
                selector: '[adaptTreeNodeTemplate]'
            }]
    }], function () { return [{ type: i0.TemplateRef }]; }, { name: [{
            type: Input,
            args: ['adaptTreeNodeTemplate']
        }] }); })();
//# sourceMappingURL=tree-node-template.directive.js.map