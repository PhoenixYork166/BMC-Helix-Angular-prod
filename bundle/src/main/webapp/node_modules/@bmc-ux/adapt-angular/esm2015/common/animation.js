import { animate, animation, keyframes, style } from '@angular/animations';
// import {AnimationReferenceMetadata} from '@angular/animations/src/animation_metadata'; // need for ngc don't remove
export const ANIMATION_DURATION = {
    xtraFast: '.1s',
    fast: '.25s',
    medium: '.5s',
    slow: '1s',
    xtraSlow: '1.5s',
    infinite: 'infinite'
};
export const ANIMATION_TIMING_FUNCTION = {
    base: {
        floatInOut: 'cubic-bezier(.25, .8, .25, 1)',
        transitionIn: 'cubic-bezier(0, 0, .2, 1)',
        transitionOut: 'cubic-bezier(.4, 0, 1, 1)',
        transitionInOut: 'cubic-bezier(.4, 0, .2, 1)',
        progressInOut: 'cubic-bezier(.65, .815, .735, .395)'
    },
    quad: {
        _in: 'cubic-bezier(0.26, 0, 0.6, 0.2 )',
        _out: 'cubic-bezier(0.4, 0.8, 0.74, 1 )',
        _inOut: 'cubic-bezier(0.48, 0.04, 0.52, 0.96)'
    },
    cubic: {
        _in: 'cubic-bezier(0.32, 0, 0.66, -0.02)',
        _out: 'cubic-bezier(0.34, 1.02, 0.68, 1)',
        _inOut: 'cubic-bezier(0.62, -0.04, 0.38, 1.04)'
    },
    quart: {
        _in: 'cubic-bezier(0.46, 0, 0.74, -0.04)',
        _out: 'cubic-bezier(0.26, 1.04, 0.54, 1)',
        _inOut: 'cubic-bezier(0.7, -0.1, 0.3, 1.1)'
    },
    quint: {
        _in: 'cubic-bezier(0.52, 0, 0.78, -0.1)',
        _out: 'cubic-bezier(0.22, 1.1, 0.48, 1)',
        _inOut: 'cubic-bezier(0.76, -0.14, 0.24, 1.14)'
    },
    sine: {
        _in: 'cubic-bezier(0.32, 0, 0.6, 0.36)',
        _out: 'cubic-bezier(0.4, 0.64, 0.68, 1)',
        _inOut: 'cubic-bezier(0.36, 0, 0.64, 1)'
    },
    expo: {
        _in: 'cubic-bezier(0.62, 0.02, 0.84, -0.08)',
        _out: 'cubic-bezier(0.16, 1.08, 0.38, 0.98)',
        _inOut: 'cubic-bezier(0.84, -0.12, 0.16, 1.12)'
    },
    circ: {
        _in: 'cubic-bezier(0.54, 0, 1, 0.44)',
        _out: 'cubic-bezier(0, 0.56, 0.46, 1',
        _inOut: 'cubic-bezier(0.88, 0.14, 0.12, 0.86)'
    },
    back: {
        _in: 'cubic-bezier(0.600, -0.280, 0.735, 0.045)',
        _out: 'cubic-bezier(0.175, 0.885, 0.320, 1.275)',
        _inOut: 'cubic-bezier(0.680, -0.550, 0.265, 1.550)'
    }
};
export const ANIMATION_NAME = {
    // Single-prop animation
    height: animation([
        style({ overflow: 'hidden', height: '{{ from }}' }),
        animate('{{ duration }} {{ timingFunction }}', style({ overflow: 'hidden', height: '{{ to }}' }))
    ], {
        params: {
            duration: ANIMATION_DURATION.fast,
            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionInOut,
            from: '0',
            to: '*'
        }
    }),
    width: animation([
        style({ width: '{{ from }}' }),
        animate('{{ duration }} {{ timingFunction }}', style({ width: '{{ to }}' }))
    ], {
        params: {
            duration: ANIMATION_DURATION.fast,
            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionInOut,
            from: '0',
            to: '*'
        }
    }),
    opacity: animation([
        style({ opacity: '{{ from }}' }),
        animate('{{ duration }} {{ delay }} {{ timingFunction }}', style({ opacity: '{{ to }}' }))
    ], {
        params: {
            duration: ANIMATION_DURATION.fast,
            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionInOut,
            from: '0',
            to: '*',
            delay: '0ms'
        }
    }),
    rotate: animation([
        style({ transform: 'rotate({{ from }}deg)' }),
        animate('{{ duration }} {{ timingFunction }}', style({ transform: 'rotate({{ to }}deg)' }))
    ], {
        params: {
            duration: ANIMATION_DURATION.fast,
            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionInOut,
            from: '0',
            to: '0'
        }
    }),
    scale: animation([
        style({ transform: 'scale({{ from }})' }),
        animate('{{ duration }} {{ timingFunction }}', style({ transform: 'scale({{ to }})' }))
    ], {
        params: {
            duration: ANIMATION_DURATION.fast,
            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionIn,
            from: '0',
            to: '1'
        }
    }),
    fadeIn: animation([
        style({ height: '0', opacity: 0, overflow: 'hidden' }),
        animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionIn, style({
            height: '*',
            opacity: 1,
            overflow: 'hidden'
        }))
    ]),
    fadeOut: animation([
        style({ height: '*', opacity: 1, overflow: 'hidden' }),
        animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionOut, style({
            height: '0',
            opacity: 0,
            overflow: 'hidden'
        }))
    ]),
    // Complicate animation
    popIn: animation([
        animate('{{ duration }} {{ timingFunction }}', keyframes([
            style({ transform: 'scale(.8)', opacity: '0', offset: 0 }),
            style({ transform: 'scale(.8)', opacity: '0', offset: .2 }),
            style({ transform: 'scale(1)', opacity: '1', offset: 1 })
        ]))
    ], {
        params: {
            duration: ANIMATION_DURATION.fast,
            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionIn
        }
    }),
    popOut: animation([
        animate('{{ duration }} {{ timingFunction }}', keyframes([
            style({ transform: 'scale(1)', opacity: '1', offset: 0 }),
            style({ transform: 'scale(.8)', opacity: '0', offset: .8 }),
            style({ transform: 'scale(.8)', opacity: '0', offset: 1 })
        ]))
    ], {
        params: {
            duration: ANIMATION_DURATION.fast,
            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionOut
        }
    }),
    menuIn: animation([
        style({ transform: 'scale(.5)', opacity: '0', marginTop: '-70px' }),
        animate('{{ duration }} {{ timingFunction }}', style({ transform: 'scale(1)', opacity: '1', marginTop: '*' }))
    ], {
        params: {
            duration: ANIMATION_DURATION.fast,
            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionIn
        }
    }),
    menuOut: animation([
        style({ transform: 'scale(1)', opacity: '1', marginTop: '*' }),
        animate('{{ duration }} {{ timingFunction }}', style({ transform: 'scale(.5)', opacity: '0', marginTop: '-70px' }))
    ], {
        params: {
            duration: ANIMATION_DURATION.fast,
            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionOut
        }
    }),
    itemIn: animation([
        style({ transform: 'scale(0.5)', opacity: 0 }),
        animate('{{ duration }} {{ timingFunction }}', style({ transform: 'scale(1)', opacity: 1 }))
    ], {
        params: {
            duration: ANIMATION_DURATION.medium,
            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionInOut
        }
    }),
    itemOut: animation([
        style({ transform: 'scale(1)', opacity: 1, height: '*', overflow: 'hidden' }),
        animate('{{ duration }} {{ timingFunction }}', style({ transform: 'scale(0.5)', opacity: 0, height: 0, overflow: 'hidden' }))
    ], {
        params: {
            duration: ANIMATION_DURATION.medium,
            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionInOut
        }
    }),
    moveIn: animation([
        animate('{{ duration }} {{ timingFunction }}', keyframes([
            style({ transform: 'translate({{translateX}}{{unit}}, {{translateY}}{{unit}})', pointerEvents: 'none', opacity: '0', offset: 0 }),
            style({ transform: 'translate(0{{unit}}, 0{{unit}})', pointerEvents: 'none', opacity: '1', offset: 0.9 }),
            style({ transform: 'translate(0{{unit}}, 0{{unit}})', pointerEvents: 'all', opacity: '1', offset: 1.0 })
        ]))
    ], {
        params: {
            duration: ANIMATION_DURATION.fast,
            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionIn,
            direction: '0%, 50%',
            translateX: '0',
            translateY: '0',
            unit: '%'
        }
    }),
    moveOut: animation([
        animate('{{ duration }} {{ timingFunction }}', keyframes([
            style({ transform: 'translate(0{{unit}}, 0{{unit}})', pointerEvents: 'none', opacity: '1', offset: 0 }),
            style({ transform: 'translate({{translateX}}{{unit}}, {{translateY}}{{unit}})', pointerEvents: 'none', opacity: '0', offset: 0.5 }),
            style({ transform: 'translate({{translateX}}{{unit}}, {{translateY}}{{unit}})', pointerEvents: 'none', opacity: '0', offset: 1.0 })
        ]))
    ], {
        params: {
            duration: ANIMATION_DURATION.fast,
            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionOut,
            direction: '0%, 50%',
            translateX: '0',
            translateY: '0',
            unit: '%'
        }
    }),
    flash: animation([
        animate('{{ duration }} {{ timingFunction }}', keyframes([
            style({ opacity: '{{ from }}', offset: 0 }),
            style({ opacity: '{{ to }}', offset: .5 }),
            style({ opacity: '{{ from }}', offset: 1 })
        ]))
    ], {
        params: {
            duration: ANIMATION_DURATION.fast,
            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionIn,
            from: 0,
            to: 1
        }
    }),
    pulse: animation([
        animate('{{ duration }} {{ timingFunction }}', keyframes([
            style({ transform: 'scale({{ from }})', offset: 0 }),
            style({ transform: 'scale({{ to }})', offset: .5 }),
            style({ transform: 'scale({{ from }})', offset: 1 })
        ]))
    ], {
        params: {
            duration: ANIMATION_DURATION.fast,
            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionIn,
            from: 0,
            to: 1
        }
    })
};
//# sourceMappingURL=animation.js.map