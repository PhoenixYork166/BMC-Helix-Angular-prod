{"version":3,"file":"pagination.component.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/pagination/pagination.component.ts","../../../../../libs/adapt-angular/src/pagination/pagination.component.html"],"names":[],"mappings":"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","sourcesContent":["import {AfterViewInit, ChangeDetectorRef, Component, ElementRef, Input, OnDestroy} from '@angular/core';\nimport {Paginator} from 'primeng/paginator';\nimport {AdaptTranslateService} from '../common/i18n/index';\nimport {AdaptRadarAngularCustomEventName, AdaptRadarAngularService} from '../common/radar/adapt-radar';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'adapt-pagination',\n  templateUrl: './pagination.component.html',\n  styles: ['.pager .page-link {  width: 100%;  }']\n})\n\nexport class AdaptPaginationComponent extends Paginator implements AfterViewInit, OnDestroy {\n  uniqueId: string = `adapt-pagination-${++nextUniqueId}`;\n\n  /**\n   * Type of pagination - 'pager' | 'prevnext'\n   * @docs-default pager\n   */\n  @Input() mode: string = 'pager';\n\n  /**\n   * Text that will be shown in 'Previous' button\n   * @docs-default Previous\n   */\n  @Input() left: string;\n\n  /**\n   * Text in 'Next' button\n   * @docs-default Next\n   */\n  @Input() right: string;\n\n  /**\n   * String for test id data attribute. For test purposes\n   * @docs-default adapt-pagination-${++nextUniqueId}\n   */\n  @Input() testID: string = this.uniqueId;\n\n  @Input() adaptRadarDisableEventSending: boolean = false;\n\n  private _elementIntersectObserver: IntersectionObserver;\n\n  constructor(private ts: AdaptTranslateService,\n              cd: ChangeDetectorRef,\n              private _adaptRadarService: AdaptRadarAngularService,\n              private _elem: ElementRef<HTMLElement>) {\n    super(cd);\n    const translate = ts.getCurrentLanguage();\n\n    this.left = translate['adapt.common.previous'];\n    this.right = translate['adapt.common.next'];\n  }\n\n  ngAfterViewInit(): void {\n    this._elementIntersectObserver = this._adaptRadarService.subscribeOnElementIntersect(this.adaptRadarDisableEventSending, this._elem, AdaptRadarAngularCustomEventName.AdaptPagination);\n  }\n\n  ngOnDestroy(): void {\n    if (this._elementIntersectObserver) {\n      this._elementIntersectObserver.disconnect();\n      this._elementIntersectObserver = null;\n    }\n  }\n}\n","<nav aria-label=\"Page navigation\">\n  <ul [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"'pagination'\" *ngIf=\"mode === 'pager'\">\n    <li class=\"page-item page-prev\" [ngClass]=\"{'disabled':isFirstPage()}\">\n      <button class=\"btn page-link\"\n              [attr.aria-label]=\"left\"\n              [attr.data-testid]=\"testID + '_left'\"\n              (click)=\"changePageToPrev($event)\"\n              type=\"button\"\n              [tabindex]=\"isFirstPage() ? -1 : null\">\n        <span class=\"sr-only\">{{left}}</span>\n      </button>\n    </li>\n    <li class=\"page-item\" [ngClass]=\"{'active': (pageLink-1 === getPage())}\" *ngFor=\"let pageLink of pageLinks\">\n      <button class=\"btn page-link\"\n              (click)=\"changePage(pageLink - 1)\"\n              [attr.data-testid]=\"testID + '_item_' + pageLink\"\n              type=\"button\">{{pageLink}}</button>\n    </li>\n    <li class=\"page-item page-next\" [ngClass]=\"{'disabled':isLastPage()}\">\n      <button class=\"btn page-link\"\n              [attr.aria-label]=\"right\"\n              [attr.data-testid]=\"testID + '_right'\"\n              (click)=\"changePageToNext($event)\"\n              type=\"button\"\n              [tabindex]=\"isLastPage() ? -1 : null\">\n        <span class=\"sr-only\">{{right}}</span>\n      </button>\n    </li>\n  </ul>\n  <ul [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"'pagination pager d-flex justify-content-start'\"\n      *ngIf=\"mode === 'prevnext'\">\n    <li class=\"page-item page-prev\" [ngClass]=\"{'disabled':isFirstPage()}\">\n      <button class=\"btn page-link\"\n              [attr.aria-label]=\"left\"\n              [attr.data-testid]=\"testID + '_left'\"\n              type=\"button\"\n              (click)=\"changePageToPrev($event)\"\n              [tabindex]=\"isFirstPage() ? -1 : null\">\n        <span class=\"ml-1\">{{left}}</span>\n      </button>\n    </li>\n    <li class=\"page-item page-next ml-auto\" [ngClass]=\"{'disabled':isLastPage()}\">\n      <button class=\"btn page-link\"\n              [attr.aria-label]=\"right\"\n              [attr.data-testid]=\"testID + '_right'\"\n              type=\"button\"\n              (click)=\"changePageToNext($event)\"\n              [tabindex]=\"isLastPage() ? -1 : null\">\n        <span class=\"mr-1\">{{right}}</span>\n      </button>\n    </li>\n  </ul>\n</nav>\n"]}