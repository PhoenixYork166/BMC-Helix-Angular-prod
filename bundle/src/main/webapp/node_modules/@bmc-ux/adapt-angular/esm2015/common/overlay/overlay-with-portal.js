import { Subject } from 'rxjs';
import { getCalculatedOverlayConfig, getPositionStrategy } from './overlay-common';
export class AdaptOverlayWithPortal {
    constructor(portal, _adaptOverlayConfig, _overlayConfig, _direction, _document, _ngZone, _overlay, _overlayContainer, _platform, _viewportRuler) {
        this.portal = portal;
        this._adaptOverlayConfig = _adaptOverlayConfig;
        this._overlayConfig = _overlayConfig;
        this._direction = _direction;
        this._document = _document;
        this._ngZone = _ngZone;
        this._overlay = _overlay;
        this._overlayContainer = _overlayContainer;
        this._platform = _platform;
        this._viewportRuler = _viewportRuler;
        this.destroy$ = new Subject();
        this.overlayRef = this._getOverlayRef();
        this.componentRef = this.overlayRef.attach(this.portal);
    }
    /**
     * Destroy the overlay
     */
    destroy() {
        this.destroy$.next();
        this.destroy$.complete();
        this.destroy$ = null;
        this.overlayRef.detach();
        this.componentRef = null;
        this.overlayRef.dispose();
        this.overlayRef = null;
    }
    /**
     * Update the overlay position with updating the current position strategy
     */
    updatePositionForce() {
        var _a, _b, _c, _d;
        this.overlayRef.updatePositionStrategy(getPositionStrategy((_a = this._adaptOverlayConfig) === null || _a === void 0 ? void 0 : _a.connectedPositions, (_b = this._adaptOverlayConfig) === null || _b === void 0 ? void 0 : _b.origin, (_c = this._adaptOverlayConfig) === null || _c === void 0 ? void 0 : _c.positionStrategy, (_d = this._adaptOverlayConfig) === null || _d === void 0 ? void 0 : _d.transformOriginSelector, this._direction, this._document, this._overlay, this._overlayContainer, this._platform, this._viewportRuler));
    }
    _getOverlayRef() {
        return this._overlay.create(getCalculatedOverlayConfig(this._adaptOverlayConfig, this._overlayConfig, this._overlay, this._direction, this._viewportRuler, this._ngZone, this._document, this._platform, this._overlayContainer));
    }
}
//# sourceMappingURL=overlay-with-portal.js.map