{"version":3,"file":"interaction-source.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/common/interaction-source.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,UAAU,EAAY,MAAM,eAAe,CAAC;AAEpD,OAAO,EAAC,SAAS,EAAE,aAAa,EAAC,MAAM,MAAM,CAAC;AAC9C,OAAO,EAAC,SAAS,EAAC,MAAM,gBAAgB,CAAC;;AAEzC,MAAM,UAAU,oBAAoB,CAAC,KAAgD,EAAE,QAAkB;IACvG,IAAI,uBAAuB,GAAgB,SAAS,CAAC;IAErD,IAAI,KAAK,EAAE;QACT,IAAI,QAAQ,IAAK,KAAsB,CAAC,WAAW,KAAK,OAAO,IAAK,KAAsB,CAAC,WAAW,KAAK,KAAK,EAAE;YAChH,uBAAuB,GAAG,OAAO,CAAC;SAEnC;aAAM,IAAK,KAAsB,CAAC,WAAW,KAAK,OAAO,IAAI,KAAK,YAAY,UAAU,EAAE;YACzF,uBAAuB,GAAG,OAAO,CAAC;SAEnC;aAAM,IAAI,KAAK,YAAY,aAAa,IAAI,CAAE,KAAoB,CAAC,OAAO,KAAK,CAAC,IAAK,KAAoB,CAAC,OAAO,KAAK,CAAC,CAAC,EAAE;YACzH,uBAAuB,GAAG,UAAU,CAAC;SACtC;KACF;IAED,OAAO,uBAAuB,CAAC;AACjC,CAAC;AAKD,MAAM,OAAO,6BAA6B;IAIxC;QAHQ,cAAS,GAA2B,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC;QACzD,qBAAgB,GAA8C,IAAI,CAAC;QAGzE,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC;aACzB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC/B,SAAS,CAAC,CAAC,KAAiB,EAAE,EAAE;YAC/B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC,CAAC;QAEL,SAAS,CAAC,MAAM,EAAE,aAAa,CAAC;aAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC/B,SAAS,CAAC,CAAC,KAAgC,EAAE,EAAE;YAC9C,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8BAA8B;QAC5B,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACpF,CAAC;IAED,6BAA6B;QAC3B,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC/B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;;0GA9BU,6BAA6B;mFAA7B,6BAA6B,WAA7B,6BAA6B,mBAF5B,MAAM;uFAEP,6BAA6B;cAHzC,UAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","sourcesContent":["import {Injectable, OnDestroy} from '@angular/core';\nimport {FocusOrigin} from '@angular/cdk/a11y';\nimport {fromEvent, ReplaySubject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nexport function getInteractionSource(event: MouseEvent | PointerEvent | KeyboardEvent, isMobile?: boolean): FocusOrigin {\n  let interactionSourceOrigin: FocusOrigin = 'program';\n\n  if (event) {\n    if (isMobile || (event as PointerEvent).pointerType === 'touch' || (event as PointerEvent).pointerType === 'pen') {\n      interactionSourceOrigin = 'touch';\n\n    } else if ((event as PointerEvent).pointerType === 'mouse' || event instanceof MouseEvent) {\n      interactionSourceOrigin = 'mouse';\n\n    } else if (event instanceof KeyboardEvent || ((event as MouseEvent).clientX === 0 && (event as MouseEvent).clientY === 0)) {\n      interactionSourceOrigin = 'keyboard';\n    }\n  }\n\n  return interactionSourceOrigin;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdaptInteractionSourceService implements OnDestroy {\n  private _destroy$: ReplaySubject<boolean> = new ReplaySubject(1);\n  private _lastSourceEvent: MouseEvent | PointerEvent | KeyboardEvent = null;\n\n  constructor() {\n    fromEvent(window, 'keydown')\n      .pipe(takeUntil(this._destroy$))\n      .subscribe((event: MouseEvent) => {\n        this._lastSourceEvent = event;\n      });\n\n    fromEvent(window, 'pointerdown')\n      .pipe(takeUntil(this._destroy$))\n      .subscribe((event: MouseEvent | PointerEvent) => {\n        this._lastSourceEvent = event;\n      });\n  }\n\n  getLastInteractionSourceOrigin(): FocusOrigin {\n    return this._lastSourceEvent ? getInteractionSource(this._lastSourceEvent) : null;\n  }\n\n  getLastInteractionSourceEvent(): MouseEvent | PointerEvent | KeyboardEvent {\n    return this._lastSourceEvent;\n  }\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n    this._destroy$ = null;\n  }\n}\n"]}