{"version":3,"file":"code-viewer.service.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/code-viewer/code-viewer.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,eAAe,CAAC;AACzC,OAAO,EAAa,eAAe,EAAC,MAAM,MAAM,CAAC;AACjD,OAAO,EAAC,IAAI,EAAC,MAAM,gBAAgB,CAAC;;AAGpC,MAAM,OAAO,iBAAiB;IAD9B;QAGU,cAAS,GAA6B,IAAI,eAAe,CAAU,IAAI,CAAC,CAAC;QACzE,eAAU,GAA6B,IAAI,eAAe,CAAU,IAAI,CAAC,CAAC;KA0BnF;IAxBC,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IACnC,CAAC;IAED,WAAW,CAAC,GAAY;QACtB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;IAGD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IACpC,CAAC;IAED,YAAY,CAAC,GAAY;QACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;;kFA5BU,iBAAiB;uEAAjB,iBAAiB,WAAjB,iBAAiB,mBADL,MAAM;uFAClB,iBAAiB;cAD7B,UAAU;eAAC,EAAC,UAAU,EAAE,MAAM,EAAC","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Observable, BehaviorSubject} from 'rxjs';\nimport {skip} from 'rxjs/operators';\n\n@Injectable({providedIn: 'root'})\nexport class CodeViewerService {\n\n  private _hasLines: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n  private _darkTheme: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n\n  get hasLines(): Observable<boolean> {\n    return this._hasLines.asObservable().pipe(skip(1));\n  }\n\n  get hasLinesValue(): boolean {\n    return this._hasLines.getValue();\n  }\n\n  setHasLines(val: boolean): void {\n    this._hasLines.next(val);\n  }\n\n\n  get darkTheme(): Observable<boolean> {\n    return this._darkTheme.asObservable().pipe(skip(1));\n  }\n\n  get darkThemeValue(): boolean {\n    return this._darkTheme.getValue();\n  }\n\n  setDarkTheme(val: boolean): void {\n    this._darkTheme.next(val);\n  }\n}\n"]}