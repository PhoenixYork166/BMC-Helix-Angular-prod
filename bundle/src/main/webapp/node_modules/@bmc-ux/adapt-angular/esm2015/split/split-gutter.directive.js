import { Directive, Input, ElementRef, Renderer2 } from '@angular/core';
import * as i0 from "@angular/core";
export class AdaptSplitGutterDirective {
    constructor(elementRef, renderer) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this._disabled = false;
    }
    set order(v) {
        this.setStyle('order', v);
    }
    set direction(v) {
        this._direction = v;
        this.refreshStyle();
    }
    set size(v) {
        this._size = v;
        this.refreshStyle();
    }
    set disabled(v) {
        this._disabled = v;
        this.refreshStyle();
    }
    refreshStyle() {
        this.setStyle('flex-basis', `${this._size}px`);
        // fix safari bug about gutter height when direction is horizontal
        this.setStyle('height', (this._direction === 'vertical') ? '${ this._size }px' : 'auto');
        const state = (this._disabled === true) ? 'disabled' : this._direction;
        this.setStyle('cursor', this.getCursor(state));
    }
    // TODO: Refactor this if possible
    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
    setStyle(key, value) {
        this.renderer.setStyle(this.elementRef.nativeElement, key, value);
    }
    getCursor(state) {
        switch (state) {
            case 'disabled':
                return 'default';
            case 'vertical':
                return 'row-resize';
            case 'horizontal':
                return 'col-resize';
        }
    }
}
AdaptSplitGutterDirective.ɵfac = function AdaptSplitGutterDirective_Factory(t) { return new (t || AdaptSplitGutterDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2)); };
AdaptSplitGutterDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: AdaptSplitGutterDirective, selectors: [["div", "adaptSplitGutter", ""], ["div", "adapt-split-gutter", ""]], inputs: { order: "order", direction: "direction", size: "size", disabled: "disabled" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptSplitGutterDirective, [{
        type: Directive,
        args: [{
                selector: 'div[adaptSplitGutter], div[adapt-split-gutter]'
            }]
    }], function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, { order: [{
            type: Input
        }], direction: [{
            type: Input
        }], size: [{
            type: Input
        }], disabled: [{
            type: Input
        }] }); })();
//# sourceMappingURL=split-gutter.directive.js.map