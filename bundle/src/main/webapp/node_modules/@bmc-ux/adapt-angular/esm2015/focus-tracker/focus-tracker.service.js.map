{"version":3,"file":"focus-tracker.service.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/focus-tracker/focus-tracker.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,eAAe,CAAC;;AAGzC,MAAM,OAAO,wBAAwB;IAenC,kCAAkC;IAClC,uDAAuD;IACvD;;OAEG;IACH,MAAM,CAAC,WAAW,CAAC,CAAM;QACvB,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC;IAC/D,CAAC;IAED,QAAQ,CAAC,CAAM;QACb,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,wBAAwB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC7E,CAAC;IAED;;OAEG;IACH,QAAQ,CAAC,CAAM;QACb,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC;SAC3D;IACH,CAAC;IACD,sDAAsD;IAEtD;;OAEG;IACH,kBAAkB;QAChB,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACnG,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACrG,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACnG,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,OAAO,CAAC,QAAQ,EAAE,wBAAwB,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC7H,CAAC;IAED,mBAAmB;QACjB,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,wBAAwB,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACtG,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,wBAAwB,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACxG,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,wBAAwB,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACtG,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,wBAAwB,CAAC,OAAO,CAAC,QAAQ,EAAE,wBAAwB,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAChI,CAAC;;AApDe,iCAAQ,GAAW,kBAAkB,CAAC;AACtC,gCAAO,GAKnB;IACF,OAAO,EAAE,SAAS;IAClB,SAAS,EAAE,WAAW;IACtB,OAAO,EAAE,SAAS;IAClB,QAAQ,EAAE,UAAU;CACrB,CAAC;gGAZS,wBAAwB;8EAAxB,wBAAwB,WAAxB,wBAAwB;uFAAxB,wBAAwB;cADpC,UAAU","sourcesContent":["import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class AdaptFocusTrackerService {\n  static readonly _focused: string = 'is-mouse-focused';\n  static readonly _events: {\n    keydown: string;\n    mousedown: string;\n    focusin: string;\n    focusout: string;\n  } = {\n    keydown: 'keydown',\n    mousedown: 'mousedown',\n    focusin: 'focusin',\n    focusout: 'focusout'\n  };\n  private _usingMouse: boolean;\n\n  // TODO: Refactor this if possible\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  /**\n   * Remove from HTMLElement CSS class 'is-mouse-focused' on focus out event\n   */\n  static removeFocus(e: any): void {\n    e.target.classList.remove(AdaptFocusTrackerService._focused);\n  }\n\n  preFocus(e: any): void {\n    this._usingMouse = (e.type === AdaptFocusTrackerService._events.mousedown);\n  }\n\n  /**\n   * Add to HTMLElement CSS class 'is-mouse-focused' on focus in event\n   */\n  addFocus(e: any): void {\n    if (this._usingMouse) {\n      e.target.classList.add(AdaptFocusTrackerService._focused);\n    }\n  }\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n\n  /**\n   * Listen events to document body\n   */\n  enableFocusTracker(): void {\n    document.body.addEventListener(AdaptFocusTrackerService._events.keydown, this.preFocus.bind(this));\n    document.body.addEventListener(AdaptFocusTrackerService._events.mousedown, this.preFocus.bind(this));\n    document.body.addEventListener(AdaptFocusTrackerService._events.focusin, this.addFocus.bind(this));\n    document.body.addEventListener(AdaptFocusTrackerService._events.focusout, AdaptFocusTrackerService.removeFocus.bind(this));\n  }\n\n  disableFocusTracker(): void {\n    document.body.removeEventListener(AdaptFocusTrackerService._events.keydown, this.preFocus.bind(this));\n    document.body.removeEventListener(AdaptFocusTrackerService._events.mousedown, this.preFocus.bind(this));\n    document.body.removeEventListener(AdaptFocusTrackerService._events.focusin, this.addFocus.bind(this));\n    document.body.removeEventListener(AdaptFocusTrackerService._events.focusout, AdaptFocusTrackerService.removeFocus.bind(this));\n  }\n\n\n}\n"]}