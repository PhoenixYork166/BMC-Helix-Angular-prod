{"version":3,"file":"truncated.pipe.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/common/truncated.pipe.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,YAAY,EAAC,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAC,UAAU,EAAiB,IAAI,EAAE,QAAQ,EAAC,MAAM,eAAe,CAAC;AACxE,OAAO,EAAC,QAAQ,EAAC,MAAM,aAAa,CAAC;;AAkBrC,MAAM,OAAO,iBAAiB;IAE5B,SAAS,CAAC,KAAa,EAAE,KAA8B,EAAE,KAAc;QACrE,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC;IAClD,CAAC;IAED,QAAQ,CAAC,KAAa,EAAE,KAA8B,EAAE,KAAc;QACpE,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QACpB,KAAK,GAAG,KAAK,IAAI,KAAK,CAAC;QAEvB,IAAI,KAAK,EAAE;YACT,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;gBACnB,IAAI,KAAK,CAAC,MAAM,GAAG,KAAK,EAAE;oBACxB,OAAO;wBACL,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,KAAK;wBACxC,SAAS,EAAE,IAAI;qBAChB,CAAC;iBACH;aACF;iBAAM;gBACL,MAAM,EAAC,aAAa,EAAE,YAAY,EAAC,GAAG,KAAK,CAAC;gBAE5C,IAAI,KAAK,CAAC,MAAM,GAAG,aAAa,GAAG,YAAY,EAAE;oBAC/C,OAAO;wBACL,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,aAAa,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC;wBAC9E,SAAS,EAAE,IAAI;qBAChB,CAAC;iBACH;aACF;SACF;QAED,OAAO;YACL,KAAK;YACL,SAAS,EAAE,KAAK;SACjB,CAAC;IACJ,CAAC;;kFAlCU,iBAAiB;kFAAjB,iBAAiB;uEAAjB,iBAAiB,WAAjB,iBAAiB;uFAAjB,iBAAiB;cAN7B,IAAI;eAAC;gBACJ,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,IAAI;aACX;;cAEA,UAAU;;AA2CX,MAAM,OAAO,uBAAuB;;8FAAvB,uBAAuB;yEAAvB,uBAAuB;6EAJzB,CAAC,YAAY,CAAC;uFAIZ,uBAAuB;cALnC,QAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE,CAAC,iBAAiB,CAAC;gBACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC;aAC7B;;wFACY,uBAAuB,mBA1CvB,iBAAiB,aAsClB,YAAY,aAtCX,iBAAiB","sourcesContent":["import {CommonModule} from '@angular/common';\nimport {Injectable, PipeTransform, Pipe, NgModule} from '@angular/core';\nimport {isNumber} from './utilities';\n\nexport interface TruncateConfig {\n  preffixLength: number;\n  suffixLength: number;\n}\n\nexport interface TruncatedTextData {\n  value: string;\n  truncated: boolean;\n}\n\n@Pipe({\n  name: 'truncate',\n  pure: true\n})\n\n@Injectable()\nexport class AdaptTruncatePipe implements PipeTransform {\n\n  transform(value: string, limit: number | TruncateConfig, trail?: string): string {\n    return this.truncate(value, limit, trail).value;\n  }\n\n  truncate(value: string, limit: number | TruncateConfig, trail?: string): TruncatedTextData {\n    value = value || '';\n    trail = trail || '...';\n\n    if (limit) {\n      if (isNumber(limit)) {\n        if (value.length > limit) {\n          return {\n            value: value.substring(0, limit) + trail,\n            truncated: true\n          };\n        }\n      } else {\n        const {preffixLength, suffixLength} = limit;\n\n        if (value.length > preffixLength + suffixLength) {\n          return {\n            value: value.substring(0, preffixLength) + trail + value.substr(-suffixLength),\n            truncated: true\n          };\n        }\n      }\n    }\n\n    return {\n      value,\n      truncated: false\n    };\n  }\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [AdaptTruncatePipe],\n  exports: [AdaptTruncatePipe]\n})\nexport class AdaptTruncatePipeModule {\n}\n"]}