{"version":3,"file":"adapt-rx-select.types.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/rx/rx-select/adapt-rx-select.types.ts"],"names":[],"mappings":"AAyEA;;GAEG;AACH,MAAM,CAAN,IAAY,iBAGX;AAHD,WAAY,iBAAiB;IAC3B,sCAAiB,CAAA;IACjB,sCAAiB,CAAA;AACnB,CAAC,EAHW,iBAAiB,KAAjB,iBAAiB,QAG5B","sourcesContent":["import {TemplateRef} from '@angular/core';\nimport {PlacementArray} from '../../common/positioning';\nimport {AdaptRxControlLabelTooltip} from '../form-control/index';\n\nexport type RxSelectOption = {\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  [key: string]: any;\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n} | any;\n\nexport type RxSelectedOptionsMap = Map<string, RxSelectOption>;\n\nexport interface RxSelectOptionsGroup {\n  name?: string;\n  children: RxSelectOption[];\n}\n\nexport interface RxSelectionChangeEvent {\n  /**\n   * The item from the options list about to be selected.\n   */\n  options: RxSelectOption[];\n\n  /**\n   * Calling this function will prevent item selection from happening.\n   */\n  preventDefault: () => void;\n}\n\nexport interface RxSelectIndexedOption {\n  index: number;\n  option: RxSelectOption;\n}\n\nexport interface RxSelectIndexedOptionsGroup {\n  name?: string;\n  index: number;\n  groupIndex: number;\n  children: RxSelectIndexedOption[];\n}\n\n/**\n * Will be removed after completely moving to rx-select\n */\nexport interface SelectTexts {\n  checkAll?: string;\n  checkAllFilter?: string;\n  uncheckAll?: string;\n  uncheckAllFilter?: string;\n  filteredTo?: string;\n  checkedAll?: string;\n  checked?: string;\n  checkedPlural?: string;\n  searchPlaceholder?: string;\n  defaultTitle?: string;\n  headerText?: string;\n  headerTextSingle?: string;\n  notFound?: string;\n  requiredText?: string;\n  cancelBtnText?: string;\n  doneBtnText?: string;\n  titleMobileText?: string;\n  numberOptionsText?: string;\n  loadingText?: string;\n  emptyOptionText?: string;\n  loadMore?: string;\n  emptyStateTitle?: string;\n  emptyStateDescription?: string;\n  pressTabToGoToLoadMoreButton?: string;\n}\n\n/**\n * Will be removed after completely moving to rx-select\n */\nexport enum SelectModelFormat {\n  number = 'number',\n  object = 'object'\n}\n\nexport interface RxSelectSettings {\n  enableFilter?: boolean;\n  closeOnSelect?: boolean;\n  deselectAllButton?: boolean;\n  selectAllButton?: boolean;\n  popupMaxHeight?: string | number;\n  appendToBody?: boolean;\n  emptyOption?: boolean;\n  pageSize?: number;\n  focusFirst?: boolean;\n  singleSelectStyle?: 'line' | 'marker';\n  ariaInvalid?: boolean;\n  loadMoreButton?: boolean;\n  loadMoreInProgress?: boolean;\n  loadingState?: boolean;\n  warningMessage?: string;\n  name?: string;\n  label?: string;\n  subLabel?: string;\n  requiredLabel?: string;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  ariaDescribedBy?: string;\n  tabIndex?: number;\n  id?: string;\n  disabled?: boolean;\n  readonly?: boolean;\n  autofocus?: boolean;\n  ariaErrorMessage?: string;\n  optionContentTemplate?: TemplateRef<{ $implicit: RxSelectOption }>;\n  tooltip?: AdaptRxControlLabelTooltip;\n  placement?: PlacementArray;\n  inline?: boolean;\n  multiple?: boolean;\n  texts?: SelectTexts;\n  loadMoreCallback?: () => void;\n  optionFormatter?: (option: RxSelectOption[]) => string;\n  disabledOptionResolver?: (option: RxSelectOption) => boolean;\n  titleFormatter?: (option: RxSelectOption[]) => string;\n}\n"]}