{"version":3,"file":"overlay-common.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/common/overlay/overlay-common.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgZone} from '@angular/core';\nimport {Platform} from '@angular/cdk/platform';\nimport {Direction} from '@angular/cdk/bidi';\nimport {\n  ConnectedPosition,\n  ConnectionPositionPair,\n  FlexibleConnectedPositionStrategyOrigin,\n  OriginConnectionPosition,\n  Overlay,\n  OverlayConfig,\n  OverlayConnectionPosition,\n  OverlayContainer,\n  PositionStrategy,\n  RepositionScrollStrategyConfig,\n  ScrollStrategy,\n  ViewportRuler\n} from '@angular/cdk/overlay';\n\nimport {AdaptBlockScrollStrategy} from './scroll/block-scroll-strategy';\nimport {AdaptRepositionScrollStrategy} from './scroll/reposition-scroll-strategy';\nimport {AdaptFlexibleConnectedPositionStrategy} from './position/flexible-connected-position-strategy';\nimport {\n  AdaptOverlayConfig,\n  AdaptOverlayConnectedPositions,\n  AdaptOverlayConnectedPositionName,\n  AdaptOverlayPositionStrategy,\n  AdaptOverlayScrollStrategy\n} from './overlay.model';\n\ninterface TargetConnectionPositionPairs<T> {\n  topCenter: T;\n  topStart: T;\n  topEnd: T;\n  startCenter: T;\n  startTop: T;\n  startBottom: T;\n  endCenter: T;\n  endTop: T;\n  endBottom: T;\n  bottomCenter: T;\n  bottomStart: T;\n  bottomEnd: T;\n}\n\nconst OVERLAY_DEFAULT_OFFSET: number = 0;\n\nconst OVERLAY_FLOAT_CURSOR_DEFAULT_OFFSET: {\n  bottomOffsetX: number;\n  bottomOffsetY: number;\n  topOffsetX: number;\n  topOffsetY: number;\n} = {\n  bottomOffsetX: 0,\n  bottomOffsetY: 30,\n  topOffsetX: 0,\n  topOffsetY: -20\n};\n\nconst ORIGIN_CONNECTION_POSITION: TargetConnectionPositionPairs<OriginConnectionPosition> = {\n  topCenter: {originX: 'center', originY: 'top'},\n  topStart: {originX: 'start', originY: 'top'},\n  topEnd: {originX: 'end', originY: 'top'},\n\n  startCenter: {originX: 'start', originY: 'center'},\n  startTop: {originX: 'start', originY: 'top'},\n  startBottom: {originX: 'start', originY: 'bottom'},\n\n  endCenter: {originX: 'end', originY: 'center'},\n  endTop: {originX: 'end', originY: 'top'},\n  endBottom: {originX: 'end', originY: 'bottom'},\n\n  bottomCenter: {originX: 'center', originY: 'bottom'},\n  bottomStart: {originX: 'start', originY: 'bottom'},\n  bottomEnd: {originX: 'end', originY: 'bottom'}\n};\n\nconst OVERLAY_CONNECTION_POSITION: TargetConnectionPositionPairs<OverlayConnectionPosition> = {\n  topCenter: {overlayX: 'center', overlayY: 'top'},\n  topStart: {overlayX: 'start', overlayY: 'top'},\n  topEnd: {overlayX: 'end', overlayY: 'top'},\n\n  startCenter: {overlayX: 'start', overlayY: 'center'},\n  startTop: {overlayX: 'start', overlayY: 'top'},\n  startBottom: {overlayX: 'start', overlayY: 'bottom'},\n\n  endCenter: {overlayX: 'end', overlayY: 'center'},\n  endTop: {overlayX: 'end', overlayY: 'top'},\n  endBottom: {overlayX: 'end', overlayY: 'bottom'},\n\n  bottomCenter: {overlayX: 'center', overlayY: 'bottom'},\n  bottomStart: {overlayX: 'start', overlayY: 'bottom'},\n  bottomEnd: {overlayX: 'end', overlayY: 'bottom'}\n};\n\nconst CONNECTED_POSITION: TargetConnectionPositionPairs<ConnectedPosition> = {\n  topCenter: {...ORIGIN_CONNECTION_POSITION.topCenter, ...OVERLAY_CONNECTION_POSITION.bottomCenter},\n  topStart: {...ORIGIN_CONNECTION_POSITION.topStart, ...OVERLAY_CONNECTION_POSITION.bottomStart},\n  topEnd: {...ORIGIN_CONNECTION_POSITION.topEnd, ...OVERLAY_CONNECTION_POSITION.bottomEnd},\n\n  startCenter: {...ORIGIN_CONNECTION_POSITION.startCenter, ...OVERLAY_CONNECTION_POSITION.endCenter},\n  startTop: {...ORIGIN_CONNECTION_POSITION.startTop, ...OVERLAY_CONNECTION_POSITION.endTop},\n  startBottom: {...ORIGIN_CONNECTION_POSITION.startBottom, ...OVERLAY_CONNECTION_POSITION.endBottom},\n\n  endCenter: {...ORIGIN_CONNECTION_POSITION.endCenter, ...OVERLAY_CONNECTION_POSITION.startCenter},\n  endTop: {...ORIGIN_CONNECTION_POSITION.endTop, ...OVERLAY_CONNECTION_POSITION.startTop},\n  endBottom: {...ORIGIN_CONNECTION_POSITION.endBottom, ...OVERLAY_CONNECTION_POSITION.startBottom},\n\n  bottomCenter: {...ORIGIN_CONNECTION_POSITION.bottomCenter, ...OVERLAY_CONNECTION_POSITION.topCenter},\n  bottomStart: {...ORIGIN_CONNECTION_POSITION.bottomStart, ...OVERLAY_CONNECTION_POSITION.topStart},\n  bottomEnd: {...ORIGIN_CONNECTION_POSITION.bottomEnd, ...OVERLAY_CONNECTION_POSITION.topEnd},\n};\n\nfunction getLTRConnectedPositions(offset: number = OVERLAY_DEFAULT_OFFSET): AdaptOverlayConnectedPositions {\n  return {\n    'top': {...CONNECTED_POSITION.topCenter, offsetY: -offset},\n    'left': {...CONNECTED_POSITION.startCenter, offsetX: -offset},\n    'right': {...CONNECTED_POSITION.endCenter, offsetX: offset},\n    'bottom': {...CONNECTED_POSITION.bottomCenter, offsetY: offset},\n    'top-left': {...CONNECTED_POSITION.topStart, offsetY: -offset},\n    'top-right': {...CONNECTED_POSITION.topEnd, offsetY: -offset},\n    'left-top': {...CONNECTED_POSITION.startTop, offsetX: -offset},\n    'left-bottom': {...CONNECTED_POSITION.startBottom, offsetX: -offset},\n    'right-top': {...CONNECTED_POSITION.endTop, offsetX: offset},\n    'right-bottom': {...CONNECTED_POSITION.endBottom, offsetX: offset},\n    'bottom-left': {...CONNECTED_POSITION.bottomStart, offsetY: offset},\n    'bottom-right': {...CONNECTED_POSITION.bottomEnd, offsetY: offset},\n\n    'start': {...CONNECTED_POSITION.startCenter, offsetX: -offset},\n    'end': {...CONNECTED_POSITION.endCenter, offsetX: offset},\n    'top-start': {...CONNECTED_POSITION.topStart, offsetY: -offset},\n    'top-end': {...CONNECTED_POSITION.topEnd, offsetY: -offset},\n    'start-top': {...CONNECTED_POSITION.startTop, offsetX: -offset},\n    'start-bottom': {...CONNECTED_POSITION.startBottom, offsetX: -offset},\n    'end-top': {...CONNECTED_POSITION.endTop, offsetX: offset},\n    'end-bottom': {...CONNECTED_POSITION.endBottom, offsetX: offset},\n    'bottom-start': {...CONNECTED_POSITION.bottomStart, offsetY: offset},\n    'bottom-end': {...CONNECTED_POSITION.bottomEnd, offsetY: offset}\n  };\n}\n\nfunction getRTLConnectedPositions(offset: number = OVERLAY_DEFAULT_OFFSET): AdaptOverlayConnectedPositions {\n  return {\n    'top': {...CONNECTED_POSITION.topCenter, offsetY: -offset},\n    'left': {...CONNECTED_POSITION.endCenter, offsetX: offset},\n    'right': {...CONNECTED_POSITION.startCenter, offsetX: -offset},\n    'bottom': {...CONNECTED_POSITION.bottomCenter, offsetY: offset},\n    'top-left': {...CONNECTED_POSITION.topEnd, offsetY: -offset},\n    'top-right': {...CONNECTED_POSITION.topStart, offsetY: -offset},\n    'left-top': {...CONNECTED_POSITION.endTop, offsetX: offset},\n    'left-bottom': {...CONNECTED_POSITION.endBottom, offsetX: offset},\n    'right-top': {...CONNECTED_POSITION.startTop, offsetX: -offset},\n    'right-bottom': {...CONNECTED_POSITION.startBottom, offsetX: -offset},\n    'bottom-left': {...CONNECTED_POSITION.bottomEnd, offsetY: -offset},\n    'bottom-right': {...CONNECTED_POSITION.bottomStart, offsetY: -offset},\n\n    'start': {...CONNECTED_POSITION.startCenter, offsetX: offset},\n    'end': {...CONNECTED_POSITION.endCenter, offsetX: -offset},\n    'top-start': {...CONNECTED_POSITION.topStart, offsetY: -offset},\n    'top-end': {...CONNECTED_POSITION.topEnd, offsetY: -offset},\n    'start-top': {...CONNECTED_POSITION.startTop, offsetX: offset},\n    'start-bottom': {...CONNECTED_POSITION.startBottom, offsetX: offset},\n    'end-top': {...CONNECTED_POSITION.endTop, offsetX: -offset},\n    'end-bottom': {...CONNECTED_POSITION.endBottom, offsetX: -offset},\n    'bottom-start': {...CONNECTED_POSITION.bottomStart, offsetY: offset},\n    'bottom-end': {...CONNECTED_POSITION.bottomEnd, offsetY: offset}\n  };\n}\n\nexport function getOverlayConnectedPositions(direction?: Direction,\n                                             offset: number = OVERLAY_DEFAULT_OFFSET): AdaptOverlayConnectedPositions {\n  return direction === 'rtl' ? getRTLConnectedPositions(offset) : getLTRConnectedPositions(offset);\n}\n\nexport function getOverlayConnectedPosition(positionName: AdaptOverlayConnectedPositionName,\n                                            direction?: Direction,\n                                            config?: { weight?: number; offsetX?: number; offsetY?: number; panelClass?: string | string[] }): ConnectedPosition {\n\n  const positionList = getOverlayConnectedPositions(direction);\n\n  return {\n    ...positionList[positionName.replace('left', 'start').replace('right', 'end')],\n    ...(config || {})\n  };\n}\n\nexport function getPositionStrategy(connectedPositions: ConnectedPosition[],\n                                    origin: FlexibleConnectedPositionStrategyOrigin,\n                                    positionStrategy: AdaptOverlayPositionStrategy,\n                                    transformOriginSelector: string,\n                                    direction: Direction,\n                                    document: Document,\n                                    overlay: Overlay,\n                                    overlayContainer: OverlayContainer,\n                                    platform: Platform,\n                                    viewportRuler: ViewportRuler): PositionStrategy {\n  let overlayPositionStrategy: PositionStrategy;\n\n  switch (positionStrategy) {\n    case 'center': {\n      overlayPositionStrategy = overlay\n        .position()\n        .global()\n        .centerHorizontally()\n        .centerVertically();\n\n      break;\n    }\n    case 'float': {\n      overlayPositionStrategy = overlay\n        .position()\n        .flexibleConnectedTo(origin)\n        .withPositions([\n          // Bottom\n          new ConnectionPositionPair(\n            {originX: 'center', originY: 'bottom'},\n            {overlayX: direction === 'rtl' ? 'end' : 'start', overlayY: 'top'},\n            OVERLAY_FLOAT_CURSOR_DEFAULT_OFFSET.bottomOffsetX,\n            OVERLAY_FLOAT_CURSOR_DEFAULT_OFFSET.bottomOffsetY\n          ),\n          // Top\n          new ConnectionPositionPair(\n            {originX: 'center', originY: 'top'},\n            {overlayX: direction === 'rtl' ? 'end' : 'start', overlayY: 'bottom'},\n            OVERLAY_FLOAT_CURSOR_DEFAULT_OFFSET.topOffsetX,\n            OVERLAY_FLOAT_CURSOR_DEFAULT_OFFSET.topOffsetY\n          )\n        ]);\n\n      break;\n    }\n    case 'connected': {\n      if (!origin) {\n        throw(new Error('ADAPT-ANGULAR Error! Overlay with positionStrategy: \\'connected\\' should have origin'));\n      }\n\n      const overlayPositions = connectedPositions && connectedPositions.length ? connectedPositions : [\n        getOverlayConnectedPosition('top'),\n        getOverlayConnectedPosition('start', direction),\n        getOverlayConnectedPosition('end', direction),\n        getOverlayConnectedPosition('bottom')\n      ];\n\n      const adaptFlexibleConnectedPositionStrategy =\n        new AdaptFlexibleConnectedPositionStrategy(origin, viewportRuler, document, platform, overlayContainer);\n\n      overlayPositionStrategy = adaptFlexibleConnectedPositionStrategy\n        .withTransformOriginOn(transformOriginSelector)\n        .withPush(false)\n        .withFlexibleDimensions(true)\n        .withGrowAfterOpen(true)\n        .withPositions(overlayPositions);\n\n      break;\n    }\n    default: {\n      overlayPositionStrategy = overlay.position().global();\n    }\n  }\n\n  return overlayPositionStrategy;\n}\n\nexport function getScrollStrategy(scrollStrategy: AdaptOverlayScrollStrategy,\n                                  overlay: Overlay,\n                                  viewportRuler: ViewportRuler,\n                                  ngZone: NgZone,\n                                  repositionScrollStrategyConfig?: RepositionScrollStrategyConfig): ScrollStrategy {\n  let _scrollStrategy: ScrollStrategy = overlay.scrollStrategies.noop();\n\n  switch (scrollStrategy) {\n    case 'block': {\n      _scrollStrategy = new AdaptBlockScrollStrategy(viewportRuler, document);\n      break;\n    }\n    case 'close': {\n      _scrollStrategy = overlay.scrollStrategies.close();\n      break;\n    }\n    case 'reposition': {\n      _scrollStrategy = new AdaptRepositionScrollStrategy(viewportRuler, ngZone, repositionScrollStrategyConfig);\n      break;\n    }\n  }\n\n  return _scrollStrategy;\n}\n\nexport function getCalculatedOverlayConfig(adaptOverlayConfig: AdaptOverlayConfig,\n                                           overlayConfig: OverlayConfig,\n                                           overlay: Overlay,\n                                           direction: Direction,\n                                           viewportRuler: ViewportRuler,\n                                           ngZone: NgZone,\n                                           document: Document,\n                                           platform: Platform,\n                                           overlayContainer: OverlayContainer): OverlayConfig {\n  const calculatedOverlayConfig: OverlayConfig = {\n    positionStrategy: getPositionStrategy(\n      adaptOverlayConfig?.connectedPositions,\n      adaptOverlayConfig?.origin,\n      adaptOverlayConfig?.positionStrategy,\n      adaptOverlayConfig?.transformOriginSelector,\n      direction,\n      document,\n      overlay,\n      overlayContainer,\n      platform,\n      viewportRuler\n    ),\n    scrollStrategy: getScrollStrategy(adaptOverlayConfig?.scrollStrategy,\n      overlay,\n      viewportRuler,\n      ngZone,\n      adaptOverlayConfig.repositionScrollStrategyConfig),\n    direction: direction,\n    minWidth: 10, // withFlexibleDimensions requires some default value for correct work\n    minHeight: 10 // withFlexibleDimensions requires some default value for correct work\n  };\n\n  return {...calculatedOverlayConfig, ...(overlayConfig || {})};\n}\n"]}