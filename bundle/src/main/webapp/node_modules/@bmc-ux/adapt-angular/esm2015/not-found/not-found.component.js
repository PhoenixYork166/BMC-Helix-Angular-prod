import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';
import { toBoolean } from '../common/utilities';
import { AdaptTranslateService } from '../common/i18n/index';
import { AdaptRadarAngularCustomEventName, AdaptRadarAngularGenericDirective, AdaptRadarAngularService } from '../common/radar/adapt-radar';
import * as i0 from "@angular/core";
import * as i1 from "../common/i18n/index";
import * as i2 from "../common/radar/adapt-radar";
import * as i3 from "@angular/common";
import * as i4 from "../button/button.component";
import * as i5 from "@angular/router";
function AdaptNotFoundPageComponent_h1_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "h1", 5);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r0.title);
} }
function AdaptNotFoundPageComponent_h2_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "h2", 6);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r1.subTitle);
} }
function AdaptNotFoundPageComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 7);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r2.description);
} }
function AdaptNotFoundPageComponent_a_8_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "a", 8);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("href", ctx_r3.btnLink, i0.ɵɵsanitizeUrl)("btn-type", ctx_r3.btnType)("disabled", ctx_r3.disabled)("size", ctx_r3.btnSize);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n    ", ctx_r3.btnText, "\n  ");
} }
const _c0 = function () { return { exact: false }; };
function AdaptNotFoundPageComponent_a_10_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "a", 9);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext();
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("routerLink", ctx_r4.routerLink)("queryParams", ctx_r4.queryParams)("routerLinkActive", "ui-state-active")("routerLinkActiveOptions", ctx_r4.routerLinkActiveOptions || i0.ɵɵpureFunction0(9, _c0))("btn-type", ctx_r4.btnType)("disabled", ctx_r4.disabled)("size", ctx_r4.btnSize);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n    ", ctx_r4.btnText, "\n  ");
} }
const _c1 = ["*"];
export class AdaptNotFoundPageComponent extends AdaptRadarAngularGenericDirective {
    constructor(ts, _adaptRadarService, _elem) {
        super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptNotFoundPage);
        this.ts = ts;
        /**
         * Style class of the 404 page
         * @docs-default ''
         */
        this.mainCls = '';
        /**
         * Configuration for button link
         * @docs-default #/landing
         */
        this.btnLink = '#/landing';
        /**
         * Specifies the type of the button
         * @docs-default secondary
         */
        this.btnType = 'secondary';
        /**
         * Specifies the size of the button
         * @docs-default xtra-large
         */
        this.btnSize = 'xtra-large';
        this._disabled = false;
        const translate = ts.getCurrentLanguage();
        this.title = translate['adapt.notFound.title'];
        this.subTitle = translate['adapt.notFound.subTitle'];
        this.description = translate['adapt.notFound.description'];
        this.btnText = translate['adapt.notFound.back'];
    }
    /**
     * When set as true, disables the button
     * @docs-default false
     */
    // TODO: Refactor this if possible
    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
    get disabled() {
        return this._disabled;
    }
    // TODO: Refactor this if possible
    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
    set disabled(v) {
        this._disabled = toBoolean(v);
    }
}
AdaptNotFoundPageComponent.ɵfac = function AdaptNotFoundPageComponent_Factory(t) { return new (t || AdaptNotFoundPageComponent)(i0.ɵɵdirectiveInject(i1.AdaptTranslateService), i0.ɵɵdirectiveInject(i2.AdaptRadarAngularService), i0.ɵɵdirectiveInject(i0.ElementRef)); };
AdaptNotFoundPageComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptNotFoundPageComponent, selectors: [["adapt-not-found-page"]], hostVars: 2, hostBindings: function AdaptNotFoundPageComponent_HostBindings(rf, ctx) { if (rf & 2) {
        i0.ɵɵclassProp("not-found", true);
    } }, inputs: { mainCls: "mainCls", title: "title", subTitle: "subTitle", description: "description", btnText: "btnText", btnLink: "btnLink", btnType: "btnType", btnSize: "btnSize", routerLink: "routerLink", queryParams: "queryParams", routerLinkActiveOptions: "routerLinkActiveOptions", disabled: "disabled" }, features: [i0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 15, vars: 8, consts: [["class", "not-found__title", 4, "ngIf"], ["class", "not-found__subtitle", 4, "ngIf"], ["class", "not-found__description", 4, "ngIf"], ["class", "not-found__btn", "adapt-button", "", 3, "adaptRadarDisableEventSending", "href", "btn-type", "disabled", "size", 4, "ngIf"], ["class", "not-found__btn", "adapt-button", "", 3, "adaptRadarDisableEventSending", "routerLink", "queryParams", "routerLinkActive", "routerLinkActiveOptions", "btn-type", "disabled", "size", 4, "ngIf"], [1, "not-found__title"], [1, "not-found__subtitle"], [1, "not-found__description"], ["adapt-button", "", 1, "not-found__btn", 3, "adaptRadarDisableEventSending", "href", "btn-type", "disabled", "size"], ["adapt-button", "", 1, "not-found__btn", 3, "adaptRadarDisableEventSending", "routerLink", "queryParams", "routerLinkActive", "routerLinkActiveOptions", "btn-type", "disabled", "size"]], template: function AdaptNotFoundPageComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵprojectionDef();
        i0.ɵɵelementStart(0, "div");
        i0.ɵɵtext(1, "\n  ");
        i0.ɵɵtemplate(2, AdaptNotFoundPageComponent_h1_2_Template, 2, 1, "h1", 0);
        i0.ɵɵtext(3, "\n  ");
        i0.ɵɵtemplate(4, AdaptNotFoundPageComponent_h2_4_Template, 2, 1, "h2", 1);
        i0.ɵɵtext(5, "\n  ");
        i0.ɵɵtemplate(6, AdaptNotFoundPageComponent_div_6_Template, 2, 1, "div", 2);
        i0.ɵɵtext(7, "\n\n  ");
        i0.ɵɵtemplate(8, AdaptNotFoundPageComponent_a_8_Template, 2, 6, "a", 3);
        i0.ɵɵtext(9, "\n\n  ");
        i0.ɵɵtemplate(10, AdaptNotFoundPageComponent_a_10_Template, 2, 10, "a", 4);
        i0.ɵɵtext(11, "\n");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(12, "\n\n");
        i0.ɵɵprojection(13);
        i0.ɵɵtext(14, "\n");
    } if (rf & 2) {
        i0.ɵɵclassMapInterpolate1("not-found__container ", ctx.mainCls, "");
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.title !== "");
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.subTitle !== "");
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.description !== "");
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.btnText !== "" && !ctx.routerLink);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.btnText !== "" && ctx.routerLink);
    } }, directives: [i3.NgIf, i4.AdaptButtonComponent, i5.RouterLinkWithHref, i5.RouterLinkActive], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptNotFoundPageComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-not-found-page',
                // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                host: {
                    '[class.not-found]': 'true'
                },
                templateUrl: './not-found.component.html',
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: true
            }]
    }], function () { return [{ type: i1.AdaptTranslateService }, { type: i2.AdaptRadarAngularService }, { type: i0.ElementRef }]; }, { mainCls: [{
            type: Input
        }], title: [{
            type: Input
        }], subTitle: [{
            type: Input
        }], description: [{
            type: Input
        }], btnText: [{
            type: Input
        }], btnLink: [{
            type: Input
        }], btnType: [{
            type: Input
        }], btnSize: [{
            type: Input
        }], routerLink: [{
            type: Input
        }], queryParams: [{
            type: Input
        }], routerLinkActiveOptions: [{
            type: Input
        }], disabled: [{
            type: Input
        }] }); })();
//# sourceMappingURL=not-found.component.js.map