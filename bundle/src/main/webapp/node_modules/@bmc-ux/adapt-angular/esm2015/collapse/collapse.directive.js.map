{"version":3,"file":"collapse.directive.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/collapse/collapse.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, ElementRef, Input, ViewEncapsulation} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {ANIMATION_DURATION, ANIMATION_TIMING_FUNCTION} from '../common/animation';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularGenericDirective,\n  AdaptRadarAngularService\n} from '../common/radar/adapt-radar';\n\n\n@Component({\n  selector: 'adapt-collapse, [collapse]',\n  exportAs: 'collapse',\n  template: `\n    <div class=\"collapse-block\"\n         [@collapseAnimation]=\"isCollapsed\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  animations: [\n    trigger('collapseAnimation', [\n      state('void', style({\n        height: '0',\n        overflow: 'hidden',\n        visibility: 'hidden'\n      })),\n      state('1', style({\n        height: '0',\n        overflow: 'hidden',\n        visibility: 'hidden'\n      })),\n      state('0', style({\n        height: '*',\n        overflow: 'visible',\n        visibility: 'visible'\n      })),\n      transition('1 => 0', [\n        style({height: '0', overflow: 'hidden', visibility: 'visible'}),\n        animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionInOut,\n          style({height: '*', overflow: 'hidden', visibility: 'visible'})\n        )\n      ]),\n      transition('0 => 1', [\n        style({height: '*', overflow: 'hidden', visibility: 'visible'}),\n        animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionInOut,\n          style({height: '0', overflow: 'hidden', visibility: 'visible'}),\n        )\n      ])\n    ])\n  ],\n  styles: [`\n    .collapse-block {\n      overflow: hidden;\n    }\n\n    .collapse-block:before,\n    .collapse-block:after {\n      content: '';\n      display: table;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None\n\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class AdaptCollapseDirective extends AdaptRadarAngularGenericDirective {\n\n  // Is Collapsed flag\n  isCollapsed: boolean = true;\n\n  /**\n   * Accessor for collapse attribute.\n   * Show or hide collapsible block according to value\n   * @docs-default\n   */\n  @Input()\n  set collapse(value: boolean) {\n    if (value) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  constructor(_adaptRadarService: AdaptRadarAngularService,\n              _elem: ElementRef<HTMLElement>) {\n    super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptCollapse);\n  }\n\n  /**\n   * Hide collapsible block\n   */\n  hide(): void {\n    this.isCollapsed = true;\n  }\n\n  /**\n   * Show collapsible block\n   */\n  show(): void {\n    this.isCollapsed = false;\n  }\n\n  /**\n   * Toggle collapsible block\n   */\n  toggle(): void {\n    if (this.isCollapsed) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n}\n"]}