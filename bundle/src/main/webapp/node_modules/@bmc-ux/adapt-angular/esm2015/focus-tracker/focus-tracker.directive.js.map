{"version":3,"file":"focus-tracker.directive.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/focus-tracker/focus-tracker.directive.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;GAgBG;AAEH,OAAO,EAAgB,SAAS,EAAY,MAAM,eAAe,CAAC;AAClE,OAAO,EAAC,wBAAwB,EAAC,MAAM,yBAAyB,CAAC;;;AAOjE,MAAM,OAAO,0BAA0B;IAErC,YAAoB,YAAsC;QAAtC,iBAAY,GAAZ,YAAY,CAA0B;IAC1D,CAAC;IAED,eAAe;QACb,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC;IACzC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,CAAC;IAC1C,CAAC;;oGAXU,0BAA0B;6EAA1B,0BAA0B;uFAA1B,0BAA0B;cAJtC,SAAS;eAAC;gBACT,QAAQ,EAAE,4CAA4C;aACvD","sourcesContent":["/**\n * Additional info\n * Please add => Focusin/focusout polyfill for Firefox based on this gist by @nuxodin. Addresses this bug in Firefox.\n * github: https://github.com/paulcpederson/focusin\n *\n * Install\n * npm install focusin\n *\n * Or, just copy focusin.min.js into your project if you don't use browserify.\n * The minified script automatically runs the polyfill method, so all you have to do is include it.\n *\n * Usage\n * focusin is a polyfill, so you don't need to assign it to a variable, just require it and call the polyfill method.\n * Obviously meant for browser environments and not Node.js.\n * If you only require the module no code will be attached to the window.\n * require('focusin').polyfill()\n */\n\nimport {AfterViewInit, Directive, OnDestroy} from '@angular/core';\nimport {AdaptFocusTrackerService} from './focus-tracker.service';\n\n\n@Directive({\n  selector: '[adaptFocusTracker], [adapt-focus-tracker]'\n})\n\nexport class AdaptFocusTrackerDirective implements AfterViewInit, OnDestroy {\n\n  constructor(private focusTracker: AdaptFocusTrackerService) {\n  }\n\n  ngAfterViewInit(): void {\n    this.focusTracker.enableFocusTracker();\n  }\n\n  ngOnDestroy(): void {\n    this.focusTracker.disableFocusTracker();\n  }\n\n}\n"]}