import { animate, style, transition, trigger } from '@angular/animations';
import { ANIMATION_DURATION, ANIMATION_TIMING_FUNCTION } from '../../animation';
export const ANIMATION_INIT_STATE = trigger('uploaderInitStateAnim', [
    transition(':enter', [
        style({ opacity: 0, visibility: 'hidden', left: '{{leftStart}}', right: '{{rightStart}}' }),
        animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionInOut, style({ opacity: 1, visibility: 'visible', left: '{{leftEnd}}', right: '{{rightEnd}}' }))
    ], { params: { leftStart: '15%', rightStart: '15%', leftEnd: '0px', rightEnd: '0px' } })
]);
export const ANIMATION_DND = {
    hidden: {
        rtl: [
            style({
                opacity: 1,
                visibility: 'visible',
                right: '0px',
                transform: 'translateX(0%)'
            }),
            animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionInOut, style({
                opacity: 0,
                visibility: 'hidden',
                right: '50%',
                transform: 'translateX(50%)'
            }))
        ],
        ltr: [
            style({
                opacity: 1,
                visibility: 'visible',
                left: '0px',
                transform: 'translateX(0%)'
            }),
            animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionInOut, style({
                opacity: 0,
                visibility: 'hidden',
                left: '50%',
                transform: 'translateX(-50%)'
            }))
        ]
    },
    visible: {
        rtl: [
            style({
                opacity: 0,
                visibility: 'hidden',
                right: '50%',
                transform: 'translateX(50%)'
            }),
            animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionInOut, style({
                opacity: 1,
                visibility: 'visible',
                right: '0px',
                transform: 'translateX(0%)'
            }))
        ],
        ltr: [
            style({
                opacity: 0,
                visibility: 'hidden',
                left: '50%',
                transform: 'translateX(-50%)'
            }),
            animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionInOut, style({
                opacity: 1,
                visibility: 'visible',
                left: '0px',
                transform: 'translateX(0%)'
            }))
        ]
    }
};
export const ANIMATION_DROP = {
    hidden: {
        rtl: [
            style({
                opacity: 1,
                visibility: 'visible',
                right: '50%',
                transform: 'translateX(50%)'
            }),
            animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionInOut, style({
                opacity: 0,
                visibility: 'hidden',
                right: '0px',
                transform: 'translateX(0px)'
            }))
        ],
        ltr: [
            style({
                opacity: 1,
                visibility: 'visible',
                left: '50%',
                transform: 'translateX(-50%)'
            }),
            animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionInOut, style({
                opacity: 0,
                visibility: 'hidden',
                left: '0px',
                transform: 'translateX(0px)'
            }))
        ]
    },
    visible: {
        rtl: [
            style({
                opacity: 0,
                visibility: 'hidden',
                right: '0',
                transform: 'translateX(0px)'
            }),
            animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionInOut, style({
                opacity: 1,
                visibility: 'visible',
                right: '50%',
                transform: 'translateX(50%)'
            }))
        ],
        ltr: [
            style({
                opacity: 0,
                visibility: 'hidden',
                left: '0px',
                transform: 'translateX(0px)'
            }),
            animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionInOut, style({
                opacity: 1,
                visibility: 'visible',
                left: '50%',
                transform: 'translateX(-50%)'
            }))
        ]
    }
};
//# sourceMappingURL=animations.js.map