{"version":3,"file":"advanced-filter.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/advanced-filtering/advanced-filter/advanced-filter.component.ts","../../../../../../libs/adapt-angular/src/advanced-filtering/advanced-filter/advanced-filter.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS, NgControl, ValidationErrors, Validator} from '@angular/forms';\nimport {\n  animate,\n  animateChild,\n  AnimationEvent,\n  group,\n  query,\n  style,\n  transition,\n  trigger,\n  useAnimation\n} from '@angular/animations';\nimport {ENTER, ESCAPE} from '@angular/cdk/keycodes';\nimport {EventManager} from '@angular/platform-browser';\nimport {asyncScheduler, Observable, Subject, Subscription} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map, take, takeUntil, throttleTime} from 'rxjs/operators';\nimport {escapeRegExp, isEmpty, isEqual, isFunction} from 'lodash-es';\n\nimport {ANIMATION_DURATION, ANIMATION_NAME, ANIMATION_TIMING_FUNCTION} from '../../common/animation';\nimport {AdaptDeviceDetectionService} from '../../common/device-detection.service';\nimport {AdaptTranslateService} from '../../common/i18n/index';\nimport {KeyValueObject, StylesObject} from '../../common/common.models';\nimport {ResizeService} from '../../common/resize/resize.service';\nimport {SafeCdr} from '../../common/safe-cdr';\nimport {ValidationError} from '../../common/form.component';\nimport {formatString, getValueOrFunc, hasKeyboardKeyCode} from '../../common/utilities';\nimport {AdaptOverlayService} from '../../common/overlay/index';\n\nimport {ActiveTabChangeEvent} from '../../tabs/index';\nimport {AdaptCustomAction, AdaptCustomActionsAlignEnum} from '../../custom-actions/index';\nimport {AdaptDropdownMobileView} from '../../dropdown/index';\nimport {AdaptMetatagComponent, InitTagEditingEvent, RemoveTagEvent, TagModel, TagType} from '../../metatag/index';\nimport {AdaptRxTextfieldComponent} from '../../rx/rx-textfield/index';\nimport {BusyConfig} from '../../busy-loader/index';\n\nimport {BaseFilterDirective} from '../base-filter';\nimport {FilterTagsRemoveEvent, FilterTagsVisibilityChangedEvent} from '../filter-tags/adapt-filter-tags.model';\nimport {AdvancedFilterDataTypesConfigsService} from './advanced-filter-configs.service';\nimport {AdaptFilterControlsComponent} from './filter-controls/filter-controls.component';\nimport {\n  ActiveSavedFilterSelectionCause,\n  AdvancedFilterControlsData,\n  AdvancedFilterDataTypesConfigs,\n  AdvancedFilterDisabledResolver,\n  AdvancedFilterExpressionTip,\n  AdvancedFilterOption,\n  AdvancedFilterOptionConfig,\n  AdvancedFilterRemoveTagEvent,\n  AdvancedFilterSelectionChangeEvent,\n  AdvancedFilterTag,\n  AdvancedFilterTagModel,\n  AdvancedFilterTagsChangedEvent,\n  AdvancedFilterTexts,\n  BeforeActiveSavedFilterChangeEvent,\n  CreateAdvancedFilterEvent,\n  EditFilterAnimationParams,\n  EditingSavedFilterData,\n  EditSavedFilterClickEvent,\n  MarkDefaultSavedFilterClickEvent,\n  SavedAdvancedFilter,\n  SaveNewFilterClickEvent,\n  SelectedAdvancedFilter,\n  UpdateFiltersExpressionModelOptions,\n  UpdateSavedFilterEvent\n} from './advanced-filter.models';\nimport {AdaptRadarAngularCustomEventName, AdaptRadarAngularService} from '../../common/radar/adapt-radar';\n\nexport interface EditFilterListItemAnimationParams {\n  savedFilter: SavedAdvancedFilter;\n  scope: AdaptAdvancedFilterComponent;\n  savedFilterListItemTranslateXPixels: number;\n  savedFilterListItemTranslateYPixels: number;\n}\n\n// TODO: instead of scope and this functions use AnimationBuilder for savedFilterListItem element\nexport function getEditSavedFilterListItemTransition(params: EditFilterListItemAnimationParams): boolean {\n  return params.scope.editFilterContainerAnimationOptions &&\n    params.scope.editFilterContainerAnimationOptions.params.lastEditingSavedFilter.originalSavedFilter.id\n    === params.savedFilter.id;\n}\n\nexport function getEditSavedFilterListItemTransitionFromVoidStateFn(\n  fromState: string, toState: string, element: HTMLElement, params: EditFilterListItemAnimationParams): boolean {\n  return fromState === 'void' && getEditSavedFilterListItemTransition(params);\n}\n\nexport function getEditSavedFilterListItemTransitionFromAnyStateFn(\n  fromState: string, toState: string, element: HTMLElement, params: EditFilterListItemAnimationParams): boolean {\n  return fromState === '*' && getEditSavedFilterListItemTransition(params);\n}\n\n@Directive({\n  selector: '[adaptAdvancedFilterName][ngModel],[adaptAdvancedFilterName][formControl]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: forwardRef(() => AdaptAdvancedFilterNameValidator), multi: true}\n  ]\n})\nexport class AdaptAdvancedFilterNameValidator implements Validator {\n  @Input() adaptAdvancedFilterNameErrorText: string;\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    return !control.value ? {\n      prohibitedWordError: {\n        message: this.adaptAdvancedFilterNameErrorText,\n        showOnTouched: true\n      }\n    } : null;\n  }\n}\n\n@Component({\n  selector: 'adapt-advanced-filter',\n  templateUrl: './advanced-filter.component.html',\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('savedFiltersContainerAnimation', [\n      transition(':enter', [\n        group([\n          animate(`${ANIMATION_DURATION.medium} ${ANIMATION_TIMING_FUNCTION.base.transitionIn}`),\n          query('@editSavedFilterListItemAnimation', [animateChild()], {optional: true})\n        ])\n      ]),\n\n      transition(':leave', [\n        group([\n          animate(`${ANIMATION_DURATION.medium} ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`),\n          query('@editSavedFilterListItemAnimation', [animateChild()], {optional: true})\n        ])\n      ])\n    ]),\n\n    trigger('editSavedFilterListItemAnimation', [\n      transition(getEditSavedFilterListItemTransitionFromAnyStateFn, [\n        style({transform: 'translate(0px, 0px)'}),\n        animate(`${ANIMATION_DURATION.medium} ${ANIMATION_TIMING_FUNCTION.base.transitionIn}`,\n          style({transform: 'translate({{savedFilterListItemTranslateXPixels}}px, {{savedFilterListItemTranslateYPixels}}px)'}))\n      ], {params: {savedFilterListItemTranslateXPixels: 0, savedFilterListItemTranslateYPixels: 0}}),\n\n      transition(getEditSavedFilterListItemTransitionFromVoidStateFn, [\n        style({transform: 'translate({{savedFilterListItemTranslateXPixels}}px, {{savedFilterListItemTranslateYPixels}}px)'}),\n        animate(`${ANIMATION_DURATION.medium} ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`,\n          style({transform: 'translate(0px, 0px)'}))\n      ], {params: {savedFilterListItemTranslateXPixels: 0, savedFilterListItemTranslateYPixels: 0}})\n    ]),\n\n    trigger('editFilterContainerAnimation', [\n      transition('void => *', [\n        style({\n          opacity: 0,\n          position: 'absolute',\n          left: 0,\n          right: 0,\n          top: '7px',\n          backgroundColor: 'white',\n          overflow: 'hidden'\n        }),\n        group([\n          animate(`${ANIMATION_DURATION.medium} ${ANIMATION_TIMING_FUNCTION.base.transitionIn}`,\n            style({opacity: 1})),\n          query('.advanced-filter__editing-container', [\n            style({transform: 'translateY(50%)'}),\n            animate(`${ANIMATION_DURATION.medium} ${ANIMATION_TIMING_FUNCTION.base.transitionIn}`,\n              style({transform: 'translateY(0%)'}))\n          ]),\n\n          query('.advanced-filter__back-btn', [\n            style({transform: 'translateX(150%)'}),\n            animate(`${ANIMATION_DURATION.medium} ${ANIMATION_TIMING_FUNCTION.base.transitionIn}`,\n              style({transform: 'translateX(0%)'}))\n          ]),\n\n          query('.advanced-filter__editing-title', [\n            style({transform: 'translate({{titleTranslateXPixels}}px, {{titleTranslateYPixels}}px)'}),\n            animate(`${ANIMATION_DURATION.medium} ${ANIMATION_TIMING_FUNCTION.base.transitionIn}`,\n              style({transform: 'translate(0px, 0px)'}))\n          ])\n\n        ])\n      ], {params: {titleTranslateYPixels: 0, titleTranslateXPixels: 0} as EditFilterAnimationParams}),\n      transition('* => void', [\n        style({\n          opacity: 1,\n          position: 'absolute',\n          left: 0,\n          right: 0,\n          top: '7px',\n          backgroundColor: 'white',\n          overflow: 'hidden'\n        }),\n        group([\n          animate(`${ANIMATION_DURATION.medium} ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`,\n            style({opacity: 0})),\n\n          query('.advanced-filter__editing-container', [\n            style({transform: 'translateY(0%)'}),\n            animate(`${ANIMATION_DURATION.medium} ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`,\n              style({transform: 'translateY(50%)'}))\n          ]),\n\n          query('.advanced-filter__back-btn', [\n            style({transform: 'translateX(0%)'}),\n            animate(`${ANIMATION_DURATION.medium} ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`,\n              style({transform: 'translateX(150%)'}))\n          ]),\n\n          query('.advanced-filter__editing-title', [\n            style({transform: 'translate(0px, 0px)'}),\n            animate(`${ANIMATION_DURATION.medium} ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`,\n              style({transform: 'translate({{titleTranslateXPixels}}px, {{titleTranslateYPixels}}px'}))\n          ])\n\n        ])\n      ], {params: {titleTranslateYPixels: 0, titleTranslateXPixels: 0} as EditFilterAnimationParams})\n    ]),\n\n    trigger('editFilterContainerOverlayAnimation', [\n      transition('void => *', [\n        useAnimation(ANIMATION_NAME.moveIn, {params: {translateY: 10, unit: 'px'}})\n      ])\n    ])\n  ],\n  styles: [`\n    .advanced-filter__popover-container-overlay .advanced-filter__container {\n      height: 100%;\n\n      display: flex;\n      flex-direction: column;\n      overflow: auto;\n    }\n\n    .advanced-filter__popover-container-overlay .advanced-filter__editing-header-wrap {\n      flex: 0 0 auto;\n    }\n\n    .advanced-filter__popover-container-overlay .advanced-filter__editing-container {\n      flex: 1 1 auto;\n      overflow: auto;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .advanced-filter__popover-container-overlay .advanced-filter__animation-container {\n      display: flex;\n      flex-direction: column;\n      height: 100%;\n    }\n\n    .advanced-filter__popover-container-overlay .advanced-filter__popover-header {\n      flex: 0 0 auto;\n    }\n\n    .advanced-filter__popover-container-overlay .advanced-filter__tab-container {\n      overflow: auto;\n    }\n\n    .advanced-filter__popover-container-overlay .advanced-filter__tab-content {\n      overflow: auto;\n    }\n  `]\n})\nexport class AdaptAdvancedFilterComponent extends BaseFilterDirective<AdvancedFilterTexts> implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('adaptDropdownMenu', {static: false}) adaptDropdownMenu: ElementRef<HTMLDivElement>;\n  @ViewChild('adaptDropdownButton', {static: false}) adaptDropdownButton: ElementRef<HTMLButtonElement>;\n  @ViewChild('editingFilterOptionsScrollableEl', {static: false}) editingFilterOptionsScrollableEl: ElementRef<HTMLDivElement>;\n  @ViewChild('editingFilterFooterEl', {static: false}) editingFilterFooterEl: ElementRef<HTMLDivElement>;\n  @ViewChild('filterExpressionTagField', {static: false}) filterExpressionTagField: AdaptMetatagComponent;\n  @ViewChild('filterExpressionTagField', {static: false, read: NgControl}) filterExpressionFormControl: NgControl;\n  @ViewChild('editingFilterExpressionTagField', {static: false}) editingFilterExpressionTagField: AdaptMetatagComponent;\n  @ViewChild('applyFiltersByUserActionFooterEl') applyFiltersByUserActionFooterEl: ElementRef<HTMLDivElement>;\n  @ViewChild('filtersDropdownWrapper', {static: false}) filtersDropdownWrapper: ElementRef<HTMLDivElement>;\n  @ViewChild('filterTags', {static: false, read: ElementRef}) filterTags: ElementRef<Element>;\n\n  @ViewChild('editingFilterExpressionTagField', {\n    static: false,\n    read: NgControl\n  }) editingFilterExpressionFormControl: NgControl;\n\n  @ViewChild('newFilterNameEditor', {static: false}) newFilterNameEditor: AdaptRxTextfieldComponent;\n  @ViewChildren('filterControls') filterOptionsControls: QueryList<AdaptFilterControlsComponent>;\n\n  @Input() filterOptions: AdvancedFilterOption[] = [];\n  @Input() savedFilters: SavedAdvancedFilter[] = [];\n  @Input() enableDefaultSavedFilter: boolean = false; // need to prevent breaking existing consumer components\n  @Input() defaultSavedFilterId: string;\n  @Input() busyConfig: BusyConfig = this.getBusyConfig();\n\n  get activeSavedFilter(): SavedAdvancedFilter {\n    return this._activeSavedFilter;\n  }\n\n  @Input() set activeSavedFilter(activeSavedFilterArgs: SavedAdvancedFilter) {\n    if (!this._isInitialized) {\n      this._preservedActiveSavedFilter = activeSavedFilterArgs;\n\n      return;\n    }\n\n    if (activeSavedFilterArgs) {\n      if (this.applyFiltersByUserAction) {\n        this._notAppliedSelectedFilters = activeSavedFilterArgs.filters;\n      } else {\n        this.selectedFilters = activeSavedFilterArgs.filters;\n      }\n    }\n    this._activeSavedFilter = activeSavedFilterArgs;\n  }\n\n  @Input() disableExpressionEditing: boolean = false;\n  @Input() showAnchorButtonLabel: boolean = true;\n  @Input() getCustomExpressionTagFieldModel: (tags: AdvancedFilterTag[]) => AdvancedFilterTag[];\n  @Input() enableSavedFilters: boolean = true;\n\n  @Input() set applyFiltersByUserAction(appliedFilterByUserAction: boolean) {\n    this._applyFiltersByUserAction = Boolean(appliedFilterByUserAction);\n\n    if (this._activeSavedFilter && this._applyFiltersByUserAction) {\n      if (!isEqual(this._activeSavedFilter.filters, this.selectedFilters)) {\n        this._selectedFilters = [];\n      }\n\n      this._notAppliedSelectedFilters = this._activeSavedFilter.filters;\n    } else {\n      this._notAppliedSelectedFilters = this.selectedFilters;\n    }\n  }\n\n  get applyFiltersByUserAction(): boolean {\n    return this._applyFiltersByUserAction;\n  }\n\n  @Input() canCloseDropdownResolver: (event: MouseEvent) => boolean;\n\n  /**\n   * Toggle tabs visibility\n   *\n   * @since v11.11.0\n   */\n  @Input() showTabToolbar: boolean = true;\n\n  /**\n   * @since v10.6.0\n   */\n  @Input() disabledTabResolver: AdvancedFilterDisabledResolver;\n\n  /**\n   * @since v10.6.0\n   */\n  @Input() disabledInputResolver: AdvancedFilterDisabledResolver;\n\n  /**\n   * @since v10.6.0\n   */\n  @Input() showSelectedFiltersCount: boolean = true;\n\n  /**\n   * Selected filter indication style\n   *\n   * @since v12.13.0\n   * @docs-default 'text'\n   */\n  @Input() selectedFiltersIndicationStyle: 'text' | 'mark' = 'text';\n\n  /**\n   * @since v10.12.0\n   */\n  @Input() filterOptionsCustomAreaTemplate: TemplateRef<void>;\n\n  /**\n   * @since v10.14.0\n   */\n  @Input() showTags: boolean = false;\n\n  /**\n   * This input controls if filter button (anchor) should be disabled\n   * @since v10.8.0\n   */\n  @Input() anchorDisabled: boolean = false;\n\n  /**\n   * This input controls using full container width for editing tags\n   * @since v11.11.0\n   */\n  @Input() fullWidthEdit: boolean = true;\n\n  /**\n   * Workaround: is used for animation. Reassign this input if you have localization\n   */\n  @Input() translateFilterEditingTitleXPixels: number = 138;\n\n  @Input()\n  set selectedFilters(selectedFilters: SelectedAdvancedFilter[]) {\n    if (!this._isInitialized) {\n      this._preservedSelectedFilters = selectedFilters;\n\n      return;\n    }\n\n    if (isEqual(this._selectedFilters, selectedFilters)) {\n      return;\n    }\n\n    this._updateSelectedFilters(selectedFilters, false);\n\n    const filtersExpressionsTags = this.convertSelectedFiltersToTags(selectedFilters);\n\n    if (!isEqual(filtersExpressionsTags, this.filtersExpressionsTags)) {\n      this.updateFiltersExpressionModel(\n        filtersExpressionsTags,\n        {\n          updateAndEmitSelectedFiltersChange: true,\n          deselectActiveSavedFilter: ActiveSavedFilterSelectionCause.OnSelectedFiltersSetter,\n          clearMetatagInputValue: false,\n          updateEditingFilterTags: false,\n          applyFiltersByUserAction: this.applyFiltersByUserAction\n        }\n      );\n    }\n  }\n\n  get selectedFilters(): SelectedAdvancedFilter[] {\n    return this._selectedFilters;\n  }\n\n  @Input()\n  set isLoading(val: boolean) {\n    this.setIsLoadingState(val);\n  }\n\n  get isLoading(): boolean {\n    return this._isLoading;\n  }\n\n  @Output() readonly selectedFiltersChange: EventEmitter<SelectedAdvancedFilter[]> = new EventEmitter<SelectedAdvancedFilter[]>();\n  @Output() readonly filterSelectionChange: EventEmitter<AdvancedFilterSelectionChangeEvent> = new EventEmitter<AdvancedFilterSelectionChangeEvent>();\n\n  @Output() readonly deleteSavedFilter: EventEmitter<SavedAdvancedFilter> = new EventEmitter<SavedAdvancedFilter>();\n  @Output() readonly createNewFilter: EventEmitter<CreateAdvancedFilterEvent> = new EventEmitter<CreateAdvancedFilterEvent>();\n  @Output() readonly updateSavedFilter: EventEmitter<UpdateSavedFilterEvent> = new EventEmitter<UpdateSavedFilterEvent>();\n  @Output() readonly beforeActiveSavedFilterChange: EventEmitter<BeforeActiveSavedFilterChangeEvent> =\n    new EventEmitter<BeforeActiveSavedFilterChangeEvent>();\n  @Output() readonly activeSavedFilterChange: EventEmitter<SavedAdvancedFilter> = new EventEmitter<SavedAdvancedFilter>();\n  @Output() readonly removeTag: EventEmitter<AdvancedFilterRemoveTagEvent> = new EventEmitter<AdvancedFilterRemoveTagEvent>();\n  @Output() readonly filtersCleared: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n  @Output() readonly saveNewFilterClick: EventEmitter<SaveNewFilterClickEvent> = new EventEmitter<SaveNewFilterClickEvent>();\n  @Output() readonly filtersSelectionCanceled: EventEmitter<void> = new EventEmitter<void>();\n  @Output() readonly editSavedFilterClick: EventEmitter<EditSavedFilterClickEvent> = new EventEmitter<EditSavedFilterClickEvent>();\n  @Output() readonly markDefaultSavedFilterClick: EventEmitter<MarkDefaultSavedFilterClickEvent> = new EventEmitter<MarkDefaultSavedFilterClickEvent>();\n  @Output() readonly editingSavedFilterCanceled: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * It is emitted when the component changes the model for the filterExpressionTagField.\n   * Is needed for advanced component usage.\n   */\n  @Output() readonly filterExpressionTagsChanged: EventEmitter<AdvancedFilterTagsChangedEvent> =\n    new EventEmitter<AdvancedFilterTagsChangedEvent>();\n\n  get currentFiltersExpressionsTags(): AdvancedFilterTag[] {\n    return this.currentEditingSavedFilter ? this.currentEditingSavedFilter.filtersExpressionsTags :\n      this.filtersExpressionsTags;\n  }\n\n  get canShowCreatingNewFilterPreset(): boolean {\n    return this.isCreatingNewFilterPreset && this.filtersExpressionsTags.length > 0;\n  }\n\n  get canShowSaveNewFilterButton(): boolean {\n    return this.enableSavedFilters && !this._activeSavedFilter\n      && (this.filterExpressionFormControl ? this.filterExpressionFormControl.valid : true);\n  }\n\n  get currentFilterActions(): AdaptCustomAction[] {\n    const currentFilterActions: AdaptCustomAction[] = [\n      {\n        name: this.texts.clearButtonLabel,\n        visible: this.filterExpressionTagField && !this._isLoading\n          && (this.filterExpressionTagField.control.value && this.filterExpressionTagField.control.value.length\n            || !!this.filterExpressionTagField.inputValue),\n        onClick: this.clear.bind(this)\n      }\n    ];\n\n    if (this.showTabToolbar) {\n      currentFilterActions.push({\n        name: this.texts.saveButtonLabel,\n        visible: this.canShowSaveNewFilterButton && !this._isLoading\n          && this.filtersExpressionsTags && this.filtersExpressionsTags.length > 0,\n        onClick: this.onSaveNewFilterClick.bind(this)\n      });\n    }\n\n    return currentFilterActions;\n  }\n\n  get creatingNewFilterActions(): AdaptCustomAction[] {\n    return [\n      {\n        name: this.texts.cancelLabel,\n        visible: this.filterExpressionTagField\n          && (this.filterExpressionTagField.control.value && this.filterExpressionTagField.control.value.length\n            || !!this.filterExpressionTagField.inputValue),\n        onClick: this.onCancelCreatingNewFilterPreset.bind(this),\n        // add special class for IE to fix issue with incorrect buttons display.\n        // the root cause of the problem in styles(width: 0) that for some reason applied after animation finished.\n        customClass: this._deviceDetection.isIE() ? 'advanced-filter__creating-new-filter-btn_ie' : ''\n      },\n      {\n        name: this.texts.saveButtonLabel,\n        visible: !(this.newFilterNameEditor && this.newFilterNameEditor.hasDangerState) && !!this.getCreatingNewFilterPresetNameTrimmed(),\n        onClick: this.onCreateNewFilterPreset.bind(this),\n        customClass: this._deviceDetection.isIE() ? 'advanced-filter__creating-new-filter-btn_ie' : ''\n      }\n    ];\n  }\n\n  get dropdownMobileView(): AdaptDropdownMobileView {\n    return {\n      title: this.currentEditingSavedFilter\n        ? `${this.texts.editLabel}: ${this.currentEditingSavedFilter.originalSavedFilter.name}`\n        : (this.isTablet ? this.texts.initialDropdownAnchorLabel : null),\n      cancelCB: this._dropdownCancelCB.bind(this),\n      doneCB: this._dropdownDoneCB.bind(this),\n      doneBtnTitle: this.currentEditingSavedFilter ? this.texts.saveButtonLabel : null,\n      cancelBtnTitle: this.currentEditingSavedFilter ? this.texts.backLabel : null,\n      isPicker: this.isTablet,\n      fullHeight: true\n    };\n  }\n\n  get dropdownCustomClass(): string {\n    return 'a-advanced-filter' + (this.currentEditingSavedFilter ? ' a-advanced-filter_edit-mode' : '');\n  }\n\n  get dropdownAnchorLabel(): string {\n    return this.showTags && this.isFilterOutsideTagsHidden && this.dropdownAnchorWithCounterLabel\n      ? this.dropdownAnchorWithCounterLabel\n      : this.texts.initialDropdownAnchorLabel;\n  }\n\n  selectedFiltersTags: AdvancedFilterTag[];\n\n  advancedFilterDataTypesConfigs: AdvancedFilterDataTypesConfigs;\n  filtersExpressionsTags: AdvancedFilterTag[] = [];\n  currentEditingSavedFilter: EditingSavedFilterData = null;\n  isCreatingNewFilterPreset: boolean = false;\n  creatingNewFilterPresetName: string = '';\n  tabsetActiveIndex: number = 0;\n\n  editFilterContainerAnimationOptions: {\n    params: EditFilterAnimationParams;\n    value: ':enter' | ':leave';\n  } = null;\n\n  menuElStyle: StylesObject;\n  editingFilterScrollableElStyle: StylesObject;\n  customActionsAlignedTo: AdaptCustomActionsAlignEnum = AdaptCustomActionsAlignEnum.Right;\n  isNewFilterNameEditorFocus: boolean = false;\n  isMobile: boolean = false;\n  isTablet: boolean = false;\n  isFilterOutsideTagsHidden: boolean = false;\n  dropdownAnchorWithCounterLabel: string = '';\n  dropdownMenuContentVisible: boolean = false;\n  isEntirelyScrollable: boolean = false;\n\n  private _isLoading: boolean = false;\n  private _removeTapEventListener: Function;\n  private _preservedSelectedFilters: SelectedAdvancedFilter[];\n  private _preservedActiveSavedFilter: SavedAdvancedFilter;\n  private _isInitialized: boolean = false;\n  private _selectedFilters: SelectedAdvancedFilter[] = [];\n  private _activeSavedFilter: SavedAdvancedFilter;\n  private _applyFiltersByUserAction: boolean = false;\n  private _notAppliedSelectedFilters: SelectedAdvancedFilter[] = [];\n  private readonly _entirelyScrollHeight: number = 300; // 18.75 rem * 16px\n\n  constructor(\n    private _ngZone: NgZone,\n    private _eventManager: EventManager,\n    private _dataTypesConfigsService: AdvancedFilterDataTypesConfigsService,\n    private _changeDetector: ChangeDetectorRef,\n    private _deviceDetection: AdaptDeviceDetectionService,\n    private _translateService: AdaptTranslateService,\n    private _resizeService: ResizeService,\n    public overlayService: AdaptOverlayService,\n    _adaptRadarService: AdaptRadarAngularService,\n    _elem: ElementRef<HTMLElement>\n  ) {\n    super(_translateService, _adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptAdvancedFilter);\n    this.appendDropdownToBody = false;\n    this.expressionSearch = this.expressionSearch.bind(this);\n    this.tagFieldWarningCheckResolver = this.tagFieldWarningCheckResolver.bind(this);\n  }\n\n  ngOnInit(): void {\n    // need initialization after texts setting\n    this.advancedFilterDataTypesConfigs = this._dataTypesConfigsService.getConfigs(this.texts.configsTexts);\n    this._isInitialized = true;\n    this.isMobile = this._deviceDetection.isMobile();\n    this.isTablet = this._deviceDetection.deviceTablet();\n\n    if ((this._preservedSelectedFilters || this._preservedActiveSavedFilter)) {\n      if (this._preservedActiveSavedFilter) {\n        this.selectedFilters = this._preservedActiveSavedFilter.filters;\n\n        if (this.applyFiltersByUserAction) {\n          this._notAppliedSelectedFilters = this._preservedActiveSavedFilter.filters;\n        }\n\n        this._activeSavedFilter = this._preservedActiveSavedFilter;\n      } else {\n        this.selectedFilters = this._preservedSelectedFilters;\n\n        if (this.applyFiltersByUserAction) {\n          this._notAppliedSelectedFilters = this._preservedSelectedFilters;\n        }\n      }\n      this._preservedActiveSavedFilter = null;\n      this._preservedSelectedFilters = null;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n\n    const resize$ = new Subject();\n\n    resize$\n      .pipe(\n        takeUntil(this._destroyed$),\n        throttleTime(100, asyncScheduler, {trailing: true})\n      )\n      .subscribe(() => {\n        this._checkIfFilterTagsLabelVisible();\n      });\n\n    this._resizeService.addResizeEventListener(this.filtersDropdownWrapper.nativeElement, resize$.next.bind(resize$));\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n\n    if (this._removeTapEventListener) {\n      this._removeTapEventListener();\n    }\n\n    if (this.filtersDropdownWrapper?.nativeElement) {\n      this._resizeService.removeResizeEventListener(this.filtersDropdownWrapper.nativeElement);\n    }\n  }\n\n  setDefaultTexts(translation: KeyValueObject): void {\n    this.defaultTexts.initialDropdownAnchorLabel = translation['adapt.advancedFilter.initialDropdownAnchorLabel'];\n    this.defaultTexts.initialDropdownAnchorWithCounterLabel = translation['adapt.advancedFilter.initialDropdownAnchorWithCounterLabel'];\n    this.defaultTexts.clearButtonLabel = translation['adapt.common.clear'];\n    this.defaultTexts.saveButtonLabel = translation['adapt.common.save'];\n    this.defaultTexts.createdByMeLabel = translation['adapt.advancedFilter.createdByMeLabel'];\n    this.defaultTexts.createdByOthersLabel = translation['adapt.advancedFilter.createdByOthersLabel'];\n    this.defaultTexts.editLabel = translation['adapt.common.edit'];\n    this.defaultTexts.backLabel = translation['adapt.common.back'];\n    this.defaultTexts.cancelLabel = translation['adapt.common.cancel'];\n    this.defaultTexts.expressionFilterPlaceholder = translation['adapt.advancedFilter.expressionFilterPlaceholder'];\n    this.defaultTexts.disabledFilterExpressionFieldPlaceholder =\n      translation['adapt.advancedFilter.disabledFilterExpressionFieldPlaceholder'];\n    this.defaultTexts.filtersLabel = translation['adapt.advancedFilter.filtersLabel'];\n    this.defaultTexts.filtersLabelAlone = translation['adapt.advancedFilter.filtersLabelAlone'];\n    this.defaultTexts.savedFiltersLabel = translation['adapt.advancedFilter.savedFiltersLabel'];\n    this.defaultTexts.noFiltersSaved = translation['adapt.advancedFilter.noFiltersSaved'];\n    this.defaultTexts.filterNameInputPlaceholder = translation['adapt.advancedFilter.filterNameInputPlaceholder'];\n    this.defaultTexts.filterNameLabel = translation['adapt.advancedFilter.filterNameLabel'];\n    this.defaultTexts.stringTypeTagFieldPlaceholder = translation['adapt.advancedFilter.stringTypeTagFieldPlaceholder'];\n    this.defaultTexts.counterFromLabel = translation['adapt.advancedFilter.counterFromLabel'];\n    this.defaultTexts.counterToLabel = translation['adapt.advancedFilter.counterToLabel'];\n    this.defaultTexts.removeLabel = translation['adapt.advancedFilter.removeLabel'];\n\n    // configsTexts\n    this.defaultTexts.configsTexts = {\n      fromLabel: translation['adapt.advancedFilter.configsTexts.fromLabel'],\n      toLabel: translation['adapt.advancedFilter.configsTexts.toLabel'],\n      trueLabel: translation['adapt.advancedFilter.configsTexts.trueLabel'],\n      falseLabel: translation['adapt.advancedFilter.configsTexts.falseLabel'],\n      blankLabel: translation['adapt.advancedFilter.configsTexts.blankLabel'],\n      validationErrors: {\n        invalidRangeName: translation['adapt.advancedFilter.validationErrors.invalidRangeName'],\n        invalidRangeText: translation['adapt.advancedFilter.validationErrors.invalidRangeText'],\n        numberTypeTexts: {\n          fromValueMustBeNumber: translation['adapt.advancedFilter.validationErrors.numberTypeTexts.fromValueMustBeNumber'],\n          toValueMustBeNumber: translation['adapt.advancedFilter.validationErrors.numberTypeTexts.toValueMustBeNumber'],\n          invalidBetweenMinAndMax: translation['adapt.advancedFilter.validationErrors.numberTypeTexts.invalidBetweenMinAndMax'],\n          invalidMinValue: translation['adapt.advancedFilter.validationErrors.numberTypeTexts.invalidMinValue'],\n          invalidMaxValue: translation['adapt.advancedFilter.validationErrors.numberTypeTexts.invalidMaxValue']\n        }\n      }\n    };\n\n    this.defaultTexts.filterNameErrorMessage = translation['adapt.advancedFilter.filterNameErrorMessage'];\n    this.defaultTexts.filtersExpressionFieldLabel = translation['adapt.advancedFilter.filtersExpressionFieldLabel'];\n    this.defaultTexts.filtersExpressionMainErrorText = translation['adapt.advancedFilter.filtersExpressionMainErrorText'];\n    this.defaultTexts.filtersExpressionWarningText = translation['adapt.advancedFilter.filtersExpressionWarningText'];\n    this.defaultTexts.duplicateSavedFilterNameError = translation['adapt.advancedFilter.duplicateSavedFilterNameError'];\n    this.defaultTexts.requiredLabel = translation['adapt.common.required'];\n    this.defaultTexts.selectedFiltersExpressionFieldLabel = translation['adapt.advancedFilter.selectedFiltersExpressionFieldLabel'];\n    this.defaultTexts.removeAllLabel = translation['adapt.advancedFilter.removeAllLabel'];\n    this.defaultTexts.applyFiltersLabel = translation['adapt.advancedFilter.applyFiltersLabel'];\n    this.defaultTexts.selectedFiltersCountLabel = translation['adapt.advancedFilter.selectedFiltersCountLabel'];\n    this.defaultTexts.hiddenItemsCounterLabel = translation['adapt.advancedFilter.outsideTags.hiddenItemsCounterLabel'];\n    this.defaultTexts.markDefaultSavedFilterLabel = translation['adapt.advancedFilter.markDefaultSavedFilterLabel'];\n    this.defaultTexts.defaultSavedFilterLabel = translation['adapt.advancedFilter.defaultSavedFilterLabel'];\n  }\n\n  onActiveTabChange(event: ActiveTabChangeEvent): void {\n    this.tabsetActiveIndex = event.index;\n\n    if (event.index === 0) {\n      this.exitCreatingNewFilterPreset();\n    }\n  }\n\n  clear(event: MouseEvent): void {\n    this.filtersCleared.emit(event);\n\n    this.updateFiltersExpressionModel(\n      [],\n      {\n        updateAndEmitSelectedFiltersChange: true,\n        deselectActiveSavedFilter: ActiveSavedFilterSelectionCause.OnFiltersClear,\n        clearMetatagInputValue: true,\n        updateEditingFilterTags: false,\n        applyFiltersByUserAction: this.applyFiltersByUserAction\n      });\n\n    SafeCdr.detectChanges(this._changeDetector);\n  }\n\n  getExpressionTagFieldPlaceholder(): string {\n    return this.disableExpressionEditing ?\n      this.texts.disabledFilterExpressionFieldPlaceholder :\n      this.texts.expressionFilterPlaceholder;\n  }\n\n  // workaround: this method is created due to the getCustomExpressionTagFieldModel method\n  getExpressionTagFieldModel(forceSetNewValue: boolean = false): AdvancedFilterTag[] {\n    const currentFiltersExpressionsTags = this.currentFiltersExpressionsTags;\n\n    if (this.getCustomExpressionTagFieldModel) {\n      const newValue = this.getCustomExpressionTagFieldModel(currentFiltersExpressionsTags);\n\n      if (forceSetNewValue) {\n        return newValue;\n      }\n\n      // Workaround: Don't return new instance to avoid infinite ngModel reassigning\n      if (currentFiltersExpressionsTags === newValue) {\n        return currentFiltersExpressionsTags;\n      }\n\n      const ngModelValue = this.filterExpressionFormControl && this.filterExpressionFormControl.control.value;\n\n      if (isEqual(ngModelValue, newValue)) {\n        return ngModelValue;\n      }\n\n      return newValue;\n    }\n\n    return currentFiltersExpressionsTags;\n  }\n\n  onSaveNewFilterClick(event: MouseEvent): void {\n    let defaultPrevented = false;\n\n    this.saveNewFilterClick.emit({\n      domEvent: event,\n      preventDefault: () => defaultPrevented = true\n    });\n\n    if (!defaultPrevented) {\n      this.isCreatingNewFilterPreset = true;\n      this.tabsetActiveIndex = 1;\n    }\n  }\n\n  getFilterOptionConfig(filterOption: AdvancedFilterOption): AdvancedFilterOptionConfig {\n    const defaultConfig = this.advancedFilterDataTypesConfigs[filterOption.dataType];\n\n    return filterOption.customConfig ? {...defaultConfig, ...filterOption.customConfig} : defaultConfig;\n  }\n\n  getVisibleFilterOptionsData(): AdvancedFilterControlsData[] {\n    return this.getVisibleFilterOptions().map(option => ({option, tag: this.getFilterOptionTag(option)}));\n  }\n\n  getVisibleFilterOptions(): AdvancedFilterOption[] {\n    return this.filterOptions.filter(filterOption => !getValueOrFunc(filterOption.isHidden));\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  onFilterOptionModelChange<TValue = any>(value: TValue, filterOption: AdvancedFilterOption<TValue>): void {\n    const oldFilterValue = this.getFilterOptionModel<TValue>(filterOption);\n\n    if (isEqual(oldFilterValue, value)) {\n      return;\n    }\n    const filterOptionConfig = this.getFilterOptionConfig(filterOption);\n    const filtersExpressionsTags = this.currentFiltersExpressionsTags.slice();\n    const tagIndex = this.currentFiltersExpressionsTags.findIndex(tag => this.getTagFilterOptionId(tag) === filterOption.id);\n    let updateValue = false;\n    let newTag: AdvancedFilterTag;\n\n    if (filterOptionConfig.needRemoveTagValue(value, filterOption)) {\n      if (tagIndex >= 0) {\n        filtersExpressionsTags.splice(tagIndex, 1);\n        updateValue = true;\n      }\n    } else {\n      newTag = this.createTag(filterOption, value);\n\n      if (filtersExpressionsTags[tagIndex]) {\n        newTag = filtersExpressionsTags[tagIndex] = {...filtersExpressionsTags[tagIndex], ...newTag};\n      } else {\n        filtersExpressionsTags.push(newTag);\n      }\n\n      updateValue = true;\n    }\n\n    if (updateValue) {\n      this.updateFiltersExpressionModel(\n        filtersExpressionsTags,\n        {\n          updateAndEmitSelectedFiltersChange: newTag ? isEmpty(newTag.data.validationErrors) : true,\n          deselectActiveSavedFilter: this.currentEditingSavedFilter ? null : ActiveSavedFilterSelectionCause.OnFilterChange,\n          clearMetatagInputValue: false,\n          updateEditingFilterTags: Boolean(this.currentEditingSavedFilter),\n          applyFiltersByUserAction: this.applyFiltersByUserAction\n        },\n        filterOption.id,\n        oldFilterValue,\n        newTag ? newTag.data.value : undefined\n      );\n\n      this.updateExpressionFieldControl();\n    }\n  }\n\n  updateFiltersExpressionModel(\n    filterExpressionTags: AdvancedFilterTag[],\n    options: UpdateFiltersExpressionModelOptions,\n    filterOptionId?: string,\n    // TODO: Refactor this if possible\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    oldFilterValue?: any,\n    // TODO: Refactor this if possible\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    newFilterValue?: any\n  ): void {\n    if (!filterExpressionTags.length) {\n      this.onCancelCreatingNewFilterPreset();\n    }\n\n    if (options.updateEditingFilterTags) {\n      this.currentEditingSavedFilter.filtersExpressionsTags = filterExpressionTags;\n    } else {\n      this.filtersExpressionsTags = filterExpressionTags;\n      this.filterExpressionTagsChanged.emit({filterExpressionTags: filterExpressionTags});\n\n      // Workaround: update manually the tag-field model due to the getExpressionTagFieldModel model\n      if (this.filterExpressionTagField) {\n        this.filterExpressionTagField.writeValue(this.getExpressionTagFieldModel(true));\n      }\n\n      if (options.updateAndEmitSelectedFiltersChange) {\n        const newSelectedFilters = this.getSelectedFiltersFromTags(this.filtersExpressionsTags);\n\n        // There may be a case when user select \"Cancel\" or \"RemoveAll\" on Filter Dropdown.\n        // In such scenario, don't emit 'filterSelectionChange' as the filter value would not be available.\n        // And we already have events for these cases i.e. filtersSelectionCanceled and selectedFiltersChange\n        if (oldFilterValue || newFilterValue) {\n          const filterSelectionChangeEvent: AdvancedFilterSelectionChangeEvent = {\n            filterOptionId: filterOptionId,\n            oldValue: oldFilterValue,\n            newValue: newFilterValue\n          };\n\n          this.filterSelectionChange.emit(filterSelectionChangeEvent);\n        }\n\n        // don't emit if was just removed an invalid tag\n        if ((!isEqual(options.applyFiltersByUserAction ? this._notAppliedSelectedFilters : this.selectedFilters, newSelectedFilters))\n          || options.deselectActiveSavedFilter == null) {\n          if (options.applyFiltersByUserAction) {\n            this._notAppliedSelectedFilters = newSelectedFilters;\n          } else {\n            this._updateSelectedFilters(newSelectedFilters, true);\n          }\n        }\n      }\n    }\n\n\n    if (options.deselectActiveSavedFilter != null) {\n      this.setActiveSavedFilter(null, options.deselectActiveSavedFilter);\n    }\n\n    if (options.clearMetatagInputValue) {\n      this.setFiltersMetatagInputValue('');\n    }\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  getFilterOptionModel<TValue = any>(filterOption: AdvancedFilterOption): TValue {\n    const tag = this.getFilterOptionTag(filterOption);\n\n    return tag ? tag.data.value : null;\n  }\n\n  getFilterOptionTag(filterOption: AdvancedFilterOption): AdvancedFilterTag {\n    return this.currentFiltersExpressionsTags.find(tag => this.getTagFilterOptionId(tag) === filterOption.id);\n  }\n\n  onRemoveCurrentFiltersExpressionFieldTag(event: RemoveTagEvent): void {\n    this.removeTag.emit({\n      tagFieldEvent: event,\n      index: event.index,\n      tag: event.tag as AdvancedFilterTag\n    });\n\n    if (this.disableExpressionEditing) {\n      event.preventDefault();\n\n      this._onRemoveTag(event.tag as AdvancedFilterTag);\n    }\n  }\n\n  onActiveFiltersTagFieldModelChange(newTags: TagType<AdvancedFilterTagModel | AdvancedFilterExpressionTip>[]): void {\n    if (this.disableExpressionEditing) {\n      return;\n    }\n\n    this.onTagFieldModelChange(newTags);\n  }\n\n  onTagFieldModelChange(newTags: TagType<AdvancedFilterTagModel | AdvancedFilterExpressionTip>[]): void {\n    const uniqueTags: AdvancedFilterTag[] = [];\n    const allExpressionFieldTips = this.getAllExpressionFieldTips();\n    let uncompletedExpressionTagText: string; // should have only 1 assignment\n    let needParseSearchTerm = true;\n    let isUncompletedExpression = false;\n\n    newTags.forEach(tagOrString => {\n      let tag: AdvancedFilterTag = null;\n\n      if (typeof tagOrString === 'string') {\n        const tagStringNormalized = tagOrString.trim().toUpperCase();\n        const tagTip = allExpressionFieldTips.find(tip => tip.text.toUpperCase() === tagStringNormalized);\n\n        if (tagTip) {\n          isUncompletedExpression = (tagTip.data as AdvancedFilterExpressionTip).isIncompletedExpression;\n\n          if (isUncompletedExpression) {\n            needParseSearchTerm = false;\n          } else {\n            tag = this.createTagFromExpressionTip(tagTip);\n          }\n        }\n\n        if (!tag) {\n          uncompletedExpressionTagText = tagOrString;\n        }\n      } else {\n        if (!this.isCustomTag(tagOrString)) {\n          isUncompletedExpression = (tagOrString.data as AdvancedFilterExpressionTip).isIncompletedExpression;\n          tag = isUncompletedExpression ? this.createTagFromExpressionTip(tagOrString) : tagOrString;\n        } else if (this.currentEditingSavedFilter) {\n          tag = tagOrString;\n        }\n      }\n\n      if (tag) {\n        if (isUncompletedExpression) {\n          uncompletedExpressionTagText = tag.text;\n          needParseSearchTerm = false;\n        } else {\n          this.addNewTagOrUpdateExisting(uniqueTags, tag);\n        }\n      }\n    });\n\n    if (uncompletedExpressionTagText) {\n      let tagCreatedFromParsedSearchTerm: AdvancedFilterTag;\n\n      if (needParseSearchTerm) {\n        this.getVisibleFilterOptions().find(filterOption => {\n          const filterOptionConfig = this.getFilterOptionConfig(filterOption);\n          const parsedSearchTermValue = filterOptionConfig.parseTagFieldExpression(filterOption, uncompletedExpressionTagText);\n\n          if (parsedSearchTermValue) {\n            const validationErrors = filterOptionConfig.validateValue(parsedSearchTermValue.value, filterOption);\n            const isFilterDisabled = isFunction(this.disabledInputResolver)\n              ? this.disabledInputResolver(filterOption, parsedSearchTermValue.value)\n              : false;\n\n            if (isEmpty(validationErrors) && !isFilterDisabled && !filterOptionConfig.needRemoveTagValue(parsedSearchTermValue.value, filterOption)) {\n              tagCreatedFromParsedSearchTerm = this.createTag(filterOption, parsedSearchTermValue.value, validationErrors);\n            }\n\n            return true;\n          }\n\n          return false;\n        });\n      }\n\n      if (tagCreatedFromParsedSearchTerm) {\n        this.addNewTagOrUpdateExisting(uniqueTags, tagCreatedFromParsedSearchTerm);\n        uncompletedExpressionTagText = '';\n      } else {\n        const index: number = allExpressionFieldTips.findIndex(field => uncompletedExpressionTagText.includes(field.text));\n\n        if (index === -1) {\n          uncompletedExpressionTagText = '';\n        }\n      }\n\n\n      // Update metatag input value\n      this._ngZone.onStable\n        .pipe(takeUntil(this._destroyed$), take(1))\n        .subscribe(() => {\n          this.setFiltersMetatagInputValue(uncompletedExpressionTagText);\n\n          this._ngZone.run(() => {\n            SafeCdr.detectChanges(this._changeDetector);\n          });\n        });\n    }\n\n    this.updateFiltersExpressionModel(\n      uniqueTags,\n      {\n        updateAndEmitSelectedFiltersChange: !uncompletedExpressionTagText,\n        deselectActiveSavedFilter: this.currentEditingSavedFilter ? null : ActiveSavedFilterSelectionCause.OnFilterChange,\n        clearMetatagInputValue: false,\n        updateEditingFilterTags: Boolean(this.currentEditingSavedFilter),\n        applyFiltersByUserAction: this.applyFiltersByUserAction\n      }\n    );\n  }\n\n  onInitExpressionFieldTagEditing(event: InitTagEditingEvent): void {\n    if (this.isCustomTag(event.tag as AdvancedFilterTag)) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Checks whether the 'data' or 'filterOption' properties are empty.\n   * Custom tags are used in specific cases when needs to pass additional tags\n   * in the expression area\n   */\n  isCustomTag(tag: AdvancedFilterTag): boolean {\n    return tag.data ? !tag.data.filterOption : true;\n  }\n\n  getTagFilterOptionId(tag: AdvancedFilterTag): string {\n    return this.isCustomTag(tag) ? null : tag.data.filterOption.id;\n  }\n\n  createTagFromExpressionTip(tagTip: TagModel<AdvancedFilterExpressionTip>): AdvancedFilterTag {\n    return {\n      text: tagTip.text,\n      data: {\n        filterOption: tagTip.data.filterOption,\n        value: tagTip.data.value,\n        validationErrors: []\n      }\n    };\n  }\n\n  setFiltersMetatagInputValue(inputValue: string): void {\n    // TODO: maybe add the Input decorator for the inputValue property in the tag field\n    const tagField = this.filterExpressionTagField || this.editingFilterExpressionTagField;\n\n    // Pushing changes when the zone is stable, so they will apply after AdaptMetatag`s clearField method\n    this._ngZone.onStable.pipe(takeUntil(this._destroyed$), take(1)).subscribe(() => {\n      tagField.inputValue = inputValue;\n    });\n  }\n\n  expressionSearch(text$: Observable<string>): Observable<TagModel<AdvancedFilterExpressionTip>[]> {\n    return text$.pipe(\n      debounceTime(200),\n      distinctUntilChanged(),\n      map(searchTerm => {\n        const escapedStringForRegExp = `^${escapeRegExp(searchTerm)}`;\n\n        return this.getAllExpressionFieldTips(searchTerm).filter(v => {\n          return new RegExp(escapedStringForRegExp, 'gi').test(v.text);\n        });\n      })\n    );\n  }\n\n  getAllExpressionFieldTips(searchTerm?: string): TagModel<AdvancedFilterExpressionTip>[] {\n    return this.getVisibleFilterOptions()\n      .reduce((allTips, filterOption) => {\n        const filterOptionConfig = this.getFilterOptionConfig(filterOption);\n        const filterOptionTips = filterOptionConfig.getExpressionFieldTips(filterOption, searchTerm);\n\n        const notDisabledFilterOptionTips = isFunction(this.disabledInputResolver)\n          ? filterOptionTips.filter(tip => !this.disabledInputResolver(filterOption, tip?.data?.value))\n          : filterOptionTips;\n\n        allTips.push(...notDisabledFilterOptionTips);\n\n        return allTips;\n      }, [] as TagModel<AdvancedFilterExpressionTip>[]);\n  }\n\n  onSelectActiveSavedFilter(savedFilter: SavedAdvancedFilter): void {\n    this.setActiveSavedFilter(savedFilter, ActiveSavedFilterSelectionCause.SelectedByUser);\n  }\n\n  setActiveSavedFilter(savedFilter: SavedAdvancedFilter, selectionCause: ActiveSavedFilterSelectionCause): void {\n    const previousActiveSavedFilter = this._activeSavedFilter;\n\n    if (!previousActiveSavedFilter && !savedFilter) {\n      return;\n    }\n\n    let preventedFiltersUpdating = false;\n    let preventedActiveFilterUpdating = false;\n\n    this.beforeActiveSavedFilterChange.emit({\n      previousActiveSavedFilter,\n      savedFilterToSelect: savedFilter,\n      preventFiltersUpdating: () => preventedFiltersUpdating = true,\n      preventActiveFilterUpdating: () => preventedActiveFilterUpdating = true,\n      selectionCause\n    });\n\n    if (!preventedFiltersUpdating && savedFilter) {\n      const filtersExpressionsTags = this.convertSelectedFiltersToTags(savedFilter.filters);\n\n      this.updateFiltersExpressionModel(\n        filtersExpressionsTags,\n        {\n          updateAndEmitSelectedFiltersChange: true,\n          deselectActiveSavedFilter: null,\n          clearMetatagInputValue: !this.currentEditingSavedFilter,\n          updateEditingFilterTags: false,\n          applyFiltersByUserAction: this.applyFiltersByUserAction\n        }\n      );\n    }\n\n    if (!preventedActiveFilterUpdating) {\n      this._activeSavedFilter = savedFilter;\n      this.activeSavedFilterChange.emit(savedFilter);\n    }\n  }\n\n  convertSelectedFiltersToTags(filters: SelectedAdvancedFilter[]): AdvancedFilterTag[] {\n    return filters.map((filter): AdvancedFilterTag => {\n      const filterOption = this.filterOptions.find(option => option.id === filter.filterOptionId);\n\n      return this.createTag(filterOption, filter.value);\n    });\n  }\n\n\n  getSavedFiltersByCurrentUser(): SavedAdvancedFilter[] {\n    return this.savedFilters.filter(filter => !filter.isCreatedByOtherUsers);\n  }\n\n  getSavedFiltersByOtherUsers(): SavedAdvancedFilter[] {\n    return this.savedFilters.filter(filter => filter.isCreatedByOtherUsers);\n  }\n\n  markDefaultSavedFilter(savedFilter: SavedAdvancedFilter, mouseEvent: MouseEvent): void {\n    let defaultPrevented = false;\n\n    this.markDefaultSavedFilterClick.emit({\n      // TODO check if can be refactored\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      preventDefault: () => defaultPrevented = true,\n      domEvent: mouseEvent,\n      defaultSavedFilterId: savedFilter.id\n    });\n  }\n\n  onEditSavedFilterClick(savedFilter: SavedAdvancedFilter, savedFilterListItem: HTMLLIElement, mouseEvent: MouseEvent): void {\n    const initSavedFilterEditing = (getCustomExpressionTagFieldEditModel?: (tags: AdvancedFilterTag[]) => AdvancedFilterTag[]): void => {\n      const advancedFilterTags = this.convertSelectedFiltersToTags(savedFilter.filters);\n\n      this.currentEditingSavedFilter = {\n        originalSavedFilter: savedFilter,\n        filterName: savedFilter.name,\n        filtersExpressionsTags: getCustomExpressionTagFieldEditModel ?\n          getCustomExpressionTagFieldEditModel(advancedFilterTags) :\n          advancedFilterTags\n      };\n\n      // Use only in non overlay mode\n      if (this.adaptDropdownMenu) {\n        const menuRect = this.adaptDropdownMenu.nativeElement.getBoundingClientRect();\n        const liOptionRect = savedFilterListItem.getBoundingClientRect();\n\n        this.editFilterContainerAnimationOptions = {\n          params: {\n            titleTranslateXPixels: -this.translateFilterEditingTitleXPixels,\n            titleTranslateYPixels: liOptionRect.top - menuRect.top,\n            lastEditingSavedFilter: this.currentEditingSavedFilter\n          },\n          value: ':enter'\n        };\n      }\n    };\n\n    let defaultPrevented = false;\n\n    this.editSavedFilterClick.emit({\n      preventDefault: () => defaultPrevented = true,\n      domEvent: mouseEvent,\n      savedFilter,\n      savedFilterListItem,\n      initSavedFilterEditing\n    });\n\n    if (!defaultPrevented) {\n      initSavedFilterEditing();\n    }\n  }\n\n  getSavedFilterListItemAnimationState(savedFilter: SavedAdvancedFilter, savedFilterListItem: HTMLLIElement): { value: '*'; params: EditFilterListItemAnimationParams } {\n    let savedFilterListItemTranslateYPixels: number;\n\n    if (this.editFilterContainerAnimationOptions &&\n      this.editFilterContainerAnimationOptions.params.lastEditingSavedFilter.originalSavedFilter.id ===\n      savedFilter.id) {\n      savedFilterListItemTranslateYPixels = -this.editFilterContainerAnimationOptions.params.titleTranslateYPixels;\n    } else {\n      const menuRect = this.adaptDropdownMenu.nativeElement.getBoundingClientRect();\n      const liOptionRect = savedFilterListItem.getBoundingClientRect();\n\n      savedFilterListItemTranslateYPixels = menuRect.top - liOptionRect.top;\n    }\n\n    return {\n      value: '*',\n      params: {\n        scope: this,\n        savedFilter,\n        savedFilterListItemTranslateXPixels: this.translateFilterEditingTitleXPixels,\n        savedFilterListItemTranslateYPixels\n      }\n    };\n  }\n\n  onEditSavedFilterListItemAnimationDone(event: AnimationEvent, savedFilter: SavedAdvancedFilter): void {\n    // workaround: reset editFilterContainerAnimationOptions on saved filter editing animation closing done\n    // if make animation via AnimationBuilder this will be unnecessary\n    if (event.phaseName === 'done' && event.toState === '*' && event.totalTime &&\n      this.editFilterContainerAnimationOptions &&\n      savedFilter.id === this.editFilterContainerAnimationOptions.params.lastEditingSavedFilter.originalSavedFilter.id) {\n      this.editFilterContainerAnimationOptions = null;\n    }\n  }\n\n  hasDuplicateNameInCreating(): boolean {\n    return this.hasDuplicateNameInSavedFilter(this.getSavedFiltersByCurrentUser(), this.getCreatingNewFilterPresetNameTrimmed());\n  }\n\n  hasDuplicateNameInEditing(): boolean {\n    return this.hasDuplicateNameInSavedFilter(\n      this.getSavedFiltersByCurrentUserExceptEditing(),\n      this.getEditingFilterPresetNameTrimmed());\n  }\n\n  getSavedFiltersByCurrentUserExceptEditing(): SavedAdvancedFilter[] {\n    const editingSavedFilterId = this.currentEditingSavedFilter.originalSavedFilter.id;\n\n    return this.getSavedFiltersByCurrentUser().filter(savedFilter => savedFilter.id !== editingSavedFilterId);\n  }\n\n  hasDuplicateNameInSavedFilter(savedFiltersByCurrentUser: SavedAdvancedFilter[], filterPresetName: string): boolean {\n    return filterPresetName ?\n      savedFiltersByCurrentUser.some(savedFilter => savedFilter.name === filterPresetName) :\n      false;\n  }\n\n  generateUniqueSavedFilterName(filterPresetName: string, savedFiltersByCurrentUser: SavedAdvancedFilter[]): string {\n    for (let suffixIndex = 2; ; suffixIndex++) {\n      const uniqueFilterName = `${filterPresetName}-${suffixIndex}`;\n\n      if (!this.hasDuplicateNameInSavedFilter(savedFiltersByCurrentUser, uniqueFilterName)) {\n        return uniqueFilterName;\n      }\n    }\n  }\n\n  onCreateNewFilterPreset(): void {\n    const creatingNewFilterPresetNameOriginal = this.getCreatingNewFilterPresetNameTrimmed();\n    const filters = this.getSelectedFiltersFromCurrentTags();\n\n    if (this.filtersExpressionsTags.length && creatingNewFilterPresetNameOriginal && filters.length) {\n      let creatingNewFilterPresetName = creatingNewFilterPresetNameOriginal;\n\n      if (this.hasDuplicateNameInCreating()) {\n        creatingNewFilterPresetName = this.generateUniqueSavedFilterName(\n          creatingNewFilterPresetNameOriginal,\n          this.getSavedFiltersByCurrentUser()\n        );\n      }\n\n      this.createNewFilter.emit({\n        name: creatingNewFilterPresetName,\n        originalName: creatingNewFilterPresetNameOriginal,\n        filters\n      });\n\n      this.exitCreatingNewFilterPreset();\n    }\n  }\n\n  getCreatingNewFilterPresetNameTrimmed(): string {\n    return this.creatingNewFilterPresetName.trim();\n  }\n\n  getEditingFilterPresetNameTrimmed(): string {\n    return this.currentEditingSavedFilter.filterName.trim();\n  }\n\n  onNewFilterNameEditorKeyDown(event: KeyboardEvent): void {\n    if (hasKeyboardKeyCode(event, 'Enter', ENTER)) {\n      this.onCreateNewFilterPreset();\n\n      // TODO: escape will also close the dropdown\n    } else if (hasKeyboardKeyCode(event, 'Escape', ESCAPE)) {\n      this.onCancelCreatingNewFilterPreset();\n    }\n  }\n\n  onNewFilterNameEditorFocus(): void {\n    this.isNewFilterNameEditorFocus = true;\n  }\n\n  onNewFilterNameEditorBlur(): void {\n    this.isNewFilterNameEditorFocus = false;\n  }\n\n  getFiltersExpressionFieldLabel(): string {\n    return this.applyFiltersByUserAction ? this.texts.selectedFiltersExpressionFieldLabel : this.texts.filtersExpressionFieldLabel;\n  }\n\n  cancelFiltersSelection(): void {\n    this.updateFiltersExpressionModel(\n      this.convertSelectedFiltersToTags(this.selectedFilters),\n      {\n        updateAndEmitSelectedFiltersChange: true,\n        deselectActiveSavedFilter: this.selectedFilters && this.selectedFilters.length\n          ? null\n          : ActiveSavedFilterSelectionCause.OnFiltersClear,\n        clearMetatagInputValue: true,\n        updateEditingFilterTags: false,\n        applyFiltersByUserAction: this.applyFiltersByUserAction\n      });\n\n    this.filtersSelectionCanceled.emit();\n  }\n\n  removeAllSelectedFilters(event: MouseEvent): void {\n    this.clear(event);\n    this._updateSelectedFilters([], true);\n  }\n\n  applySelectedFilters(): void {\n    this._updateSelectedFilters([...this._notAppliedSelectedFilters], true);\n    this.filtersDropdown.close();\n  }\n\n  isClearSelectedFiltersButtonDisabled(): boolean {\n    return this.canShowCreatingNewFilterPreset || this.isLoading\n      || (isEmpty(this.selectedFilters) && isEmpty(this._notAppliedSelectedFilters));\n  }\n\n  isApplySelectedFiltersButtonDisabled(): boolean {\n    return this.canShowCreatingNewFilterPreset || this.isLoading || isEqual(this.selectedFilters, this._notAppliedSelectedFilters);\n  }\n\n  getFilterExpressionFieldClass(mainClass: string, filterExpressionTagField: AdaptMetatagComponent): string {\n    const isEmptyField = !filterExpressionTagField || filterExpressionTagField.isEmpty;\n\n    return `${mainClass}${isEmptyField ? ' advanced-filter__tag-field-empty' : ''}`;\n  }\n\n  getSelectedFiltersFromCurrentTags(): SelectedAdvancedFilter[] {\n    return this.getSelectedFiltersFromTags(this.currentFiltersExpressionsTags);\n  }\n\n  getSelectedFiltersFromTags(tags: AdvancedFilterTag[]): SelectedAdvancedFilter[] {\n    return tags.filter(tag => !this.isCustomTag(tag) && !this.tagFieldWarningCheckResolver(tag))\n      .map(tag => this.convertTagToSelectedFilter(tag));\n  }\n\n  getCustomTagsFromCurrentTags(): AdvancedFilterTag[] {\n    return this.currentFiltersExpressionsTags.filter(this.isCustomTag);\n  }\n\n  convertTagToSelectedFilter(tag: AdvancedFilterTag): SelectedAdvancedFilter {\n    return {\n      filterOptionId: this.getTagFilterOptionId(tag),\n      value: tag.data.value\n    };\n  }\n\n  hasValidCurrentFilterTags(): boolean {\n    return this.currentFiltersExpressionsTags.some(\n      tag => !this.isCustomTag(tag) && !this.tagFieldWarningCheckResolver(tag)\n    );\n  }\n\n  hasAllInvalidCurrentFilterTags(): boolean {\n    return this.currentFiltersExpressionsTags.every(\n      tag => !this.isCustomTag(tag) && this.tagFieldWarningCheckResolver(tag)\n    );\n  }\n\n  tagFieldWarningCheckResolver(tag: AdvancedFilterTag): boolean {\n    if (this.isCustomTag(tag)) {\n      return false;\n    }\n\n    return !isEmpty(tag.data.validationErrors);\n  }\n\n  onCancelCreatingNewFilterPreset(): void {\n    this.exitCreatingNewFilterPreset();\n  }\n\n  exitCreatingNewFilterPreset(): void {\n    this.isCreatingNewFilterPreset = false;\n    this.creatingNewFilterPresetName = '';\n  }\n\n  onDeleteSavedFilterClick(savedFilter: SavedAdvancedFilter): void {\n    // if (this.activeSavedFilter && this.activeSavedFilter.id === savedFilter.id) {\n    //   this.setActiveSavedFilter(null, ActiveSavedFilterSelectionCause.OnDeleteSavedFilter);\n    // }\n\n    this.deleteSavedFilter.emit(savedFilter);\n  }\n\n  cancelSavedFilterEditing(): void {\n    this.editFilterContainerAnimationOptions = {\n      ...this.editFilterContainerAnimationOptions,\n      value: ':leave'\n    };\n\n    this.currentEditingSavedFilter = null;\n    this.editingSavedFilterCanceled.emit();\n  }\n\n  saveSavedFilterEditing(): void {\n    const filters = this.getSelectedFiltersFromCurrentTags();\n    const originalNewFilterName = this.getEditingFilterPresetNameTrimmed();\n    const customTags = this.getCustomTagsFromCurrentTags();\n\n    if (!originalNewFilterName || !filters.length) {\n      return;\n    }\n\n    let uniqueFilterName = originalNewFilterName;\n\n    if (this.hasDuplicateNameInEditing()) {\n      uniqueFilterName = this.generateUniqueSavedFilterName(\n        originalNewFilterName,\n        this.getSavedFiltersByCurrentUserExceptEditing()\n      );\n    }\n\n    const newSavedFilter: SavedAdvancedFilter = {\n      id: this.currentEditingSavedFilter.originalSavedFilter.id,\n      name: uniqueFilterName,\n      filters\n    };\n\n    const updateSaveFilterEvent: UpdateSavedFilterEvent = {\n      oldSavedFilter: this.currentEditingSavedFilter.originalSavedFilter,\n      newSavedFilter,\n      originalNewFilterName\n    };\n\n    if (customTags && customTags.length) {\n      updateSaveFilterEvent.customFilterExpressionsTags = customTags;\n    }\n\n    this.updateSavedFilter.emit(updateSaveFilterEvent);\n\n    Object.assign(this.currentEditingSavedFilter.originalSavedFilter, newSavedFilter);\n    this.onSelectActiveSavedFilter(this.currentEditingSavedFilter.originalSavedFilter);\n    this.currentEditingSavedFilter = null;\n  }\n\n  calculateEditingFilterOptionsScrollableElStyle(): void {\n    const scrollableEl = this.editingFilterOptionsScrollableEl && this.editingFilterOptionsScrollableEl.nativeElement;\n\n    if (scrollableEl) {\n      const bottomDiff = this.editingFilterFooterEl && this.editingFilterFooterEl.nativeElement\n        ? this.editingFilterFooterEl.nativeElement.clientHeight\n        : 0;\n\n      this.editingFilterScrollableElStyle = this.getScrollableElStyle(scrollableEl, bottomDiff);\n    }\n  }\n\n  getScrollableElStyle(scrollableEl: HTMLElement, bottomDiff: number = 0): StylesObject {\n    if (this.isMobile) {\n      return;\n    }\n\n    return {\n      maxHeight: this._getScrollableElMaxHeight(scrollableEl, bottomDiff)\n    };\n  }\n\n  setIsLoadingState(value: boolean): void {\n    this._isLoading = value;\n    const busyConfigCopy = {...this.busyConfig};\n\n    if (value) {\n      if (this.busyConfig.busy) {\n        (this.busyConfig.busy as Subscription).unsubscribe();\n      }\n      busyConfigCopy.busy = new Observable().pipe(takeUntil(this._destroyed$)).subscribe();\n      this.busyConfig = busyConfigCopy;\n    } else {\n      if (this.busyConfig.busy) {\n        (this.busyConfig.busy as Subscription).unsubscribe();\n        busyConfigCopy.busy = null;\n        this.busyConfig = busyConfigCopy;\n      }\n    }\n  }\n\n  trackByForSavedFilterFn(index: number, savedFilter: SavedAdvancedFilter): string | number {\n    return savedFilter.id || index;\n  }\n\n  trackByForFilterOptionDataFn(index: number, optionData: AdvancedFilterControlsData): string | number {\n    return optionData.option.id || index;\n  }\n\n  onAnchorPositionChange(): void {\n    this._updateStyles();\n  }\n\n  onPopupAnimationDone(event: AnimationEvent): void {\n    if (!this.isMobile && event && event.toState !== 'void') {\n      this._updateStyles();\n    }\n  }\n\n  handleDropdownOpenChange(opened: boolean): void {\n    if (opened) {\n      // due to tag-field that is appended to body should use custom logic for dd closure\n      this._removeTapEventListener =\n        this._eventManager.addEventListener(document.documentElement, 'tap', this._closeFromClick.bind(this));\n\n      this.dropdownMenuContentVisible = true;\n      this._updateStyles();\n\n    } else {\n      if (this._removeTapEventListener) {\n        this._removeTapEventListener();\n      }\n\n      if (this.currentEditingSavedFilter) {\n        this.cancelSavedFilterEditing();\n      }\n\n      if (this.applyFiltersByUserAction) {\n        this.cancelFiltersSelection();\n      }\n\n      // Hide dropdown content to reset UI state of the inner components\n      this.filtersDropdown.popupAnimationDone\n        .pipe(\n          takeUntil(this._destroyed$),\n          take(1)\n        )\n        .subscribe(() => {\n          this.dropdownMenuContentVisible = false;\n        });\n    }\n\n    // For \"applyFiltersByUserAction\" check if selected filters can be restored as an active saved filter preset\n    // This is needed to show correct \"Apply\" button disabled state\n    if (this.applyFiltersByUserAction) {\n      const activeSavedFilter = this.savedFilters.find(filter => isEqual(filter.filters, this.selectedFilters));\n\n      this._activeSavedFilter = activeSavedFilter ? activeSavedFilter : null;\n    }\n\n    this.dropdownOpenStateChange.emit(opened);\n  }\n\n  isFilterActive(savedFilter: SavedAdvancedFilter): boolean {\n    return this._activeSavedFilter ? this._activeSavedFilter.id === savedFilter.id : false;\n  }\n\n  onRemoveFromOutsideTag(event: FilterTagsRemoveEvent): void {\n    const tag = event.tag as AdvancedFilterTag;\n\n    this.removeTag.emit({\n      tagFieldEvent: {\n        tag,\n        index: event.index,\n        domEvent: event.domEvent\n      },\n      index: event.index,\n      tag: tag\n    });\n\n    // in case we are deleting tag from outside tags we should ignore `applyFiltersByUserAction` input and allow deletion\n    this._onRemoveTag(tag, false);\n    this._notAppliedSelectedFilters = this.selectedFilters;\n  }\n\n  onVisibilityChanged(event: FilterTagsVisibilityChangedEvent): void {\n    this.dropdownAnchorWithCounterLabel = event.hiddenItemsCount === 0 ? '' : formatString(this.texts.initialDropdownAnchorWithCounterLabel, event.hiddenItemsCount);\n    this._checkIfFilterTagsLabelVisible();\n    SafeCdr.detectChanges(this._changeDetector);\n  }\n\n  private _onRemoveTag(tag: AdvancedFilterTag, applyFiltersByUserAction: boolean = this.applyFiltersByUserAction): void {\n    const tags = this.filtersExpressionsTags.filter(filterTag => !isEqual(filterTag, tag));\n\n    if (tags.length !== this.filtersExpressionsTags.length) {\n      this.updateFiltersExpressionModel(\n        tags,\n        {\n          updateAndEmitSelectedFiltersChange: true,\n          deselectActiveSavedFilter: ActiveSavedFilterSelectionCause.OnFilterChange,\n          clearMetatagInputValue: false,\n          updateEditingFilterTags: false,\n          applyFiltersByUserAction\n        }\n      );\n    }\n  }\n\n  private _dropdownCancelCB(): void {\n    if (this.currentEditingSavedFilter) {\n      this.cancelSavedFilterEditing();\n    } else if (this.applyFiltersByUserAction) {\n      this.cancelFiltersSelection();\n      this.filtersDropdown.close();\n    } else {\n      this.filtersDropdown.close();\n    }\n  }\n\n  private _dropdownDoneCB(): void {\n    if (this.currentEditingSavedFilter) {\n      this.saveSavedFilterEditing();\n    } else if (this.applyFiltersByUserAction) {\n      this.applySelectedFilters();\n      this.filtersDropdown.close();\n    } else {\n      this.filtersDropdown.close();\n    }\n  }\n\n  private addNewTagOrUpdateExisting(tags: AdvancedFilterTag[], tagToAdd: AdvancedFilterTag): void {\n    const filterOptionId = this.getTagFilterOptionId(tagToAdd);\n    const existTag = tags.find(uniqueTag => this.getTagFilterOptionId(uniqueTag) === filterOptionId);\n\n    if (existTag) {\n      const filterOptionConfig = this.getFilterOptionConfig(existTag.data.filterOption);\n      const newValue = filterOptionConfig.updateFilterValue(tagToAdd.data.value, existTag.data.value, tagToAdd.data.filterOption);\n\n      Object.assign(existTag, this.createTag(tagToAdd.data.filterOption, newValue));\n    } else {\n      tags.push(tagToAdd);\n    }\n\n    return null;\n  }\n\n  private updateExpressionFieldControl(): void {\n    const formControl = this.filterExpressionFormControl || this.editingFilterExpressionFormControl;\n\n    if (formControl) {\n      formControl.control.markAsTouched();\n      formControl.control.markAsDirty();\n      formControl.control.updateValueAndValidity({emitEvent: false, onlySelf: true});\n    }\n  }\n\n  private _updateStyles(): void {\n    this.menuElStyle = this._getFilterContainerStyle();\n    this.calculateEditingFilterOptionsScrollableElStyle();\n  }\n\n  private _getFilterContainerStyle(): StylesObject {\n    const buttonRect = this.adaptDropdownButton.nativeElement.getBoundingClientRect();\n    const viewPortHeight = window.innerHeight;\n    const halfOfScreenHeight = viewPortHeight / 2;\n    const buttonCenterPosition = buttonRect.top + (buttonRect.height / 2);\n    const shouldShowMenuOnBottom = halfOfScreenHeight >= buttonCenterPosition;\n    const menuGap = 10;\n    const shouldUseMaxHeight = shouldShowMenuOnBottom\n      ? halfOfScreenHeight >= buttonCenterPosition\n      : halfOfScreenHeight <= buttonCenterPosition;\n\n    let maxHeight: number;\n\n    if (shouldShowMenuOnBottom) {\n      maxHeight = buttonRect.bottom > 0\n        ? viewPortHeight - buttonRect.bottom\n        : viewPortHeight;\n    } else {\n      maxHeight = buttonRect.top < viewPortHeight\n        ? buttonRect.top\n        : viewPortHeight;\n    }\n\n    const h = (shouldUseMaxHeight ? maxHeight : halfOfScreenHeight) - menuGap;\n\n    this.isEntirelyScrollable = h <= this._entirelyScrollHeight;\n\n    return {\n      maxHeight: `${h}px`\n    };\n  }\n\n  private _getScrollableElMaxHeight(scrollableEl: HTMLElement, bottomDiff: number = 0): string {\n    const menuEl = this.adaptDropdownMenu.nativeElement;\n    const menuRect = menuEl.getBoundingClientRect();\n    const scrollableElRect = scrollableEl.getBoundingClientRect();\n    const headerHeight = scrollableElRect.top - menuRect.top;\n    const menuComputedStyle = getComputedStyle(menuEl);\n    const footerElRect = this.applyFiltersByUserActionFooterEl ? this.applyFiltersByUserActionFooterEl.nativeElement.getBoundingClientRect() : null;\n    const footerElRectHeight = footerElRect ? footerElRect.height : 0;\n\n    return `calc(${menuComputedStyle.maxHeight} - ${headerHeight}px - ${footerElRectHeight}px - ${bottomDiff}px)`;\n  }\n\n  private getBusyConfig(): BusyConfig {\n    return {\n      busy: null,\n      backdrop: true,\n      sticky: true,\n      message: '',\n      loaderType: 'section',\n      overlayClass: 'advanced-filter__busy-backdrop'\n    };\n  }\n\n  private _closeFromClick(event: MouseEvent): void {\n    if (!this.filtersDropdown\n      || !this.filtersDropdown.isOpen()\n      || event.target === this.adaptDropdownButton.nativeElement && this.filtersDropdown.isOpen()) {\n      return;\n    }\n\n    if (!this.filtersDropdown.isEventFromMenu(event) &&\n      !(event.target as HTMLElement).closest('.dropdown-menu, adapt-dialog') &&\n      (!this.canCloseDropdownResolver || this.canCloseDropdownResolver(event))) {\n\n      this.filtersDropdown.close();\n    }\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private createTag(filterOption: AdvancedFilterOption, value: any, validationErrors?: ValidationError[]): AdvancedFilterTag {\n    const filterOptionConfig = this.getFilterOptionConfig(filterOption);\n    const formattedValueForTag = filterOptionConfig.formatValueForTag(value, filterOption);\n\n    return {\n      data: {\n        filterOption,\n        value,\n        validationErrors: validationErrors || filterOptionConfig.validateValue(value, filterOption)\n      },\n      text: filterOptionConfig.getTagText(value, filterOption, formattedValueForTag)\n    };\n  }\n\n  private _updateSelectedFilters(selectedFilters: SelectedAdvancedFilter[], emitEvent: boolean): void {\n    this._selectedFilters = selectedFilters;\n    this.selectedFiltersTags = this.convertSelectedFiltersToTags(selectedFilters);\n\n    if (emitEvent) {\n      this.selectedFiltersChange.emit(this.selectedFilters);\n    }\n  }\n\n  private _checkIfFilterTagsLabelVisible(): void {\n    if (this.showTags && this.filtersDropdownWrapper?.nativeElement && this.adaptDropdownButton?.nativeElement && this.filterTags?.nativeElement) {\n      this.isFilterOutsideTagsHidden = this.filtersDropdownWrapper.nativeElement.clientWidth < this.adaptDropdownButton.nativeElement.clientWidth + this.filterTags.nativeElement.clientWidth;\n    } else {\n      this.isFilterOutsideTagsHidden = false;\n    }\n  }\n}\n","<div class=\"d-flex overflow-hidden\" #filtersDropdownWrapper>\n  <div *ngIf=\"!overlayService.enableCDKOverlayControl\"\n       #filtersDropdown=\"adaptDropdown\"\n       class=\"advanced-filter__dropdown-wrap\"\n       adaptDropdown\n       [adaptRadarDisableEventSending]=\"true\"\n       [appendToBody]=\"appendDropdownToBody\"\n       [holdFocusInMenu]=\"appendDropdownToBody\"\n       [restoreFocusAfterClose]=\"true\"\n       [recalculatePositionOnElementResize]=\"adaptDropdownMenu\"\n       (anchorPositionChange)=\"onAnchorPositionChange()\"\n       [autoClose]=\"false\"\n       [customClass]=\"dropdownCustomClass\"\n       [closeOnEscape]=\"true\"\n       [placement]=\"dropdownPlacement\"\n       [mobileView]=\"dropdownMobileView\"\n       (onOpen)=\"handleDropdownOpenChange(true)\"\n       (onClose)=\"handleDropdownOpenChange(false)\"\n       (popupAnimationDone)=\"onPopupAnimationDone($event)\">\n    <button type=\"button\"\n            class=\"btn btn-link px-0 d-icon-left-filter d-icon-right-triangle_down\"\n            adaptDropdownAnchor\n            [disabled]=\"anchorDisabled\"\n            #adaptDropdownButton (click)=\"filtersDropdown.toggle($event)\"\n            [attr.data-testid]=\"testID + '_menu'\">\n      <ng-container\n        *ngIf=\"showAnchorButtonLabel\">{{ dropdownAnchorLabel }}</ng-container>\n    </button>\n    <div #adaptDropdownMenu\n         adaptDropdownMenu\n         [ngStyle]=\"menuElStyle\"\n         [ngClass]=\"{\n                'advanced-filter__popover-container_non-mobile': !isMobile && !isTablet,\n                'advanced-filter__popover-container_mobile': isMobile || isTablet,\n                'border-top': isTablet,\n                'advanced-filter__popover-container_scrollable': isEntirelyScrollable\n                }\"\n         class=\"dropdown-menu advanced-filter__popover-container\">\n\n      <div class=\"advanced-filter__container\" *ngIf=\"dropdownMenuContentVisible\">\n        <div *ngIf=\"!currentEditingSavedFilter\"\n             [@savedFiltersContainerAnimation] class=\"advanced-filter__animation-container\">\n\n          <div class=\"advanced-filter__popover-header\"\n               [ngClass]=\"{'mt-3': isTablet}\">\n            <div class=\"advanced-filter__actions-buttons\"\n                 *ngIf=\"filtersDropdown.isOpen() && !canShowCreatingNewFilterPreset\">\n              <adapt-custom-actions [alignedTo]=\"customActionsAlignedTo\"\n                                    [adaptRadarDisableEventSending]=\"true\"\n                                    [testID]=\"testID\"\n                                    [actions]=\"currentFilterActions\"></adapt-custom-actions>\n            </div>\n            <adapt-tag-field #filterExpressionTagField\n                             [adaptRadarDisableEventSending]=\"true\"\n                             [warningCheck]=\"tagFieldWarningCheckResolver\"\n                             [mainErrorText]=\"texts.filtersExpressionMainErrorText\"\n                             [warningStateText]=\"texts.filtersExpressionWarningText\"\n                             [mainCls]=\"getFilterExpressionFieldClass('advanced-filter__expression-tag-field', filterExpressionTagField)\"\n                             popupClass=\"advanced-filter__typeahead-window\"\n                             [label]=\"getFiltersExpressionFieldLabel()\"\n                             [maxHeight]=\"68\"\n                             [testID]=\"testID + '_tag-field'\"\n                             [name]=\"'expression-bar'\"\n                             [search]=\"expressionSearch\"\n                             [ngModel]=\"getExpressionTagFieldModel()\"\n                             (ngModelChange)=\"onActiveFiltersTagFieldModelChange($event)\"\n                             [delimiterSymbol]=\"null\"\n                             [placeholder]=\"getExpressionTagFieldPlaceholder()\"\n                             [replaceModelOnWrite]=\"true\"\n                             [fullWidthEdit]=\"fullWidthEdit\"\n                             [disabledInput]=\"disableExpressionEditing\"\n                             [suppressManual]=\"disableExpressionEditing\"\n                             (removeTag)=\"onRemoveCurrentFiltersExpressionFieldTag($event)\"\n                             (initTagEditing)=\"onInitExpressionFieldTagEditing($event)\">\n            </adapt-tag-field>\n          </div>\n\n          <adapt-tabset [showTabToolbar]=\"showTabToolbar\"\n                        [adaptRadarDisableEventSending]=\"true\"\n                        [type]=\"isTablet ? 'tabs' : 'pills'\"\n                        [justify]=\"isTablet ? 'justified' : ''\"\n                        [customCssTabContent]=\"'advanced-filter__tab-content'\"\n                        [customClassTabList]=\"enableSavedFilters ? '' : 'advanced-filter__filters-tab-alone'\"\n                        (tab-active-changed)=\"onActiveTabChange($event)\"\n                        [tab-active]=\"tabsetActiveIndex\"\n                        [testID]=\"testID\"\n                        [carouselMode]=\"false\">\n            <adapt-tab-panel [adapt-tab-title]=\"enableSavedFilters ? texts.filtersLabel : texts.filtersLabelAlone\">\n              <div #scrollableEl1\n                   class=\"advanced-filter__scrollable-container\"\n                   [ngStyle]=\"getScrollableElStyle(scrollableEl1)\">\n                <ng-template [ngTemplateOutlet]=\"filterOptionsTemplate\"></ng-template>\n              </div>\n            </adapt-tab-panel>\n\n            <adapt-tab-panel *ngIf=\"enableSavedFilters\" [adapt-tab-title]=\"texts.savedFiltersLabel\"\n                             [badge]=\"savedFilters.length\" badge-type=\"primary\">\n              <div #scrollableEl2\n                   class=\"advanced-filter__scrollable-container\"\n                   [ngStyle]=\"getScrollableElStyle(scrollableEl2)\">\n                <div class=\"saved-advanced-filters-container\">\n                  <div [ngBusy]=\"busyConfig\">\n                    <ng-template [ngIf]=\"getSavedFiltersByCurrentUser().length || canShowCreatingNewFilterPreset\">\n                      <h4 class=\"saved-advanced-filters-header\">{{ texts.createdByMeLabel }}</h4>\n                      <ul class=\"list-unstyled\">\n                        <li *ngIf=\"canShowCreatingNewFilterPreset\">\n                          <div class=\"mb-3\" [ngClass]=\"hasDuplicateNameInCreating()? 'has-warning' : null\">\n                            <div class=\"advanced-filter-name-editor\">\n                              <adapt-rx-textfield #newFilterNameEditor\n                                                  [adaptRadarDisableEventSending]=\"true\"\n                                                  class=\"advanced-filter-name-editor__textfield\"\n                                                  [(ngModel)]=\"creatingNewFilterPresetName\"\n                                                  [showInvalidStateIcon]=\"false\"\n                                                  [testID]=\"testID + '_filter-name'\"\n                                                  [autofocus]=\"true\"\n                                                  [placeholder]=\"texts.filterNameInputPlaceholder\"\n                                                  (keydown)=\"onNewFilterNameEditorKeyDown($event)\"\n                                                  (onFocus)=\"onNewFilterNameEditorFocus()\"\n                                                  (onBlur)=\"onNewFilterNameEditorBlur()\">\n                              </adapt-rx-textfield>\n\n                              <div class=\"advanced-filter-name-editor__controls\"\n                                   [ngClass]=\"{'advanced-filter-name-editor__controls_focus': isNewFilterNameEditorFocus}\">\n                                <adapt-custom-actions [alignedTo]=\"customActionsAlignedTo\"\n                                                      [adaptRadarDisableEventSending]=\"true\"\n                                                      [testID]=\"testID\"\n                                                      class=\"advanced-filter-name-editor__custom-actions\"\n                                                      [actions]=\"creatingNewFilterActions\"></adapt-custom-actions>\n                              </div>\n                            </div>\n                            <p *ngIf=\"hasDuplicateNameInCreating()\" class=\"form-control-feedback m-0 pt-1\">\n                              {{ texts.duplicateSavedFilterNameError }}\n                            </p>\n                          </div>\n                        </li>\n                        <li #savedFilterListItem\n                            class=\"advanced-filter__saved-filter-list-item\"\n                            *ngFor=\"let savedFilter of getSavedFiltersByCurrentUser(); trackBy: trackByForSavedFilterFn; let i = index\"\n                            [@editSavedFilterListItemAnimation]=\"getSavedFilterListItemAnimationState(savedFilter, savedFilterListItem)\"\n                            (@editSavedFilterListItemAnimation.done)=\"onEditSavedFilterListItemAnimationDone($event, savedFilter)\">\n                          <adapt-rx-radiobutton class=\"saved-advanced-filters-radio\"\n                                                name=\"savedFiltersGroup\"\n                                                [adaptRadarDisableEventSending]=\"true\"\n                                                [label]=\"savedFilter.name\"\n                                                [value]=\"savedFilter\"\n                                                [checked]=\"isFilterActive(savedFilter)\"\n                                                (checkedChange)=\"onSelectActiveSavedFilter(savedFilter)\"></adapt-rx-radiobutton>\n\n                          <div class=\"radio-after saved-advanced-filters-buttons\">\n                            <label *ngIf=\"enableDefaultSavedFilter && savedFilter.id === defaultSavedFilterId\">\n                              <span class=\"badge badge-info\">{{ texts.defaultSavedFilterLabel }}</span>\n                            </label>\n                            <button *ngIf=\"enableDefaultSavedFilter && savedFilter.id !== defaultSavedFilterId\"\n                                    type=\"button\"\n                                    class=\"btn btn-link saved-advanced-filters-action-btn\"\n                                    (click)=\"markDefaultSavedFilter(savedFilter, $event)\"\n                                    [attr.data-testid]=\"testID + '_mark_default_' + i\"\n                                    [adaptRadarDisableEventSending]=\"true\"\n                                    adapt-button\n                                    btn-type=\"tertiary\">\n                              {{ texts.markDefaultSavedFilterLabel }}\n                            </button>\n                            <button type=\"button\"\n                                    class=\"saved-advanced-filters-action-btn\"\n                                    (click)=\"onEditSavedFilterClick(savedFilter, savedFilterListItem, $event)\"\n                                    [attr.data-testid]=\"testID + '_edit_' + i\"\n                                    [adaptRadarDisableEventSending]=\"true\"\n                                    adapt-button\n                                    btn-type=\"tertiary\">\n                                <span class=\"d-icon-pencil_adapt\">\n                                  <span class=\"sr-only\">{{ texts.editLabel }}</span>\n                                </span>\n                            </button>\n\n                            <button type=\"button\"\n                                    class=\"saved-advanced-filters-action-btn\"\n                                    [attr.data-testid]=\"testID + '_save_' + i\"\n                                    (click)=\"onDeleteSavedFilterClick(savedFilter)\"\n                                    [adaptRadarDisableEventSending]=\"true\"\n                                    adapt-button\n                                    btn-type=\"tertiary\">\n                              <span class=\"d-icon-trash\"><span class=\"sr-only\">{{ texts.removeLabel }}</span></span>\n                            </button>\n                          </div>\n                        </li>\n                      </ul>\n                    </ng-template>\n\n                    <ng-template [ngIf]=\"getSavedFiltersByOtherUsers().length\">\n                      <h4 class=\"saved-advanced-filters-header\">{{ texts.createdByOthersLabel }}</h4>\n                      <ul class=\"list-unstyled\">\n                        <li\n                          *ngFor=\"let savedFilter of getSavedFiltersByOtherUsers(); trackBy: trackByForSavedFilterFn; let i = index\">\n                          <adapt-rx-radiobutton class=\"saved-advanced-filters-radio\"\n                                                name=\"savedFiltersGroup\"\n                                                [adaptRadarDisableEventSending]=\"true\"\n                                                [label]=\"savedFilter.name\"\n                                                [value]=\"savedFilter\"\n                                                [checked]=\"isFilterActive(savedFilter)\"\n                                                [attr.data-testid]=\"testID + '_saved_' + i\"\n                                                (checkedChange)=\"onSelectActiveSavedFilter(savedFilter)\">\n                          </adapt-rx-radiobutton>\n                        </li>\n                      </ul>\n                    </ng-template>\n\n                    <adapt-empty-state *ngIf=\"!savedFilters.length\"\n                                       [adaptRadarDisableEventSending]=\"true\"\n                                       [type]=\"'filter'\"\n                                       [label]=\"texts.noFiltersSaved\"\n                                       [attr.data-testid]=\"testID + '_empty'\"></adapt-empty-state>\n                  </div>\n                </div>\n              </div>\n            </adapt-tab-panel>\n          </adapt-tabset>\n\n          <div *ngIf=\"applyFiltersByUserAction && !isMobile\"\n               #applyFiltersByUserActionFooterEl\n               class=\"advanced-filter__apply-filters-footer\">\n            <div>\n              <button type=\"button\"\n                      adapt-button\n                      btn-type=\"tertiary\"\n                      size=\"small\"\n                      [adaptRadarDisableEventSending]=\"true\"\n                      [attr.data-testid]=\"testID + '_footer_cancel'\"\n                      *ngIf=\"!isMobile\"\n                      (click)=\"filtersDropdown.close()\">\n                {{ texts.cancelLabel }}\n              </button>\n            </div>\n            <div>\n              <button type=\"button\"\n                      adapt-button\n                      btn-type=\"secondary\"\n                      size=\"small\"\n                      class=\"mr-2\"\n                      [adaptRadarDisableEventSending]=\"true\"\n                      [attr.data-testid]=\"testID + '_footer_remove'\"\n                      (click)=\"removeAllSelectedFilters($event)\"\n                      [disabled]=\"isClearSelectedFiltersButtonDisabled()\">\n                {{ texts.removeAllLabel }}\n              </button>\n              <button type=\"button\"\n                      adapt-button\n                      btn-type=\"primary\"\n                      size=\"small\"\n                      [adaptRadarDisableEventSending]=\"true\"\n                      [attr.data-testid]=\"testID + '_footer_apply'\"\n                      (click)=\"applySelectedFilters()\"\n                      [disabled]=\"isApplySelectedFiltersButtonDisabled()\">\n                {{ texts.applyFiltersLabel }}\n              </button>\n            </div>\n          </div>\n\n        </div>\n\n        <div *ngIf=\"currentEditingSavedFilter\" [@editFilterContainerAnimation]=\"editFilterContainerAnimationOptions\"\n             (@editFilterContainerAnimation.done)=\"calculateEditingFilterOptionsScrollableElStyle()\">\n          <div class=\"advanced-filter__editing-header-wrap\">\n            <button type=\"button\"\n                    adapt-button\n                    btn-type=\"tertiary\"\n                    class=\"advanced-filter__header-btn advanced-filter__back-btn\"\n                    [adaptRadarDisableEventSending]=\"true\"\n                    [class.invisible]=\"isMobile || isTablet\"\n                    [style.height]=\"isMobile || isTablet ? 0: 'auto'\"\n                    [attr.data-testid]=\"testID + '_cancel'\"\n                    (click)=\"cancelSavedFilterEditing()\">\n              <span class=\"d-icon-angle_left\"></span>\n              {{ texts.backLabel }}\n            </button>\n            <h3 class=\"advanced-filter__editing-title text-url-break-out\"\n                [class.invisible]=\"isMobile || isTablet\"\n                [style.height]=\"isMobile || isTablet ? 0: 'auto'\">\n              {{ texts.editLabel }}: {{ currentEditingSavedFilter.originalSavedFilter.name }}\n            </h3>\n          </div>\n\n          <div class=\"advanced-filter__editing-container\">\n            <div class=\"advanced-filter__editing-fields\">\n              <adapt-rx-control-label *ngIf=\"adaptRxTextfieldComponent\"\n                                      [for]=\"adaptRxTextfieldComponent.id\"\n                                      [label]=\"texts.filterNameLabel\"\n                                      [showRequiredLabel]=\"true\"\n                                      [class.has-danger]=\"adaptRxTextfieldComponent.hasDangerState\"></adapt-rx-control-label>\n              <adapt-rx-textfield #adaptRxTextfieldComponent\n                                  [adaptRadarDisableEventSending]=\"true\"\n                                  [(ngModel)]=\"currentEditingSavedFilter.filterName\"\n                                  [showInvalidStateIcon]=\"false\"\n                                  [testID]=\"testID + '_filter-name'\"\n                                  [placeholder]=\"texts.filterNameInputPlaceholder\"\n                                  [requiredLabel]=\"texts.requiredLabel\"\n                                  [warningMessage]=\"hasDuplicateNameInEditing() ? texts.duplicateSavedFilterNameError : null\"\n                                  adaptAdvancedFilterName\n                                  [adaptAdvancedFilterNameErrorText]=\"texts.filterNameErrorMessage\"></adapt-rx-textfield>\n\n              <adapt-tag-field #editingFilterExpressionTagField\n                               [adaptRadarDisableEventSending]=\"true\"\n                               [warningCheck]=\"tagFieldWarningCheckResolver\"\n                               [mainErrorText]=\"texts.filtersExpressionMainErrorText\"\n                               [warningStateText]=\"texts.filtersExpressionWarningText\"\n                               [mainCls]=\"getFilterExpressionFieldClass('advanced-filter__expression-tag-field advanced-filter__editing-tag-field', editingFilterExpressionTagField)\"\n                               popupClass=\"advanced-filter__typeahead-window\"\n                               [label]=\"getFiltersExpressionFieldLabel()\"\n                               [maxHeight]=\"68\"\n                               [name]=\"'expression-bar'\"\n                               [search]=\"expressionSearch\"\n                               [ngModel]=\"currentFiltersExpressionsTags\"\n                               (ngModelChange)=\"onTagFieldModelChange($event)\"\n                               [delimiterSymbol]=\"null\"\n                               [required]=\"true\"\n                               [fullWidthEdit]=\"fullWidthEdit\"\n                               [placeholder]=\"texts.expressionFilterPlaceholder\"\n                               [replaceModelOnWrite]=\"true\"\n                               [requiredLabel]=\"texts.requiredLabel\">\n              </adapt-tag-field>\n            </div>\n\n            <div #editingFilterOptionsScrollableEl\n                 class=\"advanced-filter__scrollable-container advanced-filter__editing-options\"\n                 [ngStyle]=\"editingFilterScrollableElStyle\">\n              <ng-template [ngTemplateOutlet]=\"filterOptionsTemplate\"></ng-template>\n            </div>\n\n            <div #editingFilterFooterEl class=\"advanced-filter__editing-footer\" *ngIf=\"!isMobile\">\n              <div class=\"d-inline-block\">\n                <button type=\"button\" adapt-button btn-type=\"secondary\" size=\"small\" class=\"mr-2\"\n                        [adaptRadarDisableEventSending]=\"true\"\n                        (click)=\"cancelSavedFilterEditing()\">\n                  {{ texts.cancelLabel }}\n                </button>\n                <button type=\"button\" adapt-button btn-type=\"primary\" size=\"small\" (click)=\"saveSavedFilterEditing()\"\n                        [adaptRadarDisableEventSending]=\"true\"\n                        [disabled]=\"!hasValidCurrentFilterTags()\">\n                  {{ texts.saveButtonLabel }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"overlayService.enableCDKOverlayControl\"\n       #filtersDropdown=\"adaptDropdown\"\n       class=\"advanced-filter__dropdown-wrap\"\n       adaptDropdown\n       [adaptRadarDisableEventSending]=\"true\"\n       [appendToBody]=\"appendDropdownToBody\"\n       [holdFocusInMenu]=\"appendDropdownToBody\"\n       [restoreFocusAfterClose]=\"true\"\n       (anchorPositionChange)=\"onAnchorPositionChange()\"\n       [autoClose]=\"false\"\n       [customClass]=\"dropdownCustomClass\"\n       [closeOnEscape]=\"true\"\n       [placement]=\"dropdownPlacement\"\n       [mobileView]=\"dropdownMobileView\"\n       (onOpen)=\"handleDropdownOpenChange(true)\"\n       (onClose)=\"handleDropdownOpenChange(false)\"\n       (popupAnimationDone)=\"onPopupAnimationDone($event)\">\n    <button type=\"button\"\n            class=\"btn btn-link px-0 d-icon-left-filter d-icon-right-triangle_down\"\n            adaptDropdownAnchor\n            [disabled]=\"anchorDisabled\"\n            #adaptDropdownButton\n            (click)=\"filtersDropdown.toggle($event)\"\n            [attr.data-testid]=\"testID + '_menu'\">\n      <ng-container\n        *ngIf=\"showAnchorButtonLabel\">{{ dropdownAnchorLabel }}</ng-container>\n    </button>\n    <ng-template adaptDropdownMenuTemplate>\n      <div class=\"dropdown-menu advanced-filter__popover-container advanced-filter__popover-container-overlay\"\n           [ngClass]=\"{\n            'advanced-filter__popover-container_non-mobile': !isMobile && !isTablet,\n            'advanced-filter__popover-container_mobile': isMobile || isTablet,\n            'border-top': isTablet}\">\n\n        <div class=\"advanced-filter__container\">\n          <div *ngIf=\"!currentEditingSavedFilter\" class=\"advanced-filter__animation-container\">\n\n            <div class=\"advanced-filter__popover-header\" [ngClass]=\"{'mt-3': isTablet}\">\n              <div class=\"advanced-filter__actions-buttons\" *ngIf=\"!canShowCreatingNewFilterPreset\">\n                <adapt-custom-actions [alignedTo]=\"customActionsAlignedTo\"\n                                      [adaptRadarDisableEventSending]=\"true\"\n                                      [testID]=\"testID\"\n                                      [actions]=\"currentFilterActions\"></adapt-custom-actions>\n              </div>\n              <adapt-tag-field #filterExpressionTagField\n                               [adaptRadarDisableEventSending]=\"true\"\n                               [warningCheck]=\"tagFieldWarningCheckResolver\"\n                               [mainErrorText]=\"texts.filtersExpressionMainErrorText\"\n                               [warningStateText]=\"texts.filtersExpressionWarningText\"\n                               [mainCls]=\"getFilterExpressionFieldClass('advanced-filter__expression-tag-field', filterExpressionTagField)\"\n                               [popupClass]=\"'advanced-filter__typeahead-window'\"\n                               [label]=\"getFiltersExpressionFieldLabel()\"\n                               [maxHeight]=\"68\"\n                               [testID]=\"testID + '_tag-field'\"\n                               [name]=\"'expression-bar'\"\n                               [search]=\"expressionSearch\"\n                               [ngModel]=\"getExpressionTagFieldModel()\"\n                               (ngModelChange)=\"onActiveFiltersTagFieldModelChange($event)\"\n                               [delimiterSymbol]=\"null\"\n                               [placeholder]=\"getExpressionTagFieldPlaceholder()\"\n                               [replaceModelOnWrite]=\"true\"\n                               [fullWidthEdit]=\"fullWidthEdit\"\n                               [disabledInput]=\"disableExpressionEditing\"\n                               [suppressManual]=\"disableExpressionEditing\"\n                               (removeTag)=\"onRemoveCurrentFiltersExpressionFieldTag($event)\"\n                               (initTagEditing)=\"onInitExpressionFieldTagEditing($event)\">\n              </adapt-tag-field>\n            </div>\n\n            <adapt-tabset [showTabToolbar]=\"showTabToolbar\"\n                          [adaptRadarDisableEventSending]=\"true\"\n                          [type]=\"isTablet ? 'tabs' : 'pills'\"\n                          [justify]=\"isTablet ? 'justified' : ''\"\n                          [customCssTabContent]=\"'advanced-filter__tab-content'\"\n                          class=\"advanced-filter__tab-container\"\n                          [customClassTabList]=\"enableSavedFilters ? '' : 'advanced-filter__filters-tab-alone'\"\n                          (tab-active-changed)=\"onActiveTabChange($event)\"\n                          [tab-active]=\"tabsetActiveIndex\"\n                          [testID]=\"testID\"\n                          [carouselMode]=\"false\">\n              <adapt-tab-panel #filtersTabsPanel\n                               [adapt-tab-title]=\"enableSavedFilters ? texts.filtersLabel : texts.filtersLabelAlone\">\n                <ng-container *ngIf=\"filtersTabsPanel.isActive\">\n                  <div class=\"advanced-filter__scrollable-container\">\n                    <ng-template [ngTemplateOutlet]=\"filterOptionsTemplate\"></ng-template>\n                  </div>\n                </ng-container>\n              </adapt-tab-panel>\n\n              <adapt-tab-panel #savedFiltersTabsPanel\n                               *ngIf=\"enableSavedFilters\"\n                               [adapt-tab-title]=\"texts.savedFiltersLabel\"\n                               [badge]=\"savedFilters.length\" badge-type=\"primary\">\n                <ng-container *ngIf=\"savedFiltersTabsPanel.isActive\">\n                  <div class=\"advanced-filter__scrollable-container\">\n                    <div class=\"saved-advanced-filters-container\">\n                      <div [ngBusy]=\"busyConfig\">\n                        <ng-template [ngIf]=\"getSavedFiltersByCurrentUser().length || canShowCreatingNewFilterPreset\">\n                          <h4 class=\"saved-advanced-filters-header\">{{ texts.createdByMeLabel }}</h4>\n                          <ul class=\"list-unstyled\">\n                            <li *ngIf=\"canShowCreatingNewFilterPreset\">\n                              <div class=\"mb-3\">\n                                <div class=\"advanced-filter-name-editor\">\n                                  <adapt-rx-textfield #newFilterNameEditor\n                                                      [adaptRadarDisableEventSending]=\"true\"\n                                                      class=\"advanced-filter-name-editor__textfield\"\n                                                      [(ngModel)]=\"creatingNewFilterPresetName\"\n                                                      [showInvalidStateIcon]=\"false\"\n                                                      [testID]=\"testID + '_filter-name'\"\n                                                      [autofocus]=\"true\"\n                                                      [placeholder]=\"texts.filterNameInputPlaceholder\"\n                                                      (keydown)=\"onNewFilterNameEditorKeyDown($event)\"\n                                                      (onFocus)=\"onNewFilterNameEditorFocus()\"\n                                                      (onBlur)=\"onNewFilterNameEditorBlur()\">\n                                  </adapt-rx-textfield>\n\n                                  <div class=\"advanced-filter-name-editor__controls\"\n                                       [ngClass]=\"{'advanced-filter-name-editor__controls_focus': isNewFilterNameEditorFocus}\">\n                                    <adapt-custom-actions [alignedTo]=\"customActionsAlignedTo\"\n                                                          [adaptRadarDisableEventSending]=\"true\"\n                                                          [testID]=\"testID\"\n                                                          class=\"advanced-filter-name-editor__custom-actions\"\n                                                          [actions]=\"creatingNewFilterActions\"></adapt-custom-actions>\n                                  </div>\n                                </div>\n                                <p *ngIf=\"hasDuplicateNameInCreating()\" class=\"text-info m-0 pt-1\">\n                                  {{ texts.duplicateSavedFilterNameError }}\n                                </p>\n                              </div>\n                            </li>\n                            <li #savedFilterListItem\n                                class=\"advanced-filter__saved-filter-list-item\"\n                                *ngFor=\"let savedFilter of getSavedFiltersByCurrentUser(); trackBy: trackByForSavedFilterFn; let i = index\">\n                              <adapt-rx-radiobutton class=\"saved-advanced-filters-radio\"\n                                                    name=\"savedFiltersGroup\"\n                                                    [adaptRadarDisableEventSending]=\"true\"\n                                                    [label]=\"savedFilter.name\"\n                                                    [value]=\"savedFilter\"\n                                                    [checked]=\"isFilterActive(savedFilter)\"\n                                                    (checkedChange)=\"onSelectActiveSavedFilter(savedFilter)\"></adapt-rx-radiobutton>\n\n                              <div class=\"radio-after saved-advanced-filters-buttons\">\n                                <label *ngIf=\"enableDefaultSavedFilter && savedFilter.id === defaultSavedFilterId\">\n                                  <span class=\"badge badge-info\">{{ texts.defaultSavedFilterLabel }}</span>\n                                </label>\n                                <button *ngIf=\"enableDefaultSavedFilter && savedFilter.id !== defaultSavedFilterId\"\n                                        type=\"button\"\n                                        class=\"btn btn-link saved-advanced-filters-action-btn\"\n                                        (click)=\"markDefaultSavedFilter(savedFilter, $event)\"\n                                        [attr.data-testid]=\"testID + '_mark_default_' + i\"\n                                        [adaptRadarDisableEventSending]=\"true\"\n                                        adapt-button\n                                        btn-type=\"tertiary\">\n                                  {{ texts.markDefaultSavedFilterLabel }}\n                                </button>\n                                <button type=\"button\"\n                                        class=\"saved-advanced-filters-action-btn\"\n                                        (click)=\"onEditSavedFilterClick(savedFilter, savedFilterListItem, $event)\"\n                                        [attr.data-testid]=\"testID + '_edit_' + i\"\n                                        [adaptRadarDisableEventSending]=\"true\"\n                                        adapt-button\n                                        btn-type=\"tertiary\">\n                                <span class=\"d-icon-pencil_adapt\">\n                                  <span class=\"sr-only\">{{ texts.editLabel }}</span>\n                                </span>\n                                </button>\n\n                                <button type=\"button\"\n                                        class=\"saved-advanced-filters-action-btn\"\n                                        [attr.data-testid]=\"testID + '_save_' + i\"\n                                        (click)=\"onDeleteSavedFilterClick(savedFilter)\"\n                                        [adaptRadarDisableEventSending]=\"true\"\n                                        adapt-button\n                                        btn-type=\"tertiary\">\n                                  <span class=\"d-icon-trash\"><span class=\"sr-only\">{{ texts.removeLabel }}</span></span>\n                                </button>\n                              </div>\n                            </li>\n                          </ul>\n                        </ng-template>\n\n                        <ng-template [ngIf]=\"getSavedFiltersByOtherUsers().length\">\n                          <h4 class=\"saved-advanced-filters-header\">{{ texts.createdByOthersLabel }}</h4>\n                          <ul class=\"list-unstyled\">\n                            <li\n                              *ngFor=\"let savedFilter of getSavedFiltersByOtherUsers(); trackBy: trackByForSavedFilterFn; let i = index\">\n                              <adapt-rx-radiobutton class=\"saved-advanced-filters-radio\"\n                                                    name=\"savedFiltersGroup\"\n                                                    [adaptRadarDisableEventSending]=\"true\"\n                                                    [label]=\"savedFilter.name\"\n                                                    [value]=\"savedFilter\"\n                                                    [checked]=\"isFilterActive(savedFilter)\"\n                                                    [attr.data-testid]=\"testID + '_saved_' + i\"\n                                                    (checkedChange)=\"onSelectActiveSavedFilter(savedFilter)\">\n                              </adapt-rx-radiobutton>\n                            </li>\n                          </ul>\n                        </ng-template>\n\n                        <adapt-empty-state *ngIf=\"!savedFilters.length\"\n                                           [adaptRadarDisableEventSending]=\"true\"\n                                           [type]=\"'filter'\"\n                                           [label]=\"texts.noFiltersSaved\"\n                                           [attr.data-testid]=\"testID + '_empty'\"></adapt-empty-state>\n                      </div>\n                    </div>\n                  </div>\n                </ng-container>\n              </adapt-tab-panel>\n            </adapt-tabset>\n\n            <div *ngIf=\"applyFiltersByUserAction && !isMobile\"\n                 class=\"advanced-filter__apply-filters-footer\">\n              <div>\n                <button type=\"button\"\n                        adapt-button\n                        btn-type=\"tertiary\"\n                        size=\"small\"\n                        [adaptRadarDisableEventSending]=\"true\"\n                        [attr.data-testid]=\"testID + '_footer_cancel'\"\n                        *ngIf=\"!isMobile\"\n                        (click)=\"filtersDropdown.close()\">\n                  {{ texts.cancelLabel }}\n                </button>\n              </div>\n              <div>\n                <button type=\"button\"\n                        adapt-button\n                        btn-type=\"secondary\"\n                        size=\"small\"\n                        class=\"mr-2\"\n                        [adaptRadarDisableEventSending]=\"true\"\n                        [attr.data-testid]=\"testID + '_footer_remove'\"\n                        (click)=\"removeAllSelectedFilters($event)\"\n                        [disabled]=\"isClearSelectedFiltersButtonDisabled()\">\n                  {{ texts.removeAllLabel }}\n                </button>\n                <button type=\"button\"\n                        adapt-button\n                        btn-type=\"primary\"\n                        size=\"small\"\n                        [adaptRadarDisableEventSending]=\"true\"\n                        [attr.data-testid]=\"testID + '_footer_apply'\"\n                        (click)=\"applySelectedFilters()\"\n                        [disabled]=\"isApplySelectedFiltersButtonDisabled()\">\n                  {{ texts.applyFiltersLabel }}\n                </button>\n              </div>\n            </div>\n\n          </div>\n\n          <div *ngIf=\"currentEditingSavedFilter\" [@editFilterContainerOverlayAnimation]>\n            <div class=\"advanced-filter__editing-header-wrap\">\n              <button type=\"button\"\n                      adapt-button\n                      btn-type=\"tertiary\"\n                      class=\"advanced-filter__header-btn advanced-filter__back-btn\"\n                      [adaptRadarDisableEventSending]=\"true\"\n                      [class.invisible]=\"isMobile || isTablet\"\n                      [style.height]=\"isMobile || isTablet ? 0: 'auto'\"\n                      [attr.data-testid]=\"testID + '_cancel'\"\n                      (click)=\"cancelSavedFilterEditing()\">\n                <span class=\"d-icon-angle_left\"></span>\n                {{ texts.backLabel }}\n              </button>\n              <h3 class=\"advanced-filter__editing-title text-url-break-out\"\n                  [class.invisible]=\"isMobile || isTablet\"\n                  [style.height]=\"isMobile || isTablet ? 0: 'auto'\">\n                {{ texts.editLabel }}: {{ currentEditingSavedFilter.originalSavedFilter.name }}\n              </h3>\n            </div>\n\n            <div class=\"advanced-filter__editing-container\">\n              <div class=\"advanced-filter__editing-fields\">\n                <adapt-rx-control-label *ngIf=\"adaptRxTextfieldComponent\"\n                                        [for]=\"adaptRxTextfieldComponent.id\"\n                                        [label]=\"texts.filterNameLabel\"\n                                        [showRequiredLabel]=\"true\"\n                                        [class.has-danger]=\"adaptRxTextfieldComponent.hasDangerState\"></adapt-rx-control-label>\n                <adapt-rx-textfield #adaptRxTextfieldComponent\n                                    [adaptRadarDisableEventSending]=\"true\"\n                                    [(ngModel)]=\"currentEditingSavedFilter.filterName\"\n                                    [showInvalidStateIcon]=\"false\"\n                                    [testID]=\"testID + '_filter-name'\"\n                                    [placeholder]=\"texts.filterNameInputPlaceholder\"\n                                    [requiredLabel]=\"texts.requiredLabel\"\n                                    [warningMessage]=\"hasDuplicateNameInEditing() ? texts.duplicateSavedFilterNameError : null\"\n                                    adaptAdvancedFilterName\n                                    [adaptAdvancedFilterNameErrorText]=\"texts.filterNameErrorMessage\"></adapt-rx-textfield>\n                <adapt-tag-field #editingFilterExpressionTagField\n                                 [adaptRadarDisableEventSending]=\"true\"\n                                 [warningCheck]=\"tagFieldWarningCheckResolver\"\n                                 [mainErrorText]=\"texts.filtersExpressionMainErrorText\"\n                                 [warningStateText]=\"texts.filtersExpressionWarningText\"\n                                 [mainCls]=\"getFilterExpressionFieldClass('advanced-filter__expression-tag-field advanced-filter__editing-tag-field', editingFilterExpressionTagField)\"\n                                 popupClass=\"advanced-filter__typeahead-window\"\n                                 [label]=\"getFiltersExpressionFieldLabel()\"\n                                 [maxHeight]=\"68\"\n                                 [name]=\"'expression-bar'\"\n                                 [search]=\"expressionSearch\"\n                                 [ngModel]=\"currentFiltersExpressionsTags\"\n                                 (ngModelChange)=\"onTagFieldModelChange($event)\"\n                                 [delimiterSymbol]=\"null\"\n                                 [required]=\"true\"\n                                 [fullWidthEdit]=\"fullWidthEdit\"\n                                 [placeholder]=\"texts.expressionFilterPlaceholder\"\n                                 [replaceModelOnWrite]=\"true\"\n                                 [requiredLabel]=\"texts.requiredLabel\">\n                </adapt-tag-field>\n              </div>\n\n              <div class=\"advanced-filter__scrollable-container advanced-filter__editing-options\">\n                <ng-template [ngTemplateOutlet]=\"filterOptionsTemplate\"></ng-template>\n              </div>\n\n              <div class=\"advanced-filter__editing-footer\" *ngIf=\"!isMobile\">\n                <div class=\"d-inline-block\">\n                  <button type=\"button\"\n                          adapt-button\n                          btn-type=\"secondary\"\n                          size=\"small\"\n                          class=\"mr-2\"\n                          [adaptRadarDisableEventSending]=\"true\"\n                          (click)=\"cancelSavedFilterEditing()\">{{texts.cancelLabel}}</button>\n                  <button type=\"button\"\n                          adapt-button\n                          btn-type=\"primary\"\n                          size=\"small\"\n                          [adaptRadarDisableEventSending]=\"true\"\n                          (click)=\"saveSavedFilterEditing()\"\n                          [disabled]=\"!hasValidCurrentFilterTags()\">{{texts.saveButtonLabel}}</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </div>\n\n  <adapt-filter-tags\n    *ngIf=\"showTags\"\n    #filterTags\n    [class.advanced-filter__outside-tags_hidden]=\"isFilterOutsideTagsHidden\"\n    [tags]=\"selectedFiltersTags\"\n    [texts]=\"texts\"\n    (remove)=\"onRemoveFromOutsideTag($event)\"\n    (visibilityChanged)=\"onVisibilityChanged($event)\">\n  </adapt-filter-tags>\n</div>\n\n\n<ng-template #filterOptionsTemplate>\n  <ng-template [ngIf]=\"filterOptionsCustomAreaTemplate\"\n               [ngTemplateOutlet]=\"filterOptionsCustomAreaTemplate\"></ng-template>\n\n  <adapt-accordion [adaptRadarDisableEventSending]=\"true\"\n                   [bordered]=\"false\"\n                   class=\"advanced-filter__filters-accordion\">\n    <adapt-filter-controls #filterControls\n                           class=\"advanced-filter__filter-controls\"\n                           *ngFor=\"let filterOptionData of getVisibleFilterOptionsData(); let isLast = last; trackBy: trackByForFilterOptionDataFn; let i = index\"\n                           [filterOption]=\"filterOptionData.option\"\n                           [filterValue]=\"filterOptionData.tag ? filterOptionData.tag.data.value : null\"\n                           [validationErrors]=\"filterOptionData.tag ? filterOptionData.tag.data.validationErrors : null\"\n                           [hasAllInvalidTags]=\"hasAllInvalidCurrentFilterTags()\"\n                           [texts]=\"texts\"\n                           [testID]=\"testID + '_' + i\"\n                           [attr.data-testid]=\"filterOptionData.option.id\"\n                           [disabledTabResolver]=\"disabledTabResolver\"\n                           [disabledInputResolver]=\"disabledInputResolver\"\n                           [showSelectedFiltersCount]=\"showSelectedFiltersCount\"\n                           [selectedFiltersIndicationStyle]=\"selectedFiltersIndicationStyle\"\n                           (filterValueChange)=\"onFilterOptionModelChange($event, filterOptionData.option)\"\n                           [ngClass]=\"{'adapt-filter-controls--last': isLast}\">\n    </adapt-filter-controls>\n  </adapt-accordion>\n</ng-template>\n"]}