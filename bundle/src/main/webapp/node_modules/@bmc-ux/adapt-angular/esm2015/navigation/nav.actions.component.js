import { Component, ElementRef, Input, Output, TemplateRef, ViewChild, EventEmitter } from '@angular/core';
import { AdaptRadarAngularCustomEventName, AdaptRadarAngularCustomEventType, AdaptRadarAngularService } from '../common/radar/adapt-radar';
import { AdaptSwitcherModel } from './navigation.config';
import { AdaptTranslateService } from '../common/i18n/index';
import { debounce } from '../common/utilities';
import { AdaptDropdownDirective } from '../dropdown/index';
import { ReplaySubject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { isFunction } from 'lodash-es';
import { AdaptDeviceDetectionService } from '../common/device-detection.service';
import * as i0 from "@angular/core";
import * as i1 from "../common/i18n/index";
import * as i2 from "../common/radar/adapt-radar";
import * as i3 from "../common/device-detection.service";
import * as i4 from "@angular/common";
import * as i5 from "../dropdown/dropdown.component";
import * as i6 from "../tooltip/tooltip.directive";
import * as i7 from "./badge-counter/nav-badge-counter.component";
import * as i8 from "../popover/popover.directive";
import * as i9 from "./navigation.pipe";
import * as i10 from "@angular/router";
const _c0 = ["kebabDropdown"];
const _c1 = ["switcherDropdown"];
function AdaptNavActionsComponent_ng_container_0_ng_container_2_adapt_nav_action_item_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "adapt-nav-action-item", 7);
} if (rf & 2) {
    const act_r5 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵproperty("item", act_r5);
} }
function AdaptNavActionsComponent_ng_container_0_ng_container_2_div_4_span_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 13);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const act_r5 = i0.ɵɵnextContext(2).$implicit;
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(act_r5.title);
} }
function AdaptNavActionsComponent_ng_container_0_ng_container_2_div_4_span_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 14);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const act_r5 = i0.ɵɵnextContext(2).$implicit;
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(act_r5.count);
} }
function AdaptNavActionsComponent_ng_container_0_ng_container_2_div_4_ul_9_li_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "li", 18);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const act_r5 = i0.ɵɵnextContext(3).$implicit;
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(act_r5.header);
} }
function AdaptNavActionsComponent_ng_container_0_ng_container_2_div_4_ul_9_li_4_div_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const sub_r20 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵclassMapInterpolate1("a-dropdown__link-disabled dropdown-item disabled ", sub_r20.className, "");
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n            ", sub_r20.name, "\n          ");
} }
function AdaptNavActionsComponent_ng_container_0_ng_container_2_div_4_ul_9_li_4_adapt_nav_action_subitem_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "adapt-nav-action-subitem", 23);
} if (rf & 2) {
    const sub_r20 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵproperty("item", sub_r20)("actionType", "submenu");
} }
function AdaptNavActionsComponent_ng_container_0_ng_container_2_div_4_ul_9_li_4_div_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "div", 24);
} }
function AdaptNavActionsComponent_ng_container_0_ng_container_2_div_4_ul_9_li_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "li", 19);
    i0.ɵɵtext(1, "\n\n          ");
    i0.ɵɵtemplate(2, AdaptNavActionsComponent_ng_container_0_ng_container_2_div_4_ul_9_li_4_div_2_Template, 2, 4, "div", 20);
    i0.ɵɵtext(3, "\n\n          ");
    i0.ɵɵtemplate(4, AdaptNavActionsComponent_ng_container_0_ng_container_2_div_4_ul_9_li_4_adapt_nav_action_subitem_4_Template, 1, 2, "adapt-nav-action-subitem", 21);
    i0.ɵɵtext(5, "\n\n          ");
    i0.ɵɵtemplate(6, AdaptNavActionsComponent_ng_container_0_ng_container_2_div_4_ul_9_li_4_div_6_Template, 1, 0, "div", 22);
    i0.ɵɵtext(7, "\n\n        ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const sub_r20 = ctx.$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", sub_r20.disabled);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", !sub_r20.disabled);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", sub_r20.separated);
} }
function AdaptNavActionsComponent_ng_container_0_ng_container_2_div_4_ul_9_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "ul", 15);
    i0.ɵɵtext(1, "\n\n        ");
    i0.ɵɵtemplate(2, AdaptNavActionsComponent_ng_container_0_ng_container_2_div_4_ul_9_li_2_Template, 2, 1, "li", 16);
    i0.ɵɵtext(3, "\n\n        ");
    i0.ɵɵtemplate(4, AdaptNavActionsComponent_ng_container_0_ng_container_2_div_4_ul_9_li_4_Template, 8, 3, "li", 17);
    i0.ɵɵtext(5, "\n      ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r26 = i0.ɵɵnextContext(2);
    const actionIndex_r6 = ctx_r26.index;
    const act_r5 = ctx_r26.$implicit;
    const ctx_r14 = i0.ɵɵnextContext(2);
    i0.ɵɵclassProp("a-dropdown-menu__mobile", !ctx_r14.isDesktop);
    i0.ɵɵattribute("ariaLabelledby", "action_" + actionIndex_r6);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", act_r5.header);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", act_r5.subMenu);
} }
function AdaptNavActionsComponent_ng_container_0_ng_container_2_div_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 8);
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵelementStart(2, "button", 9);
    i0.ɵɵtext(3, "\n        ");
    i0.ɵɵtemplate(4, AdaptNavActionsComponent_ng_container_0_ng_container_2_div_4_span_4_Template, 2, 1, "span", 10);
    i0.ɵɵtext(5, "\n        ");
    i0.ɵɵtemplate(6, AdaptNavActionsComponent_ng_container_0_ng_container_2_div_4_span_6_Template, 2, 1, "span", 11);
    i0.ɵɵtext(7, "\n      ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(8, "\n\n      ");
    i0.ɵɵtemplate(9, AdaptNavActionsComponent_ng_container_0_ng_container_2_div_4_ul_9_Template, 6, 5, "ul", 12);
    i0.ɵɵtext(10, "\n    ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r27 = i0.ɵɵnextContext();
    const act_r5 = ctx_r27.$implicit;
    const actionIndex_r6 = ctx_r27.index;
    const ctx_r8 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("mobileView", act_r5.dropdownConfig);
    i0.ɵɵadvance(2);
    i0.ɵɵclassMapInterpolate1("a-action btn btn-link ", act_r5.className, " dropdown-toggle");
    i0.ɵɵpropertyInterpolate("adaptTooltip", act_r5.tooltip ? act_r5.tooltip : null);
    i0.ɵɵattribute("title", act_r5.tooltip ? null : act_r5.name)("aria-label", act_r5.name)("id", "action_" + actionIndex_r6)("data-testid", ctx_r8.generateActionItemTestID(act_r5));
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", act_r5.title);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", act_r5.count);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", act_r5.subMenu);
} }
function AdaptNavActionsComponent_ng_container_0_ng_container_2_div_6_span_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 13);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const act_r5 = i0.ɵɵnextContext(2).$implicit;
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(act_r5.title);
} }
function AdaptNavActionsComponent_ng_container_0_ng_container_2_div_6_adapt_nav_badge_counter_7_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "adapt-nav-badge-counter", 33);
} if (rf & 2) {
    const act_r5 = i0.ɵɵnextContext(2).$implicit;
    i0.ɵɵproperty("count", act_r5.count);
} }
function AdaptNavActionsComponent_ng_container_0_ng_container_2_div_6_12_ng_template_0_Template(rf, ctx) { }
function AdaptNavActionsComponent_ng_container_0_ng_container_2_div_6_12_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtemplate(0, AdaptNavActionsComponent_ng_container_0_ng_container_2_div_6_12_ng_template_0_Template, 0, 0, "ng-template");
} }
const _c2 = function (a0) { return { context: a0 }; };
function AdaptNavActionsComponent_ng_container_0_ng_container_2_div_6_ng_template_14_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n          ");
    i0.ɵɵelementContainer(1, 34);
    i0.ɵɵtext(2, "\n        ");
} if (rf & 2) {
    i0.ɵɵnextContext();
    const _r28 = i0.ɵɵreference(1);
    const act_r5 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", act_r5.popover)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c2, _r28));
} }
function AdaptNavActionsComponent_ng_container_0_ng_container_2_div_6_ng_template_17_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0);
} if (rf & 2) {
    const act_r5 = i0.ɵɵnextContext(2).$implicit;
    i0.ɵɵtextInterpolate(act_r5.popover);
} }
function AdaptNavActionsComponent_ng_container_0_ng_container_2_div_6_Template(rf, ctx) { if (rf & 1) {
    const _r43 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 25, 26);
    i0.ɵɵlistener("onOpen", function AdaptNavActionsComponent_ng_container_0_ng_container_2_div_6_Template_div_onOpen_0_listener() { i0.ɵɵrestoreView(_r43); const act_r5 = i0.ɵɵnextContext().$implicit; const ctx_r41 = i0.ɵɵnextContext(2); return ctx_r41.handlePopupOpenChange(true, act_r5); })("onClose", function AdaptNavActionsComponent_ng_container_0_ng_container_2_div_6_Template_div_onClose_0_listener() { i0.ɵɵrestoreView(_r43); const act_r5 = i0.ɵɵnextContext().$implicit; const ctx_r44 = i0.ɵɵnextContext(2); return ctx_r44.handlePopupOpenChange(false, act_r5); });
    i0.ɵɵtext(2, "\n      ");
    i0.ɵɵelementStart(3, "button", 27);
    i0.ɵɵtext(4, "\n        ");
    i0.ɵɵtemplate(5, AdaptNavActionsComponent_ng_container_0_ng_container_2_div_6_span_5_Template, 2, 1, "span", 10);
    i0.ɵɵtext(6, "\n        ");
    i0.ɵɵtemplate(7, AdaptNavActionsComponent_ng_container_0_ng_container_2_div_6_adapt_nav_badge_counter_7_Template, 1, 1, "adapt-nav-badge-counter", 28);
    i0.ɵɵtext(8, "\n      ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(9, "\n      ");
    i0.ɵɵelementStart(10, "div", 29);
    i0.ɵɵtext(11, "\n\n        ");
    i0.ɵɵtemplate(12, AdaptNavActionsComponent_ng_container_0_ng_container_2_div_6_12_Template, 1, 0, undefined, 30);
    i0.ɵɵtext(13, "\n\n        ");
    i0.ɵɵtemplate(14, AdaptNavActionsComponent_ng_container_0_ng_container_2_div_6_ng_template_14_Template, 3, 4, "ng-template", null, 31, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵtext(16, "\n        ");
    i0.ɵɵtemplate(17, AdaptNavActionsComponent_ng_container_0_ng_container_2_div_6_ng_template_17_Template, 1, 1, "ng-template", null, 32, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵtext(19, "\n\n      ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(20, "\n    ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const _r32 = i0.ɵɵreference(15);
    const _r34 = i0.ɵɵreference(18);
    const ctx_r46 = i0.ɵɵnextContext();
    const act_r5 = ctx_r46.$implicit;
    const actionIndex_r6 = ctx_r46.index;
    const ctx_r9 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("mobileView", act_r5.dropdownConfig)("placement", "bottom-right")("autoClose", "outside");
    i0.ɵɵadvance(3);
    i0.ɵɵclassMapInterpolate1("a-action btn btn-link ", act_r5.className, " dropdown-toggle");
    i0.ɵɵpropertyInterpolate("adaptTooltip", act_r5.tooltip ? act_r5.tooltip : null);
    i0.ɵɵattribute("title", act_r5.tooltip ? null : act_r5.name)("aria-label", (act_r5.count || act_r5.count === 0 ? act_r5.count + " " : "") + (act_r5.title || act_r5.name))("data-testid", ctx_r9.generateActionItemTestID(act_r5))("id", "action_" + actionIndex_r6);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", act_r5.title);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", act_r5.count);
    i0.ɵɵadvance(3);
    i0.ɵɵclassProp("a-dropdown-menu__mobile", !ctx_r9.isDesktop);
    i0.ɵɵattribute("ariaLabelledby", "action_" + actionIndex_r6);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r9.isTemplate(act_r5.popover))("ngIfThen", _r32)("ngIfElse", _r34);
} }
function AdaptNavActionsComponent_ng_container_0_ng_container_2_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
const _c3 = function (a0, a1) { return { act: a0, actionIndex: a1 }; };
function AdaptNavActionsComponent_ng_container_0_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n\n    ");
    i0.ɵɵtemplate(2, AdaptNavActionsComponent_ng_container_0_ng_container_2_adapt_nav_action_item_2_Template, 1, 1, "adapt-nav-action-item", 3);
    i0.ɵɵtext(3, "\n\n    ");
    i0.ɵɵtemplate(4, AdaptNavActionsComponent_ng_container_0_ng_container_2_div_4_Template, 11, 13, "div", 4);
    i0.ɵɵtext(5, "\n\n    ");
    i0.ɵɵtemplate(6, AdaptNavActionsComponent_ng_container_0_ng_container_2_div_6_Template, 21, 20, "div", 5);
    i0.ɵɵtext(7, "\n    ");
    i0.ɵɵtemplate(8, AdaptNavActionsComponent_ng_container_0_ng_container_2_ng_container_8_Template, 1, 0, "ng-container", 6);
    i0.ɵɵtext(9, "\n  ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const act_r5 = ctx.$implicit;
    const actionIndex_r6 = ctx.index;
    i0.ɵɵnextContext(2);
    const _r1 = i0.ɵɵreference(3);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", !act_r5.subMenu && !act_r5.popover);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", act_r5.subMenu && !act_r5.popover);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", act_r5.popover && !act_r5.subMenu);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", _r1)("ngTemplateOutletContext", i0.ɵɵpureFunction2(5, _c3, act_r5, actionIndex_r6));
} }
function AdaptNavActionsComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n  ");
    i0.ɵɵtemplate(2, AdaptNavActionsComponent_ng_container_0_ng_container_2_Template, 10, 8, "ng-container", 2);
    i0.ɵɵtext(3, "\n");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r0.actions);
} }
function AdaptNavActionsComponent_ng_template_2_ng_container_1_ng_container_12_li_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "li", 18);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const act_r47 = i0.ɵɵnextContext(3).act;
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(act_r47.switcher.recentItems.header);
} }
function AdaptNavActionsComponent_ng_template_2_ng_container_1_ng_container_12_li_4_div_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const sub_r58 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵclassMapInterpolate1("a-dropdown__link-disabled dropdown-item disabled ", sub_r58.className, "");
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n              ", sub_r58.name, "\n            ");
} }
function AdaptNavActionsComponent_ng_template_2_ng_container_1_ng_container_12_li_4_adapt_nav_action_subitem_4_Template(rf, ctx) { if (rf & 1) {
    const _r65 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "adapt-nav-action-subitem", 42);
    i0.ɵɵlistener("emitCloseDropdowns", function AdaptNavActionsComponent_ng_template_2_ng_container_1_ng_container_12_li_4_adapt_nav_action_subitem_4_Template_adapt_nav_action_subitem_emitCloseDropdowns_0_listener() { i0.ɵɵrestoreView(_r65); const ctx_r64 = i0.ɵɵnextContext(5); return ctx_r64.closeAllDropdowns(); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const sub_r58 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵproperty("customClass", "text-active")("item", sub_r58)("actionType", "switcher");
} }
function AdaptNavActionsComponent_ng_template_2_ng_container_1_ng_container_12_li_4_div_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "div", 24);
} }
function AdaptNavActionsComponent_ng_template_2_ng_container_1_ng_container_12_li_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "li", 40);
    i0.ɵɵtext(1, "\n\n            ");
    i0.ɵɵtemplate(2, AdaptNavActionsComponent_ng_template_2_ng_container_1_ng_container_12_li_4_div_2_Template, 2, 4, "div", 20);
    i0.ɵɵtext(3, "\n\n            ");
    i0.ɵɵtemplate(4, AdaptNavActionsComponent_ng_template_2_ng_container_1_ng_container_12_li_4_adapt_nav_action_subitem_4_Template, 1, 3, "adapt-nav-action-subitem", 41);
    i0.ɵɵtext(5, "\n\n            ");
    i0.ɵɵtemplate(6, AdaptNavActionsComponent_ng_template_2_ng_container_1_ng_container_12_li_4_div_6_Template, 1, 0, "div", 22);
    i0.ɵɵtext(7, "\n          ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const sub_r58 = ctx.$implicit;
    const isLast_r59 = ctx.last;
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", sub_r58.disabled);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", !sub_r58.disabled);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", isLast_r59);
} }
function AdaptNavActionsComponent_ng_template_2_ng_container_1_ng_container_12_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n          ");
    i0.ɵɵtemplate(2, AdaptNavActionsComponent_ng_template_2_ng_container_1_ng_container_12_li_2_Template, 2, 1, "li", 16);
    i0.ɵɵtext(3, "\n\n          ");
    i0.ɵɵtemplate(4, AdaptNavActionsComponent_ng_template_2_ng_container_1_ng_container_12_li_4_Template, 8, 3, "li", 39);
    i0.ɵɵtext(5, "\n\n        ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const act_r47 = i0.ɵɵnextContext(2).act;
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", act_r47.header);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", act_r47.switcher.recentItems.items);
} }
function AdaptNavActionsComponent_ng_template_2_ng_container_1_li_17_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "li", 18);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const act_r47 = i0.ɵɵnextContext(2).act;
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(act_r47.switcher.allItems.header);
} }
function AdaptNavActionsComponent_ng_template_2_ng_container_1_ng_container_19_div_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const sub_r69 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵclassMapInterpolate1("a-dropdown__link-disabled dropdown-item disabled ", sub_r69.className, "");
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n                ", sub_r69.name, "\n              ");
} }
function AdaptNavActionsComponent_ng_template_2_ng_container_1_ng_container_19_adapt_nav_action_subitem_6_Template(rf, ctx) { if (rf & 1) {
    const _r74 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "adapt-nav-action-subitem", 44);
    i0.ɵɵlistener("emitCloseDropdowns", function AdaptNavActionsComponent_ng_template_2_ng_container_1_ng_container_19_adapt_nav_action_subitem_6_Template_adapt_nav_action_subitem_emitCloseDropdowns_0_listener() { i0.ɵɵrestoreView(_r74); const ctx_r73 = i0.ɵɵnextContext(4); return ctx_r73.closeAllDropdowns(); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const sub_r69 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵproperty("item", sub_r69);
} }
function AdaptNavActionsComponent_ng_template_2_ng_container_1_ng_container_19_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n            ");
    i0.ɵɵelementStart(2, "li", 19);
    i0.ɵɵtext(3, "\n\n              ");
    i0.ɵɵtemplate(4, AdaptNavActionsComponent_ng_template_2_ng_container_1_ng_container_19_div_4_Template, 2, 4, "div", 20);
    i0.ɵɵtext(5, "\n\n              ");
    i0.ɵɵtemplate(6, AdaptNavActionsComponent_ng_template_2_ng_container_1_ng_container_19_adapt_nav_action_subitem_6_Template, 1, 1, "adapt-nav-action-subitem", 43);
    i0.ɵɵtext(7, "\n            ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(8, "\n          ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const sub_r69 = ctx.$implicit;
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngIf", sub_r69.disabled);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", !sub_r69.disabled);
} }
function AdaptNavActionsComponent_ng_template_2_ng_container_1_li_22_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "li", 18);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r54 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r54.texts.notFoundText);
} }
function AdaptNavActionsComponent_ng_template_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n    ");
    i0.ɵɵelementStart(2, "div", 35, 36);
    i0.ɵɵtext(4, "\n      ");
    i0.ɵɵelementStart(5, "button", 9);
    i0.ɵɵtext(6, "\n      ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(7, "\n\n      ");
    i0.ɵɵelementStart(8, "ul", 37);
    i0.ɵɵtext(9, "\n\n        ");
    i0.ɵɵtext(10, "\n\n        ");
    i0.ɵɵtext(11, "\n        ");
    i0.ɵɵtemplate(12, AdaptNavActionsComponent_ng_template_2_ng_container_1_ng_container_12_Template, 6, 2, "ng-container", 0);
    i0.ɵɵtext(13, "\n\n        ");
    i0.ɵɵtext(14, "\n        ");
    i0.ɵɵelementContainerStart(15);
    i0.ɵɵtext(16, "\n\n          ");
    i0.ɵɵtemplate(17, AdaptNavActionsComponent_ng_template_2_ng_container_1_li_17_Template, 2, 1, "li", 16);
    i0.ɵɵtext(18, "\n\n          ");
    i0.ɵɵtemplate(19, AdaptNavActionsComponent_ng_template_2_ng_container_1_ng_container_19_Template, 9, 2, "ng-container", 2);
    i0.ɵɵpipe(20, "navFilterSubItems");
    i0.ɵɵtext(21, "\n\n          ");
    i0.ɵɵtemplate(22, AdaptNavActionsComponent_ng_template_2_ng_container_1_li_22_Template, 2, 1, "li", 38);
    i0.ɵɵtext(23, "\n        ");
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtext(24, "\n      ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(25, "\n\n    ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(26, "\n  ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r76 = i0.ɵɵnextContext();
    const act_r47 = ctx_r76.act;
    const actionIndex_r48 = ctx_r76.actionIndex;
    const ctx_r49 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("mobileView", act_r47.dropdownConfig)("placement", "bottom-right")("autoClose", "outside");
    i0.ɵɵadvance(3);
    i0.ɵɵclassMapInterpolate1("a-action btn btn-link ", act_r47.className, " dropdown-toggle");
    i0.ɵɵpropertyInterpolate("adaptTooltip", act_r47.tooltip ? act_r47.tooltip : null);
    i0.ɵɵattribute("title", act_r47.tooltip ? null : act_r47.name)("aria-label", act_r47.name)("data-testid", ctx_r49.generateActionItemTestID(act_r47))("id", "action_" + actionIndex_r48);
    i0.ɵɵadvance(3);
    i0.ɵɵclassProp("a-dropdown-menu__mobile", !ctx_r49.isDesktop);
    i0.ɵɵattribute("ariaLabelledby", "action_" + actionIndex_r48);
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngIf", !ctx_r49.filterValue);
    i0.ɵɵadvance(5);
    i0.ɵɵproperty("ngIf", act_r47.header);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", i0.ɵɵpipeBind2(20, 19, act_r47.switcher.allItems.items, ctx_r49.filterValue));
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", ctx_r49.filterValue && !ctx_r49.filteredItems.length);
} }
function AdaptNavActionsComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n  ");
    i0.ɵɵtemplate(1, AdaptNavActionsComponent_ng_template_2_ng_container_1_Template, 27, 22, "ng-container", 0);
    i0.ɵɵtext(2, "\n");
} if (rf & 2) {
    const act_r47 = ctx.act;
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", act_r47.switcher);
} }
function AdaptNavActionsComponent_ng_container_5_ng_container_2_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function AdaptNavActionsComponent_ng_container_5_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n    ");
    i0.ɵɵtemplate(2, AdaptNavActionsComponent_ng_container_5_ng_container_2_ng_container_2_Template, 1, 0, "ng-container", 6);
    i0.ɵɵtext(3, "\n  ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const act_r80 = ctx.$implicit;
    const actionIndex_r81 = ctx.index;
    i0.ɵɵnextContext(2);
    const _r1 = i0.ɵɵreference(3);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", _r1)("ngTemplateOutletContext", i0.ɵɵpureFunction2(2, _c3, act_r80, actionIndex_r81));
} }
function AdaptNavActionsComponent_ng_container_5_ng_container_12_adapt_nav_action_subitem_4_Template(rf, ctx) { if (rf & 1) {
    const _r89 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "adapt-nav-action-subitem", 44);
    i0.ɵɵlistener("emitCloseDropdowns", function AdaptNavActionsComponent_ng_container_5_ng_container_12_adapt_nav_action_subitem_4_Template_adapt_nav_action_subitem_emitCloseDropdowns_0_listener() { i0.ɵɵrestoreView(_r89); const ctx_r88 = i0.ɵɵnextContext(3); return ctx_r88.closeAllDropdowns(); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const act_r83 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵproperty("item", act_r83);
} }
function AdaptNavActionsComponent_ng_container_5_ng_container_12_ng_container_6_ng_template_2_li_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "li", 18);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const act_r83 = i0.ɵɵnextContext(3).$implicit;
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(act_r83.header);
} }
function AdaptNavActionsComponent_ng_container_5_ng_container_12_ng_container_6_ng_template_2_li_5_div_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const sub_r97 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵclassMapInterpolate1("a-dropdown__link-disabled dropdown-item disabled ", sub_r97.className, "");
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n                    ", sub_r97.name, "\n                  ");
} }
function AdaptNavActionsComponent_ng_container_5_ng_container_12_ng_container_6_ng_template_2_li_5_adapt_nav_action_subitem_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "adapt-nav-action-subitem", 7);
} if (rf & 2) {
    const sub_r97 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵproperty("item", sub_r97);
} }
function AdaptNavActionsComponent_ng_container_5_ng_container_12_ng_container_6_ng_template_2_li_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "li", 19);
    i0.ɵɵtext(1, "\n\n                  ");
    i0.ɵɵtemplate(2, AdaptNavActionsComponent_ng_container_5_ng_container_12_ng_container_6_ng_template_2_li_5_div_2_Template, 2, 4, "div", 20);
    i0.ɵɵtext(3, "\n\n                  ");
    i0.ɵɵtemplate(4, AdaptNavActionsComponent_ng_container_5_ng_container_12_ng_container_6_ng_template_2_li_5_adapt_nav_action_subitem_4_Template, 1, 1, "adapt-nav-action-subitem", 3);
    i0.ɵɵtext(5, "\n                ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const sub_r97 = ctx.$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", sub_r97.disabled);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", !sub_r97.disabled);
} }
function AdaptNavActionsComponent_ng_container_5_ng_container_12_ng_container_6_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n              ");
    i0.ɵɵelementStart(1, "ul", 52);
    i0.ɵɵtext(2, "\n\n                ");
    i0.ɵɵtemplate(3, AdaptNavActionsComponent_ng_container_5_ng_container_12_ng_container_6_ng_template_2_li_3_Template, 2, 1, "li", 16);
    i0.ɵɵtext(4, "\n\n                ");
    i0.ɵɵtemplate(5, AdaptNavActionsComponent_ng_container_5_ng_container_12_ng_container_6_ng_template_2_li_5_Template, 6, 2, "li", 17);
    i0.ɵɵtext(6, "\n              ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(7, "\n            ");
} if (rf & 2) {
    const act_r83 = i0.ɵɵnextContext(2).$implicit;
    const ctx_r92 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵclassProp("a-dropdown-menu__mobile", !ctx_r92.isDesktop);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", act_r83.header);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", act_r83.subMenu);
} }
function AdaptNavActionsComponent_ng_container_5_ng_container_12_ng_container_6_span_7_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 53);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const act_r83 = i0.ɵɵnextContext(2).$implicit;
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(act_r83.count);
} }
function AdaptNavActionsComponent_ng_container_5_ng_container_12_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n\n            ");
    i0.ɵɵtemplate(2, AdaptNavActionsComponent_ng_container_5_ng_container_12_ng_container_6_ng_template_2_Template, 8, 4, "ng-template", null, 49, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵtext(4, "\n\n            ");
    i0.ɵɵelementStart(5, "button", 50);
    i0.ɵɵtext(6);
    i0.ɵɵtemplate(7, AdaptNavActionsComponent_ng_container_5_ng_container_12_ng_container_6_span_7_Template, 2, 1, "span", 51);
    i0.ɵɵtext(8, "\n            ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(9, "\n\n          ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const _r91 = i0.ɵɵreference(3);
    const act_r83 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance(5);
    i0.ɵɵpropertyInterpolate("adaptTooltip", act_r83.tooltip ? act_r83.tooltip : null);
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("adaptPopover", _r91)("popoverClass", "a-kebab-popover");
    i0.ɵɵattribute("class", "a-dropdown__link dropdown-item a-dropdown__submenu-handler btn btn-link " + act_r83.className)("title", act_r83.tooltip ? null : act_r83.name);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n              ", act_r83.name, "\n              ");
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", act_r83.count);
} }
function AdaptNavActionsComponent_ng_container_5_ng_container_12_ng_container_8_span_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 53);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const act_r83 = i0.ɵɵnextContext(2).$implicit;
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(act_r83.count);
} }
function AdaptNavActionsComponent_ng_container_5_ng_container_12_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    const _r109 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n\n            ");
    i0.ɵɵelementStart(2, "button", 54);
    i0.ɵɵlistener("shown", function AdaptNavActionsComponent_ng_container_5_ng_container_12_ng_container_8_Template_button_shown_2_listener() { i0.ɵɵrestoreView(_r109); const act_r83 = i0.ɵɵnextContext().$implicit; const ctx_r107 = i0.ɵɵnextContext(2); return ctx_r107.handlePopupOpenChange(true, act_r83); })("hidden", function AdaptNavActionsComponent_ng_container_5_ng_container_12_ng_container_8_Template_button_hidden_2_listener() { i0.ɵɵrestoreView(_r109); const act_r83 = i0.ɵɵnextContext().$implicit; const ctx_r110 = i0.ɵɵnextContext(2); return ctx_r110.handlePopupOpenChange(false, act_r83); });
    i0.ɵɵtext(3);
    i0.ɵɵtemplate(4, AdaptNavActionsComponent_ng_container_5_ng_container_12_ng_container_8_span_4_Template, 2, 1, "span", 51);
    i0.ɵɵtext(5, "\n            ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(6, "\n          ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const act_r83 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵpropertyInterpolate("adaptTooltip", act_r83.tooltip ? act_r83.tooltip : null);
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("adaptPopover", act_r83.popover)("popoverTitle", act_r83.name);
    i0.ɵɵattribute("class", "a-dropdown__link dropdown-item a-dropdown__submenu-handler btn btn-link " + act_r83.className)("title", act_r83.tooltip ? null : act_r83.name);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n              ", act_r83.name, "\n              ");
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", act_r83.count);
} }
function AdaptNavActionsComponent_ng_container_5_ng_container_12_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n        ");
    i0.ɵɵelementStart(2, "li", 19);
    i0.ɵɵtext(3, "\n\n          ");
    i0.ɵɵtemplate(4, AdaptNavActionsComponent_ng_container_5_ng_container_12_adapt_nav_action_subitem_4_Template, 1, 1, "adapt-nav-action-subitem", 43);
    i0.ɵɵtext(5, "\n\n          ");
    i0.ɵɵtemplate(6, AdaptNavActionsComponent_ng_container_5_ng_container_12_ng_container_6_Template, 10, 8, "ng-container", 0);
    i0.ɵɵtext(7, "\n\n          ");
    i0.ɵɵtemplate(8, AdaptNavActionsComponent_ng_container_5_ng_container_12_ng_container_8_Template, 7, 8, "ng-container", 0);
    i0.ɵɵtext(9, "\n        ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(10, "\n\n      ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const act_r83 = ctx.$implicit;
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngIf", !act_r83.subMenu && !act_r83.popover);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", act_r83.subMenu);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", act_r83.popover);
} }
function AdaptNavActionsComponent_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n  ");
    i0.ɵɵtemplate(2, AdaptNavActionsComponent_ng_container_5_ng_container_2_Template, 4, 5, "ng-container", 2);
    i0.ɵɵtext(3, "\n\n  ");
    i0.ɵɵelementStart(4, "div", 45, 46);
    i0.ɵɵtext(6, "\n\n    ");
    i0.ɵɵelementStart(7, "button", 47);
    i0.ɵɵtext(8, "\n    ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(9, "\n\n    ");
    i0.ɵɵelementStart(10, "ul", 48);
    i0.ɵɵtext(11, "\n\n      ");
    i0.ɵɵtemplate(12, AdaptNavActionsComponent_ng_container_5_ng_container_12_Template, 11, 3, "ng-container", 2);
    i0.ɵɵtext(13, "\n\n    ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(14, "\n  ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(15, "\n\n");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r3.actions);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("mobileView", ctx_r3.kebabView)("autoClose", "outside")("placement", "bottom-right");
    i0.ɵɵadvance(3);
    i0.ɵɵattribute("title", "Actions")("aria-label", "kebab");
    i0.ɵɵadvance(3);
    i0.ɵɵclassProp("a-dropdown-menu__mobile", !ctx_r3.isDesktop);
    i0.ɵɵattribute("ariaLabelledby", "kebab");
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r3.actions);
} }
function AdaptNavActionsItemComponent_ng_container_1_span_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 5);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r1.item.title);
} }
function AdaptNavActionsItemComponent_ng_container_1_a_4_span_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 8);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r5.item.count);
} }
function AdaptNavActionsItemComponent_ng_container_1_a_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "a", 6);
    i0.ɵɵtext(1, "\n        ");
    i0.ɵɵtemplate(2, AdaptNavActionsItemComponent_ng_container_1_a_4_span_2_Template, 2, 1, "span", 7);
    i0.ɵɵtext(3, "\n      ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext(2);
    i0.ɵɵpropertyInterpolate("adaptTooltip", ctx_r2.item.tooltip ? ctx_r2.item.tooltip : null);
    i0.ɵɵattribute("title", ctx_r2.item.tooltip ? null : ctx_r2.item.name)("aria-label", ctx_r2.item.name)("href", ctx_r2.item.link, i0.ɵɵsanitizeUrl)("target", ctx_r2.getTarget(ctx_r2.item))("class", "a-action " + ctx_r2.item.className)("data-testid", ctx_r2.generateActionItemTestID(ctx_r2.item));
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r2.item.count);
} }
function AdaptNavActionsItemComponent_ng_container_1_a_6_span_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 8);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r6.item.count);
} }
function AdaptNavActionsItemComponent_ng_container_1_a_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "a", 9);
    i0.ɵɵtext(1, "\n        ");
    i0.ɵɵtemplate(2, AdaptNavActionsItemComponent_ng_container_1_a_6_span_2_Template, 2, 1, "span", 7);
    i0.ɵɵtext(3, "\n      ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext(2);
    i0.ɵɵpropertyInterpolate("routerLink", ctx_r3.item.route);
    i0.ɵɵpropertyInterpolate("adaptTooltip", ctx_r3.item.tooltip ? ctx_r3.item.tooltip : null);
    i0.ɵɵattribute("title", ctx_r3.item.tooltip ? null : ctx_r3.item.name)("aria-label", ctx_r3.item.name)("class", "a-action " + ctx_r3.item.className)("data-testid", ctx_r3.generateActionItemTestID(ctx_r3.item));
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r3.item.count);
} }
function AdaptNavActionsItemComponent_ng_container_1_button_8_span_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 8);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r7.item.count);
} }
function AdaptNavActionsItemComponent_ng_container_1_button_8_Template(rf, ctx) { if (rf & 1) {
    const _r9 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 10);
    i0.ɵɵlistener("click", function AdaptNavActionsItemComponent_ng_container_1_button_8_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(2); return ctx_r8.item.action($event); });
    i0.ɵɵtext(1, "\n        ");
    i0.ɵɵtemplate(2, AdaptNavActionsItemComponent_ng_container_1_button_8_span_2_Template, 2, 1, "span", 7);
    i0.ɵɵtext(3, "\n      ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(2);
    i0.ɵɵpropertyInterpolate("adaptTooltip", ctx_r4.item.tooltip ? ctx_r4.item.tooltip : null);
    i0.ɵɵattribute("aria-label", ctx_r4.item.name)("title", ctx_r4.item.tooltip ? null : ctx_r4.item.name)("class", "a-action btn btn-link " + ctx_r4.item.className)("data-testid", ctx_r4.generateActionItemTestID(ctx_r4.item));
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r4.item.count);
} }
function AdaptNavActionsItemComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵtemplate(2, AdaptNavActionsItemComponent_ng_container_1_span_2_Template, 2, 1, "span", 1);
    i0.ɵɵtext(3, "\n      ");
    i0.ɵɵtemplate(4, AdaptNavActionsItemComponent_ng_container_1_a_4_Template, 4, 8, "a", 2);
    i0.ɵɵtext(5, "\n\n      ");
    i0.ɵɵtemplate(6, AdaptNavActionsItemComponent_ng_container_1_a_6_Template, 4, 7, "a", 3);
    i0.ɵɵtext(7, "\n\n      ");
    i0.ɵɵtemplate(8, AdaptNavActionsItemComponent_ng_container_1_button_8_Template, 4, 6, "button", 4);
    i0.ɵɵtext(9, "\n    ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r0.item.title);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r0.item.link);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r0.item.route);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r0.item.action);
} }
function AdaptNavActionsSubitemComponent_ng_container_1_a_2_span_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 6);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r4.item.count);
} }
function AdaptNavActionsSubitemComponent_ng_container_1_a_2_Template(rf, ctx) { if (rf & 1) {
    const _r6 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "a", 4);
    i0.ɵɵlistener("click", function AdaptNavActionsSubitemComponent_ng_container_1_a_2_Template_a_click_0_listener() { i0.ɵɵrestoreView(_r6); const ctx_r5 = i0.ɵɵnextContext(2); return ctx_r5.handleLinkClick(); });
    i0.ɵɵtext(1);
    i0.ɵɵtemplate(2, AdaptNavActionsSubitemComponent_ng_container_1_a_2_span_2_Template, 2, 1, "span", 5);
    i0.ɵɵtext(3, "\n      ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵattribute("href", ctx_r1.item.link, i0.ɵɵsanitizeUrl)("class", "a-dropdown__link dropdown-item " + ctx_r1.item.className)("data-testid", ctx_r1.generateActionSubItemTestID(ctx_r1.item))("target", ctx_r1.getTarget(ctx_r1.item));
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("", ctx_r1.item.name, "\n        ");
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r1.item.count);
} }
function AdaptNavActionsSubitemComponent_ng_container_1_a_4_span_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 6);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r8.item.count);
} }
function AdaptNavActionsSubitemComponent_ng_container_1_a_4_Template(rf, ctx) { if (rf & 1) {
    const _r10 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "a", 7, 8);
    i0.ɵɵlistener("click", function AdaptNavActionsSubitemComponent_ng_container_1_a_4_Template_a_click_0_listener() { i0.ɵɵrestoreView(_r10); const ctx_r9 = i0.ɵɵnextContext(2); return ctx_r9.handleRouteClick(); });
    i0.ɵɵtext(2);
    i0.ɵɵtemplate(3, AdaptNavActionsSubitemComponent_ng_container_1_a_4_span_3_Template, 2, 1, "span", 5);
    i0.ɵɵtext(4, "\n      ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const _r7 = i0.ɵɵreference(1);
    const ctx_r2 = i0.ɵɵnextContext(2);
    i0.ɵɵpropertyInterpolate("routerLink", ctx_r2.item.route);
    i0.ɵɵattribute("title", ctx_r2.item.name)("class", "a-dropdown__link dropdown-item " + ctx_r2.item.className)("aria-current", _r7.isActive ? "page" : undefined)("data-testid", ctx_r2.generateActionSubItemTestID(ctx_r2.item));
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("\n        ", ctx_r2.item.name, "\n        ");
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r2.item.count);
} }
function AdaptNavActionsSubitemComponent_ng_container_1_button_6_span_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 6);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r11 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r11.item.count);
} }
function AdaptNavActionsSubitemComponent_ng_container_1_button_6_Template(rf, ctx) { if (rf & 1) {
    const _r13 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 9);
    i0.ɵɵlistener("click", function AdaptNavActionsSubitemComponent_ng_container_1_button_6_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r13); const ctx_r12 = i0.ɵɵnextContext(2); return ctx_r12.handleActionClick($event); });
    i0.ɵɵtext(1);
    i0.ɵɵtemplate(2, AdaptNavActionsSubitemComponent_ng_container_1_button_6_span_2_Template, 2, 1, "span", 5);
    i0.ɵɵtext(3, "\n      ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("ngClass", ctx_r3.cssClass);
    i0.ɵɵattribute("data-testid", ctx_r3.generateActionSubItemTestID(ctx_r3.item))("title", ctx_r3.item.name);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("", ctx_r3.item.name, "\n        ");
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r3.item.count);
} }
function AdaptNavActionsSubitemComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵtemplate(2, AdaptNavActionsSubitemComponent_ng_container_1_a_2_Template, 4, 6, "a", 1);
    i0.ɵɵtext(3, "\n\n      ");
    i0.ɵɵtemplate(4, AdaptNavActionsSubitemComponent_ng_container_1_a_4_Template, 5, 7, "a", 2);
    i0.ɵɵtext(5, "\n\n      ");
    i0.ɵɵtemplate(6, AdaptNavActionsSubitemComponent_ng_container_1_button_6_Template, 4, 5, "button", 3);
    i0.ɵɵtext(7, "\n    ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r0.item.link);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r0.item.route);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r0.item.action);
} }
const _c4 = "[_nghost-%COMP%] { display: flex; align-items: inherit}";
let _testIdIndex = 1;
function _generateActionItemTestID(item) {
    if (!item.testID) {
        item.testID = `navigation-action-test-id-${_testIdIndex++}`;
    }
    return item.testID;
}
export class AdaptNavActionsComponent {
    constructor(el, ts, _adaptRadarService, _deviceDetector) {
        this.el = el;
        this.ts = ts;
        this._adaptRadarService = _adaptRadarService;
        this._deviceDetector = _deviceDetector;
        this.filterValue = '';
        this.filteredItems = [];
        this.defaultTexts = {
            switcher: {
                filter: {},
                notFoundText: ''
            }
        };
        this.onFilteringDebounce = debounce(this.onFiltering.bind(this), 100);
        this._destroyed$ = new ReplaySubject(1);
        this.setDefaultTexts(ts.getCurrentLanguage());
        this.isDesktop = this._deviceDetector.deviceDesktop();
    }
    ngOnInit() {
        this.texts = Object.assign(Object.assign({}, this.defaultTexts.switcher), this.texts);
    }
    ngOnChanges(changes) {
        if (changes.texts) {
            this.texts = Object.assign(Object.assign({}, this.defaultTexts.switcher), this.texts);
        }
    }
    /**
     * gets clientWidth, used by navigation
     */
    ngAfterViewInit() {
        this.clientWidth = this.el.nativeElement.clientWidth;
        if (this.switcherDropdown) {
            this.switcherDropdown.onOpen
                .pipe(takeUntil(this._destroyed$))
                .subscribe(() => {
                this.filterValue = '';
            });
        }
    }
    ngOnDestroy() {
        this._destroyed$.next(true);
        this._destroyed$.complete();
    }
    setDefaultTexts(translation) {
        this.defaultTexts.switcher = {
            notFoundText: translation['adapt.navigation.notFound'],
            filter: {
                placeholder: translation['adapt.common.search'],
                btnClearText: translation['adapt.common.clear'],
                btnSearchText: translation['adapt.common.search'],
                labelText: ''
            }
        };
    }
    getClientWidth() {
        return this.el.nativeElement.clientWidth;
    }
    /**
     * Check content type
     */
    // TODO: Refactor this if possible
    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
    isTemplate(content) {
        return content instanceof TemplateRef;
    }
    onFiltering(value, index) {
        this.filterValue = value;
        this.filteredItems =
            // TODO: Refactor this if possible
            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
            this.actions[index].switcher.allItems.items.filter(function (c) {
                return c.name.toLowerCase().indexOf(value.toLowerCase()) !== -1;
            });
    }
    closeAllDropdowns() {
        if (this.switcherDropdown) {
            this.switcherDropdown.close();
        }
        if (this.kebabDropdown) {
            this.kebabDropdown.close();
        }
    }
    handlePopupOpenChange(isOpened, act) {
        if (isFunction(act.action)) {
            act.action({ isOpened });
        }
    }
    generateActionItemTestID(item) {
        return _generateActionItemTestID(item);
    }
}
AdaptNavActionsComponent.ɵfac = function AdaptNavActionsComponent_Factory(t) { return new (t || AdaptNavActionsComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.AdaptTranslateService), i0.ɵɵdirectiveInject(i2.AdaptRadarAngularService), i0.ɵɵdirectiveInject(i3.AdaptDeviceDetectionService)); };
AdaptNavActionsComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptNavActionsComponent, selectors: [["adapt-nav-actions"]], viewQuery: function AdaptNavActionsComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 5);
        i0.ɵɵviewQuery(_c1, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.kebabDropdown = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.switcherDropdown = _t.first);
    } }, inputs: { actions: "actions", kebabMode: "kebabMode", kebabView: "kebabView", texts: "texts", getClientWidth: "getClientWidth", closeAllDropdowns: "closeAllDropdowns" }, features: [i0.ɵɵNgOnChangesFeature], decls: 7, vars: 2, consts: [[4, "ngIf"], ["switcherTmpl", ""], [4, "ngFor", "ngForOf"], [3, "item", 4, "ngIf"], ["adaptDropdown", "", "class", "dropdown", 3, "adaptRadarDisableEventSending", "mobileView", 4, "ngIf"], ["adaptDropdown", "", "class", "dropdown", 3, "adaptRadarDisableEventSending", "mobileView", "placement", "autoClose", "onOpen", "onClose", 4, "ngIf"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [3, "item"], ["adaptDropdown", "", 1, "dropdown", 3, "adaptRadarDisableEventSending", "mobileView"], ["type", "button", "adaptDropdownToggle", "", 3, "adaptTooltip"], ["class", "a-action__title p-end-1", 4, "ngIf"], ["class", "a-action__counter", 4, "ngIf"], ["adaptDropdownMenu", "", "class", "a-dropdown-menu a-dropdown-menu__light dropdown-menu", 3, "a-dropdown-menu__mobile", 4, "ngIf"], [1, "a-action__title", "p-end-1"], [1, "a-action__counter"], ["adaptDropdownMenu", "", 1, "a-dropdown-menu", "a-dropdown-menu__light", "dropdown-menu"], ["class", "dropdown-header", 4, "ngIf"], ["class", "a-dropdown__item", 4, "ngFor", "ngForOf"], [1, "dropdown-header"], [1, "a-dropdown__item"], [3, "class", 4, "ngIf"], [3, "item", "actionType", 4, "ngIf"], ["class", "dropdown-divider", 4, "ngIf"], [3, "item", "actionType"], [1, "dropdown-divider"], ["adaptDropdown", "", 1, "dropdown", 3, "adaptRadarDisableEventSending", "mobileView", "placement", "autoClose", "onOpen", "onClose"], ["dropdown", "adaptDropdown"], ["adaptDropdownToggle", "", "type", "button", 3, "adaptTooltip"], [3, "count", 4, "ngIf"], ["adaptDropdownMenu", "", 1, "dropdown-menu", "a-dropdown-menu", "dropdown-menu--right", "a-dropdown-menu__light"], [4, "ngIf", "ngIfThen", "ngIfElse"], ["tmplContent", ""], ["stringContent", ""], [3, "count"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["adaptDropdown", "", 1, "dropdown", "switcher-dropdown", 3, "adaptRadarDisableEventSending", "mobileView", "placement", "autoClose"], ["switcherDropdown", "adaptDropdown"], ["adaptDropdownMenu", "", 1, "a-dropdown-menu", "a-dropdown-menu__light", "dropdown-menu", "dropdown-menu--right", "pt-0"], ["class", "dropdown-header ", 4, "ngIf"], ["class", "a-dropdown__item switcher-dropdown__recent-item", 4, "ngFor", "ngForOf"], [1, "a-dropdown__item", "switcher-dropdown__recent-item"], [3, "customClass", "item", "actionType", "emitCloseDropdowns", 4, "ngIf"], [3, "customClass", "item", "actionType", "emitCloseDropdowns"], [3, "item", "emitCloseDropdowns", 4, "ngIf"], [3, "item", "emitCloseDropdowns"], ["adaptDropdown", "", 1, "dropdown", 3, "adaptRadarDisableEventSending", "mobileView", "autoClose", "placement"], ["kebabDropdown", "adaptDropdown"], ["type", "button", "adaptDropdownToggle", "", 1, "a-action", "btn", "btn-link", "d-icon-ellipsis", "dropdown-toggle", "kebab-menu"], ["adaptDropdownMenu", "", 1, "a-dropdown-menu", "dropdown-menu--right", "a-dropdown-menu__light", "dropdown-menu"], ["popContent", ""], ["type", "button", "placement", "left", "closeBtn", "true", "autoClose", "false", 3, "adaptRadarDisableEventSending", "adaptPopover", "popoverClass", "adaptTooltip"], ["class", "a-action__counter kebab-counter", 4, "ngIf"], [1, "action-popover-list", "a-dropdown-menu", "a-dropdown-menu__light"], [1, "a-action__counter", "kebab-counter"], ["type", "button", "placement", "left", "autoClose", "false", "closeBtn", "true", 3, "adaptRadarDisableEventSending", "adaptPopover", "popoverTitle", "adaptTooltip", "shown", "hidden"]], template: function AdaptNavActionsComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, AdaptNavActionsComponent_ng_container_0_Template, 4, 1, "ng-container", 0);
        i0.ɵɵtext(1, "\n\n");
        i0.ɵɵtemplate(2, AdaptNavActionsComponent_ng_template_2_Template, 3, 1, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtext(4, "\n\n");
        i0.ɵɵtemplate(5, AdaptNavActionsComponent_ng_container_5_Template, 16, 11, "ng-container", 0);
        i0.ɵɵtext(6, "\n");
    } if (rf & 2) {
        i0.ɵɵproperty("ngIf", !ctx.kebabMode);
        i0.ɵɵadvance(5);
        i0.ɵɵproperty("ngIf", ctx.kebabMode);
    } }, directives: function () { return [i4.NgIf, i4.NgForOf, i4.NgTemplateOutlet, AdaptNavActionsItemComponent, i5.AdaptDropdownDirective, i5.AdaptDropdownToggleDirective, i6.AdaptTooltipDirective, i5.AdaptDropdownMenuDirective, AdaptNavActionsSubitemComponent, i7.AdaptNavBadgeCounterComponent, i8.AdaptPopoverDirective]; }, pipes: function () { return [i9.AdaptNavTextSearchPipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptNavActionsComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-nav-actions',
                templateUrl: './nav.actions.component.html'
            }]
    }], function () { return [{ type: i0.ElementRef }, { type: i1.AdaptTranslateService }, { type: i2.AdaptRadarAngularService }, { type: i3.AdaptDeviceDetectionService }]; }, { actions: [{
            type: Input
        }], kebabMode: [{
            type: Input
        }], kebabView: [{
            type: Input
        }], texts: [{
            type: Input
        }], kebabDropdown: [{
            type: ViewChild,
            args: ['kebabDropdown']
        }], switcherDropdown: [{
            type: ViewChild,
            args: ['switcherDropdown', { static: false }]
        }], getClientWidth: [{
            type: Input
        }], closeAllDropdowns: [{
            type: Input
        }] }); })();
export class AdaptNavActionsItemComponent {
    getTarget(item) {
        return item.target ? item.target : '_self';
    }
    generateActionItemTestID(item) {
        return _generateActionItemTestID(item);
    }
}
AdaptNavActionsItemComponent.ɵfac = function AdaptNavActionsItemComponent_Factory(t) { return new (t || AdaptNavActionsItemComponent)(); };
AdaptNavActionsItemComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptNavActionsItemComponent, selectors: [["adapt-nav-action-item"]], inputs: { item: "item" }, decls: 2, vars: 1, consts: [[4, "ngIf"], ["class", "a-action__title", 4, "ngIf"], ["placement", "bottom", 3, "adaptTooltip", 4, "ngIf"], ["routerLinkActive", "active", "placement", "bottom", 3, "routerLink", "adaptTooltip", 4, "ngIf"], ["type", "button", "placement", "bottom", 3, "adaptTooltip", "click", 4, "ngIf"], [1, "a-action__title"], ["placement", "bottom", 3, "adaptTooltip"], ["class", "a-action__counter", 4, "ngIf"], [1, "a-action__counter"], ["routerLinkActive", "active", "placement", "bottom", 3, "routerLink", "adaptTooltip"], ["type", "button", "placement", "bottom", 3, "adaptTooltip", "click"]], template: function AdaptNavActionsItemComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtext(0, "\n    ");
        i0.ɵɵtemplate(1, AdaptNavActionsItemComponent_ng_container_1_Template, 10, 4, "ng-container", 0);
    } if (rf & 2) {
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx.item.hide);
    } }, directives: [i4.NgIf, i6.AdaptTooltipDirective, i10.RouterLinkWithHref, i10.RouterLinkActive], styles: [_c4] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptNavActionsItemComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-nav-action-item',
                styles: [':host { display: flex; align-items: inherit}'],
                template: `
    <ng-container *ngIf="!item.hide">
      <span class="a-action__title" *ngIf="item.title">{{item.title}}</span>
      <a *ngIf="item.link"
         [attr.title]="item.tooltip ? null : item.name"
         [attr.aria-label]="item.name"
         [attr.href]="item.link"
         [attr.target]="getTarget(item)"
         [attr.class]="'a-action ' + item.className"
         [attr.data-testid]="generateActionItemTestID(item)"
         adaptTooltip="{{item.tooltip ? item.tooltip : null}}" placement="bottom">
        <span class="a-action__counter" *ngIf="item.count">{{item.count}}</span>
      </a>

      <a *ngIf="item.route"
         [attr.title]="item.tooltip ? null : item.name"
         [attr.aria-label]="item.name"
         routerLink="{{item.route}}"
         routerLinkActive="active"
         [attr.class]="'a-action ' + item.className"
         [attr.data-testid]="generateActionItemTestID(item)"
         adaptTooltip="{{item.tooltip ? item.tooltip : null}}" placement="bottom">
        <span class="a-action__counter" *ngIf="item.count">{{item.count}}</span>
      </a>

      <button *ngIf="item.action"
              type="button"
              (click)="item.action($event)"
              [attr.aria-label]="item.name"
              [attr.title]="item.tooltip ? null : item.name"
              [attr.class]="'a-action btn btn-link ' + item.className"
              [attr.data-testid]="generateActionItemTestID(item)"
              adaptTooltip="{{item.tooltip ? item.tooltip : null}}" placement="bottom">
        <span class="a-action__counter" *ngIf="item.count">{{item.count}}</span>
      </button>
    </ng-container>`
            }]
    }], null, { item: [{
            type: Input
        }] }); })();
export class AdaptNavActionsSubitemComponent {
    constructor(_adaptRadarService) {
        this._adaptRadarService = _adaptRadarService;
        this.emitCloseDropdowns = new EventEmitter();
        this.cssClass = 'a-dropdown__link dropdown-item btn-link keyboard-focusable';
    }
    generateActionSubItemTestID(item) {
        if (!item.testID) {
            item.testID = `navigation-action-subitem-test-id-${_testIdIndex++}`;
        }
        return item.testID;
    }
    ngAfterContentInit() {
        // for back compatibility
        if (this.item.icon) {
            this.cssClass += ' ' + this.item.icon;
        }
        // regular class name passing by client (public API)
        if (this.item.className) {
            this.cssClass += ' ' + this.item.className;
        }
        // item might be already selected
        if (this.item.active) {
            this.cssClass += ' active';
        }
        // internal way to set class
        if (this.customClass) {
            this.cssClass += ' ' + this.customClass;
        }
    }
    // TODO: Refactor this if possible
    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
    getTarget(item) {
        return item.target ? item.target : '_self';
    }
    handleLinkClick() {
        this._adaptRadarService.sendCustomEventForAllProviders(AdaptRadarAngularCustomEventName.AdaptNavigationAction, {
            EventType: AdaptRadarAngularCustomEventType.Click,
            ActionType: this.actionType,
            Name: this.item.name,
            Type: 'link'
        });
    }
    handleRouteClick() {
        this._adaptRadarService.sendCustomEventForAllProviders(AdaptRadarAngularCustomEventName.AdaptNavigationAction, {
            EventType: AdaptRadarAngularCustomEventType.Click,
            ActionType: this.actionType,
            Name: this.item.name,
            Type: 'route'
        });
        this.closeDropdowns();
    }
    handleActionClick(event) {
        this._adaptRadarService.sendCustomEventForAllProviders(AdaptRadarAngularCustomEventName.AdaptNavigationAction, {
            EventType: AdaptRadarAngularCustomEventType.Click,
            ActionType: this.actionType,
            Name: this.item.name,
            Type: 'action'
        });
        this.closeDropdowns();
        this.item.action(event);
    }
    closeDropdowns() {
        this.emitCloseDropdowns.emit();
    }
}
AdaptNavActionsSubitemComponent.ɵfac = function AdaptNavActionsSubitemComponent_Factory(t) { return new (t || AdaptNavActionsSubitemComponent)(i0.ɵɵdirectiveInject(i2.AdaptRadarAngularService)); };
AdaptNavActionsSubitemComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptNavActionsSubitemComponent, selectors: [["adapt-nav-action-subitem"]], inputs: { item: "item", customClass: "customClass", actionType: "actionType" }, outputs: { emitCloseDropdowns: "emitCloseDropdowns" }, decls: 2, vars: 1, consts: [[4, "ngIf"], [3, "click", 4, "ngIf"], ["routerLinkActive", "active", 3, "routerLink", "click", 4, "ngIf"], ["type", "button", 3, "ngClass", "click", 4, "ngIf"], [3, "click"], ["class", "a-action__counter kebab-counter", 4, "ngIf"], [1, "a-action__counter", "kebab-counter"], ["routerLinkActive", "active", 3, "routerLink", "click"], ["routerLinkRef", "routerLinkActive"], ["type", "button", 3, "ngClass", "click"]], template: function AdaptNavActionsSubitemComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtext(0, "\n    ");
        i0.ɵɵtemplate(1, AdaptNavActionsSubitemComponent_ng_container_1_Template, 8, 3, "ng-container", 0);
    } if (rf & 2) {
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx.item.hide);
    } }, directives: [i4.NgIf, i10.RouterLinkWithHref, i10.RouterLinkActive, i4.NgClass], styles: [_c4] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptNavActionsSubitemComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-nav-action-subitem',
                styles: [':host { display: flex; align-items: inherit}'],
                template: `
    <ng-container *ngIf="!item.hide">
      <a *ngIf="item.link"
         [attr.href]="item.link"
         [attr.class]="'a-dropdown__link dropdown-item ' + item.className"
         [attr.data-testid]="generateActionSubItemTestID(item)"
         [attr.target]="getTarget(item)"
         (click)="handleLinkClick()">{{item.name}}
        <span class="a-action__counter kebab-counter" *ngIf="item.count">{{item.count}}</span>
      </a>

      <a *ngIf="item.route"
         #routerLinkRef="routerLinkActive"
         [attr.title]="item.name"
         [attr.class]="'a-dropdown__link dropdown-item ' + item.className"
         [attr.aria-current]="routerLinkRef.isActive ? 'page' : undefined"
         routerLink="{{item.route}}"
         [attr.data-testid]="generateActionSubItemTestID(item)"
         (click)="handleRouteClick()"
         routerLinkActive="active">
        {{item.name}}
        <span class="a-action__counter kebab-counter" *ngIf="item.count">{{item.count}}</span>
      </a>

      <button *ngIf="item.action"
              type="button"
              (click)="handleActionClick($event)"
              [ngClass]="cssClass"
              [attr.data-testid]="generateActionSubItemTestID(item)"
              [attr.title]="item.name">{{item.name}}
        <span class="a-action__counter kebab-counter" *ngIf="item.count">{{item.count}}</span>
      </button>
    </ng-container>`
            }]
    }], function () { return [{ type: i2.AdaptRadarAngularService }]; }, { item: [{
            type: Input
        }], customClass: [{
            type: Input
        }], actionType: [{
            type: Input
        }], emitCloseDropdowns: [{
            type: Output
        }] }); })();
//# sourceMappingURL=nav.actions.component.js.map