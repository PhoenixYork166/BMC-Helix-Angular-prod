{"version":3,"file":"promise-tracker.service.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/busy-loader/promise-tracker.service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @file Service: PromiseTracker\n * @author yumao<yuzhang.lille@gmail.com>\n */\n\n// Inspired by angular-promise-tracker\n// Add Observable Subscription\n\nimport {Injectable} from '@angular/core';\nimport {Subscription, Subject} from 'rxjs';\n\n@Injectable()\nexport class PromiseTrackerService {\n  promiseList: (Promise<unknown> | Subscription)[] = [];\n  delayPromise: number;\n  durationPromise: number;\n  delayJustFinished: boolean = false;\n  minDuration: number;\n  activeState$: Subject<boolean> = new Subject<boolean>();\n\n  reset(options: PromiseTrackerOptions): void {\n    this.minDuration = options.minDuration;\n\n    this.promiseList = [];\n    options.promiseList.forEach(promise => {\n      // Todo check if dot notation can be removed and types are refactored\n      // eslint-disable-next-line\n      if (!promise || promise['busyFulfilled']) {\n        return;\n      }\n      this.addPromise(promise);\n    });\n\n    if (this.promiseList.length === 0) {\n      this.activeState$.next(this.isActive());\n\n      return;\n    }\n\n    this.delayJustFinished = false;\n\n    if (options.delay) {\n      this.delayPromise = window.setTimeout(\n        () => {\n          this.delayPromise = null;\n          this.delayJustFinished = true;\n          this.activeState$.next(this.isActive());\n        },\n        options.delay\n      );\n    }\n\n    if (options.minDuration) {\n      this.durationPromise = window.setTimeout(\n        () => {\n          this.durationPromise = null;\n          this.activeState$.next(this.isActive());\n        },\n        options.minDuration + (options.delay || 0)\n      );\n    }\n  }\n\n  isActive(): boolean {\n    if (this.delayPromise) {\n      return false;\n    }\n\n    if (!this.delayJustFinished) {\n      if (this.durationPromise) {\n        return true;\n      }\n\n      return this.promiseList.length > 0;\n    }\n\n    this.delayJustFinished = false;\n\n    if (this.promiseList.length === 0) {\n      this.durationPromise = null;\n    }\n\n    return this.promiseList.length > 0;\n  }\n\n  private addPromise(promise: Promise<unknown> | Subscription): void {\n    if (this.promiseList.indexOf(promise) !== -1) {\n      return;\n    }\n\n    this.promiseList.push(promise);\n\n    if (promise instanceof Promise) {\n      promise.then.call(\n        promise,\n        () => this.finishPromise(promise),\n        () => this.finishPromise(promise)\n      );\n    } else if (promise instanceof Subscription) {\n      promise.add(() => this.finishPromise(promise));\n    }\n\n    this.activeState$.next(this.isActive());\n  }\n\n  private finishPromise(promise: Promise<unknown> | Subscription): void {\n    // TODO fix types\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    promise.busyFulfilled = true;\n    const index = this.promiseList.indexOf(promise);\n\n    if (index === -1) {\n      return;\n    }\n    this.promiseList.splice(index, 1);\n\n    this.activeState$.next(this.isActive());\n  }\n}\n\nexport interface PromiseTrackerOptions {\n  minDuration: number;\n  delay: number;\n  promiseList: Promise<unknown>[];\n}\n"]}