import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';
import { Directionality } from '@angular/cdk/bidi';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/bidi";
const _c0 = [[["adapt-workflow-bar"]], [["adapt-workflow-step"]]];
const _c1 = ["adapt-workflow-bar", "adapt-workflow-step"];
export class AdaptWorkflowComponent {
    constructor(dir) {
        this.dir = dir;
    }
}
AdaptWorkflowComponent.ɵfac = function AdaptWorkflowComponent_Factory(t) { return new (t || AdaptWorkflowComponent)(i0.ɵɵdirectiveInject(i1.Directionality)); };
AdaptWorkflowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptWorkflowComponent, selectors: [["adapt-workflow-vertical"]], hostVars: 2, hostBindings: function AdaptWorkflowComponent_HostBindings(rf, ctx) { if (rf & 2) {
        i0.ɵɵclassProp("a-workflow", true);
    } }, ngContentSelectors: _c1, decls: 7, vars: 2, consts: [[1, "a-workflow__stepper-content"]], template: function AdaptWorkflowComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵprojectionDef(_c0);
        i0.ɵɵprojection(0);
        i0.ɵɵtext(1, "\n");
        i0.ɵɵelementStart(2, "div", 0);
        i0.ɵɵtext(3, "\n  ");
        i0.ɵɵprojection(4, 1);
        i0.ɵɵtext(5, "\n");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(6, "\n\n\n");
    } if (rf & 2) {
        i0.ɵɵadvance(2);
        i0.ɵɵclassProp("is-rtl", ctx.dir.value === "rtl");
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptWorkflowComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-workflow-vertical',
                // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                host: { '[class.a-workflow]': 'true' },
                templateUrl: './workflow.html',
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: i1.Directionality }]; }, null); })();
//# sourceMappingURL=workflow.js.map