{"version":3,"file":"docked-panel.model.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/docked-panel/docked-panel.model.ts"],"names":[],"mappings":"AAEA,OAAO,EAAC,KAAK,EAAC,MAAM,WAAW,CAAC;AAChC,OAAO,EAAC,aAAa,EAAC,MAAM,0BAA0B,CAAC;AAEvD,MAAM,CAAN,IAAY,oBAIX;AAJD,WAAY,oBAAoB;IAC9B,yCAAiB,CAAA;IACjB,qCAAa,CAAA;IACb,uCAAe,CAAA;AACjB,CAAC,EAJW,oBAAoB,KAApB,oBAAoB,QAI/B;AAED,MAAM,CAAN,IAAY,sBAMX;AAND,WAAY,sBAAsB;IAChC,0CAAgB,CAAA;IAChB,uCAAa,CAAA;IACb,6CAAmB,CAAA;IACnB,uCAAa,CAAA;IACb,yCAAe,CAAA;AACjB,CAAC,EANW,sBAAsB,KAAtB,sBAAsB,QAMjC;AAiFD,MAAM,OAAO,mBAAmB;IAc9B,YAAY,MAAmB;QAT/B,aAAQ,GAAY,KAAK,CAAC;QAE1B,kBAAa,GAAY,KAAK,CAAC;QAQ7B,IAAI,CAAC,EAAE,GAAG,mBAAmB,CAAC,QAAQ,EAAE,CAAC;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAPD,MAAM,CAAC,QAAQ;QACb,OAAO,eAAe,GAAG,mBAAmB,CAAC,SAAS,EAAE,CAAC;IAC3D,CAAC;IAOD,YAAY,CAAC,MAAmB;QAC9B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC3C,CAAC;;AApBM,6BAAS,GAAW,CAAC,CAAC;AAuB/B,MAAM,OAAO,cAAe,SAAQ,aAAa;CAAG","sourcesContent":["import {TemplateRef, Type} from '@angular/core';\nimport {OverModal, OverModalConfig} from '../modal/index';\nimport {merge} from 'lodash-es';\nimport {PopupDeferred} from '../common/popup-deferred';\n\nexport enum DockedPanelDirection {\n  DEFAULT = 'right',\n  LEFT = 'left',\n  RIGHT = 'right',\n}\n\nexport enum DockedPanelFooterAlign {\n  DEFAULT = 'auto',\n  AUTO = 'auto',\n  REVERSE = 'reverse',\n  LEFT = 'left',\n  RIGHT = 'right',\n}\n\n// TODO: Refactor this if possible\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nexport type DockedPanelContent = string | TemplateRef<any> | Type<any>;\n\nexport interface DockedPanel {\n  /**\n   * DockedPanel open direction\n   */\n  direction?: DockedPanelDirection | string; // 'string' type is temporary. Needs for backward compatibility\n\n  /**\n   * DockedPanel title\n   */\n  title?: string;\n\n  /**\n   * DockedPanel content. Can be string, template or component\n   */\n  content?: DockedPanelContent;\n\n  /**\n   * Footer appearance: always be in the bottom of the docked panel (dy default) or float with content on scroll\n   */\n  floatFooter?: boolean;\n\n  /**\n   * Footer content align\n   */\n  footerAlign?: DockedPanelFooterAlign | string; // 'string' type is temporary. Needs for backward compatibility\n\n  /**\n   * OverModal config\n   */\n  overModal?: OverModal | OverModalConfig;\n\n  /**\n   * Flag to hide/show backdrop\n   */\n  hideBackdrop?: boolean;\n\n  /**\n   * Flag to allow/reject dismiss action on backdrop click\n   */\n  blockDismiss?: boolean;\n\n  /**\n   * Flag to allow/reject dismiss action on ESC click\n   */\n  blockKeyboard?: boolean;\n\n  // TODO: Refactor this if possible\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  /**\n   * Callback on dismiss. If returns false, dismiss action will be refused\n   */\n  beforeDismiss?: (reason: any) => boolean;\n\n  /**\n   * Custom data. can be used in template\n   */\n  data?: any;\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n\n  /**\n   * Docked panel size\n   */\n  size?: string;\n\n  /**\n   * Used to create data-testid attribute that can be used for testing purpose\n   */\n  testID?: string;\n\n  /**\n   * Close all dropdowns/popover while dockedPanel is opened\n   */\n  closeAllOpenedItems?: boolean;\n}\n\nexport class DockedPanelInstance {\n  static idCounter: number = 1;\n\n  id: string;\n  config: DockedPanel;\n  inactive: boolean = false;\n  promise: DockedDeferred;\n  overModalOpen: boolean = false;\n  contentInstanceRef: unknown;\n\n  static getNewId(): string {\n    return 'docked-panel-' + DockedPanelInstance.idCounter++;\n  }\n\n  constructor(config: DockedPanel) {\n    this.id = DockedPanelInstance.getNewId();\n    this.config = config;\n  }\n\n  updateConfig(config: DockedPanel): void {\n    this.config = merge(this.config, config);\n  }\n}\n\nexport class DockedDeferred extends PopupDeferred {}\n"]}