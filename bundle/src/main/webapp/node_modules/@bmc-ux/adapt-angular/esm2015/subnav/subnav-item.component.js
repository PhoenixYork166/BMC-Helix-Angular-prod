import { ChangeDetectorRef, Component, ElementRef, Input, Renderer2, TemplateRef, ViewChild, ViewContainerRef } from '@angular/core';
import { SafeCdr } from '../common/safe-cdr';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
const _c0 = ["container"];
function AdaptSubnavItemComponent_ng_template_3_Template(rf, ctx) { }
const _c1 = function (a0) { return { $implicit: a0 }; };
export class AdaptSubnavItemComponent {
    constructor(_elementRef, _renderer, _changeDetectorRef) {
        this._elementRef = _elementRef;
        this._renderer = _renderer;
        this._changeDetectorRef = _changeDetectorRef;
        /**
         * Default css class list for host element
         * @docs-default d-block
         */
        this.defaultCssClass = 'd-block';
        /**
         * Prevent item to be hidden
         * @docs-default false
         */
        this.preventHiding = false;
        /**
         * Visibility priority
         * @docs-default 0
         */
        this.priority = 0;
        this._isHidden = false;
        this._width = 0;
    }
    set isHidden(v) {
        this._isHidden = v;
        SafeCdr.detectChanges(this._changeDetectorRef);
    }
    get isHidden() {
        return this._isHidden;
    }
    get width() {
        if (!this.isHidden) {
            this._width = this._elementRef.nativeElement.offsetWidth;
        }
        return this._width;
    }
    ngOnInit() {
        this.defaultCssClass.split(' ').forEach(cssClass => {
            this._renderer.addClass(this._elementRef.nativeElement, cssClass);
        });
    }
}
AdaptSubnavItemComponent.ɵfac = function AdaptSubnavItemComponent_Factory(t) { return new (t || AdaptSubnavItemComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
AdaptSubnavItemComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptSubnavItemComponent, selectors: [["adapt-subnav-item"], ["", "adaptSubnavItem", ""]], viewQuery: function AdaptSubnavItemComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 7, ViewContainerRef);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);
    } }, inputs: { adaptSubnavItem: "adaptSubnavItem", defaultCssClass: "defaultCssClass", preventHiding: "preventHiding", priority: "priority" }, decls: 6, vars: 4, consts: [[3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["emptyTmpl", ""]], template: function AdaptSubnavItemComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtext(0, "\n      ");
        i0.ɵɵelementContainer(1, 0);
        i0.ɵɵtext(2, "\n\n      ");
        i0.ɵɵtemplate(3, AdaptSubnavItemComponent_ng_template_3_Template, 0, 0, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtext(5, "\n  ");
    } if (rf & 2) {
        const _r0 = i0.ɵɵreference(4);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", !ctx.isHidden ? ctx.adaptSubnavItem : _r0)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c1, ctx.isHidden));
    } }, directives: [i1.NgTemplateOutlet], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptSubnavItemComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-subnav-item, [adaptSubnavItem]',
                template: `
      <ng-container [ngTemplateOutlet]="!isHidden ? adaptSubnavItem : emptyTmpl"
                    [ngTemplateOutletContext]="{$implicit: isHidden}"></ng-container>

      <ng-template #emptyTmpl></ng-template>
  `
            }]
    }], function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }]; }, { adaptSubnavItem: [{
            type: Input
        }], defaultCssClass: [{
            type: Input
        }], preventHiding: [{
            type: Input
        }], priority: [{
            type: Input
        }], container: [{
            type: ViewChild,
            args: ['container', { read: ViewContainerRef, static: true }]
        }] }); })();
//# sourceMappingURL=subnav-item.component.js.map