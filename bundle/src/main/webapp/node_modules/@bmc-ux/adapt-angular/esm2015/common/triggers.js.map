{"version":3,"file":"triggers.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/common/triggers.ts"],"names":[],"mappings":"AAAA,uEAAuE;AACvE,iCAAiC;AACjC,gFAAgF;AAGhF,OAAO,EAAC,eAAe,EAAC,MAAM,aAAa,CAAC;AAC5C,OAAO,EAAC,MAAM,EAAE,KAAK,EAAC,MAAM,uBAAuB,CAAC;AAEpD,MAAM,OAAO,OAAO;IAClB,YAAmB,IAAY,EAAS,KAAc;QAAnC,SAAI,GAAJ,IAAI,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAS;QACpD,IAAI,CAAC,KAAK,EAAE;YACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACnB;IACH,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,KAAK,KAAK,QAAQ,CAAC;IAC3D,CAAC;CACF;AAED,MAAM,eAAe,GAAG;IACtB,KAAK,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;CACpC,CAAC;AAEF,MAAM,UAAU,aAAa,CAAC,QAAgB,EAAE,UAAoC,eAAe;IACjG,MAAM,eAAe,GAAG,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;IAEhD,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;QAChC,OAAO,EAAE,CAAC;KACX;IAED,MAAM,cAAc,GAAG,eAAe,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE;QACzG,MAAM,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC;QAErD,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,MAAM,cAAc,GAAG,cAAc,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;IAEpF,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;QAC7B,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;KAC7E;IAED,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;QAC5D,MAAM,IAAI,KAAK,CAAC,0EAA0E,CAAC,CAAC;KAC7F;IAED,OAAO,cAAc,CAAC;AACxB,CAAC;AAED,MAAM,MAAM,GAAG,GAAS,EAAE;IACxB,OAAO;AACT,CAAC,CAAC;AAEF,MAAM,UAAU,gBAAgB,CAC9B,QAAmB,EACnB,aAAsB,EACtB,QAAgB;AAChB,kCAAkC;AAClC,uDAAuD;AACvD,MAAW,EACX,OAAY,EACZ,QAAa;AACb,sDAAsD;;IAEtD,MAAM,cAAc,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC/C,MAAM,SAAS,GAAG,EAAE,CAAC;IAErB,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE;QAC/D,OAAO,MAAM,CAAC;KACf;IAED,cAAc,CAAC,OAAO,CAAC,CAAC,OAAgB,EAAE,EAAE;QAC1C,IAAI,OAAO,CAAC,IAAI,EAAE;YAChB,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,EAAE,SAAS,EAAE,CAAC,KAAoB,EAAE,EAAE;gBAChF,IAAI,eAAe,CAAC,KAAK,CAAC,KAAK,KAAK,EAAE;oBACpC,MAAM,EAAE,CAAC;iBACV;YACH,CAAC,CAAC,CAAC,CAAC;SACL;QAED,IAAI,OAAO,CAAC,KAAK,EAAE;YACjB,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,EAAE,SAAS,EAAE,CAAC,KAAoB,EAAE,EAAE;gBAChF,IAAI,eAAe,CAAC,KAAK,CAAC,KAAK,MAAM,EAAE;oBACrC,OAAO,EAAE,CAAC;iBACX;YACH,CAAC,CAAC,CAAC,CAAC;SACL;QAED,IAAI,OAAO,CAAC,IAAI,KAAK,OAAO,CAAC,KAAK,EAAE;YAClC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,EAAE,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;SACxE;aAAM;YACL,SAAS,CAAC,IAAI,CACZ,QAAQ,CAAC,MAAM,CAAC,aAAa,EAAE,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,aAAa,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;SACjH;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,GAAG,EAAE;QACV,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;IACtD,CAAC,CAAC;AACJ,CAAC","sourcesContent":["// Based on ng-bootstrap (https://github.com/ng-bootstrap/ng-bootstrap)\n// Licensed under the MIT License\n// https://github.com/ng-bootstrap/ng-bootstrap/blob/master/src/util/triggers.ts\n\nimport {Renderer2} from '@angular/core';\nimport {getEventKeyCode} from './key-codes';\nimport {ESCAPE, ENTER} from '@angular/cdk/keycodes';\n\nexport class Trigger {\n  constructor(public open: string, public close?: string) {\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  isManual(): boolean {\n    return this.open === 'manual' || this.close === 'manual';\n  }\n}\n\nconst DEFAULT_ALIASES = {\n  hover: ['mouseenter', 'mouseleave']\n};\n\nexport function parseTriggers(triggers: string, aliases: Record<string, string[]> = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n    const alias = aliases[triggerPair[0]] || triggerPair;\n\n    return new Trigger(alias[0], alias[1]);\n  });\n\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw new Error('Triggers parse error: only one manual trigger is allowed');\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw new Error('Triggers parse error: manual trigger can\\'t be mixed with other triggers');\n  }\n\n  return parsedTriggers;\n}\n\nconst noopFn = (): void => {\n  return;\n};\n\nexport function listenToTriggers(\n  renderer: Renderer2,\n  nativeElement: unknown,\n  triggers: string,\n  // TODO: Refactor this if possible\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  openFn: any,\n  closeFn: any,\n  toggleFn: any\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n): () => void {\n  const parsedTriggers = parseTriggers(triggers);\n  const listeners = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return noopFn;\n  }\n\n  parsedTriggers.forEach((trigger: Trigger) => {\n    if (trigger.open) {\n      listeners.push(renderer.listen(nativeElement, 'keydown', (event: KeyboardEvent) => {\n        if (getEventKeyCode(event) === ENTER) {\n          openFn();\n        }\n      }));\n    }\n\n    if (trigger.close) {\n      listeners.push(renderer.listen(nativeElement, 'keydown', (event: KeyboardEvent) => {\n        if (getEventKeyCode(event) === ESCAPE) {\n          closeFn();\n        }\n      }));\n    }\n\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n    } else {\n      listeners.push(\n        renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n    }\n  });\n\n  return () => {\n    listeners.forEach(unsubscribeFn => unsubscribeFn());\n  };\n}\n"]}