import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
const _c0 = function (a0, a1) { return { "a-action__counter_sm": a0, "a-action__counter_lg": a1 }; };
export class AdaptNavBadgeCounterComponent {
    constructor() {
        this.count = 0;
    }
    ngOnChanges(changes) {
        if (changes.count && changes.count.currentValue !== changes.count.previousValue) {
            this.formattedNumber = this.format(this.count);
        }
    }
    format(num) {
        return (0 < num && num < 100) ? num.toString() : '99+';
    }
    isSingle(num) {
        return num.length === 1;
    }
    isMaxLength(num) {
        return num.length === 3;
    }
}
AdaptNavBadgeCounterComponent.ɵfac = function AdaptNavBadgeCounterComponent_Factory(t) { return new (t || AdaptNavBadgeCounterComponent)(); };
AdaptNavBadgeCounterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptNavBadgeCounterComponent, selectors: [["adapt-nav-badge-counter"]], inputs: { count: "count" }, features: [i0.ɵɵNgOnChangesFeature], decls: 3, vars: 5, consts: [[1, "a-action__counter", 3, "ngClass"]], template: function AdaptNavBadgeCounterComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 0);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
        i0.ɵɵtext(2, "\n");
    } if (rf & 2) {
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(2, _c0, ctx.isSingle(ctx.formattedNumber), ctx.isMaxLength(ctx.formattedNumber)));
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1("", ctx.formattedNumber, "\n");
    } }, directives: [i1.NgClass], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptNavBadgeCounterComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-nav-badge-counter',
                templateUrl: './nav-badge-counter.component.html'
            }]
    }], null, { count: [{
            type: Input
        }] }); })();
//# sourceMappingURL=nav-badge-counter.component.js.map