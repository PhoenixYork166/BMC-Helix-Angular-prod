{"version":3,"file":"busy-config.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/busy-loader/busy-config.ts"],"names":[],"mappings":"AAGA,MAAM,CAAN,IAAY,eAGX;AAHD,WAAY,eAAe;IACzB,mDAAO,CAAA;IACP,qDAAQ,CAAA;AACV,CAAC,EAHW,eAAe,KAAf,eAAe,QAG1B;AAED,MAAM,CAAC,MAAM,oBAAoB,GAAG;IAClC,KAAK,EAAE,CAAC;IACR,WAAW,EAAE,CAAC;IACd,QAAQ,EAAE,IAAI;IACd,OAAO,EAAE,uBAAuB;IAChC,YAAY,EAAE,SAAS;IACvB,UAAU,EAAE,KAAK;IACjB,YAAY,EAAE,EAAE;IAChB,MAAM,EAAE,KAAK;IACb,SAAS,EAAE,GAAG;IACd,SAAS,EAAE,eAAe,CAAC,GAAG;IAC9B,eAAe,EAAE,IAAI;IACrB,WAAW,EAAE,EAAE;CAChB,CAAC;AAoEF,MAAM,OAAO,eAAe;IAW1B,YAAY,SAAqB,EAAE;QACjC,KAAK,MAAM,MAAM,IAAI,oBAAoB,EAAE;YACzC,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,oBAAoB,EAAE,MAAM,CAAC,EAAE;gBACtE,IAAI,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;aACvF;SACF;IACH,CAAC;CACF;AAED,MAAM,OAAO,UAAU;;AACL,cAAG,GAAW,KAAK,CAAC;AACpB,eAAI,GAAW,MAAM,CAAC;AACtB,oBAAS,GAAW,UAAU,CAAC;AAC/B,kBAAO,GAAW,SAAS,CAAC;AAC5B,iBAAM,GAAW,QAAQ,CAAC;AAC1B,eAAI,GAAW,YAAY,CAAC;AAC5B,kBAAO,GAAW,eAAe,CAAC","sourcesContent":["import {Subscription} from 'rxjs';\nimport {TemplateRef} from '@angular/core';\n\nexport enum LoaderInOutType {\n  fly = 1,\n  fade = 2,\n}\n\nexport const BUSY_CONFIG_DEFAULTS = {\n  delay: 0,\n  minDuration: 0,\n  backdrop: true,\n  message: 'adapt.busy.pleaseWait',\n  wrapperClass: 'ng-busy',\n  loaderType: 'app',\n  overlayClass: '',\n  sticky: false,\n  offsetTop: '0',\n  inOutType: LoaderInOutType.fly,\n  percentageValue: null,\n  loaderClass: ''\n};\n\nexport interface BusyConfig {\n  type?: string;\n  /**\n   * The amount of time to wait until showing the indicator. Specified in milliseconds\n   */\n  delay?: number;\n  /**\n   * The amount of time to keep the indicator showing even if the busy thing was completed quicker. Specified in milliseconds\n   */\n  minDuration?: number;\n  /**\n   * A faded backdrop will be shown behind the indicator if true\n   */\n  backdrop?: boolean;\n  /**\n   * The message to show in the indicator which will reflect the updated values as they are changed\n   */\n  message?: string;\n  /**\n   * The name(s) of the CSS classes to be applied to the wrapper element of the indicator\n   */\n  wrapperClass?: string;\n  /**\n   * A busy thing (or an array of busy things) that will cause the loading indicator to show\n   */\n  busy?: Promise<unknown> | Subscription | (Promise<unknown> | Subscription)[];\n  /**\n   * Type of loader\n   */\n  loaderType?: string;\n  /**\n   * Name of the CSS class to be applied to style faded backdrop\n   */\n  overlayClass?: string;\n  /**\n   * Available for lineLoader type only. Loader will be top fixed on scroll if true\n   */\n  sticky?: boolean;\n  /**\n   * Available for lineLoader type only. Specify the fixed top value\n   */\n  offsetTop?: string;\n  inOutType?: LoaderInOutType;\n  /**\n   * Value of the progress\n   * @since v11.7.0\n   */\n  percentageValue?: number;\n  /**\n   * The name(s) of the CSS classes to be applied to loader element. Applicable for the special loader only\n   * @since v11.7.0\n   */\n  loaderClass?: string;\n  /**\n   * The image href to be applied to loader element. Applicable for the special loader only of type determinate\n   * @since v11.7.0\n   */\n  loaderImg?: string;\n  /**\n   * Additional content info to be provided for the loader element. Applicable for the special loader only of type determinate\n   * @since v11.7.0\n   */\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  content?: TemplateRef<any>;\n}\n\nexport class AdaptBusyConfig implements BusyConfig {\n  delay: number;\n  minDuration: number;\n  backdrop: boolean;\n  message: string;\n  wrapperClass: string;\n  overlayClass: string;\n  sticky: boolean;\n  offsetTop: string;\n  percentageValue: number;\n\n  constructor(config: BusyConfig = {}) {\n    for (const option in BUSY_CONFIG_DEFAULTS) {\n      if (Object.prototype.hasOwnProperty.call(BUSY_CONFIG_DEFAULTS, option)) {\n        this[option] = config[option] != null ? config[option] : BUSY_CONFIG_DEFAULTS[option];\n      }\n    }\n  }\n}\n\nexport class LoaderType {\n  static readonly APP: string = 'app';\n  static readonly PAGE: string = 'page';\n  static readonly FULL_PAGE: string = 'fullPage';\n  static readonly SECTION: string = 'section';\n  static readonly INLINE: string = 'inline';\n  static readonly LINE: string = 'lineLoader';\n  static readonly SPECIAL: string = 'specialLoader';\n}\n"]}