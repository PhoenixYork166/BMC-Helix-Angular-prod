import { Directive, ElementRef, Input, Output, EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
export class AdaptLazyLoadAnchorDirective {
    constructor(_elem) {
        this._elem = _elem;
        // Default values set based on https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API
        this.lazyLoadRootContainer = null;
        this.lazyLoadThresholds = 0;
        this.lazyLoadRootContainerMargin = '0px 0px 0px 0px';
        this.lazyLoad = new EventEmitter();
    }
    get lazyLoadOptions() {
        return {
            root: this.lazyLoadRootContainer,
            thresholds: this.lazyLoadThresholds,
            rootMargin: this.lazyLoadRootContainerMargin
        };
    }
    ngOnInit() {
        this._observer = new IntersectionObserver(([entry]) => {
            if (entry.isIntersecting) {
                this.lazyLoad.emit();
            }
        }, this.lazyLoadOptions);
        this._observer.observe(this._elem.nativeElement);
    }
    ngOnDestroy() {
        this._observer.disconnect();
    }
}
AdaptLazyLoadAnchorDirective.ɵfac = function AdaptLazyLoadAnchorDirective_Factory(t) { return new (t || AdaptLazyLoadAnchorDirective)(i0.ɵɵdirectiveInject(i0.ElementRef)); };
AdaptLazyLoadAnchorDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: AdaptLazyLoadAnchorDirective, selectors: [["", "adaptLazyLoadAnchor", ""]], inputs: { lazyLoadRootContainer: "lazyLoadRootContainer", lazyLoadThresholds: "lazyLoadThresholds", lazyLoadRootContainerMargin: "lazyLoadRootContainerMargin" }, outputs: { lazyLoad: "lazyLoad" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptLazyLoadAnchorDirective, [{
        type: Directive,
        args: [{
                selector: '[adaptLazyLoadAnchor]'
            }]
    }], function () { return [{ type: i0.ElementRef }]; }, { lazyLoadRootContainer: [{
            type: Input
        }], lazyLoadThresholds: [{
            type: Input
        }], lazyLoadRootContainerMargin: [{
            type: Input
        }], lazyLoad: [{
            type: Output
        }] }); })();
//# sourceMappingURL=lazy-load-anchor.directive.js.map