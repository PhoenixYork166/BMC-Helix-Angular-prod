{"version":3,"file":"alert.component.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/alert/alert.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport {transition, trigger, useAnimation} from '@angular/animations';\nimport {AdaptAlertConfig} from './alert.config';\nimport {ANIMATION_NAME, ANIMATION_TIMING_FUNCTION} from '../common/animation';\nimport {isUndefined} from '../common/utilities';\nimport {AdaptTranslateService} from '../common/i18n/index';\nimport {ColorVariantType} from '../common/common.models';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularGenericDirective,\n  AdaptRadarAngularService\n} from '../common/radar/adapt-radar';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'adapt-alert',\n  template: `\n    <p [class]=\"_config.type === 'inline' ? 'text-' + _config.variant :\n        'alert alert-' + _config.variant + (_config.type === 'page' ? ' page-alert m-0' : '')\"\n       [attr.role]=\"showDismissBtn ? 'alertdialog' : 'alert'\"\n       [attr.aria-labelledby]=\"_config.title && uniqueTitleId || uniqueContentId\">\n\n      <span *ngIf=\"_config.icon\"\n            role=\"img\"\n            [attr.aria-label]=\"_config.variant\"\n            [class]=\"(_config.type === 'inline' ? 'alert-icon-inline ' : 'alert-icon ') + _iconSet[_config.variant]\">\n      </span>\n\n      <span class=\"alert-icon-lockup-space\"\n            *ngIf=\"_config.type === 'inline'\"></span>\n\n      <span class=\"alert-content text-url-break-out\" [attr.id]=\"_config.title && uniqueTitleId || uniqueContentId\">\n        <strong *ngIf=\"_config.title\">\n          {{_config.title}}\n        </strong>\n        <ng-content></ng-content>\n\n        <ng-template *ngIf=\"isTemplate(_config.content); then tmplContent; else stringContent\"></ng-template>\n\n        <ng-template #tmplContent>\n          <ng-container [ngTemplateOutlet]=\"_config.content\"\n                        [ngTemplateOutletContext]=\"_context\"></ng-container>\n        </ng-template>\n        <ng-template #stringContent>{{_config.content}}</ng-template>\n      </span>\n\n      <button *ngIf=\"showDismissBtn\"\n              role=\"button\"\n              type=\"button\"\n              class=\"adapt-alert-close d-icon-cross\"\n              [attr.aria-label]=\"closeText\"\n              #dismissBtn\n              (click)=\"close()\">\n      </button>\n    </p>\n  `,\n  animations: [\n    trigger('alertAnimation', [\n      transition('void => *', [\n        useAnimation(ANIMATION_NAME.height, {\n          params: {\n            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionIn,\n          }\n        })\n      ]),\n      transition('* => void', [\n        useAnimation(ANIMATION_NAME.height, {\n          params: {\n            from: '*',\n            to: '0',\n            timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionOut,\n          }\n        })\n      ])\n    ])\n  ],\n  preserveWhitespaces: true,\n  styles: ['.alert-icon-lockup-space { padding-right: .5965em }']\n})\nexport class AdaptAlertComponent extends AdaptRadarAngularGenericDirective implements OnInit, AfterViewInit {\n  /**\n   * Context for custom template\n   */\n  _context: { close: () => void } = {close: this.close.bind(this)};\n\n  /**\n   * Alert current state\n   */\n  _config: Alert = {\n    title: '',\n    type: 'section',\n    variant: 'primary',\n    icon: true,\n    dismissible: true,\n    content: ''\n  };\n\n  /**\n   * Standard alert icons\n   */\n  _iconSet: Record<string, string> = {\n    'primary': 'd-none',\n    'success': 'd-icon-check_circle',\n    'info': 'd-icon-info_circle',\n    'warning': 'd-icon-exclamation_circle',\n    'danger': 'd-icon-exclamation_triangle'\n  };\n\n  closeText: string;\n\n  colorText: string;\n\n  /* lint suggestion: Use @HostBindings and @HostListeners instead of the host property (https://angular.io/styleguide#style-06-03) */\n  @HostBinding('style.display') display: string = 'block';\n  @HostBinding('style.overflow') overflow: string = 'hidden';\n  @HostBinding('@alertAnimation') alertAnimaton: string = 'true';\n\n\n  /**\n   * Object for alert configuration (see an example bellow).\n   * @docs-default\n   */\n  @Input()\n  set config(v: Alert) {\n    this._config = v;\n\n    this._checkConfig();\n  }\n\n  /* eslint-disable @angular-eslint/no-output-on-prefix */\n  /**\n   * On alert close event\n   */\n  @Output() readonly onClose: EventEmitter<void> = new EventEmitter();\n  /* eslint-enable @angular-eslint/no-output-on-prefix */\n\n  @ViewChild('dismissBtn', {static: true}) dismissBtn: ElementRef;\n\n  get showDismissBtn(): boolean {\n    return (this._config.type !== 'inline') && this._config.dismissible;\n  }\n\n  readonly uniqueId: string = `adapt-alert-${++nextUniqueId}`;\n  readonly uniqueTitleId: string = `${this.uniqueId}-title`;\n  readonly uniqueContentId: string = `${this.uniqueId}-content`;\n\n  constructor(public _defaultConfig: AdaptAlertConfig,\n              public ts: AdaptTranslateService,\n              _adaptRadarService: AdaptRadarAngularService,\n              _elem: ElementRef<HTMLElement>) {\n    super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptAlert);\n\n    this.closeText = ts.getCurrentLanguage()['adapt.common.close'];\n  }\n\n  ngOnInit(): void {\n    this._checkConfig();\n  }\n\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n\n    if (this.showDismissBtn && this.dismissBtn) {\n      this.dismissBtn.nativeElement.focus();\n    }\n  }\n\n  /**\n   * On close button click handler\n   */\n  close(): void {\n    this.onClose.emit();\n  }\n\n  /**\n   * Check content type\n   */\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  isTemplate(content: string | TemplateRef<any>): boolean {\n    return content instanceof TemplateRef;\n  }\n\n  /**\n   * Checking for the config changes\n   */\n\n  private _checkConfig(): void {\n\n    if (isUndefined(this._config.type)) {\n      this._config.type = this._defaultConfig.type;\n    }\n\n    if (isUndefined(this._config.variant)) {\n      this._config.variant = this._defaultConfig.variant;\n    }\n\n    if (isUndefined(this._config.icon)) {\n      this._config.icon = this._defaultConfig.icon;\n    }\n\n    if (isUndefined(this._config.dismissible)) {\n      this._config.dismissible = this._defaultConfig.dismissible;\n    }\n  }\n}\n\n/**\n * Describes AlertConfig structure\n */\nexport interface Alert {\n  title?: string;\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  content?: string | TemplateRef<any>;\n  type?: 'section' | 'page' | 'inline';\n  variant?: ColorVariantType;\n  icon?: boolean;\n  dismissible?: boolean;\n}\n"]}