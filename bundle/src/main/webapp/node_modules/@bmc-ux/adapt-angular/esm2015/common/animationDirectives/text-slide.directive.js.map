{"version":3,"file":"text-slide.directive.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/common/animationDirectives/text-slide.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {AfterViewInit, Directive, ElementRef, Input, OnChanges, Renderer2, SimpleChanges} from '@angular/core';\nimport {animate, AnimationBuilder, AnimationMetadata, AnimationPlayer, style} from '@angular/animations';\n\n@Directive({\n  selector: '[adaptTextSlide]'\n})\nexport class AdaptTextSlideDirective implements AfterViewInit, OnChanges {\n  @Input() adaptTextSlide: string;\n  @Input() slideForward: boolean;\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _innerTextRef: any;\n  private _slideForward: boolean = true;\n  private _animationsSet: Record<string, AnimationMetadata | AnimationMetadata[]> = {\n    prevOut: [\n      style({\n        transform: 'translate(0px, 0px)',\n        opacity: 1\n      }),\n      animate('100ms', style({\n        transform: 'translate(10px, 0px)',\n        opacity: 0\n      }))\n    ],\n    prevIn: [\n      style({\n        transform: 'translate(-10px, 0px)',\n        opacity: 0\n      }),\n      animate('100ms', style({\n        transform: 'translate(0px, 0px)',\n        opacity: 1\n      }))\n    ],\n    nextOut: [\n      style({\n        transform: 'translate(0px, 0px)',\n        opacity: 1\n      }),\n      animate('100ms', style({\n        transform: 'translate(-10px, 0px)',\n        opacity: 0\n      }))\n    ],\n    nextIn: [\n      style({\n        transform: 'translate(10px, 0px)',\n        opacity: 0\n      }),\n      animate('100ms', style({\n        transform: 'translate(0px, 0px)',\n        opacity: 1\n      }))\n    ]\n  };\n  private _animationPlayers: {\n    nextOut: AnimationPlayer;\n    nextIn: AnimationPlayer;\n    prevOut: AnimationPlayer;\n    prevIn: AnimationPlayer;\n  } = {\n    nextOut: null,\n    nextIn: null,\n    prevOut: null,\n    prevIn: null\n  };\n  private _animationReady: boolean = false;\n  private _currentAnimation: {\n    in: AnimationPlayer;\n    out: AnimationPlayer;\n  } = {\n    in: null,\n    out: null\n  };\n\n  constructor(private _elRef: ElementRef,\n              private _renderer: Renderer2,\n              private _animationBuilder: AnimationBuilder) {\n  }\n\n  ngAfterViewInit(): void {\n    this._animationPlayers.prevOut = this._animationBuilder.build(this._animationsSet.prevOut)\n      .create(this._elRef.nativeElement);\n    this._animationPlayers.prevIn = this._animationBuilder.build(this._animationsSet.prevIn)\n      .create(this._elRef.nativeElement);\n    this._animationPlayers.nextOut = this._animationBuilder.build(this._animationsSet.nextOut)\n      .create(this._elRef.nativeElement);\n    this._animationPlayers.nextIn = this._animationBuilder.build(this._animationsSet.nextIn)\n      .create(this._elRef.nativeElement);\n\n    this._currentAnimation.in = this._animationPlayers.nextIn;\n    this._currentAnimation.out = this._animationPlayers.nextOut;\n\n    this._animationReady = true;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (Object.prototype.hasOwnProperty.call(changes, 'slideForward')) {\n      if (this._slideForward !== changes.slideForward.currentValue) {\n        this._slideForward = changes.slideForward.currentValue;\n\n        this._currentAnimation.in = this._slideForward ? this._animationPlayers.nextIn : this._animationPlayers.prevIn;\n        this._currentAnimation.out = this._slideForward ? this._animationPlayers.nextOut : this._animationPlayers.prevOut;\n      }\n    }\n\n    if (Object.prototype.hasOwnProperty.call(changes, 'adaptTextSlide')) {\n      if (changes.adaptTextSlide.isFirstChange()) {\n        this._innerTextRef = this._renderer.createText(changes.adaptTextSlide.currentValue);\n        this._renderer.appendChild(this._elRef.nativeElement, this._innerTextRef);\n\n        return;\n      }\n\n      if (!this._animationReady) {\n        this._renderer.setProperty(this._innerTextRef, 'data', changes.adaptTextSlide.currentValue);\n\n        return;\n      }\n\n      this._animationPlayers.prevOut.reset();\n      this._animationPlayers.prevIn.reset();\n      this._animationPlayers.nextOut.reset();\n      this._animationPlayers.nextIn.reset();\n\n      this._currentAnimation.out.onDone(() => {\n        this._renderer.setProperty(this._innerTextRef, 'data', changes.adaptTextSlide.currentValue);\n        this._currentAnimation.in.play();\n      });\n\n      this._currentAnimation.out.play();\n    }\n  }\n}\n"]}