{"version":3,"file":"common.models.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/common/common.models.ts"],"names":[],"mappings":"","sourcesContent":["/** Like an Object */\n// TODO: Refactor this if possible. Potentially can be changed on Record<string, unknown>\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nexport interface KeyValueObject<T = any> {\n  [key: string]: T;\n}\n\nexport type StylesObject = KeyValueObject<string>;\n\nexport type Func<T> = () => T;\nexport type Func1<T, T1> = (arg1: T1) => T;\nexport type Func2<T, T1, T2> = (arg1: T1, arg2: T2) => T;\n\nexport type ValueOf<T> = T[keyof T];\nexport type ValueOrFunc1<T> = T | (() => T);\nexport type ValueOrFunc2<T, T1> = T | ((arg1: T1) => T);\nexport type ValueOrFunc3<T, T1, T2> = T | ((arg1: T1, arg2: T2) => T);\n\nexport type PartialType<T> = { [P in keyof T]?: T[P] };\nexport type DeepPartialType<T> = { [P in keyof T]?: DeepPartialType<T[P]> };\n\nexport type RequiredProperties<T> = { [P in keyof T]-?: T[P] };\nexport type DeepRequiredProperties<T> = { [P in keyof T]-?: DeepRequiredProperties<T[P]> };\n\nexport type ColorVariantType = 'primary' | 'info' | 'success'  | 'warning' | 'danger';\n\nexport interface DefaultPreventable {\n  preventDefault: () => void;\n}\n\nexport interface Datetime2TextsModel {\n  emptyDate?: string;\n  emptyTime?: string;\n  emptyMonth?: string;\n  emptyYear?: string;\n  cancelBtn?: string;\n  clearBtn?: string;\n  nextBtn?: string;\n  applyBtn?: string;\n  timeSeparator?: string;\n  periodSeparator?: string;\n  hhBtn?: string;\n  mmBtn?: string;\n  ssBtn?: string;\n  amBtn?: string;\n  pmBtn?: string;\n  hours?: string;\n  minutes?: string;\n  seconds?: string;\n  meridiem?: string;\n  month?: string;\n}\n\nexport interface Datetime2RangeTextsModel {\n  startLabel: string;\n  endLabel: string;\n  cancelBtn?: string;\n  clearBtn?: string;\n  nextBtn?: string;\n  applyBtn?: string;\n  emptyStartLabel?: string;\n  emptyEndLabel?: string;\n  emptyTime?: string;\n  invalidValueLabel?: string;\n}\n\nexport interface AdaptIsPanelOpenedCurrentlyModel {\n  /**\n   * Opened tab id in the panel\n   */\n  id: null | number;\n\n  /**\n   * Opened tab id in the panel2\n   */\n  id2: null | number;\n\n  /**\n   * Open panel\n   */\n  isPanelOpened: boolean;\n\n  /**\n   * Open panel2\n   */\n  isPanel2Opened: boolean;\n}\n\nexport type GenericEvent<T = HTMLInputElement> = Event & {\n  target: T;\n};\n"]}