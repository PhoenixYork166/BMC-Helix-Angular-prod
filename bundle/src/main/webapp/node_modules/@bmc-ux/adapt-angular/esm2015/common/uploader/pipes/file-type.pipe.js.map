{"version":3,"file":"file-type.pipe.js","sourceRoot":"","sources":["../../../../../../../libs/adapt-angular/src/common/uploader/pipes/file-type.pipe.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,QAAQ,EAAE,IAAI,EAAgB,MAAM,eAAe,CAAC;AAC5D,OAAO,EAAC,YAAY,EAAC,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAC,cAAc,EAAC,MAAM,mBAAmB,CAAC;;;AAKjD,MAAM,OAAO,aAAa;IAGxB,YAAoB,IAAoB;QAApB,SAAI,GAAJ,IAAI,CAAgB;QACtC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC;IACpC,CAAC;IAED,SAAS,CAAC,KAAe,EAAE,YAAoB;QAC7C,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAE5B,IAAI,MAAM,KAAK,CAAC,EAAE;YAChB,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;SACjB;QAED,OAAO,CAAC,IAAI,CAAC,KAAK;YAChB,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,YAAY,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;YACjF,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,YAAY,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtF,CAAC;;0EAjBU,aAAa;+EAAb,aAAa;uFAAb,aAAa;cAHzB,IAAI;eAAC;gBACJ,IAAI,EAAE,WAAW;aAClB;;AA0BD,MAAM,OAAO,wBAAwB;;gGAAxB,wBAAwB;0EAAxB,wBAAwB;8EAJ1B,CAAC,YAAY,CAAC;uFAIZ,wBAAwB;cALpC,QAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE,CAAC,aAAa,CAAC;gBAC7B,OAAO,EAAE,CAAC,aAAa,CAAC;aACzB;;wFACY,wBAAwB,mBAzBxB,aAAa,aAqBd,YAAY,aArBX,aAAa","sourcesContent":["import {NgModule, Pipe, PipeTransform} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {Directionality} from '@angular/cdk/bidi';\n\n@Pipe({\n  name: 'fileTypes'\n})\nexport class FileTypesPipe implements PipeTransform {\n  readonly isRtl: boolean;\n\n  constructor(private _dir: Directionality) {\n    this.isRtl = _dir.value === 'rtl';\n  }\n\n  transform(types: string[], typesDivider: string): string {\n    const length = types.length;\n\n    if (length === 1) {\n      return types[0];\n    }\n\n    return !this.isRtl\n      ? types.slice(0, length - 1).join(', ') + ` ${typesDivider} ` + types[length - 1]\n      : types[length - 1] + ` ${typesDivider} ` + types.slice(0, length - 1).join(', ');\n  }\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FileTypesPipe],\n  exports: [FileTypesPipe]\n})\nexport class AdaptFileTypesPipeModule {\n}\n"]}