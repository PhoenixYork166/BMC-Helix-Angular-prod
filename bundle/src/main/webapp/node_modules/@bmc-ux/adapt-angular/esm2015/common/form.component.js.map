{"version":3,"file":"form.component.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/common/form.component.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport {\n  Directive, ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Injector,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  NgControl,\n  Validator\n} from '@angular/forms';\n\nimport {formatString, hasRequiredValidator, toBoolean} from './utilities';\nimport {AdaptTranslateService} from './i18n/index';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularGenericDirective,\n  AdaptRadarAngularService\n} from './radar/adapt-radar';\n\nexport function createFormControlValueAccessor(type: any): any {\n  return {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => type),\n    multi: true\n  };\n}\n\nexport function createFormControlValidator(type: any): any {\n  return {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => type),\n    multi: true\n  };\n}\n\nexport interface ValidationError {\n  name: string;\n  text: string;\n}\n\n@Directive()\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport abstract class FormComponent extends AdaptRadarAngularGenericDirective implements ControlValueAccessor, Validator, OnInit {\n  abstract value: any;\n  control: NgControl;\n\n  @Input() mainCls: string = '';\n  @Input() suppressIcons: boolean;\n  @Input() prefix: string;\n  @Input() suffix: string;\n  @Input() abstract label: string;\n  @Input() hideLabel: boolean;\n  @Input() placeholder: string;\n  @Input() abstract name: string;\n  @Input() abstract id: string;\n\n  @Input() tooltipIconCls: string;\n  @Input() tooltipText: string;\n\n  /**\n   * Popover icon and additional content for it.\n   */\n  @Input() popoverIcon: string;\n  @Input() popoverPlacement: string = 'top';\n  @Input() popoverTriggers: string = 'click';\n  @Input() popoverContent: string | TemplateRef<any>;\n\n  @Input() width: string;\n\n  @Output() abstract readonly focus: EventEmitter<any>;\n  @Output() abstract readonly blur: EventEmitter<any>;\n\n  @HostBinding('class')\n  get hostClasses(): string {\n    return this.getBaseHostClasses();\n  }\n\n  defaultFormErrors: {\n    minValue?: string;\n    minValueName?: string;\n    maxValue?: string;\n    maxValueName?: string;\n    required?: string;\n    requiredName?: string;\n    requiredTrue?: string;\n    requiredTrueName?: string;\n    email?: string;\n    emailName?: string;\n    minLength?: string;\n    minLengthName?: string;\n    maxLength?: string;\n    maxLengthName?: string;\n    pattern?: string;\n    patternName?: string;\n  } = {};\n\n  protected _customErrorTexts: any = {};\n\n  private buildInValidators: any = {\n    min: (value: { min: any; actual: any }) => {\n      const error: ValidationError = {\n        name: this.defaultFormErrors.minValueName,\n        text: formatString(this.defaultFormErrors.minValue, value.min)\n      };\n\n      return error;\n    },\n\n    max: (value: { max: any; actual: any }) => {\n      const error: ValidationError = {\n        name: this.defaultFormErrors.maxValueName,\n        text: formatString(this.defaultFormErrors.maxValue, value.max)\n      };\n\n      return error;\n    },\n\n    required: () => {\n      const error: ValidationError = {\n        name: this.defaultFormErrors.requiredName,\n        text: this.defaultFormErrors.required\n      };\n\n      return error;\n    },\n\n    requiredTrue: () => {\n      const error: ValidationError = {\n        name: this.defaultFormErrors.requiredTrueName,\n        text: this.defaultFormErrors.requiredTrue\n      };\n\n      return error;\n    },\n\n    email: () => {\n      const error: ValidationError = {\n        name: this.defaultFormErrors.emailName,\n        text: this.defaultFormErrors.email\n      };\n\n      return error;\n    },\n\n    minlength: (value: { requiredLength: any; actualLength: any }) => {\n      const error: ValidationError = {\n        name: this.defaultFormErrors.minLengthName,\n        text: formatString(this.defaultFormErrors.minLength, value.requiredLength, value.actualLength)\n      };\n\n      return error;\n    },\n\n    maxlength: (value: { requiredLength: any; actualLength: any }) => {\n      const error: ValidationError = {\n        name: this.defaultFormErrors.maxLengthName,\n        text: formatString(this.defaultFormErrors.maxLength, value.requiredLength, value.actualLength)\n      };\n\n      return error;\n    },\n\n    pattern: (value: { requiredPattern: any }) => {\n      const error: ValidationError = {\n        name: this.defaultFormErrors.patternName,\n        text: formatString(this.defaultFormErrors.pattern, value.requiredPattern)\n      };\n\n      return error;\n    }\n  };\n\n  @Input()\n  set errorTexts(errors: any) {\n    this._customErrorTexts = errors;\n  }\n\n  protected _readonly: boolean = false;\n\n  get readonly(): any {\n    return this._readonly;\n  }\n\n  @Input()\n  set readonly(v: any) {\n    this._readonly = toBoolean(v);\n  }\n\n  protected _required: boolean;\n\n  get required(): boolean {\n    return this._required || hasRequiredValidator(this.control);\n  }\n\n  @Input()\n  set required(v: boolean) {\n    this._required = toBoolean(v);\n  }\n\n  protected _disabled: boolean = false;\n\n  get disabled(): any {\n    return this._disabled;\n  }\n\n  @Input()\n  set disabled(v: any) {\n    this._disabled = toBoolean(v);\n  }\n\n  protected _requiredLabel: string;\n\n  get requiredLabel(): string {\n    return this._requiredLabel;\n  }\n\n  @Input()\n  set requiredLabel(v: string) {\n    this._requiredLabel = v;\n  }\n\n  protected _errors: ValidationError[] = [];\n\n  get errors(): ValidationError[] {\n    const validators = Object.keys(this.control && this.control.errors ? this.control.errors : {});\n    let hasRequiredError: boolean = false;\n\n    this._errors = [];\n\n    validators.forEach((v) => {\n      const isBuildIn = Object.prototype.hasOwnProperty.call(this.buildInValidators, v);\n      const error = this.control.errors[v];\n      const customError = this._customErrorTexts[v];\n\n      if (customError && error.text) {\n        error.text = customError.text;\n      }\n\n      if (!(v === 'required' && this.control.untouched)) {\n        if (customError) {\n          this._errors.push(customError);\n        } else if (isBuildIn) {\n          this._errors.push(this.buildInValidators[v](error));\n        } else {\n          this._errors.push(error);\n        }\n      }\n    });\n\n    hasRequiredError = !!this._errors.filter((e) => e.name === 'Required').length;\n\n    if (hasRequiredError && this.control.untouched) {\n\n      let deleteIndex = -1;\n\n      this._errors.forEach((elem, index) => {\n        deleteIndex = elem.name === 'Required' ? index : -1;\n      });\n\n      if (deleteIndex !== -1) {\n        this._errors.splice(deleteIndex, 1);\n      }\n    }\n\n    return this._errors;\n  }\n\n  protected constructor(private injector: Injector,\n                        private ts: AdaptTranslateService,\n                        _adaptRadarService: AdaptRadarAngularService,\n                        _elem: ElementRef<HTMLElement>,\n                        _entityName: AdaptRadarAngularCustomEventName) {\n    super(_adaptRadarService, _elem, _entityName);\n\n    this.setDefaultErrors(ts.getCurrentLanguage());\n  }\n\n  ngOnInit(): void {\n    this.initControl();\n  }\n\n  setDefaultErrors(translation: object): void {\n    this.defaultFormErrors.minValue = translation['adapt.formControl.error.minValue'];\n    this.defaultFormErrors.minValueName = translation['adapt.formControl.error.minValueName'];\n    this.defaultFormErrors.maxValue = translation['adapt.formControl.error.maxValue'];\n    this.defaultFormErrors.maxValueName = translation['adapt.formControl.error.maxValueName'];\n    this.defaultFormErrors.required = translation['adapt.formControl.error.required'];\n    this.defaultFormErrors.requiredName = translation['adapt.formControl.error.requiredName'];\n    this.defaultFormErrors.requiredTrue = translation['adapt.formControl.error.requiredTrue'];\n    this.defaultFormErrors.requiredTrueName = translation['adapt.formControl.error.requiredTrueName'];\n    this.defaultFormErrors.email = translation['adapt.formControl.error.email'];\n    this.defaultFormErrors.emailName = translation['adapt.formControl.error.emailName'];\n    this.defaultFormErrors.minLength = translation['adapt.formControl.error.minLength'];\n    this.defaultFormErrors.minLengthName = translation['adapt.formControl.error.minLengthName'];\n    this.defaultFormErrors.maxLength = translation['adapt.formControl.error.maxLength'];\n    this.defaultFormErrors.maxLengthName = translation['adapt.formControl.error.maxLengthName'];\n    this.defaultFormErrors.pattern = translation['adapt.formControl.error.pattern'];\n    this.defaultFormErrors.patternName = translation['adapt.formControl.error.patternName'];\n    this.requiredLabel = translation['adapt.common.required'];\n  }\n\n  initControl(): void {\n    this.control = this.injector.get(NgControl);\n  }\n\n  abstract writeValue(value: any): void;\n\n  abstract registerOnChange(fn: any): void;\n\n  abstract registerOnTouched(fn: any): void;\n\n  abstract validate(control: AbstractControl): { [key: string]: ValidationError };\n\n  // TODO: in a new FormComponent need to implement this method\n  // abstract setDisabledState?(isDisabled: boolean): void;\n\n  overrideBuildInValidatorMessage(name: any, cb: (value?: any) => ValidationError): void {\n    if (this.buildInValidators[name]) {\n      this.buildInValidators[name] = cb;\n    }\n  }\n\n  // TODO check if useless arg can be removed\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function */\n  protected propagateChange: (_: any) => void = (_: any): void => {\n  };\n\n  protected getBaseHostClasses(): string {\n    const classes = [\n      this.mainCls,\n      this.suppressIcons ? 'prevent-success-icon' : '',\n    ];\n\n    // Workaround: set manually form validation classes due to removing with dynamic mainCls\n    // TODO: maybe extend the NgControlStatus class for applying these classes\n    const control = this.control;\n\n    if (control) {\n      classes.push(\n        control.valid ? 'ng-valid' : 'ng-invalid',\n        control.pending ? 'ng-pending' : '',\n        control.touched ? 'ng-touched' : 'ng-untouched',\n        control.dirty ? 'ng-dirty' : 'ng-pristine',\n      );\n    }\n\n    return classes.join(' ');\n  }\n}\n"]}