import { Component, ElementRef, Input, ViewChild, ViewEncapsulation } from '@angular/core';
import { AdaptDeviceDetectionService } from '../common/device-detection.service';
import Velocity from '@bmc-ux/velocity-animate';
import { animate, state, style, transition, trigger } from '@angular/animations';
import { ANIMATION_DURATION, ANIMATION_TIMING_FUNCTION } from '../common/animation';
import { debounce } from '../common/utilities';
import { AdaptTranslateService } from '../common/i18n/index';
import { AdaptRadarAngularCustomEventName, AdaptRadarAngularGenericDirective, AdaptRadarAngularService } from '../common/radar/adapt-radar';
import * as i0 from "@angular/core";
import * as i1 from "../common/device-detection.service";
import * as i2 from "../common/i18n/index";
import * as i3 from "../common/radar/adapt-radar";
import * as i4 from "@angular/common";
const _c0 = ["carousel"];
const _c1 = ["wrapper"];
const _c2 = ["prev"];
const _c3 = ["next"];
function AdaptCardCarouselComponent_ng_container_3_h5_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "h5", 11);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r4.carouselTexts.title);
} }
function AdaptCardCarouselComponent_ng_container_3_div_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 12);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r5.itemsCount);
} }
function AdaptCardCarouselComponent_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n    ");
    i0.ɵɵelementStart(2, "div", 8);
    i0.ɵɵtext(3, "\n      ");
    i0.ɵɵtemplate(4, AdaptCardCarouselComponent_ng_container_3_h5_4_Template, 2, 1, "h5", 9);
    i0.ɵɵtext(5, "\n      ");
    i0.ɵɵtemplate(6, AdaptCardCarouselComponent_ng_container_3_div_6_Template, 2, 1, "div", 10);
    i0.ɵɵtext(7, "\n    ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(8, "\n  ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngIf", ctx_r1.carouselTexts.title !== "");
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r1.showCount);
} }
function AdaptCardCarouselComponent_div_17_Template(rf, ctx) { if (rf & 1) {
    const _r9 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 13);
    i0.ɵɵtext(1, "\n    ");
    i0.ɵɵelementStart(2, "button", 14, 15);
    i0.ɵɵlistener("mouseleave", function AdaptCardCarouselComponent_div_17_Template_button_mouseleave_2_listener() { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(); return ctx_r8.onNavBtnMouseleave(); })("click", function AdaptCardCarouselComponent_div_17_Template_button_click_2_listener() { i0.ɵɵrestoreView(_r9); const ctx_r10 = i0.ɵɵnextContext(); return ctx_r10.moveLeft(); });
    i0.ɵɵtext(4, "\n      ");
    i0.ɵɵelementStart(5, "span", 16);
    i0.ɵɵtext(6);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(7, "\n    ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(8, "\n    ");
    i0.ɵɵelementStart(9, "button", 17, 18);
    i0.ɵɵlistener("mouseleave", function AdaptCardCarouselComponent_div_17_Template_button_mouseleave_9_listener() { i0.ɵɵrestoreView(_r9); const ctx_r11 = i0.ɵɵnextContext(); return ctx_r11.onNavBtnMouseleave(); })("click", function AdaptCardCarouselComponent_div_17_Template_button_click_9_listener() { i0.ɵɵrestoreView(_r9); const ctx_r12 = i0.ɵɵnextContext(); return ctx_r12.moveRight(); });
    i0.ɵɵtext(11, "\n      ");
    i0.ɵɵelementStart(12, "span", 16);
    i0.ɵɵtext(13);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(14, "\n    ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(15, "\n  ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const _r6 = i0.ɵɵreference(3);
    const _r7 = i0.ɵɵreference(10);
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("@controlPrevAnim", ctx_r3.isPrevBtnVisible(_r6));
    i0.ɵɵattribute("disabled", !ctx_r3.isPrevBtnVisible(_r6) ? "" : null);
    i0.ɵɵadvance(4);
    i0.ɵɵtextInterpolate(ctx_r3.carouselTexts.previous);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("@controlNextAnim", ctx_r3.isNextBtnVisible(_r7));
    i0.ɵɵattribute("disabled", !ctx_r3.isNextBtnVisible(_r7) ? "" : null);
    i0.ɵɵadvance(4);
    i0.ɵɵtextInterpolate(ctx_r3.carouselTexts.next);
} }
const _c4 = function (a0) { return { "a-multi-carousel_with-header": a0 }; };
const _c5 = function (a0, a1) { return { "is-border-line": a0, "is-border-line-left": a1 }; };
const _c6 = function (a0) { return { "user-select": a0 }; };
const _c7 = ["*"];
export class AdaptCardCarouselComponent extends AdaptRadarAngularGenericDirective {
    constructor(device, ts, _adaptRadarService, _elem) {
        super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptCardCarousel);
        this.device = device;
        this.ts = ts;
        this.itemsCount = 0;
        this.leftPaddleVisible = false;
        this.rightPaddleVisible = false;
        this.defaultTexts = {};
        /**
         * Sets the CSS class for the component
         * @docs-default
         */
        this.customClass = '';
        /**
         * When present, shows total number of items in the header
         * @docs-default false
         */
        this.showCount = false;
        /**
         * Sets the value of the header title, texts for previous and next buttons
         * @docs-default
         */
        this.carouselTexts = {};
        this._skin = 'carousel_foreground';
        this.setDefaultTexts(ts.getCurrentLanguage());
    }
    get skin() {
        return this._skin;
    }
    set skin(value) {
        this._skin = value;
    }
    ngOnInit() {
        this.carouselTexts = Object.assign(Object.assign({}, this.defaultTexts), this.carouselTexts);
    }
    ngAfterViewInit() {
        super.ngAfterViewInit();
        if (!this.itemWidth) {
            const child = this.items.firstElementChild;
            this.itemWidth = child.offsetWidth;
        }
        if (!this.isMobile) {
            this.browserScrollPointer = debounce(this._checkSize.bind(this), 100);
            this.items.addEventListener('scroll', this.browserScrollPointer);
        }
    }
    ngAfterContentInit() {
        this.items = this.wrapper.nativeElement;
        this.itemsCount = this.items.childElementCount;
        this._checkSize();
    }
    ngOnDestroy() {
        if (this.browserScrollPointer) {
            this.items.removeEventListener('scroll', this.browserScrollPointer);
        }
    }
    setDefaultTexts(translation) {
        this.defaultTexts.next = translation['adapt.common.next'];
        this.defaultTexts.previous = translation['adapt.common.previous'];
    }
    get isMobile() {
        return this.device.deviceMobile() || this.device.deviceTablet();
    }
    isPrevBtnVisible(btn) {
        return btn.matches(':hover') || this.leftPaddleVisible;
    }
    isNextBtnVisible(btn) {
        return btn.matches(':hover') || this.rightPaddleVisible;
    }
    moveLeft() {
        let finalX;
        const currentX = this.items.scrollLeft;
        const cardCount = parseInt(String(this._getWidth(this.items.parentNode) / this.itemWidth), 10) + 1;
        const delta = (cardCount * this.itemWidth) - this.itemWidth;
        // if the gap is less then half of the item width - we need to move to the edge
        if (currentX - delta < (this.itemWidth / 2)) {
            finalX = 0;
        }
        else {
            finalX = currentX - delta;
        }
        this._animateScroll(finalX);
    }
    moveRight() {
        let finalX;
        const currentX = this.items.scrollLeft;
        const cardCount = parseInt(String(this._getWidth(this.items.parentNode) / this.itemWidth), 10) + 1;
        const delta = (cardCount * this.itemWidth) - this.itemWidth;
        // if the gap is less then half of the item width - we need to move to the edge
        if (this.items.scrollWidth - delta - currentX - this.items.offsetWidth < (this.itemWidth / 2)) {
            finalX = this.items.scrollWidth;
        }
        else {
            finalX = currentX + delta;
        }
        this._animateScroll(finalX);
    }
    onNavBtnMouseleave() {
        // dummy method, just for running change detection
    }
    _animateScroll(value) {
        Velocity(this.items, { scrollLeft: value + 'px' }, {
            easing: ANIMATION_TIMING_FUNCTION.base.transitionInOut,
            duration: parseFloat(ANIMATION_DURATION.medium) * 1000,
            complete: () => {
                this.items.classList.remove('nonclick');
            }
        });
    }
    _checkSize() {
        this.leftPaddleVisible = this.items.scrollLeft !== 0;
        this.rightPaddleVisible = Math.abs(this.items.scrollWidth - this.items.scrollLeft - this.items.offsetWidth) >= 2;
    }
    _getWidth(element) {
        return Number(parseFloat(getComputedStyle(element, null).width.replace('px', '')));
    }
}
AdaptCardCarouselComponent.ɵfac = function AdaptCardCarouselComponent_Factory(t) { return new (t || AdaptCardCarouselComponent)(i0.ɵɵdirectiveInject(i1.AdaptDeviceDetectionService), i0.ɵɵdirectiveInject(i2.AdaptTranslateService), i0.ɵɵdirectiveInject(i3.AdaptRadarAngularService), i0.ɵɵdirectiveInject(i0.ElementRef)); };
AdaptCardCarouselComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptCardCarouselComponent, selectors: [["adapt-card-carousel"]], viewQuery: function AdaptCardCarouselComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 7);
        i0.ɵɵviewQuery(_c1, 7);
        i0.ɵɵviewQuery(_c2, 5);
        i0.ɵɵviewQuery(_c3, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.car = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.wrapper = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.prev = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.next = _t.first);
    } }, hostVars: 26, hostBindings: function AdaptCardCarouselComponent_HostBindings(rf, ctx) { if (rf & 2) {
        i0.ɵɵclassProp("adapt-multi-card", true)("a-multi-card_foreground", ctx.skin === "carousel_foreground")("a-multi-card_skin1", ctx.skin === "skin1")("a-multi-card_background", ctx.skin === "carousel_background")("a-multi-card_skin3", ctx.skin === "skin3")("a-multi-card_skin4", ctx.skin === "skin4")("a-multi-card_skin5", ctx.skin === "skin5")("a-multi-card_skin6", ctx.skin === "skin6")("a-multi-card_skin7", ctx.skin === "skin7")("a-multi-card_skin8", ctx.skin === "skin8")("a-multi-card_foreground-inverse", ctx.skin === "carousel_foreground_inverse")("a-multi-card_background-inverse", ctx.skin === "carousel_background_inverse")("a-multi-card_skin11", ctx.skin === "skin11");
    } }, inputs: { customClass: "customClass", showCount: "showCount", carouselTexts: "carouselTexts", skin: "skin" }, features: [i0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c7, decls: 20, vars: 15, consts: [[3, "ngClass"], ["carousel", ""], [4, "ngIf"], [1, "a-multi-card__cover", 3, "ngClass", "ngStyle"], [1, "a-multi-carousel__viewport"], [1, "card-slider"], ["wrapper", ""], ["class", "a-multi-carousel__controls", 4, "ngIf"], [1, "a-multi-card__header"], ["class", "a-multi-card__title", 4, "ngIf"], ["class", "a-multi-card__count", 4, "ngIf"], [1, "a-multi-card__title"], [1, "a-multi-card__count"], [1, "a-multi-carousel__controls"], ["type", "button", "role", "button", "tabindex", "0", 1, "a-multi-carousel__prev", "btn", "d-icon-angle_left", "shadow-1", 3, "mouseleave", "click"], ["prev", ""], [1, "sr-only"], ["type", "button", "role", "button", "tabindex", "0", 1, "a-multi-carousel__next", "btn", "d-icon-angle_right", "shadow-1", 3, "mouseleave", "click"], ["next", ""]], template: function AdaptCardCarouselComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵprojectionDef();
        i0.ɵɵelementStart(0, "div", 0, 1);
        i0.ɵɵtext(2, "\n\n  ");
        i0.ɵɵtemplate(3, AdaptCardCarouselComponent_ng_container_3_Template, 9, 2, "ng-container", 2);
        i0.ɵɵtext(4, "\n\n  ");
        i0.ɵɵelementStart(5, "div", 3);
        i0.ɵɵtext(6, "\n    ");
        i0.ɵɵelementStart(7, "div", 4);
        i0.ɵɵtext(8, "\n      ");
        i0.ɵɵelementStart(9, "div", 5, 6);
        i0.ɵɵtext(11, "\n          ");
        i0.ɵɵprojection(12);
        i0.ɵɵtext(13, "\n      ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(14, "\n    ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(15, "\n  ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(16, "\n\n  ");
        i0.ɵɵtemplate(17, AdaptCardCarouselComponent_div_17_Template, 16, 6, "div", 7);
        i0.ɵɵtext(18, "\n\n");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(19, "\n\n\n");
    } if (rf & 2) {
        i0.ɵɵclassMapInterpolate1("a-multi-carousel a-card-carousel ", ctx.customClass, "");
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(8, _c4, ctx.carouselTexts.title !== "" || ctx.showCount));
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx.carouselTexts.title !== "" || ctx.showCount);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(10, _c5, ctx.rightPaddleVisible, ctx.leftPaddleVisible))("ngStyle", i0.ɵɵpureFunction1(13, _c6, !ctx.isMobile ? "all" : "none"));
        i0.ɵɵadvance(12);
        i0.ɵɵproperty("ngIf", !ctx.isMobile);
    } }, directives: [i4.NgClass, i4.NgIf, i4.NgStyle], styles: ["\n    .a-card-carousel {\n      overflow: hidden;\n    }\n\n    .a-card-carousel .card-slider {\n      padding: 5px 0;\n      overflow-x: auto;\n      white-space: nowrap;\n      width: 100%;\n      -webkit-overflow-scrolling: touch;\n    }\n\n    .card-slider {\n      overflow-x: scroll;\n      white-space: nowrap;\n      width: 100%;\n      -webkit-overflow-scrolling: touch;\n    }\n\n    .card-slider .card-item {\n      display: inline-block;\n      margin: 1.25rem .9375rem;\n      width: 300px;\n      height: 250px;\n      border: 1px solid #d9d9d9;\n      text-align: center;\n      text-decoration: none;\n    }\n\n    .a-multi-carousel__prev {\n      left: 0\n    }\n\n    .a-multi-carousel__next {\n      right: 0\n    }\n\n    .a-multi-carousel_with-header .a-multi-carousel__prev,\n    .a-multi-carousel_with-header .a-multi-carousel__next {\n      margin-top: 26px;\n    }\n  "], encapsulation: 2, data: { animation: [
            trigger('controlNextAnim', [
                state('0', style({ right: '-100%', opacity: 0, visibility: 'hidden' })),
                transition('0 => 1', [
                    style({ right: '-100%', opacity: 0, visibility: 'hidden' }),
                    animate(`${ANIMATION_DURATION.fast} ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`, style({ right: '0', opacity: 1, visibility: 'visible' }))
                ]),
                transition('1 => 0', [
                    style({ opacity: 1, visibility: 'visible', right: '0' }),
                    animate(`${ANIMATION_DURATION.xtraSlow} ${ANIMATION_DURATION.fast} ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`, style({ opacity: 0, visibility: 'hidden', right: '-100%' }))
                ])
            ]),
            trigger('controlPrevAnim', [
                state('0', style({ left: '-100%', opacity: 0, visibility: 'hidden' })),
                transition('0 => 1', [
                    style({ left: '-100%', opacity: 0, visibility: 'hidden' }),
                    animate(`${ANIMATION_DURATION.fast} ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`, style({ left: '0', opacity: 1, visibility: 'visible' }))
                ]),
                transition('1 => 0', [
                    style({ left: '0', opacity: 1, visibility: 'visible' }),
                    animate(`${ANIMATION_DURATION.xtraSlow} ${ANIMATION_DURATION.fast} ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`, style({ left: '-100%', opacity: 0, visibility: 'hidden' }))
                ])
            ])
        ] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptCardCarouselComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-card-carousel',
                // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                host: {
                    '[class.adapt-multi-card]': 'true',
                    '[class.a-multi-card_foreground]': 'skin === "carousel_foreground"',
                    '[class.a-multi-card_skin1]': 'skin === "skin1"',
                    '[class.a-multi-card_background]': 'skin === "carousel_background"',
                    '[class.a-multi-card_skin3]': 'skin === "skin3"',
                    '[class.a-multi-card_skin4]': 'skin === "skin4"',
                    '[class.a-multi-card_skin5]': 'skin === "skin5"',
                    '[class.a-multi-card_skin6]': 'skin === "skin6"',
                    '[class.a-multi-card_skin7]': 'skin === "skin7"',
                    '[class.a-multi-card_skin8]': 'skin === "skin8"',
                    '[class.a-multi-card_foreground-inverse]': 'skin === "carousel_foreground_inverse"',
                    '[class.a-multi-card_background-inverse]': 'skin === "carousel_background_inverse"',
                    '[class.a-multi-card_skin11]': 'skin === "skin11"'
                },
                templateUrl: './card-carousel.component.html',
                encapsulation: ViewEncapsulation.None,
                animations: [
                    trigger('controlNextAnim', [
                        state('0', style({ right: '-100%', opacity: 0, visibility: 'hidden' })),
                        transition('0 => 1', [
                            style({ right: '-100%', opacity: 0, visibility: 'hidden' }),
                            animate(`${ANIMATION_DURATION.fast} ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`, style({ right: '0', opacity: 1, visibility: 'visible' }))
                        ]),
                        transition('1 => 0', [
                            style({ opacity: 1, visibility: 'visible', right: '0' }),
                            animate(`${ANIMATION_DURATION.xtraSlow} ${ANIMATION_DURATION.fast} ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`, style({ opacity: 0, visibility: 'hidden', right: '-100%' }))
                        ])
                    ]),
                    trigger('controlPrevAnim', [
                        state('0', style({ left: '-100%', opacity: 0, visibility: 'hidden' })),
                        transition('0 => 1', [
                            style({ left: '-100%', opacity: 0, visibility: 'hidden' }),
                            animate(`${ANIMATION_DURATION.fast} ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`, style({ left: '0', opacity: 1, visibility: 'visible' }))
                        ]),
                        transition('1 => 0', [
                            style({ left: '0', opacity: 1, visibility: 'visible' }),
                            animate(`${ANIMATION_DURATION.xtraSlow} ${ANIMATION_DURATION.fast} ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`, style({ left: '-100%', opacity: 0, visibility: 'hidden' }))
                        ])
                    ])
                ],
                // TODO: move style after design team approval
                styles: [`
    .a-card-carousel {
      overflow: hidden;
    }

    .a-card-carousel .card-slider {
      padding: 5px 0;
      overflow-x: auto;
      white-space: nowrap;
      width: 100%;
      -webkit-overflow-scrolling: touch;
    }

    .card-slider {
      overflow-x: scroll;
      white-space: nowrap;
      width: 100%;
      -webkit-overflow-scrolling: touch;
    }

    .card-slider .card-item {
      display: inline-block;
      margin: 1.25rem .9375rem;
      width: 300px;
      height: 250px;
      border: 1px solid #d9d9d9;
      text-align: center;
      text-decoration: none;
    }

    .a-multi-carousel__prev {
      left: 0
    }

    .a-multi-carousel__next {
      right: 0
    }

    .a-multi-carousel_with-header .a-multi-carousel__prev,
    .a-multi-carousel_with-header .a-multi-carousel__next {
      margin-top: 26px;
    }
  `],
            }]
    }], function () { return [{ type: i1.AdaptDeviceDetectionService }, { type: i2.AdaptTranslateService }, { type: i3.AdaptRadarAngularService }, { type: i0.ElementRef }]; }, { customClass: [{
            type: Input
        }], showCount: [{
            type: Input
        }], carouselTexts: [{
            type: Input
        }], skin: [{
            type: Input
        }], car: [{
            type: ViewChild,
            args: ['carousel', { static: true }]
        }], wrapper: [{
            type: ViewChild,
            args: ['wrapper', { static: true }]
        }], prev: [{
            type: ViewChild,
            args: ['prev', { static: false }]
        }], next: [{
            type: ViewChild,
            args: ['next', { static: false }]
        }] }); })();
//# sourceMappingURL=card-carousel.component.js.map