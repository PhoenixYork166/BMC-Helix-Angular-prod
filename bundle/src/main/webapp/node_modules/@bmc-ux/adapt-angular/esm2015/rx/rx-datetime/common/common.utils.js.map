{"version":3,"file":"common.utils.js","sourceRoot":"","sources":["../../../../../../../libs/adapt-angular/src/rx/rx-datetime/common/common.utils.ts"],"names":[],"mappings":"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","sourcesContent":["import {animate, query, style, transition} from '@angular/animations';\nimport {clone, forIn, isEmpty, isNil, set} from 'lodash-es';\n\nimport {getDateFromParts} from './parse.utils';\nimport {getDateParts} from './partition.utils';\nimport {isValidDate} from './validate.utils';\nimport {DateTimeKey} from '../../../common/common.enums';\nimport {RxDateStruct, RxDatetimePickerMode, RxDatetimeStruct} from '../adapt-rx-datetime.types';\n\nexport const SLIDE_ANIMATION = [\n  transition(':increment', [\n    query(':enter', [\n      style({opacity: 0, transform: 'translateX(30px)'}),\n      animate('.2s ease-out', style({opacity: 1, transform: 'translateX(0px)'}))\n    ], {\n      optional: true,\n    })\n  ]),\n  transition(':decrement', [\n    query(':enter', [\n      style({opacity: 0, transform: 'translateX(-30px)'}),\n      animate('.2s ease-out', style({opacity: 1, transform: 'translateX(0px)'}))\n    ], {\n      optional: true,\n    })\n  ])\n];\n\nexport const SLIDE_HORIZONTAL_ANIMATION = [\n  transition(':increment', [\n    style({opacity: 0, transform: 'translateX(30px)'}),\n    animate('.2s ease-out', style({opacity: '*', transform: 'translateX(0px)'}))\n  ]),\n  transition(':decrement', [\n    style({opacity: 0, transform: 'translateX(-30px)'}),\n    animate('.2s ease-out', style({opacity: '*', transform: 'translateX(0px)'}))\n  ])\n];\n\nexport const ZOOM_ANIMATION = [\n  transition(':increment', [\n    query(':enter', [\n      style({opacity: 0, transform: 'scale(0.9)'}),\n      animate('.2s ease-out', style({opacity: 1, transform: 'scale(1)'}))\n    ], {\n      optional: true,\n    })\n  ]),\n  transition(':decrement', [\n    query(':enter', [\n      style({opacity: 0, transform: 'scale(1.1)'}),\n      animate('.2s ease-out', style({opacity: 1, transform: 'scale(1)'}))\n    ], {\n      optional: true,\n    })\n  ])\n];\n\nexport const CALENDAR_ROWS: number = 6;\n\nexport const DAYS_A_WEEK: number = 7;\n\nexport const MONTHS_A_YEAR: number = 12;\n\nexport function checkIfPropsDefined(object: Object, props: string[]): boolean {\n  if (isEmpty(object) || isEmpty(props)) {\n    return false;\n  }\n\n  return props.every(prop => {\n    return !isNil(object[prop]);\n  });\n}\n\nexport function getDateStamp(v: RxDateStruct): number {\n  if (!checkIfPropsDefined(v, getDatetimeModelPropsByMode(RxDatetimePickerMode.Date, false))) {\n    return null;\n  }\n\n  const jsDate = new Date(v.year, v.month, v.date, 0, 0, 0, 0);\n\n  return jsDate.getTime();\n}\n\nexport function getDateTimeStamp(v: RxDatetimeStruct): number {\n  if (!checkIfPropsDefined(v, getDatetimeModelPropsByMode(RxDatetimePickerMode.DateTime, true))) {\n    return null;\n  }\n\n  const jsDate = new Date(v.year, v.month, v.date, v.hours, v.minutes, v.seconds, 0);\n\n  return jsDate.getTime();\n}\n\nexport function getDatetimeModelPropsByMode(mode: RxDatetimePickerMode, hasSeconds: boolean): string[] {\n  let propsToPick: string[];\n\n  switch (mode) {\n    case RxDatetimePickerMode.DateTime: {\n      propsToPick = [DateTimeKey.Year, DateTimeKey.Month, DateTimeKey.Date, DateTimeKey.Hours, DateTimeKey.Minutes];\n\n      if (hasSeconds) {\n        propsToPick.push(DateTimeKey.Seconds);\n      }\n\n      break;\n    }\n    case RxDatetimePickerMode.Date: {\n      propsToPick = [DateTimeKey.Year, DateTimeKey.Month, DateTimeKey.Date];\n      break;\n    }\n    case RxDatetimePickerMode.Time: {\n      propsToPick = [DateTimeKey.Hours, DateTimeKey.Minutes];\n\n      if (hasSeconds) {\n        propsToPick.push(DateTimeKey.Seconds);\n      }\n\n      break;\n    }\n    case RxDatetimePickerMode.YearMonth: {\n      propsToPick = [DateTimeKey.Year, DateTimeKey.Month];\n      break;\n    }\n    case RxDatetimePickerMode.Year: {\n      propsToPick = [DateTimeKey.Year];\n      break;\n    }\n    case RxDatetimePickerMode.Month: {\n      propsToPick = [DateTimeKey.Month];\n      break;\n    }\n  }\n\n  return propsToPick;\n}\n\nexport function checkIsAfter(val1: RxDatetimeStruct | RxDateStruct, val2: RxDatetimeStruct | RxDateStruct, allowEqual?: boolean): boolean {\n  const today = getDateParts(new Date());\n  const startStruct = {...today, ...val1};\n  const endStruct = {...today, ...val2};\n\n  // Normalize 2 struct objects in case of missing some props like:\n  // val1: {year: null, month: 1, date: 2}; val2: {year: 2022, month: null, date: null}\n  [\n    DateTimeKey.Year,\n    DateTimeKey.Month,\n    DateTimeKey.Date,\n    DateTimeKey.Hours,\n    DateTimeKey.Minutes,\n    DateTimeKey.Seconds,\n    DateTimeKey.Milliseconds\n  ].forEach((dateTimeProp: string) => {\n    if (isNil(val1[dateTimeProp]) || isNil(val2[dateTimeProp])) {\n      const newValue = val1[dateTimeProp] || val2[dateTimeProp] || today[dateTimeProp];\n\n      startStruct[dateTimeProp] = newValue;\n      endStruct[dateTimeProp] = newValue;\n    }\n  });\n\n  const date1 = getDateFromParts(startStruct);\n  const date2 = getDateFromParts(endStruct);\n\n  return isValidDate(date1) && isValidDate(date2) && (allowEqual ? date1 >= date2 : date1 > date2);\n}\n\nexport function getStructWithDefaults(destStruct: RxDatetimeStruct,\n                                      defaultStruct: RxDatetimeStruct): RxDatetimeStruct {\n  destStruct = clone(destStruct);\n\n  if (destStruct && defaultStruct) {\n    forIn(defaultStruct, (defaultPartValue, defaultPartName) => {\n      if (isNil(destStruct[defaultPartName])) {\n        set(destStruct, defaultPartName, defaultPartValue);\n      }\n    });\n  }\n\n  return destStruct;\n}\n"]}