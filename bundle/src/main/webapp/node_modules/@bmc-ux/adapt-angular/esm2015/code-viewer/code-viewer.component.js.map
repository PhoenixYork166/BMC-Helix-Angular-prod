{"version":3,"file":"code-viewer.component.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/code-viewer/code-viewer.component.ts","../../../../../libs/adapt-angular/src/code-viewer/code-viewer.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {CodeLang, CodeViewerTextsModel} from './code-viewer.model';\nimport {CodeViewerService} from './code-viewer.service';\nimport {Subscription} from 'rxjs';\nimport {escapeHtml} from '../common/utilities';\nimport {KeyValueObject} from '../common/common.models';\n\nimport * as prism from 'prismjs';\nimport 'prismjs/prism.js';\nimport 'prismjs/components/prism-json.js';\nimport 'prismjs/components/prism-typescript.js';\nimport 'prismjs/plugins/line-numbers/prism-line-numbers.js';\nimport {AdaptTranslateService} from '../common/i18n/index';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularGenericDirective,\n  AdaptRadarAngularService\n} from '../common/radar/adapt-radar';\n\n// from https://github.com/Microsoft/TypeScript/issues/18237\ndeclare const Prism: typeof prism;\n// declare global {\n//   const Prism: typeof prism;\n// }\n\n@Component({\n  selector: 'adapt-code-viewer',\n  templateUrl: './code-viewer.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class AdaptCodeViewerComponent extends AdaptRadarAngularGenericDirective implements AfterViewInit, OnDestroy, OnInit, OnChanges {\n  @ViewChild('codeEl', {static: true}) codeEl: ElementRef<HTMLElement>;\n  @ViewChild('preEl', {static: true}) preEl: ElementRef<HTMLPreElement>;\n\n  /**\n   * The code snippet to be highlighted, as a string\n   * @docs-default\n   */\n  @Input() code: string;\n\n  /**\n   * Default theme\n   * @docs-default\n   */\n  @Input() theme: 'dark' | 'light';\n\n  /**\n   * Language syntax highlighter\n   * @docs-default\n   */\n  @Input() lang: CodeLang;\n\n  /**\n   * Toolbar text\n   * @docs-default {darkTheme: 'Dark theme', showLineNumbers: 'Show line numbers'}\n   */\n  @Input() texts: CodeViewerTextsModel = {};\n\n  /**\n   * Toggle toolbar visibility\n   * @docs-default true\n   */\n  @Input() hasToolbar: boolean = true;\n\n  defaultTexts: CodeViewerTextsModel = {};\n  darkTheme: boolean;\n  hasLines: boolean;\n\n  get preClass(): string {\n    return `${this.hasLines ? 'line-numbers ' : ''}language-${this.lang}`;\n  }\n\n  get cvClass(): string[] {\n    const classes: string[] = [];\n\n    classes.push(this.darkTheme ? 'cv__theme--dark' : 'cv__theme--light');\n    classes.push(this.hasToolbar ? 'cv--with-toolbar' : 'cv--without-toolbar');\n\n    return classes;\n  }\n\n  private _subscriptions: Subscription[] = [];\n  private _hasInited: boolean = false;\n\n  constructor(private _codeViewerService: CodeViewerService,\n              private _renderer: Renderer2,\n              private _ts: AdaptTranslateService,\n              private _changeDetectorRef: ChangeDetectorRef,\n              _adaptRadarService: AdaptRadarAngularService,\n              _elem: ElementRef<HTMLElement>) {\n    super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptCodeViewer);\n\n    this.hasLines = _codeViewerService.hasLinesValue;\n\n    this._subscriptions.push(\n      _codeViewerService.hasLines.subscribe(val => {\n        this.hasLines = val;\n        this.prepareHtmlAndHighlightCode();\n        this._changeDetectorRef.detectChanges();\n      }),\n      _codeViewerService.darkTheme.subscribe(val => {\n        this.darkTheme = val;\n        this.highlightCode();\n        this._changeDetectorRef.detectChanges();\n      }),\n    );\n\n    this.setDefaultTexts(_ts.getCurrentLanguage());\n  }\n\n  ngOnInit(): void {\n    this.darkTheme = this.theme ? this.theme === 'dark' : this._codeViewerService.darkThemeValue;\n    this.texts = {...this.defaultTexts, ...this.texts};\n  }\n\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n\n    this._hasInited = true;\n\n    this.prepareHtmlAndHighlightCode();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.code || changes.lang) {\n      this.prepareHtmlAndHighlightCode();\n    }\n\n    if (changes.theme && changes.theme.previousValue !== changes.theme.currentValue) {\n      this.darkTheme = this.theme === 'dark';\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._subscriptions.forEach(s => s.unsubscribe());\n    this._subscriptions.length = 0;\n  }\n\n  setDefaultTexts(translation: KeyValueObject): void {\n    this.defaultTexts.darkTheme = translation['adapt.codeViewer.darkTheme'];\n    this.defaultTexts.showLineNumbers = translation['adapt.codeViewer.showLineNumbers'];\n  }\n\n  hasLinesChange(value: boolean): void {\n    this._codeViewerService.setHasLines(value);\n  }\n\n  darkThemeChange(value: boolean): void {\n    this._codeViewerService.setDarkTheme(value);\n  }\n\n  prepareHtmlAndHighlightCode(): void {\n    if (this._hasInited) {\n      this._renderer.setAttribute(this.preEl.nativeElement, 'class', this.preClass);\n      this._renderer.setProperty(this.codeEl.nativeElement, 'innerHTML', escapeHtml(this.code || '\\n'));\n\n      this.highlightCode();\n    }\n  }\n\n\n  private highlightCode(): void {\n    if (this.code) {\n      Prism.highlightElement(this.codeEl.nativeElement);\n    }\n  }\n}\n","<div class=\"code-viewer\" [ngClass]=\"cvClass\">\n  <div class=\"code-viewer__toolbar\" *ngIf=\"hasToolbar\">\n    <adapt-rx-switch [label]=\"texts.showLineNumbers\"\n                     [adaptRadarDisableEventSending]=\"true\"\n                     [ngModel]=\"hasLines\"\n                     (ngModelChange)=\"hasLinesChange($event)\"></adapt-rx-switch>\n    <div class=\"cv__dark-switcher\">\n      <adapt-rx-switch [label]=\"texts.darkTheme\"\n                       [adaptRadarDisableEventSending]=\"true\"\n                       [ngModel]=\"darkTheme\"\n                       (ngModelChange)=\"darkThemeChange($event)\"></adapt-rx-switch>\n    </div>\n  </div>\n  <div class=\"code-viewer__highlighted-code-wrap\">\n    <pre #preEl [ngClass]=\"preClass\"><code #codeEl></code></pre>\n  </div>\n</div>\n"]}