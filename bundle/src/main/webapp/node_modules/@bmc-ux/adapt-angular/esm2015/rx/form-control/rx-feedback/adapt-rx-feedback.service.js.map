{"version":3,"file":"adapt-rx-feedback.service.js","sourceRoot":"","sources":["../../../../../../../libs/adapt-angular/src/rx/form-control/rx-feedback/adapt-rx-feedback.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Inject, Injectable, LOCALE_ID} from '@angular/core';\n\nimport {RxDatetimeStruct} from '../../rx-datetime/adapt-rx-datetime.types';\nimport {AdaptRxDatetimeParserFormatter} from '../../rx-datetime/adapt-rx-datetime-parser-formatter.service';\nimport {AdaptRxDatetimeI18nService} from '../../rx-datetime/adapt-rx-datetime-i18n.service';\nimport {\n  AdaptDatetimeError,\n  AdaptDatetimeRangeError,\n  AdaptRxError,\n  AdaptTranslateService\n} from '../../../common/i18n/index';\n\nimport {AdaptRxFeedbackErrorBody} from './adapt-rx-feedback.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdaptRxFeedbackService {\n  private _defaultValidationErrors: { [key: string]: AdaptRxFeedbackErrorBody };\n  private _currentLocale: string;\n\n  constructor(private _ts: AdaptTranslateService,\n              private _datetimeParserFormatter: AdaptRxDatetimeParserFormatter,\n              private _datetimeI18nService: AdaptRxDatetimeI18nService,\n              @Inject(LOCALE_ID) private _localeID: string) {\n    this._initErrorMessages();\n  }\n\n  get defaultValidationErrors(): { [key: string]: AdaptRxFeedbackErrorBody } {\n    if (this._currentLocale !== this._ts.getCurrentLocale()) {\n      this._initErrorMessages();\n    }\n\n    return this._defaultValidationErrors;\n  }\n\n  protected _initErrorMessages(): void {\n    this._currentLocale = this._ts.getCurrentLocale();\n\n    const translation = this._ts.getCurrentLanguage();\n\n    this._defaultValidationErrors = {\n      default: {\n        getMessage: () => translation[AdaptRxError.Default]\n      },\n      required: {\n        getMessage: () => translation[AdaptRxError.Required],\n        showOnTouched: true,\n        priority: 10\n      },\n      requiredtrue: {\n        getMessage: () => translation[AdaptRxError.RequiredTrue],\n        showOnTouched: true,\n        priority: 11\n      },\n      min: {\n        getMessage: ({min, actual}) => {\n          return translation[AdaptRxError.Min]\n            .replace(AdaptRxError.MinKey, min)\n            .replace(AdaptRxError.ActualKey, actual);\n        },\n        priority: 12\n      },\n      max: {\n        getMessage: ({max, actual}) => {\n          return translation[AdaptRxError.Max]\n            .replace(AdaptRxError.MaxKey, max)\n            .replace(AdaptRxError.ActualKey, actual);\n        },\n        priority: 13\n      },\n      minlength: {\n        getMessage: ({requiredLength, actualLength}) => {\n          return translation[AdaptRxError.MinLength]\n            .replace(AdaptRxError.RequiredLengthKey, requiredLength)\n            .replace(AdaptRxError.ActualLengthKey, actualLength);\n        },\n        priority: 14\n      },\n      maxlength: {\n        getMessage: ({requiredLength, actualLength}) => {\n          return translation[AdaptRxError.MaxLength]\n            .replace(AdaptRxError.RequiredLengthKey, requiredLength)\n            .replace(AdaptRxError.ActualLengthKey, actualLength);\n        },\n        priority: 15\n      },\n      email: {\n        getMessage: () => translation[AdaptRxError.Email],\n        priority: 16\n      },\n      pattern: {\n        getMessage: ({requiredPattern, actualValue}) => {\n          return translation[AdaptRxError.Pattern]\n            .replace(AdaptRxError.RequiredPatternKey, requiredPattern)\n            .replace(AdaptRxError.ActualValueKey, actualValue);\n        },\n        priority: 17\n      },\n      range: {\n        getMessage: ({min, max, actual}) => {\n          return translation[AdaptRxError.Range]\n            .replace(AdaptRxError.MinKey, min)\n            .replace(AdaptRxError.MaxKey, max)\n            .replace(AdaptRxError.ActualKey, actual);\n        },\n        priority: 18\n      },\n      rxDatetimeFormat: {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        getMessage: ({query, mode, locale, hasSeconds, use12HoursTime}) => {\n          const _today = new Date();\n\n          const today: RxDatetimeStruct = {\n            year: _today.getFullYear(),\n            month: _today.getMonth(),\n            date: _today.getDate(),\n            hours: _today.getHours(),\n            minutes: _today.getMinutes(),\n            seconds: _today.getSeconds()\n          };\n\n          return translation[AdaptDatetimeError.InvalidValue]\n            .replace(AdaptDatetimeError.Arg0Key, this._datetimeParserFormatter.format(today, mode, hasSeconds, use12HoursTime, locale));\n        },\n        priority: 19\n      },\n      rxDatetimeRangeFormat: {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        getMessage: ({start, end}) => {\n          return start ?\n            translation[AdaptDatetimeRangeError.InvalidStartName] : translation[AdaptDatetimeRangeError.InvalidEndName];\n        },\n        priority: 21\n      },\n      rxDatetimeRangeOrder: {\n        getMessage: () => {\n          return translation[AdaptDatetimeRangeError.InvalidRangeOrder];\n        },\n        priority: 20\n      },\n      integerNumber: {\n        getMessage: () => {\n          return translation['adapt.rx.error.integerNumber'];\n        },\n        priority: 30\n      },\n      scientificNumber: {\n        getMessage: () => {\n          return translation['adapt.rx.error.scientificNumber'];\n        },\n        priority: 31\n      },\n      floatNumber: {\n        getMessage: () => {\n          return translation['adapt.rx.error.floatNumber'];\n        },\n        priority: 32\n      },\n      NaN: {\n        getMessage: () => {\n          return translation['adapt.rx.error.default'];\n        },\n        priority: 33\n      }\n    };\n  }\n}\n"]}