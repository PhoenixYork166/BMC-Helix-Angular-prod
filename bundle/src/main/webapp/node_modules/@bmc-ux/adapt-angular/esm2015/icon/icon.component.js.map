{"version":3,"file":"icon.component.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/icon/icon.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  Renderer2,\n  ViewEncapsulation\n} from '@angular/core';\nimport {AdaptSvgIconName} from '@bmc-ux/dpl-iconfont';\nimport {isUndefined} from 'lodash-es';\n\nimport {AdaptIconConfig} from './icon.config';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularGenericDirective,\n  AdaptRadarAngularService\n} from '../common/radar/adapt-radar';\n\nlet icon_counter = 0;\n\n@Component({\n  selector: 'adapt-icon',\n  template: '<ng-content></ng-content>',\n  styles: [`\n    adapt-icon > svg {\n      position: relative;\n      bottom: .079em;\n      height: 1em;\n      width: 1em;\n      vertical-align: middle;\n      fill: currentcolor;\n      transition: all .2s;\n    }\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AdaptIconComponent extends AdaptRadarAngularGenericDirective implements OnInit {\n  /**\n   * Icon name\n   * @docs-default\n   */\n  @Input() set name(svgIconName: AdaptSvgIconName) {\n    if (isUndefined(this._testID)) {\n      this._testID = `icon-${svgIconName}-${icon_counter++}`;\n    }\n\n    if (this._svgIcon) {\n      this._renderer.removeChild(this._elementRef.nativeElement, this._svgIcon);\n    }\n\n    this._svgIcon = this._createSVGElementFromString(this._iconConfig.getIcon(svgIconName));\n\n    if (this._svgIcon) {\n      if (this._classList) {\n        this._svgIcon.classList.add(this._classList);\n      }\n\n      if (this._testID) {\n        this._renderer.setAttribute(this._svgIcon, 'data-testid', this._testID);\n      }\n\n      this._renderer.appendChild(this._elementRef.nativeElement, this._svgIcon);\n    }\n  }\n\n  /**\n   * The list of CSS classes that will be appended to SVG native element\n   * @docs-default\n   */\n  @Input() set classList(value: string) {\n    if (this._svgIcon) {\n      this._svgIcon.classList.remove(this._classList);\n      this._svgIcon.classList.add(value);\n    }\n\n    this._classList = value;\n  }\n\n  /**\n   * Icon description. Needed for a11y.\n   * @docs-default\n   */\n  @Input() set description(value: string) {\n    if (value) {\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-hidden', 'false');\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-label', value);\n    } else {\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-hidden', 'true');\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-label');\n    }\n\n    this._description = value;\n  }\n\n  /**\n   * The 'data-testid' attribute that will be appended to SVG native element\n   * @docs-default\n   */\n  @Input() set testID(value: string) {\n    if (this._svgIcon) {\n      this._renderer.setAttribute(this._svgIcon, 'data-testid', value);\n    }\n\n    this._testID = value;\n  }\n\n  private _classList: string;\n  private _testID: string;\n  private _description: string;\n  private _svgIcon: SVGElement;\n\n  constructor(private _elementRef: ElementRef,\n              private _renderer: Renderer2,\n              private _iconConfig: AdaptIconConfig,\n              _adaptRadarService: AdaptRadarAngularService,\n              _elem: ElementRef<HTMLElement>) {\n    super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptIcon);\n  }\n\n  ngOnInit(): void {\n    if (!this._elementRef.nativeElement.getAttribute('role')) {\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'role', 'img');\n    }\n\n    if (!this._description) {\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-hidden', 'true');\n    }\n  }\n\n  private _createSVGElementFromString(svgString: string): SVGElement | null {\n    const div = this._renderer.createElement('div');\n\n    div.innerHTML = svgString;\n\n    return div.querySelector('svg') || null;\n  }\n}\n"]}