import { Directive, ElementRef, EventEmitter, Input, Output } from '@angular/core';
import { ResizeService } from './resize.service';
import * as i0 from "@angular/core";
import * as i1 from "./resize.service";
export class AdaptResizeDirective {
    constructor(_el, _resizeService) {
        this._el = _el;
        this._resizeService = _resizeService;
        this.elementResize = new EventEmitter();
    }
    ngOnInit() {
        this.elementToListen = this.elementToListen || this._el.nativeElement;
        this._resizeService.addResizeEventListener(this.elementToListen, () => {
            this.elementResize.emit();
        });
    }
    ngOnDestroy() {
        this._resizeService.removeResizeEventListener(this.elementToListen);
    }
}
AdaptResizeDirective.ɵfac = function AdaptResizeDirective_Factory(t) { return new (t || AdaptResizeDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ResizeService)); };
AdaptResizeDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: AdaptResizeDirective, selectors: [["", "adaptResize", ""]], inputs: { elementToListen: ["adaptResize", "elementToListen"] }, outputs: { elementResize: "elementResize" }, exportAs: ["adaptResize"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptResizeDirective, [{
        type: Directive,
        args: [{
                selector: '[adaptResize]',
                exportAs: 'adaptResize',
            }]
    }], function () { return [{ type: i0.ElementRef }, { type: i1.ResizeService }]; }, { elementToListen: [{
            type: Input,
            args: ['adaptResize']
        }], elementResize: [{
            type: Output
        }] }); })();
//# sourceMappingURL=resize.directive.js.map