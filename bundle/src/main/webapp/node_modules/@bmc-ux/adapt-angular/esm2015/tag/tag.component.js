import { Component, ElementRef, EventEmitter, Input, Output, ViewChild, ViewEncapsulation } from '@angular/core';
import { AdaptTranslateService } from '../common/i18n/index';
import { AdaptRadarAngularCustomEventName, AdaptRadarAngularGenericDirective, AdaptRadarAngularService } from '../common/radar/adapt-radar';
import { isUndefined } from 'lodash-es';
import { ColorUtils } from '../common/color.utils';
import * as i0 from "@angular/core";
import * as i1 from "../common/i18n/index";
import * as i2 from "../common/radar/adapt-radar";
import * as i3 from "@angular/common";
const _c0 = ["content"];
function AdaptTagComponent_a_2_Template(rf, ctx) { if (rf & 1) {
    const _r3 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "a", 3);
    i0.ɵɵlistener("focus", function AdaptTagComponent_a_2_Template_a_focus_0_listener() { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return ctx_r2.iconAriaHidden = false; })("blur", function AdaptTagComponent_a_2_Template_a_blur_0_listener() { i0.ɵɵrestoreView(_r3); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.iconAriaHidden = true; })("click", function AdaptTagComponent_a_2_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r5 = i0.ɵɵnextContext(); return ctx_r5.remove.emit($event); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵattribute("aria-hidden", ctx_r0.iconAriaHidden)("aria-label", ctx_r0.closeBtnText);
} }
const _c1 = ["*"];
export class AdaptTagComponent extends AdaptRadarAngularGenericDirective {
    constructor(ts, _adaptRadarService, _elem) {
        super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptTag);
        /**
         * Emits an event for tag item removing (but item will be not removed automatically)
         */
        this.remove = new EventEmitter();
        this.iconAriaHidden = true;
        this._closeBtnText = ts.getCurrentLanguage()['adapt.common.remove'];
    }
    // user defined type guard
    /**
     * type check for user defined types
     * ref: https://www.typescriptlang.org/docs/handbook/advanced-types.html#user-defined-type-guards
     */
    _isAdaptTagType(tagType) {
        return ['primary', 'info', 'success', 'warning', 'danger', 'active', 'secondary'].includes(tagType);
    }
    get tagClass() {
        const classes = this.isRemovable ? ['active'] : [];
        if (this.type && this._isAdaptTagType(this.type)) {
            let styleClass = `a-tag-${this.type}`;
            if (this.disabled) {
                styleClass = styleClass + '-disabled';
            }
            classes.push(styleClass);
        }
        return classes;
    }
    get tagStyle() {
        let style = {};
        if (this.type && !this._isAdaptTagType(this.type)) {
            style = { backgroundColor: this.type, color: this._getTextColor() };
        }
        return style;
    }
    get isRemovable() {
        if (this.disabled) {
            return false;
        }
        return this.removable || (!!this.remove.observers.length && isUndefined(this.removable));
    }
    get closeBtnText() {
        return this._closeBtnText + (this.content ? ` ${this.content.nativeElement.innerText}` : '');
    }
    _getTextColor() {
        this._contrastLightResults = ColorUtils.checkContrast('#FFFFFF', this.type);
        this._contrastDarkResults = ColorUtils.checkContrast('#333333', this.type);
        if (this._contrastLightResults.ratio > this._contrastDarkResults.ratio) {
            return '#FFFFFF';
        }
        else if (this._contrastLightResults.ratio < this._contrastDarkResults.ratio) {
            return '#333333';
        }
    }
}
AdaptTagComponent.ɵfac = function AdaptTagComponent_Factory(t) { return new (t || AdaptTagComponent)(i0.ɵɵdirectiveInject(i1.AdaptTranslateService), i0.ɵɵdirectiveInject(i2.AdaptRadarAngularService), i0.ɵɵdirectiveInject(i0.ElementRef)); };
AdaptTagComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptTagComponent, selectors: [["adapt-tag"]], viewQuery: function AdaptTagComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 7);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);
    } }, inputs: { type: "type", removable: "removable", disabled: "disabled" }, outputs: { remove: "remove" }, features: [i0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 9, vars: 3, consts: [[1, "a-tag", 3, "ngClass", "ngStyle"], ["role", "button", "tabindex", "0", "class", "close close-inverse", 3, "focus", "blur", "click", 4, "ngIf"], ["content", ""], ["role", "button", "tabindex", "0", 1, "close", "close-inverse", 3, "focus", "blur", "click"]], template: function AdaptTagComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵprojectionDef();
        i0.ɵɵelementStart(0, "span", 0);
        i0.ɵɵtext(1, "\n  ");
        i0.ɵɵtemplate(2, AdaptTagComponent_a_2_Template, 1, 2, "a", 1);
        i0.ɵɵtext(3, "\n  ");
        i0.ɵɵelementStart(4, "span", null, 2);
        i0.ɵɵprojection(6);
        i0.ɵɵelementEnd();
        i0.ɵɵtext(7, "\n");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(8, "\n");
    } if (rf & 2) {
        i0.ɵɵproperty("ngClass", ctx.tagClass)("ngStyle", ctx.tagStyle);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.isRemovable);
    } }, directives: [i3.NgClass, i3.NgStyle, i3.NgIf], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptTagComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-tag',
                templateUrl: './tag.component.html',
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: i1.AdaptTranslateService }, { type: i2.AdaptRadarAngularService }, { type: i0.ElementRef }]; }, { type: [{
            type: Input
        }], removable: [{
            type: Input
        }], disabled: [{
            type: Input
        }], remove: [{
            type: Output
        }], content: [{
            type: ViewChild,
            args: ['content', { static: true }]
        }] }); })();
//# sourceMappingURL=tag.component.js.map