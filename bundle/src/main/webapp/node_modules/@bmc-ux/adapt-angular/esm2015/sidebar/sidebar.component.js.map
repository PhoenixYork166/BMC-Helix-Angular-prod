{"version":3,"file":"sidebar.component.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/sidebar/sidebar.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  Renderer2, SimpleChanges,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {ReplaySubject} from 'rxjs';\n\nimport {AdaptSidebarItemComponent} from './sidebar-item/sidebar-item.component';\nimport {AdaptSidebarColumnComponent} from './sidebar-column/sidebar-column.component';\nimport {AdaptSidebarService} from './services/sidebar.service';\nimport {InteractPanel} from './sidebar.model';\nimport {elWidthWithMargin, isUndefined} from '../common/utilities';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {KeyValueObject, AdaptIsPanelOpenedCurrentlyModel} from '../common/common.models';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularGenericDirective,\n  AdaptRadarAngularService\n} from '../common/radar/adapt-radar';\n\nexport interface SidebarItem {\n  /**\n   * Icon class(dpl-iconfont) for each tab button\n   */\n  iconClass: string;\n\n  /**\n   * aria-label attribute for each tab button\n   */\n  ariaLabel?: string;\n\n  /**\n   * Header text for the active sidebar item\n   */\n  headerTitle?: string;\n\n  /**\n   * Tooltip additional text\n   */\n  tooltipText?: string;\n}\n\n@Component({\n  selector: 'adapt-sidebar',\n  exportAs: 'adaptSidebar',\n  encapsulation: ViewEncapsulation.None,\n  providers: [AdaptSidebarService],\n  template: `\n    <div class=\"adapt-sidebar-wrapper\"\n         [ngClass]=\"{className: className, 'light': theme === 'light', 'dark': theme === 'dark', 'right': position === 'right','opened': isPanelOpened || isPanel2Opened}\">\n      <div #nav class=\"adapt-sidebar-nav {{'adapt-sidebar-nav__' + getCurrentPosition()}}\"\n           [ngClass]=\"{navClassName: navClassName}\"\n           (click)=\"clickNav($event)\">\n        <button *ngFor=\"let tab of tabs; let id = index;\"\n                [attr.data-id]=\"id + 1\"\n                class=\"adapt-sidebar-nav-btn\"\n                [class.active]=\"selectedId === id\"\n                [ngClass]=\"tab.iconClass\"\n                role=\"button\"\n                type=\"button\"\n                [attr.aria-label]=\"tab.ariaLabel ? tab.ariaLabel : tab.headerTitle\"\n                [adaptTooltip]=\"tab.tooltipText\"\n                [adaptRadarDisableEventSending]=\"true\"\n                [placement]=\"tooltipPosition\"></button>\n      </div>\n\n      <div #panel class=\"adapt-sidebar-panels {{'adapt-sidebar-panels__' + getCurrentPosition()}}\"\n           [ngClass]=\"{'opened': isPanelOpened}\">\n        <div *ngIf=\"!columnPanels?.length;else columnPanel\" class=\"adapt-sidebar-items\">\n          <ng-content select=\"adapt-sidebar-item\"></ng-content>\n        </div>\n        <ng-template #columnPanel>\n          <ng-content select=\"adapt-sidebar-column[position='left']\"></ng-content>\n        </ng-template>\n      </div>\n      <div #main class=\"adapt-sidebar-main\" [ngClass]=\"{'adapt-sidebar-main--transition': !firstCheck}\">\n        <ng-content select=\".main\"></ng-content>\n      </div>\n      <ng-container *ngIf=\"tabs2.length\">\n        <div #nav2\n             class=\"adapt-sidebar-nav {{'adapt-sidebar-nav__' + getOppositePosition()}}\"\n             [ngClass]=\"{navClassName: navClassName}\"\n             (click)=\"clickNav($event)\">\n          <button *ngFor=\"let tab of tabs2; let id = index;\"\n                  [attr.data-id]=\"tabs.length + id + 1\"\n                  class=\"adapt-sidebar-nav-btn\"\n                  [class.active]=\"selectedId2 === tabs.length + id\"\n                  [ngClass]=\"tab.iconClass\"\n                  role=\"button\"\n                  type=\"button\"\n                  [attr.aria-label]=\"tab.ariaLabel ? tab.ariaLabel : tab.headerTitle\"\n                  [adaptTooltip]=\"tab.tooltipText\"\n                  [adaptRadarDisableEventSending]=\"true\"\n                  [placement]=\"tooltipPosition === 'left' ? 'right': 'left'\"></button>\n        </div>\n        <div class=\"adapt-sidebar-panels {{'adapt-sidebar-panels__' + getOppositePosition()}}\"\n             [ngClass]=\"{'opened': isPanel2Opened}\"\n             #panel2>\n          <ng-content select=\"adapt-sidebar-column[position='right']\"></ng-content>\n        </div>\n      </ng-container>\n    </div>`\n})\nexport class AdaptSidebarComponent extends AdaptRadarAngularGenericDirective implements OnInit, AfterContentInit, AfterViewInit, OnChanges, OnDestroy {\n  pWidth: number = 300;\n  isRTL: boolean = false;\n  tooltipPosition: 'left' | 'right' = 'left';\n  tabs: SidebarItem[] = [];\n  tabs2: SidebarItem[] = [];\n  isPanelOpened: boolean = false;\n  isPanel2Opened: boolean = false;\n  selectedTabHeaderTitle: string;\n  firstCheck: boolean = true;\n\n  set selectedId(id: number) {\n    if (!isUndefined(id) && id !== this._selectedId) {\n      this._selectedId = id;\n      this.firstCheck = this.openedId === id;\n    }\n  }\n\n  get selectedId(): number {\n    return this._selectedId;\n  }\n\n  set selectedId2(id: number) {\n    if (!isUndefined(id) && id !== this._selectedId2) {\n      this._selectedId2 = id;\n      this.firstCheck = this.openedId === id;\n    }\n  }\n\n  get selectedId2(): number {\n    return this._selectedId2;\n  }\n\n  /**\n   * Destroy subject\n   */\n  readonly destroy$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  /**\n   * Sets the class for component container element\n   * @docs-default\n   */\n  @Input() className: string;\n\n  /**\n   * Sets the class for navigation container element\n   * @docs-default\n   */\n  @Input() navClassName: string;\n\n  /**\n   * Sets the width for the slipping panel\n   * @docs-default 300px\n   */\n  @Input() panelWidth: string = `${this.pWidth}px`;\n\n  /**\n   * Sets the width for the second slipping panel\n   * @docs-default 300px\n   */\n  @Input() panel2Width: string = `${this.pWidth}px`;\n\n  /**\n   * Defines the side where the navigation element would be placed to. Available options - 'left', 'right'\n   * @docs-default left\n   */\n  @Input() position: 'left' | 'right' = 'left';\n\n  /**\n   * Defines the color scheme would be applied. Available options - 'light', 'dark'\n   * @docs-default light\n   */\n  @Input() theme: 'light' | 'dark' = 'light';\n\n  /**\n   * The minimum width of main block with data in px\n   * @docs-default 100\n   */\n  @Input() widthLimit: number = 100;\n\n  /**\n   * Sets the id of the panel which would be initially opened\n   * @docs-default\n   */\n  @Input() openedId: number;\n\n  /**\n   * Allows main container dynamically adjust content to the width\n   * @docs-default false\n   */\n  @Input() adjustMainContainerWidth: boolean = false;\n\n  /**\n   * An event fires when id for opened panel changed\n   */\n  @Output() readonly openedIdChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /**\n   * An event fires when the panel is either opened or closed and return an object containing 2 properties, panel id as integer and isPanelOpened as boolean\n   */\n  @Output() readonly isPanelOpenedCurrently: EventEmitter<AdaptIsPanelOpenedCurrentlyModel> = new EventEmitter<AdaptIsPanelOpenedCurrentlyModel>();\n\n  @ContentChildren(AdaptSidebarItemComponent) panels: QueryList<AdaptSidebarItemComponent>;\n  @ContentChildren(AdaptSidebarColumnComponent) columnPanels: QueryList<AdaptSidebarColumnComponent>;\n\n  @ViewChild('main', {static: true}) main: ElementRef<HTMLDivElement>;\n  @ViewChild('nav', {static: true}) nav: ElementRef<HTMLDivElement>;\n  @ViewChild('panel', {static: true}) panel: ElementRef<HTMLDivElement>;\n  @ViewChild('nav2', {static: false}) nav2: ElementRef<HTMLDivElement>;\n  @ViewChild('panel2', {static: false}) panel2: ElementRef<HTMLDivElement>;\n\n  private _navWidth: number = 55;\n  private _selectedId: number;\n  private _selectedId2: number;\n\n  constructor(private _service: AdaptSidebarService,\n              private _renderer: Renderer2,\n              private _dir: Directionality,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _ngZone: NgZone,\n              _adaptRadarService: AdaptRadarAngularService,\n              _elem: ElementRef<HTMLElement>) {\n    super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptSidebar);\n\n    this._service.closePanel.subscribe((id) => {\n      if (id >= this.tabs.length) {\n        this.closePanel(this.panel2);\n      } else {\n        this.closePanel(this.panel);\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.isRTL = this._dir.value === 'rtl';\n\n    if (this.isRTL) {\n      this.tooltipPosition = this.position;\n    } else {\n      this.tooltipPosition = this.position === 'left' ? 'right' : 'left';\n    }\n  }\n\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n\n    //For open panel2\n\n    this._changeDetectorRef.detectChanges();\n    this._ngZone.onStable\n      .pipe(takeUntil(this.destroy$), take(1))\n      .subscribe(() => {\n        if (!isUndefined(this.openedId)) {\n          this.openPanel(this.openedId);\n        }\n      });\n  }\n\n  ngAfterContentInit(): void {\n    if (this.columnPanels && this.columnPanels.length) {\n      this._service.initColumnsPanels(this.columnPanels);\n\n      const tabs: AdaptSidebarItemComponent[][] = this.columnPanels.map(column => this._configureTabs(column.panels));\n\n      this.tabs = tabs[0];\n      this.tabs2 = tabs[1];\n    } else {\n      this._service.initPanels(this.panels);\n\n      this.tabs = this._configureTabs(this.panels);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.position && changes.position.currentValue !== changes.position.previousValue && this.main?.nativeElement) {\n      this._updatePanelStyles(this.main.nativeElement.getBoundingClientRect().width, this.panel);\n      this._setMainContainerStyles(this.isPanelOpened ? this.panelWidth : '0px', this.nav);\n\n      if (this.panel2 && this.nav2) {\n        this._updatePanelStyles(this.main.nativeElement.getBoundingClientRect().width, this.panel2);\n        this._setMainContainerStyles(this.isPanel2Opened ? this.panel2Width : '0px', this.nav2);\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  clickNav({target}: Event): void {\n    const dataIdAttr = (target as HTMLButtonElement).getAttribute('data-id');\n\n    if (!dataIdAttr) {\n      return;\n    }\n\n    const targetId: number = parseInt(dataIdAttr, 10) - 1;\n\n    // if the target panel is already opened it should be closed\n    // if the target panel is panel2\n    if (targetId >= this.tabs.length) {\n      if (this.isPanel2Opened && targetId === this.selectedId2) {\n        this.closePanel(this.panel2);\n\n        return;\n      }\n    } else {\n      if (this.isPanelOpened && targetId === this.selectedId) {\n        this.closePanel(this.panel);\n\n        return;\n      }\n    }\n\n    this.openPanel(targetId);\n  }\n\n  closePanel(panel?: ElementRef<HTMLDivElement>): void {\n    if (panel) {\n      const isPanel2: boolean = panel === this.panel2;\n\n      if (isPanel2) {\n        this.isPanel2Opened = false;\n        this.selectedId2 = null;\n      } else {\n        this.isPanelOpened = false;\n        this.selectedId = null;\n      }\n\n      const interactPanelData: InteractPanel = this._getInteractPanelData(panel);\n\n      this._setMainContainerStyles('0px', interactPanelData.nav);\n      this._setStyles(panel.nativeElement, {\n        [interactPanelData.position]: '0'\n      });\n    } else if (this.panel2) { // Close panel and panel2 if the panel2 is exist\n      this._closeAllPanels();\n    } else { // Close default panel\n      this.isPanelOpened = false;\n      this.selectedId = null;\n\n      this._setMainContainerStyles('0px', this.nav);\n\n      this._setStyles(this.panel.nativeElement, {\n        [this.getCurrentPosition()]: '0'\n      });\n    }\n\n    this.isPanelOpenedCurrently.emit({\n      id: this.selectedId,\n      id2: this.selectedId2,\n      isPanelOpened: this.isPanelOpened,\n      isPanel2Opened: this.isPanel2Opened\n    });\n  }\n\n  openPanel(id: number): void {\n    const mainWidth = this.main.nativeElement.getBoundingClientRect().width;\n\n    if (id >= this.tabs.length && this.tabs2.length) {\n      this.selectedTabHeaderTitle = this.tabs2[id - this.tabs.length].headerTitle;\n      this._service.selectPanel2(id);\n      this.selectedId2 = id;\n      this._updatePanelStyles(mainWidth, this.panel2);\n      this.isPanel2Opened = true;\n    } else {\n      this.selectedTabHeaderTitle = this.tabs[id].headerTitle;\n      this._service.selectPanel(id);\n      this.selectedId = id;\n      this._updatePanelStyles(mainWidth, this.panel);\n      this.isPanelOpened = true;\n    }\n\n    this.openedIdChange.emit(id);\n    this.isPanelOpenedCurrently.emit({\n      id: this.selectedId,\n      id2: this.selectedId2,\n      isPanelOpened: this.isPanelOpened,\n      isPanel2Opened: this.isPanel2Opened\n    });\n  }\n\n  getCurrentPosition(): string {\n    if (this.isRTL) {\n      return this.position === 'left' ? 'right' : 'left';\n    }\n\n    return this.position;\n  }\n\n  getOppositePosition(): string {\n    return this.getCurrentPosition() === 'left' ? 'right' : 'left';\n  }\n\n  private _configureTabs(panels: QueryList<AdaptSidebarItemComponent>): AdaptSidebarItemComponent[] {\n    panels.forEach(panel => {\n      panel.theme = this.theme;\n    });\n\n    return panels.toArray();\n  }\n\n  private _updatePanelStyles(mainWidth: number, panel: ElementRef<HTMLDivElement>): void {\n    const interactPanelData: InteractPanel = this._getInteractPanelData(panel);\n    const oppositePanelData: InteractPanel = this._getOppositePanelData(panel);\n    let fullOpenOppositePanel: boolean = false;\n\n    // Interaction panel should be open using the entire space if the opposite panel is open and occupies >= mainWidth\n    if (oppositePanelData.panel) {\n      const currentOppositePanelWidth: number = oppositePanelData.panel.nativeElement.getBoundingClientRect().width;\n      const takeMainWidthOppositePanel: boolean = currentOppositePanelWidth === mainWidth + 1;\n\n      fullOpenOppositePanel = takeMainWidthOppositePanel && oppositePanelData.isOpened;\n    }\n\n    if (mainWidth > this.widthLimit + parseInt(interactPanelData.panelWidth, 10) && !fullOpenOppositePanel) {\n      this._setMainContainerStyles(interactPanelData.panelWidth, interactPanelData.nav, oppositePanelData.panelWidth);\n\n      this._setStyles(panel.nativeElement, {\n        width: interactPanelData.panelWidth\n      });\n    } else {\n      if (!interactPanelData.isOpened) {\n        this._setStyles(panel.nativeElement, {\n          width: `${mainWidth + 1}px`\n        });\n      }\n    }\n\n    this._setStyles(panel.nativeElement, {\n      [interactPanelData.position === 'left' ? 'right' : 'left']: 'auto',\n      [interactPanelData.position]: `${this._navWidth}px`\n    });\n  }\n\n  private _setMainContainerStyles(panelWidth: string, nav: ElementRef<HTMLDivElement>, oppositePanelWidth?: string): void {\n    const isNav2: boolean = nav === this.nav2;\n    const isOpenedOppositePanel: boolean = isNav2 ? this.isPanelOpened : this.isPanel2Opened;\n    const position: string = isNav2 ? this.getOppositePosition() : this.getCurrentPosition();\n\n    if (isOpenedOppositePanel && panelWidth === '0px') {\n      this._setStyles(this.main.nativeElement, {\n        [`margin-${position === 'left' ? 'right' : 'left'}`]: oppositePanelWidth,\n        [`margin-${position}`]: panelWidth,\n        width: this.adjustMainContainerWidth ?\n          `calc(100% - ${parseFloat(panelWidth) + elWidthWithMargin(nav.nativeElement)}px)` :\n          null,\n      });\n    } else {\n      this._setStyles(this.main.nativeElement, {\n        [`margin-${position === 'left' ? 'right' : 'left'}`]: isOpenedOppositePanel ? oppositePanelWidth : 'auto',\n        [`margin-${position}`]: panelWidth,\n        width: this.adjustMainContainerWidth ?\n          `calc(100% - ${parseFloat(panelWidth) + elWidthWithMargin(nav.nativeElement)}px)` :\n          null,\n      });\n    }\n  }\n\n  private _closeAllPanels(): void {\n    this._setMainContainerStyles('0px', this.nav, '0px');\n    this.isPanelOpened = false;\n    this.selectedId = null;\n    this.isPanel2Opened = false;\n    this.selectedId2 = null;\n\n    this._setStyles(this.panel.nativeElement, {\n      [this.getCurrentPosition()]: '0'\n    });\n    this._setStyles(this.panel2.nativeElement, {\n      [this.getOppositePosition()]: '0'\n    });\n  }\n\n  private _setStyles(el: HTMLElement, styles: KeyValueObject): void {\n    const keys = Object.keys(styles);\n\n    keys.forEach(name => {\n      this._renderer.setStyle(el, name, styles[name]);\n    });\n  }\n\n  private _getInteractPanelData(panel: ElementRef<HTMLDivElement>): InteractPanel {\n    const isPanel: boolean = panel === this.panel;\n\n    return {\n      panel,\n      isOpened: isPanel ? this.isPanelOpened : this.isPanel2Opened,\n      position: isPanel ? this.getCurrentPosition() : this.getOppositePosition(),\n      nav: isPanel ? this.nav : this.nav2,\n      panelWidth: isPanel ? this.panelWidth : this.panel2Width\n    };\n  }\n\n  private _getOppositePanelData(panel: ElementRef<HTMLDivElement>): InteractPanel {\n    const oppositePanel: ElementRef<HTMLDivElement> = panel === this.panel ? this.panel2 : this.panel;\n\n    return this._getInteractPanelData(oppositePanel);\n  }\n}\n"]}