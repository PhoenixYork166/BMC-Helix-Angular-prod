{"version":3,"file":"adapt-filter-tags.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/advanced-filtering/filter-tags/adapt-filter-tags.ts","../../../../../../libs/adapt-angular/src/advanced-filtering/filter-tags/adapt-filter-tags.html"],"names":[],"mappings":"AAAA,OAAO,EACL,uBAAuB,EACvB,iBAAiB,EACjB,SAAS,EACT,YAAY,EACZ,WAAW,EACX,KAAK,EACL,MAAM,GACP,MAAM,eAAe,CAAC;AACvB,OAAO,EAAC,YAAY,EAAC,MAAM,wBAAwB,CAAC;AACpD,OAAO,EAAC,OAAO,EAAC,MAAM,uBAAuB,CAAC;;;;;;;;;ICHpC,4BAAA;IAAA,8BAAoF;IAClF,8BAAA;IAAA,oCAG0C;IAAxC,uWAAuC;IACvC,YACF;IAAA,iBAAY;IACd,4BAAA;IAAA,iBAAM;IACR,0BAAA;;;;IAR4B,eAAyD;IAAzD,qEAAyD;IAE/E,eAAsC;IAAtC,oDAAsC,kBAAA;IAGtC,eACF;IADE,wEACF;;;IATR,6BAAyF;IACvF,wBAAA;IAAA,4CAAmF;IACjF,0BAAA;IAAA,wJASc;IAChB,wBAAA;IAAA,iBAAoB;IACtB,sBAAA;IAAA,0BAAe;;;IAZyC,eAA4B;IAA5B,qCAA4B;;;IAFtF,6BAAmC;IACjC,sBAAA;IAAA,0GAae;IACjB,oBAAA;IAAA,0BAAe;;;IAdiB,eAAS;IAAT,qCAAS,6CAAA;;ADkB3C,MAAM,OAAO,wBAAwB;IAWnC,YAAoB,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;QALxB,WAAM,GAAwC,IAAI,YAAY,EAAyB,CAAC;QACxF,sBAAiB,GAAmD,IAAI,YAAY,EAAoC,CAAC;QAEvF,UAAK,GAAY,IAAI,CAAC;IAG3E,CAAC;IAED,oBAAoB,CAAC,KAAa,EAAE,GAAiD;;QACnF,OAAO,CAAA,MAAA,MAAC,GAAyB,0CAAE,IAAI,0CAAE,YAAY,CAAC,EAAE;gBACnD,MAAC,GAAgC,0CAAE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAA;eACjD,KAAK,CAAC;IACb,CAAC;IAED,QAAQ,CAAC,QAAoC,EAAE,GAAiD,EAAE,KAAa;QAC7G,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAC,CAAC,CAAC;IAC3C,CAAC;IAED,uBAAuB,CAAC,KAAiC;QACvD,MAAM,gBAAgB,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;QAEpE,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE,gBAAgB,CAAC,CAAC;QAC1F,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAC,gBAAgB,EAAC,CAAC,CAAC;QAChD,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;;gGA9BU,wBAAwB;2EAAxB,wBAAwB;;;QCtBrC,uCAEoE;QAAtD,yIAAqB,mCAA+B,IAAC;QACjE,oBAAA;QAAA,2FAee;QAEf,sBAAA;QAAA,gDAA+C;QAC7C,sBAAA;QAAA,iCAAwF;QACtF,YACF;QAAA,iBAAS;QACX,oBAAA;QAAA,iBAAwB;QAC1B,kBAAA;QAAA,iBAAe;QACf,mBAAA;;QAzBc,oDAAsC;QAEnC,eAAkB;QAAlB,gEAAkB;QAiBV,eAAuB;QAAvB,qCAAuB;QAE1C,eACF;QADE,gEACF;;uFDDS,wBAAwB;cALpC,SAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,0BAA0B;gBACvC,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;oEAIU,IAAI;kBAAZ,KAAK;YACG,KAAK;kBAAb,KAAK;YAEa,MAAM;kBAAxB,MAAM;YACY,iBAAiB;kBAAnC,MAAM;YAE8C,KAAK;kBAAzD,WAAW;mBAAC,sCAAsC","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n} from '@angular/core';\nimport {formatString} from '../../common/utilities';\nimport {SafeCdr} from '../../common/safe-cdr';\nimport {AdaptSubnavItemComponent} from '../../subnav/subnav-item.component';\nimport {AdvancedFilterTag, AdvancedFilterTexts} from '../advanced-filter/advanced-filter.models';\nimport {FacetedFilterTexts, SelectedFacetedFilterTag} from '../faceted-filter/faceted-filter.models';\nimport {FilterTagsRemoveEvent, FilterTagsVisibilityChangedEvent} from './adapt-filter-tags.model';\n\n\n@Component({\n  selector: 'adapt-filter-tags',\n  templateUrl: './adapt-filter-tags.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AdaptFilterTagsComponent {\n  hiddenTagsLabel: string;\n\n  @Input() tags: AdvancedFilterTag[] | SelectedFacetedFilterTag[];\n  @Input() texts: AdvancedFilterTexts | FacetedFilterTexts;\n\n  @Output() readonly remove: EventEmitter<FilterTagsRemoveEvent> = new EventEmitter<FilterTagsRemoveEvent>();\n  @Output() readonly visibilityChanged: EventEmitter<FilterTagsVisibilityChangedEvent> = new EventEmitter<FilterTagsVisibilityChangedEvent>();\n\n  @HostBinding('class.advanced-filter-tags-component') class: boolean = true;\n\n  constructor(private _cdr: ChangeDetectorRef) {\n  }\n\n  trackByForOutsideTag(index: number, tag: AdvancedFilterTag | SelectedFacetedFilterTag): string | number {\n    return (tag as AdvancedFilterTag)?.data?.filterOption.id\n      || (tag as SelectedFacetedFilterTag)?.parent.data.id\n      || index;\n  }\n\n  onRemove(domEvent: MouseEvent | KeyboardEvent, tag: AdvancedFilterTag | SelectedFacetedFilterTag, index: number): void {\n    this.remove.emit({domEvent, tag, index});\n  }\n\n  handleVisibilityChanged(items: AdaptSubnavItemComponent[]): void {\n    const hiddenItemsCount = items.filter(item => item.isHidden).length;\n\n    this.hiddenTagsLabel = formatString(this.texts.hiddenItemsCounterLabel, hiddenItemsCount);\n    this.visibilityChanged.emit({hiddenItemsCount});\n    SafeCdr.detectChanges(this._cdr);\n  }\n}\n","<adapt-subnav class=\"advanced-filter-tags\"\n              [adaptRadarDisableEventSending]=\"true\"\n              (visibilityChanged)=\"handleVisibilityChanged($event)\">\n  <ng-container *ngIf=\"tags?.length\">\n    <ng-container *ngFor=\"let tag of tags; let index = index; trackBy: trackByForOutsideTag\">\n      <adapt-subnav-item class=\"advanced-filter-tags__item\" [adaptSubnavItem]=\"itemTmpl\">\n        <ng-template #itemTmpl let-hidden>\n          <div class=\"text-no-wrap\" [class.advanced-filter-tags__item_dropdown-item]=\"hidden\">\n            <adapt-tag\n              [adaptRadarDisableEventSending]=\"true\"\n              [type]=\"'active'\"\n              (remove)=\"onRemove($event, tag, index)\">\n              {{ tag.text }}\n            </adapt-tag>\n          </div>\n        </ng-template>\n      </adapt-subnav-item>\n    </ng-container>\n  </ng-container>\n\n  <adapt-subnav-dropdown [autoClose]=\"'outside'\">\n    <button type=\"button\" class=\"btn btn-link advanced-filter-tags__dropdown-toggle-button\">\n      {{hiddenTagsLabel}}\n    </button>\n  </adapt-subnav-dropdown>\n</adapt-subnav>\n"]}