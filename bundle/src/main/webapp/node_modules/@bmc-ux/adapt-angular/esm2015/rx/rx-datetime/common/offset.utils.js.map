{"version":3,"file":"offset.utils.js","sourceRoot":"","sources":["../../../../../../../libs/adapt-angular/src/rx/rx-datetime/common/offset.utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAChD,OAAO,EAAC,aAAa,EAAC,MAAM,kBAAkB,CAAC;AAE/C;;;;;GAKG;AACH,MAAM,UAAU,iBAAiB,CAAC,IAAU,EAAE,QAAiB;IAC7D,IAAI,CAAC,IAAI,EAAE;QACT,OAAO,IAAI,CAAC;KACb;SAAM,IAAI,aAAa,CAAC,IAAI,CAAC,EAAE;QAC9B,OAAO,GAAG,CAAC;KACZ;SAAM,IAAI,CAAC,QAAQ,EAAE;QACpB,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC;KACjC;IAED,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAChD,MAAM,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACnC,MAAM,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACrC,MAAM,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACjC,MAAM,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACnC,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACvC,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACvC,MAAM,EAAE,GAAG,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IACxC,MAAM,GAAG,GAAG,GAAG,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,IAAI,IAAI,MAAM,IAAI,MAAM,IAAI,EAAE,EAAE,CAAC;IAExE,sEAAsE;IACtE,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IAEpC,2GAA2G;IAC3G,kHAAkH;IAClH,wGAAwG;IACxG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;AAC9D,CAAC","sourcesContent":["import {formatToParts} from './partition.utils';\nimport {isInvalidDate} from './validate.utils';\n\n/**\n * getTimeZoneOffset() function\n *\n * Determines the offset from UTC of the input date in an input time zone. The concept is lifted from\n * https://stackoverflow.com/questions/29265389/how-do-i-calculate-the-difference-of-2-time-zones-in-javascript\n */\nexport function getTimeZoneOffset(date: Date, timeZone?: string): number {\n  if (!date) {\n    return null;\n  } else if (isInvalidDate(date)) {\n    return NaN;\n  } else if (!timeZone) {\n    return date.getTimezoneOffset();\n  }\n\n  const dateParts = formatToParts(date, timeZone);\n  const year = dateParts.get('year');\n  const month = dateParts.get('month');\n  const day = dateParts.get('day');\n  const hour = dateParts.get('hour');\n  const minute = dateParts.get('minute');\n  const second = dateParts.get('second');\n  const ms = dateParts.get('millisecond');\n  const iso = `${year}-${month}-${day}T${hour}:${minute}:${second}.${ms}`;\n\n  // construct a new Date with the exact same date parts but in UTC time\n  const utcDate = new Date(`${iso}Z`);\n\n  // Now compare the difference (in minutes) between the input date and the UTC date with the same date parts\n  // Positive values are west of GMT (opposite of ISO 8601) in order to match the output of `Date.getTimeZoneOffset`\n  // use '0 - ...' instead of '-value' to prevent return '-0' value (https://stackoverflow.com/a/59343755)\n  return 0 - (utcDate.valueOf() - date.valueOf()) / 60 / 1000;\n}\n"]}