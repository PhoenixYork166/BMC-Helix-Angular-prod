/* eslint-disable max-len, no-useless-escape */
import { Injectable, Inject, PLATFORM_ID } from '@angular/core';
import { isPlatformServer } from '@angular/common';
import * as i0 from "@angular/core";
export class AdaptDeviceDetectionService {
    constructor(_platformId) {
        this._platformId = _platformId;
    }
    /**
     * Rapid method to detect mobile device. Return boolean property.
     */
    isMobile() {
        if (isPlatformServer(this._platformId)) {
            return false;
        }
        else {
            return /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent.toLowerCase()) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.toLowerCase().substr(0, 4));
        }
    }
    findPlatform(elem) {
        if (isPlatformServer(this._platformId)) {
            return false;
        }
        else {
            return navigator.userAgent.toLowerCase().indexOf(elem) > -1;
        }
    }
    isIE() {
        return this.findPlatform('msie') || this.findPlatform('trident');
    }
    isFirefox() {
        return this.findPlatform('firefox');
    }
    isSafari() {
        return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
    }
    /**
     * IOS platform detection
     */
    iosPlatform() {
        return this.deviceIphone() || this.deviceIpad() || this.deviceIpod();
    }
    deviceIphone() {
        return !this.windowsPlatform() && this.findPlatform('iphone');
    }
    deviceIpod() {
        return this.findPlatform('ipod');
    }
    // Apple starting from iPad gen 8 removed iPad from user agent
    // more - https://stackoverflow.com/questions/56934826/distinguish-between-ipad-and-mac-on-ipad-with-ipados
    //
    deviceIpad() {
        if (isPlatformServer(this._platformId)) {
            return false;
        }
        else {
            const n = navigator;
            return !!(n.userAgent.match(/(iPad)/) ||
                (n.platform === 'MacIntel' &&
                    typeof n.standalone !== 'undefined'));
        }
    }
    /**
     * Android platform detection
     */
    androidPlatform() {
        return !this.windowsPlatform() && this.findPlatform('android');
    }
    deviceAndroid() {
        return this.androidPlatform() && this.findPlatform('mobile');
    }
    deviceAndroidTablet() {
        return this.androidPlatform() && !this.findPlatform('mobile');
    }
    /**
     * Windows detection
     */
    windowsPlatform() {
        return this.findPlatform('windows');
    }
    deviceWindows() {
        return this.windowsPlatform() && this.findPlatform('phone');
    }
    deviceWindowsTablet() {
        return this.windowsPlatform() && (this.findPlatform('touch') && !this.deviceWindows());
    }
    /**
     * Blackberry platform detection
     */
    blackberryPlatform() {
        return this.findPlatform('blackberry') || this.findPlatform('bb10') || this.findPlatform('rim');
    }
    deviceBlackberry() {
        return this.blackberryPlatform() && !this.findPlatform('tablet');
    }
    deviceBlackberryTablet() {
        return this.blackberryPlatform() && this.findPlatform('tablet');
    }
    /**
     * Fxos cisco
     */
    fxosPlatform() {
        return (this.findPlatform('(mobile;') || this.findPlatform('(tablet;')) && this.findPlatform('; rv:');
    }
    deviceFxos() {
        return this.fxosPlatform() && this.findPlatform('mobile');
    }
    deviceFxosTablet() {
        return this.fxosPlatform() && this.findPlatform('tablet');
    }
    deviceMeego() {
        return this.findPlatform('meego');
    }
    deviceMobile() {
        return this.deviceIphone() ||
            this.deviceIpod() ||
            this.deviceAndroid() ||
            this.deviceWindows() ||
            this.deviceBlackberry() ||
            this.deviceFxos() ||
            this.deviceMeego();
    }
    deviceTablet() {
        return this.deviceIpad() ||
            this.deviceAndroidTablet() ||
            this.deviceAndroidTablet() ||
            this.deviceBlackberryTablet() ||
            this.deviceFxosTablet();
    }
    deviceDesktop() {
        return !this.deviceMobile() && !this.deviceTablet();
    }
    isPortrait() {
        return (window.innerHeight / window.innerWidth) > 1;
    }
    isLandscape() {
        return (window.innerHeight / window.innerWidth) < 1;
    }
}
AdaptDeviceDetectionService.ɵfac = function AdaptDeviceDetectionService_Factory(t) { return new (t || AdaptDeviceDetectionService)(i0.ɵɵinject(PLATFORM_ID)); };
AdaptDeviceDetectionService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AdaptDeviceDetectionService, factory: AdaptDeviceDetectionService.ɵfac, providedIn: 'root' });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptDeviceDetectionService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: Object, decorators: [{
                type: Inject,
                args: [PLATFORM_ID]
            }] }]; }, null); })();
//# sourceMappingURL=device-detection.service.js.map