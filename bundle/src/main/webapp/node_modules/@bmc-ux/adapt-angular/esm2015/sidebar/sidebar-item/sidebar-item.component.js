import { Component, Input, ViewEncapsulation } from '@angular/core';
import { trigger, style, animate, transition } from '@angular/animations';
import { AdaptSidebarService } from '../services/sidebar.service';
import * as i0 from "@angular/core";
import * as i1 from "../services/sidebar.service";
import * as i2 from "@angular/common";
import * as i3 from "../../close/close.component";
function AdaptSidebarItemComponent_div_1_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r3 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 4);
    i0.ɵɵtext(1, "\n        ");
    i0.ɵɵelementStart(2, "div", 5);
    i0.ɵɵtext(3, "\n          ");
    i0.ɵɵelementStart(4, "h5", 6);
    i0.ɵɵtext(5);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(6, "\n        ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(7, "\n        ");
    i0.ɵɵelementStart(8, "adapt-close", 7);
    i0.ɵɵlistener("close", function AdaptSidebarItemComponent_div_1_div_2_Template_adapt_close_close_8_listener() { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(2); return ctx_r2.closePanel(); });
    i0.ɵɵelementEnd();
    i0.ɵɵtext(9, "\n      ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("@enterAnimation", ctx_r1.opened);
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate(ctx_r1.headerTitle);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("inverse", ctx_r1.theme === "dark");
} }
function AdaptSidebarItemComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 1);
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵtemplate(2, AdaptSidebarItemComponent_div_1_div_2_Template, 10, 4, "div", 2);
    i0.ɵɵtext(3, "\n      ");
    i0.ɵɵelementStart(4, "div", 3);
    i0.ɵɵtext(5, "\n        ");
    i0.ɵɵprojection(6);
    i0.ɵɵtext(7, "\n      ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(8, "\n    ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵattribute("data-item-id", ctx_r0.id);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r0.headerTitle);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("@enterAnimation", ctx_r0.opened);
} }
const _c0 = ["*"];
export class AdaptSidebarItemComponent {
    constructor(_service) {
        this._service = _service;
        /**
         * icon class(dpl-iconfont) for each tab button
         * @docs-default ''
         */
        this.iconClass = '';
        /**
         * Header text for the active sidebar item
         * @docs-default ''
         */
        this.headerTitle = '';
        /**
         * aria-label attribute for each tab button
         * @docs-default ''
         */
        this.ariaLabel = '';
        this.opened = false;
        this.theme = 'light';
    }
    closePanel() {
        this._service.closePanel.next(this.id);
    }
}
AdaptSidebarItemComponent.ɵfac = function AdaptSidebarItemComponent_Factory(t) { return new (t || AdaptSidebarItemComponent)(i0.ɵɵdirectiveInject(i1.AdaptSidebarService)); };
AdaptSidebarItemComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptSidebarItemComponent, selectors: [["adapt-sidebar-item"]], inputs: { iconClass: "iconClass", headerTitle: "headerTitle", tooltipText: "tooltipText", ariaLabel: ["aria-label", "ariaLabel"] }, ngContentSelectors: _c0, decls: 2, vars: 1, consts: [["class", "adapt-sidebar-item", 4, "ngIf"], [1, "adapt-sidebar-item"], ["class", "adapt-sidebar-panel-header", 4, "ngIf"], [1, "adapt-sidebar-panel-content"], [1, "adapt-sidebar-panel-header"], [1, "adapt-sidebar-panel-title-wrapper"], [1, "adapt-sidebar-panel-header-text"], [1, "close-container", 3, "adaptRadarDisableEventSending", "inverse", "close"]], template: function AdaptSidebarItemComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵprojectionDef();
        i0.ɵɵtext(0, "\n    ");
        i0.ɵɵtemplate(1, AdaptSidebarItemComponent_div_1_Template, 9, 3, "div", 0);
    } if (rf & 2) {
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.opened);
    } }, directives: [i2.NgIf, i3.AdaptCloseComponent], encapsulation: 2, data: { animation: [
            trigger('enterAnimation', [
                transition(':enter', [
                    style({
                        opacity: 0
                    }),
                    animate('350ms', style({
                        opacity: 1
                    }))
                ])
            ])
        ] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptSidebarItemComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-sidebar-item',
                template: `
    <div class="adapt-sidebar-item" *ngIf="opened" [attr.data-item-id]="id">
      <div class="adapt-sidebar-panel-header" *ngIf="headerTitle">
        <div class="adapt-sidebar-panel-title-wrapper" [@enterAnimation]="opened">
          <h5 class="adapt-sidebar-panel-header-text">{{headerTitle}}</h5>
        </div>
        <adapt-close class="close-container"
                     [adaptRadarDisableEventSending]="true"
                     [inverse]="theme === 'dark'"
                     (close)="closePanel()"></adapt-close>
      </div>
      <div class="adapt-sidebar-panel-content" [@enterAnimation]="opened">
        <ng-content></ng-content>
      </div>
    </div>`,
                encapsulation: ViewEncapsulation.None,
                animations: [
                    trigger('enterAnimation', [
                        transition(':enter', [
                            style({
                                opacity: 0
                            }),
                            animate('350ms', style({
                                opacity: 1
                            }))
                        ])
                    ])
                ]
            }]
    }], function () { return [{ type: i1.AdaptSidebarService }]; }, { iconClass: [{
            type: Input
        }], headerTitle: [{
            type: Input
        }], tooltipText: [{
            type: Input
        }], ariaLabel: [{
            type: Input,
            args: ['aria-label']
        }] }); })();
//# sourceMappingURL=sidebar-item.component.js.map