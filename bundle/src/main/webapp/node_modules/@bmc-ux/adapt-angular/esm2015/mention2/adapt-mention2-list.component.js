import { Component, EventEmitter, Input, Output, Renderer2, TemplateRef } from '@angular/core';
import { getMention2ItemName } from './adapt-mention2-utils';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
function AdaptMention2ListComponent_div_1_ng_container_2_button_2_ng_template_2_Template(rf, ctx) { }
function AdaptMention2ListComponent_div_1_ng_container_2_button_2_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0);
} if (rf & 2) {
    const listItem_r5 = i0.ɵɵnextContext().$implicit;
    const ctx_r9 = i0.ɵɵnextContext(3);
    i0.ɵɵtextInterpolate(ctx_r9.getListItemName(listItem_r5));
} }
const _c0 = function (a0) { return { $implicit: a0 }; };
function AdaptMention2ListComponent_div_1_ng_container_2_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r12 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 5);
    i0.ɵɵlistener("click", function AdaptMention2ListComponent_div_1_ng_container_2_button_2_Template_button_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r12); const listItem_r5 = restoredCtx.$implicit; const ctx_r11 = i0.ɵɵnextContext(3); return ctx_r11.selectItem.emit(listItem_r5); })("mouseover", function AdaptMention2ListComponent_div_1_ng_container_2_button_2_Template_button_mouseover_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r12); const i_r6 = restoredCtx.index; const ctx_r13 = i0.ɵɵnextContext(3); return ctx_r13.activeIndex = i_r6; });
    i0.ɵɵtext(1, "\n          ");
    i0.ɵɵtemplate(2, AdaptMention2ListComponent_div_1_ng_container_2_button_2_ng_template_2_Template, 0, 0, "ng-template", 6);
    i0.ɵɵtext(3, "\n\n          ");
    i0.ɵɵtemplate(4, AdaptMention2ListComponent_div_1_ng_container_2_button_2_ng_template_4_Template, 1, 1, "ng-template", null, 7, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵtext(6, "\n        ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const listItem_r5 = ctx.$implicit;
    const i_r6 = ctx.index;
    const _r8 = i0.ɵɵreference(5);
    const ctx_r4 = i0.ɵɵnextContext(3);
    i0.ɵɵclassProp("text-active", i_r6 === ctx_r4.activeIndex);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r4.itemTemplate || _r8)("ngTemplateOutletContext", i0.ɵɵpureFunction1(4, _c0, listItem_r5));
} }
function AdaptMention2ListComponent_div_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n        ");
    i0.ɵɵtemplate(2, AdaptMention2ListComponent_div_1_ng_container_2_button_2_Template, 7, 6, "button", 4);
    i0.ɵɵtext(3, "\n      ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r3.listItems)("ngForTrackBy", ctx_r3.trackByMentionName);
} }
function AdaptMention2ListComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 2);
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵtemplate(2, AdaptMention2ListComponent_div_1_ng_container_2_Template, 4, 2, "ng-container", 3);
    i0.ɵɵtext(3, "\n    ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    const _r1 = i0.ɵɵreference(4);
    i0.ɵɵstyleProp("max-width", ctx_r0.maxWidth)("max-height", ctx_r0.maxHeight);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", !ctx_r0.isLoading)("ngIfElse", _r1);
} }
function AdaptMention2ListComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0, "\n      ");
    i0.ɵɵelementStart(1, "div", 8);
    i0.ɵɵtext(2, "\n        ");
    i0.ɵɵelementStart(3, "div", 9);
    i0.ɵɵtext(4, "\n          ");
    i0.ɵɵelement(5, "div", 10);
    i0.ɵɵtext(6, "\n        ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(7, "\n      ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(8, "\n    ");
} }
export class AdaptMention2ListComponent {
    constructor(_renderer) {
        this._renderer = _renderer;
        this.listItems = [];
        this.activeIndex = 0;
        this.isLoading = false;
        this.trackByMentionName = this._trackByMentionName.bind(this);
        this.maxWidth = 'auto';
        this.maxHeight = 'auto';
        this.selectItem = new EventEmitter();
    }
    set list(value) {
        this.listItems = value || [];
        this.isLoading = false;
        this.activeIndex = 0;
    }
    getListItemName(item) {
        return getMention2ItemName(item, this.searchKey);
    }
    selectActive() {
        if (this.listItems[this.activeIndex]) {
            this.selectItem.emit(this.listItems[this.activeIndex]);
        }
    }
    activateNext() {
        this.activeIndex = this.listItems.length ? (this.activeIndex + 1) % this.listItems.length : 0;
    }
    activatePrev() {
        this.activeIndex =
            this.listItems.length ? ((this.activeIndex || this.listItems.length) - 1) % this.listItems.length : 0;
    }
    _trackByMentionName(index, item) {
        return getMention2ItemName(item, this.searchKey);
    }
}
AdaptMention2ListComponent.ɵfac = function AdaptMention2ListComponent_Factory(t) { return new (t || AdaptMention2ListComponent)(i0.ɵɵdirectiveInject(i0.Renderer2)); };
AdaptMention2ListComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptMention2ListComponent, selectors: [["adapt-mention2-list"]], inputs: { list: "list", itemTemplate: "itemTemplate", query: "query", searchKey: "searchKey", maxWidth: "maxWidth", maxHeight: "maxHeight" }, outputs: { selectItem: "selectItem" }, decls: 6, vars: 1, consts: [["class", "dropdown-menu show position-static", "style", "overflow: auto; height: 100%", 3, "maxWidth", "maxHeight", 4, "ngIf"], ["loadingTemplate", ""], [1, "dropdown-menu", "show", "position-static", 2, "overflow", "auto", "height", "100%"], [4, "ngIf", "ngIfElse"], ["type", "button", "tabindex", "-1", "class", "dropdown-item", 3, "text-active", "click", "mouseover", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["type", "button", "tabindex", "-1", 1, "dropdown-item", 3, "click", "mouseover"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["defaultTemplate", ""], [1, "mention-loader-container", "d-flex", "align-items-center", "justify-content-center"], [1, "loader-container"], [1, "loader-section"]], template: function AdaptMention2ListComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtext(0, "\n    ");
        i0.ɵɵtemplate(1, AdaptMention2ListComponent_div_1_Template, 4, 6, "div", 0);
        i0.ɵɵtext(2, "\n\n    ");
        i0.ɵɵtemplate(3, AdaptMention2ListComponent_ng_template_3_Template, 9, 0, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtext(5, "\n  ");
    } if (rf & 2) {
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", (ctx.listItems == null ? null : ctx.listItems.length) || ctx.isLoading);
    } }, directives: [i1.NgIf, i1.NgForOf, i1.NgTemplateOutlet], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptMention2ListComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-mention2-list',
                template: `
    <div class="dropdown-menu show position-static" *ngIf="listItems?.length || isLoading"
         style="overflow: auto; height: 100%"
         [style.maxWidth]="maxWidth"
         [style.maxHeight]="maxHeight">
      <ng-container *ngIf="!isLoading; else loadingTemplate">
        <button type="button"
                tabindex="-1"
                class="dropdown-item"
                *ngFor="let listItem of listItems; let i = index; trackBy: trackByMentionName"
                [class.text-active]="i === activeIndex"
                (click)="selectItem.emit(listItem)"
                (mouseover)="activeIndex = i">
          <ng-template [ngTemplateOutlet]="itemTemplate || defaultTemplate"
                       [ngTemplateOutletContext]="{ $implicit: listItem }"></ng-template>

          <ng-template #defaultTemplate>{{getListItemName(listItem)}}</ng-template>
        </button>
      </ng-container>
    </div>

    <ng-template #loadingTemplate>
      <div class="mention-loader-container d-flex align-items-center justify-content-center">
        <div class="loader-container">
          <div class="loader-section"></div>
        </div>
      </div>
    </ng-template>
  `
            }]
    }], function () { return [{ type: i0.Renderer2 }]; }, { list: [{
            type: Input
        }], itemTemplate: [{
            type: Input
        }], query: [{
            type: Input
        }], searchKey: [{
            type: Input
        }], maxWidth: [{
            type: Input
        }], maxHeight: [{
            type: Input
        }], selectItem: [{
            type: Output
        }] }); })();
//# sourceMappingURL=adapt-mention2-list.component.js.map