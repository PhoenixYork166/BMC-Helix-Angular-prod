{"version":3,"file":"navigation.pipe.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/navigation/navigation.pipe.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,IAAI,EAAgB,MAAM,eAAe,CAAC;;AAQlD,MAAM,OAAO,qBAAqB;IAEhC,SAAS,CAAC,KAAiB,EAAE,GAAW;QAEtC;;WAEG;QACH,kDAAkD;QAClD,MAAM,gBAAgB,GAAG,UAAU,GAAe,EAAE,KAAa;YAC/D,OAAO,GAAG,CAAC,MAAM,CAAC,UAAU,CAAW;gBACrC,OAAO,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACnE,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,EAAE;YAClB,OAAO,KAAK,CAAC;SACd;QAGD,OAAO,KAAK,CAAC,MAAM,CAAC,UAAU,IAAc;YAC1C;;;eAGG;YACH,OAAO,CAAC,IAAI,CAAC,OAAO,IAAI,gBAAgB,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;gBACrE,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;IACL,CAAC;;0FA3BU,qBAAqB;uFAArB,qBAAqB;uFAArB,qBAAqB;cALjC,IAAI;eAAC;gBACJ,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,KAAK;aACZ;;AAsCD,MAAM,OAAO,sBAAsB;IAEjC,kCAAkC;IAClC,iEAAiE;IACjE,SAAS,CAAC,KAAY,EAAE,GAAW;QAEjC,wCAAwC;QACxC,2CAA2C;QAC3C,6EAA6E;QAC7E,kBAAkB;QAClB,WAAW;QACX,kCAAkC;QAClC,iEAAiE;QACjE,OAAO,KAAK,CAAC,MAAM,CAAC,UAAU,CAAM;YAClC,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;QACH,IAAI;IAEN,CAAC;;4FAlBU,sBAAsB;gGAAtB,sBAAsB;uFAAtB,sBAAsB;cALlC,IAAI;eAAC;gBACJ,IAAI,EAAE,mBAAmB;gBACzB,IAAI,EAAE,KAAK;aACZ","sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\nimport {MenuItem} from '../menu/models/menu-item';\n\n@Pipe({\n  name: 'navFilter',\n  pure: false\n})\n\nexport class AdaptNavHamburgerPipe implements PipeTransform {\n\n  transform(items: MenuItem[], str: string): MenuItem[] {\n\n    /**\n     * Filter the array if the name property matches the pattern\n     */\n    // https://github.com/mishoo/UglifyJS2/issues/2856\n    const simpleTestString = function (arr: MenuItem[], chars: string): MenuItem[] {\n      return arr.filter(function (c: MenuItem): boolean {\n        return c.label.toLowerCase().indexOf(chars.toLowerCase()) !== -1;\n      });\n    };\n\n    if (!items || !str) {\n      return items;\n    }\n\n\n    return items.filter(function (item: MenuItem): boolean {\n      /*\n       if children doesn't match - hide the parent category\n       if there is no child items - check if parent match\n       */\n      return (item.subMenu && simpleTestString(item.subMenu, str).length > 0) ||\n        (item.label.toLowerCase().indexOf(str.toLowerCase()) !== -1);\n    });\n  }\n}\n\n\n@Pipe({\n  name: 'navFilterSubItems',\n  pure: false\n})\n\nexport class AdaptNavTextSearchPipe implements PipeTransform {\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  transform(items: any[], str: string): any[] {\n\n    // TODO: double check this with UX about\n    // in case we have match in parent category\n    // if (items[0].parent.name.toLowerCase().indexOf(str.toLowerCase() !== 1)) {\n    //   return items;\n    // } else {\n    // TODO: Refactor this if possible\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    return items.filter(function (c: any): boolean {\n      return (c.name || c.label).toLowerCase().indexOf(str.toLowerCase()) !== -1;\n    });\n    // }\n\n  }\n}\n"]}