{"version":3,"file":"workflow-bar.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/workflow/workflow-bar/workflow-bar.ts","../../../../../../libs/adapt-angular/src/workflow/workflow-bar/workflow-bar.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {AdaptProgressModel} from './workflow-bar.model';\nimport {AdaptWorkflowInput, AdaptWorkflowSize} from '../workflow.model';\nimport {from, ReplaySubject} from 'rxjs';\nimport {bufferTime, map, take, takeUntil} from 'rxjs/operators';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {SafeCdr} from '../../common/safe-cdr';\n\n@Component({\n  selector: 'adapt-workflow-bar',\n  templateUrl: './workflow-bar.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AdaptWorkflowBarComponent implements AdaptWorkflowInput, OnChanges, OnDestroy {\n  verticalList: number[] = [];\n\n  /**\n   * Sets the CSS class for the component.\n   * @docs-default\n   */\n  @Input() mainCls: string;\n\n  /**\n   * Sets the size of the component\n   * @docs-default medium\n   */\n  @Input() size: AdaptWorkflowSize = 'medium';\n\n  /**\n   * Min value of the workflow bar\n   * @docs-default 0\n   */\n  @Input() min: number = 0;\n\n  /**\n   * Max value of the workflow bar\n   * @docs-default 100\n   */\n  @Input() max: number = 100;\n\n  /**\n   * The number of decimal digits\n   * @docs-default 0\n   */\n  @Input() floor: number = 0;\n\n  // TODO: Refactor this if possible\n  // TODO: Use 'AdaptProgressModel[]' as a type\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  /**\n   * The array of objects that represents the progress of the workflow\n   * @docs-default []\n   */\n  @Input() progress: any = Array<AdaptProgressModel>();\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n\n  /**\n   * @docs-default\n   */\n  @Input() activeIndex: number;\n\n  /**\n   * Sets the direction for workflow bar\n   * @docs-default horizontal\n   */\n  @Input() direction: 'horizontal' | 'vertical' = 'horizontal';\n\n  /**\n   * Hook to detect changes\n   * @docs-default false\n   */\n  @Input() wasChanged: boolean = false;\n\n  @HostBinding('class') get classes(): string {\n    return [this.mainCls, 'adapt-workflow-bar'].join(' ');\n  }\n\n  private _destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  constructor(public dir: Directionality,\n              private _ngZone: NgZone,\n              private _el: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    this._ngZone.onStable\n      .pipe(take(1), takeUntil(this._destroyed$))\n      .subscribe(() => this.calcVerticalDistance());\n  }\n\n  calcVerticalDistance(): void {\n    if (this.direction === 'vertical') {\n      const {nextElementSibling} = this._el.nativeElement;\n      const arrayList = [].slice.call(nextElementSibling.querySelectorAll('.a-workflow__step'));\n\n      from(arrayList)\n        .pipe(\n          map((v: { offsetHeight: number }) => v.offsetHeight),\n          bufferTime(10),\n          takeUntil(this._destroyed$)\n        )\n        .subscribe((step) => {\n          const {length} = step;\n\n          if (length > 2) {\n            step[length - 2] += step[length - 1];\n            delete step[length - 1];\n          }\n\n          this.verticalList = step;\n\n          SafeCdr.detectChanges(this._changeDetectorRef);\n        });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.wasChanged) {\n      setTimeout(() => {\n        this.calcVerticalDistance();\n      }, 250); // due to the animation on a collapse component\n\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed$.next(true);\n    this._destroyed$.complete();\n  }\n}\n","<div class=\"a-workflow-bar\">\n\n\n  <ng-container *ngFor=\"let item of progress; let i = index\">\n\n    <div class=\"a-workflow-bar__step\"\n         *ngIf=\"item.value > 0 && direction === 'horizontal'\"\n         [class.is-first]=\"i === 0\"\n         [class.is-prev]=\"progress.length - 2 === i\"\n         [class.a-workflow-bar__step-small]=\"size === 'small'\"\n         [class.a-workflow-bar__step-large]=\"size === 'large'\"\n         [class.a-workflow-bar__step-medium]=\"size === 'medium'\">\n\n      <div *ngIf=\"progress.length > 0\"\n              [class]=\"'a-workflow-bar__progress bg-' + item.type\"\n              [style.width.%]=\"item.value * 100 / (max - min)\"\n              [class.is-rtl]=\"dir.value === 'rtl'\"\n              role=\"progress\"\n              [attr.aria-valuenow]=\"item.value\"\n              [attr.aria-valuemin]=\"min\"\n              [attr.aria-valuemax]=\"max\">\n      </div>\n    </div>\n\n    <div class=\"a-workflow-bar__step\"\n         [class.is-prev]=\"progress.length - 2 === i\"\n         *ngIf=\"item.value > 0 && direction === 'vertical' && verticalList\"\n         [style.height.px]=\"verticalList[i]\">\n      <div *ngIf=\"progress.length > 0\"\n              [class]=\"'a-workflow-bar__progress bg-' + item.type\"\n              [style.height.%]=\"item.value * 100 / (max - min)\"\n              role=\"progress\"\n              [attr.aria-valuenow]=\"item.value\"\n              [attr.aria-valuemin]=\"min\"\n              [attr.aria-valuemax]=\"max\">\n      </div>\n    </div>\n\n  </ng-container>\n</div>\n\n<div class=\"a-workflow-bar__flex\">\n  <ng-container *ngFor=\"let item of progress; let i = index; let last = last;\">\n    <div class=\"a-workflow-bar__step-wrapper\"\n         *ngIf=\"direction === 'horizontal'\"\n         [class.is-first]=\"i === 0\"\n         [class.is-prev]=\"progress.length - 2 === i\"\n         [class.is-last]=\"last\"\n         [class.is-rtl]=\"dir.value === 'rtl'\"\n         [class.a-workflow-bar__step-small]=\"size === 'small'\"\n         [class.a-workflow-bar__step-large]=\"size === 'large'\"\n         [class.a-workflow-bar__step-medium]=\"size === 'medium'\">\n\n      <adapt-workflow-dot [completed]=\"item.completed\"\n                          [active-dot]=\"item.value > 0\"\n                          [mainCls]=\"((i === activeIndex && item.value > 0) ? 'large-dot is-' : 'is-') + item.type\">\n      </adapt-workflow-dot>\n    </div>\n\n    <div class=\"a-workflow-bar__step-wrapper\"\n         *ngIf=\"direction === 'vertical' && verticalList\"\n         [class.is-complete-last]=\"last\"\n         [style.height.px]=\"verticalList[i]\">\n      <adapt-workflow-dot [completed]=\"item.completed\"\n                          [active-dot]=\"item.value > 0\"\n                          [mainCls]=\"((i === activeIndex && item.value > 0) ? 'large-dot is-' : 'is-') + item.type\">\n      </adapt-workflow-dot>\n    </div>\n  </ng-container>\n</div>\n\n\n\n\n\n\n\n\n"]}