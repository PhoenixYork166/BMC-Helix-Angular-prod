import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ai_angle_down } from '@bmc-ux/dpl-iconfont';
import { AdaptIconModule, AdaptIconConfig } from '../icon/index';
import { AdaptPopoverModule } from '../popover/index';
import { AdaptMultiCardModule } from '../multi-card/index';
import { AdaptTooltipModule } from '../tooltip/index';
import { AdaptWorkflowComponent } from './workflow';
import { AdaptWorkflowStepComponent } from './workflow-step/workflow-step';
import { AdaptWorkflowDotComponent } from './workflow-dot/workflow-dot';
import { AdaptWorkflowBarComponent } from './workflow-bar/workflow-bar';
import { AdaptWorkflowBarSlideComponent, AdaptWorkflowCarouselComponent } from './workflow-carousel/workflow-carousel';
import * as i0 from "@angular/core";
import * as i1 from "../icon/index";
const WORKFLOW_DIRECTIVES = [
    AdaptWorkflowComponent,
    AdaptWorkflowStepComponent,
    AdaptWorkflowDotComponent,
    AdaptWorkflowBarComponent,
    AdaptWorkflowCarouselComponent,
    AdaptWorkflowBarSlideComponent
];
export class AdaptWorkFlowModule {
    constructor(iconService) {
        iconService.registerIcons([ai_angle_down]);
    }
}
AdaptWorkFlowModule.ɵfac = function AdaptWorkFlowModule_Factory(t) { return new (t || AdaptWorkFlowModule)(i0.ɵɵinject(i1.AdaptIconConfig)); };
AdaptWorkFlowModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: AdaptWorkFlowModule });
AdaptWorkFlowModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[CommonModule, AdaptIconModule, AdaptPopoverModule, AdaptMultiCardModule, AdaptTooltipModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptWorkFlowModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, AdaptIconModule, AdaptPopoverModule, AdaptMultiCardModule, AdaptTooltipModule],
                declarations: [...WORKFLOW_DIRECTIVES],
                exports: [...WORKFLOW_DIRECTIVES]
            }]
    }], function () { return [{ type: i1.AdaptIconConfig }]; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(AdaptWorkFlowModule, { declarations: [AdaptWorkflowComponent,
        AdaptWorkflowStepComponent,
        AdaptWorkflowDotComponent,
        AdaptWorkflowBarComponent,
        AdaptWorkflowCarouselComponent,
        AdaptWorkflowBarSlideComponent], imports: [CommonModule, AdaptIconModule, AdaptPopoverModule, AdaptMultiCardModule, AdaptTooltipModule], exports: [AdaptWorkflowComponent,
        AdaptWorkflowStepComponent,
        AdaptWorkflowDotComponent,
        AdaptWorkflowBarComponent,
        AdaptWorkflowCarouselComponent,
        AdaptWorkflowBarSlideComponent] }); })();
export * from './workflow';
export * from './workflow.model';
export * from './workflow-step/workflow-step';
export * from './workflow-dot/workflow-dot';
export * from './workflow-bar/workflow-bar';
export * from './workflow-bar/workflow-bar.model';
export * from './workflow-carousel/workflow-carousel';
//# sourceMappingURL=index.js.map