{"version":3,"file":"adapt-mention2-utils.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/mention2/adapt-mention2-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import {AdaptMention2Item, AdaptMention2ViewItem} from './adapt-mention2.types';\nimport {isString} from 'lodash-es';\n\nexport function getMention2ItemName(item: AdaptMention2Item, searchKey: string): string {\n  return isString(item) ? item : item[searchKey];\n}\n\nexport function parseMention2ModelString(str: string): (string | AdaptMention2ViewItem)[] {\n  /*eslint-disable-next-line no-useless-escape*/\n  const regExp = new RegExp(/\\S\\[[^\\]\\[]+]\\([^)]*\\)/gm);\n  const viewArray: (string | AdaptMention2ViewItem)[] = [];\n\n  if (str) {\n    const stringParts = str.split(regExp);\n    const tagParts = str.match(regExp);\n\n    stringParts.forEach((elem, index) => {\n      if (elem) {\n        viewArray.push(elem);\n      }\n\n      const tag = tagParts && tagParts[index];\n\n      if (tag) {\n        viewArray.push({\n          initial: tag,\n          group: tag.slice(0, 1),\n          /*eslint-disable-next-line no-useless-escape*/\n          name: tag.match(/\\[([^\\]\\[]+)]/)[1],\n          meta: tag.match(/\\(([^)]*)\\)/)[1]\n        });\n      }\n    });\n  }\n\n  return viewArray;\n}\n\nexport function getCaretPosition(element: HTMLElement): number {\n  let caretOffset: number = 0;\n\n  if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\n    caretOffset = (element as HTMLInputElement).selectionEnd;\n  } else {\n    const window: Window = element.ownerDocument.defaultView;\n    const selection: Selection = window.getSelection();\n\n    if (selection.rangeCount > 0) {\n      const range = selection.getRangeAt(0);\n      const preCaretRange = range.cloneRange();\n\n      preCaretRange.selectNodeContents(element);\n      preCaretRange.setEnd(range.endContainer, range.endOffset);\n      caretOffset = preCaretRange.toString().length;\n    }\n  }\n\n  return caretOffset;\n}\n\nexport function setCaretPosition(element: HTMLElement, position: number): void {\n  if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\n    (element as HTMLInputElement).setSelectionRange(position, position);\n  } else {\n    let tempPos = 0;\n    let childNodeCount = 0;\n\n    while (tempPos < position) {\n      const currentChildNode = element.childNodes[childNodeCount++];\n\n      tempPos += currentChildNode.textContent.length;\n\n      if (tempPos >= position) {\n        const tempTextNode = document.createTextNode('');\n\n        currentChildNode.parentNode.insertBefore(tempTextNode, currentChildNode.nextSibling);\n        window.getSelection().collapse(tempTextNode);\n      }\n    }\n  }\n}\n"]}