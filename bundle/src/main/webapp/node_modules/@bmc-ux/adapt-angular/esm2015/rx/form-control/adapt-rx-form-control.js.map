{"version":3,"file":"adapt-rx-form-control.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/rx/form-control/adapt-rx-form-control.ts"],"names":[],"mappings":"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","sourcesContent":["import {ControlValueAccessor, NgControl} from '@angular/forms';\nimport {AfterViewInit, Input, Directive, ChangeDetectorRef, ElementRef} from '@angular/core';\nimport {takeUntil, distinctUntilChanged} from 'rxjs/operators';\n\nimport {AdaptTranslateService} from '../../common/i18n/index';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularCustomEventType,\n  AdaptRadarAngularService\n} from '../../common/radar/adapt-radar';\nimport {hasRequiredValidator} from '../../common/utilities';\nimport {FeedbackMessage} from './adapt-rx-form-control.types';\n\nimport {AdaptRxControlLabelTooltip} from './rx-control-label/index';\n\nimport {AdaptRxComponentDirective} from './adapt-rx-component';\nimport {asapScheduler, timer} from 'rxjs';\n\n@Directive()\nexport abstract class AdaptRxFormControlDirective extends AdaptRxComponentDirective implements ControlValueAccessor, AfterViewInit {\n  ngControl: NgControl;\n  ts: AdaptTranslateService;\n\n  /**\n   * Label icon with a tooltip or popover\n   */\n  @Input() tooltip: AdaptRxControlLabelTooltip = null;\n\n  /**\n   * Warning message\n   */\n  @Input() warningMessage: string;\n\n  /**\n   * Shows if the form control has a required/requiredTrue validator\n   */\n  get required(): boolean {\n    return this._hasRequiredValidator;\n  }\n\n  protected readonly _changeDetectorRef: ChangeDetectorRef;\n  protected readonly _adaptRadarService: AdaptRadarAngularService;\n  private _hasRequiredValidator: boolean = false;\n\n  protected constructor(ngControl: NgControl,\n                        ts: AdaptTranslateService,\n                        _adaptRadarService: AdaptRadarAngularService,\n                        _elem: ElementRef<HTMLElement>,\n                        _entityName: AdaptRadarAngularCustomEventName,\n                        _changeDetectorRef?: ChangeDetectorRef) {\n    super(ts, _adaptRadarService, _elem, _entityName);\n\n    this.ngControl = ngControl;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._adaptRadarService = _adaptRadarService;\n\n    // Use the current instance as the input value accessor\n    this.ngControl.valueAccessor = this;\n\n    // Save translate service\n    this.ts = ts;\n  }\n\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n\n    if (this.ngControl) {\n      this.ngControl.statusChanges\n        .pipe(takeUntil(this.destroy$)) // don't add distinctUntilChanged() because the control can send the same status on validators set, so need to run the check https://github.bmc.com/bmc-ux/adapt-angular/issues/7902\n        .subscribe(() => {\n          this._hasRequiredValidator = hasRequiredValidator(this.ngControl);\n        });\n    }\n\n    timer(0, asapScheduler).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      // Left here for backward compatibility with child classes\n      // The tag-field component requires change detection after the view init\n      // Set initial required state with change detection for cases when validator set after ngControl.statusChanges\n      this._hasRequiredValidator = hasRequiredValidator(this.ngControl);\n      this._changeDetectorRef && this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  registerOnChange(fn: (_: any) => void): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  handleMessageAppeared(message: FeedbackMessage, componentName: AdaptRadarAngularCustomEventName): void {\n    const validatorsNames = message.errors?.map(error => error.name);\n\n    this._adaptRadarService.sendCustomEventForAllProviders(AdaptRadarAngularCustomEventName.AdaptRxFeedback, {\n      GroupName: this.adaptRadarGroupName,\n      EventType: AdaptRadarAngularCustomEventType.ErrorFired,\n      ParentComponent: componentName,\n      Label: this.label,\n      Required: this.required,\n      ErrorsTriggered: validatorsNames\n    });\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line */\n  abstract writeValue(obj: any): void;\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line */\n  protected _onTouched(): void {\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line */\n  protected _onChange(_: any): void {\n  }\n}\n"]}