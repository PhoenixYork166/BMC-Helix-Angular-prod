import { animate, group, style, transition, trigger, useAnimation } from '@angular/animations';
import { Directionality } from '@angular/cdk/bidi';
import { ChangeDetectionStrategy, Component, ElementRef, Input, QueryList, ViewChildren } from '@angular/core';
import { ANIMATION_DURATION, ANIMATION_NAME, ANIMATION_TIMING_FUNCTION } from '../common/animation';
import { AdaptCustomActionsAlignEnum } from './adapt-custom-actions.model';
import { AdaptFocusMonitorDirective } from '../common/focus-monitor.directive';
import { AdaptRadarAngularCustomEventName, AdaptRadarAngularGenericDirective, AdaptRadarAngularService } from '../common/radar/adapt-radar';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/bidi";
import * as i2 from "../common/radar/adapt-radar";
import * as i3 from "@angular/common";
import * as i4 from "../common/focus-monitor.directive";
function AdaptCustomActionsComponent_ng_container_0_ng_container_2_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r6 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 3);
    i0.ɵɵlistener("mousedown", function AdaptCustomActionsComponent_ng_container_0_ng_container_2_button_2_Template_button_mousedown_0_listener($event) { i0.ɵɵrestoreView(_r6); const action_r2 = i0.ɵɵnextContext().$implicit; return action_r2.onMouseDown && action_r2.onMouseDown($event); })("click", function AdaptCustomActionsComponent_ng_container_0_ng_container_2_button_2_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r6); const action_r2 = i0.ɵɵnextContext().$implicit; const ctx_r7 = i0.ɵɵnextContext(2); return ctx_r7.clickHandler(action_r2, $event); })("keydown.enter", function AdaptCustomActionsComponent_ng_container_0_ng_container_2_button_2_Template_button_keydown_enter_0_listener($event) { i0.ɵɵrestoreView(_r6); const action_r2 = i0.ɵɵnextContext().$implicit; const ctx_r9 = i0.ɵɵnextContext(2); return ctx_r9.clickWithKeyboard(action_r2, $event); })("keydown.space", function AdaptCustomActionsComponent_ng_container_0_ng_container_2_button_2_Template_button_keydown_space_0_listener($event) { i0.ɵɵrestoreView(_r6); const action_r2 = i0.ɵɵnextContext().$implicit; const ctx_r11 = i0.ɵɵnextContext(2); return ctx_r11.clickWithKeyboard(action_r2, $event); });
    i0.ɵɵtext(1, "\n      ");
    i0.ɵɵelementStart(2, "span", 4);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(4, "\n    ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const action_r2 = i0.ɵɵnextContext().$implicit;
    const ctx_r3 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("@buttonAnimationLeft", ctx_r3.getButtonLeftAnimationState(ctx_r3.isRtl))("@buttonAnimationRight", ctx_r3.getButtonRightAnimationState(ctx_r3.isRtl))("ngClass", ctx_r3.getActionClass(action_r2.customClass));
    i0.ɵɵattribute("data-testid", ctx_r3.testID + "_" + action_r2.name);
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate(action_r2.name);
} }
function AdaptCustomActionsComponent_ng_container_0_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n    ");
    i0.ɵɵtemplate(2, AdaptCustomActionsComponent_ng_container_0_ng_container_2_button_2_Template, 5, 5, "button", 2);
    i0.ɵɵtext(3, "\n  ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const action_r2 = ctx.$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", action_r2.visible);
} }
function AdaptCustomActionsComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n  ");
    i0.ɵɵtemplate(2, AdaptCustomActionsComponent_ng_container_0_ng_container_2_Template, 4, 1, "ng-container", 1);
    i0.ɵɵtext(3, "\n");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r0.actions)("ngForTrackBy", ctx_r0.trackByActions);
} }
let nextUniqueId = 0;
export class AdaptCustomActionsComponent extends AdaptRadarAngularGenericDirective {
    constructor(_dir, _adaptRadarService, _elem) {
        super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptCustomActions);
        this._dir = _dir;
        this._uniqueId = `adapt-actions-${++nextUniqueId}`;
        this.isRtl = false;
        this.alignedTo = AdaptCustomActionsAlignEnum.Left;
        this.testID = this._uniqueId;
    }
    ngOnInit() {
        this.isRtl = this._dir.value === 'rtl';
    }
    trackByActions(index, action) {
        return action.id || index;
    }
    getActionClass(customClass) {
        return (customClass ? customClass : '') + ' '
            + (this.alignedTo === AdaptCustomActionsAlignEnum.Right ? 'custom-action-btn__right' : '');
    }
    getButtonLeftAnimationState(isRtl) {
        return this._getAnimationState(isRtl ? AdaptCustomActionsAlignEnum.Right : AdaptCustomActionsAlignEnum.Left);
    }
    getButtonRightAnimationState(isRtl) {
        return this._getAnimationState(isRtl ? AdaptCustomActionsAlignEnum.Left : AdaptCustomActionsAlignEnum.Right);
    }
    clickHandler(action, $event) {
        if (action && action.onClick) {
            action.onClick($event);
        }
    }
    clickWithKeyboard(action, $event) {
        $event.stopPropagation();
        $event.preventDefault();
        this.clickHandler(action, $event);
    }
    _getAnimationState(alignTo) {
        return this.alignedTo === alignTo ? 'visible' : null;
    }
}
AdaptCustomActionsComponent.ɵfac = function AdaptCustomActionsComponent_Factory(t) { return new (t || AdaptCustomActionsComponent)(i0.ɵɵdirectiveInject(i1.Directionality), i0.ɵɵdirectiveInject(i2.AdaptRadarAngularService), i0.ɵɵdirectiveInject(i0.ElementRef)); };
AdaptCustomActionsComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptCustomActionsComponent, selectors: [["adapt-custom-actions"]], viewQuery: function AdaptCustomActionsComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(AdaptFocusMonitorDirective, 5, AdaptFocusMonitorDirective);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.focusMonitorDirectiveQueryList = _t);
    } }, inputs: { alignedTo: "alignedTo", actions: "actions", testID: "testID" }, features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 1, consts: [[4, "ngIf"], [4, "ngFor", "ngForOf", "ngForTrackBy"], ["type", "button", "class", "btn btn-link p-0 custom-action-btn", "adaptFocusMonitor", "", 3, "ngClass", "mousedown", "click", "keydown.enter", "keydown.space", 4, "ngIf"], ["type", "button", "adaptFocusMonitor", "", 1, "btn", "btn-link", "p-0", "custom-action-btn", 3, "ngClass", "mousedown", "click", "keydown.enter", "keydown.space"], [1, "custom-action-btn-label"]], template: function AdaptCustomActionsComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, AdaptCustomActionsComponent_ng_container_0_Template, 4, 2, "ng-container", 0);
        i0.ɵɵtext(1, "\n");
    } if (rf & 2) {
        i0.ɵɵproperty("ngIf", ctx.actions && ctx.actions.length);
    } }, directives: [i3.NgIf, i3.NgForOf, i4.AdaptFocusMonitorDirective, i3.NgClass], styles: [".custom-action-btn[_ngcontent-%COMP%] {\n      border: 0;\n      height: 1.4375rem;\n      white-space: nowrap;\n    }\n\n    \n    .custom-action-btn-label[_ngcontent-%COMP%]:after, .custom-action-btn__right[_ngcontent-%COMP%]   .custom-action-btn-label[_ngcontent-%COMP%]:before {\n      content: '';\n      display: inline-block;\n      padding-right: 0.75rem;\n    }\n\n    .custom-action-btn__right[_ngcontent-%COMP%]   .custom-action-btn-label[_ngcontent-%COMP%]:after {\n      display: none;\n    }"], data: { animation: [
            trigger('buttonAnimationLeft', [
                transition('visible => void', [
                    animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionIn, style({
                        width: 0,
                        opacity: 0,
                    }))
                ]),
                transition('void => visible', [
                    style({ width: 0, opacity: 0 }),
                    group([
                        animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionInOut, style({
                            width: '*',
                        })),
                        useAnimation(ANIMATION_NAME.moveIn, {
                            params: {
                                translateX: -100,
                                unit: 'px',
                                timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionInOut,
                            }
                        })
                    ])
                ])
            ]),
            trigger('buttonAnimationRight', [
                transition('visible => void', [
                    animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionIn, style({
                        width: 0,
                        opacity: 0,
                    }))
                ]),
                transition('void => visible', [
                    style({ width: 0, opacity: 0 }),
                    group([
                        animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionInOut, style({
                            width: '*'
                        })),
                        useAnimation(ANIMATION_NAME.moveIn, {
                            params: {
                                translateX: 100,
                                unit: 'px',
                                timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionInOut,
                            }
                        })
                    ])
                ])
            ])
        ] }, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptCustomActionsComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-custom-actions',
                templateUrl: './adapt-custom-actions.html',
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [`
    .custom-action-btn {
      border: 0;
      height: 1.4375rem;
      white-space: nowrap;
    }

    /* :before and :after added instead padding/margin for smoother animation */
    .custom-action-btn-label:after,
    .custom-action-btn__right .custom-action-btn-label:before {
      content: '';
      display: inline-block;
      padding-right: 0.75rem;
    }

    .custom-action-btn__right .custom-action-btn-label:after {
      display: none;
    }
  `],
                animations: [
                    trigger('buttonAnimationLeft', [
                        transition('visible => void', [
                            animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionIn, style({
                                width: 0,
                                opacity: 0,
                            }))
                        ]),
                        transition('void => visible', [
                            style({ width: 0, opacity: 0 }),
                            group([
                                animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionInOut, style({
                                    width: '*',
                                })),
                                useAnimation(ANIMATION_NAME.moveIn, {
                                    params: {
                                        translateX: -100,
                                        unit: 'px',
                                        timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionInOut,
                                    }
                                })
                            ])
                        ])
                    ]),
                    trigger('buttonAnimationRight', [
                        transition('visible => void', [
                            animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionIn, style({
                                width: 0,
                                opacity: 0,
                            }))
                        ]),
                        transition('void => visible', [
                            style({ width: 0, opacity: 0 }),
                            group([
                                animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionInOut, style({
                                    width: '*'
                                })),
                                useAnimation(ANIMATION_NAME.moveIn, {
                                    params: {
                                        translateX: 100,
                                        unit: 'px',
                                        timingFunction: ANIMATION_TIMING_FUNCTION.base.transitionInOut,
                                    }
                                })
                            ])
                        ])
                    ])
                ]
            }]
    }], function () { return [{ type: i1.Directionality }, { type: i2.AdaptRadarAngularService }, { type: i0.ElementRef }]; }, { alignedTo: [{
            type: Input
        }], actions: [{
            type: Input
        }], testID: [{
            type: Input
        }], focusMonitorDirectiveQueryList: [{
            type: ViewChildren,
            args: [AdaptFocusMonitorDirective, { read: AdaptFocusMonitorDirective }]
        }] }); })();
//# sourceMappingURL=adapt-custom-actions.component.js.map