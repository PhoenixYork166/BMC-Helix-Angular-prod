{"version":3,"file":"profile-avatar.component.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/profile/profile-avatar.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {ChangeDetectorRef, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges} from '@angular/core';\nimport {ReplaySubject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {toString} from '../common/utilities';\nimport {checkURL} from '../common/check-url';\nimport {SafeCdr} from '../common/safe-cdr';\n\n@Component({\n  selector: 'adapt-profile-avatar',\n  template: `\n      <span class=\"a-profile__avatar {{customClass}}\"\n            [ngClass]=\"!imgSrcError && profileImage ? 'a-profile__avatar--imaged': 'a-profile_delault-icon'\"\n            [ngStyle]=\"{'background-image': !imgSrcError && profileImage ? 'url(&#34;' + profileImage + '&#34;)' : 'none'}\">\n      <span>{{ userInitial }}</span>\n    </span>\n  `\n})\nexport class AdaptProfileAvatarComponent implements OnInit, OnChanges, OnDestroy {\n  imgSrcError: boolean = false;\n  userInitial: string;\n\n  private _destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  @Input() customClass: string;\n  @Input() profileImage: string;\n  @Input() profileUserName: string;\n  @Input() formatter: Function = toString;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnInit(): void {\n    if (this.profileUserName) {\n      this.userInitial = this.getInitial(this.profileUserName);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.profileImage?.currentValue !== changes.profileImage?.previousValue) {\n      if (!changes.profileImage?.currentValue) {\n        this.imgSrcError = true;\n\n        return;\n      }\n\n      checkURL(changes.profileImage.currentValue)\n        .pipe(takeUntil(this._destroyed$))\n        .subscribe(\n          () => {\n            this.imgSrcError = false;\n            SafeCdr.detectChanges(this._changeDetectorRef);\n          },\n          () => {\n            this.imgSrcError = true;\n            SafeCdr.detectChanges(this._changeDetectorRef);\n          }\n        );\n    }\n\n    if (changes.profileUserName?.currentValue !== changes.profileUserName?.previousValue) {\n      this.userInitial = this.getInitial(changes.profileUserName.currentValue);\n    }\n\n    if (changes.formatter?.currentValue !== changes.formatter?.previousValue) {\n      this.userInitial = this.getInitial(this.profileUserName);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed$.next(true);\n    this._destroyed$.complete();\n  }\n\n  getInitial(name: string): string {\n    const initial = this.formatter ? this.formatter(name) : name.trim();\n\n    return initial ? initial[0].toUpperCase() : '';\n  }\n}\n"]}