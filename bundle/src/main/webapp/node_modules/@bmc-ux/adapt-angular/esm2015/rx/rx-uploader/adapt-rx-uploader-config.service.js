import { Injectable } from '@angular/core';
import { UploaderMode, UploaderSelectionMode } from '../../common/uploader/enums/uploader.enum';
import { FileSize } from '../../common/uploader/consts/uploader.consts';
import * as i0 from "@angular/core";
export class AdaptRxUploaderConfigService {
    constructor() {
        this.uploadMode = UploaderMode.Manual;
        this.selectionMode = UploaderSelectionMode.File;
        this.enableDnD = true;
        this.enableFileDialog = true;
        this.allowedTypes = [];
        this.forbiddenTypes = [];
        this.suppressParallel = false;
        this.filesCount = 1;
        this.allowDuplicates = false;
        this.showUploadFolderAlert = true;
        this.visibleFiles = 3;
        this.reusable = false;
        this.allowDeletion = true;
        this.customErrors = false;
        this.maxFileSize = (FileSize.MB * 20).toString();
        this.minFileSize = '0';
        this.chunkSize = FileSize.MB.toString();
        this.indeterminateFileLoader = false;
    }
}
AdaptRxUploaderConfigService.ɵfac = function AdaptRxUploaderConfigService_Factory(t) { return new (t || AdaptRxUploaderConfigService)(); };
AdaptRxUploaderConfigService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AdaptRxUploaderConfigService, factory: AdaptRxUploaderConfigService.ɵfac, providedIn: 'root' });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptRxUploaderConfigService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], null, null); })();
//# sourceMappingURL=adapt-rx-uploader-config.service.js.map