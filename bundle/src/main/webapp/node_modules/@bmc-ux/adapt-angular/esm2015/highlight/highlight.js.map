{"version":3,"file":"highlight.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/highlight/highlight.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,uBAAuB,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAa,MAAM,EAAC,MAAM,eAAe,CAAC;AACzG,OAAO,EAAC,YAAY,EAAE,QAAQ,EAAC,MAAM,qBAAqB,CAAC;;;;IAOxB,4BAA+C;IAAA,YAAQ;IAAA,iBAAO;;;;IAA1C,oCAA0B;IAAC,eAAQ;IAAR,6BAAQ;;;IAAvD,wFAA8D;IAAA,YAAqB;;;;IAA5E,+BAAW;IAA4C,eAAqB;IAArB,6CAAqB;;AAGtH,kEAAkE;AAClE,MAAM,OAAO,uBAAuB;IATpC;QAYW,mBAAc,GAAW,WAAW,CAAC;QAI3B,cAAS,GAA0B,IAAI,YAAY,EAAW,CAAC;KA8BnF;IA5BC,WAAW;QACT,MAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACxC,MAAM,QAAQ,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;QACzC,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;QACjD,IAAI,UAAU,GAAG,CAAC,CAAC;QAEnB,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACrB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,+BAA+B;YAExE,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,IAAI,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;gBAChF,MAAM,YAAY,GAAG,SAAS,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;gBAE/D,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC;gBAE1B,OAAO,YAAY,CAAC;YACtB,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,CAAC,SAAS,CAAC,CAAC;SAC1B;IACH,CAAC;IAED,kCAAkC;IAClC,iEAAiE;IACzD,gBAAgB,CAAC,GAAQ,EAAE,KAAU;QAC3C,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAErD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;IACxD,CAAC;;8FApCU,uBAAuB;0EAAvB,uBAAuB;QAL9B,wBAAA;QAAA,wFAC8H;QAClI,oBAAA;;QAFuB,eAAiB;QAAjB,mCAAiB;;uFAK7B,uBAAuB;cATnC,SAAS;eAAC;gBACT,QAAQ,EAAE,gCAAgC;gBAC1C,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,QAAQ,EAAE;;;GAGT;aACF;gBAKU,cAAc;kBAAtB,KAAK;YACG,MAAM;kBAAd,KAAK;YACG,IAAI;kBAAZ,KAAK;YAEa,SAAS;kBAA3B,MAAM","sourcesContent":["import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output} from '@angular/core';\nimport {regExpEscape, toString} from '../common/utilities';\n\n@Component({\n  selector: 'adapt-highlight, ngb-highlight',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n      <ng-template ngFor [ngForOf]=\"parts\" let-part\n                   let-isOdd=\"odd\"><span *ngIf=\"isOdd\" class=\"{{highlightClass}}\">{{part}}</span>{{isOdd ? '' : part}}</ng-template>\n  `\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class AdaptHighlightDirective implements OnChanges {\n  parts: string[];\n\n  @Input() highlightClass: string = 'mark px-0';\n  @Input() result: string;\n  @Input() term: string;\n\n  @Output() readonly wordMatch: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  ngOnChanges(): void {\n    const resultStr = toString(this.result);\n    const resultLC = resultStr.toLowerCase();\n    const termLC = toString(this.term).toLowerCase();\n    let currentIdx = 0;\n\n    if (termLC.length > 0) {\n      this._detectWordMatch(resultLC, termLC); // highlighting a complete word\n\n      this.parts = resultLC.split(new RegExp(`(${regExpEscape(termLC)})`)).map((part) => {\n        const originalPart = resultStr.substr(currentIdx, part.length);\n\n        currentIdx += part.length;\n\n        return originalPart;\n      });\n    } else {\n      this.parts = [resultStr];\n    }\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _detectWordMatch(str: any, query: any): void {\n    str = str.trim().replace(/[ ]{2,}/gi, '').split(' ');\n\n    this.wordMatch.emit(str.some(item => item === query));\n  }\n}\n"]}