{"version":3,"file":"adapt-rx-search.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/rx/rx-search/adapt-rx-search.component.ts","../../../../../../libs/adapt-angular/src/rx/rx-search/adapt-rx-search.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n  Self,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {fromEvent, Subject, asyncScheduler} from 'rxjs';\nimport {debounceTime, takeUntil, tap, throttleTime} from 'rxjs/operators';\nimport {isString} from 'lodash-es';\nimport {AdaptDeviceDetectionService} from '../../common/device-detection.service';\n\nimport {AdaptTranslateService} from '../../common/i18n/index';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularService,\n  AdaptRadarAngularCustomEventType\n} from '../../common/radar/adapt-radar';\nimport {AdaptInteractionSourceService} from '../../common/interaction-source';\nimport {AdaptRxFormControlDirective, FormControlSize} from '../form-control/index';\nimport {AdaptRxSearchConfigService} from './adapt-rx-search-config.service';\nimport {KeyValueObject} from '../../common/common.models';\n\nexport interface RxSearchTextsModel {\n  placeholder?: string;\n  btnClearText?: string;\n  btnSearchText?: string;\n  labelText?: string;\n}\n\nexport type RxSearchMode = 'search' | 'filter';\n\n@Component({\n  selector: 'adapt-rx-search',\n  templateUrl: './adapt-rx-search.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class AdaptRxSearchComponent extends AdaptRxFormControlDirective implements OnInit {\n  protected controlName: string = 'search';\n\n  searchButtonSRText: string; // Default sr-only text for search button\n  placeholderDefaultText: string; // Default sr-only placeholder text\n  canClear: boolean = false; // The flag notifying that search native input has a value\n  isMobile: boolean = false;\n\n  /**\n   * Specifies search mode - search of filter. This will apply different visual styling to the component.\n   * @docs-default search\n   * @since 12.25.0\n   */\n  @Input() mode: RxSearchMode = 'search';\n\n  /**\n   * Specifies autocomplete property of native element\n   * @docs-default\n   * @since 10.11.0\n   */\n  @Input() autocomplete: boolean | string;\n\n  /**\n   * A placeholder string for the input filed. If didn't pass, default value will be shown\n   * @docs-default Search\n   */\n  @Input() placeholder: string;\n\n  /**\n   * Control size\n   * @docs-default default\n   */\n  @Input() size: FormControlSize = 'default';\n\n  /**\n   * Use explicit search button\n   * @docs-default false\n   */\n  @Input() searchButton: boolean = false;\n\n  /**\n   * Use search button with text instead of icon\n   * @docs-default\n   */\n  @Input() searchButtonText: string;\n\n  /**\n   * Clear button text (sr-only)\n   * @docs-default Clear\n   */\n  @Input() clearButtonText: string;\n\n  /**\n   * Debounce time before search model change\n   * @docs-default 0\n   */\n  @Input() debounceTime: number = 0;\n\n  /**\n   * String typed id of DOM element of listbox/combobox that is cotrolled by searchbox\n   * @docs-default\n   * @since v10.7.0\n   */\n  @Input() ariaControlsPopupId: string;\n\n  /**\n   * String typed id of DOM element of current activedescendant that is cotrolled by searchbox\n   * @docs-default\n   * @since v10.7.0\n   */\n  @Input() ariaActiveDescendant: string;\n\n  /**\n   * @docs-default centre\n   */\n  @Input() initialAlign: 'left' | 'centre' = 'centre';\n\n  /**\n   * Fired when a user interacts with search.\n   */\n  @Output() readonly editModeChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /**\n   * Input ref\n   */\n  @ViewChild('inputRef', {static: true}) inputRef: ElementRef<HTMLInputElement>;\n\n  /**\n   * Clear button ref\n   */\n  @ViewChild('clearButtonRef', {static: false}) clearButtonRef: ElementRef<HTMLButtonElement>;\n\n  /**\n   *  Search button ref\n   */\n  @ViewChild('searchButtonRef', {static: false}) searchButtonRef: ElementRef<HTMLButtonElement>;\n\n  private _value: string;\n  private _previousNativeValue: string;\n  private _hasFocus: boolean = false;\n  private _isEditState: boolean = false;\n  private _componentStateChange$: Subject<void> = new Subject<void>();\n\n  constructor(@Optional() @Self() ngControl: NgControl,\n              adaptRxSearchConfigService: AdaptRxSearchConfigService,\n              _changeDetectorRef: ChangeDetectorRef,\n              public ts: AdaptTranslateService,\n              _adaptRadarService: AdaptRadarAngularService,\n              private _deviceDetectionService: AdaptDeviceDetectionService,\n              private _interactionSourceOriginService: AdaptInteractionSourceService,\n              _elem: ElementRef<HTMLElement>) {\n    super(ngControl, ts, _adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptRxSearch, _changeDetectorRef);\n\n    this.size = adaptRxSearchConfigService.size;\n    this.searchButton = adaptRxSearchConfigService.searchButton;\n    this.debounceTime = adaptRxSearchConfigService.debounceTime;\n\n    this.setDefaultTexts(ts.getCurrentLanguage());\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.isMobile = this._deviceDetectionService.isMobile();\n\n    fromEvent(this.inputRef.nativeElement, 'input').pipe(\n      takeUntil(this.destroy$),\n      tap(this._checkCanClear.bind(this)),\n      debounceTime(this.debounceTime)\n    ).subscribe(() => {\n      if (!this.searchButton) {\n        this._checkNativeValue();\n      }\n    });\n\n    this._componentStateChange$\n      .pipe(\n        takeUntil(this.destroy$),\n        throttleTime(0, asyncScheduler, {trailing: true})\n      )\n      .subscribe(() => {\n        const isInputActive: boolean = document.activeElement === this.inputRef.nativeElement;\n        const isClearButtonActive: boolean = document.activeElement === this.clearButtonRef?.nativeElement;\n        const isSearchButtonActive: boolean = document.activeElement === this.searchButtonRef?.nativeElement;\n\n        this._isEditState = !this.readonly && (isInputActive || isClearButtonActive || isSearchButtonActive);\n        this.editModeChange.emit(this._isEditState);\n      });\n  }\n\n  setDefaultTexts(translation: KeyValueObject): void {\n    this.placeholder = translation['adapt.common.search'];\n    this.placeholderDefaultText = translation['adapt.common.search'];\n    this.clearButtonText = translation['adapt.common.clear'];\n    this.searchButtonSRText = translation['adapt.common.search'];\n  }\n\n  get value(): string {\n    return this._value;\n  }\n\n  set value(value: string) {\n    if (value !== this._value) {\n      this._value = value;\n      this._onChange(this._value);\n      this.stateChanges$.next();\n    }\n  }\n\n  /**\n   * Extend parent method\n   */\n  focusHandler(event: FocusEvent): void {\n    super.focusHandler(event);\n\n    this._hasFocus = true;\n    this._componentStateChange$.next();\n\n    this._adaptRadarService.sendCustomEventForAllProviders(AdaptRadarAngularCustomEventName.AdaptRxSearch, {\n      GroupName: this.adaptRadarGroupName,\n      EventType: AdaptRadarAngularCustomEventType.Focus,\n      SearchMethod: null,\n      FieldSize: this.size,\n      TextEntered: !!this.value,\n      SearchButton: this.searchButton,\n      InputMethod: this._interactionSourceOriginService.getLastInteractionSourceOrigin()\n    });\n  }\n\n  /**\n   * Extend parent method\n   */\n  blurHandler(event: FocusEvent): void {\n    super.blurHandler(event);\n\n    this._hasFocus = false;\n    this._onTouched();\n    this._componentStateChange$.next();\n\n    this._adaptRadarService.sendCustomEventForAllProviders(AdaptRadarAngularCustomEventName.AdaptRxSearch, {\n      GroupName: this.adaptRadarGroupName,\n      EventType: AdaptRadarAngularCustomEventType.Blur,\n      SearchMethod: null,\n      FieldSize: this.size,\n      TextEntered: !!this.value,\n      SearchButton: this.searchButton,\n      InputMethod: this._interactionSourceOriginService.getLastInteractionSourceOrigin()\n    });\n  }\n\n  /**\n   * Check if nativeElement has focus\n   */\n  get hasFocus(): boolean {\n    return this._hasFocus;\n  }\n\n  /**\n   * Check if inputBlock should be expanded\n   */\n  get isExpanded(): boolean {\n    return Boolean((!this.nonInteractive && this._hasFocus) || this.canClear || this.searchButton);\n  }\n\n  /**\n   * Returns autocomplete attribute value for native element\n   */\n  get getAutocompleteValue(): string {\n    return isString(this.autocomplete) ? this.autocomplete : (this.autocomplete ? 'on' : 'off');\n  }\n\n  /**\n   * Set search model value\n   */\n  setSearchValue(): void {\n    if (this.nonInteractive) {\n      return;\n    }\n\n    this._checkNativeValue();\n  }\n\n  /**\n   * Clear search value\n   */\n  clearSearchValue(): void {\n    this._adaptRadarService.sendCustomEventForAllProviders(AdaptRadarAngularCustomEventName.AdaptRxSearch, {\n      GroupName: this.adaptRadarGroupName,\n      EventType: AdaptRadarAngularCustomEventType.Clear,\n      Label: this.label,\n      Required: this.required,\n      TextEntered: !!this.value,\n    });\n\n    this.inputRef.nativeElement.value = '';\n    this._checkCanClear();\n    this._checkNativeValue();\n  }\n\n  /**\n   * Extend parent method\n   */\n  writeValue(value: string): void {\n    if (value !== undefined) {\n      this._value = value;\n    }\n\n    this.inputRef.nativeElement.value = this.value;\n    this._checkCanClear();\n    this._checkNativeValue();\n  }\n\n  onButtonBlur(): void {\n    this._componentStateChange$.next();\n  }\n\n  onButtonFocus(): void {\n    this._componentStateChange$.next();\n  }\n\n  /**\n   * Implementation from the base class\n   * Focus the native element if [autofocus] == true\n   */\n  protected _focusNativeElement(): void {\n    this.inputRef.nativeElement.focus();\n  }\n\n  /**\n   * Check if the native input has value\n   */\n  private _checkCanClear(): void {\n    this.canClear = Boolean(this.inputRef.nativeElement.value);\n  }\n\n  /**\n   * Check if the native element value was changed and propagate change\n   */\n  private _checkNativeValue(): void {\n    const newValue = this.inputRef.nativeElement.value;\n\n    if (this._previousNativeValue !== newValue) {\n      this._previousNativeValue = newValue;\n      this.value = newValue;\n    }\n  }\n}\n","<div class=\"input-group adapt-rx-search\"\n     [class.adapt-rx-search_disabled]=\"disabled\"\n     [class.input-group-sm]=\"size === 'sm'\"\n     [class.input-group-lg]=\"size === 'lg'\"\n     (click)=\"inputRef.focus()\">\n  <div class=\"adapt-rx-search__form-control-block\"\n       [class.adapt-rx-search__form-control-block_active]=\"hasFocus\">\n    <div class=\"adapt-rx-search__expandable-block\">\n      <div class=\"adapt-rx-search__icon\"\n           [ngClass]=\"{'d-icon-search': mode === 'search', 'd-icon-filter_adapt': mode === 'filter'}\"\n           *ngIf=\"!searchButton\"></div>\n      <div class=\"adapt-rx-search__input-wrapper\"\n           [ngClass]=\"{'adapt-rx-search__input-wrapper_extended': isExpanded || initialAlign === 'left'}\">\n        <label class=\"sr-only\" [for]=\"id\">{{label || placeholder || placeholderDefaultText}}</label>\n        <span class=\"form-control adapt-rx-search__fake-input\"\n              [class.form-control-sm]=\"size === 'sm'\"\n              [class.form-control-lg]=\"size === 'lg'\"\n              [class.px-0]=\"!searchButton\">{{placeholder || placeholderDefaultText}}</span>\n        <input #inputRef\n               type=\"text\"\n               role=\"searchbox\"\n               [attr.aria-controls]=\"ariaControlsPopupId\"\n               [attr.aria-activedescendant]=\"ariaActiveDescendant\"\n               class=\"form-control adapt-rx-search__input\"\n               [class.form-control-sm]=\"size === 'sm'\"\n               [class.form-control-lg]=\"size === 'lg'\"\n               [class.px-0]=\"!searchButton\"\n               [id]=\"id\"\n               [autofocus]=\"autofocus\"\n               [autocomplete]=\"getAutocompleteValue\"\n               [disabled]=\"disabled\"\n               [readOnly]=\"readonly\"\n               [attr.aria-readonly]=\"readonly\"\n               [attr.name]=\"name\"\n               [attr.placeholder]=\"placeholder || placeholderDefaultText\"\n               [attr.tabindex]=\"tabIndex\"\n               [attr.data-testid]=\"testID + '_input'\"\n               [attr.aria-label]=\"ariaLabel\"\n               [attr.aria-labelledby]=\"ariaLabelledby\"\n               [attr.aria-describedby]=\"ariaDescribedBy\"\n               (keyup.enter)=\"setSearchValue()\"\n               (focus)=\"focusHandler($event)\"\n               (blur)=\"blurHandler($event)\">\n      </div>\n      <button class=\"btn btn-link d-icon-cross_adapt scale-up-in animated fast adapt-rx-search__clear-button\"\n              type=\"button\"\n              *ngIf=\"!(disabled || readonly) && canClear\"\n              #clearButtonRef\n              [class.btn-sm]=\"size === 'sm'\"\n              [class.btn-lg]=\"size === 'lg'\"\n              [disabled]=\"disabled || readonly\"\n              [attr.data-testid]=\"testID + '_clear'\"\n              (click)=\"clearSearchValue()\"\n              (blur)=\"onButtonBlur()\"\n              (focus)=\"onButtonFocus()\">\n        <span class=\"sr-only\">{{clearButtonText}}</span>\n      </button>\n    </div>\n  </div>\n\n  <div class=\"input-group-append adapt-rx-search__search-button-block\" *ngIf=\"searchButton\">\n    <button type=\"button\"\n            class=\"btn btn-secondary\"\n            *ngIf=\"!(disabled || readonly)\"\n            #searchButtonRef\n            [attr.data-testid]=\"testID + '_button'\"\n            (click)=\"setSearchValue()\"\n            (blur)=\"onButtonBlur()\"\n            (focus)=\"onButtonFocus()\">\n      <span *ngIf=\"!searchButtonText\"\n            [ngClass]=\"{'d-icon-search': mode === 'search', 'd-icon-filter_adapt': mode === 'filter'}\"></span>\n      <span *ngIf=\"!searchButtonText\" class=\"sr-only\">{{searchButtonSRText}}</span>\n      <span *ngIf=\"searchButtonText\">{{searchButtonText}}</span>\n    </button>\n  </div>\n</div>\n"]}