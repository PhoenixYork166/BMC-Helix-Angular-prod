{"version":3,"file":"sidebar-item.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/sidebar/sidebar-item/sidebar-item.component.ts"],"names":[],"mappings":"AAAE,OAAO,EAAC,SAAS,EAAE,KAAK,EAAE,iBAAiB,EAAC,MAAM,eAAe,CAAC;AACpE,OAAO,EAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,UAAU,EAAC,MAAM,qBAAqB,CAAC;AACxE,OAAO,EAAC,mBAAmB,EAAC,MAAM,6BAA6B,CAAC;;;;;;;IAM1D,8BAA4D;IAC1D,0BAAA;IAAA,8BAA0E;IACxE,4BAAA;IAAA,6BAA4C;IAAA,YAAe;IAAA,iBAAK;IAClE,0BAAA;IAAA,iBAAM;IACN,0BAAA;IAAA,sCAGoC;IAAvB,yMAAsB;IAAC,iBAAc;IACpD,wBAAA;IAAA,iBAAM;;;IAP2C,eAA0B;IAA1B,+CAA0B;IAC3B,eAAe;IAAf,wCAAe;IAGhD,eAAsC;IAAtC,oDAAsC,oCAAA;;;IANvD,8BAAwE;IACtE,wBAAA;IAAA,iFAQM;IACN,wBAAA;IAAA,8BAAoE;IAClE,0BAAA;IAAA,kBAAyB;IAC3B,wBAAA;IAAA,iBAAM;IACR,sBAAA;IAAA,iBAAM;;;IAbyC,yCAAwB;IAC5B,eAAiB;IAAjB,yCAAiB;IASjB,eAA0B;IAA1B,+CAA0B;;;AAkBzE,MAAM,OAAO,yBAAyB;IA4BpC,YAAoB,QAA6B;QAA7B,aAAQ,GAAR,QAAQ,CAAqB;QA3BjD;;;WAGG;QACM,cAAS,GAAW,EAAE,CAAC;QAEhC;;;WAGG;QACM,gBAAW,GAAW,EAAE,CAAC;QAOlC;;;WAGG;QACkB,cAAS,GAAW,EAAE,CAAC;QAG5C,WAAM,GAAY,KAAK,CAAC;QACxB,UAAK,GAAqB,OAAO,CAAC;IAGlC,CAAC;IAED,UAAU;QACR,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACzC,CAAC;;kGAjCU,yBAAyB;4EAAzB,yBAAyB;;QA5BlC,sBAAA;QAAA,0EAaM;;QAb2B,eAAY;QAAZ,iCAAY;6FAenC;YACV,OAAO,CAAC,gBAAgB,EAAE;gBACxB,UAAU,CAAC,QAAQ,EAAE;oBACnB,KAAK,CAAC;wBACJ,OAAO,EAAE,CAAC;qBACX,CAAC;oBACF,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC;wBACrB,OAAO,EAAE,CAAC;qBACX,CAAC,CAAC;iBACJ,CAAC;aACH,CAAC;SACH;uFAEU,yBAAyB;cA/BrC,SAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,QAAQ,EAAE;;;;;;;;;;;;;;WAcD;gBACT,aAAa,EAAE,iBAAiB,CAAC,IAAI;gBACrC,UAAU,EAAE;oBACV,OAAO,CAAC,gBAAgB,EAAE;wBACxB,UAAU,CAAC,QAAQ,EAAE;4BACnB,KAAK,CAAC;gCACJ,OAAO,EAAE,CAAC;6BACX,CAAC;4BACF,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC;gCACrB,OAAO,EAAE,CAAC;6BACX,CAAC,CAAC;yBACJ,CAAC;qBACH,CAAC;iBACH;aACF;sEAMU,SAAS;kBAAjB,KAAK;YAMG,WAAW;kBAAnB,KAAK;YAKG,WAAW;kBAAnB,KAAK;YAMe,SAAS;kBAA7B,KAAK;mBAAC,YAAY","sourcesContent":["  import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {trigger, style, animate, transition} from '@angular/animations';\nimport {AdaptSidebarService} from '../services/sidebar.service';\n\n@Component({\n  selector: 'adapt-sidebar-item',\n  template: `\n    <div class=\"adapt-sidebar-item\" *ngIf=\"opened\" [attr.data-item-id]=\"id\">\n      <div class=\"adapt-sidebar-panel-header\" *ngIf=\"headerTitle\">\n        <div class=\"adapt-sidebar-panel-title-wrapper\" [@enterAnimation]=\"opened\">\n          <h5 class=\"adapt-sidebar-panel-header-text\">{{headerTitle}}</h5>\n        </div>\n        <adapt-close class=\"close-container\"\n                     [adaptRadarDisableEventSending]=\"true\"\n                     [inverse]=\"theme === 'dark'\"\n                     (close)=\"closePanel()\"></adapt-close>\n      </div>\n      <div class=\"adapt-sidebar-panel-content\" [@enterAnimation]=\"opened\">\n        <ng-content></ng-content>\n      </div>\n    </div>`,\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('enterAnimation', [\n      transition(':enter', [\n        style({\n          opacity: 0\n        }),\n        animate('350ms', style({\n          opacity: 1\n        }))\n      ])\n    ])\n  ]\n})\nexport class AdaptSidebarItemComponent {\n  /**\n   * icon class(dpl-iconfont) for each tab button\n   * @docs-default ''\n   */\n  @Input() iconClass: string = '';\n\n  /**\n   * Header text for the active sidebar item\n   * @docs-default ''\n   */\n  @Input() headerTitle: string = '';\n\n  /**\n   * Tooltip additional text\n   */\n  @Input() tooltipText: string;\n\n  /**\n   * aria-label attribute for each tab button\n   * @docs-default ''\n   */\n  @Input('aria-label') ariaLabel: string = '';\n\n  id: number;\n  opened: boolean = false;\n  theme: 'light' | 'dark' = 'light';\n\n  constructor(private _service: AdaptSidebarService) {\n  }\n\n  closePanel(): void {\n    this._service.closePanel.next(this.id);\n  }\n}\n"]}