{"version":3,"file":"close.component.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/close/close.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAC,MAAM,eAAe,CAAC;AACjF,OAAO,EAAC,qBAAqB,EAAC,MAAM,sBAAsB,CAAC;AAC3D,OAAO,EACL,gCAAgC,EAChC,iCAAiC,EACjC,wBAAwB,EACzB,MAAM,6BAA6B,CAAC;;;;AASrC,MAAM,OAAO,mBAAoB,SAAQ,iCAAiC;IAgBxE,YAAmB,EAAyB,EAChC,kBAA4C,EAC5C,KAA8B;QACxC,KAAK,CAAC,kBAAkB,EAAE,KAAK,EAAE,gCAAgC,CAAC,UAAU,CAAC,CAAC;QAH7D,OAAE,GAAF,EAAE,CAAuB;QAf5C;;;WAGG;QACM,YAAO,GAAY,KAAK,CAAC;QAElC,qDAAqD;QACrD;;WAEG;QACgB,UAAK,GAAyB,IAAI,YAAY,EAAU,CAAC;QAU1E,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,kBAAkB,EAAE,CAAC,oBAAoB,CAAC,CAAC;IACjE,CAAC;IAED,UAAU;QACR,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC;;sFA1BU,mBAAmB;sEAAnB,mBAAmB;QAJ5B,sBAAA;QAAA,iCAC+B;QAAvB,gGAAS,gBAAY,IAAC;QAAC,iBAAS;;QADhC,eAAgD;QAAhD,2EAAgD;QAAC,2CAA6B;;uFAI7E,mBAAmB;cAP/B,SAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,QAAQ,EAAE;;6CAEiC;aAC5C;wIAOU,OAAO;kBAAf,KAAK;YAMa,KAAK;kBAAvB,MAAM","sourcesContent":["import {Component, ElementRef, EventEmitter, Input, Output} from '@angular/core';\nimport {AdaptTranslateService} from '../common/i18n/index';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularGenericDirective,\n  AdaptRadarAngularService\n} from '../common/radar/adapt-radar';\n\n@Component({\n  selector: 'adapt-close',\n  template: `\n    <button class=\"close {{inverse ? 'close-inverse' : ''}}\" [attr.aria-label]=\"closeText\" type=\"button\"\n            (click)=\"closeClick()\"></button>`\n})\n\nexport class AdaptCloseComponent extends AdaptRadarAngularGenericDirective {\n  /**\n   * When specified, switches component from the default to inverted style\n   * @docs-default false\n   */\n  @Input() inverse: boolean = false;\n\n  /* eslint-disable @angular-eslint/no-output-native */\n  /**\n   * Emits an event when the button is clicked\n   */\n  @Output() readonly close: EventEmitter<string> = new EventEmitter<string>();\n  /* eslint-enable @angular-eslint/no-output-native */\n\n  closeText: string;\n\n  constructor(public ts: AdaptTranslateService,\n              _adaptRadarService: AdaptRadarAngularService,\n              _elem: ElementRef<HTMLElement>) {\n    super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptClose);\n\n    this.closeText = ts.getCurrentLanguage()['adapt.common.close'];\n  }\n\n  closeClick(): void {\n    this.close.emit();\n  }\n}\n"]}