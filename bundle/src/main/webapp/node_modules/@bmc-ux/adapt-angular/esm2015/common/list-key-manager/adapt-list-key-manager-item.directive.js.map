{"version":3,"file":"adapt-list-key-manager-item.directive.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/common/list-key-manager/adapt-list-key-manager-item.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,UAAU,EAAE,KAAK,EAAC,MAAM,eAAe,CAAC;;AAO3D,MAAM,OAAO,gCAAgC;IAU3C,YAAoB,WAAoC;QAApC,gBAAW,GAAX,WAAW,CAAyB;QAHxD,yEAAyE;QAC/B,aAAQ,GAAY,KAAK,CAAC;IAGpE,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;IACxC,CAAC;;gHAnBU,gCAAgC;mFAAhC,gCAAgC;uFAAhC,gCAAgC;cAJ5C,SAAS;eAAC;gBACT,QAAQ,EAAE,2BAA2B;gBACrC,QAAQ,EAAE,yBAAyB;aACpC;6DAIU,IAAI;kBAAZ,KAAK;YAEG,KAAK;kBAAb,KAAK;YAGoC,QAAQ;kBAAjD,KAAK;mBAAC,iCAAiC","sourcesContent":["import {Directive, ElementRef, Input} from '@angular/core';\nimport {ListKeyManagerOption} from '@angular/cdk/a11y/key-manager/list-key-manager';\n\n@Directive({\n  selector: '[adaptListKeyManagerItem]',\n  exportAs: 'adaptListKeyManagerItem'\n})\nexport class AdaptListKeyManagerItemDirective implements ListKeyManagerOption {\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Input() item: any;\n\n  @Input() label: string;\n\n  // Use alias to avoid collision with [disabled] property of form elements\n  @Input('adaptListKeyManagerItemDisabled') disabled: boolean = false;\n\n  constructor(private _elementRef: ElementRef<HTMLElement>) {\n  }\n\n  getLabel(): string {\n    return this.label;\n  }\n\n  getNativeElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n}\n"]}