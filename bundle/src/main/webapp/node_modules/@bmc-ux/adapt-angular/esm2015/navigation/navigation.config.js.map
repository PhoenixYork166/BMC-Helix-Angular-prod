{"version":3,"file":"navigation.config.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/navigation/navigation.config.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,UAAU,EAAc,MAAM,eAAe,CAAC;;AAuHtD,MAAM,OAAO,kBAAkB;CAS9B;AAED,MAAM,OAAO,uBAAuB;CAUnC;AAED,MAAM,OAAO,sBAAsB;CAElC;AAED,MAAM,OAAO,0BAA0B;CAUtC;AAID,MAAM,OAAO,kBAAkB;;oFAAlB,kBAAkB;wEAAlB,kBAAkB,WAAlB,kBAAkB;uFAAlB,kBAAkB;cAD9B,UAAU;;AAcX,MAAM,OAAO,kBAAkB;;oFAAlB,kBAAkB;wEAAlB,kBAAkB,WAAlB,kBAAkB;uFAAlB,kBAAkB;cAD9B,UAAU;;AAKX,MAAM,OAAO,eAAe;CAQ3B","sourcesContent":["import {Injectable, TemplateRef} from '@angular/core';\nimport {AdaptDropdownMobileView} from '../dropdown/dropdown.model';\nimport {TooltipInputValue} from '../tooltip/tooltip.directive';\nimport {RxSearchTextsModel} from '../rx/rx-search/index';\n\nexport interface NavigationMetadataTextsModel {\n  /**\n   * Text for 'skip to content' href anchor\n   */\n  skipHref?: string;\n  /**\n   * Text for 'skip to content' button\n   */\n  skipText?: string;\n  /**\n   * Text for hamburger menu button. Screen reader only\n   */\n  menuText?: string;\n  /**\n   * Text for back button in mobile mode\n   */\n  backBtn?: string;\n  /**\n   * Hides the logo in mobile view\n   */\n  hideMobileLogo?: boolean;\n  /**\n   * Link to company's website, will open new tab\n   */\n  link?: string;\n  /**\n   * Angular router link, might be used to put Home page\n   */\n  route?: string;\n\n  // TODO: Refactor this if possible\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  /**\n   * Action that will be called with $event on click\n   */\n  action?: any;\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n  /**\n   * Product name\n   */\n  productName?: string;\n  /**\n   * aria-label for logo image. Empty by default\n   * @since v10.8.0\n   */\n  ariaLabelForLogo?: string;\n  /**\n   * Name of the company (for alt tag)\n   */\n  companyName?: string;\n  companyLogoUrl?: string;\n  companyLogoUrlInverted?: string;\n  /**\n   * CSS class for logo. Default is BMC logo. Also available - 'logo-helix'\n   */\n  logoClass?: string;\n  switcher?: AdaptSwitcherModel;\n}\n\n// @since v 11.5.0\nexport interface NavigationSubMenuItem {\n  name?: string;\n  className?: string;\n  listClassName?: string;\n  route?: string;\n  link?: string;\n  icon?: string;\n  id?: number;\n  count?: number;\n  hide?: boolean;\n  active?: boolean;\n  disabled?: boolean;\n  separated?: boolean;\n  action?: (e: Event | {isOpened: boolean}) => void;\n  testID?: string;\n}\n\nexport type NavigationActionType = 'submenu' | 'switcher';\n\n// @since v 11.5.0\nexport interface NavigationAction {\n  name?: string;\n  title?: string;\n  link?: string;\n  route?: string;\n  action?: (e: Event | {isOpened: boolean}) => void;\n  icon?: string;\n  count?: number;\n  className?: string;\n  dropdownConfig?: AdaptDropdownMobileView;\n  subMenu?: NavigationSubMenuItem[];\n  hide?: boolean;\n  target?: string;\n  header?: string;\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  popover?: TemplateRef<any> | string;\n  tooltip?: TooltipInputValue;\n  switcher?: {\n    allItems: {\n      header?: string;\n      // TODO: There is inconsistency in MenuItem and AdaptNavigationSubMenuItem\n      // TODO: AdaptNavigationSubMenuItem need to be removed and MenuItem should be used instead\n      items: AdaptNavigationSubMenuItem[];\n    };\n    recentItems: {\n      header?: string;\n      items: AdaptNavigationSubMenuItem[];\n    };\n  };\n  testID?: string;\n  id?: number;\n}\n\nexport class AdaptSwitcherModel {\n  /**\n   * Texts for search in application switcher\n   */\n  filter?: RxSearchTextsModel;\n  /**\n   * Application switcher, not found text for filter\n   */\n  notFoundText?: string;\n}\n\nexport class AdaptNavigationMenuItem {\n  name: string;\n  link: string;\n  target?: string;\n  header?: string;\n  filtering: {\n    title: string;\n    enabled: boolean;\n  };\n  subMenu: AdaptNavigationSubMenu;\n}\n\nexport class AdaptNavigationSubMenu {\n  subMenu: AdaptNavigationSubMenuItem[];\n}\n\nexport class AdaptNavigationSubMenuItem {\n  name: string;\n  link?: string;\n  target?: string;\n  className?: string;\n  disabled?: boolean;\n  active?: boolean;\n  separated?: boolean;\n  items?: AdaptNavigationSubMenuItem[];\n  action?: (e: Event | {isOpened: boolean}) => void;\n}\n\n\n@Injectable()\nexport class AdaptProfileConfig {\n  userName: string;\n  desc?: string;\n  image: string;\n  view?: string;\n  link: string;\n  target?: string;\n  header: string;\n  typeLong: boolean;\n  menu: AdaptNavigationSubMenuItem[];\n}\n\n@Injectable()\nexport class AdaptActionsConfig {\n  items: AdaptActionItem[];\n}\n\nexport class AdaptActionItem {\n  name: string;\n  link: string;\n  target?: string;\n  count: number;\n  className?: string;\n  tooltip: string;\n  subMenu: AdaptNavigationSubMenu;\n}\n"]}