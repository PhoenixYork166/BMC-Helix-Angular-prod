{"version":3,"file":"adapt-rx-checkbox.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/rx/rx-checkbox/adapt-rx-checkbox.component.ts","../../../../../../libs/adapt-angular/src/rx/rx-checkbox/adapt-rx-checkbox.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n  Self,\n  ViewChild\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularCustomEventType,\n  AdaptRadarAngularService\n} from '../../common/radar/adapt-radar';\n\nimport {AdaptRxFeedbackComponent, AdaptRxFormControlDirective} from '../form-control/index';\nimport {AdaptTranslateService} from '../../common/i18n/index';\n\n@Component({\n  selector: 'adapt-rx-checkbox',\n  templateUrl: './adapt-rx-checkbox.component.html',\n  preserveWhitespaces: false\n})\nexport class AdaptRxCheckboxComponent extends AdaptRxFormControlDirective implements OnInit {\n  protected controlName: string = 'checkbox';\n\n  analyticsComponentName: typeof AdaptRadarAngularCustomEventName = AdaptRadarAngularCustomEventName;\n\n  /**\n   * Native input [value]\n   * @docs-default\n   */\n  @Input() value: string;\n\n  /**\n   * Toggle [checked] attribute.\n   * @docs-default\n   */\n  @Input()\n  get checked(): boolean {\n    return this._checked;\n  }\n\n  set checked(value: boolean) {\n    const nextChecked = Boolean(value);\n\n    if (this._checked !== nextChecked) {\n      this._checked = nextChecked;\n      this._onChange(this._checked);\n      this.indeterminate = false;\n      this.stateChanges$.next();\n    }\n  }\n\n  /**\n   * Toggle [indeterminate] attribute.\n   * @docs-default\n   */\n  @Input()\n  get indeterminate(): boolean {\n    return this._indeterminate;\n  }\n\n  set indeterminate(indeterminate: boolean) {\n    const indeterminateBoolean = Boolean(indeterminate);\n\n    const changed = indeterminateBoolean !== this._indeterminate;\n\n    this._indeterminate = indeterminateBoolean;\n\n    if (changed) {\n      this.indeterminateChange.emit(this._indeterminate);\n    }\n  }\n\n  /**\n   * Input reference\n   */\n  @ViewChild('inputRef', {static: true}) inputRef: ElementRef<HTMLInputElement>;\n\n  /**\n   * Reference on AdaptRxFeedbackComponent\n   */\n  @ViewChild('adaptRxFeedbackRef', {static: true}) adaptRxFeedbackRef: AdaptRxFeedbackComponent;\n\n  /**\n   * Indeterminate state change emitter\n   */\n  @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter();\n\n  private _checked: boolean;\n  private _indeterminate: boolean = false;\n  private _checkedStateOnInit: boolean;\n\n  constructor(@Optional() @Self() ngControl: NgControl,\n              ts: AdaptTranslateService,\n              _changeDetectorRef: ChangeDetectorRef,\n              _adaptRadarService: AdaptRadarAngularService,\n              _elem: ElementRef<HTMLElement>) {\n    super(ngControl, ts, _adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptRxCheckbox, _changeDetectorRef);\n  }\n\n  get getAriaChecked(): 'true' | 'false' | 'mixed' {\n    return this.indeterminate ? 'mixed' : (this.checked ? 'true' : 'false');\n  }\n\n  /**\n   * Check if the control has UI error state\n   */\n  get hasDangerState(): boolean {\n    return this.adaptRxFeedbackRef.hasUIErrorState;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this._checkedStateOnInit = this.checked;\n  }\n\n  inputClickHandler(event: Event): void {\n    this._onTouched();\n\n    if (this.readonly) {\n      event.preventDefault();\n    }\n\n    this._adaptRadarService.sendCustomEventForAllProviders(AdaptRadarAngularCustomEventName.AdaptRxCheckbox, {\n      GroupName: this.adaptRadarGroupName,\n      EventType: AdaptRadarAngularCustomEventType.Click,\n      Label: this.label,\n      Required: this.required,\n      Disabled: this.disabled,\n      ReadOnly: this.readonly,\n      DefaultState: this._checkedStateOnInit ? 'on' : 'off',\n      // The value is inverse because we get previous \"checked\" state here\n      CurrentState: this.checked ? 'off' : 'on'\n    }, this.adaptRadarDisableEventSending);\n  }\n\n  inputChangeHandler(): void {\n    this.checked = !this.checked;\n  }\n\n  blurHandler(event: FocusEvent): void {\n    super.blurHandler(event);\n\n    this._onTouched();\n  }\n\n  writeValue(value: boolean): void {\n    this._checked = coerceBooleanProperty(value);\n  }\n\n  protected _focusNativeElement(): void {\n    this.inputRef.nativeElement.focus();\n  }\n}\n","<div class=\"checkbox\"\n     [class.readonly]=\"readonly\"\n     [class.has-danger]=\"adaptRxFeedbackRef.hasUIErrorState\"\n     [class.has-warning]=\"warningMessage\">\n  <div class=\"checkbox__label\">\n    <label>\n      <input type=\"checkbox\"\n             role=\"checkbox\"\n             class=\"checkbox__input\"\n             #inputRef\n             [id]=\"id\"\n             [required]=\"required\"\n             [disabled]=\"disabled\"\n             [readOnly]=\"readonly\"\n             [checked]=\"checked\"\n             [indeterminate]=\"indeterminate\"\n             [autofocus]=\"autofocus\"\n             [attr.name]=\"name\"\n             [attr.tabindex]=\"tabIndex\"\n             [attr.value]=\"value\"\n             [attr.aria-disabled]=\"disabled\"\n             [attr.aria-readonly]=\"readonly\"\n             [attr.aria-label]=\"ariaLabel\"\n             [attr.aria-labelledby]=\"ariaLabelledby\"\n             [attr.aria-describedby]=\"ariaDescribedBy\"\n             [attr.aria-checked]=\"getAriaChecked\"\n             [attr.aria-required]=\"required\"\n             [attr.aria-invalid]=\"hasDangerState\"\n             [attr.aria-errormessage]=\"ariaErrorMessage\"\n             [attr.data-testid]=\"testID\"\n             (click)=\"inputClickHandler($event)\"\n             (change)=\"inputChangeHandler()\"\n             (focus)=\"focusHandler($event)\"\n             (blur)=\"blurHandler($event)\"/>\n\n      <div class=\"checkbox__item\" [ngClass]=\"{'checkbox__item_no-label': !label}\">\n        <span class=\"icon-indeterminate\"></span>\n\n        <ng-container *ngIf=\"label\">\n          <span>{{label}}</span>\n\n          <ng-container *ngIf=\"required && requiredLabel\">\n            <span class=\"letter-space\"></span>\n            <span class=\"form-control-required\">{{requiredLabel}}</span>\n          </ng-container>\n\n          <span *ngIf=\"tooltip?.content\" (click)=\"$event.preventDefault()\">\n            <span class=\"letter-space\"></span>\n            <adapt-rx-control-label-tooltip [tooltip]=\"tooltip\"\n                                            [testID]=\"testID\"></adapt-rx-control-label-tooltip>\n          </span>\n\n          <div *ngIf=\"subLabel\" class=\"text-secondary\">{{subLabel}}</div>\n        </ng-container>\n\n        <span class=\"sr-only\" *ngIf=\"!label && ariaLabel\">{{ariaLabel}}</span>\n      </div>\n    </label>\n  </div>\n\n  <adapt-rx-feedback #adaptRxFeedbackRef\n                     [ariaErrorMessage]=\"ariaErrorMessage\"\n                     [errors]=\"ngControl.errors\"\n                     [warningMessage]=\"warningMessage\"\n                     [controlTouched]=\"ngControl.touched\"\n                     (messageAppeared)=\"handleMessageAppeared($event, analyticsComponentName.AdaptRxCheckbox)\"></adapt-rx-feedback>\n</div>\n"]}