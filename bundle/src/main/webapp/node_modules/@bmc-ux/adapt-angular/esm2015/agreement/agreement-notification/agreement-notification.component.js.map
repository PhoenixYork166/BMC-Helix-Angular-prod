{"version":3,"file":"agreement-notification.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/agreement/agreement-notification/agreement-notification.component.ts","../../../../../../libs/adapt-angular/src/agreement/agreement-notification/agreement-notification.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {isNil} from 'lodash-es';\nimport {AdaptModalService} from '../../modal/modal.service';\nimport {AdaptMessageService} from '../../toast/toast-message.service';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularGenericDirective,\n  AdaptRadarAngularService\n} from '../../common/radar/adapt-radar';\nimport {AdaptAgreementModalOpenEvent, AdaptAgreementState, AdaptNotificationAgreementText} from '../argeement.model';\nimport {KeyValueObject} from '../../common/common.models';\nimport {AdaptTranslateService} from '../../common/i18n';\n\n@Component({\n  selector: 'adapt-agreement-notification',\n  styleUrls: ['../agreement.scss'],\n  templateUrl: './agreement-notification.component.html',\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class AdaptAgreementNotificationComponent extends AdaptRadarAngularGenericDirective implements OnChanges {\n  texts: AdaptNotificationAgreementText = {};\n\n  @Input() openModal: boolean = false;\n  @Input() testID: string;\n\n  @Input() state: AdaptAgreementState;\n\n  @Output() readonly submitButtonClick: EventEmitter<void> = new EventEmitter<void>();\n  @Output() readonly modalOpen: EventEmitter<AdaptAgreementModalOpenEvent> = new EventEmitter<AdaptAgreementModalOpenEvent>();\n\n  @ViewChild('mTemplate') mTemplate: TemplateRef<void>;\n\n  constructor(private _modalService: AdaptModalService,\n              private _messageService: AdaptMessageService,\n              protected readonly _adaptRadarService: AdaptRadarAngularService,\n              _elem: ElementRef<HTMLElement>,\n              private _ts: AdaptTranslateService) {\n    super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptAgreementNotification);\n\n    this._setDefaultTexts(_ts.getCurrentLanguage());\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['openModal']?.currentValue) {\n      this.open();\n    }\n  }\n\n  open(): void {\n    const promise = this._modalService\n      .open({\n        title: null,\n        content: this.mTemplate,\n        testID: this.testID,\n        blockKeyboard: true,\n        beforeDismiss: () => false\n      });\n\n    this.modalOpen.emit({promise});\n  }\n\n  handleSubmit(close: () => void): void {\n    this.submitButtonClick.emit();\n\n    close();\n  }\n\n  isSettingChanged(state: boolean): boolean {\n    return !isNil(state);\n  }\n\n  private _setDefaultTexts(translation: KeyValueObject): void {\n    this.texts.modalHeader = translation['adapt.agreement.notification.modalHeader'];\n    this.texts.modalText1 = translation['adapt.agreement.notification.modalText1'];\n    this.texts.modalText2 = translation['adapt.agreement.notification.modalText2'];\n    this.texts.enabledText = translation['adapt.agreement.notification.enabledText'];\n    this.texts.disabledText = translation['adapt.agreement.notification.disabledText'];\n    this.texts.performanceLabel = translation['adapt.agreement.common.performanceLabel'];\n    this.texts.marketingLabel = translation['adapt.agreement.common.marketingLabel'];\n    this.texts.alertText = translation['adapt.agreement.notification.alertText'];\n    this.texts.buttonText = translation['adapt.agreement.notification.buttonText'];\n  }\n}\n","<ng-template #mTemplate let-close=\"close\">\n  <div class=\"modal-header\">\n    <h5 [class]=\"'modal-title text-default'\">{{texts.modalHeader}}</h5>\n  </div>\n  <div class=\"modal-body\">\n    <p>{{texts.modalText1}}<br>{{texts.modalText2}}</p>\n\n    <div class=\"agreement__content-text\">\n      <p *ngIf=\"state && isSettingChanged(state.accountPerformance)\">\n        <adapt-badge\n          class=\"agreement__badge\"\n          [adaptRadarDisableEventSending]=\"true\"\n          [variant]=\"state.accountPerformance ? 'success' : 'danger'\">\n          {{state.accountPerformance ? texts.enabledText : texts.disabledText }}\n        </adapt-badge>\n        {{texts.performanceLabel}}\n      </p>\n\n      <p *ngIf=\"state && isSettingChanged(state.accountMarketing)\">\n        <adapt-badge\n          class=\"agreement__badge\"\n          [adaptRadarDisableEventSending]=\"true\"\n          [variant]=\"state.accountMarketing ? 'success' : 'danger'\">\n          {{state.accountMarketing ? texts.enabledText : texts.disabledText }}\n        </adapt-badge>\n        {{texts.marketingLabel}}\n      </p>\n    </div>\n\n    <adapt-alert\n      [adaptRadarDisableEventSending]=\"true\"\n      [config]=\"{content: texts.alertText, type: 'inline', variant: 'info'}\"></adapt-alert>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\"\n            class=\"btn btn-primary\"\n            (click)=\"handleSubmit(close)\">{{texts.buttonText}}\n    </button>\n  </div>\n</ng-template>\n"]}