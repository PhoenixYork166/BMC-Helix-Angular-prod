{"version":3,"file":"adapt-rx-radiobutton.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/rx/rx-radiobutton/adapt-rx-radiobutton.component.ts","../../../../../../libs/adapt-angular/src/rx/rx-radiobutton/adapt-rx-radiobutton.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport {isEqual} from 'lodash-es';\nimport {ReplaySubject} from 'rxjs';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularCustomEventType,\n  AdaptRadarAngularService,\n  AdaptRadarAngularGenericDirective\n} from '../../common/radar/adapt-radar';\n\nimport {AdaptRxRadiobuttonGroupComponent} from './adapt-rx-radiobutton-group.component';\n\nlet radioUniqueId = 1;\n\n@Component({\n  selector: 'adapt-rx-radiobutton',\n  templateUrl: './adapt-rx-radiobutton.component.html'\n})\nexport class AdaptRxRadiobuttonComponent extends AdaptRadarAngularGenericDirective implements OnInit, OnChanges, OnDestroy {\n  /**\n   * Name attribute for the input\n   * @docs-default\n   */\n  @Input() name: string;\n\n  /**\n   * Component label.\n   * @docs-default\n   */\n  @Input() label: string;\n\n  /**\n   * Custom id for the input\n   * @docs-default\n   */\n  @Input()\n  get id(): string {\n    return this._id;\n  }\n\n  set id(value: string) {\n    this._id = value || this._uniqId;\n  }\n\n  /**\n   * Input [value] attribute\n   * @docs-default\n   */\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Input() get value(): any {\n    return this._value;\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  set value(value: any) {\n    if (this._value !== value) {\n      this._value = value;\n\n      if (this._radioButtonGroup) {\n        if (!this.checked) {\n          // Update checked when the value changed to match the radio group's value\n          this.checked = isEqual(this._radioButtonGroup.value, value);\n\n          if (this.checked) {\n            this._radioButtonGroup._selectedRadioButton = this;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Input [checked] attribute\n   * @docs-default\n   */\n  @Input()\n  get checked(): boolean {\n    return this._checked;\n  }\n\n  set checked(value: boolean) {\n    const newCheckedState = Boolean(value);\n\n    if (this._checked !== newCheckedState) {\n      this._checked = newCheckedState;\n    }\n  }\n\n  /**\n   * When present, it specifies that the element should be disabled\n   * @docs-default false\n   */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled || (this._radioButtonGroup && this._radioButtonGroup.disabled);\n  }\n\n  set disabled(value: boolean) {\n    this._disabled = Boolean(value);\n  }\n\n  /**\n   * aria-label attribute for the input\n   * @docs-default\n   */\n  @Input()\n  ariaLabel: string;\n\n  /**\n   * aria-labeledby attribute for the input\n   * @docs-default\n   */\n  @Input()\n  ariaLabeledBy: string;\n\n  /**\n   * aria-describedby attribute for the input\n   * @docs-default\n   */\n  @Input()\n  ariaDescribedBy: string;\n\n  /**\n   * String for test id data attribute. For test purposes\n   * @docs-default\n   */\n  @Input() testID: string;\n\n  /**\n   * Control [tabindex] value\n   * @since 12.27.0, 14.5.0\n   * @docs-default\n   */\n  @Input() tabIndex: number;\n\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() readonly onFocus: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() readonly onBlur: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n  /**\n   * Checked state change emitter\n   */\n  @Output() readonly checkedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /**\n   * Input ref\n   */\n  @ViewChild('inputRef', {static: true}) inputRef: ElementRef<HTMLInputElement>;\n\n  private _controlName: string = 'radiobutton';\n  private _id: string;\n  private _uniqId: string;\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _value: any;\n  private _checked: boolean = false;\n  private _disabled: boolean;\n  private _radioButtonGroup: AdaptRxRadiobuttonGroupComponent;\n  private _destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  constructor(@Optional() radiobuttonGroup: AdaptRxRadiobuttonGroupComponent,\n              private _ngZone: NgZone,\n              protected _adaptRadarService: AdaptRadarAngularService,\n              _elem: ElementRef<HTMLElement>) {\n    super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptRxRadiobutton);\n\n    this._radioButtonGroup = radiobuttonGroup;\n\n    if (this._radioButtonGroup) {\n      this._radioButtonGroup._radioButtons.push(this);\n    }\n  }\n\n  ngOnInit(): void {\n    // Create the uniq ID of control\n    this._uniqId = `${this._controlName}-${radioUniqueId++}`;\n\n    // Force setter to be called in case id was not specified.\n    // TODO: refactor self-assignment\n    /* eslint-disable */\n    this.id = this.id;\n    /* eslint-enable */\n\n    if (this._radioButtonGroup) {\n      // If the radio is inside a radio group, determine if it should be checked\n      this.checked = this._radioButtonGroup.value === this._value;\n      // Copy name from parent radio group\n      this.name = this._radioButtonGroup.name;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // Check if input[type=radio] is checked initially\n    if (changes.checked && changes.checked.currentValue === true && changes.checked.firstChange) {\n      this._ngZone.onStable\n        .pipe(takeUntil(this._destroyed$), take(1))\n        .subscribe(() => {\n          if (this._radioButtonGroup && !isEqual(this._radioButtonGroup.value, this.value)) {\n            this._radioButtonGroup._selectedRadioButton = this;\n            this._radioButtonGroup.value = this.value;\n            this._radioButtonGroup.propagateChange();\n          }\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed$.next(true);\n    this._destroyed$.complete();\n  }\n\n  /**\n   * AriaChecked attribute getter\n   */\n  get getAriaChecked(): 'true' | 'false' {\n    return this.checked ? 'true' : 'false';\n  }\n\n  get readonly(): boolean {\n    return this._radioButtonGroup ? this._radioButtonGroup.readonly : false;\n  }\n\n  /**\n   * Input (change) event handler\n   */\n  inputChangeHandler(event: Event): void {\n    event.stopPropagation();\n\n    if (this.disabled || this.readonly) {\n      event.preventDefault();\n    } else {\n      this.checked = true;\n\n      if (this._radioButtonGroup) {\n        this._radioButtonGroup.value = this.value;\n        this._radioButtonGroup.propagateChange();\n      }\n    }\n\n    this.checkedChange.emit(true);\n\n    this._adaptRadarService.sendCustomEventForAllProviders(AdaptRadarAngularCustomEventName.AdaptRxRadiobutton, {\n      GroupName: this.adaptRadarGroupName,\n      EventType: AdaptRadarAngularCustomEventType.Click,\n      Label: this.label,\n      CurrentState: this.checked ? 'on' : 'off',\n      Disabled: this.disabled,\n      ReadOnly: this.readonly,\n      RadioGroup: !!this._radioButtonGroup\n    });\n  }\n\n  /**\n   * Input (click) event handler\n   */\n  inputClickHandler(event: Event): void {\n    if (this.disabled || this.readonly) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Input (focus) event handler\n   */\n  inputFocusHandler(event: FocusEvent): void {\n    if (this._radioButtonGroup) {\n      this._radioButtonGroup.focusHandler(event);\n    }\n\n    this.onFocus.emit(event);\n  }\n\n  /**\n   * Input (blur) event handler\n   */\n  inputBlurHandler(event: FocusEvent): void {\n    if (this._radioButtonGroup) {\n      this._radioButtonGroup.markAsTouched();\n      this._radioButtonGroup.blurHandler(event);\n    }\n\n    this.onBlur.emit(event);\n  }\n}\n","<div class=\"radio\" [class.readonly]=\"readonly\">\n  <div class=\"radio__label\">\n    <span>\n      <input type=\"radio\"\n             role=\"radio\"\n             #inputRef\n             [id]=\"id\"\n             [disabled]=\"disabled\"\n             [readOnly]=\"readonly\"\n             [checked]=\"checked\"\n             [attr.name]=\"name\"\n             [attr.value]=\"value\"\n             [attr.aria-checked]=\"getAriaChecked\"\n             [attr.aria-readonly]=\"readonly\"\n             [attr.aria-label]=\"ariaLabel\"\n             [attr.aria-labelledby]=\"ariaLabeledBy\"\n             [attr.aria-describedby]=\"ariaDescribedBy\"\n             [attr.tabindex]=\"tabIndex\"\n             [attr.data-testid]=\"testID\"\n             (change)=\"inputChangeHandler($event)\"\n             (click)=\"inputClickHandler($event)\"\n             (focus)=\"inputFocusHandler($event)\"\n             (blur)=\"inputBlurHandler($event)\"/>\n\n      <label [attr.for]=\"id\" class=\"radio__item\" [ngClass]=\"{'radio__item_no-label': !label}\">\n        <span *ngIf=\"label\" class=\"text-url-break-out\">{{label}}</span>\n      </label>\n    </span>\n  </div>\n</div>\n"]}