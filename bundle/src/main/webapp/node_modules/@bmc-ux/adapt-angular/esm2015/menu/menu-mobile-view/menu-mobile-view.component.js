import { Component, ElementRef, Renderer2, ViewChild } from '@angular/core';
import { MenuInnerService } from '../menu.service';
import { filter, takeUntil } from 'rxjs/operators';
import { ScrollManageService } from '../../common/scroll-manage.service';
import { ANIMATION_DURATION, ANIMATION_TIMING_FUNCTION } from '../../common/animation';
import { animate, style, transition, trigger } from '@angular/animations';
import { Directionality } from '@angular/cdk/bidi';
import { ReplaySubject } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "../menu.service";
import * as i2 from "../../common/scroll-manage.service";
import * as i3 from "@angular/cdk/bidi";
import * as i4 from "@angular/common";
const _c0 = ["adaptSubmenuItem"];
const _c1 = ["swipeContainer"];
const _c2 = function (a0) { return [a0]; };
function AdaptMenuMobileViewComponent_button_9_Template(rf, ctx) { if (rf & 1) {
    const _r4 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 13);
    i0.ɵɵlistener("click", function AdaptMenuMobileViewComponent_button_9_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(); return ctx_r3.showParentItemCascade(); });
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(2, _c2, ctx_r1.isRtl ? "d-icon-angle_right" : "d-icon-angle_left"));
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n          ", ctx_r1.texts.backBtn, "\n        ");
} }
const _c3 = function (a0) { return { "first-init": a0 }; };
export class AdaptMenuMobileViewComponent {
    constructor(_menuInnerService, _renderer, _elemRef, _scrollService, _dir) {
        this._menuInnerService = _menuInnerService;
        this._renderer = _renderer;
        this._elemRef = _elemRef;
        this._scrollService = _scrollService;
        this._dir = _dir;
        this.isRtl = false;
        /**
         * An object for manage wrapper's scroll.
         */
        this._scrollManager = null;
        this._destroyed$ = new ReplaySubject(1);
        this.isRtl = this._dir.value === 'rtl';
        this._scrollManager = this._scrollService.getScrollManager(document.body);
    }
    get cascade() {
        return this._menuInnerService.cascadeChain;
    }
    ngOnInit() {
        this.windowWidth = window.innerWidth;
        document.body.appendChild(this._elemRef.nativeElement);
        this.texts = this._menuInnerService.mobileDefaultTexts;
        this._scrollManager.hide(this);
    }
    ngOnDestroy() {
        this._scrollManager.show(this);
        this._destroyed$.next(true);
        this._destroyed$.complete();
    }
    ngAfterViewInit() {
        this._menuInnerService.menuElementRef
            .pipe(filter((elem) => !!elem), takeUntil(this._destroyed$))
            .subscribe((elem) => {
            const currentCascadeLevel = this.getCascadeLength() - 1;
            this._renderer.appendChild(this.adaptSubmenuItem.nativeElement, elem.nativeElement);
            this._renderer.setStyle(elem.nativeElement, 'width', `${this.windowWidth}px`);
            this._renderer.setStyle(elem.nativeElement, this.isRtl ? 'right' : 'left', currentCascadeLevel * this.windowWidth + 'px');
            this._renderer.setStyle(this.adaptSubmenuItem.nativeElement, 'transform', this.isRtl ? `translateX(${currentCascadeLevel * this.windowWidth}px)`
                : `translateX(${-currentCascadeLevel * this.windowWidth}px)`);
            if (currentCascadeLevel) {
                this._renderer.addClass(elem.nativeElement, 'adapt-submenu__fade');
            }
        });
    }
    swipeUp() {
        this._swipeContainerHeight = this.swipeContainer.nativeElement.getBoundingClientRect().height;
        this._renderer.setStyle(this.swipeContainer.nativeElement, 'height', '100%');
    }
    swipeDown() {
        this._renderer.setStyle(this.swipeContainer.nativeElement, 'height', `${this._swipeContainerHeight}px`);
    }
    getCascadeLength() {
        return this.cascade ? this.cascade.subMenuItems.length : 0;
    }
    getAnchorTitle() {
        if (this.cascade) {
            const submenuItem = this.cascade.subMenuItems[this.getCascadeLength() - 1];
            return submenuItem.parentNode.label;
        }
    }
    closeCascade() {
        this._menuInnerService.detachCascade();
    }
    showParentItemCascade() {
        const currentCascadeLevel = this.getCascadeLength() - 1;
        this._renderer.setStyle(this.adaptSubmenuItem.nativeElement, 'transform', this.isRtl ? `translateX(${currentCascadeLevel * this.windowWidth - this.windowWidth}px)`
            : `translateX(${-currentCascadeLevel * this.windowWidth + this.windowWidth}px)`);
        this._menuInnerService.destroyCascadeItems(currentCascadeLevel - 1);
    }
}
AdaptMenuMobileViewComponent.ɵfac = function AdaptMenuMobileViewComponent_Factory(t) { return new (t || AdaptMenuMobileViewComponent)(i0.ɵɵdirectiveInject(i1.MenuInnerService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.ScrollManageService), i0.ɵɵdirectiveInject(i3.Directionality)); };
AdaptMenuMobileViewComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptMenuMobileViewComponent, selectors: [["adapt-menu-mobile-view"]], viewQuery: function AdaptMenuMobileViewComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 7);
        i0.ɵɵviewQuery(_c1, 7);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.adaptSubmenuItem = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.swipeContainer = _t.first);
    } }, hostVars: 4, hostBindings: function AdaptMenuMobileViewComponent_HostBindings(rf, ctx) { if (rf & 2) {
        i0.ɵɵstyleProp("display", "block")("width", "100%");
    } }, decls: 35, vars: 8, consts: [[1, "adapt-submenu-mobile-view"], [1, "adapt-submenu-mobile-content", 3, "swipeUp", "swipeDown"], ["swipeContainer", ""], [1, "adapt-submenu-mobile-content--header", 3, "ngClass", "click"], [1, "adapt-mobile-content__back"], ["type", "button", "class", "btn btn-link btn-sm", 3, "ngClass", "click", 4, "ngIf"], [1, "adapt-mobile-content__title"], [1, "adapt-mobile-content__cancel"], ["type", "button", 1, "btn", "btn-link", "btn-sm", 3, "click"], [1, "adapt-submenu-mobile-content--data"], [1, "adapt-submenu-mobile-items-wrp"], ["adaptSubmenuItem", ""], [1, "dropdown-menu__overlay"], ["type", "button", 1, "btn", "btn-link", "btn-sm", 3, "ngClass", "click"]], template: function AdaptMenuMobileViewComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 0);
        i0.ɵɵtext(1, "\n  ");
        i0.ɵɵelementStart(2, "div", 1, 2);
        i0.ɵɵlistener("swipeUp", function AdaptMenuMobileViewComponent_Template_div_swipeUp_2_listener() { return ctx.swipeUp(); })("swipeDown", function AdaptMenuMobileViewComponent_Template_div_swipeDown_2_listener() { return ctx.swipeDown(); });
        i0.ɵɵtext(4, "\n    ");
        i0.ɵɵelementStart(5, "div", 3);
        i0.ɵɵlistener("click", function AdaptMenuMobileViewComponent_Template_div_click_5_listener($event) { return $event.stopPropagation(); });
        i0.ɵɵtext(6, "\n      ");
        i0.ɵɵelementStart(7, "div", 4);
        i0.ɵɵtext(8, "\n        ");
        i0.ɵɵtemplate(9, AdaptMenuMobileViewComponent_button_9_Template, 2, 4, "button", 5);
        i0.ɵɵtext(10, "\n      ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(11, "\n\n      ");
        i0.ɵɵelementStart(12, "div", 6);
        i0.ɵɵtext(13, "\n          ");
        i0.ɵɵelementStart(14, "span");
        i0.ɵɵtext(15);
        i0.ɵɵelementEnd();
        i0.ɵɵtext(16, "\n      ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(17, "\n\n      ");
        i0.ɵɵelementStart(18, "div", 7);
        i0.ɵɵtext(19, "\n        ");
        i0.ɵɵelementStart(20, "button", 8);
        i0.ɵɵlistener("click", function AdaptMenuMobileViewComponent_Template_button_click_20_listener() { return ctx.closeCascade(); });
        i0.ɵɵtext(21);
        i0.ɵɵelementEnd();
        i0.ɵɵtext(22, "\n      ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(23, "\n\n    ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(24, "\n\n    ");
        i0.ɵɵelementStart(25, "div", 9);
        i0.ɵɵtext(26, "\n      ");
        i0.ɵɵelement(27, "div", 10, 11);
        i0.ɵɵtext(29, "\n    ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(30, "\n\n  ");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(31, "\n");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(32, "\n\n");
        i0.ɵɵelement(33, "div", 12);
        i0.ɵɵtext(34, "\n");
    } if (rf & 2) {
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("@popupAnimation", undefined);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(6, _c3, ctx.getCascadeLength() === 1));
        i0.ɵɵadvance(4);
        i0.ɵɵproperty("ngIf", ctx.getCascadeLength() > 1);
        i0.ɵɵadvance(6);
        i0.ɵɵtextInterpolate1("\n            ", ctx.getAnchorTitle(), "\n          ");
        i0.ɵɵadvance(6);
        i0.ɵɵtextInterpolate1("\n          ", ctx.texts.cancelBtn, "\n        ");
        i0.ɵɵadvance(12);
        i0.ɵɵproperty("@menuOverlayAnim", undefined);
    } }, directives: [i4.NgClass, i4.NgIf], encapsulation: 2, data: { animation: [
            trigger('popupAnimation', [
                transition('void => *', [
                    style({ transform: 'translate(0px, 200px)', opacity: '0' }),
                    animate(`${ANIMATION_DURATION.fast} ${ANIMATION_TIMING_FUNCTION.base.transitionIn}`, style({ transform: 'translate(0px, 0px)', opacity: '1' }))
                ]),
                transition('* => void', [
                    style({ transform: 'translate(0px, 0px)', opacity: '1' }),
                    animate(`${ANIMATION_DURATION.fast} ${ANIMATION_TIMING_FUNCTION.base.transitionOut}`, style({ transform: 'translate(0px, 200px)', opacity: '0' }))
                ]),
            ]),
            trigger('menuOverlayAnim', [
                transition('void => *', [
                    style({ visibility: 'hidden', opacity: 0 }),
                    animate(`.6s ${ANIMATION_TIMING_FUNCTION.base.transitionIn}`, style({ visibility: 'visible', opacity: 1 }))
                ]),
                transition('* => void', [
                    style({ visibility: 'visible', opacity: 1 }),
                    animate(`.6s ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`, style({ visibility: 'hidden', opacity: 0 }))
                ])
            ]),
        ] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptMenuMobileViewComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-menu-mobile-view',
                templateUrl: './menu-mobile-view.component.html',
                // eslint-disable-next-line @angular-eslint/no-host-metadata-property
                host: {
                    '[style.display]': "'block'",
                    '[style.width]': "'100%'",
                },
                animations: [
                    trigger('popupAnimation', [
                        transition('void => *', [
                            style({ transform: 'translate(0px, 200px)', opacity: '0' }),
                            animate(`${ANIMATION_DURATION.fast} ${ANIMATION_TIMING_FUNCTION.base.transitionIn}`, style({ transform: 'translate(0px, 0px)', opacity: '1' }))
                        ]),
                        transition('* => void', [
                            style({ transform: 'translate(0px, 0px)', opacity: '1' }),
                            animate(`${ANIMATION_DURATION.fast} ${ANIMATION_TIMING_FUNCTION.base.transitionOut}`, style({ transform: 'translate(0px, 200px)', opacity: '0' }))
                        ]),
                    ]),
                    trigger('menuOverlayAnim', [
                        transition('void => *', [
                            style({ visibility: 'hidden', opacity: 0 }),
                            animate(`.6s ${ANIMATION_TIMING_FUNCTION.base.transitionIn}`, style({ visibility: 'visible', opacity: 1 }))
                        ]),
                        transition('* => void', [
                            style({ visibility: 'visible', opacity: 1 }),
                            animate(`.6s ${ANIMATION_TIMING_FUNCTION.base.transitionInOut}`, style({ visibility: 'hidden', opacity: 0 }))
                        ])
                    ]),
                ]
            }]
    }], function () { return [{ type: i1.MenuInnerService }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i2.ScrollManageService }, { type: i3.Directionality }]; }, { adaptSubmenuItem: [{
            type: ViewChild,
            args: ['adaptSubmenuItem', { static: true }]
        }], swipeContainer: [{
            type: ViewChild,
            args: ['swipeContainer', { static: true }]
        }] }); })();
//# sourceMappingURL=menu-mobile-view.component.js.map