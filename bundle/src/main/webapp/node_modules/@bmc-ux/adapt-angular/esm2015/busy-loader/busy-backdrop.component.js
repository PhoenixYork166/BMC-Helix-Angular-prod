import { Component, Input, ChangeDetectorRef } from '@angular/core';
import { trigger, style, transition, animate } from '@angular/animations';
import { ReplaySubject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { PromiseTrackerService } from './promise-tracker.service';
import * as i0 from "@angular/core";
import * as i1 from "./promise-tracker.service";
import * as i2 from "@angular/common";
const _c0 = function (a0, a1) { return [a0, a1]; };
function AdaptBusyBackdropComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "div", 1);
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(2, _c0, ctx_r0.type, ctx_r0.overlayClass))("@fadeInOut", undefined);
} }
const inactiveStyle = style({
    opacity: 0,
});
const timing = '.3s ease';
export class AdaptBusyBackdropComponent {
    constructor(tracker, changeDetectorRef) {
        this.tracker = tracker;
        this.changeDetectorRef = changeDetectorRef;
        this.isActive = false;
        this._destroyed$ = new ReplaySubject(1);
    }
    ngAfterViewInit() {
        this.tracker.activeState$
            .pipe(takeUntil(this._destroyed$))
            .subscribe((value) => {
            this.isActive = value;
            this.changeDetectorRef.detectChanges();
        });
    }
    ngOnDestroy() {
        this._destroyed$.next(true);
        this._destroyed$.complete();
    }
}
AdaptBusyBackdropComponent.ɵfac = function AdaptBusyBackdropComponent_Factory(t) { return new (t || AdaptBusyBackdropComponent)(i0.ɵɵdirectiveInject(i1.PromiseTrackerService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
AdaptBusyBackdropComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptBusyBackdropComponent, selectors: [["adapt-busy-backdrop"], ["ng-busy-backdrop"]], inputs: { type: "type", overlayClass: "overlayClass" }, decls: 3, vars: 1, consts: [["class", "ng-busy-backdrop", 3, "ngClass", 4, "ngIf"], [1, "ng-busy-backdrop", 3, "ngClass"]], template: function AdaptBusyBackdropComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtext(0, "\n    ");
        i0.ɵɵtemplate(1, AdaptBusyBackdropComponent_div_1_Template, 1, 5, "div", 0);
        i0.ɵɵtext(2, "\n  ");
    } if (rf & 2) {
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.isActive);
    } }, directives: [i2.NgIf, i2.NgClass], encapsulation: 2, data: { animation: [
            trigger('fadeInOut', [
                transition('void => *', [
                    inactiveStyle,
                    animate(timing)
                ]),
                transition('* => void', [
                    animate(timing, inactiveStyle)
                ])
            ])
        ] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptBusyBackdropComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-busy-backdrop, ng-busy-backdrop',
                template: `
    <div class="ng-busy-backdrop" [ngClass]="[type, overlayClass]" @fadeInOut *ngIf="isActive"></div>
  `,
                animations: [
                    trigger('fadeInOut', [
                        transition('void => *', [
                            inactiveStyle,
                            animate(timing)
                        ]),
                        transition('* => void', [
                            animate(timing, inactiveStyle)
                        ])
                    ])
                ]
            }]
    }], function () { return [{ type: i1.PromiseTrackerService }, { type: i0.ChangeDetectorRef }]; }, { type: [{
            type: Input
        }], overlayClass: [{
            type: Input
        }] }); })();
//# sourceMappingURL=busy-backdrop.component.js.map