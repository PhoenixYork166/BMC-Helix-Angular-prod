{"version":3,"file":"modal.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/modal/modal.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport {AnimationEvent} from '@angular/animations';\nimport {merge} from 'lodash-es';\n\nimport {DismissReasons} from '../common/common.enums';\nimport {AdaptTranslateService} from '../common/i18n/index';\nimport {AlertAnimatedConfig, AlertCloseEvent} from '../alert-animated/index';\n\nimport {AdaptModalConfig} from './modal.config';\nimport {ActiveModalRef, ModalConfig, ModalDialog} from './modal.model';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularGenericDirective,\n  AdaptRadarAngularService\n} from '../common/radar/adapt-radar';\n\n/**\n * The abstract class for represent basics modal functional\n */\n@Directive()\nexport abstract class ModalDirective extends AdaptRadarAngularGenericDirective implements OnInit {\n  modalClassInstance: boolean = true; // Needed for LayerService\n  alerts: AlertAnimatedConfig[] = [];\n  contentInstanceRef: unknown;\n\n  @Input() id: string;\n  @Input() config: ModalConfig | ModalDialog;\n  @Input() configService: AdaptModalConfig;\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any, @angular-eslint/no-output-on-prefix */\n  @Output() readonly onClose: EventEmitter<any> = new EventEmitter();\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any, @angular-eslint/no-output-on-prefix */\n  @Output() readonly onDismiss: EventEmitter<any> = new EventEmitter();\n  /* eslint-disable-next-line @angular-eslint/no-output-on-prefix */\n  @Output() readonly onCloseAnimationEnd: EventEmitter<void> = new EventEmitter();\n  @Output() readonly alertClosed: EventEmitter<AlertCloseEvent> = new EventEmitter<AlertCloseEvent>();\n\n  reason: typeof DismissReasons = DismissReasons;\n\n  protected context: ActiveModalRef;\n  closeText: string;\n  // Private fields\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _beforeDismiss: (reason: any) => boolean;\n\n  protected constructor(private _elRef: ElementRef,\n                        private _componentFactoryResolver: ComponentFactoryResolver,\n                        private _activeModalRef: ActiveModalRef,\n                        private _rootActiveModalRef: ActiveModalRef,\n                        public ts: AdaptTranslateService,\n                        _adaptRadarService: AdaptRadarAngularService) {\n    super(_adaptRadarService, _elRef, AdaptRadarAngularCustomEventName.AdaptModal);\n\n    this.context = {\n      close: (result) => {\n        this.close(result);\n      },\n\n      dismiss: (reason) => {\n        this.dismiss(reason);\n      },\n\n      openOverModal: () => {\n        return;\n      },\n\n      closeOverModal: () => {\n        return;\n      },\n\n      getData: () => {\n        return this.config ? this.config.data : undefined;\n      },\n\n      openAlert: (alert) => {\n        this.openAlert(alert);\n      },\n\n      alertClosed: this.alertClosed\n    };\n\n    Object.assign(this._activeModalRef, this.context);\n\n    if (_rootActiveModalRef) {\n      Object.assign(this._rootActiveModalRef, this.context);\n    }\n\n    this.closeText = ts.getCurrentLanguage()['adapt.common.close'];\n  }\n\n  // ESC click handler\n  escClickHandler: ($event: KeyboardEvent) => boolean = ($event: KeyboardEvent): boolean => {\n    let closeModal;\n\n    if ($event && !$event.defaultPrevented) {\n      closeModal = !this.config.isDialog;\n\n      switch (this.config.blockKeyboard) {\n        case true: {\n          closeModal = false;\n          break;\n        }\n        case false: {\n          closeModal = true;\n          break;\n        }\n      }\n    }\n\n    if (closeModal) {\n      this.dismiss(this.reason.ESC);\n    }\n\n    return closeModal;\n  };\n\n  ngOnInit(): void {\n    this._activeModalRef.openOverModal = this.context.openOverModal;\n    this._activeModalRef.closeOverModal = this.context.closeOverModal;\n\n    const contentContainer = this.getContentPlacementRef();\n\n    // Set 'beforeDismiss' property if it was received\n    if (this.config && this.config.beforeDismiss) {\n      this._beforeDismiss = this.config.beforeDismiss;\n    }\n\n    // Build modal inner content according to config.content type\n    if (this.config.content instanceof TemplateRef) {\n      contentContainer.createEmbeddedView(this.config.content, this.context);\n\n    } else if (typeof this.config.content === 'string') {\n      const modalBodyContainer = contentContainer.element.nativeElement.parentNode;\n\n      const newNode = document.createElement('div');\n\n      newNode.classList.add('modal-body');\n      newNode.innerText = this.config.content;\n\n      modalBodyContainer.appendChild(newNode);\n\n    } else {\n      const factory = this._componentFactoryResolver.resolveComponentFactory(this.config.content);\n      const contentRef = contentContainer.createComponent(factory);\n\n      contentRef.location.nativeElement.style.display = 'flex';\n      contentRef.location.nativeElement.style.flex = '1 1 auto';\n      contentRef.location.nativeElement.style.flexDirection = 'column';\n\n      this.contentInstanceRef = contentRef.instance;\n    }\n  }\n\n  updateConfig(config: ModalConfig): void {\n    this.config = merge(this.config, config);\n  }\n\n  openAlert(alert: AlertAnimatedConfig): void {\n    this.alerts.unshift(alert);\n  }\n\n  get title(): string {\n    return this.config.title && this.config.title.trim() ? this.config.title : null;\n  }\n\n  get showHeader(): boolean {\n    if (this.config.showEmptyHeader === false) {\n      return false;\n    }\n\n    return Boolean(this.title) || this.config.showEmptyHeader || this.configService.showEmptyHeader;\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  /**\n   * Close modal with the result\n   */\n  close(result: any): void {\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n    this.onClose.emit(result);\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  /**\n   * Dismiss modal with the reason\n   */\n  dismiss(reason: any): void {\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n    if (this._beforeDismiss && !this._beforeDismiss(reason)) {\n      return;\n    }\n    this.onDismiss.emit(reason);\n  }\n\n  /**\n   * Emit onCloseAnimationEnd event on modal animation end\n   */\n  modalCloseAnimationEnd(event: AnimationEvent): void {\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n    if (event.toState === 'void') {\n      this.onCloseAnimationEnd.emit();\n\n      const contentViewContainerRef = this.getContentPlacementRef();\n\n      if (contentViewContainerRef) {\n        contentViewContainerRef.detach();\n        contentViewContainerRef.clear();\n      }\n    }\n  }\n\n  /**\n   * Method which returns ViewContainerRef of the content placement container in concrete component template\n   */\n  protected abstract getContentPlacementRef(): ViewContainerRef;\n}\n"]}