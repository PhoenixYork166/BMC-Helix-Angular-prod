import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
export class AdaptSidebarService {
    constructor() {
        this.closePanel = new Subject();
        this._panels = [];
    }
    get selectedId() {
        return this._selectedId;
    }
    set selectedId(selId) {
        if (this._selectedId !== undefined) {
            this._panels[this._selectedId].opened = false;
        }
        this._selectedId = selId;
        this._panels[selId].opened = true;
    }
    get selectedId2() {
        return this._selectedId2;
    }
    set selectedId2(selId) {
        if (this._selectedId2 !== undefined) {
            this._panels[this._selectedId2].opened = false;
        }
        this._selectedId2 = selId;
        this._panels[selId].opened = true;
    }
    initPanels(panels) {
        this._panels = this._getPanels(panels.toArray());
    }
    initColumnsPanels(columns) {
        const panels = [];
        columns.forEach(column => {
            column.panels.forEach(panel => {
                panels.push(panel);
            });
        });
        this._panels = this._getPanels(panels);
    }
    selectPanel(id) {
        this.selectedId = id;
    }
    selectPanel2(id) {
        this.selectedId2 = id;
    }
    _getPanels(panels) {
        return panels.map((panel, id) => {
            panel.id = id;
            return panel;
        });
    }
}
AdaptSidebarService.ɵfac = function AdaptSidebarService_Factory(t) { return new (t || AdaptSidebarService)(); };
AdaptSidebarService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AdaptSidebarService, factory: AdaptSidebarService.ɵfac });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptSidebarService, [{
        type: Injectable
    }], null, null); })();
//# sourceMappingURL=sidebar.service.js.map