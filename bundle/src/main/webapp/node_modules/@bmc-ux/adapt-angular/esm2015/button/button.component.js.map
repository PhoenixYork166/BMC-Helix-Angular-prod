{"version":3,"file":"button.component.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/button/button.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAEL,uBAAuB,EACvB,SAAS,EACT,UAAU,EACV,WAAW,EACX,KAAK,EAIL,SAAS,EACT,iBAAiB,EAClB,MAAM,eAAe,CAAC;AACvB,OAAO,EAAC,qBAAqB,EAAC,MAAM,uBAAuB,CAAC;AAC5D,OAAO,EAAC,SAAS,EAAe,MAAM,MAAM,CAAC;AAG7C,OAAO,EACL,gCAAgC,EAChC,iCAAiC,EACjC,wBAAwB,EACzB,MAAM,6BAA6B,CAAC;;;;;IAiFjC,+BAA2D;IACrD,4BAAA;IAAA,qBAAwC;IAC5C,wBAAA;IAAA,iBAAO;;;;AA1Eb;;GAEG;AACH,MAAM,YAAY,GAAsB;IACtC,SAAS;IACT,WAAW;IACX,UAAU;IACV,SAAS;IACT,SAAS;IACT,MAAM;IACN,SAAS;IACT,UAAU;IACV,SAAS;CACV,CAAC;AAEF;;GAEG;AACH,MAAM,YAAY,GAAqB;IACrC,YAAY;IACZ,OAAO;IACP,OAAO;IACP,SAAS;IACT,OAAO;IACP,YAAY;CACb,CAAC;AAEF;;GAEG;AAEH,MAAM,OAAO,iBAAkB,SAAQ,KAAK;IAC1C,YAAY,IAAY;QACtB,KAAK,CAAC,gBAAgB,IAAI,uGAAuG,CAAC,CAAC;IACrI,CAAC;CACF;AAED;;GAEG;AACH,MAAM,OAAO,cAAe,SAAQ,KAAK;IACvC,YAAY,IAAY;QACtB,KAAK,CAAC,gBAAgB,IAAI,oFAAoF,CAAC,CAAC;IAClH,CAAC;CACF;AAqCD,MAAM,OAAO,oBAAqB,SAAQ,iCAAiC;IAkEzE,YAAmB,IAAgB,EAAU,SAAoB,EACrD,kBAA4C,EAC5C,KAA8B;QACxC,KAAK,CAAC,kBAAkB,EAAE,KAAK,EAAE,gCAAgC,CAAC,WAAW,CAAC,CAAC;QAH9D,SAAI,GAAJ,IAAI,CAAY;QAAU,cAAS,GAAT,SAAS,CAAW;QAbjE;;;;WAIG;QACoC,aAAQ,GAAW,CAAC,CAAC;QAKpD,cAAS,GAAY,KAAK,CAAC;IAOnC,CAAC;IArED;;;;OAIG;IACH,IACI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,IAAI,IAAI,CAAC,CAAkB;QACzB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED;;;;OAIG;IACH,IACI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,IAAI,IAAI,CAAC,CAAiB;QACxB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED;;;OAGG;IACH,IACI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,IAAI,QAAQ,CAAC,KAAc;QACzB,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;IAChD,CAAC;IAED,2DAA2D;IAC3D,IAAmB,QAAQ,CAAC,KAA0B;QACpD,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YAEvB,IAAI,IAAI,CAAC,IAAI,EAAE;gBACb,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aAC9E;SACF;IACH,CAAC;IAqBD,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1B;QAED,0FAA0F;QAC1F,yEAAyE;QACzE,qFAAqF;QACrF,EAAE;QACF,kEAAkE;QAClE,EAAE;QACF,8HAA8H;QAC9H,IAAI,CAAC,kBAAkB;YACrB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;iBACzD,SAAS,CAAC,CAAC,KAAiB,EAAE,EAAE;gBAC/B,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,KAAK,CAAC,cAAc,EAAE,CAAC;oBACvB,KAAK,CAAC,wBAAwB,EAAE,CAAC;iBAClC;YACH,CAAC,CAAC,CAAC;IACT,CAAC;IAED,eAAe;;QACb,MAAM,aAAa,GAAG,MAAC,IAAI,CAAC,IAAI,CAAC,aAA6B,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC,0CAAE,KAAK,CAAC;QAEtG,IAAI,CAAC,aAAa,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;SACxE;IACH,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;YACtC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;SAChC;IACH,CAAC;IAED;;OAEG;IACH,WAAW;QACT,IAAI,IAAI,CAAC,IAAI,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;YACvD,MAAM,IAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxC;QAED,IAAI,IAAI,CAAC,IAAI,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;YACvD,MAAM,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACrC;IACH,CAAC;;wFAxHU,oBAAoB;uEAApB,oBAAoB;;;;;QAT7B,sBAAA;QAAA,uEAES;QACT,sBAAA;QAAA,kBAAyB;QAC3B,oBAAA;;QAJmC,eAAwB;QAAxB,6CAAwB;;uFAShD,oBAAoB;cAlChC,SAAS;eAAC;gBACT,QAAQ,EAAE,qDAAqD;gBAC/D,qEAAqE;gBACrE,IAAI,EAAE;oBACJ,iBAAiB,EAAE,+BAA+B;oBAClD,aAAa,EAAE,MAAM;oBACrB,4BAA4B,EAAE,MAAM;oBACpC,qBAAqB,EAAE,wCAAwC;oBAC/D,uBAAuB,EAAE,qBAAqB;oBAC9C,kBAAkB,EAAE,yCAAyC;oBAC7D,qBAAqB,EAAE,mBAAmB;oBAC1C,qBAAqB,EAAE,mBAAmB;oBAC1C,kBAAkB,EAAE,gBAAgB;oBACpC,qBAAqB,EAAE,mBAAmB;oBAC1C,oBAAoB,EAAE,wCAAwC;oBAC9D,gBAAgB,EAAE,sBAAsB;oBACxC,gBAAgB,EAAE,iBAAiB;oBACnC,gBAAgB,EAAE,iBAAiB;oBACnC,gBAAgB,EAAE,sBAAsB;oBACxC,mBAAmB,EAAE,iBAAiB;oBACtC,qBAAqB,EAAE,iBAAiB;oBACxC,kBAAkB,EAAE,UAAU;iBAC/B;gBACD,QAAQ,EAAE,UAAU;gBACpB,QAAQ,EAAE;;;;;GAKT;gBACD,aAAa,EAAE,iBAAiB,CAAC,IAAI;gBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;qJASK,IAAI;kBADP,KAAK;mBAAC,UAAU;YAeb,IAAI;kBADP,KAAK;mBAAC,MAAM;YAcT,QAAQ;kBADX,KAAK;YAUa,QAAQ;kBAA1B,KAAK;mBAAC,MAAM;YAe0B,QAAQ;kBAA9C,WAAW;mBAAC,eAAe;;kBAAG,KAAK","sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewEncapsulation\n} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {fromEvent, Subscription} from 'rxjs';\n\nimport {ColorVariantType} from '../common/common.models';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularGenericDirective,\n  AdaptRadarAngularService\n} from '../common/radar/adapt-radar';\n\ntype ButtonColorType = ColorVariantType | 'secondary' | 'tertiary' | 'toolbar' | 'critical' | 'special';\ntype ButtonTypeAttribute = 'button' | 'submit' | 'reset';\n\n// TODO: Button types needs to be merged with 'ButtonSize' from libs/adapt-angular/src/button/button-group/button-group.models.ts\ntype ButtonSizeType = 'xtra-large' | 'xtra-small' | 'small' | 'default' | 'large' | 'block';\n\n\n/**\n * An Array list of button types\n */\nconst BUTTON_TYPES: ButtonColorType[] = [\n  'primary',\n  'secondary',\n  'tertiary',\n  'toolbar',\n  'success',\n  'info',\n  'warning',\n  'critical',\n  'special'\n];\n\n/**\n * An array list of button sizes\n */\nconst BUTTON_SIZES: ButtonSizeType[] = [\n  'xtra-small',\n  'small',\n  'large',\n  'default',\n  'block',\n  'xtra-large'\n];\n\n/**\n * An Error for 'btn-type' user input\n */\n\nexport class AdaptBtnTypeError extends Error {\n  constructor(type: string) {\n    super(`Button type \"${type}\" isn't supported (allowed: primary, secondary, tertiary, success, info, warning, critical, special).`);\n  }\n}\n\n/**\n * An Error for 'size' user input\n */\nexport class AdaptSizeError extends Error {\n  constructor(type: string) {\n    super(`Button size \"${type}\" isn't supported (allowed: xtra-large, xtra-small, small, default, large, block).`);\n  }\n}\n\n\n@Component({\n  selector: 'adapt-button, button[adapt-button], a[adapt-button]',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[attr.disabled]': ' disabled ? \"disabled\": null ',\n    '[class.btn]': 'true',\n    '[class.keyboard-focusable]': 'true',\n    '[class.btn-primary]': 'type == \"primary\" || type == \"special\"',\n    '[class.btn-secondary]': 'type == \"secondary\"',\n    '[class.btn-link]': 'type == \"tertiary\" || type == \"toolbar\"',\n    '[class.btn-toolbar]': 'type == \"toolbar\"',\n    '[class.btn-success]': 'type == \"success\"',\n    '[class.btn-info]': 'type == \"info\"',\n    '[class.btn-warning]': 'type == \"warning\"',\n    '[class.btn-danger]': 'type == \"critical\" || type == \"danger\"',\n    '[class.btn-xs]': 'size == \"xtra-small\"',\n    '[class.btn-sm]': 'size == \"small\"',\n    '[class.btn-lg]': 'size == \"large\"',\n    '[class.btn-xl]': 'size == \"xtra-large\"',\n    '[class.btn-block]': 'size == \"block\"',\n    '[class.icon-change]': 'type==\"special\"',\n    '[class.disabled]': 'disabled'\n  },\n  exportAs: 'adaptBtn',\n  template: `\n    <span class=\"icon-change-block\" *ngIf=\"type === 'special'\">\n          <ng-content select=\".icon\"></ng-content>\n      </span>\n    <ng-content></ng-content>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class AdaptButtonComponent extends AdaptRadarAngularGenericDirective implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  /**\n   * Specifies type of the button.\n   * Supported values: \"primary\", \"secondary\", \"tertiary\", \"toolbar\", \"success\", \"info\", \"warning\", \"critical\", \"special\"\n   * @docs-default\n   */\n  @Input('btn-type')\n  get type(): ButtonColorType {\n    return this._type;\n  }\n\n  set type(v: ButtonColorType) {\n    this._type = v;\n  }\n\n  /**\n   * Specifies size of the button.\n   * Supported values: \"xtra-small\", \"small\", \"large\", \"default\", \"xtra-large\", \"block\"\n   * @docs-default\n   */\n  @Input('size')\n  get size(): ButtonSizeType {\n    return this._size;\n  }\n\n  set size(v: ButtonSizeType) {\n    this._size = v;\n  }\n\n  /**\n   * When present, it specifies that the element should be disabled\n   * @docs-default false\n   */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('type') set typeAttr(value: ButtonTypeAttribute) {\n    if (value) {\n      this._typeAttr = value;\n\n      if (this.elem) {\n        this._renderer.setAttribute(this.elem.nativeElement, 'type', this._typeAttr);\n      }\n    }\n  }\n\n  /**\n   * Native element tabindex\n   * @since v10.14.0\n   * @docs-default 0\n   */\n  @HostBinding('attr.tabindex') @Input() tabIndex: number = 0;\n\n  private _typeAttr: ButtonTypeAttribute;\n  private _type: ButtonColorType;\n  private _size: ButtonSizeType;\n  private _disabled: boolean = false;\n  private _clickSubscription: Subscription;\n\n  constructor(public elem: ElementRef, private _renderer: Renderer2,\n              _adaptRadarService: AdaptRadarAngularService,\n              _elem: ElementRef<HTMLElement>) {\n    super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptButton);\n  }\n\n  ngOnInit(): void {\n    if (!this._typeAttr) {\n      this.typeAttr = 'button';\n    }\n\n    //   Angular optimizes event handlers, if you have two or more handlers for the same event\n    //   it will add only one listener and dispatch result to all components.\n    //   It means that stopImmediatePropagation now depends on angular dispatching order.\n    //\n    //   Angular issue: https://github.com/angular/angular/issues/9587\n    //\n    //   Workaround: listen click event via rxjs fromEvent (https://github.com/angular/angular/issues/9587#issuecomment-812869074)\n    this._clickSubscription =\n      fromEvent(this.elem.nativeElement, 'click', {capture: true})\n        .subscribe((event: MouseEvent) => {\n          if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n          }\n        });\n  }\n\n  ngAfterViewInit(): void {\n    const roleAttribute = (this.elem.nativeElement as HTMLElement).attributes.getNamedItem('role')?.value;\n\n    if (!roleAttribute) {\n      this._renderer.setAttribute(this.elem.nativeElement, 'role', 'button');\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._clickSubscription) {\n      this._clickSubscription.unsubscribe();\n      this._clickSubscription = null;\n    }\n  }\n\n  /**\n   * Throw the error if the user make the mistake with 'btn-type' or 'size' user inputs\n   */\n  ngOnChanges(): void {\n    if (this.type && BUTTON_TYPES.indexOf(this.type) === -1) {\n      throw new AdaptBtnTypeError(this.type);\n    }\n\n    if (this.size && BUTTON_SIZES.indexOf(this.size) === -1) {\n      throw new AdaptSizeError(this.size);\n    }\n  }\n}\n"]}