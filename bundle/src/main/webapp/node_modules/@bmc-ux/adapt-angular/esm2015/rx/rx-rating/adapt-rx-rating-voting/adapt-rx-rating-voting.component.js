import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';
import { AdaptDeviceDetectionService } from '../../../common/device-detection.service';
import { getInteractionSource } from '../../../common/interaction-source';
import { AdaptRadarAngularCustomEventName, AdaptRadarAngularCustomEventType, AdaptRadarAngularService, AdaptRadarAngularGenericDirective } from '../../../common/radar/adapt-radar';
import { AdaptRxRatingConfigService } from '../adapt-rx-rating-config.service';
import { RxRatingVotingType } from '../adapt-rx-rating.types';
import * as i0 from "@angular/core";
import * as i1 from "../adapt-rx-rating-config.service";
import * as i2 from "../../../common/radar/adapt-radar";
import * as i3 from "../../../common/device-detection.service";
import * as i4 from "@angular/common";
import * as i5 from "../../../tooltip/tooltip.directive";
function AdaptRxRatingVotingComponent_button_2_span_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r2.thanksText);
} }
const _c0 = function (a0, a1, a2, a3, a4, a5) { return { "d-icon-star": a0, "d-icon-star_o": a1, "d-icon-thumb_up_adapt": a2, "d-icon-thumb_up_o_adapt": a3, "d-icon-flag": a4, "d-icon-flag_o": a5 }; };
function AdaptRxRatingVotingComponent_button_2_span_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 5);
    i0.ɵɵtext(1, "\n    ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction6(5, _c0, ctx_r3.type === ctx_r3.UI_TYPE.Star && ctx_r3.isActive, ctx_r3.type === ctx_r3.UI_TYPE.Star && !ctx_r3.isActive, ctx_r3.type === ctx_r3.UI_TYPE.Like && ctx_r3.isActive, ctx_r3.type === ctx_r3.UI_TYPE.Like && !ctx_r3.isActive, ctx_r3.type === ctx_r3.UI_TYPE.Flag && ctx_r3.isActive, ctx_r3.type === ctx_r3.UI_TYPE.Flag && !ctx_r3.isActive))("adaptTooltip", ctx_r3.tooltip !== "" ? ctx_r3.tooltip : "")("adaptRadarDisableEventSending", true)("placement", ctx_r3.tooltipPlacement);
    i0.ɵɵattribute("aria-label", ctx_r3.tooltip || "");
} }
const _c1 = function (a0, a1, a2, a3, a4) { return { "a-rating-voting__btn": a0, "btn btn-secondary btn-sm": a1, "is-star-icon": a2, "is-active": a3, "active": a4 }; };
function AdaptRxRatingVotingComponent_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r5 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 3);
    i0.ɵɵlistener("click", function AdaptRxRatingVotingComponent_button_2_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.handleClick($event); });
    i0.ɵɵtext(1, "\n\n    ");
    i0.ɵɵtemplate(2, AdaptRxRatingVotingComponent_button_2_span_2_Template, 2, 1, "span", 2);
    i0.ɵɵtext(3, "\n\n    ");
    i0.ɵɵtemplate(4, AdaptRxRatingVotingComponent_button_2_span_4_Template, 2, 12, "span", 4);
    i0.ɵɵtext(5, "\n  ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction5(4, _c1, ctx_r0.type !== ctx_r0.UI_TYPE.Thanks, ctx_r0.type === ctx_r0.UI_TYPE.Thanks, ctx_r0.type === ctx_r0.UI_TYPE.Star, ctx_r0.isActive, ctx_r0.type === ctx_r0.UI_TYPE.Thanks && ctx_r0.isActive));
    i0.ɵɵattribute("data-testid", ctx_r0.testID);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r0.type === ctx_r0.UI_TYPE.Thanks);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r0.type !== ctx_r0.UI_TYPE.Thanks);
} }
function AdaptRxRatingVotingComponent_span_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span");
    i0.ɵɵtext(1);
    i0.ɵɵelementStart(2, "span", 6);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd();
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("", ctx_r1.thanksAbbrMessage, " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("\"", ctx_r1.thanksText, "\"");
} }
export class AdaptRxRatingVotingComponent extends AdaptRadarAngularGenericDirective {
    /* eslint-enable @angular-eslint/no-output-on-prefix */
    constructor(rxRatingConfigService, _adaptRadarService, _deviceDetectionService, _elem) {
        super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptRxRatingVoting);
        this._adaptRadarService = _adaptRadarService;
        this._deviceDetectionService = _deviceDetectionService;
        this.UI_TYPE = RxRatingVotingType;
        this.isActive = false;
        this.wasClick = true;
        this.isMobile = false;
        /**
         * Voting mode
         * @docs-default RxRatingVotingType.Star
         */
        this.type = RxRatingVotingType.Star;
        /**
         * Tooltip placement
         * @docs-default top
         */
        this.tooltipPlacement = 'top';
        /* eslint-disable @angular-eslint/no-output-on-prefix */
        /**
         * An event fired when a user selects a new rating.
         */
        this.onRateChange = new EventEmitter();
        this.thanksText = rxRatingConfigService.texts.voting.thanksText;
        this.thanksAbbrMessage = rxRatingConfigService.texts.voting.thanksAbbrMessage;
        this.isMobile = this._deviceDetectionService.isMobile();
    }
    handleClick(event) {
        this.isActive = !this.isActive;
        this.onRateChange.emit(this.isActive);
        if (this.type === RxRatingVotingType.Thanks) {
            this.wasClick = false;
        }
        this._adaptRadarService.sendCustomEventForAllProviders(AdaptRadarAngularCustomEventName.AdaptRxRatingVoting, {
            GroupName: this.adaptRadarGroupName,
            EventType: AdaptRadarAngularCustomEventType.Click,
            Type: this.type,
            HasTooltip: !!this.tooltip,
            HasThanksText: !!this.thanksText,
            RatingValue: this.isActive,
            SubmitMethod: getInteractionSource(event, this.isMobile)
        });
    }
}
AdaptRxRatingVotingComponent.ɵfac = function AdaptRxRatingVotingComponent_Factory(t) { return new (t || AdaptRxRatingVotingComponent)(i0.ɵɵdirectiveInject(i1.AdaptRxRatingConfigService), i0.ɵɵdirectiveInject(i2.AdaptRadarAngularService), i0.ɵɵdirectiveInject(i3.AdaptDeviceDetectionService), i0.ɵɵdirectiveInject(i0.ElementRef)); };
AdaptRxRatingVotingComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptRxRatingVotingComponent, selectors: [["adapt-rx-rating-voting"]], inputs: { type: "type", thanksText: "thanksText", thanksAbbrMessage: "thanksAbbrMessage", tooltip: "tooltip", tooltipPlacement: "tooltipPlacement", testID: "testID" }, outputs: { onRateChange: "onRateChange" }, features: [i0.ɵɵInheritDefinitionFeature], decls: 7, vars: 2, consts: [[1, "a-rating-voting"], ["type", "button", 3, "ngClass", "click", 4, "ngIf"], [4, "ngIf"], ["type", "button", 3, "ngClass", "click"], ["class", "a-rating-voting__icon", 3, "ngClass", "adaptTooltip", "adaptRadarDisableEventSending", "placement", 4, "ngIf"], [1, "a-rating-voting__icon", 3, "ngClass", "adaptTooltip", "adaptRadarDisableEventSending", "placement"], [1, "font-weight-semibold"]], template: function AdaptRxRatingVotingComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 0);
        i0.ɵɵtext(1, "\n  ");
        i0.ɵɵtemplate(2, AdaptRxRatingVotingComponent_button_2_Template, 6, 10, "button", 1);
        i0.ɵɵtext(3, "\n\n  ");
        i0.ɵɵtemplate(4, AdaptRxRatingVotingComponent_span_4_Template, 4, 2, "span", 2);
        i0.ɵɵtext(5, "\n");
        i0.ɵɵelementEnd();
        i0.ɵɵtext(6, "\n");
    } if (rf & 2) {
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.wasClick);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx.wasClick);
    } }, directives: [i4.NgIf, i4.NgClass, i5.AdaptTooltipDirective], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptRxRatingVotingComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-rx-rating-voting',
                templateUrl: './adapt-rx-rating-voting.component.html'
            }]
    }], function () { return [{ type: i1.AdaptRxRatingConfigService }, { type: i2.AdaptRadarAngularService }, { type: i3.AdaptDeviceDetectionService }, { type: i0.ElementRef }]; }, { type: [{
            type: Input
        }], thanksText: [{
            type: Input
        }], thanksAbbrMessage: [{
            type: Input
        }], tooltip: [{
            type: Input
        }], tooltipPlacement: [{
            type: Input
        }], testID: [{
            type: Input
        }], onRateChange: [{
            type: Output
        }] }); })();
//# sourceMappingURL=adapt-rx-rating-voting.component.js.map