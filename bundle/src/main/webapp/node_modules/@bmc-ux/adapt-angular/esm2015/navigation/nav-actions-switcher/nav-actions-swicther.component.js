import { Component, Input, ElementRef, ViewChild, ChangeDetectionStrategy } from '@angular/core';
import { AdaptSwitcherModel } from '../navigation.config';
import { AdaptDropdownDirective } from '../../dropdown/index';
import { ReplaySubject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { AdaptDeviceDetectionService } from '../../common/device-detection.service';
import { AdaptRadarAngularService } from '../../common/radar/adapt-radar';
import { debounce } from 'lodash-es';
import * as i0 from "@angular/core";
import * as i1 from "../../common/radar/adapt-radar";
import * as i2 from "../../common/device-detection.service";
import * as i3 from "@angular/common";
import * as i4 from "../../dropdown/dropdown.component";
import * as i5 from "../../rx/rx-search/adapt-rx-search.component";
import * as i6 from "@angular/forms";
import * as i7 from "../nav.actions.component";
import * as i8 from "../navigation.pipe";
const _c0 = ["switcherDropdown"];
function AdaptNavActionsSwictherComponent_ng_container_0_ng_container_13_li_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "li", 10);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r6.appSwitcherMetaData.switcher.recentItems.header);
} }
function AdaptNavActionsSwictherComponent_ng_container_0_ng_container_13_li_4_div_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const sub_r8 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵclassMapInterpolate1("a-dropdown__link-disabled dropdown-item disabled ", sub_r8.className, "");
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n            ", sub_r8.name, "\n          ");
} }
function AdaptNavActionsSwictherComponent_ng_container_0_ng_container_13_li_4_adapt_nav_action_subitem_4_Template(rf, ctx) { if (rf & 1) {
    const _r15 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "adapt-nav-action-subitem", 15);
    i0.ɵɵlistener("emitCloseDropdowns", function AdaptNavActionsSwictherComponent_ng_container_0_ng_container_13_li_4_adapt_nav_action_subitem_4_Template_adapt_nav_action_subitem_emitCloseDropdowns_0_listener() { i0.ɵɵrestoreView(_r15); const ctx_r14 = i0.ɵɵnextContext(4); return ctx_r14.closeAllDropdowns(); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const sub_r8 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵproperty("customClass", "text-active")("item", sub_r8)("actionType", "switcher");
} }
function AdaptNavActionsSwictherComponent_ng_container_0_ng_container_13_li_4_div_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "div", 16);
} }
function AdaptNavActionsSwictherComponent_ng_container_0_ng_container_13_li_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "li", 11);
    i0.ɵɵtext(1, "\n\n          ");
    i0.ɵɵtemplate(2, AdaptNavActionsSwictherComponent_ng_container_0_ng_container_13_li_4_div_2_Template, 2, 4, "div", 12);
    i0.ɵɵtext(3, "\n\n          ");
    i0.ɵɵtemplate(4, AdaptNavActionsSwictherComponent_ng_container_0_ng_container_13_li_4_adapt_nav_action_subitem_4_Template, 1, 3, "adapt-nav-action-subitem", 13);
    i0.ɵɵtext(5, "\n\n          ");
    i0.ɵɵtemplate(6, AdaptNavActionsSwictherComponent_ng_container_0_ng_container_13_li_4_div_6_Template, 1, 0, "div", 14);
    i0.ɵɵtext(7, "\n        ");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const sub_r8 = ctx.$implicit;
    const isLast_r9 = ctx.last;
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", sub_r8.disabled);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", !sub_r8.disabled);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", isLast_r9);
} }
function AdaptNavActionsSwictherComponent_ng_container_0_ng_container_13_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n        ");
    i0.ɵɵtemplate(2, AdaptNavActionsSwictherComponent_ng_container_0_ng_container_13_li_2_Template, 2, 1, "li", 6);
    i0.ɵɵtext(3, "\n\n        ");
    i0.ɵɵtemplate(4, AdaptNavActionsSwictherComponent_ng_container_0_ng_container_13_li_4_Template, 8, 3, "li", 9);
    i0.ɵɵtext(5, "\n\n      ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r2.appSwitcherMetaData.header);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r2.appSwitcherMetaData.switcher.recentItems.items)("ngForTrackBy", ctx_r2.trackSwictherData);
} }
function AdaptNavActionsSwictherComponent_ng_container_0_li_18_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "li", 10);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r3.appSwitcherMetaData.switcher.allItems.header);
} }
function AdaptNavActionsSwictherComponent_ng_container_0_ng_container_20_div_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const sub_r17 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵclassMapInterpolate1("a-dropdown__link-disabled dropdown-item disabled ", sub_r17.className, "");
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1("\n              ", sub_r17.name, "\n            ");
} }
function AdaptNavActionsSwictherComponent_ng_container_0_ng_container_20_adapt_nav_action_subitem_6_Template(rf, ctx) { if (rf & 1) {
    const _r22 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "adapt-nav-action-subitem", 19);
    i0.ɵɵlistener("emitCloseDropdowns", function AdaptNavActionsSwictherComponent_ng_container_0_ng_container_20_adapt_nav_action_subitem_6_Template_adapt_nav_action_subitem_emitCloseDropdowns_0_listener() { i0.ɵɵrestoreView(_r22); const ctx_r21 = i0.ɵɵnextContext(3); return ctx_r21.closeAllDropdowns(); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const sub_r17 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵproperty("item", sub_r17);
} }
function AdaptNavActionsSwictherComponent_ng_container_0_ng_container_20_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n          ");
    i0.ɵɵelementStart(2, "li", 17);
    i0.ɵɵtext(3, "\n\n            ");
    i0.ɵɵtemplate(4, AdaptNavActionsSwictherComponent_ng_container_0_ng_container_20_div_4_Template, 2, 4, "div", 12);
    i0.ɵɵtext(5, "\n\n            ");
    i0.ɵɵtemplate(6, AdaptNavActionsSwictherComponent_ng_container_0_ng_container_20_adapt_nav_action_subitem_6_Template, 1, 1, "adapt-nav-action-subitem", 18);
    i0.ɵɵtext(7, "\n          ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(8, "\n        ");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const sub_r17 = ctx.$implicit;
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngIf", sub_r17.disabled);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", !sub_r17.disabled);
} }
function AdaptNavActionsSwictherComponent_ng_container_0_li_23_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "li", 10);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r5.texts.notFoundText);
} }
function AdaptNavActionsSwictherComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    const _r25 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1, "\n  ");
    i0.ɵɵelementStart(2, "div", 1, 2);
    i0.ɵɵtext(4, "\n    ");
    i0.ɵɵelementStart(5, "button", 3);
    i0.ɵɵtext(6, "\n    ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(7, "\n\n    ");
    i0.ɵɵelementStart(8, "ul", 4);
    i0.ɵɵtext(9, "\n\n      ");
    i0.ɵɵelementStart(10, "adapt-rx-search", 5);
    i0.ɵɵlistener("ngModelChange", function AdaptNavActionsSwictherComponent_ng_container_0_Template_adapt_rx_search_ngModelChange_10_listener($event) { i0.ɵɵrestoreView(_r25); const ctx_r24 = i0.ɵɵnextContext(); return ctx_r24.onFilteringDebounce($event); });
    i0.ɵɵelementEnd();
    i0.ɵɵtext(11, "\n\n      ");
    i0.ɵɵtext(12, "\n      ");
    i0.ɵɵtemplate(13, AdaptNavActionsSwictherComponent_ng_container_0_ng_container_13_Template, 6, 3, "ng-container", 0);
    i0.ɵɵtext(14, "\n\n      ");
    i0.ɵɵtext(15, "\n      ");
    i0.ɵɵelementContainerStart(16);
    i0.ɵɵtext(17, "\n\n        ");
    i0.ɵɵtemplate(18, AdaptNavActionsSwictherComponent_ng_container_0_li_18_Template, 2, 1, "li", 6);
    i0.ɵɵtext(19, "\n\n        ");
    i0.ɵɵtemplate(20, AdaptNavActionsSwictherComponent_ng_container_0_ng_container_20_Template, 9, 2, "ng-container", 7);
    i0.ɵɵpipe(21, "navFilterSubItems");
    i0.ɵɵtext(22, "\n\n        ");
    i0.ɵɵtemplate(23, AdaptNavActionsSwictherComponent_ng_container_0_li_23_Template, 2, 1, "li", 8);
    i0.ɵɵtext(24, "\n      ");
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtext(25, "\n    ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(26, "\n\n  ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(27, "\n");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("adaptRadarDisableEventSending", true)("mobileView", ctx_r0.appSwitcherMetaData.dropdownConfig)("placement", "bottom-right")("autoClose", "outside");
    i0.ɵɵadvance(3);
    i0.ɵɵclassMapInterpolate1("a-action btn btn-link ", ctx_r0.appSwitcherMetaData.className, " dropdown-toggle action-app-switcher");
    i0.ɵɵattribute("title", ctx_r0.appSwitcherMetaData.name)("aria-label", ctx_r0.appSwitcherMetaData.name)("data-testid", ctx_r0.generateActionItemTestID(ctx_r0.appSwitcherMetaData))("id", "action_application_switcher_");
    i0.ɵɵadvance(3);
    i0.ɵɵclassProp("a-dropdown-menu__mobile", !ctx_r0.isDesktop);
    i0.ɵɵattribute("ariaLabelledby", "action_application_switcher_");
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("size", "sm")("ngModel", ctx_r0.filterValue)("placeholder", ctx_r0.texts.filter.placeholder)("clearButtonText", ctx_r0.texts.filter.btnClearText)("label", ctx_r0.texts.filter.labelText);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", !ctx_r0.filterValue);
    i0.ɵɵadvance(5);
    i0.ɵɵproperty("ngIf", ctx_r0.appSwitcherMetaData.header);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", i0.ɵɵpipeBind2(21, 24, ctx_r0.appSwitcherMetaData.switcher.allItems.items, ctx_r0.filterValue))("ngForTrackBy", ctx_r0.trackSwictherData);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", ctx_r0.filterValue && !ctx_r0.filteredItems.length);
} }
let _testIdIndex = 1;
export class AdaptNavActionsSwictherComponent {
    constructor(el, _adaptRadarService, _deviceDetector) {
        this.el = el;
        this._adaptRadarService = _adaptRadarService;
        this._deviceDetector = _deviceDetector;
        this.filterValue = '';
        this.filteredItems = [];
        this._defaultTexts = {
            switcher: {
                filter: {},
                notFoundText: ''
            }
        };
        this.onFilteringDebounce = debounce(this.onFiltering.bind(this), 100);
        this._destroyed$ = new ReplaySubject(1);
    }
    closeAllDropdowns() {
        if (this.switcherDropdown) {
            this.switcherDropdown.close();
        }
    }
    ngOnInit() {
        this.isDesktop = this._deviceDetector.deviceDesktop();
        this.texts = Object.assign(Object.assign({}, this._defaultTexts.switcher), this.texts);
    }
    ngOnChanges(changes) {
        if (changes.texts) {
            this.texts = Object.assign(Object.assign({}, this._defaultTexts.switcher), this.texts);
        }
    }
    ngAfterViewInit() {
        if (this.switcherDropdown) {
            this.switcherDropdown.onOpen
                .pipe(takeUntil(this._destroyed$))
                .subscribe(() => {
                this.filterValue = '';
            });
        }
    }
    ngOnDestroy() {
        this._destroyed$.next(true);
        this._destroyed$.complete();
    }
    onFiltering(value) {
        this.filterValue = value;
        this.filteredItems =
            // TODO: Refactor this if possible
            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
            this.appSwitcherMetaData.switcher.allItems.items.filter(function (c) {
                return c.name.toLowerCase().indexOf(value.toLowerCase()) !== -1;
            });
    }
    generateActionItemTestID(item) {
        if (!item.testID) {
            item.testID = `navigation-action-test-id-${_testIdIndex++}`;
        }
        return item.testID;
    }
    trackSwictherData(item) {
        return item.name;
    }
}
AdaptNavActionsSwictherComponent.ɵfac = function AdaptNavActionsSwictherComponent_Factory(t) { return new (t || AdaptNavActionsSwictherComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.AdaptRadarAngularService), i0.ɵɵdirectiveInject(i2.AdaptDeviceDetectionService)); };
AdaptNavActionsSwictherComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptNavActionsSwictherComponent, selectors: [["adapt-nav-actions-switcher"]], viewQuery: function AdaptNavActionsSwictherComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.switcherDropdown = _t.first);
    } }, inputs: { switcherDisplay: "switcherDisplay", texts: "texts", appSwitcherMetaData: "appSwitcherMetaData", closeAllDropdowns: "closeAllDropdowns" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 1, consts: [[4, "ngIf"], ["adaptDropdown", "", 1, "dropdown", "switcher-dropdown", 3, "adaptRadarDisableEventSending", "mobileView", "placement", "autoClose"], ["switcherDropdown", "adaptDropdown"], ["type", "button", "adaptDropdownToggle", ""], ["adaptDropdownMenu", "", 1, "a-dropdown-menu", "a-dropdown-menu__light", "dropdown-menu", "dropdown-menu--right", "pt-0"], [3, "size", "ngModel", "placeholder", "clearButtonText", "label", "ngModelChange"], ["class", "dropdown-header", 4, "ngIf"], [4, "ngFor", "ngForOf", "ngForTrackBy"], ["class", "dropdown-header ", 4, "ngIf"], ["class", "a-dropdown__item switcher-dropdown__recent-item", 4, "ngFor", "ngForOf", "ngForTrackBy"], [1, "dropdown-header"], [1, "a-dropdown__item", "switcher-dropdown__recent-item"], [3, "class", 4, "ngIf"], [3, "customClass", "item", "actionType", "emitCloseDropdowns", 4, "ngIf"], ["class", "dropdown-divider", 4, "ngIf"], [3, "customClass", "item", "actionType", "emitCloseDropdowns"], [1, "dropdown-divider"], [1, "a-dropdown__item"], [3, "item", "emitCloseDropdowns", 4, "ngIf"], [3, "item", "emitCloseDropdowns"]], template: function AdaptNavActionsSwictherComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, AdaptNavActionsSwictherComponent_ng_container_0_Template, 28, 27, "ng-container", 0);
        i0.ɵɵtext(1, "\n");
    } if (rf & 2) {
        i0.ɵɵproperty("ngIf", ctx.switcherDisplay);
    } }, directives: [i3.NgIf, i4.AdaptDropdownDirective, i4.AdaptDropdownToggleDirective, i4.AdaptDropdownMenuDirective, i5.AdaptRxSearchComponent, i6.NgControlStatus, i6.NgModel, i3.NgForOf, i7.AdaptNavActionsSubitemComponent], pipes: [i8.AdaptNavTextSearchPipe], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptNavActionsSwictherComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-nav-actions-switcher',
                templateUrl: './nav-actions-switcher.component.html',
                changeDetection: ChangeDetectionStrategy.OnPush,
            }]
    }], function () { return [{ type: i0.ElementRef }, { type: i1.AdaptRadarAngularService }, { type: i2.AdaptDeviceDetectionService }]; }, { switcherDisplay: [{
            type: Input
        }], texts: [{
            type: Input
        }], appSwitcherMetaData: [{
            type: Input
        }], switcherDropdown: [{
            type: ViewChild,
            args: ['switcherDropdown', { static: false }]
        }], closeAllDropdowns: [{
            type: Input
        }] }); })();
//# sourceMappingURL=nav-actions-swicther.component.js.map