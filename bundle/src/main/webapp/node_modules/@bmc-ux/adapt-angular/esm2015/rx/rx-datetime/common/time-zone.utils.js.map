{"version":3,"file":"time-zone.utils.js","sourceRoot":"","sources":["../../../../../../../libs/adapt-angular/src/rx/rx-datetime/common/time-zone.utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAC,MAAM,wBAAwB,CAAC;AAEjD;;;;;;;;GAQG;AACH,MAAM,UAAU,eAAe,CAAC,QAAgB;IAC9C,IAAI;QACF,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,EAAC,QAAQ,EAAC,CAAC,CAAC;QAE/C,OAAO,IAAI,CAAC;KAEb;IAAC,WAAM;QACN,OAAO,KAAK,CAAC;KACd;AACH,CAAC;AAED;;;;;;GAMG;AACH,MAAM,UAAU,aAAa;IAC3B,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC;AAC1D,CAAC;AAED;;;;;;;;;GASG;AACH,MAAM,UAAU,gBAAgB,CAAC,QAAiB;IAChD,IAAI,CAAC,QAAQ,EAAE;QACb,OAAO,aAAa,EAAE,CAAC;KAExB;SAAM,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE;QACrC,SAAS,CAAC,GAAG,QAAQ,6EAA6E,CAAC,CAAC;QAEpG,OAAO,aAAa,EAAE,CAAC;KACxB;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC","sourcesContent":["import {adaptWarn} from '../../../common/logger';\n\n/**\n * isValidTimezone() function\n *\n * Determines whether an input string represents a valid timezone\n *\n * @param {string} timeZone to validate\n *\n * @returns {boolean} true if the input is a valid timezone, false otherwise\n */\nexport function isValidTimeZone(timeZone: string): boolean {\n  try {\n    new Intl.DateTimeFormat(undefined, {timeZone});\n\n    return true;\n\n  } catch {\n    return false;\n  }\n}\n\n/**\n * guessTimeZone() function\n *\n * Uses Intl to guess the client timezone\n *\n * @returns {string} the timezone of the client machine\n */\nexport function guessTimeZone(): string {\n  return Intl.DateTimeFormat().resolvedOptions().timeZone;\n}\n\n/**\n * getValidTimeZone() function\n *\n * Returns a valid time zone given an input time zone string. The input string is returned if it is valid; otherwise\n * the client time zone is returned.\n *\n * @param {string} timeZone to validate\n *\n * @returns {string} a valid time zone string\n */\nexport function getValidTimeZone(timeZone?: string): string {\n  if (!timeZone) {\n    return guessTimeZone();\n\n  } else if (!isValidTimeZone(timeZone)) {\n    adaptWarn(`${timeZone} is not a recognized IANA time zone names; falling back to client time zone`);\n\n    return guessTimeZone();\n  }\n\n  return timeZone;\n}\n"]}