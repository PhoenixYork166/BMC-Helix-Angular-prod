import { ChangeDetectionStrategy, Component, HostBinding, Input, ViewEncapsulation } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
function AdaptWorkflowDotComponent_span_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r0.label);
} }
const _c0 = ["*"];
export class AdaptWorkflowDotComponent {
    constructor() {
        // eslint-disable-next-line @angular-eslint/no-input-rename
        this.active = false;
        this.completed = false;
    }
    get label() {
        return this._label;
    }
    set label(v) {
        this._label = v;
    }
    get hostClasses() {
        return [
            'a-workflow__dot',
            this.active ? 'is-active shadow-1' : '',
            this.label ? 'is-floating' : '',
            this.completed ? 'is-completed' : '',
            this.mainCls
        ].join(' ');
    }
}
AdaptWorkflowDotComponent.ɵfac = function AdaptWorkflowDotComponent_Factory(t) { return new (t || AdaptWorkflowDotComponent)(); };
AdaptWorkflowDotComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptWorkflowDotComponent, selectors: [["adapt-workflow-dot"], ["button", "adapt-workflow-dot", ""]], hostVars: 2, hostBindings: function AdaptWorkflowDotComponent_HostBindings(rf, ctx) { if (rf & 2) {
        i0.ɵɵclassMap(ctx.hostClasses);
    } }, inputs: { mainCls: "mainCls", active: ["active-dot", "active"], completed: "completed", label: "label" }, ngContentSelectors: _c0, decls: 5, vars: 1, consts: [[4, "ngIf"]], template: function AdaptWorkflowDotComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵprojectionDef();
        i0.ɵɵtext(0, "\n      ");
        i0.ɵɵtemplate(1, AdaptWorkflowDotComponent_span_1_Template, 2, 1, "span", 0);
        i0.ɵɵtext(2, "\n      ");
        i0.ɵɵprojection(3);
        i0.ɵɵtext(4, "\n  ");
    } if (rf & 2) {
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.label);
    } }, directives: [i1.NgIf], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptWorkflowDotComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-workflow-dot, button[adapt-workflow-dot]',
                template: `
      <span *ngIf="label">{{label}}</span>
      <ng-content></ng-content>
  `,
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], null, { mainCls: [{
            type: Input
        }], active: [{
            type: Input,
            args: ['active-dot']
        }], completed: [{
            type: Input
        }], label: [{
            type: Input
        }], hostClasses: [{
            type: HostBinding,
            args: ['class']
        }] }); })();
//# sourceMappingURL=workflow-dot.js.map