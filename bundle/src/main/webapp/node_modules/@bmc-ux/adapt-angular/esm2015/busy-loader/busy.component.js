import { Component, ComponentFactoryResolver, ElementRef, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';
import { AdaptBusyTplComponent } from './busy-tpl.component';
import { AdaptBusyHostDirective } from './busy-ad-host.directive';
import { AdaptRadarAngularCustomEventName, AdaptRadarAngularGenericDirective, AdaptRadarAngularService } from '../common/radar/adapt-radar';
import * as i0 from "@angular/core";
import * as i1 from "../common/radar/adapt-radar";
import * as i2 from "./busy-ad-host.directive";
const _c0 = ["container"];
function AdaptBusyComponent_ng_template_0_Template(rf, ctx) { }
export class AdaptBusyComponent extends AdaptRadarAngularGenericDirective {
    constructor(viewContainerRef, componentFactoryResolver, _adaptRadarService, _elem) {
        super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptBusy);
        this.viewContainerRef = viewContainerRef;
        this.componentFactoryResolver = componentFactoryResolver;
    }
    get message() {
        return this._message;
    }
    set message(message) {
        this._message = message;
        if (this.componentRef && this.componentRef.instance) {
            this.componentRef.instance.message = message;
        }
    }
    get sticky() {
        return this._sticky;
    }
    set sticky(sticky) {
        this._sticky = sticky;
        if (this.componentRef && this.componentRef.instance) {
            this.componentRef.instance.sticky = sticky;
        }
    }
    get wrapperClass() {
        return this._wrapperClass;
    }
    set wrapperClass(wrapperClass) {
        this._wrapperClass = wrapperClass;
        if (this.componentRef && this.componentRef.instance) {
            this.componentRef.instance.wrapperClass = wrapperClass;
        }
    }
    get inOutType() {
        return this._inOutType;
    }
    set inOutType(inOutType) {
        this._inOutType = inOutType;
        if (this.componentRef && this.componentRef.instance) {
            this.componentRef.instance.inOutType = inOutType;
        }
    }
    get offsetTop() {
        return this._offsetTop;
    }
    set offsetTop(offsetTop) {
        this._offsetTop = offsetTop;
        if (this.componentRef && this.componentRef.instance) {
            this.componentRef.instance.offsetTop = offsetTop;
        }
    }
    get type() {
        return this._type;
    }
    set type(type) {
        this._type = type;
        if (this.componentRef && this.componentRef.instance) {
            this.componentRef.instance.type = type;
        }
    }
    get value() {
        return this._percentageValue;
    }
    set value(value) {
        this._percentageValue = value;
        if (this.componentRef && this.componentRef.instance) {
            this.componentRef.instance.value = value;
        }
    }
    get determinate() {
        return this._determinate;
    }
    set determinate(value) {
        this._determinate = value;
        if (this.componentRef && this.componentRef.instance) {
            this.componentRef.instance.determinate = value;
        }
    }
    get loaderClass() {
        return this._loaderClass;
    }
    set loaderClass(value) {
        this._loaderClass = value;
        if (this.componentRef && this.componentRef.instance) {
            this.componentRef.instance.loaderClass = value;
        }
    }
    get loaderImg() {
        return this._loaderImg;
    }
    set loaderImg(value) {
        this._loaderImg = value;
        if (this.componentRef && this.componentRef.instance) {
            this.componentRef.instance.loaderImg = value;
        }
    }
    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
    get content() {
        return this._content;
    }
    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
    set content(value) {
        this._content = value;
        if (this.componentRef && this.componentRef.instance) {
            this.componentRef.instance.content = value;
        }
    }
    ngOnInit() {
        this.createDynamicTemplate();
    }
    ngOnDestroy() {
        if (this.componentRef) {
            this.componentRef.destroy();
        }
    }
    createDynamicTemplate() {
        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(AdaptBusyTplComponent);
        this.viewContainerRef.clear();
        this.componentRef = this.adHost.viewContainerRef.createComponent(componentFactory, 0, null);
        this.componentRef.instance.message = this.message;
        this.componentRef.instance.wrapperClass = this.wrapperClass;
        this.componentRef.instance.sticky = this.sticky;
        this.componentRef.instance.offsetTop = this.offsetTop;
        this.componentRef.instance.determinate = this.determinate;
        this.componentRef.instance.value = this.value;
        this.componentRef.instance.loaderClass = this.loaderClass;
        this.componentRef.instance.loaderImg = this.loaderImg;
        this.componentRef.instance.content = this.content;
        if (this.inOutType) {
            this.componentRef.instance.inOutType = this.inOutType;
        }
        if (this.type) {
            this.componentRef.instance.type = this.type;
        }
    }
}
AdaptBusyComponent.ɵfac = function AdaptBusyComponent_Factory(t) { return new (t || AdaptBusyComponent)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i1.AdaptRadarAngularService), i0.ɵɵdirectiveInject(i0.ElementRef)); };
AdaptBusyComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AdaptBusyComponent, selectors: [["adapt-busy"], ["ng-busy"]], viewQuery: function AdaptBusyComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 5);
        i0.ɵɵviewQuery(AdaptBusyHostDirective, 7);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.adHost = _t.first);
    } }, features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [["ng-busy-host", ""]], template: function AdaptBusyComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, AdaptBusyComponent_ng_template_0_Template, 0, 0, "ng-template", 0);
    } }, directives: [i2.AdaptBusyHostDirective], styles: ["\n      .ng-busy-lineLoader .ng-busy-default-wrapper {\n        align-items: stretch;\n      }\n\n      .ng-busy-lineLoader .ng-busy-default-wrapper .loader-container {\n        width: 100%;\n        padding: 0;\n      }\n    "], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptBusyComponent, [{
        type: Component,
        args: [{
                selector: 'adapt-busy, ng-busy',
                encapsulation: ViewEncapsulation.None,
                template: '<ng-template ng-busy-host></ng-template>',
                styles: [
                    `
      .ng-busy-lineLoader .ng-busy-default-wrapper {
        align-items: stretch;
      }

      .ng-busy-lineLoader .ng-busy-default-wrapper .loader-container {
        width: 100%;
        padding: 0;
      }
    `
                ]
            }]
    }], function () { return [{ type: i0.ViewContainerRef }, { type: i0.ComponentFactoryResolver }, { type: i1.AdaptRadarAngularService }, { type: i0.ElementRef }]; }, { container: [{
            type: ViewChild,
            args: ['container', { static: false }]
        }], adHost: [{
            type: ViewChild,
            args: [AdaptBusyHostDirective, { static: true }]
        }] }); })();
//# sourceMappingURL=busy.component.js.map