{"version":3,"file":"tree-node.component.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/tree/tree-node.component.ts","../../../../../libs/adapt-angular/src/tree/tree-node.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {DOWN_ARROW, ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE, TAB, UP_ARROW} from '@angular/cdk/keycodes';\nimport {animate, style, transition, trigger} from '@angular/animations';\nimport {isEqual} from 'lodash-es';\nimport {UITreeNode} from 'primeng/tree';\nimport {TreeNode} from 'primeng/api';\n\nimport {ANIMATION_DURATION, ANIMATION_TIMING_FUNCTION} from '../common/animation';\nimport {getEventKeyCode} from '../common/key-codes';\n\nimport {AdaptTreeComponent} from './tree.component';\nimport {AdaptTreeNode} from './tree.model';\n\n@Component({\n  selector: 'adapt-tree-node',\n  templateUrl: './tree-node.component.html',\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('treeLineAnimated', [\n      transition('void => *', [\n        style({marginRight: 0}),\n        animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionIn,\n          style({marginRight: '*'})\n        )\n      ]),\n      transition('* => void', [\n        style({marginRight: '*', width: '2px'}),\n        animate(ANIMATION_DURATION.fast + ' ' + ANIMATION_TIMING_FUNCTION.base.transitionInOut,\n          style({\n            marginRight: 0,\n            width: 0\n          })\n        )\n      ])\n    ])\n  ]\n})\nexport class AdaptTreeNodeComponent extends UITreeNode {\n  @Input() node: TreeNode | AdaptTreeNode;\n  @Input() parentNode: TreeNode | AdaptTreeNode;\n  @Input() filter: boolean;\n  @Input() query: string;\n  @Input() firstChild: boolean;\n  @Input() lastChild: boolean;\n  @Input() index: number;\n  @Input() testID: string;\n\n  @ViewChild('treeNodeFocusEl') treeNodeFocusEl: ElementRef<HTMLElement>;\n\n  treeNodeFocusElClass: string = 'a-tree__focused';\n  dragOverDisabledNode: boolean = false;\n  dragStartedNode: boolean;\n  dragOverPrevDisabled: boolean;\n  dragOverNextDisabled: boolean;\n\n  constructor(@Inject(forwardRef(() => AdaptTreeComponent)) public tree: AdaptTreeComponent, private _renderer: Renderer2) {\n    super(tree);\n  }\n\n\n  onTreeNodeKeydown(event: KeyboardEvent): void {\n    const eventKeyCode = getEventKeyCode(event);\n\n    // If event came not from the current node, we have textfield in the custom template\n    // in this case need to stop process keys except TAB\n    if (event.target !== this.treeNodeFocusEl.nativeElement) {\n      if (eventKeyCode === TAB) {\n        if (event.shiftKey) {\n          // Return back focus to the node on TAB + shiftKey\n          event.preventDefault();\n          event.stopPropagation();\n          this.tree.focusNode = this.treeNodeFocusEl.nativeElement;\n          this.treeNodeFocusEl.nativeElement.focus();\n        } else {\n          const nextToFocus = this._getNextTreeNodeFocusElement();\n\n          // Go to next node on TAB\n          if (nextToFocus) {\n            event.preventDefault();\n            event.stopPropagation();\n            nextToFocus.focus();\n          }\n\n          // If no nextToFocus node, the focus will go via standard browser flow\n        }\n      }\n\n      return;\n    }\n\n    const openGroupKey = this.tree.isRtl ? LEFT_ARROW : RIGHT_ARROW;\n    const closeGroupKey = this.tree.isRtl ? RIGHT_ARROW : LEFT_ARROW;\n\n    switch (eventKeyCode) {\n      case openGroupKey: {\n        if (!this.node.expanded) {\n          event.preventDefault();\n          this.expand(event);\n        }\n\n        break;\n      }\n      case closeGroupKey: {\n        if (this.node.expanded) {\n          event.preventDefault();\n          this.collapse(event);\n        } else {\n          if (this.parentNode) {\n            event.preventDefault();\n\n            this.tree.treeNodeComponents\n              .find(nodeComponent => isEqual((nodeComponent as AdaptTreeNodeComponent).node, this.parentNode))\n              .setFocus();\n          }\n        }\n\n        break;\n      }\n      case DOWN_ARROW: {\n        const nextToFocus = this._getNextTreeNodeFocusElement();\n\n        if (nextToFocus) {\n          event.preventDefault();\n          nextToFocus.focus();\n        }\n\n        break;\n      }\n      case UP_ARROW: {\n        const nextToFocus = this._getNextTreeNodeFocusElement(true);\n\n        if (nextToFocus) {\n          event.preventDefault();\n          nextToFocus.focus();\n        }\n\n        break;\n      }\n      case ENTER: {\n        event.preventDefault();\n        this.toggle(event);\n\n        break;\n      }\n      case SPACE: {\n        event.preventDefault();\n\n        if (this.tree.isSingleSelectionMode() || this.tree.isCheckboxSelectionMode() || this.tree.isMultipleSelectionMode()) {\n          this.onNodeClick(event);\n        } else {\n          this.toggle(event);\n        }\n\n        break;\n      }\n      case TAB: {\n        setTimeout(() => {\n          // Need to erase `focusNode` after the document.activeElement changed\n          this.tree.focusNode = null;\n        });\n\n        break;\n      }\n    }\n  }\n\n  onTreeNodeFocus(event: FocusEvent): void {\n    this.tree.focusNode = event.target as Element;\n  }\n\n  onTreeNodeFocusout(event: FocusEvent): void {\n    const nextTreeNodeFocusElement = this._getTreeNodeFocusElements().find(el => el === event.relatedTarget);\n\n    if (!nextTreeNodeFocusElement) {\n      this.tree.focusNode = null;\n    }\n  }\n\n  onNodeClick(event: MouseEvent | KeyboardEvent): void {\n    if (this.tree.selectionMode && this.query && this.node.children?.length) {\n      return;\n    }\n\n    if (this.node.selectable === false) {\n      event.preventDefault();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore TODO fix types\n    if (this.tree.selectionMode === 'checkbox' && this.node.disallowMultipleNodeSelection) {\n      this.toggle(event);\n\n      return;\n    }\n\n    if (this.tree.isSingleSelectionMode() && this.isSelected()) {\n      return;\n    }\n\n    this.tree.onNodeClick(event, this.node);\n  }\n\n  setFocus(): void {\n    this.treeNodeFocusEl.nativeElement.focus();\n  }\n\n  onDropPoint(event: Event, position: number): void {\n    if (this.level === 0) {\n      if (this.tree.dragNode && this.tree.dragNode.parent) {\n        this.tree.dragNode.parent = undefined;\n      }\n    } else {\n      if (this.tree.dragNode && this.node && this.node.parent) {\n        this.tree.dragNode.parent = this.node.parent;\n      }\n    }\n\n    super.onDropPoint(event, position);\n  }\n\n  onDropPointDragOver(event: DragEvent): void {\n    super.onDropPointDragOver(event);\n  }\n\n  onDropPointDragEnter(event: Event, position: number): void {\n    if (this.tree.allowDrop(this.tree.dragNode, this.node, this.tree.dragNodeScope)) {\n      if (position < 0) {\n        if (this.parentNode?.droppable === false && this.parentNode?.droppable !== undefined) {\n          this.dragOverPrevDisabled = true;\n        } else {\n          this.draghoverPrev = true;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore TODO fix types\n        if (this.level > 1 && this.tree.dragNode?.isGroup) {\n          this.dragOverPrevDisabled = true;\n        } else {\n          this.draghoverPrev = true;\n        }\n      } else {\n        if (this.parentNode?.droppable === false && this.parentNode?.droppable !== undefined) {\n          this.dragOverNextDisabled = true;\n        } else {\n          this.draghoverNext = true;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore TODO fix types\n        if (this.level > 1 && this.tree.dragNode?.isGroup) {\n          this.dragOverNextDisabled = true;\n        } else {\n          this.draghoverNext = true;\n        }\n      }\n    }\n  }\n\n  onDropPointDragLeave(): void {\n    this.draghoverPrev = false;\n    this.draghoverNext = false;\n    this.dragOverPrevDisabled = false;\n    this.dragOverNextDisabled = false;\n  }\n\n  onDragStart(event: DragEvent): void {\n    super.onDragStart(event);\n    this.dragStartedNode = true;\n  }\n\n  onDragStop(event: DragEvent): void {\n    super.onDragStop(event);\n    this.dragStartedNode = false;\n  }\n\n  onDropNodeDragOver(event: DragEvent): void {\n    super.onDropNodeDragOver(event);\n  }\n\n  onDropNode(event: DragEvent): void {\n    super.onDropNode(event);\n    this.tree.updateIcons(this.node);\n    this.dragOverDisabledNode = false;\n    const draggedItem = this.tree.el.nativeElement.getElementsByClassName('ui-treenode-dragStart')[0];\n\n    this._renderer.setStyle(draggedItem, 'cursor', 'pointer');\n  }\n\n  createDropNodeEventMetadata(): {\n    dragNode: TreeNode | AdaptTreeNode;\n    dragNodeIndex: number;\n    dragNodeSubNodes: TreeNode[] | AdaptTreeNode[];\n    dropNode: TreeNode | AdaptTreeNode;\n  } {\n    return super.createDropNodeEventMetadata();\n  }\n\n  processNodeDrop(event: {\n    dragNode: TreeNode | AdaptTreeNode;\n    dragNodeIndex: number;\n    dragNodeSubNodes: TreeNode[] | AdaptTreeNode[];\n    dropNode: TreeNode | AdaptTreeNode;\n  }): void {\n    super.processNodeDrop(event);\n  }\n\n  onDropNodeDragEnter(): void {\n    const allowDrop = this.tree.allowDrop(this.tree.dragNode, this.node, this.tree.dragNodeScope);\n\n    //check if drag and drop is allowed for parent node ie (level 2)\n    if (this.tree.droppableNodes &&\n      allowDrop &&\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore TODO fix types\n      (this.node.isGroup && this.tree.dragNode.isGroup && this.level > 0) ||\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore TODO fix types\n      (this.node.isGroup && this.tree.dragNode.isGroup &&\n        this.node?.parent?.label === this.tree.dragNode.label)) {\n      this.node.droppable = false;\n      this.dragOverDisabledNode = true;\n\n      const draggedItem = this.tree.el.nativeElement.getElementsByClassName('ui-treenode-dragStart')[0];\n\n      this._renderer.setStyle(draggedItem, 'cursor', 'no-drop');\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore TODO fix types\n    } else if (this.node.isGroup && (this.node.parent?.parent === undefined)) {\n      this.node.droppable = true;\n      this.dragOverDisabledNode = false;\n\n      this.draghoverNode = true;\n      const draggedItem = this.tree.el.nativeElement.getElementsByClassName('ui-treenode-dragStart')[0];\n\n      this._renderer.setStyle(draggedItem, 'cursor', 'grabbing');\n    }\n\n    //check if drag and drop is allowed for all the nodes\n    if (this.tree.droppableNodes &&\n      this.node.droppable !== false &&\n      allowDrop) {\n      this.draghoverNode = true;\n      const draggedItem = this.tree.el.nativeElement.getElementsByClassName('ui-treenode-dragStart')[0];\n\n      this._renderer.setStyle(draggedItem, 'cursor', 'grabbing');\n    } else if (this.tree.droppableNodes &&\n      this.node.droppable !== undefined &&\n      this.node.droppable === false &&\n      allowDrop) {\n      this.dragOverDisabledNode = true;\n\n      const draggedItem = this.tree.el.nativeElement.getElementsByClassName('ui-treenode-dragStart')[0];\n\n      this._renderer.setStyle(draggedItem, 'cursor', 'no-drop');\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore TODO fix types\n    // if (this.node.isGroup && this.tree.dragNode.isGroup && this.tree.dragNode?.children) {\n    //   this.tree.dragNode?.children.forEach((node) => {\n    //     // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    //     // @ts-ignore TODO fix types\n    //     if (node.isGroup) {\n    //       this.node.droppable = false;\n    //       this.draghoverNode = false;\n    //       this.dragOverDisabledNode = true;\n\n    //       const draggedItem = this.tree.el.nativeElement.getElementsByClassName('ui-treenode-dragStart')[0];\n\n    //       this._renderer.setStyle(draggedItem, 'cursor', 'no-drop');\n    //     }\n    //   });\n    //}\n  }\n\n  // eslint-disable-next-line @typescript-eslint/typedef\n  onDropNodeDragLeave(event): void {\n    if (this.tree.droppableNodes) {\n      const rect = event.currentTarget.getBoundingClientRect();\n\n      if (event.x > rect.left + rect.width || event.x < rect.left || event.y >= Math.floor(rect.top + rect.height) || event.y < rect.top) {\n        this.draghoverNode = false;\n      }\n\n      if (!this.node.droppable &&\n        this.tree.allowDrop(this.tree.dragNode, this.node, this.tree.dragNodeScope) &&\n        (event.x > rect.left + rect.width || event.x < rect.left || event.y >= Math.floor(rect.top + rect.height) || event.y < rect.top)) {\n        this.dragOverDisabledNode = false;\n        const draggedItem = this.tree.el.nativeElement.getElementsByClassName('ui-treenode-dragStart')[0];\n\n        this._renderer.setStyle(draggedItem, 'cursor', 'pointer');\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore TODO fix types\n      if (this.node.isGroup && this.tree.dragNode.isGroup &&\n        this.node?.parent?.label === this.tree.dragNode.label) {\n        this.dragOverDisabledNode = false;\n        const draggedOverItem = this.tree.el.nativeElement.getElementsByClassName('ui-treenode-dragStart')[0];\n\n        this._renderer.setStyle(draggedOverItem, 'cursor', 'pointer');\n      }\n    }\n  }\n\n  private _getTreeNodeFocusElements(): HTMLElement[] {\n    return Array.prototype.slice.call(this.tree.el.nativeElement?.querySelectorAll(`adapt-tree-node .${this.treeNodeFocusElClass}`));\n  }\n\n  private _getNextTreeNodeFocusElement(nodeAbove: boolean = false): HTMLElement {\n    const treeNodeComponentsArray = this._getTreeNodeFocusElements();\n\n    return treeNodeComponentsArray[treeNodeComponentsArray.indexOf(this.treeNodeFocusEl.nativeElement) + (nodeAbove ? -1 : 1)];\n  }\n}\n","<ng-template [ngIf]=\"node\">\n  <li role=\"none\"\n      *ngIf=\"tree.droppableNodes && !dragOverPrevDisabled\" class=\"ui-treenode-droppoint\"\n      [ngClass]=\"{'ui-treenode-droppoint-active ui-state-highlight':draghoverPrev}\"\n      (drop)=\"onDropPoint($event,-1)\"\n      (dragover)=\"onDropPointDragOver($event)\"\n      (dragenter)=\"onDropPointDragEnter($event,-1)\"\n      (dragleave)=\"onDropPointDragLeave()\">\n  </li>\n\n  <li class=\"a-tree__node {{node.styleClass}}\"\n      role=\"none\"\n      *ngIf=\"!tree.horizontal\"\n      [ngClass]=\"{'a-tree__node_leaf': isLeaf()}\">\n\n    <div class=\"a-tree__content\"\n         *ngIf=\"tree.selectionMode !== 'checkbox'\"\n         (contextmenu)=\"onNodeRightClick($event)\"\n         (touchend)=\"onNodeTouchEnd()\"\n         (drop)=\"onDropNode($event)\"\n         (dragover)=\"onDropNodeDragOver($event)\"\n         (dragenter)=\"onDropNodeDragEnter()\"\n         (dragleave)=\"onDropNodeDragLeave($event)\"\n         [ngClass]=\"{'is-selectable': tree.selectionMode && node.selectable !== false,\n                     'ui-treenode-dragover': draghoverNode, 'ui-treenode-dragover-disable': dragOverDisabledNode, 'ui-treenode-dragStart': dragStartedNode}\"\n         [draggable]=\"tree.draggableNodes\"\n         (dragstart)=\"onDragStart($event)\"\n         (dragend)=\"onDragStop($event)\">\n\n      <span class=\"a-tree__toggle\" role=\"img\" aria-hidden=\"true\"\n            [ngClass]=\"{'is-flip': node.expanded}\"\n            (click)=\"toggle($event)\"\n            [attr.data-testid]=\"testID + '_toggle'\" *ngIf=\"node.children?.length\"></span>\n      <span class=\"a-tree__line\" *ngIf=\"isSelected()\" [@treeLineAnimated]></span>\n\n      <div #treeNodeFocusEl\n           role=\"treeitem\"\n           class=\"d-flex flex-row flex-nowrap\"\n           [tabIndex]=\"level === 0 && firstChild && !tree.focusNode ? 0 : -1\"\n           [ngClass]=\"treeNodeFocusElClass\"\n           [attr.aria-label]=\"node.label\"\n           [attr.aria-expanded]=\"node.children && node.expanded && !isLeaf()\"\n           [attr.aria-level]=\"level\"\n           [attr.aria-setsize]=\"node.parent ? node.parent.children.length : null\"\n           [attr.aria-posinset]=\"index + 1\"\n           [attr.aria-checked]=\"tree.selectionMode ? (node.partialSelected ? 'mixed' : isSelected()) : undefined\"\n           (keydown)=\"onTreeNodeKeydown($event)\"\n           (focus)=\"onTreeNodeFocus($event)\"\n           (focusout)=\"onTreeNodeFocusout($event)\">\n        <span (click)=\"onNodeClick($event)\"\n              [ngClass]=\"{'a-tree__node-icon': node.icon || node.expandedIcon || node.collapsedIcon}\"\n              [class]=\"getIcon()\"\n              *ngIf=\"node.icon || node.expandedIcon || node.collapsedIcon\"></span>\n\n        <span class=\"a-tree__label\" [ngClass]=\"{'is-active': isSelected(), 'is-flip': node.expanded && !isLeaf()}\"\n              (click)=\"onNodeClick($event)\">\n          <span *ngIf=\"!tree.getTemplateForNode(node)\">\n            <ng-container *ngIf=\"!filter\">{{node.label}}</ng-container>\n            <adapt-highlight *ngIf=\"filter\"\n                             [result]=\"node.label\"\n                             [term]=\"query\">\n            </adapt-highlight>\n          </span>\n          <span *ngIf=\"tree.getTemplateForNode(node)\">\n            <ng-container *ngTemplateOutlet=\"tree.getTemplateForNode(node); context: {$implicit: node}\"></ng-container>\n          </span>\n        </span>\n      </div>\n    </div>\n\n    <div class=\"a-tree__content\"\n         *ngIf=\"tree.selectionMode === 'checkbox'\"\n         (contextmenu)=\"onNodeRightClick($event)\"\n         (touchend)=\"onNodeTouchEnd()\"\n         (drop)=\"onDropNode($event)\"\n         (dragover)=\"onDropNodeDragOver($event)\"\n         (dragenter)=\"onDropNodeDragEnter()\"\n         (dragleave)=\"onDropNodeDragLeave($event)\"\n         [ngClass]=\"{'ui-treenode-selectable':tree.selectionMode && node.selectable !== false,\n                     'ui-treenode-dragover':draghoverNode, 'ui-treenode-dragover-disable': dragOverDisabledNode, 'ui-treenode-dragStart': dragStartedNode}\"\n         [draggable]=\"tree.draggableNodes\"\n         (dragstart)=\"onDragStart($event)\"\n         (dragend)=\"onDragStop($event)\">\n\n      <!--TODO: -->\n      <!-- - add keyboard event listeners-->\n      <!-- - add touch events -->\n      <!-- - consider moving entire tree__label inside checkbox label-->\n      <!-- - consider using checkbox -->\n\n\n      <span class=\"a-tree__toggle\"\n            role=\"img\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{'is-flip': node.expanded}\"\n            (click)=\"toggle($event)\"\n            [attr.data-testid]=\"testID + '_toggle'\"\n            *ngIf=\"!query\"></span>\n\n      <div #treeNodeFocusEl\n           role=\"treeitem\"\n           [tabIndex]=\"level === 0 && firstChild && !tree.focusNode ? 0 : -1\"\n           [ngClass]=\"treeNodeFocusElClass\"\n           [attr.aria-label]=\"node.label\"\n           [attr.aria-expanded]=\"node.children && node.expanded && !isLeaf()\"\n           [attr.aria-level]=\"level\"\n           [attr.aria-setsize]=\"node.parent ? node.parent.children.length : null\"\n           [attr.aria-posinset]=\"index + 1\"\n           [attr.aria-checked]=\"tree.selectionMode ? (node.partialSelected ? 'mixed' : isSelected()) : undefined\"\n           (keydown)=\"onTreeNodeKeydown($event)\"\n           (focus)=\"onTreeNodeFocus($event)\"\n           (focusout)=\"onTreeNodeFocusout($event)\">\n        <div class=\"checkbox\" *ngIf=\"!(query && node.children?.length)\">\n          <label class=\"checkbox__label\">\n            <input class=\"checkbox__input\" type=\"checkbox\"\n                   [checked]=\"isSelected()\"\n                   [indeterminate]=\"node.partialSelected\"\n                   (click)=\"onNodeClick($event)\"\n                   tabindex=\"-1\"\n                   [disabled]=\"node['disallowMultipleNodeSelection']\"\n                   [attr.data-testid]=\"testID + '_checkbox'\">\n            <div class=\"checkbox__item\">\n              <span class=\"icon-indeterminate\"></span>\n              <span class=\"sr-only\">{{node.label}}</span>\n            </div>\n          </label>\n        </div>\n\n        <span (click)=\"onNodeClick($event)\"\n              [ngClass]=\"{'a-tree__node-icon': node.icon || node.expandedIcon || node.collapsedIcon}\"\n              [class]=\"getIcon()\" *ngIf=\"node.icon || node.expandedIcon || node.collapsedIcon\"></span>\n\n        <span class=\"a-tree__label\" (click)=\"onNodeClick($event)\">\n          <span *ngIf=\"!tree.getTemplateForNode(node)\">\n            <ng-container *ngIf=\"!filter\">{{node.label}}</ng-container>\n            <adapt-highlight *ngIf=\"filter\"\n                             [result]=\"node.label\"\n                             [term]=\"query\">\n            </adapt-highlight>\n          </span>\n          <span *ngIf=\"tree.getTemplateForNode(node)\">\n            <ng-container *ngTemplateOutlet=\"tree.getTemplateForNode(node); context: {$implicit: node}\"></ng-container>\n          </span>\n        </span>\n\n      </div>\n\n    </div>\n\n    <div class=\"pt-1 pb-2 p-start-4\" *ngIf=\"!node.children && node.expanded && !isLeaf()\">\n      <div class=\"loader-container pt-0 pb-0 m-start-4\">\n        <div class=\"loader-section\"></div>\n      </div>\n    </div>\n  </li>\n\n  <li *ngIf=\"tree.droppableNodes && lastChild && !dragOverNextDisabled\"\n      role=\"none\"\n      tabindex=\"-1\"\n      class=\"ui-treenode-droppoint\"\n      [ngClass]=\"{'ui-treenode-droppoint-active ui-state-highlight':draghoverNext}\"\n      (drop)=\"onDropPoint($event,1)\"\n      (dragover)=\"onDropPointDragOver($event)\"\n      (dragenter)=\"onDropPointDragEnter($event,1)\"\n      (dragleave)=\"onDropPointDragLeave()\">\n  </li>\n</ng-template>\n"]}