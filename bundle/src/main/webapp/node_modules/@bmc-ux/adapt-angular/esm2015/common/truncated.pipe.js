import { CommonModule } from '@angular/common';
import { Injectable, Pipe, NgModule } from '@angular/core';
import { isNumber } from './utilities';
import * as i0 from "@angular/core";
export class AdaptTruncatePipe {
    transform(value, limit, trail) {
        return this.truncate(value, limit, trail).value;
    }
    truncate(value, limit, trail) {
        value = value || '';
        trail = trail || '...';
        if (limit) {
            if (isNumber(limit)) {
                if (value.length > limit) {
                    return {
                        value: value.substring(0, limit) + trail,
                        truncated: true
                    };
                }
            }
            else {
                const { preffixLength, suffixLength } = limit;
                if (value.length > preffixLength + suffixLength) {
                    return {
                        value: value.substring(0, preffixLength) + trail + value.substr(-suffixLength),
                        truncated: true
                    };
                }
            }
        }
        return {
            value,
            truncated: false
        };
    }
}
AdaptTruncatePipe.ɵfac = function AdaptTruncatePipe_Factory(t) { return new (t || AdaptTruncatePipe)(); };
AdaptTruncatePipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: "truncate", type: AdaptTruncatePipe, pure: true });
AdaptTruncatePipe.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AdaptTruncatePipe, factory: AdaptTruncatePipe.ɵfac });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptTruncatePipe, [{
        type: Pipe,
        args: [{
                name: 'truncate',
                pure: true
            }]
    }, {
        type: Injectable
    }], null, null); })();
export class AdaptTruncatePipeModule {
}
AdaptTruncatePipeModule.ɵfac = function AdaptTruncatePipeModule_Factory(t) { return new (t || AdaptTruncatePipeModule)(); };
AdaptTruncatePipeModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: AdaptTruncatePipeModule });
AdaptTruncatePipeModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptTruncatePipeModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                declarations: [AdaptTruncatePipe],
                exports: [AdaptTruncatePipe]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(AdaptTruncatePipeModule, { declarations: [AdaptTruncatePipe], imports: [CommonModule], exports: [AdaptTruncatePipe] }); })();
//# sourceMappingURL=truncated.pipe.js.map