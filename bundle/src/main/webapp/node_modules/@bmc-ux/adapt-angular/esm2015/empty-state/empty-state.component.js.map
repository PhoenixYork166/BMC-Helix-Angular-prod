{"version":3,"file":"empty-state.component.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/empty-state/empty-state.component.ts","../../../../../libs/adapt-angular/src/empty-state/empty-state.component.html"],"names":[],"mappings":"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","sourcesContent":["import {AfterContentInit, Component, ElementRef, Input, OnDestroy, ViewChild, ChangeDetectorRef} from '@angular/core';\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\n\nimport {ResizeService} from '../common/resize/resize.service';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularGenericDirective,\n  AdaptRadarAngularService\n} from '../common/radar/adapt-radar';\n\nimport {AdaptEmptyStateType, EmptyStateSizes} from './empty-state.types';\nimport EMPTY_STATE_SVG_TYPES from './empty-state-svgs';\n\n\n@Component({\n  selector: 'adapt-empty-state',\n  templateUrl: './empty-state.component.html'\n})\nexport class AdaptEmptyStateComponent extends AdaptRadarAngularGenericDirective implements AfterContentInit, OnDestroy {\n  private _currentSize: number;\n  selectedEmptyStates: EmptyStateSizes;\n\n  emptyStateSvg: SafeHtml;\n\n  /**\n   * Empty state label\n   * @docs-default\n   */\n  @Input() label: string = '';\n\n  /**\n   * Empty state icon to be used.\n   * Note: string type added for backport compatibility\n   * @docs-default\n   */\n  @Input() set type(emptyStateType: AdaptEmptyStateType) {\n    this.selectedEmptyStates = EMPTY_STATE_SVG_TYPES[emptyStateType] ? EMPTY_STATE_SVG_TYPES[emptyStateType] : this._defaultType;\n    this.emptyStateSvg = this._getEmptyStateHtml(this.selectedEmptyStates);\n  }\n\n  /**\n   * Toggle inverted mode\n   * @docs-default false\n   */\n  @Input() inverted: boolean = false;\n\n  @ViewChild('emptyStateContainer', {static: true}) emptyStateContainer: ElementRef;\n\n  private _defaultType: EmptyStateSizes = EMPTY_STATE_SVG_TYPES['config'];\n\n  constructor(private _domSanitizer: DomSanitizer,\n              private _resizeService: ResizeService,\n              private _changeDetectorRef: ChangeDetectorRef,\n              _adaptRadarService: AdaptRadarAngularService,\n              _elem: ElementRef<HTMLElement>) {\n    super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptEmptyState);\n  }\n\n  ngAfterContentInit(): void {\n    this._resizeService.addResizeEventListener(this.emptyStateContainer.nativeElement, this._checkSize.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this._resizeService.removeResizeEventListener(this.emptyStateContainer.nativeElement);\n  }\n\n  private _checkSize(): void {\n    this._currentSize = this.emptyStateContainer.nativeElement.offsetWidth;\n\n    if (this.selectedEmptyStates) {\n      this.emptyStateSvg = this._getEmptyStateHtml(this.selectedEmptyStates);\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  private _getEmptyStateHtml(emptyStateSize: EmptyStateSizes): SafeHtml {\n    const emptyState: string = this._getEmptyStateSvg(emptyStateSize);\n\n    return this._domSanitizer.bypassSecurityTrustHtml(emptyState);\n  }\n\n  private _getEmptyStateSvg(emptyStateSize: EmptyStateSizes): string {\n    let imgSize = 0;\n    const s = this._currentSize;\n\n    imgSize = s >= 256 ? 256 : 128;\n    imgSize = s >= 512 ? 512 : imgSize;\n\n    if (emptyStateSize[imgSize] === '') {\n      return emptyStateSize[128];\n    }\n\n    return emptyStateSize[imgSize];\n  }\n}\n","<div class=\"empty-state__container\" #emptyStateContainer>\n  <div class=\"empty-state\" *ngIf=\"emptyStateSvg\" [innerHTML]=\"emptyStateSvg\"></div>\n  <p class=\"empty-state__label\" [ngClass]=\"{'inverted' : inverted}\">{{ label }}</p>\n\n  <ng-content></ng-content>\n</div>\n"]}