import { Injectable } from '@angular/core';
import { fromEvent, ReplaySubject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import * as i0 from "@angular/core";
export function getInteractionSource(event, isMobile) {
    let interactionSourceOrigin = 'program';
    if (event) {
        if (isMobile || event.pointerType === 'touch' || event.pointerType === 'pen') {
            interactionSourceOrigin = 'touch';
        }
        else if (event.pointerType === 'mouse' || event instanceof MouseEvent) {
            interactionSourceOrigin = 'mouse';
        }
        else if (event instanceof KeyboardEvent || (event.clientX === 0 && event.clientY === 0)) {
            interactionSourceOrigin = 'keyboard';
        }
    }
    return interactionSourceOrigin;
}
export class AdaptInteractionSourceService {
    constructor() {
        this._destroy$ = new ReplaySubject(1);
        this._lastSourceEvent = null;
        fromEvent(window, 'keydown')
            .pipe(takeUntil(this._destroy$))
            .subscribe((event) => {
            this._lastSourceEvent = event;
        });
        fromEvent(window, 'pointerdown')
            .pipe(takeUntil(this._destroy$))
            .subscribe((event) => {
            this._lastSourceEvent = event;
        });
    }
    getLastInteractionSourceOrigin() {
        return this._lastSourceEvent ? getInteractionSource(this._lastSourceEvent) : null;
    }
    getLastInteractionSourceEvent() {
        return this._lastSourceEvent;
    }
    ngOnDestroy() {
        this._destroy$.next();
        this._destroy$.complete();
        this._destroy$ = null;
    }
}
AdaptInteractionSourceService.ɵfac = function AdaptInteractionSourceService_Factory(t) { return new (t || AdaptInteractionSourceService)(); };
AdaptInteractionSourceService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AdaptInteractionSourceService, factory: AdaptInteractionSourceService.ɵfac, providedIn: 'root' });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AdaptInteractionSourceService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
//# sourceMappingURL=interaction-source.js.map