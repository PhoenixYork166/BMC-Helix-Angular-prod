{"version":3,"file":"downloader.component.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/downloader/downloader.component.ts","../../../../../libs/adapt-angular/src/downloader/downloader.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  KeyValueDiffer,\n  KeyValueDiffers,\n  OnInit,\n  Output\n} from '@angular/core';\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\nimport {DownloadConfig} from './downloader.model';\nimport {Icon, IconManager} from '../common/uploader/services/icons-manager';\nimport {KeyValueObject} from '../common/common.models';\nimport {AdaptDeviceDetectionService} from '../common/device-detection.service';\nimport {AdaptTranslateService} from '../common/i18n/index';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularGenericDirective,\n  AdaptRadarAngularService\n} from '../common/radar/adapt-radar';\n\n@Component({\n  selector: 'adapt-downloader',\n  templateUrl: './downloader.component.html'\n})\nexport class AdaptDownloaderComponent extends AdaptRadarAngularGenericDirective implements OnInit, DoCheck {\n  /**\n   * A download file config\n   * @docs-default\n   */\n  @Input() config: DownloadConfig;\n\n  /**\n   * Sets up icons for an appropriate file types\n   * @docs-default Component includes pre-defined icons for file extensions: .docx, .doc, .xls, .xlsx, .ppt, .pptx, .zip, .7z, .dmg, .rar, .jpg, .jpeg, .png, .bmp, .gif, .avi, .pdf\n   */\n  @Input() icons: KeyValueObject<Icon>;\n\n  /**\n   * Sets component width\n   * @docs-default\n   */\n  @Input() width: string;\n\n  /**\n   * Fires when download button is clicked\n   */\n  @Output() readonly downloadLinkPressed: EventEmitter<Event> = new EventEmitter();\n\n  icon: SafeHtml;\n  isMobile: boolean = false;\n\n  private _defaultConfig: DownloadConfig = {\n    fileName: '',\n    downloadURL: '#'\n  };\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _iconDiffers: KeyValueDiffer<KeyValueObject<Icon>, any>;\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private _configDiffers: KeyValueDiffer<DownloadConfig, any>;\n\n  constructor(private _differs: KeyValueDiffers,\n              private _sanitizer: DomSanitizer,\n              private _iconService: IconManager,\n              private _deviceDetection: AdaptDeviceDetectionService,\n              private ts: AdaptTranslateService,\n              _adaptRadarService: AdaptRadarAngularService,\n              _elem: ElementRef<HTMLElement>) {\n    super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptDownloader);\n\n    this._defaultConfig.fileName = ts.getCurrentLanguage()['adapt.downloader.file'];\n  }\n\n  ngOnInit(): void {\n    this.isMobile = this._deviceDetection.isMobile();\n    this.config = {...this._defaultConfig, ...this.config};\n    this._configDiffers = this._differs.find({}).create();\n    this._iconDiffers = this._differs.find({}).create();\n  }\n\n  ngDoCheck(): void {\n    const iconChanges = this._iconDiffers.diff(this.icons);\n    const configChanges = this._configDiffers.diff(this.config);\n\n    if (iconChanges) {\n      this._iconService.init(this.icons);\n    }\n\n    if (iconChanges || configChanges) {\n      const type = this.config.fileName ? this.config.fileName.split('.').reverse()[0] : '';\n\n      this.icon = this._sanitizer.bypassSecurityTrustHtml(this._iconService.getIcon(type.toLowerCase()));\n    }\n  }\n}\n","<a [download]=\"config.fileName\"\n   [href]=\"config.downloadURL\"\n   target=\"_blank\"\n   class=\"btn adapt-downloader-link\"\n   [style.width]=\"width\"\n   placement=\"auto\"\n   [adaptRadarDisableEventSending]=\"true\"\n   [adaptTooltip]=\"!isMobile ? config.fileName : ''\"\n   (click)=\"downloadLinkPressed.emit($event)\">\n  <span class=\"adapt-downloader-file-image\" [innerHTML]=\"icon\"></span>\n  <span adaptTruncateFileName\n        [content]=\"config.fileName\"\n        class=\"adapt-downloader-file-name\">\n  </span>\n  <span class=\"d-icon-download adapt-downloader-download-icon\"></span>\n</a>\n"]}