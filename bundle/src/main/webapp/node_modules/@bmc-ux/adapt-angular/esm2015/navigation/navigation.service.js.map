{"version":3,"file":"navigation.service.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/navigation/navigation.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable, NgZone, OnDestroy} from '@angular/core';\n// do not remove Observable. Compiler gets mad: Return type of getter 'alertsState'\n// from exported class has or is using name 'Observable'\nimport {Subject, BehaviorSubject, Observable, ReplaySubject} from 'rxjs';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {AlertAnimatedConfig} from '../alert-animated/adapt-alert.model';\n\n@Injectable()\nexport class AdaptNavigationService implements OnDestroy {\n  private _alertsSubject: Subject<AlertAnimatedConfig> = new Subject<AlertAnimatedConfig>();\n\n  get alertsState(): Observable<AlertAnimatedConfig> {\n    return this._alertsSubject.asObservable();\n  }\n\n  get loaderState(): Observable<LoaderState> {\n    return this._loaderSubject.asObservable();\n  }\n\n  private _loaderSubject: BehaviorSubject<LoaderState> = new BehaviorSubject<LoaderState>({show: false, message: ''});\n  private _loaderMessageTimeout: number;\n  private _isLoading: boolean = false;\n  private _loadingContent?: string | Element;\n  private _destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  constructor(private _ngZone: NgZone) {\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed$.next(true);\n    this._destroyed$.complete();\n  }\n\n  // - - - - - - - - - - - - Public API - - - - - - - - - - - - - -\n\n  openAlert(alert: AlertAnimatedConfig): void {\n    this._alertsSubject.next(alert);\n  }\n\n  setLoaderContent(elem: string | Element): void {\n    this._loadingContent = elem;\n  }\n\n  setLoaderMessage(str: string): void {\n    if (this._isLoading) {\n      clearTimeout(this._loaderMessageTimeout);\n      this._loaderSubject.next(<LoaderState>{show: true, message: str});\n    }\n  }\n\n  showLoader(message?: string, delay?: number, loadingContent?: string | Element): void {\n    if (this._isLoading) {\n      return;\n    }\n\n    if (loadingContent) {\n      this.setLoaderContent(loadingContent);\n    }\n\n    this._isLoading = true;\n    this._loaderSubject.next(<LoaderState>{show: true});\n    this._blockLoadingContent();\n\n    this._loaderMessageTimeout = window.setTimeout((function (): void {\n      this._loaderSubject.next(<LoaderState>{show: true, message: message || 'Still loading...'});\n    }).bind(this), (delay || delay === 0) ? delay : 3000);\n  }\n\n  hideLoader(): void {\n    if (!this._isLoading) {\n      return;\n    }\n\n    clearTimeout(this._loaderMessageTimeout);\n    this._loaderMessageTimeout = null;\n    this._isLoading = false;\n    this._loaderSubject.next(<LoaderState>{show: false, message: null});\n\n    this._unblockLoadingContent();\n  }\n\n\n  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  private _blockLoadingContent(): void {\n    if (!this._loadingContent) {\n      return;\n    }\n\n    this._ngZone.onStable\n      .pipe(takeUntil(this._destroyed$), take(1))\n      .subscribe(\n        () => {\n          const content = typeof this._loadingContent === 'string' ? document.querySelector(this._loadingContent) : this._loadingContent;\n\n          if (content) {\n            content.classList.add('a-loader-content');\n            content.classList.add('a-loader-content__blocked');\n          }\n        }\n      );\n  }\n\n  private _unblockLoadingContent(): void {\n    if (!this._loadingContent) {\n      return;\n    }\n    const content = typeof this._loadingContent === 'string' ? document.querySelector(this._loadingContent) : this._loadingContent;\n\n    if (content) {\n      content.classList.remove('a-loader-content__blocked');\n    }\n  }\n}\n\n/**\n * Loader state interface\n */\nexport interface LoaderState {\n  show: boolean;\n  message?: string;\n}\n"]}