{"version":3,"file":"adapt-rx-rating.component.js","sourceRoot":"","sources":["../../../../../../libs/adapt-angular/src/rx/rx-rating/adapt-rx-rating.component.ts","../../../../../../libs/adapt-angular/src/rx/rx-rating/adapt-rx-rating.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Self,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {cloneDeep, isNil, toNumber} from 'lodash-es';\n\nimport {AdaptDeviceDetectionService} from '../../common/device-detection.service';\nimport {AdaptTranslateService} from '../../common/i18n/index';\nimport {getInteractionSource} from '../../common/interaction-source';\nimport {AdaptRxFeedbackComponent, AdaptRxFormControlDirective} from '../form-control/index';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularCustomEventType,\n  AdaptRadarAngularService\n} from '../../common/radar/adapt-radar';\n\nimport {AdaptRxRatingConfigService} from './adapt-rx-rating-config.service';\nimport {RxRating, RxRatingSize, RxRatingTexts} from './adapt-rx-rating.types';\n\n@Component({\n  selector: 'adapt-rx-rating',\n  templateUrl: './adapt-rx-rating.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AdaptRxRatingComponent extends AdaptRxFormControlDirective implements OnInit {\n  static DefaultMaxValue: number = 5;\n\n  analyticsComponentName: typeof AdaptRadarAngularCustomEventName = AdaptRadarAngularCustomEventName;\n\n  protected controlName: string = 'rating';\n\n  UI_SIZE: typeof RxRatingSize = RxRatingSize;\n  ratingList: RxRating[] = [];\n  currentRating: number;\n  uiTexts: RxRatingTexts;\n  isMobile: boolean = false;\n\n  /**\n   * Specifies the size of the rating. Supported values: \"xtra-small\", \"small\", \"medium\", \"\"large\"\n   * @docs-default RxRatingSize.xs\n   */\n  @Input() size: RxRatingSize = RxRatingSize.xs;\n\n  /**\n   * Maximal rating that can be given using this widget.\n   * @docs-default 5\n   */\n  @Input()\n  get maxValue(): number {\n    return this._maxValue;\n  }\n\n  set maxValue(v: number) {\n    this._maxValue = isNil(v) ? AdaptRxRatingComponent.DefaultMaxValue : toNumber(v);\n    this._createArrayList();\n  }\n\n  /**\n   * UI Texts\n   * @docs-default AdaptRxRatingConfigService.texts.rating\n   */\n  @Input() set texts(newTexts: RxRatingTexts) {\n    Object.assign(this.uiTexts, newTexts);\n  }\n\n  @ViewChildren('rateButtonRef') rateButtonRefList: QueryList<ElementRef<HTMLButtonElement>>;\n\n  /**\n   * Reference on AdaptRxFeedbackComponent\n   */\n  @ViewChild('adaptRxFeedbackRef', {static: true}) adaptRxFeedbackRef: AdaptRxFeedbackComponent;\n\n  /* eslint-disable @angular-eslint/no-output-on-prefix */\n  /**\n   * An event fired when a user selects a new rating.\n   */\n  @Output() readonly onRateChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user is hovering over a given rating.\n   */\n  @Output() readonly onHoverChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /**\n   * An event fired when the cursor left rating area.\n   */\n  @Output() readonly onLeaveChange: EventEmitter<number> = new EventEmitter<number>();\n  /* eslint-enable @angular-eslint/no-output-on-prefix */\n\n  private _maxValue: number = AdaptRxRatingComponent.DefaultMaxValue;\n  private _rate: number = null;\n\n  constructor(@Optional() @Self() ngControl: NgControl,\n              rxRatingConfigService: AdaptRxRatingConfigService,\n              _changeDetectorRef: ChangeDetectorRef,\n              public ts: AdaptTranslateService,\n              _adaptRadarService: AdaptRadarAngularService,\n              private _deviceDetectionService: AdaptDeviceDetectionService,\n              _elem: ElementRef<HTMLElement>) {\n    super(ngControl, ts, _adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptRxRating, _changeDetectorRef);\n\n    this.uiTexts = cloneDeep(rxRatingConfigService.texts.rating);\n  }\n\n  /**\n   * Check if the control has UI error state\n   */\n  get hasDangerState(): boolean {\n    return this.adaptRxFeedbackRef.hasUIErrorState;\n  }\n\n  ngOnInit(): void {\n    this.isMobile = this._deviceDetectionService.isMobile();\n    super.ngOnInit();\n\n    this._createArrayList();\n    this._updateState(this.rate);\n\n    // Subscribe on first model change to get model value\n    this.ngControl.valueChanges.pipe(takeUntil(this.destroy$), take(1)).subscribe(value => {\n      this._adaptRadarService.sendCustomEventForAllProviders(AdaptRadarAngularCustomEventName.AdaptRxRating, {\n        GroupName: this.adaptRadarGroupName,\n        EventType: AdaptRadarAngularCustomEventType.Init,\n        Label: this.label,\n        FieldSize: this.size,\n        RatingEntered: !!value,\n        RatingMax: this.maxValue,\n        RatingValue: value,\n        Required: this.required,\n        Disabled: this.disabled,\n        ReadOnly: this.readonly,\n      });\n    });\n  }\n\n  get rate(): number {\n    return this._rate;\n  }\n\n  set rate(v: number) {\n    this._rate = isNil(v) ? null : toNumber(v);\n  }\n\n  onRatingItemClick(value: number, event: MouseEvent | KeyboardEvent): void {\n    this._updateValue(value);\n    this.onRateChange.emit(this.rate);\n    this._onChange(this.rate);\n\n    this._adaptRadarService.sendCustomEventForAllProviders(AdaptRadarAngularCustomEventName.AdaptRxRating, {\n      GroupName: this.adaptRadarGroupName,\n      EventType: AdaptRadarAngularCustomEventType.Click,\n      Label: this.label,\n      FieldSize: this.size,\n      RatingEntered: !!value,\n      RatingMax: this.maxValue,\n      RatingValue: value,\n      Required: this.required,\n      Disabled: this.disabled,\n      ReadOnly: this.readonly,\n      SubmitMethod: getInteractionSource(event, this.isMobile)\n    });\n  }\n\n  onRatingItemMouseEnter(value: number): void {\n    this.onHoverChange.emit(value);\n\n    if (!(this.readonly || this.disabled)) {\n      this._updateState(value);\n    }\n  }\n\n  reset(): void {\n    this.onLeaveChange.emit(this.currentRating);\n    this._updateState(this.rate);\n    this._onTouched();\n  }\n\n  blurHandler(event: FocusEvent): void {\n    super.blurHandler(event);\n\n    this._onTouched();\n  }\n\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  writeValue(value: any): void {\n    this._updateValue(value);\n  }\n\n  protected _focusNativeElement(): void {\n    if (this.rateButtonRefList) {\n      this.rateButtonRefList.first.nativeElement.focus();\n    }\n\n    return null;\n  }\n\n  private _updateValue(value: number): void {\n    this.rate = !isNil(value) ? this._getValueInRange(value, this.maxValue, 1) : null;\n    this._updateState(this.rate);\n  }\n\n  private _getValueInRange(value: number, max: number, min: number = 0): number {\n    return Math.max(Math.min(value, max), min);\n  }\n\n  private _updateState(ratingValue: number): void {\n    this.currentRating = ratingValue;\n    this.ratingList.map((_, i) => _.fill = this._getFillValue(i));\n  }\n\n  private _createArrayList(): void {\n    this.ratingList = Array.from({length: this.maxValue}, (_, v) => ({fill: 0, index: v}));\n  }\n\n  private _getFillValue(index: number): number {\n    const diff = this.currentRating - index;\n\n    if (diff >= 1) {\n      return 100;\n    }\n\n    if (diff < 1 && diff > 0) {\n      return Number.parseInt((diff * 100).toFixed(2), 10);\n    }\n\n    return 0;\n  }\n}\n","<div [class.has-danger]=\"adaptRxFeedbackRef.hasUIErrorState\"\n     [class.has-warning]=\"warningMessage\">\n  <adapt-rx-control-label [for]=\"readonly ? undefined : id\"\n                          [id]=\"id + 'label'\"\n                          [label]=\"label\"\n                          [subLabel]=\"subLabel\"\n                          [requiredLabel]=\"requiredLabel\"\n                          [showRequiredLabel]=\"required\"\n                          [tooltip]=\"tooltip\"\n                          [testID]=\"testID\"></adapt-rx-control-label>\n\n  <div class=\"a-rating\"\n       [class.a-rating_small]=\"size === UI_SIZE.sm\"\n       [class.a-rating_medium]=\"size === UI_SIZE.md\"\n       [class.a-rating_large]=\"size === UI_SIZE.lg\"\n       [class.a-rating_readonly]=\"readonly\"\n       [attr.aria-label]=\"ariaLabel\"\n       [attr.aria-labelledby]=\"ariaLabelledby || (label ? id + 'label' : undefined)\"\n       [attr.aria-required]=\"required\"\n       [attr.aria-readonly]=\"readonly\"\n       [attr.aria-disabled]=\"disabled\"\n       [attr.aria-invalid]=\"hasDangerState\"\n       [attr.aria-errormessage]=\"ariaErrorMessage\"\n       (mouseleave)=\"reset()\">\n    <ng-container *ngIf=\"!readonly\">\n      <button *ngFor=\"let rating of ratingList; let index = index\"\n              #rateButtonRef\n              type=\"button\"\n              class=\"a-rating__item\"\n              [class.is-active]=\"rating.fill === 100\"\n              [class.is-half-active]=\"rating.fill > 0 && rating.fill < 100\"\n              [class.is-readonly]=\"disabled\"\n              [adaptTooltip]=\"uiTexts.tooltip[index]\"\n              [adaptRadarDisableEventSending]=\"true\"\n              [placement]=\"'top'\"\n              [id]=\"id + '-button-' + index\"\n              [attr.name]=\"name\"\n              [attr.data-testid]=\"testID + '_item-' + index\"\n              [disabled]=\"disabled\"\n              [attr.tabindex]=\"tabIndex\"\n              (mouseenter)=\"onRatingItemMouseEnter(index + 1)\"\n              (click)=\"onRatingItemClick(index + 1, $event)\"\n              (focus)=\"focusHandler($event)\"\n              (blur)=\"blurHandler($event)\">\n        <span class=\"a-rating__icon\">\n          <span [class.icon-visible]=\"rating.fill === 0\" class=\"d-icon-star_o icon\"></span>\n          <span [class.icon-visible]=\"rating.fill === 100\" class=\"d-icon-star icon\"></span>\n          <span [class.icon-visible]=\"rating.fill > 0 && rating.fill < 100\" class=\"d-icon-star_half icon\"></span>\n        </span>\n        <span\n          class=\"sr-only\">{{uiTexts.tooltip && uiTexts.tooltip[index] ? uiTexts.tooltip[index] : rating.index}}</span>\n      </button>\n    </ng-container>\n\n    <ng-container *ngIf=\"readonly\">\n    <span *ngFor=\"let rating of ratingList; let index = index\"\n          class=\"a-rating__item is-readonly\"\n          [class.is-active]=\"rating.fill === 100\"\n          [class.is-half-active]=\"rating.fill > 0 && rating.fill < 100\"\n          [attr.data-testid]=\"testID + '_item-' + index\"\n          [adaptTooltip]=\"uiTexts.tooltip[index]\"\n          [adaptRadarDisableEventSending]=\"true\"\n          [placement]=\"'top'\">\n      <span *ngIf=\"rating.fill === 0\" class=\"d-icon-star_o icon\"></span>\n      <span *ngIf=\"rating.fill === 100\" class=\"d-icon-star icon\"></span>\n      <span *ngIf=\"rating.fill > 0 && rating.fill < 100\" class=\"d-icon-star_half icon\"></span>\n      <span class=\"sr-only\">{{uiTexts.tooltip && uiTexts.tooltip[index] ? uiTexts.tooltip[index] : rating.index}}</span>\n    </span>\n    </ng-container>\n  </div>\n\n  <adapt-rx-feedback #adaptRxFeedbackRef\n                     [ariaErrorMessage]=\"ariaErrorMessage\"\n                     [errors]=\"ngControl.errors\"\n                     [warningMessage]=\"warningMessage\"\n                     [controlTouched]=\"ngControl.touched\"\n                     (messageAppeared)=\"handleMessageAppeared($event, analyticsComponentName.AdaptRxRating)\"></adapt-rx-feedback>\n</div>\n"]}