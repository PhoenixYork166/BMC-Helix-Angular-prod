{"version":3,"file":"metatag.types.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/metatag/metatag.types.ts"],"names":[],"mappings":"AAmBA,MAAM,CAAN,IAAY,eAeX;AAfD,WAAY,eAAe;IACzB;;OAEG;IACH,gCAAa,CAAA;IAEb;;OAEG;IACH,kCAAe,CAAA;IAEf;;OAEG;IACH,kCAAe,CAAA;AACjB,CAAC,EAfW,eAAe,KAAf,eAAe,QAe1B","sourcesContent":["import {DefaultPreventable} from '../common/common.models';\n\nexport interface MetatagTexts {\n  placeholder?: string;\n  mainErrorText?: string;\n  warningStateText?: string;\n}\n\n// TODO: Refactor this if possible\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nexport interface TagModel<TData = any> {\n  text: string;\n  data?: TData;\n}\n\n// TODO: Refactor this if possible\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nexport type TagType<TData = any> = string | TagModel<TData>;\n\nexport enum TagAddingSource {\n  /**\n   * Add tag from dropdown list\n   */\n  List = 'list',\n\n  /**\n   * Add tag using model\n   */\n  Model = 'model',\n\n  /**\n   * Add tag from input field\n   */\n  Input = 'input'\n}\n\nexport interface TagStyleFormatterParam {\n  /**\n   * Tag index\n   */\n  index: number;\n\n  /**\n   * Tag instance\n   */\n  tag: TagType;\n}\n\nexport interface TagTemplateData {\n  /**\n   * Tag instance\n   */\n  tag: TagType;\n\n  /**\n   * Tag index\n   */\n  index: number;\n}\n\nexport interface RemoveTagEvent extends DefaultPreventable {\n  /**\n   * Tag instance\n   */\n  tag: TagType;\n\n  /**\n   * Tag index\n   */\n  index: number;\n\n  /**\n   * Browser native event\n   */\n  domEvent: MouseEvent | KeyboardEvent;\n}\n\nexport interface AddTagEvent extends DefaultPreventable {\n  /**\n   * Tag instance\n   */\n  tag: TagType;\n\n  /**\n   * Tag add source. Can be List, Model or Input\n   */\n  addingSource: TagAddingSource;\n}\n\nexport interface InitTagEditingEvent extends DefaultPreventable {\n  /**\n   * Tag instance\n   */\n  tag: TagType;\n\n  /**\n   * Tag index\n   */\n  index: number;\n}\n"]}