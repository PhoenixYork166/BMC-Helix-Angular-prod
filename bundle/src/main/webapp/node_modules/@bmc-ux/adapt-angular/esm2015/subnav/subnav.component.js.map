{"version":3,"file":"subnav.component.js","sourceRoot":"","sources":["../../../../../libs/adapt-angular/src/subnav/subnav.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  Renderer2\n} from '@angular/core';\nimport {asyncScheduler, BehaviorSubject, Subject} from 'rxjs';\nimport {distinctUntilChanged, take, takeUntil, throttleTime} from 'rxjs/operators';\n\nimport {ResizeService} from '../common/resize/resize.service';\nimport {AdaptSubnavItemComponent} from './subnav-item.component';\nimport {AdaptSubnavDropdownComponent} from './subnav-dropdown.component';\nimport {\n  AdaptRadarAngularCustomEventName,\n  AdaptRadarAngularGenericDirective,\n  AdaptRadarAngularService\n} from '../common/radar/adapt-radar';\n\n@Component({\n  selector: 'adapt-subnav, [adaptSubnav]',\n  template: `\n    <ng-content></ng-content>\n  `\n})\nexport class AdaptSubnavComponent extends AdaptRadarAngularGenericDirective implements OnInit, AfterContentInit, AfterViewInit, OnDestroy {\n  /**\n   * Needs when SubnavComponent uses as a directive\n   * @docs-default\n   */\n  // TODO: Refactor this if possible\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  @Input() adaptSubnav: any;\n\n  /**\n   * The minimum free space when overflow items start collapsing\n   * @docs-default 20\n   */\n  @Input() gutter: number = 20;\n\n  /**\n   * Default css class list for host element\n   * @docs-default d-flex flex-nowrap text-no-wrap\n   */\n  @Input() defaultCssClass: string = 'd-flex flex-nowrap text-no-wrap';\n\n  @Output() readonly visibilityChanged: EventEmitter<AdaptSubnavItemComponent[]> = new EventEmitter<AdaptSubnavItemComponent[]>();\n\n  @ContentChild(AdaptSubnavDropdownComponent, {static: true}) subnavDropdown: AdaptSubnavDropdownComponent;\n  @ContentChildren(AdaptSubnavItemComponent) subnavItemsList: QueryList<AdaptSubnavItemComponent>;\n\n  private hasHiddenItems$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  private _destroyed$: Subject<void> = new Subject();\n  private subnavItemsByHidePriority: AdaptSubnavItemComponent[] = [];\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              private _resizeService: ResizeService,\n              private _renderer: Renderer2,\n              private _ngZone: NgZone,\n              _adaptRadarService: AdaptRadarAngularService,\n              _elem: ElementRef<HTMLElement>) {\n    super(_adaptRadarService, _elem, AdaptRadarAngularCustomEventName.AdaptSubnav);\n  }\n\n  ngOnInit(): void {\n    this.defaultCssClass.split(' ').forEach(cssClass => {\n      this._renderer.addClass(this._elementRef.nativeElement, cssClass);\n    });\n  }\n\n  ngAfterContentInit(): void {\n    this.subnavItemsByHidePriority = this.getSubnavItemsByHidePriority();\n    this.subnavDropdown.subnavItemsList = this.subnavItemsList;\n\n    this.hasHiddenItems$\n      .pipe(distinctUntilChanged())\n      .subscribe(value => {\n        this.subnavDropdown.showDropdown$.next(value);\n      });\n\n    // In case items changed need to recalculate visibility\n    this.subnavItemsList.changes.subscribe(() => {\n      this.subnavItemsByHidePriority = this.getSubnavItemsByHidePriority();\n      this.subnavDropdown.subnavItemsList = this.subnavItemsList;\n      this.checkSubnavItemsVisibility();\n    });\n  }\n\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n\n    const resize$ = new Subject();\n\n    resize$\n      .pipe(\n        takeUntil(this._destroyed$),\n        throttleTime(100, asyncScheduler, {trailing: true})\n      )\n      .subscribe(() => {\n        this.checkSubnavItemsVisibility();\n      });\n\n    this._resizeService.addResizeEventListener(this._elementRef.nativeElement, resize$.next.bind(resize$));\n\n    this._ngZone.onStable.pipe(takeUntil(this._destroyed$), take(1)).subscribe(() => {\n      this.checkSubnavItemsVisibility();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._resizeService.removeResizeEventListener(this._elementRef.nativeElement);\n    this._destroyed$.next();\n    this._destroyed$.complete();\n  }\n\n  private getSubnavItemsByHidePriority(): AdaptSubnavItemComponent[] {\n    return this.subnavItemsList\n      .toArray()\n      .sort((prevItem, nextItem) => prevItem.priority - nextItem.priority);\n  }\n\n  private checkSubnavItemsVisibility(): void {\n    const subnavContainerWidth =\n      Math.floor(this._elementRef.nativeElement.offsetWidth - this.subnavDropdown.width - this.gutter);\n\n    let totalContentWidth = this.subnavItemsByHidePriority.reduce((sum, curr) => {\n      return sum + (curr.preventHiding ? curr.width : 0);\n    }, 0);\n\n    this.subnavItemsByHidePriority.forEach((subnavItem) => {\n      if (subnavItem.preventHiding) {\n        return;\n      }\n\n      totalContentWidth += subnavItem.width;\n\n      const containerFitsButton = Math.floor(subnavContainerWidth) >= Math.ceil(totalContentWidth);\n\n      subnavItem.isHidden = !containerFitsButton;\n    });\n\n    this.hasHiddenItems$.next(Boolean(this.subnavItemsByHidePriority.find(elem => elem.isHidden)));\n\n    this.visibilityChanged.emit(this.subnavItemsByHidePriority);\n  }\n}\n"]}