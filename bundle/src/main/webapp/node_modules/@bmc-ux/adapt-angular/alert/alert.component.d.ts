import { AfterViewInit, ElementRef, EventEmitter, OnInit, TemplateRef } from '@angular/core';
import { AdaptAlertConfig } from './alert.config';
import { AdaptTranslateService } from '../common/i18n/index';
import { ColorVariantType } from '../common/common.models';
import { AdaptRadarAngularGenericDirective, AdaptRadarAngularService } from '../common/radar/adapt-radar';
import * as i0 from "@angular/core";
export declare class AdaptAlertComponent extends AdaptRadarAngularGenericDirective implements OnInit, AfterViewInit {
    _defaultConfig: AdaptAlertConfig;
    ts: AdaptTranslateService;
    /**
     * Context for custom template
     */
    _context: {
        close: () => void;
    };
    /**
     * Alert current state
     */
    _config: Alert;
    /**
     * Standard alert icons
     */
    _iconSet: Record<string, string>;
    closeText: string;
    colorText: string;
    display: string;
    overflow: string;
    alertAnimaton: string;
    /**
     * Object for alert configuration (see an example bellow).
     * @docs-default
     */
    set config(v: Alert);
    /**
     * On alert close event
     */
    readonly onClose: EventEmitter<void>;
    dismissBtn: ElementRef;
    get showDismissBtn(): boolean;
    readonly uniqueId: string;
    readonly uniqueTitleId: string;
    readonly uniqueContentId: string;
    constructor(_defaultConfig: AdaptAlertConfig, ts: AdaptTranslateService, _adaptRadarService: AdaptRadarAngularService, _elem: ElementRef<HTMLElement>);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    /**
     * On close button click handler
     */
    close(): void;
    /**
     * Check content type
     */
    isTemplate(content: string | TemplateRef<any>): boolean;
    /**
     * Checking for the config changes
     */
    private _checkConfig;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptAlertComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptAlertComponent, "adapt-alert", never, { "config": "config"; }, { "onClose": "onClose"; }, never, ["*"]>;
}
/**
 * Describes AlertConfig structure
 */
export interface Alert {
    title?: string;
    content?: string | TemplateRef<any>;
    type?: 'section' | 'page' | 'inline';
    variant?: ColorVariantType;
    icon?: boolean;
    dismissible?: boolean;
}
