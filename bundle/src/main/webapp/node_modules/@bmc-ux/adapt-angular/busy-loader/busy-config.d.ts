import { Subscription } from 'rxjs';
import { TemplateRef } from '@angular/core';
export declare enum LoaderInOutType {
    fly = 1,
    fade = 2
}
export declare const BUSY_CONFIG_DEFAULTS: {
    delay: number;
    minDuration: number;
    backdrop: boolean;
    message: string;
    wrapperClass: string;
    loaderType: string;
    overlayClass: string;
    sticky: boolean;
    offsetTop: string;
    inOutType: LoaderInOutType;
    percentageValue: any;
    loaderClass: string;
};
export interface BusyConfig {
    type?: string;
    /**
     * The amount of time to wait until showing the indicator. Specified in milliseconds
     */
    delay?: number;
    /**
     * The amount of time to keep the indicator showing even if the busy thing was completed quicker. Specified in milliseconds
     */
    minDuration?: number;
    /**
     * A faded backdrop will be shown behind the indicator if true
     */
    backdrop?: boolean;
    /**
     * The message to show in the indicator which will reflect the updated values as they are changed
     */
    message?: string;
    /**
     * The name(s) of the CSS classes to be applied to the wrapper element of the indicator
     */
    wrapperClass?: string;
    /**
     * A busy thing (or an array of busy things) that will cause the loading indicator to show
     */
    busy?: Promise<unknown> | Subscription | (Promise<unknown> | Subscription)[];
    /**
     * Type of loader
     */
    loaderType?: string;
    /**
     * Name of the CSS class to be applied to style faded backdrop
     */
    overlayClass?: string;
    /**
     * Available for lineLoader type only. Loader will be top fixed on scroll if true
     */
    sticky?: boolean;
    /**
     * Available for lineLoader type only. Specify the fixed top value
     */
    offsetTop?: string;
    inOutType?: LoaderInOutType;
    /**
     * Value of the progress
     * @since v11.7.0
     */
    percentageValue?: number;
    /**
     * The name(s) of the CSS classes to be applied to loader element. Applicable for the special loader only
     * @since v11.7.0
     */
    loaderClass?: string;
    /**
     * The image href to be applied to loader element. Applicable for the special loader only of type determinate
     * @since v11.7.0
     */
    loaderImg?: string;
    /**
     * Additional content info to be provided for the loader element. Applicable for the special loader only of type determinate
     * @since v11.7.0
     */
    content?: TemplateRef<any>;
}
export declare class AdaptBusyConfig implements BusyConfig {
    delay: number;
    minDuration: number;
    backdrop: boolean;
    message: string;
    wrapperClass: string;
    overlayClass: string;
    sticky: boolean;
    offsetTop: string;
    percentageValue: number;
    constructor(config?: BusyConfig);
}
export declare class LoaderType {
    static readonly APP: string;
    static readonly PAGE: string;
    static readonly FULL_PAGE: string;
    static readonly SECTION: string;
    static readonly INLINE: string;
    static readonly LINE: string;
    static readonly SPECIAL: string;
}
