import { EventEmitter, OnDestroy, AfterViewInit, ElementRef, NgZone, ChangeDetectorRef } from '@angular/core';
import { AnimationEvent } from '@angular/animations';
import { AdaptMessage, AdaptToastCloseEvent } from './toast.model';
import { ToastPlacement } from '../common/positioning';
import * as i0 from "@angular/core";
export declare class AdaptToastItemComponent implements OnDestroy, AfterViewInit {
    private _ngZone;
    private _cdr;
    expandedTextHeight: number;
    nonExpandedTextHeight: number;
    totalHeight: number;
    expanded: boolean;
    animationDuration: string;
    timeout: number;
    message: AdaptMessage;
    get placement(): ToastPlacement;
    set placement(value: ToastPlacement);
    index: number;
    link: string;
    ariaLabel: string;
    zIndex: number;
    readonly onClose: EventEmitter<AdaptToastCloseEvent>;
    readonly onAnimationEnd: EventEmitter<AdaptMessage>;
    readonly linkClick: EventEmitter<AdaptMessage>;
    nonExpandedDetails: ElementRef<HTMLSpanElement>;
    expandedDetails: ElementRef<HTMLSpanElement>;
    private _placement;
    constructor(_ngZone: NgZone, _cdr: ChangeDetectorRef);
    ngAfterViewInit(): void;
    initTimeout(): void;
    clearTimeout(): void;
    onMouseEnter(): void;
    onMouseLeave(): void;
    onCloseIconClick(event: Event): void;
    /**
     * Show full toast message
     */
    showFullMessage(): void;
    /**
     * Hide full toast message
     */
    hideFullMessage(): void;
    /**
     * Emit empty value to handle link click
     */
    handleLinkClick(): void;
    animationDone(event: AnimationEvent): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptToastItemComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptToastItemComponent, "adapt-toast-item", never, { "message": "message"; "placement": "placement"; "index": "index"; "link": "link"; "ariaLabel": "ariaLabel"; "zIndex": "zIndex"; }, { "onClose": "onClose"; "onAnimationEnd": "onAnimationEnd"; "linkClick": "linkClick"; }, never, never>;
}
