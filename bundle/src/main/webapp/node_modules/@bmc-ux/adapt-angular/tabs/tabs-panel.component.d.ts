import { OnInit, TemplateRef } from '@angular/core';
import { BadgeVariantType } from '../badge/badge.model';
import * as i0 from "@angular/core";
export declare class AdaptTabsPanelComponent implements OnInit {
    _badge: string | number;
    kebabMenuPresent: boolean;
    isActive: boolean;
    badgeType: BadgeVariantType;
    animateBadge: boolean;
    showBadgeAlert: boolean;
    badgeAlertVariant: BadgeVariantType;
    badgeCustomClass: string;
    title: string;
    disabled: boolean;
    isHidden: boolean;
    icon: string;
    subtext: string;
    iconRight: string;
    iconClose: boolean;
    ariaLabel: string;
    ariaLabelledby: string;
    kebabMenu: TemplateRef<void>;
    id: string;
    /**
     * When `false` the content will not be rendered in the html, but to avoid rendering at the
     * angular side need to make this:
     * <adapt-tab-panel #tab [renderContentWhenInactive]="false">
     *   <ng-template [ngIf]="tab.isActive">...</ng-template>
     * </adapt-tab-panel>
     */
    renderContentWhenInactive: boolean;
    get badge(): string | number;
    set badge(value: string | number);
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptTabsPanelComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptTabsPanelComponent, "adapt-tab-panel, div[tab-panel]", never, { "isActive": "isActive"; "badgeType": "badge-type"; "animateBadge": "animateBadge"; "showBadgeAlert": "showBadgeAlert"; "badgeAlertVariant": "badgeAlertVariant"; "badgeCustomClass": "badgeCustomClass"; "title": "adapt-tab-title"; "disabled": "disabled"; "isHidden": "isHidden"; "icon": "icon"; "subtext": "subtext"; "iconRight": "icon-right"; "iconClose": "icon-close"; "ariaLabel": "aria-label"; "ariaLabelledby": "aria-labelledby"; "kebabMenu": "kebabMenu"; "id": "id"; "renderContentWhenInactive": "renderContentWhenInactive"; "badge": "badge"; }, {}, never, ["*"]>;
}
