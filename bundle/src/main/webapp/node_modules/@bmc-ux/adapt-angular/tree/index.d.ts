import { ModuleWithProviders } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./tree.component";
import * as i2 from "./tree-node.component";
import * as i3 from "./tree-node-template.directive";
import * as i4 from "./tree-template.component";
import * as i5 from "@angular/common";
import * as i6 from "@angular/forms";
import * as i7 from "../dragon-input-handler/index";
import * as i8 from "../common/lazy-load/index";
import * as i9 from "../rx/rx-search/index";
import * as i10 from "../highlight/index";
import * as i11 from "../custom-actions/index";
export declare class AdaptTreeModule {
    /**
     * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
     * Will be removed in a short while
     *
     * @deprecated 11.16.0
     */
    static forRoot(): ModuleWithProviders<AdaptTreeModule>;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptTreeModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<AdaptTreeModule, [typeof i1.AdaptTreeComponent, typeof i2.AdaptTreeNodeComponent, typeof i3.AdaptTreeNodeTemplateDirective, typeof i4.AdaptTreeNodeTemplateLoaderComponent], [typeof i5.CommonModule, typeof i6.FormsModule, typeof i7.AdaptDragonInputHandlerModule, typeof i8.AdaptLazyLoadModule, typeof i9.AdaptRxSearchModule, typeof i10.AdaptHighlightModule, typeof i11.AdaptCustomActionsModule], [typeof i1.AdaptTreeComponent, typeof i3.AdaptTreeNodeTemplateDirective]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<AdaptTreeModule>;
}
export * from './tree.component';
export * from './tree-node.component';
export * from './tree-template.component';
export * from './tree-node-template.directive';
export * from './tree.model';
