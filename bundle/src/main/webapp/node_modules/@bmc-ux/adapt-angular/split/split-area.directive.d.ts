import { OnInit, OnDestroy, ElementRef, Renderer2 } from '@angular/core';
import { AdaptSplitComponent } from './split.component';
import * as i0 from "@angular/core";
export declare class AdaptSplitAreaDirective implements OnInit, OnDestroy {
    private elementRef;
    private renderer;
    private split;
    eventsLockFct: Function[];
    /**
     * Order of the area. Useful if you show/hide areas using NgIf/NgFor and wants to keep the same order.
     * If specified for all, areas displayed from order min to max
     * @docs-default
     */
    set order(v: number);
    /**
     * Percentage size of the area. If null or if all areas sizes not equal to 100, all areas will have the same size
     * @docs-default
     */
    set size(v: number);
    set minSizePixel(v: number);
    get visible(): boolean;
    /**
     * Toggles area visibility without removing it from the DOM. Useful for specific case like routing
     * @docs-default true
     */
    set visible(v: boolean);
    private _order;
    private _size;
    private _minSizePixel;
    private _visible;
    constructor(elementRef: ElementRef, renderer: Renderer2, split: AdaptSplitComponent);
    ngOnInit(): void;
    lockEvents(): void;
    unlockEvents(): void;
    setStyle(key: string, value: any): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptSplitAreaDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AdaptSplitAreaDirective, "div[adaptSplitArea], div[adapt-split-area]", never, { "order": "order"; "size": "size"; "minSizePixel": "minSizePixel"; "visible": "visible"; }, {}, never>;
}
