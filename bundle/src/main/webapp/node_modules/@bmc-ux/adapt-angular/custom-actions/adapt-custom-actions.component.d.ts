import { Directionality } from '@angular/cdk/bidi';
import { ElementRef, OnInit, QueryList } from '@angular/core';
import { AdaptCustomAction, AdaptCustomActionsAlignEnum } from './adapt-custom-actions.model';
import { AdaptFocusMonitorDirective } from '../common/focus-monitor.directive';
import { AdaptRadarAngularGenericDirective, AdaptRadarAngularService } from '../common/radar/adapt-radar';
import * as i0 from "@angular/core";
export declare class AdaptCustomActionsComponent extends AdaptRadarAngularGenericDirective implements OnInit {
    private _dir;
    _uniqueId: string;
    isRtl: boolean;
    alignedTo: AdaptCustomActionsAlignEnum;
    actions: AdaptCustomAction[];
    testID: string;
    focusMonitorDirectiveQueryList: QueryList<AdaptFocusMonitorDirective>;
    constructor(_dir: Directionality, _adaptRadarService: AdaptRadarAngularService, _elem: ElementRef<HTMLElement>);
    ngOnInit(): void;
    trackByActions(index: number, action: AdaptCustomAction): string | number;
    getActionClass(customClass: string): string;
    getButtonLeftAnimationState(isRtl: boolean): string;
    getButtonRightAnimationState(isRtl: boolean): string;
    clickHandler(action: AdaptCustomAction, $event: MouseEvent | KeyboardEvent): void;
    clickWithKeyboard(action: AdaptCustomAction, $event: KeyboardEvent): void;
    private _getAnimationState;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptCustomActionsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptCustomActionsComponent, "adapt-custom-actions", never, { "alignedTo": "alignedTo"; "actions": "actions"; "testID": "testID"; }, {}, never, never>;
}
