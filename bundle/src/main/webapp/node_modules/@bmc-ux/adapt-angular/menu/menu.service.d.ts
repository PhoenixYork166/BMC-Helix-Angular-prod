import { ElementRef, Renderer2, ChangeDetectorRef } from '@angular/core';
import { MenuConfig, MenuTextsModel } from './models/menu-config';
import { BehaviorSubject } from 'rxjs';
import { CascadeItem, MenuItem } from './models/menu-item';
import * as i0 from "@angular/core";
export declare class MenuInnerService {
    private _renderer;
    private _changeDetectorRef;
    item: MenuItem;
    id: string;
    isMobile: boolean;
    currentActiveId: string;
    currentActiveCascadeItem: any;
    appendToBody: boolean;
    mobileDefaultTexts: MenuTextsModel;
    menuElementRef: BehaviorSubject<ElementRef>;
    private _documentListenerFunc;
    private _openedMenu;
    get cascadeChain(): CascadeItem;
    constructor(_renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef);
    init(config: MenuConfig): void;
    addCascadeItem(parentNode: any, componentRef: any, anchor: any): void;
    detachCascade(): void;
    destroyCascadeItems(level: number): void;
    closeFromClick(e: Event): void;
    getCascadeLength(): number;
    private _attachCascade;
    private _destroy;
    private _addParent;
    static ɵfac: i0.ɵɵFactoryDeclaration<MenuInnerService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<MenuInnerService>;
}
