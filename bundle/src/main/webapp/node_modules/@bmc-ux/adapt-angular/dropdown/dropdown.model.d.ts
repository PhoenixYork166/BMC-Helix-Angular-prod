import { PlacementArray } from '../common/positioning';
import { AdaptDropdownDirective } from './dropdown.component';
import { AnimationEvent } from '@angular/animations';
import { FocusOrigin } from '@angular/cdk/a11y';
import * as i0 from "@angular/core";
export declare class AdaptDropdownConfig {
    autoClose: boolean | 'outside' | 'inside';
    placement: PlacementArray;
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptDropdownConfig, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<AdaptDropdownConfig>;
}
export interface AdaptDropdownMobileView {
    title?: string;
    fullHeight?: boolean;
    cancelCB?: (dd?: AdaptDropdownDirective) => void;
    doneCB?: (dd?: AdaptDropdownDirective) => void;
    doneBtnTitle?: string;
    cancelBtnTitle?: string;
    isPicker?: boolean;
}
export interface AdaptAnchorPositionChangeEvent {
    previousAnchorRect: DOMRectInit;
    currentAnchorRect: DOMRectInit;
}
export declare enum AdaptDropdownCloseReason {
    Esc = 0,
    ClickInside = 1,
    ClickOutside = 2,
    Destroy = 3
}
export declare type AdaptDropdownTogglerType = 'default' | 'link';
export interface AdaptDropdownAnimationEvent extends AnimationEvent {
    eventInvokedFrom: FocusOrigin;
}
