import { ElementRef, OnDestroy, OnInit, Renderer2, TemplateRef } from '@angular/core';
import { Router } from '@angular/router';
import { AdaptModalService } from '@bmc-ux/adapt-angular';
import { ColumnConfig, DataCellTemplateParams, TableCustomTexts } from '@bmc-ux/adapt-table';
import { RxCurrentUserService, RxGlobalCacheService, RxNotificationService, RxOverlayService, RxPageTitleService, RxSmartReportingService } from '@helix/platform/shared/api';
import { TranslateService } from '@ngx-translate/core';
import { Observable } from 'rxjs';
import { AxBundleDeploymentService, IWorkspaceBundle } from '../../services/bundle-deployment';
import { BundleTypeFilter, EditableBundleFilter } from './workspace.types';
import { RxGainsightConfiguratorService } from '@helix/platform/shared/components';
import * as i0 from "@angular/core";
export declare class WorkspaceComponent implements OnInit, OnDestroy {
    private rxCurrentUserService;
    private rxGlobalCacheService;
    private rxOverlayService;
    private rxPageTitleService;
    private translateService;
    private rxSmartReportingService;
    private rxNotificationService;
    private axBundleDeploymentService;
    private adaptModalService;
    private router;
    private renderer;
    private rxGainsightConfiguratorService;
    bundleTypeSelectorModel: boolean[];
    bundleTypes: {
        application: string;
        library: string;
    };
    columns: ColumnConfig[];
    editableBundles: string[];
    editableBundleSelectorModel: boolean[];
    isBusinessAnalyst: boolean;
    isShared: boolean;
    isInstallBundleActionAvailable: boolean;
    innovationStudioBundleId: string;
    isLoadingData: boolean;
    isNewBundleActionAvailable: boolean;
    texts: TableCustomTexts;
    private applicationLabel;
    private bundleTypeSelector$;
    private destroyed$;
    private editableBundleSelector$;
    private libraryLabel;
    smartReportingUrl: string;
    fileInput: ElementRef;
    private bundles$;
    bundlesToDisplay$: Observable<IWorkspaceBundle[]>;
    nameColumnTemplate: TemplateRef<DataCellTemplateParams>;
    bundleTypeSelectorConfig: {
        name: any;
        value: BundleTypeFilter;
    }[];
    editableBundleSelectorConfig: {
        name: any;
        value: EditableBundleFilter;
    }[];
    constructor(rxCurrentUserService: RxCurrentUserService, rxGlobalCacheService: RxGlobalCacheService, rxOverlayService: RxOverlayService, rxPageTitleService: RxPageTitleService, translateService: TranslateService, rxSmartReportingService: RxSmartReportingService, rxNotificationService: RxNotificationService, axBundleDeploymentService: AxBundleDeploymentService, adaptModalService: AdaptModalService, router: Router, renderer: Renderer2, rxGainsightConfiguratorService: RxGainsightConfiguratorService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    updateBundleType(bundleTypeSelectorModel: boolean[]): void;
    toggleEditableBundles(editableSelectorModel: boolean[]): void;
    openFileDialog(): void;
    onClickFileInput(event: Event): void;
    onChangeFileInput(event: Event): void;
    createBundle(bundleType: string): void;
    private openModal;
    private setPageTitle;
    static ɵfac: i0.ɵɵFactoryDeclaration<WorkspaceComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<WorkspaceComponent, "ax-workspace", never, {}, {}, never, never>;
}
