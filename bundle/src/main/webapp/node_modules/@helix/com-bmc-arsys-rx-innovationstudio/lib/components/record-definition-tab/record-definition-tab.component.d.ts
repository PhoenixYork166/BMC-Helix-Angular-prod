import { OnDestroy, OnInit, TemplateRef } from '@angular/core';
import { Router } from '@angular/router';
import { IRecordDefinition, RxRecordDefinitionDataPageService, RxRecordDefinitionService, RxRecordInstanceService, RxRecordInstanceUpdateService, RxRecordInstanceDataPageService } from '@helix/platform/record/api';
import { IBundleDescriptor, IDataPageResult, RxBundleCacheService, RxCommandFactoryService, RxFeatureService, RxNotificationService, RxOverlayService } from '@helix/platform/shared/api';
import { RxModalService } from '@helix/platform/ui-kit';
import { IRowDataItem } from '@helix/platform/view/api';
import { IRecordGridColumn } from '@helix/platform/view/components';
import { TranslateService } from '@ngx-translate/core';
import { Observable } from 'rxjs';
import { IRenameAction } from '../bundle-definitions/bundle-definitions.types';
import { IDefinitionActionConfig } from '../bundle-details/bundle-details.types';
import { RxCopyDefinitionService } from '../copy-definition/copy-definition.service';
import { DefinitionTabComponent } from '../definition-tab/definition-tab.component';
import { ExternalRecordWizardService } from '../external-record-wizard/external-record-wizard.service';
import { JoinRecordWizardService } from '../join-record-wizard/join-record-wizard.service';
import * as i0 from "@angular/core";
export declare class RecordDefinitionTabComponent implements OnInit, OnDestroy {
    private rxRecordDefinitionDataPageService;
    private rxBundleCache;
    private rxOverlayService;
    private rxModalService;
    private translateService;
    private rxCommandFactoryService;
    private router;
    private rxCopyDefinitionService;
    private joinRecordWizardService;
    private externalRecordWizardService;
    private rxRecordDefinitionService;
    private rxNotificationService;
    private rxRecordInstanceService;
    private rxRecordInstanceUpdateService;
    private rxRecordInstanceDataPageService;
    private rxFeatureService;
    bundleDescriptor: IBundleDescriptor;
    recordDefinitionTypeTemplate: TemplateRef<any>;
    definitionTabComponent: DefinitionTabComponent;
    editRouterLink: string;
    private rowSelectionChanged$;
    private destroyed$;
    private areNewDefinitionsAllowed;
    definitionActions$: Observable<IDefinitionActionConfig[]>;
    gridColumns: IRecordGridColumn[];
    definitions$: Observable<IDataPageResult>;
    recordDefinition: Partial<IRecordDefinition>;
    isActionInProgress: boolean;
    private dataEditorRoute;
    constructor(rxRecordDefinitionDataPageService: RxRecordDefinitionDataPageService, rxBundleCache: RxBundleCacheService, rxOverlayService: RxOverlayService, rxModalService: RxModalService, translateService: TranslateService, rxCommandFactoryService: RxCommandFactoryService, router: Router, rxCopyDefinitionService: RxCopyDefinitionService, joinRecordWizardService: JoinRecordWizardService, externalRecordWizardService: ExternalRecordWizardService, rxRecordDefinitionService: RxRecordDefinitionService, rxNotificationService: RxNotificationService, rxRecordInstanceService: RxRecordInstanceService, rxRecordInstanceUpdateService: RxRecordInstanceUpdateService, rxRecordInstanceDataPageService: RxRecordInstanceDataPageService, rxFeatureService: RxFeatureService);
    ngOnInit(): void;
    onDeleteDefinition(selectedRows: IRowDataItem[]): void;
    private getDefinitionActions;
    onRowSelectionChanged(selectedRows: IRowDataItem[]): void;
    onCustomAction(event: {
        actionId: string;
        selectedRows: IRowDataItem[];
    }): void;
    onCopyDefinition(row: IRowDataItem): void;
    onRenameDefinition({ selectedRow, definitionNames }: IRenameAction): void;
    onRevertCustomization(selectedRows: IRowDataItem[]): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RecordDefinitionTabComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RecordDefinitionTabComponent, "ax-record-definition-tab", never, { "bundleDescriptor": "bundleDescriptor"; }, {}, never, never>;
}
