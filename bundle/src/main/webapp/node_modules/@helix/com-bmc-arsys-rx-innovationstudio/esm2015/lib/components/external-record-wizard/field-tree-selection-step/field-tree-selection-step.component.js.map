{"version":3,"file":"field-tree-selection-step.component.js","sourceRoot":"","sources":["../../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/components/external-record-wizard/field-tree-selection-step/field-tree-selection-step.component.ts","../../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/components/external-record-wizard/field-tree-selection-step/field-tree-selection-step.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnDestroy, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AdaptTreeNode, RxSelectOption, TreeWrap } from '@bmc-ux/adapt-angular';\nimport { IDocumentDefinition, RxDocumentDefinitionService } from '@helix/platform/document/api';\nimport { IRecordDefinition, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IDataPageResult, RxDefinitionNameService } from '@helix/platform/shared/api';\nimport { RxWizardModalComponent } from '@helix/platform/shared/components';\nimport { RxJsonParserService } from '@helix/platform/utils';\nimport { IRecordGridColumn, IRecordGridConfig, RecordGridComponent } from '@helix/platform/view/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  cloneDeep,\n  find,\n  forEach,\n  head,\n  includes,\n  isArray,\n  isEmpty,\n  isEqual,\n  isObject,\n  reduce,\n  remove,\n  some,\n  sortBy\n} from 'lodash';\nimport { combineLatest, Observable, of, ReplaySubject } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  shareReplay,\n  skipWhile,\n  switchMap,\n  takeUntil,\n  withLatestFrom\n} from 'rxjs/operators';\nimport { AX_BUNDLE_DETAILS } from '../../bundle-details/bundle-details.constant';\nimport {\n  IExternalRecordWizardContext,\n  IWebApiDocumentSchemaField,\n  IWebApiDocumentTreeNode\n} from '../external-record-wizard.types';\n\n@Component({\n  selector: 'ax-field-tree-selection-step',\n  templateUrl: 'field-tree-selection-step.component.html',\n  styleUrls: ['./field-tree-selection-step.component.scss']\n})\nexport class FieldTreeSelectionStepComponent implements OnInit, OnDestroy {\n  @ViewChild(RecordGridComponent, { static: true })\n  recordGrid: RecordGridComponent;\n\n  @ViewChild('typeCellTemplate', { static: true })\n  typeCellTemplate: TemplateRef<any>;\n\n  @ViewChild('deleteCellTemplate', { static: true })\n  deleteCellTemplate: TemplateRef<any>;\n\n  availableFieldsSectionLabel: string;\n  mapToDisplayIdLabel: string;\n  mapToIdLabel: string;\n  selectedFieldsSectionLabel: string;\n\n  documentName: string;\n  documentTree: AdaptTreeNode[];\n  recordGridConfig$: Observable<IRecordGridConfig>;\n  selectedDocumentTreeNodes: IWebApiDocumentTreeNode[] = [];\n  treeWrap: TreeWrap = TreeWrap.WrapAll;\n  selectedDocumentSchemaFields: IWebApiDocumentSchemaField[] = [];\n\n  selectedFieldsGroup: FormGroup = new FormGroup({});\n\n  mappingGroup: FormGroup = new FormGroup({\n    displayId: new FormControl([]),\n    id: new FormControl([])\n  });\n\n  supportedFieldTypes = ['boolean', 'character', 'dateOnly', 'dateTime', 'decimal', 'integer', 'real', 'timeOnly'];\n\n  fieldTypes: RxSelectOption[] = sortBy(\n    reduce(\n      RX_RECORD_DEFINITION.dataTypes,\n      (result, type, key) => {\n        if (includes(this.supportedFieldTypes, key)) {\n          result.push(type);\n        }\n\n        return result;\n      },\n      []\n    ),\n    'displayName'\n  );\n\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  constructor(\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxDocumentDefinitionService: RxDocumentDefinitionService,\n    private rxJsonParserService: RxJsonParserService,\n    private rxWizardModalComponent: RxWizardModalComponent,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit(): void {\n    this.availableFieldsSectionLabel = this.translateService.instant(\n      'com.bmc.arsys.rx.innovation-studio.external-record-wizard.field-tree-selection.available-fields.section.label'\n    );\n    this.mapToDisplayIdLabel = this.translateService.instant(\n      'com.bmc.arsys.rx.innovation-studio.external-record-wizard.field-tree-selection.map-to-display-id.label'\n    );\n    this.mapToIdLabel = this.translateService.instant(\n      'com.bmc.arsys.rx.innovation-studio.external-record-wizard.field-tree-selection.map-to-id.label'\n    );\n    this.selectedFieldsSectionLabel = this.translateService.instant(\n      'com.bmc.arsys.rx.innovation-studio.external-record-wizard.field-tree-selection.selected-fields.section.label'\n    );\n\n    const gridColumns: IRecordGridColumn[] = [\n      {\n        fieldId: AX_BUNDLE_DETAILS.definitionGridColumns.name.fieldId,\n        title: this.translateService.instant(AX_BUNDLE_DETAILS.definitionGridColumns.name.title)\n      },\n      {\n        fieldId: 'type',\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.item-type.label'),\n        sortable: false,\n        cellTemplate: this.typeCellTemplate\n      },\n      {\n        fieldId: 'delete',\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n        sortable: false,\n        cellTemplate: this.deleteCellTemplate\n      }\n    ];\n\n    const gridRecordDefinition: IRecordDefinition = {\n      fieldDefinitions: [\n        {\n          id: AX_BUNDLE_DETAILS.definitionGridColumns.name.fieldId,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'type',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'delete',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        }\n      ]\n    };\n\n    this.recordGridConfig$ = of({\n      columns: gridColumns,\n      emptyStateLabelText: this.translateService.instant(\n        'com.bmc.arsys.rx.innovation-studio.external-record-wizard.field-tree-selection.grid.empty-state.label'\n      ),\n      enableFiltering: false,\n      enableRowSelection: null,\n      recordIdField: AX_BUNDLE_DETAILS.definitionGridColumns.name.fieldId,\n      styles: 'flex-fill',\n      toolbarConfig: {\n        filter: false,\n        visibleColumnsMenu: false\n      },\n      useExternalFiltering: false,\n      getRecordDefinition: () => of(gridRecordDefinition),\n      getData: (): Observable<IDataPageResult> =>\n        of({\n          data: this.selectedDocumentSchemaFields,\n          totalSize: this.selectedDocumentSchemaFields.length\n        })\n    });\n\n    const fieldTreeSelectionStepContext$ = this.rxWizardModalComponent.context$.pipe(\n      shareReplay(1),\n      takeUntil(this.destroyed$)\n    );\n\n    fieldTreeSelectionStepContext$\n      .pipe(\n        map((stepContext: IExternalRecordWizardContext) => stepContext.document?.name),\n        distinctUntilChanged(isEqual),\n        switchMap((documentName: string) => {\n          this.selectedDocumentTreeNodes = [];\n          this.selectedDocumentSchemaFields = [];\n\n          this.rxWizardModalComponent.api.updateContext({\n            documentSchemaFields: [],\n            nonDocumentSchemaFields: []\n          });\n\n          if (documentName) {\n            return this.rxDocumentDefinitionService.get(documentName);\n          } else {\n            return of();\n          }\n        }),\n        skipWhile(isEmpty)\n      )\n      .subscribe((documentDefinition: IDocumentDefinition) => {\n        this.documentTree = [\n          {\n            data: documentDefinition.guid,\n            label: this.rxDefinitionNameService.getDisplayName(documentDefinition.name),\n            children: this.prepareTreeForAdapt(documentDefinition.documentSchema, []),\n            expanded: true,\n            disallowMultipleNodeSelection: true\n          }\n        ];\n\n        this.recordGrid.api.refresh().subscribe();\n      });\n\n    const isCurrentStep$ = combineLatest([\n      this.rxWizardModalComponent.steps$,\n      this.rxWizardModalComponent.tabIndex$\n    ]).pipe(\n      map(([steps, tabIndex]) => steps[tabIndex].id === 'field-tree-selection'),\n      takeUntil(this.destroyed$)\n    );\n\n    const documentSchemaFields$ = fieldTreeSelectionStepContext$.pipe(\n      map((stepContext: IExternalRecordWizardContext) => stepContext.documentSchemaFields),\n      distinctUntilChanged(isEqual)\n    );\n\n    combineLatest([isCurrentStep$, documentSchemaFields$])\n      .pipe(\n        filter(([isCurrentStep, documentSchemaFields]) => isCurrentStep),\n        distinctUntilChanged(isEqual)\n      )\n      .subscribe(([isCurrentStep, documentSchemaFields]) => {\n        if (documentSchemaFields.length) {\n          this.rxWizardModalComponent.api.enableNextButton();\n        } else {\n          this.rxWizardModalComponent.api.disableNextButton();\n        }\n\n        forEach(this.mappingGroup.controls, (formControl: FormControl) => {\n          if (formControl.value.length && !some(documentSchemaFields, ['path', formControl.value[0].path])) {\n            formControl.reset([]);\n          }\n        });\n      });\n\n    this.mappingGroup.valueChanges.pipe(takeUntil(this.destroyed$)).subscribe((mappedValues) => {\n      const selectedFieldMapping = {\n        displayId: (mappedValues.displayId && mappedValues.displayId[0]?.path) || '',\n        id: (mappedValues.id && mappedValues.id[0]?.path) || ''\n      };\n\n      this.rxWizardModalComponent.api.updateContext({ selectedFieldMapping });\n    });\n\n    this.selectedFieldsGroup.valueChanges\n      .pipe(withLatestFrom(this.rxWizardModalComponent.context$), takeUntil(this.destroyed$))\n      .subscribe(([value, context]) => {\n        const documentSchemaFields = cloneDeep(context.documentSchemaFields);\n\n        documentSchemaFields.forEach((field: IWebApiDocumentSchemaField) => {\n          field.type = value[field.path][0].resourceType;\n        });\n\n        this.rxWizardModalComponent.api.updateContext({ documentSchemaFields });\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  getCoreFieldMappingOptions(): IWebApiDocumentSchemaField[] {\n    return sortBy(this.selectedDocumentSchemaFields, 'name');\n  }\n\n  optionFormatter(selectOption: RxSelectOption): string {\n    return selectOption.displayName || selectOption.name;\n  }\n\n  selectFields(): void {\n    this.selectedDocumentSchemaFields = this.selectedDocumentTreeNodes.reduce(\n      (result, node: IWebApiDocumentTreeNode) => {\n        if (!node.children) {\n          const field: IWebApiDocumentSchemaField = {\n            name: node.name,\n            path: node.path,\n            type: RX_RECORD_DEFINITION.dataTypes.character.resourceType\n          };\n\n          if (!node.disallowMultipleNodeSelection) {\n            node.disallowMultipleNodeSelection = true;\n\n            this.selectedFieldsGroup.setControl(node.path, new FormControl([RX_RECORD_DEFINITION.dataTypes.character]));\n          }\n\n          result.push(field);\n        }\n\n        return result;\n      },\n      []\n    );\n\n    this.rxWizardModalComponent.api.updateContext({\n      documentSchemaFields: cloneDeep(this.selectedDocumentSchemaFields)\n    });\n\n    this.recordGrid.api.refresh().subscribe();\n  }\n\n  unselectField(field: IWebApiDocumentSchemaField): void {\n    find(this.selectedDocumentTreeNodes, { data: field.path }).disallowMultipleNodeSelection = false;\n\n    this.selectedDocumentTreeNodes = this.selectedDocumentTreeNodes.filter(\n      (node) => node.data !== field.path && !node.children?.some((element) => element.data === field.path)\n    );\n\n    remove(this.selectedDocumentSchemaFields, { path: field.path });\n\n    this.rxWizardModalComponent.api.updateContext({\n      documentSchemaFields: cloneDeep(this.selectedDocumentSchemaFields)\n    });\n\n    this.recordGrid.api.refresh().subscribe();\n  }\n\n  private prepareTreeForAdapt(\n    documentSchema: string,\n    selectedFields: IWebApiDocumentSchemaField[]\n  ): IWebApiDocumentTreeNode[] {\n    let documentSchemaJson = this.rxJsonParserService.tryParseJson(documentSchema, {});\n\n    if (isArray(documentSchemaJson)) {\n      documentSchemaJson = head(documentSchemaJson);\n    }\n\n    return this.deepProcessJson(documentSchemaJson, '', [], selectedFields);\n  }\n\n  // Due to backend limitation, arrays can be processed only once per node\n  // i.e. all arrays nested in arrays should be displayed as a leaf and in the tree\n  // In runtime server will store complete stringified array as a value in record definition\n  private deepProcessJson(\n    json,\n    currentPath: string,\n    arraysProcessedInPath: string[],\n    selectedFields: IWebApiDocumentSchemaField[],\n    parentNode?: IWebApiDocumentTreeNode\n  ): IWebApiDocumentTreeNode[] {\n    return reduce(\n      json,\n      (tree, value, key) => {\n        const path = (currentPath ? currentPath + '||' : '') + key;\n        const isNodeSelected = some(selectedFields, ['path', path]);\n        let childNodes = null;\n\n        const node = {\n          name: key,\n          label: key,\n          data: path,\n          path,\n          type: RX_RECORD_DEFINITION.resourceTypes.character,\n          isArray: isArray(value),\n          parent: parentNode,\n          children: null,\n          expanded: true,\n          disallowMultipleNodeSelection: null\n        };\n\n        if (isArray(value)) {\n          const arrayHasBeenProcessedInSamePath = arraysProcessedInPath.some(\n            (processedPath) => path.indexOf(processedPath) !== -1\n          );\n\n          if (!arrayHasBeenProcessedInSamePath) {\n            arraysProcessedInPath.push(path);\n\n            childNodes = this.flattenListStructure(value, path, arraysProcessedInPath, selectedFields, node);\n          }\n        } else if (isObject(value)) {\n          childNodes = this.deepProcessJson(value, path, arraysProcessedInPath, selectedFields, node);\n        }\n\n        node.children = childNodes;\n        node.disallowMultipleNodeSelection = Boolean(childNodes);\n\n        tree.push(node);\n\n        return tree;\n      },\n      []\n    );\n  }\n\n  private flattenListStructure(\n    list: any[],\n    currentPath: string,\n    arraysProcessedInPath: string[],\n    selectedFields: IWebApiDocumentSchemaField[],\n    parentNode: IWebApiDocumentTreeNode\n  ): IWebApiDocumentTreeNode[] {\n    const entry = head(list);\n\n    return isObject(entry)\n      ? this.deepProcessJson(entry, currentPath, arraysProcessedInPath, selectedFields, parentNode)\n      : [];\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-5 d-flex flex-column pr-0 mh-100\">\n    <adapt-rx-control-label [label]=\"availableFieldsSectionLabel\"></adapt-rx-control-label>\n    <div class=\"border h-100 p-1 field-tree-wrapper\">\n      <adapt-tree\n        [(selection)]=\"selectedDocumentTreeNodes\"\n        [value]=\"documentTree\"\n        [wrap]=\"treeWrap\"\n        selectionMode=\"checkbox\"\n      ></adapt-tree>\n    </div>\n  </div>\n\n  <div class=\"col-1 d-flex align-items-center\">\n    <button\n      type=\"button\"\n      adapt-button\n      btn-type=\"secondary\"\n      class=\"d-icon-angle_right\"\n      rx-id=\"add-button\"\n      (click)=\"selectFields()\"\n    ></button>\n  </div>\n\n  <div class=\"col-6 d-flex flex-column pl-0\">\n    <adapt-rx-control-label [label]=\"selectedFieldsSectionLabel\" [showRequiredLabel]=\"true\"></adapt-rx-control-label>\n\n    <rx-record-grid class=\"form-group\" [config]=\"recordGridConfig$\"></rx-record-grid>\n\n    <div class=\"d-flex flex-column control-width\">\n      <adapt-rx-select\n        class=\"form-group\"\n        appendToBody=\"true\"\n        [formControl]=\"mappingGroup.controls.displayId\"\n        [label]=\"mapToDisplayIdLabel\"\n        [options]=\"getCoreFieldMappingOptions()\"\n        [optionFormatter]=\"optionFormatter\"\n      >\n      </adapt-rx-select>\n      <adapt-rx-select\n        appendToBody=\"true\"\n        [formControl]=\"mappingGroup.controls.id\"\n        [label]=\"mapToIdLabel\"\n        [options]=\"getCoreFieldMappingOptions()\"\n        [optionFormatter]=\"optionFormatter\"\n      >\n      </adapt-rx-select>\n    </div>\n  </div>\n</div>\n\n<ng-template #typeCellTemplate let-dataItem=\"dataItem\">\n  <adapt-rx-select\n    class=\"type-selector\"\n    appendToBody=\"true\"\n    [formControl]=\"selectedFieldsGroup.controls[dataItem.path]\"\n    [options]=\"fieldTypes\"\n    [optionFormatter]=\"optionFormatter\"\n    [popupMaxHeight]=\"290\"\n  >\n  </adapt-rx-select>\n</ng-template>\n\n<ng-template #deleteCellTemplate let-dataItem=\"dataItem\">\n  <button\n    class=\"unselect-field-button d-icon-minus_circle text-danger\"\n    adapt-button\n    btn-type=\"tertiary\"\n    type=\"button\"\n    (click)=\"unselectField(dataItem)\"\n  ></button>\n</ng-template>\n"]}