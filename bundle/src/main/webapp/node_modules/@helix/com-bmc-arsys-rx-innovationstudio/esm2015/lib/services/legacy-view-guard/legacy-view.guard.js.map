{"version":3,"file":"legacy-view.guard.js","sourceRoot":"","sources":["../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/services/legacy-view-guard/legacy-view.guard.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n\nimport {\n  RX_APPLICATION,\n  RxAngularApplicationService,\n  RxDefinitionNameService,\n  RxLogService\n} from '@helix/platform/shared/api';\nimport { RxViewDefinitionService } from '@helix/platform/view/api';\nimport { includes } from 'lodash';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AxLegacyViewGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private rxAngularApplicationService: RxAngularApplicationService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxViewDefinitionService: RxViewDefinitionService,\n    private rxLogService: RxLogService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> {\n    const { bundleId, definitionName } = route.params;\n\n    const effectiveBundleId = bundleId || this.rxDefinitionNameService.getBundleId(definitionName);\n\n    return forkJoin({\n      isAngularJsViewDesigner: this.rxAngularApplicationService.isAngularJsViewDesignerBundle(effectiveBundleId),\n      viewDefinition: definitionName\n        ? this.rxViewDefinitionService.get(definitionName, {\n            headers: new HttpHeaders({\n              'Design-Time': 'true',\n              'default-bundle-scope': effectiveBundleId\n            })\n          })\n        : of(null)\n    }).pipe(\n      map(({ isAngularJsViewDesigner, viewDefinition }) => {\n        if (route.routeConfig.path.includes('new')) {\n          if (isAngularJsViewDesigner && route.routeConfig.data?.routerGroup !== 'legacy-designer') {\n            return this.router.createUrlTree(\n              [RX_APPLICATION.innovationStudioBundleId, 'view', 'new-legacy', effectiveBundleId],\n              {\n                queryParams: route.queryParams\n              }\n            );\n          } else if (!isAngularJsViewDesigner && route.routeConfig.data?.routerGroup === 'legacy-designer') {\n            return this.router.createUrlTree(\n              [RX_APPLICATION.innovationStudioBundleId, 'view', 'new', effectiveBundleId],\n              {\n                queryParams: route.queryParams\n              }\n            );\n          } else {\n            return true;\n          }\n        }\n\n        const isAngularJsEditMode = isAngularJsViewDesigner && !includes(viewDefinition?.layout, '\"outlets\"');\n\n        if (!isAngularJsEditMode && route.routeConfig.data?.routerGroup === 'legacy-designer') {\n          return this.router.createUrlTree([RX_APPLICATION.innovationStudioBundleId, 'view', 'edit', definitionName]);\n        } else if (isAngularJsEditMode && route.routeConfig.data?.routerGroup !== 'legacy-designer') {\n          return this.router.createUrlTree([\n            RX_APPLICATION.innovationStudioBundleId,\n            'view',\n            'edit-legacy',\n            definitionName\n          ]);\n        } else {\n          return true;\n        }\n      }),\n      catchError((error) => {\n        this.rxLogService.error(error.message);\n\n        return of(\n          this.router.createUrlTree([RX_APPLICATION.innovationStudioBundleId, effectiveBundleId, 'view-definitions'])\n        );\n      })\n    );\n  }\n}\n"]}