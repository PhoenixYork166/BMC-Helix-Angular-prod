{"version":3,"file":"add-bundle-content-data-wizard-step.component.js","sourceRoot":"","sources":["../../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/components/bundle-action-wizard/add-bundle-content-data-wizard-step/add-bundle-content-data-wizard-step.component.ts","../../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/components/bundle-action-wizard/add-bundle-content-data-wizard-step/add-bundle-content-data-wizard-step.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Injector, Input, OnDestroy, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { IAssociationDescriptor } from '@helix/platform/association/api';\nimport {\n  IFieldDefinition,\n  IRecordDefinition,\n  RX_RECORD_DEFINITION,\n  RxRecordDefinitionCacheService\n} from '@helix/platform/record/api';\nimport {\n  ExpressionOperatorGroup,\n  IDataDictionary,\n  IPlainObject,\n  RxDefinitionNameService\n} from '@helix/platform/shared/api';\nimport {\n  IExpressionEditorPropertyChange,\n  IExpressionFormControlOptions,\n  RxExpressionEditorService,\n  RxWizardModalComponent\n} from '@helix/platform/shared/components';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport {\n  IRecordGridColumn,\n  IRecordGridConfig,\n  RecordGridComponent,\n  RowSelectionMode,\n  RxRecordGridUtilsService\n} from '@helix/platform/view/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  assign,\n  chain,\n  cloneDeep,\n  differenceBy,\n  find,\n  head,\n  includes,\n  isArray,\n  isEmpty,\n  isNil,\n  keys,\n  reduce,\n  reject,\n  truncate\n} from 'lodash';\nimport { forkJoin, Observable, of, ReplaySubject } from 'rxjs';\nimport { map, pairwise, startWith, switchMap, take, takeUntil, tap, withLatestFrom } from 'rxjs/operators';\nimport { AX_BUNDLE_DETAILS } from '../../bundle-details/bundle-details.constant';\nimport { AX_ADD_DATA_WIZARD_STEP } from './add-bundle-content-data-wizard-step.constant';\nimport { DataFilterColumnExpressionConfiguratorClass } from './components/data-filter-column-expression-configurator.class';\nimport { GlobalDataFilterExpressionConfiguratorClass } from './components/global-data-filter-expression-configurator.class';\n\ninterface IDataImportOptionsByRecordDefinitionName {\n  dataFilter?: string;\n  dataFilterExpression?: string;\n  dataFilterColumnExpressionFormControlOptions?: IPlainObject;\n  defaultFilter?: string;\n  duplicateDataActionType: string | string[];\n  ignoreRuleExecution?: boolean;\n}\n\ninterface IRecordDefinitionData extends IDataImportOptionsByRecordDefinitionName {\n  aliasName?: string;\n  dataSource: string;\n  disabled: boolean;\n  name: string;\n  selected?: string;\n  shouldExportData: boolean;\n}\n\n@Component({\n  selector: 'ax-add-bundle-content-data-wizard-step',\n  templateUrl: 'add-bundle-content-data-wizard-step.component.html',\n  styleUrls: ['./add-bundle-content-data-wizard-step.component.scss']\n})\nexport class AddBundleContentDataWizardStepComponent implements OnInit, OnDestroy {\n  @Input()\n  options: IPlainObject;\n\n  @ViewChild('definitionsDataGrid', { static: true })\n  definitionsDataGrid: RecordGridComponent;\n\n  @ViewChild('recordNameCellTemplate', { static: true })\n  recordNameCellTemplate: TemplateRef<any>;\n\n  @ViewChild('dataFilterCellTemplate', { static: true })\n  dataFilterCellTemplate: TemplateRef<any>;\n\n  @ViewChild('ignoreRulesCellTemplate', { static: true })\n  ignoreRulesCellTemplate: TemplateRef<any>;\n\n  @ViewChild('duplicateDataActionTypeCellTemplate', { static: true })\n  duplicateDataActionTypeCellTemplate: TemplateRef<any>;\n\n  addDataForm: FormGroup;\n  recordDefinitionsFormControl: FormControl = new FormControl();\n  dataFilterColumnExpressionFormControlOptions: IExpressionFormControlOptions;\n  globalDataFilterExpressionFormControlOptions: IExpressionFormControlOptions;\n  duplicateDataActionTypeOptions: RxSelectOption[] = keys(AX_ADD_DATA_WIZARD_STEP.duplicateDataActionTypes);\n  recordDefinitions: IRecordDefinitionData[] = [];\n  selectedDataSources: IPlainObject = {};\n  selectedDefinitions: IRecordDefinitionData[] = [];\n\n  duplicateConfigurationDataActionTypeOptions: RxSelectOption[] = chain(\n    AX_ADD_DATA_WIZARD_STEP.duplicateDataActionTypes\n  )\n    .pick(['THROW_ERROR', 'REPLACE'])\n    .keys()\n    .value();\n\n  recordGridConfig$: Observable<IRecordGridConfig>;\n\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n  private isSingleSelectDataSourceSelected: boolean;\n  protected dataFilterColumnExpressionConfigurator;\n  protected globalDataFilterExpressionConfigurator;\n\n  constructor(\n    private injector: Injector,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxExpressionEditorService: RxExpressionEditorService,\n    private rxModalService: RxModalService,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxRecordGridUtilsService: RxRecordGridUtilsService,\n    private rxWizardModalComponent: RxWizardModalComponent,\n    private translateService: TranslateService\n  ) {\n    this.optionFormatter = this.optionFormatter.bind(this);\n    this.titleFormatter = this.titleFormatter.bind(this);\n  }\n\n  ngOnInit(): void {\n    this.dataFilterColumnExpressionConfigurator = new DataFilterColumnExpressionConfiguratorClass(this.injector);\n    this.globalDataFilterExpressionConfigurator = new GlobalDataFilterExpressionConfiguratorClass(this.injector);\n\n    this.globalDataFilterExpressionConfigurator.configureForProperty({\n      propertyPath: 'globalDataFilter',\n      operators: this.globalDataFilterExpressionConfigurator.getOperatorRowsByGroup(ExpressionOperatorGroup.All),\n      dataDictionary$: this.globalDataFilterExpressionConfigurator.commonDataDictionary$\n    });\n\n    this.globalDataFilterExpressionFormControlOptions = {\n      isLabelHidden: true,\n      dataDictionary$: this.globalDataFilterExpressionConfigurator.getDataDictionary('globalDataFilter'),\n      operators: this.globalDataFilterExpressionConfigurator.getOperators(),\n      clickToBuildExpressionLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.innovation-studio.bundle-action-wizard.add-data.expression-editor.global-data-filter.click-to-build-expression.label'\n      )\n    };\n\n    const gridColumns: IRecordGridColumn[] = [\n      {\n        fieldId: 'dataSource',\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.bundle-action-wizard.add-data.data-source.label'\n        ),\n        wrapText: true,\n        cellTemplate: this.recordNameCellTemplate\n      },\n      {\n        fieldId: AX_BUNDLE_DETAILS.definitionGridColumns.name.fieldId,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.bundle-action-wizard.add-data.name.label'\n        ),\n        wrapText: true,\n        visible: false,\n        cellTemplate: this.recordNameCellTemplate\n      },\n      {\n        fieldId: 'aliasName',\n        wrapText: true,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.bundle-action-wizard.add-data.alias-name.label'\n        ),\n        visible: false\n      },\n      {\n        fieldId: 'dataFilterExpression',\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.bundle-action-wizard.add-data.data-filter.label'\n        ),\n        cellTemplate: this.dataFilterCellTemplate\n      },\n      {\n        fieldId: 'dataFilterColumnExpressionFormControlOptions',\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.bundle-action-wizard.add-data.data-filter.label'\n        ),\n        visible: false\n      },\n      {\n        fieldId: 'ignoreRuleExecution',\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.bundle-action-wizard.add-data.ignore-rules.label'\n        ),\n        cellTemplate: this.ignoreRulesCellTemplate\n      },\n      {\n        fieldId: 'duplicateDataActionType',\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.bundle-action-wizard.add-data.duplicates.label'\n        ),\n        cellTemplate: this.duplicateDataActionTypeCellTemplate\n      }\n    ].filter((column) => includes(this.options.gridConfig.columns, column.fieldId));\n\n    const gridRecordDefinition: IRecordDefinition = {\n      fieldDefinitions: [\n        {\n          id: 'dataSource',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: AX_BUNDLE_DETAILS.definitionGridColumns.name.fieldId,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'aliasName',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'dataFilterExpression',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'dataFilterColumnExpressionFormControlOptions',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.object\n        },\n        {\n          id: 'ignoreRuleExecution',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'duplicateDataActionType',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        }\n      ].filter((definition) => includes(this.options.gridConfig.columns, definition.id))\n    };\n\n    this.rxWizardModalComponent.context$.pipe(take(1)).subscribe((context) => {\n      context.cache.recordDefinitions.forEach((recordDefinition) => {\n        this.dataFilterColumnExpressionConfigurator.configureForProperty({\n          propertyPath: `dataFilterExpression:${recordDefinition.name}`,\n          operators: this.dataFilterColumnExpressionConfigurator.getOperatorRowsByGroup(ExpressionOperatorGroup.All),\n          dataDictionary$: this.dataFilterColumnExpressionConfigurator.commonDataDictionary$.pipe(\n            switchMap((commonDataDictionary) =>\n              this.rxRecordGridUtilsService.getAssociationDescriptors(recordDefinition.name).pipe(\n                switchMap((associationDescriptors) =>\n                  forkJoin([\n                    this.rxRecordDefinitionCacheService.getRecordDefinition(recordDefinition.name),\n                    ...associationDescriptors.map((associationDescriptor) =>\n                      this.rxRecordDefinitionCacheService.getRecordDefinition(\n                        associationDescriptor.recordDefinitionName\n                      )\n                    )\n                  ]).pipe(\n                    map((definitions) => [\n                      commonDataDictionary[0],\n                      {\n                        label: this.translateService.instant(\n                          'com.bmc.arsys.rx.innovation-studio.bundle-action-wizard.add-data.expression-editor.data-dictionary.values.definition-fields.title',\n                          {\n                            definitionName: this.rxDefinitionNameService.getDisplayName(recordDefinition.name)\n                          }\n                        ),\n                        expanded: true,\n                        children: [\n                          ...chain(definitions)\n                            .find({ name: recordDefinition.name })\n                            .get('fieldDefinitions')\n                            .map((fieldDefinition) => ({\n                              label: fieldDefinition.name,\n                              icon: 'd-icon-field_text',\n                              expression: `'${fieldDefinition.id}'`\n                            }))\n                            .value(),\n                          isEmpty(associationDescriptors)\n                            ? []\n                            : {\n                                label: this.translateService.instant(\n                                  'com.bmc.arsys.rx.client.approval.expression-editor.data-dictionary.values.record-definition-associations.title'\n                                ),\n                                children: associationDescriptors.map((associationDescriptor) => ({\n                                  label: `${this.rxDefinitionNameService.getDisplayName(\n                                    associationDescriptor.recordDefinitionName\n                                  )} (${associationDescriptor.label})`,\n                                  children: this.getAssociationsDataDictionary(\n                                    definitions,\n                                    associationDescriptor.recordDefinitionName,\n                                    associationDescriptor\n                                  )\n                                }))\n                              }\n                        ]\n                      }\n                    ])\n                  )\n                )\n              )\n            )\n          )\n        });\n      });\n\n      let recordDefinitions: IRecordDefinitionData[] = [];\n      let preSelectedRecordDefinitions: IRecordDefinitionData[] = [];\n\n      const recordDefinitionsByBundles = context.cache.recordDefinitions\n        .filter(\n          (recordDefinition) => recordDefinition.type !== RX_RECORD_DEFINITION.externalRecordDefinitionTypes.custom\n        )\n        .reduce((result, recordDefinition) => {\n          const newRecordDefinition: IRecordDefinitionData = {\n            duplicateDataActionType: [this.options.gridConfig.defaultDuplicateDataActionType],\n            aliasName: recordDefinition.aliasName,\n            name: recordDefinition.name,\n            dataSource:\n              recordDefinition.aliasName || this.rxDefinitionNameService.getDisplayName(recordDefinition.name),\n            shouldExportData: recordDefinition.shouldExportData,\n            ignoreRuleExecution: false,\n            disabled: recordDefinition.disabled || recordDefinition.selected,\n            selected: recordDefinition.selected,\n            dataFilter: recordDefinition.dataFilter,\n            dataFilterExpression: recordDefinition.dataFilterExpression || null,\n            defaultFilter: recordDefinition.defaultFilter || null,\n            dataFilterColumnExpressionFormControlOptions: {\n              isLabelHidden: true,\n              operators: this.dataFilterColumnExpressionConfigurator.getOperators(),\n              dataDictionary$: this.dataFilterColumnExpressionConfigurator.getDataDictionary(\n                `dataFilterExpression:${recordDefinition.name}`\n              )\n            }\n          };\n\n          const bundleFriendlyName =\n            context.bundleFriendlyNamesById[this.rxDefinitionNameService.getBundleId(newRecordDefinition.name)];\n\n          result[bundleFriendlyName] = result[bundleFriendlyName] || [];\n          result[bundleFriendlyName].push(newRecordDefinition);\n\n          return result;\n        }, {});\n\n      this.recordDefinitions = reduce(\n        recordDefinitionsByBundles,\n        (result, recordDefinitionList, bundleName) => {\n          result.push({ name: bundleName, children: recordDefinitionList });\n\n          preSelectedRecordDefinitions = preSelectedRecordDefinitions.concat(\n            recordDefinitionList.filter((recordDefinition) => recordDefinition.selected)\n          );\n\n          recordDefinitions = recordDefinitions.concat(recordDefinitionList);\n\n          return result;\n        },\n        []\n      );\n\n      this.addDataForm = new FormGroup({\n        globalDataFilter: new FormControl(null),\n        isConfigurationDataIncluded: new FormControl(context.deploymentPackageDescriptor.isConfigurationDataIncluded),\n        duplicateConfigurationDataActionType: new FormControl([\n          context.deploymentPackageDescriptor.duplicateDataActionTypeForConfigurationData\n        ])\n      });\n\n      this.recordDefinitionsFormControl.valueChanges\n        .pipe(startWith(null), pairwise(), takeUntil(this.destroyed$))\n        .subscribe(([prev, next]) => {\n          const selectedRows = this.definitionsDataGrid.api.getSelectedRows();\n          let newRows;\n\n          if (prev && prev.length !== next.length) {\n            this.definitionsDataGrid.api.refresh().subscribe();\n          }\n\n          if (prev) {\n            newRows = differenceBy(next, prev, 'dataSource');\n          } else {\n            newRows = next.filter((recordDefinition) => !recordDefinition.selected);\n          }\n\n          this.definitionsDataGrid.api.setSelectedRows([\n            ...newRows,\n            ...selectedRows.filter((row) => find(next, { dataSource: row.dataSource }))\n          ]);\n        });\n\n      this.recordDefinitionsFormControl.patchValue(preSelectedRecordDefinitions);\n\n      this.definitionsDataGrid.rowSelectionChanged.pipe(takeUntil(this.destroyed$)).subscribe((selectedRows) => {\n        const newDeploymentPackageDescriptor = cloneDeep(context.deploymentPackageDescriptor);\n        const singleSelectDataSource = find(selectedRows, 'isSingleSelect');\n\n        this.selectedDataSources = {};\n        this.selectedDefinitions = [];\n\n        selectedRows.forEach((row) => {\n          this.selectedDataSources[row.dataSource] = true;\n          this.selectedDefinitions.push(find(recordDefinitions, { dataSource: row.dataSource }));\n        });\n\n        if (selectedRows.length > 1 && singleSelectDataSource) {\n          if (this.isSingleSelectDataSourceSelected) {\n            this.rxModalService\n              .alert({\n                title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n                modalStyle: RX_MODAL.modalStyles.warning,\n                message: this.translateService.instant(\n                  'com.bmc.arsys.rx.innovation-studio.bundle-action-wizard.add-data.single-select-data-source-selected.message',\n                  { dataSource: singleSelectDataSource.dataSource }\n                )\n              })\n              .then(() => {\n                this.definitionsDataGrid.api.setSelectedRows([singleSelectDataSource]);\n              });\n          } else {\n            this.rxModalService\n              .confirm({\n                title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n                modalStyle: RX_MODAL.modalStyles.warning,\n                message: this.translateService.instant(\n                  'com.bmc.arsys.rx.innovation-studio.bundle-action-wizard.add-data.single-select-data-source-selection-confirmation.message',\n                  { dataSource: singleSelectDataSource.dataSource }\n                )\n              })\n              .then((response) => {\n                if (response) {\n                  this.isSingleSelectDataSourceSelected = true;\n\n                  this.definitionsDataGrid.api.setSelectedRows([singleSelectDataSource]);\n                } else {\n                  this.isSingleSelectDataSourceSelected = false;\n\n                  this.definitionsDataGrid.api.setSelectedRows(reject(selectedRows, singleSelectDataSource));\n                }\n              });\n          }\n        } else {\n          if (this.isSingleSelectDataSourceSelected && !singleSelectDataSource) {\n            this.isSingleSelectDataSourceSelected = false;\n          }\n\n          assign(newDeploymentPackageDescriptor, {\n            dataImportOptionsByRecordDefinitionName: this.getDataImportOptionsByRecordDefinitionName(\n              this.selectedDefinitions\n            )\n          });\n\n          this.rxWizardModalComponent.api.updateContext(\n            {\n              deploymentPackageDescriptor: newDeploymentPackageDescriptor,\n              isPackageDataModified: true\n            },\n            selectedRows.length > 0\n          );\n        }\n      });\n    });\n\n    this.addDataForm.valueChanges\n      .pipe(withLatestFrom(this.rxWizardModalComponent.context$), takeUntil(this.destroyed$))\n      .subscribe(([value, context]) => {\n        const newDeploymentPackageDescriptor = cloneDeep(context.deploymentPackageDescriptor);\n\n        assign(newDeploymentPackageDescriptor, {\n          isConfigurationDataIncluded: value.isConfigurationDataIncluded,\n          duplicateDataActionTypeForConfigurationData: head(value.duplicateConfigurationDataActionType)\n        });\n\n        if (value.globalDataFilter) {\n          assign(newDeploymentPackageDescriptor, {\n            dataImportOptionsByRecordDefinitionName: this.getDataImportOptionsByRecordDefinitionName(\n              this.selectedDefinitions\n            )\n          });\n        }\n\n        this.rxWizardModalComponent.api.updateContext({\n          deploymentPackageDescriptor: newDeploymentPackageDescriptor,\n          isPackageDataModified: true\n        });\n      });\n\n    this.recordGridConfig$ = of({\n      columns: gridColumns,\n      enableRowSelection: RowSelectionMode.Multiple,\n      enableFiltering: false,\n      recordIdField: 'dataSource',\n      styles: 'flex-fill',\n      useExternalFiltering: false,\n      getRecordDefinition: () => of(gridRecordDefinition),\n      getData: () =>\n        of({\n          data: this.recordDefinitionsFormControl.value,\n          totalSize: this.recordDefinitionsFormControl.value.length\n        })\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  optionFormatter(recordDefinitionData: IRecordDefinitionData): string {\n    return this.rxDefinitionNameService.getDisplayName(recordDefinitionData.dataSource);\n  }\n\n  titleFormatter(selectedOptions: RxSelectOption[]): string {\n    const title = chain(selectedOptions).map(this.optionFormatter).join(', ').truncate({ length: 200 }).value();\n\n    return title || this.translateService.instant('com.bmc.arsys.rx.client.common.select.label');\n  }\n\n  duplicateDataActionTypesOptionFormatter(option: RxSelectOption): string {\n    return AX_ADD_DATA_WIZARD_STEP.duplicateDataActionTypes[option];\n  }\n\n  openDataFilterColumnExpressionEditor(dataItem: IRecordDefinitionData, columnField: string): void {\n    // To simplify implementation we mark wizard as dirty as soon as we open expression builder.\n    this.rxWizardModalComponent.api.markDirty();\n\n    this.rxExpressionEditorService\n      .openEditor({\n        property: {\n          path: `dataFilterExpression:${dataItem.name}`,\n          value: dataItem[columnField],\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.innovation-studio.bundle-action-wizard.add-data.data-filter.label'\n          )\n        },\n        expressionConfigurator: this.dataFilterColumnExpressionConfigurator,\n        legend: [\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'),\n            icon: 'd-icon-dollar'\n          },\n          {\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.innovation-studio.bundle-action-wizard.add-data.expression-editor.legend.activity-result.label'\n            ),\n            icon: 'd-icon-field_text'\n          }\n        ]\n      })\n      .pipe(\n        tap((expression: IExpressionEditorPropertyChange) => {\n          dataItem[columnField] = expression.value;\n          this.updateDataImportOptionsByRecordDefinitionName(expression.value, dataItem, columnField);\n        })\n      )\n      .subscribe();\n  }\n\n  openGlobalDataFilterExpressionEditor(): void {\n    // To simplify implementation we mark wizard as dirty as soon as we open expression builder.\n    this.rxWizardModalComponent.api.markDirty();\n\n    this.rxExpressionEditorService\n      .openEditor({\n        property: {\n          path: 'globalDataFilter',\n          value: this.addDataForm.controls.globalDataFilter.value,\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.innovation-studio.bundle-action-wizard.add-data.global-data-filter-expression-editor.label'\n          )\n        },\n        expressionConfigurator: this.globalDataFilterExpressionConfigurator,\n        legend: [\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'),\n            icon: 'd-icon-dollar'\n          },\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.field.label'),\n            icon: 'd-icon-field_text'\n          }\n        ]\n      })\n      .subscribe((expression: IExpressionEditorPropertyChange) => {\n        this.addDataForm.controls.globalDataFilter.setValue(expression.value);\n      });\n  }\n\n  updateDataImportOptionsByRecordDefinitionName(\n    cellValue: string | RxSelectOption,\n    recordDefinitionData: IRecordDefinitionData,\n    columnField: string\n  ): void {\n    this.rxWizardModalComponent.context$.pipe(take(1)).subscribe((context) => {\n      const newDeploymentPackageDescriptor = cloneDeep(context.deploymentPackageDescriptor);\n      const recordDefinitions = this.recordDefinitionsFormControl.value;\n      const recordDefinition = find(recordDefinitions, { dataSource: recordDefinitionData.dataSource });\n\n      newDeploymentPackageDescriptor.dataImportOptionsByRecordDefinitionName[recordDefinition.name][columnField] =\n        isArray(cellValue) ? head(cellValue) : cellValue;\n\n      this.rxWizardModalComponent.api.updateContext({\n        deploymentPackageDescriptor: newDeploymentPackageDescriptor\n      });\n\n      recordDefinition[columnField] = cellValue;\n\n      this.recordDefinitionsFormControl.setValue(recordDefinitions);\n    });\n  }\n\n  private getAssociationsDataDictionary(\n    recordDefinitions: IRecordDefinition[],\n    recordDefinitionName: string,\n    parentAssociation: IAssociationDescriptor\n  ): IDataDictionary {\n    const fieldDefinitions: IFieldDefinition[] = find(recordDefinitions, {\n      name: recordDefinitionName\n    }).fieldDefinitions;\n\n    return fieldDefinitions.map((fieldDefinition) => ({\n      label: fieldDefinition.name,\n      icon: 'd-icon-field_text',\n      expression: `'recordContext._associations.${parentAssociation.associationDefinition.guid}.${parentAssociation.nodeSide}[0].${fieldDefinition.id}'`\n    }));\n  }\n\n  private getDataImportOptionsByRecordDefinitionName(recordDefinitions: IRecordDefinitionData[]): IPlainObject {\n    return recordDefinitions.reduce<IPlainObject>((result, recordDefinition) => {\n      const dataImportOptionsByRecordDefinitionName: IDataImportOptionsByRecordDefinitionName = {\n        duplicateDataActionType: head(recordDefinition.duplicateDataActionType),\n        ignoreRuleExecution: recordDefinition.ignoreRuleExecution\n      };\n\n      dataImportOptionsByRecordDefinitionName.defaultFilter = recordDefinition.defaultFilter;\n      dataImportOptionsByRecordDefinitionName.dataFilterExpression = recordDefinition.dataFilterExpression;\n      dataImportOptionsByRecordDefinitionName.dataFilterColumnExpressionFormControlOptions =\n        recordDefinition.dataFilterColumnExpressionFormControlOptions;\n\n      const combinedExpression = chain([\n        recordDefinition.defaultFilter,\n        recordDefinition.dataFilterExpression,\n        this.addDataForm.controls.globalDataFilter.value\n      ])\n        .compact()\n        .map((expression) => `(${expression})`)\n        .join(' AND ')\n        .value();\n\n      if (combinedExpression) {\n        if (result[recordDefinition.name]?.dataFilter) {\n          dataImportOptionsByRecordDefinitionName.dataFilter = `${\n            result[recordDefinition.name]?.dataFilter\n          } OR (${combinedExpression})`;\n        } else {\n          dataImportOptionsByRecordDefinitionName.dataFilter = combinedExpression;\n        }\n      }\n\n      result[recordDefinition.name] = dataImportOptionsByRecordDefinitionName;\n\n      return result;\n    }, {});\n  }\n}\n","<div class=\"d-flex justify-content-between\">\n  <h5 class=\"mt-0\">\n    {{ 'com.bmc.arsys.rx.innovation-studio.bundle-action-wizard.add-data.title' | translate }}\n    <span\n      class=\"d-icon-right-question_circle_o\"\n      [adaptPopover]=\"tooltipContentTemplate\"\n      placement=\"bottom\"\n      appendToBody=\"true\"\n      maxWidth=\"400\"\n    ></span>\n  </h5>\n  <div>\n    {{ options?.countTitle | translate: { count: selectedDefinitions.length } }}\n  </div>\n</div>\n\n<ng-template #tooltipContentTemplate>\n  <div\n    [innerHTML]=\"'com.bmc.arsys.rx.innovation-studio.bundle-action-wizard.add-bundle-content-data.tooltip' | translate\"\n  ></div>\n</ng-template>\n\n<div class=\"mb-3\">{{ options?.descriptionTitle | translate }}</div>\n\n<ng-container [formGroup]=\"addDataForm\">\n  <div class=\"d-flex mb-3 justify-content-between\">\n    <adapt-rx-select\n      [formControl]=\"recordDefinitionsFormControl\"\n      [options]=\"recordDefinitions\"\n      [optionFormatter]=\"optionFormatter\"\n      [multiple]=\"true\"\n      [selectAllButton]=\"true\"\n      [deselectAllButton]=\"true\"\n      [enableFilter]=\"true\"\n      [titleFormatter]=\"titleFormatter\"\n      class=\"add-data-record-definitions-select\"\n    >\n    </adapt-rx-select>\n\n    <rx-expression-form-control\n      class=\"d-flex ml-4\"\n      *ngIf=\"options?.showGlobalFilterExpressionEditor\"\n      [options]=\"globalDataFilterExpressionFormControlOptions\"\n      (events)=\"openGlobalDataFilterExpressionEditor()\"\n      [formControl]=\"addDataForm.controls.globalDataFilter\"\n    >\n    </rx-expression-form-control>\n  </div>\n\n  <rx-record-grid class=\"mb-3\" [config]=\"recordGridConfig$\" #definitionsDataGrid></rx-record-grid>\n\n  <div class=\"d-flex pb-3\">\n    <adapt-rx-checkbox\n      class=\"add-data-is-configuration-data-included-checkbox pr-3\"\n      [label]=\"\n        'com.bmc.arsys.rx.innovation-studio.bundle-action-wizard.add-data.include-configuration-data-in-the-package.label'\n          | translate\n      \"\n      formControlName=\"isConfigurationDataIncluded\"\n    ></adapt-rx-checkbox>\n\n    <adapt-rx-select\n      *ngIf=\"addDataForm.controls.isConfigurationDataIncluded.value\"\n      class=\"flex-grow-1\"\n      appendToBody=\"true\"\n      [options]=\"duplicateConfigurationDataActionTypeOptions\"\n      [optionFormatter]=\"duplicateDataActionTypesOptionFormatter\"\n      formControlName=\"duplicateConfigurationDataActionType\"\n    ></adapt-rx-select>\n  </div>\n</ng-container>\n\n<ng-template #recordNameCellTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n  {{ dataItem[column.field] | rxDefinitionNamePipe }}\n</ng-template>\n\n<ng-template #dataFilterCellTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n  <div>\n    <rx-expression-form-control\n      [options]=\"dataItem.dataFilterColumnExpressionFormControlOptions\"\n      (events)=\"openDataFilterColumnExpressionEditor(dataItem, column.field)\"\n      [(ngModel)]=\"dataItem[column.field]\"\n      [disabled]=\"!selectedDataSources[dataItem.dataSource]\"\n    >\n    </rx-expression-form-control>\n  </div>\n</ng-template>\n\n<ng-template #ignoreRulesCellTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n  <div>\n    <adapt-rx-switch\n      [(ngModel)]=\"dataItem[column.field]\"\n      (ngModelChange)=\"updateDataImportOptionsByRecordDefinitionName($event, dataItem, column.field)\"\n      [disabled]=\"!selectedDataSources[dataItem.dataSource]\"\n    ></adapt-rx-switch>\n  </div>\n</ng-template>\n\n<ng-template #duplicateDataActionTypeCellTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n  <div>\n    <adapt-rx-select\n      appendToBody=\"true\"\n      [options]=\"duplicateDataActionTypeOptions\"\n      [optionFormatter]=\"duplicateDataActionTypesOptionFormatter\"\n      [(ngModel)]=\"dataItem[column.field]\"\n      (ngModelChange)=\"updateDataImportOptionsByRecordDefinitionName($event, dataItem, column.field)\"\n      [disabled]=\"!selectedDataSources[dataItem.dataSource]\"\n    >\n    </adapt-rx-select>\n  </div>\n</ng-template>\n"]}