{"version":3,"file":"chatbot-definition-tab.component.js","sourceRoot":"","sources":["../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/components/chatbot-definition-tab/chatbot-definition-tab.component.ts","../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/components/chatbot-definition-tab/chatbot-definition-tab.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RX_CHATBOTS, RxChatbotDefinitionService } from '@helix/platform/chatbot/api';\nimport { IRecordDefinition, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport {\n  IBundleDescriptor,\n  IDataPageResult,\n  RX_APPLICATION,\n  RxBundleCacheService,\n  RxChatbotDefinitionDataPageService,\n  RxDefinitionNameService,\n  RxOverlayService\n} from '@helix/platform/shared/api';\nimport { RenameDefinitionModalComponent } from '@helix/platform/shared/components';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport { IRecordGridColumn } from '@helix/platform/view/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { find, map as _map, noop } from 'lodash';\nimport { BehaviorSubject, from, Observable, of } from 'rxjs';\nimport { filter, finalize, map, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { IRenameAction } from '../bundle-definitions/bundle-definitions.types';\nimport { AX_BUNDLE_DETAILS } from '../bundle-details/bundle-details.constant';\nimport { IDefinitionActionConfig } from '../bundle-details/bundle-details.types';\nimport { DefinitionTabComponent } from '../definition-tab/definition-tab.component';\nimport { AX_CHATBOT_DEFINITION_TAB } from './chatbot-definition-tab.contant';\n\n@Component({\n  selector: 'ax-chatbot-definition-tab',\n  templateUrl: './chatbot-definition-tab.component.html'\n})\nexport class ChatbotDefinitionTabComponent implements OnInit {\n  @Input()\n  bundleDescriptor: IBundleDescriptor;\n\n  @ViewChild(DefinitionTabComponent, { static: true })\n  definitionTabComponent: DefinitionTabComponent;\n\n  private rowSelectionChanged$ = new BehaviorSubject<IRowDataItem[]>([]);\n\n  definitionActions$ = this.rowSelectionChanged$.pipe(map((selectedRows) => this.getDefinitionActions(selectedRows)));\n\n  definitions$: Observable<IDataPageResult> = this.rxChatbotDefinitionDataPageService.get();\n  gridColumns: IRecordGridColumn[] = [];\n  isActionInProgress = false;\n  recordDefinition: Partial<IRecordDefinition>;\n  botNameMaxLength: number =\n    this.rxBundleCacheService.bundleId === RX_APPLICATION.chatbotBundleId\n      ? 254\n      : 254 - (this.rxBundleCacheService.bundleId + ':').length;\n\n  constructor(\n    private router: Router,\n    private rxChatbotDefinitionDataPageService: RxChatbotDefinitionDataPageService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxOverlayService: RxOverlayService,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxModalService: RxModalService,\n    private translateService: TranslateService,\n    private rxChatbotDefinitionService: RxChatbotDefinitionService\n  ) {}\n\n  private getDefinitionActions(selectedRows: IRowDataItem[]): IDefinitionActionConfig[] {\n    const isBundleEditable = this.rxOverlayService.isBundleEditable(this.rxBundleCacheService.bundleId);\n\n    return [\n      {\n        id: AX_BUNDLE_DETAILS.standardDefinitionActionNames.new,\n        isDisabled: !this.rxOverlayService.areNewDefinitionsAllowedSync(this.bundleDescriptor)\n      },\n      {\n        id: AX_BUNDLE_DETAILS.standardDefinitionActionNames.rename,\n        isDisabled: !isBundleEditable || selectedRows.length !== 1\n      },\n      {\n        id: AX_BUNDLE_DETAILS.standardDefinitionActionNames.delete,\n        isDisabled: !isBundleEditable || selectedRows.length === 0\n      }\n    ];\n  }\n\n  ngOnInit() {\n    this.gridColumns = [\n      AX_BUNDLE_DETAILS.definitionGridColumns.name,\n      {\n        title: AX_CHATBOT_DEFINITION_TAB.definitionGridColumns.description.titleKey,\n        fieldId: AX_CHATBOT_DEFINITION_TAB.definitionGridColumns.description.fieldId\n      },\n      AX_BUNDLE_DETAILS.definitionGridColumns.lastUpdateTime,\n      AX_BUNDLE_DETAILS.definitionGridColumns.lastChangedBy\n    ];\n\n    const fieldDefinitions = [\n      {\n        id: AX_BUNDLE_DETAILS.definitionGridColumns.name.fieldId,\n        resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n      },\n      {\n        id: AX_CHATBOT_DEFINITION_TAB.definitionGridColumns.description.fieldId,\n        resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n      },\n      {\n        id: AX_BUNDLE_DETAILS.definitionGridColumns.lastUpdateTime.fieldId,\n        resourceType: RX_RECORD_DEFINITION.resourceTypes.dateTime\n      },\n      {\n        id: AX_BUNDLE_DETAILS.definitionGridColumns.lastChangedBy.fieldId,\n        resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n      }\n    ];\n\n    const fieldDefinitionsById = fieldDefinitions.reduce((result, fieldDefinition) => {\n      result[fieldDefinition.id] = fieldDefinition;\n\n      return result;\n    }, {});\n\n    this.recordDefinition = {\n      fieldDefinitions,\n      fieldDefinitionsById\n    };\n  }\n\n  onAddDefinition(): void {\n    const definitionType: string = this.translateService.instant(\n      'com.bmc.arsys.rx.client.definition-type.chatbot.label'\n    );\n\n    from(\n      this.rxModalService\n        .openModal({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.admin.chatbots.new-chatbot.title'),\n          size: 'sm',\n          content: RenameDefinitionModalComponent,\n          data: {\n            autoFocus: false,\n            maxLength: this.botNameMaxLength,\n            fieldLabel: this.translateService.instant(\n              'com.bmc.arsys.rx.client.rename-definition-modal.definition-name.label',\n              { definitionType }\n            ),\n            validationErrorText: this.translateService.instant(\n              'com.bmc.arsys.rx.client.rename-definition-modal.name-validation.message',\n              { definitionType }\n            ),\n            definitionType,\n            definitionNames: _map(\n              this.definitionTabComponent.recordGrid.adaptTableConfig.data,\n              AX_BUNDLE_DETAILS.definitionGridColumns.name.fieldId\n            )\n          }\n        })\n        .catch(noop)\n    )\n      .pipe(\n        filter<string>(Boolean),\n        tap(() => {\n          this.isActionInProgress = true;\n        }),\n        withLatestFrom(this.rxBundleCacheService.getCurrentBundleDescriptor()),\n        switchMap(([chatbotName, bundleDescriptor]) => {\n          const newChatbotName =\n            this.rxBundleCacheService.bundleId === RX_APPLICATION.chatbotBundleId\n              ? chatbotName\n              : this.rxDefinitionNameService.getDefinitionName(this.rxBundleCacheService.bundleId, chatbotName);\n\n          return this.rxChatbotDefinitionService.create(newChatbotName, bundleDescriptor).pipe(\n            tap(() => {\n              this.router.navigate([RX_APPLICATION.innovationStudioBundleId, 'chatbot', 'edit', newChatbotName]);\n            })\n          );\n        }),\n        finalize(() => {\n          this.isActionInProgress = false;\n        })\n      )\n      .subscribe();\n  }\n\n  onRenameDefinition({ selectedRow, definitionNames }: IRenameAction): void {\n    const definitionType: string = this.translateService.instant(\n      'com.bmc.arsys.rx.client.definition-type.chatbot.label'\n    );\n\n    from(\n      this.rxModalService\n        .openModal({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.rename-definition-modal.title', {\n            definitionType: definitionType.toLowerCase()\n          }),\n          size: 'sm',\n          content: RenameDefinitionModalComponent,\n          data: {\n            maxLength: this.botNameMaxLength,\n            definitionName: selectedRow.name,\n            fieldLabel: this.translateService.instant(\n              'com.bmc.arsys.rx.client.rename-definition-modal.definition-name.label',\n              { definitionType }\n            ),\n            validationErrorText: this.translateService.instant(\n              'com.bmc.arsys.rx.client.rename-definition-modal.name-validation.message',\n              { definitionType }\n            ),\n            definitionType,\n            definitionNames\n          }\n        })\n        .catch(noop)\n    )\n      .pipe(\n        filter<string>(Boolean),\n        tap(() => {\n          this.isActionInProgress = true;\n        }),\n        switchMap((newChatbotName: string) => this.rxChatbotDefinitionService.rename(selectedRow.id, newChatbotName)),\n        finalize(() => {\n          this.isActionInProgress = false;\n        }),\n        switchMap(() => this.definitionTabComponent.recordGrid.api.refresh())\n      )\n      .subscribe();\n  }\n\n  onDeleteDefinition(selectedRows: IRowDataItem[]): void {\n    from(\n      this.rxModalService.confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.definitionTabComponent.getDeleteSelectedDefinitionMessage()\n      })\n    )\n      .pipe(\n        switchMap((response: boolean) => {\n          const defaultChatbot = find(selectedRows, {\n            id: RX_CHATBOTS.chatbotSettings.defaultBotId\n          });\n\n          if (defaultChatbot && response) {\n            return from(\n              this.rxModalService.confirm({\n                title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n                modalStyle: RX_MODAL.modalStyles.warning,\n                message: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.admin.chatbots.configurations-delete-confirmation.message',\n                  { defaultChatbotName: defaultChatbot[AX_BUNDLE_DETAILS.definitionGridColumns.name.fieldId] }\n                )\n              })\n            );\n          } else if (response) {\n            return of(true);\n          } else {\n            return of(false);\n          }\n        }),\n        tap((result: boolean) => {\n          this.isActionInProgress = result;\n        }),\n        switchMap((response) =>\n          response\n            ? this.rxChatbotDefinitionService.delete(_map(selectedRows, 'id')).pipe(\n                tap(() => {\n                  this.isActionInProgress = false;\n                }),\n                switchMap(() => this.definitionTabComponent.recordGrid.api.refresh())\n              )\n            : of({})\n        ),\n        finalize(() => {\n          this.isActionInProgress = false;\n        })\n      )\n      .subscribe();\n  }\n\n  onRowSelectionChanged(selectedRows: IRowDataItem[]): void {\n    this.rowSelectionChanged$.next(selectedRows);\n  }\n}\n","<ax-definition-tab\n  [definitionActions]=\"definitionActions$ | async\"\n  [gridColumns]=\"gridColumns\"\n  [recordDefinition]=\"recordDefinition\"\n  [definitions$]=\"definitions$\"\n  [isActionInProgress]=\"isActionInProgress\"\n  [definitionType]=\"'chatbot'\"\n  (rowSelectionChanged)=\"onRowSelectionChanged($event)\"\n  (addDefinition)=\"onAddDefinition()\"\n  (renameDefinition)=\"onRenameDefinition($event)\"\n  (deleteDefinition)=\"onDeleteDefinition($event)\"\n></ax-definition-tab>\n"]}