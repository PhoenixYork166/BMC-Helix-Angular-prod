{"version":3,"file":"field-selection-step.component.js","sourceRoot":"","sources":["../../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/components/join-record-wizard/field-selection-step/field-selection-step.component.ts","../../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/components/join-record-wizard/field-selection-step/field-selection-step.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SelectTexts } from '@bmc-ux/adapt-angular';\nimport {\n  IFieldDefinition,\n  IRecordDefinition,\n  RX_RECORD_DEFINITION,\n  RxFieldDefinitionService,\n  RxRecordDefinitionService\n} from '@helix/platform/record/api';\nimport { RxDefinitionNameService } from '@helix/platform/shared/api';\nimport { RxWizardModalComponent } from '@helix/platform/shared/components';\nimport { RxGuidService } from '@helix/platform/utils';\nimport { TranslateService } from '@ngx-translate/core';\nimport { chain, cloneDeep, concat, includes, intersection, map as _map } from 'lodash';\nimport { combineLatest, Observable, ReplaySubject } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  pluck,\n  shareReplay,\n  startWith,\n  switchMap,\n  takeUntil,\n  tap,\n  withLatestFrom\n} from 'rxjs/operators';\n\n@Component({\n  selector: 'ax-field-selection-step',\n  templateUrl: './field-selection-step.component.html',\n  styleUrls: ['./field-selection-step.component.scss']\n})\nexport class FieldSelectionStepComponent implements OnInit, OnDestroy {\n  private notificationMessage = this.translateService.instant(\n    'com.bmc.arsys.rx.innovation-studio.join-record-wizard.field-selection.notification.message'\n  );\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  primaryAvailableFields$: Observable<IFieldDefinition[]>;\n  secondaryAvailableFields$: Observable<IFieldDefinition[]>;\n\n  selectLabel: string;\n  hasDuplicates$: Observable<boolean>;\n\n  alertConfig = {\n    content: this.notificationMessage,\n    variant: 'info',\n    type: 'inline',\n    dismissible: false\n  };\n\n  selectTexts: SelectTexts = {\n    headerText: this.translateService.instant(\n      'com.bmc.arsys.rx.innovation-studio.join-record-wizard.field-selection.select.header'\n    ),\n    numberOptionsText: this.translateService.instant(\n      'com.bmc.arsys.rx.innovation-studio.join-record-wizard.field-selection.select.fields.label'\n    ),\n    checked: this.translateService.instant(\n      'com.bmc.arsys.rx.innovation-studio.join-record-wizard.field-selection.select.selected.label'\n    )\n  };\n\n  primarySelectedFieldsFormControl = new FormControl([]);\n  secondarySelectedFieldsFormControl = new FormControl([]);\n\n  constructor(\n    private rxWizardModalComponent: RxWizardModalComponent,\n    private translateService: TranslateService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxFieldDefinitionService: RxFieldDefinitionService,\n    private rxGuidService: RxGuidService,\n    private rxRecordDefinitionService: RxRecordDefinitionService\n  ) {}\n\n  ngOnInit() {\n    this.rxWizardModalComponent.api.enableFinishButton();\n\n    const context$ = this.rxWizardModalComponent.context$.pipe(\n      tap((context) => {\n        if (!context.selectedFields) {\n          this.primarySelectedFieldsFormControl.setValue([]);\n          this.secondarySelectedFieldsFormControl.setValue([]);\n        }\n      }),\n      shareReplay(1),\n      takeUntil(this.destroyed$)\n    );\n\n    const primaryRecordDefinitionName$ = context$.pipe(\n      pluck('primaryRecordDefinitionName'),\n      distinctUntilChanged(),\n      filter<string>(Boolean),\n      shareReplay(1)\n    );\n\n    const secondaryRecordDefinitionName$ = context$.pipe(\n      pluck('secondaryRecordDefinitionName'),\n      distinctUntilChanged(),\n      filter<string>(Boolean),\n      shareReplay(1)\n    );\n\n    combineLatest([primaryRecordDefinitionName$, secondaryRecordDefinitionName$]).subscribe(\n      ([primaryRecordDefinitionName, secondaryRecordDefinitionName]) => {\n        this.selectLabel = this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.join-record-wizard.field-selection.select.label',\n          {\n            primaryRecordDefinitionName: this.rxDefinitionNameService.getDisplayName(primaryRecordDefinitionName),\n            secondaryRecordDefinitionName: this.rxDefinitionNameService.getDisplayName(secondaryRecordDefinitionName)\n          }\n        );\n      }\n    );\n\n    this.primaryAvailableFields$ = primaryRecordDefinitionName$.pipe(\n      switchMap((primaryRecordDefinitionName) =>\n        this.rxRecordDefinitionService.get(primaryRecordDefinitionName, {}, true)\n      ),\n      map((recordDefinition) =>\n        this.getJoinFieldDefinitions(recordDefinition, RX_RECORD_DEFINITION.sourceRecordTypes.primary)\n      )\n    );\n\n    this.secondaryAvailableFields$ = secondaryRecordDefinitionName$.pipe(\n      switchMap((secondaryRecordDefinitionName) =>\n        this.rxRecordDefinitionService.get(secondaryRecordDefinitionName, {}, true)\n      ),\n      map((recordDefinition) =>\n        this.getJoinFieldDefinitions(recordDefinition, RX_RECORD_DEFINITION.sourceRecordTypes.secondary)\n      )\n    );\n\n    const primarySelectedFields$ = this.primarySelectedFieldsFormControl.valueChanges.pipe(startWith([]));\n    const secondarySelectedFields$ = this.secondarySelectedFieldsFormControl.valueChanges.pipe(startWith([]));\n\n    const duplicateNames$ = combineLatest([primarySelectedFields$, secondarySelectedFields$]).pipe(\n      map(([primarySelectedFields, secondarySelectedFields]) => {\n        const selectedPrimaryFieldNames = _map(primarySelectedFields, 'name');\n        const selectedSecondaryFieldNames = _map(secondarySelectedFields, 'name');\n\n        return intersection(selectedPrimaryFieldNames, selectedSecondaryFieldNames).concat(\n          intersection(\n            _map(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFields, 'name'),\n            selectedPrimaryFieldNames.concat(selectedSecondaryFieldNames)\n          )\n        );\n      }),\n      shareReplay(1)\n    );\n\n    this.hasDuplicates$ = duplicateNames$.pipe(map((duplicateNames) => !!duplicateNames.length));\n\n    combineLatest([primarySelectedFields$, secondarySelectedFields$])\n      .pipe(\n        withLatestFrom(duplicateNames$, primaryRecordDefinitionName$, secondaryRecordDefinitionName$),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(\n        ([\n          [primarySelectedFields, secondarySelectedFields],\n          duplicateNames,\n          primaryRecordDefinitionName,\n          secondaryRecordDefinitionName\n        ]) => {\n          const nonRetainableFieldIds = chain(primarySelectedFields)\n            .concat(secondarySelectedFields)\n            .map('fieldMapping.sourceFieldId')\n            .filter((fieldId, index, selectedFieldIds) => includes(selectedFieldIds, fieldId, index + 1))\n            .union(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds)\n            .value();\n\n          const primaryRecordDisplayName = this.rxDefinitionNameService.getDisplayName(primaryRecordDefinitionName);\n          const secondaryRecordDisplayName = this.rxDefinitionNameService.getDisplayName(secondaryRecordDefinitionName);\n\n          this.rxWizardModalComponent.api.updateContext({\n            selectedFields: concat(primarySelectedFields, secondarySelectedFields)\n              .filter((fieldDefinition) => this.rxFieldDefinitionService.isJoinedField(fieldDefinition))\n              .map((fieldDefinition) => {\n                const field = cloneDeep(fieldDefinition);\n\n                if (includes(duplicateNames, field.name)) {\n                  if (field.fieldMapping.source === RX_RECORD_DEFINITION.sourceRecordTypes.primary) {\n                    field.name = `${field.name} - ${primaryRecordDisplayName}`;\n                  } else {\n                    field.name = `${field.name} - ${secondaryRecordDisplayName}`;\n                  }\n                }\n\n                if (!includes(nonRetainableFieldIds, field.fieldMapping.sourceFieldId)) {\n                  field.customId = field.fieldMapping.sourceFieldId;\n                }\n\n                return field;\n              })\n              .concat(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFields)\n          });\n        }\n      );\n  }\n\n  optionFormatter(field: IFieldDefinition): string {\n    return field.name;\n  }\n\n  private getJoinFieldDefinitions(record: IRecordDefinition, sourceType: string): IFieldDefinition[] {\n    return _map(record?.fieldDefinitions, (fieldDefinition) => {\n      const joinFieldDefinition = cloneDeep(fieldDefinition);\n\n      joinFieldDefinition.fieldMapping = {\n        resourceType: RX_RECORD_DEFINITION.joinFieldMapping,\n        sourceFieldId: fieldDefinition.id,\n        source: sourceType\n      };\n\n      joinFieldDefinition.id = this.rxGuidService.generate('rx-');\n\n      // Join record should not carry forward FTS properties from primary and secondary record.\n      if (joinFieldDefinition.searchDefinition) {\n        joinFieldDefinition.searchDefinition = null;\n      }\n\n      delete joinFieldDefinition.lastUpdateTime;\n\n      return joinFieldDefinition;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n}\n","<div class=\"d-flex flex-column mh-100\">\n  <div>\n    <adapt-alert *ngIf=\"hasDuplicates$ | async\" class=\"mb-3\" [config]=\"alertConfig\"></adapt-alert>\n  </div>\n\n  <label>{{ selectLabel }}</label>\n\n  <div class=\"d-flex flex-row select-container\">\n    <adapt-rx-select\n      class=\"d-flex flex-column h-100\"\n      *ngIf=\"primaryAvailableFields$ | async as primaryAvailableFields\"\n      [inline]=\"true\"\n      [multiple]=\"true\"\n      [options]=\"primaryAvailableFields\"\n      [optionFormatter]=\"optionFormatter\"\n      [selectAllButton]=\"true\"\n      [deselectAllButton]=\"true\"\n      [texts]=\"selectTexts\"\n      [popupMaxHeight]=\"'100%'\"\n      [formControl]=\"primarySelectedFieldsFormControl\"\n      [label]=\"'com.bmc.arsys.rx.innovation-studio.join-record-wizard.field-selection.primary-record.label' | translate\"\n    >\n    </adapt-rx-select>\n\n    <adapt-rx-select\n      class=\"ml-4 d-flex flex-column h-100\"\n      *ngIf=\"secondaryAvailableFields$ | async as secondaryAvailableFields\"\n      [inline]=\"true\"\n      [multiple]=\"true\"\n      [options]=\"secondaryAvailableFields\"\n      [optionFormatter]=\"optionFormatter\"\n      [selectAllButton]=\"true\"\n      [deselectAllButton]=\"true\"\n      [texts]=\"selectTexts\"\n      [popupMaxHeight]=\"'100%'\"\n      [formControl]=\"secondarySelectedFieldsFormControl\"\n      [label]=\"\n        'com.bmc.arsys.rx.innovation-studio.join-record-wizard.field-selection.secondary-record.label' | translate\n      \"\n    >\n    </adapt-rx-select>\n  </div>\n</div>\n"]}