{"version":3,"file":"bundle-deployment.service.js","sourceRoot":"","sources":["../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/services/bundle-deployment/bundle-deployment.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, NgZone } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { saveAs } from 'file-saver';\nimport { chain, isEmpty } from 'lodash';\nimport { Observable, Subject, timer } from 'rxjs';\nimport { switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { RxFileService } from '@helix/platform/utils';\nimport { IBundleDescriptor } from '@helix/platform/shared/api';\nimport { AX_BUNDLE_DEPLOYMENT } from './bundle-deployment.constant';\nimport { IBundleCreateDescriptor, IDeploymentParsedStatus, IDeploymentStatus } from './bundle-deployment.interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AxBundleDeploymentService {\n  private createBundleUrl = '/api/rx/application/bundle/bundledescriptor/';\n  private deployBundleUrl = '/api/rx/application/bundle/deploymentpackage/';\n  private deploymentStatusUrl = '/api/rx/application/bundle/deploymentstatus';\n\n  private cancelPolling$ = new Subject();\n\n  constructor(\n    private httpClient: HttpClient,\n    private ngZone: NgZone,\n    private translateService: TranslateService,\n    private rxFileService: RxFileService\n  ) {\n  }\n\n  create(bundleDescriptor: IBundleCreateDescriptor): Observable<any> {\n    return this.httpClient.post<IBundleDescriptor>(this.createBundleUrl, bundleDescriptor, { observe: 'response' });\n  }\n\n  downloadContentPackage(bundleId: string, packageId: string): Observable<any> {\n    return this.httpClient\n      .get(`${this.deployBundleUrl}${bundleId}/${packageId}`, { responseType: 'arraybuffer', observe: 'response' })\n      .pipe(\n        tap((fileStream: HttpResponse<ArrayBuffer>) => {\n          const arrayBufferView = new Uint8Array(fileStream.body);\n\n          const file = new Blob([arrayBufferView], {\n            type: fileStream.headers.get('content-type')\n          });\n\n          const fileName = this.rxFileService.extractFileName(fileStream);\n\n          this.ngZone.runOutsideAngular(() => {\n            saveAs(file, fileName);\n          });\n        })\n      );\n  }\n\n  download(bundleId: string, packageId: string): Observable<any> {\n    return this.httpClient.get(this.deployBundleUrl + `${bundleId}/${packageId}`, {\n      observe: 'response',\n      responseType: 'arraybuffer'\n    });\n  }\n\n  install(file: File): Observable<any> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    return this.httpClient.post(this.deployBundleUrl, formData, {\n      headers: new HttpHeaders({ 'Expect-Package-Type': 'INSTALL' }),\n      observe: 'response'\n    });\n  }\n\n  reinstall(bundleId: string, file: File): Observable<any> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    return this.httpClient.post(this.deployBundleUrl, formData, {\n      headers: new HttpHeaders({ 'Expect-Package-Type': 'INSTALL', 'Reinstall-To-Bundle-Id': bundleId }),\n      observe: 'response'\n    });\n  }\n\n  update(file: File): Observable<any> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    return this.httpClient.post(this.deployBundleUrl, formData, {\n      headers: new HttpHeaders({ 'Expect-Package-Type': 'UPDATE' }),\n      observe: 'response'\n    });\n  }\n\n  import(bundleId: string, file: File): Observable<any> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    return this.httpClient.post(this.deployBundleUrl, formData, {\n      headers: new HttpHeaders({\n        'Expect-Package-Type': 'EXPORT',\n        'Reinstall-To-Bundle-Id': bundleId\n      }),\n      observe: 'response'\n    });\n  }\n\n  uninstall(bundleId: string): Observable<any> {\n    return this.httpClient.delete(this.deployBundleUrl + `${bundleId}`, {\n      observe: 'response'\n    });\n  }\n\n  buildStatusMessage(deploymentParsedStatus: IDeploymentParsedStatus): string {\n    const newLine = '\\n';\n\n    const errorMessages = !isEmpty(deploymentParsedStatus.errorMessages)\n      ? chain(deploymentParsedStatus.errorMessages)\n        .unshift(this.translateService.instant('com.bmc.arsys.rx.innovation-studio.workspace.errors.label'))\n        .join(newLine)\n        .value()\n      : '';\n\n    const definitionImportStatusMessages = !isEmpty(deploymentParsedStatus.definitionsStatusContent)\n      ? chain(deploymentParsedStatus.definitionsStatusContent)\n        .unshift(\n          this.translateService.instant(\n            'com.bmc.arsys.rx.innovation-studio.workspace.definition.status.messages.label'\n          )\n        )\n        .join(newLine)\n        .value()\n      : '';\n\n    const tenantDataImportStatusMessages = !isEmpty(deploymentParsedStatus.tenantDataStatusContent)\n      ? Object.keys(deploymentParsedStatus.tenantDataStatusContent).map((key) =>\n        chain(deploymentParsedStatus.tenantDataStatusContent[key])\n          .unshift(\n            this.translateService.instant('com.bmc.arsys.rx.innovation-studio.workspace.data.status.messages.label', {\n              tenant: key\n            })\n          )\n          .join(newLine)\n          .value()\n      )\n      : [];\n\n    return chain(tenantDataImportStatusMessages)\n      .unshift(errorMessages, definitionImportStatusMessages)\n      .compact()\n      .join(newLine + newLine)\n      .value();\n  }\n\n  pollDeploymentStatus(guid: string, customDeploymentStatusUrl?: string): Observable<IDeploymentStatus> {\n    return timer(0, AX_BUNDLE_DEPLOYMENT.deploymentStatusPollInterval)\n      .pipe(\n        takeUntil(this.cancelPolling$),\n        switchMap(() => this.httpClient.get((customDeploymentStatusUrl || this.deploymentStatusUrl) + `/${guid}`)),\n        tap((deploymentStatus: IDeploymentStatus) => {\n          if (\n            AX_BUNDLE_DEPLOYMENT.deploymentStatuses.failed.includes(deploymentStatus.packageDeployStatus) ||\n            AX_BUNDLE_DEPLOYMENT.deploymentStatuses.failed.includes(deploymentStatus.packageExportStatus)\n          ) {\n            this.cancelPolling$.next();\n            deploymentStatus.errorMessage = this.buildStatusMessage(deploymentStatus.deploymentParsedStatus);\n          } else if (\n            AX_BUNDLE_DEPLOYMENT.deploymentStatuses.succeeded.includes(deploymentStatus.packageDeployStatus) ||\n            AX_BUNDLE_DEPLOYMENT.deploymentStatuses.succeeded.includes(deploymentStatus.packageExportStatus)\n          ) {\n            this.cancelPolling$.next();\n            deploymentStatus.isFinished = true;\n          }\n        })\n      );\n  }\n}\n"]}