{"version":3,"file":"order-data-wizard-step.component.js","sourceRoot":"","sources":["../../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/components/bundle-action-wizard/order-data-wizard-step/order-data-wizard-step.component.ts","../../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/components/bundle-action-wizard/order-data-wizard-step/order-data-wizard-step.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { IPlainObject } from '@helix/platform/shared/api';\nimport { RxWizardModalComponent } from '@helix/platform/shared/components';\nimport { RxArrayUtilsService } from '@helix/platform/utils';\nimport { cloneDeep, filter, find, forEach, head, isUndefined, last, reduce, sortBy, transform } from 'lodash';\nimport { skip, take } from 'rxjs/operators';\n\ninterface IRecordDefinitionData {\n  disallowChangeOrder?: boolean;\n  importOrder: number;\n  name: string;\n  selected?: boolean;\n}\n\n@Component({\n  selector: 'ax-order-data-wizard-step',\n  templateUrl: 'order-data-wizard-step.component.html',\n  styleUrls: ['./order-data-wizard-step.scss']\n})\nexport class OrderDataWizardStepComponent implements OnInit {\n  @Input()\n  options: IPlainObject;\n\n  recordDefinitions: IRecordDefinitionData[] = [];\n\n  constructor(\n    private rxWizardModalComponent: RxWizardModalComponent,\n    private rxArrayUtilsService: RxArrayUtilsService\n  ) {}\n\n  ngOnInit(): void {\n    this.rxWizardModalComponent.context$.pipe(take(1)).subscribe((context) => {\n      const newDeploymentPackageDescriptor = cloneDeep(context.deploymentPackageDescriptor);\n\n      if (this.options?.importRecordDefinitionFromCache) {\n        newDeploymentPackageDescriptor.dataImportOptionsByRecordDefinitionName = reduce(\n          filter(context.cache.recordDefinitions, 'shouldExportData'),\n          (result, recordDefinition, recordDefinitionIndex) => {\n            this.recordDefinitions.push({\n              name: recordDefinition.name,\n              importOrder: recordDefinitionIndex\n            });\n\n            result[recordDefinition.name] = { importOrder: recordDefinitionIndex };\n\n            return result;\n          },\n          {}\n        );\n      } else {\n        let startIndex = 0;\n\n        forEach(\n          newDeploymentPackageDescriptor.dataImportOptionsByRecordDefinitionName,\n          (recordDefinition, recordDefinitionName) => {\n            const recordDefinitionDetails = find(context.cache.recordDefinitions, { name: recordDefinitionName });\n\n            this.recordDefinitions.push({\n              name: recordDefinitionName,\n              importOrder: startIndex++,\n              disallowChangeOrder: recordDefinitionDetails.disallowChangeOrder\n            });\n          }\n        );\n      }\n\n      this.rxWizardModalComponent.api.updateContext(\n        {\n          deploymentPackageDescriptor: newDeploymentPackageDescriptor\n        },\n        false\n      );\n\n      this.updateIndexes(false);\n    });\n\n    this.rxWizardModalComponent.context$.pipe(skip(1)).subscribe((context) => {\n      let startIndex = this.recordDefinitions.length;\n\n      this.recordDefinitions = sortBy(\n        transform(\n          context.deploymentPackageDescriptor.dataImportOptionsByRecordDefinitionName,\n          (result, recordDefinition, recordDefinitionName) => {\n            let importOrder;\n\n            const existing = find(this.recordDefinitions, { name: recordDefinitionName }) as IRecordDefinitionData;\n\n            const recordDefinitionDetails = find(context.cache.recordDefinitions, { name: recordDefinitionName });\n\n            if (\n              !isUndefined(recordDefinitionDetails.initialFixedOrder) &&\n              recordDefinitionDetails.initialFixedOrder === existing?.importOrder\n            ) {\n              importOrder = recordDefinitionDetails.initialFixedOrder;\n            } else if (existing) {\n              importOrder = existing.importOrder;\n            }\n\n            result.push({\n              name: recordDefinitionName,\n              importOrder: !isUndefined(importOrder) ? importOrder : startIndex++,\n              disallowChangeOrder: recordDefinitionDetails.disallowChangeOrder,\n              selected: existing?.selected\n            });\n          },\n          []\n        ),\n        'importOrder'\n      );\n    });\n  }\n\n  isMoveDownButtonDisabled(): boolean {\n    return (\n      !this.recordDefinitions.length ||\n      last(this.recordDefinitions).selected ||\n      !find(this.recordDefinitions, 'selected')\n    );\n  }\n\n  isMoveUpButtonDisabled(): boolean {\n    return (\n      !this.recordDefinitions.length ||\n      head(this.recordDefinitions).selected ||\n      !find(this.recordDefinitions, 'selected')\n    );\n  }\n\n  moveDown(): void {\n    this.recordDefinitions = this.rxArrayUtilsService.moveArrayElements<IRecordDefinitionData>(\n      this.recordDefinitions,\n      this.getSelectedIndexes(),\n      1\n    );\n\n    this.updateIndexes();\n  }\n\n  moveUp(): void {\n    this.recordDefinitions = this.rxArrayUtilsService.moveArrayElements<IRecordDefinitionData>(\n      this.recordDefinitions,\n      this.getSelectedIndexes(),\n      -1\n    );\n\n    this.updateIndexes();\n  }\n\n  trackBy(index: number, recordDefinition: IRecordDefinitionData): string {\n    return recordDefinition.name;\n  }\n\n  private getSelectedIndexes(): number[] {\n    return this.recordDefinitions.reduce((result, recordDefinition, recordDefinitionIndex) => {\n      if (recordDefinition.selected) {\n        result.push(recordDefinitionIndex);\n      }\n\n      return result;\n    }, []);\n  }\n\n  private updateIndexes(markDirty = true): void {\n    this.rxWizardModalComponent.context$.pipe(take(1)).subscribe((context) => {\n      const newDeploymentPackageDescriptor = cloneDeep(context.deploymentPackageDescriptor);\n\n      this.recordDefinitions.forEach((recordDefinition, index) => {\n        recordDefinition.importOrder = index;\n\n        newDeploymentPackageDescriptor.dataImportOptionsByRecordDefinitionName[recordDefinition.name].importOrder =\n          index;\n      });\n\n      this.rxWizardModalComponent.api.updateContext(\n        {\n          deploymentPackageDescriptor: newDeploymentPackageDescriptor,\n          isPackageDataModified: true\n        },\n        markDirty\n      );\n    });\n  }\n}\n","<h5 class=\"mt-0\">Data</h5>\n\n<div>Move data items up or down to set the order in which the data will be loaded onto target systems:</div>\n\n<div class=\"d-flex row\">\n  <button\n    adapt-button\n    btn-type=\"tertiary\"\n    class=\"d-icon-triangle_up_adapt\"\n    rx-id=\"move-up-button\"\n    [disabled]=\"isMoveUpButtonDisabled()\"\n    (click)=\"moveUp()\"\n  >\n    {{ 'com.bmc.arsys.rx.innovation-studio.bundle-action-wizard.order-data.move-up.label' | translate }}\n  </button>\n\n  <button\n    adapt-button\n    btn-type=\"tertiary\"\n    class=\"d-icon-triangle_down_adapt\"\n    rx-id=\"move-down-button\"\n    [disabled]=\"isMoveDownButtonDisabled()\"\n    (click)=\"moveDown()\"\n  >\n    {{ 'com.bmc.arsys.rx.innovation-studio.bundle-action-wizard.order-data.move-down.label' | translate }}\n  </button>\n</div>\n\n<div class=\"d-flex flex-column border h-100 p-2 record-definitions-list\">\n  <div class=\"d-flex justify-content-center\">\n    <adapt-empty-state\n      class=\"align-self-center\"\n      type=\"objects\"\n      *ngIf=\"!recordDefinitions.length\"\n      [label]=\"'com.bmc.arsys.rx.client.empty-state.no-items-to-display.label' | translate\"\n    ></adapt-empty-state>\n  </div>\n\n  <div class=\"checkbox p-2 text-break\" *ngFor=\"let recordDefinition of recordDefinitions; trackBy: trackBy\">\n    <label>\n      <input\n        type=\"checkbox\"\n        [(ngModel)]=\"recordDefinition.selected\"\n        [disabled]=\"recordDefinition.disallowChangeOrder\"\n      />\n      <span class=\"checkbox__item\">{{ recordDefinition.name | rxDefinitionNamePipe }}</span>\n    </label>\n  </div>\n</div>\n"]}