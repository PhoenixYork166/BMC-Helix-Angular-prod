{"version":3,"file":"join-criteria-expression-configurator.js","sourceRoot":"","sources":["../../../../../../../../libs/com-bmc-arsys-rx-innovationstudio/src/lib/components/join-record-wizard/join-criteria-step/join-criteria-expression-configurator.ts"],"names":[],"mappings":"AACA,OAAO,EAAqB,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AACrF,OAAO,EAAE,uBAAuB,EAAE,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AAC/F,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AACvD,OAAO,EAAE,KAAK,EAAE,MAAM,QAAQ,CAAC;AAC/B,OAAO,EAAE,EAAE,EAAE,MAAM,MAAM,CAAC;AAE1B,MAAM,OAAO,kCAAmC,SAAQ,wBAAwB;IAG9E,YACE,uBAA0C,EAC1C,yBAA4C,EAC5C,QAAkB;QAElB,KAAK,EAAE,CAAC;QAPV,0BAAqB,GAAG,IAAI,CAAC;QAS3B,MAAM,gBAAgB,GAAqB,QAAQ,CAAC,GAAG,CAAmB,gBAAgB,CAAC,CAAC;QAE5F,MAAM,uBAAuB,GAC3B,QAAQ,CAAC,GAAG,CAA0B,uBAAuB,CAAC,CAAC;QAEjE,MAAM,OAAO,GAAG;YACd;gBACE,oBAAoB,EAAE,uBAAuB,CAAC,cAAc,CAAC,uBAAuB,CAAC,IAAI,CAAC;gBAC1F,KAAK,EAAE,IAAI,gBAAgB,CAAC,OAAO,CACjC,mFAAmF,CACpF,GAAG;gBACJ,IAAI,EAAE,oBAAoB,CAAC,iBAAiB,CAAC,OAAO;gBACpD,gBAAgB,EAAE,uBAAuB,CAAC,gBAAgB;aAC3D;YACD;gBACE,oBAAoB,EAAE,uBAAuB,CAAC,cAAc,CAAC,yBAAyB,CAAC,IAAI,CAAC;gBAC5F,KAAK,EAAE,IAAI,gBAAgB,CAAC,OAAO,CACjC,qFAAqF,CACtF,GAAG;gBACJ,IAAI,EAAE,oBAAoB,CAAC,iBAAiB,CAAC,SAAS;gBACtD,gBAAgB,EAAE,yBAAyB,CAAC,gBAAgB;aAC7D;SACF,CAAC;QAEF,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAC7B,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YACvB,KAAK,EAAE,GAAG,MAAM,CAAC,oBAAoB,IAAI,MAAM,CAAC,KAAK,EAAE;YACvD,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC;iBACrC,GAAG,CAAC,CAAC,eAAe,EAAE,EAAE;gBACvB,IAAI,eAAe,CAAC,YAAY,KAAK,oBAAoB,CAAC,SAAS,CAAC,UAAU,CAAC,YAAY,EAAE;oBAC3F,OAAO;wBACL,KAAK,EAAE,GAAG,MAAM,CAAC,oBAAoB,IAAI,eAAe,CAAC,IAAI,EAAE;wBAC/D,IAAI,EAAE,mBAAmB;wBACzB,UAAU,EAAE,MAAM,MAAM,CAAC,oBAAoB,IAAI,MAAM,CAAC,IAAI,IAAI,eAAe,CAAC,IAAI,GAAG;qBACxF,CAAC;iBACH;YACH,CAAC,CAAC;iBACD,OAAO,EAAE;iBACT,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC;iBAChD,KAAK,EAAE;SACX,CAAC,CAAC,CACJ,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { Injector } from '@angular/core';\nimport { IRecordDefinition, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxDefinitionNameService, RxExpressionConfigurator } from '@helix/platform/shared/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { chain } from 'lodash';\nimport { of } from 'rxjs';\n\nexport class JoinCriteriaExpressionConfigurator extends RxExpressionConfigurator {\n  commonDataDictionary$ = null;\n\n  constructor(\n    primaryRecordDefinition: IRecordDefinition,\n    secondaryRecordDefinition: IRecordDefinition,\n    injector: Injector\n  ) {\n    super();\n\n    const translateService: TranslateService = injector.get<TranslateService>(TranslateService);\n\n    const rxDefinitionNameService: RxDefinitionNameService =\n      injector.get<RxDefinitionNameService>(RxDefinitionNameService);\n\n    const records = [\n      {\n        recordDefinitionName: rxDefinitionNameService.getDisplayName(primaryRecordDefinition.name),\n        label: `(${translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.join-record-wizard.join-criteria.primary.label'\n        )})`,\n        type: RX_RECORD_DEFINITION.sourceRecordTypes.primary,\n        fieldDefinitions: primaryRecordDefinition.fieldDefinitions\n      },\n      {\n        recordDefinitionName: rxDefinitionNameService.getDisplayName(secondaryRecordDefinition.name),\n        label: `(${translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.join-record-wizard.join-criteria.secondary.label'\n        )})`,\n        type: RX_RECORD_DEFINITION.sourceRecordTypes.secondary,\n        fieldDefinitions: secondaryRecordDefinition.fieldDefinitions\n      }\n    ];\n\n    this.commonDataDictionary$ = of(\n      records.map((record) => ({\n        label: `${record.recordDefinitionName} ${record.label}`,\n        expanded: true,\n        children: chain(record.fieldDefinitions)\n          .map((fieldDefinition) => {\n            if (fieldDefinition.resourceType !== RX_RECORD_DEFINITION.dataTypes.attachment.resourceType) {\n              return {\n                label: `${record.recordDefinitionName}.${fieldDefinition.name}`,\n                icon: 'd-icon-field_text',\n                expression: `\\${${record.recordDefinitionName}.${record.type}.${fieldDefinition.name}}`\n              };\n            }\n          })\n          .compact()\n          .sortBy((item) => item.label.toLocaleLowerCase())\n          .value()\n      }))\n    );\n  }\n}\n"]}