import { Injector, OnDestroy, OnInit, TemplateRef } from '@angular/core';
import { Router } from '@angular/router';
import { AdaptNavigationComponent, AdaptTranslateService, NavigationAction, ProfileModel } from '@bmc-ux/adapt-angular';
import { RxRecordInstanceService } from '@helix/platform/record/api';
import { RxAngularApplicationService, RxAuthService, RxComponentCanDeactivateGuard, RxCurrentUserService, RxFeatureService, RxGlobalCacheService, RxSystemConfigurationService } from '@helix/platform/shared/api';
import { IRxShellConfig, IRxShellMenuItem } from '@helix/platform/view/api';
import { TranslateService } from '@ngx-translate/core';
import { Observable, Subscription } from 'rxjs';
import { RxGainsightConfiguratorService } from './gainsight/gainsight-configurator.service';
import { IRxShellApplication } from './shell-component.types';
import { RxUserMessageService } from './user-messages/user-message.service';
import * as i0 from "@angular/core";
export declare abstract class ShellBase implements OnInit, OnDestroy {
    protected injector: Injector;
    protected abstract adaptNavigation: AdaptNavigationComponent;
    protected abstract userMessagesPopover: TemplateRef<any>;
    isShellInitialized: boolean;
    busySubscription: Subscription;
    protected currentMenuItemId: number;
    protected translateService: TranslateService;
    protected flattenedMenuItems: IRxShellMenuItem[];
    protected rxComponentCanDeactivateGuard: RxComponentCanDeactivateGuard;
    protected rxUserMessageService: RxUserMessageService;
    protected rxAuthService: RxAuthService;
    protected rxCurrentUserService: RxCurrentUserService;
    protected rxRecordInstanceService: RxRecordInstanceService;
    protected rxGlobalCacheService: RxGlobalCacheService;
    protected rxAngularApplicationService: RxAngularApplicationService;
    protected rxSystemConfigurationService: RxSystemConfigurationService;
    protected rxFeatureService: RxFeatureService;
    protected adaptTranslateService: AdaptTranslateService;
    protected rxGainsightConfiguratorService: RxGainsightConfiguratorService;
    protected router: Router;
    protected applicationDescriptor$: Observable<import("@helix/platform/shared/api").IBundleDescriptor>;
    private destroyed$;
    bundleDescriptors: IRxShellApplication[];
    private removeWindowBlurListener;
    private helixPortalUrl;
    private navigationEnd$;
    private closeBannerSubject;
    hasBanner$: Observable<boolean>;
    private translations;
    alertText: any;
    alertLinkText: any;
    protected shellConfig$: Observable<IRxShellConfig>;
    private applicationSwitcherActionItems$;
    private showUserMessagesAction;
    private administrationSettingsAction;
    navigationMenuItems$: Observable<IRxShellMenuItem[]>;
    navigationActionItems$: Observable<NavigationAction[]>;
    brandingInfo$: Observable<{
        logoClass: string;
        productName: string;
        hideMobileLogo: boolean;
        switcher: {
            filter: {
                placeholder: any;
            };
        };
    }>;
    userProfileMenu$: Observable<ProfileModel>;
    protected constructor(injector: Injector);
    ngOnInit(): void;
    protected highlightMenuItem(menuItem: IRxShellMenuItem): void;
    protected logout(): void;
    protected abstract getActiveNavigationMenuItem(): IRxShellMenuItem;
    protected abstract getNavigationActionItems(): Observable<NavigationAction[]>;
    protected abstract getNavigationMenuItems(): Observable<IRxShellMenuItem[]>;
    protected abstract getUserMenuItems(): Observable<IRxShellMenuItem[]>;
    protected abstract getShellConfig(): Observable<IRxShellConfig>;
    protected launchApplication(bundleId: string, isAngularJsApplication: boolean, portalUrl: string): void;
    closeBanner(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ShellBase, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ShellBase>;
}
