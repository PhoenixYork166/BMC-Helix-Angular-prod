import { ComponentFactoryResolver, NgModule } from '@angular/core';
import { RxViewComponentRegistryService, ViewComponentPropertyType } from '@helix/platform/view/api';
import { <%= classify(viewComponentName) %>Component, <%= classify(viewComponentName) %>Module } from './runtime';
import { <%= classify(viewComponentName) %>DesignComponent, <%= classify(viewComponentName) %>DesignModel, <%= classify(viewComponentName) %>DesignModule } from './design';

@NgModule({
  imports: [<%= classify(viewComponentName) %>DesignModule, <%= classify(viewComponentName) %>Module]
})
export class <%= classify(viewComponentName) %>RegistrationModule {
  constructor(
    private rxViewComponentRegistryService: RxViewComponentRegistryService,
    private componentFactoryResolver: ComponentFactoryResolver
  ) {
    rxViewComponentRegistryService.register({
      type: '<%= dasherize(viewComponentSelector) %>',
      name: '<%= classify(viewComponentName).replace((/([a-z\d])([A-Z])/g), '$1 $2')  %>',
      group: '<%= classify(bundleFriendlyName) %>',
      componentFactory: this.componentFactoryResolver.resolveComponentFactory(<%= classify(viewComponentName) %>Component),
      designComponentFactory: this.componentFactoryResolver.resolveComponentFactory(<%= classify(viewComponentName) %>DesignComponent),
      designComponentModel: <%= classify(viewComponentName) %>DesignModel,
      bundleId: '<%= bundleId %>',
      properties: [
        {
          name: 'styles',
          type: ViewComponentPropertyType.String
        },
        {
          name: 'hidden',
          enableExpressionEvaluation: true
        },
        {
          name: 'message',
          localizable: true,
          enableExpressionEvaluation: true
        }
      ]
    });
  }
}
