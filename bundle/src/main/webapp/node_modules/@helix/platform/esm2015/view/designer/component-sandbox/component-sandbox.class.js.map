{"version":3,"file":"component-sandbox.class.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/designer/component-sandbox/component-sandbox.class.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injector } from '@angular/core';\nimport { Actions, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { castArray } from 'lodash';\nimport { BehaviorSubject, merge, Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  first,\n  map,\n  mapTo,\n  shareReplay,\n  skipWhile,\n  startWith,\n  switchMap,\n  switchMapTo,\n  take,\n  takeUntil\n} from 'rxjs/operators';\nimport { IPlainObject } from '@helix/platform/shared/api';\nimport { ViewDesignerDispatcher } from '../+state/view-designer-dispatcher.service';\nimport { ViewDesignerFacade } from '../+state/view-designer.facade';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport {\n  IViewComponentDesignCommonDataDictionaryBranch,\n  IViewComponentDesignSetPayload,\n  IViewComponentDesignValidationIssue,\n  IViewDesignerInspectorConfig,\n  ViewComponentAddComponentPayload\n} from '../public-interfaces';\nimport { IViewComponentDesignData } from '../public-interfaces/view-component-design.types';\nimport { IViewComponentDesignSandbox } from '../public-interfaces/view-component-design-sandbox.interface';\nimport * as ViewComponentsActions from '../+state/view-component.actions';\nimport { RxViewDesignerModels } from '../core/view-designer-models.service';\nimport { IViewComponentDesignSettablePropertiesDataDictionary } from '../public-interfaces/view-component-design-settable-properties-data-dictionary.interfaces';\nimport {\n  IViewComponentDescriptor,\n  IViewDesignerComponentModel,\n  IViewLayout,\n  RX_VIEW_DEFINITION\n} from '@helix/platform/view/api';\n\nexport class ComponentSandbox implements IViewComponentDesignSandbox {\n  componentProperties$: Observable<IPlainObject>;\n  isComponentSelected$: Observable<boolean>;\n  destroyed$: Observable<boolean>;\n  viewModelsInitialized$: Observable<any>;\n  isViewReadOnly$: Observable<boolean>;\n  componentType: string;\n\n  private viewDesignerFacade = this.injector.get(ViewDesignerFacade);\n  private systemActions$ = this.injector.get<Actions>(Actions);\n  private viewDesignerDispatcher = this.injector.get(ViewDesignerDispatcher);\n  private rxViewDesignerModels = this.injector.get(RxViewDesignerModels);\n\n  private childModelsInitialized$ = new BehaviorSubject(false);\n  private dispatcher$: Subject<Action> = new Subject();\n  private breadcrumbs$ = new ReplaySubject<string>(1);\n\n  constructor(private injector: Injector, public guid: string, readonly descriptor: IViewComponentDescriptor) {\n    this.setUpPublicStreams();\n\n    this.viewDesignerFacade\n      .getComponentType(guid)\n      .pipe(take(1))\n      .subscribe((componentType) => (this.componentType = componentType));\n\n    this.viewDesignerFacade\n      .getComponentModel(this.guid)\n      .pipe(\n        map((model) => Boolean(model.lastUpdateTime || model.name)),\n        switchMap((isExistingViewComponent) => {\n          if (isExistingViewComponent) {\n            return this.viewDesignerFacade.viewModelsInitialized$;\n          } else {\n            return of(null);\n          }\n        }),\n        take(1),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => {\n        this.childModelsInitialized$.next(true);\n      });\n\n    this.viewModelsInitialized$ = this.viewDesignerFacade.viewModelsInitialized$.pipe(takeUntil(this.destroyed$));\n\n    // for optimization reasons postpone emit of breadcrumbs till component gets selected\n    this.isComponentSelected$\n      .pipe(\n        filter((isSelected) => isSelected),\n        first(),\n        switchMap(() => this.breadcrumbs$),\n        distinctUntilChanged(),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe((label) => {\n        this.dispatcher$.next(\n          ViewComponentsActions.setBreadcrumbs({\n            guid: this.guid,\n            label\n          })\n        );\n      });\n\n    merge(\n      // skip initial batch of setValidationIssues actions that are emitted during view designer initialization with empty payload\n      this.dispatcher$.pipe(\n        ofType(ViewComponentsActions.setValidationIssues),\n        skipWhile((action) => action.issues.length === 0)\n      ),\n      this.dispatcher$.pipe(filter((action) => action.type !== ViewComponentsActions.setValidationIssues.type))\n    )\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((action: Action) => this.viewDesignerDispatcher.dispatch(action));\n\n    // complete created subjects\n    this.destroyed$.subscribe(() => {\n      this.childModelsInitialized$.complete();\n      this.dispatcher$.complete();\n      this.breadcrumbs$.complete();\n    });\n  }\n\n  createError(\n    description: string,\n    propertyName?: string,\n    disableCorrection?: boolean\n  ): IViewComponentDesignValidationIssue {\n    return { type: 'error', description, propertyName, disableCorrection };\n  }\n\n  createWarning(\n    description: string,\n    propertyName?: string,\n    disableCorrection?: boolean\n  ): IViewComponentDesignValidationIssue {\n    return { type: 'warning', description, propertyName, disableCorrection };\n  }\n\n  getComponent<TChildComponentDesignProperties = IPlainObject>(\n    guid: string\n  ): Observable<IViewComponentDesignData<TChildComponentDesignProperties>> {\n    return this.viewDesignerFacade.getComponent(guid);\n  }\n\n  getChildComponents<T = IPlainObject>(\n    filterPredicate?: (component: IViewComponentDesignData) => boolean\n  ): Observable<Omit<IViewComponentDesignData<T>, 'children'>[]> {\n    return this.childModelsInitialized$\n      .asObservable()\n      .pipe(\n        filter(Boolean),\n        switchMapTo(this.viewDesignerFacade.getChildComponents<T>(this.guid, filterPredicate)),\n        takeUntil(this.destroyed$)\n      );\n  }\n\n  getChildComponentsTree(): Observable<IViewComponentDesignData[]> {\n    return this.childModelsInitialized$.asObservable().pipe(\n      filter((isInitialized) => isInitialized),\n      switchMapTo(this.viewDesignerFacade.getChildComponentTree(this.guid)),\n      shareReplay(1),\n      takeUntil(this.destroyed$)\n    );\n  }\n\n  getChildComponentGuids(\n    filterPredicate?: (component: IViewComponentDesignData) => boolean,\n    recursive = false\n  ): Observable<string[]> {\n    return this.childModelsInitialized$\n      .asObservable()\n      .pipe(\n        filter(Boolean),\n        switchMapTo(this.viewDesignerFacade.getChildComponentGuids(this.guid, recursive, filterPredicate)),\n        takeUntil(this.destroyed$)\n      );\n  }\n\n  setChildren(data: IViewComponentDesignSetPayload[], parentGuid?: string): void {\n    this.dispatcher$.next(\n      ViewComponentsActions.setChildComponents({\n        payload: {\n          guid: parentGuid || this.guid,\n          data\n        }\n      })\n    );\n  }\n\n  setChildrenByType(data: IViewComponentDesignSetPayload[], types: string[]): void {\n    this.dispatcher$.next(\n      ViewComponentsActions.setChildComponents({\n        payload: {\n          guid: this.guid,\n          data,\n          types\n        }\n      })\n    );\n  }\n\n  getParentComponentGuid(componentType?: string): Observable<string> {\n    return this.viewDesignerFacade\n      .getParentComponentGuid(this.guid, componentType)\n      .pipe(distinctUntilChanged(), takeUntil(this.destroyed$));\n  }\n\n  setValidationIssues(issues: IViewComponentDesignValidationIssue[]): void {\n    this.dispatcher$.next(ViewComponentsActions.setValidationIssues({ issues, guid: this.guid }));\n  }\n\n  updateComponentProperties(properties: IPlainObject): void {\n    this.viewDesignerFacade.updateComponentProperties(this.guid, properties);\n  }\n\n  getComponentPropertyValue<TPropertyName extends keyof IPlainObject>(\n    propertyName: TPropertyName,\n    componentGuid = this.guid\n  ): Observable<any> {\n    return this.viewDesignerFacade\n      .getComponentPropertyValue(componentGuid, propertyName)\n      .pipe(shareReplay(1), takeUntil(this.destroyed$));\n  }\n\n  getViewPropertyValue<T extends keyof IViewDesignModel>(propertyName: T): Observable<IViewDesignModel[T]> {\n    return this.viewDesignerFacade.getViewPropertyValue(propertyName).pipe(shareReplay(1), takeUntil(this.destroyed$));\n  }\n\n  updateInspectorConfig(inspectorConfig: IViewDesignerInspectorConfig): void {\n    this.viewDesignerFacade.setComponentInspector(this.guid, inspectorConfig);\n  }\n\n  setBreadcrumbs(label: string): void {\n    this.breadcrumbs$.next(label);\n  }\n\n  addComponent(data: ViewComponentAddComponentPayload | ViewComponentAddComponentPayload[]): void {\n    const dataArray = castArray<ViewComponentAddComponentPayload>(data);\n\n    const actionPayload = dataArray.map((component) => ({\n      ...component,\n      parentGuid: this.guid\n    }));\n\n    this.dispatcher$.next(ViewComponentsActions.addNewComponents({ payload: actionPayload }));\n  }\n\n  selectComponent(guid: string): void {\n    this.dispatcher$.next(ViewComponentsActions.selectComponent({ guid }));\n  }\n\n  removeComponents(guids: string[], selectParent?: boolean): void {\n    this.viewDesignerFacade.removeViewComponents(guids, selectParent);\n  }\n\n  moveComponent(guid: string, insertIndex: number, targetGuid?: string): void {\n    const data = { guid };\n    const columnIndex = 0;\n    const outletName = RX_VIEW_DEFINITION.defaultOutletName;\n\n    this.dispatcher$.next(\n      ViewComponentsActions.insertComponent({\n        data,\n        insertIndex,\n        columnIndex,\n        outletName,\n        targetGuid\n      })\n    );\n  }\n\n  setLayout(cols: number[]): void {\n    this.dispatcher$.next(\n      ViewComponentsActions.setComponentLayout({\n        guid: this.guid,\n        cols\n      })\n    );\n  }\n\n  getLayout(guid: string): Observable<IViewLayout> {\n    return this.viewDesignerFacade.getComponentLayout(guid).pipe(shareReplay(1), takeUntil(this.destroyed$));\n  }\n\n  setCommonDataDictionary(dataDictionaryBranch: IViewComponentDesignCommonDataDictionaryBranch): void {\n    this.viewDesignerFacade.setComponentCommonDataDictionaryBranch(this.guid, dataDictionaryBranch);\n  }\n\n  setSettablePropertiesDataDictionary(\n    componentName: string,\n    dataDictionary: IViewComponentDesignSettablePropertiesDataDictionary\n  ): void {\n    this.viewDesignerFacade.setComponentSettablePropertiesDataDictionary(this.guid, componentName, dataDictionary);\n  }\n\n  getComponentModel<T extends IViewDesignerComponentModel>(guid: string): T {\n    return this.rxViewDesignerModels.get(guid) as T;\n  }\n\n  getComponentsByType<TComponentDesignProperties>(\n    type: string\n  ): Observable<IViewComponentDesignData<TComponentDesignProperties>[]> {\n    return this.viewDesignerFacade\n      .getComponentsByType<TComponentDesignProperties>(type)\n      .pipe(takeUntil(this.destroyed$));\n  }\n\n  private setUpPublicStreams() {\n    const viewComponentsRemovedAction$ = this.systemActions$.pipe(\n      ofType(ViewComponentsActions.componentsRemoved),\n      filter((action) => action.guids.includes(this.guid))\n    );\n\n    this.destroyed$ = merge(\n      viewComponentsRemovedAction$,\n      this.viewDesignerFacade.initViewDesigner$,\n      this.viewDesignerFacade.destroyViewDesigner$\n    ).pipe(mapTo(true), first());\n\n    this.componentProperties$ = this.viewDesignerFacade\n      .getComponentProperties(this.guid)\n      .pipe(filter(Boolean), takeUntil(this.destroyed$), shareReplay(1));\n\n    this.isComponentSelected$ = this.systemActions$.pipe(\n      ofType(ViewComponentsActions.selectComponent),\n      map(({ guid }) => guid === this.guid),\n      distinctUntilChanged(),\n      startWith(false),\n      takeUntil(this.destroyed$),\n      shareReplay(1)\n    );\n\n    this.isViewReadOnly$ = this.viewDesignerFacade.isViewReadOnly$;\n  }\n}\n"]}