{"version":3,"file":"action-list-model-manager.service.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/designer/form-controls/action-list-control/action-list-model-manager.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAa,MAAM,eAAe,CAAC;AAEhE,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAC1C,OAAO,EAAE,aAAa,EAAE,MAAM,2CAA2C,CAAC;AAC1E,OAAO,EAAE,gCAAgC,EAAE,MAAM,sDAAsD,CAAC;;AAGxG,MAAM,OAAO,+BAA+B;IAG1C,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;QAF9B,WAAM,GAAG,IAAI,GAAG,EAAe,CAAC;IAEC,CAAC;IAE1C,MAAM,CAAC,UAAiC,EAAE,IAAY,EAAE,YAA0C;;QAChG,MAAM,OAAO,GAA6B,IAAI,aAAa,CACzD,IAAI,CAAC,QAAQ,EACb,UAAU,EACV,IAAI,EACJ,UAAU,CAAC,MAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,WAAW,0CAAE,oBAAoB,CAAC;YACvD,CAAC,iCACM,UAAU,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC,KACrF,IAAI,EAAE,YAAY,CAAC,IAAI,EACvB,KAAK,EAAE,YAAY,CAAC,KAAK,IAE7B,CAAC,CAAC,YAAY,CACjB,CAAC;QAEF,MAAM,KAAK,GAAG,UAAU,CAAC,WAAW,IAAI,gCAAgC,CAAC;QACzE,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAEtD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QAEnC,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,IAAY;QACjB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,GAAG,CAAC,IAAY;QACd,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC;QAC1D,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;;4HAtCU,+BAA+B;gIAA/B,+BAA+B;2FAA/B,+BAA+B;kBAD3C,UAAU","sourcesContent":["import { Injectable, Injector, OnDestroy } from '@angular/core';\nimport { IViewActionDescriptor, IViewActionDesignProperties, IViewActionDesignSandbox } from '@helix/platform/view/api';\nimport { isFunction, omit } from 'lodash';\nimport { ActionSandbox } from '../../action-sandbox/action-sandbox.class';\nimport { RxViewDesignerDefaultActionModel } from '../../model/view-designer-default-action-model.class';\n\n@Injectable()\nexport class RxActionListModelManagerService implements OnDestroy {\n  private models = new Map<string, any>();\n\n  constructor(private injector: Injector) {}\n\n  create(descriptor: IViewActionDescriptor, guid: string, initialProps?: IViewActionDesignProperties) {\n    const sandbox: IViewActionDesignSandbox = new ActionSandbox(\n      this.injector,\n      descriptor,\n      guid,\n      isFunction(descriptor?.designModel?.getInitialProperties)\n        ? {\n            ...descriptor.designModel.getInitialProperties(omit(initialProps, ['index', 'name'])),\n            name: initialProps.name,\n            index: initialProps.index\n          }\n        : initialProps\n    );\n\n    const Model = descriptor.designModel || RxViewDesignerDefaultActionModel;\n    const actionModel = new Model(this.injector, sandbox);\n\n    this.models.set(guid, actionModel);\n\n    return actionModel;\n  }\n\n  remove(guid: string): void {\n    this.models.delete(guid);\n  }\n\n  get(guid: string): any {\n    return this.models.get(guid);\n  }\n\n  ngOnDestroy(): void {\n    this.models.forEach((model) => model.sandbox.onDestroy());\n    this.models.clear();\n  }\n}\n"]}