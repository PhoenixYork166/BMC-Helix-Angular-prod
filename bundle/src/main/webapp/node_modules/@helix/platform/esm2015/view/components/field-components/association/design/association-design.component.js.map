{"version":3,"file":"association-design.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/field-components/association/design/association-design.component.ts","../../../../../../../../../libs/platform/view/components/field-components/association/design/association-design.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAqB,MAAM,eAAe,CAAC;AACpE,OAAO,EAAE,sBAAsB,EAAE,MAAM,4BAA4B,CAAC;AACpE,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAC3C,OAAO,EAAE,aAAa,EAAE,MAAM,MAAM,CAAC;AACrC,OAAO,EAAE,qCAAqC,EAAE,MAAM,0CAA0C,CAAC;;;;;;;AAMjG,MAAM,OAAO,4BAA4B;IAJzC;QAQE,oBAAe,GAAG,KAAK,CAAC;QAChB,eAAU,GAAG,IAAI,aAAa,CAAU,CAAC,CAAC,CAAC;QAEnD,uBAAkB,GAAG,qCAAqC,CAAC;KAY5D;IAVC,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAChF,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC7B,CAAC;;yHAlBU,4BAA4B;6GAA5B,4BAA4B,+FCVzC,yjEAwDA;2FD9Ca,4BAA4B;kBAJxC,SAAS;mBAAC;oBACT,QAAQ,EAAE,6BAA6B;oBACvC,WAAW,EAAE,qCAAqC;iBACnD;8BAGC,KAAK;sBADJ,KAAK","sourcesContent":["import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { AssociationDesignModel } from './association-design.model';\nimport { takeUntil } from 'rxjs/operators';\nimport { ReplaySubject } from 'rxjs';\nimport { RxAssociationDesignContainerComponent } from './association-design-container.component';\n\n@Component({\n  selector: 'rx-association-field-design',\n  templateUrl: './association-design.component.html'\n})\nexport class RxAssociationDesignComponent implements OnInit, OnDestroy {\n  @Input()\n  model: AssociationDesignModel;\n\n  hidePlaceholder = false;\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  containerComponent = RxAssociationDesignContainerComponent;\n\n  ngOnInit(): void {\n    this.model.displayedFields$.pipe(takeUntil(this.destroyed$)).subscribe((fields) => {\n      this.hidePlaceholder = fields.length > 0;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n","<div [ngSwitch]=\"model.editingMode$ | async\">\n  <div *ngSwitchCase=\"'views'\" [attr.aria-label]=\"model.label$ | async\">\n    <label class=\"d-block form-control-label\">{{ model.label$ | async }}</label>\n\n    <div class=\"d-flex flex-wrap\">\n      <rx-canvas-outlet class=\"flex-grow-1\" [containerComponent]=\"containerComponent\"></rx-canvas-outlet>\n\n      <button\n        adapt-button\n        size=\"small\"\n        btn-type=\"tertiary\"\n        class=\"btn btn-link py-0 align-right\"\n        type=\"button\"\n        [hidden]=\"!hidePlaceholder\"\n      >\n        {{ 'com.bmc.arsys.rx.client.view-components.record-editor.association.button.clear-all.label' | translate }}\n      </button>\n    </div>\n\n    <adapt-empty-state\n      [hidden]=\"hidePlaceholder\"\n      type=\"objects\"\n      label=\"Add fields in the Properties panel.\"\n    ></adapt-empty-state>\n\n    <div class=\"form-group mt-2\" [hidden]=\"!hidePlaceholder\">\n      <div class=\"list-group\">\n        <div class=\"list-group-item\">\n          <div class=\"rx-record-preview-card w-100\">\n            <button\n              class=\"btn btn-link float-right d-icon-cross p-0\"\n              adapt-button\n              size=\"small\"\n              btn-type=\"tertiary\"\n              type=\"button\"\n            ></button>\n\n            <ul class=\"list-unstyled mb-0\">\n              <li class=\"rx-record-preview-card__field\" *ngFor=\"let field of model.displayedFields$ | async\">\n                <span class=\"rx-record-preview-card__label\" *ngIf=\"field.data.label\">{{ field.data.label }}</span>\n                <span *ngIf=\"field.data.label\">: </span>\n                <span class=\"rx-record-preview-card__value\">{{ field.data.name }}</span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngSwitchCase=\"'dropdown'\">\n    <div [attr.aria-label]=\"model.label$ | async\">\n      <adapt-rx-select [label]=\"model.label$ | async\" [disabled]=\"true\" ngModel></adapt-rx-select>\n    </div>\n  </div>\n</div>\n"]}