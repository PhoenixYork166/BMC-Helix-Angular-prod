{"version":3,"file":"runtime-view-params-modal.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/designer/components/runtime-view-params-modal/runtime-view-params-modal.component.ts","../../../../../../../../libs/platform/view/designer/components/runtime-view-params-modal/runtime-view-params-modal.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACpD,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACvE,OAAO,EAAE,YAAY,EAAE,MAAM,wBAAwB,CAAC;AACtD,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;;;;;AAOhC,MAAM,OAAO,+BAAgC,SAAQ,YAAY;IAI/D,YAAmB,cAA8B,EAAY,QAAkB;QAC7E,KAAK,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;QADf,mBAAc,GAAd,cAAc,CAAgB;QAAY,aAAQ,GAAR,QAAQ,CAAU;QAF/E,gBAAW,GAAoC,EAAE,CAAC;QAIhD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC,WAAW,CAAC;IACnE,CAAC;IAED,OAAO;QACL,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,UAAkB,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC;IAC3E,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;IACxD,CAAC;;4HAfU,+BAA+B;gHAA/B,+BAA+B,2FCV5C,unBAmBA;2FDTa,+BAA+B;kBAL3C,SAAS;mBAAC;oBACT,QAAQ,EAAE,8BAA8B;oBACxC,WAAW,EAAE,4CAA4C;oBACzD,SAAS,EAAE,CAAC,4CAA4C,CAAC;iBAC1D","sourcesContent":["import { Component, Injector } from '@angular/core';\nimport { ActiveModalRef, DismissReasons } from '@bmc-ux/adapt-angular';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { values } from 'lodash';\n\n@Component({\n  selector: 'rx-runtime-view-params-modal',\n  templateUrl: './runtime-view-params-modal.component.html',\n  styleUrls: ['./runtime-view-params-modal.component.scss']\n})\nexport class RuntimeViewParamsModalComponent extends RxModalClass {\n  inputParamNames: string[];\n  inputParams: { [inputName: string]: string } = {};\n\n  constructor(public activeModalRef: ActiveModalRef, protected injector: Injector) {\n    super(activeModalRef, injector);\n    this.inputParamNames = this.activeModalRef.getData().inputParams;\n  }\n\n  isDirty(): boolean {\n    return values(this.inputParams).some((paramValue: string) => paramValue);\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"modal-body\">\n  <div *ngFor=\"let inputParam of inputParamNames; first as isFirst; index as i\">\n    <adapt-rx-textfield\n      [attr.rx-id]=\"'input-param-' + (i + 1)\"\n      [label]=\"inputParam\"\n      [autofocus]=\"isFirst\"\n      [(ngModel)]=\"inputParams[inputParam]\"\n    >\n    </adapt-rx-textfield>\n  </div>\n</div>\n\n<div class=\"modal-footer\">\n  <adapt-button btn-type=\"primary\" (click)=\"activeModalRef.close(inputParams)\" rx-id=\"ok-button\">\n    OK\n  </adapt-button>\n\n  <adapt-button btn-type=\"secondary\" (click)=\"cancel()\" rx-id=\"cancel-button\"> Cancel </adapt-button>\n</div>\n"]}