{"version":3,"file":"association-record-field-selector-editor-dialog.component.js","sourceRoot":"","sources":["../../../../../../../../../../../libs/platform/view/components/field-components/association/design/association-record-field-selector-field/association-record-field-selector-editor-dialog/association-record-field-selector-editor-dialog.component.ts","../../../../../../../../../../../libs/platform/view/components/field-components/association/design/association-record-field-selector-field/association-record-field-selector-editor-dialog/association-record-field-selector-editor-dialog.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Injector, OnInit } from '@angular/core';\nimport { ActiveModalRef, DismissReasons, TreeWrap } from '@bmc-ux/adapt-angular';\nimport { IFieldDefinition } from '@helix/platform/record/api';\nimport { RxGuidService, RxStringService } from '@helix/platform/utils';\nimport { includes, map, pull, sortBy, transform } from 'lodash';\nimport {\n  IAssociatedRecordFieldDialog,\n  IAssociationRecordFieldSelectorEditorDialogConfig,\n  IFieldLabelsMap,\n  IViewAssociationRecordFieldSelectorEditorDialogItem\n} from './association-record-field-selector-editor-dialog.interface';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { TreeNode } from 'primeng/api/treenode';\nimport { CdkDragDrop } from '@angular/cdk/drag-drop/drag-events';\n\n@Component({\n  selector: 'rx-association-record-field-selector-editor-dialog',\n  templateUrl: './association-record-field-selector-editor-dialog.component.html',\n  styleUrls: ['./association-record-field-selector-editor-dialog.component.scss']\n})\nexport class AssociationRecordFieldSelectorEditorDialogComponent extends RxModalClass implements OnInit {\n  config: IAssociationRecordFieldSelectorEditorDialogConfig;\n  fieldLabelsMap: IFieldLabelsMap;\n  filteredFieldDescriptors: IFieldDefinition[];\n  searchValue: string;\n\n  availableFieldTreeNodes: TreeNode<IFieldDefinition>[] = [];\n  canSave = false;\n  selectedFields: IViewAssociationRecordFieldSelectorEditorDialogItem[] = [];\n  treeWrap: TreeWrap = TreeWrap.WrapAll;\n\n  constructor(\n    private rxStringService: RxStringService,\n    private rxGuidService: RxGuidService,\n    public activeModalRef: ActiveModalRef,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n\n    this.config = this.activeModalRef.getData();\n  }\n\n  isDirty(): boolean {\n    return this.canSave;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.fieldLabelsMap = transform(\n      this.config.fields,\n      (result, field) => {\n        result[field.id] = field.name;\n      },\n      {}\n    );\n\n    this.availableFieldTreeNodes = this.config.fields\n      .map((field) => ({\n        data: field,\n        label: field.name\n      }))\n      .sort((field1, field2) => field1.label.localeCompare(field2.label));\n\n    this.selectedFields = map(this.config.selectedFields, (field: IAssociatedRecordFieldDialog) => {\n      const descriptor = this.config.fields.find((fieldItem) => fieldItem.id === Number(field.data.fieldId));\n\n      return {\n        ...field,\n        labelText: field.data.label,\n        indexOrder: Number(field.data.index),\n        descriptor,\n        isOpen: field === this.config.fieldToEdit\n      };\n    });\n\n    this.refreshFieldDescriptorsList();\n  }\n\n  addField(field: IFieldDefinition): void {\n    this.canSave = true;\n\n    this.selectedFields.push({\n      guid: this.rxGuidService.generate(),\n      data: {\n        fieldId: String(field.id),\n        label: field.name,\n        index: String(this.selectedFields.length)\n      },\n      descriptor: field,\n      labelText: field.name,\n      indexOrder: this.selectedFields.length,\n      isOpen: true\n    });\n\n    this.refreshFieldDescriptorsList();\n  }\n\n  onSelectedFieldsListDrop(event: CdkDragDrop<any>): void {\n    this.addField(event.item.data);\n  }\n\n  onSave(): void {\n    const result: IAssociatedRecordFieldDialog[] = this.selectedFields.map((field) => {\n      return {\n        guid: field.guid,\n        type: 'rx-associated-record-field',\n        data: {\n          fieldId: field.data.fieldId,\n          index: String(field.indexOrder),\n          label: field.labelText\n        }\n      };\n    });\n\n    this.activeModalRef.close(result);\n  }\n\n  onRemove(field: IViewAssociationRecordFieldSelectorEditorDialogItem): void {\n    this.canSave = true;\n    pull(this.selectedFields, field);\n    this.refreshFieldDescriptorsList();\n  }\n\n  onMoveUp(field: IViewAssociationRecordFieldSelectorEditorDialogItem, index: number): void {\n    this.canSave = true;\n    const prevField = this.selectedFields[index - 1];\n\n    if (prevField) {\n      prevField.indexOrder++;\n      field.indexOrder--;\n      this.sortFields();\n    }\n  }\n\n  onMoveDown(field: IViewAssociationRecordFieldSelectorEditorDialogItem, index: number): void {\n    this.canSave = true;\n    const nextAction = this.selectedFields[index + 1];\n\n    if (nextAction) {\n      nextAction.indexOrder--;\n      field.indexOrder++;\n      this.sortFields();\n    }\n  }\n\n  toggleOpen(expandAll: boolean): void {\n    this.selectedFields.forEach((field) => (field.isOpen = expandAll));\n  }\n\n  private sortFields(): void {\n    this.selectedFields = sortBy(\n      this.selectedFields,\n      (field: IViewAssociationRecordFieldSelectorEditorDialogItem) => field.indexOrder\n    );\n  }\n\n  refreshFieldDescriptorsList(): void {\n    const selectedFieldIds = this.selectedFields.map((field) => String(field.data.fieldId));\n\n    this.filteredFieldDescriptors = this.config.fields\n      .filter((fieldDescriptor) => !includes(selectedFieldIds, String(fieldDescriptor.id)))\n      .sort((field1, field2) => field1.name.localeCompare(field2.name));\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"designer-modal-body modal-body d-flex mh-100\">\n  <div class=\"row flex-grow-1 w-100\">\n    <div *ngIf=\"!config.isReadOnly\" class=\"col-4 border-right d-flex flex-column mh-100\">\n      <div class=\"d-flex align-items-start justify-content-between\">\n        <h4 class=\"mt-2\">Available fields</h4>\n      </div>\n\n      <div class=\"rx-card card flex-grow-1 mt-2\">\n        <div class=\"card-block\">\n          <div\n            *ngIf=\"availableFieldTreeNodes.length; else adaptTreeEmptyStateTemplate\"\n            cdkDropList\n            cdkDropListSortingDisabled\n            [cdkDropListConnectedTo]=\"['selected-fields']\"\n          >\n            <adapt-tree [value]=\"availableFieldTreeNodes\" filter=\"true\" [wrap]=\"treeWrap\">\n              <ng-template let-field adaptTreeNodeTemplate>\n                <div *ngIf=\"field.data\" class=\"rx-tree-draggable-node\" cdkDrag [cdkDragData]=\"field.data\">\n                  <div (dblclick)=\"addField(field.data)\">\n                    <button\n                      type=\"button\"\n                      class=\"rx-button-unstyled d-icon-plus_circle\"\n                      (click)=\"addField(field.data)\"\n                    ></button>\n\n                    <span class=\"rx-tree-node-label ml-3\">{{ field.data.name }}</span>\n                  </div>\n                </div>\n              </ng-template>\n            </adapt-tree>\n          </div>\n\n          <ng-template #adaptTreeEmptyStateTemplate>\n            <div class=\"d-flex justify-content-center h-100 align-items-center mt-2\">\n              <adapt-empty-state class=\"w-100\" label=\"No fields found\" type=\"search\"></adapt-empty-state>\n            </div>\n          </ng-template>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"d-flex flex-column mh-100 {{ config.isReadOnly ? 'col' : 'col-8' }}\">\n      <div class=\"d-flex align-items-start justify-content-between\">\n        <h4 class=\"mt-2\">Selected fileds</h4>\n\n        <div *ngIf=\"selectedFields.length\" class=\"btn-group\">\n          <button adapt-button btn-type=\"tertiary\" type=\"button\" rx-id=\"expand-all-button\" (click)=\"toggleOpen(true)\">\n            {{ 'com.bmc.arsys.rx.client.common.expand-all.label' | translate }}\n          </button>\n\n          <button\n            adapt-button\n            btn-type=\"tertiary\"\n            type=\"button\"\n            rx-id=\"collapse-all-button\"\n            (click)=\"toggleOpen(false)\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.collapse-all.label' | translate }}\n          </button>\n        </div>\n      </div>\n\n      <div\n        id=\"selected-fields\"\n        class=\"designer-modal-accordion-wrapper\"\n        cdkDropList\n        (cdkDropListDropped)=\"onSelectedFieldsListDrop($event)\"\n      >\n        <adapt-accordion [multiselect]=\"true\">\n          <div\n            *ngFor=\"let field of selectedFields; let index = index; let first = first; let last = last\"\n            class=\"designer-modal-accordion-content\"\n            cdkDrag\n            cdkDragLockAxis=\"y\"\n            [cdkDragDisabled]=\"true\"\n          >\n            <adapt-accordion-tab\n              class=\"d-block\"\n              [isOpen]=\"field.isOpen\"\n              (open)=\"field.isOpen = true\"\n              (close)=\"field.isOpen = false\"\n            >\n              <div class=\"card-title-text w-100\">\n                <div class=\"designer-modal-card-title-content\">\n                  <div class=\"left-header-block pl-0\">\n                    <div class=\"rx-ellipsis\" [title]=\"fieldLabelsMap[field.data.fieldId]\" rx-id=\"card-title\">\n                      {{ fieldLabelsMap[field.data.fieldId] }}\n                    </div>\n                  </div>\n\n                  <div *ngIf=\"!config.isReadOnly\" class=\"right-header-block\">\n                    <div class=\"designer-modal-card-title-index-buttons\">\n                      <button\n                        class=\"d-icon-left-triangle_down rx-button-unstyled\"\n                        type=\"button\"\n                        [disabled]=\"last\"\n                        (click)=\"$event.stopPropagation(); onMoveDown(field, index)\"\n                        rx-id=\"move-down-button\"\n                      ></button>\n\n                      <button\n                        class=\"d-icon-left-triangle_up rx-button-unstyled\"\n                        type=\"button\"\n                        [disabled]=\"first\"\n                        (click)=\"$event.stopPropagation(); onMoveUp(field, index)\"\n                        rx-id=\"move-up-button\"\n                      ></button>\n                    </div>\n\n                    <button\n                      class=\"d-icon-left-cross_adapt p-1 pr-4 ml-3\"\n                      adapt-button\n                      size=\"small\"\n                      type=\"button\"\n                      (click)=\"onRemove(field)\"\n                      rx-id=\"remove-button\"\n                    >\n                      {{ 'com.bmc.arsys.rx.client.common.remove.label' | translate }}\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              <adapt-rx-textfield\n                class=\"text-aria-resize\"\n                label=\"Label\"\n                [(ngModel)]=\"field.labelText\"\n                (ngModelChange)=\"canSave = true\"\n              >\n              </adapt-rx-textfield>\n            </adapt-accordion-tab>\n          </div>\n        </adapt-accordion>\n      </div>\n\n      <div *ngIf=\"!selectedFields.length\" class=\"d-flex justify-content-center h-100 align-items-center mt-2\">\n        <adapt-empty-state class=\"w-100\" label=\"No fields selected\" type=\"config\"></adapt-empty-state>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal-footer\">\n  <button\n    *ngIf=\"!config.isReadOnly\"\n    adapt-button\n    btn-type=\"primary\"\n    type=\"button\"\n    rx-id=\"save-button\"\n    [disabled]=\"!canSave\"\n    (click)=\"onSave()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button adapt-button btn-type=\"secondary\" type=\"button\" rx-id=\"cancel-button\" (click)=\"cancel()\">\n    {{\n      config.isReadOnly\n        ? ('com.bmc.arsys.rx.client.common.close.label' | translate)\n        : ('com.bmc.arsys.rx.client.common.cancel.label' | translate)\n    }}\n  </button>\n</div>\n"]}