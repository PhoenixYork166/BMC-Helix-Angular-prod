{"version":3,"file":"named-filter-options-editor-modal.component.js","sourceRoot":"","sources":["../../../../../../../../../../../../../libs/platform/view/components/record-grid/design/editors/record-grid-column-editor-control/record-grid-column-editor-modal/named-filter-options/named-filter-options-editor/named-filter-options-editor-modal.component.ts","../../../../../../../../../../../../../libs/platform/view/components/record-grid/design/editors/record-grid-column-editor-control/record-grid-column-editor-modal/named-filter-options/named-filter-options-editor/named-filter-options-editor-modal.component.html"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, Component, ElementRef, Injector, OnInit, QueryList, ViewChildren } from '@angular/core';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { ActiveModalRef, AdaptAccordionTabComponent, DismissReasons } from '@bmc-ux/adapt-angular';\nimport { forEach, includes, map } from 'lodash';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport {\n  IExpressionEditorPropertyChange,\n  IExpressionFormControlOptions,\n  RxExpressionEditorService\n} from '@helix/platform/shared/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { INamedFilterOptionDesignData, INamedFilterOptionsEditorConfig } from '../named-filter-options.types';\nimport { RxGuidService } from '@helix/platform/utils';\nimport { NamedFilterOptionExpressionConfigurator } from './named-filter-option-expression-configurator.class';\nimport { ExpressionOperatorGroup, ExpressionOperatorRowsByGroup } from '@helix/platform/shared/api';\n\ninterface IAccordionTabs {\n  [id: string]: boolean;\n}\n\n@Component({\n  selector: 'rx-named-filter-options-editor-modal',\n  templateUrl: './named-filter-options-editor-modal.component.html',\n  styleUrls: ['./named-filter-options-editor-modal.component.scss'],\n  providers: [NamedFilterOptionExpressionConfigurator]\n})\nexport class RecordGridNamedFilterOptionsEditorModalComponent extends RxModalClass implements OnInit, AfterViewInit {\n  @ViewChildren(AdaptAccordionTabComponent, { read: ElementRef })\n  private accordionTabEls: QueryList<ElementRef>;\n\n  config: INamedFilterOptionsEditorConfig = this.activeModalRef.getData();\n  queryExpressionOptions: IExpressionFormControlOptions;\n  namedFilterOptionsFormArray: FormArray = this.formBuilder.array([]);\n\n  accordionTabs: IAccordionTabs = {};\n\n  constructor(\n    public activeModalRef: ActiveModalRef,\n    private rxGuidService: RxGuidService,\n    private rxExpressionEditorService: RxExpressionEditorService,\n    private formBuilder: FormBuilder,\n    private translateService: TranslateService,\n    private expressionConfigurator: NamedFilterOptionExpressionConfigurator,\n    injector: Injector\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.expressionConfigurator.configureForProperty({\n      propertyPath: 'namedFilterOptions',\n      operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.All)\n    });\n\n    this.queryExpressionOptions = {\n      label: 'Filter',\n      dataDictionary$: this.expressionConfigurator.getDataDictionary('namedFilterOptions'),\n      operators: this.expressionConfigurator.getOperators('namedFilterOptions'),\n      isRequired: true\n    };\n\n    forEach(this.config.namedFilterOptions, (props, index) => {\n      this.accordionTabs[props.guid] = index === this.config.activeIndex;\n\n      this.namedFilterOptionsFormArray.push(this.getFormGroup(props));\n    });\n\n    if (this.config.isReadOnly) {\n      this.namedFilterOptionsFormArray.disable();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.config.activeIndex) {\n      this.accordionTabEls.toArray()[this.config.activeIndex].nativeElement.scrollIntoView({\n        block: 'nearest'\n      });\n    }\n  }\n\n  addNamedFilterOption(): void {\n    this.markAsDirty();\n\n    const guid = this.rxGuidService.generate();\n\n    this.accordionTabs[guid] = true;\n\n    let title = 'New filter option';\n    let counter = 0;\n    let titleAlreadyExists = false;\n    const titles = map(this.namedFilterOptionsFormArray.getRawValue(), 'title');\n\n    do {\n      title = counter === 0 ? title : `New filter option ${counter}`;\n      counter++;\n      titleAlreadyExists = includes(titles, title);\n    } while (titleAlreadyExists);\n\n    this.namedFilterOptionsFormArray.push(\n      this.getFormGroup({\n        data: {\n          title,\n          filterExpression: '',\n          index: this.namedFilterOptionsFormArray.length\n        },\n        guid\n      })\n    );\n\n    setTimeout(() => {\n      this.accordionTabEls.last.nativeElement.scrollIntoView({\n        block: 'nearest'\n      });\n    });\n  }\n\n  removeNamedFilterOption(index: number): void {\n    this.namedFilterOptionsFormArray.removeAt(index);\n    this.markAsDirty();\n  }\n\n  openExpressionEditor(title: AbstractControl, filterExpression: AbstractControl): void {\n    this.rxExpressionEditorService\n      .openEditor({\n        property: {\n          path: 'namedFilterOptions',\n          value: filterExpression.value,\n          label: title.value\n        },\n        isReadOnly: false,\n        expressionConfigurator: this.expressionConfigurator,\n        legend: [\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'),\n            icon: 'd-icon-dollar'\n          },\n          {\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.client.expression-editor.legend.view-component-property.label'\n            ),\n            icon: 'd-icon-file_o_gear'\n          }\n        ]\n      })\n      .subscribe((expression: IExpressionEditorPropertyChange) => {\n        filterExpression.setValue(expression.value);\n        this.markAsDirty();\n      });\n  }\n\n  moveNamedFilterOption(fromIndex: number, toIndex: number): void {\n    moveItemInArray(this.namedFilterOptionsFormArray.controls, fromIndex, toIndex);\n    this.markAsDirty();\n  }\n\n  onSelectedNamedFilterOptionDrop(event: CdkDragDrop<any[], any>): void {\n    moveItemInArray(this.namedFilterOptionsFormArray.controls, event.previousIndex, event.currentIndex);\n    this.markAsDirty();\n  }\n\n  onSave(): void {\n    const formValues = this.namedFilterOptionsFormArray.getRawValue();\n\n    const namedFilterOptions: INamedFilterOptionDesignData[] = formValues.map(\n      ({ guid, title, filterExpression }, index) => ({\n        guid,\n        data: {\n          title,\n          filterExpression,\n          index\n        }\n      })\n    );\n\n    this.activeModalRef.close(namedFilterOptions);\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  toggleOpen(expandAll: boolean): void {\n    forEach(this.accordionTabs, (val, key) => {\n      this.accordionTabs[key] = expandAll;\n    });\n  }\n\n  private getCheckTitleDuplicateValidator(currentNamedFilterOption: INamedFilterOptionDesignData): ValidatorFn {\n    return (control: AbstractControl) => {\n      const title = control.value;\n\n      if (\n        title &&\n        this.namedFilterOptionsFormArray.controls.some(\n          (namedFilterOption) =>\n            namedFilterOption.value.title === title && namedFilterOption.value.guid !== currentNamedFilterOption.guid\n        )\n      ) {\n        return { duplicateFilterOptionName: { message: 'Filter option with this name already exists.' } };\n      }\n\n      return null;\n    };\n  }\n\n  private getFormGroup(properties: INamedFilterOptionDesignData): FormGroup {\n    return this.formBuilder.group({\n      guid: properties.guid,\n      title: [\n        properties.data.title,\n        [\n          Validators.required,\n          this.getCheckTitleDuplicateValidator(properties).bind(this),\n          (control: AbstractControl) =>\n            control?.value?.includes(';')\n              ? { invalidName: { message: 'A filter option name cannot contain any of the following characters: ;' } }\n              : null\n        ]\n      ],\n      filterExpression: [properties.data.filterExpression, Validators.required]\n    });\n  }\n}\n","<div class=\"designer-modal-body modal-body d-flex mh-100\">\n  <div class=\"row flex-grow-1 w-100\">\n    <div class=\"d-flex flex-column mh-100 col\">\n      <div class=\"d-flex align-items-start justify-content-between\">\n        <button\n          *ngIf=\"!config.isReadOnly\"\n          class=\"mt-2 p-0\"\n          rx-id=\"add-button\"\n          adapt-button\n          type=\"button\"\n          btn-type=\"tertiary\"\n          (click)=\"addNamedFilterOption()\"\n        >\n          <span class=\"d-icon-left-plus_circle\"></span>\n\n          {{\n            'com.bmc.arsys.rx.client.view-components.named-filter-options.add-named-filter-option.button.label'\n              | translate\n          }}\n        </button>\n\n        <div *ngIf=\"namedFilterOptionsFormArray.controls.length\" class=\"btn-group\">\n          <button adapt-button btn-type=\"tertiary\" type=\"button\" rx-id=\"expand-all-button\" (click)=\"toggleOpen(true)\">\n            {{ 'com.bmc.arsys.rx.client.common.expand-all.label' | translate }}\n          </button>\n\n          <button\n            adapt-button\n            btn-type=\"tertiary\"\n            type=\"button\"\n            rx-id=\"collapse-all-button\"\n            (click)=\"toggleOpen(false)\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.collapse-all.label' | translate }}\n          </button>\n        </div>\n      </div>\n\n      <div\n        *ngIf=\"namedFilterOptionsFormArray.controls.length\"\n        class=\"designer-modal-accordion-wrapper\"\n        cdkDropList\n        (cdkDropListDropped)=\"onSelectedNamedFilterOptionDrop($event)\"\n      >\n        <adapt-accordion [multiselect]=\"true\">\n          <div\n            *ngFor=\"\n              let namedFilterOption of namedFilterOptionsFormArray.controls;\n              let index = index;\n              let first = first;\n              let last = last\n            \"\n            class=\"designer-modal-accordion-content\"\n            cdkDrag\n            cdkDragLockAxis=\"y\"\n            [cdkDragData]=\"namedFilterOption\"\n            [cdkDragDisabled]=\"config.isReadOnly\"\n          >\n            <div *ngIf=\"!config.isReadOnly\" class=\"designer-modal-drag-handle d-icon-left-dots\" cdkDragHandle></div>\n\n            <adapt-accordion-tab\n              class=\"d-block\"\n              [formGroup]=\"namedFilterOption\"\n              [isOpen]=\"accordionTabs[namedFilterOption.get('guid').value]\"\n            >\n              <div class=\"card-title-text w-100\">\n                <div class=\"designer-modal-card-title-content\">\n                  <div class=\"left-header-block\" [class.pl-0]=\"config.isReadOnly\">\n                    <div class=\"rx-ellipsis\" [title]=\"namedFilterOption.get('title').value\" rx-id=\"card-title\">\n                      {{ namedFilterOption.get('title').value }}\n                    </div>\n                  </div>\n\n                  <div *ngIf=\"!config.isReadOnly\" class=\"right-header-block\">\n                    <div class=\"designer-modal-card-title-index-buttons\">\n                      <button\n                        class=\"d-icon-left-triangle_down rx-button-unstyled\"\n                        type=\"button\"\n                        [disabled]=\"last\"\n                        (click)=\"$event.stopPropagation(); moveNamedFilterOption(index, index + 1)\"\n                        rx-id=\"move-down-button\"\n                      ></button>\n\n                      <button\n                        class=\"d-icon-left-triangle_up rx-button-unstyled\"\n                        type=\"button\"\n                        [disabled]=\"first\"\n                        (click)=\"$event.stopPropagation(); moveNamedFilterOption(index, index - 1)\"\n                        rx-id=\"move-up-button\"\n                      ></button>\n                    </div>\n\n                    <button\n                      class=\"d-icon-left-cross_adapt p-1 pr-4 ml-3\"\n                      adapt-button\n                      size=\"small\"\n                      type=\"button\"\n                      (click)=\"$event.stopPropagation(); removeNamedFilterOption(index)\"\n                      rx-id=\"remove-button\"\n                    >\n                      {{ 'com.bmc.arsys.rx.client.common.remove.label' | translate }}\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              <adapt-rx-textfield\n                class=\"form-group d-block\"\n                rx-id=\"filter-option-name-field\"\n                label=\"{{\n                  'com.bmc.arsys.rx.client.view-components.named-filter-options.name-field.label' | translate\n                }}\"\n                formControlName=\"title\"\n                [required]=\"true\"\n                (ngModelChange)=\"markAsDirty()\"\n                rxNoWhitespace\n              ></adapt-rx-textfield>\n\n              <rx-expression-form-control\n                formControlName=\"filterExpression\"\n                rx-id=\"query-expression-field\"\n                [options]=\"queryExpressionOptions\"\n                (events)=\"\n                  openExpressionEditor(namedFilterOption.get('title'), namedFilterOption.get('filterExpression'))\n                \"\n                [required]=\"true\"\n                (ngModelChange)=\"markAsDirty()\"\n              ></rx-expression-form-control>\n            </adapt-accordion-tab>\n          </div>\n        </adapt-accordion>\n      </div>\n\n      <div\n        *ngIf=\"!namedFilterOptionsFormArray.controls.length\"\n        class=\"d-flex justify-content-center h-100 align-items-center mt-2\"\n      >\n        <adapt-empty-state\n          class=\"w-100\"\n          label=\"{{ 'com.bmc.arsys.rx.client.view-components.named-filter-options.empty-state.message' | translate }}\"\n          type=\"search\"\n        ></adapt-empty-state>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal-footer\">\n  <button\n    *ngIf=\"!config.isReadOnly\"\n    adapt-button\n    btn-type=\"primary\"\n    type=\"button\"\n    rx-id=\"save-button\"\n    [disabled]=\"this.namedFilterOptionsFormArray.invalid || !isDirty()\"\n    (click)=\"onSave()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button adapt-button btn-type=\"secondary\" type=\"button\" rx-id=\"cancel-button\" (click)=\"cancel()\">\n    {{\n      config.isReadOnly\n        ? ('com.bmc.arsys.rx.client.common.close.label' | translate)\n        : ('com.bmc.arsys.rx.client.common.cancel.label' | translate)\n    }}\n  </button>\n</div>\n"]}