{"version":3,"file":"service-list.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/components/service-list/runtime/service-list.component.ts","../../../../../../../../libs/platform/view/components/service-list/runtime/service-list.component.html"],"names":[],"mappings":"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","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { find, flow, forEach, groupBy, map } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, finalize, pluck, takeUntil, withLatestFrom } from 'rxjs/operators';\nimport { RxSelectionChangeEvent, RxSelectOption, RxSelectOptionsGroup } from '@bmc-ux/adapt-angular';\nimport { ICatalog, ICatalogItem } from './service-list.interface';\nimport { IServiceListProperties } from '../service-list.types';\n\n@Component({\n  selector: 'rx-service-list',\n  templateUrl: './service-list.component.html'\n})\nexport class ServiceListComponent extends BaseViewComponent implements OnInit {\n  @Input()\n  config: Observable<IServiceListProperties>;\n\n  isDisabled = true;\n  serviceListOptions: RxSelectOptionsGroup[] = [];\n\n  service: RxSelectOption = {\n    id: null,\n    name: null,\n    guid: null\n  };\n\n  constructor(private httpClient: HttpClient) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    const serviceRequestId$ = this.config.pipe(\n      pluck('serviceRequestId'),\n      distinctUntilChanged(),\n      takeUntil(this.destroyed$)\n    );\n\n    this.httpClient\n      .get<ICatalog>('/api/com.bmc.dsm.chatbot/rx/application/chatbot/services')\n      .pipe(\n        withLatestFrom(serviceRequestId$),\n        finalize(() => {\n          this.isDisabled = false;\n        }),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(([chatbotServices, serviceRequestId]) => {\n        this.serviceListOptions = flow(\n          (catalogs: ICatalogItem[]) => groupBy(catalogs, 'groupName'),\n          (catalogsByGroup) =>\n            map(catalogsByGroup, (catalogs: ICatalogItem[], groupName: string) => ({\n              name: groupName,\n              children: map(catalogs, (catalog: ICatalogItem) => ({\n                id: catalog.id,\n                name: catalog.name,\n                guid: catalog.guid\n              }))\n            }))\n        )(chatbotServices?.catalogDetailsList || []);\n\n        this.selectServiceRequest(serviceRequestId);\n      });\n\n    serviceRequestId$.pipe(takeUntil(this.destroyed$)).subscribe((requestId: string) => {\n      this.selectServiceRequest(requestId);\n    });\n  }\n\n  private selectServiceRequest(serviceRequestId): void {\n    let service;\n\n    forEach(this.serviceListOptions, (item: RxSelectOptionsGroup) => {\n      if (service) {\n        return false;\n      }\n\n      service = find(item.children, {\n        id: serviceRequestId\n      });\n    });\n\n    this.service = service\n      ? [\n          {\n            id: service.id,\n            name: service.name,\n            guid: service.guid\n          }\n        ]\n      : [];\n  }\n\n  public onSelectionChange(event: RxSelectionChangeEvent): void {\n    const service: ICatalogItem = event.options[0];\n\n    this.notifyPropertyChanged('serviceRequestId', service.id);\n    this.notifyPropertyChanged('serviceRequestName', service.name);\n    this.notifyPropertyChanged('serviceRequestGuid', service.guid);\n  }\n\n  public optionFormatter(option: RxSelectOption): string {\n    return option.name;\n  }\n}\n","<adapt-rx-select\n  label=\"Service name\"\n  required=\"true\"\n  [options]=\"serviceListOptions\"\n  [disabled]=\"isDisabled\"\n  (onSelectionChange)=\"onSelectionChange($event)\"\n  [ngModel]=\"service\"\n  [optionFormatter]=\"optionFormatter\"\n  enableFilter=\"true\"\n>\n</adapt-rx-select>\n"]}