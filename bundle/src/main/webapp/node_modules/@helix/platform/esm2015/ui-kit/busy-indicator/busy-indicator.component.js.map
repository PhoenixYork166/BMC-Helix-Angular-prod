{"version":3,"file":"busy-indicator.component.js","sourceRoot":"","sources":["../../../../../../libs/platform/ui-kit/busy-indicator/busy-indicator.component.ts","../../../../../../libs/platform/ui-kit/busy-indicator/busy-indicator.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAA+C,MAAM,eAAe,CAAC;AAC9F,OAAO,EAAE,KAAK,EAAE,MAAM,MAAM,CAAC;;;AAO7B,MAAM,OAAO,wBAAwB;IAiBnC;QAbQ,wBAAmB,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAExC,mBAAc,GAAe;YACnC,IAAI,EAAE,IAAI,CAAC,mBAAmB;YAC9B,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,EAAE;YACX,WAAW,EAAE,CAAC;YACd,KAAK,EAAE,CAAC;YACR,UAAU,EAAE,SAAS;SACtB,CAAC;QAKA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;IACpC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE;YACnD,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;IACzC,CAAC;IAEO,YAAY;QAClB,IAAI,CAAC,MAAM,mCACN,IAAI,CAAC,cAAc,GACnB,IAAI,CAAC,OAAO,CAChB,CAAC;IACJ,CAAC;;qHAxCU,wBAAwB;yGAAxB,wBAAwB,8GCRrC,qCACA;2FDOa,wBAAwB;kBAJpC,SAAS;mBAAC;oBACT,QAAQ,EAAE,mBAAmB;oBAC7B,WAAW,EAAE,iCAAiC;iBAC/C;0EAGC,OAAO;sBADN,KAAK","sourcesContent":["import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { NEVER } from 'rxjs';\nimport { BusyConfig } from '@bmc-ux/adapt-angular';\n\n@Component({\n  selector: 'rx-busy-indicator',\n  templateUrl: './busy-indicator.component.html'\n})\nexport class RxBusyIndicatorComponent implements OnInit, OnChanges, OnDestroy {\n  @Input()\n  options?: BusyConfig;\n\n  private defaultSubscription = NEVER.subscribe();\n\n  private defaultOptions: BusyConfig = {\n    busy: this.defaultSubscription,\n    backdrop: true,\n    message: '',\n    minDuration: 0,\n    delay: 0,\n    loaderType: 'section'\n  };\n\n  config: BusyConfig;\n\n  constructor() {\n    this.config = this.defaultOptions;\n  }\n\n  ngOnInit(): void {\n    this.updateConfig();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options && !changes.options.firstChange) {\n      this.updateConfig();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.defaultSubscription.unsubscribe();\n  }\n\n  private updateConfig(): void {\n    this.config = {\n      ...this.defaultOptions,\n      ...this.options\n    };\n  }\n}\n","<span [ngBusy]=\"config\"></span>\n"]}