{"version":3,"file":"upload-data-file-step.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/dataload/components/data-import/upload-data-file-step/upload-data-file-step.component.ts","../../../../../../../../libs/platform/dataload/components/data-import/upload-data-file-step/upload-data-file-step.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, ComponentFactoryResolver, Input, OnDestroy, OnInit } from '@angular/core';\nimport { RxWizardModalComponent, RxWizardService } from '@helix/platform/shared/components';\nimport { FileObj } from '@bmc-ux/adapt-angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RecordInstance, RxRecordInstanceService } from '@helix/platform/record/api';\nimport { DL_DATA_IMPORT } from '../data-import.constant';\nimport { distinctUntilChanged, filter, map, switchMap, takeUntil, tap, withLatestFrom } from 'rxjs/operators';\nimport { RxNotificationService } from '@helix/platform/shared/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { from, iif, NEVER, Observable, of, ReplaySubject, Subject, Subscription, timer } from 'rxjs';\nimport {\n  IDataImportContext,\n  IDataImportSheetConfiguration,\n  IDataloadExcelSheet,\n  IDataloadWizardContext,\n  IDataloadWorksheet,\n  IImportJobInfo\n} from '../data-import.types';\nimport { DataImportService } from '../data-import.service';\nimport { camelCase, forEach } from 'lodash';\nimport { DataImportMappingStepComponent } from '../data-import-mapping-step/data-import-mapping-step.component';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\n\n@Component({\n  selector: 'dl-upload-data-file-step',\n  templateUrl: './upload-data-file-step.component.html',\n  styleUrls: ['./upload-data-file-step.component.scss']\n})\nexport class UploadDataFileStepComponent implements OnInit, OnDestroy {\n  @Input()\n  context: IDataloadWizardContext;\n\n  private isWorksheetProcessed = false;\n  isZipAttachmentUploaded: boolean;\n  uploadDataFileForm: FormGroup;\n  private uploadedExcelSheets: IDataloadExcelSheet[];\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private processCustomizedImport$ = new Subject<void>();\n  busy: Subscription;\n  isCustomizedImportStarted: boolean;\n\n  saveDataFileConfiguration: Subscription = this.processCustomizedImport$\n    .pipe(\n      takeUntil(this.destroyed$),\n      tap(() => {\n        this.busy = NEVER.subscribe();\n      }),\n      switchMap(() => {\n        if (this.isWorksheetProcessed) {\n          return of(null);\n        } else {\n          return iif(\n            () => !!this.context.createdRecordInstanceId,\n            this.rxRecordInstanceService.get(DL_DATA_IMPORT.recordDefinitionName, this.context.createdRecordInstanceId),\n            this.rxRecordInstanceService.getNew(DL_DATA_IMPORT.recordDefinitionName)\n          ).pipe(\n            switchMap((recordInstance: RecordInstance) => {\n              this.updateRecordInstanceFields(recordInstance);\n\n              return this.context.createdRecordInstanceId\n                ? this.rxRecordInstanceService.save(recordInstance)\n                : this.rxRecordInstanceService.create(recordInstance);\n            }),\n            tap((recordInstanceResponse: any) => {\n              if (!this.context.createdRecordInstanceId) {\n                this.context.createdRecordInstanceId = recordInstanceResponse?.id;\n              }\n            })\n          );\n        }\n      }),\n      switchMap(() =>\n        this.isWorksheetProcessed\n          ? of<IDataloadWorksheet>(null)\n          : this.dataImportService.getDataRecordWorksheet(this.context.createdRecordInstanceId)\n      ),\n      withLatestFrom(\n        timer(0).pipe(\n          switchMap(() =>\n            this.context?.clonedConfigurationInstanceId\n              ? this.rxRecordInstanceService.get(\n                  DL_DATA_IMPORT.recordDefinitionName,\n                  this.context.clonedConfigurationInstanceId\n                )\n              : of(null)\n          )\n        )\n      ),\n      tap(() => {\n        this.busy.unsubscribe();\n      }),\n      switchMap(([uploadedExcelFile, clonedRecordInstance]) => {\n        if (this.isWorksheetProcessed) {\n          return of({ gotoNextStep: true });\n        } else if (uploadedExcelFile?.sheets) {\n          this.isWorksheetProcessed = true;\n          this.uploadedExcelSheets = uploadedExcelFile.sheets;\n          this.rxWizardModalComponent.api.removeStep(1);\n\n          forEach(this.uploadedExcelSheets, (sheet: IDataloadExcelSheet) => {\n            const stepId = camelCase(sheet.sheetName);\n\n            sheet.configurations.stepId = stepId;\n            this.context.excelSheetsConfiguration[sheet.sheetName] = sheet.configurations;\n\n            this.rxWizardModalComponent.api.addStep({\n              id: stepId,\n              name: sheet.sheetName,\n              options: {\n                sheetName: sheet.sheetName\n              },\n              componentFactory: this.componentFactoryResolver.resolveComponentFactory(DataImportMappingStepComponent)\n            });\n\n            this.context.dataImportContext.dataImportConfigurations.sheets.push(\n              this.dataImportService.getEmptyCurrentSheetDataMapConfig(sheet.sheetName)\n            );\n          });\n\n          if (this.context.clonedConfigurationInstanceId) {\n            const clonedConfig: IDataImportContext = JSON.parse(\n              clonedRecordInstance.fieldInstances[DL_DATA_IMPORT.fields.mappingConfig].value\n            ) || { dataImportConfigurations: { sheets: [] } };\n\n            const nonMatchedSheetNames = clonedConfig.dataImportConfigurations.sheets.filter(\n              (clonedSheet: IDataImportSheetConfiguration) =>\n                !uploadedExcelFile.sheets.some(\n                  (excelSheet: IDataloadExcelSheet) => excelSheet.sheetName === clonedSheet.name\n                )\n            );\n\n            if (\n              clonedConfig.dataImportConfigurations.sheets.length !== uploadedExcelFile.sheets.length ||\n              nonMatchedSheetNames.length\n            ) {\n              return from(\n                this.rxModalService.confirm({\n                  title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n                  modalStyle: RX_MODAL.modalStyles.warning,\n                  message: this.translateService.instant(\n                    'com.bmc.arsys.rx.client.dataload.import.configuration-mismatch.message'\n                  ),\n                  buttons: {\n                    confirmButton: this.translateService.instant('com.bmc.arsys.rx.client.common.cancel.label'),\n                    dismissButton: this.translateService.instant('com.bmc.arsys.rx.client.common.continue.label')\n                  }\n                })\n              ).pipe(\n                switchMap((result: boolean) =>\n                  iif(() => result, this.deleteCreatedDataImportInstance(), of({ recordDeleted: false }))\n                ),\n                tap((response: { recordDeleted: boolean }) => {\n                  if (response.recordDeleted) {\n                    this.rxWizardModalComponent.api.markPristine();\n                    this.rxWizardModalComponent.close();\n                  } else {\n                    this.goToDataConfigurationStep();\n                  }\n                })\n              );\n            } else {\n              this.context.dataImportContext.dataImportConfigurations.sheets =\n                clonedConfig.dataImportConfigurations.sheets;\n\n              this.context.isClonedConfigMatched = true;\n\n              return of({ gotoNextStep: true });\n            }\n          } else {\n            return of({ gotoNextStep: true });\n          }\n        } else {\n          this.isWorksheetProcessed = false;\n          this.uploadDataFileForm.markAsDirty();\n\n          this.rxNotificationService.addErrorMessage(\n            this.translateService.instant(\n              'com.bmc.arsys.rx.client.dataload.import.invalid-attachment-uploaded-error.message'\n            )\n          );\n\n          return this.deleteCreatedDataImportInstance();\n        }\n      })\n    )\n    .subscribe((response: { gotoNextStep?: boolean; recordDeleted?: boolean }) => {\n      if (response.gotoNextStep) {\n        setTimeout(() => this.goToDataConfigurationStep());\n      }\n    });\n\n  constructor(\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private rxNotificationService: RxNotificationService,\n    private dataImportService: DataImportService,\n    private rxModalService: RxModalService,\n    private translateService: TranslateService,\n    private formBuilder: FormBuilder,\n    private rxWizardModalComponent: RxWizardModalComponent,\n    private rxWizardService: RxWizardService,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {}\n\n  ngOnInit(): void {\n    this.rxWizardModalComponent.next$\n      .pipe(\n        filter((stepId: string) => stepId === DL_DATA_IMPORT.uploadFileStepId),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => {\n        this.saveDataloadFileAndProceedToConfigurations();\n      });\n\n    this.rxWizardModalComponent.api.disableNextButton();\n\n    this.uploadDataFileForm = this.formBuilder.group({\n      importJobName: [null, [Validators.required, Validators.maxLength(254)]],\n      importJobDescription: [null, Validators.maxLength(254)],\n      dataFile: null,\n      archivedWorksheetFileName: [null, [Validators.required, Validators.maxLength(254)]]\n    });\n\n    this.uploadDataFileForm.valueChanges.pipe(distinctUntilChanged(), takeUntil(this.destroyed$)).subscribe(() => {\n      this.updateWizardButtons();\n\n      const context: IImportJobInfo = {\n        importJobName: this.uploadDataFileForm.get('importJobName').value,\n        importJobDescription: this.uploadDataFileForm.get('importJobDescription').value,\n        attachmentType: this.isZipAttachmentUploaded\n          ? DL_DATA_IMPORT.attachmentTypes.zip.value\n          : DL_DATA_IMPORT.attachmentTypes.xlsx.value,\n        archivedWorksheetFileName: this.uploadDataFileForm.get('archivedWorksheetFileName').value\n      };\n\n      this.rxWizardModalComponent.api.updateContext({\n        importJobInfo: context\n      });\n    });\n  }\n\n  updateWizardButtons(): void {\n    if (this.uploadDataFileForm.pristine || this.uploadDataFileForm.invalid) {\n      this.rxWizardModalComponent.api.disableNextButton();\n    } else {\n      this.rxWizardModalComponent.api.enableNextButton();\n    }\n  }\n\n  saveDataloadFile(): void {\n    this.rxWizardModalComponent.api.disableNextButton();\n    this.uploadDataFileForm.markAsPristine();\n    this.rxWizardModalComponent.api.markPristine();\n\n    this.rxRecordInstanceService\n      .getNew(DL_DATA_IMPORT.recordDefinitionName)\n      .pipe(\n        switchMap((recordInstance: RecordInstance) => {\n          this.updateRecordInstanceFields(recordInstance);\n\n          return this.rxRecordInstanceService.create(recordInstance);\n        })\n      )\n      .subscribe(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.dataload.import.data-record-saved.message')\n        );\n\n        this.rxWizardModalComponent.close();\n      });\n  }\n\n  saveDataloadFileAndProceedToConfigurations(): void {\n    this.isCustomizedImportStarted = true;\n    this.rxWizardModalComponent.api.disableNextButton();\n    this.uploadDataFileForm.markAsPristine();\n    this.processCustomizedImport$.next();\n  }\n\n  private handleWorksheetNameInput(): void {\n    if (this.isZipAttachmentUploaded) {\n      this.uploadDataFileForm.get('archivedWorksheetFileName').enable();\n    } else {\n      this.uploadDataFileForm.get('archivedWorksheetFileName').disable();\n    }\n  }\n\n  onAfterFilesAdded(event: FileObj[]): void {\n    if (event.length) {\n      this.isWorksheetProcessed = false;\n      this.isZipAttachmentUploaded = this.isZipExtension(event[0].data.name);\n      this.handleWorksheetNameInput();\n    }\n  }\n\n  onRemovedFileFromQueue(): void {\n    this.isZipAttachmentUploaded = false;\n    this.handleWorksheetNameInput();\n    this.uploadDataFileForm.controls.archivedWorksheetFileName.setValue('');\n  }\n\n  getAllowedTypes(): string[] {\n    return [DL_DATA_IMPORT.attachmentTypes.zip.extension, DL_DATA_IMPORT.attachmentTypes.xlsx.extension];\n  }\n\n  private isZipExtension(fileName: string): boolean {\n    return fileName.split('.').pop().toLowerCase() === DL_DATA_IMPORT.attachmentTypes.zip.extension;\n  }\n\n  private deleteCreatedDataImportInstance(): Observable<{ recordDeleted: boolean }> {\n    return this.rxRecordInstanceService\n      .delete(DL_DATA_IMPORT.recordDefinitionName, this.context.createdRecordInstanceId)\n      .pipe(\n        tap(() => {\n          this.context.createdRecordInstanceId = null;\n        }),\n        map(() => ({\n          recordDeleted: true\n        }))\n      );\n  }\n\n  private goToDataConfigurationStep(): void {\n    this.rxWizardModalComponent.next(true);\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  private updateRecordInstanceFields(recordInstance: RecordInstance): void {\n    recordInstance.setFieldValue(\n      DL_DATA_IMPORT.fields.importJobName,\n      this.uploadDataFileForm.get('importJobName').value\n    );\n\n    recordInstance.setFieldValue(\n      DL_DATA_IMPORT.fields.importJobDescription,\n      this.uploadDataFileForm.get('importJobDescription').value\n    );\n\n    recordInstance.setFieldValue(\n      DL_DATA_IMPORT.fields.attachmentType,\n      this.isZipAttachmentUploaded\n        ? DL_DATA_IMPORT.attachmentTypes.zip.value\n        : DL_DATA_IMPORT.attachmentTypes.xlsx.value\n    );\n\n    recordInstance.setFieldValue(DL_DATA_IMPORT.fields.dataFile, this.uploadDataFileForm.get('dataFile').value[0].data);\n\n    recordInstance.setFieldValue(\n      DL_DATA_IMPORT.fields.archivedWorksheetFileName,\n      this.uploadDataFileForm.get('archivedWorksheetFileName').value\n    );\n  }\n}\n","<rx-busy-indicator [options]=\"{ busy: busy }\"></rx-busy-indicator>\n\n<form [formGroup]=\"uploadDataFileForm\" class=\"d-flex flex-column flex-fill h-100\">\n  <adapt-rx-textfield\n    class=\"d-block form-group\"\n    formControlName=\"importJobName\"\n    label=\"{{ 'com.bmc.arsys.rx.client.dataload.import.import-job-name.label' | translate }}\"\n    rx-id=\"import-job-name\"\n    [autofocus]=\"true\"\n  >\n  </adapt-rx-textfield>\n\n  <adapt-rx-textfield\n    class=\"d-block form-group\"\n    formControlName=\"importJobDescription\"\n    label=\"{{ 'com.bmc.arsys.rx.client.dataload.import.import-job-description.label' | translate }}\"\n    rx-id=\"import-job-description\"\n  >\n  </adapt-rx-textfield>\n\n  <adapt-rx-uploader\n    class=\"d-block form-group\"\n    label=\"{{ 'com.bmc.arsys.rx.client.dataload.import.data-file.label' | translate }}\"\n    formControlName=\"dataFile\"\n    [required]=\"true\"\n    [showMaxSizeRestriction]=\"false\"\n    [allowedTypes]=\"getAllowedTypes()\"\n    (afterFilesAdded)=\"onAfterFilesAdded($event)\"\n    (removedFileFromQueue)=\"onRemovedFileFromQueue()\"\n    rx-id=\"data-file\"\n  >\n  </adapt-rx-uploader>\n\n  <adapt-rx-textfield\n    *ngIf=\"isZipAttachmentUploaded\"\n    class=\"d-block mb-1\"\n    formControlName=\"archivedWorksheetFileName\"\n    label=\"{{ 'com.bmc.arsys.rx.client.dataload.import.attachment-type.zip.content-file.label' | translate }}\"\n    rx-id=\"archived-worksheet-file-name\"\n    [autofocus]=\"true\"\n    (onFocus)=\"updateWizardButtons()\"\n  >\n  </adapt-rx-textfield>\n\n  <div class=\"text-tertiary form-group\" *ngIf=\"isZipAttachmentUploaded\">\n    {{ 'com.bmc.arsys.rx.client.common.example.label' | translate }} Worksheet.xlsx\n  </div>\n\n  <button\n    adapt-button\n    class=\"mt-auto align-self-end\"\n    type=\"button\"\n    btn-type=\"primary\"\n    rx-id=\"quick-import-button\"\n    (click)=\"saveDataloadFile()\"\n    [disabled]=\"uploadDataFileForm.pristine || uploadDataFileForm.invalid || isCustomizedImportStarted\"\n  >\n    {{ 'com.bmc.arsys.rx.client.dataload.import.wizard.quick-data-import.label' | translate }}\n  </button>\n</form>\n"]}