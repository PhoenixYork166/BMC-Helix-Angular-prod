{"version":3,"file":"flow-approvers-selector.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/admin/components/approval-configuration/flow-approvers-selector/flow-approvers-selector.component.ts","../../../../../../../../libs/platform/admin/components/approval-configuration/flow-approvers-selector/flow-approvers-selector.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Injector, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport {\r\n  ActiveModalRef,\r\n  AdaptTreeComponent,\r\n  AdaptTreeNode,\r\n  DismissReasons,\r\n  RxSelectOption,\r\n  TreeWrap\r\n} from '@bmc-ux/adapt-angular';\r\nimport {\r\n  IFieldDefinition,\r\n  IRecordDefinition,\r\n  RxRecordDefinitionCacheService,\r\n  RxRecordInstanceUtilsService,\r\n  RxRecordInstanceDataPageService\r\n} from '@helix/platform/record/api';\r\nimport {\r\n  IDataPageParams,\r\n  IDataPageResult,\r\n  IFunctionalRoleDescriptor,\r\n  RxDataPageFactoryService,\r\n  RxGlobalCacheService\r\n} from '@helix/platform/shared/api';\r\nimport {\r\n  IRxSelectWithPaginationOption,\r\n  IRxSelectWithPaginationOptionsPage,\r\n  RxSelectWithPaginationComponent\r\n} from '@helix/platform/shared/components';\r\nimport { RX_MODAL, RxModalClass, RxModalService } from '@helix/platform/ui-kit';\r\nimport { RxTreeService } from '@helix/platform/utils';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {\r\n  find,\r\n  flatten,\r\n  flow,\r\n  forEach,\r\n  get,\r\n  groupBy,\r\n  isUndefined,\r\n  join,\r\n  map as _map,\r\n  remove,\r\n  some,\r\n  sumBy,\r\n  take,\r\n  uniqBy\r\n} from 'lodash';\r\nimport { forkJoin, Observable, Subscription } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { RX_APPROVAL_CONFIGURATION } from '../approval-configuration.constant';\r\nimport { RxApprovalConfigurationService } from '../approval-configuration.service';\r\nimport {\r\n  IAppRoles,\r\n  IField,\r\n  IFieldResponse,\r\n  IOrgInfo,\r\n  IRole,\r\n  ISelectedApprover,\r\n  IUserInfo\r\n} from '../approval-configuration.types';\r\nimport { RxOrganizationDataPageService } from './organization-data-page.service';\r\nimport { RxSupportOrganizationDataPageService } from './support-organization-data-page.service';\r\n\r\n@Component({\r\n  selector: 'rx-flow-approvers-selector',\r\n  templateUrl: './flow-approvers-selector.component.html',\r\n  styleUrls: ['./flow-approvers-selector.component.scss']\r\n})\r\nexport class FlowApproversSelectorComponent extends RxModalClass implements OnInit {\r\n  constructor(\r\n    private rxTreeService: RxTreeService,\r\n    public activeModalRef: ActiveModalRef,\r\n    private rxModalService: RxModalService,\r\n    private translateService: TranslateService,\r\n    private rxGlobalCacheService: RxGlobalCacheService,\r\n    private rxRecordInstanceUtilsService: RxRecordInstanceUtilsService,\r\n    private rxOrganizationDataPageService: RxOrganizationDataPageService,\r\n    private rxSupportOrganizationDataPageService: RxSupportOrganizationDataPageService,\r\n    private rxApprovalConfigurationService: RxApprovalConfigurationService,\r\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\r\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService,\r\n    protected injector: Injector\r\n  ) {\r\n    super(activeModalRef, injector);\r\n  }\r\n\r\n  approverType: RxSelectOption;\r\n  approverTypes: RxSelectOption[] = [];\r\n\r\n  selectedApproverSelection: AdaptTreeNode[] = [];\r\n  selectedApprovers: AdaptTreeNode[] = [];\r\n\r\n  invalidMsg: string;\r\n  busy: Subscription;\r\n  hasUserInteracted: boolean;\r\n\r\n  selectedCompanies: IRxSelectWithPaginationOption[] = [];\r\n  selectedOrganizations: IRxSelectWithPaginationOption[] = [];\r\n  selectedDepartments: IRxSelectWithPaginationOption[] = [];\r\n\r\n  selectedSupportCompanies: IRxSelectWithPaginationOption[] = [];\r\n  selectedSupportOrganizations: IRxSelectWithPaginationOption[] = [];\r\n  selectedSupportGroups: IRxSelectWithPaginationOption[] = [];\r\n\r\n  loadingMore = false;\r\n  private pageSize = 50;\r\n  userSearchTextInput: string;\r\n  loadedUsers: IUserInfo[] = [];\r\n  showLoadMoreButton = true;\r\n  private startIndex: number;\r\n  treeWrap: TreeWrap = TreeWrap.WrapAll;\r\n\r\n  availableFields: IField[] = [];\r\n  availableFunctionRolesByApplication: IAppRoles[] = [];\r\n\r\n  @ViewChildren('paginationComponents')\r\n  paginationComponents: QueryList<RxSelectWithPaginationComponent>;\r\n  shouldShowTree = true;\r\n\r\n  @ViewChildren('tree')\r\n  tree: QueryList<AdaptTreeComponent>;\r\n\r\n  separatorArrow = ' > ';\r\n\r\n  companyLoaderFunc = this.companyLoader.bind(this);\r\n  organizationLoaderFunc = this.organizationLoader.bind(this);\r\n  departmentLoaderFunc = this.departmentLoader.bind(this);\r\n  supportOrganizationLoaderFunc = this.supportOrganizationLoader.bind(this);\r\n  supportGroupLoaderFunc = this.supportGroupLoader.bind(this);\r\n\r\n  isDirty(): boolean {\r\n    return this.hasUserInteracted;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.loadUsers();\r\n    this.loadFunctionalRoles();\r\n    this.loadFieldIdentifyingApproversApprovers();\r\n\r\n    this.approverTypes = [\r\n      {\r\n        value: RX_APPROVAL_CONFIGURATION.approverTypes.company,\r\n        displayValue: this.translateService.instant(\r\n          'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.company.label'\r\n        ),\r\n        disabled: this.activeModalRef.getData().isFieldIdentifyingApprover\r\n      },\r\n      {\r\n        value: RX_APPROVAL_CONFIGURATION.approverTypes.fieldIdentifying,\r\n        displayValue: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.field.identifying')\r\n      },\r\n      {\r\n        value: RX_APPROVAL_CONFIGURATION.approverTypes.functionalRole,\r\n        displayValue: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.functional.roles'),\r\n        disabled: this.activeModalRef.getData().isFieldIdentifyingApprover\r\n      },\r\n      {\r\n        value: RX_APPROVAL_CONFIGURATION.approverTypes.people,\r\n        displayValue: this.translateService.instant(\r\n          'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.people.label'\r\n        ),\r\n        disabled: this.activeModalRef.getData().isFieldIdentifyingApprover\r\n      },\r\n      {\r\n        value: RX_APPROVAL_CONFIGURATION.approverTypes.supportCompany,\r\n        displayValue: this.translateService.instant(\r\n          'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.support-company.label'\r\n        ),\r\n        disabled: this.activeModalRef.getData().isFieldIdentifyingApprover\r\n      }\r\n    ];\r\n\r\n    this.invalidMsg = this.translateService.instant(\r\n      'com.bmc.arsys.rx.client.approval.configuration.field.identifying.warning'\r\n    );\r\n\r\n    this.approverType = [\r\n      find(this.approverTypes, {\r\n        value: this.activeModalRef.getData().isFieldIdentifyingApprover\r\n          ? RX_APPROVAL_CONFIGURATION.approverTypes.fieldIdentifying\r\n          : RX_APPROVAL_CONFIGURATION.approverTypes.functionalRole\r\n      })\r\n    ];\r\n  }\r\n\r\n  switchApproversTree(): void {\r\n    this.selectedCompanies = [];\r\n    this.selectedOrganizations = [];\r\n    this.selectedDepartments = [];\r\n    this.selectedSupportCompanies = [];\r\n    this.selectedSupportOrganizations = [];\r\n    this.selectedSupportGroups = [];\r\n\r\n    this.availableFunctionRolesByApplication.forEach((application: IAppRoles) => {\r\n      application.roles.map((role: IRole) => (role.selected = false));\r\n    });\r\n\r\n    this.loadedUsers.map((user: IUserInfo) => (user.selected = false));\r\n    this.availableFields.map((field: IField) => (field.selected = false));\r\n  }\r\n\r\n  private companyLoader(\r\n    startIndex: number,\r\n    pageSize: number,\r\n    searchQuery: string\r\n  ): Observable<IRxSelectWithPaginationOptionsPage> {\r\n    const queryParams: IDataPageParams = {\r\n      startIndex: startIndex,\r\n      pageSize: pageSize,\r\n      recorddefinition: 'COM:Company',\r\n      propertySelection: [RX_APPROVAL_CONFIGURATION.approverFields.companyField]\r\n    };\r\n\r\n    if (searchQuery) {\r\n      queryParams.queryExpression = this.getAdditionalQueryExpression(\r\n        searchQuery,\r\n        RX_APPROVAL_CONFIGURATION.approverFields.companyField\r\n      );\r\n    }\r\n\r\n    return this.rxRecordInstanceDataPageService\r\n      .post({\r\n        params: { startIndex, pageSize, ...queryParams }\r\n      })\r\n      .pipe(\r\n        map((companyList) => ({\r\n          totalSize: companyList.totalSize,\r\n          options: companyList.data.map((item: IFieldResponse) => ({\r\n            displayValue: item[RX_APPROVAL_CONFIGURATION.approverFields.companyField],\r\n            value: this.getCompanyDataFormat(item[RX_APPROVAL_CONFIGURATION.approverFields.companyField])\r\n          }))\r\n        }))\r\n      );\r\n  }\r\n\r\n  getCompanyDataFormat(companyName: string): string {\r\n    return `${RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.company}${RX_APPROVAL_CONFIGURATION.levelSeparator}${companyName}`;\r\n  }\r\n\r\n  onToggleDropdown(isOpen: boolean) {\r\n    if (!isOpen) {\r\n      this.resetLoadedOptions();\r\n    }\r\n  }\r\n\r\n  resetLoadedOptions() {\r\n    this.paginationComponents\r\n      .toArray()\r\n      .forEach((component: RxSelectWithPaginationComponent) => component.resetLoadedOptions());\r\n  }\r\n\r\n  private organizationLoader(\r\n    startIndex: number,\r\n    pageSize: number,\r\n    searchQuery: string\r\n  ): Observable<IRxSelectWithPaginationOptionsPage> {\r\n    const queryParams: IDataPageParams = {\r\n      startIndex: startIndex,\r\n      pageSize: pageSize\r\n    };\r\n\r\n    if (searchQuery) {\r\n      queryParams.organization = searchQuery;\r\n    } else {\r\n      queryParams.queryExpression = this.getDefaultSearchExpression();\r\n    }\r\n\r\n    if (this.selectedCompanies.length === 1) {\r\n      queryParams.company = this.selectedCompanies[0].displayValue;\r\n    }\r\n\r\n    return this.rxOrganizationDataPageService\r\n      .get({\r\n        params: { startIndex, pageSize, ...queryParams }\r\n      })\r\n      .pipe(\r\n        map((response: IDataPageResult) => ({\r\n          totalSize: response.totalSize,\r\n          options: response.data.map((item: IOrgInfo) => ({\r\n            displayValue: item.organization,\r\n            value: item.company\r\n          }))\r\n        }))\r\n      );\r\n  }\r\n\r\n  private departmentLoader(\r\n    startIndex: number,\r\n    pageSize: number,\r\n    searchQuery: string\r\n  ): Observable<IRxSelectWithPaginationOptionsPage> {\r\n    const queryParams: IDataPageParams = {\r\n      recorddefinition: 'CTM:People Organization',\r\n      propertySelection: [\r\n        RX_APPROVAL_CONFIGURATION.approverFields.companyField,\r\n        RX_APPROVAL_CONFIGURATION.approverFields.organizationField,\r\n        RX_APPROVAL_CONFIGURATION.approverFields.departmentField\r\n      ]\r\n    };\r\n\r\n    const queryList: string[] = [];\r\n\r\n    if (searchQuery) {\r\n      queryList.push(\r\n        this.getAdditionalQueryExpression(searchQuery, RX_APPROVAL_CONFIGURATION.approverFields.departmentField)\r\n      );\r\n    }\r\n\r\n    if (this.selectedCompanies.length === 1) {\r\n      queryList.push(\r\n        this.getAdditionalQueryExpression(\r\n          this.selectedCompanies[0].displayValue,\r\n          RX_APPROVAL_CONFIGURATION.approverFields.companyField,\r\n          true\r\n        )\r\n      );\r\n    }\r\n\r\n    if (this.selectedOrganizations.length === 1) {\r\n      queryList.push(\r\n        this.getAdditionalQueryExpression(\r\n          this.selectedOrganizations[0].displayValue,\r\n          RX_APPROVAL_CONFIGURATION.approverFields.organizationField,\r\n          true\r\n        )\r\n      );\r\n    }\r\n\r\n    queryParams.queryExpression = queryList.join(' AND ');\r\n\r\n    return this.rxRecordInstanceDataPageService\r\n      .post({\r\n        params: { startIndex, pageSize, ...queryParams }\r\n      })\r\n      .pipe(\r\n        map((response: IDataPageResult) => ({\r\n          totalSize: response.totalSize,\r\n          options: response.data.map((item: IFieldResponse) => ({\r\n            displayValue: item[RX_APPROVAL_CONFIGURATION.approverFields.departmentField],\r\n            value: item[RX_APPROVAL_CONFIGURATION.approverFields.companyField],\r\n            organization: item[RX_APPROVAL_CONFIGURATION.approverFields.organizationField]\r\n          }))\r\n        }))\r\n      );\r\n  }\r\n\r\n  private supportOrganizationLoader(\r\n    startIndex: number,\r\n    pageSize: number,\r\n    searchQuery: string\r\n  ): Observable<IRxSelectWithPaginationOptionsPage> {\r\n    const queryParams: IDataPageParams = {\r\n      startIndex: startIndex,\r\n      pageSize: pageSize\r\n    };\r\n\r\n    if (searchQuery) {\r\n      queryParams.supportOrganization = searchQuery;\r\n    } else {\r\n      queryParams.queryExpression = this.getDefaultSearchExpression();\r\n    }\r\n\r\n    if (this.selectedSupportCompanies.length === 1) {\r\n      queryParams.company = this.selectedSupportCompanies[0].displayValue;\r\n    }\r\n\r\n    return this.rxSupportOrganizationDataPageService\r\n      .get({\r\n        params: { startIndex, pageSize, ...queryParams }\r\n      })\r\n      .pipe(\r\n        map((response: IDataPageResult) => ({\r\n          totalSize: response.totalSize,\r\n          options: response.data.map((item: IOrgInfo) => ({\r\n            displayValue: item.supportOrganization,\r\n            value: item.company\r\n          }))\r\n        }))\r\n      );\r\n  }\r\n\r\n  private supportGroupLoader(\r\n    startIndex: number,\r\n    pageSize: number,\r\n    searchQuery: string\r\n  ): Observable<IRxSelectWithPaginationOptionsPage> {\r\n    const queryParams: IDataPageParams = {\r\n      recorddefinition: 'CTM:Support Group',\r\n      propertySelection: [\r\n        RX_APPROVAL_CONFIGURATION.approverFields.companyField,\r\n        RX_APPROVAL_CONFIGURATION.approverFields.supportOrgField,\r\n        RX_APPROVAL_CONFIGURATION.approverFields.supportGroupField\r\n      ]\r\n    };\r\n\r\n    const queryList: string[] = [];\r\n\r\n    if (searchQuery) {\r\n      queryList.push(\r\n        this.getAdditionalQueryExpression(searchQuery, RX_APPROVAL_CONFIGURATION.approverFields.supportGroupField)\r\n      );\r\n    }\r\n\r\n    if (this.selectedSupportCompanies.length === 1) {\r\n      queryList.push(\r\n        this.getAdditionalQueryExpression(\r\n          this.selectedSupportCompanies[0].displayValue,\r\n          RX_APPROVAL_CONFIGURATION.approverFields.companyField,\r\n          true\r\n        )\r\n      );\r\n    }\r\n\r\n    if (this.selectedSupportOrganizations.length === 1) {\r\n      queryList.push(\r\n        this.getAdditionalQueryExpression(\r\n          this.selectedSupportOrganizations[0].displayValue,\r\n          RX_APPROVAL_CONFIGURATION.approverFields.supportOrgField,\r\n          true\r\n        )\r\n      );\r\n    }\r\n\r\n    queryParams.queryExpression = queryList.join(' AND ');\r\n\r\n    return this.rxRecordInstanceDataPageService\r\n      .post({\r\n        params: { startIndex, pageSize, ...queryParams }\r\n      })\r\n      .pipe(\r\n        map((response: IDataPageResult) => ({\r\n          totalSize: response.totalSize,\r\n          options: response.data.map((item: IFieldResponse) => ({\r\n            displayValue: item[RX_APPROVAL_CONFIGURATION.approverFields.supportGroupField],\r\n            value: item[RX_APPROVAL_CONFIGURATION.approverFields.companyField],\r\n            organization: item[RX_APPROVAL_CONFIGURATION.approverFields.supportOrgField]\r\n          }))\r\n        }))\r\n      );\r\n  }\r\n\r\n  private getAdditionalQueryExpression(searchQuery: string, fieldId: number, isEqualitySearch?: boolean): string {\r\n    return isEqualitySearch\r\n      ? `('${fieldId}' = \"${searchQuery.replace(/\"/g, '\"\"')}\")`\r\n      : `('${fieldId}' LIKE \"%${this.rxRecordInstanceUtilsService.escapeTextWildcards(searchQuery)}%\")`;\r\n  }\r\n\r\n  loadUsers(inputEvent?: string): void {\r\n    const queryParams: IDataPageParams = {\r\n      recorddefinition: 'CTM:People',\r\n      propertySelection: [\r\n        RX_APPROVAL_CONFIGURATION.approverFields.firstName,\r\n        RX_APPROVAL_CONFIGURATION.approverFields.lastName,\r\n        RX_APPROVAL_CONFIGURATION.approverFields.remedyLoginId\r\n      ],\r\n      sortBy: RX_APPROVAL_CONFIGURATION.approverFields.firstName\r\n    };\r\n\r\n    this.startIndex = !isUndefined(this.startIndex) ? this.startIndex + this.pageSize : 0;\r\n    this.loadingMore = true;\r\n\r\n    if (!isUndefined(inputEvent)) {\r\n      this.startIndex = 0;\r\n      this.loadedUsers = [];\r\n    }\r\n\r\n    if (this.userSearchTextInput) {\r\n      queryParams.queryExpression = this.getUserQueryExpression();\r\n    }\r\n\r\n    this.rxRecordInstanceDataPageService\r\n      .post({\r\n        params: {\r\n          pageSize: this.pageSize,\r\n          startIndex: this.startIndex,\r\n          ...queryParams\r\n        }\r\n      })\r\n      .subscribe((response: IDataPageResult) => {\r\n        this.loadedUsers = this.loadedUsers.concat(response.data as IUserInfo[]);\r\n        this.showLoadMoreButton = response.totalSize > this.loadedUsers.length;\r\n        this.loadingMore = false;\r\n      });\r\n  }\r\n\r\n  private getUserQueryExpression(): string {\r\n    return this.userSearchTextInput\r\n      ? `('${\r\n          RX_APPROVAL_CONFIGURATION.approverFields.firstName\r\n        }' LIKE \"%${this.rxRecordInstanceUtilsService.escapeTextWildcards(this.userSearchTextInput)}%\") OR ('${\r\n          RX_APPROVAL_CONFIGURATION.approverFields.lastName\r\n        }' LIKE \"%${this.rxRecordInstanceUtilsService.escapeTextWildcards(this.userSearchTextInput)}%\") OR ('${\r\n          RX_APPROVAL_CONFIGURATION.approverFields.remedyLoginId\r\n        }' LIKE \"%${this.rxRecordInstanceUtilsService.escapeTextWildcards(this.userSearchTextInput)}%\")`\r\n      : null;\r\n  }\r\n\r\n  loadFunctionalRoles(): void {\r\n    forkJoin([\r\n      this.rxApprovalConfigurationService.getFunctionalRoles(),\r\n      this.rxGlobalCacheService.getBundleDescriptors()\r\n    ])\r\n      .pipe(\r\n        tap(([functionalRoles, bundleDescriptors]) => {\r\n          const globalLabel = this.translateService.instant('com.bmc.arsys.rx.client.common.global-items.label');\r\n          this.addExistingApproversToSelectedTree(functionalRoles);\r\n\r\n          this.availableFunctionRolesByApplication = flow(\r\n            (roles: IFunctionalRoleDescriptor[]) =>\r\n              _map(roles, (role: IFunctionalRoleDescriptor) => {\r\n                const bundleDescriptor = find(bundleDescriptors, { id: role.applicationName });\r\n\r\n                return {\r\n                  ...role,\r\n                  applicationName: bundleDescriptor?.friendlyName || bundleDescriptor?.id || globalLabel\r\n                };\r\n              }),\r\n            (roles: IFunctionalRoleDescriptor[]) => groupBy(roles, 'applicationName'),\r\n            (rolesByApplicationName) =>\r\n              _map(rolesByApplicationName, (roles, applicationName) => ({\r\n                applicationName,\r\n                roles: _map(roles, (role: IFunctionalRoleDescriptor) => ({\r\n                  id: role.id,\r\n                  name: role.name,\r\n                  selected: false\r\n                })).sort((a, b) => a.name.localeCompare(b.name))\r\n              })).sort((a, b) => a.applicationName.localeCompare(b.applicationName))\r\n          )(functionalRoles as IFunctionalRoleDescriptor[]);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  removeApproversFromSelection(): void {\r\n    this.hasUserInteracted = true;\r\n\r\n    forEach(this.selectedApprovers, (node: AdaptTreeNode) => {\r\n      remove(node.children, (childNode) => this.tree.first.isSelected(childNode));\r\n    });\r\n\r\n    this.selectedApprovers = this.selectedApprovers.filter((node: AdaptTreeNode) => node.children.length);\r\n    this.selectedApproverSelection = [];\r\n    this.reloadTree();\r\n  }\r\n\r\n  private getNode(label: string, key: string, data: string): AdaptTreeNode {\r\n    return {\r\n      label,\r\n      key,\r\n      data\r\n    };\r\n  }\r\n\r\n  getFunctionalRoleDataFormat(guid): string {\r\n    return `${RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.functionalRole}${guid}`;\r\n  }\r\n\r\n  private transformFunctionRolesToNodeStructure(): AdaptTreeNode[] {\r\n    const roles = [];\r\n\r\n    this.availableFunctionRolesByApplication.forEach((application: IAppRoles) =>\r\n      application.roles\r\n        .filter((role: IRole) => role.selected)\r\n        .forEach((selectedRole: IRole) =>\r\n          roles.push(\r\n            this.getNode(\r\n              `${selectedRole.name}`,\r\n              `${selectedRole.id}`,\r\n              this.getFunctionalRoleDataFormat(selectedRole.id)\r\n            )\r\n          )\r\n        )\r\n    );\r\n\r\n    return roles;\r\n  }\r\n\r\n  private transformFieldsToNodeStructure(): AdaptTreeNode[] {\r\n    return this.availableFields\r\n      .filter((field: IField) => field.selected)\r\n      .map((selectedField: IField) =>\r\n        this.getNode(`${selectedField.name}`, `${selectedField.name}`, `$${selectedField.name}$`)\r\n      );\r\n  }\r\n\r\n  private getPeopleDataFormat(userId: string): string {\r\n    return `${RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.people}${userId}`;\r\n  }\r\n\r\n  private transformPeopleToNodeStructure(): AdaptTreeNode[] {\r\n    return this.loadedUsers\r\n      .filter((user: IUserInfo) => user.selected)\r\n      .map((selectedUser: IUserInfo) =>\r\n        this.getNode(\r\n          `${selectedUser[RX_APPROVAL_CONFIGURATION.approverFields.firstName]} ${\r\n            selectedUser[RX_APPROVAL_CONFIGURATION.approverFields.lastName]\r\n          }`,\r\n          `${selectedUser[4]}`,\r\n          this.getPeopleDataFormat(selectedUser[RX_APPROVAL_CONFIGURATION.approverFields.remedyLoginId])\r\n        )\r\n      );\r\n  }\r\n\r\n  private getOrgDataFormat(company: string, org: string): string {\r\n    return `${RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.companyOrg}${RX_APPROVAL_CONFIGURATION.levelSeparator}${company}${RX_APPROVAL_CONFIGURATION.levelSeparator}${org}`;\r\n  }\r\n\r\n  getDeptDataFormat(company: string, org: string, dept: string): string {\r\n    return `${RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.companyOrgDept}${RX_APPROVAL_CONFIGURATION.levelSeparator}${company}${RX_APPROVAL_CONFIGURATION.levelSeparator}${org}${RX_APPROVAL_CONFIGURATION.levelSeparator}${dept}`;\r\n  }\r\n\r\n  getSupportOrgDataFormat(supportCompany: string, supportOrg: string): string {\r\n    return `${RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.supportCompanyOrg}${RX_APPROVAL_CONFIGURATION.levelSeparator}${supportCompany}${RX_APPROVAL_CONFIGURATION.levelSeparator}${supportOrg}`;\r\n  }\r\n\r\n  getSupportGroupDataFormat(supportCompany: string, supportOrg: string, supportGroup: string): string {\r\n    return `${RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.supportCompanyOrgGroup}${RX_APPROVAL_CONFIGURATION.levelSeparator}${supportCompany}${RX_APPROVAL_CONFIGURATION.levelSeparator}${supportOrg}${RX_APPROVAL_CONFIGURATION.levelSeparator}${supportGroup}`;\r\n  }\r\n\r\n  private transformToNodeStructure(selectedItems: IRxSelectWithPaginationOption[]): AdaptTreeNode[] {\r\n    return selectedItems.map((option: IRxSelectWithPaginationOption) => {\r\n      let data = '';\r\n      let label = `${option.displayValue} `;\r\n\r\n      if (this.shouldMoveCompanies()) {\r\n        data = option.value;\r\n      } else if (this.shouldMoveOrganizations()) {\r\n        data = this.getOrgDataFormat(option.value, option.displayValue);\r\n        label += `(${option.value})`;\r\n      } else if (this.shouldMoveDepartments()) {\r\n        data = this.getDeptDataFormat(option.value, option.organization, option.displayValue);\r\n        label += `(${option.value}${this.separatorArrow}${option.organization})`;\r\n      } else if (this.shouldMoveSupportCompanies()) {\r\n        data = `${RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.supportCompany}${RX_APPROVAL_CONFIGURATION.levelSeparator}${option.displayValue}`;\r\n      } else if (this.shouldMoveSupportOrganizations()) {\r\n        data = this.getSupportOrgDataFormat(option.value, option.displayValue);\r\n        label += `(${option.value})`;\r\n      } else if (this.shouldMoveSupportGroups()) {\r\n        data = this.getSupportGroupDataFormat(option.value, option.organization, option.displayValue);\r\n        label += `(${option.value}${this.separatorArrow}${option.organization})`;\r\n      }\r\n\r\n      return this.getNode(label, option.displayValue, data);\r\n    });\r\n  }\r\n\r\n  onCompanySelectionChange(): void {\r\n    this.selectedOrganizations = [];\r\n    this.selectedDepartments = [];\r\n  }\r\n\r\n  onOrganizationSelectionChange(): void {\r\n    this.selectedDepartments = [];\r\n  }\r\n\r\n  onSupportCompanySelectionChange(): void {\r\n    this.selectedSupportOrganizations = [];\r\n    this.selectedSupportGroups = [];\r\n  }\r\n\r\n  onSupportOrganizationSelectionChange(): void {\r\n    this.selectedSupportGroups = [];\r\n  }\r\n\r\n  private shouldMoveCompanies(): boolean {\r\n    return this.selectedCompanies.length && !this.selectedOrganizations.length && !this.selectedDepartments.length;\r\n  }\r\n\r\n  private shouldMoveOrganizations(): boolean {\r\n    return this.selectedOrganizations.length && this.selectedCompanies.length <= 1 && !this.selectedDepartments.length;\r\n  }\r\n\r\n  private shouldMoveDepartments(): boolean {\r\n    return (\r\n      this.selectedDepartments.length && this.selectedCompanies.length <= 1 && this.selectedOrganizations.length <= 1\r\n    );\r\n  }\r\n\r\n  private shouldMoveSupportCompanies(): boolean {\r\n    return (\r\n      this.selectedSupportCompanies.length &&\r\n      !this.selectedSupportOrganizations.length &&\r\n      !this.selectedSupportGroups.length\r\n    );\r\n  }\r\n\r\n  private shouldMoveSupportOrganizations(): boolean {\r\n    return (\r\n      this.selectedSupportOrganizations.length &&\r\n      this.selectedSupportCompanies.length <= 1 &&\r\n      !this.selectedSupportGroups.length\r\n    );\r\n  }\r\n\r\n  private shouldMoveSupportGroups(): boolean {\r\n    return (\r\n      this.selectedSupportGroups.length &&\r\n      this.selectedSupportCompanies.length <= 1 &&\r\n      this.selectedSupportOrganizations.length <= 1\r\n    );\r\n  }\r\n\r\n  private setFieldIdentifyingApprovers() {\r\n    this.selectedApprovers = [\r\n      {\r\n        label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.field.identifying'),\r\n        type: RX_APPROVAL_CONFIGURATION.approverTypes.fieldIdentifying,\r\n        children: this.transformFieldsToNodeStructure(),\r\n        expanded: true\r\n      }\r\n    ];\r\n  }\r\n\r\n  moveToSelectedApprovers(): void {\r\n    let approverTypeNode: AdaptTreeNode = find(this.selectedApprovers, { type: this.approverType[0].value });\r\n\r\n    if (this.isFieldIdentifyingSelection()) {\r\n      if (\r\n        this.selectedApprovers.length &&\r\n        !find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.fieldIdentifying })\r\n      ) {\r\n        this.rxModalService\r\n          .confirm({\r\n            title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\r\n            modalStyle: RX_MODAL.modalStyles.warning,\r\n            message: this.translateService.instant(\r\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.field-identifying-select.warning'\r\n            )\r\n          })\r\n          .then((result: boolean) => {\r\n            if (result) {\r\n              this.setFieldIdentifyingApprovers();\r\n            }\r\n          });\r\n      } else {\r\n        this.setFieldIdentifyingApprovers();\r\n      }\r\n    } else if (this.isFunctionalRoleSelection()) {\r\n      if (!approverTypeNode) {\r\n        this.selectedApprovers.push({\r\n          label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.functional.roles'),\r\n          type: RX_APPROVAL_CONFIGURATION.approverTypes.functionalRole,\r\n          children: this.transformFunctionRolesToNodeStructure(),\r\n          expanded: true\r\n        });\r\n      } else {\r\n        approverTypeNode.children.push(...this.transformFunctionRolesToNodeStructure());\r\n      }\r\n    } else if (this.isPeopleSelection()) {\r\n      if (!approverTypeNode) {\r\n        this.selectedApprovers.push({\r\n          label: this.translateService.instant(\r\n            'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.people.label'\r\n          ),\r\n          type: RX_APPROVAL_CONFIGURATION.approverTypes.people,\r\n          children: this.transformPeopleToNodeStructure(),\r\n          expanded: true\r\n        });\r\n      } else {\r\n        approverTypeNode.children.push(...this.transformPeopleToNodeStructure());\r\n      }\r\n    } else if (this.isCompanySelection()) {\r\n      if (this.shouldMoveCompanies()) {\r\n        if (!approverTypeNode) {\r\n          this.selectedApprovers.push({\r\n            label: this.translateService.instant(\r\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.company.label'\r\n            ),\r\n            type: RX_APPROVAL_CONFIGURATION.approverTypes.company,\r\n            children: this.transformToNodeStructure(this.selectedCompanies),\r\n            expanded: true\r\n          });\r\n        } else {\r\n          approverTypeNode.children.push(...this.transformToNodeStructure(this.selectedCompanies));\r\n        }\r\n      } else if (this.shouldMoveOrganizations()) {\r\n        approverTypeNode = find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.org });\r\n\r\n        if (!approverTypeNode) {\r\n          this.selectedApprovers.push({\r\n            label: this.translateService.instant(\r\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.organization.label'\r\n            ),\r\n            type: RX_APPROVAL_CONFIGURATION.approverTypes.org,\r\n            children: this.transformToNodeStructure(this.selectedOrganizations),\r\n            expanded: true\r\n          });\r\n        } else {\r\n          approverTypeNode.children.push(...this.transformToNodeStructure(this.selectedOrganizations));\r\n        }\r\n      } else if (this.shouldMoveDepartments()) {\r\n        approverTypeNode = find(this.selectedApprovers, {\r\n          type: RX_APPROVAL_CONFIGURATION.approverTypes.dept\r\n        });\r\n\r\n        if (!approverTypeNode) {\r\n          this.selectedApprovers.push({\r\n            label: this.translateService.instant(\r\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.department.label'\r\n            ),\r\n            type: RX_APPROVAL_CONFIGURATION.approverTypes.dept,\r\n            children: this.transformToNodeStructure(this.selectedDepartments),\r\n            expanded: true\r\n          });\r\n        } else {\r\n          approverTypeNode.children.push(...this.transformToNodeStructure(this.selectedDepartments));\r\n        }\r\n      }\r\n    } else if (this.isSupportCompanySelection()) {\r\n      if (this.shouldMoveSupportCompanies()) {\r\n        approverTypeNode = find(this.selectedApprovers, {\r\n          type: RX_APPROVAL_CONFIGURATION.approverTypes.company\r\n        });\r\n\r\n        if (!approverTypeNode) {\r\n          this.selectedApprovers.push({\r\n            label: this.translateService.instant(\r\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.company.label'\r\n            ),\r\n            type: RX_APPROVAL_CONFIGURATION.approverTypes.company,\r\n            children: this.transformToNodeStructure(this.selectedSupportCompanies),\r\n            expanded: true\r\n          });\r\n        } else {\r\n          approverTypeNode.children.push(...this.transformToNodeStructure(this.selectedSupportCompanies));\r\n        }\r\n      } else if (this.shouldMoveSupportOrganizations()) {\r\n        approverTypeNode = find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.supportOrg });\r\n\r\n        if (!approverTypeNode) {\r\n          this.selectedApprovers.push({\r\n            label: this.translateService.instant(\r\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.support-org.label'\r\n            ),\r\n            type: RX_APPROVAL_CONFIGURATION.approverTypes.supportOrg,\r\n            children: this.transformToNodeStructure(this.selectedSupportOrganizations),\r\n            expanded: true\r\n          });\r\n        } else {\r\n          approverTypeNode.children.push(...this.transformToNodeStructure(this.selectedSupportOrganizations));\r\n        }\r\n      } else if (this.shouldMoveSupportGroups()) {\r\n        approverTypeNode = find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.supportGroup });\r\n\r\n        if (!approverTypeNode) {\r\n          this.selectedApprovers.push({\r\n            label: this.translateService.instant(\r\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.support-group.label'\r\n            ),\r\n            type: RX_APPROVAL_CONFIGURATION.approverTypes.supportGroup,\r\n            children: this.transformToNodeStructure(this.selectedSupportGroups),\r\n            expanded: true\r\n          });\r\n        } else {\r\n          approverTypeNode.children.push(...this.transformToNodeStructure(this.selectedSupportGroups));\r\n        }\r\n      }\r\n    }\r\n    if (!this.isFieldIdentifyingSelection()) {\r\n      remove(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.fieldIdentifying });\r\n    }\r\n    if (approverTypeNode) {\r\n      approverTypeNode.expanded = true;\r\n      approverTypeNode.children = uniqBy(approverTypeNode.children, 'key');\r\n    }\r\n    this.selectedApprovers = this.selectedApprovers\r\n      .filter((approverNode: AdaptTreeNode) => approverNode.children.length)\r\n      .map((node: AdaptTreeNode) => {\r\n        node.children.sort((a, b) => a.label.localeCompare(b.label));\r\n\r\n        return node;\r\n      });\r\n\r\n    this.hasUserInteracted = true;\r\n    this.reloadTree();\r\n  }\r\n\r\n  private reloadTree() {\r\n    this.shouldShowTree = false;\r\n    setTimeout(() => (this.shouldShowTree = true));\r\n  }\r\n\r\n  private loadFieldIdentifyingApproversApprovers(): void {\r\n    this.rxRecordDefinitionCacheService\r\n      .getRecordDefinition(this.activeModalRef.getData().registeredRecordDefinitionName)\r\n      .subscribe(\r\n        (fieldIdentifyingResponse: IRecordDefinition) =>\r\n          (this.availableFields = fieldIdentifyingResponse.fieldDefinitions\r\n            .map((field: IFieldDefinition) => ({\r\n              name: field.name,\r\n              selected: false\r\n            }))\r\n            .sort((a: IField, b: IField) => a.name.localeCompare(b.name)))\r\n      );\r\n  }\r\n\r\n  noApproverSelected(): boolean {\r\n    return (\r\n      (this.isFieldIdentifyingSelection() && !some(this.availableFields, (field) => field.selected)) ||\r\n      (this.isPeopleSelection() && !some(this.loadedUsers, (user) => user.selected)) ||\r\n      (this.isFunctionalRoleSelection() &&\r\n        !some(this.availableFunctionRolesByApplication, (application) =>\r\n          some(application.roles, (role) => role.selected)\r\n        )) ||\r\n      Boolean(\r\n        this.isCompanySelection() &&\r\n          !this.selectedCompanies.length &&\r\n          !this.selectedOrganizations.length &&\r\n          !this.selectedDepartments.length\r\n      )\r\n    );\r\n  }\r\n\r\n  isInvalidFieIdentifyingApprover(): boolean {\r\n    return this.isFieldIdentifyingSelection() && sumBy(this.availableFields, 'selected') > 1;\r\n  }\r\n\r\n  optionFormatter(option: RxSelectOption): string {\r\n    return option.displayValue;\r\n  }\r\n\r\n  isFieldIdentifyingSelection(): boolean {\r\n    return this.approverType[0].value === RX_APPROVAL_CONFIGURATION.approverTypes.fieldIdentifying;\r\n  }\r\n\r\n  isCompanySelection(): boolean {\r\n    return this.approverType[0].value === RX_APPROVAL_CONFIGURATION.approverTypes.company;\r\n  }\r\n\r\n  isSupportCompanySelection(): boolean {\r\n    return this.approverType[0].value === RX_APPROVAL_CONFIGURATION.approverTypes.supportCompany;\r\n  }\r\n\r\n  isPeopleSelection(): boolean {\r\n    return this.approverType[0].value === RX_APPROVAL_CONFIGURATION.approverTypes.people;\r\n  }\r\n\r\n  isFunctionalRoleSelection(): boolean {\r\n    return this.approverType[0].value === RX_APPROVAL_CONFIGURATION.approverTypes.functionalRole;\r\n  }\r\n\r\n  completeSelection(): void {\r\n    const approvers: ISelectedApprover[] = flow(\r\n      (allNodes: AdaptTreeNode[]) => _map(allNodes, 'children'),\r\n      flatten,\r\n      (nodes: AdaptTreeNode[]) =>\r\n        _map(nodes, (node) => {\r\n          let label = '';\r\n\r\n          if (\r\n            this.rxApprovalConfigurationService.isCompanyOrg(node.data) ||\r\n            this.rxApprovalConfigurationService.isCompanyOrgDept(node.data) ||\r\n            this.rxApprovalConfigurationService.isSupportCompanyOrg(node.data) ||\r\n            this.rxApprovalConfigurationService.isSupportCompanyOrgGroup(node.data)\r\n          ) {\r\n            label = this.rxApprovalConfigurationService.getLastLabel(node.data);\r\n          }\r\n\r\n          return {\r\n            value: node.data,\r\n            displayValue: label || node.label\r\n          };\r\n        })\r\n    )(this.selectedApprovers);\r\n\r\n    const approver: ISelectedApprover = {\r\n      value: approvers.map((node: ISelectedApprover) => node.value).join(RX_APPROVAL_CONFIGURATION.approverSeparator),\r\n      displayValue: flow(\r\n        (items: ISelectedApprover[]) => take(items, 10),\r\n        (items: string[]) => _map(items, 'displayValue'),\r\n        (items: string[]) => join(items, ', ')\r\n      )(approvers)\r\n    };\r\n\r\n    if (approvers.length > 10) {\r\n      approver.displayValue += '...';\r\n    }\r\n\r\n    this.activeModalRef.close(approver);\r\n  }\r\n\r\n  getEmptyApproverTree(): AdaptTreeNode[] {\r\n    return [\r\n      {\r\n        label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.functional.roles'),\r\n        type: RX_APPROVAL_CONFIGURATION.approverTypes.functionalRole,\r\n        children: []\r\n      },\r\n      {\r\n        label: this.translateService.instant(\r\n          'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.people.label'\r\n        ),\r\n        type: RX_APPROVAL_CONFIGURATION.approverTypes.people,\r\n        children: []\r\n      },\r\n      {\r\n        label: this.translateService.instant(\r\n          'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.company.label'\r\n        ),\r\n        type: RX_APPROVAL_CONFIGURATION.approverTypes.company,\r\n        children: []\r\n      },\r\n      {\r\n        label: this.translateService.instant(\r\n          'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.organization.label'\r\n        ),\r\n        type: RX_APPROVAL_CONFIGURATION.approverTypes.org,\r\n        children: []\r\n      },\r\n      {\r\n        label: this.translateService.instant(\r\n          'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.department.label'\r\n        ),\r\n        type: RX_APPROVAL_CONFIGURATION.approverTypes.dept,\r\n        children: []\r\n      },\r\n      {\r\n        label: this.translateService.instant(\r\n          'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.support-company.label'\r\n        ),\r\n        type: RX_APPROVAL_CONFIGURATION.approverTypes.supportCompany,\r\n        children: []\r\n      },\r\n      {\r\n        label: this.translateService.instant(\r\n          'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.support-group.label'\r\n        ),\r\n        type: RX_APPROVAL_CONFIGURATION.approverTypes.supportGroup,\r\n        children: []\r\n      },\r\n      {\r\n        label: this.translateService.instant(\r\n          'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.support-org.label'\r\n        ),\r\n        type: RX_APPROVAL_CONFIGURATION.approverTypes.supportOrg,\r\n        children: []\r\n      },\r\n      {\r\n        label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.field.identifying'),\r\n        type: RX_APPROVAL_CONFIGURATION.approverTypes.fieldIdentifying,\r\n        children: []\r\n      }\r\n    ];\r\n  }\r\n\r\n  private addExistingApproversToSelectedTree(allFunctionalRoles?: IFunctionalRoleDescriptor[]): void {\r\n    this.selectedApprovers = this.getEmptyApproverTree();\r\n\r\n    const approverList = this.activeModalRef\r\n      .getData()\r\n      .existingApprovers.split(RX_APPROVAL_CONFIGURATION.approverSeparator);\r\n\r\n    forEach(approverList, (approver: string) => {\r\n      if (this.rxApprovalConfigurationService.isFieldIdentifyingApprover(approver)) {\r\n        this.approverType = [\r\n          find(this.approverTypes, {\r\n            value: RX_APPROVAL_CONFIGURATION.approverTypes.fieldIdentifying\r\n          })\r\n        ];\r\n\r\n        this.selectedApprovers = [\r\n          {\r\n            label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.field.identifying'),\r\n            type: RX_APPROVAL_CONFIGURATION.approverTypes.fieldIdentifying,\r\n            children: [\r\n              {\r\n                label: this.rxApprovalConfigurationService.getFieldIdentifyingApprover(approver),\r\n                key: this.rxApprovalConfigurationService.getFieldIdentifyingApprover(approver),\r\n                data: `$${this.rxApprovalConfigurationService.getFieldIdentifyingApprover(approver)}$`\r\n              }\r\n            ],\r\n            expanded: true\r\n          }\r\n        ];\r\n      } else if (this.rxApprovalConfigurationService.isFunctionalRole(approver)) {\r\n        find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.functionalRole }).children.push({\r\n          key: this.rxApprovalConfigurationService.getFunctionalRoleGuid(approver),\r\n          data: this.getFunctionalRoleDataFormat(this.rxApprovalConfigurationService.getFunctionalRoleGuid(approver)),\r\n          label: get(\r\n            find(allFunctionalRoles, {\r\n              id: this.rxApprovalConfigurationService.getFunctionalRoleGuid(approver)\r\n            }),\r\n            'name'\r\n          )\r\n        });\r\n      } else if (this.rxApprovalConfigurationService.isApproverPeople(approver)) {\r\n        find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.people }).children.push({\r\n          key: approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[1],\r\n          label: approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[1],\r\n          data: this.getPeopleDataFormat(approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[1])\r\n        });\r\n      } else if (\r\n        this.rxApprovalConfigurationService.isCompany(approver) ||\r\n        this.rxApprovalConfigurationService.isSupportCompany(approver)\r\n      ) {\r\n        find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.company }).children.push({\r\n          label: this.rxApprovalConfigurationService.getLastLabel(approver),\r\n          key: `${this.rxApprovalConfigurationService.getLastLabel(approver)}`,\r\n          data: this.getCompanyDataFormat(this.rxApprovalConfigurationService.getLastLabel(approver))\r\n        });\r\n      } else if (this.rxApprovalConfigurationService.isCompanyOrg(approver)) {\r\n        find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.org }).children.push({\r\n          label: `${this.rxApprovalConfigurationService.getLastLabel(approver)}${this.getHierarchyLabel(approver)}`,\r\n          key: `${this.rxApprovalConfigurationService.getLastLabel(approver)}`,\r\n          data: this.getOrgDataFormat(\r\n            approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[1],\r\n            approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[2]\r\n          )\r\n        });\r\n      } else if (this.rxApprovalConfigurationService.isCompanyOrgDept(approver)) {\r\n        find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.dept }).children.push({\r\n          label: `${this.rxApprovalConfigurationService.getLastLabel(approver)}${this.getHierarchyLabel(approver)}`,\r\n          key: `${this.rxApprovalConfigurationService.getLastLabel(approver)}`,\r\n          data: this.getDeptDataFormat(\r\n            approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[1],\r\n            approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[2],\r\n            approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[3]\r\n          )\r\n        });\r\n      } else if (this.rxApprovalConfigurationService.isSupportCompanyOrg(approver)) {\r\n        find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.supportOrg }).children.push({\r\n          label: `${this.rxApprovalConfigurationService.getLastLabel(approver)}${this.getHierarchyLabel(approver)}`,\r\n          key: `${this.rxApprovalConfigurationService.getLastLabel(approver)}`,\r\n          data: this.getSupportOrgDataFormat(\r\n            approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[1],\r\n            approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[2]\r\n          )\r\n        });\r\n      } else if (this.rxApprovalConfigurationService.isSupportCompanyOrgGroup(approver)) {\r\n        find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.supportGroup }).children.push({\r\n          label: `${this.rxApprovalConfigurationService.getLastLabel(approver)}${this.getHierarchyLabel(approver)}`,\r\n          key: `${this.rxApprovalConfigurationService.getLastLabel(approver)}`,\r\n          data: this.getSupportGroupDataFormat(\r\n            approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[1],\r\n            approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[2],\r\n            approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[3]\r\n          )\r\n        });\r\n      }\r\n    });\r\n\r\n    this.selectedApprovers = this.selectedApprovers\r\n      .filter((node: AdaptTreeNode) => node.children.length)\r\n      .map((node: AdaptTreeNode) => {\r\n        node.children.sort((a, b) => a.label.localeCompare(b.label));\r\n\r\n        return node;\r\n      });\r\n  }\r\n\r\n  private getHierarchyLabel(approver: string) {\r\n    const temp = approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator);\r\n    temp.shift();\r\n    temp.pop();\r\n\r\n    return `(${temp.join(this.separatorArrow)})`;\r\n  }\r\n\r\n  close(): void {\r\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\r\n  }\r\n\r\n  private getDefaultSearchExpression(): string {\r\n    return `${RX_APPROVAL_CONFIGURATION.approverFields.companyField} != NULL`;\r\n  }\r\n}\r\n","<div class=\"approver-modal-body\">\n  <rx-busy-indicator [options]=\"{ busy: busy, loaderType: 'section' }\"></rx-busy-indicator>\n\n  <adapt-alert\n    *ngIf=\"isInvalidFieIdentifyingApprover()\"\n    [config]=\"{\n      variant: 'warning',\n      dismissible: false,\n      content: invalidMsg\n    }\"\n  ></adapt-alert>\n\n  <div class=\"d-flex h-100\">\n    <div class=\"flex-wrapper d-flex flex-column mh-100 wrapper-max-width\">\n      <h5 class=\"mt-1 mb-4\">\n        {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.available.label' | translate }}\n      </h5>\n\n      <adapt-rx-select\n        class=\"d-block form-group w-75\"\n        rx-id=\"approver-type\"\n        [(ngModel)]=\"approverType\"\n        [options]=\"approverTypes\"\n        (onSelectionChange)=\"switchApproversTree()\"\n        [optionFormatter]=\"optionFormatter\"\n      >\n      </adapt-rx-select>\n\n      <div class=\"flex-fill available-list\">\n        <div *ngIf=\"isCompanySelection()\" class=\"border section-wrapper flex-fill h-100\">\n          <rx-select-with-pagination\n            label=\"{{\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.company.label' | translate\n            }}\"\n            class=\"form-group d-block\"\n            [(ngModel)]=\"selectedCompanies\"\n            [optionLoader]=\"companyLoaderFunc\"\n            isMultiSelectionMode=\"true\"\n            (selectionChange)=\"onCompanySelectionChange()\"\n          ></rx-select-with-pagination>\n\n          <rx-select-with-pagination\n            label=\"{{\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.organization.label' | translate\n            }}\"\n            class=\"form-group d-block\"\n            [(ngModel)]=\"selectedOrganizations\"\n            [optionLoader]=\"organizationLoaderFunc\"\n            [template]=\"orgOptionTemplate\"\n            isMultiSelectionMode=\"true\"\n            (selectionChange)=\"onOrganizationSelectionChange()\"\n            #paginationComponents\n            [disabled]=\"selectedCompanies.length > 1\"\n            (toggleDropdown)=\"onToggleDropdown($event)\"\n          ></rx-select-with-pagination>\n\n          <rx-select-with-pagination\n            label=\"{{\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.department.label' | translate\n            }}\"\n            class=\"form-group d-block\"\n            [(ngModel)]=\"selectedDepartments\"\n            [optionLoader]=\"departmentLoaderFunc\"\n            [template]=\"optionTemplate\"\n            isMultiSelectionMode=\"true\"\n            #paginationComponents\n            [disabled]=\"selectedCompanies.length > 1 || selectedOrganizations.length > 1\"\n            (toggleDropdown)=\"onToggleDropdown($event)\"\n          ></rx-select-with-pagination>\n        </div>\n\n        <div *ngIf=\"isSupportCompanySelection()\" class=\"border section-wrapper flex-fill h-100\">\n          <rx-select-with-pagination\n            label=\"{{\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.support-company.label' | translate\n            }}\"\n            class=\"form-group d-block\"\n            [(ngModel)]=\"selectedSupportCompanies\"\n            [optionLoader]=\"companyLoaderFunc\"\n            isMultiSelectionMode=\"true\"\n            (selectionChange)=\"onSupportCompanySelectionChange()\"\n          ></rx-select-with-pagination>\n\n          <rx-select-with-pagination\n            label=\"{{\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.support-org.label' | translate\n            }}\"\n            class=\"form-group d-block\"\n            [(ngModel)]=\"selectedSupportOrganizations\"\n            [optionLoader]=\"supportOrganizationLoaderFunc\"\n            [template]=\"orgOptionTemplate\"\n            isMultiSelectionMode=\"true\"\n            (selectionChange)=\"onSupportOrganizationSelectionChange()\"\n            #paginationComponents\n            [disabled]=\"selectedSupportCompanies.length > 1\"\n            (toggleDropdown)=\"onToggleDropdown($event)\"\n          ></rx-select-with-pagination>\n\n          <rx-select-with-pagination\n            label=\"{{\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.support-group.label' | translate\n            }}\"\n            class=\"form-group d-block\"\n            [(ngModel)]=\"selectedSupportGroups\"\n            [optionLoader]=\"supportGroupLoaderFunc\"\n            [template]=\"optionTemplate\"\n            isMultiSelectionMode=\"true\"\n            #paginationComponents\n            [disabled]=\"selectedSupportCompanies.length > 1 || selectedSupportOrganizations.length > 1\"\n            (toggleDropdown)=\"onToggleDropdown($event)\"\n          ></rx-select-with-pagination>\n        </div>\n      </div>\n\n      <div\n        class=\"available-list d-flex flex-column flex-fill h-100 border-top functional-roles border\"\n        *ngIf=\"isFunctionalRoleSelection()\"\n      >\n        <adapt-accordion [multiselect]=\"true\">\n          <adapt-accordion-tab\n            *ngFor=\"let application of availableFunctionRolesByApplication\"\n            title=\"{{ application.applicationName }}\"\n            [isOpen]=\"true\"\n          >\n            <adapt-rx-checkbox\n              *ngFor=\"let role of application.roles; let index = index\"\n              label=\"{{ role.name }}\"\n              [(ngModel)]=\"application.roles[index].selected\"\n            ></adapt-rx-checkbox>\n          </adapt-accordion-tab>\n        </adapt-accordion>\n      </div>\n\n      <div class=\"available-list user-list h-100 border section-wrapper\" *ngIf=\"isPeopleSelection()\">\n        <ul class=\"list-unstyled\">\n          <div class=\"border-bottom-0 user-search-wrapper\">\n            <adapt-rx-search\n              [(ngModel)]=\"userSearchTextInput\"\n              placeholder=\"Filter\"\n              [debounceTime]=\"200\"\n              (ngModelChange)=\"loadUsers($event)\"\n            >\n            </adapt-rx-search>\n          </div>\n\n          <li *ngFor=\"let user of loadedUsers; let index = index\">\n            <adapt-rx-checkbox\n              label=\"{{ user[1000000019] + ' ' + user[1000000018] }}\"\n              [(ngModel)]=\"loadedUsers[index].selected\"\n            ></adapt-rx-checkbox>\n          </li>\n\n          <button\n            class=\"py-0\"\n            type=\"button\"\n            adapt-button\n            btn-type=\"tertiary\"\n            rx-id=\"load-more-button\"\n            (click)=\"loadUsers()\"\n            *ngIf=\"showLoadMoreButton && !loadingMore\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.load-more.label' | translate }}\n          </button>\n\n          <div class=\"loader-container\" *ngIf=\"loadingMore\">\n            <div class=\"loader-inline\"></div>\n            <span class=\"ml-2\">{{ 'com.bmc.arsys.rx.client.common.loading-data' | translate }}</span>\n          </div>\n        </ul>\n      </div>\n\n      <div class=\"available-list h-100 border field-identifying section-wrapper\" *ngIf=\"isFieldIdentifyingSelection()\">\n        <ul class=\"list-unstyled\">\n          <li *ngFor=\"let field of availableFields; let index = index\">\n            <adapt-rx-checkbox\n              label=\"{{ field.name }}\"\n              [(ngModel)]=\"availableFields[index].selected\"\n            ></adapt-rx-checkbox>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <button\n      type=\"button\"\n      adapt-button\n      class=\"d-icon-right-angle_right form-group move-button\"\n      btn-type=\"secondary\"\n      rx-id=\"move-button\"\n      (click)=\"moveToSelectedApprovers()\"\n      [disabled]=\"isInvalidFieIdentifyingApprover() || noApproverSelected()\"\n    ></button>\n\n    <div class=\"flex-wrapper d-flex flex-column mh-100\">\n      <h5 class=\"mt-1 mb-4\">\n        {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.selected.label' | translate }}\n      </h5>\n\n      <button\n        type=\"button\"\n        adapt-button\n        class=\"d-icon-left-trash form-group align-self-start\"\n        btn-type=\"secondary\"\n        rx-id=\"remove-button\"\n        (click)=\"removeApproversFromSelection()\"\n        [disabled]=\"!selectedApproverSelection.length\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.remove.label' | translate }}\n      </button>\n\n      <div class=\"card available-list flex-fill\">\n        <div class=\"card-block\">\n          <adapt-tree\n            #tree\n            *ngIf=\"selectedApprovers.length && shouldShowTree\"\n            filter=\"true\"\n            [value]=\"selectedApprovers\"\n            selectionMode=\"checkbox\"\n            [(selection)]=\"selectedApproverSelection\"\n            [wrap]=\"treeWrap\"\n          >\n          </adapt-tree>\n        </div>\n\n        <div class=\"vertical-center\" *ngIf=\"!selectedApprovers.length\">\n          <div class=\"empty-state empty-state--config\"></div>\n          <div class=\"empty-state__label\">\n            {{ 'com.bmc.arsys.rx.client.empty-state.no-items-available.label' | translate }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal-footer\">\n  <button\n    adapt-button\n    type=\"button\"\n    btn-type=\"primary\"\n    rx-id=\"save-button\"\n    (click)=\"completeSelection()\"\n    [disabled]=\"!hasUserInteracted\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button adapt-button type=\"button\" btn-type=\"secondary\" rx-id=\"close-button\" (click)=\"close()\">\n    {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n  </button>\n</div>\n\n<ng-template #optionTemplate let-option>\n  <strong>{{ option.displayValue }}</strong>\n\n  <div class=\"text-secondary\">\n    {{ option.value + separatorArrow + option.organization }}\n  </div>\n</ng-template>\n\n<ng-template #orgOptionTemplate let-option>\n  <strong>{{ option.displayValue }}</strong>\n\n  <div class=\"text-secondary\">\n    {{ option.value }}\n  </div>\n</ng-template>\n"]}