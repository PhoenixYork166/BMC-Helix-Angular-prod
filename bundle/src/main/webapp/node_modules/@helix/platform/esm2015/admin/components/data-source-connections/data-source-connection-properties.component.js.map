{"version":3,"file":"data-source-connection-properties.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/admin/components/data-source-connections/data-source-connection-properties.component.ts","../../../../../../../libs/platform/admin/components/data-source-connections/data-source-connection-properties.component.html"],"names":[],"mappings":"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","sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { RxSelectionChangeEvent, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { RX_RECORD_DEFINITION, RxRecordInstanceDataPageService } from '@helix/platform/record/api';\nimport {\n  IDataPageParams,\n  IDataPageResult,\n  IPlainObject,\n  RxDefinitionNameService,\n  RxGlobalCacheService\n} from '@helix/platform/shared/api';\nimport { RxWizardModalComponent } from '@helix/platform/shared/components';\nimport { ConnectionTestStatus } from '@helix/platform/ui-kit';\nimport { TranslateService } from '@ngx-translate/core';\nimport { filter, find, get, groupBy, omit } from 'lodash';\nimport { forkJoin, ReplaySubject, throwError } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take, takeUntil, withLatestFrom } from 'rxjs/operators';\nimport { RxCognitiveServiceService } from '../cognitive-service/cognitive-service.service';\nimport { RxCustomDataSourceProviderDataPageService } from './custom-data-source-provider-data-page.service';\nimport { ICustomDataSourceProviderPickerComponentOptions } from './custom-data-source-provider-picker/custom-data-source-provider-picker-component.types';\nimport { RX_DATA_SOURCE_CONNECTIONS } from './data-source-connections.constant';\nimport { ICustomDataSourceProvider } from './data-source-connections.types';\n\n@Component({\n  selector: 'rx-data-source-connection-properties',\n  templateUrl: './data-source-connection-properties.component.html',\n  styleUrls: ['./data-source-connection-properties.component.scss']\n})\nexport class DataSourceConnectionPropertiesComponent implements OnInit, OnDestroy {\n  connectionPropertiesForm: FormGroup;\n\n  isRasPasswordDisabled = true;\n  connectionTestStatus: ConnectionTestStatus = ConnectionTestStatus.Invalid;\n  webApis: RxSelectOption[] = [];\n\n  customDataSourceProvidersPickerOptions = {\n    label: 'com.bmc.arsys.rx.client.admin.data-source-connection-properties.custom-data-source-provider.label',\n    required: true,\n    providersTree: []\n  } as ICustomDataSourceProviderPickerComponentOptions;\n\n  dataSourceAuthenticationTypes: RxSelectOption[] = RX_DATA_SOURCE_CONNECTIONS.authTypes.map((authType) => ({\n    ...authType,\n    name: this.translateService.instant(authType.name)\n  }));\n\n  isResourceTypeArSystem$ = this.rxWizardModalComponent.context$.pipe(\n    map((context) => context.resourceType.value === RX_DATA_SOURCE_CONNECTIONS.resourceTypes.arSystem.value),\n    shareReplay(1)\n  );\n\n  isResourceTypeCustom$ = this.rxWizardModalComponent.context$.pipe(\n    map((context) => context.resourceType.value === RX_DATA_SOURCE_CONNECTIONS.resourceTypes.custom.value),\n    shareReplay(1)\n  );\n\n  isResourceTypeWebApi$ = this.rxWizardModalComponent.context$.pipe(\n    map((context) => context.resourceType.value === RX_DATA_SOURCE_CONNECTIONS.resourceTypes.webApi.value),\n    shareReplay(1)\n  );\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private defaultSelection = this.translateService.instant('com.bmc.arsys.rx.client.common.select.label');\n  private isDataLoaded: { [key: string]: boolean } = {};\n\n  constructor(\n    private rxCognitiveServiceService: RxCognitiveServiceService,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService,\n    private rxCustomDataSourceProviderDataPageService: RxCustomDataSourceProviderDataPageService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxWizardModalComponent: RxWizardModalComponent,\n    private translateService: TranslateService,\n    private rxGlobalCacheService: RxGlobalCacheService\n  ) {}\n\n  ngOnInit(): void {\n    this.rxWizardModalComponent.context$.pipe(take(1)).subscribe((context) => {\n      this.connectionPropertiesForm = new FormGroup({\n        hostName: new FormControl(context.hostName, [Validators.required]),\n        port: new FormControl(context.port, [Validators.required]),\n        authType: new FormControl(context.authType, [Validators.required]),\n        rasPassword: new FormControl(context.rasPassword),\n        enforceAuthorization: new FormControl(context.enforceAuthorization),\n        selectedWebApi: new FormControl(context.webApiDataSourceGuid, [Validators.required]),\n        providerId: new FormControl(context.providerId, [Validators.required])\n      });\n    });\n\n    this.rxWizardModalComponent.context$.pipe(takeUntil(this.destroyed$)).subscribe((context) => {\n      const arSystemControls = ['hostName', 'port', 'authType', 'rasPassword', 'enforceAuthorization'];\n\n      if (context.resourceType.value === RX_DATA_SOURCE_CONNECTIONS.resourceTypes.arSystem.value) {\n        arSystemControls.forEach((control) => this.connectionPropertiesForm.get(control).enable({ emitEvent: false }));\n        this.connectionPropertiesForm.get('selectedWebApi').disable({ emitEvent: false });\n        this.connectionPropertiesForm.get('providerId').disable({ emitEvent: false });\n      } else if (context.resourceType.value === RX_DATA_SOURCE_CONNECTIONS.resourceTypes.webApi.value) {\n        arSystemControls.forEach((control) => this.connectionPropertiesForm.get(control).disable({ emitEvent: false }));\n        this.connectionPropertiesForm.get('selectedWebApi').enable({ emitEvent: false });\n        this.connectionPropertiesForm.get('providerId').disable({ emitEvent: false });\n      } else if (context.resourceType.value === RX_DATA_SOURCE_CONNECTIONS.resourceTypes.custom.value) {\n        arSystemControls.forEach((control) => this.connectionPropertiesForm.get(control).disable({ emitEvent: false }));\n        this.connectionPropertiesForm.get('selectedWebApi').disable({ emitEvent: false });\n        this.connectionPropertiesForm.get('providerId').enable({ emitEvent: false });\n      }\n\n      this.loadCustomDataSourceProviders(context);\n      this.loadWebApis(context);\n\n      if (this.connectionPropertiesForm.valid && !context.isGeneralFormPristine) {\n        this.rxWizardModalComponent.api.enableFinishButton();\n      } else {\n        this.rxWizardModalComponent.api.disableFinishButton();\n      }\n    });\n\n    this.connectionPropertiesForm.valueChanges\n      .pipe(withLatestFrom(this.isResourceTypeWebApi$), takeUntil(this.destroyed$))\n      .subscribe(([value, isResourceTypeWebApi]) => {\n        this.rxWizardModalComponent.api.updateContext(omit(value, ['selectedWebApi']));\n\n        if (!isResourceTypeWebApi) {\n          this.connectionTestStatus =\n            this.connectionPropertiesForm.pristine || this.connectionPropertiesForm.invalid\n              ? ConnectionTestStatus.Invalid\n              : ConnectionTestStatus.Unknown;\n        }\n      });\n\n    this.connectionPropertiesForm.valueChanges\n      .pipe(withLatestFrom(this.rxWizardModalComponent.context$), takeUntil(this.destroyed$))\n      .subscribe(([_, context]) => {\n        if (\n          this.connectionPropertiesForm.invalid ||\n          (this.connectionPropertiesForm.pristine && context.isGeneralFormPristine)\n        ) {\n          this.rxWizardModalComponent.api.disableFinishButton();\n        } else {\n          this.rxWizardModalComponent.api.enableFinishButton();\n        }\n      });\n  }\n\n  setAuthType(type: string): void {\n    const newContext: IPlainObject = {\n      authType: type\n    };\n\n    this.isRasPasswordDisabled = type !== RX_DATA_SOURCE_CONNECTIONS.authTypes[1].name;\n\n    if (this.isRasPasswordDisabled) {\n      newContext.rasPassword = null;\n    }\n\n    this.rxWizardModalComponent.api.updateContext(newContext);\n  }\n\n  onTestConnection(): void {\n    this.rxWizardModalComponent.context$\n      .pipe(\n        switchMap((context) =>\n          this.rxCognitiveServiceService.testConnection({\n            resourceType: RX_DATA_SOURCE_CONNECTIONS.pingConfigurationCommand,\n            dataSource: {\n              resourceType: RX_DATA_SOURCE_CONNECTIONS.resourceTypes.arSystem.value,\n              authType: context.authType,\n              hostName: context.hostName,\n              port: context.port,\n              rasPassword: context.rasPassword,\n              enforceAuthorization: context.enforceAuthorization\n            }\n          })\n        ),\n        catchError((error: HttpErrorResponse) => {\n          this.connectionTestStatus = ConnectionTestStatus.Failed;\n\n          return throwError(error);\n        })\n      )\n      .subscribe(() => {\n        this.connectionTestStatus = ConnectionTestStatus.Passed;\n      });\n  }\n\n  private loadCustomDataSourceProviders(context: IPlainObject): void {\n    if (\n      context.resourceType.value === RX_DATA_SOURCE_CONNECTIONS.resourceTypes.custom.value &&\n      !this.isDataLoaded[RX_DATA_SOURCE_CONNECTIONS.resourceTypes.custom.value]\n    ) {\n      const globalLabel = this.translateService.instant('com.bmc.arsys.rx.client.common.global-items.label');\n\n      this.isDataLoaded[RX_DATA_SOURCE_CONNECTIONS.resourceTypes.custom.value] = true;\n\n      this.rxCustomDataSourceProviderDataPageService\n        .get()\n        .pipe(\n          switchMap((dataPage: IDataPageResult<ICustomDataSourceProvider>) =>\n            forkJoin(\n              dataPage.data.map((customDataSourceProvider: ICustomDataSourceProvider) => {\n                const bundleId = this.rxDefinitionNameService.getBundleId(customDataSourceProvider.name) || globalLabel;\n\n                return this.rxGlobalCacheService.getBundleFriendlyName(bundleId, bundleId).pipe(\n                  map((bundleFriendlyName) => ({\n                    bundleFriendlyName,\n                    value: customDataSourceProvider.name\n                  }))\n                );\n              })\n            )\n          )\n        )\n        .subscribe((providers) => {\n          const customDataSourceProvidersByBundleFriendlyName = groupBy(providers, 'bundleFriendlyName');\n\n          this.customDataSourceProvidersPickerOptions.providersTree = Object.keys(\n            customDataSourceProvidersByBundleFriendlyName\n          )\n            .map((bundleFriendlyName: string) => ({\n              label: bundleFriendlyName,\n              isExpanded: true,\n              providers: customDataSourceProvidersByBundleFriendlyName[bundleFriendlyName]\n                .map((provider) => provider.value)\n                .sort()\n            }))\n            .sort((provider1, provider2) => {\n              if (provider1.label === globalLabel) {\n                return -1;\n              }\n\n              return provider1.label > provider2.label ? 1 : -1;\n            });\n\n          this.connectionPropertiesForm\n            .get('providerId')\n            .setValue(find(providers, (provider) => provider.value === context.providerId)?.value, {\n              emitEvent: false\n            });\n        });\n    }\n  }\n\n  private loadWebApis(context: IPlainObject): void {\n    if (\n      context.resourceType.value === RX_DATA_SOURCE_CONNECTIONS.resourceTypes.webApi.value &&\n      !this.isDataLoaded[RX_DATA_SOURCE_CONNECTIONS.resourceTypes.webApi.value]\n    ) {\n      const params: IDataPageParams = {\n        recorddefinition: 'WebAPI Connection'\n      };\n\n      this.isDataLoaded[RX_DATA_SOURCE_CONNECTIONS.resourceTypes.webApi.value] = true;\n\n      this.rxRecordInstanceDataPageService.post({ params }).subscribe((result) => {\n        this.webApis = result.data.map((webApi) => ({\n          name: webApi[RX_RECORD_DEFINITION.coreFieldIds.description],\n          id: webApi[RX_RECORD_DEFINITION.coreFieldIds.id]\n        }));\n\n        this.connectionPropertiesForm\n          .get('selectedWebApi')\n          .setValue(filter(this.webApis, ['id', context.webApiDataSourceGuid]), { emitEvent: false });\n      });\n    }\n  }\n\n  optionFormatter = (dataSourceOption: RxSelectOption): string => get(dataSourceOption, 'name', this.defaultSelection);\n\n  onWebApiChange(event: RxSelectionChangeEvent): void {\n    this.rxWizardModalComponent.api.updateContext({\n      webApiDataSourceGuid: event.options[0].id\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n}\n","<form [formGroup]=\"connectionPropertiesForm\">\n  <ng-container *ngIf=\"isResourceTypeArSystem$ | async\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <adapt-rx-textfield\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.data-source-connection-properties.host-name.label' | translate }}\"\n          name=\"hostName\"\n          formControlName=\"hostName\"\n          rx-id=\"host-name-field\"\n          class=\"d-block form-group\"\n          maxlength=\"254\"\n        >\n        </adapt-rx-textfield>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <adapt-rx-counter\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.data-source-connection-properties.port.label' | translate }}\"\n          name=\"port\"\n          adaptRange\n          [formControl]=\"connectionPropertiesForm.controls.port\"\n          [min]=\"0\"\n          [max]=\"65535\"\n          adaptIntegerNumber\n          rx-id=\"port-field\"\n          class=\"d-block form-group\"\n        >\n        </adapt-rx-counter>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <adapt-rx-radiobutton-group\n          label=\"{{\n            'com.bmc.arsys.rx.client.admin.data-source-connection-properties.authentication.label' | translate\n          }}\"\n          name=\"authType\"\n          rx-id=\"authentication-field\"\n          formControlName=\"authType\"\n          (ngModelChange)=\"setAuthType($event)\"\n        >\n          <adapt-rx-radiobutton\n            *ngFor=\"let selectionValue of dataSourceAuthenticationTypes\"\n            [value]=\"selectionValue.name\"\n            [label]=\"selectionValue.name\"\n          >\n          </adapt-rx-radiobutton>\n        </adapt-rx-radiobutton-group>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <adapt-rx-textfield\n          formControlName=\"rasPassword\"\n          [isPassword]=\"true\"\n          name=\"password\"\n          rx-id=\"password-field\"\n          class=\"d-block form-group\"\n          [disabled]=\"isRasPasswordDisabled\"\n        >\n        </adapt-rx-textfield>\n      </div>\n      <div class=\"col-md-6\">\n        <adapt-rx-checkbox\n          name=\"permission\"\n          label=\"{{\n            'com.bmc.arsys.rx.client.admin.data-source-connection-properties.use-current-user-permissions.label'\n              | translate\n          }}\"\n          rx-id=\"permission-field\"\n          formControlName=\"enforceAuthorization\"\n          [tooltip]=\"{\n            iconName: 'question_circle_o',\n            content: 'com.bmc.arsys.rx.client.admin.data-source-connection-properties.permission.tooltip' | translate,\n            placement: 'top',\n            popoverMode: true\n          }\"\n        >\n        </adapt-rx-checkbox>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-8 mt-2\">\n        <rx-connection-tester\n          buttonType=\"secondary\"\n          [status]=\"connectionTestStatus\"\n          (testConnection)=\"onTestConnection()\"\n          rx-id=\"test-connection-button\"\n        ></rx-connection-tester>\n      </div>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"isResourceTypeCustom$ | async\">\n    <div class=\"row\">\n      <rx-custom-data-source-provider-picker\n        class=\"col-md-6\"\n        name=\"providerId\"\n        formControlName=\"providerId\"\n        rx-id=\"custom-data-source-provider-field\"\n        [options]=\"customDataSourceProvidersPickerOptions\"\n      ></rx-custom-data-source-provider-picker>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"isResourceTypeWebApi$ | async\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <adapt-rx-select\n          label=\"{{\n            'com.bmc.arsys.rx.client.admin.data-source-connection-properties.web-api-connection.label' | translate\n          }}\"\n          name=\"webApiConnection\"\n          class=\"d-block form-group\"\n          rx-id=\"web-api-connection-field\"\n          [options]=\"webApis\"\n          formControlName=\"selectedWebApi\"\n          (onSelectionChange)=\"onWebApiChange($event)\"\n          [optionFormatter]=\"optionFormatter\"\n        >\n        </adapt-rx-select>\n      </div>\n    </div>\n  </ng-container>\n</form>\n"]}