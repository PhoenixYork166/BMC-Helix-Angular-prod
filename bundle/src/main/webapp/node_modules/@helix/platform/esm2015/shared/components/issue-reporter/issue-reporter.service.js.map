{"version":3,"file":"issue-reporter.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/components/issue-reporter/issue-reporter.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAChD,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AAEjC,OAAO,EAA0C,uBAAuB,EAAE,MAAM,4BAA4B,CAAC;AAC7G,OAAO,EAGL,oBAAoB,EACpB,oBAAoB,EACrB,MAAM,4BAA4B,CAAC;AACpC,OAAO,EAAE,iBAAiB,EAAE,MAAM,2BAA2B,CAAC;;;;AAI9D,MAAM,OAAO,sBAAsB;IACjC,YACU,uBAAgD,EAChD,oBAA0C,EAC1C,oBAA0C;QAF1C,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,yBAAoB,GAApB,oBAAoB,CAAsB;IACjD,CAAC;IAEJ,WAAW,CAAC,OAAe,EAAE,IAA4B;QACvD,OAAO,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,IAAI,CACjD,SAAS,CAAC,CAAC,YAAY,EAAE,EAAE;YACzB,OAAO,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC,IAAI,CACrF,GAAG,CAAC,CAAC,cAA8B,EAAE,EAAE;gBACrC,OAAO,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE,EAAE;oBAChD,IAAI,UAAU,GAAG,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;oBAElD,IAAI,KAAK,CAAC,EAAE,KAAK,iBAAiB,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE,EAAE;wBAC9D,UAAU,GAAG,iBAAiB,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;qBAC/D;oBAED,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;gBACrD,CAAC,CAAC,CAAC;gBAEH,OAAO,cAAc,CAAC;YACxB,CAAC,CAAC,CACH,CAAC;QACJ,CAAC,CAAC,EACF,SAAS,CAAC,CAAC,cAAc,EAAE,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CACnF,CAAC;IACJ,CAAC;IAEO,mBAAmB,CAAC,OAAe,EAAE,QAAgC,EAAE;QAC7E,OAAO,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAC3F,GAAG,CAAC,CAAC,gBAAmC,EAAE,EAAE,CAAC,CAAC;YAC5C,OAAO,EAAE,OAAO;YAChB,eAAe,EAAE,gBAAgB,CAAC,YAAY,IAAI,IAAI;YACtD,WAAW,EAAE,KAAK,CAAC,WAAW,IAAI,IAAI;YACtC,aAAa,EAAE,KAAK,CAAC,aAAa,IAAI,IAAI;YAC1C,WAAW,EAAE,KAAK,CAAC,WAAW,IAAI,IAAI;YACtC,WAAW,EAAE,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,IAAI;SAC3G,CAAC,CAAC,CACJ,CAAC;IACJ,CAAC;;mHAzCU,sBAAsB;uHAAtB,sBAAsB;2FAAtB,sBAAsB;kBADlC,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { forEach } from 'lodash';\n\nimport { ICreatedRecordInstance, RecordInstance, RxRecordInstanceService } from '@helix/platform/record/api';\nimport {\n  IBundleDescriptor,\n  IServerResponseMessage,\n  RxBundleCacheService,\n  RxGlobalCacheService\n} from '@helix/platform/shared/api';\nimport { RX_ISSUE_REPORTER } from './issue-reporter.constant';\nimport { IRxIssueDetails } from './issue-details.interface';\n\n@Injectable()\nexport class RxIssueReporterService {\n  constructor(\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxBundleCacheService: RxBundleCacheService\n  ) {}\n\n  reportIssue(message: string, data: IServerResponseMessage): Observable<ICreatedRecordInstance> {\n    return this.prepareIssueDetails(message, data).pipe(\n      switchMap((issueDetails) => {\n        return this.rxRecordInstanceService.getNew(RX_ISSUE_REPORTER.recordDefinitionName).pipe(\n          map((recordInstance: RecordInstance) => {\n            forEach(RX_ISSUE_REPORTER.recordFields, (field) => {\n              let fieldValue = issueDetails[field.name] || null;\n\n              if (field.id === RX_ISSUE_REPORTER.recordFields.messageType.id) {\n                fieldValue = RX_ISSUE_REPORTER.messageTypeOptions[fieldValue];\n              }\n\n              recordInstance.setFieldValue(field.id, fieldValue);\n            });\n\n            return recordInstance;\n          })\n        );\n      }),\n      switchMap((recordInstance) => this.rxRecordInstanceService.create(recordInstance))\n    );\n  }\n\n  private prepareIssueDetails(message: string, error: IServerResponseMessage = {}): Observable<IRxIssueDetails> {\n    return this.rxGlobalCacheService.getBundleDescriptor(this.rxBundleCacheService.bundleId).pipe(\n      map((bundleDescriptor: IBundleDescriptor) => ({\n        details: message,\n        applicationName: bundleDescriptor.friendlyName || null,\n        messageType: error.messageType || null,\n        messageNumber: error.messageNumber || null,\n        operationId: error.operationId || null,\n        messageText: error.messageText || error.appendedText ? `${error.messageText} ${error.appendedText}` : null\n      }))\n    );\n  }\n}\n"]}