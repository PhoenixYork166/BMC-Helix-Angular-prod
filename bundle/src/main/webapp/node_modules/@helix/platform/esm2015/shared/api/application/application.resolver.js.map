{"version":3,"file":"application.resolver.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/api/application/application.resolver.ts"],"names":[],"mappings":"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","sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport { Compiler, Inject, Injectable, Injector, isDevMode } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { head, isEmpty, isUndefined } from 'lodash';\nimport { combineLatest, iif, Observable, of } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { IBundleDescriptor } from '../bundle/bundle.interfaces';\nimport { RxBundleService } from '../bundle/bundle.service';\nimport { RxBundleCacheService } from '../caching/bundle-cache.service';\nimport { RxGlobalCacheService } from '../caching/global-cache.service';\nimport { RxLocalizationService } from '../localization';\nimport { RxLogService } from '../logging/log.service';\nimport { RxComponentCanDeactivateGuard } from '../navigation/component-can-deactivate.guard';\nimport { RxApplicationLoaderService } from './application-loader.service';\nimport { RX_APPLICATION } from './application.constant';\nimport { RX_BUILD_ENVIRONMENT } from '../dev/build-environment.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxApplicationResolver implements Resolve<any> {\n  private devResolver$: Observable<IBundleDescriptor[]>;\n  private prodResolver$: Observable<IBundleDescriptor[]>;\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    @Inject(RX_BUILD_ENVIRONMENT) private rxBuildEnvironment: any,\n    private injector: Injector,\n    private compiler: Compiler,\n    private rxBundleService: RxBundleService,\n    private rxLogService: RxLogService,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxComponentCanDeactivateGuard: RxComponentCanDeactivateGuard,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxApplicationLoaderService: RxApplicationLoaderService,\n    private rxLocalizationService: RxLocalizationService\n  ) {\n    const prodBundleDescriptors$ = this.rxGlobalCacheService\n      .getBundleDescriptors()\n      .pipe(\n        map((bundleDescriptors: IBundleDescriptor[]) =>\n          bundleDescriptors.filter((bundleDescriptor) => bundleDescriptor.containsAngular)\n        )\n      );\n\n    const devBundleDescriptors$ = prodBundleDescriptors$.pipe(\n      map((bundleDescriptors: IBundleDescriptor[]) =>\n        bundleDescriptors.filter((bundleDescriptor) => bundleDescriptor.id !== this.rxBuildEnvironment.bundleId)\n      )\n    );\n\n    this.devResolver$ = iif(\n      () => isUndefined(this.rxBuildEnvironment.bundleId),\n      of<IBundleDescriptor[]>([]),\n      devBundleDescriptors$\n    );\n\n    this.prodResolver$ = prodBundleDescriptors$;\n  }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const applicationId = head(route.url).path;\n\n    if (this.rxGlobalCacheService.applicationId && applicationId !== this.rxGlobalCacheService.applicationId) {\n      this.rxComponentCanDeactivateGuard.disable();\n      window.location.reload();\n    }\n\n    this.rxGlobalCacheService.applicationId = applicationId;\n\n    const bundleId = route.params['bundleId'];\n\n    if (bundleId !== RX_APPLICATION.innovationStudioBundleId) {\n      this.rxBundleCacheService.bundleId = bundleId;\n    }\n\n    const useDefaultLang = this.rxGlobalCacheService.applicationId === RX_APPLICATION.innovationStudioBundleId;\n    const initTranslations$ = this.rxLocalizationService.initTranslations(useDefaultLang);\n\n    return combineLatest([initTranslations$, this.getResolver()]);\n  }\n\n  private getResolver(): Observable<any> {\n    return iif(() => isDevMode(), this.devResolver$, this.prodResolver$).pipe(\n      switchMap((bundles: IBundleDescriptor[]) => {\n        if (isEmpty(bundles)) {\n          return of(bundles);\n        }\n\n        const bundleIds = bundles.map((bundleDescriptor: IBundleDescriptor) => bundleDescriptor.id);\n\n        return this.rxBundleService.loadBundles(bundleIds, false);\n      }),\n      tap(() => this.rxApplicationLoaderService.removeApplicationLoader()),\n      shareReplay(1)\n    );\n  }\n}\n"]}