{"version":3,"file":"attachment-form-control.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/shared/components/form-controls/attachment-form-control/attachment-form-control.component.ts","../../../../../../../../libs/platform/shared/components/form-controls/attachment-form-control/attachment-form-control.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAU,MAAM,eAAe,CAAC;AACjE,OAAO,EAAE,iBAAiB,EAAE,MAAM,gBAAgB,CAAC;AAGnD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;AACpC,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AAC7B,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;;;;AAelE,MAAM,OAAO,8BAA+B,SAAQ,aAAqB;IAUvE,YAAoB,MAAc;QAChC,KAAK,EAAE,CAAC;QADU,WAAM,GAAN,MAAM,CAAQ;QAFlC,mBAAc,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAI9C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;YAC7B,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC;SAC/D;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;YAC5B,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,GAAG,CAAC;SAC/B;IACH,CAAC;IAED,aAAa,CAAC,KAAgB;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACpE,CAAC;IAED,YAAY,CAAC,KAAa;QACxB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,EAAE;YACzC,MAAM,iBAAiB,GAAG;gBACxB,IAAI,EAAE,QAAQ;gBACd,aAAa,EAAE,IAAI;gBACnB,WAAW,EAAE,KAAK;gBAClB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,GAAG;gBACb,KAAK,EAAE,KAAK;gBACZ,SAAS,EAAE,EAAE;aACd,CAAC;YAEF,MAAM,iBAAiB,GAAG,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,iBAAiB,CAAC;YAE9G,iBAAiB,CAAC,QAAQ,GAAG,GAAG,CAAC;YAEjC,OAAO,iBAAiB,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,YAAY,CAAC,OAAgB;QACnC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,EAAE;YACjC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;;2HApDU,8BAA8B;+GAA9B,8BAA8B,+GAR9B;QACT;YACE,OAAO,EAAE,iBAAiB;YAC1B,WAAW,EAAE,8BAA8B;YAC3C,KAAK,EAAE,IAAI;SACZ;KACF,iDCnBH,mcAcA;2FDOa,8BAA8B;kBAZ1C,SAAS;mBAAC;oBACT,QAAQ,EAAE,4BAA4B;oBACtC,WAAW,EAAE,0CAA0C;oBACvD,SAAS,EAAE,CAAC,0CAA0C,CAAC;oBACvD,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,iBAAiB;4BAC1B,WAAW,gCAAgC;4BAC3C,KAAK,EAAE,IAAI;yBACZ;qBACF;iBACF;6FAGC,OAAO;sBADN,KAAK;gBAIN,UAAU;sBADT,KAAK","sourcesContent":["import { Component, Input, NgZone, OnInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FileObj } from '@bmc-ux/adapt-angular';\nimport { IFormControlComponent } from '@helix/platform/shared/api';\nimport { saveAs } from 'file-saver';\nimport { map } from 'lodash';\nimport { ValueAccessor } from '../../form-builder/value-accessor';\nimport { IAttachmentFormControlOptions } from './attachment-form-control-options.interface';\n\n@Component({\n  selector: 'rx-attachment-form-control',\n  templateUrl: './attachment-form-control.component.html',\n  styleUrls: ['./attachment-form-control.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: AttachmentFormControlComponent,\n      multi: true\n    }\n  ]\n})\nexport class AttachmentFormControlComponent extends ValueAccessor<File[]> implements IFormControlComponent, OnInit {\n  @Input()\n  options: IAttachmentFormControlOptions;\n\n  @Input()\n  isDisabled: boolean;\n\n  fileObjects: FileObj[];\n  customDownload = this.downloadFile.bind(this);\n\n  constructor(private ngZone: NgZone) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (!this.options.maxFileSize) {\n      this.options.maxFileSize = Number.MAX_SAFE_INTEGER.toString();\n    }\n\n    if (!this.options.filesCount) {\n      this.options.filesCount = '1';\n    }\n  }\n\n  onModelChange(files: FileObj[]): void {\n    this.value = files.length ? files.map((file) => file.data) : null;\n  }\n\n  onWriteValue(value: File[]): void {\n    this.fileObjects = map(value, (fileData) => {\n      const defaultFileObject = {\n        data: fileData,\n        allowDeletion: true,\n        inUploading: false,\n        inDeleting: false,\n        uploaded: 100,\n        error: false,\n        errorText: ''\n      };\n\n      const updatedFileObject = (this.fileObjects || []).find(({ data }) => data === fileData) || defaultFileObject;\n\n      updatedFileObject.uploaded = 100;\n\n      return updatedFileObject;\n    });\n  }\n\n  private downloadFile(fileObj: FileObj): void {\n    this.ngZone.runOutsideAngular(() => {\n      saveAs(fileObj.data, fileObj.data.name);\n    });\n  }\n}\n","<div class=\"form-group\">\n  <adapt-rx-uploader\n    [required]=\"options.required\"\n    [disabled]=\"isDisabled\"\n    (ngModelChange)=\"onModelChange($event)\"\n    [(ngModel)]=\"fileObjects\"\n    [label]=\"options.label\"\n    [filesCount]=\"options.filesCount\"\n    [maxFileSize]=\"options.maxFileSize\"\n    [enableCustomDownload]=\"true\"\n    [customDownload]=\"customDownload\"\n    [reusable]=\"true\"\n  ></adapt-rx-uploader>\n</div>\n"]}