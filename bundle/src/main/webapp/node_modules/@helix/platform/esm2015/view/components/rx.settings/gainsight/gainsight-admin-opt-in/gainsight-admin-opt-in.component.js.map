{"version":3,"file":"gainsight-admin-opt-in.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/rx.settings/gainsight/gainsight-admin-opt-in/gainsight-admin-opt-in.component.ts","../../../../../../../../../libs/platform/view/components/rx.settings/gainsight/gainsight-admin-opt-in/gainsight-admin-opt-in.component.html"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { RX_APPLICATION, RxNotificationService } from '@helix/platform/shared/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RX_GAINSIGHT, RxGainsightConfiguratorService } from '@helix/platform/shared/components';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { map, take, shareReplay, switchMap, filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'rx-gainsight-admin-opt-in',\n  templateUrl: './gainsight-admin-opt-in.component.html',\n  styleUrls: ['./gainsight-admin-opt-in.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GainsightAdminOptInComponent extends BaseViewComponent implements OnInit {\n  deploymentTypeOptions: RxSelectOption[] = RX_GAINSIGHT.deploymentTypes;\n  environmentTypeOptions: string[] = RX_GAINSIGHT.environmentTypes;\n  deploymentType: string[];\n  environmentType: string[];\n\n  vm$ = this.rxGainsightConfiguratorService.getGainsightConfiguration(RX_APPLICATION.innovationStudioBundleId).pipe(\n    take(1),\n    filter((config) => Boolean(config)),\n    map((config) => config.settings),\n    map((settings) => ({\n      deploymentTypeOptions: this.deploymentTypeOptions.filter(\n        (deploymentType) => deploymentType.name === settings.deploymentType\n      ),\n      environmentTypeOptions: [settings.environmentType],\n      useAdaptRadar: settings.useAdaptRadar,\n      loadGainsightFromBmcIt: settings.loadGainsightFromBmcIt,\n      adaptAgreementState: {\n        organizationPerformance: settings.enableGainsight,\n        accountMarketing: false,\n        accountPerformance: false,\n        organizationMarketing: false\n      }\n    })),\n    shareReplay(1)\n  );\n\n  constructor(\n    private translateService: TranslateService,\n    private rxNotificationService: RxNotificationService,\n    private rxGainsightConfiguratorService: RxGainsightConfiguratorService\n  ) {\n    super();\n  }\n\n  optionFormatter(deploymentType: RxSelectOption): string {\n    return deploymentType.name;\n  }\n\n  save(): void {\n    this.vm$\n      .pipe(\n        take(1),\n        map((vm) => ({\n          ...vm,\n          deploymentType: vm.deploymentTypeOptions[0].id,\n          environmentType: vm.environmentTypeOptions[0],\n          enableGainsight: vm.adaptAgreementState.organizationPerformance\n        })),\n        switchMap((gainsightSettings) =>\n          this.rxGainsightConfiguratorService.saveGainsightConfiguration(gainsightSettings)\n        )\n      )\n      .subscribe(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.gainsight.gainsight-settings-saved.success.message')\n        );\n      });\n  }\n}\n","<ng-container class=\"p-0\" *ngIf=\"vm$ | async as vm; else emptyStateTemplate\">\n  <div class=\"mt-1 container\">\n    <h1>\n      <span class=\"text-logo\">{{ 'com.bmc.arsys.rx.client.gainsight.gainsight-settings.title' | translate }}</span>\n    </h1>\n\n    <div>\n      <adapt-agreement-card\n        [showOrganizationSettings]=\"true\"\n        [showMarketingSection]=\"false\"\n        [multiProductUsage]=\"false\"\n        [showShadow]=\"false\"\n        rx-id=\"enable-gainsight\"\n        [(state)]=\"vm.adaptAgreementState\"\n      >\n      </adapt-agreement-card>\n    </div>\n\n    <div class=\"pt-4 pl-0 col-md-4\" [hidden]=\"true\">\n      <adapt-rx-switch\n        [isLabelBefore]=\"true\"\n        [size]=\"'lg'\"\n        label=\"Use ADAPT Radar\"\n        [(ngModel)]=\"vm.useAdaptRadar\"\n        name=\"useAdaptRadar\"\n        rx-id=\"use-adapt-radar\"\n      ></adapt-rx-switch>\n    </div>\n\n    <div class=\"pt-4 pl-0 col-md-4\">\n      <adapt-rx-switch\n        [isLabelBefore]=\"true\"\n        [size]=\"'lg'\"\n        label=\"{{\n          'com.bmc.arsys.rx.client.gainsight.gainsight-settings.load-gainsight-script-from-bmc-it.label' | translate\n        }}\"\n        [(ngModel)]=\"vm.loadGainsightFromBmcIt\"\n        name=\"loadGainsightFromBmcIt\"\n        rx-id=\"load-gainsight-from-bmc\"\n      ></adapt-rx-switch>\n    </div>\n\n    <adapt-rx-select\n      class=\"col-md-3 pt-4 pl-0\"\n      label=\"{{ 'com.bmc.arsys.rx.client.gainsight.gainsight-settings.deployment-type.label' | translate }}\"\n      [options]=\"deploymentTypeOptions\"\n      [optionFormatter]=\"optionFormatter\"\n      [(ngModel)]=\"vm.deploymentTypeOptions\"\n      name=\"deploymentType\"\n      rx-id=\"deployment-type\"\n    >\n    </adapt-rx-select>\n\n    <adapt-rx-select\n      class=\"col-md-3 pt-4 pl-0\"\n      label=\"{{ 'com.bmc.arsys.rx.client.gainsight.gainsight-settings.environment-type.label' | translate }}\"\n      [options]=\"environmentTypeOptions\"\n      [(ngModel)]=\"vm.environmentTypeOptions\"\n      name=\"environmentType\"\n      rx-id=\"environment-type\"\n    >\n    </adapt-rx-select>\n\n    <div class=\"modal-footer mt-4\">\n      <button rx-id=\"save-button\" adapt-button btn-type=\"primary\" type=\"button\" (click)=\"save()\" rx-id=\"save-button\">\n        {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n      </button>\n    </div>\n  </div>\n</ng-container>\n\n<ng-template #emptyStateTemplate>\n  <div class=\"d-flex align-items-center justify-content-center h-100\">\n    <adapt-empty-state\n      class=\"w-100\"\n      label=\"{{ 'com.bmc.arsys.rx.client.gainsight.feature-is-disabled.label' | translate }}\"\n      type=\"config\"\n    ></adapt-empty-state>\n  </div>\n</ng-template>\n"]}