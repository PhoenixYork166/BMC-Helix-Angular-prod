{"version":3,"file":"overlay-requests-interceptor.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/api/overlay/overlay-requests-interceptor.service.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;;;AAGrD,MAAM,OAAO,4BAA4B;IACvC,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAG,CAAC;IAE1D,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,MAAM,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,EAAE,CAAC;QAE/E,IAAI,CAAA,qBAAqB,aAArB,qBAAqB,uBAArB,qBAAqB,CAAE,cAAc,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,EAAE;YAC1F,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,qBAAqB,CAAC,cAAc,CAAC;aAC5F,CAAC,CAAC;SACJ;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;;yHAbU,4BAA4B;6HAA5B,4BAA4B;2FAA5B,4BAA4B;kBADxC,UAAU","sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RxOverlayService } from './overlay.service';\n\n@Injectable()\nexport class RxOverlayRequestsInterceptor implements HttpInterceptor {\n  constructor(private rxOverlayService: RxOverlayService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const currentOverlayContext = this.rxOverlayService.getCurrentOverlayContext();\n\n    if (currentOverlayContext?.overlayGroupId && !request.headers.get('request-overlay-group')) {\n      request = request.clone({\n        headers: request.headers.set('request-overlay-group', currentOverlayContext.overlayGroupId)\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n"]}