{"version":3,"file":"view-definition-generator.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/designer/core/view-definition-generator.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  AnyViewComponentDefinition,\n  IViewDefinition,\n  RxViewComponentType,\n  RxViewDefinitionLocalizationService\n} from '@helix/platform/view/api';\nimport { IViewComponentDesignModel } from '../interfaces/view-component-design-model.interface';\nimport { IViewComponentDesignModels } from '../interfaces/view-component-design-models.interface';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport {\n  isArray,\n  isBoolean,\n  isFunction,\n  isNumber,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  omit,\n  transform,\n  has\n} from 'lodash';\nimport { IPlainObject, RxBundleCacheService, RxDefinitionNameService } from '@helix/platform/shared/api';\nimport { getChildGuidsFromModel } from './layout-helpers';\nimport { RxViewDesignerModels } from './view-designer-models.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDefinitionGeneratorService {\n  constructor(\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxBundleCacheService: RxBundleCacheService,\n    private viewDesignerModels: RxViewDesignerModels,\n    private rxViewDefinitionLocalizationService: RxViewDefinitionLocalizationService\n  ) {}\n\n  generate(viewModel: IViewDesignModel, componentModels: IViewComponentDesignModels, forSave = false): IViewDefinition {\n    const clonedViewModel = viewModel;\n\n    const viewDefinition: Partial<IViewDefinition> = omit(\n      clonedViewModel,\n      'displayName',\n      'layout',\n      'layoutName',\n      'pageComponent',\n      'isAngularJsView'\n    );\n\n    viewDefinition.name =\n      viewDefinition.name ||\n      this.rxDefinitionNameService.getDefinitionName(this.rxBundleCacheService.bundleId, clonedViewModel.displayName);\n\n    viewDefinition.componentDefinitions = this.generateComponentDefinitions(clonedViewModel, componentModels);\n\n    if (forSave) {\n      viewDefinition.localizableStringsByComponentId =\n        this.rxViewDefinitionLocalizationService.extractLocalizableStrings(viewDefinition as IViewDefinition);\n    }\n\n    delete viewDefinition.localizablePropertyToStringGuidMap;\n    viewDefinition.layout = JSON.stringify(clonedViewModel.layout);\n\n    return viewDefinition as IViewDefinition;\n  }\n\n  private generateComponentDefinitions(\n    model: IViewDesignModel | IViewComponentDesignModel,\n    componentModelItems: IViewComponentDesignModels\n  ): AnyViewComponentDefinition[] {\n    return getChildGuidsFromModel(model).map((guid) => {\n      const componentDefinition: any = { ...componentModelItems[guid] };\n      const componentModel = this.viewDesignerModels.get(guid);\n\n      const propertiesByName = isFunction(componentModel?.getPropertiesByName)\n        ? componentModel.getPropertiesByName(componentDefinition.propertiesByName)\n        : componentDefinition.propertiesByName;\n\n      componentDefinition.propertiesByName = this.serializeComponentDefinitionProperties(propertiesByName);\n      delete componentDefinition.parentGuid;\n\n      // Move name out of propertiesByName for all components except actions.\n      if (\n        componentDefinition.type !== RxViewComponentType.Action &&\n        has(componentDefinition.propertiesByName, 'name')\n      ) {\n        if (componentDefinition.propertiesByName.name) {\n          componentDefinition.name = componentDefinition.propertiesByName.name;\n        }\n\n        delete componentDefinition.propertiesByName.name;\n      }\n\n      if (componentDefinition.layout || componentDefinition.childDataComponentGuids) {\n        componentDefinition.componentDefinitions = this.generateComponentDefinitions(\n          componentDefinition,\n          componentModelItems\n        );\n\n        delete componentDefinition.childDataComponentGuids;\n      }\n\n      if (componentDefinition.layout) {\n        componentDefinition.layout = JSON.stringify(componentDefinition.layout);\n      }\n\n      return componentDefinition;\n    });\n  }\n\n  private serializeComponentDefinitionProperties(componentProperties: IPlainObject): IPlainObject {\n    return transform(\n      componentProperties,\n      (result: IPlainObject, value: any, key: string) => {\n        switch (true) {\n          case isArray(value):\n          case isNumber(value):\n          case isBoolean(value):\n          case isPlainObject(value):\n            result[key] = JSON.stringify(value);\n            break;\n\n          case isObject(value):\n            // support Set, Map\n            const obj = Object.create(null);\n\n            value.forEach((v, k) => (obj[k] = v));\n            result[key] = JSON.stringify(obj);\n            break;\n\n          case isFunction(value):\n          case isUndefined(value):\n            result[key] = null;\n            break;\n\n          default:\n            result[key] = value;\n            break;\n        }\n      },\n      {}\n    );\n  }\n}\n"]}