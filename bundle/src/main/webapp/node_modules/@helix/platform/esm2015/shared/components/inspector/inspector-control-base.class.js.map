{"version":3,"file":"inspector-control-base.class.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/components/inspector/inspector-control-base.class.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEjF,OAAO,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAC;AAC3D,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;;AAIhD,kDAAkD;AAClD,MAAM,OAAO,oBACX,SAAQ,aAAqC;IAc7C,YAAsB,QAAkB;QACtC,KAAK,EAAE,CAAC;QADY,aAAQ,GAAR,QAAQ,CAAU;QAJxC,WAAM,GAAsB,IAAI,YAAY,EAAE,CAAC;QAEtC,sBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAiC,kBAAkB,CAAC,CAAC,iBAAiB,CAAC;IAIrH,CAAC;;iHAjBU,oBAAoB;qGAApB,oBAAoB;2FAApB,oBAAoB;kBAFhC,SAAS;+FAOR,YAAY;sBADX,KAAK;gBAIN,OAAO;sBADN,KAAK;gBAIN,MAAM;sBADL,MAAM","sourcesContent":["import { Directive, EventEmitter, Injector, Input, Output } from '@angular/core';\nimport { IInspector } from './inspector.interface';\nimport { InspectorDirective } from './inspector.directive';\nimport { ValueAccessor } from '../form-builder';\nimport { IFormControlComponent } from '@helix/platform/shared/api';\n\n@Directive()\n// tslint:disable-next-line:directive-class-suffix\nexport class InspectorControlBase<TInspectorControlValue, TInspectorControlOptions, TDesignerItemModel>\n  extends ValueAccessor<TInspectorControlValue>\n  implements IFormControlComponent\n{\n  @Input()\n  propertyPath: string;\n\n  @Input()\n  options: TInspectorControlOptions;\n\n  @Output()\n  events: EventEmitter<any> = new EventEmitter();\n\n  readonly designerItemModel = this.injector.get<IInspector<TDesignerItemModel>>(InspectorDirective).designerItemModel;\n\n  constructor(protected injector: Injector) {\n    super();\n  }\n}\n"]}