{"version":3,"file":"set-property-view-action.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/actions/set-property/set-property-view-action.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,UAAU,EAAE,MAAM,QAAQ,CAAC;AACpC,OAAO,EAAE,KAAK,EAAE,YAAY,EAAc,UAAU,EAAE,MAAM,MAAM,CAAC;AAEnE,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;;AAGhD,MAAM,OAAO,8BAA8B;IACzC,OAAO,CAAC,MAAoC;QAC1C,IAAI,eAAe,GAA6B,UAAU,CACxD,IAAI,OAAO,CAAC,kDAAkD,CAAC,CAChE,CAAC;QAEF,IAAI,MAAM,CAAC,YAAY,IAAI,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,MAAM,CAAC,YAAY,EAAE;YAC7F,sDAAsD;YACtD,MAAM,OAAO,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,2CAA2C,CAAC,CAAC;YAEvF,IAAI,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;gBACzB,eAAe,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC;aACrF;SACF;QAED,OAAO,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,CAAC;IACjE,CAAC;;2HAhBU,8BAA8B;+HAA9B,8BAA8B;2FAA9B,8BAA8B;kBAD1C,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { IViewActionService } from '@helix/platform/view/api';\nimport { isFunction } from 'lodash';\nimport { EMPTY, isObservable, Observable, throwError } from 'rxjs';\nimport { ISetPropertyViewActionParams } from './set-property-view-action.interfaces';\nimport { RxError } from '@helix/platform/utils';\n\n@Injectable()\nexport class RxSetPropertyViewActionService implements IViewActionService<ISetPropertyViewActionParams, never> {\n  execute(params: ISetPropertyViewActionParams): Observable<never> {\n    let executionResult: Observable<never> | void = throwError(\n      new RxError('rxSetPropertyAction: component is not specified.')\n    );\n\n    if (params.componentApi && isFunction(params.componentApi.setProperty) && params.propertyPath) {\n      // Extract <Path> from  ${view.components.<ID>.<Path>}\n      const matches = params.propertyPath.match(/^\\$\\{view\\.components\\.[0-9a-z-]+\\.(.+)}$/);\n\n      if (matches && matches[1]) {\n        executionResult = params.componentApi.setProperty(matches[1], params.propertyValue);\n      }\n    }\n\n    return isObservable(executionResult) ? executionResult : EMPTY;\n  }\n}\n"]}