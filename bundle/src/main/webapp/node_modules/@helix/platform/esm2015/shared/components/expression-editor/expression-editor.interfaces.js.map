{"version":3,"file":"expression-editor.interfaces.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/components/expression-editor/expression-editor.interfaces.ts"],"names":[],"mappings":"","sourcesContent":["import { IExpressionConfigurator } from '@helix/platform/shared/api';\nimport { Observable } from 'rxjs';\n\nexport interface IExpressionEditorConfig {\n  property: IExpressionEditorProperty;\n  expressionConfigurator: IExpressionConfigurator;\n  expressionPropertyNavigator?: IExpressionEditorPropertyNavigator;\n  isReadOnly?: boolean;\n  legend?: IExpressionEditorLegendItem[];\n}\n\nexport interface IExpressionEditorLegendItem {\n  icon: string;\n  label: string;\n}\n\nexport interface IExpressionEditorPropertyChange {\n  path: string;\n  value: string;\n}\n\nexport interface IExpressionEditorProperty {\n  path: string;\n  value: string;\n  label: string;\n}\n\nexport interface IExpressionEditorPropertyNavigator {\n  getProperties: () => Observable<IExpressionEditorProperty[]>;\n}\n"]}