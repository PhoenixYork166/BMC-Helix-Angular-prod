{"version":3,"file":"selection-field.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/field-components/selection-field/runtime/selection-field.component.ts","../../../../../../../../../libs/platform/view/components/field-components/selection-field/runtime/selection-field.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { ISelectionFieldDefinition } from '@helix/platform/record/api';\nimport { compact, get, isNil, map } from 'lodash';\nimport { distinctUntilChanged, startWith, takeUntil } from 'rxjs/operators';\nimport { BaseRecordEditorFieldComponent } from '../../base-record-editor-field/runtime/base-record-editor-field-component.class';\nimport { RX_SELECTION_FIELD } from '../selection-field.constant';\nimport { ISelectionFieldConfig, SelectionFieldMode } from './selection-field.types';\n\n@Component({\n  selector: 'rx-selection-field',\n  templateUrl: './selection-field.component.html'\n})\nexport class SelectionFieldComponent extends BaseRecordEditorFieldComponent {\n  fieldDefinition: ISelectionFieldDefinition;\n  selectOptions: RxSelectOption[];\n  isRadioButtonMode: boolean;\n  selectFormControl: FormControl;\n\n  getSelectValue(): RxSelectOption[] {\n    return isNil(this.formControl.value)\n      ? []\n      : compact([this.selectOptions.find((option) => option.id === Number(this.formControl.value))]);\n  }\n\n  onConfigInitialized(config: ISelectionFieldConfig): void {\n    super.onConfigInitialized(config);\n\n    this.isRadioButtonMode = config.editingMode === SelectionFieldMode.RadioButton;\n\n    this.generateControlOptions(this.fieldDefinition);\n\n    this.selectFormControl = new FormControl(this.getSelectValue());\n\n    this.selectFormControl.valueChanges.pipe(takeUntil(this.destroyed$)).subscribe((value: RxSelectOption[]) => {\n      this.setFieldValue(get(value, '[0].id', null));\n    });\n\n    this.formControl.valueChanges\n      .pipe(startWith(this.formControl.value as number), distinctUntilChanged(), takeUntil(this.destroyed$))\n      .subscribe(() => {\n        this.selectFormControl.setValue(this.getSelectValue());\n      });\n\n    this.formControl.touched$.pipe(takeUntil(this.destroyed$)).subscribe((touched) => {\n      touched ? this.selectFormControl.markAsTouched() : this.selectFormControl.markAsUntouched();\n    });\n  }\n\n  generateControlOptions(fieldDefinition: ISelectionFieldDefinition): void {\n    this.selectOptions = map(fieldDefinition.optionLabelsById, (label, optionId) => ({\n      name: label,\n      id: Number(optionId)\n    }));\n\n    if (!this.isRequired && this.isRadioButtonMode) {\n      this.selectOptions.unshift(RX_SELECTION_FIELD.emptyOption);\n    }\n  }\n\n  getDisplayValue(): string {\n    return this.fieldDefinition.optionLabelsById[this.formControl.value];\n  }\n\n  optionFormatter(option: RxSelectOption): string {\n    return option.name;\n  }\n\n  onPopupStatusChange(isOpen: boolean): void {\n    if (!isOpen) {\n      this.formControl.markAsTouched();\n    }\n  }\n}\n","<ng-container *ngIf=\"!isHidden\">\n  <rx-read-only-field\n    *ngIf=\"inReadState; else editStateElementRef\"\n    [label]=\"label\"\n    [value]=\"getDisplayValue()\"\n  ></rx-read-only-field>\n</ng-container>\n\n<ng-template #editStateElementRef>\n  <adapt-rx-radiobutton-group\n    *ngIf=\"isRadioButtonMode\"\n    [name]=\"guid\"\n    [formControl]=\"formControl\"\n    [readonly]=\"isDisabled\"\n    [label]=\"label\"\n  >\n    <adapt-rx-radiobutton\n      *ngFor=\"let item of selectOptions; last as isLast\"\n      [value]=\"item.id\"\n      [label]=\"item.name\"\n      class=\"mt-0 {{ isLast ? 'mb-1' : '' }}\"\n    >\n    </adapt-rx-radiobutton>\n  </adapt-rx-radiobutton-group>\n\n  <adapt-rx-select\n    *ngIf=\"!isRadioButtonMode\"\n    [options]=\"selectOptions\"\n    [required]=\"isRequired\"\n    [label]=\"label\"\n    [formControl]=\"selectFormControl\"\n    [readonly]=\"isDisabled\"\n    [optionFormatter]=\"optionFormatter\"\n    [enableFilter]=\"true\"\n    [emptyOption]=\"!isRequired\"\n    (onPopupOpenChange)=\"onPopupStatusChange($event)\"\n  >\n  </adapt-rx-select>\n</ng-template>\n"]}