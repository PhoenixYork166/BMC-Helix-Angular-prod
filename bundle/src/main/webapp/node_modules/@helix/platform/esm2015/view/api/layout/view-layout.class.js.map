{"version":3,"file":"view-layout.class.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/api/layout/view-layout.class.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,oCAAoC,CAAC;AACxE,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,EAAE,iBAAiB,EAAkC,eAAe,EAAE,MAAM,qBAAqB,CAAC;AAEzG,WAAW;AACX,MAAM,OAAO,YAAY;IACvB,MAAM,CAAC,6BAA6B,CAAC,QAAmB;QACtD,OAAO;YACL,OAAO,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;SAC1E,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,gCAAgC,CAAC,IAAwB;QAC9D,OAAO;YACL,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SACtD,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,4BAA4B,CAAC,OAA4B;QAC9D,OAAO;YACL,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC9B,uCACK,MAAM,KACT,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,iCAAM,MAAM,KAAE,QAAQ,EAAE,EAAE,IAAG,CAAC,IACtE;YACJ,CAAC,CAAC;SACH,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,kBAAkB,CAAC,iBAAiB,EAAE,WAAqB,EAAE;QACnF,OAAO;YACL,IAAI;YACJ,OAAO,EAAE;gBACP;oBACE,QAAQ;iBACT;aACF;SACF,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,uBAAuB,CAAC,MAAmB,EAAE,UAAmB;QACrE,OAAO,MAAM,CACX,MAAM,CAAC,OAAO,EACd,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;YAChB,IAAI,CAAC,UAAU,IAAI,UAAU,KAAK,MAAM,CAAC,IAAI,EAAE;gBAC7C,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;oBAChC,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACjC,CAAC,CAAC,CAAC;aACJ;YAED,OAAO,KAAK,CAAC;QACf,CAAC,EACD,EAAE,CACH,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,MAAmB,EAAE,IAAY;QAC/C,OAAO,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACrF,CAAC;IAED,MAAM,CAAC,cAAc,CAAC,MAAyB,EAAE,IAAY;QAC3D,OAAO,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClF,CAAC;IAED,MAAM,CAAC,qBAAqB,CAAC,cAAsB;QACjD,MAAM,UAAU,GACd,eAAe,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,cAAc,CAAC;YAC1D,eAAe,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,kBAAkB,CAAC,uBAAuB,CAAC,CAAC;QAEzF,OAAO,UAAU,CAAC,MAAM,CAAC;IAC3B,CAAC;IAED,MAAM,CAAC,aAAa,CAAC,MAAmB;QACtC,MAAM,QAAQ,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAC3C,MAAM,cAAc,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC;QAElF,OAAO,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;IACpD,CAAC;IAED,MAAM,CAAC,qBAAqB,CAAC,MAAmB,EAAE,YAAoB;QACpE,OAAO;YACL,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,iCACnC,MAAM,KACT,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,iCACnC,MAAM,KACT,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,KAAK,YAAY,CAAC,IAC3E,CAAC,IACH,CAAC;SACJ,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { RX_VIEW_DEFINITION } from '../domain/view-definition.constant';\nimport { reduce } from 'lodash';\nimport { getLayoutChecksum, IViewLayout, IViewLayoutOutlet, RX_VIEW_LAYOUTS } from './view-layout.types';\n\n// @dynamic\nexport class RxViewLayout {\n  static getViewLayoutForDefaultOutlet(children?: string[]): IViewLayout {\n    return {\n      outlets: [this.getOutlet(RX_VIEW_DEFINITION.defaultOutletName, children)]\n    };\n  }\n\n  static getEmptyViewLayoutForOutletNames(list: { name: string }[]): IViewLayout {\n    return {\n      outlets: list.map(({ name }) => this.getOutlet(name))\n    };\n  }\n\n  static getEmptyViewLayoutForOutlets(outlets: IViewLayoutOutlet[]): IViewLayout {\n    return {\n      outlets: outlets.map((outlet) => {\n        return {\n          ...outlet,\n          columns: outlet.columns.map((column) => ({ ...column, children: [] }))\n        };\n      })\n    };\n  }\n\n  static getOutlet(name = RX_VIEW_DEFINITION.defaultOutletName, children: string[] = []): IViewLayoutOutlet {\n    return {\n      name,\n      columns: [\n        {\n          children\n        }\n      ]\n    };\n  }\n\n  static getViewLayoutChildGuids(layout: IViewLayout, outletName?: string): string[] {\n    return reduce(\n      layout.outlets,\n      (guids, outlet) => {\n        if (!outletName || outletName === outlet.name) {\n          outlet.columns.forEach((column) => {\n            guids.push(...column.children);\n          });\n        }\n\n        return guids;\n      },\n      []\n    );\n  }\n\n  static hasChild(layout: IViewLayout, guid: string): boolean {\n    return Boolean(layout.outlets.find((outlet) => this.outletHasChild(outlet, guid)));\n  }\n\n  static outletHasChild(outlet: IViewLayoutOutlet, guid: string): boolean {\n    return Boolean(outlet.columns.find((column) => column.children.includes(guid)));\n  }\n\n  static getViewLayoutTemplate(layoutTemplate: number): IViewLayout {\n    const layoutItem =\n      RX_VIEW_LAYOUTS.find((item) => item.id === layoutTemplate) ||\n      RX_VIEW_LAYOUTS.find((item) => item.id === RX_VIEW_DEFINITION.defaultLayoutTemplateId);\n\n    return layoutItem.layout;\n  }\n\n  static getLayoutName(layout: IViewLayout): string {\n    const checksum = getLayoutChecksum(layout);\n    const layoutTemplate = RX_VIEW_LAYOUTS.find((item) => item.checksum === checksum);\n\n    return layoutTemplate ? layoutTemplate.label : '';\n  }\n\n  static removeChildFromLayout(layout: IViewLayout, guidToRemove: string): IViewLayout {\n    return {\n      outlets: layout.outlets.map((outlet) => ({\n        ...outlet,\n        columns: outlet.columns.map((column) => ({\n          ...column,\n          children: column.children.filter((childGuid) => childGuid !== guidToRemove)\n        }))\n      }))\n    };\n  }\n}\n"]}