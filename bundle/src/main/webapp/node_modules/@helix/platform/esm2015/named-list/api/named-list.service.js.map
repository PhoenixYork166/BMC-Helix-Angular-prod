{"version":3,"file":"named-list.service.js","sourceRoot":"","sources":["../../../../../../libs/platform/named-list/api/named-list.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IDataPageParams, RxLogService, RX_DATA_PAGE } from '@helix/platform/shared/api';\nimport { RxRecordInstanceUtilsService } from '@helix/platform/record/api';\nimport { RxNamedListDataPageService } from './named-list-data-page.service';\nimport { INamedListOption, INamedListOptionPage, NamedListTypeAheadOption } from './named-list.types';\nimport { INamedListDefinition } from './named-list-definition.types';\nimport { chain, has, isEmpty, isString } from 'lodash';\nimport { RX_NAMED_LIST_DEFINITION } from './named-list-definition.constant';\nimport { RX_EXPRESSION_EVALUATOR } from '@helix/platform/view/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxNamedListService {\n  constructor(\n    private rxNamedListDataPageService: RxNamedListDataPageService,\n    private rxRecordInstanceUtilsService: RxRecordInstanceUtilsService,\n    private rxLogService: RxLogService\n  ) {}\n\n  getOptionPage(\n    namedListDefinition: INamedListDefinition,\n    searchQuery: string,\n    queryCriteria: string = null,\n    startIndex = 0,\n    pageSize = RX_DATA_PAGE.defaultPageSize\n  ): Observable<INamedListOptionPage> {\n    return this.getOptionPageByFieldIds(\n      namedListDefinition,\n      searchQuery,\n      [namedListDefinition.labelFieldId],\n      queryCriteria,\n      startIndex,\n      pageSize\n    );\n  }\n\n  getOptionPageByLabelOrValue(\n    namedListDefinition: INamedListDefinition,\n    searchQuery: string,\n    queryCriteria: string = null,\n    startIndex = 0,\n    pageSize = RX_DATA_PAGE.defaultPageSize\n  ): Observable<INamedListOptionPage> {\n    return this.getOptionPageByFieldIds(\n      namedListDefinition,\n      searchQuery,\n      [namedListDefinition.labelFieldId, namedListDefinition.valueFieldId],\n      queryCriteria,\n      startIndex,\n      pageSize\n    );\n  }\n\n  private getOptionPageByFieldIds(\n    namedListDefinition: INamedListDefinition,\n    searchQuery: string,\n    fieldIds: number[],\n    queryCriteria: string,\n    startIndex,\n    pageSize\n  ): Observable<INamedListOptionPage> {\n    if (queryCriteria?.includes(RX_EXPRESSION_EVALUATOR.operands.undefined)) {\n      this.rxLogService.debug(`Query criteria expression contains undefined operands: ${queryCriteria}`);\n\n      return of({ options: [], totalSize: 0 });\n    }\n\n    const params: IDataPageParams = {\n      namedlistdefinition: namedListDefinition.name,\n      pageSize,\n      startIndex\n    };\n\n    const startingWildcard = [\n      RX_NAMED_LIST_DEFINITION.searchBehaviorTypes.startsWith,\n      RX_NAMED_LIST_DEFINITION.searchBehaviorTypes.exactMatch\n    ].includes(namedListDefinition.searchBehavior)\n      ? ''\n      : '%';\n\n    const endingWildcard =\n      namedListDefinition.searchBehavior === RX_NAMED_LIST_DEFINITION.searchBehaviorTypes.exactMatch ? '' : '%';\n\n    const matchingOperator =\n      namedListDefinition.searchBehavior === RX_NAMED_LIST_DEFINITION.searchBehaviorTypes.exactMatch ? '=' : 'LIKE';\n\n    const searchableFieldIds = chain(namedListDefinition.fields)\n      .filter((field) => field.searchable as boolean)\n      .map((field) => Number(field.id))\n      .concat(fieldIds)\n      .uniq()\n      .value();\n\n    const searchQueryCriteria = searchQuery\n      ? searchableFieldIds\n          .map((fieldId) => {\n            const escapedSearchQuery = this.rxRecordInstanceUtilsService.escapeTextWildcards(searchQuery);\n\n            return `('${fieldId}' ${matchingOperator} \"${startingWildcard}${escapedSearchQuery}${endingWildcard}\")`;\n          })\n          .join(' OR ')\n      : null;\n\n    const additionalQueryCriteria =\n      searchQueryCriteria && queryCriteria\n        ? `(${searchQueryCriteria}) AND (${queryCriteria})`\n        : searchQueryCriteria || queryCriteria;\n\n    if (additionalQueryCriteria) {\n      params.additionalQueryCriteria = `(${additionalQueryCriteria})`;\n    }\n\n    return this.rxNamedListDataPageService\n      .post({\n        params\n      })\n      .pipe(\n        map((result) => ({\n          options: result.data.map((item) => {\n            // We are still getting all the keys in the response despite disabling the feature flag 'DRD21-43103'.\n            if (Object.keys(item).length === 1) {\n              const displayValue = Object.keys(item)[0];\n\n              return {\n                displayValue,\n                value: item[displayValue],\n                title: '',\n                contextualFields: []\n              };\n            } else {\n              const contextualFields = namedListDefinition.fields\n                .filter((field) => field.visible)\n                .map((field) => item[field.id]);\n\n              return {\n                displayValue: item[namedListDefinition.labelFieldId],\n                value: item[namedListDefinition.valueFieldId],\n                title: contextualFields.join(' / '),\n                contextualFields\n              };\n            }\n          }),\n          totalSize: result.totalSize\n        }))\n      );\n  }\n\n  getOptionsForValues(\n    namedListDefinition: INamedListDefinition,\n    optionValues: string[]\n  ): Observable<INamedListOption[]> {\n    if (optionValues.length) {\n      const params: IDataPageParams = {\n        namedlistdefinition: namedListDefinition.name,\n        pageSize: -1,\n        startIndex: 0\n      };\n\n      params.additionalQueryCriteria = optionValues\n        .map((value) => `'${namedListDefinition.valueFieldId}'=\"${value.replace(/\"/g, '\"\"')}\"`)\n        .join(' OR ');\n\n      return this.rxNamedListDataPageService\n        .post({\n          params\n        })\n        .pipe(\n          map((result) =>\n            result.data.map((item) => {\n              const displayValue = Object.keys(item)[0];\n\n              return {\n                displayValue,\n                value: item[displayValue],\n                title: '',\n                contextualFields: []\n              };\n            })\n          )\n        );\n    } else {\n      return of([]);\n    }\n  }\n\n  isNamedListOption(namedListTypeAheadOption: NamedListTypeAheadOption): boolean {\n    return has(namedListTypeAheadOption, 'value');\n  }\n\n  getNamesFromTypeAheadOptions(namedListTypeAheadOptions: NamedListTypeAheadOption[]): string[] {\n    if (!isEmpty(namedListTypeAheadOptions)) {\n      return isString(namedListTypeAheadOptions[0])\n        ? (namedListTypeAheadOptions as string[])\n        : namedListTypeAheadOptions.map(\n            (filterValue: NamedListTypeAheadOption) => (<INamedListOption>filterValue).value\n          );\n    }\n\n    return [];\n  }\n}\n"]}