{"version":3,"file":"ipaas-base-configuration.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/admin/components/ipaas/ipaas-base-configuration/ipaas-base-configuration.component.ts","../../../../../../../../libs/platform/admin/components/ipaas/ipaas-base-configuration/ipaas-base-configuration.component.html"],"names":[],"mappings":"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","sourcesContent":["import { AfterContentInit, Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable, Subscription, throwError } from 'rxjs';\nimport { catchError, switchMap, tap } from 'rxjs/operators';\nimport { find, forEach, get, isFunction, map, values } from 'lodash';\nimport { ConnectionTestStatus } from '@helix/platform/ui-kit';\nimport {\n  IAdminComponentSetting,\n  IAdminComponentSettings,\n  RxAdminSettingsService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport { RxCognitiveServiceService } from '../../cognitive-service/cognitive-service.service';\nimport { IIpaasBaseConfig } from './ipaas-base-configuration.types';\n\n@Component({\n  selector: 'rx-ipaas-base-configuration',\n  templateUrl: './ipaas-base-configuration.component.html'\n})\nexport class IpaasBaseConfigurationComponent implements AfterContentInit {\n  @Input()\n  ipaasConfig: IIpaasBaseConfig;\n\n  @Input()\n  childFormGroup: FormGroup;\n\n  busy: Subscription;\n  connectionTestStatus: ConnectionTestStatus = ConnectionTestStatus.Invalid;\n\n  private componentSettings: IAdminComponentSetting[];\n  private isNewIpaasConfiguration: boolean;\n\n  constructor(\n    private rxAdminSettingsService: RxAdminSettingsService,\n    private rxCognitiveServiceService: RxCognitiveServiceService,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService\n  ) {}\n\n  ngAfterContentInit(): void {\n    this.busy = this.getComponentSettings()\n      .pipe(\n        tap((componentSettings: IAdminComponentSettings) => {\n          this.isNewIpaasConfiguration = !get(componentSettings, 'values', []).length;\n\n          if (this.isNewIpaasConfiguration) {\n            this.componentSettings = map(values(this.ipaasConfig.settingNames), (settingName: string) => ({\n              assigneeGroupPermission: null,\n              componentName: this.ipaasConfig.componentName,\n              settingId: null,\n              settingName,\n              settingValue: null,\n              ownerKeyValue1: null\n            }));\n          } else {\n            this.componentSettings = componentSettings.values;\n            this.updateConfigFormValues();\n          }\n        })\n      )\n      .subscribe();\n\n    this.childFormGroup.valueChanges\n      .pipe(\n        tap(() => {\n          this.connectionTestStatus =\n            this.childFormGroup.pristine || this.childFormGroup.invalid\n              ? ConnectionTestStatus.Invalid\n              : ConnectionTestStatus.Unknown;\n        })\n      )\n      .subscribe();\n  }\n\n  updateConfigFormValues(): void {\n    const savedValues = {};\n\n    forEach(\n      this.ipaasConfig.controlsConfig,\n      (fieldValue, fieldName) => (savedValues[fieldName] = this.getValueFromSetting(fieldName))\n    );\n\n    if (isFunction(this.ipaasConfig.getFormValues)) {\n      this.childFormGroup.patchValue(this.ipaasConfig.getFormValues(savedValues));\n    } else {\n      this.childFormGroup.patchValue(savedValues);\n    }\n  }\n\n  onTestConnection(): void {\n    this.rxCognitiveServiceService\n      .testConnection({\n        resourceType: this.ipaasConfig.resourceType,\n        ...this.ipaasConfig.getPayload(this.childFormGroup.getRawValue())\n      })\n      .pipe(\n        catchError((error: HttpErrorResponse) => {\n          this.connectionTestStatus = ConnectionTestStatus.Failed;\n\n          return throwError(error);\n        })\n      )\n      .subscribe(() => {\n        this.connectionTestStatus = ConnectionTestStatus.Passed;\n      });\n  }\n\n  save(): void {\n    if (this.childFormGroup.valid && this.connectionTestStatus === ConnectionTestStatus.Passed) {\n      let adminSetting$: Observable<any>;\n\n      const payload = this.ipaasConfig.getPayload(this.childFormGroup.getRawValue());\n\n      forEach(payload, (settingValue, settingName) => this.setSettingValue(settingName, settingValue));\n\n      if (this.isNewIpaasConfiguration) {\n        adminSetting$ = this.rxAdminSettingsService.createComponentSettings(\n          this.ipaasConfig.componentName,\n          this.componentSettings,\n          {\n            'default-bundle-scope': this.ipaasConfig.bundleScope\n          }\n        );\n      } else {\n        adminSetting$ = this.rxAdminSettingsService.updateComponentSettings(\n          `${this.ipaasConfig.componentName}/${this.componentSettings[0].ownerKeyValue1}`,\n          this.componentSettings,\n          {\n            'default-bundle-scope': this.ipaasConfig.bundleScope\n          }\n        );\n      }\n\n      this.busy = adminSetting$\n        .pipe(\n          tap(() => {\n            this.rxNotificationService.addSuccessMessage(\n              this.translateService.instant(this.ipaasConfig.saveMessageKey)\n            );\n\n            this.connectionTestStatus = ConnectionTestStatus.Invalid;\n            this.childFormGroup.markAsPristine();\n          }),\n          switchMap(() => this.getComponentSettings()),\n          tap((response) => {\n            this.isNewIpaasConfiguration = false;\n            this.componentSettings = response.values;\n            this.updateConfigFormValues();\n          })\n        )\n        .subscribe();\n    }\n  }\n\n  isSaveButtonDisabled(): boolean {\n    return (\n      this.childFormGroup.pristine ||\n      this.childFormGroup.invalid ||\n      this.connectionTestStatus !== ConnectionTestStatus.Passed\n    );\n  }\n\n  private getComponentSettings(): Observable<IAdminComponentSettings> {\n    return this.rxAdminSettingsService.getComponentSettings(this.ipaasConfig.componentName, {\n      'default-bundle-scope': this.ipaasConfig.bundleScope\n    });\n  }\n\n  private setSettingValue(settingName: string, value: string): void {\n    find(this.componentSettings, {\n      settingName\n    }).settingValue = value;\n  }\n\n  private getValueFromSetting(settingName: string): string {\n    return get(\n      find(this.componentSettings, {\n        settingName\n      }),\n      'settingValue',\n      null\n    );\n  }\n}\n","<rx-admin-settings [header]=\"ipaasConfig.titleKey | translate\" [busy]=\"busy\">\n  <ng-content> </ng-content>\n\n  <rx-connection-tester\n    class=\"d-block form-group\"\n    buttonType=\"secondary\"\n    [status]=\"connectionTestStatus\"\n    (testConnection)=\"onTestConnection()\"\n    rx-id=\"ipaas-configuration-test-button\"\n  ></rx-connection-tester>\n\n  <div class=\"align-items-baseline\">\n    <button\n      type=\"button\"\n      adapt-button\n      btn-type=\"primary\"\n      [disabled]=\"isSaveButtonDisabled()\"\n      (click)=\"save()\"\n      rx-id=\"save-button\"\n      class=\"mt-3\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n  </div>\n</rx-admin-settings>\n"]}