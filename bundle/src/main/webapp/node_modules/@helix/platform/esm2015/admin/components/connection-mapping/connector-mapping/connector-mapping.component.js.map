{"version":3,"file":"connector-mapping.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/admin/components/connection-mapping/connector-mapping/connector-mapping.component.ts","../../../../../../../../libs/platform/admin/components/connection-mapping/connector-mapping/connector-mapping.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { RxRecordInstanceDataPageService } from '@helix/platform/record/api';\nimport { IDataPageParams, IDataPageResult, IPlainObject } from '@helix/platform/shared/api';\nimport { get, uniqBy, values } from 'lodash';\nimport { forkJoin, Observable, Subscription } from 'rxjs';\nimport { RX_CONNECTION_MAPPING } from '../common/connection-mapping.constant';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-connector-mapping',\n  templateUrl: './connector-mapping.component.html'\n})\nexport class ConnectorMappingAdminComponent implements OnInit {\n  mappingSelectOptions: RxSelectOption[] = [];\n  selectedMapping: RxSelectOption;\n  mappingList: IPlainObject[];\n  configurationList: IPlainObject[];\n  busy: Subscription;\n  constructor(\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit() {\n    this.busy = this.getRecordInstanceDataPage({\n      recorddefinition: RX_CONNECTION_MAPPING.aliasMapping.recordDefinitionName,\n      queryExpression: `'${RX_CONNECTION_MAPPING.aliasMapping.fields.aliasType}'!=\"email\"`,\n      propertySelection: values(RX_CONNECTION_MAPPING.aliasMapping.fields).join()\n    }).subscribe((response) => {\n      this.mappingSelectOptions = uniqBy(response.data, RX_CONNECTION_MAPPING.aliasMapping.fields.applicationId);\n    });\n  }\n\n  optionFormatter(application: RxSelectOption): string {\n    return application[RX_CONNECTION_MAPPING.aliasMapping.fields.applicationName];\n  }\n\n  private getRecordInstanceDataPage(params: IDataPageParams): Observable<IDataPageResult> {\n    return this.rxRecordInstanceDataPageService.post({ params });\n  }\n\n  onApplicationChange(selectedApplication: RxSelectOption): void {\n    const applicationId = get(selectedApplication, `0.${RX_CONNECTION_MAPPING.aliasMapping.fields.applicationId}`);\n\n    if (applicationId) {\n      forkJoin({\n        configurationList: this.getRecordInstanceDataPage({\n          recorddefinition: RX_CONNECTION_MAPPING.connector.recordDefinitionName,\n          propertySelection: values(RX_CONNECTION_MAPPING.connector.fields).join()\n        }),\n        applicationMappingList: this.getRecordInstanceDataPage({\n          recorddefinition: RX_CONNECTION_MAPPING.aliasMapping.recordDefinitionName,\n          propertySelection: values(RX_CONNECTION_MAPPING.aliasMapping.fields).join(),\n          queryExpression:\n            `(('${RX_CONNECTION_MAPPING.aliasMapping.fields.applicationId}'=\"${applicationId}\" AND ` +\n            `'${RX_CONNECTION_MAPPING.aliasMapping.fields.aliasType}'=\"${RX_CONNECTION_MAPPING.aliasTypes.connector}\"))`\n        })\n      }).subscribe((result) => {\n        this.configurationList = result.configurationList.data;\n        this.mappingList = result.applicationMappingList.data;\n      });\n    }\n  }\n}\n","<rx-admin-settings\n  header=\"{{ 'com.bmc.arsys.rx.client.admin.connection-mapping.connector-mapping.header.title' | translate }}\"\n  [busy]=\"busy\"\n>\n  <div class=\"row\">\n    <adapt-rx-select\n      class=\"col-md-6 form-group\"\n      rx-id=\"application\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.connection-mapping.connector-mapping.application.label' | translate }}\"\n      [ngModel]=\"selectedMapping\"\n      [options]=\"mappingSelectOptions\"\n      [optionFormatter]=\"optionFormatter\"\n      (ngModelChange)=\"onApplicationChange($event)\"\n    ></adapt-rx-select>\n  </div>\n\n  <rx-connection-mapping\n    *ngFor=\"let mapping of mappingList\"\n    [configurations]=\"configurationList\"\n    [aliasMapping]=\"mapping\"\n    aliasType=\"connector\"\n  >\n  </rx-connection-mapping>\n</rx-admin-settings>\n"]}