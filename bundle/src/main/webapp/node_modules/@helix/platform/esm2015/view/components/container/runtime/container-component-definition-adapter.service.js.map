{"version":3,"file":"container-component-definition-adapter.service.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/components/container/runtime/container-component-definition-adapter.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAC5D,OAAO,EAGL,mBAAmB,EACnB,6BAA6B,EAC9B,MAAM,0BAA0B,CAAC;;;;AAKlC,MAAM,OAAO,0CAA0C;IAIrD,YACU,2BAA0D,EAC1D,mBAAwC;QADxC,gCAA2B,GAA3B,2BAA2B,CAA+B;QAC1D,wBAAmB,GAAnB,mBAAmB,CAAqB;QAJxC,4BAAuB,GAAG,mBAAmB,CAAC,SAAS,CAAC;IAK/D,CAAC;IAEJ,2DAA2D;IAC3D,eAAe,CAAC,4BAA+D;QAC7E,IAAI,CAAC,2BAA2B;aAC7B,aAAa,CAAC,4BAA4B,CAAC;aAC3C,MAAM,CAAC,CAAC,aAAa,EAAE,EAAE,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,KAAK,IAAI,CAAC,uBAAuB,CAAC;aAClG,GAAG,CAAC,CAAC,aAAa,EAAE,EAAE,CAAC,aAAa,CAAC,mBAAwD,CAAC;aAC9F,OAAO,CAAC,CAAC,mBAAmB,EAAE,EAAE;YAC/B,IAAI,mBAAmB,CAAC,MAAM,EAAE;gBAC9B,IAAI,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;gBAE/E,IAAI,MAAM,IAAI,MAAM,CAAC,qBAAqB,EAAE;oBAC1C,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;wBAC5C,MAAM,OAAO,GAAG,mBAAmB,CAAC,gBAAgB,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrE,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;wBACrC,MAAM,WAAW,GAAG,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,OAAO,UAAU,EAAE,CAAC,CAAC,CAAC,OAAO,OAAO,IAAI,UAAU,EAAE,CAAC;wBAC5F,MAAM,iBAAiB,GAAG,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,SAAS,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;wBAErE,OAAO;4BACL,QAAQ,EAAE,GAAG,WAAW,IAAI,iBAAiB,EAAE;4BAC/C,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,qBAAqB,CAAC;yBACtE,CAAC;oBACJ,CAAC,CAAC,CAAC;oBAEH,MAAM,GAAG;wBACP,OAAO,EAAE;4BACP;gCACE,IAAI,EAAE,SAAS;gCACf,OAAO,EAAE,OAAO;6BACjB;yBACF;qBACF,CAAC;oBAEF,mBAAmB,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;iBACrD;qBAAM,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE;oBACnC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;wBAChC,MAAM,CAAC,OAAO;6BACX,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;6BACpC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;4BAClB,MAAM,OAAO,GAAG,mBAAmB,CAAC,gBAAgB,CAAC,OAAO,IAAI,IAAI,CAAC;4BACrE,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;4BACrC,MAAM,WAAW,GAAG,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,OAAO,UAAU,EAAE,CAAC,CAAC,CAAC,OAAO,OAAO,IAAI,UAAU,EAAE,CAAC;4BAC5F,MAAM,iBAAiB,GAAG,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,SAAS,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;4BAErE,MAAM,CAAC,QAAQ,GAAG,GAAG,WAAW,IAAI,iBAAiB,EAAE,CAAC;wBAC1D,CAAC,CAAC,CAAC;oBACP,CAAC,CAAC,CAAC;oBAEH,mBAAmB,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;iBACrD;aACF;QACH,CAAC,CAAC,CAAC;IACP,CAAC;;uIA5DU,0CAA0C;2IAA1C,0CAA0C,cAFzC,MAAM;2FAEP,0CAA0C;kBAHtD,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { IDefinitionAdapter } from '@helix/platform/shared/api';\nimport { RxJsonParserService } from '@helix/platform/utils';\nimport {\n  IContainerViewComponentDefinition,\n  IViewDefinition,\n  RxViewComponentType,\n  RxViewDefinitionParserService\n} from '@helix/platform/view/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContainerComponentDefinitionAdapterService\n  implements IDefinitionAdapter<IContainerViewComponentDefinition, IViewDefinition> {\n  protected componentDefinitionType = RxViewComponentType.Container;\n\n  constructor(\n    private viewDefinitionParserService: RxViewDefinitionParserService,\n    private rxJsonParserService: RxJsonParserService\n  ) {}\n\n  // converting layout of old view definition into new format\n  adaptDefinition(containerComponentDefinition: IContainerViewComponentDefinition) {\n    this.viewDefinitionParserService\n      .getComponents(containerComponentDefinition)\n      .filter((componentPair) => componentPair.componentDefinition.type === this.componentDefinitionType)\n      .map((componentPair) => componentPair.componentDefinition as IContainerViewComponentDefinition)\n      .forEach((componentDefinition) => {\n        if (componentDefinition.layout) {\n          let layout = this.rxJsonParserService.tryParseJson(componentDefinition.layout);\n\n          if (layout && layout.componentDefinitionId) {\n            const columns = layout.columns.map((column) => {\n              const rowWrap = componentDefinition.propertiesByName.rowWrap || 'sm';\n              const columnSpan = column.span || 12;\n              const columnClass = rowWrap === 'xs' ? `col-${columnSpan}` : `col-${rowWrap}-${columnSpan}`;\n              const marginBottomClass = rowWrap !== 'xs' ? `rx-mb-${rowWrap}` : '';\n\n              return {\n                cssClass: `${columnClass} ${marginBottomClass}`,\n                children: column.children.map((child) => child.componentDefinitionId)\n              };\n            });\n\n            layout = {\n              outlets: [\n                {\n                  name: 'DEFAULT',\n                  columns: columns\n                }\n              ]\n            };\n\n            componentDefinition.layout = JSON.stringify(layout);\n          } else if (layout && layout.outlets) {\n            layout.outlets.forEach((outlet) => {\n              outlet.columns\n                .filter((column) => !column.cssClass)\n                .forEach((column) => {\n                  const rowWrap = componentDefinition.propertiesByName.rowWrap || 'sm';\n                  const columnSpan = column.span || 12;\n                  const columnClass = rowWrap === 'xs' ? `col-${columnSpan}` : `col-${rowWrap}-${columnSpan}`;\n                  const marginBottomClass = rowWrap !== 'xs' ? `rx-mb-${rowWrap}` : '';\n\n                  column.cssClass = `${columnClass} ${marginBottomClass}`;\n                });\n            });\n\n            componentDefinition.layout = JSON.stringify(layout);\n          }\n        }\n      });\n  }\n}\n"]}