{"version":3,"file":"cognitive-service-summarization.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/admin/components/cognitive-service/components/summarization/cognitive-service-summarization.component.ts","../../../../../../../../../libs/platform/admin/components/cognitive-service/components/summarization/cognitive-service-summarization.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {\n  IUserOverlayGroupDescriptorChildren,\n  RX_OVERLAY,\n  RxCurrentUserService,\n  RxNotificationService,\n  RxSystemConfigurationService\n} from '@helix/platform/shared/api';\nimport { ConnectionTestStatus } from '@helix/platform/ui-kit';\nimport { mapValues } from 'lodash';\nimport { throwError, Observable, EMPTY } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { RX_COGNITIVE_SERVICE } from '../../cognitive-service.constant';\nimport { RxCognitiveServiceService } from '../../cognitive-service.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-cognitive-service-summarization',\n  templateUrl: './cognitive-service-summarization.component.html',\n  styleUrls: ['./cognitive-service-summarization.component.scss']\n})\nexport class CognitiveServiceSummarizationComponent implements OnInit {\n  @Input()\n  isAdministrator: boolean;\n\n  @Input()\n  currentOverlayContext: IUserOverlayGroupDescriptorChildren;\n\n  summarizationConfigurationForm: FormGroup;\n  connectionTestStatus: ConnectionTestStatus = ConnectionTestStatus.Invalid;\n  isAdministratorOverlayConfigured: boolean;\n  isSummarizationServiceConfigured: boolean;\n\n  constructor(\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxCognitiveServiceService: RxCognitiveServiceService,\n    private rxNotificationService: RxNotificationService,\n    private rxSystemConfigurationService: RxSystemConfigurationService,\n    private formBuilder: FormBuilder,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit() {\n    this.isAdministratorOverlayConfigured =\n      this.isAdministrator &&\n      this.currentOverlayContext.overlayGroupId !== RX_OVERLAY.overlayGroupIds.base &&\n      !this.currentOverlayContext.isShared;\n\n    this.testConnection()\n      .pipe(\n        catchError((error: HttpErrorResponse) => {\n          this.isSummarizationServiceConfigured = false;\n\n          return EMPTY;\n        })\n      )\n      .subscribe(() => {\n        this.isSummarizationServiceConfigured = true;\n      });\n\n    this.summarizationConfigurationForm = this.formBuilder.group({\n      enableSummarization: { value: 0, disabled: this.isEnableSummarizationCheckboxDisabled() },\n      summarizationPercentage: ''\n    });\n\n    this.loadSystemSettings();\n  }\n\n  isFormDirty(): boolean {\n    return this.summarizationConfigurationForm.dirty;\n  }\n\n  private loadSystemSettings(): void {\n    this.rxSystemConfigurationService\n      .getConfiguration(RX_COGNITIVE_SERVICE.summarization.systemSettingsKey)\n      .subscribe((settingsData) => {\n        const summarizationData = JSON.parse(settingsData.value as string);\n\n        this.summarizationConfigurationForm.setValue(summarizationData);\n      });\n  }\n\n  save(): void {\n    const formValue = this.summarizationConfigurationForm.getRawValue();\n\n    formValue.enableSummarization = formValue.enableSummarization ? 1 : 0;\n    const configurations = mapValues(formValue, (value) => value);\n\n    this.rxSystemConfigurationService\n      .setConfiguration(RX_COGNITIVE_SERVICE.summarization.systemSettingsKey, JSON.stringify(configurations))\n      .subscribe(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant(RX_COGNITIVE_SERVICE.notificationMessages.summarizationConfigurationSaved)\n        );\n\n        this.connectionTestStatus = ConnectionTestStatus.Invalid;\n        this.summarizationConfigurationForm.markAsPristine();\n      });\n  }\n\n  isSaveButtonDisabled(): boolean {\n    return !this.summarizationConfigurationForm.controls.enableSummarization.value &&\n      this.summarizationConfigurationForm.dirty\n      ? false\n      : this.connectionTestStatus !== ConnectionTestStatus.Passed;\n  }\n\n  isEnableSummarizationCheckboxDisabled(): boolean {\n    return !(\n      this.rxCurrentUserService.isAdministrator() &&\n      this.currentOverlayContext.overlayGroupId !== RX_OVERLAY.overlayGroupIds.base &&\n      !this.currentOverlayContext.isShared\n    );\n  }\n\n  private isConnectionTestStatusInvalid(): boolean {\n    return (\n      !this.isAdministratorOverlayConfigured ||\n      this.summarizationConfigurationForm.invalid ||\n      this.summarizationConfigurationForm.pristine ||\n      !this.summarizationConfigurationForm.controls.enableSummarization.value\n    );\n  }\n\n  resetConnectionTest(): void {\n    this.connectionTestStatus = this.isConnectionTestStatusInvalid()\n      ? ConnectionTestStatus.Invalid\n      : ConnectionTestStatus.Unknown;\n\n    if (this.summarizationConfigurationForm.controls.enableSummarization.value) {\n      this.summarizationConfigurationForm.get('summarizationPercentage').enable();\n    } else {\n      this.summarizationConfigurationForm.get('summarizationPercentage').disable();\n    }\n  }\n\n  private testConnection(): Observable<any> {\n    return this.rxCognitiveServiceService.testConnection({\n      resourceType: 'com.bmc.arsys.rx.application.cognitive.command.PingSummarizationServiceCommand'\n    });\n  }\n\n  onTestConnection(): void {\n    this.testConnection()\n      .pipe(\n        catchError((error: HttpErrorResponse) => {\n          this.connectionTestStatus = ConnectionTestStatus.Failed;\n\n          return throwError(error);\n        })\n      )\n      .subscribe(() => {\n        this.connectionTestStatus = ConnectionTestStatus.Passed;\n      });\n  }\n}\n","<adapt-alert\n  *ngIf=\"isSummarizationServiceConfigured === false\"\n  [config]=\"{ content: 'Summarization service has not been configured.', type: 'inline', variant: 'warning' }\"\n></adapt-alert>\n\n<form [formGroup]=\"summarizationConfigurationForm\" *ngIf=\"isSummarizationServiceConfigured\">\n  <adapt-accordion rx-id=\"accordion-summarization-configuration\">\n    <adapt-accordion-tab\n      title=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-service.summarization.title' | translate }}\"\n    >\n      <adapt-rx-switch\n        class=\"form-group\"\n        rx-id=\"enable-summarization-service\"\n        formControlName=\"enableSummarization\"\n        label=\"Enable summarization service\"\n        (ngModelChange)=\"resetConnectionTest()\"\n      ></adapt-rx-switch>\n\n      <adapt-rx-counter\n        class=\"d-block form-group\"\n        adaptRange\n        rx-id=\"summarization-percentage\"\n        [min]=\"1\"\n        [max]=\"50\"\n        label=\"Summarization %\"\n        required=\"true\"\n        [formControl]=\"summarizationConfigurationForm.controls.summarizationPercentage\"\n        [step]=\"1\"\n        [tooltip]=\"{\n          iconName: 'question_circle_o',\n          content: 'com.bmc.arsys.rx.client.admin.cognitive-service.summarization.percentage.tooltip' | translate,\n          placement: 'right',\n          popoverMode: true\n        }\"\n        (ngModelChange)=\"resetConnectionTest()\"\n      ></adapt-rx-counter>\n\n      <rx-connection-tester\n        class=\"mt-1\"\n        *ngIf=\"isAdministrator\"\n        [status]=\"connectionTestStatus\"\n        (testConnection)=\"onTestConnection()\"\n      ></rx-connection-tester>\n    </adapt-accordion-tab>\n\n    <button\n      adapt-button\n      rx-id=\"save-button\"\n      btn-type=\"primary\"\n      class=\"mt-4\"\n      [disabled]=\"isSaveButtonDisabled()\"\n      *ngIf=\"isAdministratorOverlayConfigured\"\n      (click)=\"save()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n  </adapt-accordion>\n</form>\n"]}