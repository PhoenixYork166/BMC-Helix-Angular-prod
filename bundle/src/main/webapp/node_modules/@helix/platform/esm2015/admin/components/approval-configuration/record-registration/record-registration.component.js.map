{"version":3,"file":"record-registration.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/admin/components/approval-configuration/record-registration/record-registration.component.ts","../../../../../../../../libs/platform/admin/components/approval-configuration/record-registration/record-registration.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAqB,MAAM,EAAE,MAAM,eAAe,CAAC;AAC7G,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AACvD,OAAO,EAAE,WAAW,EAAa,UAAU,EAAE,MAAM,gBAAgB,CAAC;AACpE,OAAO,EAAE,8BAA8B,EAAE,MAAM,mCAAmC,CAAC;AACnF,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AACzC,OAAO,EAIL,oBAAoB,EACpB,8BAA8B,EAC9B,+BAA+B,EAChC,MAAM,4BAA4B,CAAC;AACpC,OAAO,EAEL,uBAAuB,EACvB,sBAAsB,EACvB,MAAM,mCAAmC,CAAC;AAC3C,OAAO,EAAE,yBAAyB,EAAE,MAAM,oCAAoC,CAAC;AAE/E,OAAO,EAAE,eAAe,EAAE,aAAa,EAAE,QAAQ,EAAc,EAAE,EAAE,aAAa,EAAE,MAAM,MAAM,CAAC;AAC/F,OAAO,EAEL,wBAAwB,EACxB,uBAAuB,EACvB,qBAAqB,EACtB,MAAM,4BAA4B,CAAC;AAMpC,OAAO,EAAE,8BAA8B,EAAE,MAAM,2DAA2D,CAAC;AAC3G,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AACrE,OAAO,EAAE,wBAAwB,EAAE,MAAM,iCAAiC,CAAC;;;;;;;;;;;;;AAM3E,MAAM,OAAO,2BAA2B;IA2ItC,YACU,WAAwB,EACxB,cAAiC,EACjC,gBAAkC,EAClC,uBAAgD,EAChD,8BAA8D,EAC9D,8BAA8D,EAC9D,+BAAgE,EAChE,qBAA4C,EAC5C,wBAAkD,EAClD,8BAA8D;QAT9D,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAmB;QACjC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,mCAA8B,GAA9B,8BAA8B,CAAgC;QAC9D,mCAA8B,GAA9B,8BAA8B,CAAgC;QAC9D,oCAA+B,GAA/B,+BAA+B,CAAiC;QAChE,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,mCAA8B,GAA9B,8BAA8B,CAAgC;QA7IxE,qBAAgB,GAAG,IAAI,YAAY,EAAU,CAAC;QAE9C,2BAAsB,GAAc,IAAI,CAAC,4BAA4B,EAAE,CAAC;QAExE,mCAA8B,GAAqB,EAAE,CAAC;QACtD,eAAU,GAAa,EAAE,CAAC;QAClB,qBAAgB,GAAG,KAAK,CAAC;QAEjC,gBAAW,GAAU;YACnB,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,yEAAyE,CAAC;YACjH,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,MAAM;SAChB,CAAC;QAEF,kCAA6B,GAAsC;YACjE,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,kEAAkE,CAAC;YACxG,cAAc,EAAE,sBAAsB,CAAC,uBAAuB;YAC9D,QAAQ,EAAE,IAAI;YACd,+BAA+B,EAAE;gBAC/B,uBAAuB,EAAE,CAAC,uBAAuB,CAAC,EAAE,CAAC;gBACrD,MAAM,EAAE,uBAAuB,CAAC,EAAE;aACnC;SACF,CAAC;QAEF,sBAAiB,GAA+B;YAC9C,WAAW,EAAE,IAAI;YACjB,QAAQ,EAAE,mBAAmB;YAC7B,SAAS,EAAE,OAAO;YAClB,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,2EAA2E,CAAC;SACpH,CAAC;QAEF,yBAAoB,GAA+B;YACjD,WAAW,EAAE,IAAI;YACjB,QAAQ,EAAE,mBAAmB;YAC7B,SAAS,EAAE,OAAO;YAClB,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,wDAAwD,CAAC;SACjG,CAAC;QAEM,0BAAqB,GAAG,IAAI,eAAe,CAAS,EAAE,CAAC,CAAC;QAExD,gBAAW,GAAgC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAChF,SAAS,CAAC,CAAC,oBAAoB,EAAE,EAAE;YACjC,OAAO,oBAAoB,CAAC,CAAC,CAAC,IAAI,CAAC,8BAA8B,CAAC,eAAe,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACnH,CAAC,CAAC,CACH,CAAC;QAEF,2CAAsC,GAAuD,aAAa,CAAC;YACzG,IAAI,CAAC,qBAAqB;YAC1B,IAAI,CAAC,WAAW;SACjB,CAAC,CAAC,IAAI,CACL,GAAG,CACD,CAAC,CAAC,oBAAoB,EAAE,UAAU,CAAC,EAAE,EAAE,CACrC,CAAC;YACC,oBAAoB,EAAE,oBAAoB;YAC1C,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,iEAAiE,CAAC;YACvG,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACpC,yEAAyE,CAC1E;YACD,UAAU,EAAE,UAAU;SACoB,CAAA,CAC/C,CACF,CAAC;QAEF,mDAA8C,GAAuD,aAAa,CAAC;YACjH,IAAI,CAAC,qBAAqB;YAC1B,IAAI,CAAC,WAAW;SACjB,CAAC,CAAC,IAAI,CACL,GAAG,CACD,CAAC,CAAC,oBAAoB,EAAE,UAAU,CAAC,EAAE,EAAE,CACrC,CAAC;YACC,oBAAoB;YACpB,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAClC,gFAAgF,CACjF;YACD,QAAQ,EAAE,KAAK;YACf,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACpC,kFAAkF,CACnF;YACD,UAAU,EAAE,UAAU;SACoB,CAAA,CAC/C,CACF,CAAC;QAEF,yCAAoC,GAAuD,aAAa,CAAC;YACvG,IAAI,CAAC,qBAAqB;YAC1B,IAAI,CAAC,WAAW;SACjB,CAAC,CAAC,IAAI,CACL,GAAG,CACD,CAAC,CAAC,oBAAoB,EAAE,UAAU,CAAC,EAAE,EAAE,CACrC,CAAC;YACC,oBAAoB,EAAE,oBAAoB;YAC1C,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,+DAA+D,CAAC;YACrG,QAAQ,EAAE,IAAI;YACd,UAAU,EAAE,UAAU;SACoB,CAAA,CAC/C,CACF,CAAC;QAEF,uCAAkC,GAAuD,aAAa,CAAC;YACrG,IAAI,CAAC,qBAAqB;YAC1B,IAAI,CAAC,WAAW;SACjB,CAAC,CAAC,IAAI,CACL,GAAG,CACD,CAAC,CAAC,oBAAoB,EAAE,UAAU,CAAC,EAAE,EAAE,CACrC,CAAC;YACC,oBAAoB,EAAE,oBAAoB;YAC1C,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,6DAA6D,CAAC;YACnG,QAAQ,EAAE,KAAK;YACf,UAAU,EAAE,UAAU;SACoB,CAAA,CAC/C,CACF,CAAC;QAEF,kCAA6B,GAAuD,aAAa,CAAC;YAChG,IAAI,CAAC,qBAAqB;YAC1B,IAAI,CAAC,WAAW;SACjB,CAAC,CAAC,IAAI,CACL,GAAG,CACD,CAAC,CAAC,oBAAoB,EAAE,UAAU,CAAC,EAAE,EAAE,CACrC,CAAC;YACC,oBAAoB,EAAE,oBAAoB;YAC1C,QAAQ,EAAE,KAAK;YACf,UAAU,EAAE,UAAU;SACoB,CAAA,CAC/C,CACF,CAAC;QAEM,eAAU,GAAG,IAAI,aAAa,CAAU,CAAC,CAAC,CAAC;QAC3C,uBAAkB,GAAG,IAAI,CAAC;IAa/B,CAAC;IAEJ,QAAQ;QACN,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,gCAAgC,EAAE,CAAC;SACzC;QAED,IAAI,CAAC,sBAAsB;aACxB,GAAG,CAAC,kBAAkB,CAAC;aACvB,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC7C,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC,CAAC;QAE9D,IAAI,CAAC,sBAAsB;aACxB,GAAG,CAAC,uBAAuB,CAAC;aAC5B,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC7C,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC,CAAC;QAEjF,IAAI,CAAC,sBAAsB;aACxB,GAAG,CAAC,uBAAuB,CAAC;aAC5B,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC7C,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC,CAAC;QAEjF,IAAI,CAAC,sBAAsB;aACxB,GAAG,CAAC,uBAAuB,CAAC;aAC5B,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC7C,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC,CAAC;QAEjF,IAAI,CAAC,sBAAsB;aACxB,GAAG,CAAC,uBAAuB,CAAC;aAC5B,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC7C,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC,CAAC;IACnF,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC7B,CAAC;IAED,4BAA4B;QAC1B,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5B,gBAAgB,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YAC3C,YAAY,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACvC,cAAc,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACzC,sBAAsB,EAAE,IAAI;YAC5B,6BAA6B,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,aAAa,CAAC;YAC7D,cAAc,EAAE,EAAE;YAClB,UAAU,EAAE,EAAE;YACd,sBAAsB,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,aAAa,CAAC;YACtD,qBAAqB,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBAC5C,SAAS,EAAE,KAAK;gBAChB,QAAQ,EAAE,KAAK;aAChB,CAAC;YACF,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;YACnE,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;YACnE,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;YACnE,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;SACpE,CAAC,CAAC;IACL,CAAC;IAED,gCAAgC;QAC9B,QAAQ,CAAC;YACP,IAAI,CAAC,8BAA8B,CAAC,mBAAmB,CAAC,IAAI,CAAC,8BAA8B,CAAC;YAC5F,IAAI,CAAC,8BAA8B,CAAC,0BAA0B,CAAC,IAAI,CAAC,8BAA8B,CAAC;SACpG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,EAAE,EAAE;YACtD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC,kBAAkB,CAAC;YAChE,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;YACzC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;YAClG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,OAAO,EAAE,CAAC;YACnE,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;YAC1F,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;YAC9F,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;YAC9F,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;YACtF,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,CAAC;YAE9G,IAAI,kBAAkB,CAAC,aAAa,EAAE;gBACpC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;aAC7F;YAED,IAAI,kBAAkB,CAAC,aAAa,EAAE;gBACpC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;aAC7F;YAED,IAAI,kBAAkB,CAAC,aAAa,EAAE;gBACpC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;aAC7F;YAED,IAAI,kBAAkB,CAAC,aAAa,EAAE;gBACpC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;aAC7F;YAED,IAAI,CAAC,sBAAsB;iBACxB,GAAG,CAAC,wBAAwB,CAAC;iBAC7B,QAAQ,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAE1G,IAAI,CAAC,sBAAsB;iBACxB,GAAG,CAAC,+BAA+B,CAAC;iBACpC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAExD,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,QAAQ,CAAC;gBAChE,SAAS,EACP,kBAAkB,CAAC,qBAAqB,KAAK,wBAAwB,CAAC,8BAA8B;oBACpG,kBAAkB,CAAC,qBAAqB,KAAK,wBAAwB,CAAC,mBAAmB;gBAC3F,QAAQ,EACN,kBAAkB,CAAC,qBAAqB,KAAK,wBAAwB,CAAC,8BAA8B;oBACpG,kBAAkB,CAAC,qBAAqB,KAAK,wBAAwB,CAAC,oBAAoB;aAC7F,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,0BAA+C;QAC/D,OAAO,0BAA0B,CAAC,6BAA6B,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAC/E,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,aAAa,EAAE,EAAE,CAAC,aAAa,CAAC,EAAE,KAAK,QAAQ,CAAC,CAC5F,CAAC;IACJ,CAAC;IAEO,qBAAqB;QAC3B,OAAO;YACL,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,EAAE;SACV,CAAC;IACJ,CAAC;IAEO,oBAAoB,CAAC,eAAuB,EAAE,KAAa;QACjE,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,6BAA6B,CAAC,EAAE;YAC3D,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAClE;aAAM;YACL,KAAK;gBACH,CAAC,CAAC,IAAI,CAAC,6BAA6B,CAAC,KAAK,EAAE,eAAe,CAAC;gBAC5D,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACnE;IACH,CAAC;IAEO,6BAA6B,CAAC,OAAe,EAAE,eAAuB;QAC5E,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,EAAE;YAC7G,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,wBAAwB,CAAC,uBAA+B;QAC9D,MAAM,uBAAuB,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,gBAAgB,CAAC;QAEnF,IAAI,uBAAuB,KAAK,uBAAuB,EAAE;YACvD,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;YAEzD,IAAI,uBAAuB,EAAE;gBAC3B,IAAI,CAAC,8BAA8B;qBAChC,mBAAmB,CAAC,uBAAuB,CAAC;qBAC5C,SAAS,CAAC,CAAC,gBAAgB,EAAE,EAAE;oBAC9B,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;oBACzC,IAAI,CAAC,sBAAsB,EAAE,CAAC;gBAChC,CAAC,CAAC,CAAC;aACN;SACF;IACH,CAAC;IAEO,sBAAsB;QAC5B,IAAI,CAAC,8BAA8B,GAAG,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;QAEtF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,gBAAgB;YACtD,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB;iBACnC,MAAM,CACL,CAAC,eAAiC,EAAE,EAAE,CACpC,eAAe,CAAC,YAAY,KAAK,oBAAoB,CAAC,aAAa,CAAC,UAAU,CACjF;iBACA,GAAG,CAAC,CAAC,eAAe,EAAE,EAAE;gBACvB,IAAI,eAAe,CAAC,EAAE,KAAK,CAAC,EAAE;oBAC5B,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;iBAClF;gBAED,OAAO,eAAe,CAAC,IAAI,CAAC;YAC9B,CAAC,CAAC;YACN,CAAC,CAAC,EAAE,CAAC;IACT,CAAC;IAED,eAAe,CAAC,aAA6B;QAC3C,OAAO,aAAa,CAAC,IAAI,CAAC;IAC5B,CAAC;IAED,kCAAkC,CAAC,eAAiC;QAClE,OAAO,eAAe,CAAC,IAAI,CAAC;IAC9B,CAAC;IAED,IAAI;QACF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAE7B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,wBAAwB,EAAE,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,sBAAsB,EAAE,CAAC;SAC/B;IACH,CAAC;IAED,OAAO;QACL,OAAO,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,sBAAsB,CAAC,KAAK,IAAI,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC;IAC1G,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC;IAC3C,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC;IAC3C,CAAC;IAED,sBAAsB;QACpB,MAAM,kBAAkB,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAC3D,kBAAkB,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAE7C,IAAI,CAAC,+BAA+B;aACjC,IAAI,CAAC;YACJ,MAAM,EAAE;gBACN,gBAAgB,EAAE,yBAAyB,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI;aACrE;SACF,CAAC;aACD,SAAS,CAAC,CAAC,MAAuB,EAAE,EAAE;YACrC,MAAM,kBAAkB,GAAG,IAAI,CAC7B,MAAM,CAAC,IAAI,EACX,CAAC,MAAM,EAAE,EAAE,CACT,MAAM,CAAC,yBAAyB,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;gBACrE,kBAAkB,CAAC,gBAAgB,CACtC,CAAC;YAEF,IAAI,CAAC,kBAAkB,EAAE;gBACvB,IAAI,CAAC,8BAA8B;qBAChC,cAAc,CAAC,kBAAkB,CAAC;qBAClC,IAAI,CACH,QAAQ,CAAC,GAAG,EAAE;oBACZ,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAChC,CAAC,CAAC,CACH;qBACA,SAAS,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,OAAO,EAAE,CAAC;oBACnE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;oBAChE,IAAI,CAAC,sBAAsB,CAAC,cAAc,EAAE,CAAC;oBAE7C,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAC1C,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,wEAAwE,CAAC,CACxG,CAAC;gBACJ,CAAC,CAAC,CAAC;aACN;iBAAM;gBACL,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAE9B,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAC1C,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,0EAA0E,CAAC,CAC1G,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wBAAwB;QACtB,MAAM,kBAAkB,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAE3D,kBAAkB,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAChE,kBAAkB,CAAC,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC;QAEhG,IAAI,CAAC,8BAA8B;aAChC,YAAY,CAAC,kBAAkB,CAAC;aAChC,IAAI,CACH,QAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC,CACH;aACA,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,sBAAsB,CAAC,cAAc,EAAE,CAAC;YAE7C,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAC1C,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,8DAA8D,EAAE;gBAC5F,oBAAoB,EAAE,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,kBAAkB,CAAC,gBAAgB,CAAC;aACvG,CAAC,CACH,CAAC;QACJ,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wBAAwB;QACtB,MAAM,cAAc,GAAG,SAAS,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;QAEpE,cAAc,CAAC,sBAAsB,GAAG,cAAc,CAAC,sBAAsB,CAAC,MAAM;YAClF,CAAC,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,EAAE;YAC9C,CAAC,CAAC,IAAI,CAAC;QAET,cAAc,CAAC,6BAA6B,GAAG,cAAc,CAAC,6BAA6B;YACzF,CAAC,CAAC,cAAc,CAAC,6BAA6B,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,EAAE;gBACjE,OAAO,aAAa,CAAC,EAAE,CAAC;YAC1B,CAAC,CAAC;YACJ,CAAC,CAAC,IAAI,CAAC;QAET,IAAI,CAAC,cAAc,CAAC,6BAA6B,EAAE;YACjD,OAAO,cAAc,CAAC,6BAA6B,CAAC;SACrD;QAED,IAAI,CAAC,cAAc,CAAC,sBAAsB,EAAE;YAC1C,OAAO,cAAc,CAAC,sBAAsB,CAAC;SAC9C;QAED,IAAI,CAAC,0BAA0B,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC9D,IAAI,CAAC,0BAA0B,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC9D,IAAI,CAAC,0BAA0B,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC9D,IAAI,CAAC,0BAA0B,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAE9D,IAAI,cAAc,CAAC,qBAAqB,CAAC,SAAS,IAAI,cAAc,CAAC,qBAAqB,CAAC,QAAQ,EAAE;YACnG,cAAc,CAAC,qBAAqB,GAAG,wBAAwB,CAAC,8BAA8B,CAAC;SAChG;aAAM,IAAI,cAAc,CAAC,qBAAqB,CAAC,SAAS,EAAE;YACzD,cAAc,CAAC,qBAAqB,GAAG,wBAAwB,CAAC,mBAAmB,CAAC;SACrF;aAAM,IAAI,cAAc,CAAC,qBAAqB,CAAC,QAAQ,EAAE;YACxD,cAAc,CAAC,qBAAqB,GAAG,wBAAwB,CAAC,oBAAoB,CAAC;SACtF;aAAM;YACL,cAAc,CAAC,qBAAqB,GAAG,wBAAwB,CAAC,WAAW,CAAC;SAC7E;QAED,OAAO,cAAc,CAAC;IACxB,CAAC;IAEO,0BAA0B,CAAC,YAA8B;QAC/D,IACE,YAAY,CAAC,OAAO,KAAK,EAAE;YAC3B,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,6BAA6B,CAAC;YAC7D,YAAY,CAAC,KAAK,KAAK,EAAE,EACzB;YACA,YAAY,CAAC,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC;SAC3C;IACH,CAAC;IAED,KAAK;QACH,IAAI,CAAC,8BAA8B,GAAG,EAAE,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC/D,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACvE,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAE9E,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,QAAQ,CAAC;YAChE,SAAS,EAAE,KAAK;YAChB,QAAQ,EAAE,KAAK;SAChB,CAAC,CAAC;QAEH,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACvE,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC/D,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC3D,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;QACxF,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;QACxF,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;QACxF,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;IAC1F,CAAC;IAED,wBAAwB;QACtB,IACE,IAAI,CAAC,sBAAsB,CAAC,KAAK;YACjC,CAAC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,KAAK,CAAC,SAAS;YACzE,CAAC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,KAAK,CAAC,QAAQ,EACxE;YACA,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACxE;IACH,CAAC;;wHAzfU,2BAA2B;4GAA3B,2BAA2B,yNCxCxC,wvOAsNA;2FD9Ka,2BAA2B;kBAJvC,SAAS;mBAAC;oBACT,QAAQ,EAAE,wBAAwB;oBAClC,WAAW,EAAE,sCAAsC;iBACpD;ucAGC,8BAA8B;sBAD7B,KAAK;gBAIN,UAAU;sBADT,KAAK;gBAIN,gBAAgB;sBADf,MAAM","sourcesContent":["import { ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RxApprovalConfigurationService } from '../approval-configuration.service';\nimport { cloneDeep, find } from 'lodash';\nimport {\n  IFieldDefinition,\n  IRecordDefinition,\n  ISecurityLabel,\n  RX_RECORD_DEFINITION,\n  RxRecordDefinitionCacheService,\n  RxRecordInstanceDataPageService\n} from '@helix/platform/record/api';\nimport {\n  IDefinitionPickerComponentOptions,\n  RxDefinitionPickerScope,\n  RxDefinitionPickerType\n} from '@helix/platform/shared/components';\nimport { RX_APPROVAL_CONFIGURATION } from '../approval-configuration.constant';\nimport { IAdditionalField, IRecordRegistration } from '../approval-configuration.types';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable, of, ReplaySubject } from 'rxjs';\nimport {\n  IDataPageResult,\n  JustificationRequirement,\n  RxDefinitionNameService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport {\n  IFieldDefinitionPickerComponentOptions,\n  IRecordFields\n} from './field-definition-picker/field-definition-picker-component.types';\nimport { AdaptRxControlLabelTooltip, Alert } from '@bmc-ux/adapt-angular';\nimport { RxFieldDefinitionPickerService } from './field-definition-picker/field-definition-picker.service';\nimport { finalize, map, switchMap, takeUntil } from 'rxjs/operators';\nimport { RxRecordGridUtilsService } from '@helix/platform/view/components';\n\n@Component({\n  selector: 'rx-record-registration',\n  templateUrl: './record-registration.component.html'\n})\nexport class RecordRegistrationComponent implements OnInit, OnDestroy {\n  @Input()\n  registeredRecordDefinitionName: string;\n\n  @Input()\n  isEditMode: boolean;\n\n  @Output()\n  recordRegistered = new EventEmitter<string>();\n\n  recordRegistrationForm: FormGroup = this.createRecordRegistrationForm();\n  recordDefinition: IRecordDefinition;\n  recordDefinitionSecurityLabels: ISecurityLabel[] = [];\n  fieldNames: string[] = [];\n  private isSaveInProgress = false;\n\n  alertConfig: Alert = {\n    content: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.record-registration.info'),\n    type: 'inline',\n    variant: 'info'\n  };\n\n  recordDefinitionPickerOptions: IDefinitionPickerComponentOptions = {\n    label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.record.definition'),\n    definitionType: RxDefinitionPickerType.PublicRegularDataRecord,\n    required: true,\n    availableDefinitionPickerStates: {\n      definitionButtonsGroups: [RxDefinitionPickerScope.Rx],\n      search: RxDefinitionPickerScope.Rx\n    }\n  };\n\n  permissionTooltip: AdaptRxControlLabelTooltip = {\n    popoverMode: true,\n    iconName: 'question_circle_o',\n    placement: 'right',\n    content: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.record.permissions.tooltip')\n  };\n\n  justificationTooltip: AdaptRxControlLabelTooltip = {\n    popoverMode: true,\n    iconName: 'question_circle_o',\n    placement: 'right',\n    content: this.translateService.instant('com.bmc.arsys.rx.client.approval.justification.tooltip')\n  };\n\n  private recordDefinitionName$ = new BehaviorSubject<string>('');\n\n  private fieldsTree$: Observable<IRecordFields[]> = this.recordDefinitionName$.pipe(\n    switchMap((recordDefinitionName) => {\n      return recordDefinitionName ? this.rxFieldDefinitionPickerService.getRecordFields(recordDefinitionName) : of([]);\n    })\n  );\n\n  requesterFieldDefinitionPickerOptions$: Observable<IFieldDefinitionPickerComponentOptions> = combineLatest([\n    this.recordDefinitionName$,\n    this.fieldsTree$\n  ]).pipe(\n    map(\n      ([recordDefinitionName, fieldsTree]) =>\n        ({\n          recordDefinitionName: recordDefinitionName,\n          label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.record.requester'),\n          required: true,\n          tooltip: this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.configuration.record.requester.tooltip'\n          ),\n          fieldsTree: fieldsTree\n        } as IFieldDefinitionPickerComponentOptions)\n    )\n  );\n\n  approverExclusionFieldDefinitionPickerOptions$: Observable<IFieldDefinitionPickerComponentOptions> = combineLatest([\n    this.recordDefinitionName$,\n    this.fieldsTree$\n  ]).pipe(\n    map(\n      ([recordDefinitionName, fieldsTree]) =>\n        ({\n          recordDefinitionName,\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.configuration.record.approver-exclusion.label'\n          ),\n          required: false,\n          tooltip: this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.configuration.record.approver-exclusion.tooltip'\n          ),\n          fieldsTree: fieldsTree\n        } as IFieldDefinitionPickerComponentOptions)\n    )\n  );\n\n  summaryFieldDefinitionPickerOptions$: Observable<IFieldDefinitionPickerComponentOptions> = combineLatest([\n    this.recordDefinitionName$,\n    this.fieldsTree$\n  ]).pipe(\n    map(\n      ([recordDefinitionName, fieldsTree]) =>\n        ({\n          recordDefinitionName: recordDefinitionName,\n          label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.record.summary'),\n          required: true,\n          fieldsTree: fieldsTree\n        } as IFieldDefinitionPickerComponentOptions)\n    )\n  );\n\n  notesFieldDefinitionPickerOptions$: Observable<IFieldDefinitionPickerComponentOptions> = combineLatest([\n    this.recordDefinitionName$,\n    this.fieldsTree$\n  ]).pipe(\n    map(\n      ([recordDefinitionName, fieldsTree]) =>\n        ({\n          recordDefinitionName: recordDefinitionName,\n          label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.record.notes'),\n          required: false,\n          fieldsTree: fieldsTree\n        } as IFieldDefinitionPickerComponentOptions)\n    )\n  );\n\n  fieldDefinitionPickerOptions$: Observable<IFieldDefinitionPickerComponentOptions> = combineLatest([\n    this.recordDefinitionName$,\n    this.fieldsTree$\n  ]).pipe(\n    map(\n      ([recordDefinitionName, fieldsTree]) =>\n        ({\n          recordDefinitionName: recordDefinitionName,\n          required: false,\n          fieldsTree: fieldsTree\n        } as IFieldDefinitionPickerComponentOptions)\n    )\n  );\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private isNewConfiguration = true;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private changeDetector: ChangeDetectorRef,\n    private translateService: TranslateService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxApprovalConfigurationService: RxApprovalConfigurationService,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService,\n    private rxNotificationService: RxNotificationService,\n    private rxRecordGridUtilsService: RxRecordGridUtilsService,\n    private rxFieldDefinitionPickerService: RxFieldDefinitionPickerService\n  ) {}\n\n  ngOnInit() {\n    if (this.isEditMode) {\n      this.initializeRecordRegistrationForm();\n    }\n\n    this.recordRegistrationForm\n      .get('recordDefinition')\n      .valueChanges.pipe(takeUntil(this.destroyed$))\n      .subscribe((value) => this.onRecordDefinitionChange(value));\n\n    this.recordRegistrationForm\n      .get('field3Mapping.fieldID')\n      .valueChanges.pipe(takeUntil(this.destroyed$))\n      .subscribe((value) => this.onFieldMappingChange('field3Mapping.label', value));\n\n    this.recordRegistrationForm\n      .get('field4Mapping.fieldID')\n      .valueChanges.pipe(takeUntil(this.destroyed$))\n      .subscribe((value) => this.onFieldMappingChange('field4Mapping.label', value));\n\n    this.recordRegistrationForm\n      .get('field5Mapping.fieldID')\n      .valueChanges.pipe(takeUntil(this.destroyed$))\n      .subscribe((value) => this.onFieldMappingChange('field5Mapping.label', value));\n\n    this.recordRegistrationForm\n      .get('field6Mapping.fieldID')\n      .valueChanges.pipe(takeUntil(this.destroyed$))\n      .subscribe((value) => this.onFieldMappingChange('field6Mapping.label', value));\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  createRecordRegistrationForm(): FormGroup {\n    return this.formBuilder.group({\n      recordDefinition: ['', Validators.required],\n      summaryField: ['', Validators.required],\n      requestorField: ['', Validators.required],\n      approverExclusionField: null,\n      permissionsFromSecurityLabels: [[], Validators.nullValidator],\n      requestIDField: '',\n      notesField: '',\n      justificationFieldName: [[], Validators.nullValidator],\n      justificationRequired: this.formBuilder.group({\n        toApprove: false,\n        toReject: false\n      }),\n      field3Mapping: this.formBuilder.group(this.createAdditionalField()),\n      field4Mapping: this.formBuilder.group(this.createAdditionalField()),\n      field5Mapping: this.formBuilder.group(this.createAdditionalField()),\n      field6Mapping: this.formBuilder.group(this.createAdditionalField())\n    });\n  }\n\n  initializeRecordRegistrationForm(): void {\n    forkJoin([\n      this.rxRecordDefinitionCacheService.getRecordDefinition(this.registeredRecordDefinitionName),\n      this.rxApprovalConfigurationService.getRegisteredRecordDetails(this.registeredRecordDefinitionName)\n    ]).subscribe(([recordDefinition, registrationRecord]) => {\n      this.isNewConfiguration = registrationRecord.isNewConfiguration;\n      this.recordDefinition = recordDefinition;\n      this.recordRegistrationForm.get('recordDefinition').setValue(registrationRecord.recordDefinition);\n      this.recordRegistrationForm.controls['recordDefinition'].disable();\n      this.recordRegistrationForm.get('summaryField').setValue(registrationRecord.summaryField);\n      this.recordRegistrationForm.get('requestorField').setValue(registrationRecord.requestorField);\n      this.recordRegistrationForm.get('requestIDField').setValue(registrationRecord.requestIDField);\n      this.recordRegistrationForm.get('notesField').setValue(registrationRecord.notesField);\n      this.recordRegistrationForm.get('approverExclusionField').setValue(registrationRecord.approverExclusionField);\n\n      if (registrationRecord.field3Mapping) {\n        this.recordRegistrationForm.get('field3Mapping').setValue(registrationRecord.field3Mapping);\n      }\n\n      if (registrationRecord.field4Mapping) {\n        this.recordRegistrationForm.get('field4Mapping').setValue(registrationRecord.field4Mapping);\n      }\n\n      if (registrationRecord.field5Mapping) {\n        this.recordRegistrationForm.get('field5Mapping').setValue(registrationRecord.field5Mapping);\n      }\n\n      if (registrationRecord.field6Mapping) {\n        this.recordRegistrationForm.get('field6Mapping').setValue(registrationRecord.field6Mapping);\n      }\n\n      this.recordRegistrationForm\n        .get('justificationFieldName')\n        .setValue(registrationRecord.justificationFieldName ? [registrationRecord.justificationFieldName] : []);\n\n      this.recordRegistrationForm\n        .get('permissionsFromSecurityLabels')\n        .setValue(this.getSecurityLabels(registrationRecord));\n\n      this.recordRegistrationForm.get('justificationRequired').setValue({\n        toApprove:\n          registrationRecord.justificationRequired === JustificationRequirement.RequiredForApprovalOrRejection ||\n          registrationRecord.justificationRequired === JustificationRequirement.RequiredForApproval,\n        toReject:\n          registrationRecord.justificationRequired === JustificationRequirement.RequiredForApprovalOrRejection ||\n          registrationRecord.justificationRequired === JustificationRequirement.RequiredForRejection\n      });\n    });\n  }\n\n  getSecurityLabels(approvalRegistrationRecord: IRecordRegistration): ISecurityLabel[] {\n    return approvalRegistrationRecord.permissionsFromSecurityLabels.map((parentId) =>\n      this.recordDefinition.securityLabels.find((securityLabel) => securityLabel.id === parentId)\n    );\n  }\n\n  private createAdditionalField(): IAdditionalField {\n    return {\n      fieldID: '',\n      label: ''\n    };\n  }\n\n  private onFieldMappingChange(formControlName: string, value: string): void {\n    if (value && !value.includes('recordContext._associations')) {\n      this.recordRegistrationForm.get(formControlName).setValue(value);\n    } else {\n      value\n        ? this.setAssociatedRecordFieldLabel(value, formControlName)\n        : this.recordRegistrationForm.get(formControlName).setValue('');\n    }\n  }\n\n  private setAssociatedRecordFieldLabel(fieldId: string, formControlName: string): void {\n    this.rxRecordGridUtilsService.getFieldDefinition(fieldId, this.recordDefinition).subscribe((fieldDefinition) => {\n      this.recordRegistrationForm.get(formControlName).setValue(fieldDefinition.name);\n    });\n  }\n\n  private onRecordDefinitionChange(newRecordDefinitionName: string): void {\n    const oldRecordDefinitionName = this.recordRegistrationForm.value.recordDefinition;\n\n    if (newRecordDefinitionName !== oldRecordDefinitionName) {\n      this.reset();\n      this.recordDefinitionName$.next(newRecordDefinitionName);\n\n      if (newRecordDefinitionName) {\n        this.rxRecordDefinitionCacheService\n          .getRecordDefinition(newRecordDefinitionName)\n          .subscribe((recordDefinition) => {\n            this.recordDefinition = recordDefinition;\n            this.initializeFormControls();\n          });\n      }\n    }\n  }\n\n  private initializeFormControls(): void {\n    this.recordDefinitionSecurityLabels = cloneDeep(this.recordDefinition.securityLabels);\n\n    this.fieldNames = this.recordDefinition.fieldDefinitions\n      ? this.recordDefinition.fieldDefinitions\n          .filter(\n            (fieldDefinition: IFieldDefinition) =>\n              fieldDefinition.resourceType !== RX_RECORD_DEFINITION.resourceTypes.attachment\n          )\n          .map((fieldDefinition) => {\n            if (fieldDefinition.id === 1) {\n              this.recordRegistrationForm.get('requestIDField').setValue(fieldDefinition.name);\n            }\n\n            return fieldDefinition.name;\n          })\n      : [];\n  }\n\n  optionFormatter(securityLabel: ISecurityLabel): string {\n    return securityLabel.name;\n  }\n\n  justificationReasonOptionFormatter(fieldDefinition: IFieldDefinition): string {\n    return fieldDefinition.name;\n  }\n\n  save(): void {\n    this.isSaveInProgress = true;\n\n    if (this.isEditMode) {\n      this.updateRecordRegistration();\n    } else {\n      this.saveRecordRegistration();\n    }\n  }\n\n  canSave(): boolean {\n    return !this.isSaveInProgress && this.recordRegistrationForm.valid && this.recordRegistrationForm.dirty;\n  }\n\n  isFormValid(): boolean {\n    return this.recordRegistrationForm.valid;\n  }\n\n  isFormDirty(): boolean {\n    return this.recordRegistrationForm.dirty;\n  }\n\n  saveRecordRegistration(): void {\n    const registrationRecord = this.transformFormControlData();\n    registrationRecord.isNewConfiguration = true;\n\n    this.rxRecordInstanceDataPageService\n      .post({\n        params: {\n          recorddefinition: RX_APPROVAL_CONFIGURATION.selfApproval.apForm.name\n        }\n      })\n      .subscribe((result: IDataPageResult) => {\n        const isRecordRegistered = find(\n          result.data,\n          (record) =>\n            record[RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.formName] ===\n            registrationRecord.recordDefinition\n        );\n\n        if (!isRecordRegistered) {\n          this.rxApprovalConfigurationService\n            .registerRecord(registrationRecord)\n            .pipe(\n              finalize(() => {\n                this.isSaveInProgress = false;\n              })\n            )\n            .subscribe(() => {\n              this.isEditMode = true;\n              this.recordRegistrationForm.controls['recordDefinition'].disable();\n              this.recordRegistered.emit(registrationRecord.recordDefinition);\n              this.recordRegistrationForm.markAsPristine();\n\n              this.rxNotificationService.addSuccessMessage(\n                this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.record.register.success')\n              );\n            });\n        } else {\n          this.isSaveInProgress = false;\n\n          this.rxNotificationService.addWarningMessage(\n            this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.record.register.duplicate')\n          );\n        }\n      });\n  }\n\n  updateRecordRegistration(): void {\n    const registrationRecord = this.transformFormControlData();\n\n    registrationRecord.isNewConfiguration = this.isNewConfiguration;\n    registrationRecord.recordDefinition = this.recordRegistrationForm.get('recordDefinition').value;\n\n    this.rxApprovalConfigurationService\n      .updateRecord(registrationRecord)\n      .pipe(\n        finalize(() => {\n          this.isSaveInProgress = false;\n        })\n      )\n      .subscribe(() => {\n        this.isEditMode = true;\n        this.recordRegistrationForm.markAsPristine();\n\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.record.update', {\n            recordDefinitionName: this.rxDefinitionNameService.getDisplayName(registrationRecord.recordDefinition)\n          })\n        );\n      });\n  }\n\n  transformFormControlData(): IRecordRegistration {\n    const approvalRecord = cloneDeep(this.recordRegistrationForm.value);\n\n    approvalRecord.justificationFieldName = approvalRecord.justificationFieldName.length\n      ? approvalRecord.justificationFieldName.join()\n      : null;\n\n    approvalRecord.permissionsFromSecurityLabels = approvalRecord.permissionsFromSecurityLabels\n      ? approvalRecord.permissionsFromSecurityLabels.map((securityLabel) => {\n          return securityLabel.id;\n        })\n      : null;\n\n    if (!approvalRecord.permissionsFromSecurityLabels) {\n      delete approvalRecord.permissionsFromSecurityLabels;\n    }\n\n    if (!approvalRecord.justificationFieldName) {\n      delete approvalRecord.justificationFieldName;\n    }\n\n    this.updateAdditionalFieldLabel(approvalRecord.field3Mapping);\n    this.updateAdditionalFieldLabel(approvalRecord.field4Mapping);\n    this.updateAdditionalFieldLabel(approvalRecord.field5Mapping);\n    this.updateAdditionalFieldLabel(approvalRecord.field6Mapping);\n\n    if (approvalRecord.justificationRequired.toApprove && approvalRecord.justificationRequired.toReject) {\n      approvalRecord.justificationRequired = JustificationRequirement.RequiredForApprovalOrRejection;\n    } else if (approvalRecord.justificationRequired.toApprove) {\n      approvalRecord.justificationRequired = JustificationRequirement.RequiredForApproval;\n    } else if (approvalRecord.justificationRequired.toReject) {\n      approvalRecord.justificationRequired = JustificationRequirement.RequiredForRejection;\n    } else {\n      approvalRecord.justificationRequired = JustificationRequirement.NotRequired;\n    }\n\n    return approvalRecord;\n  }\n\n  private updateAdditionalFieldLabel(fieldMapping: IAdditionalField): void {\n    if (\n      fieldMapping.fieldID !== '' &&\n      !fieldMapping.fieldID.includes('recordContext._associations') &&\n      fieldMapping.label === ''\n    ) {\n      fieldMapping.label = fieldMapping.fieldID;\n    }\n  }\n\n  reset(): void {\n    this.recordDefinitionSecurityLabels = [];\n    this.fieldNames = [];\n    this.recordRegistrationForm.get('summaryField').setValue('');\n    this.recordRegistrationForm.get('requestorField').setValue('');\n    this.recordRegistrationForm.get('approverExclusionField').setValue('');\n    this.recordRegistrationForm.get('permissionsFromSecurityLabels').setValue([]);\n\n    this.recordRegistrationForm.get('justificationRequired').setValue({\n      toApprove: false,\n      toReject: false\n    });\n\n    this.recordRegistrationForm.get('justificationFieldName').setValue([]);\n    this.recordRegistrationForm.get('requestIDField').setValue('');\n    this.recordRegistrationForm.get('notesField').setValue('');\n    this.recordRegistrationForm.get('field3Mapping').setValue(this.createAdditionalField());\n    this.recordRegistrationForm.get('field4Mapping').setValue(this.createAdditionalField());\n    this.recordRegistrationForm.get('field5Mapping').setValue(this.createAdditionalField());\n    this.recordRegistrationForm.get('field6Mapping').setValue(this.createAdditionalField());\n  }\n\n  handleJustificationField(): void {\n    if (\n      this.recordRegistrationForm.dirty &&\n      !this.recordRegistrationForm.get('justificationRequired').value.toApprove &&\n      !this.recordRegistrationForm.get('justificationRequired').value.toReject\n    ) {\n      this.recordRegistrationForm.get('justificationFieldName').setValue([]);\n    }\n  }\n}\n","<adapt-alert [config]=\"alertConfig\"></adapt-alert>\n\n<form [formGroup]=\"recordRegistrationForm\">\n  <div class=\"row\">\n    <div class=\"col-4 form-group\">\n      <rx-definition-picker\n        [options]=\"recordDefinitionPickerOptions\"\n        formControlName=\"recordDefinition\"\n        rx-id=\"definition-field\"\n        required=\"true\"\n      >\n      </rx-definition-picker>\n    </div>\n\n    <div class=\"col-4 form-group\">\n      <rx-field-definition-picker\n        [options]=\"requesterFieldDefinitionPickerOptions$ | async\"\n        formControlName=\"requestorField\"\n        rx-id=\"requester-id-field\"\n      ></rx-field-definition-picker>\n    </div>\n\n    <div class=\"col-4 form-group\">\n      <rx-field-definition-picker\n        [options]=\"approverExclusionFieldDefinitionPickerOptions$ | async\"\n        formControlName=\"approverExclusionField\"\n        rx-id=\"approver-exclusion-field\"\n      ></rx-field-definition-picker>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-4 form-group\">\n      <adapt-rx-select\n        [options]=\"recordDefinitionSecurityLabels\"\n        label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.record.permissions' | translate }}\"\n        name=\"permissionsFromSecurityLabels\"\n        [optionFormatter]=\"optionFormatter\"\n        [multiple]=\"true\"\n        formControlName=\"permissionsFromSecurityLabels\"\n        [selectAllButton]=\"true\"\n        [deselectAllButton]=\"true\"\n        [disabled]=\"!recordDefinitionSecurityLabels.length\"\n        rx-id=\"permissions-field\"\n        [tooltip]=\"permissionTooltip\"\n      ></adapt-rx-select>\n    </div>\n\n    <div class=\"col-4 form-group\">\n      <adapt-rx-textfield\n        rx-id=\"request-id-field\"\n        label=\"{{ 'com.bmc.arsys.rx.client.approval.console.detail.RequestId' | translate }}\"\n        formControlName=\"requestIDField\"\n        [readonly]=\"true\"\n        [disabledStyleForReadonlyState]=\"true\"\n      >\n      </adapt-rx-textfield>\n    </div>\n\n    <div class=\"col-4 form-group\">\n      <rx-field-definition-picker\n        [options]=\"summaryFieldDefinitionPickerOptions$ | async\"\n        formControlName=\"summaryField\"\n        rx-id=\"summary-field\"\n      ></rx-field-definition-picker>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-4 form-group\">\n      <rx-field-definition-picker\n        [options]=\"notesFieldDefinitionPickerOptions$ | async\"\n        formControlName=\"notesField\"\n        rx-id=\"notes-field\"\n      ></rx-field-definition-picker>\n    </div>\n\n    <div class=\"col-4 form-group\">\n      <adapt-rx-control-label\n        label=\"{{ 'com.bmc.arsys.rx.client.approval.justification.require-on.label' | translate }}\"\n      ></adapt-rx-control-label>\n\n      <div formGroupName=\"justificationRequired\">\n        <adapt-rx-checkbox\n          class=\"checkbox-inline\"\n          formControlName=\"toApprove\"\n          label=\"{{ 'com.bmc.arsys.rx.client.approval.justification.require-on.approval.label' | translate }}\"\n          [disabled]=\"!fieldNames.length\"\n          (ngModelChange)=\"handleJustificationField()\"\n        >\n        </adapt-rx-checkbox>\n\n        <adapt-rx-checkbox\n          class=\"checkbox-inline\"\n          formControlName=\"toReject\"\n          label=\"{{ 'com.bmc.arsys.rx.client.approval.justification.require-on.rejection.label' | translate }}\"\n          [disabled]=\"!fieldNames.length\"\n          (ngModelChange)=\"handleJustificationField()\"\n        >\n        </adapt-rx-checkbox>\n      </div>\n    </div>\n\n    <div class=\"col-4 form-group\">\n      <adapt-rx-select\n        [options]=\"fieldNames\"\n        [emptyOption]=\"true\"\n        label=\"{{ 'com.bmc.arsys.rx.client.approval.justification-reason.label' | translate }}\"\n        formControlName=\"justificationFieldName\"\n        name=\"justificationFieldName\"\n        [selectAllButton]=\"true\"\n        enableFilter=\"true\"\n        closeOnSelect=\"true\"\n        rx-id=\"justification-reason-field\"\n        [deselectAllButton]=\"true\"\n        [disabled]=\"!fieldNames.length\"\n        [tooltip]=\"justificationTooltip\"\n        [required]=\"\n          recordRegistrationForm.get('justificationRequired').value.toApprove ||\n          recordRegistrationForm.get('justificationRequired').value.toReject\n        \"\n      ></adapt-rx-select>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-4\">\n      <adapt-rx-control-label\n        label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.record.fields' | translate }}\"\n      ></adapt-rx-control-label>\n    </div>\n\n    <div class=\"col-4\">\n      <adapt-rx-control-label\n        label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.record.fields.labels' | translate }}\"\n      ></adapt-rx-control-label>\n    </div>\n  </div>\n\n  <div class=\"row\" formGroupName=\"field3Mapping\">\n    <div class=\"col-4 form-group\">\n      <rx-field-definition-picker\n        [options]=\"fieldDefinitionPickerOptions$ | async\"\n        formControlName=\"fieldID\"\n        rx-id=\"field3-mapping-field\"\n      ></rx-field-definition-picker>\n    </div>\n\n    <div class=\"col-4 form-group\">\n      <adapt-rx-textfield\n        formControlName=\"label\"\n        name=\"field3MappingLabel\"\n        adaptRequired\n        [disabled]=\"!recordRegistrationForm.get('field3Mapping').get('fieldID').value\"\n      ></adapt-rx-textfield>\n    </div>\n  </div>\n\n  <div class=\"row\" formGroupName=\"field4Mapping\">\n    <div class=\"col-4 form-group\">\n      <rx-field-definition-picker\n        [options]=\"fieldDefinitionPickerOptions$ | async\"\n        formControlName=\"fieldID\"\n        rx-id=\"field4-mapping-field\"\n      ></rx-field-definition-picker>\n    </div>\n\n    <div class=\"col-4 form-group\">\n      <adapt-rx-textfield\n        formControlName=\"label\"\n        name=\"field4MappingLabel\"\n        adaptRequired\n        [disabled]=\"!recordRegistrationForm.get('field4Mapping').get('fieldID').value\"\n      ></adapt-rx-textfield>\n    </div>\n  </div>\n  <div class=\"row\" formGroupName=\"field5Mapping\">\n    <div class=\"col-4 form-group\">\n      <rx-field-definition-picker\n        rx-id=\"field5-mapping-field\"\n        [options]=\"fieldDefinitionPickerOptions$ | async\"\n        formControlName=\"fieldID\"\n      ></rx-field-definition-picker>\n    </div>\n\n    <div class=\"col-4 form-group\">\n      <adapt-rx-textfield\n        formControlName=\"label\"\n        name=\"field5MappingLabel\"\n        adaptRequired\n        [disabled]=\"!recordRegistrationForm.get('field5Mapping').get('fieldID').value\"\n      ></adapt-rx-textfield>\n    </div>\n  </div>\n\n  <div class=\"row\" formGroupName=\"field6Mapping\">\n    <div class=\"col-4 form-group\">\n      <rx-field-definition-picker\n        rx-id=\"field6-mapping-field\"\n        [options]=\"fieldDefinitionPickerOptions$ | async\"\n        formControlName=\"fieldID\"\n      ></rx-field-definition-picker>\n    </div>\n\n    <div class=\"col-4 form-group\">\n      <adapt-rx-textfield\n        formControlName=\"label\"\n        name=\"field6MappingLabel\"\n        adaptRequired\n        [disabled]=\"!recordRegistrationForm.get('field6Mapping').get('fieldID').value\"\n      ></adapt-rx-textfield>\n    </div>\n  </div>\n</form>\n"]}