{"version":3,"file":"record-grid-filter-preset-editor-control.component.js","sourceRoot":"","sources":["../../../../../../../../../../libs/platform/view/components/record-grid/design/editors/record-grid-filter-preset-editor-control/record-grid-filter-preset-editor-control.component.ts","../../../../../../../../../../libs/platform/view/components/record-grid/design/editors/record-grid-filter-preset-editor-control/record-grid-filter-preset-editor-control.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { cloneDeep, noop } from 'lodash';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { IFormControlComponent } from '@helix/platform/shared/api';\nimport {\n  IRecordGridFilterPresetEditorControlOptions,\n  IRecordGridFilterPresetEditorModalParams,\n  IRecordGridFilterPresetEditorModalResult\n} from './record-grid-filter-preset-editor.types';\nimport { IRecordGridPredefinedFilterPreset } from '../../../runtime/types/record-grid-predefined-filter-preset.interface';\nimport { RecordGridFilterPresetEditorModalComponent } from './record-grid-filter-preset-editor-modal/record-grid-filter-preset-editor-modal.component';\nimport { RxModalService } from '@helix/platform/ui-kit';\nimport { OpenViewActionModalSize } from '@helix/platform/view/api';\nimport { IRecordGridNamedFilterOptionsMap } from '../../../common/types/record-grid.types';\nimport { RxRecordGridFilterSelectHelperService } from '../record-grid-filter-select-control/record-grid-filter-select-helper.service';\n\n@Component({\n  selector: 'rx-record-grid-filter-preset-editor',\n  templateUrl: './record-grid-filter-preset-editor-control.component.html',\n  styleUrls: ['./record-grid-filter-preset-editor-control.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RecordGridFilterPresetEditorControlComponent,\n      multi: true\n    }\n  ]\n})\nexport class RecordGridFilterPresetEditorControlComponent\n  extends ValueAccessor<IRecordGridPredefinedFilterPreset[]>\n  implements IFormControlComponent\n{\n  @Input()\n  options: IRecordGridFilterPresetEditorControlOptions;\n\n  filterPresets: IRecordGridPredefinedFilterPreset[] = [];\n\n  constructor(\n    private rxModalService: RxModalService,\n    private rxRecordGridFilterSelectHelperService: RxRecordGridFilterSelectHelperService\n  ) {\n    super();\n  }\n\n  onWriteValue(filterPresets: IRecordGridPredefinedFilterPreset[]): void {\n    this.filterPresets = filterPresets.slice();\n\n    this.filterPresets.sort((filterPreset1, filterPreset2) => filterPreset1.title.localeCompare(filterPreset2.title));\n  }\n\n  removeFilterPreset(filterPresetToRemove: IRecordGridPredefinedFilterPreset): void {\n    this.updateValue(this.filterPresets.filter((filterPreset) => filterPreset.guid !== filterPresetToRemove.guid));\n  }\n\n  updateValue(filterPresets: IRecordGridPredefinedFilterPreset[]): void {\n    this.value = filterPresets;\n    this.onWriteValue(filterPresets);\n  }\n\n  openEditor(filterPreset?: IRecordGridPredefinedFilterPreset): void {\n    const selectedFieldIds = this.options.columns.map((column) => column.fieldId);\n\n    const selectedFieldDefinitions = this.options.primaryRecordDefinition.fieldDefinitions.filter((fieldDefinition) =>\n      selectedFieldIds.includes(fieldDefinition.id.toString())\n    );\n\n    const namedFilterOptions = this.rxRecordGridFilterSelectHelperService.getNamedFilterOptionsFromColumns(\n      this.options.columns\n    );\n\n    const data: IRecordGridFilterPresetEditorModalParams = {\n      filterPresets: this.filterPresets,\n      activeFilterPreset: filterPreset,\n      isReadOnly: this.isDisabled,\n      namedFilterOptions,\n      primaryRecordDefinition: cloneDeep({\n        ...this.options.primaryRecordDefinition,\n        fieldDefinitions: selectedFieldDefinitions\n      }),\n      selectedFieldIds\n    };\n\n    this.rxModalService\n      .openModal({\n        title: 'Edit filter presets',\n        content: RecordGridFilterPresetEditorModalComponent,\n        size: OpenViewActionModalSize.Large as any,\n        testID: 'edit-filter-presets',\n        data\n      })\n      .then((result: IRecordGridFilterPresetEditorModalResult) => {\n        if (result && result.filterPresets) {\n          this.updateValue(result.filterPresets);\n        }\n      })\n      .catch(noop);\n  }\n\n  trackByForFilterPresets(index: number, filterPreset: IRecordGridPredefinedFilterPreset): string {\n    return filterPreset.guid;\n  }\n}\n","<adapt-rx-control-label *ngIf=\"options.label\" [label]=\"options.label\" [tooltip]=\"options?.tooltip\">\n</adapt-rx-control-label>\n\n<adapt-button *ngIf=\"!isDisabled\" btn-type=\"tertiary\" rx-id=\"open-modal-button\" class=\"p-0 pb-1\" (click)=\"openEditor()\">\n  <span class=\"d-icon-plus_circle\"></span>\n  Edit filter presets\n</adapt-button>\n\n<div>\n  <div class=\"rx-selected-filter-preset\" *ngFor=\"let filterPreset of filterPresets; trackBy: trackByForFilterPresets\">\n    <div class=\"rx-selected-filter-preset__header-container\">\n      <span class=\"rx-selected-filter-preset__header-title\" rx-id=\"card-title\" [title]=\"filterPreset.title\">\n        {{ filterPreset.title }}\n      </span>\n\n      <button\n        type=\"button\"\n        class=\"rx-button-unstyled d-icon-left-pencil btn-link\"\n        rx-id=\"open-editor\"\n        *ngIf=\"!isDisabled\"\n        (click)=\"openEditor(filterPreset)\"\n      ></button>\n      <button\n        type=\"button\"\n        class=\"rx-button-unstyled d-icon-cross btn-link\"\n        rx-id=\"remove-filter-preset\"\n        *ngIf=\"!isDisabled\"\n        (click)=\"removeFilterPreset(filterPreset)\"\n      ></button>\n    </div>\n\n    <div rx-id=\"filter-count\" class=\"rx-filter-count\">Filters: {{ filterPreset.recordGridFilters.length }}</div>\n  </div>\n  <span class=\"text-tertiary\" *ngIf=\"filterPresets.length === 0\"> No filter presets added. </span>\n</div>\n"]}