{"version":3,"file":"connection-tester.component.js","sourceRoot":"","sources":["../../../../../../libs/platform/ui-kit/connection-tester/connection-tester.component.ts","../../../../../../libs/platform/ui-kit/connection-tester/connection-tester.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvE,OAAO,EAAE,oBAAoB,EAAE,MAAM,2BAA2B,CAAC;AACjE,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;;;;;AAMvD,MAAM,OAAO,2BAA2B;IAUtC,YAAmB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QARrD,WAAM,GAAyB,oBAAoB,CAAC,OAAO,CAAC;QAG5D,eAAU,GAAG,SAAS,CAAC;QAGvB,mBAAc,GAAuB,IAAI,YAAY,EAAQ,CAAC;IAEN,CAAC;IAEzD,gBAAgB;QACd,IAAI,CAAC,MAAM,GAAG,oBAAoB,CAAC,UAAU,CAAC;QAC9C,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAED,sBAAsB;QACpB,OAAO,IAAI,CAAC,MAAM,KAAK,oBAAoB,CAAC,MAAM,CAAC;IACrD,CAAC;IAED,sBAAsB;QACpB,OAAO,IAAI,CAAC,MAAM,KAAK,oBAAoB,CAAC,MAAM,CAAC;IACrD,CAAC;IAED,8BAA8B;QAC5B,OAAO,IAAI,CAAC,MAAM,KAAK,oBAAoB,CAAC,OAAO,CAAC;IACtD,CAAC;IAED,0BAA0B;QACxB,OAAO,IAAI,CAAC,MAAM,KAAK,oBAAoB,CAAC,UAAU,CAAC;IACzD,CAAC;;wHA/BU,2BAA2B;4GAA3B,2BAA2B,mKCRxC,koCAoCA;2FD5Ba,2BAA2B;kBAJvC,SAAS;mBAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,WAAW,EAAE,oCAAoC;iBAClD;uGAGC,MAAM;sBADL,KAAK;gBAIN,UAAU;sBADT,KAAK;gBAIN,cAAc;sBADb,MAAM","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ConnectionTestStatus } from './connection-tester.types';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-connection-tester',\n  templateUrl: './connection-tester.component.html'\n})\nexport class RxConnectionTesterComponent {\n  @Input()\n  status: ConnectionTestStatus = ConnectionTestStatus.Unknown;\n\n  @Input()\n  buttonType = 'primary';\n\n  @Output()\n  testConnection: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(public translateService: TranslateService) {}\n\n  onTestConnection(): void {\n    this.status = ConnectionTestStatus.InProgress;\n    this.testConnection.emit();\n  }\n\n  isConnectionTestFailed(): boolean {\n    return this.status === ConnectionTestStatus.Failed;\n  }\n\n  isConnectionTestPassed(): boolean {\n    return this.status === ConnectionTestStatus.Passed;\n  }\n\n  isTestConnectionButtonDisabled(): boolean {\n    return this.status !== ConnectionTestStatus.Unknown;\n  }\n\n  isConnectionTestInProgress(): boolean {\n    return this.status === ConnectionTestStatus.InProgress;\n  }\n}\n","<div class=\"align-items-baseline d-flex\">\n  <button\n    adapt-button\n    [btn-type]=\"buttonType\"\n    type=\"button\"\n    rx-id=\"test-connection-button\"\n    [adaptInlineLoader]=\"isConnectionTestInProgress()\"\n    activeText=\"{{ 'com.bmc.arsys.rx.client.common.connection-tester.connecting.label' | translate }}\"\n    (click)=\"onTestConnection()\"\n    [disabled]=\"isTestConnectionButtonDisabled()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.connection-tester.test-connection.button.label' | translate }}\n  </button>\n\n  <adapt-alert\n    class=\"ml-4\"\n    *ngIf=\"isConnectionTestFailed()\"\n    [config]=\"{\n      content: translateService.instant('com.bmc.arsys.rx.client.common.connection-tester.connection-failed.message'),\n      variant: 'danger',\n      type: 'inline'\n    }\"\n  ></adapt-alert>\n\n  <adapt-alert\n    class=\"ml-4\"\n    *ngIf=\"isConnectionTestPassed()\"\n    [config]=\"{\n      content: translateService.instant(\n        'com.bmc.arsys.rx.client.common.connection-tester.connection-succeeded.message'\n      ),\n      variant: 'success',\n      type: 'inline'\n    }\"\n  ></adapt-alert>\n</div>\n"]}