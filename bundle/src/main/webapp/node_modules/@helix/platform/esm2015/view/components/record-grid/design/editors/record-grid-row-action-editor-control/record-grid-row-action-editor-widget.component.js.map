{"version":3,"file":"record-grid-row-action-editor-widget.component.js","sourceRoot":"","sources":["../../../../../../../../../../libs/platform/view/components/record-grid/design/editors/record-grid-row-action-editor-control/record-grid-row-action-editor-widget.component.ts","../../../../../../../../../../libs/platform/view/components/record-grid/design/editors/record-grid-row-action-editor-control/record-grid-row-action-editor-widget.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Injector } from '@angular/core';\nimport { IFormFocusable, IPlainObject } from '@helix/platform/shared/api';\nimport { InspectorWidgetBase } from '@helix/platform/shared/components';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { OpenViewActionModalSize, RX_AVAILABLE_ON_DEVICES_PROP_NAME } from '@helix/platform/view/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { noop, omit, pick } from 'lodash';\nimport { from, Observable } from 'rxjs';\nimport { map, shareReplay, switchMap, take } from 'rxjs/operators';\nimport { RecordGridDesignModel } from '../../record-grid-design.model';\nimport { RecordGridRowActionValidationIssue } from '../../record-grid-design.types';\nimport { RecordGridRowActionEditorModalComponent } from './record-grid-row-action-editor-modal/record-grid-row-action-editor-modal.component';\nimport { IRowAction } from './record-grid-row-action-editor-widget.types';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'rx-record-grid-row-action-editor-widget',\n  templateUrl: './record-grid-row-action-editor-widget.component.html',\n  styleUrls: ['./record-grid-row-action-editor-widget.component.scss']\n})\nexport class RxRecordGridRowActionEditorWidgetComponent\n  extends InspectorWidgetBase<IPlainObject, RecordGridDesignModel>\n  implements IFormFocusable\n{\n  isDisabled: boolean;\n\n  rowActions$: Observable<IRowAction[]> = this.designerItemModel.rowActionButtonComponents$.pipe(\n    map((rowActionButtons) => {\n      return rowActionButtons.map((rowActionButtonComponent) => {\n        const actions = rowActionButtonComponent.children.map((action) => omit(action, 'type', 'children'));\n\n        return {\n          ...pick(rowActionButtonComponent.data, [\n            'recordDefinitionName',\n            'recordInstance',\n            'fieldId',\n            'icon',\n            'disabled',\n            'hidden',\n            'label',\n            RX_AVAILABLE_ON_DEVICES_PROP_NAME\n          ]),\n          guid: rowActionButtonComponent.guid,\n          actions\n        } as IRowAction;\n      });\n    }),\n    shareReplay(1)\n  );\n\n  constructor(\n    protected injector: Injector,\n    private rxModalService: RxModalService,\n    private translateService: TranslateService\n  ) {\n    super(injector);\n  }\n\n  openEditor(rowActionIndex?: number, activeActionIndex?: number): void {\n    this.rowActions$\n      .pipe(\n        take(1),\n        switchMap((rowActions) =>\n          from(\n            this.rxModalService.openModal({\n              content: RecordGridRowActionEditorModalComponent,\n              title: this.translateService.instant(\n                'com.bmc.arsys.rx.client.view-components.record-grid-row-actions.modal.title'\n              ),\n              size: OpenViewActionModalSize.Large as any,\n              testID: 'edit-row-actions',\n              data: {\n                expressionConfigurator: this.designerItemModel.expressionConfigurator,\n                isReadOnly: this.isDisabled,\n                rowActionIndex,\n                rowActions,\n                activeActionIndex\n              }\n            })\n          )\n        )\n      )\n      .subscribe({\n        next: (newRowActions) => this.designerItemModel.setRowActions(newRowActions),\n        error: noop\n      });\n  }\n\n  trackByForRowActions(index: number, rowAction: IRowAction): string {\n    return rowAction.label;\n  }\n\n  removeRowAction(index: number, rowActions: IRowAction[]): void {\n    this.rxModalService\n      .confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.translateService.instant(\n          'com.bmc.arsys.rx.client.view-components.record-grid-row-actions.row-action-delete.warning',\n          { name: rowActions[index].label }\n        )\n      })\n      .then((response) => {\n        if (response) {\n          rowActions.splice(index, 1);\n          this.designerItemModel.setRowActions(rowActions);\n        }\n      });\n  }\n\n  focus(data: RecordGridRowActionValidationIssue['data']): void {\n    this.openEditor(data.rowActionIndex, data.actionIndex);\n  }\n}\n","<adapt-button btn-type=\"tertiary\" rx-id=\"open-row-action-editor-modal-button\" class=\"p-0 pb-1\" (click)=\"openEditor()\">\n  <span class=\"d-icon-plus_circle\"></span>\n  Edit row actions\n</adapt-button>\n\n<div *ngIf=\"rowActions$ | async as rowActions\">\n  <span rx-id=\"no-row-actions\" *ngIf=\"rowActions.length === 0\" class=\"text-tertiary\"> No row actions added. </span>\n  <div\n    rx-id=\"row-actions-list\"\n    class=\"rx-selected-row-action\"\n    *ngFor=\"let rowAction of rowActions; let index = index; trackBy: trackByForRowActions\"\n  >\n    <div class=\"rx-selected-row-action__header-container\">\n      <span rx-id=\"row-action\" class=\"rx-selected-row-action__header-title\" [title]=\"rowAction.label\">\n        {{ rowAction.label }}\n      </span>\n\n      <button\n        type=\"button\"\n        class=\"rx-button-unstyled d-icon-left-pencil btn-link\"\n        rx-id=\"edit-button\"\n        (click)=\"openEditor(index)\"\n      ></button>\n      <button\n        type=\"button\"\n        class=\"rx-button-unstyled d-icon-cross btn-link\"\n        rx-id=\"remove-button\"\n        (click)=\"removeRowAction(index, rowActions)\"\n      ></button>\n    </div>\n  </div>\n</div>\n"]}