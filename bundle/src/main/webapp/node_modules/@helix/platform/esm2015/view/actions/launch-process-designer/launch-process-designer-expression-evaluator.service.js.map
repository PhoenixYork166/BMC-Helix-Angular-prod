{"version":3,"file":"launch-process-designer-expression-evaluator.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/actions/launch-process-designer/launch-process-designer-expression-evaluator.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAwB,mCAAmC,EAAE,MAAM,0BAA0B,CAAC;AAErG,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;;;AAGlE,MAAM,OAAO,iDAAiD;IAC5D,YAAoB,mCAAwE;QAAxE,wCAAmC,GAAnC,mCAAmC,CAAqC;IAAG,CAAC;IAEhG,QAAQ,CAAC,UAAkB,EAAE,IAAY;QACvC,IAAI,mBAAmB,GAAG,UAAU,CAAC;QAErC,IAAI,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YAClE,mBAAmB,GAAG,IAAI,CAAC,mCAAmC,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;SAC3F;QAED,OAAO,mBAAmB,CAAC;IAC7B,CAAC;IAED,eAAe,CAAC,UAAU;QACxB,IAAI,gBAAgB,CAAC;QAErB,IAAI,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YAClE,gBAAgB,GAAG,IAAI,CAAC,mCAAmC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;SACzF;QAED,OAAO,gBAAgB,CAAC;IAC1B,CAAC;;8IArBU,iDAAiD;kJAAjD,iDAAiD;2FAAjD,iDAAiD;kBAD7D,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { IExpressionEvaluator, RxDefaultExpressionEvaluatorService } from '@helix/platform/view/api';\nimport { Expression } from 'jsep';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\n\n@Injectable()\nexport class RxLaunchProcessDesignerExpressionEvaluatorService implements IExpressionEvaluator {\n  constructor(private rxDefaultExpressionEvaluatorService: RxDefaultExpressionEvaluatorService) {}\n\n  evaluate(expression: string, data: object): string {\n    let evaluatedExpression = expression;\n\n    if (!RX_RECORD_DEFINITION.validFullDefinitionName.test(expression)) {\n      evaluatedExpression = this.rxDefaultExpressionEvaluatorService.evaluate(expression, data);\n    }\n\n    return evaluatedExpression;\n  }\n\n  parseExpression(expression): Expression {\n    let parsedExpression;\n\n    if (!RX_RECORD_DEFINITION.validFullDefinitionName.test(expression)) {\n      parsedExpression = this.rxDefaultExpressionEvaluatorService.parseExpression(expression);\n    }\n\n    return parsedExpression;\n  }\n}\n"]}