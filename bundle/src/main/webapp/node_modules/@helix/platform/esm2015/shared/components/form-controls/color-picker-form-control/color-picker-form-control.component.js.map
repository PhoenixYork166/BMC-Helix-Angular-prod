{"version":3,"file":"color-picker-form-control.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/shared/components/form-controls/color-picker-form-control/color-picker-form-control.component.ts","../../../../../../../../libs/platform/shared/components/form-controls/color-picker-form-control/color-picker-form-control.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACjD,OAAO,EAAE,iBAAiB,EAAE,MAAM,gBAAgB,CAAC;AAEnD,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAC5D,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;;;;;AAelE,MAAM,OAAO,+BAAgC,SAAQ,aAAqB;IASxE,YAAoB,mBAAwC;QAC1D,KAAK,EAAE,CAAC;QADU,wBAAmB,GAAnB,mBAAmB,CAAqB;IAE5D,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,IAAI,KAAK,CAAC,KAAa;QACrB,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;YAC5D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACvD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;IACH,CAAC;IAED,YAAY,CAAC,KAAa;QACxB,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;YAC3E,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SAC7D;IACH,CAAC;IAED,QAAQ,CAAC,KAAY;QACnB,IAAI,CAAC,KAAK,GAAG,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,KAAI,MAAM,CAAC;IACtC,CAAC;;4HAhCU,+BAA+B;gHAA/B,+BAA+B,iHAR/B;QACT;YACE,OAAO,EAAE,iBAAiB;YAC1B,WAAW,EAAE,+BAA+B;YAC5C,KAAK,EAAE,IAAI;SACZ;KACF,iDCjBH,0YAWA;2FDQa,+BAA+B;kBAX3C,SAAS;mBAAC;oBACT,QAAQ,EAAE,8BAA8B;oBACxC,WAAW,EAAE,4CAA4C;oBACzD,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,iBAAiB;4BAC1B,WAAW,iCAAiC;4BAC5C,KAAK,EAAE,IAAI;yBACZ;qBACF;iBACF;0GAGC,OAAO;sBADN,KAAK;gBAIN,UAAU;sBADT,KAAK","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IFormControlComponent } from '@helix/platform/shared/api';\nimport { RxColorUtilsService } from '@helix/platform/utils';\nimport { ValueAccessor } from '../../form-builder/value-accessor';\nimport { IColorPickerFormControlOptions } from './color-picker-form-control-options.interface';\nimport { Color } from '@bmc-ux/adapt-angular';\n\n@Component({\n  selector: 'rx-color-picker-form-control',\n  templateUrl: './color-picker-form-control.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: ColorPickerFormControlComponent,\n      multi: true\n    }\n  ]\n})\nexport class ColorPickerFormControlComponent extends ValueAccessor<string> implements IFormControlComponent {\n  @Input()\n  options: IColorPickerFormControlOptions;\n\n  @Input()\n  isDisabled: boolean;\n\n  private colorValue: string;\n\n  constructor(private rxColorUtilsService: RxColorUtilsService) {\n    super();\n  }\n\n  get color(): string {\n    return this.colorValue;\n  }\n\n  set color(color: string) {\n    if (!this.rxColorUtilsService.isSameColor(color, this.value)) {\n      this.value = this.rxColorUtilsService.normalize(color);\n      this.colorValue = color;\n    }\n  }\n\n  onWriteValue(value: string): void {\n    if (!this.color || !this.rxColorUtilsService.isSameColor(this.color, value)) {\n      this.colorValue = this.rxColorUtilsService.normalize(value);\n    }\n  }\n\n  setColor(color: Color): void {\n    this.color = color?.value || 'null';\n  }\n}\n","<div class=\"form-group\">\n  <adapt-rx-control-label [showRequiredLabel]=\"options.required\" [label]=\"options.label\"></adapt-rx-control-label>\n\n  <adapt-color-picker\n    [disabled]=\"isDisabled\"\n    [(ngModel)]=\"color\"\n    [showEmptyOption]=\"!options.required\"\n    [showRecentlyUsedColors]=\"false\"\n    (onSelectColor)=\"setColor($event)\"\n  ></adapt-color-picker>\n</div>\n"]}