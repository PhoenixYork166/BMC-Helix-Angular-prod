{"version":3,"file":"integer-field-definition.service.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/record/designer/record-designer/services/integer-field-definition.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAClE,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAG3C,OAAO,EAAE,+BAA+B,EAAE,MAAM,oCAAoC,CAAC;AACrF,OAAO,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAC;;AAKlD,MAAM,OAAO,+BAAgC,SAAQ,+BAA+B;IAHpF;;QAIE,iBAAY,GAAG,oBAAoB,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC;QACnE,iBAAY,GAAG,IAAI,CAAC;QACpB,iBAAY,GAAG,IAAI,CAAC;QACpB,aAAQ,GAAG,SAAS,CAAC,UAAU,CAAC;QAChC,aAAQ,GAAG,SAAS,CAAC,UAAU,CAAC;QAChC,qBAAgB,GAAG,IAAI,CAAC;KAsBzB;IApBC,0BAA0B,CAAC,eAAqD;QAC9E,OAAO,KAAK,CAAC,0BAA0B,iCAClC,eAAe,KAClB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ,IACvB,CAAC;IACL,CAAC;IAED,uBAAuB,CACrB,UAAuC,EACvC,eAAuC,EACvC,UAAmB;QAEnB,MAAM,eAAe,GAAG,KAAK,CAAC,uBAAuB,CAAC,UAAU,EAAE,eAAe,EAAE,UAAU,CAAC,CAAC;QAE/F,4DAA4D;QAC5D,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEzC,OAAO,eAAe,CAAC;IACzB,CAAC;;4HA3BU,+BAA+B;gIAA/B,+BAA+B,cAF9B,MAAM;2FAEP,+BAA+B;kBAH3C,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { Injectable } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { RxNumericFieldDefinitionService } from './numeric-field-definition.service';\nimport { RX_NUMBER } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxIntegerFieldDefinitionService extends RxNumericFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.integer.resourceType;\n  minPrecision = null;\n  maxPrecision = null;\n  minValue = RX_NUMBER.minInteger;\n  maxValue = RX_NUMBER.maxInteger;\n  allowOnlyInteger = true;\n\n  getNewFieldDefinitionModel(fieldProperties: Partial<IRecordFieldDefinitionModel>) {\n    return super.getNewFieldDefinitionModel({\n      ...fieldProperties,\n      minValue: this.minValue,\n      maxValue: this.maxValue\n    });\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    // Removing Precision control not required for integer field\n    inspectorConfig[1].controls.splice(7, 1);\n\n    return inspectorConfig;\n  }\n}\n"]}