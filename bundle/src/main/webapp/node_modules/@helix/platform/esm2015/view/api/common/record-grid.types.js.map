{"version":3,"file":"record-grid.types.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/api/common/record-grid.types.ts"],"names":[],"mappings":"AAOA,MAAM,CAAC,MAAM,sBAAsB,GAAG,MAAM,CAAC;AAM7C,MAAM,CAAN,IAAY,mBAQX;AARD,WAAY,mBAAmB;IAC7B,wCAAiB,CAAA;IACjB,wCAAiB,CAAA;IACjB,8CAAuB,CAAA;IACvB,sCAAe,CAAA;IACf,sCAAe,CAAA;IACf,sCAAe,CAAA;IACf,kCAAW,CAAA;AACb,CAAC,EARW,mBAAmB,KAAnB,mBAAmB,QAQ9B","sourcesContent":["import { IFieldDefinition } from '@helix/platform/record/api';\nimport { Observable } from 'rxjs';\nimport { SelectedAdvancedFilter } from '@bmc-ux/adapt-angular';\nimport { IRecordGridFilterData } from './record-grid-query-filter.types';\nimport { RowDataItem } from '@bmc-ux/adapt-table';\nimport { IViewPresetApi } from './view-preset.types';\n\nexport const RowDataItemIdFieldName = '$ID$';\n\nexport interface IRowDataItem extends RowDataItem {\n  [RowDataItemIdFieldName]: string;\n}\n\nexport enum ApplyGridFilterMode {\n  Append = 'Append',\n  Remove = 'Remove',\n  Overwrite = 'Overwrite',\n  Merge = 'Merge',\n  Clear = 'Clear',\n  Begin = 'Begin',\n  End = 'End'\n}\n\nexport interface IRecordGridColumnPublicProperties {\n  field: string;\n  header: string;\n  hidden: boolean;\n  fieldDefinition: IFieldDefinition;\n}\n\nexport interface IRxRecordGridApi extends IViewPresetApi {\n  refresh: () => Observable<never>;\n  setFilter: (filters: SelectedAdvancedFilter[]) => void;\n  getColumns: () => IRecordGridColumnPublicProperties[];\n  getRecordDefinitionName: () => string;\n  getSelectedRows: (inSortOrder?: boolean) => IRowDataItem[];\n  setSelectedRows: (selectedRows: IRowDataItem[]) => void;\n  getFirstSelectedRow: () => IRowDataItem;\n  getSelectedRowCount: () => number;\n  getVisibleRows: () => IRowDataItem[];\n  applyFilters: (filters: IRecordGridFilterData, mode: ApplyGridFilterMode) => void;\n}\n"]}