{"version":3,"file":"integer-field-definition.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/config/designer/services/integer-field-definition.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAElE,OAAO,EAAE,2BAA2B,EAA8B,MAAM,mCAAmC,CAAC;AAC5G,OAAO,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAC;AAClD,OAAO,EAAE,6BAA6B,EAAE,MAAM,oCAAoC,CAAC;;AAKnF,MAAM,OAAO,6BAA8B,SAAQ,6BAA6B;IAHhF;;QAIE,aAAQ,GAAG,oBAAoB,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC;QAC/D,aAAQ,GAAG,SAAS,CAAC,UAAU,CAAC;QAChC,aAAQ,GAAG,SAAS,CAAC,UAAU,CAAC;KA+CjC;IA7CC,uBAAuB,CAAC,OAAsB;QAC5C,MAAM,eAAe,GAAG,KAAK,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;QAE/D,+DAA+D;QAC/D,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAChC,CAAC,EACD,CAAC,EACD;YACE,IAAI,EAAE,UAAU;YAChB,SAAS,EAAE,2BAA2B;YACtC,OAAO,EAAE;gBACP,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAClC,2EAA2E,CAC5E;gBACD,QAAQ,EAAE,SAAS,CAAC,UAAU;gBAC9B,QAAQ,EAAE,SAAS,CAAC,UAAU;gBAC9B,gBAAgB,EAAE,IAAI;aACO;SAChC,EACD;YACE,IAAI,EAAE,UAAU;YAChB,SAAS,EAAE,2BAA2B;YACtC,OAAO,EAAE;gBACP,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAClC,2EAA2E,CAC5E;gBACD,QAAQ,EAAE,SAAS,CAAC,UAAU;gBAC9B,QAAQ,EAAE,SAAS,CAAC,UAAU;gBAC9B,gBAAgB,EAAE,IAAI;aACO;SAChC,EACD;YACE,IAAI,EAAE,cAAc;YACpB,SAAS,EAAE,2BAA2B;YACtC,OAAO,EAAE;gBACP,gBAAgB,EAAE,IAAI;gBACtB,QAAQ,EAAE,SAAS,CAAC,UAAU;gBAC9B,QAAQ,EAAE,SAAS,CAAC,UAAU;gBAC9B,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,oDAAoD,CAAC;aAC7D;SAChC,CACF,CAAC;QAEF,OAAO,eAAe,CAAC;IACzB,CAAC;;0HAjDU,6BAA6B;8HAA7B,6BAA6B,cAF5B,MAAM;2FAEP,6BAA6B;kBAHzC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { CounterFormControlComponent, ICounterFormControlOptions } from '@helix/platform/shared/components';\nimport { RX_NUMBER } from '@helix/platform/utils';\nimport { NumericFieldDefinitionService } from './numeric-field-definition.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IntegerFieldDefinitionService extends NumericFieldDefinitionService {\n  dataType = RX_RECORD_DEFINITION.dataTypes.integer.resourceType;\n  minValue = RX_NUMBER.minInteger;\n  maxValue = RX_NUMBER.maxInteger;\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(options);\n\n    // Adding controls specific to integer field to Details section\n    inspectorConfig[1].controls.splice(\n      1,\n      0,\n      {\n        name: 'minValue',\n        component: CounterFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n          ),\n          minValue: RX_NUMBER.minInteger,\n          maxValue: RX_NUMBER.maxInteger,\n          allowIntegerOnly: true\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'maxValue',\n        component: CounterFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n          ),\n          minValue: RX_NUMBER.minInteger,\n          maxValue: RX_NUMBER.maxInteger,\n          allowIntegerOnly: true\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'defaultValue',\n        component: CounterFormControlComponent,\n        options: {\n          allowIntegerOnly: true,\n          minValue: RX_NUMBER.minInteger,\n          maxValue: RX_NUMBER.maxInteger,\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n        } as ICounterFormControlOptions\n      }\n    );\n\n    return inspectorConfig;\n  }\n}\n"]}