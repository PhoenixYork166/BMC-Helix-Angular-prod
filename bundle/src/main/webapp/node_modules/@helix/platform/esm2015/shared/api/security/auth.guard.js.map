{"version":3,"file":"auth.guard.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/api/security/auth.guard.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAuC,MAAM,EAAgC,MAAM,iBAAiB,CAAC;AAC5G,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAC9B,OAAO,EAAE,KAAK,EAAc,MAAM,MAAM,CAAC;AACzC,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AACjD,OAAO,EAAE,cAAc,EAAE,MAAM,qCAAqC,CAAC;AACrE,OAAO,EAAE,oBAAoB,EAAE,MAAM,8BAA8B,CAAC;AACpE,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAC/C,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAChD,OAAO,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;AACrD,OAAO,EAAE,oBAAoB,EAAE,MAAM,iCAAiC,CAAC;;;;;;;AAKvE,MAAM,OAAO,WAAW;IACtB,YACU,MAAc,EACd,aAA4B,EAC5B,gBAAkC,EAClC,oBAA0C,EAC1C,oBAA0C;QAJ1C,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAe;QAC5B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,yBAAoB,GAApB,oBAAoB,CAAsB;IACjD,CAAC;IAEJ,WAAW,CAAC,IAA4B,EAAE,KAA0B;QAClE,OAAO,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,IAAI,CAC7C,GAAG,CAAC,GAAG,EAAE;YACP,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YAE1C,IACE,aAAa,KAAK,cAAc,CAAC,wBAAwB;gBACzD,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,eAAe,EAAE,IAAI,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,CAAC,EAC/F;gBACA,IAAI,CAAC,oBAAoB,CAAC,aAAa,GAAG,cAAc,CAAC,wBAAwB,CAAC;gBAElF,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;aAC9C;YAED,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,EACF,UAAU,CAAC,CAAC,KAAwB,EAAE,EAAE;YACtC,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,KAAK,UAAU,CAAC,gBAAgB,CAAC,IAAI,EAAE;gBAC/E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC;gBAElD,OAAO,KAAK,CAAC;aACd;YAED,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC;YAEzC,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;wGArCU,WAAW;4GAAX,WAAW,cAFV,MAAM;2FAEP,WAAW;kBAHvB,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { head } from 'lodash';\nimport { EMPTY, Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { RX_APPLICATION } from '../application/application.constant';\nimport { RxCurrentUserService } from '../user/current-user.service';\nimport { RxAuthService } from './auth.service';\nimport { RX_SESSION } from './session.constant';\nimport { RxSessionService } from './session.service';\nimport { RxGlobalCacheService } from '../caching/global-cache.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxAuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private rxAuthService: RxAuthService,\n    private rxSessionService: RxSessionService,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxGlobalCacheService: RxGlobalCacheService\n  ) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<UrlTree | boolean> {\n    return this.rxSessionService.initSession().pipe(\n      map(() => {\n        const applicationId = head(next.url).path;\n\n        if (\n          applicationId === RX_APPLICATION.innovationStudioBundleId &&\n          !(this.rxCurrentUserService.isAdministrator() || this.rxCurrentUserService.isBusinessAnalyst())\n        ) {\n          this.rxGlobalCacheService.applicationId = RX_APPLICATION.innovationStudioBundleId;\n\n          return this.router.parseUrl('access-denied');\n        }\n\n        return true;\n      }),\n      catchError((error: HttpErrorResponse) => {\n        if (error.headers.get('sso-provider-type') === RX_SESSION.ssoProviderTypes.rsso) {\n          this.router.navigate(['unsupported-environment']);\n\n          return EMPTY;\n        }\n\n        this.rxAuthService.redirectToLoginPage();\n\n        return EMPTY;\n      })\n    );\n  }\n}\n"]}