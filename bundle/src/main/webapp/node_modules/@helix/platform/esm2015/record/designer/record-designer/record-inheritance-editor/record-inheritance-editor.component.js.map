{"version":3,"file":"record-inheritance-editor.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/record/designer/record-designer/record-inheritance-editor/record-inheritance-editor.component.ts","../../../../../../../../libs/platform/record/designer/record-designer/record-inheritance-editor/record-inheritance-editor.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IPlainObject, RxNotificationService } from '@helix/platform/shared/api';\nimport { forEach, includes, isEmpty, keys, map as _map, pick, remove, some, union } from 'lodash';\nimport {\n  IFieldDefinition,\n  IRecordDefinition,\n  RX_RECORD_DEFINITION,\n  RxRecordDefinitionCacheService,\n  RxFieldDefinitionService\n} from '@helix/platform/record/api';\nimport {\n  IDefinitionPickerComponentOptions,\n  RxDefinitionPickerScope,\n  RxDefinitionPickerType,\n  ValueAccessor\n} from '@helix/platform/shared/components';\nimport {\n  IInheritanceDescriptor,\n  IInheritanceOptions,\n  IInheritanceSelectorControlValue,\n  IRecordInheritanceSelectorOptions\n} from './record-inheritance-editor.interfaces';\nimport { BehaviorSubject, combineLatest, iif, of, ReplaySubject } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RxFieldDefinitionManagerService } from '../services/field-definition-manager.service';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { RxGuidService } from '@helix/platform/utils';\n\n@Component({\n  selector: 'rx-record-inheritance-selector',\n  templateUrl: './record-inheritance-editor.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RecordInheritanceEditorComponent,\n      multi: true\n    }\n  ]\n})\nexport class RecordInheritanceEditorComponent\n  extends ValueAccessor<IInheritanceSelectorControlValue>\n  implements OnChanges\n{\n  @Input()\n  options: IRecordInheritanceSelectorOptions;\n\n  inheritFrom: string;\n  isInheritingCoreFields: boolean;\n  state: IPlainObject;\n  private inheritedFieldDefinitions: IRecordFieldDefinitionModel[];\n  private inheritFromRecordDefinition: IRecordDefinitionModel;\n  private isNew: boolean;\n\n  inheritanceDescriptor: IInheritanceDescriptor | null = {\n    inheritingFrom: '',\n    isInheritingRules: true,\n    isInheritingFieldPermissions: true,\n    isInheritingAssociations: true,\n    isInheritingFieldAuditOptions: true\n  };\n\n  inheritanceOptions: IInheritanceOptions;\n\n  recordDefinitionPickerOptions: IDefinitionPickerComponentOptions = {\n    label: this.translateService.instant(\n      'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.record-to-inherit.label'\n    ),\n    definitionType: RxDefinitionPickerType.InheritableRecord,\n    availableDefinitionPickerStates: {\n      definitionButtonsGroups: [RxDefinitionPickerScope.Bundle, RxDefinitionPickerScope.All],\n      search: RxDefinitionPickerScope.All\n    }\n  };\n\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n  private isReadOnlySubject = new BehaviorSubject(false);\n  private isSharedInstanceStorageLockedSubject = new BehaviorSubject(true);\n  private inheritingFromSubject = new BehaviorSubject('');\n  private isMakeFinalDisabledSubject = new BehaviorSubject(false);\n\n  private isSharedInstanceStorageDisabled$ = combineLatest([\n    this.isReadOnlySubject,\n    this.isSharedInstanceStorageLockedSubject\n  ]).pipe(map(([isReadOnly, isSharedInstanceStorage]) => isReadOnly || isSharedInstanceStorage));\n\n  private inheritFromRecordDefinition$ = this.inheritingFromSubject.pipe(\n    switchMap((recordDefinitionName) =>\n      iif(\n        () => Boolean(recordDefinitionName),\n        this.rxRecordDefinitionCacheService.getRecordDefinition(recordDefinitionName),\n        of(null)\n      )\n    ),\n    tap((recordDefinition: IRecordDefinition) => {\n      if (recordDefinition) {\n        this.inheritFromRecordDefinition = recordDefinition as IRecordDefinitionModel;\n        this.isInheritingCoreFields = false;\n\n        if (recordDefinition.isSharedInstanceStorage) {\n          this.inheritanceOptions.isSharedInstanceStorage = true;\n          this.updateInheritanceOptions();\n          this.state.inheritCoreFieldsAutomatically = true;\n          this.isInheritingCoreFields = true;\n        } else {\n          if (this.isNew) {\n            this.inheritanceOptions.isSharedInstanceStorage = false;\n          }\n\n          this.state.inheritCoreFieldsAutomatically = false;\n        }\n\n        this.inheritanceDescriptor.isInheritingRules = true;\n        this.inheritedFieldDefinitions = this.getInheritedFieldDefinitions(recordDefinition);\n\n        forEach(recordDefinition.securityLabels, function (securityLabel) {\n          securityLabel.inherited = true;\n        });\n\n        this.setValue();\n      }\n    })\n  );\n\n  private isCoreFieldsOptionDisabled$ = combineLatest([this.isReadOnlySubject, this.inheritFromRecordDefinition$]).pipe(\n    map(\n      ([isReadOnly, inheritingFromRecordDefinition]) =>\n        !this.inheritFrom ||\n        isReadOnly ||\n        this.state.inheritCoreFieldsAutomatically ||\n        this.state.lockCoreFieldInheritanceOption\n    )\n  );\n\n  vm$ = combineLatest([\n    this.isReadOnlySubject,\n    this.isSharedInstanceStorageDisabled$,\n    this.isMakeFinalDisabledSubject,\n    this.isCoreFieldsOptionDisabled$\n  ]).pipe(\n    map(([isReadOnly, isSharedInstanceStorageDisabled, isMakeFinalDisabled, isCoreFieldsOptionDisabled]) => ({\n      isReadOnly,\n      isSharedInstanceStorageDisabled,\n      isMakeFinalDisabled,\n      isCoreFieldsOptionDisabled\n    }))\n  );\n\n  constructor(\n    private translateService: TranslateService,\n    private rxFieldDefinitionManagerService: RxFieldDefinitionManagerService,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxNotificationService: RxNotificationService,\n    private rxGuidService: RxGuidService,\n    private rxFieldDefinitionService: RxFieldDefinitionService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.options) {\n      this.updateValues();\n    }\n  }\n\n  private updateInheritanceOptions(): void {\n    this.isMakeFinalDisabledSubject.next(\n      this.isReadOnlySubject.value ||\n        (this.inheritanceOptions.isSharedInstanceStorage && !this.inheritingFromSubject.value)\n    );\n\n    if (\n      this.inheritanceOptions.isSharedInstanceStorage &&\n      this.inheritanceOptions.isFinal &&\n      !this.inheritFromRecordDefinition\n    ) {\n      this.inheritanceOptions.isFinal = false;\n    }\n  }\n\n  onInheritanceOptionsChange(): void {\n    this.updateInheritanceOptions();\n    this.setValue();\n  }\n\n  onInheritanceDescriptorChange(): void {\n    if (this.inheritanceDescriptor.isInheritingFieldPermissions) {\n      this.inheritedFieldDefinitions = this.getInheritedFieldDefinitions(this.inheritFromRecordDefinition);\n    }\n\n    this.setValue();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options) {\n      this.updateValues();\n    }\n  }\n\n  onRecordDefinitionNameChange(recordDefinitionName: string): void {\n    this.rxNotificationService.addInfoMessage(\n      this.translateService.instant(\n        'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.inherited-fields-remaining-info.message'\n      )\n    );\n\n    if (recordDefinitionName) {\n      this.inheritingFromSubject.next(recordDefinitionName);\n    } else {\n      this.inheritedFieldDefinitions = [];\n      this.setValue();\n    }\n  }\n\n  onInheritCoreFieldsChange(): void {\n    this.inheritedFieldDefinitions = this.getInheritedFieldDefinitions(this.inheritFromRecordDefinition);\n\n    this.setValue();\n  }\n\n  private getInheritedFieldDefinitions(recordDefinition: IRecordDefinition): IRecordFieldDefinitionModel[] {\n    const newFieldProperties = union(\n      keys(\n        this.rxFieldDefinitionManagerService.getNewFieldDefinitionModel(\n          RX_RECORD_DEFINITION.resourceTypes.character,\n          null\n        )\n      ),\n      [\n        'isInherited',\n        'anyUserAllowedToSubmit',\n        'displayType',\n        'explicitPermissions',\n        'fieldMapping',\n        'fieldTypeName',\n        'maxLength',\n        'maxSize',\n        'maxValue',\n        'minValue',\n        'namedListDefinition',\n        'optionNamesById',\n        'optionLabelsById',\n        'precision',\n        'resourceType',\n        'searchable',\n        'shouldPersistEncrypted',\n        'shouldPersistHashed',\n        'tags',\n        'version'\n      ]\n    );\n\n    if (this.inheritanceDescriptor?.isInheritingFieldPermissions) {\n      newFieldProperties.push('permissions');\n    }\n\n    const inheritedFieldDefinitions: IRecordFieldDefinitionModel[] = _map(\n      recordDefinition.fieldDefinitions,\n      (fieldDefinition: IFieldDefinition) => {\n        fieldDefinition.isInherited = true;\n\n        return {\n          ...pick(fieldDefinition, newFieldProperties),\n          guid: this.rxGuidService.generate(),\n          isCoreField: this.rxFieldDefinitionService.isCoreField(fieldDefinition),\n          selectionFieldOptionProperties:\n            fieldDefinition.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType\n              ? {\n                  defaultValue: null,\n                  optionNamesById: fieldDefinition.optionNamesById,\n                  optionLabelsById: fieldDefinition.optionLabelsById\n                }\n              : null\n        } as IRecordFieldDefinitionModel;\n      }\n    );\n\n    if (!this.isInheritingCoreFields) {\n      remove(inheritedFieldDefinitions, function (fieldDefinition) {\n        return includes(RX_RECORD_DEFINITION.arCoreFieldIds, fieldDefinition.id);\n      });\n    }\n\n    return inheritedFieldDefinitions;\n  }\n\n  private updateValues(): void {\n    if (this.options) {\n      const recordDefinition = this.options.recordDefinition;\n      this.inheritanceOptions = { ...recordDefinition.recordInheritanceSelector.inheritanceOptions };\n\n      if (recordDefinition.recordInheritanceSelector.inheritanceDescriptor) {\n        this.inheritanceDescriptor = { ...recordDefinition.recordInheritanceSelector.inheritanceDescriptor };\n        this.inheritFrom = this.inheritanceDescriptor.inheritingFrom;\n      }\n\n      this.isNew = !recordDefinition.lastUpdateTime;\n\n      this.isReadOnlySubject.next(this.options.isReadOnly);\n      this.isSharedInstanceStorageLockedSubject.next(!this.isNew || !isEmpty(this.inheritFrom));\n\n      if (recordDefinition.inheritanceDescriptor?.inheritingFrom) {\n        this.isSharedInstanceStorageLockedSubject.next(true);\n\n        this.rxRecordDefinitionCacheService\n          .getRecordDefinition(recordDefinition.inheritanceDescriptor.inheritingFrom)\n          .pipe(take(1))\n          .subscribe((inheritFromRecordDefinition) => {\n            if (inheritFromRecordDefinition.isSharedInstanceStorage) {\n              this.state.inheritCoreFieldsAutomatically = true;\n              this.isInheritingCoreFields = true;\n            } else {\n              var fieldDefinitions = recordDefinition.fields;\n\n              this.isInheritingCoreFields = some(fieldDefinitions, function (fieldDefinition) {\n                return fieldDefinition.isInherited && includes(RX_RECORD_DEFINITION.arCoreFieldIds, fieldDefinition.id);\n              });\n            }\n          });\n      }\n\n      this.state = {\n        editMode: !this.isNew,\n        inheritCoreFieldsAutomatically: false,\n        lockCoreFieldInheritanceOption: !this.isNew\n      };\n    }\n  }\n\n  setValue(): void {\n    this.value = {\n      inheritanceOptions: this.inheritanceOptions,\n      inheritanceDescriptor: this.inheritFrom\n        ? { ...this.inheritanceDescriptor, inheritingFrom: this.inheritFrom }\n        : null,\n      isInheritingCoreFields: this.inheritFrom ? this.isInheritingCoreFields : null,\n      inheritedFieldDefinitions: this.inheritedFieldDefinitions\n    };\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n    this.isReadOnlySubject.complete();\n    this.isSharedInstanceStorageLockedSubject.complete();\n    this.inheritingFromSubject.complete();\n    this.isMakeFinalDisabledSubject.complete();\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <adapt-rx-checkbox\n    label=\"{{\n      'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.share-data-with-inheritors.label' | translate\n    }}\"\n    [(ngModel)]=\"inheritanceOptions.isSharedInstanceStorage\"\n    (ngModelChange)=\"onInheritanceOptionsChange()\"\n    [disabled]=\"vm.isSharedInstanceStorageDisabled\"\n    [tooltip]=\"{\n      iconName: 'question_circle_o',\n      content:\n        'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.share-data-with-inheritors.tooltip'\n        | translate,\n      placement: 'bottom',\n      popoverMode: true\n    }\"\n  >\n  </adapt-rx-checkbox>\n\n  <adapt-rx-checkbox\n    label=\"{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.make-abstract.label' | translate }}\"\n    [(ngModel)]=\"inheritanceOptions.isAbstract\"\n    (ngModelChange)=\"onInheritanceOptionsChange()\"\n    [disabled]=\"vm.isReadOnly\"\n    [tooltip]=\"{\n      iconName: 'question_circle_o',\n      content: 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.make-abstract.tooltip' | translate,\n      placement: 'bottom',\n      popoverMode: true\n    }\"\n  >\n  </adapt-rx-checkbox>\n\n  <adapt-rx-checkbox\n    label=\"{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.make-final.label' | translate }}\"\n    [(ngModel)]=\"inheritanceOptions.isFinal\"\n    (ngModelChange)=\"onInheritanceOptionsChange()\"\n    [disabled]=\"vm.isMakeFinalDisabled || vm.isReadOnly\"\n    [tooltip]=\"{\n      iconName: 'question_circle_o',\n      content: 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.make-final.tooltip' | translate,\n      placement: 'bottom',\n      popoverMode: true\n    }\"\n  >\n  </adapt-rx-checkbox>\n\n  <rx-definition-picker\n    class=\"form-group d-block\"\n    name=\"inherit-from\"\n    rx-id=\"record-definition-name-field\"\n    [options]=\"recordDefinitionPickerOptions\"\n    [(ngModel)]=\"inheritFrom\"\n    (ngModelChange)=\"onRecordDefinitionNameChange($event)\"\n    [disabled]=\"vm.isReadOnly\"\n  >\n  </rx-definition-picker>\n\n  <div *ngIf=\"inheritFrom\">\n    <label>\n      <span>{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.inherit.label' | translate }}</span>\n    </label>\n\n    <adapt-rx-checkbox\n      label=\"{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.core-fields.label' | translate }}\"\n      [(ngModel)]=\"isInheritingCoreFields\"\n      (ngModelChange)=\"onInheritCoreFieldsChange()\"\n      [disabled]=\"vm.isCoreFieldsOptionDisabled\"\n    >\n    </adapt-rx-checkbox>\n\n    <adapt-rx-checkbox\n      label=\"{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.rules.label' | translate }}\"\n      [(ngModel)]=\"inheritanceDescriptor.isInheritingRules\"\n      [disabled]=\"vm.isReadOnly\"\n      (ngModelChange)=\"onInheritanceDescriptorChange()\"\n    >\n    </adapt-rx-checkbox>\n\n    <adapt-rx-checkbox\n      label=\"{{\n        'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.field-permissions.label' | translate\n      }}\"\n      [(ngModel)]=\"inheritanceDescriptor.isInheritingFieldPermissions\"\n      [disabled]=\"vm.isReadOnly\"\n      (ngModelChange)=\"onInheritanceDescriptorChange()\"\n    >\n    </adapt-rx-checkbox>\n\n    <adapt-rx-checkbox\n      label=\"{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.associations.label' | translate }}\"\n      [(ngModel)]=\"inheritanceDescriptor.isInheritingAssociations\"\n      [disabled]=\"vm.isReadOnly\"\n      (ngModelChange)=\"onInheritanceDescriptorChange()\"\n    >\n    </adapt-rx-checkbox>\n\n    <adapt-rx-checkbox\n      label=\"{{\n        'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.audit-field-properties.label' | translate\n      }}\"\n      [(ngModel)]=\"inheritanceDescriptor.isInheritingFieldAuditOptions\"\n      [disabled]=\"vm.isReadOnly\"\n      (ngModelChange)=\"onInheritanceDescriptorChange()\"\n    >\n    </adapt-rx-checkbox>\n  </div>\n</ng-container>\n"]}