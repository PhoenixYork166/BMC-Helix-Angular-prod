{"version":3,"file":"record-grid-view-preset-columns-modal.component.js","sourceRoot":"","sources":["../../../../../../../../../../../libs/platform/view/components/record-grid/design/editors/record-grid-view-presets-widget/record-grid-view-preset-columns-modal/record-grid-view-preset-columns-modal.component.ts","../../../../../../../../../../../libs/platform/view/components/record-grid/design/editors/record-grid-view-presets-widget/record-grid-view-preset-columns-modal/record-grid-view-preset-columns-modal.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Injector, OnInit } from '@angular/core';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { ActiveModalRef, DismissReasons } from '@bmc-ux/adapt-angular';\nimport {\n  IRecordGridViewPresetColumn,\n  IRecordGridViewPresetColumnsModalOptions,\n  IRecordGridViewPresetColumnsModalResult\n} from './record-grid-view-preset-columns-modal.types';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { cloneDeep, omit } from 'lodash';\nimport { IStepperWithUnitsFormControlOptions } from '@helix/platform/shared/components';\nimport { RX_RECORD_GRID } from '../../../../record-grid.constant';\n\n@Component({\n  selector: 'rx-record-grid-view-preset-columns-modal',\n  templateUrl: './record-grid-view-preset-columns-modal.component.html',\n  styleUrls: ['./record-grid-view-preset-columns-modal.component.scss']\n})\nexport class RecordGridViewPresetColumnsModalComponent extends RxModalClass implements OnInit {\n  params: IRecordGridViewPresetColumnsModalOptions = this.activeModalRef.getData();\n\n  presetColumns: IRecordGridViewPresetColumn[] = this.params.presetColumns.map((column, index) => {\n    const gridColumn = this.params.gridColumns.find((col) => col.fieldId === column.data.fieldId);\n\n    return {\n      ...cloneDeep(column),\n      isOpen: index === 0,\n      title: gridColumn.title,\n      fallbackTitle: gridColumn.fallbackTitle\n    };\n  });\n\n  isReadOnly = this.params.isReadOnly;\n\n  columnWidthPropertyOptions: IStepperWithUnitsFormControlOptions = RX_RECORD_GRID.columnProperties.find(\n    ({ name }) => name === 'width'\n  ).options as IStepperWithUnitsFormControlOptions;\n\n  constructor(private activeModalRef: ActiveModalRef, protected injector: Injector) {\n    super(activeModalRef, injector);\n\n    this.presetColumns.sort((a, b) => a.data.index - b.data.index);\n  }\n\n  expandAllColumns(event: MouseEvent): void {\n    event.stopPropagation();\n\n    this.presetColumns.forEach((column) => (column.isOpen = true));\n  }\n\n  collapseAllColumns(event: MouseEvent): void {\n    event.stopPropagation();\n\n    this.presetColumns.forEach((column) => (column.isOpen = false));\n  }\n\n  saveChanges(): void {\n    this.activeModalRef.close({\n      presetColumns: this.presetColumns.map((column) => omit(column, ['isOpen', 'title']))\n    } as IRecordGridViewPresetColumnsModalResult);\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  moveColumn(fromIndex: number, toIndex: number): void {\n    this.markAsDirty();\n    moveItemInArray(this.presetColumns, fromIndex, toIndex);\n    this.updateColumnIndexes();\n  }\n\n  onDropInSelectedColumnsContainer(event: CdkDragDrop<IRecordGridViewPresetColumn[]>) {\n    this.moveColumn(event.previousIndex, event.currentIndex);\n  }\n\n  trackByGuid(index: number, column: IRecordGridViewPresetColumn): string {\n    return column.guid;\n  }\n\n  private updateColumnIndexes(): void {\n    this.presetColumns.forEach((column, index) => {\n      column.data.index = index;\n    });\n  }\n}\n","<div class=\"designer-modal-body modal-body d-flex mh-100\">\n  <div class=\"row flex-grow-1 w-100\">\n    <div class=\"d-flex flex-column mh-100 col\">\n      <div class=\"d-flex justify-content-end\">\n        <div class=\"btn-group\">\n          <button\n            adapt-button\n            btn-type=\"tertiary\"\n            type=\"button\"\n            rx-id=\"expand-all-button\"\n            (click)=\"expandAllColumns($event)\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.expand-all.label' | translate }}\n          </button>\n\n          <button\n            adapt-button\n            btn-type=\"tertiary\"\n            type=\"button\"\n            rx-id=\"collapse-all-button\"\n            (click)=\"collapseAllColumns($event)\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.collapse-all.label' | translate }}\n          </button>\n        </div>\n      </div>\n\n      <div\n        class=\"designer-modal-accordion-wrapper\"\n        cdkDropList\n        [cdkDropListData]=\"presetColumns\"\n        (cdkDropListDropped)=\"onDropInSelectedColumnsContainer($event)\"\n      >\n        <adapt-accordion [multiselect]=\"true\">\n          <div\n            *ngFor=\"\n              let column of presetColumns;\n              let index = index;\n              let first = first;\n              let last = last;\n              trackBy: trackByGuid\n            \"\n            class=\"designer-modal-accordion-content\"\n            cdkDrag\n            [cdkDragDisabled]=\"isReadOnly\"\n            [cdkDragData]=\"column\"\n            cdkDragLockAxis=\"y\"\n          >\n            <div *ngIf=\"!isReadOnly\" class=\"designer-modal-drag-handle d-icon-left-dots\" cdkDragHandle></div>\n\n            <adapt-accordion-tab\n              class=\"d-block\"\n              [isOpen]=\"column.isOpen\"\n              (open)=\"column.isOpen = true\"\n              (close)=\"column.isOpen = false\"\n            >\n              <div class=\"card-title-text w-100\">\n                <div class=\"designer-modal-card-title-content\">\n                  <div class=\"left-header-block\" [class.pl-0]=\"isReadOnly\">\n                    <div class=\"rx-ellipsis\" [title]=\"column.title\">\n                      {{ column.title || column.fallbackTitle }}\n                    </div>\n\n                    <div *ngIf=\"column.data.visible\" class=\"designer-modal-card-sub-title ml-2\" [title]=\"column.title\">\n                      visible\n                    </div>\n                  </div>\n\n                  <div *ngIf=\"!isReadOnly\" class=\"right-header-block\">\n                    <div class=\"designer-modal-card-title-index-buttons\">\n                      <button\n                        class=\"d-icon-left-triangle_down rx-button-unstyled\"\n                        type=\"button\"\n                        [disabled]=\"last\"\n                        (click)=\"$event.stopPropagation(); moveColumn(index, index + 1)\"\n                        rx-id=\"move-down-button\"\n                      ></button>\n\n                      <button\n                        class=\"d-icon-left-triangle_up rx-button-unstyled\"\n                        type=\"button\"\n                        [disabled]=\"first\"\n                        (click)=\"$event.stopPropagation(); moveColumn(index, index - 1)\"\n                        rx-id=\"move-up-button\"\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <adapt-rx-textfield\n                label=\"Column header\"\n                [disabled]=\"true\"\n                [(ngModel)]=\"column.title\"\n              ></adapt-rx-textfield>\n\n              <adapt-rx-checkbox\n                label=\"Visible\"\n                [(ngModel)]=\"column.data.visible\"\n                [disabled]=\"isReadOnly\"\n                (ngModelChange)=\"markAsDirty()\"\n              ></adapt-rx-checkbox>\n\n              <rx-stepper-with-units-form-control\n                class=\"d-block col-5 p-0\"\n                [options]=\"columnWidthPropertyOptions\"\n                [(ngModel)]=\"column.data.width\"\n                (ngModelChange)=\"markAsDirty()\"\n              ></rx-stepper-with-units-form-control>\n            </adapt-accordion-tab>\n          </div>\n        </adapt-accordion>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal-footer\">\n  <button\n    *ngIf=\"!isReadOnly\"\n    adapt-button\n    btn-type=\"primary\"\n    type=\"button\"\n    rx-id=\"save-button\"\n    [disabled]=\"!isDirty()\"\n    (click)=\"saveChanges()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button adapt-button btn-type=\"secondary\" type=\"button\" rx-id=\"cancel-button\" (click)=\"cancel()\">\n    {{\n      isReadOnly\n        ? ('com.bmc.arsys.rx.client.common.close.label' | translate)\n        : ('com.bmc.arsys.rx.client.common.cancel.label' | translate)\n    }}\n  </button>\n</div>\n"]}