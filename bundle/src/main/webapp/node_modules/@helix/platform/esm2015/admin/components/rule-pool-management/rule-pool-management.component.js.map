{"version":3,"file":"rule-pool-management.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/admin/components/rule-pool-management/rule-pool-management.component.ts","../../../../../../../libs/platform/admin/components/rule-pool-management/rule-pool-management.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, combineLatest, ReplaySubject, Subscription } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { noop } from 'lodash';\nimport { AdaptTreeNode, TreeWrap } from '@bmc-ux/adapt-angular';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxModalService } from '@helix/platform/ui-kit';\nimport { RX_RULE_POOL_MANAGEMENT } from './rule-pool-management.constant';\nimport { IRuleConflictsTableConfig } from './rule-pool-management.interfaces';\nimport { RxRulePoolManagementService } from './rule-pool-management.service';\nimport { RuleReassignmentComponent } from './rule-reassignment/rule-reassignment.component';\n\n@Component({\n  selector: 'rx-admin-rule-pool-management',\n  templateUrl: './rule-pool-management.component.html',\n  styleUrls: ['./rule-pool-management.component.scss']\n})\nexport class RulePoolManagementAdminComponent implements OnInit, OnDestroy {\n  availablePoolsTree: AdaptTreeNode[] = [];\n  busy: Subscription;\n  ruleConflictsTableConfig: IRuleConflictsTableConfig;\n  ruleDesignerLink = `/helix/index.html#/${RX_APPLICATION.innovationStudioBundleId}/rule/edit/`;\n  showOnlyRulesWithIssuesFormControl = new FormControl(false);\n  strings: { [key: string]: string } = {};\n  treeWrap: TreeWrap = TreeWrap.WrapAll;\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private selectedRuleValue: AdaptTreeNode = null;\n\n  get selectedRule(): AdaptTreeNode {\n    return this.selectedRuleValue;\n  }\n\n  set selectedRule(selectedRule: AdaptTreeNode) {\n    this.selectedRuleSubject$.next(selectedRule);\n  }\n\n  private selectedRuleSubject$ = new BehaviorSubject(this.selectedRuleValue);\n  private selectedRule$ = this.selectedRuleSubject$.asObservable().pipe(takeUntil(this.destroyed$));\n\n  private showOnlyRulesWithIssuesSubject$ = new BehaviorSubject(false);\n  private showOnlyRulesWithIssues$ = this.showOnlyRulesWithIssuesSubject$\n    .asObservable()\n    .pipe(takeUntil(this.destroyed$));\n\n  constructor(\n    private rxModalService: RxModalService,\n    private rxRulePoolManagementService: RxRulePoolManagementService,\n    private translateService: TranslateService\n  ) {\n    this.setStrings();\n\n    this.showOnlyRulesWithIssuesFormControl.valueChanges\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((value: boolean) => this.showOnlyRulesWithIssuesSubject$.next(value));\n\n    this.ruleConflictsTableConfig = {\n      columns: [\n        {\n          header: this.strings.ruleNameColumnTitle,\n          field: `${RX_RULE_POOL_MANAGEMENT.conflictsRecordFieldIds.ruleName}`\n        },\n        {\n          header: this.strings.numberOfDelaysColumnTitle,\n          field: `${RX_RULE_POOL_MANAGEMENT.conflictsRecordFieldIds.numberOfDelays}`\n        }\n      ],\n      data: [],\n      texts: { emptyStateLabelText: this.strings.ruleConflictsEmptyStateLabel }\n    };\n\n    this.selectedRule$.subscribe((adaptTreeNode: AdaptTreeNode) => {\n      this.selectedRuleValue = adaptTreeNode;\n      this.ruleConflictsTableConfig.data = this.rxRulePoolManagementService.getRuleConflictsData(adaptTreeNode);\n    });\n\n    combineLatest([this.rxRulePoolManagementService.availablePoolsTree$, this.showOnlyRulesWithIssues$])\n      .pipe(\n        map(([availablePoolsTree, showOnlyRulesWithIssues]) => {\n          return showOnlyRulesWithIssues\n            ? availablePoolsTree.map((poolTreeNode) => ({\n                ...poolTreeNode,\n                children: poolTreeNode.data.hasRulesWithIssues\n                  ? poolTreeNode.children.filter(({ data }) => data.isRuleWithIssues)\n                  : []\n              }))\n            : availablePoolsTree;\n        }),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe((availablePoolsTree: AdaptTreeNode[]) => {\n        this.availablePoolsTree.forEach((poolTreeNode: AdaptTreeNode, index: number) => {\n          const updatedPool = availablePoolsTree[index];\n\n          updatedPool.expanded = updatedPool.children.length && poolTreeNode.expanded;\n        });\n\n        this.availablePoolsTree = availablePoolsTree;\n\n        if (this.selectedRuleValue) {\n          const isSelectedRulePresentInTree = this.availablePoolsTree.some((poolTreeNode: AdaptTreeNode) => {\n            const rule = poolTreeNode.children.find(\n              (ruleTreeNode: AdaptTreeNode) => ruleTreeNode.data.guid === this.selectedRuleValue.data.guid\n            );\n\n            if (rule) {\n              this.selectedRule = rule;\n\n              return true;\n            }\n          });\n\n          if (!isSelectedRulePresentInTree) {\n            this.selectedRuleSubject$.next(null);\n          }\n        }\n      });\n  }\n\n  ngOnInit(): void {\n    this.busy = this.rxRulePoolManagementService.fetchAvailablePoolsTree();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  isAssignedPoolOutOfRange(): boolean {\n    return this.selectedRuleValue.data.designTimePoolNumber > this.availablePoolsTree.length;\n  }\n\n  isRuleDesignerAvailable(): boolean {\n    return this.rxRulePoolManagementService.isRuleDesignerAvailable(this.selectedRuleValue.data);\n  }\n\n  openReassignPoolDialog(): any {\n    this.rxModalService\n      .openModal({\n        content: RuleReassignmentComponent,\n        data: {\n          ruleName: this.selectedRuleValue.data.name\n        },\n        size: 'sm'\n      })\n      .then(() => this.rxRulePoolManagementService.fetchAvailablePoolsTree(), noop);\n  }\n\n  private setStrings(): void {\n    this.strings = {\n      adminSettingsHeader: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.header.title'\n      ),\n\n      assignedPoolLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.assigned-pool.label'\n      ),\n\n      availablePoolsLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.available-pools.label'\n      ),\n\n      availablePoolsTooltip: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.available-pools.tooltip',\n        {\n          clockAlertIcon: '<i class=\"d-icon-clock_alert\"></i>',\n          clockArrowIcon: '<i class=\"d-icon-clock_arrow\"></i>',\n          dangerTriangleIcon: '<i class=\"text-danger d-icon-exclamation_triangle\"></i>',\n          triangleIcon: '<i class=\"d-icon-exclamation_triangle\"></i>',\n          successCheckIcon: '<i class=\"text-success d-icon-check_circle\"></i>',\n          checkIcon: '<i class=\"d-icon-check_circle\"></i>'\n        }\n      ),\n\n      averageExecutionTimeLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.average-execution-time.label'\n      ),\n\n      averageLatencyLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.average-latency.label'\n      ),\n\n      lastEndDateLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.last-end-date.label'\n      ),\n\n      lastStartDateLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.last-start-date.label'\n      ),\n\n      numberOfDelaysColumnTitle: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.conflicts.grid.column.delays-caused.title'\n      ),\n\n      numberOfRunsLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.execution-count.label'\n      ),\n\n      selectedRuleEmptyStateLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.selected-rule.empty-state.label'\n      ),\n\n      showOnlyRulesWithIssuesLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.available-pools.show-only-rules-with-issues.label'\n      ),\n\n      reassignButtonLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.button.reassign.label'\n      ),\n\n      ruleConflictsEmptyStateLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.conflicts.grid.empty-state.label'\n      ),\n\n      ruleConflictsTitle: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.conflicts.title'\n      ),\n\n      ruleNameColumnTitle: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.conflicts.grid.column.rule-name.title'\n      ),\n\n      ruleNameLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.rule-name.label'\n      ),\n\n      rulePoolsEmptyStateLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.empty-state.no-data-to-display.label'\n      ),\n\n      ruleSummaryTitle: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.title'\n      ),\n\n      ruleSummaryTooltip: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.tooltip'\n      ),\n\n      timerDefinitionLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.timer-definition.label'\n      )\n    };\n  }\n}\n","<rx-admin-settings header=\"{{ strings.adminSettingsHeader }}\" [busy]=\"busy\">\n  <div *ngIf=\"availablePoolsTree.length; else emptyRulePoolsTemplate\" class=\"d-flex h-100 overflow-auto\">\n    <div class=\"d-flex flex-shrink-0 flex-column border-right page-content-left pr-4\">\n      <h5 class=\"m-0\">\n        {{ strings.availablePoolsLabel }}\n        <adapt-icon\n          name=\"info_circle_o_adapt\"\n          [adaptPopover]=\"availablePoolsTooltipTemplate\"\n          maxWidth=\"400\"\n        ></adapt-icon>\n      </h5>\n\n      <ng-template #availablePoolsTooltipTemplate>\n        <div [innerHtml]=\"strings.availablePoolsTooltip\"></div>\n      </ng-template>\n\n      <adapt-rx-checkbox\n        [label]=\"strings.showOnlyRulesWithIssuesLabel\"\n        [formControl]=\"showOnlyRulesWithIssuesFormControl\"\n      ></adapt-rx-checkbox>\n\n      <div class=\"overflow-auto\">\n        <adapt-tree [value]=\"availablePoolsTree\" [(selection)]=\"selectedRule\" [wrap]=\"treeWrap\" selectionMode=\"single\">\n          <ng-template let-node adaptTreeNodeTemplate=\"pool-without-issues\">\n            <span><i class=\"text-success d-icon-check_circle at-action-icon\"></i>{{ node.label }}</span>\n          </ng-template>\n          <ng-template let-node adaptTreeNodeTemplate=\"pool-with-issues\">\n            <span><i class=\"text-danger d-icon-exclamation_triangle at-action-icon\"></i>{{ node.label }}</span>\n          </ng-template>\n\n          <ng-template let-node adaptTreeNodeTemplate=\"rule-without-issues\">\n            <span class=\"d-flex\" [adaptTooltip]=\"node.data.name\" [popupDelay]=\"1000\"\n              ><i class=\"d-icon-check_circle at-action-icon\" [ngClass]=\"{ 'text-success': node.data.isEditable }\"></i\n              >{{ node.label }}</span\n            >\n          </ng-template>\n          <ng-template let-node adaptTreeNodeTemplate=\"rule-with-issues\">\n            <span class=\"d-flex\" [adaptTooltip]=\"node.data.name\" [popupDelay]=\"1000\"\n              ><i\n                class=\"d-icon-exclamation_triangle at-action-icon\"\n                [ngClass]=\"{ 'text-danger': node.data.isEditable }\"\n              ></i\n              >{{ node.label }}\n            </span>\n          </ng-template>\n          <ng-template let-node adaptTreeNodeTemplate=\"remedy-escalation-with-issues\">\n            <span class=\"d-flex\" [adaptTooltip]=\"node.data.name\" [popupDelay]=\"1000\"\n              ><i class=\"d-icon-clock_alert at-action-icon\"></i>{{ node.label }}</span\n            >\n          </ng-template>\n          <ng-template let-node adaptTreeNodeTemplate=\"remedy-escalation-without-issues\">\n            <span class=\"d-flex\" [adaptTooltip]=\"node.data.name\" [popupDelay]=\"1000\"\n              ><i class=\"d-icon-clock_arrow at-action-icon\"></i>{{ node.label }}</span\n            >\n          </ng-template>\n        </adapt-tree>\n      </div>\n    </div>\n\n    <div class=\"flex-fill pl-4\">\n      <div *ngIf=\"selectedRule?.data as rule; else noRuleSelectedTemplate\">\n        <h5 class=\"mt-0\">\n          {{ strings.ruleSummaryTitle }}\n          <adapt-icon\n            name=\"info_circle_o_adapt\"\n            [adaptPopover]=\"ruleSummaryTooltipTemplate\"\n            maxWidth=\"280\"\n            placement=\"bottom\"\n          ></adapt-icon>\n        </h5>\n\n        <ng-template #ruleSummaryTooltipTemplate>\n          <div [innerHTML]=\"strings.ruleSummaryTooltip\"></div>\n        </ng-template>\n\n        <div class=\"mb-3\">\n          <adapt-rx-control-label [label]=\"strings.ruleNameLabel\"></adapt-rx-control-label>\n\n          <span *ngIf=\"!isRuleDesignerAvailable(); else ruleFullNameWithDesignerLink\" class=\"rule-name-value\">{{\n            rule.name\n          }}</span>\n\n          <ng-template #ruleFullNameWithDesignerLink>\n            <a\n              adapt-button\n              btn-type=\"tertiary\"\n              class=\"d-icon-left-pop_up p-0 border-0 rule-name-value\"\n              rx-id=\"open-rule-designer-button\"\n              target=\"_blank\"\n              href=\"{{ ruleDesignerLink + rule.name }}\"\n            >\n              {{ rule.name }}\n            </a>\n          </ng-template>\n        </div>\n\n        <div class=\"mb-3\">\n          <adapt-rx-control-label [label]=\"strings.timerDefinitionLabel\"></adapt-rx-control-label>\n          <span>{{ rule.timeCriteria | rxRuleTriggerTimeCriteriaDisplayValue }}</span>\n        </div>\n\n        <div class=\"d-flex mb-3\">\n          <div class=\"flex-fill col-4 p-0\">\n            <adapt-rx-control-label [label]=\"strings.numberOfRunsLabel\"></adapt-rx-control-label>\n            <span>{{ rule.numberOfRuns }}</span>\n          </div>\n          <div class=\"flex-fill col-4 p-0\">\n            <adapt-rx-control-label [label]=\"strings.averageLatencyLabel\"></adapt-rx-control-label>\n            <span>{{ rule.avgWaitTime }}</span>\n          </div>\n          <div class=\"flex-fill col-4 p-0\">\n            <adapt-rx-control-label [label]=\"strings.averageExecutionTimeLabel\"></adapt-rx-control-label>\n            <span>{{ rule.avgExecutionTime }}</span>\n          </div>\n        </div>\n\n        <div class=\"d-flex mb-3\">\n          <div class=\"flex-fill col-4 p-0\">\n            <div class=\"pb-1\">\n              <span class=\"form-control-label pr-3\">{{ strings.assignedPoolLabel }}</span>\n\n              <adapt-button\n                btn-type=\"tertiary\"\n                class=\"p-0 border-0\"\n                rx-id=\"reassign-button\"\n                *ngIf=\"rule.isEditable\"\n                (click)=\"openReassignPoolDialog()\"\n                [style.vertical-align]=\"'baseline'\"\n              >\n                <span class=\"d-icon-pencil\"></span>\n                {{ strings.reassignButtonLabel }}\n              </adapt-button>\n            </div>\n            <span>\n              <i\n                *ngIf=\"isAssignedPoolOutOfRange()\"\n                class=\"d-icon-exclamation_triangle at-action-icon\"\n                [ngClass]=\"{ 'text-danger': rule.isEditable }\"\n              ></i>\n              {{ rule.designTimePoolNumber }}\n            </span>\n          </div>\n          <div class=\"flex-fill col-4 p-0\">\n            <adapt-rx-control-label [label]=\"strings.lastStartDateLabel\"></adapt-rx-control-label>\n            <span>{{ rule.lastStartTime | date: 'medium' }}</span>\n          </div>\n          <div class=\"flex-fill col-4 p-0\">\n            <adapt-rx-control-label [label]=\"strings.lastEndDateLabel\"></adapt-rx-control-label>\n            <span>{{ rule.lastEndTime | date: 'medium' }}</span>\n          </div>\n        </div>\n\n        <h5>\n          {{ strings.ruleConflictsTitle }}\n          <i\n            *ngIf=\"ruleConflictsTableConfig.data.length\"\n            class=\"text-danger d-icon-exclamation_triangle\"\n            [ngClass]=\"{ 'text-danger': rule.isEditable }\"\n          ></i>\n        </h5>\n        <adapt-table\n          [columns]=\"ruleConflictsTableConfig.columns\"\n          [bordered]=\"true\"\n          [sortable]=\"true\"\n          [texts]=\"ruleConflictsTableConfig.texts\"\n          [value]=\"ruleConflictsTableConfig.data\"\n        >\n        </adapt-table>\n      </div>\n\n      <ng-template #noRuleSelectedTemplate>\n        <div class=\"d-flex align-items-center justify-content-center h-100\">\n          <adapt-empty-state [type]=\"'rules'\" [label]=\"strings.selectedRuleEmptyStateLabel\"></adapt-empty-state>\n        </div>\n      </ng-template>\n    </div>\n  </div>\n\n  <ng-template #emptyRulePoolsTemplate>\n    <div class=\"d-flex align-items-center h-100\">\n      <adapt-empty-state\n        class=\"flex-fill\"\n        [type]=\"'rules'\"\n        [label]=\"strings.rulePoolsEmptyStateLabel\"\n      ></adapt-empty-state>\n    </div>\n  </ng-template>\n</rx-admin-settings>\n"]}