{"version":3,"file":"api-editor-base.class.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/admin/components/ipaas/ipaas-base-apis/api-editor/api-editor-base.class.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAqB,MAAM,eAAe,CAAC;AACxE,OAAO,EAAa,WAAW,EAAa,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAC/E,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AACvD,OAAO,EAAE,cAAc,EAAwB,cAAc,EAAkB,MAAM,uBAAuB,CAAC;AAC7G,OAAO,EAAmB,qBAAqB,EAAE,MAAM,4BAA4B,CAAC;AACpF,OAAO,EAAE,oBAAoB,EAAE,+BAA+B,EAAE,MAAM,4BAA4B,CAAC;AACnG,OAAO,EACL,SAAS,EACT,OAAO,EACP,IAAI,EACJ,OAAO,EACP,OAAO,EACP,GAAG,EACH,OAAO,EACP,QAAQ,EACR,IAAI,EACJ,GAAG,IAAI,IAAI,EACX,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,MAAM,EACN,IAAI,EACL,MAAM,QAAQ,CAAC;AAChB,OAAO,EAAc,aAAa,EAAgB,MAAM,MAAM,CAAC;AAC/D,OAAO,EAAE,oBAAoB,EAAE,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AACjF,OAAO,EAAE,aAAa,EAAE,MAAM,6BAA6B,CAAC;AAC5D,OAAO,EACL,SAAS,EAUV,MAAM,0BAA0B,CAAC;AAClC,OAAO,EAAkB,YAAY,EAAE,MAAM,wBAAwB,CAAC;;;AAGtE,MAAM,OAAgB,aAAc,SAAQ,YAAY;IAmCtD,YAAgC,cAA8B,EAAY,QAAkB;QAC1F,KAAK,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;QADF,mBAAc,GAAd,cAAc,CAAgB;QAAY,aAAQ,GAAR,QAAQ,CAAU;QAlCpF,gBAAW,GAAgB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC1D,0BAAqB,GAA0B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACxF,qBAAgB,GAAqB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAEzE,oCAA+B,GAAoC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAC1F,+BAA+B,CAChC,CAAC;QAKF,kBAAa,GAAwB,EAAE,CAAC;QACxC,iBAAY,GAAuB,EAAE,CAAC;QACtC,kBAAa,GAAa,EAAE,CAAC;QAC7B,sBAAiB,GAAqB,EAAE,CAAC;QACzC,oBAAe,GAAqB,EAAE,CAAC;QACvC,gBAAW,GAAG,CAAC,CAAC;QAChB,eAAU,GAAG,KAAK,CAAC;QACnB,mBAAc,GAAsB,EAAE,CAAC;QAEvC,aAAQ,GAAqB,EAAE,CAAC;QAChC,iBAAY,GAAG,KAAK,CAAC;QAGb,qBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,6CAA6C,CAAC,CAAC;QAMhG,eAAU,GAAG,IAAI,aAAa,CAAU,CAAC,CAAC,CAAC;QA+InD,yBAAoB,GAAG,CAAC,MAAsB,EAAU,EAAE,CACxD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAEhF,wBAAmB,GAAG,CAAC,MAAsB,EAAU,EAAE,CACvD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;QA5I1E,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;QAC3D,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QAEjB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC/C,YAAY,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACvC,WAAW,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACtC,OAAO,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YAClC,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC7G,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACxG,aAAa,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACxC,iBAAiB,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YAC5C,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;YACnC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;YAC3C,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;YAC3C,qBAAqB,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;YACjD,yBAAyB,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;SACtD,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,EAAE,YAAY,EAAE,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,CAAC,CAAC;QAE3F,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,+BAA+B,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACpE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAE1B,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;gBACnC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9E,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7C;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAE7B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC;iBAC7D,IAAI,CACH,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;;gBACjB,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;gBAE5C,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;oBACjC,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC;oBACpE,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC;oBACjE,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;oBACpB,YAAY,EAAE,IAAI,CAAC,KAAK;oBACxB,OAAO,EAAE,IAAI,CAAC,IAAI;oBAClB,aAAa,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACnD,iBAAiB,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC9F,CAAC,CAAC;gBAEH,IAAI,CAAC,oBAAoB,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC;gBACjF,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAClE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,MAAM,CAAC;gBAE3D,IAAI,IAAI,CAAC,gBAAgB,EAAE;oBACzB,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,UAAU,EAAE,EAAE,CACtD,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,uBAAuB,CAAe,CAAC,IAAI,CACtE,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CACxC,CACF,CAAC;oBAEF,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,UAAU,EAAE,EAAE,CACtD,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,2BAA2B,CAAe,CAAC,IAAI,CAC1E,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CACxC,CACF,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,wBAAwB,EAAE,CAAC;iBACjC;gBAED,OAAO,CAAC,OAAO,CAAC,MAAA,IAAI,CAAC,OAAO,0CAAE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE;oBACpD,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;gBAC1C,CAAC,CAAC,CAAC;gBAEH,OAAO,CAAC,OAAO,CAAC,MAAA,IAAI,CAAC,WAAW,0CAAE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;oBACvD,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;gBACjD,CAAC,CAAC,CAAC;gBAEH,OAAO,IAAI,CAAC,qBAAqB,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;YACxF,CAAC,CAAC,CACH;iBACA,SAAS,CAAC,CAAC,OAAO,EAAE,EAAE;gBACrB,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;SACN;QAED,IAAI,CAAC,kBAAkB;aACpB,GAAG,CAAC,SAAS,CAAC;aACd,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC7C,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;;YACnB,MAAM,sBAAsB,GAC1B,CAAC,CAAC,CAAA,MAAA,IAAI,CAAC,qBAAqB,0CAAE,OAAO,MAAK,KAAK,CAAC;gBAChD,IAAI,CACF,IAAI,CAAC,mBAAmB,EACxB,CAAC,KAAK,EAAE,EAAE,CACR,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;oBACnG,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CACpC,CAAC;YAEJ,IAAI,sBAAsB,EAAE;gBAC1B,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC;oBAC/C,UAAU,EAAE;wBACV,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACpC,8EAA8E,CAC/E;qBACF;iBACF,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,kBAAkB;aACpB,GAAG,CAAC,cAAc,CAAC;aACnB,YAAY,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACrE,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,sBAAsB,EAAE,CAAC;QAClE,CAAC,CAAC,CAAC;IACP,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;IACvC,CAAC;IAEO,cAAc,CAAC,KAAa;QAClC,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5B,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;SACnF,CAAC,CAAC;IACL,CAAC;IAEO,sBAAsB,CAAC,SAAyB;QACtD,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5B,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC9G,KAAK,EAAE,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;SACnH,CAAC,CAAC;IACL,CAAC;IAQD,eAAe,CAAC,YAA+B;QAC7C,IAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,YAAY,IAAI,EAAE,CAAC;QAEpD,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YAClC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5E,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;SACxC;aAAM;YACL,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACxD,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;IACH,CAAC;IAEO,eAAe,CAAC,IAAY,EAAE,KAAa;QACjD,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAc,CAAC;QACnE,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,YAAY,CAAC,MAAc;;QACzB,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC9D,IAAI,CAAC,oBAAoB,GAAG,MAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,0CAAE,SAAS,CAAC;QAEzF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,MAAM,EAAE,EAAE,CAChE,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACtF,CAAC;QAEF,IAAI,CAAA,MAAA,IAAI,CAAC,eAAe,0CAAE,MAAM,MAAK,CAAC,EAAE;YACtC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrF,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;SACjD;aAAM;YACL,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,wBAAwB,EAAE,CAAC;SACjC;QAED,OAAO,CAAC,MAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,0CAAE,OAAO,EAAE,CAAC,MAAM,EAAE,EAAE;YAC7E,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,MAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,0CAAE,WAAW,EAAE,CAAC,KAAK,EAAE,EAAE;YAChF,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,6BAA6B,CAAC,OAAiB;;QACrD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC9C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9B,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAC9B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC;QACtD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,oBAAoB;YACvB,MAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,0CAAE,SAAS,CAAC;QAEhH,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,MAAM,EAAE,EAAE,CAChE,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CACxE,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,WAA8B;QACxC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACpD,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAEzB,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC,SAAS,CAC/C,CAAC,QAAQ,EAAE,EAAE;gBACX,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;gBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAE/B,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC9B,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;iBACtC;gBAED,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC5B,CAAC,EACD,GAAG,EAAE;gBACH,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC5B,CAAC,CACF,CAAC;SACH;IACH,CAAC;IAED,aAAa,CAAC,OAAe;;QAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;QAC/B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;QAEzE,IAAI,CAAA,MAAA,IAAI,CAAC,iBAAiB,0CAAE,MAAM,MAAK,CAAC,EAAE;YACxC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9C;IACH,CAAC;IAEO,qBAAqB;QAC3B,MAAM,MAAM,GAAG;YACb,UAAU,EAAE,CAAC;YACb,QAAQ,EAAE,CAAC,CAAC;YACZ,gBAAgB,EAAE,IAAI,CAAC,qBAAqB,CAAC,oBAAoB;YACjE,iBAAiB,EAAE;gBACjB,aAAa,CAAC,QAAQ,CAAC,SAAS;gBAChC,aAAa,CAAC,QAAQ,CAAC,OAAO;gBAC9B,oBAAoB,CAAC,YAAY,CAAC,EAAE;aACrC;SACF,CAAC;QAEF,IAAI,CAAC,+BAA+B;aACjC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC;aAChB,IAAI,CACH,GAAG,CAAC,CAAC,QAAyB,EAAE,EAAE,CAAC,CAAC;YAClC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE;gBACnF,OAAO;oBACL,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,EAAE;oBACtC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;iBACxE,CAAC;YACJ,CAAC,CAAC;SACH,CAAC,CAAC,CACJ;aACA,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YACtB,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,IAAI,CAAC;YACzC,IAAI,CAAC,aAAa,GAAG,MAAM,CACzB,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CACrF,CAAC;QACJ,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iBAAiB,CAAC,QAAmB;;QACnC,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAEnF,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,EAAE,KAAK,SAAS,CAAC,MAAM,CAAC;QAEzD,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,iCAAiC;YACjC,MAAM,UAAU,GAAG,CAAA,MAAA,MAAA,cAAc,CAAC,OAAO,0CAAE,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,0CAAE,KAAK,CAAC,GAAG,CAAC,KAAI,EAAE,CAAC;YACrF,MAAM,cAAc,GAAG,CAAA,MAAA,MAAA,cAAc,CAAC,WAAW,0CAAE,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,0CAAE,KAAK,CAAC,GAAG,CAAC,KAAI,EAAE,CAAC;YAE5F,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,uBAAuB,CAAe,CAAC,KAAK,EAAE,CAAC;YAC3E,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,2BAA2B,CAAe,CAAC,KAAK,EAAE,CAAC;YAEhF,OAAO,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,EAAE,CAC/B,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,uBAAuB,CAAe,CAAC,IAAI,CACtE,IAAI,CAAC,sBAAsB,CAAC,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAC3D,CACF,CAAC;YAEF,OAAO,CAAC,cAAc,EAAE,CAAC,aAAa,EAAE,EAAE,CACvC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,2BAA2B,CAAe,CAAC,IAAI,CAC1E,IAAI,CAAC,sBAAsB,CAAC,EAAE,GAAG,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAC/D,CACF,CAAC;SACH;aAAM;YACL,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAEhE,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,CAAC;SAC/C;IACH,CAAC;IAEO,wBAAwB,CAAC,YAA+B;QAC9D,MAAM,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC/G,MAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,iBAAiB,CAAc,CAAC;QAEpF,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAE9B,IAAI,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAE,MAAM,EAAE;YAC3B,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAC7B;QAED,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;QAE9D,YAAY;YACV,CAAC,IAAI,CAAC,oBAAoB,IAAI,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC,IAAI,YAAY,CAAC;QAEhH,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;SAC7E;IACH,CAAC;IAED,UAAU,CAAC,EAAE,KAAK,EAAwB;QACxC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED,SAAS;QACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAc,CAAC;QACnE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,YAAY,CAAC,KAAa;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAc,CAAC;QACnE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;IACxC,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,iBAAiB,CAAc,CAAC;QACnF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,oBAAoB,CAAC,KAAa;QAChC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,iBAAiB,CAAc,CAAC;QACnF,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;IACxC,CAAC;IAED,uBAAuB;QACpB,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,uBAAuB,CAAe,CAAC,IAAI,CACtE,IAAI,CAAC,sBAAsB,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACpD,CAAC;IACJ,CAAC;IAED,0BAA0B,CAAC,KAAa;QACrC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,uBAAuB,CAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACpF,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;IACxC,CAAC;IAED,2BAA2B;QACxB,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,2BAA2B,CAAe,CAAC,IAAI,CAC1E,IAAI,CAAC,sBAAsB,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACpD,CAAC;IACJ,CAAC;IAED,8BAA8B,CAAC,KAAa;QACzC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,2BAA2B,CAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACxF,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;IACxC,CAAC;IAED,oBAAoB;QAClB,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC;IAC7E,CAAC;IAED,IAAI;QACF,IAAI,aAA8B,CAAC;QACnC,MAAM,SAAS,GAAuB,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;QAC5E,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACjE,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAEnF,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,SAAS,CAAC,eAAe,GAAG;gBAC1B;oBACE,WAAW,EAAE,SAAS,CAAC,qBAAqB;oBAC5C,WAAW,EAAE,SAAS,CAAC,yBAAyB;iBACjD;aACF,CAAC;SACH;QAED,MAAM,KAAK,GAAwB;YACjC,YAAY,EAAE,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI;YAC5C,WAAW,EAAE,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;YAC1C,KAAK,EAAE,SAAS,CAAC,YAAY;YAC7B,IAAI,EAAE,SAAS,CAAC,OAAO;YACvB,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1B,MAAM,EAAE,OAAO,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,KAAK,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACvF,QAAQ,EAAE,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,EAAE;YAC3C,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,QAAQ,EAAE;YAC7C,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,QAAQ,EAAE;YACrC,WAAW,EAAE,GAAG,SAAS,CAAC,YAAY,KAAK,SAAS,CAAC,OAAO,EAAE;YAC9D,eAAe,EAAE,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,EAAE;SACpD,CAAC;QAEF,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,oBAAoB,CAAC,EAAE,CAAC;YAExC,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;SAC1D;aAAM;YACL,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;SAC5D;QAED,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE;YACvC,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAC1C,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,qEAAqE,CAAC,CACrG,CAAC;YAEF,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;IACxD,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC7B,CAAC;IAEO,eAAe;QACrB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC1D,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC9D,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;;0GAxdmB,aAAa;8GAAb,aAAa;2FAAb,aAAa;kBADlC,UAAU","sourcesContent":["import { Injectable, Injector, OnDestroy, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ActiveModalRef, ActiveTabChangeEvent, DismissReasons, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { IDataPageResult, RxNotificationService } from '@helix/platform/shared/api';\nimport { RX_RECORD_DEFINITION, RxRecordInstanceDataPageService } from '@helix/platform/record/api';\nimport {\n  cloneDeep,\n  compact,\n  find,\n  findKey,\n  forEach,\n  get,\n  groupBy,\n  includes,\n  keys,\n  map as _map,\n  merge,\n  pull,\n  some,\n  sortBy,\n  trim\n} from 'lodash';\nimport { Observable, ReplaySubject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, map, switchMap, takeUntil } from 'rxjs/operators';\nimport { RX_IPAAS_APIS } from '../ipaas-base-apis.constant';\nimport {\n  AuthTypes,\n  IApiEditorFormData,\n  IApiPath,\n  IAuthType,\n  IAuthTypeDetails,\n  IAuthTypeFields,\n  IEnvironmentData,\n  IIpaasApiDefinition,\n  IIpaasApiInfo,\n  IOrganizationData\n} from '../ipaas-base-apis.types';\nimport { INameValuePair, RxModalClass } from '@helix/platform/ui-kit';\n\n@Injectable()\nexport abstract class ApiEditorBase extends RxModalClass implements OnInit, OnDestroy {\n  private formBuilder: FormBuilder = this.injector.get(FormBuilder);\n  private rxNotificationService: RxNotificationService = this.injector.get(RxNotificationService);\n  private translateService: TranslateService = this.injector.get(TranslateService);\n\n  private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService = this.injector.get(\n    RxRecordInstanceDataPageService\n  );\n\n  ipaasApiEditorForm: FormGroup;\n  headers: FormArray;\n  queryParameters: FormArray;\n  organizations: IOrganizationData[] = [];\n  environments: IEnvironmentData[] = [];\n  groupNameList: string[] = [];\n  methodTypeOptions: RxSelectOption[] = [];\n  authTypeOptions: RxSelectOption[] = [];\n  activeIndex = 0;\n  isEditMode = false;\n  authTypeFields: IAuthTypeFields[] = [];\n  busy: Subscription;\n  apiPaths: RxSelectOption[] = [];\n  loadingState = false;\n  isCustomAuthType: boolean;\n\n  private defaultSelection = this.translateService.instant('com.bmc.arsys.rx.client.common.select.label');\n  private groupAndApiNameList: RxSelectOption;\n  private apiPathDetails: IApiPath;\n  private selectedApiPath: string;\n  private readonly selectedApiDefinition: IIpaasApiInfo;\n  private initialApiDefinition: IIpaasApiDefinition;\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private authTypeFieldDetails: IApiPath[];\n  protected selectedOrganization: IOrganizationData;\n\n  protected constructor(protected activeModalRef: ActiveModalRef, protected injector: Injector) {\n    super(activeModalRef, injector);\n\n    this.selectedApiDefinition = this.activeModalRef.getData();\n    this.isEditMode = Boolean(this.selectedApiDefinition.id);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.ipaasApiEditorForm = this.formBuilder.group({\n      organization: [[], Validators.required],\n      environment: [[], Validators.required],\n      apiPath: [[], Validators.required],\n      apiGroupName: ['', [Validators.required, Validators.maxLength(254), Validators.pattern('^[a-zA-Z0-9 _-]+$')]],\n      apiName: ['', [Validators.required, Validators.maxLength(254), Validators.pattern('^[a-zA-Z0-9 _-]+$')]],\n      requestMethod: [[], Validators.required],\n      authorizationType: [[], Validators.required],\n      headers: this.formBuilder.array([]),\n      queryParameters: this.formBuilder.array([]),\n      authTypeDetails: this.formBuilder.array([]),\n      customAuthTypeHeaders: this.formBuilder.array([]),\n      customAuthTypeQueryParams: this.formBuilder.array([])\n    });\n\n    this.ipaasApiEditorForm.patchValue({ apiGroupName: this.selectedApiDefinition.groupName });\n\n    this.busy = this.getOrganizationsAndEnvironments().subscribe((data) => {\n      this.organizations = data;\n\n      if (this.organizations.length === 1) {\n        this.ipaasApiEditorForm.get('organization').setValue([this.organizations[0]]);\n        this.getEnvironments(this.organizations[0]);\n      }\n    });\n\n    this.getGroupAndApiDetails();\n\n    if (this.isEditMode) {\n      this.busy = this.getApiDefinition(this.selectedApiDefinition.id)\n        .pipe(\n          switchMap((data) => {\n            this.initialApiDefinition = cloneDeep(data);\n\n            this.ipaasApiEditorForm.patchValue({\n              organization: [{ name: data.organization, id: data.organizationId }],\n              environment: [{ name: data.environment, id: data.environmentId }],\n              apiPath: [data.path],\n              apiGroupName: data.group,\n              apiName: data.name,\n              requestMethod: [RX_IPAAS_APIS.methods[data.method]],\n              authorizationType: [find(RX_IPAAS_APIS.authTypeOptions, (type) => type.id === data.authType)]\n            });\n\n            this.selectedOrganization = { id: data.organizationId, name: data.organization };\n            this.authTypeFields = RX_IPAAS_APIS.authTypeFields[data.authType];\n            this.isCustomAuthType = data.authType === AuthTypes.CUSTOM;\n\n            if (this.isCustomAuthType) {\n              forEach(data.authTypeDetails.httpHeaders, (httpHeader) =>\n                (this.ipaasApiEditorForm.get('customAuthTypeHeaders') as FormArray).push(\n                  this.customAuthTypeFormItem(httpHeader)\n                )\n              );\n\n              forEach(data.authTypeDetails.queryParams, (queryParam) =>\n                (this.ipaasApiEditorForm.get('customAuthTypeQueryParams') as FormArray).push(\n                  this.customAuthTypeFormItem(queryParam)\n                )\n              );\n            } else {\n              this.createAuthTypeFormFields();\n            }\n\n            forEach(compact(data.headers?.split(',')), (header) => {\n              this.setApiVariables('headers', header);\n            });\n\n            forEach(compact(data.queryParams?.split(',')), (param) => {\n              this.setApiVariables('queryParameters', param);\n            });\n\n            return this.getApiPathDefinitions({ name: data.environment, id: data.environmentId });\n          })\n        )\n        .subscribe((apiPath) => {\n          this.onEditMethodAndAuthTypeUpdate(apiPath);\n        });\n    }\n\n    this.ipaasApiEditorForm\n      .get('apiName')\n      .valueChanges.pipe(takeUntil(this.destroyed$))\n      .subscribe((value) => {\n        const isApiNameAlreadyExists =\n          !(this.selectedApiDefinition?.apiName === value) &&\n          some(\n            this.groupAndApiNameList,\n            (group) =>\n              group[RX_IPAAS_APIS.fieldIds.groupName] === trim(this.ipaasApiEditorForm.get('apiGroupName').value) &&\n              includes(group.apis, trim(value))\n          );\n\n        if (isApiNameAlreadyExists) {\n          this.ipaasApiEditorForm.get('apiName').setErrors({\n            invalidApi: {\n              message: this.translateService.instant(\n                'com.bmc.arsys.rx.client.admin.ipaas-api-editor.api-name-exists.error.message'\n              )\n            }\n          });\n        }\n      });\n\n    this.ipaasApiEditorForm\n      .get('apiGroupName')\n      .valueChanges.pipe(distinctUntilChanged(), takeUntil(this.destroyed$))\n      .subscribe(() => {\n        this.ipaasApiEditorForm.get('apiName').updateValueAndValidity();\n      });\n  }\n\n  isDirty(): boolean {\n    return this.ipaasApiEditorForm.dirty;\n  }\n\n  private createFormItem(value: string): FormGroup {\n    return this.formBuilder.group({\n      name: [value, [Validators.maxLength(254), Validators.pattern('^[a-zA-Z0-9_-]+$')]]\n    });\n  }\n\n  private customAuthTypeFormItem(fieldData: INameValuePair): FormGroup {\n    return this.formBuilder.group({\n      key: [fieldData.key, [Validators.required, Validators.maxLength(254), Validators.pattern('^[a-zA-Z0-9_-]+$')]],\n      value: [fieldData.value, [Validators.required, Validators.maxLength(254), Validators.pattern('^[a-zA-Z0-9_-]+$')]]\n    });\n  }\n\n  optionFormatterLabel = (option: RxSelectOption): string =>\n    this.translateService.instant(get(option, 'labelKey', this.defaultSelection));\n\n  optionFormatterName = (option: RxSelectOption): string =>\n    this.translateService.instant(get(option, 'name', this.defaultSelection));\n\n  getEnvironments(organization: IOrganizationData): void {\n    this.selectedOrganization = organization;\n    this.environments = organization.environments || [];\n\n    if (this.environments.length === 1) {\n      this.ipaasApiEditorForm.get('environment').setValue([this.environments[0]]);\n      this.getApiPaths(this.environments[0]);\n    } else {\n      this.ipaasApiEditorForm.get('environment').setValue([]);\n      this.getApiPaths();\n    }\n  }\n\n  private setApiVariables(type: string, value: string): void {\n    const apiVariable = this.ipaasApiEditorForm.get(type) as FormArray;\n    apiVariable.push(this.createFormItem(value));\n  }\n\n  getAuthTypes(method: string): void {\n    this.ipaasApiEditorForm.get('authorizationType').setValue([]);\n    this.authTypeFieldDetails = this.apiPathDetails[this.selectedApiPath][method]?.authTypes;\n\n    this.authTypeOptions = _map(this.authTypeFieldDetails, (option) =>\n      find(RX_IPAAS_APIS.authTypeOptions, (type) => type.id === AuthTypes[keys(option)[0]])\n    );\n\n    if (this.authTypeOptions?.length === 1) {\n      this.ipaasApiEditorForm.get('authorizationType').setValue([this.authTypeOptions[0]]);\n      this.getAuthTypeFields(this.authTypeOptions[0]);\n    } else {\n      this.authTypeFields = RX_IPAAS_APIS.authTypeFields[0];\n      this.createAuthTypeFormFields();\n    }\n\n    forEach(this.apiPathDetails[this.selectedApiPath][method]?.headers, (header) => {\n      this.setApiVariables('headers', header);\n    });\n\n    forEach(this.apiPathDetails[this.selectedApiPath][method]?.queryParams, (param) => {\n      this.setApiVariables('queryParameters', param);\n    });\n  }\n\n  private onEditMethodAndAuthTypeUpdate(apiPath: IApiPath): void {\n    this.environments = this.getEnvironmentList();\n    this.apiPaths = keys(apiPath);\n    this.apiPathDetails = apiPath;\n    this.selectedApiPath = this.initialApiDefinition.path;\n    this.methodTypeOptions = keys(apiPath[this.initialApiDefinition.path]);\n    this.authTypeFieldDetails =\n      this.apiPathDetails[this.selectedApiPath][RX_IPAAS_APIS.methods[this.initialApiDefinition.method]]?.authTypes;\n\n    this.authTypeOptions = _map(this.authTypeFieldDetails, (option) =>\n      find(RX_IPAAS_APIS.authTypeOptions, { id: AuthTypes[keys(option)[0]] })\n    );\n  }\n\n  getApiPaths(environment?: IEnvironmentData): void {\n    this.ipaasApiEditorForm.get('apiPath').setValue([]);\n    this.apiPaths = [];\n    this.resetFormFields();\n\n    if (environment) {\n      this.loadingState = true;\n\n      this.getApiPathDefinitions(environment).subscribe(\n        (response) => {\n          this.apiPathDetails = response;\n          this.apiPaths = keys(response);\n\n          if (this.apiPaths.length === 1) {\n            this.ipaasApiEditorForm.get('apiPath').setValue([this.apiPaths[0]]);\n            this.getApiMethods(this.apiPaths[0]);\n          }\n\n          this.loadingState = false;\n        },\n        () => {\n          this.loadingState = false;\n        }\n      );\n    }\n  }\n\n  getApiMethods(apiPath: string): void {\n    this.resetFormFields();\n    this.selectedApiPath = apiPath;\n    this.methodTypeOptions = keys(this.apiPathDetails[this.selectedApiPath]);\n\n    if (this.methodTypeOptions?.length === 1) {\n      this.ipaasApiEditorForm.get('requestMethod').setValue([this.methodTypeOptions[0]]);\n      this.getAuthTypes(this.methodTypeOptions[0]);\n    }\n  }\n\n  private getGroupAndApiDetails(): void {\n    const params = {\n      startIndex: 0,\n      pageSize: -1,\n      recorddefinition: this.selectedApiDefinition.recordDefinitionName,\n      propertySelection: [\n        RX_IPAAS_APIS.fieldIds.groupName,\n        RX_IPAAS_APIS.fieldIds.apiName,\n        RX_RECORD_DEFINITION.coreFieldIds.id\n      ]\n    };\n\n    this.rxRecordInstanceDataPageService\n      .post({ params })\n      .pipe(\n        map((response: IDataPageResult) => ({\n          data: _map(groupBy(response.data, RX_IPAAS_APIS.fieldIds.groupName), (options, id) => {\n            return {\n              [RX_IPAAS_APIS.fieldIds.groupName]: id,\n              apis: _map(options, (option) => option[RX_IPAAS_APIS.fieldIds.apiName])\n            };\n          })\n        }))\n      )\n      .subscribe((response) => {\n        this.groupAndApiNameList = response.data;\n        this.groupNameList = sortBy(\n          _map(this.groupAndApiNameList, (option) => option[RX_IPAAS_APIS.fieldIds.groupName])\n        );\n      });\n  }\n\n  getAuthTypeFields(authType: IAuthType) {\n    const authTypeDetail = find(this.authTypeFieldDetails, authType.key)[authType.key];\n\n    this.isCustomAuthType = authType.id === AuthTypes.CUSTOM;\n\n    if (this.isCustomAuthType) {\n      // \"[foo, bar]\" => [\"foo\", \"bar\"]\n      const headerKeys = authTypeDetail.headers?.replace(/[\\[\\] ]/g, '')?.split(',') || [];\n      const queryParamKeys = authTypeDetail.queryParams?.replace(/[\\[\\] ]/g, '')?.split(',') || [];\n\n      (this.ipaasApiEditorForm.get('customAuthTypeHeaders') as FormArray).clear();\n      (this.ipaasApiEditorForm.get('customAuthTypeQueryParams') as FormArray).clear();\n\n      forEach(headerKeys, (headerKey) =>\n        (this.ipaasApiEditorForm.get('customAuthTypeHeaders') as FormArray).push(\n          this.customAuthTypeFormItem({ key: headerKey, value: '' })\n        )\n      );\n\n      forEach(queryParamKeys, (queryParamKey) =>\n        (this.ipaasApiEditorForm.get('customAuthTypeQueryParams') as FormArray).push(\n          this.customAuthTypeFormItem({ key: queryParamKey, value: '' })\n        )\n      );\n    } else {\n      this.authTypeFields = RX_IPAAS_APIS.authTypeFields[authType.id];\n\n      this.createAuthTypeFormFields(authTypeDetail);\n    }\n  }\n\n  private createAuthTypeFormFields(fieldDetails?: IAuthTypeDetails): void {\n    const formArrayFields = this.authTypeFields.reduce((obj, item) => Object.assign(obj, { [item.name]: '' }), {});\n    const authTypeDetails = this.ipaasApiEditorForm.get('authTypeDetails') as FormArray;\n\n    this.isCustomAuthType = false;\n\n    if (authTypeDetails?.length) {\n      authTypeDetails.removeAt(0);\n    }\n\n    authTypeDetails.push(this.formBuilder.group(formArrayFields));\n\n    fieldDetails =\n      (this.initialApiDefinition && merge(this.initialApiDefinition.authTypeDetails, fieldDetails)) || fieldDetails;\n\n    if (fieldDetails) {\n      this.ipaasApiEditorForm.controls.authTypeDetails.patchValue([fieldDetails]);\n    }\n  }\n\n  tabChanged({ index }: ActiveTabChangeEvent): void {\n    this.activeIndex = index;\n  }\n\n  addHeader(): void {\n    this.headers = this.ipaasApiEditorForm.get('headers') as FormArray;\n    this.headers.push(this.createFormItem(''));\n  }\n\n  removeHeader(index: number): void {\n    this.headers = this.ipaasApiEditorForm.get('headers') as FormArray;\n    this.headers.removeAt(index);\n    this.ipaasApiEditorForm.markAsDirty();\n  }\n\n  addQueryParameter(): void {\n    this.queryParameters = this.ipaasApiEditorForm.get('queryParameters') as FormArray;\n    this.queryParameters.push(this.createFormItem(''));\n  }\n\n  removeQueryParameter(index: number): void {\n    this.queryParameters = this.ipaasApiEditorForm.get('queryParameters') as FormArray;\n    this.queryParameters.removeAt(index);\n    this.ipaasApiEditorForm.markAsDirty();\n  }\n\n  addCustomAuthTypeHeader(): void {\n    (this.ipaasApiEditorForm.get('customAuthTypeHeaders') as FormArray).push(\n      this.customAuthTypeFormItem({ key: '', value: '' })\n    );\n  }\n\n  removeCustomAuthTypeHeader(index: number): void {\n    (this.ipaasApiEditorForm.get('customAuthTypeHeaders') as FormArray).removeAt(index);\n    this.ipaasApiEditorForm.markAsDirty();\n  }\n\n  addCustomAuthTypeQueryParam(): void {\n    (this.ipaasApiEditorForm.get('customAuthTypeQueryParams') as FormArray).push(\n      this.customAuthTypeFormItem({ key: '', value: '' })\n    );\n  }\n\n  removeCustomAuthTypeQueryParam(index: number): void {\n    (this.ipaasApiEditorForm.get('customAuthTypeQueryParams') as FormArray).removeAt(index);\n    this.ipaasApiEditorForm.markAsDirty();\n  }\n\n  isSaveButtonDisabled(): boolean {\n    return this.ipaasApiEditorForm.pristine || this.ipaasApiEditorForm.invalid;\n  }\n\n  save(): void {\n    let adminSetting$: Observable<any>;\n    const formValue: IApiEditorFormData = this.ipaasApiEditorForm.getRawValue();\n    const headers = _map(formValue.headers, (header) => header.name);\n    const queryParams = _map(formValue.queryParameters, (parameter) => parameter.name);\n\n    if (this.isCustomAuthType) {\n      formValue.authTypeDetails = [\n        {\n          httpHeaders: formValue.customAuthTypeHeaders,\n          queryParams: formValue.customAuthTypeQueryParams\n        }\n      ];\n    }\n\n    const param: IIpaasApiDefinition = {\n      organization: formValue.organization[0].name,\n      environment: formValue.environment[0].name,\n      group: formValue.apiGroupName,\n      name: formValue.apiName,\n      path: formValue.apiPath[0],\n      method: findKey(RX_IPAAS_APIS.methods, (value) => value === formValue.requestMethod[0]),\n      authType: formValue.authorizationType[0].id,\n      queryParams: pull(queryParams, '').toString(),\n      headers: pull(headers, '').toString(),\n      description: `${formValue.apiGroupName}: ${formValue.apiName}`,\n      authTypeDetails: formValue.authTypeDetails[0] || {}\n    };\n\n    if (this.isEditMode) {\n      param.id = this.initialApiDefinition.id;\n\n      adminSetting$ = this.editApiDefinition(param, formValue);\n    } else {\n      adminSetting$ = this.createApiDefinition(param, formValue);\n    }\n\n    this.busy = adminSetting$.subscribe(() => {\n      this.rxNotificationService.addSuccessMessage(\n        this.translateService.instant('com.bmc.arsys.rx.client.admin.ipaas-api-editor.save.success.message')\n      );\n\n      this.activeModalRef.close(adminSetting$);\n    });\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  private resetFormFields(): void {\n    this.methodTypeOptions = [];\n    this.ipaasApiEditorForm.get('requestMethod').setValue([]);\n    this.authTypeOptions = [];\n    this.ipaasApiEditorForm.get('authorizationType').setValue([]);\n    this.authTypeFields = RX_IPAAS_APIS.authTypeFields[0];\n    this.createAuthTypeFormFields();\n  }\n\n  protected abstract getOrganizationsAndEnvironments(): Observable<IOrganizationData[]>;\n\n  protected abstract getApiPathDefinitions(environment: IEnvironmentData): Observable<IApiPath>;\n\n  protected abstract getApiDefinition(apiId: string): Observable<IIpaasApiDefinition>;\n\n  protected abstract editApiDefinition(\n    apiDefinition: IIpaasApiDefinition,\n    formData?: IApiEditorFormData\n  ): Observable<any>;\n\n  protected abstract createApiDefinition(\n    apiDefinition: IIpaasApiDefinition,\n    formData?: IApiEditorFormData\n  ): Observable<any>;\n\n  protected abstract getEnvironmentList(organization?: IOrganizationData): IEnvironmentData[];\n}\n"]}