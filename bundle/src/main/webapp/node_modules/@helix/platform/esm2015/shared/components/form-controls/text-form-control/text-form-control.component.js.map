{"version":3,"file":"text-form-control.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/shared/components/form-controls/text-form-control/text-form-control.component.ts","../../../../../../../../libs/platform/shared/components/form-controls/text-form-control/text-form-control.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AACvE,OAAO,EAAE,iBAAiB,EAAE,MAAM,gBAAgB,CAAC;AAEnD,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAElE,OAAO,EAAE,yBAAyB,EAAE,MAAM,uBAAuB,CAAC;;;;;AAalE,MAAM,OAAO,wBAAyB,SAAQ,aAAqB;IAOjE,YAAoB,QAAmB;QACrC,KAAK,EAAE,CAAC;QADU,aAAQ,GAAR,QAAQ,CAAW;IAEvC,CAAC;IAED,KAAK;QACH,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;IACpF,CAAC;;qHAbU,wBAAwB;yGAAxB,wBAAwB,+EARxB;QACT;YACE,OAAO,EAAE,iBAAiB;YAC1B,WAAW,EAAE,wBAAwB;YACrC,KAAK,EAAE,IAAI;SACZ;KACF,iKChBH,4bAaA;2FDKa,wBAAwB;kBAXpC,SAAS;mBAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,WAAW,EAAE,oCAAoC;oBACjD,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,iBAAiB;4BAC1B,WAAW,0BAA0B;4BACrC,KAAK,EAAE,IAAI;yBACZ;qBACF;iBACF;gGAGC,OAAO;sBADN,KAAK;gBAIN,MAAM;sBADL,SAAS;uBAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE","sourcesContent":["import { Component, Input, Renderer2, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IFormControlComponent, IFormFocusable } from '@helix/platform/shared/api';\nimport { ValueAccessor } from '../../form-builder/value-accessor';\nimport { ITextFormControlOptions } from './text-form-control-options.interface';\nimport { AdaptRxTextfieldComponent } from '@bmc-ux/adapt-angular';\n\n@Component({\n  selector: 'rx-text-form-control',\n  templateUrl: './text-form-control.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: TextFormControlComponent,\n      multi: true\n    }\n  ]\n})\nexport class TextFormControlComponent extends ValueAccessor<string> implements IFormControlComponent, IFormFocusable {\n  @Input()\n  options: ITextFormControlOptions;\n\n  @ViewChild('editor', { static: true })\n  editor: AdaptRxTextfieldComponent;\n\n  constructor(private renderer: Renderer2) {\n    super();\n  }\n\n  focus() {\n    this.renderer.selectRootElement(this.editor.inputRef.nativeElement, true).focus();\n  }\n}\n","<adapt-rx-textfield\n  #editor\n  [isPassword]=\"options.isPassword\"\n  [label]=\"options.label\"\n  [required]=\"options.required\"\n  [(ngModel)]=\"value\"\n  [disabled]=\"isDisabled\"\n  [tooltip]=\"options.tooltip\"\n  [maxlength]=\"options.maxLength\"\n  [minlength]=\"options.minLength\"\n  [rxNoWhitespace]=\"!!(options.allowWhitespace === false || (options.required && options.allowWhitespace !== true))\"\n>\n</adapt-rx-textfield>\n"]}