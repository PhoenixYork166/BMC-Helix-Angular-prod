{"version":3,"file":"add-join-fields-editor.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/record/designer/record-designer/add-join-fields-editor/add-join-fields-editor.component.ts","../../../../../../../../libs/platform/record/designer/record-designer/add-join-fields-editor/add-join-fields-editor.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAqB,QAAQ,EAAE,uBAAuB,EAAE,MAAM,eAAe,CAAC;AAChG,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,cAAc,EAAE,cAAc,EAAe,MAAM,uBAAuB,CAAC;AACpF,OAAO,EAGL,oBAAoB,EACpB,wBAAwB,EACxB,yBAAyB,EAC1B,MAAM,4BAA4B,CAAC;AACpC,OAAO,EAAE,uBAAuB,EAAE,MAAM,4BAA4B,CAAC;AACrE,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAC;AACtD,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AACvD,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AACrG,OAAO,EAAE,aAAa,EAAc,aAAa,EAAE,MAAM,MAAM,CAAC;AAChE,OAAO,EAAE,GAAG,EAAE,WAAW,EAAE,SAAS,EAAqB,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAC3F,OAAO,EAAE,YAAY,EAAE,MAAM,wBAAwB,CAAC;;;;;;;;;AAQtD,MAAM,OAAO,4BAA6B,SAAQ,YAAY;IAwK5D,YACU,gBAAkC,EAClC,aAA4B,EAC5B,yBAAoD,EACrD,cAA8B,EAC7B,uBAAgD,EAChD,wBAAkD,EAChD,QAAkB;QAE5B,KAAK,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;QARxB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,kBAAa,GAAb,aAAa,CAAe;QAC5B,8BAAyB,GAAzB,yBAAyB,CAA2B;QACrD,mBAAc,GAAd,cAAc,CAAgB;QAC7B,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,6BAAwB,GAAxB,wBAAwB,CAA0B;QAChD,aAAQ,GAAR,QAAQ,CAAU;QA9KtB,wBAAmB,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACzD,oFAAoF,CACrF,CAAC;QAEM,eAAU,GAAG,IAAI,aAAa,CAAU,CAAC,CAAC,CAAC;QACnD,gCAA2B,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC,2BAA2B,CAAC;QACxF,kCAA6B,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC,6BAA6B,CAAC;QAE5F,gBAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACzC,4EAA4E,EAC5E;YACE,2BAA2B,EAAE,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,IAAI,CAAC,2BAA2B,CAAC;YAC1G,6BAA6B,EAAE,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,IAAI,CAAC,6BAA6B,CAAC;SAC/G,CACF,CAAC;QAEM,uBAAkB,GAAG,IAAI,CAAC,cAAc;aAC7C,OAAO,EAAE;aACT,WAAW,CAAC,MAAM,CACjB,CAAC,KAAK,EAAE,EAAE,CACR,CAAC,QAAQ,CAAC,oBAAoB,CAAC,gCAAgC,EAAE,KAAK,CAAC,EAAE,CAAC;YAC1E,GAAG,CAAC,KAAK,EAAE,qBAAqB,CAAC,KAAK,oBAAoB,CAAC,iBAAiB,CAAC,OAAO,CACvF,CAAC;QAEI,yBAAoB,GAAG,IAAI,CAAC,cAAc;aAC/C,OAAO,EAAE;aACT,WAAW,CAAC,MAAM,CACjB,CAAC,KAAK,EAAE,EAAE,CACR,CAAC,QAAQ,CAAC,oBAAoB,CAAC,gCAAgC,EAAE,KAAK,CAAC,EAAE,CAAC;YAC1E,GAAG,CAAC,KAAK,EAAE,qBAAqB,CAAC,KAAK,oBAAoB,CAAC,iBAAiB,CAAC,SAAS,CACzF,CAAC;QAEJ,qCAAgC,GAAG,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;QACvD,uCAAkC,GAAG,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;QAEjD,2BAAsB,GAAG,IAAI,CAAC,gCAAgC,CAAC,YAAY,CAAC,IAAI,CACtF,SAAS,CAAC,EAAE,CAAC,EACb,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;QACM,6BAAwB,GAAG,IAAI,CAAC,kCAAkC,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;QAEpG,4BAAuB,GAAmC,IAAI,CAAC,yBAAyB;aAC7F,GAAG,CAAC,IAAI,CAAC,2BAA2B,EAAE,EAAE,EAAE,IAAI,CAAC;aAC/C,IAAI,CACH,GAAG,CAAC,CAAC,gBAAgB,EAAE,EAAE,CACvB,OAAO,CACL,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,EAAE,oBAAoB,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,MAAM,CACnG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CACzG,EACD,CAAC,MAAM,CAAC,EACR,CAAC,KAAK,CAAC,CACR,CACF,CACF,CAAC;QAEI,8BAAyB,GAAmC,IAAI,CAAC,yBAAyB;aAC/F,GAAG,CAAC,IAAI,CAAC,6BAA6B,EAAE,EAAE,EAAE,IAAI,CAAC;aACjD,IAAI,CACH,GAAG,CAAC,CAAC,gBAAgB,EAAE,EAAE,CACvB,OAAO,CACL,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,EAAE,oBAAoB,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,MAAM,CACrG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAC3G,EACD,CAAC,MAAM,CAAC,EACR,CAAC,KAAK,CAAC,CACR,CACF,CACF,CAAC;QAEI,oBAAe,GAAG,aAAa,CAAC,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,IAAI,CACxG,GAAG,CAAC,CAAC,CAAC,qBAAqB,EAAE,uBAAuB,CAAC,EAAE,EAAE;YACvD,MAAM,yBAAyB,GAAG;gBAChC,GAAG,IAAI,CAAC,qBAAqB,EAAE,MAAM,CAAC;gBACtC,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,MAAM,CAAC;aACzC,CAAC;YACF,MAAM,2BAA2B,GAAG;gBAClC,GAAG,IAAI,CAAC,uBAAuB,EAAE,MAAM,CAAC;gBACxC,GAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,MAAM,CAAC;aAC3C,CAAC;YAEF,OAAO,YAAY,CAAC,yBAAyB,EAAE,2BAA2B,CAAC,CAAC,MAAM,CAChF,YAAY,CACV,IAAI,CAAC,oBAAoB,CAAC,8BAA8B,EAAE,MAAM,CAAC,EACjE,yBAAyB,CAAC,MAAM,CAAC,2BAA2B,CAAC,CAC9D,CACF,CAAC;QACJ,CAAC,CAAC,EACF,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;QAEM,mBAAc,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;QAE7F,oBAAe,GAAG,aAAa,CAAC;YACtC,IAAI,CAAC,sBAAsB;YAC3B,IAAI,CAAC,wBAAwB;YAC7B,IAAI,CAAC,eAAe;SACrB,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,qBAAqB,EAAE,uBAAuB,EAAE,cAAc,CAAC,EAAE,EAAE;YACvE,MAAM,qBAAqB,GAAG,KAAK,CAAC,qBAAqB,CAAC;iBACvD,MAAM,CAAC,uBAAuB,CAAC;iBAC/B,GAAG,CAAC,4BAA4B,CAAC;iBACjC,MAAM,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,gBAAgB,EAAE,EAAE,CAAC,QAAQ,CAAC,gBAAgB,EAAE,OAAO,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;iBAC5F,KAAK,EAAE,CAAC;YAEX,OAAO,MAAM,CAAC,qBAAqB,EAAE,uBAAuB,CAAC;iBAC1D,MAAM,CAAC,CAAC,eAAe,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;iBACzF,GAAG,CAAC,CAAC,eAAe,EAAE,EAAE;gBACvB,MAAM,KAAK,GAAG,SAAS,CAAC,eAAe,CAAC,CAAC;gBAEzC,IAAI,QAAQ,CAAC,cAAc,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE;oBACxC,IAAI,KAAK,CAAC,YAAY,CAAC,MAAM,KAAK,oBAAoB,CAAC,iBAAiB,CAAC,OAAO,EAAE;wBAChF,KAAK,CAAC,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,MAAM,IAAI,CAAC,uBAAuB,CAAC,cAAc,CACzE,IAAI,CAAC,2BAA2B,CACjC,EAAE,CAAC;qBACL;yBAAM;wBACL,KAAK,CAAC,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,MAAM,IAAI,CAAC,uBAAuB,CAAC,cAAc,CACzE,IAAI,CAAC,6BAA6B,CACnC,EAAE,CAAC;qBACL;iBACF;gBAED,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE;oBACtE,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC;iBACnD;gBAED,OAAO,KAAK,CAAC;YACf,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,EACF,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;QAEF,QAAG,GAAG,aAAa,CAAC;YAClB,IAAI,CAAC,uBAAuB;YAC5B,IAAI,CAAC,yBAAyB;YAC9B,IAAI,CAAC,cAAc;YACnB,IAAI,CAAC,eAAe;SACrB,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,sBAAsB,EAAE,wBAAwB,EAAE,aAAa,EAAE,cAAc,CAAC,EAAE,EAAE,CAAC,CAAC;YAC1F,sBAAsB;YACtB,wBAAwB;YACxB,aAAa;YACb,cAAc;SACf,CAAC,CAAC,CACJ,CAAC;QAIF,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,CAAC,mBAAmB;YACjC,OAAO,EAAE,MAAM;YACf,IAAI,EAAE,QAAQ;YACd,WAAW,EAAE,KAAK;SACnB,CAAC;QAEF,gBAAW,GAAgB;YACzB,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACvC,mFAAmF,CACpF;YACD,iBAAiB,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAC9C,mFAAmF,CACpF;YACD,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACpC,qFAAqF,CACtF;YACD,iBAAiB,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,6CAA6C,CAAC;SAChG,CAAC;IAYF,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QAEjB,IAAI,CAAC,eAAe;aACjB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAChC,SAAS,CAAC,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,IAAI;QACF,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACjD,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;IACxD,CAAC;IAED,eAAe,CAAC,KAAuB;QACrC,OAAO,KAAK,CAAC,IAAI,CAAC;IACpB,CAAC;IAEO,gBAAgB,CAAC,KAAuB;QAC9C,OAAO,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC;IAC1C,CAAC;IAEO,uBAAuB,CAAC,MAAyB,EAAE,UAAkB;QAC3E,OAAO,IAAI,CAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,gBAAgB,EAAE,CAAC,eAAe,EAAE,EAAE;YACxD,MAAM,mBAAmB,GAAG,SAAS,CAAC,eAAe,CAAC,CAAC;YAEvD,mBAAmB,CAAC,YAAY,GAAG;gBACjC,YAAY,EAAE,oBAAoB,CAAC,gBAAgB;gBACnD,aAAa,EAAE,eAAe,CAAC,EAAE;gBACjC,MAAM,EAAE,UAAU;aACnB,CAAC;YAEF,mBAAmB,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAE5D,yFAAyF;YACzF,IAAI,mBAAmB,CAAC,gBAAgB,EAAE;gBACxC,mBAAmB,CAAC,gBAAgB,GAAG,IAAI,CAAC;aAC7C;YAED,OAAO,mBAAmB,CAAC,cAAc,CAAC;YAE1C,OAAO,mBAAmB,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC7B,CAAC;;yHAtOU,4BAA4B;6GAA5B,4BAA4B,wFCxBzC,ytEAgEA;2FDxCa,4BAA4B;kBANxC,SAAS;mBAAC;oBACT,QAAQ,EAAE,2BAA2B;oBACrC,WAAW,EAAE,yCAAyC;oBACtD,SAAS,EAAE,CAAC,yCAAyC,CAAC;oBACtD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD","sourcesContent":["import { Component, OnDestroy, OnInit, Injector, ChangeDetectionStrategy } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActiveModalRef, DismissReasons, SelectTexts } from '@bmc-ux/adapt-angular';\nimport {\n  IFieldDefinition,\n  IRecordDefinition,\n  RX_RECORD_DEFINITION,\n  RxFieldDefinitionService,\n  RxRecordDefinitionService\n} from '@helix/platform/record/api';\nimport { RxDefinitionNameService } from '@helix/platform/shared/api';\nimport { RxGuidService } from '@helix/platform/utils';\nimport { TranslateService } from '@ngx-translate/core';\nimport { chain, cloneDeep, includes, intersection, map as _map, concat, get, orderBy } from 'lodash';\nimport { combineLatest, Observable, ReplaySubject } from 'rxjs';\nimport { map, shareReplay, startWith, filter as _filter, takeUntil } from 'rxjs/operators';\nimport { RxModalClass } from '@helix/platform/ui-kit';\n\n@Component({\n  selector: 'rx-add-join-fields-editor',\n  templateUrl: './add-join-fields-editor.component.html',\n  styleUrls: ['./add-join-fields-editor.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AddJoinFieldsEditorComponent extends RxModalClass implements OnInit, OnDestroy {\n  private notificationMessage = this.translateService.instant(\n    'com.bmc.arsys.rx.client.record-designer.definition-properties.notification.message'\n  );\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  primaryRecordDefinitionName = this.activeModalRef.getData().primaryRecordDefinitionName;\n  secondaryRecordDefinitionName = this.activeModalRef.getData().secondaryRecordDefinitionName;\n\n  selectLabel = this.translateService.instant(\n    'com.bmc.arsys.rx.client.record-designer.definition-properties.select.label',\n    {\n      primaryRecordDefinitionName: this.rxDefinitionNameService.getDisplayName(this.primaryRecordDefinitionName),\n      secondaryRecordDefinitionName: this.rxDefinitionNameService.getDisplayName(this.secondaryRecordDefinitionName)\n    }\n  );\n\n  private addedPrimaryFields = this.activeModalRef\n    .getData()\n    .addedFields.filter(\n      (field) =>\n        !includes(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds, field.id) &&\n        get(field, 'fieldMapping.source') === RX_RECORD_DEFINITION.sourceRecordTypes.primary\n    );\n\n  private addedSecondaryFields = this.activeModalRef\n    .getData()\n    .addedFields.filter(\n      (field) =>\n        !includes(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds, field.id) &&\n        get(field, 'fieldMapping.source') === RX_RECORD_DEFINITION.sourceRecordTypes.secondary\n    );\n\n  primarySelectedFieldsFormControl = new FormControl([]);\n  secondarySelectedFieldsFormControl = new FormControl([]);\n\n  private primarySelectedFields$ = this.primarySelectedFieldsFormControl.valueChanges.pipe(\n    startWith([]),\n    shareReplay(1)\n  );\n  private secondarySelectedFields$ = this.secondarySelectedFieldsFormControl.valueChanges.pipe(startWith([]));\n\n  private primaryAvailableFields$: Observable<IFieldDefinition[]> = this.rxRecordDefinitionService\n    .get(this.primaryRecordDefinitionName, {}, true)\n    .pipe(\n      map((recordDefinition) =>\n        orderBy(\n          this.getJoinFieldDefinitions(recordDefinition, RX_RECORD_DEFINITION.sourceRecordTypes.primary).filter(\n            (field) => !includes(_map(this.addedPrimaryFields, this.getSourceFieldId), this.getSourceFieldId(field))\n          ),\n          ['name'],\n          ['asc']\n        )\n      )\n    );\n\n  private secondaryAvailableFields$: Observable<IFieldDefinition[]> = this.rxRecordDefinitionService\n    .get(this.secondaryRecordDefinitionName, {}, true)\n    .pipe(\n      map((recordDefinition) =>\n        orderBy(\n          this.getJoinFieldDefinitions(recordDefinition, RX_RECORD_DEFINITION.sourceRecordTypes.secondary).filter(\n            (field) => !includes(_map(this.addedSecondaryFields, this.getSourceFieldId), this.getSourceFieldId(field))\n          ),\n          ['name'],\n          ['asc']\n        )\n      )\n    );\n\n  private duplicateNames$ = combineLatest([this.primarySelectedFields$, this.secondarySelectedFields$]).pipe(\n    map(([primarySelectedFields, secondarySelectedFields]) => {\n      const selectedPrimaryFieldNames = [\n        ..._map(primarySelectedFields, 'name'),\n        ..._map(this.addedPrimaryFields, 'name')\n      ];\n      const selectedSecondaryFieldNames = [\n        ..._map(secondarySelectedFields, 'name'),\n        ..._map(this.addedSecondaryFields, 'name')\n      ];\n\n      return intersection(selectedPrimaryFieldNames, selectedSecondaryFieldNames).concat(\n        intersection(\n          _map(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFields, 'name'),\n          selectedPrimaryFieldNames.concat(selectedSecondaryFieldNames)\n        )\n      );\n    }),\n    shareReplay(1)\n  );\n\n  private hasDuplicates$ = this.duplicateNames$.pipe(map((duplicateNames) => !!duplicateNames.length));\n\n  private selectedFields$ = combineLatest([\n    this.primarySelectedFields$,\n    this.secondarySelectedFields$,\n    this.duplicateNames$\n  ]).pipe(\n    map(([primarySelectedFields, secondarySelectedFields, duplicateNames]) => {\n      const nonRetainableFieldIds = chain(primarySelectedFields)\n        .concat(secondarySelectedFields)\n        .map('fieldMapping.sourceFieldId')\n        .filter((fieldId, index, selectedFieldIds) => includes(selectedFieldIds, fieldId, index + 1))\n        .value();\n\n      return concat(primarySelectedFields, secondarySelectedFields)\n        .filter((fieldDefinition) => this.rxFieldDefinitionService.isJoinedField(fieldDefinition))\n        .map((fieldDefinition) => {\n          const field = cloneDeep(fieldDefinition);\n\n          if (includes(duplicateNames, field.name)) {\n            if (field.fieldMapping.source === RX_RECORD_DEFINITION.sourceRecordTypes.primary) {\n              field.name = `${field.name} - ${this.rxDefinitionNameService.getDisplayName(\n                this.primaryRecordDefinitionName\n              )}`;\n            } else {\n              field.name = `${field.name} - ${this.rxDefinitionNameService.getDisplayName(\n                this.secondaryRecordDefinitionName\n              )}`;\n            }\n          }\n\n          if (!includes(nonRetainableFieldIds, field.fieldMapping.sourceFieldId)) {\n            field.customId = field.fieldMapping.sourceFieldId;\n          }\n\n          return field;\n        });\n    }),\n    shareReplay(1)\n  );\n\n  vm$ = combineLatest([\n    this.primaryAvailableFields$,\n    this.secondaryAvailableFields$,\n    this.hasDuplicates$,\n    this.selectedFields$\n  ]).pipe(\n    map(([primaryAvailableFields, secondaryAvailableFields, hasDuplicates, selectedFields]) => ({\n      primaryAvailableFields,\n      secondaryAvailableFields,\n      hasDuplicates,\n      selectedFields\n    }))\n  );\n\n  private selectedFields: IFieldDefinition[];\n\n  alertConfig = {\n    content: this.notificationMessage,\n    variant: 'info',\n    type: 'inline',\n    dismissible: false\n  };\n\n  selectTexts: SelectTexts = {\n    headerText: this.translateService.instant(\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.select.header.label'\n    ),\n    numberOptionsText: this.translateService.instant(\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.select.fields.label'\n    ),\n    checked: this.translateService.instant(\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.select.selected.label'\n    ),\n    searchPlaceholder: this.translateService.instant('com.bmc.arsys.rx.client.common.search.label')\n  };\n\n  constructor(\n    private translateService: TranslateService,\n    private rxGuidService: RxGuidService,\n    private rxRecordDefinitionService: RxRecordDefinitionService,\n    public activeModalRef: ActiveModalRef,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxFieldDefinitionService: RxFieldDefinitionService,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.selectedFields$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((selectedFields) => (this.selectedFields = selectedFields));\n  }\n\n  save(): void {\n    this.activeModalRef.close(this.selectedFields);\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  optionFormatter(field: IFieldDefinition): string {\n    return field.name;\n  }\n\n  private getSourceFieldId(field: IFieldDefinition): string {\n    return field.fieldMapping.sourceFieldId;\n  }\n\n  private getJoinFieldDefinitions(record: IRecordDefinition, sourceType: string): IFieldDefinition[] {\n    return _map(record?.fieldDefinitions, (fieldDefinition) => {\n      const joinFieldDefinition = cloneDeep(fieldDefinition);\n\n      joinFieldDefinition.fieldMapping = {\n        resourceType: RX_RECORD_DEFINITION.joinFieldMapping,\n        sourceFieldId: fieldDefinition.id,\n        source: sourceType\n      };\n\n      joinFieldDefinition.id = this.rxGuidService.generate('rx-');\n\n      // Join record should not carry forward FTS properties from primary and secondary record.\n      if (joinFieldDefinition.searchDefinition) {\n        joinFieldDefinition.searchDefinition = null;\n      }\n\n      delete joinFieldDefinition.lastUpdateTime;\n\n      return joinFieldDefinition;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <div class=\"modal-body d-flex flex-column mh-100\">\n    <div>\n      <adapt-alert *ngIf=\"vm.hasDuplicates\" class=\"mb-3\" [config]=\"alertConfig\"></adapt-alert>\n    </div>\n\n    <label>{{ selectLabel }}</label>\n\n    <div class=\"d-flex flex-row select-container\">\n      <adapt-rx-select\n        rx-id=\"primary-fields\"\n        class=\"d-flex flex-column h-100\"\n        *ngIf=\"vm.primaryAvailableFields\"\n        [inline]=\"true\"\n        [multiple]=\"true\"\n        [options]=\"vm.primaryAvailableFields\"\n        [optionFormatter]=\"optionFormatter\"\n        [selectAllButton]=\"true\"\n        [deselectAllButton]=\"true\"\n        [texts]=\"selectTexts\"\n        [popupMaxHeight]=\"'100%'\"\n        [formControl]=\"primarySelectedFieldsFormControl\"\n        enableFilter=\"true\"\n        [label]=\"'com.bmc.arsys.rx.client.record-designer.definition-properties.primary.label' | translate\"\n      >\n      </adapt-rx-select>\n\n      <adapt-rx-select\n        rx-id=\"secondary-fields\"\n        class=\"ml-3 d-flex flex-column h-100\"\n        *ngIf=\"vm.secondaryAvailableFields\"\n        [inline]=\"true\"\n        [multiple]=\"true\"\n        [options]=\"vm.secondaryAvailableFields\"\n        [optionFormatter]=\"optionFormatter\"\n        [selectAllButton]=\"true\"\n        [deselectAllButton]=\"true\"\n        [texts]=\"selectTexts\"\n        [popupMaxHeight]=\"'100%'\"\n        [formControl]=\"secondarySelectedFieldsFormControl\"\n        enableFilter=\"true\"\n        [label]=\"'com.bmc.arsys.rx.client.record-designer.definition-properties.secondary.label' | translate\"\n      >\n      </adapt-rx-select>\n    </div>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button\n      adapt-button\n      type=\"button\"\n      btn-type=\"primary\"\n      rx-id=\"save-button\"\n      [disabled]=\"vm.selectedFields.length === 0\"\n      (click)=\"save()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n\n    <button adapt-button type=\"button\" btn-type=\"secondary\" (click)=\"cancel()\" rx-id=\"cancel-button\">\n      {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n    </button>\n  </div>\n</ng-container>\n"]}