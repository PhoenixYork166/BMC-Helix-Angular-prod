{"version":3,"file":"view-definition.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/api/services/view-definition.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  ICommand,\n  IHttpGetParams,\n  RX_BUNDLE,\n  RxCommandFactoryService,\n  RxLocalizationService\n} from '@helix/platform/shared/api';\nimport { RxGuidService } from '@helix/platform/utils';\nimport { IViewDefinition } from '../domain/view-definition.interface';\nimport { RX_VIEW_DEFINITION } from '../domain/view-definition.constant';\nimport { RxViewDefinitionLocalizationService } from './view-definition-localization.service';\nimport { RxViewComponentType } from '../domain/view-component.types';\nimport { RxViewLayout } from '../layout/view-layout.class';\n\nexport const renameViewDefinitionCommand = 'com.bmc.arsys.rx.application.view.command.RenameViewDefinitionCommand';\nexport const revertCustomizationResourceType = 'com.bmc.arsys.rx.application.view.command.RevertViewDefinitionCommand';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDefinitionService {\n  private renameCommand: ICommand;\n  private revertCustomizationCommand: ICommand;\n\n  constructor(\n    private httpClient: HttpClient,\n    private rxGuidService: RxGuidService,\n    private rxCommandFactoryService: RxCommandFactoryService,\n    private rxViewDefinitionLocalizationService: RxViewDefinitionLocalizationService,\n    private rxLocalizationService: RxLocalizationService\n  ) {\n    this.renameCommand = rxCommandFactoryService.forResourceType(renameViewDefinitionCommand);\n    this.revertCustomizationCommand = rxCommandFactoryService.forResourceType(revertCustomizationResourceType);\n  }\n\n  get(viewDefinitionName: string, options?: IHttpGetParams): Observable<IViewDefinition> {\n    const defaultOptions = { params: { locale: this.rxLocalizationService.currentLocale } };\n\n    return this.httpClient\n      .get(this.getUrl(viewDefinitionName), {\n        ...defaultOptions,\n        ...options\n      })\n      .pipe(\n        map((viewDefinition: IViewDefinition) =>\n          this.rxViewDefinitionLocalizationService.applyLocalization(viewDefinition)\n        )\n      );\n  }\n\n  getNew(layoutTemplate: number): Observable<IViewDefinition> {\n    return of(this.getNewViewDefinition.call(this, layoutTemplate));\n  }\n\n  create(viewDefinition: IViewDefinition): Observable<HttpResponse<any>> {\n    return this.httpClient.post(this.getUrl(), viewDefinition, { responseType: 'text', observe: 'response' });\n  }\n\n  update(\n    viewDefinitionName: string,\n    viewDefinition: IViewDefinition,\n    options?: {\n      headers?:\n        | HttpHeaders\n        | {\n            [header: string]: string | string[];\n          };\n    }\n  ): Observable<any> {\n    return this.httpClient.put(this.getUrl(viewDefinitionName), viewDefinition, options);\n  }\n\n  delete(viewDefinitionName: string): Observable<any> {\n    return this.httpClient.delete(this.getUrl(viewDefinitionName));\n  }\n\n  rename(oldViewDefinitionName: string, newViewDefinitionName: string): Observable<any> {\n    return this.renameCommand.execute({\n      name: oldViewDefinitionName,\n      newName: newViewDefinitionName\n    });\n  }\n\n  isPageView(viewDefinition: IViewDefinition): boolean {\n    return (\n      viewDefinition.componentDefinitions.length === 1 &&\n      viewDefinition.componentDefinitions[0].type === RxViewComponentType.Page\n    );\n  }\n\n  revertCustomization(viewDefinitionName: string): Observable<any> {\n    return this.revertCustomizationCommand.execute({ viewDefinitionName });\n  }\n\n  private getUrl(viewDefinitionName?: string): string {\n    return viewDefinitionName\n      ? `/api/rx/application/view/viewdefinition/${encodeURIComponent(viewDefinitionName)}`\n      : '/api/rx/application/view/viewdefinition';\n  }\n\n  private getNewViewDefinition(layoutTemplate: number = RX_VIEW_DEFINITION.defaultLayoutTemplateId): IViewDefinition {\n    return {\n      guid: this.rxGuidService.generate(),\n      name: null,\n      description: null,\n      componentDefinitions: [],\n      inputParams: [],\n      outputParams: [],\n      allowOverlay: false,\n      layout: JSON.stringify(RxViewLayout.getViewLayoutTemplate(layoutTemplate)),\n      permissions: [\n        {\n          ownerId: {\n            value: 0,\n            name: 'Public',\n            type: 'GROUP'\n          },\n          type: 'VISIBLE'\n        }\n      ],\n      type: RX_VIEW_DEFINITION.types.regular,\n      scope: RX_BUNDLE.definitionScopeTypes.bundle,\n      targetViewDefinitionName: null,\n      targetExtensionContainerGuid: null,\n      styles: null\n    };\n  }\n}\n"]}