{"version":3,"file":"view-data-dictionary-store.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/designer/core/view-data-dictionary-store.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { IDataDictionaryBranch } from '@helix/platform/shared/api';\nimport { flow, has, isEmpty, map, omit, reject, sortBy } from 'lodash';\nimport { ISetSettablePropertiesDataDictionaryItem } from '../+state/view-component.types';\nimport { IViewDesignerActionOutputDataDictionaryState } from '../interfaces/view-designer-action-output-data-dictionary-state.interface';\nimport { IViewDesignerComponentsCommonDataDictionaryState } from '../interfaces/view-designer-components-data-dictionary-state.interface';\nimport { IViewDesignerViewCommonDataDictionaryState } from '../interfaces/view-designer-view-data-dictionary-state.interface';\nimport { IViewDesignerSettablePropertiesDataDictionaryState } from '../interfaces/view-designer-settable-properties-data-dictionary.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDataDictionaryStoreService {\n  private componentsCommon: IViewDesignerComponentsCommonDataDictionaryState = null;\n  private componentsCommonSubject = new ReplaySubject<IViewDesignerComponentsCommonDataDictionaryState>(1);\n  componentsCommon$ = this.componentsCommonSubject.asObservable();\n\n  private viewCommon = null;\n  private viewCommonSubject = new ReplaySubject<IViewDesignerViewCommonDataDictionaryState>(1);\n  viewCommon$ = this.viewCommonSubject.asObservable();\n\n  private actionsOutput: IViewDesignerActionOutputDataDictionaryState[] = [];\n  private actionsOutputSubject = new ReplaySubject<IViewDesignerActionOutputDataDictionaryState[]>(1);\n  actionsOutput$ = this.actionsOutputSubject.asObservable();\n\n  private settableProperties: IViewDesignerSettablePropertiesDataDictionaryState = null;\n  private settablePropertiesSubject = new ReplaySubject<IViewDesignerSettablePropertiesDataDictionaryState>(1);\n  settableProperties$ = this.settablePropertiesSubject.asObservable();\n\n  setCommonDataDictionaryBranch(guid: string, dataDictionaryBranch: IDataDictionaryBranch): void {\n    this.setComponentCommon(\n      isEmpty(dataDictionaryBranch)\n        ? omit(this.componentsCommon, [guid])\n        : { ...this.componentsCommon, [guid]: dataDictionaryBranch }\n    );\n  }\n\n  setViewCommonDataDictionaryBranch(dataDictionaryBranch: IDataDictionaryBranch): void {\n    this.setViewCommon(dataDictionaryBranch);\n  }\n\n  setSettablePropertiesDataDictionary(items: ISetSettablePropertiesDataDictionaryItem[]): void {\n    this.setSettableProperties({\n      ...this.settableProperties,\n      ...items.reduce((result, { guid, componentName, dataDictionary }) => {\n        result[guid] = { componentName, dataDictionary };\n\n        return result;\n      }, {})\n    });\n  }\n\n  removeDataDictionaryForComponents(guids: string[]): void {\n    if (guids.some((guid) => has(this.componentsCommon, guid))) {\n      this.setComponentCommon(omit(this.componentsCommon, guids));\n    }\n\n    if (guids.some((guid) => has(this.settableProperties, guid))) {\n      this.setSettableProperties(omit(this.settableProperties, guids));\n    }\n  }\n\n  setActionOutputDataDictionaryBranch(guid: string, index: number, dataDictionaryBranch: IDataDictionaryBranch): void {\n    this.setActionsOutput(\n      flow(\n        (actions) => [\n          ...reject<IViewDesignerActionOutputDataDictionaryState>(actions, { guid }),\n          { guid, index, dataDictionaryBranch }\n        ],\n        (actions) => sortBy(actions, 'index')\n      )(this.actionsOutput)\n    );\n  }\n\n  updateActionOutputDataDictionaryBranchOrder(actions: { [guid: string]: number }): void {\n    this.setActionsOutput(\n      flow(\n        (actionsOutput) =>\n          map(actionsOutput, (actionOutput) => ({\n            ...actionOutput,\n            index: actions[actionOutput.guid]\n          })),\n        (actionsOutput) => sortBy(actionsOutput, 'index')\n      )(this.actionsOutput)\n    );\n  }\n\n  removeActionOutputDataDictionaryBranch(guid: string): void {\n    this.setActionsOutput(reject(this.actionsOutput, { guid }));\n  }\n\n  removeAllActionOutputDataDictionaryBranches(): void {\n    this.setActionsOutput(null);\n  }\n\n  clear(): void {\n    this.setComponentCommon(null);\n    this.setViewCommon(null);\n    this.setSettableProperties(null);\n    this.setActionsOutput([]);\n  }\n\n  private setComponentCommon(state: IViewDesignerComponentsCommonDataDictionaryState): void {\n    this.componentsCommon = state;\n    this.componentsCommonSubject.next(this.componentsCommon);\n  }\n\n  private setViewCommon(state: IViewDesignerViewCommonDataDictionaryState): void {\n    this.viewCommon = state;\n    this.viewCommonSubject.next(this.viewCommon);\n  }\n\n  private setActionsOutput(state: IViewDesignerActionOutputDataDictionaryState[]): void {\n    this.actionsOutput = state;\n    this.actionsOutputSubject.next(this.actionsOutput);\n  }\n\n  private setSettableProperties(state: IViewDesignerSettablePropertiesDataDictionaryState): void {\n    this.settableProperties = state;\n    this.settablePropertiesSubject.next(this.settableProperties);\n  }\n}\n"]}