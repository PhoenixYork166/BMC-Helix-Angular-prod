{"version":3,"file":"select-with-pagination.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/components/select-with-pagination/select-with-pagination.component.ts","../../../../../../../libs/platform/shared/components/select-with-pagination/select-with-pagination.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  DoCheck,\n  EventEmitter,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NgControl, NgModel } from '@angular/forms';\nimport { AdaptRxSelectComponent, RxSelectOption, SelectModelFormat } from '@bmc-ux/adapt-angular';\nimport { SelectSettings } from '@bmc-ux/obsolete';\nimport { once } from 'lodash';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime, finalize, map, startWith, switchMap, take, tap } from 'rxjs/operators';\nimport { IRxSelectWithPaginationOption, IRxSelectWithPaginationOptionsPage } from './select-with-pagination.interfaces';\n\n@Component({\n  selector: 'rx-select-with-pagination',\n  templateUrl: './select-with-pagination.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RxSelectWithPaginationComponent,\n      multi: true\n    }\n  ]\n})\nexport class RxSelectWithPaginationComponent implements ControlValueAccessor, OnInit, DoCheck, OnChanges, OnDestroy {\n  loadMoreCallbackFunc = this.onFilterValueChange.bind(this);\n\n  selectedValue: IRxSelectWithPaginationOption[] = [];\n  isOptionLoadingInProgress = false;\n  isFirstOptionPageLoaded = false;\n  showLoadMoreButton = true;\n  formControl: NgControl;\n\n  adaptSelectSettings: SelectSettings = {\n    enableSearch: true,\n    showUncheckAll: true,\n    modelFormat: SelectModelFormat.object,\n    placement: 'auto'\n  };\n\n  private onFirstTimeDropdownOpen = once(this.onFilterValueChange);\n  private onViewValueChange: Function;\n  private onTouched: Function;\n  private lastFilterValue: string;\n  private startIndex = 0;\n  private adaptSelectDefaultTitle: string;\n  private adaptSelectOptions: IRxSelectWithPaginationOption[] = [];\n  private filterValue$ = new Subject<string>();\n\n  options$ = this.filterValue$.pipe(\n    tap(() => {\n      this.isOptionLoadingInProgress = true;\n    }),\n    debounceTime(250),\n    switchMap((query) => this.loadOptions(query)),\n    startWith([])\n  );\n\n  @ViewChild(AdaptRxSelectComponent, { static: true, read: NgModel })\n  ngModel: NgModel;\n\n  @ViewChild(AdaptRxSelectComponent, { static: true })\n  adaptSelectComponent: AdaptRxSelectComponent;\n\n  @Input()\n  label = '';\n\n  @Input()\n  required = false;\n\n  @Input()\n  isMultiSelectionMode = false;\n\n  @Input()\n  optionLoader: (\n    startIndex: number,\n    pageSize: number,\n    searchQuery: string\n  ) => Observable<IRxSelectWithPaginationOptionsPage>;\n\n  @Input()\n  pageSize = 50;\n\n  @Input()\n  showDefaultTitle = true;\n\n  @Input()\n  showUncheckAll = true;\n\n  @Input()\n  readonly = false;\n\n  @Input()\n  template: TemplateRef<any>;\n\n  @Output()\n  toggleDropdown: EventEmitter<boolean> = new EventEmitter();\n\n  @Output()\n  selectionChange: EventEmitter<RxSelectOption> = new EventEmitter<RxSelectOption>();\n\n  @Input()\n  viewToModelValueAdapter = (viewValue: IRxSelectWithPaginationOption[]): any => viewValue;\n\n  @Input()\n  modelToViewValueAdapter = (modelValue: any): IRxSelectWithPaginationOption[] => modelValue;\n\n  @Input()\n  optionFormatter = (option: IRxSelectWithPaginationOption): string => option.displayValue;\n\n  constructor(private injector: Injector) {}\n\n  ngOnInit(): void {\n    // cannot inject NgControl instance directly due to the angular circular dependency error.\n    // see: https://github.com/angular/components/pull/13860/commits/f6b179e02b33c058a018ce4ccc51932d1416331f\n    this.formControl = this.injector.get(NgControl);\n\n    this.adaptSelectSettings = {\n      ...this.adaptSelectSettings,\n      showUncheckAll: this.showUncheckAll,\n      pageSize: this.pageSize\n    };\n\n    if (this.isMultiSelectionMode) {\n      this.adaptSelectSettings.checkedStyle = 'checkbox';\n      this.adaptSelectSettings.showTooltip = true;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.showDefaultTitle && this.adaptSelectComponent.texts) {\n      if (changes.showDefaultTitle.isFirstChange()) {\n        this.adaptSelectDefaultTitle = this.adaptSelectComponent.texts.defaultTitle;\n        this.adaptSelectComponent.texts.defaultTitle = null;\n      }\n\n      this.adaptSelectComponent.texts = {\n        ...this.adaptSelectComponent.texts,\n        defaultTitle: changes.showDefaultTitle.currentValue ? this.adaptSelectDefaultTitle : null\n      };\n    }\n  }\n\n  resetLoadedOptions(): void {\n    this.onFirstTimeDropdownOpen = once(this.onFilterValueChange);\n    this.lastFilterValue = null;\n    this.isFirstOptionPageLoaded = false;\n    this.adaptSelectOptions = [];\n  }\n\n  onFilterValueChange(filterValue: string = this.lastFilterValue || ''): void {\n    this.filterValue$.next(filterValue);\n  }\n\n  private loadOptions(filterValue: string = this.lastFilterValue || ''): Observable<IRxSelectWithPaginationOption[]> {\n    if (this.lastFilterValue === filterValue) {\n      this.startIndex = this.pageSize > 0 ? this.startIndex + this.pageSize : 0;\n    } else {\n      this.lastFilterValue = filterValue;\n\n      this.startIndex = 0;\n    }\n\n    return this.optionLoader(this.startIndex, this.pageSize, this.lastFilterValue).pipe(\n      take(1),\n      tap((optionsPage: IRxSelectWithPaginationOptionsPage) => {\n        const options = optionsPage.options;\n\n        if (this.startIndex === 0) {\n          this.adaptSelectOptions = options;\n          this.isFirstOptionPageLoaded = true;\n        } else {\n          this.adaptSelectOptions = this.adaptSelectOptions.concat(options);\n        }\n\n        this.showLoadMoreButton = optionsPage.totalSize > this.adaptSelectOptions.length;\n      }),\n      map(() => this.adaptSelectOptions),\n      finalize(() => {\n        this.isOptionLoadingInProgress = false;\n      })\n    );\n  }\n\n  writeValue(selectedValue: any): void {\n    this.selectedValue = this.modelToViewValueAdapter(selectedValue);\n  }\n\n  onSelectedValueChange(selectedValue): void {\n    this.onViewValueChange(this.viewToModelValueAdapter(selectedValue));\n  }\n\n  ngDoCheck(): void {\n    if (this.formControl.untouched && this.ngModel.touched) {\n      this.ngModel.control.markAsUntouched();\n    } else if (this.formControl.touched && this.ngModel.untouched) {\n      this.ngModel.control.markAsTouched();\n    }\n\n    if (this.formControl.pristine && this.ngModel.control.dirty) {\n      this.ngModel.control.markAsPristine();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onViewValueChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  onDropdownToggle(isOpen: boolean): void {\n    if (isOpen) {\n      this.onFirstTimeDropdownOpen();\n      this.toggleDropdown.next(true);\n    } else {\n      this.onTouched();\n      this.toggleDropdown.next(false);\n\n      if (this.lastFilterValue) {\n        this.onFilterValueChange('');\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.filterValue$.complete();\n  }\n}\n","<adapt-rx-select\n  class=\"mb-0\"\n  [popupClass]=\"'rx-truncate-option-content'\"\n  [label]=\"label\"\n  [multiple]=\"isMultiSelectionMode\"\n  [selectAllButton]=\"showUncheckAll\"\n  [deselectAllButton]=\"isMultiSelectionMode\"\n  [options]=\"options$ | async\"\n  [ngModel]=\"selectedValue\"\n  (ngModelChange)=\"onSelectedValueChange($event)\"\n  [disabled]=\"formControl.disabled\"\n  [readonly]=\"readonly\"\n  [required]=\"required\"\n  [loadMoreCallback]=\"loadMoreCallbackFunc\"\n  [loadMoreButton]=\"!(pageSize === -1) && showLoadMoreButton\"\n  [loadingState]=\"isOptionLoadingInProgress && !isFirstOptionPageLoaded\"\n  [loadMoreInProgress]=\"isOptionLoadingInProgress && isFirstOptionPageLoaded\"\n  (onFilterValueChange)=\"onFilterValueChange($event)\"\n  (onPopupOpenChange)=\"onDropdownToggle($event)\"\n  [optionFormatter]=\"optionFormatter\"\n  [enableFilter]=\"true\"\n  [emptyOption]=\"!isMultiSelectionMode\"\n  [optionContentTemplate]=\"template\"\n  (onSelectionChange)=\"selectionChange.emit($event)\"\n></adapt-rx-select>\n"]}