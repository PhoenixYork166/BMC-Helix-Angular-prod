{"version":3,"file":"rx-adapt-datetime-moment-adapter.service.js","sourceRoot":"","sources":["../../../../../../../../../../libs/platform/view/components/record-grid/common/components/date-time-range-filter/rx-adapt-datetime-moment-adapter.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,sBAAsB,EAAoB,MAAM,uBAAuB,CAAC;AACjF,OAAO,MAAM,MAAM,YAAY,CAAC;;AAChC,4JAA4J;AAC5J,8GAA8G;AAE9G,MAAM,OAAO,4BAA6B,SAAQ,sBAAqC;IACrF;;OAEG;IACH,SAAS,CAAC,SAA+B;QACvC,IAAI,YAAY,GAAqB,IAAI,CAAC;QAC1C,MAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;QAE/B,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;YAC1B,YAAY,GAAG;gBACb,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;gBACjB,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE;gBACnB,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;gBACjB,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE;gBACnB,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE;gBACvB,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE;aACxB,CAAC;SACH;QAED,OAAO,YAAY,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,OAAO,CAAC,IAA6B;;QACnC,IAAI,YAAY,GAAkB,IAAI,CAAC;QAEvC,IAAI,IAAI,EAAE;YACR,MAAM,eAAe,GAAG,MAAM,EAAE,CAAC;YAEjC,YAAY,GAAG,IAAI,CAAC,UAAU;gBAC5B,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;oBACb,aAAa,EAAE,IAAI;oBACnB,eAAe,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;oBACxC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;iBACvD,CAAC;gBACJ,CAAC,CAAC,MAAM,CAAC;oBACL,MAAA,IAAI,CAAC,IAAI,mCAAI,eAAe,CAAC,IAAI,EAAE;oBACnC,MAAA,IAAI,CAAC,KAAK,mCAAI,eAAe,CAAC,KAAK,EAAE;oBACrC,MAAA,IAAI,CAAC,IAAI,mCAAI,eAAe,CAAC,IAAI,EAAE;oBACnC,MAAA,IAAI,CAAC,KAAK,mCAAI,CAAC;oBACf,MAAA,IAAI,CAAC,OAAO,mCAAI,CAAC;oBACjB,MAAA,IAAI,CAAC,OAAO,mCAAI,CAAC;iBAClB,CAAC,CAAC;SACR;QAED,OAAO,YAAY,CAAC;IACtB,CAAC;;yHAhDU,4BAA4B;6HAA5B,4BAA4B;2FAA5B,4BAA4B;kBADxC,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AdaptRxDatetimeAdapter, RxDatetimeStruct } from '@bmc-ux/adapt-angular';\nimport moment from 'moment-es6';\n// Adapt dropped moment and changed the signature of AdvancedFilterTimeDataType from [moment.Moment, moment.Moment] to [RxDatetimeStruct, RxDatetimeStruct].\n// We need to extend the AdaptRxDatetimeAdapter class to implement the missing moment methods that we rely on.\n@Injectable()\nexport class RxAdaptDatetimeMomentAdapter extends AdaptRxDatetimeAdapter<moment.Moment> {\n  /**\n   * Converts moment.Moment => RxDatetimeStruct\n   */\n  fromModel(dateValue: moment.Moment | null): RxDatetimeStruct | null {\n    let adaptedValue: RxDatetimeStruct = null;\n    const date = moment(dateValue);\n\n    if (date && date.isValid()) {\n      adaptedValue = {\n        year: date.year(),\n        month: date.month(),\n        date: date.date(),\n        hours: date.hours(),\n        minutes: date.minutes(),\n        seconds: date.seconds()\n      };\n    }\n\n    return adaptedValue;\n  }\n\n  /**\n   * Converts RxDatetimeStruct => moment.Moment\n   */\n  toModel(date: RxDatetimeStruct | null): moment.Moment | null {\n    let adaptedValue: moment.Moment = null;\n\n    if (date) {\n      const currentDateTime = moment();\n\n      adaptedValue = date.parseError\n        ? moment.invalid({\n            invalidFormat: true,\n            parsedDateParts: [date.parseError.query],\n            meridiem: date.parseError.use12HoursTime ? '12' : '24'\n          })\n        : moment([\n            date.year ?? currentDateTime.year(),\n            date.month ?? currentDateTime.month(),\n            date.date ?? currentDateTime.date(),\n            date.hours ?? 0,\n            date.minutes ?? 0,\n            date.seconds ?? 0\n          ]);\n    }\n\n    return adaptedValue;\n  }\n}\n"]}