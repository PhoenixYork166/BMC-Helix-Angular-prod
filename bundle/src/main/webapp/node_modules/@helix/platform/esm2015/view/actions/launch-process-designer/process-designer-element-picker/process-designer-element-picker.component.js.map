{"version":3,"file":"process-designer-element-picker.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/actions/launch-process-designer/process-designer-element-picker/process-designer-element-picker.component.ts","../../../../../../../../libs/platform/view/actions/launch-process-designer/process-designer-element-picker/process-designer-element-picker.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, ElementRef, Input, OnDestroy, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AdaptTreeNode } from '@bmc-ux/adapt-angular';\nimport { RxProcessElementsService, RX_PROCESS_DEFINITION } from '@helix/platform/process/api';\nimport { IDesignerStencilElementTree, RxDesignerStencilBuilder } from '@helix/platform/shared/api';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { RxJsonParserService } from '@helix/platform/utils';\nimport { TranslateService } from '@ngx-translate/core';\nimport { flatten, forEach, isEmpty, isEqual, map, some } from 'lodash';\nimport { ReplaySubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport {\n  IProcessDesignerElementsPickerComponentOptions,\n  IProcessElementTreeNode,\n  IProcessElementTreeNodeValue\n} from './process-designer-element-picker.interfaces';\n\n@Component({\n  selector: 'rx-process-designer-element-picker',\n  templateUrl: './process-designer-element-picker.component.html',\n  styleUrls: ['./process-designer-element-picker.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RxProcessDesignerElementPickerComponent,\n      multi: true\n    }\n  ]\n})\nexport class RxProcessDesignerElementPickerComponent extends ValueAccessor<string> implements OnInit, OnDestroy {\n  @Input()\n  options: IProcessDesignerElementsPickerComponentOptions;\n\n  @ViewChild('dropdownButton', { static: true })\n  dropdownButton: ElementRef;\n\n  dropdownWidth: number;\n  processElementsTree: AdaptTreeNode[];\n  selectedPaletteElementsByLabel: string;\n  selection: IProcessElementTreeNode[] = [];\n\n  private selectedPaletteElements: IProcessElementTreeNodeValue[] | string;\n  private stencilElements: IProcessElementTreeNode[];\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  constructor(\n    private rxDesignerStencilBuilder: RxDesignerStencilBuilder,\n    private rxJsonParserService: RxJsonParserService,\n    private rxProcessElementsService: RxProcessElementsService,\n    private renderer: Renderer2,\n    private translateService: TranslateService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    const paletteElementsControl = this.innerValue;\n\n    this.selectedPaletteElements =\n      paletteElementsControl === '*' ? '*' : this.rxJsonParserService.tryParseJson(paletteElementsControl, null);\n\n    this.rxDesignerStencilBuilder\n      .buildElementsTree(\n        this.rxProcessElementsService.getProcessElements(),\n        RX_PROCESS_DEFINITION.standardProcessElementGroups\n      )\n      .pipe(take(1))\n      .subscribe((processElementsTree: IDesignerStencilElementTree[]) => {\n        forEach(processElementsTree, (group) => {\n          group.expanded = true;\n          group.allChildElementsSelected = true;\n\n          if (this.selectedPaletteElements?.length) {\n            forEach(group.children, (element) => {\n              if (\n                this.selectedPaletteElements === '*' ||\n                some(this.selectedPaletteElements as [], (selectedPaletteElement) =>\n                  isEqual(selectedPaletteElement, element.value)\n                )\n              ) {\n                this.selection.push(element);\n              } else {\n                group.allChildElementsSelected = false;\n              }\n            });\n\n            if (group.allChildElementsSelected) {\n              this.selection.push(group as unknown as IProcessElementTreeNode);\n            }\n          }\n        });\n\n        this.processElementsTree = [\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.process-designer.all-elements.label'),\n            expanded: true,\n            children: processElementsTree\n          }\n        ];\n\n        this.stencilElements = flatten(map(processElementsTree, 'children'));\n\n        if (this.selectedPaletteElements === '*') {\n          this.selection.push(...this.processElementsTree as IProcessElementTreeNode[]);\n          this.selectedPaletteElements = map(this.stencilElements, 'value');\n        }\n\n        this.updatePickerFakeInputValue();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  onSelectionChange(): void {\n    this.selectedPaletteElements = this.selection.filter((node) => !node.children).map((node) => node.value);\n\n    if (this.selectedPaletteElements.length === 0) {\n      this.selectedPaletteElements = null;\n      this.value = null;\n    } else if (this.stencilElements.length === this.selectedPaletteElements.length) {\n      this.value = '*';\n    } else {\n      this.value = JSON.stringify(this.selectedPaletteElements);\n    }\n\n    this.updatePickerFakeInputValue();\n  }\n\n  updatePickerFakeInputValue(): void {\n    if (isEmpty(this.selectedPaletteElements)) {\n      this.selectedPaletteElementsByLabel = '';\n    } else if (this.stencilElements.length === this.selectedPaletteElements.length) {\n      this.selectedPaletteElementsByLabel = this.translateService.instant('com.bmc.arsys.rx.client.common.all.label');\n    } else if (this.selectedPaletteElements.length === 1) {\n      this.selectedPaletteElementsByLabel = this.translateService.instant(\n        'com.bmc.arsys.rx.client.process-designer.one-element-selected.label'\n      );\n    } else {\n      this.selectedPaletteElementsByLabel = this.translateService.instant(\n        'com.bmc.arsys.rx.client.process-designer.many-elements-selected.label',\n        {\n          count: this.selectedPaletteElements.length\n        }\n      );\n    }\n  }\n\n  clearDefinition(e: Event): void {\n    e.stopPropagation();\n\n    this.selection = [];\n\n    this.selectedPaletteElements = null;\n    this.selectedPaletteElementsByLabel = '';\n\n    this.value = null;\n  }\n\n  setDropdownWidth(): void {\n    setTimeout(() => {\n      const dropdownButton = this.renderer.selectRootElement(this.dropdownButton.nativeElement, true);\n\n      // 2px - border\n      this.dropdownWidth = Math.max(dropdownButton.clientWidth) + 2;\n    });\n  }\n}\n","<adapt-rx-control-label [label]=\"options.label\"></adapt-rx-control-label>\n\n<div\n  adaptDropdown\n  appendToBody=\"true\"\n  autoClose=\"outside\"\n  class=\"dropdown\"\n  placement=\"bottom-left\"\n  (onOpen)=\"setDropdownWidth()\"\n>\n  <button\n    adaptDropdownToggle\n    class=\"btn btn-secondary d-flex text-center w-100\"\n    rx-id=\"toggle-button\"\n    type=\"button\"\n    #dropdownButton\n  >\n    <span class=\"rx-selected-item text-left flex-grow-1\">{{ selectedPaletteElementsByLabel }}</span>\n\n    <span rx-id=\"clear-button\" class=\"d-icon-cross_adapt btn-link\" (click)=\"clearDefinition($event)\" *ngIf=\"value\">\n    </span>\n  </button>\n\n  <div class=\"dropdown-menu px-3\" [style.width.px]=\"dropdownWidth\" adaptDropdownMenu>\n    <adapt-tree\n      [value]=\"processElementsTree\"\n      [selectionMode]=\"'checkbox'\"\n      [(selection)]=\"selection\"\n      (selectionChange)=\"onSelectionChange()\"\n    ></adapt-tree>\n  </div>\n</div>\n"]}