{"version":3,"file":"action-list-control.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/designer/form-controls/action-list-control/action-list-control.component.ts","../../../../../../../../libs/platform/view/designer/form-controls/action-list-control/action-list-control.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { noop, sortBy, transform, without } from 'lodash';\nimport { ActionListEditorDialogComponent } from './action-list-editor-dialog/action-list-editor-dialog.component';\nimport { IActionLabelsMap, IViewActionListItem } from './action-list-control.types';\nimport { IViewActionDescriptor, OpenViewActionModalSize, RxViewActionRegistryService } from '@helix/platform/view/api';\nimport { IActionEditorDialogConfig } from './action-list-editor-dialog/action-list-editor-dialog.types';\nimport { Observable } from 'rxjs';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { IFormControlComponent, IFormFocusable } from '@helix/platform/shared/api';\nimport { RxModalService } from '@helix/platform/ui-kit';\n\n@Component({\n  selector: 'rx-action-list-control',\n  templateUrl: './action-list-control.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: ActionListControlComponent,\n      multi: true\n    }\n  ]\n})\nexport class ActionListControlComponent\n  extends ValueAccessor<IViewActionListItem[]>\n  implements IFormControlComponent, IFormFocusable\n{\n  @Input()\n  options;\n\n  @Input()\n  tooltip: string;\n\n  availableActions$: Observable<IViewActionDescriptor[]> = this.rxViewActionRegistryService.getLicensedActions();\n  actionLabelsMap: IActionLabelsMap;\n  selectedActions: IViewActionListItem[] = [];\n\n  constructor(\n    private rxModalService: RxModalService,\n    private rxViewActionRegistryService: RxViewActionRegistryService\n  ) {\n    super();\n\n    this.availableActions$.subscribe((actions) => {\n      this.actionLabelsMap = transform(\n        actions,\n        (result, action) => {\n          result[action.name] = action.label;\n        },\n        {}\n      ) as IActionLabelsMap;\n    });\n  }\n\n  focus(data?: { actionIndex: number }): void {\n    if (data?.actionIndex >= 0) {\n      this.openActionSelector(this.selectedActions.find((item) => item.data.index === data.actionIndex));\n    } else {\n      this.openActionSelector();\n    }\n  }\n\n  openActionSelector(actionToEdit?: IViewActionListItem): void {\n    this.rxModalService\n      .openModal({\n        title: 'Edit actions',\n        data: {\n          selectedActions: this.value,\n          actionToEdit,\n          isReadOnly: this.isDisabled\n        } as IActionEditorDialogConfig,\n        content: ActionListEditorDialogComponent,\n        size: OpenViewActionModalSize.Large as any,\n        testID: 'edit-actions'\n      })\n      .then((actions) => {\n        this.value = actions;\n      })\n      .catch(noop);\n  }\n\n  onSetValue(): void {\n    this.updateSortedActionsList();\n  }\n\n  onWriteValue(value: IViewActionListItem[]): void {\n    this.updateSortedActionsList();\n  }\n\n  removeAction(action: IViewActionListItem): void {\n    this.value = without(this.value, action);\n  }\n\n  editAction(action: IViewActionListItem): void {\n    this.openActionSelector(action);\n  }\n\n  private updateSortedActionsList(): void {\n    this.selectedActions = sortBy(this.value, (action) => action.data.index);\n  }\n}\n","<adapt-button rx-id=\"open-modal-button\" btn-type=\"tertiary\" class=\"px-0 py-0 pb-1\" (click)=\"openActionSelector()\">\n  <adapt-icon name=\"plus_circle\" class=\"mr-1\"></adapt-icon>\n  Edit actions\n</adapt-button>\n\n<span *ngIf=\"tooltip\" class=\"align-middle\">\n  <span class=\"letter-space\"></span>\n  <adapt-icon [name]=\"'question_circle_o'\" [adaptPopover]=\"tooltip\" appendToBody=\"true\"></adapt-icon>\n</span>\n\n<div rx-id=\"columns\">\n  <span *ngIf=\"selectedActions.length === 0\" class=\"text-tertiary\">No actions added.</span>\n</div>\n\n<ul class=\"list-unstyled mb-0\" *ngIf=\"selectedActions.length > 0\">\n  <li class=\"border px-2 py-1 mb-1 d-flex align-items-center\" *ngFor=\"let action of selectedActions\">\n    <strong class=\"mr-auto\">{{ actionLabelsMap[action.data.name] }}</strong>\n\n    <button\n      class=\"d-icon-left-pencil p-1\"\n      adapt-button\n      btn-type=\"tertiary\"\n      size=\"small\"\n      type=\"button\"\n      (click)=\"editAction(action)\"\n    ></button>\n\n    <button\n      class=\"d-icon-left-cross_adapt p-1\"\n      adapt-button\n      btn-type=\"tertiary\"\n      size=\"small\"\n      type=\"button\"\n      *ngIf=\"!isDisabled\"\n      (click)=\"removeAction(action)\"\n    ></button>\n  </li>\n</ul>\n"]}