{"version":3,"file":"shell-action-design.model.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/shell-designer-page/components/shell-action/shell-action-design.model.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,0BAA0B,EAAE,MAAM,iDAAiD,CAAC;AAC7F,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAIrC,MAAM,OAAO,wBAAyB,SAAQ,0BAA0B;IAAxE;;QACE,eAAU,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACnG,sBAAiB,GAAG,SAAS,CAAC;IAsBhC,CAAC;IApBC,MAAM,CAAC,oBAAoB,CAAC,iBAA8C;;QACxE,MAAM,MAAM,GAAG,KAAK,CAAC,oBAAoB,iCACpC,iBAAiB,KACpB,YAAY,EAAE,MAAA,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,YAAY,mCAAI,YAAY,IAC7D,CAAC;QAEH,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,IAAI,yBAAyB,CAAC;QAEvE,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,QAAQ,CAAC,KAAiC;QACxC,MAAM,gBAAgB,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAE/C,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;YACvB,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,uBAAuB,EAAE,cAAc,CAAC,CAAC,CAAC;SAC1F;QAED,OAAO,gBAAgB,CAAC;IAC1B,CAAC;CACF","sourcesContent":["import { RxShellMenuItemDesignModel } from '../shell-menu-item/shell-menu-item-design.model';\nimport { map } from 'rxjs/operators';\nimport { IRxShellMenuItemProperties } from '../shell-menu-item/shell-menu-item-design.types';\nimport { IViewComponentDesignValidationIssue } from '@helix/platform/view/designer';\n\nexport class RxShellActionDesignModel extends RxShellMenuItemDesignModel {\n  iconClass$ = this.menuItemIcon$.pipe(map((className) => (className ? `d-icon-${className}` : '')));\n  menuItemNameLabel = 'Tooltip';\n\n  static getInitialProperties(initialProperties?: IRxShellMenuItemProperties): IRxShellMenuItemProperties {\n    const result = super.getInitialProperties({\n      ...initialProperties,\n      menuItemName: initialProperties?.menuItemName ?? 'New action'\n    });\n\n    result.menuItemIcon = result.menuItemIcon || 'triangle_right_circle_o';\n\n    return result;\n  }\n\n  validate(props: IRxShellMenuItemProperties): IViewComponentDesignValidationIssue[] {\n    const validationIssues = super.validate(props);\n\n    if (!props.menuItemIcon) {\n      validationIssues.push(this.sandbox.createError(`Icon cannot be blank.`, 'menuItemIcon'));\n    }\n\n    return validationIssues;\n  }\n}\n"]}