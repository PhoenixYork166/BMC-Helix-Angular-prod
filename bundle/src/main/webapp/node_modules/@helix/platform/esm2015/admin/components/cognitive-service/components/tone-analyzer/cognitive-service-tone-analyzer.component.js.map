{"version":3,"file":"cognitive-service-tone-analyzer.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/admin/components/cognitive-service/components/tone-analyzer/cognitive-service-tone-analyzer.component.ts","../../../../../../../../../libs/platform/admin/components/cognitive-service/components/tone-analyzer/cognitive-service-tone-analyzer.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAU,MAAM,eAAe,CAAC;AACzD,OAAO,EAAE,WAAW,EAAa,MAAM,gBAAgB,CAAC;AACxD,OAAO,EAAE,oBAAoB,EAAE,MAAM,kCAAkC,CAAC;AACxE,OAAO,EAEL,UAAU,EACV,4BAA4B,EAC7B,MAAM,4BAA4B,CAAC;AACpC,OAAO,EAAE,yBAAyB,EAAE,MAAM,iCAAiC,CAAC;AAC5E,OAAO,EAAE,qBAAqB,EAAE,MAAM,4BAA4B,CAAC;AACnE,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;;;;;;;;AAOvD,MAAM,OAAO,qCAAqC;IAShD,YACU,WAAwB,EACxB,yBAAoD,EACpD,qBAA4C,EAC5C,4BAA0D,EAC1D,gBAAkC;QAJlC,gBAAW,GAAX,WAAW,CAAa;QACxB,8BAAyB,GAAzB,yBAAyB,CAA2B;QACpD,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,iCAA4B,GAA5B,4BAA4B,CAA8B;QAC1D,qBAAgB,GAAhB,gBAAgB,CAAkB;IACzC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC1D,kBAAkB,EAAE,GAAG;SACxB,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,6BAA6B,CAAC,KAAK,CAAC;IAClD,CAAC;IAEO,kBAAkB;QACxB,IAAI,CAAC,4BAA4B;aAC9B,gBAAgB,CAAC,oBAAoB,CAAC,YAAY,CAAC,iBAAiB,CAAC;aACrE,SAAS,CAAC,CAAC,YAAY,EAAE,EAAE;YAC1B,IAAI,CAAC,6BAA6B,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC9F,CAAC,CAAC,CAAC;IACP,CAAC;IAED,IAAI;QACF,IAAI,CAAC,4BAA4B;aAC9B,gBAAgB,CACf,oBAAoB,CAAC,YAAY,CAAC,iBAAiB,EACnD,IAAI,CAAC,6BAA6B,CAAC,KAAK,CAAC,kBAAkB,CAC5D;aACA,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAC1C,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,8BAA8B,CAAC,CACxG,CAAC;YAEF,IAAI,CAAC,6BAA6B,CAAC,cAAc,EAAE,CAAC;QACtD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oBAAoB;QAClB,OAAO,IAAI,CAAC,6BAA6B,CAAC,QAAQ,IAAI,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC;IACnG,CAAC;IAED,mBAAmB;QACjB,OAAO,CACL,IAAI,CAAC,eAAe;YACpB,IAAI,CAAC,qBAAqB,CAAC,cAAc,KAAK,UAAU,CAAC,eAAe,CAAC,IAAI;YAC7E,CAAC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CACrC,CAAC;IACJ,CAAC;;kIA9DU,qCAAqC;sHAArC,qCAAqC,0KCjBlD,m2CA6CA;2FD5Ba,qCAAqC;kBALjD,SAAS;mBAAC;oBACT,QAAQ,EAAE,oCAAoC;oBAC9C,WAAW,EAAE,kDAAkD;oBAC/D,SAAS,EAAE,CAAC,kDAAkD,CAAC;iBAChE;wPAGC,eAAe;sBADd,KAAK;gBAIN,qBAAqB;sBADpB,KAAK","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { RX_COGNITIVE_SERVICE } from '../../cognitive-service.constant';\nimport {\n  IUserOverlayGroupDescriptorChildren,\n  RX_OVERLAY,\n  RxSystemConfigurationService\n} from '@helix/platform/shared/api';\nimport { RxCognitiveServiceService } from '../../cognitive-service.service';\nimport { RxNotificationService } from '@helix/platform/shared/api';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-cognitive-service-tone-analyzer',\n  templateUrl: './cognitive-service-tone-analyzer.component.html',\n  styleUrls: ['./cognitive-service-tone-analyzer.component.scss']\n})\nexport class CognitiveServiceToneAnalyzerComponent implements OnInit {\n  @Input()\n  isAdministrator: boolean;\n\n  @Input()\n  currentOverlayContext: IUserOverlayGroupDescriptorChildren;\n\n  toneAnalyzerConfigurationForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private rxCognitiveServiceService: RxCognitiveServiceService,\n    private rxNotificationService: RxNotificationService,\n    private rxSystemConfigurationService: RxSystemConfigurationService,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit() {\n    this.toneAnalyzerConfigurationForm = this.formBuilder.group({\n      toneScoreThreshold: 0.5\n    });\n\n    this.loadSystemSettings();\n  }\n\n  isFormDirty(): boolean {\n    return this.toneAnalyzerConfigurationForm.dirty;\n  }\n\n  private loadSystemSettings(): void {\n    this.rxSystemConfigurationService\n      .getConfiguration(RX_COGNITIVE_SERVICE.toneAnalyzer.systemSettingsKey)\n      .subscribe((settingsData) => {\n        this.toneAnalyzerConfigurationForm.controls[settingsData.name].setValue(settingsData.value);\n      });\n  }\n\n  save(): void {\n    this.rxSystemConfigurationService\n      .setConfiguration(\n        RX_COGNITIVE_SERVICE.toneAnalyzer.systemSettingsKey,\n        this.toneAnalyzerConfigurationForm.value.toneScoreThreshold\n      )\n      .subscribe(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant(RX_COGNITIVE_SERVICE.notificationMessages.toneAnalyzerConfigurationSaved)\n        );\n\n        this.toneAnalyzerConfigurationForm.markAsPristine();\n      });\n  }\n\n  isSaveButtonDisabled(): boolean {\n    return this.toneAnalyzerConfigurationForm.pristine || this.toneAnalyzerConfigurationForm.invalid;\n  }\n\n  isSaveButtonVisible(): boolean {\n    return (\n      this.isAdministrator &&\n      this.currentOverlayContext.overlayGroupId !== RX_OVERLAY.overlayGroupIds.base &&\n      !this.currentOverlayContext.isShared\n    );\n  }\n}\n","<form [formGroup]=\"toneAnalyzerConfigurationForm\">\n  <adapt-accordion>\n    <adapt-accordion-tab title=\"Tone analyzer configuration\" isOpen=\"true\">\n      <adapt-rx-counter\n        adaptRange\n        label=\"Tone score threshold\"\n        required=\"true\"\n        class=\"d-block form-group\"\n        [max]=\"1\"\n        [min]=\"0.5\"\n        adaptFloatNumber\n        [formControl]=\"toneAnalyzerConfigurationForm.controls.toneScoreThreshold\"\n        [step]=\"0.1\"\n        [tooltip]=\"{\n          iconName: 'question_circle_o',\n          content: popoverContent,\n          placement: 'right',\n          popoverMode: true\n        }\"\n      ></adapt-rx-counter>\n\n      <ng-template #popoverContent>\n        <div\n          style=\"white-space: pre-wrap\"\n          [innerHTML]=\"\n            'com.bmc.arsys.rx.client.admin.cognitive-service.tone-analyzer.tone-score-threshold.tooltip' | translate\n          \"\n        ></div>\n      </ng-template>\n    </adapt-accordion-tab>\n\n    <button\n      adapt-button\n      type=\"button\"\n      rx-id=\"save-button\"\n      btn-type=\"primary\"\n      class=\"mt-4\"\n      [disabled]=\"isSaveButtonDisabled()\"\n      *ngIf=\"isSaveButtonVisible()\"\n      (click)=\"save()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n  </adapt-accordion>\n</form>\n"]}