{"version":3,"file":"container-canvas-item.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/components/container/design/container-canvas-item.component.ts","../../../../../../../../libs/platform/view/components/container/design/container-canvas-item.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Inject,\n  Output,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\nimport {\n  CanvasItemApi,\n  CanvasItemContainerComponent,\n  CanvasOutletHelperService,\n  ViewDesignerCanvasItemApiToken\n} from '@helix/platform/view/designer';\nimport { IOutputData } from 'angular-split/lib/interface';\nimport { SplitComponent } from 'angular-split';\n\n@Component({\n  selector: 'rx-container-canvas-item',\n  templateUrl: './container-canvas-item.component.html',\n  styleUrls: ['./container-canvas-item.component.scss']\n})\nexport class ContainerCanvasItemComponent extends CanvasItemContainerComponent implements AfterViewInit {\n  @ViewChild(SplitComponent, { static: true })\n  private splitComponent: SplitComponent;\n\n  private readonly maxNumberOfColumns = 12;\n  private readonly defaultGutterStep = 50;\n\n  percentSpanSize = 100 / this.maxNumberOfColumns;\n  gutterStep = this.defaultGutterStep;\n\n  @Output()\n  columnResize: EventEmitter<number[]> = new EventEmitter<number[]>();\n\n  constructor(\n    @Inject(ViewDesignerCanvasItemApiToken) protected canvasItemApi: CanvasItemApi,\n    protected canvasOutletHelperService: CanvasOutletHelperService,\n    protected elementRef: ElementRef<HTMLElement>,\n    private renderer: Renderer2\n  ) {\n    super(canvasItemApi, canvasOutletHelperService);\n  }\n\n  @HostListener('window:resize')\n  onWindowResize(): void {\n    this.setGutterStep();\n  }\n\n  ngAfterViewInit(): void {\n    const spans = this.outlet.columns.map((column) => column.span);\n    this.setSpanSizes(spans);\n    this.setGutterStep();\n  }\n\n  onDragEnd(event: IOutputData): void {\n    const spans = this.getPercentToSpanSizes(event.sizes as number[]);\n\n    this.columnResize.emit(spans);\n\n    this.setSpanSizes(spans);\n  }\n\n  getPercentToSpanSizes(percentSizes: number[]): number[] {\n    return percentSizes.map((size) => Math.round((size * this.maxNumberOfColumns) / 100));\n  }\n\n  setSpanSizes(spans: number[]): void {\n    this.splitComponent.setVisibleAreaSizes(this.getSpanToPercentSizes(spans));\n  }\n\n  private getSpanToPercentSizes(spans: number[]): number[] {\n    return spans.map((span) => span * this.percentSpanSize);\n  }\n\n  private setGutterStep(): void {\n    const element = this.renderer.selectRootElement(this.elementRef.nativeElement, true);\n\n    this.gutterStep = Math.round(element.clientWidth / this.maxNumberOfColumns) || this.defaultGutterStep;\n  }\n}\n","<as-split\n  unit=\"percent\"\n  [class.selected]=\"layout.isSelected$ | async\"\n  [class.readonly]=\"isReadOnly\"\n  [gutterStep]=\"gutterStep\"\n  gutterSize=\"1\"\n  (dragEnd)=\"onDragEnd($event)\"\n>\n  <as-split-area\n    *ngFor=\"\n      let column of outlet.columns;\n      trackBy: trackByColFn;\n      let colIndex = index;\n      let first = first;\n      let last = last\n    \"\n    minSize=\"8\"\n  >\n    <rx-canvas-item-column\n      [isReadOnly]=\"isReadOnly\"\n      [colIndex]=\"colIndex\"\n      [column]=\"column\"\n      [layout]=\"layout\"\n      (dropListDropped)=\"onDropListDropped($event)\"\n    ></rx-canvas-item-column>\n  </as-split-area>\n</as-split>\n"]}