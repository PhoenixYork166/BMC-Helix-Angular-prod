{"version":3,"file":"admin-common-settings.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/admin/components/services/admin-common-settings.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { IFieldDefinition, IFieldDefinitionsById, ISelectionFieldDefinition } from '@helix/platform/record/api';\nimport {\n  IAdminComponentControl,\n  IPlainObject,\n  RxAdminSettingsService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport {\n  AttachmentFormControlComponent,\n  BooleanFormControlComponent,\n  ColorPickerFormControlComponent,\n  CounterFormControlComponent,\n  DateFormControlComponent,\n  SelectFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { RxNumberUtilsService } from '@helix/platform/utils';\nimport { IRecordGridConfig, RecordGridColumnAlignment, RowSelectionMode } from '@helix/platform/view/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { cloneDeep, noop, map as _map } from 'lodash';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { AdminCommonSettingsBladeComponent } from '../admin-common-settings-blade/admin-common-settings-blade.component';\nimport { RX_ADMIN } from '../admin.constant';\nimport { IGetRecordGridConfigParams, IOpenSettingsDetailsParams } from './admin-common-settings.types';\n\n@Injectable()\nexport class RxAdminCommonSettingsService {\n  constructor(\n    private rxAdminSettingsService: RxAdminSettingsService,\n    private translateService: TranslateService,\n    private rxNotificationService: RxNotificationService,\n    private rxModalService: RxModalService,\n    private rxNumberUtilsService: RxNumberUtilsService\n  ) {}\n\n  openSettingsDetails({\n    title,\n    componentName,\n    groups,\n    ownerKeyValue,\n    isChildSetting,\n    childOwnerKeyValue,\n    onDialogApiReady\n  }: IOpenSettingsDetailsParams): Promise<any> {\n    const isNew = isChildSetting ? !(ownerKeyValue && childOwnerKeyValue) : !ownerKeyValue;\n\n    return this.rxModalService.openDockedPanel({\n      content: AdminCommonSettingsBladeComponent,\n      size: 'lg',\n      title,\n      data: {\n        config: {\n          componentName,\n          groups,\n          ownerKeyValue,\n          isNew,\n          isChildSetting,\n          childOwnerKeyValue\n        },\n        onApiReady: (dialogApi) => {\n          onDialogApiReady?.(dialogApi);\n        }\n      }\n    });\n  }\n\n  createPropertyConfig(adminComponentControl: IAdminComponentControl): IPlainObject {\n    const config: IPlainObject = {\n      name: adminComponentControl.id,\n      isDisabled: !adminComponentControl.changePermission,\n      dataType: adminComponentControl.dataType,\n      options: {\n        label: adminComponentControl.label,\n        required: adminComponentControl.required\n      },\n      validators: []\n    };\n\n    if (adminComponentControl.required) {\n      config.validators.push(Validators.required);\n    }\n\n    if (adminComponentControl.defaultValue) {\n      config.defaultValue = adminComponentControl.defaultValue;\n    } else {\n      config.defaultValue = null;\n    }\n\n    switch (adminComponentControl.dataType) {\n      case RX_ADMIN.settingResourceTypes.selection: {\n        config.component = SelectFormControlComponent;\n\n        config.options = {\n          ...config.options,\n          options: _map(adminComponentControl.optionNamesById, (value, key) => ({\n            id: key,\n            name: value\n          })),\n          emptyOption: !adminComponentControl.required\n        };\n\n        break;\n      }\n\n      case RX_ADMIN.settingResourceTypes.secure:\n      case RX_ADMIN.settingResourceTypes.character: {\n        config.component = TextFormControlComponent;\n        config.options.isPassword = adminComponentControl.dataType === RX_ADMIN.settingResourceTypes.secure;\n\n        if (adminComponentControl.maxValue) {\n          config.options.maxLength = Number(adminComponentControl.maxValue);\n          config.validators.push(Validators.maxLength(config.options.maxLength));\n        }\n\n        if (adminComponentControl.minValue) {\n          config.options.minLength = Number(adminComponentControl.minValue);\n          config.validators.push(Validators.minLength(config.options.minLength));\n        }\n\n        break;\n      }\n\n      case RX_ADMIN.settingResourceTypes.boolean: {\n        config.component = BooleanFormControlComponent;\n        config.options.label = '';\n        config.options.description = adminComponentControl.label;\n        config.options.shouldDisplayAsCheckbox = config.options.required;\n\n        if (config.defaultValue) {\n          config.defaultValue = config.defaultValue === 'true';\n        } else if (config.options.required) {\n          config.defaultValue = false;\n        }\n\n        break;\n      }\n\n      case RX_ADMIN.settingResourceTypes.color: {\n        config.component = ColorPickerFormControlComponent;\n        config.defaultValue = config.defaultValue || null;\n\n        break;\n      }\n\n      case RX_ADMIN.settingResourceTypes.decimal:\n      case RX_ADMIN.settingResourceTypes.integer: {\n        config.component = CounterFormControlComponent;\n        config.options.allowIntegerOnly = adminComponentControl.dataType === RX_ADMIN.settingResourceTypes.integer;\n\n        if (adminComponentControl.maxValue) {\n          config.options.maxValue = Number(adminComponentControl.maxValue);\n          config.validators.push(Validators.max(Number(adminComponentControl.maxValue)));\n        }\n\n        if (adminComponentControl.minValue) {\n          config.options.minValue = Number(adminComponentControl.minValue);\n          config.validators.push(Validators.min(Number(adminComponentControl.minValue)));\n        }\n\n        if (this.rxNumberUtilsService.isFiniteNumberString(adminComponentControl.defaultValue)) {\n          config.defaultValue = Number(adminComponentControl.defaultValue);\n        }\n\n        break;\n      }\n\n      case RX_ADMIN.settingResourceTypes.dateOnly: {\n        config.component = DateFormControlComponent;\n\n        break;\n      }\n\n      case RX_ADMIN.settingResourceTypes.attachment: {\n        config.component = AttachmentFormControlComponent;\n        config.options.maxFileSize = adminComponentControl.maxValue;\n\n        break;\n      }\n\n      default: {\n        config.component = TextFormControlComponent;\n\n        break;\n      }\n    }\n\n    return config;\n  }\n\n  getRecordGridConfig({\n    componentName,\n    controls,\n    getCurrentGridFn,\n    createPermission,\n    groups,\n    bladeTitle,\n    ownerKeyValue,\n    groupName,\n    onDialogApiReady\n  }: IGetRecordGridConfigParams): Observable<IRecordGridConfig> {\n    const subUrl = ownerKeyValue ? `${groupName}/${ownerKeyValue}` : componentName;\n\n    const fieldDefinitions: (IFieldDefinition | ISelectionFieldDefinition)[] = controls.map((control) => {\n      const fieldDefinition = {\n        id: control.id,\n        resourceType: control.dataType\n      };\n\n      if (\n        control.dataType === RX_ADMIN.settingResourceTypes.selection &&\n        control.optionNamesById &&\n        control.optionLabelsById\n      ) {\n        (fieldDefinition as ISelectionFieldDefinition).optionNamesById = control.optionNamesById;\n        (fieldDefinition as ISelectionFieldDefinition).optionLabelsById = control.optionLabelsById;\n      }\n\n      return fieldDefinition;\n    });\n\n    const fieldDefinitionsById: IFieldDefinitionsById = fieldDefinitions.reduce((result, fieldDefinition) => {\n      result[fieldDefinition.id] = cloneDeep(fieldDefinition);\n\n      return result;\n    }, {});\n\n    const recordDefinition = {\n      fieldDefinitions,\n      fieldDefinitionsById\n    };\n\n    const columns = controls.map((control, index) => ({\n      index,\n      title: control.label,\n      fieldId: control.id,\n      visible: control.keySetting,\n      sortable: true,\n      filterable: false,\n      alignment: RecordGridColumnAlignment.Left\n    }));\n\n    const actionButtons = [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.edit.label'),\n        style: 'tertiary',\n        iconCls: 'pencil',\n        actions: [\n          {\n            name: () => {\n              const currentGrid = getCurrentGridFn(groupName);\n              const selectedRow = currentGrid.api.getFirstSelectedRow();\n\n              if (createPermission) {\n                const componentOwnerKeyValue = ownerKeyValue || selectedRow.ownerKeyValue1;\n                const childOwnerKeyValue = ownerKeyValue ? selectedRow.ownerKeyValue1 : null;\n\n                this.openSettingsDetails({\n                  title: bladeTitle || groupName,\n                  componentName,\n                  groups,\n                  ownerKeyValue: componentOwnerKeyValue,\n                  isChildSetting: Boolean(groupName),\n                  childOwnerKeyValue,\n                  onDialogApiReady\n                })\n                  .then(() => {\n                    currentGrid.api.refresh().subscribe();\n                  })\n                  .catch(noop);\n              }\n            }\n          }\n        ]\n      },\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n        style: 'tertiary',\n        icon: 'trash',\n        actions: [\n          {\n            name: () => {\n              const currentGrid = getCurrentGridFn(groupName);\n              const selectedRow = currentGrid.api.getFirstSelectedRow();\n\n              if (createPermission) {\n                this.rxModalService\n                  .confirm({\n                    title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n                    modalStyle: RX_MODAL.modalStyles.warning,\n                    message: this.translateService.instant(\n                      'com.bmc.arsys.rx.client.admin.admin-settings.delete-confirmation.message'\n                    )\n                  })\n                  .then((response) => {\n                    if (response) {\n                      this.rxAdminSettingsService\n                        .deleteComponentSettings(`${groupName || componentName}/${selectedRow.ownerKeyValue1}`)\n                        .pipe(switchMap(() => currentGrid.api.refresh()))\n                        .subscribe();\n                    }\n                  });\n              }\n            }\n          }\n        ]\n      }\n    ];\n\n    return of({\n      actionButtons: createPermission ? actionButtons : [],\n      enableRowSelection: RowSelectionMode.Single,\n      getRecordDefinition: () => of(recordDefinition),\n      getData: () =>\n        this.rxAdminSettingsService.getComponentGridData(subUrl).pipe(\n          map((data) => ({\n            data: data.rows,\n            totalSize: data.rows.length\n          }))\n        ),\n      columns,\n      enableFiltering: false,\n      useExternalFiltering: false,\n      recordIdField: 'ownerKeyValue1'\n    });\n  }\n}\n"]}