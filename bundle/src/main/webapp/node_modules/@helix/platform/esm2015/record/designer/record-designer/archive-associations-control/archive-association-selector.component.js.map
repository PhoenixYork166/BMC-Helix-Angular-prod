{"version":3,"file":"archive-association-selector.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/record/designer/record-designer/archive-associations-control/archive-association-selector.component.ts","../../../../../../../../libs/platform/record/designer/record-designer/archive-associations-control/archive-association-selector.component.html"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectionStrategy, Component, Injector, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { ActiveModalRef, DismissReasons } from '@bmc-ux/adapt-angular';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { IAssociationDefinition, RX_ASSOCIATION_DEFINITION } from '@helix/platform/association/api';\nimport { ColumnConfig } from '@bmc-ux/adapt-table';\nimport { IArchiveAssociationGridRow } from './archive-associations-control.types';\nimport { AssociationSelectionType, IAssociationsToFollowForArchive } from '@helix/platform/record/api';\nimport { includes, map } from 'lodash';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-archive-associations-editor',\n  templateUrl: './archive-association-selector.component.html',\n  styleUrls: ['./archive-association-selector.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ArchiveAssociationSelectorComponent extends RxModalClass implements OnInit {\n  @ViewChild('nameCellTemplate', { static: true })\n  nameCellTemplate: TemplateRef<any>;\n\n  @ViewChild('enforceCellTemplate', { static: true })\n  enforceCellTemplate: TemplateRef<any>;\n\n  isOverlayMode = this.activeModalRef.getData().isOverlayMode;\n  isReadOnly = this.activeModalRef.getData().isReadOnly;\n\n  actualAssociationsToFollow: IAssociationsToFollowForArchive =\n    this.activeModalRef.getData().actualAssociationsToFollow;\n\n  private selectedAssociationsToFollow: IAssociationsToFollowForArchive =\n    this.activeModalRef.getData().selectedAssociationsToFollow;\n\n  associationType: AssociationSelectionType = this.selectedAssociationsToFollow.selectionType;\n\n  associationTypes = {\n    followParent: AssociationSelectionType.FollowParent,\n    selected: AssociationSelectionType.Selected,\n    allEnforced: AssociationSelectionType.AllEnforced,\n    all: AssociationSelectionType.All\n  };\n\n  columns: ColumnConfig[] = [];\n\n  associationGridRows: IArchiveAssociationGridRow[] = this.activeModalRef.getData().associationDefinitions.map(\n    (association: IAssociationDefinition) =>\n      ({\n        name: association.name,\n        firstRecord: association.nodeAId,\n        secondRecord: association.nodeBId,\n        enforced: association.nodeAModality === RX_ASSOCIATION_DEFINITION.modality.required,\n        isSelectionDisabled: this.isReadOnly,\n        isAssociationSelectedInBase:\n          this.isOverlayMode && this.actualAssociationsToFollow.specificAssociationNames.includes(association.name)\n      } as IArchiveAssociationGridRow)\n  );\n\n  selectedAssociationGridRows: IArchiveAssociationGridRow[] = [];\n\n  constructor(\n    private activeModalRef: ActiveModalRef,\n    private translateService: TranslateService,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.columns = [\n      {\n        field: 'name',\n        header: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n        cellTemplate: this.nameCellTemplate\n      },\n      {\n        field: 'firstRecord',\n        header: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.association-first-record.label'\n        ),\n        cellTemplate: this.nameCellTemplate\n      },\n      {\n        field: 'secondRecord',\n        header: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.association-second-record.label'\n        ),\n        cellTemplate: this.nameCellTemplate\n      },\n      {\n        field: 'enforced',\n        header: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.enforced-association.label'\n        ),\n        cellTemplate: this.enforceCellTemplate\n      }\n    ];\n\n    this.selectAssociations();\n\n    this.selectedAssociationGridRows = this.selectedAssociationGridRows.concat(\n      this.associationGridRows.filter((associationGridRow) =>\n        includes(this.selectedAssociationsToFollow.specificAssociationNames, associationGridRow.name)\n      )\n    );\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  onSelectionChange(selectedRows: IArchiveAssociationGridRow[]): void {\n    this.markAsDirty();\n    this.selectedAssociationGridRows = selectedRows;\n  }\n\n  disabledRowSelectionResolver(rowData: IArchiveAssociationGridRow): boolean {\n    return rowData.isSelectionDisabled || rowData.isAssociationSelectedInBase;\n  }\n\n  selectAssociations(): void {\n    this.selectedAssociationGridRows = [];\n\n    if (this.associationType === AssociationSelectionType.Selected) {\n      this.enableRowSelection();\n    } else if (this.associationType === AssociationSelectionType.All) {\n      this.selectedAssociationGridRows = [...this.associationGridRows];\n      this.disableRowSelection();\n    } else if (this.associationType === AssociationSelectionType.AllEnforced) {\n      this.selectedAssociationGridRows = this.associationGridRows.filter((row) => row.enforced);\n\n      this.disableRowSelectionForEnforcedAssociations();\n    } else if (this.associationType === AssociationSelectionType.FollowParent) {\n      this.disableRowSelection();\n    }\n\n    if (\n      this.isOverlayMode &&\n      (this.actualAssociationsToFollow.selectionType === AssociationSelectionType.AllEnforced ||\n        this.actualAssociationsToFollow.selectionType === AssociationSelectionType.Selected)\n    ) {\n      this.selectAssociationsFromBase();\n    }\n  }\n\n  private selectAssociationsFromBase(): void {\n    this.selectedAssociationGridRows = this.selectedAssociationGridRows.concat(\n      this.associationGridRows.filter((associationGridRow) =>\n        includes(this.actualAssociationsToFollow.specificAssociationNames, associationGridRow.name)\n      )\n    );\n  }\n\n  private disableRowSelectionForEnforcedAssociations(): void {\n    this.associationGridRows.forEach((row) => {\n      row.isSelectionDisabled = this.isReadOnly || row.enforced;\n    });\n  }\n\n  private disableRowSelection(): void {\n    this.associationGridRows.forEach((row) => {\n      row.isSelectionDisabled = true;\n    });\n  }\n\n  private enableRowSelection(): void {\n    this.associationGridRows.forEach((row) => {\n      row.isSelectionDisabled = this.isReadOnly;\n    });\n  }\n\n  save(): void {\n    let selectedAssociationNames = [];\n\n    if (this.associationType === AssociationSelectionType.Selected) {\n      selectedAssociationNames = map(this.selectedAssociationGridRows, 'name');\n    } else if (this.associationType === AssociationSelectionType.AllEnforced) {\n      selectedAssociationNames = this.selectedAssociationGridRows\n        .filter((associationGridRow) => !associationGridRow.enforced)\n        .map((associationGridRow) => associationGridRow.name);\n    }\n\n    this.activeModalRef.close({\n      specificAssociationNames: selectedAssociationNames,\n      selectionType: this.associationType\n    } as IAssociationsToFollowForArchive);\n  }\n}\n","<div class=\"modal-body designer-modal-body d-flex mh-100 flex-column\">\n  <span>\n    {{\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.select-associations-to-follow.message'\n        | translate\n    }}\n  </span>\n\n  <adapt-rx-radiobutton-group [(ngModel)]=\"associationType\" (ngModelChange)=\"markAsDirty(); selectAssociations()\">\n    <adapt-rx-radiobutton\n      class=\"radio-inline\"\n      label=\"{{\n        'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.selected-associations.label'\n          | translate\n      }}\"\n      [value]=\"associationTypes.selected\"\n      [disabled]=\"\n        isReadOnly ||\n        (isOverlayMode &&\n          (actualAssociationsToFollow.selectionType === associationTypes.all ||\n            actualAssociationsToFollow.selectionType === associationTypes.allEnforced ||\n            actualAssociationsToFollow.selectionType === associationTypes.followParent))\n      \"\n      rx-id=\"selected-associations\"\n    ></adapt-rx-radiobutton>\n\n    <adapt-rx-radiobutton\n      class=\"radio-inline\"\n      label=\"{{ 'com.bmc.arsys.rx.client.common.all.label' | translate }}\"\n      [value]=\"associationTypes.all\"\n      [disabled]=\"\n        isReadOnly ||\n        (isOverlayMode &&\n          (actualAssociationsToFollow.selectionType === associationTypes.all ||\n            actualAssociationsToFollow.selectionType === associationTypes.followParent))\n      \"\n      rx-id=\"all-associations\"\n    ></adapt-rx-radiobutton>\n\n    <adapt-rx-radiobutton\n      class=\"radio-inline\"\n      label=\"{{\n        'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.all-enforced-associations.label'\n          | translate\n      }}\"\n      [value]=\"associationTypes.allEnforced\"\n      [disabled]=\"\n        isReadOnly ||\n        (isOverlayMode &&\n          (actualAssociationsToFollow.selectionType === associationTypes.all ||\n            actualAssociationsToFollow.selectionType === associationTypes.followParent))\n      \"\n      rx-id=\"all-enforced-associations\"\n    ></adapt-rx-radiobutton>\n\n    <adapt-rx-radiobutton\n      class=\"radio-inline\"\n      label=\"{{\n        'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.follow-parent-associations.label'\n          | translate\n      }}\"\n      [value]=\"associationTypes.followParent\"\n      [disabled]=\"\n        isReadOnly ||\n        (isOverlayMode &&\n          (actualAssociationsToFollow.selectionType === associationTypes.selected ||\n            actualAssociationsToFollow.selectionType === associationTypes.all ||\n            actualAssociationsToFollow.selectionType === associationTypes.allEnforced ||\n            actualAssociationsToFollow.selectionType === associationTypes.followParent))\n      \"\n      rx-id=\"follow-parent-association\"\n    ></adapt-rx-radiobutton>\n  </adapt-rx-radiobutton-group>\n\n  <adapt-table\n    [value]=\"associationGridRows\"\n    [selection]=\"selectedAssociationGridRows\"\n    [columns]=\"columns\"\n    [scrollable]=\"true\"\n    scrollHeight=\"flex\"\n    [sortable]=\"true\"\n    [resizableColumns]=\"false\"\n    [bordered]=\"true\"\n    [filterable]=\"false\"\n    [dataKey]=\"'name'\"\n    [disableRowSelection]=\"false\"\n    [selectionMode]=\"'multiple'\"\n    (selectionChange)=\"onSelectionChange($event)\"\n    [disabledRowSelectionResolver]=\"disabledRowSelectionResolver\"\n  >\n  </adapt-table>\n</div>\n\n<div class=\"modal-footer\">\n  <button type=\"button\" adapt-button btn-type=\"primary\" (click)=\"save()\" rx-id=\"save-button\" [disabled]=\"!isDirty()\">\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button type=\"button\" adapt-button btn-type=\"secondary\" (click)=\"cancel()\" rx-id=\"cancel-button\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n\n<ng-template #nameCellTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n  {{ dataItem[column.field] | rxDefinitionNamePipe }}\n</ng-template>\n\n<ng-template #enforceCellTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n  <span *ngIf=\"dataItem[column.field]\">{{ 'com.bmc.arsys.rx.client.common.yes.label' | translate }}</span>\n  <span *ngIf=\"!dataItem[column.field]\">{{ 'com.bmc.arsys.rx.client.common.no.label' | translate }}</span>\n</ng-template>\n"]}