{"version":3,"file":"hkm-access-mapping.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/admin/components/hkm-access-mapping/hkm-access-mapping.component.ts","../../../../../../../libs/platform/admin/components/hkm-access-mapping/hkm-access-mapping.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DataCellTemplateParams } from '@bmc-ux/adapt-table';\nimport { AdaptDockedPanelService, DismissReasons } from '@bmc-ux/adapt-angular';\nimport { chain, isEmpty, noop } from 'lodash';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { HkmAccessMapEditorComponent } from './hkm-access-map-editor/hkm-access-map-editor.component';\nimport { RxHkmAccessMappingService } from './hkm-access-mapping.service';\n\nimport {\n  IHkmPortal,\n  IHkmPortalUserGroup,\n  IItsmCompany,\n  IItsmSupportGroup,\n  ILineOfBusiness,\n  ISupportGroupRow,\n  PredefinedLobOptions\n} from './hkm-access-mapping.types';\n\nimport { IRecordDefinition, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxModalService, RX_MODAL } from '@helix/platform/ui-kit';\nimport { of, Subscription } from 'rxjs';\n\nimport {\n  IRecordGridActionButton,\n  IRecordGridColumn,\n  IRecordGridConfig,\n  RecordGridComponent,\n  RecordGridFilterMode,\n  RowSelectionMode\n} from '@helix/platform/view/components';\n\nimport { OpenViewActionModalSize } from '@helix/platform/view/api';\n\n@Component({\n  selector: 'rx-admin-hkm-access-mapping',\n  templateUrl: './hkm-access-mapping.component.html'\n})\nexport class HkmAccessMappingAdminComponent extends BaseViewComponent implements OnInit {\n  constructor(\n    private adaptDockedPanelService: AdaptDockedPanelService,\n    private translateService: TranslateService,\n    private rxModalService: RxModalService,\n    private rxHkmAccessMappingService: RxHkmAccessMappingService\n  ) {\n    super();\n  }\n\n  @ViewChild('itsmHkmMappingDataGrid')\n  itsmHkmMappingDataGrid: RecordGridComponent;\n\n  @ViewChild('statusColTemplate', { static: true })\n  statusColTemplate: TemplateRef<DataCellTemplateParams>;\n\n  @ViewChild('visibilityGroupColTemplate', { static: true })\n  visibilityGroupColTemplate: TemplateRef<DataCellTemplateParams>;\n\n  private readonly predefinedLinesOfBusiness: ILineOfBusiness[] = [\n    { id: PredefinedLobOptions.All, name: this.translateService.instant('com.bmc.arsys.rx.client.common.all.label') },\n    { id: PredefinedLobOptions.None, name: this.translateService.instant('com.bmc.arsys.rx.client.common.none.label') }\n  ];\n\n  private gridColumns: IRecordGridColumn[];\n  private hkmPortals: IHkmPortal[] = [];\n  private supportGroups: IItsmSupportGroup[] = [];\n  selectedLob: ILineOfBusiness = this.predefinedLinesOfBusiness[0];\n  busy: Subscription;\n  itsmCompanies: IItsmCompany[] = [];\n  selectedCompany: IItsmCompany;\n  linesOfBusiness: ILineOfBusiness[] = [];\n  recordGridConfig$: Observable<IRecordGridConfig>;\n\n  ngOnInit(): void {\n    this.loadItsmHkmMappingData();\n\n    this.rxHkmAccessMappingService.callHkmMappingApi().subscribe((portals) => {\n      this.hkmPortals = portals;\n    });\n\n    this.setupGridInit();\n  }\n\n  private setupGridInit(): void {\n    this.gridColumns = [\n      {\n        fieldId: 'supportGroupName',\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.hkm-permission-group.title'\n        ),\n        filterable: false,\n        cellTemplate: this.visibilityGroupColTemplate\n      },\n      {\n        fieldId: 'description',\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.support-group-description.title'\n        ),\n        filterable: false\n      },\n      {\n        fieldId: 'permissionGroupId',\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.hkm-permission-group-id.title'\n        ),\n        filterable: false,\n        visible: false\n      },\n      {\n        filterable: true,\n        fieldId: 'isMapped',\n        title: this.translateService.instant('com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.status.title'),\n        cellTemplate: this.statusColTemplate\n      },\n      {\n        fieldId: 'hkmportalName',\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.hkm-portal-name.title'\n        ),\n        visible: true,\n        filterable: false\n      },\n      {\n        fieldId: 'hkmgroupName',\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.hkm-group-name.title'\n        ),\n        visible: true,\n        filterable: false\n      },\n      {\n        fieldId: 'hkmgroupID',\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.hkm-group-id.title'\n        ),\n        visible: false,\n        filterable: false\n      },\n      {\n        fieldId: 'hkmroleName',\n        title: this.translateService.instant('com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.hkm-role.title'),\n        visible: true,\n        filterable: false\n      }\n    ];\n\n    const gridRecordDefinition: IRecordDefinition = {\n      fieldDefinitions: [\n        {\n          id: 'supportGroupName',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'description',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'permissionGroupId',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'isMapped',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.selection,\n          optionNamesById: {\n            true: this.translateService.instant(\n              'com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.status.mapped.label'\n            ),\n            false: this.translateService.instant(\n              'com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.status.unmapped.label'\n            )\n          }\n        },\n        {\n          id: 'hkmportalName',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'hkmgroupName',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'hkmgroupID',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'hkmroleName',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        }\n      ]\n    };\n\n    const actionButtons: IRecordGridActionButton[] = [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.hkm-access-mapping.grid.map-access.button.label'),\n        style: 'tertiary',\n        iconCls: 'cubes_restart',\n        disabled: (selectedRows: ISupportGroupRow[]) =>\n          !this.hasPortals() || selectedRows.length === 0 || selectedRows.some((row) => row.isMapped),\n        actions: [{ name: () => this.openAccessMappingDialog() }]\n      },\n      {\n        label: this.translateService.instant(\n          'com.bmc.arsys.rx.client.hkm-access-mapping.grid.unmap-access.button.label'\n        ),\n        style: 'tertiary',\n        iconCls: 'cube_cross_circle',\n        disabled: (selectedRows: ISupportGroupRow[]) =>\n          !this.hasPortals() || selectedRows.length === 0 || selectedRows.some((row) => !row.isMapped),\n        actions: [{ name: () => this.deleteMapping() }]\n      }\n    ];\n\n    this.recordGridConfig$ = of({\n      columns: this.gridColumns,\n      emptyStateLabelText: this.translateService.instant(\n        'com.bmc.arsys.rx.innovation-studio.external-record-wizard.document-selection.grid.empty-state.label'\n      ),\n      enableRowSelection: RowSelectionMode.Multiple,\n      enableFiltering: true,\n      recordIdField: 'requestId',\n      styles: 'flex-fill',\n      useExternalFiltering: false,\n      getRecordDefinition: () => of(gridRecordDefinition),\n      getData: () =>\n        of({\n          totalSize: this.supportGroups.length,\n          data: this.supportGroups\n        }),\n      actionButtons,\n      filterMode: RecordGridFilterMode.Basic\n    });\n  }\n\n  private setUpValues(): void {\n    if (this.selectedLob.id === PredefinedLobOptions.All) {\n      this.supportGroups = [...this.selectedCompany.supportGroups];\n    } else if (this.selectedLob.id === PredefinedLobOptions.None) {\n      this.supportGroups = this.selectedCompany.supportGroups.filter((group) => isEmpty(group.lineOfBusiness));\n    } else {\n      this.supportGroups = this.selectedCompany.supportGroups.filter((group) =>\n        group.lineOfBusiness?.some((lob) => lob === this.selectedLob.id)\n      );\n    }\n\n    this.itsmHkmMappingDataGrid.api.refresh().subscribe();\n  }\n\n  private loadItsmHkmMappingData(): void {\n    this.busy = this.rxHkmAccessMappingService\n      .callItsmMappingApi()\n      .subscribe(({ data }: { data: IItsmCompany[] }): void => {\n        this.itsmCompanies = [...data];\n\n        const extractedLinesOfBusiness = chain(data)\n          .flatMap((company) => company.supportGroups)\n          .filter((group) => !isEmpty(group.lineOfBusiness))\n          .flatMap((group) => group.lineOfBusiness)\n          .sort()\n          .sortedUniq()\n          .map((lob) => ({ id: lob, name: lob }))\n          .value();\n\n        this.linesOfBusiness = [...this.predefinedLinesOfBusiness, ...extractedLinesOfBusiness];\n\n        if (isEmpty(this.selectedCompany?.name)) {\n          this.setSelected(0);\n        } else {\n          const currentCompanyId = this.selectedCompany.permissionId;\n          this.selectedCompany = this.itsmCompanies.find((company) => company.permissionId === currentCompanyId);\n          this.setUpValues();\n        }\n      });\n  }\n\n  setSelected(index: number): void {\n    this.selectedCompany = this.itsmCompanies[index];\n    this.setUpValues();\n  }\n\n  setSelectedLineOfBusiness(lob: ILineOfBusiness): void {\n    this.selectedLob = lob;\n    this.setUpValues();\n  }\n\n  openAccessMappingDialog(supportGroup: IItsmSupportGroup = null): void {\n    let title = this.translateService.instant('com.bmc.arsys.rx.client.hkm-access-mapping-editor.new.title');\n    let portal = this.hkmPortals[0];\n    let selectedSupportGroups: IItsmSupportGroup[] =\n      this.itsmHkmMappingDataGrid.api.getSelectedRows() as ISupportGroupRow[];\n    let userGroups = [];\n\n    if (supportGroup) {\n      const mappedUserGroupsIds = supportGroup.hkmgroupID.split(',').map(Number);\n      title = this.translateService.instant('com.bmc.arsys.rx.client.hkm-access-mapping-editor.edit.title');\n      portal = this.hkmPortals.find((hkmPortal) => hkmPortal.portalName === supportGroup.hkmportalName);\n      selectedSupportGroups = [supportGroup];\n      userGroups = portal.userGroups.filter((group) => mappedUserGroupsIds.includes(group.id));\n    }\n\n    this.openDetailDialog(title, selectedSupportGroups, portal, userGroups);\n  }\n\n  private openDetailDialog(\n    dialogTitle: string,\n    selectedSupportGroups: IItsmSupportGroup[],\n    selectedHkmPortal: IHkmPortal,\n    selectedHkmUserGroups: IHkmPortalUserGroup[] = []\n  ): void {\n    if (this.hkmPortals?.length > 0) {\n      this.adaptDockedPanelService\n        .open({\n          title: dialogTitle,\n          content: HkmAccessMapEditorComponent,\n          size: OpenViewActionModalSize.Small,\n          data: {\n            company: this.selectedCompany,\n            hkmPortals: this.hkmPortals,\n            selectedLob: this.selectedLob,\n            selectedSupportGroups,\n            selectedHkmPortal,\n            selectedHkmUserGroups\n          }\n        })\n        .then((result) => {\n          if (result === DismissReasons.CLOSE_BTN) {\n            this.loadItsmHkmMappingData();\n          }\n        })\n        .catch(noop);\n    }\n  }\n\n  private deleteMapping(): void {\n    const selectedGroups = this.itsmHkmMappingDataGrid.api.getSelectedRows() as ISupportGroupRow[];\n    const selectedGroupIds = selectedGroups.map((group) => group.id);\n\n    this.rxModalService\n      .confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.translateService.instant('com.bmc.arsys.rx.client.hkm-access-mapping.delete-mapping.message')\n      })\n      .then((result: boolean) => {\n        if (result) {\n          this.rxHkmAccessMappingService\n            .deleteAccessMappings(selectedGroupIds)\n            .subscribe(() => this.loadItsmHkmMappingData());\n        }\n      });\n  }\n\n  hasPortals(): boolean {\n    return !isEmpty(this.hkmPortals);\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.hkm-access-mapping.header.label' | translate }}\" [busy]=\"busy\">\n  <div class=\"d-flex\">\n    <div class=\"d-flex pr-3 align-items-baseline\">\n      <label class=\"text-strong\">{{ 'com.bmc.arsys.rx.client.hkm-access-mapping.company.label' | translate }}:</label>\n      <div class=\"d-flex\" adaptDropdown>\n        <button\n          class=\"pl-1\"\n          adapt-button\n          #dropdownButton\n          rx-id=\"company-dropdown\"\n          adaptDropdownToggle\n          type=\"button\"\n          btn-type=\"tertiary\">\n          {{ selectedCompany?.name }}\n        </button>\n        <div class=\"dropdown-menu\" adaptDropdownMenu>\n          <button\n            *ngFor=\"let company of itsmCompanies; let index = index\"\n            [class.text-active]=\"company?.permissionId === selectedCompany?.permissionId\"\n            [class.active]=\"company?.permissionId === selectedCompany?.permissionId\"\n            type=\"button\"\n            class=\"dropdown-item\"\n            (click)=\"setSelected(index)\">\n            {{ company.name }}\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"d-flex align-items-baseline\">\n      <label class=\"text-strong\">{{ 'com.bmc.arsys.rx.client.hkm-access-mapping.line-of-business.label' | translate\n        }}:</label>\n      <div class=\"d-flex\" adaptDropdown >\n        <button\n          adapt-button\n          #dropdownButton\n          adaptDropdownToggle\n          type=\"button\"\n          rx-id=\"lob-dropdown\"\n          btn-type=\"tertiary\"\n          class=\"pl-1\">\n          {{ selectedLob?.name }}\n        </button>\n        <div class=\"dropdown-menu\" adaptDropdownMenu>\n          <button\n            type=\"button\"\n            *ngFor=\"let lob of linesOfBusiness\"\n            [class.text-active]=\"lob.id === selectedLob.id\"\n            [class.active]=\"lob.id === selectedLob.id\"\n            class=\"dropdown-item\"\n            (click)=\"setSelectedLineOfBusiness(lob)\">\n            {{ lob.name }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <rx-record-grid class=\"mb-3 mt-1\" [config]=\"recordGridConfig$\" #itsmHkmMappingDataGrid></rx-record-grid>\n\n  <ng-template #statusColTemplate let-dataItem=\"dataItem\">\n    <div class=\"cm-container container\">\n      <div class=\"row\">\n        <div class=\"col-sm-6 align-start\">\n          <adapt-badge\n            [animate]=\"animation\"\n            variant=\"warning\"\n            [showAlert]=\"false\"\n            alertVariant=\"warning\"\n            *ngIf=\"!dataItem.isMapped\"\n          >\n            {{ 'com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.status.unmapped.label' | translate }}\n          </adapt-badge>\n          <adapt-badge\n            [animate]=\"animation\"\n            variant=\"success\"\n            [showAlert]=\"false\"\n            alertVariant=\"success\"\n            *ngIf=\"dataItem.isMapped\"\n          >\n            {{ 'com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.status.mapped.label' | translate }}\n          </adapt-badge>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #visibilityGroupColTemplate let-dataItem=\"dataItem\">\n    <div class=\"cm-container container\">\n      <div class=\"row align-start\" *ngIf=\"dataItem.isMapped && hasPortals()\">\n        <a href=\"javascript:void(0)\" (click)=\"openAccessMappingDialog(dataItem)\" class=\"alert-link\">{{\n          dataItem.supportGroupName\n        }}</a>\n      </div>\n      <div class=\"row align-start\" *ngIf=\"!dataItem.isMapped || !hasPortals()\">\n        {{ dataItem.supportGroupName }}\n      </div>\n    </div>\n  </ng-template>\n</rx-admin-settings>\n"]}