{"version":3,"file":"iframe.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/components/iframe/iframe.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAC3C,OAAO,EACL,cAAc,EACd,wBAAwB,EAGxB,MAAM,EACN,UAAU,EACV,QAAQ,EACR,YAAY,EACb,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAC5D,OAAO,EAAE,iBAAiB,EAAE,MAAM,oBAAoB,CAAC;;AAMvD,MAAM,OAAO,eAAe;IAG1B,YACU,cAA8B,EACZ,QAAa,EAC/B,wBAAkD,EAClD,QAAkB;QAHlB,mBAAc,GAAd,cAAc,CAAgB;QACZ,aAAQ,GAAR,QAAQ,CAAK;QAC/B,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,aAAQ,GAAR,QAAQ,CAAU;IACzB,CAAC;IAEJ,UAAU,CAAC,GAAW;QACpB,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC5B,MAAM,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC;YAElG,IAAI,CAAC,kBAAkB,GAAG,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,oBAAoB,GAAG,IAAI,CAAC;YAC7D,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YAEjE,MAAM,mBAAmB,GAAI,IAAI,CAAC,kBAAkB,CAAC,QAAiC;iBACnF,SAAS,CAAC,CAAC,CAAgB,CAAC;YAE/B,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;YAExE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;SACxB;aAAM;YACL,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,GAAG,KAAK,CAAC;YAClD,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;SAC3B;IACH,CAAC;IAED,UAAU;QACR,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;QAEjD,IAAI,CAAC,eAAe,CAAC,IAAI,cAAc,CAAC,wBAAwB,oBAAoB,CAAC,CAAC;IACxF,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GAAG,CAAC;IAC9C,CAAC;IAEO,YAAY,CAAC,GAAW;QAC9B,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC;YAC3C,GAAG,EAAE,IAAI,YAAY,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC;SACxC,CAAC,CAAC;IACL,CAAC;IAEO,eAAe,CAAC,GAAW;QACjC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAClD,CAAC;;4GAhDU,eAAe,gDAKhB,QAAQ;gHALP,eAAe,cAFd,MAAM;2FAEP,eAAe;kBAH3B,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;0BAMI,MAAM;2BAAC,QAAQ","sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Inject,\n  Injectable,\n  Injector,\n  SimpleChange\n} from '@angular/core';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxIframeComponent } from './iframe.component';\nimport { IIframeApi } from './iframe.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxIframeService {\n  private iframeComponentRef: ComponentRef<RxIframeComponent>;\n\n  constructor(\n    private applicationRef: ApplicationRef,\n    @Inject(DOCUMENT) private document: any,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private injector: Injector\n  ) {}\n\n  showIframe(url: string): void {\n    if (!this.iframeComponentRef) {\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(RxIframeComponent);\n\n      this.iframeComponentRef = componentFactory.create(this.injector);\n      this.iframeComponentRef.instance.isAbsolutePositioned = true;\n      this.applicationRef.attachView(this.iframeComponentRef.hostView);\n\n      const rxIframeHtmlElement = (this.iframeComponentRef.hostView as EmbeddedViewRef<any>)\n        .rootNodes[0] as HTMLElement;\n\n      this.document.querySelector('rx-root').appendChild(rxIframeHtmlElement);\n\n      this.setIframeUrl(url);\n    } else {\n      this.iframeComponentRef.instance.isHidden = false;\n      this.updateIframeUrl(url);\n    }\n  }\n\n  hideIframe(): void {\n    this.iframeComponentRef.instance.isHidden = true;\n\n    this.updateIframeUrl(`/${RX_APPLICATION.innovationStudioBundleId}/index.html#/blank`);\n  }\n\n  getIframeApi(): IIframeApi {\n    return this.iframeComponentRef.instance.api;\n  }\n\n  private setIframeUrl(url: string): void {\n    this.iframeComponentRef.instance.ngOnChanges({\n      url: new SimpleChange(null, url, false)\n    });\n  }\n\n  private updateIframeUrl(url: string): void {\n    this.iframeComponentRef.instance.updateUrl(url);\n  }\n}\n"]}