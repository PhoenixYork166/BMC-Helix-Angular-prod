{"version":3,"file":"extension-container-registration.module.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/components/field-components/extension-container/extension-container-registration.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,wBAAwB,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACnE,OAAO,EAAE,6BAA6B,EAAE,MAAM,yCAAyC,CAAC;AACxF,OAAO,EACL,sBAAsB,EACtB,kBAAkB,EAClB,8BAA8B,EAC9B,mBAAmB,EACpB,MAAM,0BAA0B,CAAC;AAClC,OAAO,EAAE,sBAAsB,EAAE,MAAM,gCAAgC,CAAC;AACxE,OAAO,EAAE,kCAAkC,EAAE,MAAM,6EAA6E,CAAC;AACjI,OAAO,EAAE,mBAAmB,EAAE,MAAM,8BAA8B,CAAC;AACnE,OAAO,EAAE,iCAAiC,EAAE,MAAM,UAAU,CAAC;AAC7D,OAAO,EAAE,6BAA6B,EAAE,MAAM,2CAA2C,CAAC;AAC1F,OAAO,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAC5D,OAAO,EAAE,0BAA0B,EAAE,MAAM,sCAAsC,CAAC;AAClF,OAAO,EAAE,8BAA8B,EAAE,MAAM,4CAA4C,CAAC;;;AAK5F,MAAM,OAAO,oCAAoC;IAC/C,YACU,8BAA8D,EAC9D,wBAAkD;QADlD,mCAA8B,GAA9B,8BAA8B,CAAgC;QAC9D,6BAAwB,GAAxB,wBAAwB,CAA0B;QAE1D,IAAI,CAAC,8BAA8B,CAAC,QAAQ,CAC1C;YACE,IAAI,EAAE,sBAAsB,CAAC,IAAI;YACjC,gBAAgB,EAAE,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,6BAA6B,CAAC;YACtG,UAAU,EAAE,sBAAsB;YAClC,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,kBAAkB,CAAC,iBAAiB;iBAC3C;aACF;YAED,IAAI,EAAE,qBAAqB;YAC3B,KAAK,EAAE,mBAAmB,CAAC,gBAAgB;YAC3C,IAAI,EAAE,QAAQ;YACd,sBAAsB,EAAE,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAC3E,iCAAiC,CAClC;YACD,oBAAoB,EAAE,6BAA6B;YACnD,OAAO,EAAE;gBACP,2BAA2B,EAAE,IAAI;aAClC;YACD,iBAAiB,CAAC,cAAwB;gBACxC,OAAO,cAAc,CAAC,QAAQ,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;YACnE,CAAC;YACD,QAAQ,EAAE,cAAc,CAAC,gBAAgB;SAC1C,EACD;YACE,IAAI,EAAE,sBAAsB,CAAC,kCAAkC;YAC/D,gBAAgB,EAAE,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,kCAAkC,CAAC;YAC3G,UAAU,EAAE;gBACV;oBACE,IAAI,EAAE,KAAK;oBACX,0BAA0B,EAAE,IAAI;iBACjC;aACF;YACD,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,kBAAkB,CAAC,iBAAiB;iBAC3C;aACF;SACF,CACF,CAAC;IACJ,CAAC;;iIA/CU,oCAAoC;kIAApC,oCAAoC,YAFrC,0BAA0B,EAAE,8BAA8B;kIAEzD,oCAAoC,YAFtC,CAAC,0BAA0B,EAAE,8BAA8B,CAAC;2FAE1D,oCAAoC;kBAHhD,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,0BAA0B,EAAE,8BAA8B,CAAC;iBACtE","sourcesContent":["import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { RxExtensionContainerComponent } from './runtime/extension-container.component';\nimport {\n  RX_STANDARD_PROPS_DESC,\n  RX_VIEW_DEFINITION,\n  RxViewComponentRegistryService,\n  RxViewComponentType\n} from '@helix/platform/view/api';\nimport { RX_EXTENSION_CONTAINER } from './extension-container.constant';\nimport { ExtensionContainerSectionComponent } from './runtime/extension-container-section/extension-container-section.component';\nimport { RX_FIELD_COMPONENTS } from '../field-components.constant';\nimport { ExtensionContainerDesignComponent } from './design';\nimport { ExtensionContainerDesignModel } from './design/extension-container-design.model';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxExtensionContainerModule } from './runtime/extension-container.module';\nimport { ExtensionContainerDesignModule } from './design/extension-container-design.module';\n\n@NgModule({\n  imports: [RxExtensionContainerModule, ExtensionContainerDesignModule]\n})\nexport class ExtensionContainerRegistrationModule {\n  constructor(\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {\n    this.rxViewComponentRegistryService.register(\n      {\n        type: RX_EXTENSION_CONTAINER.type,\n        componentFactory: this.componentFactoryResolver.resolveComponentFactory(RxExtensionContainerComponent),\n        properties: RX_STANDARD_PROPS_DESC,\n        outlets: [\n          {\n            name: RX_VIEW_DEFINITION.defaultOutletName\n          }\n        ],\n\n        name: 'Extension container',\n        group: RX_FIELD_COMPONENTS.stencilGroupName,\n        icon: 'widget',\n        designComponentFactory: this.componentFactoryResolver.resolveComponentFactory(\n          ExtensionContainerDesignComponent\n        ),\n        designComponentModel: ExtensionContainerDesignModel,\n        options: {\n          canBeEmbeddedInRecordEditor: true\n        },\n        canBeInsertedInto(componentTypes: string[]): boolean {\n          return componentTypes.includes(RxViewComponentType.RecordEditor);\n        },\n        bundleId: RX_APPLICATION.platformBundleId\n      },\n      {\n        type: RX_EXTENSION_CONTAINER.extensionContainerSectionComponent,\n        componentFactory: this.componentFactoryResolver.resolveComponentFactory(ExtensionContainerSectionComponent),\n        properties: [\n          {\n            name: 'api',\n            enableExpressionEvaluation: true\n          }\n        ],\n        outlets: [\n          {\n            name: RX_VIEW_DEFINITION.defaultOutletName\n          }\n        ]\n      }\n    );\n  }\n}\n"]}