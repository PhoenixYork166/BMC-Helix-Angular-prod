{"version":3,"file":"canvas-outlet-helper.service.js","sourceRoot":"","sources":["../../../../../../../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-outlet/canvas-outlet-helper.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAgB,UAAU,EAAE,MAAM,eAAe,CAAC;AAMzD,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,QAAQ,CAAC;AAC1C,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAE/D,OAAO,EAAc,aAAa,EAAE,MAAM,MAAM,CAAC;;AAGjD,MAAM,OAAO,yBAAyB;IADtC;QAQU,mCAA8B,GAAG,IAAI,aAAa,EAA0B,CAAC;QAC9E,6BAAwB,GAAG,IAAI,CAAC,8BAA8B,CAAC,YAAY,EAAE,CAAC;KAuDtF;IArDC,+BAA+B,CAAC,qBAA6C;QAC3E,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAClE,CAAC;IAED,YAAY,CAAC,IAAqC;QAChD,IAAI,iBAAiB,GAAG,IAAI,CAAC;QAE7B,IAAI,UAAU,CAAC,IAAI,CAAC,8BAA8B,CAAC,iBAAiB,CAAC,EAAE;YACrE,iBAAiB,GAAG,IAAI,CAAC,8BAA8B,CAAC,iBAAiB,CACvE,IAAI,CAAC,kCAAkC,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAC3E,CAAC;SACH;QAED,IAAI,iBAAiB,EAAE;YACrB,iBAAiB;gBACf,CAAC,CAAC,IAAI,CAAC,wBAAwB;oBAC7B,CAAC,IAAI,CAAC,6BAA6B,CAChC,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAA+B,CAAC,wBAAwB,EACjG,IAAI,CAAC,2BAA2B,CACjC,CAAC;oBACJ,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;SACrC;QAED,OAAO,iBAAiB,CAAC;IAC3B,CAAC;IAED,sBAAsB,CAAC,IAAqC,EAAE,aAAa,GAAG,KAAK;QACjF,OAAO,CACL,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAC3C,CAAC,CAAC,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC,CACnH,CAAC;IACJ,CAAC;IAEO,6BAA6B,CACnC,+BAAiE,EACjE,+BAAiE;QAEjE,MAAM,kBAAkB,GAAG,IAAI,CAAC,+BAA+B,EAAE;YAC/D,IAAI,EAAE,mBAAmB,CAAC,YAAY;SACvC,CAAC,CAAC;QAEH,MAAM,kBAAkB,GAAG,IAAI,CAAC,+BAA+B,EAAE;YAC/D,IAAI,EAAE,mBAAmB,CAAC,YAAY;SACvC,CAAC,CAAC;QAEH,MAAM,4BAA4B,GAChC,OAAO,CAAC,kBAAkB,CAAC,IAAI,OAAO,CAAC,kBAAkB,CAAC,IAAI,kBAAkB,CAAC,IAAI,KAAK,kBAAkB,CAAC,IAAI,CAAC;QAEpH,MAAM,6BAA6B,GAAG,CAAC,kBAAkB,IAAI,OAAO,CAAC,kBAAkB,CAAC,CAAC;QACzF,MAAM,4BAA4B,GAAG,CAAC,kBAAkB,IAAI,OAAO,CAAC,kBAAkB,CAAC,CAAC;QAExF,OAAO,4BAA4B,IAAI,6BAA6B,IAAI,4BAA4B,CAAC;IACvG,CAAC;;sHA9DU,yBAAyB;0HAAzB,yBAAyB;2FAAzB,yBAAyB;kBADrC,UAAU","sourcesContent":["import { ComponentRef, Injectable } from '@angular/core';\nimport {\n  IViewComponentDropData,\n  IViewComponentDropPredicateData,\n  IViewDesignerCanvasLayout\n} from '../../interfaces/view-designer-canvas.interfaces';\nimport { find, isFunction } from 'lodash';\nimport { RxViewComponentType } from '@helix/platform/view/api';\nimport { DropListOrientation } from '@angular/cdk/drag-drop';\nimport { Observable, ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class CanvasOutletHelperService {\n  dropListOrientation: DropListOrientation;\n  parentOutletComponent: any;\n  containerComponentInstance: ComponentRef<any>;\n  skipParentPredicate: boolean;\n  dropPredicate: (data: IViewComponentDropPredicateData) => boolean;\n\n  private beforeViewComponentDropSubject = new ReplaySubject<IViewComponentDropData>();\n  public beforeViewComponentDrop$ = this.beforeViewComponentDropSubject.asObservable();\n\n  setBeforeViewComponentDropState(viewComponentDropData: IViewComponentDropData): void {\n    this.beforeViewComponentDropSubject.next(viewComponentDropData);\n  }\n\n  canBeDropped(data: IViewComponentDropPredicateData): boolean {\n    let canBeInsertedInto = true;\n\n    if (isFunction(data.draggedViewComponentDescriptor.canBeInsertedInto)) {\n      canBeInsertedInto = data.draggedViewComponentDescriptor.canBeInsertedInto(\n        data.dropTargetViewComponentWithParents.map((component) => component.type)\n      );\n    }\n\n    if (canBeInsertedInto) {\n      canBeInsertedInto =\n        (!data.draggedViewComponentGuid ||\n          !this._isParentRecordEditorChanging(\n            (this.containerComponentInstance['layout'] as IViewDesignerCanvasLayout).viewComponentWithParents,\n            data.draggedViewComponentParents\n          )) &&\n        this.componentDropPredicate(data);\n    }\n\n    return canBeInsertedInto;\n  }\n\n  componentDropPredicate(data: IViewComponentDropPredicateData, skipPredicate = false): boolean {\n    return (\n      (skipPredicate || this.dropPredicate(data)) &&\n      (!this.parentOutletComponent || this.parentOutletComponent.componentDropPredicate(data, this.skipParentPredicate))\n    );\n  }\n\n  private _isParentRecordEditorChanging(\n    targetContainerParentComponents: { guid: string; type: string }[],\n    sourceComponentParentComponents: { guid: string; type: string }[]\n  ): boolean {\n    const targetRecordEditor = find(targetContainerParentComponents, {\n      type: RxViewComponentType.RecordEditor\n    });\n\n    const sourceRecordEditor = find(sourceComponentParentComponents, {\n      type: RxViewComponentType.RecordEditor\n    });\n\n    const isMovingBetweenRecordEditors =\n      Boolean(targetRecordEditor) && Boolean(sourceRecordEditor) && targetRecordEditor.guid !== sourceRecordEditor.guid;\n\n    const isDroppingOutsideRecordEditor = !targetRecordEditor && Boolean(sourceRecordEditor);\n    const isDroppingInsideRecordEditor = !sourceRecordEditor && Boolean(targetRecordEditor);\n\n    return isMovingBetweenRecordEditors || isDroppingOutsideRecordEditor || isDroppingInsideRecordEditor;\n  }\n}\n"]}