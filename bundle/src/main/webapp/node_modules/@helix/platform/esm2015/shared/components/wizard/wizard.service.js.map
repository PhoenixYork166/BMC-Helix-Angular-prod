{"version":3,"file":"wizard.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/components/wizard/wizard.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAElE,OAAO,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AACxD,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;;;AAK9B,MAAM,OAAO,eAAe;IAC1B,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAEtD,IAAI,CAAW,MAA+B;QAC5C,OAAO,IAAI,CAAC,cAAc;aACvB,SAAS,CAAC;YACT,OAAO,EAAE,sBAAsB;YAC/B,IAAI,oBACC,MAAM,CACV;SACF,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;;4GAZU,eAAe;gHAAf,eAAe,cAFd,MAAM;2FAEP,eAAe;kBAH3B,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { RxWizardModalComponent } from './wizard-modal.component';\nimport { IWizardConfig } from './wizard.types';\nimport { RxModalService } from '@helix/platform/ui-kit';\nimport { noop } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxWizardService {\n  constructor(private rxModalService: RxModalService) {}\n\n  open<TContext>(config: IWizardConfig<TContext>): Promise<TContext> {\n    return this.rxModalService\n      .openModal({\n        content: RxWizardModalComponent,\n        data: {\n          ...config\n        }\n      })\n      .catch(noop);\n  }\n}\n"]}