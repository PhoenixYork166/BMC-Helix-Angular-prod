{"version":3,"file":"shell.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/api/shell/shell.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { find, forEach, get, has, isEmpty } from 'lodash';\nimport { Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport {\n  IUser,\n  RX_APPLICATION,\n  RxCurrentUserService,\n  RxNotificationService,\n  RxFeatureService\n} from '@helix/platform/shared/api';\nimport { RxJsonParserService, RxObjectUtilsService, RxUrlUtilsService } from '@helix/platform/utils';\nimport {\n  AnyViewComponentDefinition,\n  IContainerViewComponentDefinition\n} from '../domain/view-component-definition.types';\nimport { RxExpressionEvaluatorService } from '../expressions/expression-evaluator.service';\nimport { RX_SHELL } from './shell.constant';\nimport { IRxShellConfig, IRxShellMenuItem, IRxShellMenuProperties, IRxShellNavBarProperties } from './shell.types';\nimport { RxViewDefinitionCacheService } from '../services/view-definition-cache.service';\nimport { RxViewDefinitionParserService } from '../services/view-definition-parser.service';\nimport { RxOldViewLayoutAdapterService } from '../layout/old-view-layout-adapter.service';\nimport { RxViewLayout } from '../layout/view-layout.class';\nimport { IViewLayout } from '../layout/view-layout.types';\nimport { RX_LEGACY_ICONS } from '../icons/icon.constant';\nimport { RX_VIEW_DEFINITION } from '../domain/view-definition.constant';\nimport { OpenViewActionLaunchBehavior, OpenViewActionType } from '../view-action/view-action.types';\nimport { RX_LAUNCH_BEHAVIOR } from '../view-action/common/launch-behavior.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxShellService {\n  private menuItemId = 0;\n  private currentUser: IUser;\n  private navigateToSmartReportingSubject = new Subject<void>();\n  private navigateToViewSubject = new Subject<IRxShellMenuItem>();\n  private openUserPreferencesSubject = new Subject<void>();\n  private openUserAvailabilitySubject = new Subject<void>();\n  private shellConfigSubject: ReplaySubject<IRxShellConfig> = new ReplaySubject(1);\n  private openGainsightPreferencesSubject = new Subject<void>();\n\n  navigateToSmartReporting$: Observable<void> = this.navigateToSmartReportingSubject.asObservable();\n  navigateToView$: Observable<IRxShellMenuItem> = this.navigateToViewSubject.asObservable();\n  openUserPreferences$: Observable<void> = this.openUserPreferencesSubject.asObservable();\n  openUserAvailability$: Observable<void> = this.openUserAvailabilitySubject.asObservable();\n  shellConfig$: Observable<IRxShellConfig> = this.shellConfigSubject.asObservable();\n  openGainsightPreferences$: Observable<void> = this.openGainsightPreferencesSubject.asObservable();\n\n  constructor(\n    private translateService: TranslateService,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxExpressionEvaluatorService: RxExpressionEvaluatorService,\n    private rxJsonParserService: RxJsonParserService,\n    private rxNotificationService: RxNotificationService,\n    private rxObjectUtilsService: RxObjectUtilsService,\n    private rxUrlUtilsService: RxUrlUtilsService,\n    private rxViewDefinitionCacheService: RxViewDefinitionCacheService,\n    private rxViewDefinitionParserService: RxViewDefinitionParserService,\n    private rxOldViewLayoutAdapterService: RxOldViewLayoutAdapterService,\n    private rxFeatureService: RxFeatureService\n  ) {}\n\n  resetMenuItemCount(): void {\n    this.menuItemId = 0;\n  }\n\n  updateMenuItemCount(): number {\n    return this.menuItemId++;\n  }\n\n  private getChildGuids(layout: IViewLayout, outletName = RX_VIEW_DEFINITION.defaultOutletName): string[] {\n    return RxViewLayout.getViewLayoutChildGuids(layout, outletName);\n  }\n\n  private getIconClass(icon: string, left = true): string {\n    const iconId = get(RX_LEGACY_ICONS, icon, icon);\n\n    return iconId ? `d-icon-${left ? 'left-' : ''}` + iconId : '';\n  }\n\n  getShellConfig(bundleId: string): Observable<IRxShellConfig> {\n    const navigationBarItems: IRxShellMenuItem[] = [];\n    const flattenedMenuItems: IRxShellMenuItem[] = [];\n    const navigationActions: IRxShellMenuItem[] = [];\n\n    const preferenceMenuItem: IRxShellMenuItem = {\n      name: this.translateService.instant('com.bmc.arsys.rx.client.shell.my-preferences.label'),\n      action: this.openUserPreferences.bind(this),\n      className: 'd-icon-wrench_o',\n      hide: false,\n      subMenu: []\n    } as IRxShellMenuItem;\n\n    const gainsightPreferenceMenuItem: IRxShellMenuItem = {\n      name: this.translateService.instant('com.bmc.arsys.rx.client.shell.analytics.label'),\n      action: this.openGainsightPreferences.bind(this),\n      className: 'd-icon-app_chart_bar',\n      hide: false,\n      id: 0,\n      subMenu: []\n    };\n\n    const myAvailabilityMenuItem: IRxShellMenuItem = {\n      name: this.translateService.instant('com.bmc.arsys.rx.client.shell.my-availability.label'),\n      action: this.openUserAvailability.bind(this),\n      hide: false,\n      className: 'd-icon-user_clock_o',\n      subMenu: []\n    } as IRxShellMenuItem;\n\n    let navBarProperties: IRxShellNavBarProperties;\n    let userMenu = null;\n\n    this.currentUser = this.rxCurrentUserService.get();\n\n    return this.rxViewDefinitionCacheService\n      .getViewDefinition(`${bundleId}:${RX_APPLICATION.shellDefinitionName}`)\n      .pipe(\n        switchMap((shellDefinition) => {\n          this.rxViewDefinitionParserService\n            .getComponents(shellDefinition)\n            .forEach((definition) => this.rxOldViewLayoutAdapterService.convertLayout(definition));\n\n          if (shellDefinition && shellDefinition.componentDefinitions[0]) {\n            const navBar = shellDefinition.componentDefinitions[0] as IContainerViewComponentDefinition;\n            const layout: IViewLayout = this.rxJsonParserService.tryParseJson(navBar.layout);\n\n            navBarProperties = (navBar.propertiesByName as IRxShellNavBarProperties) || {\n              allowAppSwitching: null,\n              globalSearchUseDefault: null,\n              globalSearchDisabled: null,\n              globalSearchRecords: null,\n              globalSearchCustomSearchState: null\n            };\n\n            forEach(this.getChildGuids(layout), (guid) => {\n              const menuItemDefinition = find(navBar.componentDefinitions, {\n                guid\n              }) as IContainerViewComponentDefinition;\n\n              if (menuItemDefinition) {\n                let menuItem: IRxShellMenuItem;\n\n                switch (menuItemDefinition.type) {\n                  case RX_SHELL.navBar.menuGroup:\n                  case RX_SHELL.navBar.userMenu:\n                    const subMenu = [];\n\n                    const childLayout =\n                      this.rxJsonParserService.tryParseJson(menuItemDefinition.layout) ||\n                      RxViewLayout.getViewLayoutForDefaultOutlet(\n                        menuItemDefinition.componentDefinitions.map((item: AnyViewComponentDefinition) => item.guid)\n                      );\n\n                    forEach(this.getChildGuids(childLayout), (childGuid) => {\n                      const subItemDefinition = find(menuItemDefinition.componentDefinitions, {\n                        guid: childGuid\n                      });\n\n                      if (subItemDefinition) {\n                        const subItem = this.getMenuProperties(subItemDefinition);\n\n                        if (!isEmpty(subItem)) {\n                          // concatenating className with listClassName, as listClassName not available for subMenu\n                          if (menuItemDefinition.type === RX_SHELL.navBar.userMenu) {\n                            subItem.className += ' ' + subItem.listClassName;\n                          } else {\n                            flattenedMenuItems.push(subItem);\n                          }\n\n                          subMenu.push(subItem);\n                        }\n                      }\n                    });\n\n                    if (subMenu.length > 0) {\n                      // LMA:: TODO:: Even if we set the className in a first level menu the icon is not displayed\n                      menuItem = {\n                        hide: has(menuItemDefinition.propertiesByName, 'hidden')\n                          ? this.rxJsonParserService.tryParseJson(menuItemDefinition.propertiesByName.hidden)\n                          : false,\n                        listClassName: get(menuItemDefinition.propertiesByName, 'styles'),\n                        className: this.getIconClass(get(menuItemDefinition.propertiesByName, 'menuItemIcon')),\n                        name: menuItemDefinition.propertiesByName.menuGroupName,\n                        subMenu: subMenu,\n                        id: this.updateMenuItemCount()\n                      };\n                    }\n\n                    break;\n\n                  case RX_SHELL.navBar.menuItem:\n                    menuItem = this.getMenuProperties(menuItemDefinition);\n                    break;\n                }\n\n                if (!isEmpty(menuItem)) {\n                  if (menuItemDefinition.type === RX_SHELL.navBar.userMenu) {\n                    userMenu = menuItem;\n                  } else {\n                    flattenedMenuItems.push(menuItem);\n                    navigationBarItems.push(menuItem);\n                  }\n                }\n              }\n            });\n\n            forEach(this.getChildGuids(layout, RX_SHELL.outlets.actions), (guid) => {\n              const menuItemDefinition = navBar.componentDefinitions.find((definition) => definition.guid === guid);\n\n              if (menuItemDefinition) {\n                navigationActions.push(this.getMenuProperties(menuItemDefinition));\n              }\n            });\n          }\n\n          if (this.rxCurrentUserService.isSupportStaff()) {\n            myAvailabilityMenuItem.id = this.updateMenuItemCount();\n\n            if (!userMenu) {\n              userMenu = {\n                subMenu: []\n              };\n            }\n\n            userMenu.subMenu.push(myAvailabilityMenuItem);\n          }\n\n          if (this.currentUser.fullName) {\n            preferenceMenuItem.id = this.updateMenuItemCount();\n\n            if (!userMenu) {\n              userMenu = {\n                subMenu: []\n              };\n            }\n\n            userMenu.subMenu.push(preferenceMenuItem);\n          }\n\n          if (this.rxFeatureService.isFeatureEnabled('DRD21-11744')) {\n            userMenu.subMenu.push(gainsightPreferenceMenuItem);\n          }\n\n          const rxData = {\n            flattenedMenuItems,\n            navigationBarItems,\n            navigationActions,\n            userMenu: userMenu || [],\n            allowAppSwitching: has(navBarProperties, 'allowAppSwitching')\n              ? this.rxJsonParserService.tryParseJson(navBarProperties.allowAppSwitching)\n              : false,\n            globalSearchUseDefault: has(navBarProperties, 'globalSearchUseDefault')\n              ? this.rxJsonParserService.tryParseJson(navBarProperties.globalSearchUseDefault)\n              : true,\n            globalSearchCustomSearchState: navBarProperties.globalSearchCustomSearchState || '',\n            globalSearchDisabled: has(navBarProperties, 'globalSearchDisabled')\n              ? this.rxJsonParserService.tryParseJson(navBarProperties.globalSearchDisabled)\n              : true,\n            globalSearchRecords: has(navBarProperties, 'globalSearchRecords')\n              ? this.rxJsonParserService.tryParseJson(navBarProperties.globalSearchRecords)\n              : [],\n\n            // LMA:: TODO:: Later... See:\n            // standardlib/src/main/webapp/scripts/view-components/shell/shell-config.resource.js\n            // ,\n            // globalSearchState: rxSearchResultsState.get(),\n            // administrationSettingsState: rxAdministrationSettingsState.get()\n            globalSearchState: 'globalSearchState',\n            administrationSettingsState: 'adminSettingsState'\n          };\n\n          // In case server already had previously saved shell config with global search not configured,\n          // we want to disable global search by default\n          if (\n            !rxData.globalSearchDisabled &&\n            ((rxData.globalSearchUseDefault && rxData.globalSearchRecords.length === 0) ||\n              (!rxData.globalSearchUseDefault && rxData.globalSearchCustomSearchState.length === 0))\n          ) {\n            rxData.globalSearchDisabled = true;\n          }\n\n          this.shellConfigSubject.next(rxData);\n\n          return of(rxData);\n        })\n      );\n  }\n\n  private openUserPreferences(): void {\n    this.openUserPreferencesSubject.next();\n  }\n\n  private openGainsightPreferences(): void {\n    this.openGainsightPreferencesSubject.next();\n  }\n\n  private openUserAvailability(): void {\n    this.openUserAvailabilitySubject.next();\n  }\n\n  private navigateToView(viewParams): void {\n    this.navigateToViewSubject.next(viewParams);\n  }\n\n  private navigateToState(): void {\n    this.rxNotificationService.addWarningMessage('This feature is not supported.');\n  }\n\n  private navigateToSmartReporting(): void {\n    this.navigateToSmartReportingSubject.next();\n  }\n\n  private getMenuProperties(itemDefinition): IRxShellMenuItem {\n    const menuItem: IRxShellMenuItem = {} as IRxShellMenuItem;\n\n    const properties: IRxShellMenuProperties = this.rxObjectUtilsService.expandProperties(\n      itemDefinition.propertiesByName\n    ) as IRxShellMenuProperties;\n\n    menuItem.type = properties.actionName;\n    menuItem.id = this.updateMenuItemCount();\n    menuItem.closeOnClick = true;\n\n    switch (properties.actionName) {\n      case RX_SHELL.actions.launchURL:\n        menuItem.name = properties.menuItemName;\n        menuItem.target =\n          RX_LAUNCH_BEHAVIOR[properties.launchBehavior || OpenViewActionLaunchBehavior.NewWindow].target;\n\n        if (itemDefinition.type === RX_SHELL.navBar.action) {\n          menuItem.action = () => {\n            window.open(properties.url, menuItem.target);\n          };\n        } else {\n          menuItem.link = properties.url;\n        }\n\n        break;\n\n      case RX_SHELL.actions.navigateToView:\n        const viewParams = properties.viewParams;\n\n        forEach(viewParams, (expression: string, parameterName: string) => {\n          const paramValue = this.rxExpressionEvaluatorService.tryEvaluate(expression, {\n            keywords: {\n              userId: this.currentUser.userId,\n              personId: this.currentUser.personInstanceId\n            }\n          });\n\n          viewParams[parameterName] = paramValue;\n\n          return paramValue;\n        });\n\n        const url = this.rxUrlUtilsService.buildUrl(`${properties.viewDefinitionName}`, viewParams);\n\n        menuItem.name = properties.menuItemName;\n        menuItem.viewUrl = url;\n        menuItem.action = this.navigateToView.bind(this, menuItem);\n\n        menuItem.openViewParams = {\n          viewDefinitionName: properties.viewDefinitionName,\n          presentation: {\n            type: OpenViewActionType.FullWidth,\n            launchBehavior: OpenViewActionLaunchBehavior.SameWindow,\n            ...get(properties, 'presentation', {})\n          },\n          viewParams\n        };\n\n        break;\n      case RX_SHELL.actions.navigateToState:\n        // LMA:: TODO:: Implement it later\n        // if (!isRuntime || rxAuthorization.isStateAuthorized(properties.state)) {\n        menuItem.name = properties.menuItemName;\n\n        const stateParameters = {\n          state: properties.state,\n          menuItemId: menuItem.id\n        };\n\n        menuItem.stateParameters = stateParameters;\n        menuItem.action = this.navigateToState.bind(this, stateParameters);\n        break;\n      case RX_SHELL.actions.navigateToSmartReporting:\n        menuItem.name = properties.menuItemName;\n        menuItem.action = this.navigateToSmartReporting.bind(this);\n        break;\n    }\n\n    menuItem.hide = has(properties, 'hidden') ? this.rxJsonParserService.tryParseJson(properties.hidden) : false;\n    menuItem.listClassName = properties.styles;\n    menuItem.className = this.getIconClass(properties.menuItemIcon, itemDefinition.type !== RX_SHELL.navBar.action);\n\n    return menuItem;\n  }\n}\n"]}