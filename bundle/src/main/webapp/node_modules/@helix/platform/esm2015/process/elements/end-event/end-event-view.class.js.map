{"version":3,"file":"end-event-view.class.js","sourceRoot":"","sources":["../../../../../../../libs/platform/process/elements/end-event/end-event-view.class.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,MAAM,kDAAkD,CAAC;AAI3F,MAAM,OAAO,cAAe,SAAQ,uBAAuB,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC;IAChF,UAAU,CAAC,MAAW;QACpB,aAAa;QACb,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IAC3B,CAAC;IAED,kBAAkB;IAClB,QAAQ,CAAC,GAAG;QACV,aAAa;QACb,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;QAEnC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,SAAS,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;QAEnD,aAAa;QACb,KAAK,CAAC,MAAM,EAAE,CAAC;QAEf,gBAAgB;QAChB,0BAA0B;QAC1B,6BAA6B;QAC7B,2BAA2B;QAC3B,gBAAgB;QAChB,oCAAoC;QACpC,EAAE;QACF,yBAAyB;QACzB,+DAA+D;QAC/D,gHAAgH;QAChH,+HAA+H;QAC/H,sBAAsB;QACtB,IAAI;QACJ,EAAE;QACF,iEAAiE;QACjE,EAAE;QACF,mCAAmC;QACnC,oCAAoC;QACpC,EAAE;QACF,8DAA8D;QAC9D,EAAE;QACF,gBAAgB;QAChB,kBAAkB;IACpB,CAAC;CACF","sourcesContent":["import { RxProcessShapeViewMixin } from '../shared/process-shape/process-shape-view.mixin';\n\ndeclare var joint: any;\n\nexport class RxEndEventView extends RxProcessShapeViewMixin(joint.dia.ElementView) {\n  initialize(config: any): any {\n    // @ts-ignore\n    super.initialize(config);\n  }\n\n  // TODO-VS: remove\n  sgResize(opt): any {\n    // @ts-ignore\n    const scalable = this.scalableNode;\n\n    scalable.attr('transform', `scale(${0.5},${0.5})`);\n\n    // @ts-ignore\n    super.update();\n\n    // // @ts-ignore\n    // var model = this.model;\n    // var angle = model.angle();\n    // var size = model.size();\n    // // @ts-ignore\n    // var scalable = this.scalableNode;\n    //\n    // var recursive = false;\n    // if (scalable.node.getElementsByTagName('path').length > 0) {\n    //   // If scalable has at least one descendant that is a path, we need to switch to recursive bbox calculation.\n    //   // If there are no path descendants, group bbox calculation works and so we can use the (faster) native function directly.\n    //   recursive = true;\n    // }\n    //\n    // var scalableBBox = scalable.getBBox({ recursive: recursive });\n    //\n    // var sx = size.width / (60 || 1);\n    // var sy = size.height / (60 || 1);\n    //\n    // scalable.attr('transform', 'scale(' + sx + ',' + sy + ')');\n    //\n    // // @ts-ignore\n    // super.update();\n  }\n}\n"]}