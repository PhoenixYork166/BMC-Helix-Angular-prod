{"version":3,"file":"unknown-design.model.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/components/unknown/design/unknown-design.model.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,wBAAwB,EAAE,MAAM,mCAAmC,CAAC;AAE7E,OAAO,EAAgC,0BAA0B,EAAE,MAAM,+BAA+B,CAAC;AACzG,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAC9B,OAAO,EAAE,IAAI,EAAE,MAAM,gBAAgB,CAAC;AAEtC,MAAM,OAAO,kBAAmB,SAAQ,0BAA0B;IAAlE;;QACE,UAAK,GAAG,sBAAsB,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;IA4B7D,CAAC;IA1BC,MAAM;QACJ,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,mBAAmB,EAAE,EAAE;YAChF,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC3E,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,YAAY,CAAC,mBAAiC;QACpD,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;YAChE,IAAI,EAAE,YAAY;YAClB,SAAS,EAAE,wBAAwB;YACnC,OAAO,EAAE;gBACP,KAAK,EAAE,YAAY;aACpB;YACD,UAAU,EAAE,IAAI;SACjB,CAAC,CAAC,CAAC;QAEJ,OAAO;YACL,uBAAuB,EAAE;gBACvB;oBACE,KAAK,EAAE,SAAS;oBAChB,QAAQ;iBACT;aACF;SACF,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { IPlainObject } from '@helix/platform/shared/api';\nimport { TextFormControlComponent } from '@helix/platform/shared/components';\nimport { IViewDesignerComponentModel } from '@helix/platform/view/api';\nimport { IViewDesignerInspectorConfig, ViewDesignerComponentModel } from '@helix/platform/view/designer';\nimport { keys } from 'lodash';\nimport { take } from 'rxjs/operators';\n\nexport class UnknownDesignModel extends ViewDesignerComponentModel implements IViewDesignerComponentModel {\n  label = `Unknown component: ${this.sandbox.componentType}`;\n\n  rxInit(): void {\n    this.sandbox.componentProperties$.pipe(take(1)).subscribe((componentProperties) => {\n      this.sandbox.updateInspectorConfig(this.getInspector(componentProperties));\n      this.sandbox.setValidationIssues([this.sandbox.createError(this.label)]);\n    });\n  }\n\n  private getInspector(componentProperties: IPlainObject): IViewDesignerInspectorConfig {\n    const controls = keys(componentProperties).map((propertyName) => ({\n      name: propertyName,\n      component: TextFormControlComponent,\n      options: {\n        label: propertyName\n      },\n      isDisabled: true\n    }));\n\n    return {\n      inspectorSectionConfigs: [\n        {\n          label: 'General',\n          controls\n        }\n      ]\n    };\n  }\n}\n"]}