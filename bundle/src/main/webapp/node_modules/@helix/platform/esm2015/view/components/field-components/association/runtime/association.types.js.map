{"version":3,"file":"association.types.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/field-components/association/runtime/association.types.ts"],"names":[],"mappings":"","sourcesContent":["import { RxAssociatedRecordNodeSide } from '@helix/platform/association/api';\nimport { IFieldInstance, IRecordInstance } from '@helix/platform/record/api';\nimport { RxEvaluatedExpression } from '@helix/platform/shared/api';\nimport { RecordEditorState } from '../../../record-editor';\nimport { IBaseRecordEditorFieldComponentConfig } from '../../base-record-editor-field/runtime';\nimport { RxAssociationEditingMode } from '../association.types';\n\nexport interface IRxAssociationFilter {\n  recordInstanceId: RxEvaluatedExpression<string>;\n  associationDefinitionName: string;\n}\n\nexport interface IRxAssociationConfig extends IBaseRecordEditorFieldComponentConfig {\n  associationDefinitionName: string;\n  associationFilter?: IRxAssociationFilter[];\n  associatedRecordNodeSide?: RxAssociatedRecordNodeSide;\n  editingMode: RxAssociationEditingMode;\n  fields?: [];\n  recordDefinitionName: string;\n  state: RecordEditorState;\n  useDefaultRoles: boolean;\n  nodeARole: string;\n  nodeBRole: string;\n}\n\nexport interface IRolesConfig {\n  useDefaultRoles: boolean;\n  nodeARole: string;\n  nodeBRole: string;\n}\n\nexport interface IAssociationRecord {\n  fieldInstances: IFieldInstance[];\n  id: string;\n  rolesConfig?: IRolesConfig;\n}\n\nexport interface IAssociationApi {\n  associate(associations: IRecordInstance[]): void;\n}\n"]}