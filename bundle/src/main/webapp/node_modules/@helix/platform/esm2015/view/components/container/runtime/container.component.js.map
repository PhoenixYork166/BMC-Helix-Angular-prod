{"version":3,"file":"container.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/components/container/runtime/container.component.ts","../../../../../../../../libs/platform/view/components/container/runtime/container.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAU,SAAS,EAAE,MAAM,eAAe,CAAC;AACzE,OAAO,EAAE,iBAAiB,EAA6B,MAAM,8BAA8B,CAAC;AAC5F,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAE3C,OAAO,EAAc,UAAU,EAAE,MAAM,MAAM,CAAC;;;AAO9C,MAAM,OAAO,kBAAmB,SAAQ,iBAAiB;IAOvD,YAAoB,UAAsB,EAAU,QAAmB;QACrE,KAAK,EAAE,CAAC;QADU,eAAU,GAAV,UAAU,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;QANvE,UAAK,GAAqB,EAAE,CAAC;QAE7B,QAAG,GAAkB;YACnB,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;SACzC,CAAC;IAIF,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QAEjB,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QAE5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,MAAwB,EAAE,EAAE;YAClF,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACvC,IAAI,CAAC,KAAK,qBAAQ,MAAM,CAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,YAAoB,EAAE,aAAkB;QAClD,IAAI,YAAY,KAAK,QAAQ,EAAE;YAC7B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,aAAa,CAAC;YAClC,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;SACzD;aAAM;YACL,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;YAEjH,OAAO,UAAU,CAAC,GAAG,aAAa,cAAc,YAAY,mBAAmB,CAAC,CAAC;SAClF;IACH,CAAC;;+GA/BU,kBAAkB;mGAAlB,kBAAkB,2ECX/B,6FACA;2FDUa,kBAAkB;kBAL9B,SAAS;mBAAC;oBACT,QAAQ,EAAE,cAAc;oBACxB,WAAW,EAAE,4BAA4B;oBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;iBAC1C","sourcesContent":["import { Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\nimport { BaseViewComponent, IViewComponentSetProperty } from '@helix/platform/view/runtime';\nimport { takeUntil } from 'rxjs/operators';\nimport { IContainerApi, IContainerConfig } from './container.types';\nimport { Observable, throwError } from 'rxjs';\n\n@Component({\n  selector: 'rx-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss']\n})\nexport class ContainerComponent extends BaseViewComponent implements OnInit, IViewComponentSetProperty {\n  state: IContainerConfig = {};\n\n  api: IContainerApi = {\n    setProperty: this.setProperty.bind(this)\n  };\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.notifyPropertyChanged('api', this.api);\n\n    this.config.pipe(takeUntil(this.destroyed$)).subscribe((config: IContainerConfig) => {\n      this.isHidden = Boolean(config.hidden);\n      this.state = { ...config };\n    });\n  }\n\n  setProperty(propertyPath: string, propertyValue: any): void | Observable<never> {\n    if (propertyPath === 'hidden') {\n      this.state.hidden = propertyValue;\n      this.notifyPropertyChanged(propertyPath, propertyValue);\n    } else {\n      const componentName = this.renderer.selectRootElement(this.elementRef.nativeElement, true).tagName.toLowerCase();\n\n      return throwError(`${componentName}: property ${propertyPath} is not settable.`);\n    }\n  }\n}\n","<rx-runtime-view-canvas-outlet [hidden]=\"state.hidden\"></rx-runtime-view-canvas-outlet>\n"]}