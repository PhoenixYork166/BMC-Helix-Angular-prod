{"version":3,"file":"record-server-action-expression-configurator.mixin.js","sourceRoot":"","sources":["../../../../../../../libs/platform/process/server-actions/record/record-server-action-expression-configurator.mixin.ts"],"names":[],"mappings":"AAAA,OAAO,EAAc,EAAE,EAAE,MAAM,MAAM,CAAC;AAQtC,OAAO,EAAE,uBAAuB,EAAE,MAAM,iCAAiC,CAAC;AAE1E,MAAM,UAAU,+CAA+C,CAA4B,IAAW;IACpG,OAAO,MAAM,0CAA2C,SAAQ,IAAI;QAClE,YAAY,GAAG,IAAW;YACxB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;QACjB,CAAC;QAED,0BAA0B,CAAC,YAAoB,EAAE,UAAkB;YACjE,IAAI,OAAO,GAAG,IAAI,CAAC;YAEnB,IACE,YAAY,KAAK,sBAAsB;gBACvC,UAAU;gBACV,CAAC,UAAU,CAAC,KAAK,CAAC,uBAAuB,CAAC,gCAAgC,CAAC,EAC3E;gBACA,OAAO,GAAG,KAAK,CAAC;aACjB;YAED,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC;QACrB,CAAC;KACF,CAAC;AACJ,CAAC","sourcesContent":["import { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { find } from 'lodash';\n\nimport { Constructor } from '@helix/platform/utils';\nimport { IDataDictionary } from '@helix/platform/shared/api';\nimport { RxRecordDefinitionCacheService } from '@helix/platform/record/api';\n\nimport { RX_RECORD_SERVER_ACTION } from './record-server-action.constant';\n\nexport function RxRecordServerActionExpressionConfiguratorMixin<TBase extends Constructor>(Base: TBase) {\n  return class RxRecordServerActionExpressionConfigurator extends Base {\n    constructor(...args: any[]) {\n      super(...args);\n    }\n\n    validateInputMapExpression(propertyName: string, expression: string) {\n      let isValid = true;\n\n      if (\n        propertyName === 'recordDefinitionName' &&\n        expression &&\n        !expression.match(RX_RECORD_SERVER_ACTION.dynamicRecordDefinitionNameRegex)\n      ) {\n        isValid = false;\n      }\n\n      return of(isValid);\n    }\n  };\n}\n"]}