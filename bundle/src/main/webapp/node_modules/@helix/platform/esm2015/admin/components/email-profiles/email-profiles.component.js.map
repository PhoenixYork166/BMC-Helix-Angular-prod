{"version":3,"file":"email-profiles.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/admin/components/email-profiles/email-profiles.component.ts","../../../../../../../libs/platform/admin/components/email-profiles/email-profiles.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { DataCellTemplateParams } from '@bmc-ux/adapt-table';\nimport {\n  IRecordDefinition,\n  RecordInstance,\n  RX_RECORD_DEFINITION,\n  RxRecordInstanceDataPageService,\n  RxRecordInstanceService\n} from '@helix/platform/record/api';\nimport { IDataPageResult, RxNotificationService } from '@helix/platform/shared/api';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport {\n  IRecordGridActionButton,\n  IRecordGridColumn,\n  IRecordGridConfig,\n  IRecordGridDataPageParams,\n  RecordGridComponent\n} from '@helix/platform/view/components';\nimport { find, get, isEmpty, map as _map, noop, parseInt, transform } from 'lodash';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { CreateEmailProfileComponent } from './create-email-profile/create-email-profile.component';\nimport { RX_EMAIL_PROFILES } from './email-profiles.constant';\nimport { IEmailProfile } from './email-profiles.interfaces';\nimport { RxEmailProfilesService } from './email-profiles.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-email-profiles',\n  templateUrl: './email-profiles.component.html'\n})\nexport class EmailProfilesAdminComponent implements OnInit {\n  constructor(\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService,\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private rxNotificationService: RxNotificationService,\n    private rxModalService: RxModalService,\n    private rxEmailProfilesService: RxEmailProfilesService,\n    private translateService: TranslateService\n  ) {}\n\n  @ViewChild('emailProfilesGrid')\n  emailProfilesGrid: RecordGridComponent;\n\n  @ViewChild('mailboxFunctionCellTemplate', { static: true })\n  mailboxFunctionCellTemplate: TemplateRef<DataCellTemplateParams>;\n\n  currentRecordInstance: Observable<RecordInstance>;\n  emailProfilesGridConfig$: Observable<IRecordGridConfig>;\n\n  ngOnInit(): void {\n    const gridColumns: IRecordGridColumn[] = [\n      {\n        fieldId: `${RX_RECORD_DEFINITION.coreFieldIds.id}`,\n        index: 0,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.id.label'),\n        visible: false\n      },\n      {\n        fieldId: `${RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasName}`,\n        index: 1,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.create-email-profile.profile-name.label'),\n        clickable: true,\n        actions: [\n          {\n            name: (previousActionResult: any, selectedRow: IRowDataItem) => {\n              this.currentRecordInstance = this.rxRecordInstanceService.get(\n                RX_EMAIL_PROFILES.aliasMapping.recordDefinitionName,\n                selectedRow[RX_RECORD_DEFINITION.coreFieldIds.id]\n              );\n\n              const profileData: IEmailProfile = {\n                profileName: selectedRow[RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasName],\n                mailbox: selectedRow[RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasValue],\n                application: selectedRow[RX_EMAIL_PROFILES.aliasMapping.fieldIds.applicationId],\n                mailboxType: (() => {\n                  const assignee = parseInt(selectedRow[RX_EMAIL_PROFILES.aliasMapping.fieldIds.assignee], 10);\n\n                  return _map(\n                    RX_EMAIL_PROFILES.mailbox.mailboxFunctions,\n                    (mailboxFunction) => mailboxFunction.id\n                  ).includes(assignee)\n                    ? assignee\n                    : null;\n                })()\n              };\n\n              this.createEmailProfile(profileData);\n            }\n          }\n        ]\n      },\n      {\n        fieldId: `${RX_EMAIL_PROFILES.aliasMapping.fieldIds.description}`,\n        index: 2,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.create-email-profile.mailbox.label'),\n        sortable: false,\n        filterable: false\n      },\n      {\n        fieldId: `${RX_EMAIL_PROFILES.aliasMapping.fieldIds.assignee}`,\n        index: 3,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.create-email-profile.mailbox-function.label'\n        ),\n        sortable: false,\n        filterable: false,\n        cellTemplate: this.mailboxFunctionCellTemplate\n      },\n      {\n        fieldId: `${RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasValue}`,\n        index: 4,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.email-profiles.outgoing-mailbox-id.label'),\n        visible: false\n      },\n      {\n        fieldId: `${RX_EMAIL_PROFILES.aliasMapping.fieldIds.applicationName}`,\n        index: 5,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.create-email-profile.application.label')\n      }\n    ];\n\n    const recordDefinition: IRecordDefinition = {\n      fieldDefinitions: [\n        {\n          id: RX_RECORD_DEFINITION.coreFieldIds.description,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_EMAIL_PROFILES.aliasMapping.fieldIds.assignee,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_RECORD_DEFINITION.coreFieldIds.id,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasName,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_EMAIL_PROFILES.aliasMapping.fieldIds.applicationName,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasValue,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        }\n      ]\n    };\n\n    const actionButtons: IRecordGridActionButton[] = [\n      {\n        label: 'Delete',\n        style: 'tertiary',\n        icon: 'trash',\n        actions: [\n          {\n            name: () => {\n              this.rxModalService\n                .confirm({\n                  title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n                  modalStyle: RX_MODAL.modalStyles.warning,\n                  message: this.translateService.instant(\n                    'com.bmc.arsys.rx.client.admin.email-profiles.delete-confirmation.message'\n                  )\n                })\n                .then((response) => {\n                  if (response) {\n                    const selectedEmailProfiles = this.emailProfilesGrid.api.getSelectedRows();\n                    const selectedEmailProfileIds = _map(selectedEmailProfiles, RX_RECORD_DEFINITION.coreFieldIds.id);\n\n                    this.rxEmailProfilesService\n                      .deleteEmailProfiles(RX_EMAIL_PROFILES.aliasMapping.recordDefinitionName, selectedEmailProfileIds)\n                      .subscribe(() => {\n                        this.rxNotificationService.addSuccessMessage(\n                          this.translateService.instant(\n                            'com.bmc.arsys.rx.client.admin.email-profiles.deleted-email-profile.message'\n                          )\n                        );\n                        this.refreshEmailProfilesGrid();\n                      });\n                  }\n                });\n            }\n          }\n        ]\n      }\n    ];\n\n    this.emailProfilesGridConfig$ = of({\n      enableFiltering: true,\n      columns: gridColumns,\n      getRecordDefinition: () => of(recordDefinition),\n      actionButtons: actionButtons,\n      getData: this.getData,\n      styles: 'flex-fill'\n    });\n  }\n\n  private getData = (queryParams: IRecordGridDataPageParams): Observable<IDataPageResult> => {\n    delete queryParams.searchText;\n    delete queryParams.shouldIncludeTotalSize;\n\n    queryParams.recorddefinition = RX_EMAIL_PROFILES.aliasMapping.recordDefinitionName;\n\n    queryParams.propertySelection.push(\n      `${RX_RECORD_DEFINITION.coreFieldIds.status}`,\n      `${RX_EMAIL_PROFILES.aliasMapping.fieldIds.applicationId}`\n    );\n\n    if (!queryParams.queryExpression) {\n      queryParams.queryExpression = RX_EMAIL_PROFILES.aliasMapping.queryExpression;\n    } else {\n      queryParams.queryExpression += `AND ${RX_EMAIL_PROFILES.aliasMapping.queryExpression}`;\n    }\n\n    return this.rxRecordInstanceDataPageService.post({ params: queryParams }).pipe(\n      switchMap((aliasMappings: IDataPageResult) => {\n        if (aliasMappings.totalSize === 0) {\n          return of(aliasMappings);\n        } else {\n          let expression = '';\n\n          aliasMappings.data.forEach((aliasMapping) => {\n            if (aliasMapping[RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasValue] !== null) {\n              if (!isEmpty(expression)) {\n                expression += ' OR ';\n              }\n\n              expression += `'${RX_RECORD_DEFINITION.coreFieldIds.id}' = \"${\n                aliasMapping[RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasValue]\n              }\"`;\n            }\n          });\n\n          const query = {\n            queryExpression: RX_EMAIL_PROFILES.mailbox.queryExpression,\n            recorddefinition: RX_EMAIL_PROFILES.mailbox.recordDefinitionName\n          };\n\n          if (!isEmpty(expression)) {\n            query.queryExpression += ` AND ((${expression}))`;\n          }\n\n          return this.rxRecordInstanceDataPageService.post({ params: query }).pipe(\n            map((outgoingMailboxes: IDataPageResult) => {\n              if (outgoingMailboxes.totalSize === 0) {\n                return aliasMappings;\n              } else {\n                outgoingMailboxes.data.forEach((outgoingMailbox) => {\n                  aliasMappings.data = transform(\n                    aliasMappings.data,\n                    (result, value) => {\n                      if (\n                        value[RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasValue] ===\n                        outgoingMailbox[RX_RECORD_DEFINITION.coreFieldIds.id]\n                      ) {\n                        value[RX_EMAIL_PROFILES.aliasMapping.fieldIds.description] =\n                          outgoingMailbox[RX_EMAIL_PROFILES.mailbox.fieldIds.mailboxName.id];\n\n                        value[RX_EMAIL_PROFILES.aliasMapping.fieldIds.assignee] =\n                          outgoingMailbox[RX_EMAIL_PROFILES.mailbox.fieldIds.mailboxFunction];\n                      }\n\n                      result.push(value);\n                    },\n                    []\n                  );\n                });\n\n                return aliasMappings;\n              }\n            })\n          );\n        }\n      })\n    );\n  };\n\n  createEmailProfile(profile?: IEmailProfile): void {\n    this.rxModalService\n      .openDockedPanel({\n        title: profile\n          ? this.translateService.instant('com.bmc.arsys.rx.client.admin.email-profiles.update-email-profile.message')\n          : this.translateService.instant('com.bmc.arsys.rx.client.admin.email-profiles.add-new-email-profile.message'),\n        content: CreateEmailProfileComponent,\n        size: 'lg',\n        data: {\n          profile\n        }\n      })\n      .then((emailProfile) => {\n        if (!profile) {\n          this.currentRecordInstance = this.rxRecordInstanceService.getNew(\n            RX_EMAIL_PROFILES.aliasMapping.recordDefinitionName\n          );\n        }\n\n        return this.currentRecordInstance\n          .pipe(\n            map((recordInstance) => {\n              recordInstance.setFieldValue(\n                RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasType.id,\n                this.translateService.instant(RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasType.defaultValue)\n              );\n\n              recordInstance.setFieldValue(RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasName, emailProfile.profileName);\n\n              recordInstance.setFieldValue(\n                RX_EMAIL_PROFILES.aliasMapping.fieldIds.applicationId,\n                get(emailProfile, 'application[0].id', 'None')\n              );\n\n              recordInstance.setFieldValue(\n                RX_EMAIL_PROFILES.aliasMapping.fieldIds.applicationName,\n                get(emailProfile, 'application[0].name', 'None')\n              );\n\n              recordInstance.setFieldValue(\n                RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasValue,\n                emailProfile.mailbox[0][RX_RECORD_DEFINITION.coreFieldIds.id]\n              );\n\n              recordInstance.setFieldValue(RX_EMAIL_PROFILES.aliasMapping.fieldIds.description, 'Email profile');\n\n              recordInstance.setFieldValue(\n                RX_EMAIL_PROFILES.aliasMapping.fieldIds.status,\n                parseInt(emailProfile.mailboxFunction, 10) === RX_EMAIL_PROFILES.mailbox.mailboxFunctions.outgoing.id\n                  ? RX_EMAIL_PROFILES.aliasMapping.status.new\n                  : RX_EMAIL_PROFILES.aliasMapping.status.assigned\n              );\n\n              return recordInstance;\n            }),\n            switchMap((recordInstance) => {\n              if (profile) {\n                return this.rxRecordInstanceService.save(recordInstance);\n              } else {\n                return this.rxRecordInstanceService.create(recordInstance);\n              }\n            })\n          )\n          .subscribe(() => {\n            this.refreshEmailProfilesGrid();\n            this.rxNotificationService.addSuccessMessage(\n              this.translateService.instant('com.bmc.arsys.rx.client.admin.email-profiles.saved-email-profile.message')\n            );\n          });\n      })\n      .catch(noop);\n  }\n\n  private refreshEmailProfilesGrid(): void {\n    this.emailProfilesGrid.api.refresh().subscribe();\n  }\n\n  getMailboxFunctionType(dataItem: IRowDataItem): string {\n    const mailbox = find(\n      RX_EMAIL_PROFILES.mailbox.mailboxFunctions,\n      (mailboxFunction) => mailboxFunction.id === dataItem[RX_EMAIL_PROFILES.aliasMapping.fieldIds.assignee]\n    );\n\n    return mailbox ? this.translateService.instant(mailbox.label) : 'None';\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.admin.email-profiles.header.title' | translate }}\">\n  <div>\n    <button\n      adapt-button\n      type=\"button\"\n      btn-type=\"tertiary\"\n      class=\"d-icon-left-plus_circle\"\n      rx-id=\"new-email-profile-button\"\n      (click)=\"createEmailProfile()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.new.label' | translate }}\n    </button>\n  </div>\n  <rx-record-grid rx-id=\"email-profile-grid\" #emailProfilesGrid [config]=\"emailProfilesGridConfig$\"></rx-record-grid>\n</rx-admin-settings>\n\n<ng-template #mailboxFunctionCellTemplate let-dataItem=\"dataItem\">\n  <div>\n    {{ getMailboxFunctionType(dataItem) }}\n  </div>\n</ng-template>\n"]}