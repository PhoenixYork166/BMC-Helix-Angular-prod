{"version":3,"file":"iframe-security.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/admin/components/iframe-security/iframe-security.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,QAAQ,EAAc,MAAM,MAAM,CAAC;AAE5C,OAAO,EAAE,kBAAkB,EAAE,MAAM,4BAA4B,CAAC;AAChE,OAAO,EAAE,4BAA4B,EAAwB,MAAM,4BAA4B,CAAC;;;AAKhG,MAAM,OAAO,uBAAuB;IAClC,YAAoB,4BAA0D;QAA1D,iCAA4B,GAA5B,4BAA4B,CAA8B;IAAG,CAAC;IAElF,mBAAmB;QACjB,OAAO,QAAQ,CAAC;YACd,kBAAkB,EAAE,IAAI,CAAC,4BAA4B,CAAC,gBAAgB,CACpE,kBAAkB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,WAAW,CAC3D;YACD,eAAe,EAAE,IAAI,CAAC,4BAA4B,CAAC,gBAAgB,CACjE,kBAAkB,CAAC,QAAQ,CAAC,eAAe,CAAC,WAAW,CACxD;SACF,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB,CAClB,gBAAsC,EACtC,mBAAyC;QAEzC,OAAO,QAAQ,CAAC;YACd,IAAI,CAAC,4BAA4B,CAAC,gBAAgB,CAChD,kBAAkB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,WAAW,EAC1D,gBAAgB,CAAC,KAAK,CACvB;YACD,IAAI,CAAC,4BAA4B,CAAC,gBAAgB,CAChD,kBAAkB,CAAC,QAAQ,CAAC,eAAe,CAAC,WAAW,EACvD,mBAAmB,CAAC,KAAK,CAC1B;SACF,CAAC,CAAC;IACL,CAAC;;oHA5BU,uBAAuB;wHAAvB,uBAAuB,cAFtB,MAAM;2FAEP,uBAAuB;kBAHnC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { forkJoin, Observable } from 'rxjs';\nimport { IIframeSecurities } from './iframe-security.types';\nimport { RX_IFRAME_SECURITY } from './iframe-security.constant';\nimport { RxSystemConfigurationService, ISystemConfiguration } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxIframeSecurityService {\n  constructor(private rxSystemConfigurationService: RxSystemConfigurationService) {}\n\n  getIframeSecurities(): Observable<IIframeSecurities> {\n    return forkJoin({\n      iframeAllowedSites: this.rxSystemConfigurationService.getConfiguration(\n        RX_IFRAME_SECURITY.sections.iframeAllowedSites.settingName\n      ),\n      trustedWebsites: this.rxSystemConfigurationService.getConfiguration(\n        RX_IFRAME_SECURITY.sections.trustedWebsites.settingName\n      )\n    });\n  }\n\n  postIframeSecurities(\n    allowedSitesData: ISystemConfiguration,\n    trustedWebsitesData: ISystemConfiguration\n  ): Observable<any[]> {\n    return forkJoin([\n      this.rxSystemConfigurationService.setConfiguration(\n        RX_IFRAME_SECURITY.sections.iframeAllowedSites.settingName,\n        allowedSitesData.value\n      ),\n      this.rxSystemConfigurationService.setConfiguration(\n        RX_IFRAME_SECURITY.sections.trustedWebsites.settingName,\n        trustedWebsitesData.value\n      )\n    ]);\n  }\n}\n"]}