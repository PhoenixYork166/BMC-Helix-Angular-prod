{"version":3,"file":"functional-roles.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/admin/components/functional-roles/functional-roles.component.ts","../../../../../../../libs/platform/admin/components/functional-roles/functional-roles.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IFunctionalRole, RxNotificationService } from '@helix/platform/shared/api';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport {\n  IRecordGridActionButton,\n  IRecordGridColumn,\n  IRecordGridConfig,\n  RecordGridComponent\n} from '@helix/platform/view/components';\nimport { castArray, noop } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { FunctionalRoleEditorComponent } from './functional-role-editor/functional-role-editor.component';\nimport { RxFuntionalRoleService } from './functional-role.service';\nimport { RX_FUNCTIONAL_ROLES } from './functional-roles.constant';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-functional-roles',\n  templateUrl: './functional-roles.component.html'\n})\nexport class FunctionalRolesAdminComponent {\n  gridConfig$: Observable<IRecordGridConfig>;\n\n  @ViewChild('functionalRolesRecordGrid', { static: false })\n  functionalRolesRecordGrid: RecordGridComponent;\n\n  constructor(\n    private rxFuntionalRoleService: RxFuntionalRoleService,\n    private rxNotificationService: RxNotificationService,\n    private rxModalService: RxModalService,\n    private translateService: TranslateService\n  ) {\n    this.gridConfig$ = new Observable((observer) => {\n      observer.next({\n        recordDefinitionName: RX_FUNCTIONAL_ROLES.recordDefinitionName,\n        columns: this.getColumns(),\n        actionButtons: this.getActionButtons(),\n        styles: 'flex-fill'\n      });\n\n      observer.complete();\n    });\n  }\n\n  private getActionButtons(): IRecordGridActionButton[] {\n    return [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n        style: 'tertiary',\n        iconCls: 'trash',\n        actions: [\n          {\n            name: () => {\n              this.rxModalService\n                .confirm({\n                  title: this.translateService.instant('com.bmc.arsys.rx.client.dialog.warning.label'),\n                  modalStyle: RX_MODAL.modalStyles.warning,\n                  message: this.translateService.instant(\n                    'com.bmc.arsys.rx.client.admin.functional-roles.functional-role-delete-confirmation.message'\n                  )\n                })\n                .then((response) => {\n                  if (response) {\n                    const selectedRecords = castArray(this.functionalRolesRecordGrid.api.getSelectedRows());\n\n                    const rolesToDelete = selectedRecords.map((record) => {\n                      return {\n                        applicationName: record[RX_FUNCTIONAL_ROLES.fieldIds.applicationName],\n                        name: record[RX_FUNCTIONAL_ROLES.fieldIds.name]\n                      };\n                    });\n\n                    this.rxFuntionalRoleService.delete(rolesToDelete).subscribe(() => {\n                      this.rxNotificationService.addSuccessMessage(\n                        this.translateService.instant(\n                          'com.bmc.arsys.rx.client.admin.functional-roles.functional-role-deleted.message'\n                        )\n                      );\n                      this.functionalRolesRecordGrid.api.refresh().subscribe();\n                    });\n                  }\n                });\n            }\n          }\n        ]\n      }\n    ];\n  }\n\n  private getColumns(): IRecordGridColumn[] {\n    return [\n      {\n        fieldId: `${RX_FUNCTIONAL_ROLES.fieldIds.name}`,\n        index: 0,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n        clickable: true,\n        actions: [\n          {\n            name: (previousActionResult: any, lastActionRow: IRowDataItem) => this.editFunctionalRole(lastActionRow)\n          }\n        ]\n      },\n      {\n        fieldId: `${RX_FUNCTIONAL_ROLES.fieldIds.applicationName}`,\n        index: 1,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.functional-roles.application-library-name.label'\n        )\n      },\n      {\n        fieldId: `${RX_RECORD_DEFINITION.coreFieldIds.description}`,\n        index: 2,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.chatbots.description.title')\n      },\n      {\n        fieldId: `${RX_RECORD_DEFINITION.coreFieldIds.id}`,\n        index: 3,\n        title: 'ID'\n      }\n    ];\n  }\n\n  private openModal(data: IFunctionalRole): void {\n    this.rxModalService\n      .openModal({\n        content: FunctionalRoleEditorComponent,\n        size: 'default',\n        data: {\n          functionalRole: data\n        }\n      })\n      .then((result) => {\n        if (result) {\n          this.functionalRolesRecordGrid.api.refresh().subscribe();\n        }\n      })\n      .catch(noop);\n  }\n\n  createFunctionalRole(): void {\n    this.openModal({\n      name: '',\n      applicationName: '',\n      description: '',\n      applicationRoles: {}\n    });\n  }\n\n  private editFunctionalRole(functionalRoleRow: IRowDataItem): void {\n    this.rxFuntionalRoleService\n      .get({\n        applicationName: functionalRoleRow[RX_FUNCTIONAL_ROLES.fieldIds.applicationName],\n        name: functionalRoleRow[RX_FUNCTIONAL_ROLES.fieldIds.name]\n      })\n      .subscribe((functionalRole: IFunctionalRole) => {\n        this.openModal(functionalRole);\n      });\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.functional.roles' | translate }}\">\n  <button\n    adapt-button\n    type=\"button\"\n    btn-type=\"tertiary\"\n    class=\"d-icon-plus_circle align-self-start\"\n    rx-id=\"new-button\"\n    (click)=\"createFunctionalRole()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.new.label' | translate }}\n  </button>\n  <rx-record-grid rx-id=\"functional-roles-grid\" #functionalRolesRecordGrid [config]=\"gridConfig$\"> </rx-record-grid>\n</rx-admin-settings>\n"]}