{"version":3,"file":"stepper-with-units-form-control.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/shared/components/form-controls/stepper-with-units-form-control/stepper-with-units-form-control.component.ts","../../../../../../../../libs/platform/shared/components/form-controls/stepper-with-units-form-control/stepper-with-units-form-control.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { IPlainObject } from '@helix/platform/shared/api';\nimport { find, head, isNaN, isNil, isUndefined, map, size } from 'lodash';\nimport { IFormControlComponent } from '@helix/platform/shared/api';\nimport { ValueAccessor } from '../../form-builder/value-accessor';\nimport { IStepperOptions, IStepperWithUnitsFormControlOptions } from './stepper-with-units-form-control.interface';\n\n@Component({\n  selector: 'rx-stepper-with-units-form-control',\n  templateUrl: './stepper-with-units-form-control.component.html',\n  styleUrls: ['./stepper-with-units-form-control.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: StepperWithUnitsFormControlComponent,\n      multi: true\n    }\n  ]\n})\nexport class StepperWithUnitsFormControlComponent extends ValueAccessor<string> implements IFormControlComponent {\n  @Input()\n  options: IStepperWithUnitsFormControlOptions;\n\n  get unit(): RxSelectOption[] {\n    return this.unitValue;\n  }\n\n  set unit(value: RxSelectOption[]) {\n    const unitValueId = head(value).id;\n\n    this.unitValue = value;\n    this.updateStepperConfig(unitValueId);\n\n    this.stepperValue = this.stepperValueByUnitsCache.hasOwnProperty(unitValueId)\n      ? this.stepperValueByUnitsCache[unitValueId]\n      : this.stepperOptions.defaultValue;\n\n    this.value = this.stepperValue ? this.stepperValue + unitValueId : null;\n  }\n\n  get stepper(): number {\n    return this.stepperValue;\n  }\n\n  set stepper(value: number) {\n    this.stepperValue = value;\n    this.stepperValueByUnitsCache[head(this.unit).id] = value;\n\n    this.value = !isNil(value) && !isNaN(value) && this.unitValue.length ? value + head(this.unitValue).id : null;\n  }\n\n  stepperOptions: IStepperOptions = {};\n  maxValue: number;\n  minValue: number;\n\n  private stepperValue: number = null;\n  private unitValue: RxSelectOption[] = [];\n  private stepperValueByUnitsCache: IPlainObject = {};\n\n  writeValue(value: string): void {\n    if (value) {\n      const numberValue = value.match(/^[+-]?\\d+(\\.\\d+)?/);\n\n      this.stepperValue = numberValue ? Number(head(numberValue)) : null;\n\n      if (size(this.options.units)) {\n        const regExpString = map(this.options.units, 'id').join('|');\n        const unitId = head(value.match(new RegExp(regExpString)));\n\n        if (unitId) {\n          this.unitValue = [find(this.options.units, { id: unitId })];\n          this.stepperValueByUnitsCache[unitId] = this.stepperValue;\n          this.updateStepperConfig(unitId);\n        }\n      } else {\n        this.unitValue = [];\n      }\n    } else {\n      if (this.unitValue.length) {\n        this.stepperValue = null;\n      } else {\n        const defaultUnit = find(this.options.units, { id: this.options.defaultUnit }) ?? head(this.options.units);\n\n        this.unitValue = [defaultUnit];\n\n        this.updateStepperConfig(defaultUnit.id);\n\n        this.stepperValue = this.stepperOptions.defaultValue;\n      }\n    }\n  }\n\n  optionFormatter(option: RxSelectOption): string {\n    return option.name;\n  }\n\n  private updateStepperConfig(unitId: string): void {\n    this.stepperOptions = this.options.stepperOptionByUnits ? this.options.stepperOptionByUnits[unitId] : {};\n\n    this.maxValue = isUndefined(this.stepperOptions.maxValue) ? Number.MAX_SAFE_INTEGER : this.stepperOptions.maxValue;\n\n    this.minValue = isUndefined(this.stepperOptions.minValue) ? Number.MIN_SAFE_INTEGER : this.stepperOptions.minValue;\n  }\n}\n","<div class=\"form-group\" [ngClass]=\"{ 'is-required': options.required }\">\n  <label class=\"form-control-label\" *ngIf=\"options.label\">{{ options.label }}</label>\n\n  <div class=\"d-flex flex-row\">\n    <div class=\"control\">\n      <adapt-rx-counter\n        [min]=\"minValue\"\n        [max]=\"maxValue\"\n        [adaptMin]=\"minValue\"\n        [adaptMax]=\"maxValue\"\n        [required]=\"options.required\"\n        [disabled]=\"isDisabled\"\n        [(ngModel)]=\"stepper\"\n        [step]=\"options.step || 1\"\n        adaptIntegerNumber\n      >\n      </adapt-rx-counter>\n    </div>\n\n    <div class=\"control ml-1\">\n      <adapt-rx-select\n        [options]=\"options.units\"\n        [disabled]=\"isDisabled\"\n        [(ngModel)]=\"unit\"\n        [optionFormatter]=\"optionFormatter\"\n      >\n      </adapt-rx-select>\n    </div>\n  </div>\n</div>\n"]}