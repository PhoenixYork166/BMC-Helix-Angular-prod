{"version":3,"file":"runtime-view-canvas.service.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/runtime/components/runtime-view-canvas/component/runtime-view-canvas.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAiB,OAAO,EAAE,MAAM,MAAM,CAAC;;AAI9C,MAAM,OAAO,wBAAwB;IADrC;QAEU,oCAA+B,GAAG,IAAI,OAAO,EAAmC,CAAC;QACzF,8BAAyB,GAAG,IAAI,CAAC,+BAA+B,CAAC,YAAY,EAAE,CAAC;KAKjF;IAHC,8BAA8B,CAAC,uBAAwD;QACrF,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IACrE,CAAC;;qHANU,wBAAwB;yHAAxB,wBAAwB;2FAAxB,wBAAwB;kBADpC,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ReplaySubject, Subject } from 'rxjs';\nimport { ICanvasComponentPropertyChanged } from '../interfaces/canvas-component-property-changed.interface';\n\n@Injectable()\nexport class RuntimeViewCanvasService {\n  private componentPropertyChangedSubject = new Subject<ICanvasComponentPropertyChanged>();\n  componentPropertyChanged$ = this.componentPropertyChangedSubject.asObservable();\n\n  onViewComponentPropertyChanged(componentPropertyChange: ICanvasComponentPropertyChanged): void {\n    this.componentPropertyChangedSubject.next(componentPropertyChange);\n  }\n}\n"]}