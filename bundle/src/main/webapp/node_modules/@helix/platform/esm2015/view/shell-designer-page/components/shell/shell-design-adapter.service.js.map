{"version":3,"file":"shell-design-adapter.service.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/shell-designer-page/components/shell/shell-design-adapter.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAIL,QAAQ,EACR,kBAAkB,EAClB,YAAY,EACb,MAAM,0BAA0B,CAAC;AAClC,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAC;;;AAGtD,MAAM,OAAO,2BAA2B;IAEtC,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAG,CAAC;IAEpD,eAAe,CAAC,mBAAsD;QACpE,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;QACzC,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC;IAC7C,CAAC;IAED,cAAc,CAAC,mBAAsD;QACnE,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QAEnD,MAAM,kBAAkB,GAAG;YACzB,YAAY,EAAE,kBAAkB,CAAC,aAAa,CAAC,sBAAsB;YACrE,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,QAAQ;YAC9B,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,6BAA6B,EAAE,CAAC;YACpE,oBAAoB,EAAE,EAAE;YACxB,gBAAgB,EAAE;gBAChB,aAAa,EAAE,WAAW;aAC3B;SACF,CAAC;QAEF,MAAM,QAAQ,GAAG,mBAAmB,CAAC,oBAAoB,CAAC,IAAI,CAC5D,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAC3D,CAAC;QAEF,IAAI,CAAC,QAAQ,EAAE;YACb,MAAM,MAAM,GAAgB,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;YAEnE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACzD,mBAAmB,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAEpD,mBAAmB,CAAC,oBAAoB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SACnE;IACH,CAAC;IAED,gBAAgB,CAAC,mBAAsD;QACrE,MAAM,MAAM,GAAgB,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QAEnE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,KAAK,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC9E,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YACtE,mBAAmB,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SACrD;IACH,CAAC;;wHA5CU,2BAA2B;4HAA3B,2BAA2B;2FAA3B,2BAA2B;kBADvC,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { IDefinitionAdapter } from '@helix/platform/shared/api';\nimport {\n  IContainerViewComponentDefinition,\n  IViewDefinition,\n  IViewLayout,\n  RX_SHELL,\n  RX_VIEW_DEFINITION,\n  RxViewLayout\n} from '@helix/platform/view/api';\nimport { RxGuidService } from '@helix/platform/utils';\n\n@Injectable()\nexport class RxShellDesignAdapterService\n  implements IDefinitionAdapter<IContainerViewComponentDefinition, IViewDefinition> {\n  constructor(private rxGuidService: RxGuidService) {}\n\n  adaptDefinition(componentDefinition: IContainerViewComponentDefinition): void {\n    this.addAddUserMenu(componentDefinition);\n    this.addActionsOutlet(componentDefinition);\n  }\n\n  addAddUserMenu(componentDefinition: IContainerViewComponentDefinition): void {\n    const userMenuGuid = this.rxGuidService.generate();\n\n    const userMenuDefinition = {\n      resourceType: RX_VIEW_DEFINITION.resourceTypes.containerViewComponent,\n      guid: userMenuGuid,\n      type: RX_SHELL.navBar.userMenu,\n      layout: JSON.stringify(RxViewLayout.getViewLayoutForDefaultOutlet()),\n      componentDefinitions: [],\n      propertiesByName: {\n        menuGroupName: 'User menu'\n      }\n    };\n\n    const userMenu = componentDefinition.componentDefinitions.find(\n      (component) => component.type === RX_SHELL.navBar.userMenu\n    );\n\n    if (!userMenu) {\n      const layout: IViewLayout = JSON.parse(componentDefinition.layout);\n\n      layout.outlets[0].columns[0].children.push(userMenuGuid);\n      componentDefinition.layout = JSON.stringify(layout);\n\n      componentDefinition.componentDefinitions.push(userMenuDefinition);\n    }\n  }\n\n  addActionsOutlet(componentDefinition: IContainerViewComponentDefinition): void {\n    const layout: IViewLayout = JSON.parse(componentDefinition.layout);\n\n    if (!layout.outlets.find((outlet) => outlet.name === RX_SHELL.outlets.actions)) {\n      layout.outlets.push(RxViewLayout.getOutlet(RX_SHELL.outlets.actions));\n      componentDefinition.layout = JSON.stringify(layout);\n    }\n  }\n}\n"]}