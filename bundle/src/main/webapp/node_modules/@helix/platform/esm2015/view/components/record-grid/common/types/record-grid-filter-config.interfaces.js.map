{"version":3,"file":"record-grid-filter-config.interfaces.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/record-grid/common/types/record-grid-filter-config.interfaces.ts"],"names":[],"mappings":"","sourcesContent":["import { AdvancedFilterOptionDataType, SelectedAdvancedFilter } from '@bmc-ux/adapt-angular';\nimport { IRecordGridFilterData, IRecordGridFilterOperator, RecordGridFilterDataLogic } from '@helix/platform/view/api';\nimport { IFieldDefinition, IRecordDefinition } from '@helix/platform/record/api';\nimport { IPlainObject } from '@helix/platform/shared/api';\nimport { IRecordGridFilterTag } from './record-grid-filter.types';\nimport { Observable } from 'rxjs';\nimport { IRecordGridColumnNamedFilterOption } from './record-grid.types';\n\nexport interface IGetTagTextParams<TValue = any> {\n  primaryRecordDefinition: IRecordDefinition;\n  fieldDefinition: IFieldDefinition;\n  value: TValue;\n  tag: IRecordGridFilterTag;\n  fieldId: string;\n  namedFilterOptions?: IRecordGridColumnNamedFilterOption[];\n}\n\nexport interface ITagInfo {\n  text: string;\n  tooltip: string;\n}\n\nexport interface IRecordGridFilterConfig<TValue = any> {\n  filterOptionDataType: AdvancedFilterOptionDataType;\n  getQueryFilter: (\n    selectedFilter: SelectedAdvancedFilter<TValue>,\n    fieldDefinition: IFieldDefinition,\n    fieldId: string,\n    namedFilterOptions?: IRecordGridColumnNamedFilterOption[]\n  ) => string;\n  getRecordGridFilterData: (\n    value: TValue,\n    fieldDefinition: IFieldDefinition,\n    fieldId: string,\n    namedFilterOptions?: IRecordGridColumnNamedFilterOption[]\n  ) => IRecordGridFilterData;\n\n  /**\n   * Convert filter model from:\n   * {\n   *   \"or\": [\n   *     {\n   *       \"eq\": {\n   *         \"1\": \"bar\"\n   *       }\n   *     },\n   *     {\n   *       \"eq\": {\n   *         \"1\": \"foo\"\n   *       }\n   *     }\n   *   ]\n   * }\n   *\n   * to:\n   * {\n   *   filterOptionId: '1',\n   *   value: ['bar', 'foo']\n   * }\n   */\n  getSelectedAdvancedFilterData: (\n    filterLogic: RecordGridFilterDataLogic,\n    filterOperators: IRecordGridFilterOperator[],\n    fieldDefinition: IFieldDefinition,\n    fieldId: string\n  ) => SelectedAdvancedFilter<TValue>;\n  getDataForAdvancedFilter?: (fieldDefinition: IFieldDefinition, fieldId: string) => IPlainObject;\n  getToolbarTagInfo?: (params: IGetTagTextParams<TValue>) => Observable<ITagInfo>;\n}\n\nexport interface IRecordGridFilterConfigs {\n  [resourceType: string]: IRecordGridFilterConfig;\n}\n"]}