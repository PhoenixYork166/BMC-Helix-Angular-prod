{"version":3,"file":"theme.resolver.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/api/application/theme.resolver.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAC3C,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAEnD,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAClC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AACjE,OAAO,EAAE,gBAAgB,EAAE,MAAM,6BAA6B,CAAC;AAC/D,OAAO,EAAE,gBAAgB,EAAE,MAAM,YAAY,CAAC;;;;AAK9C,MAAM,OAAO,eAAe;IAqB1B,YAC4B,QAAa,EAC/B,gBAAkC,EAClC,gBAAkC;QAFhB,aAAQ,GAAR,QAAQ,CAAK;QAC/B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAvBpC,iBAAY,GAAG,IAAI,UAAU,CAAO,CAAC,QAAQ,EAAE,EAAE;YACvD,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAEjD,IAAI,CAAC,GAAG,GAAG,YAAY,CAAC;YACxB,IAAI,CAAC,IAAI,GAAG,6CAA6C,CAAC;YAE1D,IAAI,CAAC,MAAM,GAAG,GAAG,EAAE;gBACjB,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC;gBACxC,QAAQ,CAAC,IAAI,EAAE,CAAC;gBAChB,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACtB,CAAC,CAAC;YAEF,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE;gBAClB,QAAQ,CAAC,IAAI,EAAE,CAAC;gBAChB,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACtB,CAAC,CAAC;YAEF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IAMrB,CAAC;IAEJ,WAAW;QACT,OAAO,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAChG,CAAC;;4GA7BU,eAAe,kBAsBhB,QAAQ;gHAtBP,eAAe,cAFd,MAAM;2FAEP,eAAe;kBAH3B,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;0BAuBI,MAAM;2BAAC,QAAQ","sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { mapTo, shareReplay, switchMapTo } from 'rxjs/operators';\nimport { RxSessionService } from '../security/session.service';\nimport { RxThemingService } from '../theming';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxThemeResolver implements CanActivate {\n  private themeLoaded$ = new Observable<void>((observer) => {\n    const link = this.document.createElement('link');\n\n    link.rel = 'stylesheet';\n    link.href = '/api/rx/application/theme/adapt-css-bs4.css';\n\n    link.onload = () => {\n      this.rxThemingService.setCssVariables();\n      observer.next();\n      observer.complete();\n    };\n\n    link.onerror = () => {\n      observer.next();\n      observer.complete();\n    };\n\n    this.document.head.appendChild(link);\n  }).pipe(shareReplay(1));\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private rxSessionService: RxSessionService,\n    private rxThemingService: RxThemingService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return this.rxSessionService.sessionActive$.pipe(switchMapTo(this.themeLoaded$), mapTo(true));\n  }\n}\n"]}