{"version":3,"file":"component-expression.class.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/runtime/component/component-expression.class.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,QAAQ,EAAE,MAAM,QAAQ,CAAC;AAElC,MAAM,OAAO,mBAAmB;IAC9B,YACS,YAAoB,EACnB,UAAkB,EAClB,4BAA0D,EAC1D,sBAA4C;QAH7C,iBAAY,GAAZ,YAAY,CAAQ;QACnB,eAAU,GAAV,UAAU,CAAQ;QAClB,iCAA4B,GAA5B,4BAA4B,CAA8B;QAC1D,2BAAsB,GAAtB,sBAAsB,CAAsB;IACnD,CAAC;IAEJ,QAAQ,CAAC,iBAAqC;QAC5C,OAAO,IAAI,CAAC,4BAA4B,CAAC,WAAW,CAClD,IAAI,CAAC,UAAU,EACf,iBAAiB,EACjB,IAAI,CAAC,sBAAsB,CAC5B,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,IAAY,EAAE,YAAoB;QAC9C,OAAO,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,IAAI,IAAI,YAAY,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,SAAS;QACP,OAAO,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,SAAS,CAAC,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;IACzE,CAAC;IAED,gBAAgB;QACd,OAAO,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;IAClD,CAAC;IAED,aAAa;QACX,OAAO,CACL,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,oBAAoB,CAAC;YAC/C,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,YAAY,CAAC;YACvC,IAAI,CAAC,mBAAmB,EAAE,CAC3B,CAAC;IACJ,CAAC;IAED,mBAAmB;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,iBAAiB,CAAC,CAAC;IACtD,CAAC;IAED,kBAAkB;QAChB,OAAO,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAC;IACxD,CAAC;CACF","sourcesContent":["import { IExpressionEvaluator, RxExpressionEvaluatorService } from '@helix/platform/view/api';\nimport { IExpressionContext } from '../interfaces/expression-context.interface';\nimport { includes } from 'lodash';\n\nexport class ComponentExpression {\n  constructor(\n    public propertyName: string,\n    private expression: string,\n    private rxExpressionEvaluatorService: RxExpressionEvaluatorService,\n    private customEvaluatorService: IExpressionEvaluator\n  ) {}\n\n  evaluate(expressionContext: IExpressionContext): any {\n    return this.rxExpressionEvaluatorService.tryEvaluate(\n      this.expression,\n      expressionContext,\n      this.customEvaluatorService\n    );\n  }\n\n  hasDependency(guid: string, propertyName: string): boolean {\n    return includes(this.expression, `${guid}.${propertyName}`);\n  }\n\n  hasTokens(): boolean {\n    return includes(this.expression, '${view.') || this.hasKeywordTokens();\n  }\n\n  hasKeywordTokens(): boolean {\n    return includes(this.expression, '${keywords.');\n  }\n\n  hasViewTokens(): boolean {\n    return (\n      includes(this.expression, '${view.inputParams') ||\n      includes(this.expression, '${view.api') ||\n      this.hasViewIsValidToken()\n    );\n  }\n\n  hasViewIsValidToken(): boolean {\n    return includes(this.expression, '${view.isValid}');\n  }\n\n  hasComponentTokens(): boolean {\n    return includes(this.expression, '${view.components');\n  }\n}\n"]}