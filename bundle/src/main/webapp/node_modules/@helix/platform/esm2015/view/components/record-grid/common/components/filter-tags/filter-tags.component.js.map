{"version":3,"file":"filter-tags.component.js","sourceRoot":"","sources":["../../../../../../../../../../libs/platform/view/components/record-grid/common/components/filter-tags/filter-tags.component.ts","../../../../../../../../../../libs/platform/view/components/record-grid/common/components/filter-tags/filter-tags.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAChG,OAAO,EAAE,wBAAwB,EAAE,MAAM,0CAA0C,CAAC;AAEpF,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;;;;;;AAUvD,MAAM,OAAO,mBAAmB;IAgB9B,YAAoB,wBAAkD;QAAlD,6BAAwB,GAAxB,wBAAwB,CAA0B;QALtE,8BAAyB,GAAgB,CAAC,QAAQ,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;QAG5E,cAAS,GAAG,IAAI,YAAY,EAAyB,CAAC;QAGpD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnE,CAAC;IAED,kBAAkB;QAChB,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC;IAC5C,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,iBAAiB,CAAC,GAAyB;QACzC,MAAM,YAAY,GAAG,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QAC3C,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE9B,IAAI,KAAa,CAAC;QAElB,IAAI,MAAM,CAAC,YAAY,CAAC,EAAE;YACxB,KAAK,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC,CAAC;SAC5G;aAAM;YACL,MAAM,cAAc,GAAG,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;YAEhD,KAAK,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,cAAc,CAAC,CAAC;SACrG;QAED,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;YACd,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACvB;QAED,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,oBAAoB,CAAC,KAAa,EAAE,GAAyB;QAC3D,OAAO,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,KAAK,CAAC;IAChH,CAAC;;gHAnDU,mBAAmB;oGAAnB,mBAAmB,+NCbhC,k1CAiCA;2FDpBa,mBAAmB;kBAN/B,SAAS;mBAAC;oBACT,QAAQ,EAAE,gBAAgB;oBAC1B,WAAW,EAAE,8BAA8B;oBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;oBAC3C,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;+GAGC,IAAI;sBADH,KAAK;gBAIN,UAAU;sBADT,KAAK;gBAIN,SAAS;sBADR,KAAK;gBAIN,yBAAyB;sBADxB,KAAK;gBAIN,SAAS;sBADR,MAAM","sourcesContent":["import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { RxRecordGridUtilsService } from '../../services/record-grid-utils.service';\nimport { IRecordGridFilterTag } from '../../types/record-grid-filter.types';\nimport { clone, findIndex, get, isNull } from 'lodash';\nimport { IRemoveFilterTagEvent } from './filter-tags.types';\nimport { Placement } from '@bmc-ux/adapt-angular';\n\n@Component({\n  selector: 'rx-filter-tags',\n  templateUrl: './filter-tags.component.html',\n  styleUrls: ['./filter-tags.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilterTagsComponent {\n  @Input()\n  tags: IRecordGridFilterTag[];\n\n  @Input()\n  isDisabled: boolean;\n\n  @Input()\n  tagsLimit: number;\n\n  @Input()\n  restTagsDropdownPlacement: Placement[] = ['bottom', 'bottom-right', 'auto'];\n\n  @Output()\n  removeTag = new EventEmitter<IRemoveFilterTagEvent>();\n\n  constructor(private rxRecordGridUtilsService: RxRecordGridUtilsService) {\n    this.trackByForFilterTags = this.trackByForFilterTags.bind(this);\n  }\n\n  getTranslateParams(): { count: number } {\n    return { count: this.getRestTagsCount() };\n  }\n\n  getRestTagsCount(): number {\n    return this.tagsLimit && this.tags ? this.tags.length - this.tagsLimit : 0;\n  }\n\n  onRemoveFilterTag(tag: IRecordGridFilterTag): void {\n    const filterOption = tag.data.filterOption;\n    const tags = clone(this.tags);\n\n    let index: number;\n\n    if (isNull(filterOption)) {\n      index = findIndex(tags, (toolbarTag) => this.rxRecordGridUtilsService.isSharedFilterPresetTag(toolbarTag));\n    } else {\n      const filterOptionId = tag.data.filterOption.id;\n\n      index = findIndex(tags, (toolbarTag) => get(toolbarTag.data.filterOption, 'id') === filterOptionId);\n    }\n\n    if (index > -1) {\n      tags.splice(index, 1);\n    }\n\n    this.removeTag.emit({ removedTag: tag, newTags: tags });\n  }\n\n  trackByForFilterTags(index: number, tag: IRecordGridFilterTag): number | string {\n    return this.rxRecordGridUtilsService.isSharedFilterPresetTag(tag) ? index : tag.data.filterOption.id || index;\n  }\n}\n","<div>\n  <adapt-tag\n    class=\"mr-1\"\n    [removable]=\"!isDisabled\"\n    [disabled]=\"isDisabled\"\n    *ngFor=\"\n      let tag of tags | slice: 0:(tagsLimit ? tagsLimit : tags?.length);\n      let index = index;\n      trackBy: trackByForFilterTags\n    \"\n    type=\"active\"\n    (remove)=\"onRemoveFilterTag(tag)\"\n  >\n    <span class=\"filter-tags__tag-text\" [title]=\"tag.data.value?.title ?? tag.text\">{{ tag.text }}</span>\n  </adapt-tag>\n\n  <span adaptDropdown *ngIf=\"getRestTagsCount() > 0\" [appendToBody]=\"true\" [placement]=\"restTagsDropdownPlacement\">\n    <button adaptDropdownToggle type=\"button\" class=\"filter-tags__dropdown-toggle btn btn-link p-0 ml-1\">\n      {{\n        'com.bmc.arsys.rx.client.view-components.record-grid.filters.show-more-filters.label'\n          | translate: getTranslateParams()\n      }}\n    </button>\n\n    <div adaptDropdownMenu class=\"dropdown-menu filter-tags__dropdown-menu p-2\">\n      <div *ngFor=\"let tag of tags | slice: -getRestTagsCount(); let index = index; trackBy: trackByForFilterTags\">\n        <adapt-tag type=\"active\" [removable]=\"!isDisabled\" (remove)=\"onRemoveFilterTag(tag)\">\n          <span class=\"filter-tags__tag-text\" [title]=\"tag.data.value?.title ?? tag.text\">{{ tag.text }}</span>\n        </adapt-tag>\n      </div>\n    </div>\n  </span>\n</div>\n"]}