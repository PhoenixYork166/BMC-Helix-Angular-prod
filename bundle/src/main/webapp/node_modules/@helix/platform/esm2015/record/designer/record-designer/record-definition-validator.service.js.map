{"version":3,"file":"record-definition-validator.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/record/designer/record-designer/record-definition-validator.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { RX_RECORD_DEFINITION, RxFieldDefinitionService } from '@helix/platform/record/api';\nimport { IValidationIssue, IValidationIssueSection, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { chain, find, forEach, includes, isEmpty, reverse, some, trim } from 'lodash';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../record-designer.types';\nimport { RX_RECORD_DESIGNER } from '../record-designer/record-designer.constant';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RxFieldDefinitionManagerService } from './services/field-definition-manager.service';\nimport { RxDefinitionNameService } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRecordDefinitionValidatorService {\n  constructor(\n    private rxFieldDefinitionService: RxFieldDefinitionService,\n    private translateService: TranslateService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxFieldDefinitionManagerService: RxFieldDefinitionManagerService\n  ) {}\n\n  validate(definitionModel: IRecordDefinitionModel): IValidationIssueSection[] {\n    const duplicateFieldErrorMsg = this.translateService.instant(\n      'com.bmc.arsys.rx.client.designer.validation.must-be-unique.message',\n      { propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label') }\n    );\n\n    const definitionValidationIssues: IValidationIssue[] = [];\n    const fieldValidationIssueSections: IValidationIssueSection[] = [];\n\n    chain(definitionModel.fields)\n      .clone()\n      .reverse()\n      .forEach((fieldModel: IRecordFieldDefinitionModel, index: number, fieldModels: IRecordFieldDefinitionModel[]) => {\n        let issues: IValidationIssue[] = [];\n\n        if (find(fieldModels, (model) => fieldModel.name === model.name, index + 1)) {\n          issues.push({\n            type: ValidationIssueType.Error,\n            description: duplicateFieldErrorMsg,\n            data: {\n              propertyName: 'name',\n              guid: fieldModel.guid\n            }\n          });\n        }\n\n        if (fieldModel.id && find(fieldModels, (model) => fieldModel.id === model.id, index + 1)) {\n          issues.push({\n            type: ValidationIssueType.Error,\n            description: this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.validation.duplicate-field-id-error.message'\n            ),\n            data: {\n              propertyName: 'id',\n              guid: fieldModel.guid\n            }\n          });\n        }\n\n        if (\n          definitionModel.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType &&\n          !fieldModel.lastUpdateTime &&\n          !includes(RX_RECORD_DEFINITION.coreFieldIds, fieldModel.id) &&\n          includes(RX_RECORD_DEFINITION.AR_CORE_FIELD_IDS, fieldModel.id)\n        ) {\n          issues.push({\n            type: ValidationIssueType.Error,\n            description: this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.validation.invalid-field-id.message',\n              { fieldId: fieldModel.id }\n            ),\n            data: {\n              editFieldGroups: true,\n              guid: fieldModel.guid\n            }\n          });\n        }\n\n        issues = issues.concat(this.rxFieldDefinitionManagerService.validate(fieldModel, definitionModel));\n\n        if (issues.length) {\n          fieldValidationIssueSections.push({\n            title: fieldModel.name,\n            issues: issues\n          });\n        }\n      })\n      .value();\n\n    if (isEmpty(trim(definitionModel.name))) {\n      definitionValidationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.definition-properties.record-name.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'name'\n        }\n      });\n    }\n\n    if (!RX_RECORD_DEFINITION.validDefinitionNameRegex.test(definitionModel.name)) {\n      definitionValidationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message',\n          { propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.record-definition.label') }\n        ),\n        data: {\n          propertyName: 'name'\n        }\n      });\n    }\n\n    if (definitionModel?.isAuditingEnabled) {\n      const auditRecordDefinitionName = this.rxDefinitionNameService.getDisplayName(\n        definitionModel.auditRecordDefinitionName\n      );\n\n      if (isEmpty(trim(auditRecordDefinitionName))) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.validation.invalid-audit-definition-name.message'\n          ),\n          data: {\n            propertyName: 'auditRecordDefinitionName'\n          }\n        });\n      }\n\n      if (!RX_RECORD_DEFINITION.validDefinitionNameRegex.test(auditRecordDefinitionName)) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message',\n            {\n              propertyName: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.definition-properties.audit-record-definition-name.label'\n              )\n            }\n          ),\n          data: {\n            propertyName: 'auditRecordDefinitionName'\n          }\n        });\n      }\n    }\n\n    if (\n      definitionModel.isArchivingEnabled &&\n      definitionModel.archiveType === RX_RECORD_DESIGNER.archiving.types.archiveAndDeleteSourceRecord.id\n    ) {\n      const archiveRecordDefinitionName = this.rxDefinitionNameService.getDisplayName(\n        definitionModel.archiveRecordDefinitionName\n      );\n\n      if (isEmpty(trim(archiveRecordDefinitionName))) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.validation.invalid-archive-definition-name.message'\n          ),\n          data: {\n            propertyName: 'archiveRecordDefinitionName'\n          }\n        });\n      }\n\n      if (!RX_RECORD_DEFINITION.validDefinitionNameRegex.test(archiveRecordDefinitionName)) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message',\n            {\n              propertyName: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.definition-properties.archive-record-definition-name.label'\n              )\n            }\n          ),\n          data: {\n            propertyName: 'archiveRecordDefinitionName'\n          }\n        });\n      }\n    }\n\n    if (definitionModel.weightedRelevancyFields) {\n      const searchTitleField = find(definitionModel.fields, { id: definitionModel.weightedRelevancyFields?.TITLE });\n\n      if (searchTitleField && !searchTitleField.searchDefinition) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.validation.invalid-text-search-enabled-field.message'\n          ),\n          data: {\n            propertyName: 'searchTitleField'\n          }\n        });\n      }\n    }\n\n    forEach(definitionModel.indexDefinitions, (indexDefinitionModel, index) => {\n      if (!indexDefinitionModel.indexFieldIds.length) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.indexes.no-field-selected.message',\n            {\n              indexName:\n                indexDefinitionModel.indexName ||\n                this.translateService.instant('com.bmc.arsys.rx.client.record-designer.indexes.new-index.label')\n            }\n          ),\n          data: {\n            indexToEditIndex: index,\n            propertyName: 'indexDefinitions'\n          }\n        });\n      }\n    });\n\n    let issues: IValidationIssueSection[] = [];\n\n    if (definitionValidationIssues.length) {\n      issues.push({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.record-definition.label'),\n        issues: definitionValidationIssues\n      });\n    }\n\n    issues = issues.concat(reverse(fieldValidationIssueSections));\n\n    return issues;\n  }\n}\n"]}