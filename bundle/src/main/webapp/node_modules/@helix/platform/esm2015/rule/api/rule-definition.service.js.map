{"version":3,"file":"rule-definition.service.js","sourceRoot":"","sources":["../../../../../../libs/platform/rule/api/rule-definition.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAElD,OAAO,EAAY,uBAAuB,EAAE,MAAM,4BAA4B,CAAC;AAC/E,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAC;;;;;AAGtD,MAAM,CAAC,MAAM,2BAA2B,GAAG,uEAAuE,CAAC;AACnH,MAAM,CAAC,MAAM,mCAAmC,GAC9C,uEAAuE,CAAC;AAK1E,MAAM,OAAO,uBAAuB;IAIlC,YACU,UAAsB,EACtB,aAA4B,EAC5B,uBAAgD;QAFhD,eAAU,GAAV,UAAU,CAAY;QACtB,kBAAa,GAAb,aAAa,CAAe;QAC5B,4BAAuB,GAAvB,uBAAuB,CAAyB;QAExD,IAAI,CAAC,aAAa,GAAG,uBAAuB,CAAC,eAAe,CAAC,2BAA2B,CAAC,CAAC;QAC1F,IAAI,CAAC,0BAA0B,GAAG,uBAAuB,CAAC,eAAe,CAAC,mCAAmC,CAAC,CAAC;IACjH,CAAC;IAED,GAAG,CAAC,kBAA0B;QAC5B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAkB,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAC/E,CAAC;IAED,MAAM,CAAC,qBAA6B,EAAE,qBAA6B;QACjE,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;YAChC,IAAI,EAAE,qBAAqB;YAC3B,OAAO,EAAE,qBAAqB;SAC/B,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB,CAAC,kBAA0B;QAC5C,OAAO,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,EAAE,kBAAkB,EAAE,CAAC,CAAC;IACzE,CAAC;IAED,MAAM,CAAC,cAA+B;QACpC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,cAAc,CAAC,CAAC;IAC/E,CAAC;IAEO,MAAM,CAAC,kBAA0B;QACvC,OAAO,2CAA2C,kBAAkB,CAAC,kBAAkB,CAAC,EAAE,CAAC;IAC7F,CAAC;;oHAlCU,uBAAuB;wHAAvB,uBAAuB,cAFtB,MAAM;2FAEP,uBAAuB;kBAHnC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ICommand, RxCommandFactoryService } from '@helix/platform/shared/api';\r\nimport { RxGuidService } from '@helix/platform/utils';\r\nimport { IRuleDefinition } from './rule-definition.types';\r\n\r\nexport const renameRuleDefinitionCommand = 'com.bmc.arsys.rx.application.rule.command.RenameRuleDefinitionCommand';\r\nexport const revertRuleCustomizationResourceType =\r\n  'com.bmc.arsys.rx.application.rule.command.RevertRuleDefinitionCommand';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RxRuleDefinitionService {\r\n  private renameCommand: ICommand;\r\n  private revertCustomizationCommand: ICommand;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private rxGuidService: RxGuidService,\r\n    private rxCommandFactoryService: RxCommandFactoryService\r\n  ) {\r\n    this.renameCommand = rxCommandFactoryService.forResourceType(renameRuleDefinitionCommand);\r\n    this.revertCustomizationCommand = rxCommandFactoryService.forResourceType(revertRuleCustomizationResourceType);\r\n  }\r\n\r\n  get(ruleDefinitionName: string): Observable<IRuleDefinition> {\r\n    return this.httpClient.get<IRuleDefinition>(this.getUrl(ruleDefinitionName));\r\n  }\r\n\r\n  rename(oldRuleDefinitionName: string, newRuleDefinitionName: string): Observable<any> {\r\n    return this.renameCommand.execute({\r\n      name: oldRuleDefinitionName,\r\n      newName: newRuleDefinitionName\r\n    });\r\n  }\r\n\r\n  revertCustomization(ruleDefinitionName: string): Observable<any> {\r\n    return this.revertCustomizationCommand.execute({ ruleDefinitionName });\r\n  }\r\n\r\n  update(ruleDefinition: IRuleDefinition): Observable<any> {\r\n    return this.httpClient.put(this.getUrl(ruleDefinition.name), ruleDefinition);\r\n  }\r\n\r\n  private getUrl(ruleDefinitionName: string): string {\r\n    return `/api/rx/application/rule/ruledefinition/${encodeURIComponent(ruleDefinitionName)}`;\r\n  }\r\n}\r\n"]}