{"version":3,"file":"error-handler.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/api/error-handling/error-handler.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AACzD,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AACzD,OAAO,EAAE,oBAAoB,EAAE,MAAM,gCAAgC,CAAC;AACtE,OAAO,EAAE,2BAA2B,EAAE,MAAM,gCAAgC,CAAC;AAC7E,OAAO,EAAE,YAAY,EAAE,MAAM,wBAAwB,CAAC;AACtD,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;;;;;AAGhD,MAAM,OAAO,qBAAsB,SAAQ,YAAY;IACrD,YACU,oBAAiD,EACjD,oBAA0C,EAC1C,YAA0B;QAElC,KAAK,EAAE,CAAC;QAJA,yBAAoB,GAApB,oBAAoB,CAA6B;QACjD,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,iBAAY,GAAZ,YAAY,CAAc;IAGpC,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,IAAI,KAAK,YAAY,iBAAiB,EAAE;YACtC,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACxC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SAC1B;aAAM,IAAI,KAAK,YAAY,KAAK,IAAI,CAAC,CAAC,KAAK,YAAY,OAAO,CAAC,EAAE;YAChE,6CAA6C;YAC7C,sDAAsD;YACtD,qDAAqD;YACrD,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACxC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SAC1B;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACxC;IACH,CAAC;;kHAtBU,qBAAqB;sHAArB,qBAAqB;2FAArB,qBAAqB;kBADjC,UAAU","sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler, Injectable } from '@angular/core';\nimport { RxScriptErrorHandler } from './script-error-handler.service';\nimport { RxServerErrorHandlerService } from './server-error-handler.service';\nimport { RxLogService } from '../logging/log.service';\nimport { RxError } from '@helix/platform/utils';\n\n@Injectable()\nexport class RxErrorHandlerService extends ErrorHandler {\n  constructor(\n    private rxServerErrorHandler: RxServerErrorHandlerService,\n    private rxScriptErrorHandler: RxScriptErrorHandler,\n    private rxLogService: RxLogService\n  ) {\n    super();\n  }\n\n  handleError(error: Error): void {\n    if (error instanceof HttpErrorResponse) {\n      this.rxServerErrorHandler.handle(error);\n      super.handleError(error);\n    } else if (error instanceof Error && !(error instanceof RxError)) {\n      // Script error is considered when \"error\" is\n      // an instance of Error but not an instance of RxError\n      // (RxError's must only be logged in the debug mode).\n      this.rxScriptErrorHandler.handle(error);\n      super.handleError(error);\n    } else {\n      this.rxLogService.debug(error.message);\n    }\n  }\n}\n"]}