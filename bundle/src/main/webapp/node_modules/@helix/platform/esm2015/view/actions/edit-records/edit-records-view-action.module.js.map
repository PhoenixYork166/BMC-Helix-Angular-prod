{"version":3,"file":"edit-records-view-action.module.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/actions/edit-records/edit-records-view-action.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACzC,OAAO,EAAE,2BAA2B,EAAE,yBAAyB,EAAE,MAAM,0BAA0B,CAAC;AAClG,OAAO,EAAE,8BAA8B,EAAE,MAAM,6CAA6C,CAAC;AAC7F,OAAO,EAAE,oBAAoB,EAAE,MAAM,uCAAuC,CAAC;AAC7E,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,eAAe,EAAE,qBAAqB,EAAE,MAAM,uBAAuB,CAAC;AAC/E,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AACtD,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,cAAc,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AACrE,OAAO,EACL,8BAA8B,EAC9B,2BAA2B,EAC3B,sBAAsB,EACvB,MAAM,mCAAmC,CAAC;;;;AAO3C,MAAM,OAAO,2BAA2B;IACtC,YACU,2BAAwD,EACxD,0BAA0D;QAD1D,gCAA2B,GAA3B,2BAA2B,CAA6B;QACxD,+BAA0B,GAA1B,0BAA0B,CAAgC;QAElE,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC;YACxC,IAAI,EAAE,qBAAqB;YAC3B,KAAK,EAAE,cAAc;YACrB,QAAQ,EAAE,cAAc,CAAC,gBAAgB;YACzC,OAAO,EAAE,IAAI,CAAC,0BAA0B;YACxC,UAAU,EAAE;gBACV;oBACE,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,SAAS;oBAChB,UAAU,EAAE,IAAI;oBAChB,OAAO,EAAE,IAAI,OAAO,CAClB;;;4HAGgH,CACjH;oBACD,0BAA0B,EAAE,IAAI;oBAChC,MAAM,EAAE,8BAA8B;iBACvC;gBACD;oBACE,IAAI,EAAE,sBAAsB;oBAC5B,KAAK,EAAE,mBAAmB;oBAC1B,IAAI,EAAE,yBAAyB,CAAC,MAAM;oBACtC,MAAM,EAAE,2BAA2B;oBACnC,aAAa,EAAE;wBACb,cAAc,EAAE,sBAAsB,CAAC,kBAAkB;qBAC1D;oBACD,YAAY,EAAE,IAAI;iBACnB;aACF;SACF,CAAC,CAAC;IACL,CAAC;;wHApCU,2BAA2B;yHAA3B,2BAA2B,iBAHvB,oBAAoB,aADzB,YAAY,EAAE,eAAe,EAAE,eAAe,EAAE,WAAW,EAAE,qBAAqB;yHAIjF,2BAA2B,YAJ7B,CAAC,YAAY,EAAE,eAAe,EAAE,eAAe,EAAE,WAAW,EAAE,qBAAqB,CAAC;2FAIlF,2BAA2B;kBALvC,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,eAAe,EAAE,eAAe,EAAE,WAAW,EAAE,qBAAqB,CAAC;oBAC7F,YAAY,EAAE,CAAC,oBAAoB,CAAC;oBACpC,eAAe,EAAE,CAAC,oBAAoB,CAAC;iBACxC","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RxViewActionRegistryService, ViewComponentPropertyType } from '@helix/platform/view/api';\nimport { RxEditRecordsViewActionService } from './services/edit-records-view-action.service';\nimport { ResultModalComponent } from './result-modal/result-modal.component';\nimport { CommonModule } from '@angular/common';\nimport { AdaptIconModule, AdaptRxTextareaModule } from '@bmc-ux/adapt-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule } from '@angular/forms';\nimport { RX_APPLICATION, Tooltip } from '@helix/platform/shared/api';\nimport {\n  ExpressionFormControlComponent,\n  RxDefinitionPickerComponent,\n  RxDefinitionPickerType\n} from '@helix/platform/shared/components';\n\n@NgModule({\n  imports: [CommonModule, AdaptIconModule, TranslateModule, FormsModule, AdaptRxTextareaModule],\n  declarations: [ResultModalComponent],\n  entryComponents: [ResultModalComponent]\n})\nexport class EditRecordsViewActionModule {\n  constructor(\n    private rxViewActionRegistryService: RxViewActionRegistryService,\n    private rxEditRecordsActionService: RxEditRecordsViewActionService\n  ) {\n    this.rxViewActionRegistryService.register({\n      name: 'rxEditRecordsAction',\n      label: 'Edit records',\n      bundleId: RX_APPLICATION.platformBundleId,\n      service: this.rxEditRecordsActionService,\n      parameters: [\n        {\n          name: 'records',\n          label: 'Records',\n          isRequired: true,\n          tooltip: new Tooltip(\n            `Build an expression that evaluates to one of the following:<br>\n            1) Record Grid;<br>\n            2) A collection of Record Instances, or<br>\n            3) A collection of Record Instance IDs. <br>For options 2 and 3, select a Record Definition in the field below.`\n          ),\n          enableExpressionEvaluation: true,\n          editor: ExpressionFormControlComponent\n        },\n        {\n          name: 'recordDefinitionName',\n          label: 'Record definition',\n          type: ViewComponentPropertyType.String,\n          editor: RxDefinitionPickerComponent,\n          editorOptions: {\n            definitionType: RxDefinitionPickerType.StandardDataRecord\n          },\n          defaultValue: null\n        }\n      ]\n    });\n  }\n}\n"]}