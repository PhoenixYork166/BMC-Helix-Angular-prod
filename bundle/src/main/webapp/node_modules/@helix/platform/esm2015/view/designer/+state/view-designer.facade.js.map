{"version":3,"file":"view-designer.facade.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/designer/+state/view-designer.facade.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { IDataDictionaryBranch, IPlainObject, RxOverlayService } from '@helix/platform/shared/api';\nimport { RxGuidService } from '@helix/platform/utils';\nimport {\n  IViewActionOutputDataDictionary,\n  IViewDefinitionPermission,\n  IViewLayout,\n  RxViewLayout\n} from '@helix/platform/view/api';\nimport { Actions, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { compact, filter as _filter, flatten, isFinite } from 'lodash';\nimport { combineLatest, EMPTY, merge, Observable, of, Subject } from 'rxjs';\nimport {\n  bufferToggle,\n  distinctUntilChanged,\n  filter,\n  map,\n  shareReplay,\n  switchMap,\n  switchMapTo,\n  take,\n  takeUntil,\n  withLatestFrom\n} from 'rxjs/operators';\nimport { IViewComponentDropData } from '../components/view-designer-canvas';\nimport { getChildGuidsFromModel } from '../core/layout-helpers';\nimport { RxViewDataDictionaryBuilderService } from '../core/view-data-dictionary-builder.service';\nimport { RxViewDataDictionaryStoreService } from '../core/view-data-dictionary-store.service';\nimport { RxViewDesignerInspectorService } from '../core/view-designer-inspector.service';\nimport { IViewComponentDesignModel } from '../interfaces/view-component-design-model.interface';\nimport { IViewComponentDesignModels } from '../interfaces/view-component-design-models.interface';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport {\n  IViewComponentDesignData,\n  IViewComponentDesignSetPayload,\n  IViewComponentDesignValidationIssue,\n  IViewDesignerInspectorConfig\n} from '../public-interfaces';\nimport { IViewComponentDesignSettablePropertiesDataDictionary } from '../public-interfaces/view-component-design-settable-properties-data-dictionary.interfaces';\nimport * as ViewComponentsActions from './view-component.actions';\nimport { ISetSettablePropertiesDataDictionaryItem } from './view-component.types';\nimport { ViewDesignerDispatcher } from './view-designer-dispatcher.service';\nimport * as ViewDesignerActions from './view-designer.actions';\nimport {\n  areViewModelsReadySelector,\n  breadcrumbsSelector,\n  bundleFriendlyNameSelector,\n  childDataComponentGuidsSelector,\n  componentLayoutSelector,\n  componentPermissionsSelector,\n  componentPropertiesByNameSelector,\n  componentTypeSelector,\n  currentBundleIdSelector,\n  firstViewComponentModelTypeSelector,\n  isViewDefinitionLoadingSelector,\n  parentComponentModelGuidSelector,\n  selectedComponentGuidSelector,\n  selectedInspectorTabIdSelector,\n  validationIssuesSelector,\n  viewComponentModelSelector,\n  viewComponentModelsSelector,\n  viewDefinitionSelector,\n  viewDesignerModelsSelector,\n  viewModelPropertyValueSelector,\n  viewModelSelector\n} from './view-designer.selectors';\nimport { IInitViewDesignerActionPayload } from './view-designer.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewDesignerFacade {\n  viewDefinition$ = this.store$.select(viewDefinitionSelector);\n  validationIssues$ = this.store$.select(validationIssuesSelector);\n  breadcrumbs$ = this.store$.select(breadcrumbsSelector);\n  viewDesignerModelState$ = this.store$.select(viewDesignerModelsSelector);\n  // filter operator is used to ignore the empty model when:\n  // - the view definition has not been loaded for the first time, or\n  // - the view definition is being saved.\n  viewModel$ = this.store$.select(viewModelSelector).pipe(filter<IViewDesignModel>(Boolean));\n  viewModelGuid$ = this.getViewPropertyValue('guid');\n  viewComponentModels$: Observable<IViewComponentDesignModels> = this.store$.select(viewComponentModelsSelector);\n  firstViewComponentModelType$: Observable<string> = this.store$.select(firstViewComponentModelTypeSelector);\n  isExtensionView$ = this.getViewPropertyValue('targetViewDefinitionName').pipe(map(Boolean), shareReplay(1));\n\n  isExtensionContainerSet$ = this.getViewPropertyValue('targetExtensionContainerGuid').pipe(\n    map(Boolean),\n    shareReplay(1)\n  );\n\n  allComponentGuids$ = this.viewComponentModels$.pipe(\n    map((models) => new Set(Object.keys(models))),\n    shareReplay({\n      refCount: true,\n      bufferSize: 1\n    })\n  );\n\n  selectedComponentGuid$: Observable<string> = this.store$.select(selectedComponentGuidSelector).pipe(\n    switchMap((componentGuid) =>\n      this.viewModelGuid$.pipe(\n        map((viewGuid) => (componentGuid === viewGuid ? null : componentGuid)),\n        take(1)\n      )\n    )\n  );\n\n  selectedComponentProperties$: Observable<IViewComponentDesignModel['propertiesByName']> =\n    this.selectedComponentGuid$.pipe(switchMap((guid) => (guid ? this.getComponentProperties(guid) : of(null))));\n\n  isViewDefinitionLoading$: Observable<boolean> = this.store$.select(isViewDefinitionLoadingSelector);\n  selectedInspectorTabId$: Observable<number> = this.store$.select(selectedInspectorTabIdSelector);\n  bundleFriendlyName$: Observable<string> = this.store$.select(bundleFriendlyNameSelector);\n  currentBundleId$: Observable<string> = this.store$.select(currentBundleIdSelector);\n\n  viewInspectorLayout$: Observable<IViewDesignerInspectorConfig['inspectorSectionConfigs']> = merge(\n    this.viewModelGuid$,\n    this.rxViewDesignerInspectorService.onChange$.pipe(\n      withLatestFrom(this.viewModelGuid$),\n      filter(([config, guid]) => config.guid === guid),\n      map(([config, guid]) => guid)\n    )\n  ).pipe(\n    map((guid) => {\n      const inspectorConfig = this.rxViewDesignerInspectorService.get(guid);\n\n      return inspectorConfig ? inspectorConfig.inspectorSectionConfigs : null;\n    })\n  );\n\n  selectedComponentInspectorLayout$: Observable<IViewDesignerInspectorConfig['inspectorSectionConfigs']> = merge(\n    this.selectedComponentGuid$.pipe(distinctUntilChanged()),\n    this.rxViewDesignerInspectorService.onChange$.pipe(\n      withLatestFrom(this.selectedComponentGuid$),\n      filter(([config, guid]) => config.guid === guid),\n      map(([config, guid]) => guid)\n    )\n  ).pipe(\n    map((guid) => {\n      const inspectorConfig = this.rxViewDesignerInspectorService.get(guid);\n\n      return inspectorConfig ? inspectorConfig.inspectorSectionConfigs : null;\n    })\n  );\n\n  isViewReadOnly$: Observable<boolean> = combineLatest([\n    this.viewModel$,\n    this.currentBundleId$.pipe(\n      switchMap((bundleId: string) => this.rxOverlayService.areNewDefinitionsAllowed(bundleId))\n    )\n  ]).pipe(\n    map(\n      ([viewModel, areNewDefinitionsAllowed]) =>\n        !areNewDefinitionsAllowed || !this.rxOverlayService.isCustomizationEnabled('allowOverlay', viewModel)\n    ),\n    distinctUntilChanged(),\n    shareReplay(1)\n  );\n\n  // Actions Stream\n  viewDefinitionLoadError$ = this.actions$.pipe(ofType(ViewDesignerActions.viewDefinitionLoadError));\n\n  viewDefinitionSaveSuccess$ = this.actions$.pipe(ofType(ViewDesignerActions.viewDefinitionSaveSuccess));\n\n  initViewDesigner$ = this.actions$.pipe(ofType(ViewDesignerActions.initViewDesigner));\n  private destroyViewDesignerSubject = new Subject();\n  destroyViewDesigner$ = this.destroyViewDesignerSubject.asObservable();\n  viewModelsInitialized$ = this.actions$.pipe(ofType(ViewDesignerActions.viewModelsInitialized));\n  areViewModelsReady$ = this.store$.select(areViewModelsReadySelector);\n  viewCommonDataDictionaryState$ = this.rxViewDataDictionaryService.viewCommon$;\n  componentsCommonDataDictionaryState$ = this.rxViewDataDictionaryService.componentsCommon$;\n  actionsDataDictionaryState$ = this.rxViewDataDictionaryService.actionsOutput$;\n  settablePropertiesDataDictionaryState$ = this.rxViewDataDictionaryService.settableProperties$;\n\n  private settablePropertiesDataDictionarySubject = new Subject<ISetSettablePropertiesDataDictionaryItem>();\n\n  constructor(\n    private dispatcher: ViewDesignerDispatcher,\n    private store$: Store<any>,\n    private actions$: Actions,\n    private rxViewDesignerInspectorService: RxViewDesignerInspectorService,\n    private rxGuidService: RxGuidService,\n    private rxViewDataDictionaryBuilderService: RxViewDataDictionaryBuilderService,\n    private rxViewDataDictionaryService: RxViewDataDictionaryStoreService,\n    private rxOverlayService: RxOverlayService\n  ) {\n    // for performance reasons grouping actions before sending them to store\n    merge(\n      this.settablePropertiesDataDictionarySubject.pipe(\n        bufferToggle(this.initViewDesigner$, (v) => this.viewModelsInitialized$)\n      ),\n      this.viewModelsInitialized$.pipe(\n        switchMap(() =>\n          this.settablePropertiesDataDictionarySubject.pipe(\n            map((data) => [data]),\n            takeUntil(this.initViewDesigner$)\n          )\n        )\n      )\n    ).subscribe((items) => {\n      this.rxViewDataDictionaryService.setSettablePropertiesDataDictionary(items);\n    });\n  }\n\n  getComponentModel<TPropertiesByName>(guid: string): Observable<IViewComponentDesignModel<TPropertiesByName>> {\n    return this.store$.select(viewComponentModelSelector, { guid });\n  }\n\n  initViewDesigner(payload: IInitViewDesignerActionPayload): void {\n    this.dispatcher.dispatch(\n      ViewDesignerActions.initViewDesigner({\n        payload\n      })\n    );\n  }\n\n  destroyViewDesigner(): void {\n    this.destroyViewDesignerSubject.next();\n    // trigger action after subject to allow store to be cleared after every component is destroyed\n    // and its streams are completed\n    this.dispatcher.dispatch(ViewDesignerActions.destroyViewDesigner());\n  }\n\n  selectComponent(guid: string): void {\n    this.dispatcher.dispatch(ViewComponentsActions.selectComponent({ guid }));\n  }\n\n  insertComponent(payload: {\n    data: IViewComponentDropData;\n    insertIndex: number;\n    outletName: string;\n    targetGuid: string;\n  }): void {\n    this.dispatcher.dispatch(\n      ViewComponentsActions.insertComponent({\n        columnIndex: isFinite(payload.data && payload.data.columnIndex) ? payload.data.columnIndex : 0,\n        ...payload,\n        data: {\n          guid: payload.data.draggedViewComponentGuid,\n          type: payload.data.draggedViewComponentDescriptor.type,\n          initialPropertiesByName: payload.data.initialPropertiesByName\n        }\n      })\n    );\n  }\n\n  selectInspectorTab(payload: { tabId: number }): void {\n    this.dispatcher.dispatch(ViewDesignerActions.selectInspectorTab(payload));\n  }\n\n  generateViewDefinition(payload?: any): void {\n    this.dispatcher.dispatch(ViewDesignerActions.generateViewDefinition({ payload }));\n  }\n\n  updateComponentProperties(guid: string, componentProperties: IPlainObject): void {\n    this.dispatcher.dispatch(\n      ViewComponentsActions.updateComponentModel({\n        payload: [\n          {\n            guid,\n            partialModel: {\n              propertiesByName: componentProperties\n            }\n          }\n        ]\n      })\n    );\n  }\n\n  updateComponentModel(guid: string, payload: Partial<IViewComponentDesignModel>): void {\n    this.dispatcher.dispatch(\n      ViewComponentsActions.updateComponentModel({\n        payload: [\n          {\n            guid,\n            partialModel: payload\n          }\n        ]\n      })\n    );\n  }\n\n  getComponentProperties<TPropertiesByName = IPlainObject>(\n    guid: string\n  ): Observable<TPropertiesByName & { name?: string }> {\n    return this.store$.select(componentPropertiesByNameSelector, { guid });\n  }\n\n  getComponentPropertyValue<TPropertyName extends keyof TPropertiesByName, TPropertiesByName = IPlainObject>(\n    guid: string,\n    propertyName: TPropertyName\n  ): Observable<TPropertiesByName[TPropertyName]> {\n    return this.store$.select(componentPropertiesByNameSelector, { guid, propertyName: propertyName as string }).pipe(\n      withLatestFrom(this.getComponentModel(guid)),\n      switchMap(([value, model]) => (model ? of(value) : EMPTY))\n    );\n  }\n\n  getComponentType(guid: string): Observable<string> {\n    return this.store$.select(componentTypeSelector, { guid });\n  }\n\n  getComponentPermissions(guid: string): Observable<IViewDefinitionPermission[]> {\n    return this.store$.select(componentPermissionsSelector, { guid });\n  }\n\n  getComponentLayout(guid: string): Observable<IViewLayout> {\n    return this.store$.select(componentLayoutSelector, { guid });\n  }\n\n  updateSelectedComponentProperties(properties: IPlainObject): void {\n    this.selectedComponentGuid$.pipe(take(1)).subscribe((guid) => {\n      this.updateComponentProperties(guid, properties);\n    });\n  }\n\n  saveViewDefinition(payload?: any): void {\n    this.dispatcher.dispatch(ViewDesignerActions.saveViewDefinition({ payload }));\n  }\n\n  updateViewProperties(properties: Partial<IViewDesignModel>): void {\n    this.dispatcher.dispatch(ViewDesignerActions.updateViewModel({ payload: properties }));\n  }\n\n  setViewProperties(properties: IViewDesignModel): void {\n    this.dispatcher.dispatch(ViewDesignerActions.setViewModel({ payload: properties }));\n  }\n\n  getViewPropertyValue<T extends keyof IViewDesignModel>(propertyName: T): Observable<IViewDesignModel[T]> {\n    return this.store$.select(viewModelPropertyValueSelector, { propertyName }).pipe(\n      switchMapTo(\n        this.viewModel$.pipe(\n          map((model) => model[propertyName]),\n          take(1)\n        )\n      ),\n      distinctUntilChanged()\n    );\n  }\n\n  runPreview(): void {\n    this.dispatcher.dispatch(ViewDesignerActions.runPreview());\n  }\n\n  clearCanvas(): void {\n    this.dispatcher.dispatch(ViewDesignerActions.clearCanvas());\n  }\n\n  setComponentInspector(guid: string, inspectorConfig: IViewDesignerInspectorConfig): void {\n    this.rxViewDesignerInspectorService.set(guid, inspectorConfig);\n  }\n\n  setValidationIssues(guid: string, issues: IViewComponentDesignValidationIssue[]): void {\n    this.dispatcher.dispatch(ViewComponentsActions.setValidationIssues({ guid, issues }));\n  }\n\n  setExpressionValidationIssues(issues: { [guid: string]: IViewComponentDesignValidationIssue[] }): void {\n    this.dispatcher.dispatch(ViewComponentsActions.setExpressionValidationIssues({ issues }));\n  }\n\n  setViewInspectorConfig(inspectorConfig: IViewDesignerInspectorConfig): void {\n    this.viewModelGuid$.pipe(take(1)).subscribe((guid) => {\n      this.setComponentInspector(guid, inspectorConfig);\n    });\n  }\n\n  removeViewComponents(guids: string[], selectParent?: boolean): void {\n    if (guids.length) {\n      this.dispatcher.dispatch(ViewComponentsActions.removeComponents({ guids, selectParent }));\n    }\n  }\n\n  setComponentSettablePropertiesDataDictionary(\n    guid: string,\n    componentName: string,\n    properties: IViewComponentDesignSettablePropertiesDataDictionary\n  ): void {\n    this.settablePropertiesDataDictionarySubject.next({\n      guid,\n      componentName,\n      dataDictionary: this.rxViewDataDictionaryBuilderService.getSettablePropertiesDataDictionary(properties)\n    });\n  }\n\n  setComponentCommonDataDictionaryBranch(guid: string, dataDictionaryBranch: IDataDictionaryBranch): void {\n    this.rxViewDataDictionaryService.setCommonDataDictionaryBranch(\n      guid,\n      dataDictionaryBranch\n        ? this.rxViewDataDictionaryBuilderService.getComponentCommonDataDictionaryBranch(dataDictionaryBranch)\n        : null\n    );\n  }\n\n  setViewCommonDataDictionaryBranch(dataDictionaryBranch: IDataDictionaryBranch): void {\n    this.rxViewDataDictionaryService.setViewCommonDataDictionaryBranch(dataDictionaryBranch);\n  }\n\n  removeAllActionDataDictionaryBranches(): void {\n    this.rxViewDataDictionaryService.removeAllActionOutputDataDictionaryBranches();\n  }\n\n  removeActionDataDictionaryBranch(actionGuid: string): void {\n    this.rxViewDataDictionaryService.removeActionOutputDataDictionaryBranch(actionGuid);\n  }\n\n  setActionDataDictionaryBranch(\n    actionGuid: string,\n    index: number,\n    actionName: string,\n    dataDictionary: IViewActionOutputDataDictionary = null\n  ): void {\n    this.rxViewDataDictionaryService.setActionOutputDataDictionaryBranch(\n      actionGuid,\n      index,\n      this.rxViewDataDictionaryBuilderService.getActionOutputDataDictionaryBranch(actionName, dataDictionary)\n    );\n  }\n\n  updateActionDataDictionaryBranchOrder(actions: { [guid: string]: number }): void {\n    this.rxViewDataDictionaryService.updateActionOutputDataDictionaryBranchOrder(actions);\n  }\n\n  getChildComponentGuids(\n    parentComponentGuid,\n    recursive = false,\n    filterPredicate?: (component: IViewComponentDesignData) => boolean\n  ): Observable<string[]> {\n    // watch for layout and childDataComponentGuids properties change\n    // TODO: store child component guids separately as a final result from layout and childDataComponentGuids\n    return combineLatest([\n      this.store$.select(componentLayoutSelector, { guid: parentComponentGuid }),\n      this.store$.select(childDataComponentGuidsSelector, { guid: parentComponentGuid })\n    ]).pipe(\n      // get component model with actual data where layout and childDataComponentGuids are already updated\n      switchMap(() => this.getComponentModel(parentComponentGuid).pipe(take(1))),\n      switchMap((model) =>\n        model\n          ? of(\n              compact([\n                ...(model.layout ? RxViewLayout.getViewLayoutChildGuids(model.layout) : []),\n                ...(model.childDataComponentGuids || [])\n              ])\n            )\n          : EMPTY\n      ),\n      switchMap((guids) =>\n        guids.length && recursive\n          ? combineLatest(guids.map((guid) => this.getChildComponentGuids(guid, true))).pipe(\n              map(flatten),\n              map((nestedGuids) => [...nestedGuids, ...guids])\n            )\n          : of(guids)\n      ),\n      switchMap((guids) =>\n        guids.length\n          ? this.viewComponentModels$.pipe(\n              map((models) => {\n                // The model of a removed component may be already unavailable, but the GUID may still be there.\n                // This can happen when multiple nested components are removed from different\n                // parent containers e.g. using record editor field selector dialog component.\n                // In this case, we will get two observable emits for each removed component.\n                // TODO: enhance getFlattenChildComponentGuids logic to reach a single observable emit.\n                let availableComponentGuids = guids.filter((guid) => models[guid]);\n\n                if (filterPredicate) {\n                  availableComponentGuids = availableComponentGuids.filter((guid) =>\n                    filterPredicate({\n                      type: models[guid].type,\n                      guid: models[guid].guid,\n                      data: models[guid].propertiesByName\n                    })\n                  );\n                }\n\n                return availableComponentGuids;\n              }),\n              take(1)\n            )\n          : of(guids)\n      )\n    );\n  }\n\n  getChildComponents<TPropertiesByName = IPlainObject>(\n    parentComponentGuid: string,\n    filterPredicate?: (component: IViewComponentDesignData) => boolean\n  ): Observable<IViewComponentDesignData<TPropertiesByName>[]> {\n    return this.getChildComponentGuids(parentComponentGuid, false, filterPredicate).pipe(\n      switchMap((guids) =>\n        guids.length\n          ? combineLatest(\n              guids.map((guid) =>\n                this.getComponentProperties(guid).pipe(\n                  withLatestFrom(this.getComponentModel(guid)),\n                  switchMap(([props, model]) =>\n                    model\n                      ? of({\n                          type: model.type,\n                          data: props,\n                          guid\n                        })\n                      : EMPTY\n                  )\n                )\n              )\n            )\n          : of([])\n      )\n    );\n  }\n\n  getComponent<TChildComponentDesignProperties>(\n    guid: string\n  ): Observable<IViewComponentDesignData<TChildComponentDesignProperties>> {\n    return this.getComponentModel<TChildComponentDesignProperties>(guid).pipe(\n      map((model) =>\n        model\n          ? {\n              data: model.propertiesByName,\n              guid: model.guid,\n              type: model.type\n            }\n          : null\n      )\n    );\n  }\n\n  getComponentsByType<TComponentDesignProperties>(\n    type: string\n  ): Observable<IViewComponentDesignData<TComponentDesignProperties>[]> {\n    return this.viewComponentModels$.pipe(\n      map((models) =>\n        _filter(models, { type }).map((model) => ({\n          guid: model.guid,\n          data: model.propertiesByName as TComponentDesignProperties,\n          type: model.type\n        }))\n      )\n    );\n  }\n\n  getChildComponentTree(parentComponentGuid: string): Observable<IViewComponentDesignData[]> {\n    return this.viewComponentModels$.pipe(\n      map((viewComponentModels) => {\n        const getChildrenData = (model: IViewComponentDesignModel) =>\n          getChildGuidsFromModel(model).reduce((res, childGuid) => {\n            if (viewComponentModels[childGuid]) {\n              res.push({\n                guid: childGuid,\n                data: viewComponentModels[childGuid].propertiesByName,\n                type: viewComponentModels[childGuid].type,\n                children: getChildrenData(viewComponentModels[childGuid])\n              });\n            }\n\n            return res;\n          }, []);\n\n        return viewComponentModels[parentComponentGuid]\n          ? getChildrenData(viewComponentModels[parentComponentGuid])\n          : [];\n      })\n    );\n  }\n\n  getParentComponentGuid(guid: string, componentType?: string): Observable<string> {\n    return this.store$\n      .select(parentComponentModelGuidSelector, { guid })\n      .pipe(\n        switchMap((parentGuid) =>\n          parentGuid && componentType\n            ? this.store$\n                .select(componentTypeSelector, { guid: parentGuid })\n                .pipe(\n                  switchMap((parentComponentType) =>\n                    parentComponentType === componentType\n                      ? of(parentGuid)\n                      : this.getParentComponentGuid(parentGuid, componentType)\n                  )\n                )\n            : of(parentGuid || null)\n        )\n      );\n  }\n\n  setChildren(guid: string, data: IViewComponentDesignSetPayload[]): void {\n    this.dispatcher.dispatch(\n      ViewComponentsActions.setChildComponents({\n        payload: {\n          guid,\n          data\n        }\n      })\n    );\n  }\n}\n"]}