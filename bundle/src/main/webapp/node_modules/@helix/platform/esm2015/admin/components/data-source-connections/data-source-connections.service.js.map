{"version":3,"file":"data-source-connections.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/admin/components/data-source-connections/data-source-connections.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAE,QAAQ,EAAc,MAAM,MAAM,CAAC;AAC5C,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AAC7B,OAAO,EAAE,0BAA0B,EAAE,MAAM,oCAAoC,CAAC;;;AAMhF,MAAM,OAAO,8BAA8B;IACzC,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAE9C,uBAAuB,CAAC,YAAoB;QAC1C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,0BAA0B,CAAC,uBAAuB,IAAI,YAAY,EAAE,CAAC,CAAC;IACtG,CAAC;IAED,0BAA0B,CAAC,oBAA2C;QACpE,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,0BAA0B,CAAC,uBAAuB,EAAE,oBAAoB,CAAC,CAAC;IACxG,CAAC;IAED,0BAA0B,CAAC,YAAoB,EAAE,oBAA2C;QAC1F,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CACxB,GAAG,0BAA0B,CAAC,uBAAuB,IAAI,YAAY,EAAE,EACvE,oBAAoB,CACrB,CAAC;IACJ,CAAC;IAED,2BAA2B,CAAC,iBAA2B;QACrD,OAAO,QAAQ,CACb,GAAG,CAAC,iBAAiB,EAAE,CAAC,EAAE,EAAE,EAAE,CAC5B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,0BAA0B,CAAC,uBAAuB,IAAI,EAAE,EAAE,CAAC,CACtF,CACF,CAAC;IACJ,CAAC;;2HAxBU,8BAA8B;+HAA9B,8BAA8B,cAF7B,MAAM;2FAEP,8BAA8B;kBAH1C,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin, Observable } from 'rxjs';\nimport { map } from 'lodash';\nimport { RX_DATA_SOURCE_CONNECTIONS } from './data-source-connections.constant';\nimport { IDataSourceConnection } from './data-source-connections.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxDataSourceConnectionsService {\n  constructor(private httpClient: HttpClient) {}\n\n  getDataSourceConnection(connectionId: string): Observable<any> {\n    return this.httpClient.get(`${RX_DATA_SOURCE_CONNECTIONS.dataSourceConnectionUrl}/${connectionId}`);\n  }\n\n  createDataSourceConnection(dataSourceConnection: IDataSourceConnection): Observable<any> {\n    return this.httpClient.post(RX_DATA_SOURCE_CONNECTIONS.dataSourceConnectionUrl, dataSourceConnection);\n  }\n\n  updateDataSourceConnection(connectionId: string, dataSourceConnection: IDataSourceConnection): Observable<any> {\n    return this.httpClient.put(\n      `${RX_DATA_SOURCE_CONNECTIONS.dataSourceConnectionUrl}/${connectionId}`,\n      dataSourceConnection\n    );\n  }\n\n  deleteDataSourceConnections(recordInstanceIds: string[]): Observable<any> {\n    return forkJoin(\n      map(recordInstanceIds, (id) =>\n        this.httpClient.delete(`${RX_DATA_SOURCE_CONNECTIONS.dataSourceConnectionUrl}/${id}`)\n      )\n    );\n  }\n}\n"]}