{"version":3,"file":"iframe.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/components/iframe/iframe.component.ts","../../../../../../../libs/platform/shared/components/iframe/iframe.component.html"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,UAAU,EACV,YAAY,EACZ,WAAW,EACX,YAAY,EACZ,KAAK,EAEL,MAAM,EAEN,SAAS,EACV,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,YAAY,EAAmB,MAAM,2BAA2B,CAAC;AAC1E,OAAO,EAAkB,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;;;;AAQ5E,MAAM,OAAO,iBAAiB;IAsC5B,YAAoB,mBAAwC,EAAU,YAA0B;QAA5E,wBAAmB,GAAnB,mBAAmB,CAAqB;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAjChG,UAAK,GAAG,SAAS,CAAC;QAGlB,yBAAoB,GAAG,KAAK,CAAC;QAG7B,aAAQ,GAAG,KAAK,CAAC;QAGjB,cAAS,GAAG,IAAI,YAAY,EAAkB,CAAC;QAO/C,QAAG,GAAe;YAChB,kBAAkB,EAAE,CAAC,OAAuB,EAAQ,EAAE;gBACpD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YACpE,CAAC;SACF,CAAC;IAaiG,CAAC;IAVpG,SAAS,CAAC,KAAmB;QAC3B,IAAI,KAAK,CAAC,IAAI,EAAE;YACd,MAAM,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAiB,KAAK,CAAC,IAAI,CAAC,CAAC;YAExF,IAAI,aAAa,EAAE;gBACjB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACpC;SACF;IACH,CAAC;IAID,WAAW,CAAC,OAAsB;;QAChC,IAAI,MAAA,OAAO,CAAC,GAAG,0CAAE,YAAY,EAAE;YAC7B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,8BAA8B,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;SACvF;IACH,CAAC;IAED,SAAS,CAAC,GAAW;QACnB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAChE,CAAC;;8GAhDU,iBAAiB;kGAAjB,iBAAiB,saCrB9B,0FACA;2FDoBa,iBAAiB;kBAL7B,SAAS;mBAAC;oBACT,QAAQ,EAAE,WAAW;oBACrB,WAAW,EAAE,yBAAyB;oBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;iBACvC;qIAGC,GAAG;sBADF,KAAK;gBAIN,KAAK;sBADJ,WAAW;uBAAC,OAAO;gBAIpB,oBAAoB;sBADnB,WAAW;uBAAC,yBAAyB;gBAItC,QAAQ;sBADP,WAAW;uBAAC,gBAAgB;gBAI7B,SAAS;sBADR,MAAM;gBAIP,MAAM;sBADL,SAAS;uBAAC,OAAO;gBAYlB,SAAS;sBADR,YAAY;uBAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC","sourcesContent":["import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { IWindowMessage, RxJsonParserService } from '@helix/platform/utils';\nimport { IIframeApi } from './iframe.interface';\n\n@Component({\n  selector: 'rx-iframe',\n  templateUrl: './iframe.component.html',\n  styleUrls: ['./iframe.component.scss']\n})\nexport class RxIframeComponent implements OnChanges {\n  @Input()\n  url: string;\n\n  @HostBinding('class')\n  class = 'd-block';\n\n  @HostBinding('class.position-absolute')\n  isAbsolutePositioned = false;\n\n  @HostBinding('class.isHidden')\n  isHidden = false;\n\n  @Output()\n  rxMessage = new EventEmitter<IWindowMessage>();\n\n  @ViewChild('frame')\n  iframe: ElementRef;\n\n  src: SafeResourceUrl;\n\n  api: IIframeApi = {\n    postMessageToFrame: (message: IWindowMessage): void => {\n      this.iframe.nativeElement.contentWindow.postMessage(message, '*');\n    }\n  };\n\n  @HostListener('window:message', ['$event'])\n  onMessage(event: MessageEvent): void {\n    if (event.data) {\n      const windowMessage = this.rxJsonParserService.tryParseJson<IWindowMessage>(event.data);\n\n      if (windowMessage) {\n        this.rxMessage.emit(windowMessage);\n      }\n    }\n  }\n\n  constructor(private rxJsonParserService: RxJsonParserService, private domSanitizer: DomSanitizer) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.url?.currentValue) {\n      this.src = this.domSanitizer.bypassSecurityTrustResourceUrl(changes.url.currentValue);\n    }\n  }\n\n  updateUrl(url: string): void {\n    this.iframe.nativeElement.contentWindow.location.replace(url);\n  }\n}\n","<iframe #frame class=\"w-100 h-100 d-block\" frameborder=\"0\" [src]=\"src\"></iframe>\n"]}