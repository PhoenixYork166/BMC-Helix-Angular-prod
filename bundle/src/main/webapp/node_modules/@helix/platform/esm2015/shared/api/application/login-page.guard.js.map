{"version":3,"file":"login-page.guard.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/api/application/login-page.guard.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAuC,MAAM,EAAgC,MAAM,iBAAiB,CAAC;AAE5G,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AACrC,OAAO,EAAE,qBAAqB,EAAE,MAAM,iBAAiB,CAAC;AACxD,OAAO,EAAE,UAAU,EAAE,MAAM,8BAA8B,CAAC;;;;AAK1D,MAAM,OAAO,gBAAgB;IAC3B,YAAoB,qBAA4C,EAAU,MAAc;QAApE,0BAAqB,GAArB,qBAAqB,CAAuB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAE5F,WAAW,CAAC,IAA4B,EAAE,KAA0B;QAClE,OAAO,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,IAAI,CAC3D,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE;YACf,MAAM,eAAe,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YAElE,IAAI,eAAe,KAAK,UAAU,CAAC,gBAAgB,CAAC,IAAI,EAAE;gBACxD,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aACvC;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;6GAjBU,gBAAgB;iHAAhB,gBAAgB,cAFf,MAAM;2FAEP,gBAAgB;kBAH5B,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RxLocalizationService } from '../localization';\nimport { RX_SESSION } from '../security/session.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxLoginPageGuard implements CanActivate {\n  constructor(private rxLocalizationService: RxLocalizationService, private router: Router) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<UrlTree | boolean> {\n    return this.rxLocalizationService.loginLocalizedStrings$.pipe(\n      map((response) => {\n        const ssoProviderType = response.headers.get('sso-provider-type');\n\n        if (ssoProviderType === RX_SESSION.ssoProviderTypes.rsso) {\n          const bundleId = next.paramMap.get('bundleId');\n\n          return this.router.parseUrl(bundleId);\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n}\n"]}