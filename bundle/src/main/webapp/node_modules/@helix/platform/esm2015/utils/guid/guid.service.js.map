{"version":3,"file":"guid.service.js","sourceRoot":"","sources":["../../../../../../libs/platform/utils/guid/guid.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAC;;AAK1C,MAAM,OAAO,aAAa;IACxB,QAAQ,CAAC,MAAe;QACtB,+EAA+E;QAE/E,IAAI,IAAI,GAAG,sCAAsC,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;YACvE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,sBAAsB;YAC1D,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,sBAAsB;YAEhE,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,MAAM,EAAE;YACV,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC;SACtB;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,CAAC,MAAc;QACnB,MAAM,WAAW,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC,eAAe,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;QAEzE,OAAO,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;;0GAtBU,aAAa;8GAAb,aAAa,cAFZ,MAAM;2FAEP,aAAa;kBAHzB,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { RX_GUID } from './guid.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxGuidService {\n  generate(prefix?: string): string {\n    // taken from JointJS, credit: http://stackoverflow.com/posts/2117523/revisions\n\n    let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0; // tslint:disable-line\n      const v = c == 'x' ? r : (r & 0x3) | 0x8; // tslint:disable-line\n\n      return v.toString(16);\n    });\n\n    if (prefix) {\n      uuid = prefix + uuid;\n    }\n\n    return uuid;\n  }\n\n  isGuid(tested: string): boolean {\n    const guidPattern = new RegExp('^' + RX_GUID.baseGuidPattern + '$', 'i');\n\n    return guidPattern.test(tested);\n  }\n}\n"]}