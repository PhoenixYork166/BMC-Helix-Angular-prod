{"version":3,"file":"data-import.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/dataload/components/data-import/data-import.component.ts","../../../../../../../libs/platform/dataload/components/data-import/data-import.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, ComponentFactoryResolver, HostBinding, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport {\n  IRecordGridColumn,\n  IRecordGridConfig,\n  IRecordGridDataPageParams,\n  RecordGridColumnAlignment,\n  RecordGridComponent,\n  RowSelectionMode\n} from '@helix/platform/view/components';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport {\n  RecordInstance,\n  RX_RECORD_DEFINITION,\n  RxRecordInstanceService,\n  RxRecordInstanceDataPageService\n} from '@helix/platform/record/api';\nimport { DL_DATA_IMPORT } from './data-import.constant';\nimport { DataCellTemplateParams } from '@bmc-ux/adapt-table';\nimport { RxJsonParserService } from '@helix/platform/utils';\nimport { every, filter, get, map as _map, noop, omit, some } from 'lodash';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DataImportService } from './data-import.service';\nimport { AdaptModalService } from '@bmc-ux/adapt-angular';\nimport { ImportRecordStatusInfoComponent } from './import-record-status-info/import-record-status-info.component';\nimport { RxWizardService } from '@helix/platform/shared/components';\nimport { UploadDataFileStepComponent } from './upload-data-file-step/upload-data-file-step.component';\nimport { switchMap } from 'rxjs/operators';\nimport { IDataloadWizardContext } from './data-import.types';\nimport { IDataPageResult, RxDefinitionNameService, RxNotificationService } from '@helix/platform/shared/api';\n\n@Component({\n  selector: 'dl-data-import',\n  templateUrl: './data-import.component.html',\n  styleUrls: ['./data-import.component.scss']\n})\nexport class DataImportComponent implements OnInit {\n  @HostBinding('class')\n  hostClass = 'd-flex mh-100 flex-column';\n\n  gridConfig$: Observable<IRecordGridConfig>;\n\n  @ViewChild('grid')\n  grid: RecordGridComponent;\n\n  @ViewChild('recordNamesCellTemplate', { static: true })\n  private recordNamesCellTemplate: TemplateRef<DataCellTemplateParams>;\n\n  @ViewChild('statusInfoCellTemplate', { static: true })\n  private statusInfoCellTemplate: TemplateRef<DataCellTemplateParams>;\n\n  private dataloadWizardContext: IDataloadWizardContext;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxModalService: RxModalService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxNotificationService: RxNotificationService,\n    private rxWizardService: RxWizardService,\n    private translateService: TranslateService,\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private adaptModalService: AdaptModalService,\n    private rxJsonParserService: RxJsonParserService,\n    private dataImportService: DataImportService,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService\n  ) {}\n\n  ngOnInit(): void {\n    this.gridConfig$ = of({\n      guid: 'dl-import-grid',\n      actionButtons: [\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.dataload.import.grid.load-data.label'),\n          style: 'tertiary',\n          iconCls: 'arrow_right_square_input',\n          actions: [\n            {\n              name: () => {\n                this.loadDataFromSelectedRecords();\n              }\n            }\n          ],\n          disabled: () => !some(this.grid.api.getSelectedRows(), this.isNewOrStoppedRecord)\n        },\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.dataload.import.clone-configuration.label'),\n          style: 'tertiary',\n          icon: 'files_copy_o',\n          actions: [\n            {\n              name: () => {\n                this.cloneDataImportConfiguration();\n              }\n            }\n          ],\n          disabled: () => this.grid.api.getSelectedRows().length !== 1\n        },\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n          style: 'tertiary',\n          icon: 'trash',\n          actions: [\n            {\n              name: () => {\n                this.deleteSelectedDataRecords();\n              }\n            }\n          ]\n        },\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.archive.label'),\n          style: 'tertiary',\n          iconCls: 'file_o_archive',\n          actions: [\n            {\n              name: () => {\n                this.archiveSelectedDataRecords();\n              }\n            }\n          ],\n          disabled: () => this.areAllSelectedArchived()\n        },\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.stop.label'),\n          style: 'tertiary',\n          iconCls: 'pause',\n          actions: [\n            {\n              name: () => this.stopSelectedRecordProcessing()\n            }\n          ],\n          disabled: () => !some(this.grid.api.getSelectedRows(), this.isProcessingOrQueuedRecord)\n        }\n      ],\n      recordDefinitionName: DL_DATA_IMPORT.recordDefinitionName,\n      enableRowSelection: RowSelectionMode.Multiple,\n      columns: this.getColumns(),\n      getData: (queryParams: IRecordGridDataPageParams) => this.getData(queryParams),\n      styles: 'flex-fill'\n    });\n  }\n\n  private getData(queryParams: IRecordGridDataPageParams): Observable<IDataPageResult> {\n    return this.rxRecordInstanceDataPageService.post({\n      params: {\n        ...omit(\n          {\n            ...queryParams,\n            propertySelection: [\n              String(DL_DATA_IMPORT.fields.importJobName),\n              String(DL_DATA_IMPORT.fields.uploadedOn),\n              String(DL_DATA_IMPORT.fields.importJobDescription),\n              String(DL_DATA_IMPORT.fields.dataFile),\n              String(DL_DATA_IMPORT.fields.attachmentOut),\n              String(RX_RECORD_DEFINITION.coreFieldIds.status),\n              String(DL_DATA_IMPORT.fields.isArchived),\n              String(DL_DATA_IMPORT.fields.mappingConfig),\n              String(RX_RECORD_DEFINITION.coreFieldIds.id)\n            ]\n          },\n          ['searchText']\n        )\n      }\n    });\n  }\n\n  private isNewOrStoppedRecord(row: IRowDataItem): boolean {\n    return (\n      row[RX_RECORD_DEFINITION.coreFieldIds.status] === DL_DATA_IMPORT.dataStatuses.new ||\n      row[RX_RECORD_DEFINITION.coreFieldIds.status] === DL_DATA_IMPORT.dataStatuses.stopped\n    );\n  }\n\n  private areAllSelectedArchived(): boolean {\n    return every(this.grid.api.getSelectedRows(), (row: IRowDataItem) => row[DL_DATA_IMPORT.fields.isArchived] === 1);\n  }\n\n  newDataImport(selectedRecordInstanceId: string = null): void {\n    this.dataloadWizardContext = {\n      clonedConfigurationInstanceId: selectedRecordInstanceId,\n      createdRecordInstanceId: null,\n      isClonedConfigMatched: false,\n      dataImportContext: {\n        dataImportConfigurations: {\n          sheets: []\n        }\n      },\n      excelSheetsConfiguration: {}\n    };\n\n    this.rxWizardService\n      .open<IDataloadWizardContext>({\n        context: this.dataloadWizardContext,\n        options: {\n          title: this.translateService.instant('com.bmc.arsys.rx.client.dataload.import.wizard.title'),\n          finishButtonLabel: this.translateService.instant('com.bmc.arsys.rx.client.common.save.label'),\n          steps: [\n            {\n              id: DL_DATA_IMPORT.uploadFileStepId,\n              name: this.translateService.instant(\n                'com.bmc.arsys.rx.client.dataload.import.wizard.steps.upload-data-file.label'\n              ),\n              componentFactory: this.componentFactoryResolver.resolveComponentFactory(UploadDataFileStepComponent),\n              handlesNext: true\n            },\n            // This temporary step is needed to display wizard Next button\n            DL_DATA_IMPORT.temporaryStepConfig\n          ]\n        }\n      })\n      .then((result: IDataloadWizardContext) => {\n        if (result) {\n          this.savePrepareDataImportConfiguration();\n        } else {\n          this.grid.api.refresh().subscribe();\n        }\n      });\n  }\n\n  private loadDataFromSelectedRecords(): void {\n    const newOrStoppedRecords = filter(this.grid.api.getSelectedRows(), this.isNewOrStoppedRecord);\n\n    if (newOrStoppedRecords.length < this.grid.api.getSelectedRows().length) {\n      this.rxModalService\n        .confirm({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n          modalStyle: RX_MODAL.modalStyles.default,\n          message: this.translateService.instant(\n            'com.bmc.arsys.rx.client.dataload.import.already-loaded-data-warning.message'\n          )\n        })\n        .then((result: boolean) => {\n          if (result) {\n            this.loadDataFromFile();\n          }\n        });\n    } else {\n      this.loadDataFromFile();\n    }\n  }\n\n  private isProcessingOrQueuedRecord(row: IRowDataItem): boolean {\n    return (\n      row[RX_RECORD_DEFINITION.coreFieldIds.status] === DL_DATA_IMPORT.dataStatuses.processing ||\n      row[RX_RECORD_DEFINITION.coreFieldIds.status] === DL_DATA_IMPORT.dataStatuses.queued\n    );\n  }\n\n  private stopSelectedRecordProcessing(): void {\n    const alreadyProcessedRecords = filter(this.grid.api.getSelectedRows(), this.isProcessingOrQueuedRecord);\n\n    if (alreadyProcessedRecords.length !== this.grid.api.getSelectedRows().length) {\n      this.rxModalService\n        .confirm({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n          modalStyle: RX_MODAL.modalStyles.default,\n          message: this.translateService.instant(\n            'com.bmc.arsys.rx.client.dataload.import.stop-data-processing-warning.message'\n          )\n        })\n        .then((result: boolean) => {\n          if (result) {\n            this.stopRecordProcessing();\n          }\n        });\n    } else {\n      this.stopRecordProcessing();\n    }\n  }\n\n  private stopRecordProcessing(): void {\n    const stopProcessingRequests$: Observable<any>[] = filter(\n      this.grid.api.getSelectedRows(),\n      this.isProcessingOrQueuedRecord\n    ).map((row: IRowDataItem) => this.dataImportService.stopDataProcessing(row[RX_RECORD_DEFINITION.coreFieldIds.id]));\n\n    forkJoin(stopProcessingRequests$).subscribe(() => {\n      this.grid.api.refresh().subscribe();\n    });\n  }\n\n  private deleteSelectedDataRecords(): void {\n    this.rxModalService\n      .confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.default,\n        message: this.translateService.instant(\n          'com.bmc.arsys.rx.client.dataload.import.delete-import-record-confirmation.message'\n        )\n      })\n      .then((result: boolean) => {\n        if (result) {\n          const deleteDataRequests$: Observable<any>[] = _map(this.grid.api.getSelectedRows(), (row: IRowDataItem) =>\n            this.rxRecordInstanceService.delete(\n              DL_DATA_IMPORT.recordDefinitionName,\n              row[RX_RECORD_DEFINITION.coreFieldIds.id]\n            )\n          );\n\n          forkJoin(deleteDataRequests$).subscribe(() => {\n            this.rxNotificationService.addSuccessMessage(\n              this.translateService.instant(\n                'com.bmc.arsys.rx.client.dataload.import.delete-import-record-success.message'\n              )\n            );\n\n            this.grid.api.refresh().subscribe();\n          });\n        }\n      });\n  }\n\n  private archiveSelectedDataRecords(): void {\n    this.rxModalService\n      .confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.default,\n        message: this.translateService.instant('com.bmc.arsys.rx.client.dataload.archive-records-warning.message')\n      })\n      .then((result: boolean) => {\n        if (result) {\n          const archiveDataRequests$: Observable<any>[] = filter(this.grid.api.getSelectedRows(), {\n            [DL_DATA_IMPORT.fields.isArchived]: 0\n          }).map((row: IRowDataItem) =>\n            this.rxRecordInstanceService\n              .get(DL_DATA_IMPORT.recordDefinitionName, row[RX_RECORD_DEFINITION.coreFieldIds.id])\n              .pipe(\n                switchMap((recordInstance: RecordInstance) => {\n                  recordInstance.id = row[RX_RECORD_DEFINITION.coreFieldIds.id];\n                  recordInstance.displayId = row[RX_RECORD_DEFINITION.coreFieldIds.displayId];\n                  recordInstance.setFieldValue(DL_DATA_IMPORT.fields.isArchived, DL_DATA_IMPORT.archiveTrueValue);\n\n                  return this.rxRecordInstanceService.save(recordInstance);\n                })\n              )\n          );\n\n          forkJoin(archiveDataRequests$).subscribe(() => {\n            this.grid.api.refresh().subscribe();\n          });\n        }\n      });\n  }\n\n  private cloneDataImportConfiguration(): void {\n    this.newDataImport(this.grid.api.getFirstSelectedRow()[RX_RECORD_DEFINITION.coreFieldIds.id]);\n  }\n\n  private loadDataFromFile(): void {\n    const loadDataRequests$: Observable<any>[] = filter(this.grid.api.getSelectedRows(), this.isNewOrStoppedRecord).map(\n      (row: IRowDataItem) => this.dataImportService.runLoadProcess(row[RX_RECORD_DEFINITION.coreFieldIds.id])\n    );\n\n    forkJoin(loadDataRequests$).subscribe(() => {\n      this.grid.api.refresh().subscribe();\n    });\n  }\n\n  getRecordNames(selectedRow: IRowDataItem): string {\n    return _map(\n      get(\n        this.rxJsonParserService.tryParseJson(selectedRow[DL_DATA_IMPORT.fields.mappingConfig]),\n        'dataImportConfigurations.sheets'\n      ),\n      'configurations.definitionMappings.targetDefinition.name'\n    )\n      .filter(Boolean)\n      .map((definitionQualifiedName) => this.rxDefinitionNameService.getDisplayName(definitionQualifiedName))\n      .join(', ');\n  }\n\n  showStatusInfo(selectedRow: IRowDataItem): void {\n    this.adaptModalService\n      .open({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.status.label'),\n        content: ImportRecordStatusInfoComponent,\n        data: {\n          dataRecordId: selectedRow[RX_RECORD_DEFINITION.coreFieldIds.id]\n        },\n        size: 'lg'\n      })\n      .catch(noop);\n  }\n\n  private getColumns(): IRecordGridColumn[] {\n    return [\n      {\n        fieldId: String(DL_DATA_IMPORT.fields.importJobName),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label')\n      },\n      {\n        fieldId: String(DL_DATA_IMPORT.fields.uploadedOn),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.dataload.import.wizard.steps.uploaded-on.label')\n      },\n      {\n        fieldId: String(DL_DATA_IMPORT.fields.importJobDescription),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label')\n      },\n      {\n        fieldId: String(DL_DATA_IMPORT.fields.mappingConfig),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.definitions.label'),\n        cellTemplate: this.recordNamesCellTemplate,\n        sortable: false\n      },\n      {\n        fieldId: String(DL_DATA_IMPORT.fields.dataFile),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.dataload.import.grid.data-load-input.title'),\n        sortable: false,\n        filterable: false,\n        clickable: true,\n        actions: [\n          {\n            name: (previousAction: any, row: IRowDataItem) => {\n              this.rxRecordInstanceService.downloadAttachment(\n                DL_DATA_IMPORT.recordDefinitionName,\n                DL_DATA_IMPORT.fields.dataFile,\n                row[RX_RECORD_DEFINITION.coreFieldIds.id],\n                row[DL_DATA_IMPORT.fields.dataFile]\n              );\n            }\n          }\n        ]\n      },\n      {\n        fieldId: String(DL_DATA_IMPORT.fields.attachmentOut),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.dataload.import.grid.data-load-result.title'),\n        sortable: false,\n        filterable: false,\n        clickable: true,\n        actions: [\n          {\n            name: (previousAction: any, row: IRowDataItem) => {\n              this.rxRecordInstanceService.downloadAttachment(\n                DL_DATA_IMPORT.recordDefinitionName,\n                DL_DATA_IMPORT.fields.attachmentOut,\n                row[RX_RECORD_DEFINITION.coreFieldIds.id],\n                row[DL_DATA_IMPORT.fields.attachmentOut]\n              );\n            }\n          }\n        ]\n      },\n      {\n        fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.status),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.status.label')\n      },\n      {\n        fieldId: String(DL_DATA_IMPORT.fields.isArchived),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.dataload.grid.column.archived-record.title')\n      },\n      {\n        fieldId: String(DL_DATA_IMPORT.fields.message),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.dataload.grid.column.status-message.title'),\n        cellTemplate: this.statusInfoCellTemplate,\n        alignment: RecordGridColumnAlignment.Center,\n        filterable: false,\n        sortable: false\n      },\n      {\n        fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.id),\n        visible: false,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.id.label')\n      }\n    ];\n  }\n\n  private savePrepareDataImportConfiguration(): void {\n    this.rxRecordInstanceService\n      .get(DL_DATA_IMPORT.recordDefinitionName, this.dataloadWizardContext.createdRecordInstanceId)\n      .pipe(\n        switchMap((recordInstance: RecordInstance) => {\n          recordInstance.setFieldValue(\n            DL_DATA_IMPORT.fields.mappingConfig,\n            JSON.stringify(this.dataloadWizardContext.dataImportContext)\n          );\n\n          recordInstance.setFieldValue(\n            DL_DATA_IMPORT.fields.importJobName,\n            this.dataloadWizardContext.importJobInfo.importJobName\n          );\n\n          recordInstance.setFieldValue(\n            DL_DATA_IMPORT.fields.importJobDescription,\n            this.dataloadWizardContext.importJobInfo.importJobDescription\n          );\n\n          recordInstance.setFieldValue(\n            DL_DATA_IMPORT.fields.attachmentType,\n            this.dataloadWizardContext.importJobInfo.attachmentType\n          );\n\n          recordInstance.setFieldValue(\n            DL_DATA_IMPORT.fields.archivedWorksheetFileName,\n            this.dataloadWizardContext.importJobInfo.archivedWorksheetFileName\n          );\n\n          return this.rxRecordInstanceService.save(recordInstance);\n        }),\n        switchMap(() => this.grid.api.refresh())\n      )\n      .subscribe();\n  }\n}\n","<button\n  adapt-button\n  type=\"button\"\n  btn-type=\"tertiary\"\n  class=\"d-icon-plus_circle px-0 align-self-start\"\n  rx-id=\"new-import-button\"\n  (click)=\"newDataImport()\"\n>\n  {{ 'com.bmc.arsys.rx.client.dataload.import.new-import.title' | translate }}\n</button>\n\n<rx-record-grid #grid [config]=\"gridConfig$\"></rx-record-grid>\n\n<ng-template #recordNamesCellTemplate let-dataItem=\"dataItem\">\n  {{ getRecordNames(dataItem) }}\n</ng-template>\n\n<ng-template #statusInfoCellTemplate let-dataItem=\"dataItem\">\n  <a href=\"javascript:void(0)\" (click)=\"showStatusInfo(dataItem)\">{{\n    'com.bmc.arsys.rx.client.common.action-view.label' | translate\n  }}</a>\n</ng-template>\n"]}