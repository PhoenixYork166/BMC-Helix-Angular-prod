{"version":3,"file":"data-export-configuration.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/dataload/components/data-export/data-export-configuration/data-export-configuration.component.ts","../../../../../../../../libs/platform/dataload/components/data-export/data-export-configuration/data-export-configuration.component.html"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectorRef, Component, Injector, OnDestroy, OnInit } from '@angular/core';\nimport {\n  IDefinitionPickerComponentOptions,\n  IExpressionEditorPropertyChange,\n  IExpressionFormControlOptions,\n  RX_DEFINITION_PICKER,\n  RxDefinitionPickerType,\n  RxExpressionEditorService\n} from '@helix/platform/shared/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AdaptModalService, DismissReasons, DockedPanelContext, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { ICriteriaField, IExportConfiguration, IExportConfigurationDefinition } from '../data-export.types';\nimport { DataExportFiltersExpressionConfigurator } from '../data-export-filters-expression-configurator';\nimport { DL_DATA_EXPORT } from '../data-export.constant';\nimport { ExpressionOperatorGroup, RxDefinitionNameService, RxNotificationService } from '@helix/platform/shared/api';\nimport { BehaviorSubject, iif, Observable, of, ReplaySubject } from 'rxjs';\nimport { finalize, map, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport {\n  IFieldDefinition,\n  IRecordDefinition,\n  RecordInstance,\n  RX_RECORD_DEFINITION,\n  RxFieldDefinitionService,\n  RxRecordDefinitionService,\n  RxRecordInstanceService\n} from '@helix/platform/record/api';\nimport { cloneDeep, forEach, map as _map, noop, some } from 'lodash';\nimport { ExportDataPreviewComponent } from '../export-data-preview/export-data-preview.component';\n\n@Component({\n  selector: 'dl-data-export-configuration',\n  templateUrl: './data-export-configuration.component.html',\n  styleUrls: ['./data-export-configuration.component.scss']\n})\nexport class DataExportConfigurationComponent extends RxModalClass implements OnInit, OnDestroy {\n  isSaveInProgress: boolean;\n  private index$: BehaviorSubject<number> = new BehaviorSubject(null);\n  private recordDefinitionNames$: BehaviorSubject<string>[] = [];\n  definitionFields$: Observable<RxSelectOption[]>[] = [];\n\n  dataFilterExpressionOptions: IExpressionFormControlOptions;\n  protected expressionConfigurator: DataExportFiltersExpressionConfigurator;\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  exportConfiguration: IExportConfiguration = {\n    exportConfigName: null,\n    exportConfigDescription: null,\n    definitions: []\n  };\n\n  recordPickerOptions: IDefinitionPickerComponentOptions = {\n    label: '',\n    definitionType: RxDefinitionPickerType.Record,\n    availableDefinitionPickerStates: {\n      definitionButtonsGroups: [RX_DEFINITION_PICKER.definitionScopes.all],\n      search: RX_DEFINITION_PICKER.definitionScopes.all\n    },\n    required: true\n  };\n\n  associationPickerOptions: IDefinitionPickerComponentOptions = {\n    label: '',\n    definitionType: RxDefinitionPickerType.Association,\n    availableDefinitionPickerStates: {\n      definitionButtonsGroups: [RX_DEFINITION_PICKER.definitionScopes.all],\n      search: RX_DEFINITION_PICKER.definitionScopes.all\n    },\n    required: true\n  };\n\n  definitionTypes = {\n    record: 'record',\n    association: 'association'\n  };\n\n  definitionTypeOptions: RxSelectOption[] = [\n    {\n      value: this.definitionTypes.record,\n      displayValue: this.translateService.instant('com.bmc.arsys.rx.client.definition-type.record.label')\n    },\n    {\n      value: this.definitionTypes.association,\n      displayValue: this.translateService.instant('com.bmc.arsys.rx.client.definition-type.association.label')\n    }\n  ];\n\n  constructor(\n    private rxFieldDefinitionService: RxFieldDefinitionService,\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private rxRecordDefinitionService: RxRecordDefinitionService,\n    private adaptModalService: AdaptModalService,\n    private rxNotificationService: RxNotificationService,\n    private rxExpressionEditorService: RxExpressionEditorService,\n    private translateService: TranslateService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private definitionNameService: RxDefinitionNameService,\n    private dockedPanelContext: DockedPanelContext,\n    protected injector: Injector\n  ) {\n    super(dockedPanelContext, injector);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.expressionConfigurator = new DataExportFiltersExpressionConfigurator(this.injector);\n\n    this.expressionConfigurator.configureForProperty({\n      propertyPath: DL_DATA_EXPORT.associationDefinitionDataFilterProperty,\n      dataDictionary$: this.index$.pipe(\n        switchMap((index: number) =>\n          this.recordDefinitionNames$[index].pipe(\n            switchMap((recordDefinitionName: string) =>\n              this.expressionConfigurator.geDataDefinitionField(\n                this.exportConfiguration.definitions[index].type,\n                recordDefinitionName\n              )\n            )\n          )\n        )\n      ),\n      operators: this.expressionConfigurator.getOperatorRowsByGroup(ExpressionOperatorGroup.All)\n    });\n\n    this.dataFilterExpressionOptions = {\n      label: this.translateService.instant(\n        'com.bmc.arsys.rx.client.dataload.export.new-configuration.data-filters.label'\n      ),\n      dataDictionary$: this.expressionConfigurator.getDataDictionary(\n        DL_DATA_EXPORT.associationDefinitionDataFilterProperty\n      ),\n      operators: this.expressionConfigurator.getOperators(DL_DATA_EXPORT.associationDefinitionDataFilterProperty)\n    };\n  }\n\n  addDefinition(): void {\n    this.markAsDirty();\n    const nextRowIndex = this.exportConfiguration.definitions.length;\n\n    this.recordDefinitionNames$[nextRowIndex] = new BehaviorSubject(null);\n\n    this.definitionFields$[nextRowIndex] = this.recordDefinitionNames$[nextRowIndex].pipe(\n      takeUntil(this.destroyed$),\n      switchMap((definitionName: string) => {\n        return iif(\n          () =>\n            definitionName && this.exportConfiguration.definitions[nextRowIndex].type === this.definitionTypes.record,\n          this.rxRecordDefinitionService.get(definitionName),\n          of({ fieldDefinitions: [] })\n        );\n      }),\n      map((response: IRecordDefinition) => {\n        return response.fieldDefinitions\n          .sort((a, b) => {\n            if (this.rxFieldDefinitionService.isCoreField(a)) {\n              return -1;\n            }\n\n            if (this.rxFieldDefinitionService.isCoreField(b)) {\n              return 1;\n            }\n\n            if (a.fieldOption === RX_RECORD_DEFINITION.fieldOptions.required) {\n              return -1;\n            }\n\n            if (b.fieldOption === RX_RECORD_DEFINITION.fieldOptions.required) {\n              return 1;\n            }\n\n            return Number(a.id) - Number(b.id);\n          })\n          .map((fieldDefinition: IFieldDefinition, index) => ({\n            name: fieldDefinition.name,\n            id: fieldDefinition.id,\n            disabled:\n              fieldDefinition.fieldOption === RX_RECORD_DEFINITION.fieldOptions.required &&\n              fieldDefinition.defaultValue === null,\n            visibleOnPreviewPriority: index\n          })) as ICriteriaField[];\n      }),\n      tap((criteriaFields: ICriteriaField[]) => {\n        this.exportConfiguration.definitions[nextRowIndex].criteria.fields = criteriaFields\n          .filter((criteriaField: ICriteriaField) => criteriaField.disabled)\n          .map((criteriaField: ICriteriaField) => ({\n            ...criteriaField\n          }));\n      })\n    );\n\n    this.exportConfiguration.definitions.push({\n      type: 'record',\n      name: null,\n      criteria: {\n        filter: null,\n        fields: []\n      }\n    });\n  }\n\n  remove(index: number): void {\n    this.exportConfiguration.definitions.splice(index, 1);\n  }\n\n  cancel(): void {\n    this.dockedPanelContext.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  onDefinitionChange(definitionName: string, rowIndex: number): void {\n    if (definitionName && !this.definitionNameService.getBundleId(definitionName)) {\n      this.rxNotificationService.addErrorMessage(\n        this.translateService.instant('com.bmc.arsys.rx.client.dataload.global-record-not-allowed.message')\n      );\n\n      this.changeDetectorRef.detectChanges();\n      this.exportConfiguration.definitions[rowIndex].name = null;\n    } else {\n      this.exportConfiguration.definitions[rowIndex].criteria.filter = null;\n      this.index$.next(rowIndex);\n      this.recordDefinitionNames$[rowIndex].next(definitionName);\n    }\n  }\n\n  onExpressionEvent(rowIndex: number): void {\n    this.index$.next(rowIndex);\n\n    this.rxExpressionEditorService\n      .openEditor({\n        property: {\n          path: DL_DATA_EXPORT.associationDefinitionDataFilterProperty,\n          value: this.exportConfiguration.definitions[rowIndex].criteria.filter,\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.dataload.export.new-configuration.data-filters.label'\n          )\n        },\n        expressionConfigurator: this.expressionConfigurator,\n        legend: [\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'),\n            icon: 'd-icon-dollar'\n          },\n          {\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.innovation-studio.bundle-action-wizard.add-data.expression-editor.legend.activity-result.label'\n            ),\n            icon: 'd-icon-field_text'\n          }\n        ]\n      })\n      .subscribe((expression: IExpressionEditorPropertyChange) => {\n        this.exportConfiguration.definitions[rowIndex].criteria.filter = expression.value || null;\n      });\n  }\n\n  isSaveButtonDisabled(): boolean {\n    return (\n      this.isSaveInProgress ||\n      !this.exportConfiguration.definitions.length ||\n      some(this.exportConfiguration.definitions, (definition: IExportConfigurationDefinition) => {\n        return (\n          (definition.type === this.definitionTypes.record &&\n            (!definition.name || !definition.criteria.fields.length)) ||\n          (definition.type === this.definitionTypes.association && !definition.name)\n        );\n      })\n    );\n  }\n\n  saveExportConfiguration(): void {\n    this.isSaveInProgress = true;\n\n    this.rxRecordInstanceService\n      .getNew(DL_DATA_EXPORT.recordDefinitionName)\n      .pipe(\n        switchMap((recordInstance: RecordInstance) => {\n          recordInstance.setFieldValue(DL_DATA_EXPORT.fields.name, this.exportConfiguration.exportConfigName);\n\n          recordInstance.setFieldValue(\n            DL_DATA_EXPORT.fields.configDescription,\n            this.exportConfiguration.exportConfigDescription\n          );\n\n          recordInstance.setFieldValue(\n            DL_DATA_EXPORT.fields.configurations,\n            JSON.stringify({\n              definitions: _map(\n                cloneDeep(this.exportConfiguration.definitions),\n                (definition: IExportConfigurationDefinition) => {\n                  definition.criteria.fields = _map(definition.criteria.fields, (field: ICriteriaField) => ({\n                    id: field.id,\n                    name: field.name\n                  }));\n\n                  return definition;\n                }\n              )\n            })\n          );\n\n          return this.rxRecordInstanceService.create(recordInstance);\n        }),\n        finalize(() => {\n          this.isSaveInProgress = false;\n        })\n      )\n      .subscribe(() => {\n        this.dockedPanelContext.close(null);\n      });\n  }\n\n  clearFieldsSelection(index: number): void {\n    this.exportConfiguration.definitions[index].name = null;\n    this.exportConfiguration.definitions[index].criteria.filter = null;\n    this.exportConfiguration.definitions[index].criteria.fields = [];\n  }\n\n  openExportingDataPreview(definition: IExportConfigurationDefinition): void {\n    this.adaptModalService\n      .open({\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.dataload.export.new-configuration.preview-data.label'\n        ),\n        content: ExportDataPreviewComponent,\n        size: 'lg',\n        data: {\n          definitionName: definition.name,\n          selectedFields: definition.criteria.fields,\n          queryFilter: definition.criteria.filter\n        }\n      })\n      .catch(noop);\n  }\n\n  isPreviewDisabled(definition: IExportConfigurationDefinition): boolean {\n    return !definition.name || !definition.criteria.fields.length;\n  }\n\n  ngOnDestroy(): void {\n    forEach(this.recordDefinitionNames$, (name$: BehaviorSubject<string>) => name$.complete());\n\n    this.index$.complete();\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  optionFormatter(field: RxSelectOption): string {\n    return field.name;\n  }\n}\n","<div class=\"dp-body\">\n  <adapt-rx-textfield\n    class=\"form-group d-block\"\n    rx-id=\"export-config-name\"\n    label=\"{{ 'com.bmc.arsys.rx.client.common.name.label' | translate }}\"\n    name=\"exportConfigName\"\n    [(ngModel)]=\"exportConfiguration.exportConfigName\"\n    [required]=\"true\"\n    maxlength=\"254\"\n    [autofocus]=\"true\"\n    (ngModelChange)=\"markAsDirty()\"\n    #exportConfigName=\"ngModel\"\n  >\n  </adapt-rx-textfield>\n\n  <adapt-rx-textfield\n    class=\"form-group d-block\"\n    rx-id=\"export-config-description\"\n    label=\"{{ 'com.bmc.arsys.rx.client.common.description.label' | translate }}\"\n    name=\"exportConfigDescription\"\n    [(ngModel)]=\"exportConfiguration.exportConfigDescription\"\n    maxlength=\"254\"\n    (ngModelChange)=\"markAsDirty()\"\n    #exportConfigDescription=\"ngModel\"\n  >\n  </adapt-rx-textfield>\n\n  <button\n    adapt-button\n    type=\"button\"\n    btn-type=\"tertiary\"\n    class=\"d-icon-plus_circle px-0\"\n    rx-id=\"add-definition-button\"\n    (click)=\"addDefinition()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.dataload.export.new-configuration.add-definition-button.label' | translate }}\n  </button>\n\n  <adapt-accordion [multiselect]=\"true\">\n    <div\n      *ngFor=\"let definition of exportConfiguration.definitions; let $index = index\"\n      class=\"position-relative form-group\"\n    >\n      <span class=\"actions\">\n        <button\n          class=\"d-icon-left-cross_adapt py-0 pr-3 btn btn-sm\"\n          adapt-button\n          size=\"small\"\n          type=\"button\"\n          (click)=\"remove($index)\"\n        >\n          {{ 'com.bmc.arsys.rx.client.common.remove.label' | translate }}\n        </button>\n      </span>\n\n      <adapt-accordion-tab class=\"w-100 d-block\" isOpen=\"true\">\n        <adapt-rx-radiobutton-group\n          [(ngModel)]=\"definition.type\"\n          label=\"{{ 'com.bmc.arsys.rx.client.dataload.export.new-configuration.definition.label' | translate }}\"\n          [required]=\"true\"\n        >\n          <adapt-rx-radiobutton\n            *ngFor=\"let definitionType of definitionTypeOptions; let index = index\"\n            class=\"radio-inline m-0\"\n            [value]=\"definitionType.value\"\n            [label]=\"definitionType.displayValue\"\n            [ngClass]=\"{ 'mr-3': index === 0 }\"\n            (checkedChange)=\"clearFieldsSelection($index)\"\n          ></adapt-rx-radiobutton>\n        </adapt-rx-radiobutton-group>\n\n        <rx-definition-picker\n          class=\"d-block form-group\"\n          *ngIf=\"definition.type === definitionTypes.record\"\n          [options]=\"recordPickerOptions\"\n          rx-id=\"record-definition-picker\"\n          [(ngModel)]=\"definition.name\"\n          (ngModelChange)=\"onDefinitionChange($event, $index)\"\n        >\n        </rx-definition-picker>\n\n        <rx-definition-picker\n          class=\"d-block form-group\"\n          *ngIf=\"definition.type === definitionTypes.association\"\n          [options]=\"associationPickerOptions\"\n          rx-id=\"association-definition-picker\"\n          [(ngModel)]=\"definition.name\"\n          (ngModelChange)=\"onDefinitionChange($event, $index)\"\n        >\n        </rx-definition-picker>\n\n        <div [hidden]=\"!definition.name\">\n          <div *ngIf=\"definitionFields$[$index] | async as options\">\n            <adapt-rx-select\n              class=\"d-block form-group\"\n              [(ngModel)]=\"definition.criteria.fields\"\n              *ngIf=\"definition.type === definitionTypes.record\"\n              label=\"{{ 'com.bmc.arsys.rx.client.dataload.export.new-configuration.fields.label' | translate }}\"\n              [options]=\"options\"\n              [required]=\"true\"\n              [multiple]=\"true\"\n              [enableFilter]=\"true\"\n              [selectAllButton]=\"true\"\n              [deselectAllButton]=\"true\"\n              [optionFormatter]=\"optionFormatter\"\n              [attr.rx-id]=\"'definition-' + $index + '_fields'\"\n            >\n            </adapt-rx-select>\n          </div>\n\n          <rx-expression-form-control\n            class=\"d-block form-group\"\n            rx-id=\"data-filter\"\n            [options]=\"dataFilterExpressionOptions\"\n            [(ngModel)]=\"definition.criteria.filter\"\n            (events)=\"onExpressionEvent($index)\"\n          ></rx-expression-form-control>\n\n          <button\n            type=\"button\"\n            adapt-button\n            btn-type=\"secondary\"\n            rx-id=\"preview-button\"\n            (click)=\"openExportingDataPreview(definition)\"\n            *ngIf=\"definition.type === definitionTypes.record\"\n            [disabled]=\"isPreviewDisabled(definition)\"\n          >\n            {{ 'com.bmc.arsys.rx.client.dataload.export.new-configuration.preview-data.label' | translate }}\n          </button>\n        </div>\n      </adapt-accordion-tab>\n    </div>\n  </adapt-accordion>\n</div>\n\n<div class=\"dp-footer\">\n  <button\n    type=\"button\"\n    adapt-button\n    btn-type=\"primary\"\n    rx-id=\"save-button\"\n    class=\"mr-2\"\n    [adaptInlineLoader]=\"isSaveInProgress\"\n    [disabled]=\"exportConfigName.invalid || exportConfigDescription.invalid || isSaveButtonDisabled()\"\n    (click)=\"saveExportConfiguration()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button type=\"button\" adapt-button (click)=\"cancel()\" btn-type=\"secondary\" rx-id=\"cancel-button\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n"]}