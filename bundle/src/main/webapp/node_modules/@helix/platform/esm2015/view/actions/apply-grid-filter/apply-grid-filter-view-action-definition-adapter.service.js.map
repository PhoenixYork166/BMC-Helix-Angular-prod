{"version":3,"file":"apply-grid-filter-view-action-definition-adapter.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/actions/apply-grid-filter/apply-grid-filter-view-action-definition-adapter.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAIL,8BAA8B,EAC/B,MAAM,0BAA0B,CAAC;AAElC,OAAO,EAGL,+BAA+B,EAChC,MAAM,iCAAiC,CAAC;AACzC,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;;;;AAK5D,MAAM,OAAO,mDAAmD;IAG9D,YACU,mBAAwC,EACxC,+BAAgE;QADhE,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,oCAA+B,GAA/B,+BAA+B,CAAiC;IACvE,CAAC;IAEJ,eAAe,CAAC,EACd,oBAAoB,EACpB,gBAAgB,EAC8D;QAC9E,MAAM,iBAAiB,GAA0B,oBAAoB,CAAC,GAAG,CACvE,CAAC,UAAsE,EAAE,EAAE;YACzE,IAAI,KAAK,GAAG,UAAU,CAAC,gBAAgB,CAAC,KAAK,CAAC;YAC9C,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAEjE,IAAI,WAAW,IAAI,WAAW,CAAC,8BAA8B,CAAC,EAAE;gBAC9D,KAAK,GAAG,WAAW,CAAC;aACrB;YAED,OAAO;gBACL,IAAI,EAAE,UAAU,CAAC,IAAI;gBACrB,OAAO,EAAE,UAAU,CAAC,gBAAgB,CAAC,OAAO;gBAC5C,KAAK;aACN,CAAC;QACJ,CAAC,CACF,CAAC;QAEF,+BAA+B;QAC/B,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,+BAA+B,CAAC,2CAA2C,CACzG,gBAAgB,CAAC,OAAO,EACxB,iBAAiB,CAClB,CAAC;IACJ,CAAC;;gJAlCU,mDAAmD;oJAAnD,mDAAmD,cAFlD,MAAM;2FAEP,mDAAmD;kBAH/D,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { IDefinitionAdapter } from '@helix/platform/shared/api';\nimport {\n  IContainerViewComponentDefinition,\n  IViewComponentDefinition,\n  IViewDefinition,\n  RecordGridNamedFilterOptionKey\n} from '@helix/platform/view/api';\nimport { IApplyGridFilterViewActionDesignProperties } from './apply-grid-filter-view-action.types';\nimport {\n  IRecordGridFilterDescriptorModel,\n  IRxRecordGridFilter,\n  RxRecordGridFilterHelperService\n} from '@helix/platform/view/components';\nimport { RxJsonParserService } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxApplyGridFilterViewActionDefinitionAdapterService\n  implements IDefinitionAdapter<IViewComponentDefinition, IViewDefinition>\n{\n  constructor(\n    private rxJsonParserService: RxJsonParserService,\n    private rxRecordGridFilterHelperService: RxRecordGridFilterHelperService\n  ) {}\n\n  adaptDefinition({\n    componentDefinitions,\n    propertiesByName\n  }: IContainerViewComponentDefinition<IApplyGridFilterViewActionDesignProperties>) {\n    const recordGridFilters: IRxRecordGridFilter[] = componentDefinitions.map(\n      (definition: IViewComponentDefinition<IRecordGridFilterDescriptorModel>) => {\n        let value = definition.propertiesByName.value;\n        const parsedValue = this.rxJsonParserService.tryParseJson(value);\n\n        if (parsedValue && parsedValue[RecordGridNamedFilterOptionKey]) {\n          value = parsedValue;\n        }\n\n        return {\n          guid: definition.guid,\n          fieldId: definition.propertiesByName.fieldId,\n          value\n        };\n      }\n    );\n\n    // @ts-ignore - converting type\n    propertiesByName.filters = this.rxRecordGridFilterHelperService.getRecordGridFilterDataFromPredefinedFilter(\n      propertiesByName.filters,\n      recordGridFilters\n    );\n  }\n}\n"]}