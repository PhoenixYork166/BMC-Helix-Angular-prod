{"version":3,"file":"user-preferences.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/components/user-preferences/user-preferences.component.ts","../../../../../../../libs/platform/shared/components/user-preferences/user-preferences.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActiveModalRef, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport {\n  RecordInstance,\n  RX_RECORD_DEFINITION,\n  RxRecordInstanceDataPageService,\n  RxRecordInstanceService\n} from '@helix/platform/record/api';\nimport { RxCurrentUserService } from '@helix/platform/shared/api';\nimport { get } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { RX_USER_PREFERENCES } from './user-preferences.constants';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-user-preferences',\n  templateUrl: './user-preferences.component.html'\n})\nexport class RxUserPreferencesComponent implements OnInit {\n  private preferredLocale: string;\n  private recordInstance: RecordInstance;\n  private defaultSelection = this.translateService.instant('com.bmc.arsys.rx.client.common.select.label');\n\n  queryInProgress: boolean;\n  selectedLocale: RxSelectOption[] = [];\n  isAbleToChangeLocale: boolean;\n  supportedLocales: RxSelectOption[] = RX_USER_PREFERENCES.supportedLocales;\n\n  constructor(\n    private activeModalRef: ActiveModalRef,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService,\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit(): void {\n    this.init();\n  }\n\n  init(): void {\n    this.preferredLocale = this.rxCurrentUserService.getPreferredLocale();\n    this.isAbleToChangeLocale = !this.preferredLocale;\n\n    if (this.isAbleToChangeLocale) {\n      this.queryInProgress = true;\n\n      this.rxRecordInstanceDataPageService\n        .post({\n          params: {\n            recorddefinition: RX_USER_PREFERENCES.userPreference.recordDefinitionName,\n            queryExpression:\n              \"('\" +\n              RX_USER_PREFERENCES.userPreference.fieldIds.name +\n              '\\' = \"' +\n              RX_USER_PREFERENCES.preferenceNames.locale +\n              '\" AND \\'' +\n              RX_USER_PREFERENCES.userPreference.fieldIds.loginName +\n              '\\' = \"' +\n              this.rxCurrentUserService.getName() +\n              '\")',\n            propertySelection: [RX_RECORD_DEFINITION.coreFieldIds.id]\n          }\n        })\n        .pipe(\n          switchMap((dataPageResult) => {\n            if (dataPageResult.totalSize) {\n              return this.rxRecordInstanceService.get(\n                RX_USER_PREFERENCES.userPreference.recordDefinitionName,\n                dataPageResult.data[0][RX_RECORD_DEFINITION.coreFieldIds.id]\n              );\n            } else {\n              return this.rxRecordInstanceService.getNew(RX_USER_PREFERENCES.userPreference.recordDefinitionName);\n            }\n          })\n        )\n        .subscribe((recordInstance: RecordInstance) => {\n          this.recordInstance = recordInstance;\n          const selectedLocaleId = this.recordInstance.getFieldValue(RX_USER_PREFERENCES.userPreference.fieldIds.value);\n\n          this.selectedLocale = [this.supportedLocales.find((locale) => locale.id === selectedLocaleId)];\n          this.queryInProgress = false;\n        });\n    } else {\n      this.selectedLocale = [this.supportedLocales.find((locale) => locale.id === this.preferredLocale)];\n    }\n  }\n\n  applyUserPreferences(): void {\n    let save$: Observable<any>;\n\n    this.queryInProgress = true;\n    const selectedLocaleId = get(this.selectedLocale, '[0].id', '');\n\n    this.recordInstance.setFieldValue(RX_USER_PREFERENCES.userPreference.fieldIds.value, selectedLocaleId);\n\n    if (this.recordInstance.id) {\n      save$ = this.rxRecordInstanceService.save(this.recordInstance);\n    } else {\n      this.recordInstance.setFieldValue(\n        RX_USER_PREFERENCES.userPreference.fieldIds.name,\n        RX_USER_PREFERENCES.preferenceNames.locale\n      );\n\n      this.recordInstance.setFieldValue(\n        RX_USER_PREFERENCES.userPreference.fieldIds.loginName,\n        this.rxCurrentUserService.getName()\n      );\n\n      save$ = this.rxRecordInstanceService.create(this.recordInstance);\n    }\n\n    save$.subscribe(() => {\n      this.queryInProgress = false;\n      this.activeModalRef.close();\n    });\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss();\n  }\n\n  optionFormatter = (option: RxSelectOption): string => {\n    return get(option, 'name', this.defaultSelection);\n  };\n}\n","<rx-line-loader\n  *ngIf=\"queryInProgress\"\n  [loaderMessage]=\"'com.bmc.arsys.rx.client.common.loading-data' | translate\"\n></rx-line-loader>\n\n<div [hidden]=\"queryInProgress\" class=\"modal-body\">\n  <form name=\"userPreferencesForm\" novalidate #userPreferencesForm=\"ngForm\">\n    <adapt-rx-select\n      [disabled]=\"!isAbleToChangeLocale || queryInProgress\"\n      [emptyOption]=\"true\"\n      [name]=\"'userPreference'\"\n      [(ngModel)]=\"selectedLocale\"\n      [label]=\"'com.bmc.arsys.rx.client.shell.user-preferences-dialog.language.label' | translate\"\n      [optionFormatter]=\"optionFormatter\"\n      [options]=\"supportedLocales\"\n      rx-id=\"preferred-language\"\n    >\n    </adapt-rx-select>\n    <p class=\"text-danger align-start\" *ngIf=\"!isAbleToChangeLocale\">\n      <span class=\"alert-content\">\n        {{ 'com.bmc.arsys.rx.client.shell.user-preferences-dialog.validation.error.message' | translate }}\n      </span>\n    </p>\n  </form>\n</div>\n\n<div class=\"modal-footer\">\n  <button\n    type=\"button\"\n    class=\"btn btn-primary btn-sm\"\n    [disabled]=\"!userPreferencesForm.dirty\"\n    (click)=\"applyUserPreferences()\"\n    rx-id=\"save-button\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.apply.label' | translate }}\n  </button>\n  <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"cancel()\" rx-id=\"cancel-button\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n"]}