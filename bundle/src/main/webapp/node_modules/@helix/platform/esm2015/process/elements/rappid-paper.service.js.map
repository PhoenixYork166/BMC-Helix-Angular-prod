{"version":3,"file":"rappid-paper.service.js","sourceRoot":"","sources":["../../../../../../libs/platform/process/elements/rappid-paper.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { assign, compact, debounce, find, forEach, includes, map } from 'lodash';\nimport { IProcessDefinition, IProcessInstance, RxProcessElementSearchService } from '@helix/platform/process/api';\nimport { RX_GUID, RxIdService, RxTreeService } from '@helix/platform/utils';\nimport { RX_DESIGNER_ELEMENT_SHAPE } from '@helix/platform/shared/api';\nimport { RxDesignerCellHighlighter } from './designer-cell-highlighter.class';\nimport { RxProcessElementService } from './process-element.service';\nimport * as processShapes from './process-shapes';\n\ndeclare var joint: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRappidPaperService {\n  private green = '#89c341';\n  private gray = '#999999';\n  private red = '#f83200';\n\n  constructor(\n    private rxIdService: RxIdService,\n    private rxProcessElementService: RxProcessElementService,\n    private rxProcessElementSearchService: RxProcessElementSearchService,\n    private rxTreeService: RxTreeService\n  ) {\n    assign(joint.shapes.bpmn.icons, RX_DESIGNER_ELEMENT_SHAPE.bpmnIcons);\n  }\n\n  init(element, graph?, shouldZoomToFit: boolean = false) {\n    // : PaperScroller\n    // Do not instantiate paper with width or height parameters equal to 0, (e.g element is hidden in the DOM),\n    // otherwise it will cause RappidJS issue in the Firefox Browser. See DRIST-18107 for more details.\n    const paper = new joint.dia.Paper({\n      width: element.width || 1,\n      height: element.height || 1,\n      model: new joint.dia.Graph(\n        {},\n        {\n          cellNamespace: processShapes\n        }\n      ),\n      cellViewNamespace: processShapes,\n      interactive: false,\n\n      // specifying a non-existent theme to prevent rappid from overriding our styles\n      // due to 'default' theme being applied\n      theme: 'rx'\n    });\n\n    const paperScroller = new joint.ui.PaperScroller({\n      autoResizePaper: true,\n      paper: paper,\n      padding: {\n        padding: 10\n      }\n    });\n\n    element.appendChild(paperScroller.render().el);\n\n    paperScroller.options.paper.on('blank:pointerdown', paperScroller.startPanning);\n\n    this.resetScroll(paperScroller);\n\n    if (graph) {\n      paperScroller.options.paper.model.fromJSON(graph);\n\n      if (shouldZoomToFit) {\n        this.zoomToFit(paperScroller);\n      }\n    }\n\n    return paperScroller;\n  }\n\n  setGraph(\n    paperScroller,\n    processDefinition: IProcessDefinition,\n    processInstance: IProcessInstance,\n    shouldZoomToFit: boolean = false\n  ): void {\n    const graph = this.rxProcessElementService.getGraph(processDefinition);\n\n    const paper = paperScroller.options.paper;\n\n    paper.model.fromJSON(graph);\n\n    if (shouldZoomToFit) {\n      this.zoomToFit(paperScroller);\n    }\n\n    forEach(processInstance.activities, (activity) => {\n      const activityId = this.rxIdService.getBase(activity.activityId);\n      const cell = paper.findViewByModel(activityId);\n\n      if (cell) {\n        if (activity.activities.length && cell.model.get('expanded')) {\n          const subProcessActivities = this.rxTreeService.flattenTree(activity, 'activities');\n          const elements = paper.model.getElements();\n          const graphIds = map(elements, 'id');\n\n          const originalGraphIds = compact(map(elements, (element) => element.get('originalGuid')));\n\n          forEach(subProcessActivities, (subProcessActivity) => {\n            // we need to do this check in order to filter inner elements that are in process\n            // instance json but are not present in graph as their parent is not expanded\n            if (includes(graphIds, this.rxIdService.getBase(subProcessActivity.activityId))) {\n              this.highlightActivity(subProcessActivity, paper, processDefinition);\n            } else if (originalGraphIds && includes(originalGraphIds, subProcessActivity.activityId)) {\n              this.highlightActivity(subProcessActivity, paper, processDefinition);\n            }\n          });\n\n          this.highlightActivity(activity, paper, processDefinition);\n        } else {\n          this.highlightActivity(activity, paper, processDefinition);\n        }\n      }\n    });\n\n    if (processInstance.exceptionMessage) {\n      // exceptionMessage will be like <activityName>(<acitivityGuid>) - [<errorMessage>]\n      // RegExp - find guid from exceptionMessage\n      const guidPattern = new RegExp('\\\\((' + RX_GUID.baseIdPattern + ')\\\\)', 'i');\n      const activityId = guidPattern.exec(processInstance.exceptionMessage);\n\n      if (activityId[0]) {\n        const activityBaseId = this.rxIdService.getBase(activityId[1]);\n\n        this.highlightCell(activityBaseId, paper, this.red, processDefinition);\n      }\n    }\n\n    this.resetScroll(paperScroller);\n  }\n\n  private highlight(cellView, color) {\n    if (cellView instanceof joint.dia.CellView) {\n      const cellHighlighter = new RxDesignerCellHighlighter(cellView);\n\n      cellHighlighter.init({\n        strokeWidth: 10,\n        color: color\n      });\n    }\n  }\n\n  private highlightActivity(activity, paper, plainProcessDefinition) {\n    const activityId = this.rxIdService.getBase(activity.activityId);\n    const color = activity.endTime ? this.gray : this.green;\n\n    this.highlightCell(activityId, paper, color, plainProcessDefinition);\n  }\n\n  private highlightCell(cellId, paper, color, plainProcessDefinition) {\n    const elements = paper.model.getElements();\n\n    let cell;\n    let cellView;\n\n    if (!includes(map(elements, 'id'), cellId)) {\n      cell = find(elements, (element) => element.get('originalGuid') === this.rxIdService.get(cellId));\n\n      cellId = cell ? cell.id : cellId;\n    }\n\n    cellView = paper.findViewByModel(cellId);\n\n    if (cellView) {\n      this.highlight(cellView, color);\n    } else {\n      this.highlightVisibleErroredCell(cellId, false, paper, plainProcessDefinition);\n\n      // Used to highlight errored cell inside expanded sub-processes\n      paper.model.on(\n        'change',\n        debounce(() => {\n          this.highlightVisibleErroredCell(cellId, true, paper, plainProcessDefinition);\n        }, 100)\n      );\n    }\n  }\n\n  private highlightVisibleErroredCell(cellId, isFirstEntry, paper, plainProcessDefinition) {\n    const owner = this.rxProcessElementSearchService.findOwner(plainProcessDefinition, this.rxIdService.get(cellId));\n\n    let cellView;\n    let erroredElement;\n\n    if (isFirstEntry) {\n      erroredElement = find(owner.flowElements, { guid: this.rxIdService.get(cellId) });\n      cellView = paper.findViewByModel(this.rxIdService.getBase(erroredElement.guid));\n    }\n\n    if (!cellView) {\n      cellView = paper.findViewByModel(this.rxIdService.getBase(owner.guid));\n    }\n\n    if (cellView) {\n      this.highlight(cellView, this.red);\n    } else {\n      this.highlightVisibleErroredCell(owner.guid, false, paper, plainProcessDefinition);\n    }\n  }\n\n  private resetScroll(paperScroller) {\n    paperScroller.el.scrollTop = 0;\n    paperScroller.el.scrollLeft = 0;\n  }\n\n  private zoomToFit(paperScroller) {\n    setTimeout(() => {\n      paperScroller.zoomToFit({\n        padding: 10\n      });\n    });\n  }\n}\n"]}