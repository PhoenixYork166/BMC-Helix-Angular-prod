{"version":3,"file":"date-field.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/field-components/date-field/runtime/date-field.component.ts","../../../../../../../../../libs/platform/view/components/field-components/date-field/runtime/date-field.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAC3C,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAEpD,OAAO,EAAE,sBAAsB,EAAE,oBAAoB,EAAE,MAAM,uBAAuB,CAAC;AAErF,OAAO,MAAM,MAAM,YAAY,CAAC;AAChC,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AACnD,OAAO,EAAE,8BAA8B,EAAE,MAAM,iFAAiF,CAAC;;;;;;AAOjI,MAAM,OAAO,kBAAmB,SAAQ,8BAA8B;IACpE,YAAY,QAAkB,EAAU,QAAkB;QACxD,KAAK,CAAC,QAAQ,CAAC,CAAC;QADsB,aAAQ,GAAR,QAAQ,CAAU;IAE1D,CAAC;IAED,eAAe;QACb,MAAM,YAAY,GAAG,KAAK,CAAC,eAAe,EAAE,CAAC;QAE7C,IAAI,YAAY,EAAE;YAChB,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;SAC5D;IACH,CAAC;IAED,kBAAkB;QAChB,MAAM,WAAW,GAAG,CAAC,OAAwB,EAAoB,EAAE;YACjE,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAE1D,OAAO,OAAO,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBAC7C,CAAC,CAAC,EAAE,gBAAgB,EAAE,EAAE,IAAI,EAAE,oBAAoB,CAAC,IAAI,EAAE,EAAE;gBAC3D,CAAC,CAAC,IAAI,CAAC;QACX,CAAC,CAAC;QAEF,OAAO,CAAC,WAAW,CAAC,CAAC;IACvB,CAAC;;+GAvBU,kBAAkB;mGAAlB,kBAAkB,wCAFlB,CAAC,EAAE,OAAO,EAAE,sBAAsB,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,iDCZzE,keAiBA;2FDHa,kBAAkB;kBAL9B,SAAS;mBAAC;oBACT,QAAQ,EAAE,eAAe;oBACzB,WAAW,EAAE,6BAA6B;oBAC1C,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,sBAAsB,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC;iBACxE","sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Component, Injector } from '@angular/core';\nimport { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { AdaptRxDatetimeAdapter, RxDatetimePickerMode } from '@bmc-ux/adapt-angular';\nimport { IViewComponent } from '@helix/platform/view/runtime';\nimport moment from 'moment-es6';\nimport { DateAdapter } from './date-adapter.class';\nimport { BaseRecordEditorFieldComponent } from '../../base-record-editor-field/runtime/base-record-editor-field-component.class';\n\n@Component({\n  selector: 'rx-date-field',\n  templateUrl: './date-field.component.html',\n  providers: [{ provide: AdaptRxDatetimeAdapter, useClass: DateAdapter }]\n})\nexport class DateFieldComponent extends BaseRecordEditorFieldComponent implements IViewComponent {\n  constructor(injector: Injector, private datePipe: DatePipe) {\n    super(injector);\n  }\n\n  getDisplayValue(): string {\n    const displayValue = super.getDisplayValue();\n\n    if (displayValue) {\n      return this.datePipe.transform(displayValue, 'mediumDate');\n    }\n  }\n\n  getFieldValidators(): ValidatorFn[] {\n    const validatorFn = (control: AbstractControl): ValidationErrors => {\n      const date = control.value ? moment(control.value) : null;\n\n      return control.value && date && !date.isValid()\n        ? { rxDatetimeFormat: { mode: RxDatetimePickerMode.Date } }\n        : null;\n    };\n\n    return [validatorFn];\n  }\n}\n","<ng-container *ngIf=\"!isHidden\">\n  <rx-read-only-field\n    *ngIf=\"inReadState; else editStateElementRef\"\n    [label]=\"label\"\n    [value]=\"getDisplayValue()\"\n  ></rx-read-only-field>\n</ng-container>\n\n<ng-template #editStateElementRef>\n  <adapt-rx-datetime\n    [label]=\"label\"\n    [required]=\"isRequired\"\n    [formControl]=\"formControl\"\n    [readonly]=\"isDisabled\"\n    [disabledStyleForReadonlyState]=\"true\"\n  ></adapt-rx-datetime>\n</ng-template>\n"]}