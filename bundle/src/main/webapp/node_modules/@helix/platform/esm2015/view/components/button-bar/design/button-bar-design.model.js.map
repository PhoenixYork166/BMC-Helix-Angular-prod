{"version":3,"file":"button-bar-design.model.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/components/button-bar/design/button-bar-design.model.ts"],"names":[],"mappings":"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","sourcesContent":["import { Tooltip } from '@helix/platform/shared/api';\nimport {\n  ISelectFormControlOptions,\n  SelectFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport {\n  IViewDesignerComponentModel,\n  RX_STANDARD_PROPS_DEFAULT_VALUES,\n  RxViewComponentType\n} from '@helix/platform/view/api';\nimport {\n  getStandardPropsInspectorConfigs,\n  IViewComponentDropPredicateData,\n  IViewDesignerInspectorConfig,\n  validateStandardProps,\n  ViewDesignerComponentModel\n} from '@helix/platform/view/designer';\nimport { isEmpty, values } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { RX_BUTTON_BAR, RxButtonBarAlignment } from '../button-bar.types';\nimport { IButtonBarProperties } from './button-bar-design.types';\n\nexport class ButtonBarDesignModel\n  extends ViewDesignerComponentModel<IButtonBarProperties>\n  implements IViewDesignerComponentModel<IButtonBarProperties>\n{\n  hasChildren$: Observable<boolean> = this.sandbox.getChildComponentGuids().pipe(map((guids) => !isEmpty(guids)));\n  componentProperties$ = this.sandbox.componentProperties$;\n\n  static getInitialProperties(initialProperties?: IButtonBarProperties): IButtonBarProperties {\n    return {\n      alignment: RxButtonBarAlignment.Left,\n      name: null,\n      ...RX_STANDARD_PROPS_DEFAULT_VALUES,\n      ...initialProperties\n    };\n  }\n\n  rxInit(): void {\n    this.componentProperties$.pipe(take(1)).subscribe(() => {\n      this.sandbox.updateInspectorConfig(this.getInspector());\n    });\n\n    this.sandbox.getComponentPropertyValue('name').subscribe((name) => {\n      const componentName = name ? `${this.sandbox.descriptor.name} (${name})` : this.sandbox.descriptor.name;\n\n      this.sandbox.setSettablePropertiesDataDictionary(componentName, [\n        {\n          label: 'Hidden',\n          expression: this.getExpressionForProperty('hidden')\n        }\n      ]);\n    });\n\n    this.componentProperties$.subscribe((props) => {\n      this.validate(props);\n    });\n  }\n\n  dropPredicate(data: IViewComponentDropPredicateData): boolean {\n    return data.draggedViewComponentDescriptor.type === RxViewComponentType.ActionButton;\n  }\n\n  private validate(model: IButtonBarProperties): void {\n    this.sandbox.setValidationIssues(validateStandardProps(model));\n  }\n\n  private getInspector(): IViewDesignerInspectorConfig {\n    return {\n      inspectorSectionConfigs: [\n        {\n          label: 'General',\n          controls: [\n            {\n              name: 'name',\n              component: TextFormControlComponent,\n              options: {\n                label: 'Name',\n                tooltip: new Tooltip('Enter a name to uniquely identify the Button bar.')\n              }\n            },\n            {\n              name: 'alignment',\n              component: SelectFormControlComponent,\n              options: {\n                label: 'Alignment',\n                options: values(RX_BUTTON_BAR.alignmentOptions),\n                sortAlphabetically: false\n              } as ISelectFormControlOptions\n            },\n            ...getStandardPropsInspectorConfigs()\n          ]\n        }\n      ]\n    };\n  }\n}\n"]}