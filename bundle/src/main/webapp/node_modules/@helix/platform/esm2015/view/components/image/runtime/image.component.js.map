{"version":3,"file":"image.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/components/image/runtime/image.component.ts","../../../../../../../../libs/platform/view/components/image/runtime/image.component.html"],"names":[],"mappings":"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","sourcesContent":["import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { RxRecordInstanceService, RxRecordInstanceUtilsService } from '@helix/platform/record/api';\nimport { RxLogService } from '@helix/platform/shared/api';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { TranslateService } from '@ngx-translate/core';\nimport { isEqual } from 'lodash';\nimport { Observable, throwError } from 'rxjs';\nimport { distinctUntilChanged, filter, map, shareReplay, takeUntil, tap } from 'rxjs/operators';\nimport { ImageAlignment, RX_IMAGE_ALIGNMENT_STYLES } from '../image.types';\nimport { IImageConfig } from './image.types';\n\n@Component({\n  selector: 'rx-image',\n  templateUrl: './image.component.html',\n  styleUrls: ['./image.component.scss']\n})\nexport class ImageComponent extends BaseViewComponent implements OnInit, OnDestroy {\n  @Input()\n  config: Observable<IImageConfig>;\n\n  state = {\n    recordDefinitionName: '',\n    recordInstanceId: '',\n    fieldId: '',\n    maxWidth: '',\n    imageUrl: null,\n    isImageBroken: false,\n    alignmentStyle: '',\n    altText: ''\n  };\n\n  api = {\n    setProperty: this.setProperty.bind(this)\n  };\n\n  fileName = '';\n\n  constructor(\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private rxLogService: RxLogService,\n    private httpClient: HttpClient,\n    private domSanitizer: DomSanitizer,\n    private translateService: TranslateService,\n    private rxRecordInstanceUtilsService: RxRecordInstanceUtilsService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.notifyPropertyChanged('api', this.api);\n\n    const config$ = this.config.pipe(\n      distinctUntilChanged(isEqual),\n      tap((config) => {\n        const newState = {\n          ...config\n        };\n\n        this.isHidden = newState.hidden;\n\n        if (!this.state.alignmentStyle && newState.alignment) {\n          newState.alignmentStyle = this.getAlignmentStyle(newState.alignment);\n        }\n\n        delete newState.alignment;\n\n        this.state = { ...this.state, ...newState };\n      }),\n      shareReplay(1)\n    );\n\n    config$\n      .pipe(\n        map(() => (this.state.recordInstanceId ? this.state.recordInstanceId : null)),\n        filter((recordInstanceId) => Boolean(recordInstanceId)),\n        distinctUntilChanged(),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe((recordInstanceId) => {\n        const imageUrl = this.rxRecordInstanceService.getAttachmentDownloadUrl(\n          this.state.recordDefinitionName,\n          Number(this.state.fieldId),\n          recordInstanceId\n        );\n\n        this.httpClient.get(imageUrl, { responseType: 'blob', observe: 'response' }).subscribe({\n          next: (response) => {\n            const fileStream = response.body;\n\n            this.fileName = this.rxRecordInstanceUtilsService.tryParseContentDisposition(\n              response.headers.get('content-disposition')\n            );\n\n            if (fileStream && fileStream.type.split('/')[0] === 'image') {\n              const fileReader = new FileReader();\n\n              fileReader.onloadend = () => {\n                this.state.imageUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(fileReader.result as string);\n                this.state.isImageBroken = false;\n                this.state.altText = this.fileName;\n              };\n\n              fileReader.onerror = this.onImageLoadFailed.bind(this);\n\n              fileReader.readAsDataURL(fileStream);\n            } else {\n              this.rxLogService.warning(`rx-image: attachment is not a valid image.`);\n              this.onImageLoadFailed();\n            }\n          },\n          error: (err: HttpErrorResponse) => {\n            this.state.imageUrl = null;\n            this.state.isImageBroken = false;\n            this.state.altText = '';\n          }\n        });\n      });\n  }\n\n  private onImageLoadFailed(): void {\n    this.state.imageUrl = null;\n    this.state.isImageBroken = true;\n\n    this.state.altText = this.translateService.instant(\n      'com.bmc.arsys.rx.client.view-components.image.invalid-image.label',\n      { imageName: this.fileName }\n    );\n  }\n\n  private getAlignmentStyle(alignment: ImageAlignment): string {\n    return RX_IMAGE_ALIGNMENT_STYLES[alignment];\n  }\n\n  private setProperty(propertyPath: string, value: any): void | Observable<never> {\n    if (propertyPath === 'hidden') {\n      this.isHidden = value;\n\n      this.notifyPropertyChanged(propertyPath, this.isHidden);\n    } else {\n      return throwError(`Image: property ${propertyPath} is not settable.`);\n    }\n  }\n}\n","<div *ngIf=\"!isHidden\" class=\"d-flex {{ state.alignmentStyle }} image-container\">\n  <img\n    class=\"image\"\n    *ngIf=\"state.imageUrl\"\n    [src]=\"state.imageUrl\"\n    [attr.alt]=\"state.altText\"\n    [style.max-width]=\"state.maxWidth\"\n  />\n\n  <span\n    *ngIf=\"state.isImageBroken\"\n    role=\"img\"\n    [attr.aria-label]=\"state.altText\"\n    class=\"broken-image d-icon-broken_image\"\n  ></span>\n</div>\n"]}