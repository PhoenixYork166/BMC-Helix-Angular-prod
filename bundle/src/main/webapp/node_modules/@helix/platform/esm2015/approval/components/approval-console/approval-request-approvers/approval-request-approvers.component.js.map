{"version":3,"file":"approval-request-approvers.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/approval/components/approval-console/approval-request-approvers/approval-request-approvers.component.ts","../../../../../../../../libs/platform/approval/components/approval-console/approval-request-approvers/approval-request-approvers.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { iif, Observable, of } from 'rxjs';\nimport {\n  IRecordGridColumn,\n  IRecordGridConfig,\n  IRecordGridDataPageParams,\n  RecordGridComponent\n} from '@helix/platform/view/components';\nimport { RX_APPROVAL_CONSOLE } from '../approval-console.constant';\nimport { IDataPageResult } from '@helix/platform/shared/api';\nimport { IRecordDefinition, RX_RECORD_DEFINITION, RxRecordInstanceDataPageService } from '@helix/platform/record/api';\nimport { omit } from 'lodash';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ApprovalGridType, IApprovalRequest, INeedAttentionRequest } from '../approval-console.types';\nimport { switchMap } from 'rxjs/operators';\nimport { RxApprovalConsoleService } from '../approval-console.service';\n\n@Component({\n  selector: 'rx-approval-request-approvers',\n  templateUrl: './approval-request-approvers.component.html',\n  styleUrls: ['./approval-request-approvers.component.scss']\n})\nexport class ApprovalRequestApproversComponent implements OnInit, OnChanges {\n  @Input()\n  approvalRequest: IApprovalRequest | INeedAttentionRequest;\n\n  @Input()\n  gridType: ApprovalGridType;\n\n  @ViewChild('requestApproversGrid')\n  requestApproversGrid: RecordGridComponent;\n\n  gridConfig$: Observable<IRecordGridConfig>;\n\n  constructor(\n    private translateService: TranslateService,\n    private rxApprovalConsoleService: RxApprovalConsoleService,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService\n  ) {}\n\n  ngOnInit(): void {\n    this.gridConfig$ = of({\n      enableRowSelection: null,\n      getData: (queryParams: IRecordGridDataPageParams) => this.getApproversData(queryParams),\n      columns: this.getColumns(),\n      getRecordDefinition: () => of(this.getRecordDefinition()),\n      recordDefinitionName: RX_APPROVAL_CONSOLE.requestDetailsGrid.approverDefinition,\n      styles: 'flex-fill'\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.approvalRequest?.currentValue) {\n      this.requestApproversGrid?.api.refresh().subscribe();\n    }\n  }\n\n  private getApproversData(queryParams: IRecordGridDataPageParams): Observable<IDataPageResult> {\n    return iif(\n      () => this.gridType === ApprovalGridType.NeedAttentionRequests,\n      this.rxApprovalConsoleService.getCurrentRequestDetails(\n        this.approvalRequest[RX_APPROVAL_CONSOLE.needAttentionRequestsGrid.fields.requestID],\n        this.approvalRequest[RX_APPROVAL_CONSOLE.needAttentionRequestsGrid.fields.application]\n      ),\n      of(this.approvalRequest as IApprovalRequest)\n    ).pipe(\n      switchMap((currentRequest: IApprovalRequest) =>\n        this.rxRecordInstanceDataPageService.post({\n          params: omit(\n            {\n              ...queryParams,\n              shouldIncludeTotalSize: true,\n              [RX_APPROVAL_CONSOLE.requestDetailsGrid.fields.requestNumber]:\n                currentRequest[RX_APPROVAL_CONSOLE.approvalRequestsGrid.fields.request],\n              [RX_APPROVAL_CONSOLE.requestDetailsGrid.fields.process]:\n                currentRequest[RX_APPROVAL_CONSOLE.approvalRequestsGrid.fields.process]\n            },\n            ['searchText', 'propertySelection']\n          )\n        })\n      )\n    );\n  }\n\n  private getRecordDefinition(): IRecordDefinition {\n    return {\n      fieldDefinitions: [\n        {\n          id: RX_APPROVAL_CONSOLE.requestDetailsGrid.fields.approver,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_RECORD_DEFINITION.coreFieldIds.status,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.selection,\n          optionNamesById: {\n            0: this.translateService.instant(RX_APPROVAL_CONSOLE.approvalRequestTypes.pending.labelKey),\n            1: this.translateService.instant(RX_APPROVAL_CONSOLE.approvalRequestTypes.approved.labelKey),\n            2: this.translateService.instant(RX_APPROVAL_CONSOLE.approvalRequestTypes.rejected.labelKey),\n            3: this.translateService.instant(RX_APPROVAL_CONSOLE.approvalRequestTypes.onHold.labelKey),\n            4: this.translateService.instant(RX_APPROVAL_CONSOLE.approvalRequestTypes.moreInfo.labelKey),\n            5: this.translateService.instant(RX_APPROVAL_CONSOLE.approvalRequestTypes.cancelled.labelKey),\n            6: this.translateService.instant(RX_APPROVAL_CONSOLE.approvalRequestTypes.error.labelKey),\n            7: this.translateService.instant(RX_APPROVAL_CONSOLE.approvalRequestTypes.closed.labelKey)\n          }\n        }\n      ]\n    };\n  }\n\n  private getColumns(): IRecordGridColumn[] {\n    return [\n      {\n        index: 0,\n        fieldId: RX_APPROVAL_CONSOLE.requestDetailsGrid.fields.approver.toString(),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.approval.console.approvers.grid.approver.title'),\n        filterable: false,\n        sortable: false\n      },\n      {\n        index: 1,\n        fieldId: RX_RECORD_DEFINITION.coreFieldIds.status.toString(),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.status.label')\n      }\n    ];\n  }\n}\n","<adapt-empty-state\n  type=\"objects\"\n  *ngIf=\"!approvalRequest\"\n  label=\"{{ 'com.bmc.arsys.rx.client.approval.console.no-request-selected.message' | translate }}\"\n></adapt-empty-state>\n\n<rx-record-grid [config]=\"gridConfig$\" *ngIf=\"approvalRequest\" #requestApproversGrid></rx-record-grid>\n"]}