{"version":3,"file":"association-design-helper.service.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/field-components/association/design/association-design-helper.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  IAssociationDefinition,\n  RX_ASSOCIATED_RECORD_NODE_SIDES,\n  RX_ASSOCIATION_DEFINITION,\n  RxAssociationDefinitionDataPageService\n} from '@helix/platform/association/api';\nimport {\n  IFieldDefinition,\n  IRecordDefinition,\n  RX_RECORD_DEFINITION,\n  RxRecordDefinitionCacheService\n} from '@helix/platform/record/api';\nimport {\n  IExpressionConfigurator,\n  IFormControlBuilderConfig,\n  RxDefinitionNameService\n} from '@helix/platform/shared/api';\nimport {\n  ExpressionInspectorControlComponent,\n  IExpressionInspectorControlOptions,\n  ISelectFormControlOptions,\n  RxDefinitionPickerComponent,\n  RxDefinitionPickerType,\n  SelectFormControlComponent,\n  SwitchFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { RxGuidService } from '@helix/platform/utils';\nimport {\n  RX_DISABLED_PROP_DEFAULT_VALUE,\n  RX_STANDARD_PROPS_DEFAULT_VALUES,\n  RxViewComponentType\n} from '@helix/platform/view/api';\nimport {\n  getDisabledFieldInspectorConfig,\n  getStandardPropsInspectorConfigs,\n  IViewComponentDesignSandbox,\n  IViewComponentDesignValidationIssue,\n  validateStandardProps,\n  ViewComponentAddComponentPayload\n} from '@helix/platform/view/designer';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RX_ASSOCIATION, RxAssociationEditingMode } from '../association.types';\nimport { IAssociationChildComponents, IAssociationDesignProperties } from './association-design.types';\nimport {\n  AssociationRecordFieldSelectorFormControlComponent,\n  IAssociatedRecordField\n} from './association-record-field-selector-field';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\n\n@Injectable()\nexport class AssociationDesignHelperService {\n  constructor(\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxAssociationDefinitionDataPageService: RxAssociationDefinitionDataPageService,\n    private rxGuidService: RxGuidService,\n    private rxDefinitionNameService: RxDefinitionNameService\n  ) {}\n\n  getDropdownModeInspectorControls(\n    recordDefinitionField: IFieldDefinition[],\n    associationDefinitionFilters: IAssociationDefinition[]\n  ): IFormControlBuilderConfig[] {\n    return [\n      {\n        name: 'fieldId',\n        component: SelectFormControlComponent,\n        options: {\n          label: 'Field to display',\n          options: recordDefinitionField\n            ? recordDefinitionField\n                .filter((associationDefinitionField) =>\n                  [\n                    RX_RECORD_DEFINITION.resourceTypes.character,\n                    RX_RECORD_DEFINITION.resourceTypes.localizedCharacter\n                  ].includes(associationDefinitionField.resourceType)\n                )\n                .map((associationDefinitionField) => ({\n                  id: String(associationDefinitionField.id),\n                  name: associationDefinitionField.name\n                }))\n            : [],\n          emptyOption: true,\n          required: true\n        } as ISelectFormControlOptions\n      },\n      {\n        name: 'filterByAssociation',\n        component: SelectFormControlComponent,\n        options: {\n          label: 'Filter by association',\n          options: associationDefinitionFilters\n            ? associationDefinitionFilters.map((associationDefinition) => ({\n                id: associationDefinition.name,\n                name: this.rxDefinitionNameService.getDisplayName(associationDefinition.name)\n              }))\n            : [],\n          emptyOption: true\n        } as ISelectFormControlOptions\n      }\n    ];\n  }\n\n  getDisplayedFieldsControl(recordDefinitionFields: IFieldDefinition[]): IFormControlBuilderConfig {\n    return {\n      name: 'displayedFields',\n      component: AssociationRecordFieldSelectorFormControlComponent,\n      options: {\n        label: 'Show/Hide fields',\n        fields: recordDefinitionFields,\n        required: true\n      }\n    };\n  }\n\n  getRecordIdControl(): IFormControlBuilderConfig {\n    return {\n      name: 'recordId',\n      component: ExpressionInspectorControlComponent,\n      options: {\n        label: 'Record ID',\n        isRequired: true\n      } as IExpressionInspectorControlOptions\n    };\n  }\n\n  getUseDefaultRolesControl(): IFormControlBuilderConfig {\n    return {\n      name: 'useDefaultRoles',\n      component: SwitchFormControlComponent,\n      options: {\n        label: 'Use default roles'\n      }\n    };\n  }\n\n  getNodeABRoleControls(): IFormControlBuilderConfig[] {\n    return [\n      {\n        name: 'nodeARole',\n        component: ExpressionInspectorControlComponent,\n        options: {\n          label: 'First record role'\n        } as IExpressionInspectorControlOptions\n      },\n      {\n        name: 'nodeBRole',\n        component: ExpressionInspectorControlComponent,\n        options: {\n          label: 'Second record role'\n        } as IExpressionInspectorControlOptions\n      }\n    ];\n  }\n\n  getViewModeInspectorControls(): IFormControlBuilderConfig[] {\n    return [\n      {\n        name: 'viewDefinitionNameForSelect',\n        component: RxDefinitionPickerComponent,\n        options: {\n          label: 'View for selecting associated records',\n          definitionType: RxDefinitionPickerType.View,\n          required: true\n        }\n      },\n      {\n        name: 'viewDefinitionNameForCreate',\n        component: RxDefinitionPickerComponent,\n        options: {\n          label: 'View for creating associated records',\n          definitionType: RxDefinitionPickerType.View\n        }\n      }\n    ];\n  }\n\n  getInitialInspectorControls(expressionConfigurator: IExpressionConfigurator): IFormControlBuilderConfig[] {\n    return [\n      {\n        name: 'label',\n        component: TextFormControlComponent,\n        options: {\n          label: 'Display label'\n        }\n      },\n      getDisabledFieldInspectorConfig(),\n      ...getStandardPropsInspectorConfigs()\n    ];\n  }\n\n  getInitialProperties(): IAssociationDesignProperties {\n    return {\n      associatedRecordNodeSide: '',\n      associationDefinitionName: '',\n      displayedFields: [],\n      editingMode: RxAssociationEditingMode.Views,\n      fieldId: null,\n      filterByAssociation: '',\n      label: null,\n      nodeARole: '',\n      nodeBRole: '',\n      recordDefinition: '',\n      recordDefinitionName: '',\n      recordId: '',\n      recordInstance: '',\n      useDefaultRoles: true,\n      viewDefinitionNameForCreate: '',\n      viewDefinitionNameForSelect: '',\n      ...RX_DISABLED_PROP_DEFAULT_VALUE,\n      ...RX_STANDARD_PROPS_DEFAULT_VALUES\n    };\n  }\n\n  getActionButtonDefinition(\n    componentProperties: IAssociationDesignProperties,\n    action: string,\n    parentGuid: string\n  ): ViewComponentAddComponentPayload {\n    return {\n      type: RxViewComponentType.ActionButton,\n      guid: this.rxGuidService.generate(),\n      propertiesByName: {\n        labelKey:\n          action === RX_ASSOCIATION.actions.associate\n            ? 'com.bmc.arsys.rx.client.view-components.record-editor.association.button.associate.label'\n            : 'com.bmc.arsys.rx.client.view-components.record-editor.association.button.create-new.label',\n        style: 'secondary',\n        action\n      },\n      children: [\n        {\n          guid: this.rxGuidService.generate(),\n          type: RxViewComponentType.Action,\n          propertiesByName: {\n            name: 'rxAvcAssociate',\n            associationViewComponent: `\\${view.components.${parentGuid}.api}`,\n            viewDefinitionName:\n              action === RX_ASSOCIATION.actions.associate\n                ? componentProperties.viewDefinitionNameForSelect\n                : componentProperties.viewDefinitionNameForCreate\n          }\n        }\n      ],\n      insertIndex: action === RX_ASSOCIATION.actions.associate ? 0 : 1\n    };\n  }\n\n  isCardinalityOne(\n    componentProperties: IAssociationDesignProperties,\n    associationDefinitions: IAssociationDefinition[]\n  ): boolean {\n    const associationDefinition: IAssociationDefinition = associationDefinitions.find(\n      (association) => association.name === componentProperties.associationDefinitionName\n    );\n\n    return Boolean(\n      associationDefinition &&\n        (associationDefinition.cardinality === RX_ASSOCIATION_DEFINITION.cardinality.oneToOne.value ||\n          (associationDefinition.cardinality === RX_ASSOCIATION_DEFINITION.cardinality.oneToMany.value &&\n            componentProperties.associatedRecordNodeSide === RX_ASSOCIATED_RECORD_NODE_SIDES.nodeA.value))\n    );\n  }\n\n  getAvailableAssociations(\n    firstRecordDefinitionName: string,\n    secondRecordDefinitionName: string\n  ): Observable<IAssociationDefinition[]> {\n    const getParametersForAssociation = {\n      headers: { 'default-bundle-scope': '' },\n      params: { firstRecordDefinitionName, secondRecordDefinitionName, requireDependent: true }\n    };\n\n    return this.rxAssociationDefinitionDataPageService\n      .get(getParametersForAssociation)\n      .pipe(map((response) => response.data));\n  }\n\n  getRecordDefinition(recordDefinitionToAssociateName: string): Observable<IRecordDefinition> {\n    return this.rxRecordDefinitionCacheService.getRecordDefinition(recordDefinitionToAssociateName);\n  }\n\n  getFieldsInChildComponentsWithNames(\n    components: IAssociatedRecordField[],\n    availableFields: IFieldDefinition[]\n  ): IAssociatedRecordField[] {\n    return components.reduce((acc: IAssociatedRecordField[], definition: IAssociatedRecordField) => {\n      const fieldDescriptor = availableFields.find(\n        (fieldDescriptorItem) => fieldDescriptorItem.id === Number(definition.data.fieldId)\n      );\n      acc.push({\n        ...definition,\n        data: {\n          ...definition.data,\n          name: fieldDescriptor ? fieldDescriptor.name : definition.data.label\n        }\n      });\n\n      return acc;\n    }, []);\n  }\n\n  cleanEditingModeDependentData(componentProperties: IAssociationDesignProperties): void {\n    if (componentProperties.editingMode === RxAssociationEditingMode.Dropdown) {\n      componentProperties.viewDefinitionNameForSelect = null;\n      componentProperties.viewDefinitionNameForCreate = null;\n      componentProperties.displayedFields = [];\n    } else {\n      componentProperties.filterByAssociation = null;\n      componentProperties.recordId = null;\n      componentProperties.fieldId = null;\n    }\n  }\n\n  getNodeSideOptions(associationDefinition: IAssociationDefinition): RxSelectOption[] {\n    return associationDefinition.nodeAId === associationDefinition.nodeBId\n      ? [\n          {\n            id: RX_ASSOCIATED_RECORD_NODE_SIDES.nodeA.value,\n            name: associationDefinition.nodeAName || RX_ASSOCIATED_RECORD_NODE_SIDES.nodeA.defaultName\n          },\n          {\n            id: RX_ASSOCIATED_RECORD_NODE_SIDES.nodeB.value,\n            name: associationDefinition.nodeBName || RX_ASSOCIATED_RECORD_NODE_SIDES.nodeB.defaultName\n          }\n        ]\n      : [];\n  }\n\n  resetRolesData(componentProperties: IAssociationDesignProperties): void {\n    componentProperties.useDefaultRoles = false;\n    componentProperties.nodeARole = null;\n    componentProperties.nodeBRole = null;\n  }\n\n  validate(\n    sandbox: IViewComponentDesignSandbox,\n    properties: IAssociationDesignProperties,\n    associationDefinition: IAssociationDefinition,\n    childComponents: IAssociationChildComponents\n  ): IViewComponentDesignValidationIssue[] {\n    const validationIssues = [];\n\n    if (!properties.recordDefinitionName) {\n      validationIssues.push(\n        sandbox.createError('Record definition to associate cannot be blank.', 'recordDefinitionName')\n      );\n    }\n\n    if (properties.recordDefinitionName && !properties.associationDefinitionName) {\n      validationIssues.push(sandbox.createError('Association to Use cannot be blank.', 'associationDefinitionName'));\n    }\n\n    if (properties.associationDefinitionName) {\n      if (associationDefinition.nodeAId === associationDefinition.nodeBId && !properties.associatedRecordNodeSide) {\n        validationIssues.push(sandbox.createError('Associated Record Node Side cannot be blank.', 'fieldId'));\n      }\n    }\n\n    if (properties.editingMode === RxAssociationEditingMode.Views || !properties.editingMode) {\n      if (properties.recordDefinitionName && childComponents.displayedFields.length === 0) {\n        validationIssues.push(sandbox.createError('Preview Fields cannot be empty.', 'displayedFields'));\n      }\n\n      if (!properties.viewDefinitionNameForSelect) {\n        validationIssues.push(\n          sandbox.createError('View for selecting associated records cannot be blank.', 'viewDefinitionNameForSelect')\n        );\n      }\n    } else if (properties.editingMode === RxAssociationEditingMode.Dropdown) {\n      if (properties.filterByAssociation && !childComponents.recordId) {\n        validationIssues.push(sandbox.createError('Record ID cannot be blank.', 'recordId'));\n      }\n\n      if (!properties.fieldId) {\n        validationIssues.push(sandbox.createError('Field to display cannot be blank.', 'fieldId'));\n      }\n    }\n\n    validationIssues.push(...validateStandardProps(properties));\n\n    return validationIssues;\n  }\n}\n"]}