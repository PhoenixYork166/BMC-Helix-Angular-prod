{"version":3,"file":"session-expiration.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/shared/api/security/session-expiration/session-expiration.component.ts","../../../../../../../../libs/platform/shared/api/security/session-expiration/session-expiration.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { ActiveModalRef } from '@bmc-ux/adapt-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport moment from 'moment-es6';\nimport { Observable, ReplaySubject, timer } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { SessionExpirationType } from './session-expiration.interface';\n\n@Component({\n  selector: 'rx-session-expiration',\n  templateUrl: './session-expiration.component.html',\n  styleUrls: ['./session-expiration.component.scss']\n})\nexport class RxSessionExpirationComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  remainingTime: string;\n  mode: SessionExpirationType;\n  SessionExpirationType = SessionExpirationType;\n  logout: () => void;\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private keepSessionAlive: () => Observable<any>;\n\n  readonly expirationDate: Date;\n\n  constructor(public context: ActiveModalRef, private translateService: TranslateService, private ngZone: NgZone) {\n    const data = context.getData();\n    this.mode = data.mode;\n    this.expirationDate = data.expirationDate;\n    this.keepSessionAlive = data.keepSessionAlive;\n    this.logout = data.logout;\n  }\n\n  ngOnInit(): void {\n    if (this.mode === SessionExpirationType.Idle) {\n      this.ngZone.runOutsideAngular(() => {\n        timer(0, 1000)\n          .pipe(takeUntil(this.destroyed$))\n          .subscribe(() => {\n            this.ngZone.run(this.checkTime.bind(this));\n          });\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  keepAlive(): void {\n    this.isLoading = true;\n\n    this.keepSessionAlive().subscribe(\n      () => {\n        this.isLoading = false;\n        this.close();\n      },\n      () => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  close(): void {\n    this.context.close();\n  }\n\n  private checkTime(): void {\n    if (moment().isBefore(this.expirationDate)) {\n      const counter = moment.utc(this.expirationDate.getTime() - Date.now()).format('m:ss');\n\n      this.remainingTime = this.translateService.instant('com.bmc.arsys.rx.client.session-expiration-dialog.timer', {\n        time: counter\n      });\n    } else {\n      this.remainingTime = '0:00';\n      this.logout();\n    }\n  }\n}\n","<div class=\"modal-header\">\n  <h5 class=\"modal-title\">{{ 'com.bmc.arsys.rx.client.common.alert.label' | translate }}</h5>\n\n  <button\n    *ngIf=\"mode === SessionExpirationType.Absolute\"\n    class=\"close dp-close\"\n    aria-label=\"Close\"\n    data-dismiss=\"modal\"\n    type=\"button\"\n    rx-id=\"x-button\"\n    (click)=\"close()\"\n  ></button>\n</div>\n\n<div class=\"modal-body\" [ngSwitch]=\"mode\">\n  <div *ngSwitchCase=\"SessionExpirationType.Idle\">\n    <p>{{ 'com.bmc.arsys.rx.client.session-expiration-dialog.idle-session-message1' | translate }}</p>\n    <p>{{ 'com.bmc.arsys.rx.client.session-expiration-dialog.idle-session-message2' | translate }}</p>\n  </div>\n\n  <div *ngSwitchCase=\"SessionExpirationType.Absolute\">\n    <p>{{ 'com.bmc.arsys.rx.client.session-expiration-dialog.expiring-session-message1' | translate }}</p>\n    <p>{{ 'com.bmc.arsys.rx.client.session-expiration-dialog.expiring-session-message2' | translate }}</p>\n  </div>\n</div>\n\n<div class=\"modal-footer\" [ngSwitch]=\"mode\">\n  <div\n    class=\"rx-session-expiration-countdown text-primary d-icon-left-clock_o\"\n    *ngSwitchCase=\"SessionExpirationType.Idle\"\n    rx-id=\"timer\"\n  >\n    {{ remainingTime }}\n  </div>\n\n  <button\n    *ngSwitchCase=\"SessionExpirationType.Idle\"\n    adapt-button\n    btn-type=\"primary\"\n    size=\"small\"\n    type=\"button\"\n    rx-id=\"continue-button\"\n    [disabled]=\"isLoading\"\n    (click)=\"keepAlive()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.continue.label' | translate }}\n  </button>\n\n  <button\n    *ngSwitchCase=\"SessionExpirationType.Idle\"\n    adapt-button\n    btn-type=\"secondary\"\n    size=\"small\"\n    type=\"button\"\n    rx-id=\"logout-button\"\n    [disabled]=\"isLoading\"\n    (click)=\"logout()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.sign-out.label' | translate }}\n  </button>\n\n  <button\n    *ngSwitchCase=\"SessionExpirationType.Absolute\"\n    adapt-button\n    btn-type=\"primary\"\n    size=\"small\"\n    type=\"button\"\n    rx-id=\"ok-button\"\n    (click)=\"close()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.ok.label' | translate }}\n  </button>\n</div>\n"]}