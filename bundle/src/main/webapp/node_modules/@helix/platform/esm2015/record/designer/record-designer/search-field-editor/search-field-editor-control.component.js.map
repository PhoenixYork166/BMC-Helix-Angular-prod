{"version":3,"file":"search-field-editor-control.component.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/record/designer/record-designer/search-field-editor/search-field-editor-control.component.ts","../../../../../../../../libs/platform/record/designer/record-designer/search-field-editor/search-field-editor-control.component.html"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IFieldDefinition, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { ISearchFieldEditorControlOptions } from './search-field.types';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { BehaviorSubject } from 'rxjs';\nimport { shareReplay, take } from 'rxjs/operators';\nimport { SearchFieldEditorModalComponent } from './search-field-editor-modal.component';\nimport { IFormControlComponent, OverlayType, RX_OVERLAY } from '@helix/platform/shared/api';\nimport { IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { noop } from 'lodash';\n\n@Component({\n  selector: 'rx-search-field-editor-control-control',\n  templateUrl: './search-field-editor-control.component.html',\n  styleUrls: ['./search-field-editor-control.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: SearchFieldEditorControlComponent,\n      multi: true\n    }\n  ]\n})\nexport class SearchFieldEditorControlComponent\n  extends ValueAccessor<IRecordFieldDefinitionModel[]>\n  implements IFormControlComponent, OnChanges, OnInit, OnDestroy\n{\n  @Input()\n  options: ISearchFieldEditorControlOptions;\n\n  private searchFieldsSubject = new BehaviorSubject<IRecordFieldDefinitionModel[]>([]);\n\n  searchFields$ = this.searchFieldsSubject.asObservable().pipe(shareReplay(1));\n\n  constructor(private rxModalService: RxModalService, private translateService: TranslateService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.options) {\n      this.updateValues();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options) {\n      this.updateValues();\n    }\n  }\n\n  ngOnDestroy() {\n    this.searchFieldsSubject.complete();\n  }\n\n  updateValues(): void {\n    const searchFields = this.options.recordDefinitionModel.fields.filter(\n      (fieldDefinition: IRecordFieldDefinitionModel) =>\n        (fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.character ||\n          fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.attachment) &&\n        Boolean(fieldDefinition.searchDefinition) &&\n        (fieldDefinition.searchDefinition?.enableFTSSearch || fieldDefinition.searchDefinition?.enableCognitiveSearch)\n    ) as IRecordFieldDefinitionModel[];\n\n    this.searchFieldsSubject.next(searchFields);\n  }\n\n  openEditor(searchFieldIndex: string): void {\n    this.searchFields$.pipe(take(1)).subscribe((searchFields) => {\n      this.rxModalService\n        .openModal({\n          content: SearchFieldEditorModalComponent,\n          title: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.search-fields.search-field-editor.title'\n          ),\n          data: {\n            searchFields: searchFields,\n            fieldDefinitions: this.options.recordDefinitionModel.fields,\n            recordDefinition: this.options.recordDefinitionModel,\n            searchFieldIndex,\n            isReadOnly: this.options.isReadOnly\n          }\n        })\n        .then((updatedSearchFields) => {\n          const searchFieldDefinitions = updatedSearchFields.map((searchField) => {\n            const field = this.options.recordDefinitionModel.fields.find(\n              (fieldDefinition) => searchField.get('searchFieldName')?.value[0].id === fieldDefinition.id\n            );\n\n            if (field) {\n              return {\n                ...field,\n                searchDefinition: {\n                  ...field.searchDefinition,\n                  enableCognitiveSearch: Boolean(this.options.recordDefinitionModel.enableCognitiveSearch),\n                  enableFTSSearch:\n                    field.searchDefinition?.enableFTSSearch ||\n                    !Boolean(this.options.recordDefinitionModel.enableCognitiveSearch),\n                  stripTagsForSearch: false,\n                  enableLiteralSearch: false,\n                  searchCategoryName: searchField.get('category').value\n                },\n                overlayDescriptor: {\n                  ...field.overlayDescriptor,\n                  otherPropertiesOverlayType: RX_OVERLAY.overlayTypes.overwrite as OverlayType\n                }\n              };\n            }\n          });\n\n          this.value = searchFieldDefinitions;\n          this.searchFieldsSubject.next(searchFieldDefinitions);\n        })\n        .catch(noop);\n    });\n  }\n\n  removeSearchField(searchField: IRecordFieldDefinitionModel): void {\n    this.searchFields$.pipe(take(1)).subscribe((searchFields) => {\n      this.rxModalService\n        .confirm({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n          modalStyle: RX_MODAL.modalStyles.warning,\n          message: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.search-fields.delete-confirmation.message',\n            { name: searchField.name }\n          )\n        })\n        .then((isDeleteConfirmed: boolean) => {\n          if (isDeleteConfirmed) {\n            const searchFieldsList: IRecordFieldDefinitionModel[] = searchFields.filter(\n              (fieldDefinition: IRecordFieldDefinitionModel) => fieldDefinition.name !== searchField.name\n            );\n\n            this.value = searchFieldsList;\n            this.searchFieldsSubject.next(searchFieldsList);\n          }\n        });\n    });\n  }\n}\n","<adapt-button\n  type=\"button\"\n  class=\"p-0 pb-1\"\n  btn-type=\"tertiary\"\n  rx-id=\"add-search-field-button\"\n  *ngIf=\"!isDisabled\"\n  (click)=\"openEditor()\"\n>\n  <span class=\"d-icon-left-plus_circle\"> </span>\n  {{ 'com.bmc.arsys.rx.client.record-designer.search-fields.search-field-editor.title' | translate }}\n</adapt-button>\n\n<div *ngIf=\"searchFields$ | async as searchFields\">\n  <div class=\"rx-search-field\" *ngFor=\"let searchField of searchFields\">\n    <div class=\"rx-selected-column__header-container\">\n      <span rx-id=\"card-title\" class=\"rx-search-field__header-title\">{{ searchField.name }}</span>\n\n      <button\n        type=\"button\"\n        (click)=\"removeSearchField(searchField)\"\n        class=\"rx-button-unstyled d-icon-cross btn-link float-right\"\n        *ngIf=\"!options.isReadOnly\"\n        rx-id=\"remove-search-field\"\n      ></button>\n\n      <button\n        type=\"button\"\n        class=\"rx-button-unstyled d-icon-left-pencil btn-link float-right\"\n        rx-id=\"edit-button\"\n        (click)=\"openEditor(searchField.id)\"\n      ></button>\n    </div>\n\n    <div class=\"rx-search-field-type\" rx-id=\"search-field-type\">\n      <span>\n        {{\n          (searchField.searchDefinition.enableFTSSearch\n            ? 'com.bmc.arsys.rx.client.record-designer.search-fields.full-text-search.label'\n            : 'com.bmc.arsys.rx.client.record-designer.search-fields.cognitive-search.label'\n          ) | translate\n        }}\n      </span>\n    </div>\n  </div>\n</div>\n"]}