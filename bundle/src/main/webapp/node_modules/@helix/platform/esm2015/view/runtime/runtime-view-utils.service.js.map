{"version":3,"file":"runtime-view-utils.service.js","sourceRoot":"","sources":["../../../../../../libs/platform/view/runtime/runtime-view-utils.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { IPlainObject, RxDefinitionAdapterRegistryService } from '@helix/platform/shared/api';\nimport {\n  IContainerViewComponentDefinition,\n  IViewDefinition,\n  RxViewActionDefinitionAdapterRegistryService,\n  RxViewComponentType,\n  RxViewDefinitionCacheService,\n  RxViewDefinitionParserService,\n  RxViewDefinitionService\n} from '@helix/platform/view/api';\nimport { isEmpty, isString, head, chain, isObject, values } from 'lodash';\nimport { map, take } from 'rxjs/operators';\nimport { EMPTY, Observable, of } from 'rxjs';\nimport { RX_GUID } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRuntimeViewUtilsService {\n  constructor(\n    private rxViewDefinitionService: RxViewDefinitionService,\n    private rxViewDefinitionParserService: RxViewDefinitionParserService,\n    private rxDefinitionAdapterRegistryService: RxDefinitionAdapterRegistryService,\n    private rxViewActionDefinitionAdapterRegistryService: RxViewActionDefinitionAdapterRegistryService,\n    private rxViewDefinitionCacheService: RxViewDefinitionCacheService\n  ) {}\n\n  isViewCancellable(viewDefinitionName: string | IViewDefinition): Observable<boolean> {\n    if (isString(viewDefinitionName)) {\n      return this.rxViewDefinitionCacheService\n        .getViewDefinition(viewDefinitionName)\n        .pipe(\n          map(\n            (viewDefinition: IViewDefinition) =>\n              this.hasPageComponent(viewDefinition) || this.hasViewCancellingAction(viewDefinition)\n          )\n        );\n    } else {\n      return of(this.hasPageComponent(viewDefinitionName) || this.hasViewCancellingAction(viewDefinitionName));\n    }\n  }\n\n  runAdaptersForComponents(\n    viewDefinition: IViewDefinition,\n    containerViewComponentDefinition?: IContainerViewComponentDefinition\n  ): Observable<any>[] {\n    const componentPairs = this.rxViewDefinitionParserService.getComponents(\n      containerViewComponentDefinition || viewDefinition\n    );\n\n    const regex = new RegExp(`\\\\$\\{view.components.${RX_GUID.baseGuidPattern}.`);\n\n    viewDefinition.viewComponentExpressions = chain(componentPairs)\n      .map((component) => values(component.componentDefinition.propertiesByName))\n      .flatten()\n      .map((propertyValue) => (isObject(propertyValue) ? values(propertyValue) : propertyValue))\n      .flatten()\n      .filter(isString)\n      .filter((propertyValue) => regex.test(propertyValue))\n      .value();\n\n    const result = componentPairs.reduce((adapterObservables$, { componentDefinition }) => {\n      const adapter =\n        componentDefinition.type === RxViewComponentType.Action\n          ? this.rxViewActionDefinitionAdapterRegistryService.getRuntimeAdapter(\n              componentDefinition.propertiesByName.name\n            )\n          : this.rxDefinitionAdapterRegistryService.getRuntimeAdapter(componentDefinition.type);\n\n      if (adapter) {\n        const result$ = adapter.adaptDefinition(componentDefinition, viewDefinition);\n\n        adapterObservables$.push(result$ ? result$.pipe(take(1)) : EMPTY);\n      }\n\n      return adapterObservables$;\n    }, []);\n\n    return isEmpty(result) ? [EMPTY] : result;\n  }\n\n  private hasViewCancellingAction(viewDefinition: IViewDefinition): boolean {\n    return Boolean(\n      this.rxViewDefinitionParserService.findViewComponent(\n        viewDefinition,\n        (viewComponentDefinition) =>\n          viewComponentDefinition.type === RxViewComponentType.Action &&\n          viewComponentDefinition.propertiesByName.name === 'rxCloseViewAction' &&\n          viewComponentDefinition.propertiesByName.actAsCancel === 'true'\n      )\n    );\n  }\n\n  private hasPageComponent(viewDefinition: IViewDefinition): boolean {\n    return head(viewDefinition.componentDefinitions)?.type === RxViewComponentType.Page;\n  }\n}\n"]}