{"version":3,"file":"view-component-event-manager.class.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/runtime/event-manager/view-component-event-manager.class.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AACzD,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,QAAQ,CAAC;AAC7C,OAAO,EAAE,IAAI,EAAE,MAAM,MAAM,CAAC;AAC5B,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,gBAAgB,CAAC;AACtD,OAAO,EAAE,qBAAqB,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AACjF,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;;;;AAM/D,MAAM,OAAO,yBAAyB;IACpC,YACU,qBAA4C,EAC5C,YAA0B,EAC1B,mBAAwC,EACxC,YAA0B;QAH1B,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,iBAAY,GAAZ,YAAY,CAAc;QAC1B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,iBAAY,GAAZ,YAAY,CAAc;IACjC,CAAC;IAEJ,cAAc,CACZ,OAAqC,EACrC,cAAwE;QAExE,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,WAAgB,CAAC;YAErB,IAAI,CAAC,OAAO,CAAC;iBACV,IAAI,CACH,SAAS,CACP,CAAC,GAAG,EAAE,aAAa,EAAE,EAAE;gBACrB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,kBAAkB,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;gBAEjE,OAAO,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC,IAAI,CACxF,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,cAAc,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC,EACtD,IAAI,CAAC,CAAC,CAAC,CACR,CAAC;YACJ,CAAC,EACD,IAAI,EACJ,CAAC,CACF,CACF;iBACA,SAAS,CAAC;gBACT,IAAI,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC;gBACxC,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;oBACf,MAAM,CAAC,KAAK,CAAC,CAAC;oBAEd,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;oBAExD,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;wBAC7B,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;4BACf,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;yBAC9B;6BAAM,IAAI,CAAC,EAAE;4BACZ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;yBAClC;oBACH,CAAC,CAAC,CAAC;gBACL,CAAC;gBACD,QAAQ,EAAE,GAAG,EAAE;oBACb,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;oBACxD,OAAO,CAAC,WAAW,CAAC,CAAC;gBACvB,CAAC;aACF,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;;sHAnDU,yBAAyB;0HAAzB,yBAAyB,cAFxB,MAAM;2FAEP,yBAAyB;kBAHrC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { ErrorHandler, Injectable } from '@angular/core';\nimport { castArray, isString } from 'lodash';\nimport { from } from 'rxjs';\nimport { map, mergeScan, take } from 'rxjs/operators';\nimport { RxGlobalEventsService, RxLogService } from '@helix/platform/shared/api';\nimport { RxViewActionService } from '@helix/platform/view/api';\nimport { IViewComponentActionConfig } from './view-component-action-config.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewComponentEventManager {\n  constructor(\n    private rxGlobalEventsService: RxGlobalEventsService,\n    private rxLogService: RxLogService,\n    private rxViewActionService: RxViewActionService,\n    private errorHandler: ErrorHandler\n  ) {}\n\n  executeActions(\n    actions: IViewComponentActionConfig[],\n    actionCallback: (action: IViewComponentActionConfig, result: any) => any\n  ): Promise<void> {\n    return new Promise((resolve, reject) => {\n      let resultValue: any;\n\n      from(actions)\n        .pipe(\n          mergeScan(\n            (acc, currentAction) => {\n              this.rxLogService.debug('ACTION STARTED: ' + currentAction.name);\n\n              return this.rxViewActionService.execute(currentAction.name, currentAction.parameters).pipe(\n                map((result) => actionCallback(currentAction, result)),\n                take(1)\n              );\n            },\n            null,\n            1\n          )\n        )\n        .subscribe({\n          next: (result) => (resultValue = result),\n          error: (error) => {\n            reject(error);\n\n            this.rxGlobalEventsService.viewActionsCompleted$.next();\n\n            castArray(error).forEach((e) => {\n              if (isString(e)) {\n                this.rxLogService.warning(e);\n              } else if (e) {\n                this.errorHandler.handleError(e);\n              }\n            });\n          },\n          complete: () => {\n            this.rxGlobalEventsService.viewActionsCompleted$.next();\n            resolve(resultValue);\n          }\n        });\n    });\n  }\n}\n"]}