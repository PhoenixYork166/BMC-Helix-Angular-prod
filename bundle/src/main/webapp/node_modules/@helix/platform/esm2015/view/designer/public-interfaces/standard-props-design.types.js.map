{"version":3,"file":"standard-props-design.types.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/designer/public-interfaces/standard-props-design.types.ts"],"names":[],"mappings":"AAAA,OAAO,EAA6B,OAAO,EAAE,MAAM,4BAA4B,CAAC;AAChF,OAAO,EAIL,2CAA2C,EAC3C,0BAA0B,EAC1B,wBAAwB,EACzB,MAAM,mCAAmC,CAAC;AAC3C,OAAO,EACL,iCAAiC,EACjC,qBAAqB,EACrB,mBAAmB,EACnB,mBAAmB,EACnB,QAAQ,EACT,MAAM,0BAA0B,CAAC;AAClC,OAAO,EAAE,oBAAoB,EAAE,MAAM,SAAS,CAAC;AAE/C,MAAM,CAAC,MAAM,+BAA+B,GAAG;IAC7C;QACE,EAAE,EAAE,QAAQ,CAAC,OAAO;QACpB,IAAI,EAAE,SAAS;KAChB;IACD;QACE,EAAE,EAAE,QAAQ,CAAC,MAAM;QACnB,IAAI,EAAE,QAAQ;KACf;IACD;QACE,EAAE,EAAE,QAAQ,CAAC,MAAM;QACnB,IAAI,EAAE,QAAQ;KACf;CACF,CAAC;AAEF,MAAM,UAAU,oCAAoC;IAClD,OAAO;QACL,IAAI,EAAE,iCAAiC;QACvC,SAAS,EAAE,0BAA0B;QACrC,OAAO,EAAE;YACP,KAAK,EAAE,sBAAsB;YAC7B,OAAO,EAAE,+BAA+B;YACxC,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,IAAI;YACd,mBAAmB,EAAE,IAAI;YACzB,qBAAqB,EAAE,IAAI;SAC5B;KACF,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,6BAA6B;IAC3C,OAAO;QACL,IAAI,EAAE,mBAAmB;QACzB,SAAS,EAAE,2CAA2C;QACtD,OAAO,EAAE;YACP,KAAK,EAAE,QAAQ;SAC8B;KAChD,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,+BAA+B;IAC7C,OAAO;QACL,IAAI,EAAE,qBAAqB;QAC3B,SAAS,EAAE,2CAA2C;QACtD,OAAO,EAAE;YACP,KAAK,EAAE,UAAU;SAC4B;KAChD,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,6BAA6B,CAC3C,qBAA8C,EAAE;IAEhD,OAAO;QACL,IAAI,EAAE,mBAAmB;QACzB,SAAS,EAAE,wBAAwB;QACnC,OAAO,EAAE;YACP,KAAK,EAAE,aAAa;YACpB,WAAW,EAAE,iBAAiB;YAC9B,OAAO,EAAE,IAAI,OAAO,CAAC,wDAAwD,CAAC;YAC9E,UAAU,EAAE,oBAAoB;YAChC,kBAAkB,EAAE,kBAAkB;SACZ;KAC7B,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,gCAAgC;IAC9C,OAAO,CAAC,6BAA6B,EAAE,EAAE,oCAAoC,EAAE,EAAE,6BAA6B,EAAE,CAAC,CAAC;AACpH,CAAC","sourcesContent":["import { IFormControlBuilderConfig, Tooltip } from '@helix/platform/shared/api';\nimport {\n  IOptionalExpressionInspectorControlOptions,\n  ITagAutocompleteValue,\n  ITagsFormControlOptions,\n  OptionalExpressionInspectorControlComponent,\n  SelectFormControlComponent,\n  TagsFormControlComponent\n} from '@helix/platform/shared/components';\nimport {\n  RX_AVAILABLE_ON_DEVICES_PROP_NAME,\n  RX_DISABLED_PROP_NAME,\n  RX_HIDDEN_PROP_NAME,\n  RX_STYLES_PROP_NAME,\n  RxDevice\n} from '@helix/platform/view/api';\nimport { validateCssClassName } from '../core';\n\nexport const RX_AVAILABLE_ON_DEVICES_OPTIONS = [\n  {\n    id: RxDevice.Desktop,\n    name: 'Desktop'\n  },\n  {\n    id: RxDevice.Tablet,\n    name: 'Tablet'\n  },\n  {\n    id: RxDevice.Mobile,\n    name: 'Mobile'\n  }\n];\n\nexport function getAvailableOnDevicesInspectorConfig(): IFormControlBuilderConfig {\n  return {\n    name: RX_AVAILABLE_ON_DEVICES_PROP_NAME,\n    component: SelectFormControlComponent,\n    options: {\n      label: 'Available on devices',\n      options: RX_AVAILABLE_ON_DEVICES_OPTIONS,\n      multiple: true,\n      required: true,\n      hideSelectAllButton: true,\n      hideDeselectAllButton: true\n    }\n  };\n}\n\nexport function getHiddenFieldInspectorConfig(): IFormControlBuilderConfig {\n  return {\n    name: RX_HIDDEN_PROP_NAME,\n    component: OptionalExpressionInspectorControlComponent,\n    options: {\n      label: 'Hidden'\n    } as IOptionalExpressionInspectorControlOptions\n  };\n}\n\nexport function getDisabledFieldInspectorConfig(): IFormControlBuilderConfig {\n  return {\n    name: RX_DISABLED_PROP_NAME,\n    component: OptionalExpressionInspectorControlComponent,\n    options: {\n      label: 'Disabled'\n    } as IOptionalExpressionInspectorControlOptions\n  };\n}\n\nexport function getStylesFieldInspectorConfig(\n  autocompleteValues: ITagAutocompleteValue[] = []\n): IFormControlBuilderConfig {\n  return {\n    name: RX_STYLES_PROP_NAME,\n    component: TagsFormControlComponent,\n    options: {\n      label: 'CSS classes',\n      placeholder: 'Add CSS classes',\n      tooltip: new Tooltip('Enter CSS class names to apply to this view component.'),\n      errorCheck: validateCssClassName,\n      autocompleteValues: autocompleteValues\n    } as ITagsFormControlOptions\n  };\n}\n\nexport function getStandardPropsInspectorConfigs(): IFormControlBuilderConfig[] {\n  return [getHiddenFieldInspectorConfig(), getAvailableOnDevicesInspectorConfig(), getStylesFieldInspectorConfig()];\n}\n"]}