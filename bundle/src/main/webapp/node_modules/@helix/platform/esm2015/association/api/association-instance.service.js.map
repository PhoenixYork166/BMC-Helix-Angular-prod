{"version":3,"file":"association-instance.service.js","sourceRoot":"","sources":["../../../../../../libs/platform/association/api/association-instance.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,uBAAuB,EAAE,MAAM,4BAA4B,CAAC;AACrE,OAAO,EAAE,SAAS,EAAE,MAAM,QAAQ,CAAC;;;AAEnC,MAAM,CAAC,MAAM,wBAAwB,GAAG,2EAA2E,CAAC;AACpH,MAAM,CAAC,MAAM,2BAA2B,GACtC,8EAA8E,CAAC;AAKjF,MAAM,OAAO,4BAA4B;IAIvC,YAAoB,uBAAgD;QAAhD,4BAAuB,GAAvB,uBAAuB,CAAyB;QAH5D,qBAAgB,GAAG,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,wBAAwB,CAAC,CAAC;QAC1F,wBAAmB,GAAG,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,2BAA2B,CAAC,CAAC;IAEjC,CAAC;IAExE,gBAAgB,CACd,yBAAiC,EACjC,QAA2B,EAC3B,QAA2B,EAC3B,eAAwB,EACxB,SAAiB,EACjB,SAAiB;QAEjB,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC;YACnC,yBAAyB;YACzB,sBAAsB,EAAE,SAAS,CAAC,QAAQ,CAAC;YAC3C,sBAAsB,EAAE,SAAS,CAAC,QAAQ,CAAC;YAC3C,eAAe;YACf,SAAS;YACT,SAAS;SACV,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB,CACjB,yBAAiC,EACjC,QAA2B,EAC3B,QAA2B;QAE3B,OAAO,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YACtC,yBAAyB;YACzB,sBAAsB,EAAE,SAAS,CAAC,QAAQ,CAAC;YAC3C,sBAAsB,EAAE,SAAS,CAAC,QAAQ,CAAC;SAC5C,CAAC,CAAC;IACL,CAAC;;yHAlCU,4BAA4B;6HAA5B,4BAA4B,cAF3B,MAAM;2FAEP,4BAA4B;kBAHxC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RxCommandFactoryService } from '@helix/platform/shared/api';\nimport { castArray } from 'lodash';\n\nexport const associateMultipleCommand = 'com.bmc.arsys.rx.application.association.command.AssociateMultipleCommand';\nexport const disassociateMultipleCommand =\n  'com.bmc.arsys.rx.application.association.command.DisassociateMultipleCommand';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxAssociationInstanceService {\n  private associateCommand = this.rxCommandFactoryService.forResourceType(associateMultipleCommand);\n  private disassociateCommand = this.rxCommandFactoryService.forResourceType(disassociateMultipleCommand);\n\n  constructor(private rxCommandFactoryService: RxCommandFactoryService) {}\n\n  associateRecords(\n    associationDefinitionName: string,\n    nodeAIds: string | string[],\n    nodeBIds: string | string[],\n    useDefaultRoles: boolean,\n    nodeARole: string,\n    nodeBRole: string\n  ): Observable<any> {\n    return this.associateCommand.execute({\n      associationDefinitionName,\n      nodeARecordInstanceIds: castArray(nodeAIds),\n      nodeBRecordInstanceIds: castArray(nodeBIds),\n      useDefaultRoles,\n      nodeARole,\n      nodeBRole\n    });\n  }\n\n  disassociateRecords(\n    associationDefinitionName: string,\n    nodeAIds: string | string[],\n    nodeBIds: string | string[]\n  ): Observable<any> {\n    return this.disassociateCommand.execute({\n      associationDefinitionName,\n      nodeARecordInstanceIds: castArray(nodeAIds),\n      nodeBRecordInstanceIds: castArray(nodeBIds)\n    });\n  }\n}\n"]}