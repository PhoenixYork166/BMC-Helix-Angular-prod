{"version":3,"file":"auth.interceptor.js","sourceRoot":"","sources":["../../../../../../../libs/platform/shared/api/security/auth.interceptor.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAc,UAAU,EAAE,MAAM,MAAM,CAAC;AAC9C,OAAO,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;;;AAG/C,MAAM,OAAO,iBAAiB;IAC5B,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAG,CAAC;IAEpD,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAChD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAC1B,UAAU,CAAC,CAAC,GAAG,EAAE,EAAE;YACjB,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;gBACtB,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC;aAC1C;YAED,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;8GAbU,iBAAiB;kHAAjB,iBAAiB;2FAAjB,iBAAiB;kBAD7B,UAAU","sourcesContent":["import { HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { RxAuthService } from './auth.service';\n\n@Injectable()\nexport class RxAuthInterceptor implements HttpInterceptor {\n  constructor(private rxAuthService: RxAuthService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<any> {\n    return next.handle(req).pipe(\n      catchError((err) => {\n        if (err.status === 401) {\n          this.rxAuthService.redirectToLoginPage();\n        }\n\n        return throwError(err);\n      })\n    );\n  }\n}\n"]}