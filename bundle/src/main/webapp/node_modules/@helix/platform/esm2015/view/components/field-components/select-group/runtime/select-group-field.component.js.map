{"version":3,"file":"select-group-field.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/platform/view/components/field-components/select-group/runtime/select-group-field.component.ts","../../../../../../../../../libs/platform/view/components/field-components/select-group/runtime/select-group-field.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Injector, ViewChild } from '@angular/core';\nimport { distinctUntilChanged, startWith, take, takeUntil } from 'rxjs/operators';\nimport { find, get, isEmpty, isEqual, isNil } from 'lodash';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { INamedListDefinition, RxNamedListDefinitionService, RxNamedListService } from '@helix/platform/named-list/api';\nimport {\n  IRxSelectWithPaginationOption,\n  IRxSelectWithPaginationOptionsPage,\n  RxSelectWithPaginationComponent\n} from '@helix/platform/shared/components';\nimport { BaseRecordEditorFieldComponent } from '../../base-record-editor-field/runtime/base-record-editor-field-component.class';\nimport { SelectGroupComponent } from './select-group.component';\n\n@Component({\n  selector: 'rx-select-group-field',\n  templateUrl: './select-group-field.component.html'\n})\nexport class SelectGroupFieldComponent extends BaseRecordEditorFieldComponent {\n  optionLoaderFunc = this.getNamedListOptionPage.bind(this);\n  viewToModelValueAdapterFunc = this.viewToModelValueAdapter.bind(this);\n  modelToViewValueAdapterFunc = this.modelToViewValueAdapter.bind(this);\n  showDefaultTitle: boolean;\n\n  @ViewChild(RxSelectWithPaginationComponent)\n  selectWithPaginationComponent: RxSelectWithPaginationComponent;\n\n  private readOnlyValue: string;\n  private namedListDefinitionName: string;\n  private fieldIdToFilterBy: number;\n  private namedListDefinition: INamedListDefinition;\n  private fieldIndex: number;\n  private selectedOptions: IRxSelectWithPaginationOption[] = [];\n\n  constructor(\n    injector: Injector,\n    private selectGroupComponent: SelectGroupComponent,\n    private rxNamedListDefinitionService: RxNamedListDefinitionService,\n    private rxNamedListService: RxNamedListService\n  ) {\n    super(injector);\n  }\n\n  onConfigInitialized(config): void {\n    super.onConfigInitialized(config);\n\n    this.fieldIndex = Number(config.index);\n    this.namedListDefinitionName = config.namedListDefinitionName;\n\n    this.selectGroupComponent.registerFieldComponent(this.fieldIndex, this);\n\n    const namedListDefinition$ = this.rxNamedListDefinitionService.get(this.namedListDefinitionName).pipe(take(1));\n\n    const valueChanges$ = this.formControl.valueChanges.pipe(\n      distinctUntilChanged(isEqual),\n      startWith(this.formControl.value as string),\n      takeUntil(this.destroyed$)\n    );\n\n    combineLatest([namedListDefinition$, valueChanges$]).subscribe(([namedListDefinition]) => {\n      this.namedListDefinition = namedListDefinition;\n      this.fieldIdToFilterBy = config.optionFilterFieldId || namedListDefinition.valueFieldId;\n\n      this.updateSelectedOption();\n\n      // do not reset value for next fields after record instance id change,\n      // in this case formControl is pristine and untouched\n      if (this.formControl.dirty) {\n        this.selectGroupComponent.resetValueForNextFields(this.fieldIndex);\n      } else {\n        this.resetLoadedOptions();\n      }\n    });\n  }\n\n  resetFieldValue(): void {\n    super.setFieldValue(null);\n    this.resetLoadedOptions();\n  }\n\n  getDisplayValue(): string {\n    return this.readOnlyValue;\n  }\n\n  private getNamedListOptionPage(\n    startIndex: number,\n    pageSize: number,\n    searchQuery?: string\n  ): Observable<IRxSelectWithPaginationOptionsPage> {\n    return this.rxNamedListService.getOptionPage(\n      this.namedListDefinition,\n      searchQuery,\n      this.getSelectionQueryCriteria(),\n      startIndex,\n      pageSize\n    );\n  }\n\n  // [{displayValue: 'FOO', value: 'foo'}] -> 'foo'\n  viewToModelValueAdapter(selectedOptions: IRxSelectWithPaginationOption[]): string {\n    return get(selectedOptions, '[0].value', '');\n  }\n\n  // 'foo' -> [{displayValue: 'FOO', value: 'foo'}]\n  modelToViewValueAdapter(modelValue: string): IRxSelectWithPaginationOption[] {\n    return isNil(modelValue) ? [] : this.selectedOptions;\n  }\n\n  private updateSelectedOption(): void {\n    this.showDefaultTitle = false;\n\n    let namedListOptions$: Observable<IRxSelectWithPaginationOption[]>;\n\n    if (isEmpty(this.formControl.value)) {\n      namedListOptions$ = of([]);\n    } else {\n      // Select with pagination component is not available in the record editor READ mode.\n      const loadedOptions = get(this.selectWithPaginationComponent, 'options', []);\n      const namedListOptionCandidate = find(loadedOptions, { value: this.formControl.value });\n\n      namedListOptions$ = namedListOptionCandidate\n        ? of([namedListOptionCandidate])\n        : this.rxNamedListService.getOptionsForValues(this.namedListDefinition, [this.formControl.value]);\n    }\n\n    namedListOptions$.pipe(take(1)).subscribe((options) => {\n      this.showDefaultTitle = true;\n      this.selectedOptions = options;\n\n      if (isEmpty(options) && this.formControl.value) {\n        // Selected option might be removed from the named list,\n        // in this case we have to show an empty display value.\n        this.selectedOptions = [\n          {\n            displayValue: null,\n            value: this.formControl.value\n          }\n        ];\n      }\n\n      if (this.formControl.dirty) {\n        this.formControl.markAsTouched();\n      }\n\n      this.triggerModelToViewValueUpdate();\n      this.updateReadOnlyValue();\n    });\n  }\n\n  private resetLoadedOptions(): void {\n    if (this.selectWithPaginationComponent) {\n      this.selectWithPaginationComponent.resetLoadedOptions();\n    }\n  }\n\n  private getSelectionQueryCriteria(): string {\n    let queryCriteria = null;\n\n    if (this.fieldIndex > 0) {\n      const previousFieldValue = this.selectGroupComponent.getValueForPreviousField(this.fieldIndex);\n\n      if (previousFieldValue) {\n        queryCriteria = `('${this.fieldIdToFilterBy}' = \"${previousFieldValue}\")`;\n      }\n    }\n\n    return queryCriteria;\n  }\n\n  private updateReadOnlyValue(): void {\n    this.readOnlyValue = get(this.selectedOptions, '[0].displayValue', null);\n  }\n\n  private triggerModelToViewValueUpdate(): void {\n    // trigger writeValue function in the control value accessor\n    this.formControl.setValue(this.formControl.value, { emitEvent: false });\n  }\n}\n","<ng-container *ngIf=\"!isHidden\">\n  <rx-read-only-field\n    *ngIf=\"inReadState; else editStateElementRef\"\n    [label]=\"label\"\n    [value]=\"getDisplayValue()\"\n  ></rx-read-only-field>\n</ng-container>\n\n<ng-template #editStateElementRef>\n  <rx-select-with-pagination\n    [label]=\"label\"\n    [formControl]=\"formControl\"\n    [required]=\"isRequired\"\n    [readonly]=\"isDisabled\"\n    [optionLoader]=\"optionLoaderFunc\"\n    [showDefaultTitle]=\"showDefaultTitle\"\n    [viewToModelValueAdapter]=\"viewToModelValueAdapterFunc\"\n    [modelToViewValueAdapter]=\"modelToViewValueAdapterFunc\"\n  ></rx-select-with-pagination>\n</ng-template>\n"]}