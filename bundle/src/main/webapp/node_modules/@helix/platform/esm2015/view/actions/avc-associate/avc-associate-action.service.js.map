{"version":3,"file":"avc-associate-action.service.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/actions/avc-associate/avc-associate-action.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  IViewActionService,\n  OpenViewActionModalSize,\n  OpenViewActionType,\n  RowDataItemIdFieldName\n} from '@helix/platform/view/api';\nimport { EMPTY, Observable } from 'rxjs';\nimport { switchMapTo, tap } from 'rxjs/operators';\nimport { IFieldInstance, RX_RECORD_DEFINITION, RxRecordInstanceUtilsService } from '@helix/platform/record/api';\nimport { compact, flatten, flow, isArray, isFunction, isObject, map, some, uniq } from 'lodash';\nimport { RxGuidService, RxStringService } from '@helix/platform/utils';\nimport { RxOpenViewActionService } from '../open-view/open-view-action.service';\nimport { IAvcAssociateActionParams } from './avc-associate-action-params.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxAvcAssociateActionService implements IViewActionService<IAvcAssociateActionParams, never> {\n  constructor(\n    private rxGuidService: RxGuidService,\n    private rxOpenViewActionService: RxOpenViewActionService,\n    private rxStringService: RxStringService,\n    private rxRecordInstanceUtilsService: RxRecordInstanceUtilsService\n  ) {}\n\n  execute(params: IAvcAssociateActionParams): Observable<never> {\n    return this.rxOpenViewActionService\n      .execute({\n        viewDefinitionName: params.viewDefinitionName,\n        viewParams: null,\n        presentation: {\n          modalSize: OpenViewActionModalSize.Large,\n          type: OpenViewActionType.DockedRightModal\n        }\n      })\n      .pipe(\n        tap((output) => {\n          const recordInstances = flow(\n            (outputs) => map(outputs, (outputsItem) => this.extractRecordInstance(outputsItem)),\n            flatten,\n            compact,\n            uniq\n          )(output);\n\n          params.associationViewComponent.associate(recordInstances);\n        }),\n        switchMapTo(EMPTY)\n      );\n  }\n\n  private extractRecordInstance(source: {\n    [fieldId: string]: any;\n    fieldInstances: { [fieldId: number]: IFieldInstance };\n  }) {\n    let recordInstanceFields = [];\n\n    // for record grid\n    if (isFunction(source.getSelectedRows)) {\n      recordInstanceFields = map(\n        source.getSelectedRows(),\n        this.rxRecordInstanceUtilsService.convertFromDataPageRowToPlainRecordInstance\n      );\n\n      // for record grid row\n    } else if (isObject(source) && this.rxStringService.isNonEmptyString(source[RowDataItemIdFieldName])) {\n      recordInstanceFields.push(this.rxRecordInstanceUtilsService.convertFromDataPageRowToPlainRecordInstance(source));\n\n      // for selected rows\n    } else if (isArray(source) && some(source, isObject)) {\n      recordInstanceFields = map(source, this.rxRecordInstanceUtilsService.convertFromDataPageRowToPlainRecordInstance);\n\n      // for existing record instance\n    } else if (isObject(source) && isObject(source.fieldInstances) && source.id) {\n      recordInstanceFields.push(source);\n\n      // for new record instance\n    } else if (isObject(source) && isObject(source.fieldInstances) && !source.id) {\n      const dummyId = this.rxGuidService.generate();\n\n      source.id = dummyId;\n      source.fieldInstances[RX_RECORD_DEFINITION.coreFieldIds.id].value = dummyId;\n      source.isNewInstance = true;\n\n      recordInstanceFields.push(source);\n    }\n\n    return recordInstanceFields;\n  }\n}\n"]}