{"version":3,"file":"view-designer-component.effects.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/designer/+state/view-designer-component.effects.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport { RxGuidService } from '@helix/platform/utils';\nimport { RX_VIEW_DEFINITION, RxViewComponentRegistryService, RxViewLayout } from '@helix/platform/view/api';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action, Store } from '@ngrx/store';\nimport { filter, map, mergeMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { ComponentSandbox } from '../component-sandbox/component-sandbox.class';\nimport { viewComponentModelsSelector } from './view-designer.selectors';\nimport { IViewComponentDesignModel } from '../interfaces/view-component-design-model.interface';\nimport { IViewComponentDesignModels } from '../interfaces/view-component-design-models.interface';\nimport { RxViewDesignerModels } from '../core/view-designer-models.service';\nimport { getAllChildGuids, getChildGuidsFromModel } from '../core/layout-helpers';\nimport * as ViewComponentsActions from './view-component.actions';\nimport * as ViewComponentActions from './view-component.actions';\nimport { difference, forEach, includes, isEmpty, isEqual, isFunction, last, map as _map } from 'lodash';\nimport { IViewComponentDesignSetPayload } from '../public-interfaces/view-component-design.types';\nimport {\n  IAddNewComponentActionPayload,\n  IInitializeComponentModelActionPayload,\n  IInitializeDataComponentModelActionPayload,\n  ISetChildrenActionPayload,\n  ISetComponentDataPayload\n} from './view-component.types';\nimport { RxViewDesignerInspectorService } from '../core/view-designer-inspector.service';\nimport { RxViewExpressionValidatorRegistryService } from '../validation/view-expression-validator-registry.service';\nimport * as ViewDesignerActions from './view-designer.actions';\nimport { RxViewDesignerStateHelperService } from './view-designer-state-helper.service';\nimport { RxViewDataDictionaryStoreService } from '../core/view-data-dictionary-store.service';\n\n@Injectable()\nexport class ViewDesignerComponentEffects {\n  @Effect()\n  initializeComponentModel$ = this.actions$.pipe(\n    ofType(ViewComponentActions.initializeComponentModels),\n    tap((action) => {\n      action.payload.forEach(({ componentModel }) => {\n        const componentDescriptor = this.rxViewComponentRegistryService.get(componentModel.type);\n        const sandbox = new ComponentSandbox(this.injector, componentModel.guid, componentDescriptor);\n        const model = new componentDescriptor.designComponentModel(this.injector, sandbox);\n\n        if (isFunction(model.rxInit)) {\n          model.rxInit();\n        }\n\n        this.viewDesignerModels.set(componentModel.guid, model);\n      });\n    }),\n    map(() => ViewDesignerActions.viewModelsInitialized())\n  );\n\n  @Effect({ dispatch: false })\n  registerComponentsValidation$ = this.actions$.pipe(\n    ofType(ViewComponentActions.initializeDataComponentModels, ViewComponentActions.initializeComponentModels),\n    tap((action) =>\n      this.rxViewExpressionValidatorRegistryService.registerComponents(\n        _map(action.payload, (payload) => payload.componentModel.guid)\n      )\n    )\n  );\n\n  @Effect({ dispatch: false })\n  onComponentsRemoved$ = this.actions$.pipe(\n    ofType(ViewComponentActions.componentsRemoved),\n    tap(({ guids }) => {\n      this.rxViewExpressionValidatorRegistryService.unregisterComponents(guids);\n      this.rxViewDataDictionaryStoreService.removeDataDictionaryForComponents(guids);\n    })\n  );\n\n  @Effect({ dispatch: false })\n  unregisterAllComponentsValidation$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.initViewDesigner, ViewDesignerActions.destroyViewDesigner),\n    tap(() => this.rxViewExpressionValidatorRegistryService.unregisterAllComponents())\n  );\n\n  @Effect()\n  insertComponent$ = this.actions$.pipe(\n    ofType(ViewComponentsActions.insertComponent),\n    map((payload) => {\n      const newPayload = {\n        insertIndex: payload.insertIndex,\n        columnIndex: payload.columnIndex,\n        outletName: payload.outletName,\n        parentGuid: payload.targetGuid\n      };\n\n      return payload.data.guid\n        ? ViewComponentsActions.moveComponent({\n            ...newPayload,\n            guid: payload.data.guid\n          })\n        : ViewComponentsActions.addNewComponents({\n            payload: [\n              {\n                ...newPayload,\n                type: payload.data.type,\n                selectComponent: true,\n                propertiesByName: payload.data.initialPropertiesByName\n              }\n            ]\n          });\n    })\n  );\n\n  @Effect()\n  addNewComponent$ = this.actions$.pipe(\n    ofType(ViewComponentsActions.addNewComponents),\n    withLatestFrom(this.store$.select(viewComponentModelsSelector)),\n    mergeMap(([action, viewComponentsState]) => {\n      const initializeComponentModelPayloads: IInitializeComponentModelActionPayload[] = [];\n      const initializeDataComponentModelPayloads: IInitializeDataComponentModelActionPayload[] = [];\n      const componentGuidsToSelect: string[] = [];\n\n      action.payload.forEach((component) => {\n        this.processAddComponentPayload(\n          component,\n          initializeComponentModelPayloads,\n          initializeDataComponentModelPayloads,\n          componentGuidsToSelect,\n          viewComponentsState\n        );\n      });\n\n      return [\n        initializeComponentModelPayloads.length\n          ? ViewComponentsActions.initializeComponentModels({ payload: initializeComponentModelPayloads })\n          : null,\n        initializeDataComponentModelPayloads.length\n          ? ViewComponentsActions.initializeDataComponentModels({ payload: initializeDataComponentModelPayloads })\n          : null,\n        componentGuidsToSelect.length\n          ? ViewComponentsActions.selectComponent({\n              guid: last(componentGuidsToSelect)\n            })\n          : null\n      ].filter(Boolean);\n    })\n  );\n\n  @Effect()\n  removeComponent$ = this.actions$.pipe(\n    ofType(ViewComponentsActions.removeComponents),\n    filter(({ guids }) => !isEmpty(guids)),\n    withLatestFrom(this.store$.select(viewComponentModelsSelector)),\n    mergeMap(([payload, viewComponentsState]) => {\n      const guidsToRemove = payload.guids.reduce((result: string[], guid: string) => {\n        const removedComponentModel = viewComponentsState[guid];\n\n        if (removedComponentModel) {\n          result.push(guid, ...getAllChildGuids(removedComponentModel, viewComponentsState));\n        }\n\n        return result;\n      }, []);\n\n      const removeGuidsSet = new Set(guidsToRemove);\n\n      removeGuidsSet.forEach((guid) => {\n        this.viewDesignerModels.delete(guid);\n        this.rxViewDesignerInspectorService.delete(guid);\n      });\n\n      const actions: Action[] = [ViewComponentsActions.componentsRemoved({ guids: [...removeGuidsSet] })];\n\n      if (payload.selectParent) {\n        const lastRemovedModel = viewComponentsState[last(payload.guids)];\n\n        if (lastRemovedModel?.parentGuid) {\n          actions.push(\n            ViewComponentsActions.selectComponent({\n              guid: lastRemovedModel.parentGuid\n            })\n          );\n        }\n      }\n\n      return actions;\n    })\n  );\n\n  @Effect()\n  setChildren$ = this.actions$.pipe(\n    ofType(ViewComponentActions.setChildComponents),\n    map((action) => action.payload),\n    withLatestFrom(this.store$.select(viewComponentModelsSelector)),\n    mergeMap(([actionPayload, viewComponentsState]) => {\n      const actions: Action[] = [];\n      const componentGuidsToRemove: string[] = [];\n      const addComponentsPayloadAll: IAddNewComponentActionPayload[] = [];\n      const editComponentPayloadAll: ISetComponentDataPayload[] = [];\n\n      processChildComponents(actionPayload);\n\n      function processChildComponents(payload: ISetChildrenActionPayload): void {\n        const componentsToSet: IViewComponentDesignSetPayload[] = payload.data;\n        const componentsGuidsToSet = componentsToSet.map((component) => component.guid);\n        const hostComponent = viewComponentsState[payload.guid];\n        let existingChildGuids: string[] = getChildGuidsFromModel(hostComponent);\n\n        if (payload.types) {\n          existingChildGuids = existingChildGuids.filter((guid) =>\n            payload.types.includes(viewComponentsState[guid].type)\n          );\n        }\n\n        const componentGuidsToRemoveLocal: string[] = difference(existingChildGuids, componentsGuidsToSet);\n        const componentGuidsToAdd: string[] = difference(componentsGuidsToSet, existingChildGuids);\n\n        const componentsGuidsToUpdate = difference(\n          existingChildGuids,\n          componentGuidsToAdd,\n          componentGuidsToRemoveLocal\n        );\n\n        componentGuidsToRemove.push(...componentGuidsToRemoveLocal);\n\n        const addComponentsPayload = componentsToSet.reduce<IAddNewComponentActionPayload[]>((result, action) => {\n          if (includes(componentGuidsToAdd, action.guid)) {\n            result.push(getAddComponentPayload(action, payload.guid));\n          }\n\n          return result;\n        }, []);\n\n        addComponentsPayloadAll.push(...addComponentsPayload);\n\n        const editComponentPayload = componentsToSet.reduce((result, action) => {\n          if (includes(componentsGuidsToUpdate, action.guid)) {\n            const existingModel: IViewComponentDesignModel = viewComponentsState[action.guid];\n\n            if (!isEqual(existingModel.propertiesByName, action.data || {})) {\n              result.push({ guid: action.guid, data: action.data });\n            }\n\n            if (action.children) {\n              processChildComponents({\n                guid: action.guid,\n                data: action.children\n              });\n            }\n          }\n\n          return result;\n        }, []);\n\n        editComponentPayloadAll.push(...editComponentPayload);\n      }\n\n      function getAddComponentPayload(\n        action: IViewComponentDesignSetPayload,\n        parentGuid: string\n      ): IAddNewComponentActionPayload {\n        const result: IAddNewComponentActionPayload = {\n          propertiesByName: action.data,\n          guid: action.guid,\n          parentGuid,\n          type: action.type,\n          columnIndex: action.columnIndex || 0,\n          insertIndex: action.insertIndex,\n          outletName: action.outletName || RX_VIEW_DEFINITION.defaultOutletName\n        };\n\n        if (action.children) {\n          result.children = _map(action.children, (child) => getAddComponentPayload(child, action.guid));\n        }\n\n        return result;\n      }\n\n      if (componentGuidsToRemove.length) {\n        actions.push(ViewComponentsActions.removeComponents({ guids: componentGuidsToRemove }));\n      }\n\n      if (addComponentsPayloadAll.length) {\n        actions.push(ViewComponentsActions.addNewComponents({ payload: addComponentsPayloadAll }));\n      }\n\n      if (editComponentPayloadAll.length) {\n        actions.push(ViewComponentsActions.setComponentData({ payload: editComponentPayloadAll }));\n      }\n\n      return actions;\n    })\n  );\n\n  private processAddComponentPayload(\n    component: IAddNewComponentActionPayload,\n    initializeComponentModelPayload: IInitializeComponentModelActionPayload[],\n    initializeDataComponentModelPayloads: IInitializeDataComponentModelActionPayload[],\n    componentGuidsToSelect: string[],\n    viewComponentsState: IViewComponentDesignModels\n  ): void {\n    const componentDescriptor = this.rxViewComponentRegistryService.get(component.type);\n\n    const payloadParent = initializeComponentModelPayload.find(\n      (payload) => payload.componentModel.guid === component.parentGuid\n    );\n\n    const modelParent = viewComponentsState[component.parentGuid];\n\n    const parentWithoutLayout =\n      (payloadParent && !payloadParent.componentModel.layout) || (modelParent && !modelParent.layout);\n\n    const componentModel: Partial<IViewComponentDesignModel> = {\n      guid: component.guid || this.rxGuidService.generate(),\n      type: component.type,\n      parentGuid: component.parentGuid,\n      propertiesByName: this.rxViewDesignerStateHelperService.getInitialComponentProperties(\n        component.propertiesByName,\n        componentDescriptor\n      ),\n      permissions: this.rxViewDesignerStateHelperService.getDefaultComponentPermissions(componentDescriptor)\n    };\n\n    if (this.rxViewComponentRegistryService.isDataComponentDescriptor(componentDescriptor) || parentWithoutLayout) {\n      componentModel.resourceType = componentDescriptor.isContainerComponent\n        ? RX_VIEW_DEFINITION.resourceTypes.containerViewComponent\n        : RX_VIEW_DEFINITION.resourceTypes.viewComponent;\n\n      initializeDataComponentModelPayloads.push({\n        componentModel: componentModel as IViewComponentDesignModel\n      });\n    } else {\n      componentModel.resourceType =\n        componentDescriptor.outlets || componentDescriptor.isContainerComponent\n          ? RX_VIEW_DEFINITION.resourceTypes.containerViewComponent\n          : RX_VIEW_DEFINITION.resourceTypes.viewComponent;\n\n      if (componentDescriptor.outlets) {\n        componentModel.layout = RxViewLayout.getEmptyViewLayoutForOutletNames(componentDescriptor.outlets);\n      }\n\n      initializeComponentModelPayload.push({\n        componentModel: componentModel as IViewComponentDesignModel,\n        insertIndex: component.insertIndex,\n        columnIndex: component.columnIndex || 0,\n        outletName: component.outletName || RX_VIEW_DEFINITION.defaultOutletName\n      });\n\n      if (component.selectComponent) {\n        componentGuidsToSelect.push(componentModel.guid);\n      }\n    }\n\n    forEach(component.children, (child) => {\n      this.processAddComponentPayload(\n        {\n          ...child,\n          parentGuid: componentModel.guid\n        },\n        initializeComponentModelPayload,\n        initializeDataComponentModelPayloads,\n        componentGuidsToSelect,\n        viewComponentsState\n      );\n    });\n  }\n\n  constructor(\n    private actions$: Actions,\n    private injector: Injector,\n    private viewDesignerModels: RxViewDesignerModels,\n    private rxGuidService: RxGuidService,\n    private store$: Store<any>,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private rxViewDesignerInspectorService: RxViewDesignerInspectorService,\n    private rxViewExpressionValidatorRegistryService: RxViewExpressionValidatorRegistryService,\n    private rxViewDesignerStateHelperService: RxViewDesignerStateHelperService,\n    private rxViewDataDictionaryStoreService: RxViewDataDictionaryStoreService\n  ) {}\n}\n"]}