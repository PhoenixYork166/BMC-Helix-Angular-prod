{"version":3,"file":"process-designer-frame.component.js","sourceRoot":"","sources":["../../../../../../../libs/platform/view/actions/launch-process-designer/process-designer-frame.component.ts","../../../../../../../libs/platform/view/actions/launch-process-designer/process-designer-frame.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, HostListener } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { ActiveModalRef, DismissReasons } from '@bmc-ux/adapt-angular';\nimport { RxProcessDefinitionCacheService } from '@helix/platform/process/api';\nimport { RX_DESIGNER, RxApplicationLoaderService, RxBundleCacheService } from '@helix/platform/shared/api';\nimport { RxUtilityModalsService } from '@helix/platform/ui-kit';\nimport { IWindowMessage, RxJsonParserService } from '@helix/platform/utils';\n\n@Component({\n  selector: 'rx-process-designer-frame',\n  templateUrl: './process-designer-frame.component.html',\n  styleUrls: ['./process-designer-frame.component.scss']\n})\nexport class ProcessDesignerFrameComponent {\n  context: ActiveModalRef;\n  iframeSrc: SafeResourceUrl;\n  isProcessDesignerLoadingInProgress = true;\n  isDefinitionDirty = false;\n\n  @HostListener('window:message', ['$event'])\n  onMessage(event: MessageEvent): void {\n    if (event.data) {\n      const message = this.rxJsonParserService.tryParseJson<IWindowMessage>(event.data);\n\n      if (message) {\n        switch (message.messageType) {\n          case RX_DESIGNER.messageTypes.designerLoaded: {\n            this.isProcessDesignerLoadingInProgress = false;\n\n            break;\n          }\n\n          case RX_DESIGNER.messageTypes.afterSave: {\n            this.isDefinitionDirty = false;\n\n            break;\n          }\n\n          case RX_DESIGNER.messageTypes.definitionStatusChanged: {\n            this.isDefinitionDirty = message.payload.isDirty;\n\n            break;\n          }\n\n          case RX_DESIGNER.messageTypes.closeDesigner: {\n            if (message.payload.processDefinitionName) {\n              if (this.isDefinitionDirty) {\n                this.rxUtilityModalsService.confirmUnsavedChanges().then((isConfirmed) => {\n                  if (isConfirmed) {\n                    this.closeProcessDesigner(message.payload.processDefinitionName);\n                  }\n                });\n              } else {\n                this.closeProcessDesigner(message.payload.processDefinitionName);\n              }\n            } else {\n              if (this.isDefinitionDirty) {\n                this.rxUtilityModalsService.confirmUnsavedChanges().then((isConfirmed) => {\n                  if (isConfirmed) {\n                    this.context.dismiss(DismissReasons.CLOSE_BTN);\n                  }\n                });\n              } else {\n                this.context.dismiss(DismissReasons.CLOSE_BTN);\n              }\n            }\n\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  constructor(\n    private rxApplicationLoaderService: RxApplicationLoaderService,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxJsonParserService: RxJsonParserService,\n    private rxProcessDefinitionCacheService: RxProcessDefinitionCacheService,\n    private domSanitizer: DomSanitizer,\n    private activeModalRef: ActiveModalRef,\n    private rxUtilityModalsService: RxUtilityModalsService\n  ) {\n    this.context = activeModalRef;\n\n    const data = this.context.getData();\n\n    localStorage.setItem('ProcessDesignerPaletteElements', data.paletteElements);\n\n    this.iframeSrc = this.domSanitizer.bypassSecurityTrustResourceUrl(\n      `/com.bmc.arsys.rx.innovationstudio/index.html#/app/bundle/${this.rxBundleCacheService.bundleId}/iprocess/${\n        data.processDefinitionName ? data.processDefinitionName : ''\n      }`\n    );\n  }\n\n  private closeProcessDesigner(processDefinitionName: string): void {\n    this.rxProcessDefinitionCacheService.clearCache([processDefinitionName]);\n    this.context.close({ processDefinitionName });\n  }\n}\n","<div id=\"rx-application-loader-container\" class=\"position-absolute w-100\" *ngIf=\"isProcessDesignerLoadingInProgress\">\n  <div class=\"rx-application-loader\"></div>\n</div>\n\n<iframe [src]=\"iframeSrc\" class=\"h-100\"></iframe>\n"]}