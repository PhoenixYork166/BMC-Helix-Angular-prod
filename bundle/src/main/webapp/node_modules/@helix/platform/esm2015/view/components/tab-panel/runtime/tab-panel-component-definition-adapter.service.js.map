{"version":3,"file":"tab-panel-component-definition-adapter.service.js","sourceRoot":"","sources":["../../../../../../../../libs/platform/view/components/tab-panel/runtime/tab-panel-component-definition-adapter.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAC5D,OAAO,EAGL,mBAAmB,EACnB,6BAA6B,EAC9B,MAAM,0BAA0B,CAAC;;;;AAGlC,MAAM,OAAO,2CAA2C;IAEtD,YACU,2BAA0D,EAC1D,mBAAwC;QADxC,gCAA2B,GAA3B,2BAA2B,CAA+B;QAC1D,wBAAmB,GAAnB,mBAAmB,CAAqB;IAC/C,CAAC;IAEJ,eAAe,CAAC,+BAAkE;QAChF,IAAI,CAAC,2BAA2B;aAC7B,aAAa,CAAC,+BAA+B,CAAC;aAC9C,MAAM,CAAC,CAAC,aAAa,EAAE,EAAE,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,KAAK,mBAAmB,CAAC,QAAQ,CAAC;aAClG,GAAG,CAAC,CAAC,aAAa,EAAE,EAAE,CAAC,aAAa,CAAC,mBAAwD,CAAC;aAC9F,OAAO,CAAC,CAAC,mBAAmB,EAAE,EAAE;YAC/B,IAAI,mBAAmB,CAAC,MAAM,EAAE;gBAC9B,IAAI,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;gBAE/E,IAAI,MAAM,IAAI,MAAM,CAAC,qBAAqB,EAAE;oBAC1C,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;wBAC5C,OAAO;4BACL,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,qBAAqB,CAAC;yBAC7F,CAAC;oBACJ,CAAC,CAAC,CAAC;oBAEH,MAAM,GAAG;wBACP,OAAO,EAAE;4BACP;gCACE,IAAI,EAAE,SAAS;gCACf,OAAO,EAAE,OAAO;6BACjB;yBACF;qBACF,CAAC;oBAEF,mBAAmB,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;iBACrD;aACF;QACH,CAAC,CAAC,CAAC;IACP,CAAC;;wIApCU,2CAA2C;4IAA3C,2CAA2C;2FAA3C,2CAA2C;kBADvD,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { IDefinitionAdapter } from '@helix/platform/shared/api';\nimport { RxJsonParserService } from '@helix/platform/utils';\nimport {\n  IContainerViewComponentDefinition,\n  IViewDefinition,\n  RxViewComponentType,\n  RxViewDefinitionParserService\n} from '@helix/platform/view/api';\n\n@Injectable()\nexport class RxTabPanelComponentDefinitionAdapterService\n  implements IDefinitionAdapter<IContainerViewComponentDefinition, IViewDefinition> {\n  constructor(\n    private viewDefinitionParserService: RxViewDefinitionParserService,\n    private rxJsonParserService: RxJsonParserService\n  ) {}\n\n  adaptDefinition(tabPanelViewComponentDefinition: IContainerViewComponentDefinition) {\n    this.viewDefinitionParserService\n      .getComponents(tabPanelViewComponentDefinition)\n      .filter((componentPair) => componentPair.componentDefinition.type === RxViewComponentType.TabPanel)\n      .map((componentPair) => componentPair.componentDefinition as IContainerViewComponentDefinition)\n      .forEach((componentDefinition) => {\n        if (componentDefinition.layout) {\n          let layout = this.rxJsonParserService.tryParseJson(componentDefinition.layout);\n\n          if (layout && layout.componentDefinitionId) {\n            const columns = layout.columns.map((column) => {\n              return {\n                children: column.children.map((child) => child.columns[0].children[0].componentDefinitionId)\n              };\n            });\n\n            layout = {\n              outlets: [\n                {\n                  name: 'DEFAULT',\n                  columns: columns\n                }\n              ]\n            };\n\n            componentDefinition.layout = JSON.stringify(layout);\n          }\n        }\n      });\n  }\n}\n"]}