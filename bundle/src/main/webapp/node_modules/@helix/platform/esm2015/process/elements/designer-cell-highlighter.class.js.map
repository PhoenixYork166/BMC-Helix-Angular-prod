{"version":3,"file":"designer-cell-highlighter.class.js","sourceRoot":"","sources":["../../../../../../libs/platform/process/elements/designer-cell-highlighter.class.ts"],"names":[],"mappings":"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","sourcesContent":["import { extend, result } from 'lodash';\nimport * as Backbone from 'backbone';\nimport * as processShapes from './process-shapes';\n\ndeclare var V: any;\n\nexport class RxDesignerCellHighlighter extends Backbone.View {\n  selectors = {\n    bpmn: {\n      'bpmn.Event': '.scalable circle.outer',\n      'bpmn.Annotation': '.rotatable path.stroke',\n      link: 'path.connection',\n      'bpmn.Flow': 'path.connection',\n      'bpmn.Gateway': '.scalable polygon.body',\n      'bpmn.Activity': '.scalable rect.outer',\n      'basic.Rect': '.scalable rect'\n    },\n    rx: {\n      'rx.TextAnnotation': '.rotatable path.stroke',\n      'rx.TextAnnotationAssociation': 'path.connection',\n      'rx.SequenceFlow': 'path.connection',\n      'rx.ParallelGateway': '.scalable polygon.body',\n      'rx.ExclusiveGateway': '.scalable polygon.body',\n      'rx.StartEvent': '.scalable circle.outer',\n      'rx.EndEvent': '.scalable circle.outer',\n      'rx.SubProcess': '.rotatable rect.outer',\n      'rx.ReceiveTask': '.rotatable rect.outer',\n      'rx.UserTask': '.rotatable rect.outer',\n      'rx.Connector': '.rotatable rect.outer',\n      'rx.TimerEvent': '.scalable circle.outer',\n      'rx.WebRequest': '.rotatable rect.outer'\n    }\n  };\n\n  cellView;\n\n  cellViewHighlighter;\n\n  options: {\n    strokeWidth: 10;\n    circleRadius: 31.5;\n    color: 'green';\n  };\n\n  constructor(cellView) {\n    super();\n\n    this.cellView = cellView;\n\n    this.listenTo(this.cellView.paper, 'scale translate', this.update);\n\n    this.$el = this.cellView.$el;\n  }\n\n  init(options) {\n    this.options = extend({}, result(this, 'options'), options || {});\n\n    this.cellView.model.on('remove', this.eraseHighlightAndRemove);\n\n    this.update();\n  }\n\n  update() {\n    this.eraseHighlight();\n    this.drawHighlight();\n  }\n\n  eraseHighlightAndRemove(evt) {\n    this.eraseHighlight();\n    Backbone.View.prototype.remove.apply(this, arguments);\n  }\n\n  private eraseHighlight() {\n    if (this.cellViewHighlighter) {\n      this.cellViewHighlighter.remove();\n    }\n  }\n\n  private drawHighlight() {\n    let selector;\n\n    switch (true) {\n      case this.cellView.model instanceof processShapes.rx.ProcessAction:\n      case this.cellView.model instanceof processShapes.rx.BaseCallActivity:\n        selector = '.rotatable rect.outer';\n        break;\n\n      default:\n        selector =\n          this.selectors.rx[this.cellView.model.prop('type')] || this.selectors.bpmn[this.cellView.model.prop('type')];\n    }\n\n    const shape = this.cellView.$el.find(selector).first();\n    const highlight = shape[0] ? V(shape[0]).clone() : undefined;\n\n    if (highlight) {\n      highlight.attr({\n        stroke: this.options.color,\n        'stroke-width': this.options.strokeWidth\n      });\n\n      if (highlight.node.tagName === 'circle') {\n        highlight.attr({\n          r: this.options.circleRadius\n        });\n      }\n\n      this.cellViewHighlighter = highlight;\n\n      shape.closest('g').prepend(highlight.node);\n    }\n  }\n}\n"]}