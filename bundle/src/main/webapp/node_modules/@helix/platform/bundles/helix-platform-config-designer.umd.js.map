{"version":3,"file":"helix-platform-config-designer.umd.js","sources":["../../../../libs/platform/config/designer/config-designer.constant.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../libs/platform/config/designer/config-designer/+state/config-designer.actions.ts","../../../../libs/platform/config/designer/config-designer/+state/config-designer.selectors.ts","../../../../libs/platform/config/designer/config-designer.service.ts","../../../../libs/platform/config/designer/services/base-field-definition.service.ts","../../../../libs/platform/config/designer/services/attachment-field-definition.service.ts","../../../../libs/platform/config/designer/services/boolean-field-definition.service.ts","../../../../libs/platform/config/designer/services/character-field-definition.service.ts","../../../../libs/platform/config/designer/services/color-field-definition.service.ts","../../../../libs/platform/config/designer/services/date-only-field-definition.service.ts","../../../../libs/platform/config/designer/services/numeric-field-definition.service.ts","../../../../libs/platform/config/designer/services/decimal-field-definition.service.ts","../../../../libs/platform/config/designer/services/integer-field-definition.service.ts","../../../../libs/platform/config/designer/services/secure-field-definition.service.ts","../../../../libs/platform/config/designer/services/selection-field-definition.service.ts","../../../../libs/platform/config/designer/services/field-definition-manager.service.ts","../../../../libs/platform/config/designer/config-designer/config-designer.component.ts","../../../../libs/platform/config/designer/config-designer/config-designer.component.html","../../../../libs/platform/config/designer/config-designer/+state/config-designer-model.reducer.ts","../../../../libs/platform/config/designer/config-designer/field-groups-editor/field-groups-editor.store.ts","../../../../libs/platform/config/designer/config-designer/field-groups-editor/field-groups-editor.component.ts","../../../../libs/platform/config/designer/config-designer/field-groups-editor/field-groups-editor.component.html","../../../../libs/platform/config/designer/config-designer/+state/config-designer.effects.ts","../../../../libs/platform/config/designer/config-designer/config-designer.module.ts","../../../../libs/platform/config/designer/config-designer-page/config-designer-page.component.ts","../../../../libs/platform/config/designer/config-designer-page/config-designer-page.component.html","../../../../libs/platform/config/designer/config-designer-page/config-designer-page.module.ts","../../../../libs/platform/config/designer/helix-platform-config-designer.ts"],"sourcesContent":["import { ShowInLocationOptions } from '@helix/platform/config/api';\n\nexport const RX_CONFIG_DESIGNER = {\n  featureSelector: 'configDesigner',\n\n  settingAccessOptions: {\n    application: {\n      label: 'Application',\n      value: ShowInLocationOptions.Application\n    },\n    innovationStudio: {\n      label: 'Innovation Studio',\n      value: ShowInLocationOptions.InnovationStudio\n    },\n    both: {\n      value: ShowInLocationOptions.Both\n    },\n    none: {\n      value: ShowInLocationOptions.None\n    }\n  },\n  dataTypes: {\n    attachment: {\n      labelKey: 'com.bmc.arsys.rx.client.common.data-types.attachment.label',\n      resourceType: 'com.bmc.arsys.rx.admin-settings.AttachmentFieldDefinition'\n    },\n    color: {\n      labelKey: 'com.bmc.arsys.rx.client.common.data-types.color.label',\n      resourceType: 'com.bmc.arsys.rx.admin-settings.ColorChooserFieldDefinition'\n    },\n    secure: {\n      labelKey: 'com.bmc.arsys.rx.client.common.data-types.secure.label',\n      resourceType: 'com.bmc.arsys.rx.admin-settings.SecureDataFieldDefinition'\n    }\n  }\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { createAction, props } from '@ngrx/store';\nimport { IConfigDefinition } from '@helix/platform/config/api';\nimport { IInitConfigDesignerActionPayload } from './config-designer.types';\nimport { IConfigDefinitionModel, IConfigFieldDefinitionModel } from '../../config-designer.types';\n\nexport const init = createAction('[Config Designer] Init', props<{ payload: IInitConfigDesignerActionPayload }>());\n\nexport const loadParentComponents = createAction('[Config Designer] Load Parent Components');\n\nexport const loadParentComponentsSuccess = createAction(\n  '[Config Designer] Load Parent Components Success',\n  props<{ parentComponents: string[] }>()\n);\n\nexport const loadDefinition = createAction('[Config Designer] Load Definition');\n\nexport const loadDefinitionSuccess = createAction(\n  '[Config Designer] Load Definition Success',\n  props<{ definition: IConfigDefinition }>()\n);\n\nexport const initDefinitionModel = createAction(\n  '[Config Designer] Init Definition Model',\n  props<{ definitionModelFromDefinition: IConfigDefinitionModel }>()\n);\n\nexport const markDesignerPristine = createAction('[Config Designer] Mark Designer Pristine');\n\nexport const markDesignerDirty = createAction('[Config Designer] Mark Designer Dirty');\n\nexport const updateDefinitionModelFromDesigner = createAction(\n  '[Config Designer] Update Definition Model From Designer',\n  props<{ definitionModelFromDesigner: IConfigDefinitionModel }>()\n);\n\nexport const updateSelectedFieldModel = createAction(\n  '[Config Designer] Update Selected Field Model',\n  props<{ selectedFieldModel: IConfigFieldDefinitionModel }>()\n);\n\nexport const createNewFieldModel = createAction(\n  '[Config Designer] Create New Field Model',\n  props<{ resourceType: string; isLoginNameField: boolean }>()\n);\n\nexport const addFieldModel = createAction(\n  '[Config Designer] Add Field Model',\n  props<{ newFieldModel: IConfigFieldDefinitionModel }>()\n);\n\nexport const clearSelectedFieldGuid = createAction('[Config Designer] Clear Selected Field GUID');\n\nexport const setSelectedFieldGuid = createAction(\n  '[Config Designer] Set Selected Field GUID',\n  props<{ guid: string }>()\n);\n\nexport const deleteSelectedField = createAction('[Config Designer] Delete Selected Field');\n\nexport const deleteSelectedFieldSuccess = createAction('[Config Designer] Delete Selected Field Success');\n\nexport const toggleDesignMode = createAction('[Config Designer] Toggle Design Mode');\n\nexport const editFieldGroups = createAction('[Config Designer] Edit Field Groups');\n\nexport const setInspectorTabIndex = createAction(\n  '[Config Designer] Set Inspector Tab Index',\n  props<{ inspectorTabIndex: number }>()\n);\n\nexport const saveDefinition = createAction('[Config Designer] Save Definition');\n\nexport const updateDefinition = createAction(\n  '[Config Designer] Update Definition',\n  props<{ definition: IConfigDefinition }>()\n);\n\nexport const saveDefinitionSuccess = createAction(\n  '[Config Designer] Save Definition Success',\n  props<{ savedDefinitionName: string }>()\n);\n\nexport const saveDefinitionError = createAction('[Config Designer] Save Definition Error');\n\nexport const destroy = createAction('[Config Designer] Destroy');\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { IConfigDesignerModel, IConfigDesignerState } from './config-designer.types';\nimport { RX_CONFIG_DESIGNER } from '../../config-designer.constant';\n\nexport const configDesignerStateSelector = createFeatureSelector<IConfigDesignerState>(\n  RX_CONFIG_DESIGNER.featureSelector\n);\n\nexport const configDesignerModelSelector = createSelector(\n  configDesignerStateSelector,\n  (configDesignerState: IConfigDesignerState) => configDesignerState.model\n);\n\nexport const bundleIdSelector = createSelector(\n  configDesignerModelSelector,\n  (configDesignerModel: IConfigDesignerModel) => configDesignerModel.bundleId\n);\n\nexport const definitionNameSelector = createSelector(\n  configDesignerModelSelector,\n  (configDesignerModel: IConfigDesignerModel) => configDesignerModel.definitionName\n);\n\nexport const isDesignModeSelector = createSelector(\n  configDesignerModelSelector,\n  (configDesignerModel: IConfigDesignerModel) => configDesignerModel.isDesignMode\n);\n\nexport const inspectorTabIndexSelector = createSelector(\n  configDesignerModelSelector,\n  (configDesignerModel: IConfigDesignerModel) => configDesignerModel.inspectorTabIndex\n);\n\nexport const parentComponentsSelector = createSelector(\n  configDesignerModelSelector,\n  (configDesignerModel: IConfigDesignerModel) => configDesignerModel.parentComponents\n);\n\nexport const selectedFieldGuidSelector = createSelector(\n  configDesignerModelSelector,\n  (configDesignerModel: IConfigDesignerModel) => configDesignerModel.selectedFieldGuid\n);\n\nexport const definitionModelFromDefinitionSelector = createSelector(\n  configDesignerModelSelector,\n  (configDesignerModel: IConfigDesignerModel) => configDesignerModel.definitionModelFromDefinition\n);\n\nexport const definitionModelSelector = createSelector(\n  configDesignerModelSelector,\n  (configDesignerModel: IConfigDesignerModel) => configDesignerModel.definitionModel\n);\n\nexport const isDirtySelector = createSelector(\n  configDesignerModelSelector,\n  (configDesignerModel: IConfigDesignerModel) => configDesignerModel.isDirty\n);\n\nexport const savedDefinitionNameSelector = createSelector(\n  configDesignerModelSelector,\n  (configDesignerModel: IConfigDesignerModel) => configDesignerModel.savedDefinitionName\n);\n","import { Injectable } from '@angular/core';\nimport { IConfigDefinition, IConfigFieldDefinition, ImpactRowVisibility } from '@helix/platform/config/api';\nimport { RX_CONFIG_DESIGNER } from './config-designer.constant';\nimport { isNil } from 'lodash';\nimport { IConfigDefinitionModel, IConfigFieldDefinitionModel } from './config-designer.types';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigDesignerService {\n  getDefinitionFromDefinitionModel(model: IConfigDefinitionModel): IConfigDefinition {\n    return {\n      componentName: model.componentName,\n      showInLocation:\n        model.isSettingAccessibleInApplication && model.isSettingAccessibleInInnovationStudio\n          ? RX_CONFIG_DESIGNER.settingAccessOptions.both.value\n          : model.isSettingAccessibleInApplication\n          ? RX_CONFIG_DESIGNER.settingAccessOptions.application.value\n          : model.isSettingAccessibleInInnovationStudio\n          ? RX_CONFIG_DESIGNER.settingAccessOptions.innovationStudio.value\n          : RX_CONFIG_DESIGNER.settingAccessOptions.none.value,\n      supportsMultiple: model.supportsMultiple,\n      parentComponentName: model.parentComponentName,\n      impactRowVisibility:\n        isNil(model.parentComponentName) && model.supportsMultiple\n          ? model.impactRowVisibility\n          : ImpactRowVisibility.None,\n      permissions: model.permissions,\n      registeredModuleName: model.registeredModuleName,\n      viewComponent: model.viewComponent,\n      externalLink: model.externalLink,\n      viewToOpen: model.viewToOpen,\n      localeList: [\n        {\n          componentLabel: model.componentLabel,\n          firstMenu:\n            isNil(model.parentComponentName) &&\n            (model.isSettingAccessibleInApplication || model.isSettingAccessibleInInnovationStudio)\n              ? model.firstMenu\n              : null,\n          secondMenu:\n            isNil(model.parentComponentName) &&\n            (model.isSettingAccessibleInApplication || model.isSettingAccessibleInInnovationStudio)\n              ? model.secondMenu\n              : null,\n          locale: 'en-US'\n        }\n      ],\n      settingMetaData: model.fields.map<IConfigFieldDefinition>((field: IConfigFieldDefinitionModel) => ({\n        dataType: field.dataType,\n        defaultValue:\n          field.dataType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType\n            ? field.selectionFieldOptionProperties.defaultValue\n            : field.defaultValue,\n        minValue: field.minValue,\n        maxValue: field.maxValue,\n        fieldOrder: field.fieldOrder,\n        id: field.id,\n        keySetting: field.keySetting,\n        required: field.required,\n        optionNamesById: field.selectionFieldOptionProperties?.optionNamesById,\n        optionLabelsById: field.selectionFieldOptionProperties?.optionLabelsById,\n        localeList: [\n          {\n            ...field.localeList[0],\n            settingLabel: field.settingLabel\n          }\n        ]\n      }))\n    };\n  }\n}\n","import { IFieldOptions } from '@helix/platform/config/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport {\n  ISelectFormControlOptions,\n  ISwitcherFormControlOptions,\n  ITextFormControlOptions,\n  SelectFormControlComponent,\n  SwitchFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RX_CONFIG_DESIGNER } from '../config-designer.constant';\nimport { Injector } from '@angular/core';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { IConfigFieldDefinitionModel } from '../config-designer.types';\nimport { trim } from 'lodash';\n\nexport abstract class BaseFieldDefinitionService {\n  protected translateService = this.injector.get(TranslateService);\n\n  private readonly defaultFieldGroupName = this.translateService.instant(\n    'com.bmc.arsys.rx.client.common.general-items.label'\n  );\n\n  abstract readonly dataType: string;\n\n  constructor(private injector: Injector) {}\n\n  getNewFieldDefinitionModel(fieldProperties: Partial<IConfigFieldDefinitionModel>): IConfigFieldDefinitionModel {\n    return {\n      dataType: this.dataType,\n      required: false,\n      defaultValue: null,\n      localeList: [\n        {\n          locale: 'en',\n          fieldGrouping: this.defaultFieldGroupName,\n          settingLabel: fieldProperties.id\n        }\n      ],\n      ...fieldProperties\n    } as IConfigFieldDefinitionModel;\n  }\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    return [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n        controls: [\n          {\n            name: 'id',\n            component: TextFormControlComponent,\n            isDisabled: !options.isNew,\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label'),\n              required: true\n            } as ITextFormControlOptions\n          },\n          {\n            name: 'settingLabel',\n            component: TextFormControlComponent,\n            options: {\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.config-designer.config-properties.field-label.label'\n              ),\n              required: true\n            }\n          },\n          {\n            name: 'dataType',\n            component: SelectFormControlComponent,\n            isDisabled: true,\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.data-type.label'),\n              options: [\n                {\n                  id: RX_CONFIG_DESIGNER.dataTypes.attachment.resourceType,\n                  name: this.translateService.instant(RX_CONFIG_DESIGNER.dataTypes.attachment.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.boolean.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.boolean.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.character.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.character.labelKey)\n                },\n                {\n                  id: RX_CONFIG_DESIGNER.dataTypes.color.resourceType,\n                  name: this.translateService.instant(RX_CONFIG_DESIGNER.dataTypes.color.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.dateOnly.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.decimal.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.decimal.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.integer.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.integer.labelKey)\n                },\n                {\n                  id: RX_CONFIG_DESIGNER.dataTypes.secure.resourceType,\n                  name: this.translateService.instant(RX_CONFIG_DESIGNER.dataTypes.secure.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.selection.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.selection.labelKey)\n                }\n              ]\n            } as ISelectFormControlOptions\n          }\n        ]\n      },\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.details.label'),\n        controls: [\n          {\n            name: 'required',\n            component: SwitchFormControlComponent,\n            options: {\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.config-designer.config-properties.required-field.label'\n              )\n            } as ISwitcherFormControlOptions\n          },\n          {\n            name: 'keySetting',\n            component: SwitchFormControlComponent,\n            options: {\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.config-designer.config-properties.key-field.label'\n              )\n            } as ISwitcherFormControlOptions\n          }\n        ]\n      }\n    ] as IFormBuilderConfig;\n  }\n\n  validate(fieldModel: IConfigFieldDefinitionModel): IValidationIssue[] {\n    const validationIssues: IValidationIssue[] = [];\n\n    if (!trim(fieldModel.id)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label')\n          }\n        ),\n        data: {\n          propertyName: 'id',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (!trim(fieldModel.settingLabel)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.field-label.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'settingLabel',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { CounterFormControlComponent, ICounterFormControlOptions } from '@helix/platform/shared/components';\nimport { RX_CONFIG_DESIGNER } from '../config-designer.constant';\nimport { BaseFieldDefinitionService } from './base-field-definition.service';\nimport { RX_NUMBER } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttachmentFieldDefinitionService extends BaseFieldDefinitionService {\n  dataType = RX_CONFIG_DESIGNER.dataTypes.attachment.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(options);\n\n    // Removed 'Key field for repeated setting' control from Details section\n    inspectorConfig[1].controls.pop();\n\n    // Adding controls specific to attachment field to Details section\n    inspectorConfig[1].controls.push({\n      name: 'maxValue',\n      component: CounterFormControlComponent,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.max-file-size.label'),\n        allowIntegerOnly: true,\n        minValue: 0,\n        maxValue: RX_NUMBER.maxInteger\n      } as ICounterFormControlOptions\n    });\n\n    return inspectorConfig;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { ISelectFormControlOptions, SelectFormControlComponent } from '@helix/platform/shared/components';\nimport { BaseFieldDefinitionService } from './base-field-definition.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BooleanFieldDefinitionService extends BaseFieldDefinitionService {\n  dataType = RX_RECORD_DEFINITION.dataTypes.boolean.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(options);\n\n    // Adding controls specific to boolean field to Details section\n    inspectorConfig[1].controls.splice(1, 0, {\n      name: 'defaultValue',\n      component: SelectFormControlComponent,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n        emptyOption: true,\n        options: [\n          {\n            id: 'true',\n            name: this.translateService.instant('com.bmc.arsys.rx.client.common.true')\n          },\n          {\n            id: 'false',\n            name: this.translateService.instant('com.bmc.arsys.rx.client.common.false')\n          }\n        ]\n      } as ISelectFormControlOptions\n    });\n\n    return inspectorConfig;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport {\n  CounterFormControlComponent,\n  ICounterFormControlOptions,\n  ITextFormControlOptions,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { BaseFieldDefinitionService } from './base-field-definition.service';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { RX_NUMBER, RxNumberUtilsService } from '@helix/platform/utils';\nimport { IConfigFieldDefinitionModel } from '../config-designer.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterFieldDefinitionService extends BaseFieldDefinitionService {\n  dataType = RX_RECORD_DEFINITION.dataTypes.character.resourceType;\n\n  constructor(injector: Injector, private rxNumberUtilsService: RxNumberUtilsService) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(options);\n\n    // Adding controls specific to character field to Details section\n    inspectorConfig[1].controls.splice(\n      1,\n      0,\n      {\n        name: 'minValue',\n        component: CounterFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.config-designer.config-properties.min-length.label'\n          ),\n          allowIntegerOnly: true,\n          minValue: 0,\n          maxValue: RX_NUMBER.maxInteger\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'maxValue',\n        component: CounterFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.config-designer.config-properties.max-length.label'\n          ),\n          allowIntegerOnly: true,\n          minValue: 0,\n          maxValue: RX_NUMBER.maxInteger\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'defaultValue',\n        component: TextFormControlComponent,\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n        } as ITextFormControlOptions\n      }\n    );\n\n    return inspectorConfig;\n  }\n\n  validate(fieldModel: IConfigFieldDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel);\n\n    if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.minValue) && Number(fieldModel.minValue) < 0) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.invalid-min-length-error.message'\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxValue) && Number(fieldModel.maxValue) < 0) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.invalid-min-length-error.message'\n        ),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.minValue && Number(fieldModel.minValue) > RX_NUMBER.maxInteger) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.min-length.label'\n            ),\n            maxValue: RX_NUMBER.maxInteger\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.maxValue && Number(fieldModel.maxValue) > RX_NUMBER.maxInteger) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.max-length.label'\n            ),\n            maxValue: RX_NUMBER.maxInteger\n          }\n        ),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.minValue) &&\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxValue) &&\n      Number(fieldModel.minValue) > Number(fieldModel.maxValue)\n    ) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.min-length.label'\n            ),\n            maxValue: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.max-length.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { ColorPickerFormControlComponent, IColorPickerFormControlOptions } from '@helix/platform/shared/components';\nimport { RX_CONFIG_DESIGNER } from '../config-designer.constant';\nimport { BaseFieldDefinitionService } from './base-field-definition.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColorFieldDefinitionService extends BaseFieldDefinitionService {\n  dataType = RX_CONFIG_DESIGNER.dataTypes.color.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(options);\n\n    // Adding controls specific to color field to Details section\n    inspectorConfig[1].controls.splice(1, 0, {\n      name: 'defaultValue',\n      component: ColorPickerFormControlComponent,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n      } as IColorPickerFormControlOptions\n    });\n\n    return inspectorConfig;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { DateFormControlComponent, IDateFormControlOptions } from '@helix/platform/shared/components';\nimport { BaseFieldDefinitionService } from './base-field-definition.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DateOnlyFieldDefinitionService extends BaseFieldDefinitionService {\n  dataType = RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(options);\n\n    // Adding controls specific to date only field to Details section\n    inspectorConfig[1].controls.splice(1, 0, {\n      name: 'defaultValue',\n      component: DateFormControlComponent,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n      } as IDateFormControlOptions\n    });\n\n    return inspectorConfig;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IConfigFieldDefinitionModel } from '../config-designer.types';\nimport { BaseFieldDefinitionService } from './base-field-definition.service';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { RxNumberUtilsService } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class NumericFieldDefinitionService extends BaseFieldDefinitionService {\n  abstract readonly minValue: number;\n  abstract readonly maxValue: number;\n\n  constructor(injector: Injector, private rxNumberUtilsService: RxNumberUtilsService) {\n    super(injector);\n  }\n\n  validate(fieldModel: IConfigFieldDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel);\n\n    if (fieldModel.minValue && Number(fieldModel.minValue) < this.minValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n            ),\n            minValue: this.minValue\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.minValue && Number(fieldModel.minValue) > this.maxValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n            ),\n            maxValue: this.maxValue\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.maxValue && Number(fieldModel.maxValue) < this.minValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n            ),\n            minValue: this.minValue\n          }\n        ),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.maxValue && Number(fieldModel.maxValue) > this.maxValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n            ),\n            maxValue: this.maxValue\n          }\n        ),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.defaultValue && Number(fieldModel.defaultValue) < this.minValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n            minValue: this.minValue\n          }\n        ),\n        data: {\n          propertyName: 'defaultValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.defaultValue && Number(fieldModel.defaultValue) > this.maxValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n            maxValue: this.maxValue\n          }\n        ),\n        data: {\n          propertyName: 'defaultValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.defaultValue) &&\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.minValue) &&\n      Number(fieldModel.defaultValue) >= this.minValue &&\n      Number(fieldModel.defaultValue) < Number(fieldModel.minValue)\n    ) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n            minValue: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'defaultValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.defaultValue) &&\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxValue) &&\n      Number(fieldModel.defaultValue) <= this.maxValue &&\n      Number(fieldModel.defaultValue) > Number(fieldModel.maxValue)\n    ) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n            maxValue: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'defaultValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.minValue) &&\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxValue) &&\n      Number(fieldModel.minValue) > Number(fieldModel.maxValue)\n    ) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n            ),\n            maxValue: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { CounterFormControlComponent, ICounterFormControlOptions } from '@helix/platform/shared/components';\nimport { RX_NUMBER } from '@helix/platform/utils';\nimport { NumericFieldDefinitionService } from './numeric-field-definition.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DecimalFieldDefinitionService extends NumericFieldDefinitionService {\n  dataType = RX_RECORD_DEFINITION.dataTypes.decimal.resourceType;\n  minValue = RX_NUMBER.minDecimal;\n  maxValue = RX_NUMBER.maxDecimal;\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(options);\n\n    // Adding controls specific to decimal field to Details section\n    inspectorConfig[1].controls.splice(\n      1,\n      0,\n      {\n        name: 'minValue',\n        component: CounterFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n          ),\n          minValue: RX_NUMBER.minDecimal,\n          maxValue: RX_NUMBER.maxDecimal\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'maxValue',\n        component: CounterFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n          ),\n          minValue: RX_NUMBER.minDecimal,\n          maxValue: RX_NUMBER.maxDecimal\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'defaultValue',\n        component: CounterFormControlComponent,\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n          minValue: RX_NUMBER.minDecimal,\n          maxValue: RX_NUMBER.maxDecimal\n        } as ICounterFormControlOptions\n      }\n    );\n\n    return inspectorConfig;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { CounterFormControlComponent, ICounterFormControlOptions } from '@helix/platform/shared/components';\nimport { RX_NUMBER } from '@helix/platform/utils';\nimport { NumericFieldDefinitionService } from './numeric-field-definition.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IntegerFieldDefinitionService extends NumericFieldDefinitionService {\n  dataType = RX_RECORD_DEFINITION.dataTypes.integer.resourceType;\n  minValue = RX_NUMBER.minInteger;\n  maxValue = RX_NUMBER.maxInteger;\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(options);\n\n    // Adding controls specific to integer field to Details section\n    inspectorConfig[1].controls.splice(\n      1,\n      0,\n      {\n        name: 'minValue',\n        component: CounterFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n          ),\n          minValue: RX_NUMBER.minInteger,\n          maxValue: RX_NUMBER.maxInteger,\n          allowIntegerOnly: true\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'maxValue',\n        component: CounterFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n          ),\n          minValue: RX_NUMBER.minInteger,\n          maxValue: RX_NUMBER.maxInteger,\n          allowIntegerOnly: true\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'defaultValue',\n        component: CounterFormControlComponent,\n        options: {\n          allowIntegerOnly: true,\n          minValue: RX_NUMBER.minInteger,\n          maxValue: RX_NUMBER.maxInteger,\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n        } as ICounterFormControlOptions\n      }\n    );\n\n    return inspectorConfig;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { CounterFormControlComponent, ICounterFormControlOptions } from '@helix/platform/shared/components';\nimport { RX_CONFIG_DESIGNER } from '../config-designer.constant';\nimport { BaseFieldDefinitionService } from './base-field-definition.service';\nimport { IConfigFieldDefinitionModel } from '../config-designer.types';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { RX_NUMBER, RxNumberUtilsService } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SecureFieldDefinitionService extends BaseFieldDefinitionService {\n  dataType = RX_CONFIG_DESIGNER.dataTypes.secure.resourceType;\n\n  constructor(injector: Injector, private rxNumberUtilsService: RxNumberUtilsService) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(options);\n\n    // Removed 'Key field for repeated setting' control from Details section\n    inspectorConfig[1].controls.pop();\n\n    // Adding controls specific to secure field to Details section\n    inspectorConfig[1].controls.splice(\n      inspectorConfig[1].controls.length,\n      0,\n      {\n        name: 'minValue',\n        component: CounterFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.config-designer.config-properties.min-length.label'\n          ),\n          allowIntegerOnly: true,\n          minValue: 0,\n          maxValue: RX_NUMBER.maxInteger\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'maxValue',\n        component: CounterFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.config-designer.config-properties.max-length.label'\n          ),\n          allowIntegerOnly: true,\n          minValue: 0,\n          maxValue: RX_NUMBER.maxInteger\n        } as ICounterFormControlOptions\n      }\n    );\n\n    return inspectorConfig;\n  }\n\n  validate(fieldModel: IConfigFieldDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel);\n\n    if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.minValue) && Number(fieldModel.minValue) < 0) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.invalid-min-length-error.message'\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxValue) && Number(fieldModel.maxValue) < 0) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.invalid-max-length-error.message'\n        ),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.minValue && Number(fieldModel.minValue) > RX_NUMBER.maxInteger) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.min-length.label'\n            ),\n            maxValue: RX_NUMBER.maxInteger\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.maxValue && Number(fieldModel.maxValue) > RX_NUMBER.maxInteger) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.max-length.label'\n            ),\n            maxValue: RX_NUMBER.maxInteger\n          }\n        ),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.minValue) &&\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxValue) &&\n      Number(fieldModel.minValue) > Number(fieldModel.maxValue)\n    ) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.min-length.label'\n            ),\n            maxValue: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.max-length.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { ISelectionFieldOptionProperties, SelectionFieldOptionsComponent } from '@helix/platform/shared/components';\nimport { BaseFieldDefinitionService } from './base-field-definition.service';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { isEmpty } from 'lodash';\nimport { IConfigFieldDefinitionModel } from '../config-designer.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelectionFieldDefinitionService extends BaseFieldDefinitionService {\n  dataType = RX_RECORD_DEFINITION.dataTypes.selection.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(options: IFieldOptions): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(options);\n\n    inspectorConfig[1].controls.splice(1, 0, {\n      name: 'selectionFieldOptionProperties',\n      component: SelectionFieldOptionsComponent,\n      options: {\n        defaultValue: options.selectionFieldOptionProperties?.defaultValue,\n        optionNamesById: options.selectionFieldOptionProperties?.optionNamesById,\n        optionLabelsById: options.selectionFieldOptionProperties?.optionLabelsById\n      } as ISelectionFieldOptionProperties\n    });\n\n    return inspectorConfig;\n  }\n\n  validate(fieldModel: IConfigFieldDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel);\n\n    if (isEmpty(fieldModel.selectionFieldOptionProperties?.optionNamesById)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          { propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.options.label') }\n        ),\n        data: {\n          propertyName: 'selectionFieldOptionProperties',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IFieldOptions } from '@helix/platform/config/api';\nimport { IConfigFieldDefinitionModel } from '../config-designer.types';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { RX_CONFIG_DESIGNER } from '../config-designer.constant';\nimport { AttachmentFieldDefinitionService } from './attachment-field-definition.service';\nimport { BooleanFieldDefinitionService } from './boolean-field-definition.service';\nimport { CharacterFieldDefinitionService } from './character-field-definition.service';\nimport { ColorFieldDefinitionService } from './color-field-definition.service';\nimport { DateOnlyFieldDefinitionService } from './date-only-field-definition.service';\nimport { DecimalFieldDefinitionService } from './decimal-field-definition.service';\nimport { IntegerFieldDefinitionService } from './integer-field-definition.service';\nimport { SecureFieldDefinitionService } from './secure-field-definition.service';\nimport { SelectionFieldDefinitionService } from './selection-field-definition.service';\nimport { IValidationIssue } from '@helix/platform/ui-kit';\nimport { BaseFieldDefinitionService } from './base-field-definition.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FieldDefinitionManagerService {\n  private fieldServices = new Map<string, BaseFieldDefinitionService>();\n\n  constructor(\n    attachmentFieldDefinitionService: AttachmentFieldDefinitionService,\n    booleanFieldDefinitionService: BooleanFieldDefinitionService,\n    characterFieldDefinitionService: CharacterFieldDefinitionService,\n    colorFieldDefinitionService: ColorFieldDefinitionService,\n    dateOnlyFieldDefinitionService: DateOnlyFieldDefinitionService,\n    decimalFieldDefinitionService: DecimalFieldDefinitionService,\n    integerFieldDefinitionService: IntegerFieldDefinitionService,\n    secureFieldDefinitionService: SecureFieldDefinitionService,\n    selectionFieldDefinitionService: SelectionFieldDefinitionService\n  ) {\n    this.fieldServices.set(RX_CONFIG_DESIGNER.dataTypes.attachment.resourceType, attachmentFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.boolean.resourceType, booleanFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.character.resourceType, characterFieldDefinitionService);\n    this.fieldServices.set(RX_CONFIG_DESIGNER.dataTypes.color.resourceType, colorFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType, dateOnlyFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.decimal.resourceType, decimalFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.integer.resourceType, integerFieldDefinitionService);\n    this.fieldServices.set(RX_CONFIG_DESIGNER.dataTypes.secure.resourceType, secureFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.selection.resourceType, selectionFieldDefinitionService);\n  }\n\n  getNewFieldDefinitionModel(\n    resourceType: string,\n    fieldProperties: Partial<IConfigFieldDefinitionModel>\n  ): IConfigFieldDefinitionModel {\n    return this.fieldServices.get(resourceType).getNewFieldDefinitionModel(fieldProperties);\n  }\n\n  getFieldInspectorConfig(resourceType: string, options: IFieldOptions): IFormBuilderConfig {\n    return this.fieldServices.get(resourceType).getFieldInspectorConfig(options);\n  }\n\n  validate(fieldModel: IConfigFieldDefinitionModel): IValidationIssue[] {\n    return this.fieldServices.get(fieldModel.dataType).validate(fieldModel);\n  }\n}\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { AdaptDropdownDirective, AdaptIsPanelOpenedCurrentlyModel, AdaptSidebarComponent } from '@bmc-ux/adapt-angular';\nimport { ColumnConfig } from '@bmc-ux/adapt-table';\nimport { IConfigDefinition, IConfigFieldDefinitionGridRow, ImpactRowVisibility } from '@helix/platform/config/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport {\n  IBundleDescriptor,\n  IDesignerConfiguration,\n  IFormBuilderConfig,\n  IFormControlBuilderConfig,\n  IFormSectionBuilderConfig,\n  IPlainObject,\n  RX_PERMISSION,\n  RxDefinitionNameService,\n  RxGlobalCacheService\n} from '@helix/platform/shared/api';\nimport {\n  BooleanFormControlComponent,\n  ICheckboxFormControlOptions,\n  ILabelFormControlOptions,\n  IPermissionEditorComponentOptions,\n  ISelectFormControlOptions,\n  ISwitcherFormControlOptions,\n  ITextFormControlOptions,\n  LabelFormControlComponent,\n  RxPermissionEditorComponent,\n  SelectFormControlComponent,\n  SwitchFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport {\n  IBreadcrumbItem,\n  IValidationIssue,\n  IValidationIssueSection,\n  ValidationIssueType\n} from '@helix/platform/ui-kit';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { chain, filter, find, isEmpty, isNil, isNull, reverse, some, toUpper, trim, uniqBy } from 'lodash';\nimport { combineLatest, Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport { map, shareReplay, skip, startWith, switchMap, take, takeUntil, withLatestFrom } from 'rxjs/operators';\nimport { RX_CONFIG_DESIGNER } from '../config-designer.constant';\nimport { ConfigDesignerService } from '../config-designer.service';\nimport { IConfigDefinitionModel, IConfigFieldDataType, IConfigFieldDefinitionModel } from '../config-designer.types';\nimport { FieldDefinitionManagerService } from '../services/field-definition-manager.service';\nimport * as ConfigDesignerActions from './+state/config-designer.actions';\nimport {\n  bundleIdSelector,\n  definitionModelSelector,\n  inspectorTabIndexSelector,\n  isDesignModeSelector,\n  isDirtySelector,\n  parentComponentsSelector,\n  savedDefinitionNameSelector,\n  selectedFieldGuidSelector\n} from './+state/config-designer.selectors';\n\n@Component({\n  selector: 'rx-config-designer',\n  templateUrl: './config-designer.component.html',\n  styleUrls: ['./config-designer.component.scss']\n})\nexport class ConfigDesignerComponent implements OnInit, OnChanges {\n  @ViewChild(AdaptSidebarComponent, { static: false })\n  adaptSidebarComponent: AdaptSidebarComponent;\n\n  @ViewChild('createNewFieldDropdown', { static: false })\n  createNewFieldDropdown: AdaptDropdownDirective;\n\n  @Input()\n  configuration: IDesignerConfiguration;\n\n  @Output()\n  definitionSaved: EventEmitter<string> = new EventEmitter();\n\n  @Output()\n  definitionErrorLoading: EventEmitter<void> = new EventEmitter();\n\n  @Output()\n  closeDesigner: EventEmitter<void> = new EventEmitter<void>();\n\n  newTitle = `<${this.translateService.instant('com.bmc.arsys.rx.client.config-designer.new-configuration.title')}>`;\n\n  dataTypes: IConfigFieldDataType[] = [\n    {\n      displayName: this.translateService.instant(RX_CONFIG_DESIGNER.dataTypes.attachment.labelKey),\n      dataType: RX_CONFIG_DESIGNER.dataTypes.attachment.resourceType\n    },\n    {\n      displayName: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.boolean.labelKey),\n      dataType: RX_RECORD_DEFINITION.dataTypes.boolean.resourceType\n    },\n    {\n      displayName: this.translateService.instant(RX_CONFIG_DESIGNER.dataTypes.color.labelKey),\n      dataType: RX_CONFIG_DESIGNER.dataTypes.color.resourceType\n    },\n    {\n      displayName: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.character.labelKey),\n      dataType: RX_RECORD_DEFINITION.dataTypes.character.resourceType\n    },\n    {\n      displayName: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.dateOnly.labelKey),\n      dataType: RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType\n    },\n    {\n      displayName: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.integer.labelKey),\n      dataType: RX_RECORD_DEFINITION.dataTypes.integer.resourceType\n    },\n    {\n      displayName: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.selection.labelKey),\n      dataType: RX_RECORD_DEFINITION.dataTypes.selection.resourceType\n    },\n    {\n      displayName: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.decimal.labelKey),\n      dataType: RX_RECORD_DEFINITION.dataTypes.decimal.resourceType\n    },\n    {\n      displayName: this.translateService.instant(RX_CONFIG_DESIGNER.dataTypes.secure.labelKey),\n      dataType: RX_CONFIG_DESIGNER.dataTypes.secure.resourceType\n    }\n  ].sort((a, b) => a.displayName.localeCompare(b.displayName));\n\n  private trueLabel = this.translateService.instant('com.bmc.arsys.rx.client.common.true');\n  private falseLabel = this.translateService.instant('com.bmc.arsys.rx.client.common.false');\n  private yesLabel = this.translateService.instant('com.bmc.arsys.rx.client.common.yes.label');\n  private noLabel = this.translateService.instant('com.bmc.arsys.rx.client.common.no.label');\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  private isApplication$: Observable<boolean> = this.store$.select(bundleIdSelector).pipe(\n    switchMap((bundleId: string) => this.rxGlobalCacheService.getBundleDescriptor(bundleId)),\n    map((bundleDescriptor: IBundleDescriptor) => bundleDescriptor.isApplication)\n  );\n\n  private inspectorTabIndexSubject: Subject<number> = new Subject();\n  private inspectorTabIndex$ = this.store$.select(inspectorTabIndexSelector);\n  private selectedFieldGuid$ = this.store$.select(selectedFieldGuidSelector);\n  private parentComponents$: Observable<string[]> = this.store$.select(parentComponentsSelector);\n  private isDirty$: Observable<boolean> = this.store$.select(isDirtySelector);\n\n  private bundleFriendlyName$ = this.store$\n    .select(bundleIdSelector)\n    .pipe(switchMap((bundleId: string) => this.rxGlobalCacheService.getBundleFriendlyName(bundleId)));\n\n  private definitionModel$: Observable<IConfigDefinitionModel> = this.store$.select(definitionModelSelector);\n\n  private definitionDisplayName$: Observable<string> = this.definitionModel$.pipe(\n    map((definitionModel: IConfigDefinitionModel) => definitionModel.componentName),\n    startWith(null)\n  );\n\n  private validationIssues$: Observable<IValidationIssueSection[]> = this.definitionModel$.pipe(\n    map((definitionModel: IConfigDefinitionModel) => this.validate(definitionModel)),\n    shareReplay(1)\n  );\n\n  private hasValidationErrors$: Observable<boolean> = this.validationIssues$.pipe(\n    map((issueSections: IValidationIssueSection[]) =>\n      some(issueSections, {\n        issues: [{ type: ValidationIssueType.Error }]\n      })\n    )\n  );\n\n  private isSaveButtonDisabled$: Observable<boolean> = combineLatest([this.hasValidationErrors$, this.isDirty$]).pipe(\n    map(([hasValidationErrors, isDirty]) => hasValidationErrors || !isDirty),\n    startWith(true)\n  );\n\n  public definitionInspectorConfig$: Observable<IFormBuilderConfig> = combineLatest([\n    this.parentComponents$,\n    this.bundleFriendlyName$,\n    this.isApplication$,\n    this.definitionModel$\n  ]).pipe(\n    map(([parentComponents, bundleFriendlyName, isApplication, definitionModel]) =>\n      this.getDefinitionInspectorConfig(parentComponents, bundleFriendlyName, isApplication, definitionModel)\n    )\n  );\n\n  private inspectorFocusEditorSubject = new Subject<{ editorName: string; data: IPlainObject }>();\n  inspectorFocusEditor$ = this.inspectorFocusEditorSubject.asObservable();\n\n  private fieldGridRows$: Observable<IConfigFieldDefinitionGridRow[]> = this.definitionModel$.pipe(\n    map((model: IConfigDefinitionModel) =>\n      model.fields.map((field: IConfigFieldDefinitionModel) => ({\n        id: field.id,\n        guid: field.guid,\n        required: field.required ? this.yesLabel : this.noLabel,\n        defaultValue:\n          field.dataType === RX_RECORD_DEFINITION.dataTypes.boolean.resourceType\n            ? this.getBooleanDisplayValue(field.defaultValue as string)\n            : field.dataType === RX_CONFIG_DESIGNER.dataTypes.color.resourceType\n            ? toUpper(field.defaultValue as string)\n            : field.dataType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType\n            ? field.selectionFieldOptionProperties.optionNamesById?.[field.selectionFieldOptionProperties.defaultValue]\n            : field.defaultValue,\n        keySetting: field.keySetting ? this.yesLabel : this.noLabel,\n        dataType: this.getDataTypeName(field.dataType),\n        fieldGrouping: field.localeList[0]?.fieldGrouping\n      }))\n    )\n  );\n\n  private selectedFieldGridRows$: Observable<IConfigFieldDefinitionGridRow[]> = this.selectedFieldGuid$.pipe(\n    withLatestFrom(this.fieldGridRows$),\n    map(([guid, fieldGridRows]) => (guid ? [find(fieldGridRows, { guid })] : [])),\n    startWith([])\n  );\n\n  private selectedFieldModel$: Observable<IConfigFieldDefinitionModel> = combineLatest([\n    this.selectedFieldGuid$,\n    this.definitionModel$\n  ]).pipe(\n    map(([guid, definitionModel]: [string, IConfigDefinitionModel]) => find(definitionModel.fields, { guid })),\n    startWith(null),\n    shareReplay(1)\n  );\n\n  private selectedFieldInspectorConfig$: Observable<IFormBuilderConfig> = this.selectedFieldModel$.pipe(\n    map((fieldModel: IConfigFieldDefinitionModel) =>\n      fieldModel\n        ? this.fieldDefinitionManagerService.getFieldInspectorConfig(fieldModel.dataType, {\n            isNew: fieldModel.isNew,\n            selectionFieldOptionProperties: fieldModel.selectionFieldOptionProperties\n          })\n        : null\n    )\n  );\n\n  private breadcrumbItems$: Observable<IBreadcrumbItem[]> = combineLatest([\n    this.definitionDisplayName$,\n    this.selectedFieldModel$\n  ]).pipe(\n    map(([definitionDisplayName, selectedFieldModel]) =>\n      [\n        {\n          data: null,\n          label:\n            this.rxDefinitionNameService.getDisplayName(this.configuration.definitionName) ||\n            definitionDisplayName ||\n            this.newTitle\n        },\n        { data: null, label: selectedFieldModel?.id }\n      ].filter((item: IBreadcrumbItem) => item.label)\n    )\n  );\n\n  private definitionFromDefinitionModel$: Observable<IConfigDefinition> = this.definitionModel$.pipe(\n    map((definitionModel: IConfigDefinitionModel) =>\n      this.configDesignerService.getDefinitionFromDefinitionModel(definitionModel)\n    )\n  );\n\n  private isDesignMode$ = this.store$.select(isDesignModeSelector);\n\n  private definitionForJsonViewer$: Observable<IConfigDefinition> = this.isDesignMode$.pipe(\n    switchMap((isDesignMode: boolean) => (isDesignMode ? of(null) : this.definitionFromDefinitionModel$))\n  );\n\n  vm$ = combineLatest([\n    this.breadcrumbItems$,\n    this.bundleFriendlyName$,\n    this.definitionDisplayName$,\n    this.definitionForJsonViewer$,\n    this.definitionInspectorConfig$,\n    this.definitionModel$,\n    this.fieldGridRows$,\n    this.hasValidationErrors$,\n    this.isSaveButtonDisabled$,\n    this.selectedFieldGridRows$,\n    this.selectedFieldGuid$,\n    this.selectedFieldInspectorConfig$,\n    this.selectedFieldModel$,\n    this.validationIssues$\n  ]).pipe(\n    map(\n      ([\n        breadcrumbItems,\n        bundleFriendlyName,\n        definitionDisplayName,\n        definitionForJsonViewer,\n        definitionInspectorConfig,\n        definitionModel,\n        fieldGridRows,\n        hasValidationErrors,\n        isSaveButtonDisabled,\n        selectedFieldGridRows,\n        selectedFieldGuid,\n        selectedFieldInspectorConfig,\n        selectedFieldModel,\n        validationIssues\n      ]) => ({\n        breadcrumbItems,\n        bundleFriendlyName,\n        definitionDisplayName,\n        definitionForJsonViewer,\n        definitionInspectorConfig,\n        definitionModel,\n        fieldGridRows,\n        hasValidationErrors,\n        isSaveButtonDisabled,\n        selectedFieldGridRows,\n        selectedFieldGuid,\n        selectedFieldInspectorConfig,\n        selectedFieldModel,\n        validationIssues\n      })\n    )\n  );\n\n  columns: ColumnConfig[] = [\n    {\n      field: 'id',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label'),\n      filterable: false\n    },\n    {\n      field: 'dataType',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.common.data-type.label'),\n      filterable: false\n    },\n    {\n      field: 'required',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.config-designer.grid.column.required-field.title'),\n      filterable: false\n    },\n    {\n      field: 'defaultValue',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n      filterable: false\n    },\n    {\n      field: 'fieldGrouping',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.config-designer.grid.column.field-group.title'),\n      filterable: false\n    },\n    {\n      field: 'keySetting',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.config-designer.grid.column.key-field.title'),\n      filterable: false\n    }\n  ];\n\n  constructor(\n    private store$: Store<any>,\n    private configDesignerService: ConfigDesignerService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private translateService: TranslateService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private fieldDefinitionManagerService: FieldDefinitionManagerService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.configuration.currentValue) {\n      this.store$.dispatch(ConfigDesignerActions.init({ payload: this.configuration }));\n    }\n  }\n\n  ngOnInit(): void {\n    this.inspectorTabIndexSubject.pipe(skip(1), takeUntil(this.destroyed$)).subscribe((inspectorTabIndex: number) => {\n      this.store$.dispatch(ConfigDesignerActions.setInspectorTabIndex({ inspectorTabIndex }));\n    });\n\n    this.inspectorTabIndex$.pipe(skip(1), takeUntil(this.destroyed$)).subscribe((inspectorTabIndex: number) => {\n      if (!isNull(inspectorTabIndex)) {\n        this.adaptSidebarComponent.openPanel(inspectorTabIndex);\n      }\n    });\n\n    this.store$\n      .select(savedDefinitionNameSelector)\n      .pipe(skip(1), takeUntil(this.destroyed$))\n      .subscribe((savedDefinitionName: string) => {\n        this.definitionSaved.emit(savedDefinitionName);\n      });\n  }\n\n  onSelectionChange(selectedFieldModel: IConfigFieldDefinitionModel) {\n    this.store$.dispatch(ConfigDesignerActions.setSelectedFieldGuid({ guid: selectedFieldModel?.guid }));\n  }\n\n  canDeactivate(): boolean {\n    let canDeactivate = true;\n\n    this.isDirty$.pipe(take(1)).subscribe((isDirty) => {\n      canDeactivate = !isDirty;\n    });\n\n    return canDeactivate;\n  }\n\n  saveDefinition(): void {\n    this.store$.dispatch(ConfigDesignerActions.saveDefinition());\n  }\n\n  onCorrectIssue(validationIssue: IValidationIssue) {\n    if (validationIssue.data.noFieldAdded) {\n      this.createNewFieldDropdown.open();\n    }\n\n    if (validationIssue.data.guid) {\n      this.store$.dispatch(ConfigDesignerActions.setSelectedFieldGuid({ guid: validationIssue.data.guid }));\n    } else {\n      this.store$.dispatch(ConfigDesignerActions.setInspectorTabIndex({ inspectorTabIndex: 0 }));\n    }\n\n    if (validationIssue.data.editFieldGroups) {\n      this.store$.dispatch(ConfigDesignerActions.editFieldGroups());\n    }\n\n    setTimeout(\n      () =>\n        this.inspectorFocusEditorSubject.next({\n          editorName: validationIssue.data.propertyName,\n          data: validationIssue.data.data\n        }),\n      10\n    );\n  }\n\n  onDefinitionModelChange(newDefinitionModel: IConfigDefinitionModel): void {\n    this.store$.dispatch(\n      ConfigDesignerActions.updateDefinitionModelFromDesigner({\n        definitionModelFromDesigner: newDefinitionModel\n      })\n    );\n  }\n\n  onSelectedFieldModelChange(newSelectedFieldModel: IConfigFieldDefinitionModel): void {\n    this.store$.dispatch(ConfigDesignerActions.updateSelectedFieldModel({ selectedFieldModel: newSelectedFieldModel }));\n  }\n\n  validate(definitionModel: IConfigDefinitionModel): IValidationIssueSection[] {\n    const duplicateFieldErrorMsg = this.translateService.instant(\n      'com.bmc.arsys.rx.client.designer.validation.must-be-unique.message',\n      { propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label') }\n    );\n\n    const definitionValidationIssues: IValidationIssue[] = [];\n    const fieldValidationIssueSections: IValidationIssueSection[] = [];\n\n    chain(definitionModel.fields)\n      .clone()\n      .reverse()\n      .forEach((fieldModel: IConfigFieldDefinitionModel, index: number, fieldModels: IConfigFieldDefinitionModel[]) => {\n        let issues: IValidationIssue[] = [];\n\n        if (find(fieldModels, (model) => fieldModel.id === model.id, index + 1)) {\n          issues.push({\n            type: ValidationIssueType.Error,\n            description: duplicateFieldErrorMsg,\n            data: {\n              propertyName: 'id',\n              guid: fieldModel.guid\n            }\n          });\n        }\n\n        if (!fieldModel.localeList[0].fieldGrouping) {\n          issues.push({\n            type: ValidationIssueType.Error,\n            description: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.field-has-no-group.message'\n            ),\n            data: {\n              editFieldGroups: true,\n              guid: fieldModel.guid\n            }\n          });\n        }\n\n        issues = issues.concat(this.fieldDefinitionManagerService.validate(fieldModel));\n\n        if (issues.length) {\n          fieldValidationIssueSections.push({\n            title: fieldModel.id,\n            issues: issues\n          });\n        }\n      })\n      .value();\n\n    if (isEmpty(trim(definitionModel.componentName))) {\n      definitionValidationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.component-name.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'componentName'\n        }\n      });\n    }\n\n    if (isEmpty(trim(definitionModel.componentLabel))) {\n      definitionValidationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.component-label.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'componentLabel'\n        }\n      });\n    }\n\n    if (\n      isNil(definitionModel.parentComponentName) &&\n      (definitionModel.isSettingAccessibleInInnovationStudio || definitionModel.isSettingAccessibleInApplication) &&\n      !definitionModel.firstMenu\n    ) {\n      definitionValidationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.config-designer.config-properties.first-menu.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'firstMenu'\n        }\n      });\n    }\n\n    if (!definitionModel.fields.length) {\n      definitionValidationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.config-designer.setting-has-no-fields-error.message'\n        ),\n        data: { noFieldAdded: true }\n      });\n    }\n\n    if (definitionModel.impactRowVisibility === ImpactRowVisibility.User) {\n      const keySettingsCount = filter(definitionModel.fields, { keySetting: true }).length;\n\n      if (keySettingsCount > 1) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.config-designer.multiple-key-fields-not-allowed-error.message'\n          ),\n          data: {\n            propertyName: 'keySetting'\n          }\n        });\n      }\n    }\n\n    if (!isNil(definitionModel.parentComponentName)) {\n      const uniqFieldGroups = uniqBy(definitionModel.fields, 'localeList[0].fieldGrouping');\n\n      if (uniqFieldGroups.length > 1) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.config-designer.multiple-field-groups-not-allowed-error.message'\n          ),\n          data: {\n            propertyName: 'parentComponentName'\n          }\n        });\n      }\n    }\n\n    let issues: IValidationIssueSection[] = [];\n\n    if (definitionValidationIssues.length) {\n      issues.push({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.config-designer.title'),\n        issues: definitionValidationIssues\n      });\n    }\n\n    issues = issues.concat(reverse(fieldValidationIssueSections));\n\n    return issues;\n  }\n\n  addNewField(resourceType: string, isLoginNameField = false): void {\n    this.store$.dispatch(ConfigDesignerActions.createNewFieldModel({ resourceType: resourceType, isLoginNameField }));\n  }\n\n  editFieldGroups(): void {\n    this.store$.dispatch(ConfigDesignerActions.editFieldGroups());\n  }\n\n  private getDataTypeName(dataType: string): string {\n    return find(this.dataTypes, { dataType }).displayName;\n  }\n\n  onBreadcrumbSelected(): void {\n    this.store$.dispatch(ConfigDesignerActions.clearSelectedFieldGuid());\n  }\n\n  toggleDesignMode(): void {\n    this.store$.dispatch(ConfigDesignerActions.toggleDesignMode());\n  }\n\n  onSidebarToggle(event: AdaptIsPanelOpenedCurrentlyModel): void {\n    this.inspectorTabIndexSubject.next(event.id);\n  }\n\n  private getDefinitionInspectorConfig(\n    parentComponents: string[],\n    bundleFriendlyName: string,\n    isApplication: boolean,\n    definitionModel: IConfigDefinitionModel\n  ): IFormSectionBuilderConfig[] {\n    const configs: IFormSectionBuilderConfig[] = [];\n    const generalControls: IFormControlBuilderConfig[] = [];\n\n    generalControls.push({\n      name: 'componentName',\n      component: TextFormControlComponent,\n      isDisabled: Boolean(this.configuration.definitionName),\n      options: {\n        label: this.translateService.instant(\n          'com.bmc.arsys.rx.client.config-designer.config-properties.component-name.label'\n        ),\n        required: true\n      } as ITextFormControlOptions\n    });\n\n    if (isNil(definitionModel.parentComponentName)) {\n      generalControls.push({\n        name: '',\n        component: LabelFormControlComponent,\n        options: {\n          labelKey: 'com.bmc.arsys.rx.client.config-designer.config-properties.enable-access-from.label'\n        } as ILabelFormControlOptions\n      });\n\n      generalControls.push({\n        name: 'isSettingAccessibleInInnovationStudio',\n        component: BooleanFormControlComponent,\n        options: {\n          label: 'Innovation Studio',\n          shouldDisplayAsCheckbox: true\n        } as ICheckboxFormControlOptions\n      });\n\n      if (isApplication) {\n        generalControls.push({\n          name: 'isSettingAccessibleInApplication',\n          component: BooleanFormControlComponent,\n          options: {\n            label: bundleFriendlyName,\n            shouldDisplayAsCheckbox: true\n          } as ICheckboxFormControlOptions\n        });\n      }\n    }\n\n    generalControls.push({\n      name: 'componentLabel',\n      component: TextFormControlComponent,\n      options: {\n        label: this.translateService.instant(\n          'com.bmc.arsys.rx.client.config-designer.config-properties.component-label.label'\n        ),\n        required: true\n      } as ITextFormControlOptions\n    });\n\n    generalControls.push({\n      name: 'supportsMultiple',\n      component: SwitchFormControlComponent,\n      options: {\n        label: this.translateService.instant(\n          'com.bmc.arsys.rx.client.config-designer.config-properties.repeat-setting.label'\n        )\n      } as ISwitcherFormControlOptions\n    });\n\n    generalControls.push({\n      name: 'parentComponentName',\n      component: SelectFormControlComponent,\n      options: {\n        label: this.translateService.instant(\n          'com.bmc.arsys.rx.client.config-designer.config-properties.parent-setting.label'\n        ),\n        options: parentComponents\n          .filter((componentName: string) => componentName !== definitionModel.componentName)\n          .map((item: string) => ({ id: item, name: item })),\n        emptyOption: true\n      } as ISelectFormControlOptions\n    });\n\n    if (isNil(definitionModel.parentComponentName) && definitionModel.supportsMultiple) {\n      generalControls.push({\n        name: 'impactRowVisibility',\n        component: SelectFormControlComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.config-designer.config-properties.visibility.label'\n          ),\n          options: [\n            {\n              id: ImpactRowVisibility.None,\n              name: this.translateService.instant('com.bmc.arsys.rx.client.common.none.label')\n            },\n            {\n              id: ImpactRowVisibility.User,\n              name: this.translateService.instant(\n                'com.bmc.arsys.rx.client.config-designer.config-properties.visibility.options.user.label'\n              )\n            }\n          ],\n          beforeValueChange: (oldValue, newValue) => {\n            if (newValue === ImpactRowVisibility.User) {\n              const isLoginNameFieldExists = find(definitionModel.fields, {\n                id: 'LoginName',\n                dataType: RX_RECORD_DEFINITION.dataTypes.character.resourceType\n              });\n\n              if (!isLoginNameFieldExists) {\n                setTimeout(() => {\n                  this.addNewField(RX_RECORD_DEFINITION.dataTypes.character.resourceType, true);\n                });\n              }\n            }\n\n            return Promise.resolve(true);\n          }\n        } as ISelectFormControlOptions\n      });\n    }\n\n    if (definitionModel.impactRowVisibility !== ImpactRowVisibility.User) {\n      generalControls.push({\n        name: 'permissions',\n        component: RxPermissionEditorComponent,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.config-designer.config-properties.permissions.label'\n          ),\n          type: 'config',\n          permissionScope: RX_PERMISSION.permissionScope.all\n        } as IPermissionEditorComponentOptions\n      });\n    }\n\n    configs.push({\n      label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n      controls: generalControls\n    });\n\n    if (\n      isNil(definitionModel.parentComponentName) &&\n      (definitionModel.isSettingAccessibleInApplication || definitionModel.isSettingAccessibleInInnovationStudio)\n    ) {\n      configs.push({\n        label: this.translateService.instant(\n          'com.bmc.arsys.rx.client.config-designer.config-properties.navigation-section.label'\n        ),\n        controls: [\n          {\n            name: 'firstMenu',\n            component: TextFormControlComponent,\n            options: {\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.config-designer.config-properties.first-menu.label'\n              ),\n              required: true\n            } as ITextFormControlOptions\n          },\n          {\n            name: 'secondMenu',\n            component: TextFormControlComponent,\n            options: {\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.config-designer.config-properties.second-menu.label'\n              )\n            } as ITextFormControlOptions\n          }\n        ]\n      });\n    }\n\n    return configs;\n  }\n\n  private getBooleanDisplayValue(defaultValue: string): string {\n    if (defaultValue === 'true') {\n      return this.trueLabel;\n    } else if (defaultValue === 'false') {\n      return this.falseLabel;\n    } else {\n      return null;\n    }\n  }\n\n  deleteSelectedField(): void {\n    this.store$.dispatch(ConfigDesignerActions.deleteSelectedField());\n  }\n\n  onFormInitialized() {\n    this.inspectorFocusEditorSubject.next({\n      editorName: 'componentName',\n      data: {}\n    });\n  }\n\n  private destroyConfigDesigner(): void {\n    this.store$.dispatch(ConfigDesignerActions.destroy());\n  }\n\n  ngOnDestroy(): void {\n    this.inspectorTabIndexSubject.complete();\n    this.inspectorFocusEditorSubject.complete();\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n    this.destroyConfigDesigner();\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <rx-designer-header\n    [bundleName]=\"vm.bundleFriendlyName\"\n    [isSaveButtonDisabled]=\"vm.isSaveButtonDisabled\"\n    (save)=\"saveDefinition()\"\n    (closeDesigner)=\"closeDesigner.emit()\"\n    [breadcrumbItems]=\"vm.breadcrumbItems\"\n    (breadcrumbSelected)=\"onBreadcrumbSelected()\"\n    (toggleDesignMode)=\"toggleDesignMode()\"\n    [isDesignMode]=\"!vm.definitionForJsonViewer\"\n  ></rx-designer-header>\n\n  <adapt-sidebar\n    [openedId]=\"0\"\n    [adjustMainContainerWidth]=\"true\"\n    position=\"right\"\n    class=\"h-100\"\n    [hidden]=\"vm.definitionForJsonViewer\"\n    (isPanelOpenedCurrently)=\"onSidebarToggle($event)\"\n  >\n    <adapt-sidebar-item\n      iconClass=\"d-icon-pencil\"\n      [headerTitle]=\"'com.bmc.arsys.rx.client.config-designer.config-properties.title.label' | translate\"\n      [tooltipText]=\"'com.bmc.arsys.rx.client.config-designer.config-properties.title.label' | translate\"\n    >\n      <rx-form-builder\n        [config]=\"vm.definitionInspectorConfig\"\n        [model]=\"vm.definitionModel\"\n        [focusEditor$]=\"inspectorFocusEditor$\"\n        (modelChange)=\"onDefinitionModelChange($event)\"\n        (formInitialized)=\"onFormInitialized()\"\n      ></rx-form-builder>\n    </adapt-sidebar-item>\n\n    <adapt-sidebar-item\n      iconClass=\"d-icon-gear\"\n      [headerTitle]=\"'com.bmc.arsys.rx.client.common.settings.label' | translate\"\n      [tooltipText]=\"'com.bmc.arsys.rx.client.common.settings.label' | translate\"\n    >\n      <rx-form-builder\n        [config]=\"vm.selectedFieldInspectorConfig\"\n        [model]=\"vm.selectedFieldModel\"\n        (modelChange)=\"onSelectedFieldModelChange($event)\"\n        [guid]=\"vm.selectedFieldGuid\"\n        [focusEditor$]=\"inspectorFocusEditor$\"\n      ></rx-form-builder>\n\n      <adapt-alert\n        [hidden]=\"vm.selectedFieldModel\"\n        class=\"p-3\"\n        [config]=\"{\n          content: 'com.bmc.arsys.rx.client.designer.validation.no-field-selected.message' | translate,\n          variant: 'info',\n          type: 'inline'\n        }\"\n      ></adapt-alert>\n    </adapt-sidebar-item>\n\n    <adapt-sidebar-item\n      [iconClass]=\"vm.hasValidationErrors ? 'd-icon-exclamation_triangle text-danger' : 'd-icon-exclamation_triangle'\"\n      headerTitle=\"{{ 'com.bmc.arsys.rx.client.designer.validation-issues.label' | translate }}\"\n      tooltipText=\"{{ 'com.bmc.arsys.rx.client.designer.validation-issues.label' | translate }}\"\n    >\n      <rx-validation-issues\n        (correctIssue)=\"onCorrectIssue($event)\"\n        [issueSections]=\"vm.validationIssues\"\n        [definitionTypeDisplayName]=\"'com.bmc.arsys.rx.client.config-definition.label' | translate\"\n      ></rx-validation-issues>\n    </adapt-sidebar-item>\n\n    <div class=\"main h-100 d-flex flex-column\">\n      <h1 class=\"mt-0\">\n        {{ (configuration.definitionName | rxDefinitionNamePipe) || vm.definitionDisplayName || newTitle }}\n      </h1>\n\n      <section class=\"h-100 d-flex flex-column\">\n        <div class=\"d-flex border border-bottom-0\">\n          <div class=\"dropdown\" adaptDropdown #createNewFieldDropdown>\n            <button\n              adapt-button\n              adaptDropdownToggle\n              type=\"button\"\n              btn-type=\"tertiary\"\n              class=\"d-icon-plus_circle\"\n              rx-id=\"new-field-button\"\n            >\n              {{ 'com.bmc.arsys.rx.client.designer.new-field.button.label' | translate }}\n            </button>\n\n            <div class=\"dropdown-menu\" adaptDropdownMenu>\n              <button *ngFor=\"let dataType of dataTypes\" class=\"dropdown-item\" (click)=\"addNewField(dataType.dataType)\">\n                {{ dataType.displayName }}\n              </button>\n            </div>\n          </div>\n\n          <button\n            adapt-button\n            type=\"button\"\n            btn-type=\"tertiary\"\n            class=\"d-icon-list_ordered\"\n            (click)=\"editFieldGroups()\"\n            rx-id=\"edit-field-groups-button\"\n            [disabled]=\"!vm.fieldGridRows.length\"\n          >\n            {{ 'com.bmc.arsys.rx.client.config-designer.edit-field-groups.label' | translate }}\n          </button>\n\n          <button\n            adapt-button\n            type=\"button\"\n            btn-type=\"tertiary\"\n            class=\"d-icon-trash\"\n            (click)=\"deleteSelectedField()\"\n            rx-id=\"delete-field-button\"\n            [disabled]=\"!vm.selectedFieldGridRows.length\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.delete.label' | translate }}\n          </button>\n        </div>\n\n        <adapt-table\n          [value]=\"vm.fieldGridRows\"\n          [selection]=\"vm.selectedFieldGridRows\"\n          [columns]=\"columns\"\n          [scrollable]=\"true\"\n          scrollHeight=\"flex\"\n          [sortable]=\"true\"\n          [resizableColumns]=\"false\"\n          [bordered]=\"true\"\n          [dataKey]=\"'guid'\"\n          [selectionMode]=\"'single'\"\n          (selectionChange)=\"onSelectionChange($event)\"\n        >\n        </adapt-table>\n      </section>\n    </div>\n  </adapt-sidebar>\n\n  <adapt-code-viewer\n    *ngIf=\"vm.definitionForJsonViewer\"\n    [code]=\"vm.definitionForJsonViewer | json\"\n    [lang]=\"'javascript'\"\n    [hasToolbar]=\"false\"\n    [theme]=\"'light'\"\n    class=\"full-size\"\n  ></adapt-code-viewer>\n</ng-container>\n","import { createReducer, on } from '@ngrx/store';\nimport { IConfigDesignerModel } from './config-designer.types';\nimport * as ConfigDesignerActions from './config-designer.actions';\nimport { IConfigDefinitionModel } from '../../config-designer.types';\nimport { ImpactRowVisibility } from '@helix/platform/config/api';\nimport { cloneDeep, findIndex, isNull, remove } from 'lodash';\n\nconst initialModel: IConfigDefinitionModel = {\n  componentLabel: null,\n  componentName: null,\n  externalLink: null,\n  firstMenu: null,\n  impactRowVisibility: ImpactRowVisibility.None,\n  isSettingAccessibleInApplication: false,\n  isSettingAccessibleInInnovationStudio: false,\n  parentComponentName: null,\n  permissions: [],\n  registeredModuleName: null,\n  secondMenu: null,\n  supportsMultiple: false,\n  viewComponent: false,\n  viewToOpen: null,\n  fields: []\n};\n\nexport const initialState: IConfigDesignerModel = {\n  bundleId: null,\n  definitionName: null,\n  isDesignMode: true,\n  inspectorTabIndex: 0,\n  selectedFieldGuid: null,\n  definitionModel: initialModel,\n  definitionModelFromDefinition: initialModel,\n  parentComponents: [],\n  isDirty: false,\n  savedDefinitionName: null\n};\n\nconst reducer = createReducer(\n  initialState,\n\n  on(ConfigDesignerActions.init, (state: IConfigDesignerModel, { payload }) => ({\n    ...initialState,\n    bundleId: payload.bundleId,\n    definitionName: payload.definitionName\n  })),\n\n  on(ConfigDesignerActions.initDefinitionModel, (state: IConfigDesignerModel, { definitionModelFromDefinition }) => ({\n    ...state,\n    definitionModelFromDefinition,\n    definitionModel: definitionModelFromDefinition\n  })),\n\n  on(ConfigDesignerActions.markDesignerPristine, (state: IConfigDesignerModel) => ({\n    ...state,\n    isDirty: false\n  })),\n\n  on(ConfigDesignerActions.markDesignerDirty, (state: IConfigDesignerModel) => ({\n    ...state,\n    isDirty: true\n  })),\n\n  on(ConfigDesignerActions.loadParentComponentsSuccess, (state: IConfigDesignerModel, { parentComponents }) => ({\n    ...state,\n    parentComponents\n  })),\n\n  on(ConfigDesignerActions.setInspectorTabIndex, (state: IConfigDesignerModel, { inspectorTabIndex }) => ({\n    ...state,\n    inspectorTabIndex\n  })),\n\n  on(ConfigDesignerActions.setSelectedFieldGuid, (state: IConfigDesignerModel, { guid }) => ({\n    ...state,\n    selectedFieldGuid: guid,\n    inspectorTabIndex: guid && !isNull(state.inspectorTabIndex) ? 1 : state.inspectorTabIndex\n  })),\n\n  on(ConfigDesignerActions.clearSelectedFieldGuid, (state: IConfigDesignerModel) => ({\n    ...state,\n    selectedFieldGuid: null,\n    inspectorTabIndex: !isNull(state.inspectorTabIndex) ? 0 : state.inspectorTabIndex\n  })),\n\n  on(ConfigDesignerActions.toggleDesignMode, (state: IConfigDesignerModel) => ({\n    ...state,\n    isDesignMode: !state.isDesignMode\n  })),\n\n  on(\n    ConfigDesignerActions.updateDefinitionModelFromDesigner,\n    (state: IConfigDesignerModel, { definitionModelFromDesigner }) => ({\n      ...state,\n      definitionModel: { ...state.definitionModel, ...definitionModelFromDesigner }\n    })\n  ),\n\n  on(ConfigDesignerActions.updateSelectedFieldModel, (state: IConfigDesignerModel, { selectedFieldModel }) => {\n    const definitionModel = cloneDeep(state.definitionModel);\n    const fieldIndex = findIndex(definitionModel.fields, { guid: state.selectedFieldGuid });\n\n    definitionModel.fields[fieldIndex] = selectedFieldModel;\n\n    return { ...state, definitionModel };\n  }),\n\n  on(ConfigDesignerActions.addFieldModel, (state: IConfigDesignerModel, { newFieldModel }) => {\n    const definitionModel = cloneDeep(state.definitionModel);\n\n    definitionModel.fields.push(newFieldModel);\n\n    return { ...state, definitionModel };\n  }),\n\n  on(ConfigDesignerActions.deleteSelectedFieldSuccess, (state: IConfigDesignerModel) => {\n    const definitionModel = cloneDeep(state.definitionModel);\n\n    remove(definitionModel.fields, { guid: state.selectedFieldGuid });\n\n    return { ...state, definitionModel };\n  }),\n\n  on(ConfigDesignerActions.saveDefinitionSuccess, (state: IConfigDesignerModel, { savedDefinitionName }) => ({\n    ...state,\n    savedDefinitionName\n  })),\n\n  on(ConfigDesignerActions.destroy, (state: IConfigDesignerModel) => ({\n    ...initialState\n  }))\n);\n\nexport function configDesignerModelReducer(state, action) {\n  return reducer(state, action);\n}\n","import { Injectable } from '@angular/core';\nimport { ComponentStore } from '@ngrx/component-store';\nimport { Observable } from 'rxjs';\nimport { chain, reject } from 'lodash';\nimport { RxListBuilderItem, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { IFieldGroupsEditorState, IFieldState } from './field-groups-editor.types';\n\n@Injectable()\nexport class FieldGroupsEditorStore extends ComponentStore<IFieldGroupsEditorState> {\n  readonly fields$: Observable<IFieldState[]> = this.select((state: IFieldGroupsEditorState) => state.fields);\n  readonly groups$: Observable<RxListBuilderItem[]> = this.select((state: IFieldGroupsEditorState) => state.groups);\n  readonly selectedGroupName$: Observable<string> = this.select((state) => state.selectedGroupName);\n\n  readonly availableFields$: Observable<RxSelectOption[]> = this.select(\n    this.fields$,\n    this.selectedGroupName$,\n    (fields, selectedGroupName) =>\n      fields\n        .filter((field: IFieldState) => field.groupName !== selectedGroupName)\n        .map((field: IFieldState, index) => ({\n          name: field.name,\n          id: index,\n          guid: field.guid,\n          checked: field.checked\n        }))\n  );\n\n  readonly checkedAvailableFields$ = this.select(this.availableFields$, (fields) =>\n    fields.filter((field: RxSelectOption) => field.checked)\n  );\n\n  readonly selectedFields$: Observable<RxListBuilderItem[]> = this.select(\n    this.fields$,\n    this.selectedGroupName$,\n    (fields, selectedGroupName) =>\n      chain(fields)\n        .filter((field: IFieldState) => field.groupName === selectedGroupName)\n        .sortBy('fieldOrder')\n        .map((field: IFieldState, index) => ({\n          name: field.name,\n          id: index,\n          guid: field.guid,\n          selected: field.checked\n        }))\n        .value()\n  );\n\n  readonly checkedSelectedFields$ = this.select(this.selectedFields$, (fields) =>\n    fields.filter((field: RxSelectOption) => field.selected)\n  );\n\n  readonly isDirty$: Observable<boolean> = this.select((state: IFieldGroupsEditorState) => state.isDirty);\n\n  readonly vm$ = this.select(\n    this.groups$,\n    this.fields$,\n    this.availableFields$,\n    this.checkedAvailableFields$,\n    this.selectedFields$,\n    this.checkedSelectedFields$,\n    this.isDirty$,\n    (groups, fields, availableFields, checkedAvailableFields, selectedFields, checkedSelectedFields, isDirty) => ({\n      groups,\n      fields,\n      availableFields,\n      checkedAvailableFields,\n      selectedFields,\n      checkedSelectedFields,\n      isDirty\n    })\n  );\n\n  readonly selectGroup = this.updater((state: IFieldGroupsEditorState, groupName: string) => {\n    const groups = state.groups.map((group) => ({\n      ...group,\n      selected: group.name === groupName\n    }));\n\n    return { ...state, groups, selectedGroupName: groupName };\n  });\n\n  readonly markDirty = this.updater((state: IFieldGroupsEditorState) => ({ ...state, isDirty: true }));\n\n  readonly checkField = this.updater((state: IFieldGroupsEditorState, guid: string) => ({\n    ...state,\n    fields: state.fields.map((field) => (field.guid === guid ? { ...field, checked: true } : field))\n  }));\n\n  readonly uncheckField = this.updater((state: IFieldGroupsEditorState, guid: string) => ({\n    ...state,\n    fields: state.fields.map((field) => (field.guid === guid ? { ...field, checked: false } : field))\n  }));\n\n  readonly sortSelectedFields = this.updater((state: IFieldGroupsEditorState, guids: string[]) => ({\n    ...state,\n    fields: state.fields.map((field) => {\n      const index = guids.indexOf(field.guid);\n\n      return index > -1 ? { ...field, fieldOrder: index } : field;\n    })\n  }));\n\n  readonly assignCheckedFields = this.updater((state: IFieldGroupsEditorState) => {\n    const selectedFields = state.fields.filter((field) => field.groupName === state.selectedGroupName);\n    let fieldOrder = selectedFields.length;\n\n    return {\n      ...state,\n      fields: state.fields.map((field) =>\n        field.checked\n          ? {\n              ...field,\n              checked: false,\n              groupName: state.selectedGroupName,\n              fieldOrder: fieldOrder++\n            }\n          : field\n      ),\n      isDirty: true\n    };\n  });\n\n  readonly unassignCheckedFields = this.updater((state: IFieldGroupsEditorState) => ({\n    ...state,\n    fields: state.fields.map((field) =>\n      field.checked ? { ...field, checked: false, fieldOrder: null, groupName: null } : field\n    ),\n    isDirty: true\n  }));\n\n  readonly removeField = this.updater((state: IFieldGroupsEditorState, guid: string) => ({\n    ...state,\n    fields: state.fields.map((field) =>\n      field.guid === guid ? { ...field, groupName: null, fieldOrder: null } : field\n    ),\n    isDirty: true\n  }));\n\n  readonly removeGroup = this.updater((state: IFieldGroupsEditorState, groupName: string) => ({\n    ...state,\n    fields: state.fields.map((field) =>\n      field.groupName === groupName ? { ...field, groupName: null, fieldOrder: null } : field\n    ),\n    groups: reject(state.groups, { name: groupName }),\n    isDirty: true\n  }));\n\n  readonly renameGroup = this.updater(\n    (state: IFieldGroupsEditorState, group: { oldName: string; newName: string }) => ({\n      ...state,\n      fields: state.fields.map((field) =>\n        field.groupName === group.oldName ? { ...field, groupName: group.newName } : field\n      ),\n      isDirty: true\n    })\n  );\n\n  constructor() {\n    super({ fields: [], isDirty: false, groups: [], selectedGroupName: null });\n  }\n}\n","import { Component, Injector, OnInit } from '@angular/core';\nimport {\n  ActiveModalRef,\n  DismissReasons,\n  ListBuilderTextsModel,\n  RxListBuilderItem,\n  RxSelectOption\n} from '@bmc-ux/adapt-angular';\nimport { RxNotificationService } from '@helix/platform/shared/api';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { TranslateService } from '@ngx-translate/core';\nimport { chain, some, trim } from 'lodash';\nimport { FieldGroupsEditorStore } from './field-groups-editor.store';\nimport { ReplaySubject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { IFieldState } from './field-groups-editor.types';\nimport { IConfigFieldDefinitionModel } from '../../config-designer.types';\n\n@Component({\n  selector: 'rx-field-groups-editor',\n  templateUrl: './field-groups-editor.component.html',\n  styleUrls: ['./field-groups-editor.component.scss'],\n  providers: [FieldGroupsEditorStore]\n})\nexport class FieldGroupsEditorComponent extends RxModalClass implements OnInit {\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  listBuilderTexts: ListBuilderTextsModel = {\n    searchPlaceholder: this.translateService.instant(\n      'com.bmc.arsys.rx.client.config-designer.field-groups-list.placeholder'\n    )\n  };\n\n  private duplicateGroupMsg = this.translateService.instant(\n    'com.bmc.arsys.rx.client.designer.validation.duplicate-value.message'\n  );\n\n  itemValidation = (itemName: string, items: RxListBuilderItem[], isEdit: boolean): string =>\n    some(items, (item: RxListBuilderItem) => trim(item.name) === trim(itemName)) ? this.duplicateGroupMsg : null;\n\n  readonly vm$ = this.fieldGroupsEditorStore.vm$;\n\n  constructor(\n    private readonly fieldGroupsEditorStore: FieldGroupsEditorStore,\n    private readonly translateService: TranslateService,\n    private readonly rxNotificationService: RxNotificationService,\n    private readonly activeModalRef: ActiveModalRef,\n    injector: Injector\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.fieldGroupsEditorStore.isDirty$.pipe(filter(Boolean), take(1)).subscribe(() => {\n      this.markAsDirty();\n    });\n\n    const fields: IFieldState[] = this.activeModalRef.getData().fields.map((field: IConfigFieldDefinitionModel) => ({\n      guid: field.guid,\n      name: field.id,\n      groupName: field.localeList[0].fieldGrouping,\n      fieldOrder: field.fieldOrder,\n      checked: false\n    }));\n\n    const groups: RxListBuilderItem[] = chain(fields)\n      .map((field, index) => ({ name: field.groupName, id: index, guid: field.guid }))\n      .filter((group) => !!group.name)\n      .uniqBy('name')\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .value();\n\n    this.fieldGroupsEditorStore.patchState({ fields, groups });\n  }\n\n  onGroupChange(groups: RxListBuilderItem[]): void {\n    this.fieldGroupsEditorStore.selectGroup(groups.find((field) => field.selected)?.name);\n  }\n\n  onGroupAdd(addedGroup: RxListBuilderItem, groups: RxListBuilderItem[]): void {\n    groups.forEach((group) => {\n      group.selected = group === addedGroup;\n    });\n  }\n\n  onGroupRemove(removedGroup: RxListBuilderItem): void {\n    this.fieldGroupsEditorStore.removeGroup(removedGroup.name);\n  }\n\n  onGroupRename([oldGroup, newGroup]: RxListBuilderItem[]): void {\n    this.fieldGroupsEditorStore.renameGroup({ oldName: oldGroup.name, newName: newGroup.name });\n  }\n\n  onAvailableFieldsChange(checkedFields: RxSelectOption[], availableFields: RxSelectOption[]): void {\n    availableFields.forEach((field: RxSelectOption) => {\n      if (some(checkedFields, { guid: field.guid })) {\n        this.fieldGroupsEditorStore.checkField(field.guid);\n      } else {\n        this.fieldGroupsEditorStore.uncheckField(field.guid);\n      }\n    });\n  }\n\n  onSelectedFieldsChange(fields): void {\n    fields.forEach((field) => {\n      if (field.selected) {\n        this.fieldGroupsEditorStore.checkField(field.guid);\n      } else {\n        this.fieldGroupsEditorStore.uncheckField(field.guid);\n      }\n    });\n\n    this.fieldGroupsEditorStore.sortSelectedFields(fields.map((field) => field.guid));\n  }\n\n  onDragEnd(): void {\n    this.fieldGroupsEditorStore.markDirty();\n  }\n\n  moveToSelected(): void {\n    this.fieldGroupsEditorStore.assignCheckedFields();\n  }\n\n  moveToAvailable(): void {\n    this.fieldGroupsEditorStore.unassignCheckedFields();\n  }\n\n  onFieldRemove(removedField): void {\n    this.fieldGroupsEditorStore.removeField(removedField.guid);\n  }\n\n  alphabeticSort(a: RxListBuilderItem, b: RxListBuilderItem): number {\n    return a.name.localeCompare(b.name);\n  }\n\n  optionFormatter(field: RxSelectOption): string {\n    return field.name;\n  }\n\n  saveFieldGroups(): void {\n    this.fieldGroupsEditorStore.fields$.pipe(take(1)).subscribe((fields) => {\n      this.activeModalRef.close({ fields });\n    });\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <div class=\"designer-modal-body modal-body d-flex mh-100 flex-column\">\n    <div class=\"d-flex h-100 flex-fill\">\n      <adapt-rx-list-builder\n        class=\"flex-grow-1 mr-3\"\n        [ngModel]=\"vm.groups\"\n        selectionMode=\"single\"\n        (listItemAdd)=\"onGroupAdd($event, vm.groups)\"\n        (listItemRemove)=\"onGroupRemove($event)\"\n        (listItemUpdate)=\"onGroupRename($event)\"\n        (ngModelChange)=\"onGroupChange($event)\"\n        [customSort]=\"alphabeticSort\"\n        [hideListAreaLabel]=\"true\"\n        [texts]=\"listBuilderTexts\"\n        [itemValidation]=\"itemValidation\"\n        label=\"{{ 'com.bmc.arsys.rx.client.config-designer.field-groups.label' | translate }}\"\n        rx-id=\"field-groups-list\"\n      ></adapt-rx-list-builder>\n\n      <adapt-rx-select\n        class=\"flex-grow-1 h-100 d-flex flex-column\"\n        popupMaxHeight=\"100%\"\n        [options]=\"vm.availableFields\"\n        [ngModel]=\"vm.checkedAvailableFields\"\n        [deselectAllButton]=\"true\"\n        [selectAllButton]=\"true\"\n        [enableFilter]=\"true\"\n        [inline]=\"true\"\n        label=\"{{ 'com.bmc.arsys.rx.client.config-designer.available-fields.label' | translate }}\"\n        [multiple]=\"true\"\n        [singleSelectStyle]=\"'marker'\"\n        [optionFormatter]=\"optionFormatter\"\n        (ngModelChange)=\"onAvailableFieldsChange($event, vm.availableFields)\"\n        rx-id=\"available-fields-list\"\n      ></adapt-rx-select>\n\n      <div class=\"mx-2 d-flex flex-column\">\n        <button\n          type=\"button\"\n          adapt-button\n          class=\"d-icon-right-angle_right mt-auto mb-2\"\n          btn-type=\"secondary\"\n          (click)=\"moveToSelected()\"\n          [disabled]=\"!vm.checkedAvailableFields.length\"\n          rx-id=\"move-to-selected-button\"\n        ></button>\n\n        <button\n          type=\"button\"\n          adapt-button\n          class=\"d-icon-right-angle_left mb-auto\"\n          btn-type=\"secondary\"\n          (click)=\"moveToAvailable()\"\n          [disabled]=\"!vm.checkedSelectedFields.length\"\n          rx-id=\"move-to-available-button\"\n        ></button>\n      </div>\n\n      <adapt-rx-list-builder\n        class=\"flex-grow-1\"\n        [ngModel]=\"vm.selectedFields\"\n        selectionMode=\"multiple\"\n        (listItemRemove)=\"onFieldRemove($event)\"\n        [hideSearchField]=\"true\"\n        [hideListAreaLabel]=\"true\"\n        [hideEdit]=\"true\"\n        (ngModelChange)=\"onSelectedFieldsChange($event)\"\n        (dragend)=\"onDragEnd()\"\n        label=\"{{ 'com.bmc.arsys.rx.client.config-designer.selected-fields.label' | translate }}\"\n        rx-id=\"selected-fields-list\"\n      ></adapt-rx-list-builder>\n    </div>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button\n      type=\"button\"\n      adapt-button\n      btn-type=\"primary\"\n      rx-id=\"save-field-groups-button\"\n      (click)=\"saveFieldGroups()\"\n      [disabled]=\"!vm.isDirty\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n\n    <button type=\"button\" adapt-button btn-type=\"secondary\" rx-id=\"cancel-button\" (click)=\"cancel()\">\n      {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n    </button>\n  </div>\n</ng-container>\n","import { Actions, createEffect, ofType } from '@ngrx/effects';\nimport * as ConfigDesignerActions from './config-designer.actions';\nimport { catchError, filter, map, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { ErrorHandler, Injectable } from '@angular/core';\nimport { IConfigDefinition, IConfigFieldDefinition, RxConfigDefinitionService } from '@helix/platform/config/api';\nimport { RxGuidService } from '@helix/platform/utils';\nimport { RX_CONFIG_DESIGNER } from '../../config-designer.constant';\nimport { FieldDefinitionManagerService } from '../../services/field-definition-manager.service';\nimport { Store } from '@ngrx/store';\nimport {\n  bundleIdSelector,\n  definitionModelFromDefinitionSelector,\n  definitionModelSelector,\n  definitionNameSelector\n} from './config-designer.selectors';\nimport { noop, some } from 'lodash';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  IBundleDescriptor,\n  RxDefinitionNameService,\n  RxGlobalCacheService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport { IConfigDefinitionModel, IConfigFieldDefinitionModel } from '../../config-designer.types';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { ConfigDesignerService } from '../../config-designer.service';\nimport { from, of } from 'rxjs';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { FieldGroupsEditorComponent } from '../field-groups-editor/field-groups-editor.component';\nimport { OpenViewActionModalSize } from '@helix/platform/view/api';\nimport { IFieldState } from '../field-groups-editor/field-groups-editor.types';\n\n@Injectable()\nexport class ConfigDesignerEffects {\n  constructor(\n    private store$: Store<any>,\n    private actions$: Actions,\n    private errorHandler: ErrorHandler,\n    private configDesignerService: ConfigDesignerService,\n    private rxModalService: RxModalService,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService,\n    private fieldDefinitionManagerService: FieldDefinitionManagerService,\n    private rxGuidService: RxGuidService,\n    private rxConfigDefinitionService: RxConfigDefinitionService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxDefinitionNameService: RxDefinitionNameService\n  ) {}\n\n  initConfigDesigner$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.init),\n      map((action) => ConfigDesignerActions.loadParentComponents())\n    )\n  );\n\n  loadParentComponents$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.loadParentComponents),\n      switchMap(() => this.rxConfigDefinitionService.getComponents()),\n      map((parentComponents: string[]) => ConfigDesignerActions.loadParentComponentsSuccess({ parentComponents }))\n    )\n  );\n\n  setParentComponents$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.loadParentComponentsSuccess),\n      map(() => ConfigDesignerActions.loadDefinition())\n    )\n  );\n\n  loadDefinition$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.loadDefinition),\n      withLatestFrom(this.store$.select(bundleIdSelector)),\n      switchMap(([_, bundleId]) => this.rxGlobalCacheService.getBundleDescriptor(bundleId)),\n      withLatestFrom(this.store$.select(definitionNameSelector)),\n      switchMap(([bundleDescriptor, definitionName]: [IBundleDescriptor, string]) =>\n        definitionName\n          ? this.rxConfigDefinitionService.get(this.rxDefinitionNameService.getDisplayName(definitionName))\n          : this.rxConfigDefinitionService.getNew(bundleDescriptor.isApplication)\n      ),\n      map((definition: IConfigDefinition) =>\n        ConfigDesignerActions.loadDefinitionSuccess({\n          definition\n        })\n      )\n    )\n  );\n\n  loadDefinitionSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.loadDefinitionSuccess),\n      map((action) => {\n        const definitionModelFromDefinition = {\n          externalLink: action.definition.externalLink,\n          impactRowVisibility: action.definition.impactRowVisibility,\n          parentComponentName: action.definition.parentComponentName,\n          registeredModuleName: action.definition.registeredModuleName,\n          supportsMultiple: action.definition.supportsMultiple,\n          viewComponent: action.definition.viewComponent,\n          viewToOpen: action.definition.viewToOpen,\n          componentName: action.definition.componentName,\n          permissions: action.definition.permissions,\n          componentLabel: action.definition.localeList[0].componentLabel,\n          firstMenu: action.definition.localeList[0].firstMenu,\n          secondMenu: action.definition.localeList[0].secondMenu,\n          isSettingAccessibleInInnovationStudio:\n            action.definition.showInLocation === RX_CONFIG_DESIGNER.settingAccessOptions.innovationStudio.value ||\n            action.definition.showInLocation === RX_CONFIG_DESIGNER.settingAccessOptions.both.value,\n          isSettingAccessibleInApplication:\n            action.definition.showInLocation === RX_CONFIG_DESIGNER.settingAccessOptions.application.value ||\n            action.definition.showInLocation === RX_CONFIG_DESIGNER.settingAccessOptions.both.value,\n          fields: action.definition.settingMetaData.map<IConfigFieldDefinitionModel>(\n            (field: IConfigFieldDefinition) => ({\n              dataType: field.dataType,\n              defaultValue: field.defaultValue ?? null,\n              fieldOrder: field.fieldOrder,\n              id: field.id,\n              keySetting: field.keySetting,\n              localeList: field.localeList,\n              guid: this.rxGuidService.generate(),\n              maxValue: field.maxValue ?? null,\n              minValue: field.minValue ?? null,\n              selectionFieldOptionProperties: {\n                defaultValue: field.defaultValue as number,\n                optionNamesById: field.optionNamesById,\n                optionLabelsById: field.optionLabelsById\n              },\n              required: field.required,\n              settingLabel: field.localeList[0].settingLabel,\n              isNew: false\n            })\n          )\n        };\n\n        return ConfigDesignerActions.initDefinitionModel({\n          definitionModelFromDefinition\n        });\n      })\n    )\n  );\n\n  markPristine$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        ConfigDesignerActions.initDefinitionModel,\n        ConfigDesignerActions.saveDefinition,\n        ConfigDesignerActions.saveDefinitionSuccess\n      ),\n      map(() => ConfigDesignerActions.markDesignerPristine())\n    )\n  );\n\n  clearSelectedField$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.initDefinitionModel, ConfigDesignerActions.deleteSelectedFieldSuccess),\n      map(() => ConfigDesignerActions.clearSelectedFieldGuid())\n    )\n  );\n\n  markDirty$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        ConfigDesignerActions.updateDefinitionModelFromDesigner,\n        ConfigDesignerActions.updateSelectedFieldModel,\n        ConfigDesignerActions.addFieldModel,\n        ConfigDesignerActions.deleteSelectedFieldSuccess,\n        ConfigDesignerActions.saveDefinitionError\n      ),\n      map(() => ConfigDesignerActions.markDesignerDirty())\n    )\n  );\n\n  createNewFieldModel$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.createNewFieldModel),\n      withLatestFrom(this.store$.select(definitionModelSelector)),\n      map(([action, definitionModel]) => {\n        let newFieldName;\n        let fieldNameSuffix = 0;\n\n        const defaultFieldName = this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.default-field-name.label'\n        );\n\n        do {\n          newFieldName = `${defaultFieldName} ${++fieldNameSuffix}`;\n        } while (some(definitionModel.fields, { id: newFieldName }));\n\n        const guid = this.rxGuidService.generate();\n\n        const newFieldModel = this.fieldDefinitionManagerService.getNewFieldDefinitionModel(action.resourceType, {\n          id: action.isLoginNameField ? 'LoginName' : newFieldName,\n          isNew: true,\n          guid,\n          keySetting: action.isLoginNameField,\n          settingLabel: action.isLoginNameField\n            ? this.translateService.instant('com.bmc.arsys.rx.client.config-designer.login-name-field.label')\n            : newFieldName,\n          minValue: null,\n          maxValue: null,\n          selectionFieldOptionProperties:\n            action.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType\n              ? { defaultValue: null, optionNamesById: null, optionLabelsById: null }\n              : null\n        });\n\n        return ConfigDesignerActions.addFieldModel({ newFieldModel });\n      })\n    )\n  );\n\n  addNewFieldModel$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.addFieldModel),\n      map((action) => ConfigDesignerActions.setSelectedFieldGuid({ guid: action.newFieldModel.guid }))\n    )\n  );\n\n  editFieldGroups$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.editFieldGroups),\n      withLatestFrom(this.store$.select(definitionModelSelector)),\n      switchMap(([_, definitionModel]) =>\n        from(\n          this.rxModalService\n            .openModal({\n              title: this.translateService.instant('com.bmc.arsys.rx.client.config-designer.edit-field-groups.label'),\n              content: FieldGroupsEditorComponent,\n              data: { fields: definitionModel.fields },\n              size: OpenViewActionModalSize.Large as any\n            })\n            .catch(noop)\n        )\n      ),\n      filter(Boolean),\n      withLatestFrom(this.store$.select(definitionModelSelector)),\n      map(([response, definitionModel]: [{ fields: IFieldState[] }, IConfigDefinitionModel]) => {\n        const fields = definitionModel.fields.map((field) => {\n          const updatedField = response.fields.find((item) => item.guid === field.guid);\n\n          return {\n            ...field,\n            fieldOrder: updatedField.fieldOrder,\n            localeList: [\n              {\n                ...field.localeList[0],\n                fieldGrouping: updatedField.groupName\n              }\n            ]\n          };\n        });\n\n        return ConfigDesignerActions.updateDefinitionModelFromDesigner({\n          definitionModelFromDesigner: { ...definitionModel, fields }\n        });\n      })\n    )\n  );\n\n  deleteSelectedField$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.deleteSelectedField),\n      switchMap(() =>\n        from(\n          this.rxModalService.confirm({\n            title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n            modalStyle: RX_MODAL.modalStyles.warning,\n            message: this.translateService.instant('com.bmc.arsys.rx.client.designer.delete-fields-warning.message')\n          })\n        )\n      ),\n      filter(Boolean),\n      map(() => ConfigDesignerActions.deleteSelectedFieldSuccess())\n    )\n  );\n\n  saveDefinition$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.saveDefinition),\n      withLatestFrom(\n        this.store$.select(definitionModelFromDefinitionSelector),\n        this.store$.select(definitionModelSelector),\n        this.store$.select(definitionNameSelector),\n        this.store$.select(bundleIdSelector)\n      ),\n      switchMap(([action, definitionModelFromDefinition, definitionModel, definitionName, bundleId]) => {\n        const definition = this.configDesignerService.getDefinitionFromDefinitionModel(definitionModel);\n\n        if (!definitionName) {\n          return this.rxConfigDefinitionService.create(definition).pipe(\n            map((response) =>\n              ConfigDesignerActions.saveDefinitionSuccess({\n                savedDefinitionName: `${bundleId}:${definitionModel.componentName}`\n              })\n            ),\n            catchError((error) => {\n              this.errorHandler.handleError(error);\n\n              return of(ConfigDesignerActions.saveDefinitionError());\n            })\n          );\n        } else if (\n          definitionModelFromDefinition.impactRowVisibility !== definitionModel.impactRowVisibility ||\n          definitionModelFromDefinition.parentComponentName !== definitionModel.parentComponentName ||\n          definitionModelFromDefinition.supportsMultiple !== definitionModel.supportsMultiple\n        ) {\n          return from(\n            this.rxModalService.confirm({\n              title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n              modalStyle: RX_MODAL.modalStyles.warning,\n              message: this.translateService.instant(\n                'com.bmc.arsys.rx.client.config-designer.setting-data-will-be-deleted-warning.message'\n              )\n            })\n          ).pipe(\n            filter(Boolean),\n            map(() => ConfigDesignerActions.updateDefinition({ definition }))\n          );\n        } else {\n          return [ConfigDesignerActions.updateDefinition({ definition })];\n        }\n      })\n    )\n  );\n\n  updateDefinition$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.updateDefinition),\n      switchMap((action) =>\n        this.rxConfigDefinitionService.update(action.definition.componentName, action.definition).pipe(\n          map((response) =>\n            ConfigDesignerActions.saveDefinitionSuccess({\n              savedDefinitionName: `${action.definition.componentName}`\n            })\n          ),\n          catchError((error) => {\n            this.errorHandler.handleError(error);\n\n            return of(ConfigDesignerActions.saveDefinitionError());\n          })\n        )\n      )\n    )\n  );\n\n  saveDefinitionSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfigDesignerActions.saveDefinitionSuccess),\n      withLatestFrom(this.store$.select(definitionNameSelector)),\n      tap(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.designer.definition-saved-successfully.message', {\n            definitionTypeDisplayName: this.translateService.instant('com.bmc.arsys.rx.client.config-definition.label')\n          })\n        );\n      }),\n      filter(([_, definitionName]) => !!definitionName),\n      map(() => ConfigDesignerActions.loadDefinition())\n    )\n  );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AdaptAccordionModule,\n  AdaptAlertModule,\n  AdaptBusyModule,\n  AdaptButtonModule,\n  AdaptCodeViewerModule,\n  AdaptDropdownModule,\n  AdaptRxCheckboxModule,\n  AdaptRxCounterModule,\n  AdaptRxLabelModule,\n  AdaptRxListBuilderModule,\n  AdaptRxRadiobuttonModule,\n  AdaptRxSelectModule,\n  AdaptRxTextfieldModule,\n  AdaptSidebarModule\n} from '@bmc-ux/adapt-angular';\nimport { AdaptTableModule } from '@bmc-ux/adapt-table';\nimport { RxRecordDefinitionResourceTypePipeModule } from '@helix/platform/record/api';\nimport { RxDefinitionModule } from '@helix/platform/shared/api';\nimport {\n  ExpressionFormControlModule,\n  FormControlsModule,\n  RxDefinitionPickerModule,\n  RxDesignerHeaderModule,\n  RxFormBuilderModule\n} from '@helix/platform/shared/components';\nimport {\n  RxBladeModule,\n  RxJsonViewerModule,\n  RxLineLoaderModule,\n  RxValidationIssuesModule\n} from '@helix/platform/ui-kit';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ConfigDesignerComponent } from './config-designer.component';\n\nimport { StoreModule } from '@ngrx/store';\nimport { configDesignerModelReducer } from './+state/config-designer-model.reducer';\nimport { RX_CONFIG_DESIGNER } from '../config-designer.constant';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ConfigDesignerEffects } from './+state/config-designer.effects';\nimport { FieldGroupsEditorComponent } from './field-groups-editor/field-groups-editor.component';\n\n@NgModule({\n  declarations: [ConfigDesignerComponent, FieldGroupsEditorComponent],\n  exports: [ConfigDesignerComponent],\n  imports: [\n    AdaptAccordionModule,\n    AdaptButtonModule,\n    AdaptDropdownModule,\n    AdaptRxTextfieldModule,\n    RecordGridModule,\n    CommonModule,\n    FormsModule,\n    FormControlsModule,\n    RxDesignerHeaderModule,\n    RxBladeModule,\n    RxValidationIssuesModule,\n    RxJsonViewerModule,\n    RxFormBuilderModule,\n    AdaptRxCheckboxModule,\n    AdaptRxLabelModule,\n    TranslateModule,\n    RecordGridModule,\n    RxRecordDefinitionResourceTypePipeModule,\n    AdaptAlertModule,\n    RxLineLoaderModule,\n    AdaptTableModule,\n    ReactiveFormsModule,\n    RxDefinitionPickerModule,\n    AdaptRxRadiobuttonModule,\n    AdaptRxSelectModule,\n    ExpressionFormControlModule,\n    AdaptBusyModule,\n    AdaptRxCounterModule,\n    AdaptCodeViewerModule,\n    AdaptSidebarModule,\n    RxDefinitionModule,\n    AdaptRxListBuilderModule,\n    StoreModule.forFeature(RX_CONFIG_DESIGNER.featureSelector, {\n      model: configDesignerModelReducer\n    }),\n    EffectsModule.forFeature([ConfigDesignerEffects])\n  ]\n})\nexport class ConfigDesignerModule {}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  IComponentCanDeactivate,\n  IDesignerConfiguration,\n  RX_APPLICATION,\n  RxBundleCacheService,\n  RxComponentCanDeactivateGuard,\n  RxDefinitionNameService,\n  RxPageTitleService\n} from '@helix/platform/shared/api';\nimport { RxUtilityModalsService } from '@helix/platform/ui-kit';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ConfigDesignerComponent } from '../config-designer/config-designer.component';\n\n@Component({\n  selector: 'rx-config-designer-page',\n  templateUrl: './config-designer-page.component.html'\n})\nexport class ConfigDesignerPageComponent implements OnInit, OnDestroy, IComponentCanDeactivate {\n  isInitialized = false;\n\n  private isNewConfig: boolean;\n  configuration: IDesignerConfiguration;\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  @ViewChild(ConfigDesignerComponent)\n  private configDesignerComponent: ConfigDesignerComponent;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxUtilityModalsService: RxUtilityModalsService,\n    private rxPageTitleService: RxPageTitleService,\n    private router: Router,\n    private translateService: TranslateService,\n    private rxComponentCanDeactivateGuard: RxComponentCanDeactivateGuard\n  ) {}\n\n  ngOnInit(): void {\n    this.rxComponentCanDeactivateGuard.setPageComponent(this);\n\n    this.activatedRoute.params.pipe(takeUntil(this.destroyed$)).subscribe(({ definitionName, bundleId }) => {\n      this.rxBundleCacheService.bundleId = bundleId || this.rxDefinitionNameService.getBundleId(definitionName);\n\n      this.isInitialized = true;\n      this.isNewConfig = !definitionName;\n\n      this.configuration = {\n        ...this.configuration,\n        definitionName: definitionName,\n        bundleId: this.rxBundleCacheService.bundleId\n      };\n\n      this.rxPageTitleService.set([\n        this.rxDefinitionNameService.getDisplayName(definitionName),\n        this.translateService.instant('com.bmc.arsys.rx.client.config-designer.title')\n      ]);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n    this.rxComponentCanDeactivateGuard.setPageComponent(null);\n  }\n\n  onDefinitionSaved(definitionName: string): void {\n    if (this.isNewConfig) {\n      this.router.navigate(['edit2', definitionName], { relativeTo: this.activatedRoute.parent });\n    }\n  }\n\n  onDefinitionErrorLoading(): void {\n    this.router.navigate(['new2', this.rxBundleCacheService.bundleId], { relativeTo: this.activatedRoute.parent });\n  }\n\n  onCloseDesigner(): void {\n    this.router.navigate([\n      RX_APPLICATION.innovationStudioBundleId,\n      this.rxBundleCacheService.bundleId,\n      'config-definitions'\n    ]);\n  }\n\n  canDeactivate(): boolean {\n    return this.configDesignerComponent?.canDeactivate() ?? true;\n  }\n\n  confirmDeactivation(): Promise<boolean> {\n    return this.rxUtilityModalsService.confirmUnsavedChanges();\n  }\n}\n","<rx-config-designer\n  *ngIf=\"isInitialized\"\n  [configuration]=\"configuration\"\n  (definitionSaved)=\"onDefinitionSaved($event)\"\n  (definitionErrorLoading)=\"onDefinitionErrorLoading()\"\n  (closeDesigner)=\"onCloseDesigner()\"\n></rx-config-designer>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ConfigDesignerModule } from '../config-designer/config-designer.module';\nimport { ConfigDesignerPageComponent } from './config-designer-page.component';\n\n@NgModule({\n  declarations: [ConfigDesignerPageComponent],\n  exports: [ConfigDesignerPageComponent],\n  imports: [CommonModule, ConfigDesignerModule]\n})\nexport class ConfigDesignerPageModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["ShowInLocationOptions","createAction","props","createFeatureSelector","createSelector","isNil","ImpactRowVisibility","RX_RECORD_DEFINITION","Injectable","TranslateService","TextFormControlComponent","SelectFormControlComponent","SwitchFormControlComponent","trim","ValidationIssueType","CounterFormControlComponent","RX_NUMBER","ColorPickerFormControlComponent","DateFormControlComponent","SelectionFieldOptionsComponent","isEmpty","EventEmitter","ReplaySubject","switchMap","map","Subject","startWith","shareReplay","some","combineLatest","toUpper","withLatestFrom","find","of","ConfigDesignerActions.init","skip","takeUntil","ConfigDesignerActions.setInspectorTabIndex","isNull","ConfigDesignerActions.setSelectedFieldGuid","take","ConfigDesignerActions.saveDefinition","ConfigDesignerActions.editFieldGroups","ConfigDesignerActions.updateDefinitionModelFromDesigner","ConfigDesignerActions.updateSelectedFieldModel","chain","filter","uniqBy","reverse","ConfigDesignerActions.createNewFieldModel","ConfigDesignerActions.clearSelectedFieldGuid","ConfigDesignerActions.toggleDesignMode","LabelFormControlComponent","BooleanFormControlComponent","RxPermissionEditorComponent","RX_PERMISSION","ConfigDesignerActions.deleteSelectedField","ConfigDesignerActions.destroy","AdaptSidebarComponent","Component","ViewChild","Input","Output","createReducer","on","ConfigDesignerActions.initDefinitionModel","ConfigDesignerActions.markDesignerPristine","ConfigDesignerActions.markDesignerDirty","ConfigDesignerActions.loadParentComponentsSuccess","cloneDeep","findIndex","ConfigDesignerActions.addFieldModel","ConfigDesignerActions.deleteSelectedFieldSuccess","remove","ConfigDesignerActions.saveDefinitionSuccess","reject","ComponentStore","DismissReasons","RxModalClass","createEffect","ofType","ConfigDesignerActions.loadParentComponents","ConfigDesignerActions.loadDefinition","ConfigDesignerActions.loadDefinitionSuccess","ConfigDesignerActions.saveDefinitionError","from","OpenViewActionModalSize","noop","RX_MODAL","catchError","ConfigDesignerActions.updateDefinition","tap","AdaptAccordionModule","AdaptButtonModule","AdaptDropdownModule","AdaptRxTextfieldModule","RecordGridModule","CommonModule","FormsModule","FormControlsModule","RxDesignerHeaderModule","RxBladeModule","RxValidationIssuesModule","RxJsonViewerModule","RxFormBuilderModule","AdaptRxCheckboxModule","AdaptRxLabelModule","TranslateModule","RxRecordDefinitionResourceTypePipeModule","AdaptAlertModule","RxLineLoaderModule","AdaptTableModule","ReactiveFormsModule","RxDefinitionPickerModule","AdaptRxRadiobuttonModule","AdaptRxSelectModule","ExpressionFormControlModule","AdaptBusyModule","AdaptRxCounterModule","AdaptCodeViewerModule","AdaptSidebarModule","RxDefinitionModule","AdaptRxListBuilderModule","StoreModule","EffectsModule","NgModule","RX_APPLICATION"],"mappings":"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"}