{"version":3,"file":"helix-platform-view-api.umd.js","sources":["../../../../libs/platform/view/api/common/record-grid-query-filter.types.ts","../../../../libs/platform/view/api/common/record-grid.types.ts","../../../../libs/platform/view/api/common/rich-text.constant.ts","../../../../libs/platform/view/api/common/ckeditor-configurator.service.ts","../../../../libs/platform/view/api/registries/view-component-descriptor.types.ts","../../../../libs/platform/view/api/device/device.types.ts","../../../../libs/platform/view/api/common/available-on-devices-prop.types.ts","../../../../libs/platform/view/api/common/disabled-prop.types.ts","../../../../libs/platform/view/api/common/hidden-prop.types.ts","../../../../libs/platform/view/api/common/styles-prop.types.ts","../../../../libs/platform/view/api/common/standard-prop.types.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../libs/platform/view/api/expressions/expression-functions.constant.ts","../../../../libs/platform/view/api/expressions/expression-helper.service.ts","../../../../libs/platform/view/api/expressions/expression-syntax-tree-builder.service.ts","../../../../libs/platform/view/api/expressions/default-expression-evaluator.service.ts","../../../../libs/platform/view/api/expressions/default-expression-validator.service.ts","../../../../libs/platform/view/api/expressions/expression-evaluator.service.ts","../../../../libs/platform/view/api/expressions/expression-evaluator.types.ts","../../../../libs/platform/view/api/expressions/record-query-expression-evaluator.service.ts","../../../../libs/platform/view/api/icons/icon.constant.ts","../../../../libs/platform/view/api/registries/view-component-registry.service.ts","../../../../libs/platform/view/api/domain/view-definition-type.enum.ts","../../../../libs/platform/view/api/domain/view-definition.constant.ts","../../../../libs/platform/view/api/domain/view-component.types.ts","../../../../libs/platform/view/api/layout/view-layout.types.ts","../../../../libs/platform/view/api/layout/view-layout.class.ts","../../../../libs/platform/view/api/services/view-definition-parser.service.ts","../../../../libs/platform/view/api/view-action/view-action-registry.service.ts","../../../../libs/platform/view/api/services/view-definition-localization.service.ts","../../../../libs/platform/view/api/services/view-definition.service.ts","../../../../libs/platform/view/api/services/view-definition-data-page.service.ts","../../../../libs/platform/view/api/services/view-definition-cache.service.ts","../../../../libs/platform/view/api/view.module.ts","../../../../libs/platform/view/api/view-action/view-action.service.ts","../../../../libs/platform/view/api/view-action/view-action.types.ts","../../../../libs/platform/view/api/view-action/common/launch-behavior.constant.ts","../../../../libs/platform/view/api/view-action/view-action-design-adapter.service.ts","../../../../libs/platform/view/api/view-action/view-action-design.module.ts","../../../../libs/platform/view/api/view-action/view-action-definition-adapter-registry.service.ts","../../../../libs/platform/view/api/domain/view-display-type.enum.ts","../../../../libs/platform/view/api/view-action/view-action-utils.service.ts","../../../../libs/platform/view/api/layout/old-view-layout-adapter.service.ts","../../../../libs/platform/view/api/shell/shell.constant.ts","../../../../libs/platform/view/api/shell/shell.service.ts","../../../../libs/platform/view/api/resolvers/homepage.resolver.ts","../../../../libs/platform/view/api/resolvers/view-component.resolver.ts","../../../../libs/platform/view/api/device/device-detection.service.ts","../../../../libs/platform/view/api/helix-platform-view-api.ts"],"sourcesContent":["export enum RecordGridFilterDataLogic {\n  And = 'and',\n  Or = 'or'\n}\n\nexport enum RecordGridFilterOperator {\n  Eq = 'eq',\n  Gte = 'gte',\n  Lte = 'lte',\n  Like = 'like',\n  Ne = 'ne',\n  Lt = 'lt',\n  Gt = 'gt',\n  In = 'in'\n}\n\nexport interface IRecordGridFilterColumnValue<TValue = any | IRecordGridNamedFilterOption> {\n  [field: string]: TValue;\n}\n\nexport const RecordGridNamedFilterOptionKey = 'namedFilterOption';\n\nexport interface IRecordGridNamedFilterOption {\n  [RecordGridNamedFilterOptionKey]: string;\n}\n\nexport interface IRecordGridFilterOperator {\n  /** RecordGridFilterOperator: 'gte', 'eq', etc. In predefined filter presets it has guid for component definition */\n  [operator: string]: IRecordGridFilterColumnValue | string;\n}\n\nexport type IRecordGridFilterDataOrOperator = IRecordGridFilterOperator | IRecordGridFilterData;\n\n/**\n * Filter example:\n *\n * {\n *   \"and\": [\n *     {\n *       \"or\": [\n *         {\n *           \"eq\": {\n *             \"textField1\": \"foo\"\n *           }\n *         },\n *         {\n *           \"eq\": {\n *             \"textField1\": \"bar\"\n *           }\n *         }\n *       ]\n *     },\n *     {\n *       \"and\": [\n *         {\n *           \"gte\": {\n *             \"numberField2\": -1e+26\n *           }\n *         },\n *         {\n *           \"lte\": {\n *             \"numberField2\": 1e+26\n *           }\n *         }\n *       ]\n *     }\n *   ]\n * }\n */\n\nexport interface IRecordGridFilterData {\n  [RecordGridFilterDataLogic.And]?: IRecordGridFilterDataOrOperator[];\n  [RecordGridFilterDataLogic.Or]?: IRecordGridFilterDataOrOperator[];\n}\n","import { IFieldDefinition } from '@helix/platform/record/api';\nimport { Observable } from 'rxjs';\nimport { SelectedAdvancedFilter } from '@bmc-ux/adapt-angular';\nimport { IRecordGridFilterData } from './record-grid-query-filter.types';\nimport { RowDataItem } from '@bmc-ux/adapt-table';\nimport { IViewPresetApi } from './view-preset.types';\n\nexport const RowDataItemIdFieldName = '$ID$';\n\nexport interface IRowDataItem extends RowDataItem {\n  [RowDataItemIdFieldName]: string;\n}\n\nexport enum ApplyGridFilterMode {\n  Append = 'Append',\n  Remove = 'Remove',\n  Overwrite = 'Overwrite',\n  Merge = 'Merge',\n  Clear = 'Clear',\n  Begin = 'Begin',\n  End = 'End'\n}\n\nexport interface IRecordGridColumnPublicProperties {\n  field: string;\n  header: string;\n  hidden: boolean;\n  fieldDefinition: IFieldDefinition;\n}\n\nexport interface IRxRecordGridApi extends IViewPresetApi {\n  refresh: () => Observable<never>;\n  setFilter: (filters: SelectedAdvancedFilter[]) => void;\n  getColumns: () => IRecordGridColumnPublicProperties[];\n  getRecordDefinitionName: () => string;\n  getSelectedRows: (inSortOrder?: boolean) => IRowDataItem[];\n  setSelectedRows: (selectedRows: IRowDataItem[]) => void;\n  getFirstSelectedRow: () => IRowDataItem;\n  getSelectedRowCount: () => number;\n  getVisibleRows: () => IRowDataItem[];\n  applyFilters: (filters: IRecordGridFilterData, mode: ApplyGridFilterMode) => void;\n}\n","const expressionAttributeName = 'rx-expression';\n\nexport const RX_RICH_TEXT = {\n  expressionAttributeName\n};\n","import { Injectable } from '@angular/core';\nimport { RxLocalizationService } from '@helix/platform/shared/api';\nimport { RxUrlUtilsService } from '@helix/platform/utils';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RX_RICH_TEXT } from './rich-text.constant';\n\nconst RX_RICH_TEXT_STYLES = 'skins/rich-text/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxCkEditorConfiguratorService {\n  constructor(\n    private translateService: TranslateService,\n    private rxLocalizationService: RxLocalizationService,\n    private rxUrlUtilsService: RxUrlUtilsService\n  ) {}\n\n  getCKEditorConfig(): any {\n    return {\n      resize_enabled: false,\n      title: false,\n      skin: 'rich-text,' + RX_RICH_TEXT_STYLES,\n      toolbar: [\n        [\n          'Bold',\n          'Italic',\n          'Strike',\n          'Underline',\n          '-',\n          'NumberedList',\n          'BulletedList',\n          'Outdent',\n          'Indent',\n          '-',\n          'JustifyLeft',\n          'JustifyCenter',\n          'JustifyRight',\n          '-',\n          'Format',\n          'Styles',\n          'Font',\n          'FontSize',\n          'TextColor'\n        ]\n      ],\n      stylesSet: [\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.italic-title'),\n          element: 'h2',\n          attributes: {\n            class: 'italic-title'\n          }\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.subtitle'),\n          element: 'h3',\n          attributes: {\n            class: 'subtitle'\n          }\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.special-container'),\n          element: 'div',\n          attributes: {\n            class: 'special-containers'\n          }\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.marker'),\n          element: 'span',\n          attributes: {\n            class: 'marker'\n          }\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.small'),\n          element: 'small'\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.computer-code'),\n          element: 'code'\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.keyboard-phrase'),\n          element: 'kbd'\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.sample-text'),\n          element: 'samp'\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.variable'),\n          element: 'var'\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.deleted-text'),\n          element: 'del'\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.inserted-text'),\n          element: 'ins'\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.cited-work'),\n          element: 'cite'\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.inline-quotation'),\n          element: 'q'\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.compact-table'),\n          element: 'table',\n          attributes: {\n            cellpadding: '5',\n            cellspacing: '0',\n            class: 'compact-table'\n          }\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.borderless-table'),\n          element: 'table',\n          attributes: {\n            class: 'borderless-table'\n          }\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.square-bulleted-list'),\n          element: 'ul',\n          attributes: {\n            class: 'square-bulleted-list'\n          }\n        }\n      ],\n      language: this.rxLocalizationService.currentLocale,\n      format_tags: 'p;h1;h2;h3;pre',\n      height: '78px'\n    };\n  }\n\n  getContentRules(): CKEDITOR.filter.allowedContentRules {\n    return {\n      p: true,\n      strong: true,\n      em: true,\n      s: true,\n      u: true,\n      ol: true,\n      ul: true,\n      li: true,\n      small: true,\n      code: true,\n      kbd: true,\n      samp: true,\n      var: true,\n      del: true,\n      ins: true,\n      cite: true,\n      q: true,\n      pre: true,\n      br: true,\n      span: {\n        classes: 'marker',\n        attributes: [RX_RICH_TEXT.expressionAttributeName, 'contenteditable', 'title'],\n        styles: 'color'\n      },\n      h1: true,\n      h2: {\n        classes: 'italic-title'\n      },\n      h3: {\n        classes: 'subtitle'\n      },\n      div: {\n        classes: 'special-containers'\n      },\n      a: {\n        match: (element) => this.rxUrlUtilsService.isUrlSafe(element.attributes.href),\n        attributes: [\n          'target',\n          'id',\n          'dir',\n          'accesskey',\n          'lang',\n          'tabindex',\n          'title',\n          'type',\n          'charset',\n          'rel',\n          'href',\n          'name',\n          'style',\n          'class',\n          'download'\n        ]\n      },\n      'div h1 h2 h3 p span pre li': {\n        styles: 'font-size, text-align, font-family'\n      }\n    } as CKEDITOR.filter.allowedContentRules;\n  }\n}\n","import { ComponentFactory, Injector, Type } from '@angular/core';\nimport { IExpressionConfigurator, IExpressionConfiguratorProvider, IPlainObject } from '@helix/platform/shared/api';\nimport { IExpressionEvaluator } from '../expressions/expression-evaluator.types';\nimport { IViewDefinitionPermission } from '../domain/view-definition-permission.interface';\n\nexport interface IViewComponentDescriptor {\n  // type/selector that uniquely identifies the component\n  type: string;\n\n  // alternative types that can be used by component\n  aliases?: string[];\n\n  // named areas withing a component where the child components will be rendered\n  outlets?: { name: string }[];\n\n  // component factory for creating the component at runtime\n  componentFactory?: ComponentFactory<any>; // IViewComponent\n\n  // descriptors of a component's runtime properties\n  properties?: IComponentPropertyDescriptor[];\n\n  // name of a property in the parent component's propertiesByName where\n  // propertiesByName of the current data component will be stored at runtime\n  configPropertyName?: string;\n\n  // name of the component as displayed in the view designer palette\n  // and used as the default label\n  name?: string;\n\n  // optional index that used for sorting components in palette\n  index?: number;\n\n  // ID of a bundle to which this component logically belongs.\n  // If the specified bundle is not deployed, the component will not be available\n  // in the view designer palette.\n  bundleId?: string;\n\n  // list of bundle IDs within which this component will be available at design time;\n  // if not specified, or blank, the component will be available in all bundles.\n  availableInBundles?: Array<string | RegExp>;\n\n  // component factory for creating the component at design time\n  designComponentFactory?: ComponentFactory<any>;\n\n  // component's design time model\n  designComponentModel?: IViewDesignerComponentModelConstructor;\n\n  expressionConfigurator?: Type<IExpressionConfigurator>;\n\n  // name of a view designer palette group in which this component will be displayed\n  group?: string;\n\n  // flag indicating whether the component should be hidden in the view designer palette;\n  // data and page components are always hidden\n  hidden?: boolean;\n\n  // CSS class name for the icon to display in the view designer palette\n  icon?: string;\n\n  // flag indicating whether this component can contain child components, including data components\n  isContainerComponent?: boolean;\n\n  // flag indicating whether this is a data component\n  // used for storing the data related to its parent component\n  // but not rendered as an individual component, e.g. record grid column\n  isDataComponent?: boolean;\n\n  // flag indicating whether this is a page component\n  isPageComponent?: boolean;\n\n  // additional options\n  options?: IPlainObject;\n\n  // callback that is executed to decide whether this component can be dropped\n  // on a target component on the view designer canvas\n  canBeInsertedInto?(componentTypes: string[]): boolean;\n}\n\nexport interface IViewDesignerComponentModel<TProperties = IPlainObject, TDesignProperties = TProperties>\n  extends IExpressionConfiguratorProvider {\n  rxInit?(): void;\n\n  getPropertiesByName?(props: TDesignProperties): TProperties;\n}\n\nexport interface IViewDesignerComponentModelConstructor {\n  new (injector: Injector, sandbox: any): IViewDesignerComponentModel;\n\n  getInitialProperties?(initialProperties: IPlainObject): IPlainObject;\n\n  getDefaultPermissions?(): IViewDefinitionPermission[];\n}\n\nexport interface IComponentPropertyDescriptor {\n  name: string;\n  label?: string;\n  // if provided, runtime will try to cast property value to provided type\n  type?: ViewComponentPropertyType;\n  // if provided, designer will try to cast property value to provided type\n  designType?: ViewComponentPropertyType;\n  enableExpressionEvaluation?: boolean;\n  // custom Expression Evaluator Service\n  evaluatorService?: IExpressionEvaluator;\n  // if provided true, property value will be localizable\n  localizable?: boolean;\n}\n\nexport enum ViewComponentPropertyType {\n  Boolean = 'boolean',\n  String = 'string',\n  Number = 'number',\n  Array = 'array',\n  Object = 'object'\n}\n","export enum RxDevice {\n  Desktop = 'desktop',\n  Tablet = 'tablet',\n  Mobile = 'mobile'\n}\n","import { ViewComponentPropertyType } from '../registries/view-component-descriptor.types';\nimport { RxDevice } from '../device/device.types';\n\nexport const RX_AVAILABLE_ON_DEVICES_ALL_VALUE = Object.values(RxDevice);\n\nexport const RX_AVAILABLE_ON_DEVICES_PROP_NAME = 'availableOnDevices';\n\nexport const RX_AVAILABLE_ON_DEVICES_DEFAULT_VALUE = {\n  [RX_AVAILABLE_ON_DEVICES_PROP_NAME]: RX_AVAILABLE_ON_DEVICES_ALL_VALUE\n};\n\nexport const RX_AVAILABLE_ON_DEVICES_PROP_DESC = {\n  name: RX_AVAILABLE_ON_DEVICES_PROP_NAME,\n  type: ViewComponentPropertyType.Array,\n  designType: ViewComponentPropertyType.Array\n};\n\nexport interface IRxAvailableOnDevicesProp {\n  availableOnDevices?: RxDevice[];\n}\n","export const RX_DISABLED_PROP_NAME = 'disabled';\n\nexport const RX_DISABLED_PROP_DEFAULT_VALUE = {\n  [RX_DISABLED_PROP_NAME]: '0'\n};\n\nexport const RX_DISABLED_PROP_DESC = {\n  name: RX_DISABLED_PROP_NAME,\n  enableExpressionEvaluation: true\n};\n\nexport interface IRxDisabledProp {\n  disabled?: string | any;\n}\n","export const RX_HIDDEN_PROP_NAME = 'hidden';\n\nexport const RX_HIDDEN_PROP_DEFAULT_VALUE = {\n  [RX_HIDDEN_PROP_NAME]: '0'\n};\n\nexport const RX_HIDDEN_PROP_DESC = {\n  name: RX_HIDDEN_PROP_NAME,\n  enableExpressionEvaluation: true\n};\n\nexport interface IRxHiddenProp {\n  hidden?: string | any;\n}\n","export const RX_STYLES_PROP_NAME = 'styles';\n\nexport const RX_STYLES_PROP_DEFAULT_VALUE = {\n  [RX_STYLES_PROP_NAME]: null\n};\n\nexport const RX_STYLES_PROP_DESC = {\n  name: RX_STYLES_PROP_NAME\n};\n\nexport interface IRxStylesProp {\n  styles?: string;\n}\n","import {\n  IRxAvailableOnDevicesProp,\n  RX_AVAILABLE_ON_DEVICES_DEFAULT_VALUE,\n  RX_AVAILABLE_ON_DEVICES_PROP_DESC\n} from './available-on-devices-prop.types';\nimport { IRxHiddenProp, RX_HIDDEN_PROP_DEFAULT_VALUE, RX_HIDDEN_PROP_DESC } from './hidden-prop.types';\nimport { IRxStylesProp, RX_STYLES_PROP_DEFAULT_VALUE, RX_STYLES_PROP_DESC } from './styles-prop.types';\n\nexport const RX_STANDARD_PROPS_DESC = [RX_HIDDEN_PROP_DESC, RX_STYLES_PROP_DESC, RX_AVAILABLE_ON_DEVICES_PROP_DESC];\n\nexport const RX_STANDARD_PROPS_DEFAULT_VALUES = {\n  ...RX_HIDDEN_PROP_DEFAULT_VALUE,\n  ...RX_STYLES_PROP_DEFAULT_VALUE,\n  ...RX_AVAILABLE_ON_DEVICES_DEFAULT_VALUE\n};\n\nexport interface IRxStandardProps extends IRxHiddenProp, IRxStylesProp, IRxAvailableOnDevicesProp {}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { IFunctionDataDictionaryDescriptor } from '@helix/platform/shared/api';\nimport { every, includes, map, size } from 'lodash';\n\nconst expressionFunctions: IFunctionDataDictionaryDescriptor[] = [\n  {\n    name: 'SAME',\n    category: 'Array',\n    description: 'Returns true if all values in array are the same, else false.',\n    parameters: [\n      {\n        name: 'array',\n        description: 'The array to inspect.'\n      }\n    ]\n  },\n  {\n    name: 'INCLUDES',\n    category: 'Array',\n    description: 'Returns true if value is found in array, else false.',\n    parameters: [\n      {\n        name: 'array',\n        description: 'The array to inspect.'\n      },\n      {\n        name: 'value',\n        description: 'The value to search for.'\n      }\n    ]\n  },\n  {\n    name: 'SIZE',\n    category: 'Array',\n    description: 'Gets the size of array.',\n    parameters: [\n      {\n        name: 'array',\n        description: 'The array to inspect.'\n      }\n    ]\n  }\n];\n\nexport const RX_EXPRESSION_FUNCTIONS: IFunctionDataDictionaryDescriptor[] = expressionFunctions.map((descriptor) => {\n  const params = map(descriptor.parameters, 'name').join(', ');\n\n  return {\n    ...descriptor,\n    signature: `${descriptor.name}(${params})`\n  };\n});\n\nexport const RX_SUPPORTED_FUNCTION = {\n  SAME: (collection) => every(collection, (value) => value === collection[0]),\n  INCLUDES: (collection, value) => includes(collection, value),\n  SIZE: (collection) => size(collection)\n};\n","import { Injectable } from '@angular/core';\nimport { escapeRegExp, map, reduce, uniq } from 'lodash';\nimport { ExpressionOperator } from '@helix/platform/shared/api';\n\nexport interface IExtractedTokens {\n  matches: RegExpMatchArray;\n  expression: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxExpressionHelperService {\n  prepareHandlers: Array<(expression: string) => string> = [];\n\n  constructor() {\n    function _convertNull(expression: string): string {\n      return expression.replace(/null/gi, null);\n    }\n\n    function _convertNot(expression: string): string {\n      return expression.replace(/not/gi, '!');\n    }\n\n    function _convertOr(expression: string): string {\n      return expression.replace(/or/gi, ExpressionOperator.Or);\n    }\n\n    function _convertAnd(expression: string): string {\n      return expression.replace(/and/gi, ExpressionOperator.And);\n    }\n\n    function _convertLike(expression: string): string {\n      return expression.replace(/like/gi, ExpressionOperator.Like);\n    }\n\n    function _convertContains(expression) {\n      return expression.replace(/contains/gi, ExpressionOperator.Contains);\n    }\n\n    this.prepareHandlers.push(_convertNull, _convertNot, _convertAnd, _convertOr, _convertLike, _convertContains);\n  }\n\n  extractTokens(regex: RegExp, key: string, expression: string): IExtractedTokens {\n    const matches = expression.match(regex);\n\n    return {\n      matches,\n      expression: expression.replace(regex, key)\n    };\n  }\n\n  insertTokens(matches: RegExpMatchArray | null, key: string, expression: string): string {\n    if (matches !== null) {\n      matches.forEach((value) => {\n        expression = expression.replace(key, value);\n      });\n    }\n\n    return expression;\n  }\n\n  prepare(expression: string): string {\n    // replace all spaces with charCode 160 to 32 charCode which supported by jsep\n    const convertedExpression = expression.replace(new RegExp(String.fromCharCode(160), 'g'), ' ');\n\n    const stringExpressionsData = this.extractTokens(\n      /'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'|\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"/g,\n      'RX_STRING_EXPRESSION',\n      convertedExpression\n    );\n\n    stringExpressionsData.matches = map(stringExpressionsData.matches, this.insertLiteralExpressions);\n\n    const expressionsData = this.extractTokens(/\\${[^}]+}/g, 'RX_EXPRESSION', stringExpressionsData.expression);\n\n    let preparedExpression = this.prepareOperators(expressionsData.expression);\n\n    preparedExpression = this.insertExpressions(expressionsData.matches, 'RX_EXPRESSION', preparedExpression);\n\n    return this.insertTokens(stringExpressionsData.matches, 'RX_STRING_EXPRESSION', preparedExpression);\n  }\n\n  prepareOperators(expression: string): string {\n    return reduce(this.prepareHandlers, (result, handler) => handler(result), expression);\n  }\n\n  private insertLiteralExpressions(expression: string): string {\n    const literalExpressions = uniq(expression.match(/\\${[^}$]+}/g));\n\n    literalExpressions.forEach((literalExpression) => {\n      const regexp = new RegExp(escapeRegExp(literalExpression), 'g');\n\n      expression = expression.replace(regexp, `rx-${literalExpression}`);\n    });\n\n    return expression;\n  }\n\n  private insertExpressions(matches: RegExpMatchArray, key: string, expression: string): string {\n    if (matches !== null) {\n      matches.forEach((value) => {\n        expression = expression.replace(key, `\"rx-${value}\"`);\n      });\n    }\n\n    return expression;\n  }\n}\n","import * as jsep from 'jsep';\nimport { Injectable } from '@angular/core';\nimport { ExpressionOperator } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxExpressionSyntaxTreeBuilderService {\n  private jsep;\n\n  constructor() {\n    this.jsep = jsep;\n\n    this.jsep.addBinaryOp(ExpressionOperator.Contains, 7);\n    this.jsep.addBinaryOp(ExpressionOperator.Like, 7);\n    this.jsep.addBinaryOp(ExpressionOperator.And, 2);\n    this.jsep.addBinaryOp(ExpressionOperator.Or, 1);\n    this.jsep.addBinaryOp(ExpressionOperator.Equal, 6);\n    this.jsep.addBinaryOp(ExpressionOperator.In, 8);\n\n    // Remove default unused binary operators.\n    this.jsep.removeBinaryOp('||');\n    this.jsep.removeBinaryOp('&&');\n    this.jsep.removeBinaryOp('|');\n    this.jsep.removeBinaryOp('^');\n    this.jsep.removeBinaryOp('&');\n    this.jsep.removeBinaryOp('==');\n    this.jsep.removeBinaryOp('===');\n    this.jsep.removeBinaryOp('!==');\n    this.jsep.removeBinaryOp('<<');\n    this.jsep.removeBinaryOp('>>');\n    this.jsep.removeBinaryOp('>>>');\n\n    // Remove default unused unary operators.\n    this.jsep.removeUnaryOp('~');\n\n    // Remove _, but keep $ to match AR expressions, e.g. $USER$.\n    this.jsep.removeIdentifierChar('_');\n  }\n\n  buildTree(expression: string): jsep.Expression {\n    return this.jsep(expression);\n  }\n}\n","import { BinaryExpression, CallExpression, Expression, Identifier, Literal, UnaryExpression } from 'jsep';\nimport { every, find, forEach, includes, isNaN, isNil, isString, isUndefined, result, trim } from 'lodash';\nimport { RxExpressionHelperService } from './expression-helper.service';\nimport { RxExpressionSyntaxTreeBuilderService } from './expression-syntax-tree-builder.service';\nimport { IExpressionEvaluator } from './expression-evaluator.types';\nimport { Injectable } from '@angular/core';\nimport { RxStringService } from '@helix/platform/utils';\nimport BigNumber from 'bignumber.js';\nimport { ExpressionOperator } from '@helix/platform/shared/api';\nimport { RX_EXPRESSION_FUNCTIONS, RX_SUPPORTED_FUNCTION } from './expression-functions.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxDefaultExpressionEvaluatorService implements IExpressionEvaluator {\n  private parsedExpressionCache = {};\n\n  private operators = {\n    [ExpressionOperator.Equal]: (a, b) => {\n      if (BigNumber.isBigNumber(a)) {\n        return a.isEqualTo(b);\n      } else if (BigNumber.isBigNumber(b)) {\n        return b.isEqualTo(a);\n      } else {\n        // tslint:disable-next-line:triple-equals\n        return a == b;\n      }\n    },\n    [ExpressionOperator.Add]: (a, b) => {\n      if ((isNil(a) || isNaN(a)) && (isNil(b) || isNaN(b))) {\n        return null;\n      } else if ((isNil(a) || isNaN(a)) && !(isNil(b) || isNaN(b))) {\n        return BigNumber.isBigNumber(b) ? Number(b) : b;\n      } else if ((isNil(b) || isNaN(b)) && !(isNil(a) || isNaN(a))) {\n        return BigNumber.isBigNumber(a) ? Number(a) : a;\n      }\n\n      // Have to convert BigNumber values to Number in order to use mathimatical addition as opposed to\n      // string concatenation, which will otherwise happen due to BigNumber.valueOf() returning a string.\n      a = BigNumber.isBigNumber(a) ? Number(a) : a;\n      b = BigNumber.isBigNumber(b) ? Number(b) : b;\n\n      return a + b;\n    },\n    [ExpressionOperator.Subtract]: (a, b) => {\n      if (isUndefined(a) || isNaN(a)) {\n        a = 0;\n      }\n\n      if (isUndefined(b) || isNaN(b)) {\n        b = 0;\n      }\n\n      return a - b;\n    },\n    [ExpressionOperator.Multiply]: (a, b) => {\n      if (isUndefined(a) || isNaN(a)) {\n        a = 0;\n      }\n\n      if (isUndefined(b) || isNaN(b)) {\n        b = 0;\n      }\n\n      return a * b;\n    },\n    [ExpressionOperator.Divide]: (a, b) => {\n      if (isUndefined(a) || isUndefined(b) || isNaN(a) || isNaN(b)) {\n        return 0;\n      }\n\n      return a / b;\n    },\n    [ExpressionOperator.LessThan]: (a, b) => {\n      if (BigNumber.isBigNumber(a)) {\n        return a.lt(b);\n      } else if (BigNumber.isBigNumber(b)) {\n        return b.gt(a);\n      } else {\n        return a < b;\n      }\n    },\n    [ExpressionOperator.GreaterThan]: (a, b) => {\n      if (BigNumber.isBigNumber(a)) {\n        return a.gt(b);\n      } else if (BigNumber.isBigNumber(b)) {\n        return b.lt(a);\n      } else {\n        return a > b;\n      }\n    },\n    [ExpressionOperator.GreaterThanOrEqual]: (a, b) => {\n      if (BigNumber.isBigNumber(a)) {\n        return a.gte(b);\n      } else if (BigNumber.isBigNumber(b)) {\n        return b.lte(a);\n      } else {\n        return a >= b;\n      }\n    },\n    [ExpressionOperator.LessThanOrEqual]: (a, b) => {\n      if (BigNumber.isBigNumber(a)) {\n        return a.lte(b);\n      } else if (BigNumber.isBigNumber(b)) {\n        return b.gte(a);\n      } else {\n        return a <= b;\n      }\n    },\n    [ExpressionOperator.NotEqual]: (a, b) => {\n      if (BigNumber.isBigNumber(a)) {\n        return !a.isEqualTo(b);\n      } else if (BigNumber.isBigNumber(b)) {\n        return !b.isEqualTo(a);\n      } else {\n        // tslint:disable-next-line:triple-equals\n        return a != b;\n      }\n    },\n    [ExpressionOperator.Remainder]: (a, b) => {\n      if (isUndefined(a) || isUndefined(b) || isNaN(a) || isNaN(b)) {\n        return 0;\n      }\n\n      return a % b;\n    },\n    [ExpressionOperator.And]: this.andHandler,\n    [ExpressionOperator.And.toLowerCase()]: this.andHandler,\n    [ExpressionOperator.Or]: this.orHandler,\n    [ExpressionOperator.Or.toLowerCase()]: this.orHandler,\n    [ExpressionOperator.Like]: this.likeHandler,\n    [ExpressionOperator.Like.toLowerCase()]: this.likeHandler,\n    [ExpressionOperator.Contains]: this.likeHandler,\n    [ExpressionOperator.Contains.toLowerCase()]: this.likeHandler\n  };\n\n  private unaryOperators = {\n    '-': (value) => {\n      if (isUndefined(value) || isNaN(value)) {\n        return 0;\n      } else {\n        return -Number(value);\n      }\n    },\n    '!': (value) => !Boolean(value)\n  };\n\n  constructor(\n    private rxExpressionHelperService: RxExpressionHelperService,\n    private rxStringService: RxStringService,\n    private rxExpressionSyntaxTreeBuilderService: RxExpressionSyntaxTreeBuilderService\n  ) {}\n\n  parseExpression(expression: string): Expression {\n    if (!this.parsedExpressionCache[expression]) {\n      const parsedExpression = this.rxExpressionSyntaxTreeBuilderService.buildTree(expression);\n\n      if (this.validateChildNodeTypes(parsedExpression)) {\n        this.parsedExpressionCache[expression] = parsedExpression;\n      } else {\n        throw new Error('Invalid syntax');\n      }\n    }\n\n    return this.parsedExpressionCache[expression];\n  }\n\n  evaluate(expression: string, data: object) {\n    let evaluatedExpression = expression;\n\n    expression = trim(expression);\n\n    if (this.rxStringService.isNonEmptyString(expression)) {\n      const preparedExpression = this.rxExpressionHelperService.prepare(expression);\n      let parsedExpression;\n\n      try {\n        parsedExpression = this.parseExpression(preparedExpression);\n      } catch (e) {\n        throw new Error(`Cannot parse expression \"${expression}\": ${e.message}.`);\n      }\n\n      try {\n        evaluatedExpression = this.evaluateNode(parsedExpression, data || {});\n      } catch (e) {\n        throw new Error(`Cannot evaluate expression \"${expression}\": ${e.message}.`);\n      }\n    } else {\n      evaluatedExpression = null;\n    }\n\n    return evaluatedExpression;\n  }\n\n  private andHandler(a, b): boolean {\n    return Boolean(a) && Boolean(b);\n  }\n\n  private orHandler(a, b): boolean {\n    return Boolean(a) || Boolean(b);\n  }\n\n  private likeHandler(a, b): boolean {\n    return includes(a, b);\n  }\n\n  private validateChildNodeTypes(node: Expression): boolean {\n    let isValid = false;\n\n    switch (node.type) {\n      case 'BinaryExpression':\n        isValid =\n          this.validateChildNodeTypes((node as BinaryExpression).left) &&\n          this.validateChildNodeTypes((node as BinaryExpression).right);\n        break;\n\n      case 'UnaryExpression':\n        isValid = this.validateChildNodeTypes((node as UnaryExpression).argument);\n        break;\n\n      case 'CallExpression':\n        isValid = false;\n\n        const functionNode = node as CallExpression;\n        const functionDescriptor = find(RX_EXPRESSION_FUNCTIONS, { name: functionNode.callee['name'] });\n\n        if (functionDescriptor && functionNode.arguments.length === functionDescriptor.parameters.length) {\n          isValid = every(functionNode.arguments, (argument) => this.validateChildNodeTypes(argument));\n        }\n\n        break;\n\n      case 'Literal':\n        isValid = true;\n        break;\n\n      case 'Identifier':\n        isValid = /^\\$[A-Za-z]+\\$$/.test((node as Identifier).name);\n        break;\n    }\n\n    return isValid;\n  }\n\n  private evaluateNode(node: Expression, data: object) {\n    switch (node.type) {\n      case 'BinaryExpression':\n        const left = this.evaluateNode((node as BinaryExpression).left, data);\n        const right = this.evaluateNode((node as BinaryExpression).right, data);\n\n        if (this.operators[(node as BinaryExpression).operator]) {\n          const binaryResult = this.operators[(node as BinaryExpression).operator](left, right);\n\n          if (isNaN(binaryResult)) {\n            throw new Error(\n              `Operator: ${(node as BinaryExpression).operator} has invalid arguments: ${left}, ${right}`\n            );\n          } else {\n            return binaryResult;\n          }\n        } else {\n          throw new Error(`Unknown binary operator: ${(node as BinaryExpression).operator}`);\n        }\n\n      case 'CallExpression':\n        let evaluatedArguments = [];\n        const functionName = (node as CallExpression).callee['name'];\n\n        evaluatedArguments = (node as CallExpression).arguments.map((argument) => this.evaluateNode(argument, data));\n\n        if (RX_SUPPORTED_FUNCTION[functionName]) {\n          return RX_SUPPORTED_FUNCTION[functionName](...evaluatedArguments);\n        } else {\n          throw new Error(`Unknown function: ${functionName}`);\n        }\n\n      case 'Literal':\n        let nodeValue = (node as Literal).value;\n\n        if (isString(nodeValue as string)) {\n          if (/^rx-\\${[^{}$]+}$/.test(nodeValue as string)) {\n            nodeValue = result(data, (nodeValue as string).slice(5, -1));\n          } else {\n            const expressions = (nodeValue as string).match(/(rx-\\${[^{}$]+})/g);\n\n            forEach(expressions, (expression) => {\n              const value = result<any>(data, expression.slice(5, -1));\n\n              nodeValue = (nodeValue as string).replace(expression, isNil(value) ? '' : value);\n            });\n          }\n        }\n\n        return nodeValue;\n\n      case 'UnaryExpression':\n        if (this.unaryOperators[(node as UnaryExpression).operator]) {\n          const evaluatedResult = this.evaluateNode((node as UnaryExpression).argument, data);\n          const unaryResult = this.unaryOperators[(node as UnaryExpression).operator](evaluatedResult);\n\n          if (isNaN(unaryResult)) {\n            throw new Error(`Operator: ${(node as UnaryExpression).operator} has invalid argument: ${evaluatedResult}`);\n          } else {\n            return unaryResult;\n          }\n        } else {\n          throw new Error(`Unknown unary operator: ${(node as UnaryExpression).operator}`);\n        }\n\n      default:\n        throw new Error('Invalid syntax');\n    }\n  }\n}\n","import { RxDefaultExpressionEvaluatorService } from './default-expression-evaluator.service';\nimport { RxExpressionHelperService } from './expression-helper.service';\nimport { IExpressionValidator } from './expression-validator.interface';\nimport { Injectable } from '@angular/core';\nimport { RxStringService } from '@helix/platform/utils';\nimport { IExpressionEvaluator } from './expression-evaluator.types';\nimport { isFunction } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxDefaultExpressionValidatorService implements IExpressionValidator {\n  constructor(\n    private rxStringService: RxStringService,\n    private rxDefaultExpressionEvaluatorService: RxDefaultExpressionEvaluatorService,\n    private rxExpressionHelperService: RxExpressionHelperService\n  ) {}\n\n  isValid(expression: string, customEvaluatorService?: IExpressionEvaluator): boolean {\n    const evaluator = customEvaluatorService || this.rxDefaultExpressionEvaluatorService;\n    let valid = true;\n\n    if (this.rxStringService.isNonEmptyString(expression) && isFunction(evaluator.parseExpression)) {\n      const preparedExpression = this.rxExpressionHelperService.prepare(expression);\n\n      try {\n        evaluator.parseExpression(preparedExpression);\n      } catch (e) {\n        valid = false;\n      }\n    }\n\n    return valid;\n  }\n}\n","import { RxDefaultExpressionEvaluatorService } from './default-expression-evaluator.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { RxDefaultExpressionValidatorService } from './default-expression-validator.service';\nimport { IExpressionEvaluator } from './expression-evaluator.types';\nimport { RxLogService, RxNotificationService } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxExpressionEvaluatorService {\n  constructor(\n    private injector: Injector,\n    private rxLogService: RxLogService,\n    private rxDefaultExpressionEvaluatorService: RxDefaultExpressionEvaluatorService,\n    private rxDefaultExpressionValidatorService: RxDefaultExpressionValidatorService,\n    private rxNotificationService: RxNotificationService\n  ) {}\n\n  evaluate(expression: string, data?: object, customEvaluatorService?: IExpressionEvaluator): any {\n    const evaluator = customEvaluatorService || this.rxDefaultExpressionEvaluatorService;\n\n    const evaluatedExpression = evaluator.evaluate(expression, data);\n\n    this.rxLogService.debug(`EVALUATED EXPRESSION ${expression}: ${evaluatedExpression}`);\n\n    return evaluatedExpression;\n  }\n\n  tryEvaluate(\n    expression: string,\n    data?: object,\n    customEvaluatorService?: IExpressionEvaluator,\n    defaultValue: any = null\n  ): any {\n    let result: any = defaultValue;\n\n    try {\n      result = this.evaluate(expression, data, customEvaluatorService);\n    } catch (error) {\n      this.rxNotificationService.addErrorMessage(error.message);\n    }\n\n    return result;\n  }\n\n  isValid(expression, customEvaluatorService?: IExpressionEvaluator): boolean {\n    return this.rxDefaultExpressionValidatorService.isValid(expression, customEvaluatorService);\n  }\n}\n","import { Expression } from 'jsep';\n\nexport const RX_EXPRESSION_EVALUATOR = {\n  operands: {\n    null: '$NULL$',\n    undefined: '$UNDEFINED$'\n  },\n  associatedFieldIdPrefixPattern: 'recordContext\\\\._associations\\\\.([^\\\\.]+)\\\\.(\\\\w+)\\\\[0]\\\\.'\n};\n\nexport interface IExpressionEvaluator {\n  evaluate(expression: string, data: object);\n\n  parseExpression?(expression: string): Expression;\n}\n","import { Injectable } from '@angular/core';\nimport { isEmpty, isNil, isNull, isString, isUndefined, map, reduce, result } from 'lodash';\nimport { RxStringService } from '@helix/platform/utils';\nimport { RxRecordInstanceUtilsService } from '@helix/platform/record/api';\nimport { ExpressionParserToken } from '@helix/platform/shared/api';\nimport { IExpressionEvaluator, RX_EXPRESSION_EVALUATOR } from './expression-evaluator.types';\nimport { RxDefaultExpressionEvaluatorService } from './default-expression-evaluator.service';\nimport { RxExpressionHelperService } from './expression-helper.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRecordQueryExpressionEvaluatorService implements IExpressionEvaluator {\n  private viewRegExp = /\\${(view.+?)}/g;\n\n  // extract strings surrounded by double quotes,\n  // extracted strings will include escaped double quotes characters (\"\")\n  private stringMatchingRegExp = /\"((?:(?:\"\")*|(?:[^\"])*)*)\"/g;\n\n  private rxStringsExpressionData;\n  private rxExpressionsData;\n  private arRecordAssociationFilterExpressionData;\n\n  // extract strings with associated field id surrounded by quotes\n  private associationExpressionRegExp = new RegExp(\n    \"(')(\\\\$\\\\{\" + RX_EXPRESSION_EVALUATOR.associatedFieldIdPrefixPattern + \"\\\\d+\\\\})(')\",\n    'g'\n  );\n\n  private rxOperatorCounter: number;\n  private rxViewExpressionCounter: number;\n  private rxStringExpressionCounter: number;\n  private rxAssociationFilterExpressionCounter: number;\n\n  constructor(\n    private rxDefaultExpressionEvaluatorService: RxDefaultExpressionEvaluatorService,\n    private rxExpressionHelper: RxExpressionHelperService,\n    private rxStringService: RxStringService,\n    private rxRecordInstanceUtilsService: RxRecordInstanceUtilsService\n  ) {}\n\n  evaluate(expression: string, data: object): string {\n    this.rxOperatorCounter = 0;\n    this.rxViewExpressionCounter = 0;\n    this.rxStringExpressionCounter = 0;\n    this.rxAssociationFilterExpressionCounter = 0;\n\n    let evaluatedExpression = null;\n\n    if (!this.rxStringService.isEmptySafe(expression)) {\n      // Replace strings in double quotes with RX_STRING_EXPRESSION token, e.g.\n      // \"text ${view.foo}\" = ${view.bar}\"text \"\"text in quotes\"\" text\" ->\n      // RX_EXPRESSION_STRING = ${view.bar}RX_EXPRESSION_STRING\n      this.rxStringsExpressionData = this.rxExpressionHelper.extractTokens(\n        this.stringMatchingRegExp,\n        ExpressionParserToken.RxStringExpression,\n        expression\n      );\n\n      // Replace RX association filter expressions with RX_ASSOCIATION_FILTER_EXPRESSION token, e.g.\n      // '7' = '${recordContext._associations...}' -> '7' = RX_ASSOCIATION_FILTER_EXPRESSION\n      this.arRecordAssociationFilterExpressionData = this.rxExpressionHelper.extractTokens(\n        this.associationExpressionRegExp,\n        'RX_ASSOCIATION_FILTER_EXPRESSION',\n        this.rxStringsExpressionData.expression\n      );\n\n      // Replace RX view expressions with RX_VIEW_EXPRESSION token, e.g\n      // ${view.foo} = ${view.bar} -> RX_VIEW_EXPRESSION = RX_VIEW_EXPRESSION\n      this.rxExpressionsData = this.rxExpressionHelper.extractTokens(\n        this.viewRegExp,\n        'RX_VIEW_EXPRESSION',\n        this.arRecordAssociationFilterExpressionData.expression\n      );\n\n      // Prepare operators, e.g\n      // RX_VIEW_EXPRESSION = NOTRX_VIEW_EXPRESSION -> RX_VIEW_EXPRESSION = !RX_VIEW_EXPRESSION\n      this.rxExpressionHelper.prepareOperators(this.rxExpressionsData.expression);\n\n      const rxOperatorsData = this.rxExpressionHelper.extractTokens(\n        /(\\s+(AND|OR)\\s+)|(\\s*(\\(|\\))\\s*)/g,\n        ExpressionParserToken.RxOperator,\n        this.rxExpressionsData.expression\n      );\n\n      evaluatedExpression = map(rxOperatorsData.expression.split(ExpressionParserToken.RxOperator), (operand) => {\n        const likeExpressionMatch = /(.*)\\s+LIKE\\s+(.*)/g.exec(operand);\n\n        // does operand use the LIKE operator?\n        if (likeExpressionMatch) {\n          const leftOperandValue = this.evaluateOperand(likeExpressionMatch[1], data),\n            rightOperandValue = `\"${this.evaluateOperand(likeExpressionMatch[2], data, true)}\"`;\n\n          return `${leftOperandValue} LIKE ${rightOperandValue}`;\n        } else {\n          return this.evaluateOperand(operand, data);\n        }\n      })\n        .join(ExpressionParserToken.RxOperator)\n        .replace(\n          new RegExp(`${ExpressionParserToken.RxOperator}`, 'g'),\n          () => rxOperatorsData.matches[this.rxOperatorCounter++]\n        );\n    }\n\n    return evaluatedExpression;\n  }\n\n  // Evaluate operand by replacing expression tokens with evaluated values.\n  // e.g\n  // RX_EXPRESSION = RX_EXPRESSION_STRING ->\n  // \"${view.foo}\" = \"text ${view.bar}\" ->\n  // \"Foo\" LIKE \"text Bar\"\n  // or\n  // RX_ASSOCIATION_FILTER_EXPRESSION LIKE %RX_STRING_EXPRESSION% ->\n  // '${recordContext.associations...}' LIKE %\"some ${view.textFieldValue}\"% ->\n  // ${recordContext.associations...} LIKE \"%some text \"\" with \\% escaped \\_ wildcards%\"\n  private evaluateOperand(operand: string, data: object, isLikeOperand: boolean = false): string {\n    return reduce(\n      [\n        this.evaluateRxViewExpressions.bind(this),\n        this.evaluateRxStringExpressions.bind(this),\n        this.prepareRxAssociationFilterExpressions.bind(this)\n      ],\n      (expression, evaluator) => evaluator(expression, data, isLikeOperand),\n      operand\n    );\n  }\n\n  private evaluateRxViewExpressions(operand: string, data: object, isLikeOperand: boolean = false): string {\n    return operand.replace(/RX_VIEW_EXPRESSION/g, () => {\n      return this.rxExpressionsData.matches[this.rxViewExpressionCounter++].replace(\n        this.viewRegExp,\n        (match, submatch) => {\n          let value = result(data, submatch);\n\n          if (isUndefined(value)) {\n            return RX_EXPRESSION_EVALUATOR.operands.undefined;\n          } else if (isNull(value) || value === '') {\n            return isLikeOperand ? '' : RX_EXPRESSION_EVALUATOR.operands.null;\n          } else if (isString(value)) {\n            value = isLikeOperand\n              ? this.rxRecordInstanceUtilsService.escapeTextWildcards(value)\n              : value.replace(/\"/g, '\"\"');\n          }\n\n          return isLikeOperand ? value : `\"${value}\"`;\n        }\n      );\n    });\n  }\n\n  private evaluateRxStringExpressions(operand: string, data: object, isLikeOperand: boolean = false): string {\n    return operand.replace(new RegExp(`${ExpressionParserToken.RxStringExpression}`, 'g'), () => {\n      let stringExpression = this.rxStringsExpressionData.matches[this.rxStringExpressionCounter++];\n\n      if (isLikeOperand) {\n        stringExpression = stringExpression.replace(this.stringMatchingRegExp, '$1');\n      }\n\n      stringExpression = stringExpression.replace(this.viewRegExp, (match, submatch) => {\n        const value = result(data, submatch);\n\n        if (isNil(value)) {\n          return '';\n        } else if (isLikeOperand && isString(value)) {\n          return this.rxRecordInstanceUtilsService.escapeTextWildcards(value);\n        }\n\n        return value;\n      });\n\n      if (isEmpty(stringExpression) && !isLikeOperand) {\n        stringExpression = RX_EXPRESSION_EVALUATOR.operands.null;\n      }\n\n      return stringExpression;\n    });\n  }\n\n  private prepareRxAssociationFilterExpressions(operand: string): string {\n    return operand.replace(/RX_ASSOCIATION_FILTER_EXPRESSION/g, () =>\n      this.arRecordAssociationFilterExpressionData.matches[this.rxAssociationFilterExpressionCounter++].replace(\n        this.associationExpressionRegExp,\n        (match, firstQuote, associationExpression, lastQuote) => associationExpression\n      )\n    );\n  }\n}\n","import { IPlainObject } from '@helix/platform/shared/api';\n\nexport const RX_LEGACY_ICONS: IPlainObject = {\n  add: 'plus',\n  addCircle: 'plus_circle',\n  back: 'undo',\n  copy: 'files_copy_o',\n  delete: 'cross',\n  deleteCircle: 'cross_circle',\n  edit: 'pencil',\n  exclamationCircle: 'exclamation_circle',\n  exclamationTriangle: 'exclamation_triangle',\n  help: 'question_circle',\n  preview: 'layout_preview',\n  mail: 'envelope',\n  print: 'printer',\n  thumbsDown: 'thumbs_down',\n  thumbsUp: 'thumbs_up'\n};\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport {\n  IBundleDescriptor,\n  RX_APPLICATION,\n  RxBundleCacheService,\n  RxGlobalCacheService,\n  RxLogService\n} from '@helix/platform/shared/api';\nimport { RxStringService } from '@helix/platform/utils';\nimport { isEmpty, some } from 'lodash';\nimport { defer, from, Observable, of } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { IViewComponentDescriptor } from './view-component-descriptor.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewComponentRegistryService {\n  // contains all registered component descriptors\n  private componentDescriptors: Map<string, IViewComponentDescriptor> = new Map();\n  private asyncComponentDescriptors: Promise<IViewComponentDescriptor>[] = [];\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxStringService: RxStringService,\n    private rxLogService: RxLogService\n  ) {}\n\n  private ownerBundleIds$ = this.rxGlobalCacheService.getBundleDescriptors().pipe(\n    map((bundleDescriptors) =>\n      bundleDescriptors.reduce((ownerBundleIds, bundleDescriptor) => {\n        bundleDescriptor.uiOptions.viewComponents?.forEach((viewComponentName: string) => {\n          ownerBundleIds[viewComponentName] = bundleDescriptor.id;\n        });\n\n        return ownerBundleIds;\n      }, {})\n    ),\n    shareReplay(1)\n  );\n\n  resolveAsyncDescriptors(): Observable<Map<string, IViewComponentDescriptor>> {\n    if (this.asyncComponentDescriptors.length) {\n      this.rxLogService.debug(`Resolving ${this.asyncComponentDescriptors.length} view component descriptor(s)...`);\n\n      return defer(() =>\n        from(\n          Promise.all(this.asyncComponentDescriptors).then((descriptors) => {\n            descriptors.forEach((descriptor) => {\n              this.registerSync(descriptor);\n            });\n\n            this.rxLogService.debug(\n              `Resolved ${descriptors.length} view component descriptors: ${descriptors\n                .map((desc) => desc.type)\n                .join(', ')}.`\n            );\n\n            return this.componentDescriptors;\n          })\n        )\n      );\n    } else {\n      return of(this.componentDescriptors);\n    }\n  }\n\n  getRegisteredComponents(): Map<string, IViewComponentDescriptor> {\n    return this.componentDescriptors;\n  }\n\n  get(type: string): IViewComponentDescriptor {\n    return this.componentDescriptors.get(type);\n  }\n\n  register(...componentDescriptors: IViewComponentDescriptor[] | Promise<IViewComponentDescriptor>[]): void {\n    componentDescriptors.forEach((descriptor) => {\n      this.asyncComponentDescriptors.push(Promise.resolve(descriptor));\n    });\n  }\n\n  registerSync(descriptor: IViewComponentDescriptor): void {\n    if (descriptor.aliases?.includes(descriptor.type)) {\n      this.rxLogService.warning(\n        `Component ${descriptor.type} should not have its type listed in descriptor's aliases property.`\n      );\n\n      descriptor.aliases = descriptor.aliases.filter((type) => type !== descriptor.type);\n    }\n\n    this.componentDescriptors.set(descriptor.type, descriptor);\n\n    descriptor.aliases?.forEach((type) => {\n      this.componentDescriptors.set(type, descriptor);\n    });\n  }\n\n  isDataComponentDescriptor(componentDescriptor: IViewComponentDescriptor): boolean {\n    return Boolean(componentDescriptor.isDataComponent);\n  }\n\n  getBundlePageComponents(bundleId: string, includeAliases = false): IViewComponentDescriptor[] {\n    return this.getDescriptors(includeAliases).filter((componentDescriptor: IViewComponentDescriptor) =>\n      componentDescriptor.isPageComponent && isEmpty(componentDescriptor.availableInBundles)\n        ? componentDescriptor.bundleId === bundleId\n        : this.rxStringService.isIncluded(bundleId, componentDescriptor.availableInBundles)\n    ) as IViewComponentDescriptor[];\n  }\n\n  getLicensedComponents(includeAliases = false): Observable<IViewComponentDescriptor[]> {\n    return this.rxGlobalCacheService\n      .getLicensedBundleDescriptors()\n      .pipe(\n        map((bundleDescriptors) =>\n          this.getDescriptors(includeAliases).filter(\n            (componentDescriptor) =>\n              this.isBundleLicensed(componentDescriptor.bundleId, bundleDescriptors) &&\n              this.isComponentAvailableInCurrentBundle(componentDescriptor)\n          )\n        )\n      );\n  }\n\n  getComponentOwnerBundleId(viewComponentType: string): Observable<string> {\n    return this.ownerBundleIds$.pipe(map((ownerBundleIds) => ownerBundleIds[viewComponentType]));\n  }\n\n  private isBundleLicensed(bundleId: string, bundleDescriptors: IBundleDescriptor[]): boolean {\n    return bundleId === RX_APPLICATION.platformBundleId || some(bundleDescriptors, { id: bundleId });\n  }\n\n  private isComponentAvailableInCurrentBundle(componentDescriptor: IViewComponentDescriptor): boolean {\n    return (\n      isEmpty(componentDescriptor.availableInBundles) ||\n      this.rxStringService.isIncluded(this.rxBundleCacheService.bundleId, componentDescriptor.availableInBundles)\n    );\n  }\n\n  private getDescriptors(includeAliases = false): IViewComponentDescriptor[] {\n    return [...this.componentDescriptors.entries()].reduce((result, [type, descriptor]) => {\n      if (includeAliases || !descriptor.aliases?.includes(type)) {\n        result.push(descriptor);\n      }\n\n      return result;\n    }, []);\n  }\n}\n","export enum ViewDefinitionType {\n  Regular = 'REGULAR',\n  Shell = 'SHELL'\n}\n","import { ViewDefinitionType } from './view-definition-type.enum';\n\nexport const RX_VIEW_DEFINITION = {\n  types: {\n    regular: ViewDefinitionType.Regular,\n    shell: ViewDefinitionType.Shell\n  },\n\n  resourceTypes: {\n    viewComponent: 'com.bmc.arsys.rx.services.view.domain.ViewComponentDefinition',\n    containerViewComponent: 'com.bmc.arsys.rx.services.view.domain.ContainerViewComponentDefinition'\n  },\n\n  defaultOutletName: 'DEFAULT',\n\n  unknownPageComponent: {\n    name: 'Unknown Component'\n  },\n\n  defaultLayoutTemplateId: 5,\n\n  styles: [\n    { id: 'rx-no-margin', name: 'No Margin' },\n    { id: 'rx-default-border', name: '1px Border' },\n    { id: 'rx-white-background', name: 'White Background' }\n  ]\n};\n","import { TypeDecorator, ɵmakeDecorator as makeDecorator } from '@angular/core';\n\nexport enum RxViewComponentType {\n  ButtonBar = 'rx-button-bar',\n  RecordEditor = 'rx-record-editor',\n  ActionButton = 'rx-action-button',\n  Action = 'rx-action',\n  Page = 'rx-page',\n  ExtensionContainer = 'rx-extension-container',\n  Container = 'rx-container',\n  RichText = 'rx-rich-text',\n  TabPanel = 'rx-tab-panel',\n  TabContainer = 'rx-tab-container',\n  Image = 'rx-image',\n  ServiceList = 'rx-service-list',\n  Unknown = 'rx-unknown',\n\n  Association = 'rx-association',\n  AssociatedRecordField = 'rx-associated-record-field',\n  DateTime = 'rx-date-time-field',\n  Selection = 'rx-selection-field',\n  Date = 'rx-date-field',\n  Time = 'rx-time-field',\n  Integer = 'rx-integer-field',\n  Floating = 'rx-floating-field',\n  Decimal = 'rx-decimal-field',\n  Boolean = 'rx-boolean-field',\n  Attachment = 'rx-attachment-field',\n  Character = 'rx-character-field',\n  LocalizedCharacter = 'rx-localized-character-field',\n  Textarea = 'rx-textarea-field',\n  SelectGroup = 'rx-select-group',\n  SelectGroupField = 'rx-select-group-field',\n  RichTextarea = 'rx-rich-textarea-field',\n  ViewPresetSelector = 'rx-view-preset-selector',\n  ViewPreset = 'rx-view-preset'\n}\n\nexport enum BwfViewComponentType {\n  DynamicNamedList = 'ux-dynamic-named-list'\n}\n\nexport interface RxViewComponent {\n  name: string;\n}\n\nexport interface RxViewComponentDecorator {\n  (rxViewComponent?: RxViewComponent): TypeDecorator;\n\n  new (rxViewComponent?: RxViewComponent): RxViewComponent;\n}\n\nexport const RxViewComponent: RxViewComponentDecorator = makeDecorator('RxViewComponent');\n","import { RX_VIEW_DEFINITION } from '../domain/view-definition.constant';\n\nexport enum ViewLayoutRole {\n  Header = 'header',\n  Content = 'content',\n  Footer = 'footer'\n}\n\nexport enum LayoutTypes {\n  Flexible = 'Flexible',\n  Fixed = 'Fixed'\n}\n\nexport interface IViewLayout {\n  outlets: IViewLayoutOutlet[];\n}\n\nexport interface IViewLayoutOutlet {\n  name: string;\n  static?: boolean;\n  role?: ViewLayoutRole;\n  height?: number;\n  columns: IViewLayoutOutletColumn[];\n}\n\nexport interface IViewLayoutOutletColumn {\n  children: string[];\n  cssClass?: string;\n  span?: number;\n}\n\nexport interface IViewLayoutTemplate {\n  id: number;\n  label: string;\n  checksum: string;\n  layout: IViewLayout;\n  layoutType: LayoutTypes;\n}\n\nconst defaultHeaderOutlet = {\n  name: ViewLayoutRole.Header,\n  height: 60,\n  columns: [getEmptyColumn()]\n};\n\nconst defaultFooterOutlet = {\n  name: ViewLayoutRole.Footer,\n  height: 60,\n  columns: [getEmptyColumn()]\n};\n\nexport const RX_VIEW_LAYOUTS: IViewLayoutTemplate[] = [\n  {\n    id: 1,\n    label: 'Header and 1 Column',\n    layout: {\n      outlets: [defaultHeaderOutlet, getContentOutlet()]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 2,\n    label: 'Header and 2 Columns (50/50)',\n    layout: {\n      outlets: [defaultHeaderOutlet, getContentOutlet(6, 6)]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 3,\n    label: 'Header and 2 Columns (60/40)',\n    layout: {\n      outlets: [defaultHeaderOutlet, getContentOutlet(7, 5)]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 4,\n    label: 'Header and 2 Columns (40/60)',\n    layout: {\n      outlets: [defaultHeaderOutlet, getContentOutlet(5, 7)]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 16,\n    label: 'Header and 2 Columns (70/30)',\n    layout: {\n      outlets: [defaultHeaderOutlet, getContentOutlet(8, 4)]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 5,\n    label: 'Container',\n    layout: {\n      outlets: [getContentOutlet()]\n    },\n    layoutType: LayoutTypes.Flexible\n  },\n  {\n    id: 6,\n    label: '2 Columns (50/50)',\n    layout: {\n      outlets: [getContentOutlet(6, 6)]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 7,\n    label: '2 Columns (60/40)',\n    layout: {\n      outlets: [getContentOutlet(7, 5)]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 8,\n    label: '2 Columns (40/60)',\n    layout: {\n      outlets: [getContentOutlet(5, 7)]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 14,\n    label: '2 Columns (70/30)',\n    layout: {\n      outlets: [getContentOutlet(8, 4)]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 9,\n    label: '3 Equal Columns',\n    layout: {\n      outlets: [getContentOutlet(4, 4, 4)]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 10,\n    label: 'Header, Footer and 1 Column',\n    layout: {\n      outlets: [defaultHeaderOutlet, getContentOutlet(), defaultFooterOutlet]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 11,\n    label: 'Header, Footer and 2 Columns (50/50)',\n    layout: {\n      outlets: [defaultHeaderOutlet, getContentOutlet(6, 6), defaultFooterOutlet]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 12,\n    label: 'Header, Footer and 2 Columns (60/40)',\n    layout: {\n      outlets: [defaultHeaderOutlet, getContentOutlet(7, 5), defaultFooterOutlet]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 13,\n    label: 'Header, Footer and 2 Columns (40/60)',\n    layout: {\n      outlets: [defaultHeaderOutlet, getContentOutlet(5, 7), defaultFooterOutlet]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 15,\n    label: 'Header, Footer and 2 Columns (70/30)',\n    layout: {\n      outlets: [defaultHeaderOutlet, getContentOutlet(8, 4), defaultFooterOutlet]\n    },\n    layoutType: LayoutTypes.Fixed\n  }\n].map((layout: IViewLayoutTemplate) => {\n  layout.checksum = getLayoutChecksum(layout.layout);\n\n  return layout;\n});\n\nexport function getLayoutChecksum(layout: IViewLayout): string {\n  const contentOutlet = layout.outlets.find((outlet) => outlet.name === RX_VIEW_DEFINITION.defaultOutletName);\n  let checksum = layout.outlets.find((outlet) => outlet.name === ViewLayoutRole.Header) ? 'h' : '';\n\n  checksum += layout.outlets.find((outlet) => outlet.name === ViewLayoutRole.Footer) ? 'f' : '';\n  contentOutlet.columns.forEach((column) => (checksum += `c${column.span || 12}`));\n\n  return checksum;\n}\n\nfunction getContentOutlet(...columnSpan: number[]): IViewLayoutOutlet {\n  return {\n    name: RX_VIEW_DEFINITION.defaultOutletName,\n    columns: columnSpan.length ? columnSpan.map((span) => getEmptyColumn({ span })) : [getEmptyColumn()]\n  };\n}\n\nfunction getEmptyColumn(props?: Partial<IViewLayoutOutletColumn>): IViewLayoutOutletColumn {\n  return {\n    children: [],\n    ...props\n  };\n}\n","import { RX_VIEW_DEFINITION } from '../domain/view-definition.constant';\nimport { reduce } from 'lodash';\nimport { getLayoutChecksum, IViewLayout, IViewLayoutOutlet, RX_VIEW_LAYOUTS } from './view-layout.types';\n\n// @dynamic\nexport class RxViewLayout {\n  static getViewLayoutForDefaultOutlet(children?: string[]): IViewLayout {\n    return {\n      outlets: [this.getOutlet(RX_VIEW_DEFINITION.defaultOutletName, children)]\n    };\n  }\n\n  static getEmptyViewLayoutForOutletNames(list: { name: string }[]): IViewLayout {\n    return {\n      outlets: list.map(({ name }) => this.getOutlet(name))\n    };\n  }\n\n  static getEmptyViewLayoutForOutlets(outlets: IViewLayoutOutlet[]): IViewLayout {\n    return {\n      outlets: outlets.map((outlet) => {\n        return {\n          ...outlet,\n          columns: outlet.columns.map((column) => ({ ...column, children: [] }))\n        };\n      })\n    };\n  }\n\n  static getOutlet(name = RX_VIEW_DEFINITION.defaultOutletName, children: string[] = []): IViewLayoutOutlet {\n    return {\n      name,\n      columns: [\n        {\n          children\n        }\n      ]\n    };\n  }\n\n  static getViewLayoutChildGuids(layout: IViewLayout, outletName?: string): string[] {\n    return reduce(\n      layout.outlets,\n      (guids, outlet) => {\n        if (!outletName || outletName === outlet.name) {\n          outlet.columns.forEach((column) => {\n            guids.push(...column.children);\n          });\n        }\n\n        return guids;\n      },\n      []\n    );\n  }\n\n  static hasChild(layout: IViewLayout, guid: string): boolean {\n    return Boolean(layout.outlets.find((outlet) => this.outletHasChild(outlet, guid)));\n  }\n\n  static outletHasChild(outlet: IViewLayoutOutlet, guid: string): boolean {\n    return Boolean(outlet.columns.find((column) => column.children.includes(guid)));\n  }\n\n  static getViewLayoutTemplate(layoutTemplate: number): IViewLayout {\n    const layoutItem =\n      RX_VIEW_LAYOUTS.find((item) => item.id === layoutTemplate) ||\n      RX_VIEW_LAYOUTS.find((item) => item.id === RX_VIEW_DEFINITION.defaultLayoutTemplateId);\n\n    return layoutItem.layout;\n  }\n\n  static getLayoutName(layout: IViewLayout): string {\n    const checksum = getLayoutChecksum(layout);\n    const layoutTemplate = RX_VIEW_LAYOUTS.find((item) => item.checksum === checksum);\n\n    return layoutTemplate ? layoutTemplate.label : '';\n  }\n\n  static removeChildFromLayout(layout: IViewLayout, guidToRemove: string): IViewLayout {\n    return {\n      outlets: layout.outlets.map((outlet) => ({\n        ...outlet,\n        columns: outlet.columns.map((column) => ({\n          ...column,\n          children: column.children.filter((childGuid) => childGuid !== guidToRemove)\n        }))\n      }))\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IViewDefinition } from '../domain/view-definition.interface';\nimport { IViewComponentDefinitionWithParent } from '../domain/view-component-definition-with-parent.interface';\nimport {\n  AnyViewComponentDefinition,\n  IContainerViewComponentDefinition,\n  IViewComponentDefinition\n} from '../domain/view-component-definition.types';\nimport { find } from 'lodash';\nimport { RxTreeService } from '@helix/platform/utils';\nimport { RxPredicate } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDefinitionParserService {\n  constructor(private rxTreeService: RxTreeService) {}\n\n  getComponents(\n    definition: IContainerViewComponentDefinition | IViewDefinition,\n    skipInitial = false\n  ): IViewComponentDefinitionWithParent[] {\n    const components: IViewComponentDefinitionWithParent[] = [];\n\n    if (!skipInitial) {\n      components.push({\n        componentDefinition: definition,\n        parentComponentDefinition: null\n      } as IViewComponentDefinitionWithParent);\n    }\n\n    this.processComponents(definition.componentDefinitions, components, definition);\n\n    return components;\n  }\n\n  private processComponents(\n    componentDefinitions: Array<IViewComponentDefinition | IContainerViewComponentDefinition>,\n    components: IViewComponentDefinitionWithParent[],\n    parentComponentDefinition: IContainerViewComponentDefinition | IViewDefinition\n  ) {\n    componentDefinitions.forEach((componentDefinition) => {\n      components.push({ componentDefinition, parentComponentDefinition } as IViewComponentDefinitionWithParent);\n\n      if (this.isContainerViewComponentDefinition(componentDefinition)) {\n        this.processComponents(componentDefinition.componentDefinitions, components, componentDefinition);\n      }\n    });\n  }\n\n  private isContainerViewComponentDefinition(\n    componentDefinition: IViewComponentDefinition | IContainerViewComponentDefinition\n  ): componentDefinition is IContainerViewComponentDefinition {\n    return (componentDefinition as IContainerViewComponentDefinition).componentDefinitions !== undefined;\n  }\n\n  findParentComponentDefinition(\n    viewDefinition: IViewDefinition,\n    childComponentDefinition: Partial<AnyViewComponentDefinition>,\n    predicate: (definition: AnyViewComponentDefinition) => boolean\n  ): IContainerViewComponentDefinition {\n    const componentDefinitionsWithParent = this.getComponents(viewDefinition);\n    let parentComponentDefinition;\n\n    let childComponentDefinitionWithParent = componentDefinitionsWithParent.find(\n      (pair) => pair.componentDefinition.guid === childComponentDefinition.guid\n    );\n\n    while (childComponentDefinitionWithParent && !parentComponentDefinition) {\n      if (predicate(childComponentDefinitionWithParent.componentDefinition)) {\n        parentComponentDefinition = childComponentDefinitionWithParent.componentDefinition;\n      } else {\n        childComponentDefinitionWithParent = componentDefinitionsWithParent.find(\n          (pair) => pair.componentDefinition.guid === childComponentDefinitionWithParent.parentComponentDefinition.guid\n        );\n      }\n    }\n\n    return parentComponentDefinition;\n  }\n\n  findViewComponent(\n    viewComponentContainer: IContainerViewComponentDefinition | IViewDefinition,\n    predicate: RxPredicate\n  ): IViewComponentDefinition {\n    return find(this.rxTreeService.flattenTree(viewComponentContainer, 'componentDefinitions'), predicate);\n  }\n}\n","import { IViewActionDescriptor, IViewActionDesignManager } from './view-action.interfaces';\nimport { Injectable } from '@angular/core';\nimport {\n  IBundleDescriptor,\n  RX_APPLICATION,\n  RxBundleCacheService,\n  RxGlobalCacheService\n} from '@helix/platform/shared/api';\nimport { isEmpty, some } from 'lodash';\nimport { RxStringService } from '@helix/platform/utils';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { ViewComponentPropertyType } from '../registries/view-component-descriptor.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewActionRegistryService {\n  constructor(\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxStringService: RxStringService,\n    private rxBundleCacheService: RxBundleCacheService\n  ) {}\n\n  private viewActionDescriptors: Map<string, IViewActionDescriptor> = new Map();\n  private designManagers: Map<string, IViewActionDesignManager> = new Map();\n\n  private ownerBundleIds$ = this.rxGlobalCacheService.getBundleDescriptors().pipe(\n    map((bundleDescriptors) =>\n      bundleDescriptors.reduce((ownerBundleIds, bundleDescriptor) => {\n        bundleDescriptor.uiOptions.viewActions?.forEach((viewActionName: string) => {\n          ownerBundleIds[viewActionName] = bundleDescriptor.id;\n        });\n\n        return ownerBundleIds;\n      }, {})\n    ),\n    shareReplay(1)\n  );\n\n  register(viewActionDescriptor: IViewActionDescriptor) {\n    if (!viewActionDescriptor.label) {\n      viewActionDescriptor.label = viewActionDescriptor.name;\n    }\n\n    viewActionDescriptor.parameters = viewActionDescriptor.parameters || [];\n\n    viewActionDescriptor.parameters.push({\n      name: '$condition$',\n      enableExpressionEvaluation: true\n    });\n\n    viewActionDescriptor.parameters.push({\n      name: 'index',\n      designType: ViewComponentPropertyType.Number\n    });\n\n    this.viewActionDescriptors.set(viewActionDescriptor.name, viewActionDescriptor);\n  }\n\n  get(actionName: string): IViewActionDescriptor {\n    return this.viewActionDescriptors.get(actionName);\n  }\n\n  getRegisteredActions(): Map<string, IViewActionDescriptor> {\n    return this.viewActionDescriptors;\n  }\n\n  getLicensedActions(): Observable<IViewActionDescriptor[]> {\n    return this.rxGlobalCacheService.getLicensedBundleDescriptors().pipe(\n      map((bundleDescriptors) => {\n        return Array.from(this.viewActionDescriptors.values()).filter((actionDescriptor) => {\n          return (\n            this.isBundleLicensed(actionDescriptor.bundleId, bundleDescriptors) &&\n            this.isActionAvailableInCurrentBundle(actionDescriptor)\n          );\n        });\n      })\n    );\n  }\n\n  getActionOwnerBundleId(viewActionName: string): Observable<string> {\n    return this.ownerBundleIds$.pipe(map((ownerBundleIds) => ownerBundleIds[viewActionName]));\n  }\n\n  private isBundleLicensed(bundleId: string, bundleDescriptors: IBundleDescriptor[]): boolean {\n    return bundleId === RX_APPLICATION.platformBundleId || some(bundleDescriptors, { id: bundleId });\n  }\n\n  private isActionAvailableInCurrentBundle(actionDescriptor: IViewActionDescriptor): boolean {\n    return (\n      isEmpty(actionDescriptor.availableInBundles) ||\n      this.rxStringService.isIncluded(this.rxBundleCacheService.bundleId, actionDescriptor.availableInBundles)\n    );\n  }\n\n  registerUnknownAction(unknownActionName: string): IViewActionDescriptor {\n    let unknownActionDescriptor = this.get(unknownActionName);\n\n    if (!unknownActionDescriptor) {\n      unknownActionDescriptor = {\n        ...this.get('rxUnknownViewAction'),\n        name: unknownActionName\n      };\n\n      this.register(unknownActionDescriptor);\n    }\n\n    return unknownActionDescriptor;\n  }\n\n  registerDesignManager(actionName: string, designManagerService: IViewActionDesignManager): void {\n    this.designManagers.set(actionName, designManagerService);\n  }\n\n  getDesignManager(actionName: string): IViewActionDesignManager {\n    return this.designManagers.get(actionName) ?? this.viewActionDescriptors.get(actionName)?.designManager;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  IComponentPropertyNameToStringGuid,\n  IViewDefinition,\n  IViewLocalizableStrings\n} from '../domain/view-definition.interface';\nimport { RxViewDefinitionParserService } from './view-definition-parser.service';\nimport { RxViewComponentRegistryService } from '../registries/view-component-registry.service';\nimport { IViewComponentDescriptor } from '../registries/view-component-descriptor.types.js';\nimport { RxViewActionRegistryService } from '../view-action/view-action-registry.service';\nimport { IViewActionDescriptor } from '../view-action/view-action.interfaces';\nimport { RxGuidService, RxTreeService } from '@helix/platform/utils';\nimport { forEach, isEmpty, set, transform } from 'lodash';\nimport {\n  AnyViewComponentDefinition,\n  IContainerViewComponentDefinition,\n  IViewComponentDefinition\n} from '../domain/view-component-definition.types';\nimport { RxViewComponentType } from '../domain/view-component.types';\nimport { IPlainObject } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDefinitionLocalizationService {\n  constructor(\n    private rxViewDefinitionParserService: RxViewDefinitionParserService,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private rxViewActionRegistryService: RxViewActionRegistryService,\n    private rxGuidService: RxGuidService,\n    private rxTreeService: RxTreeService\n  ) {}\n\n  applyLocalization(viewDefinition: IViewDefinition): IViewDefinition {\n    const componentDefinitions = this.rxTreeService.flatten(viewDefinition, 'componentDefinitions');\n\n    const localizableStringGuidsByComponentGuid: IComponentPropertyNameToStringGuid = {};\n\n    // converting Select Group localization for AngularJS views\n    // todo can be removed after dropping support of AngularJS version\n    this.convertOldSelectGroupLocalization(viewDefinition, componentDefinitions);\n\n    componentDefinitions.forEach((componentDefinition) => {\n      const localizableStrings = viewDefinition.localizableStringsByComponentId[componentDefinition.guid];\n\n      const propertyNameToStringGuidMap = this.applyComponentDefinitionLocalization(\n        componentDefinition,\n        localizableStrings\n      );\n\n      if (!isEmpty(propertyNameToStringGuidMap)) {\n        localizableStringGuidsByComponentGuid[componentDefinition.guid] = propertyNameToStringGuidMap;\n      }\n    });\n\n    viewDefinition.localizablePropertyToStringGuidMap = localizableStringGuidsByComponentGuid;\n\n    return viewDefinition;\n  }\n\n  extractLocalizableStrings(viewDefinition: IViewDefinition): IViewLocalizableStrings {\n    const localizableStrings: IViewLocalizableStrings = {};\n    const localizablePropertyToStringGuidMap = viewDefinition.localizablePropertyToStringGuidMap || {};\n\n    this.rxViewDefinitionParserService\n      .getComponents(viewDefinition, true)\n      .map((item) => item.componentDefinition)\n      .filter((component) => component.type && component.type !== RxViewComponentType.Page)\n      .forEach((component: AnyViewComponentDefinition) => {\n        const componentDescriptor = this.rxViewComponentRegistryService.get(component.type);\n        const propertyNameToStringGuidMap = localizablePropertyToStringGuidMap[component.guid] || {};\n        const componentStrings = {};\n        let localizablePropertyNames;\n\n        if (componentDescriptor.type === RxViewComponentType.Action) {\n          const actionDescriptor = this.rxViewActionRegistryService.get(component.propertiesByName.name);\n\n          localizablePropertyNames = this.getLocalizableActionParameterNames(actionDescriptor);\n        } else {\n          localizablePropertyNames = this.getLocalizableComponentPropertyNames(componentDescriptor);\n        }\n\n        localizablePropertyNames.forEach((localizablePropertyName) => {\n          if (component.propertiesByName[localizablePropertyName]) {\n            const stringGuid = propertyNameToStringGuidMap[localizablePropertyName] || this.rxGuidService.generate();\n\n            componentStrings[stringGuid] = component.propertiesByName[localizablePropertyName];\n            component.propertiesByName[localizablePropertyName] = stringGuid;\n          }\n        });\n\n        if (!isEmpty(componentStrings)) {\n          localizableStrings[component.guid] = componentStrings;\n        }\n      });\n\n    return localizableStrings;\n  }\n\n  private applyComponentDefinitionLocalization(\n    componentDefinition: IViewComponentDefinition,\n    localizableStrings = {}\n  ): IPlainObject {\n    return transform(\n      componentDefinition.propertiesByName,\n      (result, propertyValue: string, propertyName: string) => {\n        if (localizableStrings[propertyValue]) {\n          componentDefinition.propertiesByName[propertyName] = localizableStrings[propertyValue];\n          result[propertyName] = propertyValue;\n        }\n      },\n      {}\n    );\n  }\n\n  private getLocalizableActionParameterNames(actionDescriptor: IViewActionDescriptor): string[] {\n    return (actionDescriptor.parameters || []).reduce<string[]>((parameterNames, parameter) => {\n      if (parameter.localizable) {\n        parameterNames.push(parameter.name);\n      } else if (parameter.attributes) {\n        forEach(parameter.attributes, (attribute) => {\n          if (attribute.localizable) {\n            parameterNames.push(`${parameter.name}.${attribute.name}`);\n          }\n        });\n      }\n\n      return parameterNames;\n    }, []);\n  }\n\n  private getLocalizableComponentPropertyNames(componentDescriptor: IViewComponentDescriptor): string[] {\n    return (componentDescriptor.properties || []).filter((prop) => prop.localizable).map((prop) => prop.name);\n  }\n\n  // this method used to move SelectGroupField localization from SelectGroup localization object\n  // to own one in same way as this done for any other component.\n  // Method should handle only AngularJS views that has legacy labelId property in SelectGroupField\n  private convertOldSelectGroupLocalization(\n    viewDefinition: IViewDefinition,\n    componentDefinitions: AnyViewComponentDefinition[]\n  ) {\n    componentDefinitions\n      .filter((component) => component.type === RxViewComponentType.SelectGroup)\n      .forEach((selectGroup: IContainerViewComponentDefinition) => {\n        selectGroup.componentDefinitions.forEach((selectGroupField) => {\n          if (selectGroupField.propertiesByName.labelId) {\n            const oldStringGuid: string = selectGroupField.propertiesByName.labelId;\n            const newStringGuid: string = this.rxGuidService.generate();\n\n            const localizedLabel: string =\n              viewDefinition.localizableStringsByComponentId[selectGroup.guid][oldStringGuid];\n\n            // setting localized string guid same way as for other components\n            selectGroupField.propertiesByName.label = newStringGuid;\n\n            // moving localization from SelectGroup to SelectGroupField object with new guid\n            // to avoid unexpected server behaviour\n            set(viewDefinition.localizableStringsByComponentId, [selectGroupField.guid, newStringGuid], localizedLabel);\n\n            // removing legacy labelId\n            delete selectGroupField.propertiesByName.labelId;\n\n            // removing string from select group localization object\n            delete viewDefinition.localizableStringsByComponentId[selectGroup.guid][oldStringGuid];\n          }\n        });\n\n        // removing select group localization object if empty\n        if (isEmpty(viewDefinition.localizableStringsByComponentId[selectGroup.guid])) {\n          delete viewDefinition.localizableStringsByComponentId[selectGroup.guid];\n        }\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  ICommand,\n  IHttpGetParams,\n  RX_BUNDLE,\n  RxCommandFactoryService,\n  RxLocalizationService\n} from '@helix/platform/shared/api';\nimport { RxGuidService } from '@helix/platform/utils';\nimport { IViewDefinition } from '../domain/view-definition.interface';\nimport { RX_VIEW_DEFINITION } from '../domain/view-definition.constant';\nimport { RxViewDefinitionLocalizationService } from './view-definition-localization.service';\nimport { RxViewComponentType } from '../domain/view-component.types';\nimport { RxViewLayout } from '../layout/view-layout.class';\n\nexport const renameViewDefinitionCommand = 'com.bmc.arsys.rx.application.view.command.RenameViewDefinitionCommand';\nexport const revertCustomizationResourceType = 'com.bmc.arsys.rx.application.view.command.RevertViewDefinitionCommand';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDefinitionService {\n  private renameCommand: ICommand;\n  private revertCustomizationCommand: ICommand;\n\n  constructor(\n    private httpClient: HttpClient,\n    private rxGuidService: RxGuidService,\n    private rxCommandFactoryService: RxCommandFactoryService,\n    private rxViewDefinitionLocalizationService: RxViewDefinitionLocalizationService,\n    private rxLocalizationService: RxLocalizationService\n  ) {\n    this.renameCommand = rxCommandFactoryService.forResourceType(renameViewDefinitionCommand);\n    this.revertCustomizationCommand = rxCommandFactoryService.forResourceType(revertCustomizationResourceType);\n  }\n\n  get(viewDefinitionName: string, options?: IHttpGetParams): Observable<IViewDefinition> {\n    const defaultOptions = { params: { locale: this.rxLocalizationService.currentLocale } };\n\n    return this.httpClient\n      .get(this.getUrl(viewDefinitionName), {\n        ...defaultOptions,\n        ...options\n      })\n      .pipe(\n        map((viewDefinition: IViewDefinition) =>\n          this.rxViewDefinitionLocalizationService.applyLocalization(viewDefinition)\n        )\n      );\n  }\n\n  getNew(layoutTemplate: number): Observable<IViewDefinition> {\n    return of(this.getNewViewDefinition.call(this, layoutTemplate));\n  }\n\n  create(viewDefinition: IViewDefinition): Observable<HttpResponse<any>> {\n    return this.httpClient.post(this.getUrl(), viewDefinition, { responseType: 'text', observe: 'response' });\n  }\n\n  update(\n    viewDefinitionName: string,\n    viewDefinition: IViewDefinition,\n    options?: {\n      headers?:\n        | HttpHeaders\n        | {\n            [header: string]: string | string[];\n          };\n    }\n  ): Observable<any> {\n    return this.httpClient.put(this.getUrl(viewDefinitionName), viewDefinition, options);\n  }\n\n  delete(viewDefinitionName: string): Observable<any> {\n    return this.httpClient.delete(this.getUrl(viewDefinitionName));\n  }\n\n  rename(oldViewDefinitionName: string, newViewDefinitionName: string): Observable<any> {\n    return this.renameCommand.execute({\n      name: oldViewDefinitionName,\n      newName: newViewDefinitionName\n    });\n  }\n\n  isPageView(viewDefinition: IViewDefinition): boolean {\n    return (\n      viewDefinition.componentDefinitions.length === 1 &&\n      viewDefinition.componentDefinitions[0].type === RxViewComponentType.Page\n    );\n  }\n\n  revertCustomization(viewDefinitionName: string): Observable<any> {\n    return this.revertCustomizationCommand.execute({ viewDefinitionName });\n  }\n\n  private getUrl(viewDefinitionName?: string): string {\n    return viewDefinitionName\n      ? `/api/rx/application/view/viewdefinition/${encodeURIComponent(viewDefinitionName)}`\n      : '/api/rx/application/view/viewdefinition';\n  }\n\n  private getNewViewDefinition(layoutTemplate: number = RX_VIEW_DEFINITION.defaultLayoutTemplateId): IViewDefinition {\n    return {\n      guid: this.rxGuidService.generate(),\n      name: null,\n      description: null,\n      componentDefinitions: [],\n      inputParams: [],\n      outputParams: [],\n      allowOverlay: false,\n      layout: JSON.stringify(RxViewLayout.getViewLayoutTemplate(layoutTemplate)),\n      permissions: [\n        {\n          ownerId: {\n            value: 0,\n            name: 'Public',\n            type: 'GROUP'\n          },\n          type: 'VISIBLE'\n        }\n      ],\n      type: RX_VIEW_DEFINITION.types.regular,\n      scope: RX_BUNDLE.definitionScopeTypes.bundle,\n      targetViewDefinitionName: null,\n      targetExtensionContainerGuid: null,\n      styles: null\n    };\n  }\n}\n","import { DataPage } from '@helix/platform/shared/api';\nimport { Injectable, Injector } from '@angular/core';\n\nconst viewDefinitionDataPageQuery = 'com.bmc.arsys.rx.application.view.datapage.ViewDefinitionDataPageQuery';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDefinitionDataPageService extends DataPage {\n  constructor(private injector: Injector) {\n    super(injector, viewDefinitionDataPageQuery, {\n      params: {\n        excludeExtensionViews: true\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RxViewDefinitionService } from './view-definition.service';\nimport { RxViewDefinitionDataPageService } from './view-definition-data-page.service';\nimport { Observable } from 'rxjs';\nimport { IHttpGetParams } from '@helix/platform/shared/api';\nimport { IViewDefinition } from '../domain/view-definition.interface';\nimport { map, pluck, shareReplay } from 'rxjs/operators';\nimport { isEmpty } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDefinitionCacheService {\n  private viewDefinitionCache: Map<string, Observable<IViewDefinition>> = new Map();\n  private viewDefinitionNamesCache: Map<string, Observable<string[]>> = new Map();\n  private consumers = new Set<Observable<any>>();\n\n  constructor(\n    private rxViewDefinitionService: RxViewDefinitionService,\n    private viewDefinitionDataPageService: RxViewDefinitionDataPageService\n  ) {}\n\n  getViewDefinitionNames(bundleId: string): Observable<string[]> {\n    if (!this.viewDefinitionNamesCache.has(bundleId)) {\n      const viewDefinitionNames$ = this.viewDefinitionDataPageService\n        .get({\n          headers: { 'default-bundle-scope': bundleId },\n          params: { propertySelection: ['name'], viewType: 'REGULAR' }\n        })\n        .pipe(\n          pluck('data'),\n          map((viewDefinitionsNames: { name: string }[]) =>\n            viewDefinitionsNames.map((viewDefinition) => viewDefinition.name)\n          ),\n          shareReplay(1)\n        );\n\n      this.viewDefinitionNamesCache.set(bundleId, viewDefinitionNames$);\n    }\n\n    return this.viewDefinitionNamesCache.get(bundleId);\n  }\n\n  getViewDefinition(viewDefinitionName: string, options?: IHttpGetParams): Observable<IViewDefinition> {\n    if (!this.viewDefinitionCache.has(viewDefinitionName)) {\n      const viewDefinition$ = this.rxViewDefinitionService.get(viewDefinitionName, options).pipe(shareReplay(1));\n\n      this.viewDefinitionCache.set(viewDefinitionName, viewDefinition$);\n    }\n\n    return this.viewDefinitionCache.get(viewDefinitionName);\n  }\n\n  registerConsumer(consumerDestroy$: Observable<any>): void {\n    this.consumers.add(consumerDestroy$);\n\n    consumerDestroy$.subscribe(() => {\n      this.consumers.delete(consumerDestroy$);\n\n      if (isEmpty(this.consumers)) {\n        this.clearCache();\n      }\n    });\n  }\n\n  private clearCache(): void {\n    this.viewDefinitionCache.clear();\n    this.viewDefinitionNamesCache.clear();\n  }\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule()\nexport class ViewModule {\n  static registerComponents(components: any) {\n    return {\n      ngModule: ViewModule,\n      providers: [\n        {\n          provide: 'components',\n          useValue: [...components]\n        }\n      ]\n    };\n  }\n}\n","import { RxViewActionRegistryService } from './view-action-registry.service';\nimport { Injectable } from '@angular/core';\nimport { EMPTY, Observable, throwError } from 'rxjs';\nimport { IPlainObject, RxLogService } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewActionService {\n  constructor(private rxViewActionRegistryService: RxViewActionRegistryService, private rxLogService: RxLogService) {}\n\n  execute(actionName: string, parameters?: IPlainObject): Observable<any> {\n    const viewActionDescriptor = this.rxViewActionRegistryService.get(actionName);\n\n    if (viewActionDescriptor) {\n      if (parameters.$condition$ !== false) {\n        return viewActionDescriptor.service.execute(parameters);\n      } else {\n        this.rxLogService.debug(`View Action ${actionName} skipped.`);\n        return EMPTY;\n      }\n    } else {\n      return throwError(`View Action ${actionName} not found.`);\n    }\n  }\n}\n","import { IRecordInstance } from '@helix/platform/record/api';\nimport { IRowDataItem, IRxRecordGridApi } from '../common/record-grid.types';\nimport { TypeDecorator, ɵmakeDecorator as makeDecorator } from '@angular/core';\n\nexport const RX_VIEW_ACTION = {\n  viewActionNames: {\n    openView: 'rxOpenViewAction',\n    launchUrl: 'rxLaunchUrlAction'\n  }\n};\n\nexport enum OpenViewActionLaunchBehavior {\n  SameWindow = 'sameWindow',\n  NewWindow = 'newWindow'\n}\n\nexport enum OpenViewActionModalSize {\n  Xsmall = 'rx-xs',\n  Small = 'rx-sm',\n  Medium = 'rx-md',\n  Large = 'rx-lg',\n  Xlarge = 'rx-xl',\n  Xxlarge = 'rx-xxl',\n  FullSize = 'rx-full-size'\n}\n\nexport enum OpenViewActionType {\n  FullWidth = 'fullWidth',\n  CenteredModal = 'centeredModal',\n  DockedLeftModal = 'dockedLeftModal',\n  DockedRightModal = 'dockedRightModal'\n}\n\nexport type RecordsSource =\n  | IRxRecordGridApi\n  | IRecordInstance[]\n  | IRecordInstance['id'][]\n  | IRowDataItem\n  | IRowDataItem[]\n  | string;\n\nexport interface RxViewAction {\n  name: string;\n}\n\nexport interface RxViewActionDecorator {\n  /**\n   * Decorator that marks a class as an RxViewAction and supplies configuration metadata.\n   */\n  (rxViewAction?: RxViewAction): TypeDecorator;\n\n  new (rxViewAction?: RxViewAction): RxViewAction;\n}\n\nexport const RxViewAction: RxViewActionDecorator = makeDecorator('RxViewAction');\n","export const RX_LAUNCH_BEHAVIOR = {\n  newWindow: {\n    content: 'Open in a new tab',\n    value: 'newWindow',\n    target: '_blank'\n  },\n  sameWindow: {\n    content: 'Open in the same tab',\n    value: 'sameWindow',\n    target: '_self'\n  },\n  parentFrame: {\n    content: 'Open in the parent frame',\n    value: 'parentFrame',\n    target: '_parent'\n  },\n  windowFullBody: {\n    content: 'Open in the full body of the window',\n    value: 'windowFullBody',\n    target: '_top'\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { IDefinitionAdapter } from '@helix/platform/shared/api';\nimport { IContainerViewComponentDefinition } from '../domain/view-component-definition.types';\nimport { IViewDefinition } from '../domain/view-definition.interface';\n\n@Injectable()\nexport class RxViewActionDesignAdapterService\n  implements IDefinitionAdapter<IContainerViewComponentDefinition, IViewDefinition>\n{\n  adaptDefinition(componentDefinition: IContainerViewComponentDefinition) {\n    componentDefinition.propertiesByName.$condition$ = componentDefinition.propertiesByName.$condition$ ?? null;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RxViewComponentRegistryService } from '../registries/view-component-registry.service';\nimport { RxViewComponentType } from '../domain/view-component.types';\nimport { RxDefinitionAdapterRegistryService } from '@helix/platform/shared/api';\nimport { RxViewActionDesignAdapterService } from './view-action-design-adapter.service';\n\n@NgModule({\n  providers: [RxViewActionDesignAdapterService]\n})\nexport class ViewActionDesignModule {\n  constructor(\n    rxViewComponentRegistryService: RxViewComponentRegistryService,\n    rxDefinitionAdapterRegistryService: RxDefinitionAdapterRegistryService,\n    rxViewActionDesignAdapterService: RxViewActionDesignAdapterService\n  ) {\n    rxDefinitionAdapterRegistryService.registerDesignAdapter(\n      RxViewComponentType.Action,\n      rxViewActionDesignAdapterService\n    );\n\n    rxViewComponentRegistryService.register({\n      type: RxViewComponentType.Action,\n      isDataComponent: true,\n      isContainerComponent: true\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IDefinitionAdapter } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewActionDefinitionAdapterRegistryService {\n  private runtimeAdapters: Map<string, IDefinitionAdapter> = new Map();\n  private designAdapters: Map<string, IDefinitionAdapter> = new Map();\n\n  registerRuntimeAdapter(actionName: string, adapter: IDefinitionAdapter): void {\n    this.runtimeAdapters.set(actionName, adapter);\n  }\n\n  registerDesignAdapter(actionName: string, adapter: IDefinitionAdapter): void {\n    this.designAdapters.set(actionName, adapter);\n  }\n\n  getRuntimeAdapter(actionName: string): IDefinitionAdapter {\n    return this.runtimeAdapters.get(actionName);\n  }\n\n  getDesignAdapter(actionName: string): IDefinitionAdapter {\n    return this.designAdapters.get(actionName);\n  }\n}\n","export enum ViewDisplayType {\n  Preview = 'preview',\n  Regular = 'view',\n  NoShell = 'iview'\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RxStringService, RxUrlUtilsService } from '@helix/platform/utils';\nimport { RecordsSource } from './view-action.types';\nimport { IRowDataItem, IRxRecordGridApi, RowDataItemIdFieldName } from '../common/record-grid.types';\nimport { clone, compact, flow, isFunction, isObject, map, some, uniq } from 'lodash';\nimport { IPlainObject, RxBundleCacheService } from '@helix/platform/shared/api';\nimport { ViewDisplayType } from '../domain/view-display-type.enum';\nimport { IViewInputParams } from '../domain/view-input-params.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewActionUtilsService {\n  constructor(\n    private rxBundleCacheService: RxBundleCacheService,\n    private router: Router,\n    private rxStringService: RxStringService,\n    private rxUrlUtilsService: RxUrlUtilsService\n  ) {}\n\n  generateViewUrl(viewDefinitionName: string, inputParams: IViewInputParams = {}): string {\n    const currentUrl = this.router.routerState.snapshot.url;\n\n    let displayType = ViewDisplayType.Regular;\n\n    if (currentUrl.includes(`/${ViewDisplayType.Preview}/`)) {\n      displayType = ViewDisplayType.Preview;\n    } else if (currentUrl.includes(`/${ViewDisplayType.NoShell}/`)) {\n      displayType = ViewDisplayType.NoShell;\n    }\n\n    return this.rxUrlUtilsService.buildUrl(\n      `/${this.rxBundleCacheService.bundleId}/${displayType}/${viewDefinitionName}`,\n      inputParams\n    );\n  }\n\n  extractRecordIds(source: RecordsSource): string[] {\n    let ids = [];\n\n    if (isFunction((<IRxRecordGridApi>source).getSelectedRows)) {\n      ids = this.getIdsFromGridRows((<IRxRecordGridApi>source).getSelectedRows());\n    } else if (isObject(source) && this.rxStringService.isNonEmptyString(source[RowDataItemIdFieldName])) {\n      ids.push(source[RowDataItemIdFieldName]);\n    } else if (Array.isArray(source) && some(source, isObject)) {\n      ids = this.getIdsFromGridRows(<IRowDataItem[]>source);\n    } else if (this.rxStringService.isNonEmptyString(source)) {\n      ids.push(source);\n    } else if (Array.isArray(source) && some(source, this.rxStringService.isNonEmptyString)) {\n      ids = clone(source);\n    }\n\n    return ids;\n  }\n\n  getIdsFromGridRows(rows: IPlainObject[]): string[] {\n    return flow((rowsArray) => map(rowsArray, RowDataItemIdFieldName), compact, uniq)(rows);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { get, isNil } from 'lodash';\nimport { RxJsonParserService } from '@helix/platform/utils';\nimport { IOldViewLayout, IOldViewLayoutColumn, IOldViewLayoutColumnChild } from './old-view-layout.types';\nimport {\n  AnyViewComponentDefinition,\n  IContainerViewComponentDefinition\n} from '../domain/view-component-definition.types';\nimport { IViewComponentDefinitionWithParent } from '../domain/view-component-definition-with-parent.interface';\nimport { IViewDefinition } from '../domain/view-definition.interface';\nimport { RX_VIEW_DEFINITION } from '../domain/view-definition.constant';\nimport { IViewLayout, IViewLayoutOutlet, IViewLayoutOutletColumn, ViewLayoutRole } from './view-layout.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxOldViewLayoutAdapterService {\n  constructor(private rxJsonParserService: RxJsonParserService) {}\n\n  convertLayout(componentDefinitionItem: IViewComponentDefinitionWithParent): void {\n    if (this.isViewDefinitionItem(componentDefinitionItem)) {\n      this.convertViewLayout(componentDefinitionItem.componentDefinition as any);\n    } else if (this.isContainerComponentDefinition(componentDefinitionItem.componentDefinition)) {\n      this.convertComponentLayout(componentDefinitionItem.componentDefinition);\n    }\n  }\n\n  private isViewDefinitionItem(componentDefinition: IViewComponentDefinitionWithParent): boolean {\n    return !componentDefinition.parentComponentDefinition;\n  }\n\n  private convertViewLayout(viewDefinition: IViewDefinition): void {\n    const layout: IOldViewLayout = this.rxJsonParserService.tryParseJson(viewDefinition.layout);\n\n    if (isNil(layout.layoutTemplate) || get(layout, 'columns[0].role')) {\n      // for views from new designer, or for views with 1 or more columns\n      this.convertComponentLayout(viewDefinition);\n    } else {\n      // for views with header and/or footer\n      const childrenWithRoles: IOldViewLayoutColumnChild[] = get(layout, 'columns[0].children', []);\n      const outlets = childrenWithRoles.map((child, i) => {\n        let outletItem: IViewLayoutOutlet;\n\n        if (child.role) {\n          outletItem = {\n            name: child.role === ViewLayoutRole.Content ? RX_VIEW_DEFINITION.defaultOutletName : child.role,\n            static: child.static || null,\n            height: child.height || null,\n            role: child.role || null,\n            columns: (child.columns || []).map(this.convertColumns.bind(this))\n          };\n        } else {\n          // creating outlets for case when components are sibling to header/footer\n          outletItem = {\n            name: `outlet-${i}`,\n            columns: [{ children: [child.componentDefinitionId] }]\n          };\n        }\n\n        return outletItem;\n      });\n\n      const newLayout: IViewLayout = { outlets };\n\n      viewDefinition.layout = JSON.stringify(newLayout);\n    }\n  }\n\n  private convertComponentLayout(componentDefinition: IContainerViewComponentDefinition | IViewDefinition): void {\n    if (componentDefinition.layout) {\n      const layout: IOldViewLayout = this.rxJsonParserService.tryParseJson(componentDefinition.layout);\n\n      // add columns to views created in new designer\n      // todo remove after new designer will save layouts with columns\n      const children = get(layout, 'outlets[0].children');\n\n      if (children) {\n        componentDefinition.layout = JSON.stringify(this.convertNewDesignerLayout(layout));\n      }\n\n      if (layout && layout.componentDefinitionId) {\n        const newLayout = {\n          outlets: [\n            {\n              name: RX_VIEW_DEFINITION.defaultOutletName,\n              columns: layout.columns.map(this.convertColumns.bind(this))\n            }\n          ]\n        };\n\n        componentDefinition.layout = JSON.stringify(newLayout);\n      }\n    }\n  }\n\n  private convertNewDesignerLayout(layout): IViewLayout {\n    const children = get(layout, 'outlets[0].children');\n\n    if (children) {\n      layout.outlets[0].columns = [\n        {\n          children\n        }\n      ];\n\n      delete layout.outlets[0].children;\n    }\n\n    return layout;\n  }\n\n  private convertColumns(column: IOldViewLayoutColumn): IViewLayoutOutletColumn {\n    // rx-tab-container was placed 1 lever deeper in the layout of rx-tab-panel in views\n    // created in AngularJS view designer. 'columns[0].children[0]' should extract it.\n    return {\n      span: column.span || null,\n      cssClass: `col-sm-${column.span || 12}`,\n      children: column.children.map(\n        (child) => get(child, 'columns[0].children[0].componentDefinitionId') || child.componentDefinitionId\n      )\n    };\n  }\n\n  private isContainerComponentDefinition(\n    componentDefinition: AnyViewComponentDefinition\n  ): componentDefinition is IContainerViewComponentDefinition {\n    return (componentDefinition as IContainerViewComponentDefinition).componentDefinitions !== undefined;\n  }\n}\n","export const RX_SHELL = {\n  componentName: 'rx-shell',\n\n  navBar: {\n    menuItem: 'rx-shell-menu-item',\n    action: 'rx-shell-action',\n    menuGroup: 'rx-shell-menu-group',\n    userMenu: 'rx-shell-user-menu'\n  },\n\n  actions: {\n    launchURL: 'rxShellLaunchUrlAction',\n    navigateToView: 'rxShellNavigateToViewAction',\n    navigateToState: 'rxShellNavigateToStateAction',\n    navigateToSmartReporting: 'rxShellNavigateToSmartReportingAction'\n  },\n\n  outlets: {\n    actions: 'actions'\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { find, forEach, get, has, isEmpty } from 'lodash';\nimport { Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport {\n  IUser,\n  RX_APPLICATION,\n  RxCurrentUserService,\n  RxNotificationService,\n  RxFeatureService\n} from '@helix/platform/shared/api';\nimport { RxJsonParserService, RxObjectUtilsService, RxUrlUtilsService } from '@helix/platform/utils';\nimport {\n  AnyViewComponentDefinition,\n  IContainerViewComponentDefinition\n} from '../domain/view-component-definition.types';\nimport { RxExpressionEvaluatorService } from '../expressions/expression-evaluator.service';\nimport { RX_SHELL } from './shell.constant';\nimport { IRxShellConfig, IRxShellMenuItem, IRxShellMenuProperties, IRxShellNavBarProperties } from './shell.types';\nimport { RxViewDefinitionCacheService } from '../services/view-definition-cache.service';\nimport { RxViewDefinitionParserService } from '../services/view-definition-parser.service';\nimport { RxOldViewLayoutAdapterService } from '../layout/old-view-layout-adapter.service';\nimport { RxViewLayout } from '../layout/view-layout.class';\nimport { IViewLayout } from '../layout/view-layout.types';\nimport { RX_LEGACY_ICONS } from '../icons/icon.constant';\nimport { RX_VIEW_DEFINITION } from '../domain/view-definition.constant';\nimport { OpenViewActionLaunchBehavior, OpenViewActionType } from '../view-action/view-action.types';\nimport { RX_LAUNCH_BEHAVIOR } from '../view-action/common/launch-behavior.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxShellService {\n  private menuItemId = 0;\n  private currentUser: IUser;\n  private navigateToSmartReportingSubject = new Subject<void>();\n  private navigateToViewSubject = new Subject<IRxShellMenuItem>();\n  private openUserPreferencesSubject = new Subject<void>();\n  private openUserAvailabilitySubject = new Subject<void>();\n  private shellConfigSubject: ReplaySubject<IRxShellConfig> = new ReplaySubject(1);\n  private openGainsightPreferencesSubject = new Subject<void>();\n\n  navigateToSmartReporting$: Observable<void> = this.navigateToSmartReportingSubject.asObservable();\n  navigateToView$: Observable<IRxShellMenuItem> = this.navigateToViewSubject.asObservable();\n  openUserPreferences$: Observable<void> = this.openUserPreferencesSubject.asObservable();\n  openUserAvailability$: Observable<void> = this.openUserAvailabilitySubject.asObservable();\n  shellConfig$: Observable<IRxShellConfig> = this.shellConfigSubject.asObservable();\n  openGainsightPreferences$: Observable<void> = this.openGainsightPreferencesSubject.asObservable();\n\n  constructor(\n    private translateService: TranslateService,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxExpressionEvaluatorService: RxExpressionEvaluatorService,\n    private rxJsonParserService: RxJsonParserService,\n    private rxNotificationService: RxNotificationService,\n    private rxObjectUtilsService: RxObjectUtilsService,\n    private rxUrlUtilsService: RxUrlUtilsService,\n    private rxViewDefinitionCacheService: RxViewDefinitionCacheService,\n    private rxViewDefinitionParserService: RxViewDefinitionParserService,\n    private rxOldViewLayoutAdapterService: RxOldViewLayoutAdapterService,\n    private rxFeatureService: RxFeatureService\n  ) {}\n\n  resetMenuItemCount(): void {\n    this.menuItemId = 0;\n  }\n\n  updateMenuItemCount(): number {\n    return this.menuItemId++;\n  }\n\n  private getChildGuids(layout: IViewLayout, outletName = RX_VIEW_DEFINITION.defaultOutletName): string[] {\n    return RxViewLayout.getViewLayoutChildGuids(layout, outletName);\n  }\n\n  private getIconClass(icon: string, left = true): string {\n    const iconId = get(RX_LEGACY_ICONS, icon, icon);\n\n    return iconId ? `d-icon-${left ? 'left-' : ''}` + iconId : '';\n  }\n\n  getShellConfig(bundleId: string): Observable<IRxShellConfig> {\n    const navigationBarItems: IRxShellMenuItem[] = [];\n    const flattenedMenuItems: IRxShellMenuItem[] = [];\n    const navigationActions: IRxShellMenuItem[] = [];\n\n    const preferenceMenuItem: IRxShellMenuItem = {\n      name: this.translateService.instant('com.bmc.arsys.rx.client.shell.my-preferences.label'),\n      action: this.openUserPreferences.bind(this),\n      className: 'd-icon-wrench_o',\n      hide: false,\n      subMenu: []\n    } as IRxShellMenuItem;\n\n    const gainsightPreferenceMenuItem: IRxShellMenuItem = {\n      name: this.translateService.instant('com.bmc.arsys.rx.client.shell.analytics.label'),\n      action: this.openGainsightPreferences.bind(this),\n      className: 'd-icon-app_chart_bar',\n      hide: false,\n      id: 0,\n      subMenu: []\n    };\n\n    const myAvailabilityMenuItem: IRxShellMenuItem = {\n      name: this.translateService.instant('com.bmc.arsys.rx.client.shell.my-availability.label'),\n      action: this.openUserAvailability.bind(this),\n      hide: false,\n      className: 'd-icon-user_clock_o',\n      subMenu: []\n    } as IRxShellMenuItem;\n\n    let navBarProperties: IRxShellNavBarProperties;\n    let userMenu = null;\n\n    this.currentUser = this.rxCurrentUserService.get();\n\n    return this.rxViewDefinitionCacheService\n      .getViewDefinition(`${bundleId}:${RX_APPLICATION.shellDefinitionName}`)\n      .pipe(\n        switchMap((shellDefinition) => {\n          this.rxViewDefinitionParserService\n            .getComponents(shellDefinition)\n            .forEach((definition) => this.rxOldViewLayoutAdapterService.convertLayout(definition));\n\n          if (shellDefinition && shellDefinition.componentDefinitions[0]) {\n            const navBar = shellDefinition.componentDefinitions[0] as IContainerViewComponentDefinition;\n            const layout: IViewLayout = this.rxJsonParserService.tryParseJson(navBar.layout);\n\n            navBarProperties = (navBar.propertiesByName as IRxShellNavBarProperties) || {\n              allowAppSwitching: null,\n              globalSearchUseDefault: null,\n              globalSearchDisabled: null,\n              globalSearchRecords: null,\n              globalSearchCustomSearchState: null\n            };\n\n            forEach(this.getChildGuids(layout), (guid) => {\n              const menuItemDefinition = find(navBar.componentDefinitions, {\n                guid\n              }) as IContainerViewComponentDefinition;\n\n              if (menuItemDefinition) {\n                let menuItem: IRxShellMenuItem;\n\n                switch (menuItemDefinition.type) {\n                  case RX_SHELL.navBar.menuGroup:\n                  case RX_SHELL.navBar.userMenu:\n                    const subMenu = [];\n\n                    const childLayout =\n                      this.rxJsonParserService.tryParseJson(menuItemDefinition.layout) ||\n                      RxViewLayout.getViewLayoutForDefaultOutlet(\n                        menuItemDefinition.componentDefinitions.map((item: AnyViewComponentDefinition) => item.guid)\n                      );\n\n                    forEach(this.getChildGuids(childLayout), (childGuid) => {\n                      const subItemDefinition = find(menuItemDefinition.componentDefinitions, {\n                        guid: childGuid\n                      });\n\n                      if (subItemDefinition) {\n                        const subItem = this.getMenuProperties(subItemDefinition);\n\n                        if (!isEmpty(subItem)) {\n                          // concatenating className with listClassName, as listClassName not available for subMenu\n                          if (menuItemDefinition.type === RX_SHELL.navBar.userMenu) {\n                            subItem.className += ' ' + subItem.listClassName;\n                          } else {\n                            flattenedMenuItems.push(subItem);\n                          }\n\n                          subMenu.push(subItem);\n                        }\n                      }\n                    });\n\n                    if (subMenu.length > 0) {\n                      // LMA:: TODO:: Even if we set the className in a first level menu the icon is not displayed\n                      menuItem = {\n                        hide: has(menuItemDefinition.propertiesByName, 'hidden')\n                          ? this.rxJsonParserService.tryParseJson(menuItemDefinition.propertiesByName.hidden)\n                          : false,\n                        listClassName: get(menuItemDefinition.propertiesByName, 'styles'),\n                        className: this.getIconClass(get(menuItemDefinition.propertiesByName, 'menuItemIcon')),\n                        name: menuItemDefinition.propertiesByName.menuGroupName,\n                        subMenu: subMenu,\n                        id: this.updateMenuItemCount()\n                      };\n                    }\n\n                    break;\n\n                  case RX_SHELL.navBar.menuItem:\n                    menuItem = this.getMenuProperties(menuItemDefinition);\n                    break;\n                }\n\n                if (!isEmpty(menuItem)) {\n                  if (menuItemDefinition.type === RX_SHELL.navBar.userMenu) {\n                    userMenu = menuItem;\n                  } else {\n                    flattenedMenuItems.push(menuItem);\n                    navigationBarItems.push(menuItem);\n                  }\n                }\n              }\n            });\n\n            forEach(this.getChildGuids(layout, RX_SHELL.outlets.actions), (guid) => {\n              const menuItemDefinition = navBar.componentDefinitions.find((definition) => definition.guid === guid);\n\n              if (menuItemDefinition) {\n                navigationActions.push(this.getMenuProperties(menuItemDefinition));\n              }\n            });\n          }\n\n          if (this.rxCurrentUserService.isSupportStaff()) {\n            myAvailabilityMenuItem.id = this.updateMenuItemCount();\n\n            if (!userMenu) {\n              userMenu = {\n                subMenu: []\n              };\n            }\n\n            userMenu.subMenu.push(myAvailabilityMenuItem);\n          }\n\n          if (this.currentUser.fullName) {\n            preferenceMenuItem.id = this.updateMenuItemCount();\n\n            if (!userMenu) {\n              userMenu = {\n                subMenu: []\n              };\n            }\n\n            userMenu.subMenu.push(preferenceMenuItem);\n          }\n\n          if (this.rxFeatureService.isFeatureEnabled('DRD21-11744')) {\n            userMenu.subMenu.push(gainsightPreferenceMenuItem);\n          }\n\n          const rxData = {\n            flattenedMenuItems,\n            navigationBarItems,\n            navigationActions,\n            userMenu: userMenu || [],\n            allowAppSwitching: has(navBarProperties, 'allowAppSwitching')\n              ? this.rxJsonParserService.tryParseJson(navBarProperties.allowAppSwitching)\n              : false,\n            globalSearchUseDefault: has(navBarProperties, 'globalSearchUseDefault')\n              ? this.rxJsonParserService.tryParseJson(navBarProperties.globalSearchUseDefault)\n              : true,\n            globalSearchCustomSearchState: navBarProperties.globalSearchCustomSearchState || '',\n            globalSearchDisabled: has(navBarProperties, 'globalSearchDisabled')\n              ? this.rxJsonParserService.tryParseJson(navBarProperties.globalSearchDisabled)\n              : true,\n            globalSearchRecords: has(navBarProperties, 'globalSearchRecords')\n              ? this.rxJsonParserService.tryParseJson(navBarProperties.globalSearchRecords)\n              : [],\n\n            // LMA:: TODO:: Later... See:\n            // standardlib/src/main/webapp/scripts/view-components/shell/shell-config.resource.js\n            // ,\n            // globalSearchState: rxSearchResultsState.get(),\n            // administrationSettingsState: rxAdministrationSettingsState.get()\n            globalSearchState: 'globalSearchState',\n            administrationSettingsState: 'adminSettingsState'\n          };\n\n          // In case server already had previously saved shell config with global search not configured,\n          // we want to disable global search by default\n          if (\n            !rxData.globalSearchDisabled &&\n            ((rxData.globalSearchUseDefault && rxData.globalSearchRecords.length === 0) ||\n              (!rxData.globalSearchUseDefault && rxData.globalSearchCustomSearchState.length === 0))\n          ) {\n            rxData.globalSearchDisabled = true;\n          }\n\n          this.shellConfigSubject.next(rxData);\n\n          return of(rxData);\n        })\n      );\n  }\n\n  private openUserPreferences(): void {\n    this.openUserPreferencesSubject.next();\n  }\n\n  private openGainsightPreferences(): void {\n    this.openGainsightPreferencesSubject.next();\n  }\n\n  private openUserAvailability(): void {\n    this.openUserAvailabilitySubject.next();\n  }\n\n  private navigateToView(viewParams): void {\n    this.navigateToViewSubject.next(viewParams);\n  }\n\n  private navigateToState(): void {\n    this.rxNotificationService.addWarningMessage('This feature is not supported.');\n  }\n\n  private navigateToSmartReporting(): void {\n    this.navigateToSmartReportingSubject.next();\n  }\n\n  private getMenuProperties(itemDefinition): IRxShellMenuItem {\n    const menuItem: IRxShellMenuItem = {} as IRxShellMenuItem;\n\n    const properties: IRxShellMenuProperties = this.rxObjectUtilsService.expandProperties(\n      itemDefinition.propertiesByName\n    ) as IRxShellMenuProperties;\n\n    menuItem.type = properties.actionName;\n    menuItem.id = this.updateMenuItemCount();\n    menuItem.closeOnClick = true;\n\n    switch (properties.actionName) {\n      case RX_SHELL.actions.launchURL:\n        menuItem.name = properties.menuItemName;\n        menuItem.target =\n          RX_LAUNCH_BEHAVIOR[properties.launchBehavior || OpenViewActionLaunchBehavior.NewWindow].target;\n\n        if (itemDefinition.type === RX_SHELL.navBar.action) {\n          menuItem.action = () => {\n            window.open(properties.url, menuItem.target);\n          };\n        } else {\n          menuItem.link = properties.url;\n        }\n\n        break;\n\n      case RX_SHELL.actions.navigateToView:\n        const viewParams = properties.viewParams;\n\n        forEach(viewParams, (expression: string, parameterName: string) => {\n          const paramValue = this.rxExpressionEvaluatorService.tryEvaluate(expression, {\n            keywords: {\n              userId: this.currentUser.userId,\n              personId: this.currentUser.personInstanceId\n            }\n          });\n\n          viewParams[parameterName] = paramValue;\n\n          return paramValue;\n        });\n\n        const url = this.rxUrlUtilsService.buildUrl(`${properties.viewDefinitionName}`, viewParams);\n\n        menuItem.name = properties.menuItemName;\n        menuItem.viewUrl = url;\n        menuItem.action = this.navigateToView.bind(this, menuItem);\n\n        menuItem.openViewParams = {\n          viewDefinitionName: properties.viewDefinitionName,\n          presentation: {\n            type: OpenViewActionType.FullWidth,\n            launchBehavior: OpenViewActionLaunchBehavior.SameWindow,\n            ...get(properties, 'presentation', {})\n          },\n          viewParams\n        };\n\n        break;\n      case RX_SHELL.actions.navigateToState:\n        // LMA:: TODO:: Implement it later\n        // if (!isRuntime || rxAuthorization.isStateAuthorized(properties.state)) {\n        menuItem.name = properties.menuItemName;\n\n        const stateParameters = {\n          state: properties.state,\n          menuItemId: menuItem.id\n        };\n\n        menuItem.stateParameters = stateParameters;\n        menuItem.action = this.navigateToState.bind(this, stateParameters);\n        break;\n      case RX_SHELL.actions.navigateToSmartReporting:\n        menuItem.name = properties.menuItemName;\n        menuItem.action = this.navigateToSmartReporting.bind(this);\n        break;\n    }\n\n    menuItem.hide = has(properties, 'hidden') ? this.rxJsonParserService.tryParseJson(properties.hidden) : false;\n    menuItem.listClassName = properties.styles;\n    menuItem.className = this.getIconClass(properties.menuItemIcon, itemDefinition.type !== RX_SHELL.navBar.action);\n\n    return menuItem;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport {\n  IBundleDescriptor,\n  RX_APPLICATION,\n  RxComponentCanDeactivateGuard,\n  RxGlobalCacheService,\n  RxLocalizationService,\n  RxSessionService\n} from '@helix/platform/shared/api';\nimport { find, findIndex, get, head } from 'lodash';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { concatMap, map, switchMap, tap } from 'rxjs/operators';\nimport { RX_SHELL, RxShellService } from '../shell';\nimport { RxTreeService } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxHomepageResolver implements CanActivate {\n  private unknownApplicationRoute = '/unknown-application';\n\n  constructor(\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxShellService: RxShellService,\n    private rxTreeService: RxTreeService,\n    private router: Router,\n    private rxSessionService: RxSessionService,\n    private rxComponentCanDeactivateGuard: RxComponentCanDeactivateGuard,\n    private rxLocalizationService: RxLocalizationService\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const bundleId = route.paramMap.get('bundleId');\n    const applicationId = head(route.url).path;\n    const useDefaultLang = applicationId === RX_APPLICATION.innovationStudioBundleId;\n    const initTranslations$ = this.rxLocalizationService.initTranslations(useDefaultLang);\n\n    // waiting for translations to resolve to make getShellConfig call with correct lang\n    return combineLatest([this.rxSessionService.sessionActive$, initTranslations$]).pipe(\n      switchMap(() => {\n        return this.rxGlobalCacheService\n          .getBundleDescriptors()\n          .pipe(concatMap((bundleDescriptors) => this.getBundleUrl(bundleDescriptors, bundleId)));\n      }),\n      tap(() => this.rxComponentCanDeactivateGuard.disable())\n    );\n  }\n\n  private getBundleUrl(bundleDescriptors: IBundleDescriptor[], bundleId: string): Observable<UrlTree | boolean> {\n    if (findIndex(bundleDescriptors, { id: bundleId }) !== -1) {\n      return this.rxShellService.getShellConfig(bundleId).pipe(\n        map((shellConfiguration) => {\n          const menuItems = get(\n            this.rxTreeService.flattenTree(shellConfiguration, 'navigationBarItems'),\n            '[0].flattenedMenuItems'\n          );\n\n          const defaultView = find(menuItems, {\n            type: RX_SHELL.actions.navigateToView\n          });\n\n          return this.generateUrl(defaultView, bundleId);\n        })\n      );\n    } else {\n      return of(this.router.parseUrl(this.unknownApplicationRoute));\n    }\n  }\n\n  private generateUrl(defaultView, bundleId): UrlTree {\n    return this.router.parseUrl(\n      defaultView\n        ? `/${bundleId}/view/${defaultView.viewUrl}`\n        : `/${bundleId}/view/${RX_APPLICATION.settingsBundleId}:Unknown Default View Error)}`\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { RxViewComponentRegistryService } from '../registries/view-component-registry.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewComponentResolver implements Resolve<any> {\n  constructor(private rxViewComponentRegistryService: RxViewComponentRegistryService) {}\n\n  resolve(): Observable<any> {\n    return this.rxViewComponentRegistryService.resolveAsyncDescriptors();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AdaptDeviceDetectionService } from '@bmc-ux/adapt-angular';\nimport { RxDevice } from './device.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxDeviceDetectionService {\n  private devices = [\n    {\n      type: RxDevice.Desktop,\n      isDetected: this.adaptDeviceDetectionService.deviceDesktop()\n    },\n    {\n      type: RxDevice.Tablet,\n      isDetected: this.adaptDeviceDetectionService.deviceTablet()\n    },\n    {\n      type: RxDevice.Mobile,\n      isDetected: this.adaptDeviceDetectionService.deviceMobile()\n    }\n  ];\n\n  currentDevice: RxDevice = this.devices.find((item) => item.isDetected)?.type;\n\n  constructor(private adaptDeviceDetectionService: AdaptDeviceDetectionService) {}\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["RecordGridFilterDataLogic","RecordGridFilterOperator","ApplyGridFilterMode","Injectable","ViewComponentPropertyType","RxDevice","_a","map","every","includes","size","ExpressionOperator","reduce","uniq","escapeRegExp","jsep","BigNumber","isNil","isNaN","isUndefined","trim","find","isString","result","forEach","isFunction","ExpressionParserToken","isNull","isEmpty","shareReplay","defer","from","of","RX_APPLICATION","some","ViewDefinitionType","RxViewComponentType","BwfViewComponentType","makeDecorator","ViewLayoutRole","LayoutTypes","transform","set","RX_BUNDLE","DataPage","pluck","NgModule","EMPTY","throwError","OpenViewActionLaunchBehavior","OpenViewActionModalSize","OpenViewActionType","ViewDisplayType","isObject","clone","flow","compact","get","Subject","ReplaySubject","switchMap","has","head","combineLatest","concatMap","tap","findIndex"],"mappings":"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"}