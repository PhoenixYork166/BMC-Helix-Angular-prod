{"version":3,"file":"helix-platform-record-designer.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../libs/platform/record/designer/record-designer/record-customization-options/record-customization-options-editor.component.ts","../../../../libs/platform/record/designer/record-designer/record-customization-options/record-customization-options-editor.component.html","../../../../libs/platform/record/designer/record-designer/record-customization-options/record-customization-options.component.ts","../../../../libs/platform/record/designer/record-designer/record-customization-options/record-customization-options.component.html","../../../../libs/platform/record/designer/record-designer/record-customization-options/record-customization-options.module.ts","../../../../libs/platform/record/designer/record-designer/services/field-definition-inspector-helper.service.ts","../../../../libs/platform/record/designer/record-designer/field-option-editor/field-option-editor.component.ts","../../../../libs/platform/record/designer/record-designer/field-option-editor/field-option-editor.component.html","../../../../libs/platform/record/designer/record-designer/services/base-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/attachment-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/boolean-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/character-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/localized-character-field-editor/localized-character-field-editor.component.ts","../../../../libs/platform/record/designer/record-designer/localized-character-field-editor/localized-character-field-editor.component.html","../../../../libs/platform/record/designer/record-designer/services/localized-character-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/date-time-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/date-only-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/time-only-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/numeric-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/integer-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/decimal-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/real-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/selection-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/field-definition-manager.service.ts","../../../../libs/platform/record/designer/record-designer/record-inheritance-editor/record-inheritance-editor.component.ts","../../../../libs/platform/record/designer/record-designer/record-inheritance-editor/record-inheritance-editor.component.html","../../../../libs/platform/record/designer/record-designer/record-inheritance-editor/record-inheritance-editor.module.ts","../../../../libs/platform/record/designer/record-designer/search-field-editor/search-field-editor-modal.store.ts","../../../../libs/platform/record/designer/record-designer/search-field-editor/search-field-editor-modal.component.ts","../../../../libs/platform/record/designer/record-designer/search-field-editor/search-field-editor-modal.component.html","../../../../libs/platform/record/designer/record-designer/search-field-editor/search-field-editor-control.component.ts","../../../../libs/platform/record/designer/record-designer/search-field-editor/search-field-editor-control.component.html","../../../../libs/platform/record/designer/record-designer/search-field-editor/search-field-editor.module.ts","../../../../libs/platform/record/designer/record-designer/+state/record-designer.actions.ts","../../../../libs/platform/record/designer/record-designer/record-designer.constant.ts","../../../../libs/platform/record/designer/record-designer/+state/record-designer.selectors.ts","../../../../libs/platform/record/designer/record-designer/inheritance-issue-info/inheritance-issue-info.component.ts","../../../../libs/platform/record/designer/record-designer/inheritance-issue-info/inheritance-issue-info.component.html","../../../../libs/platform/record/designer/record-designer/record-designer-expression-configurator.class.ts","../../../../libs/platform/record/designer/record-designer/add-join-fields-editor/add-join-fields-editor.component.ts","../../../../libs/platform/record/designer/record-designer/add-join-fields-editor/add-join-fields-editor.component.html","../../../../libs/platform/record/designer/record-designer/record-definition-validator.service.ts","../../../../libs/platform/record/designer/record-designer/archive-associations-control/archive-association-selector.component.ts","../../../../libs/platform/record/designer/record-designer/archive-associations-control/archive-association-selector.component.html","../../../../libs/platform/record/designer/record-designer/archive-associations-control/missing-archive-definitions-modal.component.ts","../../../../libs/platform/record/designer/record-designer/archive-associations-control/missing-archive-definitions-modal.component.html","../../../../libs/platform/record/designer/record-designer/archive-associations-control/archive-associations-control.component.ts","../../../../libs/platform/record/designer/record-designer/archive-associations-control/archive-associations-control.component.html","../../../../libs/platform/record/designer/record-designer/record-indexes-control/record-indexes-editor.store.ts","../../../../libs/platform/record/designer/record-designer/record-indexes-control/record-indexes-editor.component.ts","../../../../libs/platform/record/designer/record-designer/record-indexes-control/record-indexes-editor.component.html","../../../../libs/platform/record/designer/record-designer/record-indexes-control/record-indexes-control.component.ts","../../../../libs/platform/record/designer/record-designer/record-indexes-control/record-indexes-control.component.html","../../../../libs/platform/record/designer/record-designer/record-designer-inspector.service.ts","../../../../libs/platform/record/designer/record-designer/record-designer.service.ts","../../../../libs/platform/record/designer/record-designer/record-designer.component.ts","../../../../libs/platform/record/designer/record-designer/record-designer.component.html","../../../../libs/platform/record/designer/record-designer/+state/record-designer-model.reducer.ts","../../../../libs/platform/record/designer/record-designer/+state/record-designer.effects.ts","../../../../libs/platform/record/designer/record-designer/record-designer.module.ts","../../../../libs/platform/record/designer/record-designer-page/record-designer-page.component.ts","../../../../libs/platform/record/designer/record-designer-page/record-designer-page.component.html","../../../../libs/platform/record/designer/record-designer-page/record-designer-page.module.ts","../../../../libs/platform/record/designer/helix-platform-record-designer.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Injector, TemplateRef, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActiveModalRef, DismissReasons, RxSelectionChangeEvent, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { ColumnConfig, DataCellTemplateParams } from '@bmc-ux/adapt-table';\nimport { IScopeSelectionOption, RX_BUNDLE, RX_OVERLAY } from '@helix/platform/shared/api';\nimport { RX_MODAL, RxModalClass, RxModalService } from '@helix/platform/ui-kit';\nimport { TranslateService } from '@ngx-translate/core';\nimport { cloneDeep, find, includes, noop } from 'lodash';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IRecordCustomizationOptionsEditorData } from './record-customization-options.interfaces';\nimport { IRecordDefinitionModel } from '../../record-designer.types';\n\n@Component({\n  selector: 'rx-record-customization-options-editor',\n  templateUrl: './record-customization-options-editor.component.html',\n  styleUrls: ['./record-customization-options-editor.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RecordCustomizationOptionsEditorComponent extends RxModalClass {\n  data: IRecordCustomizationOptionsEditorData = this.activeModalRef.getData();\n  scopeSelectionOptions: IScopeSelectionOption[] = this.data.scopeSelectionOptions;\n  recordDefinition: IRecordDefinitionModel = this.data.recordDefinition;\n  columns: ColumnConfig[];\n\n  @ViewChild('recordCustomizationOptionsEditorForm')\n  recordCustomizationOptionsEditorForm: NgForm;\n\n  @ViewChild('recordFieldsColumnTemplate', { static: true })\n  recordFieldsColumnTemplate: TemplateRef<DataCellTemplateParams>;\n\n  private customizationControlProperties = [\n    'allowPermissionsOverlay',\n    'allowOtherPropertiesOverlay',\n    'allowIndexesOverlay',\n    'allowFieldsOverlay'\n  ];\n\n  initialCustomizationOptions = this.recordDefinition.customizationOptions;\n  allowOverlay = includes(Object.values(this.initialCustomizationOptions), true);\n  fields = cloneDeep(this.recordDefinition.fields);\n\n  customizationOptions = {\n    allowOtherPropertiesOverlay: this.initialCustomizationOptions.allowOtherPropertiesOverlay || false,\n    allowPermissionsOverlay: this.initialCustomizationOptions.allowPermissionsOverlay || false,\n    allowIndexesOverlay: this.initialCustomizationOptions.allowIndexesOverlay || false,\n    allowFieldsOverlay: this.initialCustomizationOptions.allowFieldsOverlay || false\n  };\n\n  private isFieldsOverlayAllowedSubject = new BehaviorSubject<Boolean>(\n    this.initialCustomizationOptions.allowFieldsOverlay\n  );\n\n  isDisabled = this.data.overlayOperation !== RX_OVERLAY.operationTypes.createdInThisOverlayGroup;\n  private definitionScopeName = find(this.scopeSelectionOptions, { name: this.data.definitionScopeName });\n\n  scope = [this.definitionScopeName];\n\n  private isPublicSubject = new BehaviorSubject<Boolean>(this.scope[0].id === RX_BUNDLE.definitionScopes.public.type);\n\n  areCustomizationOptionsDisabled$: Observable<Boolean> = this.isPublicSubject.pipe(\n    map((isPublic) => !isPublic || this.isDisabled)\n  );\n\n  isFieldsOverlayDisabled$: Observable<Boolean> = combineLatest([\n    this.areCustomizationOptionsDisabled$,\n    this.isFieldsOverlayAllowedSubject\n  ]).pipe(\n    map(\n      ([areCustomizationOptionsDisabled, isFieldsOverlayAllowed]) =>\n        areCustomizationOptionsDisabled || !isFieldsOverlayAllowed\n    )\n  );\n\n  vm$ = this.areCustomizationOptionsDisabled$.pipe(\n    map((areCustomizationOptionsDisabled) => ({ areCustomizationOptionsDisabled }))\n  );\n\n  constructor(\n    private rxModalService: RxModalService,\n    public activeModalRef: ActiveModalRef,\n    protected injector: Injector,\n    private translateService: TranslateService\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  onFieldsPropertyChange(): void {\n    this.recordCustomizationOptionsEditorForm.control.markAsDirty();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.columns = [\n      {\n        field: 'name',\n        header: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label')\n      },\n      {\n        field: 'allowOtherPropertiesOverlay',\n        header: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.scope-customization-options.allow-properties-customization.label'\n        ),\n        cellTemplate: this.recordFieldsColumnTemplate,\n        headerClass: 'pl-6'\n      },\n      {\n        field: 'allowPermissionsOverlay',\n        header: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.scope-customization-options.allow-permissions-customization.label'\n        ),\n        cellTemplate: this.recordFieldsColumnTemplate,\n        headerClass: 'pl-6'\n      }\n    ];\n  }\n\n  optionFormatter(option: RxSelectOption): string {\n    return option.name;\n  }\n\n  save(): void {\n    if (this.scope[0].id === RX_BUNDLE.definitionScopeTypes.public) {\n      this.rxModalService\n        .confirm({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n          modalStyle: RX_MODAL.modalStyles.warning,\n          message: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.scope-customization-options.definition-scope-to-public.warning'\n          )\n        })\n        .then((result: boolean) => {\n          if (result) {\n            this.closeModal();\n          }\n        })\n        .catch(noop);\n    } else if (this.data.definitionScopeName === RX_BUNDLE.definitionScopeNames.public) {\n      this.rxModalService\n        .confirm({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n          modalStyle: RX_MODAL.modalStyles.warning,\n          message: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.scope-customization-options.change-scope-from-public-warning.message'\n          )\n        })\n        .then((result: boolean) => {\n          if (result) {\n            this.closeModal();\n          }\n        })\n        .catch(noop);\n    } else {\n      this.closeModal();\n    }\n  }\n\n  onScopeChange(rxSelectionChangeEvent: RxSelectionChangeEvent): void {\n    this.isPublicSubject.next(rxSelectionChangeEvent[0].id === RX_BUNDLE.definitionScopes.public.type);\n  }\n\n  closeModal(): void {\n    const result = { ...this.recordCustomizationOptionsEditorForm.form.value, fields: this.fields };\n\n    result.scope = result.scope[0].id;\n    this.activeModalRef.close(result);\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  handleAllowOverlayChange(): void {\n    Object.keys(this.customizationOptions).forEach((option) => (this.customizationOptions[option] = this.allowOverlay));\n\n    this.isFieldsOverlayAllowedSubject.next(this.allowOverlay);\n  }\n\n  onRecordCustomizationOptionChange(): void {\n    this.allowOverlay =\n      this.customizationOptions.allowFieldsOverlay ||\n      this.customizationOptions.allowIndexesOverlay ||\n      this.customizationOptions.allowOtherPropertiesOverlay ||\n      this.customizationOptions.allowPermissionsOverlay;\n\n    this.isFieldsOverlayAllowedSubject.next(this.customizationOptions.allowFieldsOverlay);\n  }\n\n  isDirty(): boolean {\n    return this.recordCustomizationOptionsEditorForm.dirty;\n  }\n\n  ngOnDestroy(): void {\n    this.isFieldsOverlayAllowedSubject.complete();\n    this.isPublicSubject.complete();\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <div class=\"designer-modal-body modal-body\">\n    <form #recordCustomizationOptionsEditorForm=\"ngForm\">\n      <div class=\"w-25\">\n        <adapt-rx-select\n          label=\"{{\n            'com.bmc.arsys.rx.client.record-designer.scope-customization-options-editor.scope.label' | translate\n          }}\"\n          rx-id=\"scope-selection\"\n          [options]=\"scopeSelectionOptions\"\n          [optionFormatter]=\"optionFormatter\"\n          [tooltip]=\"{\n            iconName: 'question_circle_o',\n            content: 'com.bmc.arsys.rx.client.designer.scope-customization-options.scope.tooltip' | translate,\n            placement: 'bottom',\n            popoverMode: true\n          }\"\n          name=\"scope\"\n          [(ngModel)]=\"scope\"\n          (ngModelChange)=\"onScopeChange($event)\"\n          [disabled]=\"isDisabled\"\n        >\n        </adapt-rx-select>\n      </div>\n\n      <div class=\"w-100\">\n        <h5>{{ 'com.bmc.arsys.rx.client.customization-options-editor.customization-options.label' | translate }}</h5>\n        <adapt-rx-checkbox\n          label=\"{{\n            'com.bmc.arsys.rx.client.customization-options-editor.allow-future-customization.label'\n              | translate: { definitionType: data.definitionTypeDisplayName }\n          }}\"\n          rx-id=\"allow-customization-checkbox\"\n          name=\"allowOverlay\"\n          [(ngModel)]=\"allowOverlay\"\n          (ngModelChange)=\"handleAllowOverlayChange()\"\n          [disabled]=\"vm.areCustomizationOptionsDisabled\"\n        >\n        </adapt-rx-checkbox>\n      </div>\n\n      <div class=\"w-100\">\n        <h6>\n          {{\n            'com.bmc.arsys.rx.client.record-designer.scope-customization-options.allow-future-customizations-to.label'\n              | translate\n          }}\n        </h6>\n\n        <div class=\"w-100 d-flex\">\n          <div class=\"w-50\">\n            <div>\n              <adapt-rx-checkbox\n                label=\"{{\n                  'com.bmc.arsys.rx.client.record-designer.scope-customization-options.properties.label' | translate\n                }}\"\n                name=\"allowOtherPropertiesOverlay\"\n                [(ngModel)]=\"customizationOptions.allowOtherPropertiesOverlay\"\n                (ngModelChange)=\"onRecordCustomizationOptionChange()\"\n                [disabled]=\"vm.areCustomizationOptionsDisabled\"\n                rx-id=\"properties-checkbox\"\n              >\n              </adapt-rx-checkbox>\n            </div>\n\n            <div>\n              <adapt-rx-checkbox\n                label=\"{{\n                  'com.bmc.arsys.rx.client.record-designer.scope-customization-options.permissions.label' | translate\n                }}\"\n                name=\"allowPermissionsOverlay\"\n                [(ngModel)]=\"customizationOptions.allowPermissionsOverlay\"\n                (ngModelChange)=\"onRecordCustomizationOptionChange()\"\n                [disabled]=\"vm.areCustomizationOptionsDisabled\"\n                rx-id=\"permissions-checkbox\"\n              >\n              </adapt-rx-checkbox>\n            </div>\n          </div>\n\n          <div class=\"w-50\">\n            <div>\n              <adapt-rx-checkbox\n                label=\"{{\n                  'com.bmc.arsys.rx.client.record-designer.scope-customization-options.search-indexes.label' | translate\n                }}\"\n                name=\"allowIndexesOverlay\"\n                [(ngModel)]=\"customizationOptions.allowIndexesOverlay\"\n                (ngModelChange)=\"onRecordCustomizationOptionChange()\"\n                [disabled]=\"vm.areCustomizationOptionsDisabled\"\n                rx-id=\"search-indexes-checkbox\"\n              >\n              </adapt-rx-checkbox>\n            </div>\n\n            <div>\n              <adapt-rx-checkbox\n                label=\"{{\n                  'com.bmc.arsys.rx.client.record-designer.scope-customization-options.fields.label' | translate\n                }}\"\n                name=\"allowFieldsOverlay\"\n                [(ngModel)]=\"customizationOptions.allowFieldsOverlay\"\n                (ngModelChange)=\"onRecordCustomizationOptionChange()\"\n                [disabled]=\"vm.areCustomizationOptionsDisabled\"\n                rx-id=\"fields-checkbox\"\n              >\n              </adapt-rx-checkbox>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <adapt-table\n        [value]=\"fields\"\n        [columns]=\"columns\"\n        [scrollable]=\"true\"\n        scrollHeight=\"340px\"\n        [sortable]=\"false\"\n        [resizableColumns]=\"false\"\n        [bordered]=\"false\"\n        [filterable]=\"false\"\n        [dataKey]=\"'name'\"\n      >\n      </adapt-table>\n    </form>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button\n      class=\"btn btn-primary\"\n      rx-id=\"save-button\"\n      (click)=\"save()\"\n      type=\"button\"\n      [disabled]=\"!recordCustomizationOptionsEditorForm.dirty\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n\n    <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"cancel()\" rx-id=\"cancel-button\">\n      {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n    </button>\n  </div>\n</ng-container>\n\n<ng-template #recordFieldsColumnTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n  <div class=\"checkbox m-0 pl-4\">\n    <div class=\"checkbox__label pl-6 ml-6\">\n      <label>\n        <input\n          type=\"checkbox\"\n          role=\"checkbox\"\n          class=\"checkbox__input\"\n          [(ngModel)]=\"dataItem[column.field]\"\n          [disabled]=\"isFieldsOverlayDisabled$ | async\"\n          (change)=\"onFieldsPropertyChange()\"\n        />\n\n        <div class=\"checkbox__item\"></div>\n      </label>\n    </div>\n  </div>\n</ng-template>\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n  ICustomizationOptionsEditorData,\n  IScopeSelectionOption,\n  RX_OVERLAY,\n  RxBundleCacheService,\n  RxOverlayService\n} from '@helix/platform/shared/api';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { RxModalService } from '@helix/platform/ui-kit';\nimport { noop } from 'lodash';\nimport { RecordCustomizationOptionsEditorComponent } from './record-customization-options-editor.component';\nimport {\n  IRecordCustomizationControlValue,\n  IRecordCustomizationOptions\n} from './record-customization-options.interfaces';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, mergeMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'rx-scope-record-customization-control',\n  templateUrl: './record-customization-options.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RecordCustomizationOptionsComponent,\n      multi: true\n    }\n  ]\n})\nexport class RecordCustomizationOptionsComponent\n  extends ValueAccessor<IRecordCustomizationControlValue>\n  implements OnChanges\n{\n  @Input()\n  options: IRecordCustomizationOptions;\n\n  allowOverlayLabel: string;\n  definitionScopeName: string;\n  overlayOperation: string;\n  private scopeSelectionOptions: IScopeSelectionOption[];\n  private scopeNameSubject = new BehaviorSubject<string>('');\n\n  private scopeSelectionOptions$ = this.rxBundleCacheService.getDefinitionScopeSelectionOptions().pipe(\n    map((scopeSelectionOptions: IScopeSelectionOption[]) => scopeSelectionOptions),\n    tap((scopeSelectionOptions: IScopeSelectionOption[]) => (this.scopeSelectionOptions = scopeSelectionOptions))\n  );\n\n  private definitionScopeName$ = this.scopeNameSubject.pipe(\n    mergeMap((scopeName: string) =>\n      this.rxBundleCacheService.getDefinitionScopeName(scopeName).pipe(\n        map((definitionScopeName: string) => definitionScopeName),\n        tap((definitionScopeName: string) => (this.definitionScopeName = definitionScopeName))\n      )\n    )\n  );\n\n  vm$ = combineLatest([this.definitionScopeName$, this.scopeSelectionOptions$]).pipe(\n    map(([definitionScopeName, scopeSelectionOptions]) => ({\n      definitionScopeName,\n      scopeSelectionOptions\n    }))\n  );\n\n  constructor(\n    private rxModalService: RxModalService,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxOverlayService: RxOverlayService,\n    private translateService: TranslateService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.options) {\n      this.updateValues();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options) {\n      this.updateValues();\n    }\n  }\n\n  private getOverlayOperation(): string {\n    return this.rxOverlayService.getOverlayOperation(\n      this.options.recordDefinition.overlayGroupId,\n      this.options.recordDefinition.overlayDescriptor?.parentOverlayGroupId || null\n    );\n  }\n\n  private updateValues(): void {\n    this.setAllowOverlayLabel(this.options.recordDefinition.customizationOptions.allowOtherPropertiesOverlay);\n    this.scopeNameSubject.next(this.options.recordDefinition.customizationOptions.scope);\n\n    if (this.options.recordDefinition.overlayGroupId) {\n      this.overlayOperation = this.getOverlayOperation();\n    } else {\n      this.overlayOperation = RX_OVERLAY.operationTypes.createdInThisOverlayGroup;\n    }\n  }\n\n  openCustomizationOptionsEditor(): void {\n    this.rxModalService\n      .openModal({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.designer.scope-customization-options.title'),\n        content: RecordCustomizationOptionsEditorComponent,\n        blockKeyboard: false,\n\n        data: {\n          definitionScopeName: this.definitionScopeName,\n          allowOverlay: this.options.recordDefinition.customizationOptions.allowOtherPropertiesOverlay,\n          scopeSelectionOptions: this.scopeSelectionOptions,\n          isDisabled: this.options.isDisabled,\n          overlayOperation: this.overlayOperation,\n          definitionTypeDisplayName: this.options.definitionTypeDisplayName,\n          recordDefinition: this.options.recordDefinition\n        } as ICustomizationOptionsEditorData\n      })\n      .then((result: IRecordCustomizationControlValue) => {\n        this.setAllowOverlayLabel(result.allowOverlay);\n        this.definitionScopeName = this.scopeSelectionOptions.find((value) => value.id === result.scope).name;\n\n        this.value = result;\n      })\n      .catch(noop);\n  }\n\n  setAllowOverlayLabel(allowOverlay: boolean): void {\n    this.allowOverlayLabel = allowOverlay\n      ? RX_OVERLAY.overlayAllowedLabels.allowed\n      : RX_OVERLAY.overlayAllowedLabels.notAllowed;\n  }\n\n  ngOnDestroy(): void {\n    this.scopeNameSubject.complete();\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <adapt-button\n    btn-type=\"tertiary\"\n    rx-id=\"open-customization-options-editor-link\"\n    (click)=\"openCustomizationOptionsEditor()\"\n    class=\"p-0\"\n  >\n    {{ 'com.bmc.arsys.rx.client.designer.scope-customization-options.title' | translate }}\n  </adapt-button>\n\n  <adapt-icon\n    name=\"question_circle_o\"\n    class=\"ml-2\"\n    placement=\"right\"\n    [adaptPopover]=\"'com.bmc.arsys.rx.client.designer.scope-customization-options.scope.tooltip' | translate\"\n  >\n  </adapt-icon>\n\n  <p rx-id=\"scope\" class=\"mb-0 pt-2\">\n    {{\n      'com.bmc.arsys.rx.client.designer.scope-customization-options.scope.label'\n        | translate: { definitionScopeName: vm.definitionScopeName }\n    }}\n  </p>\n\n  <div rx-id=\"customization\" class=\"pt-2\">\n    {{\n      'com.bmc.arsys.rx.client.designer.scope-customization-options.customization.label'\n        | translate: { allowOverlayLabel: allowOverlayLabel }\n    }}\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AdaptButtonModule,\n  AdaptIconModule,\n  AdaptPopoverModule,\n  AdaptRxCheckboxModule,\n  AdaptRxSelectModule,\n  AdaptTooltipModule\n} from '@bmc-ux/adapt-angular';\nimport { AdaptTableModule } from '@bmc-ux/adapt-table';\nimport { AdaptCheckbox2Module } from '@bmc-ux/obsolete';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RecordCustomizationOptionsEditorComponent } from './record-customization-options-editor.component';\nimport { RecordCustomizationOptionsComponent } from './record-customization-options.component';\n\n@NgModule({\n  declarations: [RecordCustomizationOptionsComponent, RecordCustomizationOptionsEditorComponent],\n  exports: [RecordCustomizationOptionsComponent],\n  entryComponents: [RecordCustomizationOptionsComponent, RecordCustomizationOptionsEditorComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    AdaptTooltipModule,\n    AdaptRxSelectModule,\n    AdaptButtonModule,\n    AdaptCheckbox2Module,\n    AdaptPopoverModule,\n    AdaptIconModule,\n    AdaptRxCheckboxModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    AdaptTableModule\n  ]\n})\nexport class RecordCustomizationOptionsModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  IFieldDefinition,\n  RX_RECORD_DEFINITION,\n  RxFieldDefinitionService,\n  RxRecordDefinitionService\n} from '@helix/platform/record/api';\nimport { includes } from 'lodash';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxFieldDefinitionInspectorHelperService {\n  constructor(\n    private rxFieldDefinitionService: RxFieldDefinitionService,\n    private rxRecordDefinitionService: RxRecordDefinitionService\n  ) {}\n\n  isFieldEditable(fieldDefinition: IFieldDefinition): boolean {\n    return (\n      !this.rxFieldDefinitionService.isReadOnly(fieldDefinition) &&\n      !this.rxFieldDefinitionService.isJoinedField(fieldDefinition) &&\n      this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition)\n    );\n  }\n\n  isNameEditable(fieldDefinition: IFieldDefinition): boolean {\n    return (\n      !this.rxFieldDefinitionService.isInheritedField(fieldDefinition) &&\n      this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition) &&\n      !(fieldDefinition.lastUpdateTime && this.rxFieldDefinitionService.isOverlayMode(fieldDefinition))\n    );\n  }\n\n  isDescriptionEditable(fieldDefinition: IFieldDefinition, definitionModel: IRecordDefinitionModel): boolean {\n    if (this.rxRecordDefinitionService.isJoinRecord(definitionModel)) {\n      return (\n        includes(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds, fieldDefinition.id) &&\n        this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition)\n      );\n    } else {\n      return (\n        !this.rxFieldDefinitionService.isReadOnly(fieldDefinition) &&\n        this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition)\n      );\n    }\n  }\n\n  isRequiredEditable(fieldDefinition: IFieldDefinition): boolean {\n    const isAlwaysRequiredNonSystemField =\n      !this.rxFieldDefinitionService.isExternalRecordField(fieldDefinition) &&\n      includes(RX_RECORD_DEFINITION.alwaysRequiredNonSystemFieldIds, fieldDefinition.id);\n\n    return this.isFieldEditable(fieldDefinition) && !isAlwaysRequiredNonSystemField;\n  }\n\n  isSubmitEditable(fieldDefinition: IFieldDefinition, definitionModel: IRecordDefinitionModel): boolean {\n    return this.isFieldEditable(fieldDefinition) && !definitionModel.isAuditRecordDefinition;\n  }\n\n  arePermissionsEditable(fieldDefinition: IFieldDefinition, definitionModel: IRecordDefinitionModel): boolean {\n    return (\n      (fieldDefinition.id !== RX_RECORD_DEFINITION.coreFieldIds.id &&\n        this.rxFieldDefinitionService.isPermissionsCustomizationEnabled(fieldDefinition) &&\n        !(\n          this.rxFieldDefinitionService.isJoinedField(fieldDefinition) &&\n          fieldDefinition.id !== RX_RECORD_DEFINITION.coreFieldIds.displayId\n        ) &&\n        !definitionModel.isAuditRecordDefinition &&\n        !includes(RX_RECORD_DEFINITION.AR_AUDIT_FIELD_IDS, fieldDefinition.id)) ||\n      fieldDefinition.allowPermissionsEdit\n    );\n  }\n\n  isAuditingEditable(fieldDefinition: IFieldDefinition, definitionModel: IRecordDefinitionModel): boolean {\n    return (\n      !this.rxFieldDefinitionService.isJoinedField(fieldDefinition) &&\n      !this.rxFieldDefinitionService.isInheritedField(fieldDefinition) &&\n      !definitionModel.isAuditRecordDefinition\n    );\n  }\n\n  isFieldIdDisabled(fieldDefinition: IFieldDefinition, skipValidate = false): boolean {\n    return (\n      Boolean(fieldDefinition.lastUpdateTime) ||\n      (!this.rxFieldDefinitionService.isJoinedField(fieldDefinition) &&\n        (this.rxFieldDefinitionService.isReservedField(fieldDefinition, skipValidate) ||\n          this.rxFieldDefinitionService.isInheritedField(fieldDefinition)))\n    );\n  }\n\n  isDefaultValueEditable(fieldDefinition: IFieldDefinition, definitionModel: IRecordDefinitionModel): boolean {\n    return (\n      !(\n        this.rxFieldDefinitionService.isReadOnly(fieldDefinition) &&\n        fieldDefinition.id !== RX_RECORD_DEFINITION.coreFieldIds.displayId\n      ) &&\n      this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition) &&\n      !this.rxRecordDefinitionService.isJoinRecord(definitionModel) &&\n      !definitionModel.isAuditRecordDefinition\n    );\n  }\n\n  isLengthEditable(fieldDefinition: IFieldDefinition, definitionModel: IRecordDefinitionModel): boolean {\n    let isEditable = false;\n\n    if (!this.rxRecordDefinitionService.isJoinRecord(definitionModel)) {\n      let isReadonlyField = false;\n\n      // As an exception, the Length of the Display ID field should be editable for Regular records (if customization is enabled)\n      if (fieldDefinition.id !== RX_RECORD_DEFINITION.coreFieldIds.displayId) {\n        isReadonlyField =\n          this.rxFieldDefinitionService.isReadOnly(fieldDefinition) ||\n          includes(RX_RECORD_DEFINITION.AR_CORE_FIELD_IDS, fieldDefinition.id);\n      }\n\n      isEditable =\n        !isReadonlyField &&\n        this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition) &&\n        !definitionModel.isAuditRecordDefinition;\n    }\n\n    return isEditable;\n  }\n\n  isStoreEncryptedVisible(\n    fieldDefinition: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel\n  ): boolean {\n    return (\n      !this.rxRecordDefinitionService.isCustomRecord(definitionModel) &&\n      !this.rxFieldDefinitionService.isExternalRecordField(fieldDefinition)\n    );\n  }\n\n  isStoreEncryptedEditable(fieldDefinition: IFieldDefinition): boolean {\n    return this.isFieldEditable(fieldDefinition) && !includes(RX_RECORD_DEFINITION.keyFieldIds, fieldDefinition.id);\n  }\n\n  isStoreHashedVisible(fieldDefinition: IFieldDefinition, definitionModel: IRecordDefinitionModel) {\n    return (\n      !this.rxRecordDefinitionService.isCustomRecord(definitionModel) &&\n      !this.rxFieldDefinitionService.isExternalRecordField(fieldDefinition)\n    );\n  }\n\n  isStoreHashedEditable(fieldDefinition: IFieldDefinition, definitionModel: IRecordDefinitionModel): boolean {\n    return (\n      this.isFieldEditable(fieldDefinition) &&\n      !includes(RX_RECORD_DEFINITION.coreFieldIds, fieldDefinition.id) &&\n      !definitionModel.isAuditRecordDefinition\n    );\n  }\n\n  isNamedListEditable(fieldDefinition: IFieldDefinition, definitionModel: IRecordDefinitionModel): boolean {\n    return (\n      this.isFieldEditable(fieldDefinition) &&\n      !includes(RX_RECORD_DEFINITION.keyFieldIds, fieldDefinition.id) &&\n      !definitionModel.isAuditRecordDefinition\n    );\n  }\n\n  isFieldMappingEditable(fieldDefinition: IFieldDefinition): boolean {\n    return this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition);\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { RecordFieldOption } from '@helix/platform/record/api';\n\n@Component({\n  selector: 'rx-field-option-editor',\n  templateUrl: './field-option-editor.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: FieldOptionEditorComponent,\n      multi: true\n    }\n  ]\n})\nexport class FieldOptionEditorComponent extends ValueAccessor<RecordFieldOption> implements OnInit {\n  isRequired: boolean;\n\n  ngOnInit(): void {\n    this.isRequired = this.value === RecordFieldOption.Required || this.value === RecordFieldOption.System;\n  }\n\n  onSelectionChange(): void {\n    this.value = this.isRequired ? RecordFieldOption.Required : RecordFieldOption.Optional;\n  }\n}\n","<adapt-rx-control-label\n  label=\"{{ 'com.bmc.arsys.rx.client.record-designer.field-properties.required-field.label' | translate }}\"\n>\n</adapt-rx-control-label>\n\n<adapt-rx-switch\n  [(ngModel)]=\"isRequired\"\n  [disabled]=\"isDisabled\"\n  (ngModelChange)=\"onSelectionChange()\"\n></adapt-rx-switch>\n","import { RX_NUMBER, RxIdService } from '@helix/platform/utils';\nimport { RX_RECORD_DEFINITION, RxFieldDefinitionService, RxRecordDefinitionService } from '@helix/platform/record/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IFormBuilderConfig, RX_PERMISSION } from '@helix/platform/shared/api';\nimport {\n  BooleanFormControlComponent,\n  CounterFormControlComponent,\n  ICheckboxFormControlOptions,\n  ICounterFormControlOptions,\n  ILabelFormControlOptions,\n  IPermissionEditorComponentOptions,\n  ISelectFormControlOptions,\n  ISwitcherFormControlOptions,\n  ITextFormControlOptions,\n  LabelFormControlComponent,\n  RxPermissionEditorComponent,\n  SelectFormControlComponent,\n  SwitchFormControlComponent,\n  TextareaFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { Injector } from '@angular/core';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { RxFieldDefinitionInspectorHelperService } from './field-definition-inspector-helper.service';\nimport { includes, inRange, isEmpty, isNumber, trim } from 'lodash';\nimport { FieldOptionEditorComponent } from '../field-option-editor/field-option-editor.component';\n\nexport abstract class RxBaseFieldDefinitionService {\n  abstract readonly resourceType: string;\n  protected translateService = this.injector.get(TranslateService);\n  protected rxIdService = this.injector.get(RxIdService);\n  protected rxFieldDefinitionService = this.injector.get(RxFieldDefinitionService);\n  protected rxFieldDefinitionInspectorHelperService = this.injector.get(RxFieldDefinitionInspectorHelperService);\n  protected rxRecordDefinitionService = this.injector.get(RxRecordDefinitionService);\n\n  constructor(private injector: Injector) {}\n\n  getNewFieldDefinitionModel(fieldProperties: Partial<IRecordFieldDefinitionModel>): IRecordFieldDefinitionModel {\n    return {\n      id: this.rxIdService.generate(),\n      name: this.translateService.instant('com.bmc.arsys.rx.client.designer.default-field-name.label'),\n      description: null,\n      fieldOption: RX_RECORD_DEFINITION.fieldOptions.optional,\n      defaultValue: null,\n      allowPermissionsOverlay: true,\n      allowOtherPropertiesOverlay: true,\n      resourceType: this.resourceType,\n      ...fieldProperties\n    } as IRecordFieldDefinitionModel;\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const isJoinedField = this.rxFieldDefinitionService.isJoinedField(fieldModel);\n    const isExternalRecordField = this.rxFieldDefinitionService.isExternalRecordField(fieldModel);\n\n    return [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n        controls: [\n          {\n            name: 'name',\n            component: TextFormControlComponent,\n            isDisabled: !this.rxFieldDefinitionInspectorHelperService.isNameEditable(fieldModel),\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n              required: true\n            } as ITextFormControlOptions\n          },\n          {\n            name: 'description',\n            component: TextareaFormControlComponent,\n            isDisabled:\n              isReadOnly ||\n              !this.rxFieldDefinitionInspectorHelperService.isDescriptionEditable(fieldModel, definitionModel),\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label')\n            }\n          },\n          {\n            name: 'resourceType',\n            component: SelectFormControlComponent,\n            isDisabled: true,\n            options: {\n              required: true,\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.data-type.label'),\n              options: [\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.attachment.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.attachment.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.boolean.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.boolean.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.dateOnly.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.dateTime.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.dateTime.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.decimal.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.decimal.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.real.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.real.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.integer.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.integer.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.localizedCharacter.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.localizedCharacter.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.selection.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.selection.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.character.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.character.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.timeOnly.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.timeOnly.labelKey)\n                }\n              ]\n            } as ISelectFormControlOptions\n          }\n        ]\n      },\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.details.label'),\n        controls: [\n          {\n            name: 'fieldOption',\n            component: FieldOptionEditorComponent,\n            isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isRequiredEditable(fieldModel)\n          },\n          {\n            name: 'anyUserAllowedToSubmit',\n            component: SwitchFormControlComponent,\n            isDisabled:\n              isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isSubmitEditable(fieldModel, definitionModel),\n            options: {\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.allow-anyone-to-submit.label'\n              )\n            } as ISwitcherFormControlOptions\n          },\n          {\n            name: 'permissions',\n            component: RxPermissionEditorComponent,\n            isDisabled:\n              isReadOnly ||\n              !this.rxFieldDefinitionInspectorHelperService.arePermissionsEditable(fieldModel, definitionModel),\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.permissions.label'),\n              type: 'config',\n              permissionScope: RX_PERMISSION.permissionScope.all\n            } as IPermissionEditorComponentOptions\n          },\n          {\n            name: '',\n            component: LabelFormControlComponent,\n            options: {\n              labelKey: 'com.bmc.arsys.rx.client.record-designer.definition-properties.auditing.title'\n            } as ILabelFormControlOptions\n          },\n          {\n            name: 'audit',\n            component: BooleanFormControlComponent,\n            isDisabled:\n              isReadOnly ||\n              !this.rxFieldDefinitionInspectorHelperService.isAuditingEditable(fieldModel, definitionModel),\n            options: {\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.auditing-options.audit.label'\n              ),\n              tooltip: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.auditing-options.audit.tooltip'\n              ),\n              shouldDisplayAsCheckbox: true\n            } as ICheckboxFormControlOptions\n          },\n          {\n            name: 'copy',\n            component: BooleanFormControlComponent,\n            isDisabled:\n              fieldModel.audit ||\n              isReadOnly ||\n              !this.rxFieldDefinitionInspectorHelperService.isAuditingEditable(fieldModel, definitionModel),\n            options: {\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.auditing-options.copy.label'\n              ),\n              tooltip: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.auditing-options.copy.tooltip'\n              ),\n              shouldDisplayAsCheckbox: true\n            } as ICheckboxFormControlOptions\n          },\n          {\n            name: 'id',\n            component: CounterFormControlComponent,\n            isDisabled: this.rxFieldDefinitionInspectorHelperService.isFieldIdDisabled(\n              fieldModel,\n              fieldModel.isNewField\n            ),\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.field-id.label'),\n              allowIntegerOnly: true\n            } as ICounterFormControlOptions\n          }\n        ]\n      }\n    ] as IFormBuilderConfig;\n  }\n\n  validate(fieldModel: IRecordFieldDefinitionModel, definitionModel: IRecordDefinitionModel): IValidationIssue[] {\n    const issues: IValidationIssue[] = [];\n\n    if (isEmpty(trim(fieldModel.name))) {\n      issues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label')\n          }\n        ),\n        data: {\n          propertyName: 'name',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (!RX_RECORD_DEFINITION.validDefinitionNameRegex.test(fieldModel.name)) {\n      issues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label')\n          }\n        ),\n        data: {\n          propertyName: 'name',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (\n      !fieldModel.lastUpdateTime &&\n      isNumber(fieldModel.id) &&\n      !this.rxFieldDefinitionService.isExternalRecordField(fieldModel) &&\n      inRange(fieldModel.id, 1, RX_RECORD_DEFINITION.AR_MAX_RESERVED_FIELD_ID + 1) &&\n      !includes(RX_RECORD_DEFINITION.AR_CORE_FIELD_IDS, fieldModel.id)\n    ) {\n      issues.push({\n        type: ValidationIssueType.Warning,\n        data: {\n          propertyName: 'id',\n          guid: fieldModel.guid\n        },\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.validation.field-id-in-bmc-reserved-range-warning.message'\n        )\n      });\n    }\n\n    if (fieldModel.id && !inRange(fieldModel.id as number, 1, RX_NUMBER.maxInteger + 1)) {\n      issues.push({\n        type: ValidationIssueType.Error,\n        data: {\n          propertyName: 'id',\n          guid: fieldModel.guid\n        },\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.validation.invalid-field-id-range.message',\n          { max: RX_NUMBER.maxInteger }\n        )\n      });\n    }\n\n    return issues;\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { CounterFormControlComponent, ICounterFormControlOptions } from '@helix/platform/shared/components';\nimport { RX_NUMBER } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxAttachmentFieldDefinitionService extends RxBaseFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.attachment.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    // Adding controls specific to attachment field to Details section\n    inspectorConfig[1].controls.push({\n      name: 'maxSize',\n      component: CounterFormControlComponent,\n      isDisabled: isReadOnly,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.max-file-size.label'),\n        allowIntegerOnly: true,\n        minValue: 0,\n        maxValue: RX_NUMBER.maxInteger\n      } as ICounterFormControlOptions\n    });\n\n    return inspectorConfig;\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { ISelectFormControlOptions, SelectFormControlComponent } from '@helix/platform/shared/components';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxBooleanFieldDefinitionService extends RxBaseFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.boolean.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    // Adding controls specific to boolean field to Details section\n    inspectorConfig[1].controls.push({\n      name: 'defaultValue',\n      component: SelectFormControlComponent,\n      isDisabled: isReadOnly,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n        emptyOption: true,\n        options: [\n          {\n            id: '0',\n            name: this.translateService.instant('com.bmc.arsys.rx.client.common.true')\n          },\n          {\n            id: '1',\n            name: this.translateService.instant('com.bmc.arsys.rx.client.common.false')\n          }\n        ]\n      } as ISelectFormControlOptions\n    });\n\n    return inspectorConfig;\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport {\n  CounterFormControlComponent,\n  ICounterFormControlOptions,\n  IDefinitionPickerComponentOptions,\n  ISelectFormControlOptions,\n  ISwitcherFormControlOptions,\n  ITextFormControlOptions,\n  RxDefinitionPickerComponent,\n  RxDefinitionPickerType,\n  SelectFormControlComponent,\n  SwitchFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { inRange, size } from 'lodash';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { RxNumberUtilsService } from '@helix/platform/utils';\nimport { Tooltip } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxCharacterFieldDefinitionService extends RxBaseFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.character.resourceType;\n\n  constructor(injector: Injector, private rxNumberUtilsService: RxNumberUtilsService) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    if (this.rxFieldDefinitionInspectorHelperService.isStoreEncryptedVisible(fieldModel, definitionModel)) {\n      inspectorConfig[1].controls.push({\n        name: 'shouldPersistEncrypted',\n        component: SwitchFormControlComponent,\n        isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isStoreEncryptedEditable(fieldModel),\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.field-properties.store-encrypted.label'\n          )\n        } as ISwitcherFormControlOptions\n      });\n    }\n\n    if (this.rxFieldDefinitionInspectorHelperService.isStoreHashedVisible(fieldModel, definitionModel)) {\n      inspectorConfig[1].controls.push({\n        name: 'shouldPersistHashed',\n        component: SwitchFormControlComponent,\n        isDisabled:\n          isReadOnly ||\n          !this.rxFieldDefinitionInspectorHelperService.isStoreHashedEditable(fieldModel, definitionModel),\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.field-properties.store-hashed.label'\n          )\n        } as ISwitcherFormControlOptions\n      });\n    }\n\n    inspectorConfig[1].controls = inspectorConfig[1].controls.concat([\n      {\n        name: 'namedListDefinition',\n        component: RxDefinitionPickerComponent,\n        isDisabled:\n          isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isNamedListEditable(fieldModel, definitionModel),\n        options: {\n          definitionType: RxDefinitionPickerType.NamedList,\n          label: this.translateService.instant('com.bmc.arsys.rx.client.definition-type.named-list.label')\n        } as IDefinitionPickerComponentOptions\n      },\n      {\n        name: 'maxLength',\n        component: CounterFormControlComponent,\n        isDisabled:\n          isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isLengthEditable(fieldModel, definitionModel),\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.length.label'),\n          tooltip:\n            fieldModel.id === RX_RECORD_DEFINITION.coreFieldIds.displayId &&\n            !this.rxRecordDefinitionService.isJoinRecord(definitionModel) &&\n            !fieldModel.isNewField\n              ? this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.field-properties.display-id.length.tooltip'\n                )\n              : undefined,\n          allowIntegerOnly: true,\n          minValue: 0\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'defaultValue',\n        component: TextFormControlComponent,\n        isDisabled:\n          isReadOnly ||\n          !this.rxFieldDefinitionInspectorHelperService.isDefaultValueEditable(fieldModel, definitionModel),\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n          tooltip:\n            fieldModel.id === RX_RECORD_DEFINITION.coreFieldIds.displayId &&\n            !this.rxRecordDefinitionService.isJoinRecord(definitionModel) &&\n            !fieldModel.isNewField\n              ? new Tooltip(\n                  this.translateService.instant(\n                    'com.bmc.arsys.rx.client.record-designer.field-properties.display-id.default-value.tooltip'\n                  )\n                )\n              : undefined,\n          allowIntegerOnly: true\n        } as ITextFormControlOptions\n      },\n      {\n        name: 'pattern',\n        component: SelectFormControlComponent,\n        isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isFieldEditable(fieldModel),\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.field-properties.pattern.label'\n          ),\n          emptyOption: true,\n          options: [\n            {\n              name: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.alphabetical.label'\n              ),\n              id: '$ALPHA$'\n            },\n            {\n              name: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.alphanumeric.label'\n              ),\n              id: '$ALNUM$'\n            },\n            {\n              name: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.lowercase.label'\n              ),\n              id: '$LOWER$'\n            },\n            {\n              name: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.named-list.label'\n              ),\n              id: '$NAMEDLIST$'\n            },\n            {\n              name: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.numeric.label'\n              ),\n              id: '$DIGIT$'\n            },\n            {\n              name: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.uppercase.label'\n              ),\n              id: '$UPPER$'\n            }\n          ]\n        } as ISelectFormControlOptions\n      }\n    ]);\n\n    return inspectorConfig;\n  }\n\n  validate(fieldModel: IRecordFieldDefinitionModel, definitionModel: IRecordDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel, definitionModel);\n\n    if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxLength) && Number(fieldModel.maxLength) < 0) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.invalid-min-length-error.message'\n        ),\n        data: {\n          propertyName: 'maxLength',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (\n      fieldModel.id === RX_RECORD_DEFINITION.coreFieldIds.displayId &&\n      (this.rxRecordDefinitionService.isRegularRecord(definitionModel) ||\n        this.rxRecordDefinitionService.isExternalRecord(definitionModel))\n    ) {\n      if (!(fieldModel.maxLength === 1 || inRange(fieldModel.maxLength, 5, 16))) {\n        validationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.validation.invalid-max-length.message'\n          ),\n          data: {\n            propertyName: 'maxLength',\n            guid: fieldModel.guid\n          }\n        });\n      }\n\n      if (\n        (fieldModel.maxLength !== 1 && fieldModel.maxLength <= size(fieldModel.defaultValue)) ||\n        (fieldModel.maxLength === 1 && size(fieldModel.defaultValue) >= 15)\n      ) {\n        validationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.validation.invalid-display-id-range.message'\n          ),\n          data: {\n            propertyName: 'maxLength',\n            guid: fieldModel.guid\n          }\n        });\n      }\n    }\n\n    return validationIssues;\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { noop } from 'lodash';\nimport { RxModalService } from '@helix/platform/ui-kit';\nimport { LocalizedCharacterFieldValueModalComponent, ValueAccessor } from '@helix/platform/shared/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IPlainObject } from '@helix/platform/shared/api';\nimport { ILocalizedCharacterFieldEditorOptions } from './localized-character-field-editor.interface';\n\n@Component({\n  selector: 'rx-localized-character-field-editor',\n  templateUrl: './localized-character-field-editor.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: LocalizedCharacterFieldEditorComponent,\n      multi: true\n    }\n  ]\n})\nexport class LocalizedCharacterFieldEditorComponent extends ValueAccessor<IPlainObject> {\n  @Input()\n  options: ILocalizedCharacterFieldEditorOptions;\n\n  constructor(private rxModalService: RxModalService, private translateService: TranslateService) {\n    super();\n  }\n\n  localize(): void {\n    this.rxModalService\n      .openModal({\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.view-components.localized-character-field.dialog.title'\n        ),\n        data: {\n          valueByLocale: { ...this.value },\n          hideCurrentLocale: true,\n          isReadOnly: this.options.isReadOnly\n        },\n        size: 'sm',\n        content: LocalizedCharacterFieldValueModalComponent\n      })\n      .then((data) => {\n        if (data) {\n          this.value = data.valueByLocale;\n        }\n      })\n      .catch(noop);\n  }\n}\n","<div>\n  <button\n    type=\"button\"\n    class=\"localize-button btn btn-link focusable d-icon-left-pencil p-0 float-end\"\n    (click)=\"localize()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.view-components.localized-character-field.button.localize.label' | translate }}\n  </button>\n\n  <div class=\"pl-1\">{{ value['en-US'] }}</div>\n</div>\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { CounterFormControlComponent, ICounterFormControlOptions } from '@helix/platform/shared/components';\nimport { LocalizedCharacterFieldEditorComponent } from '../localized-character-field-editor/localized-character-field-editor.component';\nimport { ILocalizedCharacterFieldEditorOptions } from '../localized-character-field-editor/localized-character-field-editor.interface';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { RxNumberUtilsService } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxLocalizedCharacterFieldDefinitionService extends RxBaseFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.localizedCharacter.resourceType;\n\n  constructor(injector: Injector, private rxNumberUtilsService: RxNumberUtilsService) {\n    super(injector);\n  }\n\n  getNewFieldDefinitionModel(fieldProperties: Partial<IRecordFieldDefinitionModel>) {\n    return super.getNewFieldDefinitionModel({\n      ...fieldProperties,\n      maxLength: 254\n    });\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    inspectorConfig[1].controls = inspectorConfig[1].controls.concat([\n      {\n        name: 'maxLength',\n        component: CounterFormControlComponent,\n        isDisabled: isReadOnly,\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.length.label'),\n          minValue: 0,\n          maxValue: 254,\n          allowIntegerOnly: true\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'defaultValueByLocale',\n        component: LocalizedCharacterFieldEditorComponent,\n        options: {\n          isReadOnly: isReadOnly\n        } as ILocalizedCharacterFieldEditorOptions\n      }\n    ]);\n\n    return inspectorConfig;\n  }\n\n  validate(fieldModel: IRecordFieldDefinitionModel, definitionModel: IRecordDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel, definitionModel);\n\n    if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxLength) && Number(fieldModel.maxLength) < 0) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.invalid-min-length-error.message'\n        ),\n        data: {\n          propertyName: 'maxLength',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { DateTimeFormControlComponent, IDateFormControlOptions } from '@helix/platform/shared/components';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxDateTimeFieldDefinitionService extends RxBaseFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.dateTime.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    // Adding controls specific to date only field to Details section\n    inspectorConfig[1].controls.push({\n      name: 'defaultValue',\n      component: DateTimeFormControlComponent,\n      isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isFieldEditable(fieldModel),\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n      } as IDateFormControlOptions\n    });\n\n    return inspectorConfig;\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { DateFormControlComponent, IDateFormControlOptions } from '@helix/platform/shared/components';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxDateOnlyFieldDefinitionService extends RxBaseFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    // Adding controls specific to date only field to Details section\n    inspectorConfig[1].controls.push({\n      name: 'defaultValue',\n      isDisabled: isReadOnly,\n      component: DateFormControlComponent,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n      } as IDateFormControlOptions\n    });\n\n    return inspectorConfig;\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { IDateFormControlOptions, TimeFormControlComponent } from '@helix/platform/shared/components';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxTimeOnlyFieldDefinitionService extends RxBaseFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.timeOnly.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    inspectorConfig[1].controls.push({\n      name: 'defaultValue',\n      isDisabled: isReadOnly,\n      component: TimeFormControlComponent,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n      } as IDateFormControlOptions\n    });\n\n    return inspectorConfig;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { CounterFormControlComponent, ICounterFormControlOptions } from '@helix/platform/shared/components';\nimport { isNil, omitBy } from 'lodash';\nimport { RxNumberUtilsService } from '@helix/platform/utils';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class RxNumericFieldDefinitionService extends RxBaseFieldDefinitionService {\n  abstract readonly minPrecision: number;\n  abstract readonly maxPrecision: number;\n  abstract readonly minValue: number;\n  abstract readonly maxValue: number;\n  abstract readonly allowOnlyInteger: boolean;\n\n  constructor(injector: Injector, private rxNumberUtilsService: RxNumberUtilsService) {\n    super(injector);\n  }\n\n  validate(fieldModel: IRecordFieldDefinitionModel, definitionModel: IRecordDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel, definitionModel);\n\n    if (fieldModel.defaultValue && Number(fieldModel.defaultValue) < this.minValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n            minValue: this.minValue\n          }\n        ),\n        data: {\n          propertyName: 'defaultValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.defaultValue && Number(fieldModel.defaultValue) > this.maxValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n            maxValue: this.maxValue\n          }\n        ),\n        data: {\n          propertyName: 'defaultValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.minValue && Number(fieldModel.minValue) < this.minValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n            ),\n            minValue: this.minValue\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.minValue && Number(fieldModel.minValue) > this.maxValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n            ),\n            maxValue: this.maxValue\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.maxValue && Number(fieldModel.maxValue) < this.minValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n            ),\n            minValue: this.minValue\n          }\n        ),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.maxValue && Number(fieldModel.maxValue) > this.maxValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n            ),\n            maxValue: this.maxValue\n          }\n        ),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.defaultValue) &&\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.minValue) &&\n      Number(fieldModel.defaultValue) >= this.minValue &&\n      Number(fieldModel.defaultValue) < Number(fieldModel.minValue)\n    ) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n            minValue: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'defaultValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.defaultValue) &&\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxValue) &&\n      Number(fieldModel.defaultValue) <= this.maxValue &&\n      Number(fieldModel.defaultValue) > Number(fieldModel.maxValue)\n    ) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n            maxValue: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'defaultValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.minValue) &&\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxValue) &&\n      Number(fieldModel.minValue) > Number(fieldModel.maxValue)\n    ) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n            ),\n            maxValue: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (isNil(fieldModel.minValue)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (isNil(fieldModel.maxValue)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (this.resourceType !== RX_RECORD_DEFINITION.dataTypes.integer.resourceType && isNil(fieldModel.precision)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.field-properties.precision.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    // Adding controls specific to decimal field to Details section\n    inspectorConfig[1].controls = inspectorConfig[1].controls.concat([\n      {\n        name: 'precision',\n        component: CounterFormControlComponent,\n        isDisabled: isReadOnly,\n        options: omitBy(\n          {\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.field-properties.precision.label'\n            ),\n            required: true,\n            allowIntegerOnly: true,\n            minValue: this.minPrecision,\n            maxValue: this.maxPrecision\n          },\n          isNil\n        ) as ICounterFormControlOptions\n      },\n\n      {\n        name: 'minValue',\n        component: CounterFormControlComponent,\n        isDisabled: isReadOnly,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n          ),\n          required: true,\n          allowIntegerOnly: this.allowOnlyInteger,\n          minValue: this.minValue,\n          maxValue: this.maxValue\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'maxValue',\n        component: CounterFormControlComponent,\n        isDisabled: isReadOnly,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n          ),\n          required: true,\n          allowIntegerOnly: this.allowOnlyInteger,\n          minValue: this.minValue,\n          maxValue: this.maxValue\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'defaultValue',\n        component: CounterFormControlComponent,\n        isDisabled: isReadOnly,\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n          allowIntegerOnly: this.allowOnlyInteger,\n          minValue: this.minValue,\n          maxValue: this.maxValue\n        } as ICounterFormControlOptions\n      }\n    ]);\n\n    return inspectorConfig;\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { Injectable } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { RxNumericFieldDefinitionService } from './numeric-field-definition.service';\nimport { RX_NUMBER } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxIntegerFieldDefinitionService extends RxNumericFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.integer.resourceType;\n  minPrecision = null;\n  maxPrecision = null;\n  minValue = RX_NUMBER.minInteger;\n  maxValue = RX_NUMBER.maxInteger;\n  allowOnlyInteger = true;\n\n  getNewFieldDefinitionModel(fieldProperties: Partial<IRecordFieldDefinitionModel>) {\n    return super.getNewFieldDefinitionModel({\n      ...fieldProperties,\n      minValue: this.minValue,\n      maxValue: this.maxValue\n    });\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    // Removing Precision control not required for integer field\n    inspectorConfig[1].controls.splice(7, 1);\n\n    return inspectorConfig;\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { Injectable } from '@angular/core';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { RxNumericFieldDefinitionService } from './numeric-field-definition.service';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { inRange } from 'lodash';\nimport { RX_NUMBER } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class RxDecimalFieldDefinitionService extends RxNumericFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.decimal.resourceType;\n  minPrecision = 0;\n  maxPrecision = 9;\n  minValue = RX_NUMBER.minDecimal;\n  maxValue = RX_NUMBER.maxDecimal;\n  allowOnlyInteger = false;\n\n  getNewFieldDefinitionModel(fieldProperties: Partial<IRecordFieldDefinitionModel>) {\n    return super.getNewFieldDefinitionModel({\n      ...fieldProperties,\n      precision: 2,\n      minValue: this.minValue,\n      maxValue: this.maxValue\n    });\n  }\n\n  validate(fieldModel: IRecordFieldDefinitionModel, definitionModel: IRecordDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel, definitionModel);\n\n    if (!inRange(fieldModel.precision, this.minPrecision, this.maxPrecision + 1)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.validation.invalid-precision-range.message',\n          {\n            min: this.minPrecision,\n            max: this.maxPrecision\n          }\n        ),\n        data: {\n          propertyName: 'precision',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { Injectable } from '@angular/core';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { RxNumericFieldDefinitionService } from './numeric-field-definition.service';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRealFieldDefinitionService extends RxNumericFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.real.resourceType;\n  minPrecision: -1;\n  maxPrecision = null;\n  minValue = -1.845e19;\n  maxValue = 1.845e19;\n  allowOnlyInteger = false;\n  private AR_PRECISION_NONE = -1;\n\n  getNewFieldDefinitionModel(fieldProperties: Partial<IRecordFieldDefinitionModel>) {\n    return super.getNewFieldDefinitionModel({\n      ...fieldProperties,\n      precision: 6,\n      minValue: this.minValue,\n      maxValue: this.maxValue\n    });\n  }\n\n  validate(fieldModel: IRecordFieldDefinitionModel, definitionModel: IRecordDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel, definitionModel);\n\n    if (\n      !isFinite(fieldModel.precision) ||\n      (fieldModel.precision < 1 && fieldModel.precision != this.AR_PRECISION_NONE)\n    ) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.validation.invalid-real-field-precision-range.message'\n        ),\n        data: {\n          propertyName: 'precision',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { ISelectionFieldOptionProperties, SelectionFieldOptionsComponent } from '@helix/platform/shared/components';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { isEmpty } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxSelectionFieldDefinitionService extends RxBaseFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.selection.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    inspectorConfig[1].controls.push({\n      name: 'selectionFieldOptionProperties',\n      component: SelectionFieldOptionsComponent,\n      options: {\n        isReadOnly: !this.rxFieldDefinitionInspectorHelperService.isFieldEditable(fieldModel)\n      } as ISelectionFieldOptionProperties\n    });\n\n    return inspectorConfig;\n  }\n\n  validate(fieldModel: IRecordFieldDefinitionModel, definitionModel: IRecordDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel, definitionModel);\n\n    if (isEmpty(fieldModel.selectionFieldOptionProperties?.optionNamesById)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          { propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.options.label') }\n        ),\n        data: {\n          propertyName: 'selectionFieldOptionProperties',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxAttachmentFieldDefinitionService } from './attachment-field-definition.service';\nimport { RxBooleanFieldDefinitionService } from './boolean-field-definition.service';\nimport { RxCharacterFieldDefinitionService } from './character-field-definition.service';\nimport { RxDateOnlyFieldDefinitionService } from './date-only-field-definition.service';\nimport { RxDateTimeFieldDefinitionService } from './date-time-field-definition.service';\nimport { RxDecimalFieldDefinitionService } from './decimal-field-definition.service';\nimport { RxIntegerFieldDefinitionService } from './integer-field-definition.service';\nimport { RxLocalizedCharacterFieldDefinitionService } from './localized-character-field-definition.service';\nimport { RxRealFieldDefinitionService } from './real-field-definition.service';\nimport { RxSelectionFieldDefinitionService } from './selection-field-definition.service';\nimport { RxTimeOnlyFieldDefinitionService } from './time-only-field-definition.service';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { IValidationIssue } from '@helix/platform/ui-kit';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxFieldDefinitionManagerService {\n  private fieldServices = new Map<string, RxBaseFieldDefinitionService>();\n\n  constructor(\n    rxAttachmentFieldDefinitionService: RxAttachmentFieldDefinitionService,\n    rxBooleanFieldDefinitionService: RxBooleanFieldDefinitionService,\n    rxCharacterFieldDefinitionService: RxCharacterFieldDefinitionService,\n    rxLocalizedCharacterFieldDefinitionService: RxLocalizedCharacterFieldDefinitionService,\n    rxDateTimeFieldDefinitionService: RxDateTimeFieldDefinitionService,\n    rxDateOnlyFieldDefinitionService: RxDateOnlyFieldDefinitionService,\n    rxTimeOnlyFieldDefinitionService: RxTimeOnlyFieldDefinitionService,\n    rxIntegerFieldDefinitionService: RxIntegerFieldDefinitionService,\n    rxDecimalFieldDefinitionService: RxDecimalFieldDefinitionService,\n    rxRealFieldDefinitionService: RxRealFieldDefinitionService,\n    rxSelectionFieldDefinitionService: RxSelectionFieldDefinitionService\n  ) {\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.attachment.resourceType, rxAttachmentFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.boolean.resourceType, rxBooleanFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.character.resourceType, rxCharacterFieldDefinitionService);\n\n    this.fieldServices.set(\n      RX_RECORD_DEFINITION.dataTypes.localizedCharacter.resourceType,\n      rxLocalizedCharacterFieldDefinitionService\n    );\n\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.dateTime.resourceType, rxDateTimeFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType, rxDateOnlyFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.timeOnly.resourceType, rxTimeOnlyFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.integer.resourceType, rxIntegerFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.decimal.resourceType, rxDecimalFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.real.resourceType, rxRealFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.selection.resourceType, rxSelectionFieldDefinitionService);\n  }\n\n  getNewFieldDefinitionModel(resourceType: string, fieldProperties: Partial<IRecordFieldDefinitionModel>) {\n    return this.fieldServices.get(resourceType).getNewFieldDefinitionModel(fieldProperties);\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    return this.fieldServices\n      .get(fieldModel.resourceType)\n      .getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n  }\n\n  validate(fieldModel: IRecordFieldDefinitionModel, definitionModel: IRecordDefinitionModel): IValidationIssue[] {\n    return this.fieldServices.get(fieldModel.resourceType).validate(fieldModel, definitionModel);\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IPlainObject, RxNotificationService } from '@helix/platform/shared/api';\nimport { forEach, includes, isEmpty, keys, map as _map, pick, remove, some, union } from 'lodash';\nimport {\n  IFieldDefinition,\n  IRecordDefinition,\n  RX_RECORD_DEFINITION,\n  RxRecordDefinitionCacheService,\n  RxFieldDefinitionService\n} from '@helix/platform/record/api';\nimport {\n  IDefinitionPickerComponentOptions,\n  RxDefinitionPickerScope,\n  RxDefinitionPickerType,\n  ValueAccessor\n} from '@helix/platform/shared/components';\nimport {\n  IInheritanceDescriptor,\n  IInheritanceOptions,\n  IInheritanceSelectorControlValue,\n  IRecordInheritanceSelectorOptions\n} from './record-inheritance-editor.interfaces';\nimport { BehaviorSubject, combineLatest, iif, of, ReplaySubject } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RxFieldDefinitionManagerService } from '../services/field-definition-manager.service';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { RxGuidService } from '@helix/platform/utils';\n\n@Component({\n  selector: 'rx-record-inheritance-selector',\n  templateUrl: './record-inheritance-editor.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RecordInheritanceEditorComponent,\n      multi: true\n    }\n  ]\n})\nexport class RecordInheritanceEditorComponent\n  extends ValueAccessor<IInheritanceSelectorControlValue>\n  implements OnChanges\n{\n  @Input()\n  options: IRecordInheritanceSelectorOptions;\n\n  inheritFrom: string;\n  isInheritingCoreFields: boolean;\n  state: IPlainObject;\n  private inheritedFieldDefinitions: IRecordFieldDefinitionModel[];\n  private inheritFromRecordDefinition: IRecordDefinitionModel;\n  private isNew: boolean;\n\n  inheritanceDescriptor: IInheritanceDescriptor | null = {\n    inheritingFrom: '',\n    isInheritingRules: true,\n    isInheritingFieldPermissions: true,\n    isInheritingAssociations: true,\n    isInheritingFieldAuditOptions: true\n  };\n\n  inheritanceOptions: IInheritanceOptions;\n\n  recordDefinitionPickerOptions: IDefinitionPickerComponentOptions = {\n    label: this.translateService.instant(\n      'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.record-to-inherit.label'\n    ),\n    definitionType: RxDefinitionPickerType.InheritableRecord,\n    availableDefinitionPickerStates: {\n      definitionButtonsGroups: [RxDefinitionPickerScope.Bundle, RxDefinitionPickerScope.All],\n      search: RxDefinitionPickerScope.All\n    }\n  };\n\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n  private isReadOnlySubject = new BehaviorSubject(false);\n  private isSharedInstanceStorageLockedSubject = new BehaviorSubject(true);\n  private inheritingFromSubject = new BehaviorSubject('');\n  private isMakeFinalDisabledSubject = new BehaviorSubject(false);\n\n  private isSharedInstanceStorageDisabled$ = combineLatest([\n    this.isReadOnlySubject,\n    this.isSharedInstanceStorageLockedSubject\n  ]).pipe(map(([isReadOnly, isSharedInstanceStorage]) => isReadOnly || isSharedInstanceStorage));\n\n  private inheritFromRecordDefinition$ = this.inheritingFromSubject.pipe(\n    switchMap((recordDefinitionName) =>\n      iif(\n        () => Boolean(recordDefinitionName),\n        this.rxRecordDefinitionCacheService.getRecordDefinition(recordDefinitionName),\n        of(null)\n      )\n    ),\n    tap((recordDefinition: IRecordDefinition) => {\n      if (recordDefinition) {\n        this.inheritFromRecordDefinition = recordDefinition as IRecordDefinitionModel;\n        this.isInheritingCoreFields = false;\n\n        if (recordDefinition.isSharedInstanceStorage) {\n          this.inheritanceOptions.isSharedInstanceStorage = true;\n          this.updateInheritanceOptions();\n          this.state.inheritCoreFieldsAutomatically = true;\n          this.isInheritingCoreFields = true;\n        } else {\n          if (this.isNew) {\n            this.inheritanceOptions.isSharedInstanceStorage = false;\n          }\n\n          this.state.inheritCoreFieldsAutomatically = false;\n        }\n\n        this.inheritanceDescriptor.isInheritingRules = true;\n        this.inheritedFieldDefinitions = this.getInheritedFieldDefinitions(recordDefinition);\n\n        forEach(recordDefinition.securityLabels, function (securityLabel) {\n          securityLabel.inherited = true;\n        });\n\n        this.setValue();\n      }\n    })\n  );\n\n  private isCoreFieldsOptionDisabled$ = combineLatest([this.isReadOnlySubject, this.inheritFromRecordDefinition$]).pipe(\n    map(\n      ([isReadOnly, inheritingFromRecordDefinition]) =>\n        !this.inheritFrom ||\n        isReadOnly ||\n        this.state.inheritCoreFieldsAutomatically ||\n        this.state.lockCoreFieldInheritanceOption\n    )\n  );\n\n  vm$ = combineLatest([\n    this.isReadOnlySubject,\n    this.isSharedInstanceStorageDisabled$,\n    this.isMakeFinalDisabledSubject,\n    this.isCoreFieldsOptionDisabled$\n  ]).pipe(\n    map(([isReadOnly, isSharedInstanceStorageDisabled, isMakeFinalDisabled, isCoreFieldsOptionDisabled]) => ({\n      isReadOnly,\n      isSharedInstanceStorageDisabled,\n      isMakeFinalDisabled,\n      isCoreFieldsOptionDisabled\n    }))\n  );\n\n  constructor(\n    private translateService: TranslateService,\n    private rxFieldDefinitionManagerService: RxFieldDefinitionManagerService,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxNotificationService: RxNotificationService,\n    private rxGuidService: RxGuidService,\n    private rxFieldDefinitionService: RxFieldDefinitionService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.options) {\n      this.updateValues();\n    }\n  }\n\n  private updateInheritanceOptions(): void {\n    this.isMakeFinalDisabledSubject.next(\n      this.isReadOnlySubject.value ||\n        (this.inheritanceOptions.isSharedInstanceStorage && !this.inheritingFromSubject.value)\n    );\n\n    if (\n      this.inheritanceOptions.isSharedInstanceStorage &&\n      this.inheritanceOptions.isFinal &&\n      !this.inheritFromRecordDefinition\n    ) {\n      this.inheritanceOptions.isFinal = false;\n    }\n  }\n\n  onInheritanceOptionsChange(): void {\n    this.updateInheritanceOptions();\n    this.setValue();\n  }\n\n  onInheritanceDescriptorChange(): void {\n    if (this.inheritanceDescriptor.isInheritingFieldPermissions) {\n      this.inheritedFieldDefinitions = this.getInheritedFieldDefinitions(this.inheritFromRecordDefinition);\n    }\n\n    this.setValue();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options) {\n      this.updateValues();\n    }\n  }\n\n  onRecordDefinitionNameChange(recordDefinitionName: string): void {\n    this.rxNotificationService.addInfoMessage(\n      this.translateService.instant(\n        'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.inherited-fields-remaining-info.message'\n      )\n    );\n\n    if (recordDefinitionName) {\n      this.inheritingFromSubject.next(recordDefinitionName);\n    } else {\n      this.inheritedFieldDefinitions = [];\n      this.setValue();\n    }\n  }\n\n  onInheritCoreFieldsChange(): void {\n    this.inheritedFieldDefinitions = this.getInheritedFieldDefinitions(this.inheritFromRecordDefinition);\n\n    this.setValue();\n  }\n\n  private getInheritedFieldDefinitions(recordDefinition: IRecordDefinition): IRecordFieldDefinitionModel[] {\n    const newFieldProperties = union(\n      keys(\n        this.rxFieldDefinitionManagerService.getNewFieldDefinitionModel(\n          RX_RECORD_DEFINITION.resourceTypes.character,\n          null\n        )\n      ),\n      [\n        'isInherited',\n        'anyUserAllowedToSubmit',\n        'displayType',\n        'explicitPermissions',\n        'fieldMapping',\n        'fieldTypeName',\n        'maxLength',\n        'maxSize',\n        'maxValue',\n        'minValue',\n        'namedListDefinition',\n        'optionNamesById',\n        'optionLabelsById',\n        'precision',\n        'resourceType',\n        'searchable',\n        'shouldPersistEncrypted',\n        'shouldPersistHashed',\n        'tags',\n        'version'\n      ]\n    );\n\n    if (this.inheritanceDescriptor?.isInheritingFieldPermissions) {\n      newFieldProperties.push('permissions');\n    }\n\n    const inheritedFieldDefinitions: IRecordFieldDefinitionModel[] = _map(\n      recordDefinition.fieldDefinitions,\n      (fieldDefinition: IFieldDefinition) => {\n        fieldDefinition.isInherited = true;\n\n        return {\n          ...pick(fieldDefinition, newFieldProperties),\n          guid: this.rxGuidService.generate(),\n          isCoreField: this.rxFieldDefinitionService.isCoreField(fieldDefinition),\n          selectionFieldOptionProperties:\n            fieldDefinition.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType\n              ? {\n                  defaultValue: null,\n                  optionNamesById: fieldDefinition.optionNamesById,\n                  optionLabelsById: fieldDefinition.optionLabelsById\n                }\n              : null\n        } as IRecordFieldDefinitionModel;\n      }\n    );\n\n    if (!this.isInheritingCoreFields) {\n      remove(inheritedFieldDefinitions, function (fieldDefinition) {\n        return includes(RX_RECORD_DEFINITION.arCoreFieldIds, fieldDefinition.id);\n      });\n    }\n\n    return inheritedFieldDefinitions;\n  }\n\n  private updateValues(): void {\n    if (this.options) {\n      const recordDefinition = this.options.recordDefinition;\n      this.inheritanceOptions = { ...recordDefinition.recordInheritanceSelector.inheritanceOptions };\n\n      if (recordDefinition.recordInheritanceSelector.inheritanceDescriptor) {\n        this.inheritanceDescriptor = { ...recordDefinition.recordInheritanceSelector.inheritanceDescriptor };\n        this.inheritFrom = this.inheritanceDescriptor.inheritingFrom;\n      }\n\n      this.isNew = !recordDefinition.lastUpdateTime;\n\n      this.isReadOnlySubject.next(this.options.isReadOnly);\n      this.isSharedInstanceStorageLockedSubject.next(!this.isNew || !isEmpty(this.inheritFrom));\n\n      if (recordDefinition.inheritanceDescriptor?.inheritingFrom) {\n        this.isSharedInstanceStorageLockedSubject.next(true);\n\n        this.rxRecordDefinitionCacheService\n          .getRecordDefinition(recordDefinition.inheritanceDescriptor.inheritingFrom)\n          .pipe(take(1))\n          .subscribe((inheritFromRecordDefinition) => {\n            if (inheritFromRecordDefinition.isSharedInstanceStorage) {\n              this.state.inheritCoreFieldsAutomatically = true;\n              this.isInheritingCoreFields = true;\n            } else {\n              var fieldDefinitions = recordDefinition.fields;\n\n              this.isInheritingCoreFields = some(fieldDefinitions, function (fieldDefinition) {\n                return fieldDefinition.isInherited && includes(RX_RECORD_DEFINITION.arCoreFieldIds, fieldDefinition.id);\n              });\n            }\n          });\n      }\n\n      this.state = {\n        editMode: !this.isNew,\n        inheritCoreFieldsAutomatically: false,\n        lockCoreFieldInheritanceOption: !this.isNew\n      };\n    }\n  }\n\n  setValue(): void {\n    this.value = {\n      inheritanceOptions: this.inheritanceOptions,\n      inheritanceDescriptor: this.inheritFrom\n        ? { ...this.inheritanceDescriptor, inheritingFrom: this.inheritFrom }\n        : null,\n      isInheritingCoreFields: this.inheritFrom ? this.isInheritingCoreFields : null,\n      inheritedFieldDefinitions: this.inheritedFieldDefinitions\n    };\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n    this.isReadOnlySubject.complete();\n    this.isSharedInstanceStorageLockedSubject.complete();\n    this.inheritingFromSubject.complete();\n    this.isMakeFinalDisabledSubject.complete();\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <adapt-rx-checkbox\n    label=\"{{\n      'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.share-data-with-inheritors.label' | translate\n    }}\"\n    [(ngModel)]=\"inheritanceOptions.isSharedInstanceStorage\"\n    (ngModelChange)=\"onInheritanceOptionsChange()\"\n    [disabled]=\"vm.isSharedInstanceStorageDisabled\"\n    [tooltip]=\"{\n      iconName: 'question_circle_o',\n      content:\n        'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.share-data-with-inheritors.tooltip'\n        | translate,\n      placement: 'bottom',\n      popoverMode: true\n    }\"\n  >\n  </adapt-rx-checkbox>\n\n  <adapt-rx-checkbox\n    label=\"{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.make-abstract.label' | translate }}\"\n    [(ngModel)]=\"inheritanceOptions.isAbstract\"\n    (ngModelChange)=\"onInheritanceOptionsChange()\"\n    [disabled]=\"vm.isReadOnly\"\n    [tooltip]=\"{\n      iconName: 'question_circle_o',\n      content: 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.make-abstract.tooltip' | translate,\n      placement: 'bottom',\n      popoverMode: true\n    }\"\n  >\n  </adapt-rx-checkbox>\n\n  <adapt-rx-checkbox\n    label=\"{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.make-final.label' | translate }}\"\n    [(ngModel)]=\"inheritanceOptions.isFinal\"\n    (ngModelChange)=\"onInheritanceOptionsChange()\"\n    [disabled]=\"vm.isMakeFinalDisabled || vm.isReadOnly\"\n    [tooltip]=\"{\n      iconName: 'question_circle_o',\n      content: 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.make-final.tooltip' | translate,\n      placement: 'bottom',\n      popoverMode: true\n    }\"\n  >\n  </adapt-rx-checkbox>\n\n  <rx-definition-picker\n    class=\"form-group d-block\"\n    name=\"inherit-from\"\n    rx-id=\"record-definition-name-field\"\n    [options]=\"recordDefinitionPickerOptions\"\n    [(ngModel)]=\"inheritFrom\"\n    (ngModelChange)=\"onRecordDefinitionNameChange($event)\"\n    [disabled]=\"vm.isReadOnly\"\n  >\n  </rx-definition-picker>\n\n  <div *ngIf=\"inheritFrom\">\n    <label>\n      <span>{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.inherit.label' | translate }}</span>\n    </label>\n\n    <adapt-rx-checkbox\n      label=\"{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.core-fields.label' | translate }}\"\n      [(ngModel)]=\"isInheritingCoreFields\"\n      (ngModelChange)=\"onInheritCoreFieldsChange()\"\n      [disabled]=\"vm.isCoreFieldsOptionDisabled\"\n    >\n    </adapt-rx-checkbox>\n\n    <adapt-rx-checkbox\n      label=\"{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.rules.label' | translate }}\"\n      [(ngModel)]=\"inheritanceDescriptor.isInheritingRules\"\n      [disabled]=\"vm.isReadOnly\"\n      (ngModelChange)=\"onInheritanceDescriptorChange()\"\n    >\n    </adapt-rx-checkbox>\n\n    <adapt-rx-checkbox\n      label=\"{{\n        'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.field-permissions.label' | translate\n      }}\"\n      [(ngModel)]=\"inheritanceDescriptor.isInheritingFieldPermissions\"\n      [disabled]=\"vm.isReadOnly\"\n      (ngModelChange)=\"onInheritanceDescriptorChange()\"\n    >\n    </adapt-rx-checkbox>\n\n    <adapt-rx-checkbox\n      label=\"{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.associations.label' | translate }}\"\n      [(ngModel)]=\"inheritanceDescriptor.isInheritingAssociations\"\n      [disabled]=\"vm.isReadOnly\"\n      (ngModelChange)=\"onInheritanceDescriptorChange()\"\n    >\n    </adapt-rx-checkbox>\n\n    <adapt-rx-checkbox\n      label=\"{{\n        'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.audit-field-properties.label' | translate\n      }}\"\n      [(ngModel)]=\"inheritanceDescriptor.isInheritingFieldAuditOptions\"\n      [disabled]=\"vm.isReadOnly\"\n      (ngModelChange)=\"onInheritanceDescriptorChange()\"\n    >\n    </adapt-rx-checkbox>\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AdaptButtonModule,\n  AdaptIconModule,\n  AdaptPopoverModule,\n  AdaptRxCheckboxModule,\n  AdaptRxSelectModule,\n  AdaptTooltipModule\n} from '@bmc-ux/adapt-angular';\nimport { AdaptTableModule } from '@bmc-ux/adapt-table';\nimport { AdaptCheckbox2Module } from '@bmc-ux/obsolete';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RecordInheritanceEditorComponent } from './record-inheritance-editor.component';\nimport { RxDefinitionPickerModule } from '@helix/platform/shared/components';\n\n@NgModule({\n  declarations: [RecordInheritanceEditorComponent],\n  exports: [RecordInheritanceEditorComponent],\n  entryComponents: [RecordInheritanceEditorComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    AdaptTooltipModule,\n    AdaptRxSelectModule,\n    AdaptButtonModule,\n    AdaptCheckbox2Module,\n    AdaptPopoverModule,\n    AdaptIconModule,\n    AdaptRxCheckboxModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    AdaptTableModule,\n    RxDefinitionPickerModule\n  ]\n})\nexport class RecordInheritanceEditorModule {}\n","import { Injectable } from '@angular/core';\nimport { ComponentStore } from '@ngrx/component-store';\nimport { Observable } from 'rxjs';\nimport { IFieldDefinition, RX_RECORD_DEFINITION, ISearchDefinition } from '@helix/platform/record/api';\nimport { IRecordSearchFieldsEditorState } from './search-field.types';\nimport { FormGroup } from '@angular/forms';\nimport { find } from 'lodash';\n\n@Injectable()\nexport class SearchFieldEditorModalStore extends ComponentStore<IRecordSearchFieldsEditorState> {\n  readonly searchFields$ = this.select((state: IRecordSearchFieldsEditorState) => state.searchFields);\n  readonly availableFields$ = this.select((state: IRecordSearchFieldsEditorState) => state.availableFields);\n  readonly isDirty$: Observable<boolean> = this.select((state: IRecordSearchFieldsEditorState) => state.isDirty);\n  readonly isValid$: Observable<boolean> = this.select((state: IRecordSearchFieldsEditorState) => state.isValid);\n\n  readonly vm$ = this.select(\n    this.availableFields$,\n    this.searchFields$,\n    this.isDirty$,\n    this.isValid$,\n    (availableFields, searchFields, isDirty, isValid) => ({\n      availableFields,\n      searchFields,\n      isDirty,\n      isValid\n    })\n  );\n\n  readonly toggleOpen = this.updater((state: IRecordSearchFieldsEditorState, toggleValue: boolean) => {\n    const searchFieldItems = [...state.searchFields];\n\n    searchFieldItems.forEach((control) => {\n      control.get('isOpen').setValue(toggleValue);\n    });\n\n    return {\n      ...state,\n      searchFields: searchFieldItems\n    };\n  });\n\n  readonly updateFields = this.updater((state: IRecordSearchFieldsEditorState, field: FormGroup) => ({\n    ...state,\n    searchFields: [...state.searchFields, field],\n    isValid: false\n  }));\n\n  readonly updateAvailableFields = this.updater((state: IRecordSearchFieldsEditorState, field: IFieldDefinition) => {\n    const updatedSearchFields = [...state.searchFields];\n\n    updatedSearchFields.forEach((control) => {\n      control\n        .get('isCategoryVisible')\n        .setValue(\n          find(state.availableFields, { id: field.id }).resourceType !== RX_RECORD_DEFINITION.resourceTypes.attachment\n        );\n    });\n\n    return {\n      ...state,\n      availableFields: state.availableFields.filter((availableField) => availableField.id !== field.id),\n      isDirty: true,\n      searchFields: updatedSearchFields,\n      isValid: !state.searchFields.some((form) => form.invalid)\n    };\n  });\n\n  readonly removeSearchField = this.updater((state: IRecordSearchFieldsEditorState, fieldIndex: number) => ({\n    ...state,\n    isDirty: true,\n    searchFields: state.searchFields.filter((field, index) => fieldIndex !== index),\n    isValid: !state.searchFields.some((form) => form.invalid)\n  }));\n\n  readonly markDirty = this.updater((state: IRecordSearchFieldsEditorState) => ({\n    ...state,\n    isDirty: true,\n    isValid: !state.searchFields.some((form) => form.invalid)\n  }));\n\n  constructor() {\n    super({\n      searchFields: [],\n      isDirty: false,\n      isCategoryVisible: true,\n      isValid: true,\n      availableFields: [],\n      searchDefinition: {} as ISearchDefinition\n    });\n  }\n}\n","import { Component, Injector, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { ActiveModalRef, DismissReasons, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { ReplaySubject } from 'rxjs';\nimport { SearchFieldEditorModalStore } from './search-field-editor-modal.store';\nimport { filter, take } from 'rxjs/operators';\nimport { RX_RECORD_DEFINITION, RxFieldDefinitionService } from '@helix/platform/record/api';\n\n@Component({\n  selector: 'rx-search-field-editor-modal',\n  templateUrl: './search-field-editor-modal.component.html',\n  styleUrls: ['./search-field-editor-modal.component.scss'],\n  providers: [SearchFieldEditorModalStore]\n})\nexport class SearchFieldEditorModalComponent extends RxModalClass implements OnInit, OnDestroy {\n  readonly vm$ = this.searchFieldsEditorModalStore.vm$;\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private recordDefinition = this.activeModalRef.getData().recordDefinition;\n  isReadOnly = this.activeModalRef.getData().isReadOnly;\n\n  constructor(\n    private readonly searchFieldsEditorModalStore: SearchFieldEditorModalStore,\n    private activeModalRef: ActiveModalRef,\n    private formBuilder: FormBuilder,\n    protected injector: Injector,\n    private rxFieldDefinitionService: RxFieldDefinitionService\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.searchFieldsEditorModalStore.isDirty$.pipe(filter(Boolean), take(1)).subscribe(() => {\n      this.markAsDirty();\n    });\n\n    const searchFields = this.activeModalRef.getData().searchFields.map((searchField, index) =>\n      this.formBuilder.group({\n        id: searchField.id,\n        searchFieldName: [[searchField], Validators.required],\n        category: searchField.searchDefinition.searchCategoryName,\n        isOpen: searchField.id === this.activeModalRef.getData().searchFieldIndex,\n        isCategoryVisible: searchField.resourceType !== RX_RECORD_DEFINITION.resourceTypes.attachment,\n        searchDefinition: searchField.searchDefinition\n      })\n    );\n\n    const availableFields = this.recordDefinition.fields\n      .filter((fieldDefinition) => this.rxFieldDefinitionService.isSearchable(fieldDefinition, this.recordDefinition))\n      .filter((fieldDefinition) =>\n        searchFields.every((searchField) => searchField.get('id').value !== fieldDefinition.id)\n      );\n\n    this.searchFieldsEditorModalStore.patchState({ searchFields, availableFields });\n  }\n\n  optionFormatter(selectOption: RxSelectOption): string {\n    return selectOption.name;\n  }\n\n  toggleOpen(toggleValue: boolean): void {\n    this.searchFieldsEditorModalStore.toggleOpen(toggleValue);\n  }\n\n  addNewSearchField(): void {\n    this.searchFieldsEditorModalStore.updateFields(\n      this.formBuilder.group({\n        id: '',\n        searchFieldName: [[], Validators.required],\n        category: '',\n        isOpen: true,\n        isCategoryVisible: true,\n        searchDefinition: {\n          enableFTSSearch: false,\n          enableCognitiveSearch: false\n        }\n      })\n    );\n  }\n\n  onSelectedFieldChange(field: RxSelectOption): void {\n    this.searchFieldsEditorModalStore.updateAvailableFields(field[0]);\n  }\n\n  onSearchCategoryChange(): void {\n    this.searchFieldsEditorModalStore.markDirty();\n  }\n\n  onRemoveSearchField(fieldIndex: number): void {\n    this.searchFieldsEditorModalStore.removeSearchField(fieldIndex);\n  }\n\n  saveSearchFields(): void {\n    this.searchFieldsEditorModalStore.searchFields$.pipe(take(1)).subscribe((searchFields) => {\n      this.activeModalRef.close(searchFields);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <div class=\"designer-modal-body modal-body d-flex mh-100\">\n    <div class=\"row flex-grow-1 w-100\">\n      <div class=\"d-flex flex-column mh-100 col\">\n        <div class=\"d-flex align-items-start justify-content-between\">\n          <button\n            adapt-button\n            btn-type=\"tertiary\"\n            class=\"mt-2 p-0\"\n            rx-id=\"add-new-search-field-button\"\n            *ngIf=\"!isReadOnly\"\n            (click)=\"addNewSearchField()\"\n          >\n            <span class=\"d-icon-plus_circle\"></span>\n            {{ 'com.bmc.arsys.rx.client.record-designer.search-fields.add-search-field.button.label' | translate }}\n          </button>\n\n          <div *ngIf=\"vm.searchFields.length\" class=\"btn-group ml-auto\">\n            <button adapt-button btn-type=\"tertiary\" type=\"button\" rx-id=\"expand-all-button\" (click)=\"toggleOpen(true)\">\n              {{ 'com.bmc.arsys.rx.client.common.expand-all.label' | translate }}\n            </button>\n\n            <button\n              adapt-button\n              btn-type=\"tertiary\"\n              type=\"button\"\n              rx-id=\"collapse-all-button\"\n              (click)=\"toggleOpen(false)\"\n            >\n              {{ 'com.bmc.arsys.rx.client.common.collapse-all.label' | translate }}\n            </button>\n          </div>\n        </div>\n\n        <div\n          class=\"border-bottom pb-1 d-flex align-items-center\"\n          *ngIf=\"vm.searchFields.length\"\n          id=\"selected-search-field\"\n          class=\"designer-modal-accordion-wrapper\"\n        >\n          <adapt-accordion [multiselect]=\"true\">\n            <div\n              *ngFor=\"let searchField of vm.searchFields; let index = index; let first = first; let last = last\"\n              class=\"designer-modal-accordion-content\"\n            >\n              <adapt-accordion-tab\n                class=\"d-block\"\n                [formGroup]=\"searchField\"\n                [isOpen]=\"searchField.get('isOpen').value\"\n                (open)=\"searchField.get('isOpen').setValue(true)\"\n                (close)=\"searchField.get('isOpen').setValue(false)\"\n              >\n                <div class=\"card-title-text w-100\">\n                  <div class=\"designer-modal-card-title-content\">\n                    <div class=\"left-header-block pl-0\">\n                      <div rx-id=\"card-title\">\n                        {{ searchField.get('searchFieldName').value[0]?.name }}\n                      </div>\n                    </div>\n\n                    <div class=\"right-header-block\">\n                      <button\n                        class=\"d-icon-left-cross_adapt p-1 pr-4 ml-3\"\n                        adapt-button\n                        size=\"small\"\n                        type=\"button\"\n                        rx-id=\"remove-button\"\n                        *ngIf=\"!isReadOnly\"\n                        (click)=\"onRemoveSearchField(index)\"\n                      >\n                        {{ 'com.bmc.arsys.rx.client.common.remove.label' | translate }}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row form-group\">\n                  <adapt-rx-select\n                    [ngClass]=\"recordDefinition.enableCognitiveSearch ? 'd-block col-12' : 'd-block col-6'\"\n                    rx-id=\"available-fields\"\n                    label=\"{{ 'com.bmc.arsys.rx.client.record-designer.search-fields.field.label' | translate }}\"\n                    formControlName=\"searchFieldName\"\n                    [options]=\"vm.availableFields\"\n                    [optionFormatter]=\"optionFormatter\"\n                    [optionContentTemplate]=\"optionTemplate\"\n                    (ngModelChange)=\"onSelectedFieldChange($event)\"\n                    [disabled]=\"isReadOnly\"\n                  ></adapt-rx-select>\n\n                  <adapt-rx-textfield\n                    *ngIf=\"!recordDefinition.enableCognitiveSearch && searchField.get('isCategoryVisible').value\"\n                    class=\"d-block col-6\"\n                    rx-id=\"search-field-category\"\n                    label=\"{{\n                      'com.bmc.arsys.rx.client.record-designer.search-fields.search-category-name.label' | translate\n                    }}\"\n                    formControlName=\"category\"\n                    (ngModelChange)=\"onSearchCategoryChange()\"\n                    [disabled]=\"isReadOnly\"\n                  ></adapt-rx-textfield>\n                </div>\n              </adapt-accordion-tab>\n            </div>\n          </adapt-accordion>\n        </div>\n\n        <div *ngIf=\"!vm.searchFields.length\" class=\"d-flex justify-content-center h-100 align-items-center mt-2\">\n          <adapt-empty-state\n            class=\"w-100\"\n            label=\"{{ 'com.bmc.arsys.rx.client.record-designer.search-fields.empty-state.message' | translate }}\"\n            type=\"config\"\n          ></adapt-empty-state>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"modal-footer\">\n    <div *ngIf=\"!isReadOnly\">\n      <button\n        adapt-button\n        type=\"button\"\n        btn-type=\"primary\"\n        rx-id=\"save-button\"\n        (click)=\"saveSearchFields()\"\n        [disabled]=\"!vm.isValid || !vm.isDirty\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n      </button>\n      <button adapt-button type=\"button\" btn-type=\"secondary\" (click)=\"cancel()\" rx-id=\"cancel-button\">\n        {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n      </button>\n    </div>\n\n    <button type=\"button\" adapt-button btn-type=\"secondary\" rx-id=\"close-button\" (click)=\"cancel()\" *ngIf=\"isReadOnly\">\n      {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n    </button>\n  </div>\n</ng-container>\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IFieldDefinition, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { ISearchFieldEditorControlOptions } from './search-field.types';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { BehaviorSubject } from 'rxjs';\nimport { shareReplay, take } from 'rxjs/operators';\nimport { SearchFieldEditorModalComponent } from './search-field-editor-modal.component';\nimport { IFormControlComponent, OverlayType, RX_OVERLAY } from '@helix/platform/shared/api';\nimport { IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { noop } from 'lodash';\n\n@Component({\n  selector: 'rx-search-field-editor-control-control',\n  templateUrl: './search-field-editor-control.component.html',\n  styleUrls: ['./search-field-editor-control.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: SearchFieldEditorControlComponent,\n      multi: true\n    }\n  ]\n})\nexport class SearchFieldEditorControlComponent\n  extends ValueAccessor<IRecordFieldDefinitionModel[]>\n  implements IFormControlComponent, OnChanges, OnInit, OnDestroy\n{\n  @Input()\n  options: ISearchFieldEditorControlOptions;\n\n  private searchFieldsSubject = new BehaviorSubject<IRecordFieldDefinitionModel[]>([]);\n\n  searchFields$ = this.searchFieldsSubject.asObservable().pipe(shareReplay(1));\n\n  constructor(private rxModalService: RxModalService, private translateService: TranslateService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.options) {\n      this.updateValues();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options) {\n      this.updateValues();\n    }\n  }\n\n  ngOnDestroy() {\n    this.searchFieldsSubject.complete();\n  }\n\n  updateValues(): void {\n    const searchFields = this.options.recordDefinitionModel.fields.filter(\n      (fieldDefinition: IRecordFieldDefinitionModel) =>\n        (fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.character ||\n          fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.attachment) &&\n        Boolean(fieldDefinition.searchDefinition) &&\n        (fieldDefinition.searchDefinition?.enableFTSSearch || fieldDefinition.searchDefinition?.enableCognitiveSearch)\n    ) as IRecordFieldDefinitionModel[];\n\n    this.searchFieldsSubject.next(searchFields);\n  }\n\n  openEditor(searchFieldIndex: string): void {\n    this.searchFields$.pipe(take(1)).subscribe((searchFields) => {\n      this.rxModalService\n        .openModal({\n          content: SearchFieldEditorModalComponent,\n          title: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.search-fields.search-field-editor.title'\n          ),\n          data: {\n            searchFields: searchFields,\n            fieldDefinitions: this.options.recordDefinitionModel.fields,\n            recordDefinition: this.options.recordDefinitionModel,\n            searchFieldIndex,\n            isReadOnly: this.options.isReadOnly\n          }\n        })\n        .then((updatedSearchFields) => {\n          const searchFieldDefinitions = updatedSearchFields.map((searchField) => {\n            const field = this.options.recordDefinitionModel.fields.find(\n              (fieldDefinition) => searchField.get('searchFieldName')?.value[0].id === fieldDefinition.id\n            );\n\n            if (field) {\n              return {\n                ...field,\n                searchDefinition: {\n                  ...field.searchDefinition,\n                  enableCognitiveSearch: Boolean(this.options.recordDefinitionModel.enableCognitiveSearch),\n                  enableFTSSearch:\n                    field.searchDefinition?.enableFTSSearch ||\n                    !Boolean(this.options.recordDefinitionModel.enableCognitiveSearch),\n                  stripTagsForSearch: false,\n                  enableLiteralSearch: false,\n                  searchCategoryName: searchField.get('category').value\n                },\n                overlayDescriptor: {\n                  ...field.overlayDescriptor,\n                  otherPropertiesOverlayType: RX_OVERLAY.overlayTypes.overwrite as OverlayType\n                }\n              };\n            }\n          });\n\n          this.value = searchFieldDefinitions;\n          this.searchFieldsSubject.next(searchFieldDefinitions);\n        })\n        .catch(noop);\n    });\n  }\n\n  removeSearchField(searchField: IRecordFieldDefinitionModel): void {\n    this.searchFields$.pipe(take(1)).subscribe((searchFields) => {\n      this.rxModalService\n        .confirm({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n          modalStyle: RX_MODAL.modalStyles.warning,\n          message: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.search-fields.delete-confirmation.message',\n            { name: searchField.name }\n          )\n        })\n        .then((isDeleteConfirmed: boolean) => {\n          if (isDeleteConfirmed) {\n            const searchFieldsList: IRecordFieldDefinitionModel[] = searchFields.filter(\n              (fieldDefinition: IRecordFieldDefinitionModel) => fieldDefinition.name !== searchField.name\n            );\n\n            this.value = searchFieldsList;\n            this.searchFieldsSubject.next(searchFieldsList);\n          }\n        });\n    });\n  }\n}\n","<adapt-button\n  type=\"button\"\n  class=\"p-0 pb-1\"\n  btn-type=\"tertiary\"\n  rx-id=\"add-search-field-button\"\n  *ngIf=\"!isDisabled\"\n  (click)=\"openEditor()\"\n>\n  <span class=\"d-icon-left-plus_circle\"> </span>\n  {{ 'com.bmc.arsys.rx.client.record-designer.search-fields.search-field-editor.title' | translate }}\n</adapt-button>\n\n<div *ngIf=\"searchFields$ | async as searchFields\">\n  <div class=\"rx-search-field\" *ngFor=\"let searchField of searchFields\">\n    <div class=\"rx-selected-column__header-container\">\n      <span rx-id=\"card-title\" class=\"rx-search-field__header-title\">{{ searchField.name }}</span>\n\n      <button\n        type=\"button\"\n        (click)=\"removeSearchField(searchField)\"\n        class=\"rx-button-unstyled d-icon-cross btn-link float-right\"\n        *ngIf=\"!options.isReadOnly\"\n        rx-id=\"remove-search-field\"\n      ></button>\n\n      <button\n        type=\"button\"\n        class=\"rx-button-unstyled d-icon-left-pencil btn-link float-right\"\n        rx-id=\"edit-button\"\n        (click)=\"openEditor(searchField.id)\"\n      ></button>\n    </div>\n\n    <div class=\"rx-search-field-type\" rx-id=\"search-field-type\">\n      <span>\n        {{\n          (searchField.searchDefinition.enableFTSSearch\n            ? 'com.bmc.arsys.rx.client.record-designer.search-fields.full-text-search.label'\n            : 'com.bmc.arsys.rx.client.record-designer.search-fields.cognitive-search.label'\n          ) | translate\n        }}\n      </span>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RxModalModule } from '@helix/platform/ui-kit';\nimport {\n  AdaptAccordionModule,\n  AdaptButtonModule,\n  AdaptEmptyStateModule,\n  AdaptRxFormControlModule,\n  AdaptRxSelectModule,\n  AdaptRxTextfieldModule,\n  AdaptTooltipModule\n} from '@bmc-ux/adapt-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SearchFieldEditorControlComponent } from './search-field-editor-control.component';\nimport { SearchFieldEditorModalComponent } from './search-field-editor-modal.component';\n\n@NgModule({\n  declarations: [SearchFieldEditorControlComponent, SearchFieldEditorModalComponent],\n  exports: [SearchFieldEditorControlComponent, SearchFieldEditorModalComponent],\n  entryComponents: [SearchFieldEditorControlComponent, SearchFieldEditorModalComponent],\n  imports: [\n    CommonModule,\n    AdaptTooltipModule,\n    AdaptRxSelectModule,\n    AdaptButtonModule,\n    AdaptRxFormControlModule,\n    AdaptRxTextfieldModule,\n    AdaptAccordionModule,\n    RxModalModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    AdaptEmptyStateModule\n  ]\n})\nexport class SearchFieldEditorModule {}\n","import { createAction, props } from '@ngrx/store';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { IInitRecordDesignerActionPayload } from './record-designer.types';\nimport { IRecordDefinition } from '@helix/platform/record/api';\n\nexport const init = createAction('[Record Designer] Init', props<{ payload: IInitRecordDesignerActionPayload }>());\n\nexport const loadDefinition = createAction('[Record Designer] Load Definition');\n\nexport const clearSearchFields = createAction('[Record Designer] Clear Search Fields');\n\nexport const loadDefinitionSuccess = createAction(\n  '[Record Designer] Load Definition Success',\n  props<{ definition: IRecordDefinition }>()\n);\n\nexport const initDefinitionModel = createAction(\n  '[Record Designer] Init Definition Model',\n  props<{ definitionModelFromDefinition: IRecordDefinitionModel }>()\n);\n\nexport const markDesignerPristine = createAction('[Record Designer] Mark Designer Pristine');\n\nexport const markDesignerDirty = createAction('[Record Designer] Mark Designer Dirty');\n\nexport const toggleDesignMode = createAction('[Record Designer] Toggle Design Mode');\n\nexport const updateDefinitionModelFromDesigner = createAction(\n  '[Record Designer] Update Definition Model From Designer',\n  props<{ definitionModelFromDesigner: IRecordDefinitionModel }>()\n);\n\nexport const updateSelectedFieldModel = createAction(\n  '[Record Designer] Update Selected Field Model',\n  props<{ selectedFieldModel: IRecordFieldDefinitionModel }>()\n);\n\nexport const setInspectorTabIndex = createAction(\n  '[Record Designer] Set Inspector Tab Index',\n  props<{ inspectorTabIndex: number }>()\n);\n\nexport const createNewFieldModel = createAction(\n  '[Record Designer] Create New Field Model',\n  props<{ resourceType: string }>()\n);\n\nexport const addFieldModel = createAction(\n  '[Record Designer] Add Field Model',\n  props<{ newFieldModel: IRecordFieldDefinitionModel }>()\n);\n\nexport const addNewFieldModels = createAction(\n  '[Record Designer] Add New Field Models',\n  props<{ newFieldModels: IRecordFieldDefinitionModel[] }>()\n);\n\nexport const setSelectedFieldGuid = createAction(\n  '[Record Designer] Set Selected Field GUID',\n  props<{ guid: string }>()\n);\n\nexport const clearSelectedFieldGuid = createAction('[Record Designer] Clear Selected Field GUID');\n\nexport const deleteSelectedField = createAction('[Record Designer] Delete Selected Field');\n\nexport const copySelectedField = createAction('[Record Designer] Copy Selected Field');\n\nexport const checkIfFieldUsedByIndexes = createAction('[Record Designer] Check If Field Used By Indexes');\n\nexport const deleteSelectedFieldSuccess = createAction('[Record Designer] Delete Selected Field Success');\n\nexport const deleteSelectedFieldError = createAction('[Record Designer] Delete Selected Field Error');\n\nexport const saveDefinition = createAction('[Record Designer] Save Definition');\n\nexport const saveDefinitionSuccess = createAction(\n  '[Record Designer] Save Definition Success',\n  props<{ savedDefinitionName: string }>()\n);\n\nexport const destroy = createAction('[Record Designer] Destroy');\n","import { ArchiveType } from '@helix/platform/record/api';\n\nexport const RX_RECORD_DESIGNER = {\n  featureSelector: 'recordDesigner',\n  joinCriteriaPath: 'joinCriteria',\n  archiveDataCriteriaPath: 'archiveDataCriteria',\n  archiving: {\n    types: {\n      doNotArchive: {\n        nameKey: 'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.types.do-not-archive.label',\n        id: ArchiveType.None\n      },\n      archiveAndDeleteSourceRecord: {\n        nameKey:\n          'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.types.archive-and-delete-source-record.label',\n        id: ArchiveType.CopyToArchiveAndDeleteFromSource\n      },\n      deleteSourceRecord: {\n        nameKey:\n          'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.types.delete-source-record.label',\n        id: ArchiveType.DeleteFromSource\n      }\n    }\n  }\n};\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { IRecordDesignerModel, IRecordDesignerState } from './record-designer.types';\nimport { RX_RECORD_DESIGNER } from '../record-designer.constant';\n\nexport const recordDesignerStateSelector = createFeatureSelector<IRecordDesignerState>(\n  RX_RECORD_DESIGNER.featureSelector\n);\n\nexport const recordDesignerModelSelector = createSelector(\n  recordDesignerStateSelector,\n  (recordDesignerState: IRecordDesignerState) => recordDesignerState.model\n);\n\nexport const definitionNameSelector = createSelector(\n  recordDesignerModelSelector,\n  (recordDesignerModel: IRecordDesignerModel) => recordDesignerModel.definitionName\n);\n\nexport const bundleIdSelector = createSelector(\n  recordDesignerModelSelector,\n  (recordDesignerModel: IRecordDesignerModel) => recordDesignerModel.bundleId\n);\n\nexport const isDesignModeSelector = createSelector(\n  recordDesignerModelSelector,\n  (recordDesignerModel: IRecordDesignerModel) => recordDesignerModel.isDesignMode\n);\n\nexport const isDirtySelector = createSelector(\n  recordDesignerModelSelector,\n  (recordDesignerModel: IRecordDesignerModel) => recordDesignerModel.isDirty\n);\n\nexport const inspectorTabIndexSelector = createSelector(\n  recordDesignerModelSelector,\n  (recordDesignerModel: IRecordDesignerModel) => recordDesignerModel.inspectorTabIndex\n);\n\nexport const definitionModelSelector = createSelector(\n  recordDesignerModelSelector,\n  (recordDesignerModel: IRecordDesignerModel) => recordDesignerModel.definitionModel\n);\n\nexport const definitionModelFromDefinitionSelector = createSelector(\n  recordDesignerModelSelector,\n  (recordDesignerModel: IRecordDesignerModel) => recordDesignerModel.definitionModelFromDefinition\n);\n\nexport const selectedFieldGuidSelector = createSelector(\n  recordDesignerModelSelector,\n  (recordDesignerModel: IRecordDesignerModel) => recordDesignerModel.selectedFieldGuid\n);\n\nexport const savedDefinitionNameSelector = createSelector(\n  recordDesignerModelSelector,\n  (recordDesignerModel: IRecordDesignerModel) => recordDesignerModel.savedDefinitionName\n);\n","import { Component, Injector } from '@angular/core';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { ActiveModalRef } from '@bmc-ux/adapt-angular';\n\n@Component({\n  selector: 'rx-localized-character-default-value-selector',\n  templateUrl: './inheritance-issue-info.component.html'\n})\nexport class InheritanceIssueInfoComponent extends RxModalClass {\n  overriddenRecordProperties: any = this.activeModalRef.getData().overriddenRecordProperties;\n\n  constructor(protected injector: Injector, private activeModalRef: ActiveModalRef) {\n    super(activeModalRef, injector);\n  }\n\n  close(value: string): void {\n    this.activeModalRef.close(value);\n  }\n}\n","<div class=\"modal-body\">\n  <ng-container *ngIf=\"overriddenRecordProperties\">\n    <div *ngIf=\"overriddenRecordProperties.fields.length > 0\">\n      <p>\n        {{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.issues-info.message' | translate }}\n      </p>\n\n      <ul>\n        <li>\n          <span>{{\n            'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.issues-overridden-properties-info.message'\n              | translate: { overriddenFields: overriddenRecordProperties.fields }\n          }}</span>\n        </li>\n      </ul>\n    </div>\n\n    <div *ngIf=\"overriddenRecordProperties.securityLabels?.length > 0\">\n      <p>\n        {{\n          'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.issues-overridden-security-labels-info.message'\n            | translate\n        }}\n      </p>\n\n      <ul>\n        <li>\n          <span>{{\n            'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.issues-security-labels-info.message'\n              | translate: { overriddenSecurityLabels: overriddenRecordProperties.securityLabels }\n          }}</span>\n        </li>\n      </ul>\n    </div>\n  </ng-container>\n  <p>\n    {{ 'com.bmc.arsys.rx.client.common.continue-confirmation.message' | translate }}\n  </p>\n</div>\n\n<div class=\"modal-footer\">\n  <button adapt-button type=\"button\" btn-type=\"primary\" rx-id=\"yes-button\" (click)=\"close('continue')\">\n    {{ 'com.bmc.arsys.rx.client.common.yes.label' | translate }}\n  </button>\n\n  <button adapt-button type=\"button\" btn-type=\"secondary\" rx-id=\"no-button\" (click)=\"close('cancel')\">\n    {{ 'com.bmc.arsys.rx.client.common.no.label' | translate }}\n  </button>\n</div>\n","import { Injector } from '@angular/core';\nimport { RX_RECORD_DEFINITION, RxRecordDefinitionCacheService } from '@helix/platform/record/api';\nimport {\n  ExpressionOperatorGroup,\n  ExpressionOperatorRowsByGroup,\n  IDataDictionary,\n  IDataDictionaryBranch,\n  IExpressionConfiguratorDefaultPropertyConfig,\n  RxExpressionConfigurator\n} from '@helix/platform/shared/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { iif, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IRecordDefinitionModel } from '../record-designer.types';\n\nexport class RecordDesignerExpressionConfigurator extends RxExpressionConfigurator {\n  rxRecordDefinitionCacheService = this.injector.get(RxRecordDefinitionCacheService);\n  translateService = this.injector.get(TranslateService);\n\n  commonDataDictionary$: Observable<IDataDictionary> = of([]);\n\n  private readonly generalGroup: IDataDictionaryBranch = {\n    label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n    hidden: true,\n    children: [\n      {\n        label: 'NULL',\n        icon: 'd-icon-dollar',\n        expression: '$NULL$'\n      }\n    ]\n  };\n\n  constructor(private injector: Injector) {\n    super();\n  }\n\n  getDefaultConfig(): IExpressionConfiguratorDefaultPropertyConfig {\n    return {\n      ...super.getDefaultConfig(),\n      operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.AllClient)\n    };\n  }\n\n  recordExpressionDataDictionary(\n    definitionModel: IRecordDefinitionModel,\n    bundleId: string\n  ): Observable<IDataDictionary> {\n    const data: IDataDictionaryBranch = {\n      label: this.translateService.instant('com.bmc.arsys.rx.client.common.record-definition.label'),\n      expanded: true\n    };\n\n    return iif(\n      () => !!definitionModel.lastUpdateTime,\n      this.rxRecordDefinitionCacheService.getRecordDefinition(`${bundleId}:${definitionModel.name}`).pipe(\n        map((definition) => ({\n          fields: definition.fieldDefinitions\n        }))\n      ),\n      of(definitionModel)\n    ).pipe(\n      map((model: IRecordDefinitionModel) => {\n        data.children = model.fields\n          .filter((field) => field.resourceType !== RX_RECORD_DEFINITION.dataTypes.attachment.resourceType)\n          .map((field) => ({\n            label: field.name,\n            icon: 'd-icon-arrow_right_square_input',\n            expression: `'${field.name}'`\n          }));\n\n        return [data, this.generalGroup];\n      })\n    );\n  }\n}\n","import { Component, OnDestroy, OnInit, Injector, ChangeDetectionStrategy } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActiveModalRef, DismissReasons, SelectTexts } from '@bmc-ux/adapt-angular';\nimport {\n  IFieldDefinition,\n  IRecordDefinition,\n  RX_RECORD_DEFINITION,\n  RxFieldDefinitionService,\n  RxRecordDefinitionService\n} from '@helix/platform/record/api';\nimport { RxDefinitionNameService } from '@helix/platform/shared/api';\nimport { RxGuidService } from '@helix/platform/utils';\nimport { TranslateService } from '@ngx-translate/core';\nimport { chain, cloneDeep, includes, intersection, map as _map, concat, get, orderBy } from 'lodash';\nimport { combineLatest, Observable, ReplaySubject } from 'rxjs';\nimport { map, shareReplay, startWith, filter as _filter, takeUntil } from 'rxjs/operators';\nimport { RxModalClass } from '@helix/platform/ui-kit';\n\n@Component({\n  selector: 'rx-add-join-fields-editor',\n  templateUrl: './add-join-fields-editor.component.html',\n  styleUrls: ['./add-join-fields-editor.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AddJoinFieldsEditorComponent extends RxModalClass implements OnInit, OnDestroy {\n  private notificationMessage = this.translateService.instant(\n    'com.bmc.arsys.rx.client.record-designer.definition-properties.notification.message'\n  );\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  primaryRecordDefinitionName = this.activeModalRef.getData().primaryRecordDefinitionName;\n  secondaryRecordDefinitionName = this.activeModalRef.getData().secondaryRecordDefinitionName;\n\n  selectLabel = this.translateService.instant(\n    'com.bmc.arsys.rx.client.record-designer.definition-properties.select.label',\n    {\n      primaryRecordDefinitionName: this.rxDefinitionNameService.getDisplayName(this.primaryRecordDefinitionName),\n      secondaryRecordDefinitionName: this.rxDefinitionNameService.getDisplayName(this.secondaryRecordDefinitionName)\n    }\n  );\n\n  private addedPrimaryFields = this.activeModalRef\n    .getData()\n    .addedFields.filter(\n      (field) =>\n        !includes(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds, field.id) &&\n        get(field, 'fieldMapping.source') === RX_RECORD_DEFINITION.sourceRecordTypes.primary\n    );\n\n  private addedSecondaryFields = this.activeModalRef\n    .getData()\n    .addedFields.filter(\n      (field) =>\n        !includes(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds, field.id) &&\n        get(field, 'fieldMapping.source') === RX_RECORD_DEFINITION.sourceRecordTypes.secondary\n    );\n\n  primarySelectedFieldsFormControl = new FormControl([]);\n  secondarySelectedFieldsFormControl = new FormControl([]);\n\n  private primarySelectedFields$ = this.primarySelectedFieldsFormControl.valueChanges.pipe(\n    startWith([]),\n    shareReplay(1)\n  );\n  private secondarySelectedFields$ = this.secondarySelectedFieldsFormControl.valueChanges.pipe(startWith([]));\n\n  private primaryAvailableFields$: Observable<IFieldDefinition[]> = this.rxRecordDefinitionService\n    .get(this.primaryRecordDefinitionName, {}, true)\n    .pipe(\n      map((recordDefinition) =>\n        orderBy(\n          this.getJoinFieldDefinitions(recordDefinition, RX_RECORD_DEFINITION.sourceRecordTypes.primary).filter(\n            (field) => !includes(_map(this.addedPrimaryFields, this.getSourceFieldId), this.getSourceFieldId(field))\n          ),\n          ['name'],\n          ['asc']\n        )\n      )\n    );\n\n  private secondaryAvailableFields$: Observable<IFieldDefinition[]> = this.rxRecordDefinitionService\n    .get(this.secondaryRecordDefinitionName, {}, true)\n    .pipe(\n      map((recordDefinition) =>\n        orderBy(\n          this.getJoinFieldDefinitions(recordDefinition, RX_RECORD_DEFINITION.sourceRecordTypes.secondary).filter(\n            (field) => !includes(_map(this.addedSecondaryFields, this.getSourceFieldId), this.getSourceFieldId(field))\n          ),\n          ['name'],\n          ['asc']\n        )\n      )\n    );\n\n  private duplicateNames$ = combineLatest([this.primarySelectedFields$, this.secondarySelectedFields$]).pipe(\n    map(([primarySelectedFields, secondarySelectedFields]) => {\n      const selectedPrimaryFieldNames = [\n        ..._map(primarySelectedFields, 'name'),\n        ..._map(this.addedPrimaryFields, 'name')\n      ];\n      const selectedSecondaryFieldNames = [\n        ..._map(secondarySelectedFields, 'name'),\n        ..._map(this.addedSecondaryFields, 'name')\n      ];\n\n      return intersection(selectedPrimaryFieldNames, selectedSecondaryFieldNames).concat(\n        intersection(\n          _map(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFields, 'name'),\n          selectedPrimaryFieldNames.concat(selectedSecondaryFieldNames)\n        )\n      );\n    }),\n    shareReplay(1)\n  );\n\n  private hasDuplicates$ = this.duplicateNames$.pipe(map((duplicateNames) => !!duplicateNames.length));\n\n  private selectedFields$ = combineLatest([\n    this.primarySelectedFields$,\n    this.secondarySelectedFields$,\n    this.duplicateNames$\n  ]).pipe(\n    map(([primarySelectedFields, secondarySelectedFields, duplicateNames]) => {\n      const nonRetainableFieldIds = chain(primarySelectedFields)\n        .concat(secondarySelectedFields)\n        .map('fieldMapping.sourceFieldId')\n        .filter((fieldId, index, selectedFieldIds) => includes(selectedFieldIds, fieldId, index + 1))\n        .value();\n\n      return concat(primarySelectedFields, secondarySelectedFields)\n        .filter((fieldDefinition) => this.rxFieldDefinitionService.isJoinedField(fieldDefinition))\n        .map((fieldDefinition) => {\n          const field = cloneDeep(fieldDefinition);\n\n          if (includes(duplicateNames, field.name)) {\n            if (field.fieldMapping.source === RX_RECORD_DEFINITION.sourceRecordTypes.primary) {\n              field.name = `${field.name} - ${this.rxDefinitionNameService.getDisplayName(\n                this.primaryRecordDefinitionName\n              )}`;\n            } else {\n              field.name = `${field.name} - ${this.rxDefinitionNameService.getDisplayName(\n                this.secondaryRecordDefinitionName\n              )}`;\n            }\n          }\n\n          if (!includes(nonRetainableFieldIds, field.fieldMapping.sourceFieldId)) {\n            field.customId = field.fieldMapping.sourceFieldId;\n          }\n\n          return field;\n        });\n    }),\n    shareReplay(1)\n  );\n\n  vm$ = combineLatest([\n    this.primaryAvailableFields$,\n    this.secondaryAvailableFields$,\n    this.hasDuplicates$,\n    this.selectedFields$\n  ]).pipe(\n    map(([primaryAvailableFields, secondaryAvailableFields, hasDuplicates, selectedFields]) => ({\n      primaryAvailableFields,\n      secondaryAvailableFields,\n      hasDuplicates,\n      selectedFields\n    }))\n  );\n\n  private selectedFields: IFieldDefinition[];\n\n  alertConfig = {\n    content: this.notificationMessage,\n    variant: 'info',\n    type: 'inline',\n    dismissible: false\n  };\n\n  selectTexts: SelectTexts = {\n    headerText: this.translateService.instant(\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.select.header.label'\n    ),\n    numberOptionsText: this.translateService.instant(\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.select.fields.label'\n    ),\n    checked: this.translateService.instant(\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.select.selected.label'\n    ),\n    searchPlaceholder: this.translateService.instant('com.bmc.arsys.rx.client.common.search.label')\n  };\n\n  constructor(\n    private translateService: TranslateService,\n    private rxGuidService: RxGuidService,\n    private rxRecordDefinitionService: RxRecordDefinitionService,\n    public activeModalRef: ActiveModalRef,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxFieldDefinitionService: RxFieldDefinitionService,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.selectedFields$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((selectedFields) => (this.selectedFields = selectedFields));\n  }\n\n  save(): void {\n    this.activeModalRef.close(this.selectedFields);\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  optionFormatter(field: IFieldDefinition): string {\n    return field.name;\n  }\n\n  private getSourceFieldId(field: IFieldDefinition): string {\n    return field.fieldMapping.sourceFieldId;\n  }\n\n  private getJoinFieldDefinitions(record: IRecordDefinition, sourceType: string): IFieldDefinition[] {\n    return _map(record?.fieldDefinitions, (fieldDefinition) => {\n      const joinFieldDefinition = cloneDeep(fieldDefinition);\n\n      joinFieldDefinition.fieldMapping = {\n        resourceType: RX_RECORD_DEFINITION.joinFieldMapping,\n        sourceFieldId: fieldDefinition.id,\n        source: sourceType\n      };\n\n      joinFieldDefinition.id = this.rxGuidService.generate('rx-');\n\n      // Join record should not carry forward FTS properties from primary and secondary record.\n      if (joinFieldDefinition.searchDefinition) {\n        joinFieldDefinition.searchDefinition = null;\n      }\n\n      delete joinFieldDefinition.lastUpdateTime;\n\n      return joinFieldDefinition;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <div class=\"modal-body d-flex flex-column mh-100\">\n    <div>\n      <adapt-alert *ngIf=\"vm.hasDuplicates\" class=\"mb-3\" [config]=\"alertConfig\"></adapt-alert>\n    </div>\n\n    <label>{{ selectLabel }}</label>\n\n    <div class=\"d-flex flex-row select-container\">\n      <adapt-rx-select\n        rx-id=\"primary-fields\"\n        class=\"d-flex flex-column h-100\"\n        *ngIf=\"vm.primaryAvailableFields\"\n        [inline]=\"true\"\n        [multiple]=\"true\"\n        [options]=\"vm.primaryAvailableFields\"\n        [optionFormatter]=\"optionFormatter\"\n        [selectAllButton]=\"true\"\n        [deselectAllButton]=\"true\"\n        [texts]=\"selectTexts\"\n        [popupMaxHeight]=\"'100%'\"\n        [formControl]=\"primarySelectedFieldsFormControl\"\n        enableFilter=\"true\"\n        [label]=\"'com.bmc.arsys.rx.client.record-designer.definition-properties.primary.label' | translate\"\n      >\n      </adapt-rx-select>\n\n      <adapt-rx-select\n        rx-id=\"secondary-fields\"\n        class=\"ml-3 d-flex flex-column h-100\"\n        *ngIf=\"vm.secondaryAvailableFields\"\n        [inline]=\"true\"\n        [multiple]=\"true\"\n        [options]=\"vm.secondaryAvailableFields\"\n        [optionFormatter]=\"optionFormatter\"\n        [selectAllButton]=\"true\"\n        [deselectAllButton]=\"true\"\n        [texts]=\"selectTexts\"\n        [popupMaxHeight]=\"'100%'\"\n        [formControl]=\"secondarySelectedFieldsFormControl\"\n        enableFilter=\"true\"\n        [label]=\"'com.bmc.arsys.rx.client.record-designer.definition-properties.secondary.label' | translate\"\n      >\n      </adapt-rx-select>\n    </div>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button\n      adapt-button\n      type=\"button\"\n      btn-type=\"primary\"\n      rx-id=\"save-button\"\n      [disabled]=\"vm.selectedFields.length === 0\"\n      (click)=\"save()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n\n    <button adapt-button type=\"button\" btn-type=\"secondary\" (click)=\"cancel()\" rx-id=\"cancel-button\">\n      {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n    </button>\n  </div>\n</ng-container>\n","import { Injectable } from '@angular/core';\nimport { RX_RECORD_DEFINITION, RxFieldDefinitionService } from '@helix/platform/record/api';\nimport { IValidationIssue, IValidationIssueSection, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { chain, find, forEach, includes, isEmpty, reverse, some, trim } from 'lodash';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../record-designer.types';\nimport { RX_RECORD_DESIGNER } from '../record-designer/record-designer.constant';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RxFieldDefinitionManagerService } from './services/field-definition-manager.service';\nimport { RxDefinitionNameService } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRecordDefinitionValidatorService {\n  constructor(\n    private rxFieldDefinitionService: RxFieldDefinitionService,\n    private translateService: TranslateService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxFieldDefinitionManagerService: RxFieldDefinitionManagerService\n  ) {}\n\n  validate(definitionModel: IRecordDefinitionModel): IValidationIssueSection[] {\n    const duplicateFieldErrorMsg = this.translateService.instant(\n      'com.bmc.arsys.rx.client.designer.validation.must-be-unique.message',\n      { propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label') }\n    );\n\n    const definitionValidationIssues: IValidationIssue[] = [];\n    const fieldValidationIssueSections: IValidationIssueSection[] = [];\n\n    chain(definitionModel.fields)\n      .clone()\n      .reverse()\n      .forEach((fieldModel: IRecordFieldDefinitionModel, index: number, fieldModels: IRecordFieldDefinitionModel[]) => {\n        let issues: IValidationIssue[] = [];\n\n        if (find(fieldModels, (model) => fieldModel.name === model.name, index + 1)) {\n          issues.push({\n            type: ValidationIssueType.Error,\n            description: duplicateFieldErrorMsg,\n            data: {\n              propertyName: 'name',\n              guid: fieldModel.guid\n            }\n          });\n        }\n\n        if (fieldModel.id && find(fieldModels, (model) => fieldModel.id === model.id, index + 1)) {\n          issues.push({\n            type: ValidationIssueType.Error,\n            description: this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.validation.duplicate-field-id-error.message'\n            ),\n            data: {\n              propertyName: 'id',\n              guid: fieldModel.guid\n            }\n          });\n        }\n\n        if (\n          definitionModel.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType &&\n          !fieldModel.lastUpdateTime &&\n          !includes(RX_RECORD_DEFINITION.coreFieldIds, fieldModel.id) &&\n          includes(RX_RECORD_DEFINITION.AR_CORE_FIELD_IDS, fieldModel.id)\n        ) {\n          issues.push({\n            type: ValidationIssueType.Error,\n            description: this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.validation.invalid-field-id.message',\n              { fieldId: fieldModel.id }\n            ),\n            data: {\n              editFieldGroups: true,\n              guid: fieldModel.guid\n            }\n          });\n        }\n\n        issues = issues.concat(this.rxFieldDefinitionManagerService.validate(fieldModel, definitionModel));\n\n        if (issues.length) {\n          fieldValidationIssueSections.push({\n            title: fieldModel.name,\n            issues: issues\n          });\n        }\n      })\n      .value();\n\n    if (isEmpty(trim(definitionModel.name))) {\n      definitionValidationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.definition-properties.record-name.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'name'\n        }\n      });\n    }\n\n    if (!RX_RECORD_DEFINITION.validDefinitionNameRegex.test(definitionModel.name)) {\n      definitionValidationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message',\n          { propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.record-definition.label') }\n        ),\n        data: {\n          propertyName: 'name'\n        }\n      });\n    }\n\n    if (definitionModel?.isAuditingEnabled) {\n      const auditRecordDefinitionName = this.rxDefinitionNameService.getDisplayName(\n        definitionModel.auditRecordDefinitionName\n      );\n\n      if (isEmpty(trim(auditRecordDefinitionName))) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.validation.invalid-audit-definition-name.message'\n          ),\n          data: {\n            propertyName: 'auditRecordDefinitionName'\n          }\n        });\n      }\n\n      if (!RX_RECORD_DEFINITION.validDefinitionNameRegex.test(auditRecordDefinitionName)) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message',\n            {\n              propertyName: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.definition-properties.audit-record-definition-name.label'\n              )\n            }\n          ),\n          data: {\n            propertyName: 'auditRecordDefinitionName'\n          }\n        });\n      }\n    }\n\n    if (\n      definitionModel.isArchivingEnabled &&\n      definitionModel.archiveType === RX_RECORD_DESIGNER.archiving.types.archiveAndDeleteSourceRecord.id\n    ) {\n      const archiveRecordDefinitionName = this.rxDefinitionNameService.getDisplayName(\n        definitionModel.archiveRecordDefinitionName\n      );\n\n      if (isEmpty(trim(archiveRecordDefinitionName))) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.validation.invalid-archive-definition-name.message'\n          ),\n          data: {\n            propertyName: 'archiveRecordDefinitionName'\n          }\n        });\n      }\n\n      if (!RX_RECORD_DEFINITION.validDefinitionNameRegex.test(archiveRecordDefinitionName)) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message',\n            {\n              propertyName: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.definition-properties.archive-record-definition-name.label'\n              )\n            }\n          ),\n          data: {\n            propertyName: 'archiveRecordDefinitionName'\n          }\n        });\n      }\n    }\n\n    if (definitionModel.weightedRelevancyFields) {\n      const searchTitleField = find(definitionModel.fields, { id: definitionModel.weightedRelevancyFields?.TITLE });\n\n      if (searchTitleField && !searchTitleField.searchDefinition) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.validation.invalid-text-search-enabled-field.message'\n          ),\n          data: {\n            propertyName: 'searchTitleField'\n          }\n        });\n      }\n    }\n\n    forEach(definitionModel.indexDefinitions, (indexDefinitionModel, index) => {\n      if (!indexDefinitionModel.indexFieldIds.length) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.indexes.no-field-selected.message',\n            {\n              indexName:\n                indexDefinitionModel.indexName ||\n                this.translateService.instant('com.bmc.arsys.rx.client.record-designer.indexes.new-index.label')\n            }\n          ),\n          data: {\n            indexToEditIndex: index,\n            propertyName: 'indexDefinitions'\n          }\n        });\n      }\n    });\n\n    let issues: IValidationIssueSection[] = [];\n\n    if (definitionValidationIssues.length) {\n      issues.push({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.record-definition.label'),\n        issues: definitionValidationIssues\n      });\n    }\n\n    issues = issues.concat(reverse(fieldValidationIssueSections));\n\n    return issues;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Injector, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { ActiveModalRef, DismissReasons } from '@bmc-ux/adapt-angular';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { IAssociationDefinition, RX_ASSOCIATION_DEFINITION } from '@helix/platform/association/api';\nimport { ColumnConfig } from '@bmc-ux/adapt-table';\nimport { IArchiveAssociationGridRow } from './archive-associations-control.types';\nimport { AssociationSelectionType, IAssociationsToFollowForArchive } from '@helix/platform/record/api';\nimport { includes, map } from 'lodash';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-archive-associations-editor',\n  templateUrl: './archive-association-selector.component.html',\n  styleUrls: ['./archive-association-selector.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ArchiveAssociationSelectorComponent extends RxModalClass implements OnInit {\n  @ViewChild('nameCellTemplate', { static: true })\n  nameCellTemplate: TemplateRef<any>;\n\n  @ViewChild('enforceCellTemplate', { static: true })\n  enforceCellTemplate: TemplateRef<any>;\n\n  isOverlayMode = this.activeModalRef.getData().isOverlayMode;\n  isReadOnly = this.activeModalRef.getData().isReadOnly;\n\n  actualAssociationsToFollow: IAssociationsToFollowForArchive =\n    this.activeModalRef.getData().actualAssociationsToFollow;\n\n  private selectedAssociationsToFollow: IAssociationsToFollowForArchive =\n    this.activeModalRef.getData().selectedAssociationsToFollow;\n\n  associationType: AssociationSelectionType = this.selectedAssociationsToFollow.selectionType;\n\n  associationTypes = {\n    followParent: AssociationSelectionType.FollowParent,\n    selected: AssociationSelectionType.Selected,\n    allEnforced: AssociationSelectionType.AllEnforced,\n    all: AssociationSelectionType.All\n  };\n\n  columns: ColumnConfig[] = [];\n\n  associationGridRows: IArchiveAssociationGridRow[] = this.activeModalRef.getData().associationDefinitions.map(\n    (association: IAssociationDefinition) =>\n      ({\n        name: association.name,\n        firstRecord: association.nodeAId,\n        secondRecord: association.nodeBId,\n        enforced: association.nodeAModality === RX_ASSOCIATION_DEFINITION.modality.required,\n        isSelectionDisabled: this.isReadOnly,\n        isAssociationSelectedInBase:\n          this.isOverlayMode && this.actualAssociationsToFollow.specificAssociationNames.includes(association.name)\n      } as IArchiveAssociationGridRow)\n  );\n\n  selectedAssociationGridRows: IArchiveAssociationGridRow[] = [];\n\n  constructor(\n    private activeModalRef: ActiveModalRef,\n    private translateService: TranslateService,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.columns = [\n      {\n        field: 'name',\n        header: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n        cellTemplate: this.nameCellTemplate\n      },\n      {\n        field: 'firstRecord',\n        header: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.association-first-record.label'\n        ),\n        cellTemplate: this.nameCellTemplate\n      },\n      {\n        field: 'secondRecord',\n        header: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.association-second-record.label'\n        ),\n        cellTemplate: this.nameCellTemplate\n      },\n      {\n        field: 'enforced',\n        header: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.enforced-association.label'\n        ),\n        cellTemplate: this.enforceCellTemplate\n      }\n    ];\n\n    this.selectAssociations();\n\n    this.selectedAssociationGridRows = this.selectedAssociationGridRows.concat(\n      this.associationGridRows.filter((associationGridRow) =>\n        includes(this.selectedAssociationsToFollow.specificAssociationNames, associationGridRow.name)\n      )\n    );\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  onSelectionChange(selectedRows: IArchiveAssociationGridRow[]): void {\n    this.markAsDirty();\n    this.selectedAssociationGridRows = selectedRows;\n  }\n\n  disabledRowSelectionResolver(rowData: IArchiveAssociationGridRow): boolean {\n    return rowData.isSelectionDisabled || rowData.isAssociationSelectedInBase;\n  }\n\n  selectAssociations(): void {\n    this.selectedAssociationGridRows = [];\n\n    if (this.associationType === AssociationSelectionType.Selected) {\n      this.enableRowSelection();\n    } else if (this.associationType === AssociationSelectionType.All) {\n      this.selectedAssociationGridRows = [...this.associationGridRows];\n      this.disableRowSelection();\n    } else if (this.associationType === AssociationSelectionType.AllEnforced) {\n      this.selectedAssociationGridRows = this.associationGridRows.filter((row) => row.enforced);\n\n      this.disableRowSelectionForEnforcedAssociations();\n    } else if (this.associationType === AssociationSelectionType.FollowParent) {\n      this.disableRowSelection();\n    }\n\n    if (\n      this.isOverlayMode &&\n      (this.actualAssociationsToFollow.selectionType === AssociationSelectionType.AllEnforced ||\n        this.actualAssociationsToFollow.selectionType === AssociationSelectionType.Selected)\n    ) {\n      this.selectAssociationsFromBase();\n    }\n  }\n\n  private selectAssociationsFromBase(): void {\n    this.selectedAssociationGridRows = this.selectedAssociationGridRows.concat(\n      this.associationGridRows.filter((associationGridRow) =>\n        includes(this.actualAssociationsToFollow.specificAssociationNames, associationGridRow.name)\n      )\n    );\n  }\n\n  private disableRowSelectionForEnforcedAssociations(): void {\n    this.associationGridRows.forEach((row) => {\n      row.isSelectionDisabled = this.isReadOnly || row.enforced;\n    });\n  }\n\n  private disableRowSelection(): void {\n    this.associationGridRows.forEach((row) => {\n      row.isSelectionDisabled = true;\n    });\n  }\n\n  private enableRowSelection(): void {\n    this.associationGridRows.forEach((row) => {\n      row.isSelectionDisabled = this.isReadOnly;\n    });\n  }\n\n  save(): void {\n    let selectedAssociationNames = [];\n\n    if (this.associationType === AssociationSelectionType.Selected) {\n      selectedAssociationNames = map(this.selectedAssociationGridRows, 'name');\n    } else if (this.associationType === AssociationSelectionType.AllEnforced) {\n      selectedAssociationNames = this.selectedAssociationGridRows\n        .filter((associationGridRow) => !associationGridRow.enforced)\n        .map((associationGridRow) => associationGridRow.name);\n    }\n\n    this.activeModalRef.close({\n      specificAssociationNames: selectedAssociationNames,\n      selectionType: this.associationType\n    } as IAssociationsToFollowForArchive);\n  }\n}\n","<div class=\"modal-body designer-modal-body d-flex mh-100 flex-column\">\n  <span>\n    {{\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.select-associations-to-follow.message'\n        | translate\n    }}\n  </span>\n\n  <adapt-rx-radiobutton-group [(ngModel)]=\"associationType\" (ngModelChange)=\"markAsDirty(); selectAssociations()\">\n    <adapt-rx-radiobutton\n      class=\"radio-inline\"\n      label=\"{{\n        'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.selected-associations.label'\n          | translate\n      }}\"\n      [value]=\"associationTypes.selected\"\n      [disabled]=\"\n        isReadOnly ||\n        (isOverlayMode &&\n          (actualAssociationsToFollow.selectionType === associationTypes.all ||\n            actualAssociationsToFollow.selectionType === associationTypes.allEnforced ||\n            actualAssociationsToFollow.selectionType === associationTypes.followParent))\n      \"\n      rx-id=\"selected-associations\"\n    ></adapt-rx-radiobutton>\n\n    <adapt-rx-radiobutton\n      class=\"radio-inline\"\n      label=\"{{ 'com.bmc.arsys.rx.client.common.all.label' | translate }}\"\n      [value]=\"associationTypes.all\"\n      [disabled]=\"\n        isReadOnly ||\n        (isOverlayMode &&\n          (actualAssociationsToFollow.selectionType === associationTypes.all ||\n            actualAssociationsToFollow.selectionType === associationTypes.followParent))\n      \"\n      rx-id=\"all-associations\"\n    ></adapt-rx-radiobutton>\n\n    <adapt-rx-radiobutton\n      class=\"radio-inline\"\n      label=\"{{\n        'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.all-enforced-associations.label'\n          | translate\n      }}\"\n      [value]=\"associationTypes.allEnforced\"\n      [disabled]=\"\n        isReadOnly ||\n        (isOverlayMode &&\n          (actualAssociationsToFollow.selectionType === associationTypes.all ||\n            actualAssociationsToFollow.selectionType === associationTypes.followParent))\n      \"\n      rx-id=\"all-enforced-associations\"\n    ></adapt-rx-radiobutton>\n\n    <adapt-rx-radiobutton\n      class=\"radio-inline\"\n      label=\"{{\n        'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.follow-parent-associations.label'\n          | translate\n      }}\"\n      [value]=\"associationTypes.followParent\"\n      [disabled]=\"\n        isReadOnly ||\n        (isOverlayMode &&\n          (actualAssociationsToFollow.selectionType === associationTypes.selected ||\n            actualAssociationsToFollow.selectionType === associationTypes.all ||\n            actualAssociationsToFollow.selectionType === associationTypes.allEnforced ||\n            actualAssociationsToFollow.selectionType === associationTypes.followParent))\n      \"\n      rx-id=\"follow-parent-association\"\n    ></adapt-rx-radiobutton>\n  </adapt-rx-radiobutton-group>\n\n  <adapt-table\n    [value]=\"associationGridRows\"\n    [selection]=\"selectedAssociationGridRows\"\n    [columns]=\"columns\"\n    [scrollable]=\"true\"\n    scrollHeight=\"flex\"\n    [sortable]=\"true\"\n    [resizableColumns]=\"false\"\n    [bordered]=\"true\"\n    [filterable]=\"false\"\n    [dataKey]=\"'name'\"\n    [disableRowSelection]=\"false\"\n    [selectionMode]=\"'multiple'\"\n    (selectionChange)=\"onSelectionChange($event)\"\n    [disabledRowSelectionResolver]=\"disabledRowSelectionResolver\"\n  >\n  </adapt-table>\n</div>\n\n<div class=\"modal-footer\">\n  <button type=\"button\" adapt-button btn-type=\"primary\" (click)=\"save()\" rx-id=\"save-button\" [disabled]=\"!isDirty()\">\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button type=\"button\" adapt-button btn-type=\"secondary\" (click)=\"cancel()\" rx-id=\"cancel-button\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n\n<ng-template #nameCellTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n  {{ dataItem[column.field] | rxDefinitionNamePipe }}\n</ng-template>\n\n<ng-template #enforceCellTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n  <span *ngIf=\"dataItem[column.field]\">{{ 'com.bmc.arsys.rx.client.common.yes.label' | translate }}</span>\n  <span *ngIf=\"!dataItem[column.field]\">{{ 'com.bmc.arsys.rx.client.common.no.label' | translate }}</span>\n</ng-template>\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { ActiveModalRef, DismissReasons } from '@bmc-ux/adapt-angular';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { IMissingArchiveAssociation } from './archive-associations-control.types';\n\n@Component({\n  selector: 'rx-missing-archive-definitions-modal-selector',\n  templateUrl: './missing-archive-definitions-modal.component.html'\n})\nexport class MissingArchiveDefinitionsModalComponent extends RxModalClass implements OnInit {\n  missingAssociations: IMissingArchiveAssociation[] = this.activeModalRef.getData().missingAssociations;\n\n  constructor(private activeModalRef: ActiveModalRef, protected injector: Injector) {\n    super(activeModalRef, injector);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  close(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"modal-body pt-0\">\n  <div class=\"row\">\n    <div class=\"col-sm\">\n      <h6 class=\"font-weight-bold\">\n        {{\n          'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.association-name.label' | translate\n        }}\n      </h6>\n    </div>\n    <div class=\"col-sm\">\n      <h6 class=\"font-weight-bold\">\n        {{ 'com.bmc.arsys.rx.client.common.record-definition-name.label' | translate }}\n      </h6>\n    </div>\n  </div>\n\n  <div class=\"row mb-2\" *ngFor=\"let association of missingAssociations\">\n    <div class=\"col-sm\">{{ association.name | rxDefinitionNamePipe }}</div>\n    <div class=\"col-sm\">\n      <a target=\"_blank\" class=\"d-icon-left-pop_up\" [href]=\"association.url\">\n        {{ association.secondRecord | rxDefinitionNamePipe }}\n      </a>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal-footer\">\n  <button type=\"button\" adapt-button btn-type=\"secondary\" (click)=\"close()\" rx-id=\"close-button\">\n    {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n  </button>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { RxModalService } from '@helix/platform/ui-kit';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { filter as _filter, includes, noop, reject, some } from 'lodash';\nimport { ArchiveAssociationSelectorComponent } from './archive-association-selector.component';\nimport {\n  AssociationSelectionType,\n  IAssociationsToFollowForArchive,\n  IRecordAssociationDefinitionData,\n  RxRecordDefinitionCacheService\n} from '@helix/platform/record/api';\nimport { IArchiveAssociationControlOptions, IMissingArchiveAssociation } from './archive-associations-control.types';\nimport { IAssociationDefinition, RX_ASSOCIATION_DEFINITION } from '@helix/platform/association/api';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable, of } from 'rxjs';\nimport { defaultIfEmpty, filter, map, shareReplay, switchMap, take } from 'rxjs/operators';\nimport { RX_APPLICATION, RxNotificationService } from '@helix/platform/shared/api';\nimport { MissingArchiveDefinitionsModalComponent } from './missing-archive-definitions-modal.component';\n\n@Component({\n  selector: 'rx-archive-associations',\n  templateUrl: './archive-associations-control.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: ArchiveAssociationsControlComponent,\n      multi: true\n    }\n  ]\n})\nexport class ArchiveAssociationsControlComponent\n  extends ValueAccessor<IAssociationsToFollowForArchive>\n  implements OnChanges, OnInit\n{\n  @Input()\n  options: IArchiveAssociationControlOptions;\n\n  private associationLabels = {\n    [AssociationSelectionType.Selected]: this.translateService.instant(\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.selected-associations.label'\n    ),\n    [AssociationSelectionType.All]: this.translateService.instant('com.bmc.arsys.rx.client.common.all.label'),\n    [AssociationSelectionType.AllEnforced]: this.translateService.instant(\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.all-enforced-associations.label'\n    ),\n    [AssociationSelectionType.FollowParent]: this.translateService.instant(\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.follow-parent-associations.label'\n    )\n  };\n\n  private recordDefinitionNameSubject = new BehaviorSubject<string>(null);\n\n  private associationToFollowSubject = new BehaviorSubject<IAssociationsToFollowForArchive>({\n    specificAssociationNames: [],\n    selectionType: AssociationSelectionType.FollowParent\n  });\n\n  private associationDefinitions$: Observable<IAssociationDefinition[]> = this.recordDefinitionNameSubject.pipe(\n    switchMap((recordDefinitionName: string) =>\n      recordDefinitionName\n        ? this.rxRecordDefinitionCacheService.getRecordAssociationDefinitions(recordDefinitionName).pipe(\n            map(\n              (recordAssociationDefinitions: IRecordAssociationDefinitionData) =>\n                reject(recordAssociationDefinitions[recordDefinitionName] as IAssociationDefinition[], {\n                  cardinality: RX_ASSOCIATION_DEFINITION.cardinality.manyToMany\n                }).filter(\n                  (association: IAssociationDefinition) => association.nodeAId === recordDefinitionName\n                ) as IAssociationDefinition[]\n            )\n          )\n        : of([])\n    ),\n    shareReplay(1)\n  );\n\n  private validAssociations$: Observable<IAssociationDefinition[]> = this.associationDefinitions$.pipe(\n    map((associationDefinitions) => {\n      const selectedAssociationType = this.value.selectionType;\n\n      const selectedAssociations = associationDefinitions.filter((association) =>\n        includes(this.value.specificAssociationNames, association.name)\n      );\n\n      let validAssociations = [];\n\n      if (selectedAssociationType === AssociationSelectionType.Selected) {\n        validAssociations = selectedAssociations;\n      } else if (selectedAssociationType === AssociationSelectionType.All) {\n        validAssociations = associationDefinitions;\n      } else if (selectedAssociationType === AssociationSelectionType.AllEnforced) {\n        validAssociations = associationDefinitions\n          .filter((association) => association.nodeAModality === RX_ASSOCIATION_DEFINITION.modality.required)\n          .concat(selectedAssociations);\n      }\n\n      return validAssociations;\n    })\n  );\n\n  private missingAssociations$: Observable<IMissingArchiveAssociation[]> = this.validAssociations$.pipe(\n    switchMap((associations: IAssociationDefinition[]) =>\n      forkJoin(\n        associations.map((association) =>\n          this.rxRecordDefinitionCacheService.getRecordDefinition(association.nodeBId).pipe(\n            filter((definition) => !definition.archiveDescriptor?.isEnabled),\n            map(() => ({\n              name: association.name,\n              secondRecord: association.nodeBId,\n              url: `${window.location.origin}/helix/index.html#/${RX_APPLICATION.innovationStudioBundleId}/record/edit2/${association.nodeBId}`\n            }))\n          )\n        )\n      ).pipe(defaultIfEmpty([]))\n    )\n  );\n\n  associationLabel$: Observable<string> = combineLatest([\n    this.associationToFollowSubject,\n    this.associationDefinitions$\n  ]).pipe(\n    map(([associationToFollow, associationDefinitions]) => {\n      let selectedAssociationLabel;\n\n      if (associationToFollow.selectionType === AssociationSelectionType.AllEnforced) {\n        const selectedAssociations = _filter(associationDefinitions, (association) =>\n          includes(associationToFollow.specificAssociationNames, association.name)\n        );\n\n        if (\n          some(\n            selectedAssociations,\n            (association) => association.nodeAModality !== RX_ASSOCIATION_DEFINITION.modality.required\n          )\n        ) {\n          selectedAssociationLabel = `${this.associationLabels[AssociationSelectionType.AllEnforced]} + ${\n            this.associationLabels[AssociationSelectionType.Selected]\n          }`;\n        } else {\n          selectedAssociationLabel = this.associationLabels[AssociationSelectionType.AllEnforced];\n        }\n      } else {\n        selectedAssociationLabel = this.associationLabels[associationToFollow.selectionType];\n      }\n\n      return selectedAssociationLabel;\n    })\n  );\n\n  constructor(\n    private rxModalService: RxModalService,\n    private translateService: TranslateService,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxNotificationService: RxNotificationService\n  ) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const prevDefinitionName = changes.options.previousValue.definitionModel.lastUpdateTime\n      ? `${changes.options.previousValue.bundleId}:${changes.options.previousValue.definitionModel.name}`\n      : changes.options.previousValue.definitionModel.recordInheritanceSelector.inheritanceDescriptor?.inheritingFrom;\n\n    const currentDefinitionName = changes.options.currentValue.definitionModel.lastUpdateTime\n      ? `${changes.options.currentValue.bundleId}:${changes.options.currentValue.definitionModel.name}`\n      : changes.options.currentValue.definitionModel.recordInheritanceSelector.inheritanceDescriptor?.inheritingFrom;\n\n    if (currentDefinitionName !== prevDefinitionName) {\n      this.recordDefinitionNameSubject.next(currentDefinitionName);\n    }\n\n    if (!currentDefinitionName) {\n      this.value = {\n        specificAssociationNames: [],\n        selectionType: AssociationSelectionType.FollowParent\n      };\n\n      this.associationToFollowSubject.next(this.value);\n    }\n  }\n\n  ngOnInit(): void {\n    const definitionName = this.options.definitionModel.lastUpdateTime\n      ? `${this.options.bundleId}:${this.options.definitionModel.name}`\n      : this.options.definitionModel.recordInheritanceSelector.inheritanceDescriptor?.inheritingFrom;\n\n    this.recordDefinitionNameSubject.next(definitionName);\n    this.associationToFollowSubject.next(this.value);\n  }\n\n  openAssociationSelector(): void {\n    this.associationDefinitions$.pipe(take(1)).subscribe((associationDefinitions) => {\n      this.rxModalService\n        .openModal({\n          title: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.associations-to-follow.label'\n          ),\n          data: {\n            associationDefinitions,\n            selectedAssociationsToFollow: this.value,\n            actualAssociationsToFollow: this.options.definitionModelFromDefinition.associationsToFollowForArchive,\n            isOverlayMode: this.options.isOverlayMode,\n            isReadOnly: this.options.isReadOnly\n          },\n          content: ArchiveAssociationSelectorComponent\n        })\n        .then((result: IAssociationsToFollowForArchive) => {\n          this.value = result;\n          this.associationToFollowSubject.next(this.value);\n        })\n        .catch(noop);\n    });\n  }\n\n  openMissingDefinitionsModal(): void {\n    this.missingAssociations$.pipe(take(1)).subscribe((missingAssociations) => {\n      if (missingAssociations.length) {\n        this.rxModalService\n          .openModal({\n            title: this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.missing-archive-definitions.label'\n            ),\n            data: {\n              missingAssociations\n            },\n            size: 'sm',\n            content: MissingArchiveDefinitionsModalComponent\n          })\n          .catch(noop);\n      } else {\n        this.rxNotificationService.addInfoMessage(\n          this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.no-missing-archive-definitions.message'\n          )\n        );\n      }\n    });\n  }\n}\n","<div class=\"d-inline-flex align-items-center mb-1\">\n  <button\n    class=\"d-icon-plus_circle p-0\"\n    adapt-button\n    type=\"button\"\n    btn-type=\"tertiary\"\n    rx-id=\"associations-to-follow-button\"\n    (click)=\"openAssociationSelector()\"\n  >\n    {{\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.associations-to-follow.label' | translate\n    }}\n  </button>\n\n  <adapt-icon\n    name=\"question_circle_o\"\n    class=\"ml-2\"\n    placement=\"right\"\n    [adaptPopover]=\"\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.associations-to-follow.tooltip'\n        | translate\n    \"\n  >\n  </adapt-icon>\n</div>\n\n<div class=\"border pl-2 p-1 form-group\">\n  <span class=\"d-icon-left-arrow_schema font-weight-bold\">\n    {{ associationLabel$ | async }}\n  </span>\n</div>\n\n<div class=\"d-inline-flex align-items-center\">\n  <adapt-icon name=\"exclamation_triangle\" class=\"text-warning-icon\"> </adapt-icon>\n\n  <adapt-button\n    btn-type=\"tertiary\"\n    rx-id=\"open-missing-definitions-button\"\n    (click)=\"openMissingDefinitionsModal()\"\n    class=\"p-0 pl-1\"\n  >\n    {{\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.missing-archive-definitions.label'\n        | translate\n    }}\n  </adapt-button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ComponentStore } from '@ngrx/component-store';\nimport { Observable } from 'rxjs';\nimport { IFieldState, IIndexEditorState, IIndexesEditorOptions, IIndexState } from './record-indexes-control.types';\nimport { reject, some } from 'lodash';\nimport { RxGuidService } from '@helix/platform/utils';\n\n@Injectable()\nexport class RecordIndexesEditorStore extends ComponentStore<IIndexEditorState> {\n  readonly isDirty$: Observable<boolean> = this.select((state: IIndexEditorState) => state.isDirty);\n  readonly indexes$: Observable<any> = this.select((state: IIndexEditorState) => state.indexes);\n\n  readonly addIndex = this.updater((state: IIndexEditorState, index: IIndexState) => ({\n    ...state,\n    indexes: [...state.indexes, index],\n    isDirty: true\n  }));\n\n  readonly updateIndex = this.updater((state: IIndexEditorState, indexToUpdate: IIndexState) => ({\n    ...state,\n    indexes: state.indexes.map((index) => (index.guid === indexToUpdate.guid ? { ...indexToUpdate } : index)),\n    isDirty: true\n  }));\n\n  readonly removeIndex = this.updater((state: IIndexEditorState, guid: string) => ({\n    ...state,\n    indexes: state.indexes.filter((field) => field.guid !== guid),\n    isDirty: true\n  }));\n\n  readonly checkAvailableFields = this.updater(\n    (state: IIndexEditorState, payload: { indexGuid: string; checkedFields: IFieldState[] }) => ({\n      ...state,\n      indexes: state.indexes.map((index) =>\n        index.guid === payload.indexGuid\n          ? {\n              ...index,\n              checkedAvailableFields: [...payload.checkedFields]\n            }\n          : index\n      )\n    })\n  );\n\n  readonly toggleSelectedFieldChecked = this.updater(\n    (state: IIndexEditorState, payload: { indexGuid: string; indexField: IFieldState }) => ({\n      ...state,\n      indexes: state.indexes.map((index) => {\n        if (index.guid === payload.indexGuid) {\n          const selectedFields = index.selectedFields.map((field) =>\n            field.id === payload.indexField.id ? { ...field } : field\n          );\n\n          return {\n            ...index,\n            selectedFields,\n            isMoveToAvailableButtonEnabled: some(selectedFields, 'selected')\n          };\n        } else {\n          return index;\n        }\n      })\n    })\n  );\n\n  readonly assignCheckedFields = this.updater((state: IIndexEditorState, indexToAssign: IIndexState) => {\n    return {\n      ...state,\n      indexes: state.indexes.map((index) =>\n        index.guid === indexToAssign.guid\n          ? {\n              ...index,\n              selectedFields: [...index.selectedFields, ...index.checkedAvailableFields].map(\n                (field, itemIndex: number) => ({\n                  ...field,\n                  selected: false,\n                  fieldOrder: itemIndex++\n                })\n              ),\n              availableFields: [\n                ...index.availableFields.filter((field) => !some(index.checkedAvailableFields, { id: field.id }))\n              ],\n              checkedAvailableFields: []\n            }\n          : index\n      ),\n      isDirty: true\n    };\n  });\n\n  readonly unassignCheckedFields = this.updater((state: IIndexEditorState, indexToAssign: IIndexState) => {\n    return {\n      ...state,\n      indexes: state.indexes.map((index) =>\n        index.guid === indexToAssign.guid\n          ? {\n              ...index,\n              selectedFields: index.selectedFields.filter((field) => !field.selected),\n              availableFields: [...index.availableFields, ...index.selectedFields.filter((field) => field.selected)]\n                .map((field) => ({\n                  ...field,\n                  fieldOrder: null\n                }))\n                .sort((a, b) => a.name.localeCompare(b.name)),\n              isMoveToAvailableButtonEnabled: false\n            }\n          : index\n      ),\n      isDirty: true\n    };\n  });\n\n  readonly sortSelectedFields = this.updater(\n    (state: IIndexEditorState, payload: { indexGuid: string; fields: IFieldState[] }) => ({\n      ...state,\n      indexes: state.indexes.map((index) =>\n        index.guid === payload.indexGuid\n          ? {\n              ...index,\n              selectedFields: [\n                ...payload.fields.map((field, itemIndex: number) => ({ ...field, fieldOrder: itemIndex }))\n              ]\n            }\n          : index\n      )\n    })\n  );\n\n  readonly removeField = this.updater(\n    (state: IIndexEditorState, payload: { indexGuid: string; field: IFieldState }) => ({\n      ...state,\n      indexes: state.indexes.map((index) =>\n        index.guid === payload.indexGuid\n          ? {\n              ...index,\n              selectedFields: index.selectedFields.filter((field) => field.id !== payload.field.id),\n              availableFields: [...index.availableFields, payload.field].sort((a, b) => a.name.localeCompare(b.name))\n            }\n          : index\n      ),\n      isDirty: true\n    })\n  );\n\n  readonly expandAll = this.updater((state: IIndexEditorState) => ({\n    ...state,\n    indexes: state.indexes.map((field) => ({ ...field, isOpen: true }))\n  }));\n\n  readonly collapseAll = this.updater((state: IIndexEditorState) => ({\n    ...state,\n    indexes: state.indexes.map((field) => ({ ...field, isOpen: false }))\n  }));\n\n  readonly markDirty = this.updater((state: IIndexEditorState) => ({\n    ...state,\n    isDirty: true\n  }));\n\n  readonly vm$ = this.select(this.indexes$, this.isDirty$, (indexes, isDirty) => ({\n    indexes,\n    isDirty\n  }));\n\n  constructor(private rxGuidService: RxGuidService) {\n    super({ indexes: [], isDirty: false });\n  }\n\n  initialize(indexesEditorOptions: IIndexesEditorOptions): void {\n    this.patchState({\n      isDirty: false,\n      indexes: indexesEditorOptions.indexes.map((index, itemIndex) => ({\n        ...index,\n\n        availableFields: reject(\n          indexesEditorOptions.fields,\n          (field) => field.isNewField || index.indexFieldIds.includes(field.id as number)\n        )\n          .map((field) => ({ id: field.id, name: field.name, fieldOrder: null }))\n          .sort((a, b) => a.name.localeCompare(b.name)),\n\n        checkedAvailableFields: [],\n\n        selectedFields: indexesEditorOptions.fields\n          .filter((field) => !field.isNewField && index.indexFieldIds.includes(field.id as number))\n          .sort((a, b) => index.indexFieldIds.indexOf(a.id as number) - index.indexFieldIds.indexOf(b.id as number))\n          .map((field, index) => ({ id: field.id, name: field.name, fieldOrder: index })),\n\n        guid: this.rxGuidService.generate(),\n        isOpen: indexesEditorOptions?.indexToEditIndex === itemIndex,\n        isMoveToAvailableButtonEnabled: false\n      }))\n    });\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Injector,\n  OnInit,\n  QueryList,\n  ViewChildren\n} from '@angular/core';\nimport { ActiveModalRef, AdaptAccordionTabComponent, DismissReasons, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { RecordIndexesEditorStore } from './record-indexes-editor.store';\nimport { RxGuidService } from '@helix/platform/utils';\nimport { filter, take } from 'rxjs/operators';\nimport { IFieldState, IIndexEditorState, IIndexesEditorOptions, IIndexState } from './record-indexes-control.types';\nimport { map } from 'lodash';\nimport { IIndexDefinitionModel } from '../../record-designer.types';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'rx-record-indexes-editor',\n  templateUrl: './record-indexes-editor.component.html',\n  styleUrls: ['./record-indexes-editor.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [RecordIndexesEditorStore]\n})\nexport class RecordIndexesEditorComponent extends RxModalClass implements OnInit, AfterViewInit {\n  @ViewChildren(AdaptAccordionTabComponent, { read: ElementRef })\n  private accordionTabEls: QueryList<ElementRef>;\n\n  isReadOnly = this.activeModalRef.getData().isReadOnly;\n  indexesEditorOptions: IIndexesEditorOptions = this.activeModalRef.getData();\n  vm$: Observable<IIndexEditorState> = this.recordIndexesEditorStore.vm$;\n\n  constructor(\n    private recordIndexesEditorStore: RecordIndexesEditorStore,\n    private rxGuidService: RxGuidService,\n    private activeModalRef: ActiveModalRef,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.recordIndexesEditorStore.isDirty$.pipe(filter(Boolean), take(1)).subscribe(() => {\n      this.markAsDirty();\n    });\n\n    this.recordIndexesEditorStore.initialize(this.indexesEditorOptions);\n  }\n\n  ngAfterViewInit(): void {\n    this.accordionTabEls.get(this.indexesEditorOptions.indexToEditIndex)?.nativeElement.scrollIntoView({\n      block: 'nearest'\n    });\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  addIndex(): void {\n    this.recordIndexesEditorStore.addIndex({\n      guid: this.rxGuidService.generate(),\n      indexName: null,\n      unique: false,\n      ignoreBlankValues: false,\n      indexFieldIds: [],\n      availableFields: this.indexesEditorOptions.fields\n        .filter((field) => !field.isNewField)\n        .map((field) => ({ ...field, fieldOrder: null }))\n        .sort((a, b) => a.name.localeCompare(b.name)),\n      checkedAvailableFields: [],\n      selectedFields: [],\n      isOpen: true,\n      isAutomaticIndex: false,\n      isMoveToAvailableButtonEnabled: false\n    } as IIndexState);\n  }\n\n  updateIndexUniqueValue(index: IIndexState, unique: boolean): void {\n    this.recordIndexesEditorStore.updateIndex({ ...index, unique });\n  }\n\n  updateIndexIgnoreBlankValue(index: IIndexState, ignoreBlankValues: boolean): void {\n    this.recordIndexesEditorStore.updateIndex({ ...index, ignoreBlankValues });\n  }\n\n  removeIndex(guid: string): void {\n    this.recordIndexesEditorStore.removeIndex(guid);\n  }\n\n  moveToSelected(index: IIndexState): void {\n    this.recordIndexesEditorStore.assignCheckedFields(index);\n  }\n\n  moveToAvailable(index: IIndexState): void {\n    this.recordIndexesEditorStore.unassignCheckedFields(index);\n  }\n\n  onAvailableFieldsChange(checkedFields: IFieldState[], index: IIndexState) {\n    this.recordIndexesEditorStore.checkAvailableFields({ indexGuid: index.guid, checkedFields });\n  }\n\n  onSelectedFieldsChange(fields: IFieldState[], index: IIndexState): void {\n    fields.forEach((field) => {\n      this.recordIndexesEditorStore.toggleSelectedFieldChecked({ indexGuid: index.guid, indexField: field });\n    });\n\n    this.recordIndexesEditorStore.sortSelectedFields({ indexGuid: index.guid, fields });\n  }\n\n  onDragEnd(): void {\n    this.recordIndexesEditorStore.markDirty();\n  }\n\n  onFieldRemove(removedField: IFieldState, index: IIndexState): void {\n    this.recordIndexesEditorStore.removeField({ indexGuid: index.guid, field: removedField });\n  }\n\n  save(): void {\n    this.recordIndexesEditorStore.indexes$.pipe(take(1)).subscribe((indexes: IIndexState[]) => {\n      this.activeModalRef.close(\n        indexes.map(\n          (index) =>\n            ({\n              isAutomaticIndex: index.isAutomaticIndex,\n              indexName: index.indexName,\n              unique: index.unique,\n              ignoreBlankValues: index.ignoreBlankValues,\n              indexFieldIds: map(index.selectedFields, 'id')\n            } as IIndexDefinitionModel)\n        )\n      );\n    });\n  }\n\n  expandAll(): void {\n    this.recordIndexesEditorStore.expandAll();\n  }\n\n  collapseAll(): void {\n    this.recordIndexesEditorStore.collapseAll();\n  }\n\n  trackByIndex($index: number): number {\n    return $index;\n  }\n\n  optionFormatter(field: RxSelectOption): string {\n    return field.name;\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <div class=\"designer-modal-body modal-body d-flex mh-100 flex-column\">\n    <adapt-alert\n      class=\"flex-shrink-0\"\n      [config]=\"{\n        content: 'com.bmc.arsys.rx.client.record-designer.indexes.information' | translate,\n        variant: 'info',\n        type: 'inline'\n      }\"\n    ></adapt-alert>\n\n    <div class=\"text-right btn-group\">\n      <button\n        type=\"button\"\n        adapt-button\n        btn-type=\"tertiary\"\n        rx-id=\"add-index-button\"\n        class=\"d-icon-left-plus_circle float-left px-0\"\n        (click)=\"addIndex()\"\n        *ngIf=\"!isReadOnly\"\n      >\n        {{ 'com.bmc.arsys.rx.client.record-designer.indexes.add-index.label' | translate }}\n      </button>\n\n      <button\n        type=\"button\"\n        adapt-button\n        btn-type=\"tertiary\"\n        rx-id=\"expand-button\"\n        (click)=\"expandAll()\"\n        class=\"ml-auto\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.expand-all.label' | translate }}\n      </button>\n\n      <button\n        type=\"button\"\n        adapt-button\n        btn-type=\"tertiary\"\n        rx-id=\"collapse-button\"\n        class=\"pr-0\"\n        (click)=\"collapseAll()\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.collapse-all.label' | translate }}\n      </button>\n    </div>\n\n    <div class=\"designer-modal-accordion-wrapper\">\n      <adapt-accordion\n        [multiselect]=\"true\"\n        class=\"d-block\"\n        *ngFor=\"let index of vm.indexes; let $index = index; trackBy: trackByIndex\"\n      >\n        <div class=\"designer-modal-accordion-content\">\n          <adapt-accordion-tab\n            class=\"d-block\"\n            [isOpen]=\"index.isOpen\"\n            (open)=\"index.isOpen = true\"\n            (close)=\"index.isOpen = false\"\n          >\n            <div class=\"card-title-text w-100\">\n              <div class=\"designer-modal-card-title-content\">\n                <div class=\"left-header-block pl-0\">\n                  <div class=\"rx-ellipsis\" [title]=\"index.indexName\" rx-id=\"card-title\">\n                    <span *ngIf=\"!index.isAutomaticIndex\">\n                      {{\n                        index.indexName || 'com.bmc.arsys.rx.client.record-designer.indexes.new-index.label' | translate\n                      }}\n                    </span>\n                    <span *ngIf=\"index.isAutomaticIndex\">{{\n                      'com.bmc.arsys.rx.client.record-designer.indexes.automatic-index.label'\n                        | translate: { indexName: index.indexName }\n                    }}</span>\n                  </div>\n                </div>\n\n                <div class=\"right-header-block\">\n                  <button\n                    class=\"d-icon-left-cross_adapt py-0 pr-3 btn btn-sm\"\n                    adapt-button\n                    size=\"small\"\n                    type=\"button\"\n                    (click)=\"$event.stopPropagation(); removeIndex(index.guid)\"\n                    *ngIf=\"!isReadOnly && !index.isAutomaticIndex\"\n                    rx-id=\"remove-index-button\"\n                  >\n                    {{ 'com.bmc.arsys.rx.client.common.remove.label' | translate }}\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <adapt-rx-checkbox\n              [ngModel]=\"index.unique\"\n              (ngModelChange)=\"updateIndexUniqueValue(index, $event)\"\n              [disabled]=\"isReadOnly || index.isAutomaticIndex\"\n              label=\"{{ 'com.bmc.arsys.rx.client.record-designer.indexes.unique-index-checkbox.label' | translate }}\"\n            >\n            </adapt-rx-checkbox>\n\n            <adapt-rx-checkbox\n              [(ngModel)]=\"index.ignoreBlankValues\"\n              (ngModelChange)=\"updateIndexIgnoreBlankValue(index, $event)\"\n              [disabled]=\"isReadOnly || index.isAutomaticIndex\"\n              label=\"{{ 'com.bmc.arsys.rx.client.record-designer.indexes.ignore-blank-values.label' | translate }}\"\n              [tooltip]=\"{\n                iconName: 'question_circle_o',\n                content: 'com.bmc.arsys.rx.client.record-designer.indexes.ignore-blank-values.tooltip' | translate,\n                placement: 'top',\n                popoverMode: true\n              }\"\n            >\n            </adapt-rx-checkbox>\n\n            <div class=\"d-flex flex-fill\">\n              <adapt-rx-select\n                class=\"flex-grow-1 d-flex flex-column\"\n                popupMaxHeight=\"100%\"\n                [options]=\"index.availableFields\"\n                [ngModel]=\"index.checkedAvailableFields\"\n                [disabled]=\"isReadOnly || index.isAutomaticIndex\"\n                [deselectAllButton]=\"true\"\n                [selectAllButton]=\"true\"\n                [enableFilter]=\"true\"\n                [inline]=\"true\"\n                label=\"{{ 'com.bmc.arsys.rx.client.record-designer.indexes.available-fields.label' | translate }}\"\n                [multiple]=\"true\"\n                [singleSelectStyle]=\"'marker'\"\n                [optionFormatter]=\"optionFormatter\"\n                (ngModelChange)=\"onAvailableFieldsChange($event, index)\"\n                rx-id=\"available-field-list\"\n              ></adapt-rx-select>\n\n              <div class=\"mx-2 d-flex flex-column\">\n                <button\n                  type=\"button\"\n                  adapt-button\n                  class=\"d-icon-right-angle_right mt-auto mb-2\"\n                  btn-type=\"secondary\"\n                  (click)=\"moveToSelected(index)\"\n                  [disabled]=\"!index.checkedAvailableFields.length || index.isAutomaticIndex\"\n                  rx-id=\"move-to-selected-button\"\n                ></button>\n\n                <button\n                  type=\"button\"\n                  adapt-button\n                  class=\"d-icon-right-angle_left mb-auto\"\n                  btn-type=\"secondary\"\n                  (click)=\"moveToAvailable(index)\"\n                  [disabled]=\"!index.isMoveToAvailableButtonEnabled || index.isAutomaticIndex\"\n                  rx-id=\"move-to-available-button\"\n                ></button>\n              </div>\n\n              <adapt-rx-list-builder\n                class=\"flex-grow-1\"\n                [ngModel]=\"index.selectedFields\"\n                selectionMode=\"multiple\"\n                (ngModelChange)=\"onSelectedFieldsChange($event, index)\"\n                (listItemRemove)=\"onFieldRemove($event, index)\"\n                [disabled]=\"isReadOnly || index.isAutomaticIndex\"\n                [hideSearchField]=\"true\"\n                [hideEdit]=\"true\"\n                (dragend)=\"onDragEnd()\"\n                [tooltip]=\"{\n                  iconName: 'question_circle_o',\n                  content: 'com.bmc.arsys.rx.client.record-designer.indexes.selected-fields.tooltip' | translate,\n                  placement: 'top',\n                  popoverMode: true\n                }\"\n                label=\"{{ 'com.bmc.arsys.rx.client.record-designer.indexes.selected-fields.label' | translate }}\"\n                rx-id=\"selected-field-list\"\n              ></adapt-rx-list-builder>\n            </div>\n          </adapt-accordion-tab>\n        </div>\n      </adapt-accordion>\n    </div>\n  </div>\n\n  <div class=\"modal-footer\">\n    <div *ngIf=\"!isReadOnly\">\n      <button\n        class=\"mr-2\"\n        type=\"button\"\n        adapt-button\n        btn-type=\"primary\"\n        rx-id=\"save-button\"\n        (click)=\"save()\"\n        [disabled]=\"!vm.isDirty\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n      </button>\n\n      <button type=\"button\" adapt-button btn-type=\"secondary\" rx-id=\"cancel-button\" (click)=\"cancel()\">\n        {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n      </button>\n    </div>\n\n    <div *ngIf=\"isReadOnly\">\n      <button type=\"button\" adapt-button btn-type=\"secondary\" rx-id=\"close-button\" (click)=\"cancel()\">\n        {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n      </button>\n    </div>\n  </div>\n</ng-container>\n","import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IIndexesEditorOptions, IRecordIndexesControlOptions } from './record-indexes-control.types';\nimport { noop } from 'lodash';\nimport { RecordIndexesEditorComponent } from './record-indexes-editor.component';\nimport { IIndexDefinitionModel } from '../../record-designer.types';\nimport { OpenViewActionModalSize } from '@helix/platform/view/api';\nimport { IFormFocusable } from '@helix/platform/shared/api';\n\n@Component({\n  selector: 'rx-record-indexes',\n  templateUrl: './record-indexes-control.component.html',\n  styleUrls: ['./record-indexes-control.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RecordIndexesControlComponent,\n      multi: true\n    }\n  ]\n})\nexport class RecordIndexesControlComponent extends ValueAccessor<IIndexDefinitionModel[]> implements IFormFocusable {\n  @Input()\n  options: IRecordIndexesControlOptions;\n\n  constructor(private rxModalService: RxModalService, private translateService: TranslateService) {\n    super();\n  }\n\n  openIndexesEditor(indexToEditIndex: number = null): void {\n    this.rxModalService\n      .openModal({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.indexes.edit-indexes.label'),\n        data: {\n          indexes: this.value,\n          indexToEditIndex,\n          isReadOnly: this.options.isReadOnly,\n          fields: this.options.definitionModel.fields\n        } as IIndexesEditorOptions,\n        content: RecordIndexesEditorComponent,\n        size: OpenViewActionModalSize.Large\n      })\n      .then((indexes: IIndexDefinitionModel[]) => {\n        this.value = indexes;\n      })\n      .catch(noop);\n  }\n\n  removeIndex($index: number): void {\n    this.rxModalService\n      .confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.indexes.delete-index-confirmation.message'\n        )\n      })\n      .then((result: boolean) => {\n        if (result) {\n          this.value = this.value.filter((index, itemIndex) => itemIndex !== $index);\n        }\n      });\n  }\n\n  focus(data?: { indexToEditIndex: number }): void {\n    if (data?.indexToEditIndex) {\n      this.openIndexesEditor(data.indexToEditIndex);\n    } else {\n      this.openIndexesEditor();\n    }\n  }\n}\n","<adapt-button btn-type=\"tertiary\" rx-id=\"open-indexes-editor\" class=\"p-0 pb-1\" (click)=\"openIndexesEditor()\">\n  <span class=\"d-icon-plus_circle\"></span>\n  {{ 'com.bmc.arsys.rx.client.record-designer.indexes.edit-indexes.label' | translate }}\n</adapt-button>\n\n<div class=\"record-index rounded mb-1 border font-weight-bold\" *ngFor=\"let index of value; let $index = index\">\n  <div class=\"d-flex mb-1\">\n    <span rx-id=\"record-index-name\" [title]=\"index.indexName\">\n      <span *ngIf=\"!index.isAutomaticIndex\">{{\n        index.indexName || 'com.bmc.arsys.rx.client.record-designer.indexes.new-index.label' | translate\n      }}</span>\n      <span *ngIf=\"index.isAutomaticIndex\"\n        >{{\n          'com.bmc.arsys.rx.client.record-designer.indexes.automatic-index.label'\n            | translate\n              : {\n                  indexName:\n                    index.indexName || 'com.bmc.arsys.rx.client.record-designer.indexes.new-index.label' | translate\n                }\n        }}\n        <adapt-icon\n          name=\"question_circle_o\"\n          class=\"ml-2\"\n          [adaptPopover]=\"'com.bmc.arsys.rx.client.record-designer.indexes.system-index.tooltip' | translate\"\n        >\n        </adapt-icon>\n      </span>\n    </span>\n\n    <button\n      class=\"ml-auto rx-button-unstyled d-icon-left-pencil btn-link\"\n      type=\"button\"\n      rx-id=\"open-index-editor\"\n      (click)=\"openIndexesEditor($index)\"\n      *ngIf=\"!index.isAutomaticIndex\"\n    ></button>\n\n    <button\n      type=\"button\"\n      class=\"rx-button-unstyled d-icon-cross btn-link\"\n      rx-id=\"remove-index\"\n      (click)=\"removeIndex($index)\"\n      *ngIf=\"!options.isReadOnly && !index.isAutomaticIndex\"\n    ></button>\n  </div>\n\n  <div class=\"caption ellipsis\">\n    {{\n      (index.unique\n        ? 'com.bmc.arsys.rx.client.record-designer.indexes.unique-index.label'\n        : 'com.bmc.arsys.rx.client.record-designer.indexes.non-unique-index.label.value'\n      ) | translate\n    }},\n    {{\n      index.indexFieldIds.length === 1\n        ? ('com.bmc.arsys.rx.client.record-designer.indexes.one-field-index.label' | translate)\n        : ('com.bmc.arsys.rx.client.record-designer.indexes.many-fields-index.label'\n          | translate: { fieldCount: index.indexFieldIds.length })\n    }}\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { RX_RECORD_DEFINITION, RxFieldDefinitionService } from '@helix/platform/record/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  IFormSectionBuilderConfig,\n  RX_OVERLAY,\n  RX_PERMISSION,\n  RxOverlayService,\n  Tooltip\n} from '@helix/platform/shared/api';\nimport {\n  BooleanFormControlComponent,\n  CounterFormControlComponent,\n  ExpressionFormControlComponent,\n  ICheckboxFormControlOptions,\n  ICounterFormControlOptions,\n  IDefinitionPickerComponentOptions,\n  IExpressionFormControlOptions,\n  IPermissionEditorComponentOptions,\n  ISelectFormControlOptions,\n  ISwitcherFormControlOptions,\n  ITextareaFormControlOptions,\n  ITextFormControlOptions,\n  RxDefinitionPickerComponent,\n  RxDefinitionPickerType,\n  RxPermissionEditorComponent,\n  RxRevertCustomizationComponent,\n  SelectFormControlComponent,\n  SwitchFormControlComponent,\n  TextareaFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { IRecordDefinitionModel } from '../record-designer.types';\nimport { RecordCustomizationOptionsComponent } from './record-customization-options/record-customization-options.component';\nimport { RX_RECORD_DESIGNER } from './record-designer.constant';\nimport { RecordInheritanceEditorComponent } from './record-inheritance-editor/record-inheritance-editor.component';\nimport { SearchFieldEditorControlComponent } from './search-field-editor/search-field-editor-control.component';\nimport { ISearchFieldEditorControlOptions } from './search-field-editor/search-field.types';\nimport { findIndex, get, includes, isNumber } from 'lodash';\nimport { RecordDesignerExpressionConfigurator } from './record-designer-expression-configurator.class';\nimport { ArchiveAssociationsControlComponent } from './archive-associations-control/archive-associations-control.component';\nimport { IArchiveAssociationControlOptions } from './archive-associations-control/archive-associations-control.types';\nimport { RecordIndexesControlComponent } from './record-indexes-control/record-indexes-control.component';\nimport { IRecordIndexesControlOptions } from './record-indexes-control/record-indexes-control.types';\nimport { IRecordInheritanceSelectorOptions } from './record-inheritance-editor/record-inheritance-editor.interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRecordDesignerInspectorService {\n  constructor(\n    private rxFieldDefinitionService: RxFieldDefinitionService,\n    private rxOverlayService: RxOverlayService,\n    private translateService: TranslateService\n  ) {}\n\n  getDefinitionInspectorConfig(\n    isNewDefinition: boolean,\n    definitionModel: IRecordDefinitionModel,\n    definitionModelFromDefinition: IRecordDefinitionModel,\n    bundleId: string,\n    isPropertiesCustomizationAllowed: boolean,\n    isIndexCustomizationAllowed: boolean,\n    isPermissionsCustomizationAllowed: boolean,\n    isFieldsCustomizationAllowed: boolean,\n    isReadOnly: boolean,\n    expressionConfigurator: RecordDesignerExpressionConfigurator\n  ): IFormSectionBuilderConfig[] {\n    let configs: IFormSectionBuilderConfig[] = [];\n\n    const isOverlayMode =\n      !isNewDefinition && definitionModel.overlayOperation !== RX_OVERLAY.operationTypes.createdInThisOverlayGroup;\n    const isAuditRecordDefinition = Boolean(definitionModel.isAuditRecordDefinition);\n\n    const isDeleteSourceRecordOperation =\n      definitionModel.archiveType === RX_RECORD_DESIGNER.archiving.types.deleteSourceRecord.id;\n\n    const doNotArchive = definitionModel.archiveType === RX_RECORD_DESIGNER.archiving.types.doNotArchive.id;\n\n    const archivingOptions = Object.values(RX_RECORD_DESIGNER.archiving.types).map((value) => ({\n      ...value,\n      name: this.translateService.instant(value.nameKey)\n    }));\n\n    const joinTypeOptions = Object.values(RX_RECORD_DEFINITION.joinTypes).map((joinType) => ({\n      ...joinType,\n      name: this.translateService.instant(joinType.displayName),\n      id: joinType.value\n    }));\n\n    const weightedRelevancyFields = [\n      {\n        name: 'weightedRelevancyTitle',\n        component: SelectFormControlComponent,\n        isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.title-field.label'\n          ),\n          options: definitionModel.fields\n            .filter(\n              (fieldDefinition) =>\n                isNumber(fieldDefinition.id) &&\n                (get(fieldDefinition, 'searchDefinition.enableFTSSearch') ||\n                  get(fieldDefinition, 'searchDefinition.enableCognitiveSearch')) &&\n                !includes(\n                  [definitionModel.weightedRelevancyEnvironment, definitionModel.weightedRelevancyKeywords],\n                  fieldDefinition.id\n                )\n            )\n            .map((fieldDefinition) => ({\n              name: fieldDefinition.name,\n              id: fieldDefinition.id\n            })),\n          tooltip: new Tooltip(\n            this.translateService.instant(\n              definitionModel.enableCognitiveSearch\n                ? 'com.bmc.arsys.rx.client.record-designer.definition-properties.title-field-cognitive-search.tooltip'\n                : 'com.bmc.arsys.rx.client.record-designer.definition-properties.title-field-fts.tooltip'\n            )\n          )\n        } as ISelectFormControlOptions\n      },\n      {\n        name: 'weightedRelevancyEnvironment',\n        component: SelectFormControlComponent,\n        isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.environment-field.label'\n          ),\n          options: definitionModel.fields\n            .filter(\n              (fieldDefinition) =>\n                isNumber(fieldDefinition.id) &&\n                (get(fieldDefinition, 'searchDefinition.enableFTSSearch') ||\n                  get(fieldDefinition, 'searchDefinition.enableCognitiveSearch')) &&\n                !includes(\n                  [definitionModel.weightedRelevancyTitle, definitionModel.weightedRelevancyKeywords],\n                  fieldDefinition.id\n                )\n            )\n            .map((fieldDefinition) => ({\n              name: fieldDefinition.name,\n              id: fieldDefinition.id\n            })),\n          tooltip: new Tooltip(\n            this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.definition-properties.environment-field.tooltip'\n            )\n          )\n        } as ISelectFormControlOptions\n      },\n      {\n        name: 'weightedRelevancyKeywords',\n        component: SelectFormControlComponent,\n        isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.keywords-field.label'\n          ),\n          options: definitionModel.fields\n            .filter(\n              (fieldDefinition) =>\n                isNumber(fieldDefinition.id) &&\n                (get(fieldDefinition, 'searchDefinition.enableFTSSearch') ||\n                  get(fieldDefinition, 'searchDefinition.enableCognitiveSearch')) &&\n                !includes(\n                  [definitionModel.weightedRelevancyTitle, definitionModel.weightedRelevancyEnvironment],\n                  fieldDefinition.id\n                )\n            )\n            .map((fieldDefinition) => ({\n              name: fieldDefinition.name,\n              id: fieldDefinition.id\n            })),\n          tooltip: new Tooltip(\n            this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.definition-properties.keywords-field.tooltip'\n            )\n          )\n        } as ISelectFormControlOptions\n      }\n    ];\n\n    if (definitionModel.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType) {\n      configs = [\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n          controls: [\n            {\n              name: 'name',\n              component: TextFormControlComponent,\n              isDisabled: !isNewDefinition,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n                required: true\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'description',\n              component: TextareaFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label'),\n                rows: 3\n              } as ITextareaFormControlOptions\n            },\n            {\n              component: RxRevertCustomizationComponent,\n              options: {\n                overlayGroupId: definitionModel.overlayGroupId,\n                overlayDescriptor: definitionModel.overlayDescriptor\n              }\n            },\n            {\n              name: 'customizationOptions',\n              component: RecordCustomizationOptionsComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n              options: {\n                definitionTypeDisplayName: this.translateService\n                  .instant('com.bmc.arsys.rx.client.record-definition.label')\n                  .toLowerCase(),\n                recordDefinition: definitionModel\n              }\n            },\n            {\n              name: 'allowNonAdminToDeleteRecordInstances',\n              component: SwitchFormControlComponent,\n              isDisabled: isAuditRecordDefinition || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.allow-non-admin-users-to-delete-records.label'\n                )\n              } as ISwitcherFormControlOptions\n            },\n            {\n              name: 'owner',\n              component: TextFormControlComponent,\n              isDisabled: true,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.owner.label')\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'lastUpdateTime',\n              component: TextFormControlComponent,\n              isDisabled: true,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.modified-date.label')\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'lastChangedBy',\n              component: TextFormControlComponent,\n              isDisabled: true,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.modified-by.label')\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'permissions',\n              component: RxPermissionEditorComponent,\n              isDisabled: !isPermissionsCustomizationAllowed || isReadOnly,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.permissions.label'),\n                type: RX_PERMISSION.editorContexts.record\n              } as IPermissionEditorComponentOptions\n            },\n            {\n              name: 'shouldExportData',\n              component: SwitchFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isAuditRecordDefinition || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.should-export-data.label'\n                ),\n                tooltip: new Tooltip(\n                  this.translateService.instant(\n                    'com.bmc.arsys.rx.client.record-designer.definition-properties.should-export-data.tooltip'\n                  )\n                )\n              } as ISwitcherFormControlOptions\n            }\n          ]\n        },\n        {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.title'\n          ),\n          controls: [\n            {\n              name: 'recordInheritanceSelector',\n              component: RecordInheritanceEditorComponent,\n              options: {\n                recordDefinition: definitionModel,\n                isReadOnly: isOverlayMode || !isPropertiesCustomizationAllowed || isAuditRecordDefinition\n              } as IRecordInheritanceSelectorOptions\n            }\n          ]\n        },\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.search.label'),\n          controls: [\n            {\n              name: 'enableCognitiveSearch',\n              component: SwitchFormControlComponent,\n              isDisabled: isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.enable-cognitive-search.label'\n                )\n              } as ISwitcherFormControlOptions\n            },\n            {\n              name: 'recordSearchFields',\n              component: SearchFieldEditorControlComponent,\n              options: {\n                recordDefinitionModel: definitionModel,\n                isReadOnly: !isPropertiesCustomizationAllowed || isAuditRecordDefinition || isReadOnly\n              } as ISearchFieldEditorControlOptions\n            },\n            ...weightedRelevancyFields\n          ]\n        },\n        {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.indexes.title'\n          ),\n          controls: [\n            {\n              name: 'indexDefinitions',\n              component: RecordIndexesControlComponent,\n              options: {\n                isReadOnly: !isIndexCustomizationAllowed || isReadOnly,\n                definitionModel\n              } as IRecordIndexesControlOptions\n            }\n          ]\n        },\n        {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.display-value.title'\n          ),\n          controls: [\n            {\n              name: 'displayFieldIdInAssociation',\n              component: SelectFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.associated-display-field.title'\n                ),\n                options: definitionModel.fields\n                  .filter((field) => this.rxFieldDefinitionService.canBeAssociatedDisplayField(field))\n                  .map((field) => ({ id: field.id, name: field.name }))\n                  .sort((a, b) => a.name.localeCompare(b.name)),\n                tooltip: new Tooltip(\n                  this.translateService.instant(\n                    'com.bmc.arsys.rx.client.record-designer.definition-properties.associated-display-field.tooltip'\n                  )\n                )\n              } as ISelectFormControlOptions\n            }\n          ]\n        },\n        {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.auditing.title'\n          ),\n          controls: [\n            {\n              name: 'isAuditingEnabled',\n              component: SwitchFormControlComponent,\n              isDisabled: isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.enabled.label'\n                )\n              } as ISwitcherFormControlOptions\n            },\n            {\n              name: 'auditRecordDefinitionName',\n              component: TextFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.audit-record-definition-name.label'\n                )\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'auditSourceRecordDefinitionName',\n              component: TextFormControlComponent,\n              isDisabled: true,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.audited-from.label'\n                )\n              } as ITextFormControlOptions\n            }\n          ]\n        },\n        {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.title'\n          ),\n          controls: [\n            {\n              name: 'isArchivingEnabled',\n              component: SwitchFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isOverlayMode || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.enabled.label'\n                )\n              } as ISwitcherFormControlOptions\n            },\n            {\n              name: 'archiveType',\n              component: SelectFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isOverlayMode || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.audit-record-operation.label'\n                ),\n                options: archivingOptions\n              } as ISelectFormControlOptions\n            },\n            {\n              name: 'includeAttachments',\n              component: BooleanFormControlComponent,\n              isDisabled:\n                !isPropertiesCustomizationAllowed ||\n                doNotArchive ||\n                isOverlayMode ||\n                isDeleteSourceRecordOperation ||\n                isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.include-attachments.label'\n                ),\n                shouldDisplayAsCheckbox: true\n              } as ICheckboxFormControlOptions\n            },\n            {\n              name: 'archiveRecordDefinitionName',\n              component: TextFormControlComponent,\n              isDisabled:\n                !isPropertiesCustomizationAllowed ||\n                doNotArchive ||\n                isOverlayMode ||\n                isDeleteSourceRecordOperation ||\n                isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.archive-record-definition-name.label'\n                )\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'ageQualifierInDays',\n              component: CounterFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || doNotArchive || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.record-age.label'\n                ),\n                tooltip: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.record-age.tooltip'\n                ),\n                allowIntegerOnly: true\n              } as ICounterFormControlOptions\n            },\n            {\n              name: 'ageQualifierFieldId',\n              component: SelectFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || doNotArchive || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.record-age-field.label'\n                ),\n                options: definitionModel.fields\n                  .filter((field) => field.resourceType === RX_RECORD_DEFINITION.resourceTypes.dateTime)\n                  .map((fieldDefinition) => ({\n                    name: fieldDefinition.name,\n                    id: fieldDefinition.id\n                  }))\n                  .sort((a, b) => a.name.localeCompare(b.name))\n              } as ISelectFormControlOptions\n            },\n            {\n              name: 'archiveDescription',\n              component: TextFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || doNotArchive || isReadOnly,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label')\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'archiveDataCriteria',\n              component: ExpressionFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || doNotArchive || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.record-filter.label'\n                ),\n                dataDictionary$: expressionConfigurator.getDataDictionary(RX_RECORD_DESIGNER.archiveDataCriteriaPath),\n                operators: expressionConfigurator.getOperators(RX_RECORD_DESIGNER.archiveDataCriteriaPath),\n                tooltip: new Tooltip(\n                  this.translateService.instant(\n                    'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.record-filter.tooltip'\n                  )\n                )\n              } as IExpressionFormControlOptions\n            },\n            {\n              name: 'associationsToFollowForArchive',\n              component: ArchiveAssociationsControlComponent,\n              options: {\n                definitionModel,\n                definitionModelFromDefinition,\n                bundleId,\n                isOverlayMode,\n                isReadOnly: !isPropertiesCustomizationAllowed || doNotArchive\n              } as IArchiveAssociationControlOptions\n            }\n          ]\n        }\n      ];\n    }\n\n    if (definitionModel.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.join.recordDefinitionType) {\n      configs = [\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n          controls: [\n            {\n              name: 'name',\n              component: TextFormControlComponent,\n              isDisabled: !isNewDefinition,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n                required: true\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'description',\n              component: TextareaFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label'),\n                rows: 3\n              } as ITextareaFormControlOptions\n            },\n            {\n              name: 'primaryRecordDefinitionName',\n              component: RxDefinitionPickerComponent,\n              isDisabled: true,\n              options: {\n                definitionType: RxDefinitionPickerType.Record,\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.primary-record.label'\n                )\n              } as IDefinitionPickerComponentOptions\n            },\n            {\n              name: 'secondaryRecordDefinitionName',\n              component: RxDefinitionPickerComponent,\n              isDisabled: true,\n              options: {\n                definitionType: RxDefinitionPickerType.Record,\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.secondary-record.label'\n                )\n              } as IDefinitionPickerComponentOptions\n            },\n            {\n              name: 'joinType',\n              component: SelectFormControlComponent,\n              isDisabled: true,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.join-type.label'\n                ),\n                options: joinTypeOptions\n              } as ISelectFormControlOptions\n            },\n            {\n              name: 'joinCriteria',\n              component: ExpressionFormControlComponent,\n              isDisabled: isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.join-criteria.label'\n                ),\n                dataDictionary$: expressionConfigurator.getDataDictionary(RX_RECORD_DESIGNER.joinCriteriaPath),\n                operators: expressionConfigurator.getOperators(RX_RECORD_DESIGNER.joinCriteriaPath)\n              } as IExpressionFormControlOptions\n            },\n            {\n              component: RxRevertCustomizationComponent,\n              options: {\n                overlayGroupId: definitionModel.overlayGroupId,\n                overlayDescriptor: definitionModel.overlayDescriptor\n              }\n            },\n            {\n              name: 'customizationOptions',\n              component: RecordCustomizationOptionsComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n              options: {\n                definitionTypeDisplayName: this.translateService\n                  .instant('com.bmc.arsys.rx.client.record-definition.label')\n                  .toLowerCase(),\n                recordDefinition: definitionModel\n              }\n            },\n            {\n              name: 'owner',\n              component: TextFormControlComponent,\n              isDisabled: true,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.owner.label')\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'lastUpdateTime',\n              component: TextFormControlComponent,\n              isDisabled: true,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.modified-date.label')\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'lastChangedBy',\n              component: TextFormControlComponent,\n              isDisabled: true,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.modified-by.label')\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'permissions',\n              component: RxPermissionEditorComponent,\n              isDisabled: !isPermissionsCustomizationAllowed || isReadOnly,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.permissions.label'),\n                type: RX_PERMISSION.editorContexts.record\n              } as IPermissionEditorComponentOptions\n            },\n            {\n              name: 'shouldExportData',\n              component: SwitchFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isAuditRecordDefinition || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.should-export-data.label'\n                ),\n                tooltip: new Tooltip(\n                  this.translateService.instant(\n                    'com.bmc.arsys.rx.client.record-designer.definition-properties.should-export-data.tooltip'\n                  )\n                )\n              } as ISwitcherFormControlOptions\n            }\n          ]\n        },\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.search.label'),\n          controls: [\n            {\n              name: 'enableCognitiveSearch',\n              component: SwitchFormControlComponent,\n              isDisabled: isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.enable-cognitive-search.label'\n                )\n              } as ISwitcherFormControlOptions\n            },\n            {\n              name: 'recordSearchFields',\n              component: SearchFieldEditorControlComponent,\n              options: {\n                recordDefinitionModel: definitionModel,\n                isReadOnly: !isPropertiesCustomizationAllowed || isAuditRecordDefinition || isReadOnly\n              } as ISearchFieldEditorControlOptions\n            },\n            ...weightedRelevancyFields\n          ]\n        },\n        {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.auditing.title'\n          ),\n          controls: [\n            {\n              name: 'isAuditingEnabled',\n              component: SwitchFormControlComponent,\n              isDisabled: isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.enabled.label'\n                )\n              } as ISwitcherFormControlOptions\n            },\n            {\n              name: 'auditRecordDefinitionName',\n              component: TextFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.audit-record-definition-name.label'\n                )\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'auditSourceRecordDefinitionName',\n              component: TextFormControlComponent,\n              isDisabled: true,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.audited-from.label'\n                )\n              } as ITextFormControlOptions\n            }\n          ]\n        }\n      ];\n    }\n\n    if (isOverlayMode) {\n      configs[0]?.controls.splice(findIndex(configs[0].controls, { name: 'shouldExportData' }), 1);\n    }\n\n    if (isNewDefinition) {\n      configs[0]?.controls.splice(findIndex(configs[0].controls, { name: 'owner' }), 3);\n    }\n\n    return configs;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../record-designer.types';\nimport {\n  AssociationSelectionType,\n  IFieldDefinition,\n  IRecordDefinition,\n  RX_RECORD_DEFINITION,\n  RxFieldDefinitionService,\n  RxRecordDefinitionService\n} from '@helix/platform/record/api';\nimport { find, isNumber, omit } from 'lodash';\nimport { RxDefinitionNameService, RxLocalizationService, RxOverlayService } from '@helix/platform/shared/api';\nimport { RxDateUtilsService, RxGuidService } from '@helix/platform/utils';\nimport moment from 'moment-es6';\n\n@Injectable()\nexport class RxRecordDesignerService {\n  constructor(\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxFieldDefinitionService: RxFieldDefinitionService,\n    private rxGuidService: RxGuidService,\n    private rxOverlayService: RxOverlayService,\n    private rxRecordDefinitionService: RxRecordDefinitionService,\n    private rxLocalizationService: RxLocalizationService,\n    private rxDateUtilService: RxDateUtilsService\n  ) {}\n\n  // Convert \"$ID$ = 'ID'\" to ${Record1.PRIMARY_RECORD_DEFINITION.ID} = ${Record2.SECONDARY_RECORD_DEFINITION.ID}\n  getJoinCriteriaExpression(\n    joinCriteria: string,\n    primaryRecordDefinitionName: string,\n    secondaryRecordDefinitionName: string\n  ): string {\n    const primaryFieldRegExp = new RegExp('\\\\$(?!NULL)([\\\\w .]+)\\\\$', 'g');\n    const secondaryFieldRegExp = new RegExp(\"'([^']+)'\", 'g');\n\n    return (joinCriteria || '')\n      .replace(\n        primaryFieldRegExp,\n        '${' +\n          this.rxDefinitionNameService.getDisplayName(primaryRecordDefinitionName) +\n          '.' +\n          RX_RECORD_DEFINITION.sourceRecordTypes.primary +\n          '.$1}'\n      )\n      .replace(\n        secondaryFieldRegExp,\n        '${' +\n          this.rxDefinitionNameService.getDisplayName(secondaryRecordDefinitionName) +\n          '.' +\n          RX_RECORD_DEFINITION.sourceRecordTypes.secondary +\n          '.$1}'\n      );\n  }\n\n  // Convert ${Record1.PRIMARY_RECORD_DEFINITION.ID} = ${Record2.SECONDARY_RECORD_DEFINITION.ID} to \"$ID$ = 'ID'\"\n  getJoinCriteriaArExpression(\n    joinCriteria: string,\n    primaryRecordDefinitionName: string,\n    secondaryRecordDefinitionName: string\n  ): string {\n    const primaryFieldRegExp = new RegExp(\n      '\\\\${' +\n        this.rxDefinitionNameService.getDisplayName(primaryRecordDefinitionName) +\n        '\\\\.' +\n        RX_RECORD_DEFINITION.sourceRecordTypes.primary +\n        '\\\\.([^}]+)}',\n      'g'\n    );\n\n    const secondaryFieldRegExp = new RegExp(\n      '\\\\${' +\n        this.rxDefinitionNameService.getDisplayName(secondaryRecordDefinitionName) +\n        '\\\\.' +\n        RX_RECORD_DEFINITION.sourceRecordTypes.secondary +\n        '\\\\.([^}]+)}',\n      'g'\n    );\n\n    return (joinCriteria || '')\n      .replace(primaryFieldRegExp, '#$1#')\n      .replace(/#/g, '$')\n      .replace(secondaryFieldRegExp, \"'$1'\");\n  }\n\n  getDefinitionFromDefinitionModel(model: IRecordDefinitionModel, bundleId: string): IRecordDefinition {\n    return {\n      allowFieldsOverlay: model.customizationOptions.allowFieldsOverlay,\n      allowNonAdminToDeleteRecordInstances: model.allowNonAdminToDeleteRecordInstances,\n      allowIndexesOverlay: model.customizationOptions.allowIndexesOverlay,\n      allowOtherPropertiesOverlay: model.customizationOptions.allowOtherPropertiesOverlay,\n      allowPermissionsOverlay: model.customizationOptions.allowPermissionsOverlay,\n      enableCognitiveSearch: model.enableCognitiveSearch,\n      description: model.description,\n      guid: model.guid,\n      indexDefinitions:\n        model.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType\n          ? model.indexDefinitions.map((indexDefinitionModel) => omit(indexDefinitionModel, 'isAutomaticIndex'))\n          : undefined,\n      inheritanceDescriptor: model.recordInheritanceSelector.inheritanceDescriptor,\n      isAbstract: model.recordInheritanceSelector.inheritanceOptions?.isAbstract,\n      isFinal: model.recordInheritanceSelector.inheritanceOptions?.isFinal,\n      isSharedInstanceStorage: model.recordInheritanceSelector.inheritanceOptions?.isSharedInstanceStorage,\n      joinCriteria: model.joinCriteria\n        ? this.getJoinCriteriaArExpression(\n            model.joinCriteria,\n            model.primaryRecordDefinitionName,\n            model.secondaryRecordDefinitionName\n          )\n        : undefined,\n      joinType: model.joinType,\n      lastChangedBy: model.lastChangedBy,\n      lastUpdateTime: model.lastUpdateTime ? moment(model.lastUpdateTime).format() : null,\n      name: `${bundleId}:${model.name}`,\n      overlayGroupId: model.overlayGroupId,\n      owner: model.owner,\n      overlayDescriptor: model.overlayDescriptor,\n      permissions: model.permissions,\n      primaryRecordDefinitionName: model.primaryRecordDefinitionName,\n      resourceType: model.resourceType,\n      secondaryRecordDefinitionName: model.secondaryRecordDefinitionName,\n      shouldExportData: model.shouldExportData,\n      scope: model.customizationOptions.scope,\n      tags: model.tags,\n      version: model.version,\n      weightedRelevancyFields: {\n        TITLE: model.weightedRelevancyTitle,\n        ENVIRONMENT: model.weightedRelevancyEnvironment,\n        KEYWORDS: model.weightedRelevancyKeywords\n      },\n      displayFieldIdInAssociation: find(model.fields, { id: model.displayFieldIdInAssociation })\n        ? model.displayFieldIdInAssociation\n        : null,\n      archiveDescriptor: {\n        ageQualifierFieldId: model.ageQualifierFieldId,\n        ageQualifierInDays: model.ageQualifierInDays,\n        archiveRecordDefinitionName: model.archiveRecordDefinitionName,\n        description: model.archiveDescription,\n        archiveType: model.archiveType,\n        includeAttachments: model.includeAttachments,\n        archiveDataCriteria: model.archiveDataCriteria,\n        isEnabled: model.isArchivingEnabled\n      },\n      associationsToFollowForArchive: model.associationsToFollowForArchive,\n      auditDescriptor: {\n        isEnabled: model.isAuditingEnabled,\n        auditRecordDefinitionName: model.auditRecordDefinitionName,\n        auditDataCriteria: model.auditDataCriteria,\n        associatedAuditFieldsByAssociationName: model.associatedAuditFieldsByAssociationName\n      },\n      auditSourceRecordDefinitionName: model.auditSourceRecordDefinitionName,\n      fieldDefinitions: model.fields.map((fieldModel: IRecordFieldDefinitionModel) => {\n        const field: IFieldDefinition = {\n          resourceType: fieldModel.resourceType,\n          lastUpdateTime: fieldModel.lastUpdateTime,\n          lastChangedBy: fieldModel.lastChangedBy,\n          owner: fieldModel.owner,\n          name: fieldModel.name,\n          tags: fieldModel.tags,\n          description: fieldModel.description,\n          overlayGroupId: fieldModel.overlayGroupId,\n          id: isNumber(fieldModel.id) ? fieldModel.id : '',\n          fieldOption: fieldModel.fieldOption,\n          permissions: fieldModel.permissions,\n          fieldTypeName: fieldModel.fieldTypeName,\n          isInherited: fieldModel.isInherited,\n          explicitPermissions: fieldModel.explicitPermissions,\n          overlayDescriptor: fieldModel.overlayDescriptor,\n          fieldMapping: fieldModel.fieldMapping,\n          allowPermissionsOverlay: fieldModel.allowPermissionsOverlay,\n          allowOtherPropertiesOverlay: fieldModel.allowOtherPropertiesOverlay,\n          auditOption: fieldModel.audit ? 'AUDIT_AND_COPY' : fieldModel.copy ? 'COPY' : null,\n          allowPermissionsEdit: fieldModel.allowPermissionsEdit,\n          maxLength: fieldModel.maxLength,\n          searchDefinition: fieldModel.searchDefinition,\n          namedListDefinition: fieldModel.namedListDefinition,\n          shouldPersistEncrypted: fieldModel.shouldPersistEncrypted,\n          shouldPersistHashed: fieldModel.shouldPersistHashed,\n          pattern: fieldModel.pattern,\n          anyUserAllowedToSubmit: fieldModel.anyUserAllowedToSubmit\n        };\n\n        if (fieldModel.resourceType === RX_RECORD_DEFINITION.dataTypes.localizedCharacter.resourceType) {\n          field.defaultValueByLocale = fieldModel.defaultValueByLocale;\n        } else if (fieldModel.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType) {\n          field.defaultValue = fieldModel.selectionFieldOptionProperties.defaultValue as unknown as string;\n          field.optionNamesById = fieldModel.selectionFieldOptionProperties?.optionNamesById;\n          field.optionLabelsById = fieldModel.selectionFieldOptionProperties?.optionLabelsById;\n        } else if (fieldModel.resourceType !== RX_RECORD_DEFINITION.dataTypes.attachment.resourceType) {\n          field.defaultValue = fieldModel.defaultValue;\n        }\n\n        return field;\n      })\n      // TODO-VM: update when new custom component in inspector config is implemented\n    };\n  }\n\n  getDefinitionModelFromDefinition(recordDefinition: IRecordDefinition): IRecordDefinitionModel {\n    return {\n      allowNonAdminToDeleteRecordInstances: recordDefinition.allowNonAdminToDeleteRecordInstances,\n      isArchivingEnabled: recordDefinition.archiveDescriptor?.isEnabled,\n      ageQualifierFieldId: recordDefinition.archiveDescriptor?.ageQualifierFieldId,\n      ageQualifierInDays: recordDefinition.archiveDescriptor?.ageQualifierInDays,\n      archiveRecordDefinitionName: recordDefinition.archiveDescriptor?.archiveRecordDefinitionName,\n      archiveDescription: recordDefinition.archiveDescriptor?.description,\n      archiveType: recordDefinition.archiveDescriptor?.archiveType,\n      includeAttachments: recordDefinition.archiveDescriptor?.includeAttachments,\n      archiveDataCriteria: recordDefinition.archiveDescriptor?.archiveDataCriteria,\n      associationsToFollowForArchive: {\n        specificAssociationNames: recordDefinition.associationsToFollowForArchive?.specificAssociationNames || [],\n        selectionType:\n          recordDefinition.associationsToFollowForArchive?.selectionType || AssociationSelectionType.FollowParent\n      },\n      isAuditingEnabled: recordDefinition.auditDescriptor?.isEnabled,\n      auditRecordDefinitionName: recordDefinition.auditDescriptor?.auditRecordDefinitionName,\n      auditDataCriteria: recordDefinition.auditDescriptor?.auditDataCriteria,\n      associatedAuditFieldsByAssociationName: recordDefinition.auditDescriptor?.associatedAuditFieldsByAssociationName,\n      auditSourceRecordDefinitionName: recordDefinition.auditSourceRecordDefinitionName,\n      customizationOptions: {\n        allowFieldsOverlay: recordDefinition.allowFieldsOverlay,\n        allowIndexesOverlay: recordDefinition.allowIndexesOverlay,\n        allowOtherPropertiesOverlay: recordDefinition.allowOtherPropertiesOverlay,\n        allowPermissionsOverlay: recordDefinition.allowPermissionsOverlay,\n        allowOverlay: false,\n        fields: recordDefinition.fieldDefinitions as IRecordFieldDefinitionModel[],\n        scope: recordDefinition.scope\n      },\n      description: recordDefinition.description,\n      displayFieldIdInAssociation: recordDefinition.displayFieldIdInAssociation,\n      enableCognitiveSearch: recordDefinition.enableCognitiveSearch,\n      fullPermissions: recordDefinition.fullPermissions,\n      guid: recordDefinition.guid || this.rxGuidService.generate(),\n      indexDefinitions: recordDefinition.indexDefinitions?.map((indexDefinition) => ({\n        ...indexDefinition,\n        isAutomaticIndex: this.rxRecordDefinitionService.isAutomaticIndex(indexDefinition)\n      })),\n      isAuditRecordDefinition: recordDefinition.isAuditRecordDefinition,\n      joinCriteria: this.getJoinCriteriaExpression(\n        recordDefinition.joinCriteria,\n        recordDefinition.primaryRecordDefinitionName,\n        recordDefinition.secondaryRecordDefinitionName\n      ),\n      joinType: recordDefinition.joinType,\n      lastUpdateTime: recordDefinition.lastUpdateTime\n        ? this.rxDateUtilService.formatDate(recordDefinition.lastUpdateTime, 'medium')\n        : recordDefinition.lastUpdateTime,\n      lastChangedBy: recordDefinition.lastChangedBy,\n      localizableStringsByFieldId: recordDefinition.localizableStringsByFieldId,\n      name: this.rxDefinitionNameService.getDisplayName(recordDefinition.name),\n      overlayDescriptor: recordDefinition.overlayDescriptor,\n      overlayGroupId: recordDefinition.overlayGroupId,\n      overlayOperation: this.rxOverlayService.getOverlayOperation(\n        recordDefinition.overlayGroupId,\n        recordDefinition.overlayDescriptor ? recordDefinition.overlayDescriptor.parentOverlayGroupId : null\n      ),\n      owner: recordDefinition.owner,\n      permissions: recordDefinition.permissions,\n      primaryRecordDefinitionName: recordDefinition.primaryRecordDefinitionName,\n      secondaryRecordDefinitionName: recordDefinition.secondaryRecordDefinitionName,\n      recordInheritanceSelector: {\n        inheritanceDescriptor: recordDefinition.inheritanceDescriptor,\n        inheritanceOptions: {\n          isAbstract: recordDefinition.isAbstract,\n          isSharedInstanceStorage: recordDefinition.isSharedInstanceStorage,\n          isFinal: recordDefinition.isFinal\n        },\n        isInheritingCoreFields: null,\n        inheritedFieldDefinitions: []\n      },\n      recordSearchFields: recordDefinition.fieldDefinitions.filter(\n        (field) => field.searchDefinition\n      ) as IRecordFieldDefinitionModel[],\n      recordInstancePrefix: recordDefinition.recordInstancePrefix,\n      recordTypeName: recordDefinition.recordTypeName,\n      resourceType: recordDefinition.resourceType,\n      rowSecurityPropagations: recordDefinition.rowSecurityPropagations,\n      securityLabels: recordDefinition.securityLabels,\n      shouldExportData: recordDefinition.shouldExportData,\n      tags: recordDefinition.tags,\n      upgradeVersion: recordDefinition.upgradeVersion,\n      version: recordDefinition.version,\n      weightedRelevancyTitle: recordDefinition.weightedRelevancyFields?.TITLE,\n      weightedRelevancyEnvironment: recordDefinition.weightedRelevancyFields?.ENVIRONMENT,\n      weightedRelevancyKeywords: recordDefinition.weightedRelevancyFields?.KEYWORDS,\n      fields: recordDefinition.fieldDefinitions.map((fieldDefinition: IFieldDefinition) => ({\n        allowOtherPropertiesOverlay: fieldDefinition.allowOtherPropertiesOverlay,\n        allowPermissionsEdit: fieldDefinition.allowPermissionsEdit,\n        allowPermissionsOverlay: fieldDefinition.allowPermissionsOverlay,\n        anyUserAllowedToSubmit: fieldDefinition.anyUserAllowedToSubmit,\n        audit: fieldDefinition.auditOption === 'AUDIT_AND_COPY',\n        copy: fieldDefinition.auditOption === 'AUDIT_AND_COPY' || fieldDefinition.auditOption === 'COPY',\n        defaultValue: fieldDefinition.defaultValue,\n        defaultValueByLocale: fieldDefinition.defaultValueByLocale,\n        description: fieldDefinition.description,\n        explicitPermissions: fieldDefinition.explicitPermissions,\n        fieldMapping: fieldDefinition.fieldMapping,\n        fieldOption: fieldDefinition.fieldOption,\n        fieldTypeName: fieldDefinition.fieldTypeName,\n        guid: this.rxGuidService.generate(),\n        id: isNumber(fieldDefinition.id) ? fieldDefinition.id : fieldDefinition.customId || '',\n        isCoreField: this.rxFieldDefinitionService.isCoreField(fieldDefinition),\n        isInherited: fieldDefinition.isInherited,\n        isNewField: false,\n        lastChangedBy: fieldDefinition.lastChangedBy,\n        lastUpdateTime: fieldDefinition.lastUpdateTime,\n        maxLength: fieldDefinition.maxLength,\n        maxSize: fieldDefinition.maxSize,\n        maxValue: fieldDefinition.maxValue,\n        minValue: fieldDefinition.minValue,\n        name: fieldDefinition.name,\n        overlayDescriptor: fieldDefinition.overlayDescriptor,\n        overlayGroupId: fieldDefinition.overlayGroupId,\n        owner: fieldDefinition.owner,\n        permissions: fieldDefinition.permissions,\n        precision: fieldDefinition.precision,\n        resourceType: fieldDefinition.resourceType,\n        searchDefinition: fieldDefinition.searchDefinition,\n        selectionFieldOptionProperties: {\n          defaultValue: fieldDefinition.defaultValue as unknown as number,\n          optionNamesById: fieldDefinition.optionNamesById,\n          optionLabelsById: fieldDefinition.optionLabelsById\n        },\n        shouldPersistEncrypted: fieldDefinition.shouldPersistEncrypted,\n        shouldPersistHashed: fieldDefinition.shouldPersistHashed,\n        namedListDefinition: fieldDefinition.namedListDefinition,\n        pattern: fieldDefinition.pattern,\n        tags: fieldDefinition.tags\n      }))\n    };\n  }\n}\n","import { DatePipe } from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Injector,\n  Input,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { AdaptIsPanelOpenedCurrentlyModel, AdaptSidebarComponent } from '@bmc-ux/adapt-angular';\nimport { ColumnConfig, DataCellTemplateParams } from '@bmc-ux/adapt-table';\nimport {\n  IRecordDefinition,\n  RX_RECORD_DEFINITION,\n  RxFieldDefinitionService,\n  RxRecordDefinitionCacheService,\n  RxRecordDefinitionService\n} from '@helix/platform/record/api';\nimport {\n  ExpressionOperatorGroup,\n  ExpressionOperatorRowsByGroup,\n  IDesignerConfiguration,\n  IFormBuilderConfig,\n  IFormBuilderEvent,\n  IFormSectionBuilderConfig,\n  IPlainObject,\n  RxDefinitionNameService,\n  RxGlobalCacheService,\n  RxNotificationService,\n  RxOverlayService\n} from '@helix/platform/shared/api';\nimport {\n  IBreadcrumbItem,\n  IValidationIssue,\n  IValidationIssueSection,\n  RxModalService,\n  ValidationIssueType\n} from '@helix/platform/ui-kit';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  capitalize,\n  chain,\n  find,\n  includes,\n  intersectionBy,\n  invert,\n  isEmpty,\n  isNull,\n  isNumber,\n  map as _map,\n  noop,\n  some\n} from 'lodash';\nimport { combineLatest, from, Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  pluck,\n  scan,\n  shareReplay,\n  skip,\n  startWith,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n  withLatestFrom\n} from 'rxjs/operators';\nimport {\n  IRecordDefinitionModel,\n  IRecordFieldDefinitionGridRow,\n  IRecordFieldDefinitionModel\n} from '../record-designer.types';\nimport { RxFieldDefinitionManagerService } from './services/field-definition-manager.service';\nimport * as RecordDesignerActions from './+state/record-designer.actions';\nimport { Store } from '@ngrx/store';\nimport {\n  bundleIdSelector,\n  definitionModelFromDefinitionSelector,\n  definitionModelSelector,\n  inspectorTabIndexSelector,\n  isDesignModeSelector,\n  isDirtySelector,\n  savedDefinitionNameSelector,\n  selectedFieldGuidSelector\n} from './+state/record-designer.selectors';\nimport { RxRecordDefinitionValidatorService } from './record-definition-validator.service';\nimport { RxRecordDesignerInspectorService } from './record-designer-inspector.service';\nimport { InheritanceIssueInfoComponent } from './inheritance-issue-info/inheritance-issue-info.component';\nimport { RxRecordDesignerService } from './record-designer.service';\nimport {\n  IExpressionEditorPropertyChange,\n  RX_EXPRESSION_EDITOR,\n  RxExpressionEditorService\n} from '@helix/platform/shared/components';\nimport { RecordDesignerExpressionConfigurator } from './record-designer-expression-configurator.class';\nimport { RX_RECORD_DESIGNER } from './record-designer.constant';\nimport { AddJoinFieldsEditorComponent } from './add-join-fields-editor/add-join-fields-editor.component';\nimport { RxGuidService } from '@helix/platform/utils';\n\n@Component({\n  selector: 'rx-record-designer',\n  templateUrl: './record-designer.component.html',\n  styleUrls: ['./record-designer.component.scss']\n})\nexport class RecordDesignerComponent implements OnInit {\n  @ViewChild(AdaptSidebarComponent, { static: false })\n  adaptSidebarComponent: AdaptSidebarComponent;\n\n  @ViewChild('requiredCellTemplate', { static: true })\n  requiredCellTemplate: TemplateRef<DataCellTemplateParams>;\n\n  @ViewChild('dataTypeCellTemplate', { static: true })\n  dataTypeCellTemplate: TemplateRef<DataCellTemplateParams>;\n\n  @ViewChild('inheritedCellTemplate', { static: true })\n  inheritedCellTemplate: TemplateRef<DataCellTemplateParams>;\n\n  @Input()\n  configuration: IDesignerConfiguration;\n\n  @Output()\n  definitionSaved: EventEmitter<string> = new EventEmitter();\n\n  @Output()\n  definitionErrorLoading: EventEmitter<void> = new EventEmitter();\n\n  @Output()\n  closeDesigner: EventEmitter<void> = new EventEmitter<void>();\n\n  newTitle = `<${this.translateService.instant('com.bmc.arsys.rx.client.record-designer.new-record.title')}>`;\n  definition: IRecordDefinition = null;\n  columns: ColumnConfig[];\n  private isInheritColumnHidden: boolean = true;\n  private isJoinRecordDefinition: boolean = false;\n\n  dataTypes = [\n    RX_RECORD_DEFINITION.dataTypes.attachment,\n    RX_RECORD_DEFINITION.dataTypes.boolean,\n    RX_RECORD_DEFINITION.dataTypes.character,\n    RX_RECORD_DEFINITION.dataTypes.dateOnly,\n    RX_RECORD_DEFINITION.dataTypes.dateTime,\n    RX_RECORD_DEFINITION.dataTypes.localizedCharacter,\n    RX_RECORD_DEFINITION.dataTypes.timeOnly,\n    RX_RECORD_DEFINITION.dataTypes.integer,\n    RX_RECORD_DEFINITION.dataTypes.selection,\n    RX_RECORD_DEFINITION.dataTypes.decimal,\n    RX_RECORD_DEFINITION.dataTypes.real\n  ].sort((a, b) => a.displayName.localeCompare(b.displayName));\n\n  private inspectorTabIndexSubject: Subject<number> = new Subject();\n  private inspectorTabIndex$ = this.store$.select(inspectorTabIndexSelector);\n  private selectedFieldGuid$ = this.store$.select(selectedFieldGuidSelector);\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n  private inspectorFocusEditorSubject = new Subject<{ editorName: string; data: IPlainObject }>();\n  inspectorFocusEditor$ = this.inspectorFocusEditorSubject.asObservable();\n  private bundleId$ = this.store$.select(bundleIdSelector);\n  private isDesignMode$ = this.store$.select(isDesignModeSelector);\n  private definitionModel$: Observable<IRecordDefinitionModel> = this.store$.select(definitionModelSelector);\n  private isDirty$: Observable<boolean> = this.store$.select(isDirtySelector);\n\n  private bundleFriendlyName$: Observable<string> = this.bundleId$.pipe(\n    switchMap((bundleId: string) => this.rxGlobalCacheService.getBundleFriendlyName(bundleId))\n  );\n\n  private definitionDisplayName$: Observable<string> = this.definitionModel$.pipe(\n    map((updatedModel: IRecordDefinition) => this.rxDefinitionNameService.getDisplayName(updatedModel.name)),\n    startWith(null)\n  );\n\n  private definitionModelFromDefinition$: Observable<IRecordDefinitionModel> = this.store$\n    .select(definitionModelFromDefinitionSelector)\n    .pipe(shareReplay(1));\n\n  private primaryRecordDefinition$ = this.definitionModelFromDefinition$.pipe(\n    pluck('primaryRecordDefinitionName'),\n    distinctUntilChanged(),\n    filter<string>(Boolean),\n    switchMap((primaryRecordDefinitionName) =>\n      this.rxRecordDefinitionCacheService.getRecordDefinition(primaryRecordDefinitionName)\n    )\n  );\n\n  private secondaryRecordDefinition$ = this.definitionModelFromDefinition$.pipe(\n    pluck('secondaryRecordDefinitionName'),\n    distinctUntilChanged(),\n    filter<string>(Boolean),\n    switchMap((secondaryRecordDefinitionName) =>\n      this.rxRecordDefinitionCacheService.getRecordDefinition(secondaryRecordDefinitionName)\n    )\n  );\n\n  private joinRecordDataDictionary$ = combineLatest([\n    this.primaryRecordDefinition$,\n    this.secondaryRecordDefinition$\n  ]).pipe(\n    map(([primaryRecordDefinition, secondaryRecordDefinition]) => [\n      {\n        recordDefinitionName: this.rxDefinitionNameService.getDisplayName(primaryRecordDefinition.name),\n        label: `(${this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.join-record-wizard.join-criteria.primary.label'\n        )})`,\n        type: RX_RECORD_DEFINITION.sourceRecordTypes.primary,\n        fieldDefinitions: primaryRecordDefinition.fieldDefinitions\n      },\n      {\n        recordDefinitionName: this.rxDefinitionNameService.getDisplayName(secondaryRecordDefinition.name),\n        label: `(${this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.join-record-wizard.join-criteria.secondary.label'\n        )})`,\n        type: RX_RECORD_DEFINITION.sourceRecordTypes.secondary,\n        fieldDefinitions: secondaryRecordDefinition.fieldDefinitions\n      }\n    ]),\n    map((records) => {\n      return records.map((record) => ({\n        label: `${record.recordDefinitionName} ${record.label}`,\n        expanded: true,\n        children: chain(record.fieldDefinitions)\n          .map((fieldDefinition) => {\n            if (fieldDefinition.resourceType !== RX_RECORD_DEFINITION.dataTypes.attachment.resourceType) {\n              return {\n                label: `${record.recordDefinitionName}.${fieldDefinition.name}`,\n                icon: 'd-icon-field_text',\n                expression: `\\${${record.recordDefinitionName}.${record.type}.${fieldDefinition.name}}`\n              };\n            }\n          })\n          .compact()\n          .sortBy((item) => item.label.toLocaleLowerCase())\n          .value()\n      }));\n    })\n  );\n\n  private isNewDefinition$: Observable<boolean> = this.definitionModelFromDefinition$.pipe(\n    map((definitionModel: IRecordDefinitionModel) => !Boolean(definitionModel.lastUpdateTime))\n  );\n\n  private isJoinRecordDefinition$: Observable<boolean> = this.definitionModelFromDefinition$.pipe(\n    map((definitionModel: IRecordDefinitionModel) => this.rxRecordDefinitionService.isJoinRecord(definitionModel)),\n    shareReplay(1)\n  );\n\n  private definitionFromDefinitionModel$: Observable<IRecordDefinition> = combineLatest([\n    this.definitionModel$,\n    this.bundleId$\n  ]).pipe(\n    map(([definitionModel, bundleId]: [IRecordDefinitionModel, string]) =>\n      this.rxRecordDesignerService.getDefinitionFromDefinitionModel(definitionModel, bundleId)\n    )\n  );\n\n  private isFieldsCustomizationAllowed$: Observable<boolean> = this.definitionFromDefinitionModel$.pipe(\n    map((recordDefinition) => this.rxOverlayService.isCustomizationEnabled('allowFieldsOverlay', recordDefinition)),\n    distinctUntilChanged(),\n    shareReplay(1)\n  );\n\n  private isPropertiesCustomizationAllowed$: Observable<boolean> = this.definitionFromDefinitionModel$.pipe(\n    map((recordDefinition) =>\n      this.rxOverlayService.isCustomizationEnabled('allowOtherPropertiesOverlay', recordDefinition)\n    ),\n    distinctUntilChanged(),\n    shareReplay(1)\n  );\n\n  private isPermissionsCustomizationAllowed$: Observable<boolean> = this.definitionFromDefinitionModel$.pipe(\n    map((recordDefinition) =>\n      this.rxOverlayService.isCustomizationEnabled('allowPermissionsOverlay', recordDefinition)\n    ),\n    distinctUntilChanged(),\n    shareReplay(1)\n  );\n\n  private isIndexCustomizationAllowed$: Observable<boolean> = this.definitionFromDefinitionModel$.pipe(\n    map((recordDefinition) => this.rxOverlayService.isCustomizationEnabled('allowIndexesOverlay', recordDefinition)),\n    distinctUntilChanged(),\n    shareReplay(1)\n  );\n\n  private areNewDefinitionsAllowed$ = this.bundleId$.pipe(\n    switchMap((bundleId) => this.rxOverlayService.areNewDefinitionsAllowed(bundleId))\n  );\n\n  private isReadOnly$ = this.definitionFromDefinitionModel$.pipe(\n    filter((definition) => !!definition.lastUpdateTime),\n    withLatestFrom(\n      this.areNewDefinitionsAllowed$,\n      this.isFieldsCustomizationAllowed$,\n      this.isPropertiesCustomizationAllowed$,\n      this.isPermissionsCustomizationAllowed$,\n      this.isIndexCustomizationAllowed$\n    ),\n    map(\n      ([\n        definition,\n        areNewDefinitionsAllowed,\n        isFieldsCustomizationAllowed,\n        isPropertiesCustomizationAllowed,\n        isPermissionsCustomizationAllowed,\n        isIndexCustomizationAllowed\n      ]) =>\n        !areNewDefinitionsAllowed ||\n        (!isFieldsCustomizationAllowed &&\n          !isPropertiesCustomizationAllowed &&\n          !isPermissionsCustomizationAllowed &&\n          !isIndexCustomizationAllowed)\n    ),\n    tap((isReadOnly: boolean) => {\n      if (isReadOnly) {\n        this.rxNotificationService.addWarningMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.designer.read-only-definition-warning.message')\n        );\n      }\n    }),\n    startWith(false),\n    shareReplay(1)\n  );\n\n  public definitionInspectorConfig$: Observable<IFormBuilderConfig> = combineLatest([\n    this.isNewDefinition$,\n    this.definitionModel$,\n    this.definitionModelFromDefinition$,\n    this.bundleId$,\n    this.isPropertiesCustomizationAllowed$,\n    this.isIndexCustomizationAllowed$,\n    this.isPermissionsCustomizationAllowed$,\n    this.isFieldsCustomizationAllowed$,\n    this.isReadOnly$\n  ]).pipe(\n    map(\n      ([\n        isNewDefinition,\n        definitionModel,\n        definitionModelFromDefinition,\n        bundleId,\n        isPropertiesCustomizationAllowed,\n        isIndexCustomizationAllowed,\n        isPermissionsCustomizationAllowed,\n        isFieldsCustomizationAllowed,\n        isReadOnly\n      ]: [\n        boolean,\n        IRecordDefinitionModel,\n        IRecordDefinitionModel,\n        string,\n        boolean,\n        boolean,\n        boolean,\n        boolean,\n        boolean\n      ]) =>\n        this.rxRecordDesignerInspectorService.getDefinitionInspectorConfig(\n          isNewDefinition,\n          definitionModel,\n          definitionModelFromDefinition,\n          bundleId,\n          isPropertiesCustomizationAllowed,\n          isIndexCustomizationAllowed,\n          isPermissionsCustomizationAllowed,\n          isFieldsCustomizationAllowed,\n          isReadOnly,\n          this.expressionConfigurator\n        )\n    )\n  );\n\n  private fieldGridRows$: Observable<IRecordFieldDefinitionGridRow[]> = this.definitionModel$.pipe(\n    map((model: IRecordDefinitionModel) =>\n      model.fields.map((field: IRecordFieldDefinitionModel) => {\n        const invertedSourceRecordTypes = invert(RX_RECORD_DEFINITION.sourceRecordTypes);\n        const type = invertedSourceRecordTypes[field.fieldMapping?.source];\n\n        return {\n          guid: field.guid,\n          name: field.name,\n          id: isNumber(field.id) ? field.id : '',\n          isInherited: field.isInherited,\n          fieldOption: field.fieldOption,\n          defaultValue:\n            field.resourceType === RX_RECORD_DEFINITION.resourceTypes.selection\n              ? field.selectionFieldOptionProperties.optionNamesById?.[\n                  field.selectionFieldOptionProperties.defaultValue\n                ]\n              : field.resourceType === RX_RECORD_DEFINITION.resourceTypes.dateOnly\n              ? this.datePipe.transform(field.defaultValue)\n              : field.resourceType === RX_RECORD_DEFINITION.resourceTypes.dateTime\n              ? this.datePipe.transform(field.defaultValue, 'medium')\n              : field.defaultValue,\n          resourceType: this.translateService.instant(\n            (find(RX_RECORD_DEFINITION.dataTypes, { resourceType: field.resourceType }) as any).labelKey\n          ),\n          isCoreField: this.rxFieldDefinitionService.isCoreField(field),\n          sourceRecord: includes(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds, field.id)\n            ? ''\n            : this.translateService.instant('com.bmc.arsys.rx.client.record-designer.grid.column.source-record.label', {\n                recordName: this.rxDefinitionNameService.getDisplayName(model[type + 'RecordDefinitionName']),\n                recordType: capitalize(type)\n              })\n        };\n      })\n    )\n  );\n\n  private isExternalRecordDefinition$: Observable<boolean> = this.definitionModel$.pipe(\n    map((definitionModel: IRecordDefinitionModel) => this.rxRecordDefinitionService.isExternalRecord(definitionModel))\n  );\n\n  private selectedFieldGridRows$: Observable<IRecordFieldDefinitionGridRow[]> = this.selectedFieldGuid$.pipe(\n    withLatestFrom(this.fieldGridRows$),\n    map(([guid, fieldGridRows]) => (guid ? [find(fieldGridRows, { guid })] : [])),\n    startWith([])\n  );\n\n  private selectedFieldModel$: Observable<IRecordFieldDefinitionModel> = combineLatest([\n    this.selectedFieldGuid$,\n    this.definitionModel$\n  ]).pipe(\n    map(([guid, definitionModel]: [string, IRecordDefinitionModel]) => find(definitionModel.fields, { guid })),\n    startWith(null),\n    shareReplay(1)\n  );\n\n  private selectedFieldInspectorConfig$: Observable<IFormBuilderConfig> = this.selectedFieldModel$.pipe(\n    withLatestFrom(this.definitionModel$, this.isReadOnly$),\n    map(([fieldModel, definitionModel, isReadOnly]) =>\n      fieldModel\n        ? this.rxFieldDefinitionManagerService.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly)\n        : null\n    )\n  );\n\n  private isJoinOrExternalRecord$: Observable<boolean> = combineLatest([\n    this.isJoinRecordDefinition$,\n    this.isExternalRecordDefinition$\n  ]).pipe(\n    map(\n      ([isJoinRecordDefinition, isExternalRecordDefinition]: [boolean, boolean]) =>\n        isJoinRecordDefinition || isExternalRecordDefinition\n    )\n  );\n\n  private validationIssues$: Observable<IValidationIssueSection[]> = this.definitionModel$.pipe(\n    map((definitionModel: IRecordDefinitionModel) => this.rxRecordDefinitionValidatorService.validate(definitionModel))\n  );\n\n  private hasValidationErrors$: Observable<boolean> = this.validationIssues$.pipe(\n    map((issueSections: IValidationIssueSection[]) =>\n      some(issueSections, {\n        issues: [{ type: ValidationIssueType.Error }]\n      })\n    ),\n    distinctUntilChanged()\n  );\n\n  private hasValidationWarnings$: Observable<boolean> = this.validationIssues$.pipe(\n    map((issueSections: IValidationIssueSection[]) =>\n      some(issueSections, {\n        issues: [{ type: ValidationIssueType.Warning }]\n      })\n    ),\n    distinctUntilChanged()\n  );\n\n  private isSaveButtonDisabled$: Observable<boolean> = combineLatest([\n    this.hasValidationErrors$,\n    this.isDirty$,\n    this.isReadOnly$\n  ]).pipe(\n    map(([hasValidationErrors, isDirty, isReadOnly]) => hasValidationErrors || !isDirty || isReadOnly),\n    startWith(true)\n  );\n\n  private breadcrumbItems$: Observable<IBreadcrumbItem[]> = combineLatest([\n    this.definitionDisplayName$,\n    this.selectedFieldModel$\n  ]).pipe(\n    map(([definitionDisplayName, selectedFieldModel]) =>\n      [\n        {\n          data: null,\n          label:\n            this.rxDefinitionNameService.getDisplayName(this.definition?.name) || definitionDisplayName || this.newTitle\n        },\n        { data: null, label: selectedFieldModel?.name }\n      ].filter((item: IBreadcrumbItem) => item.label)\n    )\n  );\n\n  private definitionForJsonViewer$: Observable<IRecordDefinition> = this.isDesignMode$.pipe(\n    switchMap((isDesignMode: boolean) => (isDesignMode ? of(null) : this.definitionFromDefinitionModel$))\n  );\n\n  overriddenRecordProperties$: Observable<any> = combineLatest([\n    this.definitionModelFromDefinition$,\n    this.definitionModel$\n  ]).pipe(\n    scan((acc, [definitionModelFromDefinition, definitionModel]) => {\n      const overriddenRecordFields = intersectionBy(\n        definitionModelFromDefinition.fields,\n        definitionModel.recordInheritanceSelector.inheritedFieldDefinitions,\n        'id'\n      );\n\n      acc = { ...acc, fields: _map(overriddenRecordFields, 'name').join(', ') };\n      return acc;\n    }, {})\n  );\n\n  private isDeleteFieldButtonDisabled$: Observable<boolean> = this.selectedFieldModel$.pipe(\n    withLatestFrom(this.definitionModel$),\n    map(\n      ([selectedFieldModel, definitionModel]: [IRecordFieldDefinitionModel, IRecordDefinitionModel]) =>\n        !selectedFieldModel ||\n        definitionModel.isAuditRecordDefinition ||\n        this.rxFieldDefinitionService.isCoreField(selectedFieldModel) ||\n        selectedFieldModel.isInherited ||\n        !this.rxFieldDefinitionService.isFieldInUserOverlay(selectedFieldModel)\n    )\n  );\n\n  private isCopyFieldButtonDisabled$: Observable<boolean> = this.selectedFieldModel$.pipe(\n    withLatestFrom(this.isFieldsCustomizationAllowed$, this.bundleId$),\n    map(\n      ([selectedFieldModel, isFieldsCustomizationAllowed, bundleId]) =>\n        !selectedFieldModel ||\n        this.rxFieldDefinitionService.isCoreField(selectedFieldModel) ||\n        selectedFieldModel.isInherited ||\n        !isFieldsCustomizationAllowed ||\n        !this.rxOverlayService.isBundleEditable(bundleId)\n    )\n  );\n\n  private expressionConfigurator = new RecordDesignerExpressionConfigurator(this.injector);\n\n  private dataDictionary$ = this.definitionModelFromDefinition$.pipe(\n    withLatestFrom(this.store$.select(bundleIdSelector)),\n    takeUntil(this.destroyed$),\n    switchMap(([definitionModel, bundleId]) =>\n      this.expressionConfigurator.recordExpressionDataDictionary(definitionModel, bundleId)\n    )\n  );\n\n  private isInheritColumnHidden$ = this.definitionModel$.pipe(\n    map((definitionModel) => isEmpty(definitionModel.recordInheritanceSelector?.inheritedFieldDefinitions)),\n    distinctUntilChanged(),\n    startWith(true)\n  );\n\n  vm$ = combineLatest([\n    this.breadcrumbItems$,\n    this.bundleFriendlyName$,\n    this.definitionDisplayName$,\n    this.definitionInspectorConfig$,\n    this.definitionModel$,\n    this.hasValidationErrors$,\n    this.hasValidationWarnings$,\n    this.validationIssues$,\n    this.isSaveButtonDisabled$,\n    this.fieldGridRows$,\n    this.selectedFieldGridRows$,\n    this.definitionForJsonViewer$,\n    this.isDesignMode$,\n    this.selectedFieldModel$,\n    this.selectedFieldInspectorConfig$,\n    this.selectedFieldGuid$,\n    this.isFieldsCustomizationAllowed$,\n    this.isDeleteFieldButtonDisabled$,\n    this.isCopyFieldButtonDisabled$,\n    this.isJoinOrExternalRecord$,\n    this.isReadOnly$\n  ]).pipe(\n    map(\n      ([\n        breadcrumbItems,\n        bundleFriendlyName,\n        definitionDisplayName,\n        definitionInspectorConfig,\n        definitionModel,\n        hasValidationErrors,\n        hasValidationWarnings,\n        validationIssues,\n        isSaveButtonDisabled,\n        fieldGridRows,\n        selectedFieldGridRows,\n        definitionForJsonViewer,\n        isDesignMode,\n        selectedFieldModel,\n        selectedFieldInspectorConfig,\n        selectedFieldGuid,\n        isFieldsCustomizationAllowed,\n        isDeleteFieldButtonDisabled,\n        isCopyFieldButtonDisabled,\n        isJoinOrExternalRecord,\n        isReadOnly\n      ]) => ({\n        breadcrumbItems,\n        bundleFriendlyName,\n        definitionDisplayName,\n        definitionInspectorConfig,\n        definitionModel,\n        hasValidationErrors,\n        hasValidationWarnings,\n        validationIssues,\n        isSaveButtonDisabled,\n        fieldGridRows,\n        selectedFieldGridRows,\n        definitionForJsonViewer,\n        isDesignMode,\n        selectedFieldModel,\n        selectedFieldInspectorConfig,\n        selectedFieldGuid,\n        isFieldsCustomizationAllowed,\n        isDeleteFieldButtonDisabled,\n        isCopyFieldButtonDisabled,\n        isJoinOrExternalRecord,\n        isReadOnly\n      })\n    )\n  );\n\n  constructor(\n    private store$: Store<any>,\n    private rxNotificationService: RxNotificationService,\n    private rxOverlayService: RxOverlayService,\n    private rxRecordDefinitionValidatorService: RxRecordDefinitionValidatorService,\n    private rxRecordDesignerInspectorService: RxRecordDesignerInspectorService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxFieldDefinitionManagerService: RxFieldDefinitionManagerService,\n    private rxRecordDefinitionService: RxRecordDefinitionService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private translateService: TranslateService,\n    private datePipe: DatePipe,\n    private rxModalService: RxModalService,\n    private rxFieldDefinitionService: RxFieldDefinitionService,\n    private rxRecordDesignerService: RxRecordDesignerService,\n    private rxExpressionEditorService: RxExpressionEditorService,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxGuidService: RxGuidService,\n    private injector: Injector\n  ) {\n    this.rxRecordDefinitionCacheService.registerConsumer(this.destroyed$);\n  }\n\n  ngOnInit(): void {\n    this.inspectorTabIndex$.pipe(skip(1), takeUntil(this.destroyed$)).subscribe((inspectorTabIndex: number) => {\n      if (!isNull(inspectorTabIndex)) {\n        this.adaptSidebarComponent.openPanel(inspectorTabIndex);\n      }\n    });\n\n    this.inspectorTabIndexSubject.pipe(skip(1), takeUntil(this.destroyed$)).subscribe((inspectorTabIndex: number) => {\n      this.store$.dispatch(RecordDesignerActions.setInspectorTabIndex({ inspectorTabIndex }));\n    });\n\n    this.store$\n      .select(savedDefinitionNameSelector)\n      .pipe(skip(1), takeUntil(this.destroyed$))\n      .subscribe((savedDefinitionName: string) => {\n        this.definitionSaved.emit(savedDefinitionName);\n      });\n\n    this.expressionConfigurator.configureForProperty({\n      propertyPath: RX_RECORD_DESIGNER.archiveDataCriteriaPath,\n      dataDictionary$: this.dataDictionary$,\n      operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.All)\n    });\n\n    this.expressionConfigurator.configureForProperty({\n      propertyPath: RX_RECORD_DESIGNER.joinCriteriaPath,\n      dataDictionary$: this.joinRecordDataDictionary$,\n      operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.All)\n    });\n\n    combineLatest([this.isInheritColumnHidden$, this.isJoinRecordDefinition$])\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(([isInheritColumnHidden, isJoinRecordDefinition]) => {\n        this.isInheritColumnHidden = isInheritColumnHidden;\n        this.isJoinRecordDefinition = isJoinRecordDefinition;\n      });\n\n    this.columns = [\n      {\n        field: 'name',\n        header: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label')\n      },\n      {\n        field: 'sourceRecord',\n        header: this.translateService.instant('Source Record'),\n        hidden: () => !this.isJoinRecordDefinition\n      },\n      {\n        field: 'id',\n        header: this.translateService.instant('com.bmc.arsys.rx.client.common.field-id.label')\n      },\n      {\n        field: 'isInherited',\n        header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.grid.column.inherited.title'),\n        hidden: () => this.isInheritColumnHidden,\n        cellTemplate: this.inheritedCellTemplate\n      },\n      {\n        field: 'resourceType',\n        header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.grid.column.data-type.title'),\n        cellTemplate: this.dataTypeCellTemplate\n      },\n      {\n        field: 'fieldOption',\n        header: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.grid.column.is-required-field.title'\n        ),\n        cellTemplate: this.requiredCellTemplate\n      },\n      {\n        field: 'defaultValue',\n        header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.grid.column.default-value.title')\n      }\n    ];\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.configuration.currentValue) {\n      this.store$.dispatch(RecordDesignerActions.init({ payload: this.configuration }));\n    }\n  }\n\n  onEditorEvent(event: IFormBuilderEvent): void {\n    if (\n      event.type === RX_EXPRESSION_EDITOR.events.openExpressionEditor &&\n      event.payload.propertyPath === RX_RECORD_DESIGNER.archiveDataCriteriaPath\n    ) {\n      this.definitionModel$.pipe(take(1)).subscribe((definitionModel) => {\n        this.rxExpressionEditorService\n          .openEditor({\n            property: {\n              path: RX_RECORD_DESIGNER.archiveDataCriteriaPath,\n              value: definitionModel.archiveDataCriteria,\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.record-filter.label'\n              )\n            },\n            isReadOnly: event.payload.isReadOnly,\n            expressionConfigurator: this.expressionConfigurator,\n            legend: [\n              {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.expression-editor.legend.field-name.label'\n                ),\n                icon: 'd-icon-arrow_right_square_input'\n              }\n            ]\n          })\n          .subscribe((expression: IExpressionEditorPropertyChange) => {\n            this.store$.dispatch(\n              RecordDesignerActions.updateDefinitionModelFromDesigner({\n                definitionModelFromDesigner: { archiveDataCriteria: expression.value } as IRecordDefinitionModel\n              })\n            );\n          });\n      });\n    }\n    if (\n      event.type === RX_EXPRESSION_EDITOR.events.openExpressionEditor &&\n      event.payload.propertyPath === RX_RECORD_DESIGNER.joinCriteriaPath\n    ) {\n      this.definitionModel$.pipe(take(1)).subscribe((definitionModel) => {\n        this.rxExpressionEditorService\n          .openEditor({\n            property: {\n              path: RX_RECORD_DESIGNER.joinCriteriaPath,\n              value: definitionModel.joinCriteria,\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.innovation-studio.join-record-wizard.join-criteria.on-statement.label'\n              )\n            },\n            isReadOnly: event.payload.isReadOnly,\n            expressionConfigurator: this.expressionConfigurator,\n            legend: [\n              {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.expression-editor.legend.field-name.label'\n                ),\n                icon: 'd-icon-arrow_right_square_input'\n              }\n            ]\n          })\n          .subscribe((expression: IExpressionEditorPropertyChange) => {\n            this.store$.dispatch(\n              RecordDesignerActions.updateDefinitionModelFromDesigner({\n                definitionModelFromDesigner: { joinCriteria: expression.value } as IRecordDefinitionModel\n              })\n            );\n          });\n      });\n    }\n  }\n\n  onSelectionChange(selectedFieldModel: IRecordFieldDefinitionModel) {\n    this.store$.dispatch(RecordDesignerActions.setSelectedFieldGuid({ guid: selectedFieldModel?.guid }));\n  }\n\n  onDefinitionModelChange(newDefinitionModel: IRecordDefinitionModel): void {\n    this.store$.dispatch(\n      RecordDesignerActions.updateDefinitionModelFromDesigner({\n        definitionModelFromDesigner: newDefinitionModel\n      })\n    );\n  }\n\n  onSelectedFieldModelChange(newSelectedFieldModel: IRecordFieldDefinitionModel): void {\n    this.store$.dispatch(RecordDesignerActions.updateSelectedFieldModel({ selectedFieldModel: newSelectedFieldModel }));\n  }\n\n  toggleDesignMode(): void {\n    this.store$.dispatch(RecordDesignerActions.toggleDesignMode());\n  }\n\n  onSidebarToggle(event: AdaptIsPanelOpenedCurrentlyModel): void {\n    this.inspectorTabIndexSubject.next(event.id);\n  }\n\n  addNewField(resourceType: string): void {\n    this.store$.dispatch(RecordDesignerActions.createNewFieldModel({ resourceType: resourceType }));\n  }\n\n  openAddNewField(): void {\n    this.definitionModel$.pipe(take(1)).subscribe((definitionModel) => {\n      this.rxModalService\n        .openModal({\n          title: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.add-fields.title'\n          ),\n          content: AddJoinFieldsEditorComponent,\n          size: 'rx-md',\n          blockKeyboard: false,\n          data: {\n            primaryRecordDefinitionName: definitionModel.primaryRecordDefinitionName,\n            secondaryRecordDefinitionName: definitionModel.secondaryRecordDefinitionName,\n            addedFields: definitionModel.fields\n          }\n        })\n        .then((fieldModels) => {\n          const newFieldModels = fieldModels.map((newField) => ({\n            ...newField,\n            guid: this.rxGuidService.generate(),\n            id: null,\n            defaultValueByLocale: {},\n            selectionFieldOptionProperties:\n              newField.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType\n                ? {\n                    defaultValue: newField.defaultValue,\n                    optionNamesById: newField.optionNamesById,\n                    optionLabelsById: newField.optionLabelsById\n                  }\n                : null\n          }));\n\n          this.store$.dispatch(RecordDesignerActions.addNewFieldModels({ newFieldModels: newFieldModels }));\n        })\n        .catch(noop);\n    });\n  }\n\n  copySelectedField(): void {\n    this.store$.dispatch(RecordDesignerActions.copySelectedField());\n  }\n\n  deleteSelectedField(): void {\n    this.store$.dispatch(RecordDesignerActions.deleteSelectedField());\n  }\n\n  onBreadcrumbSelected(): void {\n    this.store$.dispatch(RecordDesignerActions.clearSelectedFieldGuid());\n  }\n\n  canDeactivate(): boolean {\n    let canDeactivate = true;\n\n    this.isDirty$.pipe(take(1)).subscribe((isDirty) => {\n      canDeactivate = !isDirty;\n    });\n\n    return canDeactivate;\n  }\n\n  saveDefinition(): void {\n    combineLatest([this.definitionFromDefinitionModel$, this.isNewDefinition$, this.overriddenRecordProperties$])\n      .pipe(\n        take(1),\n        switchMap(([definition, isNewDefinition, overriddenRecordProperties]) => {\n          if (isNewDefinition) {\n            return this.rxRecordDefinitionService.create(definition);\n          } else if (!isNewDefinition && !isEmpty(overriddenRecordProperties.fields)) {\n            return from(\n              this.rxModalService.openModal({\n                title: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.inheritance-issue-modal.title'\n                ),\n                content: InheritanceIssueInfoComponent,\n                data: { overriddenRecordProperties },\n                size: 'sm'\n              })\n            ).pipe(\n              filter((result) => result === 'continue'),\n              switchMap(() => this.rxRecordDefinitionService.update(definition))\n            );\n          } else {\n            return this.rxRecordDefinitionService.update(definition);\n          }\n        }),\n        withLatestFrom(this.store$.select(definitionModelSelector), this.store$.select(bundleIdSelector))\n      )\n      .subscribe(([response, definitionModel, bundleId]) => {\n        this.store$.dispatch(\n          RecordDesignerActions.saveDefinitionSuccess({\n            savedDefinitionName: `${bundleId}:${definitionModel.name}`\n          })\n        );\n      });\n  }\n\n  onCorrectIssue(validationIssue: IValidationIssue): void {\n    if (validationIssue.data.guid) {\n      this.store$.dispatch(RecordDesignerActions.setSelectedFieldGuid({ guid: validationIssue.data.guid }));\n    } else {\n      this.store$.dispatch(RecordDesignerActions.setInspectorTabIndex({ inspectorTabIndex: 0 }));\n    }\n\n    setTimeout(\n      () =>\n        this.inspectorFocusEditorSubject.next({\n          editorName: validationIssue.data.propertyName,\n          data: validationIssue.data\n        }),\n      10\n    );\n  }\n\n  onFormInitialized() {\n    this.inspectorFocusEditorSubject.next({\n      editorName: 'name',\n      data: {}\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n    this.inspectorTabIndexSubject.complete();\n    this.inspectorFocusEditorSubject.complete();\n    this.store$.dispatch(RecordDesignerActions.destroy());\n  }\n}\n","<ng-container class=\"p-0\" *ngIf=\"vm$ | async as vm\">\n  <rx-designer-header\n    [bundleName]=\"vm.bundleFriendlyName\"\n    [isSaveButtonDisabled]=\"vm.isSaveButtonDisabled\"\n    (save)=\"saveDefinition()\"\n    (closeDesigner)=\"closeDesigner.emit()\"\n    [breadcrumbItems]=\"vm.breadcrumbItems\"\n    (breadcrumbSelected)=\"onBreadcrumbSelected()\"\n    (toggleDesignMode)=\"toggleDesignMode()\"\n    [isDesignMode]=\"vm.isDesignMode\"\n  ></rx-designer-header>\n\n  <adapt-sidebar\n    [openedId]=\"0\"\n    [adjustMainContainerWidth]=\"true\"\n    position=\"right\"\n    class=\"h-100\"\n    [hidden]=\"vm.definitionForJsonViewer\"\n    (isPanelOpenedCurrently)=\"onSidebarToggle($event)\"\n  >\n    <adapt-sidebar-item\n      iconClass=\"d-icon-pencil\"\n      [headerTitle]=\"'com.bmc.arsys.rx.client.common.properties.label' | translate\"\n      [tooltipText]=\"'com.bmc.arsys.rx.client.common.properties.label' | translate\"\n    >\n      <rx-form-builder\n        [config]=\"vm.definitionInspectorConfig\"\n        [model]=\"vm.definitionModel\"\n        [focusEditor$]=\"inspectorFocusEditor$\"\n        (modelChange)=\"onDefinitionModelChange($event)\"\n        (formInitialized)=\"onFormInitialized()\"\n        (editorEvent)=\"onEditorEvent($event)\"\n      ></rx-form-builder>\n    </adapt-sidebar-item>\n\n    <adapt-sidebar-item\n      iconClass=\"d-icon-gear\"\n      [headerTitle]=\"'com.bmc.arsys.rx.client.common.settings.label' | translate\"\n      [tooltipText]=\"'com.bmc.arsys.rx.client.common.settings.label' | translate\"\n    >\n      <rx-form-builder\n        [config]=\"vm.selectedFieldInspectorConfig\"\n        [model]=\"vm.selectedFieldModel\"\n        (modelChange)=\"onSelectedFieldModelChange($event)\"\n        [guid]=\"vm.selectedFieldGuid\"\n        [focusEditor$]=\"inspectorFocusEditor$\"\n      ></rx-form-builder>\n\n      <adapt-alert\n        [hidden]=\"vm.selectedFieldModel\"\n        class=\"p-3\"\n        [config]=\"{\n          content: 'com.bmc.arsys.rx.client.designer.validation.no-field-selected.message' | translate,\n          variant: 'info',\n          type: 'inline'\n        }\"\n      ></adapt-alert>\n    </adapt-sidebar-item>\n\n    <adapt-sidebar-item\n      [iconClass]=\"\n        vm.hasValidationErrors\n          ? 'd-icon-exclamation_triangle text-danger'\n          : vm.hasValidationWarnings\n          ? 'd-icon-exclamation_triangle text-warning-icon'\n          : 'd-icon-exclamation_triangle'\n      \"\n      headerTitle=\"{{ 'com.bmc.arsys.rx.client.designer.validation-issues.label' | translate }}\"\n      tooltipText=\"{{ 'com.bmc.arsys.rx.client.designer.validation-issues.label' | translate }}\"\n    >\n      <rx-validation-issues\n        (correctIssue)=\"onCorrectIssue($event)\"\n        [issueSections]=\"vm.validationIssues\"\n        [definitionTypeDisplayName]=\"'com.bmc.arsys.rx.client.record-definition.label' | translate\"\n      ></rx-validation-issues>\n    </adapt-sidebar-item>\n\n    <div class=\"main h-100 d-flex flex-column\">\n      <h1 class=\"mt-0 mb-2\">\n        {{ (configuration.definitionName | rxDefinitionNamePipe) || vm.definitionDisplayName || newTitle }}\n      </h1>\n\n      <div *ngIf=\"vm.isJoinOrExternalRecord\" class=\"d-flex border border-bottom-0\">\n        <button\n          adapt-button\n          type=\"button\"\n          btn-type=\"tertiary\"\n          class=\"d-icon-plus_circle align-self-start\"\n          rx-id=\"new-field-button\"\n          (click)=\"openAddNewField()\"\n          [disabled]=\"vm.isReadOnly\"\n        >\n          {{ 'com.bmc.arsys.rx.client.common.new.label' | translate }}\n        </button>\n\n        <button\n          adapt-button\n          btn-type=\"tertiary\"\n          type=\"button\"\n          class=\"d-icon-trash\"\n          rx-id=\"delete-field-button\"\n          (click)=\"deleteSelectedField()\"\n          [disabled]=\"vm.isDeleteFieldButtonDisabled\"\n        >\n          {{ 'com.bmc.arsys.rx.client.common.delete.label' | translate }}\n        </button>\n      </div>\n\n      <div *ngIf=\"!vm.isJoinOrExternalRecord\" class=\"d-flex border border-bottom-0\">\n        <div class=\"dropdown\" adaptDropdown>\n          <button\n            adapt-button\n            type=\"button\"\n            adaptDropdownToggle\n            btn-type=\"tertiary\"\n            class=\"d-icon-plus_circle\"\n            rx-id=\"new-field-button\"\n          >\n            {{ 'com.bmc.arsys.rx.client.designer.new-field.button.label' | translate }}\n          </button>\n\n          <div class=\"dropdown-menu\" adaptDropdownMenu>\n            <button\n              *ngFor=\"let dataType of dataTypes\"\n              class=\"dropdown-item\"\n              (click)=\"addNewField(dataType.resourceType)\"\n              [attr.rx-id]=\"'field-data-type-' + dataType.shortName\"\n              [disabled]=\"!vm.isFieldsCustomizationAllowed || vm.isReadOnly\"\n            >\n              {{ dataType.displayName }}\n            </button>\n          </div>\n        </div>\n\n        <button\n          adapt-button\n          btn-type=\"tertiary\"\n          type=\"button\"\n          class=\"d-icon-trash\"\n          rx-id=\"delete-field-button\"\n          (click)=\"deleteSelectedField()\"\n          [disabled]=\"vm.isDeleteFieldButtonDisabled || vm.isReadOnly\"\n        >\n          {{ 'com.bmc.arsys.rx.client.common.delete.label' | translate }}\n        </button>\n\n        <button\n          adapt-button\n          btn-type=\"tertiary\"\n          type=\"button\"\n          class=\"d-icon-list_ordered\"\n          (click)=\"copySelectedField()\"\n          rx-id=\"copy-field-button\"\n          [disabled]=\"vm.isCopyFieldButtonDisabled || vm.isReadOnly\"\n        >\n          {{ 'com.bmc.arsys.rx.client.common.copy.label' | translate }}\n        </button>\n      </div>\n\n      <adapt-table\n        [value]=\"vm.fieldGridRows\"\n        [selection]=\"vm.selectedFieldGridRows\"\n        [columns]=\"columns\"\n        [scrollable]=\"true\"\n        scrollHeight=\"flex\"\n        [sortable]=\"true\"\n        [resizableColumns]=\"true\"\n        [bordered]=\"true\"\n        [filterable]=\"false\"\n        [dataKey]=\"'guid'\"\n        [disableRowSelection]=\"false\"\n        [selectionMode]=\"'single'\"\n        (selectionChange)=\"onSelectionChange($event)\"\n      >\n      </adapt-table>\n    </div>\n  </adapt-sidebar>\n\n  <adapt-code-viewer\n    *ngIf=\"vm.definitionForJsonViewer\"\n    [code]=\"vm.definitionForJsonViewer | json\"\n    [lang]=\"'javascript'\"\n    [hasToolbar]=\"false\"\n    [theme]=\"'light'\"\n    class=\"full-size\"\n  ></adapt-code-viewer>\n</ng-container>\n\n<ng-template #dataTypeCellTemplate let-dataItem=\"dataItem\">\n  <span\n    class=\"icon d-icon-lock pr-2\"\n    *ngIf=\"dataItem.isCoreField\"\n    [adaptPopover]=\"'com.bmc.arsys.rx.client.record-designer.core-field.tooltip' | translate\"\n  ></span>\n  {{ dataItem.resourceType }}\n</ng-template>\n\n<ng-template #requiredCellTemplate let-dataItem=\"dataItem\">\n  {{ dataItem.fieldOption | rxRecordDefinitionFieldOption }}\n</ng-template>\n\n<ng-template #inheritedCellTemplate let-dataItem=\"dataItem\">\n  <span *ngIf=\"dataItem.isInherited\" class=\"icon d-icon-check pr-2\"></span>\n</ng-template>\n\n<ng-template #sourceFieldCellTemplate let-dataItem=\"dataItem\">\n  {{ dataItem.sourceRecord }}\n</ng-template>\n","import { ArchiveType, AssociationSelectionType } from '@helix/platform/record/api';\nimport { createReducer, on } from '@ngrx/store';\nimport { chain, isNull, isUndefined } from 'lodash';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { RX_RECORD_DESIGNER } from '../record-designer.constant';\nimport * as RecordDesignerActions from './record-designer.actions';\nimport { IRecordDesignerModel } from './record-designer.types';\n\nconst initialDefinitionModel: IRecordDefinitionModel = {\n  isArchivingEnabled: false,\n  archiveDescription: null,\n  ageQualifierFieldId: null,\n  ageQualifierInDays: null,\n  archiveRecordDefinitionName: null,\n  archiveType: ArchiveType.None,\n  includeAttachments: null,\n  archiveDataCriteria: null,\n  associationsToFollowForArchive: {\n    selectionType: AssociationSelectionType.FollowParent,\n    specificAssociationNames: []\n  },\n  isAuditingEnabled: false,\n  auditRecordDefinitionName: null,\n  auditDataCriteria: null,\n  associatedAuditFieldsByAssociationName: {},\n  customizationOptions: {\n    allowOverlay: false,\n    allowFieldsOverlay: false,\n    allowIndexesOverlay: false,\n    allowOtherPropertiesOverlay: false,\n    allowPermissionsOverlay: false,\n    fields: [],\n    scope: null\n  },\n  recordInheritanceSelector: {\n    inheritanceOptions: {\n      isSharedInstanceStorage: false,\n      isAbstract: false,\n      isFinal: false\n    },\n    inheritanceDescriptor: {\n      inheritingFrom: null,\n      isInheritingRules: false,\n      isInheritingFieldPermissions: false,\n      isInheritingAssociations: false,\n      isInheritingFieldAuditOptions: false\n    },\n    isInheritingCoreFields: false,\n    inheritedFieldDefinitions: []\n  },\n  recordSearchFields: [],\n  overlayOperation: null,\n  weightedRelevancyTitle: undefined,\n  weightedRelevancyKeywords: undefined,\n  weightedRelevancyEnvironment: undefined,\n  fields: [],\n  indexDefinitions: []\n};\n\nexport const initialState: IRecordDesignerModel = {\n  bundleId: null,\n  definitionName: null,\n  selectedFieldGuid: null,\n  inspectorTabIndex: 0,\n  isDesignMode: true,\n  definitionModel: initialDefinitionModel,\n  definitionModelFromDefinition: initialDefinitionModel,\n  isDirty: false,\n  savedDefinitionName: null\n};\n\nconst reducer = createReducer(\n  initialState,\n\n  on(RecordDesignerActions.init, (state: IRecordDesignerModel, { payload }) => ({\n    ...initialState,\n    bundleId: payload.bundleId,\n    definitionName: payload.definitionName\n  })),\n\n  on(RecordDesignerActions.initDefinitionModel, (state: IRecordDesignerModel, { definitionModelFromDefinition }) => ({\n    ...state,\n    definitionModelFromDefinition,\n    definitionModel: definitionModelFromDefinition\n  })),\n\n  on(\n    RecordDesignerActions.updateDefinitionModelFromDesigner,\n    (state: IRecordDesignerModel, { definitionModelFromDesigner }) => {\n      const updatedDefinitionModel = {\n        ...state.definitionModel,\n        ...definitionModelFromDesigner\n      };\n\n      const inheritedFieldDefinitions = updatedDefinitionModel.recordInheritanceSelector.inheritanceDescriptor\n        ? updatedDefinitionModel.recordInheritanceSelector.inheritedFieldDefinitions\n        : [];\n\n      return {\n        ...state,\n        definitionModel: {\n          ...updatedDefinitionModel,\n          includeAttachments:\n            updatedDefinitionModel.archiveType === RX_RECORD_DESIGNER.archiving.types.deleteSourceRecord.id,\n          fields: chain(updatedDefinitionModel.fields)\n            .differenceBy(inheritedFieldDefinitions, 'id')\n            .concat(inheritedFieldDefinitions)\n            .map((field: IRecordFieldDefinitionModel) => {\n              const searchField = updatedDefinitionModel.recordSearchFields.find(\n                (searchField) => searchField.id === field.id\n              );\n\n              const searchDefinition = searchField\n                ? searchField.searchDefinition\n                : isUndefined(field.searchDefinition)\n                ? undefined\n                : null;\n\n              const customizationOptionField =\n                updatedDefinitionModel.customizationOptions.allowFieldsOverlay &&\n                updatedDefinitionModel.customizationOptions.fields.find(\n                  (customizationOptionsField) => customizationOptionsField.id === field.id\n                );\n\n              return {\n                ...field,\n                searchDefinition,\n                allowOtherPropertiesOverlay: customizationOptionField\n                  ? customizationOptionField.allowOtherPropertiesOverlay\n                  : field.allowOtherPropertiesOverlay,\n                allowPermissionsOverlay: customizationOptionField\n                  ? customizationOptionField.allowPermissionsOverlay\n                  : field.allowPermissionsOverlay,\n                isInherited: field.isCoreField\n                  ? Boolean(updatedDefinitionModel.recordInheritanceSelector.isInheritingCoreFields)\n                  : field.isInherited\n              };\n            })\n            .orderBy('id')\n            .value()\n        }\n      };\n    }\n  ),\n\n  on(RecordDesignerActions.updateSelectedFieldModel, (state: IRecordDesignerModel, { selectedFieldModel }) => {\n    return {\n      ...state,\n      definitionModel: {\n        ...state.definitionModel,\n        fields: state.definitionModel.fields.map((field) => {\n          return field.guid === selectedFieldModel.guid\n            ? { ...selectedFieldModel, copy: selectedFieldModel.audit ? true : selectedFieldModel.copy }\n            : field;\n        })\n      }\n    };\n  }),\n\n  on(RecordDesignerActions.clearSearchFields, (state: IRecordDesignerModel) => ({\n    ...state,\n    definitionModel: {\n      ...state.definitionModel,\n      recordSearchFields: [],\n      fields: state.definitionModel.fields.map((field) => {\n        return {\n          ...field,\n          searchDefinition: isUndefined(field.searchDefinition) ? undefined : null\n        };\n      })\n    }\n  })),\n\n  on(RecordDesignerActions.toggleDesignMode, (state: IRecordDesignerModel) => ({\n    ...state,\n    isDesignMode: !state.isDesignMode\n  })),\n\n  on(RecordDesignerActions.markDesignerPristine, (state: IRecordDesignerModel) => ({\n    ...state,\n    isDirty: false\n  })),\n\n  on(RecordDesignerActions.markDesignerDirty, (state: IRecordDesignerModel) => ({\n    ...state,\n    isDirty: true\n  })),\n\n  on(RecordDesignerActions.setInspectorTabIndex, (state: IRecordDesignerModel, { inspectorTabIndex }) => ({\n    ...state,\n    inspectorTabIndex\n  })),\n\n  on(RecordDesignerActions.setSelectedFieldGuid, (state: IRecordDesignerModel, { guid }) => ({\n    ...state,\n    selectedFieldGuid: guid,\n    inspectorTabIndex: guid && !isNull(state.inspectorTabIndex) ? 1 : state.inspectorTabIndex\n  })),\n\n  on(RecordDesignerActions.clearSelectedFieldGuid, (state: IRecordDesignerModel) => ({\n    ...state,\n    selectedFieldGuid: null,\n    inspectorTabIndex: !isNull(state.inspectorTabIndex) ? 0 : state.inspectorTabIndex\n  })),\n\n  on(RecordDesignerActions.addFieldModel, (state: IRecordDesignerModel, { newFieldModel }) => ({\n    ...state,\n    definitionModel: { ...state.definitionModel, fields: [...state.definitionModel.fields, { ...newFieldModel }] }\n  })),\n\n  on(RecordDesignerActions.addNewFieldModels, (state: IRecordDesignerModel, { newFieldModels }) => ({\n    ...state,\n    definitionModel: { ...state.definitionModel, fields: [...state.definitionModel.fields, ...newFieldModels] },\n    isDirty: true\n  })),\n\n  on(RecordDesignerActions.deleteSelectedFieldSuccess, (state: IRecordDesignerModel) => ({\n    ...state,\n    definitionModel: {\n      ...state.definitionModel,\n      fields: state.definitionModel.fields.filter((field) => field.guid !== state.selectedFieldGuid)\n    }\n  })),\n\n  on(RecordDesignerActions.saveDefinitionSuccess, (state: IRecordDesignerModel, { savedDefinitionName }) => ({\n    ...state,\n    savedDefinitionName\n  })),\n\n  on(RecordDesignerActions.destroy, (state: IRecordDesignerModel) => ({\n    ...initialState\n  }))\n);\n\nexport function recordDesignerModelReducer(state, action) {\n  return reducer(state, action);\n}\n","import { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\nimport { RxGuidService } from '@helix/platform/utils';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RxNotificationService } from '@helix/platform/shared/api';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { IRecordDefinition, RX_RECORD_DEFINITION, RxRecordDefinitionService } from '@helix/platform/record/api';\nimport { distinctUntilChanged, filter, map, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport * as RecordDesignerActions from './record-designer.actions';\nimport {\n  bundleIdSelector,\n  definitionModelSelector,\n  definitionNameSelector,\n  selectedFieldGuidSelector\n} from './record-designer.selectors';\nimport { find, includes, isEmpty, isEqual, mapValues, some } from 'lodash';\nimport { RxFieldDefinitionManagerService } from '../services/field-definition-manager.service';\nimport { IIndexDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { from } from 'rxjs';\nimport { RxRecordDesignerService } from '../record-designer.service';\n\n@Injectable()\nexport class RecordDesignerEffects {\n  constructor(\n    private store$: Store<any>,\n    private actions$: Actions,\n    private rxFieldDefinitionManagerService: RxFieldDefinitionManagerService,\n    private rxRecordDefinitionService: RxRecordDefinitionService,\n    private rxModalService: RxModalService,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService,\n    private rxGuidService: RxGuidService,\n    private rxRecordDesignerService: RxRecordDesignerService\n  ) {}\n\n  initRecordDesigner$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.init),\n      map(() => RecordDesignerActions.loadDefinition())\n    )\n  );\n\n  loadDefinition$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.loadDefinition),\n      withLatestFrom(this.store$.select(definitionNameSelector)),\n      switchMap(([action, definitionName]) =>\n        definitionName\n          ? this.rxRecordDefinitionService.get(definitionName, {}, true)\n          : this.rxRecordDefinitionService.getNew()\n      ),\n      map((definition: IRecordDefinition) =>\n        RecordDesignerActions.loadDefinitionSuccess({\n          definition\n        })\n      )\n    )\n  );\n\n  loadDefinitionSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.loadDefinitionSuccess),\n      map((action) =>\n        RecordDesignerActions.initDefinitionModel({\n          definitionModelFromDefinition: this.rxRecordDesignerService.getDefinitionModelFromDefinition(\n            action.definition\n          )\n        })\n      )\n    )\n  );\n\n  createNewFieldModel$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.createNewFieldModel),\n      withLatestFrom(this.store$.select(definitionModelSelector)),\n      map(([action, definitionModel]) => {\n        let newFieldName;\n        let fieldNameSuffix = 0;\n\n        const defaultFieldName = this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.default-field-name.label'\n        );\n\n        do {\n          newFieldName = `${defaultFieldName} ${++fieldNameSuffix}`;\n        } while (some(definitionModel.fields, { name: newFieldName }));\n\n        const guid = this.rxGuidService.generate();\n\n        const newFieldModel: IRecordFieldDefinitionModel =\n          this.rxFieldDefinitionManagerService.getNewFieldDefinitionModel(action.resourceType, {\n            id: null,\n            isNewField: true,\n            name: newFieldName,\n            guid,\n            minValue: null,\n            maxValue: null,\n            defaultValueByLocale: {},\n            selectionFieldOptionProperties:\n              action.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType\n                ? { defaultValue: null, optionNamesById: null, optionLabelsById: null }\n                : null\n          });\n\n        return RecordDesignerActions.addFieldModel({ newFieldModel });\n      })\n    )\n  );\n\n  clearSearchFields$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.updateDefinitionModelFromDesigner),\n      withLatestFrom(this.store$.select(definitionModelSelector)),\n      map(([action, definitionModel]) => definitionModel),\n      distinctUntilChanged((a, b) => isEqual(a.enableCognitiveSearch, b.enableCognitiveSearch)),\n      filter(\n        (definitionModel) => definitionModel.enableCognitiveSearch && !isEmpty(definitionModel.recordSearchFields)\n      ),\n      switchMap(() =>\n        from(\n          this.rxModalService.confirm({\n            title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n            modalStyle: RX_MODAL.modalStyles.warning,\n            message: this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.search-fields.clear-search-fields-confirmation.message'\n            )\n          })\n        )\n      ),\n      filter(Boolean),\n      map(() => RecordDesignerActions.clearSearchFields())\n    )\n  );\n\n  addNewFieldModel$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.addFieldModel),\n      map((action) => RecordDesignerActions.setSelectedFieldGuid({ guid: action.newFieldModel.guid }))\n    )\n  );\n\n  copySelectedField$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.copySelectedField),\n      withLatestFrom(this.store$.select(definitionModelSelector), this.store$.select(selectedFieldGuidSelector)),\n      map(([action, definitionModel, selectedFieldGuid]) => {\n        const selectedField = definitionModel.fields.find((field) => field.guid === selectedFieldGuid);\n\n        const selectedFieldCopy: IRecordFieldDefinitionModel = {\n          ...selectedField,\n          id: null,\n          guid: this.rxGuidService.generate(),\n          name: this.translateService.instant('com.bmc.arsys.rx.client.designer.default-field-copy-name.label', {\n            fieldName: selectedField.name\n          }),\n          selectionFieldOptionProperties: {\n            ...selectedField.selectionFieldOptionProperties,\n            optionLabelsById:\n              selectedField.resourceType === RX_RECORD_DEFINITION.resourceTypes.selection\n                ? mapValues(selectedField.selectionFieldOptionProperties.optionNamesById, () =>\n                    this.rxGuidService.generate()\n                  )\n                : null\n          }\n        };\n\n        return RecordDesignerActions.addFieldModel({ newFieldModel: selectedFieldCopy });\n      })\n    )\n  );\n\n  deleteSelectedField$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.deleteSelectedField),\n      switchMap(() =>\n        from(\n          this.rxModalService.confirm({\n            title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n            modalStyle: RX_MODAL.modalStyles.warning,\n            message: this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.delete-field-warning.message'\n            )\n          })\n        )\n      ),\n      filter(Boolean),\n      map(() => RecordDesignerActions.checkIfFieldUsedByIndexes())\n    )\n  );\n\n  checkIfFieldUsedByIndexes$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.checkIfFieldUsedByIndexes),\n      withLatestFrom(this.store$.select(definitionModelSelector), this.store$.select(selectedFieldGuidSelector)),\n      switchMap(([result, definitionModel, guid]) => {\n        const field = find(definitionModel.fields, { guid });\n\n        const isUsedByIndexes = some(definitionModel.indexDefinitions, (indexDefinition: IIndexDefinitionModel) =>\n          includes(indexDefinition.indexFieldIds, field.id)\n        );\n\n        return isUsedByIndexes\n          ? from(\n              this.rxModalService.alert({\n                title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n                modalStyle: RX_MODAL.modalStyles.warning,\n                message: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.indexes.field-used-by-indexes.message',\n                  { fieldName: field.name }\n                )\n              })\n            ).pipe(map(() => RecordDesignerActions.deleteSelectedFieldError()))\n          : [RecordDesignerActions.deleteSelectedFieldSuccess()];\n      })\n    )\n  );\n\n  saveDefinitionSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.saveDefinitionSuccess),\n      withLatestFrom(this.store$.select(definitionNameSelector), this.store$.select(bundleIdSelector)),\n      tap(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.designer.definition-saved-successfully.message', {\n            definitionTypeDisplayName: this.translateService.instant('com.bmc.arsys.rx.client.record-definition.label')\n          })\n        );\n      }),\n      filter(([action, definitionName, bundleId]) => !!definitionName),\n      map(([action, definitionName, bundleId]: [any, string, string]) =>\n        RecordDesignerActions.init({\n          payload: { definitionName, bundleId }\n        })\n      )\n    )\n  );\n\n  clearSelectedField$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.initDefinitionModel, RecordDesignerActions.deleteSelectedFieldSuccess),\n      map(() => RecordDesignerActions.clearSelectedFieldGuid())\n    )\n  );\n\n  markPristine$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.initDefinitionModel, RecordDesignerActions.saveDefinitionSuccess),\n      map(() => RecordDesignerActions.markDesignerPristine())\n    )\n  );\n\n  markDirty$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        RecordDesignerActions.addFieldModel,\n        RecordDesignerActions.updateDefinitionModelFromDesigner,\n        RecordDesignerActions.updateSelectedFieldModel,\n        RecordDesignerActions.deleteSelectedFieldSuccess\n      ),\n      map(() => RecordDesignerActions.markDesignerDirty())\n    )\n  );\n}\n","import { CommonModule, DatePipe } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AdaptAccordionModule,\n  AdaptAlertModule,\n  AdaptBusyModule,\n  AdaptButtonModule,\n  AdaptCodeViewerModule,\n  AdaptDropdownModule,\n  AdaptIconModule,\n  AdaptPopoverModule,\n  AdaptRxCheckboxModule,\n  AdaptRxLabelModule,\n  AdaptRxListBuilderModule,\n  AdaptRxRadiobuttonModule,\n  AdaptRxSelectModule,\n  AdaptRxSwitchModule,\n  AdaptRxTextfieldModule,\n  AdaptSidebarModule,\n  AdaptTabsModule\n} from '@bmc-ux/adapt-angular';\nimport { AdaptTableModule } from '@bmc-ux/adapt-table';\nimport { RxRecordDefinitionFieldOptionPipeModule } from '@helix/platform/record/api';\nimport { RxDefinitionModule } from '@helix/platform/shared/api';\nimport { RxDesignerHeaderModule, RxFormBuilderModule } from '@helix/platform/shared/components';\nimport { RxValidationIssuesModule, RxModalModule } from '@helix/platform/ui-kit';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RecordCustomizationOptionsModule } from './record-customization-options/record-customization-options.module';\nimport { RecordInheritanceEditorModule } from './record-inheritance-editor/record-inheritance-editor.module';\nimport { SearchFieldEditorModule } from './search-field-editor/search-field-editor.module';\nimport { RecordDesignerComponent } from './record-designer.component';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { recordDesignerModelReducer } from './+state/record-designer-model.reducer';\nimport { RecordDesignerEffects } from './+state/record-designer.effects';\nimport { RX_RECORD_DESIGNER } from './record-designer.constant';\nimport { LocalizedCharacterFieldEditorComponent } from './localized-character-field-editor/localized-character-field-editor.component';\nimport { InheritanceIssueInfoComponent } from './inheritance-issue-info/inheritance-issue-info.component';\nimport { MissingArchiveDefinitionsModalComponent } from './archive-associations-control/missing-archive-definitions-modal.component';\nimport { ArchiveAssociationsControlComponent } from './archive-associations-control/archive-associations-control.component';\nimport { ArchiveAssociationSelectorComponent } from './archive-associations-control/archive-association-selector.component';\nimport { FieldOptionEditorComponent } from './field-option-editor/field-option-editor.component';\nimport { AddJoinFieldsEditorComponent } from './add-join-fields-editor/add-join-fields-editor.component';\nimport { RecordIndexesControlComponent } from './record-indexes-control/record-indexes-control.component';\nimport { RecordIndexesEditorComponent } from './record-indexes-control/record-indexes-editor.component';\nimport { RxRecordDesignerService } from './record-designer.service';\n\n@NgModule({\n  declarations: [\n    RecordDesignerComponent,\n    LocalizedCharacterFieldEditorComponent,\n    InheritanceIssueInfoComponent,\n    ArchiveAssociationsControlComponent,\n    ArchiveAssociationSelectorComponent,\n    MissingArchiveDefinitionsModalComponent,\n    FieldOptionEditorComponent,\n    AddJoinFieldsEditorComponent,\n    RecordIndexesControlComponent,\n    RecordIndexesEditorComponent\n  ],\n  exports: [RecordDesignerComponent],\n  imports: [\n    AdaptCodeViewerModule,\n    AdaptRxLabelModule,\n    AdaptTabsModule,\n    AdaptBusyModule,\n    AdaptButtonModule,\n    AdaptDropdownModule,\n    AdaptRxCheckboxModule,\n    AdaptRxSelectModule,\n    AdaptRxTextfieldModule,\n    AdaptPopoverModule,\n    AdaptIconModule,\n    CommonModule,\n    FormsModule,\n    RxDesignerHeaderModule,\n    RxModalModule,\n    RxValidationIssuesModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    RecordGridModule,\n    RxFormBuilderModule,\n    RxDefinitionModule,\n    RxRecordDefinitionFieldOptionPipeModule,\n    RecordCustomizationOptionsModule,\n    RecordInheritanceEditorModule,\n    SearchFieldEditorModule,\n    AdaptTableModule,\n    AdaptSidebarModule,\n    StoreModule.forFeature(RX_RECORD_DESIGNER.featureSelector, {\n      model: recordDesignerModelReducer\n    }),\n    EffectsModule.forFeature([RecordDesignerEffects]),\n    AdaptAlertModule,\n    AdaptRxRadiobuttonModule,\n    AdaptRxSwitchModule,\n    AdaptPopoverModule,\n    AdaptAccordionModule,\n    AdaptRxListBuilderModule\n  ],\n  providers: [DatePipe, RxRecordDesignerService]\n})\nexport class RecordDesignerModule {}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs';\nimport { RecordDesignerComponent } from '../record-designer/record-designer.component';\nimport {\n  IComponentCanDeactivate,\n  IDesignerConfiguration,\n  RX_APPLICATION,\n  RxBundleCacheService,\n  RxComponentCanDeactivateGuard,\n  RxDefinitionNameService,\n  RxPageTitleService\n} from '@helix/platform/shared/api';\nimport { RxUtilityModalsService } from '@helix/platform/ui-kit';\n\n@Component({\n  selector: 'rx-record-designer-page',\n  templateUrl: './record-designer-page.component.html'\n})\nexport class RecordDesignerPageComponent implements OnInit, OnDestroy, IComponentCanDeactivate {\n  isInitialized = false;\n  configuration: IDesignerConfiguration;\n\n  private subscription: Subscription;\n  private isNewRecord: boolean;\n\n  @ViewChild(RecordDesignerComponent)\n  private recordDesignerComponent: RecordDesignerComponent;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxUtilityModalsService: RxUtilityModalsService,\n    private rxPageTitleService: RxPageTitleService,\n    private router: Router,\n    private translateService: TranslateService,\n    private rxComponentCanDeactivateGuard: RxComponentCanDeactivateGuard\n  ) {}\n\n  ngOnInit(): void {\n    this.rxComponentCanDeactivateGuard.setPageComponent(this);\n\n    this.subscription = this.activatedRoute.params.subscribe(({ definitionName, bundleId }) => {\n      this.rxBundleCacheService.bundleId = bundleId || this.rxDefinitionNameService.getBundleId(definitionName);\n\n      this.isInitialized = true;\n      this.isNewRecord = !definitionName;\n\n      this.configuration = {\n        definitionName: definitionName,\n        bundleId: this.rxBundleCacheService.bundleId\n      };\n\n      this.rxPageTitleService.set([\n        this.rxDefinitionNameService.getDisplayName(definitionName),\n        this.translateService.instant('com.bmc.arsys.rx.client.record-designer.title')\n      ]);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n    this.rxComponentCanDeactivateGuard.setPageComponent(null);\n  }\n\n  onDefinitionSaved(recordDefinitionName: string): void {\n    if (this.isNewRecord) {\n      this.router.navigate(['edit2', recordDefinitionName], { relativeTo: this.activatedRoute.parent });\n    }\n  }\n\n  onDefinitionErrorLoading(): void {\n    this.router.navigate(['new2', this.rxBundleCacheService.bundleId], { relativeTo: this.activatedRoute.parent });\n  }\n\n  onCloseDesigner(): void {\n    this.router.navigate([\n      RX_APPLICATION.innovationStudioBundleId,\n      this.rxBundleCacheService.bundleId,\n      'record-definitions'\n    ]);\n  }\n\n  canDeactivate(): boolean {\n    return this.recordDesignerComponent?.canDeactivate() ?? true;\n  }\n\n  confirmDeactivation(): Promise<boolean> {\n    return this.rxUtilityModalsService.confirmUnsavedChanges();\n  }\n}\n","<rx-record-designer\n  *ngIf=\"isInitialized\"\n  [configuration]=\"configuration\"\n  (definitionSaved)=\"onDefinitionSaved($event)\"\n  (definitionErrorLoading)=\"onDefinitionErrorLoading()\"\n  (closeDesigner)=\"onCloseDesigner()\"\n></rx-record-designer>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RecordDesignerPageComponent } from './record-designer-page.component';\nimport { RecordDesignerModule } from '../record-designer/record-designer.module';\n\n@NgModule({\n  declarations: [RecordDesignerPageComponent],\n  exports: [RecordDesignerPageComponent],\n  imports: [CommonModule, RecordDesignerModule]\n})\nexport class RecordDesignerPageModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["includes","cloneDeep","BehaviorSubject","RX_OVERLAY","find","RX_BUNDLE","map","combineLatest","RX_MODAL","noop","DismissReasons","RxModalClass","Component","ChangeDetectionStrategy","ViewChild","tap","mergeMap","ValueAccessor","NG_VALUE_ACCESSOR","Input","CommonModule","FormsModule","AdaptTooltipModule","AdaptRxSelectModule","AdaptButtonModule","AdaptCheckbox2Module","AdaptPopoverModule","AdaptIconModule","AdaptRxCheckboxModule","ReactiveFormsModule","TranslateModule","AdaptTableModule","NgModule","RX_RECORD_DEFINITION","Injectable","RecordFieldOption","TranslateService","RxIdService","RxFieldDefinitionService","RxRecordDefinitionService","TextFormControlComponent","TextareaFormControlComponent","SelectFormControlComponent","SwitchFormControlComponent","RxPermissionEditorComponent","RX_PERMISSION","LabelFormControlComponent","BooleanFormControlComponent","CounterFormControlComponent","isEmpty","trim","ValidationIssueType","isNumber","inRange","RX_NUMBER","RxDefinitionPickerComponent","RxDefinitionPickerType","Tooltip","size","LocalizedCharacterFieldValueModalComponent","DateTimeFormControlComponent","DateFormControlComponent","TimeFormControlComponent","isNil","omitBy","SelectionFieldOptionsComponent","RxDefinitionPickerScope","ReplaySubject","switchMap","iif","of","forEach","union","keys","_map","pick","remove","take","some","RxDefinitionPickerModule","ComponentStore","filter","Validators","shareReplay","AdaptRxFormControlModule","AdaptRxTextfieldModule","AdaptAccordionModule","RxModalModule","AdaptEmptyStateModule","createAction","props","ArchiveType","createFeatureSelector","createSelector","RxRecordDefinitionCacheService","ExpressionOperatorRowsByGroup","ExpressionOperatorGroup","RxExpressionConfigurator","get","FormControl","startWith","orderBy","intersection","chain","concat","takeUntil","reverse","AssociationSelectionType","RX_ASSOCIATION_DEFINITION","reject","forkJoin","RX_APPLICATION","defaultIfEmpty","_filter","AdaptAccordionTabComponent","ElementRef","ViewChildren","OpenViewActionModalSize","RxRevertCustomizationComponent","ExpressionFormControlComponent","findIndex","omit","moment","EventEmitter","Subject","pluck","distinctUntilChanged","withLatestFrom","invert","capitalize","scan","intersectionBy","skip","isNull","RecordDesignerActions.setInspectorTabIndex","RecordDesignerActions.init","RX_EXPRESSION_EDITOR","RecordDesignerActions.updateDefinitionModelFromDesigner","RecordDesignerActions.setSelectedFieldGuid","RecordDesignerActions.updateSelectedFieldModel","RecordDesignerActions.toggleDesignMode","RecordDesignerActions.createNewFieldModel","RecordDesignerActions.addNewFieldModels","RecordDesignerActions.copySelectedField","RecordDesignerActions.deleteSelectedField","RecordDesignerActions.clearSelectedFieldGuid","from","RecordDesignerActions.saveDefinitionSuccess","RecordDesignerActions.destroy","AdaptSidebarComponent","Output","createReducer","on","RecordDesignerActions.initDefinitionModel","isUndefined","RecordDesignerActions.clearSearchFields","RecordDesignerActions.markDesignerPristine","RecordDesignerActions.markDesignerDirty","RecordDesignerActions.addFieldModel","RecordDesignerActions.deleteSelectedFieldSuccess","createEffect","ofType","RecordDesignerActions.loadDefinition","RecordDesignerActions.loadDefinitionSuccess","isEqual","mapValues","RecordDesignerActions.checkIfFieldUsedByIndexes","RecordDesignerActions.deleteSelectedFieldError","AdaptCodeViewerModule","AdaptRxLabelModule","AdaptTabsModule","AdaptBusyModule","AdaptDropdownModule","RxDesignerHeaderModule","RxValidationIssuesModule","RecordGridModule","RxFormBuilderModule","RxDefinitionModule","RxRecordDefinitionFieldOptionPipeModule","AdaptSidebarModule","AdaptAlertModule","AdaptRxRadiobuttonModule","AdaptRxSwitchModule","AdaptRxListBuilderModule","DatePipe","StoreModule","EffectsModule"],"mappings":"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"}