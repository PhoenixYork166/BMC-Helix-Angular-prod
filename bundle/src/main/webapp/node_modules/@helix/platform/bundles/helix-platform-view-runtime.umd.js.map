{"version":3,"file":"helix-platform-view-runtime.umd.js","sources":["../../../../libs/platform/view/runtime/components/runtime-view-canvas/component/runtime-view-canvas.service.ts","../../../../libs/platform/view/runtime/components/runtime-view-canvas/components/canvas-item/runtime-view-canvas-item.service.ts","../../../../libs/platform/view/runtime/components/runtime-view-canvas/components/canvas-item/runtime-view-canvas-item.component.ts","../../../../libs/platform/view/runtime/components/runtime-view-canvas/components/canvas-item/runtime-view-canvas-item.component.html","../../../../libs/platform/view/runtime/components/runtime-view-canvas/components/canvas-item-container/runtime-view-canvas-item-container.component.ts","../../../../libs/platform/view/runtime/components/runtime-view-canvas/components/canvas-item-container/runtime-view-canvas-item-container.component.html","../../../../libs/platform/view/runtime/components/runtime-component/runtime-view-root.component.ts","../../../../libs/platform/view/runtime/components/runtime-component/runtime-component.html","../../../../libs/platform/view/runtime/layout/runtime-layout-outlet.class.ts","../../../../libs/platform/view/runtime/layout/runtime-layout-item.class.ts","../../../../libs/platform/view/runtime/layout/runtime-view-layout.service.ts","../../../../libs/platform/view/runtime/runtime-view-model-api.class.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../libs/platform/view/runtime/component/component-expression.class.ts","../../../../libs/platform/view/runtime/event-manager/view-component-event-manager.constant.ts","../../../../libs/platform/view/runtime/view-definition-adapter.service.ts","../../../../libs/platform/view/runtime/runtime-view-utils.service.ts","../../../../libs/platform/view/runtime/event-manager/view-component-event-manager.class.ts","../../../../libs/platform/view/runtime/runtime-view.model.ts","../../../../libs/platform/view/runtime/runtime-view-registry.service.ts","../../../../libs/platform/view/runtime/components/runtime-view-canvas/component/runtime-view-canvas.component.ts","../../../../libs/platform/view/runtime/components/runtime-view-canvas/component/runtime-view-canvas.component.html","../../../../libs/platform/view/runtime/component/runtime-view.component.ts","../../../../libs/platform/view/runtime/component/runtime-view.component.html","../../../../libs/platform/view/runtime/components/base-view-component/base-view-component.class.ts","../../../../libs/platform/view/runtime/components/runtime-view-canvas/components/canvas-outlet/runtime-view-canvas-outlet.component.ts","../../../../libs/platform/view/runtime/components/runtime-view-canvas/components/canvas-outlet/runtime-view-canvas-outlet.component.html","../../../../libs/platform/view/runtime/components/runtime-view-canvas/runtime-view-canvas.module.ts","../../../../libs/platform/view/runtime/components/runtime-view-modal/runtime-view-modal.component.ts","../../../../libs/platform/view/runtime/components/runtime-view-modal/runtime-view-modal.component.html","../../../../libs/platform/view/runtime/interfaces/runtime-view.constant.ts","../../../../libs/platform/view/runtime/runtime-view.module.ts","../../../../libs/platform/view/runtime/helix-platform-view-runtime.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ReplaySubject, Subject } from 'rxjs';\nimport { ICanvasComponentPropertyChanged } from '../interfaces/canvas-component-property-changed.interface';\n\n@Injectable()\nexport class RuntimeViewCanvasService {\n  private componentPropertyChangedSubject = new Subject<ICanvasComponentPropertyChanged>();\n  componentPropertyChanged$ = this.componentPropertyChangedSubject.asObservable();\n\n  onViewComponentPropertyChanged(componentPropertyChange: ICanvasComponentPropertyChanged): void {\n    this.componentPropertyChangedSubject.next(componentPropertyChange);\n  }\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Injectable,\n  Injector,\n  OnDestroy,\n  ViewContainerRef\n} from '@angular/core';\nimport { pick } from 'lodash';\nimport { delay, distinctUntilChanged, skipWhile, takeUntil } from 'rxjs/operators';\nimport { ReplaySubject } from 'rxjs';\nimport { RuntimeViewCanvasService } from '../../component/runtime-view-canvas.service';\nimport { RuntimeLayoutItem } from '../../../../layout/runtime-layout-item.class';\nimport { RuntimeLayoutOutlet } from '../../../../layout/runtime-layout-outlet.class';\nimport { IViewComponent } from '../../../../interfaces/view-component.interface';\nimport { IChildColumn } from '../../interfaces/child-column.interface';\nimport { ComponentFactory } from '@angular/core';\n\n@Injectable()\nexport class RuntimeViewCanvasItemService implements OnDestroy {\n  container: ViewContainerRef;\n  layout: RuntimeLayoutItem;\n  componentRef: ComponentRef<any>;\n  componentInstance: IViewComponent;\n\n  hasMargin = true;\n  hasAutoFill = false;\n  hasAutoScroll = false;\n  isHidden = false;\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  constructor(\n    private injector: Injector,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private runtimeViewCanvasService: RuntimeViewCanvasService\n  ) {}\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  registerOutlet(\n    outletName: string,\n    outletViewContainerRef: ViewContainerRef,\n    containerComponent?: ComponentFactory<any>\n  ): void {\n    const currentOutlet = this.layout.outlets.find((outlet) => outlet.name === outletName);\n\n    if (currentOutlet) {\n      this.renderContainerComponent(outletViewContainerRef, currentOutlet, containerComponent);\n    }\n  }\n\n  getChildren(outletName: string): IChildColumn[] {\n    const currentOutlet = this.layout.outlets.find((outlet) => outlet.name === outletName);\n\n    return currentOutlet.columns.map((column) => ({\n      ...column,\n      children: column.children\n        .filter(Boolean)\n        .map((child) => pick(child, 'config', 'guid', 'runtimeViewModelApi', 'factory', 'outlets'))\n    }));\n  }\n\n  renderViewComponent(): void {\n    this.componentRef = this.container.createComponent(this.layout.factory, null, this.injector);\n    this.componentInstance = this.componentRef.instance;\n    this.componentInstance.guid = this.layout.guid;\n    this.componentInstance.config = this.layout.config;\n    this.componentInstance.runtimeViewModelApi = this.layout.runtimeViewModelApi;\n\n    this.componentInstance.propertyChanged?.pipe(takeUntil(this.destroyed$)).subscribe((propertyChange) => {\n      this.runtimeViewCanvasService.onViewComponentPropertyChanged(propertyChange);\n    });\n\n    // Update hasMargin, hasAutoScroll, and hasAutoFill property bindings asynchronously using timeout\n    // to trigger change detection. Otherwise \"ExpressionChangedAfterItHasBeenCheckedError\" will occur.\n    this.componentInstance.hidden\n      ?.pipe(\n        skipWhile((value) => !value),\n        distinctUntilChanged(),\n        delay(0),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe((hidden) => {\n        this.hasMargin = !hidden;\n        this.isHidden = hidden;\n      });\n\n    this.componentInstance.autoScroll\n      ?.pipe(\n        skipWhile((value) => !value),\n        distinctUntilChanged(),\n        delay(0),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe((autoScroll) => {\n        this.hasAutoScroll = autoScroll;\n      });\n\n    this.componentInstance.autoFill\n      ?.pipe(\n        skipWhile((value) => !value),\n        distinctUntilChanged(),\n        delay(0),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe((autoFill) => {\n        this.hasAutoFill = autoFill;\n      });\n  }\n\n  private renderContainerComponent(\n    outletViewContainerRef: ViewContainerRef,\n    currentOutlet: RuntimeLayoutOutlet,\n    containerComponent?: ComponentFactory<any>\n  ): void {\n    const containerComponentFactory = containerComponent;\n\n    const containerRef = outletViewContainerRef.createComponent(containerComponentFactory);\n\n    containerRef.instance.columns = currentOutlet.columns;\n    containerRef.instance.outlet = currentOutlet;\n  }\n}\n","import { Component, HostBinding, Input, OnChanges, SimpleChanges, ViewChild, ViewContainerRef } from '@angular/core';\nimport { RuntimeLayoutItem } from '../../../../layout/runtime-layout-item.class';\nimport { IChildColumn } from '../../interfaces/child-column.interface';\nimport { RuntimeViewCanvasItemService } from './runtime-view-canvas-item.service';\n\n@Component({\n  selector: 'rx-runtime-view-canvas-item',\n  templateUrl: './runtime-view-canvas-item.component.html',\n  providers: [RuntimeViewCanvasItemService]\n})\nexport class RuntimeViewCanvasItemComponent implements OnChanges {\n  @Input()\n  layout: RuntimeLayoutItem;\n\n  @ViewChild('container', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  @HostBinding('class.rx-runtime-view-canvas-item-margin')\n  get hasMargin() {\n    return this.runtimeViewCanvasItemService.hasMargin;\n  }\n\n  @HostBinding('class.rx-runtime-view-canvas-item-auto-fill')\n  get hasAutoFill() {\n    return this.runtimeViewCanvasItemService.hasAutoFill && !this.runtimeViewCanvasItemService.isHidden;\n  }\n\n  @HostBinding('class.rx-runtime-view-canvas-item-auto-scroll')\n  get hasAutoScroll() {\n    return this.runtimeViewCanvasItemService.hasAutoScroll;\n  }\n\n  constructor(private runtimeViewCanvasItemService: RuntimeViewCanvasItemService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.runtimeViewCanvasItemService.container) {\n      this.runtimeViewCanvasItemService.container = this.container;\n    }\n\n    if (changes.layout.currentValue) {\n      this.runtimeViewCanvasItemService.layout = changes.layout.currentValue;\n\n      if (changes.layout.previousValue) {\n        this.container.clear();\n      }\n\n      this.runtimeViewCanvasItemService.renderViewComponent();\n    }\n  }\n\n  registerOutlet(outletName: string, outletViewContainerRef: ViewContainerRef): void {\n    this.runtimeViewCanvasItemService.registerOutlet(outletName, outletViewContainerRef);\n  }\n\n  getChildren(outletName: string): IChildColumn[] {\n    return this.runtimeViewCanvasItemService.getChildren(outletName);\n  }\n}\n","<ng-container #container></ng-container>\n","import { Component, HostBinding, Input } from '@angular/core';\nimport { RuntimeLayoutItem, RuntimeLayoutOutlet, RuntimeLayoutOutletColumn } from '../../../../layout';\n\n@Component({\n  selector: 'rx-runtime-view-canvas-item-container',\n  templateUrl: './runtime-view-canvas-item-container.component.html',\n  styleUrls: ['./runtime-view-canvas-item-container.component.scss']\n})\nexport class RuntimeViewCanvasItemContainerComponent {\n  @Input() columns: RuntimeLayoutOutletColumn[] = [];\n  @Input() outlet: RuntimeLayoutOutlet;\n\n  @HostBinding('style.min-height')\n  get hostClass(): string {\n    if (this.outlet.height) {\n      return `${this.outlet.height}px`;\n    }\n\n    return null;\n  }\n\n  trackByFn(index: number, item: RuntimeLayoutItem): string | number {\n    return item?.guid || index;\n  }\n}\n","<ng-container *ngIf=\"columns.length > 1\">\n  <div class=\"row rx-runtime-view-canvas-item-container-row\">\n    <div\n      class=\"rx-runtime-view-canvas-item-container-column\"\n      [ngClass]=\"column.cssClass ? column.cssClass : column.span ? 'col-' + column.span : 'col'\"\n      *ngFor=\"let column of columns\"\n    >\n      <ng-container *ngTemplateOutlet=\"itemTpl; context: { $implicit: column.children }\"></ng-container>\n    </div>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"columns.length === 1\">\n  <ng-container *ngTemplateOutlet=\"itemTpl; context: { $implicit: columns[0].children }\"></ng-container>\n</ng-container>\n\n<ng-template #itemTpl let-layoutItems>\n  <rx-runtime-view-canvas-item\n    #item\n    *ngFor=\"let layoutItem of layoutItems; trackBy: trackByFn\"\n    [layout]=\"layoutItem\"\n  ></rx-runtime-view-canvas-item>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { RuntimeViewCanvasItemComponent } from '../runtime-view-canvas/components/canvas-item/runtime-view-canvas-item.component';\nimport { RX_VIEW_DEFINITION, ViewLayoutRole } from '@helix/platform/view/api';\nimport { RuntimeLayoutOutlet } from '../../layout';\n\n@Component({\n  selector: 'rx-runtime-view-root',\n  templateUrl: './runtime-component.html',\n  styleUrls: ['./runtime-component.scss']\n})\nexport class RuntimeViewRootComponent {\n  defaultOutletName = RX_VIEW_DEFINITION.defaultOutletName;\n  layoutRole = ViewLayoutRole;\n\n  constructor(public runtimeCanvasItemComponent: RuntimeViewCanvasItemComponent) {}\n\n  isHidden(outlet: RuntimeLayoutOutlet): boolean {\n    return outlet.name === ViewLayoutRole.Header && outlet.columns[0].children.length === 0;\n  }\n}\n","<rx-runtime-view-canvas-item-container\n  *ngFor=\"let outlet of runtimeCanvasItemComponent.layout.outlets\"\n  [hidden]=\"isHidden(outlet)\"\n  [columns]=\"outlet.columns\"\n  [outlet]=\"outlet\"\n  [ngClass]=\"{\n    'content-outlet': outlet.name === defaultOutletName,\n    'outlet-padding': [layoutRole.Header, layoutRole.Footer, defaultOutletName].includes(outlet.name)\n  }\"\n></rx-runtime-view-canvas-item-container>\n","import { RuntimeLayoutItem } from './runtime-layout-item.class';\n\nexport class RuntimeLayoutOutletColumn {\n  children: RuntimeLayoutItem[] = [];\n  cssClass?: string;\n  span?: number;\n}\n\nexport class RuntimeLayoutOutlet {\n  name: string;\n  children: RuntimeLayoutItem[] = [];\n  columns: RuntimeLayoutOutletColumn[] = [new RuntimeLayoutOutletColumn()];\n  height: number = null;\n}\n","import { Observable } from 'rxjs';\nimport { IViewComponentRuntimeState } from '../interfaces/view-component-runtime-state.interface';\nimport { RuntimeViewModelApi } from '../runtime-view-model-api.class';\nimport { RuntimeLayoutOutlet, RuntimeLayoutOutletColumn } from './runtime-layout-outlet.class';\nimport { ComponentFactory } from '@angular/core';\nimport { IViewLayoutOutlet } from '@helix/platform/view/api';\n\nexport class RuntimeLayoutItem {\n  config: Observable<IViewComponentRuntimeState>;\n  guid: string;\n  outlets: RuntimeLayoutOutlet[] = [];\n  parent: RuntimeLayoutItem = null;\n  runtimeViewModelApi: RuntimeViewModelApi = null;\n  factory: ComponentFactory<any>;\n\n  constructor(options: {\n    guid: string;\n    parent: RuntimeLayoutItem;\n    runtimeViewModelApi: RuntimeViewModelApi;\n    outlets?: any[];\n    config?: any;\n    factory: any;\n  }) {\n    Object.assign(this, {\n      guid: options.guid,\n      config: options.config,\n      parent: options.parent,\n      runtimeViewModelApi: options.runtimeViewModelApi,\n      factory: options.factory\n    });\n\n    if (options.outlets) {\n      this.initializeOutlets(options.outlets);\n    }\n  }\n\n  initializeOutlets(outlets: any[]) {\n    outlets.forEach((outlet) => {\n      const layoutOutletItem = new RuntimeLayoutOutlet();\n\n      layoutOutletItem.name = outlet.name;\n      layoutOutletItem.height = outlet.hasOwnProperty('height') ? outlet.height : null;\n\n      this.outlets.push(layoutOutletItem);\n    });\n  }\n\n  addLayoutItem(\n    layoutTreeItem: RuntimeLayoutItem,\n    columnConfig: {\n      columnIndex: number;\n      parentOutlet?: IViewLayoutOutlet;\n    }\n  ) {\n    const outlet = this.outlets.find((outletItem) => outletItem.name === columnConfig.parentOutlet.name);\n    const insertIndex = columnConfig.parentOutlet.columns[columnConfig.columnIndex].children.indexOf(\n      layoutTreeItem.guid\n    );\n\n    columnConfig.parentOutlet.columns.forEach((column, columnIndex) => {\n      if (!outlet.columns[columnIndex]) {\n        outlet.columns[columnIndex] = new RuntimeLayoutOutletColumn();\n      }\n\n      if (column.cssClass) {\n        outlet.columns[columnIndex].cssClass = column.cssClass;\n      }\n\n      if (column.span) {\n        outlet.columns[columnIndex].span = column.span;\n      }\n    });\n\n    if (layoutTreeItem) {\n      outlet.columns[columnConfig.columnIndex].children[insertIndex] = layoutTreeItem;\n    }\n  }\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport {\n  IViewComponentDefinitionWithParent,\n  IViewDefinition,\n  IViewLayout,\n  RxOldViewLayoutAdapterService,\n  RxViewComponentRegistryService,\n  RxViewComponentType,\n  RxViewDefinitionParserService\n} from '@helix/platform/view/api';\nimport { RxTreeService, RxJsonParserService } from '@helix/platform/utils';\nimport { RuntimeViewRootComponent } from '../components/runtime-component/runtime-view-root.component';\nimport { RuntimeViewModelApi } from '../runtime-view-model-api.class';\nimport { RuntimeViewModel } from '../runtime-view.model';\nimport { RuntimeLayoutItem } from './runtime-layout-item.class';\nimport { RxLogService } from '@helix/platform/shared/api';\n\n/**\n * @desc Represents runtime component tree\n */\n@Injectable()\nexport class RuntimeViewLayoutService {\n  layout: RuntimeLayoutItem;\n\n  private runtimeViewModel: RuntimeViewModel;\n  private runtimeViewModelApi: RuntimeViewModelApi;\n\n  constructor(\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private viewDefinitionParserService: RxViewDefinitionParserService,\n    private factoryResolver: ComponentFactoryResolver,\n    private tree: RxTreeService,\n    private rxJsonParserService: RxJsonParserService,\n    private rxLogService: RxLogService,\n    private rxOldViewLayoutAdapterService: RxOldViewLayoutAdapterService\n  ) {}\n\n  clear() {\n    this.layout = null;\n  }\n\n  init(runtimeViewModel: RuntimeViewModel, runtimeViewModelApi: RuntimeViewModelApi) {\n    this.runtimeViewModel = runtimeViewModel;\n    this.runtimeViewModelApi = runtimeViewModelApi;\n\n    this.viewDefinitionParserService\n      .getComponents(runtimeViewModel.viewDefinition)\n      .forEach(this.processDefinition.bind(this));\n  }\n\n  private processDefinition(componentDefinitionItem: IViewComponentDefinitionWithParent): void {\n    this.rxOldViewLayoutAdapterService.convertLayout(componentDefinitionItem);\n\n    if (!componentDefinitionItem.parentComponentDefinition) {\n      this.initializeView((componentDefinitionItem as any).componentDefinition as IViewDefinition);\n    } else {\n      const componentDescriptor = this.rxViewComponentRegistryService.get(\n        componentDefinitionItem.componentDefinition.type\n      );\n\n      if (\n        componentDefinitionItem.componentDefinition.type !== RxViewComponentType.Action &&\n        componentDescriptor &&\n        !this.runtimeViewModel.isDataViewComponentDefinition(componentDescriptor)\n      ) {\n        // todo move this logic to separate method\n        const parentComponentDefinitionLayout = JSON.parse(\n          componentDefinitionItem.parentComponentDefinition.layout\n        ) as IViewLayout;\n\n        let columnIndex = 0;\n        const parentOutlet = parentComponentDefinitionLayout.outlets.find((outlet) => {\n          return outlet.columns.find((col, colIndex) => {\n            const includes = col.children.includes(componentDefinitionItem.componentDefinition.guid);\n\n            if (includes) {\n              columnIndex = colIndex;\n            }\n\n            return includes;\n          });\n        });\n\n        if (parentOutlet) {\n          const viewComponentConfig = this.runtimeViewModel.viewComponentStates\n            .get(componentDefinitionItem.componentDefinition.guid)\n            .config$.asObservable();\n\n          const parentLayoutItem = this.getLayoutItem(componentDefinitionItem.parentComponentDefinition.guid);\n\n          parentLayoutItem.addLayoutItem(\n            new RuntimeLayoutItem({\n              guid: componentDefinitionItem.componentDefinition.guid,\n              config: viewComponentConfig,\n              parent: parentLayoutItem,\n              runtimeViewModelApi: this.runtimeViewModelApi,\n              outlets: componentDescriptor.outlets,\n              factory: componentDescriptor.componentFactory\n            }),\n            {\n              parentOutlet,\n              columnIndex\n            }\n          );\n        } else {\n          const component = componentDefinitionItem.componentDefinition;\n\n          this.rxLogService.warning(\n            `Cannot render view component. ${component.type} (${component.guid}) is not used in layout.`\n          );\n        }\n      }\n    }\n  }\n\n  private initializeView(viewDefinition: IViewDefinition): void {\n    const layout: IViewLayout = this.rxJsonParserService.tryParseJson(viewDefinition.layout);\n\n    this.layout = new RuntimeLayoutItem({\n      guid: viewDefinition.guid,\n      parent: null,\n      runtimeViewModelApi: this.runtimeViewModelApi,\n      outlets: layout.outlets,\n      factory: this.factoryResolver.resolveComponentFactory(RuntimeViewRootComponent)\n    });\n  }\n\n  private getLayoutItem(guid: string): RuntimeLayoutItem {\n    const flattenedLayoutItems = this.tree.flattenBy(this.layout, (currentLayout) => {\n      return currentLayout.outlets.reduce((result, outlet) => {\n        outlet.columns.forEach((column) => {\n          column.children.forEach((canvasLayout) => {\n            result.push(canvasLayout);\n          });\n        });\n\n        return result;\n      }, []);\n    });\n\n    return flattenedLayoutItems.find((flattenedLayoutItem) => flattenedLayoutItem.guid === guid);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IViewInputParams, IViewPresetsByViewComponentGuid } from '@helix/platform/view/api';\nimport { Observable } from 'rxjs';\nimport { IRuntimeViewOutputParameter } from './interfaces/index';\nimport { RuntimeViewModel } from './runtime-view.model';\n\n@Injectable()\nexport class RuntimeViewModelApi {\n  private runtimeViewModel: RuntimeViewModel;\n\n  clear() {\n    this.runtimeViewModel = null;\n  }\n\n  init(model: RuntimeViewModel) {\n    if (!this.runtimeViewModel) {\n      this.runtimeViewModel = model;\n    }\n  }\n\n  triggerViewActions(guid: string, eventName: string): Promise<void> {\n    return this.runtimeViewModel.triggerViewActions(guid, eventName);\n  }\n\n  cancel(skipDirtyCheck?: boolean): Observable<never> {\n    return this.runtimeViewModel.cancel(skipDirtyCheck);\n  }\n\n  close(): Observable<IRuntimeViewOutputParameter> {\n    return this.runtimeViewModel.close();\n  }\n\n  getViewInputParameters(): IViewInputParams {\n    return this.runtimeViewModel.getViewInputParameters();\n  }\n\n  applyViewPreset(\n    viewPresetSelectorGuid: string,\n    viewPresetGuid: string,\n    sharedViewPresets?: IViewPresetsByViewComponentGuid\n  ): Observable<never> {\n    return this.runtimeViewModel.applyViewPreset(viewPresetSelectorGuid, viewPresetGuid, sharedViewPresets);\n  }\n\n  deleteViewPreset(viewPresetGuid: string): Observable<never> {\n    return this.runtimeViewModel.deleteViewPreset(viewPresetGuid);\n  }\n\n  discardViewPresetChanges(\n    viewPresetGuid: string,\n    sharedViewPresets?: IViewPresetsByViewComponentGuid\n  ): Observable<never> {\n    return this.runtimeViewModel.discardViewPresetChanges(viewPresetGuid, sharedViewPresets);\n  }\n\n  saveViewPreset(viewPresetGuid: string): Observable<never> {\n    return this.runtimeViewModel.saveViewPreset(viewPresetGuid);\n  }\n\n  shareViewPreset(viewPresetSelectorGuid: string): Observable<IViewPresetsByViewComponentGuid> {\n    return this.runtimeViewModel.shareViewPreset(viewPresetSelectorGuid);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { IExpressionEvaluator, RxExpressionEvaluatorService } from '@helix/platform/view/api';\nimport { IExpressionContext } from '../interfaces/expression-context.interface';\nimport { includes } from 'lodash';\n\nexport class ComponentExpression {\n  constructor(\n    public propertyName: string,\n    private expression: string,\n    private rxExpressionEvaluatorService: RxExpressionEvaluatorService,\n    private customEvaluatorService: IExpressionEvaluator\n  ) {}\n\n  evaluate(expressionContext: IExpressionContext): any {\n    return this.rxExpressionEvaluatorService.tryEvaluate(\n      this.expression,\n      expressionContext,\n      this.customEvaluatorService\n    );\n  }\n\n  hasDependency(guid: string, propertyName: string): boolean {\n    return includes(this.expression, `${guid}.${propertyName}`);\n  }\n\n  hasTokens(): boolean {\n    return includes(this.expression, '${view.') || this.hasKeywordTokens();\n  }\n\n  hasKeywordTokens(): boolean {\n    return includes(this.expression, '${keywords.');\n  }\n\n  hasViewTokens(): boolean {\n    return (\n      includes(this.expression, '${view.inputParams') ||\n      includes(this.expression, '${view.api') ||\n      this.hasViewIsValidToken()\n    );\n  }\n\n  hasViewIsValidToken(): boolean {\n    return includes(this.expression, '${view.isValid}');\n  }\n\n  hasComponentTokens(): boolean {\n    return includes(this.expression, '${view.components');\n  }\n}\n","export const VIEW_COMPONENT_DEFAULT_EVENT_NAME = 'default';\n","import { Injectable } from '@angular/core';\nimport {\n  AnyViewComponentDefinition,\n  IContainerViewComponentDefinition,\n  IViewDefinition,\n  RX_AVAILABLE_ON_DEVICES_ALL_VALUE,\n  RX_AVAILABLE_ON_DEVICES_PROP_NAME,\n  RxDeviceDetectionService,\n  RxViewLayout\n} from '@helix/platform/view/api';\nimport { RxJsonParserService, RxObjectUtilsService } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDefinitionAdapterService {\n  constructor(\n    private rxObjectUtilsService: RxObjectUtilsService,\n    private rxJsonParserService: RxJsonParserService,\n    private rxDeviceDetectionService: RxDeviceDetectionService\n  ) {}\n\n  // called to make view modifications before the view component adapters are executed\n  preProcessViewDefinition(viewDefinition: IViewDefinition): void {\n    viewDefinition.componentDefinitions?.forEach((childComponentDefinition) => {\n      this.expandProperties(childComponentDefinition);\n    });\n  }\n\n  // called to make view modifications after the view component adapters have been executed\n  postProcessViewDefinition(viewDefinition: IViewDefinition): void {\n    viewDefinition.componentDefinitions?.forEach((childComponentDefinition) => {\n      this.filterComponentsForDevice(childComponentDefinition, viewDefinition);\n    });\n  }\n\n  private expandProperties(componentDefinition): void {\n    componentDefinition.propertiesByName = this.rxObjectUtilsService.expandProperties(\n      componentDefinition.propertiesByName\n    );\n\n    if (componentDefinition.componentDefinitions) {\n      componentDefinition.componentDefinitions.forEach((childComponentDefinition) => {\n        this.expandProperties(childComponentDefinition);\n      });\n    }\n  }\n\n  private filterComponentsForDevice(\n    componentDefinition: AnyViewComponentDefinition,\n    parent: IContainerViewComponentDefinition | IViewDefinition\n  ): void {\n    const availableOnDevicesProp =\n      this.rxJsonParserService.tryParseJson(\n        componentDefinition.propertiesByName?.[RX_AVAILABLE_ON_DEVICES_PROP_NAME],\n        RX_AVAILABLE_ON_DEVICES_ALL_VALUE\n      ) || RX_AVAILABLE_ON_DEVICES_ALL_VALUE;\n\n    if (availableOnDevicesProp.includes(this.rxDeviceDetectionService.currentDevice)) {\n      if ('componentDefinitions' in componentDefinition) {\n        componentDefinition.componentDefinitions.forEach((childComponentDefinition) => {\n          this.filterComponentsForDevice(childComponentDefinition, componentDefinition);\n        });\n      }\n    } else {\n      parent.componentDefinitions = parent.componentDefinitions.filter(\n        (definition) => definition !== componentDefinition\n      );\n\n      if (parent.layout) {\n        const updatedLayout = RxViewLayout.removeChildFromLayout(\n          this.rxJsonParserService.tryParseJson(parent.layout),\n          componentDefinition.guid\n        );\n\n        parent.layout = JSON.stringify(updatedLayout);\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IPlainObject, RxDefinitionAdapterRegistryService } from '@helix/platform/shared/api';\nimport {\n  IContainerViewComponentDefinition,\n  IViewDefinition,\n  RxViewActionDefinitionAdapterRegistryService,\n  RxViewComponentType,\n  RxViewDefinitionCacheService,\n  RxViewDefinitionParserService,\n  RxViewDefinitionService\n} from '@helix/platform/view/api';\nimport { isEmpty, isString, head, chain, isObject, values } from 'lodash';\nimport { map, take } from 'rxjs/operators';\nimport { EMPTY, Observable, of } from 'rxjs';\nimport { RX_GUID } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRuntimeViewUtilsService {\n  constructor(\n    private rxViewDefinitionService: RxViewDefinitionService,\n    private rxViewDefinitionParserService: RxViewDefinitionParserService,\n    private rxDefinitionAdapterRegistryService: RxDefinitionAdapterRegistryService,\n    private rxViewActionDefinitionAdapterRegistryService: RxViewActionDefinitionAdapterRegistryService,\n    private rxViewDefinitionCacheService: RxViewDefinitionCacheService\n  ) {}\n\n  isViewCancellable(viewDefinitionName: string | IViewDefinition): Observable<boolean> {\n    if (isString(viewDefinitionName)) {\n      return this.rxViewDefinitionCacheService\n        .getViewDefinition(viewDefinitionName)\n        .pipe(\n          map(\n            (viewDefinition: IViewDefinition) =>\n              this.hasPageComponent(viewDefinition) || this.hasViewCancellingAction(viewDefinition)\n          )\n        );\n    } else {\n      return of(this.hasPageComponent(viewDefinitionName) || this.hasViewCancellingAction(viewDefinitionName));\n    }\n  }\n\n  runAdaptersForComponents(\n    viewDefinition: IViewDefinition,\n    containerViewComponentDefinition?: IContainerViewComponentDefinition\n  ): Observable<any>[] {\n    const componentPairs = this.rxViewDefinitionParserService.getComponents(\n      containerViewComponentDefinition || viewDefinition\n    );\n\n    const regex = new RegExp(`\\\\$\\{view.components.${RX_GUID.baseGuidPattern}.`);\n\n    viewDefinition.viewComponentExpressions = chain(componentPairs)\n      .map((component) => values(component.componentDefinition.propertiesByName))\n      .flatten()\n      .map((propertyValue) => (isObject(propertyValue) ? values(propertyValue) : propertyValue))\n      .flatten()\n      .filter(isString)\n      .filter((propertyValue) => regex.test(propertyValue))\n      .value();\n\n    const result = componentPairs.reduce((adapterObservables$, { componentDefinition }) => {\n      const adapter =\n        componentDefinition.type === RxViewComponentType.Action\n          ? this.rxViewActionDefinitionAdapterRegistryService.getRuntimeAdapter(\n              componentDefinition.propertiesByName.name\n            )\n          : this.rxDefinitionAdapterRegistryService.getRuntimeAdapter(componentDefinition.type);\n\n      if (adapter) {\n        const result$ = adapter.adaptDefinition(componentDefinition, viewDefinition);\n\n        adapterObservables$.push(result$ ? result$.pipe(take(1)) : EMPTY);\n      }\n\n      return adapterObservables$;\n    }, []);\n\n    return isEmpty(result) ? [EMPTY] : result;\n  }\n\n  private hasViewCancellingAction(viewDefinition: IViewDefinition): boolean {\n    return Boolean(\n      this.rxViewDefinitionParserService.findViewComponent(\n        viewDefinition,\n        (viewComponentDefinition) =>\n          viewComponentDefinition.type === RxViewComponentType.Action &&\n          viewComponentDefinition.propertiesByName.name === 'rxCloseViewAction' &&\n          viewComponentDefinition.propertiesByName.actAsCancel === 'true'\n      )\n    );\n  }\n\n  private hasPageComponent(viewDefinition: IViewDefinition): boolean {\n    return head(viewDefinition.componentDefinitions)?.type === RxViewComponentType.Page;\n  }\n}\n","import { ErrorHandler, Injectable } from '@angular/core';\nimport { castArray, isString } from 'lodash';\nimport { from } from 'rxjs';\nimport { map, mergeScan, take } from 'rxjs/operators';\nimport { RxGlobalEventsService, RxLogService } from '@helix/platform/shared/api';\nimport { RxViewActionService } from '@helix/platform/view/api';\nimport { IViewComponentActionConfig } from './view-component-action-config.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewComponentEventManager {\n  constructor(\n    private rxGlobalEventsService: RxGlobalEventsService,\n    private rxLogService: RxLogService,\n    private rxViewActionService: RxViewActionService,\n    private errorHandler: ErrorHandler\n  ) {}\n\n  executeActions(\n    actions: IViewComponentActionConfig[],\n    actionCallback: (action: IViewComponentActionConfig, result: any) => any\n  ): Promise<void> {\n    return new Promise((resolve, reject) => {\n      let resultValue: any;\n\n      from(actions)\n        .pipe(\n          mergeScan(\n            (acc, currentAction) => {\n              this.rxLogService.debug('ACTION STARTED: ' + currentAction.name);\n\n              return this.rxViewActionService.execute(currentAction.name, currentAction.parameters).pipe(\n                map((result) => actionCallback(currentAction, result)),\n                take(1)\n              );\n            },\n            null,\n            1\n          )\n        )\n        .subscribe({\n          next: (result) => (resultValue = result),\n          error: (error) => {\n            reject(error);\n\n            this.rxGlobalEventsService.viewActionsCompleted$.next();\n\n            castArray(error).forEach((e) => {\n              if (isString(e)) {\n                this.rxLogService.warning(e);\n              } else if (e) {\n                this.errorHandler.handleError(e);\n              }\n            });\n          },\n          complete: () => {\n            this.rxGlobalEventsService.viewActionsCompleted$.next();\n            resolve(resultValue);\n          }\n        });\n    });\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  RxBundleService,\n  RxCurrentUserService,\n  RxGlobalCacheService,\n  RxLogService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport { RxUtilityModalsService } from '@helix/platform/ui-kit';\nimport { RxJsonParserService, RxObjectUtilsService } from '@helix/platform/utils';\nimport {\n  IComponentPropertyDescriptor,\n  IContainerViewComponentDefinition,\n  IExpressionEvaluator,\n  IRuntimeComponentApiCallResult,\n  IViewActionParamDescriptor,\n  IViewComponentDefinition,\n  IViewComponentDefinitionWithParent,\n  IViewComponentDescriptor,\n  IViewDefinition,\n  IViewInputParams,\n  IViewPresetsByViewComponentGuid,\n  RxExpressionEvaluatorService,\n  RxViewActionRegistryService,\n  RxViewComponentRegistryService,\n  RxViewComponentType,\n  RxViewDefinitionCacheService,\n  RxViewDefinitionParserService,\n  RxViewDefinitionService,\n  ViewComponentPropertyType\n} from '@helix/platform/view/api';\nimport {\n  every,\n  find,\n  forEach,\n  forIn,\n  forOwn,\n  get,\n  groupBy,\n  has,\n  includes,\n  intersection,\n  isEmpty,\n  isFunction,\n  isNil,\n  isObject,\n  isString,\n  keys,\n  map as _map,\n  set,\n  some,\n  sortBy,\n  toNumber\n} from 'lodash';\nimport {\n  asyncScheduler,\n  BehaviorSubject,\n  combineLatest,\n  EMPTY,\n  from,\n  merge,\n  Observable,\n  of,\n  ReplaySubject,\n  Subject,\n  throwError\n} from 'rxjs';\nimport {\n  catchError,\n  defaultIfEmpty,\n  distinct,\n  filter,\n  map,\n  reduce,\n  switchMap,\n  switchMapTo,\n  take,\n  tap\n} from 'rxjs/operators';\nimport { ComponentExpression } from './component/component-expression.class';\nimport { ViewComponentEventManager } from './event-manager/view-component-event-manager.class';\nimport { VIEW_COMPONENT_DEFAULT_EVENT_NAME } from './event-manager/view-component-event-manager.constant';\nimport { IExpressionContext } from './interfaces/expression-context.interface';\nimport { IRuntimeViewApi } from './interfaces/runtime-view-api.interface';\nimport { IViewComponentActionState } from './interfaces/runtime-view-component-action-state.interface';\nimport { IViewComponentState } from './interfaces/runtime-view-component-state.interface';\nimport { IRuntimeViewConfiguration } from './interfaces/runtime-view-configuration.interface';\nimport { IRuntimeViewOutputParameter } from './interfaces/runtime-view-output-parameter.interface';\nimport { IViewComponentPropertyChanged } from './interfaces/view-component-property-changed.interface';\nimport { IViewComponentRuntimeState } from './interfaces/view-component-runtime-state.interface';\nimport { RxRuntimeViewUtilsService } from './runtime-view-utils.service';\nimport { RxViewDefinitionAdapterService } from './view-definition-adapter.service';\n\n@Injectable()\nexport class RuntimeViewModel {\n  // public api which available for runtime view client\n  api: IRuntimeViewApi = {\n    save: this.save.bind(this),\n    close: this.close.bind(this),\n    cancel: this.cancel.bind(this),\n    refresh: this.refresh.bind(this),\n    canClose: this.canClose.bind(this),\n    applyViewPreset: this.applyViewPreset.bind(this),\n    deleteViewPreset: this.deleteViewPreset.bind(this),\n    discardViewPresetChanges: this.discardViewPresetChanges.bind(this),\n    saveViewPreset: this.saveViewPreset.bind(this)\n  };\n\n  private saveSubject: Subject<void> = new Subject();\n  private closeSubject: Subject<IRuntimeViewOutputParameter> = new Subject();\n  private cancelSubject: Subject<void> = new Subject();\n\n  save$: Observable<void> = this.saveSubject.asObservable();\n  close$: Observable<IRuntimeViewOutputParameter> = this.closeSubject.asObservable();\n  cancel$: Observable<void> = this.cancelSubject.asObservable();\n\n  viewDefinition: IViewDefinition;\n\n  isUserInteractionDetected: boolean;\n\n  private dependentOnViewIsValidPropViewComponentGuids: string[];\n\n  viewComponentStates: Map<string, IViewComponentState> = new Map();\n\n  private configuration: IRuntimeViewConfiguration;\n\n  // store all components state, needed for component expression re-evaluation\n  private evaluationData: IExpressionContext = {\n    view: {\n      api: this.api,\n      components: {},\n      inputParams: {},\n      isValid: false\n    },\n    keywords: {\n      user: this.rxCurrentUserService.getName(),\n      newLine: '\\n'\n    }\n  };\n\n  constructor(\n    private rxBundleService: RxBundleService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private rxViewDefinitionAdapterService: RxViewDefinitionAdapterService,\n    private rxViewDefinitionParserService: RxViewDefinitionParserService,\n    private rxViewDefinitionService: RxViewDefinitionService,\n    private rxRuntimeViewUtilsService: RxRuntimeViewUtilsService,\n    private rxExpressionEvaluatorService: RxExpressionEvaluatorService,\n    private rxNotificationService: RxNotificationService,\n    private rxViewActionRegistryService: RxViewActionRegistryService,\n    private rxLogService: RxLogService,\n    private viewComponentEventManager: ViewComponentEventManager,\n    private rxUtilityModalsService: RxUtilityModalsService,\n    private rxViewDefinitionCacheService: RxViewDefinitionCacheService,\n    private rxObjectUtilsService: RxObjectUtilsService,\n    private rxJsonParserService: RxJsonParserService,\n    private rxCurrentUserService: RxCurrentUserService\n  ) {}\n\n  init(configuration: IRuntimeViewConfiguration): Observable<never> {\n    this.configuration = configuration;\n\n    this.clear();\n\n    const viewDefinition$: Observable<IViewDefinition> = isString(configuration.viewDefinitionName)\n      ? this.rxViewDefinitionCacheService.getViewDefinition(configuration.viewDefinitionName)\n      : of(configuration.viewDefinitionName);\n\n    return viewDefinition$.pipe(\n      switchMap((viewDefinition) => {\n        const viewComponents = this.rxViewDefinitionParserService.getComponents(viewDefinition, true);\n\n        const ownerBundleIds: Observable<string>[] = viewComponents.map(\n          (viewComponent: IViewComponentDefinitionWithParent) =>\n            viewComponent.componentDefinition.type === RxViewComponentType.Action\n              ? this.rxViewActionRegistryService.getActionOwnerBundleId(\n                  viewComponent.componentDefinition.propertiesByName.name\n                )\n              : this.rxViewComponentRegistryService.getComponentOwnerBundleId(viewComponent.componentDefinition.type)\n        );\n\n        return merge(...ownerBundleIds).pipe(\n          filter(Boolean),\n          distinct(),\n          reduce((acc, bundleId) => {\n            acc.push(bundleId);\n\n            return acc;\n          }, []),\n          switchMap((bundleIds) =>\n            bundleIds.length\n              ? this.rxBundleService.loadBundles(bundleIds, true).pipe(map(() => viewDefinition))\n              : of(viewDefinition)\n          ),\n          switchMap((viewDefinition: IViewDefinition) =>\n            this.rxViewComponentRegistryService.resolveAsyncDescriptors().pipe(map(() => viewDefinition))\n          )\n        );\n      }),\n      switchMap((viewDefinition: IViewDefinition) => this.processViewDefinition(viewDefinition))\n    );\n  }\n\n  clear(): void {\n    this.viewComponentStates.clear();\n\n    this.evaluationData.view.components = {};\n    this.evaluationData.view.inputParams = {};\n  }\n\n  save(closeViewAfterSave: boolean = false): Observable<never> {\n    return this.callRuntimeComponentsApi('save', closeViewAfterSave).pipe(\n      tap({\n        complete: () => this.saveSubject.next()\n      })\n    );\n  }\n\n  close(): Observable<IRuntimeViewOutputParameter> {\n    const viewOutputParams = this.evaluateViewOutputParams();\n\n    this.closeSubject.next(viewOutputParams);\n\n    return of(viewOutputParams);\n  }\n\n  cancel(skipDirtyCheck?: boolean): Observable<never> {\n    if (skipDirtyCheck) {\n      this.cancelSubject.next();\n\n      return EMPTY;\n    } else {\n      return this.isDirtyView().pipe(\n        switchMap((isDirty) => (isDirty ? this.rxUtilityModalsService.confirmUnsavedChanges() : of(true))),\n        tap((canClose) => {\n          if (canClose) {\n            this.cancelSubject.next();\n          }\n        }),\n        switchMap((canClose) => {\n          return canClose ? EMPTY : throwError(null);\n        })\n      );\n    }\n  }\n\n  refresh(): Observable<never> {\n    return this.callRuntimeComponentsApi('refresh');\n  }\n\n  canClose(): boolean {\n    let canClose = true;\n\n    this.isDirtyView().subscribe((isDirty) => (canClose = !isDirty));\n\n    return canClose;\n  }\n\n  applyViewPreset(\n    viewPresetSelectorGuid: string,\n    viewPresetGuid: string,\n    sharedViewPresets: IViewPresetsByViewComponentGuid\n  ): Observable<never> {\n    return this.callRuntimeComponentsApi(\n      'applyViewPreset',\n      viewPresetSelectorGuid,\n      viewPresetGuid,\n      sharedViewPresets\n    ).pipe(switchMap(() => EMPTY));\n  }\n\n  deleteViewPreset(viewPresetGuid: string): Observable<never> {\n    return this.callRuntimeComponentsApi('deleteViewPreset', viewPresetGuid).pipe(switchMap(() => EMPTY));\n  }\n\n  discardViewPresetChanges(\n    viewPresetGuid: string,\n    sharedViewPresets: IViewPresetsByViewComponentGuid\n  ): Observable<never> {\n    return this.callRuntimeComponentsApi('discardViewPresetChanges', viewPresetGuid, sharedViewPresets).pipe(\n      switchMap(() => EMPTY)\n    );\n  }\n\n  saveViewPreset(viewPresetGuid: string): Observable<never> {\n    return this.callRuntimeComponentsApi('saveViewPreset', viewPresetGuid).pipe(switchMap(() => EMPTY));\n  }\n\n  shareViewPreset(viewPresetSelectorGuid: string): Observable<IViewPresetsByViewComponentGuid> {\n    return this.callRuntimeComponentsApi<IRuntimeComponentApiCallResult[]>(\n      'shareViewPreset',\n      viewPresetSelectorGuid\n    ).pipe(\n      defaultIfEmpty([]),\n      map((data: IRuntimeComponentApiCallResult[]) =>\n        data\n          .filter((item) => Boolean(item?.data))\n          .reduce((result, item) => {\n            result[item.guid] = item.data;\n            return result;\n          }, {})\n      )\n    );\n  }\n\n  // launch view component actions for particular event\n  triggerViewActions(componentGuid: string, viewActionTriggerEventName: string): Promise<void> {\n    let actionsResult = Promise.resolve();\n\n    const viewComponentState = this.viewComponentStates.get(componentGuid);\n\n    if (viewComponentState) {\n      const eventState = viewComponentState.eventStates[viewActionTriggerEventName];\n\n      if (eventState) {\n        const actionStates = eventState.map((actionState) => ({\n          guid: actionState.guid,\n          name: actionState.name,\n          parameters: actionState.config\n        }));\n\n        // execute view component actions for particular event\n        actionsResult = this.viewComponentEventManager.executeActions(actionStates, (actionState, result) => {\n          // hook which is called after each action execution\n          // update action shared state and re-evaluate dependent action view component\n          this.onViewComponentActionOutputChanged(componentGuid, actionState.guid, result);\n        });\n      } else {\n        this.rxLogService.warning(\n          `Cannot trigger view actions. View Action Trigger Event ${viewActionTriggerEventName} not found.`\n        );\n      }\n    } else {\n      this.rxLogService.warning(`Cannot trigger view actions. View Component ${componentGuid} not found.`);\n    }\n\n    return actionsResult;\n  }\n\n  // hook which is called when view component triggers \"property changed\" event\n  onViewComponentPropertyChanged({ guid, propertyName, newValue }: IViewComponentPropertyChanged): void {\n    const viewComponentState = this.viewComponentStates.get(guid);\n\n    viewComponentState.publicState[propertyName] = newValue;\n\n    this.updateEvaluationData(viewComponentState);\n\n    // update config if changed property exist in component properties descriptor\n    if (propertyName !== 'api' && some(viewComponentState.componentDescriptor.properties, { name: propertyName })) {\n      this.updateComponentConfigProperty(propertyName, newValue, viewComponentState);\n      this.updateViewComponentConfig(viewComponentState);\n    }\n\n    const dependentViewComponentGuids = viewComponentState.dependentViewComponentsMap.get(propertyName);\n    let dependentViewComponentStates: IViewComponentState[];\n\n    // find all view components which depend on changed view component based on expressions\n    if (dependentViewComponentGuids) {\n      // restore dependent components from the cache\n      dependentViewComponentStates = dependentViewComponentGuids.map((viewComponentGuid) =>\n        this.viewComponentStates.get(viewComponentGuid)\n      );\n    } else {\n      dependentViewComponentStates = this.getDependentViewComponentStates((expression) =>\n        expression.hasDependency(guid, propertyName)\n      );\n\n      // cache dependent view component guids\n      viewComponentState.dependentViewComponentsMap.set(\n        propertyName,\n        dependentViewComponentStates.map((state) => state.guid)\n      );\n    }\n\n    // evaluate expressions for all dependent view components\n    dependentViewComponentStates.forEach((dependentViewComponentState) => {\n      this.evaluateDependentProperties(dependentViewComponentState, guid, propertyName);\n    });\n\n    // update config$ for all dependent view components\n    dependentViewComponentStates\n      .map((dependentViewComponentState) => {\n        // if dependentViewComponentState is data view component\n        // config$ should be updated for nearest parent view component with UI representation\n        // i.e. if rx-record-grid-column is dependent component then rx-record-grid config$ should be update\n        if (dependentViewComponentState.isDataViewComponent) {\n          return this.getParentViewComponent(dependentViewComponentState);\n        } else {\n          return dependentViewComponentState;\n        }\n      })\n      .forEach((dependentViewComponentState) => {\n        this.updateViewComponentConfig(dependentViewComponentState);\n      });\n\n    if (propertyName === 'isValid') {\n      this.triggerViewValidation(newValue);\n    }\n  }\n\n  // ts guard - defines whether componentDescriptor is data view component\n  isDataViewComponentDefinition(componentDescriptor: IViewComponentDescriptor): boolean {\n    return componentDescriptor.configPropertyName !== undefined;\n  }\n\n  getViewInputParameters(): IViewInputParams {\n    return this.configuration.inputParams;\n  }\n\n  private isDirtyView(): Observable<boolean> {\n    // Used a separate observable to handle scenario when callRuntimeComponentsApi observable\n    // will be immediately completed. It can happen when no view components will have 'isDirty' API.\n    const isDirtySubject = new ReplaySubject<boolean>(1);\n    let isDirtyView = false;\n\n    if (this.isUserInteractionDetected) {\n      this.callRuntimeComponentsApi<IRuntimeComponentApiCallResult<boolean>[]>('isDirty')\n        .pipe(tap((result) => (isDirtyView = result.some(({ data }) => data))))\n        .subscribe({\n          complete: () => isDirtySubject.next(isDirtyView)\n        });\n    } else {\n      isDirtySubject.next(isDirtyView);\n    }\n\n    return isDirtySubject.asObservable().pipe(take(1));\n  }\n\n  private triggerViewValidation(isValid): void {\n    if (isValid) {\n      isValid = Array.from(this.viewComponentStates.values())\n        .filter((viewComponent) => has(viewComponent.publicState, 'isValid'))\n        .every((viewComponent) => viewComponent.publicState.isValid);\n    }\n\n    if (this.evaluationData.view.isValid !== isValid) {\n      this.evaluationData.view.isValid = isValid;\n\n      let dependentViewComponentStates;\n\n      if (this.dependentOnViewIsValidPropViewComponentGuids) {\n        dependentViewComponentStates = this.dependentOnViewIsValidPropViewComponentGuids.map((guid) =>\n          this.viewComponentStates.get(guid)\n        );\n      } else {\n        dependentViewComponentStates = this.getDependentViewComponentStates((expression) =>\n          expression.hasViewIsValidToken()\n        );\n\n        this.dependentOnViewIsValidPropViewComponentGuids = dependentViewComponentStates.map((state) => state.guid);\n      }\n\n      dependentViewComponentStates.forEach((viewComponentState) => {\n        this.evaluateComponentExpressions(viewComponentState, (expression) => expression.hasViewIsValidToken());\n      });\n\n      // update view component configs in next javascript event loop, to avoid\n      // 'ExpressionChangedAfterItHasBeenCheckedError' error in components,\n      // dependent on the view isValid property e.g Action button disabled property\n      asyncScheduler.schedule(() => {\n        dependentViewComponentStates.forEach(this.updateViewComponentConfig.bind(this));\n      });\n    }\n  }\n\n  // return nearest parent view component with UI representation\n  private getParentViewComponent(viewComponentState: IViewComponentState): IViewComponentState {\n    let currentViewComponentState = viewComponentState;\n\n    while (currentViewComponentState.isDataViewComponent) {\n      currentViewComponentState = this.viewComponentStates.get(currentViewComponentState.parentViewComponentGuid);\n    }\n\n    return currentViewComponentState;\n  }\n\n  // return all view components which depend on particular expression\n  private getDependentViewComponentStates(\n    expressionFilterFn: (componentExpression: ComponentExpression) => boolean\n  ): IViewComponentState[] {\n    return Array.from(this.viewComponentStates.values()).filter((viewComponentState) => {\n      const isDependentComponentState = some(viewComponentState.expressions, expressionFilterFn);\n\n      const isDependentEventState = some(viewComponentState.eventStates, (eventState) =>\n        some(eventState, (event) => some(event.expressions, expressionFilterFn))\n      );\n\n      return isDependentComponentState || isDependentEventState;\n    });\n  }\n\n  // pass new view component config to the @Component\n  private updateViewComponentConfig(viewComponentState: IViewComponentState): void {\n    // finally update config\n    viewComponentState.config$.next(this.buildComponentConfig(viewComponentState));\n  }\n\n  // build view component config based on configState and child data view component\n  private buildComponentConfig(viewComponentState: IViewComponentState): IViewComponentRuntimeState {\n    const viewComponentConfigState = {\n      ...viewComponentState.configState\n    };\n\n    // build child data component states\n    this.buildComponentChildDataConfig(viewComponentState, viewComponentConfigState);\n\n    return viewComponentConfigState;\n  }\n\n  // recursively build view component config based on data view components\n  private buildComponentChildDataConfig(\n    viewComponentState: IViewComponentState,\n    viewComponentChildConfig: object = {}\n  ): void {\n    // find all child data view components\n    const dataViewComponentChildStates = viewComponentState.childViewComponentGuids\n      .map((viewComponentGuid) => this.viewComponentStates.get(viewComponentGuid))\n      .filter((currentViewComponentState) => Boolean(currentViewComponentState))\n      .filter((currentViewComponentState) => currentViewComponentState.isDataViewComponent);\n\n    // group data view components on config property name\n    const dataViewComponentChildStateGroups = groupBy<IViewComponentState>(\n      dataViewComponentChildStates,\n      (dataViewComponentState) => dataViewComponentState.configPropertyName\n    );\n\n    // store each data view component config under corresponding config property name\n    Object.keys(dataViewComponentChildStateGroups).forEach((configPropertyName) => {\n      viewComponentChildConfig[configPropertyName] = dataViewComponentChildStateGroups[configPropertyName].map(\n        (dataViewComponentStateChild) => {\n          const dataViewComponentChildState = {\n            ...dataViewComponentStateChild.configState\n          };\n\n          // recursively build data view component config\n          this.buildComponentChildDataConfig(dataViewComponentStateChild, dataViewComponentChildState);\n\n          return dataViewComponentChildState;\n        }\n      );\n    });\n  }\n\n  // update action view component shared state\n  // re-evaluate all dependent action view components\n  private onViewComponentActionOutputChanged(componentGuid: string, actionGuid: string, viewActionOutput: any): void {\n    const viewComponentState = this.viewComponentStates.get(componentGuid);\n\n    if (viewComponentState) {\n      const actionState = viewComponentState.eventStates[VIEW_COMPONENT_DEFAULT_EVENT_NAME].find((currentAction) => {\n        return currentAction.guid === actionGuid;\n      });\n\n      actionState.publicState.output = viewActionOutput;\n\n      this.updateEvaluationData(viewComponentState);\n\n      this.evaluateDependentProperties(viewComponentState, actionGuid, 'output');\n    }\n  }\n\n  private evaluateViewOutputParams(): IRuntimeViewOutputParameter {\n    return this.viewDefinition.outputParams.reduce((result, outputParam) => {\n      result[outputParam.name] = this.rxExpressionEvaluatorService.tryEvaluate(outputParam.source, this.evaluationData);\n\n      return result;\n    }, {});\n  }\n\n  private processViewDefinition(viewDefinition: IViewDefinition): Observable<never> {\n    this.viewDefinition = this.rxObjectUtilsService.cloneDeep(viewDefinition);\n\n    this.rxViewDefinitionAdapterService.preProcessViewDefinition(this.viewDefinition);\n\n    const adapters$ = this.rxRuntimeViewUtilsService.runAdaptersForComponents(this.viewDefinition);\n\n    return combineLatest(adapters$).pipe(\n      switchMapTo(EMPTY),\n      tap({\n        complete: () => {\n          this.rxViewDefinitionAdapterService.postProcessViewDefinition(this.viewDefinition);\n\n          this.rxViewDefinitionParserService\n            .getComponents(this.viewDefinition)\n            .forEach(this.processComponentDefinition.bind(this));\n\n          // evaluate expressions with keyword tokens\n          this.viewComponentStates.forEach((viewComponent) => {\n            this.evaluateComponentExpressions(viewComponent, (componentExpression) =>\n              componentExpression.hasKeywordTokens()\n            );\n          });\n\n          // evaluate expressions without tokens\n          this.viewComponentStates.forEach((viewComponent) => {\n            this.evaluateComponentExpressions(viewComponent, (componentExpression) => !componentExpression.hasTokens());\n          });\n\n          // evaluate expressions with view tokens\n          this.viewComponentStates.forEach((viewComponent) => {\n            this.evaluateComponentExpressions(viewComponent, (componentExpression) =>\n              componentExpression.hasViewTokens()\n            );\n          });\n\n          // evaluate expressions with component tokens\n          this.viewComponentStates.forEach((viewComponent) => {\n            this.evaluateComponentExpressions(viewComponent, (componentExpression) =>\n              componentExpression.hasComponentTokens()\n            );\n          });\n\n          // update all component configs\n          this.viewComponentStates.forEach((viewComponentState) => {\n            this.updateViewComponentConfig(viewComponentState);\n          });\n        }\n      })\n    );\n  }\n\n  private processComponentDefinition(componentDefinitionItem: IViewComponentDefinitionWithParent): void {\n    if (!componentDefinitionItem.parentComponentDefinition) {\n      // process root component definition\n      const configuredParamNames = _map(\n        ((<any>componentDefinitionItem.componentDefinition) as IViewDefinition).inputParams,\n        'name'\n      );\n\n      const passedParamNames = keys(this.configuration.inputParams);\n\n      const onlyPositionalParams =\n        passedParamNames.length > 0 && every(passedParamNames, (inputParamName) => /^\\$[0-9]+\\$$/.test(inputParamName));\n\n      if (onlyPositionalParams && intersection(configuredParamNames, passedParamNames).length === 0) {\n        forEach(passedParamNames, (inputParamName) => {\n          const paramIndex = Number(inputParamName.match(/^\\$([0-9]+)\\$$/)[1]);\n\n          const definitionParamName = get(\n            componentDefinitionItem.componentDefinition,\n            `inputParams[${paramIndex}].name`\n          );\n\n          this.evaluationData.view.inputParams[definitionParamName] = this.configuration.inputParams[inputParamName];\n        });\n      } else {\n        forEach(configuredParamNames, (inputParamName) => {\n          this.evaluationData.view.inputParams[inputParamName] = this.configuration.inputParams[inputParamName];\n        });\n      }\n    } else {\n      const componentDefinition = componentDefinitionItem.componentDefinition;\n\n      const viewComponentState = this.buildViewComponentState(componentDefinitionItem);\n\n      if (viewComponentState) {\n        this.viewComponentStates.set(componentDefinition.guid, viewComponentState);\n      }\n    }\n  }\n\n  // generate view component state based on component definition\n  private buildViewComponentState(componentDefinitionItem: IViewComponentDefinitionWithParent): IViewComponentState {\n    const componentDefinition = componentDefinitionItem.componentDefinition;\n    const componentDescriptor = this.rxViewComponentRegistryService.get(componentDefinition.type);\n\n    if (componentDescriptor) {\n      const viewComponentState: IViewComponentState = {\n        guid: componentDefinition.guid,\n        type: componentDefinition.type,\n        config$: new BehaviorSubject<IViewComponentRuntimeState>({}),\n        expressions: [],\n        eventStates: {\n          [VIEW_COMPONENT_DEFAULT_EVENT_NAME]: []\n        },\n        configState: {},\n        publicState: {},\n        isDataViewComponent: false,\n        configPropertyName: null,\n        parentViewComponentGuid: componentDefinitionItem.parentComponentDefinition.guid,\n        childViewComponentGuids: [],\n        dependentViewComponentsMap: new Map<string, string[]>(),\n        componentDescriptor\n      };\n\n      if (this.isDataViewComponentDefinition(componentDescriptor)) {\n        viewComponentState.isDataViewComponent = true;\n        viewComponentState.configPropertyName = componentDescriptor.configPropertyName;\n      }\n\n      forOwn(componentDefinition.propertiesByName, (propertyValue, propertyName) => {\n        const viewComponentPropertyDescriptor = find(\n          componentDescriptor.properties,\n          (descriptor) => propertyName === descriptor.name\n        );\n\n        const isExpressionEvaluationEnabled =\n          viewComponentPropertyDescriptor && viewComponentPropertyDescriptor.enableExpressionEvaluation;\n\n        // initialize view component expressions\n        if (isExpressionEvaluationEnabled) {\n          // create expression for property\n          viewComponentState.expressions.push(\n            new ComponentExpression(\n              propertyName,\n              propertyValue,\n              this.rxExpressionEvaluatorService,\n              viewComponentPropertyDescriptor.evaluatorService\n            )\n          );\n        }\n\n        // update view component config state object\n        this.updateComponentConfigProperty(\n          propertyName,\n          isExpressionEvaluationEnabled ? null : propertyValue,\n          viewComponentState\n        );\n      });\n\n      // add initial view component state to evaluationData\n      this.updateEvaluationData(viewComponentState);\n\n      if (this.isContainerComponentDefinition(componentDefinition)) {\n        // set up view component events\n        componentDefinition.componentDefinitions\n          .filter((currentComponentDefinition) => currentComponentDefinition.type === RxViewComponentType.Action)\n          .forEach((actionComponentDefinition) => {\n            const actionState = this.buildViewComponentActionState(actionComponentDefinition);\n\n            if (actionState) {\n              viewComponentState.eventStates[VIEW_COMPONENT_DEFAULT_EVENT_NAME].push(actionState);\n            }\n          });\n\n        // sort actions in correct order\n        viewComponentState.eventStates[VIEW_COMPONENT_DEFAULT_EVENT_NAME] = sortBy(\n          viewComponentState.eventStates[VIEW_COMPONENT_DEFAULT_EVENT_NAME],\n          'index'\n        );\n\n        // set up child view component guids\n        viewComponentState.childViewComponentGuids = componentDefinition.componentDefinitions\n          .filter((currentComponentDefinition) => currentComponentDefinition.type !== RxViewComponentType.Action)\n          .map((currentComponentDefinition) => currentComponentDefinition.guid);\n      }\n\n      return viewComponentState;\n    } else if (componentDefinition.type !== RxViewComponentType.Action) {\n      this.rxLogService.warning(\n        `Cannot initialize view component. View Component Descriptor for ${componentDefinition.type} not found.`\n      );\n    }\n  }\n\n  // generate action view component state\n  private buildViewComponentActionState(\n    actionComponentDefinition: IViewComponentDefinition\n  ): IViewComponentActionState {\n    const actionDescriptor = this.rxViewActionRegistryService.get(actionComponentDefinition.propertiesByName.name);\n\n    if (actionDescriptor) {\n      const actionState: IViewComponentActionState = {\n        guid: actionComponentDefinition.guid,\n        name: actionComponentDefinition.propertiesByName.name,\n        index: toNumber(actionComponentDefinition.propertiesByName.index) || 0,\n        config: {},\n        publicState: {},\n        expressions: []\n      };\n\n      Object.keys(actionComponentDefinition.propertiesByName || {})\n        .filter((parameterName) => parameterName !== 'name')\n        .map((parameterName) => {\n          const actionPropertyDescriptor = (actionDescriptor.parameters || []).find(\n            (descriptor) => parameterName === descriptor.name\n          );\n\n          const isExpressionEvaluationEnabled =\n            actionPropertyDescriptor && actionPropertyDescriptor.enableExpressionEvaluation;\n\n          // initialize action view component expressions\n          if (isExpressionEvaluationEnabled) {\n            // create expression for property\n            this.initializeActionExpressionForProperty(\n              actionState,\n              actionPropertyDescriptor.evaluatorService,\n              parameterName,\n              actionComponentDefinition.propertiesByName[parameterName]\n            );\n          }\n\n          // add initial action view component state to evaluationData\n          this.updateActionConfigProperty(\n            parameterName,\n            isExpressionEvaluationEnabled ? null : actionComponentDefinition.propertiesByName[parameterName],\n            actionState\n          );\n        });\n\n      return actionState;\n    }\n  }\n\n  private initializeActionExpressionForProperty(\n    actionState: IViewComponentActionState,\n    evaluatorService: IExpressionEvaluator,\n    propertyName: string,\n    propertyValue: any\n  ): void {\n    if (isObject(propertyValue)) {\n      forIn(propertyValue, (value, name) => {\n        this.initializeActionExpressionForProperty(actionState, evaluatorService, `${propertyName}.${name}`, value);\n      });\n    } else {\n      actionState.expressions.push(\n        new ComponentExpression(propertyName, propertyValue, this.rxExpressionEvaluatorService, evaluatorService)\n      );\n    }\n  }\n\n  private callRuntimeComponentsApi<T = never>(methodName: string, ...args): Observable<T> {\n    const resultSubject = new ReplaySubject<T>(1);\n    const errors: Array<Error | HttpErrorResponse | string> = [];\n\n    const apiCallResults = Array.from(this.viewComponentStates.values())\n      .filter((viewComponent) =>\n        Boolean(viewComponent.publicState.api && isFunction(viewComponent.publicState.api[methodName]))\n      )\n      .map((viewComponent) => {\n        let result = viewComponent.publicState.api[methodName].apply(null, args);\n\n        if (result && result.then) {\n          result = from(result);\n        } else if (!(result instanceof Observable)) {\n          result = of(result);\n        }\n\n        return result.pipe(\n          take(1),\n          map((res) => ({\n            guid: viewComponent.guid,\n            data: res\n          })),\n          tap({\n            error: (error) => errors.push(error)\n          }),\n          // catch errors from each view component api call to allow to successfully finish other api calls.\n          catchError(() => EMPTY)\n        );\n      });\n\n    combineLatest<T>(apiCallResults).subscribe({\n      next: (results) => resultSubject.next(results),\n      complete: () => (isEmpty(errors) ? resultSubject.complete() : resultSubject.error(errors))\n    });\n\n    return resultSubject.asObservable();\n  }\n\n  private evaluateComponentExpressions(\n    viewComponent: IViewComponentState,\n    expressionFilterFunc: (componentEx: ComponentExpression) => boolean\n  ): void {\n    // update component expressions\n    viewComponent.expressions.filter(expressionFilterFunc).forEach((componentExpression) => {\n      this.updateComponentConfigProperty(\n        componentExpression.propertyName,\n        this.evaluateExpression(componentExpression),\n        viewComponent\n      );\n    });\n\n    this.updateEvaluationData(viewComponent);\n\n    // update event expressions\n    Object.keys(viewComponent.eventStates).forEach((eventName) => {\n      viewComponent.eventStates[eventName].forEach((actionState) => {\n        actionState.expressions.filter(expressionFilterFunc).forEach((componentExpression) => {\n          this.updateActionConfigProperty(\n            componentExpression.propertyName,\n            this.evaluateExpression(componentExpression),\n            actionState\n          );\n\n          this.updateEvaluationData(viewComponent);\n        });\n      });\n    });\n  }\n\n  private evaluateDependentProperties(viewComponent: IViewComponentState, guid: string, propertyName: string): void {\n    this.evaluateComponentExpressions(viewComponent, (componentExpression) =>\n      componentExpression.hasDependency(guid, propertyName)\n    );\n  }\n\n  private evaluateExpression(componentExpression: ComponentExpression): any {\n    let evaluatedValue;\n\n    try {\n      evaluatedValue = componentExpression.evaluate(this.evaluationData);\n    } catch (e) {\n      evaluatedValue = null;\n\n      this.rxNotificationService.addErrorMessage(e.message, '');\n    }\n\n    return evaluatedValue;\n  }\n\n  // update view component config property based on property descriptor\n  private updateComponentConfigProperty(\n    propertyName: string,\n    propertyValue: any,\n    viewComponent: IViewComponentState\n  ): void {\n    const viewComponentDescriptor = this.rxViewComponentRegistryService.get(viewComponent.type);\n    const viewComponentPropertyDescriptor: IComponentPropertyDescriptor = find(viewComponentDescriptor.properties, {\n      name: propertyName\n    });\n\n    viewComponent.configState[propertyName] = this.processPropertyValue(propertyValue, viewComponentPropertyDescriptor);\n  }\n\n  // update action view component config property based on property descriptor\n  private updateActionConfigProperty(\n    propertyName: string,\n    propertyValue: any,\n    actionComponent: IViewComponentActionState\n  ): void {\n    const viewActionDescriptor = this.rxViewActionRegistryService.get(actionComponent.name);\n\n    let viewActionParameterDescriptor: IViewActionParamDescriptor = find(viewActionDescriptor.parameters, {\n      name: propertyName\n    });\n\n    if (!viewActionParameterDescriptor && includes(propertyName, '.')) {\n      const primaryPropertyName = propertyName.split('.')[0];\n\n      viewActionParameterDescriptor = find(viewActionDescriptor.parameters, { name: primaryPropertyName });\n    }\n\n    set(actionComponent.config, propertyName, this.processPropertyValue(propertyValue, viewActionParameterDescriptor));\n  }\n\n  // sync component data with expression data\n  private updateEvaluationData(viewComponent: IViewComponentState): void {\n    // update component data\n    this.evaluationData.view.components[viewComponent.guid] = {\n      ...viewComponent.configState,\n      ...viewComponent.publicState\n    };\n\n    // update component actions data\n    Object.keys(viewComponent.eventStates).forEach((eventName) => {\n      viewComponent.eventStates[eventName].forEach((actionState) => {\n        this.evaluationData.view.components[actionState.guid] = actionState.publicState;\n      });\n    });\n  }\n\n  // cast property value to the type defined in the descriptor\n  private processPropertyValue(\n    propertyValue: any,\n    propertyDescriptor: IComponentPropertyDescriptor | IViewActionParamDescriptor\n  ): any {\n    if (propertyDescriptor && propertyDescriptor.type && !isNil(propertyValue)) {\n      // try to cast property value to type defined in component descriptor\n      if (propertyDescriptor.type === ViewComponentPropertyType.Boolean) {\n        if (includes(['0', 'false'], propertyValue)) {\n          propertyValue = false;\n        } else {\n          propertyValue = Boolean(propertyValue);\n        }\n      } else if (propertyDescriptor.type === ViewComponentPropertyType.Number) {\n        propertyValue = Number(propertyValue);\n\n        if (Number.isNaN(propertyValue)) {\n          propertyValue = null;\n        }\n      } else if (propertyDescriptor.type === ViewComponentPropertyType.String) {\n        propertyValue = String(propertyValue);\n      } else if (\n        [ViewComponentPropertyType.Array, ViewComponentPropertyType.Object].includes(propertyDescriptor.type)\n      ) {\n        propertyValue = this.rxJsonParserService.tryParseJson(propertyValue);\n      }\n    }\n\n    return propertyValue;\n  }\n\n  private isContainerComponentDefinition(\n    componentDefinition: IViewComponentDefinition | IContainerViewComponentDefinition\n  ): componentDefinition is IContainerViewComponentDefinition {\n    return (componentDefinition as IContainerViewComponentDefinition).componentDefinitions !== undefined;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { pull } from 'lodash';\nimport { RuntimeViewModel } from './runtime-view.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRuntimeViewRegistryService {\n  private activeRuntimeViews: RuntimeViewModel[] = [];\n\n  register(runtimeViewModel: RuntimeViewModel): void {\n    if (!this.activeRuntimeViews.includes(runtimeViewModel)) {\n      this.activeRuntimeViews.push(runtimeViewModel);\n    }\n  }\n\n  getAll(): RuntimeViewModel[] {\n    return this.activeRuntimeViews;\n  }\n\n  unregister(runtimeViewModel: RuntimeViewModel): void {\n    pull(this.activeRuntimeViews, runtimeViewModel);\n  }\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { RuntimeLayoutItem } from '../../../layout/runtime-layout-item.class';\nimport { RuntimeViewCanvasService } from './runtime-view-canvas.service';\nimport { ICanvasComponentPropertyChanged } from '../interfaces/canvas-component-property-changed.interface';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'rx-runtime-view-canvas',\n  templateUrl: './runtime-view-canvas.component.html',\n  providers: [RuntimeViewCanvasService]\n})\nexport class RuntimeViewCanvasComponent implements OnInit, OnDestroy {\n  @Input() layout: RuntimeLayoutItem;\n\n  @Output() componentPropertyChanged: EventEmitter<ICanvasComponentPropertyChanged> = new EventEmitter();\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  constructor(private runtimeViewCanvasService: RuntimeViewCanvasService) {}\n\n  ngOnInit(): void {\n    this.runtimeViewCanvasService.componentPropertyChanged$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((event: ICanvasComponentPropertyChanged) => {\n        this.componentPropertyChanged.emit(event);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","<rx-runtime-view-canvas-item class=\"root-item\" *ngIf=\"layout\" [layout]=\"layout\"></rx-runtime-view-canvas-item>\n","import {\n  Component,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { RxRecordDefinitionCacheService } from '@helix/platform/record/api';\n\nimport { IRuntimeViewConfiguration } from '../interfaces/runtime-view-configuration.interface';\nimport { IRuntimeViewOutputParameter } from '../interfaces/runtime-view-output-parameter.interface';\nimport { RuntimeViewLayoutService } from '../layout/runtime-view-layout.service';\nimport { RuntimeViewModelApi } from '../runtime-view-model-api.class';\nimport { RuntimeViewModel } from '../runtime-view.model';\nimport { RxRuntimeViewRegistryService } from '../runtime-view-registry.service';\nimport { RxViewDefinitionCacheService, RxViewDefinitionService } from '@helix/platform/view/api';\nimport { RxAssociationDefinitionCacheService } from '@helix/platform/association/api';\nimport { RxProcessDefinitionCacheService } from '@helix/platform/process/api';\n\n@Component({\n  selector: 'rx-runtime-view',\n  templateUrl: './runtime-view.component.html',\n  styleUrls: ['./runtime-view.component.scss'],\n  providers: [RuntimeViewModel, RuntimeViewModelApi, RuntimeViewLayoutService]\n})\nexport class RuntimeViewComponent implements OnInit, OnChanges, OnDestroy {\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  @Input() configuration: IRuntimeViewConfiguration;\n\n  @Output() save: EventEmitter<void> = new EventEmitter();\n  @Output() closeView: EventEmitter<IRuntimeViewOutputParameter> = new EventEmitter();\n  @Output() cancelView: EventEmitter<void> = new EventEmitter();\n  @Output() beforeLoad: EventEmitter<void> = new EventEmitter();\n  @Output() afterLoad: EventEmitter<void> = new EventEmitter();\n\n  @HostBinding('class') hostClass: string;\n  @HostBinding('attr.rx-view-definition-guid') viewDefinitionGuid: string;\n\n  @HostListener('focusin')\n  onTrigger() {\n    this.runtimeViewModel.isUserInteractionDetected = true;\n  }\n\n  constructor(\n    private runtimeViewModelApi: RuntimeViewModelApi,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    public runtimeViewLayoutService: RuntimeViewLayoutService,\n    public runtimeViewModel: RuntimeViewModel,\n    private rxProcessDefinitionCacheService: RxProcessDefinitionCacheService,\n    private rxRuntimeViewRegistryService: RxRuntimeViewRegistryService,\n    private rxViewDefinitionCacheService: RxViewDefinitionCacheService,\n    private rxAssociationDefinitionCacheService: RxAssociationDefinitionCacheService,\n    private rxViewDefinitionService: RxViewDefinitionService\n  ) {\n    this.rxAssociationDefinitionCacheService.registerConsumer(this.destroyed$);\n    this.rxProcessDefinitionCacheService.registerConsumer(this.destroyed$);\n    this.rxRecordDefinitionCacheService.registerConsumer(this.destroyed$);\n    this.rxViewDefinitionCacheService.registerConsumer(this.destroyed$);\n  }\n\n  ngOnInit() {\n    this.init();\n\n    this.runtimeViewModel.cancel$.pipe(takeUntil(this.destroyed$)).subscribe(() => this.cancelView.emit());\n    this.runtimeViewModel.save$.pipe(takeUntil(this.destroyed$)).subscribe(() => this.save.emit());\n\n    this.runtimeViewModel.close$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((viewOutputParams) => this.closeView.emit(viewOutputParams));\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes.configuration.currentValue &&\n      changes.configuration.previousValue &&\n      changes.configuration.currentValue.viewDefinitionName !== changes.configuration.previousValue.viewDefinitionName\n    ) {\n      this.runtimeViewModelApi.clear();\n      this.runtimeViewLayoutService.clear();\n\n      this.configuration = changes.configuration.currentValue;\n\n      this.init();\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n    this.rxRuntimeViewRegistryService.unregister(this.runtimeViewModel);\n  }\n\n  private init() {\n    this.beforeLoad.emit();\n\n    this.runtimeViewModel.init(this.configuration).subscribe({\n      complete: () => {\n        this.runtimeViewModelApi.init(this.runtimeViewModel);\n        this.runtimeViewLayoutService.init(this.runtimeViewModel, this.runtimeViewModelApi);\n        this.hostClass = this.runtimeViewModel.viewDefinition.styles || '';\n\n        if (this.rxViewDefinitionService.isPageView(this.runtimeViewModel.viewDefinition)) {\n          this.hostClass = this.hostClass + ' rx-page-view';\n        }\n\n        this.viewDefinitionGuid = this.runtimeViewModel.viewDefinition.guid;\n\n        this.runtimeViewModel.isUserInteractionDetected = false;\n\n        this.afterLoad.emit();\n      }\n    });\n\n    if (this.configuration.onRegisterApi) {\n      this.configuration.onRegisterApi(this.runtimeViewModel.api);\n    }\n\n    this.rxRuntimeViewRegistryService.register(this.runtimeViewModel);\n  }\n}\n","<rx-runtime-view-canvas\n  (componentPropertyChanged)=\"runtimeViewModel.onViewComponentPropertyChanged($event)\"\n  *ngIf=\"runtimeViewLayoutService.layout\"\n  [layout]=\"runtimeViewLayoutService.layout\"\n></rx-runtime-view-canvas>\n","import { Directive, EventEmitter, HostBinding, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { VIEW_COMPONENT_DEFAULT_EVENT_NAME } from '../../event-manager/view-component-event-manager.constant';\nimport { IViewComponentPropertyChanged } from '../../interfaces/view-component-property-changed.interface';\nimport { IViewComponent } from '../../interfaces/view-component.interface';\nimport { RuntimeViewModelApi } from '../../runtime-view-model-api.class';\nimport { pluck, takeUntil } from 'rxjs/operators';\nimport { IPlainObject } from '@helix/platform/shared/api';\n\n@Directive()\n// tslint:disable-next-line:directive-class-suffix\nexport abstract class BaseViewComponent implements IViewComponent, OnDestroy, OnInit {\n  @HostBinding('attr.rx-view-component-id')\n  guid: string;\n\n  @HostBinding('class')\n  customCssClasses = '';\n\n  @Output()\n  autoFill = new EventEmitter<boolean>();\n\n  @Output()\n  autoScroll = new EventEmitter<boolean>();\n\n  @Output()\n  hidden = new EventEmitter<boolean>();\n\n  @HostBinding('hidden')\n  get isHidden(): boolean {\n    return this.isComponentHidden;\n  }\n\n  set isHidden(value: boolean) {\n    this.hidden.emit(value);\n\n    this.isComponentHidden = Boolean(value);\n  }\n\n  private isComponentHidden = false;\n  protected destroyed$ = new ReplaySubject<boolean>(1);\n\n  config: Observable<IPlainObject>;\n  runtimeViewModelApi: RuntimeViewModelApi;\n  propertyChanged: EventEmitter<IViewComponentPropertyChanged> = new EventEmitter();\n\n  ngOnInit(): void {\n    this.config.pipe(pluck('styles'), takeUntil(this.destroyed$)).subscribe((styles: string) => {\n      this.customCssClasses = styles || '';\n\n      this.autoFill.emit(this.customCssClasses.includes('rx-auto-fill'));\n      this.autoScroll.emit(this.customCssClasses.includes('rx-auto-scroll'));\n    });\n  }\n\n  notifyPropertyChanged(propertyName: string, newValue: any, oldValue?: any): void {\n    this.propertyChanged.next({\n      guid: this.guid,\n      propertyName,\n      newValue,\n      oldValue\n    });\n  }\n\n  triggerViewActions(\n    guid: string = this.guid,\n    viewActionTriggerEventName: string = VIEW_COMPONENT_DEFAULT_EVENT_NAME\n  ): Promise<void> {\n    return this.runtimeViewModelApi.triggerViewActions(guid, viewActionTriggerEventName);\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n","import { Component, Input, OnInit, ViewChild, ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\nimport { RX_VIEW_DEFINITION } from '@helix/platform/view/api';\nimport { RuntimeViewCanvasItemService } from '../canvas-item/runtime-view-canvas-item.service';\nimport { RuntimeViewCanvasItemContainerComponent } from '../canvas-item-container/runtime-view-canvas-item-container.component';\n\n@Component({\n  selector: 'rx-runtime-view-canvas-outlet',\n  templateUrl: './runtime-view-canvas-outlet.component.html'\n})\nexport class RuntimeViewCanvasOutletComponent implements OnInit {\n  @Input() name = RX_VIEW_DEFINITION.defaultOutletName;\n  @ViewChild('container', { read: ViewContainerRef, static: true }) container: ViewContainerRef;\n\n  constructor(\n    private runtimeViewCanvasItemService: RuntimeViewCanvasItemService,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {}\n\n  ngOnInit() {\n    this.runtimeViewCanvasItemService.registerOutlet(\n      this.name,\n      this.container,\n      this.componentFactoryResolver.resolveComponentFactory(RuntimeViewCanvasItemContainerComponent)\n    );\n  }\n}\n","<ng-container #container></ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RuntimeViewCanvasComponent } from './component/runtime-view-canvas.component';\nimport { RuntimeViewCanvasItemContainerComponent } from './components/canvas-item-container/runtime-view-canvas-item-container.component';\nimport { RuntimeViewCanvasItemComponent } from './components/canvas-item/runtime-view-canvas-item.component';\nimport { RuntimeViewCanvasOutletComponent } from './components/canvas-outlet/runtime-view-canvas-outlet.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n\n  declarations: [\n    RuntimeViewCanvasComponent,\n    RuntimeViewCanvasItemComponent,\n    RuntimeViewCanvasItemContainerComponent,\n    RuntimeViewCanvasOutletComponent\n  ],\n\n  exports: [\n    RuntimeViewCanvasOutletComponent,\n    RuntimeViewCanvasComponent,\n    RuntimeViewCanvasItemComponent,\n    RuntimeViewCanvasItemContainerComponent\n  ],\n\n  entryComponents: [RuntimeViewCanvasItemContainerComponent]\n})\nexport class RuntimeViewCanvasModule {}\n","import { ChangeDetectorRef, Component, Optional } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NEVER, Subscription } from 'rxjs';\nimport { ActiveModalRef, DismissReasons, DockedPanelContext } from '@bmc-ux/adapt-angular';\n\nimport { RxUtilityModalsService } from '@helix/platform/ui-kit';\nimport { IRuntimeViewConfiguration } from '../../interfaces/runtime-view-configuration.interface';\nimport { IRuntimeViewOutputParameter } from '../../interfaces/runtime-view-output-parameter.interface';\nimport { RxRuntimeViewRegistryService } from '../../runtime-view-registry.service';\n\n@Component({\n  selector: 'rx-runtime-view-modal',\n  templateUrl: './runtime-view-modal.component.html',\n  styleUrls: ['./runtime-view-modal.component.scss']\n})\nexport class RuntimeViewModalComponent {\n  configuration: IRuntimeViewConfiguration;\n  context: ActiveModalRef | DockedPanelContext;\n  title: string;\n  notification: string;\n  isCancellable: boolean;\n  isBlade = false;\n  closeLabel: string;\n  busySubscription: Subscription;\n\n  constructor(\n    private rxRuntimeViewRegistryService: RxRuntimeViewRegistryService,\n    private rxUtilityModalsService: RxUtilityModalsService,\n    private translateService: TranslateService,\n    private changeDetector: ChangeDetectorRef,\n    @Optional() private activeModalRef?: ActiveModalRef,\n    @Optional() private dockedPanelContext?: DockedPanelContext\n  ) {\n    this.context = dockedPanelContext || activeModalRef;\n    this.isBlade = Boolean(dockedPanelContext);\n\n    const data = this.context.getData();\n\n    this.configuration = data.configuration;\n    this.title = data.title;\n    this.notification = data.notification;\n    this.isCancellable = data.isCancellable;\n\n    this.closeLabel = translateService.instant('com.bmc.arsys.rx.client.common.close.label');\n  }\n\n  onCancelView(): void {\n    this.context.dismiss(null);\n  }\n\n  closeModal(): void {\n    this.context.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  onClose(viewOutputParams: IRuntimeViewOutputParameter): void {\n    this.context.close(viewOutputParams);\n  }\n\n  onBeforeLoad(): void {\n    this.busySubscription = NEVER.subscribe();\n\n    // workaround: run changeDetector to avoid the ExpressionChangedAfterItHasBeenCheckedError\n    this.changeDetector.detectChanges();\n  }\n\n  onAfterLoad(): void {\n    this.busySubscription?.unsubscribe();\n  }\n}\n","<ng-container *ngIf=\"title || isCancellable\">\n  <div class=\"dp-header\" *ngIf=\"isBlade; else modalHeader\">\n    <span class=\"dp-title\">{{ title }}</span>\n    <button\n      class=\"close dp-close\"\n      rx-id=\"x-button\"\n      [attr.aria-label]=\"closeLabel\"\n      *ngIf=\"isCancellable\"\n      (click)=\"closeModal()\"\n    ></button>\n  </div>\n</ng-container>\n\n<ng-template #modalHeader>\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title\">{{ title }}</h5>\n    <button\n      class=\"close dp-close\"\n      rx-id=\"x-button\"\n      [attr.aria-label]=\"closeLabel\"\n      *ngIf=\"isCancellable\"\n      (click)=\"closeModal()\"\n    ></button>\n  </div>\n</ng-template>\n\n<adapt-alert\n  *ngIf=\"notification\"\n  class=\"pl-4 pt-4\"\n  [config]=\"{\n    content: notification,\n    type: 'inline',\n    variant: 'info'\n  }\"\n></adapt-alert>\n\n<div\n  [ngClass]=\"{\n    'modal-body p-0': !isBlade,\n    'dp-content': isBlade\n  }\"\n>\n  <div class=\"position-relative\">\n    <rx-busy-indicator\n      [options]=\"{\n        busy: busySubscription,\n        loaderType: 'lineLoader',\n        delay: 250,\n        backdrop: false,\n        message: null\n      }\"\n    >\n    </rx-busy-indicator>\n  </div>\n\n  <rx-runtime-view\n    [configuration]=\"configuration\"\n    (cancelView)=\"onCancelView()\"\n    (closeView)=\"onClose($event)\"\n    (beforeLoad)=\"onBeforeLoad()\"\n    (afterLoad)=\"onAfterLoad()\"\n  ></rx-runtime-view>\n</div>\n","export const RX_RUNTIME_VIEW = {\n  actions: {\n    save: 'rx-runtime-view-save',\n    close: 'rx-runtime-view-close',\n    cancel: 'rx-runtime-view-cancel'\n  }\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AdaptAlertModule } from '@bmc-ux/adapt-angular';\n\nimport { RxBusyIndicatorModule } from '@helix/platform/ui-kit';\nimport { RuntimeViewComponent } from './component/runtime-view.component';\nimport { RuntimeViewRootComponent } from './components/runtime-component/runtime-view-root.component';\nimport { RuntimeViewCanvasModule } from './components/runtime-view-canvas/runtime-view-canvas.module';\nimport { RuntimeViewModalComponent } from './components/runtime-view-modal/runtime-view-modal.component';\n\n@NgModule({\n  imports: [CommonModule, RuntimeViewCanvasModule, TranslateModule, AdaptAlertModule, RxBusyIndicatorModule],\n  exports: [RuntimeViewCanvasModule, RuntimeViewComponent, RuntimeViewRootComponent, RuntimeViewModalComponent],\n  declarations: [RuntimeViewComponent, RuntimeViewRootComponent, RuntimeViewModalComponent],\n  entryComponents: [RuntimeViewRootComponent, RuntimeViewModalComponent]\n})\nexport class RuntimeViewModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["Subject","Injectable","ReplaySubject","pick","takeUntil","skipWhile","distinctUntilChanged","delay","ViewContainerRef","Component","Input","ViewChild","HostBinding","RX_VIEW_DEFINITION","ViewLayoutRole","RxViewComponentType","includes","RX_AVAILABLE_ON_DEVICES_PROP_NAME","RX_AVAILABLE_ON_DEVICES_ALL_VALUE","RxViewLayout","isString","map","of","RX_GUID","chain","values","isObject","take","EMPTY","isEmpty","head","from","mergeScan","castArray","switchMap","merge","filter","distinct","reduce","tap","throwError","defaultIfEmpty","some","has","asyncScheduler","groupBy","combineLatest","switchMapTo","_map","keys","every","intersection","forEach","get","BehaviorSubject","forOwn","find","sortBy","toNumber","forIn","isFunction","Observable","catchError","set","isNil","ViewComponentPropertyType","pull","EventEmitter","Output","HostListener","pluck","Directive","CommonModule","FormsModule","NgModule","DismissReasons","NEVER","Optional","TranslateModule","AdaptAlertModule","RxBusyIndicatorModule"],"mappings":"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"}