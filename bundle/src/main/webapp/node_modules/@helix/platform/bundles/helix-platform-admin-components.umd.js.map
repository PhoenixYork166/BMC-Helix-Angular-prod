{"version":3,"file":"helix-platform-admin-components.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../libs/platform/admin/components/admin.constant.ts","../../../../libs/platform/admin/components/services/admin-common-settings.service.ts","../../../../libs/platform/admin/components/services/admin-file-utility.service.ts","../../../../libs/platform/admin/components/admin-common-settings-editor/admin-common-settings-editor.component.ts","../../../../libs/platform/admin/components/admin-common-settings-editor/admin-common-settings-editor.component.html","../../../../libs/platform/admin/components/admin-common-settings-blade/admin-common-settings-blade.component.ts","../../../../libs/platform/admin/components/admin-common-settings-blade/admin-common-settings-blade.component.html","../../../../libs/platform/admin/components/admin-common-settings/admin-common-settings.component.ts","../../../../libs/platform/admin/components/admin-common-settings/admin-common-settings.component.html","../../../../libs/platform/admin/components/services/admin-settings-explorer.service.ts","../../../../libs/platform/admin/components/admin-settings-explorer/admin-settings-explorer.types.ts","../../../../libs/platform/admin/components/admin-settings-explorer/admin-settings-explorer.component.ts","../../../../libs/platform/admin/components/admin-settings-explorer/admin-settings-explorer.component.html","../../../../libs/platform/admin/components/admin-components-routing.module.ts","../../../../libs/platform/admin/components/application-issues/application-issues.constant.ts","../../../../libs/platform/admin/components/application-issues/issue-details/issue-details.component.ts","../../../../libs/platform/admin/components/application-issues/issue-details/issue-details.component.html","../../../../libs/platform/admin/components/application-issues/close-duplicate-issues/close-duplicate-issues.component.ts","../../../../libs/platform/admin/components/application-issues/close-duplicate-issues/close-duplicate-issues.component.html","../../../../libs/platform/admin/components/application-issues/application-issues.service.ts","../../../../libs/platform/admin/components/application-issues/submit-issue-to-support/submit-issue-to-support.component.ts","../../../../libs/platform/admin/components/application-issues/submit-issue-to-support/submit-issue-to-support.component.html","../../../../libs/platform/admin/components/application-issues/application-issues.component.ts","../../../../libs/platform/admin/components/application-issues/application-issues.component.html","../../../../libs/platform/admin/components/application-issues/application-issues-registration.module.ts","../../../../libs/platform/admin/components/approval-configuration/approval-configuration.constant.ts","../../../../libs/platform/admin/components/approval-configuration/approval-configuration.service.ts","../../../../libs/platform/admin/components/approval-configuration/approval-expression-configurator/approval-expression-configurator.class.ts","../../../../libs/platform/admin/components/approval-configuration/flow-approvers-selector/organization-data-page.service.ts","../../../../libs/platform/admin/components/approval-configuration/flow-approvers-selector/support-organization-data-page.service.ts","../../../../libs/platform/admin/components/approval-configuration/flow-approvers-selector/flow-approvers-selector.component.ts","../../../../libs/platform/admin/components/approval-configuration/flow-approvers-selector/flow-approvers-selector.component.html","../../../../libs/platform/admin/components/approval-configuration/approval-flow-configuration/approval-flow-configuration.component.ts","../../../../libs/platform/admin/components/approval-configuration/approval-flow-configuration/approval-flow-configuration.component.html","../../../../libs/platform/admin/components/approval-configuration/record-registration/field-definition-picker/field-definition-picker.service.ts","../../../../libs/platform/admin/components/approval-configuration/record-registration/field-definition-picker/field-definition-picker.component.ts","../../../../libs/platform/admin/components/approval-configuration/record-registration/field-definition-picker/field-definition-picker.component.html","../../../../libs/platform/admin/components/approval-configuration/record-registration/record-registration.component.ts","../../../../libs/platform/admin/components/approval-configuration/record-registration/record-registration.component.html","../../../../libs/platform/admin/components/approval-configuration/self-approval-configuration/approval-mapping-data-page.service.ts","../../../../libs/platform/admin/components/approval-configuration/self-approval-configuration/self-approval-configuration.component.ts","../../../../libs/platform/admin/components/approval-configuration/self-approval-configuration/self-approval-configuration.component.html","../../../../libs/platform/admin/components/approval-configuration/approval-configuration-editor/approval-configuration-editor.component.ts","../../../../libs/platform/admin/components/approval-configuration/approval-configuration-editor/approval-configuration-editor.component.html","../../../../libs/platform/admin/components/approval-configuration/record-definition-registration-data-page.service.ts","../../../../libs/platform/admin/components/approval-configuration/associated-record-field-name.pipe.ts","../../../../libs/platform/admin/components/approval-configuration/approval-configuration.component.ts","../../../../libs/platform/admin/components/approval-configuration/approval-configuration.component.html","../../../../libs/platform/admin/components/approval-configuration/approval-configuration-registration.module.ts","../../../../libs/platform/admin/components/approval-notifications/approval-notifications.constant.ts","../../../../libs/platform/admin/components/approval-notifications/approval-notifiction-expression-configurator/approval-notification-expression-configurator.class.ts","../../../../libs/platform/admin/components/connection-mapping/common/connection-mapping.constant.ts","../../../../libs/platform/admin/components/approval-notifications/approval-notifications.service.ts","../../../../libs/platform/admin/components/approval-notifications/approval-notification-editor/approval-notification-editor.component.ts","../../../../libs/platform/admin/components/approval-notifications/approval-notification-editor/approval-notification-editor.component.html","../../../../libs/platform/admin/components/approval-notifications/approval-notifications-data-page.service.ts","../../../../libs/platform/admin/components/approval-notifications/approval-notifications.component.ts","../../../../libs/platform/admin/components/approval-notifications/approval-notifications.component.html","../../../../libs/platform/admin/components/approval-notifications/approval-notifications-registration.module.ts","../../../../libs/platform/admin/components/bmc-service-cloud-account/bmc-service-cloud-account.component.ts","../../../../libs/platform/admin/components/bmc-service-cloud-account/bmc-service-cloud-account.component.html","../../../../libs/platform/admin/components/bmc-service-cloud-account/bmc-service-cloud-account-registration.module.ts","../../../../libs/platform/admin/components/chatbots/chatbots.component.ts","../../../../libs/platform/admin/components/chatbots/chatbots.component.html","../../../../libs/platform/admin/components/chatbots/chatbots-registration.module.ts","../../../../libs/platform/admin/components/cognitive-consumption/cognitive-consumption.types.ts","../../../../libs/platform/admin/components/cognitive-consumption/cognitive-consumption.constant.ts","../../../../libs/platform/admin/components/cognitive-consumption/cognitive-consumption.service.ts","../../../../libs/platform/admin/components/cognitive-consumption/components/download-report-modal/download-report-modal.component.ts","../../../../libs/platform/admin/components/cognitive-consumption/components/download-report-modal/download-report-modal.component.html","../../../../libs/platform/admin/components/cognitive-consumption/components/cognitive-consumption-notification-history-modal/cognitive-consumption-notification-history-modal.component.ts","../../../../libs/platform/admin/components/cognitive-consumption/components/cognitive-consumption-notification-history-modal/cognitive-consumption-notification-history-modal.component.html","../../../../libs/platform/admin/components/cognitive-consumption/components/cognitive-consumption-notification-modal/cognitive-consumption-notification-modal.component.ts","../../../../libs/platform/admin/components/cognitive-consumption/components/cognitive-consumption-notification-modal/cognitive-consumption-notification-modal.component.html","../../../../libs/platform/admin/components/cognitive-consumption/components/cognitive-consumption-chart/cognitive-consumption-chart.component.ts","../../../../libs/platform/admin/components/cognitive-consumption/components/cognitive-consumption-chart/cognitive-consumption-chart.component.html","../../../../libs/platform/admin/components/cognitive-consumption/components/cognitive-consumption-group/cognitive-consumption-group.component.ts","../../../../libs/platform/admin/components/cognitive-consumption/components/cognitive-consumption-group/cognitive-consumption-group.component.html","../../../../libs/platform/admin/components/cognitive-consumption/cognitive-consumption.component.ts","../../../../libs/platform/admin/components/cognitive-consumption/cognitive-consumption.component.html","../../../../libs/platform/admin/components/cognitive-consumption/cognitive-consumption-registration.module.ts","../../../../libs/platform/admin/components/cognitive-search/cognitive-search.constant.ts","../../../../libs/platform/admin/components/cognitive-search/cognitive-search-project-data-page.service.ts","../../../../libs/platform/admin/components/cognitive-search/cognitive-search-collection-data-page.service.ts","../../../../libs/platform/admin/components/cognitive-search/cognitive-search-editor/cognitive-search-editor.component.ts","../../../../libs/platform/admin/components/cognitive-search/cognitive-search-editor/cognitive-search-editor.component.html","../../../../libs/platform/admin/components/cognitive-search/cognitive-search.component.ts","../../../../libs/platform/admin/components/cognitive-search/cognitive-search.component.html","../../../../libs/platform/admin/components/cognitive-search/cognitive-search-registration.module.ts","../../../../libs/platform/admin/components/cognitive-service/cognitive-service.constant.ts","../../../../libs/platform/admin/components/cognitive-service/cognitive-service-system-configuration-data-page.service.ts","../../../../libs/platform/admin/components/cognitive-service/cognitive-service.service.ts","../../../../libs/platform/admin/components/cognitive-service/components/chatbot/cognitive-service-chatbot.component.ts","../../../../libs/platform/admin/components/cognitive-service/components/chatbot/cognitive-service-chatbot.component.html","../../../../libs/platform/admin/components/cognitive-service/components/administration-credentials/cognitive-service-administration-credentials.component.ts","../../../../libs/platform/admin/components/cognitive-service/components/administration-credentials/cognitive-service-administration-credentials.component.html","../../../../libs/platform/admin/components/cognitive-service/components/connections/cognitive-service-connections.component.ts","../../../../libs/platform/admin/components/cognitive-service/components/connections/cognitive-service-connections.component.html","../../../../libs/platform/admin/components/cognitive-service/components/onboard/cognitive-service-onboard.component.ts","../../../../libs/platform/admin/components/cognitive-service/components/onboard/cognitive-service-onboard.component.html","../../../../libs/platform/admin/components/cognitive-service/components/regions/cognitive-service-regions.component.ts","../../../../libs/platform/admin/components/cognitive-service/components/regions/cognitive-service-regions.component.html","../../../../libs/platform/admin/components/cognitive-service/components/summarization/cognitive-service-summarization.component.ts","../../../../libs/platform/admin/components/cognitive-service/components/summarization/cognitive-service-summarization.component.html","../../../../libs/platform/admin/components/cognitive-service/components/tone-analyzer/cognitive-service-tone-analyzer.component.ts","../../../../libs/platform/admin/components/cognitive-service/components/tone-analyzer/cognitive-service-tone-analyzer.component.html","../../../../libs/platform/admin/components/cognitive-service/cognitive-service.component.ts","../../../../libs/platform/admin/components/cognitive-service/cognitive-service.component.html","../../../../libs/platform/admin/components/cognitive-service/cognitive-service-registration.module.ts","../../../../libs/platform/admin/components/cognitive-training/cognitive-training.types.ts","../../../../libs/platform/admin/components/cognitive-training/cognitive-training.constant.ts","../../../../libs/platform/admin/components/cognitive-training/cognitive-training.service.ts","../../../../libs/platform/admin/components/cognitive-training/cognitive-training-utils.service.ts","../../../../libs/platform/admin/components/cognitive-training/components/chatbot-data-set-blade/chatbot-data-set-blade.component.ts","../../../../libs/platform/admin/components/cognitive-training/components/chatbot-data-set-blade/chatbot-data-set-blade.component.html","../../../../libs/platform/admin/components/cognitive-training/components/file-data-set-blade/file-data-set-blade.component.ts","../../../../libs/platform/admin/components/cognitive-training/components/file-data-set-blade/file-data-set-blade.component.html","../../../../libs/platform/admin/components/cognitive-training/components/interactive-evaluation-blade/interactive-evaluation-blade.component.ts","../../../../libs/platform/admin/components/cognitive-training/components/interactive-evaluation-blade/interactive-evaluation-blade.component.html","../../../../libs/platform/admin/components/cognitive-training/components/record-data-set-expression-configurator/record-data-set-expression-configurator.class.ts","../../../../libs/platform/admin/components/cognitive-training/components/record-data-set-blade/record-data-set-blade.component.ts","../../../../libs/platform/admin/components/cognitive-training/components/record-data-set-blade/record-data-set-blade.component.html","../../../../libs/platform/admin/components/cognitive-training/components/cognitive-training-record-grid/cognitive-training-record-grid.component.ts","../../../../libs/platform/admin/components/cognitive-training/components/cognitive-training-record-grid/cognitive-training-record-grid.component.html","../../../../libs/platform/admin/components/cognitive-training/cognitive-training.component.ts","../../../../libs/platform/admin/components/cognitive-training/cognitive-training.component.html","../../../../libs/platform/admin/components/cognitive-training/cognitive-training-registration.module.ts","../../../../libs/platform/admin/components/comaround-knowledge/comaround-knowledge.constant.ts","../../../../libs/platform/admin/components/comaround-knowledge/comaround-knowledge.component.ts","../../../../libs/platform/admin/components/comaround-knowledge/comaround-knowledge.component.html","../../../../libs/platform/admin/components/comaround-knowledge/comaround-knowledge-registration.module.ts","../../../../libs/platform/admin/components/connection-mapping/common/connection-mapping.types.ts","../../../../libs/platform/admin/components/connection-mapping/common/connection-mapping.component.ts","../../../../libs/platform/admin/components/connection-mapping/common/connection-mapping.component.html","../../../../libs/platform/admin/components/connection-mapping/common/connection-mapping.module.ts","../../../../libs/platform/admin/components/connection-mapping/connector-mapping/connector-mapping.component.ts","../../../../libs/platform/admin/components/connection-mapping/connector-mapping/connector-mapping.component.html","../../../../libs/platform/admin/components/connection-mapping/connector-mapping/connector-mapping-registration.module.ts","../../../../libs/platform/admin/components/connection-mapping/data-source-mapping/data-source-mapping.component.ts","../../../../libs/platform/admin/components/connection-mapping/data-source-mapping/data-source-mapping.component.html","../../../../libs/platform/admin/components/connection-mapping/data-source-mapping/data-source-mapping.module.ts","../../../../libs/platform/admin/components/connection-mapping/web-api-mapping/web-api-mapping.component.ts","../../../../libs/platform/admin/components/connection-mapping/web-api-mapping/web-api-mapping.component.html","../../../../libs/platform/admin/components/connection-mapping/web-api-mapping/web-api-mapping-registration.module.ts","../../../../libs/platform/admin/components/connector-configuration/connector-configuration.constant.ts","../../../../libs/platform/admin/components/connector-configuration/connectors-data-page.service.ts","../../../../libs/platform/admin/components/connector-configuration/connector-configuration-data-page.service.ts","../../../../libs/platform/admin/components/connector-configuration/connector-configuration.service.ts","../../../../libs/platform/admin/components/connector-configuration/connector-configuration-editor/connector-configuration-editor.component.ts","../../../../libs/platform/admin/components/connector-configuration/connector-configuration-editor/connector-configuration-editor.component.html","../../../../libs/platform/admin/components/connector-configuration/connector-configuration.component.ts","../../../../libs/platform/admin/components/connector-configuration/connector-configuration.component.html","../../../../libs/platform/admin/components/connector-configuration/connector-configuration-registration.module.ts","../../../../libs/platform/admin/components/data-source-connections/custom-data-source-provider-picker/custom-data-source-provider-picker.component.ts","../../../../libs/platform/admin/components/data-source-connections/custom-data-source-provider-picker/custom-data-source-provider-picker.component.html","../../../../libs/platform/admin/components/data-source-connections/data-source-connections.constant.ts","../../../../libs/platform/admin/components/data-source-connections/data-source-connection-general.component.ts","../../../../libs/platform/admin/components/data-source-connections/data-source-connection-general.component.html","../../../../libs/platform/admin/components/data-source-connections/custom-data-source-provider-data-page.service.ts","../../../../libs/platform/admin/components/data-source-connections/data-source-connection-properties.component.ts","../../../../libs/platform/admin/components/data-source-connections/data-source-connection-properties.component.html","../../../../libs/platform/admin/components/data-source-connections/data-source-connections.service.ts","../../../../libs/platform/admin/components/data-source-connections/data-source-connections.component.ts","../../../../libs/platform/admin/components/data-source-connections/data-source-connections.component.html","../../../../libs/platform/admin/components/data-source-connections/data-source-connections-registration.module.ts","../../../../libs/platform/admin/components/email-profiles/email-profiles.constant.ts","../../../../libs/platform/admin/components/email-profiles/create-email-profile/create-email-profile.component.ts","../../../../libs/platform/admin/components/email-profiles/create-email-profile/create-email-profile.component.html","../../../../libs/platform/admin/components/email-profiles/email-profiles.service.ts","../../../../libs/platform/admin/components/email-profiles/email-profiles.component.ts","../../../../libs/platform/admin/components/email-profiles/email-profiles.component.html","../../../../libs/platform/admin/components/email-profiles/email-profiles-registration.module.ts","../../../../libs/platform/admin/components/functional-roles/functional-role.service.ts","../../../../libs/platform/admin/components/functional-roles/functional-role-editor/functional-role-editor.component.ts","../../../../libs/platform/admin/components/functional-roles/functional-role-editor/functional-role-editor.component.html","../../../../libs/platform/admin/components/functional-roles/functional-roles.constant.ts","../../../../libs/platform/admin/components/functional-roles/functional-roles.component.ts","../../../../libs/platform/admin/components/functional-roles/functional-roles.component.html","../../../../libs/platform/admin/components/functional-roles/functional-roles-registration.module.ts","../../../../libs/platform/admin/components/hkm-access-mapping/hkm-access-mapping.service.ts","../../../../libs/platform/admin/components/hkm-access-mapping/hkm-access-map-editor/hkm-access-map-editor.component.ts","../../../../libs/platform/admin/components/hkm-access-mapping/hkm-access-map-editor/hkm-access-map-editor.component.html","../../../../libs/platform/admin/components/hkm-access-mapping/hkm-access-mapping.types.ts","../../../../libs/platform/admin/components/hkm-access-mapping/hkm-access-mapping.component.ts","../../../../libs/platform/admin/components/hkm-access-mapping/hkm-access-mapping.component.html","../../../../libs/platform/admin/components/hkm-access-mapping/hkm-access-mapping-registration.module.ts","../../../../libs/platform/admin/components/iframe-security/iframe-security.constant.ts","../../../../libs/platform/admin/components/iframe-security/iframe-security.service.ts","../../../../libs/platform/admin/components/iframe-security/iframe-security.component.ts","../../../../libs/platform/admin/components/iframe-security/iframe-security.component.html","../../../../libs/platform/admin/components/iframe-security/iframe-security-registration.module.ts","../../../../libs/platform/admin/components/ipaas/ipaas-base-apis/ipaas-base-apis.types.ts","../../../../libs/platform/admin/components/ipaas/ipaas-base-apis/ipaas-base-apis.constant.ts","../../../../libs/platform/admin/components/ipaas/ipaas-base-apis/api-editor/api-editor-base.class.ts","../../../../libs/platform/admin/components/ipaas/jitterbit-apis/jitterbit-apis.service.ts","../../../../libs/platform/admin/components/ipaas/jitterbit-apis/jitterbit-api-editor.component.ts","../../../../libs/platform/admin/components/ipaas/ipaas-base-apis/api-editor/api-editor.component.html","../../../../libs/platform/admin/components/ipaas/ipaas-base-apis/group-editor/group-editor.component.ts","../../../../libs/platform/admin/components/ipaas/ipaas-base-apis/group-editor/group-editor.component.html","../../../../libs/platform/admin/components/ipaas/ipaas-base-apis/ipaas-base-apis.service.ts","../../../../libs/platform/admin/components/ipaas/ipaas-base-apis/ipaas-base-apis.component.ts","../../../../libs/platform/admin/components/ipaas/ipaas-base-apis/ipaas-base-apis.component.html","../../../../libs/platform/admin/components/ipaas/jitterbit-apis/jitterbit-apis.component.ts","../../../../libs/platform/admin/components/ipaas/jitterbit-apis/jitterbit-apis.component.html","../../../../libs/platform/admin/components/ipaas/ipaas-base-apis/ipaas-base-apis.module.ts","../../../../libs/platform/admin/components/ipaas/jitterbit-apis/jitterbit-apis-registration.module.ts","../../../../libs/platform/admin/components/ipaas/ipaas-base-configuration/ipaas-base-configuration.component.ts","../../../../libs/platform/admin/components/ipaas/ipaas-base-configuration/ipaas-base-configuration.component.html","../../../../libs/platform/admin/components/ipaas/ipaas-base-configuration/ipaas-base-configuration.module.ts","../../../../libs/platform/admin/components/ipaas/jitterbit-configuration/jitterbit-configuration.component.ts","../../../../libs/platform/admin/components/ipaas/jitterbit-configuration/jitterbit-configuration.component.html","../../../../libs/platform/admin/components/ipaas/jitterbit-configuration/jitterbit-configuration-registration.module.ts","../../../../libs/platform/admin/components/ipaas/mulesoft-apis/mulesoft-apis.service.ts","../../../../libs/platform/admin/components/ipaas/mulesoft-apis/mulesoft-api-editor.component.ts","../../../../libs/platform/admin/components/ipaas/mulesoft-apis/mulesoft-apis.component.ts","../../../../libs/platform/admin/components/ipaas/mulesoft-apis/mulesoft-apis.component.html","../../../../libs/platform/admin/components/ipaas/mulesoft-apis/mulesoft-apis-registration.module.ts","../../../../libs/platform/admin/components/ipaas/mulesoft-configuration/mulesoft-configuration.types.ts","../../../../libs/platform/admin/components/ipaas/mulesoft-configuration/mulesoft-configuration.component.ts","../../../../libs/platform/admin/components/ipaas/mulesoft-configuration/mulesoft-configuration.component.html","../../../../libs/platform/admin/components/ipaas/mulesoft-configuration/mulesoft-configuration-registration.module.ts","../../../../libs/platform/admin/components/issue-reporting-configuration/issue-reporting-configuration.constant.ts","../../../../libs/platform/admin/components/issue-reporting-configuration/issue-reporting-configuration.service.ts","../../../../libs/platform/admin/components/issue-reporting-configuration/issue-reporting-configuration.component.ts","../../../../libs/platform/admin/components/issue-reporting-configuration/issue-reporting-configuration.component.html","../../../../libs/platform/admin/components/issue-reporting-configuration/issue-reporting-configuration-registration.module.ts","../../../../libs/platform/admin/components/manage-tenant/manage-tenant.types.ts","../../../../libs/platform/admin/components/manage-tenant/manage-tenant.service.ts","../../../../libs/platform/admin/components/manage-tenant/tenant-editor/tenant-editor.component.ts","../../../../libs/platform/admin/components/manage-tenant/tenant-editor/tenant-editor.component.html","../../../../libs/platform/admin/components/manage-tenant/manage-tenant.component.ts","../../../../libs/platform/admin/components/manage-tenant/manage-tenant.component.html","../../../../libs/platform/admin/components/manage-tenant/manage-tenant-registration.module.ts","../../../../libs/platform/admin/components/outgoing-mailbox-status/outgoing-mailbox-status.constant.ts","../../../../libs/platform/admin/components/outgoing-mailbox-status/outgoing-mailbox-status-data-page.service.ts","../../../../libs/platform/admin/components/outgoing-mailbox-status/outgoing-mailbox-status.component.ts","../../../../libs/platform/admin/components/outgoing-mailbox-status/outgoing-mailbox-status.component.html","../../../../libs/platform/admin/components/outgoing-mailbox-status/outgoing-mailbox-status-registration.module.ts","../../../../libs/platform/admin/components/permissions-policy-header/permissions-policy-header.component.ts","../../../../libs/platform/admin/components/permissions-policy-header/permissions-policy-header.component.html","../../../../libs/platform/admin/components/permissions-policy-header/permissions-policy-header-registration.module.ts","../../../../libs/platform/admin/components/real-time-translation/real-time-translation.constant.ts","../../../../libs/platform/admin/components/real-time-translation/real-time-translation.component.ts","../../../../libs/platform/admin/components/real-time-translation/real-time-translation.component.html","../../../../libs/platform/admin/components/real-time-translation/real-time-translation-registration.module.ts","../../../../libs/platform/admin/components/role-permissions/role-permissions.constant.ts","../../../../libs/platform/admin/components/role-permissions/role-permissions.service.ts","../../../../libs/platform/admin/components/role-permissions/role-editor/role-editor.component.ts","../../../../libs/platform/admin/components/role-permissions/role-editor/role-editor.component.html","../../../../libs/platform/admin/components/role-permissions/role-permission.types.ts","../../../../libs/platform/admin/components/role-permissions/role-permissions.component.ts","../../../../libs/platform/admin/components/role-permissions/role-permissions.component.html","../../../../libs/platform/admin/components/role-permissions/role-permissions-registration.module.ts","../../../../libs/platform/admin/components/rsso-oauth/rsso-oauth.constant.ts","../../../../libs/platform/admin/components/rsso-oauth/rsso-oauth-configuration.service.ts","../../../../libs/platform/admin/components/rsso-oauth/rsso-oauth.component.ts","../../../../libs/platform/admin/components/rsso-oauth/rsso-oauth.component.html","../../../../libs/platform/admin/components/rsso-oauth/rsso-oauth-registration.module.ts","../../../../libs/platform/admin/components/rule-pool-management/rule-pool-management.constant.ts","../../../../libs/platform/admin/components/rule-pool-management/rule-pool-data.service.ts","../../../../libs/platform/admin/components/rule-pool-management/rule-pool-management.service.ts","../../../../libs/platform/admin/components/rule-pool-management/rule-reassignment/rule-reassignment.component.ts","../../../../libs/platform/admin/components/rule-pool-management/rule-reassignment/rule-reassignment.component.html","../../../../libs/platform/admin/components/rule-pool-management/rule-pool-management.component.ts","../../../../libs/platform/admin/components/rule-pool-management/rule-pool-management.component.html","../../../../libs/platform/admin/components/rule-pool-management/rule-pool-management-registration.module.ts","../../../../libs/platform/admin/components/server-information/server-information.service.ts","../../../../libs/platform/admin/components/server-information/server-information.component.ts","../../../../libs/platform/admin/components/server-information/server-information.component.html","../../../../libs/platform/admin/components/server-information/server-information-registration.module.ts","../../../../libs/platform/admin/components/server-logs/server-logs.constant.ts","../../../../libs/platform/admin/components/server-logs/server-logs.service.ts","../../../../libs/platform/admin/components/server-logs/server-logs.component.ts","../../../../libs/platform/admin/components/server-logs/server-logs.component.html","../../../../libs/platform/admin/components/server-logs/server-logs-registration.module.ts","../../../../libs/platform/admin/components/services-provider-region/services-provider-region.constant.ts","../../../../libs/platform/admin/components/services-provider-region/services-provider-region.component.ts","../../../../libs/platform/admin/components/services-provider-region/services-provider-region.component.html","../../../../libs/platform/admin/components/services-provider-region/services-provider-region-registration.module.ts","../../../../libs/platform/admin/components/summarization-service/summarization-service.constant.ts","../../../../libs/platform/admin/components/summarization-service/summarization-service.component.ts","../../../../libs/platform/admin/components/summarization-service/summarization-service.component.html","../../../../libs/platform/admin/components/summarization-service/summarization-service-registration.module.ts","../../../../libs/platform/admin/components/summarization-testing/summarization-testing.service.ts","../../../../libs/platform/admin/components/summarization-testing/summarization-testing.component.ts","../../../../libs/platform/admin/components/summarization-testing/summarization-testing.component.html","../../../../libs/platform/admin/components/summarization-testing/summarization-testing-registration.module.ts","../../../../libs/platform/admin/components/tone-analysis-testing/tone-analysis-testing.constant.ts","../../../../libs/platform/admin/components/tone-analysis-testing/document-tone-analysis/document-tone-analysis.component.ts","../../../../libs/platform/admin/components/tone-analysis-testing/document-tone-analysis/document-tone-analysis.component.html","../../../../libs/platform/admin/components/tone-analysis-testing/user-engagement-tone-analysis/user-engagement-tone-analysis.component.ts","../../../../libs/platform/admin/components/tone-analysis-testing/user-engagement-tone-analysis/user-engagement-tone-analysis.component.html","../../../../libs/platform/admin/components/tone-analysis-testing/tone-analysis-testing.component.ts","../../../../libs/platform/admin/components/tone-analysis-testing/tone-analysis-testing.component.html","../../../../libs/platform/admin/components/tone-analysis-testing/tone-analysis-testing-registration.module.ts","../../../../libs/platform/admin/components/virtual-chat-configuration/virtual-chat-configuration.constant.ts","../../../../libs/platform/admin/components/virtual-chat-configuration/virtual-chat-configuration.component.ts","../../../../libs/platform/admin/components/virtual-chat-configuration/virtual-chat-configuration.component.html","../../../../libs/platform/admin/components/virtual-chat-configuration/virtual-chat-configuration-registration.module.ts","../../../../libs/platform/admin/components/web-api-connections/web-api-connections.constant.ts","../../../../libs/platform/admin/components/web-api-connections/web-api-connection-wizard-step-fields/web-api-connection-wizard-step-fields.component.ts","../../../../libs/platform/admin/components/web-api-connections/web-api-connection-wizard-step-fields/web-api-connection-wizard-step-fields.component.html","../../../../libs/platform/admin/components/web-api-connections/authentication-wizard-step/authentication-wizard-step.component.ts","../../../../libs/platform/admin/components/web-api-connections/authentication-wizard-step/authentication-wizard-step.component.html","../../../../libs/platform/admin/components/web-api-connections/general-wizard-step/general-wizard-step.component.ts","../../../../libs/platform/admin/components/web-api-connections/general-wizard-step/general-wizard-step.component.html","../../../../libs/platform/admin/components/web-api-connections/web-api-connections.service.ts","../../../../libs/platform/admin/components/web-api-connections/web-api-connections.component.ts","../../../../libs/platform/admin/components/web-api-connections/web-api-connections.component.html","../../../../libs/platform/admin/components/web-api-connections/web-api-connections-registration.module.ts","../../../../libs/platform/admin/components/webhook-callback-configuration/webhook-callback-configuration.constant.ts","../../../../libs/platform/admin/components/webhook-callback-configuration/webhook-callback-configuration.service.ts","../../../../libs/platform/admin/components/webhook-callback-configuration/webhook-callback-configuration-editor/webhook-callback-configuration-editor.component.ts","../../../../libs/platform/admin/components/webhook-callback-configuration/webhook-callback-configuration-editor/webhook-callback-configuration-editor.component.html","../../../../libs/platform/admin/components/webhook-callback-configuration/webhook-callback-configuration.component.ts","../../../../libs/platform/admin/components/webhook-callback-configuration/webhook-callback-configuration.component.html","../../../../libs/platform/admin/components/webhook-callback-configuration/webhook-callback-configuration-registration.module.ts","../../../../libs/platform/admin/components/search-filters/search-filters.service.ts","../../../../libs/platform/admin/components/search-filters/search-filters-editor/search-filters-editor.component.ts","../../../../libs/platform/admin/components/search-filters/search-filters-editor/search-filters-editor.component.html","../../../../libs/platform/admin/components/search-filters/search-filters.component.ts","../../../../libs/platform/admin/components/search-filters/search-filters.component.html","../../../../libs/platform/admin/components/search-filters/search-filters-registration.module.ts","../../../../libs/platform/admin/components/admin-components.module.ts","../../../../libs/platform/admin/components/helix-platform-admin-components.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\n\nexport const RX_ADMIN = {\n  defaultImages: {\n    'rx-theme-favicon-logo': {\n      name: 'favicon.ico',\n      type: 'image/x-icon'\n    },\n    'rx-theme-large-logo-light': {\n      name: 'company.svg',\n      type: 'image/svg+xml'\n    },\n    'rx-theme-large-logo-dark': {\n      name: 'company-dark.svg',\n      type: 'image/svg+xml'\n    },\n    'rx-theme-small-logo-light': {\n      name: 'company.svg',\n      type: 'image/svg+xml'\n    },\n    'rx-theme-small-logo-dark': {\n      name: 'company-dark.svg',\n      type: 'image/svg+xml'\n    }\n  },\n\n  settingResourceTypes: {\n    character: RX_RECORD_DEFINITION.resourceTypes.character,\n    selection: RX_RECORD_DEFINITION.resourceTypes.selection,\n    integer: RX_RECORD_DEFINITION.resourceTypes.integer,\n    decimal: RX_RECORD_DEFINITION.resourceTypes.decimal,\n    boolean: RX_RECORD_DEFINITION.resourceTypes.boolean,\n    dateOnly: RX_RECORD_DEFINITION.resourceTypes.dateOnly,\n    color: 'com.bmc.arsys.rx.admin-settings.ColorChooserFieldDefinition',\n    attachment: 'com.bmc.arsys.rx.admin-settings.AttachmentFieldDefinition',\n    secure: 'com.bmc.arsys.rx.admin-settings.SecureDataFieldDefinition'\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { IFieldDefinition, IFieldDefinitionsById, ISelectionFieldDefinition } from '@helix/platform/record/api';\nimport {\n  IAdminComponentControl,\n  IPlainObject,\n  RxAdminSettingsService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport {\n  AttachmentFormControlComponent,\n  BooleanFormControlComponent,\n  ColorPickerFormControlComponent,\n  CounterFormControlComponent,\n  DateFormControlComponent,\n  SelectFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { RxNumberUtilsService } from '@helix/platform/utils';\nimport { IRecordGridConfig, RecordGridColumnAlignment, RowSelectionMode } from '@helix/platform/view/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { cloneDeep, noop, map as _map } from 'lodash';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { AdminCommonSettingsBladeComponent } from '../admin-common-settings-blade/admin-common-settings-blade.component';\nimport { RX_ADMIN } from '../admin.constant';\nimport { IGetRecordGridConfigParams, IOpenSettingsDetailsParams } from './admin-common-settings.types';\n\n@Injectable()\nexport class RxAdminCommonSettingsService {\n  constructor(\n    private rxAdminSettingsService: RxAdminSettingsService,\n    private translateService: TranslateService,\n    private rxNotificationService: RxNotificationService,\n    private rxModalService: RxModalService,\n    private rxNumberUtilsService: RxNumberUtilsService\n  ) {}\n\n  openSettingsDetails({\n    title,\n    componentName,\n    groups,\n    ownerKeyValue,\n    isChildSetting,\n    childOwnerKeyValue,\n    onDialogApiReady\n  }: IOpenSettingsDetailsParams): Promise<any> {\n    const isNew = isChildSetting ? !(ownerKeyValue && childOwnerKeyValue) : !ownerKeyValue;\n\n    return this.rxModalService.openDockedPanel({\n      content: AdminCommonSettingsBladeComponent,\n      size: 'lg',\n      title,\n      data: {\n        config: {\n          componentName,\n          groups,\n          ownerKeyValue,\n          isNew,\n          isChildSetting,\n          childOwnerKeyValue\n        },\n        onApiReady: (dialogApi) => {\n          onDialogApiReady?.(dialogApi);\n        }\n      }\n    });\n  }\n\n  createPropertyConfig(adminComponentControl: IAdminComponentControl): IPlainObject {\n    const config: IPlainObject = {\n      name: adminComponentControl.id,\n      isDisabled: !adminComponentControl.changePermission,\n      dataType: adminComponentControl.dataType,\n      options: {\n        label: adminComponentControl.label,\n        required: adminComponentControl.required\n      },\n      validators: []\n    };\n\n    if (adminComponentControl.required) {\n      config.validators.push(Validators.required);\n    }\n\n    if (adminComponentControl.defaultValue) {\n      config.defaultValue = adminComponentControl.defaultValue;\n    } else {\n      config.defaultValue = null;\n    }\n\n    switch (adminComponentControl.dataType) {\n      case RX_ADMIN.settingResourceTypes.selection: {\n        config.component = SelectFormControlComponent;\n\n        config.options = {\n          ...config.options,\n          options: _map(adminComponentControl.optionNamesById, (value, key) => ({\n            id: key,\n            name: value\n          })),\n          emptyOption: !adminComponentControl.required\n        };\n\n        break;\n      }\n\n      case RX_ADMIN.settingResourceTypes.secure:\n      case RX_ADMIN.settingResourceTypes.character: {\n        config.component = TextFormControlComponent;\n        config.options.isPassword = adminComponentControl.dataType === RX_ADMIN.settingResourceTypes.secure;\n\n        if (adminComponentControl.maxValue) {\n          config.options.maxLength = Number(adminComponentControl.maxValue);\n          config.validators.push(Validators.maxLength(config.options.maxLength));\n        }\n\n        if (adminComponentControl.minValue) {\n          config.options.minLength = Number(adminComponentControl.minValue);\n          config.validators.push(Validators.minLength(config.options.minLength));\n        }\n\n        break;\n      }\n\n      case RX_ADMIN.settingResourceTypes.boolean: {\n        config.component = BooleanFormControlComponent;\n        config.options.label = '';\n        config.options.description = adminComponentControl.label;\n        config.options.shouldDisplayAsCheckbox = config.options.required;\n\n        if (config.defaultValue) {\n          config.defaultValue = config.defaultValue === 'true';\n        } else if (config.options.required) {\n          config.defaultValue = false;\n        }\n\n        break;\n      }\n\n      case RX_ADMIN.settingResourceTypes.color: {\n        config.component = ColorPickerFormControlComponent;\n        config.defaultValue = config.defaultValue || null;\n\n        break;\n      }\n\n      case RX_ADMIN.settingResourceTypes.decimal:\n      case RX_ADMIN.settingResourceTypes.integer: {\n        config.component = CounterFormControlComponent;\n        config.options.allowIntegerOnly = adminComponentControl.dataType === RX_ADMIN.settingResourceTypes.integer;\n\n        if (adminComponentControl.maxValue) {\n          config.options.maxValue = Number(adminComponentControl.maxValue);\n          config.validators.push(Validators.max(Number(adminComponentControl.maxValue)));\n        }\n\n        if (adminComponentControl.minValue) {\n          config.options.minValue = Number(adminComponentControl.minValue);\n          config.validators.push(Validators.min(Number(adminComponentControl.minValue)));\n        }\n\n        if (this.rxNumberUtilsService.isFiniteNumberString(adminComponentControl.defaultValue)) {\n          config.defaultValue = Number(adminComponentControl.defaultValue);\n        }\n\n        break;\n      }\n\n      case RX_ADMIN.settingResourceTypes.dateOnly: {\n        config.component = DateFormControlComponent;\n\n        break;\n      }\n\n      case RX_ADMIN.settingResourceTypes.attachment: {\n        config.component = AttachmentFormControlComponent;\n        config.options.maxFileSize = adminComponentControl.maxValue;\n\n        break;\n      }\n\n      default: {\n        config.component = TextFormControlComponent;\n\n        break;\n      }\n    }\n\n    return config;\n  }\n\n  getRecordGridConfig({\n    componentName,\n    controls,\n    getCurrentGridFn,\n    createPermission,\n    groups,\n    bladeTitle,\n    ownerKeyValue,\n    groupName,\n    onDialogApiReady\n  }: IGetRecordGridConfigParams): Observable<IRecordGridConfig> {\n    const subUrl = ownerKeyValue ? `${groupName}/${ownerKeyValue}` : componentName;\n\n    const fieldDefinitions: (IFieldDefinition | ISelectionFieldDefinition)[] = controls.map((control) => {\n      const fieldDefinition = {\n        id: control.id,\n        resourceType: control.dataType\n      };\n\n      if (\n        control.dataType === RX_ADMIN.settingResourceTypes.selection &&\n        control.optionNamesById &&\n        control.optionLabelsById\n      ) {\n        (fieldDefinition as ISelectionFieldDefinition).optionNamesById = control.optionNamesById;\n        (fieldDefinition as ISelectionFieldDefinition).optionLabelsById = control.optionLabelsById;\n      }\n\n      return fieldDefinition;\n    });\n\n    const fieldDefinitionsById: IFieldDefinitionsById = fieldDefinitions.reduce((result, fieldDefinition) => {\n      result[fieldDefinition.id] = cloneDeep(fieldDefinition);\n\n      return result;\n    }, {});\n\n    const recordDefinition = {\n      fieldDefinitions,\n      fieldDefinitionsById\n    };\n\n    const columns = controls.map((control, index) => ({\n      index,\n      title: control.label,\n      fieldId: control.id,\n      visible: control.keySetting,\n      sortable: true,\n      filterable: false,\n      alignment: RecordGridColumnAlignment.Left\n    }));\n\n    const actionButtons = [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.edit.label'),\n        style: 'tertiary',\n        iconCls: 'pencil',\n        actions: [\n          {\n            name: () => {\n              const currentGrid = getCurrentGridFn(groupName);\n              const selectedRow = currentGrid.api.getFirstSelectedRow();\n\n              if (createPermission) {\n                const componentOwnerKeyValue = ownerKeyValue || selectedRow.ownerKeyValue1;\n                const childOwnerKeyValue = ownerKeyValue ? selectedRow.ownerKeyValue1 : null;\n\n                this.openSettingsDetails({\n                  title: bladeTitle || groupName,\n                  componentName,\n                  groups,\n                  ownerKeyValue: componentOwnerKeyValue,\n                  isChildSetting: Boolean(groupName),\n                  childOwnerKeyValue,\n                  onDialogApiReady\n                })\n                  .then(() => {\n                    currentGrid.api.refresh().subscribe();\n                  })\n                  .catch(noop);\n              }\n            }\n          }\n        ]\n      },\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n        style: 'tertiary',\n        icon: 'trash',\n        actions: [\n          {\n            name: () => {\n              const currentGrid = getCurrentGridFn(groupName);\n              const selectedRow = currentGrid.api.getFirstSelectedRow();\n\n              if (createPermission) {\n                this.rxModalService\n                  .confirm({\n                    title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n                    modalStyle: RX_MODAL.modalStyles.warning,\n                    message: this.translateService.instant(\n                      'com.bmc.arsys.rx.client.admin.admin-settings.delete-confirmation.message'\n                    )\n                  })\n                  .then((response) => {\n                    if (response) {\n                      this.rxAdminSettingsService\n                        .deleteComponentSettings(`${groupName || componentName}/${selectedRow.ownerKeyValue1}`)\n                        .pipe(switchMap(() => currentGrid.api.refresh()))\n                        .subscribe();\n                    }\n                  });\n              }\n            }\n          }\n        ]\n      }\n    ];\n\n    return of({\n      actionButtons: createPermission ? actionButtons : [],\n      enableRowSelection: RowSelectionMode.Single,\n      getRecordDefinition: () => of(recordDefinition),\n      getData: () =>\n        this.rxAdminSettingsService.getComponentGridData(subUrl).pipe(\n          map((data) => ({\n            data: data.rows,\n            totalSize: data.rows.length\n          }))\n        ),\n      columns,\n      enableFiltering: false,\n      useExternalFiltering: false,\n      recordIdField: 'ownerKeyValue1'\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { last, map } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxAdminFileUtilityService {\n  convertBase64ToFile(decodedString: string, fileName: string, fileType: string): File {\n    if (decodedString) {\n      const buffer = map(atob(decodedString), (symbol) => symbol.charCodeAt(0));\n      const uint8Array = new Uint8Array(buffer);\n\n      return new File([uint8Array], fileName, { type: fileType });\n    } else {\n      return null;\n    }\n  }\n\n  convertFileToBase64(file: File): Observable<string> {\n    return new Observable<string>((observer) => {\n      const fileReader = new FileReader();\n\n      fileReader.onloadend = () => {\n        const base64String = last((fileReader.result as string).split(','));\n\n        observer.next(base64String);\n        observer.complete();\n      };\n\n      fileReader.onerror = () => {\n        observer.next(null);\n      };\n\n      fileReader.readAsDataURL(file);\n    });\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  ViewChildren\n} from '@angular/core';\nimport {\n  IAdminComponentSetting,\n  IAdminComponentSettings,\n  IPlainObject,\n  RxAdminSettingsService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport { FormBuilderComponent } from '@helix/platform/shared/components';\nimport { IDialogApi, RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { IRecordGridConfig, RecordGridComponent } from '@helix/platform/view/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  chain,\n  cloneDeep,\n  every,\n  filter,\n  find,\n  findIndex,\n  forEach,\n  isEmpty,\n  isNull,\n  last,\n  map as _map,\n  some\n} from 'lodash';\nimport { forkJoin, Observable, of, throwError } from 'rxjs';\nimport { catchError, defaultIfEmpty, map, switchMap, tap } from 'rxjs/operators';\nimport { ICommonSettingsGroup } from '../admin-common-settings/admin-common-settings.types';\nimport { RX_ADMIN } from '../admin.constant';\nimport { RxAdminFileUtilityService } from '../services/admin-file-utility.service';\nimport { IGetRecordGridConfigParams, IOpenSettingsDetailsParams } from '../services/admin-common-settings.types';\nimport { AdaptDockedPanelComponent } from '@bmc-ux/adapt-angular';\n\n@Component({\n  selector: 'rx-admin-common-settings-editor',\n  templateUrl: './admin-common-settings-editor.component.html',\n  styleUrls: ['./admin-common-settings-editor.component.scss']\n})\nexport class AdminCommonSettingsEditorComponent implements OnInit {\n  @Input()\n  componentName: string;\n\n  @Input()\n  ownerKeyValue = '';\n\n  @Input()\n  groups: ICommonSettingsGroup[];\n\n  @Input()\n  createPermission: boolean;\n\n  @Input()\n  isNew: boolean;\n\n  @Input()\n  isChildSetting: boolean;\n\n  @Input()\n  childOwnerKeyValue: string;\n\n  @Input()\n  getRecordGridConfig: (options: IGetRecordGridConfigParams) => Observable<IRecordGridConfig>;\n\n  @Input()\n  openSettingsDetails: (options: IOpenSettingsDetailsParams) => Promise<any>;\n\n  @Output()\n  closeEditor = new EventEmitter<void>();\n\n  @Output()\n  busy = new EventEmitter<boolean>();\n\n  @Output()\n  save = new EventEmitter<void>();\n\n  @ViewChildren(RecordGridComponent)\n  recordGridInstances: QueryList<RecordGridComponent>;\n\n  @ViewChildren(FormBuilderComponent)\n  forms: QueryList<FormBuilderComponent>;\n\n  @HostBinding('class')\n  class: string;\n\n  private generalSettings: IAdminComponentSetting[];\n  private assigneeGroup: string;\n  isSettingsActionsAvailable: boolean;\n  isInDockedPanel = false;\n  private dialogApi: any;\n\n  constructor(\n    private rxAdminSettingsService: RxAdminSettingsService,\n    private rxAdminFileUtilityService: RxAdminFileUtilityService,\n    private rxNotificationService: RxNotificationService,\n    private rxModalService: RxModalService,\n    private translateService: TranslateService,\n    @Optional() adaptDockedPanelComponent: AdaptDockedPanelComponent\n  ) {\n    this.isInDockedPanel = !!adaptDockedPanelComponent;\n    this.class = this.isInDockedPanel ? 'dp-content' : '';\n  }\n\n  ngOnInit(): void {\n    let componentSettingRequest;\n\n    this.isSettingsActionsAvailable = this.isChildSetting || some(this.groups, (group) => !group.supportsMultiple);\n\n    if (!this.isChildSetting) {\n      if (!this.isNew) {\n        const componentName = this.ownerKeyValue ? `${this.componentName}/${this.ownerKeyValue}` : this.componentName;\n\n        this.busy.emit(true);\n\n        componentSettingRequest = this.rxAdminSettingsService.getComponentSettings(componentName).pipe(\n          tap((componentSettings) => {\n            this.ownerKeyValue = componentSettings.values.length ? last(componentSettings.values).ownerKeyValue1 : '';\n\n            this.generalSettings = componentSettings.values;\n            this.isNew = !Boolean(componentSettings.values.length);\n\n            if (!this.assigneeGroup && componentSettings.values.length) {\n              this.assigneeGroup = last(componentSettings.values).assigneeGroupPermission;\n            }\n\n            forEach(this.groups, (group) => {\n              if (!group.supportsMultiple && !group.isComponent) {\n                this.setGroupSettingValues(group, this.generalSettings);\n              }\n            });\n          }),\n          switchMap(() => {\n            const childSettings$ = [];\n\n            if (!this.isNew && this.ownerKeyValue) {\n              forEach(this.groups, (group) => {\n                childSettings$.push(this.setChildSettings(group));\n              });\n            }\n\n            return forkJoin(childSettings$);\n          })\n        );\n      } else {\n        forEach(this.groups, (group) => {\n          if (!group.supportsMultiple && !group.isComponent) {\n            this.setGroupSettingValues(group, []);\n          }\n        });\n      }\n    } else {\n      this.groups = cloneDeep(this.groups);\n\n      if (!this.isNew) {\n        this.busy.emit(true);\n\n        componentSettingRequest = this.rxAdminSettingsService\n          .getComponentSettings(`${this.groups[0].name}/${this.childOwnerKeyValue}`)\n          .pipe(\n            tap((childCommonSettings) => {\n              this.groups[0].settings = childCommonSettings.values;\n\n              this.setGroupSettingValues(this.groups[0], this.groups[0].settings);\n            })\n          );\n      } else {\n        this.setGroupSettingValues(this.groups[0], []);\n      }\n    }\n\n    componentSettingRequest\n      ?.pipe(\n        defaultIfEmpty(null),\n        tap(() => this.busy.emit(false)),\n        catchError((err) => {\n          this.busy.emit(false);\n\n          return throwError(err);\n        })\n      )\n      .subscribe();\n  }\n\n  addNewSetting(group: ICommonSettingsGroup): Promise<any> {\n    const currentGrid = this.getCurrentGrid(group.name);\n\n    return this.openSettingsDetails({\n      title: group.name,\n      componentName: this.componentName,\n      groups: [group],\n      ownerKeyValue: this.ownerKeyValue,\n      isChildSetting: true,\n      onDialogApiReady: (dialogApi: IDialogApi) => (this.dialogApi = dialogApi)\n    })\n      .then(() => {\n        this.dialogApi = null;\n        currentGrid.api.refresh().subscribe();\n      })\n      .catch(() => {\n        this.dialogApi = null;\n        currentGrid.api.refresh().subscribe();\n      });\n  }\n\n  private getCurrentGrid(groupName: string): RecordGridComponent {\n    const groupsWithGrid = filter(this.groups, 'supportsMultiple');\n\n    const gridIndex = findIndex(groupsWithGrid, { name: groupName });\n\n    return this.recordGridInstances.toArray()[gridIndex];\n  }\n\n  private setChildSettings(group: ICommonSettingsGroup): Observable<any> {\n    if (group.isComponent) {\n      if (group.supportsMultiple) {\n        group.recordGridConfig = this.getRecordGridConfig({\n          componentName: this.componentName,\n          controls: group.controls,\n          getCurrentGridFn: this.getCurrentGrid.bind(this),\n          createPermission: this.createPermission,\n          groups: [group],\n          bladeTitle: group.name,\n          ownerKeyValue: this.ownerKeyValue,\n          groupName: group.name,\n          onDialogApiReady: (dialogApi: IDialogApi) => (this.dialogApi = dialogApi)\n        });\n      } else {\n        return this.rxAdminSettingsService\n          .getComponentSettings(`${this.componentName}/${group.name}/${this.ownerKeyValue}`)\n          .pipe(\n            tap((childComponentSettings: IAdminComponentSettings) => {\n              group.settings = childComponentSettings.values;\n\n              this.setGroupSettingValues(group, group.settings);\n            })\n          );\n      }\n    }\n\n    return of(true);\n  }\n\n  onModelChange(model: IPlainObject, group: ICommonSettingsGroup): void {\n    group.settingValues = {\n      ...group.settingValues,\n      ...model\n    };\n  }\n\n  private setGroupSettingValues(group: ICommonSettingsGroup, componentSettings: IAdminComponentSetting[]): void {\n    const settingValues: IPlainObject = {};\n\n    forEach(group.propertyConfigs, (propertyConfig) => {\n      const componentSetting = find(componentSettings, { settingName: propertyConfig.name });\n\n      if (componentSetting) {\n        if (componentSetting.settingValue) {\n          switch (propertyConfig.dataType) {\n            case RX_ADMIN.settingResourceTypes.attachment: {\n              settingValues[componentSetting.settingName] = [\n                this.rxAdminFileUtilityService.convertBase64ToFile(\n                  componentSetting.settingValue as string,\n                  componentSetting.fileName,\n                  componentSetting.fileType\n                )\n              ];\n\n              break;\n            }\n\n            case RX_ADMIN.settingResourceTypes.boolean: {\n              settingValues[componentSetting.settingName] = componentSetting.settingValue === 'true';\n\n              break;\n            }\n\n            case RX_ADMIN.settingResourceTypes.decimal:\n            case RX_ADMIN.settingResourceTypes.integer: {\n              settingValues[componentSetting.settingName] = Number(componentSetting.settingValue);\n\n              break;\n            }\n\n            default: {\n              settingValues[componentSetting.settingName] = componentSetting.settingValue;\n\n              break;\n            }\n          }\n        } else {\n          settingValues[componentSetting.settingName] = null;\n        }\n      } else {\n        settingValues[propertyConfig.name] = propertyConfig.defaultValue;\n      }\n    });\n\n    group.settingValues = {\n      ...settingValues\n    };\n  }\n\n  private getSettingWithValue(\n    setting: IAdminComponentSetting,\n    value: string | number | File[]\n  ): Observable<IAdminComponentSetting> {\n    if (Array.isArray(value)) {\n      const file = value[0];\n\n      return this.rxAdminFileUtilityService.convertFileToBase64(file).pipe(\n        map((base64String) => {\n          setting.fileName = file.name;\n          setting.fileType = file.type;\n          setting.settingValue = base64String;\n\n          return setting;\n        })\n      );\n    } else {\n      setting.settingValue = value;\n\n      return of(setting);\n    }\n  }\n\n  saveSettings(): void {\n    const saveRequests$ = [];\n\n    if (!this.isChildSetting) {\n      if (this.isNew && this.createPermission) {\n        const generalGroups = this.groups.filter((group) => !group.isComponent);\n        let settings$ = [];\n\n        forEach(generalGroups, (group) => {\n          settings$ = settings$.concat(\n            _map(group.settingValues, (settingValue, settingName) => {\n              const propertyConfig = find(group.propertyConfigs, { name: settingName });\n\n              if (!isNull(settingValue) && propertyConfig && !propertyConfig.isDisabled) {\n                const setting: IAdminComponentSetting = {\n                  componentName: this.componentName,\n                  settingName,\n                  assigneeGroupPermission: this.assigneeGroup\n                } as IAdminComponentSetting;\n\n                return this.getSettingWithValue(setting, settingValue);\n              } else {\n                return null;\n              }\n            }).filter(Boolean)\n          );\n        });\n\n        if (settings$.length) {\n          saveRequests$.push(\n            forkJoin(settings$).pipe(\n              switchMap((settings: IAdminComponentSetting[]) =>\n                this.rxAdminSettingsService.createComponentSettings(this.componentName, settings)\n              ),\n              switchMap((ownerKeyValue: string) => {\n                const requests$: Observable<any>[] = [];\n\n                this.ownerKeyValue = ownerKeyValue;\n\n                forEach(this.groups, (group) => {\n                  requests$.push(this.setChildSettings(group));\n                });\n\n                requests$.push(\n                  this.rxAdminSettingsService.getComponentSettings(`${this.componentName}/${ownerKeyValue}`).pipe(\n                    tap((adminComponentSettings) => {\n                      this.generalSettings = adminComponentSettings.values;\n                    })\n                  )\n                );\n\n                return forkJoin(requests$).pipe(\n                  tap(() => {\n                    this.isNew = false;\n                  })\n                );\n              })\n            )\n          );\n        }\n      } else {\n        const generalGroups = this.groups.filter((group) => !group.isComponent);\n        const childGroups = this.groups.filter((group) => group.isComponent);\n\n        let generalSettings$ = [];\n\n        forEach(generalGroups, (group) => {\n          generalSettings$ = generalSettings$.concat(\n            _map(group.settingValues, (settingValue, settingName) => {\n              const propertyConfig = find(group.propertyConfigs, { name: settingName });\n\n              if (propertyConfig && !propertyConfig.isDisabled) {\n                const setting = find(this.generalSettings, { settingName });\n\n                setting.assigneeGroupPermission = this.assigneeGroup;\n\n                return this.getSettingWithValue(setting, settingValue);\n              } else {\n                return null;\n              }\n            }).filter(Boolean)\n          );\n        });\n\n        if (generalSettings$.length) {\n          saveRequests$.push(\n            forkJoin(generalSettings$).pipe(\n              switchMap((generalSettings: IAdminComponentSetting[]) =>\n                this.rxAdminSettingsService.updateComponentSettings(\n                  `${this.componentName}/${this.ownerKeyValue}`,\n                  generalSettings\n                )\n              )\n            )\n          );\n        }\n\n        let childSettings$ = [];\n\n        forEach(childGroups, (group) => {\n          if (!group.supportsMultiple) {\n            if (group.settings && group.settings.length) {\n              childSettings$ = childSettings$.concat(\n                _map(group.settingValues, (settingValue, settingName) => {\n                  const propertyConfig = find(group.propertyConfigs, { name: settingName });\n\n                  if (propertyConfig && !propertyConfig.isDisabled) {\n                    const setting = find(group.settings, { settingName });\n\n                    setting.assigneeGroupPermission = this.assigneeGroup;\n\n                    return this.getSettingWithValue(setting, settingValue);\n                  } else {\n                    return null;\n                  }\n                }).filter(Boolean)\n              );\n\n              saveRequests$.push(\n                forkJoin(childSettings$).pipe(\n                  switchMap((childSettings: IAdminComponentSetting[]) =>\n                    this.rxAdminSettingsService.updateComponentSettings(\n                      `${group.name}/${last(group.settings).ownerKeyValue1}`,\n                      childSettings\n                    )\n                  )\n                )\n              );\n            } else {\n              childSettings$ = childSettings$.concat(\n                _map(group.settingValues, (settingValue, settingName) => {\n                  const propertyConfig = find(group.propertyConfigs, { name: settingName });\n\n                  if (!isNull(settingValue) && propertyConfig && !propertyConfig.isDisabled) {\n                    const childSetting: IAdminComponentSetting = {\n                      componentName: group.name,\n                      parentComponentName: this.componentName,\n                      settingName,\n                      ownerKeyValue2: this.ownerKeyValue,\n                      assigneeGroupPermission: this.assigneeGroup\n                    } as IAdminComponentSetting;\n\n                    return this.getSettingWithValue(childSetting, settingValue);\n                  } else {\n                    return null;\n                  }\n                }).filter(Boolean)\n              );\n\n              if (childSettings$.length) {\n                saveRequests$.push(\n                  forkJoin(childSettings$).pipe(\n                    switchMap((childSettings: IAdminComponentSetting[]) =>\n                      this.rxAdminSettingsService.createComponentSettings(\n                        `${group.name}/${this.ownerKeyValue}`,\n                        childSettings\n                      )\n                    ),\n                    switchMap(() => this.setChildSettings(group))\n                  )\n                );\n              }\n            }\n          }\n        });\n      }\n    } else {\n      const childGroup = this.groups[0];\n\n      let childSettings$ = [];\n\n      if (childGroup.settings && childGroup.settings.length) {\n        childSettings$ = childSettings$.concat(\n          _map(childGroup.settingValues, (settingValue, settingName) => {\n            const propertyConfig = find(childGroup.propertyConfigs, {\n              name: settingName\n            });\n\n            if (propertyConfig && !propertyConfig.isDisabled) {\n              const setting = find(childGroup.settings, { settingName });\n\n              setting.assigneeGroupPermission = this.assigneeGroup;\n\n              return this.getSettingWithValue(setting, settingValue);\n            } else {\n              return null;\n            }\n          })\n        );\n\n        if (childSettings$.length) {\n          saveRequests$.push(\n            forkJoin(childSettings$).pipe(\n              switchMap((childSettings: IAdminComponentSetting[]) =>\n                this.rxAdminSettingsService.updateComponentSettings(\n                  `${childGroup.name}/${this.childOwnerKeyValue}`,\n                  childSettings\n                )\n              )\n            )\n          );\n        }\n      } else {\n        childSettings$ = childSettings$.concat(\n          _map(childGroup.settingValues, (settingValue, settingName) => {\n            const propertyConfig = find(childGroup.propertyConfigs, { name: settingName });\n\n            if (!isNull(settingValue) && propertyConfig && !propertyConfig.isDisabled) {\n              const setting: IAdminComponentSetting = {\n                componentName: childGroup.name,\n                parentComponentName: this.componentName,\n                ownerKeyValue2: this.ownerKeyValue,\n                settingName,\n                assigneeGroupPermission: this.assigneeGroup\n              } as IAdminComponentSetting;\n\n              return this.getSettingWithValue(setting, settingValue);\n            } else {\n              return null;\n            }\n          }).filter(Boolean)\n        );\n\n        if (childSettings$.length) {\n          saveRequests$.push(\n            forkJoin(childSettings$).pipe(\n              switchMap((childSettings: IAdminComponentSetting[]) =>\n                this.rxAdminSettingsService.createComponentSettings(\n                  `${childGroup.name}/${this.ownerKeyValue}`,\n                  childSettings\n                )\n              )\n            )\n          );\n        }\n      }\n    }\n\n    if (saveRequests$.length) {\n      this.busy.emit(true);\n\n      forkJoin(saveRequests$)\n        .pipe(\n          catchError((err) => {\n            this.busy.emit(false);\n\n            return throwError(err);\n          })\n        )\n        .subscribe(() => {\n          this.rxNotificationService.addSuccessMessage('Settings saved successfully.');\n          this.forms.forEach((form) => form.formGroup.markAsPristine());\n\n          this.busy.emit(false);\n\n          this.save.emit();\n        });\n    }\n  }\n\n  isAbleToSave(): boolean {\n    return (\n      this.forms &&\n      every(this.forms.toArray(), (form) => form.formGroup.valid) &&\n      this.forms.some((form) => form.formGroup.dirty)\n    );\n  }\n\n  resetSettings(): void {\n    this.rxModalService\n      .confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.translateService.instant('com.bmc.arsys.rx.client.admin.reset-confirmation.message')\n      })\n      .then((response) => {\n        if (response) {\n          chain(this.groups)\n            .reject((group) => isEmpty(group.settingValues))\n            .forEach((group) => {\n              const settingValues = cloneDeep(group.settingValues);\n\n              forEach(group.propertyConfigs, (propertyConfig) => {\n                if (propertyConfig.dataType === RX_ADMIN.settingResourceTypes.attachment) {\n                  settingValues[propertyConfig.name] = propertyConfig.defaultValue\n                    ? [\n                        this.rxAdminFileUtilityService.convertBase64ToFile(\n                          propertyConfig.defaultValue,\n                          RX_ADMIN.defaultImages[propertyConfig.name].name,\n                          RX_ADMIN.defaultImages[propertyConfig.name].type\n                        )\n                      ]\n                    : null;\n                } else {\n                  settingValues[propertyConfig.name] = propertyConfig.defaultValue;\n                }\n              });\n\n              group.settingValues = settingValues;\n            })\n            .value();\n\n          this.forms.forEach((form) => form.formGroup.markAsDirty());\n        }\n      });\n  }\n\n  onCancel(): void {\n    this.closeEditor.emit();\n  }\n\n  canClose(): boolean {\n    return !(this.dialogApi?.isDirty() || this.forms?.some((form) => form.formGroup.dirty));\n  }\n}\n","<adapt-accordion [multiselect]=\"true\" [class.dp-body]=\"isInDockedPanel\">\n  <adapt-accordion-tab\n    *ngFor=\"let commonSettingsGroup of groups; let $index = index\"\n    [isOpen]=\"$index === 0\"\n    [title]=\"commonSettingsGroup.name\"\n    [disabled]=\"isNew && commonSettingsGroup.isComponent && !isChildSetting\"\n  >\n    <div class=\"property-controls\" *ngIf=\"!commonSettingsGroup.supportsMultiple || isChildSetting\">\n      <rx-form-builder\n        [config]=\"[{ controls: commonSettingsGroup.propertyConfigs }]\"\n        (modelChange)=\"onModelChange($event, commonSettingsGroup)\"\n        [model]=\"commonSettingsGroup.settingValues\"\n        *ngIf=\"commonSettingsGroup.settingValues\"\n      ></rx-form-builder>\n    </div>\n\n    <div *ngIf=\"commonSettingsGroup.supportsMultiple && commonSettingsGroup.recordGridConfig && !isChildSetting\">\n      <button\n        *ngIf=\"createPermission\"\n        adapt-button\n        type=\"button\"\n        class=\"px-0\"\n        btn-type=\"tertiary\"\n        (click)=\"addNewSetting(commonSettingsGroup)\"\n      >\n        <span class=\"d-icon-plus_circle\"></span>\n        {{ 'com.bmc.arsys.rx.client.admin.add-new-setting.label' | translate }}\n      </button>\n      <rx-record-grid [config]=\"commonSettingsGroup.recordGridConfig\"></rx-record-grid>\n    </div>\n  </adapt-accordion-tab>\n</adapt-accordion>\n\n<div\n  [ngClass]=\"{\n    'justify-content-start': !isInDockedPanel,\n    'justify-content-end': isInDockedPanel,\n    'dp-footer': isInDockedPanel\n  }\"\n  class=\"pt-3\"\n>\n  <button\n    adapt-button\n    *ngIf=\"isSettingsActionsAvailable && createPermission\"\n    class=\"mr-2\"\n    btn-type=\"primary\"\n    type=\"button\"\n    [disabled]=\"!isAbleToSave()\"\n    (click)=\"saveSettings()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button\n    adapt-button\n    *ngIf=\"isSettingsActionsAvailable && createPermission\"\n    btn-type=\"secondary\"\n    type=\"button\"\n    (click)=\"resetSettings()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.admin.reset.label' | translate }}\n  </button>\n\n  <button adapt-button class=\"ml-2\" btn-type=\"secondary\" type=\"button\" *ngIf=\"isInDockedPanel\" (click)=\"onCancel()\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\nimport { DismissReasons, DockedPanelContext } from '@bmc-ux/adapt-angular';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { cloneDeep } from 'lodash';\nimport { NEVER, Observable, Subscription } from 'rxjs';\nimport { ICommonSettingsGroup } from '../admin-common-settings/admin-common-settings.types';\nimport { RxAdminCommonSettingsService } from '../services/admin-common-settings.service';\nimport { IGetRecordGridConfigParams, IOpenSettingsDetailsParams } from '../services/admin-common-settings.types';\nimport { IRecordGridConfig } from '@helix/platform/view/components';\n\n@Component({\n  selector: 'rx-admin-common-settings-blade',\n  templateUrl: './admin-common-settings-blade.component.html',\n  styleUrls: ['./admin-common-settings-blade.component.scss']\n})\nexport class AdminCommonSettingsBladeComponent extends RxModalClass implements OnInit {\n  @ViewChild('editor')\n  adminCommonSettingsEditorComponent;\n\n  groups: ICommonSettingsGroup[];\n  isNew: boolean;\n  ownerKeyValue: string;\n  childOwnerKeyValue: string;\n  componentName: string;\n  isChildSetting: boolean;\n  busySubscription: Subscription = null;\n\n  constructor(\n    protected context: DockedPanelContext,\n    protected injector: Injector,\n    protected rxAdminCommonSettingsService: RxAdminCommonSettingsService\n  ) {\n    super(context, injector);\n\n    this.getRecordGridConfig = this.getRecordGridConfig.bind(this);\n    this.openSettingsDetails = this.openSettingsDetails.bind(this);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    const data = this.context.getData();\n\n    this.groups = cloneDeep(data.config.groups);\n    this.isNew = data.config.isNew;\n    this.ownerKeyValue = data.config.ownerKeyValue;\n    this.childOwnerKeyValue = data.config.childOwnerKeyValue;\n    this.componentName = data.config.componentName;\n    this.isChildSetting = data.config.isChildSetting;\n  }\n\n  isDirty(): boolean {\n    return this.adminCommonSettingsEditorComponent ? !this.adminCommonSettingsEditorComponent.canClose() : false;\n  }\n\n  onCloseEditor(): void {\n    this.context.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  onBusy(isBusy: boolean): void {\n    if (isBusy) {\n      this.busySubscription = NEVER.subscribe();\n    } else {\n      this.busySubscription?.unsubscribe();\n    }\n  }\n\n  getRecordGridConfig(options: IGetRecordGridConfigParams): Observable<IRecordGridConfig> {\n    return this.rxAdminCommonSettingsService.getRecordGridConfig(options);\n  }\n\n  openSettingsDetails(options: IOpenSettingsDetailsParams): Promise<any> {\n    return this.rxAdminCommonSettingsService.openSettingsDetails(options);\n  }\n\n  onSave(): void {\n    this.context.close(null);\n  }\n}\n","<rx-admin-settings [busy]=\"busySubscription\">\n  <rx-admin-common-settings-editor\n    #editor\n    [componentName]=\"componentName\"\n    [isNew]=\"isNew\"\n    [groups]=\"groups\"\n    [isChildSetting]=\"isChildSetting\"\n    [ownerKeyValue]=\"ownerKeyValue\"\n    [childOwnerKeyValue]=\"childOwnerKeyValue\"\n    [createPermission]=\"true\"\n    [getRecordGridConfig]=\"getRecordGridConfig\"\n    [openSettingsDetails]=\"openSettingsDetails\"\n    (closeEditor)=\"onCloseEditor()\"\n    (busy)=\"onBusy($event)\"\n    (save)=\"onSave()\"\n  ></rx-admin-common-settings-editor>\n</rx-admin-settings>\n","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { IAdminComponentDefinition, IPlainObject, RxAdminSettingsService } from '@helix/platform/shared/api';\nimport { IRecordGridConfig, RecordGridComponent } from '@helix/platform/view/components';\nimport { flatten, forEach } from 'lodash';\nimport { forkJoin, NEVER, Observable, of, ReplaySubject, Subject, Subscription } from 'rxjs';\nimport { filter, map, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport { AdminCommonSettingsEditorComponent } from '../admin-common-settings-editor/admin-common-settings-editor.component';\nimport { RxAdminCommonSettingsService } from '../services/admin-common-settings.service';\nimport { ICommonSettingsGroup, ICommonSettingsState } from './admin-common-settings.types';\nimport { IGetRecordGridConfigParams, IOpenSettingsDetailsParams } from '../services/admin-common-settings.types';\nimport { IDialogApi, RxModalService } from '@helix/platform/ui-kit';\n\n@Component({\n  selector: 'rx-admin-common-settings',\n  templateUrl: './admin-common-settings.component.html'\n})\nexport class AdminCommonSettingsComponent implements OnInit, OnDestroy {\n  @Input()\n  componentName$: Observable<string>;\n\n  @ViewChild(RecordGridComponent)\n  recordGridComponent: RecordGridComponent;\n\n  @ViewChild(AdminCommonSettingsEditorComponent)\n  adminCommonSettingsEditorComponent: AdminCommonSettingsEditorComponent;\n\n  private componentName: string;\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  busySubscription: Subscription;\n  state: ICommonSettingsState;\n  private dialogApi: any;\n  navigationMenuLabel: string;\n\n  constructor(\n    private rxModalService: RxModalService,\n    private rxAdminSettingsService: RxAdminSettingsService,\n    private rxAdminCommonSettingsService: RxAdminCommonSettingsService\n  ) {\n    this.getRecordGridConfig = this.getRecordGridConfig.bind(this);\n    this.openSettingsDetails = this.openSettingsDetails.bind(this);\n  }\n\n  ngOnInit(): void {\n    let busySubject: Subject<void>;\n\n    this.componentName$\n      .pipe(\n        filter(Boolean),\n        tap((componentName: string) => {\n          busySubject = new Subject<void>();\n\n          this.componentName = componentName;\n          this.state = null;\n          this.busySubscription = busySubject.pipe(take(1)).subscribe();\n        }),\n        switchMap((componentName: string) => this.rxAdminSettingsService.getComponentDefinition(componentName)),\n        tap((adminComponentDefinition: IAdminComponentDefinition) => {\n          this.navigationMenuLabel = adminComponentDefinition.header;\n        }),\n        switchMap((adminComponentDefinition: IAdminComponentDefinition) => {\n          const state: ICommonSettingsState = {\n            headerLabel: adminComponentDefinition.header,\n            createPermission: adminComponentDefinition.createPermission,\n            componentName: adminComponentDefinition.compName,\n            supportsMultiple: false,\n            commonSettingGroups: []\n          };\n\n          const commonSettingGroups$ = [];\n\n          forEach(adminComponentDefinition.groups, (group) => {\n            const propertyConfigs$ = [];\n\n            const commonSettingGroup: ICommonSettingsGroup = {\n              name: group.name,\n              supportsMultiple: group.supportsMultiple,\n              isComponent: group.component,\n              settings: []\n            } as ICommonSettingsGroup;\n\n            if (commonSettingGroup.isComponent) {\n              propertyConfigs$.push(\n                this.rxAdminSettingsService.getComponentDefinition(group.name).pipe(\n                  map((childAdminComponentDefinition) => {\n                    const childGroup = childAdminComponentDefinition.groups[0];\n\n                    if (commonSettingGroup.supportsMultiple) {\n                      commonSettingGroup.controls = childGroup.controls;\n                    }\n\n                    return childGroup.controls.map((control) =>\n                      this.rxAdminCommonSettingsService.createPropertyConfig(control)\n                    );\n                  })\n                )\n              );\n            } else {\n              forEach(group.controls, (control) => {\n                propertyConfigs$.push(of(this.rxAdminCommonSettingsService.createPropertyConfig(control)));\n              });\n            }\n\n            commonSettingGroups$.push(\n              forkJoin(propertyConfigs$).pipe(\n                map((propertyConfigs: IPlainObject[]) => {\n                  commonSettingGroup.propertyConfigs = flatten(propertyConfigs);\n\n                  return commonSettingGroup;\n                })\n              )\n            );\n          });\n\n          return commonSettingGroups$.length\n            ? forkJoin(commonSettingGroups$).pipe(\n                map((commonSettingGroups: ICommonSettingsGroup[]) => {\n                  state.commonSettingGroups = commonSettingGroups;\n\n                  if (adminComponentDefinition.supportsMultiple) {\n                    state.supportsMultiple = true;\n\n                    const controls = flatten(\n                      adminComponentDefinition.groups.filter((group) => !group.component).map((group) => group.controls)\n                    );\n\n                    state.recordGridConfig = this.rxAdminCommonSettingsService\n                      .getRecordGridConfig({\n                        componentName: state.componentName,\n                        controls,\n                        getCurrentGridFn: this.getCurrentGrid.bind(this),\n                        createPermission: state.createPermission,\n                        groups: state.commonSettingGroups,\n                        bladeTitle: state.headerLabel,\n                        ownerKeyValue: null,\n                        groupName: null,\n                        onDialogApiReady: (dialogApi: IDialogApi) => (this.dialogApi = dialogApi)\n                      })\n                      .pipe(\n                        map((recordGridConfig) => ({\n                          ...recordGridConfig,\n                          styles: 'h-auto flex-fill mw-100'\n                        }))\n                      );\n                  }\n\n                  return state;\n                })\n              )\n            : of(null);\n        }),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe((state: ICommonSettingsState) => {\n        this.state = state;\n\n        busySubject.next();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  addNewSetting(): void {\n    this.rxAdminCommonSettingsService\n      .openSettingsDetails({\n        title: this.state.headerLabel,\n        componentName: this.componentName,\n        groups: this.state.commonSettingGroups,\n        onDialogApiReady: (dialogApi: IDialogApi) => (this.dialogApi = dialogApi)\n      })\n      .then(() => {\n        this.dialogApi = null;\n        this.recordGridComponent.api.refresh().subscribe();\n      })\n      .catch(() => {\n        this.dialogApi = null;\n      });\n  }\n\n  onBusy(isBusy: boolean): void {\n    if (isBusy) {\n      this.busySubscription = NEVER.subscribe();\n    } else {\n      this.busySubscription?.unsubscribe();\n    }\n  }\n\n  getRecordGridConfig(options: IGetRecordGridConfigParams): Observable<IRecordGridConfig> {\n    return this.rxAdminCommonSettingsService.getRecordGridConfig(options);\n  }\n\n  openSettingsDetails(options: IOpenSettingsDetailsParams): Promise<any> {\n    return this.rxAdminCommonSettingsService.openSettingsDetails(options);\n  }\n\n  private getCurrentGrid(): RecordGridComponent {\n    return this.recordGridComponent;\n  }\n\n  canClose(): boolean {\n    return Boolean(this.adminCommonSettingsEditorComponent?.canClose() ?? !this.dialogApi?.isDirty());\n  }\n}\n","<rx-admin-settings [busy]=\"busySubscription\" [header]=\"state?.headerLabel || navigationMenuLabel\">\n  <div *ngIf=\"!state\" class=\"d-flex align-items-center justify-content-center h-100\">\n    <adapt-empty-state\n      [type]=\"'config'\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.no-settings-available.message' | translate }}\"\n    ></adapt-empty-state>\n  </div>\n\n  <div *ngIf=\"state\" class=\"d-flex flex-column align-items-start flex-fill\">\n    <ng-container *ngIf=\"state.supportsMultiple\">\n      <button *ngIf=\"state.createPermission\" adapt-button type=\"button\" btn-type=\"tertiary\" (click)=\"addNewSetting()\">\n        <span class=\"d-icon-plus_circle\"></span>\n        {{ 'com.bmc.arsys.rx.client.admin.add-new-setting.label' | translate }}\n      </button>\n\n      <rx-record-grid [config]=\"state.recordGridConfig\"></rx-record-grid>\n    </ng-container>\n\n    <div class=\"flex-fill w-100\" *ngIf=\"!state.supportsMultiple\">\n      <rx-admin-common-settings-editor\n        [componentName]=\"state.componentName\"\n        [groups]=\"state.commonSettingGroups\"\n        [isNew]=\"false\"\n        [createPermission]=\"state.createPermission\"\n        [getRecordGridConfig]=\"getRecordGridConfig\"\n        [openSettingsDetails]=\"openSettingsDetails\"\n        (busy)=\"onBusy($event)\"\n      ></rx-admin-common-settings-editor>\n    </div>\n  </div>\n</rx-admin-settings>\n","import { Injectable } from '@angular/core';\nimport { AdaptTreeNodeTyped } from '@bmc-ux/adapt-angular';\nimport { IAdminNavigationMenuItem, RxAdminSettingsService } from '@helix/platform/shared/api';\nimport { uniqueId } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class RxAdminSettingsExplorerService {\n  constructor(private rxAdminSettingsService: RxAdminSettingsService) {}\n\n  getNavigationTreeConfig(): Observable<AdaptTreeNodeTyped<IAdminNavigationMenuItem>[]> {\n    return this.rxAdminSettingsService.getAdminNavigationMenuItems().pipe(map(this.buildTreeNodes.bind(this)));\n  }\n\n  private buildTreeNodes(\n    administrationNavigationMenuItems: IAdminNavigationMenuItem[],\n    parent?: AdaptTreeNodeTyped<IAdminNavigationMenuItem>\n  ): AdaptTreeNodeTyped<IAdminNavigationMenuItem>[] {\n    return (administrationNavigationMenuItems || [])\n      .filter((navigationMenuItem) => navigationMenuItem.compName !== 'com.bmc.arsys.rx.settings')\n      .sort((item1, item2) => item1.label.localeCompare(item2.label))\n      .map((navigationMenuItem) => {\n        const treeMenuItem: AdaptTreeNodeTyped<IAdminNavigationMenuItem> = {\n          label: navigationMenuItem.label,\n          data: navigationMenuItem,\n          expanded: false,\n          selectable: Boolean(navigationMenuItem.guid),\n          key: uniqueId()\n        };\n\n        treeMenuItem.children =\n          navigationMenuItem.items && navigationMenuItem.items.length\n            ? this.buildTreeNodes(navigationMenuItem.items, treeMenuItem)\n            : [];\n\n        if (parent) {\n          treeMenuItem.parent = parent;\n        }\n\n        return treeMenuItem;\n      });\n  }\n}\n","export enum AdminSettingViewType {\n  RuntimeView = 'runtimeView',\n  SharedView = 'sharedView'\n}\n\nexport enum AdminSettingLinkType {\n  InBundle = 'inBundle',\n  External = 'external'\n}\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AdaptTreeNodeTyped, TreeTexts, TreeWrap } from '@bmc-ux/adapt-angular';\nimport {\n  IAdminNavigationMenuItem,\n  IComponentCanDeactivate,\n  RX_APPLICATION,\n  RxAdminSettingsService,\n  RxBundleCacheService,\n  RxComponentCanDeactivateGuard,\n  RxGlobalCacheService,\n  RxPageTitleService\n} from '@helix/platform/shared/api';\nimport { RxUtilityModalsService } from '@helix/platform/ui-kit';\nimport { IRuntimeViewConfiguration, RxRuntimeViewRegistryService } from '@helix/platform/view/runtime';\nimport { TranslateService } from '@ngx-translate/core';\nimport { every, forEach } from 'lodash';\nimport { BehaviorSubject, combineLatest, NEVER, ReplaySubject, Subscription } from 'rxjs';\nimport { filter, pluck, takeUntil } from 'rxjs/operators';\nimport { AdminCommonSettingsComponent } from '../admin-common-settings/admin-common-settings.component';\nimport { RxAdminSettingsExplorerService } from '../services/admin-settings-explorer.service';\nimport { AdminSettingLinkType, AdminSettingViewType } from './admin-settings-explorer.types';\nimport { RxGainsightConfiguratorService } from '@helix/platform/shared/components';\n\n@Component({\n  selector: 'rx-admin-settings-explorer',\n  templateUrl: 'admin-settings-explorer.component.html',\n  styleUrls: ['./admin-settings-explorer.component.scss'],\n  providers: [RxAdminSettingsExplorerService]\n})\nexport class AdminSettingsExplorerComponent implements OnInit, OnDestroy, IComponentCanDeactivate {\n  @ViewChild(AdminCommonSettingsComponent)\n  adminCommonSettingsComponent: AdminCommonSettingsComponent;\n\n  navigationTree: AdaptTreeNodeTyped<IAdminNavigationMenuItem>[];\n  selectedTreeNodeValue: AdaptTreeNodeTyped<IAdminNavigationMenuItem>;\n  runtimeViewConfig: IRuntimeViewConfiguration;\n  adminSettingViewType = AdminSettingViewType;\n  viewType: AdminSettingViewType;\n  componentName$ = new BehaviorSubject<string>('');\n  treeWrap: TreeWrap = TreeWrap.WrapAll;\n  busySubscription: Subscription;\n\n  emptyStateLabel = this.translateService.instant(\n    'com.bmc.arsys.rx.client.admin.admin-settings-explorer.select-from-settings.label'\n  );\n\n  texts: TreeTexts = {\n    filterPlaceholder: this.translateService.instant('com.bmc.arsys.rx.client.common.search.label')\n  };\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private currentSettingGuid: string;\n\n  get selectedTreeNode(): AdaptTreeNodeTyped<IAdminNavigationMenuItem> {\n    return this.selectedTreeNodeValue;\n  }\n\n  set selectedTreeNode(node: AdaptTreeNodeTyped<IAdminNavigationMenuItem>) {\n    if (node.data.guid) {\n      const prevGuid = this.currentSettingGuid;\n\n      this.currentSettingGuid = node.data.guid;\n\n      this.router\n        .navigate([node.data.guid], { relativeTo: this.activatedRoute.parent })\n        .then((isNavigationSucceeded) => {\n          if (isNavigationSucceeded) {\n            this.selectedTreeNodeValue = node;\n            this.displayView(node.data);\n          } else {\n            this.currentSettingGuid = prevGuid;\n          }\n        });\n    }\n  }\n\n  constructor(\n    private rxAdminSettingsExplorerService: RxAdminSettingsExplorerService,\n    private rxAdminSettingsService: RxAdminSettingsService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private router: Router,\n    private rxBundleCacheService: RxBundleCacheService,\n    private activatedRoute: ActivatedRoute,\n    private rxPageTitleService: RxPageTitleService,\n    private rxRuntimeViewRegistryService: RxRuntimeViewRegistryService,\n    private rxUtilityModalsService: RxUtilityModalsService,\n    private rxComponentCanDeactivateGuard: RxComponentCanDeactivateGuard,\n    private changeDetector: ChangeDetectorRef,\n    public translateService: TranslateService,\n    private rxGainsightConfiguratorService: RxGainsightConfiguratorService\n  ) {}\n\n  ngOnInit(): void {\n    this.rxComponentCanDeactivateGuard.setPageComponent(this);\n\n    combineLatest([\n      this.activatedRoute.params.pipe(pluck('settingGuid')),\n      this.rxAdminSettingsExplorerService.getNavigationTreeConfig()\n    ])\n      .pipe(\n        filter(([settingGuid, administrationNavigationTree]) => settingGuid !== this.currentSettingGuid),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(([settingGuid, administrationNavigationTree]) => {\n        if (!this.navigationTree) {\n          this.navigationTree = administrationNavigationTree;\n        }\n\n        this.currentSettingGuid = settingGuid;\n\n        if (settingGuid !== 'root' && this.navigationTree.length) {\n          this.selectedTreeNodeValue = this.findSelectedNode(settingGuid, this.navigationTree);\n\n          if (this.selectedTreeNodeValue) {\n            this.expandParentNodes(this.selectedTreeNodeValue);\n            this.displayView(this.selectedTreeNodeValue.data);\n          }\n        } else {\n          this.selectedTreeNodeValue = null;\n          this.viewType = null;\n          this.setPageTitle();\n        }\n      });\n\n    if (this.rxGlobalCacheService.applicationId === RX_APPLICATION.innovationStudioBundleId) {\n      this.rxGainsightConfiguratorService.updateGlobalContext({\n        subProductLevel1: {\n          name: 'Design'\n        },\n        subProductLevel2: {\n          name: 'Administration'\n        }\n      });\n    } else {\n      // Clear the global context for runtime administration\n      this.rxGainsightConfiguratorService.removeGlobalContext(null);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n    this.rxComponentCanDeactivateGuard.setPageComponent(null);\n\n    this.rxGainsightConfiguratorService.removeGlobalContext(['subProductLevel2']);\n  }\n\n  canDeactivate(): boolean {\n    if (this.adminCommonSettingsComponent) {\n      return this.adminCommonSettingsComponent.canClose();\n    } else {\n      return every(this.rxRuntimeViewRegistryService.getAll(), (runtimeView) => runtimeView.canClose());\n    }\n  }\n\n  confirmDeactivation(): Promise<boolean> {\n    return this.rxUtilityModalsService.confirmUnsavedChanges();\n  }\n\n  onBeforeLoad(): void {\n    this.busySubscription = NEVER.subscribe();\n\n    // workaround: run changeDetector to avoid the ExpressionChangedAfterItHasBeenCheckedError\n    this.changeDetector.detectChanges();\n  }\n\n  onAfterLoad(): void {\n    this.busySubscription?.unsubscribe();\n  }\n\n  private setPageTitle(componentSettingLabel?: string): void {\n    const titleParts = [\n      componentSettingLabel,\n      this.rxGlobalCacheService.applicationId === RX_APPLICATION.innovationStudioBundleId\n        ? this.translateService.instant('com.bmc.arsys.rx.client.common.administration.label')\n        : this.translateService.instant('com.bmc.arsys.rx.client.common.settings.label')\n    ];\n\n    this.rxPageTitleService.set(titleParts, this.rxGlobalCacheService.applicationId);\n  }\n\n  private findSelectedNode(\n    settingGuid: string,\n    sourceTree: AdaptTreeNodeTyped<IAdminNavigationMenuItem>[]\n  ): AdaptTreeNodeTyped<IAdminNavigationMenuItem> {\n    let selectedNode: AdaptTreeNodeTyped<IAdminNavigationMenuItem>;\n\n    forEach(sourceTree, (node) => {\n      if (node.data.guid === settingGuid) {\n        selectedNode = node;\n\n        return false;\n      } else {\n        selectedNode = this.findSelectedNode(settingGuid, node.children);\n\n        if (selectedNode) {\n          return false;\n        }\n      }\n    });\n\n    return selectedNode;\n  }\n\n  private expandParentNodes(node: AdaptTreeNodeTyped<IAdminNavigationMenuItem>): void {\n    if (node.parent) {\n      node.parent.expanded = true;\n\n      if (node.parent.parent) {\n        this.expandParentNodes(node.parent);\n      }\n    }\n  }\n\n  private displayView(adminNavigationMenuItem: IAdminNavigationMenuItem): void {\n    this.setPageTitle(adminNavigationMenuItem.label);\n    this.rxBundleCacheService.bundleId = adminNavigationMenuItem.defaultBundleScope;\n\n    if (adminNavigationMenuItem.isCustom) {\n      if (adminNavigationMenuItem.linkType === AdminSettingLinkType.InBundle) {\n        this.viewType = AdminSettingViewType.RuntimeView;\n        this.runtimeViewConfig = { viewDefinitionName: adminNavigationMenuItem.registeredModuleName };\n      } else if (adminNavigationMenuItem.linkType === AdminSettingLinkType.External) {\n        window.open(adminNavigationMenuItem.externalLink, '_blank');\n        this.viewType = null;\n\n        this.emptyStateLabel = this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.external-settings.empty-state.label'\n        );\n      }\n    } else {\n      this.componentName$.next(adminNavigationMenuItem.compName);\n      this.viewType = AdminSettingViewType.SharedView;\n    }\n  }\n}\n","<div class=\"position-relative busy-indicator\">\n  <rx-busy-indicator\n    [options]=\"{\n      busy: busySubscription,\n      loaderType: 'lineLoader',\n      delay: 250,\n      backdrop: false,\n      message: null\n    }\"\n  >\n  </rx-busy-indicator>\n</div>\n\n<adapt-sidebar [openedId]=\"0\" [adjustMainContainerWidth]=\"true\">\n  <adapt-sidebar-item\n    [iconClass]=\"'d-icon-layout_preview'\"\n    [headerTitle]=\"'com.bmc.arsys.rx.client.common.settings.label' | translate\"\n    [aria-label]=\"'com.bmc.arsys.rx.client.common.settings.label' | translate\"\n  >\n    <adapt-tree\n      *ngIf=\"navigationTree\"\n      [value]=\"navigationTree\"\n      selectionMode=\"single\"\n      [(selection)]=\"selectedTreeNode\"\n      [filter]=\"true\"\n      [texts]=\"texts\"\n      [wrap]=\"treeWrap\"\n    >\n    </adapt-tree>\n  </adapt-sidebar-item>\n\n  <div class=\"main rx-administration-settings-view\">\n    <rx-runtime-view\n      *ngIf=\"viewType === adminSettingViewType.RuntimeView\"\n      [configuration]=\"runtimeViewConfig\"\n      (beforeLoad)=\"onBeforeLoad()\"\n      (afterLoad)=\"onAfterLoad()\"\n    ></rx-runtime-view>\n\n    <rx-admin-common-settings\n      *ngIf=\"viewType === adminSettingViewType.SharedView\"\n      [componentName$]=\"componentName$\"\n    ></rx-admin-common-settings>\n\n    <div *ngIf=\"!viewType\" class=\"d-flex align-items-center justify-content-center h-100\">\n      <adapt-empty-state [type]=\"'config'\" [label]=\"emptyStateLabel\"></adapt-empty-state>\n    </div>\n  </div>\n</adapt-sidebar>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminSettingsExplorerComponent } from './admin-settings-explorer/admin-settings-explorer.component';\nimport { RxComponentCanDeactivateGuard } from '@helix/platform/shared/api';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'root',\n    pathMatch: 'full'\n  },\n  {\n    path: ':settingGuid',\n    component: AdminSettingsExplorerComponent,\n    pathMatch: 'full',\n    canDeactivate: [RxComponentCanDeactivateGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminComponentsRoutingModule {}\n","export const RX_ISSUES = {\n  issuesRecordDefinitionName: 'Reported Errors',\n\n  issuesRecordFieldIds: {\n    operationId: 70100,\n    applicationName: 70101,\n    messageType: 70102,\n    errorNumber: 70103,\n    errorMessage: 70104,\n    caseId: 70106,\n    caseStatus: 70107,\n    relatedRecordGuid: 70108,\n    userDescription: 70109,\n    submittedToSupportDate: 70110,\n    caseGuid: 70111,\n    caseStatusRefreshDate: 70112\n  },\n\n  statusOptionValues: {\n    new: 0,\n    submitted: 1\n  },\n\n  linkExpiredError: {\n    code: 12206,\n    message: 'com.bmc.arsys.rx.client.admin.application-issues.link-expired-error.message'\n  },\n\n  notificationMessages: {\n    caseStatusRefreshed: 'com.bmc.arsys.rx.client.admin.application-issues.case-status-refreshed.message',\n    duplicateIssuesClosed: 'com.bmc.arsys.rx.client.admin.application-issues.duplicate-issues-closed.message',\n    caseSubmitted: 'com.bmc.arsys.rx.client.admin.application-issues.case-submitted.message'\n  }\n};\n","import { Component, OnInit } from '@angular/core';\nimport { DismissReasons, DockedPanelContext } from '@bmc-ux/adapt-angular';\nimport { RowDataItem } from '@bmc-ux/adapt-table';\nimport { RX_ISSUES } from '../application-issues.constant';\nimport { IPlainObject } from '@helix/platform/shared/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\n\n@Component({\n  selector: 'rx-issue-detail',\n  templateUrl: './issue-details.component.html'\n})\nexport class IssueDetailsComponent implements OnInit {\n  issueFields: RowDataItem;\n  fieldIds: IPlainObject;\n  coreFieldIds: IPlainObject;\n\n  constructor(private dockedPanelContext: DockedPanelContext) {}\n\n  ngOnInit(): void {\n    this.issueFields = this.dockedPanelContext.getData();\n    this.fieldIds = RX_ISSUES.issuesRecordFieldIds;\n    this.coreFieldIds = RX_RECORD_DEFINITION.coreFieldIds;\n  }\n\n  close(): void {\n    this.dockedPanelContext.close(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"dp-body\">\n  <div *ngIf=\"issueFields[fieldIds.caseId]\">\n    <h6 class=\"text-tertiary\" rx-id=\"case-id\">\n      {{ 'com.bmc.arsys.rx.client.admin.application-issues.case-id.title' | translate }}\n    </h6>\n    <p class=\"text-default\">\n      {{ issueFields[fieldIds.caseId] }}\n    </p>\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <h6 class=\"title-item text-tertiary\" rx-id=\"case-status\">\n          {{ 'com.bmc.arsys.rx.client.admin.application-issues.case-status.title' | translate }}\n        </h6>\n        <p class=\"text-default\">\n          {{ issueFields.selectionFieldOptionNamesById[fieldIds.caseStatus] }}\n        </p>\n      </div>\n      <div class=\"col-4\">\n        <h6 class=\"title-item text-tertiary\" rx-id=\"case-status-modified-date\">\n          {{ 'com.bmc.arsys.rx.client.admin.application-issues.case-status-refreshed-date.title' | translate }}\n        </h6>\n        <p class=\"text-default\">\n          {{ issueFields[fieldIds.caseStatusRefreshDate] | date: 'medium' }}\n        </p>\n      </div>\n      <div class=\"col-4\">\n        <h6 class=\"title-item text-tertiary\" rx-id=\"submitted-to-support-date\">\n          {{ 'com.bmc.arsys.rx.client.admin.application-issues.submitted-date.title' | translate }}\n        </h6>\n        <p class=\"text-default\">\n          {{ issueFields[fieldIds.submittedToSupportDate] | date: 'medium' }}\n        </p>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-4\">\n      <h6 class=\"title-item text-tertiary\" rx-id=\"issue-status\">\n        {{ 'com.bmc.arsys.rx.client.admin.application-issues.issue-status.title' | translate }}\n      </h6>\n      <p class=\"text-default\">\n        {{ issueFields.selectionFieldOptionNamesById[coreFieldIds.status] }}\n      </p>\n    </div>\n    <div class=\"col-4\">\n      <h6 class=\"title-item text-tertiary\" rx-id=\"reported-by\">\n        {{ 'com.bmc.arsys.rx.client.admin.application-issues.reported-by.title' | translate }}\n      </h6>\n      <p class=\"text-default\">\n        {{ issueFields[coreFieldIds.createdBy] }}\n      </p>\n    </div>\n    <div class=\"col-4\">\n      <h6 class=\"title-item text-tertiary\" rx-id=\"reported-date\">\n        {{ 'com.bmc.arsys.rx.client.admin.application-issues.reported-date.title' | translate }}\n      </h6>\n      <p class=\"text-default\">\n        {{ issueFields[coreFieldIds.createdDate] | date: 'medium' }}\n      </p>\n    </div>\n  </div>\n  <h6 class=\"title-item text-tertiary\" rx-id=\"application-name\">\n    {{ 'com.bmc.arsys.rx.client.admin.application-issues.application-name.title' | translate }}\n  </h6>\n  <p class=\"text-default\">\n    {{ issueFields[fieldIds.applicationName] }}\n  </p>\n  <h6 class=\"title-item text-tertiary\" rx-id=\"error-number\">\n    {{ 'com.bmc.arsys.rx.client.admin.application-issues.error-number.title' | translate }}\n  </h6>\n  <p class=\"text-default\">\n    {{ issueFields[fieldIds.errorNumber] }}\n  </p>\n  <h6 class=\"title-item text-tertiary\" rx-id=\"error-message\">\n    {{ 'com.bmc.arsys.rx.client.admin.application-issues.error-message.title' | translate }}\n  </h6>\n  <p class=\"text-default\">\n    {{ issueFields[fieldIds.errorMessage] }}\n  </p>\n  <h6 class=\"title-item text-tertiary\" rx-id=\"short-description\">\n    {{ 'com.bmc.arsys.rx.client.admin.application-issues.user-description.title' | translate }}\n  </h6>\n  <p class=\"text-default\">\n    {{ issueFields[fieldIds.userDescription] }}\n  </p>\n  <h6 class=\"title-item text-tertiary\" rx-id=\"operation-id\">\n    {{ 'com.bmc.arsys.rx.client.admin.application-issues.operation-id.title' | translate }}\n  </h6>\n  <p class=\"text-default\">\n    {{ issueFields[fieldIds.operationId] }}\n  </p>\n  <h6 class=\"title-item text-tertiary\" rx-id=\"guid\">\n    {{ 'com.bmc.arsys.rx.client.common.guid.label' | translate }}\n  </h6>\n  <p class=\"text-default\">\n    {{ issueFields[coreFieldIds.id] }}\n  </p>\n  <div *ngIf=\"issueFields[fieldIds.relatedRecordGuid]\">\n    <h6 class=\"title-item text-tertiary\" rx-id=\"related-record-guid\">\n      {{ 'com.bmc.arsys.rx.client.admin.application-issues.related-issue-guid.title' | translate }}\n    </h6>\n    <p class=\"text-default\">\n      {{ issueFields[fieldIds.relatedRecordGuid] }}\n    </p>\n  </div>\n</div>\n<div class=\"dp-footer\">\n  <button adapt-button btn-type=\"secondary\" class=\"mr-2\" rx-id=\"close-button\" (click)=\"close()\">\n    {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n  </button>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { RX_ISSUES } from '../application-issues.constant';\nimport { IRecordGridColumn, IRecordGridConfig, RecordGridComponent } from '@helix/platform/view/components';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { Observable, of } from 'rxjs';\nimport { AdaptDockedPanelService, DockedPanelContext } from '@bmc-ux/adapt-angular';\nimport { head, map } from 'lodash';\nimport { RxCommandFactoryService, RxNotificationService } from '@helix/platform/shared/api';\nimport { ColumnConfig, RowDataItem } from '@bmc-ux/adapt-table';\nimport { IssueDetailsComponent } from '../issue-details/issue-details.component';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-close-duplicate-issues',\n  templateUrl: './close-duplicate-issues.component.html'\n})\nexport class CloseDuplicateIssuesComponent implements OnInit {\n  @ViewChild('submittedIssuesGrid', { static: true })\n  submittedIssuesGrid: RecordGridComponent;\n\n  selectedIssuesData: RowDataItem[];\n  submittedIssuesGridConfiguration$: Observable<IRecordGridConfig>;\n  selectedIssuesGridColumns: ColumnConfig[] = [\n    {\n      field: `${RX_ISSUES.issuesRecordFieldIds.applicationName}`,\n      header: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.application-name.title')\n    },\n    {\n      field: `${RX_ISSUES.issuesRecordFieldIds.errorNumber}`,\n      header: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.error-number.title')\n    },\n    {\n      field: `${RX_ISSUES.issuesRecordFieldIds.errorMessage}`,\n      header: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.error-message.title'),\n      sortable: false\n    }\n  ];\n\n  constructor(\n    private adaptDockedPanelService: AdaptDockedPanelService,\n    private dockedPanelContext: DockedPanelContext,\n    private rxCommandFactoryService: RxCommandFactoryService,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit(): void {\n    this.selectedIssuesData = this.dockedPanelContext.getData();\n    this.submittedIssuesGridConfiguration();\n  }\n\n  private getSubmittedIssuesGridColumns(): IRecordGridColumn[] {\n    return [\n      {\n        fieldId: `${RX_ISSUES.issuesRecordFieldIds.applicationName}`,\n        index: 0,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.application-name.title')\n      },\n      {\n        fieldId: `${RX_ISSUES.issuesRecordFieldIds.errorNumber}`,\n        index: 1,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.error-number.title'),\n        clickable: true,\n        actions: [\n          {\n            name: (previousActionResult: any, lastActionRow: IRowDataItem) => this.showIssueDetails(lastActionRow)\n          }\n        ]\n      },\n      {\n        fieldId: `${RX_ISSUES.issuesRecordFieldIds.errorMessage}`,\n        index: 2,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.error-message.title')\n      },\n      {\n        fieldId: `${RX_RECORD_DEFINITION.coreFieldIds.createdDate}`,\n        index: 3,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.reported-date.title')\n      },\n      {\n        fieldId: `${RX_ISSUES.issuesRecordFieldIds.caseId}`,\n        index: 4,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.case-id.title')\n      }\n    ];\n  }\n\n  private submittedIssuesGridConfiguration(): void {\n    this.submittedIssuesGridConfiguration$ = of({\n      recordDefinitionName: RX_ISSUES.issuesRecordDefinitionName,\n      columns: this.getSubmittedIssuesGridColumns(),\n      filterExpression: `'${RX_RECORD_DEFINITION.coreFieldIds.status}' = \"${RX_ISSUES.statusOptionValues.submitted}\"`,\n      styles: 'flex-fill'\n    });\n  }\n\n  cancel(): void {\n    this.dockedPanelContext.close('');\n  }\n\n  closeSelectedIssues(): void {\n    const selection = head(this.submittedIssuesGrid.api.getSelectedRows());\n\n    this.rxCommandFactoryService\n      .forResourceType('com.bmc.arsys.rx.application.support.command.UpdateIssuesAsDuplicateCommand')\n      .execute({\n        recordId: selection[RX_RECORD_DEFINITION.coreFieldIds.id],\n        recordIds: map(this.dockedPanelContext.getData(), (record) => record[RX_RECORD_DEFINITION.coreFieldIds.id])\n      })\n      .subscribe(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant(RX_ISSUES.notificationMessages.duplicateIssuesClosed)\n        );\n        this.dockedPanelContext.close('close');\n      });\n  }\n\n  isCloseSelectedIssuesButtonDisabled(): boolean {\n    return this.submittedIssuesGrid.api.getSelectedRows().length === 0;\n  }\n\n  private showIssueDetails(rowData: RowDataItem): void {\n    this.adaptDockedPanelService.open({\n      title: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.issue-details.title'),\n      content: IssueDetailsComponent,\n      size: 'lg',\n      data: rowData\n    });\n  }\n}\n","<div class=\"dp-body d-flex flex-column\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h5 class=\"mt-0\">\n        {{ 'com.bmc.arsys.rx.client.admin.application-issues.selected-issues.title' | translate }}\n      </h5>\n      <adapt-table\n        rx-id=\"selected-issues-grid\"\n        [columns]=\"selectedIssuesGridColumns\"\n        [bordered]=\"true\"\n        [sortable]=\"true\"\n        [value]=\"selectedIssuesData\"\n      >\n      </adapt-table>\n    </div>\n  </div>\n  <div class=\"row flex-fill\">\n    <div class=\"col-12 d-flex flex-column\">\n      <h5>\n        {{ 'com.bmc.arsys.rx.client.admin.application-issues.duplicates.title' | translate }}\n      </h5>\n      <rx-record-grid\n        class=\"flex-fill\"\n        rx-id=\"submitted-issues-grid\"\n        #submittedIssuesGrid\n        [config]=\"submittedIssuesGridConfiguration$\"\n      ></rx-record-grid>\n    </div>\n  </div>\n</div>\n<div class=\"dp-footer\">\n  <button\n    rx-id=\"close-selected-issues-button\"\n    adapt-button\n    btn-type=\"primary\"\n    class=\"mr-2\"\n    [disabled]=\"isCloseSelectedIssuesButtonDisabled()\"\n    (click)=\"closeSelectedIssues()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.admin.application-issues.close-selected.label' | translate }}\n  </button>\n  <button adapt-button btn-type=\"secondary\" rx-id=\"cancel-button\" class=\"mr-2\" (click)=\"cancel()\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { IErrorReportingValue, IIssueReportingInfo, IIssuesResource } from './application-issues.types';\nimport { forkJoin, Observable } from 'rxjs';\nimport { RxSystemConfigurationService, ISystemConfiguration } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxApplicationIssuesService {\n  constructor(private httpClient: HttpClient, private rxSystemConfigurationService: RxSystemConfigurationService) {}\n\n  getIssueReportingInfo(): Observable<IIssueReportingInfo> {\n    return this.httpClient.get<IIssueReportingInfo>('/api/rx/application/oauth/token/IssueReporting');\n  }\n\n  getIssuesResource(): Observable<IIssuesResource> {\n    return forkJoin({\n      issueReportingInfo: this.getIssueReportingInfo(),\n      errorReportingInfo: this.rxSystemConfigurationService.getConfiguration(\n        'Error-Reporting-Service-Saas-Configuration'\n      )\n    }).pipe(\n      map((data) => {\n        const errorReportingValue: IErrorReportingValue = JSON.parse(data.errorReportingInfo.value as string);\n        const issuesResource: IIssuesResource = {\n          issueReportingInfo: data.issueReportingInfo,\n          errorReportingValue: errorReportingValue\n        };\n\n        return issuesResource;\n      })\n    );\n  }\n}\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActiveModalRef } from '@bmc-ux/adapt-angular';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxCommandFactoryService, RxNotificationService } from '@helix/platform/shared/api';\nimport { RX_MODAL, RxModalClass, RxModalService } from '@helix/platform/ui-kit';\nimport { RxStringService } from '@helix/platform/utils';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { map } from 'lodash';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { RX_ISSUES } from '../application-issues.constant';\nimport { RxApplicationIssuesService } from '../application-issues.service';\nimport { IIssueSeverity, IIssuesResource } from '../application-issues.types';\n\n@Component({\n  selector: 'rx-submit-issue-to-support',\n  templateUrl: './submit-issue-to-support.component.html'\n})\nexport class SubmitIssueToSupportComponent extends RxModalClass implements OnInit {\n  message: string;\n  issues: IRowDataItem[];\n  issueSeverityOptions: IIssueSeverity[] = [\n    {\n      name: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.application-issues.submit-issue-to-support.severity-critical.message'\n      ),\n      id: 1\n    },\n    {\n      name: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.application-issues.submit-issue-to-support.severity-high.message'\n      ),\n      id: 2\n    },\n    {\n      name: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.application-issues.submit-issue-to-support.severity-medium.message'\n      ),\n      id: 3\n    },\n    {\n      name: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.application-issues.submit-issue-to-support.severity-low.message'\n      ),\n      id: 4\n    }\n  ];\n  submitIssueForm: FormGroup;\n  supportCentralUrl: string;\n\n  constructor(\n    private activeModalRef: ActiveModalRef,\n    private formBuilder: FormBuilder,\n    private rxApplicationIssuesService: RxApplicationIssuesService,\n    private rxCommandFactoryService: RxCommandFactoryService,\n    private rxModalService: RxModalService,\n    private rxNotificationService: RxNotificationService,\n    private rxStringService: RxStringService,\n    private translateService: TranslateService,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.submitIssueForm = this.formBuilder.group({\n      description: [],\n      severity: []\n    });\n\n    this.issues = this.activeModalRef.getData().issues;\n\n    this.rxApplicationIssuesService.getIssuesResource().subscribe((issues: IIssuesResource) => {\n      const { errorReportingValue } = issues;\n\n      this.supportCentralUrl = errorReportingValue.supportCentralUrl;\n    });\n\n    this.message = this.translateService.instant(\n      'com.bmc.arsys.rx.client.admin.application-issues.reported-issues.title',\n      { numberOfIssues: this.issues.length }\n    );\n  }\n\n  isDirty(): boolean {\n    return this.submitIssueForm.dirty;\n  }\n\n  initSearchQuery(): void {\n    if (this.issues.length >= 1) {\n      const errorMessage = this.issues[0][RX_ISSUES.issuesRecordFieldIds.errorMessage];\n      const errorNumber = this.issues[0][RX_ISSUES.issuesRecordFieldIds.errorNumber];\n      const applicationName = this.issues[0][RX_ISSUES.issuesRecordFieldIds.applicationName];\n      const searchQuery = `?fromproduct=helixplatform#q=${errorMessage}%20OR%20${errorNumber}&t=All&sort=relevancy&f:@bmcproductname=[${applicationName}]`;\n\n      window.open(this.supportCentralUrl + searchQuery);\n    }\n  }\n\n  submit(): void {\n    this.rxCommandFactoryService\n      .forResourceType('com.bmc.arsys.rx.application.support.command.CreateSupportCaseCommand')\n      .execute({\n        description: this.submitIssueForm.get('description').value,\n        recordIds: map(this.issues, RX_RECORD_DEFINITION.coreFieldIds.id),\n        severity: this.submitIssueForm.get('severity').value[0].id\n      })\n      .pipe(\n        catchError((error) => {\n          if (error.error[0].messageNumber === RX_ISSUES.linkExpiredError.code) {\n            this.rxNotificationService.addErrorMessage(RX_ISSUES.linkExpiredError.message);\n          }\n\n          return throwError(error);\n        })\n      )\n      .subscribe(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant(RX_ISSUES.notificationMessages.caseSubmitted)\n        );\n        this.activeModalRef.close('cancel');\n      });\n  }\n\n  optionFormatter(severity: IIssueSeverity): string {\n    return severity.name;\n  }\n\n  cancel(): void {\n    if (this.submitIssueForm.get('description')) {\n      this.rxModalService\n        .confirm({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n          modalStyle: RX_MODAL.modalStyles.warning,\n          message: this.translateService.instant(\n            'com.bmc.arsys.rx.client.admin.application-issues.submit-issue-to-support.cancel-submission.message'\n          )\n        })\n        .then((data) => {\n          if (data) this.activeModalRef.close();\n        });\n    } else {\n      this.activeModalRef.close();\n    }\n  }\n}\n","<div class=\"modal-body pt-0\">\n  <div class=\"row bg-info\" *ngIf=\"supportCentralUrl\">\n    <button\n      adapt-button\n      rx-id=\"knowledge-articles-button\"\n      type=\"button\"\n      class=\"btn btn-secondary m-2\"\n      size=\"xtra-small\"\n      (click)=\"initSearchQuery()\"\n    >\n      <span class=\"d-icon-lightbulb_o p-2\" aria-hidden=\"true\"></span>\n      {{\n        'com.bmc.arsys.rx.client.admin.application-issues.submit-issue-to-support.knowledge-articles.title' | translate\n      }}\n    </button>\n    <span class=\"mt-3 text-default-inverse\" rx-id=\"message\">{{\n      'com.bmc.arsys.rx.client.admin.application-issues.submit-issue-to-support.search-knowledge-articles.message'\n        | translate\n    }}</span>\n  </div>\n  <div class=\"row mt-2\">\n    <div class=\"col-md-12\">\n      <p rx-id=\"message\">{{ message }}</p>\n    </div>\n  </div>\n  <form [formGroup]=\"submitIssueForm\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <adapt-rx-textarea\n          rx-id=\"description\"\n          formControlName=\"description\"\n          label=\"Description\"\n          placeholder=\"Enter Issue Description\"\n          rows=\"7\"\n          required\n        ></adapt-rx-textarea>\n      </div>\n    </div>\n\n    <div class=\"row mt-4 mb-4\">\n      <div class=\"col-4\">\n        <adapt-rx-select\n          rx-id=\"severity\"\n          formControlName=\"severity\"\n          [options]=\"issueSeverityOptions\"\n          [optionFormatter]=\"optionFormatter\"\n          label=\"Severity\"\n          required\n        ></adapt-rx-select>\n      </div>\n    </div>\n  </form>\n</div>\n<div class=\"modal-footer\">\n  <button\n    adapt-button\n    btn-type=\"primary\"\n    class=\"mr-2\"\n    rx-id=\"submit-case-button\"\n    [disabled]=\"submitIssueForm.invalid\"\n    (click)=\"submit()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.admin.application-issues.submit-issue-to-support.submit-case.label' | translate }}\n  </button>\n  <button rx-id=\"cancel-button\" adapt-button btn-type=\"secondary\" class=\"mr-2\" (click)=\"cancel()\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AdaptDockedPanelService } from '@bmc-ux/adapt-angular';\nimport { RowDataItem } from '@bmc-ux/adapt-table';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxCommandFactoryService, RxCurrentUserService, RxNotificationService } from '@helix/platform/shared/api';\nimport { RxModalService } from '@helix/platform/ui-kit';\nimport { RxDeleteRecordsViewActionService } from '@helix/platform/view/actions';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport {\n  IRecordGridActionButton,\n  IRecordGridColumn,\n  IRecordGridConfig,\n  RecordGridComponent\n} from '@helix/platform/view/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { map, noop, some } from 'lodash';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { RX_ISSUES } from './application-issues.constant';\nimport { RxApplicationIssuesService } from './application-issues.service';\nimport { IIssueReportingInfo, IIssuesResource } from './application-issues.types';\nimport { CloseDuplicateIssuesComponent } from './close-duplicate-issues/close-duplicate-issues.component';\nimport { IssueDetailsComponent } from './issue-details/issue-details.component';\nimport { SubmitIssueToSupportComponent } from './submit-issue-to-support/submit-issue-to-support.component';\n\n@Component({\n  selector: 'rx-admin-application-issues',\n  templateUrl: './application-issues.component.html',\n  styleUrls: ['./application-issues.component.scss']\n})\nexport class ApplicationIssuesAdminComponent implements OnInit {\n  @ViewChild('issuesRecordGrid')\n  issuesRecordGrid: RecordGridComponent;\n\n  issueReportingInfo: IIssueReportingInfo;\n  issuesRecordGridConfiguration$: Observable<IRecordGridConfig>;\n  isAdministrator: boolean;\n  supportCentralUrl: string;\n\n  constructor(\n    private adaptDockedPanelService: AdaptDockedPanelService,\n    private rxApplicationIssuesService: RxApplicationIssuesService,\n    private rxCommandFactoryService: RxCommandFactoryService,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxDeleteRecordsViewActionService: RxDeleteRecordsViewActionService,\n    private translateService: TranslateService,\n    private rxNotificationService: RxNotificationService,\n    private rxModalService: RxModalService\n  ) {\n    this.isAdministrator = this.rxCurrentUserService.isAdministrator();\n\n    this.issuesRecordGridConfiguration$ = new Observable((observer) => {\n      if (this.isAdministrator) {\n        observer.next({\n          recordDefinitionName: RX_ISSUES.issuesRecordDefinitionName,\n          columns: this.getIssueColumns(),\n          actionButtons: this.getActionButtons(),\n          styles: 'flex-fill'\n        });\n      }\n\n      observer.complete();\n    });\n  }\n\n  ngOnInit(): void {\n    this.rxApplicationIssuesService.getIssuesResource().subscribe((issues: IIssuesResource) => {\n      const { issueReportingInfo, errorReportingValue } = issues;\n\n      this.issueReportingInfo = issueReportingInfo;\n      this.supportCentralUrl = errorReportingValue.supportCentralUrl;\n    });\n  }\n\n  private getIssueColumns(): IRecordGridColumn[] {\n    return [\n      {\n        fieldId: `${RX_ISSUES.issuesRecordFieldIds.applicationName}`,\n        index: 0,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.application-name.title')\n      },\n      {\n        fieldId: `${RX_ISSUES.issuesRecordFieldIds.errorNumber}`,\n        index: 1,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.error-number.title'),\n        clickable: true,\n        actions: [\n          {\n            name: (previousActionResult: any, lastActionRow: IRowDataItem) => this.showIssueDetails(lastActionRow)\n          }\n        ]\n      },\n      {\n        fieldId: `${RX_ISSUES.issuesRecordFieldIds.errorMessage}`,\n        index: 2,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.error-message.title')\n      },\n      {\n        fieldId: `${RX_RECORD_DEFINITION.coreFieldIds.createdBy}`,\n        index: 3,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.reported-by.title')\n      },\n      {\n        fieldId: `${RX_RECORD_DEFINITION.coreFieldIds.createdDate}`,\n        index: 4,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.reported-date.title')\n      },\n      {\n        fieldId: `${RX_RECORD_DEFINITION.coreFieldIds.status}`,\n        index: 5,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.issue-status.title')\n      },\n      {\n        fieldId: `${RX_ISSUES.issuesRecordFieldIds.caseId}`,\n        index: 6,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.case-id.title')\n      },\n      {\n        fieldId: `${RX_ISSUES.issuesRecordFieldIds.caseStatus}`,\n        index: 7,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.case-status.title')\n      },\n      {\n        fieldId: `${RX_ISSUES.issuesRecordFieldIds.caseStatusRefreshDate}`,\n        index: 8,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.application-issues.case-status-refreshed-date.title'\n        )\n      },\n      {\n        fieldId: `${RX_RECORD_DEFINITION.coreFieldIds.displayId}`,\n        index: 9,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.id.label'),\n        visible: false\n      },\n      {\n        fieldId: `${RX_RECORD_DEFINITION.coreFieldIds.id}`,\n        index: 10,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.guid.label'),\n        visible: false\n      },\n      {\n        fieldId: `${RX_ISSUES.issuesRecordFieldIds.userDescription}`,\n        index: 11,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.user-description.title'),\n        visible: false\n      },\n      {\n        fieldId: `${RX_ISSUES.issuesRecordFieldIds.operationId}`,\n        index: 12,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.operation-id.title'),\n        visible: false\n      },\n      {\n        fieldId: `${RX_ISSUES.issuesRecordFieldIds.relatedRecordGuid}`,\n        index: 13,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.application-issues.related-issue-guid.title'\n        ),\n        visible: false\n      }\n    ];\n  }\n\n  private getActionButtons(): IRecordGridActionButton[] {\n    return [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.view-details.label'),\n        style: 'tertiary',\n        disabled: () => {\n          return this.issuesRecordGrid.api.getSelectedRowCount() !== 1;\n        },\n        iconCls: 'search_plus',\n        actions: [\n          {\n            name: () => {\n              this.showIssueDetails(this.issuesRecordGrid.api.getFirstSelectedRow());\n            }\n          }\n        ]\n      },\n      {\n        label: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.application-issues.search-knowledge-articles.label'\n        ),\n        style: 'tertiary',\n        disabled: () => {\n          return (\n            !this.supportCentralUrl ||\n            this.issuesRecordGrid.api.getSelectedRowCount() !== 1 ||\n            this.issuesRecordGrid.api.getSelectedRows()[0][RX_RECORD_DEFINITION.coreFieldIds.status] !==\n              RX_ISSUES.statusOptionValues.new\n          );\n        },\n        iconCls: 'search',\n        actions: [\n          {\n            name: () => {\n              const selectedRow = this.issuesRecordGrid.api.getSelectedRows();\n              const errorMessage = selectedRow[0][RX_ISSUES.issuesRecordFieldIds.errorMessage];\n              const errorNumber = selectedRow[0][RX_ISSUES.issuesRecordFieldIds.errorNumber];\n              const applicationName = selectedRow[0][RX_ISSUES.issuesRecordFieldIds.applicationName];\n              const searchQuery = `?fromproduct=helixplatform#q=${errorMessage}%20OR%20${errorNumber}&t=All&sort=relevancy&f:@bmcproductname=[${applicationName}]`;\n\n              window.open(this.supportCentralUrl + searchQuery);\n            }\n          }\n        ]\n      },\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.submit-to-bmc.label'),\n        style: 'tertiary',\n        iconCls: 'file_arrow_right',\n        disabled: () => {\n          return (\n            !this.issueReportingInfo.configured ||\n            some(this.issuesRecordGrid.api.getSelectedRows(), (record) => {\n              return record[RX_RECORD_DEFINITION.coreFieldIds.status] !== RX_ISSUES.statusOptionValues.new;\n            })\n          );\n        },\n        actions: [\n          {\n            name: () => {\n              this.rxModalService\n                .openModal({\n                  title: this.translateService.instant(\n                    'com.bmc.arsys.rx.client.admin.application-issues.submit-to-support.title'\n                  ),\n                  content: SubmitIssueToSupportComponent,\n                  size: 'default',\n                  data: {\n                    issues: this.issuesRecordGrid.api.getSelectedRows()\n                  }\n                })\n                .then((result) => {\n                  if (result) {\n                    this.issuesRecordGrid.api.refresh().subscribe();\n                  }\n                })\n                .catch(noop);\n            }\n          }\n        ]\n      },\n      {\n        label: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.application-issues.refresh-case-status.label'\n        ),\n        style: 'tertiary',\n        iconCls: 'refresh',\n        disabled: () => {\n          return (\n            !this.issueReportingInfo.configured ||\n            some(this.issuesRecordGrid.api.getSelectedRows(), (record) => {\n              return !record[RX_ISSUES.issuesRecordFieldIds.caseId];\n            })\n          );\n        },\n        actions: [\n          {\n            name: () => {\n              const selection = this.issuesRecordGrid.api.getSelectedRows();\n\n              this.rxCommandFactoryService\n                .forResourceType('com.bmc.arsys.rx.application.support.command.UpdateSupportCaseStatusCommand')\n                .execute({ recordIds: map(selection, RX_RECORD_DEFINITION.coreFieldIds.id) })\n                .pipe(\n                  catchError((error) => {\n                    if (error.error[0].messageNumber === RX_ISSUES.linkExpiredError.code) {\n                      this.rxNotificationService.addErrorMessage(\n                        this.translateService.instant(RX_ISSUES.linkExpiredError.message)\n                      );\n                    }\n\n                    return throwError(error);\n                  }),\n                  tap(() => this.issuesRecordGrid.api.refresh().subscribe())\n                )\n                .subscribe(() => {\n                  this.rxNotificationService.addSuccessMessage(\n                    this.translateService.instant(RX_ISSUES.notificationMessages.caseStatusRefreshed)\n                  );\n                });\n            }\n          }\n        ]\n      },\n      {\n        label: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.application-issues.close-as-duplicates.label'\n        ),\n        style: 'tertiary',\n        iconCls: 'cross_adapt',\n        disabled: () => {\n          return some(this.issuesRecordGrid.api.getSelectedRows(), (record) => {\n            return record[RX_RECORD_DEFINITION.coreFieldIds.status] !== RX_ISSUES.statusOptionValues.new;\n          });\n        },\n        actions: [\n          {\n            name: () => {\n              this.adaptDockedPanelService\n                .open({\n                  title: this.translateService.instant(\n                    'com.bmc.arsys.rx.client.admin.application-issues.close-duplicate-issues.title'\n                  ),\n                  content: CloseDuplicateIssuesComponent,\n                  data: this.issuesRecordGrid.api.getSelectedRows(),\n                  size: 'lg'\n                })\n                .then(\n                  (result) => {\n                    if (result) {\n                      this.issuesRecordGrid.api.refresh().subscribe();\n                    }\n                  },\n                  () => {}\n                );\n            }\n          }\n        ]\n      },\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n        style: 'tertiary',\n        iconCls: 'trash',\n        disabled: () => {\n          return some(this.issuesRecordGrid.api.getSelectedRows(), (record) => {\n            return record[RX_RECORD_DEFINITION.coreFieldIds.status] === RX_ISSUES.statusOptionValues.submitted;\n          });\n        },\n        actions: [\n          {\n            name: () => {\n              this.rxDeleteRecordsViewActionService\n                .execute({\n                  recordDefinitionName: RX_ISSUES.issuesRecordDefinitionName,\n                  records: this.issuesRecordGrid.api\n                })\n                .subscribe();\n            }\n          }\n        ]\n      }\n    ];\n  }\n\n  private showIssueDetails(rowData: RowDataItem): void {\n    this.adaptDockedPanelService.open({\n      title: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.issue-details.title'),\n      content: IssueDetailsComponent,\n      size: 'lg',\n      data: rowData\n    });\n  }\n}\n","<rx-admin-settings\n  *ngIf=\"isAdministrator\"\n  header=\"{{ 'com.bmc.arsys.rx.client.admin.application-issues.header.title' | translate }}\"\n>\n  <rx-record-grid rx-id=\"issues-grid\" #issuesRecordGrid [config]=\"issuesRecordGridConfiguration$\"></rx-record-grid>\n</rx-admin-settings>\n\n<adapt-alert\n  *ngIf=\"!isAdministrator\"\n  class=\"p-4\"\n  [config]=\"{\n    title: 'com.bmc.arsys.rx.client.admin.access-denied.title' | translate,\n    content: 'com.bmc.arsys.rx.client.admin.access-denied.message' | translate,\n    variant: 'danger'\n  }\"\n></adapt-alert>\n","import { NgModule, ComponentFactoryResolver } from '@angular/core';\nimport { ApplicationIssuesAdminComponent } from './application-issues.component';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { CommonModule } from '@angular/common';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { IssueDetailsComponent } from './issue-details/issue-details.component';\nimport { CloseDuplicateIssuesComponent } from './close-duplicate-issues/close-duplicate-issues.component';\nimport { SubmitIssueToSupportComponent } from './submit-issue-to-support/submit-issue-to-support.component';\nimport { AdaptRxTextareaModule, AdaptRxSelectModule, AdaptButtonModule, AdaptAlertModule } from '@bmc-ux/adapt-angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AdaptTableModule } from '@bmc-ux/adapt-table';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [\n    ApplicationIssuesAdminComponent,\n    IssueDetailsComponent,\n    CloseDuplicateIssuesComponent,\n    SubmitIssueToSupportComponent\n  ],\n  imports: [\n    AdaptAlertModule.forRoot(),\n    AdaptButtonModule,\n    AdaptRxSelectModule,\n    AdaptRxTextareaModule,\n    AdaptTableModule,\n    AdminSettingsModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RecordGridModule,\n    TranslateModule\n  ],\n  entryComponents: [\n    ApplicationIssuesAdminComponent,\n    IssueDetailsComponent,\n    CloseDuplicateIssuesComponent,\n    SubmitIssueToSupportComponent\n  ]\n})\nexport class ApplicationIssuesRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-application-issues',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(ApplicationIssuesAdminComponent),\n      name: 'Application issues',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","export const RX_APPROVAL_CONFIGURATION = {\n  selfApproval: {\n    apForm: {\n      name: 'AP:Form',\n      fields: {\n        formName: 12000,\n        formRequestId: 10014,\n        notesField: 10009,\n        requester: 10015,\n        summary: 10002,\n        field3: 10004,\n        field4: 10005,\n        field5: 10006,\n        field6: 10007,\n        field7: 61001,\n        securityLabels: 14850\n      }\n    },\n    mapping: {\n      name: 'com.bmc.arsys.rx.approval:SelfApprovalMappingV2',\n      fields: {\n        precedence: 10004,\n        qualification: 10001,\n        auditInformation: 12700,\n        recordDefinition: 10000,\n        approvalFlowName: 10002,\n        approvalFlowGuid: 10003,\n        hiddenQualification: 10006,\n        applicationBundleId: 61001\n      }\n    },\n    flowList: {\n      name: 'com.bmc.arsys.rx.approval:SelfApprovalFlowList',\n      fields: {\n        recordDefinition: 10000,\n        selfApprovalFlowName: 10001,\n        selfApprovalFlowProcessDefinitionGuid: 10002\n      }\n    }\n  },\n  flowQualificationProperty: 'approvalQualification',\n  approverQualificationProperty: 'approverQualification',\n\n  noApproverProvided: 'NO_APPROVER_PROVIDED',\n  signingCriteriaPercentageList: [50, 60, 70, 80, 90],\n  approverCriteria: {\n    oneMust: 0,\n    allMust: 1,\n    percentage: 2\n  },\n  approverTypes: {\n    functionalRole: 'functionalRole',\n    fieldIdentifying: 'fieldIdentifying',\n    people: 'people',\n\n    company: 'company',\n    org: 'org',\n    dept: 'dept',\n\n    supportCompany: 'supportCompany',\n    supportOrg: 'supportOrg',\n    supportGroup: 'supportGroup'\n  },\n  approverFields: {\n    companyField: 1000000001,\n    organizationField: 1000000010,\n    departmentField: 200000006,\n    supportOrgField: 1000000014,\n    supportGroupField: 1000000015,\n    firstName: 1000000019,\n    lastName: 1000000018,\n    remedyLoginId: 4\n  },\n  valueSeparator: '_',\n  approverSeparator: ';',\n  levelSeparator: '[:]',\n  approverFormatPrefixes: {\n    people: 'U[:]',\n    functionalRole: 'FR[:]',\n\n    company: 'COM',\n    companyOrg: 'COMORG',\n    companyOrgDept: 'COMORGDEPT',\n\n    supportCompany: 'SCOM',\n    supportCompanyOrg: 'SCOMSORG',\n    supportCompanyOrgGroup: 'SCOMSORGSGRP'\n  }\n};\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  IApprovalFlowGroup,\n  IApprovalFlowGroupConfigurationResponse,\n  IRecordRegistration,\n  ISelfApprovalConfiguration\n} from './approval-configuration.types';\nimport { RX_APPROVAL_CONFIGURATION } from './approval-configuration.constant';\nimport { IRecordDefinition } from '@helix/platform/record/api';\nimport { trim } from 'lodash';\nimport {\n  IDataPageResult,\n  IFunctionalRoleDescriptor,\n  RxFunctionalRoleDataPageService\n} from '@helix/platform/shared/api';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxApprovalConfigurationService {\n  selfApprovalApi = '/api/com.bmc.arsys.rx.approval/rx/application/approval/approvalmapping';\n  registrationApi = '/api/com.bmc.arsys.rx.approval/rx/application/approval/registration';\n  flowConfigurationApi = '/api/com.bmc.arsys.rx.approval/rx/application/approval/flowconfiguration';\n\n  functionalRoles$: Observable<IFunctionalRoleDescriptor[]>;\n\n  constructor(\n    private httpClient: HttpClient,\n    private rxFunctionalRoleDataPageService: RxFunctionalRoleDataPageService\n  ) {}\n\n  getRegisteredRecordDetails(registeredRecordDefinitionName: string): Observable<IRecordRegistration> {\n    return this.httpClient.get<any>(`${this.registrationApi}/${registeredRecordDefinitionName}`);\n  }\n\n  registerRecord(approvalRegistrationRecord: IRecordRegistration): Observable<any> {\n    return this.httpClient.post(this.registrationApi, approvalRegistrationRecord);\n  }\n\n  updateRecord(approvalRegistrationRecord: IRecordRegistration): Observable<any> {\n    return this.httpClient.put(\n      `${this.registrationApi}/${approvalRegistrationRecord.recordDefinition}`,\n      approvalRegistrationRecord\n    );\n  }\n\n  unRegisterRecord(definitionName: string): Observable<any> {\n    return this.httpClient.delete(`${this.registrationApi}/${encodeURIComponent(definitionName)}`);\n  }\n\n  createSelfApprovalConfiguration(configuration: ISelfApprovalConfiguration): Observable<any> {\n    return this.httpClient.post(this.selfApprovalApi, configuration);\n  }\n\n  updateSelfApprovalConfiguration(id: string, configuration: ISelfApprovalConfiguration): Observable<any> {\n    return this.httpClient.put(\n      `${this.selfApprovalApi}/${RX_APPROVAL_CONFIGURATION.selfApproval.mapping.name}/${id}`,\n      configuration\n    );\n  }\n\n  deleteSelfApprovalConfiguration(id: string): Observable<any> {\n    return this.httpClient.delete(\n      `${this.selfApprovalApi}/${RX_APPROVAL_CONFIGURATION.selfApproval.mapping.name}/${id}`\n    );\n  }\n\n  getFunctionalRoles(): Observable<IFunctionalRoleDescriptor[]> {\n    if (!this.functionalRoles$) {\n      this.functionalRoles$ = this.rxFunctionalRoleDataPageService\n        .get({\n          params: {\n            pageSize: -1,\n            propertySelection: ['applicationName', 'name']\n          }\n        })\n        .pipe(\n          map((response: IDataPageResult) =>\n            response.data.map((role: IFunctionalRoleDescriptor) => ({\n              id: role.id,\n              name: role.name,\n              applicationName: role.applicationName\n            }))\n          ),\n          shareReplay(1)\n        );\n    }\n\n    return this.functionalRoles$;\n  }\n\n  getApprovalFlowConfigurations(\n    registeredRecordDefinition: string\n  ): Observable<IApprovalFlowGroupConfigurationResponse> {\n    return this.httpClient.get<IApprovalFlowGroupConfigurationResponse>(\n      `${this.flowConfigurationApi}/${registeredRecordDefinition}`\n    );\n  }\n\n  updateApprovalFlowGroup(\n    flowGroupName: string,\n    flowGroupConfiguration: IApprovalFlowGroup,\n    recordDefinitionName: string\n  ): Observable<any> {\n    return this.httpClient.put(\n      `${this.flowConfigurationApi}/${encodeURIComponent(recordDefinitionName)}/flowGroupName/${encodeURIComponent(\n        flowGroupName\n      )}`,\n      flowGroupConfiguration\n    );\n  }\n\n  saveApprovalFlowGroup(flowGroupConfiguration: IApprovalFlowGroup, recordDefinitionName: string): Observable<any> {\n    return this.httpClient.post(\n      `${this.flowConfigurationApi}/${encodeURIComponent(recordDefinitionName)}/flowGroupName`,\n      flowGroupConfiguration\n    );\n  }\n\n  getApprovalFlowGroup(recordDefinitionName: string, flowGroupName: string): Observable<IApprovalFlowGroup> {\n    return this.httpClient.get<IApprovalFlowGroup>(\n      `${this.flowConfigurationApi}/${encodeURIComponent(recordDefinitionName)}/flowGroupName/${encodeURIComponent(\n        flowGroupName\n      )}`\n    );\n  }\n\n  deleteApprovalFlowGroup(flowGroupName: string, recordDefinitionName: string): Observable<any> {\n    return this.httpClient.delete(\n      `${this.flowConfigurationApi}/${encodeURIComponent(recordDefinitionName)}/flowGroupName/${encodeURIComponent(\n        flowGroupName\n      )}`\n    );\n  }\n\n  getCtmPeopleFormFields(bundleId: string): Observable<IRecordDefinition> {\n    return this.httpClient.get<IRecordDefinition>(\n      `/api/com.bmc.arsys.rx.approval/rx/application/approval/recorddefinition/people/${bundleId}`\n    );\n  }\n\n  isFunctionalRole(approver: string): boolean {\n    return approver.includes(RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.functionalRole);\n  }\n\n  getFunctionalRoleGuid(approver: string): string {\n    // FR[:]AGGADG2BIX85UAQM80BBQM80BBBM9X -> AGGADG2BIX85UAQM80BBQM80BBBM9X\n    return approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[1];\n  }\n\n  isApproverPeople(approver: string): boolean {\n    // check if approver is a User, returns true for 'U[:]abc'\n    return approver.includes(RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.people);\n  }\n\n  getApproverUser(approver: string): string {\n    // 'U[:]abc' -> abc\n    return approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[1];\n  }\n\n  isFieldIdentifyingApprover(approver: string): boolean {\n    // checks if string is surrounded by $ e.g. $Display ID$\n    return Boolean(approver.match(/\\$(.*?)\\$/g));\n  }\n\n  getFieldIdentifyingApprover(approver: string): string {\n    // $Display ID$ -> Display ID\n    return trim(approver, '$');\n  }\n\n  getLastLabel(approver: string): string {\n    // finds approver name from hierarchy format e.g. returns Payroll from COMORGDEPT[:]Calbro Services[:]Human Resources[:]Payroll\n    return approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator).pop();\n  }\n\n  isCompany(approver: string): boolean {\n    // true when Approver value is prefixed by COM e.g. COM[:]Calbro Services\n    return (\n      approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[0] ===\n      RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.company\n    );\n  }\n\n  isCompanyOrg(approver: string): boolean {\n    // true when Approver value is prefixed by COMORG e.g. COMORG[:]Calbro Services[:]Human Resources\n    return (\n      approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[0] ===\n      RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.companyOrg\n    );\n  }\n\n  isCompanyOrgDept(approver: string): boolean {\n    // true when Approver value is prefixed by COMORGDEPT i.e. value is a department with hierarchy e.g. COMORGDEPT[:]Calbro Services[:]Human Resources[:]Payroll\n    return (\n      approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[0] ===\n      RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.companyOrgDept\n    );\n  }\n\n  isSupportCompany(approver: string): boolean {\n    // true when Approver value is prefixed by SCOM e.g. SCOM[:]Calbro Services\n    return (\n      approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[0] ===\n      RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.supportCompany\n    );\n  }\n\n  isSupportCompanyOrg(approver: string): boolean {\n    // true when Approver value is prefixed by SCOMSORG e.g. SCOMSORG[:]Calbro Services[:]IT Support\n    return (\n      approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[0] ===\n      RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.supportCompanyOrg\n    );\n  }\n\n  isSupportCompanyOrgGroup(approver: string): boolean {\n    // true when Approver value is prefixed by SCOMSORGSGRP e.g. SCOMSORGSGRP[:]Calbro Services[:]IT Support[:]Backoffice Support\n    return (\n      approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[0] ===\n      RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.supportCompanyOrgGroup\n    );\n  }\n}\n","import { flatten } from '@angular/compiler';\nimport { ErrorHandler, Injector } from '@angular/core';\nimport {\n  IAssociationTree,\n  IAssociationTreeNode,\n  RxAssociationNodeTreeDataPageService\n} from '@helix/platform/association/api';\nimport { IFieldDefinition, IRecordDefinition, RxRecordDefinitionCacheService } from '@helix/platform/record/api';\nimport {\n  IDataDictionary,\n  IExpressionConfigurator,\n  RxDefinitionNameService,\n  RxExpressionConfigurator\n} from '@helix/platform/shared/api';\nimport { RxTreeService } from '@helix/platform/utils';\nimport { TranslateService } from '@ngx-translate/core';\nimport { find, flow, forEach } from 'lodash';\nimport { combineLatest, forkJoin, Observable, of } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { RxApprovalConfigurationService } from '../approval-configuration.service';\nimport { IAssociationsByDefinitionName, IDataParams } from '../approval-configuration.types';\n\nexport class RxApprovalExpressionConfigurator extends RxExpressionConfigurator implements IExpressionConfigurator {\n  private translateService = this.injector.get(TranslateService);\n  private rxDefinitionNameService = this.injector.get(RxDefinitionNameService);\n  private rxRecordDefinitionCacheService = this.injector.get(RxRecordDefinitionCacheService);\n  private rxAssociationNodeTreeDataPageService = this.injector.get(RxAssociationNodeTreeDataPageService);\n  private rxTreeService = this.injector.get(RxTreeService);\n  private rxApprovalConfigurationService = this.injector.get(RxApprovalConfigurationService);\n  private errorHandler = this.injector.get(ErrorHandler);\n\n  constructor(private injector: Injector) {\n    super();\n  }\n\n  commonDataDictionary$: Observable<IDataDictionary> = of([\n    {\n      label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n      children: [\n        {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.expression-editor.data-dictionary.values.general-group.pill.current-user.title'\n          ),\n          icon: 'd-icon-dollar',\n          expression: '$USER$'\n        },\n        {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.expression-editor.data-dictionary.values.general-group.pill.current-date.title'\n          ),\n          icon: 'd-icon-dollar',\n          expression: '$DATE$'\n        },\n        {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.expression-editor.data-dictionary.values.general-group.pill.current-time.title'\n          ),\n          icon: 'd-icon-dollar',\n          expression: '$TIME$'\n        },\n        {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.expression-editor.data-dictionary.values.general-group.pill.current-date-time.title'\n          ),\n          icon: 'd-icon-dollar',\n          expression: '$TIMESTAMP$'\n        }\n      ]\n    }\n  ]);\n\n  approvalExpressionDataDictionary(currentRecordDefinitionName): Observable<IDataDictionary> {\n    const queryParams = {\n      recorddefinition: currentRecordDefinitionName\n    };\n\n    return combineLatest([\n      this.rxAssociationNodeTreeDataPageService.get({ params: queryParams }),\n      this.commonDataDictionary$\n    ]).pipe(\n      switchMap(([associationNodeTreeDataPage, commonDataDictionary]) => {\n        const associations = associationNodeTreeDataPage.data as IAssociationTree[];\n\n        const associatedRecordDefinitionNames = flow(\n          (approvalAssociations) =>\n            approvalAssociations.map((tree: IAssociationTree) =>\n              this.rxTreeService.flattenTree(tree, 'children').map((association: IAssociationTree) => association.value)\n            ),\n          flatten,\n          (approvalAssociations) =>\n            approvalAssociations.map((association: IAssociationTreeNode) => association.recordDefinitionName)\n        )(associations);\n\n        const definitionRequests$: Observable<IRecordDefinition>[] = [\n          this.rxRecordDefinitionCacheService.getRecordDefinition(currentRecordDefinitionName)\n        ];\n\n        forEach(associatedRecordDefinitionNames, (definitionName: string) => {\n          definitionRequests$.push(this.rxRecordDefinitionCacheService.getRecordDefinition(definitionName));\n        });\n\n        return forkJoin(definitionRequests$).pipe(\n          map((definitions) => {\n            const params: IDataParams = {\n              definitionName: currentRecordDefinitionName,\n              definitions,\n              associationsByDefinition: {\n                [currentRecordDefinitionName]: associations\n              }\n            };\n\n            return [\n              {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.approval.expression-editor.data-dictionary.values.record-definition.title'\n                ),\n                children: [\n                  {\n                    label: this.rxDefinitionNameService.getDisplayName(currentRecordDefinitionName),\n                    children: this.getRecordDefinitionDataDictionary(params)\n                  }\n                ]\n              },\n              ...commonDataDictionary\n            ];\n          })\n        );\n      }),\n      shareReplay(1)\n    );\n  }\n\n  private getRecordDefinitionDataDictionary(params: IDataParams): IDataDictionary {\n    const recordDefinition = find(params.definitions, { name: params.definitionName });\n\n    const fields: IDataDictionary = recordDefinition.fieldDefinitions.map((field: IFieldDefinition) => ({\n      label: field.name,\n      icon: 'd-icon-field_text',\n      expression: params.association\n        ? '${recordContext' +\n          `${params.parentAssociationExpression || ''}._associations.` +\n          `${params.association.value.associationDefintionGuid}.${params.association.value.nodeSide}[0].${field.id}}`\n        : `'${field.name}'`\n    }));\n\n    if (params.associationsByDefinition && params.associationsByDefinition[recordDefinition.name]) {\n      const associatedFields = this.getAssociationDataDictionary(params);\n\n      if (associatedFields.length) {\n        fields.unshift({\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.expression-editor.data-dictionary.values.record-definition-associations.title'\n          ),\n          children: associatedFields\n        });\n      }\n    }\n\n    return fields;\n  }\n\n  private getAssociationDataDictionary(params: IDataParams): IDataDictionary {\n    const associations: IDataDictionary = [];\n\n    if (params.associationsByDefinition[params.definitionName].length) {\n      forEach(params.associationsByDefinition[params.definitionName], (association) => {\n        let parentAssociationExpression = '';\n        const nextDefinitionAssociations: IAssociationsByDefinitionName = {};\n\n        if (params.association) {\n          parentAssociationExpression = `._associations.${params.association.value.associationDefintionGuid}.${params.association.value.nodeSide}[0]`;\n        }\n\n        const currentAssociation: IAssociationTree = find(\n          params.associationsByDefinition[params.definitionName],\n          (item: IAssociationTree) => {\n            return item.value.recordDefinitionName === association.value.recordDefinitionName;\n          }\n        );\n\n        if (currentAssociation) {\n          nextDefinitionAssociations[association.value.recordDefinitionName] = currentAssociation.children;\n        }\n\n        associations.push({\n          label:\n            association.value.nodeName !== association.value.recordDefinitionName\n              ? `${this.rxDefinitionNameService.getDisplayName(\n                  association.value.recordDefinitionName\n                )} (${this.rxDefinitionNameService.getDisplayName(association.value.nodeName)})`\n              : this.rxDefinitionNameService.getDisplayName(association.value.nodeName),\n          children: this.getRecordDefinitionDataDictionary({\n            definitionName: association.value.recordDefinitionName,\n            definitions: params.definitions,\n            associationsByDefinition: nextDefinitionAssociations,\n            association,\n            parentAssociationExpression\n          }),\n          expression:\n            `\\${recordContext${parentAssociationExpression}._associations.` +\n            `${association.value.associationDefintionGuid}.${association.value.nodeSide}[0]}`\n        });\n      });\n    }\n\n    return associations;\n  }\n\n  getCtmPeopleFormFields(registeredRecordDefinitionName: string): Observable<IDataDictionary> {\n    return combineLatest([\n      this.rxApprovalConfigurationService\n        .getCtmPeopleFormFields(this.rxDefinitionNameService.getBundleId(registeredRecordDefinitionName || ''))\n        .pipe(\n          catchError((error) => {\n            this.errorHandler.handleError(error);\n\n            return of(null);\n          })\n        ),\n      this.commonDataDictionary$\n    ]).pipe(\n      map(([ctmPeopleDefinition, commonDataDictionary]) => {\n        const dictionary = [...commonDataDictionary];\n\n        if (ctmPeopleDefinition) {\n          dictionary.unshift({\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.people.label'\n            ),\n            children: ctmPeopleDefinition.fieldDefinitions.map((field: IFieldDefinition) => ({\n              label: field.name,\n              icon: 'd-icon-field_text',\n              expression: `'${field.name}'`\n            }))\n          });\n        }\n\n        return dictionary;\n      }),\n      shareReplay(1)\n    );\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { DataPage } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxOrganizationDataPageService extends DataPage {\n  constructor(private injector: Injector) {\n    super(injector, 'com.bmc.arsys.rx.approval.application.datapage.OrganizationDataPageQuery');\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { DataPage } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxSupportOrganizationDataPageService extends DataPage {\n  constructor(private injector: Injector) {\n    super(injector, 'com.bmc.arsys.rx.approval.application.datapage.SupportOrganizationDataPageQuery');\n  }\n}\n","import { Component, Injector, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport {\r\n  ActiveModalRef,\r\n  AdaptTreeComponent,\r\n  AdaptTreeNode,\r\n  DismissReasons,\r\n  RxSelectOption,\r\n  TreeWrap\r\n} from '@bmc-ux/adapt-angular';\r\nimport {\r\n  IFieldDefinition,\r\n  IRecordDefinition,\r\n  RxRecordDefinitionCacheService,\r\n  RxRecordInstanceUtilsService,\r\n  RxRecordInstanceDataPageService\r\n} from '@helix/platform/record/api';\r\nimport {\r\n  IDataPageParams,\r\n  IDataPageResult,\r\n  IFunctionalRoleDescriptor,\r\n  RxDataPageFactoryService,\r\n  RxGlobalCacheService\r\n} from '@helix/platform/shared/api';\r\nimport {\r\n  IRxSelectWithPaginationOption,\r\n  IRxSelectWithPaginationOptionsPage,\r\n  RxSelectWithPaginationComponent\r\n} from '@helix/platform/shared/components';\r\nimport { RX_MODAL, RxModalClass, RxModalService } from '@helix/platform/ui-kit';\r\nimport { RxTreeService } from '@helix/platform/utils';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {\r\n  find,\r\n  flatten,\r\n  flow,\r\n  forEach,\r\n  get,\r\n  groupBy,\r\n  isUndefined,\r\n  join,\r\n  map as _map,\r\n  remove,\r\n  some,\r\n  sumBy,\r\n  take,\r\n  uniqBy\r\n} from 'lodash';\r\nimport { forkJoin, Observable, Subscription } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { RX_APPROVAL_CONFIGURATION } from '../approval-configuration.constant';\r\nimport { RxApprovalConfigurationService } from '../approval-configuration.service';\r\nimport {\r\n  IAppRoles,\r\n  IField,\r\n  IFieldResponse,\r\n  IOrgInfo,\r\n  IRole,\r\n  ISelectedApprover,\r\n  IUserInfo\r\n} from '../approval-configuration.types';\r\nimport { RxOrganizationDataPageService } from './organization-data-page.service';\r\nimport { RxSupportOrganizationDataPageService } from './support-organization-data-page.service';\r\n\r\n@Component({\r\n  selector: 'rx-flow-approvers-selector',\r\n  templateUrl: './flow-approvers-selector.component.html',\r\n  styleUrls: ['./flow-approvers-selector.component.scss']\r\n})\r\nexport class FlowApproversSelectorComponent extends RxModalClass implements OnInit {\r\n  constructor(\r\n    private rxTreeService: RxTreeService,\r\n    public activeModalRef: ActiveModalRef,\r\n    private rxModalService: RxModalService,\r\n    private translateService: TranslateService,\r\n    private rxGlobalCacheService: RxGlobalCacheService,\r\n    private rxRecordInstanceUtilsService: RxRecordInstanceUtilsService,\r\n    private rxOrganizationDataPageService: RxOrganizationDataPageService,\r\n    private rxSupportOrganizationDataPageService: RxSupportOrganizationDataPageService,\r\n    private rxApprovalConfigurationService: RxApprovalConfigurationService,\r\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\r\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService,\r\n    protected injector: Injector\r\n  ) {\r\n    super(activeModalRef, injector);\r\n  }\r\n\r\n  approverType: RxSelectOption;\r\n  approverTypes: RxSelectOption[] = [];\r\n\r\n  selectedApproverSelection: AdaptTreeNode[] = [];\r\n  selectedApprovers: AdaptTreeNode[] = [];\r\n\r\n  invalidMsg: string;\r\n  busy: Subscription;\r\n  hasUserInteracted: boolean;\r\n\r\n  selectedCompanies: IRxSelectWithPaginationOption[] = [];\r\n  selectedOrganizations: IRxSelectWithPaginationOption[] = [];\r\n  selectedDepartments: IRxSelectWithPaginationOption[] = [];\r\n\r\n  selectedSupportCompanies: IRxSelectWithPaginationOption[] = [];\r\n  selectedSupportOrganizations: IRxSelectWithPaginationOption[] = [];\r\n  selectedSupportGroups: IRxSelectWithPaginationOption[] = [];\r\n\r\n  loadingMore = false;\r\n  private pageSize = 50;\r\n  userSearchTextInput: string;\r\n  loadedUsers: IUserInfo[] = [];\r\n  showLoadMoreButton = true;\r\n  private startIndex: number;\r\n  treeWrap: TreeWrap = TreeWrap.WrapAll;\r\n\r\n  availableFields: IField[] = [];\r\n  availableFunctionRolesByApplication: IAppRoles[] = [];\r\n\r\n  @ViewChildren('paginationComponents')\r\n  paginationComponents: QueryList<RxSelectWithPaginationComponent>;\r\n  shouldShowTree = true;\r\n\r\n  @ViewChildren('tree')\r\n  tree: QueryList<AdaptTreeComponent>;\r\n\r\n  separatorArrow = ' > ';\r\n\r\n  companyLoaderFunc = this.companyLoader.bind(this);\r\n  organizationLoaderFunc = this.organizationLoader.bind(this);\r\n  departmentLoaderFunc = this.departmentLoader.bind(this);\r\n  supportOrganizationLoaderFunc = this.supportOrganizationLoader.bind(this);\r\n  supportGroupLoaderFunc = this.supportGroupLoader.bind(this);\r\n\r\n  isDirty(): boolean {\r\n    return this.hasUserInteracted;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.loadUsers();\r\n    this.loadFunctionalRoles();\r\n    this.loadFieldIdentifyingApproversApprovers();\r\n\r\n    this.approverTypes = [\r\n      {\r\n        value: RX_APPROVAL_CONFIGURATION.approverTypes.company,\r\n        displayValue: this.translateService.instant(\r\n          'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.company.label'\r\n        ),\r\n        disabled: this.activeModalRef.getData().isFieldIdentifyingApprover\r\n      },\r\n      {\r\n        value: RX_APPROVAL_CONFIGURATION.approverTypes.fieldIdentifying,\r\n        displayValue: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.field.identifying')\r\n      },\r\n      {\r\n        value: RX_APPROVAL_CONFIGURATION.approverTypes.functionalRole,\r\n        displayValue: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.functional.roles'),\r\n        disabled: this.activeModalRef.getData().isFieldIdentifyingApprover\r\n      },\r\n      {\r\n        value: RX_APPROVAL_CONFIGURATION.approverTypes.people,\r\n        displayValue: this.translateService.instant(\r\n          'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.people.label'\r\n        ),\r\n        disabled: this.activeModalRef.getData().isFieldIdentifyingApprover\r\n      },\r\n      {\r\n        value: RX_APPROVAL_CONFIGURATION.approverTypes.supportCompany,\r\n        displayValue: this.translateService.instant(\r\n          'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.support-company.label'\r\n        ),\r\n        disabled: this.activeModalRef.getData().isFieldIdentifyingApprover\r\n      }\r\n    ];\r\n\r\n    this.invalidMsg = this.translateService.instant(\r\n      'com.bmc.arsys.rx.client.approval.configuration.field.identifying.warning'\r\n    );\r\n\r\n    this.approverType = [\r\n      find(this.approverTypes, {\r\n        value: this.activeModalRef.getData().isFieldIdentifyingApprover\r\n          ? RX_APPROVAL_CONFIGURATION.approverTypes.fieldIdentifying\r\n          : RX_APPROVAL_CONFIGURATION.approverTypes.functionalRole\r\n      })\r\n    ];\r\n  }\r\n\r\n  switchApproversTree(): void {\r\n    this.selectedCompanies = [];\r\n    this.selectedOrganizations = [];\r\n    this.selectedDepartments = [];\r\n    this.selectedSupportCompanies = [];\r\n    this.selectedSupportOrganizations = [];\r\n    this.selectedSupportGroups = [];\r\n\r\n    this.availableFunctionRolesByApplication.forEach((application: IAppRoles) => {\r\n      application.roles.map((role: IRole) => (role.selected = false));\r\n    });\r\n\r\n    this.loadedUsers.map((user: IUserInfo) => (user.selected = false));\r\n    this.availableFields.map((field: IField) => (field.selected = false));\r\n  }\r\n\r\n  private companyLoader(\r\n    startIndex: number,\r\n    pageSize: number,\r\n    searchQuery: string\r\n  ): Observable<IRxSelectWithPaginationOptionsPage> {\r\n    const queryParams: IDataPageParams = {\r\n      startIndex: startIndex,\r\n      pageSize: pageSize,\r\n      recorddefinition: 'COM:Company',\r\n      propertySelection: [RX_APPROVAL_CONFIGURATION.approverFields.companyField]\r\n    };\r\n\r\n    if (searchQuery) {\r\n      queryParams.queryExpression = this.getAdditionalQueryExpression(\r\n        searchQuery,\r\n        RX_APPROVAL_CONFIGURATION.approverFields.companyField\r\n      );\r\n    }\r\n\r\n    return this.rxRecordInstanceDataPageService\r\n      .post({\r\n        params: { startIndex, pageSize, ...queryParams }\r\n      })\r\n      .pipe(\r\n        map((companyList) => ({\r\n          totalSize: companyList.totalSize,\r\n          options: companyList.data.map((item: IFieldResponse) => ({\r\n            displayValue: item[RX_APPROVAL_CONFIGURATION.approverFields.companyField],\r\n            value: this.getCompanyDataFormat(item[RX_APPROVAL_CONFIGURATION.approverFields.companyField])\r\n          }))\r\n        }))\r\n      );\r\n  }\r\n\r\n  getCompanyDataFormat(companyName: string): string {\r\n    return `${RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.company}${RX_APPROVAL_CONFIGURATION.levelSeparator}${companyName}`;\r\n  }\r\n\r\n  onToggleDropdown(isOpen: boolean) {\r\n    if (!isOpen) {\r\n      this.resetLoadedOptions();\r\n    }\r\n  }\r\n\r\n  resetLoadedOptions() {\r\n    this.paginationComponents\r\n      .toArray()\r\n      .forEach((component: RxSelectWithPaginationComponent) => component.resetLoadedOptions());\r\n  }\r\n\r\n  private organizationLoader(\r\n    startIndex: number,\r\n    pageSize: number,\r\n    searchQuery: string\r\n  ): Observable<IRxSelectWithPaginationOptionsPage> {\r\n    const queryParams: IDataPageParams = {\r\n      startIndex: startIndex,\r\n      pageSize: pageSize\r\n    };\r\n\r\n    if (searchQuery) {\r\n      queryParams.organization = searchQuery;\r\n    } else {\r\n      queryParams.queryExpression = this.getDefaultSearchExpression();\r\n    }\r\n\r\n    if (this.selectedCompanies.length === 1) {\r\n      queryParams.company = this.selectedCompanies[0].displayValue;\r\n    }\r\n\r\n    return this.rxOrganizationDataPageService\r\n      .get({\r\n        params: { startIndex, pageSize, ...queryParams }\r\n      })\r\n      .pipe(\r\n        map((response: IDataPageResult) => ({\r\n          totalSize: response.totalSize,\r\n          options: response.data.map((item: IOrgInfo) => ({\r\n            displayValue: item.organization,\r\n            value: item.company\r\n          }))\r\n        }))\r\n      );\r\n  }\r\n\r\n  private departmentLoader(\r\n    startIndex: number,\r\n    pageSize: number,\r\n    searchQuery: string\r\n  ): Observable<IRxSelectWithPaginationOptionsPage> {\r\n    const queryParams: IDataPageParams = {\r\n      recorddefinition: 'CTM:People Organization',\r\n      propertySelection: [\r\n        RX_APPROVAL_CONFIGURATION.approverFields.companyField,\r\n        RX_APPROVAL_CONFIGURATION.approverFields.organizationField,\r\n        RX_APPROVAL_CONFIGURATION.approverFields.departmentField\r\n      ]\r\n    };\r\n\r\n    const queryList: string[] = [];\r\n\r\n    if (searchQuery) {\r\n      queryList.push(\r\n        this.getAdditionalQueryExpression(searchQuery, RX_APPROVAL_CONFIGURATION.approverFields.departmentField)\r\n      );\r\n    }\r\n\r\n    if (this.selectedCompanies.length === 1) {\r\n      queryList.push(\r\n        this.getAdditionalQueryExpression(\r\n          this.selectedCompanies[0].displayValue,\r\n          RX_APPROVAL_CONFIGURATION.approverFields.companyField,\r\n          true\r\n        )\r\n      );\r\n    }\r\n\r\n    if (this.selectedOrganizations.length === 1) {\r\n      queryList.push(\r\n        this.getAdditionalQueryExpression(\r\n          this.selectedOrganizations[0].displayValue,\r\n          RX_APPROVAL_CONFIGURATION.approverFields.organizationField,\r\n          true\r\n        )\r\n      );\r\n    }\r\n\r\n    queryParams.queryExpression = queryList.join(' AND ');\r\n\r\n    return this.rxRecordInstanceDataPageService\r\n      .post({\r\n        params: { startIndex, pageSize, ...queryParams }\r\n      })\r\n      .pipe(\r\n        map((response: IDataPageResult) => ({\r\n          totalSize: response.totalSize,\r\n          options: response.data.map((item: IFieldResponse) => ({\r\n            displayValue: item[RX_APPROVAL_CONFIGURATION.approverFields.departmentField],\r\n            value: item[RX_APPROVAL_CONFIGURATION.approverFields.companyField],\r\n            organization: item[RX_APPROVAL_CONFIGURATION.approverFields.organizationField]\r\n          }))\r\n        }))\r\n      );\r\n  }\r\n\r\n  private supportOrganizationLoader(\r\n    startIndex: number,\r\n    pageSize: number,\r\n    searchQuery: string\r\n  ): Observable<IRxSelectWithPaginationOptionsPage> {\r\n    const queryParams: IDataPageParams = {\r\n      startIndex: startIndex,\r\n      pageSize: pageSize\r\n    };\r\n\r\n    if (searchQuery) {\r\n      queryParams.supportOrganization = searchQuery;\r\n    } else {\r\n      queryParams.queryExpression = this.getDefaultSearchExpression();\r\n    }\r\n\r\n    if (this.selectedSupportCompanies.length === 1) {\r\n      queryParams.company = this.selectedSupportCompanies[0].displayValue;\r\n    }\r\n\r\n    return this.rxSupportOrganizationDataPageService\r\n      .get({\r\n        params: { startIndex, pageSize, ...queryParams }\r\n      })\r\n      .pipe(\r\n        map((response: IDataPageResult) => ({\r\n          totalSize: response.totalSize,\r\n          options: response.data.map((item: IOrgInfo) => ({\r\n            displayValue: item.supportOrganization,\r\n            value: item.company\r\n          }))\r\n        }))\r\n      );\r\n  }\r\n\r\n  private supportGroupLoader(\r\n    startIndex: number,\r\n    pageSize: number,\r\n    searchQuery: string\r\n  ): Observable<IRxSelectWithPaginationOptionsPage> {\r\n    const queryParams: IDataPageParams = {\r\n      recorddefinition: 'CTM:Support Group',\r\n      propertySelection: [\r\n        RX_APPROVAL_CONFIGURATION.approverFields.companyField,\r\n        RX_APPROVAL_CONFIGURATION.approverFields.supportOrgField,\r\n        RX_APPROVAL_CONFIGURATION.approverFields.supportGroupField\r\n      ]\r\n    };\r\n\r\n    const queryList: string[] = [];\r\n\r\n    if (searchQuery) {\r\n      queryList.push(\r\n        this.getAdditionalQueryExpression(searchQuery, RX_APPROVAL_CONFIGURATION.approverFields.supportGroupField)\r\n      );\r\n    }\r\n\r\n    if (this.selectedSupportCompanies.length === 1) {\r\n      queryList.push(\r\n        this.getAdditionalQueryExpression(\r\n          this.selectedSupportCompanies[0].displayValue,\r\n          RX_APPROVAL_CONFIGURATION.approverFields.companyField,\r\n          true\r\n        )\r\n      );\r\n    }\r\n\r\n    if (this.selectedSupportOrganizations.length === 1) {\r\n      queryList.push(\r\n        this.getAdditionalQueryExpression(\r\n          this.selectedSupportOrganizations[0].displayValue,\r\n          RX_APPROVAL_CONFIGURATION.approverFields.supportOrgField,\r\n          true\r\n        )\r\n      );\r\n    }\r\n\r\n    queryParams.queryExpression = queryList.join(' AND ');\r\n\r\n    return this.rxRecordInstanceDataPageService\r\n      .post({\r\n        params: { startIndex, pageSize, ...queryParams }\r\n      })\r\n      .pipe(\r\n        map((response: IDataPageResult) => ({\r\n          totalSize: response.totalSize,\r\n          options: response.data.map((item: IFieldResponse) => ({\r\n            displayValue: item[RX_APPROVAL_CONFIGURATION.approverFields.supportGroupField],\r\n            value: item[RX_APPROVAL_CONFIGURATION.approverFields.companyField],\r\n            organization: item[RX_APPROVAL_CONFIGURATION.approverFields.supportOrgField]\r\n          }))\r\n        }))\r\n      );\r\n  }\r\n\r\n  private getAdditionalQueryExpression(searchQuery: string, fieldId: number, isEqualitySearch?: boolean): string {\r\n    return isEqualitySearch\r\n      ? `('${fieldId}' = \"${searchQuery.replace(/\"/g, '\"\"')}\")`\r\n      : `('${fieldId}' LIKE \"%${this.rxRecordInstanceUtilsService.escapeTextWildcards(searchQuery)}%\")`;\r\n  }\r\n\r\n  loadUsers(inputEvent?: string): void {\r\n    const queryParams: IDataPageParams = {\r\n      recorddefinition: 'CTM:People',\r\n      propertySelection: [\r\n        RX_APPROVAL_CONFIGURATION.approverFields.firstName,\r\n        RX_APPROVAL_CONFIGURATION.approverFields.lastName,\r\n        RX_APPROVAL_CONFIGURATION.approverFields.remedyLoginId\r\n      ],\r\n      sortBy: RX_APPROVAL_CONFIGURATION.approverFields.firstName\r\n    };\r\n\r\n    this.startIndex = !isUndefined(this.startIndex) ? this.startIndex + this.pageSize : 0;\r\n    this.loadingMore = true;\r\n\r\n    if (!isUndefined(inputEvent)) {\r\n      this.startIndex = 0;\r\n      this.loadedUsers = [];\r\n    }\r\n\r\n    if (this.userSearchTextInput) {\r\n      queryParams.queryExpression = this.getUserQueryExpression();\r\n    }\r\n\r\n    this.rxRecordInstanceDataPageService\r\n      .post({\r\n        params: {\r\n          pageSize: this.pageSize,\r\n          startIndex: this.startIndex,\r\n          ...queryParams\r\n        }\r\n      })\r\n      .subscribe((response: IDataPageResult) => {\r\n        this.loadedUsers = this.loadedUsers.concat(response.data as IUserInfo[]);\r\n        this.showLoadMoreButton = response.totalSize > this.loadedUsers.length;\r\n        this.loadingMore = false;\r\n      });\r\n  }\r\n\r\n  private getUserQueryExpression(): string {\r\n    return this.userSearchTextInput\r\n      ? `('${\r\n          RX_APPROVAL_CONFIGURATION.approverFields.firstName\r\n        }' LIKE \"%${this.rxRecordInstanceUtilsService.escapeTextWildcards(this.userSearchTextInput)}%\") OR ('${\r\n          RX_APPROVAL_CONFIGURATION.approverFields.lastName\r\n        }' LIKE \"%${this.rxRecordInstanceUtilsService.escapeTextWildcards(this.userSearchTextInput)}%\") OR ('${\r\n          RX_APPROVAL_CONFIGURATION.approverFields.remedyLoginId\r\n        }' LIKE \"%${this.rxRecordInstanceUtilsService.escapeTextWildcards(this.userSearchTextInput)}%\")`\r\n      : null;\r\n  }\r\n\r\n  loadFunctionalRoles(): void {\r\n    forkJoin([\r\n      this.rxApprovalConfigurationService.getFunctionalRoles(),\r\n      this.rxGlobalCacheService.getBundleDescriptors()\r\n    ])\r\n      .pipe(\r\n        tap(([functionalRoles, bundleDescriptors]) => {\r\n          const globalLabel = this.translateService.instant('com.bmc.arsys.rx.client.common.global-items.label');\r\n          this.addExistingApproversToSelectedTree(functionalRoles);\r\n\r\n          this.availableFunctionRolesByApplication = flow(\r\n            (roles: IFunctionalRoleDescriptor[]) =>\r\n              _map(roles, (role: IFunctionalRoleDescriptor) => {\r\n                const bundleDescriptor = find(bundleDescriptors, { id: role.applicationName });\r\n\r\n                return {\r\n                  ...role,\r\n                  applicationName: bundleDescriptor?.friendlyName || bundleDescriptor?.id || globalLabel\r\n                };\r\n              }),\r\n            (roles: IFunctionalRoleDescriptor[]) => groupBy(roles, 'applicationName'),\r\n            (rolesByApplicationName) =>\r\n              _map(rolesByApplicationName, (roles, applicationName) => ({\r\n                applicationName,\r\n                roles: _map(roles, (role: IFunctionalRoleDescriptor) => ({\r\n                  id: role.id,\r\n                  name: role.name,\r\n                  selected: false\r\n                })).sort((a, b) => a.name.localeCompare(b.name))\r\n              })).sort((a, b) => a.applicationName.localeCompare(b.applicationName))\r\n          )(functionalRoles as IFunctionalRoleDescriptor[]);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  removeApproversFromSelection(): void {\r\n    this.hasUserInteracted = true;\r\n\r\n    forEach(this.selectedApprovers, (node: AdaptTreeNode) => {\r\n      remove(node.children, (childNode) => this.tree.first.isSelected(childNode));\r\n    });\r\n\r\n    this.selectedApprovers = this.selectedApprovers.filter((node: AdaptTreeNode) => node.children.length);\r\n    this.selectedApproverSelection = [];\r\n    this.reloadTree();\r\n  }\r\n\r\n  private getNode(label: string, key: string, data: string): AdaptTreeNode {\r\n    return {\r\n      label,\r\n      key,\r\n      data\r\n    };\r\n  }\r\n\r\n  getFunctionalRoleDataFormat(guid): string {\r\n    return `${RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.functionalRole}${guid}`;\r\n  }\r\n\r\n  private transformFunctionRolesToNodeStructure(): AdaptTreeNode[] {\r\n    const roles = [];\r\n\r\n    this.availableFunctionRolesByApplication.forEach((application: IAppRoles) =>\r\n      application.roles\r\n        .filter((role: IRole) => role.selected)\r\n        .forEach((selectedRole: IRole) =>\r\n          roles.push(\r\n            this.getNode(\r\n              `${selectedRole.name}`,\r\n              `${selectedRole.id}`,\r\n              this.getFunctionalRoleDataFormat(selectedRole.id)\r\n            )\r\n          )\r\n        )\r\n    );\r\n\r\n    return roles;\r\n  }\r\n\r\n  private transformFieldsToNodeStructure(): AdaptTreeNode[] {\r\n    return this.availableFields\r\n      .filter((field: IField) => field.selected)\r\n      .map((selectedField: IField) =>\r\n        this.getNode(`${selectedField.name}`, `${selectedField.name}`, `$${selectedField.name}$`)\r\n      );\r\n  }\r\n\r\n  private getPeopleDataFormat(userId: string): string {\r\n    return `${RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.people}${userId}`;\r\n  }\r\n\r\n  private transformPeopleToNodeStructure(): AdaptTreeNode[] {\r\n    return this.loadedUsers\r\n      .filter((user: IUserInfo) => user.selected)\r\n      .map((selectedUser: IUserInfo) =>\r\n        this.getNode(\r\n          `${selectedUser[RX_APPROVAL_CONFIGURATION.approverFields.firstName]} ${\r\n            selectedUser[RX_APPROVAL_CONFIGURATION.approverFields.lastName]\r\n          }`,\r\n          `${selectedUser[4]}`,\r\n          this.getPeopleDataFormat(selectedUser[RX_APPROVAL_CONFIGURATION.approverFields.remedyLoginId])\r\n        )\r\n      );\r\n  }\r\n\r\n  private getOrgDataFormat(company: string, org: string): string {\r\n    return `${RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.companyOrg}${RX_APPROVAL_CONFIGURATION.levelSeparator}${company}${RX_APPROVAL_CONFIGURATION.levelSeparator}${org}`;\r\n  }\r\n\r\n  getDeptDataFormat(company: string, org: string, dept: string): string {\r\n    return `${RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.companyOrgDept}${RX_APPROVAL_CONFIGURATION.levelSeparator}${company}${RX_APPROVAL_CONFIGURATION.levelSeparator}${org}${RX_APPROVAL_CONFIGURATION.levelSeparator}${dept}`;\r\n  }\r\n\r\n  getSupportOrgDataFormat(supportCompany: string, supportOrg: string): string {\r\n    return `${RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.supportCompanyOrg}${RX_APPROVAL_CONFIGURATION.levelSeparator}${supportCompany}${RX_APPROVAL_CONFIGURATION.levelSeparator}${supportOrg}`;\r\n  }\r\n\r\n  getSupportGroupDataFormat(supportCompany: string, supportOrg: string, supportGroup: string): string {\r\n    return `${RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.supportCompanyOrgGroup}${RX_APPROVAL_CONFIGURATION.levelSeparator}${supportCompany}${RX_APPROVAL_CONFIGURATION.levelSeparator}${supportOrg}${RX_APPROVAL_CONFIGURATION.levelSeparator}${supportGroup}`;\r\n  }\r\n\r\n  private transformToNodeStructure(selectedItems: IRxSelectWithPaginationOption[]): AdaptTreeNode[] {\r\n    return selectedItems.map((option: IRxSelectWithPaginationOption) => {\r\n      let data = '';\r\n      let label = `${option.displayValue} `;\r\n\r\n      if (this.shouldMoveCompanies()) {\r\n        data = option.value;\r\n      } else if (this.shouldMoveOrganizations()) {\r\n        data = this.getOrgDataFormat(option.value, option.displayValue);\r\n        label += `(${option.value})`;\r\n      } else if (this.shouldMoveDepartments()) {\r\n        data = this.getDeptDataFormat(option.value, option.organization, option.displayValue);\r\n        label += `(${option.value}${this.separatorArrow}${option.organization})`;\r\n      } else if (this.shouldMoveSupportCompanies()) {\r\n        data = `${RX_APPROVAL_CONFIGURATION.approverFormatPrefixes.supportCompany}${RX_APPROVAL_CONFIGURATION.levelSeparator}${option.displayValue}`;\r\n      } else if (this.shouldMoveSupportOrganizations()) {\r\n        data = this.getSupportOrgDataFormat(option.value, option.displayValue);\r\n        label += `(${option.value})`;\r\n      } else if (this.shouldMoveSupportGroups()) {\r\n        data = this.getSupportGroupDataFormat(option.value, option.organization, option.displayValue);\r\n        label += `(${option.value}${this.separatorArrow}${option.organization})`;\r\n      }\r\n\r\n      return this.getNode(label, option.displayValue, data);\r\n    });\r\n  }\r\n\r\n  onCompanySelectionChange(): void {\r\n    this.selectedOrganizations = [];\r\n    this.selectedDepartments = [];\r\n  }\r\n\r\n  onOrganizationSelectionChange(): void {\r\n    this.selectedDepartments = [];\r\n  }\r\n\r\n  onSupportCompanySelectionChange(): void {\r\n    this.selectedSupportOrganizations = [];\r\n    this.selectedSupportGroups = [];\r\n  }\r\n\r\n  onSupportOrganizationSelectionChange(): void {\r\n    this.selectedSupportGroups = [];\r\n  }\r\n\r\n  private shouldMoveCompanies(): boolean {\r\n    return this.selectedCompanies.length && !this.selectedOrganizations.length && !this.selectedDepartments.length;\r\n  }\r\n\r\n  private shouldMoveOrganizations(): boolean {\r\n    return this.selectedOrganizations.length && this.selectedCompanies.length <= 1 && !this.selectedDepartments.length;\r\n  }\r\n\r\n  private shouldMoveDepartments(): boolean {\r\n    return (\r\n      this.selectedDepartments.length && this.selectedCompanies.length <= 1 && this.selectedOrganizations.length <= 1\r\n    );\r\n  }\r\n\r\n  private shouldMoveSupportCompanies(): boolean {\r\n    return (\r\n      this.selectedSupportCompanies.length &&\r\n      !this.selectedSupportOrganizations.length &&\r\n      !this.selectedSupportGroups.length\r\n    );\r\n  }\r\n\r\n  private shouldMoveSupportOrganizations(): boolean {\r\n    return (\r\n      this.selectedSupportOrganizations.length &&\r\n      this.selectedSupportCompanies.length <= 1 &&\r\n      !this.selectedSupportGroups.length\r\n    );\r\n  }\r\n\r\n  private shouldMoveSupportGroups(): boolean {\r\n    return (\r\n      this.selectedSupportGroups.length &&\r\n      this.selectedSupportCompanies.length <= 1 &&\r\n      this.selectedSupportOrganizations.length <= 1\r\n    );\r\n  }\r\n\r\n  private setFieldIdentifyingApprovers() {\r\n    this.selectedApprovers = [\r\n      {\r\n        label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.field.identifying'),\r\n        type: RX_APPROVAL_CONFIGURATION.approverTypes.fieldIdentifying,\r\n        children: this.transformFieldsToNodeStructure(),\r\n        expanded: true\r\n      }\r\n    ];\r\n  }\r\n\r\n  moveToSelectedApprovers(): void {\r\n    let approverTypeNode: AdaptTreeNode = find(this.selectedApprovers, { type: this.approverType[0].value });\r\n\r\n    if (this.isFieldIdentifyingSelection()) {\r\n      if (\r\n        this.selectedApprovers.length &&\r\n        !find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.fieldIdentifying })\r\n      ) {\r\n        this.rxModalService\r\n          .confirm({\r\n            title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\r\n            modalStyle: RX_MODAL.modalStyles.warning,\r\n            message: this.translateService.instant(\r\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.field-identifying-select.warning'\r\n            )\r\n          })\r\n          .then((result: boolean) => {\r\n            if (result) {\r\n              this.setFieldIdentifyingApprovers();\r\n            }\r\n          });\r\n      } else {\r\n        this.setFieldIdentifyingApprovers();\r\n      }\r\n    } else if (this.isFunctionalRoleSelection()) {\r\n      if (!approverTypeNode) {\r\n        this.selectedApprovers.push({\r\n          label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.functional.roles'),\r\n          type: RX_APPROVAL_CONFIGURATION.approverTypes.functionalRole,\r\n          children: this.transformFunctionRolesToNodeStructure(),\r\n          expanded: true\r\n        });\r\n      } else {\r\n        approverTypeNode.children.push(...this.transformFunctionRolesToNodeStructure());\r\n      }\r\n    } else if (this.isPeopleSelection()) {\r\n      if (!approverTypeNode) {\r\n        this.selectedApprovers.push({\r\n          label: this.translateService.instant(\r\n            'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.people.label'\r\n          ),\r\n          type: RX_APPROVAL_CONFIGURATION.approverTypes.people,\r\n          children: this.transformPeopleToNodeStructure(),\r\n          expanded: true\r\n        });\r\n      } else {\r\n        approverTypeNode.children.push(...this.transformPeopleToNodeStructure());\r\n      }\r\n    } else if (this.isCompanySelection()) {\r\n      if (this.shouldMoveCompanies()) {\r\n        if (!approverTypeNode) {\r\n          this.selectedApprovers.push({\r\n            label: this.translateService.instant(\r\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.company.label'\r\n            ),\r\n            type: RX_APPROVAL_CONFIGURATION.approverTypes.company,\r\n            children: this.transformToNodeStructure(this.selectedCompanies),\r\n            expanded: true\r\n          });\r\n        } else {\r\n          approverTypeNode.children.push(...this.transformToNodeStructure(this.selectedCompanies));\r\n        }\r\n      } else if (this.shouldMoveOrganizations()) {\r\n        approverTypeNode = find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.org });\r\n\r\n        if (!approverTypeNode) {\r\n          this.selectedApprovers.push({\r\n            label: this.translateService.instant(\r\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.organization.label'\r\n            ),\r\n            type: RX_APPROVAL_CONFIGURATION.approverTypes.org,\r\n            children: this.transformToNodeStructure(this.selectedOrganizations),\r\n            expanded: true\r\n          });\r\n        } else {\r\n          approverTypeNode.children.push(...this.transformToNodeStructure(this.selectedOrganizations));\r\n        }\r\n      } else if (this.shouldMoveDepartments()) {\r\n        approverTypeNode = find(this.selectedApprovers, {\r\n          type: RX_APPROVAL_CONFIGURATION.approverTypes.dept\r\n        });\r\n\r\n        if (!approverTypeNode) {\r\n          this.selectedApprovers.push({\r\n            label: this.translateService.instant(\r\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.department.label'\r\n            ),\r\n            type: RX_APPROVAL_CONFIGURATION.approverTypes.dept,\r\n            children: this.transformToNodeStructure(this.selectedDepartments),\r\n            expanded: true\r\n          });\r\n        } else {\r\n          approverTypeNode.children.push(...this.transformToNodeStructure(this.selectedDepartments));\r\n        }\r\n      }\r\n    } else if (this.isSupportCompanySelection()) {\r\n      if (this.shouldMoveSupportCompanies()) {\r\n        approverTypeNode = find(this.selectedApprovers, {\r\n          type: RX_APPROVAL_CONFIGURATION.approverTypes.company\r\n        });\r\n\r\n        if (!approverTypeNode) {\r\n          this.selectedApprovers.push({\r\n            label: this.translateService.instant(\r\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.company.label'\r\n            ),\r\n            type: RX_APPROVAL_CONFIGURATION.approverTypes.company,\r\n            children: this.transformToNodeStructure(this.selectedSupportCompanies),\r\n            expanded: true\r\n          });\r\n        } else {\r\n          approverTypeNode.children.push(...this.transformToNodeStructure(this.selectedSupportCompanies));\r\n        }\r\n      } else if (this.shouldMoveSupportOrganizations()) {\r\n        approverTypeNode = find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.supportOrg });\r\n\r\n        if (!approverTypeNode) {\r\n          this.selectedApprovers.push({\r\n            label: this.translateService.instant(\r\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.support-org.label'\r\n            ),\r\n            type: RX_APPROVAL_CONFIGURATION.approverTypes.supportOrg,\r\n            children: this.transformToNodeStructure(this.selectedSupportOrganizations),\r\n            expanded: true\r\n          });\r\n        } else {\r\n          approverTypeNode.children.push(...this.transformToNodeStructure(this.selectedSupportOrganizations));\r\n        }\r\n      } else if (this.shouldMoveSupportGroups()) {\r\n        approverTypeNode = find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.supportGroup });\r\n\r\n        if (!approverTypeNode) {\r\n          this.selectedApprovers.push({\r\n            label: this.translateService.instant(\r\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.support-group.label'\r\n            ),\r\n            type: RX_APPROVAL_CONFIGURATION.approverTypes.supportGroup,\r\n            children: this.transformToNodeStructure(this.selectedSupportGroups),\r\n            expanded: true\r\n          });\r\n        } else {\r\n          approverTypeNode.children.push(...this.transformToNodeStructure(this.selectedSupportGroups));\r\n        }\r\n      }\r\n    }\r\n    if (!this.isFieldIdentifyingSelection()) {\r\n      remove(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.fieldIdentifying });\r\n    }\r\n    if (approverTypeNode) {\r\n      approverTypeNode.expanded = true;\r\n      approverTypeNode.children = uniqBy(approverTypeNode.children, 'key');\r\n    }\r\n    this.selectedApprovers = this.selectedApprovers\r\n      .filter((approverNode: AdaptTreeNode) => approverNode.children.length)\r\n      .map((node: AdaptTreeNode) => {\r\n        node.children.sort((a, b) => a.label.localeCompare(b.label));\r\n\r\n        return node;\r\n      });\r\n\r\n    this.hasUserInteracted = true;\r\n    this.reloadTree();\r\n  }\r\n\r\n  private reloadTree() {\r\n    this.shouldShowTree = false;\r\n    setTimeout(() => (this.shouldShowTree = true));\r\n  }\r\n\r\n  private loadFieldIdentifyingApproversApprovers(): void {\r\n    this.rxRecordDefinitionCacheService\r\n      .getRecordDefinition(this.activeModalRef.getData().registeredRecordDefinitionName)\r\n      .subscribe(\r\n        (fieldIdentifyingResponse: IRecordDefinition) =>\r\n          (this.availableFields = fieldIdentifyingResponse.fieldDefinitions\r\n            .map((field: IFieldDefinition) => ({\r\n              name: field.name,\r\n              selected: false\r\n            }))\r\n            .sort((a: IField, b: IField) => a.name.localeCompare(b.name)))\r\n      );\r\n  }\r\n\r\n  noApproverSelected(): boolean {\r\n    return (\r\n      (this.isFieldIdentifyingSelection() && !some(this.availableFields, (field) => field.selected)) ||\r\n      (this.isPeopleSelection() && !some(this.loadedUsers, (user) => user.selected)) ||\r\n      (this.isFunctionalRoleSelection() &&\r\n        !some(this.availableFunctionRolesByApplication, (application) =>\r\n          some(application.roles, (role) => role.selected)\r\n        )) ||\r\n      Boolean(\r\n        this.isCompanySelection() &&\r\n          !this.selectedCompanies.length &&\r\n          !this.selectedOrganizations.length &&\r\n          !this.selectedDepartments.length\r\n      )\r\n    );\r\n  }\r\n\r\n  isInvalidFieIdentifyingApprover(): boolean {\r\n    return this.isFieldIdentifyingSelection() && sumBy(this.availableFields, 'selected') > 1;\r\n  }\r\n\r\n  optionFormatter(option: RxSelectOption): string {\r\n    return option.displayValue;\r\n  }\r\n\r\n  isFieldIdentifyingSelection(): boolean {\r\n    return this.approverType[0].value === RX_APPROVAL_CONFIGURATION.approverTypes.fieldIdentifying;\r\n  }\r\n\r\n  isCompanySelection(): boolean {\r\n    return this.approverType[0].value === RX_APPROVAL_CONFIGURATION.approverTypes.company;\r\n  }\r\n\r\n  isSupportCompanySelection(): boolean {\r\n    return this.approverType[0].value === RX_APPROVAL_CONFIGURATION.approverTypes.supportCompany;\r\n  }\r\n\r\n  isPeopleSelection(): boolean {\r\n    return this.approverType[0].value === RX_APPROVAL_CONFIGURATION.approverTypes.people;\r\n  }\r\n\r\n  isFunctionalRoleSelection(): boolean {\r\n    return this.approverType[0].value === RX_APPROVAL_CONFIGURATION.approverTypes.functionalRole;\r\n  }\r\n\r\n  completeSelection(): void {\r\n    const approvers: ISelectedApprover[] = flow(\r\n      (allNodes: AdaptTreeNode[]) => _map(allNodes, 'children'),\r\n      flatten,\r\n      (nodes: AdaptTreeNode[]) =>\r\n        _map(nodes, (node) => {\r\n          let label = '';\r\n\r\n          if (\r\n            this.rxApprovalConfigurationService.isCompanyOrg(node.data) ||\r\n            this.rxApprovalConfigurationService.isCompanyOrgDept(node.data) ||\r\n            this.rxApprovalConfigurationService.isSupportCompanyOrg(node.data) ||\r\n            this.rxApprovalConfigurationService.isSupportCompanyOrgGroup(node.data)\r\n          ) {\r\n            label = this.rxApprovalConfigurationService.getLastLabel(node.data);\r\n          }\r\n\r\n          return {\r\n            value: node.data,\r\n            displayValue: label || node.label\r\n          };\r\n        })\r\n    )(this.selectedApprovers);\r\n\r\n    const approver: ISelectedApprover = {\r\n      value: approvers.map((node: ISelectedApprover) => node.value).join(RX_APPROVAL_CONFIGURATION.approverSeparator),\r\n      displayValue: flow(\r\n        (items: ISelectedApprover[]) => take(items, 10),\r\n        (items: string[]) => _map(items, 'displayValue'),\r\n        (items: string[]) => join(items, ', ')\r\n      )(approvers)\r\n    };\r\n\r\n    if (approvers.length > 10) {\r\n      approver.displayValue += '...';\r\n    }\r\n\r\n    this.activeModalRef.close(approver);\r\n  }\r\n\r\n  getEmptyApproverTree(): AdaptTreeNode[] {\r\n    return [\r\n      {\r\n        label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.functional.roles'),\r\n        type: RX_APPROVAL_CONFIGURATION.approverTypes.functionalRole,\r\n        children: []\r\n      },\r\n      {\r\n        label: this.translateService.instant(\r\n          'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.people.label'\r\n        ),\r\n        type: RX_APPROVAL_CONFIGURATION.approverTypes.people,\r\n        children: []\r\n      },\r\n      {\r\n        label: this.translateService.instant(\r\n          'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.company.label'\r\n        ),\r\n        type: RX_APPROVAL_CONFIGURATION.approverTypes.company,\r\n        children: []\r\n      },\r\n      {\r\n        label: this.translateService.instant(\r\n          'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.organization.label'\r\n        ),\r\n        type: RX_APPROVAL_CONFIGURATION.approverTypes.org,\r\n        children: []\r\n      },\r\n      {\r\n        label: this.translateService.instant(\r\n          'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.department.label'\r\n        ),\r\n        type: RX_APPROVAL_CONFIGURATION.approverTypes.dept,\r\n        children: []\r\n      },\r\n      {\r\n        label: this.translateService.instant(\r\n          'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.support-company.label'\r\n        ),\r\n        type: RX_APPROVAL_CONFIGURATION.approverTypes.supportCompany,\r\n        children: []\r\n      },\r\n      {\r\n        label: this.translateService.instant(\r\n          'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.support-group.label'\r\n        ),\r\n        type: RX_APPROVAL_CONFIGURATION.approverTypes.supportGroup,\r\n        children: []\r\n      },\r\n      {\r\n        label: this.translateService.instant(\r\n          'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.support-org.label'\r\n        ),\r\n        type: RX_APPROVAL_CONFIGURATION.approverTypes.supportOrg,\r\n        children: []\r\n      },\r\n      {\r\n        label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.field.identifying'),\r\n        type: RX_APPROVAL_CONFIGURATION.approverTypes.fieldIdentifying,\r\n        children: []\r\n      }\r\n    ];\r\n  }\r\n\r\n  private addExistingApproversToSelectedTree(allFunctionalRoles?: IFunctionalRoleDescriptor[]): void {\r\n    this.selectedApprovers = this.getEmptyApproverTree();\r\n\r\n    const approverList = this.activeModalRef\r\n      .getData()\r\n      .existingApprovers.split(RX_APPROVAL_CONFIGURATION.approverSeparator);\r\n\r\n    forEach(approverList, (approver: string) => {\r\n      if (this.rxApprovalConfigurationService.isFieldIdentifyingApprover(approver)) {\r\n        this.approverType = [\r\n          find(this.approverTypes, {\r\n            value: RX_APPROVAL_CONFIGURATION.approverTypes.fieldIdentifying\r\n          })\r\n        ];\r\n\r\n        this.selectedApprovers = [\r\n          {\r\n            label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.field.identifying'),\r\n            type: RX_APPROVAL_CONFIGURATION.approverTypes.fieldIdentifying,\r\n            children: [\r\n              {\r\n                label: this.rxApprovalConfigurationService.getFieldIdentifyingApprover(approver),\r\n                key: this.rxApprovalConfigurationService.getFieldIdentifyingApprover(approver),\r\n                data: `$${this.rxApprovalConfigurationService.getFieldIdentifyingApprover(approver)}$`\r\n              }\r\n            ],\r\n            expanded: true\r\n          }\r\n        ];\r\n      } else if (this.rxApprovalConfigurationService.isFunctionalRole(approver)) {\r\n        find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.functionalRole }).children.push({\r\n          key: this.rxApprovalConfigurationService.getFunctionalRoleGuid(approver),\r\n          data: this.getFunctionalRoleDataFormat(this.rxApprovalConfigurationService.getFunctionalRoleGuid(approver)),\r\n          label: get(\r\n            find(allFunctionalRoles, {\r\n              id: this.rxApprovalConfigurationService.getFunctionalRoleGuid(approver)\r\n            }),\r\n            'name'\r\n          )\r\n        });\r\n      } else if (this.rxApprovalConfigurationService.isApproverPeople(approver)) {\r\n        find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.people }).children.push({\r\n          key: approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[1],\r\n          label: approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[1],\r\n          data: this.getPeopleDataFormat(approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[1])\r\n        });\r\n      } else if (\r\n        this.rxApprovalConfigurationService.isCompany(approver) ||\r\n        this.rxApprovalConfigurationService.isSupportCompany(approver)\r\n      ) {\r\n        find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.company }).children.push({\r\n          label: this.rxApprovalConfigurationService.getLastLabel(approver),\r\n          key: `${this.rxApprovalConfigurationService.getLastLabel(approver)}`,\r\n          data: this.getCompanyDataFormat(this.rxApprovalConfigurationService.getLastLabel(approver))\r\n        });\r\n      } else if (this.rxApprovalConfigurationService.isCompanyOrg(approver)) {\r\n        find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.org }).children.push({\r\n          label: `${this.rxApprovalConfigurationService.getLastLabel(approver)}${this.getHierarchyLabel(approver)}`,\r\n          key: `${this.rxApprovalConfigurationService.getLastLabel(approver)}`,\r\n          data: this.getOrgDataFormat(\r\n            approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[1],\r\n            approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[2]\r\n          )\r\n        });\r\n      } else if (this.rxApprovalConfigurationService.isCompanyOrgDept(approver)) {\r\n        find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.dept }).children.push({\r\n          label: `${this.rxApprovalConfigurationService.getLastLabel(approver)}${this.getHierarchyLabel(approver)}`,\r\n          key: `${this.rxApprovalConfigurationService.getLastLabel(approver)}`,\r\n          data: this.getDeptDataFormat(\r\n            approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[1],\r\n            approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[2],\r\n            approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[3]\r\n          )\r\n        });\r\n      } else if (this.rxApprovalConfigurationService.isSupportCompanyOrg(approver)) {\r\n        find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.supportOrg }).children.push({\r\n          label: `${this.rxApprovalConfigurationService.getLastLabel(approver)}${this.getHierarchyLabel(approver)}`,\r\n          key: `${this.rxApprovalConfigurationService.getLastLabel(approver)}`,\r\n          data: this.getSupportOrgDataFormat(\r\n            approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[1],\r\n            approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[2]\r\n          )\r\n        });\r\n      } else if (this.rxApprovalConfigurationService.isSupportCompanyOrgGroup(approver)) {\r\n        find(this.selectedApprovers, { type: RX_APPROVAL_CONFIGURATION.approverTypes.supportGroup }).children.push({\r\n          label: `${this.rxApprovalConfigurationService.getLastLabel(approver)}${this.getHierarchyLabel(approver)}`,\r\n          key: `${this.rxApprovalConfigurationService.getLastLabel(approver)}`,\r\n          data: this.getSupportGroupDataFormat(\r\n            approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[1],\r\n            approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[2],\r\n            approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator)[3]\r\n          )\r\n        });\r\n      }\r\n    });\r\n\r\n    this.selectedApprovers = this.selectedApprovers\r\n      .filter((node: AdaptTreeNode) => node.children.length)\r\n      .map((node: AdaptTreeNode) => {\r\n        node.children.sort((a, b) => a.label.localeCompare(b.label));\r\n\r\n        return node;\r\n      });\r\n  }\r\n\r\n  private getHierarchyLabel(approver: string) {\r\n    const temp = approver.split(RX_APPROVAL_CONFIGURATION.levelSeparator);\r\n    temp.shift();\r\n    temp.pop();\r\n\r\n    return `(${temp.join(this.separatorArrow)})`;\r\n  }\r\n\r\n  close(): void {\r\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\r\n  }\r\n\r\n  private getDefaultSearchExpression(): string {\r\n    return `${RX_APPROVAL_CONFIGURATION.approverFields.companyField} != NULL`;\r\n  }\r\n}\r\n","<div class=\"approver-modal-body\">\n  <rx-busy-indicator [options]=\"{ busy: busy, loaderType: 'section' }\"></rx-busy-indicator>\n\n  <adapt-alert\n    *ngIf=\"isInvalidFieIdentifyingApprover()\"\n    [config]=\"{\n      variant: 'warning',\n      dismissible: false,\n      content: invalidMsg\n    }\"\n  ></adapt-alert>\n\n  <div class=\"d-flex h-100\">\n    <div class=\"flex-wrapper d-flex flex-column mh-100 wrapper-max-width\">\n      <h5 class=\"mt-1 mb-4\">\n        {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.available.label' | translate }}\n      </h5>\n\n      <adapt-rx-select\n        class=\"d-block form-group w-75\"\n        rx-id=\"approver-type\"\n        [(ngModel)]=\"approverType\"\n        [options]=\"approverTypes\"\n        (onSelectionChange)=\"switchApproversTree()\"\n        [optionFormatter]=\"optionFormatter\"\n      >\n      </adapt-rx-select>\n\n      <div class=\"flex-fill available-list\">\n        <div *ngIf=\"isCompanySelection()\" class=\"border section-wrapper flex-fill h-100\">\n          <rx-select-with-pagination\n            label=\"{{\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.company.label' | translate\n            }}\"\n            class=\"form-group d-block\"\n            [(ngModel)]=\"selectedCompanies\"\n            [optionLoader]=\"companyLoaderFunc\"\n            isMultiSelectionMode=\"true\"\n            (selectionChange)=\"onCompanySelectionChange()\"\n          ></rx-select-with-pagination>\n\n          <rx-select-with-pagination\n            label=\"{{\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.organization.label' | translate\n            }}\"\n            class=\"form-group d-block\"\n            [(ngModel)]=\"selectedOrganizations\"\n            [optionLoader]=\"organizationLoaderFunc\"\n            [template]=\"orgOptionTemplate\"\n            isMultiSelectionMode=\"true\"\n            (selectionChange)=\"onOrganizationSelectionChange()\"\n            #paginationComponents\n            [disabled]=\"selectedCompanies.length > 1\"\n            (toggleDropdown)=\"onToggleDropdown($event)\"\n          ></rx-select-with-pagination>\n\n          <rx-select-with-pagination\n            label=\"{{\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.department.label' | translate\n            }}\"\n            class=\"form-group d-block\"\n            [(ngModel)]=\"selectedDepartments\"\n            [optionLoader]=\"departmentLoaderFunc\"\n            [template]=\"optionTemplate\"\n            isMultiSelectionMode=\"true\"\n            #paginationComponents\n            [disabled]=\"selectedCompanies.length > 1 || selectedOrganizations.length > 1\"\n            (toggleDropdown)=\"onToggleDropdown($event)\"\n          ></rx-select-with-pagination>\n        </div>\n\n        <div *ngIf=\"isSupportCompanySelection()\" class=\"border section-wrapper flex-fill h-100\">\n          <rx-select-with-pagination\n            label=\"{{\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.support-company.label' | translate\n            }}\"\n            class=\"form-group d-block\"\n            [(ngModel)]=\"selectedSupportCompanies\"\n            [optionLoader]=\"companyLoaderFunc\"\n            isMultiSelectionMode=\"true\"\n            (selectionChange)=\"onSupportCompanySelectionChange()\"\n          ></rx-select-with-pagination>\n\n          <rx-select-with-pagination\n            label=\"{{\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.support-org.label' | translate\n            }}\"\n            class=\"form-group d-block\"\n            [(ngModel)]=\"selectedSupportOrganizations\"\n            [optionLoader]=\"supportOrganizationLoaderFunc\"\n            [template]=\"orgOptionTemplate\"\n            isMultiSelectionMode=\"true\"\n            (selectionChange)=\"onSupportOrganizationSelectionChange()\"\n            #paginationComponents\n            [disabled]=\"selectedSupportCompanies.length > 1\"\n            (toggleDropdown)=\"onToggleDropdown($event)\"\n          ></rx-select-with-pagination>\n\n          <rx-select-with-pagination\n            label=\"{{\n              'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.types.support-group.label' | translate\n            }}\"\n            class=\"form-group d-block\"\n            [(ngModel)]=\"selectedSupportGroups\"\n            [optionLoader]=\"supportGroupLoaderFunc\"\n            [template]=\"optionTemplate\"\n            isMultiSelectionMode=\"true\"\n            #paginationComponents\n            [disabled]=\"selectedSupportCompanies.length > 1 || selectedSupportOrganizations.length > 1\"\n            (toggleDropdown)=\"onToggleDropdown($event)\"\n          ></rx-select-with-pagination>\n        </div>\n      </div>\n\n      <div\n        class=\"available-list d-flex flex-column flex-fill h-100 border-top functional-roles border\"\n        *ngIf=\"isFunctionalRoleSelection()\"\n      >\n        <adapt-accordion [multiselect]=\"true\">\n          <adapt-accordion-tab\n            *ngFor=\"let application of availableFunctionRolesByApplication\"\n            title=\"{{ application.applicationName }}\"\n            [isOpen]=\"true\"\n          >\n            <adapt-rx-checkbox\n              *ngFor=\"let role of application.roles; let index = index\"\n              label=\"{{ role.name }}\"\n              [(ngModel)]=\"application.roles[index].selected\"\n            ></adapt-rx-checkbox>\n          </adapt-accordion-tab>\n        </adapt-accordion>\n      </div>\n\n      <div class=\"available-list user-list h-100 border section-wrapper\" *ngIf=\"isPeopleSelection()\">\n        <ul class=\"list-unstyled\">\n          <div class=\"border-bottom-0 user-search-wrapper\">\n            <adapt-rx-search\n              [(ngModel)]=\"userSearchTextInput\"\n              placeholder=\"Filter\"\n              [debounceTime]=\"200\"\n              (ngModelChange)=\"loadUsers($event)\"\n            >\n            </adapt-rx-search>\n          </div>\n\n          <li *ngFor=\"let user of loadedUsers; let index = index\">\n            <adapt-rx-checkbox\n              label=\"{{ user[1000000019] + ' ' + user[1000000018] }}\"\n              [(ngModel)]=\"loadedUsers[index].selected\"\n            ></adapt-rx-checkbox>\n          </li>\n\n          <button\n            class=\"py-0\"\n            type=\"button\"\n            adapt-button\n            btn-type=\"tertiary\"\n            rx-id=\"load-more-button\"\n            (click)=\"loadUsers()\"\n            *ngIf=\"showLoadMoreButton && !loadingMore\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.load-more.label' | translate }}\n          </button>\n\n          <div class=\"loader-container\" *ngIf=\"loadingMore\">\n            <div class=\"loader-inline\"></div>\n            <span class=\"ml-2\">{{ 'com.bmc.arsys.rx.client.common.loading-data' | translate }}</span>\n          </div>\n        </ul>\n      </div>\n\n      <div class=\"available-list h-100 border field-identifying section-wrapper\" *ngIf=\"isFieldIdentifyingSelection()\">\n        <ul class=\"list-unstyled\">\n          <li *ngFor=\"let field of availableFields; let index = index\">\n            <adapt-rx-checkbox\n              label=\"{{ field.name }}\"\n              [(ngModel)]=\"availableFields[index].selected\"\n            ></adapt-rx-checkbox>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <button\n      type=\"button\"\n      adapt-button\n      class=\"d-icon-right-angle_right form-group move-button\"\n      btn-type=\"secondary\"\n      rx-id=\"move-button\"\n      (click)=\"moveToSelectedApprovers()\"\n      [disabled]=\"isInvalidFieIdentifyingApprover() || noApproverSelected()\"\n    ></button>\n\n    <div class=\"flex-wrapper d-flex flex-column mh-100\">\n      <h5 class=\"mt-1 mb-4\">\n        {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.selected.label' | translate }}\n      </h5>\n\n      <button\n        type=\"button\"\n        adapt-button\n        class=\"d-icon-left-trash form-group align-self-start\"\n        btn-type=\"secondary\"\n        rx-id=\"remove-button\"\n        (click)=\"removeApproversFromSelection()\"\n        [disabled]=\"!selectedApproverSelection.length\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.remove.label' | translate }}\n      </button>\n\n      <div class=\"card available-list flex-fill\">\n        <div class=\"card-block\">\n          <adapt-tree\n            #tree\n            *ngIf=\"selectedApprovers.length && shouldShowTree\"\n            filter=\"true\"\n            [value]=\"selectedApprovers\"\n            selectionMode=\"checkbox\"\n            [(selection)]=\"selectedApproverSelection\"\n            [wrap]=\"treeWrap\"\n          >\n          </adapt-tree>\n        </div>\n\n        <div class=\"vertical-center\" *ngIf=\"!selectedApprovers.length\">\n          <div class=\"empty-state empty-state--config\"></div>\n          <div class=\"empty-state__label\">\n            {{ 'com.bmc.arsys.rx.client.empty-state.no-items-available.label' | translate }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal-footer\">\n  <button\n    adapt-button\n    type=\"button\"\n    btn-type=\"primary\"\n    rx-id=\"save-button\"\n    (click)=\"completeSelection()\"\n    [disabled]=\"!hasUserInteracted\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button adapt-button type=\"button\" btn-type=\"secondary\" rx-id=\"close-button\" (click)=\"close()\">\n    {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n  </button>\n</div>\n\n<ng-template #optionTemplate let-option>\n  <strong>{{ option.displayValue }}</strong>\n\n  <div class=\"text-secondary\">\n    {{ option.value + separatorArrow + option.organization }}\n  </div>\n</ng-template>\n\n<ng-template #orgOptionTemplate let-option>\n  <strong>{{ option.displayValue }}</strong>\n\n  <div class=\"text-secondary\">\n    {{ option.value }}\n  </div>\n</ng-template>\n","import { moveItemInArray } from '@angular/cdk/drag-drop';\nimport { CdkDragDrop } from '@angular/cdk/drag-drop/';\nimport { AfterViewInit, Component, ErrorHandler, Injector, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AdaptPopoverDirective, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { ExpressionOperatorGroup, IFunctionalRoleDescriptor, RxNotificationService } from '@helix/platform/shared/api';\nimport {\n  IDefinitionPickerComponentOptions,\n  IExpressionEditorPropertyChange,\n  IExpressionFormControlOptions,\n  RxDefinitionPickerType,\n  RxExpressionEditorService\n} from '@helix/platform/shared/components';\nimport { IDialogApi, RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { OpenViewActionModalSize } from '@helix/platform/view/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  cloneDeep,\n  filter as _filter,\n  find,\n  flatten,\n  flow,\n  forEach,\n  get,\n  map as _map,\n  omit,\n  reject,\n  remove,\n  some,\n  sortBy,\n  trim\n} from 'lodash';\nimport { forkJoin, Observable, of, ReplaySubject } from 'rxjs';\nimport {\n  catchError,\n  defaultIfEmpty,\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n  takeUntil,\n  tap\n} from 'rxjs/operators';\nimport { RX_APPROVAL_CONFIGURATION } from '../approval-configuration.constant';\nimport { RxApprovalConfigurationService } from '../approval-configuration.service';\nimport {\n  IApprovalFlow,\n  IApprovalFlowGroup,\n  IApprovalFlowGroupConfigurationResponse,\n  IApprovalFlowOutcomeAction,\n  IFlowGroupRequestResponse\n} from '../approval-configuration.types';\nimport { RxApprovalExpressionConfigurator } from '../approval-expression-configurator';\nimport { FlowApproversSelectorComponent } from '../flow-approvers-selector/flow-approvers-selector.component';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'rx-approval-flow-configuration',\n  templateUrl: './approval-flow-configuration.component.html',\n  styleUrls: ['./approval-flow-configuration.component.scss']\n})\nexport class ApprovalFlowConfigurationComponent implements OnInit, OnDestroy, AfterViewInit {\n  @Input()\n  registeredRecordDefinitionName: string;\n\n  @ViewChild(AdaptPopoverDirective)\n  adaptPopoverDirective: AdaptPopoverDirective;\n\n  @ViewChild('approvalFlowsForm')\n  approvalFlowsForm: NgForm;\n\n  flowGroupName: string;\n  flowGroupNewName: string;\n  allAvailableFlowGroups: IApprovalFlowGroup[] = [];\n  selectedFlowGroup: IApprovalFlowGroup;\n  flowQualificationOptions: IExpressionFormControlOptions;\n  qualifyApproversOptions: IExpressionFormControlOptions;\n\n  signingCriteriaList: RxSelectOption[] = [\n    {\n      value: RX_APPROVAL_CONFIGURATION.approverCriteria.oneMust,\n      displayValue: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.configuration.if-multiple-approvers.types.one-must-approve'\n      )\n    },\n    {\n      value: RX_APPROVAL_CONFIGURATION.approverCriteria.allMust,\n      displayValue: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.configuration.if-multiple-approvers.types.all-must-approve'\n      )\n    },\n    {\n      value: RX_APPROVAL_CONFIGURATION.approverCriteria.percentage,\n      displayValue: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.configuration.if-multiple-approvers.types.percentage-must-approve'\n      )\n    }\n  ];\n\n  signingCriteriaPercentageList: number[] = RX_APPROVAL_CONFIGURATION.signingCriteriaPercentageList;\n\n  processOnApproveOptions: IDefinitionPickerComponentOptions = {\n    label: this.translateService.instant(\n      'com.bmc.arsys.rx.client.approval.configuration.flow.outcome.on-approve-label'\n    ),\n    definitionType: RxDefinitionPickerType.PublicProcess\n  };\n\n  processOnRejectOptions: IDefinitionPickerComponentOptions = {\n    label: this.translateService.instant(\n      'com.bmc.arsys.rx.client.approval.configuration.flow.outcome.on-rejection-label'\n    ),\n    definitionType: RxDefinitionPickerType.PublicProcess\n  };\n\n  processOnErrorOptions: IDefinitionPickerComponentOptions = {\n    label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.flow.outcome.on-error-label'),\n    definitionType: RxDefinitionPickerType.PublicProcess\n  };\n\n  protected expressionConfigurator: RxApprovalExpressionConfigurator;\n  private existingFlowGroupNames: string[] = [];\n  private dialogApi: IDialogApi;\n  private isSaveInProgress = false;\n  private availableFunctionalRoles: IFunctionalRoleDescriptor[];\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private deletedFlowGroups: string[] = [];\n\n  constructor(\n    private injector: Injector,\n    private errorHandler: ErrorHandler,\n    private rxModalService: RxModalService,\n    private translateService: TranslateService,\n    private rxNotificationService: RxNotificationService,\n    private rxExpressionEditorService: RxExpressionEditorService,\n    private rxApprovalConfigurationService: RxApprovalConfigurationService\n  ) {\n    this.selectedFlowGroup = this.getEmptyFlowGroup();\n  }\n\n  private getEmptyFlowGroup(): IApprovalFlowGroup {\n    return {\n      flowGroup: null,\n      approvalFlowConfigurationList: []\n    };\n  }\n\n  ngOnInit() {\n    this.expressionConfigurator = new RxApprovalExpressionConfigurator(this.injector);\n\n    this.expressionConfigurator.configureForProperty({\n      propertyPath: RX_APPROVAL_CONFIGURATION.flowQualificationProperty,\n      dataDictionary$: this.expressionConfigurator.approvalExpressionDataDictionary(\n        this.registeredRecordDefinitionName\n      ),\n      operators: this.expressionConfigurator.getOperatorRowsByGroup(ExpressionOperatorGroup.All)\n    });\n\n    this.flowQualificationOptions = {\n      label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.qualification'),\n      dataDictionary$: this.expressionConfigurator.getDataDictionary(\n        RX_APPROVAL_CONFIGURATION.flowQualificationProperty\n      ),\n      operators: this.expressionConfigurator.getOperators(RX_APPROVAL_CONFIGURATION.flowQualificationProperty),\n      isRequired: true\n    };\n\n    this.expressionConfigurator.configureForProperty({\n      propertyPath: RX_APPROVAL_CONFIGURATION.approverQualificationProperty,\n      dataDictionary$: this.expressionConfigurator.getCtmPeopleFormFields(this.registeredRecordDefinitionName),\n      operators: this.expressionConfigurator.getOperatorRowsByGroup(ExpressionOperatorGroup.All)\n    });\n\n    this.qualifyApproversOptions = {\n      label: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.configuration.flow.general.qualify-approvers.label'\n      ),\n      dataDictionary$: this.expressionConfigurator.getDataDictionary(\n        RX_APPROVAL_CONFIGURATION.approverQualificationProperty\n      ),\n      operators: this.expressionConfigurator.getOperators(RX_APPROVAL_CONFIGURATION.approverQualificationProperty)\n    };\n\n    this.rxApprovalConfigurationService\n      .getFunctionalRoles()\n      .pipe(\n        tap((functionalRoles: IFunctionalRoleDescriptor[]) => {\n          this.availableFunctionalRoles = functionalRoles;\n        }),\n        switchMap(() => this.getFlowGroups())\n      )\n      .subscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.approvalFlowsForm.form.valueChanges.pipe(distinctUntilChanged(), takeUntil(this.destroyed$)).subscribe(() => {\n      if (this.approvalFlowsForm.dirty) {\n        this.selectedFlowGroup.isDirty = true;\n      }\n    });\n  }\n\n  private getFlowGroups(): Observable<IApprovalFlowGroupConfigurationResponse> {\n    this.existingFlowGroupNames = [];\n    this.deletedFlowGroups = [];\n\n    return this.rxApprovalConfigurationService.getApprovalFlowConfigurations(this.registeredRecordDefinitionName).pipe(\n      tap((flowConfigurationResponse: IApprovalFlowGroupConfigurationResponse) => {\n        this.allAvailableFlowGroups = flowConfigurationResponse.approvalFlowGroupConfigurations;\n\n        if (this.allAvailableFlowGroups?.length) {\n          this.allAvailableFlowGroups = this.allAvailableFlowGroups\n            .map((flowGroup: IApprovalFlowGroup) => {\n              flowGroup.isDirty = false;\n              flowGroup.hasError = false;\n              this.existingFlowGroupNames.push(flowGroup.flowGroup);\n\n              flowGroup.approvalFlowConfigurationList = this.refactorFlowsResponse(\n                flowGroup.approvalFlowConfigurationList\n              );\n\n              return flowGroup;\n            })\n            .sort((a, b) => a.flowGroup.localeCompare(b.flowGroup));\n\n          this.selectedFlowGroup = this.selectedFlowGroup.flowGroup\n            ? find(this.allAvailableFlowGroups, { flowGroup: this.selectedFlowGroup.flowGroup })\n            : this.allAvailableFlowGroups[0];\n\n          this.collapseAll();\n          this.isSaveInProgress = false;\n        }\n      })\n    );\n  }\n\n  preparePayload(flowGroup: IApprovalFlowGroup): IApprovalFlowGroup {\n    const flowGroupConfiguration: IApprovalFlowGroup = cloneDeep(omit(flowGroup, ['isDirty', 'hasError']));\n\n    flowGroupConfiguration.approvalFlowConfigurationList = _map(\n      flowGroupConfiguration.approvalFlowConfigurationList,\n      (approvalFlow: IApprovalFlow) => {\n        approvalFlow = {\n          ...omit(approvalFlow, [\n            'isOpen',\n            'hasError',\n            'approversDisplayValue',\n            'isFieldIdentifyingApprover',\n            'signingCriteriaList'\n          ])\n        };\n\n        approvalFlow.approvalFlowOutcomeMappingList = reject(\n          approvalFlow.approvalFlowOutcomeMappingList,\n          (outcome: IApprovalFlowOutcomeAction) => !outcome.processName\n        );\n\n        approvalFlow.flowName = trim(approvalFlow.flowName);\n        approvalFlow.signingCriteria = approvalFlow.signingCriteria[0].value;\n\n        approvalFlow.approvalOverridePercentage =\n          approvalFlow.signingCriteria === RX_APPROVAL_CONFIGURATION.approverCriteria.percentage\n            ? approvalFlow.approvalOverridePercentage[0]\n            : 0;\n\n        if (\n          approvalFlow.approvers &&\n          !this.rxApprovalConfigurationService.isFieldIdentifyingApprover(approvalFlow.approvers)\n        ) {\n          approvalFlow.approvers = '\\\\\"' + approvalFlow.approvers + '\\\\\"';\n        }\n\n        approvalFlow.approvers = approvalFlow.approvers || RX_APPROVAL_CONFIGURATION.noApproverProvided;\n\n        return approvalFlow;\n      }\n    );\n\n    return flowGroupConfiguration;\n  }\n\n  canSave(): boolean {\n    return !this.isSaveInProgress && ((this.areFlowGroupsValid() && this.isDirty()) || !!this.deletedFlowGroups.length);\n  }\n\n  isDirty(): boolean {\n    return (\n      some(this.allAvailableFlowGroups, (flowGroup: IApprovalFlowGroup) => flowGroup.isDirty) ||\n      Boolean(this.dialogApi?.isDirty()) ||\n      !!this.deletedFlowGroups.length\n    );\n  }\n\n  areFlowGroupsValid(): boolean {\n    return !some(this.allAvailableFlowGroups, this.isInvalidFlowGroup);\n  }\n\n  private isInvalidFlowGroup(flowGroup: IApprovalFlowGroup): boolean {\n    return (\n      !flowGroup.approvalFlowConfigurationList.length ||\n      some(\n        flowGroup.approvalFlowConfigurationList,\n        (flow: IApprovalFlow) =>\n          !flow.flowName || !flow.qualification || (flow.isLevelUp && flow.levels < 1) || flow.hasError\n      )\n    );\n  }\n\n  hasFlowGroups(): string {\n    return this.selectedFlowGroup.flowGroup;\n  }\n\n  private isInvalidFlow(flow: IApprovalFlow): boolean {\n    return (\n      !flow.flowName ||\n      !flow.qualification ||\n      (flow.isLevelUp && flow.levels < 1) ||\n      (!flow.isLevelUp && !flow.approvers && !flow.approverQualification)\n    );\n  }\n\n  markInvalidSelectedGroupAndFlows(): void {\n    this.selectedFlowGroup.approvalFlowConfigurationList.forEach((approvalFlow: IApprovalFlow) => {\n      approvalFlow.hasError = this.isInvalidFlow(approvalFlow);\n    });\n\n    this.selectedFlowGroup.hasError =\n      !this.selectedFlowGroup.approvalFlowConfigurationList.length ||\n      some(this.selectedFlowGroup.approvalFlowConfigurationList, (flow) => flow.hasError);\n  }\n\n  markInvalidGroupsAndFlows(): void {\n    this.allAvailableFlowGroups.forEach((flowGroup: IApprovalFlowGroup) => {\n      flowGroup.approvalFlowConfigurationList.forEach((approvalFlow: IApprovalFlow) => {\n        approvalFlow.hasError = this.isInvalidFlow(approvalFlow);\n      });\n\n      flowGroup.hasError =\n        !flowGroup.approvalFlowConfigurationList.length ||\n        some(flowGroup.approvalFlowConfigurationList, (flow) => flow.hasError);\n    });\n  }\n\n  saveFlowGroups(): void {\n    this.approvalFlowsForm.form.markAsPristine();\n\n    let createFailedCount = 0;\n    let createSuccessCount = 0;\n    let updateFailedCount = 0;\n    let updateSuccessCount = 0;\n    let deleteFailedCount = 0;\n    let deleteSuccessCount = 0;\n\n    const updateRequests$: Observable<IFlowGroupRequestResponse>[] = [];\n    const createRequests$: Observable<IFlowGroupRequestResponse>[] = [];\n\n    const deleteRequests$: Observable<IFlowGroupRequestResponse>[] = this.deletedFlowGroups.map(\n      (flowGroupName: string) =>\n        this.rxApprovalConfigurationService\n          .deleteApprovalFlowGroup(flowGroupName, this.registeredRecordDefinitionName)\n          .pipe(\n            map(() => <IFlowGroupRequestResponse>{ status: 'Success' }),\n            catchError((error: HttpErrorResponse) =>\n              of(<IFlowGroupRequestResponse>{\n                status: 'Failed',\n                error\n              })\n            )\n          )\n    );\n\n    this.allAvailableFlowGroups.forEach((flowGroup: IApprovalFlowGroup) => {\n      if (flowGroup.isDirty) {\n        this.isSaveInProgress = true;\n\n        const flowGroupConfiguration: IApprovalFlowGroup = this.preparePayload(flowGroup);\n\n        if (this.isExistingFlowGroup(flowGroupConfiguration.flowGroup) || flowGroupConfiguration.flowGroupOldName) {\n          updateRequests$.push(\n            this.rxApprovalConfigurationService\n              .updateApprovalFlowGroup(\n                flowGroupConfiguration.flowGroupOldName || flowGroupConfiguration.flowGroup,\n                omit(flowGroupConfiguration, 'flowGroupOldName'),\n                this.registeredRecordDefinitionName\n              )\n              .pipe(\n                map(\n                  () =>\n                    <IFlowGroupRequestResponse>{\n                      status: 'Success'\n                    }\n                ),\n                catchError((error: HttpErrorResponse) =>\n                  of(<IFlowGroupRequestResponse>{\n                    status: 'Failed',\n                    error\n                  })\n                )\n              )\n          );\n        } else {\n          createRequests$.push(\n            this.rxApprovalConfigurationService\n              .saveApprovalFlowGroup(flowGroupConfiguration, this.registeredRecordDefinitionName)\n              .pipe(\n                switchMap(() =>\n                  this.rxApprovalConfigurationService.getApprovalFlowGroup(\n                    this.registeredRecordDefinitionName,\n                    flowGroupConfiguration.flowGroup\n                  )\n                ),\n                tap((createdFlowGroup: IApprovalFlowGroup) => {\n                  this.existingFlowGroupNames.push(createdFlowGroup.flowGroup);\n\n                  const flowGroup = find(this.allAvailableFlowGroups, { flowGroup: createdFlowGroup.flowGroup });\n\n                  flowGroup.isDirty = false;\n\n                  forEach(flowGroup.approvalFlowConfigurationList, (flow: IApprovalFlow, flowIndex: number) => {\n                    flow.approvalProcessId =\n                      createdFlowGroup.approvalFlowConfigurationList[flowIndex].approvalProcessId;\n                    flow.guid = createdFlowGroup.approvalFlowConfigurationList[flowIndex].guid;\n                  });\n                }),\n                map(\n                  () =>\n                    <IFlowGroupRequestResponse>{\n                      status: 'Success'\n                    }\n                ),\n                catchError((error: HttpErrorResponse) =>\n                  of(<IFlowGroupRequestResponse>{\n                    status: 'Failed',\n                    error\n                  })\n                )\n              )\n          );\n        }\n      }\n    });\n\n    forkJoin({\n      createRequests: forkJoin(createRequests$).pipe(defaultIfEmpty([])),\n      updateRequests: forkJoin(updateRequests$).pipe(defaultIfEmpty([])),\n      deleteRequests: forkJoin(deleteRequests$).pipe(defaultIfEmpty([]))\n    })\n      .pipe(\n        tap((response: any) => {\n          let message = '';\n\n          const failedResponses: IFlowGroupRequestResponse[] = flatten(\n            _map(response, (requestResponses) => _filter(requestResponses, { status: 'Failed' }))\n          );\n\n          createFailedCount = _filter(response.createRequests, { status: 'Failed' }).length;\n          createSuccessCount = _filter(response.createRequests, { status: 'Success' }).length;\n          updateFailedCount = _filter(response.updateRequests, { status: 'Failed' }).length;\n          updateSuccessCount = _filter(response.updateRequests, { status: 'Success' }).length;\n          deleteFailedCount = _filter(response.deleteRequests, { status: 'Failed' }).length;\n          deleteSuccessCount = _filter(response.deleteRequests, { status: 'Success' }).length;\n\n          if (createSuccessCount) {\n            message += `${this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.configuration.message.flowgroup.created',\n              { count: createSuccessCount }\n            )}\\n`;\n          }\n\n          if (updateSuccessCount) {\n            message += `${this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.configuration.message.flowgroup.updated',\n              { count: updateSuccessCount }\n            )}\\n`;\n          }\n\n          if (deleteSuccessCount) {\n            message += `${this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.configuration.message.flowgroup.deleted',\n              { count: deleteSuccessCount }\n            )}\\n`;\n          }\n\n          if (createFailedCount) {\n            message += `${this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.configuration.message.flowgroup.create-failed',\n              { count: createFailedCount }\n            )}\\n`;\n          }\n\n          if (updateFailedCount) {\n            message += `${this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.configuration.message.flowgroup.update-failed',\n              { count: updateFailedCount }\n            )}\\n`;\n          }\n\n          if (deleteFailedCount) {\n            message += `${this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.configuration.message.flowgroup.delete-failed',\n              { count: deleteFailedCount }\n            )}\\n`;\n          }\n\n          if (createFailedCount || updateFailedCount || deleteFailedCount) {\n            this.rxNotificationService.addWarningMessage(message);\n          } else {\n            this.rxNotificationService.addSuccessMessage(message);\n          }\n\n          forEach(failedResponses, (requestResponse: IFlowGroupRequestResponse) => {\n            this.errorHandler.handleError(requestResponse.error);\n          });\n        }),\n        filter(() => !(createFailedCount || updateFailedCount || deleteFailedCount)),\n        switchMap(() => this.getFlowGroups())\n      )\n      .subscribe({\n        complete: () => {\n          this.isSaveInProgress = false;\n        }\n      });\n  }\n\n  onKeyDownNew(event: KeyboardEvent): void {\n    if (event.code === 'Enter' && !this.isAddNewFlowGroupButtonDisabled()) {\n      this.addNewFlowGroup();\n    }\n  }\n\n  addNewFlowGroup(): void {\n    this.markInvalidSelectedGroupAndFlows();\n    this.adaptPopoverDirective.close();\n\n    this.allAvailableFlowGroups.push({\n      flowGroup: trim(this.flowGroupName),\n      hasError: true,\n      approvalFlowConfigurationList: []\n    });\n\n    this.allAvailableFlowGroups.sort((a, b) => a.flowGroup.localeCompare(b.flowGroup));\n    this.selectedFlowGroup = find(this.allAvailableFlowGroups, { flowGroup: trim(this.flowGroupName) });\n    this.flowGroupName = null;\n  }\n\n  onKeyDownRename(event: KeyboardEvent, context): void {\n    if (event.code === 'Enter') {\n      this.renameFlowGroup(context);\n    }\n  }\n\n  renameFlowGroup(context: any): void {\n    if (!this.isExistingFlowGroup()) {\n      this.selectedFlowGroup.flowGroup = trim(this.flowGroupNewName);\n\n      context.close();\n    } else {\n      this.rxModalService\n        .confirm({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n          modalStyle: RX_MODAL.modalStyles.warning,\n          message: this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.configuration.message.flowgroup.updatingGroupName'\n          )\n        })\n        .then((result: boolean) => {\n          if (result) {\n            this.selectedFlowGroup.isDirty = true;\n            this.selectedFlowGroup.flowGroupOldName = this.selectedFlowGroup.flowGroup;\n            this.selectedFlowGroup.flowGroup = trim(this.flowGroupNewName);\n          }\n        });\n    }\n  }\n\n  deleteFlowGroup(): void {\n    if (!this.isExistingFlowGroup()) {\n      this.rxModalService\n        .confirm({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n          modalStyle: RX_MODAL.modalStyles.warning,\n          message: this.translateService.instant('com.bmc.arsys.rx.client.common.unsaved-data.message')\n        })\n        .then((result: boolean) => {\n          if (result) {\n            remove(this.allAvailableFlowGroups, { flowGroup: this.selectedFlowGroup.flowGroup });\n            this.setEmptyFlowGroup();\n          }\n        });\n    } else {\n      this.rxModalService\n        .confirm({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n          modalStyle: RX_MODAL.modalStyles.warning,\n          message: this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.configuration.message.flowgroup.confirm'\n          )\n        })\n        .then((result: boolean) => {\n          if (result) {\n            this.deletedFlowGroups.push(this.selectedFlowGroup.flowGroup);\n            remove(this.allAvailableFlowGroups, { flowGroup: this.selectedFlowGroup.flowGroup });\n            this.setEmptyFlowGroup();\n          }\n        });\n    }\n  }\n\n  private setEmptyFlowGroup(): void {\n    this.selectedFlowGroup = this.getEmptyFlowGroup();\n  }\n\n  onFlowQualificationEvent(flowIndex: number): void {\n    this.selectFlowQualificationExpression(flowIndex);\n  }\n\n  private selectFlowQualificationExpression(flowIndex: number): void {\n    this.rxExpressionEditorService\n      .openEditor(\n        {\n          property: {\n            path: RX_APPROVAL_CONFIGURATION.flowQualificationProperty,\n            value: this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].qualification,\n            label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.qualification')\n          },\n          expressionConfigurator: this.expressionConfigurator,\n          legend: [\n            {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'),\n              icon: 'd-icon-dollar'\n            },\n            {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.field.label'),\n              icon: 'd-icon-field_text'\n            }\n          ]\n        },\n        (dialogApi: IDialogApi) => (this.dialogApi = dialogApi)\n      )\n      .subscribe((expression: IExpressionEditorPropertyChange) => {\n        this.dialogApi = null;\n        this.approvalFlowsForm.form.markAsDirty();\n        this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].qualification = expression.value;\n      });\n  }\n\n  onApproverQualificationEvent(flowIndex: number): void {\n    this.selectApproverQualificationExpression(flowIndex);\n  }\n\n  private selectApproverQualificationExpression(flowIndex: number): void {\n    this.rxExpressionEditorService\n      .openEditor(\n        {\n          property: {\n            path: RX_APPROVAL_CONFIGURATION.approverQualificationProperty,\n            value: this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].approverQualification,\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.configuration.flow.general.qualify-approvers.label'\n            )\n          },\n          expressionConfigurator: this.expressionConfigurator,\n          legend: [\n            {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'),\n              icon: 'd-icon-dollar'\n            },\n            {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.field.label'),\n              icon: 'd-icon-field_text'\n            }\n          ]\n        },\n        (dialogApi: IDialogApi) => (this.dialogApi = dialogApi)\n      )\n      .subscribe((expression: IExpressionEditorPropertyChange) => {\n        this.dialogApi = null;\n        this.approvalFlowsForm.form.markAsDirty();\n        this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].approverQualification = expression.value;\n        this.updateFlowErrorState(flowIndex);\n      });\n  }\n\n  private updateFlowErrorState(flowIndex: number): void {\n    this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].hasError = Boolean(\n      !this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].approverQualification &&\n        !this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].approvers\n    );\n\n    this.selectedFlowGroup.hasError = some(\n      this.selectedFlowGroup.approvalFlowConfigurationList,\n      (flow) => flow.hasError\n    );\n  }\n\n  private getFlowEmptyOutcomes(): IApprovalFlowOutcomeAction[] {\n    return [\n      {\n        processName: null,\n        action: '2',\n        statusOutcome: '1'\n      },\n      {\n        processName: null,\n        action: '2',\n        statusOutcome: '2'\n      },\n      {\n        processName: null,\n        action: '2',\n        statusOutcome: '6'\n      }\n    ];\n  }\n\n  private getEmptyGeneralApprovalFlow(): IApprovalFlow {\n    return {\n      isOpen: true,\n      hasError: false,\n      approvalProcessId: null,\n      flowName: '',\n      processType: null,\n      qualification: null,\n      formattedQualification: null,\n      precedence: this.selectedFlowGroup.approvalFlowConfigurationList.length,\n      signingCriteria: this.getCriteria(),\n      signingCriteriaList: this.getFlowCriteriaList(),\n      approvalOverridePercentage: 50,\n      isLevelUp: false,\n      levels: null,\n      approvers: '',\n      applyApproverExclusion: true,\n      approversDisplayValue: '',\n      approverQualification: null,\n      approvalFlowOutcomeMappingList: this.getFlowEmptyOutcomes()\n    };\n  }\n\n  getCriteria(value?: number): RxSelectOption[] {\n    return [find(this.getFlowCriteriaList(), { value: value || RX_APPROVAL_CONFIGURATION.approverCriteria.oneMust })];\n  }\n\n  getFlowCriteriaList(): RxSelectOption[] {\n    return cloneDeep(this.signingCriteriaList);\n  }\n\n  addNewGeneralFlow(): void {\n    this.collapseAll();\n\n    setTimeout(() => {\n      this.selectedFlowGroup.approvalFlowConfigurationList.push(this.getEmptyGeneralApprovalFlow());\n    });\n  }\n\n  addNewLevelUpFlow(): void {\n    this.collapseAll();\n\n    setTimeout(() => {\n      this.selectedFlowGroup.approvalFlowConfigurationList.push({\n        ...this.getEmptyGeneralApprovalFlow(),\n        isLevelUp: true\n      });\n    });\n  }\n\n  selectFlowGroup(flowGroupName: string): void {\n    this.selectedFlowGroup = find(this.allAvailableFlowGroups, { flowGroup: flowGroupName });\n\n    if (!this.selectedFlowGroup.isDirty) {\n      this.approvalFlowsForm.form.markAsPristine();\n    }\n\n    this.collapseAll();\n    this.markInvalidGroupsAndFlows();\n  }\n\n  onSelectedFlowDrop(event: CdkDragDrop<IApprovalFlow>): void {\n    this.moveFlow(event.previousIndex, event.currentIndex);\n  }\n\n  moveFlow(previousIndex: number, currentIndex: number): void {\n    moveItemInArray(this.selectedFlowGroup.approvalFlowConfigurationList, previousIndex, currentIndex);\n    this.resetFlowPrecedences();\n  }\n\n  moveFlowUp(currentIndex: number) {\n    moveItemInArray(this.selectedFlowGroup.approvalFlowConfigurationList, currentIndex, currentIndex - 1);\n    this.resetFlowPrecedences();\n  }\n\n  moveFlowDown(currentIndex: number) {\n    moveItemInArray(this.selectedFlowGroup.approvalFlowConfigurationList, currentIndex, currentIndex + 1);\n    this.resetFlowPrecedences();\n  }\n\n  removeFlow(index: number): void {\n    this.selectedFlowGroup.approvalFlowConfigurationList.splice(index, 1);\n    this.markInvalidSelectedGroupAndFlows();\n    this.resetFlowPrecedences();\n  }\n\n  resetFlowPrecedences(): void {\n    this.approvalFlowsForm.form.markAsDirty();\n\n    this.selectedFlowGroup.approvalFlowConfigurationList = this.selectedFlowGroup.approvalFlowConfigurationList.map(\n      (currentFlow: IApprovalFlow, index: number) => {\n        currentFlow.precedence = index;\n\n        return currentFlow;\n      }\n    );\n  }\n\n  optionFormatter(option: RxSelectOption): string {\n    return option.displayValue;\n  }\n\n  private refactorFlowsResponse(approvalFlows: IApprovalFlow[]): IApprovalFlow[] {\n    return flow(\n      (flows) => sortBy(flows, 'precedence'),\n      (flows) =>\n        _map(flows, (currentFlow: IApprovalFlow) => {\n          currentFlow.isOpen = false;\n          const flowOutcomeMappings = cloneDeep(currentFlow.approvalFlowOutcomeMappingList);\n\n          currentFlow.approvalFlowOutcomeMappingList[0] =\n            find(flowOutcomeMappings, { statusOutcome: '1' }) || this.getFlowEmptyOutcomes()[0];\n\n          currentFlow.approvalFlowOutcomeMappingList[1] =\n            find(flowOutcomeMappings, { statusOutcome: '2' }) || this.getFlowEmptyOutcomes()[1];\n\n          currentFlow.approvalFlowOutcomeMappingList[2] =\n            find(flowOutcomeMappings, { statusOutcome: '6' }) || this.getFlowEmptyOutcomes()[2];\n\n          if (!currentFlow.approvers || currentFlow.approvers === RX_APPROVAL_CONFIGURATION.noApproverProvided) {\n            currentFlow.approvers = '';\n          }\n\n          currentFlow.approvers = currentFlow.approvers.replace(/\\\\\"/g, '');\n          currentFlow.approversDisplayValue = this.getApproversDisplay(currentFlow);\n          currentFlow.signingCriteriaList = this.getFlowCriteriaList();\n          currentFlow.approvalOverridePercentage = [currentFlow.approvalOverridePercentage];\n\n          currentFlow.signingCriteria = [\n            {\n              value: currentFlow.signingCriteria,\n              displayValue: this.getCriteria(currentFlow.signingCriteria)[0].displayValue\n            }\n          ];\n\n          return currentFlow;\n        })\n    )(approvalFlows);\n  }\n\n  isExistingFlowGroup(flowGroupName: string = null): boolean {\n    return this.existingFlowGroupNames.includes(flowGroupName || this.selectedFlowGroup.flowGroup);\n  }\n\n  isRenameFlowGroupButtonDisabled(): boolean {\n    return (\n      trim(this.flowGroupNewName) !== this.selectedFlowGroup.flowGroup &&\n      some(\n        this.allAvailableFlowGroups,\n        (flowGroup) => flowGroup.flowGroup.toLowerCase() === trim(this.flowGroupNewName.toLowerCase())\n      )\n    );\n  }\n\n  isAddNewFlowGroupButtonDisabled(): boolean {\n    return (\n      !this.flowGroupName ||\n      some(\n        this.allAvailableFlowGroups,\n        (flowGroup) => flowGroup.flowGroup.toLowerCase() === trim(this.flowGroupName.toLowerCase())\n      )\n    );\n  }\n\n  expandAll(): void {\n    this.selectedFlowGroup.approvalFlowConfigurationList.forEach(\n      (approvalFlow: IApprovalFlow) => (approvalFlow.isOpen = true)\n    );\n  }\n\n  collapseAll(): void {\n    this.selectedFlowGroup.approvalFlowConfigurationList.forEach(\n      (approvalFlow: IApprovalFlow) => (approvalFlow.isOpen = false)\n    );\n  }\n\n  selectFlowApprovers(flowIndex: number): void {\n    this.rxModalService\n      .openModal({\n        title:\n          this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.configuration.flow.select-approvers-dialog.title'\n          ) +\n          ': ' +\n          this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].flowName,\n        data: {\n          registeredRecordDefinitionName: this.registeredRecordDefinitionName,\n          existingApprovers: this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].approvers,\n          isFieldIdentifyingApprover:\n            this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].isFieldIdentifyingApprover,\n          onApiReady: (dialogApi: IDialogApi) => {\n            this.dialogApi = dialogApi;\n          }\n        },\n        content: FlowApproversSelectorComponent,\n        size: OpenViewActionModalSize.Large as any\n      })\n      .then((result) => {\n        this.dialogApi = null;\n        this.approvalFlowsForm.form.markAsDirty();\n        this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].approvers = result.value;\n        this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].approversDisplayValue = result.displayValue;\n        this.manageApproverCriteriaOption(flowIndex);\n        this.updateFlowErrorState(flowIndex);\n        this.selectedFlowGroup.isDirty = true;\n      })\n      .catch(() => {\n        this.dialogApi = null;\n      });\n  }\n\n  manageApproverCriteriaOption(flowIndex): void {\n    if (\n      this.rxApprovalConfigurationService.isFieldIdentifyingApprover(\n        this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].approvers\n      )\n    ) {\n      this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].signingCriteria = this.getCriteria();\n\n      find(this.selectedFlowGroup.approvalFlowConfigurationList[flowIndex].signingCriteriaList, {\n        value: RX_APPROVAL_CONFIGURATION.approverCriteria.percentage\n      }).disabled = true;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  private getApproversDisplay(approvalFlow: IApprovalFlow): string {\n    const approvers = approvalFlow.approvers.split(RX_APPROVAL_CONFIGURATION.approverSeparator);\n\n    return _map(approvers, (approver) => {\n      if (this.rxApprovalConfigurationService.isFieldIdentifyingApprover(approvalFlow.approvers)) {\n        approvalFlow.isFieldIdentifyingApprover = true;\n        approver = this.rxApprovalConfigurationService.getFieldIdentifyingApprover(approver);\n      } else if (this.rxApprovalConfigurationService.isFunctionalRole(approver)) {\n        approver = get(\n          find(this.availableFunctionalRoles, {\n            id: this.rxApprovalConfigurationService.getFunctionalRoleGuid(approver)\n          }),\n          'name'\n        );\n      } else if (this.rxApprovalConfigurationService.isApproverPeople(approver)) {\n        approver = this.rxApprovalConfigurationService.getApproverUser(approver);\n      } else {\n        approver = this.rxApprovalConfigurationService.getLastLabel(approver);\n      }\n\n      return approver;\n    })\n      .filter(Boolean)\n      .join(', ');\n  }\n\n  getFlowName(flow: IApprovalFlow): string {\n    return (\n      flow.flowName ||\n      (flow.isLevelUp\n        ? `[${this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.configuration.flow-group.level-flow.new.default-value'\n          )}]`\n        : `[${this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.configuration.flow-group.general-flow.new.default-value'\n          )}]`)\n    );\n  }\n}\n","<div class=\"row d-flex h-100\">\n  <div class=\"col-3 border-right d-flex flex-column h-100\">\n    <h5>\n      {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.available-flow-groups.title' | translate }}\n    </h5>\n\n    <button\n      type=\"button\"\n      adapt-button\n      btn-type=\"tertiary\"\n      rx-id=\"new-flow-group-button\"\n      class=\"d-icon-plus_circle px-0 align-self-start\"\n      [adaptPopover]=\"newFlowGroupTemplate\"\n      maxWidth=\"365\"\n      autoClose=\"outside\"\n      appendToBody=\"true\"\n      placement=\"bottom-left\"\n      fallbackPlacement=\"bottom\"\n    >\n      {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.new.title' | translate }}\n    </button>\n\n    <div class=\"available-list border p-3 flex-fill\">\n      <div class=\"vertical-center\" *ngIf=\"!allAvailableFlowGroups.length\">\n        <adapt-empty-state\n          [type]=\"'list'\"\n          label=\"{{ 'com.bmc.arsys.rx.client.empty-state.no-items-available.label' | translate }}\"\n        ></adapt-empty-state>\n      </div>\n\n      <button\n        type=\"button\"\n        adapt-button\n        btn-type=\"tertiary\"\n        rx-id=\"rename-flow-group-button\"\n        class=\"d-icon-field_text px-0 pt-0\"\n        [disabled]=\"!selectedFlowGroup.flowGroup\"\n        [adaptPopover]=\"renameFlowGroupTemplate\"\n        maxWidth=\"365\"\n        autoClose=\"outside\"\n        appendToBody=\"true\"\n        placement=\"bottom-left\"\n        fallbackPlacement=\"bottom\"\n        (shown)=\"flowGroupNewName = selectedFlowGroup.flowGroup\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.rename.label' | translate }}\n      </button>\n\n      <button\n        type=\"button\"\n        adapt-button\n        btn-type=\"tertiary\"\n        rx-id=\"delete-flow-group-button\"\n        class=\"d-icon-trash pt-0\"\n        [disabled]=\"!selectedFlowGroup.flowGroup\"\n        (click)=\"deleteFlowGroup()\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.delete.label' | translate }}\n      </button>\n\n      <adapt-rx-radiobutton-group\n        class=\"d-block form-group\"\n        rx-id=\"available-flow-groups\"\n        (ngModelChange)=\"selectFlowGroup($event)\"\n        [(ngModel)]=\"selectedFlowGroup.flowGroup\"\n      >\n        <div *ngFor=\"let group of allAvailableFlowGroups\" class=\"d-flex align-items-center\">\n          <adapt-rx-radiobutton\n            class=\"mb-0 mt-0 wrap-word\"\n            [value]=\"group.flowGroup\"\n            [label]=\"group.flowGroup\"\n          ></adapt-rx-radiobutton>\n\n          <div class=\"ml-1 mb-1 d-icon-exclamation_triangle text-danger\" *ngIf=\"group.hasError\"></div>\n        </div>\n      </adapt-rx-radiobutton-group>\n    </div>\n  </div>\n\n  <div class=\"col-9 d-flex flex-column h-100\">\n    <div class=\"d-flex flex-column h-100\">\n      <h5>\n        {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.selected-flow-group.title' | translate }}:\n        {{ selectedFlowGroup.flowGroup || ('com.bmc.arsys.rx.client.common.none.label' | translate) }}\n      </h5>\n\n      <div class=\"row\">\n        <div class=\"col-12 col-sm-6\">\n          <div class=\"d-inline-flex align-items-center\">\n            <button\n              type=\"button\"\n              adapt-button\n              btn-type=\"tertiary\"\n              rx-id=\"new-general-flow-button\"\n              class=\"d-icon-plus_circle px-0\"\n              [disabled]=\"!selectedFlowGroup.flowGroup\"\n              (click)=\"addNewGeneralFlow()\"\n            >\n              {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.general.new.label' | translate }}\n            </button>\n            <span\n              class=\"d-icon-right-question_circle_o ml-1 mr-4\"\n              adaptPopover=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.flow.general.info' | translate }}\"\n              placement=\"right\"\n              appendToBody=\"true\"\n            >\n            </span>\n          </div>\n\n          <div class=\"d-inline-flex align-items-center\">\n            <button\n              type=\"button\"\n              adapt-button\n              btn-type=\"tertiary\"\n              rx-id=\"new-level-flow-button\"\n              class=\"d-icon-plus_circle px-0\"\n              [disabled]=\"!selectedFlowGroup.flowGroup\"\n              (click)=\"addNewLevelUpFlow()\"\n            >\n              {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.level.new.label' | translate }}\n            </button>\n\n            <span\n              class=\"d-icon-right-question_circle_o ml-1\"\n              adaptPopover=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.flow.level.info' | translate }}\"\n              placement=\"right\"\n              appendToBody=\"true\"\n            >\n            </span>\n          </div>\n        </div>\n\n        <div class=\"col-12 col-sm-6 text-right\">\n          <button\n            type=\"button\"\n            adapt-button\n            btn-type=\"tertiary\"\n            rx-id=\"expand-button\"\n            (click)=\"expandAll()\"\n            *ngIf=\"selectedFlowGroup.approvalFlowConfigurationList.length\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.expand-all.label' | translate }}\n          </button>\n\n          <button\n            type=\"button\"\n            adapt-button\n            btn-type=\"tertiary\"\n            rx-id=\"collapse-button\"\n            (click)=\"collapseAll()\"\n            *ngIf=\"selectedFlowGroup.approvalFlowConfigurationList.length\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.collapse-all.label' | translate }}\n          </button>\n        </div>\n      </div>\n\n      <adapt-alert\n        *ngIf=\"selectedFlowGroup.flowGroup && !selectedFlowGroup.approvalFlowConfigurationList.length\"\n        [config]=\"{\n          variant: 'warning',\n          dismissible: false,\n          content: 'com.bmc.arsys.rx.client.approval.configuration.flow.group-has-no-flows-error.message' | translate\n        }\"\n      ></adapt-alert>\n\n      <div class=\"vertical-center\">\n        <adapt-empty-state\n          *ngIf=\"!selectedFlowGroup.flowGroup && !selectedFlowGroup.approvalFlowConfigurationList.length\"\n          [type]=\"'rules'\"\n          label=\"{{ 'com.bmc.arsys.rx.client.empty-state.no-items-available.label' | translate }}\"\n        ></adapt-empty-state>\n      </div>\n\n      <div\n        class=\"designer-modal-accordion-wrapper flex-fill pt-0\"\n        [ngClass]=\"{ 'border-top': selectedFlowGroup.approvalFlowConfigurationList.length }\"\n        cdkDropList\n        (cdkDropListDropped)=\"onSelectedFlowDrop($event)\"\n      >\n        <form #approvalFlowsForm=\"ngForm\">\n          <adapt-accordion [multiselect]=\"true\" class=\"flex-fill\">\n            <div\n              *ngFor=\"\n                let flow of selectedFlowGroup.approvalFlowConfigurationList;\n                let index = index;\n                let first = first;\n                let last = last\n              \"\n              class=\"designer-modal-accordion-content\"\n              cdkDrag\n              cdkDragLockAxis=\"y\"\n              [cdkDragData]=\"flow\"\n            >\n              <div class=\"d-icon-left-dots designer-modal-drag-handle\" cdkDragHandle></div>\n\n              <adapt-accordion-tab\n                class=\"d-block\"\n                [isOpen]=\"flow.isOpen\"\n                (open)=\"flow.isOpen = true\"\n                (close)=\"flow.isOpen = false; markInvalidSelectedGroupAndFlows()\"\n              >\n                <div class=\"card-title-text w-100\">\n                  <div class=\"designer-modal-card-title-content\">\n                    <div class=\"left-header-block\">\n                      <div class=\"rx-ellipsis\" [title]=\"getFlowName(flow)\" rx-id=\"card-title\">\n                        {{ getFlowName(flow) }}\n                      </div>\n                      <div class=\"d-icon-exclamation_triangle text-danger\" *ngIf=\"flow.hasError\"></div>\n                    </div>\n\n                    <div class=\"right-header-block\">\n                      <div class=\"designer-modal-card-title-index-buttons\">\n                        <button\n                          class=\"d-icon-angle_up px-3 py-1\"\n                          adapt-button\n                          btn-type=\"tertiary\"\n                          size=\"small\"\n                          type=\"button\"\n                          [disabled]=\"first\"\n                          (click)=\"$event.stopPropagation(); moveFlowUp(index)\"\n                        ></button>\n\n                        <button\n                          class=\"d-icon-angle_down px-3 py-1\"\n                          adapt-button\n                          btn-type=\"tertiary\"\n                          size=\"small\"\n                          type=\"button\"\n                          [disabled]=\"last\"\n                          (click)=\"$event.stopPropagation(); moveFlowDown(index)\"\n                        ></button>\n                      </div>\n\n                      <button\n                        class=\"d-icon-left-cross_adapt p-1 pr-4\"\n                        adapt-button\n                        size=\"small\"\n                        type=\"button\"\n                        (click)=\"removeFlow(index)\"\n                      >\n                        {{ 'com.bmc.arsys.rx.client.common.remove.label' | translate }}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n                <adapt-alert\n                  *ngIf=\"flow.hasError\"\n                  [config]=\"{\n                    variant: 'warning',\n                    dismissible: false,\n                    content:\n                      'com.bmc.arsys.rx.client.approval.configuration.flow.approvers.not-selected.message' | translate\n                  }\"\n                ></adapt-alert>\n\n                <adapt-rx-textfield\n                  class=\"form-group d-block\"\n                  rx-id=\"flow-name\"\n                  label=\"{{\n                    'com.bmc.arsys.rx.client.approval.configuration.flow.general.flow-name.label' | translate\n                  }}\"\n                  required=\"true\"\n                  [(ngModel)]=\"flow.flowName\"\n                  [autofocus]=\"true\"\n                  name=\"{{ 'flowName' + index }}\"\n                  maxlength=\"254\"\n                >\n                </adapt-rx-textfield>\n\n                <adapt-rx-counter\n                  *ngIf=\"flow.isLevelUp\"\n                  adaptMin=\"1\"\n                  [min]=\"1\"\n                  class=\"form-group d-block\"\n                  rx-id=\"flow-levels\"\n                  label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.levels' | translate }}\"\n                  required=\"true\"\n                  [(ngModel)]=\"flow.levels\"\n                  name=\"{{ 'levels' + index }}\"\n                >\n                </adapt-rx-counter>\n\n                <rx-expression-form-control\n                  class=\"d-block\"\n                  [ngClass]=\"{ 'form-group': !flow.isLevelUp }\"\n                  rx-id=\"flow-qualification\"\n                  [options]=\"flowQualificationOptions\"\n                  [(ngModel)]=\"flow.qualification\"\n                  (events)=\"onFlowQualificationEvent(index)\"\n                  name=\"{{ 'flowQualification' + index }}\"\n                ></rx-expression-form-control>\n\n                <div *ngIf=\"!flow.isLevelUp\" rx-id=\"flow-approvers\" class=\"form-group\">\n                  <label class=\"form-control-label\">\n                    {{ 'com.bmc.arsys.rx.client.approval.configuration.approvers' | translate }}\n\n                    <button\n                      type=\"button\"\n                      adapt-button\n                      class=\"d-icon-pencil px-1 ml-3 mb-1\"\n                      btn-type=\"tertiary\"\n                      rx-id=\"edit-button\"\n                      (click)=\"selectFlowApprovers(index)\"\n                    >\n                      {{ 'com.bmc.arsys.rx.client.common.edit.label' | translate }}\n                    </button>\n                  </label>\n\n                  <adapt-rx-checkbox\n                    *ngIf=\"!flow.isLevelUp\"\n                    class=\"checkbox-inline ml-4\"\n                    label=\"{{\n                      'com.bmc.arsys.rx.client.approval.configuration.apply-approver-exclusion.label' | translate\n                    }}\"\n                    [(ngModel)]=\"flow.applyApproverExclusion\"\n                    name=\"{{ 'applyApproverExclusion' + index }}\"\n                  >\n                  </adapt-rx-checkbox>\n                  <span\n                    class=\"d-icon-right-question_circle_o ml-1\"\n                    adaptPopover=\"{{\n                      'com.bmc.arsys.rx.client.approval.configuration.apply-approver-exclusion.tooltip' | translate\n                    }}\"\n                    placement=\"right\"\n                    appendToBody=\"true\"\n                  >\n                  </span>\n\n                  <div class=\"approver-list bg-secondary p-1\">\n                    {{ flow.approversDisplayValue }}\n                  </div>\n                </div>\n\n                <rx-expression-form-control\n                  *ngIf=\"!flow.isLevelUp\"\n                  class=\"d-block form-group\"\n                  rx-id=\"approver-qualification\"\n                  [options]=\"qualifyApproversOptions\"\n                  [(ngModel)]=\"flow.approverQualification\"\n                  (events)=\"onApproverQualificationEvent(index)\"\n                  name=\"{{ 'approverQualification' + index }}\"\n                ></rx-expression-form-control>\n\n                <div class=\"row\">\n                  <div class=\"col-12 col-sm-6 form-group\">\n                    <adapt-rx-select\n                      *ngIf=\"!flow.isLevelUp\"\n                      class=\"d-block\"\n                      label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.if.multiple.approvers' | translate }}\"\n                      rx-id=\"signing-criteria\"\n                      [(ngModel)]=\"flow.signingCriteria\"\n                      [options]=\"flow.signingCriteriaList\"\n                      [optionFormatter]=\"optionFormatter\"\n                      name=\"{{ 'signingCriteria' + index }}\"\n                    >\n                    </adapt-rx-select>\n                  </div>\n\n                  <div class=\"col-12 col-sm-6 form-group\">\n                    <adapt-rx-select\n                      *ngIf=\"!flow.isLevelUp && flow.signingCriteria[0]?.value === 2\"\n                      class=\"d-block\"\n                      label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.value.of' | translate }}\"\n                      rx-id=\"signing-criteria-percentage\"\n                      [(ngModel)]=\"flow.approvalOverridePercentage\"\n                      [options]=\"signingCriteriaPercentageList\"\n                      name=\"{{ 'signingCriteriaPercentage' + index }}\"\n                    >\n                    </adapt-rx-select>\n                  </div>\n                </div>\n\n                <hr class=\"my-1\" />\n                <h6>{{ 'com.bmc.arsys.rx.client.approval.configuration.flow.outcome.label' | translate }}</h6>\n\n                <div class=\"row\" *ngIf=\"flow.isOpen\">\n                  <div class=\"col-12 col-sm-6 form-group\">\n                    <rx-definition-picker\n                      [options]=\"processOnApproveOptions\"\n                      [(ngModel)]=\"flow.approvalFlowOutcomeMappingList[0].processName\"\n                      rx-id=\"process-on-approval\"\n                      name=\"{{ 'processOnApproval' + index }}\"\n                    >\n                    </rx-definition-picker>\n                  </div>\n\n                  <div class=\"col-12 col-sm-6 form-group\">\n                    <rx-definition-picker\n                      [options]=\"processOnRejectOptions\"\n                      [(ngModel)]=\"flow.approvalFlowOutcomeMappingList[1].processName\"\n                      rx-id=\"process-on-rejection\"\n                      name=\"{{ 'processOnRejection' + index }}\"\n                    >\n                    </rx-definition-picker>\n                  </div>\n\n                  <div class=\"col-12 col-sm-6 form-group\">\n                    <rx-definition-picker\n                      [options]=\"processOnErrorOptions\"\n                      [(ngModel)]=\"flow.approvalFlowOutcomeMappingList[2].processName\"\n                      rx-id=\"process-on-error\"\n                      name=\"{{ 'processOnError' + index }}\"\n                    >\n                    </rx-definition-picker>\n                  </div>\n                </div>\n              </adapt-accordion-tab>\n            </div>\n          </adapt-accordion>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #newFlowGroupTemplate let-context=\"context\">\n  <div class=\"flow-group-template\">\n    <div class=\"text-center mb-3 font-weight-bold\">\n      {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.new.title' | translate }}\n    </div>\n\n    <adapt-rx-textfield\n      class=\"mb-1 d-block\"\n      rx-id=\"new-flow-button\"\n      label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.flow.flow-group-name.label' | translate }}\"\n      required=\"true\"\n      [(ngModel)]=\"flowGroupName\"\n      [autofocus]=\"true\"\n      (keydown)=\"onKeyDownNew($event)\"\n      maxlength=\"254\"\n    >\n    </adapt-rx-textfield>\n\n    <div class=\"text-danger\" *ngIf=\"flowGroupName && isAddNewFlowGroupButtonDisabled()\">\n      {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.flow-group-exists.warning' | translate }}\n    </div>\n\n    <div class=\"text-right mt-5\">\n      <button\n        type=\"button\"\n        adapt-button\n        btn-type=\"primary\"\n        rx-id=\"add-button\"\n        (click)=\"addNewFlowGroup()\"\n        [disabled]=\"isAddNewFlowGroupButtonDisabled()\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.add.label' | translate }}\n      </button>\n\n      <button\n        type=\"button\"\n        adapt-button\n        btn-type=\"secondary\"\n        rx-id=\"cancel-button\"\n        (click)=\"context.close()\"\n        class=\"ml-2\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n      </button>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #renameFlowGroupTemplate let-context=\"context\">\n  <div class=\"flow-group-template\">\n    <div class=\"text-center mb-3 font-weight-bold\">\n      {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.rename.title' | translate }}\n    </div>\n\n    <adapt-rx-textfield\n      class=\"mb-1 d-block\"\n      rx-id=\"rename-flow-button\"\n      label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.flow.flow-group-name.label' | translate }}\"\n      required=\"true\"\n      [(ngModel)]=\"flowGroupNewName\"\n      [autofocus]=\"true\"\n      (keydown)=\"onKeyDownRename($event, context)\"\n      maxlength=\"254\"\n    >\n    </adapt-rx-textfield>\n\n    <div class=\"text-danger\" *ngIf=\"flowGroupNewName && isRenameFlowGroupButtonDisabled()\">\n      {{ 'com.bmc.arsys.rx.client.approval.configuration.flow.flow-group-exists.warning' | translate }}\n    </div>\n\n    <div class=\"text-right mt-5\">\n      <button\n        type=\"button\"\n        adapt-button\n        btn-type=\"primary\"\n        rx-id=\"rename-button\"\n        (click)=\"renameFlowGroup(context)\"\n        [disabled]=\"isRenameFlowGroupButtonDisabled()\"\n      >\n        {{ 'com.bmc.arsys.rx.client.approval.update.button.label' | translate }}\n      </button>\n    </div>\n  </div>\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport { RxRecordGridUtilsService } from '@helix/platform/view/components';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { IRecordFields } from './field-definition-picker-component.types';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\nimport { IAssociationDescriptor } from '@helix/platform/association/api';\nimport {\n  IFieldDefinition,\n  IRecordDefinition,\n  RX_RECORD_DEFINITION,\n  RxRecordDefinitionCacheService\n} from '@helix/platform/record/api';\nimport { RxDefinitionNameService } from '@helix/platform/shared/api';\nimport { IValueWithLabel } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxFieldDefinitionPickerService {\n  constructor(\n    private rxRecordGridUtilsService: RxRecordGridUtilsService,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxDefinitionNameService: RxDefinitionNameService\n  ) {}\n\n  getAssociatedRecordFields(recordDefinitionName: string): Observable<IRecordFields[]> {\n    return this.rxRecordGridUtilsService.getAssociationDescriptors(recordDefinitionName).pipe(\n      switchMap((associationDescriptors: IAssociationDescriptor[]) => {\n        if (associationDescriptors.length) {\n          associationDescriptors.sort((descriptor1, descriptor2) => descriptor1.label.localeCompare(descriptor2.label));\n\n          return forkJoin(\n            associationDescriptors.map((associationDescriptor) => {\n              return this.rxRecordDefinitionCacheService\n                .getRecordDefinition(associationDescriptor.recordDefinitionName)\n                .pipe(\n                  map(\n                    (recordDefinition: IRecordDefinition) =>\n                      ({\n                        fields: this.getFieldDefinitions(recordDefinition.fieldDefinitions, associationDescriptor),\n                        label: associationDescriptor.label,\n                        isAssociatedRecord: true,\n                        isExpanded: false,\n                        value: associationDescriptor.associationDefinition.name,\n                        associationDescriptor: associationDescriptor\n                      } as IRecordFields)\n                  )\n                );\n            })\n          );\n        }\n\n        return of([]);\n      }),\n      shareReplay({\n        bufferSize: 1,\n        refCount: true\n      })\n    );\n  }\n\n  getRecordFields(recordDefinitionName: string): Observable<IRecordFields[]> {\n    return forkJoin([\n      this.getAssociatedRecordFields(recordDefinitionName),\n      this.rxRecordDefinitionCacheService.getRecordDefinition(recordDefinitionName)\n    ]).pipe(\n      map(([associatedRecordFields, recordDefinition]) => [\n        {\n          fields: this.getFieldDefinitions(recordDefinition.fieldDefinitions, null),\n          isExpanded: true,\n          isAssociatedRecord: false,\n          label: this.rxDefinitionNameService.getDisplayName(recordDefinitionName),\n          value: recordDefinitionName\n        } as IRecordFields,\n        ...associatedRecordFields\n      ]),\n      shareReplay({\n        bufferSize: 1,\n        refCount: true\n      })\n    );\n  }\n\n  private getFieldDefinitions(\n    fieldDefinitions: IFieldDefinition[],\n    associationDescriptor?: IAssociationDescriptor\n  ): IValueWithLabel[] {\n    return fieldDefinitions\n      .filter(\n        (fieldDefinition: IFieldDefinition) =>\n          fieldDefinition.resourceType !== RX_RECORD_DEFINITION.resourceTypes.attachment\n      )\n      .map((fieldDefinition) => {\n        const fieldKey = associationDescriptor\n          ? this.getFieldIdExpression(fieldDefinition.id, associationDescriptor)\n          : fieldDefinition.name;\n\n        return {\n          label: fieldDefinition.name,\n          value: fieldKey\n        };\n      })\n      .sort((field1, field2) => field1.label.localeCompare(field2.label));\n  }\n\n  private getFieldIdExpression(fieldId: string | number, associationDescriptor?: IAssociationDescriptor): string {\n    return `recordContext._associations.${associationDescriptor.associationDefinition.guid}.${associationDescriptor.nodeSide}[0].${fieldId}`;\n  }\n}\n","import { Component, ElementRef, Input, OnChanges, Renderer2, SimpleChanges, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n  FieldsTree,\n  IFieldDefinitionPickerComponentOptions,\n  IRecordFields\n} from './field-definition-picker-component.types';\nimport { AdaptDropdownDirective } from '@bmc-ux/adapt-angular';\nimport { IRecordDefinition, RxRecordDefinitionCacheService } from '@helix/platform/record/api';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { RxDefinitionNameService } from '@helix/platform/shared/api';\nimport { RxRecordGridUtilsService } from '@helix/platform/view/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RxFieldDefinitionPickerService } from './field-definition-picker.service';\nimport { IValueWithLabel, RxObjectUtilsService, RxStringService } from '@helix/platform/utils';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'rx-field-definition-picker',\n  templateUrl: './field-definition-picker.component.html',\n  styleUrls: ['./field-definition-picker.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RxFieldDefinitionPickerComponent,\n      multi: true\n    }\n  ]\n})\nexport class RxFieldDefinitionPickerComponent extends ValueAccessor<string> implements OnChanges {\n  @Input()\n  options: IFieldDefinitionPickerComponentOptions;\n\n  @ViewChild('dropdownButton', { static: true })\n  dropdownButton: ElementRef;\n\n  @ViewChild('fieldDefinitionPicker', { static: true })\n  dropdown: AdaptDropdownDirective;\n\n  defaultText = this.translateService.instant('com.bmc.arsys.rx.client.common.select.label');\n  dropdownWidth: number;\n  filteredFieldsTree: FieldsTree = [];\n  label: string;\n  searchText = '';\n\n  constructor(\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxRecordGridUtilsService: RxRecordGridUtilsService,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private translateService: TranslateService,\n    private rxFieldDefinitionPickerService: RxFieldDefinitionPickerService,\n    private rxStringService: RxStringService,\n    private rxObjectUtilsService: RxObjectUtilsService,\n    private renderer: Renderer2\n  ) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const fieldsTree = changes.options.currentValue?.fieldsTree;\n\n    if (fieldsTree?.length) {\n      this.filteredFieldsTree = this.rxObjectUtilsService.cloneDeep(fieldsTree);\n    } else {\n      this.filteredFieldsTree = [];\n    }\n\n    this.updateFieldLabel();\n  }\n\n  setDropdownWidth(): void {\n    const dropdownButton = this.renderer.selectRootElement(this.dropdownButton.nativeElement, true);\n\n    this.dropdownWidth = dropdownButton.clientWidth + 2;\n  }\n\n  selectField(fieldNode: IValueWithLabel): void {\n    this.dropdown.close();\n    this.label = fieldNode.label;\n    this.value = fieldNode.value;\n  }\n\n  clearFieldDefinition(e: Event): void {\n    e.stopPropagation();\n    this.reset();\n  }\n\n  reset(): void {\n    this.label = '';\n    this.value = '';\n  }\n\n  private updateFieldLabel(): void {\n    if (this.value) {\n      if (this.value.indexOf('associations') !== -1) {\n        this.initializeAssociatedFieldLabel().subscribe((fieldLabel) => (this.label = fieldLabel));\n      } else {\n        this.label = this.value;\n      }\n    } else {\n      this.label = '';\n    }\n  }\n\n  private initializeAssociatedFieldLabel(): Observable<string> {\n    if (this.options.recordDefinitionName) {\n      return this.rxRecordDefinitionCacheService\n        .getRecordDefinition(this.options.recordDefinitionName)\n        .pipe(\n          mergeMap((recordDefinition: IRecordDefinition) =>\n            this.rxRecordGridUtilsService\n              .getFieldDefinition(this.value, recordDefinition)\n              .pipe(map((fieldDefinition) => fieldDefinition.name))\n          )\n        );\n    }\n  }\n\n  filterFields(searchText: string): void {\n    this.filteredFieldsTree = this.rxObjectUtilsService.cloneDeep(this.options.fieldsTree);\n\n    if (searchText) {\n      this.filteredFieldsTree = this.filteredFieldsTree\n        .map((recordFields: IRecordFields) => ({\n          ...recordFields,\n          fields: recordFields.fields.filter((fieldDefinitionData: IValueWithLabel) =>\n            this.rxStringService.caseInsensitiveSearch(fieldDefinitionData.label, searchText)\n          )\n        }))\n        .filter((recordFields: IRecordFields) => recordFields.fields.length);\n    }\n  }\n}\n","<div class=\"d-flex\">\n  <adapt-rx-control-label *ngIf=\"options.label\" [label]=\"options.label\" [showRequiredLabel]=\"options.required\">\n  </adapt-rx-control-label>\n\n  <span\n    *ngIf=\"options?.tooltip\"\n    class=\"d-icon-right-question_circle_o ml-2\"\n    [adaptPopover]=\"options.tooltip\"\n    placement=\"right\"\n    appendToBody=\"true\"\n  >\n  </span>\n</div>\n\n<div\n  class=\"dropdown\"\n  adaptDropdown\n  appendToBody=\"true\"\n  [autoClose]=\"'outside'\"\n  [autoFocusFirst]=\"false\"\n  #fieldDefinitionPicker=\"adaptDropdown\"\n>\n  <button\n    rx-id=\"toggle-button\"\n    #dropdownButton\n    class=\"btn btn-secondary\"\n    (click)=\"setDropdownWidth()\"\n    adaptDropdownToggle\n    type=\"button\"\n    [disabled]=\"!options.recordDefinitionName\"\n  >\n    <span class=\"rx-selected-item rx-ellipsis\">{{ label || defaultText }}</span>\n\n    <span\n      rx-id=\"clear-button\"\n      class=\"d-icon-cross_adapt btn-link\"\n      *ngIf=\"value && !isDisabled\"\n      (click)=\"clearFieldDefinition($event)\"\n    >\n    </span>\n  </button>\n\n  <div class=\"dropdown-menu p-0\" [style.width.px]=\"dropdownWidth\" adaptDropdownMenu>\n    <div class=\"dropdown-header\">\n      <adapt-rx-search\n        [(ngModel)]=\"searchText\"\n        placeholder=\"{{ 'com.bmc.arsys.rx.client.common.filter-data.label' | translate }}\"\n        debounceTime=\"250\"\n        class=\"py-2\"\n        (ngModelChange)=\"filterFields($event)\"\n      >\n      </adapt-rx-search>\n    </div>\n\n    <ul class=\"records\" *ngIf=\"filteredFieldsTree.length\">\n      <li\n        class=\"record rx-ellipsis\"\n        *ngFor=\"let recordNode of filteredFieldsTree\"\n        (click)=\"recordNode.isExpanded = !recordNode.isExpanded\"\n      >\n        <span rx-id=\"expand-button\" class=\"expand-arrow d-icon-angle_right\" [class.open]=\"recordNode.isExpanded\"></span>\n\n        <span\n          class=\"px-1\"\n          [ngClass]=\"recordNode.isAssociatedRecord ? 'd-icon-arrow_schema' : 'd-icon-file_text'\"\n        ></span>\n\n        <span> {{ recordNode.label }} </span>\n\n        <div class=\"fields\" *ngIf=\"recordNode.isExpanded\">\n          <button\n            class=\"dropdown-item rx-ellipsis\"\n            (click)=\"$event.stopPropagation(); selectField(fieldNode)\"\n            type=\"button\"\n            [class.active]=\"value === fieldNode.label\"\n            *ngFor=\"let fieldNode of recordNode.fields\"\n          >\n            <adapt-highlight [result]=\"fieldNode.label\" [term]=\"searchText\"></adapt-highlight>\n          </button>\n        </div>\n      </li>\n    </ul>\n  </div>\n</div>\n","import { ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RxApprovalConfigurationService } from '../approval-configuration.service';\nimport { cloneDeep, find } from 'lodash';\nimport {\n  IFieldDefinition,\n  IRecordDefinition,\n  ISecurityLabel,\n  RX_RECORD_DEFINITION,\n  RxRecordDefinitionCacheService,\n  RxRecordInstanceDataPageService\n} from '@helix/platform/record/api';\nimport {\n  IDefinitionPickerComponentOptions,\n  RxDefinitionPickerScope,\n  RxDefinitionPickerType\n} from '@helix/platform/shared/components';\nimport { RX_APPROVAL_CONFIGURATION } from '../approval-configuration.constant';\nimport { IAdditionalField, IRecordRegistration } from '../approval-configuration.types';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable, of, ReplaySubject } from 'rxjs';\nimport {\n  IDataPageResult,\n  JustificationRequirement,\n  RxDefinitionNameService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport {\n  IFieldDefinitionPickerComponentOptions,\n  IRecordFields\n} from './field-definition-picker/field-definition-picker-component.types';\nimport { AdaptRxControlLabelTooltip, Alert } from '@bmc-ux/adapt-angular';\nimport { RxFieldDefinitionPickerService } from './field-definition-picker/field-definition-picker.service';\nimport { finalize, map, switchMap, takeUntil } from 'rxjs/operators';\nimport { RxRecordGridUtilsService } from '@helix/platform/view/components';\n\n@Component({\n  selector: 'rx-record-registration',\n  templateUrl: './record-registration.component.html'\n})\nexport class RecordRegistrationComponent implements OnInit, OnDestroy {\n  @Input()\n  registeredRecordDefinitionName: string;\n\n  @Input()\n  isEditMode: boolean;\n\n  @Output()\n  recordRegistered = new EventEmitter<string>();\n\n  recordRegistrationForm: FormGroup = this.createRecordRegistrationForm();\n  recordDefinition: IRecordDefinition;\n  recordDefinitionSecurityLabels: ISecurityLabel[] = [];\n  fieldNames: string[] = [];\n  private isSaveInProgress = false;\n\n  alertConfig: Alert = {\n    content: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.record-registration.info'),\n    type: 'inline',\n    variant: 'info'\n  };\n\n  recordDefinitionPickerOptions: IDefinitionPickerComponentOptions = {\n    label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.record.definition'),\n    definitionType: RxDefinitionPickerType.PublicRegularDataRecord,\n    required: true,\n    availableDefinitionPickerStates: {\n      definitionButtonsGroups: [RxDefinitionPickerScope.Rx],\n      search: RxDefinitionPickerScope.Rx\n    }\n  };\n\n  permissionTooltip: AdaptRxControlLabelTooltip = {\n    popoverMode: true,\n    iconName: 'question_circle_o',\n    placement: 'right',\n    content: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.record.permissions.tooltip')\n  };\n\n  justificationTooltip: AdaptRxControlLabelTooltip = {\n    popoverMode: true,\n    iconName: 'question_circle_o',\n    placement: 'right',\n    content: this.translateService.instant('com.bmc.arsys.rx.client.approval.justification.tooltip')\n  };\n\n  private recordDefinitionName$ = new BehaviorSubject<string>('');\n\n  private fieldsTree$: Observable<IRecordFields[]> = this.recordDefinitionName$.pipe(\n    switchMap((recordDefinitionName) => {\n      return recordDefinitionName ? this.rxFieldDefinitionPickerService.getRecordFields(recordDefinitionName) : of([]);\n    })\n  );\n\n  requesterFieldDefinitionPickerOptions$: Observable<IFieldDefinitionPickerComponentOptions> = combineLatest([\n    this.recordDefinitionName$,\n    this.fieldsTree$\n  ]).pipe(\n    map(\n      ([recordDefinitionName, fieldsTree]) =>\n        ({\n          recordDefinitionName: recordDefinitionName,\n          label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.record.requester'),\n          required: true,\n          tooltip: this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.configuration.record.requester.tooltip'\n          ),\n          fieldsTree: fieldsTree\n        } as IFieldDefinitionPickerComponentOptions)\n    )\n  );\n\n  approverExclusionFieldDefinitionPickerOptions$: Observable<IFieldDefinitionPickerComponentOptions> = combineLatest([\n    this.recordDefinitionName$,\n    this.fieldsTree$\n  ]).pipe(\n    map(\n      ([recordDefinitionName, fieldsTree]) =>\n        ({\n          recordDefinitionName,\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.configuration.record.approver-exclusion.label'\n          ),\n          required: false,\n          tooltip: this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.configuration.record.approver-exclusion.tooltip'\n          ),\n          fieldsTree: fieldsTree\n        } as IFieldDefinitionPickerComponentOptions)\n    )\n  );\n\n  summaryFieldDefinitionPickerOptions$: Observable<IFieldDefinitionPickerComponentOptions> = combineLatest([\n    this.recordDefinitionName$,\n    this.fieldsTree$\n  ]).pipe(\n    map(\n      ([recordDefinitionName, fieldsTree]) =>\n        ({\n          recordDefinitionName: recordDefinitionName,\n          label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.record.summary'),\n          required: true,\n          fieldsTree: fieldsTree\n        } as IFieldDefinitionPickerComponentOptions)\n    )\n  );\n\n  notesFieldDefinitionPickerOptions$: Observable<IFieldDefinitionPickerComponentOptions> = combineLatest([\n    this.recordDefinitionName$,\n    this.fieldsTree$\n  ]).pipe(\n    map(\n      ([recordDefinitionName, fieldsTree]) =>\n        ({\n          recordDefinitionName: recordDefinitionName,\n          label: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.record.notes'),\n          required: false,\n          fieldsTree: fieldsTree\n        } as IFieldDefinitionPickerComponentOptions)\n    )\n  );\n\n  fieldDefinitionPickerOptions$: Observable<IFieldDefinitionPickerComponentOptions> = combineLatest([\n    this.recordDefinitionName$,\n    this.fieldsTree$\n  ]).pipe(\n    map(\n      ([recordDefinitionName, fieldsTree]) =>\n        ({\n          recordDefinitionName: recordDefinitionName,\n          required: false,\n          fieldsTree: fieldsTree\n        } as IFieldDefinitionPickerComponentOptions)\n    )\n  );\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private isNewConfiguration = true;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private changeDetector: ChangeDetectorRef,\n    private translateService: TranslateService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxApprovalConfigurationService: RxApprovalConfigurationService,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService,\n    private rxNotificationService: RxNotificationService,\n    private rxRecordGridUtilsService: RxRecordGridUtilsService,\n    private rxFieldDefinitionPickerService: RxFieldDefinitionPickerService\n  ) {}\n\n  ngOnInit() {\n    if (this.isEditMode) {\n      this.initializeRecordRegistrationForm();\n    }\n\n    this.recordRegistrationForm\n      .get('recordDefinition')\n      .valueChanges.pipe(takeUntil(this.destroyed$))\n      .subscribe((value) => this.onRecordDefinitionChange(value));\n\n    this.recordRegistrationForm\n      .get('field3Mapping.fieldID')\n      .valueChanges.pipe(takeUntil(this.destroyed$))\n      .subscribe((value) => this.onFieldMappingChange('field3Mapping.label', value));\n\n    this.recordRegistrationForm\n      .get('field4Mapping.fieldID')\n      .valueChanges.pipe(takeUntil(this.destroyed$))\n      .subscribe((value) => this.onFieldMappingChange('field4Mapping.label', value));\n\n    this.recordRegistrationForm\n      .get('field5Mapping.fieldID')\n      .valueChanges.pipe(takeUntil(this.destroyed$))\n      .subscribe((value) => this.onFieldMappingChange('field5Mapping.label', value));\n\n    this.recordRegistrationForm\n      .get('field6Mapping.fieldID')\n      .valueChanges.pipe(takeUntil(this.destroyed$))\n      .subscribe((value) => this.onFieldMappingChange('field6Mapping.label', value));\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  createRecordRegistrationForm(): FormGroup {\n    return this.formBuilder.group({\n      recordDefinition: ['', Validators.required],\n      summaryField: ['', Validators.required],\n      requestorField: ['', Validators.required],\n      approverExclusionField: null,\n      permissionsFromSecurityLabels: [[], Validators.nullValidator],\n      requestIDField: '',\n      notesField: '',\n      justificationFieldName: [[], Validators.nullValidator],\n      justificationRequired: this.formBuilder.group({\n        toApprove: false,\n        toReject: false\n      }),\n      field3Mapping: this.formBuilder.group(this.createAdditionalField()),\n      field4Mapping: this.formBuilder.group(this.createAdditionalField()),\n      field5Mapping: this.formBuilder.group(this.createAdditionalField()),\n      field6Mapping: this.formBuilder.group(this.createAdditionalField())\n    });\n  }\n\n  initializeRecordRegistrationForm(): void {\n    forkJoin([\n      this.rxRecordDefinitionCacheService.getRecordDefinition(this.registeredRecordDefinitionName),\n      this.rxApprovalConfigurationService.getRegisteredRecordDetails(this.registeredRecordDefinitionName)\n    ]).subscribe(([recordDefinition, registrationRecord]) => {\n      this.isNewConfiguration = registrationRecord.isNewConfiguration;\n      this.recordDefinition = recordDefinition;\n      this.recordRegistrationForm.get('recordDefinition').setValue(registrationRecord.recordDefinition);\n      this.recordRegistrationForm.controls['recordDefinition'].disable();\n      this.recordRegistrationForm.get('summaryField').setValue(registrationRecord.summaryField);\n      this.recordRegistrationForm.get('requestorField').setValue(registrationRecord.requestorField);\n      this.recordRegistrationForm.get('requestIDField').setValue(registrationRecord.requestIDField);\n      this.recordRegistrationForm.get('notesField').setValue(registrationRecord.notesField);\n      this.recordRegistrationForm.get('approverExclusionField').setValue(registrationRecord.approverExclusionField);\n\n      if (registrationRecord.field3Mapping) {\n        this.recordRegistrationForm.get('field3Mapping').setValue(registrationRecord.field3Mapping);\n      }\n\n      if (registrationRecord.field4Mapping) {\n        this.recordRegistrationForm.get('field4Mapping').setValue(registrationRecord.field4Mapping);\n      }\n\n      if (registrationRecord.field5Mapping) {\n        this.recordRegistrationForm.get('field5Mapping').setValue(registrationRecord.field5Mapping);\n      }\n\n      if (registrationRecord.field6Mapping) {\n        this.recordRegistrationForm.get('field6Mapping').setValue(registrationRecord.field6Mapping);\n      }\n\n      this.recordRegistrationForm\n        .get('justificationFieldName')\n        .setValue(registrationRecord.justificationFieldName ? [registrationRecord.justificationFieldName] : []);\n\n      this.recordRegistrationForm\n        .get('permissionsFromSecurityLabels')\n        .setValue(this.getSecurityLabels(registrationRecord));\n\n      this.recordRegistrationForm.get('justificationRequired').setValue({\n        toApprove:\n          registrationRecord.justificationRequired === JustificationRequirement.RequiredForApprovalOrRejection ||\n          registrationRecord.justificationRequired === JustificationRequirement.RequiredForApproval,\n        toReject:\n          registrationRecord.justificationRequired === JustificationRequirement.RequiredForApprovalOrRejection ||\n          registrationRecord.justificationRequired === JustificationRequirement.RequiredForRejection\n      });\n    });\n  }\n\n  getSecurityLabels(approvalRegistrationRecord: IRecordRegistration): ISecurityLabel[] {\n    return approvalRegistrationRecord.permissionsFromSecurityLabels.map((parentId) =>\n      this.recordDefinition.securityLabels.find((securityLabel) => securityLabel.id === parentId)\n    );\n  }\n\n  private createAdditionalField(): IAdditionalField {\n    return {\n      fieldID: '',\n      label: ''\n    };\n  }\n\n  private onFieldMappingChange(formControlName: string, value: string): void {\n    if (value && !value.includes('recordContext._associations')) {\n      this.recordRegistrationForm.get(formControlName).setValue(value);\n    } else {\n      value\n        ? this.setAssociatedRecordFieldLabel(value, formControlName)\n        : this.recordRegistrationForm.get(formControlName).setValue('');\n    }\n  }\n\n  private setAssociatedRecordFieldLabel(fieldId: string, formControlName: string): void {\n    this.rxRecordGridUtilsService.getFieldDefinition(fieldId, this.recordDefinition).subscribe((fieldDefinition) => {\n      this.recordRegistrationForm.get(formControlName).setValue(fieldDefinition.name);\n    });\n  }\n\n  private onRecordDefinitionChange(newRecordDefinitionName: string): void {\n    const oldRecordDefinitionName = this.recordRegistrationForm.value.recordDefinition;\n\n    if (newRecordDefinitionName !== oldRecordDefinitionName) {\n      this.reset();\n      this.recordDefinitionName$.next(newRecordDefinitionName);\n\n      if (newRecordDefinitionName) {\n        this.rxRecordDefinitionCacheService\n          .getRecordDefinition(newRecordDefinitionName)\n          .subscribe((recordDefinition) => {\n            this.recordDefinition = recordDefinition;\n            this.initializeFormControls();\n          });\n      }\n    }\n  }\n\n  private initializeFormControls(): void {\n    this.recordDefinitionSecurityLabels = cloneDeep(this.recordDefinition.securityLabels);\n\n    this.fieldNames = this.recordDefinition.fieldDefinitions\n      ? this.recordDefinition.fieldDefinitions\n          .filter(\n            (fieldDefinition: IFieldDefinition) =>\n              fieldDefinition.resourceType !== RX_RECORD_DEFINITION.resourceTypes.attachment\n          )\n          .map((fieldDefinition) => {\n            if (fieldDefinition.id === 1) {\n              this.recordRegistrationForm.get('requestIDField').setValue(fieldDefinition.name);\n            }\n\n            return fieldDefinition.name;\n          })\n      : [];\n  }\n\n  optionFormatter(securityLabel: ISecurityLabel): string {\n    return securityLabel.name;\n  }\n\n  justificationReasonOptionFormatter(fieldDefinition: IFieldDefinition): string {\n    return fieldDefinition.name;\n  }\n\n  save(): void {\n    this.isSaveInProgress = true;\n\n    if (this.isEditMode) {\n      this.updateRecordRegistration();\n    } else {\n      this.saveRecordRegistration();\n    }\n  }\n\n  canSave(): boolean {\n    return !this.isSaveInProgress && this.recordRegistrationForm.valid && this.recordRegistrationForm.dirty;\n  }\n\n  isFormValid(): boolean {\n    return this.recordRegistrationForm.valid;\n  }\n\n  isFormDirty(): boolean {\n    return this.recordRegistrationForm.dirty;\n  }\n\n  saveRecordRegistration(): void {\n    const registrationRecord = this.transformFormControlData();\n    registrationRecord.isNewConfiguration = true;\n\n    this.rxRecordInstanceDataPageService\n      .post({\n        params: {\n          recorddefinition: RX_APPROVAL_CONFIGURATION.selfApproval.apForm.name\n        }\n      })\n      .subscribe((result: IDataPageResult) => {\n        const isRecordRegistered = find(\n          result.data,\n          (record) =>\n            record[RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.formName] ===\n            registrationRecord.recordDefinition\n        );\n\n        if (!isRecordRegistered) {\n          this.rxApprovalConfigurationService\n            .registerRecord(registrationRecord)\n            .pipe(\n              finalize(() => {\n                this.isSaveInProgress = false;\n              })\n            )\n            .subscribe(() => {\n              this.isEditMode = true;\n              this.recordRegistrationForm.controls['recordDefinition'].disable();\n              this.recordRegistered.emit(registrationRecord.recordDefinition);\n              this.recordRegistrationForm.markAsPristine();\n\n              this.rxNotificationService.addSuccessMessage(\n                this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.record.register.success')\n              );\n            });\n        } else {\n          this.isSaveInProgress = false;\n\n          this.rxNotificationService.addWarningMessage(\n            this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.record.register.duplicate')\n          );\n        }\n      });\n  }\n\n  updateRecordRegistration(): void {\n    const registrationRecord = this.transformFormControlData();\n\n    registrationRecord.isNewConfiguration = this.isNewConfiguration;\n    registrationRecord.recordDefinition = this.recordRegistrationForm.get('recordDefinition').value;\n\n    this.rxApprovalConfigurationService\n      .updateRecord(registrationRecord)\n      .pipe(\n        finalize(() => {\n          this.isSaveInProgress = false;\n        })\n      )\n      .subscribe(() => {\n        this.isEditMode = true;\n        this.recordRegistrationForm.markAsPristine();\n\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.record.update', {\n            recordDefinitionName: this.rxDefinitionNameService.getDisplayName(registrationRecord.recordDefinition)\n          })\n        );\n      });\n  }\n\n  transformFormControlData(): IRecordRegistration {\n    const approvalRecord = cloneDeep(this.recordRegistrationForm.value);\n\n    approvalRecord.justificationFieldName = approvalRecord.justificationFieldName.length\n      ? approvalRecord.justificationFieldName.join()\n      : null;\n\n    approvalRecord.permissionsFromSecurityLabels = approvalRecord.permissionsFromSecurityLabels\n      ? approvalRecord.permissionsFromSecurityLabels.map((securityLabel) => {\n          return securityLabel.id;\n        })\n      : null;\n\n    if (!approvalRecord.permissionsFromSecurityLabels) {\n      delete approvalRecord.permissionsFromSecurityLabels;\n    }\n\n    if (!approvalRecord.justificationFieldName) {\n      delete approvalRecord.justificationFieldName;\n    }\n\n    this.updateAdditionalFieldLabel(approvalRecord.field3Mapping);\n    this.updateAdditionalFieldLabel(approvalRecord.field4Mapping);\n    this.updateAdditionalFieldLabel(approvalRecord.field5Mapping);\n    this.updateAdditionalFieldLabel(approvalRecord.field6Mapping);\n\n    if (approvalRecord.justificationRequired.toApprove && approvalRecord.justificationRequired.toReject) {\n      approvalRecord.justificationRequired = JustificationRequirement.RequiredForApprovalOrRejection;\n    } else if (approvalRecord.justificationRequired.toApprove) {\n      approvalRecord.justificationRequired = JustificationRequirement.RequiredForApproval;\n    } else if (approvalRecord.justificationRequired.toReject) {\n      approvalRecord.justificationRequired = JustificationRequirement.RequiredForRejection;\n    } else {\n      approvalRecord.justificationRequired = JustificationRequirement.NotRequired;\n    }\n\n    return approvalRecord;\n  }\n\n  private updateAdditionalFieldLabel(fieldMapping: IAdditionalField): void {\n    if (\n      fieldMapping.fieldID !== '' &&\n      !fieldMapping.fieldID.includes('recordContext._associations') &&\n      fieldMapping.label === ''\n    ) {\n      fieldMapping.label = fieldMapping.fieldID;\n    }\n  }\n\n  reset(): void {\n    this.recordDefinitionSecurityLabels = [];\n    this.fieldNames = [];\n    this.recordRegistrationForm.get('summaryField').setValue('');\n    this.recordRegistrationForm.get('requestorField').setValue('');\n    this.recordRegistrationForm.get('approverExclusionField').setValue('');\n    this.recordRegistrationForm.get('permissionsFromSecurityLabels').setValue([]);\n\n    this.recordRegistrationForm.get('justificationRequired').setValue({\n      toApprove: false,\n      toReject: false\n    });\n\n    this.recordRegistrationForm.get('justificationFieldName').setValue([]);\n    this.recordRegistrationForm.get('requestIDField').setValue('');\n    this.recordRegistrationForm.get('notesField').setValue('');\n    this.recordRegistrationForm.get('field3Mapping').setValue(this.createAdditionalField());\n    this.recordRegistrationForm.get('field4Mapping').setValue(this.createAdditionalField());\n    this.recordRegistrationForm.get('field5Mapping').setValue(this.createAdditionalField());\n    this.recordRegistrationForm.get('field6Mapping').setValue(this.createAdditionalField());\n  }\n\n  handleJustificationField(): void {\n    if (\n      this.recordRegistrationForm.dirty &&\n      !this.recordRegistrationForm.get('justificationRequired').value.toApprove &&\n      !this.recordRegistrationForm.get('justificationRequired').value.toReject\n    ) {\n      this.recordRegistrationForm.get('justificationFieldName').setValue([]);\n    }\n  }\n}\n","<adapt-alert [config]=\"alertConfig\"></adapt-alert>\n\n<form [formGroup]=\"recordRegistrationForm\">\n  <div class=\"row\">\n    <div class=\"col-4 form-group\">\n      <rx-definition-picker\n        [options]=\"recordDefinitionPickerOptions\"\n        formControlName=\"recordDefinition\"\n        rx-id=\"definition-field\"\n        required=\"true\"\n      >\n      </rx-definition-picker>\n    </div>\n\n    <div class=\"col-4 form-group\">\n      <rx-field-definition-picker\n        [options]=\"requesterFieldDefinitionPickerOptions$ | async\"\n        formControlName=\"requestorField\"\n        rx-id=\"requester-id-field\"\n      ></rx-field-definition-picker>\n    </div>\n\n    <div class=\"col-4 form-group\">\n      <rx-field-definition-picker\n        [options]=\"approverExclusionFieldDefinitionPickerOptions$ | async\"\n        formControlName=\"approverExclusionField\"\n        rx-id=\"approver-exclusion-field\"\n      ></rx-field-definition-picker>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-4 form-group\">\n      <adapt-rx-select\n        [options]=\"recordDefinitionSecurityLabels\"\n        label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.record.permissions' | translate }}\"\n        name=\"permissionsFromSecurityLabels\"\n        [optionFormatter]=\"optionFormatter\"\n        [multiple]=\"true\"\n        formControlName=\"permissionsFromSecurityLabels\"\n        [selectAllButton]=\"true\"\n        [deselectAllButton]=\"true\"\n        [disabled]=\"!recordDefinitionSecurityLabels.length\"\n        rx-id=\"permissions-field\"\n        [tooltip]=\"permissionTooltip\"\n      ></adapt-rx-select>\n    </div>\n\n    <div class=\"col-4 form-group\">\n      <adapt-rx-textfield\n        rx-id=\"request-id-field\"\n        label=\"{{ 'com.bmc.arsys.rx.client.approval.console.detail.RequestId' | translate }}\"\n        formControlName=\"requestIDField\"\n        [readonly]=\"true\"\n        [disabledStyleForReadonlyState]=\"true\"\n      >\n      </adapt-rx-textfield>\n    </div>\n\n    <div class=\"col-4 form-group\">\n      <rx-field-definition-picker\n        [options]=\"summaryFieldDefinitionPickerOptions$ | async\"\n        formControlName=\"summaryField\"\n        rx-id=\"summary-field\"\n      ></rx-field-definition-picker>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-4 form-group\">\n      <rx-field-definition-picker\n        [options]=\"notesFieldDefinitionPickerOptions$ | async\"\n        formControlName=\"notesField\"\n        rx-id=\"notes-field\"\n      ></rx-field-definition-picker>\n    </div>\n\n    <div class=\"col-4 form-group\">\n      <adapt-rx-control-label\n        label=\"{{ 'com.bmc.arsys.rx.client.approval.justification.require-on.label' | translate }}\"\n      ></adapt-rx-control-label>\n\n      <div formGroupName=\"justificationRequired\">\n        <adapt-rx-checkbox\n          class=\"checkbox-inline\"\n          formControlName=\"toApprove\"\n          label=\"{{ 'com.bmc.arsys.rx.client.approval.justification.require-on.approval.label' | translate }}\"\n          [disabled]=\"!fieldNames.length\"\n          (ngModelChange)=\"handleJustificationField()\"\n        >\n        </adapt-rx-checkbox>\n\n        <adapt-rx-checkbox\n          class=\"checkbox-inline\"\n          formControlName=\"toReject\"\n          label=\"{{ 'com.bmc.arsys.rx.client.approval.justification.require-on.rejection.label' | translate }}\"\n          [disabled]=\"!fieldNames.length\"\n          (ngModelChange)=\"handleJustificationField()\"\n        >\n        </adapt-rx-checkbox>\n      </div>\n    </div>\n\n    <div class=\"col-4 form-group\">\n      <adapt-rx-select\n        [options]=\"fieldNames\"\n        [emptyOption]=\"true\"\n        label=\"{{ 'com.bmc.arsys.rx.client.approval.justification-reason.label' | translate }}\"\n        formControlName=\"justificationFieldName\"\n        name=\"justificationFieldName\"\n        [selectAllButton]=\"true\"\n        enableFilter=\"true\"\n        closeOnSelect=\"true\"\n        rx-id=\"justification-reason-field\"\n        [deselectAllButton]=\"true\"\n        [disabled]=\"!fieldNames.length\"\n        [tooltip]=\"justificationTooltip\"\n        [required]=\"\n          recordRegistrationForm.get('justificationRequired').value.toApprove ||\n          recordRegistrationForm.get('justificationRequired').value.toReject\n        \"\n      ></adapt-rx-select>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-4\">\n      <adapt-rx-control-label\n        label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.record.fields' | translate }}\"\n      ></adapt-rx-control-label>\n    </div>\n\n    <div class=\"col-4\">\n      <adapt-rx-control-label\n        label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.record.fields.labels' | translate }}\"\n      ></adapt-rx-control-label>\n    </div>\n  </div>\n\n  <div class=\"row\" formGroupName=\"field3Mapping\">\n    <div class=\"col-4 form-group\">\n      <rx-field-definition-picker\n        [options]=\"fieldDefinitionPickerOptions$ | async\"\n        formControlName=\"fieldID\"\n        rx-id=\"field3-mapping-field\"\n      ></rx-field-definition-picker>\n    </div>\n\n    <div class=\"col-4 form-group\">\n      <adapt-rx-textfield\n        formControlName=\"label\"\n        name=\"field3MappingLabel\"\n        adaptRequired\n        [disabled]=\"!recordRegistrationForm.get('field3Mapping').get('fieldID').value\"\n      ></adapt-rx-textfield>\n    </div>\n  </div>\n\n  <div class=\"row\" formGroupName=\"field4Mapping\">\n    <div class=\"col-4 form-group\">\n      <rx-field-definition-picker\n        [options]=\"fieldDefinitionPickerOptions$ | async\"\n        formControlName=\"fieldID\"\n        rx-id=\"field4-mapping-field\"\n      ></rx-field-definition-picker>\n    </div>\n\n    <div class=\"col-4 form-group\">\n      <adapt-rx-textfield\n        formControlName=\"label\"\n        name=\"field4MappingLabel\"\n        adaptRequired\n        [disabled]=\"!recordRegistrationForm.get('field4Mapping').get('fieldID').value\"\n      ></adapt-rx-textfield>\n    </div>\n  </div>\n  <div class=\"row\" formGroupName=\"field5Mapping\">\n    <div class=\"col-4 form-group\">\n      <rx-field-definition-picker\n        rx-id=\"field5-mapping-field\"\n        [options]=\"fieldDefinitionPickerOptions$ | async\"\n        formControlName=\"fieldID\"\n      ></rx-field-definition-picker>\n    </div>\n\n    <div class=\"col-4 form-group\">\n      <adapt-rx-textfield\n        formControlName=\"label\"\n        name=\"field5MappingLabel\"\n        adaptRequired\n        [disabled]=\"!recordRegistrationForm.get('field5Mapping').get('fieldID').value\"\n      ></adapt-rx-textfield>\n    </div>\n  </div>\n\n  <div class=\"row\" formGroupName=\"field6Mapping\">\n    <div class=\"col-4 form-group\">\n      <rx-field-definition-picker\n        rx-id=\"field6-mapping-field\"\n        [options]=\"fieldDefinitionPickerOptions$ | async\"\n        formControlName=\"fieldID\"\n      ></rx-field-definition-picker>\n    </div>\n\n    <div class=\"col-4 form-group\">\n      <adapt-rx-textfield\n        formControlName=\"label\"\n        name=\"field6MappingLabel\"\n        adaptRequired\n        [disabled]=\"!recordRegistrationForm.get('field6Mapping').get('fieldID').value\"\n      ></adapt-rx-textfield>\n    </div>\n  </div>\n</form>\n","import { Injectable, Injector } from '@angular/core';\nimport { DataPage } from '@helix/platform/shared/api';\n\nconst approvalMappingDataPage = 'com.bmc.arsys.rx.approval.application.datapage.ApprovalMappingDataPage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxApprovalMappingDataPageService extends DataPage {\n  constructor(private injector: Injector) {\n    super(injector, approvalMappingDataPage);\n  }\n}\n","import { Component, Injector, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport {\n  IExpressionEditorPropertyChange,\n  IExpressionFormControlOptions,\n  RxExpressionEditorService\n} from '@helix/platform/shared/components';\nimport { RxApprovalExpressionConfigurator } from '../approval-expression-configurator';\nimport {\n  ExpressionOperatorGroup,\n  IBundleInfo,\n  IDataPageResult,\n  RxDefinitionNameService,\n  RxGlobalCacheService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IRecordDefinition, RX_RECORD_DEFINITION, RxRecordDefinitionCacheService } from '@helix/platform/record/api';\nimport { Alert, RxSelectOption, RxSelectOptionsGroup } from '@bmc-ux/adapt-angular';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {\n  IRecordGridColumn,\n  IRecordGridConfig,\n  IRecordGridDataPageParams,\n  RecordGridComponent,\n  RowSelectionMode\n} from '@helix/platform/view/components';\nimport { RX_APPROVAL_CONFIGURATION } from '../approval-configuration.constant';\nimport { RxApprovalMappingDataPageService } from './approval-mapping-data-page.service';\nimport { IFieldResponse, ISelfApprovalConfiguration } from '../approval-configuration.types';\nimport { RxApprovalConfigurationService } from '../approval-configuration.service';\nimport { IDialogApi, RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { chain, find, get, map as _map, omit } from 'lodash';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport { map } from 'rxjs/operators';\nimport { DataCellTemplateParams } from '@bmc-ux/adapt-table';\n\n@Component({\n  selector: 'rx-self-approval-configuration',\n  templateUrl: './self-approval-configuration.component.html',\n  styleUrls: ['./self-approval-configuration.component.scss']\n})\nexport class SelfApprovalConfigurationComponent implements OnInit {\n  private dialogApi: IDialogApi;\n\n  @Input()\n  registeredRecordDefinitionName: string;\n\n  @ViewChild('definitionNameCellTemplate', { static: true })\n  definitionNameCellTemplate: TemplateRef<DataCellTemplateParams>;\n\n  constructor(\n    private injector: Injector,\n    private formBuilder: FormBuilder,\n    private rxModalService: RxModalService,\n    protected translateService: TranslateService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxNotificationService: RxNotificationService,\n    protected rxDefinitionNameService: RxDefinitionNameService,\n    private rxExpressionEditorService: RxExpressionEditorService,\n    private rxApprovalConfigurationService: RxApprovalConfigurationService,\n    protected rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxApprovalMappingDataPageService: RxApprovalMappingDataPageService\n  ) {}\n\n  protected expressionConfigurator: RxApprovalExpressionConfigurator;\n\n  alertConfig: Alert = {\n    content: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.self-approval.information'),\n    type: 'inline',\n    variant: 'info'\n  };\n\n  options: IExpressionFormControlOptions;\n  selfApprovalConfigurationForm: FormGroup;\n\n  @ViewChild('grid', { static: true })\n  grid: RecordGridComponent;\n\n  gridConfig: Observable<IRecordGridConfig>;\n  processOptions: RxSelectOptionsGroup[] = [];\n  loadingProcesses: boolean;\n  isUpdateButtonVisible: boolean;\n\n  ngOnInit(): void {\n    this.isUpdateButtonVisible = false;\n    this.expressionConfigurator = new RxApprovalExpressionConfigurator(this.injector);\n\n    this.expressionConfigurator.configureForProperty({\n      propertyPath: 'approvalQualification',\n      dataDictionary$: this.expressionConfigurator.approvalExpressionDataDictionary(\n        this.registeredRecordDefinitionName\n      ),\n      operators: this.expressionConfigurator.getOperatorRowsByGroup(ExpressionOperatorGroup.All)\n    });\n\n    this.options = {\n      label: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.configuration.self-approval.approval-qualification-field.label'\n      ),\n      dataDictionary$: this.expressionConfigurator.getDataDictionary('approvalQualification'),\n      operators: this.expressionConfigurator.getOperators('approvalQualification'),\n      isRequired: true\n    };\n\n    this.selfApprovalConfigurationForm = this.formBuilder.group({\n      qualificationExpression: null,\n      precedence: null,\n      auditInformation: null,\n      process: []\n    });\n\n    this.gridConfig = of({\n      actionButtons: [\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.edit.label'),\n          style: 'tertiary',\n          icon: 'pencil',\n          actions: [\n            {\n              name: this.setCurrentRecordValuesToForm.bind(this)\n            }\n          ],\n          disabled: () => this.grid.api.getSelectedRowCount() > 1\n        },\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n          style: 'tertiary',\n          icon: 'trash',\n          actions: [\n            {\n              name: this.deleteConfiguration.bind(this)\n            }\n          ]\n        }\n      ],\n      recordDefinitionName: RX_APPROVAL_CONFIGURATION.selfApproval.mapping.name,\n      enableRowSelection: RowSelectionMode.Multiple,\n      getData: (queryParams: IRecordGridDataPageParams) => this.getData(queryParams),\n      getRecordDefinition: () => of(this.getRecordDefinition()),\n      columns: this.getColumns(),\n      styles: 'flex-fill'\n    });\n\n    this.grid.adaptTable.selectionChange.subscribe(() => {\n      this.isUpdateButtonVisible = false;\n      this.clearFormValues();\n    });\n\n    this.loadProcesses();\n  }\n\n  private getData(queryParams: IRecordGridDataPageParams): Observable<IDataPageResult> {\n    const params = {\n      ...omit(queryParams, ['searchText']),\n      [RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.recordDefinition]: this.registeredRecordDefinitionName\n    };\n\n    return this.rxApprovalMappingDataPageService.get({ params });\n  }\n\n  private loadProcesses(): void {\n    this.loadingProcesses = true;\n\n    const queryParams = {\n      recorddefinition: RX_APPROVAL_CONFIGURATION.selfApproval.flowList.name,\n      propertySelection: [\n        RX_APPROVAL_CONFIGURATION.selfApproval.flowList.fields.recordDefinition,\n        RX_APPROVAL_CONFIGURATION.selfApproval.flowList.fields.selfApprovalFlowName,\n        RX_APPROVAL_CONFIGURATION.selfApproval.flowList.fields.selfApprovalFlowProcessDefinitionGuid\n      ].join(',')\n    };\n\n    this.rxApprovalMappingDataPageService\n      .get({ params: queryParams })\n      .pipe(\n        map((response: IDataPageResult) => {\n          const bundleInfoRequests: Observable<IBundleInfo>[] = chain(response.data)\n            .filter({\n              [RX_APPROVAL_CONFIGURATION.selfApproval.flowList.fields.recordDefinition]:\n                this.registeredRecordDefinitionName\n            })\n            .map((processData: IFieldResponse) => {\n              const id = this.rxDefinitionNameService.getBundleId(\n                processData[RX_APPROVAL_CONFIGURATION.selfApproval.flowList.fields.selfApprovalFlowName]\n              );\n\n              return this.rxGlobalCacheService.getBundleFriendlyName(id).pipe(\n                map((friendlyName) => ({\n                  id,\n                  friendlyName\n                }))\n              );\n            })\n            .value();\n\n          forkJoin(bundleInfoRequests).subscribe(\n            (bundleIdNameData: [IBundleInfo]) => {\n              this.processOptions = chain(response.data as IFieldResponse[])\n                .filter({\n                  [RX_APPROVAL_CONFIGURATION.selfApproval.flowList.fields.recordDefinition]:\n                    this.registeredRecordDefinitionName\n                })\n                .map((processData: IFieldResponse) => {\n                  return {\n                    id: this.rxDefinitionNameService.getBundleId(\n                      processData[RX_APPROVAL_CONFIGURATION.selfApproval.flowList.fields.selfApprovalFlowName]\n                    ),\n                    processGuid:\n                      processData[\n                        RX_APPROVAL_CONFIGURATION.selfApproval.flowList.fields.selfApprovalFlowProcessDefinitionGuid\n                      ],\n                    value: processData[RX_APPROVAL_CONFIGURATION.selfApproval.flowList.fields.selfApprovalFlowName],\n                    displayValue: this.rxDefinitionNameService.getDisplayName(\n                      processData[RX_APPROVAL_CONFIGURATION.selfApproval.flowList.fields.selfApprovalFlowName]\n                    )\n                  };\n                })\n                .groupBy('id')\n                .map((options, id) => {\n                  return {\n                    name: find(bundleIdNameData, { id }).friendlyName,\n                    children: _map(options, (option) => {\n                      return {\n                        value: option.value,\n                        displayValue: option.displayValue,\n                        processGuid: option.processGuid\n                      };\n                    })\n                  };\n                })\n                .value();\n            },\n            () => {},\n            () => (this.loadingProcesses = false)\n          );\n        })\n      )\n      .subscribe();\n  }\n\n  onEvent(): void {\n    this.selectApprovalQualificationExpression();\n  }\n\n  private selectApprovalQualificationExpression(): void {\n    this.rxExpressionEditorService\n      .openEditor(\n        {\n          property: {\n            path: 'approvalQualification',\n            value: this.selfApprovalConfigurationForm.value.qualificationExpression,\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.configuration.self-approval.approval-qualification-field.label'\n            )\n          },\n          expressionConfigurator: this.expressionConfigurator,\n          legend: [\n            {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'),\n              icon: 'd-icon-dollar'\n            },\n            {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.field.label'),\n              icon: 'd-icon-field_text'\n            }\n          ]\n        },\n        (dialogApi: IDialogApi) => (this.dialogApi = dialogApi)\n      )\n      .subscribe((expression: IExpressionEditorPropertyChange) => {\n        this.dialogApi = null;\n        this.selfApprovalConfigurationForm.get('qualificationExpression').setValue(expression.value);\n        this.selfApprovalConfigurationForm.get('qualificationExpression').markAsDirty();\n      });\n  }\n\n  createSelfApprovalConfiguration(): void {\n    this.selfApprovalConfigurationForm.markAsPristine();\n    const configuration: ISelfApprovalConfiguration = this.getSelfApprovalConfiguration();\n\n    this.rxApprovalConfigurationService.createSelfApprovalConfiguration(configuration).subscribe(() => {\n      this.rxNotificationService.addSuccessMessage(\n        this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.configuration.self-approval.expression-saved.message'\n        )\n      );\n\n      this.clearFormValues();\n      this.grid.api.refresh().subscribe();\n    });\n  }\n\n  updateSelfApprovalConfiguration(): void {\n    this.selfApprovalConfigurationForm.markAsPristine();\n    const configuration: ISelfApprovalConfiguration = this.getSelfApprovalConfiguration();\n    configuration.id = this.grid.api.getFirstSelectedRow()[RX_RECORD_DEFINITION.coreFieldIds.id];\n\n    this.rxApprovalConfigurationService\n      .updateSelfApprovalConfiguration(\n        this.grid.api.getFirstSelectedRow()[RX_RECORD_DEFINITION.coreFieldIds.id],\n        configuration\n      )\n      .subscribe(() => {\n        this.clearFormValues();\n        this.isUpdateButtonVisible = false;\n\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.configuration.self-approval.expression-updated.message'\n          )\n        );\n\n        this.grid.api.refresh().subscribe();\n      });\n  }\n\n  private getSelfApprovalConfiguration(): ISelfApprovalConfiguration {\n    const selectedProcess: RxSelectOption = get(this.selfApprovalConfigurationForm.get('process').value, '[0]', {});\n\n    return {\n      auditText: this.selfApprovalConfigurationForm.value.auditInformation,\n      precedence: this.selfApprovalConfigurationForm.value.precedence,\n      qualification: this.selfApprovalConfigurationForm.value.qualificationExpression,\n      description: this.registeredRecordDefinitionName,\n      recordDefinition: this.registeredRecordDefinitionName,\n      approvalFlowName: selectedProcess.value || '',\n      approvalFlowProcessDefinitionGUID: selectedProcess.processGuid || '',\n      approvalMappingRecordDefinition: RX_APPROVAL_CONFIGURATION.selfApproval.mapping.name\n    };\n  }\n\n  private setCurrentRecordValuesToForm(): void {\n    this.isUpdateButtonVisible = true;\n    const selectedRow: IRowDataItem = this.grid.api.getFirstSelectedRow();\n\n    this.selfApprovalConfigurationForm\n      .get('qualificationExpression')\n      .setValue(selectedRow[RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.qualification]);\n\n    this.selfApprovalConfigurationForm\n      .get('precedence')\n      .setValue(selectedRow[RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.precedence]);\n\n    this.selfApprovalConfigurationForm\n      .get('auditInformation')\n      .setValue(selectedRow[RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.auditInformation]);\n\n    const process: RxSelectOption = selectedRow[RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.approvalFlowName]\n      ? [\n          {\n            value: selectedRow[RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.approvalFlowName],\n            displayValue: this.rxDefinitionNameService.getDisplayName(\n              selectedRow[RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.approvalFlowName]\n            )\n          }\n        ]\n      : [];\n\n    this.selfApprovalConfigurationForm.get('process').setValue(process);\n  }\n\n  private deleteConfiguration(): void {\n    this.rxModalService\n      .confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.configuration.self-approval.expression-delete-confirmation.message'\n        )\n      })\n      .then((result: boolean) => {\n        if (result) {\n          const deleteRequests$: Observable<any>[] = this.grid.api\n            .getSelectedRows()\n            .map((record: IRowDataItem) =>\n              this.rxApprovalConfigurationService.deleteSelfApprovalConfiguration(\n                record[RX_RECORD_DEFINITION.coreFieldIds.id]\n              )\n            );\n\n          forkJoin(deleteRequests$).subscribe(() => {\n            this.rxNotificationService.addSuccessMessage(\n              this.translateService.instant(\n                'com.bmc.arsys.rx.client.approval.configuration.self-approval.expression-deleted.message'\n              )\n            );\n\n            this.clearFormValues();\n            this.isUpdateButtonVisible = false;\n            this.grid.api.refresh().subscribe();\n          });\n        }\n      });\n  }\n\n  clearFormValues(): void {\n    this.selfApprovalConfigurationForm.reset();\n    this.selfApprovalConfigurationForm.get('process').setValue([]);\n  }\n\n  optionFormatter(option: RxSelectOption): string {\n    return option.displayValue;\n  }\n\n  private getRecordDefinition(): IRecordDefinition {\n    return {\n      fieldDefinitions: [\n        {\n          id: RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.hiddenQualification,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.precedence,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.integer\n        },\n        {\n          id: RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.auditInformation,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.approvalFlowName,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.qualification,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.recordDefinition,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.approvalFlowGuid,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_RECORD_DEFINITION.coreFieldIds.id,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        }\n      ]\n    };\n  }\n\n  private getColumns(): IRecordGridColumn[] {\n    return [\n      {\n        index: 0,\n        fieldId: String(RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.hiddenQualification),\n        sortable: false,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.configuration.selfApproval.grid.column.approvalExpression'\n        )\n      },\n      {\n        index: 1,\n        fieldId: String(RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.precedence),\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.configuration.selfApproval.grid.column.precedence'\n        )\n      },\n      {\n        index: 2,\n        fieldId: String(RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.auditInformation),\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.configuration.selfApproval.grid.column.auditInformation'\n        )\n      },\n      {\n        index: 3,\n        fieldId: String(RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.approvalFlowName),\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.configuration.selfApproval.grid.column.processFlow'\n        )\n      },\n      {\n        index: 4,\n        fieldId: String(RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.qualification),\n        visible: false,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.configuration.selfApproval.grid.column.expressionValue'\n        )\n      },\n      {\n        index: 5,\n        fieldId: String(RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.recordDefinition),\n        visible: false,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.configuration.selfApproval.grid.column.recordDefinition'\n        ),\n        cellTemplate: this.definitionNameCellTemplate\n      },\n      {\n        index: 6,\n        fieldId: String(RX_APPROVAL_CONFIGURATION.selfApproval.mapping.fields.approvalFlowGuid),\n        visible: false,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.configuration.selfApproval.grid.column.processFlowGUID'\n        )\n      },\n      {\n        index: 7,\n        fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.id),\n        visible: false,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.configuration.selfApproval.grid.column.id'\n        )\n      }\n    ];\n  }\n\n  isDirty(): boolean {\n    return this.selfApprovalConfigurationForm.dirty || Boolean(this.dialogApi?.isDirty());\n  }\n}\n","<adapt-alert [config]=\"alertConfig\"></adapt-alert>\n\n<form [formGroup]=\"selfApprovalConfigurationForm\">\n  <rx-expression-form-control\n    class=\"d-block form-group\"\n    [options]=\"options\"\n    formControlName=\"qualificationExpression\"\n    (events)=\"onEvent()\"\n    required=\"true\"\n  ></rx-expression-form-control>\n\n  <div class=\"row\">\n    <div class=\"col-md-4 col-12\">\n      <div class=\"row\">\n        <div class=\"col-12 form-group\">\n          <adapt-rx-counter\n            rx-id=\"precedence\"\n            label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.precedence' | translate }}\"\n            required=\"true\"\n            formControlName=\"precedence\"\n          >\n          </adapt-rx-counter>\n        </div>\n\n        <div class=\"col-12 form-group\">\n          <adapt-rx-select\n            class=\"d-block\"\n            label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.selfApproval.process' | translate }}\"\n            rx-id=\"process\"\n            formControlName=\"process\"\n            [options]=\"processOptions\"\n            enableFilter=\"true\"\n            emptyOption=\"true\"\n            [optionFormatter]=\"optionFormatter\"\n            [loadingState]=\"loadingProcesses\"\n          >\n          </adapt-rx-select>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-md-8 col-12 form-group\">\n      <adapt-rx-textarea\n        label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.auditInformation' | translate }}\"\n        formControlName=\"auditInformation\"\n        rx-id=\"audit-information\"\n        required=\"true\"\n        rows=\"5\"\n      >\n      </adapt-rx-textarea>\n    </div>\n  </div>\n\n  <button\n    class=\"d-icon-plus_adapt form-group\"\n    type=\"button\"\n    adapt-button\n    btn-type=\"primary\"\n    rx-id=\"add-button\"\n    size=\"small\"\n    [hidden]=\"isUpdateButtonVisible\"\n    [disabled]=\"selfApprovalConfigurationForm.pristine || selfApprovalConfigurationForm.invalid\"\n    (click)=\"createSelfApprovalConfiguration()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.add.label' | translate }}\n  </button>\n\n  <button\n    class=\"form-group\"\n    type=\"button\"\n    adapt-button\n    btn-type=\"primary\"\n    rx-id=\"update-button\"\n    size=\"small\"\n    [hidden]=\"!isUpdateButtonVisible\"\n    [disabled]=\"selfApprovalConfigurationForm.pristine || selfApprovalConfigurationForm.invalid\"\n    (click)=\"updateSelfApprovalConfiguration()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.approval.update.button.label' | translate }}\n  </button>\n</form>\n\n<rx-record-grid #grid [config]=\"gridConfig\"></rx-record-grid>\n\n<ng-template #definitionNameCellTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n  {{ dataItem[column.field] | rxDefinitionNamePipe }}\n</ng-template>\n","import { Component, Injector, ViewChild } from '@angular/core';\nimport { ActiveModalRef, AdaptTabsComponent, DismissReasons } from '@bmc-ux/adapt-angular';\nimport { RxNotificationService } from '@helix/platform/shared/api';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ApprovalFlowConfigurationComponent } from '../approval-flow-configuration/approval-flow-configuration.component';\nimport { RecordRegistrationComponent } from '../record-registration/record-registration.component';\nimport { SelfApprovalConfigurationComponent } from '../self-approval-configuration/self-approval-configuration.component';\n\n@Component({\n  selector: 'rx-approval-configuration-editor',\n  templateUrl: './approval-configuration-editor.component.html',\n  styleUrls: ['./approval-configuration-editor.component.scss']\n})\nexport class ApprovalConfigurationEditorComponent extends RxModalClass {\n  activatedTabs = [true, false, false];\n  selectedRecordDefinition = this.activeModalRef.getData().selectedRecordDefinition;\n  editMode = this.activeModalRef.getData().editMode;\n\n  @ViewChild(ApprovalFlowConfigurationComponent)\n  approvalFlowConfigurationComponent: ApprovalFlowConfigurationComponent;\n\n  @ViewChild(RecordRegistrationComponent)\n  recordRegistrationComponent: RecordRegistrationComponent;\n\n  @ViewChild(SelfApprovalConfigurationComponent)\n  selfApprovalConfigurationComponent: SelfApprovalConfigurationComponent;\n\n  @ViewChild('tabSetComponent')\n  tabSetComponent: AdaptTabsComponent;\n\n  constructor(\n    private translateService: TranslateService,\n    private rxNotificationService: RxNotificationService,\n    private activeModalRef: ActiveModalRef,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  isDirty(): boolean {\n    return (\n      this.recordRegistrationComponent?.isFormDirty() ||\n      this.approvalFlowConfigurationComponent?.isDirty() ||\n      this.selfApprovalConfigurationComponent?.isDirty()\n    );\n  }\n\n  onRecordRegistered(registeredRecordDefinitionName: string): void {\n    this.editMode = true;\n    this.selectedRecordDefinition = registeredRecordDefinitionName;\n  }\n\n  isSaveButtonDisabled(): boolean {\n    if (this.editMode) {\n      return !this.recordRegistrationComponent?.canSave() && !this.approvalFlowConfigurationComponent?.canSave();\n    } else {\n      return !this.recordRegistrationComponent?.canSave();\n    }\n  }\n\n  saveApprovalConfiguration(): void {\n    if (this.recordRegistrationComponent?.isFormDirty() && this.recordRegistrationComponent?.isFormValid()) {\n      this.recordRegistrationComponent.save();\n    } else if (this.recordRegistrationComponent?.isFormDirty() && !this.recordRegistrationComponent?.isFormValid()) {\n      this.rxNotificationService.addWarningMessage(\n        this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.message.validation.error')\n      );\n\n      this.tabSetComponent.setActiveTab(0, true, null);\n    }\n\n    if (this.editMode && this.approvalFlowConfigurationComponent?.canSave()) {\n      this.approvalFlowConfigurationComponent?.markInvalidGroupsAndFlows();\n\n      if (this.approvalFlowConfigurationComponent?.areFlowGroupsValid()) {\n        this.approvalFlowConfigurationComponent.saveFlowGroups();\n      } else if (this.approvalFlowConfigurationComponent?.hasFlowGroups()) {\n        this.rxNotificationService.addWarningMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.message.validation.error')\n        );\n\n        this.tabSetComponent.setActiveTab(2, true, null);\n      }\n    }\n  }\n\n  closeModal(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"designer-modal-body d-flex mh-100 flex-column\">\n  <adapt-tabset [fullHeight]=\"true\" #tabSetComponent (tab-active-changed)=\"activatedTabs[$event.index] = true\">\n    <adapt-tab-panel\n      adapt-tab-title=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.tab.registration' | translate }}\"\n    >\n      <rx-record-registration\n        [registeredRecordDefinitionName]=\"selectedRecordDefinition\"\n        [isEditMode]=\"editMode\"\n        (recordRegistered)=\"onRecordRegistered($event)\"\n      ></rx-record-registration>\n    </adapt-tab-panel>\n\n    <adapt-tab-panel\n      adapt-tab-title=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.tab.selfApproval' | translate }}\"\n      [disabled]=\"!editMode\"\n    >\n      <rx-self-approval-configuration\n        [registeredRecordDefinitionName]=\"selectedRecordDefinition\"\n        *ngIf=\"editMode && activatedTabs[1]\"\n      >\n      </rx-self-approval-configuration>\n    </adapt-tab-panel>\n\n    <adapt-tab-panel\n      adapt-tab-title=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.tab.approvalFlows' | translate }}\"\n      [disabled]=\"!editMode\"\n    >\n      <rx-approval-flow-configuration\n        [registeredRecordDefinitionName]=\"selectedRecordDefinition\"\n        *ngIf=\"editMode && activatedTabs[2]\"\n      ></rx-approval-flow-configuration>\n    </adapt-tab-panel>\n  </adapt-tabset>\n</div>\n\n<div class=\"modal-footer\">\n  <button\n    adapt-button\n    type=\"button\"\n    btn-type=\"primary\"\n    rx-id=\"save-button\"\n    [disabled]=\"isSaveButtonDisabled()\"\n    (click)=\"saveApprovalConfiguration()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n  <button adapt-button type=\"button\" btn-type=\"secondary\" rx-id=\"close-button\" (click)=\"closeModal()\">\n    {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n  </button>\n</div>\n","import { Injectable, Injector } from '@angular/core';\nimport { DataPage } from '@helix/platform/shared/api';\n\nconst recordDefinitionRegistrationDataPageQuery =\n  'com.bmc.arsys.rx.approval.application.datapage.RecordDefinitionRegistrationDataPageQuery';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRecordDefinitionRegistrationDataPageService extends DataPage {\n  constructor(private injector: Injector) {\n    super(injector, recordDefinitionRegistrationDataPageQuery);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'rxAssociatedRecordFieldNamePipe'\r\n})\r\nexport class RxAssociatedRecordFieldNamePipe implements PipeTransform {\r\n  transform(value: string, associatedRecordFieldNames: { [key: string]: string }): string {\r\n    return associatedRecordFieldNames?.[value] || value;\r\n  }\r\n}\r\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport {\n  IRecordGridColumn,\n  IRecordGridConfig,\n  IRecordGridDataPageParams,\n  RecordGridComponent,\n  RowSelectionMode\n} from '@helix/platform/view/components';\nimport { Observable, of } from 'rxjs';\nimport { OpenViewActionModalSize } from '@helix/platform/view/api';\nimport { IRecordDefinition, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RX_APPROVAL_CONFIGURATION } from './approval-configuration.constant';\nimport { RxRecordDefinitionRegistrationDataPageService } from './record-definition-registration-data-page.service';\nimport { AdaptModalService, KeyValueObject } from '@bmc-ux/adapt-angular';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { RxApprovalConfigurationService } from './approval-configuration.service';\nimport { IDataPageResult, RxNotificationService } from '@helix/platform/shared/api';\nimport { ApprovalConfigurationEditorComponent } from './approval-configuration-editor/approval-configuration-editor.component';\nimport { DataCellTemplateParams } from '@bmc-ux/adapt-table';\n\n@Component({\n  selector: 'rx-admin-approval-configuration',\n  templateUrl: './approval-configuration.component.html'\n})\nexport class ApprovalConfigurationAdminComponent implements OnInit {\n  gridConfig: Observable<IRecordGridConfig>;\n\n  @ViewChild('definitionNameCellTemplate', { static: true })\n  definitionNameCellTemplate: TemplateRef<DataCellTemplateParams>;\n\n  @ViewChild('fieldNameCellTemplate', { static: true })\n  fieldNameCellTemplate: TemplateRef<DataCellTemplateParams>;\n\n  @ViewChild('grid', { static: true })\n  grid: RecordGridComponent;\n\n  constructor(\n    private rxModalService: RxModalService,\n    private translateService: TranslateService,\n    private adaptModalService: AdaptModalService,\n    private rxNotificationService: RxNotificationService,\n    private rxApprovalConfigurationService: RxApprovalConfigurationService,\n    private rxRecordDefinitionRegistrationDataPageService: RxRecordDefinitionRegistrationDataPageService\n  ) {}\n\n  ngOnInit(): void {\n    this.gridConfig = of({\n      actionButtons: [\n        {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.configuration.record.de-register.button.label'\n          ),\n          style: 'tertiary',\n          icon: 'trash',\n          actions: [\n            {\n              name: () => {\n                this.unregisterRecord();\n              }\n            }\n          ]\n        }\n      ],\n      recordDefinitionName: RX_APPROVAL_CONFIGURATION.selfApproval.apForm.name,\n      filterExpression: \"('61001'!=$NULL$ AND '61001'!=\\\"\\\" AND ('14860' != $NULL$ AND '14860' = 1 ))\",\n      getData: (queryParams: IRecordGridDataPageParams) => this.getData(queryParams),\n      enableRowSelection: RowSelectionMode.Single,\n      getRecordDefinition: () => of(this.getRecordDefinition()),\n      columns: this.getColumns(),\n      styles: 'flex-fill',\n      enableFiltering: false\n    });\n  }\n\n  private getData(queryParams: IRecordGridDataPageParams): Observable<IDataPageResult> {\n    delete queryParams.searchText;\n    queryParams.pageSize = -1;\n\n    return this.rxRecordDefinitionRegistrationDataPageService.get({ params: queryParams });\n  }\n\n  newApprovalConfiguration() {\n    this.openApprovalConfiguration({\n      editMode: false,\n      selectedRecordDefinition: ''\n    });\n  }\n\n  editApprovalConfiguration(clickedColumnRow) {\n    this.openApprovalConfiguration({\n      editMode: true,\n      selectedRecordDefinition: clickedColumnRow[RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.formName]\n    });\n  }\n\n  private openApprovalConfiguration(data: KeyValueObject) {\n    this.rxModalService\n      .openModal({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.main.title'),\n        content: ApprovalConfigurationEditorComponent,\n        size: OpenViewActionModalSize.Large as any,\n        data: {\n          ...data\n        }\n      })\n      .then(\n        () => {},\n        () => {\n          this.grid.api.refresh().subscribe();\n        }\n      )\n      .catch(() => {});\n  }\n\n  private unregisterRecord(): void {\n    this.rxModalService\n      .confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.configuration.record.de-register.warning'\n        )\n      })\n      .then((result: boolean) => {\n        if (result) {\n          this.rxApprovalConfigurationService\n            .unRegisterRecord(\n              this.grid.api.getFirstSelectedRow()[RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.formName]\n            )\n            .subscribe(() => {\n              this.rxNotificationService.addSuccessMessage(\n                this.translateService.instant(\n                  'com.bmc.arsys.rx.client.approval.configuration.record.de-register.success'\n                )\n              );\n              this.grid.api.refresh().subscribe();\n            });\n        }\n      });\n  }\n\n  private getRecordDefinition(): IRecordDefinition {\n    return {\n      fieldDefinitions: [\n        {\n          id: RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.formName,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.formRequestId,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.requester,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.summary,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_RECORD_DEFINITION.coreFieldIds.id,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.notesField,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.field3,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.field4,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.field5,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.field6,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.field7,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.securityLabels,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        }\n      ]\n    };\n  }\n\n  private getColumns(): IRecordGridColumn[] {\n    return [\n      {\n        index: 0,\n        fieldId: String(RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.formName),\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.configuration.grid.column.recordDefinition'\n        ),\n        cellTemplate: this.definitionNameCellTemplate\n      },\n      {\n        index: 1,\n        fieldId: String(RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.formRequestId),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.grid.column.requestId'),\n        cellTemplate: this.fieldNameCellTemplate,\n        visible: false\n      },\n      {\n        index: 2,\n        fieldId: String(RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.requester),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.grid.column.requester'),\n        cellTemplate: this.fieldNameCellTemplate,\n        visible: false\n      },\n      {\n        index: 3,\n        fieldId: String(RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.summary),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.grid.column.description'),\n        cellTemplate: this.fieldNameCellTemplate\n      },\n      {\n        index: 4,\n        fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.id),\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.configuration.grid.column.formInstanceId'\n        ),\n        visible: false\n      },\n      {\n        index: 5,\n        fieldId: String(RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.notesField),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.grid.column.notes'),\n        cellTemplate: this.fieldNameCellTemplate,\n        visible: false\n      },\n      {\n        index: 6,\n        fieldId: String(RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.field3),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.grid.column.field3'),\n        cellTemplate: this.fieldNameCellTemplate,\n        visible: false\n      },\n      {\n        index: 7,\n        fieldId: String(RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.field4),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.grid.column.field4'),\n        cellTemplate: this.fieldNameCellTemplate,\n        visible: false\n      },\n      {\n        index: 8,\n        fieldId: String(RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.field5),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.grid.column.field5'),\n        cellTemplate: this.fieldNameCellTemplate,\n        visible: false\n      },\n      {\n        index: 9,\n        fieldId: String(RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.field6),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.grid.column.field6'),\n        visible: false\n      },\n      {\n        index: 10,\n        fieldId: String(RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.field7),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.grid.column.field7'),\n        visible: false\n      },\n      {\n        index: 11,\n        fieldId: String(RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.securityLabels),\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.configuration.grid.column.securityLabels'\n        ),\n        visible: false\n      }\n    ];\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.title' | translate }}\">\n  <ng-container>\n    <button\n      adapt-button\n      type=\"button\"\n      btn-type=\"tertiary\"\n      class=\"d-icon-plus_circle align-self-start\"\n      rx-id=\"new-button\"\n      (click)=\"newApprovalConfiguration()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.new.label' | translate }}\n    </button>\n\n    <rx-record-grid #grid [config]=\"gridConfig\"></rx-record-grid>\n  </ng-container>\n</rx-admin-settings>\n\n<ng-template #definitionNameCellTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n  <a href=\"javascript:void(0)\" (click)=\"editApprovalConfiguration(dataItem)\">\n    {{ dataItem[column.field] | rxDefinitionNamePipe }}\n  </a>\n</ng-template>\n\n<ng-template #fieldNameCellTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n  {{ dataItem[column.field] | rxAssociatedRecordFieldNamePipe: dataItem.associationsLabels }}\n</ng-template>\n","import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CommonModule } from '@angular/common';\nimport { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AdaptAccordionModule,\n  AdaptAlertModule,\n  AdaptBusyModule,\n  AdaptButtonModule,\n  AdaptDropdownModule,\n  AdaptEmptyStateModule,\n  AdaptHighlightModule,\n  AdaptPopoverModule,\n  AdaptRxCheckboxModule,\n  AdaptRxCounterModule,\n  AdaptRxLabelModule,\n  AdaptRxRadiobuttonModule,\n  AdaptRxSearchModule,\n  AdaptRxSelectModule,\n  AdaptRxTextareaModule,\n  AdaptRxTextfieldModule,\n  AdaptRxValidatorsModule,\n  AdaptTabsModule,\n  AdaptTooltipModule,\n  AdaptTreeModule\n} from '@bmc-ux/adapt-angular';\nimport { RX_APPLICATION, RxDefinitionModule } from '@helix/platform/shared/api';\nimport {\n  AdminSettingsModule,\n  ExpressionFormControlModule,\n  RxDefinitionPickerModule,\n  RxSelectWithPaginationModule\n} from '@helix/platform/shared/components';\nimport { RxBusyIndicatorModule } from '@helix/platform/ui-kit';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ApprovalConfigurationEditorComponent } from './approval-configuration-editor/approval-configuration-editor.component';\nimport { ApprovalConfigurationAdminComponent } from './approval-configuration.component';\nimport { ApprovalFlowConfigurationComponent } from './approval-flow-configuration/approval-flow-configuration.component';\nimport { RxAssociatedRecordFieldNamePipe } from './associated-record-field-name.pipe';\nimport { FlowApproversSelectorComponent } from './flow-approvers-selector/flow-approvers-selector.component';\nimport { RxFieldDefinitionPickerComponent } from './record-registration/field-definition-picker/field-definition-picker.component';\nimport { RecordRegistrationComponent } from './record-registration/record-registration.component';\nimport { SelfApprovalConfigurationComponent } from './self-approval-configuration/self-approval-configuration.component';\n\n@NgModule({\n  declarations: [\n    ApprovalConfigurationAdminComponent,\n    ApprovalFlowConfigurationComponent,\n    RxAssociatedRecordFieldNamePipe,\n    SelfApprovalConfigurationComponent,\n    RecordRegistrationComponent,\n    RxFieldDefinitionPickerComponent,\n    FlowApproversSelectorComponent,\n    ApprovalConfigurationEditorComponent\n  ],\n  imports: [\n    AdaptAlertModule,\n    AdaptButtonModule,\n    AdaptHighlightModule,\n    AdaptRxSelectModule,\n    AdaptRxTextfieldModule,\n    AdaptTabsModule,\n    AdminSettingsModule,\n    CommonModule,\n    ExpressionFormControlModule,\n    RecordGridModule,\n    RxBusyIndicatorModule,\n    RxDefinitionPickerModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    AdaptRxLabelModule,\n    FormsModule,\n    AdaptDropdownModule,\n    AdaptRxSearchModule,\n    AdaptTreeModule,\n    RxDefinitionModule,\n    AdaptRxCounterModule,\n    AdaptRxTextareaModule,\n    AdaptPopoverModule,\n    AdaptTooltipModule,\n    DragDropModule,\n    AdaptAccordionModule,\n    AdaptRxRadiobuttonModule,\n    AdaptBusyModule,\n    RxSelectWithPaginationModule,\n    AdaptRxCheckboxModule,\n    AdaptRxValidatorsModule,\n    AdaptEmptyStateModule\n  ],\n  entryComponents: [ApprovalConfigurationAdminComponent, FlowApproversSelectorComponent]\n})\nexport class ApprovalConfigurationRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-approval-configuration',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(ApprovalConfigurationAdminComponent),\n      name: 'Approval configuration',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\n\nexport const RX_APPROVAL_NOTIFICATIONS = {\n  approvalNotificationForm: {\n    name: 'AP: Approval Notification',\n    fields: {\n      status: RX_RECORD_DEFINITION.coreFieldIds.status,\n      notificationName: RX_RECORD_DEFINITION.coreFieldIds.description,\n      sendToOther: 12300,\n      method: 12301,\n      sendTo: 12302,\n      notificationMessage: 12303,\n      subject: 12305,\n      notifyOn: 12307,\n      additionalConditions: 12308,\n      useTemplate: 14053,\n      applicationName: 14861,\n      globalNotification: 14862,\n      applicationBundleId: 61001\n    }\n  },\n\n  apProcessDefinitionForm: {\n    name: 'AP:Process Definition',\n    fields: {\n      processName: 10000,\n      application: 10050\n    }\n  },\n\n  approvalFlowConfiguration: {\n    name: 'com.bmc.arsys.rx.approval:ApprovalFlowConfiguration',\n    fields: {\n      flowGroup: 10007,\n      flowName: 10008,\n      recordDefinition: 10000,\n      arApprovalProcessDefinitionGuid: 57060\n    }\n  },\n\n  arSystemEmailMailboxConfiguration: {\n    name: 'AR System Email Mailbox Configuration',\n    fields: {\n      mailboxFunction: 18049\n    }\n  },\n\n  arSystemAdministrationTextTemplate: {\n    name: 'AR System Administration: TextTemplate',\n    fields: {\n      id: RX_RECORD_DEFINITION.coreFieldIds.id,\n      name: 41202,\n      applicationBundleId: 61001\n    }\n  }\n};\n","import { IDataDictionary, IExpressionConfigurator, RxExpressionConfigurator } from '@helix/platform/shared/api';\nimport { Injector } from '@angular/core';\nimport { includes } from 'lodash';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IFieldDefinition, RX_RECORD_DEFINITION, RxRecordDefinitionCacheService } from '@helix/platform/record/api';\nimport { RX_APPROVAL_NOTIFICATIONS } from '../approval-notifications.constant';\n\nexport class RxApprovalNotificationExpressionConfigurator\n  extends RxExpressionConfigurator\n  implements IExpressionConfigurator\n{\n  private translateService = this.injector.get(TranslateService);\n  private rxRecordDefinitionCacheService = this.injector.get(RxRecordDefinitionCacheService);\n\n  constructor(private injector: Injector) {\n    super();\n  }\n\n  commonDataDictionary$: Observable<IDataDictionary> = of([\n    {\n      label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n      children: []\n    }\n  ]);\n\n  approvalNotificationExpressionDataDictionary(\n    recordDefinitionName: string,\n    isSingleQuoteTextExpression: boolean\n  ): Observable<IDataDictionary> {\n    if (recordDefinitionName) {\n      return this.rxRecordDefinitionCacheService.getRecordDefinition(recordDefinitionName).pipe(\n        map((recordDefinition) => {\n          return [\n            {\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.approval.expression-editor.data-dictionary.values.record-definition.title'\n              ),\n              children: recordDefinition.fieldDefinitions\n                .filter(\n                  (fieldDefinition: IFieldDefinition) =>\n                    fieldDefinition.resourceType !== RX_RECORD_DEFINITION.dataTypes.attachment.resourceType &&\n                    fieldDefinition.fieldMapping?.source === 'PRIMARY_RECORD_DEFINITION' &&\n                    !includes(\n                      [\n                        RX_RECORD_DEFINITION.coreFieldIds.displayId,\n                        RX_RECORD_DEFINITION.coreFieldIds.id,\n                        RX_APPROVAL_NOTIFICATIONS.approvalNotificationForm.fields.applicationBundleId\n                      ],\n                      fieldDefinition.id\n                    )\n                )\n                .map((fieldDefinition: IFieldDefinition) => ({\n                  label: fieldDefinition.name.replace(new RegExp(' Primary$'), ''),\n                  icon: 'd-icon-field_text',\n                  expression: isSingleQuoteTextExpression\n                    ? `'${fieldDefinition.name}'`\n                    : `'\\${${fieldDefinition.name}}'`,\n                  resourceType: fieldDefinition.resourceType\n                }))\n            },\n            {\n              label: 'NULL',\n              icon: 'd-icon-dollar',\n              expression: '$NULL$',\n              hidden: true\n            }\n          ];\n        })\n      );\n    } else {\n      return of([]);\n    }\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\n\nexport const RX_CONNECTION_MAPPING = {\n  aliasTypes: {\n    dataSource: 'DataSource',\n    webRequest: 'WebRequest',\n    connector: 'connector'\n  },\n  connector: {\n    recordDefinitionName: 'Connector Configurations',\n    fields: {\n      status: RX_RECORD_DEFINITION.coreFieldIds.status,\n      id: RX_RECORD_DEFINITION.coreFieldIds.id,\n      target_name: 56110,\n      connector_id: 56111,\n      connector_name: 56112,\n      connector_config_id: 56113,\n      connector_config_name: 56114,\n      connector_profile_id: 56115,\n      connector_profile_Name: 56116\n    }\n  },\n  webRequest: {\n    recordDefinitionName: 'WebAPI Connection',\n    fields: {\n      authentication: 70034,\n      hostname: 70030,\n      id: RX_RECORD_DEFINITION.coreFieldIds.id,\n      name: RX_RECORD_DEFINITION.coreFieldIds.description,\n      port: 70031\n    }\n  },\n  dataSource: {\n    recordDefinitionName: 'Data Source',\n    fields: {\n      name: RX_RECORD_DEFINITION.coreFieldIds.description,\n      id: RX_RECORD_DEFINITION.coreFieldIds.id,\n      sourceType: 70051\n    }\n  },\n  aliasMapping: {\n    recordDefinitionName: 'Alias Mapping',\n    queryExpression: \"'56150' != 'email'\",\n    fields: {\n      status: RX_RECORD_DEFINITION.coreFieldIds.status,\n      id: RX_RECORD_DEFINITION.coreFieldIds.id,\n      aliasType: 56150,\n      aliasName: 56153,\n      aliasValue: 56154,\n      applicationId: 56151,\n      applicationName: 56152\n    }\n  }\n};\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { forkJoin, Observable } from 'rxjs';\nimport { map } from 'lodash';\nimport { IApprovalNotification } from './approval-notifications.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxApprovalNotificationsService {\n  approvalNotificationApi = '/api/com.bmc.arsys.rx.approval/rx/application/approval/configuration/notification';\n\n  constructor(private httpClient: HttpClient) {}\n\n  getApprovalNotification(notificationRecordInstanceId: string): Observable<IApprovalNotification> {\n    return this.httpClient.get<IApprovalNotification>(\n      `${this.approvalNotificationApi}/${notificationRecordInstanceId}`\n    );\n  }\n\n  createApprovalNotification(approvalNotificationRecord: IApprovalNotification): Observable<any> {\n    return this.httpClient.post(this.approvalNotificationApi, approvalNotificationRecord);\n  }\n\n  updateApprovalNotification(approvalNotificationRecord: IApprovalNotification): Observable<any> {\n    return this.httpClient.put(\n      `${this.approvalNotificationApi}/${approvalNotificationRecord.notificationGuid}`,\n      approvalNotificationRecord\n    );\n  }\n\n  deleteApprovalNotifications(recordInstanceIds: string[]): Observable<any[]> {\n    return forkJoin(\n      map(recordInstanceIds, (id) => {\n        return this.httpClient.delete(`${this.approvalNotificationApi}/${id}`);\n      })\n    );\n  }\n}\n","import { Component, Injector, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  ActiveModalRef,\n  AdaptRxControlLabelTooltip,\n  AdaptTreeNode,\n  DismissReasons,\n  KeyValueObject,\n  RxSelectionChangeEvent,\n  RxSelectOptionsGroup,\n  TreeWrap\n} from '@bmc-ux/adapt-angular';\nimport { IApprovalNotification, IApprovalNotificationData, IApprovalTemplate } from '../approval-notifications.types';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  cloneDeep,\n  every,\n  filter,\n  find,\n  flow,\n  forEach,\n  groupBy,\n  includes,\n  isEmpty,\n  map as _map,\n  map,\n  values\n} from 'lodash';\nimport { switchMap } from 'rxjs/operators';\nimport { BehaviorSubject, forkJoin, Observable } from 'rxjs';\nimport {\n  IDefinitionPickerComponentOptions,\n  IExpressionEditorPropertyChange,\n  IExpressionFormControlOptions,\n  RxDefinitionPickerScope,\n  RxDefinitionPickerType,\n  RxExpressionEditorService\n} from '@helix/platform/shared/components';\nimport { RxApprovalNotificationExpressionConfigurator } from '../approval-notifiction-expression-configurator/approval-notification-expression-configurator.class';\nimport {\n  ExpressionOperatorGroup,\n  IDataPageResult,\n  RxDefinitionNameService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport {\n  IFieldDefinition,\n  IRecordDefinition,\n  RX_RECORD_DEFINITION,\n  RxRecordDefinitionCacheService,\n  RxRecordInstanceDataPageService\n} from '@helix/platform/record/api';\nimport { RxApprovalNotificationsService } from '../approval-notifications.service';\nimport { RX_APPROVAL_NOTIFICATIONS } from '../approval-notifications.constant';\nimport { RX_CONNECTION_MAPPING } from '../../connection-mapping/common/connection-mapping.constant';\nimport { IDialogApi, RxModalClass } from '@helix/platform/ui-kit';\n\n@Component({\n  selector: 'rx-approval-notification-editor',\n  templateUrl: './approval-notification-editor.component.html',\n  styleUrls: ['./approval-notification-editor.component.scss']\n})\nexport class ApprovalNotificationEditorComponent extends RxModalClass implements OnInit, OnDestroy {\n  approvalNotificationForm: FormGroup;\n  approvalNotificationData: IApprovalNotificationData;\n  recordDefinitions: RxSelectOptionsGroup[] = [];\n  sendToOtherOptions: KeyValueObject[] = [];\n  emailProfileOptions: KeyValueObject[] = [];\n  emailTemplateOptions: IApprovalTemplate[] = [];\n  isEditMode = false;\n  approvalNotification: IApprovalNotification;\n  expressionFormControlOptions: IExpressionFormControlOptions;\n  subjectExpressionFormControlOptions: IExpressionFormControlOptions;\n  notificationMessageExpressionOptions: IExpressionFormControlOptions;\n  groupedData: KeyValueObject = {};\n  processList: string[] = [];\n  isTreeTouched: boolean;\n  treeWrap: TreeWrap = TreeWrap.WrapAll;\n\n  private expressionDialogApi: IDialogApi;\n  private recordDefinitionSubject: BehaviorSubject<string>;\n  protected subjectExpressionConfigurator: RxApprovalNotificationExpressionConfigurator;\n  protected expressionConfigurator: RxApprovalNotificationExpressionConfigurator;\n\n  selectedFlows: AdaptTreeNode[] = [];\n  availableFlows: AdaptTreeNode[] = [];\n\n  processDefinitionPickerOptions: IDefinitionPickerComponentOptions = {\n    label: this.translateService.instant(\n      'com.bmc.arsys.rx.client.approval.notification-configuration.process-name-field.label'\n    ),\n    definitionType: RxDefinitionPickerType.Process,\n    required: true,\n    availableDefinitionPickerStates: {\n      definitionButtonsGroups: [RxDefinitionPickerScope.All],\n      search: RxDefinitionPickerScope.All\n    }\n  };\n\n  notificationTypeTooltip: AdaptRxControlLabelTooltip = {\n    popoverMode: true,\n    iconName: 'question_circle_o',\n    placement: 'right',\n    content: this.translateService.instant(\n      'com.bmc.arsys.rx.client.approval.notification-configuration.notification-type-field.tooltip'\n    )\n  };\n\n  approverSelectionTooltip: AdaptRxControlLabelTooltip = {\n    popoverMode: true,\n    iconName: 'question_circle_o',\n    placement: 'right',\n    content: this.translateService.instant(\n      'com.bmc.arsys.rx.client.approval.notification-configuration.send-to.options.approver-selection.tooltip'\n    )\n  };\n\n  sendToOptionValue = {\n    allApprovers: '0',\n    selectedApprover: '1'\n  };\n\n  sendToOption = [\n    {\n      id: this.sendToOptionValue.allApprovers,\n      name: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.notification-configuration.send-to.options.all-approvers.name'\n      )\n    },\n    {\n      id: this.sendToOptionValue.selectedApprover,\n      name: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.notification-configuration.send-to.options.other.name'\n      )\n    }\n  ];\n\n  globalNotificationOptionValue = {\n    global: 'global',\n    flows: 'flows'\n  };\n\n  globalNotificationOptions = [\n    {\n      label: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.notification-configuration.notification-type-field.types.flow.label'\n      ),\n      value: this.globalNotificationOptionValue.flows\n    },\n    {\n      label: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.notification-configuration.notification-type-field.types.global.label'\n      ),\n      value: this.globalNotificationOptionValue.global\n    }\n  ];\n\n  notificationMethodOptions = [\n    {\n      id: '2',\n      name: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.notification-configuration.notification-method.types.email.name'\n      )\n    },\n    {\n      id: '5',\n      name: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.notification-configuration.notification-method.types.process.name'\n      )\n    }\n  ];\n\n  notifyOnOptions = [\n    {\n      id: 0,\n      name: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.notification-configuration.notify-on.options.new-signature.name'\n      )\n    },\n    {\n      id: 1,\n      name: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.notification-configuration.notify-on.options.approve.name'\n      )\n    },\n    {\n      id: 2,\n      name: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.notification-configuration.notify-on.options.reject.name'\n      )\n    },\n    {\n      id: 9,\n      name: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.notification-configuration.notify-on.options.reassign.name'\n      )\n    },\n    {\n      id: 11,\n      name: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.notification-configuration.notify-on.options.cancel.name'\n      )\n    },\n    {\n      id: 12,\n      name: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.notification-configuration.notify-on.options.more-info-provided.name'\n      )\n    },\n    {\n      id: 16,\n      name: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.notification-configuration.notify-on.options.hold.name'\n      )\n    },\n    {\n      id: 17,\n      name: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.notification-configuration.notify-on.options.more-info.name'\n      )\n    }\n  ];\n\n  handleTemplateDependentFieldSelection(event: boolean) {\n    if (event) {\n      this.approvalNotificationForm.get('message').disable();\n      this.approvalNotificationForm.get('outgoingEmailProfile').enable();\n    } else {\n      this.approvalNotificationForm.get('message').enable();\n      this.approvalNotificationForm.get('outgoingEmailProfile').disable();\n    }\n  }\n\n  optionFormatter(option: KeyValueObject): string {\n    return option.name;\n  }\n\n  constructor(\n    protected injector: Injector,\n    private formBuilder: FormBuilder,\n    private activeModalRef: ActiveModalRef,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxExpressionEditorService: RxExpressionEditorService,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService,\n    private rxApprovalNotificationsService: RxApprovalNotificationsService,\n    private translateService: TranslateService,\n    private rxNotificationService: RxNotificationService,\n    private rxDefinitionNameService: RxDefinitionNameService\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.approvalNotificationForm = this.createApprovalNotificationForm();\n    this.approvalNotificationData = this.activeModalRef.getData();\n    this.recordDefinitions = this.approvalNotificationData.recordDefinitions;\n    this.emailTemplateOptions = this.approvalNotificationData.templateList;\n    this.approvalNotification = this.approvalNotificationData.approvalNotification;\n    this.isEditMode = Boolean(this.approvalNotification.notificationName);\n    this.expressionConfigurator = new RxApprovalNotificationExpressionConfigurator(this.injector);\n    this.recordDefinitionSubject = new BehaviorSubject<string>('');\n    this.subjectExpressionConfigurator = new RxApprovalNotificationExpressionConfigurator(this.injector);\n\n    this.subjectExpressionConfigurator.configureForProperty({\n      propertyPath: 'subject',\n      dataDictionary$: this.recordDefinitionSubject\n        .asObservable()\n        .pipe(\n          switchMap((recordDefinitionName) =>\n            this.subjectExpressionConfigurator.approvalNotificationExpressionDataDictionary(recordDefinitionName, false)\n          )\n        ),\n      operators: null\n    });\n\n    this.expressionConfigurator.configureForProperty({\n      propertyPath: 'approvalNotification',\n      dataDictionary$: this.recordDefinitionSubject\n        .asObservable()\n        .pipe(\n          switchMap((recordDefinitionName) =>\n            this.expressionConfigurator.approvalNotificationExpressionDataDictionary(recordDefinitionName, true)\n          )\n        ),\n      operators: this.expressionConfigurator.getOperatorRowsByGroup(ExpressionOperatorGroup.All)\n    });\n\n    this.expressionFormControlOptions = {\n      label: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.notification-configuration.notification-expression-field.label'\n      ),\n      dataDictionary$: this.expressionConfigurator.getDataDictionary('approvalNotification'),\n      operators: this.expressionConfigurator.getOperators('approvalNotification'),\n      isRequired: false,\n      tooltip: {\n        popoverMode: true,\n        iconName: 'question_circle_o',\n        placement: 'right',\n        content: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.notification-configuration.notification-expression-field.tooltip'\n        )\n      }\n    };\n\n    this.subjectExpressionFormControlOptions = {\n      label: this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.notification-configuration.subject-field.label'\n      ),\n      dataDictionary$: this.subjectExpressionConfigurator.getDataDictionary('subject'),\n      operators: this.expressionConfigurator.getOperators('subject'),\n      isRequired: this.isRequiredForEmail()\n    };\n\n    this.notificationMessageExpressionOptions = {\n      label: this.translateService.instant('com.bmc.arsys.rx.client.common.message.label'),\n      dataDictionary$: this.subjectExpressionConfigurator.getDataDictionary('subject'),\n      operators: this.expressionConfigurator.getOperators('subject'),\n      isRequired: this.isRequiredForEmail()\n    };\n\n    this.approvalNotificationForm\n      .get('primaryRecordName')\n      .valueChanges.subscribe((value) => this.onRecordDefinitionChange(value));\n\n    this.approvalNotificationForm\n      .get('notificationMethod')\n      .valueChanges.subscribe((value) => this.onNotificationMethodChange(value));\n\n    if (this.isEditMode) {\n      this.initializeApprovalNotificationForm();\n    }\n  }\n\n  isDirty(): boolean {\n    return Boolean(this.approvalNotificationForm?.dirty || this.expressionDialogApi?.isDirty());\n  }\n\n  ngOnDestroy() {\n    this.recordDefinitionSubject.complete();\n  }\n\n  createApprovalNotificationForm(): FormGroup {\n    return this.formBuilder.group({\n      primaryRecordName: [[], Validators.required],\n      notificationName: ['', Validators.required],\n      notifyOn: [[], Validators.required],\n      additionalQualification: '',\n      notificationType: this.globalNotificationOptionValue.flows,\n      useTemplate: false,\n      outgoingEmailProfile: [{ value: [], disabled: true }, Validators.required],\n      approvalTemplate: [[], Validators.nullValidator],\n      sendTo: ['0'],\n      subject: '',\n      notificationMethod: [[this.notificationMethodOptions[0]], Validators.required],\n      status: true,\n      message: '',\n      approver: [{ value: [], disabled: true }, Validators.required],\n      rxProcessName: '',\n      check: false\n    });\n  }\n\n  reset(): void {\n    this.approvalNotificationForm.get('additionalQualification').setValue('');\n    this.approvalNotificationForm.get('rxProcessName').setValue('');\n    this.approvalNotificationForm.get('subject').setValue('');\n    this.approvalNotificationForm.get('message').setValue('');\n    this.approvalNotificationForm.get('sendTo').setValue('0');\n    this.approvalNotificationForm.get('notifyOn').setValue([]);\n    this.approvalNotificationForm.get('notificationType').setValue(this.globalNotificationOptionValue.flows);\n    this.approvalNotificationForm.get('useTemplate').setValue(false);\n    this.approvalNotificationForm.get('notificationMethod').setValue([this.notificationMethodOptions[0]]);\n    this.approvalNotificationForm.get('outgoingEmailProfile').setValue([]);\n    this.approvalNotificationForm.get('approvalTemplate').setValue([]);\n    this.approvalNotificationForm.get('approver').setValue([]);\n    this.approvalNotificationForm.get('status').setValue(true);\n  }\n\n  onNotificationMethodChange(value: KeyValueObject): void {\n    // check if notification method is process or email i.e '5' or '2'\n    if (value[0].id === this.notificationMethodOptions[1].id) {\n      this.approvalNotificationForm.get('subject').setValue('');\n      this.approvalNotificationForm.get('message').setValue('');\n      this.approvalNotificationForm.controls['subject'].disable();\n      this.approvalNotificationForm.controls['message'].disable();\n      this.approvalNotificationForm.controls['rxProcessName'].enable();\n    } else if (value[0].id === this.notificationMethodOptions[0].id) {\n      this.approvalNotificationForm.get('rxProcessName').setValue('');\n      this.approvalNotificationForm.controls['rxProcessName'].disable();\n      this.approvalNotificationForm.controls['subject'].enable();\n      this.approvalNotificationForm.controls['message'].enable();\n    }\n  }\n\n  handleSendToOptionSelection() {\n    if (this.approvalNotificationForm.get('sendTo').value === this.sendToOptionValue.selectedApprover) {\n      this.approvalNotificationForm.get('approver').enable();\n    } else {\n      this.approvalNotificationForm.get('approver').disable();\n    }\n  }\n\n  initializeApprovalNotification(\n    recordDefinitionName: string\n  ): Observable<[IRecordDefinition, IDataPageResult, IDataPageResult]> {\n    return forkJoin([\n      this.rxRecordDefinitionCacheService.getRecordDefinition(recordDefinitionName + ' Detail Signature'),\n      this.rxRecordInstanceDataPageService.post({\n        params: {\n          recorddefinition: RX_APPROVAL_NOTIFICATIONS.arSystemEmailMailboxConfiguration.name,\n          propertySelection: [RX_RECORD_DEFINITION.coreFieldIds.id],\n          queryExpression: `'${RX_RECORD_DEFINITION.coreFieldIds.status}' = \"0\" AND '${RX_APPROVAL_NOTIFICATIONS.arSystemEmailMailboxConfiguration.fields.mailboxFunction}' = \"1\"`\n        }\n      }),\n      this.rxRecordInstanceDataPageService.post({\n        params: {\n          recorddefinition: RX_APPROVAL_NOTIFICATIONS.approvalFlowConfiguration.name,\n          propertySelection: values(RX_APPROVAL_NOTIFICATIONS.approvalFlowConfiguration.fields).join(),\n          queryExpression: `'${RX_APPROVAL_NOTIFICATIONS.approvalFlowConfiguration.fields.recordDefinition}' == \"${recordDefinitionName}\"`\n        }\n      })\n    ]);\n  }\n\n  initializeApprovalNotificationForm(): void {\n    this.approvalNotificationForm.get('notificationName').setValue(this.approvalNotification.notificationName);\n    this.approvalNotificationForm.get('status').setValue(this.approvalNotification.status === '0');\n    this.approvalNotificationForm.get('rxProcessName').setValue(this.approvalNotification.rxProcessName);\n\n    this.approvalNotificationForm\n      .get('subject')\n      .setValue(this.convertExpressionFromServerFormat(this.approvalNotification.subject));\n\n    this.approvalNotificationForm\n      .get('message')\n      .setValue(this.convertExpressionFromServerFormat(this.approvalNotification.message));\n\n    this.approvalNotificationForm.get('sendTo').setValue(this.approvalNotification.sendTo);\n    this.handleSendToOptionSelection();\n\n    this.approvalNotificationForm\n      .get('additionalQualification')\n      .setValue(this.approvalNotification.additionalQualification);\n\n    this.approvalNotificationForm\n      .get('notifyOn')\n      .setValue(filter(this.notifyOnOptions, { id: this.approvalNotification.notifyOn }));\n\n    this.approvalNotificationForm\n      .get('notificationType')\n      .setValue(\n        this.approvalNotification.notificationType === 1\n          ? this.globalNotificationOptionValue.global\n          : this.globalNotificationOptionValue.flows\n      );\n\n    this.approvalNotificationForm.get('useTemplate').setValue(this.approvalNotification.useTemplate === '1');\n    this.handleTemplateDependentFieldSelection(true);\n\n    this.approvalNotificationForm\n      .get('notificationMethod')\n      .setValue(filter(this.notificationMethodOptions, { id: this.approvalNotification.notificationMethod }));\n\n    this.approvalNotificationForm.get('outgoingEmailProfile').setValue([\n      {\n        name: this.approvalNotification.emailProfile,\n        id: this.approvalNotification.emailProfileGuid\n      }\n    ]);\n\n    this.approvalNotificationForm.get('approvalTemplate').setValue([\n      {\n        name: this.approvalNotification.approvalTemplateName,\n        id: this.approvalNotification.approvalTemplateGuid\n      }\n    ]);\n\n    this.approvalNotificationForm.get('primaryRecordName').setValue(\n      this.approvalNotification.primaryRecordName\n        ? [\n            {\n              value: this.approvalNotification.primaryRecordName,\n              displayValue: this.rxDefinitionNameService.getDisplayName(this.approvalNotification.primaryRecordName)\n            }\n          ]\n        : []\n    );\n  }\n\n  onRecordDefinitionChange(recordDefinitionOption): void {\n    const oldRecordDefinitionName = this.approvalNotificationForm.value.primaryRecordName.length\n      ? this.approvalNotificationForm.value.primaryRecordName[0]\n      : '';\n\n    const newRecordDefinitionName = recordDefinitionOption[0].value;\n    const threeWayRecordDefinitionName = newRecordDefinitionName + ' Detail Signature';\n\n    if (newRecordDefinitionName !== oldRecordDefinitionName) {\n      if (!this.isEditMode) {\n        this.reset();\n      }\n\n      this.recordDefinitionSubject.next(threeWayRecordDefinitionName);\n\n      if (newRecordDefinitionName) {\n        this.initializeApprovalNotification(newRecordDefinitionName).subscribe(\n          ([recordDefinition, outgoingMailboxes, recordInstances]) => {\n            this.prepareApprovalFlowTree(recordInstances);\n            this.initializeSendToFromControlOptions(recordDefinition);\n            this.initializeEmailProfiles(outgoingMailboxes, newRecordDefinitionName);\n          }\n        );\n      }\n    }\n  }\n\n  onSelectionChange() {\n    this.isTreeTouched = true;\n    this.approvalNotificationForm.markAsDirty();\n  }\n\n  private isGlobalNotification(): boolean {\n    return (\n      this.isEditMode &&\n      this.approvalNotificationForm.get('notificationType').value === this.globalNotificationOptionValue.global\n    );\n  }\n\n  prepareApprovalFlowTree(recordInstances: IDataPageResult): void {\n    this.selectedFlows = [];\n\n    this.availableFlows = flow(\n      (instanceData) => groupBy(instanceData, RX_APPROVAL_NOTIFICATIONS.approvalFlowConfiguration.fields.flowGroup),\n      (flowsByFlowGroup) =>\n        map(flowsByFlowGroup, (flows, flowGroupName) => ({\n          label: flowGroupName,\n          disallowMultipleNodeSelection: this.isGlobalNotification(),\n          expanded: true,\n          children: _map(flows, (approvalFlow) => {\n            const leafNode = {\n              label: approvalFlow[RX_APPROVAL_NOTIFICATIONS.approvalFlowConfiguration.fields.flowName],\n              key: approvalFlow[\n                RX_APPROVAL_NOTIFICATIONS.approvalFlowConfiguration.fields.arApprovalProcessDefinitionGuid\n              ],\n              leaf: true,\n              data: flowGroupName,\n              disallowMultipleNodeSelection: this.isGlobalNotification()\n            };\n\n            if (\n              includes(\n                this.approvalNotification.processList,\n                approvalFlow[RX_APPROVAL_NOTIFICATIONS.approvalFlowConfiguration.fields.arApprovalProcessDefinitionGuid]\n              )\n            ) {\n              this.selectedFlows.push(leafNode);\n            }\n\n            return leafNode;\n          })\n        }))\n    )(recordInstances.data);\n\n    this.updateParentNodesForSelectedFlows();\n  }\n\n  private updateParentNodesForSelectedFlows() {\n    forEach(this.selectedFlows, (selectedFlow) => {\n      const availableParentNode = find(\n        this.availableFlows,\n        (availableFlow) => availableFlow.label === selectedFlow.data\n      );\n\n      if (every(availableParentNode.children, (node) => includes(this.selectedFlows, node))) {\n        this.selectedFlows.push(availableParentNode);\n      } else {\n        availableParentNode.partialSelected = true;\n      }\n    });\n  }\n\n  initializeEmailProfiles(outgoingMailboxes: IDataPageResult, recordDefinitionName: string): void {\n    let additionalExpression = `'${RX_CONNECTION_MAPPING.aliasMapping.fields.aliasType}' = \"email\"`;\n    let expression = '';\n\n    if (recordDefinitionName) {\n      additionalExpression += ` AND ('${\n        RX_CONNECTION_MAPPING.aliasMapping.fields.applicationId\n      }' = \"${this.rxDefinitionNameService.getBundleId(recordDefinitionName)}\" OR '${\n        RX_CONNECTION_MAPPING.aliasMapping.fields.applicationId\n      }' = \"None\")`;\n    }\n\n    forEach(outgoingMailboxes.data, (outgoingMailbox) => {\n      if (!isEmpty(expression)) {\n        expression += ' OR ';\n      }\n\n      expression += `'${RX_CONNECTION_MAPPING.aliasMapping.fields.aliasValue}' = \"${\n        outgoingMailbox[RX_RECORD_DEFINITION.coreFieldIds.id]\n      }\"`;\n    });\n\n    expression = expression ? ' AND ((' + expression + '))' : '';\n\n    this.rxRecordInstanceDataPageService\n      .post({\n        params: {\n          recorddefinition: 'Alias Mapping',\n          propertySelection: [\n            RX_CONNECTION_MAPPING.aliasMapping.fields.aliasName,\n            RX_RECORD_DEFINITION.coreFieldIds.id,\n            RX_CONNECTION_MAPPING.aliasMapping.fields.applicationId\n          ],\n          queryExpression: additionalExpression + expression\n        }\n      })\n      .subscribe((result) => {\n        this.emailProfileOptions = result.data.map((emailData: KeyValueObject) => {\n          return {\n            name: emailData[RX_CONNECTION_MAPPING.aliasMapping.fields.aliasName],\n            id: emailData[RX_RECORD_DEFINITION.coreFieldIds.id]\n          };\n        });\n      });\n  }\n\n  initializeSendToFromControlOptions(recordDefinition: IRecordDefinition): void {\n    if (recordDefinition && recordDefinition.fieldDefinitions) {\n      this.sendToOtherOptions = this.filterFieldDefinitions(recordDefinition.fieldDefinitions);\n\n      this.approvalNotificationForm\n        .get('approver')\n        .setValue(filter(this.sendToOtherOptions, { id: this.approvalNotification.sendToOthers }));\n    }\n  }\n\n  private filterFieldDefinitions(fieldDefinitions: IFieldDefinition[]): KeyValueObject[] {\n    return fieldDefinitions\n      .filter(\n        (fieldDefinition: IFieldDefinition) =>\n          fieldDefinition.resourceType !== RX_RECORD_DEFINITION.dataTypes.attachment.resourceType &&\n          fieldDefinition.fieldMapping?.source === 'PRIMARY_RECORD_DEFINITION' &&\n          !includes(\n            [\n              RX_RECORD_DEFINITION.coreFieldIds.displayId,\n              RX_RECORD_DEFINITION.coreFieldIds.id,\n              RX_APPROVAL_NOTIFICATIONS.approvalNotificationForm.fields.applicationBundleId\n            ],\n            fieldDefinition.id\n          )\n      )\n      .map((fieldDefinition: IFieldDefinition) => ({\n        name: fieldDefinition.name.replace(/ Primary$/, ''),\n        id: `'\\$\\{${fieldDefinition.name}\\}'`\n      }));\n  }\n\n  buildExpression(propertyName): void {\n    this.selectApprovalNotificationExpression(propertyName);\n  }\n\n  private selectApprovalNotificationExpression(propertyName: string): void {\n    let fieldLabel = '';\n\n    if (propertyName === 'additionalQualification') {\n      fieldLabel = this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.notification-configuration.notification-expression-field.label'\n      );\n    } else if (propertyName === 'subject') {\n      fieldLabel = this.translateService.instant(\n        'com.bmc.arsys.rx.client.approval.notification-configuration.subject-field.label'\n      );\n    } else if (propertyName === 'message') {\n      fieldLabel = this.translateService.instant('com.bmc.arsys.rx.client.common.message.label');\n    }\n\n    const expressionEditorConfig = {\n      property: {\n        path: propertyName === 'additionalQualification' ? 'approvalNotification' : 'subject',\n        value: this.approvalNotificationForm.get(propertyName).value,\n        label: fieldLabel\n      },\n      expressionConfigurator:\n        propertyName === 'additionalQualification' ? this.expressionConfigurator : this.subjectExpressionConfigurator,\n      legend: [\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'),\n          icon: 'd-icon-dollar'\n        },\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.field.label'),\n          icon: 'd-icon-field_text'\n        }\n      ]\n    };\n\n    this.rxExpressionEditorService\n      .openEditor(expressionEditorConfig, (dialogApi: IDialogApi) => (this.expressionDialogApi = dialogApi))\n      .subscribe((expression: IExpressionEditorPropertyChange) => {\n        this.expressionDialogApi = null;\n        this.approvalNotificationForm.get(propertyName).setValue(expression.value);\n        this.approvalNotificationForm.get(propertyName).markAsDirty();\n      });\n  }\n\n  private transformFormControlData(): IApprovalNotification {\n    const approvalNotificationRecord = cloneDeep(this.approvalNotificationForm.value);\n\n    approvalNotificationRecord.primaryRecordName = approvalNotificationRecord.primaryRecordName[0].value;\n\n    approvalNotificationRecord.notifyOn = approvalNotificationRecord.notifyOn.length\n      ? approvalNotificationRecord.notifyOn[0].id\n      : '';\n\n    if (approvalNotificationRecord.notificationType === this.globalNotificationOptionValue.flows) {\n      approvalNotificationRecord.notificationType = 0;\n\n      approvalNotificationRecord.processList = this.selectedFlows\n        .filter((approvalFlow: AdaptTreeNode) => approvalFlow.leaf)\n        .map((approvalFlow: AdaptTreeNode) => approvalFlow.key);\n    } else {\n      approvalNotificationRecord.notificationType = 1;\n    }\n\n    if (approvalNotificationRecord?.outgoingEmailProfile?.length) {\n      approvalNotificationRecord.emailProfile = approvalNotificationRecord.outgoingEmailProfile[0].name;\n      approvalNotificationRecord.emailProfileGuid = approvalNotificationRecord.outgoingEmailProfile[0].id;\n    }\n\n    delete approvalNotificationRecord.outgoingEmailProfile;\n\n    if (approvalNotificationRecord.approvalTemplate.length) {\n      approvalNotificationRecord.approvalTemplateName = approvalNotificationRecord.approvalTemplate.name;\n      approvalNotificationRecord.approvalTemplateGuid = approvalNotificationRecord.approvalTemplate.id;\n    }\n\n    delete approvalNotificationRecord.approvalTemplate;\n\n    approvalNotificationRecord.sendToOthers = approvalNotificationRecord.approver?.length\n      ? approvalNotificationRecord.approver[0].id\n      : '';\n\n    approvalNotificationRecord.notificationMethod = approvalNotificationRecord.notificationMethod.length\n      ? approvalNotificationRecord.notificationMethod[0].id\n      : '';\n\n    if (approvalNotificationRecord.notificationMethod === this.notificationMethodOptions[1].id) {\n      approvalNotificationRecord.subject = approvalNotificationRecord.notificationName;\n      approvalNotificationRecord.message = approvalNotificationRecord.notificationName;\n    } else if (approvalNotificationRecord.useTemplate) {\n      approvalNotificationRecord.message = approvalNotificationRecord.notificationName;\n    }\n\n    approvalNotificationRecord.useTemplate = approvalNotificationRecord.useTemplate ? '1' : '0';\n    approvalNotificationRecord.status = approvalNotificationRecord.status ? '0' : '1';\n\n    approvalNotificationRecord.subject = this.convertExpressionToServerFormat(approvalNotificationRecord.subject);\n    approvalNotificationRecord.message = this.convertExpressionToServerFormat(approvalNotificationRecord.message);\n\n    delete approvalNotificationRecord.approver;\n    delete approvalNotificationRecord.check;\n\n    if (this.isEditMode) {\n      approvalNotificationRecord.notificationGuid = this.approvalNotification.notificationGuid;\n    }\n\n    return approvalNotificationRecord;\n  }\n\n  save(): void {\n    this.approvalNotificationForm.markAsPristine();\n    const approvalNotificationRecord = this.transformFormControlData();\n\n    this.rxApprovalNotificationsService.createApprovalNotification(approvalNotificationRecord).subscribe(() => {\n      this.rxNotificationService.addSuccessMessage(\n        this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.notification-configuration.notification-saved.message'\n        )\n      );\n\n      this.activeModalRef.close(approvalNotificationRecord);\n    });\n  }\n\n  update(): void {\n    this.approvalNotificationForm.markAsPristine();\n    const approvalNotificationRecord = this.transformFormControlData();\n\n    this.rxApprovalNotificationsService.updateApprovalNotification(approvalNotificationRecord).subscribe(() => {\n      this.rxNotificationService.addSuccessMessage(\n        this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.notification-configuration.notification-updated.message'\n        )\n      );\n\n      this.activeModalRef.close(approvalNotificationRecord);\n    });\n  }\n\n  closeModal(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  shouldUseTemplate(): boolean {\n    return this.approvalNotificationForm.get('notifyOn').value[0]?.id === 0;\n  }\n\n  showProcessDefinitionPicker(): boolean {\n    return this.approvalNotificationForm.get('notificationMethod').value[0]?.id === '5';\n  }\n\n  private isRequiredForEmail(): boolean {\n    return this.approvalNotificationForm.get('notificationMethod').value[0]?.id === '2';\n  }\n\n  onNotifyChange(event?: RxSelectionChangeEvent): void {\n    if (event.options[0].id !== 0) {\n      this.approvalNotificationForm.get('useTemplate').setValue(false);\n    }\n  }\n\n  isNotificationOptionInvalid(): boolean {\n    return this.approvalNotificationForm.get('notificationType').value === this.globalNotificationOptionValue.flows\n      ? !this.selectedFlows.length\n      : false;\n  }\n\n  definitionOptionFormatter(option: KeyValueObject): string {\n    return option.displayValue;\n  }\n\n  // Convert expression received from server to format supported by expression editor,\n  // e.g. $Assignee Primary$ -> '${Assignee Primary}'\n  private convertExpressionFromServerFormat(expression: string): string {\n    const fieldTokenServerFormatRegExp = new RegExp(\n      '(\\\\$' + RX_RECORD_DEFINITION.validDefinitionNameRegExpString + '\\\\$)',\n      'g'\n    );\n\n    return (\n      expression &&\n      expression.replace(fieldTokenServerFormatRegExp, function (match) {\n        const expressionEntry = match.replace(/\\$/g, '');\n\n        return expressionEntry ? \"'${\" + expressionEntry + \"}'\" : match;\n      })\n    );\n  }\n\n  // Convert expression to format expected by the server,\n  // e.g. '${Assignee Primary}' -> $Assignee Primary$\n  private convertExpressionToServerFormat(expression: string): string {\n    const fieldTokenExpressionEditorFormatRegExp = new RegExp(\n      \"('\\\\${\" + RX_RECORD_DEFINITION.validDefinitionNameRegExpString + \"}')\",\n      'g'\n    );\n\n    return (\n      expression &&\n      expression.replace(fieldTokenExpressionEditorFormatRegExp, function (match) {\n        return '$' + match.replace(/['${}]/g, '') + '$';\n      })\n    );\n  }\n}\n","<div class=\"modal-body\">\n  <form [formGroup]=\"approvalNotificationForm\">\n    <div class=\"row\">\n      <div class=\"col-12 col-md-6\">\n        <adapt-rx-select\n          class=\"d-block form-group\"\n          formControlName=\"primaryRecordName\"\n          [options]=\"recordDefinitions\"\n          rx-id=\"record-definition-name\"\n          [disabled]=\"isEditMode\"\n          label=\"{{ 'com.bmc.arsys.rx.client.approval.record-definition-field.label' | translate }}\"\n          [optionFormatter]=\"definitionOptionFormatter\"\n        >\n        </adapt-rx-select>\n      </div>\n\n      <div class=\"col-12 col-md-6\">\n        <adapt-rx-textfield\n          class=\"d-block form-group\"\n          rx-id=\"notification-name\"\n          label=\"{{\n            'com.bmc.arsys.rx.client.approval.notification-configuration.notification-name-field.label' | translate\n          }}\"\n          formControlName=\"notificationName\"\n        ></adapt-rx-textfield>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-12 col-md-6 d-flex flex-column\">\n        <adapt-rx-select\n          class=\"d-block form-group\"\n          formControlName=\"notifyOn\"\n          [options]=\"notifyOnOptions\"\n          [optionFormatter]=\"optionFormatter\"\n          rx-id=\"notify-on\"\n          (onSelectionChange)=\"onNotifyChange($event)\"\n          label=\"{{ 'com.bmc.arsys.rx.client.approval.notification-configuration.notify-on-field.label' | translate }}\"\n        >\n        </adapt-rx-select>\n\n        <rx-expression-form-control\n          class=\"d-block form-group\"\n          [options]=\"expressionFormControlOptions\"\n          formControlName=\"additionalQualification\"\n          rx-id=\"additional-qualification\"\n          (events)=\"buildExpression('additionalQualification')\"\n          required=\"false\"\n        ></rx-expression-form-control>\n\n        <adapt-rx-radiobutton-group\n          class=\"d-block form-group\"\n          formControlName=\"notificationType\"\n          label=\"{{\n            'com.bmc.arsys.rx.client.approval.notification-configuration.notification-type-field.label' | translate\n          }}\"\n          [tooltip]=\"notificationTypeTooltip\"\n          rx-id=\"notification-type\"\n        >\n          <adapt-rx-radiobutton\n            *ngFor=\"let option of globalNotificationOptions; let index = index\"\n            [label]=\"option.label\"\n            [value]=\"option.value\"\n            [disabled]=\"isEditMode\"\n            class=\"radio-inline m-0\"\n            [ngClass]=\"{ 'mr-3': index === 0 }\"\n          ></adapt-rx-radiobutton>\n        </adapt-rx-radiobutton-group>\n\n        <div\n          class=\"d-flex flex-column h-100\"\n          *ngIf=\"approvalNotificationForm.get('notificationType').value === globalNotificationOptionValue.flows\"\n        >\n          <adapt-rx-control-label\n            label=\"{{\n              'com.bmc.arsys.rx.client.approval.notification-configuration.notification-type-field.types.flow.sub-label'\n                | translate\n            }}\"\n            [showRequiredLabel]=\"true\"\n          >\n          </adapt-rx-control-label>\n\n          <div class=\"card flex-fill\" [ngClass]=\"{ 'border-danger': isTreeTouched && isNotificationOptionInvalid() }\">\n            <div class=\"card-block\">\n              <adapt-empty-state\n                *ngIf=\"!availableFlows.length\"\n                [type]=\"'grid'\"\n                label=\"{{\n                  'com.bmc.arsys.rx.client.approval.notification-configuration.no-flows-available.message' | translate\n                }}\"\n              >\n              </adapt-empty-state>\n\n              <adapt-tree\n                [value]=\"availableFlows\"\n                selectionMode=\"checkbox\"\n                [(selection)]=\"selectedFlows\"\n                *ngIf=\"availableFlows.length\"\n                (selectionChange)=\"onSelectionChange()\"\n                [wrap]=\"treeWrap\"\n              >\n              </adapt-tree>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-md-6\">\n        <adapt-rx-radiobutton-group\n          class=\"d-block form-group\"\n          formControlName=\"sendTo\"\n          label=\"{{ 'com.bmc.arsys.rx.client.approval.notification-configuration.send-to-field.label' | translate }}\"\n        >\n          <adapt-rx-radiobutton\n            *ngFor=\"let option of sendToOption; let index = index\"\n            [value]=\"option.id\"\n            [label]=\"option.name\"\n            class=\"radio-inline m-0\"\n            [ngClass]=\"{ 'mr-3': index === 0 }\"\n            rx-id=\"send-to-option\"\n            (checkedChange)=\"handleSendToOptionSelection()\"\n          ></adapt-rx-radiobutton>\n        </adapt-rx-radiobutton-group>\n\n        <adapt-rx-select\n          class=\"d-block form-group\"\n          label=\"{{\n            'com.bmc.arsys.rx.client.approval.notification-configuration.send-to.options.approver-selection' | translate\n          }}\"\n          *ngIf=\"approvalNotificationForm.get('sendTo').value === '1'\"\n          formControlName=\"approver\"\n          [options]=\"sendToOtherOptions\"\n          [optionFormatter]=\"optionFormatter\"\n          [tooltip]=\"approverSelectionTooltip\"\n          rx-id=\"approver\"\n        >\n        </adapt-rx-select>\n\n        <adapt-rx-select\n          class=\"d-block form-group\"\n          formControlName=\"notificationMethod\"\n          [options]=\"notificationMethodOptions\"\n          [optionFormatter]=\"optionFormatter\"\n          rx-id=\"notification-method\"\n          label=\"{{\n            'com.bmc.arsys.rx.client.approval.notification-configuration.notification-method-field.label' | translate\n          }}\"\n        >\n        </adapt-rx-select>\n\n        <adapt-rx-checkbox\n          *ngIf=\"shouldUseTemplate()\"\n          class=\"d-block form-group\"\n          formControlName=\"useTemplate\"\n          rx-id=\"use-template\"\n          label=\"{{\n            'com.bmc.arsys.rx.client.approval.notification-configuration.email-based-approval-field.label' | translate\n          }}\"\n          (ngModelChange)=\"handleTemplateDependentFieldSelection($event)\"\n        ></adapt-rx-checkbox>\n\n        <div *ngIf=\"approvalNotificationForm.get('useTemplate').value\">\n          <adapt-rx-select\n            class=\"d-block form-group\"\n            formControlName=\"outgoingEmailProfile\"\n            [options]=\"emailProfileOptions\"\n            [optionFormatter]=\"optionFormatter\"\n            rx-id=\"outgoing-email-profile\"\n            label=\"{{\n              'com.bmc.arsys.rx.client.approval.notification-configuration.email-outgoing-profile-field.label'\n                | translate\n            }}\"\n          >\n          </adapt-rx-select>\n\n          <adapt-rx-select\n            class=\"d-block form-group\"\n            formControlName=\"approvalTemplate\"\n            [options]=\"emailTemplateOptions\"\n            [optionFormatter]=\"optionFormatter\"\n            rx-id=\"approval-template\"\n            label=\"{{ 'com.bmc.arsys.rx.client.approval.notification-configuration.template-field.label' | translate }}\"\n          >\n          </adapt-rx-select>\n        </div>\n\n        <rx-expression-form-control\n          class=\"d-block form-group\"\n          *ngIf=\"approvalNotificationForm.get('notificationMethod').value[0]['id'] === '2'\"\n          [options]=\"subjectExpressionFormControlOptions\"\n          formControlName=\"subject\"\n          rx-id=\"subject\"\n          (events)=\"buildExpression('subject')\"\n          required=\"true\"\n        ></rx-expression-form-control>\n\n        <rx-expression-form-control\n          class=\"d-block form-group\"\n          *ngIf=\"\n            approvalNotificationForm.get('notificationMethod').value[0]['id'] === '2' &&\n            !approvalNotificationForm.get('useTemplate').value\n          \"\n          [options]=\"notificationMessageExpressionOptions\"\n          formControlName=\"message\"\n          rx-id=\"message\"\n          (events)=\"buildExpression('message')\"\n          required=\"true\"\n        ></rx-expression-form-control>\n\n        <rx-definition-picker\n          class=\"d-block form-group\"\n          *ngIf=\"showProcessDefinitionPicker()\"\n          [options]=\"processDefinitionPickerOptions\"\n          formControlName=\"rxProcessName\"\n          rx-id=\"definition-field\"\n          required=\"true\"\n        >\n        </rx-definition-picker>\n\n        <adapt-rx-switch\n          formControlName=\"status\"\n          rx-id=\"status\"\n          label=\"{{ 'com.bmc.arsys.rx.client.approval.notification-configuration.enabled-field.label' | translate }}\"\n          [isLabelBefore]=\"false\"\n        ></adapt-rx-switch>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"modal-footer\">\n  <button\n    *ngIf=\"!isEditMode\"\n    adapt-button\n    btn-type=\"primary\"\n    type=\"button\"\n    rx-id=\"save-button\"\n    class=\"mr-2\"\n    (click)=\"save()\"\n    [disabled]=\"approvalNotificationForm.pristine || approvalNotificationForm.invalid || isNotificationOptionInvalid()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button\n    *ngIf=\"isEditMode\"\n    adapt-button\n    btn-type=\"primary\"\n    type=\"button\"\n    class=\"mr-2\"\n    rx-id=\"save-button\"\n    (click)=\"update()\"\n    [disabled]=\"approvalNotificationForm.pristine || approvalNotificationForm.invalid || isNotificationOptionInvalid()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.approval.update.button.label' | translate }}\n  </button>\n\n  <button adapt-button btn-type=\"secondary\" class=\"mr-2\" type=\"button\" rx-id=\"cancel-button\" (click)=\"closeModal()\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n","import { Injectable, Injector } from '@angular/core';\nimport { DataPage } from '@helix/platform/shared/api';\n\nconst approvalNotificationDataPageQuery =\n  'com.bmc.arsys.rx.approval.application.datapage.ApprovalNotificationDataPageQuery';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxApprovalNotificationsDataPageService extends DataPage {\n  constructor(injector: Injector) {\n    super(injector, approvalNotificationDataPageQuery);\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport {\n  IRecordGridColumn,\n  IRecordGridConfig,\n  IRecordGridDataPageParams,\n  RecordGridComponent,\n  RowSelectionMode\n} from '@helix/platform/view/components';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport { RX_APPROVAL_NOTIFICATIONS } from './approval-notifications.constant';\nimport { IRecordDefinition, RX_RECORD_DEFINITION, RxRecordInstanceDataPageService } from '@helix/platform/record/api';\nimport {\n  IDataPageResult,\n  RX_APPLICATION,\n  RxDefinitionNameService,\n  RxGlobalCacheService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport { RxApprovalNotificationsDataPageService } from './approval-notifications-data-page.service';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { filter, find, flow, forEach, groupBy, map as _map, map, noop, values } from 'lodash';\nimport { RxApprovalNotificationsService } from './approval-notifications.service';\nimport { AdaptModalService, RxSelectOptionsGroup } from '@bmc-ux/adapt-angular';\nimport { ApprovalNotificationEditorComponent } from './approval-notification-editor/approval-notification-editor.component';\nimport { IApprovalNotification, IApprovalNotificationData, IApprovalTemplate } from './approval-notifications.types';\nimport { RX_APPROVAL_CONFIGURATION } from '../approval-configuration/approval-configuration.constant';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\n\n@Component({\n  selector: 'rx-admin-approval-notifications',\n  templateUrl: './approval-notifications.component.html'\n})\nexport class ApprovalNotificationsComponent extends BaseViewComponent implements OnInit {\n  gridConfig: Observable<IRecordGridConfig>;\n  editMode: boolean;\n\n  @ViewChild('recordGrid', { static: true })\n  recordGridComponent: RecordGridComponent;\n\n  constructor(\n    private rxModalService: RxModalService,\n    private adaptModalService: AdaptModalService,\n    private translateService: TranslateService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxApprovalNotificationsDataPageService: RxApprovalNotificationsDataPageService,\n    private rxApprovalNotificationsService: RxApprovalNotificationsService,\n    private rxNotificationService: RxNotificationService,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.editMode = false;\n\n    this.gridConfig = of({\n      actionButtons: [\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n          style: 'tertiary',\n          icon: 'trash',\n          actions: [\n            {\n              name: () => {\n                this.deleteNotification();\n              }\n            }\n          ]\n        }\n      ],\n      getData: (queryParams: IRecordGridDataPageParams) => this.getData(queryParams),\n      getRecordDefinition: () => of(this.getRecordDefinition()),\n      columns: this.getColumns(),\n      styles: 'flex-fill',\n      enableRowSelection: RowSelectionMode.Multiple\n    });\n  }\n\n  createApprovalNotification(): void {\n    this.editMode = false;\n\n    this.initializeApprovalNotificationForm({\n      notificationName: '',\n      primaryRecordName: ''\n    });\n  }\n\n  initializeApprovalNotificationForm(approvalNotification: IApprovalNotification): void {\n    forkJoin([\n      this.rxRecordInstanceDataPageService.post({\n        params: {\n          recorddefinition: RX_APPROVAL_CONFIGURATION.selfApproval.apForm.name,\n          propertySelection: RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.formName,\n          queryExpression: `('${RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.field7}'!=$NULL$ OR '${RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.field7}'!=\"\")`\n        }\n      }),\n      this.rxRecordInstanceDataPageService.post({\n        params: {\n          recorddefinition: 'AR System Administration: TextTemplate',\n          propertySelection: values(RX_APPROVAL_NOTIFICATIONS.arSystemAdministrationTextTemplate.fields).join()\n        }\n      }),\n      this.rxGlobalCacheService.getBundleDescriptors()\n    ]).subscribe(([apFormInstances, emailTemplateInstances, bundleDescriptors]) => {\n      const globalLabel = this.translateService.instant('com.bmc.arsys.rx.client.common.global-items.label');\n\n      const recordDefinitions: RxSelectOptionsGroup[] = flow(\n        (instanceData) =>\n          map(instanceData, (recordInstance) => {\n            const bundleDescriptor = find(bundleDescriptors, {\n              id: this.rxDefinitionNameService.getBundleId(\n                recordInstance[RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.formName]\n              )\n            });\n\n            return {\n              value: recordInstance[RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.formName],\n              displayValue: this.rxDefinitionNameService.getDisplayName(\n                recordInstance[RX_APPROVAL_CONFIGURATION.selfApproval.apForm.fields.formName]\n              ),\n              applicationName: bundleDescriptor?.friendlyName || bundleDescriptor?.id || globalLabel\n            };\n          }),\n        (definitions) => groupBy(definitions, 'applicationName'),\n        (optionsByApplicationName) =>\n          map(optionsByApplicationName, (options, applicationName) => ({\n            name: applicationName,\n            children: _map(options, (option) => {\n              return {\n                value: option.value,\n                displayValue: option.displayValue\n              };\n            })\n          }))\n      )(apFormInstances.data);\n\n      const templateList: IApprovalTemplate[] = [];\n\n      if (emailTemplateInstances.data.length) {\n        const nonApprovalTemplates = filter(emailTemplateInstances.data, function (template) {\n          return (\n            template[RX_APPROVAL_NOTIFICATIONS.arSystemAdministrationTextTemplate.fields.applicationBundleId] !==\n            RX_APPLICATION.approvalBundleId\n          );\n        });\n\n        forEach(nonApprovalTemplates, function (template) {\n          templateList.push({\n            name: template[RX_APPROVAL_NOTIFICATIONS.arSystemAdministrationTextTemplate.fields.name],\n            guid: template[RX_RECORD_DEFINITION.coreFieldIds.id]\n          });\n        });\n      }\n\n      const title = this.editMode\n        ? this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.notification-configuration.edit-approval-notification.title'\n          )\n        : this.translateService.instant(\n            'com.bmc.arsys.rx.client.approval.notification-configuration.new-approval-notification.title'\n          );\n\n      this.openModal(title, {\n        approvalNotification: this.editMode\n          ? approvalNotification\n          : {\n              notificationName: '',\n              primaryRecordName: ''\n            },\n        recordDefinitions,\n        templateList: templateList\n      });\n    });\n  }\n\n  private openModal(title: string, data: IApprovalNotificationData): void {\n    this.rxModalService\n      .openModal({\n        title: title,\n        content: ApprovalNotificationEditorComponent,\n        data: {\n          ...data\n        }\n      })\n      .then((result) => {\n        if (result) {\n          this.recordGridComponent.api.refresh().subscribe();\n          this.editMode = false;\n        }\n      })\n      .catch(noop);\n  }\n\n  deleteNotification(): void {\n    this.rxModalService\n      .confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.notification-configuration.delete-selected-notification-confirmation.message'\n        )\n      })\n      .then((result: boolean) => {\n        if (result) {\n          const selectedApprovalNotifications = this.recordGridComponent.api.getSelectedRows();\n\n          const selectedApprovalNotificationsIds = map(\n            selectedApprovalNotifications,\n            RX_RECORD_DEFINITION.coreFieldIds.id\n          );\n\n          this.rxApprovalNotificationsService\n            .deleteApprovalNotifications(selectedApprovalNotificationsIds)\n            .subscribe(() => {\n              this.rxNotificationService.addSuccessMessage(\n                this.translateService.instant(\n                  'com.bmc.arsys.rx.client.approval.notification-configuration.notification-deleted.message'\n                )\n              );\n\n              this.recordGridComponent.api.refresh().subscribe();\n            });\n        }\n      });\n  }\n\n  private getData(queryParams: IRecordGridDataPageParams): Observable<IDataPageResult> {\n    const propertySelection = <[]>Object.values(RX_APPROVAL_NOTIFICATIONS.approvalNotificationForm.fields);\n    const additionalQueryExpression = `('${RX_APPROVAL_NOTIFICATIONS.approvalNotificationForm.fields.applicationBundleId}' != $NULL$)`;\n\n    const queryExpression = queryParams.queryExpression\n      ? '(' +\n        additionalQueryExpression.substring(1, additionalQueryExpression.length - 1) +\n        ' AND ' +\n        queryParams.queryExpression.substring(1, queryParams.queryExpression.length - 1) +\n        ')'\n      : additionalQueryExpression;\n\n    queryParams = {\n      ...queryParams,\n      propertySelection: propertySelection,\n      queryExpression: queryExpression\n    };\n\n    return this.rxApprovalNotificationsDataPageService.get({ params: queryParams });\n  }\n\n  private getRecordDefinition(): IRecordDefinition {\n    return {\n      fieldDefinitions: [\n        {\n          id: RX_APPROVAL_NOTIFICATIONS.approvalNotificationForm.fields.notificationName,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_RECORD_DEFINITION.coreFieldIds.id,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_APPROVAL_NOTIFICATIONS.approvalNotificationForm.fields.notifyOn,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.selection,\n          optionNamesById: {\n            0: this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.notification-configuration.notify-on.options.new-signature.name'\n            ),\n            1: this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.notification-configuration.notify-on.options.approve.name'\n            ),\n            2: this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.notification-configuration.notify-on.options.reject.name'\n            ),\n            9: this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.notification-configuration.notify-on.options.reassign.name'\n            ),\n            10: this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.notification-configuration.notify-on.options.error.name'\n            ),\n            11: this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.notification-configuration.notify-on.options.cancel.name'\n            ),\n            12: this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.notification-configuration.notify-on.options.more-info-provided.name'\n            ),\n            16: this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.notification-configuration.notify-on.options.hold.name'\n            ),\n            17: this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.notification-configuration.notify-on.options.more-info.name'\n            )\n          }\n        },\n        {\n          id: RX_APPROVAL_NOTIFICATIONS.approvalNotificationForm.fields.method,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.selection,\n          optionNamesById: {\n            2: this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.notification-configuration.notification-method.types.email.name'\n            ),\n            5: this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.notification-configuration.notification-method.types.process.name'\n            )\n          }\n        },\n        {\n          id: RX_APPROVAL_NOTIFICATIONS.approvalNotificationForm.fields.status,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.selection,\n          optionNamesById: {\n            0: this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.notification-configuration.grid.column.status.options.active.value'\n            ),\n            1: this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.notification-configuration.grid.column.status.options.inactive.value'\n            )\n          }\n        },\n        {\n          id: RX_APPROVAL_NOTIFICATIONS.approvalNotificationForm.fields.applicationName,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_APPROVAL_NOTIFICATIONS.approvalNotificationForm.fields.globalNotification,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.selection,\n          optionNamesById: {\n            0: this.translateService.instant('com.bmc.arsys.rx.client.common.no.label'),\n            1: this.translateService.instant('com.bmc.arsys.rx.client.common.yes.label')\n          }\n        }\n      ]\n    };\n  }\n\n  private getColumns(): IRecordGridColumn[] {\n    return [\n      {\n        index: 0,\n        fieldId: String(RX_APPROVAL_NOTIFICATIONS.approvalNotificationForm.fields.notificationName),\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.notification-configuration.grid.column.notification-name.title'\n        ),\n        clickable: true,\n        actions: [\n          {\n            name: (previousAction: any, clickedColumnRow: IRowDataItem) =>\n              this.editApprovalNotification(clickedColumnRow)\n          }\n        ]\n      },\n      {\n        index: 1,\n        fieldId: String(RX_APPROVAL_NOTIFICATIONS.approvalNotificationForm.fields.applicationName),\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.notification-configuration.grid.column.record-definition.title'\n        ),\n        filterable: false\n      },\n      {\n        index: 2,\n        fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.id),\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.notification-configuration.grid.column.id.title'\n        ),\n        visible: false\n      },\n      {\n        index: 3,\n        fieldId: String(RX_APPROVAL_NOTIFICATIONS.approvalNotificationForm.fields.notifyOn),\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.notification-configuration.grid.column.notify-on.title'\n        )\n      },\n      {\n        index: 4,\n        fieldId: String(RX_APPROVAL_NOTIFICATIONS.approvalNotificationForm.fields.method),\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.notification-configuration.grid.column.notification-method.title'\n        )\n      },\n      {\n        index: 5,\n        fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.status),\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.notification-configuration.grid.column.status.title'\n        )\n      },\n      {\n        index: 6,\n        fieldId: String(RX_APPROVAL_NOTIFICATIONS.approvalNotificationForm.fields.globalNotification),\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.approval.notification-configuration.grid.column.global-notification.title'\n        )\n      }\n    ];\n  }\n\n  editApprovalNotification(approvalNotificationRow: IRowDataItem): void {\n    this.editMode = true;\n\n    this.rxApprovalNotificationsService\n      .getApprovalNotification(approvalNotificationRow[RX_RECORD_DEFINITION.coreFieldIds.id])\n      .subscribe((approvalNotification: IApprovalNotification) => {\n        this.initializeApprovalNotificationForm(approvalNotification);\n      });\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.approval.notification-configuration.title' | translate }}\">\n  <button\n    type=\"button\"\n    adapt-button\n    btn-type=\"tertiary\"\n    class=\"d-icon-plus_circle align-self-start\"\n    rx-id=\"new-button\"\n    (click)=\"createApprovalNotification()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.new.label' | translate }}\n  </button>\n\n  <rx-record-grid rx-id=\"approval-notifications-grid\" #recordGrid [config]=\"gridConfig\"></rx-record-grid>\n</rx-admin-settings>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { ApprovalNotificationsComponent } from './approval-notifications.component';\nimport {\n  AdminSettingsModule,\n  ExpressionFormControlModule,\n  RxDefinitionPickerModule\n} from '@helix/platform/shared/components';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ApprovalNotificationEditorComponent } from './approval-notification-editor/approval-notification-editor.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  AdaptAccordionModule,\n  AdaptButtonModule,\n  AdaptEmptyStateModule,\n  AdaptRxCheckboxModule,\n  AdaptRxLabelModule,\n  AdaptRxRadiobuttonModule,\n  AdaptRxSelectModule,\n  AdaptRxSwitchModule,\n  AdaptRxTextfieldModule,\n  AdaptTreeModule\n} from '@bmc-ux/adapt-angular';\n\n@NgModule({\n  declarations: [ApprovalNotificationsComponent, ApprovalNotificationEditorComponent],\n  imports: [\n    AdaptEmptyStateModule,\n    AdminSettingsModule,\n    AdaptRxSelectModule,\n    AdaptRxTextfieldModule,\n    AdaptRxSwitchModule,\n    AdaptRxCheckboxModule,\n    AdaptRxRadiobuttonModule,\n    AdaptButtonModule,\n    AdaptAccordionModule,\n    CommonModule,\n    ExpressionFormControlModule,\n    RecordGridModule,\n    ReactiveFormsModule,\n    RxDefinitionPickerModule,\n    TranslateModule,\n    AdaptRxLabelModule,\n    AdaptTreeModule\n  ],\n  entryComponents: [ApprovalNotificationsComponent]\n})\nexport class ApprovalNotificationsRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-approval-notifications',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(ApprovalNotificationsComponent),\n      name: 'Approval notifications',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { RxCurrentUserService, RxNotificationService, RxSystemConfigurationService } from '@helix/platform/shared/api';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { IBmcServiceCloudAccountConfig } from './bmc-service-cloud-account.types';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-bmc-service-cloud-account',\n  templateUrl: 'bmc-service-cloud-account.component.html',\n  styleUrls: ['./bmc-service-cloud-account.component.scss']\n})\nexport class BmcServiceCloudAccountAdminComponent extends BaseViewComponent implements OnInit {\n  bmcServiceCloudAccountConfigForm: FormGroup;\n  isAdministrator: boolean = this.rxCurrentUserService.isAdministrator();\n  busy: Subscription;\n\n  private settingName = 'errorReportingServiceSaasConfiguration';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxNotificationService: RxNotificationService,\n    private rxSystemConfigurationService: RxSystemConfigurationService,\n    private translateService: TranslateService\n  ) {\n    super();\n  }\n\n  private getConfiguration(): void {\n    this.busy = this.rxSystemConfigurationService.getConfiguration(this.settingName).subscribe((data) => {\n      this.bmcServiceCloudAccountConfigForm.patchValue(JSON.parse(data.value as string));\n    });\n  }\n\n  saveConfig(): void {\n    const formValue: IBmcServiceCloudAccountConfig = this.bmcServiceCloudAccountConfigForm.getRawValue();\n\n    this.rxSystemConfigurationService.setConfiguration(this.settingName, formValue).subscribe(() => {\n      this.rxNotificationService.addSuccessMessage(\n        this.translateService.instant('com.bmc.arsys.rx.client.admin.bmc-service-cloud-account.save-successful.message')\n      );\n      this.bmcServiceCloudAccountConfigForm.markAsPristine();\n    });\n  }\n\n  ngOnInit(): void {\n    this.notifyPropertyChanged('api', {\n      isDirty: () => this.bmcServiceCloudAccountConfigForm?.dirty\n    });\n\n    if (this.isAdministrator) {\n      this.bmcServiceCloudAccountConfigForm = this.formBuilder.group({\n        clientId: '',\n        clientSecret: '',\n        dataCenterUrl: '',\n        authorizationUrl: '',\n        serviceCloudInstanceUrl: '',\n        supportCentralUrl: ''\n      });\n\n      this.getConfiguration();\n    }\n  }\n}\n","<rx-admin-settings\n  header=\"{{ 'com.bmc.arsys.rx.client.admin.bmc-service-cloud-account.header.title' | translate }}\"\n  [busy]=\"busy\"\n>\n  <form [formGroup]=\"bmcServiceCloudAccountConfigForm\">\n    <adapt-rx-textfield\n      rx-id=\"client-id\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.bmc-service-cloud-account.client-id.label' | translate }}\"\n      formControlName=\"clientId\"\n      required=\"true\"\n      class=\"d-block form-group\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-textfield\n      rx-id=\"client-secret\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.bmc-service-cloud-account.client-secret.label' | translate }}\"\n      formControlName=\"clientSecret\"\n      required=\"true\"\n      [isPassword]=\"true\"\n      class=\"d-block form-group\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-textfield\n      rx-id=\"data-center-url\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.bmc-service-cloud-account.data-center-url.label' | translate }}\"\n      formControlName=\"dataCenterUrl\"\n      required=\"true\"\n      class=\"d-block form-group\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-textfield\n      rx-id=\"authorization-url\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.bmc-service-cloud-account.authorization-url.label' | translate }}\"\n      formControlName=\"authorizationUrl\"\n      required=\"true\"\n      class=\"d-block form-group\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-textfield\n      rx-id=\"service-cloud-instance-url\"\n      label=\"{{\n        'com.bmc.arsys.rx.client.admin.bmc-service-cloud-account.service-cloud-instance-url.label' | translate\n      }}\"\n      formControlName=\"serviceCloudInstanceUrl\"\n      required=\"true\"\n      class=\"d-block form-group\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-textfield\n      rx-id=\"support-central-url\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.bmc-service-cloud-account.support-central-url.label' | translate }}\"\n      formControlName=\"supportCentralUrl\"\n      required=\"true\"\n      class=\"d-block form-group\"\n    >\n    </adapt-rx-textfield>\n\n    <button\n      adapt-button\n      type=\"button\"\n      rx-id=\"save-button\"\n      btn-type=\"primary\"\n      class=\"mt-4\"\n      [disabled]=\"bmcServiceCloudAccountConfigForm.pristine || bmcServiceCloudAccountConfigForm.invalid\"\n      (click)=\"saveConfig()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n  </form>\n</rx-admin-settings>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  AdaptAccordionModule,\n  AdaptAlertModule,\n  AdaptButtonModule,\n  AdaptIconModule,\n  AdaptRxTextfieldModule\n} from '@bmc-ux/adapt-angular';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { BmcServiceCloudAccountAdminComponent } from './bmc-service-cloud-account.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    AdaptAccordionModule,\n    AdaptAlertModule,\n    AdaptButtonModule,\n    AdaptIconModule,\n    AdaptRxTextfieldModule,\n    AdminSettingsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    TranslateModule\n  ],\n  declarations: [BmcServiceCloudAccountAdminComponent],\n  entryComponents: [BmcServiceCloudAccountAdminComponent]\n})\nexport class BmcServiceCloudAccountRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-bmc-service-cloud-account',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(BmcServiceCloudAccountAdminComponent),\n      name: 'BMC Service Cloud account',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { ColumnConfig, DataCellTemplateParams } from '@bmc-ux/adapt-table';\nimport { RX_CHATBOTS, RxChatbotDefinitionService } from '@helix/platform/chatbot/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport {\n  IAdminComponentSetting,\n  IAdminComponentSettings,\n  RX_APPLICATION,\n  RxAdminSettingsService,\n  RxCurrentUserService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport { RenameDefinitionModalComponent } from '@helix/platform/shared/components';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { IRecordGridConfig, RecordGridComponent, RowSelectionMode } from '@helix/platform/view/components';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { TranslateService } from '@ngx-translate/core';\nimport { cloneDeep, find, head, includes, map, noop, toString } from 'lodash';\nimport { Observable, of, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'rx-admin-chatbots',\n  templateUrl: './chatbots.component.html'\n})\nexport class ChatbotsAdminComponent extends BaseViewComponent implements OnInit {\n  @ViewChild('chatbotConfigurationsRecordGrid', { static: true })\n  chatbotConfigurationsRecordGrid: RecordGridComponent;\n\n  @ViewChild('nameColumnTemplate', { static: true })\n  nameColumnTemplate: TemplateRef<DataCellTemplateParams>;\n\n  @ViewChild('displayChatbotsDropdownSwitch', { read: NgModel, static: false })\n  displayChatbotsDropdownSwitch: NgModel;\n\n  busy: Subscription;\n  recordGridConfig: Observable<IRecordGridConfig>;\n  private componentSettings: IAdminComponentSetting[];\n\n  sections = cloneDeep(RX_CHATBOTS.sections);\n  isAdministrator: boolean = this.rxCurrentUserService.isAdministrator();\n\n  constructor(\n    private rxAdminSettingsService: RxAdminSettingsService,\n    private rxChatbotDefinitionService: RxChatbotDefinitionService,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxModalService: RxModalService,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.notifyPropertyChanged('api', {\n      isDirty: () => this.displayChatbotsDropdownSwitch.dirty\n    });\n\n    if (this.isAdministrator) {\n      this.busy = this.rxAdminSettingsService\n        .getComponentSettings(RX_CHATBOTS.componentSettings.componentName, {\n          'default-bundle-scope': RX_APPLICATION.settingsBundleId\n        })\n        .subscribe((componentSettings: IAdminComponentSettings) => {\n          this.componentSettings = componentSettings.values;\n\n          const componentSetting = find(this.componentSettings, {\n            settingName: RX_CHATBOTS.componentSettings.settingNames.displayChatbotsDropdown\n          });\n\n          this.sections.globalChatbotSettings.displayChatbotsDropdown = JSON.parse(\n            componentSetting.settingValue as string\n          );\n        });\n    }\n\n    this.recordGridConfig = of({\n      enableFiltering: true,\n      recordDefinitionName: RX_CHATBOTS.chatbotSettings.recordDefinitionName,\n      enableRowSelection: RowSelectionMode.Multiple,\n\n      columns: [\n        {\n          index: 0,\n          fieldId: String(RX_CHATBOTS.chatbotSettings.recordFieldIds.name),\n          title: this.translateService.instant('com.bmc.arsys.rx.client.admin.chatbots.chatbot.title'),\n          cellTemplate: this.nameColumnTemplate\n        },\n        {\n          index: 1,\n          fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.description),\n          title: this.translateService.instant('com.bmc.arsys.rx.client.admin.chatbots.description.title')\n        },\n        {\n          index: 2,\n          fieldId: String(RX_CHATBOTS.chatbotSettings.recordFieldIds.bundleId),\n          title: this.translateService.instant('com.bmc.arsys.rx.client.admin.chatbots.application-library-id.title')\n        },\n        {\n          index: 3,\n          fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.id),\n          title: this.translateService.instant('com.bmc.arsys.rx.client.admin.chatbots.chatbot-id.title')\n        }\n      ],\n\n      actionButtons: [\n        {\n          label: 'Rename',\n          style: 'tertiary',\n          icon: 'pencil',\n\n          disabled: () => {\n            return !this.isAdministrator || this.chatbotConfigurationsRecordGrid.api.getSelectedRows().length !== 1;\n          },\n\n          actions: [\n            {\n              name: () => {\n                const selectedChatbot = head(this.chatbotConfigurationsRecordGrid.api.getSelectedRows());\n\n                this.rxModalService\n                  .openModal({\n                    title: this.translateService.instant('com.bmc.arsys.rx.client.admin.chatbots.rename-chatbot.title'),\n                    size: 'sm',\n                    content: RenameDefinitionModalComponent,\n                    data: {\n                      definitionName: selectedChatbot[RX_CHATBOTS.chatbotSettings.recordFieldIds.name],\n                      infoText: this.translateService.instant(\n                        'com.bmc.arsys.rx.client.admin.chatbots.name-uniqueness-validation.message'\n                      ),\n                      fieldLabel: this.translateService.instant('com.bmc.arsys.rx.client.admin.chatbots.name.label'),\n                      validationErrorText: this.translateService.instant(\n                        'com.bmc.arsys.rx.client.admin.chatbots.name-validation.message'\n                      ),\n                      definitionType: this.translateService.instant(\n                        'com.bmc.arsys.rx.client.admin.chatbots.chatbot.title'\n                      ),\n                      definitionNames: this.chatbotConfigurationsRecordGrid.adaptTableConfig.data\n                        .filter(\n                          (chatbot) =>\n                            chatbot[RX_CHATBOTS.chatbotSettings.recordFieldIds.bundleId] ===\n                            selectedChatbot[RX_CHATBOTS.chatbotSettings.recordFieldIds.bundleId]\n                        )\n                        .map((chatbot) => chatbot[RX_CHATBOTS.chatbotSettings.recordFieldIds.name])\n                    }\n                  })\n                  .then((definitionName: string) => {\n                    this.rxChatbotDefinitionService\n                      .rename(selectedChatbot[RX_RECORD_DEFINITION.coreFieldIds.id], definitionName)\n                      .subscribe(() => {\n                        this.refreshChatbotGrid();\n                      });\n                  })\n                  .catch(noop);\n              }\n            }\n          ]\n        },\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n          style: 'tertiary',\n          icon: 'trash',\n\n          disabled: () => {\n            return !this.isAdministrator || this.chatbotConfigurationsRecordGrid.api.getSelectedRows().length === 0;\n          },\n\n          actions: [\n            {\n              name: () => {\n                let confirmationMessage = this.translateService.instant(\n                  'com.bmc.arsys.rx.client.admin.chatbots.delete-confirmation.message'\n                );\n\n                const selectedChatbots = this.chatbotConfigurationsRecordGrid.api.getSelectedRows();\n                const selectedChatbotIds = map(selectedChatbots, RX_RECORD_DEFINITION.coreFieldIds.id);\n\n                if (includes(selectedChatbotIds, RX_CHATBOTS.chatbotSettings.defaultBotId)) {\n                  const defaultChatbot = find(selectedChatbots, [\n                    RX_RECORD_DEFINITION.coreFieldIds.id,\n                    RX_CHATBOTS.chatbotSettings.defaultBotId\n                  ]);\n\n                  confirmationMessage = this.translateService.instant(\n                    'com.bmc.arsys.rx.client.admin.chatbots.configurations-delete-confirmation.message',\n                    { defaultChatbotName: defaultChatbot[RX_CHATBOTS.chatbotSettings.recordFieldIds.name] }\n                  );\n                }\n\n                this.rxModalService\n                  .confirm({\n                    title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n                    modalStyle: RX_MODAL.modalStyles.warning,\n                    message: confirmationMessage\n                  })\n                  .then((result: boolean) => {\n                    if (result) {\n                      this.rxChatbotDefinitionService.delete(selectedChatbotIds).subscribe(() => {\n                        this.rxNotificationService.addSuccessMessage(\n                          this.translateService.instant('com.bmc.arsys.rx.client.admin.chatbots.delete-success.message')\n                        );\n\n                        this.refreshChatbotGrid();\n                      });\n                    }\n                  });\n              }\n            }\n          ]\n        }\n      ]\n    });\n  }\n\n  getCellValue(dataItem: string[], column: ColumnConfig): string {\n    return dataItem[column.field];\n  }\n\n  onSaveClick(): void {\n    const componentSetting: IAdminComponentSetting = find(this.componentSettings, [\n      'settingName',\n      RX_CHATBOTS.componentSettings.settingNames.displayChatbotsDropdown\n    ]);\n\n    componentSetting.settingValue = toString(this.sections.globalChatbotSettings.displayChatbotsDropdown);\n\n    this.rxAdminSettingsService\n      .updateComponentSettings(\n        `${RX_CHATBOTS.componentSettings.componentName}/${head(this.componentSettings).ownerKeyValue1}`,\n        this.componentSettings\n      )\n      .subscribe(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.admin.chatbots.global-chatbot-settings-saved.message')\n        );\n\n        this.displayChatbotsDropdownSwitch.control.markAsPristine();\n      });\n  }\n\n  openChatbot(row: string[]): void {\n    if (row) {\n      const bundleId = row[RX_CHATBOTS.chatbotSettings.recordFieldIds.bundleId];\n      const encodedBotName = encodeURIComponent(row[RX_CHATBOTS.chatbotSettings.recordFieldIds.name]);\n      const chatbotDesignerUrl = `/innovationstudio/index.html#/app/bundle/${bundleId}/ichatbot/${encodedBotName}`;\n\n      window.open(chatbotDesignerUrl);\n    }\n  }\n\n  private refreshChatbotGrid(): void {\n    this.chatbotConfigurationsRecordGrid.api.refresh().subscribe();\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.admin.chatbots.header.title' | translate }}\">\n  <adapt-accordion [multiselect]=\"true\" class=\"pb-4\">\n    <adapt-accordion-tab\n      [title]=\"sections.chatbotConfigurations.title | translate\"\n      [isOpen]=\"sections.chatbotConfigurations.isExpanded\"\n    >\n      <rx-record-grid #chatbotConfigurationsRecordGrid [config]=\"recordGridConfig\"></rx-record-grid>\n    </adapt-accordion-tab>\n\n    <adapt-accordion-tab\n      *ngIf=\"isAdministrator\"\n      [title]=\"sections.globalChatbotSettings.title | translate\"\n      [isOpen]=\"sections.globalChatbotSettings.isExpanded\"\n    >\n      <adapt-rx-switch\n        class=\"d-block\"\n        name=\"displayChatbotsDropdown\"\n        label=\" {{ 'com.bmc.arsys.rx.client.admin.chatbots.display-available-chatbots.label' | translate }} \"\n        [(ngModel)]=\"sections.globalChatbotSettings.displayChatbotsDropdown\"\n        #displayChatbotsDropdownSwitch=\"ngModel\"\n      ></adapt-rx-switch>\n\n      <button\n        class=\"mt-4\"\n        rx-id=\"save-button\"\n        adapt-button\n        btn-type=\"primary\"\n        size=\"small\"\n        type=\"button\"\n        [disabled]=\"!displayChatbotsDropdownSwitch.dirty\"\n        (click)=\"onSaveClick()\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n      </button>\n    </adapt-accordion-tab>\n  </adapt-accordion>\n</rx-admin-settings>\n\n<ng-template #nameColumnTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n  <a href=\"javascript:void(0)\" (click)=\"openChatbot(dataItem)\">\n    {{ getCellValue(dataItem, column) | rxDefinitionNamePipe }}\n  </a>\n</ng-template>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AdaptAccordionModule, AdaptButtonModule, AdaptIconModule, AdaptRxSwitchModule } from '@bmc-ux/adapt-angular';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { RX_APPLICATION, RxDefinitionModule } from '@helix/platform/shared/api';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { RxDirectivesModule } from '@helix/platform/ui-kit';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ChatbotsAdminComponent } from './chatbots.component';\nimport { RenameDefinitionModalModule } from '@helix/platform/shared/components';\n\n@NgModule({\n  declarations: [ChatbotsAdminComponent],\n  imports: [\n    AdaptAccordionModule,\n    AdaptButtonModule,\n    AdaptIconModule,\n    AdaptRxSwitchModule,\n    AdminSettingsModule,\n    CommonModule,\n    FormsModule,\n    RecordGridModule,\n    RenameDefinitionModalModule,\n    RxDefinitionModule,\n    RxDirectivesModule,\n    TranslateModule\n  ],\n  entryComponents: [ChatbotsAdminComponent]\n})\nexport class ChatbotsRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-chatbots',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(ChatbotsAdminComponent),\n      name: 'Chatbots',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import {\n  AdaptChartAxis,\n  AdaptChartHeader,\n  AdaptChartLegend,\n  AdaptChartSeries,\n  AdaptChartSeriesFormat,\n  AdaptStackedChartType\n} from '@bmc-ux/adapt-charts';\nimport { IPlainObject } from '@helix/platform/shared/api';\n\nexport enum ChartGroup {\n  Chat = 'chat',\n  ChatByUser = 'chatbyuser',\n  Classify = 'classify',\n  SearchDiskUsage = 'searchdiskusage',\n  SearchDocumentUsage = 'searchdocumentusage',\n  Search = 'search'\n}\n\nexport enum ChartType {\n  Area = 'area',\n  HorizontalColumn = 'horizontal-column'\n}\n\nexport interface ICognitiveConsumptionChart {\n  title: string;\n  type: string;\n}\n\nexport interface ICognitiveConsumptionChartConfig {\n  barWidth?: number;\n  header: AdaptChartHeader; //Chart.Header;\n  height?: number;\n  legend?: AdaptChartLegend; //Chart.Legend;\n  series: AdaptChartSeries<IPlainObject>[]; //Chart.Series<IPlainObject>[];\n  seriesDisplay?: AdaptChartSeriesFormat; //StackedChart.SeriesDisplayFormat;\n  showSlider?: boolean;\n  slidePointsCount?: number;\n  suppressLegend: boolean;\n  type?: AdaptStackedChartType; //StackedChartType;\n  width?: number;\n  xAxis: AdaptChartAxis; //Chart.Axis;\n  yAxis: AdaptChartAxis; //Chart.Axis;\n}\n\nexport interface ICognitiveConsumptionGroupData {\n  capacityName?: string;\n  label: string;\n  unit: string;\n}\n\nexport interface ICognitiveConsumptionGroup extends ICognitiveConsumptionGroupData {\n  charts: ICognitiveConsumptionChart[];\n  id: string;\n}\n\nexport interface ICognitiveConsumptionNotificationConfig {\n  annotations?: any[];\n  encoding?: string;\n  entity: ICognitiveConsumptionNotificationEntity;\n  language?: string;\n  mediaType: IPlainObject;\n  variant?: IPlainObject;\n}\n\nexport interface ICognitiveConsumptionNotificationEntity {\n  action: string;\n  capacity: number;\n  disabled?: boolean;\n  domain: string;\n  emailIds: string[];\n  eventStatisticsGuid?: string;\n  operation?: string;\n  period?: string;\n  thresholds: number[];\n}\n\nexport interface ICognitiveConsumptionNotificationHistory {\n  annotations?: any[];\n  encoding?: string;\n  entity: ICognitiveConsumptionNotificationEntity[];\n  language?: string;\n  mediaType: IPlainObject;\n  variant?: IPlainObject;\n}\n\nexport interface ICognitiveConsumptionNotificationParams {\n  action: string;\n  domain: string;\n}\n\nexport interface ICognitiveConsumptionSection {\n  groups: ICognitiveConsumptionGroup[];\n  id: string;\n  title: string;\n}\n\nexport interface ICognitiveLicenseUsage {\n  endDate: string;\n  licenseUsageCount?: ICognitiveLicenseUsageCount[];\n  operation: string;\n  startDate: string;\n}\n\nexport interface ICognitiveLicenseUsageCount {\n  bundleId: string;\n  capacity: number;\n  count: IPlainObject;\n  countType?: string;\n  total: number;\n}\n\nexport interface ICognitiveLicenseUsageParams {\n  countType: string;\n  endDate: string;\n  startDate: string;\n}\n","import { ChartGroup, ChartType } from './cognitive-consumption.types';\n\nexport const RX_COGNITIVE_CONSUMPTION = {\n  sections: [\n    {\n      id: ChartGroup.Chat,\n      title: 'com.bmc.arsys.rx.client.admin.cognitive-consumption.cognitive-service-chatbot.title',\n      groups: [\n        {\n          id: ChartGroup.Chat,\n          label: 'com.bmc.arsys.rx.client.admin.cognitive-consumption.number-of-conversations.label',\n          unit: 'N',\n          charts: [\n            {\n              title: 'com.bmc.arsys.rx.client.admin.cognitive-consumption.conversations.title',\n              type: ChartType.HorizontalColumn\n            },\n            {\n              title: 'com.bmc.arsys.rx.client.admin.cognitive-consumption.conversation-summary.title',\n              type: ChartType.Area\n            }\n          ]\n        }\n      ]\n    },\n    {\n      id: ChartGroup.ChatByUser,\n      title: 'com.bmc.arsys.rx.client.admin.cognitive-consumption.chatbot-users.title',\n      groups: [\n        {\n          id: ChartGroup.ChatByUser,\n          unit: 'N',\n          label: 'com.bmc.arsys.rx.client.admin.cognitive-consumption.number-of-users.label',\n          charts: [\n            {\n              title: 'com.bmc.arsys.rx.client.admin.cognitive-consumption.users.title',\n              type: ChartType.HorizontalColumn\n            },\n            {\n              title: 'com.bmc.arsys.rx.client.admin.cognitive-consumption.user-summary.title',\n              type: ChartType.Area\n            }\n          ]\n        }\n      ]\n    },\n    {\n      id: ChartGroup.Classify,\n      title: 'com.bmc.arsys.rx.client.admin.cognitive-consumption.cognitive-service-automation.title',\n      groups: [\n        {\n          id: ChartGroup.Classify,\n          label: 'com.bmc.arsys.rx.client.admin.cognitive-consumption.number-of-api-calls.label',\n          unit: 'N',\n          charts: [\n            {\n              title: 'com.bmc.arsys.rx.client.admin.cognitive-consumption.api-calls.title',\n              type: ChartType.HorizontalColumn\n            },\n            {\n              title: 'com.bmc.arsys.rx.client.admin.cognitive-consumption.api-call-summary.title',\n              type: ChartType.Area\n            }\n          ]\n        }\n      ]\n    },\n    {\n      id: ChartGroup.Search,\n      title: 'com.bmc.arsys.rx.client.admin.cognitive-consumption.cognitive-search.title',\n      groups: [\n        {\n          id: ChartGroup.SearchDocumentUsage,\n          label: 'com.bmc.arsys.rx.client.admin.cognitive-consumption.number-of-documents.label',\n          unit: 'N',\n          capacityName: 'Count',\n          charts: [\n            {\n              title: 'com.bmc.arsys.rx.client.admin.cognitive-consumption.documents.title',\n              type: ChartType.HorizontalColumn\n            },\n            {\n              title: 'com.bmc.arsys.rx.client.admin.cognitive-consumption.document-summary.title',\n              type: ChartType.Area\n            }\n          ]\n        },\n        {\n          id: ChartGroup.SearchDiskUsage,\n          label: 'com.bmc.arsys.rx.client.admin.cognitive-consumption.document-size.label',\n          unit: 'GB',\n          capacityName: 'Size',\n          charts: [\n            {\n              title: 'com.bmc.arsys.rx.client.admin.cognitive-consumption.document-storage.title',\n              type: ChartType.HorizontalColumn\n            },\n            {\n              title: 'com.bmc.arsys.rx.client.admin.cognitive-consumption.document-storage-summary.title',\n              type: ChartType.Area\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  settings: {\n    countType: 'BY_MONTH',\n    licenseType: 'com.bmc.arsys.rx.services.cognitive.CognitiveService',\n    fields: {\n      emailsAddressFieldId: 103,\n      consumedCapacityField: 'consumedCapacity',\n      thresholdReachedField: 'thresholdReached',\n      notificationDateField: 'notificationDate',\n      recipientsField: 'recipients'\n    }\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport moment from 'moment-es6';\nimport {\n  ICognitiveConsumptionNotificationConfig,\n  ICognitiveConsumptionNotificationEntity,\n  ICognitiveConsumptionNotificationHistory,\n  ICognitiveConsumptionNotificationParams,\n  ICognitiveLicenseUsage,\n  ICognitiveLicenseUsageParams\n} from './cognitive-consumption.types';\n\nconst notificationConfigApi = '/api/rx/application/telemetry/notification/config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxCognitiveConsumptionService {\n  constructor(private httpClient: HttpClient) {}\n\n  getCognitiveConsumptionNotificationConfig(\n    params: ICognitiveConsumptionNotificationParams\n  ): Observable<ICognitiveConsumptionNotificationConfig> {\n    return this.httpClient.get<ICognitiveConsumptionNotificationConfig>(notificationConfigApi, {\n      params: {\n        action: params.action,\n        domain: params.domain\n      }\n    });\n  }\n\n  postCognitiveConsumptionNotificationConfigEntity(entity: ICognitiveConsumptionNotificationEntity): Observable<any> {\n    return this.httpClient.post(notificationConfigApi, entity);\n  }\n\n  putCognitiveConsumptionNotificationConfigEntity(entity: ICognitiveConsumptionNotificationEntity): Observable<any> {\n    return this.httpClient.put(notificationConfigApi, entity);\n  }\n\n  getCognitiveConsumptionNotificationHistory(\n    params: ICognitiveConsumptionNotificationParams\n  ): Observable<ICognitiveConsumptionNotificationHistory> {\n    return this.httpClient.get<ICognitiveConsumptionNotificationHistory>(\n      '/api/rx/application/telemetry/notification/history',\n      {\n        params: {\n          action: params.action,\n          domain: params.domain\n        }\n      }\n    );\n  }\n\n  getCognitiveLicenseUsage(\n    licenseType: string,\n    id: string,\n    params: ICognitiveLicenseUsageParams\n  ): Observable<ICognitiveLicenseUsage> {\n    return this.httpClient.get<ICognitiveLicenseUsage>(\n      `/api/rx/application/license/licenseusage/${licenseType}/${id}`,\n      {\n        params: {\n          countType: params.countType,\n          endDate: moment(params.endDate, 'YYYY-MM').endOf('month').format('YYYY-MM-DD') + 'T23:59:59.999Z',\n          startDate: moment(params.startDate, 'YYYY-MM').startOf('month').format('YYYY-MM-DD') + 'T00:00:00.000Z'\n        }\n      }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { filter, find, forEach, head, includes, last, map, parseInt, some } from 'lodash';\nimport { forkJoin } from 'rxjs';\nimport moment from 'moment-es6';\nimport { ActiveModalRef, RxDatetimePickerMode, RxDatetimeStruct } from '@bmc-ux/adapt-angular';\nimport { IPlainObject } from '@helix/platform/shared/api';\nimport { RX_COGNITIVE_CONSUMPTION } from '../../cognitive-consumption.constant';\nimport { RxCognitiveConsumptionService } from '../../cognitive-consumption.service';\nimport { CsvData, RX_SIZE_UNITS, RxCsvService, RxFileService, RxUnitService } from '@helix/platform/utils';\nimport {\n  ICognitiveConsumptionGroup,\n  ICognitiveConsumptionSection,\n  ICognitiveLicenseUsage,\n  ICognitiveLicenseUsageParams\n} from '../../cognitive-consumption.types';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-download-report-modal',\n  templateUrl: './download-report-modal.component.html'\n})\nexport class DownloadReportModalComponent implements OnInit {\n  customRange: RxDatetimeStruct[];\n  modalData: IPlainObject;\n  period: string;\n\n  dateTimePickerMode = RxDatetimePickerMode.DateTime;\n\n  parameters: ICognitiveLicenseUsageParams = {\n    startDate: '',\n    endDate: '',\n    countType: RX_COGNITIVE_CONSUMPTION.settings.countType\n  };\n\n  periodOptions = [\n    {\n      label: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.cognitive-consumption.download-report-modal.last-twelve-months.label'\n      ),\n      value: '12'\n    },\n    {\n      label: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.cognitive-consumption.download-report-modal.last-twenty-four-months.label'\n      ),\n      value: '24'\n    },\n    {\n      label: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.cognitive-consumption.download-report-modal.last-thirty-six-months.label'\n      ),\n      value: '36'\n    },\n    {\n      label: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.cognitive-consumption.download-report-modal.selected-time-period.label'\n      ),\n      value: 'custom'\n    }\n  ];\n\n  csvData: CsvData = [['Operation', 'Application', 'Period', 'Count']];\n\n  constructor(\n    private activeModalRef: ActiveModalRef,\n    private rxCognitiveConsumptionService: RxCognitiveConsumptionService,\n    private rxCsvService: RxCsvService,\n    private rxFileService: RxFileService,\n    private rxUnitService: RxUnitService,\n    public translateService: TranslateService\n  ) {\n    this.modalData = this.activeModalRef.getData();\n  }\n\n  ngOnInit(): void {\n    this.period = head(this.periodOptions).value;\n  }\n\n  onDownloadClick(): void {\n    if (this.period === 'custom') {\n      this.parameters.endDate = moment(last(this.customRange)).format('YYYY-MM');\n      this.parameters.startDate = moment(head(this.customRange)).format('YYYY-MM');\n    } else {\n      this.parameters.endDate = moment().format('YYYY-MM');\n\n      this.parameters.startDate = moment(this.parameters.endDate, 'YYYY-MM')\n        .add(-1 * parseInt(this.period, 10), 'months')\n        .format('YYYY-MM');\n    }\n\n    const sections: ICognitiveConsumptionSection[] = filter(RX_COGNITIVE_CONSUMPTION.sections, (section) =>\n      includes(this.modalData.sectionIds, section.id)\n    );\n\n    const groupIds: string[] = [];\n\n    forEach(sections, (section) => {\n      forEach(section.groups, (group) => {\n        groupIds.push(group.id);\n      });\n    });\n\n    forkJoin(\n      map(groupIds, (groupId) => {\n        return this.rxCognitiveConsumptionService.getCognitiveLicenseUsage(\n          RX_COGNITIVE_CONSUMPTION.settings.licenseType,\n          groupId,\n          this.parameters\n        );\n      })\n    ).subscribe((licenseUsages: ICognitiveLicenseUsage[]) => {\n      forEach(licenseUsages, (licenseUsage) => {\n        const currentSection: ICognitiveConsumptionSection = find(sections, (section) =>\n          some(section.groups, ['id', licenseUsage.operation])\n        );\n\n        const group: ICognitiveConsumptionGroup = find(currentSection.groups, ['id', licenseUsage.operation]);\n\n        forEach(licenseUsage.licenseUsageCount, (licenseUsageCount) => {\n          forEach(licenseUsageCount.count, (value, period) => {\n            this.csvData.push([\n              `${this.translateService.instant(currentSection.title)} - ${this.translateService.instant(\n                head(group.charts).title\n              )}`,\n              licenseUsageCount.bundleId,\n              period,\n              group.unit === RX_SIZE_UNITS.gigabytes.unit ? this.rxUnitService.getValueWithUnits(value) : value\n            ]);\n          });\n        });\n      });\n\n      const csv: string = this.rxCsvService.convertToCsv(this.csvData);\n\n      this.rxFileService.createAndDownloadBlob(csv, 'text/csv;charset=utf-8;', 'report', 'csv');\n      this.activeModalRef.close();\n    });\n  }\n\n  onCancelClick(): void {\n    this.activeModalRef.dismiss();\n  }\n}\n","<div class=\"modal-body\">\n  <form>\n    <adapt-rx-radiobutton-group name=\"period\" [(ngModel)]=\"period\">\n      <adapt-rx-radiobutton\n        *ngFor=\"let option of periodOptions\"\n        [label]=\"option.label | translate\"\n        [value]=\"option.value\"\n      ></adapt-rx-radiobutton>\n    </adapt-rx-radiobutton-group>\n\n    <adapt-rx-datetime-range\n      name=\"customDatetimeRange\"\n      label=\" {{\n        'com.bmc.arsys.rx.client.admin.cognitive-consumption.download-report-modal.select-range.label' | translate\n      }}\"\n      [mode]=\"dateTimePickerMode\"\n      [disabled]=\"period !== 'custom'\"\n      [(ngModel)]=\"customRange\"\n    ></adapt-rx-datetime-range>\n  </form>\n</div>\n\n<div class=\"modal-footer\">\n  <button\n    rx-id=\"download-button\"\n    adapt-button\n    btn-type=\"primary\"\n    type=\"button\"\n    (click)=\"onDownloadClick()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.download.label' | translate }}\n  </button>\n\n  <button rx-id=\"cancel-button\" adapt-button btn-type=\"secondary\" type=\"button\" (click)=\"onCancelClick()\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ActiveModalRef } from '@bmc-ux/adapt-angular';\nimport { IRecordDefinition, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IPlainObject } from '@helix/platform/shared/api';\nimport { IRecordGridColumn, IRecordGridConfig, RowSelectionMode } from '@helix/platform/view/components';\nimport { RX_COGNITIVE_CONSUMPTION } from '../../cognitive-consumption.constant';\nimport { RxCognitiveConsumptionService } from '../../cognitive-consumption.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-cognitive-consumption-notification-history-modal',\n  templateUrl: './cognitive-consumption-notification-history-modal.component.html',\n  styleUrls: ['./cognitive-consumption-notification-history-modal.component.scss']\n})\nexport class CognitiveConsumptionNotificationHistoryModalComponent implements OnInit {\n  modalData: IPlainObject;\n  recordGridConfig: Observable<IRecordGridConfig>;\n\n  constructor(\n    private activeModalRef: ActiveModalRef,\n    private rxCognitiveConsumptionService: RxCognitiveConsumptionService,\n    private translateService: TranslateService\n  ) {\n    this.modalData = this.activeModalRef.getData();\n  }\n\n  ngOnInit() {\n    const recordDefinition: IRecordDefinition = {\n      fieldDefinitions: [\n        {\n          id: RX_COGNITIVE_CONSUMPTION.settings.fields.consumedCapacityField,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_COGNITIVE_CONSUMPTION.settings.fields.thresholdReachedField,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_COGNITIVE_CONSUMPTION.settings.fields.notificationDateField,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.dateTime\n        },\n        {\n          id: RX_COGNITIVE_CONSUMPTION.settings.fields.recipientsField,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        }\n      ]\n    };\n\n    const columns: IRecordGridColumn[] = [\n      {\n        index: 0,\n        fieldId: RX_COGNITIVE_CONSUMPTION.settings.fields.consumedCapacityField,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.cognitive-consumption-notification-history.consumption-measure.title'\n        )\n      },\n      {\n        index: 1,\n        fieldId: RX_COGNITIVE_CONSUMPTION.settings.fields.thresholdReachedField,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.cognitive-consumption-notification-history.threshold-reached.title'\n        )\n      },\n      {\n        index: 2,\n        fieldId: RX_COGNITIVE_CONSUMPTION.settings.fields.notificationDateField,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.cognitive-consumption-notification-history.notification-date.title'\n        )\n      },\n      {\n        index: 3,\n        fieldId: RX_COGNITIVE_CONSUMPTION.settings.fields.recipientsField,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.cognitive-consumption-notification-history.email-recipient.title'\n        )\n      }\n    ];\n\n    this.recordGridConfig = of({\n      columns,\n      enableFiltering: false,\n      useExternalFiltering: false,\n      enableRowSelection: RowSelectionMode.Multiple,\n      styles: 'flex-fill',\n      getRecordDefinition: () => of(recordDefinition),\n\n      getData: () =>\n        this.rxCognitiveConsumptionService\n          .getCognitiveConsumptionNotificationHistory({\n            action: this.modalData.groupId,\n            domain: this.modalData.domain\n          })\n          .pipe(\n            map((data) => ({\n              data: data.entity,\n              totalSize: data.entity.length\n            }))\n          )\n    });\n  }\n\n  onCloseClick(): void {\n    this.activeModalRef.close();\n  }\n}\n","<div class=\"modal-body d-flex\">\n  <rx-record-grid [config]=\"recordGridConfig\"></rx-record-grid>\n</div>\n\n<div class=\"modal-footer\">\n  <button rx-id=\"close-button\" adapt-button btn-type=\"secondary\" type=\"button\" (click)=\"onCloseClick()\">\n    {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n  </button>\n</div>\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, NgForm, ValidationErrors } from '@angular/forms';\nimport { ActiveModalRef, AdaptModalService, DismissReasons } from '@bmc-ux/adapt-angular';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IPlainObject, RxCurrentUserService, RxLogService, RxNotificationService } from '@helix/platform/shared/api';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { IRowDataItem, OpenViewActionModalSize } from '@helix/platform/view/api';\nimport { IRecordGridConfig, RecordGridComponent, RowSelectionMode } from '@helix/platform/view/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  add,\n  compact,\n  every,\n  find,\n  forEach,\n  get,\n  includes,\n  inRange,\n  isEmpty,\n  map,\n  merge,\n  noop,\n  omit,\n  pullAt\n} from 'lodash';\nimport { EMPTY, Observable, of, Subscription, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { RX_COGNITIVE_CONSUMPTION } from '../../cognitive-consumption.constant';\nimport { RxCognitiveConsumptionService } from '../../cognitive-consumption.service';\nimport {\n  ICognitiveConsumptionGroup,\n  ICognitiveConsumptionNotificationConfig,\n  ICognitiveConsumptionNotificationEntity\n} from '../../cognitive-consumption.types';\nimport { CognitiveConsumptionNotificationHistoryModalComponent } from '../cognitive-consumption-notification-history-modal/cognitive-consumption-notification-history-modal.component';\n\n@Component({\n  selector: 'rx-cognitive-consumption-notification-modal',\n  templateUrl: './cognitive-consumption-notification-modal.component.html',\n  styleUrls: ['./cognitive-consumption-notification-modal.component.scss']\n})\nexport class CognitiveConsumptionNotificationModalComponent extends RxModalClass implements OnInit {\n  @ViewChild('availableEmailNotificationRecipientsRecordGrid', { static: true })\n  availableEmailNotificationRecipientsRecordGrid: RecordGridComponent;\n\n  @ViewChild('notificationForm', { static: true, read: NgForm })\n  notificationForm: NgForm;\n\n  busy: Subscription;\n  entity: ICognitiveConsumptionNotificationEntity;\n  group: ICognitiveConsumptionGroup;\n  isAdministrator: boolean;\n  label: string;\n  modalData: IPlainObject;\n  recordGridConfig: Observable<IRecordGridConfig>;\n\n  isEdit = false;\n  selectedEmailRecipients: string[] = [];\n\n  thresholds: IPlainObject[] = [\n    {\n      id: 1,\n      value: 0\n    },\n    {\n      id: 2,\n      value: 0\n    },\n    {\n      id: 3,\n      value: 0\n    }\n  ];\n\n  constructor(\n    private activeModalRef: ActiveModalRef,\n    private adaptModalService: AdaptModalService,\n    private rxCognitiveConsumptionService: RxCognitiveConsumptionService,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxLogService: RxLogService,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n\n    this.modalData = this.activeModalRef.getData();\n    this.isAdministrator = this.rxCurrentUserService.isAdministrator();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    forEach(RX_COGNITIVE_CONSUMPTION.sections, (section) => {\n      const group: ICognitiveConsumptionGroup = find(section.groups, ['id', this.modalData.groupId]);\n\n      if (group) {\n        this.group = group;\n      }\n    });\n\n    this.label = `${this.translateService.instant(this.group.label)} (${this.group.unit})`;\n\n    this.entity = {\n      action: this.modalData.groupId,\n      capacity: 0,\n      domain: 'com.bmc.dsm.innovationsuite.cognitive',\n      emailIds: [],\n      thresholds: [null, null, null]\n    };\n\n    this.busy = this.rxCognitiveConsumptionService\n      .getCognitiveConsumptionNotificationConfig({\n        action: this.entity.action,\n        domain: this.entity.domain\n      })\n      .pipe(\n        catchError((error) => {\n          return get(error, 'error[0].messageNumber') === 302 ? EMPTY : throwError(error);\n        })\n      )\n      .subscribe((config: ICognitiveConsumptionNotificationConfig) => {\n        this.isEdit = true;\n        merge(this.entity, config.entity);\n\n        this.thresholds = map(this.entity.thresholds, (threshold, index) => {\n          return {\n            id: index + 1,\n            value: threshold || 0\n          };\n        });\n\n        this.selectedEmailRecipients = this.entity.emailIds;\n      });\n\n    this.recordGridConfig = of({\n      enableFiltering: false,\n      recordDefinitionName: 'User',\n      enableRowSelection: RowSelectionMode.Multiple,\n      filterExpression: `('${RX_COGNITIVE_CONSUMPTION.settings.fields.emailsAddressFieldId}' != $NULL$)`,\n\n      columns: [\n        {\n          index: 0,\n          fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.description),\n          title: this.translateService.instant(\n            'com.bmc.arsys.rx.client.admin.cognitive-consumption-notification.full-name.title'\n          )\n        },\n        {\n          index: 1,\n          fieldId: String(RX_COGNITIVE_CONSUMPTION.settings.fields.emailsAddressFieldId),\n          title: this.translateService.instant(\n            'com.bmc.arsys.rx.client.admin.cognitive-consumption-notification.primary-email-address.title'\n          )\n        }\n      ]\n    });\n  }\n\n  isDirty(): boolean {\n    return this.notificationForm.dirty;\n  }\n\n  canSelectRecipients(): boolean {\n    const recipients: IRowDataItem[] = this.availableEmailNotificationRecipientsRecordGrid.api.getSelectedRows();\n\n    return inRange(add(recipients.length, this.selectedEmailRecipients.length), 0, 11);\n  }\n\n  getEmptyCapacityValueValidator(): (control: AbstractControl) => ValidationErrors | null {\n    return (control: AbstractControl) => {\n      let result = null;\n\n      if (control.touched && !control.value) {\n        result = {\n          emptyCapacityValue: {\n            message: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-consumption-notification.capacity-empty-validation.message'\n            )\n          }\n        };\n      }\n\n      return result;\n    };\n  }\n\n  getEmptyThresholdValuesValidator(): (control: AbstractControl) => ValidationErrors | null {\n    return (control: AbstractControl) => {\n      let result = null;\n\n      if (control.touched && !control.value && every(this.thresholds, ['value', 0])) {\n        result = {\n          emptyThresholdValues: {\n            message: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-consumption-notification.capacity-threshold-validation.message'\n            )\n          }\n        };\n      }\n\n      return result;\n    };\n  }\n\n  isSaveButtonDisabled(): boolean {\n    return this.notificationForm.invalid || isEmpty(this.selectedEmailRecipients);\n  }\n\n  onCloseClick(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  onMoveToSelectedClick(): void {\n    const recipients: IRowDataItem[] = this.availableEmailNotificationRecipientsRecordGrid.api.getSelectedRows();\n\n    if (this.canSelectRecipients()) {\n      forEach(recipients, (recipient) => {\n        if (\n          !includes(\n            this.selectedEmailRecipients,\n            recipient[RX_COGNITIVE_CONSUMPTION.settings.fields.emailsAddressFieldId]\n          )\n        ) {\n          this.selectedEmailRecipients.push(recipient[RX_COGNITIVE_CONSUMPTION.settings.fields.emailsAddressFieldId]);\n        }\n      });\n    }\n  }\n\n  onNotificationHistoryClick(): void {\n    this.adaptModalService\n      .open({\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.cognitive-consumption-notification.notification-history.title'\n        ),\n        content: CognitiveConsumptionNotificationHistoryModalComponent,\n        size: OpenViewActionModalSize.Large as any,\n        data: {\n          domain: this.entity.domain,\n          groupId: this.modalData.groupId\n        }\n      })\n      .catch(noop);\n  }\n\n  onRemoveRecipientClick(index: number): void {\n    pullAt(this.selectedEmailRecipients, [index]);\n  }\n\n  onSaveClick(): void {\n    forEach(this.notificationForm.controls, (control) => {\n      control.markAsTouched();\n      control.updateValueAndValidity();\n    });\n\n    const entity: ICognitiveConsumptionNotificationEntity = {\n      action: this.entity.action,\n      capacity: this.entity.capacity,\n      domain: this.entity.domain,\n      emailIds: this.selectedEmailRecipients,\n      thresholds: compact(map(this.thresholds, 'value'))\n    };\n\n    if (this.notificationForm.valid) {\n      if (this.isEdit) {\n        this.rxCognitiveConsumptionService.putCognitiveConsumptionNotificationConfigEntity(entity).subscribe(() => {\n          this.activeModalRef.close();\n          this.rxNotificationService.addSuccessMessage(\n            this.translateService.instant('com.bmc.arsys.rx.client.common.saved-successfully.message')\n          );\n        });\n      } else {\n        this.rxCognitiveConsumptionService.postCognitiveConsumptionNotificationConfigEntity(entity).subscribe(() => {\n          this.activeModalRef.close();\n          this.rxNotificationService.addSuccessMessage(\n            this.translateService.instant('com.bmc.arsys.rx.client.common.saved-successfully.message')\n          );\n        });\n      }\n    }\n  }\n\n  onThresholdCounterModelChange(): void {\n    const controls = omit(this.notificationForm.controls, 'capacity');\n\n    forEach(controls, (control) => {\n      control.markAsTouched();\n      control.updateValueAndValidity();\n    });\n  }\n}\n","<div class=\"modal-body d-flex\">\n  <rx-busy-indicator [options]=\"{ busy: busy, loaderType: 'section' }\"></rx-busy-indicator>\n\n  <form class=\"d-flex flex-column\" #notificationForm=\"ngForm\">\n    <div class=\"mb-4\" [style.width.%]=\"32\">\n      <h5 class=\"m-0 mb-4\">\n        {{ 'com.bmc.arsys.rx.client.admin.cognitive-consumption-notification.capacity.title' | translate }}\n      </h5>\n\n      <adapt-rx-counter\n        name=\"capacity\"\n        [label]=\"label\"\n        placeholder=\"0\"\n        min=\"0\"\n        max=\"100\"\n        required\n        [rxCustomValidators]=\"getEmptyCapacityValueValidator()\"\n        [(ngModel)]=\"entity.capacity\"\n      >\n      </adapt-rx-counter>\n    </div>\n\n    <div class=\"mb-4\">\n      <h5 class=\"m-0 mb-4\">\n        {{ 'com.bmc.arsys.rx.client.admin.cognitive-consumption.capacity-consumption-thresholds.title' | translate }}\n      </h5>\n\n      <div class=\"d-flex justify-content-between\">\n        <adapt-rx-counter\n          *ngFor=\"let threshold of thresholds\"\n          [style.width.%]=\"32\"\n          name=\"threshold-{{ threshold.id }}\"\n          label=\"Threshold {{ threshold.id }} (%)\"\n          placeholder=\"0\"\n          min=\"0\"\n          max=\"100\"\n          adaptIntegerNumber\n          [rxCustomValidators]=\"getEmptyThresholdValuesValidator()\"\n          [(ngModel)]=\"threshold.value\"\n          (ngModelChange)=\"onThresholdCounterModelChange()\"\n        >\n        </adapt-rx-counter>\n      </div>\n    </div>\n\n    <div class=\"d-flex h-100\">\n      <div class=\"col-6 d-flex flex-column h-100 p-0\">\n        <h5 class=\"m-0 mb-4\">\n          {{\n            'com.bmc.arsys.rx.client.admin.cognitive-consumption-notification.available-email-recipient.title'\n              | translate\n          }}\n        </h5>\n\n        <rx-record-grid\n          class=\"flex-grow-1\"\n          [config]=\"recordGridConfig\"\n          #availableEmailNotificationRecipientsRecordGrid\n        ></rx-record-grid>\n      </div>\n\n      <button\n        class=\"d-icon-angle_right align-self-center mx-4\"\n        adapt-button\n        btn-type=\"secondary\"\n        type=\"button\"\n        rx-id=\"move-to-selected-button\"\n        [disabled]=\"!canSelectRecipients()\"\n        (click)=\"onMoveToSelectedClick()\"\n      ></button>\n\n      <div class=\"col d-flex flex-column h-100 p-0\">\n        <h5 class=\"m-0 mb-4\">\n          {{\n            'com.bmc.arsys.rx.client.admin.cognitive-consumption-notification.selected-email-recipient.title'\n              | translate\n          }}\n        </h5>\n\n        <ul *ngIf=\"selectedEmailRecipients.length\" class=\"list-group\">\n          <li\n            *ngFor=\"let recipient of selectedEmailRecipients; let $index = index\"\n            class=\"list-group-item d-flex justify-content-between p-0 px-2\"\n          >\n            {{ recipient }}\n\n            <button\n              class=\"d-icon-trash_adapt\"\n              adapt-button\n              btn-type=\"tertiary\"\n              type=\"button\"\n              rx-id=\"remove-recipient\"\n              (click)=\"onRemoveRecipientClick($index)\"\n            ></button>\n          </li>\n        </ul>\n\n        <div *ngIf=\"!selectedEmailRecipients.length\" class=\"card h-100\">\n          <div class=\"card-block\">\n            <adapt-empty-state\n              type=\"objects\"\n              label=\"{{\n                'com.bmc.arsys.rx.client.admin.cognitive-consumption-notification.recipient-not-selected.message'\n                  | translate\n              }}\"\n            ></adapt-empty-state>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"modal-footer d-flex\">\n  <button\n    class=\"mr-auto\"\n    rx-id=\"notification-history-button\"\n    adapt-button\n    btn-type=\"secondary\"\n    type=\"button\"\n    (click)=\"onNotificationHistoryClick()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.admin.cognitive-consumption-notification.notification-history.title' | translate }}\n  </button>\n\n  <button\n    rx-id=\"save-button\"\n    adapt-button\n    btn-type=\"primary\"\n    type=\"button\"\n    [disabled]=\"isSaveButtonDisabled()\"\n    (click)=\"onSaveClick()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button rx-id=\"close-button\" adapt-button btn-type=\"secondary\" size=\"small\" type=\"button\" (click)=\"onCloseClick()\">\n    {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n  </button>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { assign, constant, defaults, flow, forEach, head, keys, last, map, mapValues, reduce, split } from 'lodash';\nimport moment from 'moment-es6';\nimport { IPlainObject } from '@helix/platform/shared/api';\nimport { RX_SIZE_UNITS, RxStringService, RxUnitService } from '@helix/platform/utils';\nimport {\n  ChartType,\n  ICognitiveConsumptionChart,\n  ICognitiveConsumptionChartConfig,\n  ICognitiveConsumptionGroupData,\n  ICognitiveLicenseUsageCount\n} from '../../cognitive-consumption.types';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-cognitive-consumption-chart',\n  templateUrl: './cognitive-consumption-chart.component.html'\n})\nexport class CognitiveConsumptionChartComponent implements OnInit {\n  @Input()\n  chart: ICognitiveConsumptionChart;\n\n  @Input()\n  groupData: ICognitiveConsumptionGroupData;\n\n  @Input()\n  licenceUsageCount: ICognitiveLicenseUsageCount[];\n\n  capacity: IPlainObject;\n  chartConfig: ICognitiveConsumptionChartConfig;\n\n  areaChartType = ChartType.Area;\n  horizontalColumnChartType = ChartType.HorizontalColumn;\n\n  constructor(\n    private rxStringService: RxStringService,\n    private rxUnitService: RxUnitService,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit() {\n    this.chartConfig = {\n      height: 400,\n      width: 500,\n      header: {\n        title: this.translateService.instant(this.chart.title),\n        allowHideLegend: true\n      },\n      suppressLegend: this.isCapacityAvailable(),\n      xAxis: {\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-consumption.x-axis-months.title'),\n        categories: []\n      },\n      yAxis: {\n        title: `${this.translateService.instant(this.groupData.label)} (${this.groupData.unit})`\n      },\n      series: []\n    };\n\n    if (this.chart.type === ChartType.HorizontalColumn) {\n      assign(this.chartConfig, {\n        type: 'column',\n        seriesDisplay: 'horizontal',\n        showSlider: true,\n        slidePointsCount: 3\n      });\n\n      const defaultCount = flow(\n        (licenceUsage: ICognitiveLicenseUsageCount[]) => map(licenceUsage, 'count'),\n        (countData: IPlainObject) => reduce(countData, assign, {}),\n        (countData: IPlainObject) => mapValues(countData, constant(0))\n      )(this.licenceUsageCount);\n\n      forEach(this.licenceUsageCount, (item) => {\n        defaults(item.count, defaultCount);\n      });\n    }\n\n    forEach(this.licenceUsageCount, (item) => {\n      const name = this.groupData.capacityName || this.rxStringService.prettify(last(split(item.bundleId, '.')));\n\n      const data = map(item.count, (key, value) => {\n        let result;\n\n        const countValue =\n          this.groupData.unit === RX_SIZE_UNITS.gigabytes.unit\n            ? this.rxUnitService.getValueWithoutUnitsByUnitType(key, RX_SIZE_UNITS.gigabytes.unit)\n            : key;\n\n        if (this.chart.type === ChartType.Area) {\n          result = {\n            x: moment(value).valueOf(),\n            y: countValue\n          };\n        } else {\n          result = countValue;\n        }\n\n        return result;\n      });\n\n      this.chartConfig.series.push({\n        name,\n        data\n      });\n    });\n\n    const firstLicenceUsageCount = head(this.licenceUsageCount);\n\n    this.chartConfig.xAxis.categories = map(keys(firstLicenceUsageCount.count), (key) => {\n      return moment(key).format('MMM YYYY');\n    });\n\n    if (this.isCapacityAvailable()) {\n      this.capacity = {\n        title: `Capacity (${this.groupData.unit})`,\n        value:\n          this.groupData.unit === RX_SIZE_UNITS.gigabytes.unit\n            ? this.rxUnitService.getValueWithoutUnitsByUnitType(\n                firstLicenceUsageCount.capacity,\n                RX_SIZE_UNITS.gigabytes.unit\n              )\n            : firstLicenceUsageCount.capacity\n      };\n    }\n  }\n\n  formatXAxisVal(xValue) {\n    return moment(xValue).format('MMM YYYY');\n  }\n\n  public isCapacityAvailable() {\n    return Boolean(this.groupData.capacityName);\n  }\n}\n","<ng-container [ngSwitch]=\"chart.type\">\n  <adapt-stacked-chart\n    *ngSwitchCase=\"horizontalColumnChartType\"\n    [header]=\"chartConfig.header\"\n    [height]=\"chartConfig.height\"\n    [width]=\"chartConfig.width\"\n    [xAxis]=\"chartConfig.xAxis\"\n    [yAxis]=\"chartConfig.yAxis\"\n    [series]=\"chartConfig.series\"\n    [tooltip]=\"horizontalColumnChartTooltip\"\n    [type]=\"chartConfig.type\"\n    [showSlider]=\"chartConfig.showSlider\"\n    [slidePointsCount]=\"chartConfig.slidePointsCount\"\n    [seriesDisplay]=\"chartConfig.seriesDisplay\"\n    [suppressLegend]=\"chartConfig.suppressLegend\"\n    [thresholdLine]=\"isCapacityAvailable() ? capacity.value : null\"\n  >\n  </adapt-stacked-chart>\n\n  <adapt-area-graph\n    *ngSwitchCase=\"areaChartType\"\n    [header]=\"chartConfig.header\"\n    [height]=\"chartConfig.height\"\n    [width]=\"chartConfig.width\"\n    [xAxis]=\"chartConfig.xAxis\"\n    [yAxis]=\"chartConfig.yAxis\"\n    [series]=\"chartConfig.series\"\n    [tooltip]=\"areaChartTooltip\"\n    [suppressLegend]=\"chartConfig.suppressLegend\"\n    [thresholdLine]=\"isCapacityAvailable() ? capacity.value : null\"\n  >\n  </adapt-area-graph>\n</ng-container>\n\n<ng-template #horizontalColumnChartTooltip let-data=\"data\">\n  <div>\n    <span class=\"chart-tooltip-color-spot\" [style.background]=\"data?.color\"></span>\n    <span class=\"chart-tooltip-category\">{{ data.category }}</span>\n  </div>\n\n  <div>\n    {{ chartConfig.yAxis.title }}:\n    <span class=\"font-weight-semibold\">{{ data.value }}</span>\n  </div>\n\n  <div *ngIf=\"capacity\">\n    {{ capacity.title }}:\n    <span class=\"font-weight-semibold\">{{ capacity.value }}</span>\n  </div>\n</ng-template>\n\n<ng-template #areaChartTooltip let-data=\"data\">\n  <div>\n    <span class=\"chart-tooltip-color-spot\" [style.background]=\"data?.color\"></span>\n    <span class=\"chart-tooltip-category\">{{ data.category }}</span>\n  </div>\n\n  <div>\n    {{ chartConfig.xAxis.title }}:\n    <span class=\"font-weight-semibold\">{{ formatXAxisVal(data.xValue) }}</span>\n  </div>\n\n  <div>\n    {{ chartConfig.yAxis.title }}:\n    <span class=\"font-weight-semibold\">{{ data.yValue }}</span>\n  </div>\n\n  <div *ngIf=\"capacity\">\n    {{ capacity.title }}:\n    <span class=\"font-weight-semibold\">{{ capacity.value }}</span>\n  </div>\n</ng-template>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { BusyConfig } from '@bmc-ux/adapt-angular';\nimport { RxModalService } from '@helix/platform/ui-kit';\nimport { TranslateService } from '@ngx-translate/core';\nimport { forEach, isEmpty, noop, omit } from 'lodash';\nimport moment from 'moment-es6';\nimport { RX_COGNITIVE_CONSUMPTION } from '../../cognitive-consumption.constant';\nimport { RxCognitiveConsumptionService } from '../../cognitive-consumption.service';\nimport {\n  ICognitiveConsumptionChart,\n  ICognitiveConsumptionGroup,\n  ICognitiveConsumptionGroupData,\n  ICognitiveLicenseUsage,\n  ICognitiveLicenseUsageCount,\n  ICognitiveLicenseUsageParams\n} from '../../cognitive-consumption.types';\nimport { CognitiveConsumptionNotificationModalComponent } from '../cognitive-consumption-notification-modal/cognitive-consumption-notification-modal.component';\n\n@Component({\n  selector: 'rx-cognitive-consumption-group',\n  templateUrl: './cognitive-consumption-group.component.html',\n  styleUrls: ['./cognitive-consumption-group.component.scss']\n})\nexport class CognitiveConsumptionGroupComponent implements OnInit {\n  @Input()\n  group: ICognitiveConsumptionGroup;\n\n  @Input()\n  isAdministrator: boolean;\n\n  @Input()\n  sectionId: string;\n\n  busy: BusyConfig['busy'];\n  charts: ICognitiveConsumptionChart[];\n  groupData: ICognitiveConsumptionGroupData;\n  licenceUsageCount: ICognitiveLicenseUsageCount[];\n\n  parameters: ICognitiveLicenseUsageParams = {\n    startDate: '',\n    endDate: moment().format('YYYY-MM'),\n    countType: RX_COGNITIVE_CONSUMPTION.settings.countType\n  };\n\n  constructor(\n    private rxModalService: RxModalService,\n    private rxCognitiveConsumptionService: RxCognitiveConsumptionService,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit() {\n    this.generateCognitiveConsumptionGroup();\n  }\n\n  generateCognitiveConsumptionGroup(): void {\n    this.licenceUsageCount = [];\n    this.groupData = omit(this.group, ['charts']);\n\n    this.parameters.startDate = moment(this.parameters.endDate, 'YYYY-MM')\n      .add(-1 * 36, 'months')\n      .format('YYYY-MM');\n\n    this.busy = this.rxCognitiveConsumptionService\n      .getCognitiveLicenseUsage(RX_COGNITIVE_CONSUMPTION.settings.licenseType, this.group.id, this.parameters)\n      .subscribe((licenseUsage: ICognitiveLicenseUsage) => {\n        forEach(licenseUsage.licenseUsageCount, (licenseUsageCount) => {\n          if (licenseUsageCount && !isEmpty(licenseUsageCount.count)) {\n            this.licenceUsageCount.push(licenseUsageCount);\n          }\n        });\n      });\n  }\n\n  onNotificationsClick(): void {\n    this.rxModalService\n      .openModal({\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.cognitive-consumption-group.add-edit-notifications.title'\n        ),\n        content: CognitiveConsumptionNotificationModalComponent,\n        size: 'rx-lg',\n        data: {\n          groupId: this.group.id\n        }\n      })\n      .catch(noop);\n  }\n}\n","<button\n  *ngIf=\"isAdministrator\"\n  class=\"d-icon-envelope_o mb-4\"\n  adapt-button\n  btn-type=\"tertiary\"\n  type=\"button\"\n  rx-id=\"notifications-button\"\n  (click)=\"onNotificationsClick()\"\n>\n  {{ 'com.bmc.arsys.rx.client.admin.cognitive-consumption-group.notifications.label' | translate }}\n</button>\n\n<div class=\"d-flex flex-row flex-wrap\">\n  <div class=\"card mb-4 mr-4 placeholder\" *ngFor=\"let chart of group.charts\">\n    <div class=\"card-block p-4\">\n      <rx-busy-indicator [options]=\"{ busy: busy, loaderType: 'section' }\"></rx-busy-indicator>\n\n      <div *ngIf=\"licenceUsageCount.length\">\n        <rx-cognitive-consumption-chart\n          [chart]=\"chart\"\n          [groupData]=\"groupData\"\n          [licenceUsageCount]=\"licenceUsageCount\"\n        ></rx-cognitive-consumption-chart>\n      </div>\n\n      <div *ngIf=\"!licenceUsageCount.length\">\n        <h5 class=\"m-0\">{{ chart.title | translate }}</h5>\n        <div class=\"mt-6 pt-4\">\n          <adapt-empty-state\n            type=\"chart\"\n            label=\"{{ 'com.bmc.arsys.rx.client.empty-state.no-data-to-display.label' | translate }}\"\n          ></adapt-empty-state>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter, find, includes, noop } from 'lodash';\nimport { AdaptModalService } from '@bmc-ux/adapt-angular';\nimport { ILicenseDataPageResult, RxCurrentUserService, RxLicenseDataPageService } from '@helix/platform/shared/api';\nimport { RX_COGNITIVE_CONSUMPTION } from './cognitive-consumption.constant';\nimport { ChartGroup, ICognitiveConsumptionSection } from './cognitive-consumption.types';\nimport { DownloadReportModalComponent } from './components/download-report-modal/download-report-modal.component';\nimport { CognitiveConsumptionGroupComponent } from './components/cognitive-consumption-group/cognitive-consumption-group.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-cognitive-consumption',\n  templateUrl: './cognitive-consumption.component.html'\n})\nexport class CognitiveConsumptionAdminComponent implements OnInit {\n  @ViewChildren(CognitiveConsumptionGroupComponent)\n  cognitiveConsumptionGroups: QueryList<CognitiveConsumptionGroupComponent>;\n\n  busy: Subscription;\n  isAdministrator: boolean;\n  sectionIds: string[];\n  sections: ICognitiveConsumptionSection[];\n\n  constructor(\n    private adaptModalService: AdaptModalService,\n    private rxLicenseDataPageService: RxLicenseDataPageService,\n    private rxCurrentUserService: RxCurrentUserService,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit() {\n    this.isAdministrator = this.rxCurrentUserService.isAdministrator();\n\n    this.busy = this.rxLicenseDataPageService\n      .get({\n        params: {\n          startIndex: -1,\n          pageSize: 0,\n          propertySelection: ['name', 'serviceLicensedCount'].join(',')\n        }\n      })\n      .subscribe((result: ILicenseDataPageResult) => {\n        const isHelixCognitiveChatbotPerUserLicensed = find(result.data[0].serviceLicenseDescriptors, [\n          'name',\n          'HelixCognitiveChatbotPerUser'\n        ]).licensed;\n\n        this.sectionIds = [\n          isHelixCognitiveChatbotPerUserLicensed ? ChartGroup.ChatByUser : ChartGroup.Chat,\n          ChartGroup.Classify,\n          ChartGroup.Search\n        ];\n\n        this.sections = filter(RX_COGNITIVE_CONSUMPTION.sections, (section) => includes(this.sectionIds, section.id));\n      });\n  }\n\n  onDownloadClick(): void {\n    this.adaptModalService\n      .open({\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.cognitive-consumption.download-csv-file.title'\n        ),\n        type: 'default',\n        size: 'sm',\n        content: DownloadReportModalComponent,\n        data: {\n          sectionIds: this.sectionIds\n        }\n      })\n      .catch(noop);\n  }\n\n  onRefreshClick(): void {\n    this.cognitiveConsumptionGroups.forEach((cognitiveConsumptionGroup) => {\n      cognitiveConsumptionGroup.generateCognitiveConsumptionGroup();\n    });\n  }\n}\n","<rx-admin-settings\n  header=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-consumption.header.title' | translate }}\"\n  [busy]=\"busy\"\n>\n  <div class=\"mb-4\">\n    <button\n      class=\"d-icon-refresh_adapt\"\n      adapt-button\n      btn-type=\"tertiary\"\n      type=\"button\"\n      rx-id=\"refresh-button\"\n      (click)=\"onRefreshClick()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.refresh.label' | translate }}\n    </button>\n\n    <button\n      class=\"d-icon-download_csv\"\n      adapt-button\n      btn-type=\"tertiary\"\n      type=\"button\"\n      rx-id=\"download-button\"\n      (click)=\"onDownloadClick()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.download.label' | translate }}\n    </button>\n  </div>\n\n  <div *ngFor=\"let section of sections\">\n    <h4 class=\"m-0 mb-4\">{{ section.title | translate }}</h4>\n\n    <rx-cognitive-consumption-group\n      *ngFor=\"let group of section.groups\"\n      [group]=\"group\"\n      [sectionId]=\"section.id\"\n      [isAdministrator]=\"isAdministrator\"\n    >\n    </rx-cognitive-consumption-group>\n  </div>\n</rx-admin-settings>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport {\n  AdaptButtonModule,\n  AdaptEmptyStateModule,\n  AdaptModalModule,\n  AdaptRxCounterModule,\n  AdaptRxDatetimeModule,\n  AdaptRxListBuilderModule,\n  AdaptRxRadiobuttonModule\n} from '@bmc-ux/adapt-angular';\nimport { AdaptChartsModule } from '@bmc-ux/adapt-charts';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxBusyIndicatorModule, RxDirectivesModule } from '@helix/platform/ui-kit';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { CognitiveConsumptionAdminComponent } from './cognitive-consumption.component';\nimport { CognitiveConsumptionChartComponent } from './components/cognitive-consumption-chart/cognitive-consumption-chart.component';\nimport { CognitiveConsumptionGroupComponent } from './components/cognitive-consumption-group/cognitive-consumption-group.component';\nimport { CognitiveConsumptionNotificationHistoryModalComponent } from './components/cognitive-consumption-notification-history-modal/cognitive-consumption-notification-history-modal.component';\nimport { CognitiveConsumptionNotificationModalComponent } from './components/cognitive-consumption-notification-modal/cognitive-consumption-notification-modal.component';\nimport { DownloadReportModalComponent } from './components/download-report-modal/download-report-modal.component';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [\n    CognitiveConsumptionAdminComponent,\n    CognitiveConsumptionChartComponent,\n    CognitiveConsumptionGroupComponent,\n    CognitiveConsumptionNotificationHistoryModalComponent,\n    CognitiveConsumptionNotificationModalComponent,\n    DownloadReportModalComponent\n  ],\n  imports: [\n    AdaptButtonModule,\n    AdaptChartsModule,\n    AdaptEmptyStateModule,\n    AdaptModalModule,\n    AdaptRxCounterModule,\n    AdaptRxDatetimeModule,\n    AdaptRxListBuilderModule,\n    AdaptRxRadiobuttonModule,\n    AdminSettingsModule,\n    CommonModule,\n    RecordGridModule,\n    RxBusyIndicatorModule,\n    RxDirectivesModule,\n    FormsModule,\n    TranslateModule\n  ],\n  entryComponents: [\n    CognitiveConsumptionAdminComponent,\n    CognitiveConsumptionNotificationHistoryModalComponent,\n    CognitiveConsumptionNotificationModalComponent,\n    DownloadReportModalComponent\n  ]\n})\nexport class CognitiveConsumptionRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-cognitive-consumption',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(CognitiveConsumptionAdminComponent),\n      name: 'Cognitive consumption',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","export const RX_COGNITIVE_SEARCH = {\n  definitionName: 'Cognitive Service Data Set Descriptor',\n  resourceType: 'com.bmc.arsys.rx.services.cognitive.domain.SearchDataSource',\n  queryExpression: \"'1732' = 2 AND '61001' = \",\n  defaultLocale: 'en',\n  maxCollectionsPerProject: 5,\n\n  datasetTypes: {\n    bmcHelixPlatForm: 0,\n    external: 10\n  },\n\n  searchDatasetTypeOptions: [\n    {\n      displayName: 'com.bmc.arsys.rx.client.admin.cognitive-search.bmc-helix-platform-data-set.label',\n      datasetType: 0\n    },\n    {\n      displayName: 'com.bmc.arsys.rx.client.admin.cognitive-search.external-data-set.label',\n      datasetType: 10\n    }\n  ],\n\n  externalDatasetSourceTypes: {\n    rkm: '10',\n    other: '20'\n  },\n\n  fields: {\n    datasetId: 1730,\n    datasetName: 1731,\n    searchType: 1732,\n    datasetError: 1733,\n    dateLastSubmitted: 1735,\n    bundleId: 61001,\n    locale: 1737,\n    dataSource: 1738,\n    newDatasetId: 1740,\n    searchDatasetType: 1815,\n    externalDatasetSource: 1817,\n    confidenceThreshold: 1821,\n    projectId: 1832\n  },\n\n  datasetStatus: {\n    failed: {\n      id: 3,\n      label: 'com.bmc.arsys.rx.client.admin.cognitive-search.failed.label',\n      variant: 'danger'\n    },\n    inProgress: {\n      id: 5,\n      label: 'com.bmc.arsys.rx.client.admin.cognitive-search.in-progress.label',\n      variant: 'info'\n    },\n    created: {\n      id: 6,\n      label: 'com.bmc.arsys.rx.client.admin.cognitive-search.created.label',\n      variant: 'success'\n    }\n  },\n\n  templateFields: {\n    templateType: 1818\n  },\n\n  templateTypes: {\n    webChannel: '10',\n    nonWebChannel: '20'\n  },\n\n  templateDefinitionName: 'Cognitive Service Chatbot Knowledge Article Template',\n  templateAssociationDefinitionName:\n    'Cognitive Service Data Set To Cognitive Service Chatbot Knowledge Article Template'\n};\n","import { Injectable, Injector } from '@angular/core';\nimport { DataPage } from '@helix/platform/shared/api';\n\nconst dataPageType = 'com.bmc.arsys.rx.application.cognitive.datapage.CognitiveSearchProjectDataPageQuery';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxCognitiveSearchProjectDataPageService extends DataPage {\n  constructor(private injector: Injector) {\n    super(injector, dataPageType);\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { DataPage } from '@helix/platform/shared/api';\n\nconst dataPageType = 'com.bmc.arsys.rx.application.cognitive.datapage.CognitiveSearchCollectionDataPageQuery';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxCognitiveSearchCollectionDataPageService extends DataPage {\n  constructor(private injector: Injector) {\n    super(injector, dataPageType);\n  }\n}\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors } from '@angular/forms';\nimport {\n  Alert,\n  ColorVariantType,\n  DismissReasons,\n  DockedPanelContext,\n  RxSelectOption,\n  LoaderType,\n  BusyConfig\n} from '@bmc-ux/adapt-angular';\nimport {\n  IRxRecordInstanceAssociationInstances,\n  RecordInstance,\n  RX_RECORD_DEFINITION,\n  RxRecordInstanceService\n} from '@helix/platform/record/api';\nimport { RxBundleCacheService, RxNotificationService } from '@helix/platform/shared/api';\nimport { IDefinitionPickerComponentOptions, RxDefinitionPickerType } from '@helix/platform/shared/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { find, set } from 'lodash';\nimport moment from 'moment-es6';\nimport { RX_COGNITIVE_SEARCH } from '../cognitive-search.constant';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { RxCognitiveSearchProjectDataPageService } from '../cognitive-search-project-data-page.service';\nimport { RxCognitiveSearchCollectionDataPageService } from '../cognitive-search-collection-data-page.service';\nimport { ICognitiveSearchData } from '../cognitive-search.interfaces';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  shareReplay,\n  startWith,\n  switchMap,\n  tap,\n  withLatestFrom\n} from 'rxjs/operators';\nimport { forkJoin, Observable } from 'rxjs';\n\n@Component({\n  selector: 'rx-cognitive-search-editor',\n  templateUrl: './cognitive-search-editor.component.html'\n})\nexport class CognitiveSearchEditorAdminComponent extends RxModalClass implements OnInit {\n  searchDatasetForm: FormGroup;\n  isEditMode: boolean;\n  statusAlert: Alert;\n  failedReasonAlert: Alert;\n  busyConfig: BusyConfig;\n  projects$: Observable<ICognitiveSearchData[]>;\n  collections$: Observable<ICognitiveSearchData[]>;\n\n  externalDatasetSourceOptions: RxSelectOption[] = [\n    {\n      value: '10',\n      displayValue: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.rkm.label')\n    },\n    {\n      value: '20',\n      displayValue: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.other.label')\n    }\n  ];\n\n  options: IDefinitionPickerComponentOptions = {\n    label: this.translateService.instant('com.bmc.arsys.rx.client.common.record-definition-name.label'),\n    definitionType: RxDefinitionPickerType.Record,\n    required: true\n  };\n\n  searchLocaleOptions: string[] = ['en', 'ar', 'fr', 'de', 'ja', 'it', 'pt', 'es'];\n  private datasetType: number;\n  private recordInstance: RecordInstance;\n  private formatDataSource: (dataSource: string) => string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dockedPanelContext: DockedPanelContext,\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private rxNotificationService: RxNotificationService,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxCognitiveSearchProjectDataPageService: RxCognitiveSearchProjectDataPageService,\n    private rxCognitiveSearchCollectionDataPageService: RxCognitiveSearchCollectionDataPageService,\n    private translateService: TranslateService,\n    protected injector: Injector\n  ) {\n    super(dockedPanelContext, injector);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.isEditMode = this.dockedPanelContext.getData().isEditMode;\n    this.datasetType = this.dockedPanelContext.getData().datasetType;\n    this.formatDataSource = this.dockedPanelContext.getData().formatDataSource;\n\n    this.searchDatasetForm = this.formBuilder.group({\n      datasetName: null,\n      description: null,\n      locale: [],\n      recordDefinition: null,\n      projectId: [],\n      collectionId: [],\n      externalDatasetSource: [],\n      confidenceThreshold: 0\n    });\n\n    this.collections$ = this.searchDatasetForm.controls.projectId.valueChanges.pipe(\n      distinctUntilChanged(),\n      map((selection: ICognitiveSearchData[]) => (this.isExternalDataset() ? selection?.[0] : null)),\n      filter(Boolean),\n      switchMap((project: ICognitiveSearchData) =>\n        this.rxCognitiveSearchCollectionDataPageService.get({\n          params: { projectId: project.id }\n        })\n      ),\n      map((dataPage) => dataPage.data.sort((a, b) => a.name.localeCompare(b.name)) as ICognitiveSearchData[]),\n      startWith([]),\n      tap((collections) => {\n        if (!this.isEditMode && this.isExternalDataset()) {\n          this.searchDatasetForm.controls.collectionId.setValue([]);\n          collections.length\n            ? this.searchDatasetForm.controls.collectionId.enable()\n            : this.searchDatasetForm.controls.collectionId.disable();\n        }\n      })\n    );\n\n    this.projects$ = this.rxCognitiveSearchProjectDataPageService.get().pipe(\n      map((dataPage) => dataPage.data.sort((a, b) => a.name.localeCompare(b.name)) as ICognitiveSearchData[]),\n      startWith([]),\n      shareReplay(1),\n      tap(() => {\n        if (!this.isEditMode) {\n          this.searchDatasetForm.controls.projectId.enable();\n        }\n      }),\n      map((projects) =>\n        !this.isEditMode && this.isHelixPlatformDataset()\n          ? projects.filter((project) => project.collectionCount < RX_COGNITIVE_SEARCH.maxCollectionsPerProject)\n          : projects\n      )\n    );\n\n    if (this.isEditMode) {\n      this.searchDatasetForm.get('datasetName').disable();\n      this.searchDatasetForm.get('description').disable();\n      this.searchDatasetForm.get('locale').disable();\n      this.searchDatasetForm.get('recordDefinition').disable();\n      this.searchDatasetForm.get('projectId').disable();\n      this.searchDatasetForm.get('collectionId').disable();\n      this.searchDatasetForm.get('externalDatasetSource').disable();\n\n      const recordInstance$ = this.rxRecordInstanceService\n        .get(RX_COGNITIVE_SEARCH.definitionName, this.dockedPanelContext.getData().recordId)\n        .pipe(tap((recordInstance) => (this.recordInstance = recordInstance)));\n\n      const subscription = forkJoin([recordInstance$, this.projects$])\n        .pipe(\n          switchMap(([recordInstance, projects]) => {\n            const projectId = recordInstance.fieldInstances[RX_COGNITIVE_SEARCH.fields.projectId].value;\n            const project = projects.find((project) => project.id === projectId);\n\n            if (project) {\n              this.searchDatasetForm.controls.projectId.setValue([project]);\n            } else {\n              this.searchDatasetForm.controls.projectId.setValue(\n                [\n                  {\n                    name: this.translateService.instant(\n                      'com.bmc.arsys.rx.client.admin.cognitive-search.project-not-found.label'\n                    ),\n                    id: projectId\n                  }\n                ],\n                { emitEvent: false }\n              );\n            }\n\n            return project\n              ? this.rxCognitiveSearchCollectionDataPageService.get({ params: { projectId } })\n              : this.rxCognitiveSearchCollectionDataPageService.getEmptyDataPage();\n          }),\n          map((dataPage) => dataPage.data as ICognitiveSearchData[]),\n          withLatestFrom(recordInstance$)\n        )\n        .subscribe(([collections, recordInstance]) => {\n          const collectionId = recordInstance.fieldInstances[RX_COGNITIVE_SEARCH.fields.datasetId].value;\n          const selectedCollection = collections.find((collection) => collection.id === collectionId);\n\n          this.searchDatasetForm.controls.collectionId.setValue([\n            selectedCollection || {\n              name: this.translateService.instant(\n                'com.bmc.arsys.rx.client.admin.cognitive-search.collection-not-found.label'\n              ),\n              id: collectionId\n            }\n          ]);\n\n          this.setFormControlValues();\n        });\n\n      this.busyConfig = {\n        busy: subscription,\n        loaderType: LoaderType.SECTION,\n        message: 'Loading'\n      };\n    } else {\n      this.searchDatasetForm.get('locale').setValue([this.searchLocaleOptions[0]]);\n      this.searchDatasetForm.get('confidenceThreshold').setValue(0);\n      this.searchDatasetForm.get('projectId').disable();\n      this.searchDatasetForm.get('collectionId').disable();\n\n      if (this.isHelixPlatformDataset()) {\n        this.searchDatasetForm.get('externalDatasetSource').disable();\n      } else if (this.isExternalDataset()) {\n        this.searchDatasetForm.get('recordDefinition').disable();\n\n        this.searchDatasetForm\n          .get('externalDatasetSource')\n          .setValue([\n            find(this.externalDatasetSourceOptions, { value: RX_COGNITIVE_SEARCH.externalDatasetSourceTypes.rkm })\n          ]);\n      }\n\n      this.rxRecordInstanceService\n        .getNew(RX_COGNITIVE_SEARCH.definitionName)\n        .subscribe((recordInstance: RecordInstance) => (this.recordInstance = recordInstance));\n    }\n  }\n\n  isDirty(): boolean {\n    return this.searchDatasetForm.dirty;\n  }\n\n  isHelixPlatformDataset(): boolean {\n    return this.datasetType === RX_COGNITIVE_SEARCH.datasetTypes.bmcHelixPlatForm;\n  }\n\n  isExternalDataset(): boolean {\n    return this.datasetType === RX_COGNITIVE_SEARCH.datasetTypes.external;\n  }\n\n  private setFormControlValues(): void {\n    const status = find(RX_COGNITIVE_SEARCH.datasetStatus, {\n      id: this.recordInstance.fieldInstances[RX_RECORD_DEFINITION.coreFieldIds.status].value\n    });\n\n    this.statusAlert = {\n      content: this.translateService.instant(status.label),\n      type: 'inline',\n      variant: status.variant as ColorVariantType\n    };\n\n    this.failedReasonAlert = this.recordInstance.fieldInstances[RX_COGNITIVE_SEARCH.fields.datasetError].value\n      ? {\n          content: this.recordInstance.fieldInstances[RX_COGNITIVE_SEARCH.fields.datasetError].value,\n          type: 'page',\n          variant: 'warning',\n          dismissible: false\n        }\n      : null;\n\n    this.searchDatasetForm\n      .get('datasetName')\n      .setValue(this.recordInstance.fieldInstances[RX_COGNITIVE_SEARCH.fields.datasetName].value);\n\n    this.searchDatasetForm\n      .get('description')\n      .setValue(this.recordInstance.fieldInstances[RX_RECORD_DEFINITION.coreFieldIds.description].value);\n\n    this.searchDatasetForm\n      .get('locale')\n      .setValue([this.recordInstance.fieldInstances[RX_COGNITIVE_SEARCH.fields.locale].value]);\n\n    if (this.isHelixPlatformDataset()) {\n      this.searchDatasetForm\n        .get('recordDefinition')\n        .setValue(\n          this.formatDataSource(this.recordInstance.fieldInstances[RX_COGNITIVE_SEARCH.fields.dataSource].value)\n        );\n    } else if (this.isExternalDataset()) {\n      this.searchDatasetForm.get('externalDatasetSource').setValue([\n        find(this.externalDatasetSourceOptions, {\n          value: String(this.recordInstance.fieldInstances[RX_COGNITIVE_SEARCH.fields.externalDatasetSource].value)\n        })\n      ]);\n    }\n\n    this.searchDatasetForm\n      .get('confidenceThreshold')\n      .setValue(this.recordInstance.fieldInstances[RX_COGNITIVE_SEARCH.fields.confidenceThreshold].value);\n  }\n\n  optionFormatter(option: RxSelectOption): string {\n    return option.displayValue || option.name;\n  }\n\n  thresholdRangeValidator(): (control: AbstractControl) => ValidationErrors | null {\n    return (control: AbstractControl) => {\n      return control.value && !/^(0(\\.[0-9]{1,6})?)|^(1(\\.0{1,6})?)$/.test(control.value)\n        ? {\n            thresholdOutOfRange: {\n              message: this.translateService.instant(\n                'com.bmc.arsys.rx.client.admin.cognitive-search.range-validation.message'\n              )\n            }\n          }\n        : null;\n    };\n  }\n\n  saveSearchDataset(): void {\n    this.searchDatasetForm.markAsPristine();\n\n    if (!this.isEditMode) {\n      this.recordInstance.fieldInstances[RX_COGNITIVE_SEARCH.fields.searchType].value = this.translateService.instant(\n        'com.bmc.arsys.rx.client.common.search.label'\n      );\n\n      this.recordInstance.setFieldValue(\n        RX_RECORD_DEFINITION.coreFieldIds.status,\n        RX_COGNITIVE_SEARCH.datasetStatus.inProgress.id\n      );\n\n      this.recordInstance.setFieldValue(\n        RX_RECORD_DEFINITION.coreFieldIds.description,\n        this.searchDatasetForm.get('description').value\n      );\n\n      this.recordInstance.setFieldValue(RX_COGNITIVE_SEARCH.fields.datasetId, '');\n\n      this.recordInstance.fieldInstances[RX_COGNITIVE_SEARCH.fields.datasetId].value =\n        this.recordInstance.setFieldValue(\n          RX_COGNITIVE_SEARCH.fields.datasetName,\n          this.searchDatasetForm.get('datasetName').value\n        );\n\n      this.recordInstance.setFieldValue(RX_COGNITIVE_SEARCH.fields.bundleId, this.rxBundleCacheService.bundleId);\n\n      this.recordInstance.setFieldValue(\n        RX_COGNITIVE_SEARCH.fields.locale,\n        this.searchDatasetForm.get('locale').value[0]\n      );\n\n      this.recordInstance.setFieldValue(RX_COGNITIVE_SEARCH.fields.dateLastSubmitted, moment());\n      this.recordInstance.setFieldValue(RX_COGNITIVE_SEARCH.fields.searchDatasetType, this.datasetType);\n\n      this.recordInstance.setFieldValue(RX_COGNITIVE_SEARCH.fields.projectId, [\n        this.searchDatasetForm.get('projectId').value[0].id\n      ]);\n\n      if (this.isExternalDataset()) {\n        this.recordInstance.setFieldValue(RX_COGNITIVE_SEARCH.fields.datasetId, [\n          this.searchDatasetForm.get('collectionId').value[0].id\n        ]);\n\n        this.recordInstance.setFieldValue(\n          RX_COGNITIVE_SEARCH.fields.externalDatasetSource,\n          this.searchDatasetForm.get('externalDatasetSource').value[0].value\n        );\n      } else if (this.isHelixPlatformDataset()) {\n        this.recordInstance.setFieldValue(\n          RX_COGNITIVE_SEARCH.fields.dataSource,\n          JSON.stringify({\n            resourceType: RX_COGNITIVE_SEARCH.resourceType,\n            recordDefinitions: [this.searchDatasetForm.get('recordDefinition').value]\n          })\n        );\n      }\n\n      this.recordInstance.associationInstances = this.prepareAssociatedRecordInstance(\n        this.recordInstance.fieldInstances[RX_COGNITIVE_SEARCH.fields.datasetName].value\n      );\n    }\n\n    this.recordInstance.setFieldValue(\n      RX_COGNITIVE_SEARCH.fields.confidenceThreshold,\n      this.searchDatasetForm.get('confidenceThreshold').value\n    );\n\n    if (this.isEditMode) {\n      this.rxRecordInstanceService.save(this.recordInstance).subscribe(() => this.successCallback());\n    } else {\n      this.rxRecordInstanceService.create(this.recordInstance).subscribe(() => this.successCallback());\n    }\n  }\n\n  private successCallback(): void {\n    this.rxNotificationService.addSuccessMessage(\n      this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.cognitive-search.search-data-save-successful.message'\n      )\n    );\n\n    this.dockedPanelContext.close(null);\n  }\n\n  private prepareAssociatedRecordInstance(datasetName: string): IRxRecordInstanceAssociationInstances {\n    const associationOperations = set({}, 'nodeB', {\n      pending: [\n        {\n          recordDefinitionName: RX_COGNITIVE_SEARCH.templateDefinitionName,\n          isNewInstance: true,\n          id: RX_COGNITIVE_SEARCH.templateFields.templateType,\n          fieldInstances: {\n            [RX_COGNITIVE_SEARCH.templateFields.templateType]: {\n              id: RX_COGNITIVE_SEARCH.templateFields.templateType,\n              value: RX_COGNITIVE_SEARCH.templateTypes.webChannel\n            },\n            [RX_RECORD_DEFINITION.coreFieldIds.description]: {\n              id: RX_RECORD_DEFINITION.coreFieldIds.description,\n              value: 'Template for ' + datasetName\n            }\n          }\n        },\n        {\n          recordDefinitionName: RX_COGNITIVE_SEARCH.templateDefinitionName,\n          isNewInstance: true,\n          id: RX_COGNITIVE_SEARCH.templateFields.templateType,\n          fieldInstances: {\n            [RX_COGNITIVE_SEARCH.templateFields.templateType]: {\n              id: RX_COGNITIVE_SEARCH.templateFields.templateType,\n              value: RX_COGNITIVE_SEARCH.templateTypes.nonWebChannel\n            },\n            [RX_RECORD_DEFINITION.coreFieldIds.description]: {\n              id: RX_RECORD_DEFINITION.coreFieldIds.description,\n              value: 'Template for ' + datasetName\n            }\n          }\n        }\n      ]\n    });\n\n    return set({}, RX_COGNITIVE_SEARCH.templateAssociationDefinitionName, associationOperations);\n  }\n\n  cancel(): void {\n    this.dockedPanelContext.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"dp-body\" [ngBusy]=\"busyConfig\">\n  <div class=\"mb-1\" *ngIf=\"isEditMode && statusAlert\">\n    <label class=\"form-control-label\">\n      {{ 'com.bmc.arsys.rx.client.admin.cognitive-search.status.label' | translate }}\n    </label>\n    <adapt-alert [config]=\"statusAlert\"></adapt-alert>\n  </div>\n\n  <div class=\"mb-1\" *ngIf=\"isEditMode && failedReasonAlert\">\n    <label class=\"form-control-label\">\n      {{ 'com.bmc.arsys.rx.client.common.error.label' | translate }}\n    </label>\n    <adapt-alert [config]=\"failedReasonAlert\"></adapt-alert>\n  </div>\n\n  <form [formGroup]=\"searchDatasetForm\">\n    <adapt-rx-textfield\n      class=\"form-group d-block\"\n      rx-id=\"dataset-name\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-search.data-set-name.label' | translate }}\"\n      formControlName=\"datasetName\"\n      required=\"true\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-textfield\n      class=\"form-group d-block\"\n      rx-id=\"description\"\n      label=\"{{ 'com.bmc.arsys.rx.client.common.description.label' | translate }}\"\n      formControlName=\"description\"\n      required=\"true\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-select\n      class=\"form-group d-block\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-search.locale.label' | translate }}\"\n      rx-id=\"locale\"\n      formControlName=\"locale\"\n      [options]=\"searchLocaleOptions\"\n      required=\"true\"\n    >\n    </adapt-rx-select>\n\n    <adapt-rx-select\n      class=\"form-group d-block\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-search.project-id.label' | translate }}\"\n      rx-id=\"project-id\"\n      formControlName=\"projectId\"\n      [options]=\"projects$ | async\"\n      [optionFormatter]=\"optionFormatter\"\n      required=\"true\"\n      [tooltip]=\"\n        isHelixPlatformDataset()\n          ? {\n              iconName: 'question_circle_o',\n              content: 'com.bmc.arsys.rx.client.admin.cognitive-search.project-id.tooltip' | translate,\n              placement: 'right',\n              popoverMode: true\n            }\n          : null\n      \"\n    >\n    </adapt-rx-select>\n\n    <rx-definition-picker\n      *ngIf=\"isHelixPlatformDataset()\"\n      class=\"form-group d-block\"\n      [options]=\"options\"\n      formControlName=\"recordDefinition\"\n      rx-id=\"record-definition\"\n      required=\"true\"\n    >\n    </rx-definition-picker>\n\n    <adapt-rx-select\n      *ngIf=\"isExternalDataset()\"\n      class=\"form-group d-block\"\n      rx-id=\"collection-id\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-search.collection-id.label' | translate }}\"\n      formControlName=\"collectionId\"\n      [options]=\"collections$ | async\"\n      [optionFormatter]=\"optionFormatter\"\n      required=\"true\"\n    >\n    </adapt-rx-select>\n\n    <adapt-rx-select\n      *ngIf=\"isExternalDataset()\"\n      class=\"form-group d-block\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-search.external-data-set-source.label' | translate }}\"\n      rx-id=\"external-data-set-source\"\n      formControlName=\"externalDatasetSource\"\n      [options]=\"externalDatasetSourceOptions\"\n      [optionFormatter]=\"optionFormatter\"\n      required=\"true\"\n    >\n    </adapt-rx-select>\n\n    <adapt-rx-counter\n      adaptRange\n      class=\"form-group d-block\"\n      rx-id=\"confidence-threshold\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-search.confidence-threshold.label' | translate }}\"\n      [max]=\"1\"\n      [min]=\"0\"\n      [formControl]=\"searchDatasetForm.controls.confidenceThreshold\"\n      [rxCustomValidators]=\"thresholdRangeValidator()\"\n      [step]=\"0.1\"\n      [tooltip]=\"{\n        iconName: 'question_circle_o',\n        content: popoverContent,\n        placement: 'right',\n        popoverMode: true\n      }\"\n    >\n    </adapt-rx-counter>\n  </form>\n</div>\n\n<div class=\"dp-footer\">\n  <button\n    type=\"button\"\n    adapt-button\n    btn-type=\"primary\"\n    rx-id=\"save-button\"\n    class=\"mr-2\"\n    [disabled]=\"searchDatasetForm.pristine || searchDatasetForm.invalid\"\n    (click)=\"saveSearchDataset()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button type=\"button\" adapt-button (click)=\"cancel()\" btn-type=\"secondary\" rx-id=\"cancel-button\">Cancel</button>\n</div>\n\n<ng-template #popoverContent>\n  <div\n    style=\"white-space: pre-wrap\"\n    [innerHTML]=\"'com.bmc.arsys.rx.client.admin.cognitive-search.data-set-range.tooltip' | translate\"\n  ></div>\n</ng-template>\n","import { Component, ElementRef, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { DataCellTemplateParams } from '@bmc-ux/adapt-table';\nimport {\n  RX_RECORD_DEFINITION,\n  RxRecordInstanceService,\n  RxRecordInstanceDataPageService\n} from '@helix/platform/record/api';\nimport {\n  IDataPageResult,\n  RxBundleCacheService,\n  RxCurrentUserService,\n  RxDefinitionNameService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport {\n  IRecordGridColumn,\n  IRecordGridConfig,\n  IRecordGridDataPageParams,\n  RecordGridComponent,\n  RowSelectionMode\n} from '@helix/platform/view/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { find, map, noop, omit } from 'lodash';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { CognitiveSearchEditorAdminComponent } from './cognitive-search-editor/cognitive-search-editor.component';\nimport { RX_COGNITIVE_SEARCH } from './cognitive-search.constant';\nimport { ISearchDataset } from './cognitive-search.interfaces';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\n\n@Component({\n  selector: 'rx-cognitive-search',\n  templateUrl: './cognitive-search.component.html'\n})\nexport class CognitiveSearchAdminComponent extends BaseViewComponent implements OnInit {\n  gridConfig: Observable<IRecordGridConfig>;\n  searchDatasetTypes: ISearchDataset[];\n\n  @ViewChild('grid', { static: true })\n  grid: RecordGridComponent;\n\n  @ViewChild('dropdownButton', { static: true })\n  dropdownButton: ElementRef;\n\n  @ViewChild('searchDatasetConfigurationTemplate', { static: true })\n  searchDatasetConfigurationTemplate: TemplateRef<any>;\n\n  @ViewChild('definitionNameCellTemplate', { static: true })\n  definitionNameCellTemplate: TemplateRef<DataCellTemplateParams>;\n\n  @ViewChild('datasetTypeTemplate', { static: true })\n  datasetTypeTemplate: TemplateRef<DataCellTemplateParams>;\n\n  isAdministrator: boolean = this.rxCurrentUserService.isAdministrator();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private rxModalService: RxModalService,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxNotificationService: RxNotificationService,\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private translateService: TranslateService,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.searchDatasetTypes = RX_COGNITIVE_SEARCH.searchDatasetTypeOptions.map((dataSetType) => ({\n      ...dataSetType,\n      displayName: this.translateService.instant(dataSetType.displayName)\n    }));\n\n    this.gridConfig = of({\n      actionButtons: [\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n          style: 'tertiary',\n          icon: 'trash',\n          actions: [\n            {\n              name: this.deleteSearchDataset.bind(this)\n            }\n          ]\n        }\n      ],\n      enableFiltering: true,\n      recordDefinitionName: RX_COGNITIVE_SEARCH.definitionName,\n      enableRowSelection: RowSelectionMode.Multiple,\n      getData: (queryParams: IRecordGridDataPageParams) => this.getData(queryParams),\n      columns: this.getColumns(),\n      filterExpression: `${RX_COGNITIVE_SEARCH.queryExpression} \"${this.rxBundleCacheService.bundleId}\"`,\n      styles: 'flex-fill'\n    });\n  }\n\n  private getData(queryParams: IRecordGridDataPageParams): Observable<IDataPageResult> {\n    return this.rxRecordInstanceDataPageService.post({\n      params: {\n        ...omit(queryParams, ['searchText'])\n      }\n    });\n  }\n\n  createNewSearchDataset(datasetType: number): void {\n    this.openCognitiveSearchEditor(false, datasetType);\n  }\n\n  editSearchDataset(selectedRecord: IRowDataItem): void {\n    if (!this.isAdministrator) {\n      this.rxNotificationService.addWarningMessage(\n        this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.warning.message')\n      );\n    } else {\n      this.openCognitiveSearchEditor(\n        true,\n        selectedRecord[RX_COGNITIVE_SEARCH.fields.searchDatasetType],\n        selectedRecord[RX_RECORD_DEFINITION.coreFieldIds.id]\n      );\n    }\n  }\n\n  private deleteSearchDataset(): void {\n    this.rxModalService\n      .confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.cognitive-search.delete-confirmation.message'\n        )\n      })\n      .then((result: boolean) => {\n        if (result) {\n          const deleteRequests$: Observable<any>[] = [];\n\n          map(this.grid.api.getSelectedRows(), (record) => {\n            deleteRequests$.push(\n              this.rxRecordInstanceService.delete(\n                RX_COGNITIVE_SEARCH.definitionName,\n                record[RX_RECORD_DEFINITION.coreFieldIds.id]\n              )\n            );\n          });\n\n          forkJoin(deleteRequests$).subscribe(() => {\n            this.rxNotificationService.addSuccessMessage(\n              this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.data-set-deletion.message')\n            );\n\n            this.grid.api.refresh().subscribe();\n          });\n        }\n      });\n  }\n\n  formatDataSource(dataSource: string): string {\n    return dataSource\n      ? map(JSON.parse(dataSource).recordDefinitions, (recordDefinitionName) =>\n          this.rxDefinitionNameService.getDisplayName(recordDefinitionName)\n        ).join(', ')\n      : '';\n  }\n\n  getDatasetType(searchDatasetType: number): string {\n    return find(this.searchDatasetTypes, { datasetType: searchDatasetType }).displayName;\n  }\n\n  private getColumns(): IRecordGridColumn[] {\n    return [\n      {\n        index: 0,\n        fieldId: String(RX_COGNITIVE_SEARCH.fields.datasetName),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.data-set-name.label'),\n        clickable: true,\n        actions: [\n          {\n            name: (previousAction: any, selectedRow: IRowDataItem) => {\n              this.editSearchDataset(selectedRow);\n            }\n          }\n        ]\n      },\n      {\n        index: 1,\n        fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.status),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.status.label')\n      },\n      {\n        index: 2,\n        fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.description),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label')\n      },\n      {\n        index: 3,\n        fieldId: String(RX_COGNITIVE_SEARCH.fields.searchDatasetType),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.type.title'),\n        cellTemplate: this.datasetTypeTemplate\n      },\n      {\n        index: 4,\n        fieldId: String(RX_COGNITIVE_SEARCH.fields.locale),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.locale.label')\n      },\n      {\n        index: 5,\n        fieldId: String(RX_COGNITIVE_SEARCH.fields.dataSource),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.record-definition.label'),\n        cellTemplate: this.definitionNameCellTemplate\n      },\n      {\n        index: 6,\n        fieldId: String(RX_COGNITIVE_SEARCH.fields.confidenceThreshold),\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.cognitive-search.confidence-threshold.label'\n        )\n      },\n      {\n        index: 7,\n        fieldId: String(RX_COGNITIVE_SEARCH.fields.datasetId),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.data-set-id.title'),\n        visible: false\n      },\n      {\n        index: 8,\n        fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.modifiedDate),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.date-modified.title'),\n        visible: false\n      },\n      {\n        index: 9,\n        fieldId: String(RX_COGNITIVE_SEARCH.fields.searchType),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.search-type.title'),\n        visible: false\n      },\n      {\n        index: 10,\n        fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.displayId),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.request-id.title'),\n        visible: false\n      },\n      {\n        index: 11,\n        fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.id),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.instance-id.title'),\n        visible: false\n      },\n      {\n        index: 12,\n        fieldId: String(RX_COGNITIVE_SEARCH.fields.datasetError),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.error.label'),\n        visible: false\n      },\n      {\n        index: 13,\n        fieldId: String(RX_COGNITIVE_SEARCH.fields.projectId),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.project-id.title'),\n        visible: false\n      }\n    ];\n  }\n\n  private openCognitiveSearchEditor(isEditMode: boolean, datasetType: number, recordId?: string): Promise<any> {\n    return this.rxModalService\n      .openDockedPanel({\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.cognitive-search.cognitive-search-data-set.title'\n        ),\n        content: CognitiveSearchEditorAdminComponent,\n        data: {\n          isEditMode,\n          datasetType,\n          formatDataSource: this.formatDataSource.bind(this),\n          recordId\n        }\n      })\n      .then(() => {\n        this.grid.api.refresh().subscribe();\n      })\n      .catch(noop);\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-search.header.title' | translate }}\">\n  <ng-container>\n    <div class=\"dropdown\" adaptDropdown>\n      <button\n        adapt-button\n        #dropdownButton\n        adaptDropdownToggle\n        type=\"button\"\n        btn-type=\"tertiary\"\n        class=\"d-icon-plus_circle align-self-start\"\n        rx-id=\"new-button\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.new.label' | translate }}\n      </button>\n\n      <div class=\"dropdown-menu\" adaptDropdownMenu>\n        <button\n          *ngFor=\"let dataset of searchDatasetTypes\"\n          class=\"dropdown-item\"\n          (click)=\"createNewSearchDataset(dataset.datasetType)\"\n          [disabled]=\"!isAdministrator\"\n        >\n          {{ dataset.displayName | translate }}\n        </button>\n      </div>\n    </div>\n\n    <rx-record-grid #grid [config]=\"gridConfig\"></rx-record-grid>\n  </ng-container>\n</rx-admin-settings>\n\n<ng-template #definitionNameCellTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n  {{ formatDataSource(dataItem[column.field]) }}\n</ng-template>\n\n<ng-template #datasetTypeTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n  {{ getDatasetType(dataItem[column.field]) }}\n</ng-template>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { CognitiveSearchEditorAdminComponent } from './cognitive-search-editor/cognitive-search-editor.component';\nimport { CognitiveSearchAdminComponent } from './cognitive-search.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  AdaptAlertModule,\n  AdaptButtonModule,\n  AdaptDropdownModule,\n  AdaptRxCounterModule,\n  AdaptRxLabelModule,\n  AdaptRxSelectModule,\n  AdaptRxTextfieldModule,\n  AdaptRxValidatorsModule,\n  AdaptBusyModule\n} from '@bmc-ux/adapt-angular';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { RxDefinitionPickerModule } from '@helix/platform/shared/components';\nimport { RxDirectivesModule } from '@helix/platform/ui-kit';\n\n@NgModule({\n  declarations: [CognitiveSearchAdminComponent, CognitiveSearchEditorAdminComponent],\n  imports: [\n    CommonModule,\n    AdaptButtonModule,\n    AdaptDropdownModule,\n    AdaptRxCounterModule,\n    AdaptRxSelectModule,\n    AdaptRxTextfieldModule,\n    ReactiveFormsModule,\n    RecordGridModule,\n    RxDirectivesModule,\n    RxDefinitionPickerModule,\n    TranslateModule,\n    AdminSettingsModule,\n    AdaptRxLabelModule,\n    AdaptRxValidatorsModule,\n    AdaptAlertModule,\n    AdaptBusyModule\n  ],\n  entryComponents: [CognitiveSearchAdminComponent]\n})\nexport class CognitiveSearchRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-cognitive-search',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(CognitiveSearchAdminComponent),\n      name: 'Cognitive search',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","const passwordMask = '********';\nconst urlPattern = /^((http[s]?):\\/)\\/?([^:\\/\\s]+)((\\/\\w+)*\\/)?([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$/;\n\nexport const RX_COGNITIVE_SERVICE = {\n  passwordMask: passwordMask,\n  credentialsProvider: 'WATSON',\n  nativeProvider: 'NATIVE',\n  chatbot: {\n    chatContextVariablesProcessName: 'chatContextVariablesProcessName',\n    systemSettings: {\n      chatSessionIdleTimeout: 900,\n      chatUserIdleTimeout: 30,\n      chatbotNotificationsIdleTime: 900,\n      chatbotNotificationsMaxTime: 3600,\n      chatContextVariablesProcessName: '',\n      removePoweredByBmcHelix: 0\n    }\n  },\n  cognitiveAdministrationCredentials: {\n    systemSettingsKey: 'cognitiveAdminTenantCredential',\n    cognitiveAdminPlatformApiKey: 'cognitiveAdminPlatformApiKey',\n    payload: {\n      WATSON: {\n        cognitiveAdminPlatformApiKey: passwordMask\n      }\n    }\n  },\n  connections: {\n    systemSettingKeys: {\n      helixPortalUrl: 'helixPortalUrl',\n      helixServiceCredential: 'helixServiceCredential',\n      cognitiveServiceCredential: 'cognitiveServiceCredential',\n      classificationServiceProvider: 'classificationServiceProvider',\n      translationServiceProvider: 'translationServiceProvider',\n      serviceAccountCredential: 'gcpServiceCredential',\n      google: 'gcpTranslationServiceCredential',\n      microsoft: 'microsoftServiceCredential'\n    },\n    cognitiveServiceCredentialKeys: {\n      classification: 'naturalLanguageClassifierAPIKey',\n      discovery: 'searchAPIKey',\n      toneAnalyzer: 'toneAnalyzerAPIKey'\n    },\n    payload: {\n      helixClassifierKey: '',\n      helixClassifierSecret: '',\n      naturalLanguageClassifierAPIKey: '',\n      searchAPIKey: '',\n      toneAnalyzerAPIKey: '',\n      serviceAccountCredentials: '',\n      apiKey: ''\n    },\n    serviceDefinitions: {\n      helixClassifier: {\n        id: 'helixClassifier',\n        title: 'com.bmc.arsys.rx.client.admin.cognitive-service.helix-ade.title',\n        isOpen: true,\n        isApiKeyTest: true,\n        serviceType: 'NATURAL_LANGUAGE_CLASSIFIER',\n        fields: [\n          {\n            label: 'com.bmc.arsys.rx.client.admin.cognitive-service.helix-portal-url.label',\n            name: 'helixPortalUrl',\n            readonly: true,\n            type: 'text',\n            required: false\n          },\n          {\n            name: 'helixClassifierKey',\n            label: 'com.bmc.arsys.rx.client.admin.cognitive-service.access-key.label',\n            type: 'text',\n            required: true,\n            rxId: 'accessKey'\n          },\n          {\n            name: 'helixClassifierSecret',\n            label: 'com.bmc.arsys.rx.client.admin.cognitive-service.secret-key.label',\n            type: 'password',\n            required: true,\n            rxId: 'secretKey'\n          }\n        ]\n      },\n      classification: {\n        id: 'classification',\n        title: 'com.bmc.arsys.rx.client.admin.cognitive-service.ibm-watson-assistant.title',\n        model: 'naturalLanguageClassifierAPIKey',\n        isOpen: true,\n        isApiKeyTest: true,\n        serviceType: 'NATURAL_LANGUAGE_CLASSIFIER',\n        fields: [\n          {\n            name: 'naturalLanguageClassifierAPIKey',\n            label: 'com.bmc.arsys.rx.client.admin.cognitive-service.api-key.label',\n            type: 'password',\n            required: true,\n            rxId: 'api-key'\n          }\n        ]\n      },\n      serviceAccountCredentials: {\n        id: 'serviceAccountCredentials',\n        title: 'com.bmc.arsys.rx.client.admin.cognitive-service.bmc-native.title',\n        model: 'serviceAccountCredentials',\n        isOpen: true,\n        isApiKeyTest: true,\n        serviceType: 'NATURAL_LANGUAGE_CLASSIFIER',\n        fields: [\n          {\n            name: 'serviceAccountCredentials',\n            label: 'com.bmc.arsys.rx.client.admin.cognitive-service.service-account-credentials.api-key.label',\n            type: 'json',\n            required: true,\n            rxId: 'api-key',\n            jsonValidatorErrorMessage: 'Credentials are invalid.'\n          }\n        ]\n      },\n      discovery: {\n        id: 'discovery',\n        title: 'com.bmc.arsys.rx.client.admin.cognitive-service.ibm-watson-discovery.title',\n        model: 'searchAPIKey',\n        isOpen: false,\n        isApiKeyTest: true,\n        serviceType: 'SEARCH',\n        fields: [\n          {\n            name: 'searchAPIKey',\n            label: 'com.bmc.arsys.rx.client.admin.cognitive-service.api-key.label',\n            type: 'password',\n            required: true,\n            rxId: 'api-key'\n          }\n        ]\n      },\n      toneAnalyzer: {\n        id: 'toneAnalyzer',\n        title: 'com.bmc.arsys.rx.client.admin.cognitive-service.ibm-watson-tone-analyzer.title',\n        model: 'toneAnalyzerAPIKey',\n        isOpen: false,\n        isApiKeyTest: true,\n        serviceType: 'TONE_ANALYZER',\n        fields: [\n          {\n            name: 'toneAnalyzerAPIKey',\n            label: 'com.bmc.arsys.rx.client.admin.cognitive-service.api-key.label',\n            type: 'password',\n            required: true,\n            rxId: 'api-key'\n          }\n        ]\n      },\n      microsoft: {\n        id: 'microsoft',\n        title: 'com.bmc.arsys.rx.client.admin.cognitive-service.microsoft-translator.title',\n        isOpen: false,\n        isApiKeyTest: false,\n        fields: [\n          {\n            name: 'apiKey',\n            label:\n              'com.bmc.arsys.rx.client.admin.cognitive-service.service-account-credentials.microsoft-azure-api-key.label',\n            type: 'password',\n            required: true,\n            rxId: 'microsoft-azure-api-key'\n          },\n          {\n            name: 'serviceURL',\n            label: 'com.bmc.arsys.rx.client.admin.cognitive-service.service-account-credentials.service-url.label',\n            type: 'text',\n            required: true,\n            pattern: urlPattern,\n            rxId: 'microsoft-translator-service-url'\n          },\n          {\n            name: 'authURL',\n            label: 'com.bmc.arsys.rx.client.admin.cognitive-service.service-account-credentials.oauth-url.label',\n            type: 'text',\n            required: true,\n            pattern: urlPattern,\n            rxId: 'microsoft-translator-oauth-url'\n          }\n        ]\n      },\n      google: {\n        id: 'google',\n        title: 'com.bmc.arsys.rx.client.admin.cognitive-service.google-translation.title',\n        model: 'apiKey',\n        isOpen: false,\n        isApiKeyTest: false,\n        fields: [\n          {\n            name: 'apiKey',\n            label: 'com.bmc.arsys.rx.client.admin.cognitive-service.google-cloud-service-key.label',\n            type: 'json',\n            required: true,\n            rxId: 'google-cloud-service-key',\n            jsonValidatorErrorMessage: 'Service key is invalid.'\n          }\n        ]\n      }\n    }\n  },\n  cognitiveServiceRegions: {\n    systemSettingsKey: 'cognitiveServiceRegionTenantConfiguration',\n    settings: [\n      { id: 'naturalLanguageClassifier', name: 'Natural language classification' },\n      { id: 'conversation', name: 'Chatbot' },\n      { id: 'search', name: 'Cognitive search' },\n      { id: 'toneAnalyzer', name: 'Tone analysis' }\n    ]\n  },\n  toneAnalyzer: {\n    systemSettingsKey: 'toneScoreThreshold'\n  },\n  summarization: {\n    systemSettingsKey: 'summarizationServiceTenantConfiguration'\n  },\n  onboard: {\n    cognitiveProvidersList: [\n      {\n        id: 'watson',\n        name: 'IBM Watson'\n      }\n    ],\n    providers: {\n      watson: 'WATSON'\n    },\n    providerServices: {\n      watson: {\n        naturalLanguageClassifier: {\n          id: 'naturalLanguageClassifier',\n          apiKeyPropertyName: 'naturalLanguageClassifierAPIKey',\n          regionPropertyName: 'naturalLanguageClassifierRegion',\n          switchLabel: 'com.bmc.arsys.rx.client.admin.cognitive-service.ibm-watson-assistant.title'\n        },\n        conversation: {\n          id: 'conversation',\n          apiKeyPropertyName: 'conversationAPIKey',\n          regionPropertyName: 'conversationRegion',\n          switchLabel: 'com.bmc.arsys.rx.client.admin.cognitive-service.ibm-watson-assistant-for-chatbot.message',\n          tooltipText: 'com.bmc.arsys.rx.client.admin.cognitive-service.provider.conversation.tooltip'\n        },\n        toneAnalyzer: {\n          id: 'toneAnalyzer',\n          apiKeyPropertyName: 'toneAnalyzerAPIKey',\n          regionPropertyName: 'toneAnalyzerRegion',\n          switchLabel: 'com.bmc.arsys.rx.client.admin.cognitive-service.ibm-watson-tone-analyzer.title'\n        }\n      }\n    }\n  },\n  cognitiveServicesList: [\n    {\n      id: 'chatbot',\n      name: 'com.bmc.arsys.rx.client.admin.chatbots.chatbot.title'\n    },\n    {\n      id: 'cognitiveAdministrationCredentials',\n      name: 'com.bmc.arsys.rx.client.admin.cognitive-service.cognitive-administration-credentials.title'\n    },\n    {\n      id: 'connections',\n      name: 'com.bmc.arsys.rx.client.admin.cognitive-service.cognitive-service-connections.title'\n    },\n    {\n      id: 'summarization',\n      name: 'com.bmc.arsys.rx.client.admin.summarization-service-configuration.title'\n    },\n    {\n      id: 'cognitiveServiceRegions',\n      name: 'com.bmc.arsys.rx.client.admin.cognitive-service.regions.title'\n    },\n    {\n      id: 'toneAnalyzerConfiguration',\n      name: 'com.bmc.arsys.rx.client.admin.cognitive-service.tone-analyzer.title'\n    }\n  ],\n  regionsList: [\n    {\n      id: 'EU_DE',\n      name: 'com.bmc.arsys.rx.client.admin.cognitive-service.region.germany.label'\n    },\n    {\n      id: 'AU_SYD',\n      name: 'com.bmc.arsys.rx.client.admin.cognitive-service.region.sydney.label'\n    },\n    {\n      id: 'US_EAST',\n      name: 'com.bmc.arsys.rx.client.admin.cognitive-service.region.us-east.label'\n    },\n    {\n      id: 'US_SOUTH',\n      name: 'com.bmc.arsys.rx.client.admin.cognitive-service.region.us-south.label'\n    },\n    {\n      id: 'EU_GB',\n      name: 'com.bmc.arsys.rx.client.admin.cognitive-service.region.uk.label'\n    }\n  ],\n  notificationMessages: {\n    chatProviderSettingsSaved:\n      'com.bmc.arsys.rx.client.admin.cognitive-service.provider.chat-provider-settings-saved.message',\n    cognitiveAdministrationCredentialsSaved:\n      'com.bmc.arsys.rx.client.admin.cognitive-service.provider.cognitive-administration-credentials-saved.message',\n    toneAnalyzerConfigurationSaved:\n      'com.bmc.arsys.rx.client.admin.cognitive-service.provider.tone-analyzer-configuration-saved.message',\n    serviceRegionConfigurationSaved:\n      'com.bmc.arsys.rx.client.admin.cognitive-service.provider.service-region-configuration-saved.message',\n    serviceConnectionSaved: 'com.bmc.arsys.rx.client.admin.cognitive-service.provider.service-connection-saved.message',\n    summarizationConfigurationSaved:\n      'com.bmc.arsys.rx.client.admin.cognitive-service.provider.summarization-configuration-saved.message',\n    serviceOnboarded: 'com.bmc.arsys.rx.client.admin.cognitive-service.provider.service-onboarded.message'\n  }\n};\n","import { Injectable, Injector } from '@angular/core';\nimport { DataPage } from '@helix/platform/shared/api';\n\nconst systemConfigurationDataPageQuery =\n  'com.bmc.arsys.rx.application.common.datapage.SystemConfigurationDataPageQuery';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxCognitiveServiceSystemConfigurationDataPageService extends DataPage {\n  constructor(private injector: Injector) {\n    super(injector, systemConfigurationDataPageQuery);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RxProcessDefinitionDataPageService } from '@helix/platform/process/api';\nimport { map as _map } from 'lodash';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { IDataPageResult, RX_APPLICATION, RX_RESOURCE_URLS } from '@helix/platform/shared/api';\nimport { RxCognitiveServiceSystemConfigurationDataPageService } from './cognitive-service-system-configuration-data-page.service';\nimport { RX_COGNITIVE_SERVICE } from './cognitive-service.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxCognitiveServiceService {\n  constructor(\n    private httpClient: HttpClient,\n    private rxCognitiveServiceSystemConfigurationDataPageService: RxCognitiveServiceSystemConfigurationDataPageService,\n    private rxProcessDefinitionDataPageService: RxProcessDefinitionDataPageService\n  ) {}\n\n  filterMaskPassword(password: string): string {\n    return password === RX_COGNITIVE_SERVICE.passwordMask ? '' : password;\n  }\n\n  getChatbotProcessDefinitionNames(): Observable<string[]> {\n    return this.rxProcessDefinitionDataPageService\n      .get({\n        headers: {\n          'default-bundle-scope': RX_APPLICATION.chatbotBundleId\n        },\n        params: {\n          propertySelection: ['name']\n        }\n      })\n      .pipe(map((response: IDataPageResult) => _map(response.data, 'name')));\n  }\n\n  getSystemSettings(settingList: string[]): Observable<IDataPageResult> {\n    return this.rxCognitiveServiceSystemConfigurationDataPageService.get({\n      params: { name: settingList.join(',') }\n    });\n  }\n\n  testConnection(requestPayload: object): Observable<any> {\n    return this.httpClient.post(RX_RESOURCE_URLS.command, requestPayload);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { cloneDeep, forEach, get, isArray, isEqual, keys } from 'lodash';\nimport { map } from 'rxjs/operators';\nimport { RX_COGNITIVE_SERVICE } from '../../cognitive-service.constant';\nimport { RxSelectOption, AdaptRxControlLabelTooltip } from '@bmc-ux/adapt-angular';\nimport {\n  RxDefinitionNameService,\n  RX_OVERLAY,\n  IUserOverlayGroupDescriptorChildren,\n  ISystemConfiguration,\n  RxNotificationService,\n  RxSystemConfigurationService\n} from '@helix/platform/shared/api';\nimport { RxCognitiveServiceService } from '../../cognitive-service.service';\nimport { IChatbotProvider } from '../../cognitive-service.interfaces';\nimport { forkJoin, Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-cognitive-service-chatbot',\n  templateUrl: './cognitive-service-chatbot.component.html',\n  styleUrls: ['./cognitive-service-chatbot.component.scss']\n})\nexport class CognitiveServiceChatbotComponent implements OnInit {\n  constructor(\n    private formBuilder: FormBuilder,\n    private rxCognitiveServiceService: RxCognitiveServiceService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxNotificationService: RxNotificationService,\n    private rxSystemConfigurationService: RxSystemConfigurationService,\n    private translateService: TranslateService\n  ) {}\n\n  @Input()\n  isAdministrator: boolean;\n\n  @Input()\n  currentOverlayContext: IUserOverlayGroupDescriptorChildren;\n\n  chatbotProvidersForm: FormGroup;\n  initialChatbotProviderValues: IChatbotProvider = cloneDeep(RX_COGNITIVE_SERVICE.chatbot.systemSettings);\n  chatbotProcessDefinitionNameOptions: RxSelectOption[] = [];\n  private defaultSelection = this.translateService.instant('com.bmc.arsys.rx.client.common.select.label');\n\n  approverSelectionTooltip: AdaptRxControlLabelTooltip = {\n    popoverMode: true,\n    iconName: 'question_circle_o',\n    placement: 'right',\n    content: this.translateService.instant(\n      'com.bmc.arsys.rx.client.admin.cognitive-service-component.user-idle.tooltip'\n    )\n  };\n\n  chatbotNotificationsIdleTimeTooltip: AdaptRxControlLabelTooltip = {\n    popoverMode: true,\n    iconName: 'question_circle_o',\n    placement: 'right',\n    content: this.translateService.instant(\n      'com.bmc.arsys.rx.client.admin.cognitive-service-component.proactive-chatbot-notifications-idle-time.tooltip'\n    )\n  };\n\n  chatbotNotificationsMaxTimeTooltip: AdaptRxControlLabelTooltip = {\n    popoverMode: true,\n    iconName: 'question_circle_o',\n    placement: 'right',\n    content: this.translateService.instant(\n      'com.bmc.arsys.rx.client.admin.cognitive-service-component.proactive-chatbot-notifications-max-time.tooltip'\n    )\n  };\n\n  ngOnInit(): void {\n    this.chatbotProvidersForm = this.formBuilder.group({\n      chatSessionIdleTimeout: RX_COGNITIVE_SERVICE.chatbot.systemSettings.chatSessionIdleTimeout,\n      chatUserIdleTimeout: RX_COGNITIVE_SERVICE.chatbot.systemSettings.chatUserIdleTimeout,\n      chatContextVariablesProcessName: [],\n      chatbotNotificationsIdleTime: RX_COGNITIVE_SERVICE.chatbot.systemSettings.chatbotNotificationsIdleTime,\n      chatbotNotificationsMaxTime: RX_COGNITIVE_SERVICE.chatbot.systemSettings.chatbotNotificationsMaxTime,\n      removePoweredByBmcHelix: RX_COGNITIVE_SERVICE.chatbot.systemSettings.removePoweredByBmcHelix\n    });\n\n    forkJoin({\n      processDefinitionNameOptions: this.getProcessDefinitionNameOptions(),\n      settingsData: this.rxCognitiveServiceService.getSystemSettings(keys(RX_COGNITIVE_SERVICE.chatbot.systemSettings))\n    }).subscribe((result) => {\n      this.chatbotProcessDefinitionNameOptions = result.processDefinitionNameOptions;\n      this.loadChatbotSystemSettings(result.settingsData.data as ISystemConfiguration[]);\n    });\n  }\n\n  isFormDirty(): boolean {\n    return this.chatbotProvidersForm.dirty;\n  }\n\n  private getProcessDefinitionNameOptions(): Observable<RxSelectOption[]> {\n    return this.rxCognitiveServiceService.getChatbotProcessDefinitionNames().pipe(\n      map((processDefinitionNames) =>\n        processDefinitionNames.sort().map((processDefinitionName) => {\n          return {\n            id: processDefinitionName,\n            name: this.rxDefinitionNameService.getDisplayName(processDefinitionName)\n          };\n        })\n      )\n    );\n  }\n\n  private loadChatbotSystemSettings(settings: ISystemConfiguration[]): void {\n    forEach(settings, (setting) => {\n      let settingValue: RxSelectOption[] | number;\n\n      if (setting.name === RX_COGNITIVE_SERVICE.chatbot.chatContextVariablesProcessName) {\n        settingValue = [this.chatbotProcessDefinitionNameOptions.find((process) => process.id === setting.value)];\n      } else {\n        settingValue = setting.value as number;\n      }\n\n      this.setFormFieldValue(setting.name, settingValue);\n      this.initialChatbotProviderValues[setting.name] = settingValue;\n    });\n  }\n\n  private setFormFieldValue(name: string, value: RxSelectOption[] | number): void {\n    this.chatbotProvidersForm.controls[name].setValue(value);\n  }\n\n  setDefaultSessionIdleTimeout(): void {\n    if (\n      RX_COGNITIVE_SERVICE.chatbot.systemSettings.chatSessionIdleTimeout !==\n      this.chatbotProvidersForm.controls.chatSessionIdleTimeout.value\n    ) {\n      this.setFormFieldValue(\n        'chatSessionIdleTimeout',\n        RX_COGNITIVE_SERVICE.chatbot.systemSettings.chatSessionIdleTimeout\n      );\n\n      this.chatbotProvidersForm.markAsDirty();\n    }\n  }\n\n  setDefaultUserIdleTimeout(): void {\n    if (\n      RX_COGNITIVE_SERVICE.chatbot.systemSettings.chatUserIdleTimeout !==\n      this.chatbotProvidersForm.controls.chatUserIdleTimeout.value\n    ) {\n      this.setFormFieldValue('chatUserIdleTimeout', RX_COGNITIVE_SERVICE.chatbot.systemSettings.chatUserIdleTimeout);\n      this.chatbotProvidersForm.markAsDirty();\n    }\n  }\n\n  setDefaultChatbotNotificationsIdleTime(): void {\n    if (\n      RX_COGNITIVE_SERVICE.chatbot.systemSettings.chatbotNotificationsIdleTime !==\n      this.chatbotProvidersForm.controls.chatbotNotificationsIdleTime.value\n    ) {\n      this.setFormFieldValue(\n        'chatbotNotificationsIdleTime',\n        RX_COGNITIVE_SERVICE.chatbot.systemSettings.chatbotNotificationsIdleTime\n      );\n      this.chatbotProvidersForm.markAsDirty();\n    }\n  }\n\n  setDefaultChatbotNotificationsMaxTime(): void {\n    if (\n      RX_COGNITIVE_SERVICE.chatbot.systemSettings.chatbotNotificationsMaxTime !==\n      this.chatbotProvidersForm.controls.chatbotNotificationsMaxTime.value\n    ) {\n      this.setFormFieldValue(\n        'chatbotNotificationsMaxTime',\n        RX_COGNITIVE_SERVICE.chatbot.systemSettings.chatbotNotificationsMaxTime\n      );\n      this.chatbotProvidersForm.markAsDirty();\n    }\n  }\n\n  save(): void {\n    const formValue = this.chatbotProvidersForm.getRawValue();\n\n    const systemPropertyObservables = Object.keys(RX_COGNITIVE_SERVICE.chatbot.systemSettings).reduce(\n      (result, settingName) => {\n        let settingValue = formValue[settingName];\n\n        if (isArray(settingValue)) {\n          settingValue = settingValue[0]?.id ?? '';\n        }\n\n        if (!isEqual(this.initialChatbotProviderValues[settingName], settingValue)) {\n          result.push(this.rxSystemConfigurationService.setConfiguration(settingName, settingValue));\n        }\n\n        return result;\n      },\n      []\n    );\n\n    forkJoin(systemPropertyObservables).subscribe(() => {\n      this.rxNotificationService.addSuccessMessage(\n        this.translateService.instant(RX_COGNITIVE_SERVICE.notificationMessages.chatProviderSettingsSaved)\n      );\n\n      this.initialChatbotProviderValues = formValue;\n      this.chatbotProvidersForm.markAsPristine();\n    });\n  }\n\n  isSaveButtonDisabled(): boolean {\n    return this.chatbotProvidersForm.pristine || this.chatbotProvidersForm.invalid;\n  }\n\n  isSaveButtonVisible(): boolean {\n    return (\n      this.isAdministrator &&\n      this.currentOverlayContext.overlayGroupId !== RX_OVERLAY.overlayGroupIds.base &&\n      !this.currentOverlayContext.isShared\n    );\n  }\n\n  optionFormatter = (processDefinitionNameOption: RxSelectOption): string => {\n    return get(processDefinitionNameOption, 'name', this.defaultSelection);\n  };\n}\n","<form [formGroup]=\"chatbotProvidersForm\">\n  <adapt-accordion rx-id=\"accordion-chatbot-provider\">\n    <adapt-accordion-tab\n      title=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-service.chatbot.title' | translate }}\"\n      isOpen=\"true\"\n    >\n      <div class=\"chat-session-idle-timeout form-group\">\n        <adapt-rx-counter\n          adaptRange\n          [min]=\"300\"\n          [max]=\"1200\"\n          [adaptRange]=\"[300, 1200]\"\n          rx-id=\"chatbot-provider-chat-session-idle-time\"\n          [label]=\"'com.bmc.arsys.rx.client.admin.cognitive-service.chat-session-idle.label' | translate\"\n          required=\"true\"\n          [formControl]=\"chatbotProvidersForm.controls.chatSessionIdleTimeout\"\n          class=\"adapt-counter-prefix px-0 mr-2\"\n        >\n        </adapt-rx-counter>\n\n        <adapt-button\n          class=\"align-self-baseline\"\n          rx-id=\"chatbot-provider-default-chat-session-idle-time\"\n          btn-type=\"secondary\"\n          (click)=\"setDefaultSessionIdleTimeout()\"\n        >\n          {{ 'com.bmc.arsys.rx.client.common.default.label' | translate }}\n        </adapt-button>\n      </div>\n\n      <div class=\"chat-session-idle-timeout form-group\">\n        <adapt-rx-counter\n          adaptRange\n          [min]=\"5\"\n          [max]=\"1200\"\n          [adaptRange]=\"[5, 1200]\"\n          rx-id=\"chatbot-provider-chat-user-idle-time\"\n          [label]=\"'com.bmc.arsys.rx.client.admin.cognitive-service.chat-user-idle.label' | translate\"\n          required=\"true\"\n          [formControl]=\"chatbotProvidersForm.controls.chatUserIdleTimeout\"\n          [tooltip]=\"approverSelectionTooltip\"\n          class=\"adapt-counter-prefix px-0 mr-2\"\n        >\n        </adapt-rx-counter>\n\n        <adapt-button\n          class=\"align-self-baseline\"\n          rx-id=\"chatbot-provider-default-chat-user-idle-time\"\n          btn-type=\"secondary\"\n          (click)=\"setDefaultUserIdleTimeout()\"\n        >\n          {{ 'com.bmc.arsys.rx.client.common.default.label' | translate }}\n        </adapt-button>\n      </div>\n\n      <adapt-rx-select\n        rx-id=\"chat-context-variables-process-name\"\n        formControlName=\"chatContextVariablesProcessName\"\n        label=\"Chat context variables process name\"\n        [options]=\"chatbotProcessDefinitionNameOptions\"\n        [optionFormatter]=\"optionFormatter\"\n        class=\"d-block form-group\"\n      ></adapt-rx-select>\n\n      <adapt-rx-control-label\n        label=\"{{\n          'com.bmc.arsys.rx.client.admin.cognitive-service.remove-powered-by-bmc-helix.label'\n            | translate: { poweredByBmcHelix: 'Powered by BMC Helix' }\n        }}\"\n      ></adapt-rx-control-label>\n\n      <adapt-rx-switch\n        [formControl]=\"chatbotProvidersForm.controls.removePoweredByBmcHelix\"\n        rx-id=\"remove-powered-by-bmc-helix\"\n        [isLabelBefore]=\"false\"\n      ></adapt-rx-switch>\n    </adapt-accordion-tab>\n\n    <adapt-accordion rx-id=\"accordion-proactive-chatbot-notifications\">\n      <adapt-accordion-tab\n        title=\"{{\n          'com.bmc.arsys.rx.client.admin.cognitive-service.proactive-chatbot-notifications.title' | translate\n        }}\"\n        isOpen=\"true\"\n      >\n        <div class=\"proactive-chatbot-notifications-idle-time form-group\">\n          <adapt-rx-counter\n            adaptRange\n            [min]=\"300\"\n            [max]=\"1200\"\n            [adaptRange]=\"[300, 1200]\"\n            rx-id=\"notifications-idle-time\"\n            [label]=\"\n              'com.bmc.arsys.rx.client.admin.cognitive-service.proactive-chatbot-notifications-idle-time.label'\n                | translate\n            \"\n            required=\"true\"\n            [formControl]=\"chatbotProvidersForm.controls.chatbotNotificationsIdleTime\"\n            [tooltip]=\"chatbotNotificationsIdleTimeTooltip\"\n            class=\"adapt-counter-prefix px-0 mr-2\"\n          >\n          </adapt-rx-counter>\n\n          <adapt-button\n            class=\"align-self-baseline\"\n            rx-id=\"notifications-idle-time-default-button\"\n            btn-type=\"secondary\"\n            (click)=\"setDefaultChatbotNotificationsIdleTime()\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.default.label' | translate }}\n          </adapt-button>\n        </div>\n\n        <div class=\"proactive-chatbot-notifications-max-time form-group\">\n          <adapt-rx-counter\n            adaptRange\n            [min]=\"120\"\n            [max]=\"3600\"\n            [adaptRange]=\"[120, 3600]\"\n            rx-id=\"notifications-max-time\"\n            [label]=\"\n              'com.bmc.arsys.rx.client.admin.cognitive-service.proactive-chatbot-notifications-max-time.label'\n                | translate\n            \"\n            required=\"true\"\n            [formControl]=\"chatbotProvidersForm.controls.chatbotNotificationsMaxTime\"\n            [tooltip]=\"chatbotNotificationsMaxTimeTooltip\"\n            class=\"adapt-counter-prefix px-0 mr-2\"\n          >\n          </adapt-rx-counter>\n\n          <adapt-button\n            class=\"align-self-baseline\"\n            rx-id=\"notifications-max-time-default-button\"\n            btn-type=\"secondary\"\n            (click)=\"setDefaultChatbotNotificationsMaxTime()\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.default.label' | translate }}\n          </adapt-button>\n        </div>\n      </adapt-accordion-tab>\n    </adapt-accordion>\n\n    <button\n      adapt-button\n      type=\"button\"\n      rx-id=\"save-button\"\n      btn-type=\"primary\"\n      class=\"mt-4\"\n      [disabled]=\"isSaveButtonDisabled()\"\n      *ngIf=\"isSaveButtonVisible()\"\n      (click)=\"save()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n  </adapt-accordion>\n</form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { cloneDeep } from 'lodash';\nimport { RX_COGNITIVE_SERVICE } from '../../cognitive-service.constant';\nimport { RxCurrentUserService, RX_OVERLAY, IUserOverlayGroupDescriptorChildren } from '@helix/platform/shared/api';\nimport { RxCognitiveServiceService } from '../../cognitive-service.service';\nimport { RxNotificationService, RxSystemConfigurationService } from '@helix/platform/shared/api';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-cognitive-service-administration-credentials',\n  templateUrl: './cognitive-service-administration-credentials.component.html',\n  styleUrls: ['./cognitive-service-administration-credentials.component.scss']\n})\nexport class CognitiveServiceAdministrationCredentialsComponent implements OnInit {\n  @Input()\n  isAdministrator: boolean;\n\n  @Input()\n  currentOverlayContext: IUserOverlayGroupDescriptorChildren;\n\n  cognitiveAdministrationCredentialsProvidersForm: FormGroup;\n  watsonAdminCredentialsData: string;\n  cognitiveAdminPlatformApiKey: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private rxCognitiveServiceService: RxCognitiveServiceService,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxNotificationService: RxNotificationService,\n    private rxSystemConfigurationService: RxSystemConfigurationService,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit(): void {\n    this.cognitiveAdministrationCredentialsProvidersForm = this.formBuilder.group({\n      cognitiveAdminPlatformApiKey: ''\n    });\n\n    this.loadSystemSettings();\n  }\n\n  isFormDirty(): boolean {\n    return this.cognitiveAdministrationCredentialsProvidersForm.dirty;\n  }\n\n  private loadSystemSettings(): void {\n    this.rxSystemConfigurationService\n      .getConfiguration(RX_COGNITIVE_SERVICE.cognitiveAdministrationCredentials.systemSettingsKey)\n      .subscribe((settingsData) => {\n        this.watsonAdminCredentialsData = JSON.parse(settingsData.value as string);\n        this.loadCognitiveAdminCredentialsValues();\n      });\n  }\n\n  private getWatsonAdminCredentialsData(property: string): string {\n    return this.watsonAdminCredentialsData[RX_COGNITIVE_SERVICE.credentialsProvider][property] || '';\n  }\n\n  private loadCognitiveAdminCredentialsValues(): void {\n    let apiKeyValue = '';\n\n    if (this.watsonAdminCredentialsData[RX_COGNITIVE_SERVICE.credentialsProvider]) {\n      apiKeyValue = this.getWatsonAdminCredentialsData(\n        RX_COGNITIVE_SERVICE.cognitiveAdministrationCredentials.cognitiveAdminPlatformApiKey\n      )\n        ? RX_COGNITIVE_SERVICE.passwordMask\n        : '';\n    }\n\n    this.cognitiveAdministrationCredentialsProvidersForm.controls.cognitiveAdminPlatformApiKey.setValue(apiKeyValue);\n  }\n\n  save(): void {\n    const newApiKey = this.cognitiveAdministrationCredentialsProvidersForm.value.cognitiveAdminPlatformApiKey;\n    const newCredentials = cloneDeep(RX_COGNITIVE_SERVICE.cognitiveAdministrationCredentials.payload);\n\n    newCredentials[RX_COGNITIVE_SERVICE.credentialsProvider][\n      RX_COGNITIVE_SERVICE.cognitiveAdministrationCredentials.cognitiveAdminPlatformApiKey\n    ] = this.rxCognitiveServiceService.filterMaskPassword(newApiKey);\n\n    this.rxSystemConfigurationService\n      .setConfiguration(\n        RX_COGNITIVE_SERVICE.cognitiveAdministrationCredentials.systemSettingsKey,\n        JSON.stringify(newCredentials)\n      )\n      .subscribe(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant(\n            RX_COGNITIVE_SERVICE.notificationMessages.cognitiveAdministrationCredentialsSaved\n          )\n        );\n\n        this.cognitiveAdministrationCredentialsProvidersForm.markAsPristine();\n      });\n  }\n\n  isSaveButtonDisabled(): boolean {\n    return (\n      this.cognitiveAdministrationCredentialsProvidersForm.pristine ||\n      this.cognitiveAdministrationCredentialsProvidersForm.invalid\n    );\n  }\n\n  isSaveButtonVisible(): boolean {\n    return (\n      this.isAdministrator &&\n      this.currentOverlayContext.overlayGroupId !== RX_OVERLAY.overlayGroupIds.base &&\n      !this.currentOverlayContext.isShared\n    );\n  }\n}\n","<form [formGroup]=\"cognitiveAdministrationCredentialsProvidersForm\">\n  <adapt-accordion>\n    <adapt-accordion-tab\n      title=\"{{\n        'com.bmc.arsys.rx.client.admin.cognitive-service.cognitive-administration-credentials.title' | translate\n      }}\"\n      isOpen=\"true\"\n    >\n      <div class=\"form-group\">\n        <adapt-rx-textfield\n          rx-id=\"platform-api-key\"\n          label=\"Platform API key\"\n          formControlName=\"cognitiveAdminPlatformApiKey\"\n          maxlength=\"254\"\n          required=\"true\"\n          [isPassword]=\"true\"\n          class=\"d-block\"\n        >\n        </adapt-rx-textfield>\n      </div>\n    </adapt-accordion-tab>\n    <button\n      adapt-button\n      type=\"button\"\n      rx-id=\"save-button\"\n      btn-type=\"primary\"\n      class=\"mt-4\"\n      [disabled]=\"isSaveButtonDisabled()\"\n      *ngIf=\"isSaveButtonVisible()\"\n      (click)=\"save()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n  </adapt-accordion>\n</form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { KeyValueObject } from '@bmc-ux/adapt-angular';\nimport { RxJsonParserService } from '@helix/platform/utils';\nimport { assign, forIn, isEmpty, toLower, transform } from 'lodash';\nimport { RX_COGNITIVE_SERVICE } from '../../cognitive-service.constant';\nimport {\n  ISystemConfiguration,\n  IUserOverlayGroupDescriptorChildren,\n  MachineLearningProviderNames,\n  RX_OVERLAY,\n  RxCurrentUserService,\n  RxNotificationService,\n  RxSystemConfigurationService\n} from '@helix/platform/shared/api';\nimport { RxCognitiveServiceService } from '../../cognitive-service.service';\nimport { IConnectionTestPayload, ISettingPayload, IServiceDefinitionField } from '../../cognitive-service.interfaces';\nimport { forkJoin, throwError } from 'rxjs';\nimport { ConnectionTestStatus } from '@helix/platform/ui-kit';\nimport { catchError, finalize } from 'rxjs/operators';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-cognitive-service-connections',\n  templateUrl: './cognitive-service-connections.component.html',\n  styleUrls: ['./cognitive-service-connections.component.scss']\n})\nexport class CognitiveServiceConnectionsComponent implements OnInit {\n  @Input()\n  isAdministrator: boolean;\n\n  @Input()\n  currentOverlayContext: IUserOverlayGroupDescriptorChildren;\n\n  @Input()\n  isNativeClassificationProvider: boolean;\n\n  connectionInfo = RX_COGNITIVE_SERVICE.connections.payload;\n  serviceDefinitions = RX_COGNITIVE_SERVICE.connections.serviceDefinitions;\n  realTimeTranslationProvider: string;\n  availableServicesList = [];\n  connectionTestStatusesByServiceId: KeyValueObject<ConnectionTestStatus> = {};\n  connectionTestStatus: ConnectionTestStatus = ConnectionTestStatus.Invalid;\n  isFormFieldChanged = false;\n\n  availableServices: KeyValueObject<boolean> = {\n    classification: true,\n    discovery: true,\n    toneAnalyzer: true\n  };\n\n  constructor(\n    private rxCognitiveServiceService: RxCognitiveServiceService,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxNotificationService: RxNotificationService,\n    private rxSystemConfigurationService: RxSystemConfigurationService,\n    private rxJsonParserService: RxJsonParserService,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit(): void {\n    this.rxSystemConfigurationService\n      .queryConfiguration([\n        RX_COGNITIVE_SERVICE.connections.systemSettingKeys.cognitiveServiceCredential,\n        RX_COGNITIVE_SERVICE.connections.systemSettingKeys.classificationServiceProvider,\n        RX_COGNITIVE_SERVICE.connections.systemSettingKeys.translationServiceProvider,\n        RX_COGNITIVE_SERVICE.connections.systemSettingKeys.helixPortalUrl,\n        RX_COGNITIVE_SERVICE.connections.systemSettingKeys.helixServiceCredential\n      ])\n      .pipe(finalize(() => this.loadServices()))\n      .subscribe(\n        ([\n          cognitiveServiceCredential,\n          classificationServiceProvider,\n          translationServiceProvider,\n          helixPortalUrl,\n          helixServiceCredential\n        ]) => {\n          this.loadCognitiveSystemSettings(cognitiveServiceCredential);\n\n          if (classificationServiceProvider.value === MachineLearningProviderNames.Helix) {\n            this.loadHelixCognitiveSystemSettings(helixServiceCredential);\n            this.connectionInfo[helixPortalUrl.id] = helixPortalUrl.value;\n          }\n\n          this.loadClassificationServiceProvider(classificationServiceProvider);\n          this.loadRealTimeTranslationProviders(translationServiceProvider);\n        }\n      );\n  }\n\n  isFormDirty(): boolean {\n    return this.isFormFieldChanged;\n  }\n\n  private loadServices(): void {\n    this.availableServicesList = transform(\n      this.serviceDefinitions,\n      (result, value, key) => {\n        if (this.availableServices[key]) {\n          result.push(key);\n        }\n      },\n      []\n    );\n  }\n\n  private loadClassificationServiceProvider(provider: ISystemConfiguration): void {\n    if (this.isNativeClassificationProvider) {\n      this.availableServices[this.serviceDefinitions.classification.id] = false;\n      this.availableServices[this.serviceDefinitions.serviceAccountCredentials.id] = true;\n\n      this.rxSystemConfigurationService\n        .getConfiguration(RX_COGNITIVE_SERVICE.connections.systemSettingKeys.serviceAccountCredential)\n        .subscribe((settingData) => {\n          this.connectionInfo.serviceAccountCredentials = settingData.value as string;\n        });\n\n      return;\n    }\n\n    if (provider.value === MachineLearningProviderNames.Helix) {\n      this.availableServices[this.serviceDefinitions.classification.id] = false;\n      this.availableServices[this.serviceDefinitions.helixClassifier.id] = true;\n    }\n  }\n\n  private loadRealTimeTranslationProviders(settingsData: ISystemConfiguration): void {\n    const realTimeTranslationProvider = toLower(settingsData.value as string);\n\n    if (realTimeTranslationProvider) {\n      this.realTimeTranslationProvider = realTimeTranslationProvider;\n      this.availableServices[this.serviceDefinitions[realTimeTranslationProvider].id] = true;\n\n      this.rxSystemConfigurationService\n        .getConfiguration(RX_COGNITIVE_SERVICE.connections.systemSettingKeys[realTimeTranslationProvider])\n        .subscribe((settingData) => {\n          if (realTimeTranslationProvider === this.serviceDefinitions.google.id) {\n            this.connectionInfo.apiKey = settingData.value as string;\n          } else if (realTimeTranslationProvider === this.serviceDefinitions.microsoft.id) {\n            this.connectionInfo = assign(\n              this.connectionInfo,\n              this.rxJsonParserService.tryParseJson(settingData.value as string, {})\n            );\n          }\n        });\n    }\n  }\n\n  private loadHelixCognitiveSystemSettings(settingsData: ISystemConfiguration): void {\n    const credentials = this.rxJsonParserService.tryParseJson(settingsData.value as string);\n    this.connectionInfo.helixClassifierKey = credentials?.accessKey ?? '';\n    this.connectionInfo.helixClassifierSecret = credentials?.secretKey ?? '';\n  }\n\n  private loadCognitiveSystemSettings(settingsData: ISystemConfiguration): void {\n    const credentials = JSON.parse(settingsData.value as string)[RX_COGNITIVE_SERVICE.credentialsProvider];\n\n    if (credentials) {\n      forIn(credentials, (value, key) => {\n        this.connectionInfo[key] = credentials[key];\n      });\n    }\n  }\n\n  private isConnectionTestStatusInvalid(form: NgForm): boolean {\n    return (\n      !(\n        this.isAdministrator &&\n        this.currentOverlayContext.overlayGroupId !== RX_OVERLAY.overlayGroupIds.base &&\n        !this.currentOverlayContext.isShared\n      ) ||\n      form.invalid ||\n      form.pristine\n    );\n  }\n\n  private getConnectionTestPayload(serviceId: string, serviceForm: NgForm): IConnectionTestPayload {\n    const serviceDefinition = this.serviceDefinitions[serviceId];\n\n    if (!serviceDefinition.isApiKeyTest) {\n      const isGoogleServiceId = serviceId === this.serviceDefinitions.google.id;\n\n      return {\n        credential: isGoogleServiceId ? serviceForm.value[serviceDefinition.model] : JSON.stringify(serviceForm.value),\n        resourceType: 'com.bmc.arsys.rx.application.cognitive.command.PingTranslationServiceCommand'\n      };\n    }\n\n    // Get the fields that are supposed to be sent as credentials\n    const editableFields: IServiceDefinitionField[] = serviceDefinition.fields.filter(\n      (field: IServiceDefinitionField) => !field.readonly\n    );\n\n    if (editableFields.length === 1) {\n      // use the model name as the apiKey\n      return {\n        apiKey: serviceForm.value[serviceDefinition.model],\n        serviceType: serviceDefinition.serviceType,\n        resourceType: 'com.bmc.arsys.rx.application.cognitive.command.PingCognitiveServiceCommand'\n      };\n    }\n\n    // If more than one field, username and passowrd are required to test the connection\n    const [usernameField, passwordField] = editableFields.map((field: IServiceDefinitionField) => field.name);\n\n    return {\n      userName: serviceForm.value[usernameField],\n      password: serviceForm.value[passwordField],\n      serviceType: serviceDefinition.serviceType,\n      resourceType: 'com.bmc.arsys.rx.application.cognitive.command.PingCognitiveServiceCommand'\n    };\n  }\n\n  resetConnectionTest(serviceId: string, form: NgForm): void {\n    this.connectionTestStatus = ConnectionTestStatus.Unknown;\n    this.isFormFieldChanged = form.dirty;\n\n    this.connectionTestStatusesByServiceId[serviceId] = this.isConnectionTestStatusInvalid(form)\n      ? ConnectionTestStatus.Invalid\n      : ConnectionTestStatus.Unknown;\n  }\n\n  onTestConnection(serviceId: string, form: NgForm): void {\n    const connectionTestPayload = this.getConnectionTestPayload(serviceId, form);\n\n    this.rxCognitiveServiceService\n      .testConnection(connectionTestPayload)\n      .pipe(\n        catchError((error: HttpErrorResponse) => {\n          this.connectionTestStatusesByServiceId[serviceId] = ConnectionTestStatus.Failed;\n\n          return throwError(error);\n        })\n      )\n      .subscribe(() => {\n        this.connectionTestStatusesByServiceId[serviceId] = ConnectionTestStatus.Passed;\n        this.connectionTestStatus = ConnectionTestStatus.Passed;\n      });\n  }\n\n  save(): void {\n    const settingsPayload: ISettingPayload[] = [];\n\n    if (\n      this.isNativeClassificationProvider &&\n      this.connectionTestStatusesByServiceId[this.serviceDefinitions.serviceAccountCredentials.id] ===\n        ConnectionTestStatus.Passed &&\n      !(\n        this.connectionTestStatusesByServiceId[this.serviceDefinitions.classification.id] ===\n          ConnectionTestStatus.Passed ||\n        this.connectionTestStatusesByServiceId[this.serviceDefinitions.discovery.id] === ConnectionTestStatus.Passed ||\n        this.connectionTestStatusesByServiceId[this.serviceDefinitions.toneAnalyzer.id] ===\n          ConnectionTestStatus.Passed ||\n        (this.realTimeTranslationProvider &&\n          this.connectionTestStatusesByServiceId[this.serviceDefinitions[this.realTimeTranslationProvider].id] ===\n            ConnectionTestStatus.Passed)\n      )\n    ) {\n      settingsPayload.push({\n        name: RX_COGNITIVE_SERVICE.connections.systemSettingKeys.serviceAccountCredential,\n        value: JSON.stringify(JSON.parse(this.connectionInfo[this.serviceDefinitions.serviceAccountCredentials.id]))\n      });\n    } else {\n      if (\n        this.realTimeTranslationProvider &&\n        this.connectionTestStatusesByServiceId[this.serviceDefinitions[this.realTimeTranslationProvider].id] ===\n          ConnectionTestStatus.Passed\n      ) {\n        const fields = this.serviceDefinitions[this.realTimeTranslationProvider].fields;\n\n        settingsPayload.push({\n          name: RX_COGNITIVE_SERVICE.connections.systemSettingKeys[this.realTimeTranslationProvider],\n          value:\n            this.realTimeTranslationProvider === this.serviceDefinitions.google.id\n              ? this.connectionInfo[fields[0].name]\n              : JSON.stringify(\n                  transform(\n                    fields,\n                    (result, value) => {\n                      const fieldName = value['name'];\n\n                      return (result[fieldName] = this.connectionInfo[fieldName]);\n                    },\n                    {}\n                  )\n                )\n        });\n      }\n\n      const cognitiveCredentials = transform(\n        RX_COGNITIVE_SERVICE.connections.cognitiveServiceCredentialKeys,\n        (result, value, key) => {\n          if (this.connectionTestStatusesByServiceId[this.serviceDefinitions[key].id] === ConnectionTestStatus.Passed) {\n            return (result[value] = this.connectionInfo[value]);\n          }\n        },\n        {}\n      );\n\n      if (!isEmpty(cognitiveCredentials)) {\n        settingsPayload.push({\n          name: RX_COGNITIVE_SERVICE.connections.systemSettingKeys.cognitiveServiceCredential,\n          value: JSON.stringify({\n            [RX_COGNITIVE_SERVICE.credentialsProvider]: cognitiveCredentials\n          })\n        });\n      }\n    }\n\n    const { helixClassifier } = this.serviceDefinitions;\n\n    if (helixClassifier && this.connectionTestStatusesByServiceId[helixClassifier.id] === ConnectionTestStatus.Passed) {\n      settingsPayload.push({\n        name: RX_COGNITIVE_SERVICE.connections.systemSettingKeys.helixServiceCredential,\n        value: JSON.stringify({\n          accessKey: this.connectionInfo.helixClassifierKey,\n          secretKey: this.connectionInfo.helixClassifierSecret\n        })\n      });\n    }\n\n    forkJoin(\n      settingsPayload.map((settingPayload: ISettingPayload) =>\n        this.rxSystemConfigurationService.setConfiguration(settingPayload.name, settingPayload.value)\n      )\n    ).subscribe(() => {\n      this.rxNotificationService.addSuccessMessage(\n        this.translateService.instant(RX_COGNITIVE_SERVICE.notificationMessages.serviceConnectionSaved)\n      );\n\n      this.connectionTestStatus = ConnectionTestStatus.Invalid;\n      this.connectionTestStatusesByServiceId = {};\n      this.isFormFieldChanged = false;\n    });\n  }\n\n  isSaveButtonDisabled(): boolean {\n    return this.connectionTestStatus !== ConnectionTestStatus.Passed;\n  }\n\n  isSaveButtonVisible(): boolean {\n    return (\n      this.isAdministrator &&\n      this.currentOverlayContext.overlayGroupId !== RX_OVERLAY.overlayGroupIds.base &&\n      !this.currentOverlayContext.isShared\n    );\n  }\n}\n","<adapt-accordion multiselect=\"true\">\n  <form *ngFor=\"let serviceId of availableServicesList\" #serviceForm=\"ngForm\">\n    <adapt-accordion-tab\n      [title]=\"serviceDefinitions[serviceId].title | translate\"\n      [isOpen]=\"serviceDefinitions[serviceId].isOpen\"\n      [attr.rx-id]=\"serviceDefinitions[serviceId].id\"\n      class=\"mb-3\"\n    >\n      <div *ngFor=\"let field of serviceDefinitions[serviceId].fields\" class=\"form-group\">\n        <adapt-rx-textfield\n          [name]=\"field.name\"\n          [(ngModel)]=\"connectionInfo[field.name]\"\n          [attr.rx-id]=\"field.rxId\"\n          [label]=\"field.label | translate\"\n          [required]=\"field.required\"\n          *ngIf=\"field.type === 'password'\"\n          maxlength=\"254\"\n          [isPassword]=\"true\"\n          (ngModelChange)=\"resetConnectionTest(serviceId, serviceForm)\"\n          class=\"d-block\"\n        >\n        </adapt-rx-textfield>\n\n        <adapt-rx-textfield\n          [name]=\"field.name\"\n          [(ngModel)]=\"connectionInfo[field.name]\"\n          [attr.rx-id]=\"field.rxId\"\n          [label]=\"field.label | translate\"\n          [required]=\"field.required\"\n          [disabled]=\"field.readonly\"\n          *ngIf=\"field.type === 'text'\"\n          [pattern]=\"field.pattern\"\n          (ngModelChange)=\"resetConnectionTest(serviceId, serviceForm)\"\n          class=\"d-block\"\n        >\n        </adapt-rx-textfield>\n\n        <adapt-rx-textarea\n          [name]=\"field.name\"\n          [(ngModel)]=\"connectionInfo[field.name]\"\n          [attr.rx-id]=\"field.rxId\"\n          [label]=\"field.label | translate\"\n          [required]=\"field.required\"\n          *ngIf=\"field.type === 'json'\"\n          (ngModelChange)=\"resetConnectionTest(serviceId, serviceForm)\"\n          rows=\"6\"\n          class=\"d-block\"\n          [rxJson]=\"{\n            errorMessage: field.jsonValidatorErrorMessage\n          }\"\n        ></adapt-rx-textarea>\n      </div>\n\n      <rx-connection-tester\n        class=\"mt-1\"\n        [status]=\"connectionTestStatusesByServiceId[serviceId]\"\n        (testConnection)=\"onTestConnection(serviceId, serviceForm)\"\n      ></rx-connection-tester>\n    </adapt-accordion-tab>\n  </form>\n\n  <button\n    adapt-button\n    rx-id=\"save-button\"\n    btn-type=\"primary\"\n    class=\"mt-4\"\n    [disabled]=\"isSaveButtonDisabled()\"\n    *ngIf=\"isSaveButtonVisible()\"\n    (click)=\"save()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n</adapt-accordion>\n","import { Component, Injector, Input, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { DismissReasons, DockedPanelContext, KeyValueObject, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { RxRecordInstanceDataPageService } from '@helix/platform/record/api';\nimport {\n  IDataPageParams,\n  IPlainObject,\n  IUserOverlayGroupDescriptorChildren,\n  RX_CHATBOT,\n  RxCommandFactoryService,\n  RxNotificationService,\n  RxSystemConfigurationService\n} from '@helix/platform/shared/api';\nimport { RxModalClass, RxModalService } from '@helix/platform/ui-kit';\nimport { TranslateService } from '@ngx-translate/core';\nimport { forEach, get, some, transform } from 'lodash';\nimport { forkJoin, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { RX_COGNITIVE_SERVICE } from '../../cognitive-service.constant';\nimport { IServiceConfig } from '../../cognitive-service.interfaces';\nimport { RxCognitiveServiceService } from '../../cognitive-service.service';\n\n@Component({\n  selector: 'rx-cognitive-service-onboard',\n  templateUrl: './cognitive-service-onboard.component.html'\n})\nexport class CognitiveServiceOnboardComponent extends RxModalClass implements OnInit {\n  @Input()\n  isAdministrator: boolean;\n\n  @Input()\n  currentOverlayContext: IUserOverlayGroupDescriptorChildren;\n\n  @ViewChild('ownCognitivePoviderConfigurationForm', { read: NgForm, static: true })\n  ownCognitivePoviderConfigurationForm: NgForm;\n\n  supportedCognitiveProviders: RxSelectOption[] = RX_COGNITIVE_SERVICE.onboard.cognitiveProvidersList;\n  cognitiveProvider: [RxSelectOption] = [RX_COGNITIVE_SERVICE.onboard.cognitiveProvidersList[0]];\n\n  regions: RxSelectOption[] = RX_COGNITIVE_SERVICE.regionsList.map((region) => ({\n    ...region,\n    name: this.translateService.instant(region.name)\n  }));\n\n  providerServices: KeyValueObject<IServiceConfig> = {};\n  isOnboardingInProgress: boolean;\n\n  private defaultServiceId: string = RX_COGNITIVE_SERVICE.onboard.cognitiveProvidersList[0].id;\n  private defaultSelection = this.translateService.instant('com.bmc.arsys.rx.client.common.select.label');\n\n  constructor(\n    private dockedPanelContext: DockedPanelContext,\n    private rxCognitiveServiceService: RxCognitiveServiceService,\n    private rxCommandFactoryService: RxCommandFactoryService,\n    private rxModalService: RxModalService,\n    private rxNotificationService: RxNotificationService,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService,\n    private rxSystemConfigurationService: RxSystemConfigurationService,\n    private translateService: TranslateService,\n    protected injector: Injector\n  ) {\n    super(dockedPanelContext, injector);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    const params: IDataPageParams = {\n      recorddefinition: RX_CHATBOT.chatbotLocales.recordDefinitionName,\n      queryExpression: `'${RX_CHATBOT.chatbotLocales.fieldIds.botConfigurationId}'=\"${RX_CHATBOT.defaultChatbotId}\"`,\n      propertySelection: [\n        RX_CHATBOT.chatbotLocales.fieldIds.botConfigurationId,\n        RX_CHATBOT.chatbotLocales.fieldIds.providerPassword\n      ]\n    };\n\n    forkJoin({\n      cognitiveServiceCredential: this.rxSystemConfigurationService.getConfiguration(\n        RX_COGNITIVE_SERVICE.connections.systemSettingKeys.cognitiveServiceCredential\n      ),\n      cognitiveServiceRegions: this.rxSystemConfigurationService.getConfiguration(\n        RX_COGNITIVE_SERVICE.cognitiveServiceRegions.systemSettingsKey\n      ),\n      botLocales: this.rxRecordInstanceDataPageService.post({\n        params\n      })\n    }).subscribe((result) => {\n      this.providerServices = RX_COGNITIVE_SERVICE.onboard.providerServices[this.defaultServiceId];\n\n      this.loadCredentialAndRegions(\n        JSON.parse(result.cognitiveServiceCredential.value as string),\n        JSON.parse(result.cognitiveServiceRegions.value as string)\n      );\n\n      this.setBotLocaleConversation(result.botLocales.data);\n      this.loadServiceProviderApiKey();\n    });\n  }\n\n  isDirty(): boolean {\n    return this.ownCognitivePoviderConfigurationForm.dirty;\n  }\n\n  private loadCredentialAndRegions(credentials: KeyValueObject, serviceRegions: KeyValueObject): void {\n    const cognitiveServiceRegions = serviceRegions[RX_COGNITIVE_SERVICE.onboard.providers[this.defaultServiceId]];\n\n    forEach(this.providerServices, (serviceConfig, serviceId) => {\n      serviceConfig.apiKey = get(\n        credentials[RX_COGNITIVE_SERVICE.onboard.providers[this.defaultServiceId]],\n        serviceConfig.apiKeyPropertyName,\n        ''\n      );\n\n      if (get(cognitiveServiceRegions, serviceId)) {\n        const regionValue = this.regions.find((region) => region.id === cognitiveServiceRegions[serviceId]);\n\n        serviceConfig.region = [regionValue];\n      }\n    });\n  }\n\n  private setBotLocaleConversation(locales: KeyValueObject): void {\n    const localeKey: string = RX_COGNITIVE_SERVICE.onboard.providerServices[this.defaultServiceId].conversation.id;\n\n    this.providerServices[localeKey].apiKey = get(locales[0], RX_CHATBOT.chatbotLocales.fieldIds.providerPassword, '');\n  }\n\n  private loadServiceProviderApiKey(): void {\n    forEach(this.providerServices, (serviceConfig) => {\n      serviceConfig.isEnabled = serviceConfig.hasApiKey = Boolean(serviceConfig.apiKey);\n    });\n  }\n\n  optionFormatter = (regionNameOption: RxSelectOption): string => {\n    return get(regionNameOption, 'name', this.defaultSelection);\n  };\n\n  isOnboardButtonDisabled(): boolean {\n    return (\n      this.isOnboardingInProgress ||\n      !some(this.providerServices, 'isEnabled') ||\n      this.ownCognitivePoviderConfigurationForm.pristine ||\n      this.ownCognitivePoviderConfigurationForm.invalid\n    );\n  }\n\n  close(): void {\n    this.dockedPanelContext.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  onboard(): void {\n    this.isOnboardingInProgress = true;\n    const onboardSettings: IPlainObject = {};\n\n    onboardSettings[RX_COGNITIVE_SERVICE.onboard.providers[this.defaultServiceId]] = transform(\n      this.providerServices,\n      (result, value) => {\n        if (!value.hasApiKey && value.isEnabled) {\n          result[value.apiKeyPropertyName] = value.apiKey;\n          result[value.regionPropertyName] = get(value.region, '0.id', '');\n        }\n      },\n      {}\n    );\n\n    this.rxCommandFactoryService\n      .forResourceType('com.bmc.arsys.rx.application.cognitive.command.ConfigureOwnCognitiveProvidersCommand')\n      .execute({ ownCognitiveProvidersConfiguration: JSON.stringify(onboardSettings) })\n      .pipe(\n        catchError((err) => {\n          this.isOnboardingInProgress = false;\n\n          return throwError(err);\n        })\n      )\n      .subscribe(() => {\n        this.loadServiceProviderApiKey();\n\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant(RX_COGNITIVE_SERVICE.notificationMessages.serviceOnboarded)\n        );\n\n        this.ownCognitivePoviderConfigurationForm.form.markAsPristine();\n        this.isOnboardingInProgress = false;\n      });\n  }\n\n  keepKeyValueOrder(): number {\n    return 0;\n  }\n}\n","<div class=\"dp-body\">\n  <form #ownCognitivePoviderConfigurationForm=\"ngForm\">\n    <div class=\"row\">\n      <div class=\"col-sm-12\">\n        <adapt-rx-select\n          name=\"cognitiveProvider\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-service.cognitive-provider.label' | translate }}\"\n          rx-id=\"cognitive-provider\"\n          [options]=\"supportedCognitiveProviders\"\n          [optionFormatter]=\"optionFormatter\"\n          [(ngModel)]=\"cognitiveProvider\"\n        >\n        </adapt-rx-select>\n      </div>\n\n      <div class=\"col-sm-12\">\n        <div class=\"mt-2 mb-2\">\n          {{ 'com.bmc.arsys.rx.client.admin.cognitive-service.onboard-services.instructions.label' | translate }}\n        </div>\n\n        <div class=\"card p-3 mb-3\" *ngFor=\"let service of providerServices | keyvalue: keepKeyValueOrder\">\n          <adapt-rx-switch\n            class=\"form-group\"\n            [name]=\"service.key + 'ProviderEnable'\"\n            [attr.rx-id]=\"'enable-cognitive-service-provider-' + service.key\"\n            [label]=\"service.value.switchLabel | translate\"\n            [(ngModel)]=\"service.value.isEnabled\"\n            [disabled]=\"service.value.hasApiKey\"\n            [tooltip]=\"\n              service.value.tooltipText\n                ? {\n                    iconName: 'question_circle_o',\n                    content: service.value.tooltipText | translate,\n                    placement: 'bottom',\n                    popoverMode: true\n                  }\n                : null\n            \"\n          ></adapt-rx-switch>\n\n          <adapt-rx-select\n            class=\"form-group\"\n            label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-service.region.label' | translate }}\"\n            emptyOption=\"true\"\n            [name]=\"service.key + 'ProviderRegion'\"\n            [attr.rx-id]=\"'cognitive-service-provider-region-' + service.key\"\n            [options]=\"regions\"\n            [optionFormatter]=\"optionFormatter\"\n            [(ngModel)]=\"service.value.region\"\n            [disabled]=\"!service.value.isEnabled || service.value.hasApiKey\"\n          >\n          </adapt-rx-select>\n\n          <adapt-rx-textfield\n            class=\"form-group\"\n            label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-service.api-key.label' | translate }}\"\n            maxlength=\"254\"\n            required=\"true\"\n            [isPassword]=\"true\"\n            [name]=\"service.key + 'ProviderApiKey'\"\n            [attr.rx-id]=\"'cognitive-service-provider-' + service.key + '-api-key'\"\n            [(ngModel)]=\"service.value.apiKey\"\n            [disabled]=\"!service.value.isEnabled || service.value.hasApiKey\"\n          >\n          </adapt-rx-textfield>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"dp-footer align-items-end\">\n  <div>\n    <button\n      adapt-button\n      btn-type=\"primary\"\n      type=\"button\"\n      class=\"mr-2\"\n      activeText=\"Onboarding...\"\n      rx-id=\"onboarding-button\"\n      [adaptInlineLoader]=\"isOnboardingInProgress\"\n      [disabled]=\"isOnboardButtonDisabled()\"\n      (click)=\"onboard()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.admin.cognitive-service.onboard-services.button.onboard.label' | translate }}\n    </button>\n    <button\n      adapt-button\n      btn-type=\"secondary\"\n      type=\"button\"\n      rx-id=\"close-button\"\n      (click)=\"close()\"\n      [disabled]=\"isOnboardingInProgress\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n    </button>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { isEmpty, get, mapValues } from 'lodash';\nimport { RX_COGNITIVE_SERVICE } from '../../cognitive-service.constant';\nimport { RxCognitiveServiceService } from '../../cognitive-service.service';\nimport {\n  IUserOverlayGroupDescriptorChildren,\n  RX_OVERLAY,\n  RxNotificationService,\n  RxSystemConfigurationService\n} from '@helix/platform/shared/api';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-cognitive-service-regions',\n  templateUrl: './cognitive-service-regions.component.html',\n  styleUrls: ['./cognitive-service-regions.component.scss']\n})\nexport class CognitiveServiceRegionsComponent implements OnInit {\n  @Input()\n  isAdministrator: boolean;\n\n  @Input()\n  currentOverlayContext: IUserOverlayGroupDescriptorChildren;\n\n  cognitiveServiceRegionConfigurationForm: FormGroup;\n  settings: RxSelectOption[] = RX_COGNITIVE_SERVICE.cognitiveServiceRegions.settings;\n\n  regions: RxSelectOption[] = RX_COGNITIVE_SERVICE.regionsList.map((region) => ({\n    ...region,\n    name: this.translateService.instant(region.name)\n  }));\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private rxCognitiveServiceService: RxCognitiveServiceService,\n    private rxNotificationService: RxNotificationService,\n    private rxSystemConfigurationService: RxSystemConfigurationService,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit() {\n    this.cognitiveServiceRegionConfigurationForm = this.formBuilder.group({\n      naturalLanguageClassifier: [],\n      conversation: [],\n      search: [],\n      toneAnalyzer: []\n    });\n\n    this.loadSystemSettings();\n  }\n\n  isFormDirty(): boolean {\n    return this.cognitiveServiceRegionConfigurationForm.dirty;\n  }\n\n  private loadSystemSettings(): void {\n    this.rxSystemConfigurationService\n      .getConfiguration(RX_COGNITIVE_SERVICE.cognitiveServiceRegions.systemSettingsKey)\n      .subscribe((settingsData) => {\n        let watsonServiceRegionsData = JSON.parse(settingsData.value as string);\n\n        if (watsonServiceRegionsData[RX_COGNITIVE_SERVICE.credentialsProvider]) {\n          watsonServiceRegionsData = watsonServiceRegionsData[RX_COGNITIVE_SERVICE.credentialsProvider];\n\n          this.settings.forEach((setting: RxSelectOption) => {\n            if (!isEmpty(watsonServiceRegionsData[setting.id])) {\n              const value = this.regions.find((region) => region.id === watsonServiceRegionsData[setting.id]);\n\n              this.cognitiveServiceRegionConfigurationForm.controls[setting.id].setValue([value]);\n            }\n          });\n        }\n      });\n  }\n\n  optionFormatter(regionNameOption: RxSelectOption): string {\n    return regionNameOption.name;\n  }\n\n  save(): void {\n    const formValue = this.cognitiveServiceRegionConfigurationForm.getRawValue();\n\n    const configurations = mapValues(formValue, function (value) {\n      return get(value, '[0].id', '');\n    });\n\n    this.rxSystemConfigurationService\n      .setConfiguration(\n        RX_COGNITIVE_SERVICE.cognitiveServiceRegions.systemSettingsKey,\n        JSON.stringify({ WATSON: configurations })\n      )\n      .subscribe(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant(RX_COGNITIVE_SERVICE.notificationMessages.serviceRegionConfigurationSaved)\n        );\n\n        this.cognitiveServiceRegionConfigurationForm.markAsPristine();\n      });\n  }\n\n  isSaveButtonDisabled(): boolean {\n    return this.cognitiveServiceRegionConfigurationForm.pristine;\n  }\n\n  isSaveButtonVisible(): boolean {\n    return (\n      this.isAdministrator &&\n      this.currentOverlayContext.overlayGroupId !== RX_OVERLAY.overlayGroupIds.base &&\n      !this.currentOverlayContext.isShared\n    );\n  }\n}\n","<form [formGroup]=\"cognitiveServiceRegionConfigurationForm\">\n  <adapt-accordion rx-id=\"accordion-cognitive-service-region\">\n    <adapt-accordion-tab\n      title=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-service.regions.title' | translate }}\"\n      isOpen=\"true\"\n    >\n      <adapt-alert\n        class=\"mb-4\"\n        [config]=\"{\n          type: 'inline',\n          variant: 'warning',\n          content: 'com.bmc.arsys.rx.client.admin.cognitive-service.regions.warning' | translate\n        }\"\n      ></adapt-alert>\n\n      <div\n        *ngFor=\"let setting of settings\"\n        [attr.rx-id]=\"'select-block-cognitive-service-region--' + setting.id\"\n        class=\"form-group\"\n      >\n        <adapt-rx-select\n          emptyOption=\"true\"\n          [formControlName]=\"setting.id\"\n          [label]=\"setting.name\"\n          [options]=\"regions\"\n          [optionFormatter]=\"optionFormatter\"\n          class=\"d-block\"\n        ></adapt-rx-select>\n      </div>\n    </adapt-accordion-tab>\n\n    <button\n      adapt-button\n      type=\"button\"\n      rx-id=\"save-button\"\n      btn-type=\"primary\"\n      class=\"mt-4\"\n      [disabled]=\"isSaveButtonDisabled()\"\n      *ngIf=\"isSaveButtonVisible()\"\n      (click)=\"save()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n  </adapt-accordion>\n</form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {\n  IUserOverlayGroupDescriptorChildren,\n  RX_OVERLAY,\n  RxCurrentUserService,\n  RxNotificationService,\n  RxSystemConfigurationService\n} from '@helix/platform/shared/api';\nimport { ConnectionTestStatus } from '@helix/platform/ui-kit';\nimport { mapValues } from 'lodash';\nimport { throwError, Observable, EMPTY } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { RX_COGNITIVE_SERVICE } from '../../cognitive-service.constant';\nimport { RxCognitiveServiceService } from '../../cognitive-service.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-cognitive-service-summarization',\n  templateUrl: './cognitive-service-summarization.component.html',\n  styleUrls: ['./cognitive-service-summarization.component.scss']\n})\nexport class CognitiveServiceSummarizationComponent implements OnInit {\n  @Input()\n  isAdministrator: boolean;\n\n  @Input()\n  currentOverlayContext: IUserOverlayGroupDescriptorChildren;\n\n  summarizationConfigurationForm: FormGroup;\n  connectionTestStatus: ConnectionTestStatus = ConnectionTestStatus.Invalid;\n  isAdministratorOverlayConfigured: boolean;\n  isSummarizationServiceConfigured: boolean;\n\n  constructor(\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxCognitiveServiceService: RxCognitiveServiceService,\n    private rxNotificationService: RxNotificationService,\n    private rxSystemConfigurationService: RxSystemConfigurationService,\n    private formBuilder: FormBuilder,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit() {\n    this.isAdministratorOverlayConfigured =\n      this.isAdministrator &&\n      this.currentOverlayContext.overlayGroupId !== RX_OVERLAY.overlayGroupIds.base &&\n      !this.currentOverlayContext.isShared;\n\n    this.testConnection()\n      .pipe(\n        catchError((error: HttpErrorResponse) => {\n          this.isSummarizationServiceConfigured = false;\n\n          return EMPTY;\n        })\n      )\n      .subscribe(() => {\n        this.isSummarizationServiceConfigured = true;\n      });\n\n    this.summarizationConfigurationForm = this.formBuilder.group({\n      enableSummarization: { value: 0, disabled: this.isEnableSummarizationCheckboxDisabled() },\n      summarizationPercentage: ''\n    });\n\n    this.loadSystemSettings();\n  }\n\n  isFormDirty(): boolean {\n    return this.summarizationConfigurationForm.dirty;\n  }\n\n  private loadSystemSettings(): void {\n    this.rxSystemConfigurationService\n      .getConfiguration(RX_COGNITIVE_SERVICE.summarization.systemSettingsKey)\n      .subscribe((settingsData) => {\n        const summarizationData = JSON.parse(settingsData.value as string);\n\n        this.summarizationConfigurationForm.setValue(summarizationData);\n      });\n  }\n\n  save(): void {\n    const formValue = this.summarizationConfigurationForm.getRawValue();\n\n    formValue.enableSummarization = formValue.enableSummarization ? 1 : 0;\n    const configurations = mapValues(formValue, (value) => value);\n\n    this.rxSystemConfigurationService\n      .setConfiguration(RX_COGNITIVE_SERVICE.summarization.systemSettingsKey, JSON.stringify(configurations))\n      .subscribe(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant(RX_COGNITIVE_SERVICE.notificationMessages.summarizationConfigurationSaved)\n        );\n\n        this.connectionTestStatus = ConnectionTestStatus.Invalid;\n        this.summarizationConfigurationForm.markAsPristine();\n      });\n  }\n\n  isSaveButtonDisabled(): boolean {\n    return !this.summarizationConfigurationForm.controls.enableSummarization.value &&\n      this.summarizationConfigurationForm.dirty\n      ? false\n      : this.connectionTestStatus !== ConnectionTestStatus.Passed;\n  }\n\n  isEnableSummarizationCheckboxDisabled(): boolean {\n    return !(\n      this.rxCurrentUserService.isAdministrator() &&\n      this.currentOverlayContext.overlayGroupId !== RX_OVERLAY.overlayGroupIds.base &&\n      !this.currentOverlayContext.isShared\n    );\n  }\n\n  private isConnectionTestStatusInvalid(): boolean {\n    return (\n      !this.isAdministratorOverlayConfigured ||\n      this.summarizationConfigurationForm.invalid ||\n      this.summarizationConfigurationForm.pristine ||\n      !this.summarizationConfigurationForm.controls.enableSummarization.value\n    );\n  }\n\n  resetConnectionTest(): void {\n    this.connectionTestStatus = this.isConnectionTestStatusInvalid()\n      ? ConnectionTestStatus.Invalid\n      : ConnectionTestStatus.Unknown;\n\n    if (this.summarizationConfigurationForm.controls.enableSummarization.value) {\n      this.summarizationConfigurationForm.get('summarizationPercentage').enable();\n    } else {\n      this.summarizationConfigurationForm.get('summarizationPercentage').disable();\n    }\n  }\n\n  private testConnection(): Observable<any> {\n    return this.rxCognitiveServiceService.testConnection({\n      resourceType: 'com.bmc.arsys.rx.application.cognitive.command.PingSummarizationServiceCommand'\n    });\n  }\n\n  onTestConnection(): void {\n    this.testConnection()\n      .pipe(\n        catchError((error: HttpErrorResponse) => {\n          this.connectionTestStatus = ConnectionTestStatus.Failed;\n\n          return throwError(error);\n        })\n      )\n      .subscribe(() => {\n        this.connectionTestStatus = ConnectionTestStatus.Passed;\n      });\n  }\n}\n","<adapt-alert\n  *ngIf=\"isSummarizationServiceConfigured === false\"\n  [config]=\"{ content: 'Summarization service has not been configured.', type: 'inline', variant: 'warning' }\"\n></adapt-alert>\n\n<form [formGroup]=\"summarizationConfigurationForm\" *ngIf=\"isSummarizationServiceConfigured\">\n  <adapt-accordion rx-id=\"accordion-summarization-configuration\">\n    <adapt-accordion-tab\n      title=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-service.summarization.title' | translate }}\"\n    >\n      <adapt-rx-switch\n        class=\"form-group\"\n        rx-id=\"enable-summarization-service\"\n        formControlName=\"enableSummarization\"\n        label=\"Enable summarization service\"\n        (ngModelChange)=\"resetConnectionTest()\"\n      ></adapt-rx-switch>\n\n      <adapt-rx-counter\n        class=\"d-block form-group\"\n        adaptRange\n        rx-id=\"summarization-percentage\"\n        [min]=\"1\"\n        [max]=\"50\"\n        label=\"Summarization %\"\n        required=\"true\"\n        [formControl]=\"summarizationConfigurationForm.controls.summarizationPercentage\"\n        [step]=\"1\"\n        [tooltip]=\"{\n          iconName: 'question_circle_o',\n          content: 'com.bmc.arsys.rx.client.admin.cognitive-service.summarization.percentage.tooltip' | translate,\n          placement: 'right',\n          popoverMode: true\n        }\"\n        (ngModelChange)=\"resetConnectionTest()\"\n      ></adapt-rx-counter>\n\n      <rx-connection-tester\n        class=\"mt-1\"\n        *ngIf=\"isAdministrator\"\n        [status]=\"connectionTestStatus\"\n        (testConnection)=\"onTestConnection()\"\n      ></rx-connection-tester>\n    </adapt-accordion-tab>\n\n    <button\n      adapt-button\n      rx-id=\"save-button\"\n      btn-type=\"primary\"\n      class=\"mt-4\"\n      [disabled]=\"isSaveButtonDisabled()\"\n      *ngIf=\"isAdministratorOverlayConfigured\"\n      (click)=\"save()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n  </adapt-accordion>\n</form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { RX_COGNITIVE_SERVICE } from '../../cognitive-service.constant';\nimport {\n  IUserOverlayGroupDescriptorChildren,\n  RX_OVERLAY,\n  RxSystemConfigurationService\n} from '@helix/platform/shared/api';\nimport { RxCognitiveServiceService } from '../../cognitive-service.service';\nimport { RxNotificationService } from '@helix/platform/shared/api';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-cognitive-service-tone-analyzer',\n  templateUrl: './cognitive-service-tone-analyzer.component.html',\n  styleUrls: ['./cognitive-service-tone-analyzer.component.scss']\n})\nexport class CognitiveServiceToneAnalyzerComponent implements OnInit {\n  @Input()\n  isAdministrator: boolean;\n\n  @Input()\n  currentOverlayContext: IUserOverlayGroupDescriptorChildren;\n\n  toneAnalyzerConfigurationForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private rxCognitiveServiceService: RxCognitiveServiceService,\n    private rxNotificationService: RxNotificationService,\n    private rxSystemConfigurationService: RxSystemConfigurationService,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit() {\n    this.toneAnalyzerConfigurationForm = this.formBuilder.group({\n      toneScoreThreshold: 0.5\n    });\n\n    this.loadSystemSettings();\n  }\n\n  isFormDirty(): boolean {\n    return this.toneAnalyzerConfigurationForm.dirty;\n  }\n\n  private loadSystemSettings(): void {\n    this.rxSystemConfigurationService\n      .getConfiguration(RX_COGNITIVE_SERVICE.toneAnalyzer.systemSettingsKey)\n      .subscribe((settingsData) => {\n        this.toneAnalyzerConfigurationForm.controls[settingsData.name].setValue(settingsData.value);\n      });\n  }\n\n  save(): void {\n    this.rxSystemConfigurationService\n      .setConfiguration(\n        RX_COGNITIVE_SERVICE.toneAnalyzer.systemSettingsKey,\n        this.toneAnalyzerConfigurationForm.value.toneScoreThreshold\n      )\n      .subscribe(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant(RX_COGNITIVE_SERVICE.notificationMessages.toneAnalyzerConfigurationSaved)\n        );\n\n        this.toneAnalyzerConfigurationForm.markAsPristine();\n      });\n  }\n\n  isSaveButtonDisabled(): boolean {\n    return this.toneAnalyzerConfigurationForm.pristine || this.toneAnalyzerConfigurationForm.invalid;\n  }\n\n  isSaveButtonVisible(): boolean {\n    return (\n      this.isAdministrator &&\n      this.currentOverlayContext.overlayGroupId !== RX_OVERLAY.overlayGroupIds.base &&\n      !this.currentOverlayContext.isShared\n    );\n  }\n}\n","<form [formGroup]=\"toneAnalyzerConfigurationForm\">\n  <adapt-accordion>\n    <adapt-accordion-tab title=\"Tone analyzer configuration\" isOpen=\"true\">\n      <adapt-rx-counter\n        adaptRange\n        label=\"Tone score threshold\"\n        required=\"true\"\n        class=\"d-block form-group\"\n        [max]=\"1\"\n        [min]=\"0.5\"\n        adaptFloatNumber\n        [formControl]=\"toneAnalyzerConfigurationForm.controls.toneScoreThreshold\"\n        [step]=\"0.1\"\n        [tooltip]=\"{\n          iconName: 'question_circle_o',\n          content: popoverContent,\n          placement: 'right',\n          popoverMode: true\n        }\"\n      ></adapt-rx-counter>\n\n      <ng-template #popoverContent>\n        <div\n          style=\"white-space: pre-wrap\"\n          [innerHTML]=\"\n            'com.bmc.arsys.rx.client.admin.cognitive-service.tone-analyzer.tone-score-threshold.tooltip' | translate\n          \"\n        ></div>\n      </ng-template>\n    </adapt-accordion-tab>\n\n    <button\n      adapt-button\n      type=\"button\"\n      rx-id=\"save-button\"\n      btn-type=\"primary\"\n      class=\"mt-4\"\n      [disabled]=\"isSaveButtonDisabled()\"\n      *ngIf=\"isSaveButtonVisible()\"\n      (click)=\"save()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n  </adapt-accordion>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport {\n  IUserOverlayGroupDescriptorChildren,\n  RX_OVERLAY,\n  RxCurrentUserService,\n  RxOverlayService,\n  RxSystemConfigurationService\n} from '@helix/platform/shared/api';\nimport { RxModalService } from '@helix/platform/ui-kit';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { TranslateService } from '@ngx-translate/core';\nimport { noop, reject } from 'lodash';\nimport { RX_COGNITIVE_SERVICE } from './cognitive-service.constant';\nimport { RxCognitiveServiceService } from './cognitive-service.service';\nimport { CognitiveServiceAdministrationCredentialsComponent } from './components/administration-credentials/cognitive-service-administration-credentials.component';\nimport { CognitiveServiceChatbotComponent } from './components/chatbot/cognitive-service-chatbot.component';\nimport { CognitiveServiceConnectionsComponent } from './components/connections/cognitive-service-connections.component';\nimport { CognitiveServiceOnboardComponent } from './components/onboard/cognitive-service-onboard.component';\nimport { CognitiveServiceRegionsComponent } from './components/regions/cognitive-service-regions.component';\nimport { CognitiveServiceSummarizationComponent } from './components/summarization/cognitive-service-summarization.component';\nimport { CognitiveServiceToneAnalyzerComponent } from './components/tone-analyzer/cognitive-service-tone-analyzer.component';\n\n@Component({\n  selector: 'rx-admin-cognitive-service',\n  templateUrl: './cognitive-service.component.html',\n  styleUrls: ['./cognitive-service.component.scss']\n})\nexport class CognitiveServiceAdminComponent extends BaseViewComponent implements OnInit {\n  @ViewChild('selectedConfiguration')\n  selectedConfiguration:\n    | CognitiveServiceAdministrationCredentialsComponent\n    | CognitiveServiceConnectionsComponent\n    | CognitiveServiceChatbotComponent\n    | CognitiveServiceRegionsComponent\n    | CognitiveServiceSummarizationComponent\n    | CognitiveServiceToneAnalyzerComponent;\n\n  cognitiveServices: RxSelectOption[] = RX_COGNITIVE_SERVICE.cognitiveServicesList.map((service) => ({\n    ...service,\n    name: this.translateService.instant(service.name)\n  }));\n\n  selectedService: [RxSelectOption] = [this.cognitiveServices[2]];\n  supportedCognitiveServices: RxSelectOption[] = [];\n  isAdministrator: boolean = this.rxCurrentUserService.isAdministrator();\n  currentOverlayContext: IUserOverlayGroupDescriptorChildren = this.rxOverlayService.getCurrentOverlayContext();\n  isNativeClassificationProvider: boolean;\n\n  constructor(\n    private rxModalService: RxModalService,\n    private rxCognitiveServiceService: RxCognitiveServiceService,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxOverlayService: RxOverlayService,\n    private rxSystemConfigurationService: RxSystemConfigurationService,\n    public translateService: TranslateService\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.notifyPropertyChanged('api', {\n      isDirty: () => this.selectedConfiguration.isFormDirty()\n    });\n\n    this.rxSystemConfigurationService\n      .getConfiguration(RX_COGNITIVE_SERVICE.connections.systemSettingKeys.classificationServiceProvider)\n      .subscribe((settingsData) => {\n        let cognitiveServices = this.cognitiveServices;\n\n        if (RX_COGNITIVE_SERVICE.nativeProvider === settingsData.value) {\n          this.isNativeClassificationProvider = true;\n\n          cognitiveServices = reject(cognitiveServices, {\n            id: RX_COGNITIVE_SERVICE.cognitiveServicesList[1].id\n          });\n        }\n\n        this.supportedCognitiveServices = cognitiveServices;\n      });\n  }\n\n  optionFormatter(option: RxSelectOption): string {\n    return option.name;\n  }\n\n  getSelectedServiceId(): string {\n    return this.selectedService[0].id;\n  }\n\n  isOwnCognitiveProviderButtonVisible(): boolean {\n    return (\n      this.isAdministrator &&\n      this.currentOverlayContext.overlayGroupId !== RX_OVERLAY.overlayGroupIds.base &&\n      !this.currentOverlayContext.isShared\n    );\n  }\n\n  openOnboardServicesPanel(): void {\n    this.rxModalService\n      .openDockedPanel({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-service.onboard-services.label'),\n        content: CognitiveServiceOnboardComponent,\n        size: 'lg'\n      })\n      .catch(noop);\n  }\n}\n","<rx-admin-settings header=\" {{ 'com.bmc.arsys.rx.client.admin.cognitive-service.header.title' | translate }} \">\n  <div class=\"mb-4 d-flex align-items-baseline\" *ngIf=\"isOwnCognitiveProviderButtonVisible()\">\n    <adapt-button\n      class=\"text-truncate\"\n      rx-id=\"onboard-services-button\"\n      btn-type=\"secondary\"\n      (click)=\"openOnboardServicesPanel()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.admin.cognitive-service-component.button.title' | translate }}\n    </adapt-button>\n\n    <adapt-icon\n      name=\"question_circle_o\"\n      class=\"ml-2\"\n      placement=\"bottom\"\n      maxWidth=\"400\"\n      [adaptPopover]=\"'com.bmc.arsys.rx.client.admin.cognitive-service-component.tooltip' | translate\"\n    >\n    </adapt-icon>\n  </div>\n\n  <div class=\"mb-4 align-items-end\">\n    <adapt-rx-select\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-service.configure.label' | translate }}\"\n      [options]=\"supportedCognitiveServices\"\n      [(ngModel)]=\"selectedService\"\n      [optionFormatter]=\"optionFormatter\"\n    >\n    </adapt-rx-select>\n  </div>\n\n  <div class=\"row pb-4\">\n    <div [ngSwitch]=\"getSelectedServiceId()\" class=\"col-12\">\n      <rx-cognitive-service-chatbot\n        [isAdministrator]=\"isAdministrator\"\n        [currentOverlayContext]=\"currentOverlayContext\"\n        *ngSwitchCase=\"cognitiveServices[0].id\"\n        #selectedConfiguration\n      >\n      </rx-cognitive-service-chatbot>\n\n      <rx-cognitive-service-administration-credentials\n        [isAdministrator]=\"isAdministrator\"\n        [currentOverlayContext]=\"currentOverlayContext\"\n        *ngSwitchCase=\"cognitiveServices[1].id\"\n        #selectedConfiguration\n      ></rx-cognitive-service-administration-credentials>\n\n      <rx-cognitive-service-connections\n        [isAdministrator]=\"isAdministrator\"\n        [currentOverlayContext]=\"currentOverlayContext\"\n        [isNativeClassificationProvider]=\"isNativeClassificationProvider\"\n        *ngSwitchCase=\"cognitiveServices[2].id\"\n        #selectedConfiguration\n      ></rx-cognitive-service-connections>\n\n      <rx-cognitive-service-summarization\n        [isAdministrator]=\"isAdministrator\"\n        [currentOverlayContext]=\"currentOverlayContext\"\n        *ngSwitchCase=\"cognitiveServices[3].id\"\n        #selectedConfiguration\n      ></rx-cognitive-service-summarization>\n\n      <rx-cognitive-service-regions\n        [isAdministrator]=\"isAdministrator\"\n        [currentOverlayContext]=\"currentOverlayContext\"\n        *ngSwitchCase=\"cognitiveServices[4].id\"\n        #selectedConfiguration\n      ></rx-cognitive-service-regions>\n\n      <rx-cognitive-service-tone-analyzer\n        [isAdministrator]=\"isAdministrator\"\n        [currentOverlayContext]=\"currentOverlayContext\"\n        *ngSwitchCase=\"cognitiveServices[5].id\"\n        #selectedConfiguration\n      ></rx-cognitive-service-tone-analyzer>\n    </div>\n  </div>\n</rx-admin-settings>\n","import { NgModule, ComponentFactoryResolver } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AdaptAccordionModule,\n  AdaptAlertModule,\n  AdaptBusyModule,\n  AdaptButtonModule,\n  AdaptIconModule,\n  AdaptPopoverModule,\n  AdaptRxCheckboxModule,\n  AdaptRxCounterModule,\n  AdaptRxSelectModule,\n  AdaptRxSwitchModule,\n  AdaptRxTextareaModule,\n  AdaptRxTextfieldModule,\n  AdaptRxValidatorsModule,\n  AdaptRxLabelModule\n} from '@bmc-ux/adapt-angular';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxJsonModule } from '@helix/platform/utils';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { CognitiveServiceChatbotComponent } from './components/chatbot/cognitive-service-chatbot.component';\nimport { CognitiveServiceAdministrationCredentialsComponent } from './components/administration-credentials/cognitive-service-administration-credentials.component';\nimport { CognitiveServiceConnectionsComponent } from './components/connections/cognitive-service-connections.component';\nimport { CognitiveServiceOnboardComponent } from './components/onboard/cognitive-service-onboard.component';\nimport { CognitiveServiceRegionsComponent } from './components/regions/cognitive-service-regions.component';\nimport { CognitiveServiceSummarizationComponent } from './components/summarization/cognitive-service-summarization.component';\nimport { CognitiveServiceToneAnalyzerComponent } from './components/tone-analyzer/cognitive-service-tone-analyzer.component';\nimport { CognitiveServiceAdminComponent } from './cognitive-service.component';\nimport { RxConnectionTesterModule } from '@helix/platform/ui-kit';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [\n    CognitiveServiceAdminComponent,\n    CognitiveServiceAdministrationCredentialsComponent,\n    CognitiveServiceChatbotComponent,\n    CognitiveServiceConnectionsComponent,\n    CognitiveServiceOnboardComponent,\n    CognitiveServiceRegionsComponent,\n    CognitiveServiceSummarizationComponent,\n    CognitiveServiceToneAnalyzerComponent\n  ],\n  imports: [\n    AdaptAccordionModule,\n    AdaptAlertModule.forRoot(),\n    AdaptBusyModule,\n    AdaptButtonModule,\n    AdaptIconModule,\n    AdaptPopoverModule,\n    AdaptRxCheckboxModule,\n    AdaptRxCounterModule,\n    AdaptRxSelectModule,\n    AdaptRxSwitchModule,\n    AdaptRxTextareaModule,\n    AdaptRxTextfieldModule,\n    AdaptRxValidatorsModule,\n    AdminSettingsModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RxConnectionTesterModule,\n    RxJsonModule,\n    TranslateModule,\n    AdaptRxLabelModule\n  ],\n  entryComponents: [CognitiveServiceAdminComponent, CognitiveServiceOnboardComponent]\n})\nexport class CognitiveServiceRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    this.rxViewComponentRegistryService.register({\n      type: 'rx-admin-cognitive-service',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(CognitiveServiceAdminComponent),\n      name: 'Cognitive service',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { FileObj } from '@bmc-ux/adapt-angular';\nimport { IRecordGridFilterModel } from '@helix/platform/view/components';\nimport { IFieldDefinition } from '@helix/platform/record/api';\n\nexport enum CognitiveTrainingTabNames {\n  DataSets = 'dataSets',\n  TestResults = 'testResults'\n}\n\nexport enum CognitiveTrainingDataSourceNames {\n  InnovationSuiteDataSource = 'innovationSuiteDataSource',\n  FileDataSource = 'fileDataSource'\n}\n\nexport enum CognitiveTrainingEvaluationNames {\n  AutoClassificationTrainingAndEvaluation = 'autoClassificationTrainingAndEvaluation',\n  ChatbotEvaluation = 'chatbotEvaluation'\n}\n\nexport interface ICognitiveTrainingTab {\n  title: string;\n  name: string;\n  deletionConfirmationMessage: string;\n  deletionSuccessMessage: string;\n  recordDefinitionName: string;\n}\n\nexport interface ICognitiveTrainingType {\n  displayName: string;\n  name: string;\n  title: string;\n  value: number;\n  uniqueValue: number;\n}\n\nexport interface ICognitiveTrainingEvaluation {\n  isExpanded: boolean;\n  name: string;\n  queryExpression: string;\n  serviceProviderQueryExpresion?: string;\n  title: string;\n}\n\nexport interface ICognitiveTrainingClassification {\n  className: string;\n  confidence: number;\n}\n\nexport interface ICognitiveTrainingDataSourceType {\n  displayName: string;\n  name: string;\n  resourceType: string;\n  dataSourceHistory: ICognitiveTrainingDataSourceHistory;\n}\n\nexport interface ICognitiveTrainingDataSet {\n  chatbotDefinitionName?: string;\n  chatbotLocale?: string[];\n  csvFile: FileObj | FileObj[] | ICognitiveTrainingDataSetCsvFile[];\n  dataSetName: string;\n  dataSource?: ICognitiveTrainingDataSource;\n  dataSourceHistory?: ICognitiveTrainingDataSourceHistory;\n  description: string;\n  lastSubmittedDate: string;\n  lastTrainedDate?: string;\n  locale: string[];\n  machineLearningError?: string;\n  status?: ICognitiveTrainingDataSetStatus;\n  testDataPercent?: number;\n  trainDataPercent?: number;\n  useSeedTrainingData?: string;\n  trainingStatuses?: string[];\n  filterMode?: string;\n}\n\nexport interface ICognitiveTrainingDataSetStatus {\n  label: string;\n  value: number;\n}\n\nexport interface ICognitiveTrainingDataSetCsvFile {\n  data: ICognitiveTrainingDataSetCsvFileData;\n  downloadURL: string;\n  isUploading: boolean;\n}\n\nexport interface ICognitiveTrainingDataSetCsvFileData {\n  name: string;\n}\n\nexport interface ICognitiveTrainingDataSource {\n  file: FileObj | FileObj[] | ICognitiveTrainingDataSetCsvFile[];\n  value: string;\n}\n\nexport interface ICognitiveTrainingDataSourceHistory {\n  fileName?: string;\n  isScheduleEnabled?: boolean;\n  layout?: ICognitiveTrainingDataSourceHistoryLayout;\n  queryExpression?: string;\n  resourceType: string;\n  recordDefinitionName?: string;\n  trainingDataMapper?: ICognitiveTrainingDataSourceHistoryTrainingDataMapper;\n  timeCriteria?: ICognitiveTrainingDataSourceHistoryTimeCriteria;\n}\n\nexport interface ICognitiveTrainingDataSourceHistoryTimeCriteria {\n  resourceType: string;\n}\n\nexport interface ICognitiveTrainingDataSourceHistoryLayout {\n  queryExpressionBasic: IRecordGridFilterModel;\n  textFields: IFieldDefinition[];\n  categoryFields: IFieldDefinition[];\n}\n\nexport interface ICognitiveTrainingDataSourceHistoryTrainingDataMapper {\n  resourceType: string;\n  textFields: string[];\n  categoryFields: string[];\n}\n","import { MachineLearningProviderNames } from '@helix/platform/shared/api';\nimport {\n  CognitiveTrainingDataSourceNames,\n  CognitiveTrainingTabNames,\n  CognitiveTrainingEvaluationNames\n} from './cognitive-training.types';\n\nconst defaultTrainDataPercentage = 80;\n\nexport const RX_COGNITIVE_TRAINING = {\n  settings: {\n    sections: [\n      {\n        title: 'com.bmc.arsys.rx.client.admin.cognitive-training.auto-classification-training.evaluation.title',\n        evaluationName: CognitiveTrainingEvaluationNames.AutoClassificationTrainingAndEvaluation,\n        isExpanded: true\n      },\n      {\n        title: 'com.bmc.arsys.rx.client.admin.cognitive-training.chatbot-evaluation-ibm.watson.assistant.title',\n        evaluationName: CognitiveTrainingEvaluationNames.ChatbotEvaluation,\n        isExpanded: false\n      }\n    ],\n\n    tabs: {\n      [CognitiveTrainingTabNames.DataSets]: {\n        title: 'com.bmc.arsys.rx.client.admin.cognitive-training.data-sets.title',\n        name: CognitiveTrainingTabNames.DataSets,\n        deletionConfirmationMessage:\n          'com.bmc.arsys.rx.client.admin.cognitive-training.data-set-delete-confirmation.message',\n        deletionSuccessMessage: 'com.bmc.arsys.rx.client.admin.cognitive-training.data-set-deleted.message',\n        recordDefinitionName: 'Cognitive Service Data Set Descriptor'\n      },\n      [CognitiveTrainingTabNames.TestResults]: {\n        title: 'com.bmc.arsys.rx.client.admin.cognitive-training.test-results.title',\n        name: CognitiveTrainingTabNames.TestResults,\n        deletionConfirmationMessage:\n          'com.bmc.arsys.rx.client.admin.cognitive-training.test-results-delete-confirmation.message',\n        deletionSuccessMessage: 'com.bmc.arsys.rx.client.admin.cognitive-training.test-results-deleted.message',\n        recordDefinitionName: 'Cognitive Service Test Results'\n      }\n    },\n\n    evaluations: {\n      [CognitiveTrainingEvaluationNames.AutoClassificationTrainingAndEvaluation]: {\n        name: CognitiveTrainingEvaluationNames.AutoClassificationTrainingAndEvaluation,\n        queryExpression: \"'1732' = 0 AND '61001' = \",\n        serviceProviderQueryExpresion: \" AND '1820' = \"\n      },\n      [CognitiveTrainingEvaluationNames.ChatbotEvaluation]: {\n        name: CognitiveTrainingEvaluationNames.ChatbotEvaluation,\n        queryExpression: \"'1732' = 1 AND '61001' = \"\n      }\n    },\n\n    trainingTypes: {\n      [MachineLearningProviderNames.Watson]: {\n        title:\n          'com.bmc.arsys.rx.client.admin.cognitive-training.auto-classification-training.evaluation-ibm-watson.title',\n        displayName: 'com.bmc.arsys.rx.client.admin.cognitive-training.ibm-watson-conversation.title',\n        name: MachineLearningProviderNames.Watson,\n        value: 0,\n        uniqueValue: 0\n      },\n      [MachineLearningProviderNames.Native]: {\n        title:\n          'com.bmc.arsys.rx.client.admin.cognitive-training.auto-classification-training.evaluation-bmc-native-google.title',\n        displayName: 'com.bmc.arsys.rx.client.admin.cognitive-service.bmc-native.title',\n        name: 'native',\n        value: 0,\n        uniqueValue: 1\n      },\n      [MachineLearningProviderNames.Helix]: {\n        title:\n          'com.bmc.arsys.rx.client.admin.cognitive-training.auto-classification-training.evaluation-helix-ade.title',\n        displayName: 'com.bmc.arsys.rx.client.admin.cognitive-service.helix-ade.title',\n        name: MachineLearningProviderNames.Helix,\n        value: 0,\n        uniqueValue: 2\n      },\n      chatbot: {\n        value: 1\n      }\n    },\n\n    dataSourceTypes: {\n      [CognitiveTrainingDataSourceNames.InnovationSuiteDataSource]: {\n        displayName: 'com.bmc.arsys.rx.client.admin.cognitive-search.bmc-helix-platform-data-set.label',\n        name: CognitiveTrainingDataSourceNames.InnovationSuiteDataSource,\n        resourceType: 'com.bmc.arsys.rx.services.cognitive.domain.InnovationSuiteDataSource',\n        dataSourceHistory: {\n          layout: {\n            queryExpressionBasic: {\n              filtersJson: null,\n              basicFilters: null\n            },\n            textFields: [],\n            categoryFields: []\n          },\n          resourceType: 'com.bmc.arsys.rx.services.cognitive.domain.InnovationSuiteDataSource',\n          recordDefinitionName: '',\n          queryExpression: '',\n          trainingDataMapper: {\n            resourceType: 'com.bmc.arsys.rx.services.cognitive.domain.CategorizationTrainingDataMapper',\n            textFields: [],\n            categoryFields: []\n          },\n          timeCriteria: null,\n          isScheduleEnabled: false\n        }\n      },\n      [CognitiveTrainingDataSourceNames.FileDataSource]: {\n        displayName: 'com.bmc.arsys.rx.client.admin.cognitive-training.csv-data-set.label',\n        name: CognitiveTrainingDataSourceNames.FileDataSource,\n        resourceType: 'com.bmc.arsys.rx.services.cognitive.domain.FileDataSource',\n        dataSourceHistory: {\n          resourceType: 'com.bmc.arsys.rx.services.cognitive.domain.FileDataSource',\n          fileName: ''\n        }\n      }\n    },\n\n    commands: {\n      classify: 'com.bmc.arsys.rx.application.cognitive.command.AutomaticCategorySuggestionCommand',\n      train: 'com.bmc.arsys.rx.application.cognitive.command.TrainCognitiveServiceCommand',\n      test: 'com.bmc.arsys.rx.application.cognitive.command.TestChatbotCommand'\n    },\n\n    trainingStatuses: {\n      untrained: {\n        label: 'Untrained',\n        value: 0\n      },\n      training: {\n        label: 'Training',\n        value: 1\n      },\n      trained: {\n        label: 'Trained',\n        value: 2\n      },\n      failed: {\n        label: 'Failed',\n        value: 3\n      },\n      pendingRetraining: {\n        label: 'Pending retraining',\n        value: 4\n      },\n      inProgress: {\n        label: 'In progress',\n        value: 5\n      },\n      created: {\n        label: 'Created',\n        value: 6\n      }\n    },\n\n    evaluationStatuses: {\n      queued: {\n        label: 'Queued',\n        value: 0\n      },\n      running: {\n        label: 'Running',\n        value: 10\n      },\n      completed: {\n        label: 'Completed',\n        value: 20\n      },\n      failed: {\n        label: 'Failed',\n        value: 30\n      }\n    },\n\n    nativeProviderTrainingLocales: ['de', 'en', 'es', 'fr', 'it', 'pt'],\n\n    watsonProviderTrainingLocales: ['ar', 'de', 'en', 'es', 'fr', 'it', 'ja', 'ko', 'nl', 'pt', 'zh-cn', 'zh-tw'],\n\n    defaultTrainingLocale: 'en',\n\n    dataSetDefinitionName: 'Cognitive Service Data Set Descriptor',\n    testResultsDefinitionName: 'Cognitive Service Test Results',\n\n    fieldIds: {\n      modifiedDate: 6,\n      evaluationStatus: 7,\n      instanceId: 379,\n      dataSetID: 1730,\n      dataSetName: 1731,\n      trainingType: 1732,\n      machineLearningError: 1733,\n      error: 1733,\n      dataSource: 1734,\n      dateLastSubmitted: 1735,\n      dateLastTrained: 1736,\n      locale: 1737,\n      dataSourceHistory: 1738,\n      developerId: 1739,\n      newDataSetId: 1740,\n      useSeedTrainingData: 1741,\n      resultCsv: 1795,\n      serviceInstanceGuid: 1742,\n      trainDataPercent: 1796,\n      testDataPercent: 1797,\n      trainingDataCsv: 1798,\n      testDataCsv: 1799,\n      accuracy: 1806,\n      precision: 1807,\n      recall: 1808,\n      fScore: 1809,\n      dateLastTested: 1811,\n      chatbotName: 1816,\n      classificationServiceProvider: 1820,\n      dataSetLocale: 1829,\n      bundleId: 61001\n    },\n\n    defaultTrainDataPercentage: defaultTrainDataPercentage,\n    defaultTestDataPercentage: 100 - defaultTrainDataPercentage\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { RxRecordInstanceDataPageService } from '@helix/platform/record/api';\nimport {\n  IDataPageResult,\n  ISystemConfiguration,\n  RxSystemConfigurationService,\n  RX_CHATBOT\n} from '@helix/platform/shared/api';\nimport { values } from 'lodash';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxCognitiveTrainingService {\n  constructor(\n    private rxSystemConfigurationService: RxSystemConfigurationService,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService\n  ) {}\n\n  getClassificationServiceProvider(): Observable<ISystemConfiguration> {\n    return this.rxSystemConfigurationService.getConfiguration('classificationServiceProvider');\n  }\n\n  getChatbotLocalesById(id: string): Observable<IDataPageResult> {\n    return this.rxRecordInstanceDataPageService.post({\n      params: {\n        recorddefinition: RX_CHATBOT.chatbotLocales.recordDefinitionName,\n        propertySelection: values(RX_CHATBOT.chatbotLocales.fieldIds).join(','),\n        queryExpression: `'${RX_CHATBOT.chatbotLocales.fieldIds.botConfigurationId}'=\"${id}\"`\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MachineLearningProviderNames } from '@helix/platform/shared/api';\nimport { ICognitiveTrainingDataSourceHistory, ICognitiveTrainingDataSourceType } from './cognitive-training.types';\nimport { RX_COGNITIVE_TRAINING } from './cognitive-training.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxCognitiveTrainingUtilsService {\n  getDataSourceType(dataSourceHistory: ICognitiveTrainingDataSourceHistory): ICognitiveTrainingDataSourceType {\n    let dataSourceType: ICognitiveTrainingDataSourceType;\n\n    if (dataSourceHistory.fileName) {\n      dataSourceType = RX_COGNITIVE_TRAINING.settings.dataSourceTypes.fileDataSource;\n    } else if (dataSourceHistory.recordDefinitionName) {\n      dataSourceType = RX_COGNITIVE_TRAINING.settings.dataSourceTypes.innovationSuiteDataSource;\n    }\n\n    return dataSourceType;\n  }\n\n  getTrainingLocales(trainingTypeValue: number): string[] {\n    let result: string[];\n\n    if (trainingTypeValue === RX_COGNITIVE_TRAINING.settings.trainingTypes[MachineLearningProviderNames.Native].value) {\n      result = RX_COGNITIVE_TRAINING.settings.nativeProviderTrainingLocales;\n    } else if (\n      trainingTypeValue === RX_COGNITIVE_TRAINING.settings.trainingTypes[MachineLearningProviderNames.Watson].value\n    ) {\n      result = RX_COGNITIVE_TRAINING.settings.watsonProviderTrainingLocales;\n    }\n\n    return result;\n  }\n}\n","import { Component, Injector, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { DismissReasons, DockedPanelContext, RxSelectOption, UploaderMode } from '@bmc-ux/adapt-angular';\nimport { RX_RECORD_DEFINITION, RxRecordInstanceService } from '@helix/platform/record/api';\nimport {\n  IChatbotDefinition,\n  IPlainObject,\n  RX_CHATBOT,\n  RxChatbotDefinitionDataPageService\n} from '@helix/platform/shared/api';\nimport { IDefinitionPickerComponentOptions, RxDefinitionPickerType } from '@helix/platform/shared/components';\nimport { assign, find, isEmpty } from 'lodash';\nimport moment from 'moment-es6';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\nimport { RxCognitiveTrainingUtilsService } from '../../cognitive-training-utils.service';\nimport { RX_COGNITIVE_TRAINING } from '../../cognitive-training.constant';\nimport { RxCognitiveTrainingService } from '../../cognitive-training.service';\nimport { ICognitiveTrainingDataSet } from '../../cognitive-training.types';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RxModalClass } from '@helix/platform/ui-kit';\n\n@Component({\n  selector: 'rx-chatbot-data-set-blade',\n  templateUrl: './chatbot-data-set-blade.component.html'\n})\nexport class ChatbotDataSetBladeComponent extends RxModalClass implements OnInit, OnDestroy {\n  @ViewChild('chatbotDataSetForm', { static: true, read: NgForm })\n  chatbotDataSetForm: NgForm;\n\n  contextData: IPlainObject;\n  dataSet: ICognitiveTrainingDataSet;\n  localeOptions: RxSelectOption[];\n\n  chatbotDefinitionPickerOptions: IDefinitionPickerComponentOptions = {\n    label: this.translateService.instant('com.bmc.arsys.rx.client.admin.chatbots.name.label'),\n    definitionType: RxDefinitionPickerType.Chatbot,\n    required: true\n  };\n\n  csvFileUploadMode: number = UploaderMode.Auto;\n\n  private chatbotDefinitionName$ = new BehaviorSubject<string>('');\n\n  private chatbotDefinitions$: Observable<IChatbotDefinition[]> = this.rxChatbotDefinitionDataPageService\n    .get({\n      headers: {\n        'default-bundle-scope': ''\n      },\n      params: {\n        propertySelection: ['chatbotName', 'id', 'enableTranslation']\n      }\n    })\n    .pipe(map((dataPage) => dataPage.data as IChatbotDefinition[]));\n\n  chatbotDefinition$: Observable<IChatbotDefinition> = combineLatest([\n    this.chatbotDefinitionName$,\n    this.chatbotDefinitions$\n  ]).pipe(\n    map(\n      ([chatbotDefinitionName, chatbotDefinitions]) =>\n        find(chatbotDefinitions, { chatbotName: chatbotDefinitionName }) || null\n    ),\n    shareReplay(1)\n  );\n\n  isChatbotTranslationEnabled$: Observable<boolean> = this.chatbotDefinition$.pipe(\n    map((chatbotDefinition) => chatbotDefinition?.enableTranslation === 1)\n  );\n\n  chatbotLocaleOptions$: Observable<RxSelectOption[]> = this.chatbotDefinition$.pipe(\n    switchMap((chatbotDefinition) =>\n      chatbotDefinition\n        ? this.rxCognitiveTrainingService\n            .getChatbotLocalesById(chatbotDefinition.id)\n            .pipe(\n              map(\n                (dataPageResult) =>\n                  dataPageResult.data.map(\n                    (localeFieldIds) => localeFieldIds[RX_CHATBOT.chatbotLocales.fieldIds.locale]\n                  ) as RxSelectOption[]\n              )\n            )\n        : of([])\n    )\n  );\n\n  constructor(\n    private dockedPanelContext: DockedPanelContext,\n    private rxChatbotDefinitionDataPageService: RxChatbotDefinitionDataPageService,\n    private rxCognitiveTrainingService: RxCognitiveTrainingService,\n    private rxCognitiveTrainingUtilsService: RxCognitiveTrainingUtilsService,\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private translateService: TranslateService,\n    protected injector: Injector\n  ) {\n    super(dockedPanelContext, injector);\n    this.contextData = this.dockedPanelContext.getData().data;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.localeOptions = this.rxCognitiveTrainingUtilsService.getTrainingLocales(\n      RX_COGNITIVE_TRAINING.settings.trainingTypes.chatbot.value\n    );\n\n    const dataSource = this.contextData.recordInstance.getFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource\n    );\n\n    this.dataSet = {\n      dataSetName: this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetName),\n      description: this.contextData.recordInstance.getFieldValue(RX_RECORD_DEFINITION.coreFieldIds.description),\n      csvFile: null,\n      chatbotLocale: [this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.locale)],\n\n      chatbotDefinitionName: this.contextData.recordInstance.getFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.chatbotName\n      ),\n\n      locale: [\n        this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetLocale) ||\n          RX_COGNITIVE_TRAINING.settings.defaultTrainingLocale\n      ],\n\n      lastSubmittedDate: this.contextData.recordInstance.getFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.dateLastSubmitted\n      ),\n\n      status: find(RX_COGNITIVE_TRAINING.settings.trainingStatuses, {\n        value: this.contextData.recordInstance.getFieldValue(RX_RECORD_DEFINITION.coreFieldIds.status)\n      })\n    };\n\n    if (dataSource && (this.contextData.editDataSet || this.contextData.copyDataSet)) {\n      this.rxRecordInstanceService\n        .getAttachment(\n          RX_COGNITIVE_TRAINING.settings.dataSetDefinitionName,\n          RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n          this.contextData.getAttachmentRecordInstanceId\n        )\n        .subscribe((blob) => {\n          this.dataSet.csvFile = [\n            {\n              data: assign(blob, {\n                name: dataSource\n              }),\n              downloadURL: this.rxRecordInstanceService.getAttachmentDownloadUrl(\n                RX_COGNITIVE_TRAINING.settings.dataSetDefinitionName,\n                RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n                this.contextData.recordInstance.id\n              ),\n              isUploading: true\n            }\n          ];\n        });\n    }\n\n    if (this.dataSet.chatbotDefinitionName) {\n      this.chatbotDefinitionName$.next(this.dataSet.chatbotDefinitionName);\n    }\n  }\n\n  isDirty(): boolean {\n    return this.chatbotDataSetForm.dirty;\n  }\n\n  ngOnDestroy(): void {\n    this.chatbotDefinitionName$.complete();\n  }\n\n  onChatbotDefinitionNameChange(chatbotDefinitionName: string): void {\n    this.dataSet.chatbotLocale = [];\n    this.dataSet.locale = [];\n\n    this.chatbotDefinitionName$.next(chatbotDefinitionName);\n  }\n\n  optionFormatter = (opt: RxSelectOption) => opt;\n\n  onSaveClick(): void {\n    this.contextData.recordInstance.setFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSourceHistory,\n      JSON.stringify({\n        resourceType: this.contextData.dataSourceType.resourceType,\n        fileName: this.dataSet.csvFile && this.dataSet.csvFile[0].data.name\n      })\n    );\n\n    this.contextData.recordInstance.setFieldProp(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n      'file',\n      (!isEmpty(this.dataSet.csvFile) && this.dataSet.csvFile[0].data) || null\n    );\n\n    this.contextData.recordInstance.setFieldProp(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n      'value',\n      (!isEmpty(this.dataSet.csvFile) && this.dataSet.csvFile[0].data.name) || null\n    );\n\n    this.contextData.recordInstance.setFieldValue(\n      RX_RECORD_DEFINITION.coreFieldIds.description,\n      this.dataSet.description\n    );\n\n    this.contextData.recordInstance.setFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetLocale,\n      this.dataSet.locale[0] || null\n    );\n\n    this.contextData.recordInstance.setFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dateLastSubmitted, moment());\n\n    if (this.contextData.isNewDataSet || this.contextData.copyDataSet) {\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.bundleId,\n        this.contextData.bundleId\n      );\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetName,\n        this.dataSet.dataSetName\n      );\n\n      this.contextData.recordInstance.setFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetID, '');\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.chatbotName,\n        this.dataSet.chatbotDefinitionName\n      );\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.locale,\n        this.dataSet.chatbotLocale[0]\n      );\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_RECORD_DEFINITION.coreFieldIds.status,\n        RX_COGNITIVE_TRAINING.settings.trainingStatuses.untrained.value\n      );\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.trainingType,\n        RX_COGNITIVE_TRAINING.settings.trainingTypes.chatbot.value\n      );\n\n      this.rxRecordInstanceService.create(this.contextData.recordInstance).subscribe(() => {\n        this.dockedPanelContext.close('save');\n      });\n    } else if (this.contextData.editDataSet) {\n      if (\n        this.dataSet.status.value === RX_COGNITIVE_TRAINING.settings.trainingStatuses.trained.value ||\n        this.dataSet.status.value === RX_COGNITIVE_TRAINING.settings.trainingStatuses.failed.value\n      ) {\n        this.contextData.recordInstance.setFieldValue(\n          RX_RECORD_DEFINITION.coreFieldIds.status,\n          RX_COGNITIVE_TRAINING.settings.trainingStatuses.pendingRetraining.value\n        );\n      }\n\n      this.rxRecordInstanceService.save(this.contextData.recordInstance).subscribe(() => {\n        this.dockedPanelContext.close('save');\n      });\n    }\n  }\n\n  onCloseClick(): void {\n    this.dockedPanelContext.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"dp-body\">\n  <form #chatbotDataSetForm=\"ngForm\">\n    <div class=\"d-flex justify-content-between m-0 mb-4\" *ngIf=\"contextData.editDataSet\">\n      <label class=\"form-control-label\">\n        {{ 'com.bmc.arsys.rx.client.admin.cognitive-training.date-last-submitted.label' | translate }}\n      </label>\n\n      <div>{{ dataSet.lastSubmittedDate | date: 'medium' }}</div>\n    </div>\n\n    <adapt-rx-textfield\n      class=\"form-group d-block\"\n      name=\"data-set-name\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-search.data-set-name.label' | translate }}\"\n      rx-id=\"data-set-name-field\"\n      required\n      [(ngModel)]=\"dataSet.dataSetName\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-textfield\n      class=\"form-group d-block\"\n      name=\"description\"\n      label=\"{{ 'com.bmc.arsys.rx.client.common.description.label' | translate }}\"\n      rx-id=\"description-field\"\n      required\n      [(ngModel)]=\"dataSet.description\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-uploader\n      class=\"form-group d-block\"\n      name=\"csv-file\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-training.csv-file.label' | translate }}\"\n      rx-id=\"csv-file-field\"\n      required\n      reusable=\"true\"\n      [uploadMode]=\"csvFileUploadMode\"\n      [allowedTypes]=\"['csv']\"\n      [(ngModel)]=\"dataSet.csvFile\"\n    >\n    </adapt-rx-uploader>\n\n    <rx-definition-picker\n      class=\"form-group d-block\"\n      name=\"chatbot-name\"\n      rx-id=\"chatbot-name-field\"\n      required\n      [options]=\"chatbotDefinitionPickerOptions\"\n      [(ngModel)]=\"dataSet.chatbotDefinitionName\"\n      (ngModelChange)=\"onChatbotDefinitionNameChange($event)\"\n    >\n    </rx-definition-picker>\n\n    <div *ngIf=\"chatbotDefinition$ | async\">\n      <adapt-rx-select\n        class=\"form-group d-block\"\n        name=\"chatbot-locale\"\n        label=\"{{\n          'com.bmc.arsys.rx.client.admin.cognitive-training.chatbot-data-set-blade.chatbot-locale.label' | translate\n        }}\"\n        rx-id=\"chatbot-locale-field\"\n        required\n        [options]=\"(chatbotLocaleOptions$ | async) || []\"\n        [optionFormatter]=\"optionFormatter\"\n        [(ngModel)]=\"dataSet.chatbotLocale\"\n      >\n      </adapt-rx-select>\n\n      <adapt-rx-select\n        class=\"form-group d-block\"\n        *ngIf=\"isChatbotTranslationEnabled$ | async\"\n        name=\"locale\"\n        label=\"{{\n          'com.bmc.arsys.rx.client.admin.cognitive-training.chatbot-data-set-blade.data-set-locale.label' | translate\n        }}\"\n        rx-id=\"locale-field\"\n        required\n        [options]=\"localeOptions\"\n        [optionFormatter]=\"optionFormatter\"\n        [(ngModel)]=\"dataSet.locale\"\n      >\n      </adapt-rx-select>\n    </div>\n  </form>\n</div>\n\n<div class=\"dp-footer\">\n  <button\n    class=\"mr-2\"\n    type=\"button\"\n    rx-id=\"save-button\"\n    adapt-button\n    btn-type=\"primary\"\n    [disabled]=\"chatbotDataSetForm.pristine || chatbotDataSetForm.invalid\"\n    (click)=\"onSaveClick()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button class=\"mr-2\" type=\"button\" rx-id=\"close-button\" adapt-button btn-type=\"secondary\" (click)=\"onCloseClick()\">\n    {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n  </button>\n</div>\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { assign, find, isEmpty } from 'lodash';\nimport moment from 'moment-es6';\nimport { DismissReasons, DockedPanelContext, RxSelectOption, UploaderMode } from '@bmc-ux/adapt-angular';\nimport { RX_RECORD_DEFINITION, RxRecordInstanceService } from '@helix/platform/record/api';\nimport { IPlainObject } from '@helix/platform/shared/api';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { ICognitiveTrainingDataSet } from '../../cognitive-training.types';\nimport { RX_COGNITIVE_TRAINING } from '../../cognitive-training.constant';\nimport { RxCognitiveTrainingUtilsService } from '../../cognitive-training-utils.service';\n\n@Component({\n  selector: 'rx-file-data-set-blade',\n  templateUrl: './file-data-set-blade.component.html'\n})\nexport class FileDataSetBladeComponent extends RxModalClass implements OnInit {\n  @ViewChild('fileDataSetForm', { static: true, read: NgForm })\n  fileDataSetForm: NgForm;\n\n  contextData: IPlainObject;\n  dataSet: ICognitiveTrainingDataSet;\n  localeOptions: RxSelectOption[];\n\n  csvFileUploadMode = UploaderMode.Auto;\n\n  constructor(\n    private dockedPanelContext: DockedPanelContext,\n    private rxCognitiveTrainingUtilsService: RxCognitiveTrainingUtilsService,\n    private rxRecordInstanceService: RxRecordInstanceService,\n    protected injector: Injector\n  ) {\n    super(dockedPanelContext, injector);\n    this.contextData = this.dockedPanelContext.getData().data;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.localeOptions = this.rxCognitiveTrainingUtilsService.getTrainingLocales(this.contextData.trainingType.value);\n\n    const dataSource = this.contextData.recordInstance.getFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource\n    );\n\n    this.dataSet = {\n      dataSetName: this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetName),\n      description: this.contextData.recordInstance.getFieldValue(RX_RECORD_DEFINITION.coreFieldIds.description),\n      csvFile: null,\n\n      locale: [\n        this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.locale) ||\n          RX_COGNITIVE_TRAINING.settings.defaultTrainingLocale\n      ],\n\n      testDataPercent: this.contextData.isNewDataSet\n        ? RX_COGNITIVE_TRAINING.settings.defaultTestDataPercentage\n        : this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.testDataPercent),\n\n      trainDataPercent: this.contextData.isNewDataSet\n        ? RX_COGNITIVE_TRAINING.settings.defaultTrainDataPercentage\n        : this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.trainDataPercent),\n\n      status: find(RX_COGNITIVE_TRAINING.settings.trainingStatuses, {\n        value: this.contextData.recordInstance.getFieldValue(RX_RECORD_DEFINITION.coreFieldIds.status)\n      }),\n\n      lastSubmittedDate: this.contextData.recordInstance.getFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.dateLastSubmitted\n      ),\n\n      lastTrainedDate: this.contextData.recordInstance.getFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.dateLastTrained\n      ),\n      machineLearningError: this.contextData.recordInstance.getFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.machineLearningError\n      )\n    };\n\n    if (dataSource && (this.contextData.editDataSet || this.contextData.copyDataSet)) {\n      this.rxRecordInstanceService\n        .getAttachment(\n          RX_COGNITIVE_TRAINING.settings.dataSetDefinitionName,\n          RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n          this.contextData.getAttachmentRecordInstanceId\n        )\n        .subscribe((blob) => {\n          this.dataSet.csvFile = [\n            {\n              data: assign(blob, {\n                name: dataSource\n              }),\n              downloadURL: this.rxRecordInstanceService.getAttachmentDownloadUrl(\n                RX_COGNITIVE_TRAINING.settings.dataSetDefinitionName,\n                RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n                this.contextData.recordInstance.id\n              ),\n              isUploading: true\n            }\n          ];\n        });\n    }\n  }\n\n  isDirty(): boolean {\n    return this.fileDataSetForm.dirty;\n  }\n\n  optionFormatter = (opt: RxSelectOption) => opt;\n\n  onTrainDataPercentCounterChange(trainDataPercent: number): void {\n    this.dataSet.testDataPercent = 100 - trainDataPercent;\n  }\n\n  onTestDataPercentCounterChange(testDataPercent: number): void {\n    this.dataSet.trainDataPercent = 100 - testDataPercent;\n  }\n\n  onSaveClick(): void {\n    this.contextData.recordInstance.setFieldValue(\n      RX_RECORD_DEFINITION.coreFieldIds.description,\n      this.dataSet.description\n    );\n\n    this.contextData.recordInstance.setFieldProp(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n      'file',\n      (!isEmpty(this.dataSet.csvFile) && this.dataSet.csvFile[0].data) || null\n    );\n\n    this.contextData.recordInstance.setFieldProp(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n      'value',\n      (!isEmpty(this.dataSet.csvFile) && this.dataSet.csvFile[0].data.name) || null\n    );\n\n    this.contextData.recordInstance.setFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSourceHistory,\n      JSON.stringify({\n        resourceType: this.contextData.dataSourceType.resourceType,\n        fileName: this.dataSet.csvFile[0].data.name\n      })\n    );\n\n    this.contextData.recordInstance.setFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.locale,\n      this.dataSet.locale[0]\n    );\n\n    this.contextData.recordInstance.setFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dateLastSubmitted, moment());\n\n    this.contextData.recordInstance.setFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.testDataPercent,\n      this.dataSet.testDataPercent\n    );\n\n    this.contextData.recordInstance.setFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.trainDataPercent,\n      this.dataSet.trainDataPercent\n    );\n\n    if (this.contextData.isNewDataSet || this.contextData.copyDataSet) {\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.bundleId,\n        this.contextData.bundleId\n      );\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetName,\n        this.dataSet.dataSetName\n      );\n\n      this.contextData.recordInstance.setFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetID, '');\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_RECORD_DEFINITION.coreFieldIds.status,\n        RX_COGNITIVE_TRAINING.settings.trainingStatuses.untrained.value\n      );\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.classificationServiceProvider,\n        this.contextData.trainingType.uniqueValue\n      );\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.trainingType,\n        this.contextData.trainingType.value\n      );\n\n      this.rxRecordInstanceService.create(this.contextData.recordInstance).subscribe(() => {\n        this.dockedPanelContext.close('save');\n      });\n    } else if (this.contextData.editDataSet) {\n      if (\n        this.dataSet.status.value === RX_COGNITIVE_TRAINING.settings.trainingStatuses.trained.value ||\n        this.dataSet.status.value === RX_COGNITIVE_TRAINING.settings.trainingStatuses.failed.value\n      ) {\n        this.contextData.recordInstance.setFieldValue(\n          RX_RECORD_DEFINITION.coreFieldIds.status,\n          RX_COGNITIVE_TRAINING.settings.trainingStatuses.pendingRetraining.value\n        );\n      }\n\n      this.rxRecordInstanceService.save(this.contextData.recordInstance).subscribe(() => {\n        this.dockedPanelContext.close('save');\n      });\n    }\n  }\n\n  onCloseClick(): void {\n    this.dockedPanelContext.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"dp-body\">\n  <form #fileDataSetForm=\"ngForm\">\n    <div *ngIf=\"contextData.editDataSet\">\n      <div class=\"d-flex justify-content-between m-0 mb-3\">\n        <div>\n          <label class=\"form-control-label\">\n            {{ 'com.bmc.arsys.rx.client.admin.cognitive-training.status.label' | translate }}\n          </label>\n\n          <div>{{ dataSet.status.label }}</div>\n        </div>\n\n        <div>\n          <label class=\"form-control-label\">\n            {{ 'com.bmc.arsys.rx.client.admin.cognitive-training.date-last-submitted.label' | translate }}\n          </label>\n\n          <div>{{ dataSet.lastSubmittedDate | date: 'medium' }}</div>\n        </div>\n\n        <div>\n          <label class=\"form-control-label\">\n            {{ 'com.bmc.arsys.rx.client.admin.cognitive-training.date-last-trained.label' | translate }}\n          </label>\n\n          <div>{{ dataSet.lastTrainedDate | date: 'medium' }}</div>\n        </div>\n      </div>\n\n      <adapt-alert\n        *ngIf=\"dataSet.machineLearningError\"\n        [config]=\"{\n          content: dataSet.machineLearningError,\n          type: 'inline',\n          variant: 'danger'\n        }\"\n      ></adapt-alert>\n    </div>\n\n    <adapt-rx-textfield\n      class=\"form-group d-block\"\n      name=\"data-set-name\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-search.data-set-name.label' | translate }}\"\n      rx-id=\"data-set-name-field\"\n      required\n      [disabled]=\"contextData.editDataSet\"\n      [(ngModel)]=\"dataSet.dataSetName\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-textfield\n      class=\"form-group d-block\"\n      name=\"description\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.chatbots.description.title' | translate }}\"\n      rx-id=\"description-field\"\n      required\n      [(ngModel)]=\"dataSet.description\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-textfield\n      class=\"form-group d-block\"\n      name=\"training-type\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-training.training-type.label' | translate }}\"\n      rx-id=\"training-type-field\"\n      required\n      disabled\n      [(ngModel)]=\"contextData.trainingType.displayName\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-uploader\n      class=\"form-group d-block\"\n      name=\"csv-file\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-training.csv-file.label' | translate }}\"\n      rx-id=\"csv-file-field\"\n      required\n      reusable=\"true\"\n      [uploadMode]=\"csvFileUploadMode\"\n      [allowedTypes]=\"['csv']\"\n      [(ngModel)]=\"dataSet.csvFile\"\n    >\n    </adapt-rx-uploader>\n\n    <adapt-rx-select\n      class=\"form-group d-block\"\n      name=\"locale\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-search.locale.label' | translate }}\"\n      rx-id=\"locale-field\"\n      required\n      [options]=\"localeOptions\"\n      [optionFormatter]=\"optionFormatter\"\n      [(ngModel)]=\"dataSet.locale\"\n    >\n    </adapt-rx-select>\n\n    <adapt-rx-counter\n      class=\"form-group d-block\"\n      name=\"training-data\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-training.training-data.label' | translate }}\"\n      rx-id=\"training-data-field\"\n      placeholder=\"0\"\n      adaptMin=\"0\"\n      adaptMax=\"100\"\n      min=\"0\"\n      max=\"100\"\n      required\n      (ngModelChange)=\"onTrainDataPercentCounterChange($event)\"\n      [(ngModel)]=\"dataSet.trainDataPercent\"\n    >\n    </adapt-rx-counter>\n\n    <adapt-rx-counter\n      class=\"form-group d-block\"\n      name=\"test-data\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-training.test-data.label' | translate }}\"\n      rx-id=\"test-data-field\"\n      placeholder=\"0\"\n      adaptMin=\"0\"\n      adaptMax=\"100\"\n      min=\"0\"\n      max=\"100\"\n      required\n      (ngModelChange)=\"onTestDataPercentCounterChange($event)\"\n      [(ngModel)]=\"dataSet.testDataPercent\"\n    >\n    </adapt-rx-counter>\n  </form>\n</div>\n\n<div class=\"dp-footer\">\n  <button\n    class=\"mr-2\"\n    type=\"button\"\n    rx-id=\"save-button\"\n    adapt-button\n    btn-type=\"primary\"\n    [disabled]=\"fileDataSetForm.pristine || fileDataSetForm.invalid\"\n    (click)=\"onSaveClick()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button class=\"mr-2\" type=\"button\" rx-id=\"close-button\" adapt-button btn-type=\"secondary\" (click)=\"onCloseClick()\">\n    {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n  </button>\n</div>\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { chain } from 'lodash';\nimport { DismissReasons, DockedPanelContext, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { RX_RECORD_DEFINITION, RxRecordInstanceDataPageService } from '@helix/platform/record/api';\nimport { IDataPageParams, IDataPageResult, IPlainObject, RxCommandFactoryService } from '@helix/platform/shared/api';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { RX_COGNITIVE_TRAINING } from '../../cognitive-training.constant';\nimport { ICognitiveTrainingClassification, ICognitiveTrainingDataSet } from '../../cognitive-training.types';\n\n@Component({\n  selector: 'rx-interactive-evaluation-blade',\n  templateUrl: './interactive-evaluation-blade.component.html'\n})\nexport class InteractiveEvaluationBladeComponent extends RxModalClass implements OnInit {\n  @ViewChild('interactiveEvaluationForm', { static: true, read: NgForm })\n  interactiveEvaluationForm: NgForm;\n\n  busy: Subscription;\n  contextData: IPlainObject;\n  trainedDataSet: RxSelectOption;\n\n  classifications: ICognitiveTrainingClassification[] = [];\n  evaluationText = '';\n  trainedDataSetOptions: RxSelectOption[] = [];\n\n  constructor(\n    private dockedPanelContext: DockedPanelContext,\n    private rxCommandFactoryService: RxCommandFactoryService,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService,\n    protected injector: Injector\n  ) {\n    super(dockedPanelContext, injector);\n    this.contextData = this.dockedPanelContext.getData();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.getDataSetList();\n  }\n\n  isDirty(): boolean {\n    return this.interactiveEvaluationForm.dirty;\n  }\n\n  optionFormatter = (opt: RxSelectOption) => opt.name;\n\n  getDataSetList(): void {\n    const params: IDataPageParams = {\n      recorddefinition: RX_COGNITIVE_TRAINING.settings.dataSetDefinitionName,\n      sortBy: RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetName,\n\n      queryExpression:\n        this.contextData.evaluation.queryExpression +\n        JSON.stringify(this.contextData.bundleId) +\n        this.contextData.evaluation.serviceProviderQueryExpresion +\n        this.contextData.trainingType.uniqueValue,\n\n      propertySelection: [\n        RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetName,\n        RX_RECORD_DEFINITION.coreFieldIds.status\n      ].join(',')\n    };\n\n    this.busy = this.rxRecordInstanceDataPageService.post({ params }).subscribe((result: IDataPageResult) => {\n      this.trainedDataSetOptions = chain(result.data)\n        .filter(\n          (dataSet: ICognitiveTrainingDataSet) =>\n            dataSet[RX_RECORD_DEFINITION.coreFieldIds.status] ===\n              RX_COGNITIVE_TRAINING.settings.trainingStatuses.trained.value ||\n            dataSet[RX_RECORD_DEFINITION.coreFieldIds.status] ===\n              RX_COGNITIVE_TRAINING.settings.trainingStatuses.pendingRetraining.value\n        )\n        .map((dataSet: ICognitiveTrainingDataSet) => ({\n          id: this.trainedDataSetOptions.length + 1,\n          name: dataSet[RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetName]\n        }))\n        .value();\n    });\n  }\n\n  classify(): void {\n    this.rxCommandFactoryService\n      .forResourceType(RX_COGNITIVE_TRAINING.settings.commands.classify)\n      .execute({\n        textToClassify: this.evaluationText,\n        trainingDataSetName: this.contextData.bundleId + ':' + this.trainedDataSet[0].name\n      })\n      .subscribe((classifications: ICognitiveTrainingClassification[]) => {\n        this.classifications = classifications;\n      });\n  }\n\n  displayClassification(classification: ICognitiveTrainingClassification): string {\n    return `${classification.className} ${classification.confidence.toFixed(2)}`;\n  }\n\n  onCloseClick(): void {\n    this.dockedPanelContext.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"dp-body\">\n  <form #interactiveEvaluationForm=\"ngForm\">\n    <rx-busy-indicator [options]=\"{ busy: busy, loaderType: 'section' }\"></rx-busy-indicator>\n\n    <div class=\"d-flex flex-row justify-content-between\">\n      <adapt-rx-select\n        class=\"form-group d-block w-100\"\n        name=\"trained-data-set\"\n        label=\"{{\n          'com.bmc.arsys.rx.client.admin.cognitive-training.interactive-evaluation-blade.trained-data-set.label'\n            | translate\n        }}\"\n        rx-id=\"trained-data-set-field\"\n        required\n        [options]=\"trainedDataSetOptions\"\n        [optionFormatter]=\"optionFormatter\"\n        [(ngModel)]=\"trainedDataSet\"\n      >\n      </adapt-rx-select>\n\n      <button\n        class=\"d-icon-refresh_adapt\"\n        type=\"button\"\n        rx-id=\"refresh-button\"\n        adapt-button\n        btn-type=\"tertiary\"\n        (click)=\"getDataSetList()\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.refresh.label' | translate }}\n      </button>\n    </div>\n\n    <adapt-rx-textfield\n      class=\"form-group d-block\"\n      name=\"evaluation-text\"\n      label=\"{{\n        'com.bmc.arsys.rx.client.admin.cognitive-training.interactive-evaluation-blade.text.label' | translate\n      }}\"\n      rx-id=\"evaluation-text-field\"\n      required\n      [tooltip]=\"{\n        iconName: 'question_circle_o',\n        content: 'Separate text entries for multiple fields with a comma.',\n        placement: 'right',\n        popoverMode: true\n      }\"\n      [(ngModel)]=\"evaluationText\"\n    >\n    </adapt-rx-textfield>\n\n    <button\n      type=\"button\"\n      rx-id=\"classify-button\"\n      adapt-button\n      btn-type=\"primary\"\n      [disabled]=\"interactiveEvaluationForm.invalid\"\n      (click)=\"classify()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.admin.cognitive-training.interactive-evaluation.classify.label' | translate }}\n    </button>\n\n    <div *ngIf=\"classifications\">\n      <hr />\n\n      <div class=\"card card-well mb-2\" *ngFor=\"let classification of classifications; let index = index\">\n        {{ displayClassification(classification) }}\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"dp-footer\">\n  <button class=\"mr-2\" type=\"button\" rx-id=\"close-button\" adapt-button btn-type=\"secondary\" (click)=\"onCloseClick()\">\n    {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n  </button>\n</div>\n","import { Observable, of } from 'rxjs';\nimport { IDataDictionary, RxExpressionConfigurator } from '@helix/platform/shared/api';\n\nexport class RxRecordDataSetExpressionConfigurator extends RxExpressionConfigurator {\n  commonDataDictionary$: Observable<IDataDictionary> = of([\n    {\n      label: 'Keywords',\n      children: [\n        {\n          label: 'Current user',\n          icon: 'd-icon-dollar',\n          expression: `$USER$`\n        },\n        {\n          label: 'NULL',\n          icon: 'd-icon-dollar',\n          expression: '$NULL$',\n          hidden: true\n        },\n        {\n          label: 'Time stamp',\n          icon: 'd-icon-dollar',\n          expression: '$TIMESTAMP$'\n        }\n      ]\n    }\n  ]);\n}\n","import { Component, Injector, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { DismissReasons, DockedPanelContext, RxSelectOption, UploaderMode } from '@bmc-ux/adapt-angular';\nimport {\n  IRecordDefinition,\n  RX_RECORD_DEFINITION,\n  RxRecordDefinitionCacheService,\n  RxRecordInstanceService\n} from '@helix/platform/record/api';\nimport { ExpressionOperatorGroup, IPlainObject, RxDefinitionNameService } from '@helix/platform/shared/api';\nimport {\n  IDefinitionPickerComponentOptions,\n  IExpressionEditorPropertyChange,\n  IExpressionFormControlOptions,\n  IGroupButtonFormControlOptions,\n  RxDefinitionPickerType,\n  RxExpressionEditorService\n} from '@helix/platform/shared/components';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { RecordGridFilterMode } from '@helix/platform/view/components';\nimport { assign, find, isEmpty, map as _map, pick } from 'lodash';\nimport moment from 'moment-es6';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { map, shareReplay, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { RxCognitiveTrainingUtilsService } from '../../cognitive-training-utils.service';\nimport { RX_COGNITIVE_TRAINING } from '../../cognitive-training.constant';\nimport { ICognitiveTrainingDataSet } from '../../cognitive-training.types';\nimport { RxRecordDataSetExpressionConfigurator } from '../record-data-set-expression-configurator/record-data-set-expression-configurator.class';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-record-data-set-blade',\n  templateUrl: './record-data-set-blade.component.html'\n})\nexport class RecordDataSetBladeComponent extends RxModalClass implements OnInit, OnDestroy {\n  @ViewChild('recordDataSetForm', { read: NgForm })\n  recordDataSetForm: NgForm;\n\n  contextData: IPlainObject;\n  dataSet: ICognitiveTrainingDataSet;\n  localeOptions: RxSelectOption[];\n  queryExpressionOptions: IExpressionFormControlOptions;\n  csvFileUploadMode = UploaderMode.Auto;\n\n  recordDefinitionPickerOptions: IDefinitionPickerComponentOptions = {\n    label: this.translateService.instant('com.bmc.arsys.rx.client.approval.record-definition-field.label'),\n    definitionType: RxDefinitionPickerType.Record,\n    required: true\n  };\n\n  filterModeOptions: IGroupButtonFormControlOptions = {\n    label: this.translateService.instant(\n      'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set-blade.filters.label'\n    ),\n    items: [\n      {\n        name: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set-blade.basic.label'\n        ),\n        value: RecordGridFilterMode.Basic\n      },\n      {\n        name: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set-blade.expression.label'\n        ),\n        value: RecordGridFilterMode.Expression\n      }\n    ]\n  };\n\n  protected expressionConfigurator;\n\n  private recordDefinitionName$ = new BehaviorSubject<string>('');\n\n  recordDefinition$: Observable<IRecordDefinition> = this.recordDefinitionName$.pipe(\n    switchMap((recordDefinitionName) =>\n      recordDefinitionName ? this.rxRecordDefinitionCacheService.getRecordDefinition(recordDefinitionName) : of(null)\n    ),\n    shareReplay(1)\n  );\n\n  fieldOptions$: Observable<RxSelectOption[]> = this.recordDefinition$.pipe(\n    map((recordDefinition) =>\n      recordDefinition?.fieldDefinitions\n        .map((fieldDefinition) => pick(fieldDefinition, ['name', 'id']))\n        .sort((a, b) => a.name.localeCompare(b.name))\n    ),\n    shareReplay(1)\n  );\n\n  constructor(\n    private dockedPanelContext: DockedPanelContext,\n    private rxCognitiveTrainingUtilsService: RxCognitiveTrainingUtilsService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxExpressionEditorService: RxExpressionEditorService,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private translateService: TranslateService,\n    protected injector: Injector\n  ) {\n    super(dockedPanelContext, injector);\n    this.contextData = this.dockedPanelContext.getData().data;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.expressionConfigurator = new RxRecordDataSetExpressionConfigurator();\n\n    this.expressionConfigurator.configureForProperty({\n      propertyPath: 'queryExpression',\n      operators: this.expressionConfigurator.getOperatorRowsByGroup(ExpressionOperatorGroup.All),\n      dataDictionary$: this.recordDefinition$.pipe(\n        withLatestFrom(this.expressionConfigurator.commonDataDictionary$),\n        map(([recordDefinition, commonDataDictionary]) => [\n          {\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set-blade.filter-by.label'\n            ),\n            children: [\n              {\n                label: this.rxDefinitionNameService.getDisplayName(recordDefinition?.name),\n                children: recordDefinition?.fieldDefinitions.map((field) => ({\n                  label: field.name,\n                  icon: 'd-icon-field_text',\n                  expression: `'${field.id}'`\n                }))\n              }\n            ]\n          },\n          commonDataDictionary[0]\n        ])\n      )\n    });\n\n    this.queryExpressionOptions = {\n      label: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set-blade.expression.label'\n      ),\n      dataDictionary$: this.expressionConfigurator.getDataDictionary('queryExpression'),\n      operators: this.expressionConfigurator.getOperators()\n    };\n\n    this.localeOptions = this.rxCognitiveTrainingUtilsService.getTrainingLocales(this.contextData.trainingType.value);\n\n    const dataSource = this.contextData.recordInstance.getFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource\n    );\n\n    this.dataSet = {\n      dataSetName: this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetName),\n      description: this.contextData.recordInstance.getFieldValue(RX_RECORD_DEFINITION.coreFieldIds.description),\n      csvFile: null,\n\n      locale: [\n        this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.locale) ||\n          RX_COGNITIVE_TRAINING.settings.defaultTrainingLocale\n      ],\n\n      useSeedTrainingData: this.contextData.recordInstance.getFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.useSeedTrainingData\n      ),\n\n      testDataPercent: this.contextData.isNewDataSet\n        ? RX_COGNITIVE_TRAINING.settings.defaultTestDataPercentage\n        : this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.testDataPercent),\n\n      trainDataPercent: this.contextData.isNewDataSet\n        ? RX_COGNITIVE_TRAINING.settings.defaultTrainDataPercentage\n        : this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.trainDataPercent),\n\n      status: find(RX_COGNITIVE_TRAINING.settings.trainingStatuses, {\n        value: this.contextData.recordInstance.getFieldValue(RX_RECORD_DEFINITION.coreFieldIds.status)\n      }),\n\n      lastSubmittedDate: this.contextData.recordInstance.getFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.dateLastSubmitted\n      ),\n\n      lastTrainedDate: this.contextData.recordInstance.getFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.dateLastTrained\n      ),\n\n      machineLearningError: this.contextData.recordInstance.getFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.machineLearningError\n      )\n    };\n\n    let dataSourceHistory = JSON.parse(\n      this.contextData.recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSourceHistory)\n    );\n\n    if (dataSourceHistory) {\n      dataSourceHistory.layout = JSON.parse(dataSourceHistory.layout);\n\n      dataSourceHistory.layout.categoryFields = _map(dataSourceHistory.layout.categoryFields, (categoryField) =>\n        pick(categoryField, ['name', 'id'])\n      );\n\n      dataSourceHistory.layout.textFields = _map(dataSourceHistory.layout.textFields, (textField) =>\n        pick(textField, ['name', 'id'])\n      );\n\n      dataSourceHistory.layout.queryExpressionBasic = {\n        filtersJson: JSON.stringify(dataSourceHistory.layout.queryExpressionBasic.filtersJson),\n        basicFilters: dataSourceHistory.layout.queryExpressionBasic.basicFilters\n      };\n    } else {\n      dataSourceHistory = this.contextData.dataSourceType.dataSourceHistory;\n    }\n\n    this.dataSet.dataSourceHistory = dataSourceHistory;\n\n    this.dataSet.filterMode = dataSourceHistory.queryExpression\n      ? RecordGridFilterMode.Expression\n      : RecordGridFilterMode.Basic;\n\n    if (dataSource && (this.contextData.editDataSet || this.contextData.copyDataSet)) {\n      this.rxRecordInstanceService\n        .getAttachment(\n          RX_COGNITIVE_TRAINING.settings.dataSetDefinitionName,\n          RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n          this.contextData.getAttachmentRecordInstanceId\n        )\n        .subscribe((blob) => {\n          this.dataSet.csvFile = [\n            {\n              data: assign(blob, {\n                name: dataSource\n              }),\n              downloadURL: this.rxRecordInstanceService.getAttachmentDownloadUrl(\n                RX_COGNITIVE_TRAINING.settings.dataSetDefinitionName,\n                RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n                this.contextData.recordInstance.id\n              ),\n              isUploading: true\n            }\n          ];\n        });\n    }\n\n    if (this.dataSet.dataSourceHistory.recordDefinitionName) {\n      this.recordDefinitionName$.next(this.dataSet.dataSourceHistory.recordDefinitionName);\n    }\n  }\n\n  isDirty(): boolean {\n    return this.recordDataSetForm.dirty;\n  }\n\n  ngOnDestroy(): void {\n    this.recordDefinitionName$.complete();\n  }\n\n  openExpressionEditor(): void {\n    this.rxExpressionEditorService\n      .openEditor({\n        property: {\n          path: 'queryExpression',\n          value: this.dataSet.dataSourceHistory.queryExpression,\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set-blade.filter-expression.label'\n          )\n        },\n        expressionConfigurator: this.expressionConfigurator,\n        legend: [\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'),\n            icon: 'd-icon-dollar'\n          },\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.field.label'),\n            icon: 'd-icon-arrow_right_square_input'\n          }\n        ]\n      })\n      .subscribe((expression: IExpressionEditorPropertyChange) => {\n        this.dataSet.dataSourceHistory.queryExpression = expression.value;\n      });\n  }\n\n  isBasicFilterMode(): boolean {\n    return this.dataSet.filterMode === RecordGridFilterMode.Basic;\n  }\n\n  isExpressionFilterMode(): boolean {\n    return this.dataSet.filterMode === RecordGridFilterMode.Expression;\n  }\n\n  optionFormatter = (opt: RxSelectOption) => opt;\n\n  fieldOptionsFormatter = (opt: RxSelectOption) => opt.name;\n\n  onRecordDefinitionNameChange(recordDefinitionName: string): void {\n    this.dataSet.filterMode = RecordGridFilterMode.Basic;\n\n    this.dataSet.dataSourceHistory.layout.queryExpressionBasic = {\n      filtersJson: null,\n      basicFilters: null\n    };\n\n    this.dataSet.dataSourceHistory.queryExpression = null;\n    this.dataSet.dataSourceHistory.layout.textFields = [];\n    this.dataSet.dataSourceHistory.layout.categoryFields = [];\n\n    this.recordDefinitionName$.next(recordDefinitionName);\n  }\n\n  onTrainDataPercentCounterChange(trainDataPercent: number): void {\n    this.dataSet.testDataPercent = 100 - trainDataPercent;\n  }\n\n  onTestDataPercentCounterChange(testDataPercent: number): void {\n    this.dataSet.trainDataPercent = 100 - testDataPercent;\n  }\n\n  onFilterModeChange(): void {\n    this.dataSet.dataSourceHistory.layout.queryExpressionBasic = {\n      filtersJson: null,\n      basicFilters: null\n    };\n\n    this.dataSet.dataSourceHistory.queryExpression = '';\n  }\n\n  onSaveClick(): void {\n    this.contextData.recordInstance.setFieldProp(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n      'file',\n      (!isEmpty(this.dataSet.csvFile) && this.dataSet.csvFile[0].data) || null\n    );\n\n    this.contextData.recordInstance.setFieldProp(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n      'value',\n      (!isEmpty(this.dataSet.csvFile) && this.dataSet.csvFile[0].data.name) || null\n    );\n\n    this.contextData.recordInstance.setFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dateLastSubmitted, moment());\n\n    this.contextData.recordInstance.setFieldValue(\n      RX_RECORD_DEFINITION.coreFieldIds.description,\n      this.dataSet.description\n    );\n\n    this.contextData.recordInstance.setFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.locale,\n      this.dataSet.locale[0]\n    );\n\n    this.contextData.recordInstance.setFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.testDataPercent,\n      this.dataSet.testDataPercent\n    );\n\n    this.contextData.recordInstance.setFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.trainDataPercent,\n      this.dataSet.trainDataPercent\n    );\n\n    this.contextData.recordInstance.setFieldValue(\n      RX_COGNITIVE_TRAINING.settings.fieldIds.dataSourceHistory,\n      JSON.stringify({\n        layout: JSON.stringify({\n          queryExpressionBasic: {\n            filtersJson: JSON.parse(this.dataSet.dataSourceHistory.layout.queryExpressionBasic.filtersJson),\n            basicFilters: this.dataSet.dataSourceHistory.layout.queryExpressionBasic.basicFilters\n          },\n          textFields: this.dataSet.dataSourceHistory.layout.textFields,\n          categoryFields: this.dataSet.dataSourceHistory.layout.categoryFields\n        }),\n        resourceType: this.contextData.dataSourceType.resourceType,\n        recordDefinitionName: this.dataSet.dataSourceHistory.recordDefinitionName,\n        queryExpression: this.dataSet.dataSourceHistory.queryExpression,\n        trainingDataMapper: {\n          resourceType: this.dataSet.dataSourceHistory.trainingDataMapper.resourceType,\n          textFields: _map(this.dataSet.dataSourceHistory.layout.textFields, 'id'),\n          categoryFields: _map(this.dataSet.dataSourceHistory.layout.categoryFields, 'id')\n        },\n        timeCriteria: this.dataSet.dataSourceHistory.timeCriteria,\n        isScheduleEnabled: this.dataSet.dataSourceHistory.isScheduleEnabled\n      })\n    );\n\n    if (this.contextData.isNewDataSet || this.contextData.copyDataSet) {\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.bundleId,\n        this.contextData.bundleId\n      );\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetName,\n        this.dataSet.dataSetName\n      );\n\n      this.contextData.recordInstance.setFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetID, '');\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.classificationServiceProvider,\n        this.contextData.trainingType.uniqueValue\n      );\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_RECORD_DEFINITION.coreFieldIds.status,\n        RX_COGNITIVE_TRAINING.settings.trainingStatuses.untrained.value\n      );\n\n      this.contextData.recordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.trainingType,\n        this.contextData.trainingType.value\n      );\n\n      this.rxRecordInstanceService.create(this.contextData.recordInstance).subscribe(() => {\n        this.dockedPanelContext.close('save');\n      });\n    } else if (this.contextData.editDataSet) {\n      if (\n        this.dataSet.status.value === RX_COGNITIVE_TRAINING.settings.trainingStatuses.trained.value ||\n        this.dataSet.status.value === RX_COGNITIVE_TRAINING.settings.trainingStatuses.failed.value\n      ) {\n        this.contextData.recordInstance.setFieldValue(\n          RX_RECORD_DEFINITION.coreFieldIds.status,\n          RX_COGNITIVE_TRAINING.settings.trainingStatuses.pendingRetraining.value\n        );\n      }\n\n      this.rxRecordInstanceService.save(this.contextData.recordInstance).subscribe(() => {\n        this.dockedPanelContext.close('save');\n      });\n    }\n  }\n\n  onCloseClick(): void {\n    this.dockedPanelContext.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"dp-body\">\n  <form #recordDataSetForm=\"ngForm\">\n    <div *ngIf=\"contextData.editDataSet\">\n      <div class=\"d-flex justify-content-between m-0 mb-3\">\n        <div>\n          <label class=\"form-control-label\">\n            {{ 'com.bmc.arsys.rx.client.admin.cognitive-training.status.label' | translate }}\n          </label>\n\n          <div>{{ dataSet.status.label }}</div>\n        </div>\n\n        <div>\n          <label class=\"form-control-label\">\n            {{ 'com.bmc.arsys.rx.client.admin.cognitive-training.date-last-submitted.label' | translate }}\n          </label>\n\n          <div>{{ dataSet.lastSubmittedDate | date: 'medium' }}</div>\n        </div>\n\n        <div>\n          <label class=\"form-control-label\">\n            {{ 'com.bmc.arsys.rx.client.admin.cognitive-training.date-last-trained.label' | translate }}\n          </label>\n\n          <div>{{ dataSet.lastTrainedDate | date: 'medium' }}</div>\n        </div>\n      </div>\n\n      <adapt-alert\n        *ngIf=\"dataSet.machineLearningError\"\n        [config]=\"{\n          content: dataSet.machineLearningError,\n          type: 'inline',\n          variant: 'danger'\n        }\"\n      ></adapt-alert>\n    </div>\n\n    <adapt-rx-textfield\n      class=\"form-group d-block\"\n      name=\"data-set-name\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-search.data-set-name.label' | translate }}\"\n      rx-id=\"data-set-name-field\"\n      required\n      [disabled]=\"contextData.editDataSet\"\n      [(ngModel)]=\"dataSet.dataSetName\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-textfield\n      class=\"form-group d-block\"\n      name=\"description\"\n      label=\"{{ 'com.bmc.arsys.rx.client.common.description.label' | translate }}\"\n      rx-id=\"description-field\"\n      required\n      [(ngModel)]=\"dataSet.description\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-textfield\n      class=\"form-group d-block\"\n      name=\"training-type\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-training.training-type.label' | translate }}\"\n      rx-id=\"training-type-field\"\n      required\n      disabled\n      [(ngModel)]=\"contextData.trainingType.displayName\"\n    >\n    </adapt-rx-textfield>\n\n    <span class=\"form-group d-block\" *ngIf=\"dataSet.useSeedTrainingData\">\n      {{ 'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set.seed-data-required.label' | translate }}\n    </span>\n\n    <span class=\"form-group d-block\" *ngIf=\"!dataSet.useSeedTrainingData\">\n      {{ 'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set.no-seed-data-required.label' | translate }}\n    </span>\n\n    <adapt-rx-uploader\n      class=\"form-group d-block\"\n      name=\"csv-file\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-training.csv-file.label' | translate }}\"\n      rx-id=\"csv-file-field\"\n      reusable=\"true\"\n      [uploadMode]=\"csvFileUploadMode\"\n      [allowedTypes]=\"['csv']\"\n      [(ngModel)]=\"dataSet.csvFile\"\n    >\n    </adapt-rx-uploader>\n\n    <adapt-rx-select\n      class=\"form-group d-block\"\n      name=\"locale\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-search.locale.label' | translate }}\"\n      rx-id=\"locale-field\"\n      required\n      [options]=\"localeOptions\"\n      [optionFormatter]=\"optionFormatter\"\n      [(ngModel)]=\"dataSet.locale\"\n    >\n    </adapt-rx-select>\n\n    <rx-definition-picker\n      class=\"form-group d-block\"\n      name=\"record-definition-name\"\n      rx-id=\"record-definition-name-field\"\n      required\n      [options]=\"recordDefinitionPickerOptions\"\n      [(ngModel)]=\"dataSet.dataSourceHistory.recordDefinitionName\"\n      (ngModelChange)=\"onRecordDefinitionNameChange($event)\"\n    >\n    </rx-definition-picker>\n\n    <div *ngIf=\"recordDefinition$ | async\">\n      <rx-group-button-form-control\n        class=\"form-group d-block\"\n        name=\"filter-mode\"\n        rx-id=\"filter-mode-field\"\n        [options]=\"filterModeOptions\"\n        (ngModelChange)=\"onFilterModeChange()\"\n        [(ngModel)]=\"dataSet.filterMode\"\n      >\n      </rx-group-button-form-control>\n\n      <div *ngIf=\"isBasicFilterMode()\">\n        <rx-record-grid-filter-select-control\n          class=\"form-group d-block\"\n          name=\"filters\"\n          rx-id=\"filters-field\"\n          [options]=\"{ primaryRecordDefinition: recordDefinition$ | async }\"\n          [(ngModel)]=\"dataSet.dataSourceHistory.layout.queryExpressionBasic\"\n        >\n        </rx-record-grid-filter-select-control>\n      </div>\n\n      <div *ngIf=\"isExpressionFilterMode()\">\n        <rx-expression-form-control\n          class=\"form-group d-block\"\n          name=\"query-expression\"\n          rx-id=\"query-expression-field\"\n          [options]=\"queryExpressionOptions\"\n          (events)=\"openExpressionEditor()\"\n          [(ngModel)]=\"dataSet.dataSourceHistory.queryExpression\"\n        >\n        </rx-expression-form-control>\n      </div>\n\n      <adapt-rx-select\n        class=\"form-group d-block\"\n        name=\"text-fields\"\n        label=\"{{\n          'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set-blade.text-fields.label' | translate\n        }}\"\n        rx-id=\"text-fields-field\"\n        required\n        multiple=\"true\"\n        [options]=\"fieldOptions$ | async\"\n        [optionFormatter]=\"fieldOptionsFormatter\"\n        [(ngModel)]=\"dataSet.dataSourceHistory.layout.textFields\"\n      >\n      </adapt-rx-select>\n\n      <adapt-rx-select\n        class=\"form-group d-block\"\n        name=\"category-fields\"\n        label=\"{{\n          'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set-blade.category-fields.label' | translate\n        }}\"\n        rx-id=\"category-fields-field\"\n        required\n        multiple=\"true\"\n        [options]=\"fieldOptions$ | async\"\n        [optionFormatter]=\"fieldOptionsFormatter\"\n        [(ngModel)]=\"dataSet.dataSourceHistory.layout.categoryFields\"\n      >\n      </adapt-rx-select>\n    </div>\n\n    <adapt-rx-counter\n      class=\"form-group d-block\"\n      name=\"training-data\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-training.training-data.label' | translate }}\"\n      rx-id=\"training-data-field\"\n      placeholder=\"0\"\n      adaptMin=\"0\"\n      adaptMax=\"100\"\n      min=\"0\"\n      max=\"100\"\n      required\n      (ngModelChange)=\"onTrainDataPercentCounterChange($event)\"\n      [(ngModel)]=\"dataSet.trainDataPercent\"\n    >\n    </adapt-rx-counter>\n\n    <adapt-rx-counter\n      class=\"form-group d-block\"\n      name=\"test-data\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-training.test-data.label' | translate }}\"\n      rx-id=\"test-data-field\"\n      placeholder=\"0\"\n      adaptMin=\"0\"\n      adaptMax=\"100\"\n      min=\"0\"\n      max=\"100\"\n      required\n      (ngModelChange)=\"onTestDataPercentCounterChange($event)\"\n      [(ngModel)]=\"dataSet.testDataPercent\"\n    >\n    </adapt-rx-counter>\n  </form>\n</div>\n\n<div class=\"dp-footer\">\n  <button\n    class=\"mr-2\"\n    type=\"button\"\n    rx-id=\"save-button\"\n    adapt-button\n    btn-type=\"primary\"\n    [disabled]=\"recordDataSetForm.pristine || recordDataSetForm.invalid\"\n    (click)=\"onSaveClick()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button class=\"mr-2\" type=\"button\" rx-id=\"close-button\" adapt-button btn-type=\"secondary\" (click)=\"onCloseClick()\">\n    {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n  </button>\n</div>\n","import { Component, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { DockedPanel } from '@bmc-ux/adapt-angular';\nimport { ColumnConfig, DataCellTemplateParams } from '@bmc-ux/adapt-table';\nimport {\n  RecordInstance,\n  RX_RECORD_DEFINITION,\n  RxRecordInstanceDataPageService,\n  RxRecordInstanceService\n} from '@helix/platform/record/api';\nimport {\n  IDataPageParams,\n  IDataPageResult,\n  RxBundleCacheService,\n  RxCommandFactoryService,\n  RxCurrentUserService,\n  RxDefinitionNameService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { RxJsonParserService } from '@helix/platform/utils';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport {\n  IRecordGridConfig,\n  IRecordGridDataPageParams,\n  RecordGridComponent,\n  RowSelectionMode\n} from '@helix/platform/view/components';\nimport { chain, cloneDeep, compact, head, map, noop, some } from 'lodash';\nimport { combineLatest, forkJoin, Observable, of, throwError } from 'rxjs';\nimport { catchError, finalize } from 'rxjs/operators';\nimport { RxCognitiveTrainingUtilsService } from '../../cognitive-training-utils.service';\nimport { RX_COGNITIVE_TRAINING } from '../../cognitive-training.constant';\nimport {\n  CognitiveTrainingDataSourceNames,\n  CognitiveTrainingEvaluationNames,\n  ICognitiveTrainingDataSourceHistory,\n  ICognitiveTrainingDataSourceType,\n  ICognitiveTrainingEvaluation,\n  ICognitiveTrainingTab,\n  ICognitiveTrainingType\n} from '../../cognitive-training.types';\nimport { ChatbotDataSetBladeComponent } from '../chatbot-data-set-blade/chatbot-data-set-blade.component';\nimport { FileDataSetBladeComponent } from '../file-data-set-blade/file-data-set-blade.component';\nimport { InteractiveEvaluationBladeComponent } from '../interactive-evaluation-blade/interactive-evaluation-blade.component';\nimport { RecordDataSetBladeComponent } from '../record-data-set-blade/record-data-set-blade.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-cognitive-training-record-grid',\n  templateUrl: './cognitive-training-record-grid.component.html'\n})\nexport class CognitiveTrainingRecordGridComponent implements OnInit {\n  @ViewChild('cognitiveTrainingRecordGrid', { static: true })\n  cognitiveTrainingRecordGrid: RecordGridComponent;\n\n  @ViewChild('chatbotNameCellTemplate', { static: true })\n  chatbotNameCellTemplate: TemplateRef<DataCellTemplateParams>;\n\n  @ViewChild('dataSourceHistoryNameCellTemplate', { static: true })\n  dataSourceHistoryNameCellTemplate: TemplateRef<DataCellTemplateParams>;\n\n  @Input()\n  tab: ICognitiveTrainingTab;\n\n  @Input()\n  evaluationName: string;\n\n  @Input()\n  recordDefinitionName: string;\n\n  @Input()\n  trainingType: ICognitiveTrainingType;\n\n  bundleId: string;\n  isAdministrator: boolean;\n  evaluation: ICognitiveTrainingEvaluation;\n  recordGridConfig: Observable<IRecordGridConfig>;\n\n  fileDataSourceType: ICognitiveTrainingDataSourceType =\n    RX_COGNITIVE_TRAINING.settings.dataSourceTypes[CognitiveTrainingDataSourceNames.FileDataSource];\n  innovationSuiteDataSourceType: ICognitiveTrainingDataSourceType =\n    RX_COGNITIVE_TRAINING.settings.dataSourceTypes[CognitiveTrainingDataSourceNames.InnovationSuiteDataSource];\n\n  constructor(\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxCommandFactoryService: RxCommandFactoryService,\n    private rxCognitiveTrainingUtilsService: RxCognitiveTrainingUtilsService,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxJsonParserService: RxJsonParserService,\n    private rxModalService: RxModalService,\n    private rxNotificationService: RxNotificationService,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService,\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private translateService: TranslateService\n  ) {\n    this.bundleId = this.rxBundleCacheService.bundleId;\n    this.isAdministrator = this.rxCurrentUserService.isAdministrator();\n  }\n\n  ngOnInit() {\n    this.trainingType.displayName = this.translateService.instant(this.trainingType.displayName);\n\n    const availableActionButtons = {\n      [CognitiveTrainingEvaluationNames.AutoClassificationTrainingAndEvaluation]: {\n        dataSets: [\n          {\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-training.train-and-test.label'\n            ),\n            style: 'tertiary',\n            iconCls: 'play_o',\n            disabled: () => this.isDataSetActionButtonDisabled(),\n\n            actions: [\n              {\n                name: () => {\n                  this.trainDataSet(head(this.cognitiveTrainingRecordGrid.api.getSelectedRows()));\n                }\n              }\n            ]\n          }\n        ],\n        testResults: []\n      },\n      [CognitiveTrainingEvaluationNames.ChatbotEvaluation]: {\n        dataSets: [\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-training.test.label'),\n            style: 'tertiary',\n            iconCls: 'play_o',\n            disabled: () =>\n              !this.isAdministrator || this.cognitiveTrainingRecordGrid.api.getSelectedRows().length !== 1,\n\n            actions: [\n              {\n                name: () => {\n                  this.testDataSet(head(this.cognitiveTrainingRecordGrid.api.getSelectedRows()));\n                }\n              }\n            ]\n          }\n        ]\n      },\n      common: {\n        dataSets: [\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.common.edit.label'),\n            style: 'tertiary',\n            icon: 'pencil',\n            disabled: () => this.isChatbotDataSetEditButtonDisabled(),\n\n            actions: [\n              {\n                name: () => {\n                  this.editDataSet(head(this.cognitiveTrainingRecordGrid.api.getSelectedRows()));\n                }\n              }\n            ]\n          },\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.common.copy.label'),\n            style: 'tertiary',\n            icon: 'files_copy_o',\n            disabled: () =>\n              !this.isAdministrator || this.cognitiveTrainingRecordGrid.api.getSelectedRows().length !== 1,\n\n            actions: [\n              {\n                name: () => {\n                  this.copyDataSet(head(this.cognitiveTrainingRecordGrid.api.getSelectedRows()));\n                }\n              }\n            ]\n          },\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n            style: 'tertiary',\n            icon: 'trash',\n            disabled: () => !this.isAdministrator,\n\n            actions: [\n              {\n                name: () => {\n                  this.delete();\n                }\n              }\n            ]\n          }\n        ],\n        testResults: [\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n            style: 'tertiary',\n            icon: 'trash',\n            disabled: () => this.isTestResultsDeletionRestricted(),\n\n            actions: [\n              {\n                name: () => {\n                  this.delete();\n                }\n              }\n            ]\n          }\n        ]\n      }\n    };\n\n    const availableColumns = {\n      [CognitiveTrainingEvaluationNames.AutoClassificationTrainingAndEvaluation]: {\n        dataSets: [\n          {\n            index: 2,\n            fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.status),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.status.label')\n          },\n          {\n            index: 3,\n            fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.description),\n            title: this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.configuration.grid.column.description'\n            ),\n            visible: false\n          },\n          {\n            index: 4,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSourceHistory),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-training.data-source.label'),\n            visible: false,\n            cellTemplate: this.dataSourceHistoryNameCellTemplate\n          },\n          {\n            index: 6,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.trainingType),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-training.training-type.label')\n          },\n          {\n            index: 8,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.locale),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.locale.label'),\n            visible: false\n          },\n          {\n            index: 11,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.trainDataPercent),\n            title: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-training.train-data-percent.label'\n            )\n          },\n          {\n            index: 12,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.testDataPercent),\n            title: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-training.test-data-percent.label'\n            )\n          },\n          {\n            index: 13,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.classificationServiceProvider),\n            title: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-training.classification-service-provider.label'\n            ),\n            visible: true\n          }\n        ],\n        testResults: [\n          {\n            index: 6,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.trainingDataCsv),\n            title: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-training.training-data.label'\n            ),\n            clickable: true,\n            actions: [\n              {\n                name: (previousActionResult: any, lastActionRow?: IRowDataItem) =>\n                  this.downloadTrainingData(lastActionRow)\n              }\n            ]\n          }\n        ]\n      },\n      [CognitiveTrainingEvaluationNames.ChatbotEvaluation]: {\n        dataSets: [\n          {\n            index: 2,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.chatbotName),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.chatbots.name.label'),\n            visible: true,\n            cellTemplate: this.chatbotNameCellTemplate\n          },\n          {\n            index: 3,\n            fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.status),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.status.label'),\n            visible: false\n          },\n          {\n            index: 4,\n            fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.description),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.chatbots.description.title')\n          },\n          {\n            index: 5,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSourceHistory),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-training.data-source.label'),\n            cellTemplate: this.dataSourceHistoryNameCellTemplate\n          },\n          {\n            index: 7,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.trainingType),\n            title: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-training.training-type.label'\n            ),\n            visible: false\n          },\n          {\n            index: 9,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.locale),\n            title: 'Locale'\n          },\n          {\n            index: 12,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetLocale),\n            title: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-training.chatbot-data-set-blade.data-set-locale.label'\n            ),\n            visible: false\n          }\n        ]\n      },\n      common: {\n        dataSets: [\n          {\n            index: 0,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetID),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.data-set-id.title'),\n            visible: false\n          },\n          {\n            index: 1,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetName),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.data-set-name.label')\n          },\n          {\n            index: 5,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource),\n            title: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-training.current-data-source.title'\n            ),\n            visible: false\n          },\n          {\n            index: 7,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.dateLastTrained),\n            title: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-training.date-last-trained.label'\n            ),\n            visible: false\n          },\n          {\n            index: 10,\n            fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.displayId),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.request-id.title'),\n            visible: false\n          },\n          {\n            index: 10,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.instanceId),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.instance-id.title'),\n            visible: false\n          }\n        ],\n        testResults: [\n          {\n            index: 0,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetID),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.data-set-id.title'),\n            visible: false\n          },\n          {\n            index: 1,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.trainingType),\n            title: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-training.data-set-type.label'\n            ),\n            visible: false\n          },\n          {\n            index: 2,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetName),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.data-set-name.label')\n          },\n          {\n            index: 3,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.evaluationStatus),\n            title: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-training.evaluation-status.label'\n            )\n          },\n          {\n            index: 4,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.dateLastTested),\n            title: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-training.data-last-tested.label'\n            ),\n            visible: false\n          },\n          {\n            index: 5,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.modifiedDate),\n            title: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-training.modified-date.label'\n            ),\n            visible: false\n          },\n          {\n            index: 7,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.testDataCsv),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-training.test-data.label'),\n            clickable: true,\n            actions: [\n              {\n                name: (previousActionResult: any, lastActionRow?: IRowDataItem) => this.downloadTestData(lastActionRow)\n              }\n            ]\n          },\n          {\n            index: 8,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.accuracy),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-training.accuracy.label')\n          },\n          {\n            index: 9,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.precision),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-training.precision.label')\n          },\n          {\n            index: 10,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.recall),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-training.recall.label')\n          },\n          {\n            index: 11,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.fScore),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-training.f-score.label')\n          },\n          {\n            index: 12,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.resultCsv),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-training.results.label'),\n            clickable: true,\n            actions: [\n              {\n                name: (previousActionResult: any, lastActionRow?: IRowDataItem) => this.downloadResults(lastActionRow)\n              }\n            ]\n          },\n          {\n            index: 13,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.instanceId),\n            title: this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-search.instance-id.title'),\n            visible: false\n          },\n          {\n            index: 14,\n            fieldId: String(RX_COGNITIVE_TRAINING.settings.fieldIds.error),\n            title: this.translateService.instant(\n              'com.bmc.arsys.rx.client.approval.notification-configuration.notify-on.options.error.name'\n            ),\n            visible: false\n          }\n        ]\n      }\n    };\n\n    this.evaluation = RX_COGNITIVE_TRAINING.settings.evaluations[this.evaluationName];\n\n    this.recordGridConfig = of({\n      enableFiltering: true,\n      enableRowSelection: RowSelectionMode.Multiple,\n      recordDefinitionName: this.recordDefinitionName,\n\n      actionButtons: chain(availableActionButtons.common[this.tab.name])\n        .concat(availableActionButtons[this.evaluation.name][this.tab.name])\n        .compact()\n        .value(),\n\n      columns: chain(availableColumns.common[this.tab.name])\n        .concat(availableColumns[this.evaluation.name][this.tab.name])\n        .compact()\n        .value(),\n\n      getData: (queryParams: IRecordGridDataPageParams): Observable<IDataPageResult> => {\n        let queryExpression: string = this.evaluation.queryExpression + JSON.stringify(this.bundleId);\n\n        if (\n          this.evaluation.name ===\n          RX_COGNITIVE_TRAINING.settings.evaluations.autoClassificationTrainingAndEvaluation.name\n        ) {\n          queryExpression += this.evaluation.serviceProviderQueryExpresion + this.trainingType.uniqueValue;\n        }\n\n        const params: IDataPageParams = {\n          recorddefinition: queryParams.recorddefinition,\n          pageSize: queryParams.pageSize,\n          queryExpression: compact([queryParams.queryExpression, queryExpression]).join(' AND ')\n        };\n\n        return this.rxRecordInstanceDataPageService.post({ params });\n      }\n    });\n  }\n\n  createDataSet(dataSourceTypeName: string): void {\n    this.rxRecordInstanceService\n      .getNew(RX_COGNITIVE_TRAINING.settings.dataSetDefinitionName)\n      .subscribe((recordInstance: RecordInstance) => {\n        const data = {\n          bundleId: this.bundleId,\n          dataSourceType: cloneDeep(RX_COGNITIVE_TRAINING.settings.dataSourceTypes[dataSourceTypeName]),\n          evaluation: this.evaluation,\n          isNewDataSet: true,\n          recordInstance,\n          trainingType: this.trainingType\n        };\n\n        if (this.isAutoClassificationTrainingAndEvaluation()) {\n          if (dataSourceTypeName === RX_COGNITIVE_TRAINING.settings.dataSourceTypes.innovationSuiteDataSource.name) {\n            this.openDockedPanel({\n              title: this.translateService.instant(\n                'com.bmc.arsys.rx.client.admin.cognitive-training.new-data-set.title',\n                {\n                  dataSetName: this.translateService.instant(\n                    RX_COGNITIVE_TRAINING.settings.dataSourceTypes.innovationSuiteDataSource.displayName\n                  )\n                }\n              ),\n              content: RecordDataSetBladeComponent,\n              size: 'lg',\n              data: {\n                data\n              }\n            })\n              .then((result) => {\n                if (result) {\n                  this.cognitiveTrainingRecordGrid.api.refresh().subscribe();\n                }\n              })\n              .catch(noop);\n          } else if (dataSourceTypeName === RX_COGNITIVE_TRAINING.settings.dataSourceTypes.fileDataSource.name) {\n            this.openDockedPanel({\n              title: this.translateService.instant(\n                'com.bmc.arsys.rx.client.admin.cognitive-training.new-data-set.title',\n                {\n                  dataSetName: this.translateService.instant(\n                    RX_COGNITIVE_TRAINING.settings.dataSourceTypes.fileDataSource.displayName\n                  )\n                }\n              ),\n              content: FileDataSetBladeComponent,\n              size: 'lg',\n              data: {\n                data\n              }\n            })\n              .then((result) => {\n                if (result) {\n                  this.cognitiveTrainingRecordGrid.api.refresh().subscribe();\n                }\n              })\n              .catch(noop);\n          }\n        } else if (this.isChatbotEvaluation()) {\n          this.openDockedPanel({\n            title: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-training.new-chatbot-data-set.title'\n            ),\n            content: ChatbotDataSetBladeComponent,\n            size: 'lg',\n            data: {\n              data\n            }\n          })\n            .then((result) => {\n              if (result) {\n                this.cognitiveTrainingRecordGrid.api.refresh().subscribe();\n              }\n            })\n            .catch(noop);\n        }\n      });\n  }\n\n  editDataSet(dataSet: IRowDataItem): void {\n    const recordInstanceId: string = dataSet[RX_COGNITIVE_TRAINING.settings.fieldIds.instanceId];\n\n    this.rxRecordInstanceService\n      .get(RX_COGNITIVE_TRAINING.settings.dataSetDefinitionName, recordInstanceId)\n      .subscribe((recordInstance: RecordInstance) => {\n        const dataSourceHistory: ICognitiveTrainingDataSourceHistory = this.rxJsonParserService.tryParseJson(\n          recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSourceHistory)\n        );\n\n        const dataSourceType: ICognitiveTrainingDataSourceType =\n          this.rxCognitiveTrainingUtilsService.getDataSourceType(dataSourceHistory);\n\n        const data = {\n          dataSourceType,\n          editDataSet: true,\n          evaluation: this.evaluation,\n          recordInstance,\n          trainingType: this.trainingType,\n          getAttachmentRecordInstanceId: recordInstance.id\n        };\n\n        if (this.isAutoClassificationTrainingAndEvaluation()) {\n          if (dataSourceType.name === RX_COGNITIVE_TRAINING.settings.dataSourceTypes.innovationSuiteDataSource.name) {\n            this.openDockedPanel({\n              title: this.translateService.instant(\n                'com.bmc.arsys.rx.client.admin.cognitive-training.edit-data-set.title',\n                {\n                  dataSetName: this.translateService.instant(\n                    RX_COGNITIVE_TRAINING.settings.dataSourceTypes.innovationSuiteDataSource.displayName\n                  )\n                }\n              ),\n              content: RecordDataSetBladeComponent,\n              size: 'lg',\n              data: {\n                data\n              }\n            })\n              .then((result) => {\n                if (result) {\n                  this.cognitiveTrainingRecordGrid.api.refresh().subscribe();\n                }\n              })\n              .catch(noop);\n          } else if (dataSourceType.name === RX_COGNITIVE_TRAINING.settings.dataSourceTypes.fileDataSource.name) {\n            this.openDockedPanel({\n              title: this.translateService.instant(\n                'com.bmc.arsys.rx.client.admin.cognitive-training.edit-data-set.title',\n                {\n                  dataSetName: this.translateService.instant(\n                    RX_COGNITIVE_TRAINING.settings.dataSourceTypes.fileDataSource.displayName\n                  )\n                }\n              ),\n              content: FileDataSetBladeComponent,\n              size: 'lg',\n              data: {\n                data\n              }\n            })\n              .then((result) => {\n                if (result) {\n                  this.cognitiveTrainingRecordGrid.api.refresh().subscribe();\n                }\n              })\n              .catch(noop);\n          }\n        } else if (this.isChatbotEvaluation()) {\n          this.openDockedPanel({\n            title: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-training.edit-chatbot-data-set.title'\n            ),\n            content: ChatbotDataSetBladeComponent,\n            size: 'lg',\n            data: {\n              data\n            }\n          })\n            .then((result) => {\n              if (result) {\n                this.cognitiveTrainingRecordGrid.api.refresh().subscribe();\n              }\n            })\n            .catch(noop);\n        }\n      });\n  }\n\n  copyDataSet(dataSet: IRowDataItem): void {\n    const recordInstanceId: string = dataSet[RX_COGNITIVE_TRAINING.settings.fieldIds.instanceId];\n\n    combineLatest([\n      this.rxRecordInstanceService.get(RX_COGNITIVE_TRAINING.settings.dataSetDefinitionName, recordInstanceId),\n      this.rxRecordInstanceService.getNew(RX_COGNITIVE_TRAINING.settings.dataSetDefinitionName)\n    ]).subscribe(([recordInstance, newRecordInstance]) => {\n      const dataSourceHistory: ICognitiveTrainingDataSourceHistory = this.rxJsonParserService.tryParseJson(\n        recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSourceHistory)\n      );\n\n      const dataSourceType: ICognitiveTrainingDataSourceType =\n        this.rxCognitiveTrainingUtilsService.getDataSourceType(dataSourceHistory);\n\n      newRecordInstance.setFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetName, '');\n\n      newRecordInstance.setFieldValue(\n        RX_RECORD_DEFINITION.coreFieldIds.description,\n        recordInstance.getFieldValue(RX_RECORD_DEFINITION.coreFieldIds.description)\n      );\n\n      newRecordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.trainingType,\n        recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.trainingType)\n      );\n\n      newRecordInstance.setFieldValue(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.locale,\n        recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.locale)\n      );\n\n      newRecordInstance.setFieldProp(\n        RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource,\n        'value',\n        recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSource) || null\n      );\n\n      newRecordInstance.fieldInstances[RX_COGNITIVE_TRAINING.settings.fieldIds.dataSourceHistory].value =\n        JSON.stringify(dataSourceHistory);\n\n      const data = {\n        bundleId: this.bundleId,\n        dataSourceType,\n        copyDataSet: true,\n        evaluation: this.evaluation,\n        recordInstance: null,\n        trainingType: this.trainingType,\n        getAttachmentRecordInstanceId: recordInstance.id\n      };\n\n      if (this.isAutoClassificationTrainingAndEvaluation()) {\n        newRecordInstance.setFieldValue(\n          RX_COGNITIVE_TRAINING.settings.fieldIds.classificationServiceProvider,\n          recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.classificationServiceProvider)\n        );\n\n        newRecordInstance.setFieldValue(\n          RX_COGNITIVE_TRAINING.settings.fieldIds.trainDataPercent,\n          recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.trainDataPercent)\n        );\n\n        newRecordInstance.setFieldValue(\n          RX_COGNITIVE_TRAINING.settings.fieldIds.testDataPercent,\n          recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.testDataPercent)\n        );\n\n        data.recordInstance = newRecordInstance;\n\n        if (dataSourceType.name === RX_COGNITIVE_TRAINING.settings.dataSourceTypes.innovationSuiteDataSource.name) {\n          this.openDockedPanel({\n            title: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-training.copy-data-set.title',\n              {\n                dataSetName: this.translateService.instant(\n                  RX_COGNITIVE_TRAINING.settings.dataSourceTypes.innovationSuiteDataSource.displayName\n                )\n              }\n            ),\n            content: RecordDataSetBladeComponent,\n            size: 'lg',\n            data: {\n              data\n            }\n          })\n            .then((result) => {\n              if (result) {\n                this.cognitiveTrainingRecordGrid.api.refresh().subscribe();\n              }\n            })\n            .catch(noop);\n        } else if (dataSourceType.name === RX_COGNITIVE_TRAINING.settings.dataSourceTypes.fileDataSource.name) {\n          this.openDockedPanel({\n            title: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.cognitive-training.copy-data-set.title',\n              {\n                dataSetName: this.translateService.instant(\n                  RX_COGNITIVE_TRAINING.settings.dataSourceTypes.fileDataSource.displayName\n                )\n              }\n            ),\n            content: FileDataSetBladeComponent,\n            size: 'lg',\n            data: {\n              data\n            }\n          })\n            .then((result) => {\n              if (result) {\n                this.cognitiveTrainingRecordGrid.api.refresh().subscribe();\n              }\n            })\n            .catch(noop);\n        }\n      } else if (this.isChatbotEvaluation()) {\n        newRecordInstance.setFieldValue(\n          RX_COGNITIVE_TRAINING.settings.fieldIds.chatbotName,\n          recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.chatbotName)\n        );\n\n        newRecordInstance.setFieldValue(\n          RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetLocale,\n          recordInstance.getFieldValue(RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetLocale)\n        );\n\n        data.recordInstance = newRecordInstance;\n\n        this.openDockedPanel({\n          title: this.translateService.instant(\n            'com.bmc.arsys.rx.client.admin.cognitive-training.copy-chatbot-data-set.title'\n          ),\n          content: ChatbotDataSetBladeComponent,\n          size: 'lg',\n          data: {\n            data\n          }\n        })\n          .then((result) => {\n            if (result) {\n              this.cognitiveTrainingRecordGrid.api.refresh().subscribe();\n            }\n          })\n          .catch(noop);\n      }\n    });\n  }\n\n  delete(): void {\n    this.rxModalService\n      .confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.translateService.instant(this.tab.deletionConfirmationMessage)\n      })\n      .then((result: boolean) => {\n        if (result) {\n          forkJoin(\n            map(this.cognitiveTrainingRecordGrid.api.getSelectedRows(), (dataSet: IRowDataItem) =>\n              this.rxRecordInstanceService.delete(\n                this.tab.recordDefinitionName,\n                dataSet[RX_RECORD_DEFINITION.coreFieldIds.id]\n              )\n            )\n          ).subscribe(() => {\n            this.cognitiveTrainingRecordGrid.api.refresh().subscribe();\n\n            this.rxNotificationService.addSuccessMessage(\n              this.translateService.instant(this.tab.deletionSuccessMessage)\n            );\n          });\n        }\n      });\n  }\n\n  trainDataSet(dataSet: IRowDataItem): void {\n    this.rxCommandFactoryService\n      .forResourceType(RX_COGNITIVE_TRAINING.settings.commands.train)\n      .execute({\n        trainingDataSetName: `${this.bundleId}:${dataSet[RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetName]}`\n      })\n      .pipe(\n        catchError((errorResponse) => throwError(errorResponse)),\n        finalize(() => this.cognitiveTrainingRecordGrid.api.refresh().subscribe())\n      )\n      .subscribe(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant(\n            'com.bmc.arsys.rx.client.admin.cognitive-training.training-process-triggered.message'\n          )\n        );\n      });\n  }\n\n  testDataSet(dataSet: IRowDataItem): void {\n    this.rxCommandFactoryService\n      .forResourceType(RX_COGNITIVE_TRAINING.settings.commands.test)\n      .execute({\n        trainingDataSetName: `${this.bundleId}:${dataSet[RX_COGNITIVE_TRAINING.settings.fieldIds.dataSetName]}`\n      })\n      .pipe(\n        catchError((errorResponse) => throwError(errorResponse)),\n        finalize(() => this.cognitiveTrainingRecordGrid.api.refresh().subscribe())\n      )\n      .subscribe(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.admin.cognitive-training.data-set-submitted.message')\n        );\n      });\n  }\n\n  downloadTrainingData(dataSet: IRowDataItem): void {\n    this.rxRecordInstanceService.downloadAttachment(\n      RX_COGNITIVE_TRAINING.settings.testResultsDefinitionName,\n      RX_COGNITIVE_TRAINING.settings.fieldIds.trainingDataCsv,\n      dataSet[RX_COGNITIVE_TRAINING.settings.fieldIds.instanceId],\n      dataSet[RX_COGNITIVE_TRAINING.settings.fieldIds.trainingDataCsv]\n    );\n  }\n\n  downloadTestData(dataSet: IRowDataItem): void {\n    this.rxRecordInstanceService.downloadAttachment(\n      RX_COGNITIVE_TRAINING.settings.testResultsDefinitionName,\n      RX_COGNITIVE_TRAINING.settings.fieldIds.testDataCsv,\n      dataSet[RX_COGNITIVE_TRAINING.settings.fieldIds.instanceId],\n      dataSet[RX_COGNITIVE_TRAINING.settings.fieldIds.testDataCsv]\n    );\n  }\n\n  downloadResults(dataSet: IRowDataItem): void {\n    this.rxRecordInstanceService.downloadAttachment(\n      RX_COGNITIVE_TRAINING.settings.testResultsDefinitionName,\n      RX_COGNITIVE_TRAINING.settings.fieldIds.resultCsv,\n      dataSet[RX_COGNITIVE_TRAINING.settings.fieldIds.instanceId],\n      dataSet[RX_COGNITIVE_TRAINING.settings.fieldIds.resultCsv]\n    );\n  }\n\n  openInteractiveEvaluationBlade(): void {\n    this.openDockedPanel({\n      title: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.cognitive-training.auto-classification-interactive.evaluation.title'\n      ),\n      content: InteractiveEvaluationBladeComponent,\n      size: 'lg',\n      data: {\n        bundleId: this.bundleId,\n        evaluation: this.evaluation,\n        trainingType: this.trainingType\n      }\n    })\n      .then((result) => {\n        if (result) {\n          this.cognitiveTrainingRecordGrid.api.refresh().subscribe();\n        }\n      })\n      .catch(noop);\n  }\n\n  isDataSetsTab(): boolean {\n    return this.tab.name === 'dataSets';\n  }\n\n  isTestResultsTab(): boolean {\n    return this.tab.name === 'testResults';\n  }\n\n  isAutoClassificationTrainingAndEvaluation(): boolean {\n    return (\n      this.evaluation.name === RX_COGNITIVE_TRAINING.settings.evaluations.autoClassificationTrainingAndEvaluation.name\n    );\n  }\n\n  isChatbotEvaluation(): boolean {\n    return this.evaluation.name === RX_COGNITIVE_TRAINING.settings.evaluations.chatbotEvaluation.name;\n  }\n\n  formatDataSourceHistory(dataItem: string[], column: ColumnConfig): string {\n    const dataSourceHistory: ICognitiveTrainingDataSourceHistory = JSON.parse(this.getCellValue(dataItem, column));\n\n    return (\n      dataSourceHistory.fileName || this.rxDefinitionNameService.getDisplayName(dataSourceHistory.recordDefinitionName)\n    );\n  }\n\n  getCellValue(dataItem: string[], column: ColumnConfig): string {\n    return dataItem[column.field];\n  }\n\n  private isDataSetActionButtonDisabled(): boolean {\n    const dataSets = this.cognitiveTrainingRecordGrid.api.getSelectedRows();\n\n    return (\n      !this.isAdministrator ||\n      dataSets.length !== 1 ||\n      dataSets[0][RX_RECORD_DEFINITION.coreFieldIds.status] ===\n        RX_COGNITIVE_TRAINING.settings.trainingStatuses.training.value ||\n      dataSets[0][RX_RECORD_DEFINITION.coreFieldIds.status] ===\n        RX_COGNITIVE_TRAINING.settings.trainingStatuses.inProgress.value\n    );\n  }\n\n  private isChatbotDataSetEditButtonDisabled(): boolean {\n    const dataSets = this.cognitiveTrainingRecordGrid.api.getSelectedRows();\n\n    return (\n      !this.isAdministrator ||\n      dataSets.length !== 1 ||\n      dataSets[0][RX_RECORD_DEFINITION.coreFieldIds.status] ===\n        RX_COGNITIVE_TRAINING.settings.trainingStatuses.training.value\n    );\n  }\n\n  private isTestResultsDeletionRestricted(): boolean {\n    const dataSets = this.cognitiveTrainingRecordGrid.api.getSelectedRows();\n\n    return (\n      !this.isAdministrator ||\n      some(\n        dataSets,\n        (dataSet) =>\n          dataSet[RX_COGNITIVE_TRAINING.settings.fieldIds.evaluationStatus] ===\n          RX_COGNITIVE_TRAINING.settings.evaluationStatuses.queued.value\n      )\n    );\n  }\n\n  private openDockedPanel(config: DockedPanel): Promise<any> {\n    return this.rxModalService.openDockedPanel(config).catch(noop);\n  }\n}\n","<div *ngIf=\"isDataSetsTab()\">\n  <div class=\"dropdown\" *ngIf=\"isAutoClassificationTrainingAndEvaluation()\" adaptDropdown [autoFocusFirst]=\"false\">\n    <button\n      class=\"d-icon-plus_circle align-self-start\"\n      type=\"button\"\n      rx-id=\"data-set-dropdown\"\n      adapt-button\n      adaptDropdownToggle\n      btn-type=\"tertiary\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.new.label' | translate }}\n    </button>\n\n    <div class=\"dropdown-menu\" adaptDropdownMenu>\n      <button\n        class=\"dropdown-item\"\n        rx-id=\"create-record-data-set\"\n        [disabled]=\"!isAdministrator\"\n        (click)=\"createDataSet(innovationSuiteDataSourceType.name)\"\n      >\n        {{ innovationSuiteDataSourceType.displayName | translate }}\n      </button>\n\n      <button\n        class=\"dropdown-item\"\n        rx-id=\"create-file-data-set\"\n        [disabled]=\"!isAdministrator\"\n        (click)=\"createDataSet(fileDataSourceType.name)\"\n      >\n        {{ fileDataSourceType.displayName | translate }}\n      </button>\n    </div>\n  </div>\n\n  <button\n    class=\"d-icon-plus_circle align-self-start\"\n    *ngIf=\"isChatbotEvaluation()\"\n    type=\"button\"\n    rx-id=\"create-chatbot-data-set\"\n    adapt-button\n    btn-type=\"tertiary\"\n    [disabled]=\"!isAdministrator\"\n    (click)=\"createDataSet(fileDataSourceType.name)\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.new.label' | translate }}\n  </button>\n</div>\n\n<button\n  class=\"d-icon-target_cursor align-self-start\"\n  *ngIf=\"isAutoClassificationTrainingAndEvaluation() && isTestResultsTab()\"\n  type=\"button\"\n  rx-id=\"interactive-evaluation\"\n  adapt-button\n  btn-type=\"tertiary\"\n  [disabled]=\"!isAdministrator\"\n  (click)=\"openInteractiveEvaluationBlade()\"\n>\n  {{\n    'com.bmc.arsys.rx.client.admin.cognitive-training.cognitive-training-record-grid.interactive-evaluation.label'\n      | translate\n  }}\n</button>\n\n<rx-record-grid #cognitiveTrainingRecordGrid [config]=\"recordGridConfig\"></rx-record-grid>\n\n<ng-template #dataSourceHistoryNameCellTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n  <ng-container>\n    {{ formatDataSourceHistory(dataItem, column) }}\n  </ng-container>\n</ng-template>\n\n<ng-template #chatbotNameCellTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n  <ng-container>\n    {{ getCellValue(dataItem, column) | rxDefinitionNamePipe }}\n  </ng-container>\n</ng-template>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ReplaySubject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { find } from 'lodash';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { ISystemConfiguration } from '@helix/platform/shared/api';\nimport { RX_COGNITIVE_TRAINING } from './cognitive-training.constant';\nimport { RxCognitiveTrainingService } from './cognitive-training.service';\nimport { CognitiveTrainingTabNames, ICognitiveTrainingTab, ICognitiveTrainingType } from './cognitive-training.types';\n\n@Component({\n  selector: 'rx-admin-cognitive-training',\n  templateUrl: './cognitive-training.component.html'\n})\nexport class CognitiveTrainingAdminComponent extends BaseViewComponent implements OnInit, OnDestroy {\n  busy: Subscription;\n  trainingType: ICognitiveTrainingType;\n\n  sections = RX_COGNITIVE_TRAINING.settings.sections;\n\n  tabs: ICognitiveTrainingTab[] = [\n    RX_COGNITIVE_TRAINING.settings.tabs[CognitiveTrainingTabNames.DataSets],\n    RX_COGNITIVE_TRAINING.settings.tabs[CognitiveTrainingTabNames.TestResults]\n  ];\n\n  protected destroyed$ = new ReplaySubject<boolean>(1);\n\n  constructor(private rxCognitiveTrainingService: RxCognitiveTrainingService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.busy = this.rxCognitiveTrainingService\n      .getClassificationServiceProvider()\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((classificationServiceProvider: ISystemConfiguration) => {\n        this.trainingType = RX_COGNITIVE_TRAINING.settings.trainingTypes[classificationServiceProvider.value];\n\n        find(this.sections, {\n          evaluationName: RX_COGNITIVE_TRAINING.settings.evaluations.autoClassificationTrainingAndEvaluation.name\n        }).title = this.trainingType.title;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.admin.cognitive-training.header.title' | translate }}\">\n  <adapt-accordion multiselect=\"true\">\n    <adapt-accordion-tab\n      *ngFor=\"let section of sections\"\n      [title]=\"section.title | translate\"\n      [isOpen]=\"section.isExpanded\"\n    >\n      <adapt-tabset *ngIf=\"trainingType\">\n        <adapt-tab-panel *ngFor=\"let tab of tabs\" [adapt-tab-title]=\"tab.title | translate\">\n          <rx-cognitive-training-record-grid\n            [evaluationName]=\"section.evaluationName\"\n            [tab]=\"tab\"\n            [recordDefinitionName]=\"tab.recordDefinitionName\"\n            [trainingType]=\"trainingType\"\n          >\n          </rx-cognitive-training-record-grid>\n        </adapt-tab-panel>\n      </adapt-tabset>\n    </adapt-accordion-tab>\n  </adapt-accordion>\n</rx-admin-settings>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport {\n  AdaptAccordionModule,\n  AdaptAlertModule,\n  AdaptButtonModule,\n  AdaptDockedPanelModule,\n  AdaptDropdownModule,\n  AdaptModalModule,\n  AdaptRxCounterModule,\n  AdaptRxSelectModule,\n  AdaptRxTextfieldModule,\n  AdaptRxUploaderModule,\n  AdaptRxValidatorsModule,\n  AdaptTabsModule\n} from '@bmc-ux/adapt-angular';\nimport { RX_APPLICATION, RxDefinitionModule } from '@helix/platform/shared/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport {\n  ExpressionFormControlModule,\n  GroupButtonFormControlModule,\n  RxDefinitionPickerModule\n} from '@helix/platform/shared/components';\nimport {\n  RecordGridDesignModule,\n  RecordGridFilterSelectControlModule,\n  RecordGridModule\n} from '@helix/platform/view/components';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { RxBusyIndicatorModule } from '@helix/platform/ui-kit';\nimport { CognitiveTrainingAdminComponent } from './cognitive-training.component';\nimport { CognitiveTrainingRecordGridComponent } from './components/cognitive-training-record-grid/cognitive-training-record-grid.component';\nimport { RecordDataSetBladeComponent } from './components/record-data-set-blade/record-data-set-blade.component';\nimport { FileDataSetBladeComponent } from './components/file-data-set-blade/file-data-set-blade.component';\nimport { ChatbotDataSetBladeComponent } from './components/chatbot-data-set-blade/chatbot-data-set-blade.component';\nimport { InteractiveEvaluationBladeComponent } from './components/interactive-evaluation-blade/interactive-evaluation-blade.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [\n    ChatbotDataSetBladeComponent,\n    CognitiveTrainingAdminComponent,\n    CognitiveTrainingRecordGridComponent,\n    FileDataSetBladeComponent,\n    InteractiveEvaluationBladeComponent,\n    RecordDataSetBladeComponent\n  ],\n  imports: [\n    AdaptAccordionModule,\n    AdaptAlertModule,\n    AdaptButtonModule,\n    AdaptDockedPanelModule,\n    AdaptDropdownModule,\n    AdaptModalModule,\n    AdaptRxCounterModule,\n    AdaptRxSelectModule,\n    AdaptRxTextfieldModule,\n    AdaptRxUploaderModule,\n    AdaptRxValidatorsModule,\n    AdaptTabsModule,\n    AdminSettingsModule,\n    CommonModule,\n    ExpressionFormControlModule,\n    FormsModule,\n    GroupButtonFormControlModule,\n    RecordGridDesignModule,\n    RecordGridModule,\n    RxBusyIndicatorModule,\n    RxDefinitionModule,\n    RxDefinitionPickerModule,\n    TranslateModule,\n    RecordGridFilterSelectControlModule\n  ],\n  entryComponents: [\n    ChatbotDataSetBladeComponent,\n    CognitiveTrainingAdminComponent,\n    CognitiveTrainingRecordGridComponent,\n    FileDataSetBladeComponent,\n    InteractiveEvaluationBladeComponent,\n    RecordDataSetBladeComponent\n  ]\n})\nexport class CognitiveTrainingRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-cognitive-training',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(CognitiveTrainingAdminComponent),\n      name: 'Cognitive training',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","export const RX_COMAROUND_KNOWLEDGE = {\n  configName: 'ComAround Knowledge',\n  pingComAroundCommand: 'com.bmc.dsm.chatbot.command.PingComAroundCommand',\n\n  settingNames: {\n    serverUrl: 'ComAround Knowledge URL',\n    subscriptionId: 'ComAround Knowledge Subscription ID',\n    userName: 'ComAround Knowledge User',\n    password: 'ComAround Knowledge Password',\n    frameUrl: 'ComAround Knowledge Frame URL',\n    mainUrl: 'ComAround Knowledge Main URL',\n    portalId: 'ComAround Knowledge Portal ID'\n  }\n};\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport {\n  IAdminComponentSetting,\n  IAdminComponentSettings,\n  RxAdminSettingsService,\n  RxCommandFactoryService,\n  RxNotificationService,\n  RX_APPLICATION\n} from '@helix/platform/shared/api';\nimport { ConnectionTestStatus } from '@helix/platform/ui-kit';\nimport { RxUrlUtilsService } from '@helix/platform/utils';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { find } from 'lodash';\nimport { Observable, of, Subscription, throwError } from 'rxjs';\nimport { catchError, finalize, switchMap, tap } from 'rxjs/operators';\nimport { RxCognitiveServiceService } from '../cognitive-service/cognitive-service.service';\nimport { RX_COMAROUND_KNOWLEDGE } from './comaround-knowledge.constant';\nimport { ComaroundPortal } from './comaround-knowledge.interfaces';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-comaround-knowledge',\n  templateUrl: './comaround-knowledge.component.html',\n  styleUrls: ['./comaround-knowledge.component.scss']\n})\nexport class ComaroundKnowledgeAdminComponent extends BaseViewComponent implements OnInit, OnDestroy {\n  busy: Subscription;\n  knowledgeConfigForm: FormGroup;\n  connectionTestStatus: ConnectionTestStatus = ConnectionTestStatus.Invalid;\n  availablePortals: ComaroundPortal[] = [];\n  private isNewConfigurationSetting = false;\n  private comaroundComponentSettingsValues: IAdminComponentSetting[] = [];\n  private subscription = new Subscription();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private rxUrlUtilsService: RxUrlUtilsService,\n    private rxNotificationService: RxNotificationService,\n    private rxAdminSettingsService: RxAdminSettingsService,\n    private rxCommandFactoryService: RxCommandFactoryService,\n    private rxCognitiveServiceService: RxCognitiveServiceService,\n    private httpClient: HttpClient,\n    private translateService: TranslateService\n  ) {\n    super();\n  }\n\n  private get comaroundConfigFormGroup(): FormGroup {\n    return this.knowledgeConfigForm.controls.comaroundForm as FormGroup;\n  }\n\n  get portalControl(): FormControl {\n    return this.knowledgeConfigForm.controls.portal as FormControl;\n  }\n\n  ngOnInit(): void {\n    this.notifyPropertyChanged('api', {\n      isDirty: () => this.knowledgeConfigForm.dirty\n    });\n\n    this.knowledgeConfigForm = this.formBuilder.group({\n      comaroundForm: this.formBuilder.group({\n        mainUrl: this.formBuilder.control(null, this.validateUrl),\n        frameUrl: this.formBuilder.control(null, this.validateUrl),\n        subscriptionId: this.formBuilder.control(null, Validators.required),\n        userName: this.formBuilder.control(null, Validators.required),\n        password: this.formBuilder.control(null, Validators.required),\n        serverUrl: this.formBuilder.control(null, [Validators.required, this.validateUrl])\n      }),\n      portal: this.formBuilder.control({ value: [], disabled: true })\n    });\n\n    this.busy = this.getComaroundComponentSettings()\n      .pipe(\n        tap((componentSettings) => {\n          const settingNames = Object.values(RX_COMAROUND_KNOWLEDGE.settingNames);\n          const { values } = componentSettings;\n\n          this.isNewConfigurationSetting = values.length === 0;\n          this.comaroundComponentSettingsValues = values;\n\n          // complete the missing configuration settings\n          // works for new configuration too\n          if (values.length < settingNames.length) {\n            const ownerKey = values[0]?.ownerKeyValue1;\n\n            settingNames\n              .filter((name) => !values.find((setting) => setting.settingName === name))\n              .forEach((name) =>\n                values.push({\n                  // these fields satisfy update/create settings\n                  componentName: RX_COMAROUND_KNOWLEDGE.configName,\n                  ownerKeyValue1: ownerKey,\n                  settingName: name,\n                  settingValue: null\n                } as IAdminComponentSetting)\n              );\n          }\n\n          this.comaroundConfigFormGroup.patchValue({\n            serverUrl: this.getValue(RX_COMAROUND_KNOWLEDGE.settingNames.serverUrl),\n            subscriptionId: this.getValue(RX_COMAROUND_KNOWLEDGE.settingNames.subscriptionId),\n            userName: this.getValue(RX_COMAROUND_KNOWLEDGE.settingNames.userName),\n            password: this.getValue(RX_COMAROUND_KNOWLEDGE.settingNames.password),\n            frameUrl: this.getValue(RX_COMAROUND_KNOWLEDGE.settingNames.frameUrl),\n            mainUrl: this.getValue(RX_COMAROUND_KNOWLEDGE.settingNames.mainUrl)\n          });\n        }),\n        switchMap(() => {\n          return this.getValue(RX_COMAROUND_KNOWLEDGE.settingNames.portalId) ? this.getAvailablePortals() : of([]);\n        }),\n        tap((portals) => {\n          this.availablePortals = portals;\n\n          if (portals.length) {\n            const configuredPortalId = this.getValue(RX_COMAROUND_KNOWLEDGE.settingNames.portalId);\n            let selectedPortal: ComaroundPortal =\n              configuredPortalId && portals.find((portal) => portal.id == configuredPortalId);\n\n            selectedPortal ??= portals.find((portal) => portal.isDefault);\n            this.portalControl.setValue([selectedPortal]);\n          }\n        })\n      )\n      .subscribe();\n\n    this.subscription = this.comaroundConfigFormGroup.valueChanges.subscribe(() => {\n      this.connectionTestStatus =\n        this.comaroundConfigFormGroup.pristine || this.comaroundConfigFormGroup.invalid\n          ? ConnectionTestStatus.Invalid\n          : ConnectionTestStatus.Unknown;\n\n      if (this.portalControl.enabled) {\n        this.portalControl.disable();\n      }\n    });\n  }\n\n  private getComaroundComponentSettings(): Observable<IAdminComponentSettings> {\n    return this.rxAdminSettingsService.getComponentSettings(RX_COMAROUND_KNOWLEDGE.configName, {\n      'default-bundle-scope': RX_APPLICATION.chatbotBundleId\n    });\n  }\n\n  getAvailablePortals(): Observable<ComaroundPortal[]> {\n    return this.httpClient\n      .get<ComaroundPortal[]>('/api/rx/application/knowledge?ComAroundRequest=v1/user/portals')\n      .pipe(catchError(() => of([])));\n  }\n\n  portalOptionFormatter(option: ComaroundPortal) {\n    return option.name;\n  }\n\n  private getValue(settingName: string): string | number {\n    const setting = find(this.comaroundComponentSettingsValues, {\n      settingName\n    });\n\n    return setting?.settingValue;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  isSaveButtonDisabled(): boolean {\n    return (\n      this.knowledgeConfigForm.pristine ||\n      this.knowledgeConfigForm.invalid ||\n      this.connectionTestStatus !== ConnectionTestStatus.Passed\n    );\n  }\n\n  private setValue(settingName: string, value: string): void {\n    const setting = find(this.comaroundComponentSettingsValues, {\n      settingName\n    });\n\n    if (setting) {\n      setting.settingValue = value;\n    }\n  }\n\n  saveConfiguration(): void {\n    const formValue = {\n      ...this.comaroundConfigFormGroup.getRawValue(),\n      portal: this.portalControl.value\n    };\n\n    let adminSetting$: Observable<any>;\n\n    this.setValue(RX_COMAROUND_KNOWLEDGE.settingNames.serverUrl, formValue.serverUrl);\n    this.setValue(RX_COMAROUND_KNOWLEDGE.settingNames.subscriptionId, formValue.subscriptionId);\n    this.setValue(RX_COMAROUND_KNOWLEDGE.settingNames.userName, formValue.userName);\n    this.setValue(RX_COMAROUND_KNOWLEDGE.settingNames.password, formValue.password);\n    this.setValue(RX_COMAROUND_KNOWLEDGE.settingNames.frameUrl, formValue.frameUrl);\n    this.setValue(RX_COMAROUND_KNOWLEDGE.settingNames.mainUrl, formValue.mainUrl);\n    this.setValue(RX_COMAROUND_KNOWLEDGE.settingNames.portalId, formValue.portal[0]?.id);\n\n    if (this.isNewConfigurationSetting) {\n      adminSetting$ = this.rxAdminSettingsService\n        .createComponentSettings(RX_COMAROUND_KNOWLEDGE.configName, this.comaroundComponentSettingsValues)\n        .pipe(\n          switchMap(() => this.getComaroundComponentSettings()),\n          tap((response) => {\n            this.isNewConfigurationSetting = false;\n            this.comaroundComponentSettingsValues = response.values;\n          })\n        );\n    } else {\n      adminSetting$ = this.rxAdminSettingsService.updateComponentSettings(\n        `${RX_COMAROUND_KNOWLEDGE.configName}/${this.comaroundComponentSettingsValues[0].ownerKeyValue1}`,\n        this.comaroundComponentSettingsValues\n      );\n    }\n\n    this.busy = adminSetting$.subscribe(() => {\n      this.knowledgeConfigForm.markAsPristine();\n      this.updateComaroundTokenWithLatestValues();\n\n      this.rxNotificationService.addSuccessMessage(\n        this.translateService.instant('com.bmc.arsys.rx.client.admin.comaround-knowledge.configuration-saved.message')\n      );\n\n      this.connectionTestStatus = ConnectionTestStatus.Invalid;\n      this.portalControl.disable();\n    });\n  }\n\n  private updateComaroundTokenWithLatestValues(): void {\n    this.rxCommandFactoryService\n      .forResourceType('com.bmc.dsm.chatbot.command.UpdateComAroundTokenCommand')\n      .execute({})\n      .subscribe();\n  }\n\n  onTestConnection(): void {\n    const formValue = this.comaroundConfigFormGroup.getRawValue();\n\n    this.knowledgeConfigForm.disable();\n\n    this.rxCognitiveServiceService\n      .testConnection({\n        resourceType: RX_COMAROUND_KNOWLEDGE.pingComAroundCommand,\n        serverUrl: formValue.serverUrl,\n        subscriptionId: formValue.subscriptionId,\n        userName: formValue.userName,\n        password: formValue.password,\n        frameUrl: formValue.frameUrl,\n        mainUrl: formValue.mainUrl\n      })\n      .pipe(\n        finalize(() => this.comaroundConfigFormGroup.enable({ emitEvent: false })),\n        catchError((error: HttpErrorResponse) => {\n          this.connectionTestStatus = ConnectionTestStatus.Failed;\n\n          return throwError(error);\n        })\n      )\n      .subscribe((portals: ComaroundPortal[] | undefined) => {\n        this.availablePortals = portals || [];\n\n        if (portals) {\n          const configuredPortalId = this.getValue(RX_COMAROUND_KNOWLEDGE.settingNames.portalId);\n          let selectedPortal: ComaroundPortal =\n            configuredPortalId && portals.find((portal) => portal.id == configuredPortalId);\n\n          selectedPortal ??= portals.find((portal) => portal.isDefault);\n          this.portalControl.setValue([selectedPortal]);\n          this.portalControl.enable();\n        }\n\n        this.connectionTestStatus = ConnectionTestStatus.Passed;\n      });\n  }\n\n  validateUrl(): (control: AbstractControl) => ValidationErrors | null {\n    return (control: AbstractControl) => {\n      return control.value && !this.rxUrlUtilsService.isValidUrl(control.value, true)\n        ? { invalidUrl: { message: this.translateService.instant('com.bmc.arsys.rx.client.admin.invalid-url.label') } }\n        : null;\n    };\n  }\n}\n","<rx-admin-settings\n  header=\" {{ 'com.bmc.arsys.rx.client.admin.comaround-knowledge.header.title' | translate }}\"\n  [busy]=\"busy\">\n  <form [formGroup]=\"knowledgeConfigForm\">\n    <fieldset formGroupName=\"comaroundForm\">\n      <adapt-rx-textfield\n        rx-id=\"main-url\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.comaround-knowledge.main-url.label' | translate }}\"\n        class=\"d-block form-group\"\n        formControlName=\"mainUrl\">\n      </adapt-rx-textfield>\n\n      <adapt-rx-textfield\n        rx-id=\"frame-url\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.comaround-knowledge.frame-url.label' | translate }}\"\n        class=\"d-block form-group\"\n        formControlName=\"frameUrl\">\n      </adapt-rx-textfield>\n\n      <adapt-rx-textfield\n        rx-id=\"server-url\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.comaround-knowledge.api-endpoint-url.label' | translate }}\"\n        class=\"d-block form-group\"\n        formControlName=\"serverUrl\">\n      </adapt-rx-textfield>\n\n      <adapt-rx-textfield\n        rx-id=\"subscription-id\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.comaround-knowledge.subscription-id.label' | translate }}\"\n        formControlName=\"subscriptionId\"\n        class=\"d-block form-group\">\n      </adapt-rx-textfield>\n\n      <adapt-rx-textfield\n        rx-id=\"user-name\"\n        label=\"{{ 'com.bmc.arsys.rx.client.common.user-name.label' | translate }}\"\n        formControlName=\"userName\"\n        class=\"d-block form-group\">\n      </adapt-rx-textfield>\n\n      <adapt-rx-textfield\n        rx-id=\"password\"\n        label=\"{{ 'com.bmc.arsys.rx.client.common.password.label' | translate }}\"\n        formControlName=\"password\"\n        isPassword=\"true\"\n        class=\"d-block form-group\">\n      </adapt-rx-textfield>\n\n      <rx-connection-tester\n        buttonType=\"secondary\"\n        [status]=\"connectionTestStatus\"\n        (testConnection)=\"onTestConnection()\"\n        rx-id=\"test-button\"\n        class=\"d-block form-group\">\n      </rx-connection-tester>\n\n    </fieldset>\n\n    <hr />\n\n    <adapt-rx-select\n      rx-id=\"portal\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.comaround-knowledge.portal.label' | translate }}\"\n      formControlName=\"portal\"\n      [options]=\"availablePortals\"\n      [optionFormatter]=\"portalOptionFormatter\"\n      class=\"d-block form-group\"></adapt-rx-select>\n\n    <adapt-alert\n      *ngIf=\"portalControl.disabled\"\n      [config]=\"{type: 'inline', variant: 'info', icon: true}\">\n      {{ \"com.bmc.arsys.rx.client.admin.comaround-knowledge.portal-cannot-be-selected.message\" | translate }}\n    </adapt-alert>\n\n    <div class=\"d-flex justify-content-start mt-5\">\n      <button\n        adapt-button\n        class=\"mr-2\"\n        btn-type=\"primary\"\n        type=\"button\"\n        rx-id=\"save-button\"\n        [disabled]=\"isSaveButtonDisabled()\"\n        (click)=\"saveConfiguration()\">\n        {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n      </button>\n    </div>\n  </form>\n</rx-admin-settings>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComaroundKnowledgeAdminComponent } from './comaround-knowledge.component';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AdaptAccordionModule, AdaptAlertModule, AdaptButtonModule, AdaptRxSelectModule, AdaptRxTextfieldModule } from '@bmc-ux/adapt-angular';\nimport { RxConnectionTesterModule, RxDirectivesModule } from '@helix/platform/ui-kit';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [ComaroundKnowledgeAdminComponent],\n  imports: [\n    AdaptButtonModule,\n    AdaptRxTextfieldModule,\n    AdaptRxSelectModule,\n    AdaptAlertModule,\n    AdaptAccordionModule,\n    AdminSettingsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    RxConnectionTesterModule,\n    RxDirectivesModule,\n    TranslateModule\n  ],\n  entryComponents: [ComaroundKnowledgeAdminComponent]\n})\nexport class ComaroundKnowledgeRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-comaround-knowledge',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(ComaroundKnowledgeAdminComponent),\n      name: 'ComAround knowledge',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","export enum AliasType {\n  DataSource = 'dataSource',\n  WebRequest = 'webRequest',\n  Connector = 'connector'\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { RxRecordInstanceService, RxRecordInstanceUpdateService } from '@helix/platform/record/api';\nimport { IPlainObject, RxNotificationService } from '@helix/platform/shared/api';\nimport { get } from 'lodash';\nimport { RX_CONNECTION_MAPPING } from './connection-mapping.constant';\nimport { AliasType } from './connection-mapping.types';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-connection-mapping',\n  templateUrl: './connection-mapping.component.html'\n})\nexport class ConnectionMappingComponent implements OnInit {\n  @Input()\n  configurations: IPlainObject;\n\n  @Input()\n  aliasMapping: IPlainObject;\n\n  @Input()\n  aliasType: AliasType;\n\n  aliasNameId: number = RX_CONNECTION_MAPPING.aliasMapping.fields.aliasName;\n  connectionConfiguration: RxSelectOption;\n\n  constructor(\n    private rxNotificationService: RxNotificationService,\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private rxRecordInstanceUpdateService: RxRecordInstanceUpdateService,\n    private translateService: TranslateService\n  ) {\n    this.optionFormatter = this.optionFormatter.bind(this);\n  }\n\n  ngOnInit() {\n    if (this.aliasMapping[RX_CONNECTION_MAPPING.aliasMapping.fields.aliasValue]) {\n      const connectionConfiguration = this.configurations.find(\n        (config) =>\n          config[RX_CONNECTION_MAPPING.dataSource.fields.id] ===\n          this.aliasMapping[RX_CONNECTION_MAPPING.aliasMapping.fields.aliasValue]\n      );\n\n      this.connectionConfiguration = [connectionConfiguration];\n    }\n  }\n\n  optionFormatter(configurationOption: RxSelectOption): string {\n    const fieldName =\n      this.aliasType === AliasType.Connector\n        ? RX_CONNECTION_MAPPING.connector.fields.target_name\n        : RX_CONNECTION_MAPPING.dataSource.fields.name;\n\n    return get(configurationOption, fieldName, 'Select configuration');\n  }\n\n  onConnectionConfigurationChange(configuration): void {\n    this.rxRecordInstanceService\n      .get(\n        RX_CONNECTION_MAPPING.aliasMapping.recordDefinitionName,\n        this.aliasMapping[RX_CONNECTION_MAPPING.aliasMapping.fields.id]\n      )\n      .subscribe((recordInstance) => {\n        recordInstance.setFieldValue(\n          RX_CONNECTION_MAPPING.aliasMapping.fields.aliasValue,\n          configuration[0][RX_CONNECTION_MAPPING.dataSource.fields.id]\n        );\n\n        this.rxRecordInstanceUpdateService.execute(recordInstance).subscribe(() => {\n          this.rxNotificationService.addSuccessMessage(\n            this.translateService.instant('com.bmc.arsys.rx.client.admin.connection-mapping.mapping-saved.message')\n          );\n        });\n      });\n  }\n}\n","<div class=\"row\">\n  <adapt-rx-textfield\n    class=\"col-md-6 form-group\"\n    rx-id=\"connection-target\"\n    label=\"{{ 'com.bmc.arsys.rx.client.admin.connection-mapping.connection-target.label' | translate }}\"\n    disabled=\"true\"\n    [(ngModel)]=\"aliasMapping[this.aliasNameId]\"\n  ></adapt-rx-textfield>\n\n  <adapt-rx-select\n    class=\"d-block col-md-6 form-group\"\n    rx-id=\"connection-configuration\"\n    label=\"{{ 'com.bmc.arsys.rx.client.admin.connection-mapping.connection-configuration.label' | translate }}\"\n    [ngModel]=\"connectionConfiguration\"\n    [options]=\"configurations\"\n    [optionFormatter]=\"optionFormatter\"\n    (ngModelChange)=\"onConnectionConfigurationChange($event)\"\n  ></adapt-rx-select>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AdaptRxSelectModule, AdaptRxTextfieldModule } from '@bmc-ux/adapt-angular';\nimport { ConnectionMappingComponent } from './connection-mapping.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [CommonModule, AdaptRxSelectModule, FormsModule, AdaptRxTextfieldModule, TranslateModule],\n  declarations: [ConnectionMappingComponent],\n  exports: [ConnectionMappingComponent]\n})\nexport class RxConnectionMappingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { RxRecordInstanceDataPageService } from '@helix/platform/record/api';\nimport { IDataPageParams, IDataPageResult, IPlainObject } from '@helix/platform/shared/api';\nimport { get, uniqBy, values } from 'lodash';\nimport { forkJoin, Observable, Subscription } from 'rxjs';\nimport { RX_CONNECTION_MAPPING } from '../common/connection-mapping.constant';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-connector-mapping',\n  templateUrl: './connector-mapping.component.html'\n})\nexport class ConnectorMappingAdminComponent implements OnInit {\n  mappingSelectOptions: RxSelectOption[] = [];\n  selectedMapping: RxSelectOption;\n  mappingList: IPlainObject[];\n  configurationList: IPlainObject[];\n  busy: Subscription;\n  constructor(\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit() {\n    this.busy = this.getRecordInstanceDataPage({\n      recorddefinition: RX_CONNECTION_MAPPING.aliasMapping.recordDefinitionName,\n      queryExpression: `'${RX_CONNECTION_MAPPING.aliasMapping.fields.aliasType}'!=\"email\"`,\n      propertySelection: values(RX_CONNECTION_MAPPING.aliasMapping.fields).join()\n    }).subscribe((response) => {\n      this.mappingSelectOptions = uniqBy(response.data, RX_CONNECTION_MAPPING.aliasMapping.fields.applicationId);\n    });\n  }\n\n  optionFormatter(application: RxSelectOption): string {\n    return application[RX_CONNECTION_MAPPING.aliasMapping.fields.applicationName];\n  }\n\n  private getRecordInstanceDataPage(params: IDataPageParams): Observable<IDataPageResult> {\n    return this.rxRecordInstanceDataPageService.post({ params });\n  }\n\n  onApplicationChange(selectedApplication: RxSelectOption): void {\n    const applicationId = get(selectedApplication, `0.${RX_CONNECTION_MAPPING.aliasMapping.fields.applicationId}`);\n\n    if (applicationId) {\n      forkJoin({\n        configurationList: this.getRecordInstanceDataPage({\n          recorddefinition: RX_CONNECTION_MAPPING.connector.recordDefinitionName,\n          propertySelection: values(RX_CONNECTION_MAPPING.connector.fields).join()\n        }),\n        applicationMappingList: this.getRecordInstanceDataPage({\n          recorddefinition: RX_CONNECTION_MAPPING.aliasMapping.recordDefinitionName,\n          propertySelection: values(RX_CONNECTION_MAPPING.aliasMapping.fields).join(),\n          queryExpression:\n            `(('${RX_CONNECTION_MAPPING.aliasMapping.fields.applicationId}'=\"${applicationId}\" AND ` +\n            `'${RX_CONNECTION_MAPPING.aliasMapping.fields.aliasType}'=\"${RX_CONNECTION_MAPPING.aliasTypes.connector}\"))`\n        })\n      }).subscribe((result) => {\n        this.configurationList = result.configurationList.data;\n        this.mappingList = result.applicationMappingList.data;\n      });\n    }\n  }\n}\n","<rx-admin-settings\n  header=\"{{ 'com.bmc.arsys.rx.client.admin.connection-mapping.connector-mapping.header.title' | translate }}\"\n  [busy]=\"busy\"\n>\n  <div class=\"row\">\n    <adapt-rx-select\n      class=\"col-md-6 form-group\"\n      rx-id=\"application\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.connection-mapping.connector-mapping.application.label' | translate }}\"\n      [ngModel]=\"selectedMapping\"\n      [options]=\"mappingSelectOptions\"\n      [optionFormatter]=\"optionFormatter\"\n      (ngModelChange)=\"onApplicationChange($event)\"\n    ></adapt-rx-select>\n  </div>\n\n  <rx-connection-mapping\n    *ngFor=\"let mapping of mappingList\"\n    [configurations]=\"configurationList\"\n    [aliasMapping]=\"mapping\"\n    aliasType=\"connector\"\n  >\n  </rx-connection-mapping>\n</rx-admin-settings>\n","import { CommonModule } from '@angular/common';\nimport { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AdaptRxSelectModule, AdaptRxTextfieldModule } from '@bmc-ux/adapt-angular';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { RxConnectionMappingModule } from '../common/connection-mapping.module';\nimport { ConnectorMappingAdminComponent } from './connector-mapping.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [ConnectorMappingAdminComponent],\n  imports: [\n    AdminSettingsModule,\n    AdaptRxTextfieldModule,\n    AdaptRxSelectModule,\n    CommonModule,\n    FormsModule,\n    RxConnectionMappingModule,\n    TranslateModule\n  ],\n  entryComponents: [ConnectorMappingAdminComponent]\n})\nexport class ConnectorMappingRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-connector-mapping',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(ConnectorMappingAdminComponent),\n      name: 'Connector mapping',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { RxRecordInstanceDataPageService } from '@helix/platform/record/api';\nimport { IDataPageParams, IDataPageResult, IPlainObject } from '@helix/platform/shared/api';\nimport { get, uniqBy, values } from 'lodash';\nimport { forkJoin, Observable, Subscription } from 'rxjs';\nimport { RX_CONNECTION_MAPPING } from '../common/connection-mapping.constant';\n\n@Component({\n  selector: 'rx-admin-data-source-mapping',\n  templateUrl: './data-source-mapping.component.html'\n})\nexport class DataSourceMappingAdminComponent implements OnInit {\n  applicationSelectOptions: RxSelectOption[] = [];\n  selectedApplication: RxSelectOption;\n  applicationMappingList: IPlainObject[];\n  configurationList: IPlainObject[];\n  busy: Subscription;\n\n  constructor(private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService) {}\n\n  ngOnInit() {\n    this.busy = this.getRecordInstanceDataPage({\n      recorddefinition: RX_CONNECTION_MAPPING.aliasMapping.recordDefinitionName,\n      queryExpression: `'${RX_CONNECTION_MAPPING.aliasMapping.fields.aliasType}'!=\"email\"`,\n      propertySelection: values(RX_CONNECTION_MAPPING.aliasMapping.fields).join()\n    }).subscribe((response) => {\n      this.applicationSelectOptions = uniqBy(response.data, RX_CONNECTION_MAPPING.aliasMapping.fields.applicationId);\n    });\n  }\n\n  optionFormatter(application: RxSelectOption): string {\n    return application[RX_CONNECTION_MAPPING.aliasMapping.fields.applicationName];\n  }\n\n  private getRecordInstanceDataPage(params: IDataPageParams): Observable<IDataPageResult> {\n    return this.rxRecordInstanceDataPageService.post({ params });\n  }\n\n  onApplicationChange(selectedApplication: RxSelectOption): void {\n    const applicationId = get(selectedApplication, `0.${RX_CONNECTION_MAPPING.aliasMapping.fields.applicationId}`);\n\n    if (applicationId) {\n      forkJoin({\n        configurationList: this.getRecordInstanceDataPage({\n          recorddefinition: RX_CONNECTION_MAPPING.dataSource.recordDefinitionName,\n          propertySelection: values(RX_CONNECTION_MAPPING.dataSource.fields).join()\n        }),\n        applicationMappingList: this.getRecordInstanceDataPage({\n          recorddefinition: RX_CONNECTION_MAPPING.aliasMapping.recordDefinitionName,\n          propertySelection: values(RX_CONNECTION_MAPPING.aliasMapping.fields).join(),\n          queryExpression:\n            `(('${RX_CONNECTION_MAPPING.aliasMapping.fields.applicationId}'=\"${applicationId}\" AND ` +\n            `'${RX_CONNECTION_MAPPING.aliasMapping.fields.aliasType}'=\"${RX_CONNECTION_MAPPING.aliasTypes.dataSource}\"))`\n        })\n      }).subscribe((result) => {\n        this.configurationList = result.configurationList.data;\n        this.applicationMappingList = result.applicationMappingList.data;\n      });\n    }\n  }\n}\n","<rx-admin-settings header=\"Data source mapping\" [busy]=\"busy\">\n  <div class=\"row\">\n    <adapt-rx-select\n      class=\"col-md-6 form-group\"\n      rx-id=\"data-source-application\"\n      label=\"Application\"\n      [ngModel]=\"selectedApplication\"\n      [options]=\"applicationSelectOptions\"\n      [optionFormatter]=\"optionFormatter\"\n      (ngModelChange)=\"onApplicationChange($event)\"\n    ></adapt-rx-select>\n  </div>\n\n  <rx-connection-mapping\n    *ngFor=\"let applicationMapping of applicationMappingList\"\n    [configurations]=\"configurationList\"\n    [aliasMapping]=\"applicationMapping\"\n    aliasType=\"dataSource\"\n  >\n  </rx-connection-mapping>\n</rx-admin-settings>\n","import { CommonModule } from '@angular/common';\nimport { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AdaptRxSelectModule, AdaptRxTextfieldModule } from '@bmc-ux/adapt-angular';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { RxConnectionMappingModule } from '../common/connection-mapping.module';\nimport { DataSourceMappingAdminComponent } from './data-source-mapping.component';\n\n@NgModule({\n  declarations: [DataSourceMappingAdminComponent],\n  imports: [\n    CommonModule,\n    AdminSettingsModule,\n    AdaptRxSelectModule,\n    FormsModule,\n    AdaptRxTextfieldModule,\n    RxConnectionMappingModule\n  ],\n  entryComponents: [DataSourceMappingAdminComponent]\n})\nexport class DataSourceMappingModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-data-source-mapping',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(DataSourceMappingAdminComponent),\n      name: 'Data source mapping',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { RxRecordInstanceDataPageService } from '@helix/platform/record/api';\nimport { IDataPageParams, IDataPageResult, IPlainObject, RxGlobalCacheService } from '@helix/platform/shared/api';\nimport { find, get, uniqBy, values } from 'lodash';\nimport { forkJoin, Observable, Subscription } from 'rxjs';\nimport { RX_CONNECTION_MAPPING } from '../common/connection-mapping.constant';\n\n@Component({\n  selector: 'rx-web-api-mapping',\n  templateUrl: './web-api-mapping.component.html'\n})\nexport class WebApiMappingAdminComponent implements OnInit {\n  mappingSelectOptions: RxSelectOption[] = [];\n  selectedMapping: RxSelectOption;\n  mappingList: IPlainObject[];\n  configurationList: IPlainObject[];\n  busy: Subscription;\n\n  constructor(\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService\n  ) {}\n\n  ngOnInit() {\n    this.busy = forkJoin([\n      this.getRecordInstanceDataPage({\n        recorddefinition: RX_CONNECTION_MAPPING.aliasMapping.recordDefinitionName,\n        queryExpression: `'${RX_CONNECTION_MAPPING.aliasMapping.fields.aliasType}'!=\"email\"`,\n        propertySelection: values(RX_CONNECTION_MAPPING.aliasMapping.fields).join()\n      }),\n      this.rxGlobalCacheService.getBundleDescriptors()\n    ]).subscribe(([dataPage, bundleDescriptors]) => {\n      this.mappingSelectOptions = uniqBy(dataPage.data, RX_CONNECTION_MAPPING.aliasMapping.fields.applicationId)\n        .map((mapping: { [fieldId: number]: string }) => ({\n          ...mapping,\n          friendlyName: find(bundleDescriptors, {\n            id: mapping[RX_CONNECTION_MAPPING.aliasMapping.fields.applicationId]\n          }).friendlyName\n        }))\n        .sort((a, b) => a.friendlyName.localeCompare(b.friendlyName));\n    });\n  }\n\n  optionFormatter(application: RxSelectOption): string {\n    return application.friendlyName;\n  }\n\n  private getRecordInstanceDataPage(params: IDataPageParams): Observable<IDataPageResult> {\n    return this.rxRecordInstanceDataPageService.post({ params });\n  }\n\n  onApplicationChange(selectedApplication: RxSelectOption): void {\n    const applicationId = get(selectedApplication, `0.${RX_CONNECTION_MAPPING.aliasMapping.fields.applicationId}`);\n\n    if (applicationId) {\n      forkJoin({\n        configurationList: this.getRecordInstanceDataPage({\n          recorddefinition: RX_CONNECTION_MAPPING.webRequest.recordDefinitionName,\n          propertySelection: values(RX_CONNECTION_MAPPING.webRequest.fields).join()\n        }),\n        applicationMappingList: this.getRecordInstanceDataPage({\n          recorddefinition: RX_CONNECTION_MAPPING.aliasMapping.recordDefinitionName,\n          propertySelection: values(RX_CONNECTION_MAPPING.aliasMapping.fields).join(),\n          queryExpression:\n            `(('${RX_CONNECTION_MAPPING.aliasMapping.fields.applicationId}'=\"${applicationId}\" AND ` +\n            `'${RX_CONNECTION_MAPPING.aliasMapping.fields.aliasType}'=\"${RX_CONNECTION_MAPPING.aliasTypes.webRequest}\"))`\n        })\n      }).subscribe((result) => {\n        this.configurationList = result.configurationList.data;\n        this.mappingList = result.applicationMappingList.data;\n      });\n    }\n  }\n}\n","<rx-admin-settings\n  header=\"{{ 'com.bmc.arsys.rx.client.admin.web-api-mapping.header.title' | translate }}\"\n  [busy]=\"busy\"\n>\n  <div class=\"row\">\n    <adapt-rx-select\n      class=\"col-md-6 form-group\"\n      rx-id=\"application\"\n      label=\"{{ 'com.bmc.arsys.rx.client.common.application.label' | translate }}\"\n      [ngModel]=\"selectedMapping\"\n      [options]=\"mappingSelectOptions\"\n      [optionFormatter]=\"optionFormatter\"\n      (ngModelChange)=\"onApplicationChange($event)\"\n    ></adapt-rx-select>\n  </div>\n\n  <rx-connection-mapping\n    *ngFor=\"let mapping of mappingList\"\n    [configurations]=\"configurationList\"\n    [aliasMapping]=\"mapping\"\n    aliasType=\"webRequest\"\n  >\n  </rx-connection-mapping>\n</rx-admin-settings>\n","import { CommonModule } from '@angular/common';\nimport { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AdaptRxSelectModule, AdaptRxTextfieldModule } from '@bmc-ux/adapt-angular';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { RxConnectionMappingModule } from '../common/connection-mapping.module';\nimport { WebApiMappingAdminComponent } from './web-api-mapping.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [WebApiMappingAdminComponent],\n  imports: [\n    AdminSettingsModule,\n    AdaptRxTextfieldModule,\n    AdaptRxSelectModule,\n    CommonModule,\n    FormsModule,\n    RxConnectionMappingModule,\n    TranslateModule\n  ],\n  entryComponents: [WebApiMappingAdminComponent]\n})\nexport class WebApiMappingRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-web-api-mapping',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(WebApiMappingAdminComponent),\n      name: 'Web API mapping',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","export const RX_CONNECTOR_CONFIGURATION = {\n  dataPageType: 'com.bmc.arsys.rx.application.record.datapage.RecordInstanceDataPageQuery',\n  recordDefinitionName: 'Connector Configurations',\n  connectorType: 'connector',\n\n  fields: {\n    targetName: 56110,\n    connectorId: 56111,\n    connectorName: 56112,\n    connectorConfigId: 56113,\n    connectorConfigName: 56114,\n    connectorProfileId: 56115,\n    connectorProfileName: 56116\n  }\n};\n","import { Injectable, Injector } from '@angular/core';\nimport { DataPage } from '@helix/platform/shared/api';\n\nconst connectorsDataPageQuery = 'com.bmc.arsys.rx.application.integration.ConnectorDataPageQuery';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxConnectorsDataPageService extends DataPage {\n  constructor(private injector: Injector) {\n    super(injector, connectorsDataPageQuery);\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { DataPage } from '@helix/platform/shared/api';\n\nconst connectorConfigurationDataPageQuery = 'com.bmc.arsys.rx.application.integration.ConnectorConfigDataPageQuery';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxConnectorConfigurationDataPageService extends DataPage {\n  constructor(private injector: Injector) {\n    super(injector, connectorConfigurationDataPageQuery);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { IDataPageResult } from '@helix/platform/shared/api';\nimport { find } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { RxConnectorConfigurationDataPageService } from './connector-configuration-data-page.service';\nimport { IConnector, IConnectorConfiguration, IConnectorProfile } from './connector-configuration.interface';\nimport { RxConnectorsDataPageService } from './connectors-data-page.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxConnectorConfigurationService {\n  private readonly connectorConfigs: {\n    [connectorId: string]: Observable<IConnectorConfiguration[]>;\n  };\n\n  private readonly connectorProfiles: {\n    [configId: string]: Observable<IConnectorProfile[]>;\n  };\n\n  constructor(\n    private httpClient: HttpClient,\n    private rxConnectorsDataPageService: RxConnectorsDataPageService,\n    private rxConnectorConfigurationDataPageService: RxConnectorConfigurationDataPageService\n  ) {\n    this.connectorConfigs = {};\n    this.connectorProfiles = {};\n  }\n\n  getConnectors(): Observable<IConnector[]> {\n    return this.rxConnectorsDataPageService.get().pipe(\n      map((response: IDataPageResult) => {\n        return response.data.map((connector: IConnector) => ({\n          id: connector.id,\n          name: connector.name\n        }));\n      })\n    );\n  }\n\n  getConnectorConfigurations(connectorId): Observable<IConnectorConfiguration[]> {\n    if (!this.connectorConfigs[connectorId]) {\n      this.connectorConfigs[connectorId] = this.rxConnectorConfigurationDataPageService\n        .get({\n          params: {\n            connectorId: connectorId\n          }\n        })\n        .pipe(\n          map((response: IDataPageResult) => {\n            return response.data.map((connectorConfig: IConnectorConfiguration) => ({\n              id: connectorConfig.id,\n              name: connectorConfig.name,\n              profiles: connectorConfig.profiles\n            }));\n          }),\n          shareReplay(1)\n        );\n    }\n\n    return this.connectorConfigs[connectorId];\n  }\n\n  getConnectorProfiles(connectorId, configId): Observable<IConnectorProfile[]> {\n    if (!this.connectorProfiles[configId]) {\n      this.connectorProfiles[configId] = this.getConnectorConfigurations(connectorId).pipe(\n        map((configs: IConnectorConfiguration[]) => {\n          const config = find(configs, { id: configId });\n\n          return config.profiles;\n        })\n      );\n    }\n\n    return this.connectorProfiles[configId];\n  }\n}\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DismissReasons, DockedPanelContext, RxSelectionChangeEvent } from '@bmc-ux/adapt-angular';\nimport { RecordInstance, RX_RECORD_DEFINITION, RxRecordInstanceService } from '@helix/platform/record/api';\nimport { RxNotificationService } from '@helix/platform/shared/api';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { isUndefined } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { RX_CONNECTOR_CONFIGURATION } from '../connector-configuration.constant';\nimport { IConnector, IConnectorConfiguration, IConnectorProfile } from '../connector-configuration.interface';\nimport { RxConnectorConfigurationService } from '../connector-configuration.service';\n\n@Component({\n  selector: 'rx-connector-configuration-editor',\n  templateUrl: './connector-configuration-editor.component.html'\n})\nexport class ConnectorConfigurationEditorComponent extends RxModalClass implements OnInit {\n  connectorConfigurationForm: FormGroup;\n  loadingConfigs: boolean;\n  loadingProfiles: boolean;\n  loadingConnectors: boolean;\n\n  connectorProfiles: IConnectorProfile[] = [];\n  connectorList: IConnector[] = [];\n  connectorConfigurations: IConnectorConfiguration[] = [];\n\n  currentRecordInstance: Observable<RecordInstance>;\n  isNewConfiguration: boolean;\n\n  constructor(\n    private dockedPanelContext: DockedPanelContext,\n    private formBuilder: FormBuilder,\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private rxNotificationService: RxNotificationService,\n    private rxConnectorConfigurationService: RxConnectorConfigurationService,\n    protected injector: Injector\n  ) {\n    super(dockedPanelContext, injector);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.isNewConfiguration = this.dockedPanelContext.getData().isNewConfiguration;\n    this.connectorList = this.dockedPanelContext.getData().connectorList;\n\n    this.connectorConfigurationForm = this.formBuilder.group({\n      configurationName: '',\n      connector: [\n        {\n          id: '',\n          name: ''\n        }\n      ],\n      connectorConfiguration: [\n        {\n          id: '',\n          name: ''\n        }\n      ],\n      connectorProfile: [\n        {\n          id: '',\n          name: ''\n        }\n      ]\n    });\n\n    if (!this.isNewConfiguration) {\n      this.currentRecordInstance = this.rxRecordInstanceService.get(\n        RX_CONNECTOR_CONFIGURATION.recordDefinitionName,\n        this.dockedPanelContext.getData().recordId\n      );\n\n      this.currentRecordInstance.subscribe((recordInstance) => {\n        this.connectorConfigurationForm\n          .get('configurationName')\n          .setValue(recordInstance.fieldInstances[RX_CONNECTOR_CONFIGURATION.fields.targetName].value);\n\n        this.connectorConfigurationForm.get('connector').setValue([\n          {\n            id: recordInstance.fieldInstances[RX_CONNECTOR_CONFIGURATION.fields.connectorId].value,\n            name: recordInstance.fieldInstances[RX_CONNECTOR_CONFIGURATION.fields.connectorName].value\n          }\n        ]);\n\n        this.connectorConfigurationForm.get('connectorConfiguration').setValue([\n          {\n            id: recordInstance.fieldInstances[RX_CONNECTOR_CONFIGURATION.fields.connectorConfigId].value,\n            name: recordInstance.fieldInstances[RX_CONNECTOR_CONFIGURATION.fields.connectorConfigName].value\n          }\n        ]);\n\n        this.connectorConfigurationForm.get('connectorProfile').setValue(\n          recordInstance.fieldInstances[RX_CONNECTOR_CONFIGURATION.fields.connectorProfileId].value\n            ? [\n                {\n                  id: recordInstance.fieldInstances[RX_CONNECTOR_CONFIGURATION.fields.connectorProfileId].value,\n                  name: recordInstance.fieldInstances[RX_CONNECTOR_CONFIGURATION.fields.connectorProfileName].value\n                }\n              ]\n            : []\n        );\n\n        this.loadConnectorConfigurations(\n          recordInstance.fieldInstances[RX_CONNECTOR_CONFIGURATION.fields.connectorId].value\n        );\n\n        this.loadConnectorProfiles(\n          recordInstance.fieldInstances[RX_CONNECTOR_CONFIGURATION.fields.connectorConfigId].value\n        );\n      });\n    }\n  }\n\n  isDirty(): boolean {\n    return this.connectorConfigurationForm.dirty;\n  }\n\n  loadConnectorConfigurations(event: RxSelectionChangeEvent): void {\n    if (this.isSelectionChangeEvent(event)) {\n      this.resetFields();\n    }\n\n    this.loadingConfigs = true;\n    const selectedConnectorId = this.isSelectionChangeEvent(event) ? event.options[0].id : event;\n\n    this.rxConnectorConfigurationService\n      .getConnectorConfigurations(selectedConnectorId)\n      .subscribe((configurations: IConnectorConfiguration[]) => {\n        this.connectorConfigurations = configurations;\n        this.loadingConfigs = false;\n      });\n  }\n\n  loadConnectorProfiles(event: RxSelectionChangeEvent): void {\n    if (this.isSelectionChangeEvent(event)) {\n      this.connectorConfigurationForm.get('connectorProfile').setValue([]);\n    }\n\n    this.loadingProfiles = true;\n\n    const selectedConfigId = this.isSelectionChangeEvent(event) ? event.options[0].id : event;\n    const selectedConnectorId = this.connectorConfigurationForm.get('connector').value[0].id;\n\n    this.rxConnectorConfigurationService\n      .getConnectorProfiles(selectedConnectorId, selectedConfigId)\n      .subscribe((profiles: IConnectorProfile[]) => {\n        this.connectorProfiles = profiles;\n        this.loadingProfiles = false;\n      });\n  }\n\n  saveConnectorConfiguration(): void {\n    if (this.isNewConfiguration) {\n      this.currentRecordInstance = this.rxRecordInstanceService.getNew(RX_CONNECTOR_CONFIGURATION.recordDefinitionName);\n    }\n\n    this.currentRecordInstance\n      .pipe(\n        map((recordInstance) => {\n          recordInstance.fieldInstances[RX_CONNECTOR_CONFIGURATION.fields.connectorId].value =\n            this.connectorConfigurationForm.value.connector[0].id;\n\n          recordInstance.fieldInstances[RX_CONNECTOR_CONFIGURATION.fields.connectorName].value =\n            this.connectorConfigurationForm.value.connector[0].name;\n\n          recordInstance.fieldInstances[RX_CONNECTOR_CONFIGURATION.fields.connectorConfigId].value =\n            this.connectorConfigurationForm.value.connectorConfiguration[0].id;\n\n          recordInstance.fieldInstances[RX_CONNECTOR_CONFIGURATION.fields.connectorConfigName].value =\n            this.connectorConfigurationForm.value.connectorConfiguration[0].name;\n\n          if (this.connectorConfigurationForm.value.connectorProfile.length) {\n            recordInstance.fieldInstances[RX_CONNECTOR_CONFIGURATION.fields.connectorProfileId].value =\n              this.connectorConfigurationForm.value.connectorProfile[0].id;\n\n            recordInstance.fieldInstances[RX_CONNECTOR_CONFIGURATION.fields.connectorProfileName].value =\n              this.connectorConfigurationForm.value.connectorProfile[0].name;\n          } else {\n            recordInstance.fieldInstances[RX_CONNECTOR_CONFIGURATION.fields.connectorProfileId].value = null;\n            recordInstance.fieldInstances[RX_CONNECTOR_CONFIGURATION.fields.connectorProfileName].value = null;\n          }\n\n          recordInstance.fieldInstances[RX_RECORD_DEFINITION.coreFieldIds.description].value =\n            this.connectorConfigurationForm.value.configurationName;\n\n          recordInstance.fieldInstances[RX_CONNECTOR_CONFIGURATION.fields.targetName].value =\n            this.connectorConfigurationForm.value.configurationName;\n\n          return recordInstance;\n        }),\n        switchMap((recordInstance) => {\n          if (this.isNewConfiguration) {\n            return this.rxRecordInstanceService.create(recordInstance);\n          } else {\n            return this.rxRecordInstanceService.save(recordInstance);\n          }\n        })\n      )\n      .subscribe(() => {\n        this.rxNotificationService.addSuccessMessage('Configuration saved successfully.');\n        this.dockedPanelContext.close(null);\n      });\n  }\n\n  optionFormatter(option: IConnector): string {\n    return option.name;\n  }\n\n  cancel(): void {\n    this.dockedPanelContext.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  private isSelectionChangeEvent(event: RxSelectionChangeEvent | string): event is RxSelectionChangeEvent {\n    return !isUndefined((event as RxSelectionChangeEvent).options);\n  }\n\n  private resetFields(): void {\n    this.connectorProfiles = [];\n    this.connectorConfigurations = [];\n    this.connectorConfigurationForm.get('connectorConfiguration').setValue([]);\n    this.connectorConfigurationForm.get('connectorProfile').setValue([]);\n    this.connectorConfigurationForm.markAsPristine();\n  }\n}\n","<div class=\"dp-body\">\n  <form [formGroup]=\"connectorConfigurationForm\">\n    <adapt-rx-textfield\n      class=\"form-group d-block\"\n      rx-id=\"configuration-name\"\n      label=\"{{ 'com.bmc.arsys.rx.client.common.name.label' | translate }}\"\n      formControlName=\"configurationName\"\n      required=\"true\"\n      [readonly]=\"!isNewConfiguration\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-select\n      class=\"form-group d-block\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.connector-configuration.connector-type.label' | translate }}\"\n      rx-id=\"connector\"\n      formControlName=\"connector\"\n      [options]=\"connectorList\"\n      enableFilter=\"true\"\n      [optionFormatter]=\"optionFormatter\"\n      (onSelectionChange)=\"loadConnectorConfigurations($event)\"\n      [loadingState]=\"loadingConnectors\"\n      required=\"true\"\n    >\n    </adapt-rx-select>\n\n    <adapt-rx-select\n      class=\"form-group d-block\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.connector-configuration.configuration.label' | translate }}\"\n      rx-id=\"connector-configuration\"\n      formControlName=\"connectorConfiguration\"\n      [options]=\"connectorConfigurations\"\n      [optionFormatter]=\"optionFormatter\"\n      enableFilter=\"true\"\n      (onSelectionChange)=\"loadConnectorProfiles($event)\"\n      [loadingState]=\"loadingConfigs\"\n      required=\"true\"\n    >\n    </adapt-rx-select>\n\n    <adapt-rx-select\n      class=\"form-group d-block\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.connector-configuration.profile.label' | translate }}\"\n      rx-id=\"connector-profile\"\n      formControlName=\"connectorProfile\"\n      [options]=\"connectorProfiles\"\n      [optionFormatter]=\"optionFormatter\"\n      [loadingState]=\"loadingProfiles\"\n    >\n    </adapt-rx-select>\n  </form>\n</div>\n\n<div class=\"dp-footer\">\n  <button\n    type=\"button\"\n    adapt-button\n    size=\"small\"\n    btn-type=\"primary\"\n    rx-id=\"save-button\"\n    class=\"mr-2\"\n    [disabled]=\"connectorConfigurationForm.pristine || connectorConfigurationForm.invalid\"\n    (click)=\"saveConnectorConfiguration()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button type=\"button\" size=\"small\" adapt-button (click)=\"cancel()\" btn-type=\"secondary\" rx-id=\"cancel-button\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { IRecordDefinition, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxModalService } from '@helix/platform/ui-kit';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport {\n  IRecordGridColumn,\n  IRecordGridConfig,\n  RecordGridComponent,\n  RowSelectionMode\n} from '@helix/platform/view/components';\nimport { get, noop } from 'lodash';\nimport { Observable, of, Subscription } from 'rxjs';\nimport { ConnectorConfigurationEditorComponent } from './connector-configuration-editor/connector-configuration-editor.component';\nimport { RX_CONNECTOR_CONFIGURATION } from './connector-configuration.constant';\nimport { IConnector } from './connector-configuration.interface';\nimport { RxConnectorConfigurationService } from './connector-configuration.service';\n\n@Component({\n  selector: 'rx-admin-connector-configuration',\n  templateUrl: './connector-configuration.component.html'\n})\nexport class ConnectorConfigurationAdminComponent implements OnInit {\n  errorText: string;\n  gridConfig: Observable<IRecordGridConfig>;\n  connectorList: IConnector[] = [];\n  busySubscription: Subscription;\n\n  @ViewChild('grid')\n  grid: RecordGridComponent;\n\n  @ViewChild('connectorConfigurationTemplate', { static: true })\n  connectorConfigurationTemplate: TemplateRef<any>;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private rxModalService: RxModalService,\n    private rxConnectorConfigurationService: RxConnectorConfigurationService\n  ) {}\n\n  ngOnInit() {\n    this.busySubscription = this.rxConnectorConfigurationService.getConnectors().subscribe(\n      (connectors: IConnector[]) => {\n        this.connectorList = connectors;\n      },\n      (response: HttpErrorResponse) => {\n        this.errorText = get(response, 'error[0].appendedText', 'Unknown error.');\n      }\n    );\n\n    this.gridConfig = of({\n      actionButtons: [\n        {\n          label: 'Edit',\n          style: 'tertiary',\n          icon: 'pencil',\n          actions: [\n            {\n              name: () => {\n                this.openConnectionConfiguration(this.grid.api.getFirstSelectedRow());\n              }\n            }\n          ]\n        }\n      ],\n      recordDefinitionName: RX_CONNECTOR_CONFIGURATION.recordDefinitionName,\n      enableRowSelection: RowSelectionMode.Single,\n      getRecordDefinition: () => of(this.getRecordDefinition()),\n      columns: this.getColumns(),\n      styles: 'flex-fill'\n    });\n  }\n\n  newConnectionConfiguration(): void {\n    this.openConnectorConfigurationEditor(true);\n  }\n\n  private openConnectionConfiguration(selectedRecord): void {\n    this.openConnectorConfigurationEditor(false, selectedRecord[RX_RECORD_DEFINITION.coreFieldIds.id]);\n  }\n\n  private getRecordDefinition(): IRecordDefinition {\n    return {\n      fieldDefinitions: [\n        {\n          id: RX_RECORD_DEFINITION.coreFieldIds.id,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_CONNECTOR_CONFIGURATION.fields.targetName,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_CONNECTOR_CONFIGURATION.fields.connectorName,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_CONNECTOR_CONFIGURATION.fields.connectorConfigName,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_CONNECTOR_CONFIGURATION.fields.connectorProfileName,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        }\n      ]\n    };\n  }\n\n  private getColumns(): IRecordGridColumn[] {\n    return [\n      {\n        index: 0,\n        title: 'Name',\n        fieldId: String(RX_CONNECTOR_CONFIGURATION.fields.targetName),\n        clickable: true,\n        actions: [\n          {\n            name: (previousAction: any, selectedRow: IRowDataItem) => this.openConnectionConfiguration(selectedRow)\n          }\n        ]\n      },\n      {\n        index: 1,\n        title: 'Connector type',\n        fieldId: String(RX_CONNECTOR_CONFIGURATION.fields.connectorName)\n      },\n      {\n        index: 2,\n        title: 'Configuration',\n        fieldId: String(RX_CONNECTOR_CONFIGURATION.fields.connectorConfigName)\n      },\n      {\n        index: 3,\n        title: 'Profile',\n        fieldId: String(RX_CONNECTOR_CONFIGURATION.fields.connectorProfileName)\n      },\n      {\n        index: 4,\n        title: 'ID',\n        fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.id),\n        visible: false\n      }\n    ];\n  }\n\n  private openConnectorConfigurationEditor(isNewConfiguration: boolean, recordId?: string): Promise<any> {\n    return this.rxModalService\n      .openDockedPanel({\n        title: 'Connector configuration',\n        content: ConnectorConfigurationEditorComponent,\n        data: {\n          connectorList: this.connectorList,\n          isNewConfiguration,\n          recordId\n        }\n      })\n      .then(() => {\n        this.grid.api.refresh().subscribe();\n      })\n      .catch(noop);\n  }\n}\n","<rx-admin-settings\n  header=\"{{ 'com.bmc.arsys.rx.client.admin.connector-configuration.header.title' | translate }}\"\n  [busy]=\"busySubscription\"\n>\n  <adapt-alert\n    [config]=\"{\n      title:\n        'com.bmc.arsys.rx.client.admin.connection-configuration.invalid-integration-service-configuration.message'\n        | translate,\n      content: errorText,\n      variant: 'danger',\n      dismissible: false\n    }\"\n    *ngIf=\"errorText\"\n  >\n  </adapt-alert>\n\n  <ng-container *ngIf=\"!errorText\">\n    <button\n      adapt-button\n      type=\"button\"\n      btn-type=\"tertiary\"\n      class=\"d-icon-plus_circle align-self-start\"\n      rx-id=\"new-button\"\n      (click)=\"newConnectionConfiguration()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.new.label' | translate }}\n    </button>\n\n    <rx-record-grid #grid [config]=\"gridConfig\"></rx-record-grid>\n  </ng-container>\n</rx-admin-settings>\n","import { CommonModule } from '@angular/common';\nimport { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  AdaptAlertModule,\n  AdaptButtonModule,\n  AdaptRxSelectModule,\n  AdaptRxTextfieldModule\n} from '@bmc-ux/adapt-angular';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { ConnectorConfigurationEditorComponent } from './connector-configuration-editor/connector-configuration-editor.component';\nimport { ConnectorConfigurationAdminComponent } from './connector-configuration.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [ConnectorConfigurationAdminComponent, ConnectorConfigurationEditorComponent],\n  imports: [\n    CommonModule,\n    AdaptButtonModule,\n    AdminSettingsModule,\n    RecordGridModule,\n    AdaptRxTextfieldModule,\n    ReactiveFormsModule,\n    AdaptRxSelectModule,\n    AdaptAlertModule,\n    TranslateModule\n  ],\n  entryComponents: [ConnectorConfigurationAdminComponent]\n})\nexport class ConnectorConfigurationRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-connector-configuration',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(ConnectorConfigurationAdminComponent),\n      name: 'Connector configuration',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { Component, ElementRef, Input, Renderer2, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AdaptDropdownDirective } from '@bmc-ux/adapt-angular';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ICustomDataSourceProviderPickerComponentOptions } from './custom-data-source-provider-picker-component.types';\n\n@Component({\n  selector: 'rx-custom-data-source-provider-picker',\n  templateUrl: './custom-data-source-provider-picker.component.html',\n  styleUrls: ['./custom-data-source-provider-picker.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RxCustomDataSourceProviderPickerComponent,\n      multi: true\n    }\n  ]\n})\nexport class RxCustomDataSourceProviderPickerComponent extends ValueAccessor<string> {\n  @Input()\n  options: ICustomDataSourceProviderPickerComponentOptions;\n\n  @ViewChild('dropdownButton', { static: true })\n  dropdownButton: ElementRef;\n\n  @ViewChild('providerPicker', { static: true })\n  dropdown: AdaptDropdownDirective;\n\n  defaultText = this.translateService.instant('com.bmc.arsys.rx.client.common.select.label');\n  dropdownWidth: number;\n\n  constructor(private translateService: TranslateService, private renderer: Renderer2) {\n    super();\n  }\n\n  setDropdownWidth(): void {\n    const dropdownButton = this.renderer.selectRootElement(this.dropdownButton.nativeElement, true);\n\n    this.dropdownWidth = dropdownButton.clientWidth + 2;\n  }\n\n  selectProvider(providerName: string): void {\n    this.dropdown.close();\n    this.value = providerName;\n  }\n}\n","<div class=\"d-flex\">\n  <adapt-rx-control-label\n    *ngIf=\"options.label\"\n    [label]=\"options.label | translate\"\n    [showRequiredLabel]=\"options.required\"\n  ></adapt-rx-control-label>\n</div>\n\n<div class=\"dropdown\" adaptDropdown [autoClose]=\"'outside'\" [autoFocusFirst]=\"false\" #providerPicker=\"adaptDropdown\">\n  <button\n    rx-id=\"toggle-button\"\n    #dropdownButton\n    class=\"btn btn-secondary\"\n    (click)=\"setDropdownWidth()\"\n    adaptDropdownToggle\n    type=\"button\"\n  >\n    <span class=\"rx-selected-item rx-ellipsis\">\n      {{ (value | rxDefinitionNamePipe) || defaultText }}\n    </span>\n  </button>\n\n  <div class=\"dropdown-menu p-0\" [style.width.px]=\"dropdownWidth\" adaptDropdownMenu>\n    <ul class=\"providers\" *ngIf=\"options.providersTree.length\">\n      <li\n        class=\"provider rx-ellipsis\"\n        *ngFor=\"let providersTreeNode of options.providersTree\"\n        (click)=\"providersTreeNode.isExpanded = !providersTreeNode.isExpanded\"\n      >\n        <span\n          rx-id=\"expand-button\"\n          class=\"expand-arrow d-icon-angle_right\"\n          [class.open]=\"providersTreeNode.isExpanded\"\n        ></span>\n        <span> {{ providersTreeNode.label }} </span>\n\n        <div *ngIf=\"providersTreeNode.isExpanded\">\n          <button\n            class=\"dropdown-item rx-ellipsis\"\n            type=\"button\"\n            *ngFor=\"let provider of providersTreeNode.providers\"\n            (click)=\"$event.stopPropagation(); selectProvider(provider)\"\n            [class.active]=\"value === provider\"\n          >\n            <span>{{ provider | rxDefinitionNamePipe }}</span>\n          </button>\n        </div>\n      </li>\n    </ul>\n  </div>\n</div>\n","import { head } from 'lodash';\n\nconst resourceTypes = {\n  arSystem: {\n    value: 'com.bmc.arsys.rx.services.datasource.domain.ARSystemDataSource',\n    name: 'com.bmc.arsys.rx.client.admin.data-source-connections.ar-system.label'\n  },\n  custom: {\n    value: 'com.bmc.arsys.rx.services.datasource.domain.CustomDataSource',\n    name: 'com.bmc.arsys.rx.client.admin.data-source-connections.custom.label'\n  },\n  webApi: {\n    value: 'com.bmc.arsys.rx.services.datasource.domain.WebApiDataSource',\n    name: 'com.bmc.arsys.rx.client.admin.data-source-connections.web-api.label'\n  }\n};\n\nconst authTypes = [\n  {\n    name: 'com.bmc.arsys.rx.client.admin.data-source-connections.rsso.label',\n    value: 'rsso'\n  },\n  {\n    name: 'com.bmc.arsys.rx.client.admin.data-source-connections.ras.label',\n    value: 'ras'\n  }\n];\n\nexport const RX_DATA_SOURCE_CONNECTIONS = {\n  recordDefinitionName: 'Data Source',\n  dataPageQueryType: 'com.bmc.arsys.rx.application.datasource.datapage.DataSourceDataPageQuery',\n  dataSourceConnectionUrl: '/api/rx/application/datasource/configuration',\n  resourceTypes,\n  authTypes,\n  portMinValue: 0,\n  portMaxValue: 65535,\n  hostNameMaxLength: 254,\n  pingConfigurationCommand: 'com.bmc.arsys.rx.application.datasource.command.ValidateDataSourceCommand',\n  initialWizardContext: {\n    dataSourceName: '',\n    resourceType: resourceTypes.arSystem,\n    hostName: '',\n    portNumber: null,\n    authType: head(authTypes).name,\n    rasPassword: '',\n    enforceAuthorization: false,\n    webApiDataSourceGuid: '',\n    isEditMode: false,\n    isGeneralFormPristine: true\n  }\n};\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { get, head } from 'lodash';\nimport { ReplaySubject } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { withLatestFrom, take, tap, takeUntil } from 'rxjs/operators';\n\nimport { RxWizardModalComponent } from '@helix/platform/shared/components';\nimport { RX_DATA_SOURCE_CONNECTIONS } from './data-source-connections.constant';\n\n@Component({\n  selector: 'rx-data-source-connection-general',\n  templateUrl: './data-source-connection-general.component.html',\n  styleUrls: ['./data-source-connection-general.component.scss']\n})\nexport class DataSourceConnectionGeneralComponent implements OnInit, OnDestroy {\n  generalForm: FormGroup;\n\n  dataSourceConfigTypes: RxSelectOption[] = Object.values(RX_DATA_SOURCE_CONNECTIONS.resourceTypes).map(\n    (resourceType) => ({\n      ...resourceType,\n      name: this.translateService.instant(resourceType.name)\n    })\n  );\n\n  private defaultSelection = this.translateService.instant('com.bmc.arsys.rx.client.common.select.label');\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  constructor(private rxWizardModalComponent: RxWizardModalComponent, private translateService: TranslateService) {}\n\n  ngOnInit(): void {\n    this.rxWizardModalComponent.context$.pipe(take(1)).subscribe((context) => {\n      this.generalForm = new FormGroup({\n        dataSourceName: new FormControl(context.dataSourceName, [Validators.required]),\n        resourceType: new FormControl([context.resourceType], [Validators.required])\n      });\n\n      if (this.generalForm.invalid) {\n        this.rxWizardModalComponent.api.disableNextButton();\n      }\n    });\n\n    this.generalForm.valueChanges\n      .pipe(withLatestFrom(this.rxWizardModalComponent.context$), takeUntil(this.destroyed$))\n      .subscribe(([value, context]) => {\n        this.rxWizardModalComponent.api.updateContext({\n          ...value,\n          resourceType: head(value.resourceType),\n          isGeneralFormPristine: this.generalForm.pristine\n        });\n\n        if (this.generalForm.valid) {\n          this.rxWizardModalComponent.api.enableNextButton();\n        } else {\n          this.rxWizardModalComponent.api.disableNextButton();\n        }\n      });\n  }\n\n  optionFormatter = (dataSourceOption: RxSelectOption): string => {\n    return get(dataSourceOption, 'name', this.defaultSelection);\n  };\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n}\n","<form [formGroup]=\"generalForm\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <adapt-rx-textfield\n        label=\"{{ 'com.bmc.arsys.rx.client.common.name.label' | translate }}\"\n        name=\"dataSourceName\"\n        formControlName=\"dataSourceName\"\n        rx-id=\"name-field\"\n        class=\"d-block form-group\"\n      >\n      </adapt-rx-textfield>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <adapt-rx-select\n        label=\"{{ 'com.bmc.arsys.rx.client.common.item-type.label' | translate }}\"\n        name=\"resourceType\"\n        class=\"d-block form-group\"\n        rx-id=\"type-field\"\n        formControlName=\"resourceType\"\n        [options]=\"dataSourceConfigTypes\"\n        [optionFormatter]=\"optionFormatter\"\n      >\n      </adapt-rx-select>\n    </div>\n  </div>\n</form>\n","import { DataPage } from '@helix/platform/shared/api';\nimport { Injectable, Injector } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxCustomDataSourceProviderDataPageService extends DataPage {\n  constructor(private injector: Injector) {\n    super(injector, 'com.bmc.arsys.rx.application.query.CustomDataSourceProviderDataPageQuery');\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { RxSelectionChangeEvent, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { RX_RECORD_DEFINITION, RxRecordInstanceDataPageService } from '@helix/platform/record/api';\nimport {\n  IDataPageParams,\n  IDataPageResult,\n  IPlainObject,\n  RxDefinitionNameService,\n  RxGlobalCacheService\n} from '@helix/platform/shared/api';\nimport { RxWizardModalComponent } from '@helix/platform/shared/components';\nimport { ConnectionTestStatus } from '@helix/platform/ui-kit';\nimport { TranslateService } from '@ngx-translate/core';\nimport { filter, find, get, groupBy, omit } from 'lodash';\nimport { forkJoin, ReplaySubject, throwError } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take, takeUntil, withLatestFrom } from 'rxjs/operators';\nimport { RxCognitiveServiceService } from '../cognitive-service/cognitive-service.service';\nimport { RxCustomDataSourceProviderDataPageService } from './custom-data-source-provider-data-page.service';\nimport { ICustomDataSourceProviderPickerComponentOptions } from './custom-data-source-provider-picker/custom-data-source-provider-picker-component.types';\nimport { RX_DATA_SOURCE_CONNECTIONS } from './data-source-connections.constant';\nimport { ICustomDataSourceProvider } from './data-source-connections.types';\n\n@Component({\n  selector: 'rx-data-source-connection-properties',\n  templateUrl: './data-source-connection-properties.component.html',\n  styleUrls: ['./data-source-connection-properties.component.scss']\n})\nexport class DataSourceConnectionPropertiesComponent implements OnInit, OnDestroy {\n  connectionPropertiesForm: FormGroup;\n\n  isRasPasswordDisabled = true;\n  connectionTestStatus: ConnectionTestStatus = ConnectionTestStatus.Invalid;\n  webApis: RxSelectOption[] = [];\n\n  customDataSourceProvidersPickerOptions = {\n    label: 'com.bmc.arsys.rx.client.admin.data-source-connection-properties.custom-data-source-provider.label',\n    required: true,\n    providersTree: []\n  } as ICustomDataSourceProviderPickerComponentOptions;\n\n  dataSourceAuthenticationTypes: RxSelectOption[] = RX_DATA_SOURCE_CONNECTIONS.authTypes.map((authType) => ({\n    ...authType,\n    name: this.translateService.instant(authType.name)\n  }));\n\n  isResourceTypeArSystem$ = this.rxWizardModalComponent.context$.pipe(\n    map((context) => context.resourceType.value === RX_DATA_SOURCE_CONNECTIONS.resourceTypes.arSystem.value),\n    shareReplay(1)\n  );\n\n  isResourceTypeCustom$ = this.rxWizardModalComponent.context$.pipe(\n    map((context) => context.resourceType.value === RX_DATA_SOURCE_CONNECTIONS.resourceTypes.custom.value),\n    shareReplay(1)\n  );\n\n  isResourceTypeWebApi$ = this.rxWizardModalComponent.context$.pipe(\n    map((context) => context.resourceType.value === RX_DATA_SOURCE_CONNECTIONS.resourceTypes.webApi.value),\n    shareReplay(1)\n  );\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private defaultSelection = this.translateService.instant('com.bmc.arsys.rx.client.common.select.label');\n  private isDataLoaded: { [key: string]: boolean } = {};\n\n  constructor(\n    private rxCognitiveServiceService: RxCognitiveServiceService,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService,\n    private rxCustomDataSourceProviderDataPageService: RxCustomDataSourceProviderDataPageService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxWizardModalComponent: RxWizardModalComponent,\n    private translateService: TranslateService,\n    private rxGlobalCacheService: RxGlobalCacheService\n  ) {}\n\n  ngOnInit(): void {\n    this.rxWizardModalComponent.context$.pipe(take(1)).subscribe((context) => {\n      this.connectionPropertiesForm = new FormGroup({\n        hostName: new FormControl(context.hostName, [Validators.required]),\n        port: new FormControl(context.port, [Validators.required]),\n        authType: new FormControl(context.authType, [Validators.required]),\n        rasPassword: new FormControl(context.rasPassword),\n        enforceAuthorization: new FormControl(context.enforceAuthorization),\n        selectedWebApi: new FormControl(context.webApiDataSourceGuid, [Validators.required]),\n        providerId: new FormControl(context.providerId, [Validators.required])\n      });\n    });\n\n    this.rxWizardModalComponent.context$.pipe(takeUntil(this.destroyed$)).subscribe((context) => {\n      const arSystemControls = ['hostName', 'port', 'authType', 'rasPassword', 'enforceAuthorization'];\n\n      if (context.resourceType.value === RX_DATA_SOURCE_CONNECTIONS.resourceTypes.arSystem.value) {\n        arSystemControls.forEach((control) => this.connectionPropertiesForm.get(control).enable({ emitEvent: false }));\n        this.connectionPropertiesForm.get('selectedWebApi').disable({ emitEvent: false });\n        this.connectionPropertiesForm.get('providerId').disable({ emitEvent: false });\n      } else if (context.resourceType.value === RX_DATA_SOURCE_CONNECTIONS.resourceTypes.webApi.value) {\n        arSystemControls.forEach((control) => this.connectionPropertiesForm.get(control).disable({ emitEvent: false }));\n        this.connectionPropertiesForm.get('selectedWebApi').enable({ emitEvent: false });\n        this.connectionPropertiesForm.get('providerId').disable({ emitEvent: false });\n      } else if (context.resourceType.value === RX_DATA_SOURCE_CONNECTIONS.resourceTypes.custom.value) {\n        arSystemControls.forEach((control) => this.connectionPropertiesForm.get(control).disable({ emitEvent: false }));\n        this.connectionPropertiesForm.get('selectedWebApi').disable({ emitEvent: false });\n        this.connectionPropertiesForm.get('providerId').enable({ emitEvent: false });\n      }\n\n      this.loadCustomDataSourceProviders(context);\n      this.loadWebApis(context);\n\n      if (this.connectionPropertiesForm.valid && !context.isGeneralFormPristine) {\n        this.rxWizardModalComponent.api.enableFinishButton();\n      } else {\n        this.rxWizardModalComponent.api.disableFinishButton();\n      }\n    });\n\n    this.connectionPropertiesForm.valueChanges\n      .pipe(withLatestFrom(this.isResourceTypeWebApi$), takeUntil(this.destroyed$))\n      .subscribe(([value, isResourceTypeWebApi]) => {\n        this.rxWizardModalComponent.api.updateContext(omit(value, ['selectedWebApi']));\n\n        if (!isResourceTypeWebApi) {\n          this.connectionTestStatus =\n            this.connectionPropertiesForm.pristine || this.connectionPropertiesForm.invalid\n              ? ConnectionTestStatus.Invalid\n              : ConnectionTestStatus.Unknown;\n        }\n      });\n\n    this.connectionPropertiesForm.valueChanges\n      .pipe(withLatestFrom(this.rxWizardModalComponent.context$), takeUntil(this.destroyed$))\n      .subscribe(([_, context]) => {\n        if (\n          this.connectionPropertiesForm.invalid ||\n          (this.connectionPropertiesForm.pristine && context.isGeneralFormPristine)\n        ) {\n          this.rxWizardModalComponent.api.disableFinishButton();\n        } else {\n          this.rxWizardModalComponent.api.enableFinishButton();\n        }\n      });\n  }\n\n  setAuthType(type: string): void {\n    const newContext: IPlainObject = {\n      authType: type\n    };\n\n    this.isRasPasswordDisabled = type !== RX_DATA_SOURCE_CONNECTIONS.authTypes[1].name;\n\n    if (this.isRasPasswordDisabled) {\n      newContext.rasPassword = null;\n    }\n\n    this.rxWizardModalComponent.api.updateContext(newContext);\n  }\n\n  onTestConnection(): void {\n    this.rxWizardModalComponent.context$\n      .pipe(\n        switchMap((context) =>\n          this.rxCognitiveServiceService.testConnection({\n            resourceType: RX_DATA_SOURCE_CONNECTIONS.pingConfigurationCommand,\n            dataSource: {\n              resourceType: RX_DATA_SOURCE_CONNECTIONS.resourceTypes.arSystem.value,\n              authType: context.authType,\n              hostName: context.hostName,\n              port: context.port,\n              rasPassword: context.rasPassword,\n              enforceAuthorization: context.enforceAuthorization\n            }\n          })\n        ),\n        catchError((error: HttpErrorResponse) => {\n          this.connectionTestStatus = ConnectionTestStatus.Failed;\n\n          return throwError(error);\n        })\n      )\n      .subscribe(() => {\n        this.connectionTestStatus = ConnectionTestStatus.Passed;\n      });\n  }\n\n  private loadCustomDataSourceProviders(context: IPlainObject): void {\n    if (\n      context.resourceType.value === RX_DATA_SOURCE_CONNECTIONS.resourceTypes.custom.value &&\n      !this.isDataLoaded[RX_DATA_SOURCE_CONNECTIONS.resourceTypes.custom.value]\n    ) {\n      const globalLabel = this.translateService.instant('com.bmc.arsys.rx.client.common.global-items.label');\n\n      this.isDataLoaded[RX_DATA_SOURCE_CONNECTIONS.resourceTypes.custom.value] = true;\n\n      this.rxCustomDataSourceProviderDataPageService\n        .get()\n        .pipe(\n          switchMap((dataPage: IDataPageResult<ICustomDataSourceProvider>) =>\n            forkJoin(\n              dataPage.data.map((customDataSourceProvider: ICustomDataSourceProvider) => {\n                const bundleId = this.rxDefinitionNameService.getBundleId(customDataSourceProvider.name) || globalLabel;\n\n                return this.rxGlobalCacheService.getBundleFriendlyName(bundleId, bundleId).pipe(\n                  map((bundleFriendlyName) => ({\n                    bundleFriendlyName,\n                    value: customDataSourceProvider.name\n                  }))\n                );\n              })\n            )\n          )\n        )\n        .subscribe((providers) => {\n          const customDataSourceProvidersByBundleFriendlyName = groupBy(providers, 'bundleFriendlyName');\n\n          this.customDataSourceProvidersPickerOptions.providersTree = Object.keys(\n            customDataSourceProvidersByBundleFriendlyName\n          )\n            .map((bundleFriendlyName: string) => ({\n              label: bundleFriendlyName,\n              isExpanded: true,\n              providers: customDataSourceProvidersByBundleFriendlyName[bundleFriendlyName]\n                .map((provider) => provider.value)\n                .sort()\n            }))\n            .sort((provider1, provider2) => {\n              if (provider1.label === globalLabel) {\n                return -1;\n              }\n\n              return provider1.label > provider2.label ? 1 : -1;\n            });\n\n          this.connectionPropertiesForm\n            .get('providerId')\n            .setValue(find(providers, (provider) => provider.value === context.providerId)?.value, {\n              emitEvent: false\n            });\n        });\n    }\n  }\n\n  private loadWebApis(context: IPlainObject): void {\n    if (\n      context.resourceType.value === RX_DATA_SOURCE_CONNECTIONS.resourceTypes.webApi.value &&\n      !this.isDataLoaded[RX_DATA_SOURCE_CONNECTIONS.resourceTypes.webApi.value]\n    ) {\n      const params: IDataPageParams = {\n        recorddefinition: 'WebAPI Connection'\n      };\n\n      this.isDataLoaded[RX_DATA_SOURCE_CONNECTIONS.resourceTypes.webApi.value] = true;\n\n      this.rxRecordInstanceDataPageService.post({ params }).subscribe((result) => {\n        this.webApis = result.data.map((webApi) => ({\n          name: webApi[RX_RECORD_DEFINITION.coreFieldIds.description],\n          id: webApi[RX_RECORD_DEFINITION.coreFieldIds.id]\n        }));\n\n        this.connectionPropertiesForm\n          .get('selectedWebApi')\n          .setValue(filter(this.webApis, ['id', context.webApiDataSourceGuid]), { emitEvent: false });\n      });\n    }\n  }\n\n  optionFormatter = (dataSourceOption: RxSelectOption): string => get(dataSourceOption, 'name', this.defaultSelection);\n\n  onWebApiChange(event: RxSelectionChangeEvent): void {\n    this.rxWizardModalComponent.api.updateContext({\n      webApiDataSourceGuid: event.options[0].id\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n}\n","<form [formGroup]=\"connectionPropertiesForm\">\n  <ng-container *ngIf=\"isResourceTypeArSystem$ | async\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <adapt-rx-textfield\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.data-source-connection-properties.host-name.label' | translate }}\"\n          name=\"hostName\"\n          formControlName=\"hostName\"\n          rx-id=\"host-name-field\"\n          class=\"d-block form-group\"\n          maxlength=\"254\"\n        >\n        </adapt-rx-textfield>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <adapt-rx-counter\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.data-source-connection-properties.port.label' | translate }}\"\n          name=\"port\"\n          adaptRange\n          [formControl]=\"connectionPropertiesForm.controls.port\"\n          [min]=\"0\"\n          [max]=\"65535\"\n          adaptIntegerNumber\n          rx-id=\"port-field\"\n          class=\"d-block form-group\"\n        >\n        </adapt-rx-counter>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <adapt-rx-radiobutton-group\n          label=\"{{\n            'com.bmc.arsys.rx.client.admin.data-source-connection-properties.authentication.label' | translate\n          }}\"\n          name=\"authType\"\n          rx-id=\"authentication-field\"\n          formControlName=\"authType\"\n          (ngModelChange)=\"setAuthType($event)\"\n        >\n          <adapt-rx-radiobutton\n            *ngFor=\"let selectionValue of dataSourceAuthenticationTypes\"\n            [value]=\"selectionValue.name\"\n            [label]=\"selectionValue.name\"\n          >\n          </adapt-rx-radiobutton>\n        </adapt-rx-radiobutton-group>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <adapt-rx-textfield\n          formControlName=\"rasPassword\"\n          [isPassword]=\"true\"\n          name=\"password\"\n          rx-id=\"password-field\"\n          class=\"d-block form-group\"\n          [disabled]=\"isRasPasswordDisabled\"\n        >\n        </adapt-rx-textfield>\n      </div>\n      <div class=\"col-md-6\">\n        <adapt-rx-checkbox\n          name=\"permission\"\n          label=\"{{\n            'com.bmc.arsys.rx.client.admin.data-source-connection-properties.use-current-user-permissions.label'\n              | translate\n          }}\"\n          rx-id=\"permission-field\"\n          formControlName=\"enforceAuthorization\"\n          [tooltip]=\"{\n            iconName: 'question_circle_o',\n            content: 'com.bmc.arsys.rx.client.admin.data-source-connection-properties.permission.tooltip' | translate,\n            placement: 'top',\n            popoverMode: true\n          }\"\n        >\n        </adapt-rx-checkbox>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-8 mt-2\">\n        <rx-connection-tester\n          buttonType=\"secondary\"\n          [status]=\"connectionTestStatus\"\n          (testConnection)=\"onTestConnection()\"\n          rx-id=\"test-connection-button\"\n        ></rx-connection-tester>\n      </div>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"isResourceTypeCustom$ | async\">\n    <div class=\"row\">\n      <rx-custom-data-source-provider-picker\n        class=\"col-md-6\"\n        name=\"providerId\"\n        formControlName=\"providerId\"\n        rx-id=\"custom-data-source-provider-field\"\n        [options]=\"customDataSourceProvidersPickerOptions\"\n      ></rx-custom-data-source-provider-picker>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"isResourceTypeWebApi$ | async\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <adapt-rx-select\n          label=\"{{\n            'com.bmc.arsys.rx.client.admin.data-source-connection-properties.web-api-connection.label' | translate\n          }}\"\n          name=\"webApiConnection\"\n          class=\"d-block form-group\"\n          rx-id=\"web-api-connection-field\"\n          [options]=\"webApis\"\n          formControlName=\"selectedWebApi\"\n          (onSelectionChange)=\"onWebApiChange($event)\"\n          [optionFormatter]=\"optionFormatter\"\n        >\n        </adapt-rx-select>\n      </div>\n    </div>\n  </ng-container>\n</form>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin, Observable } from 'rxjs';\nimport { map } from 'lodash';\nimport { RX_DATA_SOURCE_CONNECTIONS } from './data-source-connections.constant';\nimport { IDataSourceConnection } from './data-source-connections.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxDataSourceConnectionsService {\n  constructor(private httpClient: HttpClient) {}\n\n  getDataSourceConnection(connectionId: string): Observable<any> {\n    return this.httpClient.get(`${RX_DATA_SOURCE_CONNECTIONS.dataSourceConnectionUrl}/${connectionId}`);\n  }\n\n  createDataSourceConnection(dataSourceConnection: IDataSourceConnection): Observable<any> {\n    return this.httpClient.post(RX_DATA_SOURCE_CONNECTIONS.dataSourceConnectionUrl, dataSourceConnection);\n  }\n\n  updateDataSourceConnection(connectionId: string, dataSourceConnection: IDataSourceConnection): Observable<any> {\n    return this.httpClient.put(\n      `${RX_DATA_SOURCE_CONNECTIONS.dataSourceConnectionUrl}/${connectionId}`,\n      dataSourceConnection\n    );\n  }\n\n  deleteDataSourceConnections(recordInstanceIds: string[]): Observable<any> {\n    return forkJoin(\n      map(recordInstanceIds, (id) =>\n        this.httpClient.delete(`${RX_DATA_SOURCE_CONNECTIONS.dataSourceConnectionUrl}/${id}`)\n      )\n    );\n  }\n}\n","import { Component, ComponentFactoryResolver, OnInit, ViewChild } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport {\n  IRecordGridActionButton,\n  IRecordGridColumn,\n  IRecordGridConfig,\n  IRecordGridDataPageParams,\n  RecordGridComponent,\n  RowSelectionMode\n} from '@helix/platform/view/components';\nimport { RX_DATA_SOURCE_CONNECTIONS } from './data-source-connections.constant';\nimport { IRecordDefinition, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RX_CONNECTION_MAPPING } from '../connection-mapping/common/connection-mapping.constant';\nimport { ColumnConfig, RowDataItem } from '@bmc-ux/adapt-table';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { DataPage, IDataPageResult, RxDataPageFactoryService, RxNotificationService } from '@helix/platform/shared/api';\nimport { cloneDeep, map, pick } from 'lodash';\nimport { RxDataSourceConnectionsService } from './data-source-connections.service';\nimport { AdaptModalService } from '@bmc-ux/adapt-angular';\nimport { IDataSourceConnection, IDataSourceConnectionWizardContext } from './data-source-connections.types';\nimport { DataSourceConnectionGeneralComponent } from './data-source-connection-general.component';\nimport { DataSourceConnectionPropertiesComponent } from './data-source-connection-properties.component';\nimport { RxWizardService } from '@helix/platform/shared/components';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-data-source-connections',\n  templateUrl: './data-source-connections.component.html'\n})\nexport class DataSourceConnectionsAdminComponent implements OnInit {\n  @ViewChild('dataSourceConnectionsGrid', { static: true })\n  dataSourceConnectionsGrid: RecordGridComponent;\n\n  private resource: DataPage;\n  private selectedConnectionId: string;\n  private wizardTitle: string;\n  private finishButtonLabel: string;\n\n  recordGridConfig: Observable<IRecordGridConfig>;\n  wizardConfigData: IDataSourceConnectionWizardContext;\n\n  constructor(\n    private rxModalService: RxModalService,\n    private rxDataPageService: RxDataPageFactoryService,\n    private rxDataSourceConnectionsService: RxDataSourceConnectionsService,\n    private rxNotificationService: RxNotificationService,\n    private adaptModalService: AdaptModalService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxWizardService: RxWizardService,\n    private translateService: TranslateService\n  ) {\n    this.resource = this.rxDataPageService.withType(RX_DATA_SOURCE_CONNECTIONS.dataPageQueryType);\n  }\n\n  ngOnInit(): void {\n    RX_DATA_SOURCE_CONNECTIONS.resourceTypes = Object.entries(RX_DATA_SOURCE_CONNECTIONS.resourceTypes).reduce(\n      (resourceTypesWithTranslatedName, [key, resourceType]) => ({\n        ...resourceTypesWithTranslatedName,\n        [key]: {\n          value: resourceType.value,\n          name: this.translateService.instant(resourceType.name)\n        }\n      }),\n      {}\n    ) as any;\n\n    RX_DATA_SOURCE_CONNECTIONS.authTypes = RX_DATA_SOURCE_CONNECTIONS.authTypes.map((authType) => ({\n      ...authType,\n      name: this.translateService.instant(authType.name)\n    }));\n\n    RX_DATA_SOURCE_CONNECTIONS.initialWizardContext.resourceType = RX_DATA_SOURCE_CONNECTIONS.resourceTypes.arSystem;\n    RX_DATA_SOURCE_CONNECTIONS.initialWizardContext.authType = RX_DATA_SOURCE_CONNECTIONS.authTypes[0].name;\n\n    const gridColumns: IRecordGridColumn[] = [\n      {\n        index: 0,\n        fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.id),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.id.label'),\n        visible: false\n      },\n      {\n        index: 1,\n        fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.description),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n        clickable: true,\n        actions: [\n          {\n            name: (previousActionResult: any, lastActionRow: IRowDataItem) =>\n              this.editDataSourceConnection(lastActionRow)\n          }\n        ]\n      },\n      {\n        index: 2,\n        fieldId: String(RX_CONNECTION_MAPPING.dataSource.fields.sourceType),\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.data-source-connections.source-type.title')\n      }\n    ];\n\n    const recordDefinition: IRecordDefinition = {\n      fieldDefinitions: [\n        {\n          id: RX_RECORD_DEFINITION.coreFieldIds.id,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_RECORD_DEFINITION.coreFieldIds.description,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_CONNECTION_MAPPING.dataSource.fields.sourceType,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        }\n      ]\n    };\n\n    const actionButtons: IRecordGridActionButton[] = [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n        style: 'tertiary',\n        icon: 'trash',\n        actions: [\n          {\n            name: () => {\n              this.rxModalService\n                .confirm({\n                  title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n                  modalStyle: RX_MODAL.modalStyles.warning,\n                  message: this.translateService.instant(\n                    'com.bmc.arsys.rx.client.admin.data-source-connections.delete-confirmation.message'\n                  )\n                })\n                .then((result: boolean) => {\n                  if (result) {\n                    const selectedDataSourceConnections = this.dataSourceConnectionsGrid.api.getSelectedRows();\n\n                    const selectedDataSourceConnectionsIds = map(\n                      selectedDataSourceConnections,\n                      RX_RECORD_DEFINITION.coreFieldIds.id\n                    );\n\n                    this.rxDataSourceConnectionsService\n                      .deleteDataSourceConnections(selectedDataSourceConnectionsIds)\n                      .subscribe(() => {\n                        this.rxNotificationService.addSuccessMessage('Data source connection(s) deleted successfully.');\n                        this.refreshDataSourceConnectionsGrid();\n                      });\n                  }\n                });\n            }\n          }\n        ]\n      }\n    ];\n\n    this.recordGridConfig = of({\n      enableFiltering: true,\n      columns: gridColumns,\n      getRecordDefinition: () => of(recordDefinition),\n      enableRowSelection: RowSelectionMode.Multiple,\n      recordDefinitionName: RX_DATA_SOURCE_CONNECTIONS.recordDefinitionName,\n      actionButtons: actionButtons,\n      getData: this.getData,\n      styles: 'flex-fill'\n    });\n  }\n\n  private getData = (queryParams: IRecordGridDataPageParams): Observable<IDataPageResult> => {\n    delete queryParams.searchText;\n    delete queryParams.shouldIncludeTotalSize;\n\n    return this.resource.get({ params: queryParams });\n  };\n\n  getCellValue(dataItem: string[], column: ColumnConfig): string {\n    return dataItem[column.field];\n  }\n\n  createDataSourceConnection(): void {\n    this.wizardTitle = this.translateService.instant(\n      'com.bmc.arsys.rx.client.admin.data-source-connections.new-data-source-connection.label'\n    );\n    this.finishButtonLabel = 'Save';\n    this.wizardConfigData = cloneDeep(RX_DATA_SOURCE_CONNECTIONS.initialWizardContext);\n\n    this.openWizard();\n  }\n\n  editDataSourceConnection(dataItem: RowDataItem): void {\n    this.wizardTitle = this.translateService.instant(\n      'com.bmc.arsys.rx.client.admin.data-source-connections.edit-data-source-connection.label'\n    );\n    this.finishButtonLabel = this.translateService.instant('com.bmc.arsys.rx.client.approval.update.button.label');\n    this.selectedConnectionId = dataItem[RX_RECORD_DEFINITION.coreFieldIds.id];\n\n    this.rxDataSourceConnectionsService.getDataSourceConnection(this.selectedConnectionId).subscribe((result) => {\n      this.wizardConfigData = {\n        dataSourceName: result.dataSourceName,\n        resourceType: Object.values(RX_DATA_SOURCE_CONNECTIONS.resourceTypes).find(\n          (resourceType) => resourceType.value === result.resourceType\n        ),\n        hostName: result.hostName,\n        port: result.port,\n        authType: result.authType,\n        rasPassword: result.rasPassword,\n        enforceAuthorization: result.enforceAuthorization,\n        webApiDataSourceGuid: result.webApiDataSourceGuid,\n        isEditMode: true,\n        isGeneralFormPristine: true,\n        providerId: result.providerId\n      };\n\n      this.openWizard();\n    });\n  }\n\n  private refreshDataSourceConnectionsGrid(): void {\n    this.dataSourceConnectionsGrid.api.refresh().subscribe();\n  }\n\n  openWizard(): void {\n    const dataSourceWizardConfig = {\n      title: this.wizardTitle,\n      allowFinish: true,\n      finishButtonLabel: this.finishButtonLabel,\n      steps: [\n        {\n          id: 'general',\n          name: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n          componentFactory: this.componentFactoryResolver.resolveComponentFactory(DataSourceConnectionGeneralComponent)\n        },\n        {\n          id: 'connection-properties',\n          name: this.translateService.instant(\n            'com.bmc.arsys.rx.client.admin.data-source-connections.connection-properties.label'\n          ),\n          componentFactory: this.componentFactoryResolver.resolveComponentFactory(\n            DataSourceConnectionPropertiesComponent\n          )\n        }\n      ]\n    };\n\n    this.rxWizardService\n      .open<IDataSourceConnectionWizardContext>({\n        context: this.wizardConfigData,\n        options: dataSourceWizardConfig\n      })\n      .then((result) => {\n        if (result) {\n          this.save();\n        }\n      });\n  }\n\n  save(): void {\n    let dataSourceConnection: IDataSourceConnection = {\n      dataSourceName: this.wizardConfigData.dataSourceName,\n      resourceType: this.wizardConfigData.resourceType.value,\n      hostName: this.wizardConfigData.hostName,\n      port: this.wizardConfigData.port,\n      rasPassword: this.wizardConfigData.rasPassword || null,\n      authType: this.wizardConfigData.authType,\n      enforceAuthorization: this.wizardConfigData.enforceAuthorization,\n      providerId: this.wizardConfigData.providerId\n    };\n\n    if (this.wizardConfigData.resourceType.value === RX_DATA_SOURCE_CONNECTIONS.resourceTypes.webApi.value) {\n      dataSourceConnection = pick(dataSourceConnection, ['dataSourceName', 'resourceType']);\n      dataSourceConnection.webApiDataSourceGuid = this.wizardConfigData.webApiDataSourceGuid;\n    } else if (this.wizardConfigData.resourceType.value === RX_DATA_SOURCE_CONNECTIONS.resourceTypes.custom.value) {\n      dataSourceConnection = pick(dataSourceConnection, ['dataSourceName', 'resourceType', 'providerId']);\n    }\n\n    const writeEvent = this.wizardConfigData.isEditMode\n      ? this.rxDataSourceConnectionsService.updateDataSourceConnection(this.selectedConnectionId, dataSourceConnection)\n      : this.rxDataSourceConnectionsService.createDataSourceConnection(dataSourceConnection);\n\n    writeEvent.subscribe(() => {\n      this.rxNotificationService.addSuccessMessage(\n        this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.data-source-connections.edit-data-source-connection-saved.message'\n        )\n      );\n\n      this.refreshDataSourceConnectionsGrid();\n    });\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.admin.data-source-connections.header.title' | translate }}\">\n  <ng-container>\n    <button\n      adapt-button\n      type=\"button\"\n      btn-type=\"tertiary\"\n      class=\"d-icon-plus_circle align-self-start\"\n      rx-id=\"new-button\"\n      (click)=\"createDataSourceConnection()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.new.label' | translate }}\n    </button>\n\n    <rx-record-grid #dataSourceConnectionsGrid [config]=\"recordGridConfig\"></rx-record-grid>\n  </ng-container>\n</rx-admin-settings>\n","import { CommonModule } from '@angular/common';\nimport { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AdaptButtonModule,\n  AdaptDropdownModule,\n  AdaptRxCheckboxModule,\n  AdaptRxCounterModule,\n  AdaptRxFormControlModule,\n  AdaptRxRadiobuttonModule,\n  AdaptRxSelectModule,\n  AdaptRxTextfieldModule,\n  AdaptRxValidatorsModule,\n  AdaptTreeModule\n} from '@bmc-ux/adapt-angular';\nimport { RxDefinitionModule, RX_APPLICATION } from '@helix/platform/shared/api';\nimport { AdminSettingsModule, RxWizardModule } from '@helix/platform/shared/components';\nimport { RxConnectionTesterModule } from '@helix/platform/ui-kit';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RxCustomDataSourceProviderPickerComponent } from './custom-data-source-provider-picker/custom-data-source-provider-picker.component';\nimport { DataSourceConnectionGeneralComponent } from './data-source-connection-general.component';\nimport { DataSourceConnectionPropertiesComponent } from './data-source-connection-properties.component';\nimport { DataSourceConnectionsAdminComponent } from './data-source-connections.component';\n\n@NgModule({\n  declarations: [\n    DataSourceConnectionsAdminComponent,\n    DataSourceConnectionGeneralComponent,\n    DataSourceConnectionPropertiesComponent,\n    RxCustomDataSourceProviderPickerComponent\n  ],\n  imports: [\n    AdaptButtonModule,\n    AdaptDropdownModule,\n    AdaptRxCheckboxModule,\n    AdaptRxCounterModule,\n    AdaptRxFormControlModule,\n    AdaptRxRadiobuttonModule,\n    AdaptRxSelectModule,\n    AdaptRxTextfieldModule,\n    AdaptRxValidatorsModule,\n    AdaptTreeModule,\n    AdminSettingsModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RecordGridModule,\n    RxConnectionTesterModule,\n    RxDefinitionModule,\n    RxWizardModule,\n    TranslateModule\n  ],\n  entryComponents: [\n    DataSourceConnectionsAdminComponent,\n    DataSourceConnectionGeneralComponent,\n    DataSourceConnectionPropertiesComponent\n  ]\n})\nexport class DataSourceConnectionsRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-data-source-connections',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(DataSourceConnectionsAdminComponent),\n      name: 'Data source connections',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\n\nconst aliasTypeFieldId = 56150;\nconst aliasTypeDefaultValue = 'email';\nconst incomingMailboxType = 0;\nconst outgoingMailboxType = 1;\n\nexport const RX_EMAIL_PROFILES = {\n  aliasMapping: {\n    recordDefinitionName: 'Alias Mapping',\n    queryExpression: `'${aliasTypeFieldId}' = \"${aliasTypeDefaultValue}\"`,\n    fieldIds: {\n      aliasType: {\n        id: aliasTypeFieldId,\n        defaultValue: aliasTypeDefaultValue\n      },\n      applicationId: 56151,\n      applicationName: 56152,\n      aliasName: 56153,\n      aliasValue: 56154,\n      description: RX_RECORD_DEFINITION.coreFieldIds.description,\n      assignee: RX_RECORD_DEFINITION.coreFieldIds.assignee,\n      status: RX_RECORD_DEFINITION.coreFieldIds.status\n    },\n    mailboxType: {\n      outgoing: 0,\n      incoming: 1\n    },\n    status: {\n      new: 0,\n      assigned: 1\n    }\n  },\n  mailbox: {\n    recordDefinitionName: 'AR System Email Mailbox Configuration',\n    queryExpression: `'${RX_RECORD_DEFINITION.coreFieldIds.status}' = \"0\"`,\n    fieldIds: {\n      mailboxName: {\n        id: 18037,\n        label: 'Mailbox name'\n      },\n      mailboxFunction: 18049\n    },\n    mailboxFunctions: {\n      incoming: {\n        id: incomingMailboxType,\n        label: 'com.bmc.arsys.rx.client.admin.email-profiles.incoming-mailbox.label',\n        value: String(incomingMailboxType)\n      },\n      outgoing: {\n        id: outgoingMailboxType,\n        label: 'com.bmc.arsys.rx.client.admin.email-profiles.outgoing-mailbox.label',\n        value: String(outgoingMailboxType)\n      }\n    }\n  }\n};\n","import { Component, Injector, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DismissReasons, DockedPanelContext, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { RX_RECORD_DEFINITION, RxRecordInstanceDataPageService } from '@helix/platform/record/api';\nimport { IBundleDescriptor, RX_APPLICATION, RxGlobalCacheService } from '@helix/platform/shared/api';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { filter, includes, reject } from 'lodash';\nimport { forkJoin, Subscription } from 'rxjs';\nimport { RX_EMAIL_PROFILES } from '../email-profiles.constant';\nimport { IEmailProfile } from '../email-profiles.interfaces';\n\n@Component({\n  selector: 'rx-create-email-profile',\n  templateUrl: './create-email-profile.component.html'\n})\nexport class CreateEmailProfileComponent extends RxModalClass implements OnInit, OnDestroy {\n  emailProfile: IEmailProfile;\n  createEmailProfileFormGroup: FormGroup;\n  mailboxFunctions = RX_EMAIL_PROFILES.mailbox.mailboxFunctions;\n  bundleOptions: RxSelectOption[] = [];\n  mailboxOptions: RxSelectOption[] = [];\n  availableMailboxOptions: RxSelectOption[] = [];\n  validDefinitionNameRegex = RX_RECORD_DEFINITION.validDefinitionNameRegex;\n\n  private subscription = new Subscription();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService,\n    private dockedPanelContext: DockedPanelContext,\n    protected injector: Injector\n  ) {\n    super(dockedPanelContext, injector);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.emailProfile = this.dockedPanelContext.getData().profile;\n\n    this.createEmailProfileFormGroup = this.formBuilder.group({\n      profileName: '',\n      mailboxFunction: this.mailboxFunctions.incoming.value,\n      mailbox: [],\n      application: []\n    });\n\n    forkJoin({\n      bundleDescriptors: this.rxGlobalCacheService.getBundleDescriptors(),\n      mailboxes: this.rxRecordInstanceDataPageService.post({\n        params: {\n          recorddefinition: RX_EMAIL_PROFILES.mailbox.recordDefinitionName,\n          queryExpression: RX_EMAIL_PROFILES.mailbox.queryExpression\n        }\n      })\n    }).subscribe((result) => {\n      this.bundleOptions = reject(result.bundleDescriptors, (bundleDescriptor: IBundleDescriptor) => {\n        return includes(\n          [RX_APPLICATION.innovationStudioBundleId, RX_APPLICATION.platformBundleId],\n          bundleDescriptor.id\n        );\n      }).sort((a: IBundleDescriptor, b: IBundleDescriptor) => a.friendlyName.localeCompare(b.friendlyName));\n\n      this.availableMailboxOptions = result.mailboxes.data;\n\n      if (this.emailProfile) {\n        this.createEmailProfileFormGroup.controls.mailboxFunction.disable();\n        this.loadEmailProfileData();\n      } else {\n        this.filterMailboxes(this.mailboxFunctions.incoming.value);\n      }\n\n      this.subscription = this.createEmailProfileFormGroup\n        .get('mailboxFunction')\n        .valueChanges.subscribe((mailboxFunctionName) => {\n          this.createEmailProfileFormGroup.controls.mailbox.setValue([]);\n          this.filterMailboxes(mailboxFunctionName);\n        });\n    });\n  }\n\n  isDirty(): boolean {\n    return this.createEmailProfileFormGroup.dirty;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  private filterMailboxes(mailBoxFunctionName: string): void {\n    this.mailboxOptions = filter(this.availableMailboxOptions, (mailbox: RxSelectOption) => {\n      return mailbox[RX_EMAIL_PROFILES.mailbox.fieldIds.mailboxFunction] === parseInt(mailBoxFunctionName, 10);\n    });\n  }\n\n  private loadEmailProfileData(): void {\n    let selectedMailboxType = '';\n\n    if (this.emailProfile.mailboxType === RX_EMAIL_PROFILES.mailbox.mailboxFunctions.incoming.id) {\n      selectedMailboxType = this.mailboxFunctions.incoming.value;\n    } else if (this.emailProfile.mailboxType === RX_EMAIL_PROFILES.mailbox.mailboxFunctions.outgoing.id) {\n      selectedMailboxType = this.mailboxFunctions.outgoing.value;\n    }\n\n    this.filterMailboxes(selectedMailboxType);\n\n    const selectedApplication: RxSelectOption = this.bundleOptions.find(\n      (bundle) => bundle.id === this.emailProfile.application\n    );\n\n    const selectedMailbox: RxSelectOption = this.availableMailboxOptions.find(\n      (mailbox) => mailbox[RX_RECORD_DEFINITION.coreFieldIds.id] === this.emailProfile.mailbox\n    );\n\n    this.createEmailProfileFormGroup.patchValue({\n      profileName: this.emailProfile.profileName,\n      mailboxFunction: selectedMailboxType,\n      mailbox: selectedMailbox ? [selectedMailbox] : [],\n      application: selectedApplication ? [selectedApplication] : []\n    });\n  }\n\n  bundleNameFormatter(bundleOption: RxSelectOption): string {\n    return bundleOption.friendlyName;\n  }\n\n  mailboxNameFormatter(mailboxOption: RxSelectOption): string {\n    return mailboxOption[RX_EMAIL_PROFILES.mailbox.fieldIds.mailboxName.id];\n  }\n\n  save(): void {\n    this.dockedPanelContext.close(this.createEmailProfileFormGroup.getRawValue());\n  }\n\n  cancel(): void {\n    this.dockedPanelContext.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"dp-body\">\n  <form [formGroup]=\"createEmailProfileFormGroup\">\n    <adapt-rx-textfield\n      class=\"d-block form-group\"\n      rx-id=\"profile-name\"\n      formControlName=\"profileName\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.create-email-profile.profile-name.label' | translate }}\"\n      required\n      maxlength=\"254\"\n      [pattern]=\"validDefinitionNameRegex\"\n    ></adapt-rx-textfield>\n\n    <adapt-rx-radiobutton-group\n      class=\"d-block form-group\"\n      rx-id=\"mailbox-function\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.create-email-profile.mailbox-function.label' | translate }}\"\n      required\n      [formControl]=\"createEmailProfileFormGroup.controls.mailboxFunction\"\n    >\n      <adapt-rx-radiobutton\n        class=\"mb-0 mt-0 radio-inline\"\n        *ngFor=\"let mailboxFunction of mailboxFunctions | keyvalue\"\n        [value]=\"mailboxFunction.value.value\"\n        [label]=\"mailboxFunction.value.label | translate\"\n      ></adapt-rx-radiobutton>\n    </adapt-rx-radiobutton-group>\n\n    <adapt-rx-select\n      class=\"d-block form-group\"\n      formControlName=\"mailbox\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.create-email-profile.mailbox.label' | translate }}\"\n      rx-id=\"mailbox\"\n      required\n      [options]=\"mailboxOptions\"\n      [optionFormatter]=\"mailboxNameFormatter\"\n    ></adapt-rx-select>\n\n    <adapt-rx-select\n      class=\"d-block form-group\"\n      emptyOption=\"true\"\n      formControlName=\"application\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.create-email-profile.application.label' | translate }}\"\n      rx-id=\"application\"\n      [options]=\"bundleOptions\"\n      [optionFormatter]=\"bundleNameFormatter\"\n    ></adapt-rx-select>\n  </form>\n</div>\n\n<div class=\"dp-footer\">\n  <button\n    adapt-button\n    type=\"button\"\n    btn-type=\"primary\"\n    class=\"mr-2\"\n    rx-id=\"save-button\"\n    [disabled]=\"createEmailProfileFormGroup.invalid || createEmailProfileFormGroup.pristine\"\n    (click)=\"save()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n  <button adapt-button type=\"button\" btn-type=\"secondary\" rx-id=\"close-button\" class=\"mr-2\" (click)=\"cancel()\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { RxRecordInstanceService } from '@helix/platform/record/api';\nimport { map } from 'lodash';\nimport { forkJoin, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxEmailProfilesService {\n  constructor(private rxRecordInstanceService: RxRecordInstanceService) {}\n\n  deleteEmailProfiles(recordDefinitionName: string, recordInstanceIds: string[]): Observable<any[]> {\n    return forkJoin(\n      map(recordInstanceIds, (id) => {\n        return this.rxRecordInstanceService.delete(recordDefinitionName, id);\n      })\n    );\n  }\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { DataCellTemplateParams } from '@bmc-ux/adapt-table';\nimport {\n  IRecordDefinition,\n  RecordInstance,\n  RX_RECORD_DEFINITION,\n  RxRecordInstanceDataPageService,\n  RxRecordInstanceService\n} from '@helix/platform/record/api';\nimport { IDataPageResult, RxNotificationService } from '@helix/platform/shared/api';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport {\n  IRecordGridActionButton,\n  IRecordGridColumn,\n  IRecordGridConfig,\n  IRecordGridDataPageParams,\n  RecordGridComponent\n} from '@helix/platform/view/components';\nimport { find, get, isEmpty, map as _map, noop, parseInt, transform } from 'lodash';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { CreateEmailProfileComponent } from './create-email-profile/create-email-profile.component';\nimport { RX_EMAIL_PROFILES } from './email-profiles.constant';\nimport { IEmailProfile } from './email-profiles.interfaces';\nimport { RxEmailProfilesService } from './email-profiles.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-email-profiles',\n  templateUrl: './email-profiles.component.html'\n})\nexport class EmailProfilesAdminComponent implements OnInit {\n  constructor(\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService,\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private rxNotificationService: RxNotificationService,\n    private rxModalService: RxModalService,\n    private rxEmailProfilesService: RxEmailProfilesService,\n    private translateService: TranslateService\n  ) {}\n\n  @ViewChild('emailProfilesGrid')\n  emailProfilesGrid: RecordGridComponent;\n\n  @ViewChild('mailboxFunctionCellTemplate', { static: true })\n  mailboxFunctionCellTemplate: TemplateRef<DataCellTemplateParams>;\n\n  currentRecordInstance: Observable<RecordInstance>;\n  emailProfilesGridConfig$: Observable<IRecordGridConfig>;\n\n  ngOnInit(): void {\n    const gridColumns: IRecordGridColumn[] = [\n      {\n        fieldId: `${RX_RECORD_DEFINITION.coreFieldIds.id}`,\n        index: 0,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.id.label'),\n        visible: false\n      },\n      {\n        fieldId: `${RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasName}`,\n        index: 1,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.create-email-profile.profile-name.label'),\n        clickable: true,\n        actions: [\n          {\n            name: (previousActionResult: any, selectedRow: IRowDataItem) => {\n              this.currentRecordInstance = this.rxRecordInstanceService.get(\n                RX_EMAIL_PROFILES.aliasMapping.recordDefinitionName,\n                selectedRow[RX_RECORD_DEFINITION.coreFieldIds.id]\n              );\n\n              const profileData: IEmailProfile = {\n                profileName: selectedRow[RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasName],\n                mailbox: selectedRow[RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasValue],\n                application: selectedRow[RX_EMAIL_PROFILES.aliasMapping.fieldIds.applicationId],\n                mailboxType: (() => {\n                  const assignee = parseInt(selectedRow[RX_EMAIL_PROFILES.aliasMapping.fieldIds.assignee], 10);\n\n                  return _map(\n                    RX_EMAIL_PROFILES.mailbox.mailboxFunctions,\n                    (mailboxFunction) => mailboxFunction.id\n                  ).includes(assignee)\n                    ? assignee\n                    : null;\n                })()\n              };\n\n              this.createEmailProfile(profileData);\n            }\n          }\n        ]\n      },\n      {\n        fieldId: `${RX_EMAIL_PROFILES.aliasMapping.fieldIds.description}`,\n        index: 2,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.create-email-profile.mailbox.label'),\n        sortable: false,\n        filterable: false\n      },\n      {\n        fieldId: `${RX_EMAIL_PROFILES.aliasMapping.fieldIds.assignee}`,\n        index: 3,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.create-email-profile.mailbox-function.label'\n        ),\n        sortable: false,\n        filterable: false,\n        cellTemplate: this.mailboxFunctionCellTemplate\n      },\n      {\n        fieldId: `${RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasValue}`,\n        index: 4,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.email-profiles.outgoing-mailbox-id.label'),\n        visible: false\n      },\n      {\n        fieldId: `${RX_EMAIL_PROFILES.aliasMapping.fieldIds.applicationName}`,\n        index: 5,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.create-email-profile.application.label')\n      }\n    ];\n\n    const recordDefinition: IRecordDefinition = {\n      fieldDefinitions: [\n        {\n          id: RX_RECORD_DEFINITION.coreFieldIds.description,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_EMAIL_PROFILES.aliasMapping.fieldIds.assignee,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_RECORD_DEFINITION.coreFieldIds.id,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasName,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_EMAIL_PROFILES.aliasMapping.fieldIds.applicationName,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasValue,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        }\n      ]\n    };\n\n    const actionButtons: IRecordGridActionButton[] = [\n      {\n        label: 'Delete',\n        style: 'tertiary',\n        icon: 'trash',\n        actions: [\n          {\n            name: () => {\n              this.rxModalService\n                .confirm({\n                  title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n                  modalStyle: RX_MODAL.modalStyles.warning,\n                  message: this.translateService.instant(\n                    'com.bmc.arsys.rx.client.admin.email-profiles.delete-confirmation.message'\n                  )\n                })\n                .then((response) => {\n                  if (response) {\n                    const selectedEmailProfiles = this.emailProfilesGrid.api.getSelectedRows();\n                    const selectedEmailProfileIds = _map(selectedEmailProfiles, RX_RECORD_DEFINITION.coreFieldIds.id);\n\n                    this.rxEmailProfilesService\n                      .deleteEmailProfiles(RX_EMAIL_PROFILES.aliasMapping.recordDefinitionName, selectedEmailProfileIds)\n                      .subscribe(() => {\n                        this.rxNotificationService.addSuccessMessage(\n                          this.translateService.instant(\n                            'com.bmc.arsys.rx.client.admin.email-profiles.deleted-email-profile.message'\n                          )\n                        );\n                        this.refreshEmailProfilesGrid();\n                      });\n                  }\n                });\n            }\n          }\n        ]\n      }\n    ];\n\n    this.emailProfilesGridConfig$ = of({\n      enableFiltering: true,\n      columns: gridColumns,\n      getRecordDefinition: () => of(recordDefinition),\n      actionButtons: actionButtons,\n      getData: this.getData,\n      styles: 'flex-fill'\n    });\n  }\n\n  private getData = (queryParams: IRecordGridDataPageParams): Observable<IDataPageResult> => {\n    delete queryParams.searchText;\n    delete queryParams.shouldIncludeTotalSize;\n\n    queryParams.recorddefinition = RX_EMAIL_PROFILES.aliasMapping.recordDefinitionName;\n\n    queryParams.propertySelection.push(\n      `${RX_RECORD_DEFINITION.coreFieldIds.status}`,\n      `${RX_EMAIL_PROFILES.aliasMapping.fieldIds.applicationId}`\n    );\n\n    if (!queryParams.queryExpression) {\n      queryParams.queryExpression = RX_EMAIL_PROFILES.aliasMapping.queryExpression;\n    } else {\n      queryParams.queryExpression += `AND ${RX_EMAIL_PROFILES.aliasMapping.queryExpression}`;\n    }\n\n    return this.rxRecordInstanceDataPageService.post({ params: queryParams }).pipe(\n      switchMap((aliasMappings: IDataPageResult) => {\n        if (aliasMappings.totalSize === 0) {\n          return of(aliasMappings);\n        } else {\n          let expression = '';\n\n          aliasMappings.data.forEach((aliasMapping) => {\n            if (aliasMapping[RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasValue] !== null) {\n              if (!isEmpty(expression)) {\n                expression += ' OR ';\n              }\n\n              expression += `'${RX_RECORD_DEFINITION.coreFieldIds.id}' = \"${\n                aliasMapping[RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasValue]\n              }\"`;\n            }\n          });\n\n          const query = {\n            queryExpression: RX_EMAIL_PROFILES.mailbox.queryExpression,\n            recorddefinition: RX_EMAIL_PROFILES.mailbox.recordDefinitionName\n          };\n\n          if (!isEmpty(expression)) {\n            query.queryExpression += ` AND ((${expression}))`;\n          }\n\n          return this.rxRecordInstanceDataPageService.post({ params: query }).pipe(\n            map((outgoingMailboxes: IDataPageResult) => {\n              if (outgoingMailboxes.totalSize === 0) {\n                return aliasMappings;\n              } else {\n                outgoingMailboxes.data.forEach((outgoingMailbox) => {\n                  aliasMappings.data = transform(\n                    aliasMappings.data,\n                    (result, value) => {\n                      if (\n                        value[RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasValue] ===\n                        outgoingMailbox[RX_RECORD_DEFINITION.coreFieldIds.id]\n                      ) {\n                        value[RX_EMAIL_PROFILES.aliasMapping.fieldIds.description] =\n                          outgoingMailbox[RX_EMAIL_PROFILES.mailbox.fieldIds.mailboxName.id];\n\n                        value[RX_EMAIL_PROFILES.aliasMapping.fieldIds.assignee] =\n                          outgoingMailbox[RX_EMAIL_PROFILES.mailbox.fieldIds.mailboxFunction];\n                      }\n\n                      result.push(value);\n                    },\n                    []\n                  );\n                });\n\n                return aliasMappings;\n              }\n            })\n          );\n        }\n      })\n    );\n  };\n\n  createEmailProfile(profile?: IEmailProfile): void {\n    this.rxModalService\n      .openDockedPanel({\n        title: profile\n          ? this.translateService.instant('com.bmc.arsys.rx.client.admin.email-profiles.update-email-profile.message')\n          : this.translateService.instant('com.bmc.arsys.rx.client.admin.email-profiles.add-new-email-profile.message'),\n        content: CreateEmailProfileComponent,\n        size: 'lg',\n        data: {\n          profile\n        }\n      })\n      .then((emailProfile) => {\n        if (!profile) {\n          this.currentRecordInstance = this.rxRecordInstanceService.getNew(\n            RX_EMAIL_PROFILES.aliasMapping.recordDefinitionName\n          );\n        }\n\n        return this.currentRecordInstance\n          .pipe(\n            map((recordInstance) => {\n              recordInstance.setFieldValue(\n                RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasType.id,\n                this.translateService.instant(RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasType.defaultValue)\n              );\n\n              recordInstance.setFieldValue(RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasName, emailProfile.profileName);\n\n              recordInstance.setFieldValue(\n                RX_EMAIL_PROFILES.aliasMapping.fieldIds.applicationId,\n                get(emailProfile, 'application[0].id', 'None')\n              );\n\n              recordInstance.setFieldValue(\n                RX_EMAIL_PROFILES.aliasMapping.fieldIds.applicationName,\n                get(emailProfile, 'application[0].name', 'None')\n              );\n\n              recordInstance.setFieldValue(\n                RX_EMAIL_PROFILES.aliasMapping.fieldIds.aliasValue,\n                emailProfile.mailbox[0][RX_RECORD_DEFINITION.coreFieldIds.id]\n              );\n\n              recordInstance.setFieldValue(RX_EMAIL_PROFILES.aliasMapping.fieldIds.description, 'Email profile');\n\n              recordInstance.setFieldValue(\n                RX_EMAIL_PROFILES.aliasMapping.fieldIds.status,\n                parseInt(emailProfile.mailboxFunction, 10) === RX_EMAIL_PROFILES.mailbox.mailboxFunctions.outgoing.id\n                  ? RX_EMAIL_PROFILES.aliasMapping.status.new\n                  : RX_EMAIL_PROFILES.aliasMapping.status.assigned\n              );\n\n              return recordInstance;\n            }),\n            switchMap((recordInstance) => {\n              if (profile) {\n                return this.rxRecordInstanceService.save(recordInstance);\n              } else {\n                return this.rxRecordInstanceService.create(recordInstance);\n              }\n            })\n          )\n          .subscribe(() => {\n            this.refreshEmailProfilesGrid();\n            this.rxNotificationService.addSuccessMessage(\n              this.translateService.instant('com.bmc.arsys.rx.client.admin.email-profiles.saved-email-profile.message')\n            );\n          });\n      })\n      .catch(noop);\n  }\n\n  private refreshEmailProfilesGrid(): void {\n    this.emailProfilesGrid.api.refresh().subscribe();\n  }\n\n  getMailboxFunctionType(dataItem: IRowDataItem): string {\n    const mailbox = find(\n      RX_EMAIL_PROFILES.mailbox.mailboxFunctions,\n      (mailboxFunction) => mailboxFunction.id === dataItem[RX_EMAIL_PROFILES.aliasMapping.fieldIds.assignee]\n    );\n\n    return mailbox ? this.translateService.instant(mailbox.label) : 'None';\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.admin.email-profiles.header.title' | translate }}\">\n  <div>\n    <button\n      adapt-button\n      type=\"button\"\n      btn-type=\"tertiary\"\n      class=\"d-icon-left-plus_circle\"\n      rx-id=\"new-email-profile-button\"\n      (click)=\"createEmailProfile()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.new.label' | translate }}\n    </button>\n  </div>\n  <rx-record-grid rx-id=\"email-profile-grid\" #emailProfilesGrid [config]=\"emailProfilesGridConfig$\"></rx-record-grid>\n</rx-admin-settings>\n\n<ng-template #mailboxFunctionCellTemplate let-dataItem=\"dataItem\">\n  <div>\n    {{ getMailboxFunctionType(dataItem) }}\n  </div>\n</ng-template>\n","import { NgModule, ComponentFactoryResolver } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmailProfilesAdminComponent } from './email-profiles.component';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { CreateEmailProfileComponent } from './create-email-profile/create-email-profile.component';\nimport {\n  AdaptButtonModule,\n  AdaptRxRadiobuttonModule,\n  AdaptRxSelectModule,\n  AdaptRxTextfieldModule\n} from '@bmc-ux/adapt-angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [EmailProfilesAdminComponent, CreateEmailProfileComponent],\n  imports: [\n    AdminSettingsModule,\n    CommonModule,\n    RecordGridModule,\n    AdaptRxTextfieldModule,\n    AdaptRxRadiobuttonModule,\n    AdaptRxSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AdaptButtonModule,\n    TranslateModule\n  ],\n  entryComponents: [EmailProfilesAdminComponent, CreateEmailProfileComponent]\n})\nexport class EmailProfilesRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-email-profiles',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(EmailProfilesAdminComponent),\n      name: 'Email profiles',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin, Observable } from 'rxjs';\nimport { IFunctionalRole, IFunctionalRoleDescriptor } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxFuntionalRoleService {\n  private path = '/api/rx/application/functionalrole';\n\n  constructor(private httpClient: HttpClient) {}\n\n  private getUrl(functionalRoleDescriptor: IFunctionalRoleDescriptor): string {\n    return `${this.path}/${encodeURIComponent(functionalRoleDescriptor.applicationName)}/${encodeURIComponent(\n      functionalRoleDescriptor.name\n    )}`;\n  }\n\n  get(functionalRoleDescriptor: IFunctionalRoleDescriptor): Observable<IFunctionalRole> {\n    return <Observable<IFunctionalRole>>this.httpClient.get(this.getUrl(functionalRoleDescriptor));\n  }\n\n  private deleteFunctionalRole(functionalRoleDescriptor: IFunctionalRoleDescriptor): Observable<any> {\n    return this.httpClient.delete(this.getUrl(functionalRoleDescriptor));\n  }\n\n  delete(roles: IFunctionalRoleDescriptor[]): Observable<any> {\n    const deleteObservables = roles.map((role) => this.deleteFunctionalRole(role));\n\n    return forkJoin(deleteObservables);\n  }\n\n  create(functionalRole: IFunctionalRole): Observable<any> {\n    return this.httpClient.post(this.path, functionalRole);\n  }\n\n  save(functionalRole: IFunctionalRole, roleName: string): Observable<any> {\n    return this.httpClient.put(\n      this.getUrl({ applicationName: functionalRole.applicationName, name: roleName }),\n      functionalRole\n    );\n  }\n}\n","import { Component, Injector, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, NgForm, ValidationErrors } from '@angular/forms';\nimport { ActiveModalRef, AdaptTreeNodeTyped, DismissReasons, RxSelectOption, TreeWrap } from '@bmc-ux/adapt-angular';\nimport {\n  IBundleDescriptor,\n  IFunctionalRole,\n  IFunctionalRoleDescriptor,\n  IRole,\n  RX_APPLICATION,\n  RxGlobalCacheService,\n  RxNotificationService,\n  RxRoleDataPageService\n} from '@helix/platform/shared/api';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { chain, filter, find, has, map as _map } from 'lodash';\nimport { forkJoin, ReplaySubject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, finalize, takeUntil } from 'rxjs/operators';\nimport { RxFuntionalRoleService } from '../functional-role.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\n\n@Component({\n  selector: 'rx-functional-role-editor',\n  templateUrl: './functional-role-editor.component.html',\n  styleUrls: ['./functional-role-editor.component.scss']\n})\nexport class FunctionalRoleEditorComponent extends RxModalClass implements OnInit, OnDestroy {\n  applicationOptions: RxSelectOption[];\n  availableRoles: AdaptTreeNodeTyped<IFunctionalRoleDescriptor>[] = [];\n  busy: Subscription;\n  functionalRole: IFunctionalRole;\n  isEditMode = false;\n  isSaveButtonDisabled = true;\n  selectedApplication: RxSelectOption;\n\n  private oldRoleName: string;\n  private selectedRolesList: AdaptTreeNodeTyped<IFunctionalRoleDescriptor>[] = [];\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n  treeWrap: TreeWrap = TreeWrap.WrapAll;\n\n  @ViewChild('functionalRoleEditorForm', { read: NgForm, static: true })\n  functionalRoleEditorForm: NgForm;\n\n  validatorFn = this.functionalRoleNameValidator.bind(this);\n\n  constructor(\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private activeModalRef: ActiveModalRef,\n    private rxRoleDataPage: RxRoleDataPageService,\n    private rxFuntionalRoleService: RxFuntionalRoleService,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  get selectedRoles(): AdaptTreeNodeTyped<IFunctionalRoleDescriptor>[] {\n    return this.selectedRolesList;\n  }\n\n  set selectedRoles(roles: AdaptTreeNodeTyped<IFunctionalRoleDescriptor>[]) {\n    this.selectedRolesList = roles;\n    this.isSaveButtonDisabled = !this.functionalRoleEditorForm.valid;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    const roleQueryParams = {\n      propertySelection: ['applicationName', 'roleName'].join(','),\n      includeSmartAppRolesOnly: true\n    };\n\n    const excludedBundles = [\n      RX_APPLICATION.innovationStudioBundleId,\n      RX_APPLICATION.standardlib,\n      RX_APPLICATION.settingsBundleId,\n      RX_APPLICATION.platformBundleId\n    ];\n\n    const startIndex = 0;\n    const pageSize = -1;\n\n    this.functionalRole = this.activeModalRef.getData().functionalRole;\n    this.isEditMode = Boolean(this.functionalRole.id);\n\n    this.busy = forkJoin([\n      this.rxRoleDataPage.get({\n        params: { startIndex, pageSize, ...roleQueryParams }\n      }),\n      this.rxGlobalCacheService.getBundleDescriptors()\n    ]).subscribe(([roleDataPage, bundleDescriptors]) => {\n      this.applicationOptions = bundleDescriptors\n        .filter((bundleDescriptor) => !excludedBundles.includes(bundleDescriptor.id))\n        .sort((bundleDescriptor: IBundleDescriptor, bundleDescriptorToCompare: IBundleDescriptor) =>\n          bundleDescriptor.friendlyName.localeCompare(bundleDescriptorToCompare.friendlyName)\n        )\n        .map((bundleDescriptor: IBundleDescriptor) => ({\n          displayValue: bundleDescriptor.friendlyName,\n          value: bundleDescriptor.id\n        }));\n\n      if (!this.isEditMode) {\n        this.selectedApplication = [this.applicationOptions[0]];\n      } else {\n        let selectedApplication = find(this.applicationOptions, { value: this.functionalRole.applicationName });\n\n        if (!selectedApplication) {\n          selectedApplication = {\n            displayValue: this.functionalRole.applicationName,\n            value: this.functionalRole.applicationName\n          };\n\n          this.applicationOptions.push(selectedApplication);\n        }\n\n        this.selectedApplication = [selectedApplication];\n        this.oldRoleName = this.functionalRole.name;\n      }\n\n      this.availableRoles = chain(roleDataPage.data)\n        .groupBy('applicationName')\n        .map((roles, application) => ({\n          children: this.getChildren(roles as IRole[]),\n          leaf: false,\n          label: find(bundleDescriptors, { id: application }).friendlyName,\n          key: application,\n          data: { name: '', applicationName: application }\n        }))\n        .value();\n\n      if (this.isEditMode) {\n        this.updateParentNodesForSelectedRoles();\n      }\n    });\n\n    this.functionalRoleEditorForm.statusChanges\n      .pipe(distinctUntilChanged(), takeUntil(this.destroyed$))\n      .subscribe((value) => {\n        this.isSaveButtonDisabled = !this.functionalRoleEditorForm.valid || this.functionalRoleEditorForm.pristine;\n      });\n\n    this.functionalRoleEditorForm.valueChanges\n      .pipe(distinctUntilChanged(), takeUntil(this.destroyed$))\n      .subscribe((value) => {\n        this.isSaveButtonDisabled = !this.functionalRoleEditorForm.valid || this.functionalRoleEditorForm.pristine;\n      });\n  }\n\n  isDirty(): boolean {\n    return this.functionalRoleEditorForm.dirty;\n  }\n\n  private getChildren(rolesForApplication: IRole[]): AdaptTreeNodeTyped<IFunctionalRoleDescriptor>[] {\n    return rolesForApplication.map((role): AdaptTreeNodeTyped<IFunctionalRoleDescriptor> => {\n      const node: AdaptTreeNodeTyped<IFunctionalRoleDescriptor> = {\n        children: null,\n        leaf: true,\n        label: role.roleName,\n        key: `${role.applicationName}:${role.roleName}`,\n        data: { name: role.roleName, applicationName: role.applicationName }\n      };\n\n      if (this.isEditMode) {\n        this.checkAndAddToSelectedRoles(node);\n      }\n\n      return node;\n    });\n  }\n\n  private checkAndAddToSelectedRoles(node: AdaptTreeNodeTyped<IFunctionalRoleDescriptor>) {\n    if (this.functionalRole.applicationRoles) {\n      if (has(this.functionalRole.applicationRoles, node.data.applicationName)) {\n        const selectedRolesList = this.functionalRole.applicationRoles[node.data.applicationName];\n\n        if (selectedRolesList.includes(node.data.name)) {\n          this.selectedRolesList.push(node);\n        }\n      }\n    }\n  }\n\n  private updateParentNodesForSelectedRoles() {\n    _map(this.selectedRolesList, (role) => {\n      const parentNode = find(\n        this.availableRoles,\n        (availableRole) => availableRole.data.applicationName === role.data.applicationName\n      );\n\n      const selectedChildNodes = filter(this.selectedRolesList, (selectedRole) =>\n        parentNode.children.find(\n          (child) =>\n            child.data.name === selectedRole.data.name &&\n            parentNode.data.applicationName === selectedRole.data.applicationName\n        )\n      );\n\n      if (selectedChildNodes.length === parentNode.children.length) {\n        if (!this.selectedRolesList.includes(parentNode)) {\n          this.selectedRolesList.push(parentNode);\n        }\n      } else {\n        parentNode.partialSelected = true;\n      }\n    });\n  }\n\n  optionFormatter(option: RxSelectOption): string {\n    return option.displayValue;\n  }\n\n  save(): void {\n    this.allowDismiss = false;\n    this.isSaveButtonDisabled = true;\n\n    if (!this.isEditMode) {\n      this.functionalRole.applicationName = this.selectedApplication[0].value;\n    }\n\n    const leafNodes = filter(this.selectedRolesList, (role) => role.leaf);\n\n    this.functionalRole.applicationRoles = chain(leafNodes)\n      .groupBy((role) => role.data.applicationName)\n      .map((roles, applicationName) => ({\n        [applicationName]: roles.map((role) => role.label)\n      }))\n      .reduce((applicationName, roles) => Object.assign(applicationName, roles), {})\n      .value();\n\n    const result$ = this.isEditMode\n      ? this.rxFuntionalRoleService.save(this.functionalRole, this.oldRoleName)\n      : this.rxFuntionalRoleService.create(this.functionalRole);\n\n    result$\n      .pipe(\n        finalize(() => {\n          this.allowDismiss = true;\n          this.isSaveButtonDisabled = false;\n        })\n      )\n      .subscribe(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.admin.functional-roles.functional-role-saved.label')\n        );\n\n        this.activeModalRef.close(true);\n      });\n  }\n\n  functionalRoleNameValidator(control: AbstractControl): ValidationErrors | null {\n    return control.value && !RX_RECORD_DEFINITION.validDefinitionNameRegex.test(control.value)\n      ? {\n          invalidRoleName: {\n            message: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.functional-roles.functional-role-name-validation.message'\n            )\n          }\n        }\n      : null;\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n","<div class=\"modal-header\">\n  <h5 class=\"modal-title\">\n    {{\n      (isEditMode\n        ? 'com.bmc.arsys.rx.client.admin.functional-roles.edit-functional-role.label'\n        : 'com.bmc.arsys.rx.client.admin.functional-roles.create-functional-role.label'\n      ) | translate\n    }}\n  </h5>\n\n  <button class=\"close dp-close\" type=\"button\" rx-id=\"x-button\" [disabled]=\"!allowDismiss\" (click)=\"cancel()\"></button>\n</div>\n\n<div class=\"modal-body functional-role-editor-modal-body d-flex\">\n  <rx-busy-indicator [options]=\"{ busy: busy, loaderType: 'section' }\"></rx-busy-indicator>\n\n  <form #functionalRoleEditorForm=\"ngForm\" class=\"w-100\">\n    <div class=\"row h-100\" *ngIf=\"applicationOptions\">\n      <div class=\"col-6 d-flex flex-column mh-100 mt-2\">\n        <adapt-rx-select\n          class=\"form-group d-block\"\n          label=\"{{ 'com.bmc.arsys.rx.client.common.application-or-library.label' | translate }}\"\n          rx-id=\"application-name\"\n          [(ngModel)]=\"selectedApplication\"\n          [options]=\"applicationOptions\"\n          [optionFormatter]=\"optionFormatter\"\n          required=\"true\"\n          name=\"application\"\n          [readonly]=\"isEditMode\"\n        >\n        </adapt-rx-select>\n        <adapt-rx-textfield\n          rx-id=\"name\"\n          class=\"form-group d-block\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.functional-roles.functional-role-name.label' | translate }}\"\n          required=\"true\"\n          [(ngModel)]=\"functionalRole.name\"\n          name=\"name\"\n          [rxCustomValidators]=\"validatorFn\"\n        >\n        </adapt-rx-textfield>\n        <adapt-rx-textfield\n          rx-id=\"description\"\n          class=\"form-group d-block\"\n          required=\"true\"\n          [(ngModel)]=\"functionalRole.description\"\n          label=\"{{ 'com.bmc.arsys.rx.client.common.description.label' | translate }}\"\n          name=\"description\"\n        ></adapt-rx-textfield>\n        <adapt-rx-textfield\n          *ngIf=\"isEditMode\"\n          rx-id=\"id\"\n          class=\"form-group d-block\"\n          [(ngModel)]=\"functionalRole.id\"\n          label=\"{{ 'com.bmc.arsys.rx.client.common.id.label' | translate }}\"\n          name=\"id\"\n          [readonly]=\"true\"\n          [disabledStyleForReadonlyState]=\"true\"\n        ></adapt-rx-textfield>\n      </div>\n      <div class=\"col-6 d-flex flex-column mh-100 mt-2\">\n        <adapt-rx-control-label label=\"Roles\"> </adapt-rx-control-label>\n        <div class=\"card roles-list-wrapper flex-grow-1\">\n          <div class=\"card-block\">\n            <adapt-tree\n              *ngIf=\"availableRoles.length\"\n              [value]=\"availableRoles\"\n              filter=\"true\"\n              selectionMode=\"checkbox\"\n              [(selection)]=\"selectedRoles\"\n              [wrap]=\"treeWrap\"\n            >\n            </adapt-tree>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n<div class=\"modal-footer\">\n  <button\n    adapt-button\n    btn-type=\"primary\"\n    type=\"button\"\n    rx-id=\"save-button\"\n    (click)=\"save()\"\n    [adaptInlineLoader]=\"!allowDismiss\"\n    [disabled]=\"isSaveButtonDisabled || !allowDismiss\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n  <button\n    adapt-button\n    btn-type=\"secondary\"\n    type=\"button\"\n    rx-id=\"cancel-button\"\n    (click)=\"cancel()\"\n    [disabled]=\"!allowDismiss\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n","export const RX_FUNCTIONAL_ROLES = {\n  recordDefinitionName: 'Functional Roles',\n  fieldIds: {\n    applicationName: 1720,\n    name: 1721\n  }\n};\n","import { Component, ViewChild } from '@angular/core';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IFunctionalRole, RxNotificationService } from '@helix/platform/shared/api';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport {\n  IRecordGridActionButton,\n  IRecordGridColumn,\n  IRecordGridConfig,\n  RecordGridComponent\n} from '@helix/platform/view/components';\nimport { castArray, noop } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { FunctionalRoleEditorComponent } from './functional-role-editor/functional-role-editor.component';\nimport { RxFuntionalRoleService } from './functional-role.service';\nimport { RX_FUNCTIONAL_ROLES } from './functional-roles.constant';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-functional-roles',\n  templateUrl: './functional-roles.component.html'\n})\nexport class FunctionalRolesAdminComponent {\n  gridConfig$: Observable<IRecordGridConfig>;\n\n  @ViewChild('functionalRolesRecordGrid', { static: false })\n  functionalRolesRecordGrid: RecordGridComponent;\n\n  constructor(\n    private rxFuntionalRoleService: RxFuntionalRoleService,\n    private rxNotificationService: RxNotificationService,\n    private rxModalService: RxModalService,\n    private translateService: TranslateService\n  ) {\n    this.gridConfig$ = new Observable((observer) => {\n      observer.next({\n        recordDefinitionName: RX_FUNCTIONAL_ROLES.recordDefinitionName,\n        columns: this.getColumns(),\n        actionButtons: this.getActionButtons(),\n        styles: 'flex-fill'\n      });\n\n      observer.complete();\n    });\n  }\n\n  private getActionButtons(): IRecordGridActionButton[] {\n    return [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n        style: 'tertiary',\n        iconCls: 'trash',\n        actions: [\n          {\n            name: () => {\n              this.rxModalService\n                .confirm({\n                  title: this.translateService.instant('com.bmc.arsys.rx.client.dialog.warning.label'),\n                  modalStyle: RX_MODAL.modalStyles.warning,\n                  message: this.translateService.instant(\n                    'com.bmc.arsys.rx.client.admin.functional-roles.functional-role-delete-confirmation.message'\n                  )\n                })\n                .then((response) => {\n                  if (response) {\n                    const selectedRecords = castArray(this.functionalRolesRecordGrid.api.getSelectedRows());\n\n                    const rolesToDelete = selectedRecords.map((record) => {\n                      return {\n                        applicationName: record[RX_FUNCTIONAL_ROLES.fieldIds.applicationName],\n                        name: record[RX_FUNCTIONAL_ROLES.fieldIds.name]\n                      };\n                    });\n\n                    this.rxFuntionalRoleService.delete(rolesToDelete).subscribe(() => {\n                      this.rxNotificationService.addSuccessMessage(\n                        this.translateService.instant(\n                          'com.bmc.arsys.rx.client.admin.functional-roles.functional-role-deleted.message'\n                        )\n                      );\n                      this.functionalRolesRecordGrid.api.refresh().subscribe();\n                    });\n                  }\n                });\n            }\n          }\n        ]\n      }\n    ];\n  }\n\n  private getColumns(): IRecordGridColumn[] {\n    return [\n      {\n        fieldId: `${RX_FUNCTIONAL_ROLES.fieldIds.name}`,\n        index: 0,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n        clickable: true,\n        actions: [\n          {\n            name: (previousActionResult: any, lastActionRow: IRowDataItem) => this.editFunctionalRole(lastActionRow)\n          }\n        ]\n      },\n      {\n        fieldId: `${RX_FUNCTIONAL_ROLES.fieldIds.applicationName}`,\n        index: 1,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.functional-roles.application-library-name.label'\n        )\n      },\n      {\n        fieldId: `${RX_RECORD_DEFINITION.coreFieldIds.description}`,\n        index: 2,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.chatbots.description.title')\n      },\n      {\n        fieldId: `${RX_RECORD_DEFINITION.coreFieldIds.id}`,\n        index: 3,\n        title: 'ID'\n      }\n    ];\n  }\n\n  private openModal(data: IFunctionalRole): void {\n    this.rxModalService\n      .openModal({\n        content: FunctionalRoleEditorComponent,\n        size: 'default',\n        data: {\n          functionalRole: data\n        }\n      })\n      .then((result) => {\n        if (result) {\n          this.functionalRolesRecordGrid.api.refresh().subscribe();\n        }\n      })\n      .catch(noop);\n  }\n\n  createFunctionalRole(): void {\n    this.openModal({\n      name: '',\n      applicationName: '',\n      description: '',\n      applicationRoles: {}\n    });\n  }\n\n  private editFunctionalRole(functionalRoleRow: IRowDataItem): void {\n    this.rxFuntionalRoleService\n      .get({\n        applicationName: functionalRoleRow[RX_FUNCTIONAL_ROLES.fieldIds.applicationName],\n        name: functionalRoleRow[RX_FUNCTIONAL_ROLES.fieldIds.name]\n      })\n      .subscribe((functionalRole: IFunctionalRole) => {\n        this.openModal(functionalRole);\n      });\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.functional.roles' | translate }}\">\n  <button\n    adapt-button\n    type=\"button\"\n    btn-type=\"tertiary\"\n    class=\"d-icon-plus_circle align-self-start\"\n    rx-id=\"new-button\"\n    (click)=\"createFunctionalRole()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.new.label' | translate }}\n  </button>\n  <rx-record-grid rx-id=\"functional-roles-grid\" #functionalRolesRecordGrid [config]=\"gridConfig$\"> </rx-record-grid>\n</rx-admin-settings>\n","import { CommonModule } from '@angular/common';\nimport { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n  AdaptBusyModule,\n  AdaptButtonModule,\n  AdaptRxFormControlModule,\n  AdaptRxSelectModule,\n  AdaptRxTextfieldModule,\n  AdaptTreeModule\n} from '@bmc-ux/adapt-angular';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { RxBusyIndicatorModule, RxDirectivesModule } from '@helix/platform/ui-kit';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { FunctionalRoleEditorComponent } from './functional-role-editor/functional-role-editor.component';\nimport { FunctionalRolesAdminComponent } from './functional-roles.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [FunctionalRolesAdminComponent, FunctionalRoleEditorComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    AdminSettingsModule,\n    RecordGridModule,\n    AdaptRxTextfieldModule,\n    AdaptButtonModule,\n    AdaptBusyModule,\n    AdaptRxSelectModule,\n    AdaptRxFormControlModule,\n    AdaptTreeModule,\n    RxBusyIndicatorModule,\n    TranslateModule,\n    RxDirectivesModule\n  ],\n  entryComponents: [FunctionalRolesAdminComponent]\n})\nexport class FunctionalRolesRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-functional-roles',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(FunctionalRolesAdminComponent),\n      name: 'Functional roles',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { IDataPageResult } from '@helix/platform/shared/api';\nimport { of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { IHkmFolder, IHkmMappingConfiguration, IHkmPortal, IItsmCompany } from './hkm-access-mapping.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxHkmAccessMappingService {\n  constructor(private httpClient: HttpClient) {}\n\n  private readonly knowledgeApi = '/api/rx/application/knowledge';\n  private readonly folderCache = new Map<String, IHkmFolder[]>();\n\n  public callItsmMappingApi() {\n    return this.httpClient.get<IDataPageResult<IItsmCompany>>(`${this.knowledgeApi}/mapping/itsm`);\n  }\n\n  public callHkmMappingApi() {\n    return this.httpClient.get<IHkmPortal[]>(`${this.knowledgeApi}/mapping/hkm`);\n  }\n\n  public getFolderAccess(userGroupId: number, portalId: number, nodeId: number) {\n    const cacheKey = `${userGroupId}-${portalId}-${nodeId}`;\n\n    if (this.folderCache.has(cacheKey)) {\n      return of(this.folderCache.get(cacheKey));\n    }\n\n    const request = encodeURIComponent(`v1/contentaccess/${userGroupId}/${portalId}/${nodeId}`);\n\n    return this.httpClient\n      .get<IHkmFolder[]>(`${this.knowledgeApi}?ComAroundRequest=${request}`)\n      .pipe(tap((folders) => this.folderCache.set(cacheKey, folders)));\n  }\n\n  public deleteAccessMappings(hkmGroupMappingIds: string[]) {\n    return this.httpClient.delete<void>(`${this.knowledgeApi}/mapping/delete/${hkmGroupMappingIds.join(',')}`);\n  }\n\n  public saveAccessMappings(hkmGroupMappings: IHkmMappingConfiguration[]) {\n    return this.httpClient.post<void>(`${this.knowledgeApi}/mapping/save`, hkmGroupMappings);\n  }\n}\n","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { uniqBy, flatMap } from 'lodash';\n\nimport { AdaptTreeNode, DockedPanelContext, DismissReasons, Alert } from '@bmc-ux/adapt-angular';\n\nimport { RxNotificationService } from '@helix/platform/shared/api';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  IHkmFolder,\n  IHkmPortal,\n  IHkmPortalUserGroup,\n  IItsmCompany,\n  IItsmSupportGroup\n} from '../hkm-access-mapping.types';\n\nimport { RxModalService, RX_MODAL } from '@helix/platform/ui-kit';\nimport { FormControl } from '@angular/forms';\nimport { forkJoin, of, ReplaySubject } from 'rxjs';\nimport { startWith, switchMap, map, takeUntil, tap } from 'rxjs/operators';\nimport { RxHkmAccessMappingService } from '../hkm-access-mapping.service';\n\n@Component({\n  selector: 'rx-hkm-access-map-editor',\n  templateUrl: './hkm-access-map-editor.component.html'\n})\nexport class HkmAccessMapEditorComponent implements OnInit, OnDestroy {\n  constructor(\n    private dockedPanelContext: DockedPanelContext,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService,\n    private rxModalService: RxModalService,\n    private rxHkmAccessMappingService: RxHkmAccessMappingService\n  ) {\n    const contextData = this.dockedPanelContext.getData();\n\n    this.selectedItsmSupportGroups = contextData.selectedSupportGroups;\n    this.portals = contextData.hkmPortals;\n    this.company = contextData.company;\n    this.portalUserGroups = contextData.selectedHkmPortal.userGroups;\n    this.selectedPortal = new FormControl([contextData.selectedHkmPortal]);\n    this.selectedUserGroups = new FormControl(contextData.selectedHkmUserGroups);\n  }\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private userGroupToFoldersMap = new Map<IHkmPortalUserGroup, IHkmFolder[]>();\n  private hkmFolders: IHkmFolder[];\n\n  filesTree: AdaptTreeNode[];\n  company: IItsmCompany;\n  selectedItsmSupportGroups: IItsmSupportGroup[] = [];\n  selectedUserGroups: FormControl;\n  portalUserGroups: IHkmPortalUserGroup[];\n  portals: IHkmPortal[];\n  selectedPortal: FormControl;\n\n  alertConfig: Alert = {\n    title: '',\n    content: this.translateService.instant('com.bmc.arsys.rx.client.hkm-access-mapping-editor.mapping-info.message'),\n    type: 'inline',\n    variant: 'info'\n  };\n\n  ngOnInit(): void {\n    this.selectedPortal.valueChanges.pipe(takeUntil(this.destroyed$)).subscribe(([portal]: IHkmPortal[]) => {\n      this.portalUserGroups = portal.userGroups;\n      this.selectedUserGroups.reset([]);\n    });\n\n    this.selectedUserGroups.valueChanges\n      .pipe(\n        takeUntil(this.destroyed$),\n        startWith(this.selectedUserGroups.value || []),\n        switchMap((userGroups: IHkmPortalUserGroup[]) => {\n          if (userGroups.length === 0) {\n            return of(userGroups);\n          }\n\n          const [selectedPortal]: IHkmPortal[] = this.selectedPortal.value;\n\n          const folderAcecssRequests = userGroups.map((userGroup) => {\n            return this.rxHkmAccessMappingService\n              .getFolderAccess(userGroup.id, selectedPortal.portalId, selectedPortal.nodeId)\n              .pipe(tap((folders) => this.userGroupToFoldersMap.set(userGroup, folders)));\n          });\n\n          return forkJoin(folderAcecssRequests).pipe(map(() => userGroups));\n        })\n      )\n      .subscribe((userGroups) => {\n        this.setUpFoldersFromHkmPortalUserGroups(userGroups);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  cancel(): void {\n    this.dockedPanelContext.dismiss(DismissReasons.ESC);\n  }\n\n  save(): void {\n    if (this.selectedItsmSupportGroups.length === 0) {\n      this.rxNotificationService.addErrorMessage(\n        this.translateService.instant('com.bmc.arsys.rx.client.hkm-access-mapping-editor.select-support-group.message')\n      );\n\n      return;\n    }\n\n    if (this.selectedUserGroups.value.length === 0) {\n      this.rxNotificationService.addErrorMessage(\n        this.translateService.instant('com.bmc.arsys.rx.client.hkm-access-mapping-editor.select-user-group.message')\n      );\n\n      return;\n    }\n\n    const hkmGroupFoldersNames: string[] = this.hkmFolders.map((data) => data.name);\n    const selectedUserGroups = this.selectedUserGroups.value as IHkmPortalUserGroup[];\n\n    const mappingConfigurations = this.selectedItsmSupportGroups.map((itsmSupportGroup: IItsmSupportGroup) => ({\n      AppCompanyID: this.company.permissionId,\n      AppCompanyName: this.company.name,\n      AppGroupName: itsmSupportGroup.supportGroupName,\n      AppName: 'ITSM',\n      IsMapped: true,\n      AppGroupID: itsmSupportGroup.permissionGroupId,\n      HKMPortalID: this.selectedPortal.value[0].portalId,\n      HKMPortalName: this.selectedPortal.value[0].portalName,\n      HKMRoleName: selectedUserGroups.map((group) => group.role).join(','),\n      HKMGroupID: selectedUserGroups.map((group) => group.id).join(','),\n      HKMGroupFoldersNames: hkmGroupFoldersNames,\n      HKMGroupName: selectedUserGroups.map((group) => group.name).join(',')\n    }));\n\n    this.rxHkmAccessMappingService.saveAccessMappings(mappingConfigurations).subscribe(\n      () => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.admin.connection-mapping.mapping-saved.message')\n        );\n\n        this.dockedPanelContext.close(DismissReasons.CLOSE_BTN);\n      },\n      () => {\n        this.dockedPanelContext.close(DismissReasons.BACKDROP_CLICK);\n      }\n    );\n  }\n\n  private hkmFolderSortFn(first: IHkmFolder, second: IHkmFolder): number {\n    if (first.hasFolderChildren !== second.hasFolderChildren) {\n      return +second.hasFolderChildren - +first.hasFolderChildren;\n    }\n\n    return first.name.localeCompare(second.name);\n  }\n\n  private setUpFoldersFromHkmPortalUserGroups(userGroups: IHkmPortalUserGroup[]): void {\n    const items = flatMap(userGroups, (group) =>\n      this.userGroupToFoldersMap\n        .get(group)\n        .filter((folder) => folder.haveAccess)\n        .map((folder) => ({ group, folder }))\n    );\n\n    items.sort((first, second) => this.hkmFolderSortFn(first.folder, second.folder));\n\n    const uniqueItems = uniqBy(items, (item) => item.folder.nodeId);\n\n    this.hkmFolders = uniqueItems.map((item) => item.folder);\n\n    this.filesTree = uniqueItems.map((item) => ({\n      data: item,\n      expandedIcon: item.folder.hasFolderChildren ? 'd-icon-folder_open' : 'd-icon-folder_o',\n      collapsedIcon: item.folder.hasFolderChildren ? 'd-icon-folder' : 'd-icon-folder_o',\n      label: item.folder.name,\n      level: 1,\n      expression: `'${item.folder.nodeId}'`,\n      children: null,\n      leaf: !item.folder.hasFolderChildren\n    }));\n  }\n\n  deleteVisibilityGroup(group: IItsmSupportGroup): void {\n    this.rxModalService\n      .confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.translateService.instant(\n          'com.bmc.arsys.rx.client.hkm-access-mapping-editor.delete-visibility-group.message'\n        )\n      })\n      .then((result: boolean) => {\n        if (result) {\n          this.selectedItsmSupportGroups.forEach((element, index) => {\n            if (element.supportGroupName === group.supportGroupName) {\n              this.selectedItsmSupportGroups.splice(index, 1);\n            }\n          });\n        }\n      });\n  }\n\n  onNodeExpand({ node }: { node: AdaptTreeNode }): void {\n    if (node && !node.children) {\n      this.rxHkmAccessMappingService\n        .getFolderAccess(node.data.group.id, node.data.folder.portalId, node.data.folder.nodeId)\n        .subscribe((hkmFolders: IHkmFolder[]) => {\n          node.children = hkmFolders\n            .filter((folder) => folder.haveAccess)\n            .sort(this.hkmFolderSortFn)\n            .map((folder: IHkmFolder) => ({\n              data: { group: node.data.group, folder },\n              expandedIcon: folder.hasFolderChildren ? 'd-icon-folder_open' : 'd-icon-folder_o',\n              collapsedIcon: folder.hasFolderChildren ? 'd-icon-folder' : 'd-icon-folder_o',\n              label: folder.name,\n              level: 1,\n              expression: `'${folder.nodeId}'`,\n              children: null,\n              leaf: !folder.hasFolderChildren\n            }));\n        });\n    }\n  }\n\n  supportGroupFormatter(group: IItsmSupportGroup): string {\n    return group.supportGroupName;\n  }\n\n  userGroupOptionformatter(group: IHkmPortalUserGroup): string {\n    return group.name;\n  }\n\n  hkmPortalFormatter(portal: IHkmPortal): string {\n    return portal.portalName;\n  }\n}\n","<div class=\"container col d-flex flex-column\" style=\"overflow-y: auto\">\n  <div class=\"row justify-content-between\">\n    <div class=\"col-5 form-control-label\">\n      <adapt-rx-textfield\n        [disabled]=\"true\"\n        rx-id=\"company-field\"\n        [label]=\"'com.bmc.arsys.rx.client.hkm-access-mapping.company.label' | translate\"\n        [(ngModel)]=\"company.name\"\n      ></adapt-rx-textfield>\n    </div>\n    <div class=\"col-1 d-flex align-items-end p-2 justify-content-center\">\n      <adapt-icon name=\"arrow_right\"></adapt-icon>\n    </div>\n    <div class=\"col-6 form-control-label\">\n      <adapt-rx-select\n        [formControl]=\"selectedPortal\"\n        [options]=\"portals\"\n        rx-id=\"portal-select\"\n        [optionFormatter]=\"hkmPortalFormatter\"\n        [label]=\"'com.bmc.arsys.rx.client.hkm-access-mapping-editor.header.label' | translate\"\n      ></adapt-rx-select>\n    </div>\n  </div>\n  <hr />\n  <div class=\"row\">\n    <div class=\"col\">\n      <adapt-alert [config]=\"alertConfig\"></adapt-alert>\n    </div>\n  </div>\n  <div class=\"row flex-grow-1 py-3 justify-content-between\">\n    <div class=\"col-5 d-flex flex-column\">\n      <div class=\"pb-1\">\n        <span class=\"form-control-label\">\n          {{\n            'com.bmc.arsys.rx.client.hkm-access-mapping-editor.support-group.label'\n              | translate: { count: selectedItsmSupportGroups.length }\n          }}\n        </span>\n      </div>\n      <div class=\"card flex-grow-1\" rx-id=\"selected-support-groups\">\n        <div\n          class=\"d-flex px-2 align-items-center adapt-rx-list-item cursor-pointer\"\n          *ngFor=\"let group of selectedItsmSupportGroups\"\n        >\n          <span>{{ group.supportGroupName }}</span>\n          <button\n            type=\"button\"\n            [disabled]=\"false\"\n            class=\"btn btn-link d-icon-trash p-1\"\n            rx-id=\"delete-button\"\n            (click)=\"deleteVisibilityGroup(group)\"\n          ></button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-1 d-flex p-2 mt-4 justify-content-center\">\n      <adapt-icon [name]=\"'arrow_right'\"></adapt-icon>\n    </div>\n    <div class=\"col-6 d-flex flex-column\">\n      <adapt-rx-select\n        [formControl]=\"selectedUserGroups\"\n        rx-id=\"user-groups-select\"\n        [label]=\"'com.bmc.arsys.rx.client.hkm-access-mapping-editor.select-hkm-user-groups.label' | translate\"\n        [options]=\"portalUserGroups\"\n        [optionFormatter]=\"userGroupOptionformatter\"\n        [selectAllButton]=\"true\"\n        [deselectAllButton]=\"true\"\n        [enableFilter]=\"true\"\n        [multiple]=\"true\"\n      >\n      </adapt-rx-select>\n      <div class=\"mt-3 pb-1\">\n        <span class=\"form-control-label\">\n          {{ 'com.bmc.arsys.rx.client.hkm-access-mapping-editor.accessible-folders.title' | translate }}\n        </span>\n      </div>\n      <div class=\"card flex-grow-1 p-2\">\n        <div class=\"mh-100\" style=\"overflow-y: auto\">\n          <adapt-tree [value]=\"filesTree\" (onNodeExpand)=\"onNodeExpand($event)\"> </adapt-tree>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"dp-footer\">\n  <div>\n    <button rx-id=\"save-button\" type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"save()\">\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n  </div>\n  <div>\n    <button rx-id=\"cancel-button\" type=\"button\" class=\"btn btn-secondary\" (click)=\"cancel()\">\n      {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n    </button>\n  </div>\n</div>\n","import { IRowDataItem } from '@helix/platform/view/api';\n\nexport interface IHkmPortals {\n  portals: IHkmPortal[];\n}\n\nexport interface IItsmCompanies {\n  Companies: IItsmCompany[];\n}\n\nexport interface IItsmCompany {\n  permissionId: string;\n  name: string;\n  type: string;\n  category: string;\n  supportGroups: IItsmSupportGroup[];\n}\n\nexport interface IItsmSupportGroup {\n  requestId: string;\n  supportGroupId: string;\n  permissionGroup: string;\n  permissionGroupId: string;\n  description: string;\n  viewAccess: string;\n  supportCompany: string;\n  supportGroupOrganization: string;\n  supportGroupName: string;\n  navigationTier1: string;\n  navigationTier2: string;\n  navigationTier3: string;\n  navigationTier4: string;\n  lineOfBusiness: string[];\n  isCompany: boolean;\n  id: string;\n  appName: string;\n  isMapped: boolean;\n  appCompanyName: string;\n  hkmportalName: string;\n  hkmroleName: string;\n  hkmgroupID: string;\n  hkmgroupFoldersName: string;\n  hkmgroupName: string;\n}\n\nexport interface ILineOfBusiness {\n  id: string;\n  name: string;\n}\n\nexport interface IHkmPortal {\n  portalId: number;\n  portalName: string;\n  status: string;\n  type: string;\n  nodeId: number;\n  userGroups: IHkmPortalUserGroup[];\n}\n\nexport interface IHkmPortalUserGroup {\n  id: number;\n  name: string;\n  status: string;\n  type: string;\n  role: string;\n  portalId: number;\n  portalNames: string[];\n}\n\nexport interface IHkmFolder {\n  nodeId: number;\n  name: string;\n  portalId: number;\n  type: string;\n  tag: string;\n  isReadonly: boolean;\n  haveAccess: boolean;\n  hasFolderChildren: boolean;\n}\n\nexport interface IHkmMappingConfiguration {\n  AppName: string;\n  IsMapped: boolean;\n  AppCompanyName: string;\n  AppGroupName: string;\n  AppCompanyID: string;\n  AppGroupID: string;\n  HKMPortalName: string;\n  HKMPortalID: string;\n  HKMGroupName: string;\n  HKMRoleName: string;\n  HKMGroupFoldersNames: string[];\n  HKMGroupID: string;\n}\n\nexport enum PredefinedLobOptions {\n  All = '$ALL$',\n  None = '$NONE$'\n}\n\nexport type ISupportGroupRow = IItsmSupportGroup & IRowDataItem;\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DataCellTemplateParams } from '@bmc-ux/adapt-table';\nimport { AdaptDockedPanelService, DismissReasons } from '@bmc-ux/adapt-angular';\nimport { chain, isEmpty, noop } from 'lodash';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { HkmAccessMapEditorComponent } from './hkm-access-map-editor/hkm-access-map-editor.component';\nimport { RxHkmAccessMappingService } from './hkm-access-mapping.service';\n\nimport {\n  IHkmPortal,\n  IHkmPortalUserGroup,\n  IItsmCompany,\n  IItsmSupportGroup,\n  ILineOfBusiness,\n  ISupportGroupRow,\n  PredefinedLobOptions\n} from './hkm-access-mapping.types';\n\nimport { IRecordDefinition, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxModalService, RX_MODAL } from '@helix/platform/ui-kit';\nimport { of, Subscription } from 'rxjs';\n\nimport {\n  IRecordGridActionButton,\n  IRecordGridColumn,\n  IRecordGridConfig,\n  RecordGridComponent,\n  RecordGridFilterMode,\n  RowSelectionMode\n} from '@helix/platform/view/components';\n\nimport { OpenViewActionModalSize } from '@helix/platform/view/api';\n\n@Component({\n  selector: 'rx-admin-hkm-access-mapping',\n  templateUrl: './hkm-access-mapping.component.html'\n})\nexport class HkmAccessMappingAdminComponent extends BaseViewComponent implements OnInit {\n  constructor(\n    private adaptDockedPanelService: AdaptDockedPanelService,\n    private translateService: TranslateService,\n    private rxModalService: RxModalService,\n    private rxHkmAccessMappingService: RxHkmAccessMappingService\n  ) {\n    super();\n  }\n\n  @ViewChild('itsmHkmMappingDataGrid')\n  itsmHkmMappingDataGrid: RecordGridComponent;\n\n  @ViewChild('statusColTemplate', { static: true })\n  statusColTemplate: TemplateRef<DataCellTemplateParams>;\n\n  @ViewChild('visibilityGroupColTemplate', { static: true })\n  visibilityGroupColTemplate: TemplateRef<DataCellTemplateParams>;\n\n  private readonly predefinedLinesOfBusiness: ILineOfBusiness[] = [\n    { id: PredefinedLobOptions.All, name: this.translateService.instant('com.bmc.arsys.rx.client.common.all.label') },\n    { id: PredefinedLobOptions.None, name: this.translateService.instant('com.bmc.arsys.rx.client.common.none.label') }\n  ];\n\n  private gridColumns: IRecordGridColumn[];\n  private hkmPortals: IHkmPortal[] = [];\n  private supportGroups: IItsmSupportGroup[] = [];\n  selectedLob: ILineOfBusiness = this.predefinedLinesOfBusiness[0];\n  busy: Subscription;\n  itsmCompanies: IItsmCompany[] = [];\n  selectedCompany: IItsmCompany;\n  linesOfBusiness: ILineOfBusiness[] = [];\n  recordGridConfig$: Observable<IRecordGridConfig>;\n\n  ngOnInit(): void {\n    this.loadItsmHkmMappingData();\n\n    this.rxHkmAccessMappingService.callHkmMappingApi().subscribe((portals) => {\n      this.hkmPortals = portals;\n    });\n\n    this.setupGridInit();\n  }\n\n  private setupGridInit(): void {\n    this.gridColumns = [\n      {\n        fieldId: 'supportGroupName',\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.hkm-permission-group.title'\n        ),\n        filterable: false,\n        cellTemplate: this.visibilityGroupColTemplate\n      },\n      {\n        fieldId: 'description',\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.support-group-description.title'\n        ),\n        filterable: false\n      },\n      {\n        fieldId: 'permissionGroupId',\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.hkm-permission-group-id.title'\n        ),\n        filterable: false,\n        visible: false\n      },\n      {\n        filterable: true,\n        fieldId: 'isMapped',\n        title: this.translateService.instant('com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.status.title'),\n        cellTemplate: this.statusColTemplate\n      },\n      {\n        fieldId: 'hkmportalName',\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.hkm-portal-name.title'\n        ),\n        visible: true,\n        filterable: false\n      },\n      {\n        fieldId: 'hkmgroupName',\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.hkm-group-name.title'\n        ),\n        visible: true,\n        filterable: false\n      },\n      {\n        fieldId: 'hkmgroupID',\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.hkm-group-id.title'\n        ),\n        visible: false,\n        filterable: false\n      },\n      {\n        fieldId: 'hkmroleName',\n        title: this.translateService.instant('com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.hkm-role.title'),\n        visible: true,\n        filterable: false\n      }\n    ];\n\n    const gridRecordDefinition: IRecordDefinition = {\n      fieldDefinitions: [\n        {\n          id: 'supportGroupName',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'description',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'permissionGroupId',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'isMapped',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.selection,\n          optionNamesById: {\n            true: this.translateService.instant(\n              'com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.status.mapped.label'\n            ),\n            false: this.translateService.instant(\n              'com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.status.unmapped.label'\n            )\n          }\n        },\n        {\n          id: 'hkmportalName',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'hkmgroupName',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'hkmgroupID',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'hkmroleName',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        }\n      ]\n    };\n\n    const actionButtons: IRecordGridActionButton[] = [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.hkm-access-mapping.grid.map-access.button.label'),\n        style: 'tertiary',\n        iconCls: 'cubes_restart',\n        disabled: (selectedRows: ISupportGroupRow[]) =>\n          !this.hasPortals() || selectedRows.length === 0 || selectedRows.some((row) => row.isMapped),\n        actions: [{ name: () => this.openAccessMappingDialog() }]\n      },\n      {\n        label: this.translateService.instant(\n          'com.bmc.arsys.rx.client.hkm-access-mapping.grid.unmap-access.button.label'\n        ),\n        style: 'tertiary',\n        iconCls: 'cube_cross_circle',\n        disabled: (selectedRows: ISupportGroupRow[]) =>\n          !this.hasPortals() || selectedRows.length === 0 || selectedRows.some((row) => !row.isMapped),\n        actions: [{ name: () => this.deleteMapping() }]\n      }\n    ];\n\n    this.recordGridConfig$ = of({\n      columns: this.gridColumns,\n      emptyStateLabelText: this.translateService.instant(\n        'com.bmc.arsys.rx.innovation-studio.external-record-wizard.document-selection.grid.empty-state.label'\n      ),\n      enableRowSelection: RowSelectionMode.Multiple,\n      enableFiltering: true,\n      recordIdField: 'requestId',\n      styles: 'flex-fill',\n      useExternalFiltering: false,\n      getRecordDefinition: () => of(gridRecordDefinition),\n      getData: () =>\n        of({\n          totalSize: this.supportGroups.length,\n          data: this.supportGroups\n        }),\n      actionButtons,\n      filterMode: RecordGridFilterMode.Basic\n    });\n  }\n\n  private setUpValues(): void {\n    if (this.selectedLob.id === PredefinedLobOptions.All) {\n      this.supportGroups = [...this.selectedCompany.supportGroups];\n    } else if (this.selectedLob.id === PredefinedLobOptions.None) {\n      this.supportGroups = this.selectedCompany.supportGroups.filter((group) => isEmpty(group.lineOfBusiness));\n    } else {\n      this.supportGroups = this.selectedCompany.supportGroups.filter((group) =>\n        group.lineOfBusiness?.some((lob) => lob === this.selectedLob.id)\n      );\n    }\n\n    this.itsmHkmMappingDataGrid.api.refresh().subscribe();\n  }\n\n  private loadItsmHkmMappingData(): void {\n    this.busy = this.rxHkmAccessMappingService\n      .callItsmMappingApi()\n      .subscribe(({ data }: { data: IItsmCompany[] }): void => {\n        this.itsmCompanies = [...data];\n\n        const extractedLinesOfBusiness = chain(data)\n          .flatMap((company) => company.supportGroups)\n          .filter((group) => !isEmpty(group.lineOfBusiness))\n          .flatMap((group) => group.lineOfBusiness)\n          .sort()\n          .sortedUniq()\n          .map((lob) => ({ id: lob, name: lob }))\n          .value();\n\n        this.linesOfBusiness = [...this.predefinedLinesOfBusiness, ...extractedLinesOfBusiness];\n\n        if (isEmpty(this.selectedCompany?.name)) {\n          this.setSelected(0);\n        } else {\n          const currentCompanyId = this.selectedCompany.permissionId;\n          this.selectedCompany = this.itsmCompanies.find((company) => company.permissionId === currentCompanyId);\n          this.setUpValues();\n        }\n      });\n  }\n\n  setSelected(index: number): void {\n    this.selectedCompany = this.itsmCompanies[index];\n    this.setUpValues();\n  }\n\n  setSelectedLineOfBusiness(lob: ILineOfBusiness): void {\n    this.selectedLob = lob;\n    this.setUpValues();\n  }\n\n  openAccessMappingDialog(supportGroup: IItsmSupportGroup = null): void {\n    let title = this.translateService.instant('com.bmc.arsys.rx.client.hkm-access-mapping-editor.new.title');\n    let portal = this.hkmPortals[0];\n    let selectedSupportGroups: IItsmSupportGroup[] =\n      this.itsmHkmMappingDataGrid.api.getSelectedRows() as ISupportGroupRow[];\n    let userGroups = [];\n\n    if (supportGroup) {\n      const mappedUserGroupsIds = supportGroup.hkmgroupID.split(',').map(Number);\n      title = this.translateService.instant('com.bmc.arsys.rx.client.hkm-access-mapping-editor.edit.title');\n      portal = this.hkmPortals.find((hkmPortal) => hkmPortal.portalName === supportGroup.hkmportalName);\n      selectedSupportGroups = [supportGroup];\n      userGroups = portal.userGroups.filter((group) => mappedUserGroupsIds.includes(group.id));\n    }\n\n    this.openDetailDialog(title, selectedSupportGroups, portal, userGroups);\n  }\n\n  private openDetailDialog(\n    dialogTitle: string,\n    selectedSupportGroups: IItsmSupportGroup[],\n    selectedHkmPortal: IHkmPortal,\n    selectedHkmUserGroups: IHkmPortalUserGroup[] = []\n  ): void {\n    if (this.hkmPortals?.length > 0) {\n      this.adaptDockedPanelService\n        .open({\n          title: dialogTitle,\n          content: HkmAccessMapEditorComponent,\n          size: OpenViewActionModalSize.Small,\n          data: {\n            company: this.selectedCompany,\n            hkmPortals: this.hkmPortals,\n            selectedLob: this.selectedLob,\n            selectedSupportGroups,\n            selectedHkmPortal,\n            selectedHkmUserGroups\n          }\n        })\n        .then((result) => {\n          if (result === DismissReasons.CLOSE_BTN) {\n            this.loadItsmHkmMappingData();\n          }\n        })\n        .catch(noop);\n    }\n  }\n\n  private deleteMapping(): void {\n    const selectedGroups = this.itsmHkmMappingDataGrid.api.getSelectedRows() as ISupportGroupRow[];\n    const selectedGroupIds = selectedGroups.map((group) => group.id);\n\n    this.rxModalService\n      .confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.translateService.instant('com.bmc.arsys.rx.client.hkm-access-mapping.delete-mapping.message')\n      })\n      .then((result: boolean) => {\n        if (result) {\n          this.rxHkmAccessMappingService\n            .deleteAccessMappings(selectedGroupIds)\n            .subscribe(() => this.loadItsmHkmMappingData());\n        }\n      });\n  }\n\n  hasPortals(): boolean {\n    return !isEmpty(this.hkmPortals);\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.hkm-access-mapping.header.label' | translate }}\" [busy]=\"busy\">\n  <div class=\"d-flex\">\n    <div class=\"d-flex pr-3 align-items-baseline\">\n      <label class=\"text-strong\">{{ 'com.bmc.arsys.rx.client.hkm-access-mapping.company.label' | translate }}:</label>\n      <div class=\"d-flex\" adaptDropdown>\n        <button\n          class=\"pl-1\"\n          adapt-button\n          #dropdownButton\n          rx-id=\"company-dropdown\"\n          adaptDropdownToggle\n          type=\"button\"\n          btn-type=\"tertiary\">\n          {{ selectedCompany?.name }}\n        </button>\n        <div class=\"dropdown-menu\" adaptDropdownMenu>\n          <button\n            *ngFor=\"let company of itsmCompanies; let index = index\"\n            [class.text-active]=\"company?.permissionId === selectedCompany?.permissionId\"\n            [class.active]=\"company?.permissionId === selectedCompany?.permissionId\"\n            type=\"button\"\n            class=\"dropdown-item\"\n            (click)=\"setSelected(index)\">\n            {{ company.name }}\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"d-flex align-items-baseline\">\n      <label class=\"text-strong\">{{ 'com.bmc.arsys.rx.client.hkm-access-mapping.line-of-business.label' | translate\n        }}:</label>\n      <div class=\"d-flex\" adaptDropdown >\n        <button\n          adapt-button\n          #dropdownButton\n          adaptDropdownToggle\n          type=\"button\"\n          rx-id=\"lob-dropdown\"\n          btn-type=\"tertiary\"\n          class=\"pl-1\">\n          {{ selectedLob?.name }}\n        </button>\n        <div class=\"dropdown-menu\" adaptDropdownMenu>\n          <button\n            type=\"button\"\n            *ngFor=\"let lob of linesOfBusiness\"\n            [class.text-active]=\"lob.id === selectedLob.id\"\n            [class.active]=\"lob.id === selectedLob.id\"\n            class=\"dropdown-item\"\n            (click)=\"setSelectedLineOfBusiness(lob)\">\n            {{ lob.name }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <rx-record-grid class=\"mb-3 mt-1\" [config]=\"recordGridConfig$\" #itsmHkmMappingDataGrid></rx-record-grid>\n\n  <ng-template #statusColTemplate let-dataItem=\"dataItem\">\n    <div class=\"cm-container container\">\n      <div class=\"row\">\n        <div class=\"col-sm-6 align-start\">\n          <adapt-badge\n            [animate]=\"animation\"\n            variant=\"warning\"\n            [showAlert]=\"false\"\n            alertVariant=\"warning\"\n            *ngIf=\"!dataItem.isMapped\"\n          >\n            {{ 'com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.status.unmapped.label' | translate }}\n          </adapt-badge>\n          <adapt-badge\n            [animate]=\"animation\"\n            variant=\"success\"\n            [showAlert]=\"false\"\n            alertVariant=\"success\"\n            *ngIf=\"dataItem.isMapped\"\n          >\n            {{ 'com.bmc.arsys.rx.client.hkm-access-mapping.grid.column.status.mapped.label' | translate }}\n          </adapt-badge>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #visibilityGroupColTemplate let-dataItem=\"dataItem\">\n    <div class=\"cm-container container\">\n      <div class=\"row align-start\" *ngIf=\"dataItem.isMapped && hasPortals()\">\n        <a href=\"javascript:void(0)\" (click)=\"openAccessMappingDialog(dataItem)\" class=\"alert-link\">{{\n          dataItem.supportGroupName\n        }}</a>\n      </div>\n      <div class=\"row align-start\" *ngIf=\"!dataItem.isMapped || !hasPortals()\">\n        {{ dataItem.supportGroupName }}\n      </div>\n    </div>\n  </ng-template>\n</rx-admin-settings>\n","import {\n  ComponentFactoryResolver,\n  NgModule,\n} from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HkmAccessMappingAdminComponent } from './hkm-access-mapping.component';\nimport { AdaptAlertModule, AdaptRxListBuilderModule, AdaptRxSelectModule } from '@bmc-ux/adapt-angular';\nimport { AdaptTableModule } from '@bmc-ux/adapt-table';\n\nimport {\n  AdaptButtonModule,\n  AdaptDropdownModule,\n  AdaptPopoverModule,\n  AdaptEmptyStateModule,\n  AdaptIconModule,\n  AdaptRxTextfieldModule,\n  AdaptTabsModule,\n  AdaptBadgeModule,\n  AdaptAdvancedFilteringModule,\n  AdaptTreeModule,\n  ActiveModalRef,\n  AdaptSubnavModule\n} from '@bmc-ux/adapt-angular';\n\nimport { HkmAccessMapEditorComponent } from './hkm-access-map-editor/hkm-access-map-editor.component';\nimport { AdaptBusyModule } from '@bmc-ux/adapt-angular';\nimport { RecordGridModule } from '@helix/platform/view/components';\n\n@NgModule({\n  declarations: [HkmAccessMappingAdminComponent, HkmAccessMapEditorComponent],\n  imports: [\n    AdminSettingsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    TranslateModule,\n    AdaptButtonModule,\n    AdaptRxTextfieldModule,\n    AdaptRxListBuilderModule,\n    AdaptEmptyStateModule,\n    AdaptIconModule,\n    AdaptRxSelectModule,\n    AdaptPopoverModule,\n    AdaptTabsModule,\n    AdaptTableModule,\n    AdaptDropdownModule,\n    AdaptBadgeModule,\n    AdaptAdvancedFilteringModule,\n    AdaptTreeModule,\n    AdaptSubnavModule,\n    AdaptBusyModule,\n    RecordGridModule,\n    AdaptAlertModule\n  ],\n  providers: [ActiveModalRef],\n  entryComponents: [HkmAccessMappingAdminComponent]\n})\nexport class HkmAccessMappingRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-hkm-access-mapping',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(HkmAccessMappingAdminComponent),\n      name: 'HKM Access Mapping',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","export const RX_IFRAME_SECURITY = {\n  sections: {\n    iframeAllowedSites: {\n      infoMessage: 'com.bmc.arsys.rx.client.admin.iframe-security.allowed-sites-info.message',\n      name: 'iframeAllowedSites',\n      settingName: 'iframeAllowedSites',\n      title: 'com.bmc.arsys.rx.client.admin.iframe-security.trusted-web-applications.title',\n      urls: []\n    },\n    trustedWebsites: {\n      infoMessage: 'com.bmc.arsys.rx.client.admin.iframe-security.trusted-sites-info.message',\n      name: 'trustedWebsites',\n      settingName: 'trustedWebsites',\n      title: 'com.bmc.arsys.rx.client.admin.iframe-security.trusted-websites.title',\n      urls: []\n    }\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { forkJoin, Observable } from 'rxjs';\nimport { IIframeSecurities } from './iframe-security.types';\nimport { RX_IFRAME_SECURITY } from './iframe-security.constant';\nimport { RxSystemConfigurationService, ISystemConfiguration } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxIframeSecurityService {\n  constructor(private rxSystemConfigurationService: RxSystemConfigurationService) {}\n\n  getIframeSecurities(): Observable<IIframeSecurities> {\n    return forkJoin({\n      iframeAllowedSites: this.rxSystemConfigurationService.getConfiguration(\n        RX_IFRAME_SECURITY.sections.iframeAllowedSites.settingName\n      ),\n      trustedWebsites: this.rxSystemConfigurationService.getConfiguration(\n        RX_IFRAME_SECURITY.sections.trustedWebsites.settingName\n      )\n    });\n  }\n\n  postIframeSecurities(\n    allowedSitesData: ISystemConfiguration,\n    trustedWebsitesData: ISystemConfiguration\n  ): Observable<any[]> {\n    return forkJoin([\n      this.rxSystemConfigurationService.setConfiguration(\n        RX_IFRAME_SECURITY.sections.iframeAllowedSites.settingName,\n        allowedSitesData.value\n      ),\n      this.rxSystemConfigurationService.setConfiguration(\n        RX_IFRAME_SECURITY.sections.trustedWebsites.settingName,\n        trustedWebsitesData.value\n      )\n    ]);\n  }\n}\n","import { Component, HostBinding, OnInit, ViewChild } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { cloneDeep, map, some } from 'lodash';\nimport { IIframeSecurities } from './iframe-security.types';\nimport { ListBuilderTextsModel, RxListBuilderItem } from '@bmc-ux/adapt-angular';\nimport { RX_IFRAME_SECURITY } from './iframe-security.constant';\nimport { RxIframeSecurityService } from './iframe-security.service';\nimport { ISystemConfiguration, RxNotificationService } from '@helix/platform/shared/api';\nimport { RxUrlUtilsService } from '@helix/platform/utils';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-iframe-security',\n  templateUrl: './iframe-security.component.html'\n})\nexport class IframeSecurityAdminComponent extends BaseViewComponent implements OnInit {\n  @HostBinding('class')\n  hostClass = 'd-block col-12 col-sm-12 col-md-10 col-lg-8 col-xl-6 p-0';\n\n  @ViewChild('iframeAllowedSitesListBuilder', { read: NgModel, static: true })\n  iframeAllowedSitesListBuilder: NgModel;\n\n  @ViewChild('trustedWebsitesListBuilder', { read: NgModel, static: true })\n  trustedWebsitesListBuilder: NgModel;\n\n  busy: Subscription;\n  sections = cloneDeep(RX_IFRAME_SECURITY.sections);\n\n  listBuilderTexts: ListBuilderTextsModel = {\n    searchPlaceholder: this.translateService.instant(\n      'com.bmc.arsys.rx.client.admin.iframe-security.filter-or-add-urls.label'\n    ),\n    notFound: this.translateService.instant('com.bmc.arsys.rx.client.admin.iframe-security.no-urls-added.label')\n  };\n\n  private counter = 0;\n\n  private invalidUrlMsg = this.translateService.instant('com.bmc.arsys.rx.client.admin.invalid-url.label');\n\n  private duplicateUrlMsg = this.translateService.instant(\n    'com.bmc.arsys.rx.client.designer.validation.duplicate-value.message'\n  );\n\n  constructor(\n    private rxIframeSecurityService: RxIframeSecurityService,\n    private rxNotificationService: RxNotificationService,\n    private rxUrlUtilsService: RxUrlUtilsService,\n    private translateService: TranslateService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.notifyPropertyChanged('api', {\n      isDirty: () => this.isDirty()\n    });\n\n    this.busy = this.rxIframeSecurityService.getIframeSecurities().subscribe((result: IIframeSecurities) => {\n      const iframeAllowedSites: ISystemConfiguration = result.iframeAllowedSites;\n      const trustedWebsites: ISystemConfiguration = result.trustedWebsites;\n\n      if (iframeAllowedSites.value) {\n        this.sections.iframeAllowedSites.urls = map((iframeAllowedSites.value as string).split(' '), (url) => ({\n          id: this.generateId(),\n          name: url\n        }));\n      }\n\n      if (trustedWebsites.value) {\n        this.sections.trustedWebsites.urls = map((trustedWebsites.value as string).split(' '), (url) => ({\n          id: this.generateId(),\n          name: url\n        }));\n      }\n    });\n  }\n\n  generateId = (): number => {\n    return this.counter++;\n  };\n\n  iframeAllowedSitesValidation = (value: string, items: RxListBuilderItem[]): string => {\n    return this.itemValidation(value, items, false);\n  };\n\n  trustedWebsitesValidation = (value: string, items: RxListBuilderItem[]): string => {\n    return this.itemValidation(value, items);\n  };\n\n  isDirty(): boolean {\n    return this.iframeAllowedSitesListBuilder.dirty || this.trustedWebsitesListBuilder.dirty;\n  }\n\n  onSaveClick(): void {\n    const iframeAllowedSitesData: ISystemConfiguration = {\n      id: this.sections.iframeAllowedSites.name,\n      name: this.sections.iframeAllowedSites.name,\n      value: map(this.sections.iframeAllowedSites.urls, 'name').join(' ')\n    };\n\n    const trustedWebsitesData: ISystemConfiguration = {\n      id: this.sections.trustedWebsites.name,\n      name: this.sections.trustedWebsites.name,\n      value: map(this.sections.trustedWebsites.urls, 'name').join(' ')\n    };\n\n    this.rxIframeSecurityService.postIframeSecurities(iframeAllowedSitesData, trustedWebsitesData).subscribe(() => {\n      this.rxNotificationService.addSuccessMessage(\n        this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.iframe-security.iframe-security-information-saved.message'\n        )\n      );\n\n      this.iframeAllowedSitesListBuilder.control.markAsPristine();\n      this.trustedWebsitesListBuilder.control.markAsPristine();\n    });\n  }\n\n  private itemValidation(value: string, items: RxListBuilderItem[], isProtocolRequired = true): string {\n    let errorMessage: string = null;\n\n    if (some(items, { name: value })) {\n      errorMessage = this.duplicateUrlMsg;\n    } else if (!this.rxUrlUtilsService.isValidUrl(value, isProtocolRequired)) {\n      errorMessage = this.invalidUrlMsg;\n    }\n    \n    return errorMessage;\n  }\n}\n","<rx-admin-settings header=\"Iframe security\" [busy]=\"busy\">\n  <h4>{{ sections.iframeAllowedSites.title | translate }}</h4>\n\n  <adapt-rx-list-builder\n    class=\"d-block mb-4\"\n    name=\"iframeAllowedSitesListBuilder\"\n    [(ngModel)]=\"sections.iframeAllowedSites.urls\"\n    [label]=\"sections.iframeAllowedSites.infoMessage | translate\"\n    [texts]=\"listBuilderTexts\"\n    [itemValidation]=\"iframeAllowedSitesValidation\"\n    hideListAreaLabel=\"true\"\n    #iframeAllowedSitesListBuilder=\"ngModel\"\n  ></adapt-rx-list-builder>\n\n  <h4>{{ sections.trustedWebsites.title | translate }}</h4>\n\n  <adapt-rx-list-builder\n    class=\"d-block mb-4\"\n    name=\"trustedWebsitesListBuilder\"\n    [(ngModel)]=\"sections.trustedWebsites.urls\"\n    [label]=\"sections.trustedWebsites.infoMessage | translate\"\n    [texts]=\"listBuilderTexts\"\n    [itemValidation]=\"trustedWebsitesValidation\"\n    hideListAreaLabel=\"true\"\n    #trustedWebsitesListBuilder=\"ngModel\"\n  ></adapt-rx-list-builder>\n\n  <button\n    class=\"align-self-start\"\n    rx-id=\"save-button\"\n    adapt-button\n    btn-type=\"primary\"\n    size=\"small\"\n    type=\"button\"\n    [disabled]=\"!isDirty()\"\n    (click)=\"onSaveClick()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n</rx-admin-settings>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AdaptButtonModule, AdaptRxListBuilderModule } from '@bmc-ux/adapt-angular';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { IframeSecurityAdminComponent } from './iframe-security.component';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [IframeSecurityAdminComponent],\n  imports: [\n    AdaptButtonModule,\n    AdaptRxListBuilderModule,\n    AdminSettingsModule,\n    CommonModule,\n    FormsModule,\n    TranslateModule\n  ],\n  entryComponents: [IframeSecurityAdminComponent]\n})\nexport class IframeSecurityRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-iframe-security',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(IframeSecurityAdminComponent),\n      name: 'Iframe security',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { KeyValueObject } from '@bmc-ux/adapt-angular';\nimport { INameValuePair } from '@helix/platform/ui-kit';\n\nexport interface IIpaasApiDefinition {\n  id?: string;\n  organization: string;\n  organizationId?: string;\n  environment: string;\n  environmentId?: string;\n  group: string;\n  name: string;\n  path: string;\n  method: string;\n  authType: number;\n  queryParams: string;\n  headers: string;\n  description: string;\n  authTypeDetails: IAuthTypeDetails;\n}\n\nexport interface IAuthTypeDetails {\n  username?: string;\n  password?: string;\n  key?: string;\n  value?: string;\n  authServerEndpoint?: string;\n  tokenPath?: string;\n  credentials?: string;\n  redirectUri?: string;\n  scope?: string;\n  httpHeaders?: INameValuePair[];\n  queryParams?: INameValuePair[];\n}\n\nexport interface IIpaasApiInfo {\n  id?: string;\n  apiName?: string;\n  groupName: string;\n  recordDefinitionName: string;\n}\n\nexport interface IApiPath {\n  [key: string]: KeyValueObject;\n}\n\nexport interface IOrganizationList {\n  [key: string]: string[];\n}\n\nexport interface IOrganizationData {\n  environments?: IEnvironmentData[];\n  name: string;\n  id?: string;\n}\n\nexport interface IEnvironmentData {\n  name: string;\n  id?: string;\n}\n\nexport interface IAuthType {\n  id: number;\n  key: string;\n  labelKey: string;\n}\n\nexport interface IAuthTypeFields {\n  name: string;\n  labelKey: string;\n  rxId: string;\n  isPassword?: boolean;\n  isRequired?: boolean;\n}\n\nexport interface IIpaasApisConfig {\n  titleKey: string;\n  recordDefinitionName: string;\n  resourceType: string;\n}\n\nexport interface IApiEditorFormData {\n  apiGroupName: string;\n  apiName: string;\n  apiPath: string[];\n  authTypeDetails: KeyValueObject[];\n  authorizationType: KeyValueObject[];\n  environment: IEnvironmentData[];\n  headers: IEnvironmentData[];\n  organization: IOrganizationData[];\n  queryParameters: IEnvironmentData[];\n  requestMethod: string[];\n  customAuthTypeHeaders: INameValuePair[];\n  customAuthTypeQueryParams: INameValuePair[];\n}\n\nexport enum AuthTypes {\n  ANONYMOUS = 0,\n  BASIC = 10,\n  APIKEY = 20,\n  OAUTH2 = 30,\n  CUSTOM = 40\n}\n","import { AuthTypes } from './ipaas-base-apis.types';\n\nconst authTypeOptions = [\n  {\n    id: AuthTypes.ANONYMOUS,\n    key: 'ANONYMOUS',\n    labelKey: 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.anonymous.label'\n  },\n  {\n    id: AuthTypes.BASIC,\n    key: 'BASIC',\n    labelKey: 'com.bmc.arsys.rx.client.admin.cognitive-training.record-data-set-blade.basic.label'\n  },\n  {\n    id: AuthTypes.APIKEY,\n    key: 'APIKEY',\n    labelKey: 'com.bmc.arsys.rx.client.admin.cognitive-service.api-key.label'\n  },\n  {\n    id: AuthTypes.OAUTH2,\n    key: 'OAUTH2',\n    labelKey: 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.oauth.label'\n  },\n  {\n    id: AuthTypes.CUSTOM,\n    key: 'CUSTOM',\n    labelKey: 'com.bmc.arsys.rx.client.admin.web-api-connections.endpoint-type.custom.label'\n  }\n];\n\nexport const RX_IPAAS_APIS = {\n  fieldIds: {\n    groupName: 71003,\n    apiName: 71004,\n    organization: 71001,\n    environment: 71002,\n    path: 71005,\n    method: 71006\n  },\n  methods: {\n    0: 'GET',\n    10: 'POST',\n    20: 'PUT',\n    30: 'DELETE'\n  },\n  authTypeOptions,\n  authTypeFields: {\n    0: [],\n    10: [\n      {\n        name: 'username',\n        labelKey: 'com.bmc.arsys.rx.client.common.user-name.label',\n        rxId: 'username',\n        isRequired: true\n      },\n      {\n        name: 'credentials',\n        labelKey: 'com.bmc.arsys.rx.client.common.password.label',\n        rxId: 'password',\n        isPassword: true,\n        isRequired: true\n      }\n    ],\n    20: [\n      {\n        name: 'key',\n        labelKey: 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.api-key-name.label',\n        rxId: 'key',\n        isRequired: true\n      },\n      {\n        name: 'value',\n        labelKey: 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.api-key-value.label',\n        rxId: 'value',\n        isPassword: true,\n        isRequired: true\n      }\n    ],\n    30: [\n      {\n        name: 'authServerEndpoint',\n        labelKey: 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.auth-server-endpoint.label',\n        rxId: 'authServerEndpoint',\n        isRequired: true\n      },\n      {\n        name: 'tokenPath',\n        labelKey: 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.token-url.label',\n        rxId: 'tokenPath',\n        isRequired: true\n      },\n      {\n        name: 'username',\n        labelKey: 'com.bmc.arsys.rx.client.admin.rsso-auth.client-id.label',\n        rxId: 'username',\n        isRequired: true\n      },\n      {\n        name: 'credentials',\n        labelKey: 'com.bmc.arsys.rx.client.admin.rsso-auth.client-secret.label',\n        rxId: 'credentials',\n        isPassword: true,\n        isRequired: true\n      },\n      {\n        name: 'redirectUri',\n        labelKey: 'com.bmc.arsys.rx.client.admin.web-api-connections.redirect-uri.label',\n        rxId: 'redirectUri'\n      },\n      {\n        name: 'scope',\n        labelKey: 'com.bmc.arsys.rx.client.admin.web-api-connections.scope.label',\n        rxId: 'scope'\n      }\n    ]\n  }\n};\n","import { Injectable, Injector, OnDestroy, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ActiveModalRef, ActiveTabChangeEvent, DismissReasons, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { IDataPageResult, RxNotificationService } from '@helix/platform/shared/api';\nimport { RX_RECORD_DEFINITION, RxRecordInstanceDataPageService } from '@helix/platform/record/api';\nimport {\n  cloneDeep,\n  compact,\n  find,\n  findKey,\n  forEach,\n  get,\n  groupBy,\n  includes,\n  keys,\n  map as _map,\n  merge,\n  pull,\n  some,\n  sortBy,\n  trim\n} from 'lodash';\nimport { Observable, ReplaySubject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, map, switchMap, takeUntil } from 'rxjs/operators';\nimport { RX_IPAAS_APIS } from '../ipaas-base-apis.constant';\nimport {\n  AuthTypes,\n  IApiEditorFormData,\n  IApiPath,\n  IAuthType,\n  IAuthTypeDetails,\n  IAuthTypeFields,\n  IEnvironmentData,\n  IIpaasApiDefinition,\n  IIpaasApiInfo,\n  IOrganizationData\n} from '../ipaas-base-apis.types';\nimport { INameValuePair, RxModalClass } from '@helix/platform/ui-kit';\n\n@Injectable()\nexport abstract class ApiEditorBase extends RxModalClass implements OnInit, OnDestroy {\n  private formBuilder: FormBuilder = this.injector.get(FormBuilder);\n  private rxNotificationService: RxNotificationService = this.injector.get(RxNotificationService);\n  private translateService: TranslateService = this.injector.get(TranslateService);\n\n  private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService = this.injector.get(\n    RxRecordInstanceDataPageService\n  );\n\n  ipaasApiEditorForm: FormGroup;\n  headers: FormArray;\n  queryParameters: FormArray;\n  organizations: IOrganizationData[] = [];\n  environments: IEnvironmentData[] = [];\n  groupNameList: string[] = [];\n  methodTypeOptions: RxSelectOption[] = [];\n  authTypeOptions: RxSelectOption[] = [];\n  activeIndex = 0;\n  isEditMode = false;\n  authTypeFields: IAuthTypeFields[] = [];\n  busy: Subscription;\n  apiPaths: RxSelectOption[] = [];\n  loadingState = false;\n  isCustomAuthType: boolean;\n\n  private defaultSelection = this.translateService.instant('com.bmc.arsys.rx.client.common.select.label');\n  private groupAndApiNameList: RxSelectOption;\n  private apiPathDetails: IApiPath;\n  private selectedApiPath: string;\n  private readonly selectedApiDefinition: IIpaasApiInfo;\n  private initialApiDefinition: IIpaasApiDefinition;\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private authTypeFieldDetails: IApiPath[];\n  protected selectedOrganization: IOrganizationData;\n\n  protected constructor(protected activeModalRef: ActiveModalRef, protected injector: Injector) {\n    super(activeModalRef, injector);\n\n    this.selectedApiDefinition = this.activeModalRef.getData();\n    this.isEditMode = Boolean(this.selectedApiDefinition.id);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.ipaasApiEditorForm = this.formBuilder.group({\n      organization: [[], Validators.required],\n      environment: [[], Validators.required],\n      apiPath: [[], Validators.required],\n      apiGroupName: ['', [Validators.required, Validators.maxLength(254), Validators.pattern('^[a-zA-Z0-9 _-]+$')]],\n      apiName: ['', [Validators.required, Validators.maxLength(254), Validators.pattern('^[a-zA-Z0-9 _-]+$')]],\n      requestMethod: [[], Validators.required],\n      authorizationType: [[], Validators.required],\n      headers: this.formBuilder.array([]),\n      queryParameters: this.formBuilder.array([]),\n      authTypeDetails: this.formBuilder.array([]),\n      customAuthTypeHeaders: this.formBuilder.array([]),\n      customAuthTypeQueryParams: this.formBuilder.array([])\n    });\n\n    this.ipaasApiEditorForm.patchValue({ apiGroupName: this.selectedApiDefinition.groupName });\n\n    this.busy = this.getOrganizationsAndEnvironments().subscribe((data) => {\n      this.organizations = data;\n\n      if (this.organizations.length === 1) {\n        this.ipaasApiEditorForm.get('organization').setValue([this.organizations[0]]);\n        this.getEnvironments(this.organizations[0]);\n      }\n    });\n\n    this.getGroupAndApiDetails();\n\n    if (this.isEditMode) {\n      this.busy = this.getApiDefinition(this.selectedApiDefinition.id)\n        .pipe(\n          switchMap((data) => {\n            this.initialApiDefinition = cloneDeep(data);\n\n            this.ipaasApiEditorForm.patchValue({\n              organization: [{ name: data.organization, id: data.organizationId }],\n              environment: [{ name: data.environment, id: data.environmentId }],\n              apiPath: [data.path],\n              apiGroupName: data.group,\n              apiName: data.name,\n              requestMethod: [RX_IPAAS_APIS.methods[data.method]],\n              authorizationType: [find(RX_IPAAS_APIS.authTypeOptions, (type) => type.id === data.authType)]\n            });\n\n            this.selectedOrganization = { id: data.organizationId, name: data.organization };\n            this.authTypeFields = RX_IPAAS_APIS.authTypeFields[data.authType];\n            this.isCustomAuthType = data.authType === AuthTypes.CUSTOM;\n\n            if (this.isCustomAuthType) {\n              forEach(data.authTypeDetails.httpHeaders, (httpHeader) =>\n                (this.ipaasApiEditorForm.get('customAuthTypeHeaders') as FormArray).push(\n                  this.customAuthTypeFormItem(httpHeader)\n                )\n              );\n\n              forEach(data.authTypeDetails.queryParams, (queryParam) =>\n                (this.ipaasApiEditorForm.get('customAuthTypeQueryParams') as FormArray).push(\n                  this.customAuthTypeFormItem(queryParam)\n                )\n              );\n            } else {\n              this.createAuthTypeFormFields();\n            }\n\n            forEach(compact(data.headers?.split(',')), (header) => {\n              this.setApiVariables('headers', header);\n            });\n\n            forEach(compact(data.queryParams?.split(',')), (param) => {\n              this.setApiVariables('queryParameters', param);\n            });\n\n            return this.getApiPathDefinitions({ name: data.environment, id: data.environmentId });\n          })\n        )\n        .subscribe((apiPath) => {\n          this.onEditMethodAndAuthTypeUpdate(apiPath);\n        });\n    }\n\n    this.ipaasApiEditorForm\n      .get('apiName')\n      .valueChanges.pipe(takeUntil(this.destroyed$))\n      .subscribe((value) => {\n        const isApiNameAlreadyExists =\n          !(this.selectedApiDefinition?.apiName === value) &&\n          some(\n            this.groupAndApiNameList,\n            (group) =>\n              group[RX_IPAAS_APIS.fieldIds.groupName] === trim(this.ipaasApiEditorForm.get('apiGroupName').value) &&\n              includes(group.apis, trim(value))\n          );\n\n        if (isApiNameAlreadyExists) {\n          this.ipaasApiEditorForm.get('apiName').setErrors({\n            invalidApi: {\n              message: this.translateService.instant(\n                'com.bmc.arsys.rx.client.admin.ipaas-api-editor.api-name-exists.error.message'\n              )\n            }\n          });\n        }\n      });\n\n    this.ipaasApiEditorForm\n      .get('apiGroupName')\n      .valueChanges.pipe(distinctUntilChanged(), takeUntil(this.destroyed$))\n      .subscribe(() => {\n        this.ipaasApiEditorForm.get('apiName').updateValueAndValidity();\n      });\n  }\n\n  isDirty(): boolean {\n    return this.ipaasApiEditorForm.dirty;\n  }\n\n  private createFormItem(value: string): FormGroup {\n    return this.formBuilder.group({\n      name: [value, [Validators.maxLength(254), Validators.pattern('^[a-zA-Z0-9_-]+$')]]\n    });\n  }\n\n  private customAuthTypeFormItem(fieldData: INameValuePair): FormGroup {\n    return this.formBuilder.group({\n      key: [fieldData.key, [Validators.required, Validators.maxLength(254), Validators.pattern('^[a-zA-Z0-9_-]+$')]],\n      value: [fieldData.value, [Validators.required, Validators.maxLength(254), Validators.pattern('^[a-zA-Z0-9_-]+$')]]\n    });\n  }\n\n  optionFormatterLabel = (option: RxSelectOption): string =>\n    this.translateService.instant(get(option, 'labelKey', this.defaultSelection));\n\n  optionFormatterName = (option: RxSelectOption): string =>\n    this.translateService.instant(get(option, 'name', this.defaultSelection));\n\n  getEnvironments(organization: IOrganizationData): void {\n    this.selectedOrganization = organization;\n    this.environments = organization.environments || [];\n\n    if (this.environments.length === 1) {\n      this.ipaasApiEditorForm.get('environment').setValue([this.environments[0]]);\n      this.getApiPaths(this.environments[0]);\n    } else {\n      this.ipaasApiEditorForm.get('environment').setValue([]);\n      this.getApiPaths();\n    }\n  }\n\n  private setApiVariables(type: string, value: string): void {\n    const apiVariable = this.ipaasApiEditorForm.get(type) as FormArray;\n    apiVariable.push(this.createFormItem(value));\n  }\n\n  getAuthTypes(method: string): void {\n    this.ipaasApiEditorForm.get('authorizationType').setValue([]);\n    this.authTypeFieldDetails = this.apiPathDetails[this.selectedApiPath][method]?.authTypes;\n\n    this.authTypeOptions = _map(this.authTypeFieldDetails, (option) =>\n      find(RX_IPAAS_APIS.authTypeOptions, (type) => type.id === AuthTypes[keys(option)[0]])\n    );\n\n    if (this.authTypeOptions?.length === 1) {\n      this.ipaasApiEditorForm.get('authorizationType').setValue([this.authTypeOptions[0]]);\n      this.getAuthTypeFields(this.authTypeOptions[0]);\n    } else {\n      this.authTypeFields = RX_IPAAS_APIS.authTypeFields[0];\n      this.createAuthTypeFormFields();\n    }\n\n    forEach(this.apiPathDetails[this.selectedApiPath][method]?.headers, (header) => {\n      this.setApiVariables('headers', header);\n    });\n\n    forEach(this.apiPathDetails[this.selectedApiPath][method]?.queryParams, (param) => {\n      this.setApiVariables('queryParameters', param);\n    });\n  }\n\n  private onEditMethodAndAuthTypeUpdate(apiPath: IApiPath): void {\n    this.environments = this.getEnvironmentList();\n    this.apiPaths = keys(apiPath);\n    this.apiPathDetails = apiPath;\n    this.selectedApiPath = this.initialApiDefinition.path;\n    this.methodTypeOptions = keys(apiPath[this.initialApiDefinition.path]);\n    this.authTypeFieldDetails =\n      this.apiPathDetails[this.selectedApiPath][RX_IPAAS_APIS.methods[this.initialApiDefinition.method]]?.authTypes;\n\n    this.authTypeOptions = _map(this.authTypeFieldDetails, (option) =>\n      find(RX_IPAAS_APIS.authTypeOptions, { id: AuthTypes[keys(option)[0]] })\n    );\n  }\n\n  getApiPaths(environment?: IEnvironmentData): void {\n    this.ipaasApiEditorForm.get('apiPath').setValue([]);\n    this.apiPaths = [];\n    this.resetFormFields();\n\n    if (environment) {\n      this.loadingState = true;\n\n      this.getApiPathDefinitions(environment).subscribe(\n        (response) => {\n          this.apiPathDetails = response;\n          this.apiPaths = keys(response);\n\n          if (this.apiPaths.length === 1) {\n            this.ipaasApiEditorForm.get('apiPath').setValue([this.apiPaths[0]]);\n            this.getApiMethods(this.apiPaths[0]);\n          }\n\n          this.loadingState = false;\n        },\n        () => {\n          this.loadingState = false;\n        }\n      );\n    }\n  }\n\n  getApiMethods(apiPath: string): void {\n    this.resetFormFields();\n    this.selectedApiPath = apiPath;\n    this.methodTypeOptions = keys(this.apiPathDetails[this.selectedApiPath]);\n\n    if (this.methodTypeOptions?.length === 1) {\n      this.ipaasApiEditorForm.get('requestMethod').setValue([this.methodTypeOptions[0]]);\n      this.getAuthTypes(this.methodTypeOptions[0]);\n    }\n  }\n\n  private getGroupAndApiDetails(): void {\n    const params = {\n      startIndex: 0,\n      pageSize: -1,\n      recorddefinition: this.selectedApiDefinition.recordDefinitionName,\n      propertySelection: [\n        RX_IPAAS_APIS.fieldIds.groupName,\n        RX_IPAAS_APIS.fieldIds.apiName,\n        RX_RECORD_DEFINITION.coreFieldIds.id\n      ]\n    };\n\n    this.rxRecordInstanceDataPageService\n      .post({ params })\n      .pipe(\n        map((response: IDataPageResult) => ({\n          data: _map(groupBy(response.data, RX_IPAAS_APIS.fieldIds.groupName), (options, id) => {\n            return {\n              [RX_IPAAS_APIS.fieldIds.groupName]: id,\n              apis: _map(options, (option) => option[RX_IPAAS_APIS.fieldIds.apiName])\n            };\n          })\n        }))\n      )\n      .subscribe((response) => {\n        this.groupAndApiNameList = response.data;\n        this.groupNameList = sortBy(\n          _map(this.groupAndApiNameList, (option) => option[RX_IPAAS_APIS.fieldIds.groupName])\n        );\n      });\n  }\n\n  getAuthTypeFields(authType: IAuthType) {\n    const authTypeDetail = find(this.authTypeFieldDetails, authType.key)[authType.key];\n\n    this.isCustomAuthType = authType.id === AuthTypes.CUSTOM;\n\n    if (this.isCustomAuthType) {\n      // \"[foo, bar]\" => [\"foo\", \"bar\"]\n      const headerKeys = authTypeDetail.headers?.replace(/[\\[\\] ]/g, '')?.split(',') || [];\n      const queryParamKeys = authTypeDetail.queryParams?.replace(/[\\[\\] ]/g, '')?.split(',') || [];\n\n      (this.ipaasApiEditorForm.get('customAuthTypeHeaders') as FormArray).clear();\n      (this.ipaasApiEditorForm.get('customAuthTypeQueryParams') as FormArray).clear();\n\n      forEach(headerKeys, (headerKey) =>\n        (this.ipaasApiEditorForm.get('customAuthTypeHeaders') as FormArray).push(\n          this.customAuthTypeFormItem({ key: headerKey, value: '' })\n        )\n      );\n\n      forEach(queryParamKeys, (queryParamKey) =>\n        (this.ipaasApiEditorForm.get('customAuthTypeQueryParams') as FormArray).push(\n          this.customAuthTypeFormItem({ key: queryParamKey, value: '' })\n        )\n      );\n    } else {\n      this.authTypeFields = RX_IPAAS_APIS.authTypeFields[authType.id];\n\n      this.createAuthTypeFormFields(authTypeDetail);\n    }\n  }\n\n  private createAuthTypeFormFields(fieldDetails?: IAuthTypeDetails): void {\n    const formArrayFields = this.authTypeFields.reduce((obj, item) => Object.assign(obj, { [item.name]: '' }), {});\n    const authTypeDetails = this.ipaasApiEditorForm.get('authTypeDetails') as FormArray;\n\n    this.isCustomAuthType = false;\n\n    if (authTypeDetails?.length) {\n      authTypeDetails.removeAt(0);\n    }\n\n    authTypeDetails.push(this.formBuilder.group(formArrayFields));\n\n    fieldDetails =\n      (this.initialApiDefinition && merge(this.initialApiDefinition.authTypeDetails, fieldDetails)) || fieldDetails;\n\n    if (fieldDetails) {\n      this.ipaasApiEditorForm.controls.authTypeDetails.patchValue([fieldDetails]);\n    }\n  }\n\n  tabChanged({ index }: ActiveTabChangeEvent): void {\n    this.activeIndex = index;\n  }\n\n  addHeader(): void {\n    this.headers = this.ipaasApiEditorForm.get('headers') as FormArray;\n    this.headers.push(this.createFormItem(''));\n  }\n\n  removeHeader(index: number): void {\n    this.headers = this.ipaasApiEditorForm.get('headers') as FormArray;\n    this.headers.removeAt(index);\n    this.ipaasApiEditorForm.markAsDirty();\n  }\n\n  addQueryParameter(): void {\n    this.queryParameters = this.ipaasApiEditorForm.get('queryParameters') as FormArray;\n    this.queryParameters.push(this.createFormItem(''));\n  }\n\n  removeQueryParameter(index: number): void {\n    this.queryParameters = this.ipaasApiEditorForm.get('queryParameters') as FormArray;\n    this.queryParameters.removeAt(index);\n    this.ipaasApiEditorForm.markAsDirty();\n  }\n\n  addCustomAuthTypeHeader(): void {\n    (this.ipaasApiEditorForm.get('customAuthTypeHeaders') as FormArray).push(\n      this.customAuthTypeFormItem({ key: '', value: '' })\n    );\n  }\n\n  removeCustomAuthTypeHeader(index: number): void {\n    (this.ipaasApiEditorForm.get('customAuthTypeHeaders') as FormArray).removeAt(index);\n    this.ipaasApiEditorForm.markAsDirty();\n  }\n\n  addCustomAuthTypeQueryParam(): void {\n    (this.ipaasApiEditorForm.get('customAuthTypeQueryParams') as FormArray).push(\n      this.customAuthTypeFormItem({ key: '', value: '' })\n    );\n  }\n\n  removeCustomAuthTypeQueryParam(index: number): void {\n    (this.ipaasApiEditorForm.get('customAuthTypeQueryParams') as FormArray).removeAt(index);\n    this.ipaasApiEditorForm.markAsDirty();\n  }\n\n  isSaveButtonDisabled(): boolean {\n    return this.ipaasApiEditorForm.pristine || this.ipaasApiEditorForm.invalid;\n  }\n\n  save(): void {\n    let adminSetting$: Observable<any>;\n    const formValue: IApiEditorFormData = this.ipaasApiEditorForm.getRawValue();\n    const headers = _map(formValue.headers, (header) => header.name);\n    const queryParams = _map(formValue.queryParameters, (parameter) => parameter.name);\n\n    if (this.isCustomAuthType) {\n      formValue.authTypeDetails = [\n        {\n          httpHeaders: formValue.customAuthTypeHeaders,\n          queryParams: formValue.customAuthTypeQueryParams\n        }\n      ];\n    }\n\n    const param: IIpaasApiDefinition = {\n      organization: formValue.organization[0].name,\n      environment: formValue.environment[0].name,\n      group: formValue.apiGroupName,\n      name: formValue.apiName,\n      path: formValue.apiPath[0],\n      method: findKey(RX_IPAAS_APIS.methods, (value) => value === formValue.requestMethod[0]),\n      authType: formValue.authorizationType[0].id,\n      queryParams: pull(queryParams, '').toString(),\n      headers: pull(headers, '').toString(),\n      description: `${formValue.apiGroupName}: ${formValue.apiName}`,\n      authTypeDetails: formValue.authTypeDetails[0] || {}\n    };\n\n    if (this.isEditMode) {\n      param.id = this.initialApiDefinition.id;\n\n      adminSetting$ = this.editApiDefinition(param, formValue);\n    } else {\n      adminSetting$ = this.createApiDefinition(param, formValue);\n    }\n\n    this.busy = adminSetting$.subscribe(() => {\n      this.rxNotificationService.addSuccessMessage(\n        this.translateService.instant('com.bmc.arsys.rx.client.admin.ipaas-api-editor.save.success.message')\n      );\n\n      this.activeModalRef.close(adminSetting$);\n    });\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  private resetFormFields(): void {\n    this.methodTypeOptions = [];\n    this.ipaasApiEditorForm.get('requestMethod').setValue([]);\n    this.authTypeOptions = [];\n    this.ipaasApiEditorForm.get('authorizationType').setValue([]);\n    this.authTypeFields = RX_IPAAS_APIS.authTypeFields[0];\n    this.createAuthTypeFormFields();\n  }\n\n  protected abstract getOrganizationsAndEnvironments(): Observable<IOrganizationData[]>;\n\n  protected abstract getApiPathDefinitions(environment: IEnvironmentData): Observable<IApiPath>;\n\n  protected abstract getApiDefinition(apiId: string): Observable<IIpaasApiDefinition>;\n\n  protected abstract editApiDefinition(\n    apiDefinition: IIpaasApiDefinition,\n    formData?: IApiEditorFormData\n  ): Observable<any>;\n\n  protected abstract createApiDefinition(\n    apiDefinition: IIpaasApiDefinition,\n    formData?: IApiEditorFormData\n  ): Observable<any>;\n\n  protected abstract getEnvironmentList(organization?: IOrganizationData): IEnvironmentData[];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IApiPath, IIpaasApiDefinition, IOrganizationList } from '../ipaas-base-apis/ipaas-base-apis.types';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxJitterbitApisService {\n  private readonly apiDefinitionUrl = '/api/com.bmc.dsm.ipaas-jitterbit/rx/application/ipaas/jitterbit';\n\n  constructor(private httpClient: HttpClient) {}\n\n  deleteApiDefinition(apiId: string): Observable<any> {\n    return this.httpClient.delete(`${this.apiDefinitionUrl}/apidefinition/${apiId}`);\n  }\n\n  createApiDefinition(apiDefinition: IIpaasApiDefinition): Observable<any> {\n    return this.httpClient.post(`${this.apiDefinitionUrl}/apidefinition`, apiDefinition);\n  }\n\n  getApiDefinition(apiId: string): Observable<IIpaasApiDefinition> {\n    return this.httpClient.get<IIpaasApiDefinition>(`${this.apiDefinitionUrl}/apidefinition/${apiId}`);\n  }\n\n  editApiDefinition(apiDefinition: IIpaasApiDefinition): Observable<any> {\n    return this.httpClient.put(`${this.apiDefinitionUrl}/apidefinition/${apiDefinition.id}`, apiDefinition);\n  }\n\n  getOrganizationsAndEnvironments(): Observable<IOrganizationList> {\n    return this.httpClient.get<IOrganizationList>(`${this.apiDefinitionUrl}/organization-info`);\n  }\n\n  getApiPathDefinitions(organization: string, environment: string): Observable<IApiPath> {\n    return this.httpClient.get<IApiPath>(\n      `${this.apiDefinitionUrl}/api-specs/${encodeURIComponent(organization)}/${encodeURIComponent(environment)}`\n    );\n  }\n}\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { ActiveModalRef } from '@bmc-ux/adapt-angular';\nimport { Observable } from 'rxjs';\nimport {\n  IApiPath,\n  IEnvironmentData,\n  IIpaasApiDefinition,\n  IOrganizationData\n} from '../ipaas-base-apis/ipaas-base-apis.types';\nimport { ApiEditorBase } from '../ipaas-base-apis/api-editor/api-editor-base.class';\nimport { RxJitterbitApisService } from './jitterbit-apis.service';\nimport { map } from 'rxjs/operators';\nimport { map as _map } from 'lodash';\n\n@Component({\n  selector: 'rx-jitterbit-api-editor',\n  templateUrl: '../ipaas-base-apis/api-editor/api-editor.component.html',\n  styleUrls: ['../ipaas-base-apis/api-editor/api-editor.component.scss']\n})\nexport class JitterbitApiEditorComponent extends ApiEditorBase implements OnInit {\n  constructor(\n    private rxJitterbitApisService: RxJitterbitApisService,\n    protected activeModalRef: ActiveModalRef,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  protected getOrganizationsAndEnvironments(): Observable<IOrganizationData[]> {\n    return this.rxJitterbitApisService.getOrganizationsAndEnvironments().pipe(\n      map((organizationEnvironmentList) =>\n        _map(organizationEnvironmentList, (environments, organization) => ({\n          name: organization,\n          environments: _map(environments, (environment) => ({ name: environment }))\n        }))\n      )\n    );\n  }\n\n  protected getApiPathDefinitions(environment: IEnvironmentData): Observable<IApiPath> {\n    return this.rxJitterbitApisService.getApiPathDefinitions(this.selectedOrganization.name, environment.name);\n  }\n\n  protected getApiDefinition(apiId: string): Observable<IIpaasApiDefinition> {\n    return this.rxJitterbitApisService.getApiDefinition(apiId);\n  }\n\n  protected editApiDefinition(apiDefinition: IIpaasApiDefinition): Observable<any> {\n    return this.rxJitterbitApisService.editApiDefinition(apiDefinition);\n  }\n\n  protected createApiDefinition(apiDefinition: IIpaasApiDefinition): Observable<any> {\n    return this.rxJitterbitApisService.createApiDefinition(apiDefinition);\n  }\n\n  protected getEnvironmentList(): IEnvironmentData[] {\n    return this.organizations.find((value) => value.name === this.selectedOrganization.name)?.environments || [];\n  }\n}\n","<div class=\"modal-body api-editor-modal-body\">\n  <rx-busy-indicator [options]=\"{ busy: busy, loaderType: 'section' }\"></rx-busy-indicator>\n\n  <form [formGroup]=\"ipaasApiEditorForm\">\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <h6 class=\"mt-1 mb-3\">\n          {{ 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.api-path.label' | translate }}\n        </h6>\n\n        <adapt-rx-select\n          formControlName=\"organization\"\n          [options]=\"organizations\"\n          [optionFormatter]=\"optionFormatterName\"\n          rx-id=\"organization\"\n          label=\"{{ 'com.bmc.arsys.rx.client.approval.configuration.org' | translate }}\"\n          (onSelectionChange)=\"getEnvironments($event.options[0])\"\n          class=\"form-group d-block\"\n        >\n        </adapt-rx-select>\n\n        <adapt-rx-select\n          formControlName=\"environment\"\n          [options]=\"environments\"\n          [optionFormatter]=\"optionFormatterName\"\n          rx-id=\"environment\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.jitterbit-apis.environment.label' | translate }}\"\n          (onSelectionChange)=\"getApiPaths($event.options[0])\"\n          class=\"form-group d-block\"\n        >\n        </adapt-rx-select>\n\n        <adapt-rx-select\n          formControlName=\"apiPath\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.api-path.label' | translate }}\"\n          [options]=\"apiPaths\"\n          [enableFilter]=\"true\"\n          [loadingState]=\"loadingState\"\n          (onSelectionChange)=\"getApiMethods($event.options[0])\"\n          [tooltip]=\"{\n            iconName: 'question_circle_o',\n            content: 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.api-paths.tooltip' | translate,\n            placement: 'right',\n            popoverMode: true\n          }\"\n        >\n        </adapt-rx-select>\n      </div>\n\n      <div class=\"col-md-4\">\n        <h6 class=\"mt-1 mb-3\">\n          {{ 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.api-properties.label' | translate }}\n        </h6>\n\n        <adapt-rx-select-editable\n          formControlName=\"apiGroupName\"\n          [options]=\"groupNameList\"\n          rx-id=\"api-group-name\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.ipaas-apis.api-group-name.label' | translate }}\"\n          class=\"form-group d-block\"\n          customOptionTitle=\"{{ 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.add-new.label' | translate }}\"\n          [customOptionOnTop]=\"true\"\n          [tooltip]=\"{\n            iconName: 'question_circle_o',\n            content: 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.api-group-name.tooltip' | translate,\n            placement: 'right',\n            popoverMode: true\n          }\"\n        >\n        </adapt-rx-select-editable>\n\n        <adapt-rx-textfield\n          formControlName=\"apiName\"\n          rx-id=\"api-name\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.jitterbit-apis.api-name.label' | translate }}\"\n          class=\"form-group d-block\"\n          [tooltip]=\"\n            isEditMode\n              ? {\n                  iconName: 'question_circle_o',\n                  content: 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.edit-api.api-name.tooltip' | translate,\n                  placement: 'right',\n                  popoverMode: true\n                }\n              : null\n          \"\n        >\n        </adapt-rx-textfield>\n\n        <adapt-rx-select\n          formControlName=\"requestMethod\"\n          [options]=\"methodTypeOptions\"\n          (onSelectionChange)=\"getAuthTypes($event.options[0])\"\n          rx-id=\"request-method\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.request-method.label' | translate }}\"\n          class=\"form-group d-block\"\n        >\n        </adapt-rx-select>\n\n        <adapt-rx-select\n          formControlName=\"authorizationType\"\n          [options]=\"authTypeOptions\"\n          [optionFormatter]=\"optionFormatterLabel\"\n          (onSelectionChange)=\"getAuthTypeFields($event.options[0])\"\n          rx-id=\"authorization-type\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.authorization-type.label' | translate }}\"\n          class=\"form-group d-block\"\n        >\n        </adapt-rx-select>\n\n        <ng-container *ngIf=\"!isCustomAuthType\">\n          <div\n            formArrayName=\"authTypeDetails\"\n            *ngFor=\"let authType of ipaasApiEditorForm.get('authTypeDetails')['controls']; let $index = index\"\n          >\n            <div [formGroupName]=\"$index\">\n              <adapt-rx-textfield\n                class=\"form-group d-block\"\n                *ngFor=\"let field of authTypeFields\"\n                [label]=\"field.labelKey | translate\"\n                [isPassword]=\"field.isPassword\"\n                [formControlName]=\"field.name\"\n                [attr.rx-id]=\"field.rxId\"\n                [required]=\"field.isRequired\"\n              >\n              </adapt-rx-textfield>\n            </div>\n          </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"isCustomAuthType\">\n          <button\n            adapt-button\n            type=\"button\"\n            btn-type=\"tertiary\"\n            class=\"d-icon-plus_circle px-0 d-block\"\n            rx-id=\"add-button\"\n            (click)=\"addCustomAuthTypeHeader()\"\n          >\n            {{ 'com.bmc.arsys.rx.client.admin.ipaas-apis.add-http-header.label' | translate }}\n          </button>\n          <div\n            formArrayName=\"customAuthTypeHeaders\"\n            *ngFor=\"\n              let customAuthTypeHeaders of ipaasApiEditorForm.get('customAuthTypeHeaders')['controls'];\n              let $index = index\n            \"\n          >\n            <div [formGroupName]=\"$index\">\n              <div class=\"card form-group\">\n                <div class=\"card-block\">\n                  <div class=\"d-flex justify-content-between\">\n                    <adapt-rx-control-label\n                      label=\"{{ 'com.bmc.arsys.rx.client.admin.ipaas-apis.http-header.label' | translate }}\"\n                      showRequiredLabel=\"true\"\n                    ></adapt-rx-control-label>\n                    <span\n                      class=\"d-icon-cross_adapt form-group alert-link\"\n                      (click)=\"removeCustomAuthTypeHeader($index)\"\n                    ></span>\n                  </div>\n                  <adapt-rx-textfield\n                    formControlName=\"key\"\n                    placeholder=\"{{\n                      'com.bmc.arsys.rx.client.name-value-pairs-editor.enter-name.placeholder' | translate\n                    }}\"\n                    class=\"d-block form-group\"\n                  ></adapt-rx-textfield>\n                  <adapt-rx-textfield\n                    formControlName=\"value\"\n                    placeholder=\"{{\n                      'com.bmc.arsys.rx.client.name-value-pairs-editor.enter-value.placeholder' | translate\n                    }}\"\n                    class=\"d-block\"\n                  ></adapt-rx-textfield>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <button\n            adapt-button\n            type=\"button\"\n            btn-type=\"tertiary\"\n            class=\"d-icon-plus_circle px-0 d-block\"\n            rx-id=\"add-button\"\n            (click)=\"addCustomAuthTypeQueryParam()\"\n          >\n            {{ 'com.bmc.arsys.rx.client.admin.ipaas-apis.add-query-parameter.label' | translate }}\n          </button>\n          <div\n            formArrayName=\"customAuthTypeQueryParams\"\n            *ngFor=\"\n              let customAuthTypeQueryParams of ipaasApiEditorForm.get('customAuthTypeQueryParams')['controls'];\n              let $index = index\n            \"\n          >\n            <div [formGroupName]=\"$index\">\n              <div class=\"card form-group\">\n                <div class=\"card-block\">\n                  <div class=\"d-flex justify-content-between\">\n                    <adapt-rx-control-label\n                      label=\"{{ 'com.bmc.arsys.rx.client.admin.ipaas-apis.query-parameter.label' | translate }}\"\n                      showRequiredLabel=\"true\"\n                    ></adapt-rx-control-label>\n                    <span\n                      class=\"d-icon-cross_adapt form-group alert-link\"\n                      (click)=\"removeCustomAuthTypeQueryParam($index)\"\n                    ></span>\n                  </div>\n                  <adapt-rx-textfield\n                    formControlName=\"key\"\n                    placeholder=\"{{\n                      'com.bmc.arsys.rx.client.name-value-pairs-editor.enter-name.placeholder' | translate\n                    }}\"\n                    class=\"d-block form-group\"\n                  ></adapt-rx-textfield>\n                  <adapt-rx-textfield\n                    formControlName=\"value\"\n                    placeholder=\"{{\n                      'com.bmc.arsys.rx.client.name-value-pairs-editor.enter-value.placeholder' | translate\n                    }}\"\n                    class=\"d-block\"\n                  ></adapt-rx-textfield>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n\n      <div class=\"col-md-4\">\n        <h6 class=\"my-1\">\n          {{ 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.api-variables.label' | translate }}\n        </h6>\n\n        <adapt-tabset [type]=\"'pills'\" [tab-active]=\"activeIndex\" (tab-active-changed)=\"tabChanged($event)\">\n          <adapt-tab-panel\n            adapt-tab-title=\"{{ 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.headers.label' | translate }}\"\n          >\n            <button\n              adapt-button\n              type=\"button\"\n              btn-type=\"tertiary\"\n              class=\"d-icon-plus_circle px-0 align-self-start\"\n              rx-id=\"add-button\"\n              (click)=\"addHeader()\"\n            >\n              {{ 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.add-header.label' | translate }}\n            </button>\n\n            <div\n              formArrayName=\"headers\"\n              *ngFor=\"let header of ipaasApiEditorForm.get('headers')['controls']; let $index = index\"\n            >\n              <div class=\"d-flex\" [formGroupName]=\"$index\">\n                <adapt-rx-textfield\n                  formControlName=\"name\"\n                  class=\"d-block form-group pr-2 flex-fill\"\n                ></adapt-rx-textfield>\n                <button\n                  class=\"d-icon-minus_circle text-danger form-group px-0\"\n                  adapt-button\n                  btn-type=\"tertiary\"\n                  type=\"button\"\n                  (click)=\"removeHeader($index)\"\n                ></button>\n              </div>\n            </div>\n          </adapt-tab-panel>\n\n          <adapt-tab-panel\n            adapt-tab-title=\"{{\n              'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.query-parameters.label' | translate\n            }}\"\n          >\n            <button\n              adapt-button\n              type=\"button\"\n              btn-type=\"tertiary\"\n              class=\"d-icon-plus_circle px-0 align-self-start\"\n              rx-id=\"add-button\"\n              (click)=\"addQueryParameter()\"\n            >\n              {{ 'com.bmc.arsys.rx.client.admin.jitterbit-api-editor.add-query-parameter.label' | translate }}\n            </button>\n\n            <div\n              formArrayName=\"queryParameters\"\n              *ngFor=\"let parameter of ipaasApiEditorForm.get('queryParameters')['controls']; let $index = index\"\n            >\n              <div class=\"d-flex\" [formGroupName]=\"$index\">\n                <adapt-rx-textfield\n                  formControlName=\"name\"\n                  class=\"d-block form-group pr-2 flex-fill\"\n                ></adapt-rx-textfield>\n                <button\n                  class=\"d-icon-minus_circle text-danger form-group px-0\"\n                  adapt-button\n                  btn-type=\"tertiary\"\n                  type=\"button\"\n                  (click)=\"removeQueryParameter($index)\"\n                ></button>\n              </div>\n            </div>\n          </adapt-tab-panel>\n        </adapt-tabset>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"modal-footer\">\n  <button\n    adapt-button\n    type=\"button\"\n    btn-type=\"primary\"\n    [disabled]=\"isSaveButtonDisabled()\"\n    (click)=\"save()\"\n    rx-id=\"save-button\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n  <button adapt-button type=\"button\" btn-type=\"secondary\" rx-id=\"cancel-button\" (click)=\"cancel()\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { ActiveModalRef, DismissReasons } from '@bmc-ux/adapt-angular';\nimport { pull } from 'lodash';\n\n@Component({\n  selector: 'rx-group-editor',\n  templateUrl: './group-editor.component.html',\n  styleUrls: ['./group-editor.component.scss']\n})\nexport class GroupEditorComponent extends RxModalClass implements OnInit {\n  @ViewChild('groupNameForm', { read: NgForm, static: true })\n  groupNameForm: NgForm;\n\n  groupName: '';\n  groupNames: string[];\n\n  private oldGroupName: string;\n\n  constructor(private activeModalRef: ActiveModalRef, protected injector: Injector) {\n    super(activeModalRef, injector);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.groupName = this.activeModalRef.getData().groupName;\n    this.groupNames = pull(this.activeModalRef.getData().groupNames, this.groupName);\n    this.oldGroupName = this.groupName;\n  }\n\n  isDirty(): boolean {\n    return this.groupNameForm.dirty;\n  }\n\n  isSaveButtonDisabled(): boolean {\n    return this.groupNameForm.pristine || this.groupNameForm.invalid || this.oldGroupName === this.groupName;\n  }\n\n  saveGroupName(): void {\n    this.activeModalRef.close(this.groupName);\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<form #groupNameForm=\"ngForm\">\n  <adapt-rx-textfield\n    name=\"group-name\"\n    rx-id=\"group-name\"\n    label=\"{{ 'com.bmc.arsys.rx.client.admin.ipaas-apis.api-group-name.label' | translate }}\"\n    [(ngModel)]=\"groupName\"\n    [rxUnique]=\"{\n      errorMessage: 'com.bmc.arsys.rx.client.admin.ipaas-api-editor.group-name-exists.error.message' | translate,\n      items: groupNames\n    }\"\n    pattern=\"^[a-zA-Z0-9 _-]+$\"\n    maxlength=\"254\"\n    required=\"true\"\n    class=\"d-block form-group m-4\"\n  >\n  </adapt-rx-textfield>\n</form>\n\n<div class=\"modal-footer\">\n  <button\n    adapt-button\n    type=\"button\"\n    btn-type=\"primary\"\n    rx-id=\"save-button\"\n    [disabled]=\"isSaveButtonDisabled()\"\n    (click)=\"saveGroupName()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n  <button adapt-button type=\"button\" btn-type=\"secondary\" rx-id=\"cancel-button\" (click)=\"cancel()\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RX_RESOURCE_URLS } from '@helix/platform/shared/api';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxIpaasBaseApisService {\n  constructor(private httpClient: HttpClient) {}\n\n  renameApiGroup(resourceType: string, oldGroupName: string, newGroupName: string): Observable<any> {\n    return this.httpClient.post(RX_RESOURCE_URLS.command, {\n      resourceType: resourceType,\n      oldGroup: oldGroupName,\n      newGroup: newGroupName\n    });\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport {\n  ColumnSortDirection,\n  IRecordGridActionButton,\n  IRecordGridColumn,\n  IRecordGridConfig,\n  IRecordGridDataPageParams,\n  RecordGridComponent\n} from '@helix/platform/view/components';\nimport { noop, Observable, of } from 'rxjs';\nimport { IRecordDefinition, RX_RECORD_DEFINITION, RxRecordInstanceDataPageService } from '@helix/platform/record/api';\nimport { RX_IPAAS_APIS } from './ipaas-base-apis.constant';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IDataPageResult, IPlainObject, RxNotificationService } from '@helix/platform/shared/api';\nimport { RxIpaasBaseApisService } from './ipaas-base-apis.service';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { IRowDataItem, OpenViewActionModalSize, RxViewActionUtilsService } from '@helix/platform/view/api';\nimport { castArray, get, map as _map } from 'lodash';\nimport { GroupEditorComponent } from './group-editor/group-editor.component';\nimport { IIpaasApisConfig, IIpaasApiInfo } from './ipaas-base-apis.types';\n\n@Component({\n  selector: 'rx-ipaas-base-apis',\n  templateUrl: './ipaas-base-apis.component.html'\n})\nexport class IpaasBaseApisComponent implements OnInit {\n  @Input()\n  ipaasApisConfig: IIpaasApisConfig;\n\n  @Output()\n  createApi = new EventEmitter<IIpaasApiInfo>();\n\n  @Output()\n  editApi = new EventEmitter<IIpaasApiInfo>();\n\n  @Output()\n  deleteApis = new EventEmitter<string[]>();\n\n  @ViewChild('ipaasApisGrid')\n  ipaasApisGrid: RecordGridComponent;\n\n  gridConfig$: Observable<IRecordGridConfig>;\n\n  recordDefinition: IRecordDefinition = {\n    fieldDefinitions: [\n      {\n        id: RX_IPAAS_APIS.fieldIds.groupName,\n        resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n      },\n      {\n        id: RX_IPAAS_APIS.fieldIds.apiName,\n        resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n      },\n      {\n        id: RX_IPAAS_APIS.fieldIds.organization,\n        resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n      },\n      {\n        id: RX_IPAAS_APIS.fieldIds.environment,\n        resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n      },\n      {\n        id: RX_IPAAS_APIS.fieldIds.path,\n        resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n      },\n      {\n        id: RX_IPAAS_APIS.fieldIds.method,\n        resourceType: RX_RECORD_DEFINITION.resourceTypes.selection,\n        optionNamesById: RX_IPAAS_APIS.methods\n      }\n    ]\n  };\n\n  constructor(\n    private translateService: TranslateService,\n    private rxIpaasBaseApisService: RxIpaasBaseApisService,\n    private rxNotificationService: RxNotificationService,\n    private rxModalService: RxModalService,\n    private rxViewActionUtilsService: RxViewActionUtilsService,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService\n  ) {}\n\n  ngOnInit(): void {\n    this.gridConfig$ = of({\n      getData: this.getData.bind(this),\n      recordDefinitionName: this.ipaasApisConfig.recordDefinitionName,\n      columns: this.getColumns(),\n      actionButtons: this.getActionButtons(),\n      getRecordDefinition: () => of(this.recordDefinition),\n      styles: 'flex-fill'\n    });\n  }\n\n  private getData(queryParams: IRecordGridDataPageParams): Observable<IDataPageResult> {\n    const params = {\n      ...queryParams,\n      propertySelection: [\n        RX_RECORD_DEFINITION.coreFieldIds.id,\n        RX_IPAAS_APIS.fieldIds.groupName,\n        RX_IPAAS_APIS.fieldIds.apiName,\n        RX_IPAAS_APIS.fieldIds.organization,\n        RX_IPAAS_APIS.fieldIds.environment,\n        RX_IPAAS_APIS.fieldIds.path,\n        RX_IPAAS_APIS.fieldIds.method\n      ]\n    };\n\n    delete params.searchText;\n\n    return this.rxRecordInstanceDataPageService.post({ params });\n  }\n\n  private getColumns(): IRecordGridColumn[] {\n    return [\n      {\n        fieldId: String(RX_IPAAS_APIS.fieldIds.groupName),\n        index: 0,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.jitterbit-apis.group-name.label'),\n        clickable: true,\n        actions: [\n          {\n            name: (previousActionResult: any, lastActionRow: IRowDataItem) => this.renameGroup(lastActionRow)\n          }\n        ],\n        sortable: { direction: ColumnSortDirection.Asc, priority: 0 }\n      },\n      {\n        fieldId: String(RX_IPAAS_APIS.fieldIds.apiName),\n        index: 1,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.jitterbit-apis.api-name.label'),\n        clickable: true,\n        actions: [\n          {\n            name: (previousActionResult: any, lastActionRow: IRowDataItem) => this.openEditApiDialog(lastActionRow)\n          }\n        ],\n        sortable: { direction: ColumnSortDirection.Asc, priority: 1 }\n      },\n      {\n        fieldId: String(RX_IPAAS_APIS.fieldIds.organization),\n        index: 2,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.approval.configuration.org')\n      },\n      {\n        fieldId: String(RX_IPAAS_APIS.fieldIds.environment),\n        index: 3,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.jitterbit-apis.environment.label')\n      },\n      {\n        fieldId: String(RX_IPAAS_APIS.fieldIds.path),\n        index: 4,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.jitterbit-apis.path.label')\n      },\n      {\n        fieldId: String(RX_IPAAS_APIS.fieldIds.method),\n        index: 5,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.jitterbit-apis.method.label')\n      }\n    ];\n  }\n\n  private getActionButtons(): IRecordGridActionButton[] {\n    return [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n        style: 'tertiary',\n        iconCls: 'trash',\n        actions: [\n          {\n            name: () => {\n              this.rxModalService\n                .confirm({\n                  title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n                  modalStyle: RX_MODAL.modalStyles.warning,\n                  message: this.translateService.instant(\n                    'com.bmc.arsys.rx.client.admin.ipaas-apis.delete-api.confirmation.message'\n                  )\n                })\n                .then((result: boolean) => {\n                  if (result) {\n                    const records = castArray(this.ipaasApisGrid.api.getSelectedRows());\n                    const recordIds = this.rxViewActionUtilsService.extractRecordIds(records);\n\n                    this.deleteApis.emit(recordIds);\n                  }\n                });\n            }\n          }\n        ]\n      },\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.edit.label'),\n        style: 'tertiary',\n        icon: 'pencil',\n        disabled: () => this.ipaasApisGrid.api.getSelectedRowCount() !== 1,\n        actions: [\n          {\n            name: () => this.openEditApiDialog(this.ipaasApisGrid.api.getFirstSelectedRow())\n          }\n        ]\n      }\n    ];\n  }\n\n  private renameGroup(row: IPlainObject): void {\n    this.rxModalService\n      .openModal({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.ipaas-apis.rename-api-group.label'),\n        content: GroupEditorComponent,\n        size: OpenViewActionModalSize.Xsmall as any,\n        data: {\n          groupName: row[RX_IPAAS_APIS.fieldIds.groupName],\n          groupNames: _map(this.ipaasApisGrid.adaptTableConfig.data, RX_IPAAS_APIS.fieldIds.groupName)\n        }\n      })\n      .then((groupName: string) => {\n        this.rxIpaasBaseApisService\n          .renameApiGroup(this.ipaasApisConfig.resourceType, row[RX_IPAAS_APIS.fieldIds.groupName], groupName)\n          .subscribe(() => {\n            this.rxNotificationService.addSuccessMessage(\n              this.translateService.instant(\n                'com.bmc.arsys.rx.client.admin.ipaas-apis.rename-group-save.success.message'\n              )\n            );\n\n            this.refreshIpaasGrid();\n          });\n      })\n      .catch(noop);\n  }\n\n  openAddApiDialog(): void {\n    const selectedGroup = this.ipaasApisGrid.api.getFirstSelectedRow();\n\n    this.createApi.emit({\n      groupName: get(selectedGroup, RX_IPAAS_APIS.fieldIds.groupName, ''),\n      recordDefinitionName: this.ipaasApisConfig.recordDefinitionName\n    });\n  }\n\n  openEditApiDialog(row: IPlainObject): void {\n    this.editApi.emit({\n      id: row[RX_RECORD_DEFINITION.coreFieldIds.id],\n      apiName: row[RX_IPAAS_APIS.fieldIds.apiName],\n      groupName: row[RX_IPAAS_APIS.fieldIds.groupName],\n      recordDefinitionName: this.ipaasApisConfig.recordDefinitionName\n    });\n  }\n\n  refreshIpaasGrid(): void {\n    this.ipaasApisGrid.api.refresh().subscribe();\n  }\n}\n","<rx-admin-settings header=\"{{ ipaasApisConfig.titleKey | translate }}\">\n  <div class=\"d-flex ml-2\">\n    <button\n      adapt-button\n      type=\"button\"\n      btn-type=\"tertiary\"\n      class=\"d-icon-plus_circle align-self-start\"\n      rx-id=\"new-button\"\n      (click)=\"openAddApiDialog()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.add.label' | translate }}\n    </button>\n  </div>\n\n  <rx-record-grid rx-id=\"ipaas-apis-grid\" #ipaasApisGrid [config]=\"gridConfig$\"></rx-record-grid>\n</rx-admin-settings>\n","import { Component, ViewChild } from '@angular/core';\nimport { IIpaasApiInfo, IIpaasApisConfig } from '../ipaas-base-apis/ipaas-base-apis.types';\nimport { RxModalService } from '@helix/platform/ui-kit';\nimport { JitterbitApiEditorComponent } from './jitterbit-api-editor.component';\nimport { EMPTY, forkJoin, noop, Observable } from 'rxjs';\nimport { IpaasBaseApisComponent } from '../ipaas-base-apis/ipaas-base-apis.component';\nimport { RxNotificationService } from '@helix/platform/shared/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RxJitterbitApisService } from './jitterbit-apis.service';\n\n@Component({\n  selector: 'rx-admin-jitterbit-apis',\n  templateUrl: './jitterbit-apis.component.html'\n})\nexport class JitterbitApisAdminComponent {\n  @ViewChild('ipaasBaseApisConfiguration')\n  ipaasBaseApisComponent: IpaasBaseApisComponent;\n\n  jitterbitApisConfig: IIpaasApisConfig = {\n    titleKey: 'com.bmc.arsys.rx.client.admin.jitterbit-apis.header.title',\n    recordDefinitionName: 'com.bmc.dsm.ipaas-jitterbit:iPaaS Jitterbit API Definition',\n    resourceType: 'com.bmc.dsm.ipaas.jitterbit.command.RenameJitterbitApiGroupCommand'\n  };\n\n  constructor(\n    private rxModalService: RxModalService,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService,\n    private rxJitterbitApisService: RxJitterbitApisService\n  ) {}\n\n  openJitterbitCreateApiEditor(apiInfo: IIpaasApiInfo): Promise<any> {\n    return this.rxModalService\n      .openModal({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.ipaas-api-editor.add-api.label'),\n        content: JitterbitApiEditorComponent,\n        data: apiInfo\n      })\n      .then((result) => {\n        if (result) {\n          this.ipaasBaseApisComponent.refreshIpaasGrid();\n        }\n      })\n      .catch(noop);\n  }\n\n  openJitterbitEditApiEditor(apiInfo: IIpaasApiInfo): Promise<any> {\n    return this.rxModalService\n      .openModal({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.ipaas-api-editor.edit-api.label'),\n        content: JitterbitApiEditorComponent,\n        data: apiInfo\n      })\n      .then((result) => {\n        if (result) {\n          this.ipaasBaseApisComponent.refreshIpaasGrid();\n        }\n      })\n      .catch(noop);\n  }\n\n  deleteJitterbitApis(apiIds: string[]): void {\n    this.deleteApiDefinitions(apiIds).subscribe(() => {\n      this.rxNotificationService.addSuccessMessage(\n        this.translateService.instant('com.bmc.arsys.rx.client.admin.ipaas-apis.delete-api.success.message')\n      );\n\n      this.ipaasBaseApisComponent.refreshIpaasGrid();\n    });\n  }\n\n  private deleteApiDefinitions(apiIds: string[]): Observable<any> {\n    if (apiIds.length) {\n      const deleteApiObservables$ = apiIds.map((apiId) => this.rxJitterbitApisService.deleteApiDefinition(apiId));\n\n      return forkJoin(deleteApiObservables$);\n    }\n\n    return EMPTY;\n  }\n}\n","<rx-ipaas-base-apis\n  [ipaasApisConfig]=\"jitterbitApisConfig\"\n  (createApi)=\"openJitterbitCreateApiEditor($event)\"\n  (editApi)=\"openJitterbitEditApiEditor($event)\"\n  (deleteApis)=\"deleteJitterbitApis($event)\"\n  #ipaasBaseApisConfiguration\n></rx-ipaas-base-apis>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IpaasBaseApisComponent } from './ipaas-base-apis.component';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AdaptButtonModule, AdaptRxTextfieldModule } from '@bmc-ux/adapt-angular';\nimport { GroupEditorComponent } from './group-editor/group-editor.component';\nimport { FormsModule } from '@angular/forms';\nimport { RxUniqueValidatorModule } from '@helix/platform/utils';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AdminSettingsModule,\n    RecordGridModule,\n    TranslateModule,\n    AdaptButtonModule,\n    AdaptRxTextfieldModule,\n    FormsModule,\n    RxUniqueValidatorModule\n  ],\n  declarations: [IpaasBaseApisComponent, GroupEditorComponent],\n  exports: [IpaasBaseApisComponent]\n})\nexport class IpaasBaseApisModule {}\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { JitterbitApisAdminComponent } from './jitterbit-apis.component';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { IpaasBaseApisModule } from '../ipaas-base-apis/ipaas-base-apis.module';\nimport { JitterbitApiEditorComponent } from './jitterbit-api-editor.component';\nimport { RxBusyIndicatorModule } from '@helix/platform/ui-kit';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  AdaptButtonModule,\n  AdaptRxLabelModule,\n  AdaptRxSelectEditableModule,\n  AdaptRxSelectModule,\n  AdaptRxTextfieldModule,\n  AdaptTabsModule\n} from '@bmc-ux/adapt-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    IpaasBaseApisModule,\n    RxBusyIndicatorModule,\n    ReactiveFormsModule,\n    AdaptRxLabelModule,\n    AdaptRxSelectModule,\n    AdaptRxSelectEditableModule,\n    AdaptRxTextfieldModule,\n    AdaptTabsModule,\n    TranslateModule,\n    AdaptButtonModule,\n    CommonModule\n  ],\n  declarations: [JitterbitApisAdminComponent, JitterbitApiEditorComponent],\n  entryComponents: [JitterbitApisAdminComponent]\n})\nexport class JitterbitApisRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-jitterbit-apis',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(JitterbitApisAdminComponent),\n      name: 'iPaaS Jitterbit APIs',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { AfterContentInit, Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable, Subscription, throwError } from 'rxjs';\nimport { catchError, switchMap, tap } from 'rxjs/operators';\nimport { find, forEach, get, isFunction, map, values } from 'lodash';\nimport { ConnectionTestStatus } from '@helix/platform/ui-kit';\nimport {\n  IAdminComponentSetting,\n  IAdminComponentSettings,\n  RxAdminSettingsService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport { RxCognitiveServiceService } from '../../cognitive-service/cognitive-service.service';\nimport { IIpaasBaseConfig } from './ipaas-base-configuration.types';\n\n@Component({\n  selector: 'rx-ipaas-base-configuration',\n  templateUrl: './ipaas-base-configuration.component.html'\n})\nexport class IpaasBaseConfigurationComponent implements AfterContentInit {\n  @Input()\n  ipaasConfig: IIpaasBaseConfig;\n\n  @Input()\n  childFormGroup: FormGroup;\n\n  busy: Subscription;\n  connectionTestStatus: ConnectionTestStatus = ConnectionTestStatus.Invalid;\n\n  private componentSettings: IAdminComponentSetting[];\n  private isNewIpaasConfiguration: boolean;\n\n  constructor(\n    private rxAdminSettingsService: RxAdminSettingsService,\n    private rxCognitiveServiceService: RxCognitiveServiceService,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService\n  ) {}\n\n  ngAfterContentInit(): void {\n    this.busy = this.getComponentSettings()\n      .pipe(\n        tap((componentSettings: IAdminComponentSettings) => {\n          this.isNewIpaasConfiguration = !get(componentSettings, 'values', []).length;\n\n          if (this.isNewIpaasConfiguration) {\n            this.componentSettings = map(values(this.ipaasConfig.settingNames), (settingName: string) => ({\n              assigneeGroupPermission: null,\n              componentName: this.ipaasConfig.componentName,\n              settingId: null,\n              settingName,\n              settingValue: null,\n              ownerKeyValue1: null\n            }));\n          } else {\n            this.componentSettings = componentSettings.values;\n            this.updateConfigFormValues();\n          }\n        })\n      )\n      .subscribe();\n\n    this.childFormGroup.valueChanges\n      .pipe(\n        tap(() => {\n          this.connectionTestStatus =\n            this.childFormGroup.pristine || this.childFormGroup.invalid\n              ? ConnectionTestStatus.Invalid\n              : ConnectionTestStatus.Unknown;\n        })\n      )\n      .subscribe();\n  }\n\n  updateConfigFormValues(): void {\n    const savedValues = {};\n\n    forEach(\n      this.ipaasConfig.controlsConfig,\n      (fieldValue, fieldName) => (savedValues[fieldName] = this.getValueFromSetting(fieldName))\n    );\n\n    if (isFunction(this.ipaasConfig.getFormValues)) {\n      this.childFormGroup.patchValue(this.ipaasConfig.getFormValues(savedValues));\n    } else {\n      this.childFormGroup.patchValue(savedValues);\n    }\n  }\n\n  onTestConnection(): void {\n    this.rxCognitiveServiceService\n      .testConnection({\n        resourceType: this.ipaasConfig.resourceType,\n        ...this.ipaasConfig.getPayload(this.childFormGroup.getRawValue())\n      })\n      .pipe(\n        catchError((error: HttpErrorResponse) => {\n          this.connectionTestStatus = ConnectionTestStatus.Failed;\n\n          return throwError(error);\n        })\n      )\n      .subscribe(() => {\n        this.connectionTestStatus = ConnectionTestStatus.Passed;\n      });\n  }\n\n  save(): void {\n    if (this.childFormGroup.valid && this.connectionTestStatus === ConnectionTestStatus.Passed) {\n      let adminSetting$: Observable<any>;\n\n      const payload = this.ipaasConfig.getPayload(this.childFormGroup.getRawValue());\n\n      forEach(payload, (settingValue, settingName) => this.setSettingValue(settingName, settingValue));\n\n      if (this.isNewIpaasConfiguration) {\n        adminSetting$ = this.rxAdminSettingsService.createComponentSettings(\n          this.ipaasConfig.componentName,\n          this.componentSettings,\n          {\n            'default-bundle-scope': this.ipaasConfig.bundleScope\n          }\n        );\n      } else {\n        adminSetting$ = this.rxAdminSettingsService.updateComponentSettings(\n          `${this.ipaasConfig.componentName}/${this.componentSettings[0].ownerKeyValue1}`,\n          this.componentSettings,\n          {\n            'default-bundle-scope': this.ipaasConfig.bundleScope\n          }\n        );\n      }\n\n      this.busy = adminSetting$\n        .pipe(\n          tap(() => {\n            this.rxNotificationService.addSuccessMessage(\n              this.translateService.instant(this.ipaasConfig.saveMessageKey)\n            );\n\n            this.connectionTestStatus = ConnectionTestStatus.Invalid;\n            this.childFormGroup.markAsPristine();\n          }),\n          switchMap(() => this.getComponentSettings()),\n          tap((response) => {\n            this.isNewIpaasConfiguration = false;\n            this.componentSettings = response.values;\n            this.updateConfigFormValues();\n          })\n        )\n        .subscribe();\n    }\n  }\n\n  isSaveButtonDisabled(): boolean {\n    return (\n      this.childFormGroup.pristine ||\n      this.childFormGroup.invalid ||\n      this.connectionTestStatus !== ConnectionTestStatus.Passed\n    );\n  }\n\n  private getComponentSettings(): Observable<IAdminComponentSettings> {\n    return this.rxAdminSettingsService.getComponentSettings(this.ipaasConfig.componentName, {\n      'default-bundle-scope': this.ipaasConfig.bundleScope\n    });\n  }\n\n  private setSettingValue(settingName: string, value: string): void {\n    find(this.componentSettings, {\n      settingName\n    }).settingValue = value;\n  }\n\n  private getValueFromSetting(settingName: string): string {\n    return get(\n      find(this.componentSettings, {\n        settingName\n      }),\n      'settingValue',\n      null\n    );\n  }\n}\n","<rx-admin-settings [header]=\"ipaasConfig.titleKey | translate\" [busy]=\"busy\">\n  <ng-content> </ng-content>\n\n  <rx-connection-tester\n    class=\"d-block form-group\"\n    buttonType=\"secondary\"\n    [status]=\"connectionTestStatus\"\n    (testConnection)=\"onTestConnection()\"\n    rx-id=\"ipaas-configuration-test-button\"\n  ></rx-connection-tester>\n\n  <div class=\"align-items-baseline\">\n    <button\n      type=\"button\"\n      adapt-button\n      btn-type=\"primary\"\n      [disabled]=\"isSaveButtonDisabled()\"\n      (click)=\"save()\"\n      rx-id=\"save-button\"\n      class=\"mt-3\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n  </div>\n</rx-admin-settings>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AdaptButtonModule } from '@bmc-ux/adapt-angular';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { RxConnectionTesterModule } from '@helix/platform/ui-kit';\nimport { IpaasBaseConfigurationComponent } from './ipaas-base-configuration.component';\n\n@NgModule({\n  imports: [\n    AdminSettingsModule,\n    AdaptButtonModule,\n    CommonModule,\n    TranslateModule,\n    RxConnectionTesterModule,\n    ReactiveFormsModule\n  ],\n  declarations: [IpaasBaseConfigurationComponent],\n  exports: [IpaasBaseConfigurationComponent]\n})\nexport class IpaasBaseConfigurationModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { IIpaasBaseConfig, IIpaasBaseConfigPayload } from '../ipaas-base-configuration/ipaas-base-configuration.types';\nimport { IpaasBaseConfigurationComponent } from '../ipaas-base-configuration/ipaas-base-configuration.component';\n\n@Component({\n  selector: 'rx-admin-jitterbit-configuration',\n  templateUrl: './jitterbit-configuration.component.html',\n  styleUrls: ['./jitterbit-configuration.component.scss']\n})\nexport class JitterbitConfigurationAdminComponent extends BaseViewComponent implements OnInit {\n  @ViewChild(IpaasBaseConfigurationComponent)\n  ipaasBaseConfigurationComponent: IpaasBaseConfigurationComponent;\n\n  jitterBitConfigurationForm: FormGroup;\n\n  jitterbitConfig: IIpaasBaseConfig = {\n    componentName: 'iPaaS Jitterbit Configuration',\n    resourceType: 'com.bmc.dsm.ipaas.jitterbit.command.PingJitterbitCommand',\n    bundleScope: RX_APPLICATION.ipaasJitterbitBundleId,\n    titleKey: 'com.bmc.arsys.rx.client.admin.jitterbit-configuration.header.title',\n    saveMessageKey: 'com.bmc.arsys.rx.client.admin.jitterbit-configuration.saved.message',\n    controlsConfig: {\n      url: '',\n      username: '',\n      password: ''\n    },\n    settingNames: {\n      url: 'url',\n      userName: 'username',\n      password: 'password'\n    },\n    getPayload: (formValue: any): IIpaasBaseConfigPayload => ({\n      url: formValue.url,\n      username: formValue.username,\n      password: formValue.password\n    })\n  };\n\n  constructor(private formBuilder: FormBuilder) {\n    super();\n  }\n\n  ngOnInit() {\n    this.jitterBitConfigurationForm = this.formBuilder.group(this.jitterbitConfig.controlsConfig);\n\n    this.notifyPropertyChanged('api', {\n      isDirty: () => this.ipaasBaseConfigurationComponent.childFormGroup.dirty\n    });\n  }\n}\n","<rx-ipaas-base-configuration [ipaasConfig]=\"jitterbitConfig\" [childFormGroup]=\"jitterBitConfigurationForm\">\n  <ng-container [formGroup]=\"jitterBitConfigurationForm\">\n    <adapt-rx-textfield\n      rx-id=\"endpoint-url\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.jitterbit-configuration.end-point-url.label' | translate }}\"\n      formControlName=\"url\"\n      required=\"true\"\n      class=\"d-block form-group\"\n    >\n    </adapt-rx-textfield>\n    <adapt-rx-textfield\n      rx-id=\"user-name\"\n      label=\"{{ 'com.bmc.arsys.rx.client.common.user-name.label' | translate }}\"\n      formControlName=\"username\"\n      required=\"true\"\n      class=\"d-block form-group\"\n    >\n    </adapt-rx-textfield>\n    <adapt-rx-textfield\n      rx-id=\"password\"\n      label=\"{{ 'com.bmc.arsys.rx.client.common.password.label' | translate }}\"\n      formControlName=\"password\"\n      required=\"true\"\n      [isPassword]=\"true\"\n      class=\"d-block form-group\"\n    >\n    </adapt-rx-textfield>\n  </ng-container>\n</rx-ipaas-base-configuration>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AdaptRxTextfieldModule } from '@bmc-ux/adapt-angular';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { IpaasBaseConfigurationModule } from '../ipaas-base-configuration/ipaas-base-configuration.module';\nimport { JitterbitConfigurationAdminComponent } from './jitterbit-configuration.component';\n\n@NgModule({\n  imports: [CommonModule, AdaptRxTextfieldModule, IpaasBaseConfigurationModule, ReactiveFormsModule, TranslateModule],\n  declarations: [JitterbitConfigurationAdminComponent]\n})\nexport class JitterbitConfigurationRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-jitterbit-configuration',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(JitterbitConfigurationAdminComponent),\n      name: 'iPaaS Jitterbit configuration',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IApiPath, IIpaasApiDefinition, IOrganizationData } from '../ipaas-base-apis/ipaas-base-apis.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxMulesoftApisService {\n  private readonly apiDefinitionUrl = '/api/com.bmc.dsm.ipaas-mulesoft/rx/application/ipaas/mulesoft';\n\n  constructor(private httpClient: HttpClient) {}\n\n  deleteApiDefinition(apiId: string): Observable<any> {\n    return this.httpClient.delete(`${this.apiDefinitionUrl}/apidefinition/${apiId}`);\n  }\n\n  createApiDefinition(apiDefinition: IIpaasApiDefinition): Observable<any> {\n    return this.httpClient.post(`${this.apiDefinitionUrl}/apidefinition`, apiDefinition);\n  }\n\n  getApiDefinition(apiId: string): Observable<IIpaasApiDefinition> {\n    return this.httpClient.get<IIpaasApiDefinition>(`${this.apiDefinitionUrl}/apidefinition/${apiId}`);\n  }\n\n  editApiDefinition(apiDefinition: IIpaasApiDefinition): Observable<any> {\n    return this.httpClient.put(`${this.apiDefinitionUrl}/apidefinition/${apiDefinition.id}`, apiDefinition);\n  }\n\n  getOrganizationsAndEnvironments(): Observable<IOrganizationData[]> {\n    return this.httpClient.get<IOrganizationData[]>(`${this.apiDefinitionUrl}/organization-info`);\n  }\n\n  getApiPathDefinitions(organization: string, environment: string): Observable<IApiPath> {\n    return this.httpClient.get<IApiPath>(\n      `${this.apiDefinitionUrl}/api-specs/${encodeURIComponent(organization)}/${encodeURIComponent(environment)}`\n    );\n  }\n}\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { ApiEditorBase } from '../ipaas-base-apis/api-editor/api-editor-base.class';\nimport { ActiveModalRef } from '@bmc-ux/adapt-angular';\nimport { RxMulesoftApisService } from './mulesoft-apis.service';\nimport {\n  IApiEditorFormData,\n  IApiPath,\n  IEnvironmentData,\n  IIpaasApiDefinition,\n  IOrganizationData\n} from '../ipaas-base-apis/ipaas-base-apis.types';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'rx-mulesoft-api-editor',\n  templateUrl: '../ipaas-base-apis/api-editor/api-editor.component.html',\n  styleUrls: ['../ipaas-base-apis/api-editor/api-editor.component.scss']\n})\nexport class MulesoftApiEditorComponent extends ApiEditorBase implements OnInit {\n  constructor(\n    private rxMulesoftApisService: RxMulesoftApisService,\n    protected activeModalRef: ActiveModalRef,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  protected getOrganizationsAndEnvironments(): Observable<IOrganizationData[]> {\n    return this.rxMulesoftApisService.getOrganizationsAndEnvironments();\n  }\n\n  protected getApiPathDefinitions(environment: IEnvironmentData): Observable<IApiPath> {\n    return this.rxMulesoftApisService.getApiPathDefinitions(this.selectedOrganization.id, environment.id);\n  }\n\n  protected getApiDefinition(apiId: string): Observable<IIpaasApiDefinition> {\n    return this.rxMulesoftApisService.getApiDefinition(apiId);\n  }\n\n  protected editApiDefinition(apiDefinition: IIpaasApiDefinition, formValue: IApiEditorFormData): Observable<any> {\n    apiDefinition.organizationId = formValue.organization[0].id;\n    apiDefinition.environmentId = formValue.environment[0].id;\n\n    return this.rxMulesoftApisService.editApiDefinition(apiDefinition);\n  }\n\n  protected createApiDefinition(apiDefinition: IIpaasApiDefinition, formValue: IApiEditorFormData): Observable<any> {\n    apiDefinition.organizationId = formValue.organization[0].id;\n    apiDefinition.environmentId = formValue.environment[0].id;\n\n    return this.rxMulesoftApisService.createApiDefinition(apiDefinition);\n  }\n\n  protected getEnvironmentList(): IEnvironmentData[] {\n    return this.organizations.find((value) => value.id === this.selectedOrganization.id)?.environments || [];\n  }\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { IIpaasApiInfo, IIpaasApisConfig } from '../ipaas-base-apis/ipaas-base-apis.types';\nimport { EMPTY, forkJoin, noop, Observable } from 'rxjs';\nimport { RxModalService } from '@helix/platform/ui-kit';\nimport { MulesoftApiEditorComponent } from './mulesoft-api-editor.component';\nimport { IpaasBaseApisComponent } from '../ipaas-base-apis/ipaas-base-apis.component';\nimport { RxNotificationService } from '@helix/platform/shared/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RxMulesoftApisService } from './mulesoft-apis.service';\n\n@Component({\n  selector: 'rx-admin-mulesoft-apis',\n  templateUrl: './mulesoft-apis.component.html'\n})\nexport class MulesoftApisAdminComponent {\n  @ViewChild('ipaasBaseApisConfiguration')\n  ipaasBaseApisComponent: IpaasBaseApisComponent;\n\n  mulesoftConfig: IIpaasApisConfig = {\n    titleKey: 'com.bmc.arsys.rx.client.admin.mulesoft-apis.header.title',\n    recordDefinitionName: 'com.bmc.dsm.ipaas-mulesoft:iPaaS MuleSoft API Definition',\n    resourceType: 'com.bmc.dsm.ipaas.mulesoft.command.RenameMuleSoftApiGroupCommand'\n  };\n\n  constructor(\n    private rxModalService: RxModalService,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService,\n    private rxMulesoftApisService: RxMulesoftApisService\n  ) {}\n\n  openMulesoftCreateApiEditor(apiInfo: IIpaasApiInfo): Promise<any> {\n    return this.rxModalService\n      .openModal({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.ipaas-api-editor.add-api.label'),\n        content: MulesoftApiEditorComponent,\n        data: apiInfo\n      })\n      .then((result) => {\n        if (result) {\n          this.ipaasBaseApisComponent.refreshIpaasGrid();\n        }\n      })\n      .catch(noop);\n  }\n\n  openMulesoftEditApiEditor(apiInfo: IIpaasApiInfo): Promise<any> {\n    return this.rxModalService\n      .openModal({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.ipaas-api-editor.edit-api.label'),\n        content: MulesoftApiEditorComponent,\n        data: apiInfo\n      })\n      .then((result) => {\n        if (result) {\n          this.ipaasBaseApisComponent.refreshIpaasGrid();\n        }\n      })\n      .catch(noop);\n  }\n\n  deleteMulesoftApis(apiIds: string[]): void {\n    this.deleteApiDefinitions(apiIds).subscribe(() => {\n      this.rxNotificationService.addSuccessMessage(\n        this.translateService.instant('com.bmc.arsys.rx.client.admin.ipaas-apis.delete-api.success.message')\n      );\n\n      this.ipaasBaseApisComponent.refreshIpaasGrid();\n    });\n  }\n\n  private deleteApiDefinitions(apiIds: string[]): Observable<any> {\n    if (apiIds.length) {\n      const deleteApiObservables$ = apiIds.map((apiId) => this.rxMulesoftApisService.deleteApiDefinition(apiId));\n\n      return forkJoin(deleteApiObservables$);\n    }\n\n    return EMPTY;\n  }\n}\n","<rx-ipaas-base-apis\n  [ipaasApisConfig]=\"mulesoftConfig\"\n  (createApi)=\"openMulesoftCreateApiEditor($event)\"\n  (editApi)=\"openMulesoftEditApiEditor($event)\"\n  (deleteApis)=\"deleteMulesoftApis($event)\"\n  #ipaasBaseApisConfiguration\n></rx-ipaas-base-apis>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { MulesoftApisAdminComponent } from './mulesoft-apis.component';\nimport { IpaasBaseApisModule } from '../ipaas-base-apis/ipaas-base-apis.module';\nimport { MulesoftApiEditorComponent } from './mulesoft-api-editor.component';\nimport { RxBusyIndicatorModule } from '@helix/platform/ui-kit';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  AdaptButtonModule,\n  AdaptRxLabelModule,\n  AdaptRxSelectEditableModule,\n  AdaptRxSelectModule,\n  AdaptRxTextfieldModule,\n  AdaptTabsModule\n} from '@bmc-ux/adapt-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    IpaasBaseApisModule,\n    RxBusyIndicatorModule,\n    ReactiveFormsModule,\n    AdaptRxLabelModule,\n    AdaptRxSelectModule,\n    AdaptRxSelectEditableModule,\n    AdaptRxTextfieldModule,\n    AdaptTabsModule,\n    TranslateModule,\n    AdaptButtonModule,\n    CommonModule\n  ],\n  declarations: [MulesoftApisAdminComponent, MulesoftApiEditorComponent],\n  entryComponents: [MulesoftApisAdminComponent]\n})\nexport class MulesoftApisRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-mulesoft-apis',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(MulesoftApisAdminComponent),\n      name: 'iPaaS MuleSoft APIs',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { IIpaasBaseConfigPayload } from '../ipaas-base-configuration/ipaas-base-configuration.types';\n\nexport interface IAuthenticationOption {\n  id: string;\n  label: string;\n}\n\nexport interface IMulesoftSettingParams extends IIpaasBaseConfigPayload {\n  authType: string;\n  clientId: string;\n  clientSecret: string;\n}\n\nexport const AUTH_TYPE = {\n  basicAuth: '0',\n  oAuth2: '1'\n};\n\nexport const MULESOFT_AUTH_TYPE_OPTIONS = [\n  {\n    id: AUTH_TYPE.basicAuth,\n    label: 'Basic'\n  },\n  {\n    id: AUTH_TYPE.oAuth2,\n    label: 'OAuth 2.0'\n  }\n];\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';\nimport { find, first } from 'lodash';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { IpaasBaseConfigurationComponent } from '../ipaas-base-configuration/ipaas-base-configuration.component';\nimport {\n  AUTH_TYPE,\n  IAuthenticationOption,\n  IMulesoftSettingParams,\n  MULESOFT_AUTH_TYPE_OPTIONS\n} from './mulesoft-configuration.types';\nimport { IIpaasBaseConfig } from '../ipaas-base-configuration/ipaas-base-configuration.types';\nimport { AdaptValidators } from '@bmc-ux/adapt-angular';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'rx-admin-mulesoft-configuration',\n  templateUrl: './mulesoft-configuration.component.html',\n  styleUrls: ['./mulesoft-configuration.component.scss']\n})\nexport class MulesoftConfigurationAdminComponent extends BaseViewComponent implements OnInit {\n  @ViewChild(IpaasBaseConfigurationComponent)\n  ipaasBaseConfigurationComponent: IpaasBaseConfigurationComponent;\n\n  mulesoftConfigurationForm: FormGroup;\n\n  mulesoftConfig: IIpaasBaseConfig = {\n    componentName: 'iPaaS MuleSoft Configuration',\n    resourceType: 'com.bmc.dsm.ipaas.mulesoft.command.PingMuleSoftCommand',\n    bundleScope: RX_APPLICATION.ipaasMulesoftBundleId,\n    titleKey: 'com.bmc.arsys.rx.client.admin.mulesoft-configuration.header.title',\n    saveMessageKey: 'com.bmc.arsys.rx.client.admin.mulesoft-configuration.saved.message',\n    controlsConfig: {\n      url: ['', AdaptValidators.required()],\n      authType: ['', AdaptValidators.required()],\n      username: '',\n      password: '',\n      clientId: '',\n      clientSecret: ''\n    },\n    getFormValues: (formValue: any) => ({\n      url: formValue.url,\n      authType: this.getAuthTypeOption(formValue.authType),\n      username: formValue.username,\n      password: formValue.password,\n      clientId: formValue.clientId,\n      clientSecret: formValue.clientSecret\n    }),\n    settingNames: {\n      url: 'url',\n      userName: 'username',\n      password: 'password',\n      authType: 'authType',\n      clientId: 'clientId',\n      clientSecret: 'clientSecret'\n    },\n    getPayload: (formValue: any): IMulesoftSettingParams => {\n      switch ((first(formValue.authType) as IAuthenticationOption)?.id) {\n        case AUTH_TYPE.oAuth2: {\n          return {\n            url: formValue.url,\n            authType: this.getAuthTypePayload(formValue.authType),\n            username: null,\n            password: null,\n            clientId: formValue.clientId,\n            clientSecret: formValue.clientSecret\n          };\n        }\n        default: {\n          return {\n            url: formValue.url,\n            authType: this.getAuthTypePayload(formValue.authType),\n            username: formValue.username,\n            password: formValue.password,\n            clientId: null,\n            clientSecret: null\n          };\n        }\n      }\n    }\n  };\n\n  authenticationOptions: IAuthenticationOption[] = MULESOFT_AUTH_TYPE_OPTIONS;\n\n  optionFormatter = (authenticationOption: IAuthenticationOption) => authenticationOption.label;\n\n  constructor(private formBuilder: FormBuilder) {\n    super();\n  }\n\n  ngOnInit() {\n    this.mulesoftConfigurationForm = this.formBuilder.group(this.mulesoftConfig.controlsConfig);\n    this.mulesoftConfigurationForm.patchValue({ authType: [first(MULESOFT_AUTH_TYPE_OPTIONS)] });\n\n    this.authType.valueChanges.pipe(map((authType) => this.getAuthTypePayload(authType))).subscribe((authType) => {\n      if (authType === AUTH_TYPE.basicAuth) {\n        this.mulesoftConfigurationForm.controls.username.setValidators(AdaptValidators.required());\n        this.mulesoftConfigurationForm.controls.username.enable();\n        this.mulesoftConfigurationForm.controls.password.setValidators(AdaptValidators.required());\n        this.mulesoftConfigurationForm.controls.password.enable();\n        this.mulesoftConfigurationForm.controls.clientId.clearValidators();\n        this.mulesoftConfigurationForm.controls.clientId.disable();\n        this.mulesoftConfigurationForm.controls.clientSecret.clearValidators();\n        this.mulesoftConfigurationForm.controls.clientSecret.disable();\n      } else if (authType === AUTH_TYPE.oAuth2) {\n        this.mulesoftConfigurationForm.controls.username.clearValidators();\n        this.mulesoftConfigurationForm.controls.username.disable();\n        this.mulesoftConfigurationForm.controls.password.clearValidators();\n        this.mulesoftConfigurationForm.controls.password.disable();\n        this.mulesoftConfigurationForm.controls.clientId.setValidators(AdaptValidators.required());\n        this.mulesoftConfigurationForm.controls.clientId.enable();\n        this.mulesoftConfigurationForm.controls.clientSecret.setValidators(AdaptValidators.required());\n        this.mulesoftConfigurationForm.controls.clientSecret.enable();\n      }\n    });\n\n    this.mulesoftConfigurationForm.patchValue({ authType: [first(MULESOFT_AUTH_TYPE_OPTIONS)] });\n\n    this.notifyPropertyChanged('api', {\n      isDirty: () => this.ipaasBaseConfigurationComponent.childFormGroup.dirty\n    });\n  }\n\n  get authType(): AbstractControl {\n    return this.mulesoftConfigurationForm.get('authType');\n  }\n\n  private getAuthTypeOption(id: string): IAuthenticationOption[] {\n    const authType = find(MULESOFT_AUTH_TYPE_OPTIONS, { id: id });\n\n    return authType ? [authType] : [];\n  }\n\n  private getAuthTypePayload(authType: IAuthenticationOption[]): string {\n    return first(authType)?.id;\n  }\n}\n","<rx-ipaas-base-configuration [ipaasConfig]=\"mulesoftConfig\" [childFormGroup]=\"mulesoftConfigurationForm\">\n  <ng-container [formGroup]=\"mulesoftConfigurationForm\">\n    <adapt-rx-textfield\n      rx-id=\"endpoint-url\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.mulesoft-configuration.end-point-url.label' | translate }}\"\n      formControlName=\"url\"\n      class=\"d-block form-group\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-select\n      rx-id=\"auth-type\"\n      formControlName=\"authType\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.data-source-connection-properties.authentication.label' | translate }}\"\n      [options]=\"authenticationOptions\"\n      [optionFormatter]=\"optionFormatter\"\n      class=\"d-block form-group\"\n    >\n    </adapt-rx-select>\n\n    <ng-container [ngSwitch]=\"authType.value[0]?.id\">\n      <ng-container *ngSwitchDefault>\n        <adapt-rx-textfield\n          rx-id=\"user-name\"\n          label=\"{{ 'com.bmc.arsys.rx.client.common.user-name.label' | translate }}\"\n          formControlName=\"username\"\n          class=\"d-block form-group\"\n        >\n        </adapt-rx-textfield>\n        <adapt-rx-textfield\n          rx-id=\"password\"\n          label=\"{{ 'com.bmc.arsys.rx.client.common.password.label' | translate }}\"\n          formControlName=\"password\"\n          [isPassword]=\"true\"\n          class=\"d-block form-group\"\n        >\n        </adapt-rx-textfield>\n      </ng-container>\n\n      <ng-container *ngSwitchCase=\"authenticationOptions[1].id\">\n        <adapt-rx-textfield\n          rx-id=\"client-id\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.bmc-service-cloud-account.client-id.label' | translate }}\"\n          formControlName=\"clientId\"\n          class=\"d-block form-group\"\n        >\n        </adapt-rx-textfield>\n        <adapt-rx-textfield\n          rx-id=\"client-secret\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.bmc-service-cloud-account.client-secret.label' | translate }}\"\n          formControlName=\"clientSecret\"\n          [isPassword]=\"true\"\n          class=\"d-block form-group\"\n        >\n        </adapt-rx-textfield>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n</rx-ipaas-base-configuration>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AdaptRxSelectModule, AdaptRxTextfieldModule } from '@bmc-ux/adapt-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { MulesoftConfigurationAdminComponent } from './mulesoft-configuration.component';\nimport { IpaasBaseConfigurationModule } from '../ipaas-base-configuration/ipaas-base-configuration.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AdaptRxTextfieldModule,\n    AdaptRxSelectModule,\n    TranslateModule,\n    IpaasBaseConfigurationModule\n  ],\n  declarations: [MulesoftConfigurationAdminComponent]\n})\nexport class MulesoftConfigurationRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-mulesoft-configuration',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(MulesoftConfigurationAdminComponent),\n      name: 'iPaaS MuleSoft configuration',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","export const RX_ISSUE_REPORTING_CONFIGURATION = {\n  oauthUrl: '/api/rx/application/oauth/token/IssueReporting',\n  settingName: 'errorReportingServiceTenantConfiguration',\n  supportUserMapping: {\n    recordDefinitionName: 'SupportUserMapping',\n    defaultDescription: 'com.bmc.arsys.rx.client.admin.issue-reporting-configuration.default-description.label',\n    fieldIds: {\n      loginName: 70221,\n      supportEmail: 70222\n    }\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RX_ISSUE_REPORTING_CONFIGURATION } from './issue-reporting-configuration.constant';\nimport { Observable } from 'rxjs';\nimport { IOauthConfig, ISupportConfig } from './issue-reporting-configuration.types';\nimport { RX_RECORD_DEFINITION, RxRecordInstanceDataPageService } from '@helix/platform/record/api';\nimport { RxSystemConfigurationService, RxCurrentUserService } from '@helix/platform/shared/api';\nimport { map } from 'rxjs/operators';\nimport { get } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxIssueReportingConfigurationService {\n  constructor(\n    private httpClient: HttpClient,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxSystemConfigurationService: RxSystemConfigurationService\n  ) {}\n\n  getOauthConfig(): Observable<IOauthConfig> {\n    return this.httpClient.get<IOauthConfig>(RX_ISSUE_REPORTING_CONFIGURATION.oauthUrl);\n  }\n\n  getSupportId(): Observable<string> {\n    return this.rxSystemConfigurationService\n      .getConfiguration(RX_ISSUE_REPORTING_CONFIGURATION.settingName)\n      .pipe(map((result) => JSON.parse(result.value as string).supportId || ''));\n  }\n\n  setSupportId(supportId: string): Observable<any> {\n    return this.rxSystemConfigurationService.setConfiguration(RX_ISSUE_REPORTING_CONFIGURATION.settingName, {\n      supportId\n    });\n  }\n\n  getSupportConfig(): Observable<ISupportConfig | null> {\n    return this.rxRecordInstanceDataPageService\n      .post({\n        params: {\n          recorddefinition: RX_ISSUE_REPORTING_CONFIGURATION.supportUserMapping.recordDefinitionName,\n          queryExpression: `'${\n            RX_ISSUE_REPORTING_CONFIGURATION.supportUserMapping.fieldIds.loginName\n          }' = \"${this.rxCurrentUserService.getName()}\"`,\n          propertySelection: [\n            RX_RECORD_DEFINITION.coreFieldIds.id,\n            RX_ISSUE_REPORTING_CONFIGURATION.supportUserMapping.fieldIds.loginName,\n            RX_ISSUE_REPORTING_CONFIGURATION.supportUserMapping.fieldIds.supportEmail\n          ]\n        }\n      })\n      .pipe(map((result) => get(result, 'data[0]', null)));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { RxCurrentUserService, RxNotificationService } from '@helix/platform/shared/api';\nimport { RxIssueReportingConfigurationService } from './issue-reporting-configuration.service';\nimport { forkJoin, Subscription } from 'rxjs';\nimport { RX_ISSUE_REPORTING_CONFIGURATION } from './issue-reporting-configuration.constant';\nimport {\n  RX_RECORD_DEFINITION,\n  RxRecordInstanceService,\n  RxRecordInstanceUpdateService\n} from '@helix/platform/record/api';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-issue-reporting-configuration',\n  templateUrl: './issue-reporting-configuration.component.html',\n  styleUrls: ['./issue-reporting-configuration.component.scss']\n})\nexport class IssueReportingConfigurationAdminComponent extends BaseViewComponent implements OnInit {\n  issueReportingConfigurationForm: FormGroup;\n  isAdministrator: boolean = this.rxCurrentUserService.isAdministrator();\n  isAccountLinked: boolean;\n  oauthUrl = '';\n  busy: Subscription;\n\n  private configId: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxIssueReportingConfigurationService: RxIssueReportingConfigurationService,\n    private rxNotificationService: RxNotificationService,\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private rxRecordInstanceUpdateService: RxRecordInstanceUpdateService,\n    private translateService: TranslateService\n  ) {\n    super();\n  }\n\n  saveConfig(): void {\n    const formValue = this.issueReportingConfigurationForm.getRawValue();\n\n    this.rxIssueReportingConfigurationService.setSupportId(formValue.supportId).subscribe();\n\n    if (this.configId) {\n      this.rxRecordInstanceService\n        .get(RX_ISSUE_REPORTING_CONFIGURATION.supportUserMapping.recordDefinitionName, this.configId)\n        .subscribe((recordInstance) => {\n          recordInstance.setFieldValue(\n            RX_ISSUE_REPORTING_CONFIGURATION.supportUserMapping.fieldIds.supportEmail,\n            formValue.supportEmail\n          );\n\n          this.rxRecordInstanceUpdateService.execute(recordInstance).subscribe(() => {\n            this.rxNotificationService.addSuccessMessage(\n              this.translateService.instant(\n                'com.bmc.arsys.rx.client.admin.issue-reporting-configuration.issue-reporting-configuration-updated.message'\n              )\n            );\n            this.issueReportingConfigurationForm.markAsPristine();\n          });\n        });\n    } else {\n      this.rxRecordInstanceService\n        .getNew(RX_ISSUE_REPORTING_CONFIGURATION.supportUserMapping.recordDefinitionName)\n        .subscribe((recordInstance) => {\n          recordInstance.setFieldValue(\n            RX_RECORD_DEFINITION.coreFieldIds.description,\n            this.translateService.instant(RX_ISSUE_REPORTING_CONFIGURATION.supportUserMapping.defaultDescription)\n          );\n\n          recordInstance.setFieldValue(\n            RX_ISSUE_REPORTING_CONFIGURATION.supportUserMapping.fieldIds.supportEmail,\n            formValue.supportEmail\n          );\n\n          recordInstance.setFieldValue(\n            RX_ISSUE_REPORTING_CONFIGURATION.supportUserMapping.fieldIds.loginName,\n            this.rxCurrentUserService.getName()\n          );\n\n          this.rxRecordInstanceService.create(recordInstance).subscribe(() => {\n            this.rxNotificationService.addSuccessMessage(\n              this.translateService.instant(\n                'com.bmc.arsys.rx.client.admin.issue-reporting-configuration.issue-reporting-configuration-saved.message'\n              )\n            );\n            this.issueReportingConfigurationForm.markAsPristine();\n          });\n        });\n    }\n  }\n\n  private getOauthData(): void {\n    this.busy = this.rxIssueReportingConfigurationService.getOauthConfig().subscribe((data) => {\n      this.oauthUrl = data.authorizeURL;\n      this.isAccountLinked = data.configured;\n    });\n  }\n\n  openWindow(): void {\n    const title = 'BMC Cloud Service';\n    const openedWindow = window.open(this.oauthUrl, title, 'scrollbars=1,height=600,width=670');\n\n    this.assertWindowClosed(openedWindow);\n  }\n\n  private assertWindowClosed(openedWindow: Window): void {\n    const interval = setInterval(() => {\n      if (!openedWindow || !openedWindow.closed) {\n        return;\n      }\n\n      clearInterval(interval);\n      this.getOauthData();\n    }, 100);\n  }\n\n  ngOnInit(): void {\n    this.notifyPropertyChanged('api', {\n      isDirty: () => this.issueReportingConfigurationForm?.dirty\n    });\n\n    if (this.isAdministrator) {\n      this.issueReportingConfigurationForm = this.formBuilder.group({\n        supportId: '',\n        supportEmail: ''\n      });\n\n      this.busy = forkJoin({\n        supportId: this.rxIssueReportingConfigurationService.getSupportId(),\n        supportConfig: this.rxIssueReportingConfigurationService.getSupportConfig()\n      }).subscribe((result) => {\n        let supportEmail = '';\n\n        if (result.supportConfig) {\n          this.configId = result.supportConfig[RX_RECORD_DEFINITION.coreFieldIds.id];\n          supportEmail =\n            result.supportConfig[RX_ISSUE_REPORTING_CONFIGURATION.supportUserMapping.fieldIds.supportEmail];\n        }\n\n        this.issueReportingConfigurationForm.patchValue({\n          supportId: result.supportId,\n          supportEmail\n        });\n      });\n\n      this.getOauthData();\n    }\n  }\n}\n","<rx-admin-settings\n  header=\"{{ 'com.bmc.arsys.rx.client.admin.issue-reporting-configuration.header.title' | translate }}\"\n  [busy]=\"busy\"\n>\n  <adapt-accordion multiselect=\"true\" class=\"pb-4\">\n    <form [formGroup]=\"issueReportingConfigurationForm\" *ngIf=\"isAdministrator\">\n      <adapt-accordion-tab\n        title=\"{{\n          'com.bmc.arsys.rx.client.admin.issue-reporting-configuration.bmc-service-cloud-account-configuration.label'\n            | translate\n        }}\"\n        isOpen=\"true\"\n      >\n        <adapt-rx-textfield\n          rx-id=\"support-id\"\n          label=\"Support ID\"\n          formControlName=\"supportId\"\n          required=\"true\"\n          class=\"d-block form-group\"\n        >\n        </adapt-rx-textfield>\n        <adapt-rx-textfield\n          rx-id=\"support-email\"\n          label=\"Support email\"\n          formControlName=\"supportEmail\"\n          required=\"true\"\n          email=\"true\"\n          class=\"d-block form-group\"\n        >\n        </adapt-rx-textfield>\n      </adapt-accordion-tab>\n\n      <adapt-accordion-tab title=\"Link BMC Service Cloud account to BMC Helix platform\" isOpen=\"true\" class=\"d-block\">\n        <adapt-alert\n          *ngIf=\"oauthUrl === null\"\n          class=\"py-2\"\n          [config]=\"{\n            content:\n              'com.bmc.arsys.rx.client.admin.issue-reporting-configuration.issue-reporting-configuration-missing.message'\n              | translate,\n            type: 'inline',\n            variant: 'danger'\n          }\"\n        ></adapt-alert>\n        <ng-container *ngIf=\"oauthUrl\">\n          <adapt-alert\n            *ngIf=\"isAccountLinked\"\n            class=\"py-2\"\n            [config]=\"{\n              content:\n                'com.bmc.arsys.rx.client.admin.issue-reporting-configuration.account-is-linked.message' | translate,\n              type: 'inline',\n              variant: 'success'\n            }\"\n          ></adapt-alert>\n          <adapt-alert\n            *ngIf=\"!isAccountLinked\"\n            class=\"py-2\"\n            [config]=\"{\n              content:\n                'com.bmc.arsys.rx.client.admin.issue-reporting-configuration.account-is-not-linked.message' | translate,\n              type: 'inline',\n              variant: 'warning'\n            }\"\n          ></adapt-alert>\n          <button\n            adapt-button\n            type=\"button\"\n            rx-id=\"link-account-button\"\n            btn-type=\"secondary\"\n            [disabled]=\"isAccountLinked\"\n            (click)=\"openWindow()\"\n          >\n            {{ 'com.bmc.arsys.rx.client.admin.issue-reporting-configuration.link-account.label' | translate }}\n          </button>\n        </ng-container>\n      </adapt-accordion-tab>\n\n      <button\n        adapt-button\n        type=\"button\"\n        rx-id=\"save-button\"\n        btn-type=\"primary\"\n        class=\"mt-4\"\n        [disabled]=\"issueReportingConfigurationForm.pristine || issueReportingConfigurationForm.invalid\"\n        (click)=\"saveConfig()\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n      </button>\n    </form>\n  </adapt-accordion>\n</rx-admin-settings>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { IssueReportingConfigurationAdminComponent } from './issue-reporting-configuration.component';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  AdaptAccordionModule,\n  AdaptAlertModule,\n  AdaptButtonModule,\n  AdaptIconModule,\n  AdaptRxTextfieldModule\n} from '@bmc-ux/adapt-angular';\n\n@NgModule({\n  imports: [\n    AdaptAccordionModule,\n    AdaptAlertModule,\n    AdaptButtonModule,\n    AdaptIconModule,\n    AdaptRxTextfieldModule,\n    AdminSettingsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    TranslateModule\n  ],\n  declarations: [IssueReportingConfigurationAdminComponent],\n  entryComponents: [IssueReportingConfigurationAdminComponent]\n})\nexport class IssueReportingConfigurationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-issue-reporting-configuration',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(\n        IssueReportingConfigurationAdminComponent\n      ),\n      name: 'Issue reporting configuration',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","export interface ITenant {\n  name: string;\n  domainIdentifier: string;\n  virtualHostname: string;\n  tenantId?: string;\n}\n\nexport enum TenantFields {\n  Name = 'name',\n  DomainIdentifier = 'domainIdentifier',\n  VirtualHostname = 'virtualHostname'\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ITenant } from './manage-tenant.types';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxTenantService {\n  private tenantApiUrl = '/api/rx/application/tenant';\n\n  constructor(private httpClient: HttpClient) {}\n\n  createTenant(tenant: ITenant): Observable<any> {\n    return this.httpClient.post(this.tenantApiUrl, tenant);\n  }\n\n  deleteTenant(tenantName: string): Observable<any> {\n    return this.httpClient.delete(`${this.tenantApiUrl}/${tenantName}`);\n  }\n\n  editTenant(tenant: ITenant): Observable<any> {\n    return this.httpClient.put(`${this.tenantApiUrl}/${tenant.name}`, tenant);\n  }\n\n  getTenant(tenantName: string): Observable<ITenant> {\n    return this.httpClient.get<ITenant>(`${this.tenantApiUrl}/${tenantName}`);\n  }\n}\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DismissReasons, DockedPanelContext } from '@bmc-ux/adapt-angular';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { RxTenantService } from '../manage-tenant.service';\nimport { RxNotificationService } from '@helix/platform/shared/api';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-tenant-editor',\n  templateUrl: './tenant-editor.component.html'\n})\nexport class TenantEditorComponent extends RxModalClass implements OnInit {\n  validDefinitionNameRegex: any;\n  tenantEditorFormGroup: FormGroup;\n  domainIdentifierRegexp = /^[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n  isEditMode = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dockedPanelContext: DockedPanelContext,\n    private rxManageTenantService: RxTenantService,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService,\n    protected injector: Injector\n  ) {\n    super(dockedPanelContext, injector);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    const selectedTenantData = this.dockedPanelContext.getData().tenant;\n\n    this.tenantEditorFormGroup = this.formBuilder.group({\n      name: '',\n      domainIdentifier: '',\n      virtualHostname: ''\n    });\n\n    if (selectedTenantData) {\n      this.isEditMode = true;\n\n      this.tenantEditorFormGroup.patchValue({\n        name: selectedTenantData.name,\n        domainIdentifier: selectedTenantData.domainIdentifier,\n        virtualHostname: selectedTenantData.virtualHostname\n      });\n    }\n  }\n\n  isDirty(): boolean {\n    return this.tenantEditorFormGroup.dirty;\n  }\n\n  save(): void {\n    const tenantPayload = this.tenantEditorFormGroup.getRawValue();\n\n    if (this.isEditMode) {\n      tenantPayload.tenantId = this.dockedPanelContext.getData().tenant.tenantId;\n    }\n\n    const writeEvent = this.isEditMode\n      ? this.rxManageTenantService.editTenant(tenantPayload)\n      : this.rxManageTenantService.createTenant(tenantPayload);\n\n    writeEvent.subscribe(() => {\n      this.rxNotificationService.addSuccessMessage(\n        this.isEditMode\n          ? this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.manage-tenant.tenant-editor.tenant-updated.message'\n            )\n          : this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.manage-tenant.tenant-editor.tenant-created.message'\n            )\n      );\n\n      this.tenantEditorFormGroup.markAsPristine();\n      this.dockedPanelContext.close('');\n    });\n  }\n\n  cancel(): void {\n    this.dockedPanelContext.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"dp-body\">\n  <form [formGroup]=\"tenantEditorFormGroup\">\n    <adapt-rx-textfield\n      class=\"d-block form-group\"\n      rx-id=\"tenant-name-field\"\n      formControlName=\"name\"\n      label=\" {{ 'com.bmc.arsys.rx.client.admin.manage-tenant.tenant-editor.tenant-name.label' | translate }}\"\n      required\n      maxlength=\"20\"\n      [disabled]=\"isEditMode\"\n    ></adapt-rx-textfield>\n    <adapt-rx-textfield\n      class=\"d-block form-group\"\n      rx-id=\"domain-identifier-field\"\n      formControlName=\"domainIdentifier\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.manage-tenant.tenant-editor.domain-identifier.label' | translate }}\"\n      placeholder=\"e.g. domain.com\"\n      required\n      maxlength=\"254\"\n      [pattern]=\"domainIdentifierRegexp\"\n    ></adapt-rx-textfield>\n    <adapt-rx-textfield\n      class=\"d-block form-group\"\n      rx-id=\"virtual-host-name-field\"\n      formControlName=\"virtualHostname\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.manage-tenant.tenant-editor.virtual-host-name.label' | translate }}\"\n      placeholder=\"e.g. host.domain.com\"\n      required\n      maxlength=\"254\"\n      [pattern]=\"domainIdentifierRegexp\"\n    ></adapt-rx-textfield>\n  </form>\n</div>\n\n<div class=\"dp-footer\">\n  <button\n    adapt-button\n    type=\"button\"\n    btn-type=\"primary\"\n    class=\"mr-2\"\n    rx-id=\"save-button\"\n    [disabled]=\"tenantEditorFormGroup.invalid || tenantEditorFormGroup.pristine\"\n    (click)=\"save()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n  <button adapt-button type=\"button\" btn-type=\"secondary\" rx-id=\"close-button\" class=\"mr-2\" (click)=\"cancel()\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IRecordDefinition, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { DataPage, IDataPageResult, RxDataPageFactoryService, RxNotificationService } from '@helix/platform/shared/api';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport {\n  IRecordGridConfig,\n  IRecordGridDataPageParams,\n  RecordGridComponent,\n  RowSelectionMode\n} from '@helix/platform/view/components';\nimport { noop, omit } from 'lodash';\nimport { Observable, of } from 'rxjs';\nimport { RxTenantService } from './manage-tenant.service';\nimport { ITenant, TenantFields } from './manage-tenant.types';\nimport { TenantEditorComponent } from './tenant-editor/tenant-editor.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-manage-tenant',\n  templateUrl: './manage-tenant.component.html'\n})\nexport class ManageTenantAdminComponent implements OnInit {\n  @ViewChild('manageTenantGrid', { static: true })\n  manageTenantGrid: RecordGridComponent;\n\n  manageTenantGridConfig: Observable<IRecordGridConfig>;\n\n  private dataPage: DataPage;\n\n  constructor(\n    private rxDataPageService: RxDataPageFactoryService,\n    private rxTenantService: RxTenantService,\n    private rxModalService: RxModalService,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService\n  ) {\n    this.dataPage = this.rxDataPageService.withType('com.bmc.arsys.rx.application.tenant.datapage.TenantDataPageQuery');\n  }\n\n  ngOnInit(): void {\n    this.manageTenantGridConfig = of({\n      actionButtons: [\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n          style: 'tertiary',\n          icon: 'trash',\n          actions: [\n            {\n              name: () => this.deleteTenant()\n            }\n          ]\n        }\n      ],\n      recordIdField: 'name',\n      enableRowSelection: RowSelectionMode.Single,\n      enableFiltering: false,\n      getData: (queryParams: IRecordGridDataPageParams) => this.getData(queryParams),\n      getRecordDefinition: () => of(this.getRecordDefinition()),\n      columns: [\n        {\n          index: 0,\n          title: this.translateService.instant('com.bmc.arsys.rx.client.admin.manage-tenant.tenant.label'),\n          fieldId: TenantFields.Name,\n          clickable: true,\n          sortable: false,\n          actions: [\n            {\n              name: (previousActionResult: any, lastActionRow: IRowDataItem) => this.editTenant(lastActionRow)\n            }\n          ]\n        },\n        {\n          index: 1,\n          title: this.translateService.instant(\n            'com.bmc.arsys.rx.client.admin.manage-tenant.tenant-editor.domain-identifier.label'\n          ),\n          fieldId: TenantFields.DomainIdentifier,\n          sortable: false\n        },\n        {\n          index: 2,\n          title: this.translateService.instant(\n            'com.bmc.arsys.rx.client.admin.manage-tenant.tenant-editor.virtual-host-name.label'\n          ),\n          fieldId: TenantFields.VirtualHostname,\n          sortable: false\n        }\n      ],\n      styles: 'flex-fill'\n    });\n  }\n\n  private getData = (queryParams: IRecordGridDataPageParams): Observable<IDataPageResult> =>\n    this.dataPage.get({ params: omit(queryParams, ['searchText', 'recorddefinition']) });\n\n  private getRecordDefinition(): IRecordDefinition {\n    return {\n      fieldDefinitions: [\n        {\n          id: TenantFields.Name,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: TenantFields.DomainIdentifier,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: TenantFields.VirtualHostname,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        }\n      ]\n    };\n  }\n\n  private refreshManageTenantGrid(): void {\n    this.manageTenantGrid.api.refresh().subscribe();\n  }\n\n  addTenant(): void {\n    const tenantCount = this.manageTenantGrid.adaptTableConfig.data.length;\n\n    if (tenantCount > 0) {\n      this.rxNotificationService.addErrorMessage(\n        this.translateService.instant('com.bmc.arsys.rx.client.admin.manage-tenant.tenant-already-exists.message')\n      );\n    } else {\n      this.openDockedPanel();\n    }\n  }\n\n  private editTenant(selectedTenant: IRowDataItem): void {\n    const selectedTenantName = selectedTenant[TenantFields.Name];\n\n    this.rxTenantService.getTenant(selectedTenantName).subscribe((tenant) => {\n      this.openDockedPanel(tenant);\n    });\n  }\n\n  private openDockedPanel(tenant?: ITenant): void {\n    this.rxModalService\n      .openDockedPanel({\n        title: tenant\n          ? this.translateService.instant('com.bmc.arsys.rx.client.admin.manage-tenant.edit-tenant.label')\n          : this.translateService.instant('com.bmc.arsys.rx.client.admin.manage-tenant.new-tenant.label'),\n        content: TenantEditorComponent,\n        size: 'lg',\n        data: {\n          tenant\n        }\n      })\n      .then(() => {\n        this.refreshManageTenantGrid();\n      })\n      .catch(noop);\n  }\n\n  private deleteTenant(): void {\n    this.rxModalService\n      .confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.manage-tenant.delete-confirmation.message'\n        )\n      })\n      .then((result: boolean) => {\n        if (result) {\n          const selectedTenantDefinition = this.manageTenantGrid.api.getFirstSelectedRow();\n\n          this.rxTenantService.deleteTenant(selectedTenantDefinition.name).subscribe(() => {\n            this.rxNotificationService.addSuccessMessage(\n              this.translateService.instant('com.bmc.arsys.rx.client.admin.manage-tenant.tenant-deleted.message')\n            );\n            this.refreshManageTenantGrid();\n          });\n        }\n      });\n  }\n}\n","<rx-admin-settings\n  header=\"{{ 'com.bmc.arsys.rx.client.admin.manage-tenant.tenant-activation.header.title' | translate }}\"\n>\n  <button\n    type=\"button\"\n    adapt-button\n    btn-type=\"tertiary\"\n    class=\"d-icon-plus_circle align-self-start\"\n    rx-id=\"new-button\"\n    (click)=\"addTenant()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.new.label' | translate }}\n  </button>\n\n  <rx-record-grid rx-id=\"manage-tenant-grid\" #manageTenantGrid [config]=\"manageTenantGridConfig\"></rx-record-grid>\n</rx-admin-settings>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ManageTenantAdminComponent } from './manage-tenant.component';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { AdaptButtonModule, AdaptRxTextfieldModule } from '@bmc-ux/adapt-angular';\nimport { TenantEditorComponent } from './tenant-editor/tenant-editor.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [ManageTenantAdminComponent, TenantEditorComponent],\n  imports: [\n    CommonModule,\n    AdminSettingsModule,\n    RecordGridModule,\n    AdaptButtonModule,\n    AdaptRxTextfieldModule,\n    ReactiveFormsModule,\n    TranslateModule\n  ],\n  entryComponents: [ManageTenantAdminComponent, TenantEditorComponent]\n})\nexport class ManageTenantRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-manage-tenant',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(ManageTenantAdminComponent),\n      name: 'Manage tenant',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import moment from 'moment-es6';\n\nexport const RX_OUTGOING_MAILBOX_STATUS = {\n  availableTimeFrames: [\n    {\n      id: '1',\n      name: 'com.bmc.arsys.rx.client.admin.outgoing-mailbox-status.last-hour.label',\n      duration: moment.duration(1, 'hour')\n    },\n    {\n      id: '2',\n      name: 'com.bmc.arsys.rx.client.admin.outgoing-mailbox-status.last-three-hours.label',\n      duration: moment.duration(3, 'hour')\n    },\n    {\n      id: '3',\n      name: 'com.bmc.arsys.rx.client.admin.outgoing-mailbox-status.last-day.label',\n      duration: moment.duration(1, 'day')\n    },\n    {\n      id: '4',\n      name: 'com.bmc.arsys.rx.client.admin.outgoing-mailbox-status.last-week.label',\n      duration: moment.duration(1, 'week')\n    },\n    {\n      id: '5',\n      name: 'com.bmc.arsys.rx.client.admin.outgoing-mailbox-status.last-month.label',\n      duration: moment.duration(1, 'month')\n    }\n  ],\n  fields: {\n    mailboxName: 'MailBoxName',\n    pending: 'Pending',\n    sent: 'Sent',\n    error: 'Error'\n  }\n};\n","import { Injectable, Injector } from '@angular/core';\nimport { DataPage } from '@helix/platform/shared/api';\n\nconst dataPageQuery = 'com.bmc.arsys.rx.application.email.datapage.OutgoingEmailMessageStatusDataPageQuery';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxOutgoingMailboxStatusDataPageService extends DataPage {\n  constructor(private injector: Injector) {\n    super(injector, dataPageQuery);\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AdaptIconConfig, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { ai_info_circle_o_adapt} from '@bmc-ux/dpl-iconfont';\nimport { IRecordDefinition, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IRecordGridColumn, IRecordGridConfig, RecordGridComponent } from '@helix/platform/view/components';\nimport { assign } from 'lodash';\nimport moment from 'moment-es6';\nimport { Observable, of } from 'rxjs';\nimport { RxOutgoingMailboxStatusDataPageService } from './outgoing-mailbox-status-data-page.service';\nimport { RX_OUTGOING_MAILBOX_STATUS } from './outgoing-mailbox-status.constant';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-outgoing-mailbox-status',\n  templateUrl: './outgoing-mailbox-status.component.html',\n  styleUrls: ['./outgoing-mailbox-status.component.scss']\n})\nexport class OutgoingMailboxStatusAdminComponent implements OnInit {\n  @ViewChild('recordGrid')\n  recordGrid: RecordGridComponent;\n\n  recordGridConfig: Observable<IRecordGridConfig>;\n\n  availableTimeFrames: RxSelectOption[] = RX_OUTGOING_MAILBOX_STATUS.availableTimeFrames.map((timeFrame) => ({\n    ...timeFrame,\n    name: this.translateService.instant(timeFrame.name)\n  }));\n\n  selectedTimeFrame: RxSelectOption[] = [this.availableTimeFrames[0]];\n\n  constructor(\n    private rxOutgoingMailboxStatusDataPageService: RxOutgoingMailboxStatusDataPageService,\n    private translateService: TranslateService,\n    private iconConfig: AdaptIconConfig\n  ) {\n    iconConfig.registerIcons([ai_info_circle_o_adapt]);\n  }\n\n  ngOnInit() {\n    const gridColumns: IRecordGridColumn[] = [\n      {\n        index: 0,\n        fieldId: RX_OUTGOING_MAILBOX_STATUS.fields.mailboxName,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.outgoing-mailbox-status.mailbox-name.label')\n      },\n      {\n        index: 1,\n        fieldId: RX_OUTGOING_MAILBOX_STATUS.fields.pending,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.outgoing-mailbox-status.pending.label'),\n        filterable: false\n      },\n      {\n        index: 2,\n        fieldId: RX_OUTGOING_MAILBOX_STATUS.fields.error,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.error.label'),\n        filterable: false\n      },\n      {\n        index: 3,\n        fieldId: RX_OUTGOING_MAILBOX_STATUS.fields.sent,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.outgoing-mailbox-status.sent.label'),\n        filterable: false\n      }\n    ];\n\n    const recordDefinition: IRecordDefinition = {\n      fieldDefinitions: [\n        {\n          id: RX_OUTGOING_MAILBOX_STATUS.fields.mailboxName,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_OUTGOING_MAILBOX_STATUS.fields.pending,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_OUTGOING_MAILBOX_STATUS.fields.error,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RX_OUTGOING_MAILBOX_STATUS.fields.sent,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        }\n      ]\n    };\n\n    this.recordGridConfig = of({\n      columns: gridColumns,\n      enableFiltering: true,\n      enableRowSelection: null,\n      getRecordDefinition: () => of(recordDefinition),\n      getData: (queryParams) => {\n        assign(queryParams, {\n          messagesBefore: moment().subtract(this.selectedTimeFrame[0].duration).toISOString()\n        });\n\n        return this.rxOutgoingMailboxStatusDataPageService.get({ params: queryParams });\n      },\n      styles: 'flex-fill',\n      useExternalFiltering: false\n    });\n  }\n\n  onTimeFrameChange(timeFrame: RxSelectOption): void {\n    this.selectedTimeFrame = timeFrame;\n    this.recordGrid.api.refresh().subscribe();\n  }\n\n  optionFormatter(timeFrame: RxSelectOption): string {\n    return timeFrame.name;\n  }\n}\n","<rx-admin-settings header=\"Outgoing mailbox status\">\n  <div class=\"d-flex flex-wrap\">\n    <adapt-rx-select\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.outgoing-mailbox-status.time-frame.label' | translate }}\"\n      class=\"form-group\"\n      rx-id=\"time-frame\"\n      [options]=\"availableTimeFrames\"\n      [ngModel]=\"selectedTimeFrame\"\n      [optionFormatter]=\"optionFormatter\"\n      (ngModelChange)=\"onTimeFrameChange($event)\"\n    >\n    </adapt-rx-select>\n\n    <button\n      adapt-button\n      btn-type=\"tertiary\"\n      class=\"form-group ml-auto align-self-end\"\n      placement=\"bottom\"\n      type=\"button\"\n      [adaptPopover]=\"'com.bmc.arsys.rx.client.admin.outgoing-mailbox-status.about-sent-email.tooltip' | translate\"\n    >\n      <span>\n        <adapt-icon name=\"info_circle_o_adapt\"></adapt-icon>\n        {{ 'com.bmc.arsys.rx.client.admin.outgoing-mailbox-status.about-sent-email.label' | translate }}\n      </span>\n    </button>\n  </div>\n\n  <rx-record-grid rx-id=\"outgoing-mailbox-status-grid\" #recordGrid [config]=\"recordGridConfig\"></rx-record-grid>\n</rx-admin-settings>\n","import { CommonModule } from '@angular/common';\nimport { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AdaptButtonModule, AdaptIconModule, AdaptPopoverModule, AdaptRxSelectModule } from '@bmc-ux/adapt-angular';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { OutgoingMailboxStatusAdminComponent } from './outgoing-mailbox-status.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [OutgoingMailboxStatusAdminComponent],\n  imports: [\n    CommonModule,\n    AdminSettingsModule,\n    RecordGridModule,\n    AdaptRxSelectModule,\n    FormsModule,\n    AdaptIconModule,\n    AdaptPopoverModule,\n    AdaptButtonModule,\n    TranslateModule\n  ],\n  entryComponents: [OutgoingMailboxStatusAdminComponent]\n})\nexport class OutgoingMailboxStatusRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-outgoing-mailbox-status',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(OutgoingMailboxStatusAdminComponent),\n      name: 'Outgoing mailbox status',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { RxNotificationService, RxSystemConfigurationService } from '@helix/platform/shared/api';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-permissions-policy',\n  templateUrl: './permissions-policy-header.component.html'\n})\nexport class PermissionsPolicyHeaderAdminComponent extends BaseViewComponent implements OnInit {\n  @ViewChild('permissionPolicyHeaderModel', { read: NgModel, static: true })\n  permissionPolicyHeaderModel: NgModel;\n\n  private settingName = 'permissionsPolicy';\n\n  permissionsPolicyHeader = '';\n  syntaxUrl = 'https://github.com/w3c/webappsec-permissions-policy/blob/main/permissions-policy-explainer.md';\n  busy: Subscription;\n\n  constructor(\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService,\n    private rxSystemConfigurationService: RxSystemConfigurationService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.notifyPropertyChanged('api', {\n      isDirty: () => this.isDirty()\n    });\n\n    this.busy = this.rxSystemConfigurationService.getConfiguration(this.settingName).subscribe((settingsData) => {\n      this.permissionsPolicyHeader = settingsData.value as string;\n    });\n  }\n\n  isDirty(): boolean {\n    return this.permissionPolicyHeaderModel?.dirty;\n  }\n\n  onSaveClick(): void {\n    this.rxSystemConfigurationService.setConfiguration(this.settingName, this.permissionsPolicyHeader).subscribe(() => {\n      this.rxNotificationService.addSuccessMessage(\n        this.translateService.instant('com.bmc.arsys.rx.client.admin.settings-saved.message')\n      );\n\n      this.permissionPolicyHeaderModel.control.markAsPristine();\n    });\n  }\n}\n","<rx-admin-settings\n  header=\"{{ 'com.bmc.arsys.rx.client.admin.permissions-policy-header.header.title' | translate }}\"\n  [busy]=\"busy\"\n>\n  <adapt-rx-textfield\n    [label]=\"'com.bmc.arsys.rx.client.admin.permissions-policy-header.label' | translate\"\n    [(ngModel)]=\"permissionsPolicyHeader\"\n    rx-id=\"permission-policy-header\"\n    name=\"permissionPolicyHeaderModel\"\n    class=\"form-group d-block\"\n    #permissionPolicyHeaderModel=\"ngModel\"\n    [autofocus]=\"true\"\n    [tooltip]=\"{\n      iconName: 'question_circle_o',\n      content: popover,\n      placement: 'right',\n      popoverMode: true,\n      maxWidth: 400\n    }\"\n  ></adapt-rx-textfield>\n\n  <button\n    class=\"align-self-start\"\n    rx-id=\"save-button\"\n    adapt-button\n    btn-type=\"primary\"\n    type=\"button\"\n    [disabled]=\"!permissionsPolicyHeader || !isDirty()\"\n    (click)=\"onSaveClick()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <ng-template #popover>\n    {{ 'com.bmc.arsys.rx.client.admin.permissions-policy-header.syntax-information.message' | translate }}\n    <a class=\"text-secondary\" target=\"_blank\" href=\"{{ syntaxUrl }}\">{{ syntaxUrl }}</a>\n  </ng-template>\n</rx-admin-settings>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { PermissionsPolicyHeaderAdminComponent } from './permissions-policy-header.component';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n  AdaptButtonModule,\n  AdaptPopoverModule,\n  AdaptEmptyStateModule,\n  AdaptIconModule,\n  AdaptRxTextfieldModule\n} from '@bmc-ux/adapt-angular';\n\n@NgModule({\n  declarations: [PermissionsPolicyHeaderAdminComponent],\n  imports: [\n    AdminSettingsModule,\n    FormsModule,\n    CommonModule,\n    TranslateModule,\n    AdaptButtonModule,\n    AdaptRxTextfieldModule,\n    AdaptEmptyStateModule,\n    AdaptIconModule,\n    AdaptPopoverModule\n  ],\n  entryComponents: [PermissionsPolicyHeaderAdminComponent]\n})\nexport class PermissionsPolicyHeaderRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-permissions-policy',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(PermissionsPolicyHeaderAdminComponent),\n      name: 'Permissions Policy Header',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","export const RX_REAL_TIME_TRANSLATION = {\n  supportedLocales: [\n    {\n      id: 'zh_cn',\n      name: 'com.bmc.arsys.rx.client.common.language.chinese.label'\n    },\n    {\n      id: 'nl',\n      name: 'com.bmc.arsys.rx.client.common.language.dutch.label'\n    },\n    {\n      id: 'en',\n      name: 'com.bmc.arsys.rx.client.common.language.english.label'\n    },\n    {\n      id: 'fr',\n      name: 'com.bmc.arsys.rx.client.common.language.french.label'\n    },\n    {\n      id: 'de',\n      name: 'com.bmc.arsys.rx.client.common.language.german.label'\n    },\n    {\n      id: 'it',\n      name: 'com.bmc.arsys.rx.client.common.language.italian.label'\n    },\n    {\n      id: 'ja',\n      name: 'com.bmc.arsys.rx.client.common.language.japanese.label'\n    },\n    {\n      id: 'ko',\n      name: 'com.bmc.arsys.rx.client.common.language.korean.label'\n    },\n    {\n      id: 'pt_br',\n      name: 'com.bmc.arsys.rx.client.common.language.portuguese.label'\n    },\n    {\n      id: 'ru',\n      name: 'com.bmc.arsys.rx.client.common.language.russian.label'\n    },\n    {\n      id: 'es',\n      name: 'com.bmc.arsys.rx.client.common.language.spanish.label'\n    },\n    {\n      id: 'sv',\n      name: 'com.bmc.arsys.rx.client.common.language.swedish.label'\n    }\n  ],\n  defaultSourceLocale: {\n    id: 'en',\n    name: 'com.bmc.arsys.rx.client.common.language.english.label'\n  },\n  defaultTargetLocale: {\n    id: 'de',\n    name: 'com.bmc.arsys.rx.client.common.language.german.label'\n  }\n};\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { RxCommandFactoryService } from '@helix/platform/shared/api';\nimport { head, castArray, isEmpty } from 'lodash';\nimport { RX_REAL_TIME_TRANSLATION } from './real-time-translation.constant';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-real-time-translation',\n  templateUrl: './real-time-translation.component.html',\n  styleUrls: ['./real-time-translation.component.scss']\n})\nexport class RealTimeTranslationAdminComponent implements OnInit {\n  sourceLanguage: RxSelectOption[] = [];\n  targetLanguage: RxSelectOption[] = [];\n  sourceText: string;\n  translatedText: string;\n\n  supportedLocaleOptions: RxSelectOption[] = RX_REAL_TIME_TRANSLATION.supportedLocales.map((locale) => ({\n    ...locale,\n    name: this.translateService.instant(locale.name)\n  }));\n\n  @ViewChild('realTimeTranslationForm', { static: true, read: NgForm })\n  realTimeTranslationForm: NgForm;\n\n  constructor(private rxCommandFactoryService: RxCommandFactoryService, private translateService: TranslateService) {}\n\n  ngOnInit(): void {\n    this.reset();\n  }\n\n  optionFormatter(option: RxSelectOption): string {\n    return option.name;\n  }\n\n  reset(): void {\n    this.sourceText = this.translatedText = null;\n    this.sourceLanguage = [\n      {\n        ...RX_REAL_TIME_TRANSLATION.defaultSourceLocale,\n        name: this.translateService.instant(RX_REAL_TIME_TRANSLATION.defaultSourceLocale.name)\n      }\n    ];\n    this.targetLanguage = [\n      {\n        ...RX_REAL_TIME_TRANSLATION.defaultTargetLocale,\n        name: this.translateService.instant(RX_REAL_TIME_TRANSLATION.defaultTargetLocale.name)\n      }\n    ];\n\n    this.realTimeTranslationForm.form.markAsPristine();\n  }\n\n  translate(): void {\n    this.realTimeTranslationForm.form.markAsPristine();\n\n    this.rxCommandFactoryService\n      .forResourceType('com.bmc.arsys.rx.application.cognitive.command.TranslateTextCommand')\n      .execute({\n        texts: castArray(this.sourceText),\n        sourceLanguage: head(this.sourceLanguage).id,\n        targetLanguage: head(this.targetLanguage).id\n      })\n      .subscribe((response) => {\n        this.translatedText = head(response);\n      });\n  }\n\n  clearTexts(): void {\n    this.sourceText = null;\n    this.translatedText = null;\n  }\n\n  isTranslateButtonDisabled(): boolean {\n    return this.realTimeTranslationForm.pristine || this.realTimeTranslationForm.invalid;\n  }\n\n  isClearButtonDisabled(): boolean {\n    return isEmpty(this.sourceText) && isEmpty(this.translatedText);\n  }\n\n  copyTranslatedText(): void {\n    const element = document.querySelector('[rx-id=\"translation\"] textarea') as HTMLInputElement;\n\n    element.select();\n    document.execCommand('copy');\n  }\n\n  isCopyButtonDisabled(): boolean {\n    return isEmpty(this.translatedText);\n  }\n}\n","<rx-admin-settings\n  header=\"{{ 'com.bmc.arsys.rx.client.admin.real-time-translation.interactive-translation.header.title' | translate }}\"\n>\n  <form #realTimeTranslationForm=\"ngForm\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <adapt-rx-select\n          name=\"sourceLanguage\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.real-time-translation.source-language.label' | translate }}\"\n          rx-id=\"source-language\"\n          class=\"form-group d-block\"\n          [(ngModel)]=\"sourceLanguage\"\n          [options]=\"supportedLocaleOptions\"\n          [optionFormatter]=\"optionFormatter\"\n        ></adapt-rx-select>\n      </div>\n      <div class=\"col-md-6\">\n        <adapt-rx-select\n          name=\"targetLanguage\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.real-time-translation.target-language.label' | translate }}\"\n          rx-id=\"target-language\"\n          class=\"form-group d-block\"\n          [(ngModel)]=\"targetLanguage\"\n          [options]=\"supportedLocaleOptions\"\n          [optionFormatter]=\"optionFormatter\"\n        ></adapt-rx-select>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <adapt-rx-textarea\n          name=\"sourceText\"\n          required=\"true\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.real-time-translation.source-text.label' | translate }}\"\n          placeholder=\"{{ 'com.bmc.arsys.rx.client.admin.real-time-translation.source-text.placeholder' | translate }}\"\n          rx-id=\"source-text\"\n          rows=\"18\"\n          class=\"form-group d-block\"\n          [(ngModel)]=\"sourceText\"\n        ></adapt-rx-textarea>\n\n        <div class=\"mb-2\">\n          <button\n            adapt-button\n            btn-type=\"primary\"\n            type=\"button\"\n            class=\"d-icon-file_arrow_right mr-2 mb-2\"\n            rx-id=\"translate-button\"\n            (click)=\"translate()\"\n            [disabled]=\"isTranslateButtonDisabled()\"\n          >\n            {{ 'com.bmc.arsys.rx.client.admin.real-time-translation.translate.label' | translate }}\n          </button>\n\n          <button\n            type=\"button\"\n            adapt-button\n            btn-type=\"secondary\"\n            class=\"d-icon-minus_circle mb-2\"\n            rx-id=\"clear-button\"\n            (click)=\"clearTexts()\"\n            [disabled]=\"isClearButtonDisabled()\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.clear.label' | translate }}\n          </button>\n        </div>\n      </div>\n\n      <div class=\"col-md-6\">\n        <adapt-rx-textarea\n          name=\"translatedText\"\n          class=\"form-group d-block\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.real-time-translation.translation.label' | translate }}\"\n          rx-id=\"translation\"\n          rows=\"18\"\n          [readonly]=\"true\"\n          [disabledStyleForReadonlyState]=\"true\"\n          [ngModel]=\"translatedText\"\n        ></adapt-rx-textarea>\n\n        <div class=\"mb-4\">\n          <button\n            adapt-button\n            btn-type=\"secondary\"\n            type=\"button\"\n            class=\"d-icon-files_copy_o\"\n            rx-id=\"copy-button\"\n            (click)=\"copyTranslatedText()\"\n            [disabled]=\"isCopyButtonDisabled()\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.copy.label' | translate }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </form>\n</rx-admin-settings>\n","import { CommonModule } from '@angular/common';\nimport { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n  AdaptButtonModule,\n  AdaptIconModule,\n  AdaptRxSelectModule,\n  AdaptRxTextareaModule,\n  AdaptRxTextfieldModule,\n  AdaptTooltipModule\n} from '@bmc-ux/adapt-angular';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { RealTimeTranslationAdminComponent } from './real-time-translation.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [RealTimeTranslationAdminComponent],\n  imports: [\n    AdminSettingsModule,\n    AdaptRxTextfieldModule,\n    CommonModule,\n    FormsModule,\n    AdaptRxSelectModule,\n    AdaptRxTextareaModule,\n    AdaptButtonModule,\n    TranslateModule\n  ],\n  entryComponents: [RealTimeTranslationAdminComponent]\n})\nexport class RealTimeTranslationRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-real-time-translation',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(RealTimeTranslationAdminComponent),\n      name: 'Real time translation',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","export const RX_ROLE_PERMISSIONS = {\n  minRoleId: -2147483647,\n  maxRoleId: -1\n};\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { IFunctionalRoleDescriptor, IRole } from '@helix/platform/shared/api';\nimport { forkJoin, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRolePermissionsService {\n  private path = '/api/rx/application/role';\n\n  constructor(private httpClient: HttpClient) {}\n\n  private getUrl(roleDescriptor: IFunctionalRoleDescriptor): string {\n    return `${this.path}/${encodeURIComponent(roleDescriptor.applicationName)}/${encodeURIComponent(\n      roleDescriptor.name\n    )}`;\n  }\n\n  get(roleDescriptor: IFunctionalRoleDescriptor): Observable<IRole> {\n    return <Observable<IRole>>this.httpClient.get(this.getUrl(roleDescriptor));\n  }\n\n  private deleteRole(roleDescriptor: IFunctionalRoleDescriptor): Observable<any> {\n    return this.httpClient.delete(this.getUrl(roleDescriptor));\n  }\n\n  delete(roles: IFunctionalRoleDescriptor[]): Observable<any> {\n    const deleteObservables = roles.map((role) => this.deleteRole(role));\n\n    return forkJoin(deleteObservables);\n  }\n\n  create(role: IRole): Observable<any> {\n    return this.httpClient.post(this.path, role);\n  }\n\n  update(role: IRole, roleName: string): Observable<any> {\n    return this.httpClient.put(this.getUrl({ applicationName: role.applicationName, name: roleName }), role);\n  }\n}\n","import { Component, Injector, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, NgForm, ValidationErrors } from '@angular/forms';\nimport { DismissReasons, DockedPanelContext, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport {\n  IBundleDescriptor,\n  IDataPageResult,\n  IRole,\n  RxGlobalCacheService,\n  RxGroupDataPageService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { TranslateService } from '@ngx-translate/core';\nimport { find, map as _map } from 'lodash';\nimport { Observable, OperatorFunction, ReplaySubject, Subscription, throwError } from 'rxjs';\nimport { catchError, distinctUntilChanged, map, takeUntil } from 'rxjs/operators';\nimport { RX_ROLE_PERMISSIONS } from '../role-permissions.constant';\nimport { RxRolePermissionsService } from '../role-permissions.service';\n\n@Component({\n  selector: 'rx-role-editor',\n  templateUrl: './role-editor.component.html'\n})\nexport class RoleEditorComponent extends RxModalClass implements OnInit, OnDestroy {\n  role: IRole;\n\n  @ViewChild('roleEditorForm', { read: NgForm, static: true })\n  roleEditorForm: NgForm;\n  applicationOptions: RxSelectOption[];\n  busy: Subscription;\n  groupList: string[];\n  isEditMode = false;\n  isSaveInProgress = false;\n  isSaveButtonDisabled = true;\n  selectedApplication: RxSelectOption;\n  maxRoleId = RX_ROLE_PERMISSIONS.maxRoleId;\n  minRoleId = RX_ROLE_PERMISSIONS.minRoleId;\n  oldRoleName: string;\n  validDefinitionNameRegex = RX_RECORD_DEFINITION.validDefinitionNameRegex;\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n  validatorFn = this.roleNameValidator.bind(this);\n\n  constructor(\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxGroupDataPageService: RxGroupDataPageService,\n    private rxRolePermissionsService: RxRolePermissionsService,\n    private rxNotificationService: RxNotificationService,\n    private dockedPanelContext: DockedPanelContext,\n    private translateService: TranslateService,\n    protected injector: Injector\n  ) {\n    super(dockedPanelContext, injector);\n  }\n\n  testSearch: OperatorFunction<string, string[]> = (text$: Observable<string>) =>\n    text$.pipe(\n      distinctUntilChanged(),\n      map((term) => this.groupList.filter((v) => v.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\n    );\n\n  productionSearch: OperatorFunction<string, string[]> = (text$: Observable<string>) =>\n    text$.pipe(\n      distinctUntilChanged(),\n      map((term) => this.groupList.filter((v) => v.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\n    );\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.getApplicationList();\n    this.getGroupList();\n    this.role = this.dockedPanelContext.getData().role;\n    this.isEditMode = Boolean(this.role.roleName);\n    this.isSaveButtonDisabled = !this.roleEditorForm.valid;\n\n    this.roleEditorForm.valueChanges.pipe(distinctUntilChanged(), takeUntil(this.destroyed$)).subscribe((value) => {\n      this.isSaveButtonDisabled = !this.roleEditorForm.valid || this.roleEditorForm.pristine;\n    });\n\n    if (this.isEditMode) {\n      let selectedApplication = find(this.applicationOptions, { value: this.role.applicationName });\n\n      if (!selectedApplication) {\n        selectedApplication = {\n          displayValue: this.role.applicationName,\n          value: this.role.applicationName\n        };\n\n        this.applicationOptions.push(selectedApplication);\n      }\n\n      this.selectedApplication = [selectedApplication];\n      this.oldRoleName = this.role.roleName;\n    }\n  }\n\n  isDirty(): boolean {\n    return this.roleEditorForm.dirty;\n  }\n\n  optionFormatter(option: RxSelectOption): string {\n    return option.displayValue;\n  }\n\n  save(): void {\n    this.isSaveInProgress = true;\n    this.isSaveButtonDisabled = true;\n\n    if (!this.isEditMode) {\n      this.role.applicationName = this.selectedApplication[0].value;\n    }\n\n    const saveRole$ = this.isEditMode\n      ? this.rxRolePermissionsService.update(this.role, this.oldRoleName)\n      : this.rxRolePermissionsService.create(this.role);\n\n    saveRole$\n      .pipe(\n        catchError((error) => {\n          this.isSaveInProgress = false;\n          this.isSaveButtonDisabled = false;\n\n          return throwError(error);\n        })\n      )\n      .subscribe((response) => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.admin.role-permissions.role-saved.message')\n        );\n        this.isSaveInProgress = false;\n        this.isSaveButtonDisabled = false;\n        this.dockedPanelContext.close(saveRole$);\n      });\n  }\n\n  getGroupList() {\n    const startIndex = 0;\n    const pageSize = -1;\n    const queryParams = {\n      propertySelection: ['groupName', 'groupId'].join(','),\n      sortBy: 'groupName'\n    };\n\n    this.rxGroupDataPageService\n      .get({\n        params: { startIndex, pageSize, ...queryParams }\n      })\n      .pipe(\n        map((groupDataPage: IDataPageResult) => {\n          this.groupList = _map(groupDataPage.data, 'groupName');\n        })\n      )\n      .subscribe();\n  }\n\n  getApplicationList() {\n    this.rxGlobalCacheService.getBundleDescriptors().subscribe((bundleDescriptors: IBundleDescriptor[]) => {\n      this.applicationOptions = bundleDescriptors\n        .sort((bundleDescriptor: IBundleDescriptor, bundleDescriptorToCompare: IBundleDescriptor) =>\n          bundleDescriptor.friendlyName.localeCompare(bundleDescriptorToCompare.friendlyName)\n        )\n        .map((bundleDescriptor: IBundleDescriptor) => ({\n          displayValue: bundleDescriptor.friendlyName,\n          value: bundleDescriptor.id\n        }));\n    });\n  }\n\n  closeModal(): void {\n    this.dockedPanelContext.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  roleNameValidator(control: AbstractControl): ValidationErrors | null {\n    return control.value && !RX_RECORD_DEFINITION.validDefinitionNameRegex.test(control.value)\n      ? {\n          invalidRoleName: {\n            message: this.translateService.instant(\n              'com.bmc.arsys.rx.client.admin.role-permissions.role-name-validation.message'\n            )\n          }\n        }\n      : null;\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n","<div class=\"dp-body\">\n  <h4 class=\"m-0 mb-3\">{{ 'com.bmc.arsys.rx.client.admin.role-permissions.general-information.label' | translate }}</h4>\n  <form #roleEditorForm=\"ngForm\">\n    <adapt-rx-select\n      class=\"form-group d-block\"\n      label=\"{{ 'com.bmc.arsys.rx.client.common.application-or-library.label' | translate }}\"\n      rx-id=\"application-name\"\n      [(ngModel)]=\"selectedApplication\"\n      [options]=\"applicationOptions\"\n      [optionFormatter]=\"optionFormatter\"\n      name=\"application\"\n      required=\"true\"\n      [readonly]=\"isEditMode\"\n    >\n    </adapt-rx-select>\n\n    <adapt-rx-textfield\n      rx-id=\"role-name\"\n      class=\"form-group d-block\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.role-permissions.role-name.label' | translate }}\"\n      name=\"roleName\"\n      required=\"true\"\n      [(ngModel)]=\"role.roleName\"\n      [rxCustomValidators]=\"validatorFn\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-counter\n      rx-id=\"role-id\"\n      class=\"form-group d-block\"\n      required=\"true\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.role-permissions.role-id.label' | translate }}\"\n      name=\"roleId\"\n      adaptIntegerNumber\n      [max]=\"maxRoleId\"\n      [min]=\"minRoleId\"\n      [adaptMax]=\"maxRoleId\"\n      [adaptMin]=\"minRoleId\"\n      [(ngModel)]=\"role.roleID\"\n    ></adapt-rx-counter>\n\n    <div class=\"d-row\">\n      <h4 class=\"form-group\">{{ 'com.bmc.arsys.rx.client.admin.role-permissions.group-mapping.label' | translate }}</h4>\n    </div>\n\n    <adapt-rx-typeahead\n      rx-id=\"test\"\n      class=\"form-group d-block\"\n      [(ngModel)]=\"role.test\"\n      name=\"test\"\n      [typeahead]=\"testSearch\"\n      label=\"Test\"\n      placeholder=\"Enter test group name\"\n    ></adapt-rx-typeahead>\n\n    <adapt-rx-typeahead\n      rx-id=\"production\"\n      class=\"form-group d-block\"\n      [(ngModel)]=\"role.production\"\n      name=\"production\"\n      [typeahead]=\"productionSearch\"\n      label=\"Production\"\n      placeholder=\"Enter production group name\"\n    ></adapt-rx-typeahead>\n\n    <adapt-rx-textfield\n      rx-id=\"datatag\"\n      class=\"form-group d-block\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.role-permissions.datatag.label' | translate }}\"\n      name=\"datatag\"\n      placeholder=\"Enter datatag\"\n      [(ngModel)]=\"role.datatag\"\n    ></adapt-rx-textfield>\n  </form>\n</div>\n<div class=\"dp-footer\">\n  <button\n    adapt-button\n    btn-type=\"primary\"\n    type=\"button\"\n    rx-id=\"save-button\"\n    class=\"mr-2\"\n    (click)=\"save()\"\n    [disabled]=\"isSaveButtonDisabled\"\n    [adaptInlineLoader]=\"isSaveInProgress\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n  <button adapt-button btn-type=\"secondary\" type=\"button\" rx-id=\"cancel-button\" (click)=\"closeModal()\">Cancel</button>\n</div>\n","export enum RoleFields {\n  RoleId = 'roleID',\n  RoleName = 'roleName',\n  ApplicationName = 'applicationName',\n  Datatag = 'datatag'\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IRecordDefinition, RecordInstance, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { IDataPageResult, IRole, RxNotificationService, RxRoleDataPageService } from '@helix/platform/shared/api';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport {\n  IRecordGridActionButton,\n  IRecordGridColumn,\n  IRecordGridConfig,\n  IRecordGridDataPageParams,\n  RecordGridComponent,\n  RowSelectionMode\n} from '@helix/platform/view/components';\nimport { castArray, noop } from 'lodash';\nimport { Observable, of } from 'rxjs';\nimport { RoleEditorComponent } from './role-editor/role-editor.component';\nimport { RoleFields } from './role-permission.types';\nimport { RxRolePermissionsService } from './role-permissions.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-role-permissions',\n  templateUrl: './role-permissions.component.html'\n})\nexport class RolePermissionsAdminComponent implements OnInit {\n  recordGridConfig$: Observable<IRecordGridConfig>;\n\n  @ViewChild('rolesPermissionsRecordGrid', { static: false })\n  rolesPermissionsRecordGrid: RecordGridComponent;\n  currentRecordInstance: Observable<RecordInstance>;\n  isDirty = false;\n\n  constructor(\n    private rxRolePermissionsService: RxRolePermissionsService,\n    private rxNotificationService: RxNotificationService,\n    private rxModalService: RxModalService,\n    private rxRoleDataPage: RxRoleDataPageService,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit(): void {\n    const gridColumns: IRecordGridColumn[] = [\n      {\n        index: 0,\n        fieldId: RoleFields.RoleId,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.role-permissions.role-id.label'),\n        filterable: false\n      },\n      {\n        index: 1,\n        fieldId: RoleFields.RoleName,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.role-permissions.role-name.label'),\n        filterable: true,\n        clickable: true,\n        actions: [\n          {\n            name: (previousActionResult: any, lastActionRow: IRowDataItem) => this.editRole(lastActionRow)\n          }\n        ]\n      },\n      {\n        index: 2,\n        fieldId: RoleFields.ApplicationName,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.application-issues.application-name.title'),\n        filterable: true\n      },\n      {\n        index: 3,\n        fieldId: RoleFields.Datatag,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.role-permissions.datatag.label'),\n        filterable: false\n      }\n    ];\n\n    const recordDefinition: IRecordDefinition = {\n      fieldDefinitions: [\n        {\n          id: RoleFields.RoleId,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RoleFields.RoleName,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RoleFields.ApplicationName,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: RoleFields.Datatag,\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        }\n      ]\n    };\n\n    const actionButtons: IRecordGridActionButton[] = [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n        style: 'tertiary',\n        icon: 'trash',\n        actions: [\n          {\n            name: () => {\n              this.rxModalService\n                .confirm({\n                  title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n                  modalStyle: RX_MODAL.modalStyles.warning,\n                  message: this.translateService.instant(\n                    'com.bmc.arsys.rx.client.admin.role-permissions.delete-confirmation.message'\n                  )\n                })\n                .then((result: boolean) => {\n                  if (result) {\n                    const selectedRecords = castArray(this.rolesPermissionsRecordGrid.api.getSelectedRows());\n\n                    const rolesToDelete = selectedRecords.map((record) => {\n                      return {\n                        applicationName: record[RoleFields.ApplicationName],\n                        name: record[RoleFields.RoleName]\n                      };\n                    });\n\n                    this.rxRolePermissionsService.delete(rolesToDelete).subscribe(() => {\n                      this.rxNotificationService.addSuccessMessage(\n                        this.translateService.instant(\n                          'com.bmc.arsys.rx.client.admin.role-permissions.roles-deleted.message'\n                        )\n                      );\n                      this.rolesPermissionsRecordGrid.api.refresh().subscribe();\n                    });\n                  }\n                });\n            }\n          }\n        ]\n      }\n    ];\n\n    this.recordGridConfig$ = of({\n      columns: gridColumns,\n      enableFiltering: true,\n      recordIdField: RoleFields.RoleId,\n      getRecordDefinition: () => of(recordDefinition),\n      enableRowSelection: RowSelectionMode.Multiple,\n      actionButtons: actionButtons,\n      getData: this.getData,\n      styles: 'flex-fill'\n    });\n  }\n\n  private getData = (queryParams: IRecordGridDataPageParams): Observable<IDataPageResult> => {\n    delete queryParams.searchText;\n\n    return this.rxRoleDataPage.get({\n      params: { ...queryParams }\n    });\n  };\n\n  openDockedPanel(title: string, role: IRole) {\n    this.rxModalService\n      .openDockedPanel({\n        title: title,\n        content: RoleEditorComponent,\n        size: 'lg',\n        data: {\n          role\n        }\n      })\n      .then((result) => {\n        if (result) {\n          this.rolesPermissionsRecordGrid.api.refresh().subscribe();\n        }\n      })\n      .catch(noop);\n  }\n\n  createRole() {\n    this.openDockedPanel(\n      this.translateService.instant('com.bmc.arsys.rx.client.admin.role-permissions.create-role.label'),\n      {\n        roleID: null,\n        roleName: '',\n        datatag: '',\n        test: '',\n        production: '',\n        applicationName: ''\n      }\n    );\n  }\n\n  private editRole(roleRow: IRowDataItem): void {\n    this.rxRolePermissionsService\n      .get({\n        applicationName: roleRow[RoleFields.ApplicationName],\n        name: roleRow[RoleFields.RoleName]\n      })\n      .subscribe((role: IRole) => {\n        this.openDockedPanel(\n          this.translateService.instant('com.bmc.arsys.rx.client.admin.role-permissions.edit-role.label'),\n          role\n        );\n      });\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.admin.role-permissions.header.title' | translate }}\">\n  <button\n    adapt-button\n    type=\"button\"\n    btn-type=\"tertiary\"\n    class=\"d-icon-plus_circle align-self-start btn btn-link\"\n    rx-id=\"new-button\"\n    (click)=\"createRole()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.new.label' | translate }}\n  </button>\n\n  <rx-record-grid rx-id=\"roles-permissions-grid\" #rolesPermissionsRecordGrid [config]=\"recordGridConfig$\">\n  </rx-record-grid>\n</rx-admin-settings>\n","import { CommonModule } from '@angular/common';\nimport { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n  AdaptBusyModule,\n  AdaptButtonModule,\n  AdaptRxCounterModule,\n  AdaptRxFormControlModule,\n  AdaptRxSelectModule,\n  AdaptRxTextfieldModule,\n  AdaptRxTypeaheadModule,\n  AdaptRxValidatorsModule\n} from '@bmc-ux/adapt-angular';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { RxDirectivesModule } from '@helix/platform/ui-kit';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RoleEditorComponent } from './role-editor/role-editor.component';\nimport { RolePermissionsAdminComponent } from './role-permissions.component';\n\n@NgModule({\n  declarations: [RolePermissionsAdminComponent, RoleEditorComponent],\n  imports: [\n    AdaptBusyModule,\n    AdaptButtonModule,\n    AdaptRxCounterModule,\n    AdaptRxFormControlModule,\n    AdaptRxSelectModule,\n    AdaptRxTextfieldModule,\n    AdaptRxTypeaheadModule,\n    AdaptRxValidatorsModule,\n    AdminSettingsModule,\n    CommonModule,\n    FormsModule,\n    RecordGridModule,\n    RxDirectivesModule,\n    TranslateModule\n  ],\n  entryComponents: [RolePermissionsAdminComponent]\n})\nexport class RolePermissionsRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-role-permissions',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(RolePermissionsAdminComponent),\n      name: 'Role permissions',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { IRssoOAuthSection } from './rsso-oauth.types';\n\nconst fieldIds = {\n  clientId: 1780,\n  clientSecret: 1781,\n  apiAuthorizationEndpoint: 1782,\n  oAuthProvider: 1783,\n  resourceServer: 1784,\n  bundleId: 61001\n};\n\nconst sections: IRssoOAuthSection[] = [\n  {\n    title: 'com.bmc.arsys.rx.client.admin.rsso-auth.bmc-helix-digital-workplace.title',\n    isOpen: true,\n    isSaveInProgress: false,\n    recordInstanceId: '',\n    rxId: 'digital-workplace',\n    fields: [\n      {\n        id: fieldIds.apiAuthorizationEndpoint,\n        type: 'text',\n        name: 'API authorization endpoint',\n        value: '',\n        label: 'com.bmc.arsys.rx.client.admin.rsso-auth.api-authorization-endpoint-url.label',\n        rxId: 'api-auth-endpoint'\n      },\n      {\n        id: fieldIds.resourceServer,\n        type: 'text',\n        name: 'Resource server',\n        value: '',\n        label: 'com.bmc.arsys.rx.client.admin.rsso-auth.resource-server.label',\n        rxId: 'resource-server'\n      },\n      {\n        id: fieldIds.clientId,\n        type: 'text',\n        name: 'Client ID',\n        value: '',\n        label: 'com.bmc.arsys.rx.client.admin.rsso-auth.client-id.label',\n        rxId: 'client-id'\n      },\n      {\n        id: fieldIds.clientSecret,\n        type: 'password',\n        name: 'Client secret',\n        value: '',\n        label: 'com.bmc.arsys.rx.client.admin.rsso-auth.client-secret.label',\n        rxId: 'client-secret'\n      }\n    ],\n    formName: 'digitalWorkplaceForm',\n    oAuthProvider: 'RSSO OAuth'\n  },\n  {\n    title: 'com.bmc.arsys.rx.client.admin.rsso-auth.bmc-helix-cloud-cost.title',\n    isOpen: true,\n    isSaveInProgress: false,\n    recordInstanceId: '',\n    rxId: 'cloud-cost',\n    fields: [\n      {\n        id: fieldIds.apiAuthorizationEndpoint,\n        type: 'text',\n        name: 'API authorization endpoint',\n        value: '',\n        label: 'com.bmc.arsys.rx.client.admin.rsso-auth.api-authorization-endpoint-url.label',\n        rxId: 'api-auth-endpoint'\n      },\n      {\n        id: fieldIds.resourceServer,\n        type: 'text',\n        name: 'Resource server',\n        value: '',\n        label: 'com.bmc.arsys.rx.client.admin.rsso-auth.resource-server.label',\n        rxId: 'resource-server'\n      },\n      {\n        id: fieldIds.clientId,\n        type: 'text',\n        name: 'Client ID',\n        value: '',\n        label: 'com.bmc.arsys.rx.client.admin.rsso-auth.client-id.label',\n        rxId: 'client-id'\n      },\n      {\n        id: fieldIds.clientSecret,\n        type: 'password',\n        name: 'Client secret',\n        value: '',\n        label: 'com.bmc.arsys.rx.client.admin.rsso-auth.client-secret.label',\n        rxId: 'client-secret'\n      }\n    ],\n    formName: 'cloudCostForm',\n    oAuthProvider: 'Cloud Cost RSSO'\n  }\n];\n\nexport const RX_RSSO_OAUTH = {\n  recordDefinitionName: 'OAuth Configuration',\n  oAuthConfigurationDescription: 'oauth-configuration',\n  fieldIds: {\n    bundleId: fieldIds.bundleId,\n    oAuthProvider: fieldIds.oAuthProvider\n  },\n  sections\n};\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  RecordInstance,\n  RxRecordInstanceService,\n  RxRecordInstanceDataPageService,\n  RX_RECORD_DEFINITION,\n  RxRecordInstanceUpdateService\n} from '@helix/platform/record/api';\nimport { RX_RSSO_OAUTH } from './rsso-oauth.constant';\nimport { IDataPageResult } from '@helix/platform/shared/api';\nimport { KeyValueObject } from '@bmc-ux/adapt-angular';\nimport { RssoOAuthConfiguration, IRssoOAuthConfigurationField } from './rsso-oauth.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRssoOAuthConfigurationService {\n  constructor(\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private rxRecordInstanceUpdateService: RxRecordInstanceUpdateService,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService\n  ) {}\n\n  getConfigs(): Observable<RssoOAuthConfiguration[]> {\n    return this.rxRecordInstanceDataPageService\n      .post({\n        params: {\n          recorddefinition: RX_RSSO_OAUTH.recordDefinitionName,\n          queryExpression: `('${RX_RECORD_DEFINITION.coreFieldIds.description}'=\"${RX_RSSO_OAUTH.oAuthConfigurationDescription}\")`,\n          propertySelection: [RX_RECORD_DEFINITION.coreFieldIds.id, RX_RSSO_OAUTH.fieldIds.oAuthProvider]\n        }\n      })\n      .pipe(\n        map((response: IDataPageResult) => {\n          return response.data.map((rssoConfiguration: KeyValueObject) => {\n            return Object.keys(rssoConfiguration).map(function (key) {\n              return { id: key, value: rssoConfiguration[key] } as IRssoOAuthConfigurationField;\n            });\n          });\n        })\n      );\n  }\n\n  saveConfigRecordInstance(recordInstance: RecordInstance): Observable<any> {\n    if (recordInstance.id) {\n      return this.rxRecordInstanceUpdateService.execute(recordInstance);\n    } else {\n      return this.rxRecordInstanceService.create(recordInstance);\n    }\n  }\n\n  getConfigRecordInstance(recordInstanceId: string): Observable<RecordInstance> {\n    if (recordInstanceId) {\n      return this.rxRecordInstanceService.get(RX_RSSO_OAUTH.recordDefinitionName, recordInstanceId);\n    } else {\n      return this.rxRecordInstanceService.getNew(RX_RSSO_OAUTH.recordDefinitionName);\n    }\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { RX_RSSO_OAUTH } from './rsso-oauth.constant';\nimport { find, map } from 'lodash';\nimport { catchError, switchMap, tap } from 'rxjs/operators';\nimport { forkJoin, Subscription, throwError } from 'rxjs';\nimport { RX_APPLICATION, RxCurrentUserService, RxNotificationService } from '@helix/platform/shared/api';\nimport { RecordInstance, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxRssoOAuthConfigurationService } from './rsso-oauth-configuration.service';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { IRssoOAuthSection } from './rsso-oauth.types';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-rsso-oauth',\n  templateUrl: './rsso-oauth.component.html',\n  styleUrls: ['./rsso-oauth.component.scss']\n})\nexport class RssoOauthAdminComponent extends BaseViewComponent implements OnInit {\n  @ViewChild('serviceForm', { read: NgForm, static: false })\n  serviceForm: NgForm;\n\n  sections: IRssoOAuthSection[] = RX_RSSO_OAUTH.sections;\n  busy: Subscription;\n\n  constructor(\n    private rxRssoOAuthService: RxRssoOAuthConfigurationService,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.notifyPropertyChanged('api', {\n      isDirty: () => this.serviceForm.dirty\n    });\n\n    this.busy = this.rxRssoOAuthService\n      .getConfigs()\n      .pipe(\n        switchMap((rssoConfigurations) => {\n          const recondInstanceConfigs$ = map(rssoConfigurations, (configuration) => {\n            const oAuthProviderInConfiguration = find(configuration, {\n              id: String(RX_RSSO_OAUTH.fieldIds.oAuthProvider)\n            }).value;\n\n            const section = find(this.sections, { oAuthProvider: oAuthProviderInConfiguration });\n\n            section.recordInstanceId = find(configuration, {\n              id: String(RX_RECORD_DEFINITION.coreFieldIds.id)\n            }).value;\n\n            return this.rxRssoOAuthService.getConfigRecordInstance(section.recordInstanceId).pipe(\n              tap((recordInstance: RecordInstance) => {\n                map(section.fields, (field) => {\n                  field.value = recordInstance.fieldInstances[field.id].value;\n                });\n              })\n            );\n          });\n\n          return forkJoin(recondInstanceConfigs$);\n        })\n      )\n      .subscribe();\n  }\n\n  save(section: IRssoOAuthSection, form: NgForm): void {\n    section.isSaveInProgress = true;\n\n    this.rxRssoOAuthService\n      .getConfigRecordInstance(section.recordInstanceId)\n      .pipe(\n        switchMap((recordInstance) => {\n          map(section.fields, (field) => {\n            recordInstance.fieldInstances[field.id].value = field.value;\n          });\n\n          recordInstance.setFieldValue(RX_RSSO_OAUTH.fieldIds.oAuthProvider, section.oAuthProvider);\n          recordInstance.setFieldValue(RX_RSSO_OAUTH.fieldIds.bundleId, RX_APPLICATION.chatbotBundleId);\n\n          recordInstance.setFieldValue(\n            RX_RECORD_DEFINITION.coreFieldIds.description,\n            RX_RSSO_OAUTH.oAuthConfigurationDescription\n          );\n\n          return this.rxRssoOAuthService.saveConfigRecordInstance(recordInstance);\n        }),\n        catchError((err) => {\n          section.isSaveInProgress = false;\n\n          return throwError(err);\n        })\n      )\n      .subscribe((response) => {\n        if (response) {\n          section.recordInstanceId = response.id;\n        }\n\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.admin.rsso-auth.rsso-oauth-settings-saved.message')\n        );\n        form.form.markAsPristine();\n        section.isSaveInProgress = false;\n      });\n  }\n\n  isSaveButtonDisabled(form: NgForm): boolean {\n    return form.pristine || form.invalid;\n  }\n\n  isSaveButtonVisible(): boolean {\n    return this.rxCurrentUserService.isAdministrator();\n  }\n\n  isSaveInProgress(section): boolean {\n    return section.isSaveInProgress;\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.admin.rsso-auth.header.title' | translate }}\" [busy]=\"busy\">\n  <adapt-accordion multiselect=\"true\" class=\"pb-4\">\n    <form *ngFor=\"let section of sections\" name=\"section.formName\" #serviceForm=\"ngForm\">\n      <adapt-accordion-tab\n        [title]=\"section.title | translate\"\n        [isOpen]=\"section.isOpen\"\n        class=\"mb-3\"\n        [attr.rx-id]=\"section.rxId\"\n      >\n        <adapt-rx-textfield\n          *ngFor=\"let field of section.fields\"\n          [name]=\"field.name\"\n          [(ngModel)]=\"field.value\"\n          [required]=\"true\"\n          [attr.rx-id]=\"field.rxId\"\n          [label]=\"field.label | translate\"\n          [pattern]=\"field.pattern\"\n          class=\"d-block form-group\"\n          [isPassword]=\"field.type === 'password'\"\n        >\n        </adapt-rx-textfield>\n        <button\n          adapt-button\n          type=\"button\"\n          rx-id=\"save-button\"\n          btn-type=\"primary\"\n          class=\"mt-4\"\n          [disabled]=\"isSaveButtonDisabled(serviceForm)\"\n          [adaptInlineLoader]=\"isSaveInProgress(section)\"\n          *ngIf=\"isSaveButtonVisible()\"\n          (click)=\"save(section, serviceForm)\"\n        >\n          {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n        </button>\n      </adapt-accordion-tab>\n    </form>\n  </adapt-accordion>\n</rx-admin-settings>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RssoOauthAdminComponent } from './rsso-oauth.component';\nimport { FormsModule } from '@angular/forms';\nimport {\n  AdaptAccordionModule,\n  AdaptBusyModule,\n  AdaptButtonModule,\n  AdaptRxTextfieldModule\n} from '@bmc-ux/adapt-angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [RssoOauthAdminComponent],\n  imports: [\n    CommonModule,\n    AdminSettingsModule,\n    AdaptAccordionModule,\n    AdaptRxTextfieldModule,\n    AdaptButtonModule,\n    AdaptBusyModule,\n    FormsModule,\n    TranslateModule\n  ],\n  entryComponents: [RssoOauthAdminComponent]\n})\nexport class RssoOauthRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-rsso-oauth',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(RssoOauthAdminComponent),\n      name: 'RSSO OAuth',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","export const RX_RULE_POOL_MANAGEMENT = {\n  ruleTypes: {\n    ruleWithIssues: 'rule-with-issues',\n    ruleWithoutIssues: 'rule-without-issues',\n    remedyEscalationWithIssues: 'remedy-escalation-with-issues',\n    remedyEscalationWithoutIssues: 'remedy-escalation-without-issues'\n  },\n\n  poolTypes: {\n    poolWithIssues: 'pool-with-issues',\n    poolWithoutIssues: 'pool-without-issues'\n  },\n\n  conflictsRecordFieldIds: {\n    ruleName: 'rule',\n    numberOfDelays: 'noOfTimesDelayed'\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DataPage, IDataPageResult, RxDataPageFactoryService } from '@helix/platform/shared/api';\nimport { IRulePoolStatistics } from './rule-pool-management.interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRulePoolDataService {\n  private resource: DataPage;\n\n  constructor(private rxDataPageService: RxDataPageFactoryService) {\n    this.resource = this.rxDataPageService.withType(\n      'com.bmc.arsys.rx.application.rule.datapage.RulePoolStatisticsDataPageQuery'\n    );\n  }\n\n  getRulePoolStatistics(): Observable<IRulePoolStatistics[]> {\n    return this.resource.get().pipe(map((dataPageResult: IDataPageResult<IRulePoolStatistics>) => dataPageResult.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, Observable, forkJoin, Subscription } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\nimport { AdaptTreeNode, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport {\n  IBundleDescriptor,\n  RxDefinitionNameService,\n  RxGlobalCacheService,\n  RxOverlayService\n} from '@helix/platform/shared/api';\nimport { RxRuleDefinitionService, IRuleDefinition } from '@helix/platform/rule/api';\nimport { RX_RULE_POOL_MANAGEMENT } from './rule-pool-management.constant';\nimport { RxRulePoolDataService } from './rule-pool-data.service';\nimport { IRuleConflictOccurrences, IRulePoolStatistics, IRuleStatistics } from './rule-pool-management.interfaces';\nimport { find } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRulePoolManagementService {\n  private availablePoolsTreeSubject$ = new BehaviorSubject([]);\n  availablePoolsTree$: Observable<AdaptTreeNode[]> = this.availablePoolsTreeSubject$\n    .asObservable()\n    .pipe(shareReplay(1));\n\n  constructor(\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxOverlayService: RxOverlayService,\n    private rxRuleDefinitionService: RxRuleDefinitionService,\n    private rxRulePoolDataService: RxRulePoolDataService,\n    private translateService: TranslateService\n  ) {}\n\n  fetchAvailablePoolsTree(): Subscription {\n    return forkJoin([\n      this.rxRulePoolDataService.getRulePoolStatistics(),\n      this.rxGlobalCacheService.getBundleDescriptors()\n    ])\n      .pipe(\n        map(([rulePoolStatistics, bundleDescriptors]) => {\n          this.availablePoolsTreeSubject$.next(this.buildTreeNodes(rulePoolStatistics, bundleDescriptors));\n        })\n      )\n      .subscribe();\n  }\n\n  getAvailablePoolOptions(): Observable<RxSelectOption[]> {\n    return this.availablePoolsTree$.pipe(map(this.buildSelectOptions));\n  }\n\n  getRuleConflictsData(adaptTreeNode: AdaptTreeNode): IRuleConflictOccurrences[] {\n    if (!adaptTreeNode) {\n      return [];\n    }\n\n    return adaptTreeNode.data.conflictingRules.delayedByRules.concat(\n      adaptTreeNode.data.conflictingRules.delaysOtherRules.map((ruleConflictOccurrences: IRuleConflictOccurrences) => ({\n        ...ruleConflictOccurrences,\n        noOfTimesDelayed: 0\n      }))\n    );\n  }\n\n  isRuleDesignerAvailable(ruleStatistics: IRuleStatistics): boolean {\n    return !ruleStatistics.remedyEscalation && Boolean(this.rxDefinitionNameService.getBundleId(ruleStatistics.name));\n  }\n\n  reassignRuleToPool(ruleDefinitionName: string, poolNumber: number): Observable<any> {\n    return this.rxRuleDefinitionService.get(ruleDefinitionName).pipe(\n      switchMap((ruleDefinition: IRuleDefinition) => {\n        ruleDefinition.triggerEvent.poolNumber = poolNumber;\n\n        return this.rxRuleDefinitionService.update(ruleDefinition);\n      })\n    );\n  }\n\n  private buildSelectOptions(poolTreeNodes: AdaptTreeNode[]): RxSelectOption[] {\n    return poolTreeNodes.map((pool) => ({\n      id: pool.data.executionPoolNumber,\n      name: pool.label\n    }));\n  }\n\n  private buildTreeNodes(\n    rulePoolStatistics: IRulePoolStatistics[],\n    bundleDescriptors: IBundleDescriptor[]\n  ): AdaptTreeNode[] {\n    return rulePoolStatistics.map((pool: IRulePoolStatistics) => {\n      const children = pool.rules.map((rule: IRuleStatistics) => {\n        rule.isRuleWithIssues = Boolean(\n          rule.conflictingRules.delayedByRules.length ||\n            rule.conflictingRules.delaysOtherRules.length ||\n            rule.designTimePoolNumber > rulePoolStatistics.length\n        );\n\n        let ruleType;\n\n        if (rule.remedyEscalation) {\n          ruleType = rule.isRuleWithIssues\n            ? RX_RULE_POOL_MANAGEMENT.ruleTypes.remedyEscalationWithIssues\n            : RX_RULE_POOL_MANAGEMENT.ruleTypes.remedyEscalationWithoutIssues;\n        } else {\n          ruleType = rule.isRuleWithIssues\n            ? RX_RULE_POOL_MANAGEMENT.ruleTypes.ruleWithIssues\n            : RX_RULE_POOL_MANAGEMENT.ruleTypes.ruleWithoutIssues;\n        }\n\n        rule.isEditable = this.isRuleEditable(rule, bundleDescriptors);\n\n        return {\n          data: rule,\n          key: `${pool.executionPoolNumber}_${rule.guid}`,\n          label: this.rxDefinitionNameService.getDisplayName(rule.name),\n          type: ruleType\n        };\n      });\n\n      const localizedStringKey = pool.isDefaultPool\n        ? 'com.bmc.arsys.rx.client.admin.rule-pool-management.available-pools.default-pool-tree-node.label'\n        : 'com.bmc.arsys.rx.client.admin.rule-pool-management.available-pools.pool-tree-node.label';\n\n      const label = this.translateService.instant(localizedStringKey, {\n        poolNumber: pool.executionPoolNumber,\n        ruleCount: pool.rules.length\n      });\n\n      return {\n        children,\n        data: pool,\n        label: label,\n        selectable: false,\n        type: pool.hasRulesWithIssues\n          ? RX_RULE_POOL_MANAGEMENT.poolTypes.poolWithIssues\n          : RX_RULE_POOL_MANAGEMENT.poolTypes.poolWithoutIssues\n      };\n    });\n  }\n\n  private isRuleEditable(ruleStatistics: IRuleStatistics, bundleDescriptors: IBundleDescriptor[]): boolean {\n    const bundleId = this.rxDefinitionNameService.getBundleId(ruleStatistics.name),\n      bundleDescriptor = find(bundleDescriptors, ['id', bundleId]);\n\n    return !ruleStatistics.remedyEscalation && Boolean(bundleId)\n      ? this.rxOverlayService.areNewDefinitionsAllowedSync(bundleDescriptor)\n      : false;\n  }\n}\n","import { Component, Injector, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ReplaySubject, Observable } from 'rxjs';\nimport { finalize, takeUntil, take } from 'rxjs/operators';\nimport { ActiveModalRef, DismissReasons, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { RxNotificationService } from '@helix/platform/shared/api';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { RxRuleDefinitionService } from '@helix/platform/rule/api';\nimport { RxRulePoolManagementService } from '../rule-pool-management.service';\n\n@Component({\n  selector: 'rx-rule-reassignment',\n  templateUrl: './rule-reassignment.component.html'\n})\nexport class RuleReassignmentComponent extends RxModalClass implements OnInit, OnDestroy {\n  isSaveButtonDisabled = true;\n  poolFormControl = new FormControl([]);\n  poolSelectOptions$: Observable<RxSelectOption[]>;\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private selectedPoolId: number;\n\n  constructor(\n    private activeModalRef: ActiveModalRef,\n    private rxNotificationService: RxNotificationService,\n    private rxRuleDefinitionService: RxRuleDefinitionService,\n    private rxRulePoolManagementService: RxRulePoolManagementService,\n    private translateService: TranslateService,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n\n    this.poolFormControl.valueChanges.pipe(takeUntil(this.destroyed$)).subscribe((selectedPools: RxSelectOption[]) => {\n      this.selectedPoolId = selectedPools[0].id;\n      this.isSaveButtonDisabled = false;\n    });\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.poolSelectOptions$ = this.rxRulePoolManagementService.getAvailablePoolOptions();\n  }\n\n  optionFormatter(selectOption: RxSelectOption): string {\n    return selectOption.name;\n  }\n\n  save(): void {\n    this.allowDismiss = false;\n    this.isSaveButtonDisabled = true;\n\n    this.rxRulePoolManagementService\n      .reassignRuleToPool(this.activeModalRef.getData().ruleName, this.selectedPoolId)\n      .pipe(\n        take(1),\n        finalize(() => {\n          this.allowDismiss = true;\n          this.isSaveButtonDisabled = false;\n        })\n      )\n      .subscribe(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.admin.rule-pool-management.reassignment-saved.message')\n        );\n\n        this.activeModalRef.close(true);\n      });\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n","<div class=\"modal-header\">\n  <h5 class=\"modal-title\">\n    {{ 'com.bmc.arsys.rx.client.admin.rule-pool-management.reassignment-dialog.title' | translate }}\n  </h5>\n  <button\n    class=\"close dp-close\"\n    type=\"button\"\n    rx-id=\"x-button\"\n    [disabled]=\"!allowDismiss\"\n    (click)=\"cancel()\"\n  ></button>\n</div>\n\n<div class=\"modal-body\">\n  <adapt-rx-select\n    [formControl]=\"poolFormControl\"\n    [options]=\"poolSelectOptions$ | async\"\n    [optionFormatter]=\"optionFormatter\"\n    [label]=\"'com.bmc.arsys.rx.client.admin.rule-pool-management.assign-to.label' | translate\"\n  ></adapt-rx-select>\n</div>\n\n<div class=\"modal-footer\">\n  <button\n    adapt-button\n    btn-type=\"primary\"\n    type=\"button\"\n    rx-id=\"save-button\"\n    (click)=\"save()\"\n    [adaptInlineLoader]=\"!allowDismiss\"\n    [disabled]=\"isSaveButtonDisabled || !allowDismiss\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n  <button\n    adapt-button\n    btn-type=\"secondary\"\n    type=\"button\"\n    rx-id=\"cancel-button\"\n    (click)=\"cancel()\"\n    [disabled]=\"!allowDismiss\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, combineLatest, ReplaySubject, Subscription } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { noop } from 'lodash';\nimport { AdaptTreeNode, TreeWrap } from '@bmc-ux/adapt-angular';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxModalService } from '@helix/platform/ui-kit';\nimport { RX_RULE_POOL_MANAGEMENT } from './rule-pool-management.constant';\nimport { IRuleConflictsTableConfig } from './rule-pool-management.interfaces';\nimport { RxRulePoolManagementService } from './rule-pool-management.service';\nimport { RuleReassignmentComponent } from './rule-reassignment/rule-reassignment.component';\n\n@Component({\n  selector: 'rx-admin-rule-pool-management',\n  templateUrl: './rule-pool-management.component.html',\n  styleUrls: ['./rule-pool-management.component.scss']\n})\nexport class RulePoolManagementAdminComponent implements OnInit, OnDestroy {\n  availablePoolsTree: AdaptTreeNode[] = [];\n  busy: Subscription;\n  ruleConflictsTableConfig: IRuleConflictsTableConfig;\n  ruleDesignerLink = `/helix/index.html#/${RX_APPLICATION.innovationStudioBundleId}/rule/edit/`;\n  showOnlyRulesWithIssuesFormControl = new FormControl(false);\n  strings: { [key: string]: string } = {};\n  treeWrap: TreeWrap = TreeWrap.WrapAll;\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private selectedRuleValue: AdaptTreeNode = null;\n\n  get selectedRule(): AdaptTreeNode {\n    return this.selectedRuleValue;\n  }\n\n  set selectedRule(selectedRule: AdaptTreeNode) {\n    this.selectedRuleSubject$.next(selectedRule);\n  }\n\n  private selectedRuleSubject$ = new BehaviorSubject(this.selectedRuleValue);\n  private selectedRule$ = this.selectedRuleSubject$.asObservable().pipe(takeUntil(this.destroyed$));\n\n  private showOnlyRulesWithIssuesSubject$ = new BehaviorSubject(false);\n  private showOnlyRulesWithIssues$ = this.showOnlyRulesWithIssuesSubject$\n    .asObservable()\n    .pipe(takeUntil(this.destroyed$));\n\n  constructor(\n    private rxModalService: RxModalService,\n    private rxRulePoolManagementService: RxRulePoolManagementService,\n    private translateService: TranslateService\n  ) {\n    this.setStrings();\n\n    this.showOnlyRulesWithIssuesFormControl.valueChanges\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((value: boolean) => this.showOnlyRulesWithIssuesSubject$.next(value));\n\n    this.ruleConflictsTableConfig = {\n      columns: [\n        {\n          header: this.strings.ruleNameColumnTitle,\n          field: `${RX_RULE_POOL_MANAGEMENT.conflictsRecordFieldIds.ruleName}`\n        },\n        {\n          header: this.strings.numberOfDelaysColumnTitle,\n          field: `${RX_RULE_POOL_MANAGEMENT.conflictsRecordFieldIds.numberOfDelays}`\n        }\n      ],\n      data: [],\n      texts: { emptyStateLabelText: this.strings.ruleConflictsEmptyStateLabel }\n    };\n\n    this.selectedRule$.subscribe((adaptTreeNode: AdaptTreeNode) => {\n      this.selectedRuleValue = adaptTreeNode;\n      this.ruleConflictsTableConfig.data = this.rxRulePoolManagementService.getRuleConflictsData(adaptTreeNode);\n    });\n\n    combineLatest([this.rxRulePoolManagementService.availablePoolsTree$, this.showOnlyRulesWithIssues$])\n      .pipe(\n        map(([availablePoolsTree, showOnlyRulesWithIssues]) => {\n          return showOnlyRulesWithIssues\n            ? availablePoolsTree.map((poolTreeNode) => ({\n                ...poolTreeNode,\n                children: poolTreeNode.data.hasRulesWithIssues\n                  ? poolTreeNode.children.filter(({ data }) => data.isRuleWithIssues)\n                  : []\n              }))\n            : availablePoolsTree;\n        }),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe((availablePoolsTree: AdaptTreeNode[]) => {\n        this.availablePoolsTree.forEach((poolTreeNode: AdaptTreeNode, index: number) => {\n          const updatedPool = availablePoolsTree[index];\n\n          updatedPool.expanded = updatedPool.children.length && poolTreeNode.expanded;\n        });\n\n        this.availablePoolsTree = availablePoolsTree;\n\n        if (this.selectedRuleValue) {\n          const isSelectedRulePresentInTree = this.availablePoolsTree.some((poolTreeNode: AdaptTreeNode) => {\n            const rule = poolTreeNode.children.find(\n              (ruleTreeNode: AdaptTreeNode) => ruleTreeNode.data.guid === this.selectedRuleValue.data.guid\n            );\n\n            if (rule) {\n              this.selectedRule = rule;\n\n              return true;\n            }\n          });\n\n          if (!isSelectedRulePresentInTree) {\n            this.selectedRuleSubject$.next(null);\n          }\n        }\n      });\n  }\n\n  ngOnInit(): void {\n    this.busy = this.rxRulePoolManagementService.fetchAvailablePoolsTree();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  isAssignedPoolOutOfRange(): boolean {\n    return this.selectedRuleValue.data.designTimePoolNumber > this.availablePoolsTree.length;\n  }\n\n  isRuleDesignerAvailable(): boolean {\n    return this.rxRulePoolManagementService.isRuleDesignerAvailable(this.selectedRuleValue.data);\n  }\n\n  openReassignPoolDialog(): any {\n    this.rxModalService\n      .openModal({\n        content: RuleReassignmentComponent,\n        data: {\n          ruleName: this.selectedRuleValue.data.name\n        },\n        size: 'sm'\n      })\n      .then(() => this.rxRulePoolManagementService.fetchAvailablePoolsTree(), noop);\n  }\n\n  private setStrings(): void {\n    this.strings = {\n      adminSettingsHeader: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.header.title'\n      ),\n\n      assignedPoolLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.assigned-pool.label'\n      ),\n\n      availablePoolsLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.available-pools.label'\n      ),\n\n      availablePoolsTooltip: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.available-pools.tooltip',\n        {\n          clockAlertIcon: '<i class=\"d-icon-clock_alert\"></i>',\n          clockArrowIcon: '<i class=\"d-icon-clock_arrow\"></i>',\n          dangerTriangleIcon: '<i class=\"text-danger d-icon-exclamation_triangle\"></i>',\n          triangleIcon: '<i class=\"d-icon-exclamation_triangle\"></i>',\n          successCheckIcon: '<i class=\"text-success d-icon-check_circle\"></i>',\n          checkIcon: '<i class=\"d-icon-check_circle\"></i>'\n        }\n      ),\n\n      averageExecutionTimeLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.average-execution-time.label'\n      ),\n\n      averageLatencyLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.average-latency.label'\n      ),\n\n      lastEndDateLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.last-end-date.label'\n      ),\n\n      lastStartDateLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.last-start-date.label'\n      ),\n\n      numberOfDelaysColumnTitle: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.conflicts.grid.column.delays-caused.title'\n      ),\n\n      numberOfRunsLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.execution-count.label'\n      ),\n\n      selectedRuleEmptyStateLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.selected-rule.empty-state.label'\n      ),\n\n      showOnlyRulesWithIssuesLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.available-pools.show-only-rules-with-issues.label'\n      ),\n\n      reassignButtonLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.button.reassign.label'\n      ),\n\n      ruleConflictsEmptyStateLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.conflicts.grid.empty-state.label'\n      ),\n\n      ruleConflictsTitle: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.conflicts.title'\n      ),\n\n      ruleNameColumnTitle: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.conflicts.grid.column.rule-name.title'\n      ),\n\n      ruleNameLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.rule-name.label'\n      ),\n\n      rulePoolsEmptyStateLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.empty-state.no-data-to-display.label'\n      ),\n\n      ruleSummaryTitle: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.title'\n      ),\n\n      ruleSummaryTooltip: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.tooltip'\n      ),\n\n      timerDefinitionLabel: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.rule-pool-management.rule-summary.timer-definition.label'\n      )\n    };\n  }\n}\n","<rx-admin-settings header=\"{{ strings.adminSettingsHeader }}\" [busy]=\"busy\">\n  <div *ngIf=\"availablePoolsTree.length; else emptyRulePoolsTemplate\" class=\"d-flex h-100 overflow-auto\">\n    <div class=\"d-flex flex-shrink-0 flex-column border-right page-content-left pr-4\">\n      <h5 class=\"m-0\">\n        {{ strings.availablePoolsLabel }}\n        <adapt-icon\n          name=\"info_circle_o_adapt\"\n          [adaptPopover]=\"availablePoolsTooltipTemplate\"\n          maxWidth=\"400\"\n        ></adapt-icon>\n      </h5>\n\n      <ng-template #availablePoolsTooltipTemplate>\n        <div [innerHtml]=\"strings.availablePoolsTooltip\"></div>\n      </ng-template>\n\n      <adapt-rx-checkbox\n        [label]=\"strings.showOnlyRulesWithIssuesLabel\"\n        [formControl]=\"showOnlyRulesWithIssuesFormControl\"\n      ></adapt-rx-checkbox>\n\n      <div class=\"overflow-auto\">\n        <adapt-tree [value]=\"availablePoolsTree\" [(selection)]=\"selectedRule\" [wrap]=\"treeWrap\" selectionMode=\"single\">\n          <ng-template let-node adaptTreeNodeTemplate=\"pool-without-issues\">\n            <span><i class=\"text-success d-icon-check_circle at-action-icon\"></i>{{ node.label }}</span>\n          </ng-template>\n          <ng-template let-node adaptTreeNodeTemplate=\"pool-with-issues\">\n            <span><i class=\"text-danger d-icon-exclamation_triangle at-action-icon\"></i>{{ node.label }}</span>\n          </ng-template>\n\n          <ng-template let-node adaptTreeNodeTemplate=\"rule-without-issues\">\n            <span class=\"d-flex\" [adaptTooltip]=\"node.data.name\" [popupDelay]=\"1000\"\n              ><i class=\"d-icon-check_circle at-action-icon\" [ngClass]=\"{ 'text-success': node.data.isEditable }\"></i\n              >{{ node.label }}</span\n            >\n          </ng-template>\n          <ng-template let-node adaptTreeNodeTemplate=\"rule-with-issues\">\n            <span class=\"d-flex\" [adaptTooltip]=\"node.data.name\" [popupDelay]=\"1000\"\n              ><i\n                class=\"d-icon-exclamation_triangle at-action-icon\"\n                [ngClass]=\"{ 'text-danger': node.data.isEditable }\"\n              ></i\n              >{{ node.label }}\n            </span>\n          </ng-template>\n          <ng-template let-node adaptTreeNodeTemplate=\"remedy-escalation-with-issues\">\n            <span class=\"d-flex\" [adaptTooltip]=\"node.data.name\" [popupDelay]=\"1000\"\n              ><i class=\"d-icon-clock_alert at-action-icon\"></i>{{ node.label }}</span\n            >\n          </ng-template>\n          <ng-template let-node adaptTreeNodeTemplate=\"remedy-escalation-without-issues\">\n            <span class=\"d-flex\" [adaptTooltip]=\"node.data.name\" [popupDelay]=\"1000\"\n              ><i class=\"d-icon-clock_arrow at-action-icon\"></i>{{ node.label }}</span\n            >\n          </ng-template>\n        </adapt-tree>\n      </div>\n    </div>\n\n    <div class=\"flex-fill pl-4\">\n      <div *ngIf=\"selectedRule?.data as rule; else noRuleSelectedTemplate\">\n        <h5 class=\"mt-0\">\n          {{ strings.ruleSummaryTitle }}\n          <adapt-icon\n            name=\"info_circle_o_adapt\"\n            [adaptPopover]=\"ruleSummaryTooltipTemplate\"\n            maxWidth=\"280\"\n            placement=\"bottom\"\n          ></adapt-icon>\n        </h5>\n\n        <ng-template #ruleSummaryTooltipTemplate>\n          <div [innerHTML]=\"strings.ruleSummaryTooltip\"></div>\n        </ng-template>\n\n        <div class=\"mb-3\">\n          <adapt-rx-control-label [label]=\"strings.ruleNameLabel\"></adapt-rx-control-label>\n\n          <span *ngIf=\"!isRuleDesignerAvailable(); else ruleFullNameWithDesignerLink\" class=\"rule-name-value\">{{\n            rule.name\n          }}</span>\n\n          <ng-template #ruleFullNameWithDesignerLink>\n            <a\n              adapt-button\n              btn-type=\"tertiary\"\n              class=\"d-icon-left-pop_up p-0 border-0 rule-name-value\"\n              rx-id=\"open-rule-designer-button\"\n              target=\"_blank\"\n              href=\"{{ ruleDesignerLink + rule.name }}\"\n            >\n              {{ rule.name }}\n            </a>\n          </ng-template>\n        </div>\n\n        <div class=\"mb-3\">\n          <adapt-rx-control-label [label]=\"strings.timerDefinitionLabel\"></adapt-rx-control-label>\n          <span>{{ rule.timeCriteria | rxRuleTriggerTimeCriteriaDisplayValue }}</span>\n        </div>\n\n        <div class=\"d-flex mb-3\">\n          <div class=\"flex-fill col-4 p-0\">\n            <adapt-rx-control-label [label]=\"strings.numberOfRunsLabel\"></adapt-rx-control-label>\n            <span>{{ rule.numberOfRuns }}</span>\n          </div>\n          <div class=\"flex-fill col-4 p-0\">\n            <adapt-rx-control-label [label]=\"strings.averageLatencyLabel\"></adapt-rx-control-label>\n            <span>{{ rule.avgWaitTime }}</span>\n          </div>\n          <div class=\"flex-fill col-4 p-0\">\n            <adapt-rx-control-label [label]=\"strings.averageExecutionTimeLabel\"></adapt-rx-control-label>\n            <span>{{ rule.avgExecutionTime }}</span>\n          </div>\n        </div>\n\n        <div class=\"d-flex mb-3\">\n          <div class=\"flex-fill col-4 p-0\">\n            <div class=\"pb-1\">\n              <span class=\"form-control-label pr-3\">{{ strings.assignedPoolLabel }}</span>\n\n              <adapt-button\n                btn-type=\"tertiary\"\n                class=\"p-0 border-0\"\n                rx-id=\"reassign-button\"\n                *ngIf=\"rule.isEditable\"\n                (click)=\"openReassignPoolDialog()\"\n                [style.vertical-align]=\"'baseline'\"\n              >\n                <span class=\"d-icon-pencil\"></span>\n                {{ strings.reassignButtonLabel }}\n              </adapt-button>\n            </div>\n            <span>\n              <i\n                *ngIf=\"isAssignedPoolOutOfRange()\"\n                class=\"d-icon-exclamation_triangle at-action-icon\"\n                [ngClass]=\"{ 'text-danger': rule.isEditable }\"\n              ></i>\n              {{ rule.designTimePoolNumber }}\n            </span>\n          </div>\n          <div class=\"flex-fill col-4 p-0\">\n            <adapt-rx-control-label [label]=\"strings.lastStartDateLabel\"></adapt-rx-control-label>\n            <span>{{ rule.lastStartTime | date: 'medium' }}</span>\n          </div>\n          <div class=\"flex-fill col-4 p-0\">\n            <adapt-rx-control-label [label]=\"strings.lastEndDateLabel\"></adapt-rx-control-label>\n            <span>{{ rule.lastEndTime | date: 'medium' }}</span>\n          </div>\n        </div>\n\n        <h5>\n          {{ strings.ruleConflictsTitle }}\n          <i\n            *ngIf=\"ruleConflictsTableConfig.data.length\"\n            class=\"text-danger d-icon-exclamation_triangle\"\n            [ngClass]=\"{ 'text-danger': rule.isEditable }\"\n          ></i>\n        </h5>\n        <adapt-table\n          [columns]=\"ruleConflictsTableConfig.columns\"\n          [bordered]=\"true\"\n          [sortable]=\"true\"\n          [texts]=\"ruleConflictsTableConfig.texts\"\n          [value]=\"ruleConflictsTableConfig.data\"\n        >\n        </adapt-table>\n      </div>\n\n      <ng-template #noRuleSelectedTemplate>\n        <div class=\"d-flex align-items-center justify-content-center h-100\">\n          <adapt-empty-state [type]=\"'rules'\" [label]=\"strings.selectedRuleEmptyStateLabel\"></adapt-empty-state>\n        </div>\n      </ng-template>\n    </div>\n  </div>\n\n  <ng-template #emptyRulePoolsTemplate>\n    <div class=\"d-flex align-items-center h-100\">\n      <adapt-empty-state\n        class=\"flex-fill\"\n        [type]=\"'rules'\"\n        [label]=\"strings.rulePoolsEmptyStateLabel\"\n      ></adapt-empty-state>\n    </div>\n  </ng-template>\n</rx-admin-settings>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  AdaptBusyModule,\n  AdaptButtonModule,\n  AdaptEmptyStateModule,\n  AdaptIconModule,\n  AdaptPopoverModule,\n  AdaptRxCheckboxModule,\n  AdaptRxFormControlModule,\n  AdaptRxLabelModule,\n  AdaptRxSelectModule,\n  AdaptTooltipModule,\n  AdaptTreeModule\n} from '@bmc-ux/adapt-angular';\nimport { AdaptTableModule } from '@bmc-ux/adapt-table';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { RxRulePipesModule } from '@helix/platform/rule/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RulePoolManagementAdminComponent } from './rule-pool-management.component';\nimport { RuleReassignmentComponent } from './rule-reassignment/rule-reassignment.component';\n\n@NgModule({\n  declarations: [RuleReassignmentComponent, RulePoolManagementAdminComponent],\n  imports: [\n    AdaptBusyModule,\n    AdaptButtonModule,\n    AdaptEmptyStateModule,\n    AdaptIconModule,\n    AdaptPopoverModule,\n    AdaptRxCheckboxModule,\n    AdaptRxFormControlModule,\n    AdaptRxLabelModule,\n    AdaptRxSelectModule,\n    AdaptTableModule,\n    AdaptTooltipModule,\n    AdaptTreeModule,\n    AdminSettingsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    RxRulePipesModule,\n    TranslateModule\n  ],\n  entryComponents: [RulePoolManagementAdminComponent]\n})\nexport class RulePoolManagementRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-rule-pool-management',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(RulePoolManagementAdminComponent),\n      name: 'Rule pool management',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ISystemConfiguration, RxSystemConfigurationService, RX_ENVIRONMENT } from '@helix/platform/shared/api';\nimport { find } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IServerInformation } from './server-information.interface';\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxServerInformationService {\n  constructor(private rxSystemConfigurationService: RxSystemConfigurationService) {}\n\n  getServerInformation(): Observable<IServerInformation> {\n    const identifiers = [\n      'VERSION',\n      'SERVER_DIR',\n      'OS',\n      'HARDWARE',\n      'SERVER_NAME',\n      'SERVER_TIME',\n      'CONFIGURATION_NAME',\n      'DB_TYPE',\n      'DB_NAME',\n      'DB_VERSION',\n      'DB_USER'\n    ];\n\n    return this.rxSystemConfigurationService.queryConfiguration(identifiers).pipe(\n      map((serverInformation: ISystemConfiguration[]) => {\n        return {\n          serverVersion: find(serverInformation, { id: 'VERSION' }).value,\n          serverDirectory: find(serverInformation, { id: 'SERVER_DIR' }).value,\n          operatingSystem: find(serverInformation, { id: 'OS' }).value,\n          hardware: find(serverInformation, { id: 'HARDWARE' }).value,\n          serverName: find(serverInformation, { id: 'SERVER_NAME' }).value,\n          serverTime: new Date(\n            (find(serverInformation, { id: 'SERVER_TIME' }).value as number) * 1000\n          ).toLocaleString(),\n          configurationName: find(serverInformation, { id: 'CONFIGURATION_NAME' }).value,\n          databaseType: find(serverInformation, { id: 'DB_TYPE' }).value,\n          databaseName: find(serverInformation, { id: 'DB_NAME' }).value,\n          databaseVersion: find(serverInformation, { id: 'DB_VERSION' }).value,\n          databaseUser: find(serverInformation, { id: 'DB_USER' }).value\n        } as IServerInformation;\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { IServerInformation } from './server-information.interface';\nimport { RxServerInformationService } from './server-information.service';\n\n@Component({\n  selector: 'rx-admin-server-information',\n  templateUrl: './server-information.component.html'\n})\nexport class ServerInformationAdminComponent implements OnInit {\n  busy: Subscription;\n  serverInformation: IServerInformation;\n\n  constructor(private rxServerInformationService: RxServerInformationService) {}\n\n  ngOnInit() {\n    this.busy = this.rxServerInformationService.getServerInformation().subscribe((serverInformation) => {\n      this.serverInformation = serverInformation;\n    });\n  }\n}\n","<rx-admin-settings\n  header=\"{{ 'com.bmc.arsys.rx.client.admin.server-information.header.title' | translate }}\"\n  [busy]=\"busy\"\n>\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <adapt-rx-textfield\n        rx-id=\"server-version\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.server-information.server-version.label' | translate }}\"\n        readonly=\"true\"\n        disabledStyleForReadonlyState=\"true\"\n        [ngModel]=\"serverInformation?.serverVersion\"\n        class=\"d-block form-group\"\n      >\n      </adapt-rx-textfield>\n    </div>\n    <div class=\"col-md-4\">\n      <adapt-rx-textfield\n        rx-id=\"server-directory\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.server-information.server-directory.label' | translate }}\"\n        readonly=\"true\"\n        disabledStyleForReadonlyState=\"true\"\n        [ngModel]=\"serverInformation?.serverDirectory\"\n        class=\"d-block form-group\"\n      >\n      </adapt-rx-textfield>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <adapt-rx-textfield\n        rx-id=\"operating-system\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.server-information.operating-system.label' | translate }}\"\n        readonly=\"true\"\n        disabledStyleForReadonlyState=\"true\"\n        [ngModel]=\"serverInformation?.operatingSystem\"\n        class=\"d-block form-group\"\n      >\n      </adapt-rx-textfield>\n    </div>\n    <div class=\"col-md-4\">\n      <adapt-rx-textfield\n        rx-id=\"hardware\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.server-information.hardware.label' | translate }}\"\n        readonly=\"true\"\n        disabledStyleForReadonlyState=\"true\"\n        [ngModel]=\"serverInformation?.hardware\"\n        class=\"d-block form-group\"\n      >\n      </adapt-rx-textfield>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <adapt-rx-textfield\n        rx-id=\"server-name\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.server-information.server-name-alias.label' | translate }}\"\n        readonly=\"true\"\n        disabledStyleForReadonlyState=\"true\"\n        [ngModel]=\"serverInformation?.serverName\"\n        class=\"d-block form-group\"\n      ></adapt-rx-textfield>\n    </div>\n    <div class=\"col-md-4\">\n      <adapt-rx-textfield\n        rx-id=\"server-time\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.server-information.server-time.label' | translate }}\"\n        readonly=\"true\"\n        disabledStyleForReadonlyState=\"true\"\n        [ngModel]=\"serverInformation?.serverTime\"\n        class=\"d-block form-group\"\n      ></adapt-rx-textfield>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <adapt-rx-textfield\n        rx-id=\"configuration-name\"\n        label=\" {{ 'com.bmc.arsys.rx.client.admin.server-information.configuration-name-time.label' | translate }}\"\n        readonly=\"true\"\n        disabledStyleForReadonlyState=\"true\"\n        [ngModel]=\"serverInformation?.configurationName\"\n        class=\"d-block form-group\"\n      ></adapt-rx-textfield>\n    </div>\n    <div class=\"col-md-4\">\n      <adapt-rx-textfield\n        rx-id=\"database-type\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.server-information.database-type.label' | translate }}\"\n        readonly=\"true\"\n        disabledStyleForReadonlyState=\"true\"\n        [ngModel]=\"serverInformation?.databaseType\"\n        class=\"d-block form-group\"\n      ></adapt-rx-textfield>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <adapt-rx-textfield\n        rx-id=\"database-name\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.server-information.database-tablespace-name.label' | translate }}\"\n        readonly=\"true\"\n        disabledStyleForReadonlyState=\"true\"\n        [ngModel]=\"serverInformation?.databaseName\"\n        class=\"d-block form-group\"\n      ></adapt-rx-textfield>\n    </div>\n    <div class=\"col-md-4\">\n      <adapt-rx-textfield\n        rx-id=\"database-version\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.server-information.database-version.label' | translate }}\"\n        readonly=\"true\"\n        disabledStyleForReadonlyState=\"true\"\n        [ngModel]=\"serverInformation?.databaseVersion\"\n        class=\"d-block form-group\"\n      ></adapt-rx-textfield>\n    </div>\n  </div>\n</rx-admin-settings>\n","import { CommonModule } from '@angular/common';\nimport { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AdaptRxTextfieldModule } from '@bmc-ux/adapt-angular';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { ServerInformationAdminComponent } from './server-information.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [ServerInformationAdminComponent],\n  imports: [AdminSettingsModule, AdaptRxTextfieldModule, CommonModule, FormsModule, TranslateModule],\n  entryComponents: [ServerInformationAdminComponent]\n})\nexport class ServerInformationRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-server-information',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(ServerInformationAdminComponent),\n      name: 'Server information',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { RX_ADMINISTRATION } from '@helix/platform/shared/api';\n\nexport const RX_SERVER_LOGS = {\n  configUrl: `${RX_ADMINISTRATION.systemConfigurationUrl}/logging/server`,\n  downloadUrl: `${RX_ADMINISTRATION.systemConfigurationUrl}/logging/server/download`,\n  defaultFormConfig: {\n    autoTurnOffDuration: 30,\n    ruleLogOn: false,\n    timedRuleLogOn: false,\n    processLogOn: false,\n    sqlLogOn: false,\n    apiLogOn: false\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { RX_SERVER_LOGS } from './server-logs.constant';\nimport { Observable } from 'rxjs';\nimport { words } from 'lodash';\nimport { ILogFileNames, IServerLogsConfig } from './server-logs.types';\nimport { saveAs } from 'file-saver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxServerLogsService {\n  constructor(private httpClient: HttpClient) {}\n\n  getConfig(): Observable<IServerLogsConfig> {\n    return this.httpClient.get<IServerLogsConfig>(RX_SERVER_LOGS.configUrl);\n  }\n\n  save(logsConfig: IServerLogsConfig): Observable<any> {\n    return this.httpClient.post(RX_SERVER_LOGS.configUrl, logsConfig);\n  }\n\n  downloadServerLogs(logFileNames: ILogFileNames): Observable<any> {\n    return this.httpClient.post(RX_SERVER_LOGS.downloadUrl, logFileNames, {\n      observe: 'response',\n      responseType: 'arraybuffer'\n    });\n  }\n}\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { RxServerLogsService } from './server-logs.service';\nimport { IServerLogsConfig } from './server-logs.types';\nimport { RxNotificationService, RxServerErrorHandlerService } from '@helix/platform/shared/api';\nimport { RX_SERVER_LOGS } from './server-logs.constant';\nimport { Subscription } from 'rxjs';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { RxFileService } from '@helix/platform/utils';\n\n@Component({\n  selector: 'rx-admin-server-logs',\n  templateUrl: './server-logs.component.html',\n  styleUrls: ['./server-logs.component.scss']\n})\nexport class ServerLogsAdminComponent extends BaseViewComponent implements OnInit {\n  @HostBinding('class')\n  hostClass = 'd-block col-md-9 p-0';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private rxNotificationService: RxNotificationService,\n    private rxServerErrorHandlerService: RxServerErrorHandlerService,\n    private rxServerLogsService: RxServerLogsService\n  ) {\n    super();\n  }\n\n  busy: Subscription;\n  serverLogsForm: FormGroup;\n  shouldDisplayAdditionalLogTypes: boolean;\n  isDownloadInProgress: boolean;\n\n  private getServerLogsConfig() {\n    this.busy = this.rxServerLogsService.getConfig().subscribe((serverLogsConfig: IServerLogsConfig) => {\n      this.serverLogsForm.patchValue(serverLogsConfig);\n    });\n  }\n\n  toggleAdditionalLogTypes() {\n    this.shouldDisplayAdditionalLogTypes = !this.shouldDisplayAdditionalLogTypes;\n  }\n\n  save() {\n    const formValue = this.serverLogsForm.getRawValue();\n\n    this.rxServerLogsService.save(formValue).subscribe(() => {\n      this.rxNotificationService.addSuccessMessage('Server Logs configuration saved successfully.');\n      this.serverLogsForm.markAsPristine();\n    });\n  }\n\n  downloadLogs() {\n    this.isDownloadInProgress = true;\n\n    this.rxServerLogsService\n      .downloadServerLogs({\n        fileNames: ['server', 'License']\n      })\n      .subscribe(\n        (data) => {\n          RxFileService.saveFile(data);\n          this.isDownloadInProgress = false;\n        },\n        (error) => {\n          error.data = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(error.error)));\n          this.rxServerErrorHandlerService.handle(error);\n          this.isDownloadInProgress = false;\n        }\n      );\n  }\n\n  get autoTurnOffDuration() {\n    return this.serverLogsForm.get('autoTurnOffDuration').value;\n  }\n\n  ngOnInit() {\n    this.notifyPropertyChanged('api', {\n      isDirty: () => this.serverLogsForm.dirty\n    });\n\n    this.serverLogsForm = this.formBuilder.group(RX_SERVER_LOGS.defaultFormConfig);\n\n    this.getServerLogsConfig();\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.admin.server-logs.header.title' | translate }}\" [busy]=\"busy\">\n  <form [formGroup]=\"serverLogsForm\">\n    <div>\n      <h6 class=\"dt\">{{ 'com.bmc.arsys.rx.client.admin.server-logs.capture-logs.title' | translate }}</h6>\n      <div class=\"d-flex p-0 logs-duration\" rx-id=\"logs-duration\">\n        <adapt-rx-counter\n          formControlName=\"autoTurnOffDuration\"\n          min=\"1\"\n          adaptIntegerNumber\n        >\n        </adapt-rx-counter>\n        <span class=\"p-2\">{{ 'com.bmc.arsys.rx.client.admin.server-logs.minutes.label' | translate }}</span>\n      </div>\n      <div *ngIf=\"autoTurnOffDuration < 1\" class=\"adapt-mt-error\">\n        {{ 'com.bmc.arsys.rx.client.admin.server-logs.minimum-of-one-minute.label' | translate }}\n      </div>\n    </div>\n\n    <div>\n      <h6 class=\"dt\">{{ 'com.bmc.arsys.rx.client.admin.server-logs.log-types-to-be-captured.title' | translate }}</h6>\n      <adapt-rx-checkbox\n        formControlName=\"ruleLogOn\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.server-logs.rule.label' | translate }}\"\n      ></adapt-rx-checkbox>\n      <adapt-rx-checkbox\n        formControlName=\"timedRuleLogOn\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.server-logs.escalation.label' | translate }}\"\n      ></adapt-rx-checkbox>\n      <adapt-rx-checkbox\n        formControlName=\"processLogOn\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.server-logs.process.label' | translate }}\"\n      ></adapt-rx-checkbox>\n    </div>\n\n    <div rx-id=\"show-additional-log\" (click)=\"toggleAdditionalLogTypes()\" class=\"btn-link alert-link pt-2\">\n      {{\n        (shouldDisplayAdditionalLogTypes\n          ? 'com.bmc.arsys.rx.client.admin.server-logs.show-less.label'\n          : 'com.bmc.arsys.rx.client.admin.server-logs.show-more.label'\n        ) | translate\n      }}\n    </div>\n\n    <div *ngIf=\"shouldDisplayAdditionalLogTypes\">\n      <h6 class=\"dt\">\n        {{ 'com.bmc.arsys.rx.client.admin.server-logs.additional-log-types-to-be-captured.title' | translate }}\n      </h6>\n      <adapt-rx-checkbox\n        formControlName=\"sqlLogOn\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.server-logs.sql.label' | translate }}\"\n      ></adapt-rx-checkbox>\n      <adapt-rx-checkbox\n        formControlName=\"apiLogOn\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.server-logs.api.label' | translate }}\"\n      ></adapt-rx-checkbox>\n    </div>\n\n    <div class=\"mt-4 d-flex\">\n      <button\n        type=\"submit\"\n        adapt-button\n        btn-type=\"primary\"\n        [disabled]=\"serverLogsForm.pristine || autoTurnOffDuration < 1\"\n        (click)=\"save()\"\n        rx-id=\"save-button\"\n        class=\"mr-3\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n      </button>\n\n      <button\n        type=\"button\"\n        adapt-button\n        btn-type=\"secondary\"\n        [adaptInlineLoader]=\"isDownloadInProgress\"\n        activeText=\"Downloading...\"\n        (click)=\"downloadLogs()\"\n        rx-id=\"download-button\"\n      >\n        {{ 'com.bmc.arsys.rx.client.admin.server-logs.download-logs.label' | translate }}\n      </button>\n    </div>\n  </form>\n</rx-admin-settings>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AdaptBusyModule,\n  AdaptButtonModule,\n  AdaptRxCheckboxModule,\n  AdaptRxCounterModule,\n  AdaptRxValidatorsModule\n} from '@bmc-ux/adapt-angular';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { ServerLogsAdminComponent } from './server-logs.component';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [ServerLogsAdminComponent],\n  imports: [\n    AdaptBusyModule,\n    AdaptButtonModule,\n    AdaptRxCheckboxModule,\n    AdaptRxCounterModule,\n    AdaptRxValidatorsModule,\n    AdminSettingsModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule\n  ],\n  entryComponents: [ServerLogsAdminComponent]\n})\nexport class ServerLogsRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-server-logs',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(ServerLogsAdminComponent),\n      name: 'Server logs',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","export const RX_SERVICES_PROVIDER_REGION = {\n  connections: {\n    cognitiveAdminCredential: 'cognitiveAdminCredential'\n  },\n  providers: {\n    watson: 'WATSON'\n  },\n  regionOptions: [\n    { name: 'com.bmc.arsys.rx.client.admin.cognitive-service.region.germany.label', id: 'EU_DE' },\n    { name: 'com.bmc.arsys.rx.client.admin.cognitive-service.region.sydney.label', id: 'AU_SYD' },\n    { name: 'com.bmc.arsys.rx.client.admin.cognitive-service.region.us-east.label', id: 'US_EAST' },\n    { name: 'com.bmc.arsys.rx.client.admin.cognitive-service.region.us-south.label', id: 'US_SOUTH' },\n    { name: 'com.bmc.arsys.rx.client.admin.cognitive-service.region.uk.label', id: 'EU_GB' }\n  ]\n};\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { KeyValueObject, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { find, get } from 'lodash';\nimport { RX_SERVICES_PROVIDER_REGION } from './services-provider-region.constant';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RxNotificationService, RxSystemConfigurationService } from '@helix/platform/shared/api';\n\n@Component({\n  selector: 'rx-admin-services-provider-region',\n  templateUrl: './services-provider-region.component.html',\n  styleUrls: ['./services-provider-region.component.scss']\n})\nexport class ServicesProviderRegionAdminComponent implements OnInit {\n  servicesProviderRegionForm: FormGroup;\n  private isSaveInProgress = false;\n  private defaultSelection = this.translateService.instant('com.bmc.arsys.rx.client.common.select.label');\n\n  regionOptions: RxSelectOption[] = RX_SERVICES_PROVIDER_REGION.regionOptions.map((region: KeyValueObject) => ({\n    ...region,\n    name: this.translateService.instant(region.name)\n  }));\n\n  constructor(\n    private translateService: TranslateService,\n    private rxSystemConfigurationService: RxSystemConfigurationService,\n    private rxNotificationService: RxNotificationService\n  ) {}\n\n  ngOnInit(): void {\n    this.servicesProviderRegionForm = new FormGroup({\n      region: new FormControl('')\n    });\n\n    this.rxSystemConfigurationService\n      .getConfiguration(RX_SERVICES_PROVIDER_REGION.connections.cognitiveAdminCredential)\n      .subscribe((result) => {\n        const cognitiveAdminCredential = JSON.parse(result.value as string);\n\n        this.servicesProviderRegionForm.get('region').setValue([\n          find(this.regionOptions, {\n            id: cognitiveAdminCredential[RX_SERVICES_PROVIDER_REGION.providers.watson].cognitiveAdminRegionName\n          }) as RxSelectOption\n        ]);\n      });\n  }\n\n  optionFormatter = (regionNameOption: RxSelectOption): string => {\n    return get(regionNameOption, 'name', this.defaultSelection);\n  };\n\n  save(): void {\n    this.isSaveInProgress = true;\n\n    const payload = {\n      [RX_SERVICES_PROVIDER_REGION.providers.watson]: {\n        cognitiveAdminRegionName: this.servicesProviderRegionForm.get('region').value[0].id\n      }\n    };\n\n    this.rxSystemConfigurationService\n      .setConfiguration(RX_SERVICES_PROVIDER_REGION.connections.cognitiveAdminCredential, payload)\n      .subscribe(\n        (response) => {\n          this.isSaveInProgress = false;\n          this.servicesProviderRegionForm.markAsPristine();\n\n          this.rxNotificationService.addSuccessMessage(\n            this.translateService.instant('com.bmc.arsys.rx.client.admin.services-provider-region.saved.message')\n          );\n        },\n        (error) => {\n          this.isSaveInProgress = false;\n        }\n      );\n  }\n\n  canSave(): boolean {\n    return !this.isSaveInProgress && this.servicesProviderRegionForm.valid && this.servicesProviderRegionForm.dirty;\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.admin.services-provider-region.header.title' | translate }}\">\n  <form [formGroup]=\"servicesProviderRegionForm\">\n    <adapt-rx-select\n      [options]=\"regionOptions\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.services-provider-region.region.label' | translate }}\"\n      name=\"region\"\n      [optionFormatter]=\"optionFormatter\"\n      formControlName=\"region\"\n      rx-id=\"region\"\n      class=\"form-group d-block\"\n      required\n    ></adapt-rx-select>\n\n    <button adapt-button btn-type=\"primary\" type=\"button\" rx-id=\"save-button\" (click)=\"save()\" [disabled]=\"!canSave()\">\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n  </form>\n</rx-admin-settings>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ServicesProviderRegionAdminComponent } from './services-provider-region.component';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AdaptButtonModule, AdaptRxSelectModule } from '@bmc-ux/adapt-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\n\n@NgModule({\n  declarations: [ServicesProviderRegionAdminComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AdaptRxSelectModule,\n    TranslateModule,\n    AdminSettingsModule,\n    AdaptButtonModule\n  ],\n  entryComponents: [ServicesProviderRegionAdminComponent]\n})\nexport class ServicesProviderRegionRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-services-provider-region',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(ServicesProviderRegionAdminComponent),\n      name: 'Services provider region',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","export const RX_SUMMARIZATION_SERVICE = {\n  connections: {\n    summarizationServiceEndpointConfiguration: 'summarizationServiceEndpointConfiguration'\n  },\n  summarizationRepository: 'NATIVE'\n};\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { TranslateService } from '@ngx-translate/core';\nimport { catchError, takeUntil } from 'rxjs/operators';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ConnectionTestStatus } from '@helix/platform/ui-kit';\nimport { throwError } from 'rxjs';\nimport {\n  RxCommandFactoryService,\n  RxCurrentUserService,\n  RxNotificationService,\n  RxSystemConfigurationService\n} from '@helix/platform/shared/api';\nimport { RX_SUMMARIZATION_SERVICE } from './summarization-service.constant';\n\n@Component({\n  selector: 'rx-admin-summarization-service',\n  templateUrl: './summarization-service.component.html',\n  styleUrls: ['./summarization-service.component.scss']\n})\nexport class SummarizationServiceAdminComponent extends BaseViewComponent implements OnInit {\n  summarizationServiceForm: FormGroup;\n  connectionTestStatus: ConnectionTestStatus = ConnectionTestStatus.Invalid;\n  private isSaveInProgress = false;\n  isAdministrator: boolean = this.rxCurrentUserService.isAdministrator();\n\n  constructor(\n    private translateService: TranslateService,\n    private rxCommandFactoryService: RxCommandFactoryService,\n    private rxSystemConfigurationService: RxSystemConfigurationService,\n    private rxNotificationService: RxNotificationService,\n    private rxCurrentUserService: RxCurrentUserService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.notifyPropertyChanged('api', {\n      isDirty: () => this.summarizationServiceForm.dirty\n    });\n\n    this.summarizationServiceForm = new FormGroup({\n      endpoint: new FormControl(''),\n      username: new FormControl(''),\n      password: new FormControl('')\n    });\n\n    this.rxSystemConfigurationService\n      .getConfiguration(RX_SUMMARIZATION_SERVICE.connections.summarizationServiceEndpointConfiguration)\n      .subscribe((result) => {\n        const summarizationConfiguration = JSON.parse(result.value as string)[\n          RX_SUMMARIZATION_SERVICE.summarizationRepository\n        ];\n\n        this.summarizationServiceForm.get('endpoint').setValue(summarizationConfiguration.endpoint);\n        this.summarizationServiceForm.get('username').setValue(summarizationConfiguration.username);\n        this.summarizationServiceForm.get('password').setValue(summarizationConfiguration.username);\n      });\n\n    this.summarizationServiceForm.valueChanges\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((value) => this.resetConnectionTest());\n  }\n\n  private resetConnectionTest(): void {\n    this.connectionTestStatus =\n      this.summarizationServiceForm.valid && this.summarizationServiceForm.dirty\n        ? ConnectionTestStatus.Unknown\n        : ConnectionTestStatus.Invalid;\n  }\n\n  onTestConnection(): void {\n    this.rxCommandFactoryService\n      .forResourceType('com.bmc.arsys.rx.application.cognitive.command.PingSummarizationServiceCommand')\n      .execute(this.summarizationServiceForm.value)\n      .pipe(\n        catchError((error: HttpErrorResponse) => {\n          this.connectionTestStatus = ConnectionTestStatus.Failed;\n\n          return throwError(error);\n        })\n      )\n      .subscribe(() => {\n        this.connectionTestStatus = ConnectionTestStatus.Passed;\n      });\n  }\n\n  save(): void {\n    this.isSaveInProgress = true;\n\n    this.rxSystemConfigurationService\n      .setConfiguration(RX_SUMMARIZATION_SERVICE.connections.summarizationServiceEndpointConfiguration, {\n        [RX_SUMMARIZATION_SERVICE.summarizationRepository]: this.summarizationServiceForm.value\n      })\n      .subscribe(\n        (response) => {\n          this.isSaveInProgress = false;\n          this.summarizationServiceForm.markAsPristine();\n          this.resetConnectionTest();\n\n          this.rxNotificationService.addSuccessMessage(\n            this.translateService.instant('com.bmc.arsys.rx.client.admin.summarization-service.saved.message')\n          );\n        },\n        (error) => {\n          this.isSaveInProgress = false;\n        }\n      );\n  }\n\n  isSaveButtonDisabled(): boolean {\n    return (\n      this.summarizationServiceForm.pristine ||\n      this.summarizationServiceForm.invalid ||\n      this.connectionTestStatus !== ConnectionTestStatus.Passed ||\n      this.isSaveInProgress\n    );\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.admin.summarization-service.header.title' | translate }}\">\n  <form [formGroup]=\"summarizationServiceForm\">\n    <adapt-rx-textfield\n      name=\"endpoint\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.summarization-service.api-endpoint-url.title' | translate }}\"\n      rx-id=\"api-endpoint-url\"\n      class=\"form-group d-block\"\n      formControlName=\"endpoint\"\n      required\n    >\n    </adapt-rx-textfield>\n    <adapt-rx-textfield\n      name=\"username\"\n      label=\"{{ 'com.bmc.arsys.rx.client.common.user-name.label' | translate }}\"\n      rx-id=\"user-name\"\n      class=\"form-group d-block\"\n      formControlName=\"username\"\n      required\n    >\n    </adapt-rx-textfield>\n    <adapt-rx-textfield\n      name=\"password\"\n      label=\"{{ 'com.bmc.arsys.rx.client.common.password.label' | translate }}\"\n      rx-id=\"password\"\n      [isPassword]=\"true\"\n      class=\"form-group d-block\"\n      formControlName=\"password\"\n      required\n    >\n    </adapt-rx-textfield>\n    <div class=\"d-flex\" *ngIf=\"isAdministrator\">\n      <rx-connection-tester\n        [status]=\"connectionTestStatus\"\n        buttonType=\"secondary\"\n        rx-id=\"test-connection-button\"\n        (testConnection)=\"onTestConnection()\"\n      >\n      </rx-connection-tester>\n      <button\n        adapt-button\n        type=\"button\"\n        rx-id=\"save-button\"\n        btn-type=\"primary\"\n        class=\"ml-4\"\n        [disabled]=\"isSaveButtonDisabled()\"\n        (click)=\"save()\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n      </button>\n    </div>\n  </form>\n</rx-admin-settings>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { SummarizationServiceAdminComponent } from './summarization-service.component';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AdaptButtonModule, AdaptRxTextfieldModule } from '@bmc-ux/adapt-angular';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RxConnectionTesterModule } from '@helix/platform/ui-kit';\n\n@NgModule({\n  declarations: [SummarizationServiceAdminComponent],\n  imports: [\n    CommonModule,\n    AdminSettingsModule,\n    TranslateModule,\n    AdaptRxTextfieldModule,\n    ReactiveFormsModule,\n    RxConnectionTesterModule,\n    AdaptButtonModule\n  ],\n  entryComponents: [SummarizationServiceAdminComponent]\n})\nexport class SummarizationServiceRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-summarization-service',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(SummarizationServiceAdminComponent),\n      name: 'Summarization service',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RxCommandFactoryService } from '@helix/platform/shared/api';\nimport { Observable } from 'rxjs';\nimport { ISummarizationRecord } from './summarization-testing.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxSummarizationTestingService {\n  private textSummarizationCommand = 'com.bmc.arsys.rx.application.cognitive.command.SummarizeTextCommand';\n  private recordSummarizationCommand = 'com.bmc.arsys.rx.application.cognitive.command.SummarizeFromRecInstCommand';\n\n  constructor(private httpClient: HttpClient, private rxCommandFactoryService: RxCommandFactoryService) {}\n\n  getTextSummarization(payload: ISummarizationRecord): Observable<string[]> {\n    return this.rxCommandFactoryService.forResourceType(this.textSummarizationCommand).execute(payload);\n  }\n\n  getRecordInstanceSummarization(payload): Observable<void> {\n    return this.rxCommandFactoryService.forResourceType(this.recordSummarizationCommand).execute(payload);\n  }\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { cloneDeep, isEmpty, omit } from 'lodash';\nimport { forkJoin, Observable, of, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { RxSummarizationTestingService } from './summarization-testing.service';\nimport { IDataPageResult, RxNotificationService, RxSystemConfigurationService } from '@helix/platform/shared/api';\nimport { ISummarizationRecord } from './summarization-testing.types';\nimport { IDefinitionPickerComponentOptions, RxDefinitionPickerType } from '@helix/platform/shared/components';\nimport {\n  IRecordDefinition,\n  RX_RECORD_DEFINITION,\n  RxRecordDefinitionCacheService,\n  RxRecordInstanceDataPageService\n} from '@helix/platform/record/api';\nimport { AdaptDockedPanelService, Alert, KeyValueObject } from '@bmc-ux/adapt-angular';\nimport {\n  IRecordGridColumn,\n  IRecordGridConfig,\n  IRecordGridDataPageParams,\n  RecordGridComponent,\n  RowSelectionMode\n} from '@helix/platform/view/components';\nimport { RxJsonParserService } from '@helix/platform/utils';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-summarization-testing',\n  templateUrl: './summarization-testing.component.html',\n  styleUrls: ['./summarization-testing.component.scss']\n})\nexport class SummarizationTestingAdminComponent implements OnInit /*, AfterViewInit*/ {\n  interactiveSummarizationTestingForm: FormGroup;\n  recordSummarizationTestingForm: FormGroup;\n  isSummarizationServiceDisabled: boolean;\n  textInputFieldOptions: KeyValueObject[] = [];\n  summaryOutputFieldOptions: KeyValueObject[] = [];\n  gridConfig: Observable<IRecordGridConfig>;\n  shouldShowGrid = false;\n  dataSourceOptions: string[] = ['Email', 'Chat', 'Other'];\n  // dockedPanelId: string;\n  summarizedRecords: IDataPageResult;\n  index = 0;\n  defaultSummarizationPercentage = 50;\n  isSummarizationInProgress = false;\n  isRecordSummarizationInProgress = false;\n\n  disableContent: Alert = {\n    variant: 'danger',\n    title: this.translateService.instant(\n      'com.bmc.arsys.rx.client.admin.summarization-testing.summarization-service-disabled.message'\n    ),\n    content: '',\n    dismissible: false\n  };\n\n  recordDefinition: IRecordDefinition = {\n    fieldDefinitions: []\n  };\n\n  recordDefinitionPickerOptions: IDefinitionPickerComponentOptions = {\n    label: this.translateService.instant('com.bmc.arsys.rx.client.admin.summarization-testing.record-definition.label'),\n    definitionType: RxDefinitionPickerType.RegularRecord,\n    required: true\n  };\n\n  @ViewChild('recordGrid')\n  recordGridComponent: RecordGridComponent;\n\n  @ViewChild('viewSummarizationDetailsTemplate', { static: true })\n  viewSummarizationDetailsTemplate: TemplateRef<any>;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private rxSummarizationTestingService: RxSummarizationTestingService,\n    private rxNotificationService: RxNotificationService,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxRecordInstanceDataPageService: RxRecordInstanceDataPageService,\n    private adaptDockedPanelService: AdaptDockedPanelService,\n    private rxSystemConfigurationService: RxSystemConfigurationService,\n    private rxJsonParserService: RxJsonParserService,\n    private translateService: TranslateService\n  ) {}\n\n  /*ngAfterViewInit(): void {\n    this.dockedPanelId = this.adaptDockedPanelService.register({\n      title: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.summarization-testing.summarization-details.label'\n      ),\n      content: this.viewSummarizationDetailsTemplate,\n      size: 'lg'\n    });\n  }*/\n\n  ngOnInit(): void {\n    this.interactiveSummarizationTestingForm = this.createInteractiveSummarizationTestingForm();\n    this.recordSummarizationTestingForm = this.createRecordSummarizationTestingForm();\n    this.shouldShowGrid = true;\n\n    this.rxSystemConfigurationService\n      .getConfiguration('summarizationServiceTenantConfiguration')\n      .subscribe((response) => {\n        const summarizationConfiguration = this.rxJsonParserService.tryParseJson(response.value as string);\n\n        this.defaultSummarizationPercentage =\n          summarizationConfiguration['summarizationPercentage'] || this.defaultSummarizationPercentage;\n\n        if (summarizationConfiguration) {\n          this.isSummarizationServiceDisabled = !summarizationConfiguration['enableSummarization'];\n\n          this.interactiveSummarizationTestingForm\n            .get('summarizationPercentage')\n            .setValue(summarizationConfiguration['summarizationPercentage']);\n\n          this.recordSummarizationTestingForm\n            .get('summarizationPercentage')\n            .setValue(summarizationConfiguration['summarizationPercentage']);\n        }\n      });\n\n    this.updateGridConfig(true);\n\n    this.recordSummarizationTestingForm\n      .get('recordDefinition')\n      .valueChanges.subscribe((value) => this.onRecordDefinitionChange(value));\n\n    this.recordSummarizationTestingForm\n      .get('textInputField')\n      .valueChanges.subscribe((value) => this.onTextInputFieldChange(value));\n  }\n\n  private createInteractiveSummarizationTestingForm(): FormGroup {\n    return this.formBuilder.group({\n      text: ['', Validators.required],\n      source: [[this.dataSourceOptions[0]], Validators.nullValidator],\n      summarizationPercentage: [50, Validators.required],\n      extractedSummaryText: ''\n    });\n  }\n\n  private createRecordSummarizationTestingForm(): FormGroup {\n    return this.formBuilder.group({\n      recordDefinition: ['', Validators.required],\n      textInputField: [[], Validators.required],\n      summaryOutputField: [[], Validators.required],\n      source: [[this.dataSourceOptions[0]]],\n      summarizationPercentage: [50]\n    });\n  }\n\n  private onRecordDefinitionChange(newRecordDefinitionName: string): void {\n    const oldRecordDefinitionName = this.recordSummarizationTestingForm.value.recordDefinition;\n\n    if (newRecordDefinitionName !== oldRecordDefinitionName) {\n      this.resetRecordSummarizationTestingForm();\n\n      if (newRecordDefinitionName) {\n        this.rxRecordDefinitionCacheService\n          .getRecordDefinition(newRecordDefinitionName)\n          .subscribe((recordDefinition) => {\n            this.initializeFormControls(recordDefinition);\n          });\n      }\n    }\n  }\n\n  private initializeFormControls(recordDefinition: IRecordDefinition): void {\n    this.textInputFieldOptions = recordDefinition.fieldDefinitions\n      ? recordDefinition.fieldDefinitions\n          .filter(function (fieldDefinition) {\n            return (\n              (fieldDefinition.fieldOption !== RX_RECORD_DEFINITION.fieldOptions.system &&\n                fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.character) ||\n              fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.attachment\n            );\n          })\n          .map((fieldDefinition) => {\n            return {\n              id: fieldDefinition.id,\n              name: fieldDefinition.name,\n              resourceType: fieldDefinition.resourceType\n            };\n          })\n      : [];\n\n    this.summaryOutputFieldOptions = this.textInputFieldOptions.filter((fieldDefinition) => {\n      return fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.character;\n    });\n  }\n\n  optionFormatter(option: KeyValueObject): string {\n    return option.name;\n  }\n\n  private onTextInputFieldChange(value: KeyValueObject): void {\n    if (value.length) {\n      this.recordSummarizationTestingForm.get('summaryOutputField').setValue([]);\n\n      this.summaryOutputFieldOptions = this.textInputFieldOptions.filter((fieldDefinition) => {\n        return (\n          fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.character &&\n          fieldDefinition.id !== value[0].id\n        );\n      });\n\n      this.updateGridConfig(false);\n    }\n  }\n\n  resetRecordSummarizationTestingForm(): void {\n    this.recordSummarizationTestingForm.get('textInputField').reset([]);\n    this.recordSummarizationTestingForm.get('summaryOutputField').reset([]);\n    this.recordSummarizationTestingForm.get('source').reset([this.dataSourceOptions[0]]);\n    this.recordSummarizationTestingForm.get('summarizationPercentage').reset(this.defaultSummarizationPercentage);\n    this.updateGridConfig(true);\n  }\n\n  summarizeUsingText(): void {\n    this.isSummarizationInProgress = true;\n    this.interactiveSummarizationTestingForm.markAsPristine();\n\n    this.rxSummarizationTestingService\n      .getTextSummarization(this.transformFormControlData())\n      .pipe(\n        catchError((error) => {\n          this.isSummarizationInProgress = false;\n\n          return throwError(error);\n        })\n      )\n      .subscribe((response) => {\n        this.interactiveSummarizationTestingForm.get('extractedSummaryText').setValue(response[0]);\n\n        this.rxNotificationService.addSuccessMessage('Summarization completed successfully.');\n        this.isSummarizationInProgress = false;\n      });\n  }\n\n  private transformFormControlData(): ISummarizationRecord {\n    const summarizationRecord: ISummarizationRecord = {\n      texts: [],\n      source: '',\n      summarizationPercentage: 0\n    };\n\n    summarizationRecord.texts.push(this.interactiveSummarizationTestingForm.get('text').value);\n    summarizationRecord.source = this.interactiveSummarizationTestingForm.get('source').value[0];\n\n    summarizationRecord.summarizationPercentage =\n      this.interactiveSummarizationTestingForm.get('summarizationPercentage').value;\n\n    return summarizationRecord;\n  }\n\n  resetInteractiveSummarizationTestingForm(): void {\n    this.interactiveSummarizationTestingForm.get('text').reset();\n    this.interactiveSummarizationTestingForm.get('source').reset([this.dataSourceOptions[0]]);\n    this.interactiveSummarizationTestingForm.get('summarizationPercentage').reset(this.defaultSummarizationPercentage);\n    this.interactiveSummarizationTestingForm.get('extractedSummaryText').reset('');\n  }\n\n  isResetButtonDisabled(): boolean {\n    return this.interactiveSummarizationTestingForm.pristine || this.interactiveSummarizationTestingForm.invalid;\n  }\n\n  private getColumns(): IRecordGridColumn[] {\n    return [\n      {\n        index: 0,\n        fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.id),\n        title: 'Text input',\n        filterable: false\n      }\n    ];\n  }\n\n  summarizeUsingRecordInstance(): void {\n    this.isRecordSummarizationInProgress = true;\n    const recordSummarizationTestingRecord = cloneDeep(this.recordSummarizationTestingForm.value);\n\n    const payload = {\n      recordDefinitionName: recordSummarizationTestingRecord.recordDefinition,\n      inputFieldId: this.recordSummarizationTestingForm.get('textInputField').value[0].id,\n      outputFieldId: this.recordSummarizationTestingForm.get('summaryOutputField').value[0].id,\n      source: this.recordSummarizationTestingForm.get('source').value[0],\n      summarizationPercentage: this.recordSummarizationTestingForm.get('summarizationPercentage').value\n    };\n\n    const observables$ = this.recordGridComponent.api.getSelectedRows().map((row) => {\n      payload['recordID'] = row[RX_RECORD_DEFINITION.coreFieldIds.id];\n\n      return this.rxSummarizationTestingService.getRecordInstanceSummarization(payload);\n    });\n\n    forkJoin(observables$)\n      .pipe(\n        catchError((error) => {\n          this.isRecordSummarizationInProgress = false;\n\n          return throwError(error);\n        })\n      )\n      .subscribe(() => {\n        this.rxRecordInstanceDataPageService\n          .post({\n            params: {\n              recorddefinition: this.recordSummarizationTestingForm.get('recordDefinition').value,\n              queryExpression: this.prepareQueryExpression()\n            }\n          })\n          .subscribe((results) => {\n            this.isRecordSummarizationInProgress = false;\n            this.summarizedRecords = results;\n            this.index = 0;\n            // this.adaptDockedPanelService.open(this.dockedPanelId);\n            this.adaptDockedPanelService.open({\n              title: this.translateService.instant(\n                'com.bmc.arsys.rx.client.admin.summarization-testing.summarization-details.label'\n              ),\n              content: this.viewSummarizationDetailsTemplate,\n              size: 'lg'\n            });\n          });\n      });\n  }\n\n  private prepareQueryExpression(): string {\n    let expression = '';\n\n    this.recordGridComponent.api.getSelectedRows().map((row) => {\n      if (!isEmpty(expression)) {\n        expression += ' OR ';\n      }\n\n      expression += `('${RX_RECORD_DEFINITION.coreFieldIds.id}' = \"${row[RX_RECORD_DEFINITION.coreFieldIds.id]}\")`;\n    });\n\n    return expression;\n  }\n\n  isSummarizeButtonDisabled(): boolean {\n    return (\n      this.isRecordSummarizationInProgress ||\n      this.recordSummarizationTestingForm.invalid ||\n      (this.recordGridComponent.api.getSelectedRows() && !this.recordGridComponent.api.getSelectedRows().length) ||\n      this.recordGridComponent.api.getSelectedRows().length > 5\n    );\n  }\n\n  previous(): void {\n    this.index--;\n  }\n\n  next(): void {\n    this.index++;\n  }\n\n  private updateGridConfig(isEmptyGridRequired: boolean): void {\n    this.shouldShowGrid = false;\n    this.gridConfig = isEmptyGridRequired ? this.createEmptyGridConfiguration() : this.prepareGridConfiguration();\n\n    setTimeout(() => {\n      this.shouldShowGrid = true;\n    });\n  }\n\n  private getRecordDefinition(): IRecordDefinition {\n    this.recordDefinition.fieldDefinitions = [\n      {\n        id: RX_RECORD_DEFINITION.coreFieldIds.id,\n        resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n      }\n    ];\n\n    return this.recordDefinition;\n  }\n\n  private getData(queryParams: IRecordGridDataPageParams): Observable<IDataPageResult> {\n    if (this.recordSummarizationTestingForm.get('recordDefinition').value) {\n      return this.rxRecordInstanceDataPageService\n        .post({\n          params: {\n            ...omit(queryParams, ['searchText']),\n            recorddefinition: this.recordSummarizationTestingForm.get('recordDefinition').value\n          }\n        })\n        .pipe(\n          map((result) => {\n            result.data = result['data'].filter(\n              (recordInstance) =>\n                recordInstance[this.recordSummarizationTestingForm.get('textInputField').value[0].id] != null\n            );\n\n            return result;\n          })\n        );\n    } else {\n      return this.rxRecordInstanceDataPageService.getEmptyDataPage();\n    }\n  }\n\n  private createEmptyGridConfiguration(): Observable<IRecordGridConfig> {\n    return (this.gridConfig = of({\n      actionButtons: [],\n      getData: (queryParams: IRecordGridDataPageParams) => this.rxRecordInstanceDataPageService.getEmptyDataPage(),\n      getRecordDefinition: () => of(this.getRecordDefinition()),\n      columns: this.getColumns(),\n      enableFiltering: true,\n      enableRowSelection: RowSelectionMode.Multiple\n    }));\n  }\n\n  private prepareGridConfiguration(): Observable<IRecordGridConfig> {\n    const columns = this.getColumns();\n    const recordDefinition = this.getRecordDefinition();\n\n    if (this.recordSummarizationTestingForm.get('textInputField').value.length) {\n      const textInput = this.recordSummarizationTestingForm.get('textInputField').value[0];\n\n      recordDefinition.fieldDefinitions[0] = {\n        id: textInput.id,\n        resourceType: textInput.resourceType,\n        name: textInput.name\n      };\n\n      columns[0] = {\n        index: 0,\n        fieldId: String(textInput.id),\n        title: `Text input:  ${textInput.name}`\n      };\n    }\n\n    return of({\n      actionButtons: [],\n      getData: (queryParams: IRecordGridDataPageParams) => this.getData(queryParams),\n      getRecordDefinition: () => of(recordDefinition),\n      columns: columns,\n      enableFiltering: true,\n      enableRowSelection: RowSelectionMode.Multiple\n    });\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.admin.summarization-testing.header.title' | translate }}\">\n  <div class=\"row\" *ngIf=\"isSummarizationServiceDisabled; else summarizationTesting\">\n    <div class=\"col-md-12 form-group\">\n      <div class=\"disabled-warning\">\n        <adapt-alert [config]=\"disableContent\"></adapt-alert>\n      </div>\n    </div>\n  </div>\n\n  <ng-template #summarizationTesting>\n    <div class=\"row\">\n      <div class=\"col-md-12 form-group\">\n        <adapt-accordion [multiselect]=\"true\">\n          <adapt-accordion-tab\n            [title]=\"'com.bmc.arsys.rx.client.admin.summarization-testing.interactive-summarization.title' | translate\"\n            [isOpen]=\"true\"\n            rx-id=\"interactive-summarization\"\n          >\n            <form [formGroup]=\"interactiveSummarizationTestingForm\">\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <adapt-rx-select\n                    formControlName=\"source\"\n                    [options]=\"dataSourceOptions\"\n                    name=\"source\"\n                    rx-id=\"data-source\"\n                    label=\"{{ 'com.bmc.arsys.rx.client.admin.summarization-testing.data-source.label' | translate }}\"\n                    class=\"form-group d-block\"\n                  >\n                  </adapt-rx-select>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <adapt-rx-textarea\n                    formControlName=\"text\"\n                    rx-id=\"text-input\"\n                    class=\"form-group d-block\"\n                    label=\"{{ 'com.bmc.arsys.rx.client.admin.summarization-testing.text-input.label' | translate }}\"\n                    rows=\"10\"\n                  >\n                  </adapt-rx-textarea>\n\n                  <div class=\"d-flex flex-wrap\">\n                    <div class=\"flex-grow-1 mr-2 summarization-percentage\">\n                      <adapt-rx-counter\n                        [formControl]=\"interactiveSummarizationTestingForm.controls.summarizationPercentage\"\n                        label=\"{{\n                          'com.bmc.arsys.rx.client.admin.summarization-testing.summarization-percentage.label'\n                            | translate\n                        }}\"\n                        rx-id=\"summarization-percentage\"\n                        required\n                        adaptRange\n                        [min]=\"1\"\n                        [max]=\"50\"\n                        [tooltip]=\"{\n                          iconName: 'question_circle_o',\n                          content:\n                            'com.bmc.arsys.rx.client.admin.summarization-testing.summarization-percentage.tooltip'\n                            | translate,\n                          placement: 'top',\n                          popoverMode: true\n                        }\"\n                      ></adapt-rx-counter>\n                    </div>\n                    <div>\n                      <button\n                        adapt-button\n                        btn-type=\"primary\"\n                        type=\"button\"\n                        rx-id=\"summarize-button\"\n                        class=\"mr-2 button-margin-top\"\n                        (click)=\"summarizeUsingText()\"\n                        [adaptInlineLoader]=\"isSummarizationInProgress\"\n                        [disabled]=\"\n                          interactiveSummarizationTestingForm.pristine || interactiveSummarizationTestingForm.invalid\n                        \"\n                      >\n                        {{ 'com.bmc.arsys.rx.client.admin.summarization-testing.summarize.button.label' | translate }}\n                      </button>\n                    </div>\n                    <div>\n                      <button\n                        adapt-button\n                        btn-type=\"secondary\"\n                        type=\"button\"\n                        rx-id=\"reset-button\"\n                        class=\"d-icon-reply button-margin-top\"\n                        (click)=\"resetInteractiveSummarizationTestingForm()\"\n                      >\n                        {{ 'com.bmc.arsys.rx.client.common.reset.label' | translate }}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-md-6\">\n                  <adapt-rx-textarea\n                    formControlName=\"extractedSummaryText\"\n                    rx-id=\"summary-output\"\n                    label=\"{{ 'com.bmc.arsys.rx.client.admin.summarization-testing.summary-output.label' | translate }}\"\n                    disabled=\"true\"\n                    class=\"form-group d-block\"\n                    rows=\"10\"\n                  ></adapt-rx-textarea>\n\n                  <button\n                    adapt-button\n                    btn-type=\"secondary\"\n                    type=\"button\"\n                    rx-id=\"copy-button\"\n                    class=\"mr-2 button-margin-top d-icon-files_copy_o\"\n                    [cdkCopyToClipboard]=\"interactiveSummarizationTestingForm.get('extractedSummaryText').value\"\n                    [disabled]=\"!interactiveSummarizationTestingForm.get('extractedSummaryText').value\"\n                  >\n                    {{ 'com.bmc.arsys.rx.client.common.copy.label' | translate }}\n                  </button>\n                </div>\n              </div>\n            </form>\n          </adapt-accordion-tab>\n\n          <adapt-accordion-tab\n            [title]=\"'com.bmc.arsys.rx.client.admin.summarization-testing.record-summarization.title' | translate\"\n            [isOpen]=\"true\"\n            rx-id=\"record-summarization\"\n          >\n            <form [formGroup]=\"recordSummarizationTestingForm\">\n              <div class=\"row\">\n                <div class=\"col-md-5\">\n                  <adapt-rx-control-label\n                    label=\"{{\n                      'com.bmc.arsys.rx.client.admin.summarization-testing.summarization-options.label' | translate\n                    }}\"\n                    class=\"mb-2 d-block\"\n                  ></adapt-rx-control-label>\n                  <rx-definition-picker\n                    [options]=\"recordDefinitionPickerOptions\"\n                    formControlName=\"recordDefinition\"\n                    rx-id=\"record-definition\"\n                    required=\"true\"\n                    class=\"form-group d-block\"\n                  >\n                  </rx-definition-picker>\n\n                  <adapt-rx-select\n                    [options]=\"textInputFieldOptions\"\n                    label=\"{{\n                      'com.bmc.arsys.rx.client.admin.summarization-testing.text-input-field.label' | translate\n                    }}\"\n                    name=\"textInputField\"\n                    [optionFormatter]=\"optionFormatter\"\n                    formControlName=\"textInputField\"\n                    rx-id=\"text-input-field\"\n                    class=\"form-group d-block\"\n                    [tooltip]=\"{\n                      iconName: 'question_circle_o',\n                      content:\n                        'com.bmc.arsys.rx.client.admin.summarization-testing.text-input-field.tooltip' | translate,\n                      placement: 'left',\n                      popoverMode: true\n                    }\"\n                  ></adapt-rx-select>\n\n                  <adapt-rx-select\n                    [options]=\"summaryOutputFieldOptions\"\n                    label=\"{{\n                      'com.bmc.arsys.rx.client.admin.summarization-testing.summary-output-field.label' | translate\n                    }}\"\n                    name=\"summaryOutputField\"\n                    [optionFormatter]=\"optionFormatter\"\n                    formControlName=\"summaryOutputField\"\n                    rx-id=\"summary-output-field\"\n                    class=\"form-group d-block\"\n                  ></adapt-rx-select>\n\n                  <adapt-rx-select\n                    formControlName=\"source\"\n                    [options]=\"dataSourceOptions\"\n                    name=\"source\"\n                    rx-id=\"data-source\"\n                    label=\"{{ 'com.bmc.arsys.rx.client.admin.summarization-testing.data-source.label' | translate }}\"\n                    class=\"form-group d-block\"\n                  >\n                  </adapt-rx-select>\n\n                  <div class=\"d-flex flex-wrap\">\n                    <div class=\"flex-grow-1 mr-2 summarization-percentage\">\n                      <adapt-rx-counter\n                        [formControl]=\"recordSummarizationTestingForm.controls.summarizationPercentage\"\n                        label=\"{{\n                          'com.bmc.arsys.rx.client.admin.summarization-testing.summarization-percentage.label'\n                            | translate\n                        }}\"\n                        rx-id=\"summarization-percentage\"\n                        required\n                        adaptRange\n                        [min]=\"1\"\n                        [max]=\"50\"\n                        [tooltip]=\"{\n                          iconName: 'question_circle_o',\n                          content:\n                            'com.bmc.arsys.rx.client.admin.summarization-testing.summarization-percentage.tooltip'\n                            | translate,\n                          placement: 'top',\n                          popoverMode: true\n                        }\"\n                      ></adapt-rx-counter>\n                    </div>\n                    <div>\n                      <button\n                        adapt-button\n                        btn-type=\"primary\"\n                        type=\"button\"\n                        class=\"mr-2 button-margin-top\"\n                        rx-id=\"summarize-button\"\n                        (click)=\"summarizeUsingRecordInstance()\"\n                        [disabled]=\"isSummarizeButtonDisabled()\"\n                        [adaptInlineLoader]=\"isRecordSummarizationInProgress\"\n                      >\n                        {{ 'com.bmc.arsys.rx.client.admin.summarization-testing.summarize.button.label' | translate }}\n                      </button>\n                    </div>\n                    <div>\n                      <button\n                        adapt-button\n                        btn-type=\"secondary\"\n                        type=\"button\"\n                        rx-id=\"reset-button\"\n                        class=\"d-icon-reply button-margin-top\"\n                        (click)=\"resetRecordSummarizationTestingForm()\"\n                      >\n                        {{ 'com.bmc.arsys.rx.client.common.reset.label' | translate }}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-7 d-flex flex-column\">\n                  <adapt-alert\n                    [config]=\"{\n                      title: '',\n                      content:\n                        'com.bmc.arsys.rx.client.admin.summarization-testing.select-records-alert.message' | translate,\n                      type: 'inline',\n                      variant: 'info'\n                    }\"\n                    adaptPopover=\"{{\n                      'com.bmc.arsys.rx.client.admin.summarization-testing.select-records-alert.tooltip' | translate\n                    }}\"\n                  >\n                  </adapt-alert>\n                  <rx-record-grid\n                    rx-id=\"record-grid\"\n                    #recordGrid\n                    [config]=\"gridConfig\"\n                    *ngIf=\"shouldShowGrid\"\n                    class=\"record-summarization-grid form-group\"\n                  ></rx-record-grid>\n                </div>\n              </div>\n            </form>\n          </adapt-accordion-tab>\n        </adapt-accordion>\n      </div>\n    </div>\n  </ng-template>\n</rx-admin-settings>\n\n<ng-template #viewSummarizationDetailsTemplate let-close=\"close\">\n  <div class=\"dp-content\">\n    <div class=\"row pt-4 px-4 pb-1 mr-0\">\n      <div class=\"col-12 form-inline\">\n        <button\n          type=\"button\"\n          adapt-button\n          btn-type=\"secondary\"\n          rx-id=\"previous-button\"\n          class=\"mr-2 d-icon-left-angle_left\"\n          (click)=\"previous()\"\n          [disabled]=\"!index\"\n          size=\"small\"\n        >\n          {{ 'com.bmc.arsys.rx.client.common.previous-step.label' | translate }}\n        </button>\n        <button\n          type=\"button\"\n          adapt-button\n          btn-type=\"secondary\"\n          rx-id=\"next-button\"\n          class=\"mr-2 d-icon-right-angle_right\"\n          (click)=\"next()\"\n          [disabled]=\"index === recordGridComponent.api.getSelectedRows().length - 1\"\n          size=\"small\"\n        >\n          {{ 'com.bmc.arsys.rx.client.common.next-step.label' | translate }}\n        </button>\n\n        <div class=\"mr-2 pl-3\">\n          Summarization {{ index + 1 }} of {{ recordGridComponent.api.getSelectedRows().length }}\n        </div>\n      </div>\n    </div>\n    <div class=\"dp-body\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <adapt-rx-control-label\n            label=\"{{ 'Text input: ' + recordSummarizationTestingForm.get('textInputField').value[0].name }}\"\n            class=\"form-group\"\n          ></adapt-rx-control-label>\n\n          <div class=\"border-secondary form-group\" rx-id=\"text-input\">\n            {{ summarizedRecords.data[index][recordSummarizationTestingForm.get('textInputField').value[0].id] }}\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <adapt-rx-control-label\n            class=\"form-group\"\n            label=\"{{ 'Summary output: ' + recordSummarizationTestingForm.get('summaryOutputField').value[0].name }}\"\n          ></adapt-rx-control-label>\n\n          <div class=\"border-secondary form-group\" rx-id=\"summary-output\">\n            {{ summarizedRecords.data[index][recordSummarizationTestingForm.get('summaryOutputField').value[0].id] }}\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"dp-footer\">\n      <button type=\"button\" adapt-button (click)=\"close()\" btn-type=\"secondary\" rx-id=\"close-button\">\n        {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n      </button>\n    </div>\n  </div>\n</ng-template>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { SummarizationTestingAdminComponent } from './summarization-testing.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n  AdaptAccordionModule,\n  AdaptAlertModule,\n  AdaptButtonModule,\n  AdaptPopoverModule,\n  AdaptRxCounterModule,\n  AdaptRxLabelModule,\n  AdaptRxSelectModule,\n  AdaptRxTextareaModule,\n  AdaptRxTextfieldModule,\n  AdaptRxValidatorsModule,\n  AdaptBusyModule\n} from '@bmc-ux/adapt-angular';\n\nimport { CommonModule } from '@angular/common';\nimport { AdminSettingsModule, RxDefinitionPickerModule } from '@helix/platform/shared/components';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [SummarizationTestingAdminComponent],\n  imports: [\n    AdminSettingsModule,\n    AdaptAccordionModule,\n    AdaptButtonModule,\n    AdaptRxTextareaModule,\n    AdaptRxSelectModule,\n    AdaptRxCounterModule,\n    AdaptRxTextfieldModule,\n    AdaptRxLabelModule,\n    AdaptAlertModule,\n    CommonModule,\n    ReactiveFormsModule,\n    RxDefinitionPickerModule,\n    RecordGridModule,\n    ClipboardModule,\n    AdaptPopoverModule,\n    AdaptRxValidatorsModule,\n    TranslateModule,\n    AdaptBusyModule\n  ],\n  entryComponents: [SummarizationTestingAdminComponent]\n})\nexport class SummarizationTestingRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-summarization-testing',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(SummarizationTestingAdminComponent),\n      name: 'Summarization testing',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","export const RX_TONE_ANALYSIS_TESTING = {\n  languageOptions: [\n    { id: 'en', name: 'en' },\n    { id: 'fr', name: 'fr' }\n  ],\n  userEngagementResourceType: 'com.bmc.arsys.rx.application.cognitive.command.AnalyzeCustomerEngagementToneCommand',\n  documentEngagementResourceType: 'com.bmc.arsys.rx.application.cognitive.command.AnalyzeTextToneCommand',\n  systemSettingKeys: {\n    toneScoreThreshold: 'Tone-Score-Threshold'\n  }\n};\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { RxCommandFactoryService } from '@helix/platform/shared/api';\nimport { get, isNil, toNumber } from 'lodash';\nimport { RX_TONE_ANALYSIS_TESTING } from '../tone-analysis-testing.constant';\nimport { IDocumentTone } from '../tone-analysis-testing.interfaces';\nimport { RxSystemConfigurationService } from '@helix/platform/shared/api';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'rx-document-tone-analysis',\n  templateUrl: './document-tone-analysis.component.html',\n  styleUrls: ['./document-tone-analysis.component.scss']\n})\nexport class DocumentToneAnalysisComponent implements OnInit {\n  languageOptions: RxSelectOption[] = RX_TONE_ANALYSIS_TESTING.languageOptions;\n  language: RxSelectOption = [];\n  documentText: string[];\n  toneScoreThreshold: number;\n  defaultToneScoreThreshold = 0.5;\n  containsHtml: boolean;\n  includeSentenceLevelAnalysis: boolean;\n  extractedToneData: IDocumentTone;\n\n  @ViewChild('documentToneAnalysisForm', { static: true, read: NgForm })\n  documentToneAnalysisForm: NgForm;\n\n  constructor(\n    private rxCommandFactoryService: RxCommandFactoryService,\n    private rxSystemConfigurationService: RxSystemConfigurationService\n  ) {}\n\n  ngOnInit(): void {\n    this.rxSystemConfigurationService\n      .getConfiguration(RX_TONE_ANALYSIS_TESTING.systemSettingKeys.toneScoreThreshold)\n      .pipe(finalize(() => this.reset()))\n      .subscribe((data) => {\n        this.defaultToneScoreThreshold = data.value ? toNumber(data.value) : 0.5;\n      });\n  }\n\n  clearDocumentText() {\n    this.documentText = null;\n  }\n\n  optionFormatter(option: RxSelectOption): string {\n    return option.name;\n  }\n\n  setDefaultThreshold(): void {\n    this.toneScoreThreshold = this.defaultToneScoreThreshold;\n  }\n\n  analyzeTone(): void {\n    this.rxCommandFactoryService\n      .forResourceType(RX_TONE_ANALYSIS_TESTING.documentEngagementResourceType)\n      .execute({\n        resourceType: RX_TONE_ANALYSIS_TESTING.documentEngagementResourceType,\n        language: get(this.language[0], 'id'),\n        text: this.documentText,\n        containsHTML: this.containsHtml,\n        sentenceLevelAnalysis: this.includeSentenceLevelAnalysis,\n        toneScoreThreshold: this.toneScoreThreshold\n      })\n      .subscribe((response) => {\n        this.extractedToneData = response;\n      });\n  }\n\n  reset(): void {\n    this.language = [RX_TONE_ANALYSIS_TESTING.languageOptions[0]];\n    this.documentText = null;\n    this.toneScoreThreshold = this.defaultToneScoreThreshold;\n    this.containsHtml = false;\n    this.includeSentenceLevelAnalysis = false;\n    this.extractedToneData = null;\n    this.documentToneAnalysisForm.form.markAsPristine();\n  }\n\n  isAnalyzeToneButtonDisabled(): boolean {\n    return this.documentToneAnalysisForm.pristine || this.documentToneAnalysisForm.invalid;\n  }\n\n  isResetButtonDisabled(): boolean {\n    return this.documentToneAnalysisForm.pristine && isNil(this.documentText);\n  }\n}\n","<form #documentToneAnalysisForm=\"ngForm\">\n  <div class=\"row mb-4\">\n    <div class=\"col-md-3\">\n      <adapt-rx-select\n        rx-id=\"language\"\n        name=\"language\"\n        [(ngModel)]=\"language\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.tone-analysis-testing.language.label' | translate }}\"\n        [options]=\"languageOptions\"\n        [optionFormatter]=\"optionFormatter\"\n      ></adapt-rx-select>\n    </div>\n\n    <div class=\"col-md-3 contains-html\">\n      <adapt-rx-checkbox\n        rx-id=\"document-text-contains-html\"\n        name=\"containsHtml\"\n        [(ngModel)]=\"containsHtml\"\n        label=\"{{\n          'com.bmc.arsys.rx.client.admin.tone-analysis-testing.document-text-contains-html.label' | translate\n        }}\"\n      ></adapt-rx-checkbox>\n    </div>\n\n    <div class=\"col-md-6\">\n      <adapt-rx-control-label\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.tone-analysis-testing.document-tone.label' | translate }}\"\n      ></adapt-rx-control-label>\n      <div class=\"mt-1\">\n        <adapt-badge variant=\"info\" *ngIf=\"!extractedToneData\">\n          {{ 'com.bmc.arsys.rx.client.common.none.label' | translate }}\n        </adapt-badge>\n        <adapt-badge variant=\"info\" class=\"mr-1\" *ngFor=\"let score of extractedToneData?.documentTone?.scores\">\n          <b>{{ score.toneName }}</b> ({{ score.score }})\n        </adapt-badge>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-md-6 form-group\">\n      <button\n        rx-id=\"clear-button\"\n        type=\"button\"\n        adapt-button\n        btn-type=\"tertiary\"\n        class=\"p-0 float-right\"\n        (click)=\"clearDocumentText()\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.clear.label' | translate }}\n      </button>\n\n      <adapt-rx-textarea\n        rx-id=\"document-text\"\n        name=\"documentText\"\n        [(ngModel)]=\"documentText\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.tone-analysis-testing.document-text.label' | translate }}\"\n        placeholder=\"Type or paste document text here\"\n        [rows]=\"12\"\n        required\n      ></adapt-rx-textarea>\n\n      <div class=\"form-group pt-3\">\n        <button\n          type=\"button\"\n          adapt-button\n          btn-type=\"tertiary\"\n          rx-id=\"set-to-default-button\"\n          class=\"p-0 float-right\"\n          (click)=\"setDefaultThreshold()\"\n        >\n          {{ 'com.bmc.arsys.rx.client.admin.set-to-default.label' | translate }}\n        </button>\n\n        <adapt-rx-counter\n          rx-id=\"tone-score-threshold\"\n          name=\"toneScoreThresholdField\"\n          [(ngModel)]=\"toneScoreThreshold\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.tone-analysis-testing.tone-score-threshold.label' | translate }}\"\n          [max]=\"1.0\"\n          [min]=\"0.5\"\n          [step]=\"0.1\"\n          [size]=\"'small'\"\n          adaptRequired\n          [tooltip]=\"{\n            iconName: 'question_circle_o',\n            content: 'com.bmc.arsys.rx.client.admin.tone-analysis-testing.tone-score-threshold.tooltip' | translate,\n            placement: 'right',\n            popoverMode: true\n          }\"\n        >\n        </adapt-rx-counter>\n      </div>\n\n      <div class=\"form-group\">\n        <adapt-rx-switch\n          rx-id=\"include-sentence-level-analysis\"\n          name=\"includeSentenceLevelAnalysis\"\n          [(ngModel)]=\"includeSentenceLevelAnalysis\"\n          label=\"{{\n            'com.bmc.arsys.rx.client.admin.tone-analysis-testing.include-sentence-level-analysis.label' | translate\n          }}\"\n        ></adapt-rx-switch>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-12 form-group\">\n          <button\n            class=\"mr-2 d-icon-left-check_adapt\"\n            adapt-button\n            btn-type=\"primary\"\n            type=\"button\"\n            rx-id=\"analyze-tone-button\"\n            (click)=\"analyzeTone()\"\n            [disabled]=\"isAnalyzeToneButtonDisabled()\"\n          >\n            {{ 'com.bmc.arsys.rx.client.admin.tone-analysis-testing.analyze-tone.label' | translate }}\n          </button>\n\n          <button\n            class=\"mr-2 d-icon-left-undo\"\n            adapt-button\n            btn-type=\"secondary\"\n            type=\"button\"\n            rx-id=\"reset-button\"\n            (click)=\"reset()\"\n            [disabled]=\"isResetButtonDisabled()\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.reset.label' | translate }}\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-md-6 form-group\">\n      <div rx-id=\"sentences-tone\" name=\"sentenceTone\">\n        <adapt-rx-control-label label=\"Sentences tone\"></adapt-rx-control-label>\n        <div class=\"sentences-tones form-control\">\n          <div class=\"sentences-tone\" *ngFor=\"let sentenceTone of extractedToneData?.sentencesTone\">\n            <div class=\"sentence\">{{ sentenceTone.text }}</div>\n            <div>\n              <adapt-badge class=\"mr-1\" variant=\"info\" *ngFor=\"let score of sentenceTone?.scores\">\n                <b>{{ score.toneName }}</b> ({{ score.score }})</adapt-badge\n              >\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { RxCommandFactoryService } from '@helix/platform/shared/api';\nimport { compact, isNil, map, toNumber } from 'lodash';\nimport { RX_TONE_ANALYSIS_TESTING } from '../tone-analysis-testing.constant';\nimport { IUtterancesTone } from '../tone-analysis-testing.interfaces';\nimport { RxSystemConfigurationService } from '@helix/platform/shared/api';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'rx-user-engagement-tone-analysis',\n  templateUrl: './user-engagement-tone-analysis.component.html',\n  styleUrls: ['./user-engagement-tone-analysis.component.scss']\n})\nexport class UserEngagementToneAnalysisComponent implements OnInit {\n  languageOptions: RxSelectOption[] = RX_TONE_ANALYSIS_TESTING.languageOptions;\n  language: RxSelectOption;\n  utterances: string;\n  toneScoreThreshold: number;\n  defaultToneScoreThreshold = 0.5;\n  utteranceTonesData: IUtterancesTone;\n\n  @ViewChild('userEngagementToneAnalysisForm', { static: true, read: NgForm })\n  userEngagementToneAnalysisForm: NgForm;\n\n  constructor(\n    private rxCommandFactoryService: RxCommandFactoryService,\n    private rxSystemConfigurationService: RxSystemConfigurationService\n  ) {}\n\n  ngOnInit(): void {\n    this.rxSystemConfigurationService\n      .getConfiguration(RX_TONE_ANALYSIS_TESTING.systemSettingKeys.toneScoreThreshold)\n      .pipe(finalize(() => this.reset()))\n      .subscribe((data) => {\n        this.defaultToneScoreThreshold = data.value ? toNumber(data.value) : 0.5;\n      });\n  }\n\n  clearUtterances(): void {\n    this.utterances = null;\n  }\n\n  setDefaultThreshold(): void {\n    this.toneScoreThreshold = this.defaultToneScoreThreshold;\n  }\n\n  optionFormatter(option: RxSelectOption): string {\n    return option.name;\n  }\n\n  analyzeTone(): void {\n    const utterances = map(compact(this.utterances.split('\\n')), (utterance) => {\n      return {\n        text: utterance\n      };\n    });\n\n    this.rxCommandFactoryService\n      .forResourceType(RX_TONE_ANALYSIS_TESTING.userEngagementResourceType)\n      .execute({\n        resourceType: RX_TONE_ANALYSIS_TESTING.userEngagementResourceType,\n        language: this.language.id,\n        utterances: utterances,\n        toneScoreThreshold: this.toneScoreThreshold\n      })\n      .subscribe((response) => {\n        this.utteranceTonesData = response;\n      });\n  }\n\n  reset(): void {\n    this.toneScoreThreshold = this.defaultToneScoreThreshold;\n    this.language = [RX_TONE_ANALYSIS_TESTING.languageOptions[0]];\n    this.utterances = null;\n    this.utteranceTonesData = null;\n    this.userEngagementToneAnalysisForm.form.markAsPristine();\n  }\n\n  isAnalyzeToneButtonDisabled(): boolean {\n    return this.userEngagementToneAnalysisForm.pristine || this.userEngagementToneAnalysisForm.invalid;\n  }\n\n  isResetButtonDisabled(): boolean {\n    return this.userEngagementToneAnalysisForm.pristine && isNil(this.utterances);\n  }\n}\n","<form #userEngagementToneAnalysisForm=\"ngForm\">\n  <div class=\"row form-group\">\n    <div class=\"col-md-3\">\n      <adapt-rx-select\n        rx-id=\"language\"\n        name=\"language\"\n        [(ngModel)]=\"language\"\n        [options]=\"languageOptions\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.tone-analysis-testing.language.label' | translate }}\"\n        [optionFormatter]=\"optionFormatter\"\n      ></adapt-rx-select>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <button\n        rx-id=\"clear-button\"\n        type=\"button\"\n        adapt-button\n        btn-type=\"tertiary\"\n        class=\"p-0 float-right\"\n        (click)=\"clearUtterances()\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.clear.label' | translate }}\n      </button>\n\n      <adapt-rx-textarea\n        rx-id=\"utterances\"\n        name=\"utterances\"\n        [(ngModel)]=\"utterances\"\n        label=\"{{ 'com.bmc.arsys.rx.client.admin.tone-analysis-testing.utterances.label' | translate }}\"\n        placeholder=\"{{ 'com.bmc.arsys.rx.client.admin.tone-analysis-testing.utterances.placeholder' | translate }}\"\n        [rows]=\"16\"\n        required\n        [tooltip]=\"{\n          iconName: 'question_circle_o',\n          content: 'com.bmc.arsys.rx.client.admin.tone-analysis-testing.utterances.tooltip' | translate,\n          placement: 'right',\n          popoverMode: true\n        }\"\n      ></adapt-rx-textarea>\n\n      <div class=\"form-group pt-3\">\n        <button type=\"button\" adapt-button btn-type=\"tertiary\" class=\"p-0 float-right\" (click)=\"setDefaultThreshold()\">\n          {{ 'com.bmc.arsys.rx.client.admin.set-to-default.label' | translate }}\n        </button>\n\n        <adapt-rx-counter\n          rx-id=\"tone-score-threshold\"\n          name=\"toneScoreThreshold\"\n          [(ngModel)]=\"toneScoreThreshold\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.tone-analysis-testing.tone-score-threshold.label' | translate }}\"\n          [max]=\"1.0\"\n          [min]=\"0.5\"\n          [step]=\"0.1\"\n          [size]=\"'small'\"\n          [tooltip]=\"{\n            iconName: 'question_circle_o',\n            content: 'com.bmc.arsys.rx.client.admin.tone-analysis-testing.tone-score-threshold.tooltip' | translate,\n            placement: 'right',\n            popoverMode: true\n          }\"\n        >\n        </adapt-rx-counter>\n      </div>\n\n      <div class=\"my-4\">\n        <button\n          class=\"mr-2 d-icon-left-check_adapt\"\n          adapt-button\n          btn-type=\"primary\"\n          type=\"button\"\n          rx-id=\"analyze-tone-button\"\n          (click)=\"analyzeTone()\"\n          [disabled]=\"isAnalyzeToneButtonDisabled()\"\n        >\n          {{ 'com.bmc.arsys.rx.client.admin.tone-analysis-testing.analyze-tone.label' | translate }}\n        </button>\n\n        <button\n          [disabled]=\"true\"\n          class=\"mr-2 d-icon-left-undo\"\n          adapt-button\n          btn-type=\"secondary\"\n          type=\"button\"\n          rx-id=\"reset-button\"\n          (click)=\"reset()\"\n          [disabled]=\"isResetButtonDisabled()\"\n        >\n          {{ 'com.bmc.arsys.rx.client.common.reset.label' | translate }}\n        </button>\n      </div>\n    </div>\n\n    <div class=\"col-md-6 mb-4\">\n      <div rx-id=\"utterance-tone\" name=\"utteranceTones\">\n        <adapt-rx-control-label\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.tone-analysis-testing.utterances-tone.label' | translate }}\"\n        ></adapt-rx-control-label>\n        <div class=\"sentences-tones form-control\">\n          <div class=\"sentences-tone\" *ngFor=\"let sentenceTone of utteranceTonesData?.utterancesTone\">\n            <div class=\"sentence\">{{ sentenceTone.text }}</div>\n            <div>\n              <adapt-badge variant=\"info\" class=\"mr-1\" *ngFor=\"let score of sentenceTone?.scores\">\n                <b>{{ score.toneName }}</b> ({{ score.score }})</adapt-badge\n              >\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from '@angular/core';\n@Component({\n  selector: 'rx-tone-analysis-testing',\n  templateUrl: './tone-analysis-testing.component.html'\n})\nexport class ToneAnalysisTestingAdminComponent {}\n","<rx-admin-settings header=\"Tone analysis testing\">\n  <adapt-tabset [fullHeight]=\"true\">\n    <adapt-tab-panel\n      adapt-tab-title=\"{{\n        'com.bmc.arsys.rx.client.admin.tone-analysis-testing.document-tone-analysis.title' | translate\n      }}\"\n    >\n      <rx-document-tone-analysis></rx-document-tone-analysis>\n    </adapt-tab-panel>\n    <adapt-tab-panel\n      adapt-tab-title=\"{{\n        'com.bmc.arsys.rx.client.admin.tone-analysis-testing.user-engagement-tone-analysis.title' | translate\n      }}\"\n    >\n      <rx-user-engagement-tone-analysis></rx-user-engagement-tone-analysis>\n    </adapt-tab-panel>\n  </adapt-tabset>\n</rx-admin-settings>\n","import { CommonModule } from '@angular/common';\nimport { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AdaptBadgeModule,\n  AdaptButtonModule,\n  AdaptRxCheckboxModule,\n  AdaptRxCounterModule,\n  AdaptRxLabelModule,\n  AdaptRxSelectModule,\n  AdaptRxSwitchModule,\n  AdaptRxTextareaModule,\n  AdaptTabsModule\n} from '@bmc-ux/adapt-angular';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { DocumentToneAnalysisComponent } from './document-tone-analysis/document-tone-analysis.component';\nimport { ToneAnalysisTestingAdminComponent } from './tone-analysis-testing.component';\nimport { UserEngagementToneAnalysisComponent } from './user-engagement-tone-analysis/user-engagement-tone-analysis.component';\nimport { TranslateModule } from '@ngx-translate/core';\n@NgModule({\n  declarations: [ToneAnalysisTestingAdminComponent, DocumentToneAnalysisComponent, UserEngagementToneAnalysisComponent],\n  imports: [\n    AdminSettingsModule,\n    AdaptTabsModule,\n    AdaptRxSelectModule,\n    AdaptRxCheckboxModule,\n    AdaptRxTextareaModule,\n    AdaptRxTextareaModule,\n    AdaptRxLabelModule,\n    AdaptRxCounterModule,\n    AdaptButtonModule,\n    AdaptRxSwitchModule,\n    AdaptBadgeModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule\n  ],\n  entryComponents: [ToneAnalysisTestingAdminComponent]\n})\nexport class ToneAnalysisTestingRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-tone-analysis-testing',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(ToneAnalysisTestingAdminComponent),\n      name: 'Tone analysis testing',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","export const RX_VIRTUAL_CHAT_CONFIGURATION = {\n  virtualChatConfigName: 'Virtual Chat Configuration',\n  virtualChatAdditionalSettingsName: 'Virtual Chat Additional Settings',\n  pingLiveChatServiceCommand: 'com.bmc.arsys.rx.application.cognitive.command.PingLiveChatServiceCommand',\n  virtualChatConfigurationSaved: 'Live Chat configuration saved successfully.',\n  virtualChatVerifyAdministratorKey:\n    'Unable to retrieve chat topics. Please verify that the Live Chat administrator key is correct.',\n\n  virtualChat: {\n    settingNames: {\n      url: 'URL',\n      userName: 'Username',\n      password: 'Password',\n      arServerUrl: 'ARServer-URL'\n    }\n  },\n  virtualChatAdditionalSetting: {\n    settingNames: {\n      adminKey: 'AdminKey',\n      company: 'Company'\n    }\n  }\n};\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {\n  IAdminComponentSetting,\n  IAdminComponentSettings,\n  RxAdminSettingsService,\n  RxLiveAgentSettingsService,\n  RxNotificationService,\n  RX_APPLICATION\n} from '@helix/platform/shared/api';\nimport { ConnectionTestStatus, RxModalService, RX_MODAL } from '@helix/platform/ui-kit';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { TranslateService } from '@ngx-translate/core';\nimport { find, get, isEmpty, map, values } from 'lodash';\nimport { forkJoin, Observable, Subscription, throwError } from 'rxjs';\nimport { catchError, switchMap, tap } from 'rxjs/operators';\nimport { RxCognitiveServiceService } from '../cognitive-service/cognitive-service.service';\nimport { RX_VIRTUAL_CHAT_CONFIGURATION } from './virtual-chat-configuration.constant';\n\n@Component({\n  selector: 'rx-admin-virtual-chat-configuration',\n  templateUrl: './virtual-chat-configuration.component.html',\n  styleUrls: ['./virtual-chat-configuration.component.scss']\n})\nexport class VirtualChatConfigurationAdminComponent extends BaseViewComponent implements OnInit {\n  busy: Subscription;\n  virtualChatConfigurationForm: FormGroup;\n  virtualChatAdditionalSettingsForm: FormGroup;\n  connectionTestStatus: ConnectionTestStatus = ConnectionTestStatus.Invalid;\n  private isNewVirtualChatSetting = false;\n  private isNewVirtualChatAdditionalSetting = false;\n  private virtualChatComponentSettingsValues: IAdminComponentSetting[] = [];\n  private additionalSettingsComponentSettingsValues: IAdminComponentSetting[] = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private rxAdminSettingsService: RxAdminSettingsService,\n    private rxNotificationService: RxNotificationService,\n    private rxModalService: RxModalService,\n    private rxCognitiveServiceService: RxCognitiveServiceService,\n    private rxLiveAgentSettingsService: RxLiveAgentSettingsService,\n    private translateService: TranslateService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.notifyPropertyChanged('api', {\n      isDirty: () => this.virtualChatConfigurationForm.dirty || this.virtualChatAdditionalSettingsForm.dirty\n    });\n\n    this.virtualChatConfigurationForm = this.formBuilder.group({\n      virtualChatUrl: '',\n      username: '',\n      password: '',\n      systemServerUrl: ''\n    });\n\n    this.virtualChatAdditionalSettingsForm = this.formBuilder.group({\n      administratorKey: '',\n      company: ''\n    });\n\n    this.busy = forkJoin({\n      virtualChatComponentSettings: this.getVirtualChatComponentSettings(),\n      additionalSettingsComponentSettings: this.getAdditionalSettingsComponentSettings()\n    }).subscribe((response) => {\n      this.isNewVirtualChatSetting = !get(response.virtualChatComponentSettings, 'values', []).length;\n      this.isNewVirtualChatAdditionalSetting = !get(response.additionalSettingsComponentSettings, 'values', []).length;\n\n      if (this.isNewVirtualChatSetting) {\n        this.virtualChatComponentSettingsValues = map(\n          values(RX_VIRTUAL_CHAT_CONFIGURATION.virtualChat.settingNames),\n          (settingName: string) => ({\n            assigneeGroupPermission: null,\n            componentName: RX_VIRTUAL_CHAT_CONFIGURATION.virtualChatConfigName,\n            settingId: null,\n            settingName: settingName,\n            settingValue: null,\n            ownerKeyValue1: null\n          })\n        );\n      } else {\n        this.virtualChatComponentSettingsValues = response.virtualChatComponentSettings.values;\n      }\n\n      if (this.isNewVirtualChatAdditionalSetting) {\n        this.additionalSettingsComponentSettingsValues = map(\n          values(RX_VIRTUAL_CHAT_CONFIGURATION.virtualChatAdditionalSetting.settingNames),\n          (settingName: string) => ({\n            assigneeGroupPermission: null,\n            componentName: RX_VIRTUAL_CHAT_CONFIGURATION.virtualChatAdditionalSettingsName,\n            ownerKeyValue1: null,\n            settingId: null,\n            settingName: settingName,\n            settingValue: null\n          })\n        );\n      } else {\n        this.additionalSettingsComponentSettingsValues = response.additionalSettingsComponentSettings.values;\n      }\n\n      this.virtualChatConfigurationForm.patchValue({\n        virtualChatUrl: this.getValueFromVirtualSetting(RX_VIRTUAL_CHAT_CONFIGURATION.virtualChat.settingNames.url),\n        username: this.getValueFromVirtualSetting(RX_VIRTUAL_CHAT_CONFIGURATION.virtualChat.settingNames.userName),\n        password: this.getValueFromVirtualSetting(RX_VIRTUAL_CHAT_CONFIGURATION.virtualChat.settingNames.password),\n        systemServerUrl: this.getValueFromVirtualSetting(\n          RX_VIRTUAL_CHAT_CONFIGURATION.virtualChat.settingNames.arServerUrl\n        )\n      });\n\n      this.virtualChatAdditionalSettingsForm.patchValue({\n        administratorKey: this.getValueFromAdditionalSetting(\n          RX_VIRTUAL_CHAT_CONFIGURATION.virtualChatAdditionalSetting.settingNames.adminKey\n        ),\n        company: this.getValueFromAdditionalSetting(\n          RX_VIRTUAL_CHAT_CONFIGURATION.virtualChatAdditionalSetting.settingNames.company\n        )\n      });\n    });\n\n    this.virtualChatConfigurationForm.valueChanges.subscribe(() => {\n      this.connectionTestStatus =\n        this.virtualChatConfigurationForm.pristine || this.virtualChatConfigurationForm.invalid\n          ? ConnectionTestStatus.Invalid\n          : ConnectionTestStatus.Unknown;\n    });\n  }\n\n  private getVirtualChatComponentSettings(): Observable<IAdminComponentSettings> {\n    return this.rxAdminSettingsService.getComponentSettings(RX_VIRTUAL_CHAT_CONFIGURATION.virtualChatConfigName, {\n      'default-bundle-scope': RX_APPLICATION.settingsBundleId\n    });\n  }\n\n  private getAdditionalSettingsComponentSettings(): Observable<IAdminComponentSettings> {\n    return this.rxAdminSettingsService.getComponentSettings(\n      RX_VIRTUAL_CHAT_CONFIGURATION.virtualChatAdditionalSettingsName,\n      {\n        'default-bundle-scope': RX_APPLICATION.settingsBundleId\n      }\n    );\n  }\n\n  private getValueFromAdditionalSetting(settingName: string): string {\n    return get(\n      find(this.additionalSettingsComponentSettingsValues, {\n        settingName\n      }),\n      'settingValue',\n      null\n    );\n  }\n\n  private getValueFromVirtualSetting(settingName: string): string {\n    return get(\n      find(this.virtualChatComponentSettingsValues, {\n        settingName\n      }),\n      'settingValue',\n      null\n    );\n  }\n\n  onTestConnection(): void {\n    const formValue = this.virtualChatConfigurationForm.getRawValue();\n\n    this.rxCognitiveServiceService\n      .testConnection({\n        resourceType: RX_VIRTUAL_CHAT_CONFIGURATION.pingLiveChatServiceCommand,\n        remedyMidTierUrl: formValue.virtualChatUrl,\n        arAdministratorUser: formValue.username,\n        arAdministratorPassword: formValue.password,\n        arSystemServerUrl: formValue.systemServerUrl\n      })\n      .pipe(\n        catchError((error: HttpErrorResponse) => {\n          this.connectionTestStatus = ConnectionTestStatus.Failed;\n\n          return throwError(error);\n        })\n      )\n      .subscribe(() => {\n        this.connectionTestStatus = ConnectionTestStatus.Passed;\n      });\n  }\n\n  isSaveButtonDisabled(): boolean {\n    return (\n      this.virtualChatConfigurationForm.pristine ||\n      this.virtualChatConfigurationForm.invalid ||\n      this.connectionTestStatus !== ConnectionTestStatus.Passed\n    );\n  }\n\n  private setVirtualSettingValue(settingName: string, value: string): void {\n    find(this.virtualChatComponentSettingsValues, {\n      settingName\n    }).settingValue = value;\n  }\n\n  saveVirtualChatConfig(): void {\n    let adminSetting$: Observable<any>;\n    const formValue = this.virtualChatConfigurationForm.getRawValue();\n\n    this.setVirtualSettingValue(RX_VIRTUAL_CHAT_CONFIGURATION.virtualChat.settingNames.url, formValue.virtualChatUrl);\n    this.setVirtualSettingValue(RX_VIRTUAL_CHAT_CONFIGURATION.virtualChat.settingNames.userName, formValue.username);\n    this.setVirtualSettingValue(RX_VIRTUAL_CHAT_CONFIGURATION.virtualChat.settingNames.password, formValue.password);\n    this.setVirtualSettingValue(\n      RX_VIRTUAL_CHAT_CONFIGURATION.virtualChat.settingNames.arServerUrl,\n      formValue.systemServerUrl\n    );\n\n    if (this.isNewVirtualChatSetting) {\n      adminSetting$ = this.rxAdminSettingsService\n        .createComponentSettings(\n          RX_VIRTUAL_CHAT_CONFIGURATION.virtualChatConfigName,\n          this.virtualChatComponentSettingsValues\n        )\n        .pipe(\n          switchMap(() => this.getVirtualChatComponentSettings()),\n          tap((response) => {\n            this.isNewVirtualChatSetting = false;\n            this.virtualChatComponentSettingsValues = response.values;\n          })\n        );\n    } else {\n      adminSetting$ = this.rxAdminSettingsService.updateComponentSettings(\n        `${RX_VIRTUAL_CHAT_CONFIGURATION.virtualChatConfigName}/${this.virtualChatComponentSettingsValues[0].ownerKeyValue1}`,\n        this.virtualChatComponentSettingsValues\n      );\n    }\n\n    this.busy = adminSetting$.subscribe(() => {\n      this.rxNotificationService.addSuccessMessage(RX_VIRTUAL_CHAT_CONFIGURATION.virtualChatConfigurationSaved);\n      this.connectionTestStatus = ConnectionTestStatus.Invalid;\n      this.virtualChatConfigurationForm.markAsPristine();\n      this.rxLiveAgentSettingsService.getAvailableTopics();\n    });\n  }\n\n  private setAdditionalSettingValue(settingName: string, value: string): void {\n    find(this.additionalSettingsComponentSettingsValues, {\n      settingName\n    }).settingValue = value;\n  }\n\n  saveAdditionalSettings(): void {\n    let adminSetting$: Observable<any>;\n    const formValue = this.virtualChatAdditionalSettingsForm.getRawValue();\n\n    this.setAdditionalSettingValue(\n      RX_VIRTUAL_CHAT_CONFIGURATION.virtualChatAdditionalSetting.settingNames.adminKey,\n      formValue.administratorKey\n    );\n    this.setAdditionalSettingValue(\n      RX_VIRTUAL_CHAT_CONFIGURATION.virtualChatAdditionalSetting.settingNames.company,\n      formValue.company\n    );\n\n    if (this.isNewVirtualChatAdditionalSetting) {\n      adminSetting$ = this.rxAdminSettingsService\n        .createComponentSettings(\n          RX_VIRTUAL_CHAT_CONFIGURATION.virtualChatAdditionalSettingsName,\n          this.additionalSettingsComponentSettingsValues\n        )\n        .pipe(\n          switchMap(() => this.getAdditionalSettingsComponentSettings()),\n          tap((response) => {\n            this.isNewVirtualChatAdditionalSetting = false;\n            this.additionalSettingsComponentSettingsValues = response.values;\n          })\n        );\n    } else {\n      adminSetting$ = this.rxAdminSettingsService.updateComponentSettings(\n        `${RX_VIRTUAL_CHAT_CONFIGURATION.virtualChatAdditionalSettingsName}/${this.additionalSettingsComponentSettingsValues[0].ownerKeyValue1}`,\n        this.additionalSettingsComponentSettingsValues\n      );\n    }\n\n    this.busy = adminSetting$.subscribe(() => {\n      this.virtualChatAdditionalSettingsForm.markAsPristine();\n      this.rxNotificationService.addSuccessMessage(RX_VIRTUAL_CHAT_CONFIGURATION.virtualChatConfigurationSaved);\n\n      this.rxLiveAgentSettingsService.getAvailableTopics().subscribe((topics) => {\n        if (isEmpty(topics)) {\n          this.rxNotificationService.addWarningMessage(RX_VIRTUAL_CHAT_CONFIGURATION.virtualChatVerifyAdministratorKey);\n        }\n      });\n    });\n  }\n}\n","<rx-admin-settings\n  header=\"{{ 'com.bmc.arsys.rx.client.admin.virtual-chat-configuration.header.title' | translate }}\"\n  [busy]=\"busy\"\n>\n  <adapt-accordion multiselect=\"true\" class=\"pb-4\">\n    <form [formGroup]=\"virtualChatConfigurationForm\">\n      <adapt-accordion-tab title=\"Authentication\" isOpen=\"true\" rx-id=\"authentication\">\n        <adapt-rx-textfield\n          rx-id=\"virtual-chat-url\"\n          label=\"{{\n            'com.bmc.arsys.rx.client.admin.tone-analysis-testing.bmc-remedy-virtual-chat-api-endpoint-url.label'\n              | translate\n          }}\"\n          formControlName=\"virtualChatUrl\"\n          maxlength=\"254\"\n          required=\"true\"\n          class=\"d-block form-group\"\n        >\n        </adapt-rx-textfield>\n        <adapt-rx-textfield\n          rx-id=\"administrator-user\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.tone-analysis-testing.ar-administrator-user.label' | translate }}\"\n          formControlName=\"username\"\n          maxlength=\"254\"\n          required=\"true\"\n          class=\"d-block form-group\"\n        >\n        </adapt-rx-textfield>\n        <adapt-rx-textfield\n          rx-id=\"administrator-password\"\n          label=\"{{\n            'com.bmc.arsys.rx.client.admin.tone-analysis-testing.ar-administrator-password.label' | translate\n          }}\"\n          formControlName=\"password\"\n          maxlength=\"254\"\n          required=\"true\"\n          [isPassword]=\"true\"\n          class=\"d-block form-group\"\n        >\n        </adapt-rx-textfield>\n        <adapt-rx-textfield\n          rx-id=\"system-server-url\"\n          label=\"{{\n            'com.bmc.arsys.rx.client.admin.tone-analysis-testing.ar-system-server-api-endpoint-url.label' | translate\n          }}\"\n          formControlName=\"systemServerUrl\"\n          maxlength=\"254\"\n          required=\"true\"\n          class=\"d-block form-group\"\n        >\n        </adapt-rx-textfield>\n\n        <div class=\"d-flex justify-content-start\">\n          <rx-connection-tester\n            buttonType=\"secondary\"\n            [status]=\"connectionTestStatus\"\n            (testConnection)=\"onTestConnection()\"\n            rx-id=\"virtual-chat-configuration-test-button\"\n          ></rx-connection-tester>\n          <button\n            adapt-button\n            class=\"ml-4 mr-2\"\n            btn-type=\"primary\"\n            type=\"button\"\n            rx-id=\"save-button\"\n            [disabled]=\"isSaveButtonDisabled()\"\n            (click)=\"saveVirtualChatConfig()\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n          </button>\n        </div>\n      </adapt-accordion-tab>\n    </form>\n\n    <form [formGroup]=\"virtualChatAdditionalSettingsForm\">\n      <adapt-accordion-tab title=\"Additional settings\" rx-id=\"additional-settings\" class=\"d-block\">\n        <adapt-rx-textfield\n          rx-id=\"administrator-key\"\n          label=\"{{ 'com.bmc.arsys.rx.client.admin.tone-analysis-testing.administrator-key.label' | translate }}\"\n          formControlName=\"administratorKey\"\n          class=\"d-block form-group\"\n          [tooltip]=\"{\n            iconName: 'question_circle_o',\n            content: 'com.bmc.arsys.rx.client.admin.virtual-chat-configuration.administrator-key.tooltip' | translate,\n            placement: 'right',\n            popoverMode: true\n          }\"\n        >\n        </adapt-rx-textfield>\n        <adapt-rx-textfield rx-id=\"company\" label=\"Company\" formControlName=\"company\" class=\"d-block form-group\">\n        </adapt-rx-textfield>\n\n        <div class=\"d-flex justify-content-start\">\n          <button\n            adapt-button\n            class=\"mr-2\"\n            btn-type=\"primary\"\n            type=\"button\"\n            rx-id=\"additional-settings-save-button\"\n            [disabled]=\"virtualChatAdditionalSettingsForm.pristine || virtualChatAdditionalSettingsForm.invalid\"\n            (click)=\"saveAdditionalSettings()\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n          </button>\n        </div>\n      </adapt-accordion-tab>\n    </form>\n  </adapt-accordion>\n</rx-admin-settings>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { VirtualChatConfigurationAdminComponent } from './virtual-chat-configuration.component';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { AdaptAccordionModule, AdaptButtonModule, AdaptRxTextfieldModule } from '@bmc-ux/adapt-angular';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RxConnectionTesterModule } from '@helix/platform/ui-kit';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [VirtualChatConfigurationAdminComponent],\n  imports: [\n    AdaptAccordionModule,\n    AdaptButtonModule,\n    AdaptRxTextfieldModule,\n    AdminSettingsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    RxConnectionTesterModule,\n    TranslateModule\n  ],\n  entryComponents: [VirtualChatConfigurationAdminComponent]\n})\nexport class VirtualChatConfigurationRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-virtual-chat-configuration',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(VirtualChatConfigurationAdminComponent),\n      name: 'Virtual Chat configuration',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import {\n  IWebApiConnection,\n  IWebApiConnectionField,\n  IWebApiConnectionWizardStep\n} from './web-api-connections.interfaces';\n\nconst fieldIds = {\n  hostname: 70030,\n  port: 70031,\n  protocol: 70032,\n  authType: 70033,\n  authentication: 70034\n};\n\nconst authTypes = {\n  basicAuth: 0,\n  oAuth2: 1,\n  rsso: 2,\n  custom: 3,\n  remedy: 11,\n  oAuthTokenExchange: 12\n};\n\nconst protocolTypes = {\n  http: 0,\n  https: 1\n};\n\nconst protocolTypeOptions = [\n  {\n    id: protocolTypes.http,\n    label: 'HTTP'\n  },\n  {\n    id: protocolTypes.https,\n    label: 'HTTPS'\n  }\n];\n\nconst grantTypeOptions = [\n  {\n    id: 0,\n    label: 'client_credentials'\n  }\n];\n\nconst authTypeOptions = [\n  {\n    id: authTypes.basicAuth,\n    label: 'Basic'\n  },\n  {\n    id: authTypes.oAuth2,\n    label: 'OAuth 2.0'\n  },\n  {\n    id: authTypes.rsso,\n    label: 'RSSO'\n  },\n  {\n    id: authTypes.custom,\n    label: 'Custom'\n  },\n  {\n    id: authTypes.remedy,\n    label: 'Remedy'\n  },\n  {\n    id: authTypes.oAuthTokenExchange,\n    label: 'OAuth token exchange'\n  }\n];\n\nconst webApiConnection: IWebApiConnection = {\n  authTypeCode: '',\n  secure: '',\n  name: '',\n  hostname: '',\n  port: '',\n  authTypeDetails: {\n    username: '',\n    credentials: '',\n    httpHeaders: [],\n    queryParams: [],\n    tokenFetchMechanism: 0,\n    additionalFormParams: []\n  }\n};\n\nconst wizardSteps: IWebApiConnectionWizardStep[] = [\n  {\n    title: 'General',\n    fields: [\n      {\n        type: 'text',\n        name: 'name',\n        label: 'com.bmc.arsys.rx.client.common.name.label',\n        rxId: 'name',\n        required: true\n      },\n      {\n        type: 'text',\n        name: 'hostname',\n        label: 'com.bmc.arsys.rx.client.admin.data-source-connection-properties.host-name.label',\n        rxId: 'host-name',\n        required: true\n      },\n      {\n        type: 'number',\n        name: 'port',\n        label: 'com.bmc.arsys.rx.client.admin.data-source-connection-properties.port.label',\n        rxId: 'port',\n        minValue: 1,\n        maxValue: 65535,\n        required: true,\n        allowScientific: false,\n        allowIntegerOnly: true\n      },\n      {\n        type: 'select',\n        name: 'secure',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.protocol.label',\n        rxId: 'protocol',\n        selectOptions: protocolTypeOptions,\n        required: true\n      },\n      {\n        type: 'select',\n        name: 'authTypeCode',\n        label: 'com.bmc.arsys.rx.client.admin.data-source-connection-properties.authentication.label',\n        rxId: 'authentication',\n        selectOptions: authTypeOptions,\n        required: true\n      }\n    ],\n    id: 'General',\n    formName: 'generalConfigurationForm',\n    isValid: true,\n    isDirty: false\n  },\n  {\n    title: 'Authentication',\n    fields: [\n      {\n        type: 'text',\n        name: 'username',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.login.label',\n        rxId: 'login',\n        required: true\n      },\n      {\n        type: 'password',\n        name: 'credentials',\n        label: 'com.bmc.arsys.rx.client.common.password.label',\n        rxId: 'password',\n        required: true\n      },\n      {\n        type: 'nameValuePairs',\n        name: 'httpHeaders',\n        label: 'HTTP headers',\n        rxId: 'http-headers',\n        required: true\n      }\n    ],\n    id: 'Authentication',\n    formName: 'authenticationConfigurationForm',\n    isValid: true,\n    isDirty: false\n  }\n];\n\nconst authTypeFields: Array<{ id: number; fields: IWebApiConnectionField[] }> = [\n  {\n    id: authTypes.basicAuth,\n    fields: [\n      {\n        type: 'text',\n        name: 'username',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.login.label',\n        rxId: 'login',\n        required: true\n      },\n      {\n        type: 'password',\n        name: 'credentials',\n        label: 'com.bmc.arsys.rx.client.common.password.label',\n        rxId: 'password',\n        required: true\n      },\n      {\n        type: 'nameValuePairs',\n        name: 'httpHeaders',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.add-http-headers.label',\n        rxId: 'http-headers',\n        required: true\n      }\n    ]\n  },\n  {\n    id: authTypes.oAuth2,\n    fields: [\n      {\n        type: 'select',\n        name: 'grantType',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.grant-type.label',\n        rxId: 'grant-type',\n        selectOptions: grantTypeOptions,\n        disabled: false,\n        required: true\n      },\n      {\n        type: 'text',\n        name: 'tokenPath',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.access-token-url.label',\n        rxId: 'access-token-url',\n        required: true\n      },\n      {\n        type: 'text',\n        name: 'username',\n        label: 'com.bmc.arsys.rx.client.admin.rsso-auth.client-id.label',\n        rxId: 'client-id',\n        required: true\n      },\n      {\n        type: 'password',\n        name: 'credentials',\n        label: 'com.bmc.arsys.rx.client.admin.rsso-auth.client-secret.label',\n        rxId: 'client-secret',\n        required: true\n      },\n      {\n        type: 'radio',\n        name: 'tokenFetchMechanism',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.client-credentials-transfer-mechanism.label',\n        rxId: 'token-fetch-mechanism',\n        selectOptions: [\n          {\n            label: 'com.bmc.arsys.rx.client.admin.web-api-connections.authorization-request-header.label',\n            value: 0\n          },\n          {\n            label: 'com.bmc.arsys.rx.client.admin.web-api-connections.form-parameters.label',\n            value: 1\n          }\n        ]\n      },\n      {\n        type: 'text',\n        name: 'redirectUri',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.redirect-uri.label',\n        rxId: 'redirect-uri',\n        required: false\n      },\n      {\n        type: 'text',\n        name: 'scope',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.scope.label',\n        rxId: 'scope',\n        required: false\n      },\n      {\n        type: 'serverEndpointRadio',\n        name: 'authServerEndpoint',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.authorization-server-endpoint.label',\n        rxId: 'auth-server-endpoint',\n        selectOptions: [\n          {\n            label: 'com.bmc.arsys.rx.client.admin.web-api-connections.endpoint-type.default-hostname.label',\n            value: 'Default'\n          },\n          {\n            label: 'com.bmc.arsys.rx.client.admin.web-api-connections.endpoint-type.custom.label',\n            value: 'Custom'\n          }\n        ],\n        placeholder: 'com.bmc.arsys.rx.client.admin.web-api-connections.authorization-server-endpoint.placeholder',\n        referenceFieldName: 'hostname',\n        tooltip: 'com.bmc.arsys.rx.client.admin.web-api-connections.authorization-server-endpoint.tooltip',\n        required: true\n      },\n      {\n        type: 'nameValuePairs',\n        name: 'httpHeaders',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.add-http-headers.label',\n        rxId: 'http-headers',\n        required: true\n      },\n      {\n        type: 'nameValuePairs',\n        name: 'additionalFormParams',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.add-form-parameters.label',\n        rxId: 'additional-form-params'\n      }\n    ]\n  },\n  {\n    id: authTypes.rsso,\n    fields: [\n      {\n        type: 'text',\n        name: 'loginName',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.login.label',\n        rxId: 'login',\n        required: true\n      },\n      {\n        type: 'text',\n        name: 'tokenPath',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.access-token-url.label',\n        rxId: 'access-token-url',\n        required: true\n      },\n      {\n        type: 'text',\n        name: 'username',\n        label: 'com.bmc.arsys.rx.client.admin.rsso-auth.client-id.label',\n        rxId: 'client-id',\n        required: true\n      },\n      {\n        type: 'password',\n        name: 'credentials',\n        label: 'com.bmc.arsys.rx.client.admin.rsso-auth.client-secret.label',\n        rxId: 'client-secret',\n        required: true\n      },\n      {\n        type: 'serverEndpointRadio',\n        name: 'authServerEndpoint',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.rsso-server-endpoint.label',\n        rxId: 'auth-server-endpoint',\n        referenceFieldName: 'hostname',\n        selectOptions: [\n          {\n            label: 'com.bmc.arsys.rx.client.admin.web-api-connections.endpoint-type.default-hostname.label',\n            value: 'Default'\n          },\n          {\n            label: 'com.bmc.arsys.rx.client.admin.web-api-connections.endpoint-type.custom.label',\n            value: 'Custom'\n          }\n        ],\n        placeholder: 'com.bmc.arsys.rx.client.admin.web-api-connections.rsso-server-endpoint.placeholder',\n        required: true\n      },\n      {\n        type: 'nameValuePairs',\n        name: 'httpHeaders',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.add-http-headers.label',\n        rxId: 'http-headers',\n        required: true\n      }\n    ]\n  },\n  {\n    id: authTypes.custom,\n    fields: [\n      {\n        type: 'nameValuePairs',\n        name: 'httpHeaders',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.add-http-headers.label',\n        rxId: 'http-headers',\n        required: true\n      },\n      {\n        type: 'nameValuePairs',\n        name: 'queryParams',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.add-query-parameters.label',\n        rxId: 'query-parameters',\n        required: true\n      }\n    ]\n  },\n  {\n    id: authTypes.remedy,\n    fields: [\n      {\n        type: 'text',\n        name: 'username',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.login.label',\n        rxId: 'login',\n        required: true\n      },\n      {\n        type: 'password',\n        name: 'credentials',\n        label: 'com.bmc.arsys.rx.client.common.password.label',\n        rxId: 'password',\n        required: true\n      },\n      {\n        type: 'nameValuePairs',\n        name: 'httpHeaders',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.add-http-headers.label',\n        rxId: 'http-headers',\n        required: true\n      }\n    ]\n  },\n  {\n    id: authTypes.oAuthTokenExchange,\n    fields: [\n      {\n        type: 'text',\n        name: 'loginName',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.login.label',\n        rxId: 'login'\n      },\n      {\n        type: 'text',\n        name: 'tokenPath',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.access-token-url.label',\n        rxId: 'access-token-url',\n        required: true\n      },\n      {\n        type: 'text',\n        name: 'username',\n        label: 'com.bmc.arsys.rx.client.admin.rsso-auth.client-id.label',\n        rxId: 'client-id',\n        required: true\n      },\n      {\n        type: 'password',\n        name: 'credentials',\n        label: 'com.bmc.arsys.rx.client.admin.rsso-auth.client-secret.label',\n        rxId: 'client-secret',\n        required: true\n      },\n      {\n        type: 'text',\n        name: 'resources',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.resources.label',\n        rxId: 'resources',\n        required: true,\n        isUrl: true\n      },\n      {\n        type: 'serverEndpointRadio',\n        name: 'authServerEndpoint',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.oauth-token-exchange-server-endpoint.label',\n        rxId: 'auth-server-endpoint',\n        referenceFieldName: 'hostname',\n        selectOptions: [\n          {\n            label: 'com.bmc.arsys.rx.client.admin.web-api-connections.endpoint-type.default-hostname.label',\n            value: 'Default'\n          },\n          {\n            label: 'com.bmc.arsys.rx.client.admin.web-api-connections.endpoint-type.custom.label',\n            value: 'Custom'\n          }\n        ],\n        placeholder:\n          'com.bmc.arsys.rx.client.admin.web-api-connections.oauth-token-exchange-server-endpoint.placeholder',\n        required: true\n      },\n      {\n        type: 'nameValuePairs',\n        name: 'httpHeaders',\n        label: 'com.bmc.arsys.rx.client.admin.web-api-connections.add-http-headers.label',\n        rxId: 'http-headers',\n        required: true\n      }\n    ]\n  }\n];\n\nconst authServerEndpoints = {\n  default: 'Default',\n  custom: 'Custom'\n};\n\nexport const RX_WEB_API_CONNECTIONS = {\n  recordDefinitionName: 'WebAPI Connection',\n  passwordMask: '********',\n  fieldIds: fieldIds,\n  wizardContext: {\n    wizardSteps,\n    webApiConnection,\n    isEditMode: false\n  },\n  protocolTypeOptions,\n  authTypes,\n  authTypeOptions,\n  authTypeFields,\n  grantTypeOptions,\n  authServerEndpoints\n};\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, OnDestroy } from '@angular/core';\nimport {\n  IWebApiConnectionWizardStep,\n  IWebApiConnection,\n  IWebApiConnectionField,\n  IAuthTypeDetails\n} from '../web-api-connections.interfaces';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { get, some } from 'lodash';\nimport { NgForm } from '@angular/forms';\nimport { RX_WEB_API_CONNECTIONS } from '../web-api-connections.constant';\nimport { ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { RxUrlUtilsService } from '@helix/platform/utils';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-web-api-connection-wizard-step-fields',\n  templateUrl: './web-api-connection-wizard-step-fields.component.html',\n  styleUrls: ['./web-api-connection-wizard-step-fields.component.scss']\n})\nexport class WebApiConnectionWizardStepFieldsComponent implements OnInit, OnDestroy {\n  @Input()\n  step: IWebApiConnectionWizardStep;\n\n  @Input()\n  webApiConnection: IWebApiConnection;\n\n  @ViewChild('configurationForm', { read: NgForm, static: true })\n  configurationForm: NgForm;\n\n  @Output()\n  selectionChange: EventEmitter<object> = new EventEmitter<object>();\n\n  @Output()\n  formStatusChange: EventEmitter<object> = new EventEmitter<object>();\n\n  authEndpoint: string;\n\n  @Input()\n  stepDetails: IWebApiConnection | IAuthTypeDetails;\n\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n  private defaultSelection = this.translateService.instant('com.bmc.arsys.rx.client.common.select.label');\n\n  constructor(private rxUrlUtilsService: RxUrlUtilsService, private translateService: TranslateService) {}\n\n  optionFormatter = (option: RxSelectOption): string => {\n    return get(option, 'label', this.defaultSelection);\n  };\n\n  onRadioButtonChange(event, field: IWebApiConnectionField) {\n    if (event.startsWith(RX_WEB_API_CONNECTIONS.authServerEndpoints.default)) {\n      this.stepDetails[field.name] = null;\n    }\n  }\n\n  getSelectionValue(selectedValue, field: IWebApiConnectionField) {\n    return this.translateService.instant(selectedValue.label, {\n      hostName: this.webApiConnection[field.referenceFieldName]\n    });\n  }\n\n  validate(field: IWebApiConnectionField): (control: AbstractControl) => ValidationErrors | null {\n    return (control: AbstractControl) => {\n      let result = null;\n\n      if (field.isUrl && control.value) {\n        const urls = control.value.split(/[,;]/);\n\n        if (some(urls, (url) => !this.rxUrlUtilsService.isValidUrl(url, true))) {\n          result = { invalidUrl: { message: 'Invalid URL.' } };\n        }\n      }\n\n      return result;\n    };\n  }\n\n  ngOnInit() {\n    this.authEndpoint = this.stepDetails['authServerEndpoint']\n      ? RX_WEB_API_CONNECTIONS.authServerEndpoints.custom\n      : RX_WEB_API_CONNECTIONS.authServerEndpoints.default;\n\n    this.configurationForm.statusChanges.pipe(distinctUntilChanged(), takeUntil(this.destroyed$)).subscribe((value) => {\n      this.step.isValid = value === 'VALID';\n      this.formStatusChange.emit();\n    });\n\n    this.configurationForm.valueChanges.pipe(distinctUntilChanged(), takeUntil(this.destroyed$)).subscribe((value) => {\n      this.step.isDirty = !this.configurationForm.pristine;\n      this.formStatusChange.emit();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n","<form [name]=\"step.formName\" #configurationForm=\"ngForm\">\n  <ng-container *ngFor=\"let field of step.fields\">\n    <adapt-rx-select\n      [name]=\"field.name\"\n      [label]=\"field.label | translate\"\n      class=\"d-block form-group\"\n      rx-id=\"field.rxId\"\n      [options]=\"field.selectOptions\"\n      [optionFormatter]=\"optionFormatter\"\n      [(ngModel)]=\"stepDetails[field.name]\"\n      [required]=\"field.required\"\n      *ngIf=\"field.type === 'select'\"\n      [disabled]=\"field.disabled\"\n      (ngModelChange)=\"selectionChange.emit({ selection: $event, fieldName: field.name })\"\n    >\n    </adapt-rx-select>\n\n    <adapt-rx-textfield\n      [name]=\"field.name\"\n      [(ngModel)]=\"stepDetails[field.name]\"\n      [required]=\"field.required\"\n      [attr.rx-id]=\"field.rxId\"\n      [label]=\"field.label | translate\"\n      class=\"d-block form-group\"\n      *ngIf=\"field.type === 'text' || field.type === 'password'\"\n      [isPassword]=\"field.type === 'password'\"\n      [placeholder]=\"field.placeholder\"\n      [rxCustomValidators]=\"validate(field)\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-counter\n      [name]=\"field.name\"\n      [(ngModel)]=\"stepDetails[field.name]\"\n      [required]=\"field.required\"\n      [attr.rx-id]=\"field.rxId\"\n      [label]=\"field.label | translate\"\n      class=\"d-block form-group\"\n      [adaptMin]=\"field.minValue\"\n      [adaptMax]=\"field.maxValue\"\n      *ngIf=\"field.type === 'number' && field.allowIntegerOnly\"\n      [placeholder]=\"field.placeholder\"\n      adaptIntegerNumber\n    >\n    </adapt-rx-counter>\n\n    <adapt-rx-counter\n      [name]=\"field.name\"\n      [(ngModel)]=\"stepDetails[field.name]\"\n      [required]=\"field.required\"\n      [attr.rx-id]=\"field.rxId\"\n      [label]=\"field.label | translate\"\n      class=\"d-block form-group\"\n      [adaptMin]=\"field.minValue\"\n      [adaptMax]=\"field.maxValue\"\n      *ngIf=\"field.type === 'number' && field.allowScientific\"\n      [placeholder]=\"field.placeholder\"\n      adaptScientificNumber\n    >\n    </adapt-rx-counter>\n\n    <rx-name-value-pairs-editor\n      addButtonLabel=\"{{ field.label | translate }}\"\n      *ngIf=\"field.type === 'nameValuePairs'\"\n      [(ngModel)]=\"stepDetails[field.name]\"\n      [name]=\"field.name\"\n    >\n    </rx-name-value-pairs-editor>\n\n    <adapt-rx-radiobutton-group\n      *ngIf=\"field.type === 'radio'\"\n      [(ngModel)]=\"stepDetails[field.name]\"\n      [name]=\"field.name\"\n      [label]=\"field.label | translate\"\n    >\n      <adapt-rx-radiobutton\n        *ngFor=\"let selectionValue of field.selectOptions\"\n        [value]=\"selectionValue.value\"\n        [label]=\"getSelectionValue(selectionValue, field)\"\n      >\n      </adapt-rx-radiobutton>\n    </adapt-rx-radiobutton-group>\n\n    <adapt-rx-radiobutton-group\n      *ngIf=\"field.type === 'serverEndpointRadio'\"\n      [(ngModel)]=\"authEndpoint\"\n      [name]=\"field.name\"\n      [label]=\"field.label | translate\"\n      [tooltip]=\"{\n        iconName: 'question_circle_o',\n        content: field.tooltip | translate,\n        placement: 'auto',\n        popoverMode: true\n      }\"\n      (ngModelChange)=\"onRadioButtonChange($event, field)\"\n    >\n      <adapt-rx-radiobutton\n        *ngFor=\"let selectionValue of field.selectOptions\"\n        [value]=\"selectionValue.value\"\n        [label]=\"getSelectionValue(selectionValue, field)\"\n      >\n      </adapt-rx-radiobutton>\n    </adapt-rx-radiobutton-group>\n\n    <adapt-rx-textfield\n      name=\"url\"\n      *ngIf=\"field.type === 'serverEndpointRadio'\"\n      [disabled]=\"authEndpoint != 'Custom'\"\n      [(ngModel)]=\"stepDetails[field.name]\"\n      [placeholder]=\"field.placeholder | translate\"\n      [required]=\"field.required\"\n      [attr.rx-id]=\"field.rxId\"\n      class=\"d-block form-group\"\n    >\n    </adapt-rx-textfield>\n  </ng-container>\n</form>\n","import { Component } from '@angular/core';\nimport { some } from 'lodash';\nimport { map, take } from 'rxjs/operators';\n\nimport { RxWizardModalComponent } from '@helix/platform/shared/components';\n\n@Component({\n  selector: 'rx-authentication-wizard-step',\n  templateUrl: './authentication-wizard-step.component.html'\n})\nexport class AuthenticationWizardStepComponent {\n  context$ = this.rxWizardModalComponent.context$;\n\n  isSaveButtonDisabled$ = this.rxWizardModalComponent.context$.pipe(\n    map((context) => {\n      const isDirty = some(context.wizardSteps, { isDirty: true });\n\n      return some(context.wizardSteps, { isValid: false }) || !isDirty;\n    })\n  );\n\n  constructor(private rxWizardModalComponent: RxWizardModalComponent) {}\n\n  onFormStatusChange(): void {\n    this.isSaveButtonDisabled$.pipe(take(1)).subscribe((isSaveButtonDisabled) => {\n      if (isSaveButtonDisabled) {\n        this.rxWizardModalComponent.api.disableFinishButton();\n      } else {\n        this.rxWizardModalComponent.api.enableFinishButton();\n      }\n    });\n  }\n}\n","<ng-container *ngIf=\"context$ | async as context\">\n  <rx-web-api-connection-wizard-step-fields\n    [step]=\"context.wizardSteps[1]\"\n    [stepDetails]=\"context.webApiConnection.authTypeDetails\"\n    (formStatusChange)=\"onFormStatusChange()\"\n    [webApiConnection]=\"context.webApiConnection\"\n  >\n  </rx-web-api-connection-wizard-step-fields>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { find, isEqual, cloneDeep } from 'lodash';\nimport { take } from 'rxjs/operators';\n\nimport { RxWizardModalComponent } from '@helix/platform/shared/components';\nimport { RX_WEB_API_CONNECTIONS } from '../web-api-connections.constant';\nimport { IAuthTypeDetails } from '../web-api-connections.interfaces';\n\n@Component({\n  selector: 'rx-general-wizard-step',\n  templateUrl: './general-wizard-step.component.html'\n})\nexport class GeneralWizardStepComponent implements OnInit {\n  context$ = this.rxWizardModalComponent.context$;\n  savedAuthTypeCode: RxSelectOption;\n  savedAuthTypeDetails: IAuthTypeDetails;\n\n  constructor(private rxWizardModalComponent: RxWizardModalComponent) {}\n\n  ngOnInit(): void {\n    this.context$.pipe(take(1)).subscribe((context) => {\n      if (context.isEditMode) {\n        this.rxWizardModalComponent.api.enableNextButton();\n        this.savedAuthTypeCode = context.webApiConnection.authTypeCode;\n        this.savedAuthTypeDetails = context.webApiConnection.authTypeDetails;\n      }\n    });\n  }\n\n  onSelectionChange(selection: RxSelectOption): void {\n    this.context$.pipe(take(1)).subscribe((context) => {\n      if (selection['fieldName'] === 'authTypeCode') {\n        const authTypeId = selection['selection'][0].id;\n        const newWizardSteps = cloneDeep(context.wizardSteps);\n\n        newWizardSteps[1].fields = find(RX_WEB_API_CONNECTIONS.authTypeFields, { id: authTypeId }).fields;\n\n        this.rxWizardModalComponent.api.updateContext({\n          wizardSteps: newWizardSteps\n        });\n\n        if (this.savedAuthTypeCode && isEqual(selection['selection'][0], this.savedAuthTypeCode[0])) {\n          this.rxWizardModalComponent.api.updateContext({\n            webApiConnection: this.savedAuthTypeDetails\n          });\n        } else {\n          const newWebApiConnection = cloneDeep(context.webApiConnection);\n\n          newWebApiConnection.authTypeDetails = {\n            username: '',\n            credentials: '',\n            httpHeaders: [],\n            queryParams: [],\n            tokenFetchMechanism: 0,\n            additionalFormParams: [],\n            grantType: [RX_WEB_API_CONNECTIONS.grantTypeOptions[0]]\n          };\n\n          this.rxWizardModalComponent.api.updateContext({\n            webApiConnection: newWebApiConnection\n          });\n        }\n      }\n    });\n  }\n\n  onFormStatusChange(): void {\n    this.rxWizardModalComponent.context$.pipe(take(1)).subscribe((context) => {\n      if (context.wizardSteps[0].isValid) {\n        this.rxWizardModalComponent.api.enableNextButton();\n\n        if (context.wizardSteps[0].isDirty && context.isEditMode) {\n          this.rxWizardModalComponent.api.enableFinishButton();\n        }\n      } else {\n        this.rxWizardModalComponent.api.disableNextButton();\n      }\n\n      if (context.wizardSteps[0].isDirty) {\n        this.rxWizardModalComponent.api.markDirty();\n      }\n    });\n  }\n}\n","<ng-container *ngIf=\"context$ | async as context\">\n  <rx-web-api-connection-wizard-step-fields\n    [step]=\"context.wizardSteps[0]\"\n    [stepDetails]=\"context.webApiConnection\"\n    (selectionChange)=\"onSelectionChange($event)\"\n    (formStatusChange)=\"onFormStatusChange()\"\n    [webApiConnection]=\"context.webApiConnection\"\n  >\n  </rx-web-api-connection-wizard-step-fields>\n</ng-container>\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { EMPTY, forkJoin, Observable } from 'rxjs';\nimport { IAuthTypeDetails, IWebApiConnection } from './web-api-connections.interfaces';\nimport { castArray, cloneDeep } from 'lodash';\nimport { IRxRecordGridApi, RxViewActionUtilsService } from '@helix/platform/view/api';\nimport { RX_WEB_API_CONNECTIONS } from './web-api-connections.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxWebAPIConnectionsService {\n  private path = '/api/rx/application/webapi/connection';\n\n  constructor(\n    private httpClient: HttpClient,\n    private injector: Injector,\n    private rxViewActionUtilsService: RxViewActionUtilsService\n  ) {}\n\n  private getAuthTypeDetails(webApiConnection: IWebApiConnection): IAuthTypeDetails {\n    const authTypeDetails: IAuthTypeDetails = cloneDeep(webApiConnection.authTypeDetails);\n\n    if (authTypeDetails.credentials === RX_WEB_API_CONNECTIONS.passwordMask) {\n      authTypeDetails.credentials = null;\n    }\n\n    delete authTypeDetails.grantType;\n\n    return authTypeDetails;\n  }\n\n  save(webApiConnection: IWebApiConnection, id: string): Observable<any> {\n    return this.httpClient.put(this.getUrl(id), this.getWebApiConnectionToSave(webApiConnection));\n  }\n\n  create(webApiConnection: IWebApiConnection): Observable<any> {\n    return this.httpClient.post(this.path, this.getWebApiConnectionToSave(webApiConnection));\n  }\n\n  private getWebApiConnectionToSave(webApiConnection: IWebApiConnection): IWebApiConnection {\n    return {\n      authTypeCode: webApiConnection.authTypeCode[0].id,\n      authTypeDetails: this.getAuthTypeDetails(webApiConnection),\n      hostname: webApiConnection.hostname,\n      name: webApiConnection.name,\n      port: webApiConnection.port,\n      secure: webApiConnection.secure[0].id\n    };\n  }\n\n  private getUrl(id: string): string {\n    return `${this.path}/${encodeURIComponent(id)}`;\n  }\n\n  private delete(id: string): Observable<any> {\n    return this.httpClient.delete(this.getUrl(id));\n  }\n\n  deleteRecords(recordsApi: IRxRecordGridApi): Observable<any> {\n    const records = castArray(recordsApi.getSelectedRows());\n    const recordIds = this.rxViewActionUtilsService.extractRecordIds(records);\n\n    if (recordIds.length) {\n      const deleteObservables = recordIds.map((recordId) => this.delete(recordId));\n\n      return forkJoin(deleteObservables);\n    }\n\n    return EMPTY;\n  }\n}\n","import { Component, ComponentFactoryResolver, TemplateRef, ViewChild } from '@angular/core';\nimport { RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { DataCellTemplateParams } from '@bmc-ux/adapt-table/public-api';\nimport { IRecordDefinition, RX_RECORD_DEFINITION, RxRecordInstanceService } from '@helix/platform/record/api';\nimport { RxCurrentUserService, RxNotificationService } from '@helix/platform/shared/api';\nimport { RxWizardService } from '@helix/platform/shared/components';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport {\n  IRecordGridActionButton,\n  IRecordGridColumn,\n  IRecordGridConfig,\n  RecordGridComponent\n} from '@helix/platform/view/components';\nimport { cloneDeep, find, isObject } from 'lodash';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthenticationWizardStepComponent } from './authentication-wizard-step/authentication-wizard-step.component';\nimport { GeneralWizardStepComponent } from './general-wizard-step/general-wizard-step.component';\nimport { RX_WEB_API_CONNECTIONS } from './web-api-connections.constant';\nimport { IWebApiConnectionWizardContext } from './web-api-connections.interfaces';\nimport { RxWebAPIConnectionsService } from './web-api-connections.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-web-api-connections',\n  templateUrl: './web-api-connections.component.html'\n})\nexport class WebApiConnectionsAdminComponent {\n  gridConfig$: Observable<IRecordGridConfig>;\n\n  private currentRecordInstanceId: string;\n  private isNewConfiguration: boolean;\n  private webApiConnectionWizardContext: IWebApiConnectionWizardContext;\n\n  @ViewChild('webApiConnectionsRecordGrid', { static: false })\n  webApiConnectionsRecordGrid: RecordGridComponent;\n\n  @ViewChild('portCellTemplate', { static: true })\n  portCellTemplate: TemplateRef<DataCellTemplateParams>;\n\n  recordDefinition: IRecordDefinition = {\n    fieldDefinitions: [\n      {\n        id: RX_RECORD_DEFINITION.coreFieldIds.description,\n        resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n      },\n      {\n        id: RX_WEB_API_CONNECTIONS.fieldIds.hostname,\n        resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n      },\n      {\n        id: RX_WEB_API_CONNECTIONS.fieldIds.port,\n        resourceType: RX_RECORD_DEFINITION.resourceTypes.integer\n      },\n      {\n        id: RX_WEB_API_CONNECTIONS.fieldIds.authentication,\n        resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n      },\n      {\n        id: RX_RECORD_DEFINITION.coreFieldIds.id,\n        resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n      }\n    ]\n  };\n\n  constructor(\n    private rxModalService: RxModalService,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxWebAPIConnectionsService: RxWebAPIConnectionsService,\n    private rxNotificationService: RxNotificationService,\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxWizardService: RxWizardService,\n    private translateService: TranslateService\n  ) {\n    this.gridConfig$ = new Observable((observer) => {\n      observer.next({\n        recordDefinitionName: RX_WEB_API_CONNECTIONS.recordDefinitionName,\n        columns: this.getWebApiConnectionColumns(),\n        actionButtons: this.getActionButtons(),\n        getRecordDefinition: () => of(this.recordDefinition),\n        styles: 'flex-fill'\n      });\n\n      observer.complete();\n    });\n  }\n\n  save(): void {\n    const saveConnection$ = this.isNewConfiguration\n      ? this.rxWebAPIConnectionsService.create(this.webApiConnectionWizardContext.webApiConnection)\n      : this.rxWebAPIConnectionsService.save(\n          this.webApiConnectionWizardContext.webApiConnection,\n          this.currentRecordInstanceId\n        );\n\n    saveConnection$\n      .pipe(\n        catchError((error) => {\n          this.rxNotificationService.addErrorMessage(\n            this.translateService.instant('com.bmc.arsys.rx.client.admin.web-api-connections.failed-to-save.message')\n          );\n\n          return throwError(error);\n        })\n      )\n      .subscribe((response) => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.admin.web-api-connections.connection-saved.message')\n        );\n        this.webApiConnectionsRecordGrid.api.refresh().subscribe();\n      });\n  }\n\n  private getActionButtons(): IRecordGridActionButton[] {\n    return [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n        style: 'tertiary',\n        iconCls: 'trash',\n        actions: [\n          {\n            name: () => {\n              {\n                this.rxModalService\n                  .confirm({\n                    title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n                    modalStyle: RX_MODAL.modalStyles.warning,\n                    message: this.translateService.instant(\n                      'com.bmc.arsys.rx.client.admin.web-api-connections.delete-confirmation.message'\n                    )\n                  })\n                  .then((result: boolean) => {\n                    if (result)\n                      this.rxWebAPIConnectionsService\n                        .deleteRecords(this.webApiConnectionsRecordGrid.api)\n                        .subscribe((response) => {\n                          this.rxNotificationService.addSuccessMessage(\n                            this.translateService.instant(\n                              'com.bmc.arsys.rx.client.admin.web-api-connections.deleted.message'\n                            )\n                          );\n                          this.webApiConnectionsRecordGrid.api.refresh().subscribe();\n                        });\n                  });\n              }\n            }\n          }\n        ]\n      }\n    ];\n  }\n\n  private getWebApiConnectionColumns(): IRecordGridColumn[] {\n    return [\n      {\n        fieldId: `${RX_RECORD_DEFINITION.coreFieldIds.description}`,\n        index: 0,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n        clickable: true,\n        actions: [\n          {\n            name: (previousActionResult: any, lastActionRow: IRowDataItem) => this.editWebApiConnection(lastActionRow)\n          }\n        ]\n      },\n      {\n        fieldId: `${RX_WEB_API_CONNECTIONS.fieldIds.hostname}`,\n        index: 1,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.data-source-connection-properties.host-name.label'\n        )\n      },\n      {\n        fieldId: `${RX_WEB_API_CONNECTIONS.fieldIds.port}`,\n        index: 2,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.data-source-connection-properties.port.label'\n        ),\n        cellTemplate: this.portCellTemplate\n      },\n      {\n        fieldId: `${RX_WEB_API_CONNECTIONS.fieldIds.authentication}`,\n        index: 3,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.data-source-connection-properties.authentication.label'\n        ),\n        visible: false\n      },\n      {\n        fieldId: `${RX_RECORD_DEFINITION.coreFieldIds.id}`,\n        index: 4,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.id.label'),\n        visible: false\n      }\n    ];\n  }\n\n  private resetFields(): void {\n    this.webApiConnectionWizardContext = cloneDeep(RX_WEB_API_CONNECTIONS.wizardContext);\n    this.webApiConnectionWizardContext.webApiConnection.authTypeCode = [RX_WEB_API_CONNECTIONS.authTypeOptions[0]];\n    this.webApiConnectionWizardContext.webApiConnection.secure = [RX_WEB_API_CONNECTIONS.protocolTypeOptions[0]];\n    this.webApiConnectionWizardContext.webApiConnection.authTypeDetails.grantType = [\n      RX_WEB_API_CONNECTIONS.grantTypeOptions[0]\n    ];\n  }\n\n  private openWizard(wizardTitle: string, isEdit: boolean): void {\n    const wizardOptions = {\n      title: wizardTitle,\n      allowFinish: true,\n      finishButtonLabel: this.translateService.instant('com.bmc.arsys.rx.client.common.save.label'),\n      steps: [\n        {\n          id: 'general',\n          name: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n          componentFactory: this.componentFactoryResolver.resolveComponentFactory(GeneralWizardStepComponent)\n        },\n        {\n          id: 'authentication',\n          name: this.translateService.instant(\n            'com.bmc.arsys.rx.client.admin.data-source-connection-properties.authentication.label'\n          ),\n          componentFactory: this.componentFactoryResolver.resolveComponentFactory(AuthenticationWizardStepComponent)\n        }\n      ]\n    };\n\n    this.rxWizardService\n      .open<IWebApiConnectionWizardContext>({\n        context: this.webApiConnectionWizardContext,\n        options: wizardOptions\n      })\n      .then((result) => {\n        if (isObject(result)) {\n          this.save();\n        }\n      });\n  }\n\n  createWebApiConnection(): void {\n    this.resetFields();\n    this.isNewConfiguration = true;\n    this.openWizard(\n      this.translateService.instant('com.bmc.arsys.rx.client.admin.web-api-connections.new-web-api-connection.label'),\n      false\n    );\n  }\n\n  private editWebApiConnection(selectedRecord: IRowDataItem): void {\n    this.resetFields();\n    this.isNewConfiguration = false;\n    this.currentRecordInstanceId = selectedRecord[RX_RECORD_DEFINITION.coreFieldIds.id];\n\n    const currentRecordInstance = this.rxRecordInstanceService.get(\n      RX_WEB_API_CONNECTIONS.recordDefinitionName,\n      selectedRecord[RX_RECORD_DEFINITION.coreFieldIds.id]\n    );\n\n    currentRecordInstance.subscribe((recordInstance) => {\n      const authTypeId = recordInstance.fieldInstances[RX_WEB_API_CONNECTIONS.fieldIds.authType].value;\n      const authTypeOption: RxSelectOption = find(RX_WEB_API_CONNECTIONS.authTypeOptions, { id: authTypeId });\n\n      const credentials = JSON.parse(\n        recordInstance.fieldInstances[RX_WEB_API_CONNECTIONS.fieldIds.authentication].value\n      );\n\n      const protocolId = recordInstance.fieldInstances[RX_WEB_API_CONNECTIONS.fieldIds.protocol].value;\n      const protocolOption: RxSelectOption = find(RX_WEB_API_CONNECTIONS.protocolTypeOptions, { id: protocolId });\n\n      this.webApiConnectionWizardContext.webApiConnection.name =\n        recordInstance.fieldInstances[RX_RECORD_DEFINITION.coreFieldIds.description].value;\n      this.webApiConnectionWizardContext.webApiConnection.hostname =\n        recordInstance.fieldInstances[RX_WEB_API_CONNECTIONS.fieldIds.hostname].value;\n      this.webApiConnectionWizardContext.webApiConnection.port =\n        recordInstance.fieldInstances[RX_WEB_API_CONNECTIONS.fieldIds.port].value;\n      this.webApiConnectionWizardContext.webApiConnection.secure = [protocolOption];\n      this.webApiConnectionWizardContext.webApiConnection.authTypeCode = [authTypeOption];\n      this.webApiConnectionWizardContext.wizardSteps[1].fields = find(RX_WEB_API_CONNECTIONS.authTypeFields, {\n        id: authTypeId\n      }).fields;\n\n      this.webApiConnectionWizardContext.webApiConnection.authTypeDetails.httpHeaders = credentials['httpHeaders'];\n\n      if (authTypeId === RX_WEB_API_CONNECTIONS.authTypes.oAuth2) {\n        this.webApiConnectionWizardContext.webApiConnection.authTypeDetails.authServerEndpoint =\n          credentials['authServerEndpoint'];\n        this.webApiConnectionWizardContext.webApiConnection.authTypeDetails.redirectUri = credentials['redirectUri'];\n        this.webApiConnectionWizardContext.webApiConnection.authTypeDetails.scope = credentials['scope'];\n        this.webApiConnectionWizardContext.webApiConnection.authTypeDetails.tokenPath = credentials['tokenPath'];\n\n        this.webApiConnectionWizardContext.webApiConnection.authTypeDetails.tokenFetchMechanism =\n          credentials['tokenFetchMechanism'];\n\n        this.webApiConnectionWizardContext.webApiConnection.authTypeDetails.additionalFormParams =\n          credentials['additionalFormParams'];\n      }\n\n      if (\n        authTypeId === RX_WEB_API_CONNECTIONS.authTypes.rsso ||\n        authTypeId === RX_WEB_API_CONNECTIONS.authTypes.oAuthTokenExchange\n      ) {\n        this.webApiConnectionWizardContext.webApiConnection.authTypeDetails.loginName = credentials['loginName'];\n        this.webApiConnectionWizardContext.webApiConnection.authTypeDetails.tokenPath = credentials['tokenPath'];\n        this.webApiConnectionWizardContext.webApiConnection.authTypeDetails.authServerEndpoint =\n          credentials['authServerEndpoint'];\n      }\n\n      if (authTypeId === RX_WEB_API_CONNECTIONS.authTypes.oAuthTokenExchange) {\n        this.webApiConnectionWizardContext.webApiConnection.authTypeDetails.resources = credentials['resources'];\n      }\n\n      if (authTypeId === RX_WEB_API_CONNECTIONS.authTypes.custom) {\n        this.webApiConnectionWizardContext.webApiConnection.authTypeDetails.queryParams = credentials['queryParams'];\n      } else {\n        this.webApiConnectionWizardContext.webApiConnection.authTypeDetails.credentials =\n          RX_WEB_API_CONNECTIONS.passwordMask;\n        this.webApiConnectionWizardContext.webApiConnection.authTypeDetails.username = credentials['username'];\n      }\n\n      this.webApiConnectionWizardContext.isEditMode = true;\n      this.openWizard(\n        this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.web-api-connections.edit-web-api-connection.label'\n        ),\n        true\n      );\n    });\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.admin.web-api-connections.header.title' | translate }}\">\n  <button\n    adapt-button\n    type=\"button\"\n    btn-type=\"tertiary\"\n    class=\"d-icon-plus_circle align-self-start\"\n    rx-id=\"new-button\"\n    (click)=\"createWebApiConnection()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.new.label' | translate }}\n  </button>\n  <rx-record-grid rx-id=\"web-api-grid\" #webApiConnectionsRecordGrid [config]=\"gridConfig$\"> </rx-record-grid>\n\n  <ng-template #portCellTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n    {{ dataItem[column.field] }}\n  </ng-template>\n</rx-admin-settings>\n","import { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { WebApiConnectionsAdminComponent } from './web-api-connections.component';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport {\n  AdaptAlertModule,\n  AdaptButtonModule,\n  AdaptRxCounterModule,\n  AdaptRxFormControlModule,\n  AdaptRxRadiobuttonModule,\n  AdaptRxSelectModule,\n  AdaptRxTextfieldModule,\n  AdaptTabsModule\n} from '@bmc-ux/adapt-angular';\nimport { FormsModule } from '@angular/forms';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { RxDirectivesModule, RxNameValuePairsEditorModule } from '@helix/platform/ui-kit';\nimport { WebApiConnectionWizardStepFieldsComponent } from './web-api-connection-wizard-step-fields/web-api-connection-wizard-step-fields.component';\nimport { GeneralWizardStepComponent } from './general-wizard-step/general-wizard-step.component';\nimport { AuthenticationWizardStepComponent } from './authentication-wizard-step/authentication-wizard-step.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [\n    WebApiConnectionsAdminComponent,\n    WebApiConnectionWizardStepFieldsComponent,\n    GeneralWizardStepComponent,\n    AuthenticationWizardStepComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    AdminSettingsModule,\n    RecordGridModule,\n    AdaptAlertModule,\n    AdaptButtonModule,\n    AdaptRxTextfieldModule,\n    AdaptButtonModule,\n    AdaptRxSelectModule,\n    AdaptTabsModule,\n    AdaptRxRadiobuttonModule,\n    AdaptRxFormControlModule,\n    RxNameValuePairsEditorModule,\n    AdaptRxCounterModule,\n    RxDirectivesModule,\n    TranslateModule\n  ],\n  entryComponents: [WebApiConnectionsAdminComponent]\n})\nexport class WebApiConnectionsRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-web-api-connections',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(WebApiConnectionsAdminComponent),\n      name: 'Web API connections',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","export const RX_WEBHOOK_CALLBACK_CONFIGURATION = {\n  recordDefinition: {\n    name: 'Webhook Callback Processor Configuration',\n    fieldIds: {\n      name: 56600,\n      processor: 56601,\n      bundleId: 56602,\n      configMetadata: 56603\n    }\n  }\n};\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IMetadataFieldResponse } from './webhook-callback-configuration.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxWebhookCallbackConfigurationService {\n  private metadataFieldData: Observable<IMetadataFieldResponse> = this.httpClient.get<IMetadataFieldResponse>(\n    '/api/rx/application/webhook/processorsmetadata'\n  );\n\n  constructor(private httpClient: HttpClient) {}\n\n  getMetadataFields(): Observable<IMetadataFieldResponse> {\n    return this.metadataFieldData;\n  }\n}\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { DismissReasons, DockedPanelContext, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport {\n  IRecordDefinition,\n  RecordInstance,\n  RX_RECORD_DEFINITION,\n  RxRecordDefinitionCacheService,\n  RxRecordInstanceService\n} from '@helix/platform/record/api';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { RxJsonParserService } from '@helix/platform/utils';\nimport { TranslateService } from '@ngx-translate/core';\nimport { chain, find, forEach, has } from 'lodash';\nimport {\n  IBundleDescriptor,\n  RxGlobalCacheService,\n  RxNotificationService,\n  RxOverlayService\n} from '@helix/platform/shared/api';\nimport { RX_WEBHOOK_CALLBACK_CONFIGURATION } from '../webhook-callback-configuration.constant';\nimport { IMetadataField } from '../webhook-callback-configuration.interface';\nimport { RxWebhookCallbackConfigurationService } from '../webhook-callback-configuration.service';\n\n@Component({\n  selector: 'rx-webhook-callback-configuration',\n  templateUrl: './webhook-callback-configuration-editor.component.html',\n  styleUrls: ['./webhook-callback-configuration-editor.component.scss']\n})\nexport class WebhookCallbackConfigurationEditorComponent extends RxModalClass implements OnInit {\n  private defaultControls: any = {\n    configurationName: '',\n    bundleId: [],\n    processor: []\n  };\n\n  private recordInstance: RecordInstance;\n\n  metadataFields: IMetadataField[];\n  bundleIdOptions: RxSelectOption[];\n  processorOptions: RxSelectOption[];\n  isEditMode: boolean;\n  callbackUrl: string;\n\n  webhookCallbackConfigurationForm: FormGroup;\n\n  constructor(\n    private dockedPanelContext: DockedPanelContext,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private rxWebhookCallbackConfigurationService: RxWebhookCallbackConfigurationService,\n    private rxOverlayService: RxOverlayService,\n    private rxJsonParserService: RxJsonParserService,\n    private rxNotificationService: RxNotificationService,\n    private formBuilder: FormBuilder,\n    private translateService: TranslateService,\n    protected injector: Injector\n  ) {\n    super(dockedPanelContext, injector);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.webhookCallbackConfigurationForm = this.formBuilder.group(this.defaultControls);\n    this.isEditMode = this.dockedPanelContext.getData().isEditMode;\n\n    this.rxGlobalCacheService.getBundleDescriptors().subscribe((bundleDescriptors: IBundleDescriptor[]) => {\n      this.bundleIdOptions = bundleDescriptors\n        .filter((bundleDescriptor) => bundleDescriptor.isApplication)\n        .sort((a: IBundleDescriptor, b: IBundleDescriptor) => a.friendlyName.localeCompare(b.friendlyName))\n        .map((bundleDescriptor: IBundleDescriptor) => ({\n          displayValue: bundleDescriptor.friendlyName,\n          value: bundleDescriptor.id\n        }));\n    });\n\n    this.rxRecordDefinitionCacheService\n      .getRecordDefinition(RX_WEBHOOK_CALLBACK_CONFIGURATION.recordDefinition.name)\n      .subscribe((recordDefinition: IRecordDefinition) => {\n        this.processorOptions = chain(recordDefinition.fieldDefinitions)\n          .find({\n            id: RX_WEBHOOK_CALLBACK_CONFIGURATION.recordDefinition.fieldIds.processor\n          })\n          .get('optionNamesById')\n          .map((optionName, optionId) => ({\n            displayValue: optionName,\n            value: optionId\n          }))\n          .value();\n      });\n\n    if (!this.isEditMode) {\n      this.rxRecordInstanceService\n        .getNew(RX_WEBHOOK_CALLBACK_CONFIGURATION.recordDefinition.name)\n        .subscribe((recordInstance: RecordInstance) => (this.recordInstance = recordInstance));\n    } else {\n      this.rxRecordInstanceService\n        .get(RX_WEBHOOK_CALLBACK_CONFIGURATION.recordDefinition.name, this.dockedPanelContext.getData().recordId)\n        .subscribe((recordInstance: RecordInstance) => {\n          this.recordInstance = recordInstance;\n          this.setFormControlValues();\n\n          this.callbackUrl = [\n            location.origin,\n            'api/rx/application/webhook_callback',\n            this.recordInstance.fieldInstances[RX_RECORD_DEFINITION.coreFieldIds.id].value,\n            this.rxOverlayService.getCurrentOverlayContext().tenantId\n          ].join('/');\n\n          this.metadataFields = this.rxJsonParserService.tryParseJson(\n            this.recordInstance.fieldInstances[\n              RX_WEBHOOK_CALLBACK_CONFIGURATION.recordDefinition.fieldIds.configMetadata\n            ].value\n          );\n\n          this.generateMetadataFieldFormControls();\n        });\n    }\n  }\n\n  isDirty(): boolean {\n    return this.webhookCallbackConfigurationForm.dirty;\n  }\n\n  private setFormControlValues(): void {\n    this.webhookCallbackConfigurationForm\n      .get('configurationName')\n      .setValue(\n        this.recordInstance.fieldInstances[RX_WEBHOOK_CALLBACK_CONFIGURATION.recordDefinition.fieldIds.name].value\n      );\n\n    const bundleOption: RxSelectOption = find(this.bundleIdOptions, {\n      value:\n        this.recordInstance.fieldInstances[RX_WEBHOOK_CALLBACK_CONFIGURATION.recordDefinition.fieldIds.bundleId].value\n    });\n\n    this.webhookCallbackConfigurationForm.get('bundleId').setValue([\n      {\n        value: bundleOption.value,\n        displayValue: bundleOption.displayValue\n      }\n    ]);\n\n    const processorOption: RxSelectOption = find(this.processorOptions, {\n      value: String(\n        this.recordInstance.fieldInstances[RX_WEBHOOK_CALLBACK_CONFIGURATION.recordDefinition.fieldIds.processor].value\n      )\n    });\n\n    this.webhookCallbackConfigurationForm.get('processor').setValue([\n      {\n        value: processorOption.value,\n        displayValue: processorOption.displayValue\n      }\n    ]);\n  }\n\n  private removeMetadataFieldFormControls(): void {\n    Object.keys(this.webhookCallbackConfigurationForm.controls).forEach((key) => {\n      if (!has(this.defaultControls, key)) {\n        this.webhookCallbackConfigurationForm.removeControl(key);\n      }\n    });\n  }\n\n  private generateMetadataFieldFormControls(): void {\n    this.metadataFields.forEach((field: IMetadataField) => {\n      this.webhookCallbackConfigurationForm.addControl(field.name, new FormControl(field.value || ''));\n    });\n  }\n\n  loadMetadataFields(): void {\n    this.rxWebhookCallbackConfigurationService.getMetadataFields().subscribe((metadataFieldsByProcessorId) => {\n      this.metadataFields =\n        metadataFieldsByProcessorId[this.webhookCallbackConfigurationForm.get('processor').value[0].value];\n\n      this.removeMetadataFieldFormControls();\n      this.generateMetadataFieldFormControls();\n    });\n  }\n\n  saveConfiguration(): void {\n    this.recordInstance.setFieldValue(\n      RX_WEBHOOK_CALLBACK_CONFIGURATION.recordDefinition.fieldIds.name,\n      this.webhookCallbackConfigurationForm.get('configurationName').value\n    );\n\n    this.recordInstance.setFieldValue(\n      RX_WEBHOOK_CALLBACK_CONFIGURATION.recordDefinition.fieldIds.bundleId,\n      this.webhookCallbackConfigurationForm.get('bundleId').value[0].value\n    );\n\n    this.recordInstance.setFieldValue(\n      RX_WEBHOOK_CALLBACK_CONFIGURATION.recordDefinition.fieldIds.processor,\n      this.webhookCallbackConfigurationForm.get('processor').value[0].value\n    );\n\n    forEach(this.metadataFields, (field: IMetadataField) => {\n      field.value = this.webhookCallbackConfigurationForm.get(field.name).value;\n    });\n\n    this.recordInstance.setFieldValue(\n      RX_WEBHOOK_CALLBACK_CONFIGURATION.recordDefinition.fieldIds.configMetadata,\n      JSON.stringify(this.metadataFields)\n    );\n\n    if (this.isEditMode) {\n      this.rxRecordInstanceService.save(this.recordInstance).subscribe(() => this.successCallback());\n    } else {\n      this.rxRecordInstanceService.create(this.recordInstance).subscribe(() => this.successCallback());\n    }\n  }\n\n  private successCallback(): void {\n    this.rxNotificationService.addSuccessMessage(\n      this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.webhook-callback-configuration.configurations-saved.message'\n      )\n    );\n    this.dockedPanelContext.close(null);\n  }\n\n  optionFormatter(option: RxSelectOption): string {\n    return option.displayValue;\n  }\n\n  cancel(): void {\n    this.dockedPanelContext.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"dp-body\">\n  <form [formGroup]=\"webhookCallbackConfigurationForm\">\n    <adapt-rx-textfield\n      class=\"form-group d-block\"\n      rx-id=\"configuration-name\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.webhook-callback-configuration.configuration-name.label' | translate }}\"\n      formControlName=\"configurationName\"\n      required=\"true\"\n    >\n    </adapt-rx-textfield>\n\n    <adapt-rx-select\n      class=\"form-group d-block\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.webhook-callback-configuration.bundle-name.label' | translate }}\"\n      rx-id=\"bundle-name\"\n      formControlName=\"bundleId\"\n      [options]=\"bundleIdOptions\"\n      [optionFormatter]=\"optionFormatter\"\n      required=\"true\"\n    >\n    </adapt-rx-select>\n\n    <adapt-rx-select\n      class=\"form-group d-block\"\n      label=\"{{ 'com.bmc.arsys.rx.client.admin.webhook-callback-configuration.processor.label' | translate }}\"\n      rx-id=\"processor\"\n      formControlName=\"processor\"\n      [options]=\"processorOptions\"\n      [optionFormatter]=\"optionFormatter\"\n      required=\"true\"\n      (onSelectionChange)=\"loadMetadataFields()\"\n    >\n    </adapt-rx-select>\n\n    <adapt-rx-textfield\n      class=\"form-group d-block\"\n      *ngFor=\"let field of metadataFields\"\n      label=\"{{ field.name }}\"\n      [isPassword]=\"field.secure\"\n      formControlName=\"{{ field.name }}\"\n      required=\"true\"\n    >\n    </adapt-rx-textfield>\n\n    <div class=\"form-group\">\n      <label class=\"form-control-label\">{{\n        'com.bmc.arsys.rx.client.admin.webhook-callback-configuration.callback-url.label' | translate\n      }}</label>\n\n      <div class=\"callback-url bg-secondary p-1\" *ngIf=\"isEditMode\">\n        {{ callbackUrl }}\n      </div>\n\n      <adapt-alert\n        *ngIf=\"!isEditMode\"\n        [config]=\"{\n          content: 'com.bmc.arsys.rx.client.admin.webhook-callback-configuration.url-alert.message' | translate,\n          type: 'inline',\n          variant: 'info'\n        }\"\n      ></adapt-alert>\n    </div>\n  </form>\n</div>\n\n<div class=\"dp-footer\">\n  <button\n    type=\"button\"\n    adapt-button\n    btn-type=\"primary\"\n    rx-id=\"save-button\"\n    class=\"mr-2\"\n    [disabled]=\"webhookCallbackConfigurationForm.pristine || webhookCallbackConfigurationForm.invalid\"\n    (click)=\"saveConfiguration()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button type=\"button\" adapt-button (click)=\"cancel()\" btn-type=\"secondary\" rx-id=\"cancel-button\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { RX_RECORD_DEFINITION, RxRecordInstanceService } from '@helix/platform/record/api';\nimport { RxNotificationService } from '@helix/platform/shared/api';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport {\n  IRecordGridColumn,\n  IRecordGridConfig,\n  RecordGridComponent,\n  RowSelectionMode\n} from '@helix/platform/view/components';\nimport { map, noop } from 'lodash';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { WebhookCallbackConfigurationEditorComponent } from './webhook-callback-configuration-editor/webhook-callback-configuration-editor.component';\nimport { RX_WEBHOOK_CALLBACK_CONFIGURATION } from './webhook-callback-configuration.constant';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-admin-webhook-callback-configuration',\n  templateUrl: './webhook-callback-configuration.component.html'\n})\nexport class WebhookCallbackConfigurationAdminComponent implements OnInit {\n  gridConfig: Observable<IRecordGridConfig>;\n\n  @ViewChild('grid', { static: true })\n  grid: RecordGridComponent;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private rxModalService: RxModalService,\n    private rxNotificationService: RxNotificationService,\n    private rxRecordInstanceService: RxRecordInstanceService,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit(): void {\n    this.gridConfig = of({\n      actionButtons: [\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n          style: 'tertiary',\n          icon: 'trash',\n          actions: [\n            {\n              name: () => this.deleteConfigurations()\n            }\n          ]\n        }\n      ],\n      recordDefinitionName: RX_WEBHOOK_CALLBACK_CONFIGURATION.recordDefinition.name,\n      enableRowSelection: RowSelectionMode.Multiple,\n      columns: this.getColumns(),\n      styles: 'flex-fill'\n    });\n  }\n\n  private editConfiguration(selectedRecord: IRowDataItem): void {\n    this.openDockedPanel(true, selectedRecord[RX_RECORD_DEFINITION.coreFieldIds.id]);\n  }\n\n  createConfiguration(): void {\n    this.openDockedPanel(false);\n  }\n\n  private deleteConfigurations(): void {\n    this.rxModalService\n      .confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.webhook-callback-configuration.delete-confirmation.message'\n        )\n      })\n      .then((result: boolean) => {\n        if (result) {\n          const deleteRequests$: Observable<any>[] = [];\n\n          map(this.grid.api.getSelectedRows(), (record) => {\n            deleteRequests$.push(\n              this.rxRecordInstanceService.delete(\n                RX_WEBHOOK_CALLBACK_CONFIGURATION.recordDefinition.name,\n                record[RX_RECORD_DEFINITION.coreFieldIds.id]\n              )\n            );\n          });\n\n          forkJoin(deleteRequests$).subscribe(() => {\n            this.rxNotificationService.addSuccessMessage(\n              this.translateService.instant(\n                'com.bmc.arsys.rx.client.admin.webhook-callback-configuration.configurations-deleted.message'\n              )\n            );\n            this.grid.api.refresh().subscribe();\n          });\n        }\n      });\n  }\n\n  private getColumns(): IRecordGridColumn[] {\n    return [\n      {\n        index: 0,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n        fieldId: String(RX_WEBHOOK_CALLBACK_CONFIGURATION.recordDefinition.fieldIds.name),\n        clickable: true,\n        actions: [\n          {\n            name: (previousAction: any, selectedRow: IRowDataItem) => {\n              this.editConfiguration(selectedRow);\n            }\n          }\n        ]\n      },\n      {\n        index: 1,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.webhook-callback-configuration.application.label'\n        ),\n        fieldId: String(RX_WEBHOOK_CALLBACK_CONFIGURATION.recordDefinition.fieldIds.processor)\n      },\n      {\n        index: 2,\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.webhook-callback-configuration.created-date.label'\n        ),\n        fieldId: String(RX_RECORD_DEFINITION.coreFieldIds.createdDate)\n      }\n    ];\n  }\n\n  private openDockedPanel(isEditMode: boolean, recordId?: boolean): Promise<any> {\n    return this.rxModalService\n      .openDockedPanel({\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.webhook-callback-configuration.header.title'\n        ),\n        content: WebhookCallbackConfigurationEditorComponent,\n        data: {\n          isEditMode,\n          recordId\n        }\n      })\n      .then(() => {\n        this.grid.api.refresh().subscribe();\n      })\n      .catch(noop);\n  }\n}\n","<rx-admin-settings\n  header=\"{{ 'com.bmc.arsys.rx.client.admin.webhook-callback-configuration.header.title' | translate }}\"\n>\n  <button\n    type=\"button\"\n    adapt-button\n    btn-type=\"tertiary\"\n    class=\"d-icon-plus_circle align-self-start\"\n    rx-id=\"new-configuration-button\"\n    (click)=\"this.createConfiguration()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.new.label' | translate }}\n  </button>\n\n  <rx-record-grid #grid [config]=\"gridConfig\"></rx-record-grid>\n</rx-admin-settings>\n","import { CommonModule } from '@angular/common';\nimport { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { WebhookCallbackConfigurationEditorComponent } from './webhook-callback-configuration-editor/webhook-callback-configuration-editor.component';\nimport { WebhookCallbackConfigurationAdminComponent } from './webhook-callback-configuration.component';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport {\n  AdaptAlertModule,\n  AdaptButtonModule,\n  AdaptRxSelectModule,\n  AdaptRxTextfieldModule\n} from '@bmc-ux/adapt-angular';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [WebhookCallbackConfigurationAdminComponent, WebhookCallbackConfigurationEditorComponent],\n  imports: [\n    CommonModule,\n    AdminSettingsModule,\n    RecordGridModule,\n    AdaptButtonModule,\n    ReactiveFormsModule,\n    AdaptRxTextfieldModule,\n    AdaptRxSelectModule,\n    AdaptAlertModule,\n    TranslateModule\n  ],\n  entryComponents: [WebhookCallbackConfigurationAdminComponent]\n})\nexport class WebhookCallbackConfigurationRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-admin-webhook-callback-configuration',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(\n        WebhookCallbackConfigurationAdminComponent\n      ),\n      name: 'Webhook callback configuration',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { IDataPageResult } from '@helix/platform/shared/api';\nimport { forkJoin, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ISearchFilter } from './search-filter.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxSearchFiltersService {\n  constructor(private httpClient: HttpClient) {}\n\n  private readonly apiPath: string = '/api/com.bmc.dsm.chatbot/comaround';\n\n  getSearchFilters(): Observable<IDataPageResult<ISearchFilter>> {\n    return this.httpClient\n      .get<ISearchFilter[]>(`${this.apiPath}/search-filters`)\n      .pipe(map((items) => ({ data: items, totalSize: items.length })));\n  }\n\n  deleteSearchFilters(ids: string[]): Observable<any> {\n    return forkJoin(ids.map((id) => this.httpClient.delete<void>(`${this.apiPath}/search-filters/${id}`)));\n  }\n\n  createSearchFilter(filter: ISearchFilter): Observable<any> {\n    return this.httpClient.post<ISearchFilter>(`${this.apiPath}/search-filters`, filter);\n  }\n\n  updateSearchFilter(filter: ISearchFilter): Observable<ISearchFilter> {\n    return this.httpClient.put<ISearchFilter>(`${this.apiPath}/search-filters`, filter);\n  }\n\n  getTags(): Observable<string[]> {\n    return this.httpClient.get<string[]>(`${this.apiPath}/api/tags`);\n  }\n}\n","import { ChangeDetectionStrategy, Component, Injector, OnInit } from '@angular/core';\nimport { DismissReasons, DockedPanelContext } from '@bmc-ux/adapt-angular';\nimport { RxSearchFiltersService } from '../search-filters.service';\nimport { RxModalClass, RxModalService, RX_MODAL } from '@helix/platform/ui-kit';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AdaptValidators } from '@bmc-ux/adapt-angular';\nimport { Observable } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map, shareReplay, tap, withLatestFrom } from 'rxjs/operators';\nimport { RxNotificationService } from '@helix/platform/shared/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ISearchFilter } from '../search-filter.interface';\n\n@Component({\n  selector: 'rx-search-filters-editor',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './search-filters-editor.component.html'\n})\nexport class SearchFiltersEditorComponent extends RxModalClass implements OnInit {\n  constructor(\n    private rxSearchFiltersService: RxSearchFiltersService,\n    public dockedPanelContext: DockedPanelContext,\n    protected injector: Injector,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService,\n    private rxModalService: RxModalService\n  ) {\n    super(dockedPanelContext, injector);\n  }\n\n  public readonly tagsOperators: string[] = ['OR', 'AND'];\n  private isEditMode = Boolean(this.dockedPanelContext.getData());\n  private tags$ = this.rxSearchFiltersService.getTags().pipe(shareReplay(1));\n\n  ngOnInit() {\n    if (this.isEditMode) {\n      this.searchFilterEditorFormGroup.setValue({\n        name: this.dockedPanelContext.getData().name,\n        tagsOperator: [this.dockedPanelContext.getData().tagsOperator],\n        tags: this.dockedPanelContext.getData().tags\n      });\n    }\n  }\n\n  searchFilterEditorFormGroup = new FormGroup({\n    name: new FormControl('', AdaptValidators.required()),\n    tagsOperator: new FormControl([], AdaptValidators.required()),\n    tags: new FormControl([], AdaptValidators.required())\n  });\n\n  tagSuggestions = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(200),\n      distinctUntilChanged(),\n      withLatestFrom(this.tags$),\n      map(([term, tags]) => tags.filter((tag) => tag.startsWith(term)))\n    );\n\n  save(): void {\n    const { id } = this.dockedPanelContext.getData() || {};\n    const [tagsOperator] = this.searchFilterEditorFormGroup.value.tagsOperator;\n\n    const filter: ISearchFilter = {\n      id,\n      ...this.searchFilterEditorFormGroup.getRawValue(),\n      tagsOperator\n    };\n\n    const operation = this.isEditMode\n      ? this.rxSearchFiltersService.updateSearchFilter(filter)\n      : this.rxSearchFiltersService.createSearchFilter(filter);\n\n    operation.subscribe(() => {\n      this.close();\n      this.rxNotificationService.addSuccessMessage(\n        this.translateService.instant('com.bmc.arsys.rx.client.common.saved-successfully.message')\n      );\n    });\n  }\n\n  close(): void {\n    this.dockedPanelContext.close(DismissReasons.CLOSE_BTN);\n  }\n\n  cancel(): void {\n    if (this.searchFilterEditorFormGroup.dirty) {\n      this.rxModalService\n        .confirm({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n          modalStyle: RX_MODAL.modalStyles.warning,\n          message: this.translateService.instant('com.bmc.arsys.rx.client.common.unsaved-data.message')\n        })\n        .then((result: boolean) => {\n          if (result) {\n            this.close();\n          }\n        });\n    } else {\n      this.close();\n    }\n  }\n}\n","<div class=\"dp-body\">\n  <form [formGroup]=\"searchFilterEditorFormGroup\">\n    <div class=\"form-group\">\n      <adapt-rx-textfield\n        [formControlName]=\"'name'\"\n        [label]=\"'com.bmc.arsys.rx.client.admin.search-filters-editor.form-control.name.label' | translate\"\n      ></adapt-rx-textfield>\n    </div>\n\n    <div class=\"form-group\">\n      <adapt-rx-select\n        [formControlName]=\"'tagsOperator'\"\n        [options]=\"tagsOperators\"\n        [label]=\"'com.bmc.arsys.rx.client.admin.search-filters-editor.form-control.relationship.label' | translate\"\n        required\n      ></adapt-rx-select>\n    </div>\n\n    <div class=\"form-group\">\n      <adapt-tag-field\n        [formControlName]=\"'tags'\"\n        required\n        [suppressManual]=\"true\"\n        [label]=\"'com.bmc.arsys.rx.client.admin.search-filters-editor.form-control.tags.label' | translate\"\n        placeholder=\"\"\n        [search]=\"tagSuggestions\"\n        [openDropdownOnFocus]=\"true\"\n      ></adapt-tag-field>\n    </div>\n  </form>\n</div>\n\n<div class=\"dp-footer\">\n  <button\n    class=\"btn btn-primary mr-2\"\n    (click)=\"save()\"\n    [disabled]=\"this.searchFilterEditorFormGroup.invalid || !this.searchFilterEditorFormGroup.dirty\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button class=\"btn btn-secondary\" (click)=\"cancel()\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n","import { Component, OnInit, ViewChild, TemplateRef, ChangeDetectionStrategy } from '@angular/core';\nimport { BaseViewComponent } from '@helix/platform/view/runtime';\nimport { AdaptDockedPanelService } from '@bmc-ux/adapt-angular';\nimport { DataCellTemplateParams } from '@bmc-ux/adapt-table';\nimport { ISearchFilter } from './search-filter.interface';\n\nimport {\n  IRecordGridActionButton,\n  IRecordGridColumn,\n  IRecordGridConfig,\n  RecordGridComponent,\n  RecordGridFilterMode,\n  RowSelectionMode\n} from '@helix/platform/view/components';\n\nimport { Observable, of } from 'rxjs';\nimport { IRecordDefinition, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxSearchFiltersService } from './search-filters.service';\nimport { IRowDataItem } from '@helix/platform/view/api';\nimport { SearchFiltersEditorComponent } from './search-filters-editor/search-filters-editor.component';\nimport { RxModalService, RX_MODAL } from '@helix/platform/ui-kit';\nimport { RxNotificationService } from '@helix/platform/shared/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { noop } from 'lodash';\n\n@Component({\n  selector: 'rx-search-filters',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './search-filters.component.html'\n})\nexport class RxSearchFiltersComponent extends BaseViewComponent implements OnInit {\n  constructor(\n    private rxModalService: RxModalService,\n    private rxNotificationService: RxNotificationService,\n    private adaptDockedPanelService: AdaptDockedPanelService,\n    private rxSearchFiltersService: RxSearchFiltersService,\n    private translateService: TranslateService\n  ) {\n    super();\n  }\n\n  @ViewChild(RecordGridComponent, { static: true })\n  grid: RecordGridComponent;\n\n  @ViewChild('tagsTemplate', { static: true })\n  tagsTemplate: TemplateRef<DataCellTemplateParams>;\n\n  public recordGridConfig$: Observable<IRecordGridConfig>;\n  public searchFilters: ISearchFilter[] = [];\n\n  ngOnInit() {\n    this.initializeRecordGrid();\n  }\n\n  private initializeRecordGrid(): void {\n    const gridColumns: IRecordGridColumn[] = [\n      {\n        fieldId: 'id',\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.search-filters.grid.column.id.title'),\n        visible: false\n      },\n      {\n        fieldId: 'name',\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.search-filters.grid.column.search-filter-name.title'\n        ),\n        clickable: true,\n        actions: [\n          {\n            name: (previousActionResult: any, rowDataItem: IRowDataItem) => {\n              this.openEditor(rowDataItem);\n            }\n          }\n        ]\n      },\n      {\n        fieldId: 'tagsOperator',\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.search-filters.grid.column.relationship.title'\n        )\n      },\n      {\n        fieldId: 'tags',\n        title: this.translateService.instant('com.bmc.arsys.rx.client.admin.search-filters.grid.column.tags.title'),\n        cellTemplate: this.tagsTemplate\n      }\n    ];\n\n    const gridRecordDefinition: IRecordDefinition = {\n      fieldDefinitions: [\n        {\n          id: 'id',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'name',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'tagsOperator',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        },\n        {\n          id: 'tags',\n          resourceType: RX_RECORD_DEFINITION.resourceTypes.character\n        }\n      ]\n    };\n\n    const actionButtons: IRecordGridActionButton[] = [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.delete.label'),\n        style: 'tertiary',\n        iconCls: 'trash',\n        actions: [{ name: () => this.deleteSearchFilters() }]\n      }\n    ];\n\n    this.recordGridConfig$ = of({\n      columns: gridColumns,\n      emptyStateLabelText: this.translateService.instant(\n        'com.bmc.arsys.rx.client.admin.search-filters.grid.empty-state.label'\n      ),\n      enableRowSelection: RowSelectionMode.Multiple,\n      enableFiltering: false,\n      recordIdField: 'id',\n      styles: 'flex-fill',\n      useExternalFiltering: false,\n      getRecordDefinition: () => of(gridRecordDefinition),\n      getData: () => this.rxSearchFiltersService.getSearchFilters(),\n      actionButtons,\n      filterMode: RecordGridFilterMode.Basic\n    });\n  }\n\n  private deleteSearchFilters(): void {\n    const searchFilterIds = this.grid.api.getSelectedRows().map((row) => row.id as string);\n\n    this.rxModalService\n      .confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.translateService.instant(\n          'com.bmc.arsys.rx.client.admin.search-filters.delete-confirmation.message'\n        )\n      })\n      .then((result: boolean) => {\n        if (result) {\n          this.rxSearchFiltersService.deleteSearchFilters(searchFilterIds).subscribe(() => {\n            this.rxNotificationService.addSuccessMessage(\n              this.translateService.instant('com.bmc.arsys.rx.client.admin.search-filters.delete-success.message')\n            );\n            this.grid.api.refresh().subscribe();\n          });\n        }\n      });\n  }\n\n  openEditor(data?: IRowDataItem): void {\n    this.adaptDockedPanelService\n      .open({\n        title: this.translateService.instant(\n          data\n            ? 'com.bmc.arsys.rx.client.admin.search-filters-editor.edit.title'\n            : 'com.bmc.arsys.rx.client.admin.search-filters-editor.new.title'\n        ),\n        content: SearchFiltersEditorComponent,\n        data: data\n      })\n      .then(() => {\n        this.grid.api.refresh().subscribe();\n      })\n      .catch(noop);\n  }\n}\n","<rx-admin-settings header=\"{{ 'com.bmc.arsys.rx.client.admin.search-filters.header.label' | translate }}\">\n  <div>\n    <button adapt-button type=\"button\" btn-type=\"tertiary\" (click)=\"openEditor()\">\n      <span class=\"d-icon-plus_circle\"></span>\n      {{ 'com.bmc.arsys.rx.client.admin.search-filters.new-search-filter.button.label' | translate }}\n    </button>\n  </div>\n\n  <rx-record-grid class=\"mt-2 h-100\" [config]=\"recordGridConfig$\"></rx-record-grid>\n</rx-admin-settings>\n\n<ng-template #tagsTemplate let-dataItem=\"dataItem\">\n  <div class=\"d-flex flex-row flex-wrap\">\n    <ng-container *ngFor=\"let tag of dataItem.tags\">\n      <adapt-tag [type]=\"'active'\" [removable]=\"false\">\n        {{ tag | truncate: 10 }}\n      </adapt-tag>\n    </ng-container>\n  </div>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n  AdaptButtonModule,\n  AdaptMetatagModule,\n  AdaptRxFormControlModule,\n  AdaptRxSelectModule,\n  AdaptRxTextfieldModule,\n  AdaptTagModule,\n  AdaptTruncatePipeModule\n} from '@bmc-ux/adapt-angular';\n\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { AdminSettingsModule } from '@helix/platform/shared/components';\nimport { RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SearchFiltersEditorComponent } from './search-filters-editor/search-filters-editor.component';\nimport { RxSearchFiltersComponent } from './search-filters.component';\n\n@NgModule({\n  declarations: [RxSearchFiltersComponent, SearchFiltersEditorComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    AdaptButtonModule,\n    AdaptMetatagModule,\n    AdaptRxFormControlModule,\n    AdaptRxSelectModule,\n    AdaptRxTextfieldModule,\n    AdaptTagModule,\n    AdaptTruncatePipeModule,\n    AdminSettingsModule,\n    RecordGridModule\n  ],\n  exports: [RxSearchFiltersComponent],\n  entryComponents: [RxSearchFiltersComponent]\n})\nexport class SearchFiltersRegistrationModule {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService\n  ) {\n    rxViewComponentRegistryService.register({\n      type: 'rx-search-filters',\n      componentFactory: this.componentFactoryResolver.resolveComponentFactory(RxSearchFiltersComponent),\n      name: 'Search filters',\n      isPageComponent: true,\n      availableInBundles: [RX_APPLICATION.settingsBundleId]\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n  AdaptAccordionModule,\n  AdaptBusyModule,\n  AdaptButtonModule,\n  AdaptDockedPanelModule,\n  AdaptEmptyStateModule,\n  AdaptModalModule,\n  AdaptSidebarModule,\n  AdaptTreeModule\n} from '@bmc-ux/adapt-angular';\nimport { AdminSettingsModule, RxFormBuilderModule } from '@helix/platform/shared/components';\nimport { RxBusyIndicatorModule } from '@helix/platform/ui-kit';\nimport { ViewActionsModule } from '@helix/platform/view/actions';\nimport { RecordGridModule, ViewComponentsModule } from '@helix/platform/view/components';\nimport { RuntimeViewModule } from '@helix/platform/view/runtime';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AdminCommonSettingsBladeComponent } from './admin-common-settings-blade/admin-common-settings-blade.component';\nimport { AdminCommonSettingsEditorComponent } from './admin-common-settings-editor/admin-common-settings-editor.component';\nimport { AdminCommonSettingsComponent } from './admin-common-settings/admin-common-settings.component';\nimport { AdminComponentsRoutingModule } from './admin-components-routing.module';\nimport { AdminSettingsExplorerComponent } from './admin-settings-explorer/admin-settings-explorer.component';\nimport { ApplicationIssuesRegistrationModule } from './application-issues/application-issues-registration.module';\nimport { ApprovalConfigurationRegistrationModule } from './approval-configuration/approval-configuration-registration.module';\nimport { ApprovalNotificationsRegistrationModule } from './approval-notifications/approval-notifications-registration.module';\nimport { BmcServiceCloudAccountRegistrationModule } from './bmc-service-cloud-account/bmc-service-cloud-account-registration.module';\nimport { ChatbotsRegistrationModule } from './chatbots/chatbots-registration.module';\nimport { CognitiveConsumptionRegistrationModule } from './cognitive-consumption/cognitive-consumption-registration.module';\nimport { CognitiveSearchRegistrationModule } from './cognitive-search/cognitive-search-registration.module';\nimport { CognitiveServiceRegistrationModule } from './cognitive-service/cognitive-service-registration.module';\nimport { CognitiveTrainingRegistrationModule } from './cognitive-training/cognitive-training-registration.module';\nimport { ComaroundKnowledgeRegistrationModule } from './comaround-knowledge/comaround-knowledge-registration.module';\nimport { ConnectorMappingRegistrationModule } from './connection-mapping/connector-mapping';\nimport { DataSourceMappingModule } from './connection-mapping/data-source-mapping/data-source-mapping.module';\nimport { WebApiMappingRegistrationModule } from './connection-mapping/web-api-mapping/web-api-mapping-registration.module';\nimport { ConnectorConfigurationRegistrationModule } from './connector-configuration/connector-configuration-registration.module';\nimport { DataSourceConnectionsRegistrationModule } from './data-source-connections/data-source-connections-registration.module';\nimport { EmailProfilesRegistrationModule } from './email-profiles/email-profiles-registration.module';\nimport { FunctionalRolesRegistrationModule } from './functional-roles/functional-roles-registration.module';\nimport { HkmAccessMappingRegistrationModule } from './hkm-access-mapping/hkm-access-mapping-registration.module';\nimport { IframeSecurityRegistrationModule } from './iframe-security/iframe-security-registration.module';\nimport { JitterbitApisRegistrationModule } from './ipaas/jitterbit-apis/jitterbit-apis-registration.module';\nimport { JitterbitConfigurationRegistrationModule } from './ipaas/jitterbit-configuration/jitterbit-configuration-registration.module';\nimport { MulesoftApisRegistrationModule } from './ipaas/mulesoft-apis/mulesoft-apis-registration.module';\nimport { MulesoftConfigurationRegistrationModule } from './ipaas/mulesoft-configuration/mulesoft-configuration-registration.module';\nimport { IssueReportingConfigurationModule } from './issue-reporting-configuration/issue-reporting-configuration-registration.module';\nimport { ManageTenantRegistrationModule } from './manage-tenant/manage-tenant-registration.module';\nimport { OutgoingMailboxStatusRegistrationModule } from './outgoing-mailbox-status/outgoing-mailbox-status-registration.module';\nimport { PermissionsPolicyHeaderRegistrationModule } from './permissions-policy-header/permissions-policy-header-registration.module';\nimport { RealTimeTranslationRegistrationModule } from './real-time-translation';\nimport { RolePermissionsRegistrationModule } from './role-permissions';\nimport { RssoOauthRegistrationModule } from './rsso-oauth/rsso-oauth-registration.module';\nimport { RulePoolManagementRegistrationModule } from './rule-pool-management/rule-pool-management-registration.module';\nimport { ServerInformationRegistrationModule } from './server-information';\nimport { ServerLogsRegistrationModule } from './server-logs/server-logs-registration.module';\nimport { ServicesProviderRegionRegistrationModule } from './services-provider-region';\nimport { RxAdminCommonSettingsService } from './services/admin-common-settings.service';\nimport { SummarizationServiceRegistrationModule } from './summarization-service';\nimport { SummarizationTestingRegistrationModule } from './summarization-testing/summarization-testing-registration.module';\nimport { ToneAnalysisTestingRegistrationModule } from './tone-analysis-testing/tone-analysis-testing-registration.module';\nimport { VirtualChatConfigurationRegistrationModule } from './virtual-chat-configuration/virtual-chat-configuration-registration.module';\nimport { WebApiConnectionsRegistrationModule } from './web-api-connections/web-api-connections-registration.module';\nimport { WebhookCallbackConfigurationRegistrationModule } from './webhook-callback-configuration/webhook-callback-configuration-registration.module';\nimport { SearchFiltersRegistrationModule } from './search-filters';\n\n@NgModule({\n  imports: [\n    AdaptDockedPanelModule,\n    AdaptModalModule,\n    AdaptTreeModule,\n    AdaptEmptyStateModule,\n    AdaptSidebarModule,\n    AdaptButtonModule,\n    AdaptBusyModule.forRoot(),\n    AdaptAccordionModule,\n    BmcServiceCloudAccountRegistrationModule,\n    AdminComponentsRoutingModule,\n    AdminSettingsModule,\n    ApplicationIssuesRegistrationModule,\n    ApprovalConfigurationRegistrationModule,\n    ApprovalNotificationsRegistrationModule,\n    ChatbotsRegistrationModule,\n    CognitiveConsumptionRegistrationModule,\n    CognitiveSearchRegistrationModule,\n    CognitiveServiceRegistrationModule,\n    CognitiveTrainingRegistrationModule,\n    ComaroundKnowledgeRegistrationModule,\n    CommonModule,\n    ConnectorConfigurationRegistrationModule,\n    ConnectorMappingRegistrationModule,\n    DataSourceConnectionsRegistrationModule,\n    DataSourceMappingModule,\n    EmailProfilesRegistrationModule,\n    FormsModule,\n    FunctionalRolesRegistrationModule,\n    IframeSecurityRegistrationModule,\n    IssueReportingConfigurationModule,\n    JitterbitApisRegistrationModule,\n    JitterbitConfigurationRegistrationModule,\n    ManageTenantRegistrationModule,\n    MulesoftApisRegistrationModule,\n    MulesoftConfigurationRegistrationModule,\n    OutgoingMailboxStatusRegistrationModule,\n    RecordGridModule,\n    RolePermissionsRegistrationModule,\n    RulePoolManagementRegistrationModule,\n    RuntimeViewModule,\n    RxFormBuilderModule,\n    RxBusyIndicatorModule,\n    ServerInformationRegistrationModule,\n    ServerLogsRegistrationModule,\n    ServicesProviderRegionRegistrationModule,\n    SummarizationServiceRegistrationModule,\n    SummarizationTestingRegistrationModule,\n    RealTimeTranslationRegistrationModule,\n    RssoOauthRegistrationModule,\n    TranslateModule,\n    VirtualChatConfigurationRegistrationModule,\n    ViewActionsModule,\n    ViewComponentsModule,\n    WebApiMappingRegistrationModule,\n    WebApiConnectionsRegistrationModule,\n    WebhookCallbackConfigurationRegistrationModule,\n    ToneAnalysisTestingRegistrationModule,\n    PermissionsPolicyHeaderRegistrationModule,\n    HkmAccessMappingRegistrationModule,\n    SearchFiltersRegistrationModule\n  ],\n  providers: [RxAdminCommonSettingsService],\n  declarations: [\n    AdminSettingsExplorerComponent,\n    AdminCommonSettingsComponent,\n    AdminCommonSettingsEditorComponent,\n    AdminCommonSettingsBladeComponent\n  ]\n})\nexport class AdminComponentsModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["RX_RECORD_DEFINITION","Validators","SelectFormControlComponent","_map","TextFormControlComponent","BooleanFormControlComponent","ColorPickerFormControlComponent","CounterFormControlComponent","DateFormControlComponent","AttachmentFormControlComponent","cloneDeep","RecordGridColumnAlignment","noop","RX_MODAL","switchMap","of","RowSelectionMode","map","Injectable","Observable","last","EventEmitter","some","tap","forEach","forkJoin","defaultIfEmpty","catchError","throwError","filter","findIndex","find","isNull","every","chain","isEmpty","RecordGridComponent","FormBuilderComponent","Component","Optional","Input","Output","ViewChildren","HostBinding","DismissReasons","NEVER","RxModalClass","ViewChild","ReplaySubject","Subject","take","flatten","takeUntil","uniqueId","BehaviorSubject","TreeWrap","combineLatest","pluck","RX_APPLICATION","RxComponentCanDeactivateGuard","RouterModule","NgModule","head","AdaptButtonModule","AdaptRxSelectModule","AdaptRxTextareaModule","AdaptTableModule","AdminSettingsModule","CommonModule","FormsModule","ReactiveFormsModule","RecordGridModule","TranslateModule","AdaptAlertModule","shareReplay","trim","TranslateService","RxDefinitionNameService","RxRecordDefinitionCacheService","RxAssociationNodeTreeDataPageService","RxTreeService","ErrorHandler","flow","RxExpressionConfigurator","DataPage","isUndefined","groupBy","remove","uniqBy","sumBy","join","get","RxDefinitionPickerType","ExpressionOperatorGroup","distinctUntilChanged","omit","reject","_filter","moveItemInArray","sortBy","OpenViewActionModalSize","AdaptPopoverDirective","mergeMap","ValueAccessor","NG_VALUE_ACCESSOR","RxDefinitionPickerScope","JustificationRequirement","finalize","Pipe","AdaptHighlightModule","AdaptRxTextfieldModule","AdaptTabsModule","ExpressionFormControlModule","RxBusyIndicatorModule","RxDefinitionPickerModule","AdaptRxLabelModule","AdaptDropdownModule","AdaptRxSearchModule","AdaptTreeModule","RxDefinitionModule","AdaptRxCounterModule","AdaptPopoverModule","AdaptTooltipModule","DragDropModule","AdaptAccordionModule","AdaptRxRadiobuttonModule","AdaptBusyModule","RxSelectWithPaginationModule","AdaptRxCheckboxModule","AdaptRxValidatorsModule","AdaptEmptyStateModule","includes","values","BaseViewComponent","AdaptRxSwitchModule","AdaptIconModule","RX_CHATBOTS","RenameDefinitionModalComponent","toString","NgModel","RenameDefinitionModalModule","RxDirectivesModule","moment","RxDatetimePickerMode","parseInt","RX_SIZE_UNITS","EMPTY","merge","inRange","add","pullAt","compact","NgForm","assign","reduce","mapValues","constant","defaults","split","keys","AdaptChartsModule","AdaptModalModule","AdaptRxDatetimeModule","AdaptRxListBuilderModule","dataPageType","startWith","withLatestFrom","LoaderType","set","RX_RESOURCE_URLS","isArray","isEqual","RX_OVERLAY","ConnectionTestStatus","MachineLearningProviderNames","transform","toLower","forIn","RX_CHATBOT","RxConnectionTesterModule","RxJsonModule","UploaderMode","RecordGridFilterMode","pick","AdaptDockedPanelModule","AdaptRxUploaderModule","GroupButtonFormControlModule","RecordGridDesignModule","RecordGridFilterSelectControlModule","Subscription","authTypes","FormGroup","FormControl","AdaptRxFormControlModule","RxWizardModule","has","castArray","flatMap","AdaptBadgeModule","AdaptAdvancedFilteringModule","AdaptSubnavModule","ActiveModalRef","authTypeOptions","FormBuilder","RxNotificationService","RxRecordInstanceDataPageService","findKey","pull","ColumnSortDirection","RxUniqueValidatorModule","AdaptRxSelectEditableModule","isFunction","AdaptValidators","first","ai_info_circle_o_adapt","AdaptRxTypeaheadModule","fieldIds","RxRulePipesModule","RX_ADMINISTRATION","RxFileService","ClipboardModule","toNumber","isNil","isObject","RxNameValuePairsEditorModule","debounceTime","ChangeDetectionStrategy","AdaptMetatagModule","AdaptTagModule","AdaptTruncatePipeModule","AdaptSidebarModule","RuntimeViewModule","RxFormBuilderModule","ViewActionsModule","ViewComponentsModule"],"mappings":"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"}