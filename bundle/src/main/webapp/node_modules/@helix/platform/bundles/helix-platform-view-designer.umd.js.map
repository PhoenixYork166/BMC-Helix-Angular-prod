{"version":3,"file":"helix-platform-view-designer.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../libs/platform/view/designer/core/validation-helpers.ts","../../../../libs/platform/view/designer/core/layout-helpers.ts","../../../../libs/platform/view/designer/+state/view-component.actions.ts","../../../../libs/platform/view/designer/+state/view-designer.actions.ts","../../../../libs/platform/view/designer/+state/view-designer.selectors.ts","../../../../libs/platform/view/designer/+state/view-designer-dispatcher.service.ts","../../../../libs/platform/view/designer/core/view-designer-inspector.service.ts","../../../../libs/platform/view/designer/core/view-data-dictionary-builder.service.ts","../../../../libs/platform/view/designer/core/view-data-dictionary-store.service.ts","../../../../libs/platform/view/designer/+state/view-designer.facade.ts","../../../../libs/platform/view/designer/data-dictionary/view-data-dictionary.service.ts","../../../../libs/platform/view/designer/expression-configurator/view-expression-configurator.class.ts","../../../../libs/platform/view/designer/expression-configurator/view-component-expression-configurator.class.ts","../../../../libs/platform/view/designer/form-controls/view-customization-options-widget/view-customization-options.component.ts","../../../../libs/platform/view/designer/form-controls/view-customization-options-widget/view-customization-options.component.html","../../../../libs/platform/view/designer/form-controls/view-revert-customization/view-revert-customization.component.ts","../../../../libs/platform/view/designer/form-controls/view-revert-customization/view-revert-customization.component.html","../../../../libs/platform/view/designer/form-controls/view-revert-customization/view-revert-customization.module.ts","../../../../libs/platform/view/designer/validation/view-expression-validator.service.ts","../../../../libs/platform/view/designer/model/view-model.service.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/tokens/view-designer-canvas-item-api.token.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-item/canvas-item-api.service.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/drop-component-data.class.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/view-designer-canvas.service.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-item/canvas-item.component.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-item/canvas-item.component.html","../../../../libs/platform/view/designer/components/view-designer-canvas/view-designer-canvas.component.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/view-designer-canvas.component.html","../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-outlet/canvas-outlet-helper.service.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-item-column/canvas-item-column.component.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-item-column/canvas-item-column.component.html","../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-item-container/canvas-item-container.component.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-item-container/canvas-item-container.component.html","../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-outlet/canvas-outlet.component.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-outlet/canvas-outlet.component.html","../../../../libs/platform/view/designer/components/designer-component/designer.component.ts","../../../../libs/platform/view/designer/components/designer-component/designer.component.html","../../../../libs/platform/view/designer/core/view-designer-models.service.ts","../../../../libs/platform/view/designer/component/view-designer-helper.service.ts","../../../../libs/platform/view/designer/core/view-definition-generator.service.ts","../../../../libs/platform/view/designer/view-designer.constant.ts","../../../../libs/platform/view/designer/components/palette/view-designer-palette.component.ts","../../../../libs/platform/view/designer/components/palette/view-designer-palette.component.html","../../../../libs/platform/view/designer/component/view-designer.component.ts","../../../../libs/platform/view/designer/component/view-designer.component.html","../../../../libs/platform/view/designer/components/view-designer-canvas/view-designer-canvas.module.ts","../../../../libs/platform/view/designer/components/designer-component/designer.module.ts","../../../../libs/platform/view/designer/components/palette/view-designer-palette.module.ts","../../../../libs/platform/view/designer/components/runtime-view-params-modal/runtime-view-params-modal.component.ts","../../../../libs/platform/view/designer/components/runtime-view-params-modal/runtime-view-params-modal.component.html","../../../../libs/platform/view/designer/components/runtime-view-params-modal/runtime-view-params-modal.module.ts","../../../../libs/platform/view/designer/expression-configurator/view-action-expression-configurator.class.ts","../../../../libs/platform/view/designer/expression-configurator/named-list-filter-expression-configurator.class.ts","../../../../libs/platform/view/designer/action-sandbox/action-sandbox.class.ts","../../../../libs/platform/view/designer/model/view-designer-action-model.class.ts","../../../../libs/platform/view/designer/model/view-designer-default-action-model.class.ts","../../../../libs/platform/view/designer/form-controls/action-list-control/action-list-model-manager.service.ts","../../../../libs/platform/view/designer/form-controls/action-list-control/action-list-editor-dialog/action-list-editor-dialog.component.ts","../../../../libs/platform/view/designer/form-controls/action-list-control/action-list-editor-dialog/action-list-editor-dialog.component.html","../../../../libs/platform/view/designer/form-controls/action-list-control/action-list-editor-dialog/action-list-editor-dialog.module.ts","../../../../libs/platform/view/designer/form-controls/action-list-control/action-list-control.component.ts","../../../../libs/platform/view/designer/form-controls/action-list-control/action-list-control.component.html","../../../../libs/platform/view/designer/form-controls/action-list-control/action-list-control.module.ts","../../../../libs/platform/view/designer/form-controls/component-permission-editor-widget/component-permission-editor-widget.component.ts","../../../../libs/platform/view/designer/form-controls/component-permission-editor-widget/component-permission-editor-widget.component.html","../../../../libs/platform/view/designer/form-controls/component-permission-editor-widget/component-permission-editor-widget.module.ts","../../../../libs/platform/view/designer/form-controls/view-customization-options-widget/view-customization-options.module.ts","../../../../libs/platform/view/designer/form-controls/action-list-widget/action-list-widget.component.ts","../../../../libs/platform/view/designer/form-controls/action-list-widget/action-list-widget.component.html","../../../../libs/platform/view/designer/form-controls/action-list-widget/action-list-widget.module.ts","../../../../libs/platform/view/designer/model/view-designer-component-model.class.ts","../../../../libs/platform/view/designer/public-interfaces/standard-props-design.types.ts","../../../../libs/platform/view/designer/validation/view-action-validator.service.ts","../../../../libs/platform/view/designer/component-sandbox/component-sandbox.class.ts","../../../../libs/platform/view/designer/validation/view-expression-validator-registry.service.ts","../../../../libs/platform/view/designer/+state/view-designer-state-helper.service.ts","../../../../libs/platform/view/designer/+state/view-designer-component.effects.ts","../../../../libs/platform/view/designer/+state/view-designer.effects.ts","../../../../libs/platform/view/designer/+state/view-definition.reducer.ts","../../../../libs/platform/view/designer/+state/view-designer-breadcrumbs.reducer.ts","../../../../libs/platform/view/designer/+state/view-designer-model.reducer.ts","../../../../libs/platform/view/designer/+state/view-designer-ui.reducer.ts","../../../../libs/platform/view/designer/+state/view-designer-validation.reducer.ts","../../../../libs/platform/view/designer/view-designer.module.ts","../../../../libs/platform/view/designer/helix-platform-view-designer.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { ITagsFormControlModel } from '@helix/platform/shared/components';\nimport { IViewComponentDesignValidationIssue } from '../public-interfaces';\nimport { isObject } from 'lodash';\nimport {\n  IRxAvailableOnDevicesProp,\n  IRxStylesProp,\n  RX_AVAILABLE_ON_DEVICES_PROP_NAME,\n  RX_STYLES_PROP_NAME\n} from '@helix/platform/view/api';\n\nexport function validateCssClassName(tag: ITagsFormControlModel): boolean {\n  return !/^[a-z][-\\w]+$/gi.test(isObject(tag) ? tag.data.value : tag);\n}\n\nexport function validateCssClassNames(styles: string): IViewComponentDesignValidationIssue[] {\n  const validationIssues: IViewComponentDesignValidationIssue[] = [];\n\n  if (styles) {\n    const tags = styles.split(' ');\n\n    if (tags.some(validateCssClassName)) {\n      validationIssues.push({\n        type: 'error',\n        propertyName: 'styles',\n        description: 'CSS class name is invalid.'\n      });\n    }\n  }\n\n  return validationIssues;\n}\n\nexport function validateAvailableOnDevicesProp(value: string[]): IViewComponentDesignValidationIssue[] {\n  const validationIssues: IViewComponentDesignValidationIssue[] = [];\n\n  if (!value?.length) {\n    validationIssues.push({\n      type: 'error',\n      propertyName: RX_AVAILABLE_ON_DEVICES_PROP_NAME,\n      description: 'At least one device must be selected.'\n    });\n  }\n\n  return validationIssues;\n}\n\ninterface IRxValidateStandardPropsPayload extends IRxStylesProp, IRxAvailableOnDevicesProp {}\n\nexport function validateStandardProps(model: IRxValidateStandardPropsPayload): IViewComponentDesignValidationIssue[] {\n  return [\n    ...validateCssClassNames(model[RX_STYLES_PROP_NAME]),\n    ...validateAvailableOnDevicesProp(model[RX_AVAILABLE_ON_DEVICES_PROP_NAME])\n  ];\n}\n","import { includes, uniq, some } from 'lodash';\nimport { IViewComponentDesignModel } from '../interfaces/view-component-design-model.interface';\nimport { IViewComponentDesignModels } from '../interfaces/view-component-design-models.interface';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport { RxViewLayout } from '@helix/platform/view/api';\n\nexport function findParentComponentModel(\n  guid: string,\n  components: IViewComponentDesignModels\n): IViewComponentDesignModel {\n  const currentComponent = components[guid];\n\n  return components[currentComponent?.parentGuid];\n}\n\nexport function findAllParentComponentGuids(guid: string, components: IViewComponentDesignModels): string[] {\n  const result = [guid];\n  let parentModel = findParentComponentModel(guid, components);\n  let nextGuid = parentModel ? parentModel.guid : null;\n\n  while (nextGuid) {\n    result.unshift(nextGuid);\n    parentModel = findParentComponentModel(nextGuid, components);\n\n    nextGuid = parentModel ? parentModel.guid : null;\n  }\n\n  return result;\n}\n\nexport function findParentComponentByType(\n  guid: string,\n  componentType: string,\n  components: IViewComponentDesignModels\n): IViewComponentDesignModel {\n  let result;\n  let parentModel = findParentComponentModel(guid, components);\n  let nextGuid = parentModel ? parentModel.guid : null;\n\n  while (nextGuid) {\n    if (parentModel.type === componentType) {\n      result = parentModel;\n      nextGuid = null;\n    } else {\n      parentModel = findParentComponentModel(nextGuid, components);\n      nextGuid = parentModel ? parentModel.guid : null;\n    }\n  }\n\n  return result;\n}\n\nexport function isComponentContainsChild(\n  guid: string,\n  componentModel: IViewComponentDesignModel | IViewDesignModel\n): boolean {\n  if (componentModel.layout) {\n    const hasChild = RxViewLayout.hasChild(componentModel.layout, guid);\n\n    if (hasChild) {\n      return true;\n    }\n  }\n\n  if (componentModel.childDataComponentGuids) {\n    return includes(componentModel.childDataComponentGuids, guid);\n  } else {\n    return false;\n  }\n}\n\nexport function addChildComponent(\n  componentModel: IViewComponentDesignModel | IViewDesignModel,\n  guid: string,\n  outletName: string,\n  insertIndex?: number,\n  columnIndex = 0,\n  columnSpan = 0\n): IViewComponentDesignModel | IViewDesignModel {\n  const newComponentModel = { ...componentModel };\n\n  newComponentModel.layout = {\n    outlets: componentModel.layout.outlets.map((outlet) => {\n      if (outlet.name === outletName) {\n        const columns = [...outlet.columns];\n\n        insertIndex = isFinite(insertIndex) ? insertIndex : columns[columnIndex].children.length;\n\n        if (!columns[columnIndex]) {\n          columns[columnIndex] = {\n            children: []\n          };\n\n          if (columnSpan) {\n            columns[columnIndex].span = columnSpan;\n          }\n        }\n\n        // todo handle drop in non-first column\n        columns[columnIndex] = {\n          children: [\n            ...columns[columnIndex].children.slice(0, insertIndex),\n            guid,\n            ...columns[columnIndex].children.slice(insertIndex)\n          ],\n          span: columns[columnIndex].span\n        };\n\n        return {\n          ...outlet,\n          columns\n        };\n      } else {\n        return outlet;\n      }\n    })\n  };\n\n  return newComponentModel;\n}\n\nexport function removeChildComponent(\n  componentGuidToRemove: string,\n  parentComponentModel: IViewComponentDesignModel | IViewDesignModel\n): IViewComponentDesignModel | IViewDesignModel {\n  const newParentComponentModel = { ...parentComponentModel };\n\n  if (some(newParentComponentModel.childDataComponentGuids, (guid) => componentGuidToRemove === guid)) {\n    newParentComponentModel.childDataComponentGuids = newParentComponentModel.childDataComponentGuids.filter(\n      (guid) => guid !== componentGuidToRemove\n    );\n  }\n\n  if (parentComponentModel.layout && RxViewLayout.hasChild(parentComponentModel.layout, componentGuidToRemove)) {\n    newParentComponentModel.layout = RxViewLayout.removeChildFromLayout(\n      parentComponentModel.layout,\n      componentGuidToRemove\n    );\n  }\n\n  return newParentComponentModel;\n}\n\nexport function getChildGuidsFromModel(model: IViewComponentDesignModel | IViewDesignModel): string[] {\n  const guids: string[] = [];\n\n  if (model.childDataComponentGuids) {\n    guids.push(...model.childDataComponentGuids);\n  }\n\n  if (model.layout) {\n    guids.push(...RxViewLayout.getViewLayoutChildGuids(model.layout));\n  }\n\n  return uniq(guids);\n}\n\nexport function getAllChildGuids(\n  parentComponent: IViewComponentDesignModel | IViewDesignModel,\n  componentModelsState: IViewComponentDesignModels\n): string[] {\n  const guids = getChildGuidsFromModel(parentComponent);\n\n  return guids.reduce((result, guid) => {\n    result.push(...getAllChildGuids(componentModelsState[guid], componentModelsState));\n\n    return result;\n  }, guids);\n}\n","import { createAction, props } from '@ngrx/store';\n\nimport { IDataDictionaryBranch, IPlainObject } from '@helix/platform/shared/api';\nimport { IViewComponentDesignValidationIssue } from '../public-interfaces/view-component-design-validation-issue.interface';\nimport {\n  IAddNewComponentActionPayload,\n  IInitializeComponentModelActionPayload,\n  IInitializeDataComponentModelActionPayload,\n  ISetChildrenActionPayload,\n  ISetComponentDataPayload,\n  ISetSettablePropertiesDataDictionaryItem,\n  IUpdateComponentModelPayload\n} from './view-component.types';\n\nexport const componentsRemoved = createAction(\n  '[View Component] Components Removed',\n  props<{ guids: string[]; selectParent?: boolean }>()\n);\n\nexport const initializeComponentModels = createAction(\n  '[View Component] Initialize Component Models',\n  props<{ payload: IInitializeComponentModelActionPayload[] }>()\n);\n\nexport const initializeDataComponentModels = createAction(\n  '[View Component] Initialize Data Component Models',\n  props<{ payload: IInitializeDataComponentModelActionPayload[] }>()\n);\n\nexport const setValidationIssues = createAction(\n  '[View Component] Set Validation Issues',\n  props<{ guid: string; issues: IViewComponentDesignValidationIssue[] }>()\n);\n\nexport const setExpressionValidationIssues = createAction(\n  '[View Component] Set Expression Validation Issues',\n  props<{\n    issues: {\n      [guid: string]: IViewComponentDesignValidationIssue[];\n    };\n  }>()\n);\n\nexport const setComponentData = createAction(\n  '[View Component] Set Component Properties',\n  props<{ payload: ISetComponentDataPayload[] }>()\n);\n\nexport const setChildComponents = createAction(\n  '[View Component] Set Child Components',\n  props<{ payload: ISetChildrenActionPayload }>()\n);\n\nexport const setBreadcrumbs = createAction(\n  '[View Component] Set Breadcrumbs',\n  props<{ guid: string; label: string }>()\n);\n\nexport const selectComponent = createAction('[View Component] Select Component', props<{ guid: string }>());\n\nexport const setComponentLayout = createAction(\n  '[View Component] Set Component Layout',\n  props<{ guid: string; cols: number[] }>()\n);\n\nexport const moveComponent = createAction(\n  '[View Component] Move Component',\n  props<{\n    guid: any;\n    insertIndex: number;\n    columnIndex: number;\n    outletName: string;\n    parentGuid: string;\n  }>()\n);\n\nexport const insertComponent = createAction(\n  '[View Component] Insert Component',\n  props<{\n    data: {\n      guid?: string;\n      type?: string;\n      initialPropertiesByName?: IPlainObject;\n    };\n    insertIndex: number;\n    columnIndex: number;\n    outletName: string;\n    targetGuid: string;\n  }>()\n);\n\nexport const addNewComponents = createAction(\n  '[View Component] Add New Components',\n  props<{ payload: IAddNewComponentActionPayload[] }>()\n);\n\nexport const updateComponentModel = createAction(\n  '[View Component] Update Component Model',\n  props<{ payload: IUpdateComponentModelPayload[] }>()\n);\n\nexport const removeComponents = createAction(\n  '[View Component] Remove Components',\n  props<{ guids: string[]; selectParent?: boolean }>()\n);\n","import { IViewDefinition } from '@helix/platform/view/api';\nimport { createAction, props } from '@ngrx/store';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport { IInitViewDesignerActionPayload } from './view-designer.types';\n\nexport const viewDefinitionSaveSuccess = createAction(\n  '[View Designer] View Definition Save Success',\n  props<{ viewDefinitionName: string }>()\n);\n\nexport const viewDefinitionSaveError = createAction('[View Designer] View Definition Save Error');\n\nexport const viewDefinitionLoadSuccess = createAction(\n  '[View Designer] View Definition Load Success',\n  props<{ viewDefinition: IViewDefinition }>()\n);\n\nexport const viewDefinitionLoadError = createAction('[View Designer] View Definition Load Error');\n\nexport const setGeneratedViewDefinition = createAction(\n  '[View Designer] Set Generated View Definition',\n  props<{ payload: IViewDefinition }>()\n);\n\nexport const loadViewDefinition = createAction(\n  '[View Designer] Load View Definition',\n  props<{\n    viewDefinitionName?: string;\n    layoutTemplate?: number;\n  }>()\n);\n\nexport const friendlyBundleNameLoadSuccess = createAction(\n  '[View Designer] Bundle Friendly Name Load Success',\n  props<{ friendlyBundleName: string }>()\n);\n\nexport const friendlyBundleNameLoadError = createAction(\n  '[View Designer] Bundle Friendly Name Load Error',\n  props<{ payload: any }>()\n);\n\nexport const viewModelsInitialized = createAction('[View Designer] View Models Initialized');\n\nexport const viewModelsUpdatedAfterSave = createAction('[View Designer] View Models Updated After Save');\n\nexport const updateViewModel = createAction(\n  '[View Designer] Update View Model',\n  props<{ payload: Partial<IViewDesignModel> }>()\n);\n\nexport const setViewModel = createAction('[View Designer] Set View Model', props<{ payload: IViewDesignModel }>());\n\nexport const selectInspectorTab = createAction('[View Designer] Select Inspector Tab', props<{ tabId: number }>());\n\nexport const saveViewDefinition = createAction('[View Designer] Save View Definition', props<{ payload?: any }>());\n\nexport const runPreview = createAction('[View Designer] Run Preview');\n\nexport const loadFriendlyBundleName = createAction('[View Designer] Load Bundle Friendly Name');\n\nexport const generateViewDefinition = createAction(\n  '[View Designer] Generate View Definition',\n  props<{ payload?: any }>()\n);\n\nexport const clearCanvas = createAction('[View Designer] Clear Canvas');\n\nexport const initViewDesigner = createAction(\n  '[View Designer] Init',\n  props<{ payload: IInitViewDesignerActionPayload }>()\n);\n\nexport const destroyViewDesigner = createAction('[View Designer] Destroy');\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { IViewDesignerState } from '../interfaces/view-designer-state.interface';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport { get } from 'lodash';\n\nexport const viewDesignerState = createFeatureSelector<IViewDesignerState>('viewDesigner');\n\nexport const viewDesignerModelsSelector = createSelector(viewDesignerState, (viewDesigner) => viewDesigner.model);\n\nexport const viewModelSelector = createSelector(viewDesignerModelsSelector, (models) => models.viewDesignModel);\n\nexport const viewModelPropertyValueSelector = createSelector(\n  viewModelSelector,\n  (viewModel: IViewDesignModel, { propertyName }: { propertyName: string }) => get(viewModel, propertyName)\n);\n\nexport const viewComponentModelsSelector = createSelector(\n  viewDesignerModelsSelector,\n  (models) => models.viewComponentDesignModels\n);\n\nexport const firstViewComponentModelTypeSelector = createSelector(\n  viewDesignerModelsSelector,\n  (models) => Object.values(models.viewComponentDesignModels)[0]?.type\n);\n\nexport const viewComponentModelSelector = createSelector(\n  viewComponentModelsSelector,\n  (componentModels, { guid }: { guid: string }) => componentModels[guid]\n);\n\nexport const parentComponentModelGuidSelector = createSelector(\n  viewComponentModelSelector,\n  (componentModel) => componentModel?.parentGuid\n);\n\nexport const componentPropertiesByNameSelector = createSelector(\n  viewComponentModelsSelector,\n  (componentModels, { guid, propertyName }: { guid: string; propertyName?: string }) =>\n    componentModels[guid]\n      ? propertyName\n        ? get(componentModels[guid].propertiesByName, propertyName)\n        : componentModels[guid].propertiesByName\n      : null\n);\n\nexport const componentTypeSelector = createSelector(viewComponentModelsSelector, (componentModels, { guid }) =>\n  componentModels[guid] ? componentModels[guid].type : null\n);\n\nexport const componentLayoutSelector = createSelector(\n  viewComponentModelSelector,\n  (componentModel) => componentModel?.layout\n);\n\nexport const componentPermissionsSelector = createSelector(\n  viewComponentModelSelector,\n  (componentModel) => componentModel?.permissions\n);\n\nexport const childDataComponentGuidsSelector = createSelector(\n  viewComponentModelSelector,\n  (componentModel) => componentModel?.childDataComponentGuids\n);\n\nexport const viewDesignerUISelector = createSelector(viewDesignerState, (viewDesigner) => viewDesigner.ui);\n\nexport const isViewDefinitionLoadingSelector = createSelector(\n  viewDesignerUISelector,\n  (ui) => ui.isViewDefinitionLoading\n);\n\nexport const bundleFriendlyNameSelector = createSelector(viewDesignerUISelector, (ui) => ui.friendlyBundleName);\n\nexport const currentBundleIdSelector = createSelector(viewDesignerUISelector, (ui) => ui.currentBundleId);\n\nexport const viewDefinitionSelector = createSelector(viewDesignerState, (viewDesigner) => viewDesigner.viewDefinition);\n\nexport const validationIssuesSelector = createSelector(viewDesignerState, (viewDesigner) => viewDesigner.validation);\n\nexport const breadcrumbsSelector = createSelector(viewDesignerState, (viewDesigner) => viewDesigner.breadcrumbs);\n\nexport const selectedInspectorTabIdSelector = createSelector(viewDesignerUISelector, (ui) => ui.selectedInspectorTabId);\n\nexport const selectedComponentGuidSelector = createSelector(viewDesignerUISelector, (ui) => ui.selectedComponentGuid);\n\nexport const areViewModelsReadySelector = createSelector(viewDesignerUISelector, (ui) => ui.areViewModelsReady);\n\nexport const selectedComponentPropsSelector = createSelector(\n  selectedComponentGuidSelector,\n  viewComponentModelsSelector,\n  (selectedComponentGuid, componentModels) => {\n    if (componentModels && selectedComponentGuid) {\n      const componentDesignModel = componentModels[selectedComponentGuid];\n\n      return componentDesignModel ? componentDesignModel.propertiesByName : null;\n    } else {\n      return null;\n    }\n  }\n);\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\n/**\n * Public class for dispatching actions\n * Protects ngrx store$ service from selecting data from the store\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewDesignerDispatcher {\n  constructor(private store$: Store<any>) {}\n\n  dispatch(action: any) {\n    this.store$.dispatch(action);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IViewDesignerInspectorConfig } from '../public-interfaces/view-designer-inspector.types';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDesignerInspectorService {\n  private onChangeSubject = new Subject<{ guid: string; config: IViewDesignerInspectorConfig }>();\n  private configs: Map<string, IViewDesignerInspectorConfig> = new Map();\n\n  onChange$ = this.onChangeSubject.asObservable();\n\n  clear(): void {\n    this.configs.clear();\n  }\n\n  set(guid: string, config: IViewDesignerInspectorConfig): void {\n    this.configs.set(guid, config);\n    this.onChangeSubject.next({ guid, config });\n  }\n\n  get(guid: string): IViewDesignerInspectorConfig {\n    return this.configs.get(guid);\n  }\n\n  delete(guid: string): void {\n    this.onChangeSubject.next({ guid, config: null });\n    this.configs.delete(guid);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IDataDictionary, IDataDictionaryBranch } from '@helix/platform/shared/api';\nimport { map, flow, compact, map as _map } from 'lodash';\nimport { IViewComponentDesignCommonDataDictionaryBranch } from '../public-interfaces/view-component-design-common-data-dictionary.interfaces';\nimport {\n  IViewComponentDesignSettablePropertiesDataDictionary,\n  IViewComponentDesignSettablePropertiesDataDictionaryBranch\n} from '../public-interfaces/view-component-design-settable-properties-data-dictionary.interfaces';\nimport { IViewActionOutputDataDictionary } from '@helix/platform/view/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDataDictionaryBuilderService {\n  private componentIcon = 'd-icon-file_o';\n  private componentPropertyIcon = 'd-icon-file_o_gear';\n  private settablePropertiesIcon = 'd-icon-arrow_right_square_input';\n  private actionOutputIcon = 'd-icon-arrow_chart';\n\n  getActionOutputDataDictionaryBranch(\n    actionName: string,\n    dataDictionary: IViewActionOutputDataDictionary\n  ): IDataDictionaryBranch {\n    return {\n      label: actionName,\n      icon: 'd-icon-arrow_chart',\n      children: _map(dataDictionary, (dataDictionaryBranch) =>\n        this.buildDataDictionaryBranch(dataDictionaryBranch, this.actionOutputIcon)\n      )\n    };\n  }\n\n  getComponentCommonDataDictionaryBranch(\n    branch: IViewComponentDesignCommonDataDictionaryBranch\n  ): IDataDictionaryBranch {\n    return {\n      ...branch,\n      icon: this.componentIcon,\n      children: flow(\n        (children) => map(children, (child) => this.buildDataDictionaryBranch(child, this.componentPropertyIcon)),\n        compact\n      )(branch.children)\n    };\n  }\n\n  getSettablePropertiesDataDictionary(branches: IViewComponentDesignSettablePropertiesDataDictionary): IDataDictionary {\n    return map(branches, (branch) => this.buildDataDictionaryBranch(branch, this.settablePropertiesIcon));\n  }\n\n  private buildDataDictionaryBranch(\n    branch: IViewComponentDesignCommonDataDictionaryBranch | IViewComponentDesignSettablePropertiesDataDictionaryBranch,\n    icon\n  ): IDataDictionaryBranch {\n    const node: IDataDictionaryBranch = {\n      ...branch\n    };\n\n    if (branch.expression) {\n      node.icon = icon;\n    }\n\n    if (branch.children) {\n      node.children = flow(\n        (children) => map(children, (child) => this.buildDataDictionaryBranch(child, icon)),\n        compact\n      )(branch.children);\n    }\n\n    return node;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { IDataDictionaryBranch } from '@helix/platform/shared/api';\nimport { flow, has, isEmpty, map, omit, reject, sortBy } from 'lodash';\nimport { ISetSettablePropertiesDataDictionaryItem } from '../+state/view-component.types';\nimport { IViewDesignerActionOutputDataDictionaryState } from '../interfaces/view-designer-action-output-data-dictionary-state.interface';\nimport { IViewDesignerComponentsCommonDataDictionaryState } from '../interfaces/view-designer-components-data-dictionary-state.interface';\nimport { IViewDesignerViewCommonDataDictionaryState } from '../interfaces/view-designer-view-data-dictionary-state.interface';\nimport { IViewDesignerSettablePropertiesDataDictionaryState } from '../interfaces/view-designer-settable-properties-data-dictionary.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDataDictionaryStoreService {\n  private componentsCommon: IViewDesignerComponentsCommonDataDictionaryState = null;\n  private componentsCommonSubject = new ReplaySubject<IViewDesignerComponentsCommonDataDictionaryState>(1);\n  componentsCommon$ = this.componentsCommonSubject.asObservable();\n\n  private viewCommon = null;\n  private viewCommonSubject = new ReplaySubject<IViewDesignerViewCommonDataDictionaryState>(1);\n  viewCommon$ = this.viewCommonSubject.asObservable();\n\n  private actionsOutput: IViewDesignerActionOutputDataDictionaryState[] = [];\n  private actionsOutputSubject = new ReplaySubject<IViewDesignerActionOutputDataDictionaryState[]>(1);\n  actionsOutput$ = this.actionsOutputSubject.asObservable();\n\n  private settableProperties: IViewDesignerSettablePropertiesDataDictionaryState = null;\n  private settablePropertiesSubject = new ReplaySubject<IViewDesignerSettablePropertiesDataDictionaryState>(1);\n  settableProperties$ = this.settablePropertiesSubject.asObservable();\n\n  setCommonDataDictionaryBranch(guid: string, dataDictionaryBranch: IDataDictionaryBranch): void {\n    this.setComponentCommon(\n      isEmpty(dataDictionaryBranch)\n        ? omit(this.componentsCommon, [guid])\n        : { ...this.componentsCommon, [guid]: dataDictionaryBranch }\n    );\n  }\n\n  setViewCommonDataDictionaryBranch(dataDictionaryBranch: IDataDictionaryBranch): void {\n    this.setViewCommon(dataDictionaryBranch);\n  }\n\n  setSettablePropertiesDataDictionary(items: ISetSettablePropertiesDataDictionaryItem[]): void {\n    this.setSettableProperties({\n      ...this.settableProperties,\n      ...items.reduce((result, { guid, componentName, dataDictionary }) => {\n        result[guid] = { componentName, dataDictionary };\n\n        return result;\n      }, {})\n    });\n  }\n\n  removeDataDictionaryForComponents(guids: string[]): void {\n    if (guids.some((guid) => has(this.componentsCommon, guid))) {\n      this.setComponentCommon(omit(this.componentsCommon, guids));\n    }\n\n    if (guids.some((guid) => has(this.settableProperties, guid))) {\n      this.setSettableProperties(omit(this.settableProperties, guids));\n    }\n  }\n\n  setActionOutputDataDictionaryBranch(guid: string, index: number, dataDictionaryBranch: IDataDictionaryBranch): void {\n    this.setActionsOutput(\n      flow(\n        (actions) => [\n          ...reject<IViewDesignerActionOutputDataDictionaryState>(actions, { guid }),\n          { guid, index, dataDictionaryBranch }\n        ],\n        (actions) => sortBy(actions, 'index')\n      )(this.actionsOutput)\n    );\n  }\n\n  updateActionOutputDataDictionaryBranchOrder(actions: { [guid: string]: number }): void {\n    this.setActionsOutput(\n      flow(\n        (actionsOutput) =>\n          map(actionsOutput, (actionOutput) => ({\n            ...actionOutput,\n            index: actions[actionOutput.guid]\n          })),\n        (actionsOutput) => sortBy(actionsOutput, 'index')\n      )(this.actionsOutput)\n    );\n  }\n\n  removeActionOutputDataDictionaryBranch(guid: string): void {\n    this.setActionsOutput(reject(this.actionsOutput, { guid }));\n  }\n\n  removeAllActionOutputDataDictionaryBranches(): void {\n    this.setActionsOutput(null);\n  }\n\n  clear(): void {\n    this.setComponentCommon(null);\n    this.setViewCommon(null);\n    this.setSettableProperties(null);\n    this.setActionsOutput([]);\n  }\n\n  private setComponentCommon(state: IViewDesignerComponentsCommonDataDictionaryState): void {\n    this.componentsCommon = state;\n    this.componentsCommonSubject.next(this.componentsCommon);\n  }\n\n  private setViewCommon(state: IViewDesignerViewCommonDataDictionaryState): void {\n    this.viewCommon = state;\n    this.viewCommonSubject.next(this.viewCommon);\n  }\n\n  private setActionsOutput(state: IViewDesignerActionOutputDataDictionaryState[]): void {\n    this.actionsOutput = state;\n    this.actionsOutputSubject.next(this.actionsOutput);\n  }\n\n  private setSettableProperties(state: IViewDesignerSettablePropertiesDataDictionaryState): void {\n    this.settableProperties = state;\n    this.settablePropertiesSubject.next(this.settableProperties);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IDataDictionaryBranch, IPlainObject, RxOverlayService } from '@helix/platform/shared/api';\nimport { RxGuidService } from '@helix/platform/utils';\nimport {\n  IViewActionOutputDataDictionary,\n  IViewDefinitionPermission,\n  IViewLayout,\n  RxViewLayout\n} from '@helix/platform/view/api';\nimport { Actions, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { compact, filter as _filter, flatten, isFinite } from 'lodash';\nimport { combineLatest, EMPTY, merge, Observable, of, Subject } from 'rxjs';\nimport {\n  bufferToggle,\n  distinctUntilChanged,\n  filter,\n  map,\n  shareReplay,\n  switchMap,\n  switchMapTo,\n  take,\n  takeUntil,\n  withLatestFrom\n} from 'rxjs/operators';\nimport { IViewComponentDropData } from '../components/view-designer-canvas';\nimport { getChildGuidsFromModel } from '../core/layout-helpers';\nimport { RxViewDataDictionaryBuilderService } from '../core/view-data-dictionary-builder.service';\nimport { RxViewDataDictionaryStoreService } from '../core/view-data-dictionary-store.service';\nimport { RxViewDesignerInspectorService } from '../core/view-designer-inspector.service';\nimport { IViewComponentDesignModel } from '../interfaces/view-component-design-model.interface';\nimport { IViewComponentDesignModels } from '../interfaces/view-component-design-models.interface';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport {\n  IViewComponentDesignData,\n  IViewComponentDesignSetPayload,\n  IViewComponentDesignValidationIssue,\n  IViewDesignerInspectorConfig\n} from '../public-interfaces';\nimport { IViewComponentDesignSettablePropertiesDataDictionary } from '../public-interfaces/view-component-design-settable-properties-data-dictionary.interfaces';\nimport * as ViewComponentsActions from './view-component.actions';\nimport { ISetSettablePropertiesDataDictionaryItem } from './view-component.types';\nimport { ViewDesignerDispatcher } from './view-designer-dispatcher.service';\nimport * as ViewDesignerActions from './view-designer.actions';\nimport {\n  areViewModelsReadySelector,\n  breadcrumbsSelector,\n  bundleFriendlyNameSelector,\n  childDataComponentGuidsSelector,\n  componentLayoutSelector,\n  componentPermissionsSelector,\n  componentPropertiesByNameSelector,\n  componentTypeSelector,\n  currentBundleIdSelector,\n  firstViewComponentModelTypeSelector,\n  isViewDefinitionLoadingSelector,\n  parentComponentModelGuidSelector,\n  selectedComponentGuidSelector,\n  selectedInspectorTabIdSelector,\n  validationIssuesSelector,\n  viewComponentModelSelector,\n  viewComponentModelsSelector,\n  viewDefinitionSelector,\n  viewDesignerModelsSelector,\n  viewModelPropertyValueSelector,\n  viewModelSelector\n} from './view-designer.selectors';\nimport { IInitViewDesignerActionPayload } from './view-designer.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewDesignerFacade {\n  viewDefinition$ = this.store$.select(viewDefinitionSelector);\n  validationIssues$ = this.store$.select(validationIssuesSelector);\n  breadcrumbs$ = this.store$.select(breadcrumbsSelector);\n  viewDesignerModelState$ = this.store$.select(viewDesignerModelsSelector);\n  // filter operator is used to ignore the empty model when:\n  // - the view definition has not been loaded for the first time, or\n  // - the view definition is being saved.\n  viewModel$ = this.store$.select(viewModelSelector).pipe(filter<IViewDesignModel>(Boolean));\n  viewModelGuid$ = this.getViewPropertyValue('guid');\n  viewComponentModels$: Observable<IViewComponentDesignModels> = this.store$.select(viewComponentModelsSelector);\n  firstViewComponentModelType$: Observable<string> = this.store$.select(firstViewComponentModelTypeSelector);\n  isExtensionView$ = this.getViewPropertyValue('targetViewDefinitionName').pipe(map(Boolean), shareReplay(1));\n\n  isExtensionContainerSet$ = this.getViewPropertyValue('targetExtensionContainerGuid').pipe(\n    map(Boolean),\n    shareReplay(1)\n  );\n\n  allComponentGuids$ = this.viewComponentModels$.pipe(\n    map((models) => new Set(Object.keys(models))),\n    shareReplay({\n      refCount: true,\n      bufferSize: 1\n    })\n  );\n\n  selectedComponentGuid$: Observable<string> = this.store$.select(selectedComponentGuidSelector).pipe(\n    switchMap((componentGuid) =>\n      this.viewModelGuid$.pipe(\n        map((viewGuid) => (componentGuid === viewGuid ? null : componentGuid)),\n        take(1)\n      )\n    )\n  );\n\n  selectedComponentProperties$: Observable<IViewComponentDesignModel['propertiesByName']> =\n    this.selectedComponentGuid$.pipe(switchMap((guid) => (guid ? this.getComponentProperties(guid) : of(null))));\n\n  isViewDefinitionLoading$: Observable<boolean> = this.store$.select(isViewDefinitionLoadingSelector);\n  selectedInspectorTabId$: Observable<number> = this.store$.select(selectedInspectorTabIdSelector);\n  bundleFriendlyName$: Observable<string> = this.store$.select(bundleFriendlyNameSelector);\n  currentBundleId$: Observable<string> = this.store$.select(currentBundleIdSelector);\n\n  viewInspectorLayout$: Observable<IViewDesignerInspectorConfig['inspectorSectionConfigs']> = merge(\n    this.viewModelGuid$,\n    this.rxViewDesignerInspectorService.onChange$.pipe(\n      withLatestFrom(this.viewModelGuid$),\n      filter(([config, guid]) => config.guid === guid),\n      map(([config, guid]) => guid)\n    )\n  ).pipe(\n    map((guid) => {\n      const inspectorConfig = this.rxViewDesignerInspectorService.get(guid);\n\n      return inspectorConfig ? inspectorConfig.inspectorSectionConfigs : null;\n    })\n  );\n\n  selectedComponentInspectorLayout$: Observable<IViewDesignerInspectorConfig['inspectorSectionConfigs']> = merge(\n    this.selectedComponentGuid$.pipe(distinctUntilChanged()),\n    this.rxViewDesignerInspectorService.onChange$.pipe(\n      withLatestFrom(this.selectedComponentGuid$),\n      filter(([config, guid]) => config.guid === guid),\n      map(([config, guid]) => guid)\n    )\n  ).pipe(\n    map((guid) => {\n      const inspectorConfig = this.rxViewDesignerInspectorService.get(guid);\n\n      return inspectorConfig ? inspectorConfig.inspectorSectionConfigs : null;\n    })\n  );\n\n  isViewReadOnly$: Observable<boolean> = combineLatest([\n    this.viewModel$,\n    this.currentBundleId$.pipe(\n      switchMap((bundleId: string) => this.rxOverlayService.areNewDefinitionsAllowed(bundleId))\n    )\n  ]).pipe(\n    map(\n      ([viewModel, areNewDefinitionsAllowed]) =>\n        !areNewDefinitionsAllowed || !this.rxOverlayService.isCustomizationEnabled('allowOverlay', viewModel)\n    ),\n    distinctUntilChanged(),\n    shareReplay(1)\n  );\n\n  // Actions Stream\n  viewDefinitionLoadError$ = this.actions$.pipe(ofType(ViewDesignerActions.viewDefinitionLoadError));\n\n  viewDefinitionSaveSuccess$ = this.actions$.pipe(ofType(ViewDesignerActions.viewDefinitionSaveSuccess));\n\n  initViewDesigner$ = this.actions$.pipe(ofType(ViewDesignerActions.initViewDesigner));\n  private destroyViewDesignerSubject = new Subject();\n  destroyViewDesigner$ = this.destroyViewDesignerSubject.asObservable();\n  viewModelsInitialized$ = this.actions$.pipe(ofType(ViewDesignerActions.viewModelsInitialized));\n  areViewModelsReady$ = this.store$.select(areViewModelsReadySelector);\n  viewCommonDataDictionaryState$ = this.rxViewDataDictionaryService.viewCommon$;\n  componentsCommonDataDictionaryState$ = this.rxViewDataDictionaryService.componentsCommon$;\n  actionsDataDictionaryState$ = this.rxViewDataDictionaryService.actionsOutput$;\n  settablePropertiesDataDictionaryState$ = this.rxViewDataDictionaryService.settableProperties$;\n\n  private settablePropertiesDataDictionarySubject = new Subject<ISetSettablePropertiesDataDictionaryItem>();\n\n  constructor(\n    private dispatcher: ViewDesignerDispatcher,\n    private store$: Store<any>,\n    private actions$: Actions,\n    private rxViewDesignerInspectorService: RxViewDesignerInspectorService,\n    private rxGuidService: RxGuidService,\n    private rxViewDataDictionaryBuilderService: RxViewDataDictionaryBuilderService,\n    private rxViewDataDictionaryService: RxViewDataDictionaryStoreService,\n    private rxOverlayService: RxOverlayService\n  ) {\n    // for performance reasons grouping actions before sending them to store\n    merge(\n      this.settablePropertiesDataDictionarySubject.pipe(\n        bufferToggle(this.initViewDesigner$, (v) => this.viewModelsInitialized$)\n      ),\n      this.viewModelsInitialized$.pipe(\n        switchMap(() =>\n          this.settablePropertiesDataDictionarySubject.pipe(\n            map((data) => [data]),\n            takeUntil(this.initViewDesigner$)\n          )\n        )\n      )\n    ).subscribe((items) => {\n      this.rxViewDataDictionaryService.setSettablePropertiesDataDictionary(items);\n    });\n  }\n\n  getComponentModel<TPropertiesByName>(guid: string): Observable<IViewComponentDesignModel<TPropertiesByName>> {\n    return this.store$.select(viewComponentModelSelector, { guid });\n  }\n\n  initViewDesigner(payload: IInitViewDesignerActionPayload): void {\n    this.dispatcher.dispatch(\n      ViewDesignerActions.initViewDesigner({\n        payload\n      })\n    );\n  }\n\n  destroyViewDesigner(): void {\n    this.destroyViewDesignerSubject.next();\n    // trigger action after subject to allow store to be cleared after every component is destroyed\n    // and its streams are completed\n    this.dispatcher.dispatch(ViewDesignerActions.destroyViewDesigner());\n  }\n\n  selectComponent(guid: string): void {\n    this.dispatcher.dispatch(ViewComponentsActions.selectComponent({ guid }));\n  }\n\n  insertComponent(payload: {\n    data: IViewComponentDropData;\n    insertIndex: number;\n    outletName: string;\n    targetGuid: string;\n  }): void {\n    this.dispatcher.dispatch(\n      ViewComponentsActions.insertComponent({\n        columnIndex: isFinite(payload.data && payload.data.columnIndex) ? payload.data.columnIndex : 0,\n        ...payload,\n        data: {\n          guid: payload.data.draggedViewComponentGuid,\n          type: payload.data.draggedViewComponentDescriptor.type,\n          initialPropertiesByName: payload.data.initialPropertiesByName\n        }\n      })\n    );\n  }\n\n  selectInspectorTab(payload: { tabId: number }): void {\n    this.dispatcher.dispatch(ViewDesignerActions.selectInspectorTab(payload));\n  }\n\n  generateViewDefinition(payload?: any): void {\n    this.dispatcher.dispatch(ViewDesignerActions.generateViewDefinition({ payload }));\n  }\n\n  updateComponentProperties(guid: string, componentProperties: IPlainObject): void {\n    this.dispatcher.dispatch(\n      ViewComponentsActions.updateComponentModel({\n        payload: [\n          {\n            guid,\n            partialModel: {\n              propertiesByName: componentProperties\n            }\n          }\n        ]\n      })\n    );\n  }\n\n  updateComponentModel(guid: string, payload: Partial<IViewComponentDesignModel>): void {\n    this.dispatcher.dispatch(\n      ViewComponentsActions.updateComponentModel({\n        payload: [\n          {\n            guid,\n            partialModel: payload\n          }\n        ]\n      })\n    );\n  }\n\n  getComponentProperties<TPropertiesByName = IPlainObject>(\n    guid: string\n  ): Observable<TPropertiesByName & { name?: string }> {\n    return this.store$.select(componentPropertiesByNameSelector, { guid });\n  }\n\n  getComponentPropertyValue<TPropertyName extends keyof TPropertiesByName, TPropertiesByName = IPlainObject>(\n    guid: string,\n    propertyName: TPropertyName\n  ): Observable<TPropertiesByName[TPropertyName]> {\n    return this.store$.select(componentPropertiesByNameSelector, { guid, propertyName: propertyName as string }).pipe(\n      withLatestFrom(this.getComponentModel(guid)),\n      switchMap(([value, model]) => (model ? of(value) : EMPTY))\n    );\n  }\n\n  getComponentType(guid: string): Observable<string> {\n    return this.store$.select(componentTypeSelector, { guid });\n  }\n\n  getComponentPermissions(guid: string): Observable<IViewDefinitionPermission[]> {\n    return this.store$.select(componentPermissionsSelector, { guid });\n  }\n\n  getComponentLayout(guid: string): Observable<IViewLayout> {\n    return this.store$.select(componentLayoutSelector, { guid });\n  }\n\n  updateSelectedComponentProperties(properties: IPlainObject): void {\n    this.selectedComponentGuid$.pipe(take(1)).subscribe((guid) => {\n      this.updateComponentProperties(guid, properties);\n    });\n  }\n\n  saveViewDefinition(payload?: any): void {\n    this.dispatcher.dispatch(ViewDesignerActions.saveViewDefinition({ payload }));\n  }\n\n  updateViewProperties(properties: Partial<IViewDesignModel>): void {\n    this.dispatcher.dispatch(ViewDesignerActions.updateViewModel({ payload: properties }));\n  }\n\n  setViewProperties(properties: IViewDesignModel): void {\n    this.dispatcher.dispatch(ViewDesignerActions.setViewModel({ payload: properties }));\n  }\n\n  getViewPropertyValue<T extends keyof IViewDesignModel>(propertyName: T): Observable<IViewDesignModel[T]> {\n    return this.store$.select(viewModelPropertyValueSelector, { propertyName }).pipe(\n      switchMapTo(\n        this.viewModel$.pipe(\n          map((model) => model[propertyName]),\n          take(1)\n        )\n      ),\n      distinctUntilChanged()\n    );\n  }\n\n  runPreview(): void {\n    this.dispatcher.dispatch(ViewDesignerActions.runPreview());\n  }\n\n  clearCanvas(): void {\n    this.dispatcher.dispatch(ViewDesignerActions.clearCanvas());\n  }\n\n  setComponentInspector(guid: string, inspectorConfig: IViewDesignerInspectorConfig): void {\n    this.rxViewDesignerInspectorService.set(guid, inspectorConfig);\n  }\n\n  setValidationIssues(guid: string, issues: IViewComponentDesignValidationIssue[]): void {\n    this.dispatcher.dispatch(ViewComponentsActions.setValidationIssues({ guid, issues }));\n  }\n\n  setExpressionValidationIssues(issues: { [guid: string]: IViewComponentDesignValidationIssue[] }): void {\n    this.dispatcher.dispatch(ViewComponentsActions.setExpressionValidationIssues({ issues }));\n  }\n\n  setViewInspectorConfig(inspectorConfig: IViewDesignerInspectorConfig): void {\n    this.viewModelGuid$.pipe(take(1)).subscribe((guid) => {\n      this.setComponentInspector(guid, inspectorConfig);\n    });\n  }\n\n  removeViewComponents(guids: string[], selectParent?: boolean): void {\n    if (guids.length) {\n      this.dispatcher.dispatch(ViewComponentsActions.removeComponents({ guids, selectParent }));\n    }\n  }\n\n  setComponentSettablePropertiesDataDictionary(\n    guid: string,\n    componentName: string,\n    properties: IViewComponentDesignSettablePropertiesDataDictionary\n  ): void {\n    this.settablePropertiesDataDictionarySubject.next({\n      guid,\n      componentName,\n      dataDictionary: this.rxViewDataDictionaryBuilderService.getSettablePropertiesDataDictionary(properties)\n    });\n  }\n\n  setComponentCommonDataDictionaryBranch(guid: string, dataDictionaryBranch: IDataDictionaryBranch): void {\n    this.rxViewDataDictionaryService.setCommonDataDictionaryBranch(\n      guid,\n      dataDictionaryBranch\n        ? this.rxViewDataDictionaryBuilderService.getComponentCommonDataDictionaryBranch(dataDictionaryBranch)\n        : null\n    );\n  }\n\n  setViewCommonDataDictionaryBranch(dataDictionaryBranch: IDataDictionaryBranch): void {\n    this.rxViewDataDictionaryService.setViewCommonDataDictionaryBranch(dataDictionaryBranch);\n  }\n\n  removeAllActionDataDictionaryBranches(): void {\n    this.rxViewDataDictionaryService.removeAllActionOutputDataDictionaryBranches();\n  }\n\n  removeActionDataDictionaryBranch(actionGuid: string): void {\n    this.rxViewDataDictionaryService.removeActionOutputDataDictionaryBranch(actionGuid);\n  }\n\n  setActionDataDictionaryBranch(\n    actionGuid: string,\n    index: number,\n    actionName: string,\n    dataDictionary: IViewActionOutputDataDictionary = null\n  ): void {\n    this.rxViewDataDictionaryService.setActionOutputDataDictionaryBranch(\n      actionGuid,\n      index,\n      this.rxViewDataDictionaryBuilderService.getActionOutputDataDictionaryBranch(actionName, dataDictionary)\n    );\n  }\n\n  updateActionDataDictionaryBranchOrder(actions: { [guid: string]: number }): void {\n    this.rxViewDataDictionaryService.updateActionOutputDataDictionaryBranchOrder(actions);\n  }\n\n  getChildComponentGuids(\n    parentComponentGuid,\n    recursive = false,\n    filterPredicate?: (component: IViewComponentDesignData) => boolean\n  ): Observable<string[]> {\n    // watch for layout and childDataComponentGuids properties change\n    // TODO: store child component guids separately as a final result from layout and childDataComponentGuids\n    return combineLatest([\n      this.store$.select(componentLayoutSelector, { guid: parentComponentGuid }),\n      this.store$.select(childDataComponentGuidsSelector, { guid: parentComponentGuid })\n    ]).pipe(\n      // get component model with actual data where layout and childDataComponentGuids are already updated\n      switchMap(() => this.getComponentModel(parentComponentGuid).pipe(take(1))),\n      switchMap((model) =>\n        model\n          ? of(\n              compact([\n                ...(model.layout ? RxViewLayout.getViewLayoutChildGuids(model.layout) : []),\n                ...(model.childDataComponentGuids || [])\n              ])\n            )\n          : EMPTY\n      ),\n      switchMap((guids) =>\n        guids.length && recursive\n          ? combineLatest(guids.map((guid) => this.getChildComponentGuids(guid, true))).pipe(\n              map(flatten),\n              map((nestedGuids) => [...nestedGuids, ...guids])\n            )\n          : of(guids)\n      ),\n      switchMap((guids) =>\n        guids.length\n          ? this.viewComponentModels$.pipe(\n              map((models) => {\n                // The model of a removed component may be already unavailable, but the GUID may still be there.\n                // This can happen when multiple nested components are removed from different\n                // parent containers e.g. using record editor field selector dialog component.\n                // In this case, we will get two observable emits for each removed component.\n                // TODO: enhance getFlattenChildComponentGuids logic to reach a single observable emit.\n                let availableComponentGuids = guids.filter((guid) => models[guid]);\n\n                if (filterPredicate) {\n                  availableComponentGuids = availableComponentGuids.filter((guid) =>\n                    filterPredicate({\n                      type: models[guid].type,\n                      guid: models[guid].guid,\n                      data: models[guid].propertiesByName\n                    })\n                  );\n                }\n\n                return availableComponentGuids;\n              }),\n              take(1)\n            )\n          : of(guids)\n      )\n    );\n  }\n\n  getChildComponents<TPropertiesByName = IPlainObject>(\n    parentComponentGuid: string,\n    filterPredicate?: (component: IViewComponentDesignData) => boolean\n  ): Observable<IViewComponentDesignData<TPropertiesByName>[]> {\n    return this.getChildComponentGuids(parentComponentGuid, false, filterPredicate).pipe(\n      switchMap((guids) =>\n        guids.length\n          ? combineLatest(\n              guids.map((guid) =>\n                this.getComponentProperties(guid).pipe(\n                  withLatestFrom(this.getComponentModel(guid)),\n                  switchMap(([props, model]) =>\n                    model\n                      ? of({\n                          type: model.type,\n                          data: props,\n                          guid\n                        })\n                      : EMPTY\n                  )\n                )\n              )\n            )\n          : of([])\n      )\n    );\n  }\n\n  getComponent<TChildComponentDesignProperties>(\n    guid: string\n  ): Observable<IViewComponentDesignData<TChildComponentDesignProperties>> {\n    return this.getComponentModel<TChildComponentDesignProperties>(guid).pipe(\n      map((model) =>\n        model\n          ? {\n              data: model.propertiesByName,\n              guid: model.guid,\n              type: model.type\n            }\n          : null\n      )\n    );\n  }\n\n  getComponentsByType<TComponentDesignProperties>(\n    type: string\n  ): Observable<IViewComponentDesignData<TComponentDesignProperties>[]> {\n    return this.viewComponentModels$.pipe(\n      map((models) =>\n        _filter(models, { type }).map((model) => ({\n          guid: model.guid,\n          data: model.propertiesByName as TComponentDesignProperties,\n          type: model.type\n        }))\n      )\n    );\n  }\n\n  getChildComponentTree(parentComponentGuid: string): Observable<IViewComponentDesignData[]> {\n    return this.viewComponentModels$.pipe(\n      map((viewComponentModels) => {\n        const getChildrenData = (model: IViewComponentDesignModel) =>\n          getChildGuidsFromModel(model).reduce((res, childGuid) => {\n            if (viewComponentModels[childGuid]) {\n              res.push({\n                guid: childGuid,\n                data: viewComponentModels[childGuid].propertiesByName,\n                type: viewComponentModels[childGuid].type,\n                children: getChildrenData(viewComponentModels[childGuid])\n              });\n            }\n\n            return res;\n          }, []);\n\n        return viewComponentModels[parentComponentGuid]\n          ? getChildrenData(viewComponentModels[parentComponentGuid])\n          : [];\n      })\n    );\n  }\n\n  getParentComponentGuid(guid: string, componentType?: string): Observable<string> {\n    return this.store$\n      .select(parentComponentModelGuidSelector, { guid })\n      .pipe(\n        switchMap((parentGuid) =>\n          parentGuid && componentType\n            ? this.store$\n                .select(componentTypeSelector, { guid: parentGuid })\n                .pipe(\n                  switchMap((parentComponentType) =>\n                    parentComponentType === componentType\n                      ? of(parentGuid)\n                      : this.getParentComponentGuid(parentGuid, componentType)\n                  )\n                )\n            : of(parentGuid || null)\n        )\n      );\n  }\n\n  setChildren(guid: string, data: IViewComponentDesignSetPayload[]): void {\n    this.dispatcher.dispatch(\n      ViewComponentsActions.setChildComponents({\n        payload: {\n          guid,\n          data\n        }\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ViewDesignerFacade } from '../+state/view-designer.facade';\nimport { distinctUntilChanged, filter, map, shareReplay, withLatestFrom } from 'rxjs/operators';\nimport { combineLatest, Observable } from 'rxjs';\nimport { IDataDictionary, IDataDictionaryBranch, RxDataDictionaryUtils } from '@helix/platform/shared/api';\nimport { compact, filter as _filter, find, flow, get, isEqual, map as _map, take } from 'lodash';\nimport { getChildGuidsFromModel } from '../core/layout-helpers';\nimport { RxViewDataDictionaryBuilderService } from '../core/view-data-dictionary-builder.service';\nimport { RX_EXPRESSION_FUNCTIONS, RxViewComponentRegistryService, RxViewLayout } from '@helix/platform/view/api';\nimport { IViewDesignModelState } from '../interfaces/view-design-model-state.interface';\nimport { IViewDesignerSettablePropertiesDataDictionaryState } from '../interfaces/view-designer-settable-properties-data-dictionary.state';\nimport { RxObjectUtilsService } from '@helix/platform/utils';\nimport { IViewDesignerViewCommonDataDictionaryState } from '../interfaces/view-designer-view-data-dictionary-state.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDataDictionaryService {\n  private componentsCommonDataDictionaryStateClone$ = this.viewDesignerFacade.componentsCommonDataDictionaryState$.pipe(\n    map((componentsDataDictionaryState) =>\n      componentsDataDictionaryState ? this.rxObjectUtilsService.cloneDeep(componentsDataDictionaryState) : {}\n    ),\n    shareReplay(1)\n  );\n\n  private viewCommonDataDictionaryStateClone$ = this.viewDesignerFacade.viewCommonDataDictionaryState$.pipe(\n    filter<IViewDesignerViewCommonDataDictionaryState>(Boolean),\n    map((viewDataDictionary) => this.rxObjectUtilsService.cloneDeep(viewDataDictionary)),\n    shareReplay(1)\n  );\n\n  commonDataDictionary$ = this.getCommonDataDictionary();\n\n  settablePropertiesDataDictionary$ = this.viewDesignerFacade.settablePropertiesDataDictionaryState$.pipe(\n    withLatestFrom(this.viewDesignerFacade.viewDesignerModelState$),\n    map(([settablePropsDataDictionaryState, viewDesignerModelState]) =>\n      this.rxObjectUtilsService.cloneDeep(\n        this.getSettablePropsDataDictionary(settablePropsDataDictionaryState, viewDesignerModelState)\n      )\n    )\n  );\n\n  constructor(\n    private viewDesignerFacade: ViewDesignerFacade,\n    private rxViewDataDictionaryBuilderService: RxViewDataDictionaryBuilderService,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private rxObjectUtilsService: RxObjectUtilsService,\n    private rxDataDictionaryUtils: RxDataDictionaryUtils\n  ) {}\n\n  getActionDataDictionary(guid: string): Observable<IDataDictionary> {\n    return combineLatest([this.viewDesignerFacade.actionsDataDictionaryState$, this.getCommonDataDictionary()]).pipe(\n      map(([actionsDataDictionaryState, commonDataDictionary]) => {\n        const currentActionData = find(actionsDataDictionaryState, { guid });\n\n        return [\n          {\n            label: 'Actions',\n            children: currentActionData\n              ? flow(\n                  (branches) => take(branches, currentActionData.index),\n                  (branches) => _map(branches, 'dataDictionaryBranch'),\n                  compact,\n                  (branches) => _filter(branches, (branch) => branch.children?.length),\n                  (branches) => this.rxObjectUtilsService.cloneDeep(branches)\n                )(actionsDataDictionaryState)\n              : []\n          },\n          ...commonDataDictionary\n        ];\n      }),\n      // TODO: performance\n      distinctUntilChanged(isEqual)\n    );\n  }\n\n  getComponentCommonDataDictionary(guid: string): Observable<IDataDictionaryBranch> {\n    return this.componentsCommonDataDictionaryStateClone$.pipe(map((state) => state[guid]));\n  }\n\n  getCommonDataDictionary(componentBranchToReplace?: {\n    [guid: string]: IDataDictionaryBranch;\n  }): Observable<IDataDictionary> {\n    return combineLatest([\n      this.viewCommonDataDictionaryStateClone$,\n      this.componentsCommonDataDictionaryStateClone$.pipe(\n        map((componentsDataDictionaryState) =>\n          Object.values(\n            componentBranchToReplace\n              ? { ...componentsDataDictionaryState, ...componentBranchToReplace }\n              : componentsDataDictionaryState\n          )\n        )\n      )\n    ]).pipe(\n      map(([viewDataDictionaryBranch, componentDataDictionaryBranches]) => [\n        {\n          label: 'General',\n          children: [\n            {\n              label: 'Current user',\n              icon: 'd-icon-dollar',\n              expression: '${keywords.user}'\n            },\n            {\n              label: 'New line',\n              icon: 'd-icon-dollar',\n              expression: '${keywords.newLine}'\n            }\n          ]\n        },\n        {\n          label: 'Functions',\n          children: this.rxDataDictionaryUtils.getFunctionsDataDictionaryBranch(RX_EXPRESSION_FUNCTIONS)\n        },\n        {\n          ...viewDataDictionaryBranch,\n          children: [\n            { label: 'Components', children: compact(componentDataDictionaryBranches), expanded: true },\n            ...viewDataDictionaryBranch.children\n          ]\n        }\n      ])\n    );\n  }\n\n  private getSettablePropsDataDictionary(settablePropsDataDictionaryState, viewDesignerModelState): IDataDictionary {\n    return getChildGuidsFromModel(viewDesignerModelState.viewDesignModel)\n      .map((guid) =>\n        this.getSettablePropsDataDictionaryBranch(guid, viewDesignerModelState, settablePropsDataDictionaryState, true)\n      )\n      .filter(Boolean);\n  }\n\n  private getSettablePropsDataDictionaryBranch(\n    guid: string,\n    modelState: IViewDesignModelState,\n    settablePropsState: IViewDesignerSettablePropertiesDataDictionaryState,\n    expanded = false\n  ): IDataDictionaryBranch {\n    const componentPropsState = settablePropsState[guid];\n    const model = modelState.viewComponentDesignModels[guid];\n    const descriptor = this.rxViewComponentRegistryService.get(model.type);\n    const childGuids = descriptor.outlets && model.layout ? RxViewLayout.getViewLayoutChildGuids(model.layout) : null;\n\n    const componentsDataDictionary = _map(childGuids, (componentGuid) =>\n      this.getSettablePropsDataDictionaryBranch(componentGuid, modelState, settablePropsState)\n    ).filter(Boolean);\n\n    const propsDataDictionary = get(componentPropsState, 'dataDictionary', []);\n\n    if (componentsDataDictionary.length || propsDataDictionary.length) {\n      return {\n        label: componentPropsState?.componentName || descriptor.name,\n        expanded,\n        children:\n          componentsDataDictionary.length && propsDataDictionary.length\n            ? [\n                {\n                  label: 'Components',\n                  children: componentsDataDictionary\n                },\n                {\n                  label: 'Properties',\n                  children: propsDataDictionary\n                }\n              ]\n            : componentsDataDictionary.length\n            ? componentsDataDictionary\n            : propsDataDictionary\n      };\n    }\n  }\n}\n","import {\n  ExpressionOperatorRowsByGroup,\n  ExpressionOperatorGroup,\n  IExpressionConfiguratorDefaultPropertyConfig,\n  RxExpressionConfigurator\n} from '@helix/platform/shared/api';\nimport { of } from 'rxjs';\nimport { Injector } from '@angular/core';\nimport { IExpressionEvaluator, RxExpressionHelperService } from '@helix/platform/view/api';\n\nexport abstract class RxViewExpressionConfigurator extends RxExpressionConfigurator {\n  private rxExpressionHelperService = this.injector.get<RxExpressionHelperService>(RxExpressionHelperService);\n\n  abstract getExpressionEvaluator(propertyName: string): IExpressionEvaluator;\n\n  constructor(protected injector: Injector) {\n    super();\n  }\n\n  getDefaultConfig(): IExpressionConfiguratorDefaultPropertyConfig {\n    return {\n      ...super.getDefaultConfig(),\n      dataDictionary$: this.commonDataDictionary$,\n      operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.AllClient),\n\n      validateExpression: (propertyName, expression) => {\n        let isValid = true;\n\n        const expressionEvaluator = this.getExpressionEvaluator(propertyName);\n\n        try {\n          expressionEvaluator.parseExpression(this.rxExpressionHelperService.prepare(expression));\n        } catch (e) {\n          isValid = false;\n        }\n\n        return of(isValid);\n      }\n    };\n  }\n}\n","import { Injector } from '@angular/core';\nimport { isFunction } from 'lodash';\nimport { switchMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport {\n  IExpressionEvaluator,\n  IViewDesignerComponentModel,\n  RxDefaultExpressionEvaluatorService,\n  RxViewComponentRegistryService\n} from '@helix/platform/view/api';\nimport { RxViewDataDictionaryService } from '../data-dictionary/view-data-dictionary.service';\nimport { RxViewExpressionConfigurator } from './view-expression-configurator.class';\nimport {\n  IViewComponentDesignCommonDataDictionary,\n  IViewComponentDesignCommonDataDictionaryBranch\n} from '../public-interfaces';\n\nexport class RxViewComponentExpressionConfigurator extends RxViewExpressionConfigurator {\n  private rxDefaultExpressionEvaluatorService = this.injector.get<RxDefaultExpressionEvaluatorService>(\n    RxDefaultExpressionEvaluatorService\n  );\n\n  private rxViewDataDictionaryService = this.injector.get<RxViewDataDictionaryService>(RxViewDataDictionaryService);\n\n  private rxViewComponentRegistryService = this.injector.get<RxViewComponentRegistryService>(\n    RxViewComponentRegistryService\n  );\n\n  readonly commonDataDictionary$ = this.rxViewDataDictionaryService.commonDataDictionary$;\n\n  constructor(\n    protected injector: Injector,\n    protected componentGuid: string,\n    protected componentModel: IViewDesignerComponentModel,\n    protected componentType?: string\n  ) {\n    super(injector);\n  }\n\n  getExpressionEvaluator(propertyName: string): IExpressionEvaluator {\n    const propertyDescriptor =\n      this.componentType &&\n      this.rxViewComponentRegistryService\n        .get(this.componentType)\n        .properties.find((property) => property.name === propertyName);\n\n    return isFunction(propertyDescriptor?.evaluatorService?.parseExpression)\n      ? propertyDescriptor.evaluatorService\n      : this.rxDefaultExpressionEvaluatorService;\n  }\n\n  getCommonDataDictionary(\n    componentBranchToReplace$?: Observable<IViewComponentDesignCommonDataDictionaryBranch>,\n    componentGuid = this.componentGuid\n  ): Observable<IViewComponentDesignCommonDataDictionary> {\n    return componentBranchToReplace$\n      ? componentBranchToReplace$.pipe(\n          switchMap((dataDictionary) =>\n            this.rxViewDataDictionaryService.getCommonDataDictionary({\n              [componentGuid]: dataDictionary\n            })\n          )\n        )\n      : this.commonDataDictionary$;\n  }\n\n  getComponentCommonDataDictionary(guid?: string): Observable<IViewComponentDesignCommonDataDictionaryBranch> {\n    return this.rxViewDataDictionaryService.getComponentCommonDataDictionary(guid || this.componentGuid);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ViewDesignerFacade } from '../../+state/view-designer.facade';\nimport { combineLatest, ReplaySubject } from 'rxjs';\nimport {\n  ICustomizationControlValue,\n  ICustomizationOptions,\n  IFormWidgetComponent,\n  RxOverlayService\n} from '@helix/platform/shared/api';\nimport { takeUntil, withLatestFrom } from 'rxjs/operators';\n\n@Component({\n  selector: 'rx-view-customization-options',\n  templateUrl: './view-customization-options.component.html'\n})\nexport class RxViewCustomizationOptionsComponent implements OnInit, OnDestroy, IFormWidgetComponent {\n  @Input()\n  options;\n\n  value: ICustomizationControlValue;\n  controlOptions: ICustomizationOptions;\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  constructor(\n    private viewDesignerFacade: ViewDesignerFacade,\n    private rxOverlayService: RxOverlayService,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit(): void {\n    combineLatest([\n      this.viewDesignerFacade.getViewPropertyValue('allowOverlay'),\n      this.viewDesignerFacade.getViewPropertyValue('scope'),\n      this.viewDesignerFacade.getViewPropertyValue('overlayGroupId'),\n      this.viewDesignerFacade.getViewPropertyValue('overlayDescriptor'),\n      this.viewDesignerFacade.getViewPropertyValue('lastUpdateTime')\n    ])\n      .pipe(withLatestFrom(this.viewDesignerFacade.viewModel$), takeUntil(this.destroyed$))\n      .subscribe(([[allowOverlay, scope, overlayGroupId, overlayDescriptor, lastUpdateTime], viewModel]) => {\n        this.controlOptions = {\n          allowOverlay,\n          scope,\n          overlayGroupId,\n          overlayDescriptor,\n          isDisabled: !this.rxOverlayService.isCustomizationEnabled('allowOverlay', viewModel),\n          definitionTypeDisplayName: this.translateService.instant('com.bmc.arsys.rx.client.view-definition.label').toLowerCase()\n        };\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  setCustomization(customizationOptions: ICustomizationControlValue): void {\n    this.viewDesignerFacade.updateViewProperties(customizationOptions);\n  }\n}\n","<rx-scope-customization-control\n  [options]=\"controlOptions\"\n  [(ngModel)]=\"value\"\n  (ngModelChange)=\"setCustomization($event)\"\n></rx-scope-customization-control>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IFormBuilderEvent, IFormWidgetComponent, IPlainObject } from '@helix/platform/shared/api';\nimport { combineLatest, Observable } from 'rxjs';\nimport { ViewDesignerFacade } from '../../+state/view-designer.facade';\nimport { map } from 'rxjs/operators';\nimport { IRevertCustomizationOptions } from '@helix/platform/shared/components';\n\n@Component({\n  selector: 'rx-view-revert-customization',\n  templateUrl: './view-revert-customization.component.html'\n})\nexport class RxViewRevertCustomizationComponent implements IFormWidgetComponent {\n  @Input()\n  options: IPlainObject;\n\n  @Input()\n  isDisabled: boolean;\n\n  @Output()\n  events: EventEmitter<IFormBuilderEvent> = new EventEmitter();\n\n  controlOptions$: Observable<IRevertCustomizationOptions> = combineLatest([\n    this.viewDesignerFacade.getViewPropertyValue('allowOverlay'),\n    this.viewDesignerFacade.getViewPropertyValue('scope'),\n    this.viewDesignerFacade.getViewPropertyValue('overlayGroupId'),\n    this.viewDesignerFacade.getViewPropertyValue('overlayDescriptor')\n  ]).pipe(\n    map(([allowOverlay, scope, overlayGroupId, overlayDescriptor]) => ({\n      allowOverlay,\n      scope,\n      overlayGroupId,\n      overlayDescriptor\n    }))\n  );\n\n  constructor(private viewDesignerFacade: ViewDesignerFacade) {}\n}\n","<rx-revert-customization\n  [options]=\"controlOptions$ | async\"\n  [isDisabled]=\"isDisabled\"\n  (events)=\"events.emit($event)\"\n></rx-revert-customization>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RxViewRevertCustomizationComponent } from './view-revert-customization.component';\nimport { RxRevertCustomizationModule } from '@helix/platform/shared/components';\n\n@NgModule({\n  declarations: [RxViewRevertCustomizationComponent],\n  imports: [CommonModule, RxRevertCustomizationModule]\n})\nexport class RxViewRevertCustomizationModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  IExpressionEvaluator,\n  RxDefaultExpressionEvaluatorService,\n  RxDefaultExpressionValidatorService\n} from '@helix/platform/view/api';\nimport { RxStringService } from '@helix/platform/utils';\nimport { Observable, of } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { isEqual } from 'lodash';\nimport { ExpressionParserToken, RxExpressionParserService } from '@helix/platform/shared/api';\nimport { IViewComponentDesignValidationIssue } from '../public-interfaces/view-component-design-validation-issue.interface';\nimport { ViewDesignerFacade } from '../+state/view-designer.facade';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewExpressionValidatorService {\n  constructor(\n    private rxDefaultExpressionValidatorService: RxDefaultExpressionValidatorService,\n    private rxDefaultExpressionEvaluatorService: RxDefaultExpressionEvaluatorService,\n    private rxStringService: RxStringService,\n    private rxExpressionParserService: RxExpressionParserService,\n    private viewDesignerFacade: ViewDesignerFacade\n  ) {}\n\n  validate(\n    expression: string,\n    propertyName: string,\n    propertyLabel = this.rxStringService.prettify(propertyName),\n    expressionEvaluator: IExpressionEvaluator = this.rxDefaultExpressionEvaluatorService\n  ): Observable<IViewComponentDesignValidationIssue[]> {\n    let issues$ = of([]);\n\n    if (this.rxDefaultExpressionValidatorService.isValid(expression, expressionEvaluator)) {\n      if (this.rxStringService.isNonEmptyString(expression)) {\n        const referencedComponentGuidsSet = new Set<string>();\n\n        this.rxExpressionParserService.parse(expression, (token, expressionFragment) => {\n          if (token === ExpressionParserToken.RxExpression || token === ExpressionParserToken.SingleQuoteRxExpression) {\n            // Extract <ID> from ${view.components.<ID>.<Path>}\n            const result = /\\${view\\.components\\.([0-9a-z-]+)\\..+}/.exec(expressionFragment);\n\n            if (result && result[1]) {\n              referencedComponentGuidsSet.add(result[1]);\n            }\n          }\n\n          return expressionFragment;\n        });\n\n        if (referencedComponentGuidsSet.size) {\n          const referencedComponentGuids = Array.from(referencedComponentGuidsSet);\n\n          issues$ = this.viewDesignerFacade.allComponentGuids$.pipe(\n            map((guids) => referencedComponentGuids.filter((guid) => !guids.has(guid))),\n            distinctUntilChanged(isEqual),\n            map((guids) =>\n              guids.map(() => ({\n                type: 'error',\n                description: 'Expression references a non-existent view component.',\n                propertyName\n              }))\n            )\n          );\n        }\n      }\n    } else {\n      issues$ = of([\n        {\n          type: 'error',\n          description: `${propertyLabel} must be a valid expression.`,\n          propertyName\n        }\n      ]);\n    }\n\n    return issues$;\n  }\n}\n","import { Injectable, Injector, OnDestroy } from '@angular/core';\nimport {\n  concatMapTo,\n  distinctUntilChanged,\n  filter,\n  first,\n  map,\n  shareReplay,\n  skip,\n  switchMap,\n  switchMapTo,\n  take,\n  takeUntil,\n  withLatestFrom\n} from 'rxjs/operators';\nimport { compact, find, findIndex, flatten, flow, isEmpty, isEqual, map as _map, uniq } from 'lodash';\nimport {\n  IViewDefinition,\n  RX_VIEW_DEFINITION,\n  RxViewComponentRegistryService,\n  RxViewComponentType,\n  RxViewDefinitionCacheService,\n  RxViewDefinitionParserService\n} from '@helix/platform/view/api';\nimport { RxGuidService, RxStringService } from '@helix/platform/utils';\nimport { IViewComponentDesignValidationIssue, IViewDesignerInspectorConfig } from '../public-interfaces';\nimport { validateCssClassName, validateCssClassNames } from '../core/validation-helpers';\nimport { IViewComponentDesignModels } from '../interfaces/view-component-design-models.interface';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport {\n  IListFormControlOptions,\n  IPermissionEditorComponentOptions,\n  ISelectFormControlOptions,\n  ISelectOption,\n  ITagsFormControlOptions,\n  ITextareaFormControlOptions,\n  ITextFormControlOptions,\n  ListFormControlComponent,\n  RxDefinitionPickerComponent,\n  RxDefinitionPickerType,\n  RxPermissionEditorComponent,\n  SelectFormControlComponent,\n  TagsFormControlComponent,\n  TextareaFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport {\n  IDataDictionaryBranch,\n  IFormSectionBuilderConfig,\n  RxBundleCacheService,\n  RxDefinitionNameService,\n  RxOverlayService,\n  Tooltip\n} from '@helix/platform/shared/api';\nimport { ViewDesignerFacade } from '../+state/view-designer.facade';\nimport { getChildGuidsFromModel } from '../core/layout-helpers';\nimport * as ViewComponentActions from '../+state/view-component.actions';\nimport { ViewDesignerDispatcher } from '../+state/view-designer-dispatcher.service';\nimport { combineLatest, Observable, of, ReplaySubject } from 'rxjs';\nimport { RxViewExpressionValidatorService } from '../validation/view-expression-validator.service';\nimport { RxViewComponentExpressionConfigurator } from '../expression-configurator/view-component-expression-configurator.class';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxViewCustomizationOptionsComponent } from '../form-controls/view-customization-options-widget/view-customization-options.component';\nimport { RxViewRevertCustomizationComponent } from '../form-controls/view-revert-customization';\n\n@Injectable()\nexport class RxViewModel implements OnDestroy {\n  readonly expressionConfigurator = new RxViewComponentExpressionConfigurator(this.injector, null, this);\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  private allViewDefinitionNamesByBundleId$ = this.viewDesignerFacade.currentBundleId$.pipe(\n    filter<string>(Boolean),\n    switchMap((bundleId) =>\n      this.rxViewDefinitionCacheService\n        .getViewDefinitionNames(bundleId)\n        .pipe(map((names) => names.map((name) => this.rxDefinitionNameService.getDisplayNameForValidation(name))))\n    )\n  );\n\n  private targetExtensionContainerOptions$ = this.viewDesignerFacade\n    .getViewPropertyValue('targetViewDefinitionName')\n    .pipe(\n      switchMap((targetViewDefinitionName) =>\n        targetViewDefinitionName\n          ? this.getTargetExtensionContainerOptions(targetViewDefinitionName).pipe(take(1))\n          : of(null)\n      ),\n      shareReplay(1)\n    );\n\n  private targetViewDefinition$ = this.viewDesignerFacade.getViewPropertyValue('targetViewDefinitionName').pipe(\n    filter<string>(Boolean),\n    switchMap((targetViewDefinitionName) =>\n      this.rxViewDefinitionCacheService.getViewDefinition(targetViewDefinitionName)\n    )\n  );\n\n  constructor(\n    private injector: Injector,\n    private viewDesignerFacade: ViewDesignerFacade,\n    private rxStringService: RxStringService,\n    private rxOverlayService: RxOverlayService,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxModalService: RxModalService,\n    private rxViewDefinitionCacheService: RxViewDefinitionCacheService,\n    private rxViewDefinitionParserService: RxViewDefinitionParserService,\n    private rxGuidService: RxGuidService,\n    private viewDesignerDispatcher: ViewDesignerDispatcher,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxViewExpressionValidatorService: RxViewExpressionValidatorService\n  ) {\n    this.init();\n  }\n\n  private init(): void {\n    // Initial model and inspector configuration.\n    this.viewDesignerFacade.initViewDesigner$\n      .pipe(\n        concatMapTo(\n          this.viewDesignerFacade.viewModelsInitialized$.pipe(\n            switchMapTo(\n              combineLatest([\n                this.viewDesignerFacade.viewComponentModels$.pipe(\n                  map((viewComponentModels) => {\n                    const pageComponentModel = Object.values(viewComponentModels).find(\n                      (model) => model.type === RxViewComponentType.Page\n                    );\n\n                    return pageComponentModel\n                      ? viewComponentModels[pageComponentModel.childDataComponentGuids[0]].type\n                      : null;\n                  })\n                ),\n                this.viewDesignerFacade.viewModel$,\n                this.targetExtensionContainerOptions$\n              ]).pipe(take(1))\n            )\n          )\n        ),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(([componentType, viewModel, targetExtensionContainerOptions]) => {\n        this.viewDesignerFacade.updateViewProperties({\n          pageComponent: componentType\n        });\n\n        this.viewDesignerFacade.setViewInspectorConfig(\n          this.getInspector({ ...viewModel, pageComponent: componentType }, targetExtensionContainerOptions)\n        );\n      });\n\n    this.viewDesignerFacade.initViewDesigner$\n      .pipe(\n        switchMapTo(\n          this.targetExtensionContainerOptions$.pipe(\n            // Ignore initial property change.\n            skip(1),\n            withLatestFrom(this.viewDesignerFacade.viewModel$)\n          )\n        ),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(([options, viewModel]) => this.onTargetExtensionContainerOptionsChange(options, viewModel));\n\n    this.viewDesignerFacade.initViewDesigner$\n      .pipe(\n        switchMapTo(\n          this.viewDesignerFacade.getViewPropertyValue('pageComponent').pipe(\n            // Ignore initial property change.\n            skip(1),\n            switchMapTo(\n              combineLatest([\n                this.viewDesignerFacade.viewModel$,\n                this.viewDesignerFacade.viewComponentModels$,\n                this.targetExtensionContainerOptions$\n              ]).pipe(take(1))\n            )\n          )\n        ),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(([viewModel, viewComponentModels, targetExtensionContainerOptions]) =>\n        this.onPageComponentChange(viewModel, viewComponentModels, targetExtensionContainerOptions)\n      );\n\n    this.viewDesignerFacade.initViewDesigner$\n      .pipe(\n        switchMapTo(this.viewDesignerFacade.getViewPropertyValue('targetViewDefinitionName').pipe(skip(1))),\n        switchMap(() => this.viewDesignerFacade.viewComponentModels$.pipe(first())),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe((viewComponentModels) => {\n        if (!isEmpty(viewComponentModels)) {\n          this.viewDesignerFacade.clearCanvas();\n        }\n      });\n\n    this.viewDesignerFacade.initViewDesigner$\n      .pipe(\n        switchMapTo(\n          combineLatest([\n            this.viewDesignerFacade.getViewPropertyValue('styles').pipe(map(validateCssClassNames)),\n            this.validateDisplayName(),\n            this.validateInputParams(),\n            this.validateOutputParamExpressions(),\n            this.validateExtensionContainer()\n          ]).pipe(map(flatten), map(compact), withLatestFrom(this.viewDesignerFacade.viewModelGuid$))\n        ),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(([issues, guid]) => {\n        this.viewDesignerFacade.setValidationIssues(guid, issues);\n      });\n\n    this.viewDesignerFacade.initViewDesigner$\n      .pipe(switchMapTo(this.viewDesignerFacade.getViewPropertyValue('inputParams')), takeUntil(this.destroyed$))\n      .subscribe((inputParams) =>\n        this.viewDesignerFacade.setViewCommonDataDictionaryBranch(this.getViewCommonDataDictionary(inputParams))\n      );\n\n    this.viewDesignerFacade\n      .getViewPropertyValue('targetExtensionContainerGuid')\n      .pipe(\n        withLatestFrom(this.targetViewDefinition$),\n        map(([targetExtensionContainerGuid, targetViewDefinition]) =>\n          this.getTargetRecordDefinitionName(targetViewDefinition, targetExtensionContainerGuid)\n        ),\n        distinctUntilChanged(),\n        switchMapTo(this.viewDesignerFacade.viewComponentModels$.pipe(take(1))),\n        filter((viewComponentModels) => !isEmpty(viewComponentModels)),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => this.viewDesignerFacade.clearCanvas());\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  private getTargetExtensionContainerOptions(targetViewDefinitionName: string): Observable<ISelectOption[]> {\n    return this.rxViewDefinitionCacheService.getViewDefinition(targetViewDefinitionName).pipe(\n      map((viewDefinition) =>\n        this.rxViewDefinitionParserService\n          .getComponents(viewDefinition)\n          .filter(({ componentDefinition }) => componentDefinition.type === RxViewComponentType.ExtensionContainer)\n          .map(({ componentDefinition }) => ({\n            id: componentDefinition.guid,\n            name: componentDefinition.propertiesByName.name || componentDefinition.name\n          }))\n      )\n    );\n  }\n\n  private onTargetExtensionContainerOptionsChange(options: ISelectOption[], viewModel: IViewDesignModel): void {\n    this.viewDesignerFacade.setViewInspectorConfig(this.getInspector(viewModel, options));\n\n    // targetViewDefinitionName is not selected when options are not defined.\n    if (!options) {\n      this.viewDesignerFacade.updateViewProperties({\n        targetExtensionContainerGuid: null\n      });\n    } else if (options.length === 1) {\n      this.viewDesignerFacade.updateViewProperties({\n        targetExtensionContainerGuid: options[0].id\n      });\n    }\n  }\n\n  private onPageComponentChange(\n    viewModel: IViewDesignModel,\n    componentModels: IViewComponentDesignModels,\n    options: ISelectOption[]\n  ): void {\n    const pageComponentModel = find(componentModels, { type: RxViewComponentType.Page });\n    this.viewDesignerFacade.setViewInspectorConfig(this.getInspector(viewModel, options));\n\n    const actions = [];\n\n    if (viewModel.pageComponent) {\n      if (pageComponentModel) {\n        this.viewDesignerFacade.updateComponentModel(pageComponentModel.childDataComponentGuids[0], {\n          type: viewModel.pageComponent\n        });\n      } else {\n        const pageComponentGuid = this.rxGuidService.generate();\n\n        if (!isEmpty(componentModels)) {\n          this.viewDesignerFacade.removeViewComponents(getChildGuidsFromModel(viewModel));\n        }\n\n        actions.push(\n          ViewComponentActions.initializeComponentModels({\n            payload: [\n              {\n                componentModel: {\n                  guid: pageComponentGuid,\n                  resourceType: RX_VIEW_DEFINITION.resourceTypes.containerViewComponent,\n                  type: RxViewComponentType.Page,\n                  propertiesByName: {},\n                  parentGuid: viewModel.guid\n                },\n                insertIndex: 0,\n                columnIndex: 0,\n                outletName: RX_VIEW_DEFINITION.defaultOutletName\n              }\n            ]\n          }),\n          ViewComponentActions.initializeDataComponentModels({\n            payload: [\n              {\n                componentModel: {\n                  guid: this.rxGuidService.generate(),\n                  type: viewModel.pageComponent,\n                  resourceType: RX_VIEW_DEFINITION.resourceTypes.viewComponent,\n                  propertiesByName: {},\n                  parentGuid: pageComponentGuid\n                }\n              }\n            ]\n          })\n        );\n      }\n\n      this.viewDesignerFacade.updateViewProperties({\n        inputParams: [],\n        outputParams: []\n      });\n    } else if (pageComponentModel) {\n      this.viewDesignerFacade.removeViewComponents([pageComponentModel.guid]);\n    }\n\n    actions.forEach((action) => this.viewDesignerDispatcher.dispatch(action));\n  }\n\n  private getInspector(\n    viewDesignModel: IViewDesignModel,\n    targetExtensionContainerOptions: ISelectOption[] = []\n  ): IViewDesignerInspectorConfig {\n    const isExistingView = Boolean(viewDesignModel.lastUpdateTime);\n\n    const isCustomizationAllowed = isExistingView\n      ? this.rxOverlayService.isCustomizationEnabled('allowOverlay', viewDesignModel)\n      : true;\n\n    const availablePageComponents = this.rxViewComponentRegistryService\n      .getBundlePageComponents(this.rxBundleCacheService.bundleId)\n      .map((pageComponent) => ({\n        id: pageComponent.type,\n        name: pageComponent.name\n      }));\n\n    if (viewDesignModel.pageComponent && !this.rxViewComponentRegistryService.get(viewDesignModel.pageComponent)) {\n      availablePageComponents.unshift({\n        name: RX_VIEW_DEFINITION.unknownPageComponent.name,\n        id: viewDesignModel.pageComponent\n      });\n    }\n\n    const pageComponentControl = {\n      name: 'pageComponent',\n      component: SelectFormControlComponent,\n      options: {\n        label: 'Page component',\n        options: availablePageComponents,\n        beforeValueChange: (oldValue: string[], newValue: string[]) =>\n          this.viewDesignerFacade.viewModel$\n            .pipe(\n              take(1),\n              withLatestFrom(this.viewDesignerFacade.viewComponentModels$),\n              map(\n                ([viewModel, viewComponentModels]) =>\n                  !oldValue?.length &&\n                  newValue.length &&\n                  (viewModel.inputParams.length || viewModel.outputParams.length || !isEmpty(viewComponentModels))\n              )\n            )\n            .toPromise()\n            .then((isConfirmationRequired) =>\n              isConfirmationRequired\n                ? this.rxModalService.confirm({\n                    title: 'Warning',\n                    modalStyle: RX_MODAL.modalStyles.warning,\n                    message: 'The view canvas, input and output parameters will be cleared. Do you want to continue?'\n                  })\n                : true\n            ),\n        emptyOption: true\n      } as ISelectFormControlOptions\n    };\n\n    const extensionContainerControl = {\n      name: 'targetExtensionContainerGuid',\n      component: SelectFormControlComponent,\n      options: {\n        label: 'Extension container',\n        tooltip: new Tooltip(\n          `Select an extension container in the view to extend where record editor fields from this view will be injected.\n            The records defined for the view to extend and for this view must be associated one-to-one.`\n        ),\n        options: targetExtensionContainerOptions || [],\n        required: true,\n        beforeValueChange: (oldValue: string, newValue: string) => {\n          return this.isTargetRecordDefinitionChanged(oldValue, newValue)\n            .pipe(\n              withLatestFrom(this.viewDesignerFacade.viewComponentModels$),\n              map(\n                ([isRecordDefinitionChanged, viewComponentModels]) =>\n                  !isEmpty(viewComponentModels) && isRecordDefinitionChanged\n              ),\n              take(1)\n            )\n            .toPromise()\n            .then((isConfirmationRequired: boolean) =>\n              isConfirmationRequired\n                ? this.rxModalService.confirm({\n                    title: 'Warning',\n                    modalStyle: RX_MODAL.modalStyles.warning,\n                    message: 'The view canvas will be cleared. Do you want to continue?'\n                  })\n                : true\n            );\n        }\n      } as ISelectFormControlOptions\n    };\n\n    const layout: IFormSectionBuilderConfig[] = [\n      {\n        label: 'General',\n        controls: [\n          {\n            name: 'displayName',\n            component: TextFormControlComponent,\n            isDisabled: Boolean(viewDesignModel.lastUpdateTime),\n            options: {\n              required: true,\n              label: 'Name'\n            } as ITextFormControlOptions\n          },\n          {\n            name: 'description',\n            component: TextareaFormControlComponent,\n            isDisabled: !isCustomizationAllowed,\n            options: {\n              label: 'Description',\n              rows: 3\n            } as ITextareaFormControlOptions\n          },\n          {\n            name: 'layoutName',\n            component: TextFormControlComponent,\n            isDisabled: true,\n            options: {\n              label: 'Layout template'\n            } as ITextFormControlOptions\n          },\n          {\n            name: 'targetViewDefinitionName',\n            component: RxDefinitionPickerComponent,\n            isDisabled: !isCustomizationAllowed,\n            options: {\n              label: 'View to extend',\n              tooltip: new Tooltip(\n                `Select a view to extend in order to inject this view into it.\n                The view to extend may be read-only, but must contain at least one Record editor with an Extension container.`\n              ),\n              definitionType: RxDefinitionPickerType.View,\n              beforeValueChange: (oldValue: string[], newValue: string[]): Promise<boolean> =>\n                this.viewDesignerFacade.viewComponentModels$\n                  .pipe(first(), withLatestFrom(this.viewDesignerFacade.viewModel$))\n                  .toPromise()\n                  .then(([components, viewModel]) => {\n                    const isViewParametersPresent: boolean = Boolean(\n                      !oldValue?.length &&\n                        newValue.length &&\n                        (viewModel.inputParams.length || viewModel.outputParams.length)\n                    );\n\n                    let message: string;\n\n                    if (!isEmpty(components) && isViewParametersPresent) {\n                      message =\n                        'The view canvas, input and output parameters will be cleared. Do you want to continue?';\n                    } else if (!isEmpty(components)) {\n                      message = 'The view canvas will be cleared. Do you want to continue?';\n                    } else if (isViewParametersPresent) {\n                      message = 'The input and output parameters will be cleared. Do you want to continue?';\n                    }\n\n                    return message\n                      ? this.rxModalService.confirm({\n                          title: 'Warning',\n                          modalStyle: RX_MODAL.modalStyles.warning,\n                          message: message\n                        })\n                      : true;\n                  })\n            }\n          },\n          {\n            name: 'styles',\n            component: TagsFormControlComponent,\n            isDisabled: !isCustomizationAllowed,\n            options: {\n              label: 'CSS classes',\n              placeholder: 'Add CSS classes',\n              tooltip: new Tooltip('Enter CSS class names to apply to this view.'),\n              errorCheck: validateCssClassName\n            } as ITagsFormControlOptions\n          },\n          {\n            name: 'permissions',\n            component: RxPermissionEditorComponent,\n            isDisabled: !isCustomizationAllowed,\n            options: {\n              label: 'Permissions',\n              type: 'view'\n            } as IPermissionEditorComponentOptions\n          },\n          {\n            component: RxViewRevertCustomizationComponent\n          },\n          {\n            component: RxViewCustomizationOptionsComponent\n          }\n        ]\n      },\n      {\n        label: 'Input parameters',\n        controls: [\n          {\n            name: 'inputParams',\n            component: ListFormControlComponent,\n            isDisabled: !isCustomizationAllowed,\n            options: {\n              addItemText: 'Add',\n              emptyListText: 'No input parameters added.',\n              items: [\n                {\n                  label: 'Name',\n                  propertyName: 'name'\n                }\n              ]\n            } as IListFormControlOptions\n          }\n        ]\n      },\n      {\n        label: 'Output parameters',\n        controls: [\n          {\n            name: 'outputParams',\n            component: ListFormControlComponent,\n            isDisabled: !isCustomizationAllowed,\n            options: {\n              addItemText: 'Add',\n              emptyListText: 'No output parameters added.',\n              items: [\n                {\n                  label: 'Name',\n                  propertyName: 'name'\n                },\n                {\n                  label: 'Source',\n                  propertyName: 'source',\n                  dataDictionary$: this.expressionConfigurator.getDataDictionary(),\n                  operators: this.expressionConfigurator.getOperators()\n                }\n              ]\n            } as IListFormControlOptions\n          }\n        ]\n      }\n    ];\n\n    if (availablePageComponents.length) {\n      layout[0].controls.splice(2, 0, pageComponentControl as any);\n    }\n\n    // hide 'View to extend' and 'Extention container' controls if a page component is selected\n    if (viewDesignModel.pageComponent) {\n      layout.splice(1, 2);\n      layout[0].controls.splice(findIndex(layout[0].controls, { name: 'targetViewDefinitionName' }), 1);\n    }\n\n    if (viewDesignModel.targetViewDefinitionName) {\n      const targetViewDefinitionNameControlIndex = findIndex(layout[0].controls, { name: 'targetViewDefinitionName' });\n\n      layout[0].controls.splice(targetViewDefinitionNameControlIndex + 1, 0, extensionContainerControl as any);\n\n      // hide 'Page component' control if 'View to extend' is selected\n      layout[0].controls.splice(findIndex(layout[0].controls, { name: 'pageComponent' }), 1);\n\n      // hide 'Input parameters' and 'Output parameters' control if 'View to extend' is selected\n      layout.splice(1, 2);\n\n      this.viewDesignerFacade.updateViewProperties({\n        inputParams: [],\n        outputParams: []\n      });\n    }\n\n    return {\n      inspectorSectionConfigs: layout\n    } as IViewDesignerInspectorConfig;\n  }\n\n  private validateDisplayName(): Observable<IViewComponentDesignValidationIssue[]> {\n    // View definition names for validation will be loaded only in case if user changes view name.\n    return this.viewDesignerFacade\n      .getViewPropertyValue('displayName')\n      .pipe(\n        switchMap((displayName) =>\n          combineLatest([\n            of(\n              displayName\n                ? RX_RECORD_DEFINITION.validDefinitionNameRegex.test(displayName)\n                  ? null\n                  : {\n                      type: 'error',\n                      propertyName: 'displayName',\n                      description: 'View name can only contain letters, numbers, spaces, dashes, and underscores.'\n                    }\n                : {\n                    type: 'error',\n                    propertyName: 'displayName',\n                    description: 'View name cannot be blank.'\n                  }\n            ),\n            this.viewDesignerFacade.getViewPropertyValue('lastUpdateTime').pipe(\n              switchMap((lastUpdateTime) =>\n                displayName && !lastUpdateTime\n                  ? this.allViewDefinitionNamesByBundleId$.pipe(\n                      map((viewDefinitionNames): IViewComponentDesignValidationIssue => {\n                        const isNameAlreadyExists =\n                          !lastUpdateTime &&\n                          viewDefinitionNames?.some((name) =>\n                            this.rxStringService.caseInsensitiveIsEqual(displayName, name)\n                          );\n\n                        return isNameAlreadyExists\n                          ? {\n                              type: 'error',\n                              propertyName: 'displayName',\n                              description: 'View definition with this name already exists.'\n                            }\n                          : null;\n                      }),\n                      take(1)\n                    )\n                  : of(null)\n              ),\n              take(1)\n            )\n          ])\n        )\n      )\n      .pipe(map(compact));\n  }\n\n  private validateInputParams(): Observable<IViewComponentDesignValidationIssue[]> {\n    return this.viewDesignerFacade.getViewPropertyValue('inputParams').pipe(\n      map((inputParams) => {\n        const notBlankInputParams = flow((params) => _map(params, (param) => param.name), compact)(inputParams);\n        const uniqueInputParams = uniq(notBlankInputParams);\n        const validationIssues = [];\n\n        if (inputParams.length && notBlankInputParams.length !== inputParams.length) {\n          validationIssues.push({\n            type: 'error',\n            propertyName: 'inputParams',\n            description: 'Input parameter name cannot be blank.'\n          });\n        }\n\n        if (notBlankInputParams.length !== uniqueInputParams.length) {\n          validationIssues.push({\n            type: 'error',\n            propertyName: 'inputParams',\n            description: 'Input parameter names must be unique.'\n          });\n        }\n\n        return validationIssues;\n      })\n    );\n  }\n\n  private validateOutputParamExpressions(): Observable<IViewComponentDesignValidationIssue[]> {\n    return this.viewDesignerFacade.getViewPropertyValue('outputParams').pipe(\n      map((outputParams) => _map(outputParams, (param) => param.source).filter(Boolean)),\n      distinctUntilChanged(isEqual),\n      switchMap((sourceValues: string[]) =>\n        sourceValues.length\n          ? combineLatest(\n              sourceValues.map((value) =>\n                this.rxViewExpressionValidatorService.validate(value, 'source', 'Output parameter source')\n              )\n            ).pipe(map(flatten))\n          : of([])\n      )\n    );\n  }\n\n  private validateExtensionContainer(): Observable<IViewComponentDesignValidationIssue> {\n    return combineLatest([\n      this.viewDesignerFacade.getViewPropertyValue('targetViewDefinitionName'),\n      this.viewDesignerFacade.getViewPropertyValue('targetExtensionContainerGuid')\n    ]).pipe(\n      map(([targetViewDefinitionName, targetExtensionContainerGuid]) =>\n        targetViewDefinitionName && !targetExtensionContainerGuid\n          ? {\n              type: 'error',\n              propertyName: 'targetExtensionContainerGuid',\n              description: 'Extension container cannot be blank.'\n            }\n          : null\n      )\n    );\n  }\n\n  private getViewCommonDataDictionary(inputParams: IViewDesignModel['inputParams']): IDataDictionaryBranch {\n    return {\n      label: 'View',\n      expression: '${view.api}',\n      icon: 'd-icon-file_o',\n      expanded: true,\n      children: [\n        ...(isEmpty(inputParams)\n          ? []\n          : [\n              {\n                label: 'Input parameters',\n                expanded: true,\n                children: inputParams\n                  .filter((param) => param.name)\n                  .map((param) => ({\n                    label: param.name,\n                    expression: `$\\{view.inputParams.${param.name}}`,\n                    icon: 'd-icon-arrow_right_square_input'\n                  }))\n              }\n            ]),\n        {\n          label: 'Properties',\n          expanded: true,\n          children: [\n            {\n              label: 'Is valid',\n              expression: '${view.isValid}',\n              icon: 'd-icon-arrow_right_square_input'\n            }\n          ]\n        }\n      ]\n    };\n  }\n\n  private isTargetRecordDefinitionChanged(\n    previousTargetExtensionContainerGuid: string,\n    currentTargetExtensionContainerGuid: string\n  ): Observable<boolean> {\n    return this.targetViewDefinition$.pipe(\n      map((viewDefinition) => {\n        const previousTargetRecordDefinitionName = this.getTargetRecordDefinitionName(\n          viewDefinition,\n          previousTargetExtensionContainerGuid\n        );\n\n        const currentTargetRecordDefinitionName = this.getTargetRecordDefinitionName(\n          viewDefinition,\n          currentTargetExtensionContainerGuid\n        );\n\n        return previousTargetRecordDefinitionName !== currentTargetRecordDefinitionName;\n      })\n    );\n  }\n\n  private getTargetRecordDefinitionName(viewDefinition: IViewDefinition, targetExtensionContainerGuid: string): string {\n    const targetRecordEditor = this.rxViewDefinitionParserService.findParentComponentDefinition(\n      viewDefinition,\n      { guid: targetExtensionContainerGuid },\n      (definition) => definition.type === RxViewComponentType.RecordEditor\n    );\n\n    return targetRecordEditor?.propertiesByName.recordDefinitionName;\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\n/* tslint:disable:variable-name */\nexport const ViewDesignerCanvasItemApiToken = new InjectionToken<string>('CanvasItemApi');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CanvasItemApi {\n  core: any = null;\n\n  registerCoreApi(apiObject: object) {\n    this.core = apiObject;\n  }\n}\n","import { IViewComponentDropData } from './interfaces/view-designer-canvas.interfaces';\n\nexport class DropComponentData {\n  constructor(\n    public data: IViewComponentDropData,\n    public targetGuid: string,\n    public outletName: string,\n    public insertIndex: number\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { DropComponentData } from './drop-component-data.class';\nimport { IViewComponentDropData } from './interfaces/view-designer-canvas.interfaces';\n\n@Injectable()\nexport class ViewDesignerCanvasService {\n  private componentSelectSubject = new ReplaySubject<any>();\n  private componentRemoveSubject = new ReplaySubject<string>();\n  private componentDropSubject = new ReplaySubject<DropComponentData>();\n\n  componentDrop$: Observable<DropComponentData> = this.componentDropSubject.asObservable();\n  componentSelect$: Observable<any> = this.componentSelectSubject.asObservable();\n  componentRemove$: Observable<string> = this.componentRemoveSubject.asObservable();\n\n  selectComponent(guid: string): void {\n    this.componentSelectSubject.next(guid);\n  }\n\n  removeComponent(guid: string): void {\n    this.componentRemoveSubject.next(guid);\n  }\n\n  dropComponent(data: IViewComponentDropData, targetGuid: string, outletName: string, insertIndex: number): void {\n    this.componentDropSubject.next(new DropComponentData(data, targetGuid, outletName, insertIndex));\n  }\n}\n","import {\n  Component,\n  ComponentFactory,\n  ComponentRef,\n  Inject,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { RX_VIEW_DEFINITION } from '@helix/platform/view/api';\nimport { get, isEqual } from 'lodash';\nimport { IComponentDefinitionProperty } from '../../../../public-interfaces/component-definition-property.interface';\nimport { IViewDesignerCanvasItemApi } from '../../interfaces/view-designer-canvas-item-api.interface';\nimport {\n  IViewComponentDropData,\n  IViewDesignerCanvasLayout,\n  IViewDesignerCanvasOutlet\n} from '../../interfaces/view-designer-canvas.interfaces';\nimport { ViewDesignerCanvasItemApiToken } from '../../tokens/view-designer-canvas-item-api.token';\nimport { CanvasItemApi } from './canvas-item-api.service';\nimport { ViewDesignerCanvasService } from '../../view-designer-canvas.service';\n\n@Component({\n  selector: 'rx-canvas-item',\n  templateUrl: './canvas-item.component.html',\n  providers: [\n    {\n      provide: ViewDesignerCanvasItemApiToken,\n      useClass: CanvasItemApi\n    }\n  ]\n})\nexport class CanvasItemComponent implements OnChanges, OnDestroy, OnInit {\n  @Input()\n  layout: IViewDesignerCanvasLayout;\n\n  @Input()\n  interactive = true;\n\n  @Input()\n  isReadOnly: boolean;\n\n  @ViewChild('container', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  private componentReference: ComponentRef<any>;\n  private childContainers: Map<string, ComponentRef<any>> = new Map();\n\n  constructor(\n    private injector: Injector,\n    private renderer: Renderer2,\n    @Inject(ViewDesignerCanvasItemApiToken) private canvasItemApi: IViewDesignerCanvasItemApi,\n    private viewDesignerCanvasService: ViewDesignerCanvasService\n  ) {}\n\n  ngOnInit(): void {\n    this.initializeItemApi();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const layoutChange = changes.layout;\n\n    if (layoutChange) {\n      const prevGuid = get(layoutChange, 'previousValue.guid');\n      const currGuid = get(layoutChange, 'currentValue.guid');\n      const prevOutlets = get(layoutChange, 'previousValue.outlets') as IViewDesignerCanvasOutlet[];\n      const currOutlets = get(layoutChange, 'currentValue.outlets') as IViewDesignerCanvasOutlet[];\n\n      if (prevGuid !== currGuid) {\n        if (this.componentReference) {\n          this.cleanUp();\n        }\n\n        this.renderViewComponent();\n      } else if (!isEqual(prevOutlets, currOutlets)) {\n        currOutlets.forEach((outlet) => {\n          const ref = this.childContainers.get(outlet.name);\n\n          if (ref) {\n            ref.instance.outlet = outlet;\n            ref.instance.layout = this.layout;\n          }\n        });\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.cleanUp();\n  }\n\n  cleanUp(): void {\n    this.componentReference.destroy();\n    this.childContainers.clear();\n  }\n\n  registerOutlet(\n    outletName: string,\n    outletViewContainerRef: ViewContainerRef,\n    containerFactory: ComponentFactory<any>\n  ): ComponentRef<any> {\n    const currentOutlet = this.layout.outlets.find((outlet) => outlet.name === outletName);\n    const componentRef = this.renderContainerComponent(outletViewContainerRef, currentOutlet, containerFactory);\n\n    this.childContainers.set(outletName, componentRef);\n\n    return componentRef;\n  }\n\n  onSelectComponent(event: Event): void {\n    if (this.interactive) {\n      event.stopPropagation();\n\n      this.viewDesignerCanvasService.selectComponent(this.layout.guid);\n    }\n  }\n\n  dropComponent(\n    transferData: IViewComponentDropData,\n    insertIndex: number,\n    outletName: string = RX_VIEW_DEFINITION.defaultOutletName\n  ): void {\n    this.viewDesignerCanvasService.dropComponent(transferData, this.layout.guid, outletName, insertIndex);\n  }\n\n  private initializeItemApi(): void {\n    this.canvasItemApi.registerCoreApi({\n      dropComponent: this.dropComponent.bind(this),\n      registerOutlet: this.registerOutlet.bind(this)\n    });\n  }\n\n  private renderViewComponent(): void {\n    this.componentReference = this.container.createComponent(this.layout.factory, null, this.injector);\n\n    const instance = this.componentReference.instance as IComponentDefinitionProperty;\n    const nativeElement = this.componentReference.location.nativeElement;\n\n    instance.guid = this.layout.guid;\n    instance.model = this.layout.model;\n    instance.isReadOnly = this.isReadOnly;\n\n    this.renderer.setAttribute(nativeElement, 'rx-view-component-id', this.layout.guid);\n  }\n\n  private renderContainerComponent(\n    outletViewContainerRef: ViewContainerRef,\n    outlet: IViewDesignerCanvasOutlet,\n    containerFactory: ComponentFactory<any>\n  ): ComponentRef<any> {\n    const containerRef = outletViewContainerRef.createComponent(containerFactory);\n\n    containerRef.instance.outlet = outlet;\n    containerRef.instance.layout = this.layout;\n    containerRef.instance.isReadOnly = this.isReadOnly;\n\n    return containerRef;\n  }\n}\n","<div [hidden]=\"layout?.model?.hiddenOnCanvas$ | async\" (click)=\"onSelectComponent($event)\">\n  <ng-container #container></ng-container>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { DropComponentData } from './drop-component-data.class';\nimport { IViewComponentDropData, IViewDesignerCanvasLayout } from './interfaces/view-designer-canvas.interfaces';\nimport { ViewDesignerCanvasService } from './view-designer-canvas.service';\n\n@Component({\n  selector: 'rx-view-designer-canvas',\n  templateUrl: './view-designer-canvas.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [ViewDesignerCanvasService]\n})\nexport class ViewDesignerCanvasComponent implements OnInit {\n  @Input()\n  layout: IViewDesignerCanvasLayout;\n\n  @Input()\n  isReadOnly: boolean;\n\n  @Output()\n  componentSelect: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  componentDrop: EventEmitter<DropComponentData> = new EventEmitter<DropComponentData>();\n\n  @Output()\n  componentRemove: EventEmitter<string> = new EventEmitter<string>();\n\n  @Output()\n  beforeComponentDropInRoot = new EventEmitter<IViewComponentDropData>();\n\n  constructor(protected viewDesignerCanvasService: ViewDesignerCanvasService) {}\n\n  ngOnInit(): void {\n    this.viewDesignerCanvasService.componentSelect$.subscribe((event) => {\n      this.componentSelect.emit(event);\n    });\n\n    this.viewDesignerCanvasService.componentRemove$.subscribe((event) => {\n      this.componentRemove.emit(event);\n    });\n\n    this.viewDesignerCanvasService.componentDrop$.subscribe((event) => {\n      this.componentDrop.emit(event);\n    });\n  }\n}\n","<rx-canvas-item class=\"root-item\" *ngIf=\"layout\" [layout]=\"layout\" [isReadOnly]=\"isReadOnly\"></rx-canvas-item>\n","import { ComponentRef, Injectable } from '@angular/core';\nimport {\n  IViewComponentDropData,\n  IViewComponentDropPredicateData,\n  IViewDesignerCanvasLayout\n} from '../../interfaces/view-designer-canvas.interfaces';\nimport { find, isFunction } from 'lodash';\nimport { RxViewComponentType } from '@helix/platform/view/api';\nimport { DropListOrientation } from '@angular/cdk/drag-drop';\nimport { Observable, ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class CanvasOutletHelperService {\n  dropListOrientation: DropListOrientation;\n  parentOutletComponent: any;\n  containerComponentInstance: ComponentRef<any>;\n  skipParentPredicate: boolean;\n  dropPredicate: (data: IViewComponentDropPredicateData) => boolean;\n\n  private beforeViewComponentDropSubject = new ReplaySubject<IViewComponentDropData>();\n  public beforeViewComponentDrop$ = this.beforeViewComponentDropSubject.asObservable();\n\n  setBeforeViewComponentDropState(viewComponentDropData: IViewComponentDropData): void {\n    this.beforeViewComponentDropSubject.next(viewComponentDropData);\n  }\n\n  canBeDropped(data: IViewComponentDropPredicateData): boolean {\n    let canBeInsertedInto = true;\n\n    if (isFunction(data.draggedViewComponentDescriptor.canBeInsertedInto)) {\n      canBeInsertedInto = data.draggedViewComponentDescriptor.canBeInsertedInto(\n        data.dropTargetViewComponentWithParents.map((component) => component.type)\n      );\n    }\n\n    if (canBeInsertedInto) {\n      canBeInsertedInto =\n        (!data.draggedViewComponentGuid ||\n          !this._isParentRecordEditorChanging(\n            (this.containerComponentInstance['layout'] as IViewDesignerCanvasLayout).viewComponentWithParents,\n            data.draggedViewComponentParents\n          )) &&\n        this.componentDropPredicate(data);\n    }\n\n    return canBeInsertedInto;\n  }\n\n  componentDropPredicate(data: IViewComponentDropPredicateData, skipPredicate = false): boolean {\n    return (\n      (skipPredicate || this.dropPredicate(data)) &&\n      (!this.parentOutletComponent || this.parentOutletComponent.componentDropPredicate(data, this.skipParentPredicate))\n    );\n  }\n\n  private _isParentRecordEditorChanging(\n    targetContainerParentComponents: { guid: string; type: string }[],\n    sourceComponentParentComponents: { guid: string; type: string }[]\n  ): boolean {\n    const targetRecordEditor = find(targetContainerParentComponents, {\n      type: RxViewComponentType.RecordEditor\n    });\n\n    const sourceRecordEditor = find(sourceComponentParentComponents, {\n      type: RxViewComponentType.RecordEditor\n    });\n\n    const isMovingBetweenRecordEditors =\n      Boolean(targetRecordEditor) && Boolean(sourceRecordEditor) && targetRecordEditor.guid !== sourceRecordEditor.guid;\n\n    const isDroppingOutsideRecordEditor = !targetRecordEditor && Boolean(sourceRecordEditor);\n    const isDroppingInsideRecordEditor = !sourceRecordEditor && Boolean(targetRecordEditor);\n\n    return isMovingBetweenRecordEditors || isDroppingOutsideRecordEditor || isDroppingInsideRecordEditor;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { IViewComponentDragData } from '../../interfaces/view-designer-canvas.interfaces';\nimport { IViewDesignerCanvasColumn, IViewDesignerCanvasLayout } from '../../interfaces/view-designer-canvas.interfaces';\nimport { CdkDrag, CdkDragDrop, CdkDragEnter, CdkDragStart, CdkDropList } from '@angular/cdk/drag-drop';\nimport { isString, throttle } from 'lodash';\nimport { asapScheduler } from 'rxjs';\nimport { ViewDesignerCanvasService } from '../../view-designer-canvas.service';\nimport { CanvasOutletHelperService } from '../canvas-outlet/canvas-outlet-helper.service';\nimport { DropListOrientation } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'rx-canvas-item-column',\n  templateUrl: './canvas-item-column.component.html',\n  styleUrls: ['./canvas-item-column.component.scss']\n})\nexport class CanvasItemColumnComponent implements OnInit {\n  @Input()\n  isReadOnly: boolean;\n\n  @Input()\n  colIndex: number;\n\n  @Input()\n  column: IViewDesignerCanvasColumn;\n\n  @Input()\n  layout: IViewDesignerCanvasLayout;\n\n  @Output()\n  dropListDropped = new EventEmitter<CdkDragDrop<{ columnIndex: number }>>();\n\n  dropListEnterPredicateBind = throttle(this.dropListEnterPredicate.bind(this), 200);\n\n  dropListOrientation: DropListOrientation;\n\n  constructor(\n    private viewDesignerCanvasService: ViewDesignerCanvasService,\n    private canvasOutletHelperService: CanvasOutletHelperService\n  ) {}\n\n  ngOnInit(): void {\n    this.dropListOrientation = this.canvasOutletHelperService.dropListOrientation;\n  }\n\n  getViewComponentDragData(layout: IViewDesignerCanvasLayout): IViewComponentDragData {\n    return {\n      draggedViewComponentGuid: layout.guid,\n      draggedViewComponentDescriptor: layout.descriptor,\n      draggedViewComponentParents: this.layout.viewComponentWithParents\n    };\n  }\n\n  onDragEntered(event: CdkDragEnter) {\n    this.enforceDragToSelf(event.container);\n  }\n\n  onDragStarted(event: CdkDragStart) {\n    this.enforceDragToSelf(event.source.dropContainer);\n  }\n\n  remove(event: Event, layout: IViewDesignerCanvasLayout): void {\n    event.stopPropagation();\n\n    this.viewDesignerCanvasService.removeComponent(layout.guid);\n  }\n\n  onSelectComponent(event: Event, layout: IViewDesignerCanvasLayout): void {\n    event.stopPropagation();\n\n    this.viewDesignerCanvasService.selectComponent(layout.guid);\n  }\n\n  trackByFn(index: number, item: IViewDesignerCanvasLayout): string {\n    return item.guid;\n  }\n\n  dropListEnterPredicate(event: CdkDrag<IViewComponentDragData>): boolean {\n    return this.canvasOutletHelperService.canBeDropped({\n      ...event.data,\n      dropTargetViewComponentWithParents: this.layout.viewComponentWithParents || []\n    });\n  }\n\n  // todo remove after\n  // https://github.com/angular/components/issues/16671\n  // will be fixed\n  private enforceDragToSelf(dropList: CdkDropList) {\n    let siblings = dropList.connectedTo as CdkDropList[];\n\n    siblings = siblings.reduce((result, item) => {\n      if (isString(item)) {\n        const listInstance = CdkDropList['_dropLists'].find((list) => list.id === item);\n\n        if (listInstance) {\n          result.push(listInstance);\n        }\n      }\n\n      return result;\n    }, []);\n\n    const dropListRef = dropList._dropListRef;\n\n    asapScheduler.schedule(() => {\n      dropListRef.connectedTo(siblings.map((list) => list._dropListRef));\n    });\n  }\n}\n","<div\n  cdkDropList\n  [cdkDropListOrientation]=\"dropListOrientation\"\n  [cdkDropListConnectedTo]=\"column.dndListIds\"\n  (cdkDropListDropped)=\"dropListDropped.next($event)\"\n  [cdkDropListEnterPredicate]=\"dropListEnterPredicateBind\"\n  [cdkDropListData]=\"{ columnIndex: colIndex }\"\n  [id]=\"column.listId\"\n>\n  <!-- mw-100 class is used for DnD to restrict component width, see DRD21-5845 for more details -->\n  <div\n    class=\"canvas-item-wrapper mw-100 canvas-{{ layout.descriptor.type }}\"\n    cdkDrag\n    [cdkDragData]=\"getViewComponentDragData(layout)\"\n    [cdkDragDisabled]=\"isReadOnly || layout.descriptor.options?.static\"\n    (cdkDragEntered)=\"onDragEntered($event)\"\n    (cdkDragStarted)=\"onDragStarted($event)\"\n    *ngFor=\"let layout of column.children; let last = last; trackBy: trackByFn\"\n  >\n    <div class=\"canvas-item\" [class.active]=\"layout.isSelected$ | async\" (click)=\"onSelectComponent($event, layout)\">\n      <div class=\"canvas-item-header\" [hidden]=\"!(layout.isSelected$ | async)\" cdkDragHandle>\n        <span class=\"icon d-icon-dots mr-1\"></span>\n        <span class=\"label\">{{ layout.label }}</span>\n\n        <button\n          (click)=\"remove($event, layout)\"\n          *ngIf=\"!isReadOnly && !layout.descriptor.options?.static\"\n          class=\"remove-button btn btn-sm btn-link d-icon-cross_adapt p-0 px-1\"\n          type=\"button\"\n          aria-label=\"Close\"\n        ></button>\n      </div>\n\n      <rx-canvas-item [layout]=\"layout\" [isReadOnly]=\"isReadOnly\"></rx-canvas-item>\n    </div>\n  </div>\n</div>\n","import { Component, Inject, Input } from '@angular/core';\nimport {\n  IViewComponentDragData,\n  IViewComponentDropData,\n  IViewDesignerCanvasColumn,\n  IViewDesignerCanvasLayout,\n  IViewDesignerCanvasOutlet\n} from '../../interfaces/view-designer-canvas.interfaces';\nimport { ViewDesignerCanvasItemApiToken } from '../../tokens/view-designer-canvas-item-api.token';\nimport { CanvasItemApi } from '../canvas-item/canvas-item-api.service';\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { CanvasOutletHelperService } from '../canvas-outlet/canvas-outlet-helper.service';\n\n@Component({\n  selector: 'rx-canvas-item-container',\n  templateUrl: './canvas-item-container.component.html',\n  styleUrls: ['./canvas-item-container.component.scss']\n})\nexport class CanvasItemContainerComponent {\n  @Input()\n  outlet: IViewDesignerCanvasOutlet;\n\n  @Input()\n  isReadOnly: boolean;\n\n  @Input()\n  layout: IViewDesignerCanvasLayout;\n\n  constructor(\n    @Inject(ViewDesignerCanvasItemApiToken) protected canvasItemApi: CanvasItemApi,\n    protected canvasOutletHelperService: CanvasOutletHelperService\n  ) {}\n\n  trackByColFn(index: number, item: IViewDesignerCanvasColumn): string {\n    return item.listId;\n  }\n\n  onDropListDropped(event: CdkDragDrop<{ columnIndex: number }>) {\n    const viewComponentDropData: IViewComponentDropData = {\n      ...(event.item.data as IViewComponentDragData),\n      initialPropertiesByName: {},\n      columnIndex: event.container.data.columnIndex\n    };\n\n    this.canvasOutletHelperService.setBeforeViewComponentDropState(viewComponentDropData);\n\n    if (!viewComponentDropData.preventDrop) {\n      this.canvasItemApi.core.dropComponent(viewComponentDropData, event.currentIndex, this.outlet.name);\n    }\n  }\n}\n","<div class=\"row\">\n  <div\n    *ngFor=\"let column of outlet.columns; let colIndex = index; let isLastCol = last; trackBy: trackByColFn\"\n    class=\"{{ column.span ? 'col-' + column.span : 'col' }}\"\n    [ngClass]=\"{ 'col-border': !isLastCol }\"\n  >\n    <rx-canvas-item-column\n      [ngClass]=\"{ 'mb-3': !isLastCol }\"\n      [isReadOnly]=\"isReadOnly\"\n      [colIndex]=\"colIndex\"\n      [column]=\"column\"\n      [layout]=\"layout\"\n      (dropListDropped)=\"onDropListDropped($event)\"\n    ></rx-canvas-item-column>\n  </div>\n</div>\n","import {\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  OnDestroy,\n  Optional,\n  Output,\n  SkipSelf,\n  Type,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { DropListOrientation } from '@angular/cdk/drag-drop';\nimport { RX_VIEW_DEFINITION } from '@helix/platform/view/api';\nimport { IViewDesignerCanvasItemApi } from '../../interfaces/view-designer-canvas-item-api.interface';\nimport { ViewDesignerCanvasItemApiToken } from '../../tokens/view-designer-canvas-item-api.token';\nimport {\n  IViewComponentDropData,\n  IViewComponentDropPredicateData\n} from '../../interfaces/view-designer-canvas.interfaces';\nimport { CanvasOutletHelperService } from './canvas-outlet-helper.service';\nimport { CanvasItemContainerComponent } from '../canvas-item-container/canvas-item-container.component';\nimport { ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'rx-canvas-outlet',\n  templateUrl: './canvas-outlet.component.html',\n  providers: [CanvasOutletHelperService]\n})\nexport class CanvasOutletComponent implements OnInit, OnDestroy {\n  containerComponentInstance: any = null;\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  @Input()\n  name = RX_VIEW_DEFINITION.defaultOutletName;\n\n  @Input()\n  skipParentPredicate = false;\n\n  @Input()\n  containerComponent: Type<any>;\n\n  @Input()\n  dropListOrientation: DropListOrientation = 'vertical';\n\n  @ViewChild('container', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  @Output()\n  beforeViewComponentDrop = new EventEmitter<IViewComponentDropData>();\n\n  @Input()\n  dropPredicate: (data: IViewComponentDropPredicateData) => boolean = () => true;\n\n  constructor(\n    @Inject(ViewDesignerCanvasItemApiToken) private canvasItemApi: IViewDesignerCanvasItemApi,\n    @SkipSelf() @Optional() private parentOutletComponent: CanvasOutletComponent,\n    private canvasOutletHelperService: CanvasOutletHelperService,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {}\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  ngOnInit(): void {\n    this.containerComponentInstance = this.canvasItemApi.core.registerOutlet(\n      this.name,\n      this.container,\n      this.componentFactoryResolver.resolveComponentFactory(this.containerComponent || CanvasItemContainerComponent)\n    ).instance;\n\n    this.canvasOutletHelperService.dropListOrientation = this.dropListOrientation;\n    this.canvasOutletHelperService.parentOutletComponent = this.parentOutletComponent;\n    this.canvasOutletHelperService.dropPredicate = this.dropPredicate;\n    this.canvasOutletHelperService.skipParentPredicate = this.skipParentPredicate;\n    this.canvasOutletHelperService.containerComponentInstance = this.containerComponentInstance;\n\n    this.canvasOutletHelperService.beforeViewComponentDrop$.pipe(takeUntil(this.destroyed$)).subscribe((event) => {\n      this.beforeViewComponentDrop.emit(event);\n    });\n  }\n\n  canBeDropped(data: IViewComponentDropPredicateData): boolean {\n    return this.canvasOutletHelperService.canBeDropped(data);\n  }\n\n  componentDropPredicate(data: IViewComponentDropPredicateData, skipPredicate = false): boolean {\n    return this.canvasOutletHelperService.componentDropPredicate(data, skipPredicate);\n  }\n}\n","<ng-container #container></ng-container>\n","import { Component } from '@angular/core';\nimport { CanvasItemComponent } from '../view-designer-canvas/component/canvas-item/canvas-item.component';\nimport { IViewDesignerCanvasOutlet } from '../view-designer-canvas/interfaces/view-designer-canvas.interfaces';\nimport { RX_VIEW_DEFINITION } from '@helix/platform/view/api';\nimport { ViewDesignerCanvasComponent } from '../view-designer-canvas/view-designer-canvas.component';\n\n@Component({\n  selector: 'rx-designer',\n  templateUrl: './designer.component.html',\n  styleUrls: ['./designer.component.scss']\n})\nexport class DesignerComponent {\n  defaultOutletName = RX_VIEW_DEFINITION.defaultOutletName;\n\n  constructor(\n    public canvasItemComponent: CanvasItemComponent,\n    public viewDesignerCanvasComponent: ViewDesignerCanvasComponent\n  ) {}\n\n  trackByFn(index: number, item: IViewDesignerCanvasOutlet): string {\n    return item.name;\n  }\n}\n","<rx-canvas-outlet\n  [class.border]=\"canvasItemComponent.layout.outlets.length > 1\"\n  [class.default-outlet]=\"outlet.name === defaultOutletName\"\n  *ngFor=\"let outlet of canvasItemComponent.layout.outlets; trackBy: trackByFn\"\n  [name]=\"outlet.name\"\n  (beforeViewComponentDrop)=\"viewDesignerCanvasComponent.beforeComponentDropInRoot.emit($event)\"\n></rx-canvas-outlet>\n","import { Injectable } from '@angular/core';\nimport { IViewDesignerComponentModel } from '@helix/platform/view/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDesignerModels {\n  private models: Map<string, IViewDesignerComponentModel> = new Map();\n\n  clear(): void {\n    this.models.clear();\n  }\n\n  set(guid: string, model: IViewDesignerComponentModel): void {\n    this.models.set(guid, model);\n  }\n\n  get(guid: string): IViewDesignerComponentModel {\n    return this.models.get(guid);\n  }\n\n  delete(guid: string): void {\n    this.models.delete(guid);\n  }\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { concatMap, filter, first, map, switchMap, switchMapTo, take, tap, withLatestFrom } from 'rxjs/operators';\nimport { flow, isEmpty, mergeWith, reduce } from 'lodash';\nimport { ViewDesignerFacade } from '../+state/view-designer.facade';\nimport { IViewComponentDesignModels } from '../interfaces/view-component-design-models.interface';\nimport { IViewDesignModelState } from '../interfaces/view-design-model-state.interface';\nimport { findAllParentComponentGuids } from '../core/layout-helpers';\nimport {\n  IViewComponentDescriptor,\n  IViewLayout,\n  RxViewComponentRegistryService,\n  RxViewComponentType,\n  ViewDefinitionType,\n  RxViewLayout,\n  BwfViewComponentType\n} from '@helix/platform/view/api';\nimport { RxViewDesignerModels } from '../core/view-designer-models.service';\nimport {\n  IViewDesignerCanvasColumn,\n  IViewDesignerCanvasLayout,\n  IViewDesignerCanvasOutlet\n} from '../components/view-designer-canvas';\nimport { DesignerComponent } from '../components/designer-component/designer.component';\nimport { IBreadcrumbItem, IValidationIssueSection } from '@helix/platform/ui-kit';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { IViewDesignerValidationState } from '../+state/view-designer-validation.reducer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDesignerHelperService {\n  designerComponentFactory = this.componentFactoryResolver.resolveComponentFactory(DesignerComponent);\n  canvasDndListIds: string[] = [];\n\n  extensionViewAllowedComponentTypes = new Set([\n    RxViewComponentType.Container,\n    RxViewComponentType.RichText,\n    RxViewComponentType.RecordEditor,\n\n    RxViewComponentType.Character,\n    RxViewComponentType.Textarea,\n    RxViewComponentType.Boolean,\n    RxViewComponentType.Date,\n    RxViewComponentType.DateTime,\n    RxViewComponentType.Time,\n    RxViewComponentType.Decimal,\n    RxViewComponentType.Floating,\n    RxViewComponentType.Integer,\n    RxViewComponentType.LocalizedCharacter,\n    RxViewComponentType.Selection,\n    RxViewComponentType.SelectGroup,\n    RxViewComponentType.RichTextarea,\n    BwfViewComponentType.DynamicNamedList\n  ]);\n\n  constructor(\n    private viewDesignerFacade: ViewDesignerFacade,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private viewDesignerModels: RxViewDesignerModels\n  ) {}\n\n  canvasLayout$ = this.getRecursiveViewLayoutGuids().pipe(\n    switchMap((guids) =>\n      guids.length\n        ? this.viewDesignerFacade.areViewModelsReady$.pipe(\n            // Wait until component models will be instantiated after save view definition.\n            filter(Boolean),\n            switchMapTo(this.viewDesignerFacade.viewDesignerModelState$.pipe(take(1)))\n          )\n        : this.viewDesignerFacade.viewDesignerModelState$.pipe(take(1))\n    ),\n    map((designModelState): IViewDesignerCanvasLayout => {\n      const viewModel = designModelState.viewDesignModel;\n      const componentModels = designModelState.viewComponentDesignModels;\n\n      this.canvasDndListIds.length = 0;\n\n      return {\n        guid: viewModel.guid,\n        factory: this.designerComponentFactory,\n        outlets: viewModel.layout.outlets.map((outlet) => ({\n          name: outlet.name,\n          columns: outlet.columns.map((column, i) => {\n            const listId = String(`${viewModel.guid}-${outlet.name}-${i}`);\n\n            // do not allow components to be dropped in the root of a SHELL view\n            if (viewModel.type !== ViewDefinitionType.Shell) {\n              this.canvasDndListIds.push(listId);\n            }\n\n            return {\n              ...column,\n              children: column.children.map((childGuid) =>\n                this.initializeCanvasItem(childGuid, componentModels, this.canvasDndListIds)\n              ),\n              listId,\n              dndListIds: this.canvasDndListIds\n            } as IViewDesignerCanvasColumn;\n          })\n        })),\n        model: null,\n        descriptor: null,\n        isSelected$: of(false)\n      };\n    }),\n    tap(() => {\n      // required for DND\n      // https://github.com/angular/components/issues/16671\n      this.canvasDndListIds.reverse();\n    })\n  );\n\n  private viewBreadcrumbItem$ = this.viewDesignerFacade.getViewPropertyValue('displayName').pipe(\n    concatMap((displayName) =>\n      of(\n        displayName\n          ? displayName === RX_APPLICATION.shellDefinitionName\n            ? 'Application shell'\n            : displayName\n          : '<New view>'\n      )\n    ),\n    withLatestFrom(this.viewDesignerFacade.viewModelGuid$),\n    map(\n      ([viewBreadcrumbLabel, guid]): IBreadcrumbItem => ({\n        label: viewBreadcrumbLabel,\n        data: { guid }\n      })\n    )\n  );\n\n  private selectedComponentBreadcrumbItems$ = this.viewDesignerFacade.selectedComponentGuid$.pipe(\n    switchMap((componentGuid) =>\n      componentGuid\n        ? combineLatest([\n            this.viewDesignerFacade.breadcrumbs$,\n            this.viewDesignerFacade.getParentComponentGuid(componentGuid)\n          ]).pipe(\n            withLatestFrom(this.viewDesignerFacade.viewComponentModels$),\n            map(([[breadcrumbs], viewComponentModels]) =>\n              // Handle empty viewComponentModels state during view definition save.\n              isEmpty(viewComponentModels)\n                ? []\n                : findAllParentComponentGuids(componentGuid, viewComponentModels).map((parentGuid) => {\n                    let label = breadcrumbs[parentGuid];\n\n                    if (!label) {\n                      const component = viewComponentModels[parentGuid];\n                      const descriptor = this.rxViewComponentRegistryService.get(component.type);\n\n                      label = descriptor.name;\n                    }\n\n                    return { label, data: { guid: parentGuid } } as IBreadcrumbItem;\n                  })\n            )\n          )\n        : of([])\n    )\n  );\n\n  breadcrumbItems$ = combineLatest([this.viewBreadcrumbItem$, this.selectedComponentBreadcrumbItems$]).pipe(\n    map(([viewItem, componentItems]) => [viewItem, ...componentItems])\n  );\n\n  validationIssues$ = this.viewDesignerFacade.validationIssues$.pipe(\n    withLatestFrom(this.viewDesignerFacade.viewDesignerModelState$),\n    map(\n      ([validationIssuesState, modelState]: [\n        IViewDesignerValidationState,\n        IViewDesignModelState\n      ]): IValidationIssueSection[] =>\n        flow(\n          (state: IViewDesignerValidationState) =>\n            mergeWith({ ...state.issues }, state.expressionIssues, (issues = [], expressionIssues = []) =>\n              issues.concat(expressionIssues)\n            ),\n          (issuesByComponentGuid) =>\n            reduce(\n              issuesByComponentGuid,\n              (result, issues, guid) => {\n                let name;\n\n                if (modelState.viewDesignModel?.guid === guid) {\n                  name = modelState.viewDesignModel.displayName || 'View designer';\n                } else if (modelState.viewComponentDesignModels[guid]) {\n                  const type = modelState.viewComponentDesignModels[guid].type;\n                  const descriptor = this.rxViewComponentRegistryService.get(type);\n\n                  name = descriptor && descriptor.name;\n                }\n\n                if (name) {\n                  result.push({\n                    title: name,\n                    issues: issues.map((issue) => ({\n                      type: issue.type,\n                      description: issue.description,\n                      disableCorrection: issue.disableCorrection,\n                      data: {\n                        guid,\n                        propertyName: issue.propertyName,\n                        data: issue.data\n                      }\n                    }))\n                  } as IValidationIssueSection);\n                }\n\n                return result;\n              },\n              []\n            )\n        )(validationIssuesState)\n    )\n  );\n\n  getLicensedComponents(): Observable<IViewComponentDescriptor[]> {\n    return this.rxViewComponentRegistryService.getLicensedComponents().pipe(\n      first(),\n      map((components) =>\n        components.filter(\n          (component) =>\n            !this.rxViewComponentRegistryService.isDataComponentDescriptor(component) &&\n            !component.hidden &&\n            !component.isPageComponent\n        )\n      )\n    );\n  }\n\n  private getRecursiveViewLayoutGuids(): Observable<string[]> {\n    return this.viewDesignerFacade\n      .getViewPropertyValue('layout')\n      .pipe(switchMap((layout) => this.getRecursiveComponentLayoutGuids(layout)));\n  }\n\n  private getRecursiveComponentLayoutGuids(layout: IViewLayout): Observable<string[]> {\n    const guids = RxViewLayout.getViewLayoutChildGuids(layout);\n\n    return guids.length\n      ? combineLatest(\n          guids.map((guid) =>\n            this.viewDesignerFacade\n              .getComponentLayout(guid)\n              .pipe(\n                switchMap((childLayout) =>\n                  childLayout\n                    ? this.getRecursiveComponentLayoutGuids(childLayout).pipe(\n                        map((childGuids) => [...childGuids, ...guids])\n                      )\n                    : of(guids)\n                )\n              )\n          )\n        )\n      : of([]);\n  }\n\n  private initializeCanvasItem(\n    componentGuid: string,\n    componentModels: IViewComponentDesignModels,\n    dndListIds: string[]\n  ): IViewDesignerCanvasLayout {\n    const componentModel = componentModels[componentGuid];\n    const descriptor = this.rxViewComponentRegistryService.get(componentModel.type);\n\n    const canvasLayout: IViewDesignerCanvasLayout = {\n      guid: componentModel.guid,\n      descriptor,\n      factory: descriptor.designComponentFactory,\n      model: this.viewDesignerModels.get(componentModel.guid),\n      outlets: [],\n      isSelected$: this.viewDesignerFacade.selectedComponentGuid$.pipe(map((guid) => guid === componentModel.guid)),\n      label: descriptor.name\n    };\n\n    if (componentModel.layout) {\n      canvasLayout.viewComponentWithParents = findAllParentComponentGuids(componentModel.guid, componentModels).map(\n        (guid) => ({ guid, type: componentModels[guid].type })\n      );\n\n      componentModel.layout.outlets.forEach((outlet) => {\n        const canvasOutlet: IViewDesignerCanvasOutlet = {\n          name: outlet.name,\n\n          columns: outlet.columns.map((column, i) => {\n            const listId = `${componentModel.guid}-${outlet.name}-${i}`;\n\n            dndListIds.push(listId);\n\n            return {\n              children: column.children.map((childGuid) =>\n                this.initializeCanvasItem(childGuid, componentModels, dndListIds)\n              ),\n              span: column.span,\n              listId,\n              dndListIds\n            };\n          })\n        };\n\n        canvasLayout.outlets.push(canvasOutlet);\n      });\n    }\n\n    return canvasLayout;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  AnyViewComponentDefinition,\n  IViewDefinition,\n  RxViewComponentType,\n  RxViewDefinitionLocalizationService\n} from '@helix/platform/view/api';\nimport { IViewComponentDesignModel } from '../interfaces/view-component-design-model.interface';\nimport { IViewComponentDesignModels } from '../interfaces/view-component-design-models.interface';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport {\n  isArray,\n  isBoolean,\n  isFunction,\n  isNumber,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  omit,\n  transform,\n  has\n} from 'lodash';\nimport { IPlainObject, RxBundleCacheService, RxDefinitionNameService } from '@helix/platform/shared/api';\nimport { getChildGuidsFromModel } from './layout-helpers';\nimport { RxViewDesignerModels } from './view-designer-models.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDefinitionGeneratorService {\n  constructor(\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxBundleCacheService: RxBundleCacheService,\n    private viewDesignerModels: RxViewDesignerModels,\n    private rxViewDefinitionLocalizationService: RxViewDefinitionLocalizationService\n  ) {}\n\n  generate(viewModel: IViewDesignModel, componentModels: IViewComponentDesignModels, forSave = false): IViewDefinition {\n    const clonedViewModel = viewModel;\n\n    const viewDefinition: Partial<IViewDefinition> = omit(\n      clonedViewModel,\n      'displayName',\n      'layout',\n      'layoutName',\n      'pageComponent',\n      'isAngularJsView'\n    );\n\n    viewDefinition.name =\n      viewDefinition.name ||\n      this.rxDefinitionNameService.getDefinitionName(this.rxBundleCacheService.bundleId, clonedViewModel.displayName);\n\n    viewDefinition.componentDefinitions = this.generateComponentDefinitions(clonedViewModel, componentModels);\n\n    if (forSave) {\n      viewDefinition.localizableStringsByComponentId =\n        this.rxViewDefinitionLocalizationService.extractLocalizableStrings(viewDefinition as IViewDefinition);\n    }\n\n    delete viewDefinition.localizablePropertyToStringGuidMap;\n    viewDefinition.layout = JSON.stringify(clonedViewModel.layout);\n\n    return viewDefinition as IViewDefinition;\n  }\n\n  private generateComponentDefinitions(\n    model: IViewDesignModel | IViewComponentDesignModel,\n    componentModelItems: IViewComponentDesignModels\n  ): AnyViewComponentDefinition[] {\n    return getChildGuidsFromModel(model).map((guid) => {\n      const componentDefinition: any = { ...componentModelItems[guid] };\n      const componentModel = this.viewDesignerModels.get(guid);\n\n      const propertiesByName = isFunction(componentModel?.getPropertiesByName)\n        ? componentModel.getPropertiesByName(componentDefinition.propertiesByName)\n        : componentDefinition.propertiesByName;\n\n      componentDefinition.propertiesByName = this.serializeComponentDefinitionProperties(propertiesByName);\n      delete componentDefinition.parentGuid;\n\n      // Move name out of propertiesByName for all components except actions.\n      if (\n        componentDefinition.type !== RxViewComponentType.Action &&\n        has(componentDefinition.propertiesByName, 'name')\n      ) {\n        if (componentDefinition.propertiesByName.name) {\n          componentDefinition.name = componentDefinition.propertiesByName.name;\n        }\n\n        delete componentDefinition.propertiesByName.name;\n      }\n\n      if (componentDefinition.layout || componentDefinition.childDataComponentGuids) {\n        componentDefinition.componentDefinitions = this.generateComponentDefinitions(\n          componentDefinition,\n          componentModelItems\n        );\n\n        delete componentDefinition.childDataComponentGuids;\n      }\n\n      if (componentDefinition.layout) {\n        componentDefinition.layout = JSON.stringify(componentDefinition.layout);\n      }\n\n      return componentDefinition;\n    });\n  }\n\n  private serializeComponentDefinitionProperties(componentProperties: IPlainObject): IPlainObject {\n    return transform(\n      componentProperties,\n      (result: IPlainObject, value: any, key: string) => {\n        switch (true) {\n          case isArray(value):\n          case isNumber(value):\n          case isBoolean(value):\n          case isPlainObject(value):\n            result[key] = JSON.stringify(value);\n            break;\n\n          case isObject(value):\n            // support Set, Map\n            const obj = Object.create(null);\n\n            value.forEach((v, k) => (obj[k] = v));\n            result[key] = JSON.stringify(obj);\n            break;\n\n          case isFunction(value):\n          case isUndefined(value):\n            result[key] = null;\n            break;\n\n          default:\n            result[key] = value;\n            break;\n        }\n      },\n      {}\n    );\n  }\n}\n","export const RX_VIEW_DESIGNER = {\n  stencilGroups: {\n    basicComponents: {\n      label: 'Basic components'\n    },\n    chatbotComponents: {\n      label: 'Chatbot components'\n    },\n    recordEditorInputs: {\n      label: 'Record editor inputs'\n    }\n  },\n\n  inspectorTabs: {\n    viewProperties: {\n      tabId: 0\n    },\n\n    componentProperties: {\n      tabId: 1\n    },\n\n    validationIssues: {\n      tabId: 2\n    }\n  }\n};\n","import { ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { RxStringService } from '@helix/platform/utils';\nimport { groupBy, lowerCase, map as _map, sortBy, flow } from 'lodash';\nimport { debounceTime, map, startWith } from 'rxjs/operators';\nimport { IViewComponentGroup } from './view-component-group.interface';\nimport { IViewComponentDescriptor } from '@helix/platform/view/api';\nimport { RX_VIEW_DESIGNER } from '../../view-designer.constant';\nimport { IViewComponentDragData } from '../view-designer-canvas';\nimport { combineLatest, Observable, ReplaySubject } from 'rxjs';\n\n@Component({\n  selector: 'rx-view-designer-palette',\n  templateUrl: './view-designer-palette.component.html',\n  styleUrls: ['./view-designer-palette.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ViewDesignerPaletteComponent implements OnInit, OnDestroy {\n  @Input()\n  set components(value: IViewComponentDescriptor[]) {\n    this.componentsSubject$.next(value);\n  }\n\n  @Input()\n  allowedDropListIds: string[] = [];\n\n  filterFormControl = new FormControl();\n  viewComponentGroups$: Observable<IViewComponentGroup[]>;\n\n  private componentsSubject$ = new ReplaySubject<IViewComponentDescriptor[]>(1);\n\n  constructor(public stringService: RxStringService) {}\n\n  ngOnInit(): void {\n    this.viewComponentGroups$ = combineLatest([\n      this.filterFormControl.valueChanges.pipe(debounceTime(200), startWith(null)),\n      this.componentsSubject$\n    ]).pipe(\n      map(([componentNameFilterText, viewComponentDescriptors]) =>\n        flow(\n          (descriptors: IViewComponentDescriptor[]) => groupBy(descriptors, (component) => component.group),\n          (groupsByName): IViewComponentGroup[] =>\n            _map(groupsByName, (components, groupName) => ({\n              name: groupName,\n              components: sortBy(components, (component) =>\n                isFinite(component.index) ? component.index : component.name\n              )\n            })),\n          (groups) =>\n            sortBy(groups, (group) => {\n              if (group.name === RX_VIEW_DESIGNER.stencilGroups.basicComponents.label) {\n                return '1';\n              } else if (group.name === RX_VIEW_DESIGNER.stencilGroups.recordEditorInputs.label) {\n                return '2';\n              } else {\n                return '3' + lowerCase(group.name);\n              }\n            }),\n          (groups) =>\n            componentNameFilterText\n              ? groups\n                  .map((group) => ({\n                    ...group,\n                    components: group.components.filter((component) =>\n                      this.stringService.caseInsensitiveSearch(component.name, componentNameFilterText)\n                    )\n                  }))\n                  .filter((group) => group.components.length)\n              : groups\n        )(viewComponentDescriptors)\n      )\n    );\n  }\n\n  getViewComponentDragData(descriptor: IViewComponentDescriptor): IViewComponentDragData {\n    return {\n      draggedViewComponentDescriptor: descriptor\n    };\n  }\n\n  trackByNameFn<T extends { name: string }>(index, item: T): string {\n    return item.name;\n  }\n\n  ngOnDestroy(): void {\n    this.componentsSubject$.complete();\n  }\n}\n","<div class=\"search-field-container\">\n  <adapt-rx-search\n    [formControl]=\"filterFormControl\"\n    rx-id=\"stencil-search-field\"\n    placeholder=\"Search\"\n  ></adapt-rx-search>\n</div>\n\n<adapt-accordion [config]=\"{ multiselect: true, tabs: [] }\">\n  <adapt-accordion-tab\n    *ngFor=\"let viewComponentsGroup of viewComponentGroups$ | async; trackBy: trackByNameFn\"\n    [title]=\"viewComponentsGroup.name\"\n    [attr.rx-id]=\"stringService.toRxId(viewComponentsGroup.name)\"\n    [isOpen]=\"true\"\n  >\n    <div\n      class=\"group-items-container\"\n      cdkDropList\n      cdkDropListSortingDisabled\n      [cdkDropListConnectedTo]=\"allowedDropListIds\"\n    >\n      <div\n        *ngFor=\"let viewComponent of viewComponentsGroup.components; trackBy: trackByNameFn\"\n        [attr.rx-id]=\"viewComponent.type\"\n        class=\"group-item\"\n        cdkDrag\n        [cdkDragData]=\"getViewComponentDragData(viewComponent)\"\n      >\n        <div class=\"group-item-inner\">\n          <span class=\"item-image d-icon-{{ viewComponent.icon || 'wall' }}\"></span>\n\n          <span class=\"item-name\" title=\"{{ viewComponent.name }}\">\n            {{ viewComponent.name }}\n          </span>\n        </div>\n      </div>\n    </div>\n  </adapt-accordion-tab>\n</adapt-accordion>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  InjectFlags,\n  InjectionToken,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { RxAssociationDefinitionCacheService } from '@helix/platform/association/api';\nimport { RxNamedListDefinitionCacheService } from '@helix/platform/named-list/api';\nimport { RxProcessDefinitionCacheService } from '@helix/platform/process/api';\nimport { RxRecordDefinitionCacheService } from '@helix/platform/record/api';\nimport {\n  IFormBuilderEvent,\n  IPlainObject,\n  RX_APPLICATION,\n  RxComponentCanDeactivateGuard,\n  RxDefinitionNameService,\n  RxFeatureService,\n  RxLogService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport {\n  IExpressionEditorProperty,\n  RX_EXPRESSION_EDITOR,\n  RX_REVERT_CUSTOMIZATION,\n  RX_VALIDATION_FORM_CONTROL,\n  RxDefinitionPickerCacheService,\n  RxExpressionEditorService,\n  RxGainsightConfiguratorService\n} from '@helix/platform/shared/components';\nimport {\n  IBreadcrumbItem,\n  IValidationIssue,\n  IValidationIssueSection,\n  RX_MODAL,\n  RxModalService,\n  RxUtilityModalsService,\n  ValidationIssueType\n} from '@helix/platform/ui-kit';\nimport {\n  RxViewComponentType,\n  RxViewDefinitionCacheService,\n  RxViewDefinitionService,\n  ViewDefinitionType\n} from '@helix/platform/view/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { cloneDeep, filter as _filter, get, isEqual, isUndefined, pick, set, toPath } from 'lodash';\nimport { BehaviorSubject, combineLatest, EMPTY, Observable, of, ReplaySubject, Subject, Subscription } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  shareReplay,\n  skip,\n  startWith,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n  withLatestFrom\n} from 'rxjs/operators';\nimport { ViewDesignerFacade } from '../+state/view-designer.facade';\nimport { DropComponentData, IViewComponentDropData } from '../components/view-designer-canvas';\nimport { RxViewDefinitionGeneratorService } from '../core/view-definition-generator.service';\nimport { RxViewDesignerModels } from '../core/view-designer-models.service';\nimport { RxViewModel } from '../model/view-model.service';\nimport { IViewDesignerConfiguration } from '../public-interfaces';\nimport { RxViewDesignerHelperService } from './view-designer-helper.service';\n\nexport const RX_VIEW_MODEL = new InjectionToken('RX_VIEW_MODEL');\n\n@Component({\n  selector: 'rx-view-designer',\n  templateUrl: './view-designer.component.html',\n  styleUrls: ['./view-designer.component.scss'],\n  providers: [RxViewModel]\n})\nexport class RxViewDesignerComponent implements OnInit, OnDestroy, OnChanges {\n  @Input()\n  configuration: IViewDesignerConfiguration;\n\n  @Output()\n  viewDefinitionSaved: EventEmitter<string> = new EventEmitter();\n\n  @Output()\n  viewDefinitionErrorLoading: EventEmitter<void> = new EventEmitter();\n\n  @Output()\n  closeDesigner: EventEmitter<void> = new EventEmitter<void>();\n\n  @ViewChild('viewPropertyInspector', { read: ElementRef })\n  viewPropertyInspectorElementRef: ElementRef;\n\n  @ViewChild('viewComponentPropertyInspector', { read: ElementRef })\n  viewComponentPropertyInspectorElementRef: ElementRef;\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private inspectorFocusEditorSubject = new Subject<{ editorName: string; data: IPlainObject }>();\n  private isViewDefinitionChanged$ = new BehaviorSubject<boolean>(false);\n\n  isPreviewAvailable$: Observable<boolean>;\n  isSaveButtonDisabled$: Observable<boolean>;\n\n  validationIssues$: Observable<IValidationIssueSection[]> = this.rxViewDesignerHelperService.validationIssues$.pipe(\n    shareReplay(1),\n    takeUntil(this.destroyed$)\n  );\n\n  breadcrumbItems$: Observable<IBreadcrumbItem[]> = this.rxViewDesignerHelperService.breadcrumbItems$;\n  canvasLayout$ = this.rxViewDesignerHelperService.canvasLayout$;\n  canvasDndListIds = this.rxViewDesignerHelperService.canvasDndListIds;\n\n  private extensionViewRootComponentType = RxViewComponentType.RecordEditor;\n\n  // Component UI State\n  isDesignMode = true;\n  isStencilExpanded = true;\n  isInspectorExpanded = true;\n  isPageView: boolean;\n  viewDefinitionName$: Observable<string>;\n  inspectorFocusEditor$ = this.inspectorFocusEditorSubject.asObservable();\n  hasValidationErrors$: Observable<boolean>;\n  hasValidationWarning$: Observable<boolean>;\n\n  viewComponentInspectorEmptyText$ = this.viewDesignerFacade.selectedComponentInspectorLayout$.pipe(\n    switchMap((selectedComponentLayout) =>\n      selectedComponentLayout\n        ? of(null)\n        : this.viewDesignerFacade.selectedComponentGuid$.pipe(\n            withLatestFrom(this.viewDesignerFacade.viewModel$),\n            map(([selectedComponentGuid, viewModel]) =>\n              selectedComponentGuid && selectedComponentGuid !== viewModel.guid\n                ? 'Selected component has no properties.'\n                : 'Select a component to view its properties here.'\n            )\n          )\n    ),\n    shareReplay({\n      refCount: true,\n      bufferSize: 1\n    })\n  );\n\n  selectedComponentModel$ = this.viewDesignerFacade.selectedComponentGuid$.pipe(\n    map((guid) => this.rxViewDesignerModels.get(guid))\n  );\n\n  isReadOnly$ = this.viewDesignerFacade.isViewReadOnly$;\n\n  paletteComponents$ = combineLatest([\n    this.viewDesignerFacade.isExtensionView$.pipe(tap((isExtensionView) => (this.isExtensionView = isExtensionView))),\n    this.viewDesignerFacade.isExtensionContainerSet$.pipe(\n      tap((isExtensionContainerSet) => (this.isExtensionContainerSet = isExtensionContainerSet))\n    ),\n    this.rxViewDesignerHelperService\n      .getLicensedComponents()\n      .pipe(\n        map((descriptors) =>\n          this.configuration.paletteComponentsPredicate\n            ? descriptors.filter((descriptor) => this.configuration.paletteComponentsPredicate(descriptor))\n            : descriptors\n        )\n      )\n  ]).pipe(\n    switchMap(([isExtensionView, isExtensionContainerSet, componentDescriptors]) =>\n      isExtensionView\n        ? this.viewDesignerFacade.firstViewComponentModelType$.pipe(\n            map((firstViewComponentType) =>\n              firstViewComponentType === this.extensionViewRootComponentType\n                ? componentDescriptors.filter(\n                    ({ type }) =>\n                      type !== this.extensionViewRootComponentType &&\n                      this.rxViewDesignerHelperService.extensionViewAllowedComponentTypes.has(\n                        type as RxViewComponentType\n                      )\n                  )\n                : componentDescriptors.filter(({ type }) => type === this.extensionViewRootComponentType)\n            )\n          )\n        : of(componentDescriptors)\n    )\n  );\n\n  private viewDefinitionChangeSubscription: Subscription;\n\n  rxViewModel: RxViewModel | any;\n  private isExtensionView: boolean;\n  private isExtensionContainerSet: boolean;\n\n  constructor(\n    public viewDesignerFacade: ViewDesignerFacade,\n    private rxNotificationService: RxNotificationService,\n    private rxDefinitionPickerCacheService: RxDefinitionPickerCacheService,\n    private rxNamedListDefinitionCacheService: RxNamedListDefinitionCacheService,\n    private rxModalService: RxModalService,\n    private translateService: TranslateService,\n    private rxUtilityModalsService: RxUtilityModalsService,\n    private rxViewDesignerHelperService: RxViewDesignerHelperService,\n    private rxExpressionEditorService: RxExpressionEditorService,\n    private rxViewDefinitionService: RxViewDefinitionService,\n    private rxComponentCanDeactivateGuard: RxComponentCanDeactivateGuard,\n    private rxViewDefinitionGeneratorService: RxViewDefinitionGeneratorService,\n    private rxViewDesignerModels: RxViewDesignerModels,\n    private rxLogService: RxLogService,\n    private injector: Injector,\n    private renderer: Renderer2,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxAssociationDefinitionCacheService: RxAssociationDefinitionCacheService,\n    private rxProcessDefinitionCacheService: RxProcessDefinitionCacheService,\n    private rxViewDefinitionCacheService: RxViewDefinitionCacheService,\n    private rxGainsightConfiguratorService: RxGainsightConfiguratorService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxFeatureService: RxFeatureService\n  ) {\n    const customViewModel = this.injector.get(RX_VIEW_MODEL, null, InjectFlags.Optional);\n\n    this.rxViewModel = customViewModel || this.injector.get(RxViewModel);\n\n    this.rxDefinitionPickerCacheService.registerConsumer();\n    this.rxNamedListDefinitionCacheService.registerConsumer(this.destroyed$);\n    this.rxAssociationDefinitionCacheService.registerConsumer(this.destroyed$);\n    this.rxProcessDefinitionCacheService.registerConsumer(this.destroyed$);\n    this.rxRecordDefinitionCacheService.registerConsumer(this.destroyed$);\n    this.rxViewDefinitionCacheService.registerConsumer(this.destroyed$);\n  }\n\n  ngOnInit(): void {\n    this.isPreviewAvailable$ = this.viewDesignerFacade.getViewPropertyValue('lastUpdateTime').pipe(\n      map(\n        (lastUpdateTime) =>\n          !this.configuration.disablePreview &&\n          (Boolean(lastUpdateTime) || !isUndefined(this.configuration.viewDefinitionName))\n      ),\n      takeUntil(this.destroyed$)\n    );\n\n    this.viewDefinitionName$ = this.viewDesignerFacade.getViewPropertyValue('name');\n\n    this.viewDesignerFacade\n      .getViewPropertyValue('pageComponent')\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((pageComponent) => {\n        this.isPageView = Boolean(pageComponent);\n      });\n\n    this.viewDesignerFacade.viewDefinitionSaveSuccess$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(({ viewDefinitionName }) => {\n        this.rxNotificationService.addSuccessMessage('View definition saved successfully.');\n        this.viewDefinitionSaved.emit(viewDefinitionName);\n\n        this.initViewDesigner();\n      });\n\n    this.viewDesignerFacade.viewDefinitionLoadError$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(() => this.viewDefinitionErrorLoading.emit());\n\n    this.hasValidationErrors$ = this.validationIssues$.pipe(\n      map((validationIssues) =>\n        Boolean(\n          _filter(validationIssues, {\n            issues: [{ type: ValidationIssueType.Error }]\n          }).length\n        )\n      ),\n      distinctUntilChanged()\n    );\n\n    this.hasValidationWarning$ = this.validationIssues$.pipe(\n      map((validationIssues) =>\n        Boolean(\n          _filter(validationIssues, {\n            issues: [{ type: ValidationIssueType.Warning }]\n          }).length\n        )\n      ),\n      distinctUntilChanged()\n    );\n\n    this.isSaveButtonDisabled$ = combineLatest([\n      this.hasValidationErrors$,\n      this.viewDesignerFacade.areViewModelsReady$,\n      this.isViewDefinitionChanged$,\n      this.isReadOnly$\n    ]).pipe(\n      map(\n        ([hasValidationErrors, areViewModelsReady, isChanged, isReadOnly]) =>\n          hasValidationErrors || !areViewModelsReady || !isChanged || isReadOnly\n      ),\n      startWith(true)\n    );\n\n    this.isReadOnly$.pipe(takeUntil(this.destroyed$)).subscribe((isReadOnly) => {\n      if (isReadOnly) {\n        this.rxNotificationService.addWarningMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.designer.read-only-definition-warning.message')\n        );\n      }\n    });\n\n    if (this.rxFeatureService.isFeatureEnabled('DRD21-11744')) {\n      this.viewDefinitionName$.pipe(take(1)).subscribe((viewDefinitionName) => {\n        this.rxGainsightConfiguratorService.updateGlobalContext({\n          subProductLevel1: {\n            name: 'Design'\n          },\n          subProductLevel2: {\n            name:\n              this.rxDefinitionNameService.getDisplayName(viewDefinitionName) == RX_APPLICATION.shellDefinitionName\n                ? 'Shell designer'\n                : 'View designer'\n          }\n        });\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.configuration.currentValue) {\n      this.initViewDesigner(true);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n    this.inspectorFocusEditorSubject.complete();\n    this.isViewDefinitionChanged$.complete();\n    this.rxDefinitionPickerCacheService.unRegisterConsumer();\n    this.viewDesignerFacade.destroyViewDesigner();\n\n    this.rxGainsightConfiguratorService.removeGlobalContext(['subProductLevel2', 'subProductLevel3']);\n  }\n\n  private initViewDesigner(dispatchInitViewDesignerAction = false): void {\n    // Mark view definition as not changed if it's not. This needs for scenario when view designer\n    // will be reinitialized with another view definition name and current view is dirty.\n    if (this.isViewDefinitionChanged$.getValue()) {\n      this.isViewDefinitionChanged$.next(false);\n    }\n\n    this.viewDefinitionChangeSubscription?.unsubscribe();\n\n    if (dispatchInitViewDesignerAction) {\n      this.viewDesignerFacade.initViewDesigner(\n        pick(this.configuration, ['bundleId', 'viewDefinitionName', 'layoutTemplate'])\n      );\n    }\n\n    this.initViewDefinitionChangeSubscription();\n  }\n\n  private initViewDefinitionChangeSubscription(): void {\n    this.viewDefinitionChangeSubscription = this.viewDesignerFacade.areViewModelsReady$\n      .pipe(\n        // Wait until models state will be updated with view and view components data.\n        filter(Boolean),\n        take(1),\n        switchMap(() =>\n          combineLatest([this.viewDesignerFacade.viewModel$, this.viewDesignerFacade.viewComponentModels$]).pipe(\n            map(([viewModel, viewComponentModels]) =>\n              this.rxViewDefinitionGeneratorService.generate(viewModel, viewComponentModels)\n            ),\n            distinctUntilChanged(isEqual),\n            // Skip first emit from distinctUntilChanged.\n            skip(1),\n            // Complete after first emit, it's considered that view definition gets changed so no needs for further emits.\n            take(1),\n            takeUntil(this.destroyed$)\n          )\n        ),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => {\n        this.isViewDefinitionChanged$.next(true);\n      });\n  }\n\n  onSelectComponent(guid: string): void {\n    this.viewDesignerFacade.selectComponent(guid);\n  }\n\n  onDropComponent(data: DropComponentData): void {\n    this.viewDesignerFacade.insertComponent(data);\n  }\n\n  onRemoveComponent(guid: string): void {\n    this.rxUtilityModalsService\n      .confirm('Are you sure you want to delete this view component?')\n      .then((isConfirmed: boolean) => {\n        if (isConfirmed) {\n          this.viewDesignerFacade.removeViewComponents([guid], true);\n\n          if (this.isPageView) {\n            this.viewDesignerFacade.updateViewProperties({ pageComponent: null });\n          }\n        }\n      });\n  }\n\n  onInspectorTabChange(event: { index: number }): void {\n    this.viewDesignerFacade.selectInspectorTab({ tabId: event.index });\n  }\n\n  toggleDesignMode(): void {\n    if (this.isDesignMode) {\n      this.viewDesignerFacade.generateViewDefinition();\n    }\n\n    this.isDesignMode = !this.isDesignMode;\n  }\n\n  onComponentPropertiesChange(properties: IPlainObject): void {\n    this.viewDesignerFacade.updateSelectedComponentProperties(properties);\n  }\n\n  onEditorEvent(event: IFormBuilderEvent, inspectorElementRef: ElementRef): void {\n    if (event.type === RX_VALIDATION_FORM_CONTROL.events.correctValidationIssue) {\n      this.correctValidationIssue(event.payload.componentGuid, event.payload.propertyName);\n    }\n\n    if (event.type === RX_REVERT_CUSTOMIZATION.events.revertCustomization) {\n      this.revertCustomization();\n    }\n\n    if (event.type === RX_EXPRESSION_EDITOR.events.openExpressionEditor) {\n      this.openExpressionEditor(event.payload, inspectorElementRef);\n    }\n  }\n\n  private getExpressionProperties(inspectorElementRef: ElementRef): Observable<IExpressionEditorProperty[]> {\n    return (\n      this.viewComponentPropertyInspectorElementRef === inspectorElementRef\n        ? this.viewDesignerFacade.selectedComponentProperties$\n        : this.viewDesignerFacade.viewModel$\n    ).pipe(\n      map((properties) =>\n        Array.from(\n          this.renderer\n            .selectRootElement(inspectorElementRef.nativeElement, true)\n            .querySelectorAll('rx-expression-form-control')\n        ).map((element: Element) => {\n          const propertyPath = element.getAttribute('property-path');\n\n          return {\n            path: propertyPath,\n            value: get(properties, propertyPath),\n            label: element.getAttribute('property-label')\n          };\n        })\n      )\n    );\n  }\n\n  private openExpressionEditor(payload: IPlainObject, inspectorElementRef: ElementRef): void {\n    const isComponentInspectorChange = this.viewComponentPropertyInspectorElementRef === inspectorElementRef;\n\n    const props$ = isComponentInspectorChange\n      ? this.viewDesignerFacade.selectedComponentProperties$\n      : this.viewDesignerFacade.viewModel$;\n\n    combineLatest([this.viewDesignerFacade.selectedComponentGuid$, props$])\n      .pipe(\n        take(1),\n        switchMap(([componentGuid, properties]) => {\n          const model = isComponentInspectorChange ? this.rxViewDesignerModels.get(componentGuid) : this.rxViewModel;\n          const expressionConfigurator = model?.expressionConfigurator;\n\n          if (expressionConfigurator) {\n            return this.rxExpressionEditorService\n              .openEditor({\n                property: {\n                  path: payload.propertyPath,\n                  value: get(properties, payload.propertyPath),\n                  label: payload.propertyLabel\n                },\n                isReadOnly: payload.isReadOnly,\n                expressionConfigurator,\n                legend: [\n                  {\n                    label: this.translateService.instant(\n                      'com.bmc.arsys.rx.client.expression-editor.legend.function.label'\n                    ),\n                    icon: 'd-icon-mathematical_function'\n                  },\n                  {\n                    label: this.translateService.instant(\n                      'com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'\n                    ),\n                    icon: 'd-icon-dollar'\n                  },\n                  {\n                    label: this.translateService.instant(\n                      'com.bmc.arsys.rx.client.expression-editor.legend.view-component.label'\n                    ),\n                    icon: 'd-icon-file_o'\n                  },\n                  {\n                    label: this.translateService.instant(\n                      'com.bmc.arsys.rx.client.expression-editor.legend.view-component-property.label'\n                    ),\n                    icon: 'd-icon-file_o_gear'\n                  },\n                  {\n                    label: this.translateService.instant(\n                      'com.bmc.arsys.rx.client.expression-editor.legend.view-input-parameter.label'\n                    ),\n                    icon: 'd-icon-arrow_right_square_input'\n                  }\n                ],\n                expressionPropertyNavigator: {\n                  getProperties: this.getExpressionProperties.bind(this, inspectorElementRef)\n                }\n              })\n              .pipe(\n                withLatestFrom(props$),\n                map(([{ path, value }, props]) => {\n                  if (props.hasOwnProperty(path)) {\n                    return { [path]: value };\n                  } else {\n                    // Don't override nested model properties e.g,\n                    // when 'path' = \"outputParams[1].source\" and 'value' = \"${bar}\", model will be updated from:\n                    // {..., outputParams: [{name: 'foo', source: ${foo}}, {name: 'bar', source: null}] } to:\n                    // {..., outputParams: [{name: 'foo', source: ${foo}}, {name: 'bar', source: ${bar}}] }\n                    const headPropertyName = toPath(path)[0];\n\n                    // clone value because \"set\" mutates object, otherwise expression\n                    // form control component will not be updated with new value.\n                    return set({ [headPropertyName]: cloneDeep(props[headPropertyName]) }, path, value);\n                  }\n                })\n              );\n          } else {\n            this.rxLogService.debug(\n              'View designer: Expression editor cannot be opened without expression configurator.'\n            );\n\n            return EMPTY;\n          }\n        }),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe((value) =>\n        isComponentInspectorChange\n          ? this.viewDesignerFacade.updateSelectedComponentProperties(value)\n          : this.viewDesignerFacade.updateViewProperties(value)\n      );\n  }\n\n  saveViewDefinition(): void {\n    this.viewDesignerFacade.viewModel$\n      .pipe(\n        take(1),\n        switchMap((viewModel) => {\n          const message =\n            viewModel.type === ViewDefinitionType.Shell\n              ? 'If you save your changes now, you will not be able to run this application using the old UI. Do you want to continue?'\n              : 'If you save this view definition, you will not be able to open it in the old view designer. Do you want to continue?';\n\n          if (viewModel.isAngularJsView) {\n            return this.rxModalService.confirm({\n              title: 'Warning',\n              modalStyle: RX_MODAL.modalStyles.warning,\n              message\n            });\n          } else {\n            return of(true);\n          }\n        }),\n        filter(Boolean),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => {\n        this.viewDesignerFacade.saveViewDefinition();\n      });\n  }\n\n  onCorrectIssue(validationIssue: IValidationIssue): void {\n    this.correctValidationIssue(\n      validationIssue.data.guid,\n      validationIssue.data.propertyName,\n      validationIssue.data.data\n    );\n  }\n\n  correctValidationIssue(guid: string, propertyName: string, data?: IPlainObject): void {\n    this.viewDesignerFacade.selectComponent(guid);\n\n    // need to wait until inspector will be visible\n    // there are no way to focus to invisible elements\n    setTimeout(() => this.inspectorFocusEditorSubject.next({ editorName: propertyName, data }), 10);\n  }\n\n  private revertCustomization(): void {\n    this.viewDefinitionName$\n      .pipe(\n        switchMap((viewDefinitionName) => this.rxViewDefinitionService.revertCustomization(viewDefinitionName)),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => {\n        this.rxComponentCanDeactivateGuard.disable();\n        window.location.reload();\n      });\n  }\n\n  onViewPropertiesChange(properties: IPlainObject): void {\n    this.viewDesignerFacade.updateViewProperties(properties);\n  }\n\n  showPreview(): void {\n    this.viewDesignerFacade.runPreview();\n  }\n\n  canDeactivate(): boolean {\n    let canDeactivate = true;\n\n    combineLatest([this.isViewDefinitionChanged$, this.isReadOnly$])\n      .pipe(\n        map(([isChanged, isReadOnly]) => !isChanged || isReadOnly),\n        take(1)\n      )\n      .subscribe((isPristineOrReadOnly) => {\n        canDeactivate = isPristineOrReadOnly;\n      });\n\n    return canDeactivate;\n  }\n\n  onBeforeComponentDropInRoot(event: IViewComponentDropData): void {\n    if (this.isExtensionView) {\n      if (!this.isExtensionContainerSet) {\n        this.rxNotificationService.addWarningMessage('Select Extension container before adding view components.');\n\n        event.preventDrop = true;\n      } else if (event.draggedViewComponentDescriptor.type !== RxViewComponentType.RecordEditor) {\n        this.rxNotificationService.addWarningMessage('This view component can only be added inside a Record editor.');\n\n        event.preventDrop = true;\n      }\n    }\n  }\n}\n","<rx-designer-header\n  [bundleName]=\"viewDesignerFacade.bundleFriendlyName$ | async\"\n  [breadcrumbItems]=\"breadcrumbItems$ | async\"\n  [isDesignMode]=\"isDesignMode\"\n  [isPreviewAvailable]=\"isPreviewAvailable$ | async\"\n  [isSaveButtonDisabled]=\"isSaveButtonDisabled$ | async\"\n  (breadcrumbSelected)=\"onSelectComponent($event.data.guid)\"\n  (toggleDesignMode)=\"toggleDesignMode()\"\n  (showPreview)=\"showPreview()\"\n  (save)=\"saveViewDefinition()\"\n  (closeDesigner)=\"closeDesigner.emit()\"\n></rx-designer-header>\n\n<div class=\"rx-component-view-designer\" [hidden]=\"!isDesignMode\">\n  <rx-blade\n    [title]=\"'Palette'\"\n    rx-id=\"palette\"\n    (toggle)=\"isStencilExpanded = !isStencilExpanded\"\n    [isExpanded]=\"isStencilExpanded\"\n  >\n    <rx-view-designer-palette\n      *ngIf=\"!isPageView && !(isReadOnly$ | async)\"\n      [components]=\"paletteComponents$ | async\"\n      [allowedDropListIds]=\"canvasDndListIds\"\n    ></rx-view-designer-palette>\n\n    <adapt-alert\n      *ngIf=\"isPageView && !(isReadOnly$ | async)\"\n      class=\"p-3\"\n      [config]=\"{\n        content:\n          'There are no view components to display. View with a Page view component cannot contain any other view components.',\n        variant: 'info',\n        type: 'inline'\n      }\"\n    ></adapt-alert>\n\n    <adapt-alert\n      *ngIf=\"!(viewDesignerFacade.isViewDefinitionLoading$ | async) && isReadOnly$ | async\"\n      class=\"p-3\"\n      [config]=\"{\n        content: 'This view is not editable. There are no view components to display.',\n        variant: 'info',\n        type: 'inline'\n      }\"\n    ></adapt-alert>\n  </rx-blade>\n\n  <section class=\"rx-view-designer-container\">\n    <rx-view-designer-canvas\n      class=\"flex-grow-1\"\n      [layout]=\"canvasLayout$ | async\"\n      [isReadOnly]=\"isReadOnly$ | async\"\n      (componentSelect)=\"onSelectComponent($event)\"\n      (componentRemove)=\"onRemoveComponent($event)\"\n      (componentDrop)=\"onDropComponent($event)\"\n      (beforeComponentDropInRoot)=\"onBeforeComponentDropInRoot($event)\"\n    ></rx-view-designer-canvas>\n  </section>\n\n  <rx-blade\n    [title]=\"'Properties'\"\n    dockTo=\"right\"\n    rx-id=\"properties\"\n    (toggle)=\"isInspectorExpanded = !isInspectorExpanded\"\n    [isExpanded]=\"isInspectorExpanded\"\n  >\n    <adapt-tabset\n      [tab-active]=\"viewDesignerFacade.selectedInspectorTabId$ | async\"\n      (tab-active-changed)=\"onInspectorTabChange($event)\"\n      [class.has-validation-warning]=\"hasValidationWarning$ | async\"\n      [class.has-validation-errors]=\"hasValidationErrors$ | async\"\n      customCssTabContent=\"p-0\"\n      justify=\"justified\"\n    >\n      <adapt-tab-panel icon=\"d-icon-pencil\">\n        <rx-form-builder\n          #viewPropertyInspector\n          (modelChange)=\"onViewPropertiesChange($event)\"\n          (editorEvent)=\"onEditorEvent($event, viewPropertyInspectorElementRef)\"\n          [focusEditor$]=\"inspectorFocusEditor$\"\n          [config]=\"viewDesignerFacade.viewInspectorLayout$ | async\"\n          [model]=\"viewDesignerFacade.viewModel$ | async\"\n          [isReadOnly]=\"isReadOnly$ | async\"\n        ></rx-form-builder>\n      </adapt-tab-panel>\n\n      <adapt-tab-panel icon=\"d-icon-gear\">\n        <rx-form-builder\n          rxInspector\n          [designerItemModel]=\"selectedComponentModel$ | async\"\n          #viewComponentPropertyInspector\n          (modelChange)=\"onComponentPropertiesChange($event)\"\n          (editorEvent)=\"onEditorEvent($event, viewComponentPropertyInspectorElementRef)\"\n          [focusEditor$]=\"inspectorFocusEditor$\"\n          [config]=\"viewDesignerFacade.selectedComponentInspectorLayout$ | async\"\n          [model]=\"viewDesignerFacade.selectedComponentProperties$ | async\"\n          [guid]=\"viewDesignerFacade.selectedComponentGuid$ | async\"\n          [isReadOnly]=\"isReadOnly$ | async\"\n        ></rx-form-builder>\n\n        <adapt-alert\n          [hidden]=\"!(viewComponentInspectorEmptyText$ | async)\"\n          class=\"p-3\"\n          [config]=\"{\n            content: viewComponentInspectorEmptyText$ | async,\n            variant: 'info',\n            type: 'inline'\n          }\"\n        ></adapt-alert>\n      </adapt-tab-panel>\n\n      <adapt-tab-panel icon=\"d-icon-exclamation_triangle\">\n        <rx-validation-issues\n          [definitionTypeDisplayName]=\"'com.bmc.arsys.rx.client.view-definition.label' | translate\"\n          (correctIssue)=\"onCorrectIssue($event)\"\n          [issueSections]=\"validationIssues$ | async\"\n        ></rx-validation-issues>\n      </adapt-tab-panel>\n    </adapt-tabset>\n  </rx-blade>\n</div>\n\n<adapt-code-viewer\n  *ngIf=\"!isDesignMode\"\n  [code]=\"viewDesignerFacade.viewDefinition$ | async | json\"\n  [lang]=\"'javascript'\"\n  [hasToolbar]=\"false\"\n  [theme]=\"'light'\"\n  class=\"full-size\"\n>\n</adapt-code-viewer>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CanvasItemContainerComponent } from './component/canvas-item-container/canvas-item-container.component';\nimport { CanvasItemComponent } from './component/canvas-item/canvas-item.component';\nimport { CanvasOutletComponent } from './component/canvas-outlet/canvas-outlet.component';\nimport { ViewDesignerCanvasComponent } from './view-designer-canvas.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CanvasItemColumnComponent } from './component/canvas-item-column/canvas-item-column.component';\n\n@NgModule({\n  imports: [CommonModule, DragDropModule],\n  exports: [ViewDesignerCanvasComponent, CanvasOutletComponent, CanvasItemComponent, CanvasItemColumnComponent],\n  declarations: [\n    ViewDesignerCanvasComponent,\n    CanvasItemComponent,\n    CanvasItemContainerComponent,\n    CanvasOutletComponent,\n    CanvasItemColumnComponent\n  ],\n  entryComponents: [CanvasItemComponent, CanvasItemContainerComponent, CanvasOutletComponent, CanvasItemColumnComponent]\n})\nexport class ViewDesignerCanvasModule {}\n","import { NgModule } from '@angular/core';\nimport { ViewDesignerCanvasModule } from '../view-designer-canvas/view-designer-canvas.module';\nimport { DesignerComponent } from './designer.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [ViewDesignerCanvasModule, CommonModule],\n  declarations: [DesignerComponent],\n  entryComponents: [DesignerComponent]\n})\nexport class DesignerModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AdaptAccordionModule, AdaptRxSearchModule } from '@bmc-ux/adapt-angular';\nimport { AdaptTextFieldModule } from '@bmc-ux/obsolete';\nimport { ViewDesignerPaletteComponent } from './view-designer-palette.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DragDropModule,\n    ReactiveFormsModule,\n    AdaptAccordionModule,\n    AdaptTextFieldModule,\n    AdaptRxSearchModule\n  ],\n  exports: [ViewDesignerPaletteComponent],\n  declarations: [ViewDesignerPaletteComponent]\n})\nexport class RxViewDesignerPaletteModule {}\n","import { Component, Injector } from '@angular/core';\nimport { ActiveModalRef, DismissReasons } from '@bmc-ux/adapt-angular';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { values } from 'lodash';\n\n@Component({\n  selector: 'rx-runtime-view-params-modal',\n  templateUrl: './runtime-view-params-modal.component.html',\n  styleUrls: ['./runtime-view-params-modal.component.scss']\n})\nexport class RuntimeViewParamsModalComponent extends RxModalClass {\n  inputParamNames: string[];\n  inputParams: { [inputName: string]: string } = {};\n\n  constructor(public activeModalRef: ActiveModalRef, protected injector: Injector) {\n    super(activeModalRef, injector);\n    this.inputParamNames = this.activeModalRef.getData().inputParams;\n  }\n\n  isDirty(): boolean {\n    return values(this.inputParams).some((paramValue: string) => paramValue);\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"modal-body\">\n  <div *ngFor=\"let inputParam of inputParamNames; first as isFirst; index as i\">\n    <adapt-rx-textfield\n      [attr.rx-id]=\"'input-param-' + (i + 1)\"\n      [label]=\"inputParam\"\n      [autofocus]=\"isFirst\"\n      [(ngModel)]=\"inputParams[inputParam]\"\n    >\n    </adapt-rx-textfield>\n  </div>\n</div>\n\n<div class=\"modal-footer\">\n  <adapt-button btn-type=\"primary\" (click)=\"activeModalRef.close(inputParams)\" rx-id=\"ok-button\">\n    OK\n  </adapt-button>\n\n  <adapt-button btn-type=\"secondary\" (click)=\"cancel()\" rx-id=\"cancel-button\"> Cancel </adapt-button>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AdaptButtonModule, AdaptModalModule, AdaptRxTextfieldModule } from '@bmc-ux/adapt-angular';\nimport { NgModule } from '@angular/core';\nimport { RuntimeViewParamsModalComponent } from './runtime-view-params-modal.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, AdaptButtonModule, AdaptModalModule, AdaptRxTextfieldModule],\n  exports: [RuntimeViewParamsModalComponent],\n  declarations: [RuntimeViewParamsModalComponent],\n  entryComponents: [RuntimeViewParamsModalComponent]\n})\nexport class RuntimeViewParamsModalModule {}\n","import { Injector } from '@angular/core';\nimport {\n  IExpressionEvaluator,\n  IViewActionExpressionConfigurator,\n  RxDefaultExpressionEvaluatorService,\n  RxViewActionRegistryService\n} from '@helix/platform/view/api';\nimport { get } from 'lodash';\nimport { RxViewExpressionConfigurator } from './view-expression-configurator.class';\nimport { RxViewDataDictionaryService } from '../data-dictionary/view-data-dictionary.service';\n\nexport class RxViewActionExpressionConfigurator\n  extends RxViewExpressionConfigurator\n  implements IViewActionExpressionConfigurator\n{\n  private rxViewDataDictionaryService = this.injector.get<RxViewDataDictionaryService>(RxViewDataDictionaryService);\n\n  private rxDefaultExpressionEvaluatorService = this.injector.get<RxDefaultExpressionEvaluatorService>(\n    RxDefaultExpressionEvaluatorService\n  );\n\n  private rxViewActionRegistryService = this.injector.get<RxViewActionRegistryService>(RxViewActionRegistryService);\n\n  commonDataDictionary$ = this.rxViewDataDictionaryService.getActionDataDictionary(this.actionGuid);\n\n  constructor(protected injector: Injector, protected actionType: string, protected actionGuid: string) {\n    super(injector);\n  }\n\n  getExpressionEvaluator(propertyName: string): IExpressionEvaluator {\n    const propertyDescriptor = this.rxViewActionRegistryService\n      .get(this.actionType)\n      .parameters.find((param) => param.name === propertyName);\n\n    return get(propertyDescriptor, 'evaluatorService', this.rxDefaultExpressionEvaluatorService);\n  }\n}\n","import { Injector } from '@angular/core';\nimport { map, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { chain, map as _map } from 'lodash';\nimport { RxViewExpressionConfigurator } from './view-expression-configurator.class';\nimport { RxViewDataDictionaryService } from '../data-dictionary/view-data-dictionary.service';\nimport { RxDefaultExpressionEvaluatorService, IExpressionEvaluator } from '@helix/platform/view/api';\nimport {\n  ExpressionOperatorGroup,\n  ExpressionOperatorRowsByGroup,\n  IDataDictionaryBranch,\n  IExpressionConfiguratorDefaultPropertyConfig\n} from '@helix/platform/shared/api';\nimport {\n  IFieldDefinition,\n  IRecordDefinition,\n  RxRecordDefinitionCacheService,\n  RX_RECORD_DEFINITION\n} from '@helix/platform/record/api';\nimport { RxNamedListDefinitionCacheService } from '@helix/platform/named-list/api';\n\nexport class NamedListFilterExpressionConfigurator extends RxViewExpressionConfigurator {\n  private rxNamedListDefinitionCacheService = this.injector.get(RxNamedListDefinitionCacheService);\n  private rxRecordDefinitionCacheService = this.injector.get(RxRecordDefinitionCacheService);\n  private rxViewDataDictionaryService = this.injector.get(RxViewDataDictionaryService);\n  private rxDefaultExpressionEvaluatorService = this.injector.get(RxDefaultExpressionEvaluatorService);\n\n  constructor(private fieldDefinition: IFieldDefinition, protected injector: Injector) {\n    super(injector);\n  }\n\n  commonDataDictionary$ = this.rxNamedListDefinitionCacheService\n    .getNamedListDefinition(this.fieldDefinition.namedListDefinition)\n    .pipe(\n      switchMap((namedListDefinition) =>\n        this.rxRecordDefinitionCacheService.getRecordDefinition(namedListDefinition.recordDefinitionName)\n      ),\n      switchMap((recordDefinition) => this.getNamedListBranch(recordDefinition)),\n      withLatestFrom(this.rxViewDataDictionaryService.getCommonDataDictionary()),\n      map(([namedListBranch, dataDictionary]) => [namedListBranch, ...dataDictionary])\n    );\n\n  getExpressionEvaluator(): IExpressionEvaluator {\n    return this.rxDefaultExpressionEvaluatorService;\n  }\n\n  getDefaultConfig(): IExpressionConfiguratorDefaultPropertyConfig {\n    return {\n      ...super.getDefaultConfig(),\n      operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.AllServer)\n    };\n  }\n\n  private getNamedListBranch(recordDefinition: IRecordDefinition): Observable<IDataDictionaryBranch> {\n    const namedListDictionaryNodes = chain(recordDefinition.fieldDefinitions)\n      .reject({ resourceType: RX_RECORD_DEFINITION.resourceTypes.attachment })\n      .map((fieldDefinition) => ({\n        label: fieldDefinition.name,\n        expression: `'${fieldDefinition.id}'`,\n        icon: 'd-icon-file_o_gear',\n        children:\n          fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.selection\n            ? [\n                {\n                  label: 'Options',\n                  children: _map(fieldDefinition.optionNamesById, (optionName, optionValue) => ({\n                    label: optionName,\n                    expression: optionValue,\n                    icon: 'd-icon-file_o_gear'\n                  }))\n                }\n              ]\n            : []\n      }))\n      .sortBy('label')\n      .value();\n\n    return of({\n      label: 'Filter by',\n      expanded: true,\n      children: namedListDictionaryNodes\n    });\n  }\n}\n","import { Injector } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { distinctUntilChanged, first, map, takeUntil } from 'rxjs/operators';\nimport { isEqual, omit } from 'lodash';\nimport { ViewDesignerFacade } from '../+state/view-designer.facade';\nimport {\n  IViewActionDescriptor,\n  IViewActionDesignProperties,\n  IViewActionDesignPropertyEditorConfig,\n  IViewActionDesignSandbox,\n  IViewActionOutputDataDictionary,\n  ViewActionDesignEditableProperties\n} from '@helix/platform/view/api';\nimport { ExpressionFormControlComponent, IExpressionFormControlOptions } from '@helix/platform/shared/components';\nimport { RxViewActionExpressionConfigurator } from '../expression-configurator/view-action-expression-configurator.class';\nimport { Tooltip } from '@helix/platform/shared/api';\nimport { IViewComponentDesignSetPayload } from '../public-interfaces/view-component-design.types';\n\nexport class ActionSandbox implements IViewActionDesignSandbox {\n  private destroyedSubject = new Subject<void>();\n  private viewDesignerFacade = this.injector.get(ViewDesignerFacade);\n  private actionPropertyEditorConfigSubject = new BehaviorSubject<IViewActionDesignPropertyEditorConfig>([]);\n  private actionPropertiesSubject = new BehaviorSubject<IViewActionDesignProperties>(this.initialProps);\n  private children: IViewComponentDesignSetPayload[] = [];\n\n  readonly children$ = this.viewDesignerFacade.getChildComponents(this.guid);\n  readonly destroyed$ = this.destroyedSubject.asObservable();\n  readonly actionPropertyEditorConfig$ = this.actionPropertyEditorConfigSubject.pipe(takeUntil(this.destroyed$));\n\n  readonly actionProperties$ = this.actionPropertiesSubject.pipe(\n    map(() => omit(this.getActionProperties(), ['name'])),\n    distinctUntilChanged(isEqual),\n    takeUntil(this.destroyed$)\n  );\n\n  constructor(\n    private injector: Injector,\n    readonly descriptor: IViewActionDescriptor,\n    readonly guid: string,\n    private initialProps: IViewActionDesignProperties\n  ) {\n    this.children$.pipe(first(), takeUntil(this.destroyed$)).subscribe((children) => {\n      this.setChildren(children);\n    });\n  }\n\n  updateActionProperties(props: Partial<ViewActionDesignEditableProperties<IViewActionDesignProperties>>): void {\n    this.actionPropertiesSubject.next({\n      ...this.actionPropertiesSubject.getValue(),\n      ...props\n    });\n  }\n\n  setActionProperties(props: ViewActionDesignEditableProperties<IViewActionDesignProperties>): void {\n    const { name, index } = this.actionPropertiesSubject.getValue();\n\n    this.actionPropertiesSubject.next({\n      $condition$: null,\n      ...props,\n      name,\n      index\n    });\n  }\n\n  getActionProperties(): IViewActionDesignProperties {\n    return this.actionPropertiesSubject.getValue();\n  }\n\n  getActionPropertyValue<T extends keyof IViewActionDesignProperties>(propertyName: T): IViewActionDesignProperties[T] {\n    return this.actionPropertiesSubject.getValue()[propertyName];\n  }\n\n  setActionPropertyEditorConfig(actionEditorConfig: IViewActionDesignPropertyEditorConfig): void {\n    const expressionConfigurator = new RxViewActionExpressionConfigurator(\n      this.injector,\n      this.descriptor.name,\n      this.guid\n    );\n\n    actionEditorConfig = [\n      {\n        name: '$condition$',\n        component: ExpressionFormControlComponent,\n        options: {\n          label: 'Condition',\n          tooltip: new Tooltip('The action will execute if the condition is true, or if no condition is defined.'),\n          dataDictionary$: expressionConfigurator.getDataDictionary(),\n          operators: expressionConfigurator.getOperators()\n        } as IExpressionFormControlOptions\n      },\n      ...actionEditorConfig\n    ];\n\n    this.actionPropertyEditorConfigSubject.next(actionEditorConfig);\n  }\n\n  getActionPropertyEditorConfig(): IViewActionDesignPropertyEditorConfig {\n    return this.actionPropertyEditorConfigSubject.getValue();\n  }\n\n  setActionOutputDataDictionary(dataDictionary: IViewActionOutputDataDictionary): void {\n    // check why index is coming as a string for existing actions\n    this.viewDesignerFacade.setActionDataDictionaryBranch(\n      this.guid,\n      this.getActionPropertyValue('index'),\n      this.descriptor.label,\n      dataDictionary\n    );\n  }\n\n  setChildren(data: IViewComponentDesignSetPayload[]): void {\n    this.children = data;\n  }\n\n  getChildren(): IViewComponentDesignSetPayload[] {\n    return this.children;\n  }\n\n  onDestroy(): void {\n    this.destroyedSubject.next();\n    this.destroyedSubject.complete();\n  }\n}\n","import { Injector } from '@angular/core';\nimport { RxViewActionExpressionConfigurator } from '../expression-configurator/view-action-expression-configurator.class';\nimport { IExpressionConfigurator } from '@helix/platform/shared/api';\nimport {\n  IViewActionDesignModel,\n  IViewActionDesignProperties,\n  IViewActionDesignSandbox\n} from '@helix/platform/view/api';\nimport { IViewComponentDesignSetPayload } from '../public-interfaces';\n\nexport abstract class RxViewDesignerActionModel implements IViewActionDesignModel {\n  readonly guid = this.sandbox.guid;\n\n  protected expressionConfigurator = new RxViewActionExpressionConfigurator(\n    this.injector,\n    this.sandbox.descriptor.name,\n    this.sandbox.guid\n  );\n\n  constructor(protected injector: Injector, readonly sandbox: IViewActionDesignSandbox) {}\n\n  getExpressionConfigurator(): IExpressionConfigurator {\n    return this.expressionConfigurator;\n  }\n\n  getPropertiesByName(): IViewActionDesignProperties {\n    return this.sandbox.getActionProperties();\n  }\n\n  getChildren(): IViewComponentDesignSetPayload[] {\n    return this.sandbox.getChildren();\n  }\n\n  getOutputExpressionForPropertyPath(propertyPath: string): string {\n    return `\\${view.components.${this.guid}.output.${propertyPath}}`;\n  }\n}\n","import { Injector } from '@angular/core';\nimport { ExpressionFormControlComponent, IExpressionFormControlOptions } from '@helix/platform/shared/components';\nimport {\n  IViewActionDesignPropertyEditorConfig,\n  IViewActionDesignProperties,\n  IViewActionDesignSandbox,\n  ViewActionDesignEditableProperties\n} from '@helix/platform/view/api';\nimport { RxViewDesignerActionModel } from './view-designer-action-model.class';\nimport { take } from 'rxjs/operators';\n\nexport class RxViewDesignerDefaultActionModel extends RxViewDesignerActionModel {\n  defaultProps: ViewActionDesignEditableProperties<\n    IViewActionDesignProperties\n  > = this.sandbox.descriptor.parameters.reduce((initialProps, param) => {\n    initialProps[param.name] = param.defaultValue;\n\n    return initialProps;\n  }, {});\n\n  constructor(protected injector: Injector, readonly sandbox: IViewActionDesignSandbox) {\n    super(injector, sandbox);\n\n    this.sandbox.actionProperties$.pipe(take(1)).subscribe((props) => {\n      this.sandbox.updateActionProperties({\n        ...this.defaultProps,\n        ...props\n      });\n\n      this.sandbox.setActionPropertyEditorConfig(this.getActionEditorConfig());\n    });\n  }\n\n  getActionEditorConfig(): IViewActionDesignPropertyEditorConfig {\n    return this.sandbox.descriptor.parameters\n      .filter((param) => param.editor)\n      .map((param) => ({\n        name: param.name,\n        component: param.editor,\n        options: {\n          label: param.label,\n          isRequired: param.isRequired,\n          tooltip: param.tooltip,\n          ...(param.editor === ExpressionFormControlComponent\n            ? ({\n                dataDictionary$: this.expressionConfigurator.getDataDictionary(param.name),\n                operators: this.expressionConfigurator.getOperators(param.name)\n              } as IExpressionFormControlOptions)\n            : param.editorOptions || {})\n        }\n      }));\n  }\n}\n","import { Injectable, Injector, OnDestroy } from '@angular/core';\nimport { IViewActionDescriptor, IViewActionDesignProperties, IViewActionDesignSandbox } from '@helix/platform/view/api';\nimport { isFunction, omit } from 'lodash';\nimport { ActionSandbox } from '../../action-sandbox/action-sandbox.class';\nimport { RxViewDesignerDefaultActionModel } from '../../model/view-designer-default-action-model.class';\n\n@Injectable()\nexport class RxActionListModelManagerService implements OnDestroy {\n  private models = new Map<string, any>();\n\n  constructor(private injector: Injector) {}\n\n  create(descriptor: IViewActionDescriptor, guid: string, initialProps?: IViewActionDesignProperties) {\n    const sandbox: IViewActionDesignSandbox = new ActionSandbox(\n      this.injector,\n      descriptor,\n      guid,\n      isFunction(descriptor?.designModel?.getInitialProperties)\n        ? {\n            ...descriptor.designModel.getInitialProperties(omit(initialProps, ['index', 'name'])),\n            name: initialProps.name,\n            index: initialProps.index\n          }\n        : initialProps\n    );\n\n    const Model = descriptor.designModel || RxViewDesignerDefaultActionModel;\n    const actionModel = new Model(this.injector, sandbox);\n\n    this.models.set(guid, actionModel);\n\n    return actionModel;\n  }\n\n  remove(guid: string): void {\n    this.models.delete(guid);\n  }\n\n  get(guid: string): any {\n    return this.models.get(guid);\n  }\n\n  ngOnDestroy(): void {\n    this.models.forEach((model) => model.sandbox.onDestroy());\n    this.models.clear();\n  }\n}\n","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { AfterViewInit, Component, ElementRef, Injector, OnDestroy, QueryList, ViewChildren } from '@angular/core';\nimport {\n  ActiveModalRef,\n  AdaptAccordionTabComponent,\n  DismissReasons,\n  KeyValueObject,\n  toNumber,\n  TreeWrap\n} from '@bmc-ux/adapt-angular';\nimport { IPlainObject } from '@helix/platform/shared/api';\nimport { RX_EXPRESSION_EDITOR, RxExpressionEditorService } from '@helix/platform/shared/components';\nimport { RxGuidService, RxStringService } from '@helix/platform/utils';\nimport { IViewActionDescriptor, IViewActionDesignModel, RxViewActionRegistryService } from '@helix/platform/view/api';\nimport { cloneDeep, findIndex, flow, get, map as _map, pull, set, sortBy, toPath, transform } from 'lodash';\nimport { BehaviorSubject, Observable, of, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ViewDesignerFacade } from '../../../+state/view-designer.facade';\nimport { IActionLabelsMap, IViewActionListItem } from '../action-list-control.types';\nimport { RxActionListModelManagerService } from '../action-list-model-manager.service';\nimport { IActionEditorDialogConfig, IViewActionEditorDialogItem } from './action-list-editor-dialog.types';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { TreeNode } from 'primeng/api/treenode';\n\n@Component({\n  selector: 'rx-action-list-editor-dialog',\n  templateUrl: './action-list-editor-dialog.component.html',\n  styleUrls: ['./action-list-editor-dialog.component.scss'],\n  providers: [RxActionListModelManagerService]\n})\nexport class ActionListEditorDialogComponent extends RxModalClass implements AfterViewInit, OnDestroy {\n  @ViewChildren(AdaptAccordionTabComponent, { read: ElementRef })\n  private accordionTabEls: QueryList<ElementRef>;\n\n  availableActionDescriptors$ = this.rxViewActionRegistryService.getLicensedActions();\n  availableActionTreeNodes$: Observable<TreeNode<IViewActionDescriptor>[]>;\n  actionLabelsMap$: Observable<IActionLabelsMap>;\n  selectedActions: IViewActionEditorDialogItem[] = [];\n  config: IActionEditorDialogConfig = this.activeModalRef.getData();\n  treeWrap: TreeWrap = TreeWrap.WrapAll;\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private isEditorDirtySubject = new BehaviorSubject<boolean>(false);\n\n  isSaveButtonDisabled$ = this.isEditorDirtySubject.asObservable().pipe(map((isDirty) => !isDirty));\n\n  constructor(\n    private rxViewActionRegistryService: RxViewActionRegistryService,\n    private rxStringService: RxStringService,\n    public activeModalRef: ActiveModalRef,\n    private viewDesignerFacade: ViewDesignerFacade,\n    private rxActionListModelManagerService: RxActionListModelManagerService,\n    private rxExpressionEditorService: RxExpressionEditorService,\n    private rxGuidService: RxGuidService,\n    private translateService: TranslateService,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n\n    this.availableActionTreeNodes$ = this.availableActionDescriptors$.pipe(\n      map((actions) =>\n        actions\n          .filter((action) => !action.hidden)\n          .sort((a, b) => a.label.localeCompare(b.label))\n          .map((action) => ({\n            data: action,\n            label: action.label\n          }))\n      )\n    );\n\n    this.actionLabelsMap$ = this.availableActionDescriptors$.pipe(\n      map(\n        (actions) =>\n          transform(\n            actions,\n            (result, action) => {\n              result[action.name] = action.label;\n            },\n            {}\n          ) as IActionLabelsMap\n      )\n    );\n\n    this.config.selectedActions = _map(this.config.selectedActions, (action) => ({\n      ...action,\n      data: {\n        ...action.data,\n        index: toNumber(action.data.index)\n      }\n    }));\n\n    this.selectedActions = flow(\n      (actions) => sortBy(actions, (action) => action.data.index),\n      (actions) =>\n        _map(actions, (action: IViewActionListItem) => {\n          const descriptor = this.rxViewActionRegistryService.get(action.data.name);\n\n          this.viewDesignerFacade.setActionDataDictionaryBranch(action.guid, action.data.index, action.data.name);\n\n          const model = this.rxActionListModelManagerService.create(descriptor, action.guid, action.data);\n\n          return {\n            isOpen: Boolean(this.config.actionToEdit) && action.guid === this.config.actionToEdit.guid,\n            model,\n            config$: model.sandbox.actionPropertyEditorConfig$.pipe(map((config) => [{ controls: config }])),\n            name: descriptor.name\n          };\n        })\n    )(this.config.selectedActions);\n  }\n\n  isDirty(): boolean {\n    return this.isEditorDirtySubject.getValue();\n  }\n\n  addAction(actionDescriptor: IViewActionDescriptor, index = this.selectedActions.length): void {\n    const guid = this.rxGuidService.generate();\n\n    this.viewDesignerFacade.setActionDataDictionaryBranch(guid, index, actionDescriptor.name);\n\n    const model = this.rxActionListModelManagerService.create(actionDescriptor, guid, {\n      name: actionDescriptor.name,\n      index\n    });\n\n    this.selectedActions.splice(index, 0, {\n      isOpen: true,\n      model,\n      config$: model.sandbox.actionPropertyEditorConfig$.pipe(map((config) => [{ controls: config }])),\n      name: actionDescriptor.name\n    });\n\n    this.updateIndexProp();\n    this.markEditorAsDirty();\n\n    setTimeout(() => {\n      this.accordionTabEls.toArray()[index].nativeElement.scrollIntoView({\n        block: 'nearest'\n      });\n    });\n  }\n\n  onSave(): void {\n    const result: IViewActionListItem[] = this.selectedActions.map((action) => ({\n      guid: action.model.guid,\n      data: action.model.getPropertiesByName(),\n      children: action.model.getChildren?.() ?? null\n    }));\n\n    this.activeModalRef.close(result);\n  }\n\n  removeAction(action: IViewActionEditorDialogItem): void {\n    pull(this.selectedActions, action);\n\n    this.rxActionListModelManagerService.remove(action.model.guid);\n\n    this.viewDesignerFacade.removeActionDataDictionaryBranch(action.model.guid);\n    this.markEditorAsDirty();\n  }\n\n  moveAction(fromIndex: number, toIndex: number): void {\n    moveItemInArray(this.selectedActions, fromIndex, toIndex);\n    this.updateIndexProp();\n    this.markEditorAsDirty();\n  }\n\n  toggleOpen(expandAll: boolean): void {\n    this.selectedActions.forEach((action) => (action.isOpen = expandAll));\n  }\n\n  onSelectedActionsListDrop(event: CdkDragDrop<IViewActionDescriptor | IViewActionEditorDialogItem>): void {\n    const data = event.item.data;\n\n    if (data.model?.guid) {\n      this.moveAction(event.previousIndex, event.currentIndex);\n    } else {\n      this.addAction(data, event.currentIndex);\n    }\n  }\n\n  openExpressionEditor(\n    model: IViewActionDesignModel<IPlainObject>,\n    propertyPath: string,\n    propertyLabel: string,\n    isReadOnly = false,\n    element: Element\n  ): void {\n    this.rxExpressionEditorService\n      .openEditor({\n        property: {\n          path: propertyPath,\n          value: get(model.sandbox.getActionProperties(), propertyPath),\n          label: propertyLabel\n        },\n        isReadOnly,\n        expressionConfigurator: model.getExpressionConfigurator(),\n        legend: [\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.function.label'),\n            icon: 'd-icon-mathematical_function'\n          },\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'),\n            icon: 'd-icon-dollar'\n          },\n          {\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.client.expression-editor.legend.view-component.label'\n            ),\n            icon: 'd-icon-file_o'\n          },\n          {\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.client.expression-editor.legend.view-component-property.label'\n            ),\n            icon: 'd-icon-file_o_gear'\n          },\n          {\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.client.expression-editor.legend.view-input-parameter.label'\n            ),\n            icon: 'd-icon-arrow_right_square_input'\n          }\n        ],\n        expressionPropertyNavigator: {\n          getProperties: () => {\n            const properties = Array.from(element.querySelectorAll('rx-expression-form-control')).map(\n              (controlElement: Element) => {\n                const path = controlElement.getAttribute('property-path');\n\n                return {\n                  path,\n                  value: get(model.sandbox.getActionProperties(), path),\n                  label: controlElement.getAttribute('property-label')\n                };\n              }\n            );\n\n            return of(properties);\n          }\n        }\n      })\n      .pipe(\n        map(({ path, value }) => {\n          const props = model.sandbox.getActionProperties();\n          const headPropertyName = path in props ? path : toPath(path)[0];\n\n          return set({ [headPropertyName]: cloneDeep(props[headPropertyName]) }, path, value);\n        })\n      )\n      .subscribe((props) => {\n        model.sandbox.updateActionProperties(props);\n        this.markEditorAsDirty();\n      });\n  }\n\n  onEvent(event: IPlainObject, model: IViewActionDesignModel, element: Element): void {\n    if (event.type === RX_EXPRESSION_EDITOR.events.openExpressionEditor) {\n      this.openExpressionEditor(\n        model,\n        event.payload.propertyPath,\n        event.payload.propertyLabel,\n        event.payload.isReadOnly,\n        element\n      );\n    }\n  }\n\n  private updateIndexProp(): void {\n    this.selectedActions.forEach((action, index) => {\n      action.model.sandbox.updateActionProperties({\n        index\n      } as KeyValueObject);\n    });\n\n    this.viewDesignerFacade.updateActionDataDictionaryBranchOrder(\n      this.selectedActions.reduce((result, action, index) => {\n        result[action.model.guid] = index;\n\n        return result;\n      }, {})\n    );\n  }\n\n  markEditorAsDirty(): void {\n    this.isEditorDirtySubject.next(true);\n  }\n\n  ngAfterViewInit(): void {\n    const openActionIndex = findIndex(this.selectedActions, 'isOpen');\n\n    if (openActionIndex !== -1) {\n      this.accordionTabEls.toArray()[openActionIndex].nativeElement.scrollIntoView({\n        block: 'nearest'\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.isEditorDirtySubject.complete();\n\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n\n    this.viewDesignerFacade.removeAllActionDataDictionaryBranches();\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"designer-modal-body modal-body d-flex mh-100\">\n  <div class=\"row flex-grow-1 w-100\">\n    <div *ngIf=\"!config.isReadOnly\" class=\"col-4 border-right d-flex flex-column mh-100\">\n      <div class=\"d-flex align-items-start justify-content-between\">\n        <h4 class=\"mt-2\">\n          {{ 'com.bmc.arsys.rx.client.view-components.action-list.available-actions.title' | translate }}\n        </h4>\n      </div>\n\n      <div class=\"rx-card card flex-grow-1 mt-2\">\n        <div class=\"card-block\" *ngIf=\"availableActionTreeNodes$ | async as availableActionTreeNodes\">\n          <div\n            *ngIf=\"availableActionTreeNodes.length; else adaptTreeEmptyStateTemplate\"\n            cdkDropList\n            cdkDropListSortingDisabled\n            [cdkDropListConnectedTo]=\"'selected-action-list'\"\n          >\n            <adapt-tree\n              [value]=\"availableActionTreeNodes\"\n              filter=\"true\"\n              [wrap]=\"treeWrap\"\n            >\n              <ng-template let-action adaptTreeNodeTemplate>\n                <div\n                  *ngIf=\"action.data\"\n                  class=\"rx-tree-draggable-node\"\n                  cdkDrag\n                  [cdkDragData]=\"action.data\"\n                >\n                  <div (dblclick)=\"addAction(action.data)\">\n                    <button\n                      type=\"button\"\n                      class=\"rx-button-unstyled d-icon-plus_circle\"\n                      (click)=\"addAction(action.data)\"\n                    ></button>\n\n                    <span class=\"rx-tree-node-label ml-3\">{{ action.data.label }}</span>\n                  </div>\n                </div>\n              </ng-template>\n            </adapt-tree>\n          </div>\n\n          <ng-template #adaptTreeEmptyStateTemplate>\n            <div class=\"d-flex justify-content-center h-100 align-items-center mt-2\">\n              <adapt-empty-state\n                class=\"w-100\"\n                label=\"{{ 'com.bmc.arsys.rx.client.view-components.action-list.available-actions.empty-state.message' | translate }}\"\n                type=\"search\"\n              ></adapt-empty-state>\n            </div>\n          </ng-template>         \n        </div>\n      </div>\n    </div>\n\n    <div class=\"d-flex flex-column mh-100 {{ config.isReadOnly ? 'col' : 'col-8' }}\">\n      <div class=\"d-flex align-items-start justify-content-between\">\n        <div class=\"d-flex align-items-center\">\n          <h4 class=\"mt-2\">\n            {{ 'com.bmc.arsys.rx.client.view-components.action-list.selected-actions.title' | translate }}\n          </h4>\n\n          <adapt-icon\n            class=\"ml-2\"\n            name=\"question_circle_o\"\n            adaptPopover=\"{{ 'com.bmc.arsys.rx.client.view-components.action-list.selected-actions.tooltip' | translate }}\"\n            appendToBody=\"true\"\n          >\n          </adapt-icon>\n        </div>\n\n        <div *ngIf=\"selectedActions.length\" class=\"btn-group\">\n          <button\n            adapt-button\n            btn-type=\"tertiary\"\n            type=\"button\"\n            rx-id=\"expand-all-button\"\n            (click)=\"toggleOpen(true)\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.expand-all.label' | translate }}\n          </button>\n\n          <button\n            adapt-button\n            btn-type=\"tertiary\"\n            type=\"button\"\n            rx-id=\"collapse-all-button\"\n            (click)=\"toggleOpen(false)\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.collapse-all.label' | translate }}\n          </button>\n        </div>\n      </div>\n\n      <div\n        id=\"selected-action-list\"\n        class=\"designer-modal-accordion-wrapper\"\n        cdkDropList\n        (cdkDropListDropped)=\"onSelectedActionsListDrop($event)\"\n      >\n        <adapt-accordion [multiselect]=\"true\">\n          <div\n            *ngFor=\"\n              let action of selectedActions;\n              let index = index;\n              let first = first;\n              let last = last;\n            \"\n            class=\"designer-modal-accordion-content\"\n            cdkDrag\n            cdkDragLockAxis=\"y\"\n            [cdkDragData]=\"action\"\n            [cdkDragDisabled]=\"config.isReadOnly\"\n            #container\n          >\n            <div *ngIf=\"!config.isReadOnly\" class=\"designer-modal-drag-handle d-icon-left-dots\" cdkDragHandle></div>\n\n            <adapt-accordion-tab\n              class=\"d-block\"\n              [isOpen]=\"action.isOpen\"\n              (open)=\"action.isOpen = true\"\n              (close)=\"action.isOpen = false\"\n            >\n              <div class=\"card-title-text w-100\">\n                <div class=\"designer-modal-card-title-content\">\n                  <div class=\"left-header-block\" [class.pl-0]=\"config.isReadOnly\">\n                    <div *ngIf=\"actionLabelsMap$ | async as actionLabelsMap\" class=\"rx-ellipsis\" [title]=\"actionLabelsMap[action.name]\"\n                      rx-id=\"card-title\">\n                      {{ actionLabelsMap[action.name] }}\n                    </div>\n                  </div>\n\n                  <div *ngIf=\"!config.isReadOnly\" class=\"right-header-block\">\n                    <div class=\"designer-modal-card-title-index-buttons\">\n                      <button\n                        class=\"d-icon-left-triangle_down rx-button-unstyled\"\n                        type=\"button\"\n                        [disabled]=\"last\"\n                        (click)=\"$event.stopPropagation(); moveAction(index, index + 1)\"\n                        rx-id=\"move-down-button\"\n                      ></button>\n\n                      <button\n                        class=\"d-icon-left-triangle_up rx-button-unstyled\"\n                        type=\"button\"\n                        [disabled]=\"first\"\n                        (click)=\"$event.stopPropagation(); moveAction(index, index - 1)\"\n                        rx-id=\"move-up-button\"\n                      ></button>\n                    </div>\n\n                    <button\n                      class=\"d-icon-left-cross_adapt p-1 pr-4 ml-3\"\n                      adapt-button\n                      size=\"small\"\n                      type=\"button\"\n                      (click)=\"$event.stopPropagation(); removeAction(action)\"\n                      rx-id=\"remove-button\"\n                    >\n                      {{ 'com.bmc.arsys.rx.client.common.remove.label' | translate }}\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              <rx-form-builder\n                class=\"d-block\"\n                [config]=\"action.config$ | async\"\n                [model]=\"action.model.sandbox.actionProperties$ | async\"\n                (modelChange)=\"action.model.sandbox.updateActionProperties($event); markEditorAsDirty()\"\n                (editorEvent)=\"onEvent($event, action.model, container)\"\n                [isReadOnly]=\"config.isReadOnly\"\n              ></rx-form-builder>\n            </adapt-accordion-tab>\n          </div>\n        </adapt-accordion>\n      </div>\n\n      <div *ngIf=\"!selectedActions.length\" class=\"d-flex justify-content-center h-100 align-items-center mt-2\">\n        <adapt-empty-state\n          class=\"w-100\"\n          label=\"{{ 'com.bmc.arsys.rx.client.view-components.action-list.selected-actions.empty-state.message' | translate }}\"\n          type=\"config\"\n        ></adapt-empty-state>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal-footer\">\n  <button\n    *ngIf=\"!config.isReadOnly\"\n    adapt-button\n    btn-type=\"primary\"\n    type=\"button\"\n    rx-id=\"save-button\"\n    [disabled]=\"isSaveButtonDisabled$ | async\"\n    (click)=\"onSave()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button adapt-button btn-type=\"secondary\" type=\"button\" rx-id=\"cancel-button\" (click)=\"cancel()\">\n    {{ config.isReadOnly ? ('com.bmc.arsys.rx.client.common.close.label' | translate) :\n    ('com.bmc.arsys.rx.client.common.cancel.label' | translate) }}\n  </button>\n</div>\n","import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  AdaptAccordionModule,\n  AdaptButtonModule,\n  AdaptEmptyStateModule,\n  AdaptIconModule,\n  AdaptPopoverModule,\n  AdaptRxSearchModule,\n  AdaptTreeModule\n} from '@bmc-ux/adapt-angular';\nimport { RxFormBuilderModule, ExpressionEditorModule } from '@helix/platform/shared/components';\nimport { ActionListEditorDialogComponent } from './action-list-editor-dialog.component';\n\n@NgModule({\n  declarations: [ActionListEditorDialogComponent],\n  exports: [ActionListEditorDialogComponent],\n  entryComponents: [ActionListEditorDialogComponent],\n  imports: [\n    CommonModule,\n    AdaptRxSearchModule,\n    AdaptButtonModule,\n    AdaptAccordionModule,\n    DragDropModule,\n    AdaptEmptyStateModule,\n    ExpressionEditorModule,\n    FormsModule,\n    RxFormBuilderModule,\n    AdaptIconModule,\n    AdaptPopoverModule,\n    TranslateModule,\n    AdaptTreeModule\n  ]\n})\nexport class ActionListEditorDialogModule {}\n","import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { noop, sortBy, transform, without } from 'lodash';\nimport { ActionListEditorDialogComponent } from './action-list-editor-dialog/action-list-editor-dialog.component';\nimport { IActionLabelsMap, IViewActionListItem } from './action-list-control.types';\nimport { IViewActionDescriptor, OpenViewActionModalSize, RxViewActionRegistryService } from '@helix/platform/view/api';\nimport { IActionEditorDialogConfig } from './action-list-editor-dialog/action-list-editor-dialog.types';\nimport { Observable } from 'rxjs';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { IFormControlComponent, IFormFocusable } from '@helix/platform/shared/api';\nimport { RxModalService } from '@helix/platform/ui-kit';\n\n@Component({\n  selector: 'rx-action-list-control',\n  templateUrl: './action-list-control.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: ActionListControlComponent,\n      multi: true\n    }\n  ]\n})\nexport class ActionListControlComponent\n  extends ValueAccessor<IViewActionListItem[]>\n  implements IFormControlComponent, IFormFocusable\n{\n  @Input()\n  options;\n\n  @Input()\n  tooltip: string;\n\n  availableActions$: Observable<IViewActionDescriptor[]> = this.rxViewActionRegistryService.getLicensedActions();\n  actionLabelsMap: IActionLabelsMap;\n  selectedActions: IViewActionListItem[] = [];\n\n  constructor(\n    private rxModalService: RxModalService,\n    private rxViewActionRegistryService: RxViewActionRegistryService\n  ) {\n    super();\n\n    this.availableActions$.subscribe((actions) => {\n      this.actionLabelsMap = transform(\n        actions,\n        (result, action) => {\n          result[action.name] = action.label;\n        },\n        {}\n      ) as IActionLabelsMap;\n    });\n  }\n\n  focus(data?: { actionIndex: number }): void {\n    if (data?.actionIndex >= 0) {\n      this.openActionSelector(this.selectedActions.find((item) => item.data.index === data.actionIndex));\n    } else {\n      this.openActionSelector();\n    }\n  }\n\n  openActionSelector(actionToEdit?: IViewActionListItem): void {\n    this.rxModalService\n      .openModal({\n        title: 'Edit actions',\n        data: {\n          selectedActions: this.value,\n          actionToEdit,\n          isReadOnly: this.isDisabled\n        } as IActionEditorDialogConfig,\n        content: ActionListEditorDialogComponent,\n        size: OpenViewActionModalSize.Large as any,\n        testID: 'edit-actions'\n      })\n      .then((actions) => {\n        this.value = actions;\n      })\n      .catch(noop);\n  }\n\n  onSetValue(): void {\n    this.updateSortedActionsList();\n  }\n\n  onWriteValue(value: IViewActionListItem[]): void {\n    this.updateSortedActionsList();\n  }\n\n  removeAction(action: IViewActionListItem): void {\n    this.value = without(this.value, action);\n  }\n\n  editAction(action: IViewActionListItem): void {\n    this.openActionSelector(action);\n  }\n\n  private updateSortedActionsList(): void {\n    this.selectedActions = sortBy(this.value, (action) => action.data.index);\n  }\n}\n","<adapt-button rx-id=\"open-modal-button\" btn-type=\"tertiary\" class=\"px-0 py-0 pb-1\" (click)=\"openActionSelector()\">\n  <adapt-icon name=\"plus_circle\" class=\"mr-1\"></adapt-icon>\n  Edit actions\n</adapt-button>\n\n<span *ngIf=\"tooltip\" class=\"align-middle\">\n  <span class=\"letter-space\"></span>\n  <adapt-icon [name]=\"'question_circle_o'\" [adaptPopover]=\"tooltip\" appendToBody=\"true\"></adapt-icon>\n</span>\n\n<div rx-id=\"columns\">\n  <span *ngIf=\"selectedActions.length === 0\" class=\"text-tertiary\">No actions added.</span>\n</div>\n\n<ul class=\"list-unstyled mb-0\" *ngIf=\"selectedActions.length > 0\">\n  <li class=\"border px-2 py-1 mb-1 d-flex align-items-center\" *ngFor=\"let action of selectedActions\">\n    <strong class=\"mr-auto\">{{ actionLabelsMap[action.data.name] }}</strong>\n\n    <button\n      class=\"d-icon-left-pencil p-1\"\n      adapt-button\n      btn-type=\"tertiary\"\n      size=\"small\"\n      type=\"button\"\n      (click)=\"editAction(action)\"\n    ></button>\n\n    <button\n      class=\"d-icon-left-cross_adapt p-1\"\n      adapt-button\n      btn-type=\"tertiary\"\n      size=\"small\"\n      type=\"button\"\n      *ngIf=\"!isDisabled\"\n      (click)=\"removeAction(action)\"\n    ></button>\n  </li>\n</ul>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActionListControlComponent } from './action-list-control.component';\nimport { ActionListEditorDialogModule } from './action-list-editor-dialog/action-list-editor-dialog.module';\nimport { AdaptButtonModule, AdaptIconModule, AdaptPopoverModule } from '@bmc-ux/adapt-angular';\n@NgModule({\n  declarations: [ActionListControlComponent],\n  exports: [ActionListControlComponent],\n  entryComponents: [ActionListControlComponent],\n  imports: [CommonModule, AdaptIconModule, AdaptButtonModule, ActionListEditorDialogModule, AdaptPopoverModule]\n})\nexport class ActionListControlModule {}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ViewDesignerFacade } from '../../+state/view-designer.facade';\nimport { ReplaySubject } from 'rxjs';\nimport { IViewDefinitionPermission } from '@helix/platform/view/api';\nimport { takeUntil } from 'rxjs/operators';\nimport { IComponentPermissionEditorConfig } from './component-permission-editor-widget.types';\nimport { IFormWidgetComponent } from '@helix/platform/shared/api';\n\n@Component({\n  selector: 'rx-component-permission-editor-widget',\n  templateUrl: './component-permission-editor-widget.component.html'\n})\nexport class RxComponentPermissionEditorWidgetComponent implements OnInit, OnDestroy, IFormWidgetComponent {\n  @Input()\n  options: IComponentPermissionEditorConfig;\n\n  @Input()\n  isDisabled: boolean;\n\n  permissions: IViewDefinitionPermission[] = [];\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  constructor(private viewDesignerFacade: ViewDesignerFacade) {}\n\n  ngOnInit(): void {\n    this.viewDesignerFacade\n      .getComponentPermissions(this.options.componentGuid)\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((permissions) => {\n        this.permissions = permissions;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  onPermissionsChange(permissions: IViewDefinitionPermission[]): void {\n    this.viewDesignerFacade.updateComponentModel(this.options.componentGuid, {\n      permissions\n    });\n  }\n}\n","<rx-permission-editor\n  [options]=\"options\"\n  [disabled]=\"isDisabled\"\n  [(ngModel)]=\"permissions\"\n  (ngModelChange)=\"onPermissionsChange($event)\"\n></rx-permission-editor>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RxComponentPermissionEditorWidgetComponent } from './component-permission-editor-widget.component';\nimport { RxPermissionEditorModule } from '@helix/platform/shared/components';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [RxComponentPermissionEditorWidgetComponent],\n  imports: [CommonModule, FormsModule, RxPermissionEditorModule]\n})\nexport class RxComponentPermissionEditorWidgetModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CustomizationOptionsModule } from '@helix/platform/shared/components';\nimport { RxViewCustomizationOptionsComponent } from './view-customization-options.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, CustomizationOptionsModule],\n  declarations: [RxViewCustomizationOptionsComponent]\n})\nexport class RxViewCustomizationOptionsModule {}\n","import { Component, Injector, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { IFormFocusable, IFormWidgetComponent } from '@helix/platform/shared/api';\nimport { InspectorWidgetBase } from '@helix/platform/shared/components';\nimport { IViewActionDesignProperties, RxViewComponentType } from '@helix/platform/view/api';\nimport { takeUntil } from 'rxjs/operators';\nimport { ViewDesignerComponentModel } from '../../model/view-designer-component-model.class';\nimport { IViewComponentDesignSandbox } from '../../public-interfaces/view-component-design-sandbox.interface';\nimport { ActionListControlComponent } from '../action-list-control/action-list-control.component';\nimport { ReplaySubject } from 'rxjs';\nimport { IActionListWidgetComponentOptions } from './action-list-widget.types';\nimport { IViewActionListItem } from '../action-list-control/action-list-control.types';\nimport { IViewComponentDesignSetPayload } from '../../public-interfaces/view-component-design.types';\n\n@Component({\n  selector: 'rx-action-list-widget',\n  templateUrl: './action-list-widget.component.html'\n})\nexport class ActionListWidgetComponent\n  extends InspectorWidgetBase<IActionListWidgetComponentOptions, ViewDesignerComponentModel>\n  implements OnInit, OnDestroy, IFormWidgetComponent, IFormFocusable\n{\n  @ViewChild(ActionListControlComponent)\n  actionListControlComponent: ActionListControlComponent;\n\n  options: IActionListWidgetComponentOptions;\n  actions: IViewActionListItem[] = [];\n\n  // @ts-ignore\n  modelSandbox: IViewComponentDesignSandbox = this.designerItemModel.sandbox;\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  constructor(protected injector: Injector) {\n    super(injector);\n  }\n\n  ngOnInit(): void {\n    const actions$ = this.modelSandbox.getChildComponents<IViewActionDesignProperties>();\n\n    actions$.pipe(takeUntil(this.destroyed$)).subscribe((actions) => {\n      this.actions = actions;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  onActionsChange(actions: IViewActionListItem[]): void {\n    this.modelSandbox.setChildren(this.getActionComponentPayloads(actions));\n  }\n\n  focus(data): void {\n    this.actionListControlComponent.focus(data);\n  }\n\n  private getActionComponentPayloads(actionInspectorModels: IViewActionListItem[]): IViewComponentDesignSetPayload[] {\n    return actionInspectorModels.map((model) => ({\n      type: RxViewComponentType.Action,\n      ...model\n    }));\n  }\n}\n","<rx-action-list-control\n  [disabled]=\"modelSandbox.isViewReadOnly$ | async\"\n  [(ngModel)]=\"actions\"\n  (ngModelChange)=\"onActionsChange($event)\"\n  [tooltip]=\"options?.tooltip\"\n></rx-action-list-control>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActionListWidgetComponent } from './action-list-widget.component';\nimport { ActionListControlModule } from '../action-list-control/action-list-control.module';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [ActionListWidgetComponent],\n  imports: [CommonModule, ActionListControlModule, FormsModule]\n})\nexport class ActionListWidgetModule {}\n","import { IViewDesignerComponentModel } from '@helix/platform/view/api';\nimport { IExpressionConfigurator, IPlainObject } from '@helix/platform/shared/api';\nimport { Injector } from '@angular/core';\nimport { RxViewComponentExpressionConfigurator } from '../expression-configurator';\nimport { IViewComponentDesignSandbox } from '../public-interfaces/view-component-design-sandbox.interface';\n\nexport class ViewDesignerComponentModel<\n  TComponentProperties = IPlainObject,\n  TComponentDesignProperties = TComponentProperties\n> implements IViewDesignerComponentModel {\n  private _expressionConfigurator: IExpressionConfigurator;\n\n  get expressionConfigurator(): IExpressionConfigurator {\n    if (!this._expressionConfigurator) {\n      this._expressionConfigurator = new (this.sandbox.descriptor.expressionConfigurator ||\n        RxViewComponentExpressionConfigurator)(this.injector, this.sandbox.guid, this, this.sandbox.descriptor.type);\n    }\n\n    return this._expressionConfigurator;\n  }\n\n  constructor(\n    protected injector: Injector,\n    protected sandbox: IViewComponentDesignSandbox<TComponentDesignProperties>\n  ) {}\n\n  getExpressionForProperty(propertyPath: string): string {\n    return `\\${view.components.${this.sandbox.guid}.${propertyPath}}`;\n  }\n}\n","import { IFormControlBuilderConfig, Tooltip } from '@helix/platform/shared/api';\nimport {\n  IOptionalExpressionInspectorControlOptions,\n  ITagAutocompleteValue,\n  ITagsFormControlOptions,\n  OptionalExpressionInspectorControlComponent,\n  SelectFormControlComponent,\n  TagsFormControlComponent\n} from '@helix/platform/shared/components';\nimport {\n  RX_AVAILABLE_ON_DEVICES_PROP_NAME,\n  RX_DISABLED_PROP_NAME,\n  RX_HIDDEN_PROP_NAME,\n  RX_STYLES_PROP_NAME,\n  RxDevice\n} from '@helix/platform/view/api';\nimport { validateCssClassName } from '../core';\n\nexport const RX_AVAILABLE_ON_DEVICES_OPTIONS = [\n  {\n    id: RxDevice.Desktop,\n    name: 'Desktop'\n  },\n  {\n    id: RxDevice.Tablet,\n    name: 'Tablet'\n  },\n  {\n    id: RxDevice.Mobile,\n    name: 'Mobile'\n  }\n];\n\nexport function getAvailableOnDevicesInspectorConfig(): IFormControlBuilderConfig {\n  return {\n    name: RX_AVAILABLE_ON_DEVICES_PROP_NAME,\n    component: SelectFormControlComponent,\n    options: {\n      label: 'Available on devices',\n      options: RX_AVAILABLE_ON_DEVICES_OPTIONS,\n      multiple: true,\n      required: true,\n      hideSelectAllButton: true,\n      hideDeselectAllButton: true\n    }\n  };\n}\n\nexport function getHiddenFieldInspectorConfig(): IFormControlBuilderConfig {\n  return {\n    name: RX_HIDDEN_PROP_NAME,\n    component: OptionalExpressionInspectorControlComponent,\n    options: {\n      label: 'Hidden'\n    } as IOptionalExpressionInspectorControlOptions\n  };\n}\n\nexport function getDisabledFieldInspectorConfig(): IFormControlBuilderConfig {\n  return {\n    name: RX_DISABLED_PROP_NAME,\n    component: OptionalExpressionInspectorControlComponent,\n    options: {\n      label: 'Disabled'\n    } as IOptionalExpressionInspectorControlOptions\n  };\n}\n\nexport function getStylesFieldInspectorConfig(\n  autocompleteValues: ITagAutocompleteValue[] = []\n): IFormControlBuilderConfig {\n  return {\n    name: RX_STYLES_PROP_NAME,\n    component: TagsFormControlComponent,\n    options: {\n      label: 'CSS classes',\n      placeholder: 'Add CSS classes',\n      tooltip: new Tooltip('Enter CSS class names to apply to this view component.'),\n      errorCheck: validateCssClassName,\n      autocompleteValues: autocompleteValues\n    } as ITagsFormControlOptions\n  };\n}\n\nexport function getStandardPropsInspectorConfigs(): IFormControlBuilderConfig[] {\n  return [getHiddenFieldInspectorConfig(), getAvailableOnDevicesInspectorConfig(), getStylesFieldInspectorConfig()];\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { flatten, flow, map as _map, compact, find, isFunction, isString } from 'lodash';\nimport {\n  IViewActionDescriptor,\n  IViewActionDesignManager,\n  IViewActionDesignProperties,\n  RxViewActionRegistryService\n} from '@helix/platform/view/api';\nimport { RxStringService } from '@helix/platform/utils';\nimport { map } from 'rxjs/operators';\nimport { RxLogService } from '@helix/platform/shared/api';\nimport { RxViewExpressionValidatorService } from './view-expression-validator.service';\nimport { IViewComponentDesignData } from '../public-interfaces/view-component-design.types';\nimport { IViewComponentDesignValidationIssue } from '../public-interfaces/view-component-design-validation-issue.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewActionValidatorService {\n  constructor(\n    private rxViewActionRegistryService: RxViewActionRegistryService,\n    private rxStringService: RxStringService,\n    private rxLogService: RxLogService,\n    private rxViewExpressionValidatorService: RxViewExpressionValidatorService\n  ) {}\n\n  validate(\n    actionsDesignData: IViewComponentDesignData<IViewActionDesignProperties>[],\n    propertyName: string\n  ): Observable<IViewComponentDesignValidationIssue[]> {\n    const issues: Observable<IViewComponentDesignValidationIssue[]>[] = flow(\n      (actions: IViewComponentDesignData<IViewActionDesignProperties>[]) =>\n        actions.map(({ data }) => {\n          const descriptor = this.rxViewActionRegistryService.get(data.name);\n\n          return [\n            of(this.validateRequiredProps(data, descriptor, propertyName)),\n            this.performCustomValidation(data, descriptor, propertyName),\n            this.validateExpressions(data, descriptor, propertyName)\n          ];\n        }),\n      flatten\n    )(actionsDesignData);\n\n    return combineLatest([of(this.validateActionSequence(actionsDesignData, propertyName)), ...issues]).pipe(\n      map(flatten)\n    );\n  }\n\n  private performCustomValidation(\n    actionProps: IViewActionDesignProperties,\n    descriptor: IViewActionDescriptor,\n    issuePropertyName: string\n  ): Observable<IViewComponentDesignValidationIssue[]> {\n    const designManager: IViewActionDesignManager = this.rxViewActionRegistryService.getDesignManager(descriptor.name);\n\n    return designManager\n      ? designManager.validate(actionProps, issuePropertyName).pipe(\n          map((issues) =>\n            issues.map((issue) => ({\n              ...issue,\n              data: {\n                actionIndex: actionProps.index\n              }\n            }))\n          )\n        )\n      : of([]);\n  }\n\n  private validateRequiredProps(\n    actionProps: IViewActionDesignProperties,\n    descriptor: IViewActionDescriptor,\n    issuePropertyName: string\n  ): IViewComponentDesignValidationIssue[] {\n    return flow(\n      (descriptorParams) =>\n        descriptorParams.filter(\n          (param) => param.isRequired === true && this.rxStringService.isEmptySafe(actionProps[param.name])\n        ),\n      (descriptorParams) =>\n        descriptorParams.map((param) => ({\n          type: 'error',\n          description: `${descriptor.label} action: ${param.label || param.name} cannot be blank.`,\n          propertyName: issuePropertyName,\n          data: {\n            actionIndex: actionProps.index\n          }\n        }))\n    )(descriptor.parameters);\n  }\n\n  private validateExpressions(\n    actionProps: IViewActionDesignProperties,\n    descriptor: IViewActionDescriptor,\n    issuePropertyName: string\n  ): Observable<IViewComponentDesignValidationIssue[]> {\n    const actionIssues: Observable<IViewComponentDesignValidationIssue[]>[] = descriptor.parameters\n      .filter(\n        (paramDescriptor) => paramDescriptor.enableExpressionEvaluation === true && actionProps[paramDescriptor.name]\n      )\n      .map((paramDescriptor) =>\n        this.rxViewExpressionValidatorService\n          .validate(\n            actionProps[paramDescriptor.name],\n            issuePropertyName,\n            paramDescriptor.label || paramDescriptor.name,\n            paramDescriptor.evaluatorService\n          )\n          .pipe(\n            map((issues) =>\n              issues.map((issue) => ({\n                ...issue,\n                description: `${descriptor.label} action: ${issue.description}`,\n                data: {\n                  actionIndex: actionProps.index\n                }\n              }))\n            )\n          )\n      );\n\n    return actionIssues.length ? combineLatest(actionIssues).pipe(map(flatten)) : of([]);\n  }\n\n  private validateActionSequence(\n    actions: IViewComponentDesignData<IViewActionDesignProperties>[],\n    issuePropertyName: string\n  ): IViewComponentDesignValidationIssue[] {\n    return flow(\n      (actionsDesignData: IViewComponentDesignData<IViewActionDesignProperties>[]) =>\n        _map(actionsDesignData, ({ data }) => {\n          const descriptor = this.rxViewActionRegistryService.get(data.name);\n\n          return descriptor\n            ? _map(data, (propertyValue, propertyName) => {\n                if (\n                  descriptor.parameters.find((param) => param.name === propertyName)?.enableExpressionEvaluation &&\n                  this.rxStringService.isNonEmptyString(propertyValue)\n                ) {\n                  // Extract <ID> from ${view.components.<ID>.<Path>}\n                  const matches = (propertyValue as string).match(/\\${view\\.components\\.([0-9a-z-]+)\\..+}/);\n\n                  if (matches && matches[1]) {\n                    const referencedAction = find(actionsDesignData, { guid: matches[1] });\n\n                    if (Number(referencedAction?.data.index) > Number(data.index)) {\n                      return {\n                        type: 'error',\n                        description: `${descriptor.label} action: invalid expression for ${propertyName}.`,\n                        propertyName: issuePropertyName\n                      } as IViewComponentDesignValidationIssue;\n                    }\n                  }\n                }\n              })\n            : [];\n        }),\n      flatten,\n      compact\n    )(actions);\n  }\n}\n","import { Injector } from '@angular/core';\nimport { Actions, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { castArray } from 'lodash';\nimport { BehaviorSubject, merge, Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  first,\n  map,\n  mapTo,\n  shareReplay,\n  skipWhile,\n  startWith,\n  switchMap,\n  switchMapTo,\n  take,\n  takeUntil\n} from 'rxjs/operators';\nimport { IPlainObject } from '@helix/platform/shared/api';\nimport { ViewDesignerDispatcher } from '../+state/view-designer-dispatcher.service';\nimport { ViewDesignerFacade } from '../+state/view-designer.facade';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport {\n  IViewComponentDesignCommonDataDictionaryBranch,\n  IViewComponentDesignSetPayload,\n  IViewComponentDesignValidationIssue,\n  IViewDesignerInspectorConfig,\n  ViewComponentAddComponentPayload\n} from '../public-interfaces';\nimport { IViewComponentDesignData } from '../public-interfaces/view-component-design.types';\nimport { IViewComponentDesignSandbox } from '../public-interfaces/view-component-design-sandbox.interface';\nimport * as ViewComponentsActions from '../+state/view-component.actions';\nimport { RxViewDesignerModels } from '../core/view-designer-models.service';\nimport { IViewComponentDesignSettablePropertiesDataDictionary } from '../public-interfaces/view-component-design-settable-properties-data-dictionary.interfaces';\nimport {\n  IViewComponentDescriptor,\n  IViewDesignerComponentModel,\n  IViewLayout,\n  RX_VIEW_DEFINITION\n} from '@helix/platform/view/api';\n\nexport class ComponentSandbox implements IViewComponentDesignSandbox {\n  componentProperties$: Observable<IPlainObject>;\n  isComponentSelected$: Observable<boolean>;\n  destroyed$: Observable<boolean>;\n  viewModelsInitialized$: Observable<any>;\n  isViewReadOnly$: Observable<boolean>;\n  componentType: string;\n\n  private viewDesignerFacade = this.injector.get(ViewDesignerFacade);\n  private systemActions$ = this.injector.get<Actions>(Actions);\n  private viewDesignerDispatcher = this.injector.get(ViewDesignerDispatcher);\n  private rxViewDesignerModels = this.injector.get(RxViewDesignerModels);\n\n  private childModelsInitialized$ = new BehaviorSubject(false);\n  private dispatcher$: Subject<Action> = new Subject();\n  private breadcrumbs$ = new ReplaySubject<string>(1);\n\n  constructor(private injector: Injector, public guid: string, readonly descriptor: IViewComponentDescriptor) {\n    this.setUpPublicStreams();\n\n    this.viewDesignerFacade\n      .getComponentType(guid)\n      .pipe(take(1))\n      .subscribe((componentType) => (this.componentType = componentType));\n\n    this.viewDesignerFacade\n      .getComponentModel(this.guid)\n      .pipe(\n        map((model) => Boolean(model.lastUpdateTime || model.name)),\n        switchMap((isExistingViewComponent) => {\n          if (isExistingViewComponent) {\n            return this.viewDesignerFacade.viewModelsInitialized$;\n          } else {\n            return of(null);\n          }\n        }),\n        take(1),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => {\n        this.childModelsInitialized$.next(true);\n      });\n\n    this.viewModelsInitialized$ = this.viewDesignerFacade.viewModelsInitialized$.pipe(takeUntil(this.destroyed$));\n\n    // for optimization reasons postpone emit of breadcrumbs till component gets selected\n    this.isComponentSelected$\n      .pipe(\n        filter((isSelected) => isSelected),\n        first(),\n        switchMap(() => this.breadcrumbs$),\n        distinctUntilChanged(),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe((label) => {\n        this.dispatcher$.next(\n          ViewComponentsActions.setBreadcrumbs({\n            guid: this.guid,\n            label\n          })\n        );\n      });\n\n    merge(\n      // skip initial batch of setValidationIssues actions that are emitted during view designer initialization with empty payload\n      this.dispatcher$.pipe(\n        ofType(ViewComponentsActions.setValidationIssues),\n        skipWhile((action) => action.issues.length === 0)\n      ),\n      this.dispatcher$.pipe(filter((action) => action.type !== ViewComponentsActions.setValidationIssues.type))\n    )\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((action: Action) => this.viewDesignerDispatcher.dispatch(action));\n\n    // complete created subjects\n    this.destroyed$.subscribe(() => {\n      this.childModelsInitialized$.complete();\n      this.dispatcher$.complete();\n      this.breadcrumbs$.complete();\n    });\n  }\n\n  createError(\n    description: string,\n    propertyName?: string,\n    disableCorrection?: boolean\n  ): IViewComponentDesignValidationIssue {\n    return { type: 'error', description, propertyName, disableCorrection };\n  }\n\n  createWarning(\n    description: string,\n    propertyName?: string,\n    disableCorrection?: boolean\n  ): IViewComponentDesignValidationIssue {\n    return { type: 'warning', description, propertyName, disableCorrection };\n  }\n\n  getComponent<TChildComponentDesignProperties = IPlainObject>(\n    guid: string\n  ): Observable<IViewComponentDesignData<TChildComponentDesignProperties>> {\n    return this.viewDesignerFacade.getComponent(guid);\n  }\n\n  getChildComponents<T = IPlainObject>(\n    filterPredicate?: (component: IViewComponentDesignData) => boolean\n  ): Observable<Omit<IViewComponentDesignData<T>, 'children'>[]> {\n    return this.childModelsInitialized$\n      .asObservable()\n      .pipe(\n        filter(Boolean),\n        switchMapTo(this.viewDesignerFacade.getChildComponents<T>(this.guid, filterPredicate)),\n        takeUntil(this.destroyed$)\n      );\n  }\n\n  getChildComponentsTree(): Observable<IViewComponentDesignData[]> {\n    return this.childModelsInitialized$.asObservable().pipe(\n      filter((isInitialized) => isInitialized),\n      switchMapTo(this.viewDesignerFacade.getChildComponentTree(this.guid)),\n      shareReplay(1),\n      takeUntil(this.destroyed$)\n    );\n  }\n\n  getChildComponentGuids(\n    filterPredicate?: (component: IViewComponentDesignData) => boolean,\n    recursive = false\n  ): Observable<string[]> {\n    return this.childModelsInitialized$\n      .asObservable()\n      .pipe(\n        filter(Boolean),\n        switchMapTo(this.viewDesignerFacade.getChildComponentGuids(this.guid, recursive, filterPredicate)),\n        takeUntil(this.destroyed$)\n      );\n  }\n\n  setChildren(data: IViewComponentDesignSetPayload[], parentGuid?: string): void {\n    this.dispatcher$.next(\n      ViewComponentsActions.setChildComponents({\n        payload: {\n          guid: parentGuid || this.guid,\n          data\n        }\n      })\n    );\n  }\n\n  setChildrenByType(data: IViewComponentDesignSetPayload[], types: string[]): void {\n    this.dispatcher$.next(\n      ViewComponentsActions.setChildComponents({\n        payload: {\n          guid: this.guid,\n          data,\n          types\n        }\n      })\n    );\n  }\n\n  getParentComponentGuid(componentType?: string): Observable<string> {\n    return this.viewDesignerFacade\n      .getParentComponentGuid(this.guid, componentType)\n      .pipe(distinctUntilChanged(), takeUntil(this.destroyed$));\n  }\n\n  setValidationIssues(issues: IViewComponentDesignValidationIssue[]): void {\n    this.dispatcher$.next(ViewComponentsActions.setValidationIssues({ issues, guid: this.guid }));\n  }\n\n  updateComponentProperties(properties: IPlainObject): void {\n    this.viewDesignerFacade.updateComponentProperties(this.guid, properties);\n  }\n\n  getComponentPropertyValue<TPropertyName extends keyof IPlainObject>(\n    propertyName: TPropertyName,\n    componentGuid = this.guid\n  ): Observable<any> {\n    return this.viewDesignerFacade\n      .getComponentPropertyValue(componentGuid, propertyName)\n      .pipe(shareReplay(1), takeUntil(this.destroyed$));\n  }\n\n  getViewPropertyValue<T extends keyof IViewDesignModel>(propertyName: T): Observable<IViewDesignModel[T]> {\n    return this.viewDesignerFacade.getViewPropertyValue(propertyName).pipe(shareReplay(1), takeUntil(this.destroyed$));\n  }\n\n  updateInspectorConfig(inspectorConfig: IViewDesignerInspectorConfig): void {\n    this.viewDesignerFacade.setComponentInspector(this.guid, inspectorConfig);\n  }\n\n  setBreadcrumbs(label: string): void {\n    this.breadcrumbs$.next(label);\n  }\n\n  addComponent(data: ViewComponentAddComponentPayload | ViewComponentAddComponentPayload[]): void {\n    const dataArray = castArray<ViewComponentAddComponentPayload>(data);\n\n    const actionPayload = dataArray.map((component) => ({\n      ...component,\n      parentGuid: this.guid\n    }));\n\n    this.dispatcher$.next(ViewComponentsActions.addNewComponents({ payload: actionPayload }));\n  }\n\n  selectComponent(guid: string): void {\n    this.dispatcher$.next(ViewComponentsActions.selectComponent({ guid }));\n  }\n\n  removeComponents(guids: string[], selectParent?: boolean): void {\n    this.viewDesignerFacade.removeViewComponents(guids, selectParent);\n  }\n\n  moveComponent(guid: string, insertIndex: number, targetGuid?: string): void {\n    const data = { guid };\n    const columnIndex = 0;\n    const outletName = RX_VIEW_DEFINITION.defaultOutletName;\n\n    this.dispatcher$.next(\n      ViewComponentsActions.insertComponent({\n        data,\n        insertIndex,\n        columnIndex,\n        outletName,\n        targetGuid\n      })\n    );\n  }\n\n  setLayout(cols: number[]): void {\n    this.dispatcher$.next(\n      ViewComponentsActions.setComponentLayout({\n        guid: this.guid,\n        cols\n      })\n    );\n  }\n\n  getLayout(guid: string): Observable<IViewLayout> {\n    return this.viewDesignerFacade.getComponentLayout(guid).pipe(shareReplay(1), takeUntil(this.destroyed$));\n  }\n\n  setCommonDataDictionary(dataDictionaryBranch: IViewComponentDesignCommonDataDictionaryBranch): void {\n    this.viewDesignerFacade.setComponentCommonDataDictionaryBranch(this.guid, dataDictionaryBranch);\n  }\n\n  setSettablePropertiesDataDictionary(\n    componentName: string,\n    dataDictionary: IViewComponentDesignSettablePropertiesDataDictionary\n  ): void {\n    this.viewDesignerFacade.setComponentSettablePropertiesDataDictionary(this.guid, componentName, dataDictionary);\n  }\n\n  getComponentModel<T extends IViewDesignerComponentModel>(guid: string): T {\n    return this.rxViewDesignerModels.get(guid) as T;\n  }\n\n  getComponentsByType<TComponentDesignProperties>(\n    type: string\n  ): Observable<IViewComponentDesignData<TComponentDesignProperties>[]> {\n    return this.viewDesignerFacade\n      .getComponentsByType<TComponentDesignProperties>(type)\n      .pipe(takeUntil(this.destroyed$));\n  }\n\n  private setUpPublicStreams() {\n    const viewComponentsRemovedAction$ = this.systemActions$.pipe(\n      ofType(ViewComponentsActions.componentsRemoved),\n      filter((action) => action.guids.includes(this.guid))\n    );\n\n    this.destroyed$ = merge(\n      viewComponentsRemovedAction$,\n      this.viewDesignerFacade.initViewDesigner$,\n      this.viewDesignerFacade.destroyViewDesigner$\n    ).pipe(mapTo(true), first());\n\n    this.componentProperties$ = this.viewDesignerFacade\n      .getComponentProperties(this.guid)\n      .pipe(filter(Boolean), takeUntil(this.destroyed$), shareReplay(1));\n\n    this.isComponentSelected$ = this.systemActions$.pipe(\n      ofType(ViewComponentsActions.selectComponent),\n      map(({ guid }) => guid === this.guid),\n      distinctUntilChanged(),\n      startWith(false),\n      takeUntil(this.destroyed$),\n      shareReplay(1)\n    );\n\n    this.isViewReadOnly$ = this.viewDesignerFacade.isViewReadOnly$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IComponentPropertyDescriptor, RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { every, filter as _filter, flatten, isEmpty, map as _map, merge as _merge } from 'lodash';\nimport {\n  debounceTime,\n  filter,\n  map,\n  publishReplay,\n  refCount,\n  skipWhile,\n  switchMap,\n  take,\n  takeUntil\n} from 'rxjs/operators';\nimport { combineLatest, Observable, of, Subscription } from 'rxjs';\nimport { IViewComponentDesignValidationIssue } from '../public-interfaces/view-component-design-validation-issue.interface';\nimport { ViewDesignerFacade } from '../+state/view-designer.facade';\nimport { RxViewExpressionValidatorService } from './view-expression-validator.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewExpressionValidatorRegistryService {\n  private issuesObservableMap = new Map<string, Observable<IViewComponentDesignValidationIssue[]>>();\n  private validateSubscription: Subscription;\n\n  constructor(\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private viewDesignerFacade: ViewDesignerFacade,\n    private rxViewExpressionValidatorService: RxViewExpressionValidatorService\n  ) {}\n\n  registerComponents(guids: string[]): void {\n    guids.forEach((guid) => this.issuesObservableMap.set(guid, this.getComponentValidationIssues(guid)));\n\n    this.initValidation();\n  }\n\n  unregisterComponents(guids: string[]): void {\n    guids.forEach((guid) => this.issuesObservableMap.delete(guid));\n\n    this.initValidation();\n  }\n\n  unregisterAllComponents(): void {\n    this.issuesObservableMap.clear();\n    this.validateSubscription?.unsubscribe();\n  }\n\n  private initValidation(): void {\n    this.validateSubscription?.unsubscribe();\n\n    this.validateSubscription = combineLatest(\n      Array.from(this.issuesObservableMap.entries()).map(\n        ([guid, issues$]: [string, Observable<IViewComponentDesignValidationIssue[]>]) =>\n          issues$.pipe(\n            map((issues) => ({\n              [guid]: issues\n            }))\n          )\n      )\n    )\n      .pipe(\n        map((issuesByComponentGuid) => _merge({}, ...issuesByComponentGuid)),\n        skipWhile((issuesByComponentGuid) => every(Object.values(issuesByComponentGuid), isEmpty)),\n        // debounceTime will allow Set expression validation issues action to be executed once for improved performance.\n        debounceTime(0)\n      )\n      .subscribe((issues) => {\n        this.viewDesignerFacade.setExpressionValidationIssues(issues);\n      });\n  }\n\n  private getComponentValidationIssues(guid: string): Observable<IViewComponentDesignValidationIssue[]> {\n    return this.viewDesignerFacade.getComponentType(guid).pipe(\n      take(1),\n      switchMap((componentType) => {\n        const descriptor = this.rxViewComponentRegistryService.get(componentType);\n\n        const expressionProps = _filter(descriptor?.properties, {\n          enableExpressionEvaluation: true\n        });\n\n        const expressionPropertyNames = _map(expressionProps, 'name');\n\n        const descriptorPropMap = new Map<string, IComponentPropertyDescriptor>(\n          expressionProps.map((prop) => [prop.name, prop])\n        );\n\n        return expressionPropertyNames.length\n          ? combineLatest(\n              expressionPropertyNames.map((propertyName) =>\n                this.viewDesignerFacade\n                  .getComponentPropertyValue(guid, propertyName)\n                  .pipe(\n                    switchMap((propertyValue) =>\n                      this.rxViewExpressionValidatorService\n                        .validate(\n                          propertyValue,\n                          propertyName,\n                          descriptorPropMap.get(propertyName).label,\n                          descriptorPropMap.get(propertyName).evaluatorService\n                        )\n                        .pipe(\n                          takeUntil(\n                            this.viewDesignerFacade.allComponentGuids$.pipe(filter((guids) => !guids.has(guid)))\n                          )\n                        )\n                    )\n                  )\n              )\n            ).pipe(map(flatten))\n          : of([]);\n      }),\n      publishReplay(1),\n      refCount()\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IViewComponentDescriptor, IViewDefinitionPermission } from '@helix/platform/view/api';\nimport { IPlainObject } from '@helix/platform/shared/api';\nimport { isFunction } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDesignerStateHelperService {\n  getInitialComponentProperties(\n    initialProperties: IPlainObject,\n    componentDescriptor: IViewComponentDescriptor\n  ): IPlainObject {\n    let result = initialProperties;\n\n    if (isFunction(componentDescriptor.designComponentModel?.getInitialProperties)) {\n      result = componentDescriptor.designComponentModel.getInitialProperties(initialProperties);\n    }\n\n    return result;\n  }\n\n  getDefaultComponentPermissions(componentDescriptor: IViewComponentDescriptor): IViewDefinitionPermission[] {\n    let permissions = null;\n\n    if (isFunction(componentDescriptor.designComponentModel?.getDefaultPermissions)) {\n      permissions = componentDescriptor.designComponentModel.getDefaultPermissions();\n    }\n\n    return permissions;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { RxGuidService } from '@helix/platform/utils';\nimport { RX_VIEW_DEFINITION, RxViewComponentRegistryService, RxViewLayout } from '@helix/platform/view/api';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action, Store } from '@ngrx/store';\nimport { filter, map, mergeMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { ComponentSandbox } from '../component-sandbox/component-sandbox.class';\nimport { viewComponentModelsSelector } from './view-designer.selectors';\nimport { IViewComponentDesignModel } from '../interfaces/view-component-design-model.interface';\nimport { IViewComponentDesignModels } from '../interfaces/view-component-design-models.interface';\nimport { RxViewDesignerModels } from '../core/view-designer-models.service';\nimport { getAllChildGuids, getChildGuidsFromModel } from '../core/layout-helpers';\nimport * as ViewComponentsActions from './view-component.actions';\nimport * as ViewComponentActions from './view-component.actions';\nimport { difference, forEach, includes, isEmpty, isEqual, isFunction, last, map as _map } from 'lodash';\nimport { IViewComponentDesignSetPayload } from '../public-interfaces/view-component-design.types';\nimport {\n  IAddNewComponentActionPayload,\n  IInitializeComponentModelActionPayload,\n  IInitializeDataComponentModelActionPayload,\n  ISetChildrenActionPayload,\n  ISetComponentDataPayload\n} from './view-component.types';\nimport { RxViewDesignerInspectorService } from '../core/view-designer-inspector.service';\nimport { RxViewExpressionValidatorRegistryService } from '../validation/view-expression-validator-registry.service';\nimport * as ViewDesignerActions from './view-designer.actions';\nimport { RxViewDesignerStateHelperService } from './view-designer-state-helper.service';\nimport { RxViewDataDictionaryStoreService } from '../core/view-data-dictionary-store.service';\n\n@Injectable()\nexport class ViewDesignerComponentEffects {\n  @Effect()\n  initializeComponentModel$ = this.actions$.pipe(\n    ofType(ViewComponentActions.initializeComponentModels),\n    tap((action) => {\n      action.payload.forEach(({ componentModel }) => {\n        const componentDescriptor = this.rxViewComponentRegistryService.get(componentModel.type);\n        const sandbox = new ComponentSandbox(this.injector, componentModel.guid, componentDescriptor);\n        const model = new componentDescriptor.designComponentModel(this.injector, sandbox);\n\n        if (isFunction(model.rxInit)) {\n          model.rxInit();\n        }\n\n        this.viewDesignerModels.set(componentModel.guid, model);\n      });\n    }),\n    map(() => ViewDesignerActions.viewModelsInitialized())\n  );\n\n  @Effect({ dispatch: false })\n  registerComponentsValidation$ = this.actions$.pipe(\n    ofType(ViewComponentActions.initializeDataComponentModels, ViewComponentActions.initializeComponentModels),\n    tap((action) =>\n      this.rxViewExpressionValidatorRegistryService.registerComponents(\n        _map(action.payload, (payload) => payload.componentModel.guid)\n      )\n    )\n  );\n\n  @Effect({ dispatch: false })\n  onComponentsRemoved$ = this.actions$.pipe(\n    ofType(ViewComponentActions.componentsRemoved),\n    tap(({ guids }) => {\n      this.rxViewExpressionValidatorRegistryService.unregisterComponents(guids);\n      this.rxViewDataDictionaryStoreService.removeDataDictionaryForComponents(guids);\n    })\n  );\n\n  @Effect({ dispatch: false })\n  unregisterAllComponentsValidation$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.initViewDesigner, ViewDesignerActions.destroyViewDesigner),\n    tap(() => this.rxViewExpressionValidatorRegistryService.unregisterAllComponents())\n  );\n\n  @Effect()\n  insertComponent$ = this.actions$.pipe(\n    ofType(ViewComponentsActions.insertComponent),\n    map((payload) => {\n      const newPayload = {\n        insertIndex: payload.insertIndex,\n        columnIndex: payload.columnIndex,\n        outletName: payload.outletName,\n        parentGuid: payload.targetGuid\n      };\n\n      return payload.data.guid\n        ? ViewComponentsActions.moveComponent({\n            ...newPayload,\n            guid: payload.data.guid\n          })\n        : ViewComponentsActions.addNewComponents({\n            payload: [\n              {\n                ...newPayload,\n                type: payload.data.type,\n                selectComponent: true,\n                propertiesByName: payload.data.initialPropertiesByName\n              }\n            ]\n          });\n    })\n  );\n\n  @Effect()\n  addNewComponent$ = this.actions$.pipe(\n    ofType(ViewComponentsActions.addNewComponents),\n    withLatestFrom(this.store$.select(viewComponentModelsSelector)),\n    mergeMap(([action, viewComponentsState]) => {\n      const initializeComponentModelPayloads: IInitializeComponentModelActionPayload[] = [];\n      const initializeDataComponentModelPayloads: IInitializeDataComponentModelActionPayload[] = [];\n      const componentGuidsToSelect: string[] = [];\n\n      action.payload.forEach((component) => {\n        this.processAddComponentPayload(\n          component,\n          initializeComponentModelPayloads,\n          initializeDataComponentModelPayloads,\n          componentGuidsToSelect,\n          viewComponentsState\n        );\n      });\n\n      return [\n        initializeComponentModelPayloads.length\n          ? ViewComponentsActions.initializeComponentModels({ payload: initializeComponentModelPayloads })\n          : null,\n        initializeDataComponentModelPayloads.length\n          ? ViewComponentsActions.initializeDataComponentModels({ payload: initializeDataComponentModelPayloads })\n          : null,\n        componentGuidsToSelect.length\n          ? ViewComponentsActions.selectComponent({\n              guid: last(componentGuidsToSelect)\n            })\n          : null\n      ].filter(Boolean);\n    })\n  );\n\n  @Effect()\n  removeComponent$ = this.actions$.pipe(\n    ofType(ViewComponentsActions.removeComponents),\n    filter(({ guids }) => !isEmpty(guids)),\n    withLatestFrom(this.store$.select(viewComponentModelsSelector)),\n    mergeMap(([payload, viewComponentsState]) => {\n      const guidsToRemove = payload.guids.reduce((result: string[], guid: string) => {\n        const removedComponentModel = viewComponentsState[guid];\n\n        if (removedComponentModel) {\n          result.push(guid, ...getAllChildGuids(removedComponentModel, viewComponentsState));\n        }\n\n        return result;\n      }, []);\n\n      const removeGuidsSet = new Set(guidsToRemove);\n\n      removeGuidsSet.forEach((guid) => {\n        this.viewDesignerModels.delete(guid);\n        this.rxViewDesignerInspectorService.delete(guid);\n      });\n\n      const actions: Action[] = [ViewComponentsActions.componentsRemoved({ guids: [...removeGuidsSet] })];\n\n      if (payload.selectParent) {\n        const lastRemovedModel = viewComponentsState[last(payload.guids)];\n\n        if (lastRemovedModel?.parentGuid) {\n          actions.push(\n            ViewComponentsActions.selectComponent({\n              guid: lastRemovedModel.parentGuid\n            })\n          );\n        }\n      }\n\n      return actions;\n    })\n  );\n\n  @Effect()\n  setChildren$ = this.actions$.pipe(\n    ofType(ViewComponentActions.setChildComponents),\n    map((action) => action.payload),\n    withLatestFrom(this.store$.select(viewComponentModelsSelector)),\n    mergeMap(([actionPayload, viewComponentsState]) => {\n      const actions: Action[] = [];\n      const componentGuidsToRemove: string[] = [];\n      const addComponentsPayloadAll: IAddNewComponentActionPayload[] = [];\n      const editComponentPayloadAll: ISetComponentDataPayload[] = [];\n\n      processChildComponents(actionPayload);\n\n      function processChildComponents(payload: ISetChildrenActionPayload): void {\n        const componentsToSet: IViewComponentDesignSetPayload[] = payload.data;\n        const componentsGuidsToSet = componentsToSet.map((component) => component.guid);\n        const hostComponent = viewComponentsState[payload.guid];\n        let existingChildGuids: string[] = getChildGuidsFromModel(hostComponent);\n\n        if (payload.types) {\n          existingChildGuids = existingChildGuids.filter((guid) =>\n            payload.types.includes(viewComponentsState[guid].type)\n          );\n        }\n\n        const componentGuidsToRemoveLocal: string[] = difference(existingChildGuids, componentsGuidsToSet);\n        const componentGuidsToAdd: string[] = difference(componentsGuidsToSet, existingChildGuids);\n\n        const componentsGuidsToUpdate = difference(\n          existingChildGuids,\n          componentGuidsToAdd,\n          componentGuidsToRemoveLocal\n        );\n\n        componentGuidsToRemove.push(...componentGuidsToRemoveLocal);\n\n        const addComponentsPayload = componentsToSet.reduce<IAddNewComponentActionPayload[]>((result, action) => {\n          if (includes(componentGuidsToAdd, action.guid)) {\n            result.push(getAddComponentPayload(action, payload.guid));\n          }\n\n          return result;\n        }, []);\n\n        addComponentsPayloadAll.push(...addComponentsPayload);\n\n        const editComponentPayload = componentsToSet.reduce((result, action) => {\n          if (includes(componentsGuidsToUpdate, action.guid)) {\n            const existingModel: IViewComponentDesignModel = viewComponentsState[action.guid];\n\n            if (!isEqual(existingModel.propertiesByName, action.data || {})) {\n              result.push({ guid: action.guid, data: action.data });\n            }\n\n            if (action.children) {\n              processChildComponents({\n                guid: action.guid,\n                data: action.children\n              });\n            }\n          }\n\n          return result;\n        }, []);\n\n        editComponentPayloadAll.push(...editComponentPayload);\n      }\n\n      function getAddComponentPayload(\n        action: IViewComponentDesignSetPayload,\n        parentGuid: string\n      ): IAddNewComponentActionPayload {\n        const result: IAddNewComponentActionPayload = {\n          propertiesByName: action.data,\n          guid: action.guid,\n          parentGuid,\n          type: action.type,\n          columnIndex: action.columnIndex || 0,\n          insertIndex: action.insertIndex,\n          outletName: action.outletName || RX_VIEW_DEFINITION.defaultOutletName\n        };\n\n        if (action.children) {\n          result.children = _map(action.children, (child) => getAddComponentPayload(child, action.guid));\n        }\n\n        return result;\n      }\n\n      if (componentGuidsToRemove.length) {\n        actions.push(ViewComponentsActions.removeComponents({ guids: componentGuidsToRemove }));\n      }\n\n      if (addComponentsPayloadAll.length) {\n        actions.push(ViewComponentsActions.addNewComponents({ payload: addComponentsPayloadAll }));\n      }\n\n      if (editComponentPayloadAll.length) {\n        actions.push(ViewComponentsActions.setComponentData({ payload: editComponentPayloadAll }));\n      }\n\n      return actions;\n    })\n  );\n\n  private processAddComponentPayload(\n    component: IAddNewComponentActionPayload,\n    initializeComponentModelPayload: IInitializeComponentModelActionPayload[],\n    initializeDataComponentModelPayloads: IInitializeDataComponentModelActionPayload[],\n    componentGuidsToSelect: string[],\n    viewComponentsState: IViewComponentDesignModels\n  ): void {\n    const componentDescriptor = this.rxViewComponentRegistryService.get(component.type);\n\n    const payloadParent = initializeComponentModelPayload.find(\n      (payload) => payload.componentModel.guid === component.parentGuid\n    );\n\n    const modelParent = viewComponentsState[component.parentGuid];\n\n    const parentWithoutLayout =\n      (payloadParent && !payloadParent.componentModel.layout) || (modelParent && !modelParent.layout);\n\n    const componentModel: Partial<IViewComponentDesignModel> = {\n      guid: component.guid || this.rxGuidService.generate(),\n      type: component.type,\n      parentGuid: component.parentGuid,\n      propertiesByName: this.rxViewDesignerStateHelperService.getInitialComponentProperties(\n        component.propertiesByName,\n        componentDescriptor\n      ),\n      permissions: this.rxViewDesignerStateHelperService.getDefaultComponentPermissions(componentDescriptor)\n    };\n\n    if (this.rxViewComponentRegistryService.isDataComponentDescriptor(componentDescriptor) || parentWithoutLayout) {\n      componentModel.resourceType = componentDescriptor.isContainerComponent\n        ? RX_VIEW_DEFINITION.resourceTypes.containerViewComponent\n        : RX_VIEW_DEFINITION.resourceTypes.viewComponent;\n\n      initializeDataComponentModelPayloads.push({\n        componentModel: componentModel as IViewComponentDesignModel\n      });\n    } else {\n      componentModel.resourceType =\n        componentDescriptor.outlets || componentDescriptor.isContainerComponent\n          ? RX_VIEW_DEFINITION.resourceTypes.containerViewComponent\n          : RX_VIEW_DEFINITION.resourceTypes.viewComponent;\n\n      if (componentDescriptor.outlets) {\n        componentModel.layout = RxViewLayout.getEmptyViewLayoutForOutletNames(componentDescriptor.outlets);\n      }\n\n      initializeComponentModelPayload.push({\n        componentModel: componentModel as IViewComponentDesignModel,\n        insertIndex: component.insertIndex,\n        columnIndex: component.columnIndex || 0,\n        outletName: component.outletName || RX_VIEW_DEFINITION.defaultOutletName\n      });\n\n      if (component.selectComponent) {\n        componentGuidsToSelect.push(componentModel.guid);\n      }\n    }\n\n    forEach(component.children, (child) => {\n      this.processAddComponentPayload(\n        {\n          ...child,\n          parentGuid: componentModel.guid\n        },\n        initializeComponentModelPayload,\n        initializeDataComponentModelPayloads,\n        componentGuidsToSelect,\n        viewComponentsState\n      );\n    });\n  }\n\n  constructor(\n    private actions$: Actions,\n    private injector: Injector,\n    private viewDesignerModels: RxViewDesignerModels,\n    private rxGuidService: RxGuidService,\n    private store$: Store<any>,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private rxViewDesignerInspectorService: RxViewDesignerInspectorService,\n    private rxViewExpressionValidatorRegistryService: RxViewExpressionValidatorRegistryService,\n    private rxViewDesignerStateHelperService: RxViewDesignerStateHelperService,\n    private rxViewDataDictionaryStoreService: RxViewDataDictionaryStoreService\n  ) {}\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { ErrorHandler, Injectable } from '@angular/core';\nimport {\n  RxBundleCacheService,\n  RxDefinitionAdapterRegistryService,\n  RxDefinitionNameService,\n  RxDefinitionUpdateService,\n  RxGlobalCacheService,\n  RxLogService\n} from '@helix/platform/shared/api';\nimport { RxModalService, RxUtilityModalsService } from '@helix/platform/ui-kit';\nimport { RxGuidService, RxJsonParserService } from '@helix/platform/utils';\nimport {\n  AnyViewComponentDefinition,\n  IContainerViewComponentDefinition,\n  IViewActionDescriptor,\n  IViewComponentDefinition,\n  IViewComponentDescriptor,\n  IViewDefinition,\n  IViewLayout,\n  RX_VIEW_DEFINITION,\n  RxOldViewLayoutAdapterService,\n  RxViewActionDefinitionAdapterRegistryService,\n  RxViewActionRegistryService,\n  RxViewComponentRegistryService,\n  RxViewComponentType,\n  RxViewDefinitionParserService,\n  RxViewDefinitionService,\n  RxViewLayout,\n  ViewComponentPropertyType\n} from '@helix/platform/view/api';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action, Store } from '@ngrx/store';\nimport { cloneDeep, find, includes, last, map as _map, omit, transform } from 'lodash';\nimport { noop, Observable, of, throwError } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { RuntimeViewParamsModalComponent } from '../components/runtime-view-params-modal';\nimport { getChildGuidsFromModel } from '../core/layout-helpers';\nimport { RxViewDataDictionaryStoreService } from '../core/view-data-dictionary-store.service';\nimport { RxViewDefinitionGeneratorService } from '../core/view-definition-generator.service';\nimport { RxViewDesignerInspectorService } from '../core/view-designer-inspector.service';\nimport { RxViewDesignerModels } from '../core/view-designer-models.service';\nimport { IViewComponentDesignModel } from '../interfaces/view-component-design-model.interface';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport * as ViewComponentsActions from './view-component.actions';\nimport {\n  IInitializeComponentModelActionPayload,\n  IInitializeDataComponentModelActionPayload,\n  IUpdateComponentModelPayload\n} from './view-component.types';\nimport { RxViewDesignerStateHelperService } from './view-designer-state-helper.service';\nimport * as ViewDesignerActions from './view-designer.actions';\nimport {\n  selectedInspectorTabIdSelector,\n  viewComponentModelsSelector,\n  viewModelSelector\n} from './view-designer.selectors';\n\n@Injectable()\nexport class ViewDesignerEffects {\n  constructor(\n    private actions$: Actions,\n    private store$: Store<any>,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxDefinitionUpdateService: RxDefinitionUpdateService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxJsonParserService: RxJsonParserService,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private rxViewActionRegistryService: RxViewActionRegistryService,\n    private rxViewDefinitionService: RxViewDefinitionService,\n    private viewDesignerModels: RxViewDesignerModels,\n    private rxOldViewLayoutAdapterService: RxOldViewLayoutAdapterService,\n    private rxViewDefinitionParserService: RxViewDefinitionParserService,\n    private rxLogService: RxLogService,\n    private rxModalService: RxModalService,\n    private errorHandler: ErrorHandler,\n    private rxUtilityModalsService: RxUtilityModalsService,\n    private rxDefinitionAdapterRegistryService: RxDefinitionAdapterRegistryService,\n    private rxViewDesignerInspectorService: RxViewDesignerInspectorService,\n    private rxViewDefinitionGeneratorService: RxViewDefinitionGeneratorService,\n    private rxViewDesignerStateHelperService: RxViewDesignerStateHelperService,\n    private rxViewActionDefinitionAdapterRegistryService: RxViewActionDefinitionAdapterRegistryService,\n    private rxGuidService: RxGuidService,\n    private rxViewDataDictionaryStoreService: RxViewDataDictionaryStoreService\n  ) {}\n\n  @Effect()\n  initViewDesigner$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.initViewDesigner),\n    switchMap(({ payload }) => {\n      const { viewDefinitionName, layoutTemplate } = payload;\n\n      this.clearStorages();\n\n      return [\n        ViewDesignerActions.loadFriendlyBundleName(),\n        ViewDesignerActions.loadViewDefinition({\n          viewDefinitionName,\n          layoutTemplate\n        })\n      ];\n    })\n  );\n\n  @Effect({ dispatch: false })\n  destroyViewDesigner$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.destroyViewDesigner),\n    tap(() => this.clearStorages())\n  );\n\n  @Effect()\n  loadFriendlyBundleName$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.loadFriendlyBundleName),\n    switchMap(() => this.rxGlobalCacheService.getBundleDescriptor(this.rxBundleCacheService.bundleId)),\n    switchMap((descriptor) => {\n      let result$;\n\n      if (descriptor) {\n        result$ = of(\n          ViewDesignerActions.friendlyBundleNameLoadSuccess({\n            friendlyBundleName: descriptor.friendlyName\n          })\n        );\n      } else {\n        result$ = throwError(`Bundle \"${this.rxBundleCacheService.bundleId}\" not found`);\n      }\n\n      return result$.pipe(\n        catchError((error) => {\n          this.errorHandler.handleError(error);\n\n          return of(ViewDesignerActions.friendlyBundleNameLoadError({ payload: error }));\n        })\n      );\n    })\n  );\n\n  @Effect()\n  loadViewDefinition$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.loadViewDefinition),\n    switchMap(({ viewDefinitionName, layoutTemplate }) => {\n      const viewDefinition$: Observable<IViewDefinition> = viewDefinitionName\n        ? this.rxViewDefinitionService.get(viewDefinitionName)\n        : this.rxViewDefinitionService.getNew(layoutTemplate);\n\n      return viewDefinition$.pipe(\n        map((viewDefinition) =>\n          ViewDesignerActions.viewDefinitionLoadSuccess({\n            viewDefinition\n          })\n        ),\n        catchError((error) => {\n          this.errorHandler.handleError(error);\n\n          return of(ViewDesignerActions.viewDefinitionLoadError());\n        })\n      );\n    })\n  );\n\n  @Effect()\n  viewDefinitionLoadSuccess$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.viewDefinitionLoadSuccess),\n    withLatestFrom(this.store$.select(viewModelSelector)),\n    mergeMap(([payload, viewModel]) => {\n      // If viewModel isn't empty it's considered that view definition is loaded after save to update\n      // existing view models with properties added by server e.g 'lastChangedBy', 'lastUpdateTime' and etc.\n      return viewModel\n        ? this.getActionsToUpdateExistingViewModels(payload.viewDefinition)\n        : this.getActionsToInitializeViewModels(payload.viewDefinition);\n    })\n  );\n\n  @Effect()\n  selectViewComponent$ = this.actions$.pipe(\n    ofType(ViewComponentsActions.selectComponent),\n    withLatestFrom(this.store$.select(viewModelSelector), this.store$.select(selectedInspectorTabIdSelector)),\n    mergeMap(([action, viewModel, currentInspectorTabId]) => {\n      const selectedInspectorTab = viewModel.guid === action.guid ? 0 : 1;\n\n      if (selectedInspectorTab !== currentInspectorTabId) {\n        return [\n          ViewDesignerActions.selectInspectorTab({\n            tabId: selectedInspectorTab\n          })\n        ];\n      } else {\n        return [];\n      }\n    })\n  );\n\n  @Effect()\n  generateViewDefinition$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.generateViewDefinition),\n    withLatestFrom(\n      this.store$.select(viewModelSelector),\n      this.store$.select(viewComponentModelsSelector),\n      (action, viewModel, componentModels) => ({ viewModel, componentModels })\n    ),\n    map(({ viewModel, componentModels }) => this.rxViewDefinitionGeneratorService.generate(viewModel, componentModels)),\n    map((viewDefinition: IViewDefinition) =>\n      ViewDesignerActions.setGeneratedViewDefinition({ payload: viewDefinition })\n    )\n  );\n\n  @Effect()\n  saveViewDefinition$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.saveViewDefinition),\n    withLatestFrom(\n      this.store$.select(viewModelSelector),\n      this.store$.select(viewComponentModelsSelector),\n      (action, viewModel, components) => ({ viewModel, components })\n    ),\n    switchMap(({ viewModel, components }) => {\n      const viewDefinition = this.rxViewDefinitionGeneratorService.generate(viewModel, components, true);\n\n      return (\n        viewDefinition.lastUpdateTime\n          ? this.rxDefinitionUpdateService.execute(\n              this.rxViewDefinitionService.update.bind(\n                this.rxViewDefinitionService,\n                viewDefinition.name,\n                viewDefinition\n              )\n            )\n          : this.rxViewDefinitionService.create(viewDefinition)\n      ).pipe(\n        switchMap((response: HttpResponse<any>) => {\n          const definitionName =\n            decodeURIComponent(last(response?.headers.get('Location').split('/')) || '') || viewDefinition.name;\n\n          return [\n            ViewDesignerActions.viewDefinitionSaveSuccess({ viewDefinitionName: definitionName }),\n            viewDefinition.lastUpdateTime\n              ? ViewDesignerActions.loadViewDefinition({\n                  viewDefinitionName: viewDefinition.name\n                })\n              : null\n          ].filter(Boolean);\n        }),\n        catchError((error) => {\n          this.errorHandler.handleError(error);\n\n          return of(ViewDesignerActions.viewDefinitionSaveError());\n        })\n      );\n    })\n  );\n\n  @Effect()\n  clearCanvas$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.clearCanvas),\n    withLatestFrom(this.store$.select(viewModelSelector)),\n    map(([action, viewModel]) => ViewComponentsActions.removeComponents({ guids: getChildGuidsFromModel(viewModel) }))\n  );\n\n  @Effect({ dispatch: false })\n  runPreview$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.runPreview),\n    withLatestFrom(this.store$.select(viewModelSelector), (action, viewModel) => viewModel),\n    switchMap((viewModel: IViewDesignModel) =>\n      viewModel.targetViewDefinitionName\n        ? this.rxViewDefinitionService.get(viewModel.targetViewDefinitionName)\n        : of(viewModel)\n    ),\n    tap((viewModel: IViewDesignModel) => {\n      const encodedViewDefinitionName = encodeURIComponent(viewModel.name);\n      let url = `/helix/index.html#/${this.rxBundleCacheService.bundleId}/preview/${encodedViewDefinitionName}`;\n\n      if (viewModel.inputParams.length) {\n        this.rxModalService\n          .openModal({\n            title: 'Enter view parameter values',\n            content: RuntimeViewParamsModalComponent,\n            data: { inputParams: _map(viewModel.inputParams, 'name') },\n            size: 'sm'\n          })\n          .catch(noop)\n          .then((params: { [inputName: string]: string }) => {\n            const inputConfig = _map(params, (value, name) => {\n              return `${encodeURIComponent(name)}=${encodeURIComponent(value)}`;\n            });\n\n            url += `?${inputConfig.join('&')}`;\n\n            if (params) {\n              window.open(url);\n            }\n          });\n      } else {\n        window.open(url);\n      }\n    })\n  );\n\n  private clearStorages(): void {\n    this.viewDesignerModels.clear();\n    this.rxViewDesignerInspectorService.clear();\n    this.rxViewDataDictionaryStoreService.clear();\n  }\n\n  private convertViewDefinitionToModel(viewDefinition: IViewDefinition): IViewDesignModel {\n    const isAngularJsView = Boolean(viewDefinition.lastUpdateTime) && !includes(viewDefinition.layout, '\"outlets\"');\n\n    this.rxViewDefinitionParserService\n      .getComponents(viewDefinition)\n      .forEach((definition) => this.rxOldViewLayoutAdapterService.convertLayout(definition));\n\n    const viewModel: IViewDesignModel = omit(viewDefinition, ['componentDefinitions', 'layout']) as IViewDesignModel;\n    const layout = this.rxJsonParserService.tryParseJson<IViewLayout>(viewDefinition.layout);\n\n    viewModel.layout = RxViewLayout.getEmptyViewLayoutForOutlets(layout.outlets);\n    viewModel.displayName = decodeURIComponent(this.rxDefinitionNameService.getDisplayName(viewModel.name));\n    viewModel.layoutName = RxViewLayout.getLayoutName(viewModel.layout);\n    viewModel.isAngularJsView = isAngularJsView;\n\n    return viewModel;\n  }\n\n  private convertComponentDefinitionToModel(\n    definition: AnyViewComponentDefinition,\n    parentGuid: string,\n    descriptor: IViewComponentDescriptor | IViewActionDescriptor\n  ): IViewComponentDesignModel {\n    const componentModel = omit(definition, ['componentDefinitions', 'layout']) as IViewComponentDesignModel;\n\n    componentModel.parentGuid = parentGuid;\n    this.processComponentDefinitionProperties(componentModel, descriptor);\n\n    if (this.isComponentHasLayout(definition)) {\n      const layout = this.rxJsonParserService.tryParseJson<IViewLayout>(definition.layout);\n\n      componentModel.layout = RxViewLayout.getEmptyViewLayoutForOutlets(layout.outlets);\n    }\n\n    return componentModel;\n  }\n\n  private processComponentDefinitionProperties(\n    componentModel: IViewComponentDesignModel,\n    descriptor: IViewComponentDescriptor | IViewActionDescriptor\n  ) {\n    componentModel.propertiesByName = transform(\n      componentModel.propertiesByName,\n      (result, propertyValue, propertyKey) => {\n        const propertyDescriptor = find(\n          (descriptor as IViewComponentDescriptor).properties || (descriptor as IViewActionDescriptor).parameters,\n          {\n            name: propertyKey\n          }\n        );\n\n        if (propertyDescriptor && propertyDescriptor.designType) {\n          switch (true) {\n            case propertyDescriptor.designType === ViewComponentPropertyType.String:\n              result[propertyKey] = propertyValue;\n\n              break;\n\n            default:\n              result[propertyKey] = this.rxJsonParserService.tryParseJson(propertyValue, propertyValue);\n\n              break;\n          }\n        } else {\n          result[propertyKey] = propertyValue;\n        }\n\n        return result;\n      },\n      {}\n    );\n\n    if (!this.rxGuidService.isGuid(componentModel.name)) {\n      componentModel.propertiesByName.name = componentModel.name;\n    }\n\n    if ('type' in descriptor) {\n      componentModel.propertiesByName = this.rxViewDesignerStateHelperService.getInitialComponentProperties(\n        componentModel.propertiesByName,\n        descriptor\n      );\n    }\n  }\n\n  private traverseByComponents(\n    component: IViewDefinition | IContainerViewComponentDefinition,\n    predicate: (\n      definition: IViewComponentDefinition,\n      guid: string,\n      name: string,\n      index: number,\n      colIndex: number,\n      columnSpan: number\n    ) => void\n  ): void {\n    const componentLayout = this.rxJsonParserService.tryParseJson(component.layout) as IViewLayout;\n    const childComponentDefinitions = component.componentDefinitions;\n\n    if (componentLayout) {\n      componentLayout.outlets.forEach((outlet) => {\n        outlet.columns.forEach((column, colIndex) => {\n          column.children.forEach((childComponentGuid, index) => {\n            const childComponentDefinition = childComponentDefinitions.find(\n              (definition) => definition.guid === childComponentGuid\n            );\n\n            if (childComponentDefinition) {\n              predicate(childComponentDefinition, component.guid, outlet.name, index, colIndex, column.span);\n\n              if ((childComponentDefinition as IContainerViewComponentDefinition).componentDefinitions) {\n                this.traverseByComponents(childComponentDefinition as IContainerViewComponentDefinition, predicate);\n              }\n            }\n          });\n        });\n      });\n    }\n\n    childComponentDefinitions\n      .filter((definition) => {\n        const descriptor = this.rxViewComponentRegistryService.get(definition.type);\n\n        return descriptor?.isDataComponent || descriptor?.isPageComponent;\n      })\n      .forEach((childComponentDefinition, index) => {\n        predicate(childComponentDefinition, component.guid, null, index, 0, 0);\n\n        if ((childComponentDefinition as IContainerViewComponentDefinition).componentDefinitions) {\n          this.traverseByComponents(childComponentDefinition as IContainerViewComponentDefinition, predicate);\n        }\n      });\n  }\n\n  private isComponentHasLayout(\n    definition: IViewComponentDefinition | IContainerViewComponentDefinition\n  ): definition is IContainerViewComponentDefinition {\n    return Boolean((definition as IContainerViewComponentDefinition).layout);\n  }\n\n  private getActionsToInitializeViewModels(viewDefinition: IViewDefinition): Action[] {\n    const viewDefinitionClone = cloneDeep(viewDefinition);\n    const viewModel = this.convertViewDefinitionToModel(viewDefinitionClone);\n\n    const initComponentModelsPayload: IInitializeComponentModelActionPayload[] = [];\n    const initDataComponentModelsPayload: IInitializeDataComponentModelActionPayload[] = [];\n\n    this.traverseByComponents(\n      viewDefinitionClone,\n      (componentDefinition, parentGuid, outletName, insertIndex, columnIndex, columnSpan) => {\n        const componentDescriptor = this.rxViewComponentRegistryService.get(componentDefinition.type);\n\n        if (componentDescriptor && !componentDescriptor.isPageComponent) {\n          const adapter =\n            componentDefinition.type === RxViewComponentType.Action\n              ? this.rxViewActionDefinitionAdapterRegistryService.getDesignAdapter(\n                  componentDefinition.propertiesByName.name\n                )\n              : this.rxDefinitionAdapterRegistryService.getDesignAdapter(componentDefinition.type);\n\n          adapter?.adaptDefinition(componentDefinition, viewDefinitionClone);\n\n          let actionDescriptor;\n\n          if (componentDefinition.type === RxViewComponentType.Action) {\n            actionDescriptor = this.rxViewActionRegistryService.get(componentDefinition.propertiesByName.name);\n\n            if (!actionDescriptor) {\n              actionDescriptor = this.rxViewActionRegistryService.registerUnknownAction(\n                componentDefinition.propertiesByName.name\n              );\n            }\n          }\n\n          const componentModel = this.convertComponentDefinitionToModel(\n            componentDefinition,\n            parentGuid,\n            actionDescriptor || componentDescriptor\n          );\n\n          if (\n            this.rxViewComponentRegistryService.isDataComponentDescriptor(componentDescriptor) ||\n            outletName === null\n          ) {\n            initDataComponentModelsPayload.push({\n              componentModel\n            });\n          } else {\n            initComponentModelsPayload.push({\n              insertIndex,\n              columnIndex,\n              componentModel,\n              outletName,\n              columnSpan\n            });\n          }\n        } else if (this.rxViewDefinitionService.isPageView(viewDefinitionClone)) {\n          let pageComponentChildDescriptor = this.rxViewComponentRegistryService.get(componentDefinition.type);\n\n          if (!pageComponentChildDescriptor) {\n            pageComponentChildDescriptor = {\n              type: componentDefinition.type,\n              name: RX_VIEW_DEFINITION.unknownPageComponent.name\n            };\n          }\n\n          const componentModel = this.convertComponentDefinitionToModel(\n            componentDefinition,\n            parentGuid,\n            pageComponentChildDescriptor\n          );\n\n          initDataComponentModelsPayload.push({\n            componentModel\n          });\n        } else {\n          const unknownComponentDescriptor = {\n            ...this.rxViewComponentRegistryService.get(RxViewComponentType.Unknown),\n            type: componentDefinition.type\n          };\n\n          this.rxViewComponentRegistryService.registerSync(unknownComponentDescriptor);\n\n          const componentModel = this.convertComponentDefinitionToModel(\n            componentDefinition,\n            parentGuid,\n            unknownComponentDescriptor\n          );\n\n          initComponentModelsPayload.push({\n            insertIndex,\n            columnIndex,\n            componentModel,\n            outletName,\n            columnSpan\n          });\n\n          this.rxLogService.warning(\n            `Cannot initialize view component. View Component Descriptor for ${componentDefinition.type} not found.`\n          );\n        }\n      }\n    );\n\n    return [\n      ViewDesignerActions.setViewModel({ payload: viewModel }),\n      initComponentModelsPayload.length\n        ? ViewComponentsActions.initializeComponentModels({ payload: initComponentModelsPayload })\n        : null,\n      initDataComponentModelsPayload.length\n        ? ViewComponentsActions.initializeDataComponentModels({ payload: initDataComponentModelsPayload })\n        : null,\n      initComponentModelsPayload.length ? null : ViewDesignerActions.viewModelsInitialized()\n    ].filter(Boolean);\n  }\n\n  private getActionsToUpdateExistingViewModels(viewDefinition: IViewDefinition): Action[] {\n    const viewDefinitionClone = cloneDeep(viewDefinition);\n\n    const updateComponentModelPayloads: IUpdateComponentModelPayload[] = this.rxViewDefinitionParserService\n      .getComponents(viewDefinitionClone, true)\n      .map(({ componentDefinition }) => ({\n        guid: componentDefinition.guid,\n        partialModel: omit(componentDefinition, [\n          'layout',\n          'propertiesByName',\n          'componentDefinitions'\n        ]) as Partial<IViewComponentDesignModel>\n      }));\n\n    return [\n      ViewDesignerActions.updateViewModel({\n        payload: omit(viewDefinitionClone, ['layout', 'componentDefinitions'])\n      }),\n      updateComponentModelPayloads.length\n        ? ViewComponentsActions.updateComponentModel({ payload: updateComponentModelPayloads })\n        : null,\n      ViewDesignerActions.viewModelsUpdatedAfterSave()\n    ].filter(Boolean);\n  }\n}\n","import { createReducer, on } from '@ngrx/store';\n\nimport { IViewDefinition } from '@helix/platform/view/api';\nimport * as ViewDesignerActions from './view-designer.actions';\n\nexport function getInitialState(): IViewDefinition {\n  return null;\n}\n\nexport const reducer = createReducer<IViewDefinition>(\n  getInitialState(),\n\n  on(ViewDesignerActions.initViewDesigner, getInitialState),\n\n  on(ViewDesignerActions.destroyViewDesigner, getInitialState),\n\n  on(ViewDesignerActions.setGeneratedViewDefinition, (state, { payload }) => {\n    return payload;\n  })\n);\n\nexport function viewDefinitionReducer(state, action) {\n  return reducer(state, action);\n}\n","import { omit, has } from 'lodash';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as ViewDesignerActions from './view-designer.actions';\nimport * as ViewComponentsActions from './view-component.actions';\n\ntype BreadcrumbLabel = string;\n\nexport interface IViewDesignerBreadcrumbsState {\n  [guid: string]: BreadcrumbLabel;\n}\n\nexport function getInitialState(): IViewDesignerBreadcrumbsState {\n  return {};\n}\n\nexport const reducer = createReducer<IViewDesignerBreadcrumbsState>(\n  getInitialState(),\n\n  on(ViewDesignerActions.initViewDesigner, getInitialState),\n\n  on(ViewDesignerActions.destroyViewDesigner, getInitialState),\n\n  on(ViewComponentsActions.setBreadcrumbs, (state, { guid, label }) => {\n    return { ...state, [guid]: label };\n  }),\n\n  on(ViewComponentsActions.componentsRemoved, (state, { guids }) => {\n    let newState = state;\n\n    if (guids.some((guid) => has(state, guid))) {\n      newState = omit(state, guids);\n    }\n\n    return newState;\n  })\n);\n\nexport function viewDesignerBreadcrumbsReducer(state, action) {\n  return reducer(state, action);\n}\n","import { cloneDeep, last, omit } from 'lodash';\nimport { createReducer, on } from '@ngrx/store';\n\nimport { RX_VIEW_DEFINITION } from '@helix/platform/view/api';\nimport * as ViewDesignerActions from './view-designer.actions';\nimport * as ViewComponentActions from './view-component.actions';\nimport { IViewDesignModelState } from '../interfaces/view-design-model-state.interface';\nimport { IViewComponentDesignModel } from '../interfaces/view-component-design-model.interface';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport {\n  addChildComponent,\n  findParentComponentModel,\n  isComponentContainsChild,\n  removeChildComponent\n} from '../core/layout-helpers';\nimport { IInitializeComponentModelActionPayload } from './view-component.types';\n\nexport function getInitialState(): IViewDesignModelState {\n  return {\n    viewDesignModel: null,\n    viewComponentDesignModels: {}\n  };\n}\n\nfunction initializeComponentModel(newState: IViewDesignModelState, payload: IInitializeComponentModelActionPayload) {\n  newState.viewComponentDesignModels = {\n    ...newState.viewComponentDesignModels,\n    [payload.componentModel.guid]: payload.componentModel\n  };\n\n  // update parent layout\n  if (payload.componentModel.parentGuid === newState.viewDesignModel.guid) {\n    newState.viewDesignModel = addChildComponent(\n      newState.viewDesignModel,\n      payload.componentModel.guid,\n      payload.outletName,\n      payload.insertIndex,\n      payload.columnIndex,\n      payload.columnSpan\n    ) as IViewDesignModel;\n  } else {\n    const parentComponentModel = newState.viewComponentDesignModels[payload.componentModel.parentGuid];\n\n    if (parentComponentModel) {\n      const newParentComponentModel = addChildComponent(\n        parentComponentModel,\n        payload.componentModel.guid,\n        payload.outletName,\n        payload.insertIndex,\n        payload.columnIndex,\n        payload.columnSpan\n      );\n\n      newState.viewComponentDesignModels[newParentComponentModel.guid] =\n        newParentComponentModel as IViewComponentDesignModel;\n    }\n  }\n}\n\nexport const reducer = createReducer<IViewDesignModelState>(\n  getInitialState(),\n\n  on(ViewDesignerActions.initViewDesigner, getInitialState),\n\n  on(ViewDesignerActions.destroyViewDesigner, getInitialState),\n\n  on(ViewComponentActions.initializeComponentModels, (state, { payload }) => {\n    const newState = {\n      ...state\n    };\n\n    payload.forEach((data) => initializeComponentModel(newState, data));\n\n    return newState;\n  }),\n\n  on(ViewComponentActions.initializeDataComponentModels, (state, { payload }) => {\n    const newState = {\n      ...state,\n      viewComponentDesignModels: {\n        ...state.viewComponentDesignModels\n      }\n    };\n\n    payload.forEach((item) => {\n      const parentComponentModel = newState.viewComponentDesignModels[item.componentModel.parentGuid];\n\n      if (parentComponentModel) {\n        // add new component model\n        newState.viewComponentDesignModels[item.componentModel.guid] = item.componentModel;\n\n        // update parent to contain child reference\n        const newParentComponentModel = {\n          ...parentComponentModel,\n          childDataComponentGuids: [...(parentComponentModel.childDataComponentGuids || []), item.componentModel.guid]\n        };\n\n        newState.viewComponentDesignModels[newParentComponentModel.guid] =\n          newParentComponentModel as IViewComponentDesignModel;\n      }\n    });\n\n    return newState;\n  }),\n\n  on(ViewComponentActions.moveComponent, (state, payload) => {\n    const newState = {\n      ...state\n    };\n\n    // remove component from old parent layout\n    if (isComponentContainsChild(payload.guid, state.viewDesignModel)) {\n      newState.viewDesignModel = removeChildComponent(payload.guid, newState.viewDesignModel) as IViewDesignModel;\n    } else {\n      let oldParentComponentModel = findParentComponentModel(payload.guid, newState.viewComponentDesignModels);\n\n      oldParentComponentModel = removeChildComponent(\n        payload.guid,\n        oldParentComponentModel\n      ) as IViewComponentDesignModel;\n\n      newState.viewComponentDesignModels = {\n        ...newState.viewComponentDesignModels,\n        [oldParentComponentModel.guid]: oldParentComponentModel\n      };\n    }\n\n    // add component to new parent layout\n    if (payload.parentGuid === newState.viewDesignModel.guid) {\n      newState.viewDesignModel = addChildComponent(\n        newState.viewDesignModel,\n        payload.guid,\n        payload.outletName,\n        payload.insertIndex,\n        payload.columnIndex\n      ) as IViewDesignModel;\n    } else {\n      let newParentComponentModel = newState.viewComponentDesignModels[payload.parentGuid];\n\n      newParentComponentModel = addChildComponent(\n        newParentComponentModel,\n        payload.guid,\n        payload.outletName,\n        payload.insertIndex,\n        payload.columnIndex\n      ) as IViewComponentDesignModel;\n\n      newState.viewComponentDesignModels = {\n        ...newState.viewComponentDesignModels,\n        [newParentComponentModel.guid]: newParentComponentModel\n      };\n    }\n\n    // updating parentGuid for moved component\n    newState.viewComponentDesignModels = {\n      ...newState.viewComponentDesignModels,\n\n      [payload.guid]: {\n        ...newState.viewComponentDesignModels[payload.guid],\n        parentGuid: payload.parentGuid\n      }\n    };\n\n    return newState;\n  }),\n\n  on(ViewComponentActions.componentsRemoved, (state, { guids }) => {\n    const newState: IViewDesignModelState = {\n      ...state,\n      viewComponentDesignModels: omit(state.viewComponentDesignModels, guids)\n    };\n\n    guids.forEach((guid) => {\n      if (isComponentContainsChild(guid, state.viewDesignModel)) {\n        newState.viewDesignModel = removeChildComponent(guid, newState.viewDesignModel) as IViewDesignModel;\n      } else {\n        let oldParentComponentModel = findParentComponentModel(guid, state.viewComponentDesignModels);\n\n        if (oldParentComponentModel && newState.viewComponentDesignModels[oldParentComponentModel.guid]) {\n          oldParentComponentModel = removeChildComponent(\n            guid,\n            newState.viewComponentDesignModels[oldParentComponentModel.guid]\n          ) as IViewComponentDesignModel;\n\n          newState.viewComponentDesignModels = {\n            ...newState.viewComponentDesignModels,\n            [oldParentComponentModel.guid]: oldParentComponentModel\n          };\n        }\n      }\n    });\n\n    return newState;\n  }),\n\n  on(ViewComponentActions.setComponentLayout, (state, { guid, cols }) => {\n    const componentModel = state.viewComponentDesignModels[guid];\n\n    const defaultOutlet = componentModel.layout.outlets.find(\n      (item) => item.name === RX_VIEW_DEFINITION.defaultOutletName\n    );\n\n    const existingColumns = cloneDeep(defaultOutlet.columns);\n    const removedColumns = existingColumns.splice(cols.length);\n\n    cols.forEach((colSpan, i) => {\n      if (existingColumns[i]) {\n        existingColumns[i].span = colSpan;\n      } else {\n        existingColumns[i] = {\n          span: colSpan,\n          children: []\n        };\n      }\n    });\n\n    const removedColumnChildComponents: string[] = removedColumns.reduce((guids, col) => {\n      guids.push(...col.children);\n\n      return guids;\n    }, []);\n\n    if (removedColumnChildComponents.length) {\n      const lastExistingCol = last(existingColumns);\n\n      lastExistingCol.children = lastExistingCol.children.concat(removedColumnChildComponents);\n    }\n\n    return {\n      ...state,\n      viewComponentDesignModels: {\n        ...state.viewComponentDesignModels,\n        [guid]: {\n          ...componentModel,\n          layout: {\n            ...componentModel.layout,\n            outlets: componentModel.layout.outlets.map((outlet) => ({\n              ...outlet,\n              columns: existingColumns\n            }))\n          }\n        }\n      }\n    };\n  }),\n\n  on(ViewDesignerActions.setViewModel, (state, { payload }) => {\n    return {\n      ...state,\n      viewDesignModel: payload\n    };\n  }),\n\n  on(ViewDesignerActions.updateViewModel, (state, { payload }) => {\n    return {\n      ...state,\n      viewDesignModel: {\n        ...state.viewDesignModel,\n        ...payload\n      }\n    };\n  }),\n\n  on(ViewDesignerActions.viewDefinitionSaveSuccess, (state) => {\n    if (state.viewDesignModel.isAngularJsView) {\n      return {\n        ...state,\n        viewDesignModel: {\n          ...state.viewDesignModel,\n          isAngularJsView: false\n        }\n      };\n    } else {\n      return state;\n    }\n  }),\n\n  on(ViewComponentActions.setComponentData, (state, { payload }) => {\n    return {\n      ...state,\n      viewComponentDesignModels: {\n        ...state.viewComponentDesignModels,\n        ...payload.reduce((res, { guid, data }) => {\n          res[guid] = {\n            ...state.viewComponentDesignModels[guid],\n            propertiesByName: data\n          };\n\n          return res;\n        }, {})\n      }\n    };\n  }),\n\n  on(ViewComponentActions.updateComponentModel, (state, { payload }) => {\n    return {\n      ...state,\n      viewComponentDesignModels: {\n        ...state.viewComponentDesignModels,\n        ...payload\n          .filter((payload) => state.viewComponentDesignModels[payload.guid])\n          .reduce((res, { guid, partialModel }) => {\n            res[guid] = {\n              ...state.viewComponentDesignModels[guid],\n              ...partialModel,\n              propertiesByName: {\n                ...state.viewComponentDesignModels[guid].propertiesByName,\n                ...partialModel.propertiesByName\n              }\n            };\n\n            return res;\n          }, {})\n      }\n    };\n  })\n);\n\nexport function viewDesignerModelReducer(state, action) {\n  return reducer(state, action);\n}\n","import { createReducer, on } from '@ngrx/store';\n\nimport * as ViewDesignerActions from './view-designer.actions';\nimport * as ViewComponentActions from './view-component.actions';\nimport { IViewDesignerUiState } from '../interfaces/view-designer-ui-state.interface';\n\nexport function getInitialState(): IViewDesignerUiState {\n  return {\n    selectedComponentGuid: null,\n    selectedInspectorTabId: 0,\n    currentBundleId: null,\n    isViewDefinitionLoading: false,\n    areViewModelsReady: false,\n    friendlyBundleName: null\n  };\n}\n\nexport const reducer = createReducer(\n  getInitialState(),\n\n  on(ViewDesignerActions.initViewDesigner, (_, { payload }) => {\n    return {\n      ...getInitialState(),\n      currentBundleId: payload.bundleId\n    };\n  }),\n\n  on(ViewDesignerActions.destroyViewDesigner, getInitialState),\n\n  on(ViewComponentActions.selectComponent, (state, { guid }) => {\n    return {\n      ...state,\n      selectedComponentGuid: guid\n    };\n  }),\n\n  on(ViewDesignerActions.selectInspectorTab, (state, { tabId }) => {\n    return {\n      ...state,\n      selectedInspectorTabId: tabId\n    };\n  }),\n\n  on(ViewComponentActions.componentsRemoved, (state, { guids }) => {\n    if (guids.includes(state.selectedComponentGuid)) {\n      return {\n        ...state,\n        selectedComponentGuid: null\n      };\n    } else {\n      return {\n        ...state\n      };\n    }\n  }),\n\n  on(ViewDesignerActions.friendlyBundleNameLoadSuccess, (state, { friendlyBundleName }) => {\n    return {\n      ...state,\n      friendlyBundleName: friendlyBundleName\n    };\n  }),\n\n  on(ViewDesignerActions.friendlyBundleNameLoadError, (state) => {\n    return {\n      ...state,\n      friendlyBundleName: null\n    };\n  }),\n\n  on(ViewDesignerActions.saveViewDefinition, ViewDesignerActions.loadViewDefinition, (state) => {\n    return {\n      ...state,\n      isViewDefinitionLoading: true,\n      areViewModelsReady: false\n    };\n  }),\n\n  on(\n    ViewDesignerActions.viewDefinitionSaveSuccess,\n    ViewDesignerActions.viewDefinitionLoadSuccess,\n    ViewDesignerActions.viewDefinitionLoadError,\n    (state) => {\n      return {\n        ...state,\n        isViewDefinitionLoading: false\n      };\n    }\n  ),\n\n  on(ViewDesignerActions.viewDefinitionSaveError, (state) => {\n    return {\n      ...state,\n      isViewDefinitionLoading: false,\n      areViewModelsReady: true\n    };\n  }),\n\n  on(ViewDesignerActions.viewModelsUpdatedAfterSave, ViewDesignerActions.viewModelsInitialized, (state) => {\n    return {\n      ...state,\n      areViewModelsReady: true\n    };\n  }),\n\n  on(ViewComponentActions.initializeComponentModels, (state) => {\n    return {\n      ...state,\n      areViewModelsReady: false\n    };\n  })\n);\n\nexport function viewDesignerUiReducer(state, action) {\n  return reducer(state, action);\n}\n","import { has, omit, isEmpty, omitBy } from 'lodash';\nimport { createReducer, on } from '@ngrx/store';\n\nimport { IViewComponentDesignValidationIssue } from '../public-interfaces';\nimport * as ViewDesignerActions from './view-designer.actions';\nimport * as ViewComponentActions from './view-component.actions';\n\nexport interface IViewDesignerValidationState {\n  issues: {\n    [guid: string]: IViewComponentDesignValidationIssue[];\n  };\n  expressionIssues: {\n    [guid: string]: IViewComponentDesignValidationIssue[];\n  };\n}\n\nexport function getInitialState(): IViewDesignerValidationState {\n  return {\n    issues: {},\n    expressionIssues: {}\n  };\n}\n\nexport const reducer = createReducer<IViewDesignerValidationState>(\n  getInitialState(),\n\n  on(ViewDesignerActions.initViewDesigner, ViewDesignerActions.destroyViewDesigner, getInitialState),\n\n  on(ViewComponentActions.setValidationIssues, (state, { guid, issues }) => {\n    if (issues.length) {\n      return {\n        ...state,\n        issues: {\n          ...state.issues,\n          [guid]: issues\n        }\n      };\n    } else {\n      let newState = state;\n\n      if (has(newState.issues, guid)) {\n        newState = {\n          ...state,\n          issues: omit(state.issues, [guid])\n        };\n      }\n\n      return newState;\n    }\n  }),\n\n  on(ViewComponentActions.setExpressionValidationIssues, (state, { issues }) => {\n    return isEmpty(issues)\n      ? state\n      : {\n          ...state,\n          expressionIssues: {\n            ...omit(state.expressionIssues, Object.keys(issues)),\n            ...omitBy(issues, isEmpty)\n          }\n        };\n  }),\n\n  on(ViewComponentActions.componentsRemoved, (state, { guids }) => {\n    let newState = state;\n\n    if (guids.some((guid) => has(state.issues, guid))) {\n      newState = {\n        ...state,\n        issues: omit(state.issues, guids)\n      };\n    }\n\n    if (guids.some((guid) => has(state.expressionIssues, guid))) {\n      newState = {\n        ...state,\n        expressionIssues: omit(state.expressionIssues, guids)\n      };\n    }\n\n    return newState;\n  })\n);\n\nexport function viewDesignerValidationReducer(state, action) {\n  return reducer(state, action);\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdaptAlertModule, AdaptCodeViewerModule, AdaptTabsModule } from '@bmc-ux/adapt-angular';\nimport {\n  FormControlsModule,\n  RxDesignerHeaderModule,\n  RxFormBuilderModule,\n  RxInspectorModule,\n  RxPermissionEditorModule,\n  RxRevertCustomizationModule\n} from '@helix/platform/shared/components';\nimport { RxBladeModule, RxJsonViewerModule, RxValidationIssuesModule } from '@helix/platform/ui-kit';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { RxViewDesignerComponent } from './component/view-designer.component';\nimport { DesignerModule } from './components/designer-component/designer.module';\nimport { RxViewDesignerPaletteModule } from './components/palette/view-designer-palette.module';\nimport { ViewDesignerCanvasModule } from './components/view-designer-canvas/view-designer-canvas.module';\n// State\nimport { ViewDesignerComponentEffects } from './+state/view-designer-component.effects';\nimport { ViewDesignerEffects } from './+state/view-designer.effects';\nimport { viewDefinitionReducer } from './+state/view-definition.reducer';\nimport { viewDesignerBreadcrumbsReducer } from './+state/view-designer-breadcrumbs.reducer';\nimport { viewDesignerModelReducer } from './+state/view-designer-model.reducer';\nimport { viewDesignerUiReducer } from './+state/view-designer-ui.reducer';\nimport { viewDesignerValidationReducer } from './+state/view-designer-validation.reducer';\n\nimport { ViewActionDesignModule } from '@helix/platform/view/api';\nimport { RuntimeViewParamsModalModule } from './components/runtime-view-params-modal/runtime-view-params-modal.module';\nimport { RxViewCustomizationOptionsModule } from './form-controls/view-customization-options-widget/view-customization-options.module';\nimport { RxViewRevertCustomizationModule } from './form-controls/view-revert-customization/view-revert-customization.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AdaptCodeViewerModule,\n    AdaptTabsModule.forRoot(),\n    RxBladeModule,\n    RxFormBuilderModule,\n    RxValidationIssuesModule,\n    RxJsonViewerModule,\n    RxViewDesignerPaletteModule,\n    ViewDesignerCanvasModule,\n    DesignerModule,\n    FormControlsModule,\n    RxPermissionEditorModule,\n    RxRevertCustomizationModule,\n    ViewActionDesignModule,\n    RuntimeViewParamsModalModule,\n    RxDesignerHeaderModule,\n    AdaptAlertModule,\n    RxInspectorModule,\n    RxViewCustomizationOptionsModule,\n    RxViewRevertCustomizationModule,\n    TranslateModule,\n\n    StoreModule.forFeature('viewDesigner', {\n      model: viewDesignerModelReducer,\n      viewDefinition: viewDefinitionReducer,\n      validation: viewDesignerValidationReducer,\n      ui: viewDesignerUiReducer,\n      breadcrumbs: viewDesignerBreadcrumbsReducer\n    }),\n    EffectsModule.forFeature([ViewDesignerEffects, ViewDesignerComponentEffects])\n  ],\n  declarations: [RxViewDesignerComponent],\n  exports: [RxViewDesignerComponent]\n})\nexport class ViewDesignerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["isObject","RX_AVAILABLE_ON_DEVICES_PROP_NAME","RX_STYLES_PROP_NAME","RxViewLayout","includes","some","uniq","createAction","props","createFeatureSelector","createSelector","get","Injectable","Subject","_map","flow","map","compact","ReplaySubject","isEmpty","omit","has","reject","sortBy","filter","shareReplay","switchMap","take","of","merge","withLatestFrom","distinctUntilChanged","combineLatest","ofType","ViewDesignerActions.viewDefinitionLoadError","ViewDesignerActions.viewDefinitionSaveSuccess","ViewDesignerActions.initViewDesigner","ViewDesignerActions.viewModelsInitialized","bufferToggle","takeUntil","ViewDesignerActions.destroyViewDesigner","ViewComponentsActions.selectComponent","ViewComponentsActions.insertComponent","isFinite","ViewDesignerActions.selectInspectorTab","ViewDesignerActions.generateViewDefinition","ViewComponentsActions.updateComponentModel","EMPTY","ViewDesignerActions.saveViewDefinition","ViewDesignerActions.updateViewModel","ViewDesignerActions.setViewModel","switchMapTo","ViewDesignerActions.runPreview","ViewDesignerActions.clearCanvas","ViewComponentsActions.setValidationIssues","ViewComponentsActions.setExpressionValidationIssues","ViewComponentsActions.removeComponents","flatten","_filter","ViewComponentsActions.setChildComponents","find","isEqual","RX_EXPRESSION_FUNCTIONS","RxExpressionHelperService","ExpressionOperatorRowsByGroup","ExpressionOperatorGroup","RxExpressionConfigurator","RxDefaultExpressionEvaluatorService","RxViewComponentRegistryService","isFunction","Component","Input","EventEmitter","Output","CommonModule","RxRevertCustomizationModule","NgModule","ExpressionParserToken","concatMapTo","RxViewComponentType","skip","first","ViewComponentActions.initializeComponentModels","RX_VIEW_DEFINITION","ViewComponentActions.initializeDataComponentModels","SelectFormControlComponent","RX_MODAL","Tooltip","TextFormControlComponent","TextareaFormControlComponent","RxDefinitionPickerComponent","RxDefinitionPickerType","TagsFormControlComponent","RxPermissionEditorComponent","ListFormControlComponent","findIndex","RX_RECORD_DEFINITION","InjectionToken","ViewContainerRef","Inject","ViewChild","ChangeDetectionStrategy","throttle","isString","CdkDropList","asapScheduler","SkipSelf","Optional","BwfViewComponentType","ViewDefinitionType","tap","concatMap","RX_APPLICATION","mergeWith","reduce","transform","isArray","isNumber","isBoolean","isPlainObject","isUndefined","FormControl","debounceTime","startWith","groupBy","lowerCase","BehaviorSubject","InjectFlags","ValidationIssueType","pick","RX_VALIDATION_FORM_CONTROL","RX_REVERT_CUSTOMIZATION","RX_EXPRESSION_EDITOR","toPath","set","cloneDeep","ElementRef","DragDropModule","ReactiveFormsModule","AdaptAccordionModule","AdaptTextFieldModule","AdaptRxSearchModule","values","DismissReasons","RxModalClass","FormsModule","AdaptButtonModule","AdaptModalModule","AdaptRxTextfieldModule","RxViewActionRegistryService","RxNamedListDefinitionCacheService","RxRecordDefinitionCacheService","chain","ExpressionFormControlComponent","TreeWrap","toNumber","pull","moveItemInArray","AdaptAccordionTabComponent","ViewChildren","AdaptEmptyStateModule","ExpressionEditorModule","RxFormBuilderModule","AdaptIconModule","AdaptPopoverModule","TranslateModule","AdaptTreeModule","OpenViewActionModalSize","noop","without","ValueAccessor","NG_VALUE_ACCESSOR","RxPermissionEditorModule","CustomizationOptionsModule","InspectorWidgetBase","RxDevice","RX_HIDDEN_PROP_NAME","OptionalExpressionInspectorControlComponent","RX_DISABLED_PROP_NAME","Actions","ViewComponentsActions.setBreadcrumbs","skipWhile","castArray","ViewComponentsActions.addNewComponents","ViewComponentsActions.setComponentLayout","ViewComponentsActions.componentsRemoved","mapTo","_merge","every","publishReplay","refCount","ViewComponentActions.componentsRemoved","ViewComponentsActions.moveComponent","mergeMap","ViewComponentsActions.initializeComponentModels","ViewComponentsActions.initializeDataComponentModels","last","ViewComponentActions.setChildComponents","difference","ViewComponentsActions.setComponentData","forEach","Effect","ViewDesignerActions.loadFriendlyBundleName","ViewDesignerActions.loadViewDefinition","ViewDesignerActions.friendlyBundleNameLoadSuccess","throwError","catchError","ViewDesignerActions.friendlyBundleNameLoadError","ViewDesignerActions.viewDefinitionLoadSuccess","ViewDesignerActions.setGeneratedViewDefinition","ViewDesignerActions.viewDefinitionSaveError","ViewComponentPropertyType","ViewDesignerActions.viewModelsUpdatedAfterSave","getInitialState","reducer","createReducer","on","ViewComponentActions.moveComponent","ViewComponentActions.setComponentLayout","ViewComponentActions.setComponentData","ViewComponentActions.updateComponentModel","ViewComponentActions.selectComponent","ViewComponentActions.setValidationIssues","ViewComponentActions.setExpressionValidationIssues","omitBy","AdaptCodeViewerModule","RxBladeModule","RxValidationIssuesModule","RxJsonViewerModule","FormControlsModule","ViewActionDesignModule","RxDesignerHeaderModule","AdaptAlertModule","RxInspectorModule","AdaptTabsModule","StoreModule","EffectsModule"],"mappings":"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"}