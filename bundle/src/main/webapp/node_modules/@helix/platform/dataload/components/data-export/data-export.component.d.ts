import { OnInit } from '@angular/core';
import { Observable } from 'rxjs';
import { IRecordGridConfig, RecordGridComponent } from '@helix/platform/view/components';
import { IRowDataItem } from '@helix/platform/view/api';
import { RxJsonParserService } from '@helix/platform/utils';
import { RxRecordInstanceService } from '@helix/platform/record/api';
import { AdaptModalService } from '@bmc-ux/adapt-angular';
import { RxModalService } from '@helix/platform/ui-kit';
import { TranslateService } from '@ngx-translate/core';
import { DataExportService } from './data-export.service';
import { RxDefinitionNameService, RxNotificationService } from '@helix/platform/shared/api';
import * as i0 from "@angular/core";
export declare class DataExportComponent implements OnInit {
    private dataExportService;
    private rxModalService;
    private translateService;
    private rxDefinitionNameService;
    private adaptModalService;
    private rxJsonParserService;
    private rxNotificationService;
    private rxRecordInstanceService;
    hostClass: string;
    gridConfig$: Observable<IRecordGridConfig>;
    grid: RecordGridComponent;
    private recordNamesCellTemplate;
    private statusInfoCellTemplate;
    constructor(dataExportService: DataExportService, rxModalService: RxModalService, translateService: TranslateService, rxDefinitionNameService: RxDefinitionNameService, adaptModalService: AdaptModalService, rxJsonParserService: RxJsonParserService, rxNotificationService: RxNotificationService, rxRecordInstanceService: RxRecordInstanceService);
    ngOnInit(): void;
    private startDataExportProcess;
    private startDataExport;
    getRecordNames(selectedRow: IRowDataItem): string;
    private deleteExportRecords;
    private archiveExportRecords;
    newExport(): void;
    showStatusInfo(selectedRow: IRowDataItem): void;
    private getColumns;
    static ɵfac: i0.ɵɵFactoryDeclaration<DataExportComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DataExportComponent, "dl-data-export", never, {}, {}, never, never>;
}
