import { Injector, OnDestroy } from '@angular/core';
import { RxViewComponentRegistryService, RxViewDefinitionCacheService, RxViewDefinitionParserService } from '@helix/platform/view/api';
import { RxGuidService, RxStringService } from '@helix/platform/utils';
import { RxModalService } from '@helix/platform/ui-kit';
import { RxBundleCacheService, RxDefinitionNameService, RxOverlayService } from '@helix/platform/shared/api';
import { ViewDesignerFacade } from '../+state/view-designer.facade';
import { ViewDesignerDispatcher } from '../+state/view-designer-dispatcher.service';
import { RxViewExpressionValidatorService } from '../validation/view-expression-validator.service';
import * as i0 from "@angular/core";
export declare class RxViewModel implements OnDestroy {
    private injector;
    private viewDesignerFacade;
    private rxStringService;
    private rxOverlayService;
    private rxViewComponentRegistryService;
    private rxBundleCacheService;
    private rxModalService;
    private rxViewDefinitionCacheService;
    private rxViewDefinitionParserService;
    private rxGuidService;
    private viewDesignerDispatcher;
    private rxDefinitionNameService;
    private rxViewExpressionValidatorService;
    readonly expressionConfigurator: any;
    private destroyed$;
    private allViewDefinitionNamesByBundleId$;
    private targetExtensionContainerOptions$;
    private targetViewDefinition$;
    constructor(injector: Injector, viewDesignerFacade: ViewDesignerFacade, rxStringService: RxStringService, rxOverlayService: RxOverlayService, rxViewComponentRegistryService: RxViewComponentRegistryService, rxBundleCacheService: RxBundleCacheService, rxModalService: RxModalService, rxViewDefinitionCacheService: RxViewDefinitionCacheService, rxViewDefinitionParserService: RxViewDefinitionParserService, rxGuidService: RxGuidService, viewDesignerDispatcher: ViewDesignerDispatcher, rxDefinitionNameService: RxDefinitionNameService, rxViewExpressionValidatorService: RxViewExpressionValidatorService);
    private init;
    ngOnDestroy(): void;
    private getTargetExtensionContainerOptions;
    private onTargetExtensionContainerOptionsChange;
    private onPageComponentChange;
    private getInspector;
    private validateDisplayName;
    private validateInputParams;
    private validateOutputParamExpressions;
    private validateExtensionContainer;
    private getViewCommonDataDictionary;
    private isTargetRecordDefinitionChanged;
    private getTargetRecordDefinitionName;
    static ɵfac: i0.ɵɵFactoryDeclaration<RxViewModel, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<RxViewModel>;
}
