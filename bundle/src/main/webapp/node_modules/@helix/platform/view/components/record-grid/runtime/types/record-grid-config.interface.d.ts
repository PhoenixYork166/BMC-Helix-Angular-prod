import { Observable } from 'rxjs';
import { ToolbarConfig } from '@bmc-ux/adapt-table';
import { IDataPageResult, RxEvaluatedExpression } from '@helix/platform/shared/api';
import { IRecordDefinition } from '@helix/platform/record/api';
import { IRecordGridFilterData, IRowDataItem } from '@helix/platform/view/api';
import { IRecordGridColumn } from './record-grid-column.types';
import { IRxRecordGridFilter } from '../../common/types/record-grid-filter.types';
import { RowSelectionMode } from './row-selection-mode.enum';
import { IRecordGridActionButton } from './record-grid-action-button.interface';
import { IRecordGridPredefinedFilterPreset } from './record-grid-predefined-filter-preset.interface';
import { IRecordGridDataPageParams } from './record-grid-data-page-params.interface';
import { IViewPresetSelectorApi } from '../../../view-preset-selector/runtime/view-preset-selector-api.interface';
import { IGridViewColumnProperties, IGridViewPresetProperties } from '../../common/types/record-grid.types';
export interface IRecordGridConfig {
    actionButtons?: IRecordGridActionButton[];
    rowActionButtons?: IRecordGridActionButton[];
    lastActionRow?: IRowDataItem;
    associatedRecordId?: RxEvaluatedExpression<string>;
    associatedRecordNodeSide?: string;
    associationDefinitionName?: string;
    associatedRoleName?: RxEvaluatedExpression<string>;
    bordered?: RxEvaluatedExpression<boolean>;
    cardLayoutWidth?: string | number;
    columns?: IRecordGridColumn[];
    defaultFilterPreset?: string | IRecordGridFilterData;
    emptyStateLabelText?: string;
    emptyStateWithFilterLabelText?: string;
    enableColumnSelection?: boolean;
    enableFiltering?: RxEvaluatedExpression<boolean>;
    expandable?: boolean;
    requiredFilters?: RxEvaluatedExpression<number>;
    getDataForHiddenColumns?: RxEvaluatedExpression<boolean>;
    enableFilterPresets?: RxEvaluatedExpression<boolean>;
    enableRowSelection?: RowSelectionMode;
    filterExpression?: RxEvaluatedExpression<string>;
    filters?: string;
    filterTagsLimit?: number;
    getData?: (queryParams: IRecordGridDataPageParams) => Observable<IDataPageResult>;
    getRecordDefinition?: () => Observable<IRecordDefinition>;
    guid?: string;
    recordDefinitionName?: string;
    recordGridFilters?: IRxRecordGridFilter[];
    recordIdField?: string;
    searchFieldPlaceholderText?: string;
    showDataForAllLocales?: RxEvaluatedExpression<boolean>;
    striped?: RxEvaluatedExpression<boolean>;
    styles?: string;
    predefinedFilterPresets?: IRecordGridPredefinedFilterPreset[];
    useExternalFiltering?: boolean;
    expandGroups?: boolean;
    toolbarConfig?: ToolbarConfig;
    viewPresetSelector?: RxEvaluatedExpression<IViewPresetSelectorApi>;
    viewPresets?: IGridViewPresetConfigData[];
    virtualScroll?: boolean;
}
export interface IGridViewPresetConfigData extends IGridViewPresetProperties {
    columnViewPresets: IGridViewColumnProperties[];
    recordGridFilters: IRxRecordGridFilter[];
}
