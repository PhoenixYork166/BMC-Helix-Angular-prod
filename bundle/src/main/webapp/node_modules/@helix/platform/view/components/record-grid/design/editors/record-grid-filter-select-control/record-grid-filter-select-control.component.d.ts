import { Injector, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { ValueAccessor } from '@helix/platform/shared/components';
import { IFormControlComponent, RxDefinitionNameService, RxGlobalCacheService } from '@helix/platform/shared/api';
import { IRecordGridFilterModel, IRecordGridFilterSelectAdvancedFiltering, IRecordGridFilterSelectControlOptions } from './record-grid-filter-select-control.types';
import { RxModalService } from '@helix/platform/ui-kit';
import { AdvancedFilterOption, AdvancedFilterTag, SelectedAdvancedFilter } from '@bmc-ux/adapt-angular';
import { Observable } from 'rxjs';
import { IRecordDefinition, RxRecordDefinitionCacheService, RxRecordDefinitionService } from '@helix/platform/record/api';
import { RxRecordGridUtilsService } from '../../../common/services/record-grid-utils.service';
import { RxRecordGridFilterConfigService } from '../../../runtime/services/record-grid-filter-config.service';
import { IAssociationDescriptor } from '@helix/platform/association/api';
import { RxRecordGridFilterService } from '../../../runtime/services/record-grid-filter.service';
import { RxGuidService } from '@helix/platform/utils';
import { RxRecordGridAdvancedFilteringService } from '../../../common/services/record-grid-advanced-filtering.service';
import { IRemoveFilterTagEvent } from '../../../common/components/filter-tags/filter-tags.types';
import { RxAdvancedFilteringFieldsProviderComponent } from '../../../common/components/advanced-filtering-fields-provider/advanced-filtering-fields-provider.component';
import { IRecordGridColumnNamedFilterOption } from '../../../common/types/record-grid.types';
import { RxRecordGridFilterHelperService } from '../../../common/services/record-grid-filter-helper.service';
import * as i0 from "@angular/core";
export declare class RecordGridFilterSelectControlComponent extends ValueAccessor<IRecordGridFilterModel> implements IFormControlComponent, OnInit, OnChanges, OnDestroy {
    protected injector: Injector;
    private rxModalService;
    private rxRecordGridUtilsService;
    private rxRecordGridFilterConfigService;
    private rxRecordDefinitionCacheService;
    private rxRecordGridFilterService;
    private rxRecordGridFilterHelperService;
    private rxRecordDefinitionService;
    private rxGuidService;
    private rxRecordGridAdvancedFilteringService;
    private rxGlobalCacheService;
    private rxDefinitionNameService;
    options: IRecordGridFilterSelectControlOptions;
    groupFilterValue: string;
    groupFilterItems: {
        name: string;
        value: string;
    }[];
    fieldsProvider: RxAdvancedFilteringFieldsProviderComponent;
    advancedFilterData: IRecordGridFilterSelectAdvancedFiltering;
    private subscription;
    private filtersModel;
    constructor(injector: Injector, rxModalService: RxModalService, rxRecordGridUtilsService: RxRecordGridUtilsService, rxRecordGridFilterConfigService: RxRecordGridFilterConfigService, rxRecordDefinitionCacheService: RxRecordDefinitionCacheService, rxRecordGridFilterService: RxRecordGridFilterService, rxRecordGridFilterHelperService: RxRecordGridFilterHelperService, rxRecordDefinitionService: RxRecordDefinitionService, rxGuidService: RxGuidService, rxRecordGridAdvancedFilteringService: RxRecordGridAdvancedFilteringService, rxGlobalCacheService: RxGlobalCacheService, rxDefinitionNameService: RxDefinitionNameService);
    getGroupFilterName(model: string): string;
    onGroupFilterValueModelChange(model: string): void;
    ngOnInit(): void;
    initEmptyValue(): void;
    ngOnChanges(changes: SimpleChanges): void;
    initFilterOptions(): void;
    onRemoveFilterTag(event: IRemoveFilterTagEvent): void;
    getFilterOptions(recordDefinition: IRecordDefinition, associationDescriptor: IAssociationDescriptor, prefix?: string): AdvancedFilterOption[];
    ngOnDestroy(): void;
    onAdvancedFiltersChange(selectedFilters: SelectedAdvancedFilter[]): void;
    onWriteValue(value: IRecordGridFilterModel): void;
    initSelectedAdvancedFilters(value: IRecordGridFilterModel): void;
    getNamedFilterOptions(filterOptionConfig: AdvancedFilterOption): IRecordGridColumnNamedFilterOption[];
    getTags(filtersExpressionsTags: AdvancedFilterTag[]): Observable<AdvancedFilterTag[]>;
    static ɵfac: i0.ɵɵFactoryDeclaration<RecordGridFilterSelectControlComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RecordGridFilterSelectControlComponent, "rx-record-grid-filter-select-control", never, { "options": "options"; }, {}, never, never>;
}
