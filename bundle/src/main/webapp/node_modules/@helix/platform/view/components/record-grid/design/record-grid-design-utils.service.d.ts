import { IAssociationDefinition } from '@helix/platform/association/api';
import { IRecordDefinition } from '@helix/platform/record/api';
import { RxDefinitionNameService, RxFeatureService } from '@helix/platform/shared/api';
import { RxModalService } from '@helix/platform/ui-kit';
import { RxGuidService, RxJsonParserService } from '@helix/platform/utils';
import { IViewComponentDesignCommonDataDictionaryBranch, IViewComponentDesignData, IViewComponentDesignSetPayload, IViewDesignerInspectorConfig, ViewDesignerFacade } from '@helix/platform/view/designer';
import { Observable } from 'rxjs';
import { IActionButtonProperties } from '../../action-button/action-button.types';
import { RxRecordGridUtilsService } from '../common/services/record-grid-utils.service';
import { RxRecordGridConfigUtilsService } from '../runtime/services/record-grid-config-utils.service';
import { IRxRecordGridFilter } from '../common/types/record-grid-filter.types';
import { IRecordGridPredefinedFilterPreset } from '../runtime/types/record-grid-predefined-filter-preset.interface';
import { IRecordGridColumnDesignModel, IRecordGridDesignColumnData, IRecordGridDesignInspectorColumnConfig } from './editors/record-grid-column-editor-control/record-grid-column-editor.types';
import { IRecordGridFilterPresetDescriptorModel } from './editors/record-grid-filter-preset-editor-control/record-grid-filter-preset-editor.types';
import { IRecordGridFilterDescriptorModel } from './editors/record-grid-filter-select-control/record-grid-filter-select-control.types';
import { IRowAction } from './editors/record-grid-row-action-editor-control/record-grid-row-action-editor-widget.types';
import { IRecordGridSortEditorModel } from './editors/record-grid-sort-editor-control/record-grid-sort-editor-control.types';
import { IRecordGridDesignProperties, IRecordGridProperties } from './record-grid-design.types';
import { IPresetItem } from './editors/record-grid-view-presets-widget/record-grid-view-presets-widget.types';
import { RxRecordGridFilterHelperService } from '../common/services/record-grid-filter-helper.service';
import { TranslateService } from '@ngx-translate/core';
import { IGridViewColumnProperties, IGridViewPresetProperties } from '../common/types/record-grid.types';
import * as i0 from "@angular/core";
export declare class RxRecordGridDesignUtilsService {
    private rxGuidService;
    private rxRecordGridConfigUtilsService;
    private rxDefinitionNameService;
    private rxFeatureService;
    private rxModalService;
    private rxRecordGridUtilsService;
    private rxRecordGridFilterHelperService;
    private translateService;
    private viewDesignerFacade;
    private rxJsonParserService;
    constructor(rxGuidService: RxGuidService, rxRecordGridConfigUtilsService: RxRecordGridConfigUtilsService, rxDefinitionNameService: RxDefinitionNameService, rxFeatureService: RxFeatureService, rxModalService: RxModalService, rxRecordGridUtilsService: RxRecordGridUtilsService, rxRecordGridFilterHelperService: RxRecordGridFilterHelperService, translateService: TranslateService, viewDesignerFacade: ViewDesignerFacade, rxJsonParserService: RxJsonParserService);
    private getColumnActionComponentPayloads;
    private getNamedFilterOptionPayloads;
    getGridFilterComponentPayloads(gridFilters: IRxRecordGridFilter[]): IViewComponentDesignSetPayload<IRecordGridFilterDescriptorModel>[];
    getColumnComponentPayloads(columns: IRecordGridDesignInspectorColumnConfig[], initialSortColumn: IRecordGridSortEditorModel): IViewComponentDesignSetPayload<IRecordGridColumnDesignModel>[];
    getGridFilterPresetComponentPayloads(filterPresets: IRecordGridPredefinedFilterPreset[], columns: IRecordGridDesignInspectorColumnConfig[]): IViewComponentDesignSetPayload<IRecordGridFilterPresetDescriptorModel>[];
    getFilterPresetDescriptorsFromChildData(definitions: IViewComponentDesignData[]): IRecordGridPredefinedFilterPreset[];
    private getActionsFromComponent;
    private getNamedFilterOptionsFromComponent;
    getDefaultColumns(recordDefinition: IRecordDefinition): IRecordGridDesignInspectorColumnConfig[];
    getInitialSortColumnModel(columns: IRecordGridDesignInspectorColumnConfig[]): IRecordGridSortEditorModel;
    getInspectorColumnsFromDesignData(columnsDesignModel: IViewComponentDesignData<IRecordGridDesignColumnData>[]): IRecordGridDesignInspectorColumnConfig[];
    getComponentProperties(componentDesignProperties: IRecordGridDesignProperties): IRecordGridProperties;
    private getDefaultFilterPreset;
    getComponentDesignProperties(componentProperties: IRecordGridProperties, initialComponentProperties: IRecordGridDesignProperties, columnsDesignModel: IViewComponentDesignData<IRecordGridDesignColumnData>[], basicRecordGridFilters: IRxRecordGridFilter[], filterPresets: IRecordGridPredefinedFilterPreset[]): IRecordGridDesignProperties;
    getActionButtonDescriptorsFromChildData(definitions: IViewComponentDesignData[]): IViewComponentDesignData<IActionButtonProperties>[];
    getGridViewPresetsFromChildData(definitions: IViewComponentDesignData[]): IViewComponentDesignData<IGridViewPresetProperties>[];
    getBasicRecordGridFiltersFromChildData(definitions: IViewComponentDesignData[]): IRxRecordGridFilter[];
    getRowActionButtonPayloads(rowActions: IRowAction[]): IViewComponentDesignSetPayload<IActionButtonProperties>[];
    getInspector(model: IRecordGridDesignProperties, recordDefinition: IRecordDefinition, recordAssociationDefinitions: IAssociationDefinition[]): IViewDesignerInspectorConfig;
    getColumnDataDictionaryBranch(recordGridGuid: string, componentDescriptorName: string, componentName$: Observable<string>, columnComponents$: Observable<IViewComponentDesignData<IRecordGridDesignColumnData>[]>, recordDefinition$: Observable<IRecordDefinition>, associationDefinitionDisplayName$: Observable<string>): Observable<IViewComponentDesignCommonDataDictionaryBranch>;
    private getColumnsDataDictionaryBuilder;
    private getColumnDataDictionaryBranchBuilder;
    getComponentName(componentDescriptorName: string, recordDefinitionDisplayName?: string, associationDefinitionDisplayName?: string, name?: string): string;
    getGridViewPresetPayload(viewPresetGuid: string, columns: IRecordGridDesignInspectorColumnConfig[]): IViewComponentDesignSetPayload;
    getColumnPresetPayload(column: IRecordGridDesignInspectorColumnConfig): IViewComponentDesignSetPayload<IGridViewColumnProperties>;
    getPresetsList(guid: string): Observable<IPresetItem[]>;
    static ɵfac: i0.ɵɵFactoryDeclaration<RxRecordGridDesignUtilsService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<RxRecordGridDesignUtilsService>;
}
