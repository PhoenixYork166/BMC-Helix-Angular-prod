import { Injector, OnDestroy, OnInit } from '@angular/core';
import { ActiveModalRef, RxSelectOption } from '@bmc-ux/adapt-angular';
import { ICellDisplayPropertiesEditorConfig } from '../../../../../common/types/cell-display-properties.types';
import { IExpressionFormControlOptions, IIconPickerFormControlOptions, RxExpressionEditorService } from '@helix/platform/shared/components';
import { IPlainObject } from '@helix/platform/shared/api';
import { AbstractControl, FormArray, FormBuilder } from '@angular/forms';
import { CdkDragDrop } from '@angular/cdk/drag-drop/';
import { RxModalClass } from '@helix/platform/ui-kit';
import { TranslateService } from '@ngx-translate/core';
import * as i0 from "@angular/core";
export declare class RecordGridCellDisplayPropertiesEditorComponent extends RxModalClass implements OnInit, OnDestroy {
    activeModalRef: ActiveModalRef;
    private rxExpressionEditorService;
    private formBuilder;
    private translateService;
    protected injector: Injector;
    private accordionTabEls;
    private destroyed$;
    private expressionConfigurator;
    config: ICellDisplayPropertiesEditorConfig;
    queryExpressionOptions: IExpressionFormControlOptions;
    propsFormArray: FormArray;
    iconPositions: RxSelectOption[];
    textColors: RxSelectOption[];
    fontSizes: RxSelectOption[];
    colorsList: IPlainObject;
    backgroundColors: RxSelectOption[];
    badgeColors: RxSelectOption[];
    iconPickerOptions: IIconPickerFormControlOptions;
    constructor(activeModalRef: ActiveModalRef, rxExpressionEditorService: RxExpressionEditorService, formBuilder: FormBuilder, translateService: TranslateService, injector: Injector);
    ngOnInit(): void;
    ngOnDestroy(): void;
    addCellProperties(): void;
    removeCellProperties(index: number): void;
    optionFormatter(selectOption: RxSelectOption): string;
    private getFormGroup;
    private getSelectValue;
    openExpressionEditor(control: AbstractControl): void;
    moveCellProperties(fromIndex: number, toIndex: number): void;
    onSelectedCellPropertyDrop(event: CdkDragDrop<any[], any>): void;
    toggleProp(control: AbstractControl): void;
    toggleOpen(expandAll: boolean): void;
    resetIconAndTextProps(props: AbstractControl): void;
    onSave(): void;
    cancel(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RecordGridCellDisplayPropertiesEditorComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RecordGridCellDisplayPropertiesEditorComponent, "rx-cell-display-properties-editor", never, {}, {}, never, never>;
}
