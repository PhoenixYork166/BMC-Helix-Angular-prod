{"version":3,"file":"helix-platform-view-designer.js","sources":["../../../../libs/platform/view/designer/core/layout-helpers.ts","../../../../libs/platform/view/designer/core/view-data-dictionary-builder.service.ts","../../../../libs/platform/view/designer/core/view-data-dictionary-store.service.ts","../../../../libs/platform/view/designer/core/view-designer-inspector.service.ts","../../../../libs/platform/view/designer/+state/view-component.actions.ts","../../../../libs/platform/view/designer/+state/view-designer-dispatcher.service.ts","../../../../libs/platform/view/designer/+state/view-designer.actions.ts","../../../../libs/platform/view/designer/+state/view-designer.selectors.ts","../../../../libs/platform/view/designer/+state/view-designer.facade.ts","../../../../libs/platform/view/designer/core/view-designer-models.service.ts","../../../../libs/platform/view/designer/core/view-definition-generator.service.ts","../../../../libs/platform/view/designer/core/validation-helpers.ts","../../../../libs/platform/view/designer/validation/view-expression-validator.service.ts","../../../../libs/platform/view/designer/data-dictionary/view-data-dictionary.service.ts","../../../../libs/platform/view/designer/expression-configurator/view-expression-configurator.class.ts","../../../../libs/platform/view/designer/expression-configurator/view-component-expression-configurator.class.ts","../../../../libs/platform/view/designer/form-controls/view-customization-options-widget/view-customization-options.component.ts","../../../../libs/platform/view/designer/form-controls/view-customization-options-widget/view-customization-options.component.html","../../../../libs/platform/view/designer/form-controls/view-revert-customization/view-revert-customization.component.ts","../../../../libs/platform/view/designer/form-controls/view-revert-customization/view-revert-customization.component.html","../../../../libs/platform/view/designer/form-controls/view-revert-customization/view-revert-customization.module.ts","../../../../libs/platform/view/designer/model/view-model.service.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/tokens/view-designer-canvas-item-api.token.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-item/canvas-item-api.service.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/drop-component-data.class.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/view-designer-canvas.service.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-item/canvas-item.component.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-item/canvas-item.component.html","../../../../libs/platform/view/designer/components/view-designer-canvas/view-designer-canvas.component.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/view-designer-canvas.component.html","../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-outlet/canvas-outlet-helper.service.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-item-column/canvas-item-column.component.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-item-column/canvas-item-column.component.html","../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-item-container/canvas-item-container.component.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-item-container/canvas-item-container.component.html","../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-outlet/canvas-outlet.component.ts","../../../../libs/platform/view/designer/components/view-designer-canvas/component/canvas-outlet/canvas-outlet.component.html","../../../../libs/platform/view/designer/components/designer-component/designer.component.ts","../../../../libs/platform/view/designer/components/designer-component/designer.component.html","../../../../libs/platform/view/designer/component/view-designer-helper.service.ts","../../../../libs/platform/view/designer/view-designer.constant.ts","../../../../libs/platform/view/designer/components/palette/view-designer-palette.component.ts","../../../../libs/platform/view/designer/components/palette/view-designer-palette.component.html","../../../../libs/platform/view/designer/component/view-designer.component.ts","../../../../libs/platform/view/designer/component/view-designer.component.html","../../../../libs/platform/view/designer/components/view-designer-canvas/view-designer-canvas.module.ts","../../../../libs/platform/view/designer/components/designer-component/designer.module.ts","../../../../libs/platform/view/designer/components/palette/view-designer-palette.module.ts","../../../../libs/platform/view/designer/components/runtime-view-params-modal/runtime-view-params-modal.component.ts","../../../../libs/platform/view/designer/components/runtime-view-params-modal/runtime-view-params-modal.component.html","../../../../libs/platform/view/designer/components/runtime-view-params-modal/runtime-view-params-modal.module.ts","../../../../libs/platform/view/designer/expression-configurator/view-action-expression-configurator.class.ts","../../../../libs/platform/view/designer/expression-configurator/named-list-filter-expression-configurator.class.ts","../../../../libs/platform/view/designer/action-sandbox/action-sandbox.class.ts","../../../../libs/platform/view/designer/model/view-designer-action-model.class.ts","../../../../libs/platform/view/designer/model/view-designer-default-action-model.class.ts","../../../../libs/platform/view/designer/form-controls/action-list-control/action-list-model-manager.service.ts","../../../../libs/platform/view/designer/form-controls/action-list-control/action-list-editor-dialog/action-list-editor-dialog.component.ts","../../../../libs/platform/view/designer/form-controls/action-list-control/action-list-editor-dialog/action-list-editor-dialog.component.html","../../../../libs/platform/view/designer/form-controls/action-list-control/action-list-editor-dialog/action-list-editor-dialog.module.ts","../../../../libs/platform/view/designer/form-controls/action-list-control/action-list-control.component.ts","../../../../libs/platform/view/designer/form-controls/action-list-control/action-list-control.component.html","../../../../libs/platform/view/designer/form-controls/action-list-control/action-list-control.module.ts","../../../../libs/platform/view/designer/form-controls/component-permission-editor-widget/component-permission-editor-widget.component.ts","../../../../libs/platform/view/designer/form-controls/component-permission-editor-widget/component-permission-editor-widget.component.html","../../../../libs/platform/view/designer/form-controls/component-permission-editor-widget/component-permission-editor-widget.module.ts","../../../../libs/platform/view/designer/form-controls/view-customization-options-widget/view-customization-options.module.ts","../../../../libs/platform/view/designer/form-controls/action-list-widget/action-list-widget.component.ts","../../../../libs/platform/view/designer/form-controls/action-list-widget/action-list-widget.component.html","../../../../libs/platform/view/designer/form-controls/action-list-widget/action-list-widget.module.ts","../../../../libs/platform/view/designer/model/view-designer-component-model.class.ts","../../../../libs/platform/view/designer/public-interfaces/standard-props-design.types.ts","../../../../libs/platform/view/designer/validation/view-action-validator.service.ts","../../../../libs/platform/view/designer/component-sandbox/component-sandbox.class.ts","../../../../libs/platform/view/designer/validation/view-expression-validator-registry.service.ts","../../../../libs/platform/view/designer/+state/view-designer-state-helper.service.ts","../../../../libs/platform/view/designer/+state/view-designer-component.effects.ts","../../../../libs/platform/view/designer/+state/view-designer.effects.ts","../../../../libs/platform/view/designer/+state/view-definition.reducer.ts","../../../../libs/platform/view/designer/+state/view-designer-breadcrumbs.reducer.ts","../../../../libs/platform/view/designer/+state/view-designer-model.reducer.ts","../../../../libs/platform/view/designer/+state/view-designer-ui.reducer.ts","../../../../libs/platform/view/designer/+state/view-designer-validation.reducer.ts","../../../../libs/platform/view/designer/view-designer.module.ts","../../../../libs/platform/view/designer/helix-platform-view-designer.ts"],"sourcesContent":["import { includes, uniq, some } from 'lodash';\nimport { IViewComponentDesignModel } from '../interfaces/view-component-design-model.interface';\nimport { IViewComponentDesignModels } from '../interfaces/view-component-design-models.interface';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport { RxViewLayout } from '@helix/platform/view/api';\n\nexport function findParentComponentModel(\n  guid: string,\n  components: IViewComponentDesignModels\n): IViewComponentDesignModel {\n  const currentComponent = components[guid];\n\n  return components[currentComponent?.parentGuid];\n}\n\nexport function findAllParentComponentGuids(guid: string, components: IViewComponentDesignModels): string[] {\n  const result = [guid];\n  let parentModel = findParentComponentModel(guid, components);\n  let nextGuid = parentModel ? parentModel.guid : null;\n\n  while (nextGuid) {\n    result.unshift(nextGuid);\n    parentModel = findParentComponentModel(nextGuid, components);\n\n    nextGuid = parentModel ? parentModel.guid : null;\n  }\n\n  return result;\n}\n\nexport function findParentComponentByType(\n  guid: string,\n  componentType: string,\n  components: IViewComponentDesignModels\n): IViewComponentDesignModel {\n  let result;\n  let parentModel = findParentComponentModel(guid, components);\n  let nextGuid = parentModel ? parentModel.guid : null;\n\n  while (nextGuid) {\n    if (parentModel.type === componentType) {\n      result = parentModel;\n      nextGuid = null;\n    } else {\n      parentModel = findParentComponentModel(nextGuid, components);\n      nextGuid = parentModel ? parentModel.guid : null;\n    }\n  }\n\n  return result;\n}\n\nexport function isComponentContainsChild(\n  guid: string,\n  componentModel: IViewComponentDesignModel | IViewDesignModel\n): boolean {\n  if (componentModel.layout) {\n    const hasChild = RxViewLayout.hasChild(componentModel.layout, guid);\n\n    if (hasChild) {\n      return true;\n    }\n  }\n\n  if (componentModel.childDataComponentGuids) {\n    return includes(componentModel.childDataComponentGuids, guid);\n  } else {\n    return false;\n  }\n}\n\nexport function addChildComponent(\n  componentModel: IViewComponentDesignModel | IViewDesignModel,\n  guid: string,\n  outletName: string,\n  insertIndex?: number,\n  columnIndex = 0,\n  columnSpan = 0\n): IViewComponentDesignModel | IViewDesignModel {\n  const newComponentModel = { ...componentModel };\n\n  newComponentModel.layout = {\n    outlets: componentModel.layout.outlets.map((outlet) => {\n      if (outlet.name === outletName) {\n        const columns = [...outlet.columns];\n\n        insertIndex = isFinite(insertIndex) ? insertIndex : columns[columnIndex].children.length;\n\n        if (!columns[columnIndex]) {\n          columns[columnIndex] = {\n            children: []\n          };\n\n          if (columnSpan) {\n            columns[columnIndex].span = columnSpan;\n          }\n        }\n\n        // todo handle drop in non-first column\n        columns[columnIndex] = {\n          children: [\n            ...columns[columnIndex].children.slice(0, insertIndex),\n            guid,\n            ...columns[columnIndex].children.slice(insertIndex)\n          ],\n          span: columns[columnIndex].span\n        };\n\n        return {\n          ...outlet,\n          columns\n        };\n      } else {\n        return outlet;\n      }\n    })\n  };\n\n  return newComponentModel;\n}\n\nexport function removeChildComponent(\n  componentGuidToRemove: string,\n  parentComponentModel: IViewComponentDesignModel | IViewDesignModel\n): IViewComponentDesignModel | IViewDesignModel {\n  const newParentComponentModel = { ...parentComponentModel };\n\n  if (some(newParentComponentModel.childDataComponentGuids, (guid) => componentGuidToRemove === guid)) {\n    newParentComponentModel.childDataComponentGuids = newParentComponentModel.childDataComponentGuids.filter(\n      (guid) => guid !== componentGuidToRemove\n    );\n  }\n\n  if (parentComponentModel.layout && RxViewLayout.hasChild(parentComponentModel.layout, componentGuidToRemove)) {\n    newParentComponentModel.layout = RxViewLayout.removeChildFromLayout(\n      parentComponentModel.layout,\n      componentGuidToRemove\n    );\n  }\n\n  return newParentComponentModel;\n}\n\nexport function getChildGuidsFromModel(model: IViewComponentDesignModel | IViewDesignModel): string[] {\n  const guids: string[] = [];\n\n  if (model.childDataComponentGuids) {\n    guids.push(...model.childDataComponentGuids);\n  }\n\n  if (model.layout) {\n    guids.push(...RxViewLayout.getViewLayoutChildGuids(model.layout));\n  }\n\n  return uniq(guids);\n}\n\nexport function getAllChildGuids(\n  parentComponent: IViewComponentDesignModel | IViewDesignModel,\n  componentModelsState: IViewComponentDesignModels\n): string[] {\n  const guids = getChildGuidsFromModel(parentComponent);\n\n  return guids.reduce((result, guid) => {\n    result.push(...getAllChildGuids(componentModelsState[guid], componentModelsState));\n\n    return result;\n  }, guids);\n}\n","import { Injectable } from '@angular/core';\nimport { IDataDictionary, IDataDictionaryBranch } from '@helix/platform/shared/api';\nimport { map, flow, compact, map as _map } from 'lodash';\nimport { IViewComponentDesignCommonDataDictionaryBranch } from '../public-interfaces/view-component-design-common-data-dictionary.interfaces';\nimport {\n  IViewComponentDesignSettablePropertiesDataDictionary,\n  IViewComponentDesignSettablePropertiesDataDictionaryBranch\n} from '../public-interfaces/view-component-design-settable-properties-data-dictionary.interfaces';\nimport { IViewActionOutputDataDictionary } from '@helix/platform/view/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDataDictionaryBuilderService {\n  private componentIcon = 'd-icon-file_o';\n  private componentPropertyIcon = 'd-icon-file_o_gear';\n  private settablePropertiesIcon = 'd-icon-arrow_right_square_input';\n  private actionOutputIcon = 'd-icon-arrow_chart';\n\n  getActionOutputDataDictionaryBranch(\n    actionName: string,\n    dataDictionary: IViewActionOutputDataDictionary\n  ): IDataDictionaryBranch {\n    return {\n      label: actionName,\n      icon: 'd-icon-arrow_chart',\n      children: _map(dataDictionary, (dataDictionaryBranch) =>\n        this.buildDataDictionaryBranch(dataDictionaryBranch, this.actionOutputIcon)\n      )\n    };\n  }\n\n  getComponentCommonDataDictionaryBranch(\n    branch: IViewComponentDesignCommonDataDictionaryBranch\n  ): IDataDictionaryBranch {\n    return {\n      ...branch,\n      icon: this.componentIcon,\n      children: flow(\n        (children) => map(children, (child) => this.buildDataDictionaryBranch(child, this.componentPropertyIcon)),\n        compact\n      )(branch.children)\n    };\n  }\n\n  getSettablePropertiesDataDictionary(branches: IViewComponentDesignSettablePropertiesDataDictionary): IDataDictionary {\n    return map(branches, (branch) => this.buildDataDictionaryBranch(branch, this.settablePropertiesIcon));\n  }\n\n  private buildDataDictionaryBranch(\n    branch: IViewComponentDesignCommonDataDictionaryBranch | IViewComponentDesignSettablePropertiesDataDictionaryBranch,\n    icon\n  ): IDataDictionaryBranch {\n    const node: IDataDictionaryBranch = {\n      ...branch\n    };\n\n    if (branch.expression) {\n      node.icon = icon;\n    }\n\n    if (branch.children) {\n      node.children = flow(\n        (children) => map(children, (child) => this.buildDataDictionaryBranch(child, icon)),\n        compact\n      )(branch.children);\n    }\n\n    return node;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { IDataDictionaryBranch } from '@helix/platform/shared/api';\nimport { flow, has, isEmpty, map, omit, reject, sortBy } from 'lodash';\nimport { ISetSettablePropertiesDataDictionaryItem } from '../+state/view-component.types';\nimport { IViewDesignerActionOutputDataDictionaryState } from '../interfaces/view-designer-action-output-data-dictionary-state.interface';\nimport { IViewDesignerComponentsCommonDataDictionaryState } from '../interfaces/view-designer-components-data-dictionary-state.interface';\nimport { IViewDesignerViewCommonDataDictionaryState } from '../interfaces/view-designer-view-data-dictionary-state.interface';\nimport { IViewDesignerSettablePropertiesDataDictionaryState } from '../interfaces/view-designer-settable-properties-data-dictionary.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDataDictionaryStoreService {\n  private componentsCommon: IViewDesignerComponentsCommonDataDictionaryState = null;\n  private componentsCommonSubject = new ReplaySubject<IViewDesignerComponentsCommonDataDictionaryState>(1);\n  componentsCommon$ = this.componentsCommonSubject.asObservable();\n\n  private viewCommon = null;\n  private viewCommonSubject = new ReplaySubject<IViewDesignerViewCommonDataDictionaryState>(1);\n  viewCommon$ = this.viewCommonSubject.asObservable();\n\n  private actionsOutput: IViewDesignerActionOutputDataDictionaryState[] = [];\n  private actionsOutputSubject = new ReplaySubject<IViewDesignerActionOutputDataDictionaryState[]>(1);\n  actionsOutput$ = this.actionsOutputSubject.asObservable();\n\n  private settableProperties: IViewDesignerSettablePropertiesDataDictionaryState = null;\n  private settablePropertiesSubject = new ReplaySubject<IViewDesignerSettablePropertiesDataDictionaryState>(1);\n  settableProperties$ = this.settablePropertiesSubject.asObservable();\n\n  setCommonDataDictionaryBranch(guid: string, dataDictionaryBranch: IDataDictionaryBranch): void {\n    this.setComponentCommon(\n      isEmpty(dataDictionaryBranch)\n        ? omit(this.componentsCommon, [guid])\n        : { ...this.componentsCommon, [guid]: dataDictionaryBranch }\n    );\n  }\n\n  setViewCommonDataDictionaryBranch(dataDictionaryBranch: IDataDictionaryBranch): void {\n    this.setViewCommon(dataDictionaryBranch);\n  }\n\n  setSettablePropertiesDataDictionary(items: ISetSettablePropertiesDataDictionaryItem[]): void {\n    this.setSettableProperties({\n      ...this.settableProperties,\n      ...items.reduce((result, { guid, componentName, dataDictionary }) => {\n        result[guid] = { componentName, dataDictionary };\n\n        return result;\n      }, {})\n    });\n  }\n\n  removeDataDictionaryForComponents(guids: string[]): void {\n    if (guids.some((guid) => has(this.componentsCommon, guid))) {\n      this.setComponentCommon(omit(this.componentsCommon, guids));\n    }\n\n    if (guids.some((guid) => has(this.settableProperties, guid))) {\n      this.setSettableProperties(omit(this.settableProperties, guids));\n    }\n  }\n\n  setActionOutputDataDictionaryBranch(guid: string, index: number, dataDictionaryBranch: IDataDictionaryBranch): void {\n    this.setActionsOutput(\n      flow(\n        (actions) => [\n          ...reject<IViewDesignerActionOutputDataDictionaryState>(actions, { guid }),\n          { guid, index, dataDictionaryBranch }\n        ],\n        (actions) => sortBy(actions, 'index')\n      )(this.actionsOutput)\n    );\n  }\n\n  updateActionOutputDataDictionaryBranchOrder(actions: { [guid: string]: number }): void {\n    this.setActionsOutput(\n      flow(\n        (actionsOutput) =>\n          map(actionsOutput, (actionOutput) => ({\n            ...actionOutput,\n            index: actions[actionOutput.guid]\n          })),\n        (actionsOutput) => sortBy(actionsOutput, 'index')\n      )(this.actionsOutput)\n    );\n  }\n\n  removeActionOutputDataDictionaryBranch(guid: string): void {\n    this.setActionsOutput(reject(this.actionsOutput, { guid }));\n  }\n\n  removeAllActionOutputDataDictionaryBranches(): void {\n    this.setActionsOutput(null);\n  }\n\n  clear(): void {\n    this.setComponentCommon(null);\n    this.setViewCommon(null);\n    this.setSettableProperties(null);\n    this.setActionsOutput([]);\n  }\n\n  private setComponentCommon(state: IViewDesignerComponentsCommonDataDictionaryState): void {\n    this.componentsCommon = state;\n    this.componentsCommonSubject.next(this.componentsCommon);\n  }\n\n  private setViewCommon(state: IViewDesignerViewCommonDataDictionaryState): void {\n    this.viewCommon = state;\n    this.viewCommonSubject.next(this.viewCommon);\n  }\n\n  private setActionsOutput(state: IViewDesignerActionOutputDataDictionaryState[]): void {\n    this.actionsOutput = state;\n    this.actionsOutputSubject.next(this.actionsOutput);\n  }\n\n  private setSettableProperties(state: IViewDesignerSettablePropertiesDataDictionaryState): void {\n    this.settableProperties = state;\n    this.settablePropertiesSubject.next(this.settableProperties);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IViewDesignerInspectorConfig } from '../public-interfaces/view-designer-inspector.types';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDesignerInspectorService {\n  private onChangeSubject = new Subject<{ guid: string; config: IViewDesignerInspectorConfig }>();\n  private configs: Map<string, IViewDesignerInspectorConfig> = new Map();\n\n  onChange$ = this.onChangeSubject.asObservable();\n\n  clear(): void {\n    this.configs.clear();\n  }\n\n  set(guid: string, config: IViewDesignerInspectorConfig): void {\n    this.configs.set(guid, config);\n    this.onChangeSubject.next({ guid, config });\n  }\n\n  get(guid: string): IViewDesignerInspectorConfig {\n    return this.configs.get(guid);\n  }\n\n  delete(guid: string): void {\n    this.onChangeSubject.next({ guid, config: null });\n    this.configs.delete(guid);\n  }\n}\n","import { createAction, props } from '@ngrx/store';\n\nimport { IDataDictionaryBranch, IPlainObject } from '@helix/platform/shared/api';\nimport { IViewComponentDesignValidationIssue } from '../public-interfaces/view-component-design-validation-issue.interface';\nimport {\n  IAddNewComponentActionPayload,\n  IInitializeComponentModelActionPayload,\n  IInitializeDataComponentModelActionPayload,\n  ISetChildrenActionPayload,\n  ISetComponentDataPayload,\n  ISetSettablePropertiesDataDictionaryItem,\n  IUpdateComponentModelPayload\n} from './view-component.types';\n\nexport const componentsRemoved = createAction(\n  '[View Component] Components Removed',\n  props<{ guids: string[]; selectParent?: boolean }>()\n);\n\nexport const initializeComponentModels = createAction(\n  '[View Component] Initialize Component Models',\n  props<{ payload: IInitializeComponentModelActionPayload[] }>()\n);\n\nexport const initializeDataComponentModels = createAction(\n  '[View Component] Initialize Data Component Models',\n  props<{ payload: IInitializeDataComponentModelActionPayload[] }>()\n);\n\nexport const setValidationIssues = createAction(\n  '[View Component] Set Validation Issues',\n  props<{ guid: string; issues: IViewComponentDesignValidationIssue[] }>()\n);\n\nexport const setExpressionValidationIssues = createAction(\n  '[View Component] Set Expression Validation Issues',\n  props<{\n    issues: {\n      [guid: string]: IViewComponentDesignValidationIssue[];\n    };\n  }>()\n);\n\nexport const setComponentData = createAction(\n  '[View Component] Set Component Properties',\n  props<{ payload: ISetComponentDataPayload[] }>()\n);\n\nexport const setChildComponents = createAction(\n  '[View Component] Set Child Components',\n  props<{ payload: ISetChildrenActionPayload }>()\n);\n\nexport const setBreadcrumbs = createAction(\n  '[View Component] Set Breadcrumbs',\n  props<{ guid: string; label: string }>()\n);\n\nexport const selectComponent = createAction('[View Component] Select Component', props<{ guid: string }>());\n\nexport const setComponentLayout = createAction(\n  '[View Component] Set Component Layout',\n  props<{ guid: string; cols: number[] }>()\n);\n\nexport const moveComponent = createAction(\n  '[View Component] Move Component',\n  props<{\n    guid: any;\n    insertIndex: number;\n    columnIndex: number;\n    outletName: string;\n    parentGuid: string;\n  }>()\n);\n\nexport const insertComponent = createAction(\n  '[View Component] Insert Component',\n  props<{\n    data: {\n      guid?: string;\n      type?: string;\n      initialPropertiesByName?: IPlainObject;\n    };\n    insertIndex: number;\n    columnIndex: number;\n    outletName: string;\n    targetGuid: string;\n  }>()\n);\n\nexport const addNewComponents = createAction(\n  '[View Component] Add New Components',\n  props<{ payload: IAddNewComponentActionPayload[] }>()\n);\n\nexport const updateComponentModel = createAction(\n  '[View Component] Update Component Model',\n  props<{ payload: IUpdateComponentModelPayload[] }>()\n);\n\nexport const removeComponents = createAction(\n  '[View Component] Remove Components',\n  props<{ guids: string[]; selectParent?: boolean }>()\n);\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\n/**\n * Public class for dispatching actions\n * Protects ngrx store$ service from selecting data from the store\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewDesignerDispatcher {\n  constructor(private store$: Store<any>) {}\n\n  dispatch(action: any) {\n    this.store$.dispatch(action);\n  }\n}\n","import { IViewDefinition } from '@helix/platform/view/api';\nimport { createAction, props } from '@ngrx/store';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport { IInitViewDesignerActionPayload } from './view-designer.types';\n\nexport const viewDefinitionSaveSuccess = createAction(\n  '[View Designer] View Definition Save Success',\n  props<{ viewDefinitionName: string }>()\n);\n\nexport const viewDefinitionSaveError = createAction('[View Designer] View Definition Save Error');\n\nexport const viewDefinitionLoadSuccess = createAction(\n  '[View Designer] View Definition Load Success',\n  props<{ viewDefinition: IViewDefinition }>()\n);\n\nexport const viewDefinitionLoadError = createAction('[View Designer] View Definition Load Error');\n\nexport const setGeneratedViewDefinition = createAction(\n  '[View Designer] Set Generated View Definition',\n  props<{ payload: IViewDefinition }>()\n);\n\nexport const loadViewDefinition = createAction(\n  '[View Designer] Load View Definition',\n  props<{\n    viewDefinitionName?: string;\n    layoutTemplate?: number;\n  }>()\n);\n\nexport const friendlyBundleNameLoadSuccess = createAction(\n  '[View Designer] Bundle Friendly Name Load Success',\n  props<{ friendlyBundleName: string }>()\n);\n\nexport const friendlyBundleNameLoadError = createAction(\n  '[View Designer] Bundle Friendly Name Load Error',\n  props<{ payload: any }>()\n);\n\nexport const viewModelsInitialized = createAction('[View Designer] View Models Initialized');\n\nexport const viewModelsUpdatedAfterSave = createAction('[View Designer] View Models Updated After Save');\n\nexport const updateViewModel = createAction(\n  '[View Designer] Update View Model',\n  props<{ payload: Partial<IViewDesignModel> }>()\n);\n\nexport const setViewModel = createAction('[View Designer] Set View Model', props<{ payload: IViewDesignModel }>());\n\nexport const selectInspectorTab = createAction('[View Designer] Select Inspector Tab', props<{ tabId: number }>());\n\nexport const saveViewDefinition = createAction('[View Designer] Save View Definition', props<{ payload?: any }>());\n\nexport const runPreview = createAction('[View Designer] Run Preview');\n\nexport const loadFriendlyBundleName = createAction('[View Designer] Load Bundle Friendly Name');\n\nexport const generateViewDefinition = createAction(\n  '[View Designer] Generate View Definition',\n  props<{ payload?: any }>()\n);\n\nexport const clearCanvas = createAction('[View Designer] Clear Canvas');\n\nexport const initViewDesigner = createAction(\n  '[View Designer] Init',\n  props<{ payload: IInitViewDesignerActionPayload }>()\n);\n\nexport const destroyViewDesigner = createAction('[View Designer] Destroy');\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { IViewDesignerState } from '../interfaces/view-designer-state.interface';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport { get } from 'lodash';\n\nexport const viewDesignerState = createFeatureSelector<IViewDesignerState>('viewDesigner');\n\nexport const viewDesignerModelsSelector = createSelector(viewDesignerState, (viewDesigner) => viewDesigner.model);\n\nexport const viewModelSelector = createSelector(viewDesignerModelsSelector, (models) => models.viewDesignModel);\n\nexport const viewModelPropertyValueSelector = createSelector(\n  viewModelSelector,\n  (viewModel: IViewDesignModel, { propertyName }: { propertyName: string }) => get(viewModel, propertyName)\n);\n\nexport const viewComponentModelsSelector = createSelector(\n  viewDesignerModelsSelector,\n  (models) => models.viewComponentDesignModels\n);\n\nexport const firstViewComponentModelTypeSelector = createSelector(\n  viewDesignerModelsSelector,\n  (models) => Object.values(models.viewComponentDesignModels)[0]?.type\n);\n\nexport const viewComponentModelSelector = createSelector(\n  viewComponentModelsSelector,\n  (componentModels, { guid }: { guid: string }) => componentModels[guid]\n);\n\nexport const parentComponentModelGuidSelector = createSelector(\n  viewComponentModelSelector,\n  (componentModel) => componentModel?.parentGuid\n);\n\nexport const componentPropertiesByNameSelector = createSelector(\n  viewComponentModelsSelector,\n  (componentModels, { guid, propertyName }: { guid: string; propertyName?: string }) =>\n    componentModels[guid]\n      ? propertyName\n        ? get(componentModels[guid].propertiesByName, propertyName)\n        : componentModels[guid].propertiesByName\n      : null\n);\n\nexport const componentTypeSelector = createSelector(viewComponentModelsSelector, (componentModels, { guid }) =>\n  componentModels[guid] ? componentModels[guid].type : null\n);\n\nexport const componentLayoutSelector = createSelector(\n  viewComponentModelSelector,\n  (componentModel) => componentModel?.layout\n);\n\nexport const componentPermissionsSelector = createSelector(\n  viewComponentModelSelector,\n  (componentModel) => componentModel?.permissions\n);\n\nexport const childDataComponentGuidsSelector = createSelector(\n  viewComponentModelSelector,\n  (componentModel) => componentModel?.childDataComponentGuids\n);\n\nexport const viewDesignerUISelector = createSelector(viewDesignerState, (viewDesigner) => viewDesigner.ui);\n\nexport const isViewDefinitionLoadingSelector = createSelector(\n  viewDesignerUISelector,\n  (ui) => ui.isViewDefinitionLoading\n);\n\nexport const bundleFriendlyNameSelector = createSelector(viewDesignerUISelector, (ui) => ui.friendlyBundleName);\n\nexport const currentBundleIdSelector = createSelector(viewDesignerUISelector, (ui) => ui.currentBundleId);\n\nexport const viewDefinitionSelector = createSelector(viewDesignerState, (viewDesigner) => viewDesigner.viewDefinition);\n\nexport const validationIssuesSelector = createSelector(viewDesignerState, (viewDesigner) => viewDesigner.validation);\n\nexport const breadcrumbsSelector = createSelector(viewDesignerState, (viewDesigner) => viewDesigner.breadcrumbs);\n\nexport const selectedInspectorTabIdSelector = createSelector(viewDesignerUISelector, (ui) => ui.selectedInspectorTabId);\n\nexport const selectedComponentGuidSelector = createSelector(viewDesignerUISelector, (ui) => ui.selectedComponentGuid);\n\nexport const areViewModelsReadySelector = createSelector(viewDesignerUISelector, (ui) => ui.areViewModelsReady);\n\nexport const selectedComponentPropsSelector = createSelector(\n  selectedComponentGuidSelector,\n  viewComponentModelsSelector,\n  (selectedComponentGuid, componentModels) => {\n    if (componentModels && selectedComponentGuid) {\n      const componentDesignModel = componentModels[selectedComponentGuid];\n\n      return componentDesignModel ? componentDesignModel.propertiesByName : null;\n    } else {\n      return null;\n    }\n  }\n);\n","import { Injectable } from '@angular/core';\nimport { IDataDictionaryBranch, IPlainObject, RxOverlayService } from '@helix/platform/shared/api';\nimport { RxGuidService } from '@helix/platform/utils';\nimport {\n  IViewActionOutputDataDictionary,\n  IViewDefinitionPermission,\n  IViewLayout,\n  RxViewLayout\n} from '@helix/platform/view/api';\nimport { Actions, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { compact, filter as _filter, flatten, isFinite } from 'lodash';\nimport { combineLatest, EMPTY, merge, Observable, of, Subject } from 'rxjs';\nimport {\n  bufferToggle,\n  distinctUntilChanged,\n  filter,\n  map,\n  shareReplay,\n  switchMap,\n  switchMapTo,\n  take,\n  takeUntil,\n  withLatestFrom\n} from 'rxjs/operators';\nimport { IViewComponentDropData } from '../components/view-designer-canvas';\nimport { getChildGuidsFromModel } from '../core/layout-helpers';\nimport { RxViewDataDictionaryBuilderService } from '../core/view-data-dictionary-builder.service';\nimport { RxViewDataDictionaryStoreService } from '../core/view-data-dictionary-store.service';\nimport { RxViewDesignerInspectorService } from '../core/view-designer-inspector.service';\nimport { IViewComponentDesignModel } from '../interfaces/view-component-design-model.interface';\nimport { IViewComponentDesignModels } from '../interfaces/view-component-design-models.interface';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport {\n  IViewComponentDesignData,\n  IViewComponentDesignSetPayload,\n  IViewComponentDesignValidationIssue,\n  IViewDesignerInspectorConfig\n} from '../public-interfaces';\nimport { IViewComponentDesignSettablePropertiesDataDictionary } from '../public-interfaces/view-component-design-settable-properties-data-dictionary.interfaces';\nimport * as ViewComponentsActions from './view-component.actions';\nimport { ISetSettablePropertiesDataDictionaryItem } from './view-component.types';\nimport { ViewDesignerDispatcher } from './view-designer-dispatcher.service';\nimport * as ViewDesignerActions from './view-designer.actions';\nimport {\n  areViewModelsReadySelector,\n  breadcrumbsSelector,\n  bundleFriendlyNameSelector,\n  childDataComponentGuidsSelector,\n  componentLayoutSelector,\n  componentPermissionsSelector,\n  componentPropertiesByNameSelector,\n  componentTypeSelector,\n  currentBundleIdSelector,\n  firstViewComponentModelTypeSelector,\n  isViewDefinitionLoadingSelector,\n  parentComponentModelGuidSelector,\n  selectedComponentGuidSelector,\n  selectedInspectorTabIdSelector,\n  validationIssuesSelector,\n  viewComponentModelSelector,\n  viewComponentModelsSelector,\n  viewDefinitionSelector,\n  viewDesignerModelsSelector,\n  viewModelPropertyValueSelector,\n  viewModelSelector\n} from './view-designer.selectors';\nimport { IInitViewDesignerActionPayload } from './view-designer.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewDesignerFacade {\n  viewDefinition$ = this.store$.select(viewDefinitionSelector);\n  validationIssues$ = this.store$.select(validationIssuesSelector);\n  breadcrumbs$ = this.store$.select(breadcrumbsSelector);\n  viewDesignerModelState$ = this.store$.select(viewDesignerModelsSelector);\n  // filter operator is used to ignore the empty model when:\n  // - the view definition has not been loaded for the first time, or\n  // - the view definition is being saved.\n  viewModel$ = this.store$.select(viewModelSelector).pipe(filter<IViewDesignModel>(Boolean));\n  viewModelGuid$ = this.getViewPropertyValue('guid');\n  viewComponentModels$: Observable<IViewComponentDesignModels> = this.store$.select(viewComponentModelsSelector);\n  firstViewComponentModelType$: Observable<string> = this.store$.select(firstViewComponentModelTypeSelector);\n  isExtensionView$ = this.getViewPropertyValue('targetViewDefinitionName').pipe(map(Boolean), shareReplay(1));\n\n  isExtensionContainerSet$ = this.getViewPropertyValue('targetExtensionContainerGuid').pipe(\n    map(Boolean),\n    shareReplay(1)\n  );\n\n  allComponentGuids$ = this.viewComponentModels$.pipe(\n    map((models) => new Set(Object.keys(models))),\n    shareReplay({\n      refCount: true,\n      bufferSize: 1\n    })\n  );\n\n  selectedComponentGuid$: Observable<string> = this.store$.select(selectedComponentGuidSelector).pipe(\n    switchMap((componentGuid) =>\n      this.viewModelGuid$.pipe(\n        map((viewGuid) => (componentGuid === viewGuid ? null : componentGuid)),\n        take(1)\n      )\n    )\n  );\n\n  selectedComponentProperties$: Observable<IViewComponentDesignModel['propertiesByName']> =\n    this.selectedComponentGuid$.pipe(switchMap((guid) => (guid ? this.getComponentProperties(guid) : of(null))));\n\n  isViewDefinitionLoading$: Observable<boolean> = this.store$.select(isViewDefinitionLoadingSelector);\n  selectedInspectorTabId$: Observable<number> = this.store$.select(selectedInspectorTabIdSelector);\n  bundleFriendlyName$: Observable<string> = this.store$.select(bundleFriendlyNameSelector);\n  currentBundleId$: Observable<string> = this.store$.select(currentBundleIdSelector);\n\n  viewInspectorLayout$: Observable<IViewDesignerInspectorConfig['inspectorSectionConfigs']> = merge(\n    this.viewModelGuid$,\n    this.rxViewDesignerInspectorService.onChange$.pipe(\n      withLatestFrom(this.viewModelGuid$),\n      filter(([config, guid]) => config.guid === guid),\n      map(([config, guid]) => guid)\n    )\n  ).pipe(\n    map((guid) => {\n      const inspectorConfig = this.rxViewDesignerInspectorService.get(guid);\n\n      return inspectorConfig ? inspectorConfig.inspectorSectionConfigs : null;\n    })\n  );\n\n  selectedComponentInspectorLayout$: Observable<IViewDesignerInspectorConfig['inspectorSectionConfigs']> = merge(\n    this.selectedComponentGuid$.pipe(distinctUntilChanged()),\n    this.rxViewDesignerInspectorService.onChange$.pipe(\n      withLatestFrom(this.selectedComponentGuid$),\n      filter(([config, guid]) => config.guid === guid),\n      map(([config, guid]) => guid)\n    )\n  ).pipe(\n    map((guid) => {\n      const inspectorConfig = this.rxViewDesignerInspectorService.get(guid);\n\n      return inspectorConfig ? inspectorConfig.inspectorSectionConfigs : null;\n    })\n  );\n\n  isViewReadOnly$: Observable<boolean> = combineLatest([\n    this.viewModel$,\n    this.currentBundleId$.pipe(\n      switchMap((bundleId: string) => this.rxOverlayService.areNewDefinitionsAllowed(bundleId))\n    )\n  ]).pipe(\n    map(\n      ([viewModel, areNewDefinitionsAllowed]) =>\n        !areNewDefinitionsAllowed || !this.rxOverlayService.isCustomizationEnabled('allowOverlay', viewModel)\n    ),\n    distinctUntilChanged(),\n    shareReplay(1)\n  );\n\n  // Actions Stream\n  viewDefinitionLoadError$ = this.actions$.pipe(ofType(ViewDesignerActions.viewDefinitionLoadError));\n\n  viewDefinitionSaveSuccess$ = this.actions$.pipe(ofType(ViewDesignerActions.viewDefinitionSaveSuccess));\n\n  initViewDesigner$ = this.actions$.pipe(ofType(ViewDesignerActions.initViewDesigner));\n  private destroyViewDesignerSubject = new Subject();\n  destroyViewDesigner$ = this.destroyViewDesignerSubject.asObservable();\n  viewModelsInitialized$ = this.actions$.pipe(ofType(ViewDesignerActions.viewModelsInitialized));\n  areViewModelsReady$ = this.store$.select(areViewModelsReadySelector);\n  viewCommonDataDictionaryState$ = this.rxViewDataDictionaryService.viewCommon$;\n  componentsCommonDataDictionaryState$ = this.rxViewDataDictionaryService.componentsCommon$;\n  actionsDataDictionaryState$ = this.rxViewDataDictionaryService.actionsOutput$;\n  settablePropertiesDataDictionaryState$ = this.rxViewDataDictionaryService.settableProperties$;\n\n  private settablePropertiesDataDictionarySubject = new Subject<ISetSettablePropertiesDataDictionaryItem>();\n\n  constructor(\n    private dispatcher: ViewDesignerDispatcher,\n    private store$: Store<any>,\n    private actions$: Actions,\n    private rxViewDesignerInspectorService: RxViewDesignerInspectorService,\n    private rxGuidService: RxGuidService,\n    private rxViewDataDictionaryBuilderService: RxViewDataDictionaryBuilderService,\n    private rxViewDataDictionaryService: RxViewDataDictionaryStoreService,\n    private rxOverlayService: RxOverlayService\n  ) {\n    // for performance reasons grouping actions before sending them to store\n    merge(\n      this.settablePropertiesDataDictionarySubject.pipe(\n        bufferToggle(this.initViewDesigner$, (v) => this.viewModelsInitialized$)\n      ),\n      this.viewModelsInitialized$.pipe(\n        switchMap(() =>\n          this.settablePropertiesDataDictionarySubject.pipe(\n            map((data) => [data]),\n            takeUntil(this.initViewDesigner$)\n          )\n        )\n      )\n    ).subscribe((items) => {\n      this.rxViewDataDictionaryService.setSettablePropertiesDataDictionary(items);\n    });\n  }\n\n  getComponentModel<TPropertiesByName>(guid: string): Observable<IViewComponentDesignModel<TPropertiesByName>> {\n    return this.store$.select(viewComponentModelSelector, { guid });\n  }\n\n  initViewDesigner(payload: IInitViewDesignerActionPayload): void {\n    this.dispatcher.dispatch(\n      ViewDesignerActions.initViewDesigner({\n        payload\n      })\n    );\n  }\n\n  destroyViewDesigner(): void {\n    this.destroyViewDesignerSubject.next();\n    // trigger action after subject to allow store to be cleared after every component is destroyed\n    // and its streams are completed\n    this.dispatcher.dispatch(ViewDesignerActions.destroyViewDesigner());\n  }\n\n  selectComponent(guid: string): void {\n    this.dispatcher.dispatch(ViewComponentsActions.selectComponent({ guid }));\n  }\n\n  insertComponent(payload: {\n    data: IViewComponentDropData;\n    insertIndex: number;\n    outletName: string;\n    targetGuid: string;\n  }): void {\n    this.dispatcher.dispatch(\n      ViewComponentsActions.insertComponent({\n        columnIndex: isFinite(payload.data && payload.data.columnIndex) ? payload.data.columnIndex : 0,\n        ...payload,\n        data: {\n          guid: payload.data.draggedViewComponentGuid,\n          type: payload.data.draggedViewComponentDescriptor.type,\n          initialPropertiesByName: payload.data.initialPropertiesByName\n        }\n      })\n    );\n  }\n\n  selectInspectorTab(payload: { tabId: number }): void {\n    this.dispatcher.dispatch(ViewDesignerActions.selectInspectorTab(payload));\n  }\n\n  generateViewDefinition(payload?: any): void {\n    this.dispatcher.dispatch(ViewDesignerActions.generateViewDefinition({ payload }));\n  }\n\n  updateComponentProperties(guid: string, componentProperties: IPlainObject): void {\n    this.dispatcher.dispatch(\n      ViewComponentsActions.updateComponentModel({\n        payload: [\n          {\n            guid,\n            partialModel: {\n              propertiesByName: componentProperties\n            }\n          }\n        ]\n      })\n    );\n  }\n\n  updateComponentModel(guid: string, payload: Partial<IViewComponentDesignModel>): void {\n    this.dispatcher.dispatch(\n      ViewComponentsActions.updateComponentModel({\n        payload: [\n          {\n            guid,\n            partialModel: payload\n          }\n        ]\n      })\n    );\n  }\n\n  getComponentProperties<TPropertiesByName = IPlainObject>(\n    guid: string\n  ): Observable<TPropertiesByName & { name?: string }> {\n    return this.store$.select(componentPropertiesByNameSelector, { guid });\n  }\n\n  getComponentPropertyValue<TPropertyName extends keyof TPropertiesByName, TPropertiesByName = IPlainObject>(\n    guid: string,\n    propertyName: TPropertyName\n  ): Observable<TPropertiesByName[TPropertyName]> {\n    return this.store$.select(componentPropertiesByNameSelector, { guid, propertyName: propertyName as string }).pipe(\n      withLatestFrom(this.getComponentModel(guid)),\n      switchMap(([value, model]) => (model ? of(value) : EMPTY))\n    );\n  }\n\n  getComponentType(guid: string): Observable<string> {\n    return this.store$.select(componentTypeSelector, { guid });\n  }\n\n  getComponentPermissions(guid: string): Observable<IViewDefinitionPermission[]> {\n    return this.store$.select(componentPermissionsSelector, { guid });\n  }\n\n  getComponentLayout(guid: string): Observable<IViewLayout> {\n    return this.store$.select(componentLayoutSelector, { guid });\n  }\n\n  updateSelectedComponentProperties(properties: IPlainObject): void {\n    this.selectedComponentGuid$.pipe(take(1)).subscribe((guid) => {\n      this.updateComponentProperties(guid, properties);\n    });\n  }\n\n  saveViewDefinition(payload?: any): void {\n    this.dispatcher.dispatch(ViewDesignerActions.saveViewDefinition({ payload }));\n  }\n\n  updateViewProperties(properties: Partial<IViewDesignModel>): void {\n    this.dispatcher.dispatch(ViewDesignerActions.updateViewModel({ payload: properties }));\n  }\n\n  setViewProperties(properties: IViewDesignModel): void {\n    this.dispatcher.dispatch(ViewDesignerActions.setViewModel({ payload: properties }));\n  }\n\n  getViewPropertyValue<T extends keyof IViewDesignModel>(propertyName: T): Observable<IViewDesignModel[T]> {\n    return this.store$.select(viewModelPropertyValueSelector, { propertyName }).pipe(\n      switchMapTo(\n        this.viewModel$.pipe(\n          map((model) => model[propertyName]),\n          take(1)\n        )\n      ),\n      distinctUntilChanged()\n    );\n  }\n\n  runPreview(): void {\n    this.dispatcher.dispatch(ViewDesignerActions.runPreview());\n  }\n\n  clearCanvas(): void {\n    this.dispatcher.dispatch(ViewDesignerActions.clearCanvas());\n  }\n\n  setComponentInspector(guid: string, inspectorConfig: IViewDesignerInspectorConfig): void {\n    this.rxViewDesignerInspectorService.set(guid, inspectorConfig);\n  }\n\n  setValidationIssues(guid: string, issues: IViewComponentDesignValidationIssue[]): void {\n    this.dispatcher.dispatch(ViewComponentsActions.setValidationIssues({ guid, issues }));\n  }\n\n  setExpressionValidationIssues(issues: { [guid: string]: IViewComponentDesignValidationIssue[] }): void {\n    this.dispatcher.dispatch(ViewComponentsActions.setExpressionValidationIssues({ issues }));\n  }\n\n  setViewInspectorConfig(inspectorConfig: IViewDesignerInspectorConfig): void {\n    this.viewModelGuid$.pipe(take(1)).subscribe((guid) => {\n      this.setComponentInspector(guid, inspectorConfig);\n    });\n  }\n\n  removeViewComponents(guids: string[], selectParent?: boolean): void {\n    if (guids.length) {\n      this.dispatcher.dispatch(ViewComponentsActions.removeComponents({ guids, selectParent }));\n    }\n  }\n\n  setComponentSettablePropertiesDataDictionary(\n    guid: string,\n    componentName: string,\n    properties: IViewComponentDesignSettablePropertiesDataDictionary\n  ): void {\n    this.settablePropertiesDataDictionarySubject.next({\n      guid,\n      componentName,\n      dataDictionary: this.rxViewDataDictionaryBuilderService.getSettablePropertiesDataDictionary(properties)\n    });\n  }\n\n  setComponentCommonDataDictionaryBranch(guid: string, dataDictionaryBranch: IDataDictionaryBranch): void {\n    this.rxViewDataDictionaryService.setCommonDataDictionaryBranch(\n      guid,\n      dataDictionaryBranch\n        ? this.rxViewDataDictionaryBuilderService.getComponentCommonDataDictionaryBranch(dataDictionaryBranch)\n        : null\n    );\n  }\n\n  setViewCommonDataDictionaryBranch(dataDictionaryBranch: IDataDictionaryBranch): void {\n    this.rxViewDataDictionaryService.setViewCommonDataDictionaryBranch(dataDictionaryBranch);\n  }\n\n  removeAllActionDataDictionaryBranches(): void {\n    this.rxViewDataDictionaryService.removeAllActionOutputDataDictionaryBranches();\n  }\n\n  removeActionDataDictionaryBranch(actionGuid: string): void {\n    this.rxViewDataDictionaryService.removeActionOutputDataDictionaryBranch(actionGuid);\n  }\n\n  setActionDataDictionaryBranch(\n    actionGuid: string,\n    index: number,\n    actionName: string,\n    dataDictionary: IViewActionOutputDataDictionary = null\n  ): void {\n    this.rxViewDataDictionaryService.setActionOutputDataDictionaryBranch(\n      actionGuid,\n      index,\n      this.rxViewDataDictionaryBuilderService.getActionOutputDataDictionaryBranch(actionName, dataDictionary)\n    );\n  }\n\n  updateActionDataDictionaryBranchOrder(actions: { [guid: string]: number }): void {\n    this.rxViewDataDictionaryService.updateActionOutputDataDictionaryBranchOrder(actions);\n  }\n\n  getChildComponentGuids(\n    parentComponentGuid,\n    recursive = false,\n    filterPredicate?: (component: IViewComponentDesignData) => boolean\n  ): Observable<string[]> {\n    // watch for layout and childDataComponentGuids properties change\n    // TODO: store child component guids separately as a final result from layout and childDataComponentGuids\n    return combineLatest([\n      this.store$.select(componentLayoutSelector, { guid: parentComponentGuid }),\n      this.store$.select(childDataComponentGuidsSelector, { guid: parentComponentGuid })\n    ]).pipe(\n      // get component model with actual data where layout and childDataComponentGuids are already updated\n      switchMap(() => this.getComponentModel(parentComponentGuid).pipe(take(1))),\n      switchMap((model) =>\n        model\n          ? of(\n              compact([\n                ...(model.layout ? RxViewLayout.getViewLayoutChildGuids(model.layout) : []),\n                ...(model.childDataComponentGuids || [])\n              ])\n            )\n          : EMPTY\n      ),\n      switchMap((guids) =>\n        guids.length && recursive\n          ? combineLatest(guids.map((guid) => this.getChildComponentGuids(guid, true))).pipe(\n              map(flatten),\n              map((nestedGuids) => [...nestedGuids, ...guids])\n            )\n          : of(guids)\n      ),\n      switchMap((guids) =>\n        guids.length\n          ? this.viewComponentModels$.pipe(\n              map((models) => {\n                // The model of a removed component may be already unavailable, but the GUID may still be there.\n                // This can happen when multiple nested components are removed from different\n                // parent containers e.g. using record editor field selector dialog component.\n                // In this case, we will get two observable emits for each removed component.\n                // TODO: enhance getFlattenChildComponentGuids logic to reach a single observable emit.\n                let availableComponentGuids = guids.filter((guid) => models[guid]);\n\n                if (filterPredicate) {\n                  availableComponentGuids = availableComponentGuids.filter((guid) =>\n                    filterPredicate({\n                      type: models[guid].type,\n                      guid: models[guid].guid,\n                      data: models[guid].propertiesByName\n                    })\n                  );\n                }\n\n                return availableComponentGuids;\n              }),\n              take(1)\n            )\n          : of(guids)\n      )\n    );\n  }\n\n  getChildComponents<TPropertiesByName = IPlainObject>(\n    parentComponentGuid: string,\n    filterPredicate?: (component: IViewComponentDesignData) => boolean\n  ): Observable<IViewComponentDesignData<TPropertiesByName>[]> {\n    return this.getChildComponentGuids(parentComponentGuid, false, filterPredicate).pipe(\n      switchMap((guids) =>\n        guids.length\n          ? combineLatest(\n              guids.map((guid) =>\n                this.getComponentProperties(guid).pipe(\n                  withLatestFrom(this.getComponentModel(guid)),\n                  switchMap(([props, model]) =>\n                    model\n                      ? of({\n                          type: model.type,\n                          data: props,\n                          guid\n                        })\n                      : EMPTY\n                  )\n                )\n              )\n            )\n          : of([])\n      )\n    );\n  }\n\n  getComponent<TChildComponentDesignProperties>(\n    guid: string\n  ): Observable<IViewComponentDesignData<TChildComponentDesignProperties>> {\n    return this.getComponentModel<TChildComponentDesignProperties>(guid).pipe(\n      map((model) =>\n        model\n          ? {\n              data: model.propertiesByName,\n              guid: model.guid,\n              type: model.type\n            }\n          : null\n      )\n    );\n  }\n\n  getComponentsByType<TComponentDesignProperties>(\n    type: string\n  ): Observable<IViewComponentDesignData<TComponentDesignProperties>[]> {\n    return this.viewComponentModels$.pipe(\n      map((models) =>\n        _filter(models, { type }).map((model) => ({\n          guid: model.guid,\n          data: model.propertiesByName as TComponentDesignProperties,\n          type: model.type\n        }))\n      )\n    );\n  }\n\n  getChildComponentTree(parentComponentGuid: string): Observable<IViewComponentDesignData[]> {\n    return this.viewComponentModels$.pipe(\n      map((viewComponentModels) => {\n        const getChildrenData = (model: IViewComponentDesignModel) =>\n          getChildGuidsFromModel(model).reduce((res, childGuid) => {\n            if (viewComponentModels[childGuid]) {\n              res.push({\n                guid: childGuid,\n                data: viewComponentModels[childGuid].propertiesByName,\n                type: viewComponentModels[childGuid].type,\n                children: getChildrenData(viewComponentModels[childGuid])\n              });\n            }\n\n            return res;\n          }, []);\n\n        return viewComponentModels[parentComponentGuid]\n          ? getChildrenData(viewComponentModels[parentComponentGuid])\n          : [];\n      })\n    );\n  }\n\n  getParentComponentGuid(guid: string, componentType?: string): Observable<string> {\n    return this.store$\n      .select(parentComponentModelGuidSelector, { guid })\n      .pipe(\n        switchMap((parentGuid) =>\n          parentGuid && componentType\n            ? this.store$\n                .select(componentTypeSelector, { guid: parentGuid })\n                .pipe(\n                  switchMap((parentComponentType) =>\n                    parentComponentType === componentType\n                      ? of(parentGuid)\n                      : this.getParentComponentGuid(parentGuid, componentType)\n                  )\n                )\n            : of(parentGuid || null)\n        )\n      );\n  }\n\n  setChildren(guid: string, data: IViewComponentDesignSetPayload[]): void {\n    this.dispatcher.dispatch(\n      ViewComponentsActions.setChildComponents({\n        payload: {\n          guid,\n          data\n        }\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IViewDesignerComponentModel } from '@helix/platform/view/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDesignerModels {\n  private models: Map<string, IViewDesignerComponentModel> = new Map();\n\n  clear(): void {\n    this.models.clear();\n  }\n\n  set(guid: string, model: IViewDesignerComponentModel): void {\n    this.models.set(guid, model);\n  }\n\n  get(guid: string): IViewDesignerComponentModel {\n    return this.models.get(guid);\n  }\n\n  delete(guid: string): void {\n    this.models.delete(guid);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  AnyViewComponentDefinition,\n  IViewDefinition,\n  RxViewComponentType,\n  RxViewDefinitionLocalizationService\n} from '@helix/platform/view/api';\nimport { IViewComponentDesignModel } from '../interfaces/view-component-design-model.interface';\nimport { IViewComponentDesignModels } from '../interfaces/view-component-design-models.interface';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport {\n  isArray,\n  isBoolean,\n  isFunction,\n  isNumber,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  omit,\n  transform,\n  has\n} from 'lodash';\nimport { IPlainObject, RxBundleCacheService, RxDefinitionNameService } from '@helix/platform/shared/api';\nimport { getChildGuidsFromModel } from './layout-helpers';\nimport { RxViewDesignerModels } from './view-designer-models.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDefinitionGeneratorService {\n  constructor(\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxBundleCacheService: RxBundleCacheService,\n    private viewDesignerModels: RxViewDesignerModels,\n    private rxViewDefinitionLocalizationService: RxViewDefinitionLocalizationService\n  ) {}\n\n  generate(viewModel: IViewDesignModel, componentModels: IViewComponentDesignModels, forSave = false): IViewDefinition {\n    const clonedViewModel = viewModel;\n\n    const viewDefinition: Partial<IViewDefinition> = omit(\n      clonedViewModel,\n      'displayName',\n      'layout',\n      'layoutName',\n      'pageComponent',\n      'isAngularJsView'\n    );\n\n    viewDefinition.name =\n      viewDefinition.name ||\n      this.rxDefinitionNameService.getDefinitionName(this.rxBundleCacheService.bundleId, clonedViewModel.displayName);\n\n    viewDefinition.componentDefinitions = this.generateComponentDefinitions(clonedViewModel, componentModels);\n\n    if (forSave) {\n      viewDefinition.localizableStringsByComponentId =\n        this.rxViewDefinitionLocalizationService.extractLocalizableStrings(viewDefinition as IViewDefinition);\n    }\n\n    delete viewDefinition.localizablePropertyToStringGuidMap;\n    viewDefinition.layout = JSON.stringify(clonedViewModel.layout);\n\n    return viewDefinition as IViewDefinition;\n  }\n\n  private generateComponentDefinitions(\n    model: IViewDesignModel | IViewComponentDesignModel,\n    componentModelItems: IViewComponentDesignModels\n  ): AnyViewComponentDefinition[] {\n    return getChildGuidsFromModel(model).map((guid) => {\n      const componentDefinition: any = { ...componentModelItems[guid] };\n      const componentModel = this.viewDesignerModels.get(guid);\n\n      const propertiesByName = isFunction(componentModel?.getPropertiesByName)\n        ? componentModel.getPropertiesByName(componentDefinition.propertiesByName)\n        : componentDefinition.propertiesByName;\n\n      componentDefinition.propertiesByName = this.serializeComponentDefinitionProperties(propertiesByName);\n      delete componentDefinition.parentGuid;\n\n      // Move name out of propertiesByName for all components except actions.\n      if (\n        componentDefinition.type !== RxViewComponentType.Action &&\n        has(componentDefinition.propertiesByName, 'name')\n      ) {\n        if (componentDefinition.propertiesByName.name) {\n          componentDefinition.name = componentDefinition.propertiesByName.name;\n        }\n\n        delete componentDefinition.propertiesByName.name;\n      }\n\n      if (componentDefinition.layout || componentDefinition.childDataComponentGuids) {\n        componentDefinition.componentDefinitions = this.generateComponentDefinitions(\n          componentDefinition,\n          componentModelItems\n        );\n\n        delete componentDefinition.childDataComponentGuids;\n      }\n\n      if (componentDefinition.layout) {\n        componentDefinition.layout = JSON.stringify(componentDefinition.layout);\n      }\n\n      return componentDefinition;\n    });\n  }\n\n  private serializeComponentDefinitionProperties(componentProperties: IPlainObject): IPlainObject {\n    return transform(\n      componentProperties,\n      (result: IPlainObject, value: any, key: string) => {\n        switch (true) {\n          case isArray(value):\n          case isNumber(value):\n          case isBoolean(value):\n          case isPlainObject(value):\n            result[key] = JSON.stringify(value);\n            break;\n\n          case isObject(value):\n            // support Set, Map\n            const obj = Object.create(null);\n\n            value.forEach((v, k) => (obj[k] = v));\n            result[key] = JSON.stringify(obj);\n            break;\n\n          case isFunction(value):\n          case isUndefined(value):\n            result[key] = null;\n            break;\n\n          default:\n            result[key] = value;\n            break;\n        }\n      },\n      {}\n    );\n  }\n}\n","import { ITagsFormControlModel } from '@helix/platform/shared/components';\nimport { IViewComponentDesignValidationIssue } from '../public-interfaces';\nimport { isObject } from 'lodash';\nimport {\n  IRxAvailableOnDevicesProp,\n  IRxStylesProp,\n  RX_AVAILABLE_ON_DEVICES_PROP_NAME,\n  RX_STYLES_PROP_NAME\n} from '@helix/platform/view/api';\n\nexport function validateCssClassName(tag: ITagsFormControlModel): boolean {\n  return !/^[a-z][-\\w]+$/gi.test(isObject(tag) ? tag.data.value : tag);\n}\n\nexport function validateCssClassNames(styles: string): IViewComponentDesignValidationIssue[] {\n  const validationIssues: IViewComponentDesignValidationIssue[] = [];\n\n  if (styles) {\n    const tags = styles.split(' ');\n\n    if (tags.some(validateCssClassName)) {\n      validationIssues.push({\n        type: 'error',\n        propertyName: 'styles',\n        description: 'CSS class name is invalid.'\n      });\n    }\n  }\n\n  return validationIssues;\n}\n\nexport function validateAvailableOnDevicesProp(value: string[]): IViewComponentDesignValidationIssue[] {\n  const validationIssues: IViewComponentDesignValidationIssue[] = [];\n\n  if (!value?.length) {\n    validationIssues.push({\n      type: 'error',\n      propertyName: RX_AVAILABLE_ON_DEVICES_PROP_NAME,\n      description: 'At least one device must be selected.'\n    });\n  }\n\n  return validationIssues;\n}\n\ninterface IRxValidateStandardPropsPayload extends IRxStylesProp, IRxAvailableOnDevicesProp {}\n\nexport function validateStandardProps(model: IRxValidateStandardPropsPayload): IViewComponentDesignValidationIssue[] {\n  return [\n    ...validateCssClassNames(model[RX_STYLES_PROP_NAME]),\n    ...validateAvailableOnDevicesProp(model[RX_AVAILABLE_ON_DEVICES_PROP_NAME])\n  ];\n}\n","import { Injectable } from '@angular/core';\nimport {\n  IExpressionEvaluator,\n  RxDefaultExpressionEvaluatorService,\n  RxDefaultExpressionValidatorService\n} from '@helix/platform/view/api';\nimport { RxStringService } from '@helix/platform/utils';\nimport { Observable, of } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { isEqual } from 'lodash';\nimport { ExpressionParserToken, RxExpressionParserService } from '@helix/platform/shared/api';\nimport { IViewComponentDesignValidationIssue } from '../public-interfaces/view-component-design-validation-issue.interface';\nimport { ViewDesignerFacade } from '../+state/view-designer.facade';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewExpressionValidatorService {\n  constructor(\n    private rxDefaultExpressionValidatorService: RxDefaultExpressionValidatorService,\n    private rxDefaultExpressionEvaluatorService: RxDefaultExpressionEvaluatorService,\n    private rxStringService: RxStringService,\n    private rxExpressionParserService: RxExpressionParserService,\n    private viewDesignerFacade: ViewDesignerFacade\n  ) {}\n\n  validate(\n    expression: string,\n    propertyName: string,\n    propertyLabel = this.rxStringService.prettify(propertyName),\n    expressionEvaluator: IExpressionEvaluator = this.rxDefaultExpressionEvaluatorService\n  ): Observable<IViewComponentDesignValidationIssue[]> {\n    let issues$ = of([]);\n\n    if (this.rxDefaultExpressionValidatorService.isValid(expression, expressionEvaluator)) {\n      if (this.rxStringService.isNonEmptyString(expression)) {\n        const referencedComponentGuidsSet = new Set<string>();\n\n        this.rxExpressionParserService.parse(expression, (token, expressionFragment) => {\n          if (token === ExpressionParserToken.RxExpression || token === ExpressionParserToken.SingleQuoteRxExpression) {\n            // Extract <ID> from ${view.components.<ID>.<Path>}\n            const result = /\\${view\\.components\\.([0-9a-z-]+)\\..+}/.exec(expressionFragment);\n\n            if (result && result[1]) {\n              referencedComponentGuidsSet.add(result[1]);\n            }\n          }\n\n          return expressionFragment;\n        });\n\n        if (referencedComponentGuidsSet.size) {\n          const referencedComponentGuids = Array.from(referencedComponentGuidsSet);\n\n          issues$ = this.viewDesignerFacade.allComponentGuids$.pipe(\n            map((guids) => referencedComponentGuids.filter((guid) => !guids.has(guid))),\n            distinctUntilChanged(isEqual),\n            map((guids) =>\n              guids.map(() => ({\n                type: 'error',\n                description: 'Expression references a non-existent view component.',\n                propertyName\n              }))\n            )\n          );\n        }\n      }\n    } else {\n      issues$ = of([\n        {\n          type: 'error',\n          description: `${propertyLabel} must be a valid expression.`,\n          propertyName\n        }\n      ]);\n    }\n\n    return issues$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ViewDesignerFacade } from '../+state/view-designer.facade';\nimport { distinctUntilChanged, filter, map, shareReplay, withLatestFrom } from 'rxjs/operators';\nimport { combineLatest, Observable } from 'rxjs';\nimport { IDataDictionary, IDataDictionaryBranch, RxDataDictionaryUtils } from '@helix/platform/shared/api';\nimport { compact, filter as _filter, find, flow, get, isEqual, map as _map, take } from 'lodash';\nimport { getChildGuidsFromModel } from '../core/layout-helpers';\nimport { RxViewDataDictionaryBuilderService } from '../core/view-data-dictionary-builder.service';\nimport { RX_EXPRESSION_FUNCTIONS, RxViewComponentRegistryService, RxViewLayout } from '@helix/platform/view/api';\nimport { IViewDesignModelState } from '../interfaces/view-design-model-state.interface';\nimport { IViewDesignerSettablePropertiesDataDictionaryState } from '../interfaces/view-designer-settable-properties-data-dictionary.state';\nimport { RxObjectUtilsService } from '@helix/platform/utils';\nimport { IViewDesignerViewCommonDataDictionaryState } from '../interfaces/view-designer-view-data-dictionary-state.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDataDictionaryService {\n  private componentsCommonDataDictionaryStateClone$ = this.viewDesignerFacade.componentsCommonDataDictionaryState$.pipe(\n    map((componentsDataDictionaryState) =>\n      componentsDataDictionaryState ? this.rxObjectUtilsService.cloneDeep(componentsDataDictionaryState) : {}\n    ),\n    shareReplay(1)\n  );\n\n  private viewCommonDataDictionaryStateClone$ = this.viewDesignerFacade.viewCommonDataDictionaryState$.pipe(\n    filter<IViewDesignerViewCommonDataDictionaryState>(Boolean),\n    map((viewDataDictionary) => this.rxObjectUtilsService.cloneDeep(viewDataDictionary)),\n    shareReplay(1)\n  );\n\n  commonDataDictionary$ = this.getCommonDataDictionary();\n\n  settablePropertiesDataDictionary$ = this.viewDesignerFacade.settablePropertiesDataDictionaryState$.pipe(\n    withLatestFrom(this.viewDesignerFacade.viewDesignerModelState$),\n    map(([settablePropsDataDictionaryState, viewDesignerModelState]) =>\n      this.rxObjectUtilsService.cloneDeep(\n        this.getSettablePropsDataDictionary(settablePropsDataDictionaryState, viewDesignerModelState)\n      )\n    )\n  );\n\n  constructor(\n    private viewDesignerFacade: ViewDesignerFacade,\n    private rxViewDataDictionaryBuilderService: RxViewDataDictionaryBuilderService,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private rxObjectUtilsService: RxObjectUtilsService,\n    private rxDataDictionaryUtils: RxDataDictionaryUtils\n  ) {}\n\n  getActionDataDictionary(guid: string): Observable<IDataDictionary> {\n    return combineLatest([this.viewDesignerFacade.actionsDataDictionaryState$, this.getCommonDataDictionary()]).pipe(\n      map(([actionsDataDictionaryState, commonDataDictionary]) => {\n        const currentActionData = find(actionsDataDictionaryState, { guid });\n\n        return [\n          {\n            label: 'Actions',\n            children: currentActionData\n              ? flow(\n                  (branches) => take(branches, currentActionData.index),\n                  (branches) => _map(branches, 'dataDictionaryBranch'),\n                  compact,\n                  (branches) => _filter(branches, (branch) => branch.children?.length),\n                  (branches) => this.rxObjectUtilsService.cloneDeep(branches)\n                )(actionsDataDictionaryState)\n              : []\n          },\n          ...commonDataDictionary\n        ];\n      }),\n      // TODO: performance\n      distinctUntilChanged(isEqual)\n    );\n  }\n\n  getComponentCommonDataDictionary(guid: string): Observable<IDataDictionaryBranch> {\n    return this.componentsCommonDataDictionaryStateClone$.pipe(map((state) => state[guid]));\n  }\n\n  getCommonDataDictionary(componentBranchToReplace?: {\n    [guid: string]: IDataDictionaryBranch;\n  }): Observable<IDataDictionary> {\n    return combineLatest([\n      this.viewCommonDataDictionaryStateClone$,\n      this.componentsCommonDataDictionaryStateClone$.pipe(\n        map((componentsDataDictionaryState) =>\n          Object.values(\n            componentBranchToReplace\n              ? { ...componentsDataDictionaryState, ...componentBranchToReplace }\n              : componentsDataDictionaryState\n          )\n        )\n      )\n    ]).pipe(\n      map(([viewDataDictionaryBranch, componentDataDictionaryBranches]) => [\n        {\n          label: 'General',\n          children: [\n            {\n              label: 'Current user',\n              icon: 'd-icon-dollar',\n              expression: '${keywords.user}'\n            },\n            {\n              label: 'New line',\n              icon: 'd-icon-dollar',\n              expression: '${keywords.newLine}'\n            }\n          ]\n        },\n        {\n          label: 'Functions',\n          children: this.rxDataDictionaryUtils.getFunctionsDataDictionaryBranch(RX_EXPRESSION_FUNCTIONS)\n        },\n        {\n          ...viewDataDictionaryBranch,\n          children: [\n            { label: 'Components', children: compact(componentDataDictionaryBranches), expanded: true },\n            ...viewDataDictionaryBranch.children\n          ]\n        }\n      ])\n    );\n  }\n\n  private getSettablePropsDataDictionary(settablePropsDataDictionaryState, viewDesignerModelState): IDataDictionary {\n    return getChildGuidsFromModel(viewDesignerModelState.viewDesignModel)\n      .map((guid) =>\n        this.getSettablePropsDataDictionaryBranch(guid, viewDesignerModelState, settablePropsDataDictionaryState, true)\n      )\n      .filter(Boolean);\n  }\n\n  private getSettablePropsDataDictionaryBranch(\n    guid: string,\n    modelState: IViewDesignModelState,\n    settablePropsState: IViewDesignerSettablePropertiesDataDictionaryState,\n    expanded = false\n  ): IDataDictionaryBranch {\n    const componentPropsState = settablePropsState[guid];\n    const model = modelState.viewComponentDesignModels[guid];\n    const descriptor = this.rxViewComponentRegistryService.get(model.type);\n    const childGuids = descriptor.outlets && model.layout ? RxViewLayout.getViewLayoutChildGuids(model.layout) : null;\n\n    const componentsDataDictionary = _map(childGuids, (componentGuid) =>\n      this.getSettablePropsDataDictionaryBranch(componentGuid, modelState, settablePropsState)\n    ).filter(Boolean);\n\n    const propsDataDictionary = get(componentPropsState, 'dataDictionary', []);\n\n    if (componentsDataDictionary.length || propsDataDictionary.length) {\n      return {\n        label: componentPropsState?.componentName || descriptor.name,\n        expanded,\n        children:\n          componentsDataDictionary.length && propsDataDictionary.length\n            ? [\n                {\n                  label: 'Components',\n                  children: componentsDataDictionary\n                },\n                {\n                  label: 'Properties',\n                  children: propsDataDictionary\n                }\n              ]\n            : componentsDataDictionary.length\n            ? componentsDataDictionary\n            : propsDataDictionary\n      };\n    }\n  }\n}\n","import {\n  ExpressionOperatorRowsByGroup,\n  ExpressionOperatorGroup,\n  IExpressionConfiguratorDefaultPropertyConfig,\n  RxExpressionConfigurator\n} from '@helix/platform/shared/api';\nimport { of } from 'rxjs';\nimport { Injector } from '@angular/core';\nimport { IExpressionEvaluator, RxExpressionHelperService } from '@helix/platform/view/api';\n\nexport abstract class RxViewExpressionConfigurator extends RxExpressionConfigurator {\n  private rxExpressionHelperService = this.injector.get<RxExpressionHelperService>(RxExpressionHelperService);\n\n  abstract getExpressionEvaluator(propertyName: string): IExpressionEvaluator;\n\n  constructor(protected injector: Injector) {\n    super();\n  }\n\n  getDefaultConfig(): IExpressionConfiguratorDefaultPropertyConfig {\n    return {\n      ...super.getDefaultConfig(),\n      dataDictionary$: this.commonDataDictionary$,\n      operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.AllClient),\n\n      validateExpression: (propertyName, expression) => {\n        let isValid = true;\n\n        const expressionEvaluator = this.getExpressionEvaluator(propertyName);\n\n        try {\n          expressionEvaluator.parseExpression(this.rxExpressionHelperService.prepare(expression));\n        } catch (e) {\n          isValid = false;\n        }\n\n        return of(isValid);\n      }\n    };\n  }\n}\n","import { Injector } from '@angular/core';\nimport { isFunction } from 'lodash';\nimport { switchMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport {\n  IExpressionEvaluator,\n  IViewDesignerComponentModel,\n  RxDefaultExpressionEvaluatorService,\n  RxViewComponentRegistryService\n} from '@helix/platform/view/api';\nimport { RxViewDataDictionaryService } from '../data-dictionary/view-data-dictionary.service';\nimport { RxViewExpressionConfigurator } from './view-expression-configurator.class';\nimport {\n  IViewComponentDesignCommonDataDictionary,\n  IViewComponentDesignCommonDataDictionaryBranch\n} from '../public-interfaces';\n\nexport class RxViewComponentExpressionConfigurator extends RxViewExpressionConfigurator {\n  private rxDefaultExpressionEvaluatorService = this.injector.get<RxDefaultExpressionEvaluatorService>(\n    RxDefaultExpressionEvaluatorService\n  );\n\n  private rxViewDataDictionaryService = this.injector.get<RxViewDataDictionaryService>(RxViewDataDictionaryService);\n\n  private rxViewComponentRegistryService = this.injector.get<RxViewComponentRegistryService>(\n    RxViewComponentRegistryService\n  );\n\n  readonly commonDataDictionary$ = this.rxViewDataDictionaryService.commonDataDictionary$;\n\n  constructor(\n    protected injector: Injector,\n    protected componentGuid: string,\n    protected componentModel: IViewDesignerComponentModel,\n    protected componentType?: string\n  ) {\n    super(injector);\n  }\n\n  getExpressionEvaluator(propertyName: string): IExpressionEvaluator {\n    const propertyDescriptor =\n      this.componentType &&\n      this.rxViewComponentRegistryService\n        .get(this.componentType)\n        .properties.find((property) => property.name === propertyName);\n\n    return isFunction(propertyDescriptor?.evaluatorService?.parseExpression)\n      ? propertyDescriptor.evaluatorService\n      : this.rxDefaultExpressionEvaluatorService;\n  }\n\n  getCommonDataDictionary(\n    componentBranchToReplace$?: Observable<IViewComponentDesignCommonDataDictionaryBranch>,\n    componentGuid = this.componentGuid\n  ): Observable<IViewComponentDesignCommonDataDictionary> {\n    return componentBranchToReplace$\n      ? componentBranchToReplace$.pipe(\n          switchMap((dataDictionary) =>\n            this.rxViewDataDictionaryService.getCommonDataDictionary({\n              [componentGuid]: dataDictionary\n            })\n          )\n        )\n      : this.commonDataDictionary$;\n  }\n\n  getComponentCommonDataDictionary(guid?: string): Observable<IViewComponentDesignCommonDataDictionaryBranch> {\n    return this.rxViewDataDictionaryService.getComponentCommonDataDictionary(guid || this.componentGuid);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ViewDesignerFacade } from '../../+state/view-designer.facade';\nimport { combineLatest, ReplaySubject } from 'rxjs';\nimport {\n  ICustomizationControlValue,\n  ICustomizationOptions,\n  IFormWidgetComponent,\n  RxOverlayService\n} from '@helix/platform/shared/api';\nimport { takeUntil, withLatestFrom } from 'rxjs/operators';\n\n@Component({\n  selector: 'rx-view-customization-options',\n  templateUrl: './view-customization-options.component.html'\n})\nexport class RxViewCustomizationOptionsComponent implements OnInit, OnDestroy, IFormWidgetComponent {\n  @Input()\n  options;\n\n  value: ICustomizationControlValue;\n  controlOptions: ICustomizationOptions;\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  constructor(\n    private viewDesignerFacade: ViewDesignerFacade,\n    private rxOverlayService: RxOverlayService,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit(): void {\n    combineLatest([\n      this.viewDesignerFacade.getViewPropertyValue('allowOverlay'),\n      this.viewDesignerFacade.getViewPropertyValue('scope'),\n      this.viewDesignerFacade.getViewPropertyValue('overlayGroupId'),\n      this.viewDesignerFacade.getViewPropertyValue('overlayDescriptor'),\n      this.viewDesignerFacade.getViewPropertyValue('lastUpdateTime')\n    ])\n      .pipe(withLatestFrom(this.viewDesignerFacade.viewModel$), takeUntil(this.destroyed$))\n      .subscribe(([[allowOverlay, scope, overlayGroupId, overlayDescriptor, lastUpdateTime], viewModel]) => {\n        this.controlOptions = {\n          allowOverlay,\n          scope,\n          overlayGroupId,\n          overlayDescriptor,\n          isDisabled: !this.rxOverlayService.isCustomizationEnabled('allowOverlay', viewModel),\n          definitionTypeDisplayName: this.translateService.instant('com.bmc.arsys.rx.client.view-definition.label').toLowerCase()\n        };\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  setCustomization(customizationOptions: ICustomizationControlValue): void {\n    this.viewDesignerFacade.updateViewProperties(customizationOptions);\n  }\n}\n","<rx-scope-customization-control\n  [options]=\"controlOptions\"\n  [(ngModel)]=\"value\"\n  (ngModelChange)=\"setCustomization($event)\"\n></rx-scope-customization-control>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IFormBuilderEvent, IFormWidgetComponent, IPlainObject } from '@helix/platform/shared/api';\nimport { combineLatest, Observable } from 'rxjs';\nimport { ViewDesignerFacade } from '../../+state/view-designer.facade';\nimport { map } from 'rxjs/operators';\nimport { IRevertCustomizationOptions } from '@helix/platform/shared/components';\n\n@Component({\n  selector: 'rx-view-revert-customization',\n  templateUrl: './view-revert-customization.component.html'\n})\nexport class RxViewRevertCustomizationComponent implements IFormWidgetComponent {\n  @Input()\n  options: IPlainObject;\n\n  @Input()\n  isDisabled: boolean;\n\n  @Output()\n  events: EventEmitter<IFormBuilderEvent> = new EventEmitter();\n\n  controlOptions$: Observable<IRevertCustomizationOptions> = combineLatest([\n    this.viewDesignerFacade.getViewPropertyValue('allowOverlay'),\n    this.viewDesignerFacade.getViewPropertyValue('scope'),\n    this.viewDesignerFacade.getViewPropertyValue('overlayGroupId'),\n    this.viewDesignerFacade.getViewPropertyValue('overlayDescriptor')\n  ]).pipe(\n    map(([allowOverlay, scope, overlayGroupId, overlayDescriptor]) => ({\n      allowOverlay,\n      scope,\n      overlayGroupId,\n      overlayDescriptor\n    }))\n  );\n\n  constructor(private viewDesignerFacade: ViewDesignerFacade) {}\n}\n","<rx-revert-customization\n  [options]=\"controlOptions$ | async\"\n  [isDisabled]=\"isDisabled\"\n  (events)=\"events.emit($event)\"\n></rx-revert-customization>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RxViewRevertCustomizationComponent } from './view-revert-customization.component';\nimport { RxRevertCustomizationModule } from '@helix/platform/shared/components';\n\n@NgModule({\n  declarations: [RxViewRevertCustomizationComponent],\n  imports: [CommonModule, RxRevertCustomizationModule]\n})\nexport class RxViewRevertCustomizationModule {}\n","import { Injectable, Injector, OnDestroy } from '@angular/core';\nimport {\n  concatMapTo,\n  distinctUntilChanged,\n  filter,\n  first,\n  map,\n  shareReplay,\n  skip,\n  switchMap,\n  switchMapTo,\n  take,\n  takeUntil,\n  withLatestFrom\n} from 'rxjs/operators';\nimport { compact, find, findIndex, flatten, flow, isEmpty, isEqual, map as _map, uniq } from 'lodash';\nimport {\n  IViewDefinition,\n  RX_VIEW_DEFINITION,\n  RxViewComponentRegistryService,\n  RxViewComponentType,\n  RxViewDefinitionCacheService,\n  RxViewDefinitionParserService\n} from '@helix/platform/view/api';\nimport { RxGuidService, RxStringService } from '@helix/platform/utils';\nimport { IViewComponentDesignValidationIssue, IViewDesignerInspectorConfig } from '../public-interfaces';\nimport { validateCssClassName, validateCssClassNames } from '../core/validation-helpers';\nimport { IViewComponentDesignModels } from '../interfaces/view-component-design-models.interface';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport {\n  IListFormControlOptions,\n  IPermissionEditorComponentOptions,\n  ISelectFormControlOptions,\n  ISelectOption,\n  ITagsFormControlOptions,\n  ITextareaFormControlOptions,\n  ITextFormControlOptions,\n  ListFormControlComponent,\n  RxDefinitionPickerComponent,\n  RxDefinitionPickerType,\n  RxPermissionEditorComponent,\n  SelectFormControlComponent,\n  TagsFormControlComponent,\n  TextareaFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport {\n  IDataDictionaryBranch,\n  IFormSectionBuilderConfig,\n  RxBundleCacheService,\n  RxDefinitionNameService,\n  RxOverlayService,\n  Tooltip\n} from '@helix/platform/shared/api';\nimport { ViewDesignerFacade } from '../+state/view-designer.facade';\nimport { getChildGuidsFromModel } from '../core/layout-helpers';\nimport * as ViewComponentActions from '../+state/view-component.actions';\nimport { ViewDesignerDispatcher } from '../+state/view-designer-dispatcher.service';\nimport { combineLatest, Observable, of, ReplaySubject } from 'rxjs';\nimport { RxViewExpressionValidatorService } from '../validation/view-expression-validator.service';\nimport { RxViewComponentExpressionConfigurator } from '../expression-configurator/view-component-expression-configurator.class';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxViewCustomizationOptionsComponent } from '../form-controls/view-customization-options-widget/view-customization-options.component';\nimport { RxViewRevertCustomizationComponent } from '../form-controls/view-revert-customization';\n\n@Injectable()\nexport class RxViewModel implements OnDestroy {\n  readonly expressionConfigurator = new RxViewComponentExpressionConfigurator(this.injector, null, this);\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  private allViewDefinitionNamesByBundleId$ = this.viewDesignerFacade.currentBundleId$.pipe(\n    filter<string>(Boolean),\n    switchMap((bundleId) =>\n      this.rxViewDefinitionCacheService\n        .getViewDefinitionNames(bundleId)\n        .pipe(map((names) => names.map((name) => this.rxDefinitionNameService.getDisplayNameForValidation(name))))\n    )\n  );\n\n  private targetExtensionContainerOptions$ = this.viewDesignerFacade\n    .getViewPropertyValue('targetViewDefinitionName')\n    .pipe(\n      switchMap((targetViewDefinitionName) =>\n        targetViewDefinitionName\n          ? this.getTargetExtensionContainerOptions(targetViewDefinitionName).pipe(take(1))\n          : of(null)\n      ),\n      shareReplay(1)\n    );\n\n  private targetViewDefinition$ = this.viewDesignerFacade.getViewPropertyValue('targetViewDefinitionName').pipe(\n    filter<string>(Boolean),\n    switchMap((targetViewDefinitionName) =>\n      this.rxViewDefinitionCacheService.getViewDefinition(targetViewDefinitionName)\n    )\n  );\n\n  constructor(\n    private injector: Injector,\n    private viewDesignerFacade: ViewDesignerFacade,\n    private rxStringService: RxStringService,\n    private rxOverlayService: RxOverlayService,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxModalService: RxModalService,\n    private rxViewDefinitionCacheService: RxViewDefinitionCacheService,\n    private rxViewDefinitionParserService: RxViewDefinitionParserService,\n    private rxGuidService: RxGuidService,\n    private viewDesignerDispatcher: ViewDesignerDispatcher,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxViewExpressionValidatorService: RxViewExpressionValidatorService\n  ) {\n    this.init();\n  }\n\n  private init(): void {\n    // Initial model and inspector configuration.\n    this.viewDesignerFacade.initViewDesigner$\n      .pipe(\n        concatMapTo(\n          this.viewDesignerFacade.viewModelsInitialized$.pipe(\n            switchMapTo(\n              combineLatest([\n                this.viewDesignerFacade.viewComponentModels$.pipe(\n                  map((viewComponentModels) => {\n                    const pageComponentModel = Object.values(viewComponentModels).find(\n                      (model) => model.type === RxViewComponentType.Page\n                    );\n\n                    return pageComponentModel\n                      ? viewComponentModels[pageComponentModel.childDataComponentGuids[0]].type\n                      : null;\n                  })\n                ),\n                this.viewDesignerFacade.viewModel$,\n                this.targetExtensionContainerOptions$\n              ]).pipe(take(1))\n            )\n          )\n        ),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(([componentType, viewModel, targetExtensionContainerOptions]) => {\n        this.viewDesignerFacade.updateViewProperties({\n          pageComponent: componentType\n        });\n\n        this.viewDesignerFacade.setViewInspectorConfig(\n          this.getInspector({ ...viewModel, pageComponent: componentType }, targetExtensionContainerOptions)\n        );\n      });\n\n    this.viewDesignerFacade.initViewDesigner$\n      .pipe(\n        switchMapTo(\n          this.targetExtensionContainerOptions$.pipe(\n            // Ignore initial property change.\n            skip(1),\n            withLatestFrom(this.viewDesignerFacade.viewModel$)\n          )\n        ),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(([options, viewModel]) => this.onTargetExtensionContainerOptionsChange(options, viewModel));\n\n    this.viewDesignerFacade.initViewDesigner$\n      .pipe(\n        switchMapTo(\n          this.viewDesignerFacade.getViewPropertyValue('pageComponent').pipe(\n            // Ignore initial property change.\n            skip(1),\n            switchMapTo(\n              combineLatest([\n                this.viewDesignerFacade.viewModel$,\n                this.viewDesignerFacade.viewComponentModels$,\n                this.targetExtensionContainerOptions$\n              ]).pipe(take(1))\n            )\n          )\n        ),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(([viewModel, viewComponentModels, targetExtensionContainerOptions]) =>\n        this.onPageComponentChange(viewModel, viewComponentModels, targetExtensionContainerOptions)\n      );\n\n    this.viewDesignerFacade.initViewDesigner$\n      .pipe(\n        switchMapTo(this.viewDesignerFacade.getViewPropertyValue('targetViewDefinitionName').pipe(skip(1))),\n        switchMap(() => this.viewDesignerFacade.viewComponentModels$.pipe(first())),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe((viewComponentModels) => {\n        if (!isEmpty(viewComponentModels)) {\n          this.viewDesignerFacade.clearCanvas();\n        }\n      });\n\n    this.viewDesignerFacade.initViewDesigner$\n      .pipe(\n        switchMapTo(\n          combineLatest([\n            this.viewDesignerFacade.getViewPropertyValue('styles').pipe(map(validateCssClassNames)),\n            this.validateDisplayName(),\n            this.validateInputParams(),\n            this.validateOutputParamExpressions(),\n            this.validateExtensionContainer()\n          ]).pipe(map(flatten), map(compact), withLatestFrom(this.viewDesignerFacade.viewModelGuid$))\n        ),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(([issues, guid]) => {\n        this.viewDesignerFacade.setValidationIssues(guid, issues);\n      });\n\n    this.viewDesignerFacade.initViewDesigner$\n      .pipe(switchMapTo(this.viewDesignerFacade.getViewPropertyValue('inputParams')), takeUntil(this.destroyed$))\n      .subscribe((inputParams) =>\n        this.viewDesignerFacade.setViewCommonDataDictionaryBranch(this.getViewCommonDataDictionary(inputParams))\n      );\n\n    this.viewDesignerFacade\n      .getViewPropertyValue('targetExtensionContainerGuid')\n      .pipe(\n        withLatestFrom(this.targetViewDefinition$),\n        map(([targetExtensionContainerGuid, targetViewDefinition]) =>\n          this.getTargetRecordDefinitionName(targetViewDefinition, targetExtensionContainerGuid)\n        ),\n        distinctUntilChanged(),\n        switchMapTo(this.viewDesignerFacade.viewComponentModels$.pipe(take(1))),\n        filter((viewComponentModels) => !isEmpty(viewComponentModels)),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => this.viewDesignerFacade.clearCanvas());\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  private getTargetExtensionContainerOptions(targetViewDefinitionName: string): Observable<ISelectOption[]> {\n    return this.rxViewDefinitionCacheService.getViewDefinition(targetViewDefinitionName).pipe(\n      map((viewDefinition) =>\n        this.rxViewDefinitionParserService\n          .getComponents(viewDefinition)\n          .filter(({ componentDefinition }) => componentDefinition.type === RxViewComponentType.ExtensionContainer)\n          .map(({ componentDefinition }) => ({\n            id: componentDefinition.guid,\n            name: componentDefinition.propertiesByName.name || componentDefinition.name\n          }))\n      )\n    );\n  }\n\n  private onTargetExtensionContainerOptionsChange(options: ISelectOption[], viewModel: IViewDesignModel): void {\n    this.viewDesignerFacade.setViewInspectorConfig(this.getInspector(viewModel, options));\n\n    // targetViewDefinitionName is not selected when options are not defined.\n    if (!options) {\n      this.viewDesignerFacade.updateViewProperties({\n        targetExtensionContainerGuid: null\n      });\n    } else if (options.length === 1) {\n      this.viewDesignerFacade.updateViewProperties({\n        targetExtensionContainerGuid: options[0].id\n      });\n    }\n  }\n\n  private onPageComponentChange(\n    viewModel: IViewDesignModel,\n    componentModels: IViewComponentDesignModels,\n    options: ISelectOption[]\n  ): void {\n    const pageComponentModel = find(componentModels, { type: RxViewComponentType.Page });\n    this.viewDesignerFacade.setViewInspectorConfig(this.getInspector(viewModel, options));\n\n    const actions = [];\n\n    if (viewModel.pageComponent) {\n      if (pageComponentModel) {\n        this.viewDesignerFacade.updateComponentModel(pageComponentModel.childDataComponentGuids[0], {\n          type: viewModel.pageComponent\n        });\n      } else {\n        const pageComponentGuid = this.rxGuidService.generate();\n\n        if (!isEmpty(componentModels)) {\n          this.viewDesignerFacade.removeViewComponents(getChildGuidsFromModel(viewModel));\n        }\n\n        actions.push(\n          ViewComponentActions.initializeComponentModels({\n            payload: [\n              {\n                componentModel: {\n                  guid: pageComponentGuid,\n                  resourceType: RX_VIEW_DEFINITION.resourceTypes.containerViewComponent,\n                  type: RxViewComponentType.Page,\n                  propertiesByName: {},\n                  parentGuid: viewModel.guid\n                },\n                insertIndex: 0,\n                columnIndex: 0,\n                outletName: RX_VIEW_DEFINITION.defaultOutletName\n              }\n            ]\n          }),\n          ViewComponentActions.initializeDataComponentModels({\n            payload: [\n              {\n                componentModel: {\n                  guid: this.rxGuidService.generate(),\n                  type: viewModel.pageComponent,\n                  resourceType: RX_VIEW_DEFINITION.resourceTypes.viewComponent,\n                  propertiesByName: {},\n                  parentGuid: pageComponentGuid\n                }\n              }\n            ]\n          })\n        );\n      }\n\n      this.viewDesignerFacade.updateViewProperties({\n        inputParams: [],\n        outputParams: []\n      });\n    } else if (pageComponentModel) {\n      this.viewDesignerFacade.removeViewComponents([pageComponentModel.guid]);\n    }\n\n    actions.forEach((action) => this.viewDesignerDispatcher.dispatch(action));\n  }\n\n  private getInspector(\n    viewDesignModel: IViewDesignModel,\n    targetExtensionContainerOptions: ISelectOption[] = []\n  ): IViewDesignerInspectorConfig {\n    const isExistingView = Boolean(viewDesignModel.lastUpdateTime);\n\n    const isCustomizationAllowed = isExistingView\n      ? this.rxOverlayService.isCustomizationEnabled('allowOverlay', viewDesignModel)\n      : true;\n\n    const availablePageComponents = this.rxViewComponentRegistryService\n      .getBundlePageComponents(this.rxBundleCacheService.bundleId)\n      .map((pageComponent) => ({\n        id: pageComponent.type,\n        name: pageComponent.name\n      }));\n\n    if (viewDesignModel.pageComponent && !this.rxViewComponentRegistryService.get(viewDesignModel.pageComponent)) {\n      availablePageComponents.unshift({\n        name: RX_VIEW_DEFINITION.unknownPageComponent.name,\n        id: viewDesignModel.pageComponent\n      });\n    }\n\n    const pageComponentControl = {\n      name: 'pageComponent',\n      component: SelectFormControlComponent,\n      options: {\n        label: 'Page component',\n        options: availablePageComponents,\n        beforeValueChange: (oldValue: string[], newValue: string[]) =>\n          this.viewDesignerFacade.viewModel$\n            .pipe(\n              take(1),\n              withLatestFrom(this.viewDesignerFacade.viewComponentModels$),\n              map(\n                ([viewModel, viewComponentModels]) =>\n                  !oldValue?.length &&\n                  newValue.length &&\n                  (viewModel.inputParams.length || viewModel.outputParams.length || !isEmpty(viewComponentModels))\n              )\n            )\n            .toPromise()\n            .then((isConfirmationRequired) =>\n              isConfirmationRequired\n                ? this.rxModalService.confirm({\n                    title: 'Warning',\n                    modalStyle: RX_MODAL.modalStyles.warning,\n                    message: 'The view canvas, input and output parameters will be cleared. Do you want to continue?'\n                  })\n                : true\n            ),\n        emptyOption: true\n      } as ISelectFormControlOptions\n    };\n\n    const extensionContainerControl = {\n      name: 'targetExtensionContainerGuid',\n      component: SelectFormControlComponent,\n      options: {\n        label: 'Extension container',\n        tooltip: new Tooltip(\n          `Select an extension container in the view to extend where record editor fields from this view will be injected.\n            The records defined for the view to extend and for this view must be associated one-to-one.`\n        ),\n        options: targetExtensionContainerOptions || [],\n        required: true,\n        beforeValueChange: (oldValue: string, newValue: string) => {\n          return this.isTargetRecordDefinitionChanged(oldValue, newValue)\n            .pipe(\n              withLatestFrom(this.viewDesignerFacade.viewComponentModels$),\n              map(\n                ([isRecordDefinitionChanged, viewComponentModels]) =>\n                  !isEmpty(viewComponentModels) && isRecordDefinitionChanged\n              ),\n              take(1)\n            )\n            .toPromise()\n            .then((isConfirmationRequired: boolean) =>\n              isConfirmationRequired\n                ? this.rxModalService.confirm({\n                    title: 'Warning',\n                    modalStyle: RX_MODAL.modalStyles.warning,\n                    message: 'The view canvas will be cleared. Do you want to continue?'\n                  })\n                : true\n            );\n        }\n      } as ISelectFormControlOptions\n    };\n\n    const layout: IFormSectionBuilderConfig[] = [\n      {\n        label: 'General',\n        controls: [\n          {\n            name: 'displayName',\n            component: TextFormControlComponent,\n            isDisabled: Boolean(viewDesignModel.lastUpdateTime),\n            options: {\n              required: true,\n              label: 'Name'\n            } as ITextFormControlOptions\n          },\n          {\n            name: 'description',\n            component: TextareaFormControlComponent,\n            isDisabled: !isCustomizationAllowed,\n            options: {\n              label: 'Description',\n              rows: 3\n            } as ITextareaFormControlOptions\n          },\n          {\n            name: 'layoutName',\n            component: TextFormControlComponent,\n            isDisabled: true,\n            options: {\n              label: 'Layout template'\n            } as ITextFormControlOptions\n          },\n          {\n            name: 'targetViewDefinitionName',\n            component: RxDefinitionPickerComponent,\n            isDisabled: !isCustomizationAllowed,\n            options: {\n              label: 'View to extend',\n              tooltip: new Tooltip(\n                `Select a view to extend in order to inject this view into it.\n                The view to extend may be read-only, but must contain at least one Record editor with an Extension container.`\n              ),\n              definitionType: RxDefinitionPickerType.View,\n              beforeValueChange: (oldValue: string[], newValue: string[]): Promise<boolean> =>\n                this.viewDesignerFacade.viewComponentModels$\n                  .pipe(first(), withLatestFrom(this.viewDesignerFacade.viewModel$))\n                  .toPromise()\n                  .then(([components, viewModel]) => {\n                    const isViewParametersPresent: boolean = Boolean(\n                      !oldValue?.length &&\n                        newValue.length &&\n                        (viewModel.inputParams.length || viewModel.outputParams.length)\n                    );\n\n                    let message: string;\n\n                    if (!isEmpty(components) && isViewParametersPresent) {\n                      message =\n                        'The view canvas, input and output parameters will be cleared. Do you want to continue?';\n                    } else if (!isEmpty(components)) {\n                      message = 'The view canvas will be cleared. Do you want to continue?';\n                    } else if (isViewParametersPresent) {\n                      message = 'The input and output parameters will be cleared. Do you want to continue?';\n                    }\n\n                    return message\n                      ? this.rxModalService.confirm({\n                          title: 'Warning',\n                          modalStyle: RX_MODAL.modalStyles.warning,\n                          message: message\n                        })\n                      : true;\n                  })\n            }\n          },\n          {\n            name: 'styles',\n            component: TagsFormControlComponent,\n            isDisabled: !isCustomizationAllowed,\n            options: {\n              label: 'CSS classes',\n              placeholder: 'Add CSS classes',\n              tooltip: new Tooltip('Enter CSS class names to apply to this view.'),\n              errorCheck: validateCssClassName\n            } as ITagsFormControlOptions\n          },\n          {\n            name: 'permissions',\n            component: RxPermissionEditorComponent,\n            isDisabled: !isCustomizationAllowed,\n            options: {\n              label: 'Permissions',\n              type: 'view'\n            } as IPermissionEditorComponentOptions\n          },\n          {\n            component: RxViewRevertCustomizationComponent\n          },\n          {\n            component: RxViewCustomizationOptionsComponent\n          }\n        ]\n      },\n      {\n        label: 'Input parameters',\n        controls: [\n          {\n            name: 'inputParams',\n            component: ListFormControlComponent,\n            isDisabled: !isCustomizationAllowed,\n            options: {\n              addItemText: 'Add',\n              emptyListText: 'No input parameters added.',\n              items: [\n                {\n                  label: 'Name',\n                  propertyName: 'name'\n                }\n              ]\n            } as IListFormControlOptions\n          }\n        ]\n      },\n      {\n        label: 'Output parameters',\n        controls: [\n          {\n            name: 'outputParams',\n            component: ListFormControlComponent,\n            isDisabled: !isCustomizationAllowed,\n            options: {\n              addItemText: 'Add',\n              emptyListText: 'No output parameters added.',\n              items: [\n                {\n                  label: 'Name',\n                  propertyName: 'name'\n                },\n                {\n                  label: 'Source',\n                  propertyName: 'source',\n                  dataDictionary$: this.expressionConfigurator.getDataDictionary(),\n                  operators: this.expressionConfigurator.getOperators()\n                }\n              ]\n            } as IListFormControlOptions\n          }\n        ]\n      }\n    ];\n\n    if (availablePageComponents.length) {\n      layout[0].controls.splice(2, 0, pageComponentControl as any);\n    }\n\n    // hide 'View to extend' and 'Extention container' controls if a page component is selected\n    if (viewDesignModel.pageComponent) {\n      layout.splice(1, 2);\n      layout[0].controls.splice(findIndex(layout[0].controls, { name: 'targetViewDefinitionName' }), 1);\n    }\n\n    if (viewDesignModel.targetViewDefinitionName) {\n      const targetViewDefinitionNameControlIndex = findIndex(layout[0].controls, { name: 'targetViewDefinitionName' });\n\n      layout[0].controls.splice(targetViewDefinitionNameControlIndex + 1, 0, extensionContainerControl as any);\n\n      // hide 'Page component' control if 'View to extend' is selected\n      layout[0].controls.splice(findIndex(layout[0].controls, { name: 'pageComponent' }), 1);\n\n      // hide 'Input parameters' and 'Output parameters' control if 'View to extend' is selected\n      layout.splice(1, 2);\n\n      this.viewDesignerFacade.updateViewProperties({\n        inputParams: [],\n        outputParams: []\n      });\n    }\n\n    return {\n      inspectorSectionConfigs: layout\n    } as IViewDesignerInspectorConfig;\n  }\n\n  private validateDisplayName(): Observable<IViewComponentDesignValidationIssue[]> {\n    // View definition names for validation will be loaded only in case if user changes view name.\n    return this.viewDesignerFacade\n      .getViewPropertyValue('displayName')\n      .pipe(\n        switchMap((displayName) =>\n          combineLatest([\n            of(\n              displayName\n                ? RX_RECORD_DEFINITION.validDefinitionNameRegex.test(displayName)\n                  ? null\n                  : {\n                      type: 'error',\n                      propertyName: 'displayName',\n                      description: 'View name can only contain letters, numbers, spaces, dashes, and underscores.'\n                    }\n                : {\n                    type: 'error',\n                    propertyName: 'displayName',\n                    description: 'View name cannot be blank.'\n                  }\n            ),\n            this.viewDesignerFacade.getViewPropertyValue('lastUpdateTime').pipe(\n              switchMap((lastUpdateTime) =>\n                displayName && !lastUpdateTime\n                  ? this.allViewDefinitionNamesByBundleId$.pipe(\n                      map((viewDefinitionNames): IViewComponentDesignValidationIssue => {\n                        const isNameAlreadyExists =\n                          !lastUpdateTime &&\n                          viewDefinitionNames?.some((name) =>\n                            this.rxStringService.caseInsensitiveIsEqual(displayName, name)\n                          );\n\n                        return isNameAlreadyExists\n                          ? {\n                              type: 'error',\n                              propertyName: 'displayName',\n                              description: 'View definition with this name already exists.'\n                            }\n                          : null;\n                      }),\n                      take(1)\n                    )\n                  : of(null)\n              ),\n              take(1)\n            )\n          ])\n        )\n      )\n      .pipe(map(compact));\n  }\n\n  private validateInputParams(): Observable<IViewComponentDesignValidationIssue[]> {\n    return this.viewDesignerFacade.getViewPropertyValue('inputParams').pipe(\n      map((inputParams) => {\n        const notBlankInputParams = flow((params) => _map(params, (param) => param.name), compact)(inputParams);\n        const uniqueInputParams = uniq(notBlankInputParams);\n        const validationIssues = [];\n\n        if (inputParams.length && notBlankInputParams.length !== inputParams.length) {\n          validationIssues.push({\n            type: 'error',\n            propertyName: 'inputParams',\n            description: 'Input parameter name cannot be blank.'\n          });\n        }\n\n        if (notBlankInputParams.length !== uniqueInputParams.length) {\n          validationIssues.push({\n            type: 'error',\n            propertyName: 'inputParams',\n            description: 'Input parameter names must be unique.'\n          });\n        }\n\n        return validationIssues;\n      })\n    );\n  }\n\n  private validateOutputParamExpressions(): Observable<IViewComponentDesignValidationIssue[]> {\n    return this.viewDesignerFacade.getViewPropertyValue('outputParams').pipe(\n      map((outputParams) => _map(outputParams, (param) => param.source).filter(Boolean)),\n      distinctUntilChanged(isEqual),\n      switchMap((sourceValues: string[]) =>\n        sourceValues.length\n          ? combineLatest(\n              sourceValues.map((value) =>\n                this.rxViewExpressionValidatorService.validate(value, 'source', 'Output parameter source')\n              )\n            ).pipe(map(flatten))\n          : of([])\n      )\n    );\n  }\n\n  private validateExtensionContainer(): Observable<IViewComponentDesignValidationIssue> {\n    return combineLatest([\n      this.viewDesignerFacade.getViewPropertyValue('targetViewDefinitionName'),\n      this.viewDesignerFacade.getViewPropertyValue('targetExtensionContainerGuid')\n    ]).pipe(\n      map(([targetViewDefinitionName, targetExtensionContainerGuid]) =>\n        targetViewDefinitionName && !targetExtensionContainerGuid\n          ? {\n              type: 'error',\n              propertyName: 'targetExtensionContainerGuid',\n              description: 'Extension container cannot be blank.'\n            }\n          : null\n      )\n    );\n  }\n\n  private getViewCommonDataDictionary(inputParams: IViewDesignModel['inputParams']): IDataDictionaryBranch {\n    return {\n      label: 'View',\n      expression: '${view.api}',\n      icon: 'd-icon-file_o',\n      expanded: true,\n      children: [\n        ...(isEmpty(inputParams)\n          ? []\n          : [\n              {\n                label: 'Input parameters',\n                expanded: true,\n                children: inputParams\n                  .filter((param) => param.name)\n                  .map((param) => ({\n                    label: param.name,\n                    expression: `$\\{view.inputParams.${param.name}}`,\n                    icon: 'd-icon-arrow_right_square_input'\n                  }))\n              }\n            ]),\n        {\n          label: 'Properties',\n          expanded: true,\n          children: [\n            {\n              label: 'Is valid',\n              expression: '${view.isValid}',\n              icon: 'd-icon-arrow_right_square_input'\n            }\n          ]\n        }\n      ]\n    };\n  }\n\n  private isTargetRecordDefinitionChanged(\n    previousTargetExtensionContainerGuid: string,\n    currentTargetExtensionContainerGuid: string\n  ): Observable<boolean> {\n    return this.targetViewDefinition$.pipe(\n      map((viewDefinition) => {\n        const previousTargetRecordDefinitionName = this.getTargetRecordDefinitionName(\n          viewDefinition,\n          previousTargetExtensionContainerGuid\n        );\n\n        const currentTargetRecordDefinitionName = this.getTargetRecordDefinitionName(\n          viewDefinition,\n          currentTargetExtensionContainerGuid\n        );\n\n        return previousTargetRecordDefinitionName !== currentTargetRecordDefinitionName;\n      })\n    );\n  }\n\n  private getTargetRecordDefinitionName(viewDefinition: IViewDefinition, targetExtensionContainerGuid: string): string {\n    const targetRecordEditor = this.rxViewDefinitionParserService.findParentComponentDefinition(\n      viewDefinition,\n      { guid: targetExtensionContainerGuid },\n      (definition) => definition.type === RxViewComponentType.RecordEditor\n    );\n\n    return targetRecordEditor?.propertiesByName.recordDefinitionName;\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\n/* tslint:disable:variable-name */\nexport const ViewDesignerCanvasItemApiToken = new InjectionToken<string>('CanvasItemApi');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CanvasItemApi {\n  core: any = null;\n\n  registerCoreApi(apiObject: object) {\n    this.core = apiObject;\n  }\n}\n","import { IViewComponentDropData } from './interfaces/view-designer-canvas.interfaces';\n\nexport class DropComponentData {\n  constructor(\n    public data: IViewComponentDropData,\n    public targetGuid: string,\n    public outletName: string,\n    public insertIndex: number\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { DropComponentData } from './drop-component-data.class';\nimport { IViewComponentDropData } from './interfaces/view-designer-canvas.interfaces';\n\n@Injectable()\nexport class ViewDesignerCanvasService {\n  private componentSelectSubject = new ReplaySubject<any>();\n  private componentRemoveSubject = new ReplaySubject<string>();\n  private componentDropSubject = new ReplaySubject<DropComponentData>();\n\n  componentDrop$: Observable<DropComponentData> = this.componentDropSubject.asObservable();\n  componentSelect$: Observable<any> = this.componentSelectSubject.asObservable();\n  componentRemove$: Observable<string> = this.componentRemoveSubject.asObservable();\n\n  selectComponent(guid: string): void {\n    this.componentSelectSubject.next(guid);\n  }\n\n  removeComponent(guid: string): void {\n    this.componentRemoveSubject.next(guid);\n  }\n\n  dropComponent(data: IViewComponentDropData, targetGuid: string, outletName: string, insertIndex: number): void {\n    this.componentDropSubject.next(new DropComponentData(data, targetGuid, outletName, insertIndex));\n  }\n}\n","import {\n  Component,\n  ComponentFactory,\n  ComponentRef,\n  Inject,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { RX_VIEW_DEFINITION } from '@helix/platform/view/api';\nimport { get, isEqual } from 'lodash';\nimport { IComponentDefinitionProperty } from '../../../../public-interfaces/component-definition-property.interface';\nimport { IViewDesignerCanvasItemApi } from '../../interfaces/view-designer-canvas-item-api.interface';\nimport {\n  IViewComponentDropData,\n  IViewDesignerCanvasLayout,\n  IViewDesignerCanvasOutlet\n} from '../../interfaces/view-designer-canvas.interfaces';\nimport { ViewDesignerCanvasItemApiToken } from '../../tokens/view-designer-canvas-item-api.token';\nimport { CanvasItemApi } from './canvas-item-api.service';\nimport { ViewDesignerCanvasService } from '../../view-designer-canvas.service';\n\n@Component({\n  selector: 'rx-canvas-item',\n  templateUrl: './canvas-item.component.html',\n  providers: [\n    {\n      provide: ViewDesignerCanvasItemApiToken,\n      useClass: CanvasItemApi\n    }\n  ]\n})\nexport class CanvasItemComponent implements OnChanges, OnDestroy, OnInit {\n  @Input()\n  layout: IViewDesignerCanvasLayout;\n\n  @Input()\n  interactive = true;\n\n  @Input()\n  isReadOnly: boolean;\n\n  @ViewChild('container', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  private componentReference: ComponentRef<any>;\n  private childContainers: Map<string, ComponentRef<any>> = new Map();\n\n  constructor(\n    private injector: Injector,\n    private renderer: Renderer2,\n    @Inject(ViewDesignerCanvasItemApiToken) private canvasItemApi: IViewDesignerCanvasItemApi,\n    private viewDesignerCanvasService: ViewDesignerCanvasService\n  ) {}\n\n  ngOnInit(): void {\n    this.initializeItemApi();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const layoutChange = changes.layout;\n\n    if (layoutChange) {\n      const prevGuid = get(layoutChange, 'previousValue.guid');\n      const currGuid = get(layoutChange, 'currentValue.guid');\n      const prevOutlets = get(layoutChange, 'previousValue.outlets') as IViewDesignerCanvasOutlet[];\n      const currOutlets = get(layoutChange, 'currentValue.outlets') as IViewDesignerCanvasOutlet[];\n\n      if (prevGuid !== currGuid) {\n        if (this.componentReference) {\n          this.cleanUp();\n        }\n\n        this.renderViewComponent();\n      } else if (!isEqual(prevOutlets, currOutlets)) {\n        currOutlets.forEach((outlet) => {\n          const ref = this.childContainers.get(outlet.name);\n\n          if (ref) {\n            ref.instance.outlet = outlet;\n            ref.instance.layout = this.layout;\n          }\n        });\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.cleanUp();\n  }\n\n  cleanUp(): void {\n    this.componentReference.destroy();\n    this.childContainers.clear();\n  }\n\n  registerOutlet(\n    outletName: string,\n    outletViewContainerRef: ViewContainerRef,\n    containerFactory: ComponentFactory<any>\n  ): ComponentRef<any> {\n    const currentOutlet = this.layout.outlets.find((outlet) => outlet.name === outletName);\n    const componentRef = this.renderContainerComponent(outletViewContainerRef, currentOutlet, containerFactory);\n\n    this.childContainers.set(outletName, componentRef);\n\n    return componentRef;\n  }\n\n  onSelectComponent(event: Event): void {\n    if (this.interactive) {\n      event.stopPropagation();\n\n      this.viewDesignerCanvasService.selectComponent(this.layout.guid);\n    }\n  }\n\n  dropComponent(\n    transferData: IViewComponentDropData,\n    insertIndex: number,\n    outletName: string = RX_VIEW_DEFINITION.defaultOutletName\n  ): void {\n    this.viewDesignerCanvasService.dropComponent(transferData, this.layout.guid, outletName, insertIndex);\n  }\n\n  private initializeItemApi(): void {\n    this.canvasItemApi.registerCoreApi({\n      dropComponent: this.dropComponent.bind(this),\n      registerOutlet: this.registerOutlet.bind(this)\n    });\n  }\n\n  private renderViewComponent(): void {\n    this.componentReference = this.container.createComponent(this.layout.factory, null, this.injector);\n\n    const instance = this.componentReference.instance as IComponentDefinitionProperty;\n    const nativeElement = this.componentReference.location.nativeElement;\n\n    instance.guid = this.layout.guid;\n    instance.model = this.layout.model;\n    instance.isReadOnly = this.isReadOnly;\n\n    this.renderer.setAttribute(nativeElement, 'rx-view-component-id', this.layout.guid);\n  }\n\n  private renderContainerComponent(\n    outletViewContainerRef: ViewContainerRef,\n    outlet: IViewDesignerCanvasOutlet,\n    containerFactory: ComponentFactory<any>\n  ): ComponentRef<any> {\n    const containerRef = outletViewContainerRef.createComponent(containerFactory);\n\n    containerRef.instance.outlet = outlet;\n    containerRef.instance.layout = this.layout;\n    containerRef.instance.isReadOnly = this.isReadOnly;\n\n    return containerRef;\n  }\n}\n","<div [hidden]=\"layout?.model?.hiddenOnCanvas$ | async\" (click)=\"onSelectComponent($event)\">\n  <ng-container #container></ng-container>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { DropComponentData } from './drop-component-data.class';\nimport { IViewComponentDropData, IViewDesignerCanvasLayout } from './interfaces/view-designer-canvas.interfaces';\nimport { ViewDesignerCanvasService } from './view-designer-canvas.service';\n\n@Component({\n  selector: 'rx-view-designer-canvas',\n  templateUrl: './view-designer-canvas.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [ViewDesignerCanvasService]\n})\nexport class ViewDesignerCanvasComponent implements OnInit {\n  @Input()\n  layout: IViewDesignerCanvasLayout;\n\n  @Input()\n  isReadOnly: boolean;\n\n  @Output()\n  componentSelect: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  componentDrop: EventEmitter<DropComponentData> = new EventEmitter<DropComponentData>();\n\n  @Output()\n  componentRemove: EventEmitter<string> = new EventEmitter<string>();\n\n  @Output()\n  beforeComponentDropInRoot = new EventEmitter<IViewComponentDropData>();\n\n  constructor(protected viewDesignerCanvasService: ViewDesignerCanvasService) {}\n\n  ngOnInit(): void {\n    this.viewDesignerCanvasService.componentSelect$.subscribe((event) => {\n      this.componentSelect.emit(event);\n    });\n\n    this.viewDesignerCanvasService.componentRemove$.subscribe((event) => {\n      this.componentRemove.emit(event);\n    });\n\n    this.viewDesignerCanvasService.componentDrop$.subscribe((event) => {\n      this.componentDrop.emit(event);\n    });\n  }\n}\n","<rx-canvas-item class=\"root-item\" *ngIf=\"layout\" [layout]=\"layout\" [isReadOnly]=\"isReadOnly\"></rx-canvas-item>\n","import { ComponentRef, Injectable } from '@angular/core';\nimport {\n  IViewComponentDropData,\n  IViewComponentDropPredicateData,\n  IViewDesignerCanvasLayout\n} from '../../interfaces/view-designer-canvas.interfaces';\nimport { find, isFunction } from 'lodash';\nimport { RxViewComponentType } from '@helix/platform/view/api';\nimport { DropListOrientation } from '@angular/cdk/drag-drop';\nimport { Observable, ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class CanvasOutletHelperService {\n  dropListOrientation: DropListOrientation;\n  parentOutletComponent: any;\n  containerComponentInstance: ComponentRef<any>;\n  skipParentPredicate: boolean;\n  dropPredicate: (data: IViewComponentDropPredicateData) => boolean;\n\n  private beforeViewComponentDropSubject = new ReplaySubject<IViewComponentDropData>();\n  public beforeViewComponentDrop$ = this.beforeViewComponentDropSubject.asObservable();\n\n  setBeforeViewComponentDropState(viewComponentDropData: IViewComponentDropData): void {\n    this.beforeViewComponentDropSubject.next(viewComponentDropData);\n  }\n\n  canBeDropped(data: IViewComponentDropPredicateData): boolean {\n    let canBeInsertedInto = true;\n\n    if (isFunction(data.draggedViewComponentDescriptor.canBeInsertedInto)) {\n      canBeInsertedInto = data.draggedViewComponentDescriptor.canBeInsertedInto(\n        data.dropTargetViewComponentWithParents.map((component) => component.type)\n      );\n    }\n\n    if (canBeInsertedInto) {\n      canBeInsertedInto =\n        (!data.draggedViewComponentGuid ||\n          !this._isParentRecordEditorChanging(\n            (this.containerComponentInstance['layout'] as IViewDesignerCanvasLayout).viewComponentWithParents,\n            data.draggedViewComponentParents\n          )) &&\n        this.componentDropPredicate(data);\n    }\n\n    return canBeInsertedInto;\n  }\n\n  componentDropPredicate(data: IViewComponentDropPredicateData, skipPredicate = false): boolean {\n    return (\n      (skipPredicate || this.dropPredicate(data)) &&\n      (!this.parentOutletComponent || this.parentOutletComponent.componentDropPredicate(data, this.skipParentPredicate))\n    );\n  }\n\n  private _isParentRecordEditorChanging(\n    targetContainerParentComponents: { guid: string; type: string }[],\n    sourceComponentParentComponents: { guid: string; type: string }[]\n  ): boolean {\n    const targetRecordEditor = find(targetContainerParentComponents, {\n      type: RxViewComponentType.RecordEditor\n    });\n\n    const sourceRecordEditor = find(sourceComponentParentComponents, {\n      type: RxViewComponentType.RecordEditor\n    });\n\n    const isMovingBetweenRecordEditors =\n      Boolean(targetRecordEditor) && Boolean(sourceRecordEditor) && targetRecordEditor.guid !== sourceRecordEditor.guid;\n\n    const isDroppingOutsideRecordEditor = !targetRecordEditor && Boolean(sourceRecordEditor);\n    const isDroppingInsideRecordEditor = !sourceRecordEditor && Boolean(targetRecordEditor);\n\n    return isMovingBetweenRecordEditors || isDroppingOutsideRecordEditor || isDroppingInsideRecordEditor;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { IViewComponentDragData } from '../../interfaces/view-designer-canvas.interfaces';\nimport { IViewDesignerCanvasColumn, IViewDesignerCanvasLayout } from '../../interfaces/view-designer-canvas.interfaces';\nimport { CdkDrag, CdkDragDrop, CdkDragEnter, CdkDragStart, CdkDropList } from '@angular/cdk/drag-drop';\nimport { isString, throttle } from 'lodash';\nimport { asapScheduler } from 'rxjs';\nimport { ViewDesignerCanvasService } from '../../view-designer-canvas.service';\nimport { CanvasOutletHelperService } from '../canvas-outlet/canvas-outlet-helper.service';\nimport { DropListOrientation } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'rx-canvas-item-column',\n  templateUrl: './canvas-item-column.component.html',\n  styleUrls: ['./canvas-item-column.component.scss']\n})\nexport class CanvasItemColumnComponent implements OnInit {\n  @Input()\n  isReadOnly: boolean;\n\n  @Input()\n  colIndex: number;\n\n  @Input()\n  column: IViewDesignerCanvasColumn;\n\n  @Input()\n  layout: IViewDesignerCanvasLayout;\n\n  @Output()\n  dropListDropped = new EventEmitter<CdkDragDrop<{ columnIndex: number }>>();\n\n  dropListEnterPredicateBind = throttle(this.dropListEnterPredicate.bind(this), 200);\n\n  dropListOrientation: DropListOrientation;\n\n  constructor(\n    private viewDesignerCanvasService: ViewDesignerCanvasService,\n    private canvasOutletHelperService: CanvasOutletHelperService\n  ) {}\n\n  ngOnInit(): void {\n    this.dropListOrientation = this.canvasOutletHelperService.dropListOrientation;\n  }\n\n  getViewComponentDragData(layout: IViewDesignerCanvasLayout): IViewComponentDragData {\n    return {\n      draggedViewComponentGuid: layout.guid,\n      draggedViewComponentDescriptor: layout.descriptor,\n      draggedViewComponentParents: this.layout.viewComponentWithParents\n    };\n  }\n\n  onDragEntered(event: CdkDragEnter) {\n    this.enforceDragToSelf(event.container);\n  }\n\n  onDragStarted(event: CdkDragStart) {\n    this.enforceDragToSelf(event.source.dropContainer);\n  }\n\n  remove(event: Event, layout: IViewDesignerCanvasLayout): void {\n    event.stopPropagation();\n\n    this.viewDesignerCanvasService.removeComponent(layout.guid);\n  }\n\n  onSelectComponent(event: Event, layout: IViewDesignerCanvasLayout): void {\n    event.stopPropagation();\n\n    this.viewDesignerCanvasService.selectComponent(layout.guid);\n  }\n\n  trackByFn(index: number, item: IViewDesignerCanvasLayout): string {\n    return item.guid;\n  }\n\n  dropListEnterPredicate(event: CdkDrag<IViewComponentDragData>): boolean {\n    return this.canvasOutletHelperService.canBeDropped({\n      ...event.data,\n      dropTargetViewComponentWithParents: this.layout.viewComponentWithParents || []\n    });\n  }\n\n  // todo remove after\n  // https://github.com/angular/components/issues/16671\n  // will be fixed\n  private enforceDragToSelf(dropList: CdkDropList) {\n    let siblings = dropList.connectedTo as CdkDropList[];\n\n    siblings = siblings.reduce((result, item) => {\n      if (isString(item)) {\n        const listInstance = CdkDropList['_dropLists'].find((list) => list.id === item);\n\n        if (listInstance) {\n          result.push(listInstance);\n        }\n      }\n\n      return result;\n    }, []);\n\n    const dropListRef = dropList._dropListRef;\n\n    asapScheduler.schedule(() => {\n      dropListRef.connectedTo(siblings.map((list) => list._dropListRef));\n    });\n  }\n}\n","<div\n  cdkDropList\n  [cdkDropListOrientation]=\"dropListOrientation\"\n  [cdkDropListConnectedTo]=\"column.dndListIds\"\n  (cdkDropListDropped)=\"dropListDropped.next($event)\"\n  [cdkDropListEnterPredicate]=\"dropListEnterPredicateBind\"\n  [cdkDropListData]=\"{ columnIndex: colIndex }\"\n  [id]=\"column.listId\"\n>\n  <!-- mw-100 class is used for DnD to restrict component width, see DRD21-5845 for more details -->\n  <div\n    class=\"canvas-item-wrapper mw-100 canvas-{{ layout.descriptor.type }}\"\n    cdkDrag\n    [cdkDragData]=\"getViewComponentDragData(layout)\"\n    [cdkDragDisabled]=\"isReadOnly || layout.descriptor.options?.static\"\n    (cdkDragEntered)=\"onDragEntered($event)\"\n    (cdkDragStarted)=\"onDragStarted($event)\"\n    *ngFor=\"let layout of column.children; let last = last; trackBy: trackByFn\"\n  >\n    <div class=\"canvas-item\" [class.active]=\"layout.isSelected$ | async\" (click)=\"onSelectComponent($event, layout)\">\n      <div class=\"canvas-item-header\" [hidden]=\"!(layout.isSelected$ | async)\" cdkDragHandle>\n        <span class=\"icon d-icon-dots mr-1\"></span>\n        <span class=\"label\">{{ layout.label }}</span>\n\n        <button\n          (click)=\"remove($event, layout)\"\n          *ngIf=\"!isReadOnly && !layout.descriptor.options?.static\"\n          class=\"remove-button btn btn-sm btn-link d-icon-cross_adapt p-0 px-1\"\n          type=\"button\"\n          aria-label=\"Close\"\n        ></button>\n      </div>\n\n      <rx-canvas-item [layout]=\"layout\" [isReadOnly]=\"isReadOnly\"></rx-canvas-item>\n    </div>\n  </div>\n</div>\n","import { Component, Inject, Input } from '@angular/core';\nimport {\n  IViewComponentDragData,\n  IViewComponentDropData,\n  IViewDesignerCanvasColumn,\n  IViewDesignerCanvasLayout,\n  IViewDesignerCanvasOutlet\n} from '../../interfaces/view-designer-canvas.interfaces';\nimport { ViewDesignerCanvasItemApiToken } from '../../tokens/view-designer-canvas-item-api.token';\nimport { CanvasItemApi } from '../canvas-item/canvas-item-api.service';\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { CanvasOutletHelperService } from '../canvas-outlet/canvas-outlet-helper.service';\n\n@Component({\n  selector: 'rx-canvas-item-container',\n  templateUrl: './canvas-item-container.component.html',\n  styleUrls: ['./canvas-item-container.component.scss']\n})\nexport class CanvasItemContainerComponent {\n  @Input()\n  outlet: IViewDesignerCanvasOutlet;\n\n  @Input()\n  isReadOnly: boolean;\n\n  @Input()\n  layout: IViewDesignerCanvasLayout;\n\n  constructor(\n    @Inject(ViewDesignerCanvasItemApiToken) protected canvasItemApi: CanvasItemApi,\n    protected canvasOutletHelperService: CanvasOutletHelperService\n  ) {}\n\n  trackByColFn(index: number, item: IViewDesignerCanvasColumn): string {\n    return item.listId;\n  }\n\n  onDropListDropped(event: CdkDragDrop<{ columnIndex: number }>) {\n    const viewComponentDropData: IViewComponentDropData = {\n      ...(event.item.data as IViewComponentDragData),\n      initialPropertiesByName: {},\n      columnIndex: event.container.data.columnIndex\n    };\n\n    this.canvasOutletHelperService.setBeforeViewComponentDropState(viewComponentDropData);\n\n    if (!viewComponentDropData.preventDrop) {\n      this.canvasItemApi.core.dropComponent(viewComponentDropData, event.currentIndex, this.outlet.name);\n    }\n  }\n}\n","<div class=\"row\">\n  <div\n    *ngFor=\"let column of outlet.columns; let colIndex = index; let isLastCol = last; trackBy: trackByColFn\"\n    class=\"{{ column.span ? 'col-' + column.span : 'col' }}\"\n    [ngClass]=\"{ 'col-border': !isLastCol }\"\n  >\n    <rx-canvas-item-column\n      [ngClass]=\"{ 'mb-3': !isLastCol }\"\n      [isReadOnly]=\"isReadOnly\"\n      [colIndex]=\"colIndex\"\n      [column]=\"column\"\n      [layout]=\"layout\"\n      (dropListDropped)=\"onDropListDropped($event)\"\n    ></rx-canvas-item-column>\n  </div>\n</div>\n","import {\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  OnDestroy,\n  Optional,\n  Output,\n  SkipSelf,\n  Type,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { DropListOrientation } from '@angular/cdk/drag-drop';\nimport { RX_VIEW_DEFINITION } from '@helix/platform/view/api';\nimport { IViewDesignerCanvasItemApi } from '../../interfaces/view-designer-canvas-item-api.interface';\nimport { ViewDesignerCanvasItemApiToken } from '../../tokens/view-designer-canvas-item-api.token';\nimport {\n  IViewComponentDropData,\n  IViewComponentDropPredicateData\n} from '../../interfaces/view-designer-canvas.interfaces';\nimport { CanvasOutletHelperService } from './canvas-outlet-helper.service';\nimport { CanvasItemContainerComponent } from '../canvas-item-container/canvas-item-container.component';\nimport { ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'rx-canvas-outlet',\n  templateUrl: './canvas-outlet.component.html',\n  providers: [CanvasOutletHelperService]\n})\nexport class CanvasOutletComponent implements OnInit, OnDestroy {\n  containerComponentInstance: any = null;\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  @Input()\n  name = RX_VIEW_DEFINITION.defaultOutletName;\n\n  @Input()\n  skipParentPredicate = false;\n\n  @Input()\n  containerComponent: Type<any>;\n\n  @Input()\n  dropListOrientation: DropListOrientation = 'vertical';\n\n  @ViewChild('container', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  @Output()\n  beforeViewComponentDrop = new EventEmitter<IViewComponentDropData>();\n\n  @Input()\n  dropPredicate: (data: IViewComponentDropPredicateData) => boolean = () => true;\n\n  constructor(\n    @Inject(ViewDesignerCanvasItemApiToken) private canvasItemApi: IViewDesignerCanvasItemApi,\n    @SkipSelf() @Optional() private parentOutletComponent: CanvasOutletComponent,\n    private canvasOutletHelperService: CanvasOutletHelperService,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {}\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  ngOnInit(): void {\n    this.containerComponentInstance = this.canvasItemApi.core.registerOutlet(\n      this.name,\n      this.container,\n      this.componentFactoryResolver.resolveComponentFactory(this.containerComponent || CanvasItemContainerComponent)\n    ).instance;\n\n    this.canvasOutletHelperService.dropListOrientation = this.dropListOrientation;\n    this.canvasOutletHelperService.parentOutletComponent = this.parentOutletComponent;\n    this.canvasOutletHelperService.dropPredicate = this.dropPredicate;\n    this.canvasOutletHelperService.skipParentPredicate = this.skipParentPredicate;\n    this.canvasOutletHelperService.containerComponentInstance = this.containerComponentInstance;\n\n    this.canvasOutletHelperService.beforeViewComponentDrop$.pipe(takeUntil(this.destroyed$)).subscribe((event) => {\n      this.beforeViewComponentDrop.emit(event);\n    });\n  }\n\n  canBeDropped(data: IViewComponentDropPredicateData): boolean {\n    return this.canvasOutletHelperService.canBeDropped(data);\n  }\n\n  componentDropPredicate(data: IViewComponentDropPredicateData, skipPredicate = false): boolean {\n    return this.canvasOutletHelperService.componentDropPredicate(data, skipPredicate);\n  }\n}\n","<ng-container #container></ng-container>\n","import { Component } from '@angular/core';\nimport { CanvasItemComponent } from '../view-designer-canvas/component/canvas-item/canvas-item.component';\nimport { IViewDesignerCanvasOutlet } from '../view-designer-canvas/interfaces/view-designer-canvas.interfaces';\nimport { RX_VIEW_DEFINITION } from '@helix/platform/view/api';\nimport { ViewDesignerCanvasComponent } from '../view-designer-canvas/view-designer-canvas.component';\n\n@Component({\n  selector: 'rx-designer',\n  templateUrl: './designer.component.html',\n  styleUrls: ['./designer.component.scss']\n})\nexport class DesignerComponent {\n  defaultOutletName = RX_VIEW_DEFINITION.defaultOutletName;\n\n  constructor(\n    public canvasItemComponent: CanvasItemComponent,\n    public viewDesignerCanvasComponent: ViewDesignerCanvasComponent\n  ) {}\n\n  trackByFn(index: number, item: IViewDesignerCanvasOutlet): string {\n    return item.name;\n  }\n}\n","<rx-canvas-outlet\n  [class.border]=\"canvasItemComponent.layout.outlets.length > 1\"\n  [class.default-outlet]=\"outlet.name === defaultOutletName\"\n  *ngFor=\"let outlet of canvasItemComponent.layout.outlets; trackBy: trackByFn\"\n  [name]=\"outlet.name\"\n  (beforeViewComponentDrop)=\"viewDesignerCanvasComponent.beforeComponentDropInRoot.emit($event)\"\n></rx-canvas-outlet>\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { concatMap, filter, first, map, switchMap, switchMapTo, take, tap, withLatestFrom } from 'rxjs/operators';\nimport { flow, isEmpty, mergeWith, reduce } from 'lodash';\nimport { ViewDesignerFacade } from '../+state/view-designer.facade';\nimport { IViewComponentDesignModels } from '../interfaces/view-component-design-models.interface';\nimport { IViewDesignModelState } from '../interfaces/view-design-model-state.interface';\nimport { findAllParentComponentGuids } from '../core/layout-helpers';\nimport {\n  IViewComponentDescriptor,\n  IViewLayout,\n  RxViewComponentRegistryService,\n  RxViewComponentType,\n  ViewDefinitionType,\n  RxViewLayout,\n  BwfViewComponentType\n} from '@helix/platform/view/api';\nimport { RxViewDesignerModels } from '../core/view-designer-models.service';\nimport {\n  IViewDesignerCanvasColumn,\n  IViewDesignerCanvasLayout,\n  IViewDesignerCanvasOutlet\n} from '../components/view-designer-canvas';\nimport { DesignerComponent } from '../components/designer-component/designer.component';\nimport { IBreadcrumbItem, IValidationIssueSection } from '@helix/platform/ui-kit';\nimport { RX_APPLICATION } from '@helix/platform/shared/api';\nimport { IViewDesignerValidationState } from '../+state/view-designer-validation.reducer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDesignerHelperService {\n  designerComponentFactory = this.componentFactoryResolver.resolveComponentFactory(DesignerComponent);\n  canvasDndListIds: string[] = [];\n\n  extensionViewAllowedComponentTypes = new Set([\n    RxViewComponentType.Container,\n    RxViewComponentType.RichText,\n    RxViewComponentType.RecordEditor,\n\n    RxViewComponentType.Character,\n    RxViewComponentType.Textarea,\n    RxViewComponentType.Boolean,\n    RxViewComponentType.Date,\n    RxViewComponentType.DateTime,\n    RxViewComponentType.Time,\n    RxViewComponentType.Decimal,\n    RxViewComponentType.Floating,\n    RxViewComponentType.Integer,\n    RxViewComponentType.LocalizedCharacter,\n    RxViewComponentType.Selection,\n    RxViewComponentType.SelectGroup,\n    RxViewComponentType.RichTextarea,\n    BwfViewComponentType.DynamicNamedList\n  ]);\n\n  constructor(\n    private viewDesignerFacade: ViewDesignerFacade,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private viewDesignerModels: RxViewDesignerModels\n  ) {}\n\n  canvasLayout$ = this.getRecursiveViewLayoutGuids().pipe(\n    switchMap((guids) =>\n      guids.length\n        ? this.viewDesignerFacade.areViewModelsReady$.pipe(\n            // Wait until component models will be instantiated after save view definition.\n            filter(Boolean),\n            switchMapTo(this.viewDesignerFacade.viewDesignerModelState$.pipe(take(1)))\n          )\n        : this.viewDesignerFacade.viewDesignerModelState$.pipe(take(1))\n    ),\n    map((designModelState): IViewDesignerCanvasLayout => {\n      const viewModel = designModelState.viewDesignModel;\n      const componentModels = designModelState.viewComponentDesignModels;\n\n      this.canvasDndListIds.length = 0;\n\n      return {\n        guid: viewModel.guid,\n        factory: this.designerComponentFactory,\n        outlets: viewModel.layout.outlets.map((outlet) => ({\n          name: outlet.name,\n          columns: outlet.columns.map((column, i) => {\n            const listId = String(`${viewModel.guid}-${outlet.name}-${i}`);\n\n            // do not allow components to be dropped in the root of a SHELL view\n            if (viewModel.type !== ViewDefinitionType.Shell) {\n              this.canvasDndListIds.push(listId);\n            }\n\n            return {\n              ...column,\n              children: column.children.map((childGuid) =>\n                this.initializeCanvasItem(childGuid, componentModels, this.canvasDndListIds)\n              ),\n              listId,\n              dndListIds: this.canvasDndListIds\n            } as IViewDesignerCanvasColumn;\n          })\n        })),\n        model: null,\n        descriptor: null,\n        isSelected$: of(false)\n      };\n    }),\n    tap(() => {\n      // required for DND\n      // https://github.com/angular/components/issues/16671\n      this.canvasDndListIds.reverse();\n    })\n  );\n\n  private viewBreadcrumbItem$ = this.viewDesignerFacade.getViewPropertyValue('displayName').pipe(\n    concatMap((displayName) =>\n      of(\n        displayName\n          ? displayName === RX_APPLICATION.shellDefinitionName\n            ? 'Application shell'\n            : displayName\n          : '<New view>'\n      )\n    ),\n    withLatestFrom(this.viewDesignerFacade.viewModelGuid$),\n    map(\n      ([viewBreadcrumbLabel, guid]): IBreadcrumbItem => ({\n        label: viewBreadcrumbLabel,\n        data: { guid }\n      })\n    )\n  );\n\n  private selectedComponentBreadcrumbItems$ = this.viewDesignerFacade.selectedComponentGuid$.pipe(\n    switchMap((componentGuid) =>\n      componentGuid\n        ? combineLatest([\n            this.viewDesignerFacade.breadcrumbs$,\n            this.viewDesignerFacade.getParentComponentGuid(componentGuid)\n          ]).pipe(\n            withLatestFrom(this.viewDesignerFacade.viewComponentModels$),\n            map(([[breadcrumbs], viewComponentModels]) =>\n              // Handle empty viewComponentModels state during view definition save.\n              isEmpty(viewComponentModels)\n                ? []\n                : findAllParentComponentGuids(componentGuid, viewComponentModels).map((parentGuid) => {\n                    let label = breadcrumbs[parentGuid];\n\n                    if (!label) {\n                      const component = viewComponentModels[parentGuid];\n                      const descriptor = this.rxViewComponentRegistryService.get(component.type);\n\n                      label = descriptor.name;\n                    }\n\n                    return { label, data: { guid: parentGuid } } as IBreadcrumbItem;\n                  })\n            )\n          )\n        : of([])\n    )\n  );\n\n  breadcrumbItems$ = combineLatest([this.viewBreadcrumbItem$, this.selectedComponentBreadcrumbItems$]).pipe(\n    map(([viewItem, componentItems]) => [viewItem, ...componentItems])\n  );\n\n  validationIssues$ = this.viewDesignerFacade.validationIssues$.pipe(\n    withLatestFrom(this.viewDesignerFacade.viewDesignerModelState$),\n    map(\n      ([validationIssuesState, modelState]: [\n        IViewDesignerValidationState,\n        IViewDesignModelState\n      ]): IValidationIssueSection[] =>\n        flow(\n          (state: IViewDesignerValidationState) =>\n            mergeWith({ ...state.issues }, state.expressionIssues, (issues = [], expressionIssues = []) =>\n              issues.concat(expressionIssues)\n            ),\n          (issuesByComponentGuid) =>\n            reduce(\n              issuesByComponentGuid,\n              (result, issues, guid) => {\n                let name;\n\n                if (modelState.viewDesignModel?.guid === guid) {\n                  name = modelState.viewDesignModel.displayName || 'View designer';\n                } else if (modelState.viewComponentDesignModels[guid]) {\n                  const type = modelState.viewComponentDesignModels[guid].type;\n                  const descriptor = this.rxViewComponentRegistryService.get(type);\n\n                  name = descriptor && descriptor.name;\n                }\n\n                if (name) {\n                  result.push({\n                    title: name,\n                    issues: issues.map((issue) => ({\n                      type: issue.type,\n                      description: issue.description,\n                      disableCorrection: issue.disableCorrection,\n                      data: {\n                        guid,\n                        propertyName: issue.propertyName,\n                        data: issue.data\n                      }\n                    }))\n                  } as IValidationIssueSection);\n                }\n\n                return result;\n              },\n              []\n            )\n        )(validationIssuesState)\n    )\n  );\n\n  getLicensedComponents(): Observable<IViewComponentDescriptor[]> {\n    return this.rxViewComponentRegistryService.getLicensedComponents().pipe(\n      first(),\n      map((components) =>\n        components.filter(\n          (component) =>\n            !this.rxViewComponentRegistryService.isDataComponentDescriptor(component) &&\n            !component.hidden &&\n            !component.isPageComponent\n        )\n      )\n    );\n  }\n\n  private getRecursiveViewLayoutGuids(): Observable<string[]> {\n    return this.viewDesignerFacade\n      .getViewPropertyValue('layout')\n      .pipe(switchMap((layout) => this.getRecursiveComponentLayoutGuids(layout)));\n  }\n\n  private getRecursiveComponentLayoutGuids(layout: IViewLayout): Observable<string[]> {\n    const guids = RxViewLayout.getViewLayoutChildGuids(layout);\n\n    return guids.length\n      ? combineLatest(\n          guids.map((guid) =>\n            this.viewDesignerFacade\n              .getComponentLayout(guid)\n              .pipe(\n                switchMap((childLayout) =>\n                  childLayout\n                    ? this.getRecursiveComponentLayoutGuids(childLayout).pipe(\n                        map((childGuids) => [...childGuids, ...guids])\n                      )\n                    : of(guids)\n                )\n              )\n          )\n        )\n      : of([]);\n  }\n\n  private initializeCanvasItem(\n    componentGuid: string,\n    componentModels: IViewComponentDesignModels,\n    dndListIds: string[]\n  ): IViewDesignerCanvasLayout {\n    const componentModel = componentModels[componentGuid];\n    const descriptor = this.rxViewComponentRegistryService.get(componentModel.type);\n\n    const canvasLayout: IViewDesignerCanvasLayout = {\n      guid: componentModel.guid,\n      descriptor,\n      factory: descriptor.designComponentFactory,\n      model: this.viewDesignerModels.get(componentModel.guid),\n      outlets: [],\n      isSelected$: this.viewDesignerFacade.selectedComponentGuid$.pipe(map((guid) => guid === componentModel.guid)),\n      label: descriptor.name\n    };\n\n    if (componentModel.layout) {\n      canvasLayout.viewComponentWithParents = findAllParentComponentGuids(componentModel.guid, componentModels).map(\n        (guid) => ({ guid, type: componentModels[guid].type })\n      );\n\n      componentModel.layout.outlets.forEach((outlet) => {\n        const canvasOutlet: IViewDesignerCanvasOutlet = {\n          name: outlet.name,\n\n          columns: outlet.columns.map((column, i) => {\n            const listId = `${componentModel.guid}-${outlet.name}-${i}`;\n\n            dndListIds.push(listId);\n\n            return {\n              children: column.children.map((childGuid) =>\n                this.initializeCanvasItem(childGuid, componentModels, dndListIds)\n              ),\n              span: column.span,\n              listId,\n              dndListIds\n            };\n          })\n        };\n\n        canvasLayout.outlets.push(canvasOutlet);\n      });\n    }\n\n    return canvasLayout;\n  }\n}\n","export const RX_VIEW_DESIGNER = {\n  stencilGroups: {\n    basicComponents: {\n      label: 'Basic components'\n    },\n    chatbotComponents: {\n      label: 'Chatbot components'\n    },\n    recordEditorInputs: {\n      label: 'Record editor inputs'\n    }\n  },\n\n  inspectorTabs: {\n    viewProperties: {\n      tabId: 0\n    },\n\n    componentProperties: {\n      tabId: 1\n    },\n\n    validationIssues: {\n      tabId: 2\n    }\n  }\n};\n","import { ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { RxStringService } from '@helix/platform/utils';\nimport { groupBy, lowerCase, map as _map, sortBy, flow } from 'lodash';\nimport { debounceTime, map, startWith } from 'rxjs/operators';\nimport { IViewComponentGroup } from './view-component-group.interface';\nimport { IViewComponentDescriptor } from '@helix/platform/view/api';\nimport { RX_VIEW_DESIGNER } from '../../view-designer.constant';\nimport { IViewComponentDragData } from '../view-designer-canvas';\nimport { combineLatest, Observable, ReplaySubject } from 'rxjs';\n\n@Component({\n  selector: 'rx-view-designer-palette',\n  templateUrl: './view-designer-palette.component.html',\n  styleUrls: ['./view-designer-palette.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ViewDesignerPaletteComponent implements OnInit, OnDestroy {\n  @Input()\n  set components(value: IViewComponentDescriptor[]) {\n    this.componentsSubject$.next(value);\n  }\n\n  @Input()\n  allowedDropListIds: string[] = [];\n\n  filterFormControl = new FormControl();\n  viewComponentGroups$: Observable<IViewComponentGroup[]>;\n\n  private componentsSubject$ = new ReplaySubject<IViewComponentDescriptor[]>(1);\n\n  constructor(public stringService: RxStringService) {}\n\n  ngOnInit(): void {\n    this.viewComponentGroups$ = combineLatest([\n      this.filterFormControl.valueChanges.pipe(debounceTime(200), startWith(null)),\n      this.componentsSubject$\n    ]).pipe(\n      map(([componentNameFilterText, viewComponentDescriptors]) =>\n        flow(\n          (descriptors: IViewComponentDescriptor[]) => groupBy(descriptors, (component) => component.group),\n          (groupsByName): IViewComponentGroup[] =>\n            _map(groupsByName, (components, groupName) => ({\n              name: groupName,\n              components: sortBy(components, (component) =>\n                isFinite(component.index) ? component.index : component.name\n              )\n            })),\n          (groups) =>\n            sortBy(groups, (group) => {\n              if (group.name === RX_VIEW_DESIGNER.stencilGroups.basicComponents.label) {\n                return '1';\n              } else if (group.name === RX_VIEW_DESIGNER.stencilGroups.recordEditorInputs.label) {\n                return '2';\n              } else {\n                return '3' + lowerCase(group.name);\n              }\n            }),\n          (groups) =>\n            componentNameFilterText\n              ? groups\n                  .map((group) => ({\n                    ...group,\n                    components: group.components.filter((component) =>\n                      this.stringService.caseInsensitiveSearch(component.name, componentNameFilterText)\n                    )\n                  }))\n                  .filter((group) => group.components.length)\n              : groups\n        )(viewComponentDescriptors)\n      )\n    );\n  }\n\n  getViewComponentDragData(descriptor: IViewComponentDescriptor): IViewComponentDragData {\n    return {\n      draggedViewComponentDescriptor: descriptor\n    };\n  }\n\n  trackByNameFn<T extends { name: string }>(index, item: T): string {\n    return item.name;\n  }\n\n  ngOnDestroy(): void {\n    this.componentsSubject$.complete();\n  }\n}\n","<div class=\"search-field-container\">\n  <adapt-rx-search\n    [formControl]=\"filterFormControl\"\n    rx-id=\"stencil-search-field\"\n    placeholder=\"Search\"\n  ></adapt-rx-search>\n</div>\n\n<adapt-accordion [config]=\"{ multiselect: true, tabs: [] }\">\n  <adapt-accordion-tab\n    *ngFor=\"let viewComponentsGroup of viewComponentGroups$ | async; trackBy: trackByNameFn\"\n    [title]=\"viewComponentsGroup.name\"\n    [attr.rx-id]=\"stringService.toRxId(viewComponentsGroup.name)\"\n    [isOpen]=\"true\"\n  >\n    <div\n      class=\"group-items-container\"\n      cdkDropList\n      cdkDropListSortingDisabled\n      [cdkDropListConnectedTo]=\"allowedDropListIds\"\n    >\n      <div\n        *ngFor=\"let viewComponent of viewComponentsGroup.components; trackBy: trackByNameFn\"\n        [attr.rx-id]=\"viewComponent.type\"\n        class=\"group-item\"\n        cdkDrag\n        [cdkDragData]=\"getViewComponentDragData(viewComponent)\"\n      >\n        <div class=\"group-item-inner\">\n          <span class=\"item-image d-icon-{{ viewComponent.icon || 'wall' }}\"></span>\n\n          <span class=\"item-name\" title=\"{{ viewComponent.name }}\">\n            {{ viewComponent.name }}\n          </span>\n        </div>\n      </div>\n    </div>\n  </adapt-accordion-tab>\n</adapt-accordion>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  InjectFlags,\n  InjectionToken,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { RxAssociationDefinitionCacheService } from '@helix/platform/association/api';\nimport { RxNamedListDefinitionCacheService } from '@helix/platform/named-list/api';\nimport { RxProcessDefinitionCacheService } from '@helix/platform/process/api';\nimport { RxRecordDefinitionCacheService } from '@helix/platform/record/api';\nimport {\n  IFormBuilderEvent,\n  IPlainObject,\n  RX_APPLICATION,\n  RxComponentCanDeactivateGuard,\n  RxDefinitionNameService,\n  RxFeatureService,\n  RxLogService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport {\n  IExpressionEditorProperty,\n  RX_EXPRESSION_EDITOR,\n  RX_REVERT_CUSTOMIZATION,\n  RX_VALIDATION_FORM_CONTROL,\n  RxDefinitionPickerCacheService,\n  RxExpressionEditorService,\n  RxGainsightConfiguratorService\n} from '@helix/platform/shared/components';\nimport {\n  IBreadcrumbItem,\n  IValidationIssue,\n  IValidationIssueSection,\n  RX_MODAL,\n  RxModalService,\n  RxUtilityModalsService,\n  ValidationIssueType\n} from '@helix/platform/ui-kit';\nimport {\n  RxViewComponentType,\n  RxViewDefinitionCacheService,\n  RxViewDefinitionService,\n  ViewDefinitionType\n} from '@helix/platform/view/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { cloneDeep, filter as _filter, get, isEqual, isUndefined, pick, set, toPath } from 'lodash';\nimport { BehaviorSubject, combineLatest, EMPTY, Observable, of, ReplaySubject, Subject, Subscription } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  shareReplay,\n  skip,\n  startWith,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n  withLatestFrom\n} from 'rxjs/operators';\nimport { ViewDesignerFacade } from '../+state/view-designer.facade';\nimport { DropComponentData, IViewComponentDropData } from '../components/view-designer-canvas';\nimport { RxViewDefinitionGeneratorService } from '../core/view-definition-generator.service';\nimport { RxViewDesignerModels } from '../core/view-designer-models.service';\nimport { RxViewModel } from '../model/view-model.service';\nimport { IViewDesignerConfiguration } from '../public-interfaces';\nimport { RxViewDesignerHelperService } from './view-designer-helper.service';\n\nexport const RX_VIEW_MODEL = new InjectionToken('RX_VIEW_MODEL');\n\n@Component({\n  selector: 'rx-view-designer',\n  templateUrl: './view-designer.component.html',\n  styleUrls: ['./view-designer.component.scss'],\n  providers: [RxViewModel]\n})\nexport class RxViewDesignerComponent implements OnInit, OnDestroy, OnChanges {\n  @Input()\n  configuration: IViewDesignerConfiguration;\n\n  @Output()\n  viewDefinitionSaved: EventEmitter<string> = new EventEmitter();\n\n  @Output()\n  viewDefinitionErrorLoading: EventEmitter<void> = new EventEmitter();\n\n  @Output()\n  closeDesigner: EventEmitter<void> = new EventEmitter<void>();\n\n  @ViewChild('viewPropertyInspector', { read: ElementRef })\n  viewPropertyInspectorElementRef: ElementRef;\n\n  @ViewChild('viewComponentPropertyInspector', { read: ElementRef })\n  viewComponentPropertyInspectorElementRef: ElementRef;\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private inspectorFocusEditorSubject = new Subject<{ editorName: string; data: IPlainObject }>();\n  private isViewDefinitionChanged$ = new BehaviorSubject<boolean>(false);\n\n  isPreviewAvailable$: Observable<boolean>;\n  isSaveButtonDisabled$: Observable<boolean>;\n\n  validationIssues$: Observable<IValidationIssueSection[]> = this.rxViewDesignerHelperService.validationIssues$.pipe(\n    shareReplay(1),\n    takeUntil(this.destroyed$)\n  );\n\n  breadcrumbItems$: Observable<IBreadcrumbItem[]> = this.rxViewDesignerHelperService.breadcrumbItems$;\n  canvasLayout$ = this.rxViewDesignerHelperService.canvasLayout$;\n  canvasDndListIds = this.rxViewDesignerHelperService.canvasDndListIds;\n\n  private extensionViewRootComponentType = RxViewComponentType.RecordEditor;\n\n  // Component UI State\n  isDesignMode = true;\n  isStencilExpanded = true;\n  isInspectorExpanded = true;\n  isPageView: boolean;\n  viewDefinitionName$: Observable<string>;\n  inspectorFocusEditor$ = this.inspectorFocusEditorSubject.asObservable();\n  hasValidationErrors$: Observable<boolean>;\n  hasValidationWarning$: Observable<boolean>;\n\n  viewComponentInspectorEmptyText$ = this.viewDesignerFacade.selectedComponentInspectorLayout$.pipe(\n    switchMap((selectedComponentLayout) =>\n      selectedComponentLayout\n        ? of(null)\n        : this.viewDesignerFacade.selectedComponentGuid$.pipe(\n            withLatestFrom(this.viewDesignerFacade.viewModel$),\n            map(([selectedComponentGuid, viewModel]) =>\n              selectedComponentGuid && selectedComponentGuid !== viewModel.guid\n                ? 'Selected component has no properties.'\n                : 'Select a component to view its properties here.'\n            )\n          )\n    ),\n    shareReplay({\n      refCount: true,\n      bufferSize: 1\n    })\n  );\n\n  selectedComponentModel$ = this.viewDesignerFacade.selectedComponentGuid$.pipe(\n    map((guid) => this.rxViewDesignerModels.get(guid))\n  );\n\n  isReadOnly$ = this.viewDesignerFacade.isViewReadOnly$;\n\n  paletteComponents$ = combineLatest([\n    this.viewDesignerFacade.isExtensionView$.pipe(tap((isExtensionView) => (this.isExtensionView = isExtensionView))),\n    this.viewDesignerFacade.isExtensionContainerSet$.pipe(\n      tap((isExtensionContainerSet) => (this.isExtensionContainerSet = isExtensionContainerSet))\n    ),\n    this.rxViewDesignerHelperService\n      .getLicensedComponents()\n      .pipe(\n        map((descriptors) =>\n          this.configuration.paletteComponentsPredicate\n            ? descriptors.filter((descriptor) => this.configuration.paletteComponentsPredicate(descriptor))\n            : descriptors\n        )\n      )\n  ]).pipe(\n    switchMap(([isExtensionView, isExtensionContainerSet, componentDescriptors]) =>\n      isExtensionView\n        ? this.viewDesignerFacade.firstViewComponentModelType$.pipe(\n            map((firstViewComponentType) =>\n              firstViewComponentType === this.extensionViewRootComponentType\n                ? componentDescriptors.filter(\n                    ({ type }) =>\n                      type !== this.extensionViewRootComponentType &&\n                      this.rxViewDesignerHelperService.extensionViewAllowedComponentTypes.has(\n                        type as RxViewComponentType\n                      )\n                  )\n                : componentDescriptors.filter(({ type }) => type === this.extensionViewRootComponentType)\n            )\n          )\n        : of(componentDescriptors)\n    )\n  );\n\n  private viewDefinitionChangeSubscription: Subscription;\n\n  rxViewModel: RxViewModel | any;\n  private isExtensionView: boolean;\n  private isExtensionContainerSet: boolean;\n\n  constructor(\n    public viewDesignerFacade: ViewDesignerFacade,\n    private rxNotificationService: RxNotificationService,\n    private rxDefinitionPickerCacheService: RxDefinitionPickerCacheService,\n    private rxNamedListDefinitionCacheService: RxNamedListDefinitionCacheService,\n    private rxModalService: RxModalService,\n    private translateService: TranslateService,\n    private rxUtilityModalsService: RxUtilityModalsService,\n    private rxViewDesignerHelperService: RxViewDesignerHelperService,\n    private rxExpressionEditorService: RxExpressionEditorService,\n    private rxViewDefinitionService: RxViewDefinitionService,\n    private rxComponentCanDeactivateGuard: RxComponentCanDeactivateGuard,\n    private rxViewDefinitionGeneratorService: RxViewDefinitionGeneratorService,\n    private rxViewDesignerModels: RxViewDesignerModels,\n    private rxLogService: RxLogService,\n    private injector: Injector,\n    private renderer: Renderer2,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxAssociationDefinitionCacheService: RxAssociationDefinitionCacheService,\n    private rxProcessDefinitionCacheService: RxProcessDefinitionCacheService,\n    private rxViewDefinitionCacheService: RxViewDefinitionCacheService,\n    private rxGainsightConfiguratorService: RxGainsightConfiguratorService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxFeatureService: RxFeatureService\n  ) {\n    const customViewModel = this.injector.get(RX_VIEW_MODEL, null, InjectFlags.Optional);\n\n    this.rxViewModel = customViewModel || this.injector.get(RxViewModel);\n\n    this.rxDefinitionPickerCacheService.registerConsumer();\n    this.rxNamedListDefinitionCacheService.registerConsumer(this.destroyed$);\n    this.rxAssociationDefinitionCacheService.registerConsumer(this.destroyed$);\n    this.rxProcessDefinitionCacheService.registerConsumer(this.destroyed$);\n    this.rxRecordDefinitionCacheService.registerConsumer(this.destroyed$);\n    this.rxViewDefinitionCacheService.registerConsumer(this.destroyed$);\n  }\n\n  ngOnInit(): void {\n    this.isPreviewAvailable$ = this.viewDesignerFacade.getViewPropertyValue('lastUpdateTime').pipe(\n      map(\n        (lastUpdateTime) =>\n          !this.configuration.disablePreview &&\n          (Boolean(lastUpdateTime) || !isUndefined(this.configuration.viewDefinitionName))\n      ),\n      takeUntil(this.destroyed$)\n    );\n\n    this.viewDefinitionName$ = this.viewDesignerFacade.getViewPropertyValue('name');\n\n    this.viewDesignerFacade\n      .getViewPropertyValue('pageComponent')\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((pageComponent) => {\n        this.isPageView = Boolean(pageComponent);\n      });\n\n    this.viewDesignerFacade.viewDefinitionSaveSuccess$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(({ viewDefinitionName }) => {\n        this.rxNotificationService.addSuccessMessage('View definition saved successfully.');\n        this.viewDefinitionSaved.emit(viewDefinitionName);\n\n        this.initViewDesigner();\n      });\n\n    this.viewDesignerFacade.viewDefinitionLoadError$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(() => this.viewDefinitionErrorLoading.emit());\n\n    this.hasValidationErrors$ = this.validationIssues$.pipe(\n      map((validationIssues) =>\n        Boolean(\n          _filter(validationIssues, {\n            issues: [{ type: ValidationIssueType.Error }]\n          }).length\n        )\n      ),\n      distinctUntilChanged()\n    );\n\n    this.hasValidationWarning$ = this.validationIssues$.pipe(\n      map((validationIssues) =>\n        Boolean(\n          _filter(validationIssues, {\n            issues: [{ type: ValidationIssueType.Warning }]\n          }).length\n        )\n      ),\n      distinctUntilChanged()\n    );\n\n    this.isSaveButtonDisabled$ = combineLatest([\n      this.hasValidationErrors$,\n      this.viewDesignerFacade.areViewModelsReady$,\n      this.isViewDefinitionChanged$,\n      this.isReadOnly$\n    ]).pipe(\n      map(\n        ([hasValidationErrors, areViewModelsReady, isChanged, isReadOnly]) =>\n          hasValidationErrors || !areViewModelsReady || !isChanged || isReadOnly\n      ),\n      startWith(true)\n    );\n\n    this.isReadOnly$.pipe(takeUntil(this.destroyed$)).subscribe((isReadOnly) => {\n      if (isReadOnly) {\n        this.rxNotificationService.addWarningMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.designer.read-only-definition-warning.message')\n        );\n      }\n    });\n\n    if (this.rxFeatureService.isFeatureEnabled('DRD21-11744')) {\n      this.viewDefinitionName$.pipe(take(1)).subscribe((viewDefinitionName) => {\n        this.rxGainsightConfiguratorService.updateGlobalContext({\n          subProductLevel1: {\n            name: 'Design'\n          },\n          subProductLevel2: {\n            name:\n              this.rxDefinitionNameService.getDisplayName(viewDefinitionName) == RX_APPLICATION.shellDefinitionName\n                ? 'Shell designer'\n                : 'View designer'\n          }\n        });\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.configuration.currentValue) {\n      this.initViewDesigner(true);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n    this.inspectorFocusEditorSubject.complete();\n    this.isViewDefinitionChanged$.complete();\n    this.rxDefinitionPickerCacheService.unRegisterConsumer();\n    this.viewDesignerFacade.destroyViewDesigner();\n\n    this.rxGainsightConfiguratorService.removeGlobalContext(['subProductLevel2', 'subProductLevel3']);\n  }\n\n  private initViewDesigner(dispatchInitViewDesignerAction = false): void {\n    // Mark view definition as not changed if it's not. This needs for scenario when view designer\n    // will be reinitialized with another view definition name and current view is dirty.\n    if (this.isViewDefinitionChanged$.getValue()) {\n      this.isViewDefinitionChanged$.next(false);\n    }\n\n    this.viewDefinitionChangeSubscription?.unsubscribe();\n\n    if (dispatchInitViewDesignerAction) {\n      this.viewDesignerFacade.initViewDesigner(\n        pick(this.configuration, ['bundleId', 'viewDefinitionName', 'layoutTemplate'])\n      );\n    }\n\n    this.initViewDefinitionChangeSubscription();\n  }\n\n  private initViewDefinitionChangeSubscription(): void {\n    this.viewDefinitionChangeSubscription = this.viewDesignerFacade.areViewModelsReady$\n      .pipe(\n        // Wait until models state will be updated with view and view components data.\n        filter(Boolean),\n        take(1),\n        switchMap(() =>\n          combineLatest([this.viewDesignerFacade.viewModel$, this.viewDesignerFacade.viewComponentModels$]).pipe(\n            map(([viewModel, viewComponentModels]) =>\n              this.rxViewDefinitionGeneratorService.generate(viewModel, viewComponentModels)\n            ),\n            distinctUntilChanged(isEqual),\n            // Skip first emit from distinctUntilChanged.\n            skip(1),\n            // Complete after first emit, it's considered that view definition gets changed so no needs for further emits.\n            take(1),\n            takeUntil(this.destroyed$)\n          )\n        ),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => {\n        this.isViewDefinitionChanged$.next(true);\n      });\n  }\n\n  onSelectComponent(guid: string): void {\n    this.viewDesignerFacade.selectComponent(guid);\n  }\n\n  onDropComponent(data: DropComponentData): void {\n    this.viewDesignerFacade.insertComponent(data);\n  }\n\n  onRemoveComponent(guid: string): void {\n    this.rxUtilityModalsService\n      .confirm('Are you sure you want to delete this view component?')\n      .then((isConfirmed: boolean) => {\n        if (isConfirmed) {\n          this.viewDesignerFacade.removeViewComponents([guid], true);\n\n          if (this.isPageView) {\n            this.viewDesignerFacade.updateViewProperties({ pageComponent: null });\n          }\n        }\n      });\n  }\n\n  onInspectorTabChange(event: { index: number }): void {\n    this.viewDesignerFacade.selectInspectorTab({ tabId: event.index });\n  }\n\n  toggleDesignMode(): void {\n    if (this.isDesignMode) {\n      this.viewDesignerFacade.generateViewDefinition();\n    }\n\n    this.isDesignMode = !this.isDesignMode;\n  }\n\n  onComponentPropertiesChange(properties: IPlainObject): void {\n    this.viewDesignerFacade.updateSelectedComponentProperties(properties);\n  }\n\n  onEditorEvent(event: IFormBuilderEvent, inspectorElementRef: ElementRef): void {\n    if (event.type === RX_VALIDATION_FORM_CONTROL.events.correctValidationIssue) {\n      this.correctValidationIssue(event.payload.componentGuid, event.payload.propertyName);\n    }\n\n    if (event.type === RX_REVERT_CUSTOMIZATION.events.revertCustomization) {\n      this.revertCustomization();\n    }\n\n    if (event.type === RX_EXPRESSION_EDITOR.events.openExpressionEditor) {\n      this.openExpressionEditor(event.payload, inspectorElementRef);\n    }\n  }\n\n  private getExpressionProperties(inspectorElementRef: ElementRef): Observable<IExpressionEditorProperty[]> {\n    return (\n      this.viewComponentPropertyInspectorElementRef === inspectorElementRef\n        ? this.viewDesignerFacade.selectedComponentProperties$\n        : this.viewDesignerFacade.viewModel$\n    ).pipe(\n      map((properties) =>\n        Array.from(\n          this.renderer\n            .selectRootElement(inspectorElementRef.nativeElement, true)\n            .querySelectorAll('rx-expression-form-control')\n        ).map((element: Element) => {\n          const propertyPath = element.getAttribute('property-path');\n\n          return {\n            path: propertyPath,\n            value: get(properties, propertyPath),\n            label: element.getAttribute('property-label')\n          };\n        })\n      )\n    );\n  }\n\n  private openExpressionEditor(payload: IPlainObject, inspectorElementRef: ElementRef): void {\n    const isComponentInspectorChange = this.viewComponentPropertyInspectorElementRef === inspectorElementRef;\n\n    const props$ = isComponentInspectorChange\n      ? this.viewDesignerFacade.selectedComponentProperties$\n      : this.viewDesignerFacade.viewModel$;\n\n    combineLatest([this.viewDesignerFacade.selectedComponentGuid$, props$])\n      .pipe(\n        take(1),\n        switchMap(([componentGuid, properties]) => {\n          const model = isComponentInspectorChange ? this.rxViewDesignerModels.get(componentGuid) : this.rxViewModel;\n          const expressionConfigurator = model?.expressionConfigurator;\n\n          if (expressionConfigurator) {\n            return this.rxExpressionEditorService\n              .openEditor({\n                property: {\n                  path: payload.propertyPath,\n                  value: get(properties, payload.propertyPath),\n                  label: payload.propertyLabel\n                },\n                isReadOnly: payload.isReadOnly,\n                expressionConfigurator,\n                legend: [\n                  {\n                    label: this.translateService.instant(\n                      'com.bmc.arsys.rx.client.expression-editor.legend.function.label'\n                    ),\n                    icon: 'd-icon-mathematical_function'\n                  },\n                  {\n                    label: this.translateService.instant(\n                      'com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'\n                    ),\n                    icon: 'd-icon-dollar'\n                  },\n                  {\n                    label: this.translateService.instant(\n                      'com.bmc.arsys.rx.client.expression-editor.legend.view-component.label'\n                    ),\n                    icon: 'd-icon-file_o'\n                  },\n                  {\n                    label: this.translateService.instant(\n                      'com.bmc.arsys.rx.client.expression-editor.legend.view-component-property.label'\n                    ),\n                    icon: 'd-icon-file_o_gear'\n                  },\n                  {\n                    label: this.translateService.instant(\n                      'com.bmc.arsys.rx.client.expression-editor.legend.view-input-parameter.label'\n                    ),\n                    icon: 'd-icon-arrow_right_square_input'\n                  }\n                ],\n                expressionPropertyNavigator: {\n                  getProperties: this.getExpressionProperties.bind(this, inspectorElementRef)\n                }\n              })\n              .pipe(\n                withLatestFrom(props$),\n                map(([{ path, value }, props]) => {\n                  if (props.hasOwnProperty(path)) {\n                    return { [path]: value };\n                  } else {\n                    // Don't override nested model properties e.g,\n                    // when 'path' = \"outputParams[1].source\" and 'value' = \"${bar}\", model will be updated from:\n                    // {..., outputParams: [{name: 'foo', source: ${foo}}, {name: 'bar', source: null}] } to:\n                    // {..., outputParams: [{name: 'foo', source: ${foo}}, {name: 'bar', source: ${bar}}] }\n                    const headPropertyName = toPath(path)[0];\n\n                    // clone value because \"set\" mutates object, otherwise expression\n                    // form control component will not be updated with new value.\n                    return set({ [headPropertyName]: cloneDeep(props[headPropertyName]) }, path, value);\n                  }\n                })\n              );\n          } else {\n            this.rxLogService.debug(\n              'View designer: Expression editor cannot be opened without expression configurator.'\n            );\n\n            return EMPTY;\n          }\n        }),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe((value) =>\n        isComponentInspectorChange\n          ? this.viewDesignerFacade.updateSelectedComponentProperties(value)\n          : this.viewDesignerFacade.updateViewProperties(value)\n      );\n  }\n\n  saveViewDefinition(): void {\n    this.viewDesignerFacade.viewModel$\n      .pipe(\n        take(1),\n        switchMap((viewModel) => {\n          const message =\n            viewModel.type === ViewDefinitionType.Shell\n              ? 'If you save your changes now, you will not be able to run this application using the old UI. Do you want to continue?'\n              : 'If you save this view definition, you will not be able to open it in the old view designer. Do you want to continue?';\n\n          if (viewModel.isAngularJsView) {\n            return this.rxModalService.confirm({\n              title: 'Warning',\n              modalStyle: RX_MODAL.modalStyles.warning,\n              message\n            });\n          } else {\n            return of(true);\n          }\n        }),\n        filter(Boolean),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => {\n        this.viewDesignerFacade.saveViewDefinition();\n      });\n  }\n\n  onCorrectIssue(validationIssue: IValidationIssue): void {\n    this.correctValidationIssue(\n      validationIssue.data.guid,\n      validationIssue.data.propertyName,\n      validationIssue.data.data\n    );\n  }\n\n  correctValidationIssue(guid: string, propertyName: string, data?: IPlainObject): void {\n    this.viewDesignerFacade.selectComponent(guid);\n\n    // need to wait until inspector will be visible\n    // there are no way to focus to invisible elements\n    setTimeout(() => this.inspectorFocusEditorSubject.next({ editorName: propertyName, data }), 10);\n  }\n\n  private revertCustomization(): void {\n    this.viewDefinitionName$\n      .pipe(\n        switchMap((viewDefinitionName) => this.rxViewDefinitionService.revertCustomization(viewDefinitionName)),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => {\n        this.rxComponentCanDeactivateGuard.disable();\n        window.location.reload();\n      });\n  }\n\n  onViewPropertiesChange(properties: IPlainObject): void {\n    this.viewDesignerFacade.updateViewProperties(properties);\n  }\n\n  showPreview(): void {\n    this.viewDesignerFacade.runPreview();\n  }\n\n  canDeactivate(): boolean {\n    let canDeactivate = true;\n\n    combineLatest([this.isViewDefinitionChanged$, this.isReadOnly$])\n      .pipe(\n        map(([isChanged, isReadOnly]) => !isChanged || isReadOnly),\n        take(1)\n      )\n      .subscribe((isPristineOrReadOnly) => {\n        canDeactivate = isPristineOrReadOnly;\n      });\n\n    return canDeactivate;\n  }\n\n  onBeforeComponentDropInRoot(event: IViewComponentDropData): void {\n    if (this.isExtensionView) {\n      if (!this.isExtensionContainerSet) {\n        this.rxNotificationService.addWarningMessage('Select Extension container before adding view components.');\n\n        event.preventDrop = true;\n      } else if (event.draggedViewComponentDescriptor.type !== RxViewComponentType.RecordEditor) {\n        this.rxNotificationService.addWarningMessage('This view component can only be added inside a Record editor.');\n\n        event.preventDrop = true;\n      }\n    }\n  }\n}\n","<rx-designer-header\n  [bundleName]=\"viewDesignerFacade.bundleFriendlyName$ | async\"\n  [breadcrumbItems]=\"breadcrumbItems$ | async\"\n  [isDesignMode]=\"isDesignMode\"\n  [isPreviewAvailable]=\"isPreviewAvailable$ | async\"\n  [isSaveButtonDisabled]=\"isSaveButtonDisabled$ | async\"\n  (breadcrumbSelected)=\"onSelectComponent($event.data.guid)\"\n  (toggleDesignMode)=\"toggleDesignMode()\"\n  (showPreview)=\"showPreview()\"\n  (save)=\"saveViewDefinition()\"\n  (closeDesigner)=\"closeDesigner.emit()\"\n></rx-designer-header>\n\n<div class=\"rx-component-view-designer\" [hidden]=\"!isDesignMode\">\n  <rx-blade\n    [title]=\"'Palette'\"\n    rx-id=\"palette\"\n    (toggle)=\"isStencilExpanded = !isStencilExpanded\"\n    [isExpanded]=\"isStencilExpanded\"\n  >\n    <rx-view-designer-palette\n      *ngIf=\"!isPageView && !(isReadOnly$ | async)\"\n      [components]=\"paletteComponents$ | async\"\n      [allowedDropListIds]=\"canvasDndListIds\"\n    ></rx-view-designer-palette>\n\n    <adapt-alert\n      *ngIf=\"isPageView && !(isReadOnly$ | async)\"\n      class=\"p-3\"\n      [config]=\"{\n        content:\n          'There are no view components to display. View with a Page view component cannot contain any other view components.',\n        variant: 'info',\n        type: 'inline'\n      }\"\n    ></adapt-alert>\n\n    <adapt-alert\n      *ngIf=\"!(viewDesignerFacade.isViewDefinitionLoading$ | async) && isReadOnly$ | async\"\n      class=\"p-3\"\n      [config]=\"{\n        content: 'This view is not editable. There are no view components to display.',\n        variant: 'info',\n        type: 'inline'\n      }\"\n    ></adapt-alert>\n  </rx-blade>\n\n  <section class=\"rx-view-designer-container\">\n    <rx-view-designer-canvas\n      class=\"flex-grow-1\"\n      [layout]=\"canvasLayout$ | async\"\n      [isReadOnly]=\"isReadOnly$ | async\"\n      (componentSelect)=\"onSelectComponent($event)\"\n      (componentRemove)=\"onRemoveComponent($event)\"\n      (componentDrop)=\"onDropComponent($event)\"\n      (beforeComponentDropInRoot)=\"onBeforeComponentDropInRoot($event)\"\n    ></rx-view-designer-canvas>\n  </section>\n\n  <rx-blade\n    [title]=\"'Properties'\"\n    dockTo=\"right\"\n    rx-id=\"properties\"\n    (toggle)=\"isInspectorExpanded = !isInspectorExpanded\"\n    [isExpanded]=\"isInspectorExpanded\"\n  >\n    <adapt-tabset\n      [tab-active]=\"viewDesignerFacade.selectedInspectorTabId$ | async\"\n      (tab-active-changed)=\"onInspectorTabChange($event)\"\n      [class.has-validation-warning]=\"hasValidationWarning$ | async\"\n      [class.has-validation-errors]=\"hasValidationErrors$ | async\"\n      customCssTabContent=\"p-0\"\n      justify=\"justified\"\n    >\n      <adapt-tab-panel icon=\"d-icon-pencil\">\n        <rx-form-builder\n          #viewPropertyInspector\n          (modelChange)=\"onViewPropertiesChange($event)\"\n          (editorEvent)=\"onEditorEvent($event, viewPropertyInspectorElementRef)\"\n          [focusEditor$]=\"inspectorFocusEditor$\"\n          [config]=\"viewDesignerFacade.viewInspectorLayout$ | async\"\n          [model]=\"viewDesignerFacade.viewModel$ | async\"\n          [isReadOnly]=\"isReadOnly$ | async\"\n        ></rx-form-builder>\n      </adapt-tab-panel>\n\n      <adapt-tab-panel icon=\"d-icon-gear\">\n        <rx-form-builder\n          rxInspector\n          [designerItemModel]=\"selectedComponentModel$ | async\"\n          #viewComponentPropertyInspector\n          (modelChange)=\"onComponentPropertiesChange($event)\"\n          (editorEvent)=\"onEditorEvent($event, viewComponentPropertyInspectorElementRef)\"\n          [focusEditor$]=\"inspectorFocusEditor$\"\n          [config]=\"viewDesignerFacade.selectedComponentInspectorLayout$ | async\"\n          [model]=\"viewDesignerFacade.selectedComponentProperties$ | async\"\n          [guid]=\"viewDesignerFacade.selectedComponentGuid$ | async\"\n          [isReadOnly]=\"isReadOnly$ | async\"\n        ></rx-form-builder>\n\n        <adapt-alert\n          [hidden]=\"!(viewComponentInspectorEmptyText$ | async)\"\n          class=\"p-3\"\n          [config]=\"{\n            content: viewComponentInspectorEmptyText$ | async,\n            variant: 'info',\n            type: 'inline'\n          }\"\n        ></adapt-alert>\n      </adapt-tab-panel>\n\n      <adapt-tab-panel icon=\"d-icon-exclamation_triangle\">\n        <rx-validation-issues\n          [definitionTypeDisplayName]=\"'com.bmc.arsys.rx.client.view-definition.label' | translate\"\n          (correctIssue)=\"onCorrectIssue($event)\"\n          [issueSections]=\"validationIssues$ | async\"\n        ></rx-validation-issues>\n      </adapt-tab-panel>\n    </adapt-tabset>\n  </rx-blade>\n</div>\n\n<adapt-code-viewer\n  *ngIf=\"!isDesignMode\"\n  [code]=\"viewDesignerFacade.viewDefinition$ | async | json\"\n  [lang]=\"'javascript'\"\n  [hasToolbar]=\"false\"\n  [theme]=\"'light'\"\n  class=\"full-size\"\n>\n</adapt-code-viewer>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CanvasItemContainerComponent } from './component/canvas-item-container/canvas-item-container.component';\nimport { CanvasItemComponent } from './component/canvas-item/canvas-item.component';\nimport { CanvasOutletComponent } from './component/canvas-outlet/canvas-outlet.component';\nimport { ViewDesignerCanvasComponent } from './view-designer-canvas.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CanvasItemColumnComponent } from './component/canvas-item-column/canvas-item-column.component';\n\n@NgModule({\n  imports: [CommonModule, DragDropModule],\n  exports: [ViewDesignerCanvasComponent, CanvasOutletComponent, CanvasItemComponent, CanvasItemColumnComponent],\n  declarations: [\n    ViewDesignerCanvasComponent,\n    CanvasItemComponent,\n    CanvasItemContainerComponent,\n    CanvasOutletComponent,\n    CanvasItemColumnComponent\n  ],\n  entryComponents: [CanvasItemComponent, CanvasItemContainerComponent, CanvasOutletComponent, CanvasItemColumnComponent]\n})\nexport class ViewDesignerCanvasModule {}\n","import { NgModule } from '@angular/core';\nimport { ViewDesignerCanvasModule } from '../view-designer-canvas/view-designer-canvas.module';\nimport { DesignerComponent } from './designer.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [ViewDesignerCanvasModule, CommonModule],\n  declarations: [DesignerComponent],\n  entryComponents: [DesignerComponent]\n})\nexport class DesignerModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AdaptAccordionModule, AdaptRxSearchModule } from '@bmc-ux/adapt-angular';\nimport { AdaptTextFieldModule } from '@bmc-ux/obsolete';\nimport { ViewDesignerPaletteComponent } from './view-designer-palette.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DragDropModule,\n    ReactiveFormsModule,\n    AdaptAccordionModule,\n    AdaptTextFieldModule,\n    AdaptRxSearchModule\n  ],\n  exports: [ViewDesignerPaletteComponent],\n  declarations: [ViewDesignerPaletteComponent]\n})\nexport class RxViewDesignerPaletteModule {}\n","import { Component, Injector } from '@angular/core';\nimport { ActiveModalRef, DismissReasons } from '@bmc-ux/adapt-angular';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { values } from 'lodash';\n\n@Component({\n  selector: 'rx-runtime-view-params-modal',\n  templateUrl: './runtime-view-params-modal.component.html',\n  styleUrls: ['./runtime-view-params-modal.component.scss']\n})\nexport class RuntimeViewParamsModalComponent extends RxModalClass {\n  inputParamNames: string[];\n  inputParams: { [inputName: string]: string } = {};\n\n  constructor(public activeModalRef: ActiveModalRef, protected injector: Injector) {\n    super(activeModalRef, injector);\n    this.inputParamNames = this.activeModalRef.getData().inputParams;\n  }\n\n  isDirty(): boolean {\n    return values(this.inputParams).some((paramValue: string) => paramValue);\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"modal-body\">\n  <div *ngFor=\"let inputParam of inputParamNames; first as isFirst; index as i\">\n    <adapt-rx-textfield\n      [attr.rx-id]=\"'input-param-' + (i + 1)\"\n      [label]=\"inputParam\"\n      [autofocus]=\"isFirst\"\n      [(ngModel)]=\"inputParams[inputParam]\"\n    >\n    </adapt-rx-textfield>\n  </div>\n</div>\n\n<div class=\"modal-footer\">\n  <adapt-button btn-type=\"primary\" (click)=\"activeModalRef.close(inputParams)\" rx-id=\"ok-button\">\n    OK\n  </adapt-button>\n\n  <adapt-button btn-type=\"secondary\" (click)=\"cancel()\" rx-id=\"cancel-button\"> Cancel </adapt-button>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AdaptButtonModule, AdaptModalModule, AdaptRxTextfieldModule } from '@bmc-ux/adapt-angular';\nimport { NgModule } from '@angular/core';\nimport { RuntimeViewParamsModalComponent } from './runtime-view-params-modal.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, AdaptButtonModule, AdaptModalModule, AdaptRxTextfieldModule],\n  exports: [RuntimeViewParamsModalComponent],\n  declarations: [RuntimeViewParamsModalComponent],\n  entryComponents: [RuntimeViewParamsModalComponent]\n})\nexport class RuntimeViewParamsModalModule {}\n","import { Injector } from '@angular/core';\nimport {\n  IExpressionEvaluator,\n  IViewActionExpressionConfigurator,\n  RxDefaultExpressionEvaluatorService,\n  RxViewActionRegistryService\n} from '@helix/platform/view/api';\nimport { get } from 'lodash';\nimport { RxViewExpressionConfigurator } from './view-expression-configurator.class';\nimport { RxViewDataDictionaryService } from '../data-dictionary/view-data-dictionary.service';\n\nexport class RxViewActionExpressionConfigurator\n  extends RxViewExpressionConfigurator\n  implements IViewActionExpressionConfigurator\n{\n  private rxViewDataDictionaryService = this.injector.get<RxViewDataDictionaryService>(RxViewDataDictionaryService);\n\n  private rxDefaultExpressionEvaluatorService = this.injector.get<RxDefaultExpressionEvaluatorService>(\n    RxDefaultExpressionEvaluatorService\n  );\n\n  private rxViewActionRegistryService = this.injector.get<RxViewActionRegistryService>(RxViewActionRegistryService);\n\n  commonDataDictionary$ = this.rxViewDataDictionaryService.getActionDataDictionary(this.actionGuid);\n\n  constructor(protected injector: Injector, protected actionType: string, protected actionGuid: string) {\n    super(injector);\n  }\n\n  getExpressionEvaluator(propertyName: string): IExpressionEvaluator {\n    const propertyDescriptor = this.rxViewActionRegistryService\n      .get(this.actionType)\n      .parameters.find((param) => param.name === propertyName);\n\n    return get(propertyDescriptor, 'evaluatorService', this.rxDefaultExpressionEvaluatorService);\n  }\n}\n","import { Injector } from '@angular/core';\nimport { map, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { chain, map as _map } from 'lodash';\nimport { RxViewExpressionConfigurator } from './view-expression-configurator.class';\nimport { RxViewDataDictionaryService } from '../data-dictionary/view-data-dictionary.service';\nimport { RxDefaultExpressionEvaluatorService, IExpressionEvaluator } from '@helix/platform/view/api';\nimport {\n  ExpressionOperatorGroup,\n  ExpressionOperatorRowsByGroup,\n  IDataDictionaryBranch,\n  IExpressionConfiguratorDefaultPropertyConfig\n} from '@helix/platform/shared/api';\nimport {\n  IFieldDefinition,\n  IRecordDefinition,\n  RxRecordDefinitionCacheService,\n  RX_RECORD_DEFINITION\n} from '@helix/platform/record/api';\nimport { RxNamedListDefinitionCacheService } from '@helix/platform/named-list/api';\n\nexport class NamedListFilterExpressionConfigurator extends RxViewExpressionConfigurator {\n  private rxNamedListDefinitionCacheService = this.injector.get(RxNamedListDefinitionCacheService);\n  private rxRecordDefinitionCacheService = this.injector.get(RxRecordDefinitionCacheService);\n  private rxViewDataDictionaryService = this.injector.get(RxViewDataDictionaryService);\n  private rxDefaultExpressionEvaluatorService = this.injector.get(RxDefaultExpressionEvaluatorService);\n\n  constructor(private fieldDefinition: IFieldDefinition, protected injector: Injector) {\n    super(injector);\n  }\n\n  commonDataDictionary$ = this.rxNamedListDefinitionCacheService\n    .getNamedListDefinition(this.fieldDefinition.namedListDefinition)\n    .pipe(\n      switchMap((namedListDefinition) =>\n        this.rxRecordDefinitionCacheService.getRecordDefinition(namedListDefinition.recordDefinitionName)\n      ),\n      switchMap((recordDefinition) => this.getNamedListBranch(recordDefinition)),\n      withLatestFrom(this.rxViewDataDictionaryService.getCommonDataDictionary()),\n      map(([namedListBranch, dataDictionary]) => [namedListBranch, ...dataDictionary])\n    );\n\n  getExpressionEvaluator(): IExpressionEvaluator {\n    return this.rxDefaultExpressionEvaluatorService;\n  }\n\n  getDefaultConfig(): IExpressionConfiguratorDefaultPropertyConfig {\n    return {\n      ...super.getDefaultConfig(),\n      operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.AllServer)\n    };\n  }\n\n  private getNamedListBranch(recordDefinition: IRecordDefinition): Observable<IDataDictionaryBranch> {\n    const namedListDictionaryNodes = chain(recordDefinition.fieldDefinitions)\n      .reject({ resourceType: RX_RECORD_DEFINITION.resourceTypes.attachment })\n      .map((fieldDefinition) => ({\n        label: fieldDefinition.name,\n        expression: `'${fieldDefinition.id}'`,\n        icon: 'd-icon-file_o_gear',\n        children:\n          fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.selection\n            ? [\n                {\n                  label: 'Options',\n                  children: _map(fieldDefinition.optionNamesById, (optionName, optionValue) => ({\n                    label: optionName,\n                    expression: optionValue,\n                    icon: 'd-icon-file_o_gear'\n                  }))\n                }\n              ]\n            : []\n      }))\n      .sortBy('label')\n      .value();\n\n    return of({\n      label: 'Filter by',\n      expanded: true,\n      children: namedListDictionaryNodes\n    });\n  }\n}\n","import { Injector } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { distinctUntilChanged, first, map, takeUntil } from 'rxjs/operators';\nimport { isEqual, omit } from 'lodash';\nimport { ViewDesignerFacade } from '../+state/view-designer.facade';\nimport {\n  IViewActionDescriptor,\n  IViewActionDesignProperties,\n  IViewActionDesignPropertyEditorConfig,\n  IViewActionDesignSandbox,\n  IViewActionOutputDataDictionary,\n  ViewActionDesignEditableProperties\n} from '@helix/platform/view/api';\nimport { ExpressionFormControlComponent, IExpressionFormControlOptions } from '@helix/platform/shared/components';\nimport { RxViewActionExpressionConfigurator } from '../expression-configurator/view-action-expression-configurator.class';\nimport { Tooltip } from '@helix/platform/shared/api';\nimport { IViewComponentDesignSetPayload } from '../public-interfaces/view-component-design.types';\n\nexport class ActionSandbox implements IViewActionDesignSandbox {\n  private destroyedSubject = new Subject<void>();\n  private viewDesignerFacade = this.injector.get(ViewDesignerFacade);\n  private actionPropertyEditorConfigSubject = new BehaviorSubject<IViewActionDesignPropertyEditorConfig>([]);\n  private actionPropertiesSubject = new BehaviorSubject<IViewActionDesignProperties>(this.initialProps);\n  private children: IViewComponentDesignSetPayload[] = [];\n\n  readonly children$ = this.viewDesignerFacade.getChildComponents(this.guid);\n  readonly destroyed$ = this.destroyedSubject.asObservable();\n  readonly actionPropertyEditorConfig$ = this.actionPropertyEditorConfigSubject.pipe(takeUntil(this.destroyed$));\n\n  readonly actionProperties$ = this.actionPropertiesSubject.pipe(\n    map(() => omit(this.getActionProperties(), ['name'])),\n    distinctUntilChanged(isEqual),\n    takeUntil(this.destroyed$)\n  );\n\n  constructor(\n    private injector: Injector,\n    readonly descriptor: IViewActionDescriptor,\n    readonly guid: string,\n    private initialProps: IViewActionDesignProperties\n  ) {\n    this.children$.pipe(first(), takeUntil(this.destroyed$)).subscribe((children) => {\n      this.setChildren(children);\n    });\n  }\n\n  updateActionProperties(props: Partial<ViewActionDesignEditableProperties<IViewActionDesignProperties>>): void {\n    this.actionPropertiesSubject.next({\n      ...this.actionPropertiesSubject.getValue(),\n      ...props\n    });\n  }\n\n  setActionProperties(props: ViewActionDesignEditableProperties<IViewActionDesignProperties>): void {\n    const { name, index } = this.actionPropertiesSubject.getValue();\n\n    this.actionPropertiesSubject.next({\n      $condition$: null,\n      ...props,\n      name,\n      index\n    });\n  }\n\n  getActionProperties(): IViewActionDesignProperties {\n    return this.actionPropertiesSubject.getValue();\n  }\n\n  getActionPropertyValue<T extends keyof IViewActionDesignProperties>(propertyName: T): IViewActionDesignProperties[T] {\n    return this.actionPropertiesSubject.getValue()[propertyName];\n  }\n\n  setActionPropertyEditorConfig(actionEditorConfig: IViewActionDesignPropertyEditorConfig): void {\n    const expressionConfigurator = new RxViewActionExpressionConfigurator(\n      this.injector,\n      this.descriptor.name,\n      this.guid\n    );\n\n    actionEditorConfig = [\n      {\n        name: '$condition$',\n        component: ExpressionFormControlComponent,\n        options: {\n          label: 'Condition',\n          tooltip: new Tooltip('The action will execute if the condition is true, or if no condition is defined.'),\n          dataDictionary$: expressionConfigurator.getDataDictionary(),\n          operators: expressionConfigurator.getOperators()\n        } as IExpressionFormControlOptions\n      },\n      ...actionEditorConfig\n    ];\n\n    this.actionPropertyEditorConfigSubject.next(actionEditorConfig);\n  }\n\n  getActionPropertyEditorConfig(): IViewActionDesignPropertyEditorConfig {\n    return this.actionPropertyEditorConfigSubject.getValue();\n  }\n\n  setActionOutputDataDictionary(dataDictionary: IViewActionOutputDataDictionary): void {\n    // check why index is coming as a string for existing actions\n    this.viewDesignerFacade.setActionDataDictionaryBranch(\n      this.guid,\n      this.getActionPropertyValue('index'),\n      this.descriptor.label,\n      dataDictionary\n    );\n  }\n\n  setChildren(data: IViewComponentDesignSetPayload[]): void {\n    this.children = data;\n  }\n\n  getChildren(): IViewComponentDesignSetPayload[] {\n    return this.children;\n  }\n\n  onDestroy(): void {\n    this.destroyedSubject.next();\n    this.destroyedSubject.complete();\n  }\n}\n","import { Injector } from '@angular/core';\nimport { RxViewActionExpressionConfigurator } from '../expression-configurator/view-action-expression-configurator.class';\nimport { IExpressionConfigurator } from '@helix/platform/shared/api';\nimport {\n  IViewActionDesignModel,\n  IViewActionDesignProperties,\n  IViewActionDesignSandbox\n} from '@helix/platform/view/api';\nimport { IViewComponentDesignSetPayload } from '../public-interfaces';\n\nexport abstract class RxViewDesignerActionModel implements IViewActionDesignModel {\n  readonly guid = this.sandbox.guid;\n\n  protected expressionConfigurator = new RxViewActionExpressionConfigurator(\n    this.injector,\n    this.sandbox.descriptor.name,\n    this.sandbox.guid\n  );\n\n  constructor(protected injector: Injector, readonly sandbox: IViewActionDesignSandbox) {}\n\n  getExpressionConfigurator(): IExpressionConfigurator {\n    return this.expressionConfigurator;\n  }\n\n  getPropertiesByName(): IViewActionDesignProperties {\n    return this.sandbox.getActionProperties();\n  }\n\n  getChildren(): IViewComponentDesignSetPayload[] {\n    return this.sandbox.getChildren();\n  }\n\n  getOutputExpressionForPropertyPath(propertyPath: string): string {\n    return `\\${view.components.${this.guid}.output.${propertyPath}}`;\n  }\n}\n","import { Injector } from '@angular/core';\nimport { ExpressionFormControlComponent, IExpressionFormControlOptions } from '@helix/platform/shared/components';\nimport {\n  IViewActionDesignPropertyEditorConfig,\n  IViewActionDesignProperties,\n  IViewActionDesignSandbox,\n  ViewActionDesignEditableProperties\n} from '@helix/platform/view/api';\nimport { RxViewDesignerActionModel } from './view-designer-action-model.class';\nimport { take } from 'rxjs/operators';\n\nexport class RxViewDesignerDefaultActionModel extends RxViewDesignerActionModel {\n  defaultProps: ViewActionDesignEditableProperties<\n    IViewActionDesignProperties\n  > = this.sandbox.descriptor.parameters.reduce((initialProps, param) => {\n    initialProps[param.name] = param.defaultValue;\n\n    return initialProps;\n  }, {});\n\n  constructor(protected injector: Injector, readonly sandbox: IViewActionDesignSandbox) {\n    super(injector, sandbox);\n\n    this.sandbox.actionProperties$.pipe(take(1)).subscribe((props) => {\n      this.sandbox.updateActionProperties({\n        ...this.defaultProps,\n        ...props\n      });\n\n      this.sandbox.setActionPropertyEditorConfig(this.getActionEditorConfig());\n    });\n  }\n\n  getActionEditorConfig(): IViewActionDesignPropertyEditorConfig {\n    return this.sandbox.descriptor.parameters\n      .filter((param) => param.editor)\n      .map((param) => ({\n        name: param.name,\n        component: param.editor,\n        options: {\n          label: param.label,\n          isRequired: param.isRequired,\n          tooltip: param.tooltip,\n          ...(param.editor === ExpressionFormControlComponent\n            ? ({\n                dataDictionary$: this.expressionConfigurator.getDataDictionary(param.name),\n                operators: this.expressionConfigurator.getOperators(param.name)\n              } as IExpressionFormControlOptions)\n            : param.editorOptions || {})\n        }\n      }));\n  }\n}\n","import { Injectable, Injector, OnDestroy } from '@angular/core';\nimport { IViewActionDescriptor, IViewActionDesignProperties, IViewActionDesignSandbox } from '@helix/platform/view/api';\nimport { isFunction, omit } from 'lodash';\nimport { ActionSandbox } from '../../action-sandbox/action-sandbox.class';\nimport { RxViewDesignerDefaultActionModel } from '../../model/view-designer-default-action-model.class';\n\n@Injectable()\nexport class RxActionListModelManagerService implements OnDestroy {\n  private models = new Map<string, any>();\n\n  constructor(private injector: Injector) {}\n\n  create(descriptor: IViewActionDescriptor, guid: string, initialProps?: IViewActionDesignProperties) {\n    const sandbox: IViewActionDesignSandbox = new ActionSandbox(\n      this.injector,\n      descriptor,\n      guid,\n      isFunction(descriptor?.designModel?.getInitialProperties)\n        ? {\n            ...descriptor.designModel.getInitialProperties(omit(initialProps, ['index', 'name'])),\n            name: initialProps.name,\n            index: initialProps.index\n          }\n        : initialProps\n    );\n\n    const Model = descriptor.designModel || RxViewDesignerDefaultActionModel;\n    const actionModel = new Model(this.injector, sandbox);\n\n    this.models.set(guid, actionModel);\n\n    return actionModel;\n  }\n\n  remove(guid: string): void {\n    this.models.delete(guid);\n  }\n\n  get(guid: string): any {\n    return this.models.get(guid);\n  }\n\n  ngOnDestroy(): void {\n    this.models.forEach((model) => model.sandbox.onDestroy());\n    this.models.clear();\n  }\n}\n","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { AfterViewInit, Component, ElementRef, Injector, OnDestroy, QueryList, ViewChildren } from '@angular/core';\nimport {\n  ActiveModalRef,\n  AdaptAccordionTabComponent,\n  DismissReasons,\n  KeyValueObject,\n  toNumber,\n  TreeWrap\n} from '@bmc-ux/adapt-angular';\nimport { IPlainObject } from '@helix/platform/shared/api';\nimport { RX_EXPRESSION_EDITOR, RxExpressionEditorService } from '@helix/platform/shared/components';\nimport { RxGuidService, RxStringService } from '@helix/platform/utils';\nimport { IViewActionDescriptor, IViewActionDesignModel, RxViewActionRegistryService } from '@helix/platform/view/api';\nimport { cloneDeep, findIndex, flow, get, map as _map, pull, set, sortBy, toPath, transform } from 'lodash';\nimport { BehaviorSubject, Observable, of, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ViewDesignerFacade } from '../../../+state/view-designer.facade';\nimport { IActionLabelsMap, IViewActionListItem } from '../action-list-control.types';\nimport { RxActionListModelManagerService } from '../action-list-model-manager.service';\nimport { IActionEditorDialogConfig, IViewActionEditorDialogItem } from './action-list-editor-dialog.types';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { TreeNode } from 'primeng/api/treenode';\n\n@Component({\n  selector: 'rx-action-list-editor-dialog',\n  templateUrl: './action-list-editor-dialog.component.html',\n  styleUrls: ['./action-list-editor-dialog.component.scss'],\n  providers: [RxActionListModelManagerService]\n})\nexport class ActionListEditorDialogComponent extends RxModalClass implements AfterViewInit, OnDestroy {\n  @ViewChildren(AdaptAccordionTabComponent, { read: ElementRef })\n  private accordionTabEls: QueryList<ElementRef>;\n\n  availableActionDescriptors$ = this.rxViewActionRegistryService.getLicensedActions();\n  availableActionTreeNodes$: Observable<TreeNode<IViewActionDescriptor>[]>;\n  actionLabelsMap$: Observable<IActionLabelsMap>;\n  selectedActions: IViewActionEditorDialogItem[] = [];\n  config: IActionEditorDialogConfig = this.activeModalRef.getData();\n  treeWrap: TreeWrap = TreeWrap.WrapAll;\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private isEditorDirtySubject = new BehaviorSubject<boolean>(false);\n\n  isSaveButtonDisabled$ = this.isEditorDirtySubject.asObservable().pipe(map((isDirty) => !isDirty));\n\n  constructor(\n    private rxViewActionRegistryService: RxViewActionRegistryService,\n    private rxStringService: RxStringService,\n    public activeModalRef: ActiveModalRef,\n    private viewDesignerFacade: ViewDesignerFacade,\n    private rxActionListModelManagerService: RxActionListModelManagerService,\n    private rxExpressionEditorService: RxExpressionEditorService,\n    private rxGuidService: RxGuidService,\n    private translateService: TranslateService,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n\n    this.availableActionTreeNodes$ = this.availableActionDescriptors$.pipe(\n      map((actions) =>\n        actions\n          .filter((action) => !action.hidden)\n          .sort((a, b) => a.label.localeCompare(b.label))\n          .map((action) => ({\n            data: action,\n            label: action.label\n          }))\n      )\n    );\n\n    this.actionLabelsMap$ = this.availableActionDescriptors$.pipe(\n      map(\n        (actions) =>\n          transform(\n            actions,\n            (result, action) => {\n              result[action.name] = action.label;\n            },\n            {}\n          ) as IActionLabelsMap\n      )\n    );\n\n    this.config.selectedActions = _map(this.config.selectedActions, (action) => ({\n      ...action,\n      data: {\n        ...action.data,\n        index: toNumber(action.data.index)\n      }\n    }));\n\n    this.selectedActions = flow(\n      (actions) => sortBy(actions, (action) => action.data.index),\n      (actions) =>\n        _map(actions, (action: IViewActionListItem) => {\n          const descriptor = this.rxViewActionRegistryService.get(action.data.name);\n\n          this.viewDesignerFacade.setActionDataDictionaryBranch(action.guid, action.data.index, action.data.name);\n\n          const model = this.rxActionListModelManagerService.create(descriptor, action.guid, action.data);\n\n          return {\n            isOpen: Boolean(this.config.actionToEdit) && action.guid === this.config.actionToEdit.guid,\n            model,\n            config$: model.sandbox.actionPropertyEditorConfig$.pipe(map((config) => [{ controls: config }])),\n            name: descriptor.name\n          };\n        })\n    )(this.config.selectedActions);\n  }\n\n  isDirty(): boolean {\n    return this.isEditorDirtySubject.getValue();\n  }\n\n  addAction(actionDescriptor: IViewActionDescriptor, index = this.selectedActions.length): void {\n    const guid = this.rxGuidService.generate();\n\n    this.viewDesignerFacade.setActionDataDictionaryBranch(guid, index, actionDescriptor.name);\n\n    const model = this.rxActionListModelManagerService.create(actionDescriptor, guid, {\n      name: actionDescriptor.name,\n      index\n    });\n\n    this.selectedActions.splice(index, 0, {\n      isOpen: true,\n      model,\n      config$: model.sandbox.actionPropertyEditorConfig$.pipe(map((config) => [{ controls: config }])),\n      name: actionDescriptor.name\n    });\n\n    this.updateIndexProp();\n    this.markEditorAsDirty();\n\n    setTimeout(() => {\n      this.accordionTabEls.toArray()[index].nativeElement.scrollIntoView({\n        block: 'nearest'\n      });\n    });\n  }\n\n  onSave(): void {\n    const result: IViewActionListItem[] = this.selectedActions.map((action) => ({\n      guid: action.model.guid,\n      data: action.model.getPropertiesByName(),\n      children: action.model.getChildren?.() ?? null\n    }));\n\n    this.activeModalRef.close(result);\n  }\n\n  removeAction(action: IViewActionEditorDialogItem): void {\n    pull(this.selectedActions, action);\n\n    this.rxActionListModelManagerService.remove(action.model.guid);\n\n    this.viewDesignerFacade.removeActionDataDictionaryBranch(action.model.guid);\n    this.markEditorAsDirty();\n  }\n\n  moveAction(fromIndex: number, toIndex: number): void {\n    moveItemInArray(this.selectedActions, fromIndex, toIndex);\n    this.updateIndexProp();\n    this.markEditorAsDirty();\n  }\n\n  toggleOpen(expandAll: boolean): void {\n    this.selectedActions.forEach((action) => (action.isOpen = expandAll));\n  }\n\n  onSelectedActionsListDrop(event: CdkDragDrop<IViewActionDescriptor | IViewActionEditorDialogItem>): void {\n    const data = event.item.data;\n\n    if (data.model?.guid) {\n      this.moveAction(event.previousIndex, event.currentIndex);\n    } else {\n      this.addAction(data, event.currentIndex);\n    }\n  }\n\n  openExpressionEditor(\n    model: IViewActionDesignModel<IPlainObject>,\n    propertyPath: string,\n    propertyLabel: string,\n    isReadOnly = false,\n    element: Element\n  ): void {\n    this.rxExpressionEditorService\n      .openEditor({\n        property: {\n          path: propertyPath,\n          value: get(model.sandbox.getActionProperties(), propertyPath),\n          label: propertyLabel\n        },\n        isReadOnly,\n        expressionConfigurator: model.getExpressionConfigurator(),\n        legend: [\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.function.label'),\n            icon: 'd-icon-mathematical_function'\n          },\n          {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'),\n            icon: 'd-icon-dollar'\n          },\n          {\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.client.expression-editor.legend.view-component.label'\n            ),\n            icon: 'd-icon-file_o'\n          },\n          {\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.client.expression-editor.legend.view-component-property.label'\n            ),\n            icon: 'd-icon-file_o_gear'\n          },\n          {\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.client.expression-editor.legend.view-input-parameter.label'\n            ),\n            icon: 'd-icon-arrow_right_square_input'\n          }\n        ],\n        expressionPropertyNavigator: {\n          getProperties: () => {\n            const properties = Array.from(element.querySelectorAll('rx-expression-form-control')).map(\n              (controlElement: Element) => {\n                const path = controlElement.getAttribute('property-path');\n\n                return {\n                  path,\n                  value: get(model.sandbox.getActionProperties(), path),\n                  label: controlElement.getAttribute('property-label')\n                };\n              }\n            );\n\n            return of(properties);\n          }\n        }\n      })\n      .pipe(\n        map(({ path, value }) => {\n          const props = model.sandbox.getActionProperties();\n          const headPropertyName = path in props ? path : toPath(path)[0];\n\n          return set({ [headPropertyName]: cloneDeep(props[headPropertyName]) }, path, value);\n        })\n      )\n      .subscribe((props) => {\n        model.sandbox.updateActionProperties(props);\n        this.markEditorAsDirty();\n      });\n  }\n\n  onEvent(event: IPlainObject, model: IViewActionDesignModel, element: Element): void {\n    if (event.type === RX_EXPRESSION_EDITOR.events.openExpressionEditor) {\n      this.openExpressionEditor(\n        model,\n        event.payload.propertyPath,\n        event.payload.propertyLabel,\n        event.payload.isReadOnly,\n        element\n      );\n    }\n  }\n\n  private updateIndexProp(): void {\n    this.selectedActions.forEach((action, index) => {\n      action.model.sandbox.updateActionProperties({\n        index\n      } as KeyValueObject);\n    });\n\n    this.viewDesignerFacade.updateActionDataDictionaryBranchOrder(\n      this.selectedActions.reduce((result, action, index) => {\n        result[action.model.guid] = index;\n\n        return result;\n      }, {})\n    );\n  }\n\n  markEditorAsDirty(): void {\n    this.isEditorDirtySubject.next(true);\n  }\n\n  ngAfterViewInit(): void {\n    const openActionIndex = findIndex(this.selectedActions, 'isOpen');\n\n    if (openActionIndex !== -1) {\n      this.accordionTabEls.toArray()[openActionIndex].nativeElement.scrollIntoView({\n        block: 'nearest'\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.isEditorDirtySubject.complete();\n\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n\n    this.viewDesignerFacade.removeAllActionDataDictionaryBranches();\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"designer-modal-body modal-body d-flex mh-100\">\n  <div class=\"row flex-grow-1 w-100\">\n    <div *ngIf=\"!config.isReadOnly\" class=\"col-4 border-right d-flex flex-column mh-100\">\n      <div class=\"d-flex align-items-start justify-content-between\">\n        <h4 class=\"mt-2\">\n          {{ 'com.bmc.arsys.rx.client.view-components.action-list.available-actions.title' | translate }}\n        </h4>\n      </div>\n\n      <div class=\"rx-card card flex-grow-1 mt-2\">\n        <div class=\"card-block\" *ngIf=\"availableActionTreeNodes$ | async as availableActionTreeNodes\">\n          <div\n            *ngIf=\"availableActionTreeNodes.length; else adaptTreeEmptyStateTemplate\"\n            cdkDropList\n            cdkDropListSortingDisabled\n            [cdkDropListConnectedTo]=\"'selected-action-list'\"\n          >\n            <adapt-tree\n              [value]=\"availableActionTreeNodes\"\n              filter=\"true\"\n              [wrap]=\"treeWrap\"\n            >\n              <ng-template let-action adaptTreeNodeTemplate>\n                <div\n                  *ngIf=\"action.data\"\n                  class=\"rx-tree-draggable-node\"\n                  cdkDrag\n                  [cdkDragData]=\"action.data\"\n                >\n                  <div (dblclick)=\"addAction(action.data)\">\n                    <button\n                      type=\"button\"\n                      class=\"rx-button-unstyled d-icon-plus_circle\"\n                      (click)=\"addAction(action.data)\"\n                    ></button>\n\n                    <span class=\"rx-tree-node-label ml-3\">{{ action.data.label }}</span>\n                  </div>\n                </div>\n              </ng-template>\n            </adapt-tree>\n          </div>\n\n          <ng-template #adaptTreeEmptyStateTemplate>\n            <div class=\"d-flex justify-content-center h-100 align-items-center mt-2\">\n              <adapt-empty-state\n                class=\"w-100\"\n                label=\"{{ 'com.bmc.arsys.rx.client.view-components.action-list.available-actions.empty-state.message' | translate }}\"\n                type=\"search\"\n              ></adapt-empty-state>\n            </div>\n          </ng-template>         \n        </div>\n      </div>\n    </div>\n\n    <div class=\"d-flex flex-column mh-100 {{ config.isReadOnly ? 'col' : 'col-8' }}\">\n      <div class=\"d-flex align-items-start justify-content-between\">\n        <div class=\"d-flex align-items-center\">\n          <h4 class=\"mt-2\">\n            {{ 'com.bmc.arsys.rx.client.view-components.action-list.selected-actions.title' | translate }}\n          </h4>\n\n          <adapt-icon\n            class=\"ml-2\"\n            name=\"question_circle_o\"\n            adaptPopover=\"{{ 'com.bmc.arsys.rx.client.view-components.action-list.selected-actions.tooltip' | translate }}\"\n            appendToBody=\"true\"\n          >\n          </adapt-icon>\n        </div>\n\n        <div *ngIf=\"selectedActions.length\" class=\"btn-group\">\n          <button\n            adapt-button\n            btn-type=\"tertiary\"\n            type=\"button\"\n            rx-id=\"expand-all-button\"\n            (click)=\"toggleOpen(true)\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.expand-all.label' | translate }}\n          </button>\n\n          <button\n            adapt-button\n            btn-type=\"tertiary\"\n            type=\"button\"\n            rx-id=\"collapse-all-button\"\n            (click)=\"toggleOpen(false)\"\n          >\n            {{ 'com.bmc.arsys.rx.client.common.collapse-all.label' | translate }}\n          </button>\n        </div>\n      </div>\n\n      <div\n        id=\"selected-action-list\"\n        class=\"designer-modal-accordion-wrapper\"\n        cdkDropList\n        (cdkDropListDropped)=\"onSelectedActionsListDrop($event)\"\n      >\n        <adapt-accordion [multiselect]=\"true\">\n          <div\n            *ngFor=\"\n              let action of selectedActions;\n              let index = index;\n              let first = first;\n              let last = last;\n            \"\n            class=\"designer-modal-accordion-content\"\n            cdkDrag\n            cdkDragLockAxis=\"y\"\n            [cdkDragData]=\"action\"\n            [cdkDragDisabled]=\"config.isReadOnly\"\n            #container\n          >\n            <div *ngIf=\"!config.isReadOnly\" class=\"designer-modal-drag-handle d-icon-left-dots\" cdkDragHandle></div>\n\n            <adapt-accordion-tab\n              class=\"d-block\"\n              [isOpen]=\"action.isOpen\"\n              (open)=\"action.isOpen = true\"\n              (close)=\"action.isOpen = false\"\n            >\n              <div class=\"card-title-text w-100\">\n                <div class=\"designer-modal-card-title-content\">\n                  <div class=\"left-header-block\" [class.pl-0]=\"config.isReadOnly\">\n                    <div *ngIf=\"actionLabelsMap$ | async as actionLabelsMap\" class=\"rx-ellipsis\" [title]=\"actionLabelsMap[action.name]\"\n                      rx-id=\"card-title\">\n                      {{ actionLabelsMap[action.name] }}\n                    </div>\n                  </div>\n\n                  <div *ngIf=\"!config.isReadOnly\" class=\"right-header-block\">\n                    <div class=\"designer-modal-card-title-index-buttons\">\n                      <button\n                        class=\"d-icon-left-triangle_down rx-button-unstyled\"\n                        type=\"button\"\n                        [disabled]=\"last\"\n                        (click)=\"$event.stopPropagation(); moveAction(index, index + 1)\"\n                        rx-id=\"move-down-button\"\n                      ></button>\n\n                      <button\n                        class=\"d-icon-left-triangle_up rx-button-unstyled\"\n                        type=\"button\"\n                        [disabled]=\"first\"\n                        (click)=\"$event.stopPropagation(); moveAction(index, index - 1)\"\n                        rx-id=\"move-up-button\"\n                      ></button>\n                    </div>\n\n                    <button\n                      class=\"d-icon-left-cross_adapt p-1 pr-4 ml-3\"\n                      adapt-button\n                      size=\"small\"\n                      type=\"button\"\n                      (click)=\"$event.stopPropagation(); removeAction(action)\"\n                      rx-id=\"remove-button\"\n                    >\n                      {{ 'com.bmc.arsys.rx.client.common.remove.label' | translate }}\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              <rx-form-builder\n                class=\"d-block\"\n                [config]=\"action.config$ | async\"\n                [model]=\"action.model.sandbox.actionProperties$ | async\"\n                (modelChange)=\"action.model.sandbox.updateActionProperties($event); markEditorAsDirty()\"\n                (editorEvent)=\"onEvent($event, action.model, container)\"\n                [isReadOnly]=\"config.isReadOnly\"\n              ></rx-form-builder>\n            </adapt-accordion-tab>\n          </div>\n        </adapt-accordion>\n      </div>\n\n      <div *ngIf=\"!selectedActions.length\" class=\"d-flex justify-content-center h-100 align-items-center mt-2\">\n        <adapt-empty-state\n          class=\"w-100\"\n          label=\"{{ 'com.bmc.arsys.rx.client.view-components.action-list.selected-actions.empty-state.message' | translate }}\"\n          type=\"config\"\n        ></adapt-empty-state>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal-footer\">\n  <button\n    *ngIf=\"!config.isReadOnly\"\n    adapt-button\n    btn-type=\"primary\"\n    type=\"button\"\n    rx-id=\"save-button\"\n    [disabled]=\"isSaveButtonDisabled$ | async\"\n    (click)=\"onSave()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button adapt-button btn-type=\"secondary\" type=\"button\" rx-id=\"cancel-button\" (click)=\"cancel()\">\n    {{ config.isReadOnly ? ('com.bmc.arsys.rx.client.common.close.label' | translate) :\n    ('com.bmc.arsys.rx.client.common.cancel.label' | translate) }}\n  </button>\n</div>\n","import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  AdaptAccordionModule,\n  AdaptButtonModule,\n  AdaptEmptyStateModule,\n  AdaptIconModule,\n  AdaptPopoverModule,\n  AdaptRxSearchModule,\n  AdaptTreeModule\n} from '@bmc-ux/adapt-angular';\nimport { RxFormBuilderModule, ExpressionEditorModule } from '@helix/platform/shared/components';\nimport { ActionListEditorDialogComponent } from './action-list-editor-dialog.component';\n\n@NgModule({\n  declarations: [ActionListEditorDialogComponent],\n  exports: [ActionListEditorDialogComponent],\n  entryComponents: [ActionListEditorDialogComponent],\n  imports: [\n    CommonModule,\n    AdaptRxSearchModule,\n    AdaptButtonModule,\n    AdaptAccordionModule,\n    DragDropModule,\n    AdaptEmptyStateModule,\n    ExpressionEditorModule,\n    FormsModule,\n    RxFormBuilderModule,\n    AdaptIconModule,\n    AdaptPopoverModule,\n    TranslateModule,\n    AdaptTreeModule\n  ]\n})\nexport class ActionListEditorDialogModule {}\n","import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { noop, sortBy, transform, without } from 'lodash';\nimport { ActionListEditorDialogComponent } from './action-list-editor-dialog/action-list-editor-dialog.component';\nimport { IActionLabelsMap, IViewActionListItem } from './action-list-control.types';\nimport { IViewActionDescriptor, OpenViewActionModalSize, RxViewActionRegistryService } from '@helix/platform/view/api';\nimport { IActionEditorDialogConfig } from './action-list-editor-dialog/action-list-editor-dialog.types';\nimport { Observable } from 'rxjs';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { IFormControlComponent, IFormFocusable } from '@helix/platform/shared/api';\nimport { RxModalService } from '@helix/platform/ui-kit';\n\n@Component({\n  selector: 'rx-action-list-control',\n  templateUrl: './action-list-control.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: ActionListControlComponent,\n      multi: true\n    }\n  ]\n})\nexport class ActionListControlComponent\n  extends ValueAccessor<IViewActionListItem[]>\n  implements IFormControlComponent, IFormFocusable\n{\n  @Input()\n  options;\n\n  @Input()\n  tooltip: string;\n\n  availableActions$: Observable<IViewActionDescriptor[]> = this.rxViewActionRegistryService.getLicensedActions();\n  actionLabelsMap: IActionLabelsMap;\n  selectedActions: IViewActionListItem[] = [];\n\n  constructor(\n    private rxModalService: RxModalService,\n    private rxViewActionRegistryService: RxViewActionRegistryService\n  ) {\n    super();\n\n    this.availableActions$.subscribe((actions) => {\n      this.actionLabelsMap = transform(\n        actions,\n        (result, action) => {\n          result[action.name] = action.label;\n        },\n        {}\n      ) as IActionLabelsMap;\n    });\n  }\n\n  focus(data?: { actionIndex: number }): void {\n    if (data?.actionIndex >= 0) {\n      this.openActionSelector(this.selectedActions.find((item) => item.data.index === data.actionIndex));\n    } else {\n      this.openActionSelector();\n    }\n  }\n\n  openActionSelector(actionToEdit?: IViewActionListItem): void {\n    this.rxModalService\n      .openModal({\n        title: 'Edit actions',\n        data: {\n          selectedActions: this.value,\n          actionToEdit,\n          isReadOnly: this.isDisabled\n        } as IActionEditorDialogConfig,\n        content: ActionListEditorDialogComponent,\n        size: OpenViewActionModalSize.Large as any,\n        testID: 'edit-actions'\n      })\n      .then((actions) => {\n        this.value = actions;\n      })\n      .catch(noop);\n  }\n\n  onSetValue(): void {\n    this.updateSortedActionsList();\n  }\n\n  onWriteValue(value: IViewActionListItem[]): void {\n    this.updateSortedActionsList();\n  }\n\n  removeAction(action: IViewActionListItem): void {\n    this.value = without(this.value, action);\n  }\n\n  editAction(action: IViewActionListItem): void {\n    this.openActionSelector(action);\n  }\n\n  private updateSortedActionsList(): void {\n    this.selectedActions = sortBy(this.value, (action) => action.data.index);\n  }\n}\n","<adapt-button rx-id=\"open-modal-button\" btn-type=\"tertiary\" class=\"px-0 py-0 pb-1\" (click)=\"openActionSelector()\">\n  <adapt-icon name=\"plus_circle\" class=\"mr-1\"></adapt-icon>\n  Edit actions\n</adapt-button>\n\n<span *ngIf=\"tooltip\" class=\"align-middle\">\n  <span class=\"letter-space\"></span>\n  <adapt-icon [name]=\"'question_circle_o'\" [adaptPopover]=\"tooltip\" appendToBody=\"true\"></adapt-icon>\n</span>\n\n<div rx-id=\"columns\">\n  <span *ngIf=\"selectedActions.length === 0\" class=\"text-tertiary\">No actions added.</span>\n</div>\n\n<ul class=\"list-unstyled mb-0\" *ngIf=\"selectedActions.length > 0\">\n  <li class=\"border px-2 py-1 mb-1 d-flex align-items-center\" *ngFor=\"let action of selectedActions\">\n    <strong class=\"mr-auto\">{{ actionLabelsMap[action.data.name] }}</strong>\n\n    <button\n      class=\"d-icon-left-pencil p-1\"\n      adapt-button\n      btn-type=\"tertiary\"\n      size=\"small\"\n      type=\"button\"\n      (click)=\"editAction(action)\"\n    ></button>\n\n    <button\n      class=\"d-icon-left-cross_adapt p-1\"\n      adapt-button\n      btn-type=\"tertiary\"\n      size=\"small\"\n      type=\"button\"\n      *ngIf=\"!isDisabled\"\n      (click)=\"removeAction(action)\"\n    ></button>\n  </li>\n</ul>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActionListControlComponent } from './action-list-control.component';\nimport { ActionListEditorDialogModule } from './action-list-editor-dialog/action-list-editor-dialog.module';\nimport { AdaptButtonModule, AdaptIconModule, AdaptPopoverModule } from '@bmc-ux/adapt-angular';\n@NgModule({\n  declarations: [ActionListControlComponent],\n  exports: [ActionListControlComponent],\n  entryComponents: [ActionListControlComponent],\n  imports: [CommonModule, AdaptIconModule, AdaptButtonModule, ActionListEditorDialogModule, AdaptPopoverModule]\n})\nexport class ActionListControlModule {}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ViewDesignerFacade } from '../../+state/view-designer.facade';\nimport { ReplaySubject } from 'rxjs';\nimport { IViewDefinitionPermission } from '@helix/platform/view/api';\nimport { takeUntil } from 'rxjs/operators';\nimport { IComponentPermissionEditorConfig } from './component-permission-editor-widget.types';\nimport { IFormWidgetComponent } from '@helix/platform/shared/api';\n\n@Component({\n  selector: 'rx-component-permission-editor-widget',\n  templateUrl: './component-permission-editor-widget.component.html'\n})\nexport class RxComponentPermissionEditorWidgetComponent implements OnInit, OnDestroy, IFormWidgetComponent {\n  @Input()\n  options: IComponentPermissionEditorConfig;\n\n  @Input()\n  isDisabled: boolean;\n\n  permissions: IViewDefinitionPermission[] = [];\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  constructor(private viewDesignerFacade: ViewDesignerFacade) {}\n\n  ngOnInit(): void {\n    this.viewDesignerFacade\n      .getComponentPermissions(this.options.componentGuid)\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((permissions) => {\n        this.permissions = permissions;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  onPermissionsChange(permissions: IViewDefinitionPermission[]): void {\n    this.viewDesignerFacade.updateComponentModel(this.options.componentGuid, {\n      permissions\n    });\n  }\n}\n","<rx-permission-editor\n  [options]=\"options\"\n  [disabled]=\"isDisabled\"\n  [(ngModel)]=\"permissions\"\n  (ngModelChange)=\"onPermissionsChange($event)\"\n></rx-permission-editor>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RxComponentPermissionEditorWidgetComponent } from './component-permission-editor-widget.component';\nimport { RxPermissionEditorModule } from '@helix/platform/shared/components';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [RxComponentPermissionEditorWidgetComponent],\n  imports: [CommonModule, FormsModule, RxPermissionEditorModule]\n})\nexport class RxComponentPermissionEditorWidgetModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CustomizationOptionsModule } from '@helix/platform/shared/components';\nimport { RxViewCustomizationOptionsComponent } from './view-customization-options.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, CustomizationOptionsModule],\n  declarations: [RxViewCustomizationOptionsComponent]\n})\nexport class RxViewCustomizationOptionsModule {}\n","import { Component, Injector, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { IFormFocusable, IFormWidgetComponent } from '@helix/platform/shared/api';\nimport { InspectorWidgetBase } from '@helix/platform/shared/components';\nimport { IViewActionDesignProperties, RxViewComponentType } from '@helix/platform/view/api';\nimport { takeUntil } from 'rxjs/operators';\nimport { ViewDesignerComponentModel } from '../../model/view-designer-component-model.class';\nimport { IViewComponentDesignSandbox } from '../../public-interfaces/view-component-design-sandbox.interface';\nimport { ActionListControlComponent } from '../action-list-control/action-list-control.component';\nimport { ReplaySubject } from 'rxjs';\nimport { IActionListWidgetComponentOptions } from './action-list-widget.types';\nimport { IViewActionListItem } from '../action-list-control/action-list-control.types';\nimport { IViewComponentDesignSetPayload } from '../../public-interfaces/view-component-design.types';\n\n@Component({\n  selector: 'rx-action-list-widget',\n  templateUrl: './action-list-widget.component.html'\n})\nexport class ActionListWidgetComponent\n  extends InspectorWidgetBase<IActionListWidgetComponentOptions, ViewDesignerComponentModel>\n  implements OnInit, OnDestroy, IFormWidgetComponent, IFormFocusable\n{\n  @ViewChild(ActionListControlComponent)\n  actionListControlComponent: ActionListControlComponent;\n\n  options: IActionListWidgetComponentOptions;\n  actions: IViewActionListItem[] = [];\n\n  // @ts-ignore\n  modelSandbox: IViewComponentDesignSandbox = this.designerItemModel.sandbox;\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  constructor(protected injector: Injector) {\n    super(injector);\n  }\n\n  ngOnInit(): void {\n    const actions$ = this.modelSandbox.getChildComponents<IViewActionDesignProperties>();\n\n    actions$.pipe(takeUntil(this.destroyed$)).subscribe((actions) => {\n      this.actions = actions;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  onActionsChange(actions: IViewActionListItem[]): void {\n    this.modelSandbox.setChildren(this.getActionComponentPayloads(actions));\n  }\n\n  focus(data): void {\n    this.actionListControlComponent.focus(data);\n  }\n\n  private getActionComponentPayloads(actionInspectorModels: IViewActionListItem[]): IViewComponentDesignSetPayload[] {\n    return actionInspectorModels.map((model) => ({\n      type: RxViewComponentType.Action,\n      ...model\n    }));\n  }\n}\n","<rx-action-list-control\n  [disabled]=\"modelSandbox.isViewReadOnly$ | async\"\n  [(ngModel)]=\"actions\"\n  (ngModelChange)=\"onActionsChange($event)\"\n  [tooltip]=\"options?.tooltip\"\n></rx-action-list-control>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActionListWidgetComponent } from './action-list-widget.component';\nimport { ActionListControlModule } from '../action-list-control/action-list-control.module';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [ActionListWidgetComponent],\n  imports: [CommonModule, ActionListControlModule, FormsModule]\n})\nexport class ActionListWidgetModule {}\n","import { IViewDesignerComponentModel } from '@helix/platform/view/api';\nimport { IExpressionConfigurator, IPlainObject } from '@helix/platform/shared/api';\nimport { Injector } from '@angular/core';\nimport { RxViewComponentExpressionConfigurator } from '../expression-configurator';\nimport { IViewComponentDesignSandbox } from '../public-interfaces/view-component-design-sandbox.interface';\n\nexport class ViewDesignerComponentModel<\n  TComponentProperties = IPlainObject,\n  TComponentDesignProperties = TComponentProperties\n> implements IViewDesignerComponentModel {\n  private _expressionConfigurator: IExpressionConfigurator;\n\n  get expressionConfigurator(): IExpressionConfigurator {\n    if (!this._expressionConfigurator) {\n      this._expressionConfigurator = new (this.sandbox.descriptor.expressionConfigurator ||\n        RxViewComponentExpressionConfigurator)(this.injector, this.sandbox.guid, this, this.sandbox.descriptor.type);\n    }\n\n    return this._expressionConfigurator;\n  }\n\n  constructor(\n    protected injector: Injector,\n    protected sandbox: IViewComponentDesignSandbox<TComponentDesignProperties>\n  ) {}\n\n  getExpressionForProperty(propertyPath: string): string {\n    return `\\${view.components.${this.sandbox.guid}.${propertyPath}}`;\n  }\n}\n","import { IFormControlBuilderConfig, Tooltip } from '@helix/platform/shared/api';\nimport {\n  IOptionalExpressionInspectorControlOptions,\n  ITagAutocompleteValue,\n  ITagsFormControlOptions,\n  OptionalExpressionInspectorControlComponent,\n  SelectFormControlComponent,\n  TagsFormControlComponent\n} from '@helix/platform/shared/components';\nimport {\n  RX_AVAILABLE_ON_DEVICES_PROP_NAME,\n  RX_DISABLED_PROP_NAME,\n  RX_HIDDEN_PROP_NAME,\n  RX_STYLES_PROP_NAME,\n  RxDevice\n} from '@helix/platform/view/api';\nimport { validateCssClassName } from '../core';\n\nexport const RX_AVAILABLE_ON_DEVICES_OPTIONS = [\n  {\n    id: RxDevice.Desktop,\n    name: 'Desktop'\n  },\n  {\n    id: RxDevice.Tablet,\n    name: 'Tablet'\n  },\n  {\n    id: RxDevice.Mobile,\n    name: 'Mobile'\n  }\n];\n\nexport function getAvailableOnDevicesInspectorConfig(): IFormControlBuilderConfig {\n  return {\n    name: RX_AVAILABLE_ON_DEVICES_PROP_NAME,\n    component: SelectFormControlComponent,\n    options: {\n      label: 'Available on devices',\n      options: RX_AVAILABLE_ON_DEVICES_OPTIONS,\n      multiple: true,\n      required: true,\n      hideSelectAllButton: true,\n      hideDeselectAllButton: true\n    }\n  };\n}\n\nexport function getHiddenFieldInspectorConfig(): IFormControlBuilderConfig {\n  return {\n    name: RX_HIDDEN_PROP_NAME,\n    component: OptionalExpressionInspectorControlComponent,\n    options: {\n      label: 'Hidden'\n    } as IOptionalExpressionInspectorControlOptions\n  };\n}\n\nexport function getDisabledFieldInspectorConfig(): IFormControlBuilderConfig {\n  return {\n    name: RX_DISABLED_PROP_NAME,\n    component: OptionalExpressionInspectorControlComponent,\n    options: {\n      label: 'Disabled'\n    } as IOptionalExpressionInspectorControlOptions\n  };\n}\n\nexport function getStylesFieldInspectorConfig(\n  autocompleteValues: ITagAutocompleteValue[] = []\n): IFormControlBuilderConfig {\n  return {\n    name: RX_STYLES_PROP_NAME,\n    component: TagsFormControlComponent,\n    options: {\n      label: 'CSS classes',\n      placeholder: 'Add CSS classes',\n      tooltip: new Tooltip('Enter CSS class names to apply to this view component.'),\n      errorCheck: validateCssClassName,\n      autocompleteValues: autocompleteValues\n    } as ITagsFormControlOptions\n  };\n}\n\nexport function getStandardPropsInspectorConfigs(): IFormControlBuilderConfig[] {\n  return [getHiddenFieldInspectorConfig(), getAvailableOnDevicesInspectorConfig(), getStylesFieldInspectorConfig()];\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { flatten, flow, map as _map, compact, find, isFunction, isString } from 'lodash';\nimport {\n  IViewActionDescriptor,\n  IViewActionDesignManager,\n  IViewActionDesignProperties,\n  RxViewActionRegistryService\n} from '@helix/platform/view/api';\nimport { RxStringService } from '@helix/platform/utils';\nimport { map } from 'rxjs/operators';\nimport { RxLogService } from '@helix/platform/shared/api';\nimport { RxViewExpressionValidatorService } from './view-expression-validator.service';\nimport { IViewComponentDesignData } from '../public-interfaces/view-component-design.types';\nimport { IViewComponentDesignValidationIssue } from '../public-interfaces/view-component-design-validation-issue.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewActionValidatorService {\n  constructor(\n    private rxViewActionRegistryService: RxViewActionRegistryService,\n    private rxStringService: RxStringService,\n    private rxLogService: RxLogService,\n    private rxViewExpressionValidatorService: RxViewExpressionValidatorService\n  ) {}\n\n  validate(\n    actionsDesignData: IViewComponentDesignData<IViewActionDesignProperties>[],\n    propertyName: string\n  ): Observable<IViewComponentDesignValidationIssue[]> {\n    const issues: Observable<IViewComponentDesignValidationIssue[]>[] = flow(\n      (actions: IViewComponentDesignData<IViewActionDesignProperties>[]) =>\n        actions.map(({ data }) => {\n          const descriptor = this.rxViewActionRegistryService.get(data.name);\n\n          return [\n            of(this.validateRequiredProps(data, descriptor, propertyName)),\n            this.performCustomValidation(data, descriptor, propertyName),\n            this.validateExpressions(data, descriptor, propertyName)\n          ];\n        }),\n      flatten\n    )(actionsDesignData);\n\n    return combineLatest([of(this.validateActionSequence(actionsDesignData, propertyName)), ...issues]).pipe(\n      map(flatten)\n    );\n  }\n\n  private performCustomValidation(\n    actionProps: IViewActionDesignProperties,\n    descriptor: IViewActionDescriptor,\n    issuePropertyName: string\n  ): Observable<IViewComponentDesignValidationIssue[]> {\n    const designManager: IViewActionDesignManager = this.rxViewActionRegistryService.getDesignManager(descriptor.name);\n\n    return designManager\n      ? designManager.validate(actionProps, issuePropertyName).pipe(\n          map((issues) =>\n            issues.map((issue) => ({\n              ...issue,\n              data: {\n                actionIndex: actionProps.index\n              }\n            }))\n          )\n        )\n      : of([]);\n  }\n\n  private validateRequiredProps(\n    actionProps: IViewActionDesignProperties,\n    descriptor: IViewActionDescriptor,\n    issuePropertyName: string\n  ): IViewComponentDesignValidationIssue[] {\n    return flow(\n      (descriptorParams) =>\n        descriptorParams.filter(\n          (param) => param.isRequired === true && this.rxStringService.isEmptySafe(actionProps[param.name])\n        ),\n      (descriptorParams) =>\n        descriptorParams.map((param) => ({\n          type: 'error',\n          description: `${descriptor.label} action: ${param.label || param.name} cannot be blank.`,\n          propertyName: issuePropertyName,\n          data: {\n            actionIndex: actionProps.index\n          }\n        }))\n    )(descriptor.parameters);\n  }\n\n  private validateExpressions(\n    actionProps: IViewActionDesignProperties,\n    descriptor: IViewActionDescriptor,\n    issuePropertyName: string\n  ): Observable<IViewComponentDesignValidationIssue[]> {\n    const actionIssues: Observable<IViewComponentDesignValidationIssue[]>[] = descriptor.parameters\n      .filter(\n        (paramDescriptor) => paramDescriptor.enableExpressionEvaluation === true && actionProps[paramDescriptor.name]\n      )\n      .map((paramDescriptor) =>\n        this.rxViewExpressionValidatorService\n          .validate(\n            actionProps[paramDescriptor.name],\n            issuePropertyName,\n            paramDescriptor.label || paramDescriptor.name,\n            paramDescriptor.evaluatorService\n          )\n          .pipe(\n            map((issues) =>\n              issues.map((issue) => ({\n                ...issue,\n                description: `${descriptor.label} action: ${issue.description}`,\n                data: {\n                  actionIndex: actionProps.index\n                }\n              }))\n            )\n          )\n      );\n\n    return actionIssues.length ? combineLatest(actionIssues).pipe(map(flatten)) : of([]);\n  }\n\n  private validateActionSequence(\n    actions: IViewComponentDesignData<IViewActionDesignProperties>[],\n    issuePropertyName: string\n  ): IViewComponentDesignValidationIssue[] {\n    return flow(\n      (actionsDesignData: IViewComponentDesignData<IViewActionDesignProperties>[]) =>\n        _map(actionsDesignData, ({ data }) => {\n          const descriptor = this.rxViewActionRegistryService.get(data.name);\n\n          return descriptor\n            ? _map(data, (propertyValue, propertyName) => {\n                if (\n                  descriptor.parameters.find((param) => param.name === propertyName)?.enableExpressionEvaluation &&\n                  this.rxStringService.isNonEmptyString(propertyValue)\n                ) {\n                  // Extract <ID> from ${view.components.<ID>.<Path>}\n                  const matches = (propertyValue as string).match(/\\${view\\.components\\.([0-9a-z-]+)\\..+}/);\n\n                  if (matches && matches[1]) {\n                    const referencedAction = find(actionsDesignData, { guid: matches[1] });\n\n                    if (Number(referencedAction?.data.index) > Number(data.index)) {\n                      return {\n                        type: 'error',\n                        description: `${descriptor.label} action: invalid expression for ${propertyName}.`,\n                        propertyName: issuePropertyName\n                      } as IViewComponentDesignValidationIssue;\n                    }\n                  }\n                }\n              })\n            : [];\n        }),\n      flatten,\n      compact\n    )(actions);\n  }\n}\n","import { Injector } from '@angular/core';\nimport { Actions, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { castArray } from 'lodash';\nimport { BehaviorSubject, merge, Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  first,\n  map,\n  mapTo,\n  shareReplay,\n  skipWhile,\n  startWith,\n  switchMap,\n  switchMapTo,\n  take,\n  takeUntil\n} from 'rxjs/operators';\nimport { IPlainObject } from '@helix/platform/shared/api';\nimport { ViewDesignerDispatcher } from '../+state/view-designer-dispatcher.service';\nimport { ViewDesignerFacade } from '../+state/view-designer.facade';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport {\n  IViewComponentDesignCommonDataDictionaryBranch,\n  IViewComponentDesignSetPayload,\n  IViewComponentDesignValidationIssue,\n  IViewDesignerInspectorConfig,\n  ViewComponentAddComponentPayload\n} from '../public-interfaces';\nimport { IViewComponentDesignData } from '../public-interfaces/view-component-design.types';\nimport { IViewComponentDesignSandbox } from '../public-interfaces/view-component-design-sandbox.interface';\nimport * as ViewComponentsActions from '../+state/view-component.actions';\nimport { RxViewDesignerModels } from '../core/view-designer-models.service';\nimport { IViewComponentDesignSettablePropertiesDataDictionary } from '../public-interfaces/view-component-design-settable-properties-data-dictionary.interfaces';\nimport {\n  IViewComponentDescriptor,\n  IViewDesignerComponentModel,\n  IViewLayout,\n  RX_VIEW_DEFINITION\n} from '@helix/platform/view/api';\n\nexport class ComponentSandbox implements IViewComponentDesignSandbox {\n  componentProperties$: Observable<IPlainObject>;\n  isComponentSelected$: Observable<boolean>;\n  destroyed$: Observable<boolean>;\n  viewModelsInitialized$: Observable<any>;\n  isViewReadOnly$: Observable<boolean>;\n  componentType: string;\n\n  private viewDesignerFacade = this.injector.get(ViewDesignerFacade);\n  private systemActions$ = this.injector.get<Actions>(Actions);\n  private viewDesignerDispatcher = this.injector.get(ViewDesignerDispatcher);\n  private rxViewDesignerModels = this.injector.get(RxViewDesignerModels);\n\n  private childModelsInitialized$ = new BehaviorSubject(false);\n  private dispatcher$: Subject<Action> = new Subject();\n  private breadcrumbs$ = new ReplaySubject<string>(1);\n\n  constructor(private injector: Injector, public guid: string, readonly descriptor: IViewComponentDescriptor) {\n    this.setUpPublicStreams();\n\n    this.viewDesignerFacade\n      .getComponentType(guid)\n      .pipe(take(1))\n      .subscribe((componentType) => (this.componentType = componentType));\n\n    this.viewDesignerFacade\n      .getComponentModel(this.guid)\n      .pipe(\n        map((model) => Boolean(model.lastUpdateTime || model.name)),\n        switchMap((isExistingViewComponent) => {\n          if (isExistingViewComponent) {\n            return this.viewDesignerFacade.viewModelsInitialized$;\n          } else {\n            return of(null);\n          }\n        }),\n        take(1),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => {\n        this.childModelsInitialized$.next(true);\n      });\n\n    this.viewModelsInitialized$ = this.viewDesignerFacade.viewModelsInitialized$.pipe(takeUntil(this.destroyed$));\n\n    // for optimization reasons postpone emit of breadcrumbs till component gets selected\n    this.isComponentSelected$\n      .pipe(\n        filter((isSelected) => isSelected),\n        first(),\n        switchMap(() => this.breadcrumbs$),\n        distinctUntilChanged(),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe((label) => {\n        this.dispatcher$.next(\n          ViewComponentsActions.setBreadcrumbs({\n            guid: this.guid,\n            label\n          })\n        );\n      });\n\n    merge(\n      // skip initial batch of setValidationIssues actions that are emitted during view designer initialization with empty payload\n      this.dispatcher$.pipe(\n        ofType(ViewComponentsActions.setValidationIssues),\n        skipWhile((action) => action.issues.length === 0)\n      ),\n      this.dispatcher$.pipe(filter((action) => action.type !== ViewComponentsActions.setValidationIssues.type))\n    )\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((action: Action) => this.viewDesignerDispatcher.dispatch(action));\n\n    // complete created subjects\n    this.destroyed$.subscribe(() => {\n      this.childModelsInitialized$.complete();\n      this.dispatcher$.complete();\n      this.breadcrumbs$.complete();\n    });\n  }\n\n  createError(\n    description: string,\n    propertyName?: string,\n    disableCorrection?: boolean\n  ): IViewComponentDesignValidationIssue {\n    return { type: 'error', description, propertyName, disableCorrection };\n  }\n\n  createWarning(\n    description: string,\n    propertyName?: string,\n    disableCorrection?: boolean\n  ): IViewComponentDesignValidationIssue {\n    return { type: 'warning', description, propertyName, disableCorrection };\n  }\n\n  getComponent<TChildComponentDesignProperties = IPlainObject>(\n    guid: string\n  ): Observable<IViewComponentDesignData<TChildComponentDesignProperties>> {\n    return this.viewDesignerFacade.getComponent(guid);\n  }\n\n  getChildComponents<T = IPlainObject>(\n    filterPredicate?: (component: IViewComponentDesignData) => boolean\n  ): Observable<Omit<IViewComponentDesignData<T>, 'children'>[]> {\n    return this.childModelsInitialized$\n      .asObservable()\n      .pipe(\n        filter(Boolean),\n        switchMapTo(this.viewDesignerFacade.getChildComponents<T>(this.guid, filterPredicate)),\n        takeUntil(this.destroyed$)\n      );\n  }\n\n  getChildComponentsTree(): Observable<IViewComponentDesignData[]> {\n    return this.childModelsInitialized$.asObservable().pipe(\n      filter((isInitialized) => isInitialized),\n      switchMapTo(this.viewDesignerFacade.getChildComponentTree(this.guid)),\n      shareReplay(1),\n      takeUntil(this.destroyed$)\n    );\n  }\n\n  getChildComponentGuids(\n    filterPredicate?: (component: IViewComponentDesignData) => boolean,\n    recursive = false\n  ): Observable<string[]> {\n    return this.childModelsInitialized$\n      .asObservable()\n      .pipe(\n        filter(Boolean),\n        switchMapTo(this.viewDesignerFacade.getChildComponentGuids(this.guid, recursive, filterPredicate)),\n        takeUntil(this.destroyed$)\n      );\n  }\n\n  setChildren(data: IViewComponentDesignSetPayload[], parentGuid?: string): void {\n    this.dispatcher$.next(\n      ViewComponentsActions.setChildComponents({\n        payload: {\n          guid: parentGuid || this.guid,\n          data\n        }\n      })\n    );\n  }\n\n  setChildrenByType(data: IViewComponentDesignSetPayload[], types: string[]): void {\n    this.dispatcher$.next(\n      ViewComponentsActions.setChildComponents({\n        payload: {\n          guid: this.guid,\n          data,\n          types\n        }\n      })\n    );\n  }\n\n  getParentComponentGuid(componentType?: string): Observable<string> {\n    return this.viewDesignerFacade\n      .getParentComponentGuid(this.guid, componentType)\n      .pipe(distinctUntilChanged(), takeUntil(this.destroyed$));\n  }\n\n  setValidationIssues(issues: IViewComponentDesignValidationIssue[]): void {\n    this.dispatcher$.next(ViewComponentsActions.setValidationIssues({ issues, guid: this.guid }));\n  }\n\n  updateComponentProperties(properties: IPlainObject): void {\n    this.viewDesignerFacade.updateComponentProperties(this.guid, properties);\n  }\n\n  getComponentPropertyValue<TPropertyName extends keyof IPlainObject>(\n    propertyName: TPropertyName,\n    componentGuid = this.guid\n  ): Observable<any> {\n    return this.viewDesignerFacade\n      .getComponentPropertyValue(componentGuid, propertyName)\n      .pipe(shareReplay(1), takeUntil(this.destroyed$));\n  }\n\n  getViewPropertyValue<T extends keyof IViewDesignModel>(propertyName: T): Observable<IViewDesignModel[T]> {\n    return this.viewDesignerFacade.getViewPropertyValue(propertyName).pipe(shareReplay(1), takeUntil(this.destroyed$));\n  }\n\n  updateInspectorConfig(inspectorConfig: IViewDesignerInspectorConfig): void {\n    this.viewDesignerFacade.setComponentInspector(this.guid, inspectorConfig);\n  }\n\n  setBreadcrumbs(label: string): void {\n    this.breadcrumbs$.next(label);\n  }\n\n  addComponent(data: ViewComponentAddComponentPayload | ViewComponentAddComponentPayload[]): void {\n    const dataArray = castArray<ViewComponentAddComponentPayload>(data);\n\n    const actionPayload = dataArray.map((component) => ({\n      ...component,\n      parentGuid: this.guid\n    }));\n\n    this.dispatcher$.next(ViewComponentsActions.addNewComponents({ payload: actionPayload }));\n  }\n\n  selectComponent(guid: string): void {\n    this.dispatcher$.next(ViewComponentsActions.selectComponent({ guid }));\n  }\n\n  removeComponents(guids: string[], selectParent?: boolean): void {\n    this.viewDesignerFacade.removeViewComponents(guids, selectParent);\n  }\n\n  moveComponent(guid: string, insertIndex: number, targetGuid?: string): void {\n    const data = { guid };\n    const columnIndex = 0;\n    const outletName = RX_VIEW_DEFINITION.defaultOutletName;\n\n    this.dispatcher$.next(\n      ViewComponentsActions.insertComponent({\n        data,\n        insertIndex,\n        columnIndex,\n        outletName,\n        targetGuid\n      })\n    );\n  }\n\n  setLayout(cols: number[]): void {\n    this.dispatcher$.next(\n      ViewComponentsActions.setComponentLayout({\n        guid: this.guid,\n        cols\n      })\n    );\n  }\n\n  getLayout(guid: string): Observable<IViewLayout> {\n    return this.viewDesignerFacade.getComponentLayout(guid).pipe(shareReplay(1), takeUntil(this.destroyed$));\n  }\n\n  setCommonDataDictionary(dataDictionaryBranch: IViewComponentDesignCommonDataDictionaryBranch): void {\n    this.viewDesignerFacade.setComponentCommonDataDictionaryBranch(this.guid, dataDictionaryBranch);\n  }\n\n  setSettablePropertiesDataDictionary(\n    componentName: string,\n    dataDictionary: IViewComponentDesignSettablePropertiesDataDictionary\n  ): void {\n    this.viewDesignerFacade.setComponentSettablePropertiesDataDictionary(this.guid, componentName, dataDictionary);\n  }\n\n  getComponentModel<T extends IViewDesignerComponentModel>(guid: string): T {\n    return this.rxViewDesignerModels.get(guid) as T;\n  }\n\n  getComponentsByType<TComponentDesignProperties>(\n    type: string\n  ): Observable<IViewComponentDesignData<TComponentDesignProperties>[]> {\n    return this.viewDesignerFacade\n      .getComponentsByType<TComponentDesignProperties>(type)\n      .pipe(takeUntil(this.destroyed$));\n  }\n\n  private setUpPublicStreams() {\n    const viewComponentsRemovedAction$ = this.systemActions$.pipe(\n      ofType(ViewComponentsActions.componentsRemoved),\n      filter((action) => action.guids.includes(this.guid))\n    );\n\n    this.destroyed$ = merge(\n      viewComponentsRemovedAction$,\n      this.viewDesignerFacade.initViewDesigner$,\n      this.viewDesignerFacade.destroyViewDesigner$\n    ).pipe(mapTo(true), first());\n\n    this.componentProperties$ = this.viewDesignerFacade\n      .getComponentProperties(this.guid)\n      .pipe(filter(Boolean), takeUntil(this.destroyed$), shareReplay(1));\n\n    this.isComponentSelected$ = this.systemActions$.pipe(\n      ofType(ViewComponentsActions.selectComponent),\n      map(({ guid }) => guid === this.guid),\n      distinctUntilChanged(),\n      startWith(false),\n      takeUntil(this.destroyed$),\n      shareReplay(1)\n    );\n\n    this.isViewReadOnly$ = this.viewDesignerFacade.isViewReadOnly$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IComponentPropertyDescriptor, RxViewComponentRegistryService } from '@helix/platform/view/api';\nimport { every, filter as _filter, flatten, isEmpty, map as _map, merge as _merge } from 'lodash';\nimport {\n  debounceTime,\n  filter,\n  map,\n  publishReplay,\n  refCount,\n  skipWhile,\n  switchMap,\n  take,\n  takeUntil\n} from 'rxjs/operators';\nimport { combineLatest, Observable, of, Subscription } from 'rxjs';\nimport { IViewComponentDesignValidationIssue } from '../public-interfaces/view-component-design-validation-issue.interface';\nimport { ViewDesignerFacade } from '../+state/view-designer.facade';\nimport { RxViewExpressionValidatorService } from './view-expression-validator.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewExpressionValidatorRegistryService {\n  private issuesObservableMap = new Map<string, Observable<IViewComponentDesignValidationIssue[]>>();\n  private validateSubscription: Subscription;\n\n  constructor(\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private viewDesignerFacade: ViewDesignerFacade,\n    private rxViewExpressionValidatorService: RxViewExpressionValidatorService\n  ) {}\n\n  registerComponents(guids: string[]): void {\n    guids.forEach((guid) => this.issuesObservableMap.set(guid, this.getComponentValidationIssues(guid)));\n\n    this.initValidation();\n  }\n\n  unregisterComponents(guids: string[]): void {\n    guids.forEach((guid) => this.issuesObservableMap.delete(guid));\n\n    this.initValidation();\n  }\n\n  unregisterAllComponents(): void {\n    this.issuesObservableMap.clear();\n    this.validateSubscription?.unsubscribe();\n  }\n\n  private initValidation(): void {\n    this.validateSubscription?.unsubscribe();\n\n    this.validateSubscription = combineLatest(\n      Array.from(this.issuesObservableMap.entries()).map(\n        ([guid, issues$]: [string, Observable<IViewComponentDesignValidationIssue[]>]) =>\n          issues$.pipe(\n            map((issues) => ({\n              [guid]: issues\n            }))\n          )\n      )\n    )\n      .pipe(\n        map((issuesByComponentGuid) => _merge({}, ...issuesByComponentGuid)),\n        skipWhile((issuesByComponentGuid) => every(Object.values(issuesByComponentGuid), isEmpty)),\n        // debounceTime will allow Set expression validation issues action to be executed once for improved performance.\n        debounceTime(0)\n      )\n      .subscribe((issues) => {\n        this.viewDesignerFacade.setExpressionValidationIssues(issues);\n      });\n  }\n\n  private getComponentValidationIssues(guid: string): Observable<IViewComponentDesignValidationIssue[]> {\n    return this.viewDesignerFacade.getComponentType(guid).pipe(\n      take(1),\n      switchMap((componentType) => {\n        const descriptor = this.rxViewComponentRegistryService.get(componentType);\n\n        const expressionProps = _filter(descriptor?.properties, {\n          enableExpressionEvaluation: true\n        });\n\n        const expressionPropertyNames = _map(expressionProps, 'name');\n\n        const descriptorPropMap = new Map<string, IComponentPropertyDescriptor>(\n          expressionProps.map((prop) => [prop.name, prop])\n        );\n\n        return expressionPropertyNames.length\n          ? combineLatest(\n              expressionPropertyNames.map((propertyName) =>\n                this.viewDesignerFacade\n                  .getComponentPropertyValue(guid, propertyName)\n                  .pipe(\n                    switchMap((propertyValue) =>\n                      this.rxViewExpressionValidatorService\n                        .validate(\n                          propertyValue,\n                          propertyName,\n                          descriptorPropMap.get(propertyName).label,\n                          descriptorPropMap.get(propertyName).evaluatorService\n                        )\n                        .pipe(\n                          takeUntil(\n                            this.viewDesignerFacade.allComponentGuids$.pipe(filter((guids) => !guids.has(guid)))\n                          )\n                        )\n                    )\n                  )\n              )\n            ).pipe(map(flatten))\n          : of([]);\n      }),\n      publishReplay(1),\n      refCount()\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IViewComponentDescriptor, IViewDefinitionPermission } from '@helix/platform/view/api';\nimport { IPlainObject } from '@helix/platform/shared/api';\nimport { isFunction } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDesignerStateHelperService {\n  getInitialComponentProperties(\n    initialProperties: IPlainObject,\n    componentDescriptor: IViewComponentDescriptor\n  ): IPlainObject {\n    let result = initialProperties;\n\n    if (isFunction(componentDescriptor.designComponentModel?.getInitialProperties)) {\n      result = componentDescriptor.designComponentModel.getInitialProperties(initialProperties);\n    }\n\n    return result;\n  }\n\n  getDefaultComponentPermissions(componentDescriptor: IViewComponentDescriptor): IViewDefinitionPermission[] {\n    let permissions = null;\n\n    if (isFunction(componentDescriptor.designComponentModel?.getDefaultPermissions)) {\n      permissions = componentDescriptor.designComponentModel.getDefaultPermissions();\n    }\n\n    return permissions;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { RxGuidService } from '@helix/platform/utils';\nimport { RX_VIEW_DEFINITION, RxViewComponentRegistryService, RxViewLayout } from '@helix/platform/view/api';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action, Store } from '@ngrx/store';\nimport { filter, map, mergeMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { ComponentSandbox } from '../component-sandbox/component-sandbox.class';\nimport { viewComponentModelsSelector } from './view-designer.selectors';\nimport { IViewComponentDesignModel } from '../interfaces/view-component-design-model.interface';\nimport { IViewComponentDesignModels } from '../interfaces/view-component-design-models.interface';\nimport { RxViewDesignerModels } from '../core/view-designer-models.service';\nimport { getAllChildGuids, getChildGuidsFromModel } from '../core/layout-helpers';\nimport * as ViewComponentsActions from './view-component.actions';\nimport * as ViewComponentActions from './view-component.actions';\nimport { difference, forEach, includes, isEmpty, isEqual, isFunction, last, map as _map } from 'lodash';\nimport { IViewComponentDesignSetPayload } from '../public-interfaces/view-component-design.types';\nimport {\n  IAddNewComponentActionPayload,\n  IInitializeComponentModelActionPayload,\n  IInitializeDataComponentModelActionPayload,\n  ISetChildrenActionPayload,\n  ISetComponentDataPayload\n} from './view-component.types';\nimport { RxViewDesignerInspectorService } from '../core/view-designer-inspector.service';\nimport { RxViewExpressionValidatorRegistryService } from '../validation/view-expression-validator-registry.service';\nimport * as ViewDesignerActions from './view-designer.actions';\nimport { RxViewDesignerStateHelperService } from './view-designer-state-helper.service';\nimport { RxViewDataDictionaryStoreService } from '../core/view-data-dictionary-store.service';\n\n@Injectable()\nexport class ViewDesignerComponentEffects {\n  @Effect()\n  initializeComponentModel$ = this.actions$.pipe(\n    ofType(ViewComponentActions.initializeComponentModels),\n    tap((action) => {\n      action.payload.forEach(({ componentModel }) => {\n        const componentDescriptor = this.rxViewComponentRegistryService.get(componentModel.type);\n        const sandbox = new ComponentSandbox(this.injector, componentModel.guid, componentDescriptor);\n        const model = new componentDescriptor.designComponentModel(this.injector, sandbox);\n\n        if (isFunction(model.rxInit)) {\n          model.rxInit();\n        }\n\n        this.viewDesignerModels.set(componentModel.guid, model);\n      });\n    }),\n    map(() => ViewDesignerActions.viewModelsInitialized())\n  );\n\n  @Effect({ dispatch: false })\n  registerComponentsValidation$ = this.actions$.pipe(\n    ofType(ViewComponentActions.initializeDataComponentModels, ViewComponentActions.initializeComponentModels),\n    tap((action) =>\n      this.rxViewExpressionValidatorRegistryService.registerComponents(\n        _map(action.payload, (payload) => payload.componentModel.guid)\n      )\n    )\n  );\n\n  @Effect({ dispatch: false })\n  onComponentsRemoved$ = this.actions$.pipe(\n    ofType(ViewComponentActions.componentsRemoved),\n    tap(({ guids }) => {\n      this.rxViewExpressionValidatorRegistryService.unregisterComponents(guids);\n      this.rxViewDataDictionaryStoreService.removeDataDictionaryForComponents(guids);\n    })\n  );\n\n  @Effect({ dispatch: false })\n  unregisterAllComponentsValidation$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.initViewDesigner, ViewDesignerActions.destroyViewDesigner),\n    tap(() => this.rxViewExpressionValidatorRegistryService.unregisterAllComponents())\n  );\n\n  @Effect()\n  insertComponent$ = this.actions$.pipe(\n    ofType(ViewComponentsActions.insertComponent),\n    map((payload) => {\n      const newPayload = {\n        insertIndex: payload.insertIndex,\n        columnIndex: payload.columnIndex,\n        outletName: payload.outletName,\n        parentGuid: payload.targetGuid\n      };\n\n      return payload.data.guid\n        ? ViewComponentsActions.moveComponent({\n            ...newPayload,\n            guid: payload.data.guid\n          })\n        : ViewComponentsActions.addNewComponents({\n            payload: [\n              {\n                ...newPayload,\n                type: payload.data.type,\n                selectComponent: true,\n                propertiesByName: payload.data.initialPropertiesByName\n              }\n            ]\n          });\n    })\n  );\n\n  @Effect()\n  addNewComponent$ = this.actions$.pipe(\n    ofType(ViewComponentsActions.addNewComponents),\n    withLatestFrom(this.store$.select(viewComponentModelsSelector)),\n    mergeMap(([action, viewComponentsState]) => {\n      const initializeComponentModelPayloads: IInitializeComponentModelActionPayload[] = [];\n      const initializeDataComponentModelPayloads: IInitializeDataComponentModelActionPayload[] = [];\n      const componentGuidsToSelect: string[] = [];\n\n      action.payload.forEach((component) => {\n        this.processAddComponentPayload(\n          component,\n          initializeComponentModelPayloads,\n          initializeDataComponentModelPayloads,\n          componentGuidsToSelect,\n          viewComponentsState\n        );\n      });\n\n      return [\n        initializeComponentModelPayloads.length\n          ? ViewComponentsActions.initializeComponentModels({ payload: initializeComponentModelPayloads })\n          : null,\n        initializeDataComponentModelPayloads.length\n          ? ViewComponentsActions.initializeDataComponentModels({ payload: initializeDataComponentModelPayloads })\n          : null,\n        componentGuidsToSelect.length\n          ? ViewComponentsActions.selectComponent({\n              guid: last(componentGuidsToSelect)\n            })\n          : null\n      ].filter(Boolean);\n    })\n  );\n\n  @Effect()\n  removeComponent$ = this.actions$.pipe(\n    ofType(ViewComponentsActions.removeComponents),\n    filter(({ guids }) => !isEmpty(guids)),\n    withLatestFrom(this.store$.select(viewComponentModelsSelector)),\n    mergeMap(([payload, viewComponentsState]) => {\n      const guidsToRemove = payload.guids.reduce((result: string[], guid: string) => {\n        const removedComponentModel = viewComponentsState[guid];\n\n        if (removedComponentModel) {\n          result.push(guid, ...getAllChildGuids(removedComponentModel, viewComponentsState));\n        }\n\n        return result;\n      }, []);\n\n      const removeGuidsSet = new Set(guidsToRemove);\n\n      removeGuidsSet.forEach((guid) => {\n        this.viewDesignerModels.delete(guid);\n        this.rxViewDesignerInspectorService.delete(guid);\n      });\n\n      const actions: Action[] = [ViewComponentsActions.componentsRemoved({ guids: [...removeGuidsSet] })];\n\n      if (payload.selectParent) {\n        const lastRemovedModel = viewComponentsState[last(payload.guids)];\n\n        if (lastRemovedModel?.parentGuid) {\n          actions.push(\n            ViewComponentsActions.selectComponent({\n              guid: lastRemovedModel.parentGuid\n            })\n          );\n        }\n      }\n\n      return actions;\n    })\n  );\n\n  @Effect()\n  setChildren$ = this.actions$.pipe(\n    ofType(ViewComponentActions.setChildComponents),\n    map((action) => action.payload),\n    withLatestFrom(this.store$.select(viewComponentModelsSelector)),\n    mergeMap(([actionPayload, viewComponentsState]) => {\n      const actions: Action[] = [];\n      const componentGuidsToRemove: string[] = [];\n      const addComponentsPayloadAll: IAddNewComponentActionPayload[] = [];\n      const editComponentPayloadAll: ISetComponentDataPayload[] = [];\n\n      processChildComponents(actionPayload);\n\n      function processChildComponents(payload: ISetChildrenActionPayload): void {\n        const componentsToSet: IViewComponentDesignSetPayload[] = payload.data;\n        const componentsGuidsToSet = componentsToSet.map((component) => component.guid);\n        const hostComponent = viewComponentsState[payload.guid];\n        let existingChildGuids: string[] = getChildGuidsFromModel(hostComponent);\n\n        if (payload.types) {\n          existingChildGuids = existingChildGuids.filter((guid) =>\n            payload.types.includes(viewComponentsState[guid].type)\n          );\n        }\n\n        const componentGuidsToRemoveLocal: string[] = difference(existingChildGuids, componentsGuidsToSet);\n        const componentGuidsToAdd: string[] = difference(componentsGuidsToSet, existingChildGuids);\n\n        const componentsGuidsToUpdate = difference(\n          existingChildGuids,\n          componentGuidsToAdd,\n          componentGuidsToRemoveLocal\n        );\n\n        componentGuidsToRemove.push(...componentGuidsToRemoveLocal);\n\n        const addComponentsPayload = componentsToSet.reduce<IAddNewComponentActionPayload[]>((result, action) => {\n          if (includes(componentGuidsToAdd, action.guid)) {\n            result.push(getAddComponentPayload(action, payload.guid));\n          }\n\n          return result;\n        }, []);\n\n        addComponentsPayloadAll.push(...addComponentsPayload);\n\n        const editComponentPayload = componentsToSet.reduce((result, action) => {\n          if (includes(componentsGuidsToUpdate, action.guid)) {\n            const existingModel: IViewComponentDesignModel = viewComponentsState[action.guid];\n\n            if (!isEqual(existingModel.propertiesByName, action.data || {})) {\n              result.push({ guid: action.guid, data: action.data });\n            }\n\n            if (action.children) {\n              processChildComponents({\n                guid: action.guid,\n                data: action.children\n              });\n            }\n          }\n\n          return result;\n        }, []);\n\n        editComponentPayloadAll.push(...editComponentPayload);\n      }\n\n      function getAddComponentPayload(\n        action: IViewComponentDesignSetPayload,\n        parentGuid: string\n      ): IAddNewComponentActionPayload {\n        const result: IAddNewComponentActionPayload = {\n          propertiesByName: action.data,\n          guid: action.guid,\n          parentGuid,\n          type: action.type,\n          columnIndex: action.columnIndex || 0,\n          insertIndex: action.insertIndex,\n          outletName: action.outletName || RX_VIEW_DEFINITION.defaultOutletName\n        };\n\n        if (action.children) {\n          result.children = _map(action.children, (child) => getAddComponentPayload(child, action.guid));\n        }\n\n        return result;\n      }\n\n      if (componentGuidsToRemove.length) {\n        actions.push(ViewComponentsActions.removeComponents({ guids: componentGuidsToRemove }));\n      }\n\n      if (addComponentsPayloadAll.length) {\n        actions.push(ViewComponentsActions.addNewComponents({ payload: addComponentsPayloadAll }));\n      }\n\n      if (editComponentPayloadAll.length) {\n        actions.push(ViewComponentsActions.setComponentData({ payload: editComponentPayloadAll }));\n      }\n\n      return actions;\n    })\n  );\n\n  private processAddComponentPayload(\n    component: IAddNewComponentActionPayload,\n    initializeComponentModelPayload: IInitializeComponentModelActionPayload[],\n    initializeDataComponentModelPayloads: IInitializeDataComponentModelActionPayload[],\n    componentGuidsToSelect: string[],\n    viewComponentsState: IViewComponentDesignModels\n  ): void {\n    const componentDescriptor = this.rxViewComponentRegistryService.get(component.type);\n\n    const payloadParent = initializeComponentModelPayload.find(\n      (payload) => payload.componentModel.guid === component.parentGuid\n    );\n\n    const modelParent = viewComponentsState[component.parentGuid];\n\n    const parentWithoutLayout =\n      (payloadParent && !payloadParent.componentModel.layout) || (modelParent && !modelParent.layout);\n\n    const componentModel: Partial<IViewComponentDesignModel> = {\n      guid: component.guid || this.rxGuidService.generate(),\n      type: component.type,\n      parentGuid: component.parentGuid,\n      propertiesByName: this.rxViewDesignerStateHelperService.getInitialComponentProperties(\n        component.propertiesByName,\n        componentDescriptor\n      ),\n      permissions: this.rxViewDesignerStateHelperService.getDefaultComponentPermissions(componentDescriptor)\n    };\n\n    if (this.rxViewComponentRegistryService.isDataComponentDescriptor(componentDescriptor) || parentWithoutLayout) {\n      componentModel.resourceType = componentDescriptor.isContainerComponent\n        ? RX_VIEW_DEFINITION.resourceTypes.containerViewComponent\n        : RX_VIEW_DEFINITION.resourceTypes.viewComponent;\n\n      initializeDataComponentModelPayloads.push({\n        componentModel: componentModel as IViewComponentDesignModel\n      });\n    } else {\n      componentModel.resourceType =\n        componentDescriptor.outlets || componentDescriptor.isContainerComponent\n          ? RX_VIEW_DEFINITION.resourceTypes.containerViewComponent\n          : RX_VIEW_DEFINITION.resourceTypes.viewComponent;\n\n      if (componentDescriptor.outlets) {\n        componentModel.layout = RxViewLayout.getEmptyViewLayoutForOutletNames(componentDescriptor.outlets);\n      }\n\n      initializeComponentModelPayload.push({\n        componentModel: componentModel as IViewComponentDesignModel,\n        insertIndex: component.insertIndex,\n        columnIndex: component.columnIndex || 0,\n        outletName: component.outletName || RX_VIEW_DEFINITION.defaultOutletName\n      });\n\n      if (component.selectComponent) {\n        componentGuidsToSelect.push(componentModel.guid);\n      }\n    }\n\n    forEach(component.children, (child) => {\n      this.processAddComponentPayload(\n        {\n          ...child,\n          parentGuid: componentModel.guid\n        },\n        initializeComponentModelPayload,\n        initializeDataComponentModelPayloads,\n        componentGuidsToSelect,\n        viewComponentsState\n      );\n    });\n  }\n\n  constructor(\n    private actions$: Actions,\n    private injector: Injector,\n    private viewDesignerModels: RxViewDesignerModels,\n    private rxGuidService: RxGuidService,\n    private store$: Store<any>,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private rxViewDesignerInspectorService: RxViewDesignerInspectorService,\n    private rxViewExpressionValidatorRegistryService: RxViewExpressionValidatorRegistryService,\n    private rxViewDesignerStateHelperService: RxViewDesignerStateHelperService,\n    private rxViewDataDictionaryStoreService: RxViewDataDictionaryStoreService\n  ) {}\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { ErrorHandler, Injectable } from '@angular/core';\nimport {\n  RxBundleCacheService,\n  RxDefinitionAdapterRegistryService,\n  RxDefinitionNameService,\n  RxDefinitionUpdateService,\n  RxGlobalCacheService,\n  RxLogService\n} from '@helix/platform/shared/api';\nimport { RxModalService, RxUtilityModalsService } from '@helix/platform/ui-kit';\nimport { RxGuidService, RxJsonParserService } from '@helix/platform/utils';\nimport {\n  AnyViewComponentDefinition,\n  IContainerViewComponentDefinition,\n  IViewActionDescriptor,\n  IViewComponentDefinition,\n  IViewComponentDescriptor,\n  IViewDefinition,\n  IViewLayout,\n  RX_VIEW_DEFINITION,\n  RxOldViewLayoutAdapterService,\n  RxViewActionDefinitionAdapterRegistryService,\n  RxViewActionRegistryService,\n  RxViewComponentRegistryService,\n  RxViewComponentType,\n  RxViewDefinitionParserService,\n  RxViewDefinitionService,\n  RxViewLayout,\n  ViewComponentPropertyType\n} from '@helix/platform/view/api';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action, Store } from '@ngrx/store';\nimport { cloneDeep, find, includes, last, map as _map, omit, transform } from 'lodash';\nimport { noop, Observable, of, throwError } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { RuntimeViewParamsModalComponent } from '../components/runtime-view-params-modal';\nimport { getChildGuidsFromModel } from '../core/layout-helpers';\nimport { RxViewDataDictionaryStoreService } from '../core/view-data-dictionary-store.service';\nimport { RxViewDefinitionGeneratorService } from '../core/view-definition-generator.service';\nimport { RxViewDesignerInspectorService } from '../core/view-designer-inspector.service';\nimport { RxViewDesignerModels } from '../core/view-designer-models.service';\nimport { IViewComponentDesignModel } from '../interfaces/view-component-design-model.interface';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport * as ViewComponentsActions from './view-component.actions';\nimport {\n  IInitializeComponentModelActionPayload,\n  IInitializeDataComponentModelActionPayload,\n  IUpdateComponentModelPayload\n} from './view-component.types';\nimport { RxViewDesignerStateHelperService } from './view-designer-state-helper.service';\nimport * as ViewDesignerActions from './view-designer.actions';\nimport {\n  selectedInspectorTabIdSelector,\n  viewComponentModelsSelector,\n  viewModelSelector\n} from './view-designer.selectors';\n\n@Injectable()\nexport class ViewDesignerEffects {\n  constructor(\n    private actions$: Actions,\n    private store$: Store<any>,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxDefinitionUpdateService: RxDefinitionUpdateService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxJsonParserService: RxJsonParserService,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private rxViewActionRegistryService: RxViewActionRegistryService,\n    private rxViewDefinitionService: RxViewDefinitionService,\n    private viewDesignerModels: RxViewDesignerModels,\n    private rxOldViewLayoutAdapterService: RxOldViewLayoutAdapterService,\n    private rxViewDefinitionParserService: RxViewDefinitionParserService,\n    private rxLogService: RxLogService,\n    private rxModalService: RxModalService,\n    private errorHandler: ErrorHandler,\n    private rxUtilityModalsService: RxUtilityModalsService,\n    private rxDefinitionAdapterRegistryService: RxDefinitionAdapterRegistryService,\n    private rxViewDesignerInspectorService: RxViewDesignerInspectorService,\n    private rxViewDefinitionGeneratorService: RxViewDefinitionGeneratorService,\n    private rxViewDesignerStateHelperService: RxViewDesignerStateHelperService,\n    private rxViewActionDefinitionAdapterRegistryService: RxViewActionDefinitionAdapterRegistryService,\n    private rxGuidService: RxGuidService,\n    private rxViewDataDictionaryStoreService: RxViewDataDictionaryStoreService\n  ) {}\n\n  @Effect()\n  initViewDesigner$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.initViewDesigner),\n    switchMap(({ payload }) => {\n      const { viewDefinitionName, layoutTemplate } = payload;\n\n      this.clearStorages();\n\n      return [\n        ViewDesignerActions.loadFriendlyBundleName(),\n        ViewDesignerActions.loadViewDefinition({\n          viewDefinitionName,\n          layoutTemplate\n        })\n      ];\n    })\n  );\n\n  @Effect({ dispatch: false })\n  destroyViewDesigner$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.destroyViewDesigner),\n    tap(() => this.clearStorages())\n  );\n\n  @Effect()\n  loadFriendlyBundleName$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.loadFriendlyBundleName),\n    switchMap(() => this.rxGlobalCacheService.getBundleDescriptor(this.rxBundleCacheService.bundleId)),\n    switchMap((descriptor) => {\n      let result$;\n\n      if (descriptor) {\n        result$ = of(\n          ViewDesignerActions.friendlyBundleNameLoadSuccess({\n            friendlyBundleName: descriptor.friendlyName\n          })\n        );\n      } else {\n        result$ = throwError(`Bundle \"${this.rxBundleCacheService.bundleId}\" not found`);\n      }\n\n      return result$.pipe(\n        catchError((error) => {\n          this.errorHandler.handleError(error);\n\n          return of(ViewDesignerActions.friendlyBundleNameLoadError({ payload: error }));\n        })\n      );\n    })\n  );\n\n  @Effect()\n  loadViewDefinition$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.loadViewDefinition),\n    switchMap(({ viewDefinitionName, layoutTemplate }) => {\n      const viewDefinition$: Observable<IViewDefinition> = viewDefinitionName\n        ? this.rxViewDefinitionService.get(viewDefinitionName)\n        : this.rxViewDefinitionService.getNew(layoutTemplate);\n\n      return viewDefinition$.pipe(\n        map((viewDefinition) =>\n          ViewDesignerActions.viewDefinitionLoadSuccess({\n            viewDefinition\n          })\n        ),\n        catchError((error) => {\n          this.errorHandler.handleError(error);\n\n          return of(ViewDesignerActions.viewDefinitionLoadError());\n        })\n      );\n    })\n  );\n\n  @Effect()\n  viewDefinitionLoadSuccess$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.viewDefinitionLoadSuccess),\n    withLatestFrom(this.store$.select(viewModelSelector)),\n    mergeMap(([payload, viewModel]) => {\n      // If viewModel isn't empty it's considered that view definition is loaded after save to update\n      // existing view models with properties added by server e.g 'lastChangedBy', 'lastUpdateTime' and etc.\n      return viewModel\n        ? this.getActionsToUpdateExistingViewModels(payload.viewDefinition)\n        : this.getActionsToInitializeViewModels(payload.viewDefinition);\n    })\n  );\n\n  @Effect()\n  selectViewComponent$ = this.actions$.pipe(\n    ofType(ViewComponentsActions.selectComponent),\n    withLatestFrom(this.store$.select(viewModelSelector), this.store$.select(selectedInspectorTabIdSelector)),\n    mergeMap(([action, viewModel, currentInspectorTabId]) => {\n      const selectedInspectorTab = viewModel.guid === action.guid ? 0 : 1;\n\n      if (selectedInspectorTab !== currentInspectorTabId) {\n        return [\n          ViewDesignerActions.selectInspectorTab({\n            tabId: selectedInspectorTab\n          })\n        ];\n      } else {\n        return [];\n      }\n    })\n  );\n\n  @Effect()\n  generateViewDefinition$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.generateViewDefinition),\n    withLatestFrom(\n      this.store$.select(viewModelSelector),\n      this.store$.select(viewComponentModelsSelector),\n      (action, viewModel, componentModels) => ({ viewModel, componentModels })\n    ),\n    map(({ viewModel, componentModels }) => this.rxViewDefinitionGeneratorService.generate(viewModel, componentModels)),\n    map((viewDefinition: IViewDefinition) =>\n      ViewDesignerActions.setGeneratedViewDefinition({ payload: viewDefinition })\n    )\n  );\n\n  @Effect()\n  saveViewDefinition$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.saveViewDefinition),\n    withLatestFrom(\n      this.store$.select(viewModelSelector),\n      this.store$.select(viewComponentModelsSelector),\n      (action, viewModel, components) => ({ viewModel, components })\n    ),\n    switchMap(({ viewModel, components }) => {\n      const viewDefinition = this.rxViewDefinitionGeneratorService.generate(viewModel, components, true);\n\n      return (\n        viewDefinition.lastUpdateTime\n          ? this.rxDefinitionUpdateService.execute(\n              this.rxViewDefinitionService.update.bind(\n                this.rxViewDefinitionService,\n                viewDefinition.name,\n                viewDefinition\n              )\n            )\n          : this.rxViewDefinitionService.create(viewDefinition)\n      ).pipe(\n        switchMap((response: HttpResponse<any>) => {\n          const definitionName =\n            decodeURIComponent(last(response?.headers.get('Location').split('/')) || '') || viewDefinition.name;\n\n          return [\n            ViewDesignerActions.viewDefinitionSaveSuccess({ viewDefinitionName: definitionName }),\n            viewDefinition.lastUpdateTime\n              ? ViewDesignerActions.loadViewDefinition({\n                  viewDefinitionName: viewDefinition.name\n                })\n              : null\n          ].filter(Boolean);\n        }),\n        catchError((error) => {\n          this.errorHandler.handleError(error);\n\n          return of(ViewDesignerActions.viewDefinitionSaveError());\n        })\n      );\n    })\n  );\n\n  @Effect()\n  clearCanvas$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.clearCanvas),\n    withLatestFrom(this.store$.select(viewModelSelector)),\n    map(([action, viewModel]) => ViewComponentsActions.removeComponents({ guids: getChildGuidsFromModel(viewModel) }))\n  );\n\n  @Effect({ dispatch: false })\n  runPreview$ = this.actions$.pipe(\n    ofType(ViewDesignerActions.runPreview),\n    withLatestFrom(this.store$.select(viewModelSelector), (action, viewModel) => viewModel),\n    switchMap((viewModel: IViewDesignModel) =>\n      viewModel.targetViewDefinitionName\n        ? this.rxViewDefinitionService.get(viewModel.targetViewDefinitionName)\n        : of(viewModel)\n    ),\n    tap((viewModel: IViewDesignModel) => {\n      const encodedViewDefinitionName = encodeURIComponent(viewModel.name);\n      let url = `/helix/index.html#/${this.rxBundleCacheService.bundleId}/preview/${encodedViewDefinitionName}`;\n\n      if (viewModel.inputParams.length) {\n        this.rxModalService\n          .openModal({\n            title: 'Enter view parameter values',\n            content: RuntimeViewParamsModalComponent,\n            data: { inputParams: _map(viewModel.inputParams, 'name') },\n            size: 'sm'\n          })\n          .catch(noop)\n          .then((params: { [inputName: string]: string }) => {\n            const inputConfig = _map(params, (value, name) => {\n              return `${encodeURIComponent(name)}=${encodeURIComponent(value)}`;\n            });\n\n            url += `?${inputConfig.join('&')}`;\n\n            if (params) {\n              window.open(url);\n            }\n          });\n      } else {\n        window.open(url);\n      }\n    })\n  );\n\n  private clearStorages(): void {\n    this.viewDesignerModels.clear();\n    this.rxViewDesignerInspectorService.clear();\n    this.rxViewDataDictionaryStoreService.clear();\n  }\n\n  private convertViewDefinitionToModel(viewDefinition: IViewDefinition): IViewDesignModel {\n    const isAngularJsView = Boolean(viewDefinition.lastUpdateTime) && !includes(viewDefinition.layout, '\"outlets\"');\n\n    this.rxViewDefinitionParserService\n      .getComponents(viewDefinition)\n      .forEach((definition) => this.rxOldViewLayoutAdapterService.convertLayout(definition));\n\n    const viewModel: IViewDesignModel = omit(viewDefinition, ['componentDefinitions', 'layout']) as IViewDesignModel;\n    const layout = this.rxJsonParserService.tryParseJson<IViewLayout>(viewDefinition.layout);\n\n    viewModel.layout = RxViewLayout.getEmptyViewLayoutForOutlets(layout.outlets);\n    viewModel.displayName = decodeURIComponent(this.rxDefinitionNameService.getDisplayName(viewModel.name));\n    viewModel.layoutName = RxViewLayout.getLayoutName(viewModel.layout);\n    viewModel.isAngularJsView = isAngularJsView;\n\n    return viewModel;\n  }\n\n  private convertComponentDefinitionToModel(\n    definition: AnyViewComponentDefinition,\n    parentGuid: string,\n    descriptor: IViewComponentDescriptor | IViewActionDescriptor\n  ): IViewComponentDesignModel {\n    const componentModel = omit(definition, ['componentDefinitions', 'layout']) as IViewComponentDesignModel;\n\n    componentModel.parentGuid = parentGuid;\n    this.processComponentDefinitionProperties(componentModel, descriptor);\n\n    if (this.isComponentHasLayout(definition)) {\n      const layout = this.rxJsonParserService.tryParseJson<IViewLayout>(definition.layout);\n\n      componentModel.layout = RxViewLayout.getEmptyViewLayoutForOutlets(layout.outlets);\n    }\n\n    return componentModel;\n  }\n\n  private processComponentDefinitionProperties(\n    componentModel: IViewComponentDesignModel,\n    descriptor: IViewComponentDescriptor | IViewActionDescriptor\n  ) {\n    componentModel.propertiesByName = transform(\n      componentModel.propertiesByName,\n      (result, propertyValue, propertyKey) => {\n        const propertyDescriptor = find(\n          (descriptor as IViewComponentDescriptor).properties || (descriptor as IViewActionDescriptor).parameters,\n          {\n            name: propertyKey\n          }\n        );\n\n        if (propertyDescriptor && propertyDescriptor.designType) {\n          switch (true) {\n            case propertyDescriptor.designType === ViewComponentPropertyType.String:\n              result[propertyKey] = propertyValue;\n\n              break;\n\n            default:\n              result[propertyKey] = this.rxJsonParserService.tryParseJson(propertyValue, propertyValue);\n\n              break;\n          }\n        } else {\n          result[propertyKey] = propertyValue;\n        }\n\n        return result;\n      },\n      {}\n    );\n\n    if (!this.rxGuidService.isGuid(componentModel.name)) {\n      componentModel.propertiesByName.name = componentModel.name;\n    }\n\n    if ('type' in descriptor) {\n      componentModel.propertiesByName = this.rxViewDesignerStateHelperService.getInitialComponentProperties(\n        componentModel.propertiesByName,\n        descriptor\n      );\n    }\n  }\n\n  private traverseByComponents(\n    component: IViewDefinition | IContainerViewComponentDefinition,\n    predicate: (\n      definition: IViewComponentDefinition,\n      guid: string,\n      name: string,\n      index: number,\n      colIndex: number,\n      columnSpan: number\n    ) => void\n  ): void {\n    const componentLayout = this.rxJsonParserService.tryParseJson(component.layout) as IViewLayout;\n    const childComponentDefinitions = component.componentDefinitions;\n\n    if (componentLayout) {\n      componentLayout.outlets.forEach((outlet) => {\n        outlet.columns.forEach((column, colIndex) => {\n          column.children.forEach((childComponentGuid, index) => {\n            const childComponentDefinition = childComponentDefinitions.find(\n              (definition) => definition.guid === childComponentGuid\n            );\n\n            if (childComponentDefinition) {\n              predicate(childComponentDefinition, component.guid, outlet.name, index, colIndex, column.span);\n\n              if ((childComponentDefinition as IContainerViewComponentDefinition).componentDefinitions) {\n                this.traverseByComponents(childComponentDefinition as IContainerViewComponentDefinition, predicate);\n              }\n            }\n          });\n        });\n      });\n    }\n\n    childComponentDefinitions\n      .filter((definition) => {\n        const descriptor = this.rxViewComponentRegistryService.get(definition.type);\n\n        return descriptor?.isDataComponent || descriptor?.isPageComponent;\n      })\n      .forEach((childComponentDefinition, index) => {\n        predicate(childComponentDefinition, component.guid, null, index, 0, 0);\n\n        if ((childComponentDefinition as IContainerViewComponentDefinition).componentDefinitions) {\n          this.traverseByComponents(childComponentDefinition as IContainerViewComponentDefinition, predicate);\n        }\n      });\n  }\n\n  private isComponentHasLayout(\n    definition: IViewComponentDefinition | IContainerViewComponentDefinition\n  ): definition is IContainerViewComponentDefinition {\n    return Boolean((definition as IContainerViewComponentDefinition).layout);\n  }\n\n  private getActionsToInitializeViewModels(viewDefinition: IViewDefinition): Action[] {\n    const viewDefinitionClone = cloneDeep(viewDefinition);\n    const viewModel = this.convertViewDefinitionToModel(viewDefinitionClone);\n\n    const initComponentModelsPayload: IInitializeComponentModelActionPayload[] = [];\n    const initDataComponentModelsPayload: IInitializeDataComponentModelActionPayload[] = [];\n\n    this.traverseByComponents(\n      viewDefinitionClone,\n      (componentDefinition, parentGuid, outletName, insertIndex, columnIndex, columnSpan) => {\n        const componentDescriptor = this.rxViewComponentRegistryService.get(componentDefinition.type);\n\n        if (componentDescriptor && !componentDescriptor.isPageComponent) {\n          const adapter =\n            componentDefinition.type === RxViewComponentType.Action\n              ? this.rxViewActionDefinitionAdapterRegistryService.getDesignAdapter(\n                  componentDefinition.propertiesByName.name\n                )\n              : this.rxDefinitionAdapterRegistryService.getDesignAdapter(componentDefinition.type);\n\n          adapter?.adaptDefinition(componentDefinition, viewDefinitionClone);\n\n          let actionDescriptor;\n\n          if (componentDefinition.type === RxViewComponentType.Action) {\n            actionDescriptor = this.rxViewActionRegistryService.get(componentDefinition.propertiesByName.name);\n\n            if (!actionDescriptor) {\n              actionDescriptor = this.rxViewActionRegistryService.registerUnknownAction(\n                componentDefinition.propertiesByName.name\n              );\n            }\n          }\n\n          const componentModel = this.convertComponentDefinitionToModel(\n            componentDefinition,\n            parentGuid,\n            actionDescriptor || componentDescriptor\n          );\n\n          if (\n            this.rxViewComponentRegistryService.isDataComponentDescriptor(componentDescriptor) ||\n            outletName === null\n          ) {\n            initDataComponentModelsPayload.push({\n              componentModel\n            });\n          } else {\n            initComponentModelsPayload.push({\n              insertIndex,\n              columnIndex,\n              componentModel,\n              outletName,\n              columnSpan\n            });\n          }\n        } else if (this.rxViewDefinitionService.isPageView(viewDefinitionClone)) {\n          let pageComponentChildDescriptor = this.rxViewComponentRegistryService.get(componentDefinition.type);\n\n          if (!pageComponentChildDescriptor) {\n            pageComponentChildDescriptor = {\n              type: componentDefinition.type,\n              name: RX_VIEW_DEFINITION.unknownPageComponent.name\n            };\n          }\n\n          const componentModel = this.convertComponentDefinitionToModel(\n            componentDefinition,\n            parentGuid,\n            pageComponentChildDescriptor\n          );\n\n          initDataComponentModelsPayload.push({\n            componentModel\n          });\n        } else {\n          const unknownComponentDescriptor = {\n            ...this.rxViewComponentRegistryService.get(RxViewComponentType.Unknown),\n            type: componentDefinition.type\n          };\n\n          this.rxViewComponentRegistryService.registerSync(unknownComponentDescriptor);\n\n          const componentModel = this.convertComponentDefinitionToModel(\n            componentDefinition,\n            parentGuid,\n            unknownComponentDescriptor\n          );\n\n          initComponentModelsPayload.push({\n            insertIndex,\n            columnIndex,\n            componentModel,\n            outletName,\n            columnSpan\n          });\n\n          this.rxLogService.warning(\n            `Cannot initialize view component. View Component Descriptor for ${componentDefinition.type} not found.`\n          );\n        }\n      }\n    );\n\n    return [\n      ViewDesignerActions.setViewModel({ payload: viewModel }),\n      initComponentModelsPayload.length\n        ? ViewComponentsActions.initializeComponentModels({ payload: initComponentModelsPayload })\n        : null,\n      initDataComponentModelsPayload.length\n        ? ViewComponentsActions.initializeDataComponentModels({ payload: initDataComponentModelsPayload })\n        : null,\n      initComponentModelsPayload.length ? null : ViewDesignerActions.viewModelsInitialized()\n    ].filter(Boolean);\n  }\n\n  private getActionsToUpdateExistingViewModels(viewDefinition: IViewDefinition): Action[] {\n    const viewDefinitionClone = cloneDeep(viewDefinition);\n\n    const updateComponentModelPayloads: IUpdateComponentModelPayload[] = this.rxViewDefinitionParserService\n      .getComponents(viewDefinitionClone, true)\n      .map(({ componentDefinition }) => ({\n        guid: componentDefinition.guid,\n        partialModel: omit(componentDefinition, [\n          'layout',\n          'propertiesByName',\n          'componentDefinitions'\n        ]) as Partial<IViewComponentDesignModel>\n      }));\n\n    return [\n      ViewDesignerActions.updateViewModel({\n        payload: omit(viewDefinitionClone, ['layout', 'componentDefinitions'])\n      }),\n      updateComponentModelPayloads.length\n        ? ViewComponentsActions.updateComponentModel({ payload: updateComponentModelPayloads })\n        : null,\n      ViewDesignerActions.viewModelsUpdatedAfterSave()\n    ].filter(Boolean);\n  }\n}\n","import { createReducer, on } from '@ngrx/store';\n\nimport { IViewDefinition } from '@helix/platform/view/api';\nimport * as ViewDesignerActions from './view-designer.actions';\n\nexport function getInitialState(): IViewDefinition {\n  return null;\n}\n\nexport const reducer = createReducer<IViewDefinition>(\n  getInitialState(),\n\n  on(ViewDesignerActions.initViewDesigner, getInitialState),\n\n  on(ViewDesignerActions.destroyViewDesigner, getInitialState),\n\n  on(ViewDesignerActions.setGeneratedViewDefinition, (state, { payload }) => {\n    return payload;\n  })\n);\n\nexport function viewDefinitionReducer(state, action) {\n  return reducer(state, action);\n}\n","import { omit, has } from 'lodash';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as ViewDesignerActions from './view-designer.actions';\nimport * as ViewComponentsActions from './view-component.actions';\n\ntype BreadcrumbLabel = string;\n\nexport interface IViewDesignerBreadcrumbsState {\n  [guid: string]: BreadcrumbLabel;\n}\n\nexport function getInitialState(): IViewDesignerBreadcrumbsState {\n  return {};\n}\n\nexport const reducer = createReducer<IViewDesignerBreadcrumbsState>(\n  getInitialState(),\n\n  on(ViewDesignerActions.initViewDesigner, getInitialState),\n\n  on(ViewDesignerActions.destroyViewDesigner, getInitialState),\n\n  on(ViewComponentsActions.setBreadcrumbs, (state, { guid, label }) => {\n    return { ...state, [guid]: label };\n  }),\n\n  on(ViewComponentsActions.componentsRemoved, (state, { guids }) => {\n    let newState = state;\n\n    if (guids.some((guid) => has(state, guid))) {\n      newState = omit(state, guids);\n    }\n\n    return newState;\n  })\n);\n\nexport function viewDesignerBreadcrumbsReducer(state, action) {\n  return reducer(state, action);\n}\n","import { cloneDeep, last, omit } from 'lodash';\nimport { createReducer, on } from '@ngrx/store';\n\nimport { RX_VIEW_DEFINITION } from '@helix/platform/view/api';\nimport * as ViewDesignerActions from './view-designer.actions';\nimport * as ViewComponentActions from './view-component.actions';\nimport { IViewDesignModelState } from '../interfaces/view-design-model-state.interface';\nimport { IViewComponentDesignModel } from '../interfaces/view-component-design-model.interface';\nimport { IViewDesignModel } from '../interfaces/view-design-model.interface';\nimport {\n  addChildComponent,\n  findParentComponentModel,\n  isComponentContainsChild,\n  removeChildComponent\n} from '../core/layout-helpers';\nimport { IInitializeComponentModelActionPayload } from './view-component.types';\n\nexport function getInitialState(): IViewDesignModelState {\n  return {\n    viewDesignModel: null,\n    viewComponentDesignModels: {}\n  };\n}\n\nfunction initializeComponentModel(newState: IViewDesignModelState, payload: IInitializeComponentModelActionPayload) {\n  newState.viewComponentDesignModels = {\n    ...newState.viewComponentDesignModels,\n    [payload.componentModel.guid]: payload.componentModel\n  };\n\n  // update parent layout\n  if (payload.componentModel.parentGuid === newState.viewDesignModel.guid) {\n    newState.viewDesignModel = addChildComponent(\n      newState.viewDesignModel,\n      payload.componentModel.guid,\n      payload.outletName,\n      payload.insertIndex,\n      payload.columnIndex,\n      payload.columnSpan\n    ) as IViewDesignModel;\n  } else {\n    const parentComponentModel = newState.viewComponentDesignModels[payload.componentModel.parentGuid];\n\n    if (parentComponentModel) {\n      const newParentComponentModel = addChildComponent(\n        parentComponentModel,\n        payload.componentModel.guid,\n        payload.outletName,\n        payload.insertIndex,\n        payload.columnIndex,\n        payload.columnSpan\n      );\n\n      newState.viewComponentDesignModels[newParentComponentModel.guid] =\n        newParentComponentModel as IViewComponentDesignModel;\n    }\n  }\n}\n\nexport const reducer = createReducer<IViewDesignModelState>(\n  getInitialState(),\n\n  on(ViewDesignerActions.initViewDesigner, getInitialState),\n\n  on(ViewDesignerActions.destroyViewDesigner, getInitialState),\n\n  on(ViewComponentActions.initializeComponentModels, (state, { payload }) => {\n    const newState = {\n      ...state\n    };\n\n    payload.forEach((data) => initializeComponentModel(newState, data));\n\n    return newState;\n  }),\n\n  on(ViewComponentActions.initializeDataComponentModels, (state, { payload }) => {\n    const newState = {\n      ...state,\n      viewComponentDesignModels: {\n        ...state.viewComponentDesignModels\n      }\n    };\n\n    payload.forEach((item) => {\n      const parentComponentModel = newState.viewComponentDesignModels[item.componentModel.parentGuid];\n\n      if (parentComponentModel) {\n        // add new component model\n        newState.viewComponentDesignModels[item.componentModel.guid] = item.componentModel;\n\n        // update parent to contain child reference\n        const newParentComponentModel = {\n          ...parentComponentModel,\n          childDataComponentGuids: [...(parentComponentModel.childDataComponentGuids || []), item.componentModel.guid]\n        };\n\n        newState.viewComponentDesignModels[newParentComponentModel.guid] =\n          newParentComponentModel as IViewComponentDesignModel;\n      }\n    });\n\n    return newState;\n  }),\n\n  on(ViewComponentActions.moveComponent, (state, payload) => {\n    const newState = {\n      ...state\n    };\n\n    // remove component from old parent layout\n    if (isComponentContainsChild(payload.guid, state.viewDesignModel)) {\n      newState.viewDesignModel = removeChildComponent(payload.guid, newState.viewDesignModel) as IViewDesignModel;\n    } else {\n      let oldParentComponentModel = findParentComponentModel(payload.guid, newState.viewComponentDesignModels);\n\n      oldParentComponentModel = removeChildComponent(\n        payload.guid,\n        oldParentComponentModel\n      ) as IViewComponentDesignModel;\n\n      newState.viewComponentDesignModels = {\n        ...newState.viewComponentDesignModels,\n        [oldParentComponentModel.guid]: oldParentComponentModel\n      };\n    }\n\n    // add component to new parent layout\n    if (payload.parentGuid === newState.viewDesignModel.guid) {\n      newState.viewDesignModel = addChildComponent(\n        newState.viewDesignModel,\n        payload.guid,\n        payload.outletName,\n        payload.insertIndex,\n        payload.columnIndex\n      ) as IViewDesignModel;\n    } else {\n      let newParentComponentModel = newState.viewComponentDesignModels[payload.parentGuid];\n\n      newParentComponentModel = addChildComponent(\n        newParentComponentModel,\n        payload.guid,\n        payload.outletName,\n        payload.insertIndex,\n        payload.columnIndex\n      ) as IViewComponentDesignModel;\n\n      newState.viewComponentDesignModels = {\n        ...newState.viewComponentDesignModels,\n        [newParentComponentModel.guid]: newParentComponentModel\n      };\n    }\n\n    // updating parentGuid for moved component\n    newState.viewComponentDesignModels = {\n      ...newState.viewComponentDesignModels,\n\n      [payload.guid]: {\n        ...newState.viewComponentDesignModels[payload.guid],\n        parentGuid: payload.parentGuid\n      }\n    };\n\n    return newState;\n  }),\n\n  on(ViewComponentActions.componentsRemoved, (state, { guids }) => {\n    const newState: IViewDesignModelState = {\n      ...state,\n      viewComponentDesignModels: omit(state.viewComponentDesignModels, guids)\n    };\n\n    guids.forEach((guid) => {\n      if (isComponentContainsChild(guid, state.viewDesignModel)) {\n        newState.viewDesignModel = removeChildComponent(guid, newState.viewDesignModel) as IViewDesignModel;\n      } else {\n        let oldParentComponentModel = findParentComponentModel(guid, state.viewComponentDesignModels);\n\n        if (oldParentComponentModel && newState.viewComponentDesignModels[oldParentComponentModel.guid]) {\n          oldParentComponentModel = removeChildComponent(\n            guid,\n            newState.viewComponentDesignModels[oldParentComponentModel.guid]\n          ) as IViewComponentDesignModel;\n\n          newState.viewComponentDesignModels = {\n            ...newState.viewComponentDesignModels,\n            [oldParentComponentModel.guid]: oldParentComponentModel\n          };\n        }\n      }\n    });\n\n    return newState;\n  }),\n\n  on(ViewComponentActions.setComponentLayout, (state, { guid, cols }) => {\n    const componentModel = state.viewComponentDesignModels[guid];\n\n    const defaultOutlet = componentModel.layout.outlets.find(\n      (item) => item.name === RX_VIEW_DEFINITION.defaultOutletName\n    );\n\n    const existingColumns = cloneDeep(defaultOutlet.columns);\n    const removedColumns = existingColumns.splice(cols.length);\n\n    cols.forEach((colSpan, i) => {\n      if (existingColumns[i]) {\n        existingColumns[i].span = colSpan;\n      } else {\n        existingColumns[i] = {\n          span: colSpan,\n          children: []\n        };\n      }\n    });\n\n    const removedColumnChildComponents: string[] = removedColumns.reduce((guids, col) => {\n      guids.push(...col.children);\n\n      return guids;\n    }, []);\n\n    if (removedColumnChildComponents.length) {\n      const lastExistingCol = last(existingColumns);\n\n      lastExistingCol.children = lastExistingCol.children.concat(removedColumnChildComponents);\n    }\n\n    return {\n      ...state,\n      viewComponentDesignModels: {\n        ...state.viewComponentDesignModels,\n        [guid]: {\n          ...componentModel,\n          layout: {\n            ...componentModel.layout,\n            outlets: componentModel.layout.outlets.map((outlet) => ({\n              ...outlet,\n              columns: existingColumns\n            }))\n          }\n        }\n      }\n    };\n  }),\n\n  on(ViewDesignerActions.setViewModel, (state, { payload }) => {\n    return {\n      ...state,\n      viewDesignModel: payload\n    };\n  }),\n\n  on(ViewDesignerActions.updateViewModel, (state, { payload }) => {\n    return {\n      ...state,\n      viewDesignModel: {\n        ...state.viewDesignModel,\n        ...payload\n      }\n    };\n  }),\n\n  on(ViewDesignerActions.viewDefinitionSaveSuccess, (state) => {\n    if (state.viewDesignModel.isAngularJsView) {\n      return {\n        ...state,\n        viewDesignModel: {\n          ...state.viewDesignModel,\n          isAngularJsView: false\n        }\n      };\n    } else {\n      return state;\n    }\n  }),\n\n  on(ViewComponentActions.setComponentData, (state, { payload }) => {\n    return {\n      ...state,\n      viewComponentDesignModels: {\n        ...state.viewComponentDesignModels,\n        ...payload.reduce((res, { guid, data }) => {\n          res[guid] = {\n            ...state.viewComponentDesignModels[guid],\n            propertiesByName: data\n          };\n\n          return res;\n        }, {})\n      }\n    };\n  }),\n\n  on(ViewComponentActions.updateComponentModel, (state, { payload }) => {\n    return {\n      ...state,\n      viewComponentDesignModels: {\n        ...state.viewComponentDesignModels,\n        ...payload\n          .filter((payload) => state.viewComponentDesignModels[payload.guid])\n          .reduce((res, { guid, partialModel }) => {\n            res[guid] = {\n              ...state.viewComponentDesignModels[guid],\n              ...partialModel,\n              propertiesByName: {\n                ...state.viewComponentDesignModels[guid].propertiesByName,\n                ...partialModel.propertiesByName\n              }\n            };\n\n            return res;\n          }, {})\n      }\n    };\n  })\n);\n\nexport function viewDesignerModelReducer(state, action) {\n  return reducer(state, action);\n}\n","import { createReducer, on } from '@ngrx/store';\n\nimport * as ViewDesignerActions from './view-designer.actions';\nimport * as ViewComponentActions from './view-component.actions';\nimport { IViewDesignerUiState } from '../interfaces/view-designer-ui-state.interface';\n\nexport function getInitialState(): IViewDesignerUiState {\n  return {\n    selectedComponentGuid: null,\n    selectedInspectorTabId: 0,\n    currentBundleId: null,\n    isViewDefinitionLoading: false,\n    areViewModelsReady: false,\n    friendlyBundleName: null\n  };\n}\n\nexport const reducer = createReducer(\n  getInitialState(),\n\n  on(ViewDesignerActions.initViewDesigner, (_, { payload }) => {\n    return {\n      ...getInitialState(),\n      currentBundleId: payload.bundleId\n    };\n  }),\n\n  on(ViewDesignerActions.destroyViewDesigner, getInitialState),\n\n  on(ViewComponentActions.selectComponent, (state, { guid }) => {\n    return {\n      ...state,\n      selectedComponentGuid: guid\n    };\n  }),\n\n  on(ViewDesignerActions.selectInspectorTab, (state, { tabId }) => {\n    return {\n      ...state,\n      selectedInspectorTabId: tabId\n    };\n  }),\n\n  on(ViewComponentActions.componentsRemoved, (state, { guids }) => {\n    if (guids.includes(state.selectedComponentGuid)) {\n      return {\n        ...state,\n        selectedComponentGuid: null\n      };\n    } else {\n      return {\n        ...state\n      };\n    }\n  }),\n\n  on(ViewDesignerActions.friendlyBundleNameLoadSuccess, (state, { friendlyBundleName }) => {\n    return {\n      ...state,\n      friendlyBundleName: friendlyBundleName\n    };\n  }),\n\n  on(ViewDesignerActions.friendlyBundleNameLoadError, (state) => {\n    return {\n      ...state,\n      friendlyBundleName: null\n    };\n  }),\n\n  on(ViewDesignerActions.saveViewDefinition, ViewDesignerActions.loadViewDefinition, (state) => {\n    return {\n      ...state,\n      isViewDefinitionLoading: true,\n      areViewModelsReady: false\n    };\n  }),\n\n  on(\n    ViewDesignerActions.viewDefinitionSaveSuccess,\n    ViewDesignerActions.viewDefinitionLoadSuccess,\n    ViewDesignerActions.viewDefinitionLoadError,\n    (state) => {\n      return {\n        ...state,\n        isViewDefinitionLoading: false\n      };\n    }\n  ),\n\n  on(ViewDesignerActions.viewDefinitionSaveError, (state) => {\n    return {\n      ...state,\n      isViewDefinitionLoading: false,\n      areViewModelsReady: true\n    };\n  }),\n\n  on(ViewDesignerActions.viewModelsUpdatedAfterSave, ViewDesignerActions.viewModelsInitialized, (state) => {\n    return {\n      ...state,\n      areViewModelsReady: true\n    };\n  }),\n\n  on(ViewComponentActions.initializeComponentModels, (state) => {\n    return {\n      ...state,\n      areViewModelsReady: false\n    };\n  })\n);\n\nexport function viewDesignerUiReducer(state, action) {\n  return reducer(state, action);\n}\n","import { has, omit, isEmpty, omitBy } from 'lodash';\nimport { createReducer, on } from '@ngrx/store';\n\nimport { IViewComponentDesignValidationIssue } from '../public-interfaces';\nimport * as ViewDesignerActions from './view-designer.actions';\nimport * as ViewComponentActions from './view-component.actions';\n\nexport interface IViewDesignerValidationState {\n  issues: {\n    [guid: string]: IViewComponentDesignValidationIssue[];\n  };\n  expressionIssues: {\n    [guid: string]: IViewComponentDesignValidationIssue[];\n  };\n}\n\nexport function getInitialState(): IViewDesignerValidationState {\n  return {\n    issues: {},\n    expressionIssues: {}\n  };\n}\n\nexport const reducer = createReducer<IViewDesignerValidationState>(\n  getInitialState(),\n\n  on(ViewDesignerActions.initViewDesigner, ViewDesignerActions.destroyViewDesigner, getInitialState),\n\n  on(ViewComponentActions.setValidationIssues, (state, { guid, issues }) => {\n    if (issues.length) {\n      return {\n        ...state,\n        issues: {\n          ...state.issues,\n          [guid]: issues\n        }\n      };\n    } else {\n      let newState = state;\n\n      if (has(newState.issues, guid)) {\n        newState = {\n          ...state,\n          issues: omit(state.issues, [guid])\n        };\n      }\n\n      return newState;\n    }\n  }),\n\n  on(ViewComponentActions.setExpressionValidationIssues, (state, { issues }) => {\n    return isEmpty(issues)\n      ? state\n      : {\n          ...state,\n          expressionIssues: {\n            ...omit(state.expressionIssues, Object.keys(issues)),\n            ...omitBy(issues, isEmpty)\n          }\n        };\n  }),\n\n  on(ViewComponentActions.componentsRemoved, (state, { guids }) => {\n    let newState = state;\n\n    if (guids.some((guid) => has(state.issues, guid))) {\n      newState = {\n        ...state,\n        issues: omit(state.issues, guids)\n      };\n    }\n\n    if (guids.some((guid) => has(state.expressionIssues, guid))) {\n      newState = {\n        ...state,\n        expressionIssues: omit(state.expressionIssues, guids)\n      };\n    }\n\n    return newState;\n  })\n);\n\nexport function viewDesignerValidationReducer(state, action) {\n  return reducer(state, action);\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdaptAlertModule, AdaptCodeViewerModule, AdaptTabsModule } from '@bmc-ux/adapt-angular';\nimport {\n  FormControlsModule,\n  RxDesignerHeaderModule,\n  RxFormBuilderModule,\n  RxInspectorModule,\n  RxPermissionEditorModule,\n  RxRevertCustomizationModule\n} from '@helix/platform/shared/components';\nimport { RxBladeModule, RxJsonViewerModule, RxValidationIssuesModule } from '@helix/platform/ui-kit';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { RxViewDesignerComponent } from './component/view-designer.component';\nimport { DesignerModule } from './components/designer-component/designer.module';\nimport { RxViewDesignerPaletteModule } from './components/palette/view-designer-palette.module';\nimport { ViewDesignerCanvasModule } from './components/view-designer-canvas/view-designer-canvas.module';\n// State\nimport { ViewDesignerComponentEffects } from './+state/view-designer-component.effects';\nimport { ViewDesignerEffects } from './+state/view-designer.effects';\nimport { viewDefinitionReducer } from './+state/view-definition.reducer';\nimport { viewDesignerBreadcrumbsReducer } from './+state/view-designer-breadcrumbs.reducer';\nimport { viewDesignerModelReducer } from './+state/view-designer-model.reducer';\nimport { viewDesignerUiReducer } from './+state/view-designer-ui.reducer';\nimport { viewDesignerValidationReducer } from './+state/view-designer-validation.reducer';\n\nimport { ViewActionDesignModule } from '@helix/platform/view/api';\nimport { RuntimeViewParamsModalModule } from './components/runtime-view-params-modal/runtime-view-params-modal.module';\nimport { RxViewCustomizationOptionsModule } from './form-controls/view-customization-options-widget/view-customization-options.module';\nimport { RxViewRevertCustomizationModule } from './form-controls/view-revert-customization/view-revert-customization.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AdaptCodeViewerModule,\n    AdaptTabsModule.forRoot(),\n    RxBladeModule,\n    RxFormBuilderModule,\n    RxValidationIssuesModule,\n    RxJsonViewerModule,\n    RxViewDesignerPaletteModule,\n    ViewDesignerCanvasModule,\n    DesignerModule,\n    FormControlsModule,\n    RxPermissionEditorModule,\n    RxRevertCustomizationModule,\n    ViewActionDesignModule,\n    RuntimeViewParamsModalModule,\n    RxDesignerHeaderModule,\n    AdaptAlertModule,\n    RxInspectorModule,\n    RxViewCustomizationOptionsModule,\n    RxViewRevertCustomizationModule,\n    TranslateModule,\n\n    StoreModule.forFeature('viewDesigner', {\n      model: viewDesignerModelReducer,\n      viewDefinition: viewDefinitionReducer,\n      validation: viewDesignerValidationReducer,\n      ui: viewDesignerUiReducer,\n      breadcrumbs: viewDesignerBreadcrumbsReducer\n    }),\n    EffectsModule.forFeature([ViewDesignerEffects, ViewDesignerComponentEffects])\n  ],\n  declarations: [RxViewDesignerComponent],\n  exports: [RxViewDesignerComponent]\n})\nexport class ViewDesignerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["_map","map","ViewDesignerActions.viewDefinitionLoadError","ViewDesignerActions.viewDefinitionSaveSuccess","ViewDesignerActions.initViewDesigner","ViewDesignerActions.viewModelsInitialized","ViewDesignerActions.destroyViewDesigner","ViewComponentsActions.selectComponent","ViewComponentsActions.insertComponent","isFinite","ViewDesignerActions.selectInspectorTab","ViewDesignerActions.generateViewDefinition","ViewComponentsActions.updateComponentModel","ViewDesignerActions.saveViewDefinition","ViewDesignerActions.updateViewModel","ViewDesignerActions.setViewModel","ViewDesignerActions.runPreview","ViewDesignerActions.clearCanvas","ViewComponentsActions.setValidationIssues","ViewComponentsActions.setExpressionValidationIssues","ViewComponentsActions.removeComponents","_filter","ViewComponentsActions.setChildComponents","take","ViewComponentActions.initializeComponentModels","ViewComponentActions.initializeDataComponentModels","ViewComponentsActions.setBreadcrumbs","ViewComponentsActions.addNewComponents","ViewComponentsActions.setComponentLayout","ViewComponentsActions.componentsRemoved","_merge","ViewComponentActions.componentsRemoved","ViewComponentsActions.moveComponent","ViewComponentsActions.initializeComponentModels","ViewComponentsActions.initializeDataComponentModels","ViewComponentActions.setChildComponents","ViewComponentsActions.setComponentData","ViewDesignerActions.loadFriendlyBundleName","ViewDesignerActions.loadViewDefinition","ViewDesignerActions.friendlyBundleNameLoadSuccess","ViewDesignerActions.friendlyBundleNameLoadError","ViewDesignerActions.viewDefinitionLoadSuccess","ViewDesignerActions.setGeneratedViewDefinition","ViewDesignerActions.viewDefinitionSaveError","noop","ViewDesignerActions.viewModelsUpdatedAfterSave","getInitialState","reducer","ViewComponentActions.moveComponent","ViewComponentActions.setComponentLayout","ViewComponentActions.setComponentData","ViewComponentActions.updateComponentModel","ViewComponentActions.selectComponent","ViewComponentActions.setValidationIssues","ViewComponentActions.setExpressionValidationIssues"],"mappings":"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"}