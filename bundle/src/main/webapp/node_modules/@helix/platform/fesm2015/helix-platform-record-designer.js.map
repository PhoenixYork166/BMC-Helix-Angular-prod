{"version":3,"file":"helix-platform-record-designer.js","sources":["../../../../libs/platform/record/designer/record-designer/record-customization-options/record-customization-options-editor.component.ts","../../../../libs/platform/record/designer/record-designer/record-customization-options/record-customization-options-editor.component.html","../../../../libs/platform/record/designer/record-designer/record-customization-options/record-customization-options.component.ts","../../../../libs/platform/record/designer/record-designer/record-customization-options/record-customization-options.component.html","../../../../libs/platform/record/designer/record-designer/record-customization-options/record-customization-options.module.ts","../../../../libs/platform/record/designer/record-designer/services/field-definition-inspector-helper.service.ts","../../../../libs/platform/record/designer/record-designer/field-option-editor/field-option-editor.component.ts","../../../../libs/platform/record/designer/record-designer/field-option-editor/field-option-editor.component.html","../../../../libs/platform/record/designer/record-designer/services/base-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/attachment-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/boolean-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/character-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/date-only-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/date-time-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/numeric-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/decimal-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/integer-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/localized-character-field-editor/localized-character-field-editor.component.ts","../../../../libs/platform/record/designer/record-designer/localized-character-field-editor/localized-character-field-editor.component.html","../../../../libs/platform/record/designer/record-designer/services/localized-character-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/real-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/selection-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/time-only-field-definition.service.ts","../../../../libs/platform/record/designer/record-designer/services/field-definition-manager.service.ts","../../../../libs/platform/record/designer/record-designer/record-inheritance-editor/record-inheritance-editor.component.ts","../../../../libs/platform/record/designer/record-designer/record-inheritance-editor/record-inheritance-editor.component.html","../../../../libs/platform/record/designer/record-designer/record-inheritance-editor/record-inheritance-editor.module.ts","../../../../libs/platform/record/designer/record-designer/search-field-editor/search-field-editor-modal.store.ts","../../../../libs/platform/record/designer/record-designer/search-field-editor/search-field-editor-modal.component.ts","../../../../libs/platform/record/designer/record-designer/search-field-editor/search-field-editor-modal.component.html","../../../../libs/platform/record/designer/record-designer/search-field-editor/search-field-editor-control.component.ts","../../../../libs/platform/record/designer/record-designer/search-field-editor/search-field-editor-control.component.html","../../../../libs/platform/record/designer/record-designer/search-field-editor/search-field-editor.module.ts","../../../../libs/platform/record/designer/record-designer/+state/record-designer.actions.ts","../../../../libs/platform/record/designer/record-designer/record-designer.constant.ts","../../../../libs/platform/record/designer/record-designer/+state/record-designer.selectors.ts","../../../../libs/platform/record/designer/record-designer/record-definition-validator.service.ts","../../../../libs/platform/record/designer/record-designer/archive-associations-control/archive-association-selector.component.ts","../../../../libs/platform/record/designer/record-designer/archive-associations-control/archive-association-selector.component.html","../../../../libs/platform/record/designer/record-designer/archive-associations-control/missing-archive-definitions-modal.component.ts","../../../../libs/platform/record/designer/record-designer/archive-associations-control/missing-archive-definitions-modal.component.html","../../../../libs/platform/record/designer/record-designer/archive-associations-control/archive-associations-control.component.ts","../../../../libs/platform/record/designer/record-designer/archive-associations-control/archive-associations-control.component.html","../../../../libs/platform/record/designer/record-designer/record-indexes-control/record-indexes-editor.store.ts","../../../../libs/platform/record/designer/record-designer/record-indexes-control/record-indexes-editor.component.ts","../../../../libs/platform/record/designer/record-designer/record-indexes-control/record-indexes-editor.component.html","../../../../libs/platform/record/designer/record-designer/record-indexes-control/record-indexes-control.component.ts","../../../../libs/platform/record/designer/record-designer/record-indexes-control/record-indexes-control.component.html","../../../../libs/platform/record/designer/record-designer/record-designer-inspector.service.ts","../../../../libs/platform/record/designer/record-designer/inheritance-issue-info/inheritance-issue-info.component.ts","../../../../libs/platform/record/designer/record-designer/inheritance-issue-info/inheritance-issue-info.component.html","../../../../libs/platform/record/designer/record-designer/record-designer.service.ts","../../../../libs/platform/record/designer/record-designer/record-designer-expression-configurator.class.ts","../../../../libs/platform/record/designer/record-designer/add-join-fields-editor/add-join-fields-editor.component.ts","../../../../libs/platform/record/designer/record-designer/add-join-fields-editor/add-join-fields-editor.component.html","../../../../libs/platform/record/designer/record-designer/record-designer.component.ts","../../../../libs/platform/record/designer/record-designer/record-designer.component.html","../../../../libs/platform/record/designer/record-designer/+state/record-designer-model.reducer.ts","../../../../libs/platform/record/designer/record-designer/+state/record-designer.effects.ts","../../../../libs/platform/record/designer/record-designer/record-designer.module.ts","../../../../libs/platform/record/designer/record-designer-page/record-designer-page.component.ts","../../../../libs/platform/record/designer/record-designer-page/record-designer-page.component.html","../../../../libs/platform/record/designer/record-designer-page/record-designer-page.module.ts","../../../../libs/platform/record/designer/helix-platform-record-designer.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Injector, TemplateRef, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActiveModalRef, DismissReasons, RxSelectionChangeEvent, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { ColumnConfig, DataCellTemplateParams } from '@bmc-ux/adapt-table';\nimport { IScopeSelectionOption, RX_BUNDLE, RX_OVERLAY } from '@helix/platform/shared/api';\nimport { RX_MODAL, RxModalClass, RxModalService } from '@helix/platform/ui-kit';\nimport { TranslateService } from '@ngx-translate/core';\nimport { cloneDeep, find, includes, noop } from 'lodash';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IRecordCustomizationOptionsEditorData } from './record-customization-options.interfaces';\nimport { IRecordDefinitionModel } from '../../record-designer.types';\n\n@Component({\n  selector: 'rx-record-customization-options-editor',\n  templateUrl: './record-customization-options-editor.component.html',\n  styleUrls: ['./record-customization-options-editor.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RecordCustomizationOptionsEditorComponent extends RxModalClass {\n  data: IRecordCustomizationOptionsEditorData = this.activeModalRef.getData();\n  scopeSelectionOptions: IScopeSelectionOption[] = this.data.scopeSelectionOptions;\n  recordDefinition: IRecordDefinitionModel = this.data.recordDefinition;\n  columns: ColumnConfig[];\n\n  @ViewChild('recordCustomizationOptionsEditorForm')\n  recordCustomizationOptionsEditorForm: NgForm;\n\n  @ViewChild('recordFieldsColumnTemplate', { static: true })\n  recordFieldsColumnTemplate: TemplateRef<DataCellTemplateParams>;\n\n  private customizationControlProperties = [\n    'allowPermissionsOverlay',\n    'allowOtherPropertiesOverlay',\n    'allowIndexesOverlay',\n    'allowFieldsOverlay'\n  ];\n\n  initialCustomizationOptions = this.recordDefinition.customizationOptions;\n  allowOverlay = includes(Object.values(this.initialCustomizationOptions), true);\n  fields = cloneDeep(this.recordDefinition.fields);\n\n  customizationOptions = {\n    allowOtherPropertiesOverlay: this.initialCustomizationOptions.allowOtherPropertiesOverlay || false,\n    allowPermissionsOverlay: this.initialCustomizationOptions.allowPermissionsOverlay || false,\n    allowIndexesOverlay: this.initialCustomizationOptions.allowIndexesOverlay || false,\n    allowFieldsOverlay: this.initialCustomizationOptions.allowFieldsOverlay || false\n  };\n\n  private isFieldsOverlayAllowedSubject = new BehaviorSubject<Boolean>(\n    this.initialCustomizationOptions.allowFieldsOverlay\n  );\n\n  isDisabled = this.data.overlayOperation !== RX_OVERLAY.operationTypes.createdInThisOverlayGroup;\n  private definitionScopeName = find(this.scopeSelectionOptions, { name: this.data.definitionScopeName });\n\n  scope = [this.definitionScopeName];\n\n  private isPublicSubject = new BehaviorSubject<Boolean>(this.scope[0].id === RX_BUNDLE.definitionScopes.public.type);\n\n  areCustomizationOptionsDisabled$: Observable<Boolean> = this.isPublicSubject.pipe(\n    map((isPublic) => !isPublic || this.isDisabled)\n  );\n\n  isFieldsOverlayDisabled$: Observable<Boolean> = combineLatest([\n    this.areCustomizationOptionsDisabled$,\n    this.isFieldsOverlayAllowedSubject\n  ]).pipe(\n    map(\n      ([areCustomizationOptionsDisabled, isFieldsOverlayAllowed]) =>\n        areCustomizationOptionsDisabled || !isFieldsOverlayAllowed\n    )\n  );\n\n  vm$ = this.areCustomizationOptionsDisabled$.pipe(\n    map((areCustomizationOptionsDisabled) => ({ areCustomizationOptionsDisabled }))\n  );\n\n  constructor(\n    private rxModalService: RxModalService,\n    public activeModalRef: ActiveModalRef,\n    protected injector: Injector,\n    private translateService: TranslateService\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  onFieldsPropertyChange(): void {\n    this.recordCustomizationOptionsEditorForm.control.markAsDirty();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.columns = [\n      {\n        field: 'name',\n        header: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label')\n      },\n      {\n        field: 'allowOtherPropertiesOverlay',\n        header: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.scope-customization-options.allow-properties-customization.label'\n        ),\n        cellTemplate: this.recordFieldsColumnTemplate,\n        headerClass: 'pl-6'\n      },\n      {\n        field: 'allowPermissionsOverlay',\n        header: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.scope-customization-options.allow-permissions-customization.label'\n        ),\n        cellTemplate: this.recordFieldsColumnTemplate,\n        headerClass: 'pl-6'\n      }\n    ];\n  }\n\n  optionFormatter(option: RxSelectOption): string {\n    return option.name;\n  }\n\n  save(): void {\n    if (this.scope[0].id === RX_BUNDLE.definitionScopeTypes.public) {\n      this.rxModalService\n        .confirm({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n          modalStyle: RX_MODAL.modalStyles.warning,\n          message: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.scope-customization-options.definition-scope-to-public.warning'\n          )\n        })\n        .then((result: boolean) => {\n          if (result) {\n            this.closeModal();\n          }\n        })\n        .catch(noop);\n    } else if (this.data.definitionScopeName === RX_BUNDLE.definitionScopeNames.public) {\n      this.rxModalService\n        .confirm({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n          modalStyle: RX_MODAL.modalStyles.warning,\n          message: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.scope-customization-options.change-scope-from-public-warning.message'\n          )\n        })\n        .then((result: boolean) => {\n          if (result) {\n            this.closeModal();\n          }\n        })\n        .catch(noop);\n    } else {\n      this.closeModal();\n    }\n  }\n\n  onScopeChange(rxSelectionChangeEvent: RxSelectionChangeEvent): void {\n    this.isPublicSubject.next(rxSelectionChangeEvent[0].id === RX_BUNDLE.definitionScopes.public.type);\n  }\n\n  closeModal(): void {\n    const result = { ...this.recordCustomizationOptionsEditorForm.form.value, fields: this.fields };\n\n    result.scope = result.scope[0].id;\n    this.activeModalRef.close(result);\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  handleAllowOverlayChange(): void {\n    Object.keys(this.customizationOptions).forEach((option) => (this.customizationOptions[option] = this.allowOverlay));\n\n    this.isFieldsOverlayAllowedSubject.next(this.allowOverlay);\n  }\n\n  onRecordCustomizationOptionChange(): void {\n    this.allowOverlay =\n      this.customizationOptions.allowFieldsOverlay ||\n      this.customizationOptions.allowIndexesOverlay ||\n      this.customizationOptions.allowOtherPropertiesOverlay ||\n      this.customizationOptions.allowPermissionsOverlay;\n\n    this.isFieldsOverlayAllowedSubject.next(this.customizationOptions.allowFieldsOverlay);\n  }\n\n  isDirty(): boolean {\n    return this.recordCustomizationOptionsEditorForm.dirty;\n  }\n\n  ngOnDestroy(): void {\n    this.isFieldsOverlayAllowedSubject.complete();\n    this.isPublicSubject.complete();\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <div class=\"designer-modal-body modal-body\">\n    <form #recordCustomizationOptionsEditorForm=\"ngForm\">\n      <div class=\"w-25\">\n        <adapt-rx-select\n          label=\"{{\n            'com.bmc.arsys.rx.client.record-designer.scope-customization-options-editor.scope.label' | translate\n          }}\"\n          rx-id=\"scope-selection\"\n          [options]=\"scopeSelectionOptions\"\n          [optionFormatter]=\"optionFormatter\"\n          [tooltip]=\"{\n            iconName: 'question_circle_o',\n            content: 'com.bmc.arsys.rx.client.designer.scope-customization-options.scope.tooltip' | translate,\n            placement: 'bottom',\n            popoverMode: true\n          }\"\n          name=\"scope\"\n          [(ngModel)]=\"scope\"\n          (ngModelChange)=\"onScopeChange($event)\"\n          [disabled]=\"isDisabled\"\n        >\n        </adapt-rx-select>\n      </div>\n\n      <div class=\"w-100\">\n        <h5>{{ 'com.bmc.arsys.rx.client.customization-options-editor.customization-options.label' | translate }}</h5>\n        <adapt-rx-checkbox\n          label=\"{{\n            'com.bmc.arsys.rx.client.customization-options-editor.allow-future-customization.label'\n              | translate: { definitionType: data.definitionTypeDisplayName }\n          }}\"\n          rx-id=\"allow-customization-checkbox\"\n          name=\"allowOverlay\"\n          [(ngModel)]=\"allowOverlay\"\n          (ngModelChange)=\"handleAllowOverlayChange()\"\n          [disabled]=\"vm.areCustomizationOptionsDisabled\"\n        >\n        </adapt-rx-checkbox>\n      </div>\n\n      <div class=\"w-100\">\n        <h6>\n          {{\n            'com.bmc.arsys.rx.client.record-designer.scope-customization-options.allow-future-customizations-to.label'\n              | translate\n          }}\n        </h6>\n\n        <div class=\"w-100 d-flex\">\n          <div class=\"w-50\">\n            <div>\n              <adapt-rx-checkbox\n                label=\"{{\n                  'com.bmc.arsys.rx.client.record-designer.scope-customization-options.properties.label' | translate\n                }}\"\n                name=\"allowOtherPropertiesOverlay\"\n                [(ngModel)]=\"customizationOptions.allowOtherPropertiesOverlay\"\n                (ngModelChange)=\"onRecordCustomizationOptionChange()\"\n                [disabled]=\"vm.areCustomizationOptionsDisabled\"\n                rx-id=\"properties-checkbox\"\n              >\n              </adapt-rx-checkbox>\n            </div>\n\n            <div>\n              <adapt-rx-checkbox\n                label=\"{{\n                  'com.bmc.arsys.rx.client.record-designer.scope-customization-options.permissions.label' | translate\n                }}\"\n                name=\"allowPermissionsOverlay\"\n                [(ngModel)]=\"customizationOptions.allowPermissionsOverlay\"\n                (ngModelChange)=\"onRecordCustomizationOptionChange()\"\n                [disabled]=\"vm.areCustomizationOptionsDisabled\"\n                rx-id=\"permissions-checkbox\"\n              >\n              </adapt-rx-checkbox>\n            </div>\n          </div>\n\n          <div class=\"w-50\">\n            <div>\n              <adapt-rx-checkbox\n                label=\"{{\n                  'com.bmc.arsys.rx.client.record-designer.scope-customization-options.search-indexes.label' | translate\n                }}\"\n                name=\"allowIndexesOverlay\"\n                [(ngModel)]=\"customizationOptions.allowIndexesOverlay\"\n                (ngModelChange)=\"onRecordCustomizationOptionChange()\"\n                [disabled]=\"vm.areCustomizationOptionsDisabled\"\n                rx-id=\"search-indexes-checkbox\"\n              >\n              </adapt-rx-checkbox>\n            </div>\n\n            <div>\n              <adapt-rx-checkbox\n                label=\"{{\n                  'com.bmc.arsys.rx.client.record-designer.scope-customization-options.fields.label' | translate\n                }}\"\n                name=\"allowFieldsOverlay\"\n                [(ngModel)]=\"customizationOptions.allowFieldsOverlay\"\n                (ngModelChange)=\"onRecordCustomizationOptionChange()\"\n                [disabled]=\"vm.areCustomizationOptionsDisabled\"\n                rx-id=\"fields-checkbox\"\n              >\n              </adapt-rx-checkbox>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <adapt-table\n        [value]=\"fields\"\n        [columns]=\"columns\"\n        [scrollable]=\"true\"\n        scrollHeight=\"340px\"\n        [sortable]=\"false\"\n        [resizableColumns]=\"false\"\n        [bordered]=\"false\"\n        [filterable]=\"false\"\n        [dataKey]=\"'name'\"\n      >\n      </adapt-table>\n    </form>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button\n      class=\"btn btn-primary\"\n      rx-id=\"save-button\"\n      (click)=\"save()\"\n      type=\"button\"\n      [disabled]=\"!recordCustomizationOptionsEditorForm.dirty\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n\n    <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"cancel()\" rx-id=\"cancel-button\">\n      {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n    </button>\n  </div>\n</ng-container>\n\n<ng-template #recordFieldsColumnTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n  <div class=\"checkbox m-0 pl-4\">\n    <div class=\"checkbox__label pl-6 ml-6\">\n      <label>\n        <input\n          type=\"checkbox\"\n          role=\"checkbox\"\n          class=\"checkbox__input\"\n          [(ngModel)]=\"dataItem[column.field]\"\n          [disabled]=\"isFieldsOverlayDisabled$ | async\"\n          (change)=\"onFieldsPropertyChange()\"\n        />\n\n        <div class=\"checkbox__item\"></div>\n      </label>\n    </div>\n  </div>\n</ng-template>\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n  ICustomizationOptionsEditorData,\n  IScopeSelectionOption,\n  RX_OVERLAY,\n  RxBundleCacheService,\n  RxOverlayService\n} from '@helix/platform/shared/api';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { RxModalService } from '@helix/platform/ui-kit';\nimport { noop } from 'lodash';\nimport { RecordCustomizationOptionsEditorComponent } from './record-customization-options-editor.component';\nimport {\n  IRecordCustomizationControlValue,\n  IRecordCustomizationOptions\n} from './record-customization-options.interfaces';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, mergeMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'rx-scope-record-customization-control',\n  templateUrl: './record-customization-options.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RecordCustomizationOptionsComponent,\n      multi: true\n    }\n  ]\n})\nexport class RecordCustomizationOptionsComponent\n  extends ValueAccessor<IRecordCustomizationControlValue>\n  implements OnChanges\n{\n  @Input()\n  options: IRecordCustomizationOptions;\n\n  allowOverlayLabel: string;\n  definitionScopeName: string;\n  overlayOperation: string;\n  private scopeSelectionOptions: IScopeSelectionOption[];\n  private scopeNameSubject = new BehaviorSubject<string>('');\n\n  private scopeSelectionOptions$ = this.rxBundleCacheService.getDefinitionScopeSelectionOptions().pipe(\n    map((scopeSelectionOptions: IScopeSelectionOption[]) => scopeSelectionOptions),\n    tap((scopeSelectionOptions: IScopeSelectionOption[]) => (this.scopeSelectionOptions = scopeSelectionOptions))\n  );\n\n  private definitionScopeName$ = this.scopeNameSubject.pipe(\n    mergeMap((scopeName: string) =>\n      this.rxBundleCacheService.getDefinitionScopeName(scopeName).pipe(\n        map((definitionScopeName: string) => definitionScopeName),\n        tap((definitionScopeName: string) => (this.definitionScopeName = definitionScopeName))\n      )\n    )\n  );\n\n  vm$ = combineLatest([this.definitionScopeName$, this.scopeSelectionOptions$]).pipe(\n    map(([definitionScopeName, scopeSelectionOptions]) => ({\n      definitionScopeName,\n      scopeSelectionOptions\n    }))\n  );\n\n  constructor(\n    private rxModalService: RxModalService,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxOverlayService: RxOverlayService,\n    private translateService: TranslateService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.options) {\n      this.updateValues();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options) {\n      this.updateValues();\n    }\n  }\n\n  private getOverlayOperation(): string {\n    return this.rxOverlayService.getOverlayOperation(\n      this.options.recordDefinition.overlayGroupId,\n      this.options.recordDefinition.overlayDescriptor?.parentOverlayGroupId || null\n    );\n  }\n\n  private updateValues(): void {\n    this.setAllowOverlayLabel(this.options.recordDefinition.customizationOptions.allowOtherPropertiesOverlay);\n    this.scopeNameSubject.next(this.options.recordDefinition.customizationOptions.scope);\n\n    if (this.options.recordDefinition.overlayGroupId) {\n      this.overlayOperation = this.getOverlayOperation();\n    } else {\n      this.overlayOperation = RX_OVERLAY.operationTypes.createdInThisOverlayGroup;\n    }\n  }\n\n  openCustomizationOptionsEditor(): void {\n    this.rxModalService\n      .openModal({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.designer.scope-customization-options.title'),\n        content: RecordCustomizationOptionsEditorComponent,\n        blockKeyboard: false,\n\n        data: {\n          definitionScopeName: this.definitionScopeName,\n          allowOverlay: this.options.recordDefinition.customizationOptions.allowOtherPropertiesOverlay,\n          scopeSelectionOptions: this.scopeSelectionOptions,\n          isDisabled: this.options.isDisabled,\n          overlayOperation: this.overlayOperation,\n          definitionTypeDisplayName: this.options.definitionTypeDisplayName,\n          recordDefinition: this.options.recordDefinition\n        } as ICustomizationOptionsEditorData\n      })\n      .then((result: IRecordCustomizationControlValue) => {\n        this.setAllowOverlayLabel(result.allowOverlay);\n        this.definitionScopeName = this.scopeSelectionOptions.find((value) => value.id === result.scope).name;\n\n        this.value = result;\n      })\n      .catch(noop);\n  }\n\n  setAllowOverlayLabel(allowOverlay: boolean): void {\n    this.allowOverlayLabel = allowOverlay\n      ? RX_OVERLAY.overlayAllowedLabels.allowed\n      : RX_OVERLAY.overlayAllowedLabels.notAllowed;\n  }\n\n  ngOnDestroy(): void {\n    this.scopeNameSubject.complete();\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <adapt-button\n    btn-type=\"tertiary\"\n    rx-id=\"open-customization-options-editor-link\"\n    (click)=\"openCustomizationOptionsEditor()\"\n    class=\"p-0\"\n  >\n    {{ 'com.bmc.arsys.rx.client.designer.scope-customization-options.title' | translate }}\n  </adapt-button>\n\n  <adapt-icon\n    name=\"question_circle_o\"\n    class=\"ml-2\"\n    placement=\"right\"\n    [adaptPopover]=\"'com.bmc.arsys.rx.client.designer.scope-customization-options.scope.tooltip' | translate\"\n  >\n  </adapt-icon>\n\n  <p rx-id=\"scope\" class=\"mb-0 pt-2\">\n    {{\n      'com.bmc.arsys.rx.client.designer.scope-customization-options.scope.label'\n        | translate: { definitionScopeName: vm.definitionScopeName }\n    }}\n  </p>\n\n  <div rx-id=\"customization\" class=\"pt-2\">\n    {{\n      'com.bmc.arsys.rx.client.designer.scope-customization-options.customization.label'\n        | translate: { allowOverlayLabel: allowOverlayLabel }\n    }}\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AdaptButtonModule,\n  AdaptIconModule,\n  AdaptPopoverModule,\n  AdaptRxCheckboxModule,\n  AdaptRxSelectModule,\n  AdaptTooltipModule\n} from '@bmc-ux/adapt-angular';\nimport { AdaptTableModule } from '@bmc-ux/adapt-table';\nimport { AdaptCheckbox2Module } from '@bmc-ux/obsolete';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RecordCustomizationOptionsEditorComponent } from './record-customization-options-editor.component';\nimport { RecordCustomizationOptionsComponent } from './record-customization-options.component';\n\n@NgModule({\n  declarations: [RecordCustomizationOptionsComponent, RecordCustomizationOptionsEditorComponent],\n  exports: [RecordCustomizationOptionsComponent],\n  entryComponents: [RecordCustomizationOptionsComponent, RecordCustomizationOptionsEditorComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    AdaptTooltipModule,\n    AdaptRxSelectModule,\n    AdaptButtonModule,\n    AdaptCheckbox2Module,\n    AdaptPopoverModule,\n    AdaptIconModule,\n    AdaptRxCheckboxModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    AdaptTableModule\n  ]\n})\nexport class RecordCustomizationOptionsModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  IFieldDefinition,\n  RX_RECORD_DEFINITION,\n  RxFieldDefinitionService,\n  RxRecordDefinitionService\n} from '@helix/platform/record/api';\nimport { includes } from 'lodash';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxFieldDefinitionInspectorHelperService {\n  constructor(\n    private rxFieldDefinitionService: RxFieldDefinitionService,\n    private rxRecordDefinitionService: RxRecordDefinitionService\n  ) {}\n\n  isFieldEditable(fieldDefinition: IFieldDefinition): boolean {\n    return (\n      !this.rxFieldDefinitionService.isReadOnly(fieldDefinition) &&\n      !this.rxFieldDefinitionService.isJoinedField(fieldDefinition) &&\n      this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition)\n    );\n  }\n\n  isNameEditable(fieldDefinition: IFieldDefinition): boolean {\n    return (\n      !this.rxFieldDefinitionService.isInheritedField(fieldDefinition) &&\n      this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition) &&\n      !(fieldDefinition.lastUpdateTime && this.rxFieldDefinitionService.isOverlayMode(fieldDefinition))\n    );\n  }\n\n  isDescriptionEditable(fieldDefinition: IFieldDefinition, definitionModel: IRecordDefinitionModel): boolean {\n    if (this.rxRecordDefinitionService.isJoinRecord(definitionModel)) {\n      return (\n        includes(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds, fieldDefinition.id) &&\n        this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition)\n      );\n    } else {\n      return (\n        !this.rxFieldDefinitionService.isReadOnly(fieldDefinition) &&\n        this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition)\n      );\n    }\n  }\n\n  isRequiredEditable(fieldDefinition: IFieldDefinition): boolean {\n    const isAlwaysRequiredNonSystemField =\n      !this.rxFieldDefinitionService.isExternalRecordField(fieldDefinition) &&\n      includes(RX_RECORD_DEFINITION.alwaysRequiredNonSystemFieldIds, fieldDefinition.id);\n\n    return this.isFieldEditable(fieldDefinition) && !isAlwaysRequiredNonSystemField;\n  }\n\n  isSubmitEditable(fieldDefinition: IFieldDefinition, definitionModel: IRecordDefinitionModel): boolean {\n    return this.isFieldEditable(fieldDefinition) && !definitionModel.isAuditRecordDefinition;\n  }\n\n  arePermissionsEditable(fieldDefinition: IFieldDefinition, definitionModel: IRecordDefinitionModel): boolean {\n    return (\n      (fieldDefinition.id !== RX_RECORD_DEFINITION.coreFieldIds.id &&\n        this.rxFieldDefinitionService.isPermissionsCustomizationEnabled(fieldDefinition) &&\n        !(\n          this.rxFieldDefinitionService.isJoinedField(fieldDefinition) &&\n          fieldDefinition.id !== RX_RECORD_DEFINITION.coreFieldIds.displayId\n        ) &&\n        !definitionModel.isAuditRecordDefinition &&\n        !includes(RX_RECORD_DEFINITION.AR_AUDIT_FIELD_IDS, fieldDefinition.id)) ||\n      fieldDefinition.allowPermissionsEdit\n    );\n  }\n\n  isAuditingEditable(fieldDefinition: IFieldDefinition, definitionModel: IRecordDefinitionModel): boolean {\n    return (\n      !this.rxFieldDefinitionService.isJoinedField(fieldDefinition) &&\n      !this.rxFieldDefinitionService.isInheritedField(fieldDefinition) &&\n      !definitionModel.isAuditRecordDefinition\n    );\n  }\n\n  isFieldIdDisabled(fieldDefinition: IFieldDefinition, skipValidate = false): boolean {\n    return (\n      Boolean(fieldDefinition.lastUpdateTime) ||\n      (!this.rxFieldDefinitionService.isJoinedField(fieldDefinition) &&\n        (this.rxFieldDefinitionService.isReservedField(fieldDefinition, skipValidate) ||\n          this.rxFieldDefinitionService.isInheritedField(fieldDefinition)))\n    );\n  }\n\n  isDefaultValueEditable(fieldDefinition: IFieldDefinition, definitionModel: IRecordDefinitionModel): boolean {\n    return (\n      !(\n        this.rxFieldDefinitionService.isReadOnly(fieldDefinition) &&\n        fieldDefinition.id !== RX_RECORD_DEFINITION.coreFieldIds.displayId\n      ) &&\n      this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition) &&\n      !this.rxRecordDefinitionService.isJoinRecord(definitionModel) &&\n      !definitionModel.isAuditRecordDefinition\n    );\n  }\n\n  isLengthEditable(fieldDefinition: IFieldDefinition, definitionModel: IRecordDefinitionModel): boolean {\n    let isEditable = false;\n\n    if (!this.rxRecordDefinitionService.isJoinRecord(definitionModel)) {\n      let isReadonlyField = false;\n\n      // As an exception, the Length of the Display ID field should be editable for Regular records (if customization is enabled)\n      if (fieldDefinition.id !== RX_RECORD_DEFINITION.coreFieldIds.displayId) {\n        isReadonlyField =\n          this.rxFieldDefinitionService.isReadOnly(fieldDefinition) ||\n          includes(RX_RECORD_DEFINITION.AR_CORE_FIELD_IDS, fieldDefinition.id);\n      }\n\n      isEditable =\n        !isReadonlyField &&\n        this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition) &&\n        !definitionModel.isAuditRecordDefinition;\n    }\n\n    return isEditable;\n  }\n\n  isStoreEncryptedVisible(\n    fieldDefinition: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel\n  ): boolean {\n    return (\n      !this.rxRecordDefinitionService.isCustomRecord(definitionModel) &&\n      !this.rxFieldDefinitionService.isExternalRecordField(fieldDefinition)\n    );\n  }\n\n  isStoreEncryptedEditable(fieldDefinition: IFieldDefinition): boolean {\n    return this.isFieldEditable(fieldDefinition) && !includes(RX_RECORD_DEFINITION.keyFieldIds, fieldDefinition.id);\n  }\n\n  isStoreHashedVisible(fieldDefinition: IFieldDefinition, definitionModel: IRecordDefinitionModel) {\n    return (\n      !this.rxRecordDefinitionService.isCustomRecord(definitionModel) &&\n      !this.rxFieldDefinitionService.isExternalRecordField(fieldDefinition)\n    );\n  }\n\n  isStoreHashedEditable(fieldDefinition: IFieldDefinition, definitionModel: IRecordDefinitionModel): boolean {\n    return (\n      this.isFieldEditable(fieldDefinition) &&\n      !includes(RX_RECORD_DEFINITION.coreFieldIds, fieldDefinition.id) &&\n      !definitionModel.isAuditRecordDefinition\n    );\n  }\n\n  isNamedListEditable(fieldDefinition: IFieldDefinition, definitionModel: IRecordDefinitionModel): boolean {\n    return (\n      this.isFieldEditable(fieldDefinition) &&\n      !includes(RX_RECORD_DEFINITION.keyFieldIds, fieldDefinition.id) &&\n      !definitionModel.isAuditRecordDefinition\n    );\n  }\n\n  isFieldMappingEditable(fieldDefinition: IFieldDefinition): boolean {\n    return this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition);\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { RecordFieldOption } from '@helix/platform/record/api';\n\n@Component({\n  selector: 'rx-field-option-editor',\n  templateUrl: './field-option-editor.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: FieldOptionEditorComponent,\n      multi: true\n    }\n  ]\n})\nexport class FieldOptionEditorComponent extends ValueAccessor<RecordFieldOption> implements OnInit {\n  isRequired: boolean;\n\n  ngOnInit(): void {\n    this.isRequired = this.value === RecordFieldOption.Required || this.value === RecordFieldOption.System;\n  }\n\n  onSelectionChange(): void {\n    this.value = this.isRequired ? RecordFieldOption.Required : RecordFieldOption.Optional;\n  }\n}\n","<adapt-rx-control-label\n  label=\"{{ 'com.bmc.arsys.rx.client.record-designer.field-properties.required-field.label' | translate }}\"\n>\n</adapt-rx-control-label>\n\n<adapt-rx-switch\n  [(ngModel)]=\"isRequired\"\n  [disabled]=\"isDisabled\"\n  (ngModelChange)=\"onSelectionChange()\"\n></adapt-rx-switch>\n","import { RX_NUMBER, RxIdService } from '@helix/platform/utils';\nimport { RX_RECORD_DEFINITION, RxFieldDefinitionService, RxRecordDefinitionService } from '@helix/platform/record/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IFormBuilderConfig, RX_PERMISSION } from '@helix/platform/shared/api';\nimport {\n  BooleanFormControlComponent,\n  CounterFormControlComponent,\n  ICheckboxFormControlOptions,\n  ICounterFormControlOptions,\n  ILabelFormControlOptions,\n  IPermissionEditorComponentOptions,\n  ISelectFormControlOptions,\n  ISwitcherFormControlOptions,\n  ITextFormControlOptions,\n  LabelFormControlComponent,\n  RxPermissionEditorComponent,\n  SelectFormControlComponent,\n  SwitchFormControlComponent,\n  TextareaFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { Injector } from '@angular/core';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { RxFieldDefinitionInspectorHelperService } from './field-definition-inspector-helper.service';\nimport { includes, inRange, isEmpty, isNumber, trim } from 'lodash';\nimport { FieldOptionEditorComponent } from '../field-option-editor/field-option-editor.component';\n\nexport abstract class RxBaseFieldDefinitionService {\n  abstract readonly resourceType: string;\n  protected translateService = this.injector.get(TranslateService);\n  protected rxIdService = this.injector.get(RxIdService);\n  protected rxFieldDefinitionService = this.injector.get(RxFieldDefinitionService);\n  protected rxFieldDefinitionInspectorHelperService = this.injector.get(RxFieldDefinitionInspectorHelperService);\n  protected rxRecordDefinitionService = this.injector.get(RxRecordDefinitionService);\n\n  constructor(private injector: Injector) {}\n\n  getNewFieldDefinitionModel(fieldProperties: Partial<IRecordFieldDefinitionModel>): IRecordFieldDefinitionModel {\n    return {\n      id: this.rxIdService.generate(),\n      name: this.translateService.instant('com.bmc.arsys.rx.client.designer.default-field-name.label'),\n      description: null,\n      fieldOption: RX_RECORD_DEFINITION.fieldOptions.optional,\n      defaultValue: null,\n      allowPermissionsOverlay: true,\n      allowOtherPropertiesOverlay: true,\n      resourceType: this.resourceType,\n      ...fieldProperties\n    } as IRecordFieldDefinitionModel;\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const isJoinedField = this.rxFieldDefinitionService.isJoinedField(fieldModel);\n    const isExternalRecordField = this.rxFieldDefinitionService.isExternalRecordField(fieldModel);\n\n    return [\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n        controls: [\n          {\n            name: 'name',\n            component: TextFormControlComponent,\n            isDisabled: !this.rxFieldDefinitionInspectorHelperService.isNameEditable(fieldModel),\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n              required: true\n            } as ITextFormControlOptions\n          },\n          {\n            name: 'description',\n            component: TextareaFormControlComponent,\n            isDisabled:\n              isReadOnly ||\n              !this.rxFieldDefinitionInspectorHelperService.isDescriptionEditable(fieldModel, definitionModel),\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label')\n            }\n          },\n          {\n            name: 'resourceType',\n            component: SelectFormControlComponent,\n            isDisabled: true,\n            options: {\n              required: true,\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.data-type.label'),\n              options: [\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.attachment.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.attachment.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.boolean.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.boolean.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.dateOnly.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.dateTime.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.dateTime.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.decimal.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.decimal.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.real.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.real.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.integer.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.integer.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.localizedCharacter.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.localizedCharacter.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.selection.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.selection.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.character.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.character.labelKey)\n                },\n                {\n                  id: RX_RECORD_DEFINITION.dataTypes.timeOnly.resourceType,\n                  name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.timeOnly.labelKey)\n                }\n              ]\n            } as ISelectFormControlOptions\n          }\n        ]\n      },\n      {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.details.label'),\n        controls: [\n          {\n            name: 'fieldOption',\n            component: FieldOptionEditorComponent,\n            isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isRequiredEditable(fieldModel)\n          },\n          {\n            name: 'anyUserAllowedToSubmit',\n            component: SwitchFormControlComponent,\n            isDisabled:\n              isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isSubmitEditable(fieldModel, definitionModel),\n            options: {\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.allow-anyone-to-submit.label'\n              )\n            } as ISwitcherFormControlOptions\n          },\n          {\n            name: 'permissions',\n            component: RxPermissionEditorComponent,\n            isDisabled:\n              isReadOnly ||\n              !this.rxFieldDefinitionInspectorHelperService.arePermissionsEditable(fieldModel, definitionModel),\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.permissions.label'),\n              type: 'config',\n              permissionScope: RX_PERMISSION.permissionScope.all\n            } as IPermissionEditorComponentOptions\n          },\n          {\n            name: '',\n            component: LabelFormControlComponent,\n            options: {\n              labelKey: 'com.bmc.arsys.rx.client.record-designer.definition-properties.auditing.title'\n            } as ILabelFormControlOptions\n          },\n          {\n            name: 'audit',\n            component: BooleanFormControlComponent,\n            isDisabled:\n              isReadOnly ||\n              !this.rxFieldDefinitionInspectorHelperService.isAuditingEditable(fieldModel, definitionModel),\n            options: {\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.auditing-options.audit.label'\n              ),\n              tooltip: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.auditing-options.audit.tooltip'\n              ),\n              shouldDisplayAsCheckbox: true\n            } as ICheckboxFormControlOptions\n          },\n          {\n            name: 'copy',\n            component: BooleanFormControlComponent,\n            isDisabled:\n              fieldModel.audit ||\n              isReadOnly ||\n              !this.rxFieldDefinitionInspectorHelperService.isAuditingEditable(fieldModel, definitionModel),\n            options: {\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.auditing-options.copy.label'\n              ),\n              tooltip: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.auditing-options.copy.tooltip'\n              ),\n              shouldDisplayAsCheckbox: true\n            } as ICheckboxFormControlOptions\n          },\n          {\n            name: 'id',\n            component: CounterFormControlComponent,\n            isDisabled: this.rxFieldDefinitionInspectorHelperService.isFieldIdDisabled(\n              fieldModel,\n              fieldModel.isNewField\n            ),\n            options: {\n              label: this.translateService.instant('com.bmc.arsys.rx.client.common.field-id.label'),\n              allowIntegerOnly: true\n            } as ICounterFormControlOptions\n          }\n        ]\n      }\n    ] as IFormBuilderConfig;\n  }\n\n  validate(fieldModel: IRecordFieldDefinitionModel, definitionModel: IRecordDefinitionModel): IValidationIssue[] {\n    const issues: IValidationIssue[] = [];\n\n    if (isEmpty(trim(fieldModel.name))) {\n      issues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label')\n          }\n        ),\n        data: {\n          propertyName: 'name',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (!RX_RECORD_DEFINITION.validDefinitionNameRegex.test(fieldModel.name)) {\n      issues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label')\n          }\n        ),\n        data: {\n          propertyName: 'name',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (\n      !fieldModel.lastUpdateTime &&\n      isNumber(fieldModel.id) &&\n      !this.rxFieldDefinitionService.isExternalRecordField(fieldModel) &&\n      inRange(fieldModel.id, 1, RX_RECORD_DEFINITION.AR_MAX_RESERVED_FIELD_ID + 1) &&\n      !includes(RX_RECORD_DEFINITION.AR_CORE_FIELD_IDS, fieldModel.id)\n    ) {\n      issues.push({\n        type: ValidationIssueType.Warning,\n        data: {\n          propertyName: 'id',\n          guid: fieldModel.guid\n        },\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.validation.field-id-in-bmc-reserved-range-warning.message'\n        )\n      });\n    }\n\n    if (fieldModel.id && !inRange(fieldModel.id as number, 1, RX_NUMBER.maxInteger + 1)) {\n      issues.push({\n        type: ValidationIssueType.Error,\n        data: {\n          propertyName: 'id',\n          guid: fieldModel.guid\n        },\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.validation.invalid-field-id-range.message',\n          { max: RX_NUMBER.maxInteger }\n        )\n      });\n    }\n\n    return issues;\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { CounterFormControlComponent, ICounterFormControlOptions } from '@helix/platform/shared/components';\nimport { RX_NUMBER } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxAttachmentFieldDefinitionService extends RxBaseFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.attachment.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    // Adding controls specific to attachment field to Details section\n    inspectorConfig[1].controls.push({\n      name: 'maxSize',\n      component: CounterFormControlComponent,\n      isDisabled: isReadOnly,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.max-file-size.label'),\n        allowIntegerOnly: true,\n        minValue: 0,\n        maxValue: RX_NUMBER.maxInteger\n      } as ICounterFormControlOptions\n    });\n\n    return inspectorConfig;\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { ISelectFormControlOptions, SelectFormControlComponent } from '@helix/platform/shared/components';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxBooleanFieldDefinitionService extends RxBaseFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.boolean.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    // Adding controls specific to boolean field to Details section\n    inspectorConfig[1].controls.push({\n      name: 'defaultValue',\n      component: SelectFormControlComponent,\n      isDisabled: isReadOnly,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n        emptyOption: true,\n        options: [\n          {\n            id: '0',\n            name: this.translateService.instant('com.bmc.arsys.rx.client.common.true')\n          },\n          {\n            id: '1',\n            name: this.translateService.instant('com.bmc.arsys.rx.client.common.false')\n          }\n        ]\n      } as ISelectFormControlOptions\n    });\n\n    return inspectorConfig;\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport {\n  CounterFormControlComponent,\n  ICounterFormControlOptions,\n  IDefinitionPickerComponentOptions,\n  ISelectFormControlOptions,\n  ISwitcherFormControlOptions,\n  ITextFormControlOptions,\n  RxDefinitionPickerComponent,\n  RxDefinitionPickerType,\n  SelectFormControlComponent,\n  SwitchFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { inRange, size } from 'lodash';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { RxNumberUtilsService } from '@helix/platform/utils';\nimport { Tooltip } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxCharacterFieldDefinitionService extends RxBaseFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.character.resourceType;\n\n  constructor(injector: Injector, private rxNumberUtilsService: RxNumberUtilsService) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    if (this.rxFieldDefinitionInspectorHelperService.isStoreEncryptedVisible(fieldModel, definitionModel)) {\n      inspectorConfig[1].controls.push({\n        name: 'shouldPersistEncrypted',\n        component: SwitchFormControlComponent,\n        isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isStoreEncryptedEditable(fieldModel),\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.field-properties.store-encrypted.label'\n          )\n        } as ISwitcherFormControlOptions\n      });\n    }\n\n    if (this.rxFieldDefinitionInspectorHelperService.isStoreHashedVisible(fieldModel, definitionModel)) {\n      inspectorConfig[1].controls.push({\n        name: 'shouldPersistHashed',\n        component: SwitchFormControlComponent,\n        isDisabled:\n          isReadOnly ||\n          !this.rxFieldDefinitionInspectorHelperService.isStoreHashedEditable(fieldModel, definitionModel),\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.field-properties.store-hashed.label'\n          )\n        } as ISwitcherFormControlOptions\n      });\n    }\n\n    inspectorConfig[1].controls = inspectorConfig[1].controls.concat([\n      {\n        name: 'namedListDefinition',\n        component: RxDefinitionPickerComponent,\n        isDisabled:\n          isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isNamedListEditable(fieldModel, definitionModel),\n        options: {\n          definitionType: RxDefinitionPickerType.NamedList,\n          label: this.translateService.instant('com.bmc.arsys.rx.client.definition-type.named-list.label')\n        } as IDefinitionPickerComponentOptions\n      },\n      {\n        name: 'maxLength',\n        component: CounterFormControlComponent,\n        isDisabled:\n          isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isLengthEditable(fieldModel, definitionModel),\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.length.label'),\n          tooltip:\n            fieldModel.id === RX_RECORD_DEFINITION.coreFieldIds.displayId &&\n            !this.rxRecordDefinitionService.isJoinRecord(definitionModel) &&\n            !fieldModel.isNewField\n              ? this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.field-properties.display-id.length.tooltip'\n                )\n              : undefined,\n          allowIntegerOnly: true,\n          minValue: 0\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'defaultValue',\n        component: TextFormControlComponent,\n        isDisabled:\n          isReadOnly ||\n          !this.rxFieldDefinitionInspectorHelperService.isDefaultValueEditable(fieldModel, definitionModel),\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n          tooltip:\n            fieldModel.id === RX_RECORD_DEFINITION.coreFieldIds.displayId &&\n            !this.rxRecordDefinitionService.isJoinRecord(definitionModel) &&\n            !fieldModel.isNewField\n              ? new Tooltip(\n                  this.translateService.instant(\n                    'com.bmc.arsys.rx.client.record-designer.field-properties.display-id.default-value.tooltip'\n                  )\n                )\n              : undefined,\n          allowIntegerOnly: true\n        } as ITextFormControlOptions\n      },\n      {\n        name: 'pattern',\n        component: SelectFormControlComponent,\n        isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isFieldEditable(fieldModel),\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.field-properties.pattern.label'\n          ),\n          emptyOption: true,\n          options: [\n            {\n              name: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.alphabetical.label'\n              ),\n              id: '$ALPHA$'\n            },\n            {\n              name: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.alphanumeric.label'\n              ),\n              id: '$ALNUM$'\n            },\n            {\n              name: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.lowercase.label'\n              ),\n              id: '$LOWER$'\n            },\n            {\n              name: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.named-list.label'\n              ),\n              id: '$NAMEDLIST$'\n            },\n            {\n              name: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.numeric.label'\n              ),\n              id: '$DIGIT$'\n            },\n            {\n              name: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.uppercase.label'\n              ),\n              id: '$UPPER$'\n            }\n          ]\n        } as ISelectFormControlOptions\n      }\n    ]);\n\n    return inspectorConfig;\n  }\n\n  validate(fieldModel: IRecordFieldDefinitionModel, definitionModel: IRecordDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel, definitionModel);\n\n    if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxLength) && Number(fieldModel.maxLength) < 0) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.invalid-min-length-error.message'\n        ),\n        data: {\n          propertyName: 'maxLength',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (\n      fieldModel.id === RX_RECORD_DEFINITION.coreFieldIds.displayId &&\n      (this.rxRecordDefinitionService.isRegularRecord(definitionModel) ||\n        this.rxRecordDefinitionService.isExternalRecord(definitionModel))\n    ) {\n      if (!(fieldModel.maxLength === 1 || inRange(fieldModel.maxLength, 5, 16))) {\n        validationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.validation.invalid-max-length.message'\n          ),\n          data: {\n            propertyName: 'maxLength',\n            guid: fieldModel.guid\n          }\n        });\n      }\n\n      if (\n        (fieldModel.maxLength !== 1 && fieldModel.maxLength <= size(fieldModel.defaultValue)) ||\n        (fieldModel.maxLength === 1 && size(fieldModel.defaultValue) >= 15)\n      ) {\n        validationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.validation.invalid-display-id-range.message'\n          ),\n          data: {\n            propertyName: 'maxLength',\n            guid: fieldModel.guid\n          }\n        });\n      }\n    }\n\n    return validationIssues;\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { DateFormControlComponent, IDateFormControlOptions } from '@helix/platform/shared/components';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxDateOnlyFieldDefinitionService extends RxBaseFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    // Adding controls specific to date only field to Details section\n    inspectorConfig[1].controls.push({\n      name: 'defaultValue',\n      isDisabled: isReadOnly,\n      component: DateFormControlComponent,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n      } as IDateFormControlOptions\n    });\n\n    return inspectorConfig;\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { DateTimeFormControlComponent, IDateFormControlOptions } from '@helix/platform/shared/components';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxDateTimeFieldDefinitionService extends RxBaseFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.dateTime.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    // Adding controls specific to date only field to Details section\n    inspectorConfig[1].controls.push({\n      name: 'defaultValue',\n      component: DateTimeFormControlComponent,\n      isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isFieldEditable(fieldModel),\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n      } as IDateFormControlOptions\n    });\n\n    return inspectorConfig;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { CounterFormControlComponent, ICounterFormControlOptions } from '@helix/platform/shared/components';\nimport { isNil, omitBy } from 'lodash';\nimport { RxNumberUtilsService } from '@helix/platform/utils';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class RxNumericFieldDefinitionService extends RxBaseFieldDefinitionService {\n  abstract readonly minPrecision: number;\n  abstract readonly maxPrecision: number;\n  abstract readonly minValue: number;\n  abstract readonly maxValue: number;\n  abstract readonly allowOnlyInteger: boolean;\n\n  constructor(injector: Injector, private rxNumberUtilsService: RxNumberUtilsService) {\n    super(injector);\n  }\n\n  validate(fieldModel: IRecordFieldDefinitionModel, definitionModel: IRecordDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel, definitionModel);\n\n    if (fieldModel.defaultValue && Number(fieldModel.defaultValue) < this.minValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n            minValue: this.minValue\n          }\n        ),\n        data: {\n          propertyName: 'defaultValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.defaultValue && Number(fieldModel.defaultValue) > this.maxValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n            maxValue: this.maxValue\n          }\n        ),\n        data: {\n          propertyName: 'defaultValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.minValue && Number(fieldModel.minValue) < this.minValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n            ),\n            minValue: this.minValue\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.minValue && Number(fieldModel.minValue) > this.maxValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n            ),\n            maxValue: this.maxValue\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.maxValue && Number(fieldModel.maxValue) < this.minValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n            ),\n            minValue: this.minValue\n          }\n        ),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (fieldModel.maxValue && Number(fieldModel.maxValue) > this.maxValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n            ),\n            maxValue: this.maxValue\n          }\n        ),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.defaultValue) &&\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.minValue) &&\n      Number(fieldModel.defaultValue) >= this.minValue &&\n      Number(fieldModel.defaultValue) < Number(fieldModel.minValue)\n    ) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n            minValue: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'defaultValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.defaultValue) &&\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxValue) &&\n      Number(fieldModel.defaultValue) <= this.maxValue &&\n      Number(fieldModel.defaultValue) > Number(fieldModel.maxValue)\n    ) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n            maxValue: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'defaultValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.minValue) &&\n      this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxValue) &&\n      Number(fieldModel.minValue) > Number(fieldModel.maxValue)\n    ) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n            ),\n            maxValue: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (isNil(fieldModel.minValue)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (isNil(fieldModel.maxValue)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    if (this.resourceType !== RX_RECORD_DEFINITION.dataTypes.integer.resourceType && isNil(fieldModel.precision)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.field-properties.precision.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    // Adding controls specific to decimal field to Details section\n    inspectorConfig[1].controls = inspectorConfig[1].controls.concat([\n      {\n        name: 'precision',\n        component: CounterFormControlComponent,\n        isDisabled: isReadOnly,\n        options: omitBy(\n          {\n            label: this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.field-properties.precision.label'\n            ),\n            required: true,\n            allowIntegerOnly: true,\n            minValue: this.minPrecision,\n            maxValue: this.maxPrecision\n          },\n          isNil\n        ) as ICounterFormControlOptions\n      },\n\n      {\n        name: 'minValue',\n        component: CounterFormControlComponent,\n        isDisabled: isReadOnly,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'\n          ),\n          required: true,\n          allowIntegerOnly: this.allowOnlyInteger,\n          minValue: this.minValue,\n          maxValue: this.maxValue\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'maxValue',\n        component: CounterFormControlComponent,\n        isDisabled: isReadOnly,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'\n          ),\n          required: true,\n          allowIntegerOnly: this.allowOnlyInteger,\n          minValue: this.minValue,\n          maxValue: this.maxValue\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'defaultValue',\n        component: CounterFormControlComponent,\n        isDisabled: isReadOnly,\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n          allowIntegerOnly: this.allowOnlyInteger,\n          minValue: this.minValue,\n          maxValue: this.maxValue\n        } as ICounterFormControlOptions\n      }\n    ]);\n\n    return inspectorConfig;\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { Injectable } from '@angular/core';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { RxNumericFieldDefinitionService } from './numeric-field-definition.service';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { inRange } from 'lodash';\nimport { RX_NUMBER } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class RxDecimalFieldDefinitionService extends RxNumericFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.decimal.resourceType;\n  minPrecision = 0;\n  maxPrecision = 9;\n  minValue = RX_NUMBER.minDecimal;\n  maxValue = RX_NUMBER.maxDecimal;\n  allowOnlyInteger = false;\n\n  getNewFieldDefinitionModel(fieldProperties: Partial<IRecordFieldDefinitionModel>) {\n    return super.getNewFieldDefinitionModel({\n      ...fieldProperties,\n      precision: 2,\n      minValue: this.minValue,\n      maxValue: this.maxValue\n    });\n  }\n\n  validate(fieldModel: IRecordFieldDefinitionModel, definitionModel: IRecordDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel, definitionModel);\n\n    if (!inRange(fieldModel.precision, this.minPrecision, this.maxPrecision + 1)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.validation.invalid-precision-range.message',\n          {\n            min: this.minPrecision,\n            max: this.maxPrecision\n          }\n        ),\n        data: {\n          propertyName: 'precision',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { Injectable } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { RxNumericFieldDefinitionService } from './numeric-field-definition.service';\nimport { RX_NUMBER } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxIntegerFieldDefinitionService extends RxNumericFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.integer.resourceType;\n  minPrecision = null;\n  maxPrecision = null;\n  minValue = RX_NUMBER.minInteger;\n  maxValue = RX_NUMBER.maxInteger;\n  allowOnlyInteger = true;\n\n  getNewFieldDefinitionModel(fieldProperties: Partial<IRecordFieldDefinitionModel>) {\n    return super.getNewFieldDefinitionModel({\n      ...fieldProperties,\n      minValue: this.minValue,\n      maxValue: this.maxValue\n    });\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    // Removing Precision control not required for integer field\n    inspectorConfig[1].controls.splice(7, 1);\n\n    return inspectorConfig;\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { noop } from 'lodash';\nimport { RxModalService } from '@helix/platform/ui-kit';\nimport { LocalizedCharacterFieldValueModalComponent, ValueAccessor } from '@helix/platform/shared/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IPlainObject } from '@helix/platform/shared/api';\nimport { ILocalizedCharacterFieldEditorOptions } from './localized-character-field-editor.interface';\n\n@Component({\n  selector: 'rx-localized-character-field-editor',\n  templateUrl: './localized-character-field-editor.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: LocalizedCharacterFieldEditorComponent,\n      multi: true\n    }\n  ]\n})\nexport class LocalizedCharacterFieldEditorComponent extends ValueAccessor<IPlainObject> {\n  @Input()\n  options: ILocalizedCharacterFieldEditorOptions;\n\n  constructor(private rxModalService: RxModalService, private translateService: TranslateService) {\n    super();\n  }\n\n  localize(): void {\n    this.rxModalService\n      .openModal({\n        title: this.translateService.instant(\n          'com.bmc.arsys.rx.client.view-components.localized-character-field.dialog.title'\n        ),\n        data: {\n          valueByLocale: { ...this.value },\n          hideCurrentLocale: true,\n          isReadOnly: this.options.isReadOnly\n        },\n        size: 'sm',\n        content: LocalizedCharacterFieldValueModalComponent\n      })\n      .then((data) => {\n        if (data) {\n          this.value = data.valueByLocale;\n        }\n      })\n      .catch(noop);\n  }\n}\n","<div>\n  <button\n    type=\"button\"\n    class=\"localize-button btn btn-link focusable d-icon-left-pencil p-0 float-end\"\n    (click)=\"localize()\"\n  >\n    {{ 'com.bmc.arsys.rx.client.view-components.localized-character-field.button.localize.label' | translate }}\n  </button>\n\n  <div class=\"pl-1\">{{ value['en-US'] }}</div>\n</div>\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { CounterFormControlComponent, ICounterFormControlOptions } from '@helix/platform/shared/components';\nimport { LocalizedCharacterFieldEditorComponent } from '../localized-character-field-editor/localized-character-field-editor.component';\nimport { ILocalizedCharacterFieldEditorOptions } from '../localized-character-field-editor/localized-character-field-editor.interface';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { RxNumberUtilsService } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxLocalizedCharacterFieldDefinitionService extends RxBaseFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.localizedCharacter.resourceType;\n\n  constructor(injector: Injector, private rxNumberUtilsService: RxNumberUtilsService) {\n    super(injector);\n  }\n\n  getNewFieldDefinitionModel(fieldProperties: Partial<IRecordFieldDefinitionModel>) {\n    return super.getNewFieldDefinitionModel({\n      ...fieldProperties,\n      maxLength: 254\n    });\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    inspectorConfig[1].controls = inspectorConfig[1].controls.concat([\n      {\n        name: 'maxLength',\n        component: CounterFormControlComponent,\n        isDisabled: isReadOnly,\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.length.label'),\n          minValue: 0,\n          maxValue: 254,\n          allowIntegerOnly: true\n        } as ICounterFormControlOptions\n      },\n      {\n        name: 'defaultValueByLocale',\n        component: LocalizedCharacterFieldEditorComponent,\n        options: {\n          isReadOnly: isReadOnly\n        } as ILocalizedCharacterFieldEditorOptions\n      }\n    ]);\n\n    return inspectorConfig;\n  }\n\n  validate(fieldModel: IRecordFieldDefinitionModel, definitionModel: IRecordDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel, definitionModel);\n\n    if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxLength) && Number(fieldModel.maxLength) < 0) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.invalid-min-length-error.message'\n        ),\n        data: {\n          propertyName: 'maxLength',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { Injectable } from '@angular/core';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { RxNumericFieldDefinitionService } from './numeric-field-definition.service';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRealFieldDefinitionService extends RxNumericFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.real.resourceType;\n  minPrecision: -1;\n  maxPrecision = null;\n  minValue = -1.845e19;\n  maxValue = 1.845e19;\n  allowOnlyInteger = false;\n  private AR_PRECISION_NONE = -1;\n\n  getNewFieldDefinitionModel(fieldProperties: Partial<IRecordFieldDefinitionModel>) {\n    return super.getNewFieldDefinitionModel({\n      ...fieldProperties,\n      precision: 6,\n      minValue: this.minValue,\n      maxValue: this.maxValue\n    });\n  }\n\n  validate(fieldModel: IRecordFieldDefinitionModel, definitionModel: IRecordDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel, definitionModel);\n\n    if (\n      !isFinite(fieldModel.precision) ||\n      (fieldModel.precision < 1 && fieldModel.precision != this.AR_PRECISION_NONE)\n    ) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.validation.invalid-real-field-precision-range.message'\n        ),\n        data: {\n          propertyName: 'precision',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { ISelectionFieldOptionProperties, SelectionFieldOptionsComponent } from '@helix/platform/shared/components';\nimport { IValidationIssue, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { isEmpty } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxSelectionFieldDefinitionService extends RxBaseFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.selection.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    inspectorConfig[1].controls.push({\n      name: 'selectionFieldOptionProperties',\n      component: SelectionFieldOptionsComponent,\n      options: {\n        isReadOnly: !this.rxFieldDefinitionInspectorHelperService.isFieldEditable(fieldModel)\n      } as ISelectionFieldOptionProperties\n    });\n\n    return inspectorConfig;\n  }\n\n  validate(fieldModel: IRecordFieldDefinitionModel, definitionModel: IRecordDefinitionModel): IValidationIssue[] {\n    const validationIssues = super.validate(fieldModel, definitionModel);\n\n    if (isEmpty(fieldModel.selectionFieldOptionProperties?.optionNamesById)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          { propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.options.label') }\n        ),\n        data: {\n          propertyName: 'selectionFieldOptionProperties',\n          guid: fieldModel.guid\n        }\n      });\n    }\n\n    return validationIssues;\n  }\n}\n","import { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { IDateFormControlOptions, TimeFormControlComponent } from '@helix/platform/shared/components';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxTimeOnlyFieldDefinitionService extends RxBaseFieldDefinitionService {\n  resourceType = RX_RECORD_DEFINITION.dataTypes.timeOnly.resourceType;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n\n    inspectorConfig[1].controls.push({\n      name: 'defaultValue',\n      isDisabled: isReadOnly,\n      component: TimeFormControlComponent,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n      } as IDateFormControlOptions\n    });\n\n    return inspectorConfig;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { RxAttachmentFieldDefinitionService } from './attachment-field-definition.service';\nimport { RxBooleanFieldDefinitionService } from './boolean-field-definition.service';\nimport { RxCharacterFieldDefinitionService } from './character-field-definition.service';\nimport { RxDateOnlyFieldDefinitionService } from './date-only-field-definition.service';\nimport { RxDateTimeFieldDefinitionService } from './date-time-field-definition.service';\nimport { RxDecimalFieldDefinitionService } from './decimal-field-definition.service';\nimport { RxIntegerFieldDefinitionService } from './integer-field-definition.service';\nimport { RxLocalizedCharacterFieldDefinitionService } from './localized-character-field-definition.service';\nimport { RxRealFieldDefinitionService } from './real-field-definition.service';\nimport { RxSelectionFieldDefinitionService } from './selection-field-definition.service';\nimport { RxTimeOnlyFieldDefinitionService } from './time-only-field-definition.service';\nimport { RxBaseFieldDefinitionService } from './base-field-definition.service';\nimport { IFormBuilderConfig } from '@helix/platform/shared/api';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { IValidationIssue } from '@helix/platform/ui-kit';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxFieldDefinitionManagerService {\n  private fieldServices = new Map<string, RxBaseFieldDefinitionService>();\n\n  constructor(\n    rxAttachmentFieldDefinitionService: RxAttachmentFieldDefinitionService,\n    rxBooleanFieldDefinitionService: RxBooleanFieldDefinitionService,\n    rxCharacterFieldDefinitionService: RxCharacterFieldDefinitionService,\n    rxLocalizedCharacterFieldDefinitionService: RxLocalizedCharacterFieldDefinitionService,\n    rxDateTimeFieldDefinitionService: RxDateTimeFieldDefinitionService,\n    rxDateOnlyFieldDefinitionService: RxDateOnlyFieldDefinitionService,\n    rxTimeOnlyFieldDefinitionService: RxTimeOnlyFieldDefinitionService,\n    rxIntegerFieldDefinitionService: RxIntegerFieldDefinitionService,\n    rxDecimalFieldDefinitionService: RxDecimalFieldDefinitionService,\n    rxRealFieldDefinitionService: RxRealFieldDefinitionService,\n    rxSelectionFieldDefinitionService: RxSelectionFieldDefinitionService\n  ) {\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.attachment.resourceType, rxAttachmentFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.boolean.resourceType, rxBooleanFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.character.resourceType, rxCharacterFieldDefinitionService);\n\n    this.fieldServices.set(\n      RX_RECORD_DEFINITION.dataTypes.localizedCharacter.resourceType,\n      rxLocalizedCharacterFieldDefinitionService\n    );\n\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.dateTime.resourceType, rxDateTimeFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType, rxDateOnlyFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.timeOnly.resourceType, rxTimeOnlyFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.integer.resourceType, rxIntegerFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.decimal.resourceType, rxDecimalFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.real.resourceType, rxRealFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.selection.resourceType, rxSelectionFieldDefinitionService);\n  }\n\n  getNewFieldDefinitionModel(resourceType: string, fieldProperties: Partial<IRecordFieldDefinitionModel>) {\n    return this.fieldServices.get(resourceType).getNewFieldDefinitionModel(fieldProperties);\n  }\n\n  getFieldInspectorConfig(\n    fieldModel: IRecordFieldDefinitionModel,\n    definitionModel: IRecordDefinitionModel,\n    isReadOnly: boolean\n  ): IFormBuilderConfig {\n    return this.fieldServices\n      .get(fieldModel.resourceType)\n      .getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n  }\n\n  validate(fieldModel: IRecordFieldDefinitionModel, definitionModel: IRecordDefinitionModel): IValidationIssue[] {\n    return this.fieldServices.get(fieldModel.resourceType).validate(fieldModel, definitionModel);\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IPlainObject, RxNotificationService } from '@helix/platform/shared/api';\nimport { forEach, includes, isEmpty, keys, map as _map, pick, remove, some, union } from 'lodash';\nimport {\n  IFieldDefinition,\n  IRecordDefinition,\n  RX_RECORD_DEFINITION,\n  RxRecordDefinitionCacheService,\n  RxFieldDefinitionService\n} from '@helix/platform/record/api';\nimport {\n  IDefinitionPickerComponentOptions,\n  RxDefinitionPickerScope,\n  RxDefinitionPickerType,\n  ValueAccessor\n} from '@helix/platform/shared/components';\nimport {\n  IInheritanceDescriptor,\n  IInheritanceOptions,\n  IInheritanceSelectorControlValue,\n  IRecordInheritanceSelectorOptions\n} from './record-inheritance-editor.interfaces';\nimport { BehaviorSubject, combineLatest, iif, of, ReplaySubject } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RxFieldDefinitionManagerService } from '../services/field-definition-manager.service';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { RxGuidService } from '@helix/platform/utils';\n\n@Component({\n  selector: 'rx-record-inheritance-selector',\n  templateUrl: './record-inheritance-editor.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RecordInheritanceEditorComponent,\n      multi: true\n    }\n  ]\n})\nexport class RecordInheritanceEditorComponent\n  extends ValueAccessor<IInheritanceSelectorControlValue>\n  implements OnChanges\n{\n  @Input()\n  options: IRecordInheritanceSelectorOptions;\n\n  inheritFrom: string;\n  isInheritingCoreFields: boolean;\n  state: IPlainObject;\n  private inheritedFieldDefinitions: IRecordFieldDefinitionModel[];\n  private inheritFromRecordDefinition: IRecordDefinitionModel;\n  private isNew: boolean;\n\n  inheritanceDescriptor: IInheritanceDescriptor | null = {\n    inheritingFrom: '',\n    isInheritingRules: true,\n    isInheritingFieldPermissions: true,\n    isInheritingAssociations: true,\n    isInheritingFieldAuditOptions: true\n  };\n\n  inheritanceOptions: IInheritanceOptions;\n\n  recordDefinitionPickerOptions: IDefinitionPickerComponentOptions = {\n    label: this.translateService.instant(\n      'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.record-to-inherit.label'\n    ),\n    definitionType: RxDefinitionPickerType.InheritableRecord,\n    availableDefinitionPickerStates: {\n      definitionButtonsGroups: [RxDefinitionPickerScope.Bundle, RxDefinitionPickerScope.All],\n      search: RxDefinitionPickerScope.All\n    }\n  };\n\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n  private isReadOnlySubject = new BehaviorSubject(false);\n  private isSharedInstanceStorageLockedSubject = new BehaviorSubject(true);\n  private inheritingFromSubject = new BehaviorSubject('');\n  private isMakeFinalDisabledSubject = new BehaviorSubject(false);\n\n  private isSharedInstanceStorageDisabled$ = combineLatest([\n    this.isReadOnlySubject,\n    this.isSharedInstanceStorageLockedSubject\n  ]).pipe(map(([isReadOnly, isSharedInstanceStorage]) => isReadOnly || isSharedInstanceStorage));\n\n  private inheritFromRecordDefinition$ = this.inheritingFromSubject.pipe(\n    switchMap((recordDefinitionName) =>\n      iif(\n        () => Boolean(recordDefinitionName),\n        this.rxRecordDefinitionCacheService.getRecordDefinition(recordDefinitionName),\n        of(null)\n      )\n    ),\n    tap((recordDefinition: IRecordDefinition) => {\n      if (recordDefinition) {\n        this.inheritFromRecordDefinition = recordDefinition as IRecordDefinitionModel;\n        this.isInheritingCoreFields = false;\n\n        if (recordDefinition.isSharedInstanceStorage) {\n          this.inheritanceOptions.isSharedInstanceStorage = true;\n          this.updateInheritanceOptions();\n          this.state.inheritCoreFieldsAutomatically = true;\n          this.isInheritingCoreFields = true;\n        } else {\n          if (this.isNew) {\n            this.inheritanceOptions.isSharedInstanceStorage = false;\n          }\n\n          this.state.inheritCoreFieldsAutomatically = false;\n        }\n\n        this.inheritanceDescriptor.isInheritingRules = true;\n        this.inheritedFieldDefinitions = this.getInheritedFieldDefinitions(recordDefinition);\n\n        forEach(recordDefinition.securityLabels, function (securityLabel) {\n          securityLabel.inherited = true;\n        });\n\n        this.setValue();\n      }\n    })\n  );\n\n  private isCoreFieldsOptionDisabled$ = combineLatest([this.isReadOnlySubject, this.inheritFromRecordDefinition$]).pipe(\n    map(\n      ([isReadOnly, inheritingFromRecordDefinition]) =>\n        !this.inheritFrom ||\n        isReadOnly ||\n        this.state.inheritCoreFieldsAutomatically ||\n        this.state.lockCoreFieldInheritanceOption\n    )\n  );\n\n  vm$ = combineLatest([\n    this.isReadOnlySubject,\n    this.isSharedInstanceStorageDisabled$,\n    this.isMakeFinalDisabledSubject,\n    this.isCoreFieldsOptionDisabled$\n  ]).pipe(\n    map(([isReadOnly, isSharedInstanceStorageDisabled, isMakeFinalDisabled, isCoreFieldsOptionDisabled]) => ({\n      isReadOnly,\n      isSharedInstanceStorageDisabled,\n      isMakeFinalDisabled,\n      isCoreFieldsOptionDisabled\n    }))\n  );\n\n  constructor(\n    private translateService: TranslateService,\n    private rxFieldDefinitionManagerService: RxFieldDefinitionManagerService,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxNotificationService: RxNotificationService,\n    private rxGuidService: RxGuidService,\n    private rxFieldDefinitionService: RxFieldDefinitionService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.options) {\n      this.updateValues();\n    }\n  }\n\n  private updateInheritanceOptions(): void {\n    this.isMakeFinalDisabledSubject.next(\n      this.isReadOnlySubject.value ||\n        (this.inheritanceOptions.isSharedInstanceStorage && !this.inheritingFromSubject.value)\n    );\n\n    if (\n      this.inheritanceOptions.isSharedInstanceStorage &&\n      this.inheritanceOptions.isFinal &&\n      !this.inheritFromRecordDefinition\n    ) {\n      this.inheritanceOptions.isFinal = false;\n    }\n  }\n\n  onInheritanceOptionsChange(): void {\n    this.updateInheritanceOptions();\n    this.setValue();\n  }\n\n  onInheritanceDescriptorChange(): void {\n    if (this.inheritanceDescriptor.isInheritingFieldPermissions) {\n      this.inheritedFieldDefinitions = this.getInheritedFieldDefinitions(this.inheritFromRecordDefinition);\n    }\n\n    this.setValue();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options) {\n      this.updateValues();\n    }\n  }\n\n  onRecordDefinitionNameChange(recordDefinitionName: string): void {\n    this.rxNotificationService.addInfoMessage(\n      this.translateService.instant(\n        'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.inherited-fields-remaining-info.message'\n      )\n    );\n\n    if (recordDefinitionName) {\n      this.inheritingFromSubject.next(recordDefinitionName);\n    } else {\n      this.inheritedFieldDefinitions = [];\n      this.setValue();\n    }\n  }\n\n  onInheritCoreFieldsChange(): void {\n    this.inheritedFieldDefinitions = this.getInheritedFieldDefinitions(this.inheritFromRecordDefinition);\n\n    this.setValue();\n  }\n\n  private getInheritedFieldDefinitions(recordDefinition: IRecordDefinition): IRecordFieldDefinitionModel[] {\n    const newFieldProperties = union(\n      keys(\n        this.rxFieldDefinitionManagerService.getNewFieldDefinitionModel(\n          RX_RECORD_DEFINITION.resourceTypes.character,\n          null\n        )\n      ),\n      [\n        'isInherited',\n        'anyUserAllowedToSubmit',\n        'displayType',\n        'explicitPermissions',\n        'fieldMapping',\n        'fieldTypeName',\n        'maxLength',\n        'maxSize',\n        'maxValue',\n        'minValue',\n        'namedListDefinition',\n        'optionNamesById',\n        'optionLabelsById',\n        'precision',\n        'resourceType',\n        'searchable',\n        'shouldPersistEncrypted',\n        'shouldPersistHashed',\n        'tags',\n        'version'\n      ]\n    );\n\n    if (this.inheritanceDescriptor?.isInheritingFieldPermissions) {\n      newFieldProperties.push('permissions');\n    }\n\n    const inheritedFieldDefinitions: IRecordFieldDefinitionModel[] = _map(\n      recordDefinition.fieldDefinitions,\n      (fieldDefinition: IFieldDefinition) => {\n        fieldDefinition.isInherited = true;\n\n        return {\n          ...pick(fieldDefinition, newFieldProperties),\n          guid: this.rxGuidService.generate(),\n          isCoreField: this.rxFieldDefinitionService.isCoreField(fieldDefinition),\n          selectionFieldOptionProperties:\n            fieldDefinition.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType\n              ? {\n                  defaultValue: null,\n                  optionNamesById: fieldDefinition.optionNamesById,\n                  optionLabelsById: fieldDefinition.optionLabelsById\n                }\n              : null\n        } as IRecordFieldDefinitionModel;\n      }\n    );\n\n    if (!this.isInheritingCoreFields) {\n      remove(inheritedFieldDefinitions, function (fieldDefinition) {\n        return includes(RX_RECORD_DEFINITION.arCoreFieldIds, fieldDefinition.id);\n      });\n    }\n\n    return inheritedFieldDefinitions;\n  }\n\n  private updateValues(): void {\n    if (this.options) {\n      const recordDefinition = this.options.recordDefinition;\n      this.inheritanceOptions = { ...recordDefinition.recordInheritanceSelector.inheritanceOptions };\n\n      if (recordDefinition.recordInheritanceSelector.inheritanceDescriptor) {\n        this.inheritanceDescriptor = { ...recordDefinition.recordInheritanceSelector.inheritanceDescriptor };\n        this.inheritFrom = this.inheritanceDescriptor.inheritingFrom;\n      }\n\n      this.isNew = !recordDefinition.lastUpdateTime;\n\n      this.isReadOnlySubject.next(this.options.isReadOnly);\n      this.isSharedInstanceStorageLockedSubject.next(!this.isNew || !isEmpty(this.inheritFrom));\n\n      if (recordDefinition.inheritanceDescriptor?.inheritingFrom) {\n        this.isSharedInstanceStorageLockedSubject.next(true);\n\n        this.rxRecordDefinitionCacheService\n          .getRecordDefinition(recordDefinition.inheritanceDescriptor.inheritingFrom)\n          .pipe(take(1))\n          .subscribe((inheritFromRecordDefinition) => {\n            if (inheritFromRecordDefinition.isSharedInstanceStorage) {\n              this.state.inheritCoreFieldsAutomatically = true;\n              this.isInheritingCoreFields = true;\n            } else {\n              var fieldDefinitions = recordDefinition.fields;\n\n              this.isInheritingCoreFields = some(fieldDefinitions, function (fieldDefinition) {\n                return fieldDefinition.isInherited && includes(RX_RECORD_DEFINITION.arCoreFieldIds, fieldDefinition.id);\n              });\n            }\n          });\n      }\n\n      this.state = {\n        editMode: !this.isNew,\n        inheritCoreFieldsAutomatically: false,\n        lockCoreFieldInheritanceOption: !this.isNew\n      };\n    }\n  }\n\n  setValue(): void {\n    this.value = {\n      inheritanceOptions: this.inheritanceOptions,\n      inheritanceDescriptor: this.inheritFrom\n        ? { ...this.inheritanceDescriptor, inheritingFrom: this.inheritFrom }\n        : null,\n      isInheritingCoreFields: this.inheritFrom ? this.isInheritingCoreFields : null,\n      inheritedFieldDefinitions: this.inheritedFieldDefinitions\n    };\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n    this.isReadOnlySubject.complete();\n    this.isSharedInstanceStorageLockedSubject.complete();\n    this.inheritingFromSubject.complete();\n    this.isMakeFinalDisabledSubject.complete();\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <adapt-rx-checkbox\n    label=\"{{\n      'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.share-data-with-inheritors.label' | translate\n    }}\"\n    [(ngModel)]=\"inheritanceOptions.isSharedInstanceStorage\"\n    (ngModelChange)=\"onInheritanceOptionsChange()\"\n    [disabled]=\"vm.isSharedInstanceStorageDisabled\"\n    [tooltip]=\"{\n      iconName: 'question_circle_o',\n      content:\n        'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.share-data-with-inheritors.tooltip'\n        | translate,\n      placement: 'bottom',\n      popoverMode: true\n    }\"\n  >\n  </adapt-rx-checkbox>\n\n  <adapt-rx-checkbox\n    label=\"{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.make-abstract.label' | translate }}\"\n    [(ngModel)]=\"inheritanceOptions.isAbstract\"\n    (ngModelChange)=\"onInheritanceOptionsChange()\"\n    [disabled]=\"vm.isReadOnly\"\n    [tooltip]=\"{\n      iconName: 'question_circle_o',\n      content: 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.make-abstract.tooltip' | translate,\n      placement: 'bottom',\n      popoverMode: true\n    }\"\n  >\n  </adapt-rx-checkbox>\n\n  <adapt-rx-checkbox\n    label=\"{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.make-final.label' | translate }}\"\n    [(ngModel)]=\"inheritanceOptions.isFinal\"\n    (ngModelChange)=\"onInheritanceOptionsChange()\"\n    [disabled]=\"vm.isMakeFinalDisabled || vm.isReadOnly\"\n    [tooltip]=\"{\n      iconName: 'question_circle_o',\n      content: 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.make-final.tooltip' | translate,\n      placement: 'bottom',\n      popoverMode: true\n    }\"\n  >\n  </adapt-rx-checkbox>\n\n  <rx-definition-picker\n    class=\"form-group d-block\"\n    name=\"inherit-from\"\n    rx-id=\"record-definition-name-field\"\n    [options]=\"recordDefinitionPickerOptions\"\n    [(ngModel)]=\"inheritFrom\"\n    (ngModelChange)=\"onRecordDefinitionNameChange($event)\"\n    [disabled]=\"vm.isReadOnly\"\n  >\n  </rx-definition-picker>\n\n  <div *ngIf=\"inheritFrom\">\n    <label>\n      <span>{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.inherit.label' | translate }}</span>\n    </label>\n\n    <adapt-rx-checkbox\n      label=\"{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.core-fields.label' | translate }}\"\n      [(ngModel)]=\"isInheritingCoreFields\"\n      (ngModelChange)=\"onInheritCoreFieldsChange()\"\n      [disabled]=\"vm.isCoreFieldsOptionDisabled\"\n    >\n    </adapt-rx-checkbox>\n\n    <adapt-rx-checkbox\n      label=\"{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.rules.label' | translate }}\"\n      [(ngModel)]=\"inheritanceDescriptor.isInheritingRules\"\n      [disabled]=\"vm.isReadOnly\"\n      (ngModelChange)=\"onInheritanceDescriptorChange()\"\n    >\n    </adapt-rx-checkbox>\n\n    <adapt-rx-checkbox\n      label=\"{{\n        'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.field-permissions.label' | translate\n      }}\"\n      [(ngModel)]=\"inheritanceDescriptor.isInheritingFieldPermissions\"\n      [disabled]=\"vm.isReadOnly\"\n      (ngModelChange)=\"onInheritanceDescriptorChange()\"\n    >\n    </adapt-rx-checkbox>\n\n    <adapt-rx-checkbox\n      label=\"{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.associations.label' | translate }}\"\n      [(ngModel)]=\"inheritanceDescriptor.isInheritingAssociations\"\n      [disabled]=\"vm.isReadOnly\"\n      (ngModelChange)=\"onInheritanceDescriptorChange()\"\n    >\n    </adapt-rx-checkbox>\n\n    <adapt-rx-checkbox\n      label=\"{{\n        'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.audit-field-properties.label' | translate\n      }}\"\n      [(ngModel)]=\"inheritanceDescriptor.isInheritingFieldAuditOptions\"\n      [disabled]=\"vm.isReadOnly\"\n      (ngModelChange)=\"onInheritanceDescriptorChange()\"\n    >\n    </adapt-rx-checkbox>\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AdaptButtonModule,\n  AdaptIconModule,\n  AdaptPopoverModule,\n  AdaptRxCheckboxModule,\n  AdaptRxSelectModule,\n  AdaptTooltipModule\n} from '@bmc-ux/adapt-angular';\nimport { AdaptTableModule } from '@bmc-ux/adapt-table';\nimport { AdaptCheckbox2Module } from '@bmc-ux/obsolete';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RecordInheritanceEditorComponent } from './record-inheritance-editor.component';\nimport { RxDefinitionPickerModule } from '@helix/platform/shared/components';\n\n@NgModule({\n  declarations: [RecordInheritanceEditorComponent],\n  exports: [RecordInheritanceEditorComponent],\n  entryComponents: [RecordInheritanceEditorComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    AdaptTooltipModule,\n    AdaptRxSelectModule,\n    AdaptButtonModule,\n    AdaptCheckbox2Module,\n    AdaptPopoverModule,\n    AdaptIconModule,\n    AdaptRxCheckboxModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    AdaptTableModule,\n    RxDefinitionPickerModule\n  ]\n})\nexport class RecordInheritanceEditorModule {}\n","import { Injectable } from '@angular/core';\nimport { ComponentStore } from '@ngrx/component-store';\nimport { Observable } from 'rxjs';\nimport { IFieldDefinition, RX_RECORD_DEFINITION, ISearchDefinition } from '@helix/platform/record/api';\nimport { IRecordSearchFieldsEditorState } from './search-field.types';\nimport { FormGroup } from '@angular/forms';\nimport { find } from 'lodash';\n\n@Injectable()\nexport class SearchFieldEditorModalStore extends ComponentStore<IRecordSearchFieldsEditorState> {\n  readonly searchFields$ = this.select((state: IRecordSearchFieldsEditorState) => state.searchFields);\n  readonly availableFields$ = this.select((state: IRecordSearchFieldsEditorState) => state.availableFields);\n  readonly isDirty$: Observable<boolean> = this.select((state: IRecordSearchFieldsEditorState) => state.isDirty);\n  readonly isValid$: Observable<boolean> = this.select((state: IRecordSearchFieldsEditorState) => state.isValid);\n\n  readonly vm$ = this.select(\n    this.availableFields$,\n    this.searchFields$,\n    this.isDirty$,\n    this.isValid$,\n    (availableFields, searchFields, isDirty, isValid) => ({\n      availableFields,\n      searchFields,\n      isDirty,\n      isValid\n    })\n  );\n\n  readonly toggleOpen = this.updater((state: IRecordSearchFieldsEditorState, toggleValue: boolean) => {\n    const searchFieldItems = [...state.searchFields];\n\n    searchFieldItems.forEach((control) => {\n      control.get('isOpen').setValue(toggleValue);\n    });\n\n    return {\n      ...state,\n      searchFields: searchFieldItems\n    };\n  });\n\n  readonly updateFields = this.updater((state: IRecordSearchFieldsEditorState, field: FormGroup) => ({\n    ...state,\n    searchFields: [...state.searchFields, field],\n    isValid: false\n  }));\n\n  readonly updateAvailableFields = this.updater((state: IRecordSearchFieldsEditorState, field: IFieldDefinition) => {\n    const updatedSearchFields = [...state.searchFields];\n\n    updatedSearchFields.forEach((control) => {\n      control\n        .get('isCategoryVisible')\n        .setValue(\n          find(state.availableFields, { id: field.id }).resourceType !== RX_RECORD_DEFINITION.resourceTypes.attachment\n        );\n    });\n\n    return {\n      ...state,\n      availableFields: state.availableFields.filter((availableField) => availableField.id !== field.id),\n      isDirty: true,\n      searchFields: updatedSearchFields,\n      isValid: !state.searchFields.some((form) => form.invalid)\n    };\n  });\n\n  readonly removeSearchField = this.updater((state: IRecordSearchFieldsEditorState, fieldIndex: number) => ({\n    ...state,\n    isDirty: true,\n    searchFields: state.searchFields.filter((field, index) => fieldIndex !== index),\n    isValid: !state.searchFields.some((form) => form.invalid)\n  }));\n\n  readonly markDirty = this.updater((state: IRecordSearchFieldsEditorState) => ({\n    ...state,\n    isDirty: true,\n    isValid: !state.searchFields.some((form) => form.invalid)\n  }));\n\n  constructor() {\n    super({\n      searchFields: [],\n      isDirty: false,\n      isCategoryVisible: true,\n      isValid: true,\n      availableFields: [],\n      searchDefinition: {} as ISearchDefinition\n    });\n  }\n}\n","import { Component, Injector, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { ActiveModalRef, DismissReasons, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { ReplaySubject } from 'rxjs';\nimport { SearchFieldEditorModalStore } from './search-field-editor-modal.store';\nimport { filter, take } from 'rxjs/operators';\nimport { RX_RECORD_DEFINITION, RxFieldDefinitionService } from '@helix/platform/record/api';\n\n@Component({\n  selector: 'rx-search-field-editor-modal',\n  templateUrl: './search-field-editor-modal.component.html',\n  styleUrls: ['./search-field-editor-modal.component.scss'],\n  providers: [SearchFieldEditorModalStore]\n})\nexport class SearchFieldEditorModalComponent extends RxModalClass implements OnInit, OnDestroy {\n  readonly vm$ = this.searchFieldsEditorModalStore.vm$;\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  private recordDefinition = this.activeModalRef.getData().recordDefinition;\n  isReadOnly = this.activeModalRef.getData().isReadOnly;\n\n  constructor(\n    private readonly searchFieldsEditorModalStore: SearchFieldEditorModalStore,\n    private activeModalRef: ActiveModalRef,\n    private formBuilder: FormBuilder,\n    protected injector: Injector,\n    private rxFieldDefinitionService: RxFieldDefinitionService\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.searchFieldsEditorModalStore.isDirty$.pipe(filter(Boolean), take(1)).subscribe(() => {\n      this.markAsDirty();\n    });\n\n    const searchFields = this.activeModalRef.getData().searchFields.map((searchField, index) =>\n      this.formBuilder.group({\n        id: searchField.id,\n        searchFieldName: [[searchField], Validators.required],\n        category: searchField.searchDefinition.searchCategoryName,\n        isOpen: searchField.id === this.activeModalRef.getData().searchFieldIndex,\n        isCategoryVisible: searchField.resourceType !== RX_RECORD_DEFINITION.resourceTypes.attachment,\n        searchDefinition: searchField.searchDefinition\n      })\n    );\n\n    const availableFields = this.recordDefinition.fields\n      .filter((fieldDefinition) => this.rxFieldDefinitionService.isSearchable(fieldDefinition, this.recordDefinition))\n      .filter((fieldDefinition) =>\n        searchFields.every((searchField) => searchField.get('id').value !== fieldDefinition.id)\n      );\n\n    this.searchFieldsEditorModalStore.patchState({ searchFields, availableFields });\n  }\n\n  optionFormatter(selectOption: RxSelectOption): string {\n    return selectOption.name;\n  }\n\n  toggleOpen(toggleValue: boolean): void {\n    this.searchFieldsEditorModalStore.toggleOpen(toggleValue);\n  }\n\n  addNewSearchField(): void {\n    this.searchFieldsEditorModalStore.updateFields(\n      this.formBuilder.group({\n        id: '',\n        searchFieldName: [[], Validators.required],\n        category: '',\n        isOpen: true,\n        isCategoryVisible: true,\n        searchDefinition: {\n          enableFTSSearch: false,\n          enableCognitiveSearch: false\n        }\n      })\n    );\n  }\n\n  onSelectedFieldChange(field: RxSelectOption): void {\n    this.searchFieldsEditorModalStore.updateAvailableFields(field[0]);\n  }\n\n  onSearchCategoryChange(): void {\n    this.searchFieldsEditorModalStore.markDirty();\n  }\n\n  onRemoveSearchField(fieldIndex: number): void {\n    this.searchFieldsEditorModalStore.removeSearchField(fieldIndex);\n  }\n\n  saveSearchFields(): void {\n    this.searchFieldsEditorModalStore.searchFields$.pipe(take(1)).subscribe((searchFields) => {\n      this.activeModalRef.close(searchFields);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <div class=\"designer-modal-body modal-body d-flex mh-100\">\n    <div class=\"row flex-grow-1 w-100\">\n      <div class=\"d-flex flex-column mh-100 col\">\n        <div class=\"d-flex align-items-start justify-content-between\">\n          <button\n            adapt-button\n            btn-type=\"tertiary\"\n            class=\"mt-2 p-0\"\n            rx-id=\"add-new-search-field-button\"\n            *ngIf=\"!isReadOnly\"\n            (click)=\"addNewSearchField()\"\n          >\n            <span class=\"d-icon-plus_circle\"></span>\n            {{ 'com.bmc.arsys.rx.client.record-designer.search-fields.add-search-field.button.label' | translate }}\n          </button>\n\n          <div *ngIf=\"vm.searchFields.length\" class=\"btn-group ml-auto\">\n            <button adapt-button btn-type=\"tertiary\" type=\"button\" rx-id=\"expand-all-button\" (click)=\"toggleOpen(true)\">\n              {{ 'com.bmc.arsys.rx.client.common.expand-all.label' | translate }}\n            </button>\n\n            <button\n              adapt-button\n              btn-type=\"tertiary\"\n              type=\"button\"\n              rx-id=\"collapse-all-button\"\n              (click)=\"toggleOpen(false)\"\n            >\n              {{ 'com.bmc.arsys.rx.client.common.collapse-all.label' | translate }}\n            </button>\n          </div>\n        </div>\n\n        <div\n          class=\"border-bottom pb-1 d-flex align-items-center\"\n          *ngIf=\"vm.searchFields.length\"\n          id=\"selected-search-field\"\n          class=\"designer-modal-accordion-wrapper\"\n        >\n          <adapt-accordion [multiselect]=\"true\">\n            <div\n              *ngFor=\"let searchField of vm.searchFields; let index = index; let first = first; let last = last\"\n              class=\"designer-modal-accordion-content\"\n            >\n              <adapt-accordion-tab\n                class=\"d-block\"\n                [formGroup]=\"searchField\"\n                [isOpen]=\"searchField.get('isOpen').value\"\n                (open)=\"searchField.get('isOpen').setValue(true)\"\n                (close)=\"searchField.get('isOpen').setValue(false)\"\n              >\n                <div class=\"card-title-text w-100\">\n                  <div class=\"designer-modal-card-title-content\">\n                    <div class=\"left-header-block pl-0\">\n                      <div rx-id=\"card-title\">\n                        {{ searchField.get('searchFieldName').value[0]?.name }}\n                      </div>\n                    </div>\n\n                    <div class=\"right-header-block\">\n                      <button\n                        class=\"d-icon-left-cross_adapt p-1 pr-4 ml-3\"\n                        adapt-button\n                        size=\"small\"\n                        type=\"button\"\n                        rx-id=\"remove-button\"\n                        *ngIf=\"!isReadOnly\"\n                        (click)=\"onRemoveSearchField(index)\"\n                      >\n                        {{ 'com.bmc.arsys.rx.client.common.remove.label' | translate }}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row form-group\">\n                  <adapt-rx-select\n                    [ngClass]=\"recordDefinition.enableCognitiveSearch ? 'd-block col-12' : 'd-block col-6'\"\n                    rx-id=\"available-fields\"\n                    label=\"{{ 'com.bmc.arsys.rx.client.record-designer.search-fields.field.label' | translate }}\"\n                    formControlName=\"searchFieldName\"\n                    [options]=\"vm.availableFields\"\n                    [optionFormatter]=\"optionFormatter\"\n                    [optionContentTemplate]=\"optionTemplate\"\n                    (ngModelChange)=\"onSelectedFieldChange($event)\"\n                    [disabled]=\"isReadOnly\"\n                  ></adapt-rx-select>\n\n                  <adapt-rx-textfield\n                    *ngIf=\"!recordDefinition.enableCognitiveSearch && searchField.get('isCategoryVisible').value\"\n                    class=\"d-block col-6\"\n                    rx-id=\"search-field-category\"\n                    label=\"{{\n                      'com.bmc.arsys.rx.client.record-designer.search-fields.search-category-name.label' | translate\n                    }}\"\n                    formControlName=\"category\"\n                    (ngModelChange)=\"onSearchCategoryChange()\"\n                    [disabled]=\"isReadOnly\"\n                  ></adapt-rx-textfield>\n                </div>\n              </adapt-accordion-tab>\n            </div>\n          </adapt-accordion>\n        </div>\n\n        <div *ngIf=\"!vm.searchFields.length\" class=\"d-flex justify-content-center h-100 align-items-center mt-2\">\n          <adapt-empty-state\n            class=\"w-100\"\n            label=\"{{ 'com.bmc.arsys.rx.client.record-designer.search-fields.empty-state.message' | translate }}\"\n            type=\"config\"\n          ></adapt-empty-state>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"modal-footer\">\n    <div *ngIf=\"!isReadOnly\">\n      <button\n        adapt-button\n        type=\"button\"\n        btn-type=\"primary\"\n        rx-id=\"save-button\"\n        (click)=\"saveSearchFields()\"\n        [disabled]=\"!vm.isValid || !vm.isDirty\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n      </button>\n      <button adapt-button type=\"button\" btn-type=\"secondary\" (click)=\"cancel()\" rx-id=\"cancel-button\">\n        {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n      </button>\n    </div>\n\n    <button type=\"button\" adapt-button btn-type=\"secondary\" rx-id=\"close-button\" (click)=\"cancel()\" *ngIf=\"isReadOnly\">\n      {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n    </button>\n  </div>\n</ng-container>\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IFieldDefinition, RX_RECORD_DEFINITION } from '@helix/platform/record/api';\nimport { ISearchFieldEditorControlOptions } from './search-field.types';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { BehaviorSubject } from 'rxjs';\nimport { shareReplay, take } from 'rxjs/operators';\nimport { SearchFieldEditorModalComponent } from './search-field-editor-modal.component';\nimport { IFormControlComponent, OverlayType, RX_OVERLAY } from '@helix/platform/shared/api';\nimport { IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { noop } from 'lodash';\n\n@Component({\n  selector: 'rx-search-field-editor-control-control',\n  templateUrl: './search-field-editor-control.component.html',\n  styleUrls: ['./search-field-editor-control.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: SearchFieldEditorControlComponent,\n      multi: true\n    }\n  ]\n})\nexport class SearchFieldEditorControlComponent\n  extends ValueAccessor<IRecordFieldDefinitionModel[]>\n  implements IFormControlComponent, OnChanges, OnInit, OnDestroy\n{\n  @Input()\n  options: ISearchFieldEditorControlOptions;\n\n  private searchFieldsSubject = new BehaviorSubject<IRecordFieldDefinitionModel[]>([]);\n\n  searchFields$ = this.searchFieldsSubject.asObservable().pipe(shareReplay(1));\n\n  constructor(private rxModalService: RxModalService, private translateService: TranslateService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.options) {\n      this.updateValues();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options) {\n      this.updateValues();\n    }\n  }\n\n  ngOnDestroy() {\n    this.searchFieldsSubject.complete();\n  }\n\n  updateValues(): void {\n    const searchFields = this.options.recordDefinitionModel.fields.filter(\n      (fieldDefinition: IRecordFieldDefinitionModel) =>\n        (fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.character ||\n          fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.attachment) &&\n        Boolean(fieldDefinition.searchDefinition) &&\n        (fieldDefinition.searchDefinition?.enableFTSSearch || fieldDefinition.searchDefinition?.enableCognitiveSearch)\n    ) as IRecordFieldDefinitionModel[];\n\n    this.searchFieldsSubject.next(searchFields);\n  }\n\n  openEditor(searchFieldIndex: string): void {\n    this.searchFields$.pipe(take(1)).subscribe((searchFields) => {\n      this.rxModalService\n        .openModal({\n          content: SearchFieldEditorModalComponent,\n          title: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.search-fields.search-field-editor.title'\n          ),\n          data: {\n            searchFields: searchFields,\n            fieldDefinitions: this.options.recordDefinitionModel.fields,\n            recordDefinition: this.options.recordDefinitionModel,\n            searchFieldIndex,\n            isReadOnly: this.options.isReadOnly\n          }\n        })\n        .then((updatedSearchFields) => {\n          const searchFieldDefinitions = updatedSearchFields.map((searchField) => {\n            const field = this.options.recordDefinitionModel.fields.find(\n              (fieldDefinition) => searchField.get('searchFieldName')?.value[0].id === fieldDefinition.id\n            );\n\n            if (field) {\n              return {\n                ...field,\n                searchDefinition: {\n                  ...field.searchDefinition,\n                  enableCognitiveSearch: Boolean(this.options.recordDefinitionModel.enableCognitiveSearch),\n                  enableFTSSearch:\n                    field.searchDefinition?.enableFTSSearch ||\n                    !Boolean(this.options.recordDefinitionModel.enableCognitiveSearch),\n                  stripTagsForSearch: false,\n                  enableLiteralSearch: false,\n                  searchCategoryName: searchField.get('category').value\n                },\n                overlayDescriptor: {\n                  ...field.overlayDescriptor,\n                  otherPropertiesOverlayType: RX_OVERLAY.overlayTypes.overwrite as OverlayType\n                }\n              };\n            }\n          });\n\n          this.value = searchFieldDefinitions;\n          this.searchFieldsSubject.next(searchFieldDefinitions);\n        })\n        .catch(noop);\n    });\n  }\n\n  removeSearchField(searchField: IRecordFieldDefinitionModel): void {\n    this.searchFields$.pipe(take(1)).subscribe((searchFields) => {\n      this.rxModalService\n        .confirm({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n          modalStyle: RX_MODAL.modalStyles.warning,\n          message: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.search-fields.delete-confirmation.message',\n            { name: searchField.name }\n          )\n        })\n        .then((isDeleteConfirmed: boolean) => {\n          if (isDeleteConfirmed) {\n            const searchFieldsList: IRecordFieldDefinitionModel[] = searchFields.filter(\n              (fieldDefinition: IRecordFieldDefinitionModel) => fieldDefinition.name !== searchField.name\n            );\n\n            this.value = searchFieldsList;\n            this.searchFieldsSubject.next(searchFieldsList);\n          }\n        });\n    });\n  }\n}\n","<adapt-button\n  type=\"button\"\n  class=\"p-0 pb-1\"\n  btn-type=\"tertiary\"\n  rx-id=\"add-search-field-button\"\n  *ngIf=\"!isDisabled\"\n  (click)=\"openEditor()\"\n>\n  <span class=\"d-icon-left-plus_circle\"> </span>\n  {{ 'com.bmc.arsys.rx.client.record-designer.search-fields.search-field-editor.title' | translate }}\n</adapt-button>\n\n<div *ngIf=\"searchFields$ | async as searchFields\">\n  <div class=\"rx-search-field\" *ngFor=\"let searchField of searchFields\">\n    <div class=\"rx-selected-column__header-container\">\n      <span rx-id=\"card-title\" class=\"rx-search-field__header-title\">{{ searchField.name }}</span>\n\n      <button\n        type=\"button\"\n        (click)=\"removeSearchField(searchField)\"\n        class=\"rx-button-unstyled d-icon-cross btn-link float-right\"\n        *ngIf=\"!options.isReadOnly\"\n        rx-id=\"remove-search-field\"\n      ></button>\n\n      <button\n        type=\"button\"\n        class=\"rx-button-unstyled d-icon-left-pencil btn-link float-right\"\n        rx-id=\"edit-button\"\n        (click)=\"openEditor(searchField.id)\"\n      ></button>\n    </div>\n\n    <div class=\"rx-search-field-type\" rx-id=\"search-field-type\">\n      <span>\n        {{\n          (searchField.searchDefinition.enableFTSSearch\n            ? 'com.bmc.arsys.rx.client.record-designer.search-fields.full-text-search.label'\n            : 'com.bmc.arsys.rx.client.record-designer.search-fields.cognitive-search.label'\n          ) | translate\n        }}\n      </span>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RxModalModule } from '@helix/platform/ui-kit';\nimport {\n  AdaptAccordionModule,\n  AdaptButtonModule,\n  AdaptEmptyStateModule,\n  AdaptRxFormControlModule,\n  AdaptRxSelectModule,\n  AdaptRxTextfieldModule,\n  AdaptTooltipModule\n} from '@bmc-ux/adapt-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SearchFieldEditorControlComponent } from './search-field-editor-control.component';\nimport { SearchFieldEditorModalComponent } from './search-field-editor-modal.component';\n\n@NgModule({\n  declarations: [SearchFieldEditorControlComponent, SearchFieldEditorModalComponent],\n  exports: [SearchFieldEditorControlComponent, SearchFieldEditorModalComponent],\n  entryComponents: [SearchFieldEditorControlComponent, SearchFieldEditorModalComponent],\n  imports: [\n    CommonModule,\n    AdaptTooltipModule,\n    AdaptRxSelectModule,\n    AdaptButtonModule,\n    AdaptRxFormControlModule,\n    AdaptRxTextfieldModule,\n    AdaptAccordionModule,\n    RxModalModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    AdaptEmptyStateModule\n  ]\n})\nexport class SearchFieldEditorModule {}\n","import { createAction, props } from '@ngrx/store';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { IInitRecordDesignerActionPayload } from './record-designer.types';\nimport { IRecordDefinition } from '@helix/platform/record/api';\n\nexport const init = createAction('[Record Designer] Init', props<{ payload: IInitRecordDesignerActionPayload }>());\n\nexport const loadDefinition = createAction('[Record Designer] Load Definition');\n\nexport const clearSearchFields = createAction('[Record Designer] Clear Search Fields');\n\nexport const loadDefinitionSuccess = createAction(\n  '[Record Designer] Load Definition Success',\n  props<{ definition: IRecordDefinition }>()\n);\n\nexport const initDefinitionModel = createAction(\n  '[Record Designer] Init Definition Model',\n  props<{ definitionModelFromDefinition: IRecordDefinitionModel }>()\n);\n\nexport const markDesignerPristine = createAction('[Record Designer] Mark Designer Pristine');\n\nexport const markDesignerDirty = createAction('[Record Designer] Mark Designer Dirty');\n\nexport const toggleDesignMode = createAction('[Record Designer] Toggle Design Mode');\n\nexport const updateDefinitionModelFromDesigner = createAction(\n  '[Record Designer] Update Definition Model From Designer',\n  props<{ definitionModelFromDesigner: IRecordDefinitionModel }>()\n);\n\nexport const updateSelectedFieldModel = createAction(\n  '[Record Designer] Update Selected Field Model',\n  props<{ selectedFieldModel: IRecordFieldDefinitionModel }>()\n);\n\nexport const setInspectorTabIndex = createAction(\n  '[Record Designer] Set Inspector Tab Index',\n  props<{ inspectorTabIndex: number }>()\n);\n\nexport const createNewFieldModel = createAction(\n  '[Record Designer] Create New Field Model',\n  props<{ resourceType: string }>()\n);\n\nexport const addFieldModel = createAction(\n  '[Record Designer] Add Field Model',\n  props<{ newFieldModel: IRecordFieldDefinitionModel }>()\n);\n\nexport const addNewFieldModels = createAction(\n  '[Record Designer] Add New Field Models',\n  props<{ newFieldModels: IRecordFieldDefinitionModel[] }>()\n);\n\nexport const setSelectedFieldGuid = createAction(\n  '[Record Designer] Set Selected Field GUID',\n  props<{ guid: string }>()\n);\n\nexport const clearSelectedFieldGuid = createAction('[Record Designer] Clear Selected Field GUID');\n\nexport const deleteSelectedField = createAction('[Record Designer] Delete Selected Field');\n\nexport const copySelectedField = createAction('[Record Designer] Copy Selected Field');\n\nexport const checkIfFieldUsedByIndexes = createAction('[Record Designer] Check If Field Used By Indexes');\n\nexport const deleteSelectedFieldSuccess = createAction('[Record Designer] Delete Selected Field Success');\n\nexport const deleteSelectedFieldError = createAction('[Record Designer] Delete Selected Field Error');\n\nexport const saveDefinition = createAction('[Record Designer] Save Definition');\n\nexport const saveDefinitionSuccess = createAction(\n  '[Record Designer] Save Definition Success',\n  props<{ savedDefinitionName: string }>()\n);\n\nexport const destroy = createAction('[Record Designer] Destroy');\n","import { ArchiveType } from '@helix/platform/record/api';\n\nexport const RX_RECORD_DESIGNER = {\n  featureSelector: 'recordDesigner',\n  joinCriteriaPath: 'joinCriteria',\n  archiveDataCriteriaPath: 'archiveDataCriteria',\n  archiving: {\n    types: {\n      doNotArchive: {\n        nameKey: 'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.types.do-not-archive.label',\n        id: ArchiveType.None\n      },\n      archiveAndDeleteSourceRecord: {\n        nameKey:\n          'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.types.archive-and-delete-source-record.label',\n        id: ArchiveType.CopyToArchiveAndDeleteFromSource\n      },\n      deleteSourceRecord: {\n        nameKey:\n          'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.types.delete-source-record.label',\n        id: ArchiveType.DeleteFromSource\n      }\n    }\n  }\n};\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { IRecordDesignerModel, IRecordDesignerState } from './record-designer.types';\nimport { RX_RECORD_DESIGNER } from '../record-designer.constant';\n\nexport const recordDesignerStateSelector = createFeatureSelector<IRecordDesignerState>(\n  RX_RECORD_DESIGNER.featureSelector\n);\n\nexport const recordDesignerModelSelector = createSelector(\n  recordDesignerStateSelector,\n  (recordDesignerState: IRecordDesignerState) => recordDesignerState.model\n);\n\nexport const definitionNameSelector = createSelector(\n  recordDesignerModelSelector,\n  (recordDesignerModel: IRecordDesignerModel) => recordDesignerModel.definitionName\n);\n\nexport const bundleIdSelector = createSelector(\n  recordDesignerModelSelector,\n  (recordDesignerModel: IRecordDesignerModel) => recordDesignerModel.bundleId\n);\n\nexport const isDesignModeSelector = createSelector(\n  recordDesignerModelSelector,\n  (recordDesignerModel: IRecordDesignerModel) => recordDesignerModel.isDesignMode\n);\n\nexport const isDirtySelector = createSelector(\n  recordDesignerModelSelector,\n  (recordDesignerModel: IRecordDesignerModel) => recordDesignerModel.isDirty\n);\n\nexport const inspectorTabIndexSelector = createSelector(\n  recordDesignerModelSelector,\n  (recordDesignerModel: IRecordDesignerModel) => recordDesignerModel.inspectorTabIndex\n);\n\nexport const definitionModelSelector = createSelector(\n  recordDesignerModelSelector,\n  (recordDesignerModel: IRecordDesignerModel) => recordDesignerModel.definitionModel\n);\n\nexport const definitionModelFromDefinitionSelector = createSelector(\n  recordDesignerModelSelector,\n  (recordDesignerModel: IRecordDesignerModel) => recordDesignerModel.definitionModelFromDefinition\n);\n\nexport const selectedFieldGuidSelector = createSelector(\n  recordDesignerModelSelector,\n  (recordDesignerModel: IRecordDesignerModel) => recordDesignerModel.selectedFieldGuid\n);\n\nexport const savedDefinitionNameSelector = createSelector(\n  recordDesignerModelSelector,\n  (recordDesignerModel: IRecordDesignerModel) => recordDesignerModel.savedDefinitionName\n);\n","import { Injectable } from '@angular/core';\nimport { RX_RECORD_DEFINITION, RxFieldDefinitionService } from '@helix/platform/record/api';\nimport { IValidationIssue, IValidationIssueSection, ValidationIssueType } from '@helix/platform/ui-kit';\nimport { chain, find, forEach, includes, isEmpty, reverse, some, trim } from 'lodash';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../record-designer.types';\nimport { RX_RECORD_DESIGNER } from '../record-designer/record-designer.constant';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RxFieldDefinitionManagerService } from './services/field-definition-manager.service';\nimport { RxDefinitionNameService } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRecordDefinitionValidatorService {\n  constructor(\n    private rxFieldDefinitionService: RxFieldDefinitionService,\n    private translateService: TranslateService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxFieldDefinitionManagerService: RxFieldDefinitionManagerService\n  ) {}\n\n  validate(definitionModel: IRecordDefinitionModel): IValidationIssueSection[] {\n    const duplicateFieldErrorMsg = this.translateService.instant(\n      'com.bmc.arsys.rx.client.designer.validation.must-be-unique.message',\n      { propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label') }\n    );\n\n    const definitionValidationIssues: IValidationIssue[] = [];\n    const fieldValidationIssueSections: IValidationIssueSection[] = [];\n\n    chain(definitionModel.fields)\n      .clone()\n      .reverse()\n      .forEach((fieldModel: IRecordFieldDefinitionModel, index: number, fieldModels: IRecordFieldDefinitionModel[]) => {\n        let issues: IValidationIssue[] = [];\n\n        if (find(fieldModels, (model) => fieldModel.name === model.name, index + 1)) {\n          issues.push({\n            type: ValidationIssueType.Error,\n            description: duplicateFieldErrorMsg,\n            data: {\n              propertyName: 'name',\n              guid: fieldModel.guid\n            }\n          });\n        }\n\n        if (fieldModel.id && find(fieldModels, (model) => fieldModel.id === model.id, index + 1)) {\n          issues.push({\n            type: ValidationIssueType.Error,\n            description: this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.validation.duplicate-field-id-error.message'\n            ),\n            data: {\n              propertyName: 'id',\n              guid: fieldModel.guid\n            }\n          });\n        }\n\n        if (\n          definitionModel.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType &&\n          !fieldModel.lastUpdateTime &&\n          !includes(RX_RECORD_DEFINITION.coreFieldIds, fieldModel.id) &&\n          includes(RX_RECORD_DEFINITION.AR_CORE_FIELD_IDS, fieldModel.id)\n        ) {\n          issues.push({\n            type: ValidationIssueType.Error,\n            description: this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.validation.invalid-field-id.message',\n              { fieldId: fieldModel.id }\n            ),\n            data: {\n              editFieldGroups: true,\n              guid: fieldModel.guid\n            }\n          });\n        }\n\n        issues = issues.concat(this.rxFieldDefinitionManagerService.validate(fieldModel, definitionModel));\n\n        if (issues.length) {\n          fieldValidationIssueSections.push({\n            title: fieldModel.name,\n            issues: issues\n          });\n        }\n      })\n      .value();\n\n    if (isEmpty(trim(definitionModel.name))) {\n      definitionValidationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n          {\n            propertyName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.definition-properties.record-name.label'\n            )\n          }\n        ),\n        data: {\n          propertyName: 'name'\n        }\n      });\n    }\n\n    if (!RX_RECORD_DEFINITION.validDefinitionNameRegex.test(definitionModel.name)) {\n      definitionValidationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message',\n          { propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.record-definition.label') }\n        ),\n        data: {\n          propertyName: 'name'\n        }\n      });\n    }\n\n    if (definitionModel?.isAuditingEnabled) {\n      const auditRecordDefinitionName = this.rxDefinitionNameService.getDisplayName(\n        definitionModel.auditRecordDefinitionName\n      );\n\n      if (isEmpty(trim(auditRecordDefinitionName))) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.validation.invalid-audit-definition-name.message'\n          ),\n          data: {\n            propertyName: 'auditRecordDefinitionName'\n          }\n        });\n      }\n\n      if (!RX_RECORD_DEFINITION.validDefinitionNameRegex.test(auditRecordDefinitionName)) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message',\n            {\n              propertyName: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.definition-properties.audit-record-definition-name.label'\n              )\n            }\n          ),\n          data: {\n            propertyName: 'auditRecordDefinitionName'\n          }\n        });\n      }\n    }\n\n    if (\n      definitionModel.isArchivingEnabled &&\n      definitionModel.archiveType === RX_RECORD_DESIGNER.archiving.types.archiveAndDeleteSourceRecord.id\n    ) {\n      const archiveRecordDefinitionName = this.rxDefinitionNameService.getDisplayName(\n        definitionModel.archiveRecordDefinitionName\n      );\n\n      if (isEmpty(trim(archiveRecordDefinitionName))) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.validation.invalid-archive-definition-name.message'\n          ),\n          data: {\n            propertyName: 'archiveRecordDefinitionName'\n          }\n        });\n      }\n\n      if (!RX_RECORD_DEFINITION.validDefinitionNameRegex.test(archiveRecordDefinitionName)) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message',\n            {\n              propertyName: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.definition-properties.archive-record-definition-name.label'\n              )\n            }\n          ),\n          data: {\n            propertyName: 'archiveRecordDefinitionName'\n          }\n        });\n      }\n    }\n\n    if (definitionModel.weightedRelevancyFields) {\n      const searchTitleField = find(definitionModel.fields, { id: definitionModel.weightedRelevancyFields?.TITLE });\n\n      if (searchTitleField && !searchTitleField.searchDefinition) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.validation.invalid-text-search-enabled-field.message'\n          ),\n          data: {\n            propertyName: 'searchTitleField'\n          }\n        });\n      }\n    }\n\n    forEach(definitionModel.indexDefinitions, (indexDefinitionModel, index) => {\n      if (!indexDefinitionModel.indexFieldIds.length) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.indexes.no-field-selected.message',\n            {\n              indexName:\n                indexDefinitionModel.indexName ||\n                this.translateService.instant('com.bmc.arsys.rx.client.record-designer.indexes.new-index.label')\n            }\n          ),\n          data: {\n            indexToEditIndex: index,\n            propertyName: 'indexDefinitions'\n          }\n        });\n      }\n    });\n\n    let issues: IValidationIssueSection[] = [];\n\n    if (definitionValidationIssues.length) {\n      issues.push({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.record-definition.label'),\n        issues: definitionValidationIssues\n      });\n    }\n\n    issues = issues.concat(reverse(fieldValidationIssueSections));\n\n    return issues;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Injector, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { ActiveModalRef, DismissReasons } from '@bmc-ux/adapt-angular';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { IAssociationDefinition, RX_ASSOCIATION_DEFINITION } from '@helix/platform/association/api';\nimport { ColumnConfig } from '@bmc-ux/adapt-table';\nimport { IArchiveAssociationGridRow } from './archive-associations-control.types';\nimport { AssociationSelectionType, IAssociationsToFollowForArchive } from '@helix/platform/record/api';\nimport { includes, map } from 'lodash';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'rx-archive-associations-editor',\n  templateUrl: './archive-association-selector.component.html',\n  styleUrls: ['./archive-association-selector.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ArchiveAssociationSelectorComponent extends RxModalClass implements OnInit {\n  @ViewChild('nameCellTemplate', { static: true })\n  nameCellTemplate: TemplateRef<any>;\n\n  @ViewChild('enforceCellTemplate', { static: true })\n  enforceCellTemplate: TemplateRef<any>;\n\n  isOverlayMode = this.activeModalRef.getData().isOverlayMode;\n  isReadOnly = this.activeModalRef.getData().isReadOnly;\n\n  actualAssociationsToFollow: IAssociationsToFollowForArchive =\n    this.activeModalRef.getData().actualAssociationsToFollow;\n\n  private selectedAssociationsToFollow: IAssociationsToFollowForArchive =\n    this.activeModalRef.getData().selectedAssociationsToFollow;\n\n  associationType: AssociationSelectionType = this.selectedAssociationsToFollow.selectionType;\n\n  associationTypes = {\n    followParent: AssociationSelectionType.FollowParent,\n    selected: AssociationSelectionType.Selected,\n    allEnforced: AssociationSelectionType.AllEnforced,\n    all: AssociationSelectionType.All\n  };\n\n  columns: ColumnConfig[] = [];\n\n  associationGridRows: IArchiveAssociationGridRow[] = this.activeModalRef.getData().associationDefinitions.map(\n    (association: IAssociationDefinition) =>\n      ({\n        name: association.name,\n        firstRecord: association.nodeAId,\n        secondRecord: association.nodeBId,\n        enforced: association.nodeAModality === RX_ASSOCIATION_DEFINITION.modality.required,\n        isSelectionDisabled: this.isReadOnly,\n        isAssociationSelectedInBase:\n          this.isOverlayMode && this.actualAssociationsToFollow.specificAssociationNames.includes(association.name)\n      } as IArchiveAssociationGridRow)\n  );\n\n  selectedAssociationGridRows: IArchiveAssociationGridRow[] = [];\n\n  constructor(\n    private activeModalRef: ActiveModalRef,\n    private translateService: TranslateService,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.columns = [\n      {\n        field: 'name',\n        header: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n        cellTemplate: this.nameCellTemplate\n      },\n      {\n        field: 'firstRecord',\n        header: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.association-first-record.label'\n        ),\n        cellTemplate: this.nameCellTemplate\n      },\n      {\n        field: 'secondRecord',\n        header: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.association-second-record.label'\n        ),\n        cellTemplate: this.nameCellTemplate\n      },\n      {\n        field: 'enforced',\n        header: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.enforced-association.label'\n        ),\n        cellTemplate: this.enforceCellTemplate\n      }\n    ];\n\n    this.selectAssociations();\n\n    this.selectedAssociationGridRows = this.selectedAssociationGridRows.concat(\n      this.associationGridRows.filter((associationGridRow) =>\n        includes(this.selectedAssociationsToFollow.specificAssociationNames, associationGridRow.name)\n      )\n    );\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  onSelectionChange(selectedRows: IArchiveAssociationGridRow[]): void {\n    this.markAsDirty();\n    this.selectedAssociationGridRows = selectedRows;\n  }\n\n  disabledRowSelectionResolver(rowData: IArchiveAssociationGridRow): boolean {\n    return rowData.isSelectionDisabled || rowData.isAssociationSelectedInBase;\n  }\n\n  selectAssociations(): void {\n    this.selectedAssociationGridRows = [];\n\n    if (this.associationType === AssociationSelectionType.Selected) {\n      this.enableRowSelection();\n    } else if (this.associationType === AssociationSelectionType.All) {\n      this.selectedAssociationGridRows = [...this.associationGridRows];\n      this.disableRowSelection();\n    } else if (this.associationType === AssociationSelectionType.AllEnforced) {\n      this.selectedAssociationGridRows = this.associationGridRows.filter((row) => row.enforced);\n\n      this.disableRowSelectionForEnforcedAssociations();\n    } else if (this.associationType === AssociationSelectionType.FollowParent) {\n      this.disableRowSelection();\n    }\n\n    if (\n      this.isOverlayMode &&\n      (this.actualAssociationsToFollow.selectionType === AssociationSelectionType.AllEnforced ||\n        this.actualAssociationsToFollow.selectionType === AssociationSelectionType.Selected)\n    ) {\n      this.selectAssociationsFromBase();\n    }\n  }\n\n  private selectAssociationsFromBase(): void {\n    this.selectedAssociationGridRows = this.selectedAssociationGridRows.concat(\n      this.associationGridRows.filter((associationGridRow) =>\n        includes(this.actualAssociationsToFollow.specificAssociationNames, associationGridRow.name)\n      )\n    );\n  }\n\n  private disableRowSelectionForEnforcedAssociations(): void {\n    this.associationGridRows.forEach((row) => {\n      row.isSelectionDisabled = this.isReadOnly || row.enforced;\n    });\n  }\n\n  private disableRowSelection(): void {\n    this.associationGridRows.forEach((row) => {\n      row.isSelectionDisabled = true;\n    });\n  }\n\n  private enableRowSelection(): void {\n    this.associationGridRows.forEach((row) => {\n      row.isSelectionDisabled = this.isReadOnly;\n    });\n  }\n\n  save(): void {\n    let selectedAssociationNames = [];\n\n    if (this.associationType === AssociationSelectionType.Selected) {\n      selectedAssociationNames = map(this.selectedAssociationGridRows, 'name');\n    } else if (this.associationType === AssociationSelectionType.AllEnforced) {\n      selectedAssociationNames = this.selectedAssociationGridRows\n        .filter((associationGridRow) => !associationGridRow.enforced)\n        .map((associationGridRow) => associationGridRow.name);\n    }\n\n    this.activeModalRef.close({\n      specificAssociationNames: selectedAssociationNames,\n      selectionType: this.associationType\n    } as IAssociationsToFollowForArchive);\n  }\n}\n","<div class=\"modal-body designer-modal-body d-flex mh-100 flex-column\">\n  <span>\n    {{\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.select-associations-to-follow.message'\n        | translate\n    }}\n  </span>\n\n  <adapt-rx-radiobutton-group [(ngModel)]=\"associationType\" (ngModelChange)=\"markAsDirty(); selectAssociations()\">\n    <adapt-rx-radiobutton\n      class=\"radio-inline\"\n      label=\"{{\n        'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.selected-associations.label'\n          | translate\n      }}\"\n      [value]=\"associationTypes.selected\"\n      [disabled]=\"\n        isReadOnly ||\n        (isOverlayMode &&\n          (actualAssociationsToFollow.selectionType === associationTypes.all ||\n            actualAssociationsToFollow.selectionType === associationTypes.allEnforced ||\n            actualAssociationsToFollow.selectionType === associationTypes.followParent))\n      \"\n      rx-id=\"selected-associations\"\n    ></adapt-rx-radiobutton>\n\n    <adapt-rx-radiobutton\n      class=\"radio-inline\"\n      label=\"{{ 'com.bmc.arsys.rx.client.common.all.label' | translate }}\"\n      [value]=\"associationTypes.all\"\n      [disabled]=\"\n        isReadOnly ||\n        (isOverlayMode &&\n          (actualAssociationsToFollow.selectionType === associationTypes.all ||\n            actualAssociationsToFollow.selectionType === associationTypes.followParent))\n      \"\n      rx-id=\"all-associations\"\n    ></adapt-rx-radiobutton>\n\n    <adapt-rx-radiobutton\n      class=\"radio-inline\"\n      label=\"{{\n        'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.all-enforced-associations.label'\n          | translate\n      }}\"\n      [value]=\"associationTypes.allEnforced\"\n      [disabled]=\"\n        isReadOnly ||\n        (isOverlayMode &&\n          (actualAssociationsToFollow.selectionType === associationTypes.all ||\n            actualAssociationsToFollow.selectionType === associationTypes.followParent))\n      \"\n      rx-id=\"all-enforced-associations\"\n    ></adapt-rx-radiobutton>\n\n    <adapt-rx-radiobutton\n      class=\"radio-inline\"\n      label=\"{{\n        'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.follow-parent-associations.label'\n          | translate\n      }}\"\n      [value]=\"associationTypes.followParent\"\n      [disabled]=\"\n        isReadOnly ||\n        (isOverlayMode &&\n          (actualAssociationsToFollow.selectionType === associationTypes.selected ||\n            actualAssociationsToFollow.selectionType === associationTypes.all ||\n            actualAssociationsToFollow.selectionType === associationTypes.allEnforced ||\n            actualAssociationsToFollow.selectionType === associationTypes.followParent))\n      \"\n      rx-id=\"follow-parent-association\"\n    ></adapt-rx-radiobutton>\n  </adapt-rx-radiobutton-group>\n\n  <adapt-table\n    [value]=\"associationGridRows\"\n    [selection]=\"selectedAssociationGridRows\"\n    [columns]=\"columns\"\n    [scrollable]=\"true\"\n    scrollHeight=\"flex\"\n    [sortable]=\"true\"\n    [resizableColumns]=\"false\"\n    [bordered]=\"true\"\n    [filterable]=\"false\"\n    [dataKey]=\"'name'\"\n    [disableRowSelection]=\"false\"\n    [selectionMode]=\"'multiple'\"\n    (selectionChange)=\"onSelectionChange($event)\"\n    [disabledRowSelectionResolver]=\"disabledRowSelectionResolver\"\n  >\n  </adapt-table>\n</div>\n\n<div class=\"modal-footer\">\n  <button type=\"button\" adapt-button btn-type=\"primary\" (click)=\"save()\" rx-id=\"save-button\" [disabled]=\"!isDirty()\">\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n  </button>\n\n  <button type=\"button\" adapt-button btn-type=\"secondary\" (click)=\"cancel()\" rx-id=\"cancel-button\">\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n  </button>\n</div>\n\n<ng-template #nameCellTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n  {{ dataItem[column.field] | rxDefinitionNamePipe }}\n</ng-template>\n\n<ng-template #enforceCellTemplate let-dataItem=\"dataItem\" let-column=\"column\">\n  <span *ngIf=\"dataItem[column.field]\">{{ 'com.bmc.arsys.rx.client.common.yes.label' | translate }}</span>\n  <span *ngIf=\"!dataItem[column.field]\">{{ 'com.bmc.arsys.rx.client.common.no.label' | translate }}</span>\n</ng-template>\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { ActiveModalRef, DismissReasons } from '@bmc-ux/adapt-angular';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { IMissingArchiveAssociation } from './archive-associations-control.types';\n\n@Component({\n  selector: 'rx-missing-archive-definitions-modal-selector',\n  templateUrl: './missing-archive-definitions-modal.component.html'\n})\nexport class MissingArchiveDefinitionsModalComponent extends RxModalClass implements OnInit {\n  missingAssociations: IMissingArchiveAssociation[] = this.activeModalRef.getData().missingAssociations;\n\n  constructor(private activeModalRef: ActiveModalRef, protected injector: Injector) {\n    super(activeModalRef, injector);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  close(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\n","<div class=\"modal-body pt-0\">\n  <div class=\"row\">\n    <div class=\"col-sm\">\n      <h6 class=\"font-weight-bold\">\n        {{\n          'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.association-name.label' | translate\n        }}\n      </h6>\n    </div>\n    <div class=\"col-sm\">\n      <h6 class=\"font-weight-bold\">\n        {{ 'com.bmc.arsys.rx.client.common.record-definition-name.label' | translate }}\n      </h6>\n    </div>\n  </div>\n\n  <div class=\"row mb-2\" *ngFor=\"let association of missingAssociations\">\n    <div class=\"col-sm\">{{ association.name | rxDefinitionNamePipe }}</div>\n    <div class=\"col-sm\">\n      <a target=\"_blank\" class=\"d-icon-left-pop_up\" [href]=\"association.url\">\n        {{ association.secondRecord | rxDefinitionNamePipe }}\n      </a>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal-footer\">\n  <button type=\"button\" adapt-button btn-type=\"secondary\" (click)=\"close()\" rx-id=\"close-button\">\n    {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n  </button>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { RxModalService } from '@helix/platform/ui-kit';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { filter as _filter, includes, noop, reject, some } from 'lodash';\nimport { ArchiveAssociationSelectorComponent } from './archive-association-selector.component';\nimport {\n  AssociationSelectionType,\n  IAssociationsToFollowForArchive,\n  IRecordAssociationDefinitionData,\n  RxRecordDefinitionCacheService\n} from '@helix/platform/record/api';\nimport { IArchiveAssociationControlOptions, IMissingArchiveAssociation } from './archive-associations-control.types';\nimport { IAssociationDefinition, RX_ASSOCIATION_DEFINITION } from '@helix/platform/association/api';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable, of } from 'rxjs';\nimport { defaultIfEmpty, filter, map, shareReplay, switchMap, take } from 'rxjs/operators';\nimport { RX_APPLICATION, RxNotificationService } from '@helix/platform/shared/api';\nimport { MissingArchiveDefinitionsModalComponent } from './missing-archive-definitions-modal.component';\n\n@Component({\n  selector: 'rx-archive-associations',\n  templateUrl: './archive-associations-control.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: ArchiveAssociationsControlComponent,\n      multi: true\n    }\n  ]\n})\nexport class ArchiveAssociationsControlComponent\n  extends ValueAccessor<IAssociationsToFollowForArchive>\n  implements OnChanges, OnInit\n{\n  @Input()\n  options: IArchiveAssociationControlOptions;\n\n  private associationLabels = {\n    [AssociationSelectionType.Selected]: this.translateService.instant(\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.selected-associations.label'\n    ),\n    [AssociationSelectionType.All]: this.translateService.instant('com.bmc.arsys.rx.client.common.all.label'),\n    [AssociationSelectionType.AllEnforced]: this.translateService.instant(\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.all-enforced-associations.label'\n    ),\n    [AssociationSelectionType.FollowParent]: this.translateService.instant(\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.follow-parent-associations.label'\n    )\n  };\n\n  private recordDefinitionNameSubject = new BehaviorSubject<string>(null);\n\n  private associationToFollowSubject = new BehaviorSubject<IAssociationsToFollowForArchive>({\n    specificAssociationNames: [],\n    selectionType: AssociationSelectionType.FollowParent\n  });\n\n  private associationDefinitions$: Observable<IAssociationDefinition[]> = this.recordDefinitionNameSubject.pipe(\n    switchMap((recordDefinitionName: string) =>\n      recordDefinitionName\n        ? this.rxRecordDefinitionCacheService.getRecordAssociationDefinitions(recordDefinitionName).pipe(\n            map(\n              (recordAssociationDefinitions: IRecordAssociationDefinitionData) =>\n                reject(recordAssociationDefinitions[recordDefinitionName] as IAssociationDefinition[], {\n                  cardinality: RX_ASSOCIATION_DEFINITION.cardinality.manyToMany\n                }).filter(\n                  (association: IAssociationDefinition) => association.nodeAId === recordDefinitionName\n                ) as IAssociationDefinition[]\n            )\n          )\n        : of([])\n    ),\n    shareReplay(1)\n  );\n\n  private validAssociations$: Observable<IAssociationDefinition[]> = this.associationDefinitions$.pipe(\n    map((associationDefinitions) => {\n      const selectedAssociationType = this.value.selectionType;\n\n      const selectedAssociations = associationDefinitions.filter((association) =>\n        includes(this.value.specificAssociationNames, association.name)\n      );\n\n      let validAssociations = [];\n\n      if (selectedAssociationType === AssociationSelectionType.Selected) {\n        validAssociations = selectedAssociations;\n      } else if (selectedAssociationType === AssociationSelectionType.All) {\n        validAssociations = associationDefinitions;\n      } else if (selectedAssociationType === AssociationSelectionType.AllEnforced) {\n        validAssociations = associationDefinitions\n          .filter((association) => association.nodeAModality === RX_ASSOCIATION_DEFINITION.modality.required)\n          .concat(selectedAssociations);\n      }\n\n      return validAssociations;\n    })\n  );\n\n  private missingAssociations$: Observable<IMissingArchiveAssociation[]> = this.validAssociations$.pipe(\n    switchMap((associations: IAssociationDefinition[]) =>\n      forkJoin(\n        associations.map((association) =>\n          this.rxRecordDefinitionCacheService.getRecordDefinition(association.nodeBId).pipe(\n            filter((definition) => !definition.archiveDescriptor?.isEnabled),\n            map(() => ({\n              name: association.name,\n              secondRecord: association.nodeBId,\n              url: `${window.location.origin}/helix/index.html#/${RX_APPLICATION.innovationStudioBundleId}/record/edit2/${association.nodeBId}`\n            }))\n          )\n        )\n      ).pipe(defaultIfEmpty([]))\n    )\n  );\n\n  associationLabel$: Observable<string> = combineLatest([\n    this.associationToFollowSubject,\n    this.associationDefinitions$\n  ]).pipe(\n    map(([associationToFollow, associationDefinitions]) => {\n      let selectedAssociationLabel;\n\n      if (associationToFollow.selectionType === AssociationSelectionType.AllEnforced) {\n        const selectedAssociations = _filter(associationDefinitions, (association) =>\n          includes(associationToFollow.specificAssociationNames, association.name)\n        );\n\n        if (\n          some(\n            selectedAssociations,\n            (association) => association.nodeAModality !== RX_ASSOCIATION_DEFINITION.modality.required\n          )\n        ) {\n          selectedAssociationLabel = `${this.associationLabels[AssociationSelectionType.AllEnforced]} + ${\n            this.associationLabels[AssociationSelectionType.Selected]\n          }`;\n        } else {\n          selectedAssociationLabel = this.associationLabels[AssociationSelectionType.AllEnforced];\n        }\n      } else {\n        selectedAssociationLabel = this.associationLabels[associationToFollow.selectionType];\n      }\n\n      return selectedAssociationLabel;\n    })\n  );\n\n  constructor(\n    private rxModalService: RxModalService,\n    private translateService: TranslateService,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxNotificationService: RxNotificationService\n  ) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const prevDefinitionName = changes.options.previousValue.definitionModel.lastUpdateTime\n      ? `${changes.options.previousValue.bundleId}:${changes.options.previousValue.definitionModel.name}`\n      : changes.options.previousValue.definitionModel.recordInheritanceSelector.inheritanceDescriptor?.inheritingFrom;\n\n    const currentDefinitionName = changes.options.currentValue.definitionModel.lastUpdateTime\n      ? `${changes.options.currentValue.bundleId}:${changes.options.currentValue.definitionModel.name}`\n      : changes.options.currentValue.definitionModel.recordInheritanceSelector.inheritanceDescriptor?.inheritingFrom;\n\n    if (currentDefinitionName !== prevDefinitionName) {\n      this.recordDefinitionNameSubject.next(currentDefinitionName);\n    }\n\n    if (!currentDefinitionName) {\n      this.value = {\n        specificAssociationNames: [],\n        selectionType: AssociationSelectionType.FollowParent\n      };\n\n      this.associationToFollowSubject.next(this.value);\n    }\n  }\n\n  ngOnInit(): void {\n    const definitionName = this.options.definitionModel.lastUpdateTime\n      ? `${this.options.bundleId}:${this.options.definitionModel.name}`\n      : this.options.definitionModel.recordInheritanceSelector.inheritanceDescriptor?.inheritingFrom;\n\n    this.recordDefinitionNameSubject.next(definitionName);\n    this.associationToFollowSubject.next(this.value);\n  }\n\n  openAssociationSelector(): void {\n    this.associationDefinitions$.pipe(take(1)).subscribe((associationDefinitions) => {\n      this.rxModalService\n        .openModal({\n          title: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.associations-to-follow.label'\n          ),\n          data: {\n            associationDefinitions,\n            selectedAssociationsToFollow: this.value,\n            actualAssociationsToFollow: this.options.definitionModelFromDefinition.associationsToFollowForArchive,\n            isOverlayMode: this.options.isOverlayMode,\n            isReadOnly: this.options.isReadOnly\n          },\n          content: ArchiveAssociationSelectorComponent\n        })\n        .then((result: IAssociationsToFollowForArchive) => {\n          this.value = result;\n          this.associationToFollowSubject.next(this.value);\n        })\n        .catch(noop);\n    });\n  }\n\n  openMissingDefinitionsModal(): void {\n    this.missingAssociations$.pipe(take(1)).subscribe((missingAssociations) => {\n      if (missingAssociations.length) {\n        this.rxModalService\n          .openModal({\n            title: this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.missing-archive-definitions.label'\n            ),\n            data: {\n              missingAssociations\n            },\n            size: 'sm',\n            content: MissingArchiveDefinitionsModalComponent\n          })\n          .catch(noop);\n      } else {\n        this.rxNotificationService.addInfoMessage(\n          this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.no-missing-archive-definitions.message'\n          )\n        );\n      }\n    });\n  }\n}\n","<div class=\"d-inline-flex align-items-center mb-1\">\n  <button\n    class=\"d-icon-plus_circle p-0\"\n    adapt-button\n    type=\"button\"\n    btn-type=\"tertiary\"\n    rx-id=\"associations-to-follow-button\"\n    (click)=\"openAssociationSelector()\"\n  >\n    {{\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.associations-to-follow.label' | translate\n    }}\n  </button>\n\n  <adapt-icon\n    name=\"question_circle_o\"\n    class=\"ml-2\"\n    placement=\"right\"\n    [adaptPopover]=\"\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.associations-to-follow.tooltip'\n        | translate\n    \"\n  >\n  </adapt-icon>\n</div>\n\n<div class=\"border pl-2 p-1 form-group\">\n  <span class=\"d-icon-left-arrow_schema font-weight-bold\">\n    {{ associationLabel$ | async }}\n  </span>\n</div>\n\n<div class=\"d-inline-flex align-items-center\">\n  <adapt-icon name=\"exclamation_triangle\" class=\"text-warning-icon\"> </adapt-icon>\n\n  <adapt-button\n    btn-type=\"tertiary\"\n    rx-id=\"open-missing-definitions-button\"\n    (click)=\"openMissingDefinitionsModal()\"\n    class=\"p-0 pl-1\"\n  >\n    {{\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.missing-archive-definitions.label'\n        | translate\n    }}\n  </adapt-button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ComponentStore } from '@ngrx/component-store';\nimport { Observable } from 'rxjs';\nimport { IFieldState, IIndexEditorState, IIndexesEditorOptions, IIndexState } from './record-indexes-control.types';\nimport { reject, some } from 'lodash';\nimport { RxGuidService } from '@helix/platform/utils';\n\n@Injectable()\nexport class RecordIndexesEditorStore extends ComponentStore<IIndexEditorState> {\n  readonly isDirty$: Observable<boolean> = this.select((state: IIndexEditorState) => state.isDirty);\n  readonly indexes$: Observable<any> = this.select((state: IIndexEditorState) => state.indexes);\n\n  readonly addIndex = this.updater((state: IIndexEditorState, index: IIndexState) => ({\n    ...state,\n    indexes: [...state.indexes, index],\n    isDirty: true\n  }));\n\n  readonly updateIndex = this.updater((state: IIndexEditorState, indexToUpdate: IIndexState) => ({\n    ...state,\n    indexes: state.indexes.map((index) => (index.guid === indexToUpdate.guid ? { ...indexToUpdate } : index)),\n    isDirty: true\n  }));\n\n  readonly removeIndex = this.updater((state: IIndexEditorState, guid: string) => ({\n    ...state,\n    indexes: state.indexes.filter((field) => field.guid !== guid),\n    isDirty: true\n  }));\n\n  readonly checkAvailableFields = this.updater(\n    (state: IIndexEditorState, payload: { indexGuid: string; checkedFields: IFieldState[] }) => ({\n      ...state,\n      indexes: state.indexes.map((index) =>\n        index.guid === payload.indexGuid\n          ? {\n              ...index,\n              checkedAvailableFields: [...payload.checkedFields]\n            }\n          : index\n      )\n    })\n  );\n\n  readonly toggleSelectedFieldChecked = this.updater(\n    (state: IIndexEditorState, payload: { indexGuid: string; indexField: IFieldState }) => ({\n      ...state,\n      indexes: state.indexes.map((index) => {\n        if (index.guid === payload.indexGuid) {\n          const selectedFields = index.selectedFields.map((field) =>\n            field.id === payload.indexField.id ? { ...field } : field\n          );\n\n          return {\n            ...index,\n            selectedFields,\n            isMoveToAvailableButtonEnabled: some(selectedFields, 'selected')\n          };\n        } else {\n          return index;\n        }\n      })\n    })\n  );\n\n  readonly assignCheckedFields = this.updater((state: IIndexEditorState, indexToAssign: IIndexState) => {\n    return {\n      ...state,\n      indexes: state.indexes.map((index) =>\n        index.guid === indexToAssign.guid\n          ? {\n              ...index,\n              selectedFields: [...index.selectedFields, ...index.checkedAvailableFields].map(\n                (field, itemIndex: number) => ({\n                  ...field,\n                  selected: false,\n                  fieldOrder: itemIndex++\n                })\n              ),\n              availableFields: [\n                ...index.availableFields.filter((field) => !some(index.checkedAvailableFields, { id: field.id }))\n              ],\n              checkedAvailableFields: []\n            }\n          : index\n      ),\n      isDirty: true\n    };\n  });\n\n  readonly unassignCheckedFields = this.updater((state: IIndexEditorState, indexToAssign: IIndexState) => {\n    return {\n      ...state,\n      indexes: state.indexes.map((index) =>\n        index.guid === indexToAssign.guid\n          ? {\n              ...index,\n              selectedFields: index.selectedFields.filter((field) => !field.selected),\n              availableFields: [...index.availableFields, ...index.selectedFields.filter((field) => field.selected)]\n                .map((field) => ({\n                  ...field,\n                  fieldOrder: null\n                }))\n                .sort((a, b) => a.name.localeCompare(b.name)),\n              isMoveToAvailableButtonEnabled: false\n            }\n          : index\n      ),\n      isDirty: true\n    };\n  });\n\n  readonly sortSelectedFields = this.updater(\n    (state: IIndexEditorState, payload: { indexGuid: string; fields: IFieldState[] }) => ({\n      ...state,\n      indexes: state.indexes.map((index) =>\n        index.guid === payload.indexGuid\n          ? {\n              ...index,\n              selectedFields: [\n                ...payload.fields.map((field, itemIndex: number) => ({ ...field, fieldOrder: itemIndex }))\n              ]\n            }\n          : index\n      )\n    })\n  );\n\n  readonly removeField = this.updater(\n    (state: IIndexEditorState, payload: { indexGuid: string; field: IFieldState }) => ({\n      ...state,\n      indexes: state.indexes.map((index) =>\n        index.guid === payload.indexGuid\n          ? {\n              ...index,\n              selectedFields: index.selectedFields.filter((field) => field.id !== payload.field.id),\n              availableFields: [...index.availableFields, payload.field].sort((a, b) => a.name.localeCompare(b.name))\n            }\n          : index\n      ),\n      isDirty: true\n    })\n  );\n\n  readonly expandAll = this.updater((state: IIndexEditorState) => ({\n    ...state,\n    indexes: state.indexes.map((field) => ({ ...field, isOpen: true }))\n  }));\n\n  readonly collapseAll = this.updater((state: IIndexEditorState) => ({\n    ...state,\n    indexes: state.indexes.map((field) => ({ ...field, isOpen: false }))\n  }));\n\n  readonly markDirty = this.updater((state: IIndexEditorState) => ({\n    ...state,\n    isDirty: true\n  }));\n\n  readonly vm$ = this.select(this.indexes$, this.isDirty$, (indexes, isDirty) => ({\n    indexes,\n    isDirty\n  }));\n\n  constructor(private rxGuidService: RxGuidService) {\n    super({ indexes: [], isDirty: false });\n  }\n\n  initialize(indexesEditorOptions: IIndexesEditorOptions): void {\n    this.patchState({\n      isDirty: false,\n      indexes: indexesEditorOptions.indexes.map((index, itemIndex) => ({\n        ...index,\n\n        availableFields: reject(\n          indexesEditorOptions.fields,\n          (field) => field.isNewField || index.indexFieldIds.includes(field.id as number)\n        )\n          .map((field) => ({ id: field.id, name: field.name, fieldOrder: null }))\n          .sort((a, b) => a.name.localeCompare(b.name)),\n\n        checkedAvailableFields: [],\n\n        selectedFields: indexesEditorOptions.fields\n          .filter((field) => !field.isNewField && index.indexFieldIds.includes(field.id as number))\n          .sort((a, b) => index.indexFieldIds.indexOf(a.id as number) - index.indexFieldIds.indexOf(b.id as number))\n          .map((field, index) => ({ id: field.id, name: field.name, fieldOrder: index })),\n\n        guid: this.rxGuidService.generate(),\n        isOpen: indexesEditorOptions?.indexToEditIndex === itemIndex,\n        isMoveToAvailableButtonEnabled: false\n      }))\n    });\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Injector,\n  OnInit,\n  QueryList,\n  ViewChildren\n} from '@angular/core';\nimport { ActiveModalRef, AdaptAccordionTabComponent, DismissReasons, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { RecordIndexesEditorStore } from './record-indexes-editor.store';\nimport { RxGuidService } from '@helix/platform/utils';\nimport { filter, take } from 'rxjs/operators';\nimport { IFieldState, IIndexEditorState, IIndexesEditorOptions, IIndexState } from './record-indexes-control.types';\nimport { map } from 'lodash';\nimport { IIndexDefinitionModel } from '../../record-designer.types';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'rx-record-indexes-editor',\n  templateUrl: './record-indexes-editor.component.html',\n  styleUrls: ['./record-indexes-editor.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [RecordIndexesEditorStore]\n})\nexport class RecordIndexesEditorComponent extends RxModalClass implements OnInit, AfterViewInit {\n  @ViewChildren(AdaptAccordionTabComponent, { read: ElementRef })\n  private accordionTabEls: QueryList<ElementRef>;\n\n  isReadOnly = this.activeModalRef.getData().isReadOnly;\n  indexesEditorOptions: IIndexesEditorOptions = this.activeModalRef.getData();\n  vm$: Observable<IIndexEditorState> = this.recordIndexesEditorStore.vm$;\n\n  constructor(\n    private recordIndexesEditorStore: RecordIndexesEditorStore,\n    private rxGuidService: RxGuidService,\n    private activeModalRef: ActiveModalRef,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.recordIndexesEditorStore.isDirty$.pipe(filter(Boolean), take(1)).subscribe(() => {\n      this.markAsDirty();\n    });\n\n    this.recordIndexesEditorStore.initialize(this.indexesEditorOptions);\n  }\n\n  ngAfterViewInit(): void {\n    this.accordionTabEls.get(this.indexesEditorOptions.indexToEditIndex)?.nativeElement.scrollIntoView({\n      block: 'nearest'\n    });\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  addIndex(): void {\n    this.recordIndexesEditorStore.addIndex({\n      guid: this.rxGuidService.generate(),\n      indexName: null,\n      unique: false,\n      ignoreBlankValues: false,\n      indexFieldIds: [],\n      availableFields: this.indexesEditorOptions.fields\n        .filter((field) => !field.isNewField)\n        .map((field) => ({ ...field, fieldOrder: null }))\n        .sort((a, b) => a.name.localeCompare(b.name)),\n      checkedAvailableFields: [],\n      selectedFields: [],\n      isOpen: true,\n      isAutomaticIndex: false,\n      isMoveToAvailableButtonEnabled: false\n    } as IIndexState);\n  }\n\n  updateIndexUniqueValue(index: IIndexState, unique: boolean): void {\n    this.recordIndexesEditorStore.updateIndex({ ...index, unique });\n  }\n\n  updateIndexIgnoreBlankValue(index: IIndexState, ignoreBlankValues: boolean): void {\n    this.recordIndexesEditorStore.updateIndex({ ...index, ignoreBlankValues });\n  }\n\n  removeIndex(guid: string): void {\n    this.recordIndexesEditorStore.removeIndex(guid);\n  }\n\n  moveToSelected(index: IIndexState): void {\n    this.recordIndexesEditorStore.assignCheckedFields(index);\n  }\n\n  moveToAvailable(index: IIndexState): void {\n    this.recordIndexesEditorStore.unassignCheckedFields(index);\n  }\n\n  onAvailableFieldsChange(checkedFields: IFieldState[], index: IIndexState) {\n    this.recordIndexesEditorStore.checkAvailableFields({ indexGuid: index.guid, checkedFields });\n  }\n\n  onSelectedFieldsChange(fields: IFieldState[], index: IIndexState): void {\n    fields.forEach((field) => {\n      this.recordIndexesEditorStore.toggleSelectedFieldChecked({ indexGuid: index.guid, indexField: field });\n    });\n\n    this.recordIndexesEditorStore.sortSelectedFields({ indexGuid: index.guid, fields });\n  }\n\n  onDragEnd(): void {\n    this.recordIndexesEditorStore.markDirty();\n  }\n\n  onFieldRemove(removedField: IFieldState, index: IIndexState): void {\n    this.recordIndexesEditorStore.removeField({ indexGuid: index.guid, field: removedField });\n  }\n\n  save(): void {\n    this.recordIndexesEditorStore.indexes$.pipe(take(1)).subscribe((indexes: IIndexState[]) => {\n      this.activeModalRef.close(\n        indexes.map(\n          (index) =>\n            ({\n              isAutomaticIndex: index.isAutomaticIndex,\n              indexName: index.indexName,\n              unique: index.unique,\n              ignoreBlankValues: index.ignoreBlankValues,\n              indexFieldIds: map(index.selectedFields, 'id')\n            } as IIndexDefinitionModel)\n        )\n      );\n    });\n  }\n\n  expandAll(): void {\n    this.recordIndexesEditorStore.expandAll();\n  }\n\n  collapseAll(): void {\n    this.recordIndexesEditorStore.collapseAll();\n  }\n\n  trackByIndex($index: number): number {\n    return $index;\n  }\n\n  optionFormatter(field: RxSelectOption): string {\n    return field.name;\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <div class=\"designer-modal-body modal-body d-flex mh-100 flex-column\">\n    <adapt-alert\n      class=\"flex-shrink-0\"\n      [config]=\"{\n        content: 'com.bmc.arsys.rx.client.record-designer.indexes.information' | translate,\n        variant: 'info',\n        type: 'inline'\n      }\"\n    ></adapt-alert>\n\n    <div class=\"text-right btn-group\">\n      <button\n        type=\"button\"\n        adapt-button\n        btn-type=\"tertiary\"\n        rx-id=\"add-index-button\"\n        class=\"d-icon-left-plus_circle float-left px-0\"\n        (click)=\"addIndex()\"\n        *ngIf=\"!isReadOnly\"\n      >\n        {{ 'com.bmc.arsys.rx.client.record-designer.indexes.add-index.label' | translate }}\n      </button>\n\n      <button\n        type=\"button\"\n        adapt-button\n        btn-type=\"tertiary\"\n        rx-id=\"expand-button\"\n        (click)=\"expandAll()\"\n        class=\"ml-auto\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.expand-all.label' | translate }}\n      </button>\n\n      <button\n        type=\"button\"\n        adapt-button\n        btn-type=\"tertiary\"\n        rx-id=\"collapse-button\"\n        class=\"pr-0\"\n        (click)=\"collapseAll()\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.collapse-all.label' | translate }}\n      </button>\n    </div>\n\n    <div class=\"designer-modal-accordion-wrapper\">\n      <adapt-accordion\n        [multiselect]=\"true\"\n        class=\"d-block\"\n        *ngFor=\"let index of vm.indexes; let $index = index; trackBy: trackByIndex\"\n      >\n        <div class=\"designer-modal-accordion-content\">\n          <adapt-accordion-tab\n            class=\"d-block\"\n            [isOpen]=\"index.isOpen\"\n            (open)=\"index.isOpen = true\"\n            (close)=\"index.isOpen = false\"\n          >\n            <div class=\"card-title-text w-100\">\n              <div class=\"designer-modal-card-title-content\">\n                <div class=\"left-header-block pl-0\">\n                  <div class=\"rx-ellipsis\" [title]=\"index.indexName\" rx-id=\"card-title\">\n                    <span *ngIf=\"!index.isAutomaticIndex\">\n                      {{\n                        index.indexName || 'com.bmc.arsys.rx.client.record-designer.indexes.new-index.label' | translate\n                      }}\n                    </span>\n                    <span *ngIf=\"index.isAutomaticIndex\">{{\n                      'com.bmc.arsys.rx.client.record-designer.indexes.automatic-index.label'\n                        | translate: { indexName: index.indexName }\n                    }}</span>\n                  </div>\n                </div>\n\n                <div class=\"right-header-block\">\n                  <button\n                    class=\"d-icon-left-cross_adapt py-0 pr-3 btn btn-sm\"\n                    adapt-button\n                    size=\"small\"\n                    type=\"button\"\n                    (click)=\"$event.stopPropagation(); removeIndex(index.guid)\"\n                    *ngIf=\"!isReadOnly && !index.isAutomaticIndex\"\n                    rx-id=\"remove-index-button\"\n                  >\n                    {{ 'com.bmc.arsys.rx.client.common.remove.label' | translate }}\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <adapt-rx-checkbox\n              [ngModel]=\"index.unique\"\n              (ngModelChange)=\"updateIndexUniqueValue(index, $event)\"\n              [disabled]=\"isReadOnly || index.isAutomaticIndex\"\n              label=\"{{ 'com.bmc.arsys.rx.client.record-designer.indexes.unique-index-checkbox.label' | translate }}\"\n            >\n            </adapt-rx-checkbox>\n\n            <adapt-rx-checkbox\n              [(ngModel)]=\"index.ignoreBlankValues\"\n              (ngModelChange)=\"updateIndexIgnoreBlankValue(index, $event)\"\n              [disabled]=\"isReadOnly || index.isAutomaticIndex\"\n              label=\"{{ 'com.bmc.arsys.rx.client.record-designer.indexes.ignore-blank-values.label' | translate }}\"\n              [tooltip]=\"{\n                iconName: 'question_circle_o',\n                content: 'com.bmc.arsys.rx.client.record-designer.indexes.ignore-blank-values.tooltip' | translate,\n                placement: 'top',\n                popoverMode: true\n              }\"\n            >\n            </adapt-rx-checkbox>\n\n            <div class=\"d-flex flex-fill\">\n              <adapt-rx-select\n                class=\"flex-grow-1 d-flex flex-column\"\n                popupMaxHeight=\"100%\"\n                [options]=\"index.availableFields\"\n                [ngModel]=\"index.checkedAvailableFields\"\n                [disabled]=\"isReadOnly || index.isAutomaticIndex\"\n                [deselectAllButton]=\"true\"\n                [selectAllButton]=\"true\"\n                [enableFilter]=\"true\"\n                [inline]=\"true\"\n                label=\"{{ 'com.bmc.arsys.rx.client.record-designer.indexes.available-fields.label' | translate }}\"\n                [multiple]=\"true\"\n                [singleSelectStyle]=\"'marker'\"\n                [optionFormatter]=\"optionFormatter\"\n                (ngModelChange)=\"onAvailableFieldsChange($event, index)\"\n                rx-id=\"available-field-list\"\n              ></adapt-rx-select>\n\n              <div class=\"mx-2 d-flex flex-column\">\n                <button\n                  type=\"button\"\n                  adapt-button\n                  class=\"d-icon-right-angle_right mt-auto mb-2\"\n                  btn-type=\"secondary\"\n                  (click)=\"moveToSelected(index)\"\n                  [disabled]=\"!index.checkedAvailableFields.length || index.isAutomaticIndex\"\n                  rx-id=\"move-to-selected-button\"\n                ></button>\n\n                <button\n                  type=\"button\"\n                  adapt-button\n                  class=\"d-icon-right-angle_left mb-auto\"\n                  btn-type=\"secondary\"\n                  (click)=\"moveToAvailable(index)\"\n                  [disabled]=\"!index.isMoveToAvailableButtonEnabled || index.isAutomaticIndex\"\n                  rx-id=\"move-to-available-button\"\n                ></button>\n              </div>\n\n              <adapt-rx-list-builder\n                class=\"flex-grow-1\"\n                [ngModel]=\"index.selectedFields\"\n                selectionMode=\"multiple\"\n                (ngModelChange)=\"onSelectedFieldsChange($event, index)\"\n                (listItemRemove)=\"onFieldRemove($event, index)\"\n                [disabled]=\"isReadOnly || index.isAutomaticIndex\"\n                [hideSearchField]=\"true\"\n                [hideEdit]=\"true\"\n                (dragend)=\"onDragEnd()\"\n                [tooltip]=\"{\n                  iconName: 'question_circle_o',\n                  content: 'com.bmc.arsys.rx.client.record-designer.indexes.selected-fields.tooltip' | translate,\n                  placement: 'top',\n                  popoverMode: true\n                }\"\n                label=\"{{ 'com.bmc.arsys.rx.client.record-designer.indexes.selected-fields.label' | translate }}\"\n                rx-id=\"selected-field-list\"\n              ></adapt-rx-list-builder>\n            </div>\n          </adapt-accordion-tab>\n        </div>\n      </adapt-accordion>\n    </div>\n  </div>\n\n  <div class=\"modal-footer\">\n    <div *ngIf=\"!isReadOnly\">\n      <button\n        class=\"mr-2\"\n        type=\"button\"\n        adapt-button\n        btn-type=\"primary\"\n        rx-id=\"save-button\"\n        (click)=\"save()\"\n        [disabled]=\"!vm.isDirty\"\n      >\n        {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n      </button>\n\n      <button type=\"button\" adapt-button btn-type=\"secondary\" rx-id=\"cancel-button\" (click)=\"cancel()\">\n        {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n      </button>\n    </div>\n\n    <div *ngIf=\"isReadOnly\">\n      <button type=\"button\" adapt-button btn-type=\"secondary\" rx-id=\"close-button\" (click)=\"cancel()\">\n        {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\n      </button>\n    </div>\n  </div>\n</ng-container>\n","import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { ValueAccessor } from '@helix/platform/shared/components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IIndexesEditorOptions, IRecordIndexesControlOptions } from './record-indexes-control.types';\nimport { noop } from 'lodash';\nimport { RecordIndexesEditorComponent } from './record-indexes-editor.component';\nimport { IIndexDefinitionModel } from '../../record-designer.types';\nimport { OpenViewActionModalSize } from '@helix/platform/view/api';\nimport { IFormFocusable } from '@helix/platform/shared/api';\n\n@Component({\n  selector: 'rx-record-indexes',\n  templateUrl: './record-indexes-control.component.html',\n  styleUrls: ['./record-indexes-control.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RecordIndexesControlComponent,\n      multi: true\n    }\n  ]\n})\nexport class RecordIndexesControlComponent extends ValueAccessor<IIndexDefinitionModel[]> implements IFormFocusable {\n  @Input()\n  options: IRecordIndexesControlOptions;\n\n  constructor(private rxModalService: RxModalService, private translateService: TranslateService) {\n    super();\n  }\n\n  openIndexesEditor(indexToEditIndex: number = null): void {\n    this.rxModalService\n      .openModal({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.indexes.edit-indexes.label'),\n        data: {\n          indexes: this.value,\n          indexToEditIndex,\n          isReadOnly: this.options.isReadOnly,\n          fields: this.options.definitionModel.fields\n        } as IIndexesEditorOptions,\n        content: RecordIndexesEditorComponent,\n        size: OpenViewActionModalSize.Large\n      })\n      .then((indexes: IIndexDefinitionModel[]) => {\n        this.value = indexes;\n      })\n      .catch(noop);\n  }\n\n  removeIndex($index: number): void {\n    this.rxModalService\n      .confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.indexes.delete-index-confirmation.message'\n        )\n      })\n      .then((result: boolean) => {\n        if (result) {\n          this.value = this.value.filter((index, itemIndex) => itemIndex !== $index);\n        }\n      });\n  }\n\n  focus(data?: { indexToEditIndex: number }): void {\n    if (data?.indexToEditIndex) {\n      this.openIndexesEditor(data.indexToEditIndex);\n    } else {\n      this.openIndexesEditor();\n    }\n  }\n}\n","<adapt-button btn-type=\"tertiary\" rx-id=\"open-indexes-editor\" class=\"p-0 pb-1\" (click)=\"openIndexesEditor()\">\n  <span class=\"d-icon-plus_circle\"></span>\n  {{ 'com.bmc.arsys.rx.client.record-designer.indexes.edit-indexes.label' | translate }}\n</adapt-button>\n\n<div class=\"record-index rounded mb-1 border font-weight-bold\" *ngFor=\"let index of value; let $index = index\">\n  <div class=\"d-flex mb-1\">\n    <span rx-id=\"record-index-name\" [title]=\"index.indexName\">\n      <span *ngIf=\"!index.isAutomaticIndex\">{{\n        index.indexName || 'com.bmc.arsys.rx.client.record-designer.indexes.new-index.label' | translate\n      }}</span>\n      <span *ngIf=\"index.isAutomaticIndex\"\n        >{{\n          'com.bmc.arsys.rx.client.record-designer.indexes.automatic-index.label'\n            | translate\n              : {\n                  indexName:\n                    index.indexName || 'com.bmc.arsys.rx.client.record-designer.indexes.new-index.label' | translate\n                }\n        }}\n        <adapt-icon\n          name=\"question_circle_o\"\n          class=\"ml-2\"\n          [adaptPopover]=\"'com.bmc.arsys.rx.client.record-designer.indexes.system-index.tooltip' | translate\"\n        >\n        </adapt-icon>\n      </span>\n    </span>\n\n    <button\n      class=\"ml-auto rx-button-unstyled d-icon-left-pencil btn-link\"\n      type=\"button\"\n      rx-id=\"open-index-editor\"\n      (click)=\"openIndexesEditor($index)\"\n      *ngIf=\"!index.isAutomaticIndex\"\n    ></button>\n\n    <button\n      type=\"button\"\n      class=\"rx-button-unstyled d-icon-cross btn-link\"\n      rx-id=\"remove-index\"\n      (click)=\"removeIndex($index)\"\n      *ngIf=\"!options.isReadOnly && !index.isAutomaticIndex\"\n    ></button>\n  </div>\n\n  <div class=\"caption ellipsis\">\n    {{\n      (index.unique\n        ? 'com.bmc.arsys.rx.client.record-designer.indexes.unique-index.label'\n        : 'com.bmc.arsys.rx.client.record-designer.indexes.non-unique-index.label.value'\n      ) | translate\n    }},\n    {{\n      index.indexFieldIds.length === 1\n        ? ('com.bmc.arsys.rx.client.record-designer.indexes.one-field-index.label' | translate)\n        : ('com.bmc.arsys.rx.client.record-designer.indexes.many-fields-index.label'\n          | translate: { fieldCount: index.indexFieldIds.length })\n    }}\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { RX_RECORD_DEFINITION, RxFieldDefinitionService } from '@helix/platform/record/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  IFormSectionBuilderConfig,\n  RX_OVERLAY,\n  RX_PERMISSION,\n  RxOverlayService,\n  Tooltip\n} from '@helix/platform/shared/api';\nimport {\n  BooleanFormControlComponent,\n  CounterFormControlComponent,\n  ExpressionFormControlComponent,\n  ICheckboxFormControlOptions,\n  ICounterFormControlOptions,\n  IDefinitionPickerComponentOptions,\n  IExpressionFormControlOptions,\n  IPermissionEditorComponentOptions,\n  ISelectFormControlOptions,\n  ISwitcherFormControlOptions,\n  ITextareaFormControlOptions,\n  ITextFormControlOptions,\n  RxDefinitionPickerComponent,\n  RxDefinitionPickerType,\n  RxPermissionEditorComponent,\n  RxRevertCustomizationComponent,\n  SelectFormControlComponent,\n  SwitchFormControlComponent,\n  TextareaFormControlComponent,\n  TextFormControlComponent\n} from '@helix/platform/shared/components';\nimport { IRecordDefinitionModel } from '../record-designer.types';\nimport { RecordCustomizationOptionsComponent } from './record-customization-options/record-customization-options.component';\nimport { RX_RECORD_DESIGNER } from './record-designer.constant';\nimport { RecordInheritanceEditorComponent } from './record-inheritance-editor/record-inheritance-editor.component';\nimport { SearchFieldEditorControlComponent } from './search-field-editor/search-field-editor-control.component';\nimport { ISearchFieldEditorControlOptions } from './search-field-editor/search-field.types';\nimport { findIndex, get, includes, isNumber } from 'lodash';\nimport { RecordDesignerExpressionConfigurator } from './record-designer-expression-configurator.class';\nimport { ArchiveAssociationsControlComponent } from './archive-associations-control/archive-associations-control.component';\nimport { IArchiveAssociationControlOptions } from './archive-associations-control/archive-associations-control.types';\nimport { RecordIndexesControlComponent } from './record-indexes-control/record-indexes-control.component';\nimport { IRecordIndexesControlOptions } from './record-indexes-control/record-indexes-control.types';\nimport { IRecordInheritanceSelectorOptions } from './record-inheritance-editor/record-inheritance-editor.interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRecordDesignerInspectorService {\n  constructor(\n    private rxFieldDefinitionService: RxFieldDefinitionService,\n    private rxOverlayService: RxOverlayService,\n    private translateService: TranslateService\n  ) {}\n\n  getDefinitionInspectorConfig(\n    isNewDefinition: boolean,\n    definitionModel: IRecordDefinitionModel,\n    definitionModelFromDefinition: IRecordDefinitionModel,\n    bundleId: string,\n    isPropertiesCustomizationAllowed: boolean,\n    isIndexCustomizationAllowed: boolean,\n    isPermissionsCustomizationAllowed: boolean,\n    isFieldsCustomizationAllowed: boolean,\n    isReadOnly: boolean,\n    expressionConfigurator: RecordDesignerExpressionConfigurator\n  ): IFormSectionBuilderConfig[] {\n    let configs: IFormSectionBuilderConfig[] = [];\n\n    const isOverlayMode =\n      !isNewDefinition && definitionModel.overlayOperation !== RX_OVERLAY.operationTypes.createdInThisOverlayGroup;\n    const isAuditRecordDefinition = Boolean(definitionModel.isAuditRecordDefinition);\n\n    const isDeleteSourceRecordOperation =\n      definitionModel.archiveType === RX_RECORD_DESIGNER.archiving.types.deleteSourceRecord.id;\n\n    const doNotArchive = definitionModel.archiveType === RX_RECORD_DESIGNER.archiving.types.doNotArchive.id;\n\n    const archivingOptions = Object.values(RX_RECORD_DESIGNER.archiving.types).map((value) => ({\n      ...value,\n      name: this.translateService.instant(value.nameKey)\n    }));\n\n    const joinTypeOptions = Object.values(RX_RECORD_DEFINITION.joinTypes).map((joinType) => ({\n      ...joinType,\n      name: this.translateService.instant(joinType.displayName),\n      id: joinType.value\n    }));\n\n    const weightedRelevancyFields = [\n      {\n        name: 'weightedRelevancyTitle',\n        component: SelectFormControlComponent,\n        isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.title-field.label'\n          ),\n          options: definitionModel.fields\n            .filter(\n              (fieldDefinition) =>\n                isNumber(fieldDefinition.id) &&\n                (get(fieldDefinition, 'searchDefinition.enableFTSSearch') ||\n                  get(fieldDefinition, 'searchDefinition.enableCognitiveSearch')) &&\n                !includes(\n                  [definitionModel.weightedRelevancyEnvironment, definitionModel.weightedRelevancyKeywords],\n                  fieldDefinition.id\n                )\n            )\n            .map((fieldDefinition) => ({\n              name: fieldDefinition.name,\n              id: fieldDefinition.id\n            })),\n          tooltip: new Tooltip(\n            this.translateService.instant(\n              definitionModel.enableCognitiveSearch\n                ? 'com.bmc.arsys.rx.client.record-designer.definition-properties.title-field-cognitive-search.tooltip'\n                : 'com.bmc.arsys.rx.client.record-designer.definition-properties.title-field-fts.tooltip'\n            )\n          )\n        } as ISelectFormControlOptions\n      },\n      {\n        name: 'weightedRelevancyEnvironment',\n        component: SelectFormControlComponent,\n        isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.environment-field.label'\n          ),\n          options: definitionModel.fields\n            .filter(\n              (fieldDefinition) =>\n                isNumber(fieldDefinition.id) &&\n                (get(fieldDefinition, 'searchDefinition.enableFTSSearch') ||\n                  get(fieldDefinition, 'searchDefinition.enableCognitiveSearch')) &&\n                !includes(\n                  [definitionModel.weightedRelevancyTitle, definitionModel.weightedRelevancyKeywords],\n                  fieldDefinition.id\n                )\n            )\n            .map((fieldDefinition) => ({\n              name: fieldDefinition.name,\n              id: fieldDefinition.id\n            })),\n          tooltip: new Tooltip(\n            this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.definition-properties.environment-field.tooltip'\n            )\n          )\n        } as ISelectFormControlOptions\n      },\n      {\n        name: 'weightedRelevancyKeywords',\n        component: SelectFormControlComponent,\n        isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n        options: {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.keywords-field.label'\n          ),\n          options: definitionModel.fields\n            .filter(\n              (fieldDefinition) =>\n                isNumber(fieldDefinition.id) &&\n                (get(fieldDefinition, 'searchDefinition.enableFTSSearch') ||\n                  get(fieldDefinition, 'searchDefinition.enableCognitiveSearch')) &&\n                !includes(\n                  [definitionModel.weightedRelevancyTitle, definitionModel.weightedRelevancyEnvironment],\n                  fieldDefinition.id\n                )\n            )\n            .map((fieldDefinition) => ({\n              name: fieldDefinition.name,\n              id: fieldDefinition.id\n            })),\n          tooltip: new Tooltip(\n            this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.definition-properties.keywords-field.tooltip'\n            )\n          )\n        } as ISelectFormControlOptions\n      }\n    ];\n\n    if (definitionModel.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType) {\n      configs = [\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n          controls: [\n            {\n              name: 'name',\n              component: TextFormControlComponent,\n              isDisabled: !isNewDefinition,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n                required: true\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'description',\n              component: TextareaFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label'),\n                rows: 3\n              } as ITextareaFormControlOptions\n            },\n            {\n              component: RxRevertCustomizationComponent,\n              options: {\n                overlayGroupId: definitionModel.overlayGroupId,\n                overlayDescriptor: definitionModel.overlayDescriptor\n              }\n            },\n            {\n              name: 'customizationOptions',\n              component: RecordCustomizationOptionsComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n              options: {\n                definitionTypeDisplayName: this.translateService\n                  .instant('com.bmc.arsys.rx.client.record-definition.label')\n                  .toLowerCase(),\n                recordDefinition: definitionModel\n              }\n            },\n            {\n              name: 'allowNonAdminToDeleteRecordInstances',\n              component: SwitchFormControlComponent,\n              isDisabled: isAuditRecordDefinition || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.allow-non-admin-users-to-delete-records.label'\n                )\n              } as ISwitcherFormControlOptions\n            },\n            {\n              name: 'owner',\n              component: TextFormControlComponent,\n              isDisabled: true,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.owner.label')\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'lastUpdateTime',\n              component: TextFormControlComponent,\n              isDisabled: true,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.modified-date.label')\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'lastChangedBy',\n              component: TextFormControlComponent,\n              isDisabled: true,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.modified-by.label')\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'permissions',\n              component: RxPermissionEditorComponent,\n              isDisabled: !isPermissionsCustomizationAllowed || isReadOnly,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.permissions.label'),\n                type: RX_PERMISSION.editorContexts.record\n              } as IPermissionEditorComponentOptions\n            },\n            {\n              name: 'shouldExportData',\n              component: SwitchFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isAuditRecordDefinition || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.should-export-data.label'\n                ),\n                tooltip: new Tooltip(\n                  this.translateService.instant(\n                    'com.bmc.arsys.rx.client.record-designer.definition-properties.should-export-data.tooltip'\n                  )\n                )\n              } as ISwitcherFormControlOptions\n            }\n          ]\n        },\n        {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.title'\n          ),\n          controls: [\n            {\n              name: 'recordInheritanceSelector',\n              component: RecordInheritanceEditorComponent,\n              options: {\n                recordDefinition: definitionModel,\n                isReadOnly: isOverlayMode || !isPropertiesCustomizationAllowed || isAuditRecordDefinition\n              } as IRecordInheritanceSelectorOptions\n            }\n          ]\n        },\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.search.label'),\n          controls: [\n            {\n              name: 'enableCognitiveSearch',\n              component: SwitchFormControlComponent,\n              isDisabled: isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.enable-cognitive-search.label'\n                )\n              } as ISwitcherFormControlOptions\n            },\n            {\n              name: 'recordSearchFields',\n              component: SearchFieldEditorControlComponent,\n              options: {\n                recordDefinitionModel: definitionModel,\n                isReadOnly: !isPropertiesCustomizationAllowed || isAuditRecordDefinition || isReadOnly\n              } as ISearchFieldEditorControlOptions\n            },\n            ...weightedRelevancyFields\n          ]\n        },\n        {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.indexes.title'\n          ),\n          controls: [\n            {\n              name: 'indexDefinitions',\n              component: RecordIndexesControlComponent,\n              options: {\n                isReadOnly: !isIndexCustomizationAllowed || isReadOnly,\n                definitionModel\n              } as IRecordIndexesControlOptions\n            }\n          ]\n        },\n        {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.display-value.title'\n          ),\n          controls: [\n            {\n              name: 'displayFieldIdInAssociation',\n              component: SelectFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.associated-display-field.title'\n                ),\n                options: definitionModel.fields\n                  .filter((field) => this.rxFieldDefinitionService.canBeAssociatedDisplayField(field))\n                  .map((field) => ({ id: field.id, name: field.name }))\n                  .sort((a, b) => a.name.localeCompare(b.name)),\n                tooltip: new Tooltip(\n                  this.translateService.instant(\n                    'com.bmc.arsys.rx.client.record-designer.definition-properties.associated-display-field.tooltip'\n                  )\n                )\n              } as ISelectFormControlOptions\n            }\n          ]\n        },\n        {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.auditing.title'\n          ),\n          controls: [\n            {\n              name: 'isAuditingEnabled',\n              component: SwitchFormControlComponent,\n              isDisabled: isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.enabled.label'\n                )\n              } as ISwitcherFormControlOptions\n            },\n            {\n              name: 'auditRecordDefinitionName',\n              component: TextFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.audit-record-definition-name.label'\n                )\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'auditSourceRecordDefinitionName',\n              component: TextFormControlComponent,\n              isDisabled: true,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.audited-from.label'\n                )\n              } as ITextFormControlOptions\n            }\n          ]\n        },\n        {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.title'\n          ),\n          controls: [\n            {\n              name: 'isArchivingEnabled',\n              component: SwitchFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isOverlayMode || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.enabled.label'\n                )\n              } as ISwitcherFormControlOptions\n            },\n            {\n              name: 'archiveType',\n              component: SelectFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isOverlayMode || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.audit-record-operation.label'\n                ),\n                options: archivingOptions\n              } as ISelectFormControlOptions\n            },\n            {\n              name: 'includeAttachments',\n              component: BooleanFormControlComponent,\n              isDisabled:\n                !isPropertiesCustomizationAllowed ||\n                doNotArchive ||\n                isOverlayMode ||\n                isDeleteSourceRecordOperation ||\n                isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.include-attachments.label'\n                ),\n                shouldDisplayAsCheckbox: true\n              } as ICheckboxFormControlOptions\n            },\n            {\n              name: 'archiveRecordDefinitionName',\n              component: TextFormControlComponent,\n              isDisabled:\n                !isPropertiesCustomizationAllowed ||\n                doNotArchive ||\n                isOverlayMode ||\n                isDeleteSourceRecordOperation ||\n                isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.archive-record-definition-name.label'\n                )\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'ageQualifierInDays',\n              component: CounterFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || doNotArchive || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.record-age.label'\n                ),\n                tooltip: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.record-age.tooltip'\n                ),\n                allowIntegerOnly: true\n              } as ICounterFormControlOptions\n            },\n            {\n              name: 'ageQualifierFieldId',\n              component: SelectFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || doNotArchive || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.record-age-field.label'\n                ),\n                options: definitionModel.fields\n                  .filter((field) => field.resourceType === RX_RECORD_DEFINITION.resourceTypes.dateTime)\n                  .map((fieldDefinition) => ({\n                    name: fieldDefinition.name,\n                    id: fieldDefinition.id\n                  }))\n                  .sort((a, b) => a.name.localeCompare(b.name))\n              } as ISelectFormControlOptions\n            },\n            {\n              name: 'archiveDescription',\n              component: TextFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || doNotArchive || isReadOnly,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label')\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'archiveDataCriteria',\n              component: ExpressionFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || doNotArchive || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.record-filter.label'\n                ),\n                dataDictionary$: expressionConfigurator.getDataDictionary(RX_RECORD_DESIGNER.archiveDataCriteriaPath),\n                operators: expressionConfigurator.getOperators(RX_RECORD_DESIGNER.archiveDataCriteriaPath),\n                tooltip: new Tooltip(\n                  this.translateService.instant(\n                    'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.record-filter.tooltip'\n                  )\n                )\n              } as IExpressionFormControlOptions\n            },\n            {\n              name: 'associationsToFollowForArchive',\n              component: ArchiveAssociationsControlComponent,\n              options: {\n                definitionModel,\n                definitionModelFromDefinition,\n                bundleId,\n                isOverlayMode,\n                isReadOnly: !isPropertiesCustomizationAllowed || doNotArchive\n              } as IArchiveAssociationControlOptions\n            }\n          ]\n        }\n      ];\n    }\n\n    if (definitionModel.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.join.recordDefinitionType) {\n      configs = [\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n          controls: [\n            {\n              name: 'name',\n              component: TextFormControlComponent,\n              isDisabled: !isNewDefinition,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n                required: true\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'description',\n              component: TextareaFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label'),\n                rows: 3\n              } as ITextareaFormControlOptions\n            },\n            {\n              name: 'primaryRecordDefinitionName',\n              component: RxDefinitionPickerComponent,\n              isDisabled: true,\n              options: {\n                definitionType: RxDefinitionPickerType.Record,\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.primary-record.label'\n                )\n              } as IDefinitionPickerComponentOptions\n            },\n            {\n              name: 'secondaryRecordDefinitionName',\n              component: RxDefinitionPickerComponent,\n              isDisabled: true,\n              options: {\n                definitionType: RxDefinitionPickerType.Record,\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.secondary-record.label'\n                )\n              } as IDefinitionPickerComponentOptions\n            },\n            {\n              name: 'joinType',\n              component: SelectFormControlComponent,\n              isDisabled: true,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.join-type.label'\n                ),\n                options: joinTypeOptions\n              } as ISelectFormControlOptions\n            },\n            {\n              name: 'joinCriteria',\n              component: ExpressionFormControlComponent,\n              isDisabled: isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.join-criteria.label'\n                ),\n                dataDictionary$: expressionConfigurator.getDataDictionary(RX_RECORD_DESIGNER.joinCriteriaPath),\n                operators: expressionConfigurator.getOperators(RX_RECORD_DESIGNER.joinCriteriaPath)\n              } as IExpressionFormControlOptions\n            },\n            {\n              component: RxRevertCustomizationComponent,\n              options: {\n                overlayGroupId: definitionModel.overlayGroupId,\n                overlayDescriptor: definitionModel.overlayDescriptor\n              }\n            },\n            {\n              name: 'customizationOptions',\n              component: RecordCustomizationOptionsComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n              options: {\n                definitionTypeDisplayName: this.translateService\n                  .instant('com.bmc.arsys.rx.client.record-definition.label')\n                  .toLowerCase(),\n                recordDefinition: definitionModel\n              }\n            },\n            {\n              name: 'owner',\n              component: TextFormControlComponent,\n              isDisabled: true,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.owner.label')\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'lastUpdateTime',\n              component: TextFormControlComponent,\n              isDisabled: true,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.modified-date.label')\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'lastChangedBy',\n              component: TextFormControlComponent,\n              isDisabled: true,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.modified-by.label')\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'permissions',\n              component: RxPermissionEditorComponent,\n              isDisabled: !isPermissionsCustomizationAllowed || isReadOnly,\n              options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.permissions.label'),\n                type: RX_PERMISSION.editorContexts.record\n              } as IPermissionEditorComponentOptions\n            },\n            {\n              name: 'shouldExportData',\n              component: SwitchFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isAuditRecordDefinition || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.should-export-data.label'\n                ),\n                tooltip: new Tooltip(\n                  this.translateService.instant(\n                    'com.bmc.arsys.rx.client.record-designer.definition-properties.should-export-data.tooltip'\n                  )\n                )\n              } as ISwitcherFormControlOptions\n            }\n          ]\n        },\n        {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.search.label'),\n          controls: [\n            {\n              name: 'enableCognitiveSearch',\n              component: SwitchFormControlComponent,\n              isDisabled: isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.enable-cognitive-search.label'\n                )\n              } as ISwitcherFormControlOptions\n            },\n            {\n              name: 'recordSearchFields',\n              component: SearchFieldEditorControlComponent,\n              options: {\n                recordDefinitionModel: definitionModel,\n                isReadOnly: !isPropertiesCustomizationAllowed || isAuditRecordDefinition || isReadOnly\n              } as ISearchFieldEditorControlOptions\n            },\n            ...weightedRelevancyFields\n          ]\n        },\n        {\n          label: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.auditing.title'\n          ),\n          controls: [\n            {\n              name: 'isAuditingEnabled',\n              component: SwitchFormControlComponent,\n              isDisabled: isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.enabled.label'\n                )\n              } as ISwitcherFormControlOptions\n            },\n            {\n              name: 'auditRecordDefinitionName',\n              component: TextFormControlComponent,\n              isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.audit-record-definition-name.label'\n                )\n              } as ITextFormControlOptions\n            },\n            {\n              name: 'auditSourceRecordDefinitionName',\n              component: TextFormControlComponent,\n              isDisabled: true,\n              options: {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.definition-properties.audited-from.label'\n                )\n              } as ITextFormControlOptions\n            }\n          ]\n        }\n      ];\n    }\n\n    if (isOverlayMode) {\n      configs[0]?.controls.splice(findIndex(configs[0].controls, { name: 'shouldExportData' }), 1);\n    }\n\n    if (isNewDefinition) {\n      configs[0]?.controls.splice(findIndex(configs[0].controls, { name: 'owner' }), 3);\n    }\n\n    return configs;\n  }\n}\n","import { Component, Injector } from '@angular/core';\nimport { RxModalClass } from '@helix/platform/ui-kit';\nimport { ActiveModalRef } from '@bmc-ux/adapt-angular';\n\n@Component({\n  selector: 'rx-localized-character-default-value-selector',\n  templateUrl: './inheritance-issue-info.component.html'\n})\nexport class InheritanceIssueInfoComponent extends RxModalClass {\n  overriddenRecordProperties: any = this.activeModalRef.getData().overriddenRecordProperties;\n\n  constructor(protected injector: Injector, private activeModalRef: ActiveModalRef) {\n    super(activeModalRef, injector);\n  }\n\n  close(value: string): void {\n    this.activeModalRef.close(value);\n  }\n}\n","<div class=\"modal-body\">\n  <ng-container *ngIf=\"overriddenRecordProperties\">\n    <div *ngIf=\"overriddenRecordProperties.fields.length > 0\">\n      <p>\n        {{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.issues-info.message' | translate }}\n      </p>\n\n      <ul>\n        <li>\n          <span>{{\n            'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.issues-overridden-properties-info.message'\n              | translate: { overriddenFields: overriddenRecordProperties.fields }\n          }}</span>\n        </li>\n      </ul>\n    </div>\n\n    <div *ngIf=\"overriddenRecordProperties.securityLabels?.length > 0\">\n      <p>\n        {{\n          'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.issues-overridden-security-labels-info.message'\n            | translate\n        }}\n      </p>\n\n      <ul>\n        <li>\n          <span>{{\n            'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.issues-security-labels-info.message'\n              | translate: { overriddenSecurityLabels: overriddenRecordProperties.securityLabels }\n          }}</span>\n        </li>\n      </ul>\n    </div>\n  </ng-container>\n  <p>\n    {{ 'com.bmc.arsys.rx.client.common.continue-confirmation.message' | translate }}\n  </p>\n</div>\n\n<div class=\"modal-footer\">\n  <button adapt-button type=\"button\" btn-type=\"primary\" rx-id=\"yes-button\" (click)=\"close('continue')\">\n    {{ 'com.bmc.arsys.rx.client.common.yes.label' | translate }}\n  </button>\n\n  <button adapt-button type=\"button\" btn-type=\"secondary\" rx-id=\"no-button\" (click)=\"close('cancel')\">\n    {{ 'com.bmc.arsys.rx.client.common.no.label' | translate }}\n  </button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../record-designer.types';\nimport {\n  AssociationSelectionType,\n  IFieldDefinition,\n  IRecordDefinition,\n  RX_RECORD_DEFINITION,\n  RxFieldDefinitionService,\n  RxRecordDefinitionService\n} from '@helix/platform/record/api';\nimport { find, isNumber, omit } from 'lodash';\nimport { RxDefinitionNameService, RxLocalizationService, RxOverlayService } from '@helix/platform/shared/api';\nimport { RxDateUtilsService, RxGuidService } from '@helix/platform/utils';\nimport moment from 'moment-es6';\n\n@Injectable()\nexport class RxRecordDesignerService {\n  constructor(\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxFieldDefinitionService: RxFieldDefinitionService,\n    private rxGuidService: RxGuidService,\n    private rxOverlayService: RxOverlayService,\n    private rxRecordDefinitionService: RxRecordDefinitionService,\n    private rxLocalizationService: RxLocalizationService,\n    private rxDateUtilService: RxDateUtilsService\n  ) {}\n\n  // Convert \"$ID$ = 'ID'\" to ${Record1.PRIMARY_RECORD_DEFINITION.ID} = ${Record2.SECONDARY_RECORD_DEFINITION.ID}\n  getJoinCriteriaExpression(\n    joinCriteria: string,\n    primaryRecordDefinitionName: string,\n    secondaryRecordDefinitionName: string\n  ): string {\n    const primaryFieldRegExp = new RegExp('\\\\$(?!NULL)([\\\\w .]+)\\\\$', 'g');\n    const secondaryFieldRegExp = new RegExp(\"'([^']+)'\", 'g');\n\n    return (joinCriteria || '')\n      .replace(\n        primaryFieldRegExp,\n        '${' +\n          this.rxDefinitionNameService.getDisplayName(primaryRecordDefinitionName) +\n          '.' +\n          RX_RECORD_DEFINITION.sourceRecordTypes.primary +\n          '.$1}'\n      )\n      .replace(\n        secondaryFieldRegExp,\n        '${' +\n          this.rxDefinitionNameService.getDisplayName(secondaryRecordDefinitionName) +\n          '.' +\n          RX_RECORD_DEFINITION.sourceRecordTypes.secondary +\n          '.$1}'\n      );\n  }\n\n  // Convert ${Record1.PRIMARY_RECORD_DEFINITION.ID} = ${Record2.SECONDARY_RECORD_DEFINITION.ID} to \"$ID$ = 'ID'\"\n  getJoinCriteriaArExpression(\n    joinCriteria: string,\n    primaryRecordDefinitionName: string,\n    secondaryRecordDefinitionName: string\n  ): string {\n    const primaryFieldRegExp = new RegExp(\n      '\\\\${' +\n        this.rxDefinitionNameService.getDisplayName(primaryRecordDefinitionName) +\n        '\\\\.' +\n        RX_RECORD_DEFINITION.sourceRecordTypes.primary +\n        '\\\\.([^}]+)}',\n      'g'\n    );\n\n    const secondaryFieldRegExp = new RegExp(\n      '\\\\${' +\n        this.rxDefinitionNameService.getDisplayName(secondaryRecordDefinitionName) +\n        '\\\\.' +\n        RX_RECORD_DEFINITION.sourceRecordTypes.secondary +\n        '\\\\.([^}]+)}',\n      'g'\n    );\n\n    return (joinCriteria || '')\n      .replace(primaryFieldRegExp, '#$1#')\n      .replace(/#/g, '$')\n      .replace(secondaryFieldRegExp, \"'$1'\");\n  }\n\n  getDefinitionFromDefinitionModel(model: IRecordDefinitionModel, bundleId: string): IRecordDefinition {\n    return {\n      allowFieldsOverlay: model.customizationOptions.allowFieldsOverlay,\n      allowNonAdminToDeleteRecordInstances: model.allowNonAdminToDeleteRecordInstances,\n      allowIndexesOverlay: model.customizationOptions.allowIndexesOverlay,\n      allowOtherPropertiesOverlay: model.customizationOptions.allowOtherPropertiesOverlay,\n      allowPermissionsOverlay: model.customizationOptions.allowPermissionsOverlay,\n      enableCognitiveSearch: model.enableCognitiveSearch,\n      description: model.description,\n      guid: model.guid,\n      indexDefinitions:\n        model.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType\n          ? model.indexDefinitions.map((indexDefinitionModel) => omit(indexDefinitionModel, 'isAutomaticIndex'))\n          : undefined,\n      inheritanceDescriptor: model.recordInheritanceSelector.inheritanceDescriptor,\n      isAbstract: model.recordInheritanceSelector.inheritanceOptions?.isAbstract,\n      isFinal: model.recordInheritanceSelector.inheritanceOptions?.isFinal,\n      isSharedInstanceStorage: model.recordInheritanceSelector.inheritanceOptions?.isSharedInstanceStorage,\n      joinCriteria: model.joinCriteria\n        ? this.getJoinCriteriaArExpression(\n            model.joinCriteria,\n            model.primaryRecordDefinitionName,\n            model.secondaryRecordDefinitionName\n          )\n        : undefined,\n      joinType: model.joinType,\n      lastChangedBy: model.lastChangedBy,\n      lastUpdateTime: model.lastUpdateTime ? moment(model.lastUpdateTime).format() : null,\n      name: `${bundleId}:${model.name}`,\n      overlayGroupId: model.overlayGroupId,\n      owner: model.owner,\n      overlayDescriptor: model.overlayDescriptor,\n      permissions: model.permissions,\n      primaryRecordDefinitionName: model.primaryRecordDefinitionName,\n      resourceType: model.resourceType,\n      secondaryRecordDefinitionName: model.secondaryRecordDefinitionName,\n      shouldExportData: model.shouldExportData,\n      scope: model.customizationOptions.scope,\n      tags: model.tags,\n      version: model.version,\n      weightedRelevancyFields: {\n        TITLE: model.weightedRelevancyTitle,\n        ENVIRONMENT: model.weightedRelevancyEnvironment,\n        KEYWORDS: model.weightedRelevancyKeywords\n      },\n      displayFieldIdInAssociation: find(model.fields, { id: model.displayFieldIdInAssociation })\n        ? model.displayFieldIdInAssociation\n        : null,\n      archiveDescriptor: {\n        ageQualifierFieldId: model.ageQualifierFieldId,\n        ageQualifierInDays: model.ageQualifierInDays,\n        archiveRecordDefinitionName: model.archiveRecordDefinitionName,\n        description: model.archiveDescription,\n        archiveType: model.archiveType,\n        includeAttachments: model.includeAttachments,\n        archiveDataCriteria: model.archiveDataCriteria,\n        isEnabled: model.isArchivingEnabled\n      },\n      associationsToFollowForArchive: model.associationsToFollowForArchive,\n      auditDescriptor: {\n        isEnabled: model.isAuditingEnabled,\n        auditRecordDefinitionName: model.auditRecordDefinitionName,\n        auditDataCriteria: model.auditDataCriteria,\n        associatedAuditFieldsByAssociationName: model.associatedAuditFieldsByAssociationName\n      },\n      auditSourceRecordDefinitionName: model.auditSourceRecordDefinitionName,\n      fieldDefinitions: model.fields.map((fieldModel: IRecordFieldDefinitionModel) => {\n        const field: IFieldDefinition = {\n          resourceType: fieldModel.resourceType,\n          lastUpdateTime: fieldModel.lastUpdateTime,\n          lastChangedBy: fieldModel.lastChangedBy,\n          owner: fieldModel.owner,\n          name: fieldModel.name,\n          tags: fieldModel.tags,\n          description: fieldModel.description,\n          overlayGroupId: fieldModel.overlayGroupId,\n          id: isNumber(fieldModel.id) ? fieldModel.id : '',\n          fieldOption: fieldModel.fieldOption,\n          permissions: fieldModel.permissions,\n          fieldTypeName: fieldModel.fieldTypeName,\n          isInherited: fieldModel.isInherited,\n          explicitPermissions: fieldModel.explicitPermissions,\n          overlayDescriptor: fieldModel.overlayDescriptor,\n          fieldMapping: fieldModel.fieldMapping,\n          allowPermissionsOverlay: fieldModel.allowPermissionsOverlay,\n          allowOtherPropertiesOverlay: fieldModel.allowOtherPropertiesOverlay,\n          auditOption: fieldModel.audit ? 'AUDIT_AND_COPY' : fieldModel.copy ? 'COPY' : null,\n          allowPermissionsEdit: fieldModel.allowPermissionsEdit,\n          maxLength: fieldModel.maxLength,\n          searchDefinition: fieldModel.searchDefinition,\n          namedListDefinition: fieldModel.namedListDefinition,\n          shouldPersistEncrypted: fieldModel.shouldPersistEncrypted,\n          shouldPersistHashed: fieldModel.shouldPersistHashed,\n          pattern: fieldModel.pattern,\n          anyUserAllowedToSubmit: fieldModel.anyUserAllowedToSubmit\n        };\n\n        if (fieldModel.resourceType === RX_RECORD_DEFINITION.dataTypes.localizedCharacter.resourceType) {\n          field.defaultValueByLocale = fieldModel.defaultValueByLocale;\n        } else if (fieldModel.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType) {\n          field.defaultValue = fieldModel.selectionFieldOptionProperties.defaultValue as unknown as string;\n          field.optionNamesById = fieldModel.selectionFieldOptionProperties?.optionNamesById;\n          field.optionLabelsById = fieldModel.selectionFieldOptionProperties?.optionLabelsById;\n        } else if (fieldModel.resourceType !== RX_RECORD_DEFINITION.dataTypes.attachment.resourceType) {\n          field.defaultValue = fieldModel.defaultValue;\n        }\n\n        return field;\n      })\n      // TODO-VM: update when new custom component in inspector config is implemented\n    };\n  }\n\n  getDefinitionModelFromDefinition(recordDefinition: IRecordDefinition): IRecordDefinitionModel {\n    return {\n      allowNonAdminToDeleteRecordInstances: recordDefinition.allowNonAdminToDeleteRecordInstances,\n      isArchivingEnabled: recordDefinition.archiveDescriptor?.isEnabled,\n      ageQualifierFieldId: recordDefinition.archiveDescriptor?.ageQualifierFieldId,\n      ageQualifierInDays: recordDefinition.archiveDescriptor?.ageQualifierInDays,\n      archiveRecordDefinitionName: recordDefinition.archiveDescriptor?.archiveRecordDefinitionName,\n      archiveDescription: recordDefinition.archiveDescriptor?.description,\n      archiveType: recordDefinition.archiveDescriptor?.archiveType,\n      includeAttachments: recordDefinition.archiveDescriptor?.includeAttachments,\n      archiveDataCriteria: recordDefinition.archiveDescriptor?.archiveDataCriteria,\n      associationsToFollowForArchive: {\n        specificAssociationNames: recordDefinition.associationsToFollowForArchive?.specificAssociationNames || [],\n        selectionType:\n          recordDefinition.associationsToFollowForArchive?.selectionType || AssociationSelectionType.FollowParent\n      },\n      isAuditingEnabled: recordDefinition.auditDescriptor?.isEnabled,\n      auditRecordDefinitionName: recordDefinition.auditDescriptor?.auditRecordDefinitionName,\n      auditDataCriteria: recordDefinition.auditDescriptor?.auditDataCriteria,\n      associatedAuditFieldsByAssociationName: recordDefinition.auditDescriptor?.associatedAuditFieldsByAssociationName,\n      auditSourceRecordDefinitionName: recordDefinition.auditSourceRecordDefinitionName,\n      customizationOptions: {\n        allowFieldsOverlay: recordDefinition.allowFieldsOverlay,\n        allowIndexesOverlay: recordDefinition.allowIndexesOverlay,\n        allowOtherPropertiesOverlay: recordDefinition.allowOtherPropertiesOverlay,\n        allowPermissionsOverlay: recordDefinition.allowPermissionsOverlay,\n        allowOverlay: false,\n        fields: recordDefinition.fieldDefinitions as IRecordFieldDefinitionModel[],\n        scope: recordDefinition.scope\n      },\n      description: recordDefinition.description,\n      displayFieldIdInAssociation: recordDefinition.displayFieldIdInAssociation,\n      enableCognitiveSearch: recordDefinition.enableCognitiveSearch,\n      fullPermissions: recordDefinition.fullPermissions,\n      guid: recordDefinition.guid || this.rxGuidService.generate(),\n      indexDefinitions: recordDefinition.indexDefinitions?.map((indexDefinition) => ({\n        ...indexDefinition,\n        isAutomaticIndex: this.rxRecordDefinitionService.isAutomaticIndex(indexDefinition)\n      })),\n      isAuditRecordDefinition: recordDefinition.isAuditRecordDefinition,\n      joinCriteria: this.getJoinCriteriaExpression(\n        recordDefinition.joinCriteria,\n        recordDefinition.primaryRecordDefinitionName,\n        recordDefinition.secondaryRecordDefinitionName\n      ),\n      joinType: recordDefinition.joinType,\n      lastUpdateTime: recordDefinition.lastUpdateTime\n        ? this.rxDateUtilService.formatDate(recordDefinition.lastUpdateTime, 'medium')\n        : recordDefinition.lastUpdateTime,\n      lastChangedBy: recordDefinition.lastChangedBy,\n      localizableStringsByFieldId: recordDefinition.localizableStringsByFieldId,\n      name: this.rxDefinitionNameService.getDisplayName(recordDefinition.name),\n      overlayDescriptor: recordDefinition.overlayDescriptor,\n      overlayGroupId: recordDefinition.overlayGroupId,\n      overlayOperation: this.rxOverlayService.getOverlayOperation(\n        recordDefinition.overlayGroupId,\n        recordDefinition.overlayDescriptor ? recordDefinition.overlayDescriptor.parentOverlayGroupId : null\n      ),\n      owner: recordDefinition.owner,\n      permissions: recordDefinition.permissions,\n      primaryRecordDefinitionName: recordDefinition.primaryRecordDefinitionName,\n      secondaryRecordDefinitionName: recordDefinition.secondaryRecordDefinitionName,\n      recordInheritanceSelector: {\n        inheritanceDescriptor: recordDefinition.inheritanceDescriptor,\n        inheritanceOptions: {\n          isAbstract: recordDefinition.isAbstract,\n          isSharedInstanceStorage: recordDefinition.isSharedInstanceStorage,\n          isFinal: recordDefinition.isFinal\n        },\n        isInheritingCoreFields: null,\n        inheritedFieldDefinitions: []\n      },\n      recordSearchFields: recordDefinition.fieldDefinitions.filter(\n        (field) => field.searchDefinition\n      ) as IRecordFieldDefinitionModel[],\n      recordInstancePrefix: recordDefinition.recordInstancePrefix,\n      recordTypeName: recordDefinition.recordTypeName,\n      resourceType: recordDefinition.resourceType,\n      rowSecurityPropagations: recordDefinition.rowSecurityPropagations,\n      securityLabels: recordDefinition.securityLabels,\n      shouldExportData: recordDefinition.shouldExportData,\n      tags: recordDefinition.tags,\n      upgradeVersion: recordDefinition.upgradeVersion,\n      version: recordDefinition.version,\n      weightedRelevancyTitle: recordDefinition.weightedRelevancyFields?.TITLE,\n      weightedRelevancyEnvironment: recordDefinition.weightedRelevancyFields?.ENVIRONMENT,\n      weightedRelevancyKeywords: recordDefinition.weightedRelevancyFields?.KEYWORDS,\n      fields: recordDefinition.fieldDefinitions.map((fieldDefinition: IFieldDefinition) => ({\n        allowOtherPropertiesOverlay: fieldDefinition.allowOtherPropertiesOverlay,\n        allowPermissionsEdit: fieldDefinition.allowPermissionsEdit,\n        allowPermissionsOverlay: fieldDefinition.allowPermissionsOverlay,\n        anyUserAllowedToSubmit: fieldDefinition.anyUserAllowedToSubmit,\n        audit: fieldDefinition.auditOption === 'AUDIT_AND_COPY',\n        copy: fieldDefinition.auditOption === 'AUDIT_AND_COPY' || fieldDefinition.auditOption === 'COPY',\n        defaultValue: fieldDefinition.defaultValue,\n        defaultValueByLocale: fieldDefinition.defaultValueByLocale,\n        description: fieldDefinition.description,\n        explicitPermissions: fieldDefinition.explicitPermissions,\n        fieldMapping: fieldDefinition.fieldMapping,\n        fieldOption: fieldDefinition.fieldOption,\n        fieldTypeName: fieldDefinition.fieldTypeName,\n        guid: this.rxGuidService.generate(),\n        id: isNumber(fieldDefinition.id) ? fieldDefinition.id : fieldDefinition.customId || '',\n        isCoreField: this.rxFieldDefinitionService.isCoreField(fieldDefinition),\n        isInherited: fieldDefinition.isInherited,\n        isNewField: false,\n        lastChangedBy: fieldDefinition.lastChangedBy,\n        lastUpdateTime: fieldDefinition.lastUpdateTime,\n        maxLength: fieldDefinition.maxLength,\n        maxSize: fieldDefinition.maxSize,\n        maxValue: fieldDefinition.maxValue,\n        minValue: fieldDefinition.minValue,\n        name: fieldDefinition.name,\n        overlayDescriptor: fieldDefinition.overlayDescriptor,\n        overlayGroupId: fieldDefinition.overlayGroupId,\n        owner: fieldDefinition.owner,\n        permissions: fieldDefinition.permissions,\n        precision: fieldDefinition.precision,\n        resourceType: fieldDefinition.resourceType,\n        searchDefinition: fieldDefinition.searchDefinition,\n        selectionFieldOptionProperties: {\n          defaultValue: fieldDefinition.defaultValue as unknown as number,\n          optionNamesById: fieldDefinition.optionNamesById,\n          optionLabelsById: fieldDefinition.optionLabelsById\n        },\n        shouldPersistEncrypted: fieldDefinition.shouldPersistEncrypted,\n        shouldPersistHashed: fieldDefinition.shouldPersistHashed,\n        namedListDefinition: fieldDefinition.namedListDefinition,\n        pattern: fieldDefinition.pattern,\n        tags: fieldDefinition.tags\n      }))\n    };\n  }\n}\n","import { Injector } from '@angular/core';\nimport { RX_RECORD_DEFINITION, RxRecordDefinitionCacheService } from '@helix/platform/record/api';\nimport {\n  ExpressionOperatorGroup,\n  ExpressionOperatorRowsByGroup,\n  IDataDictionary,\n  IDataDictionaryBranch,\n  IExpressionConfiguratorDefaultPropertyConfig,\n  RxExpressionConfigurator\n} from '@helix/platform/shared/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { iif, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IRecordDefinitionModel } from '../record-designer.types';\n\nexport class RecordDesignerExpressionConfigurator extends RxExpressionConfigurator {\n  rxRecordDefinitionCacheService = this.injector.get(RxRecordDefinitionCacheService);\n  translateService = this.injector.get(TranslateService);\n\n  commonDataDictionary$: Observable<IDataDictionary> = of([]);\n\n  private readonly generalGroup: IDataDictionaryBranch = {\n    label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n    hidden: true,\n    children: [\n      {\n        label: 'NULL',\n        icon: 'd-icon-dollar',\n        expression: '$NULL$'\n      }\n    ]\n  };\n\n  constructor(private injector: Injector) {\n    super();\n  }\n\n  getDefaultConfig(): IExpressionConfiguratorDefaultPropertyConfig {\n    return {\n      ...super.getDefaultConfig(),\n      operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.AllClient)\n    };\n  }\n\n  recordExpressionDataDictionary(\n    definitionModel: IRecordDefinitionModel,\n    bundleId: string\n  ): Observable<IDataDictionary> {\n    const data: IDataDictionaryBranch = {\n      label: this.translateService.instant('com.bmc.arsys.rx.client.common.record-definition.label'),\n      expanded: true\n    };\n\n    return iif(\n      () => !!definitionModel.lastUpdateTime,\n      this.rxRecordDefinitionCacheService.getRecordDefinition(`${bundleId}:${definitionModel.name}`).pipe(\n        map((definition) => ({\n          fields: definition.fieldDefinitions\n        }))\n      ),\n      of(definitionModel)\n    ).pipe(\n      map((model: IRecordDefinitionModel) => {\n        data.children = model.fields\n          .filter((field) => field.resourceType !== RX_RECORD_DEFINITION.dataTypes.attachment.resourceType)\n          .map((field) => ({\n            label: field.name,\n            icon: 'd-icon-arrow_right_square_input',\n            expression: `'${field.name}'`\n          }));\n\n        return [data, this.generalGroup];\n      })\n    );\n  }\n}\n","import { Component, OnDestroy, OnInit, Injector, ChangeDetectionStrategy } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActiveModalRef, DismissReasons, SelectTexts } from '@bmc-ux/adapt-angular';\nimport {\n  IFieldDefinition,\n  IRecordDefinition,\n  RX_RECORD_DEFINITION,\n  RxFieldDefinitionService,\n  RxRecordDefinitionService\n} from '@helix/platform/record/api';\nimport { RxDefinitionNameService } from '@helix/platform/shared/api';\nimport { RxGuidService } from '@helix/platform/utils';\nimport { TranslateService } from '@ngx-translate/core';\nimport { chain, cloneDeep, includes, intersection, map as _map, concat, get, orderBy } from 'lodash';\nimport { combineLatest, Observable, ReplaySubject } from 'rxjs';\nimport { map, shareReplay, startWith, filter as _filter, takeUntil } from 'rxjs/operators';\nimport { RxModalClass } from '@helix/platform/ui-kit';\n\n@Component({\n  selector: 'rx-add-join-fields-editor',\n  templateUrl: './add-join-fields-editor.component.html',\n  styleUrls: ['./add-join-fields-editor.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AddJoinFieldsEditorComponent extends RxModalClass implements OnInit, OnDestroy {\n  private notificationMessage = this.translateService.instant(\n    'com.bmc.arsys.rx.client.record-designer.definition-properties.notification.message'\n  );\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n  primaryRecordDefinitionName = this.activeModalRef.getData().primaryRecordDefinitionName;\n  secondaryRecordDefinitionName = this.activeModalRef.getData().secondaryRecordDefinitionName;\n\n  selectLabel = this.translateService.instant(\n    'com.bmc.arsys.rx.client.record-designer.definition-properties.select.label',\n    {\n      primaryRecordDefinitionName: this.rxDefinitionNameService.getDisplayName(this.primaryRecordDefinitionName),\n      secondaryRecordDefinitionName: this.rxDefinitionNameService.getDisplayName(this.secondaryRecordDefinitionName)\n    }\n  );\n\n  private addedPrimaryFields = this.activeModalRef\n    .getData()\n    .addedFields.filter(\n      (field) =>\n        !includes(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds, field.id) &&\n        get(field, 'fieldMapping.source') === RX_RECORD_DEFINITION.sourceRecordTypes.primary\n    );\n\n  private addedSecondaryFields = this.activeModalRef\n    .getData()\n    .addedFields.filter(\n      (field) =>\n        !includes(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds, field.id) &&\n        get(field, 'fieldMapping.source') === RX_RECORD_DEFINITION.sourceRecordTypes.secondary\n    );\n\n  primarySelectedFieldsFormControl = new FormControl([]);\n  secondarySelectedFieldsFormControl = new FormControl([]);\n\n  private primarySelectedFields$ = this.primarySelectedFieldsFormControl.valueChanges.pipe(\n    startWith([]),\n    shareReplay(1)\n  );\n  private secondarySelectedFields$ = this.secondarySelectedFieldsFormControl.valueChanges.pipe(startWith([]));\n\n  private primaryAvailableFields$: Observable<IFieldDefinition[]> = this.rxRecordDefinitionService\n    .get(this.primaryRecordDefinitionName, {}, true)\n    .pipe(\n      map((recordDefinition) =>\n        orderBy(\n          this.getJoinFieldDefinitions(recordDefinition, RX_RECORD_DEFINITION.sourceRecordTypes.primary).filter(\n            (field) => !includes(_map(this.addedPrimaryFields, this.getSourceFieldId), this.getSourceFieldId(field))\n          ),\n          ['name'],\n          ['asc']\n        )\n      )\n    );\n\n  private secondaryAvailableFields$: Observable<IFieldDefinition[]> = this.rxRecordDefinitionService\n    .get(this.secondaryRecordDefinitionName, {}, true)\n    .pipe(\n      map((recordDefinition) =>\n        orderBy(\n          this.getJoinFieldDefinitions(recordDefinition, RX_RECORD_DEFINITION.sourceRecordTypes.secondary).filter(\n            (field) => !includes(_map(this.addedSecondaryFields, this.getSourceFieldId), this.getSourceFieldId(field))\n          ),\n          ['name'],\n          ['asc']\n        )\n      )\n    );\n\n  private duplicateNames$ = combineLatest([this.primarySelectedFields$, this.secondarySelectedFields$]).pipe(\n    map(([primarySelectedFields, secondarySelectedFields]) => {\n      const selectedPrimaryFieldNames = [\n        ..._map(primarySelectedFields, 'name'),\n        ..._map(this.addedPrimaryFields, 'name')\n      ];\n      const selectedSecondaryFieldNames = [\n        ..._map(secondarySelectedFields, 'name'),\n        ..._map(this.addedSecondaryFields, 'name')\n      ];\n\n      return intersection(selectedPrimaryFieldNames, selectedSecondaryFieldNames).concat(\n        intersection(\n          _map(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFields, 'name'),\n          selectedPrimaryFieldNames.concat(selectedSecondaryFieldNames)\n        )\n      );\n    }),\n    shareReplay(1)\n  );\n\n  private hasDuplicates$ = this.duplicateNames$.pipe(map((duplicateNames) => !!duplicateNames.length));\n\n  private selectedFields$ = combineLatest([\n    this.primarySelectedFields$,\n    this.secondarySelectedFields$,\n    this.duplicateNames$\n  ]).pipe(\n    map(([primarySelectedFields, secondarySelectedFields, duplicateNames]) => {\n      const nonRetainableFieldIds = chain(primarySelectedFields)\n        .concat(secondarySelectedFields)\n        .map('fieldMapping.sourceFieldId')\n        .filter((fieldId, index, selectedFieldIds) => includes(selectedFieldIds, fieldId, index + 1))\n        .value();\n\n      return concat(primarySelectedFields, secondarySelectedFields)\n        .filter((fieldDefinition) => this.rxFieldDefinitionService.isJoinedField(fieldDefinition))\n        .map((fieldDefinition) => {\n          const field = cloneDeep(fieldDefinition);\n\n          if (includes(duplicateNames, field.name)) {\n            if (field.fieldMapping.source === RX_RECORD_DEFINITION.sourceRecordTypes.primary) {\n              field.name = `${field.name} - ${this.rxDefinitionNameService.getDisplayName(\n                this.primaryRecordDefinitionName\n              )}`;\n            } else {\n              field.name = `${field.name} - ${this.rxDefinitionNameService.getDisplayName(\n                this.secondaryRecordDefinitionName\n              )}`;\n            }\n          }\n\n          if (!includes(nonRetainableFieldIds, field.fieldMapping.sourceFieldId)) {\n            field.customId = field.fieldMapping.sourceFieldId;\n          }\n\n          return field;\n        });\n    }),\n    shareReplay(1)\n  );\n\n  vm$ = combineLatest([\n    this.primaryAvailableFields$,\n    this.secondaryAvailableFields$,\n    this.hasDuplicates$,\n    this.selectedFields$\n  ]).pipe(\n    map(([primaryAvailableFields, secondaryAvailableFields, hasDuplicates, selectedFields]) => ({\n      primaryAvailableFields,\n      secondaryAvailableFields,\n      hasDuplicates,\n      selectedFields\n    }))\n  );\n\n  private selectedFields: IFieldDefinition[];\n\n  alertConfig = {\n    content: this.notificationMessage,\n    variant: 'info',\n    type: 'inline',\n    dismissible: false\n  };\n\n  selectTexts: SelectTexts = {\n    headerText: this.translateService.instant(\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.select.header.label'\n    ),\n    numberOptionsText: this.translateService.instant(\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.select.fields.label'\n    ),\n    checked: this.translateService.instant(\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.select.selected.label'\n    ),\n    searchPlaceholder: this.translateService.instant('com.bmc.arsys.rx.client.common.search.label')\n  };\n\n  constructor(\n    private translateService: TranslateService,\n    private rxGuidService: RxGuidService,\n    private rxRecordDefinitionService: RxRecordDefinitionService,\n    public activeModalRef: ActiveModalRef,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxFieldDefinitionService: RxFieldDefinitionService,\n    protected injector: Injector\n  ) {\n    super(activeModalRef, injector);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.selectedFields$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((selectedFields) => (this.selectedFields = selectedFields));\n  }\n\n  save(): void {\n    this.activeModalRef.close(this.selectedFields);\n  }\n\n  cancel(): void {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n\n  optionFormatter(field: IFieldDefinition): string {\n    return field.name;\n  }\n\n  private getSourceFieldId(field: IFieldDefinition): string {\n    return field.fieldMapping.sourceFieldId;\n  }\n\n  private getJoinFieldDefinitions(record: IRecordDefinition, sourceType: string): IFieldDefinition[] {\n    return _map(record?.fieldDefinitions, (fieldDefinition) => {\n      const joinFieldDefinition = cloneDeep(fieldDefinition);\n\n      joinFieldDefinition.fieldMapping = {\n        resourceType: RX_RECORD_DEFINITION.joinFieldMapping,\n        sourceFieldId: fieldDefinition.id,\n        source: sourceType\n      };\n\n      joinFieldDefinition.id = this.rxGuidService.generate('rx-');\n\n      // Join record should not carry forward FTS properties from primary and secondary record.\n      if (joinFieldDefinition.searchDefinition) {\n        joinFieldDefinition.searchDefinition = null;\n      }\n\n      delete joinFieldDefinition.lastUpdateTime;\n\n      return joinFieldDefinition;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <div class=\"modal-body d-flex flex-column mh-100\">\n    <div>\n      <adapt-alert *ngIf=\"vm.hasDuplicates\" class=\"mb-3\" [config]=\"alertConfig\"></adapt-alert>\n    </div>\n\n    <label>{{ selectLabel }}</label>\n\n    <div class=\"d-flex flex-row select-container\">\n      <adapt-rx-select\n        rx-id=\"primary-fields\"\n        class=\"d-flex flex-column h-100\"\n        *ngIf=\"vm.primaryAvailableFields\"\n        [inline]=\"true\"\n        [multiple]=\"true\"\n        [options]=\"vm.primaryAvailableFields\"\n        [optionFormatter]=\"optionFormatter\"\n        [selectAllButton]=\"true\"\n        [deselectAllButton]=\"true\"\n        [texts]=\"selectTexts\"\n        [popupMaxHeight]=\"'100%'\"\n        [formControl]=\"primarySelectedFieldsFormControl\"\n        enableFilter=\"true\"\n        [label]=\"'com.bmc.arsys.rx.client.record-designer.definition-properties.primary.label' | translate\"\n      >\n      </adapt-rx-select>\n\n      <adapt-rx-select\n        rx-id=\"secondary-fields\"\n        class=\"ml-3 d-flex flex-column h-100\"\n        *ngIf=\"vm.secondaryAvailableFields\"\n        [inline]=\"true\"\n        [multiple]=\"true\"\n        [options]=\"vm.secondaryAvailableFields\"\n        [optionFormatter]=\"optionFormatter\"\n        [selectAllButton]=\"true\"\n        [deselectAllButton]=\"true\"\n        [texts]=\"selectTexts\"\n        [popupMaxHeight]=\"'100%'\"\n        [formControl]=\"secondarySelectedFieldsFormControl\"\n        enableFilter=\"true\"\n        [label]=\"'com.bmc.arsys.rx.client.record-designer.definition-properties.secondary.label' | translate\"\n      >\n      </adapt-rx-select>\n    </div>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button\n      adapt-button\n      type=\"button\"\n      btn-type=\"primary\"\n      rx-id=\"save-button\"\n      [disabled]=\"vm.selectedFields.length === 0\"\n      (click)=\"save()\"\n    >\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\n    </button>\n\n    <button adapt-button type=\"button\" btn-type=\"secondary\" (click)=\"cancel()\" rx-id=\"cancel-button\">\n      {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\n    </button>\n  </div>\n</ng-container>\n","import { DatePipe } from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Injector,\n  Input,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { AdaptIsPanelOpenedCurrentlyModel, AdaptSidebarComponent } from '@bmc-ux/adapt-angular';\nimport { ColumnConfig, DataCellTemplateParams } from '@bmc-ux/adapt-table';\nimport {\n  IRecordDefinition,\n  RX_RECORD_DEFINITION,\n  RxFieldDefinitionService,\n  RxRecordDefinitionCacheService,\n  RxRecordDefinitionService\n} from '@helix/platform/record/api';\nimport {\n  ExpressionOperatorGroup,\n  ExpressionOperatorRowsByGroup,\n  IDesignerConfiguration,\n  IFormBuilderConfig,\n  IFormBuilderEvent,\n  IFormSectionBuilderConfig,\n  IPlainObject,\n  RxDefinitionNameService,\n  RxGlobalCacheService,\n  RxNotificationService,\n  RxOverlayService\n} from '@helix/platform/shared/api';\nimport {\n  IBreadcrumbItem,\n  IValidationIssue,\n  IValidationIssueSection,\n  RxModalService,\n  ValidationIssueType\n} from '@helix/platform/ui-kit';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  capitalize,\n  chain,\n  find,\n  includes,\n  intersectionBy,\n  invert,\n  isEmpty,\n  isNull,\n  isNumber,\n  map as _map,\n  noop,\n  some\n} from 'lodash';\nimport { combineLatest, from, Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  pluck,\n  scan,\n  shareReplay,\n  skip,\n  startWith,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n  withLatestFrom\n} from 'rxjs/operators';\nimport {\n  IRecordDefinitionModel,\n  IRecordFieldDefinitionGridRow,\n  IRecordFieldDefinitionModel\n} from '../record-designer.types';\nimport { RxFieldDefinitionManagerService } from './services/field-definition-manager.service';\nimport * as RecordDesignerActions from './+state/record-designer.actions';\nimport { Store } from '@ngrx/store';\nimport {\n  bundleIdSelector,\n  definitionModelFromDefinitionSelector,\n  definitionModelSelector,\n  inspectorTabIndexSelector,\n  isDesignModeSelector,\n  isDirtySelector,\n  savedDefinitionNameSelector,\n  selectedFieldGuidSelector\n} from './+state/record-designer.selectors';\nimport { RxRecordDefinitionValidatorService } from './record-definition-validator.service';\nimport { RxRecordDesignerInspectorService } from './record-designer-inspector.service';\nimport { InheritanceIssueInfoComponent } from './inheritance-issue-info/inheritance-issue-info.component';\nimport { RxRecordDesignerService } from './record-designer.service';\nimport {\n  IExpressionEditorPropertyChange,\n  RX_EXPRESSION_EDITOR,\n  RxExpressionEditorService\n} from '@helix/platform/shared/components';\nimport { RecordDesignerExpressionConfigurator } from './record-designer-expression-configurator.class';\nimport { RX_RECORD_DESIGNER } from './record-designer.constant';\nimport { AddJoinFieldsEditorComponent } from './add-join-fields-editor/add-join-fields-editor.component';\nimport { RxGuidService } from '@helix/platform/utils';\n\n@Component({\n  selector: 'rx-record-designer',\n  templateUrl: './record-designer.component.html',\n  styleUrls: ['./record-designer.component.scss']\n})\nexport class RecordDesignerComponent implements OnInit {\n  @ViewChild(AdaptSidebarComponent, { static: false })\n  adaptSidebarComponent: AdaptSidebarComponent;\n\n  @ViewChild('requiredCellTemplate', { static: true })\n  requiredCellTemplate: TemplateRef<DataCellTemplateParams>;\n\n  @ViewChild('dataTypeCellTemplate', { static: true })\n  dataTypeCellTemplate: TemplateRef<DataCellTemplateParams>;\n\n  @ViewChild('inheritedCellTemplate', { static: true })\n  inheritedCellTemplate: TemplateRef<DataCellTemplateParams>;\n\n  @Input()\n  configuration: IDesignerConfiguration;\n\n  @Output()\n  definitionSaved: EventEmitter<string> = new EventEmitter();\n\n  @Output()\n  definitionErrorLoading: EventEmitter<void> = new EventEmitter();\n\n  @Output()\n  closeDesigner: EventEmitter<void> = new EventEmitter<void>();\n\n  newTitle = `<${this.translateService.instant('com.bmc.arsys.rx.client.record-designer.new-record.title')}>`;\n  definition: IRecordDefinition = null;\n  columns: ColumnConfig[];\n  private isInheritColumnHidden: boolean = true;\n  private isJoinRecordDefinition: boolean = false;\n\n  dataTypes = [\n    RX_RECORD_DEFINITION.dataTypes.attachment,\n    RX_RECORD_DEFINITION.dataTypes.boolean,\n    RX_RECORD_DEFINITION.dataTypes.character,\n    RX_RECORD_DEFINITION.dataTypes.dateOnly,\n    RX_RECORD_DEFINITION.dataTypes.dateTime,\n    RX_RECORD_DEFINITION.dataTypes.localizedCharacter,\n    RX_RECORD_DEFINITION.dataTypes.timeOnly,\n    RX_RECORD_DEFINITION.dataTypes.integer,\n    RX_RECORD_DEFINITION.dataTypes.selection,\n    RX_RECORD_DEFINITION.dataTypes.decimal,\n    RX_RECORD_DEFINITION.dataTypes.real\n  ].sort((a, b) => a.displayName.localeCompare(b.displayName));\n\n  private inspectorTabIndexSubject: Subject<number> = new Subject();\n  private inspectorTabIndex$ = this.store$.select(inspectorTabIndexSelector);\n  private selectedFieldGuid$ = this.store$.select(selectedFieldGuidSelector);\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n  private inspectorFocusEditorSubject = new Subject<{ editorName: string; data: IPlainObject }>();\n  inspectorFocusEditor$ = this.inspectorFocusEditorSubject.asObservable();\n  private bundleId$ = this.store$.select(bundleIdSelector);\n  private isDesignMode$ = this.store$.select(isDesignModeSelector);\n  private definitionModel$: Observable<IRecordDefinitionModel> = this.store$.select(definitionModelSelector);\n  private isDirty$: Observable<boolean> = this.store$.select(isDirtySelector);\n\n  private bundleFriendlyName$: Observable<string> = this.bundleId$.pipe(\n    switchMap((bundleId: string) => this.rxGlobalCacheService.getBundleFriendlyName(bundleId))\n  );\n\n  private definitionDisplayName$: Observable<string> = this.definitionModel$.pipe(\n    map((updatedModel: IRecordDefinition) => this.rxDefinitionNameService.getDisplayName(updatedModel.name)),\n    startWith(null)\n  );\n\n  private definitionModelFromDefinition$: Observable<IRecordDefinitionModel> = this.store$\n    .select(definitionModelFromDefinitionSelector)\n    .pipe(shareReplay(1));\n\n  private primaryRecordDefinition$ = this.definitionModelFromDefinition$.pipe(\n    pluck('primaryRecordDefinitionName'),\n    distinctUntilChanged(),\n    filter<string>(Boolean),\n    switchMap((primaryRecordDefinitionName) =>\n      this.rxRecordDefinitionCacheService.getRecordDefinition(primaryRecordDefinitionName)\n    )\n  );\n\n  private secondaryRecordDefinition$ = this.definitionModelFromDefinition$.pipe(\n    pluck('secondaryRecordDefinitionName'),\n    distinctUntilChanged(),\n    filter<string>(Boolean),\n    switchMap((secondaryRecordDefinitionName) =>\n      this.rxRecordDefinitionCacheService.getRecordDefinition(secondaryRecordDefinitionName)\n    )\n  );\n\n  private joinRecordDataDictionary$ = combineLatest([\n    this.primaryRecordDefinition$,\n    this.secondaryRecordDefinition$\n  ]).pipe(\n    map(([primaryRecordDefinition, secondaryRecordDefinition]) => [\n      {\n        recordDefinitionName: this.rxDefinitionNameService.getDisplayName(primaryRecordDefinition.name),\n        label: `(${this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.join-record-wizard.join-criteria.primary.label'\n        )})`,\n        type: RX_RECORD_DEFINITION.sourceRecordTypes.primary,\n        fieldDefinitions: primaryRecordDefinition.fieldDefinitions\n      },\n      {\n        recordDefinitionName: this.rxDefinitionNameService.getDisplayName(secondaryRecordDefinition.name),\n        label: `(${this.translateService.instant(\n          'com.bmc.arsys.rx.innovation-studio.join-record-wizard.join-criteria.secondary.label'\n        )})`,\n        type: RX_RECORD_DEFINITION.sourceRecordTypes.secondary,\n        fieldDefinitions: secondaryRecordDefinition.fieldDefinitions\n      }\n    ]),\n    map((records) => {\n      return records.map((record) => ({\n        label: `${record.recordDefinitionName} ${record.label}`,\n        expanded: true,\n        children: chain(record.fieldDefinitions)\n          .map((fieldDefinition) => {\n            if (fieldDefinition.resourceType !== RX_RECORD_DEFINITION.dataTypes.attachment.resourceType) {\n              return {\n                label: `${record.recordDefinitionName}.${fieldDefinition.name}`,\n                icon: 'd-icon-field_text',\n                expression: `\\${${record.recordDefinitionName}.${record.type}.${fieldDefinition.name}}`\n              };\n            }\n          })\n          .compact()\n          .sortBy((item) => item.label.toLocaleLowerCase())\n          .value()\n      }));\n    })\n  );\n\n  private isNewDefinition$: Observable<boolean> = this.definitionModelFromDefinition$.pipe(\n    map((definitionModel: IRecordDefinitionModel) => !Boolean(definitionModel.lastUpdateTime))\n  );\n\n  private isJoinRecordDefinition$: Observable<boolean> = this.definitionModelFromDefinition$.pipe(\n    map((definitionModel: IRecordDefinitionModel) => this.rxRecordDefinitionService.isJoinRecord(definitionModel)),\n    shareReplay(1)\n  );\n\n  private definitionFromDefinitionModel$: Observable<IRecordDefinition> = combineLatest([\n    this.definitionModel$,\n    this.bundleId$\n  ]).pipe(\n    map(([definitionModel, bundleId]: [IRecordDefinitionModel, string]) =>\n      this.rxRecordDesignerService.getDefinitionFromDefinitionModel(definitionModel, bundleId)\n    )\n  );\n\n  private isFieldsCustomizationAllowed$: Observable<boolean> = this.definitionFromDefinitionModel$.pipe(\n    map((recordDefinition) => this.rxOverlayService.isCustomizationEnabled('allowFieldsOverlay', recordDefinition)),\n    distinctUntilChanged(),\n    shareReplay(1)\n  );\n\n  private isPropertiesCustomizationAllowed$: Observable<boolean> = this.definitionFromDefinitionModel$.pipe(\n    map((recordDefinition) =>\n      this.rxOverlayService.isCustomizationEnabled('allowOtherPropertiesOverlay', recordDefinition)\n    ),\n    distinctUntilChanged(),\n    shareReplay(1)\n  );\n\n  private isPermissionsCustomizationAllowed$: Observable<boolean> = this.definitionFromDefinitionModel$.pipe(\n    map((recordDefinition) =>\n      this.rxOverlayService.isCustomizationEnabled('allowPermissionsOverlay', recordDefinition)\n    ),\n    distinctUntilChanged(),\n    shareReplay(1)\n  );\n\n  private isIndexCustomizationAllowed$: Observable<boolean> = this.definitionFromDefinitionModel$.pipe(\n    map((recordDefinition) => this.rxOverlayService.isCustomizationEnabled('allowIndexesOverlay', recordDefinition)),\n    distinctUntilChanged(),\n    shareReplay(1)\n  );\n\n  private areNewDefinitionsAllowed$ = this.bundleId$.pipe(\n    switchMap((bundleId) => this.rxOverlayService.areNewDefinitionsAllowed(bundleId))\n  );\n\n  private isReadOnly$ = this.definitionFromDefinitionModel$.pipe(\n    filter((definition) => !!definition.lastUpdateTime),\n    withLatestFrom(\n      this.areNewDefinitionsAllowed$,\n      this.isFieldsCustomizationAllowed$,\n      this.isPropertiesCustomizationAllowed$,\n      this.isPermissionsCustomizationAllowed$,\n      this.isIndexCustomizationAllowed$\n    ),\n    map(\n      ([\n        definition,\n        areNewDefinitionsAllowed,\n        isFieldsCustomizationAllowed,\n        isPropertiesCustomizationAllowed,\n        isPermissionsCustomizationAllowed,\n        isIndexCustomizationAllowed\n      ]) =>\n        !areNewDefinitionsAllowed ||\n        (!isFieldsCustomizationAllowed &&\n          !isPropertiesCustomizationAllowed &&\n          !isPermissionsCustomizationAllowed &&\n          !isIndexCustomizationAllowed)\n    ),\n    tap((isReadOnly: boolean) => {\n      if (isReadOnly) {\n        this.rxNotificationService.addWarningMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.designer.read-only-definition-warning.message')\n        );\n      }\n    }),\n    startWith(false),\n    shareReplay(1)\n  );\n\n  public definitionInspectorConfig$: Observable<IFormBuilderConfig> = combineLatest([\n    this.isNewDefinition$,\n    this.definitionModel$,\n    this.definitionModelFromDefinition$,\n    this.bundleId$,\n    this.isPropertiesCustomizationAllowed$,\n    this.isIndexCustomizationAllowed$,\n    this.isPermissionsCustomizationAllowed$,\n    this.isFieldsCustomizationAllowed$,\n    this.isReadOnly$\n  ]).pipe(\n    map(\n      ([\n        isNewDefinition,\n        definitionModel,\n        definitionModelFromDefinition,\n        bundleId,\n        isPropertiesCustomizationAllowed,\n        isIndexCustomizationAllowed,\n        isPermissionsCustomizationAllowed,\n        isFieldsCustomizationAllowed,\n        isReadOnly\n      ]: [\n        boolean,\n        IRecordDefinitionModel,\n        IRecordDefinitionModel,\n        string,\n        boolean,\n        boolean,\n        boolean,\n        boolean,\n        boolean\n      ]) =>\n        this.rxRecordDesignerInspectorService.getDefinitionInspectorConfig(\n          isNewDefinition,\n          definitionModel,\n          definitionModelFromDefinition,\n          bundleId,\n          isPropertiesCustomizationAllowed,\n          isIndexCustomizationAllowed,\n          isPermissionsCustomizationAllowed,\n          isFieldsCustomizationAllowed,\n          isReadOnly,\n          this.expressionConfigurator\n        )\n    )\n  );\n\n  private fieldGridRows$: Observable<IRecordFieldDefinitionGridRow[]> = this.definitionModel$.pipe(\n    map((model: IRecordDefinitionModel) =>\n      model.fields.map((field: IRecordFieldDefinitionModel) => {\n        const invertedSourceRecordTypes = invert(RX_RECORD_DEFINITION.sourceRecordTypes);\n        const type = invertedSourceRecordTypes[field.fieldMapping?.source];\n\n        return {\n          guid: field.guid,\n          name: field.name,\n          id: isNumber(field.id) ? field.id : '',\n          isInherited: field.isInherited,\n          fieldOption: field.fieldOption,\n          defaultValue:\n            field.resourceType === RX_RECORD_DEFINITION.resourceTypes.selection\n              ? field.selectionFieldOptionProperties.optionNamesById?.[\n                  field.selectionFieldOptionProperties.defaultValue\n                ]\n              : field.resourceType === RX_RECORD_DEFINITION.resourceTypes.dateOnly\n              ? this.datePipe.transform(field.defaultValue)\n              : field.resourceType === RX_RECORD_DEFINITION.resourceTypes.dateTime\n              ? this.datePipe.transform(field.defaultValue, 'medium')\n              : field.defaultValue,\n          resourceType: this.translateService.instant(\n            (find(RX_RECORD_DEFINITION.dataTypes, { resourceType: field.resourceType }) as any).labelKey\n          ),\n          isCoreField: this.rxFieldDefinitionService.isCoreField(field),\n          sourceRecord: includes(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds, field.id)\n            ? ''\n            : this.translateService.instant('com.bmc.arsys.rx.client.record-designer.grid.column.source-record.label', {\n                recordName: this.rxDefinitionNameService.getDisplayName(model[type + 'RecordDefinitionName']),\n                recordType: capitalize(type)\n              })\n        };\n      })\n    )\n  );\n\n  private isExternalRecordDefinition$: Observable<boolean> = this.definitionModel$.pipe(\n    map((definitionModel: IRecordDefinitionModel) => this.rxRecordDefinitionService.isExternalRecord(definitionModel))\n  );\n\n  private selectedFieldGridRows$: Observable<IRecordFieldDefinitionGridRow[]> = this.selectedFieldGuid$.pipe(\n    withLatestFrom(this.fieldGridRows$),\n    map(([guid, fieldGridRows]) => (guid ? [find(fieldGridRows, { guid })] : [])),\n    startWith([])\n  );\n\n  private selectedFieldModel$: Observable<IRecordFieldDefinitionModel> = combineLatest([\n    this.selectedFieldGuid$,\n    this.definitionModel$\n  ]).pipe(\n    map(([guid, definitionModel]: [string, IRecordDefinitionModel]) => find(definitionModel.fields, { guid })),\n    startWith(null),\n    shareReplay(1)\n  );\n\n  private selectedFieldInspectorConfig$: Observable<IFormBuilderConfig> = this.selectedFieldModel$.pipe(\n    withLatestFrom(this.definitionModel$, this.isReadOnly$),\n    map(([fieldModel, definitionModel, isReadOnly]) =>\n      fieldModel\n        ? this.rxFieldDefinitionManagerService.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly)\n        : null\n    )\n  );\n\n  private isJoinOrExternalRecord$: Observable<boolean> = combineLatest([\n    this.isJoinRecordDefinition$,\n    this.isExternalRecordDefinition$\n  ]).pipe(\n    map(\n      ([isJoinRecordDefinition, isExternalRecordDefinition]: [boolean, boolean]) =>\n        isJoinRecordDefinition || isExternalRecordDefinition\n    )\n  );\n\n  private validationIssues$: Observable<IValidationIssueSection[]> = this.definitionModel$.pipe(\n    map((definitionModel: IRecordDefinitionModel) => this.rxRecordDefinitionValidatorService.validate(definitionModel))\n  );\n\n  private hasValidationErrors$: Observable<boolean> = this.validationIssues$.pipe(\n    map((issueSections: IValidationIssueSection[]) =>\n      some(issueSections, {\n        issues: [{ type: ValidationIssueType.Error }]\n      })\n    ),\n    distinctUntilChanged()\n  );\n\n  private hasValidationWarnings$: Observable<boolean> = this.validationIssues$.pipe(\n    map((issueSections: IValidationIssueSection[]) =>\n      some(issueSections, {\n        issues: [{ type: ValidationIssueType.Warning }]\n      })\n    ),\n    distinctUntilChanged()\n  );\n\n  private isSaveButtonDisabled$: Observable<boolean> = combineLatest([\n    this.hasValidationErrors$,\n    this.isDirty$,\n    this.isReadOnly$\n  ]).pipe(\n    map(([hasValidationErrors, isDirty, isReadOnly]) => hasValidationErrors || !isDirty || isReadOnly),\n    startWith(true)\n  );\n\n  private breadcrumbItems$: Observable<IBreadcrumbItem[]> = combineLatest([\n    this.definitionDisplayName$,\n    this.selectedFieldModel$\n  ]).pipe(\n    map(([definitionDisplayName, selectedFieldModel]) =>\n      [\n        {\n          data: null,\n          label:\n            this.rxDefinitionNameService.getDisplayName(this.definition?.name) || definitionDisplayName || this.newTitle\n        },\n        { data: null, label: selectedFieldModel?.name }\n      ].filter((item: IBreadcrumbItem) => item.label)\n    )\n  );\n\n  private definitionForJsonViewer$: Observable<IRecordDefinition> = this.isDesignMode$.pipe(\n    switchMap((isDesignMode: boolean) => (isDesignMode ? of(null) : this.definitionFromDefinitionModel$))\n  );\n\n  overriddenRecordProperties$: Observable<any> = combineLatest([\n    this.definitionModelFromDefinition$,\n    this.definitionModel$\n  ]).pipe(\n    scan((acc, [definitionModelFromDefinition, definitionModel]) => {\n      const overriddenRecordFields = intersectionBy(\n        definitionModelFromDefinition.fields,\n        definitionModel.recordInheritanceSelector.inheritedFieldDefinitions,\n        'id'\n      );\n\n      acc = { ...acc, fields: _map(overriddenRecordFields, 'name').join(', ') };\n      return acc;\n    }, {})\n  );\n\n  private isDeleteFieldButtonDisabled$: Observable<boolean> = this.selectedFieldModel$.pipe(\n    withLatestFrom(this.definitionModel$),\n    map(\n      ([selectedFieldModel, definitionModel]: [IRecordFieldDefinitionModel, IRecordDefinitionModel]) =>\n        !selectedFieldModel ||\n        definitionModel.isAuditRecordDefinition ||\n        this.rxFieldDefinitionService.isCoreField(selectedFieldModel) ||\n        selectedFieldModel.isInherited ||\n        !this.rxFieldDefinitionService.isFieldInUserOverlay(selectedFieldModel)\n    )\n  );\n\n  private isCopyFieldButtonDisabled$: Observable<boolean> = this.selectedFieldModel$.pipe(\n    withLatestFrom(this.isFieldsCustomizationAllowed$, this.bundleId$),\n    map(\n      ([selectedFieldModel, isFieldsCustomizationAllowed, bundleId]) =>\n        !selectedFieldModel ||\n        this.rxFieldDefinitionService.isCoreField(selectedFieldModel) ||\n        selectedFieldModel.isInherited ||\n        !isFieldsCustomizationAllowed ||\n        !this.rxOverlayService.isBundleEditable(bundleId)\n    )\n  );\n\n  private expressionConfigurator = new RecordDesignerExpressionConfigurator(this.injector);\n\n  private dataDictionary$ = this.definitionModelFromDefinition$.pipe(\n    withLatestFrom(this.store$.select(bundleIdSelector)),\n    takeUntil(this.destroyed$),\n    switchMap(([definitionModel, bundleId]) =>\n      this.expressionConfigurator.recordExpressionDataDictionary(definitionModel, bundleId)\n    )\n  );\n\n  private isInheritColumnHidden$ = this.definitionModel$.pipe(\n    map((definitionModel) => isEmpty(definitionModel.recordInheritanceSelector?.inheritedFieldDefinitions)),\n    distinctUntilChanged(),\n    startWith(true)\n  );\n\n  vm$ = combineLatest([\n    this.breadcrumbItems$,\n    this.bundleFriendlyName$,\n    this.definitionDisplayName$,\n    this.definitionInspectorConfig$,\n    this.definitionModel$,\n    this.hasValidationErrors$,\n    this.hasValidationWarnings$,\n    this.validationIssues$,\n    this.isSaveButtonDisabled$,\n    this.fieldGridRows$,\n    this.selectedFieldGridRows$,\n    this.definitionForJsonViewer$,\n    this.isDesignMode$,\n    this.selectedFieldModel$,\n    this.selectedFieldInspectorConfig$,\n    this.selectedFieldGuid$,\n    this.isFieldsCustomizationAllowed$,\n    this.isDeleteFieldButtonDisabled$,\n    this.isCopyFieldButtonDisabled$,\n    this.isJoinOrExternalRecord$,\n    this.isReadOnly$\n  ]).pipe(\n    map(\n      ([\n        breadcrumbItems,\n        bundleFriendlyName,\n        definitionDisplayName,\n        definitionInspectorConfig,\n        definitionModel,\n        hasValidationErrors,\n        hasValidationWarnings,\n        validationIssues,\n        isSaveButtonDisabled,\n        fieldGridRows,\n        selectedFieldGridRows,\n        definitionForJsonViewer,\n        isDesignMode,\n        selectedFieldModel,\n        selectedFieldInspectorConfig,\n        selectedFieldGuid,\n        isFieldsCustomizationAllowed,\n        isDeleteFieldButtonDisabled,\n        isCopyFieldButtonDisabled,\n        isJoinOrExternalRecord,\n        isReadOnly\n      ]) => ({\n        breadcrumbItems,\n        bundleFriendlyName,\n        definitionDisplayName,\n        definitionInspectorConfig,\n        definitionModel,\n        hasValidationErrors,\n        hasValidationWarnings,\n        validationIssues,\n        isSaveButtonDisabled,\n        fieldGridRows,\n        selectedFieldGridRows,\n        definitionForJsonViewer,\n        isDesignMode,\n        selectedFieldModel,\n        selectedFieldInspectorConfig,\n        selectedFieldGuid,\n        isFieldsCustomizationAllowed,\n        isDeleteFieldButtonDisabled,\n        isCopyFieldButtonDisabled,\n        isJoinOrExternalRecord,\n        isReadOnly\n      })\n    )\n  );\n\n  constructor(\n    private store$: Store<any>,\n    private rxNotificationService: RxNotificationService,\n    private rxOverlayService: RxOverlayService,\n    private rxRecordDefinitionValidatorService: RxRecordDefinitionValidatorService,\n    private rxRecordDesignerInspectorService: RxRecordDesignerInspectorService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxFieldDefinitionManagerService: RxFieldDefinitionManagerService,\n    private rxRecordDefinitionService: RxRecordDefinitionService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private translateService: TranslateService,\n    private datePipe: DatePipe,\n    private rxModalService: RxModalService,\n    private rxFieldDefinitionService: RxFieldDefinitionService,\n    private rxRecordDesignerService: RxRecordDesignerService,\n    private rxExpressionEditorService: RxExpressionEditorService,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService,\n    private rxGuidService: RxGuidService,\n    private injector: Injector\n  ) {\n    this.rxRecordDefinitionCacheService.registerConsumer(this.destroyed$);\n  }\n\n  ngOnInit(): void {\n    this.inspectorTabIndex$.pipe(skip(1), takeUntil(this.destroyed$)).subscribe((inspectorTabIndex: number) => {\n      if (!isNull(inspectorTabIndex)) {\n        this.adaptSidebarComponent.openPanel(inspectorTabIndex);\n      }\n    });\n\n    this.inspectorTabIndexSubject.pipe(skip(1), takeUntil(this.destroyed$)).subscribe((inspectorTabIndex: number) => {\n      this.store$.dispatch(RecordDesignerActions.setInspectorTabIndex({ inspectorTabIndex }));\n    });\n\n    this.store$\n      .select(savedDefinitionNameSelector)\n      .pipe(skip(1), takeUntil(this.destroyed$))\n      .subscribe((savedDefinitionName: string) => {\n        this.definitionSaved.emit(savedDefinitionName);\n      });\n\n    this.expressionConfigurator.configureForProperty({\n      propertyPath: RX_RECORD_DESIGNER.archiveDataCriteriaPath,\n      dataDictionary$: this.dataDictionary$,\n      operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.All)\n    });\n\n    this.expressionConfigurator.configureForProperty({\n      propertyPath: RX_RECORD_DESIGNER.joinCriteriaPath,\n      dataDictionary$: this.joinRecordDataDictionary$,\n      operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.All)\n    });\n\n    combineLatest([this.isInheritColumnHidden$, this.isJoinRecordDefinition$])\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(([isInheritColumnHidden, isJoinRecordDefinition]) => {\n        this.isInheritColumnHidden = isInheritColumnHidden;\n        this.isJoinRecordDefinition = isJoinRecordDefinition;\n      });\n\n    this.columns = [\n      {\n        field: 'name',\n        header: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label')\n      },\n      {\n        field: 'sourceRecord',\n        header: this.translateService.instant('Source Record'),\n        hidden: () => !this.isJoinRecordDefinition\n      },\n      {\n        field: 'id',\n        header: this.translateService.instant('com.bmc.arsys.rx.client.common.field-id.label')\n      },\n      {\n        field: 'isInherited',\n        header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.grid.column.inherited.title'),\n        hidden: () => this.isInheritColumnHidden,\n        cellTemplate: this.inheritedCellTemplate\n      },\n      {\n        field: 'resourceType',\n        header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.grid.column.data-type.title'),\n        cellTemplate: this.dataTypeCellTemplate\n      },\n      {\n        field: 'fieldOption',\n        header: this.translateService.instant(\n          'com.bmc.arsys.rx.client.record-designer.grid.column.is-required-field.title'\n        ),\n        cellTemplate: this.requiredCellTemplate\n      },\n      {\n        field: 'defaultValue',\n        header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.grid.column.default-value.title')\n      }\n    ];\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.configuration.currentValue) {\n      this.store$.dispatch(RecordDesignerActions.init({ payload: this.configuration }));\n    }\n  }\n\n  onEditorEvent(event: IFormBuilderEvent): void {\n    if (\n      event.type === RX_EXPRESSION_EDITOR.events.openExpressionEditor &&\n      event.payload.propertyPath === RX_RECORD_DESIGNER.archiveDataCriteriaPath\n    ) {\n      this.definitionModel$.pipe(take(1)).subscribe((definitionModel) => {\n        this.rxExpressionEditorService\n          .openEditor({\n            property: {\n              path: RX_RECORD_DESIGNER.archiveDataCriteriaPath,\n              value: definitionModel.archiveDataCriteria,\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.record-filter.label'\n              )\n            },\n            isReadOnly: event.payload.isReadOnly,\n            expressionConfigurator: this.expressionConfigurator,\n            legend: [\n              {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.expression-editor.legend.field-name.label'\n                ),\n                icon: 'd-icon-arrow_right_square_input'\n              }\n            ]\n          })\n          .subscribe((expression: IExpressionEditorPropertyChange) => {\n            this.store$.dispatch(\n              RecordDesignerActions.updateDefinitionModelFromDesigner({\n                definitionModelFromDesigner: { archiveDataCriteria: expression.value } as IRecordDefinitionModel\n              })\n            );\n          });\n      });\n    }\n    if (\n      event.type === RX_EXPRESSION_EDITOR.events.openExpressionEditor &&\n      event.payload.propertyPath === RX_RECORD_DESIGNER.joinCriteriaPath\n    ) {\n      this.definitionModel$.pipe(take(1)).subscribe((definitionModel) => {\n        this.rxExpressionEditorService\n          .openEditor({\n            property: {\n              path: RX_RECORD_DESIGNER.joinCriteriaPath,\n              value: definitionModel.joinCriteria,\n              label: this.translateService.instant(\n                'com.bmc.arsys.rx.innovation-studio.join-record-wizard.join-criteria.on-statement.label'\n              )\n            },\n            isReadOnly: event.payload.isReadOnly,\n            expressionConfigurator: this.expressionConfigurator,\n            legend: [\n              {\n                label: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.expression-editor.legend.field-name.label'\n                ),\n                icon: 'd-icon-arrow_right_square_input'\n              }\n            ]\n          })\n          .subscribe((expression: IExpressionEditorPropertyChange) => {\n            this.store$.dispatch(\n              RecordDesignerActions.updateDefinitionModelFromDesigner({\n                definitionModelFromDesigner: { joinCriteria: expression.value } as IRecordDefinitionModel\n              })\n            );\n          });\n      });\n    }\n  }\n\n  onSelectionChange(selectedFieldModel: IRecordFieldDefinitionModel) {\n    this.store$.dispatch(RecordDesignerActions.setSelectedFieldGuid({ guid: selectedFieldModel?.guid }));\n  }\n\n  onDefinitionModelChange(newDefinitionModel: IRecordDefinitionModel): void {\n    this.store$.dispatch(\n      RecordDesignerActions.updateDefinitionModelFromDesigner({\n        definitionModelFromDesigner: newDefinitionModel\n      })\n    );\n  }\n\n  onSelectedFieldModelChange(newSelectedFieldModel: IRecordFieldDefinitionModel): void {\n    this.store$.dispatch(RecordDesignerActions.updateSelectedFieldModel({ selectedFieldModel: newSelectedFieldModel }));\n  }\n\n  toggleDesignMode(): void {\n    this.store$.dispatch(RecordDesignerActions.toggleDesignMode());\n  }\n\n  onSidebarToggle(event: AdaptIsPanelOpenedCurrentlyModel): void {\n    this.inspectorTabIndexSubject.next(event.id);\n  }\n\n  addNewField(resourceType: string): void {\n    this.store$.dispatch(RecordDesignerActions.createNewFieldModel({ resourceType: resourceType }));\n  }\n\n  openAddNewField(): void {\n    this.definitionModel$.pipe(take(1)).subscribe((definitionModel) => {\n      this.rxModalService\n        .openModal({\n          title: this.translateService.instant(\n            'com.bmc.arsys.rx.client.record-designer.definition-properties.add-fields.title'\n          ),\n          content: AddJoinFieldsEditorComponent,\n          size: 'rx-md',\n          blockKeyboard: false,\n          data: {\n            primaryRecordDefinitionName: definitionModel.primaryRecordDefinitionName,\n            secondaryRecordDefinitionName: definitionModel.secondaryRecordDefinitionName,\n            addedFields: definitionModel.fields\n          }\n        })\n        .then((fieldModels) => {\n          const newFieldModels = fieldModels.map((newField) => ({\n            ...newField,\n            guid: this.rxGuidService.generate(),\n            id: null,\n            defaultValueByLocale: {},\n            selectionFieldOptionProperties:\n              newField.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType\n                ? {\n                    defaultValue: newField.defaultValue,\n                    optionNamesById: newField.optionNamesById,\n                    optionLabelsById: newField.optionLabelsById\n                  }\n                : null\n          }));\n\n          this.store$.dispatch(RecordDesignerActions.addNewFieldModels({ newFieldModels: newFieldModels }));\n        })\n        .catch(noop);\n    });\n  }\n\n  copySelectedField(): void {\n    this.store$.dispatch(RecordDesignerActions.copySelectedField());\n  }\n\n  deleteSelectedField(): void {\n    this.store$.dispatch(RecordDesignerActions.deleteSelectedField());\n  }\n\n  onBreadcrumbSelected(): void {\n    this.store$.dispatch(RecordDesignerActions.clearSelectedFieldGuid());\n  }\n\n  canDeactivate(): boolean {\n    let canDeactivate = true;\n\n    this.isDirty$.pipe(take(1)).subscribe((isDirty) => {\n      canDeactivate = !isDirty;\n    });\n\n    return canDeactivate;\n  }\n\n  saveDefinition(): void {\n    combineLatest([this.definitionFromDefinitionModel$, this.isNewDefinition$, this.overriddenRecordProperties$])\n      .pipe(\n        take(1),\n        switchMap(([definition, isNewDefinition, overriddenRecordProperties]) => {\n          if (isNewDefinition) {\n            return this.rxRecordDefinitionService.create(definition);\n          } else if (!isNewDefinition && !isEmpty(overriddenRecordProperties.fields)) {\n            return from(\n              this.rxModalService.openModal({\n                title: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.inheritance-issue-modal.title'\n                ),\n                content: InheritanceIssueInfoComponent,\n                data: { overriddenRecordProperties },\n                size: 'sm'\n              })\n            ).pipe(\n              filter((result) => result === 'continue'),\n              switchMap(() => this.rxRecordDefinitionService.update(definition))\n            );\n          } else {\n            return this.rxRecordDefinitionService.update(definition);\n          }\n        }),\n        withLatestFrom(this.store$.select(definitionModelSelector), this.store$.select(bundleIdSelector))\n      )\n      .subscribe(([response, definitionModel, bundleId]) => {\n        this.store$.dispatch(\n          RecordDesignerActions.saveDefinitionSuccess({\n            savedDefinitionName: `${bundleId}:${definitionModel.name}`\n          })\n        );\n      });\n  }\n\n  onCorrectIssue(validationIssue: IValidationIssue): void {\n    if (validationIssue.data.guid) {\n      this.store$.dispatch(RecordDesignerActions.setSelectedFieldGuid({ guid: validationIssue.data.guid }));\n    } else {\n      this.store$.dispatch(RecordDesignerActions.setInspectorTabIndex({ inspectorTabIndex: 0 }));\n    }\n\n    setTimeout(\n      () =>\n        this.inspectorFocusEditorSubject.next({\n          editorName: validationIssue.data.propertyName,\n          data: validationIssue.data\n        }),\n      10\n    );\n  }\n\n  onFormInitialized() {\n    this.inspectorFocusEditorSubject.next({\n      editorName: 'name',\n      data: {}\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n    this.inspectorTabIndexSubject.complete();\n    this.inspectorFocusEditorSubject.complete();\n    this.store$.dispatch(RecordDesignerActions.destroy());\n  }\n}\n","<ng-container class=\"p-0\" *ngIf=\"vm$ | async as vm\">\n  <rx-designer-header\n    [bundleName]=\"vm.bundleFriendlyName\"\n    [isSaveButtonDisabled]=\"vm.isSaveButtonDisabled\"\n    (save)=\"saveDefinition()\"\n    (closeDesigner)=\"closeDesigner.emit()\"\n    [breadcrumbItems]=\"vm.breadcrumbItems\"\n    (breadcrumbSelected)=\"onBreadcrumbSelected()\"\n    (toggleDesignMode)=\"toggleDesignMode()\"\n    [isDesignMode]=\"vm.isDesignMode\"\n  ></rx-designer-header>\n\n  <adapt-sidebar\n    [openedId]=\"0\"\n    [adjustMainContainerWidth]=\"true\"\n    position=\"right\"\n    class=\"h-100\"\n    [hidden]=\"vm.definitionForJsonViewer\"\n    (isPanelOpenedCurrently)=\"onSidebarToggle($event)\"\n  >\n    <adapt-sidebar-item\n      iconClass=\"d-icon-pencil\"\n      [headerTitle]=\"'com.bmc.arsys.rx.client.common.properties.label' | translate\"\n      [tooltipText]=\"'com.bmc.arsys.rx.client.common.properties.label' | translate\"\n    >\n      <rx-form-builder\n        [config]=\"vm.definitionInspectorConfig\"\n        [model]=\"vm.definitionModel\"\n        [focusEditor$]=\"inspectorFocusEditor$\"\n        (modelChange)=\"onDefinitionModelChange($event)\"\n        (formInitialized)=\"onFormInitialized()\"\n        (editorEvent)=\"onEditorEvent($event)\"\n      ></rx-form-builder>\n    </adapt-sidebar-item>\n\n    <adapt-sidebar-item\n      iconClass=\"d-icon-gear\"\n      [headerTitle]=\"'com.bmc.arsys.rx.client.common.settings.label' | translate\"\n      [tooltipText]=\"'com.bmc.arsys.rx.client.common.settings.label' | translate\"\n    >\n      <rx-form-builder\n        [config]=\"vm.selectedFieldInspectorConfig\"\n        [model]=\"vm.selectedFieldModel\"\n        (modelChange)=\"onSelectedFieldModelChange($event)\"\n        [guid]=\"vm.selectedFieldGuid\"\n        [focusEditor$]=\"inspectorFocusEditor$\"\n      ></rx-form-builder>\n\n      <adapt-alert\n        [hidden]=\"vm.selectedFieldModel\"\n        class=\"p-3\"\n        [config]=\"{\n          content: 'com.bmc.arsys.rx.client.designer.validation.no-field-selected.message' | translate,\n          variant: 'info',\n          type: 'inline'\n        }\"\n      ></adapt-alert>\n    </adapt-sidebar-item>\n\n    <adapt-sidebar-item\n      [iconClass]=\"\n        vm.hasValidationErrors\n          ? 'd-icon-exclamation_triangle text-danger'\n          : vm.hasValidationWarnings\n          ? 'd-icon-exclamation_triangle text-warning-icon'\n          : 'd-icon-exclamation_triangle'\n      \"\n      headerTitle=\"{{ 'com.bmc.arsys.rx.client.designer.validation-issues.label' | translate }}\"\n      tooltipText=\"{{ 'com.bmc.arsys.rx.client.designer.validation-issues.label' | translate }}\"\n    >\n      <rx-validation-issues\n        (correctIssue)=\"onCorrectIssue($event)\"\n        [issueSections]=\"vm.validationIssues\"\n        [definitionTypeDisplayName]=\"'com.bmc.arsys.rx.client.record-definition.label' | translate\"\n      ></rx-validation-issues>\n    </adapt-sidebar-item>\n\n    <div class=\"main h-100 d-flex flex-column\">\n      <h1 class=\"mt-0 mb-2\">\n        {{ (configuration.definitionName | rxDefinitionNamePipe) || vm.definitionDisplayName || newTitle }}\n      </h1>\n\n      <div *ngIf=\"vm.isJoinOrExternalRecord\" class=\"d-flex border border-bottom-0\">\n        <button\n          adapt-button\n          type=\"button\"\n          btn-type=\"tertiary\"\n          class=\"d-icon-plus_circle align-self-start\"\n          rx-id=\"new-field-button\"\n          (click)=\"openAddNewField()\"\n          [disabled]=\"vm.isReadOnly\"\n        >\n          {{ 'com.bmc.arsys.rx.client.common.new.label' | translate }}\n        </button>\n\n        <button\n          adapt-button\n          btn-type=\"tertiary\"\n          type=\"button\"\n          class=\"d-icon-trash\"\n          rx-id=\"delete-field-button\"\n          (click)=\"deleteSelectedField()\"\n          [disabled]=\"vm.isDeleteFieldButtonDisabled\"\n        >\n          {{ 'com.bmc.arsys.rx.client.common.delete.label' | translate }}\n        </button>\n      </div>\n\n      <div *ngIf=\"!vm.isJoinOrExternalRecord\" class=\"d-flex border border-bottom-0\">\n        <div class=\"dropdown\" adaptDropdown>\n          <button\n            adapt-button\n            type=\"button\"\n            adaptDropdownToggle\n            btn-type=\"tertiary\"\n            class=\"d-icon-plus_circle\"\n            rx-id=\"new-field-button\"\n          >\n            {{ 'com.bmc.arsys.rx.client.designer.new-field.button.label' | translate }}\n          </button>\n\n          <div class=\"dropdown-menu\" adaptDropdownMenu>\n            <button\n              *ngFor=\"let dataType of dataTypes\"\n              class=\"dropdown-item\"\n              (click)=\"addNewField(dataType.resourceType)\"\n              [attr.rx-id]=\"'field-data-type-' + dataType.shortName\"\n              [disabled]=\"!vm.isFieldsCustomizationAllowed || vm.isReadOnly\"\n            >\n              {{ dataType.displayName }}\n            </button>\n          </div>\n        </div>\n\n        <button\n          adapt-button\n          btn-type=\"tertiary\"\n          type=\"button\"\n          class=\"d-icon-trash\"\n          rx-id=\"delete-field-button\"\n          (click)=\"deleteSelectedField()\"\n          [disabled]=\"vm.isDeleteFieldButtonDisabled || vm.isReadOnly\"\n        >\n          {{ 'com.bmc.arsys.rx.client.common.delete.label' | translate }}\n        </button>\n\n        <button\n          adapt-button\n          btn-type=\"tertiary\"\n          type=\"button\"\n          class=\"d-icon-list_ordered\"\n          (click)=\"copySelectedField()\"\n          rx-id=\"copy-field-button\"\n          [disabled]=\"vm.isCopyFieldButtonDisabled || vm.isReadOnly\"\n        >\n          {{ 'com.bmc.arsys.rx.client.common.copy.label' | translate }}\n        </button>\n      </div>\n\n      <adapt-table\n        [value]=\"vm.fieldGridRows\"\n        [selection]=\"vm.selectedFieldGridRows\"\n        [columns]=\"columns\"\n        [scrollable]=\"true\"\n        scrollHeight=\"flex\"\n        [sortable]=\"true\"\n        [resizableColumns]=\"true\"\n        [bordered]=\"true\"\n        [filterable]=\"false\"\n        [dataKey]=\"'guid'\"\n        [disableRowSelection]=\"false\"\n        [selectionMode]=\"'single'\"\n        (selectionChange)=\"onSelectionChange($event)\"\n      >\n      </adapt-table>\n    </div>\n  </adapt-sidebar>\n\n  <adapt-code-viewer\n    *ngIf=\"vm.definitionForJsonViewer\"\n    [code]=\"vm.definitionForJsonViewer | json\"\n    [lang]=\"'javascript'\"\n    [hasToolbar]=\"false\"\n    [theme]=\"'light'\"\n    class=\"full-size\"\n  ></adapt-code-viewer>\n</ng-container>\n\n<ng-template #dataTypeCellTemplate let-dataItem=\"dataItem\">\n  <span\n    class=\"icon d-icon-lock pr-2\"\n    *ngIf=\"dataItem.isCoreField\"\n    [adaptPopover]=\"'com.bmc.arsys.rx.client.record-designer.core-field.tooltip' | translate\"\n  ></span>\n  {{ dataItem.resourceType }}\n</ng-template>\n\n<ng-template #requiredCellTemplate let-dataItem=\"dataItem\">\n  {{ dataItem.fieldOption | rxRecordDefinitionFieldOption }}\n</ng-template>\n\n<ng-template #inheritedCellTemplate let-dataItem=\"dataItem\">\n  <span *ngIf=\"dataItem.isInherited\" class=\"icon d-icon-check pr-2\"></span>\n</ng-template>\n\n<ng-template #sourceFieldCellTemplate let-dataItem=\"dataItem\">\n  {{ dataItem.sourceRecord }}\n</ng-template>\n","import { ArchiveType, AssociationSelectionType } from '@helix/platform/record/api';\nimport { createReducer, on } from '@ngrx/store';\nimport { chain, isNull, isUndefined } from 'lodash';\nimport { IRecordDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { RX_RECORD_DESIGNER } from '../record-designer.constant';\nimport * as RecordDesignerActions from './record-designer.actions';\nimport { IRecordDesignerModel } from './record-designer.types';\n\nconst initialDefinitionModel: IRecordDefinitionModel = {\n  isArchivingEnabled: false,\n  archiveDescription: null,\n  ageQualifierFieldId: null,\n  ageQualifierInDays: null,\n  archiveRecordDefinitionName: null,\n  archiveType: ArchiveType.None,\n  includeAttachments: null,\n  archiveDataCriteria: null,\n  associationsToFollowForArchive: {\n    selectionType: AssociationSelectionType.FollowParent,\n    specificAssociationNames: []\n  },\n  isAuditingEnabled: false,\n  auditRecordDefinitionName: null,\n  auditDataCriteria: null,\n  associatedAuditFieldsByAssociationName: {},\n  customizationOptions: {\n    allowOverlay: false,\n    allowFieldsOverlay: false,\n    allowIndexesOverlay: false,\n    allowOtherPropertiesOverlay: false,\n    allowPermissionsOverlay: false,\n    fields: [],\n    scope: null\n  },\n  recordInheritanceSelector: {\n    inheritanceOptions: {\n      isSharedInstanceStorage: false,\n      isAbstract: false,\n      isFinal: false\n    },\n    inheritanceDescriptor: {\n      inheritingFrom: null,\n      isInheritingRules: false,\n      isInheritingFieldPermissions: false,\n      isInheritingAssociations: false,\n      isInheritingFieldAuditOptions: false\n    },\n    isInheritingCoreFields: false,\n    inheritedFieldDefinitions: []\n  },\n  recordSearchFields: [],\n  overlayOperation: null,\n  weightedRelevancyTitle: undefined,\n  weightedRelevancyKeywords: undefined,\n  weightedRelevancyEnvironment: undefined,\n  fields: [],\n  indexDefinitions: []\n};\n\nexport const initialState: IRecordDesignerModel = {\n  bundleId: null,\n  definitionName: null,\n  selectedFieldGuid: null,\n  inspectorTabIndex: 0,\n  isDesignMode: true,\n  definitionModel: initialDefinitionModel,\n  definitionModelFromDefinition: initialDefinitionModel,\n  isDirty: false,\n  savedDefinitionName: null\n};\n\nconst reducer = createReducer(\n  initialState,\n\n  on(RecordDesignerActions.init, (state: IRecordDesignerModel, { payload }) => ({\n    ...initialState,\n    bundleId: payload.bundleId,\n    definitionName: payload.definitionName\n  })),\n\n  on(RecordDesignerActions.initDefinitionModel, (state: IRecordDesignerModel, { definitionModelFromDefinition }) => ({\n    ...state,\n    definitionModelFromDefinition,\n    definitionModel: definitionModelFromDefinition\n  })),\n\n  on(\n    RecordDesignerActions.updateDefinitionModelFromDesigner,\n    (state: IRecordDesignerModel, { definitionModelFromDesigner }) => {\n      const updatedDefinitionModel = {\n        ...state.definitionModel,\n        ...definitionModelFromDesigner\n      };\n\n      const inheritedFieldDefinitions = updatedDefinitionModel.recordInheritanceSelector.inheritanceDescriptor\n        ? updatedDefinitionModel.recordInheritanceSelector.inheritedFieldDefinitions\n        : [];\n\n      return {\n        ...state,\n        definitionModel: {\n          ...updatedDefinitionModel,\n          includeAttachments:\n            updatedDefinitionModel.archiveType === RX_RECORD_DESIGNER.archiving.types.deleteSourceRecord.id,\n          fields: chain(updatedDefinitionModel.fields)\n            .differenceBy(inheritedFieldDefinitions, 'id')\n            .concat(inheritedFieldDefinitions)\n            .map((field: IRecordFieldDefinitionModel) => {\n              const searchField = updatedDefinitionModel.recordSearchFields.find(\n                (searchField) => searchField.id === field.id\n              );\n\n              const searchDefinition = searchField\n                ? searchField.searchDefinition\n                : isUndefined(field.searchDefinition)\n                ? undefined\n                : null;\n\n              const customizationOptionField =\n                updatedDefinitionModel.customizationOptions.allowFieldsOverlay &&\n                updatedDefinitionModel.customizationOptions.fields.find(\n                  (customizationOptionsField) => customizationOptionsField.id === field.id\n                );\n\n              return {\n                ...field,\n                searchDefinition,\n                allowOtherPropertiesOverlay: customizationOptionField\n                  ? customizationOptionField.allowOtherPropertiesOverlay\n                  : field.allowOtherPropertiesOverlay,\n                allowPermissionsOverlay: customizationOptionField\n                  ? customizationOptionField.allowPermissionsOverlay\n                  : field.allowPermissionsOverlay,\n                isInherited: field.isCoreField\n                  ? Boolean(updatedDefinitionModel.recordInheritanceSelector.isInheritingCoreFields)\n                  : field.isInherited\n              };\n            })\n            .orderBy('id')\n            .value()\n        }\n      };\n    }\n  ),\n\n  on(RecordDesignerActions.updateSelectedFieldModel, (state: IRecordDesignerModel, { selectedFieldModel }) => {\n    return {\n      ...state,\n      definitionModel: {\n        ...state.definitionModel,\n        fields: state.definitionModel.fields.map((field) => {\n          return field.guid === selectedFieldModel.guid\n            ? { ...selectedFieldModel, copy: selectedFieldModel.audit ? true : selectedFieldModel.copy }\n            : field;\n        })\n      }\n    };\n  }),\n\n  on(RecordDesignerActions.clearSearchFields, (state: IRecordDesignerModel) => ({\n    ...state,\n    definitionModel: {\n      ...state.definitionModel,\n      recordSearchFields: [],\n      fields: state.definitionModel.fields.map((field) => {\n        return {\n          ...field,\n          searchDefinition: isUndefined(field.searchDefinition) ? undefined : null\n        };\n      })\n    }\n  })),\n\n  on(RecordDesignerActions.toggleDesignMode, (state: IRecordDesignerModel) => ({\n    ...state,\n    isDesignMode: !state.isDesignMode\n  })),\n\n  on(RecordDesignerActions.markDesignerPristine, (state: IRecordDesignerModel) => ({\n    ...state,\n    isDirty: false\n  })),\n\n  on(RecordDesignerActions.markDesignerDirty, (state: IRecordDesignerModel) => ({\n    ...state,\n    isDirty: true\n  })),\n\n  on(RecordDesignerActions.setInspectorTabIndex, (state: IRecordDesignerModel, { inspectorTabIndex }) => ({\n    ...state,\n    inspectorTabIndex\n  })),\n\n  on(RecordDesignerActions.setSelectedFieldGuid, (state: IRecordDesignerModel, { guid }) => ({\n    ...state,\n    selectedFieldGuid: guid,\n    inspectorTabIndex: guid && !isNull(state.inspectorTabIndex) ? 1 : state.inspectorTabIndex\n  })),\n\n  on(RecordDesignerActions.clearSelectedFieldGuid, (state: IRecordDesignerModel) => ({\n    ...state,\n    selectedFieldGuid: null,\n    inspectorTabIndex: !isNull(state.inspectorTabIndex) ? 0 : state.inspectorTabIndex\n  })),\n\n  on(RecordDesignerActions.addFieldModel, (state: IRecordDesignerModel, { newFieldModel }) => ({\n    ...state,\n    definitionModel: { ...state.definitionModel, fields: [...state.definitionModel.fields, { ...newFieldModel }] }\n  })),\n\n  on(RecordDesignerActions.addNewFieldModels, (state: IRecordDesignerModel, { newFieldModels }) => ({\n    ...state,\n    definitionModel: { ...state.definitionModel, fields: [...state.definitionModel.fields, ...newFieldModels] },\n    isDirty: true\n  })),\n\n  on(RecordDesignerActions.deleteSelectedFieldSuccess, (state: IRecordDesignerModel) => ({\n    ...state,\n    definitionModel: {\n      ...state.definitionModel,\n      fields: state.definitionModel.fields.filter((field) => field.guid !== state.selectedFieldGuid)\n    }\n  })),\n\n  on(RecordDesignerActions.saveDefinitionSuccess, (state: IRecordDesignerModel, { savedDefinitionName }) => ({\n    ...state,\n    savedDefinitionName\n  })),\n\n  on(RecordDesignerActions.destroy, (state: IRecordDesignerModel) => ({\n    ...initialState\n  }))\n);\n\nexport function recordDesignerModelReducer(state, action) {\n  return reducer(state, action);\n}\n","import { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\nimport { RxGuidService } from '@helix/platform/utils';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RxNotificationService } from '@helix/platform/shared/api';\nimport { RX_MODAL, RxModalService } from '@helix/platform/ui-kit';\nimport { IRecordDefinition, RX_RECORD_DEFINITION, RxRecordDefinitionService } from '@helix/platform/record/api';\nimport { distinctUntilChanged, filter, map, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport * as RecordDesignerActions from './record-designer.actions';\nimport {\n  bundleIdSelector,\n  definitionModelSelector,\n  definitionNameSelector,\n  selectedFieldGuidSelector\n} from './record-designer.selectors';\nimport { find, includes, isEmpty, isEqual, mapValues, some } from 'lodash';\nimport { RxFieldDefinitionManagerService } from '../services/field-definition-manager.service';\nimport { IIndexDefinitionModel, IRecordFieldDefinitionModel } from '../../record-designer.types';\nimport { from } from 'rxjs';\nimport { RxRecordDesignerService } from '../record-designer.service';\n\n@Injectable()\nexport class RecordDesignerEffects {\n  constructor(\n    private store$: Store<any>,\n    private actions$: Actions,\n    private rxFieldDefinitionManagerService: RxFieldDefinitionManagerService,\n    private rxRecordDefinitionService: RxRecordDefinitionService,\n    private rxModalService: RxModalService,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService,\n    private rxGuidService: RxGuidService,\n    private rxRecordDesignerService: RxRecordDesignerService\n  ) {}\n\n  initRecordDesigner$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.init),\n      map(() => RecordDesignerActions.loadDefinition())\n    )\n  );\n\n  loadDefinition$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.loadDefinition),\n      withLatestFrom(this.store$.select(definitionNameSelector)),\n      switchMap(([action, definitionName]) =>\n        definitionName\n          ? this.rxRecordDefinitionService.get(definitionName, {}, true)\n          : this.rxRecordDefinitionService.getNew()\n      ),\n      map((definition: IRecordDefinition) =>\n        RecordDesignerActions.loadDefinitionSuccess({\n          definition\n        })\n      )\n    )\n  );\n\n  loadDefinitionSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.loadDefinitionSuccess),\n      map((action) =>\n        RecordDesignerActions.initDefinitionModel({\n          definitionModelFromDefinition: this.rxRecordDesignerService.getDefinitionModelFromDefinition(\n            action.definition\n          )\n        })\n      )\n    )\n  );\n\n  createNewFieldModel$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.createNewFieldModel),\n      withLatestFrom(this.store$.select(definitionModelSelector)),\n      map(([action, definitionModel]) => {\n        let newFieldName;\n        let fieldNameSuffix = 0;\n\n        const defaultFieldName = this.translateService.instant(\n          'com.bmc.arsys.rx.client.designer.default-field-name.label'\n        );\n\n        do {\n          newFieldName = `${defaultFieldName} ${++fieldNameSuffix}`;\n        } while (some(definitionModel.fields, { name: newFieldName }));\n\n        const guid = this.rxGuidService.generate();\n\n        const newFieldModel: IRecordFieldDefinitionModel =\n          this.rxFieldDefinitionManagerService.getNewFieldDefinitionModel(action.resourceType, {\n            id: null,\n            isNewField: true,\n            name: newFieldName,\n            guid,\n            minValue: null,\n            maxValue: null,\n            defaultValueByLocale: {},\n            selectionFieldOptionProperties:\n              action.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType\n                ? { defaultValue: null, optionNamesById: null, optionLabelsById: null }\n                : null\n          });\n\n        return RecordDesignerActions.addFieldModel({ newFieldModel });\n      })\n    )\n  );\n\n  clearSearchFields$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.updateDefinitionModelFromDesigner),\n      withLatestFrom(this.store$.select(definitionModelSelector)),\n      map(([action, definitionModel]) => definitionModel),\n      distinctUntilChanged((a, b) => isEqual(a.enableCognitiveSearch, b.enableCognitiveSearch)),\n      filter(\n        (definitionModel) => definitionModel.enableCognitiveSearch && !isEmpty(definitionModel.recordSearchFields)\n      ),\n      switchMap(() =>\n        from(\n          this.rxModalService.confirm({\n            title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n            modalStyle: RX_MODAL.modalStyles.warning,\n            message: this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.search-fields.clear-search-fields-confirmation.message'\n            )\n          })\n        )\n      ),\n      filter(Boolean),\n      map(() => RecordDesignerActions.clearSearchFields())\n    )\n  );\n\n  addNewFieldModel$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.addFieldModel),\n      map((action) => RecordDesignerActions.setSelectedFieldGuid({ guid: action.newFieldModel.guid }))\n    )\n  );\n\n  copySelectedField$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.copySelectedField),\n      withLatestFrom(this.store$.select(definitionModelSelector), this.store$.select(selectedFieldGuidSelector)),\n      map(([action, definitionModel, selectedFieldGuid]) => {\n        const selectedField = definitionModel.fields.find((field) => field.guid === selectedFieldGuid);\n\n        const selectedFieldCopy: IRecordFieldDefinitionModel = {\n          ...selectedField,\n          id: null,\n          guid: this.rxGuidService.generate(),\n          name: this.translateService.instant('com.bmc.arsys.rx.client.designer.default-field-copy-name.label', {\n            fieldName: selectedField.name\n          }),\n          selectionFieldOptionProperties: {\n            ...selectedField.selectionFieldOptionProperties,\n            optionLabelsById:\n              selectedField.resourceType === RX_RECORD_DEFINITION.resourceTypes.selection\n                ? mapValues(selectedField.selectionFieldOptionProperties.optionNamesById, () =>\n                    this.rxGuidService.generate()\n                  )\n                : null\n          }\n        };\n\n        return RecordDesignerActions.addFieldModel({ newFieldModel: selectedFieldCopy });\n      })\n    )\n  );\n\n  deleteSelectedField$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.deleteSelectedField),\n      switchMap(() =>\n        from(\n          this.rxModalService.confirm({\n            title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n            modalStyle: RX_MODAL.modalStyles.warning,\n            message: this.translateService.instant(\n              'com.bmc.arsys.rx.client.record-designer.delete-field-warning.message'\n            )\n          })\n        )\n      ),\n      filter(Boolean),\n      map(() => RecordDesignerActions.checkIfFieldUsedByIndexes())\n    )\n  );\n\n  checkIfFieldUsedByIndexes$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.checkIfFieldUsedByIndexes),\n      withLatestFrom(this.store$.select(definitionModelSelector), this.store$.select(selectedFieldGuidSelector)),\n      switchMap(([result, definitionModel, guid]) => {\n        const field = find(definitionModel.fields, { guid });\n\n        const isUsedByIndexes = some(definitionModel.indexDefinitions, (indexDefinition: IIndexDefinitionModel) =>\n          includes(indexDefinition.indexFieldIds, field.id)\n        );\n\n        return isUsedByIndexes\n          ? from(\n              this.rxModalService.alert({\n                title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n                modalStyle: RX_MODAL.modalStyles.warning,\n                message: this.translateService.instant(\n                  'com.bmc.arsys.rx.client.record-designer.indexes.field-used-by-indexes.message',\n                  { fieldName: field.name }\n                )\n              })\n            ).pipe(map(() => RecordDesignerActions.deleteSelectedFieldError()))\n          : [RecordDesignerActions.deleteSelectedFieldSuccess()];\n      })\n    )\n  );\n\n  saveDefinitionSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.saveDefinitionSuccess),\n      withLatestFrom(this.store$.select(definitionNameSelector), this.store$.select(bundleIdSelector)),\n      tap(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.designer.definition-saved-successfully.message', {\n            definitionTypeDisplayName: this.translateService.instant('com.bmc.arsys.rx.client.record-definition.label')\n          })\n        );\n      }),\n      filter(([action, definitionName, bundleId]) => !!definitionName),\n      map(([action, definitionName, bundleId]: [any, string, string]) =>\n        RecordDesignerActions.init({\n          payload: { definitionName, bundleId }\n        })\n      )\n    )\n  );\n\n  clearSelectedField$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.initDefinitionModel, RecordDesignerActions.deleteSelectedFieldSuccess),\n      map(() => RecordDesignerActions.clearSelectedFieldGuid())\n    )\n  );\n\n  markPristine$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecordDesignerActions.initDefinitionModel, RecordDesignerActions.saveDefinitionSuccess),\n      map(() => RecordDesignerActions.markDesignerPristine())\n    )\n  );\n\n  markDirty$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        RecordDesignerActions.addFieldModel,\n        RecordDesignerActions.updateDefinitionModelFromDesigner,\n        RecordDesignerActions.updateSelectedFieldModel,\n        RecordDesignerActions.deleteSelectedFieldSuccess\n      ),\n      map(() => RecordDesignerActions.markDesignerDirty())\n    )\n  );\n}\n","import { CommonModule, DatePipe } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AdaptAccordionModule,\n  AdaptAlertModule,\n  AdaptBusyModule,\n  AdaptButtonModule,\n  AdaptCodeViewerModule,\n  AdaptDropdownModule,\n  AdaptIconModule,\n  AdaptPopoverModule,\n  AdaptRxCheckboxModule,\n  AdaptRxLabelModule,\n  AdaptRxListBuilderModule,\n  AdaptRxRadiobuttonModule,\n  AdaptRxSelectModule,\n  AdaptRxSwitchModule,\n  AdaptRxTextfieldModule,\n  AdaptSidebarModule,\n  AdaptTabsModule\n} from '@bmc-ux/adapt-angular';\nimport { AdaptTableModule } from '@bmc-ux/adapt-table';\nimport { RxRecordDefinitionFieldOptionPipeModule } from '@helix/platform/record/api';\nimport { RxDefinitionModule } from '@helix/platform/shared/api';\nimport { RxDesignerHeaderModule, RxFormBuilderModule } from '@helix/platform/shared/components';\nimport { RxValidationIssuesModule, RxModalModule } from '@helix/platform/ui-kit';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RecordCustomizationOptionsModule } from './record-customization-options/record-customization-options.module';\nimport { RecordInheritanceEditorModule } from './record-inheritance-editor/record-inheritance-editor.module';\nimport { SearchFieldEditorModule } from './search-field-editor/search-field-editor.module';\nimport { RecordDesignerComponent } from './record-designer.component';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { recordDesignerModelReducer } from './+state/record-designer-model.reducer';\nimport { RecordDesignerEffects } from './+state/record-designer.effects';\nimport { RX_RECORD_DESIGNER } from './record-designer.constant';\nimport { LocalizedCharacterFieldEditorComponent } from './localized-character-field-editor/localized-character-field-editor.component';\nimport { InheritanceIssueInfoComponent } from './inheritance-issue-info/inheritance-issue-info.component';\nimport { MissingArchiveDefinitionsModalComponent } from './archive-associations-control/missing-archive-definitions-modal.component';\nimport { ArchiveAssociationsControlComponent } from './archive-associations-control/archive-associations-control.component';\nimport { ArchiveAssociationSelectorComponent } from './archive-associations-control/archive-association-selector.component';\nimport { FieldOptionEditorComponent } from './field-option-editor/field-option-editor.component';\nimport { AddJoinFieldsEditorComponent } from './add-join-fields-editor/add-join-fields-editor.component';\nimport { RecordIndexesControlComponent } from './record-indexes-control/record-indexes-control.component';\nimport { RecordIndexesEditorComponent } from './record-indexes-control/record-indexes-editor.component';\nimport { RxRecordDesignerService } from './record-designer.service';\n\n@NgModule({\n  declarations: [\n    RecordDesignerComponent,\n    LocalizedCharacterFieldEditorComponent,\n    InheritanceIssueInfoComponent,\n    ArchiveAssociationsControlComponent,\n    ArchiveAssociationSelectorComponent,\n    MissingArchiveDefinitionsModalComponent,\n    FieldOptionEditorComponent,\n    AddJoinFieldsEditorComponent,\n    RecordIndexesControlComponent,\n    RecordIndexesEditorComponent\n  ],\n  exports: [RecordDesignerComponent],\n  imports: [\n    AdaptCodeViewerModule,\n    AdaptRxLabelModule,\n    AdaptTabsModule,\n    AdaptBusyModule,\n    AdaptButtonModule,\n    AdaptDropdownModule,\n    AdaptRxCheckboxModule,\n    AdaptRxSelectModule,\n    AdaptRxTextfieldModule,\n    AdaptPopoverModule,\n    AdaptIconModule,\n    CommonModule,\n    FormsModule,\n    RxDesignerHeaderModule,\n    RxModalModule,\n    RxValidationIssuesModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    RecordGridModule,\n    RxFormBuilderModule,\n    RxDefinitionModule,\n    RxRecordDefinitionFieldOptionPipeModule,\n    RecordCustomizationOptionsModule,\n    RecordInheritanceEditorModule,\n    SearchFieldEditorModule,\n    AdaptTableModule,\n    AdaptSidebarModule,\n    StoreModule.forFeature(RX_RECORD_DESIGNER.featureSelector, {\n      model: recordDesignerModelReducer\n    }),\n    EffectsModule.forFeature([RecordDesignerEffects]),\n    AdaptAlertModule,\n    AdaptRxRadiobuttonModule,\n    AdaptRxSwitchModule,\n    AdaptPopoverModule,\n    AdaptAccordionModule,\n    AdaptRxListBuilderModule\n  ],\n  providers: [DatePipe, RxRecordDesignerService]\n})\nexport class RecordDesignerModule {}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs';\nimport { RecordDesignerComponent } from '../record-designer/record-designer.component';\nimport {\n  IComponentCanDeactivate,\n  IDesignerConfiguration,\n  RX_APPLICATION,\n  RxBundleCacheService,\n  RxComponentCanDeactivateGuard,\n  RxDefinitionNameService,\n  RxPageTitleService\n} from '@helix/platform/shared/api';\nimport { RxUtilityModalsService } from '@helix/platform/ui-kit';\n\n@Component({\n  selector: 'rx-record-designer-page',\n  templateUrl: './record-designer-page.component.html'\n})\nexport class RecordDesignerPageComponent implements OnInit, OnDestroy, IComponentCanDeactivate {\n  isInitialized = false;\n  configuration: IDesignerConfiguration;\n\n  private subscription: Subscription;\n  private isNewRecord: boolean;\n\n  @ViewChild(RecordDesignerComponent)\n  private recordDesignerComponent: RecordDesignerComponent;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxUtilityModalsService: RxUtilityModalsService,\n    private rxPageTitleService: RxPageTitleService,\n    private router: Router,\n    private translateService: TranslateService,\n    private rxComponentCanDeactivateGuard: RxComponentCanDeactivateGuard\n  ) {}\n\n  ngOnInit(): void {\n    this.rxComponentCanDeactivateGuard.setPageComponent(this);\n\n    this.subscription = this.activatedRoute.params.subscribe(({ definitionName, bundleId }) => {\n      this.rxBundleCacheService.bundleId = bundleId || this.rxDefinitionNameService.getBundleId(definitionName);\n\n      this.isInitialized = true;\n      this.isNewRecord = !definitionName;\n\n      this.configuration = {\n        definitionName: definitionName,\n        bundleId: this.rxBundleCacheService.bundleId\n      };\n\n      this.rxPageTitleService.set([\n        this.rxDefinitionNameService.getDisplayName(definitionName),\n        this.translateService.instant('com.bmc.arsys.rx.client.record-designer.title')\n      ]);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n    this.rxComponentCanDeactivateGuard.setPageComponent(null);\n  }\n\n  onDefinitionSaved(recordDefinitionName: string): void {\n    if (this.isNewRecord) {\n      this.router.navigate(['edit2', recordDefinitionName], { relativeTo: this.activatedRoute.parent });\n    }\n  }\n\n  onDefinitionErrorLoading(): void {\n    this.router.navigate(['new2', this.rxBundleCacheService.bundleId], { relativeTo: this.activatedRoute.parent });\n  }\n\n  onCloseDesigner(): void {\n    this.router.navigate([\n      RX_APPLICATION.innovationStudioBundleId,\n      this.rxBundleCacheService.bundleId,\n      'record-definitions'\n    ]);\n  }\n\n  canDeactivate(): boolean {\n    return this.recordDesignerComponent?.canDeactivate() ?? true;\n  }\n\n  confirmDeactivation(): Promise<boolean> {\n    return this.rxUtilityModalsService.confirmUnsavedChanges();\n  }\n}\n","<rx-record-designer\n  *ngIf=\"isInitialized\"\n  [configuration]=\"configuration\"\n  (definitionSaved)=\"onDefinitionSaved($event)\"\n  (definitionErrorLoading)=\"onDefinitionErrorLoading()\"\n  (closeDesigner)=\"onCloseDesigner()\"\n></rx-record-designer>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RecordDesignerPageComponent } from './record-designer-page.component';\nimport { RecordDesignerModule } from '../record-designer/record-designer.module';\n\n@NgModule({\n  declarations: [RecordDesignerPageComponent],\n  exports: [RecordDesignerPageComponent],\n  imports: [CommonModule, RecordDesignerModule]\n})\nexport class RecordDesignerPageModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["_map","map","_filter","RecordDesignerActions.setInspectorTabIndex","RecordDesignerActions.init","RecordDesignerActions.updateDefinitionModelFromDesigner","RecordDesignerActions.setSelectedFieldGuid","RecordDesignerActions.updateSelectedFieldModel","RecordDesignerActions.toggleDesignMode","RecordDesignerActions.createNewFieldModel","RecordDesignerActions.addNewFieldModels","RecordDesignerActions.copySelectedField","RecordDesignerActions.deleteSelectedField","RecordDesignerActions.clearSelectedFieldGuid","RecordDesignerActions.saveDefinitionSuccess","RecordDesignerActions.destroy","RecordDesignerActions.initDefinitionModel","RecordDesignerActions.clearSearchFields","RecordDesignerActions.markDesignerPristine","RecordDesignerActions.markDesignerDirty","RecordDesignerActions.addFieldModel","RecordDesignerActions.deleteSelectedFieldSuccess","RecordDesignerActions.loadDefinition","RecordDesignerActions.loadDefinitionSuccess","RecordDesignerActions.checkIfFieldUsedByIndexes","RecordDesignerActions.deleteSelectedFieldError"],"mappings":"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"}