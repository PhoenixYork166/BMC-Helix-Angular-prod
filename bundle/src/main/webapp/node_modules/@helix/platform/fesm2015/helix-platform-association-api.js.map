{"version":3,"file":"helix-platform-association-api.js","sources":["../../../../libs/platform/association/api/associated-record-node-side.types.ts","../../../../libs/platform/association/api/associated-record-node-sides.constant.ts","../../../../libs/platform/association/api/association-definition-data-page.service.ts","../../../../libs/platform/association/api/association-definition.types.ts","../../../../libs/platform/association/api/association-definition.constant.ts","../../../../libs/platform/association/api/association-definition.service.ts","../../../../libs/platform/association/api/association-instance-data-page.service.ts","../../../../libs/platform/association/api/association-instance.service.ts","../../../../libs/platform/association/api/association-node-tree-data-page.service.ts","../../../../libs/platform/association/api/association-definition-cache.service.ts","../../../../libs/platform/association/api/association-cardinality.pipe.ts","../../../../libs/platform/association/api/association-constraints.pipe.ts","../../../../libs/platform/association/api/association-pipes.module.ts","../../../../libs/platform/association/api/helix-platform-association-api.ts"],"sourcesContent":["export enum RxAssociatedRecordNodeSide {\n  NodeA = 'nodeA',\n  NodeB = 'nodeB'\n}\n","import { IRxAssociatedRecordNodeSide } from './associated-record-node-side.interface';\nimport { RxAssociatedRecordNodeSide } from './associated-record-node-side.types';\n\nexport const RX_ASSOCIATED_RECORD_NODE_SIDES: { [key: string]: IRxAssociatedRecordNodeSide } = {\n  nodeA: {\n    value: RxAssociatedRecordNodeSide.NodeA,\n    recordDefinitionNameKey: 'nodeAId',\n    defaultName: 'First record'\n  },\n\n  nodeB: {\n    value: RxAssociatedRecordNodeSide.NodeB,\n    recordDefinitionNameKey: 'nodeBId',\n    defaultName: 'Second record'\n  }\n};\n","import { Injectable, Injector } from '@angular/core';\nimport { DataPage } from '@helix/platform/shared/api';\nimport { forkJoin, Observable } from 'rxjs';\nimport { castArray } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxAssociationDefinitionDataPageService extends DataPage {\n  constructor(private injector: Injector) {\n    super(injector, 'com.bmc.arsys.rx.application.association.datapage.AssociationDefinitionDataPageQuery');\n  }\n\n  getRecordAssociationDefinitions(recordDefinitionNames: string | string[]): Observable<any> {\n    const recordDefinitionNamesList: string[] = castArray(recordDefinitionNames);\n\n    const observables$ = recordDefinitionNamesList.map((name) => {\n      return this.get({\n        headers: { 'default-bundle-scope': '' },\n        params: { firstRecordDefinitionName: name }\n      });\n    });\n\n    return forkJoin(observables$);\n  }\n}\n","import { IDefinition } from '@helix/platform/shared/api';\n\nexport enum RxCardinalityType {\n  OneToOne = 'ONE_TO_ONE',\n  OneToMany = 'ONE_TO_MANY',\n  ManyToMany = 'MANY_TO_MANY'\n}\n\nexport enum RxModalityType {\n  Required = 'REQUIRED',\n  Optional = 'OPTIONAL'\n}\n\nexport interface ICardinality {\n  value: RxCardinalityType;\n  labelKey: string;\n}\n\nexport interface IAssociationDefinition extends IDefinition {\n  readonly guid?: string;\n  nodeAId?: string;\n  nodeBId?: string;\n  nodeAName?: string;\n  nodeBName?: string;\n  shouldCascadeDelete?: boolean;\n  cardinality?: RxCardinalityType;\n  nodeAKeys?: number[];\n  nodeBKeys?: number[];\n  isEnabled?: boolean;\n  allowOverlay?: boolean;\n  nodeAModality?: RxModalityType;\n}\n\nexport interface IAssociationTreeNode {\n  associationDefinitionName: string;\n  associationDefintionGuid: string;\n  nodeName: string;\n  nodeSide: string;\n  recordDefinitionName: string;\n}\n\nexport interface IAssociationTree {\n  value: IAssociationTreeNode;\n  children: IAssociationTree[];\n}\n","import { RxCardinalityType, RxModalityType } from './association-definition.types';\n\nexport const RX_ASSOCIATION_DEFINITION = {\n  modality: {\n    required: RxModalityType.Required,\n    optional: RxModalityType.Optional\n  },\n  roles: {\n    second: {\n      value: 'nodeB'\n    }\n  },\n  cardinality: {\n    oneToOne: {\n      value: RxCardinalityType.OneToOne,\n      labelKey: 'com.bmc.arsys.rx.client.association.cardinality.one-to-one.label'\n    },\n    oneToMany: {\n      value: RxCardinalityType.OneToMany,\n      labelKey: 'com.bmc.arsys.rx.client.association.cardinality.one-to-many.label'\n    },\n    manyToMany: {\n      value: RxCardinalityType.ManyToMany,\n      labelKey: 'com.bmc.arsys.rx.client.association.cardinality.many-to-many.label'\n    }\n  },\n  constraints: [\n    {\n      nameKey: 'com.bmc.arsys.rx.client.association.constraints.cascade-delete.label',\n      value: true\n    },\n    {\n      nameKey: 'com.bmc.arsys.rx.client.common.none.label',\n      value: false\n    }\n  ]\n};\n","import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ICommand, IHttpGetParams, IHttpOptions, RX_BUNDLE, RxCommandFactoryService } from '@helix/platform/shared/api';\nimport { Observable, of } from 'rxjs';\nimport { RX_ASSOCIATION_DEFINITION } from './association-definition.constant';\nimport { IAssociationDefinition } from './association-definition.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxAssociationDefinitionService {\n  constructor(private httpClient: HttpClient, private rxCommandFactoryService: RxCommandFactoryService) {}\n\n  get(associationDefinitionName: string, options?: IHttpGetParams): Observable<IAssociationDefinition> {\n    return this.httpClient.get<IAssociationDefinition>(this.getUrl(associationDefinitionName), options);\n  }\n\n  getNew(): Observable<IAssociationDefinition> {\n    return of({\n      name: '',\n      description: null,\n      nodeAId: null,\n      nodeBId: null,\n      nodeAKeys: [379],\n      nodeBKeys: [379],\n      nodeAName: null,\n      nodeBName: null,\n      cardinality: RX_ASSOCIATION_DEFINITION.cardinality.oneToOne.value,\n      shouldCascadeDelete: false,\n      nodeAModality: RX_ASSOCIATION_DEFINITION.modality.optional,\n      isEnabled: true,\n      allowOverlay: false,\n      scope: RX_BUNDLE.definitionScopeTypes.bundle\n    });\n  }\n\n  create(associationDefinition: IAssociationDefinition): Observable<HttpResponse<any>> {\n    return this.httpClient.post(this.getUrl(), associationDefinition, { observe: 'response' });\n  }\n\n  update(associationDefinition: IAssociationDefinition, options?: IHttpOptions): Observable<any> {\n    return this.httpClient.put(this.getUrl(associationDefinition.name), associationDefinition, options);\n  }\n\n  delete(associationDefinitionName: string): Observable<any> {\n    return this.httpClient.delete(this.getUrl(associationDefinitionName));\n  }\n\n  revertCustomization(associationDefinitionName: string): Observable<any> {\n    const revertCustomizationCommand: ICommand = this.rxCommandFactoryService.forResourceType(\n      'com.bmc.arsys.rx.application.association.command.RevertAssociationDefinitionCommand'\n    );\n\n    return revertCustomizationCommand.execute({ associationDefinitionName });\n  }\n\n  rename(oldAssociationDefinitionName: string, newAssociationDefinitionName: string): Observable<any> {\n    const renameCommand: ICommand = this.rxCommandFactoryService.forResourceType(\n      'com.bmc.arsys.rx.application.association.command.RenameAssociationDefinitionCommand'\n    );\n\n    return renameCommand.execute({\n      name: oldAssociationDefinitionName,\n      newName: newAssociationDefinitionName\n    });\n  }\n\n  private getUrl(associationDefinitionName?: string): string {\n    return associationDefinitionName\n      ? `/api/rx/application/association/associationdefinition/${encodeURIComponent(associationDefinitionName)}`\n      : `/api/rx/application/association/associationdefinition`;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { DataPage, IDataPageRequestConfiguration, IDataPageResult, RxLogService } from '@helix/platform/shared/api';\nimport { Observable } from 'rxjs';\n\nconst associationInstanceDataPageQuery =\n  'com.bmc.arsys.rx.application.association.datapage.AssociationInstanceDataPageQuery';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxAssociationInstanceDataPageService extends DataPage {\n  constructor(private injector: Injector, private rxLogService: RxLogService) {\n    super(injector, associationInstanceDataPageQuery);\n  }\n\n  get(dataPageRequestConfiguration: IDataPageRequestConfiguration = {}): Observable<IDataPageResult> {\n    this.rxLogService.warning(\n      'RxAssociationInstanceDataPageService: The get() method is deprecated. Use post() instead.'\n    );\n\n    return super.get(dataPageRequestConfiguration);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RxCommandFactoryService } from '@helix/platform/shared/api';\nimport { castArray } from 'lodash';\n\nexport const associateMultipleCommand = 'com.bmc.arsys.rx.application.association.command.AssociateMultipleCommand';\nexport const disassociateMultipleCommand =\n  'com.bmc.arsys.rx.application.association.command.DisassociateMultipleCommand';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxAssociationInstanceService {\n  private associateCommand = this.rxCommandFactoryService.forResourceType(associateMultipleCommand);\n  private disassociateCommand = this.rxCommandFactoryService.forResourceType(disassociateMultipleCommand);\n\n  constructor(private rxCommandFactoryService: RxCommandFactoryService) {}\n\n  associateRecords(\n    associationDefinitionName: string,\n    nodeAIds: string | string[],\n    nodeBIds: string | string[],\n    useDefaultRoles: boolean,\n    nodeARole: string,\n    nodeBRole: string\n  ): Observable<any> {\n    return this.associateCommand.execute({\n      associationDefinitionName,\n      nodeARecordInstanceIds: castArray(nodeAIds),\n      nodeBRecordInstanceIds: castArray(nodeBIds),\n      useDefaultRoles,\n      nodeARole,\n      nodeBRole\n    });\n  }\n\n  disassociateRecords(\n    associationDefinitionName: string,\n    nodeAIds: string | string[],\n    nodeBIds: string | string[]\n  ): Observable<any> {\n    return this.disassociateCommand.execute({\n      associationDefinitionName,\n      nodeARecordInstanceIds: castArray(nodeAIds),\n      nodeBRecordInstanceIds: castArray(nodeBIds)\n    });\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { DataPage } from '@helix/platform/shared/api';\n\nconst associationNodeTreeDataPageQuery =\n  'com.bmc.arsys.rx.application.association.datapage.AssociationNodeTreeDataPageQuery';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxAssociationNodeTreeDataPageService extends DataPage {\n  constructor(private injector: Injector) {\n    super(injector, associationNodeTreeDataPageQuery, {\n      params: {\n        depth: 2\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IHttpGetParams } from '@helix/platform/shared/api';\nimport { IAssociationDefinition } from './association-definition.types';\nimport { Observable } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\nimport { isEmpty } from 'lodash';\nimport { RxAssociationDefinitionService } from './association-definition.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxAssociationDefinitionCacheService {\n  private associationDefinitions: Map<string, Observable<IAssociationDefinition>> = new Map();\n  private consumers = new Set<Observable<any>>();\n\n  constructor(private rxAssociationDefinitionService: RxAssociationDefinitionService) {}\n\n  getAssociationDefinition(associationDefinitionName, options?: IHttpGetParams): Observable<IAssociationDefinition> {\n    if (!this.associationDefinitions.has(associationDefinitionName)) {\n      const associationDefinition$ = this.rxAssociationDefinitionService\n        .get(associationDefinitionName, options)\n        .pipe(shareReplay(1));\n\n      this.associationDefinitions.set(associationDefinitionName, associationDefinition$);\n    }\n\n    return this.associationDefinitions.get(associationDefinitionName);\n  }\n\n  registerConsumer(consumerDestroy$: Observable<any>): void {\n    this.consumers.add(consumerDestroy$);\n\n    consumerDestroy$.subscribe(() => {\n      this.consumers.delete(consumerDestroy$);\n\n      if (isEmpty(this.consumers)) {\n        this.clearCache();\n      }\n    });\n  }\n\n  private clearCache(): void {\n    this.associationDefinitions.clear();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { find } from 'lodash';\nimport { RX_ASSOCIATION_DEFINITION } from './association-definition.constant';\n\n@Pipe({\n  name: 'rxAssociationCardinalityPipe'\n})\nexport class RxAssociationCardinalityPipe implements PipeTransform {\n  constructor(private translateService: TranslateService) {}\n\n  transform(value: string): string {\n    return this.translateService.instant(find(RX_ASSOCIATION_DEFINITION.cardinality, ['value', value]).labelKey);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { find } from 'lodash';\nimport { RX_ASSOCIATION_DEFINITION } from './association-definition.constant';\n\n@Pipe({\n  name: 'rxAssociationConstraintsPipe'\n})\nexport class RxAssociationConstraintsPipe implements PipeTransform {\n  constructor(private translateService: TranslateService) {}\n\n  transform(value: boolean): string {\n    return this.translateService.instant(find(RX_ASSOCIATION_DEFINITION.constraints, ['value', value]).nameKey);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RxAssociationCardinalityPipe } from './association-cardinality.pipe';\nimport { RxAssociationConstraintsPipe } from './association-constraints.pipe';\n\n@NgModule({\n  declarations: [RxAssociationCardinalityPipe, RxAssociationConstraintsPipe],\n  exports: [RxAssociationCardinalityPipe, RxAssociationConstraintsPipe]\n})\nexport class RxAssociationPipesModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;;;IAAY;AAAZ,WAAY,0BAA0B;IACpC,6CAAe,CAAA;IACf,6CAAe,CAAA;AACjB,CAAC,EAHW,0BAA0B,KAA1B,0BAA0B;;MCGzB,+BAA+B,GAAmD;IAC7F,KAAK,EAAE;QACL,KAAK,EAAE,0BAA0B,CAAC,KAAK;QACvC,uBAAuB,EAAE,SAAS;QAClC,WAAW,EAAE,cAAc;KAC5B;IAED,KAAK,EAAE;QACL,KAAK,EAAE,0BAA0B,CAAC,KAAK;QACvC,uBAAuB,EAAE,SAAS;QAClC,WAAW,EAAE,eAAe;KAC7B;;;MCNU,sCAAuC,SAAQ,QAAQ;IAClE,YAAoB,QAAkB;QACpC,KAAK,CAAC,QAAQ,EAAE,sFAAsF,CAAC,CAAC;QADtF,aAAQ,GAAR,QAAQ,CAAU;KAErC;IAED,+BAA+B,CAAC,qBAAwC;QACtE,MAAM,yBAAyB,GAAa,SAAS,CAAC,qBAAqB,CAAC,CAAC;QAE7E,MAAM,YAAY,GAAG,yBAAyB,CAAC,GAAG,CAAC,CAAC,IAAI;YACtD,OAAO,IAAI,CAAC,GAAG,CAAC;gBACd,OAAO,EAAE,EAAE,sBAAsB,EAAE,EAAE,EAAE;gBACvC,MAAM,EAAE,EAAE,yBAAyB,EAAE,IAAI,EAAE;aAC5C,CAAC,CAAC;SACJ,CAAC,CAAC;QAEH,OAAO,QAAQ,CAAC,YAAY,CAAC,CAAC;KAC/B;;mIAhBU,sCAAsC;uIAAtC,sCAAsC,cAFrC,MAAM;2FAEP,sCAAsC;kBAHlD,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;ICLW;AAAZ,WAAY,iBAAiB;IAC3B,4CAAuB,CAAA;IACvB,8CAAyB,CAAA;IACzB,gDAA2B,CAAA;AAC7B,CAAC,EAJW,iBAAiB,KAAjB,iBAAiB,QAI5B;IAEW;AAAZ,WAAY,cAAc;IACxB,uCAAqB,CAAA;IACrB,uCAAqB,CAAA;AACvB,CAAC,EAHW,cAAc,KAAd,cAAc;;MCNb,yBAAyB,GAAG;IACvC,QAAQ,EAAE;QACR,QAAQ,EAAE,cAAc,CAAC,QAAQ;QACjC,QAAQ,EAAE,cAAc,CAAC,QAAQ;KAClC;IACD,KAAK,EAAE;QACL,MAAM,EAAE;YACN,KAAK,EAAE,OAAO;SACf;KACF;IACD,WAAW,EAAE;QACX,QAAQ,EAAE;YACR,KAAK,EAAE,iBAAiB,CAAC,QAAQ;YACjC,QAAQ,EAAE,kEAAkE;SAC7E;QACD,SAAS,EAAE;YACT,KAAK,EAAE,iBAAiB,CAAC,SAAS;YAClC,QAAQ,EAAE,mEAAmE;SAC9E;QACD,UAAU,EAAE;YACV,KAAK,EAAE,iBAAiB,CAAC,UAAU;YACnC,QAAQ,EAAE,oEAAoE;SAC/E;KACF;IACD,WAAW,EAAE;QACX;YACE,OAAO,EAAE,sEAAsE;YAC/E,KAAK,EAAE,IAAI;SACZ;QACD;YACE,OAAO,EAAE,2CAA2C;YACpD,KAAK,EAAE,KAAK;SACb;KACF;;;MCzBU,8BAA8B;IACzC,YAAoB,UAAsB,EAAU,uBAAgD;QAAhF,eAAU,GAAV,UAAU,CAAY;QAAU,4BAAuB,GAAvB,uBAAuB,CAAyB;KAAI;IAExG,GAAG,CAAC,yBAAiC,EAAE,OAAwB;QAC7D,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAyB,IAAI,CAAC,MAAM,CAAC,yBAAyB,CAAC,EAAE,OAAO,CAAC,CAAC;KACrG;IAED,MAAM;QACJ,OAAO,EAAE,CAAC;YACR,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,IAAI;YACjB,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,CAAC,GAAG,CAAC;YAChB,SAAS,EAAE,CAAC,GAAG,CAAC;YAChB,SAAS,EAAE,IAAI;YACf,SAAS,EAAE,IAAI;YACf,WAAW,EAAE,yBAAyB,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK;YACjE,mBAAmB,EAAE,KAAK;YAC1B,aAAa,EAAE,yBAAyB,CAAC,QAAQ,CAAC,QAAQ;YAC1D,SAAS,EAAE,IAAI;YACf,YAAY,EAAE,KAAK;YACnB,KAAK,EAAE,SAAS,CAAC,oBAAoB,CAAC,MAAM;SAC7C,CAAC,CAAC;KACJ;IAED,MAAM,CAAC,qBAA6C;QAClD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,qBAAqB,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;KAC5F;IAED,MAAM,CAAC,qBAA6C,EAAE,OAAsB;QAC1E,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE,qBAAqB,EAAE,OAAO,CAAC,CAAC;KACrG;IAED,MAAM,CAAC,yBAAiC;QACtC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,yBAAyB,CAAC,CAAC,CAAC;KACvE;IAED,mBAAmB,CAAC,yBAAiC;QACnD,MAAM,0BAA0B,GAAa,IAAI,CAAC,uBAAuB,CAAC,eAAe,CACvF,qFAAqF,CACtF,CAAC;QAEF,OAAO,0BAA0B,CAAC,OAAO,CAAC,EAAE,yBAAyB,EAAE,CAAC,CAAC;KAC1E;IAED,MAAM,CAAC,4BAAoC,EAAE,4BAAoC;QAC/E,MAAM,aAAa,GAAa,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAC1E,qFAAqF,CACtF,CAAC;QAEF,OAAO,aAAa,CAAC,OAAO,CAAC;YAC3B,IAAI,EAAE,4BAA4B;YAClC,OAAO,EAAE,4BAA4B;SACtC,CAAC,CAAC;KACJ;IAEO,MAAM,CAAC,yBAAkC;QAC/C,OAAO,yBAAyB;cAC5B,yDAAyD,kBAAkB,CAAC,yBAAyB,CAAC,EAAE;cACxG,uDAAuD,CAAC;KAC7D;;2HA7DU,8BAA8B;+HAA9B,8BAA8B,cAF7B,MAAM;2FAEP,8BAA8B;kBAH1C,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;ACLD,MAAM,gCAAgC,GACpC,oFAAoF,CAAC;MAK1E,oCAAqC,SAAQ,QAAQ;IAChE,YAAoB,QAAkB,EAAU,YAA0B;QACxE,KAAK,CAAC,QAAQ,EAAE,gCAAgC,CAAC,CAAC;QADhC,aAAQ,GAAR,QAAQ,CAAU;QAAU,iBAAY,GAAZ,YAAY,CAAc;KAEzE;IAED,GAAG,CAAC,+BAA8D,EAAE;QAClE,IAAI,CAAC,YAAY,CAAC,OAAO,CACvB,2FAA2F,CAC5F,CAAC;QAEF,OAAO,KAAK,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;KAChD;;iIAXU,oCAAoC;qIAApC,oCAAoC,cAFnC,MAAM;2FAEP,oCAAoC;kBAHhD,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCJY,wBAAwB,GAAG,4EAA4E;MACvG,2BAA2B,GACtC,+EAA+E;MAKpE,4BAA4B;IAIvC,YAAoB,uBAAgD;QAAhD,4BAAuB,GAAvB,uBAAuB,CAAyB;QAH5D,qBAAgB,GAAG,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,wBAAwB,CAAC,CAAC;QAC1F,wBAAmB,GAAG,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,2BAA2B,CAAC,CAAC;KAEhC;IAExE,gBAAgB,CACd,yBAAiC,EACjC,QAA2B,EAC3B,QAA2B,EAC3B,eAAwB,EACxB,SAAiB,EACjB,SAAiB;QAEjB,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC;YACnC,yBAAyB;YACzB,sBAAsB,EAAE,SAAS,CAAC,QAAQ,CAAC;YAC3C,sBAAsB,EAAE,SAAS,CAAC,QAAQ,CAAC;YAC3C,eAAe;YACf,SAAS;YACT,SAAS;SACV,CAAC,CAAC;KACJ;IAED,mBAAmB,CACjB,yBAAiC,EACjC,QAA2B,EAC3B,QAA2B;QAE3B,OAAO,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YACtC,yBAAyB;YACzB,sBAAsB,EAAE,SAAS,CAAC,QAAQ,CAAC;YAC3C,sBAAsB,EAAE,SAAS,CAAC,QAAQ,CAAC;SAC5C,CAAC,CAAC;KACJ;;yHAlCU,4BAA4B;6HAA5B,4BAA4B,cAF3B,MAAM;2FAEP,4BAA4B;kBAHxC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;ACRD,MAAM,gCAAgC,GACpC,oFAAoF,CAAC;MAK1E,oCAAqC,SAAQ,QAAQ;IAChE,YAAoB,QAAkB;QACpC,KAAK,CAAC,QAAQ,EAAE,gCAAgC,EAAE;YAChD,MAAM,EAAE;gBACN,KAAK,EAAE,CAAC;aACT;SACF,CAAC,CAAC;QALe,aAAQ,GAAR,QAAQ,CAAU;KAMrC;;iIAPU,oCAAoC;qIAApC,oCAAoC,cAFnC,MAAM;2FAEP,oCAAoC;kBAHhD,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCGY,mCAAmC;IAI9C,YAAoB,8BAA8D;QAA9D,mCAA8B,GAA9B,8BAA8B,CAAgC;QAH1E,2BAAsB,GAAoD,IAAI,GAAG,EAAE,CAAC;QACpF,cAAS,GAAG,IAAI,GAAG,EAAmB,CAAC;KAEuC;IAEtF,wBAAwB,CAAC,yBAAyB,EAAE,OAAwB;QAC1E,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,yBAAyB,CAAC,EAAE;YAC/D,MAAM,sBAAsB,GAAG,IAAI,CAAC,8BAA8B;iBAC/D,GAAG,CAAC,yBAAyB,EAAE,OAAO,CAAC;iBACvC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YAExB,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,yBAAyB,EAAE,sBAAsB,CAAC,CAAC;SACpF;QAED,OAAO,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;KACnE;IAED,gBAAgB,CAAC,gBAAiC;QAChD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAErC,gBAAgB,CAAC,SAAS,CAAC;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;YAExC,IAAI,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;gBAC3B,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;SACF,CAAC,CAAC;KACJ;IAEO,UAAU;QAChB,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,CAAC;KACrC;;gIAhCU,mCAAmC;oIAAnC,mCAAmC,cAFlC,MAAM;2FAEP,mCAAmC;kBAH/C,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCFY,4BAA4B;IACvC,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;KAAI;IAE1D,SAAS,CAAC,KAAa;QACrB,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;KAC9G;;yHALU,4BAA4B;uHAA5B,4BAA4B;2FAA5B,4BAA4B;kBAHxC,IAAI;mBAAC;oBACJ,IAAI,EAAE,8BAA8B;iBACrC;;;MCCY,4BAA4B;IACvC,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;KAAI;IAE1D,SAAS,CAAC,KAAc;QACtB,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;KAC7G;;yHALU,4BAA4B;uHAA5B,4BAA4B;2FAA5B,4BAA4B;kBAHxC,IAAI;mBAAC;oBACJ,IAAI,EAAE,8BAA8B;iBACrC;;;MCCY,wBAAwB;;qHAAxB,wBAAwB;sHAAxB,wBAAwB,iBAHpB,4BAA4B,EAAE,4BAA4B,aAC/D,4BAA4B,EAAE,4BAA4B;sHAEzD,wBAAwB;2FAAxB,wBAAwB;kBAJpC,QAAQ;mBAAC;oBACR,YAAY,EAAE,CAAC,4BAA4B,EAAE,4BAA4B,CAAC;oBAC1E,OAAO,EAAE,CAAC,4BAA4B,EAAE,4BAA4B,CAAC;iBACtE;;;ACPD;;;;;;"}