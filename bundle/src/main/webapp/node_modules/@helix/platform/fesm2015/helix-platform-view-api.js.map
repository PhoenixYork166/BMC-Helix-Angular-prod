{"version":3,"file":"helix-platform-view-api.js","sources":["../../../../libs/platform/view/api/common/record-grid-query-filter.types.ts","../../../../libs/platform/view/api/common/record-grid.types.ts","../../../../libs/platform/view/api/common/rich-text.constant.ts","../../../../libs/platform/view/api/common/ckeditor-configurator.service.ts","../../../../libs/platform/view/api/registries/view-component-descriptor.types.ts","../../../../libs/platform/view/api/device/device.types.ts","../../../../libs/platform/view/api/common/available-on-devices-prop.types.ts","../../../../libs/platform/view/api/common/disabled-prop.types.ts","../../../../libs/platform/view/api/common/hidden-prop.types.ts","../../../../libs/platform/view/api/common/styles-prop.types.ts","../../../../libs/platform/view/api/common/standard-prop.types.ts","../../../../libs/platform/view/api/expressions/expression-helper.service.ts","../../../../libs/platform/view/api/expressions/expression-syntax-tree-builder.service.ts","../../../../libs/platform/view/api/expressions/expression-functions.constant.ts","../../../../libs/platform/view/api/expressions/default-expression-evaluator.service.ts","../../../../libs/platform/view/api/expressions/default-expression-validator.service.ts","../../../../libs/platform/view/api/expressions/expression-evaluator.service.ts","../../../../libs/platform/view/api/expressions/expression-evaluator.types.ts","../../../../libs/platform/view/api/expressions/record-query-expression-evaluator.service.ts","../../../../libs/platform/view/api/icons/icon.constant.ts","../../../../libs/platform/view/api/registries/view-component-registry.service.ts","../../../../libs/platform/view/api/domain/view-definition-type.enum.ts","../../../../libs/platform/view/api/domain/view-definition.constant.ts","../../../../libs/platform/view/api/services/view-definition-parser.service.ts","../../../../libs/platform/view/api/view-action/view-action-registry.service.ts","../../../../libs/platform/view/api/domain/view-component.types.ts","../../../../libs/platform/view/api/services/view-definition-localization.service.ts","../../../../libs/platform/view/api/layout/view-layout.types.ts","../../../../libs/platform/view/api/layout/view-layout.class.ts","../../../../libs/platform/view/api/services/view-definition.service.ts","../../../../libs/platform/view/api/services/view-definition-data-page.service.ts","../../../../libs/platform/view/api/services/view-definition-cache.service.ts","../../../../libs/platform/view/api/view.module.ts","../../../../libs/platform/view/api/view-action/view-action.service.ts","../../../../libs/platform/view/api/view-action/view-action.types.ts","../../../../libs/platform/view/api/view-action/common/launch-behavior.constant.ts","../../../../libs/platform/view/api/view-action/view-action-design-adapter.service.ts","../../../../libs/platform/view/api/view-action/view-action-design.module.ts","../../../../libs/platform/view/api/view-action/view-action-definition-adapter-registry.service.ts","../../../../libs/platform/view/api/domain/view-display-type.enum.ts","../../../../libs/platform/view/api/view-action/view-action-utils.service.ts","../../../../libs/platform/view/api/layout/old-view-layout-adapter.service.ts","../../../../libs/platform/view/api/shell/shell.constant.ts","../../../../libs/platform/view/api/shell/shell.service.ts","../../../../libs/platform/view/api/resolvers/homepage.resolver.ts","../../../../libs/platform/view/api/resolvers/view-component.resolver.ts","../../../../libs/platform/view/api/device/device-detection.service.ts","../../../../libs/platform/view/api/helix-platform-view-api.ts"],"sourcesContent":["export enum RecordGridFilterDataLogic {\n  And = 'and',\n  Or = 'or'\n}\n\nexport enum RecordGridFilterOperator {\n  Eq = 'eq',\n  Gte = 'gte',\n  Lte = 'lte',\n  Like = 'like',\n  Ne = 'ne',\n  Lt = 'lt',\n  Gt = 'gt',\n  In = 'in'\n}\n\nexport interface IRecordGridFilterColumnValue<TValue = any | IRecordGridNamedFilterOption> {\n  [field: string]: TValue;\n}\n\nexport const RecordGridNamedFilterOptionKey = 'namedFilterOption';\n\nexport interface IRecordGridNamedFilterOption {\n  [RecordGridNamedFilterOptionKey]: string;\n}\n\nexport interface IRecordGridFilterOperator {\n  /** RecordGridFilterOperator: 'gte', 'eq', etc. In predefined filter presets it has guid for component definition */\n  [operator: string]: IRecordGridFilterColumnValue | string;\n}\n\nexport type IRecordGridFilterDataOrOperator = IRecordGridFilterOperator | IRecordGridFilterData;\n\n/**\n * Filter example:\n *\n * {\n *   \"and\": [\n *     {\n *       \"or\": [\n *         {\n *           \"eq\": {\n *             \"textField1\": \"foo\"\n *           }\n *         },\n *         {\n *           \"eq\": {\n *             \"textField1\": \"bar\"\n *           }\n *         }\n *       ]\n *     },\n *     {\n *       \"and\": [\n *         {\n *           \"gte\": {\n *             \"numberField2\": -1e+26\n *           }\n *         },\n *         {\n *           \"lte\": {\n *             \"numberField2\": 1e+26\n *           }\n *         }\n *       ]\n *     }\n *   ]\n * }\n */\n\nexport interface IRecordGridFilterData {\n  [RecordGridFilterDataLogic.And]?: IRecordGridFilterDataOrOperator[];\n  [RecordGridFilterDataLogic.Or]?: IRecordGridFilterDataOrOperator[];\n}\n","import { IFieldDefinition } from '@helix/platform/record/api';\nimport { Observable } from 'rxjs';\nimport { SelectedAdvancedFilter } from '@bmc-ux/adapt-angular';\nimport { IRecordGridFilterData } from './record-grid-query-filter.types';\nimport { RowDataItem } from '@bmc-ux/adapt-table';\nimport { IViewPresetApi } from './view-preset.types';\n\nexport const RowDataItemIdFieldName = '$ID$';\n\nexport interface IRowDataItem extends RowDataItem {\n  [RowDataItemIdFieldName]: string;\n}\n\nexport enum ApplyGridFilterMode {\n  Append = 'Append',\n  Remove = 'Remove',\n  Overwrite = 'Overwrite',\n  Merge = 'Merge',\n  Clear = 'Clear',\n  Begin = 'Begin',\n  End = 'End'\n}\n\nexport interface IRecordGridColumnPublicProperties {\n  field: string;\n  header: string;\n  hidden: boolean;\n  fieldDefinition: IFieldDefinition;\n}\n\nexport interface IRxRecordGridApi extends IViewPresetApi {\n  refresh: () => Observable<never>;\n  setFilter: (filters: SelectedAdvancedFilter[]) => void;\n  getColumns: () => IRecordGridColumnPublicProperties[];\n  getRecordDefinitionName: () => string;\n  getSelectedRows: (inSortOrder?: boolean) => IRowDataItem[];\n  setSelectedRows: (selectedRows: IRowDataItem[]) => void;\n  getFirstSelectedRow: () => IRowDataItem;\n  getSelectedRowCount: () => number;\n  getVisibleRows: () => IRowDataItem[];\n  applyFilters: (filters: IRecordGridFilterData, mode: ApplyGridFilterMode) => void;\n}\n","const expressionAttributeName = 'rx-expression';\n\nexport const RX_RICH_TEXT = {\n  expressionAttributeName\n};\n","import { Injectable } from '@angular/core';\nimport { RxLocalizationService } from '@helix/platform/shared/api';\nimport { RxUrlUtilsService } from '@helix/platform/utils';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RX_RICH_TEXT } from './rich-text.constant';\n\nconst RX_RICH_TEXT_STYLES = 'skins/rich-text/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxCkEditorConfiguratorService {\n  constructor(\n    private translateService: TranslateService,\n    private rxLocalizationService: RxLocalizationService,\n    private rxUrlUtilsService: RxUrlUtilsService\n  ) {}\n\n  getCKEditorConfig(): any {\n    return {\n      resize_enabled: false,\n      title: false,\n      skin: 'rich-text,' + RX_RICH_TEXT_STYLES,\n      toolbar: [\n        [\n          'Bold',\n          'Italic',\n          'Strike',\n          'Underline',\n          '-',\n          'NumberedList',\n          'BulletedList',\n          'Outdent',\n          'Indent',\n          '-',\n          'JustifyLeft',\n          'JustifyCenter',\n          'JustifyRight',\n          '-',\n          'Format',\n          'Styles',\n          'Font',\n          'FontSize',\n          'TextColor'\n        ]\n      ],\n      stylesSet: [\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.italic-title'),\n          element: 'h2',\n          attributes: {\n            class: 'italic-title'\n          }\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.subtitle'),\n          element: 'h3',\n          attributes: {\n            class: 'subtitle'\n          }\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.special-container'),\n          element: 'div',\n          attributes: {\n            class: 'special-containers'\n          }\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.marker'),\n          element: 'span',\n          attributes: {\n            class: 'marker'\n          }\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.small'),\n          element: 'small'\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.computer-code'),\n          element: 'code'\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.keyboard-phrase'),\n          element: 'kbd'\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.sample-text'),\n          element: 'samp'\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.variable'),\n          element: 'var'\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.deleted-text'),\n          element: 'del'\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.inserted-text'),\n          element: 'ins'\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.cited-work'),\n          element: 'cite'\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.inline-quotation'),\n          element: 'q'\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.compact-table'),\n          element: 'table',\n          attributes: {\n            cellpadding: '5',\n            cellspacing: '0',\n            class: 'compact-table'\n          }\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.borderless-table'),\n          element: 'table',\n          attributes: {\n            class: 'borderless-table'\n          }\n        },\n        {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.ckeditor.styles-set.square-bulleted-list'),\n          element: 'ul',\n          attributes: {\n            class: 'square-bulleted-list'\n          }\n        }\n      ],\n      language: this.rxLocalizationService.currentLocale,\n      format_tags: 'p;h1;h2;h3;pre',\n      height: '78px'\n    };\n  }\n\n  getContentRules(): CKEDITOR.filter.allowedContentRules {\n    return {\n      p: true,\n      strong: true,\n      em: true,\n      s: true,\n      u: true,\n      ol: true,\n      ul: true,\n      li: true,\n      small: true,\n      code: true,\n      kbd: true,\n      samp: true,\n      var: true,\n      del: true,\n      ins: true,\n      cite: true,\n      q: true,\n      pre: true,\n      br: true,\n      span: {\n        classes: 'marker',\n        attributes: [RX_RICH_TEXT.expressionAttributeName, 'contenteditable', 'title'],\n        styles: 'color'\n      },\n      h1: true,\n      h2: {\n        classes: 'italic-title'\n      },\n      h3: {\n        classes: 'subtitle'\n      },\n      div: {\n        classes: 'special-containers'\n      },\n      a: {\n        match: (element) => this.rxUrlUtilsService.isUrlSafe(element.attributes.href),\n        attributes: [\n          'target',\n          'id',\n          'dir',\n          'accesskey',\n          'lang',\n          'tabindex',\n          'title',\n          'type',\n          'charset',\n          'rel',\n          'href',\n          'name',\n          'style',\n          'class',\n          'download'\n        ]\n      },\n      'div h1 h2 h3 p span pre li': {\n        styles: 'font-size, text-align, font-family'\n      }\n    } as CKEDITOR.filter.allowedContentRules;\n  }\n}\n","import { ComponentFactory, Injector, Type } from '@angular/core';\nimport { IExpressionConfigurator, IExpressionConfiguratorProvider, IPlainObject } from '@helix/platform/shared/api';\nimport { IExpressionEvaluator } from '../expressions/expression-evaluator.types';\nimport { IViewDefinitionPermission } from '../domain/view-definition-permission.interface';\n\nexport interface IViewComponentDescriptor {\n  // type/selector that uniquely identifies the component\n  type: string;\n\n  // alternative types that can be used by component\n  aliases?: string[];\n\n  // named areas withing a component where the child components will be rendered\n  outlets?: { name: string }[];\n\n  // component factory for creating the component at runtime\n  componentFactory?: ComponentFactory<any>; // IViewComponent\n\n  // descriptors of a component's runtime properties\n  properties?: IComponentPropertyDescriptor[];\n\n  // name of a property in the parent component's propertiesByName where\n  // propertiesByName of the current data component will be stored at runtime\n  configPropertyName?: string;\n\n  // name of the component as displayed in the view designer palette\n  // and used as the default label\n  name?: string;\n\n  // optional index that used for sorting components in palette\n  index?: number;\n\n  // ID of a bundle to which this component logically belongs.\n  // If the specified bundle is not deployed, the component will not be available\n  // in the view designer palette.\n  bundleId?: string;\n\n  // list of bundle IDs within which this component will be available at design time;\n  // if not specified, or blank, the component will be available in all bundles.\n  availableInBundles?: Array<string | RegExp>;\n\n  // component factory for creating the component at design time\n  designComponentFactory?: ComponentFactory<any>;\n\n  // component's design time model\n  designComponentModel?: IViewDesignerComponentModelConstructor;\n\n  expressionConfigurator?: Type<IExpressionConfigurator>;\n\n  // name of a view designer palette group in which this component will be displayed\n  group?: string;\n\n  // flag indicating whether the component should be hidden in the view designer palette;\n  // data and page components are always hidden\n  hidden?: boolean;\n\n  // CSS class name for the icon to display in the view designer palette\n  icon?: string;\n\n  // flag indicating whether this component can contain child components, including data components\n  isContainerComponent?: boolean;\n\n  // flag indicating whether this is a data component\n  // used for storing the data related to its parent component\n  // but not rendered as an individual component, e.g. record grid column\n  isDataComponent?: boolean;\n\n  // flag indicating whether this is a page component\n  isPageComponent?: boolean;\n\n  // additional options\n  options?: IPlainObject;\n\n  // callback that is executed to decide whether this component can be dropped\n  // on a target component on the view designer canvas\n  canBeInsertedInto?(componentTypes: string[]): boolean;\n}\n\nexport interface IViewDesignerComponentModel<TProperties = IPlainObject, TDesignProperties = TProperties>\n  extends IExpressionConfiguratorProvider {\n  rxInit?(): void;\n\n  getPropertiesByName?(props: TDesignProperties): TProperties;\n}\n\nexport interface IViewDesignerComponentModelConstructor {\n  new (injector: Injector, sandbox: any): IViewDesignerComponentModel;\n\n  getInitialProperties?(initialProperties: IPlainObject): IPlainObject;\n\n  getDefaultPermissions?(): IViewDefinitionPermission[];\n}\n\nexport interface IComponentPropertyDescriptor {\n  name: string;\n  label?: string;\n  // if provided, runtime will try to cast property value to provided type\n  type?: ViewComponentPropertyType;\n  // if provided, designer will try to cast property value to provided type\n  designType?: ViewComponentPropertyType;\n  enableExpressionEvaluation?: boolean;\n  // custom Expression Evaluator Service\n  evaluatorService?: IExpressionEvaluator;\n  // if provided true, property value will be localizable\n  localizable?: boolean;\n}\n\nexport enum ViewComponentPropertyType {\n  Boolean = 'boolean',\n  String = 'string',\n  Number = 'number',\n  Array = 'array',\n  Object = 'object'\n}\n","export enum RxDevice {\n  Desktop = 'desktop',\n  Tablet = 'tablet',\n  Mobile = 'mobile'\n}\n","import { ViewComponentPropertyType } from '../registries/view-component-descriptor.types';\nimport { RxDevice } from '../device/device.types';\n\nexport const RX_AVAILABLE_ON_DEVICES_ALL_VALUE = Object.values(RxDevice);\n\nexport const RX_AVAILABLE_ON_DEVICES_PROP_NAME = 'availableOnDevices';\n\nexport const RX_AVAILABLE_ON_DEVICES_DEFAULT_VALUE = {\n  [RX_AVAILABLE_ON_DEVICES_PROP_NAME]: RX_AVAILABLE_ON_DEVICES_ALL_VALUE\n};\n\nexport const RX_AVAILABLE_ON_DEVICES_PROP_DESC = {\n  name: RX_AVAILABLE_ON_DEVICES_PROP_NAME,\n  type: ViewComponentPropertyType.Array,\n  designType: ViewComponentPropertyType.Array\n};\n\nexport interface IRxAvailableOnDevicesProp {\n  availableOnDevices?: RxDevice[];\n}\n","export const RX_DISABLED_PROP_NAME = 'disabled';\n\nexport const RX_DISABLED_PROP_DEFAULT_VALUE = {\n  [RX_DISABLED_PROP_NAME]: '0'\n};\n\nexport const RX_DISABLED_PROP_DESC = {\n  name: RX_DISABLED_PROP_NAME,\n  enableExpressionEvaluation: true\n};\n\nexport interface IRxDisabledProp {\n  disabled?: string | any;\n}\n","export const RX_HIDDEN_PROP_NAME = 'hidden';\n\nexport const RX_HIDDEN_PROP_DEFAULT_VALUE = {\n  [RX_HIDDEN_PROP_NAME]: '0'\n};\n\nexport const RX_HIDDEN_PROP_DESC = {\n  name: RX_HIDDEN_PROP_NAME,\n  enableExpressionEvaluation: true\n};\n\nexport interface IRxHiddenProp {\n  hidden?: string | any;\n}\n","export const RX_STYLES_PROP_NAME = 'styles';\n\nexport const RX_STYLES_PROP_DEFAULT_VALUE = {\n  [RX_STYLES_PROP_NAME]: null\n};\n\nexport const RX_STYLES_PROP_DESC = {\n  name: RX_STYLES_PROP_NAME\n};\n\nexport interface IRxStylesProp {\n  styles?: string;\n}\n","import {\n  IRxAvailableOnDevicesProp,\n  RX_AVAILABLE_ON_DEVICES_DEFAULT_VALUE,\n  RX_AVAILABLE_ON_DEVICES_PROP_DESC\n} from './available-on-devices-prop.types';\nimport { IRxHiddenProp, RX_HIDDEN_PROP_DEFAULT_VALUE, RX_HIDDEN_PROP_DESC } from './hidden-prop.types';\nimport { IRxStylesProp, RX_STYLES_PROP_DEFAULT_VALUE, RX_STYLES_PROP_DESC } from './styles-prop.types';\n\nexport const RX_STANDARD_PROPS_DESC = [RX_HIDDEN_PROP_DESC, RX_STYLES_PROP_DESC, RX_AVAILABLE_ON_DEVICES_PROP_DESC];\n\nexport const RX_STANDARD_PROPS_DEFAULT_VALUES = {\n  ...RX_HIDDEN_PROP_DEFAULT_VALUE,\n  ...RX_STYLES_PROP_DEFAULT_VALUE,\n  ...RX_AVAILABLE_ON_DEVICES_DEFAULT_VALUE\n};\n\nexport interface IRxStandardProps extends IRxHiddenProp, IRxStylesProp, IRxAvailableOnDevicesProp {}\n","import { Injectable } from '@angular/core';\nimport { escapeRegExp, map, reduce, uniq } from 'lodash';\nimport { ExpressionOperator } from '@helix/platform/shared/api';\n\nexport interface IExtractedTokens {\n  matches: RegExpMatchArray;\n  expression: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxExpressionHelperService {\n  prepareHandlers: Array<(expression: string) => string> = [];\n\n  constructor() {\n    function _convertNull(expression: string): string {\n      return expression.replace(/null/gi, null);\n    }\n\n    function _convertNot(expression: string): string {\n      return expression.replace(/not/gi, '!');\n    }\n\n    function _convertOr(expression: string): string {\n      return expression.replace(/or/gi, ExpressionOperator.Or);\n    }\n\n    function _convertAnd(expression: string): string {\n      return expression.replace(/and/gi, ExpressionOperator.And);\n    }\n\n    function _convertLike(expression: string): string {\n      return expression.replace(/like/gi, ExpressionOperator.Like);\n    }\n\n    function _convertContains(expression) {\n      return expression.replace(/contains/gi, ExpressionOperator.Contains);\n    }\n\n    this.prepareHandlers.push(_convertNull, _convertNot, _convertAnd, _convertOr, _convertLike, _convertContains);\n  }\n\n  extractTokens(regex: RegExp, key: string, expression: string): IExtractedTokens {\n    const matches = expression.match(regex);\n\n    return {\n      matches,\n      expression: expression.replace(regex, key)\n    };\n  }\n\n  insertTokens(matches: RegExpMatchArray | null, key: string, expression: string): string {\n    if (matches !== null) {\n      matches.forEach((value) => {\n        expression = expression.replace(key, value);\n      });\n    }\n\n    return expression;\n  }\n\n  prepare(expression: string): string {\n    // replace all spaces with charCode 160 to 32 charCode which supported by jsep\n    const convertedExpression = expression.replace(new RegExp(String.fromCharCode(160), 'g'), ' ');\n\n    const stringExpressionsData = this.extractTokens(\n      /'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'|\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"/g,\n      'RX_STRING_EXPRESSION',\n      convertedExpression\n    );\n\n    stringExpressionsData.matches = map(stringExpressionsData.matches, this.insertLiteralExpressions);\n\n    const expressionsData = this.extractTokens(/\\${[^}]+}/g, 'RX_EXPRESSION', stringExpressionsData.expression);\n\n    let preparedExpression = this.prepareOperators(expressionsData.expression);\n\n    preparedExpression = this.insertExpressions(expressionsData.matches, 'RX_EXPRESSION', preparedExpression);\n\n    return this.insertTokens(stringExpressionsData.matches, 'RX_STRING_EXPRESSION', preparedExpression);\n  }\n\n  prepareOperators(expression: string): string {\n    return reduce(this.prepareHandlers, (result, handler) => handler(result), expression);\n  }\n\n  private insertLiteralExpressions(expression: string): string {\n    const literalExpressions = uniq(expression.match(/\\${[^}$]+}/g));\n\n    literalExpressions.forEach((literalExpression) => {\n      const regexp = new RegExp(escapeRegExp(literalExpression), 'g');\n\n      expression = expression.replace(regexp, `rx-${literalExpression}`);\n    });\n\n    return expression;\n  }\n\n  private insertExpressions(matches: RegExpMatchArray, key: string, expression: string): string {\n    if (matches !== null) {\n      matches.forEach((value) => {\n        expression = expression.replace(key, `\"rx-${value}\"`);\n      });\n    }\n\n    return expression;\n  }\n}\n","import * as jsep from 'jsep';\nimport { Injectable } from '@angular/core';\nimport { ExpressionOperator } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxExpressionSyntaxTreeBuilderService {\n  private jsep;\n\n  constructor() {\n    this.jsep = jsep;\n\n    this.jsep.addBinaryOp(ExpressionOperator.Contains, 7);\n    this.jsep.addBinaryOp(ExpressionOperator.Like, 7);\n    this.jsep.addBinaryOp(ExpressionOperator.And, 2);\n    this.jsep.addBinaryOp(ExpressionOperator.Or, 1);\n    this.jsep.addBinaryOp(ExpressionOperator.Equal, 6);\n    this.jsep.addBinaryOp(ExpressionOperator.In, 8);\n\n    // Remove default unused binary operators.\n    this.jsep.removeBinaryOp('||');\n    this.jsep.removeBinaryOp('&&');\n    this.jsep.removeBinaryOp('|');\n    this.jsep.removeBinaryOp('^');\n    this.jsep.removeBinaryOp('&');\n    this.jsep.removeBinaryOp('==');\n    this.jsep.removeBinaryOp('===');\n    this.jsep.removeBinaryOp('!==');\n    this.jsep.removeBinaryOp('<<');\n    this.jsep.removeBinaryOp('>>');\n    this.jsep.removeBinaryOp('>>>');\n\n    // Remove default unused unary operators.\n    this.jsep.removeUnaryOp('~');\n\n    // Remove _, but keep $ to match AR expressions, e.g. $USER$.\n    this.jsep.removeIdentifierChar('_');\n  }\n\n  buildTree(expression: string): jsep.Expression {\n    return this.jsep(expression);\n  }\n}\n","import { IFunctionDataDictionaryDescriptor } from '@helix/platform/shared/api';\nimport { every, includes, map, size } from 'lodash';\n\nconst expressionFunctions: IFunctionDataDictionaryDescriptor[] = [\n  {\n    name: 'SAME',\n    category: 'Array',\n    description: 'Returns true if all values in array are the same, else false.',\n    parameters: [\n      {\n        name: 'array',\n        description: 'The array to inspect.'\n      }\n    ]\n  },\n  {\n    name: 'INCLUDES',\n    category: 'Array',\n    description: 'Returns true if value is found in array, else false.',\n    parameters: [\n      {\n        name: 'array',\n        description: 'The array to inspect.'\n      },\n      {\n        name: 'value',\n        description: 'The value to search for.'\n      }\n    ]\n  },\n  {\n    name: 'SIZE',\n    category: 'Array',\n    description: 'Gets the size of array.',\n    parameters: [\n      {\n        name: 'array',\n        description: 'The array to inspect.'\n      }\n    ]\n  }\n];\n\nexport const RX_EXPRESSION_FUNCTIONS: IFunctionDataDictionaryDescriptor[] = expressionFunctions.map((descriptor) => {\n  const params = map(descriptor.parameters, 'name').join(', ');\n\n  return {\n    ...descriptor,\n    signature: `${descriptor.name}(${params})`\n  };\n});\n\nexport const RX_SUPPORTED_FUNCTION = {\n  SAME: (collection) => every(collection, (value) => value === collection[0]),\n  INCLUDES: (collection, value) => includes(collection, value),\n  SIZE: (collection) => size(collection)\n};\n","import { BinaryExpression, CallExpression, Expression, Identifier, Literal, UnaryExpression } from 'jsep';\nimport { every, find, forEach, includes, isNaN, isNil, isString, isUndefined, result, trim } from 'lodash';\nimport { RxExpressionHelperService } from './expression-helper.service';\nimport { RxExpressionSyntaxTreeBuilderService } from './expression-syntax-tree-builder.service';\nimport { IExpressionEvaluator } from './expression-evaluator.types';\nimport { Injectable } from '@angular/core';\nimport { RxStringService } from '@helix/platform/utils';\nimport BigNumber from 'bignumber.js';\nimport { ExpressionOperator } from '@helix/platform/shared/api';\nimport { RX_EXPRESSION_FUNCTIONS, RX_SUPPORTED_FUNCTION } from './expression-functions.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxDefaultExpressionEvaluatorService implements IExpressionEvaluator {\n  private parsedExpressionCache = {};\n\n  private operators = {\n    [ExpressionOperator.Equal]: (a, b) => {\n      if (BigNumber.isBigNumber(a)) {\n        return a.isEqualTo(b);\n      } else if (BigNumber.isBigNumber(b)) {\n        return b.isEqualTo(a);\n      } else {\n        // tslint:disable-next-line:triple-equals\n        return a == b;\n      }\n    },\n    [ExpressionOperator.Add]: (a, b) => {\n      if ((isNil(a) || isNaN(a)) && (isNil(b) || isNaN(b))) {\n        return null;\n      } else if ((isNil(a) || isNaN(a)) && !(isNil(b) || isNaN(b))) {\n        return BigNumber.isBigNumber(b) ? Number(b) : b;\n      } else if ((isNil(b) || isNaN(b)) && !(isNil(a) || isNaN(a))) {\n        return BigNumber.isBigNumber(a) ? Number(a) : a;\n      }\n\n      // Have to convert BigNumber values to Number in order to use mathimatical addition as opposed to\n      // string concatenation, which will otherwise happen due to BigNumber.valueOf() returning a string.\n      a = BigNumber.isBigNumber(a) ? Number(a) : a;\n      b = BigNumber.isBigNumber(b) ? Number(b) : b;\n\n      return a + b;\n    },\n    [ExpressionOperator.Subtract]: (a, b) => {\n      if (isUndefined(a) || isNaN(a)) {\n        a = 0;\n      }\n\n      if (isUndefined(b) || isNaN(b)) {\n        b = 0;\n      }\n\n      return a - b;\n    },\n    [ExpressionOperator.Multiply]: (a, b) => {\n      if (isUndefined(a) || isNaN(a)) {\n        a = 0;\n      }\n\n      if (isUndefined(b) || isNaN(b)) {\n        b = 0;\n      }\n\n      return a * b;\n    },\n    [ExpressionOperator.Divide]: (a, b) => {\n      if (isUndefined(a) || isUndefined(b) || isNaN(a) || isNaN(b)) {\n        return 0;\n      }\n\n      return a / b;\n    },\n    [ExpressionOperator.LessThan]: (a, b) => {\n      if (BigNumber.isBigNumber(a)) {\n        return a.lt(b);\n      } else if (BigNumber.isBigNumber(b)) {\n        return b.gt(a);\n      } else {\n        return a < b;\n      }\n    },\n    [ExpressionOperator.GreaterThan]: (a, b) => {\n      if (BigNumber.isBigNumber(a)) {\n        return a.gt(b);\n      } else if (BigNumber.isBigNumber(b)) {\n        return b.lt(a);\n      } else {\n        return a > b;\n      }\n    },\n    [ExpressionOperator.GreaterThanOrEqual]: (a, b) => {\n      if (BigNumber.isBigNumber(a)) {\n        return a.gte(b);\n      } else if (BigNumber.isBigNumber(b)) {\n        return b.lte(a);\n      } else {\n        return a >= b;\n      }\n    },\n    [ExpressionOperator.LessThanOrEqual]: (a, b) => {\n      if (BigNumber.isBigNumber(a)) {\n        return a.lte(b);\n      } else if (BigNumber.isBigNumber(b)) {\n        return b.gte(a);\n      } else {\n        return a <= b;\n      }\n    },\n    [ExpressionOperator.NotEqual]: (a, b) => {\n      if (BigNumber.isBigNumber(a)) {\n        return !a.isEqualTo(b);\n      } else if (BigNumber.isBigNumber(b)) {\n        return !b.isEqualTo(a);\n      } else {\n        // tslint:disable-next-line:triple-equals\n        return a != b;\n      }\n    },\n    [ExpressionOperator.Remainder]: (a, b) => {\n      if (isUndefined(a) || isUndefined(b) || isNaN(a) || isNaN(b)) {\n        return 0;\n      }\n\n      return a % b;\n    },\n    [ExpressionOperator.And]: this.andHandler,\n    [ExpressionOperator.And.toLowerCase()]: this.andHandler,\n    [ExpressionOperator.Or]: this.orHandler,\n    [ExpressionOperator.Or.toLowerCase()]: this.orHandler,\n    [ExpressionOperator.Like]: this.likeHandler,\n    [ExpressionOperator.Like.toLowerCase()]: this.likeHandler,\n    [ExpressionOperator.Contains]: this.likeHandler,\n    [ExpressionOperator.Contains.toLowerCase()]: this.likeHandler\n  };\n\n  private unaryOperators = {\n    '-': (value) => {\n      if (isUndefined(value) || isNaN(value)) {\n        return 0;\n      } else {\n        return -Number(value);\n      }\n    },\n    '!': (value) => !Boolean(value)\n  };\n\n  constructor(\n    private rxExpressionHelperService: RxExpressionHelperService,\n    private rxStringService: RxStringService,\n    private rxExpressionSyntaxTreeBuilderService: RxExpressionSyntaxTreeBuilderService\n  ) {}\n\n  parseExpression(expression: string): Expression {\n    if (!this.parsedExpressionCache[expression]) {\n      const parsedExpression = this.rxExpressionSyntaxTreeBuilderService.buildTree(expression);\n\n      if (this.validateChildNodeTypes(parsedExpression)) {\n        this.parsedExpressionCache[expression] = parsedExpression;\n      } else {\n        throw new Error('Invalid syntax');\n      }\n    }\n\n    return this.parsedExpressionCache[expression];\n  }\n\n  evaluate(expression: string, data: object) {\n    let evaluatedExpression = expression;\n\n    expression = trim(expression);\n\n    if (this.rxStringService.isNonEmptyString(expression)) {\n      const preparedExpression = this.rxExpressionHelperService.prepare(expression);\n      let parsedExpression;\n\n      try {\n        parsedExpression = this.parseExpression(preparedExpression);\n      } catch (e) {\n        throw new Error(`Cannot parse expression \"${expression}\": ${e.message}.`);\n      }\n\n      try {\n        evaluatedExpression = this.evaluateNode(parsedExpression, data || {});\n      } catch (e) {\n        throw new Error(`Cannot evaluate expression \"${expression}\": ${e.message}.`);\n      }\n    } else {\n      evaluatedExpression = null;\n    }\n\n    return evaluatedExpression;\n  }\n\n  private andHandler(a, b): boolean {\n    return Boolean(a) && Boolean(b);\n  }\n\n  private orHandler(a, b): boolean {\n    return Boolean(a) || Boolean(b);\n  }\n\n  private likeHandler(a, b): boolean {\n    return includes(a, b);\n  }\n\n  private validateChildNodeTypes(node: Expression): boolean {\n    let isValid = false;\n\n    switch (node.type) {\n      case 'BinaryExpression':\n        isValid =\n          this.validateChildNodeTypes((node as BinaryExpression).left) &&\n          this.validateChildNodeTypes((node as BinaryExpression).right);\n        break;\n\n      case 'UnaryExpression':\n        isValid = this.validateChildNodeTypes((node as UnaryExpression).argument);\n        break;\n\n      case 'CallExpression':\n        isValid = false;\n\n        const functionNode = node as CallExpression;\n        const functionDescriptor = find(RX_EXPRESSION_FUNCTIONS, { name: functionNode.callee['name'] });\n\n        if (functionDescriptor && functionNode.arguments.length === functionDescriptor.parameters.length) {\n          isValid = every(functionNode.arguments, (argument) => this.validateChildNodeTypes(argument));\n        }\n\n        break;\n\n      case 'Literal':\n        isValid = true;\n        break;\n\n      case 'Identifier':\n        isValid = /^\\$[A-Za-z]+\\$$/.test((node as Identifier).name);\n        break;\n    }\n\n    return isValid;\n  }\n\n  private evaluateNode(node: Expression, data: object) {\n    switch (node.type) {\n      case 'BinaryExpression':\n        const left = this.evaluateNode((node as BinaryExpression).left, data);\n        const right = this.evaluateNode((node as BinaryExpression).right, data);\n\n        if (this.operators[(node as BinaryExpression).operator]) {\n          const binaryResult = this.operators[(node as BinaryExpression).operator](left, right);\n\n          if (isNaN(binaryResult)) {\n            throw new Error(\n              `Operator: ${(node as BinaryExpression).operator} has invalid arguments: ${left}, ${right}`\n            );\n          } else {\n            return binaryResult;\n          }\n        } else {\n          throw new Error(`Unknown binary operator: ${(node as BinaryExpression).operator}`);\n        }\n\n      case 'CallExpression':\n        let evaluatedArguments = [];\n        const functionName = (node as CallExpression).callee['name'];\n\n        evaluatedArguments = (node as CallExpression).arguments.map((argument) => this.evaluateNode(argument, data));\n\n        if (RX_SUPPORTED_FUNCTION[functionName]) {\n          return RX_SUPPORTED_FUNCTION[functionName](...evaluatedArguments);\n        } else {\n          throw new Error(`Unknown function: ${functionName}`);\n        }\n\n      case 'Literal':\n        let nodeValue = (node as Literal).value;\n\n        if (isString(nodeValue as string)) {\n          if (/^rx-\\${[^{}$]+}$/.test(nodeValue as string)) {\n            nodeValue = result(data, (nodeValue as string).slice(5, -1));\n          } else {\n            const expressions = (nodeValue as string).match(/(rx-\\${[^{}$]+})/g);\n\n            forEach(expressions, (expression) => {\n              const value = result<any>(data, expression.slice(5, -1));\n\n              nodeValue = (nodeValue as string).replace(expression, isNil(value) ? '' : value);\n            });\n          }\n        }\n\n        return nodeValue;\n\n      case 'UnaryExpression':\n        if (this.unaryOperators[(node as UnaryExpression).operator]) {\n          const evaluatedResult = this.evaluateNode((node as UnaryExpression).argument, data);\n          const unaryResult = this.unaryOperators[(node as UnaryExpression).operator](evaluatedResult);\n\n          if (isNaN(unaryResult)) {\n            throw new Error(`Operator: ${(node as UnaryExpression).operator} has invalid argument: ${evaluatedResult}`);\n          } else {\n            return unaryResult;\n          }\n        } else {\n          throw new Error(`Unknown unary operator: ${(node as UnaryExpression).operator}`);\n        }\n\n      default:\n        throw new Error('Invalid syntax');\n    }\n  }\n}\n","import { RxDefaultExpressionEvaluatorService } from './default-expression-evaluator.service';\nimport { RxExpressionHelperService } from './expression-helper.service';\nimport { IExpressionValidator } from './expression-validator.interface';\nimport { Injectable } from '@angular/core';\nimport { RxStringService } from '@helix/platform/utils';\nimport { IExpressionEvaluator } from './expression-evaluator.types';\nimport { isFunction } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxDefaultExpressionValidatorService implements IExpressionValidator {\n  constructor(\n    private rxStringService: RxStringService,\n    private rxDefaultExpressionEvaluatorService: RxDefaultExpressionEvaluatorService,\n    private rxExpressionHelperService: RxExpressionHelperService\n  ) {}\n\n  isValid(expression: string, customEvaluatorService?: IExpressionEvaluator): boolean {\n    const evaluator = customEvaluatorService || this.rxDefaultExpressionEvaluatorService;\n    let valid = true;\n\n    if (this.rxStringService.isNonEmptyString(expression) && isFunction(evaluator.parseExpression)) {\n      const preparedExpression = this.rxExpressionHelperService.prepare(expression);\n\n      try {\n        evaluator.parseExpression(preparedExpression);\n      } catch (e) {\n        valid = false;\n      }\n    }\n\n    return valid;\n  }\n}\n","import { RxDefaultExpressionEvaluatorService } from './default-expression-evaluator.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { RxDefaultExpressionValidatorService } from './default-expression-validator.service';\nimport { IExpressionEvaluator } from './expression-evaluator.types';\nimport { RxLogService, RxNotificationService } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxExpressionEvaluatorService {\n  constructor(\n    private injector: Injector,\n    private rxLogService: RxLogService,\n    private rxDefaultExpressionEvaluatorService: RxDefaultExpressionEvaluatorService,\n    private rxDefaultExpressionValidatorService: RxDefaultExpressionValidatorService,\n    private rxNotificationService: RxNotificationService\n  ) {}\n\n  evaluate(expression: string, data?: object, customEvaluatorService?: IExpressionEvaluator): any {\n    const evaluator = customEvaluatorService || this.rxDefaultExpressionEvaluatorService;\n\n    const evaluatedExpression = evaluator.evaluate(expression, data);\n\n    this.rxLogService.debug(`EVALUATED EXPRESSION ${expression}: ${evaluatedExpression}`);\n\n    return evaluatedExpression;\n  }\n\n  tryEvaluate(\n    expression: string,\n    data?: object,\n    customEvaluatorService?: IExpressionEvaluator,\n    defaultValue: any = null\n  ): any {\n    let result: any = defaultValue;\n\n    try {\n      result = this.evaluate(expression, data, customEvaluatorService);\n    } catch (error) {\n      this.rxNotificationService.addErrorMessage(error.message);\n    }\n\n    return result;\n  }\n\n  isValid(expression, customEvaluatorService?: IExpressionEvaluator): boolean {\n    return this.rxDefaultExpressionValidatorService.isValid(expression, customEvaluatorService);\n  }\n}\n","import { Expression } from 'jsep';\n\nexport const RX_EXPRESSION_EVALUATOR = {\n  operands: {\n    null: '$NULL$',\n    undefined: '$UNDEFINED$'\n  },\n  associatedFieldIdPrefixPattern: 'recordContext\\\\._associations\\\\.([^\\\\.]+)\\\\.(\\\\w+)\\\\[0]\\\\.'\n};\n\nexport interface IExpressionEvaluator {\n  evaluate(expression: string, data: object);\n\n  parseExpression?(expression: string): Expression;\n}\n","import { Injectable } from '@angular/core';\nimport { isEmpty, isNil, isNull, isString, isUndefined, map, reduce, result } from 'lodash';\nimport { RxStringService } from '@helix/platform/utils';\nimport { RxRecordInstanceUtilsService } from '@helix/platform/record/api';\nimport { ExpressionParserToken } from '@helix/platform/shared/api';\nimport { IExpressionEvaluator, RX_EXPRESSION_EVALUATOR } from './expression-evaluator.types';\nimport { RxDefaultExpressionEvaluatorService } from './default-expression-evaluator.service';\nimport { RxExpressionHelperService } from './expression-helper.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxRecordQueryExpressionEvaluatorService implements IExpressionEvaluator {\n  private viewRegExp = /\\${(view.+?)}/g;\n\n  // extract strings surrounded by double quotes,\n  // extracted strings will include escaped double quotes characters (\"\")\n  private stringMatchingRegExp = /\"((?:(?:\"\")*|(?:[^\"])*)*)\"/g;\n\n  private rxStringsExpressionData;\n  private rxExpressionsData;\n  private arRecordAssociationFilterExpressionData;\n\n  // extract strings with associated field id surrounded by quotes\n  private associationExpressionRegExp = new RegExp(\n    \"(')(\\\\$\\\\{\" + RX_EXPRESSION_EVALUATOR.associatedFieldIdPrefixPattern + \"\\\\d+\\\\})(')\",\n    'g'\n  );\n\n  private rxOperatorCounter: number;\n  private rxViewExpressionCounter: number;\n  private rxStringExpressionCounter: number;\n  private rxAssociationFilterExpressionCounter: number;\n\n  constructor(\n    private rxDefaultExpressionEvaluatorService: RxDefaultExpressionEvaluatorService,\n    private rxExpressionHelper: RxExpressionHelperService,\n    private rxStringService: RxStringService,\n    private rxRecordInstanceUtilsService: RxRecordInstanceUtilsService\n  ) {}\n\n  evaluate(expression: string, data: object): string {\n    this.rxOperatorCounter = 0;\n    this.rxViewExpressionCounter = 0;\n    this.rxStringExpressionCounter = 0;\n    this.rxAssociationFilterExpressionCounter = 0;\n\n    let evaluatedExpression = null;\n\n    if (!this.rxStringService.isEmptySafe(expression)) {\n      // Replace strings in double quotes with RX_STRING_EXPRESSION token, e.g.\n      // \"text ${view.foo}\" = ${view.bar}\"text \"\"text in quotes\"\" text\" ->\n      // RX_EXPRESSION_STRING = ${view.bar}RX_EXPRESSION_STRING\n      this.rxStringsExpressionData = this.rxExpressionHelper.extractTokens(\n        this.stringMatchingRegExp,\n        ExpressionParserToken.RxStringExpression,\n        expression\n      );\n\n      // Replace RX association filter expressions with RX_ASSOCIATION_FILTER_EXPRESSION token, e.g.\n      // '7' = '${recordContext._associations...}' -> '7' = RX_ASSOCIATION_FILTER_EXPRESSION\n      this.arRecordAssociationFilterExpressionData = this.rxExpressionHelper.extractTokens(\n        this.associationExpressionRegExp,\n        'RX_ASSOCIATION_FILTER_EXPRESSION',\n        this.rxStringsExpressionData.expression\n      );\n\n      // Replace RX view expressions with RX_VIEW_EXPRESSION token, e.g\n      // ${view.foo} = ${view.bar} -> RX_VIEW_EXPRESSION = RX_VIEW_EXPRESSION\n      this.rxExpressionsData = this.rxExpressionHelper.extractTokens(\n        this.viewRegExp,\n        'RX_VIEW_EXPRESSION',\n        this.arRecordAssociationFilterExpressionData.expression\n      );\n\n      // Prepare operators, e.g\n      // RX_VIEW_EXPRESSION = NOTRX_VIEW_EXPRESSION -> RX_VIEW_EXPRESSION = !RX_VIEW_EXPRESSION\n      this.rxExpressionHelper.prepareOperators(this.rxExpressionsData.expression);\n\n      const rxOperatorsData = this.rxExpressionHelper.extractTokens(\n        /(\\s+(AND|OR)\\s+)|(\\s*(\\(|\\))\\s*)/g,\n        ExpressionParserToken.RxOperator,\n        this.rxExpressionsData.expression\n      );\n\n      evaluatedExpression = map(rxOperatorsData.expression.split(ExpressionParserToken.RxOperator), (operand) => {\n        const likeExpressionMatch = /(.*)\\s+LIKE\\s+(.*)/g.exec(operand);\n\n        // does operand use the LIKE operator?\n        if (likeExpressionMatch) {\n          const leftOperandValue = this.evaluateOperand(likeExpressionMatch[1], data),\n            rightOperandValue = `\"${this.evaluateOperand(likeExpressionMatch[2], data, true)}\"`;\n\n          return `${leftOperandValue} LIKE ${rightOperandValue}`;\n        } else {\n          return this.evaluateOperand(operand, data);\n        }\n      })\n        .join(ExpressionParserToken.RxOperator)\n        .replace(\n          new RegExp(`${ExpressionParserToken.RxOperator}`, 'g'),\n          () => rxOperatorsData.matches[this.rxOperatorCounter++]\n        );\n    }\n\n    return evaluatedExpression;\n  }\n\n  // Evaluate operand by replacing expression tokens with evaluated values.\n  // e.g\n  // RX_EXPRESSION = RX_EXPRESSION_STRING ->\n  // \"${view.foo}\" = \"text ${view.bar}\" ->\n  // \"Foo\" LIKE \"text Bar\"\n  // or\n  // RX_ASSOCIATION_FILTER_EXPRESSION LIKE %RX_STRING_EXPRESSION% ->\n  // '${recordContext.associations...}' LIKE %\"some ${view.textFieldValue}\"% ->\n  // ${recordContext.associations...} LIKE \"%some text \"\" with \\% escaped \\_ wildcards%\"\n  private evaluateOperand(operand: string, data: object, isLikeOperand: boolean = false): string {\n    return reduce(\n      [\n        this.evaluateRxViewExpressions.bind(this),\n        this.evaluateRxStringExpressions.bind(this),\n        this.prepareRxAssociationFilterExpressions.bind(this)\n      ],\n      (expression, evaluator) => evaluator(expression, data, isLikeOperand),\n      operand\n    );\n  }\n\n  private evaluateRxViewExpressions(operand: string, data: object, isLikeOperand: boolean = false): string {\n    return operand.replace(/RX_VIEW_EXPRESSION/g, () => {\n      return this.rxExpressionsData.matches[this.rxViewExpressionCounter++].replace(\n        this.viewRegExp,\n        (match, submatch) => {\n          let value = result(data, submatch);\n\n          if (isUndefined(value)) {\n            return RX_EXPRESSION_EVALUATOR.operands.undefined;\n          } else if (isNull(value) || value === '') {\n            return isLikeOperand ? '' : RX_EXPRESSION_EVALUATOR.operands.null;\n          } else if (isString(value)) {\n            value = isLikeOperand\n              ? this.rxRecordInstanceUtilsService.escapeTextWildcards(value)\n              : value.replace(/\"/g, '\"\"');\n          }\n\n          return isLikeOperand ? value : `\"${value}\"`;\n        }\n      );\n    });\n  }\n\n  private evaluateRxStringExpressions(operand: string, data: object, isLikeOperand: boolean = false): string {\n    return operand.replace(new RegExp(`${ExpressionParserToken.RxStringExpression}`, 'g'), () => {\n      let stringExpression = this.rxStringsExpressionData.matches[this.rxStringExpressionCounter++];\n\n      if (isLikeOperand) {\n        stringExpression = stringExpression.replace(this.stringMatchingRegExp, '$1');\n      }\n\n      stringExpression = stringExpression.replace(this.viewRegExp, (match, submatch) => {\n        const value = result(data, submatch);\n\n        if (isNil(value)) {\n          return '';\n        } else if (isLikeOperand && isString(value)) {\n          return this.rxRecordInstanceUtilsService.escapeTextWildcards(value);\n        }\n\n        return value;\n      });\n\n      if (isEmpty(stringExpression) && !isLikeOperand) {\n        stringExpression = RX_EXPRESSION_EVALUATOR.operands.null;\n      }\n\n      return stringExpression;\n    });\n  }\n\n  private prepareRxAssociationFilterExpressions(operand: string): string {\n    return operand.replace(/RX_ASSOCIATION_FILTER_EXPRESSION/g, () =>\n      this.arRecordAssociationFilterExpressionData.matches[this.rxAssociationFilterExpressionCounter++].replace(\n        this.associationExpressionRegExp,\n        (match, firstQuote, associationExpression, lastQuote) => associationExpression\n      )\n    );\n  }\n}\n","import { IPlainObject } from '@helix/platform/shared/api';\n\nexport const RX_LEGACY_ICONS: IPlainObject = {\n  add: 'plus',\n  addCircle: 'plus_circle',\n  back: 'undo',\n  copy: 'files_copy_o',\n  delete: 'cross',\n  deleteCircle: 'cross_circle',\n  edit: 'pencil',\n  exclamationCircle: 'exclamation_circle',\n  exclamationTriangle: 'exclamation_triangle',\n  help: 'question_circle',\n  preview: 'layout_preview',\n  mail: 'envelope',\n  print: 'printer',\n  thumbsDown: 'thumbs_down',\n  thumbsUp: 'thumbs_up'\n};\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport {\n  IBundleDescriptor,\n  RX_APPLICATION,\n  RxBundleCacheService,\n  RxGlobalCacheService,\n  RxLogService\n} from '@helix/platform/shared/api';\nimport { RxStringService } from '@helix/platform/utils';\nimport { isEmpty, some } from 'lodash';\nimport { defer, from, Observable, of } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { IViewComponentDescriptor } from './view-component-descriptor.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewComponentRegistryService {\n  // contains all registered component descriptors\n  private componentDescriptors: Map<string, IViewComponentDescriptor> = new Map();\n  private asyncComponentDescriptors: Promise<IViewComponentDescriptor>[] = [];\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxStringService: RxStringService,\n    private rxLogService: RxLogService\n  ) {}\n\n  private ownerBundleIds$ = this.rxGlobalCacheService.getBundleDescriptors().pipe(\n    map((bundleDescriptors) =>\n      bundleDescriptors.reduce((ownerBundleIds, bundleDescriptor) => {\n        bundleDescriptor.uiOptions.viewComponents?.forEach((viewComponentName: string) => {\n          ownerBundleIds[viewComponentName] = bundleDescriptor.id;\n        });\n\n        return ownerBundleIds;\n      }, {})\n    ),\n    shareReplay(1)\n  );\n\n  resolveAsyncDescriptors(): Observable<Map<string, IViewComponentDescriptor>> {\n    if (this.asyncComponentDescriptors.length) {\n      this.rxLogService.debug(`Resolving ${this.asyncComponentDescriptors.length} view component descriptor(s)...`);\n\n      return defer(() =>\n        from(\n          Promise.all(this.asyncComponentDescriptors).then((descriptors) => {\n            descriptors.forEach((descriptor) => {\n              this.registerSync(descriptor);\n            });\n\n            this.rxLogService.debug(\n              `Resolved ${descriptors.length} view component descriptors: ${descriptors\n                .map((desc) => desc.type)\n                .join(', ')}.`\n            );\n\n            return this.componentDescriptors;\n          })\n        )\n      );\n    } else {\n      return of(this.componentDescriptors);\n    }\n  }\n\n  getRegisteredComponents(): Map<string, IViewComponentDescriptor> {\n    return this.componentDescriptors;\n  }\n\n  get(type: string): IViewComponentDescriptor {\n    return this.componentDescriptors.get(type);\n  }\n\n  register(...componentDescriptors: IViewComponentDescriptor[] | Promise<IViewComponentDescriptor>[]): void {\n    componentDescriptors.forEach((descriptor) => {\n      this.asyncComponentDescriptors.push(Promise.resolve(descriptor));\n    });\n  }\n\n  registerSync(descriptor: IViewComponentDescriptor): void {\n    if (descriptor.aliases?.includes(descriptor.type)) {\n      this.rxLogService.warning(\n        `Component ${descriptor.type} should not have its type listed in descriptor's aliases property.`\n      );\n\n      descriptor.aliases = descriptor.aliases.filter((type) => type !== descriptor.type);\n    }\n\n    this.componentDescriptors.set(descriptor.type, descriptor);\n\n    descriptor.aliases?.forEach((type) => {\n      this.componentDescriptors.set(type, descriptor);\n    });\n  }\n\n  isDataComponentDescriptor(componentDescriptor: IViewComponentDescriptor): boolean {\n    return Boolean(componentDescriptor.isDataComponent);\n  }\n\n  getBundlePageComponents(bundleId: string, includeAliases = false): IViewComponentDescriptor[] {\n    return this.getDescriptors(includeAliases).filter((componentDescriptor: IViewComponentDescriptor) =>\n      componentDescriptor.isPageComponent && isEmpty(componentDescriptor.availableInBundles)\n        ? componentDescriptor.bundleId === bundleId\n        : this.rxStringService.isIncluded(bundleId, componentDescriptor.availableInBundles)\n    ) as IViewComponentDescriptor[];\n  }\n\n  getLicensedComponents(includeAliases = false): Observable<IViewComponentDescriptor[]> {\n    return this.rxGlobalCacheService\n      .getLicensedBundleDescriptors()\n      .pipe(\n        map((bundleDescriptors) =>\n          this.getDescriptors(includeAliases).filter(\n            (componentDescriptor) =>\n              this.isBundleLicensed(componentDescriptor.bundleId, bundleDescriptors) &&\n              this.isComponentAvailableInCurrentBundle(componentDescriptor)\n          )\n        )\n      );\n  }\n\n  getComponentOwnerBundleId(viewComponentType: string): Observable<string> {\n    return this.ownerBundleIds$.pipe(map((ownerBundleIds) => ownerBundleIds[viewComponentType]));\n  }\n\n  private isBundleLicensed(bundleId: string, bundleDescriptors: IBundleDescriptor[]): boolean {\n    return bundleId === RX_APPLICATION.platformBundleId || some(bundleDescriptors, { id: bundleId });\n  }\n\n  private isComponentAvailableInCurrentBundle(componentDescriptor: IViewComponentDescriptor): boolean {\n    return (\n      isEmpty(componentDescriptor.availableInBundles) ||\n      this.rxStringService.isIncluded(this.rxBundleCacheService.bundleId, componentDescriptor.availableInBundles)\n    );\n  }\n\n  private getDescriptors(includeAliases = false): IViewComponentDescriptor[] {\n    return [...this.componentDescriptors.entries()].reduce((result, [type, descriptor]) => {\n      if (includeAliases || !descriptor.aliases?.includes(type)) {\n        result.push(descriptor);\n      }\n\n      return result;\n    }, []);\n  }\n}\n","export enum ViewDefinitionType {\n  Regular = 'REGULAR',\n  Shell = 'SHELL'\n}\n","import { ViewDefinitionType } from './view-definition-type.enum';\n\nexport const RX_VIEW_DEFINITION = {\n  types: {\n    regular: ViewDefinitionType.Regular,\n    shell: ViewDefinitionType.Shell\n  },\n\n  resourceTypes: {\n    viewComponent: 'com.bmc.arsys.rx.services.view.domain.ViewComponentDefinition',\n    containerViewComponent: 'com.bmc.arsys.rx.services.view.domain.ContainerViewComponentDefinition'\n  },\n\n  defaultOutletName: 'DEFAULT',\n\n  unknownPageComponent: {\n    name: 'Unknown Component'\n  },\n\n  defaultLayoutTemplateId: 5,\n\n  styles: [\n    { id: 'rx-no-margin', name: 'No Margin' },\n    { id: 'rx-default-border', name: '1px Border' },\n    { id: 'rx-white-background', name: 'White Background' }\n  ]\n};\n","import { Injectable } from '@angular/core';\nimport { IViewDefinition } from '../domain/view-definition.interface';\nimport { IViewComponentDefinitionWithParent } from '../domain/view-component-definition-with-parent.interface';\nimport {\n  AnyViewComponentDefinition,\n  IContainerViewComponentDefinition,\n  IViewComponentDefinition\n} from '../domain/view-component-definition.types';\nimport { find } from 'lodash';\nimport { RxTreeService } from '@helix/platform/utils';\nimport { RxPredicate } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDefinitionParserService {\n  constructor(private rxTreeService: RxTreeService) {}\n\n  getComponents(\n    definition: IContainerViewComponentDefinition | IViewDefinition,\n    skipInitial = false\n  ): IViewComponentDefinitionWithParent[] {\n    const components: IViewComponentDefinitionWithParent[] = [];\n\n    if (!skipInitial) {\n      components.push({\n        componentDefinition: definition,\n        parentComponentDefinition: null\n      } as IViewComponentDefinitionWithParent);\n    }\n\n    this.processComponents(definition.componentDefinitions, components, definition);\n\n    return components;\n  }\n\n  private processComponents(\n    componentDefinitions: Array<IViewComponentDefinition | IContainerViewComponentDefinition>,\n    components: IViewComponentDefinitionWithParent[],\n    parentComponentDefinition: IContainerViewComponentDefinition | IViewDefinition\n  ) {\n    componentDefinitions.forEach((componentDefinition) => {\n      components.push({ componentDefinition, parentComponentDefinition } as IViewComponentDefinitionWithParent);\n\n      if (this.isContainerViewComponentDefinition(componentDefinition)) {\n        this.processComponents(componentDefinition.componentDefinitions, components, componentDefinition);\n      }\n    });\n  }\n\n  private isContainerViewComponentDefinition(\n    componentDefinition: IViewComponentDefinition | IContainerViewComponentDefinition\n  ): componentDefinition is IContainerViewComponentDefinition {\n    return (componentDefinition as IContainerViewComponentDefinition).componentDefinitions !== undefined;\n  }\n\n  findParentComponentDefinition(\n    viewDefinition: IViewDefinition,\n    childComponentDefinition: Partial<AnyViewComponentDefinition>,\n    predicate: (definition: AnyViewComponentDefinition) => boolean\n  ): IContainerViewComponentDefinition {\n    const componentDefinitionsWithParent = this.getComponents(viewDefinition);\n    let parentComponentDefinition;\n\n    let childComponentDefinitionWithParent = componentDefinitionsWithParent.find(\n      (pair) => pair.componentDefinition.guid === childComponentDefinition.guid\n    );\n\n    while (childComponentDefinitionWithParent && !parentComponentDefinition) {\n      if (predicate(childComponentDefinitionWithParent.componentDefinition)) {\n        parentComponentDefinition = childComponentDefinitionWithParent.componentDefinition;\n      } else {\n        childComponentDefinitionWithParent = componentDefinitionsWithParent.find(\n          (pair) => pair.componentDefinition.guid === childComponentDefinitionWithParent.parentComponentDefinition.guid\n        );\n      }\n    }\n\n    return parentComponentDefinition;\n  }\n\n  findViewComponent(\n    viewComponentContainer: IContainerViewComponentDefinition | IViewDefinition,\n    predicate: RxPredicate\n  ): IViewComponentDefinition {\n    return find(this.rxTreeService.flattenTree(viewComponentContainer, 'componentDefinitions'), predicate);\n  }\n}\n","import { IViewActionDescriptor, IViewActionDesignManager } from './view-action.interfaces';\nimport { Injectable } from '@angular/core';\nimport {\n  IBundleDescriptor,\n  RX_APPLICATION,\n  RxBundleCacheService,\n  RxGlobalCacheService\n} from '@helix/platform/shared/api';\nimport { isEmpty, some } from 'lodash';\nimport { RxStringService } from '@helix/platform/utils';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { ViewComponentPropertyType } from '../registries/view-component-descriptor.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewActionRegistryService {\n  constructor(\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxStringService: RxStringService,\n    private rxBundleCacheService: RxBundleCacheService\n  ) {}\n\n  private viewActionDescriptors: Map<string, IViewActionDescriptor> = new Map();\n  private designManagers: Map<string, IViewActionDesignManager> = new Map();\n\n  private ownerBundleIds$ = this.rxGlobalCacheService.getBundleDescriptors().pipe(\n    map((bundleDescriptors) =>\n      bundleDescriptors.reduce((ownerBundleIds, bundleDescriptor) => {\n        bundleDescriptor.uiOptions.viewActions?.forEach((viewActionName: string) => {\n          ownerBundleIds[viewActionName] = bundleDescriptor.id;\n        });\n\n        return ownerBundleIds;\n      }, {})\n    ),\n    shareReplay(1)\n  );\n\n  register(viewActionDescriptor: IViewActionDescriptor) {\n    if (!viewActionDescriptor.label) {\n      viewActionDescriptor.label = viewActionDescriptor.name;\n    }\n\n    viewActionDescriptor.parameters = viewActionDescriptor.parameters || [];\n\n    viewActionDescriptor.parameters.push({\n      name: '$condition$',\n      enableExpressionEvaluation: true\n    });\n\n    viewActionDescriptor.parameters.push({\n      name: 'index',\n      designType: ViewComponentPropertyType.Number\n    });\n\n    this.viewActionDescriptors.set(viewActionDescriptor.name, viewActionDescriptor);\n  }\n\n  get(actionName: string): IViewActionDescriptor {\n    return this.viewActionDescriptors.get(actionName);\n  }\n\n  getRegisteredActions(): Map<string, IViewActionDescriptor> {\n    return this.viewActionDescriptors;\n  }\n\n  getLicensedActions(): Observable<IViewActionDescriptor[]> {\n    return this.rxGlobalCacheService.getLicensedBundleDescriptors().pipe(\n      map((bundleDescriptors) => {\n        return Array.from(this.viewActionDescriptors.values()).filter((actionDescriptor) => {\n          return (\n            this.isBundleLicensed(actionDescriptor.bundleId, bundleDescriptors) &&\n            this.isActionAvailableInCurrentBundle(actionDescriptor)\n          );\n        });\n      })\n    );\n  }\n\n  getActionOwnerBundleId(viewActionName: string): Observable<string> {\n    return this.ownerBundleIds$.pipe(map((ownerBundleIds) => ownerBundleIds[viewActionName]));\n  }\n\n  private isBundleLicensed(bundleId: string, bundleDescriptors: IBundleDescriptor[]): boolean {\n    return bundleId === RX_APPLICATION.platformBundleId || some(bundleDescriptors, { id: bundleId });\n  }\n\n  private isActionAvailableInCurrentBundle(actionDescriptor: IViewActionDescriptor): boolean {\n    return (\n      isEmpty(actionDescriptor.availableInBundles) ||\n      this.rxStringService.isIncluded(this.rxBundleCacheService.bundleId, actionDescriptor.availableInBundles)\n    );\n  }\n\n  registerUnknownAction(unknownActionName: string): IViewActionDescriptor {\n    let unknownActionDescriptor = this.get(unknownActionName);\n\n    if (!unknownActionDescriptor) {\n      unknownActionDescriptor = {\n        ...this.get('rxUnknownViewAction'),\n        name: unknownActionName\n      };\n\n      this.register(unknownActionDescriptor);\n    }\n\n    return unknownActionDescriptor;\n  }\n\n  registerDesignManager(actionName: string, designManagerService: IViewActionDesignManager): void {\n    this.designManagers.set(actionName, designManagerService);\n  }\n\n  getDesignManager(actionName: string): IViewActionDesignManager {\n    return this.designManagers.get(actionName) ?? this.viewActionDescriptors.get(actionName)?.designManager;\n  }\n}\n","import { TypeDecorator, ɵmakeDecorator as makeDecorator } from '@angular/core';\n\nexport enum RxViewComponentType {\n  ButtonBar = 'rx-button-bar',\n  RecordEditor = 'rx-record-editor',\n  ActionButton = 'rx-action-button',\n  Action = 'rx-action',\n  Page = 'rx-page',\n  ExtensionContainer = 'rx-extension-container',\n  Container = 'rx-container',\n  RichText = 'rx-rich-text',\n  TabPanel = 'rx-tab-panel',\n  TabContainer = 'rx-tab-container',\n  Image = 'rx-image',\n  ServiceList = 'rx-service-list',\n  Unknown = 'rx-unknown',\n\n  Association = 'rx-association',\n  AssociatedRecordField = 'rx-associated-record-field',\n  DateTime = 'rx-date-time-field',\n  Selection = 'rx-selection-field',\n  Date = 'rx-date-field',\n  Time = 'rx-time-field',\n  Integer = 'rx-integer-field',\n  Floating = 'rx-floating-field',\n  Decimal = 'rx-decimal-field',\n  Boolean = 'rx-boolean-field',\n  Attachment = 'rx-attachment-field',\n  Character = 'rx-character-field',\n  LocalizedCharacter = 'rx-localized-character-field',\n  Textarea = 'rx-textarea-field',\n  SelectGroup = 'rx-select-group',\n  SelectGroupField = 'rx-select-group-field',\n  RichTextarea = 'rx-rich-textarea-field',\n  ViewPresetSelector = 'rx-view-preset-selector',\n  ViewPreset = 'rx-view-preset'\n}\n\nexport enum BwfViewComponentType {\n  DynamicNamedList = 'ux-dynamic-named-list'\n}\n\nexport interface RxViewComponent {\n  name: string;\n}\n\nexport interface RxViewComponentDecorator {\n  (rxViewComponent?: RxViewComponent): TypeDecorator;\n\n  new (rxViewComponent?: RxViewComponent): RxViewComponent;\n}\n\nexport const RxViewComponent: RxViewComponentDecorator = makeDecorator('RxViewComponent');\n","import { Injectable } from '@angular/core';\nimport {\n  IComponentPropertyNameToStringGuid,\n  IViewDefinition,\n  IViewLocalizableStrings\n} from '../domain/view-definition.interface';\nimport { RxViewDefinitionParserService } from './view-definition-parser.service';\nimport { RxViewComponentRegistryService } from '../registries/view-component-registry.service';\nimport { IViewComponentDescriptor } from '../registries/view-component-descriptor.types.js';\nimport { RxViewActionRegistryService } from '../view-action/view-action-registry.service';\nimport { IViewActionDescriptor } from '../view-action/view-action.interfaces';\nimport { RxGuidService, RxTreeService } from '@helix/platform/utils';\nimport { forEach, isEmpty, set, transform } from 'lodash';\nimport {\n  AnyViewComponentDefinition,\n  IContainerViewComponentDefinition,\n  IViewComponentDefinition\n} from '../domain/view-component-definition.types';\nimport { RxViewComponentType } from '../domain/view-component.types';\nimport { IPlainObject } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDefinitionLocalizationService {\n  constructor(\n    private rxViewDefinitionParserService: RxViewDefinitionParserService,\n    private rxViewComponentRegistryService: RxViewComponentRegistryService,\n    private rxViewActionRegistryService: RxViewActionRegistryService,\n    private rxGuidService: RxGuidService,\n    private rxTreeService: RxTreeService\n  ) {}\n\n  applyLocalization(viewDefinition: IViewDefinition): IViewDefinition {\n    const componentDefinitions = this.rxTreeService.flatten(viewDefinition, 'componentDefinitions');\n\n    const localizableStringGuidsByComponentGuid: IComponentPropertyNameToStringGuid = {};\n\n    // converting Select Group localization for AngularJS views\n    // todo can be removed after dropping support of AngularJS version\n    this.convertOldSelectGroupLocalization(viewDefinition, componentDefinitions);\n\n    componentDefinitions.forEach((componentDefinition) => {\n      const localizableStrings = viewDefinition.localizableStringsByComponentId[componentDefinition.guid];\n\n      const propertyNameToStringGuidMap = this.applyComponentDefinitionLocalization(\n        componentDefinition,\n        localizableStrings\n      );\n\n      if (!isEmpty(propertyNameToStringGuidMap)) {\n        localizableStringGuidsByComponentGuid[componentDefinition.guid] = propertyNameToStringGuidMap;\n      }\n    });\n\n    viewDefinition.localizablePropertyToStringGuidMap = localizableStringGuidsByComponentGuid;\n\n    return viewDefinition;\n  }\n\n  extractLocalizableStrings(viewDefinition: IViewDefinition): IViewLocalizableStrings {\n    const localizableStrings: IViewLocalizableStrings = {};\n    const localizablePropertyToStringGuidMap = viewDefinition.localizablePropertyToStringGuidMap || {};\n\n    this.rxViewDefinitionParserService\n      .getComponents(viewDefinition, true)\n      .map((item) => item.componentDefinition)\n      .filter((component) => component.type && component.type !== RxViewComponentType.Page)\n      .forEach((component: AnyViewComponentDefinition) => {\n        const componentDescriptor = this.rxViewComponentRegistryService.get(component.type);\n        const propertyNameToStringGuidMap = localizablePropertyToStringGuidMap[component.guid] || {};\n        const componentStrings = {};\n        let localizablePropertyNames;\n\n        if (componentDescriptor.type === RxViewComponentType.Action) {\n          const actionDescriptor = this.rxViewActionRegistryService.get(component.propertiesByName.name);\n\n          localizablePropertyNames = this.getLocalizableActionParameterNames(actionDescriptor);\n        } else {\n          localizablePropertyNames = this.getLocalizableComponentPropertyNames(componentDescriptor);\n        }\n\n        localizablePropertyNames.forEach((localizablePropertyName) => {\n          if (component.propertiesByName[localizablePropertyName]) {\n            const stringGuid = propertyNameToStringGuidMap[localizablePropertyName] || this.rxGuidService.generate();\n\n            componentStrings[stringGuid] = component.propertiesByName[localizablePropertyName];\n            component.propertiesByName[localizablePropertyName] = stringGuid;\n          }\n        });\n\n        if (!isEmpty(componentStrings)) {\n          localizableStrings[component.guid] = componentStrings;\n        }\n      });\n\n    return localizableStrings;\n  }\n\n  private applyComponentDefinitionLocalization(\n    componentDefinition: IViewComponentDefinition,\n    localizableStrings = {}\n  ): IPlainObject {\n    return transform(\n      componentDefinition.propertiesByName,\n      (result, propertyValue: string, propertyName: string) => {\n        if (localizableStrings[propertyValue]) {\n          componentDefinition.propertiesByName[propertyName] = localizableStrings[propertyValue];\n          result[propertyName] = propertyValue;\n        }\n      },\n      {}\n    );\n  }\n\n  private getLocalizableActionParameterNames(actionDescriptor: IViewActionDescriptor): string[] {\n    return (actionDescriptor.parameters || []).reduce<string[]>((parameterNames, parameter) => {\n      if (parameter.localizable) {\n        parameterNames.push(parameter.name);\n      } else if (parameter.attributes) {\n        forEach(parameter.attributes, (attribute) => {\n          if (attribute.localizable) {\n            parameterNames.push(`${parameter.name}.${attribute.name}`);\n          }\n        });\n      }\n\n      return parameterNames;\n    }, []);\n  }\n\n  private getLocalizableComponentPropertyNames(componentDescriptor: IViewComponentDescriptor): string[] {\n    return (componentDescriptor.properties || []).filter((prop) => prop.localizable).map((prop) => prop.name);\n  }\n\n  // this method used to move SelectGroupField localization from SelectGroup localization object\n  // to own one in same way as this done for any other component.\n  // Method should handle only AngularJS views that has legacy labelId property in SelectGroupField\n  private convertOldSelectGroupLocalization(\n    viewDefinition: IViewDefinition,\n    componentDefinitions: AnyViewComponentDefinition[]\n  ) {\n    componentDefinitions\n      .filter((component) => component.type === RxViewComponentType.SelectGroup)\n      .forEach((selectGroup: IContainerViewComponentDefinition) => {\n        selectGroup.componentDefinitions.forEach((selectGroupField) => {\n          if (selectGroupField.propertiesByName.labelId) {\n            const oldStringGuid: string = selectGroupField.propertiesByName.labelId;\n            const newStringGuid: string = this.rxGuidService.generate();\n\n            const localizedLabel: string =\n              viewDefinition.localizableStringsByComponentId[selectGroup.guid][oldStringGuid];\n\n            // setting localized string guid same way as for other components\n            selectGroupField.propertiesByName.label = newStringGuid;\n\n            // moving localization from SelectGroup to SelectGroupField object with new guid\n            // to avoid unexpected server behaviour\n            set(viewDefinition.localizableStringsByComponentId, [selectGroupField.guid, newStringGuid], localizedLabel);\n\n            // removing legacy labelId\n            delete selectGroupField.propertiesByName.labelId;\n\n            // removing string from select group localization object\n            delete viewDefinition.localizableStringsByComponentId[selectGroup.guid][oldStringGuid];\n          }\n        });\n\n        // removing select group localization object if empty\n        if (isEmpty(viewDefinition.localizableStringsByComponentId[selectGroup.guid])) {\n          delete viewDefinition.localizableStringsByComponentId[selectGroup.guid];\n        }\n      });\n  }\n}\n","import { RX_VIEW_DEFINITION } from '../domain/view-definition.constant';\n\nexport enum ViewLayoutRole {\n  Header = 'header',\n  Content = 'content',\n  Footer = 'footer'\n}\n\nexport enum LayoutTypes {\n  Flexible = 'Flexible',\n  Fixed = 'Fixed'\n}\n\nexport interface IViewLayout {\n  outlets: IViewLayoutOutlet[];\n}\n\nexport interface IViewLayoutOutlet {\n  name: string;\n  static?: boolean;\n  role?: ViewLayoutRole;\n  height?: number;\n  columns: IViewLayoutOutletColumn[];\n}\n\nexport interface IViewLayoutOutletColumn {\n  children: string[];\n  cssClass?: string;\n  span?: number;\n}\n\nexport interface IViewLayoutTemplate {\n  id: number;\n  label: string;\n  checksum: string;\n  layout: IViewLayout;\n  layoutType: LayoutTypes;\n}\n\nconst defaultHeaderOutlet = {\n  name: ViewLayoutRole.Header,\n  height: 60,\n  columns: [getEmptyColumn()]\n};\n\nconst defaultFooterOutlet = {\n  name: ViewLayoutRole.Footer,\n  height: 60,\n  columns: [getEmptyColumn()]\n};\n\nexport const RX_VIEW_LAYOUTS: IViewLayoutTemplate[] = [\n  {\n    id: 1,\n    label: 'Header and 1 Column',\n    layout: {\n      outlets: [defaultHeaderOutlet, getContentOutlet()]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 2,\n    label: 'Header and 2 Columns (50/50)',\n    layout: {\n      outlets: [defaultHeaderOutlet, getContentOutlet(6, 6)]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 3,\n    label: 'Header and 2 Columns (60/40)',\n    layout: {\n      outlets: [defaultHeaderOutlet, getContentOutlet(7, 5)]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 4,\n    label: 'Header and 2 Columns (40/60)',\n    layout: {\n      outlets: [defaultHeaderOutlet, getContentOutlet(5, 7)]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 16,\n    label: 'Header and 2 Columns (70/30)',\n    layout: {\n      outlets: [defaultHeaderOutlet, getContentOutlet(8, 4)]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 5,\n    label: 'Container',\n    layout: {\n      outlets: [getContentOutlet()]\n    },\n    layoutType: LayoutTypes.Flexible\n  },\n  {\n    id: 6,\n    label: '2 Columns (50/50)',\n    layout: {\n      outlets: [getContentOutlet(6, 6)]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 7,\n    label: '2 Columns (60/40)',\n    layout: {\n      outlets: [getContentOutlet(7, 5)]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 8,\n    label: '2 Columns (40/60)',\n    layout: {\n      outlets: [getContentOutlet(5, 7)]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 14,\n    label: '2 Columns (70/30)',\n    layout: {\n      outlets: [getContentOutlet(8, 4)]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 9,\n    label: '3 Equal Columns',\n    layout: {\n      outlets: [getContentOutlet(4, 4, 4)]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 10,\n    label: 'Header, Footer and 1 Column',\n    layout: {\n      outlets: [defaultHeaderOutlet, getContentOutlet(), defaultFooterOutlet]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 11,\n    label: 'Header, Footer and 2 Columns (50/50)',\n    layout: {\n      outlets: [defaultHeaderOutlet, getContentOutlet(6, 6), defaultFooterOutlet]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 12,\n    label: 'Header, Footer and 2 Columns (60/40)',\n    layout: {\n      outlets: [defaultHeaderOutlet, getContentOutlet(7, 5), defaultFooterOutlet]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 13,\n    label: 'Header, Footer and 2 Columns (40/60)',\n    layout: {\n      outlets: [defaultHeaderOutlet, getContentOutlet(5, 7), defaultFooterOutlet]\n    },\n    layoutType: LayoutTypes.Fixed\n  },\n  {\n    id: 15,\n    label: 'Header, Footer and 2 Columns (70/30)',\n    layout: {\n      outlets: [defaultHeaderOutlet, getContentOutlet(8, 4), defaultFooterOutlet]\n    },\n    layoutType: LayoutTypes.Fixed\n  }\n].map((layout: IViewLayoutTemplate) => {\n  layout.checksum = getLayoutChecksum(layout.layout);\n\n  return layout;\n});\n\nexport function getLayoutChecksum(layout: IViewLayout): string {\n  const contentOutlet = layout.outlets.find((outlet) => outlet.name === RX_VIEW_DEFINITION.defaultOutletName);\n  let checksum = layout.outlets.find((outlet) => outlet.name === ViewLayoutRole.Header) ? 'h' : '';\n\n  checksum += layout.outlets.find((outlet) => outlet.name === ViewLayoutRole.Footer) ? 'f' : '';\n  contentOutlet.columns.forEach((column) => (checksum += `c${column.span || 12}`));\n\n  return checksum;\n}\n\nfunction getContentOutlet(...columnSpan: number[]): IViewLayoutOutlet {\n  return {\n    name: RX_VIEW_DEFINITION.defaultOutletName,\n    columns: columnSpan.length ? columnSpan.map((span) => getEmptyColumn({ span })) : [getEmptyColumn()]\n  };\n}\n\nfunction getEmptyColumn(props?: Partial<IViewLayoutOutletColumn>): IViewLayoutOutletColumn {\n  return {\n    children: [],\n    ...props\n  };\n}\n","import { RX_VIEW_DEFINITION } from '../domain/view-definition.constant';\nimport { reduce } from 'lodash';\nimport { getLayoutChecksum, IViewLayout, IViewLayoutOutlet, RX_VIEW_LAYOUTS } from './view-layout.types';\n\n// @dynamic\nexport class RxViewLayout {\n  static getViewLayoutForDefaultOutlet(children?: string[]): IViewLayout {\n    return {\n      outlets: [this.getOutlet(RX_VIEW_DEFINITION.defaultOutletName, children)]\n    };\n  }\n\n  static getEmptyViewLayoutForOutletNames(list: { name: string }[]): IViewLayout {\n    return {\n      outlets: list.map(({ name }) => this.getOutlet(name))\n    };\n  }\n\n  static getEmptyViewLayoutForOutlets(outlets: IViewLayoutOutlet[]): IViewLayout {\n    return {\n      outlets: outlets.map((outlet) => {\n        return {\n          ...outlet,\n          columns: outlet.columns.map((column) => ({ ...column, children: [] }))\n        };\n      })\n    };\n  }\n\n  static getOutlet(name = RX_VIEW_DEFINITION.defaultOutletName, children: string[] = []): IViewLayoutOutlet {\n    return {\n      name,\n      columns: [\n        {\n          children\n        }\n      ]\n    };\n  }\n\n  static getViewLayoutChildGuids(layout: IViewLayout, outletName?: string): string[] {\n    return reduce(\n      layout.outlets,\n      (guids, outlet) => {\n        if (!outletName || outletName === outlet.name) {\n          outlet.columns.forEach((column) => {\n            guids.push(...column.children);\n          });\n        }\n\n        return guids;\n      },\n      []\n    );\n  }\n\n  static hasChild(layout: IViewLayout, guid: string): boolean {\n    return Boolean(layout.outlets.find((outlet) => this.outletHasChild(outlet, guid)));\n  }\n\n  static outletHasChild(outlet: IViewLayoutOutlet, guid: string): boolean {\n    return Boolean(outlet.columns.find((column) => column.children.includes(guid)));\n  }\n\n  static getViewLayoutTemplate(layoutTemplate: number): IViewLayout {\n    const layoutItem =\n      RX_VIEW_LAYOUTS.find((item) => item.id === layoutTemplate) ||\n      RX_VIEW_LAYOUTS.find((item) => item.id === RX_VIEW_DEFINITION.defaultLayoutTemplateId);\n\n    return layoutItem.layout;\n  }\n\n  static getLayoutName(layout: IViewLayout): string {\n    const checksum = getLayoutChecksum(layout);\n    const layoutTemplate = RX_VIEW_LAYOUTS.find((item) => item.checksum === checksum);\n\n    return layoutTemplate ? layoutTemplate.label : '';\n  }\n\n  static removeChildFromLayout(layout: IViewLayout, guidToRemove: string): IViewLayout {\n    return {\n      outlets: layout.outlets.map((outlet) => ({\n        ...outlet,\n        columns: outlet.columns.map((column) => ({\n          ...column,\n          children: column.children.filter((childGuid) => childGuid !== guidToRemove)\n        }))\n      }))\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  ICommand,\n  IHttpGetParams,\n  RX_BUNDLE,\n  RxCommandFactoryService,\n  RxLocalizationService\n} from '@helix/platform/shared/api';\nimport { RxGuidService } from '@helix/platform/utils';\nimport { IViewDefinition } from '../domain/view-definition.interface';\nimport { RX_VIEW_DEFINITION } from '../domain/view-definition.constant';\nimport { RxViewDefinitionLocalizationService } from './view-definition-localization.service';\nimport { RxViewComponentType } from '../domain/view-component.types';\nimport { RxViewLayout } from '../layout/view-layout.class';\n\nexport const renameViewDefinitionCommand = 'com.bmc.arsys.rx.application.view.command.RenameViewDefinitionCommand';\nexport const revertCustomizationResourceType = 'com.bmc.arsys.rx.application.view.command.RevertViewDefinitionCommand';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDefinitionService {\n  private renameCommand: ICommand;\n  private revertCustomizationCommand: ICommand;\n\n  constructor(\n    private httpClient: HttpClient,\n    private rxGuidService: RxGuidService,\n    private rxCommandFactoryService: RxCommandFactoryService,\n    private rxViewDefinitionLocalizationService: RxViewDefinitionLocalizationService,\n    private rxLocalizationService: RxLocalizationService\n  ) {\n    this.renameCommand = rxCommandFactoryService.forResourceType(renameViewDefinitionCommand);\n    this.revertCustomizationCommand = rxCommandFactoryService.forResourceType(revertCustomizationResourceType);\n  }\n\n  get(viewDefinitionName: string, options?: IHttpGetParams): Observable<IViewDefinition> {\n    const defaultOptions = { params: { locale: this.rxLocalizationService.currentLocale } };\n\n    return this.httpClient\n      .get(this.getUrl(viewDefinitionName), {\n        ...defaultOptions,\n        ...options\n      })\n      .pipe(\n        map((viewDefinition: IViewDefinition) =>\n          this.rxViewDefinitionLocalizationService.applyLocalization(viewDefinition)\n        )\n      );\n  }\n\n  getNew(layoutTemplate: number): Observable<IViewDefinition> {\n    return of(this.getNewViewDefinition.call(this, layoutTemplate));\n  }\n\n  create(viewDefinition: IViewDefinition): Observable<HttpResponse<any>> {\n    return this.httpClient.post(this.getUrl(), viewDefinition, { responseType: 'text', observe: 'response' });\n  }\n\n  update(\n    viewDefinitionName: string,\n    viewDefinition: IViewDefinition,\n    options?: {\n      headers?:\n        | HttpHeaders\n        | {\n            [header: string]: string | string[];\n          };\n    }\n  ): Observable<any> {\n    return this.httpClient.put(this.getUrl(viewDefinitionName), viewDefinition, options);\n  }\n\n  delete(viewDefinitionName: string): Observable<any> {\n    return this.httpClient.delete(this.getUrl(viewDefinitionName));\n  }\n\n  rename(oldViewDefinitionName: string, newViewDefinitionName: string): Observable<any> {\n    return this.renameCommand.execute({\n      name: oldViewDefinitionName,\n      newName: newViewDefinitionName\n    });\n  }\n\n  isPageView(viewDefinition: IViewDefinition): boolean {\n    return (\n      viewDefinition.componentDefinitions.length === 1 &&\n      viewDefinition.componentDefinitions[0].type === RxViewComponentType.Page\n    );\n  }\n\n  revertCustomization(viewDefinitionName: string): Observable<any> {\n    return this.revertCustomizationCommand.execute({ viewDefinitionName });\n  }\n\n  private getUrl(viewDefinitionName?: string): string {\n    return viewDefinitionName\n      ? `/api/rx/application/view/viewdefinition/${encodeURIComponent(viewDefinitionName)}`\n      : '/api/rx/application/view/viewdefinition';\n  }\n\n  private getNewViewDefinition(layoutTemplate: number = RX_VIEW_DEFINITION.defaultLayoutTemplateId): IViewDefinition {\n    return {\n      guid: this.rxGuidService.generate(),\n      name: null,\n      description: null,\n      componentDefinitions: [],\n      inputParams: [],\n      outputParams: [],\n      allowOverlay: false,\n      layout: JSON.stringify(RxViewLayout.getViewLayoutTemplate(layoutTemplate)),\n      permissions: [\n        {\n          ownerId: {\n            value: 0,\n            name: 'Public',\n            type: 'GROUP'\n          },\n          type: 'VISIBLE'\n        }\n      ],\n      type: RX_VIEW_DEFINITION.types.regular,\n      scope: RX_BUNDLE.definitionScopeTypes.bundle,\n      targetViewDefinitionName: null,\n      targetExtensionContainerGuid: null,\n      styles: null\n    };\n  }\n}\n","import { DataPage } from '@helix/platform/shared/api';\nimport { Injectable, Injector } from '@angular/core';\n\nconst viewDefinitionDataPageQuery = 'com.bmc.arsys.rx.application.view.datapage.ViewDefinitionDataPageQuery';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDefinitionDataPageService extends DataPage {\n  constructor(private injector: Injector) {\n    super(injector, viewDefinitionDataPageQuery, {\n      params: {\n        excludeExtensionViews: true\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RxViewDefinitionService } from './view-definition.service';\nimport { RxViewDefinitionDataPageService } from './view-definition-data-page.service';\nimport { Observable } from 'rxjs';\nimport { IHttpGetParams } from '@helix/platform/shared/api';\nimport { IViewDefinition } from '../domain/view-definition.interface';\nimport { map, pluck, shareReplay } from 'rxjs/operators';\nimport { isEmpty } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewDefinitionCacheService {\n  private viewDefinitionCache: Map<string, Observable<IViewDefinition>> = new Map();\n  private viewDefinitionNamesCache: Map<string, Observable<string[]>> = new Map();\n  private consumers = new Set<Observable<any>>();\n\n  constructor(\n    private rxViewDefinitionService: RxViewDefinitionService,\n    private viewDefinitionDataPageService: RxViewDefinitionDataPageService\n  ) {}\n\n  getViewDefinitionNames(bundleId: string): Observable<string[]> {\n    if (!this.viewDefinitionNamesCache.has(bundleId)) {\n      const viewDefinitionNames$ = this.viewDefinitionDataPageService\n        .get({\n          headers: { 'default-bundle-scope': bundleId },\n          params: { propertySelection: ['name'], viewType: 'REGULAR' }\n        })\n        .pipe(\n          pluck('data'),\n          map((viewDefinitionsNames: { name: string }[]) =>\n            viewDefinitionsNames.map((viewDefinition) => viewDefinition.name)\n          ),\n          shareReplay(1)\n        );\n\n      this.viewDefinitionNamesCache.set(bundleId, viewDefinitionNames$);\n    }\n\n    return this.viewDefinitionNamesCache.get(bundleId);\n  }\n\n  getViewDefinition(viewDefinitionName: string, options?: IHttpGetParams): Observable<IViewDefinition> {\n    if (!this.viewDefinitionCache.has(viewDefinitionName)) {\n      const viewDefinition$ = this.rxViewDefinitionService.get(viewDefinitionName, options).pipe(shareReplay(1));\n\n      this.viewDefinitionCache.set(viewDefinitionName, viewDefinition$);\n    }\n\n    return this.viewDefinitionCache.get(viewDefinitionName);\n  }\n\n  registerConsumer(consumerDestroy$: Observable<any>): void {\n    this.consumers.add(consumerDestroy$);\n\n    consumerDestroy$.subscribe(() => {\n      this.consumers.delete(consumerDestroy$);\n\n      if (isEmpty(this.consumers)) {\n        this.clearCache();\n      }\n    });\n  }\n\n  private clearCache(): void {\n    this.viewDefinitionCache.clear();\n    this.viewDefinitionNamesCache.clear();\n  }\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule()\nexport class ViewModule {\n  static registerComponents(components: any) {\n    return {\n      ngModule: ViewModule,\n      providers: [\n        {\n          provide: 'components',\n          useValue: [...components]\n        }\n      ]\n    };\n  }\n}\n","import { RxViewActionRegistryService } from './view-action-registry.service';\nimport { Injectable } from '@angular/core';\nimport { EMPTY, Observable, throwError } from 'rxjs';\nimport { IPlainObject, RxLogService } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewActionService {\n  constructor(private rxViewActionRegistryService: RxViewActionRegistryService, private rxLogService: RxLogService) {}\n\n  execute(actionName: string, parameters?: IPlainObject): Observable<any> {\n    const viewActionDescriptor = this.rxViewActionRegistryService.get(actionName);\n\n    if (viewActionDescriptor) {\n      if (parameters.$condition$ !== false) {\n        return viewActionDescriptor.service.execute(parameters);\n      } else {\n        this.rxLogService.debug(`View Action ${actionName} skipped.`);\n        return EMPTY;\n      }\n    } else {\n      return throwError(`View Action ${actionName} not found.`);\n    }\n  }\n}\n","import { IRecordInstance } from '@helix/platform/record/api';\nimport { IRowDataItem, IRxRecordGridApi } from '../common/record-grid.types';\nimport { TypeDecorator, ɵmakeDecorator as makeDecorator } from '@angular/core';\n\nexport const RX_VIEW_ACTION = {\n  viewActionNames: {\n    openView: 'rxOpenViewAction',\n    launchUrl: 'rxLaunchUrlAction'\n  }\n};\n\nexport enum OpenViewActionLaunchBehavior {\n  SameWindow = 'sameWindow',\n  NewWindow = 'newWindow'\n}\n\nexport enum OpenViewActionModalSize {\n  Xsmall = 'rx-xs',\n  Small = 'rx-sm',\n  Medium = 'rx-md',\n  Large = 'rx-lg',\n  Xlarge = 'rx-xl',\n  Xxlarge = 'rx-xxl',\n  FullSize = 'rx-full-size'\n}\n\nexport enum OpenViewActionType {\n  FullWidth = 'fullWidth',\n  CenteredModal = 'centeredModal',\n  DockedLeftModal = 'dockedLeftModal',\n  DockedRightModal = 'dockedRightModal'\n}\n\nexport type RecordsSource =\n  | IRxRecordGridApi\n  | IRecordInstance[]\n  | IRecordInstance['id'][]\n  | IRowDataItem\n  | IRowDataItem[]\n  | string;\n\nexport interface RxViewAction {\n  name: string;\n}\n\nexport interface RxViewActionDecorator {\n  /**\n   * Decorator that marks a class as an RxViewAction and supplies configuration metadata.\n   */\n  (rxViewAction?: RxViewAction): TypeDecorator;\n\n  new (rxViewAction?: RxViewAction): RxViewAction;\n}\n\nexport const RxViewAction: RxViewActionDecorator = makeDecorator('RxViewAction');\n","export const RX_LAUNCH_BEHAVIOR = {\n  newWindow: {\n    content: 'Open in a new tab',\n    value: 'newWindow',\n    target: '_blank'\n  },\n  sameWindow: {\n    content: 'Open in the same tab',\n    value: 'sameWindow',\n    target: '_self'\n  },\n  parentFrame: {\n    content: 'Open in the parent frame',\n    value: 'parentFrame',\n    target: '_parent'\n  },\n  windowFullBody: {\n    content: 'Open in the full body of the window',\n    value: 'windowFullBody',\n    target: '_top'\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { IDefinitionAdapter } from '@helix/platform/shared/api';\nimport { IContainerViewComponentDefinition } from '../domain/view-component-definition.types';\nimport { IViewDefinition } from '../domain/view-definition.interface';\n\n@Injectable()\nexport class RxViewActionDesignAdapterService\n  implements IDefinitionAdapter<IContainerViewComponentDefinition, IViewDefinition>\n{\n  adaptDefinition(componentDefinition: IContainerViewComponentDefinition) {\n    componentDefinition.propertiesByName.$condition$ = componentDefinition.propertiesByName.$condition$ ?? null;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RxViewComponentRegistryService } from '../registries/view-component-registry.service';\nimport { RxViewComponentType } from '../domain/view-component.types';\nimport { RxDefinitionAdapterRegistryService } from '@helix/platform/shared/api';\nimport { RxViewActionDesignAdapterService } from './view-action-design-adapter.service';\n\n@NgModule({\n  providers: [RxViewActionDesignAdapterService]\n})\nexport class ViewActionDesignModule {\n  constructor(\n    rxViewComponentRegistryService: RxViewComponentRegistryService,\n    rxDefinitionAdapterRegistryService: RxDefinitionAdapterRegistryService,\n    rxViewActionDesignAdapterService: RxViewActionDesignAdapterService\n  ) {\n    rxDefinitionAdapterRegistryService.registerDesignAdapter(\n      RxViewComponentType.Action,\n      rxViewActionDesignAdapterService\n    );\n\n    rxViewComponentRegistryService.register({\n      type: RxViewComponentType.Action,\n      isDataComponent: true,\n      isContainerComponent: true\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IDefinitionAdapter } from '@helix/platform/shared/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewActionDefinitionAdapterRegistryService {\n  private runtimeAdapters: Map<string, IDefinitionAdapter> = new Map();\n  private designAdapters: Map<string, IDefinitionAdapter> = new Map();\n\n  registerRuntimeAdapter(actionName: string, adapter: IDefinitionAdapter): void {\n    this.runtimeAdapters.set(actionName, adapter);\n  }\n\n  registerDesignAdapter(actionName: string, adapter: IDefinitionAdapter): void {\n    this.designAdapters.set(actionName, adapter);\n  }\n\n  getRuntimeAdapter(actionName: string): IDefinitionAdapter {\n    return this.runtimeAdapters.get(actionName);\n  }\n\n  getDesignAdapter(actionName: string): IDefinitionAdapter {\n    return this.designAdapters.get(actionName);\n  }\n}\n","export enum ViewDisplayType {\n  Preview = 'preview',\n  Regular = 'view',\n  NoShell = 'iview'\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RxStringService, RxUrlUtilsService } from '@helix/platform/utils';\nimport { RecordsSource } from './view-action.types';\nimport { IRowDataItem, IRxRecordGridApi, RowDataItemIdFieldName } from '../common/record-grid.types';\nimport { clone, compact, flow, isFunction, isObject, map, some, uniq } from 'lodash';\nimport { IPlainObject, RxBundleCacheService } from '@helix/platform/shared/api';\nimport { ViewDisplayType } from '../domain/view-display-type.enum';\nimport { IViewInputParams } from '../domain/view-input-params.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewActionUtilsService {\n  constructor(\n    private rxBundleCacheService: RxBundleCacheService,\n    private router: Router,\n    private rxStringService: RxStringService,\n    private rxUrlUtilsService: RxUrlUtilsService\n  ) {}\n\n  generateViewUrl(viewDefinitionName: string, inputParams: IViewInputParams = {}): string {\n    const currentUrl = this.router.routerState.snapshot.url;\n\n    let displayType = ViewDisplayType.Regular;\n\n    if (currentUrl.includes(`/${ViewDisplayType.Preview}/`)) {\n      displayType = ViewDisplayType.Preview;\n    } else if (currentUrl.includes(`/${ViewDisplayType.NoShell}/`)) {\n      displayType = ViewDisplayType.NoShell;\n    }\n\n    return this.rxUrlUtilsService.buildUrl(\n      `/${this.rxBundleCacheService.bundleId}/${displayType}/${viewDefinitionName}`,\n      inputParams\n    );\n  }\n\n  extractRecordIds(source: RecordsSource): string[] {\n    let ids = [];\n\n    if (isFunction((<IRxRecordGridApi>source).getSelectedRows)) {\n      ids = this.getIdsFromGridRows((<IRxRecordGridApi>source).getSelectedRows());\n    } else if (isObject(source) && this.rxStringService.isNonEmptyString(source[RowDataItemIdFieldName])) {\n      ids.push(source[RowDataItemIdFieldName]);\n    } else if (Array.isArray(source) && some(source, isObject)) {\n      ids = this.getIdsFromGridRows(<IRowDataItem[]>source);\n    } else if (this.rxStringService.isNonEmptyString(source)) {\n      ids.push(source);\n    } else if (Array.isArray(source) && some(source, this.rxStringService.isNonEmptyString)) {\n      ids = clone(source);\n    }\n\n    return ids;\n  }\n\n  getIdsFromGridRows(rows: IPlainObject[]): string[] {\n    return flow((rowsArray) => map(rowsArray, RowDataItemIdFieldName), compact, uniq)(rows);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { get, isNil } from 'lodash';\nimport { RxJsonParserService } from '@helix/platform/utils';\nimport { IOldViewLayout, IOldViewLayoutColumn, IOldViewLayoutColumnChild } from './old-view-layout.types';\nimport {\n  AnyViewComponentDefinition,\n  IContainerViewComponentDefinition\n} from '../domain/view-component-definition.types';\nimport { IViewComponentDefinitionWithParent } from '../domain/view-component-definition-with-parent.interface';\nimport { IViewDefinition } from '../domain/view-definition.interface';\nimport { RX_VIEW_DEFINITION } from '../domain/view-definition.constant';\nimport { IViewLayout, IViewLayoutOutlet, IViewLayoutOutletColumn, ViewLayoutRole } from './view-layout.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxOldViewLayoutAdapterService {\n  constructor(private rxJsonParserService: RxJsonParserService) {}\n\n  convertLayout(componentDefinitionItem: IViewComponentDefinitionWithParent): void {\n    if (this.isViewDefinitionItem(componentDefinitionItem)) {\n      this.convertViewLayout(componentDefinitionItem.componentDefinition as any);\n    } else if (this.isContainerComponentDefinition(componentDefinitionItem.componentDefinition)) {\n      this.convertComponentLayout(componentDefinitionItem.componentDefinition);\n    }\n  }\n\n  private isViewDefinitionItem(componentDefinition: IViewComponentDefinitionWithParent): boolean {\n    return !componentDefinition.parentComponentDefinition;\n  }\n\n  private convertViewLayout(viewDefinition: IViewDefinition): void {\n    const layout: IOldViewLayout = this.rxJsonParserService.tryParseJson(viewDefinition.layout);\n\n    if (isNil(layout.layoutTemplate) || get(layout, 'columns[0].role')) {\n      // for views from new designer, or for views with 1 or more columns\n      this.convertComponentLayout(viewDefinition);\n    } else {\n      // for views with header and/or footer\n      const childrenWithRoles: IOldViewLayoutColumnChild[] = get(layout, 'columns[0].children', []);\n      const outlets = childrenWithRoles.map((child, i) => {\n        let outletItem: IViewLayoutOutlet;\n\n        if (child.role) {\n          outletItem = {\n            name: child.role === ViewLayoutRole.Content ? RX_VIEW_DEFINITION.defaultOutletName : child.role,\n            static: child.static || null,\n            height: child.height || null,\n            role: child.role || null,\n            columns: (child.columns || []).map(this.convertColumns.bind(this))\n          };\n        } else {\n          // creating outlets for case when components are sibling to header/footer\n          outletItem = {\n            name: `outlet-${i}`,\n            columns: [{ children: [child.componentDefinitionId] }]\n          };\n        }\n\n        return outletItem;\n      });\n\n      const newLayout: IViewLayout = { outlets };\n\n      viewDefinition.layout = JSON.stringify(newLayout);\n    }\n  }\n\n  private convertComponentLayout(componentDefinition: IContainerViewComponentDefinition | IViewDefinition): void {\n    if (componentDefinition.layout) {\n      const layout: IOldViewLayout = this.rxJsonParserService.tryParseJson(componentDefinition.layout);\n\n      // add columns to views created in new designer\n      // todo remove after new designer will save layouts with columns\n      const children = get(layout, 'outlets[0].children');\n\n      if (children) {\n        componentDefinition.layout = JSON.stringify(this.convertNewDesignerLayout(layout));\n      }\n\n      if (layout && layout.componentDefinitionId) {\n        const newLayout = {\n          outlets: [\n            {\n              name: RX_VIEW_DEFINITION.defaultOutletName,\n              columns: layout.columns.map(this.convertColumns.bind(this))\n            }\n          ]\n        };\n\n        componentDefinition.layout = JSON.stringify(newLayout);\n      }\n    }\n  }\n\n  private convertNewDesignerLayout(layout): IViewLayout {\n    const children = get(layout, 'outlets[0].children');\n\n    if (children) {\n      layout.outlets[0].columns = [\n        {\n          children\n        }\n      ];\n\n      delete layout.outlets[0].children;\n    }\n\n    return layout;\n  }\n\n  private convertColumns(column: IOldViewLayoutColumn): IViewLayoutOutletColumn {\n    // rx-tab-container was placed 1 lever deeper in the layout of rx-tab-panel in views\n    // created in AngularJS view designer. 'columns[0].children[0]' should extract it.\n    return {\n      span: column.span || null,\n      cssClass: `col-sm-${column.span || 12}`,\n      children: column.children.map(\n        (child) => get(child, 'columns[0].children[0].componentDefinitionId') || child.componentDefinitionId\n      )\n    };\n  }\n\n  private isContainerComponentDefinition(\n    componentDefinition: AnyViewComponentDefinition\n  ): componentDefinition is IContainerViewComponentDefinition {\n    return (componentDefinition as IContainerViewComponentDefinition).componentDefinitions !== undefined;\n  }\n}\n","export const RX_SHELL = {\n  componentName: 'rx-shell',\n\n  navBar: {\n    menuItem: 'rx-shell-menu-item',\n    action: 'rx-shell-action',\n    menuGroup: 'rx-shell-menu-group',\n    userMenu: 'rx-shell-user-menu'\n  },\n\n  actions: {\n    launchURL: 'rxShellLaunchUrlAction',\n    navigateToView: 'rxShellNavigateToViewAction',\n    navigateToState: 'rxShellNavigateToStateAction',\n    navigateToSmartReporting: 'rxShellNavigateToSmartReportingAction'\n  },\n\n  outlets: {\n    actions: 'actions'\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { find, forEach, get, has, isEmpty } from 'lodash';\nimport { Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport {\n  IUser,\n  RX_APPLICATION,\n  RxCurrentUserService,\n  RxNotificationService,\n  RxFeatureService\n} from '@helix/platform/shared/api';\nimport { RxJsonParserService, RxObjectUtilsService, RxUrlUtilsService } from '@helix/platform/utils';\nimport {\n  AnyViewComponentDefinition,\n  IContainerViewComponentDefinition\n} from '../domain/view-component-definition.types';\nimport { RxExpressionEvaluatorService } from '../expressions/expression-evaluator.service';\nimport { RX_SHELL } from './shell.constant';\nimport { IRxShellConfig, IRxShellMenuItem, IRxShellMenuProperties, IRxShellNavBarProperties } from './shell.types';\nimport { RxViewDefinitionCacheService } from '../services/view-definition-cache.service';\nimport { RxViewDefinitionParserService } from '../services/view-definition-parser.service';\nimport { RxOldViewLayoutAdapterService } from '../layout/old-view-layout-adapter.service';\nimport { RxViewLayout } from '../layout/view-layout.class';\nimport { IViewLayout } from '../layout/view-layout.types';\nimport { RX_LEGACY_ICONS } from '../icons/icon.constant';\nimport { RX_VIEW_DEFINITION } from '../domain/view-definition.constant';\nimport { OpenViewActionLaunchBehavior, OpenViewActionType } from '../view-action/view-action.types';\nimport { RX_LAUNCH_BEHAVIOR } from '../view-action/common/launch-behavior.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxShellService {\n  private menuItemId = 0;\n  private currentUser: IUser;\n  private navigateToSmartReportingSubject = new Subject<void>();\n  private navigateToViewSubject = new Subject<IRxShellMenuItem>();\n  private openUserPreferencesSubject = new Subject<void>();\n  private openUserAvailabilitySubject = new Subject<void>();\n  private shellConfigSubject: ReplaySubject<IRxShellConfig> = new ReplaySubject(1);\n  private openGainsightPreferencesSubject = new Subject<void>();\n\n  navigateToSmartReporting$: Observable<void> = this.navigateToSmartReportingSubject.asObservable();\n  navigateToView$: Observable<IRxShellMenuItem> = this.navigateToViewSubject.asObservable();\n  openUserPreferences$: Observable<void> = this.openUserPreferencesSubject.asObservable();\n  openUserAvailability$: Observable<void> = this.openUserAvailabilitySubject.asObservable();\n  shellConfig$: Observable<IRxShellConfig> = this.shellConfigSubject.asObservable();\n  openGainsightPreferences$: Observable<void> = this.openGainsightPreferencesSubject.asObservable();\n\n  constructor(\n    private translateService: TranslateService,\n    private rxCurrentUserService: RxCurrentUserService,\n    private rxExpressionEvaluatorService: RxExpressionEvaluatorService,\n    private rxJsonParserService: RxJsonParserService,\n    private rxNotificationService: RxNotificationService,\n    private rxObjectUtilsService: RxObjectUtilsService,\n    private rxUrlUtilsService: RxUrlUtilsService,\n    private rxViewDefinitionCacheService: RxViewDefinitionCacheService,\n    private rxViewDefinitionParserService: RxViewDefinitionParserService,\n    private rxOldViewLayoutAdapterService: RxOldViewLayoutAdapterService,\n    private rxFeatureService: RxFeatureService\n  ) {}\n\n  resetMenuItemCount(): void {\n    this.menuItemId = 0;\n  }\n\n  updateMenuItemCount(): number {\n    return this.menuItemId++;\n  }\n\n  private getChildGuids(layout: IViewLayout, outletName = RX_VIEW_DEFINITION.defaultOutletName): string[] {\n    return RxViewLayout.getViewLayoutChildGuids(layout, outletName);\n  }\n\n  private getIconClass(icon: string, left = true): string {\n    const iconId = get(RX_LEGACY_ICONS, icon, icon);\n\n    return iconId ? `d-icon-${left ? 'left-' : ''}` + iconId : '';\n  }\n\n  getShellConfig(bundleId: string): Observable<IRxShellConfig> {\n    const navigationBarItems: IRxShellMenuItem[] = [];\n    const flattenedMenuItems: IRxShellMenuItem[] = [];\n    const navigationActions: IRxShellMenuItem[] = [];\n\n    const preferenceMenuItem: IRxShellMenuItem = {\n      name: this.translateService.instant('com.bmc.arsys.rx.client.shell.my-preferences.label'),\n      action: this.openUserPreferences.bind(this),\n      className: 'd-icon-wrench_o',\n      hide: false,\n      subMenu: []\n    } as IRxShellMenuItem;\n\n    const gainsightPreferenceMenuItem: IRxShellMenuItem = {\n      name: this.translateService.instant('com.bmc.arsys.rx.client.shell.analytics.label'),\n      action: this.openGainsightPreferences.bind(this),\n      className: 'd-icon-app_chart_bar',\n      hide: false,\n      id: 0,\n      subMenu: []\n    };\n\n    const myAvailabilityMenuItem: IRxShellMenuItem = {\n      name: this.translateService.instant('com.bmc.arsys.rx.client.shell.my-availability.label'),\n      action: this.openUserAvailability.bind(this),\n      hide: false,\n      className: 'd-icon-user_clock_o',\n      subMenu: []\n    } as IRxShellMenuItem;\n\n    let navBarProperties: IRxShellNavBarProperties;\n    let userMenu = null;\n\n    this.currentUser = this.rxCurrentUserService.get();\n\n    return this.rxViewDefinitionCacheService\n      .getViewDefinition(`${bundleId}:${RX_APPLICATION.shellDefinitionName}`)\n      .pipe(\n        switchMap((shellDefinition) => {\n          this.rxViewDefinitionParserService\n            .getComponents(shellDefinition)\n            .forEach((definition) => this.rxOldViewLayoutAdapterService.convertLayout(definition));\n\n          if (shellDefinition && shellDefinition.componentDefinitions[0]) {\n            const navBar = shellDefinition.componentDefinitions[0] as IContainerViewComponentDefinition;\n            const layout: IViewLayout = this.rxJsonParserService.tryParseJson(navBar.layout);\n\n            navBarProperties = (navBar.propertiesByName as IRxShellNavBarProperties) || {\n              allowAppSwitching: null,\n              globalSearchUseDefault: null,\n              globalSearchDisabled: null,\n              globalSearchRecords: null,\n              globalSearchCustomSearchState: null\n            };\n\n            forEach(this.getChildGuids(layout), (guid) => {\n              const menuItemDefinition = find(navBar.componentDefinitions, {\n                guid\n              }) as IContainerViewComponentDefinition;\n\n              if (menuItemDefinition) {\n                let menuItem: IRxShellMenuItem;\n\n                switch (menuItemDefinition.type) {\n                  case RX_SHELL.navBar.menuGroup:\n                  case RX_SHELL.navBar.userMenu:\n                    const subMenu = [];\n\n                    const childLayout =\n                      this.rxJsonParserService.tryParseJson(menuItemDefinition.layout) ||\n                      RxViewLayout.getViewLayoutForDefaultOutlet(\n                        menuItemDefinition.componentDefinitions.map((item: AnyViewComponentDefinition) => item.guid)\n                      );\n\n                    forEach(this.getChildGuids(childLayout), (childGuid) => {\n                      const subItemDefinition = find(menuItemDefinition.componentDefinitions, {\n                        guid: childGuid\n                      });\n\n                      if (subItemDefinition) {\n                        const subItem = this.getMenuProperties(subItemDefinition);\n\n                        if (!isEmpty(subItem)) {\n                          // concatenating className with listClassName, as listClassName not available for subMenu\n                          if (menuItemDefinition.type === RX_SHELL.navBar.userMenu) {\n                            subItem.className += ' ' + subItem.listClassName;\n                          } else {\n                            flattenedMenuItems.push(subItem);\n                          }\n\n                          subMenu.push(subItem);\n                        }\n                      }\n                    });\n\n                    if (subMenu.length > 0) {\n                      // LMA:: TODO:: Even if we set the className in a first level menu the icon is not displayed\n                      menuItem = {\n                        hide: has(menuItemDefinition.propertiesByName, 'hidden')\n                          ? this.rxJsonParserService.tryParseJson(menuItemDefinition.propertiesByName.hidden)\n                          : false,\n                        listClassName: get(menuItemDefinition.propertiesByName, 'styles'),\n                        className: this.getIconClass(get(menuItemDefinition.propertiesByName, 'menuItemIcon')),\n                        name: menuItemDefinition.propertiesByName.menuGroupName,\n                        subMenu: subMenu,\n                        id: this.updateMenuItemCount()\n                      };\n                    }\n\n                    break;\n\n                  case RX_SHELL.navBar.menuItem:\n                    menuItem = this.getMenuProperties(menuItemDefinition);\n                    break;\n                }\n\n                if (!isEmpty(menuItem)) {\n                  if (menuItemDefinition.type === RX_SHELL.navBar.userMenu) {\n                    userMenu = menuItem;\n                  } else {\n                    flattenedMenuItems.push(menuItem);\n                    navigationBarItems.push(menuItem);\n                  }\n                }\n              }\n            });\n\n            forEach(this.getChildGuids(layout, RX_SHELL.outlets.actions), (guid) => {\n              const menuItemDefinition = navBar.componentDefinitions.find((definition) => definition.guid === guid);\n\n              if (menuItemDefinition) {\n                navigationActions.push(this.getMenuProperties(menuItemDefinition));\n              }\n            });\n          }\n\n          if (this.rxCurrentUserService.isSupportStaff()) {\n            myAvailabilityMenuItem.id = this.updateMenuItemCount();\n\n            if (!userMenu) {\n              userMenu = {\n                subMenu: []\n              };\n            }\n\n            userMenu.subMenu.push(myAvailabilityMenuItem);\n          }\n\n          if (this.currentUser.fullName) {\n            preferenceMenuItem.id = this.updateMenuItemCount();\n\n            if (!userMenu) {\n              userMenu = {\n                subMenu: []\n              };\n            }\n\n            userMenu.subMenu.push(preferenceMenuItem);\n          }\n\n          if (this.rxFeatureService.isFeatureEnabled('DRD21-11744')) {\n            userMenu.subMenu.push(gainsightPreferenceMenuItem);\n          }\n\n          const rxData = {\n            flattenedMenuItems,\n            navigationBarItems,\n            navigationActions,\n            userMenu: userMenu || [],\n            allowAppSwitching: has(navBarProperties, 'allowAppSwitching')\n              ? this.rxJsonParserService.tryParseJson(navBarProperties.allowAppSwitching)\n              : false,\n            globalSearchUseDefault: has(navBarProperties, 'globalSearchUseDefault')\n              ? this.rxJsonParserService.tryParseJson(navBarProperties.globalSearchUseDefault)\n              : true,\n            globalSearchCustomSearchState: navBarProperties.globalSearchCustomSearchState || '',\n            globalSearchDisabled: has(navBarProperties, 'globalSearchDisabled')\n              ? this.rxJsonParserService.tryParseJson(navBarProperties.globalSearchDisabled)\n              : true,\n            globalSearchRecords: has(navBarProperties, 'globalSearchRecords')\n              ? this.rxJsonParserService.tryParseJson(navBarProperties.globalSearchRecords)\n              : [],\n\n            // LMA:: TODO:: Later... See:\n            // standardlib/src/main/webapp/scripts/view-components/shell/shell-config.resource.js\n            // ,\n            // globalSearchState: rxSearchResultsState.get(),\n            // administrationSettingsState: rxAdministrationSettingsState.get()\n            globalSearchState: 'globalSearchState',\n            administrationSettingsState: 'adminSettingsState'\n          };\n\n          // In case server already had previously saved shell config with global search not configured,\n          // we want to disable global search by default\n          if (\n            !rxData.globalSearchDisabled &&\n            ((rxData.globalSearchUseDefault && rxData.globalSearchRecords.length === 0) ||\n              (!rxData.globalSearchUseDefault && rxData.globalSearchCustomSearchState.length === 0))\n          ) {\n            rxData.globalSearchDisabled = true;\n          }\n\n          this.shellConfigSubject.next(rxData);\n\n          return of(rxData);\n        })\n      );\n  }\n\n  private openUserPreferences(): void {\n    this.openUserPreferencesSubject.next();\n  }\n\n  private openGainsightPreferences(): void {\n    this.openGainsightPreferencesSubject.next();\n  }\n\n  private openUserAvailability(): void {\n    this.openUserAvailabilitySubject.next();\n  }\n\n  private navigateToView(viewParams): void {\n    this.navigateToViewSubject.next(viewParams);\n  }\n\n  private navigateToState(): void {\n    this.rxNotificationService.addWarningMessage('This feature is not supported.');\n  }\n\n  private navigateToSmartReporting(): void {\n    this.navigateToSmartReportingSubject.next();\n  }\n\n  private getMenuProperties(itemDefinition): IRxShellMenuItem {\n    const menuItem: IRxShellMenuItem = {} as IRxShellMenuItem;\n\n    const properties: IRxShellMenuProperties = this.rxObjectUtilsService.expandProperties(\n      itemDefinition.propertiesByName\n    ) as IRxShellMenuProperties;\n\n    menuItem.type = properties.actionName;\n    menuItem.id = this.updateMenuItemCount();\n    menuItem.closeOnClick = true;\n\n    switch (properties.actionName) {\n      case RX_SHELL.actions.launchURL:\n        menuItem.name = properties.menuItemName;\n        menuItem.target =\n          RX_LAUNCH_BEHAVIOR[properties.launchBehavior || OpenViewActionLaunchBehavior.NewWindow].target;\n\n        if (itemDefinition.type === RX_SHELL.navBar.action) {\n          menuItem.action = () => {\n            window.open(properties.url, menuItem.target);\n          };\n        } else {\n          menuItem.link = properties.url;\n        }\n\n        break;\n\n      case RX_SHELL.actions.navigateToView:\n        const viewParams = properties.viewParams;\n\n        forEach(viewParams, (expression: string, parameterName: string) => {\n          const paramValue = this.rxExpressionEvaluatorService.tryEvaluate(expression, {\n            keywords: {\n              userId: this.currentUser.userId,\n              personId: this.currentUser.personInstanceId\n            }\n          });\n\n          viewParams[parameterName] = paramValue;\n\n          return paramValue;\n        });\n\n        const url = this.rxUrlUtilsService.buildUrl(`${properties.viewDefinitionName}`, viewParams);\n\n        menuItem.name = properties.menuItemName;\n        menuItem.viewUrl = url;\n        menuItem.action = this.navigateToView.bind(this, menuItem);\n\n        menuItem.openViewParams = {\n          viewDefinitionName: properties.viewDefinitionName,\n          presentation: {\n            type: OpenViewActionType.FullWidth,\n            launchBehavior: OpenViewActionLaunchBehavior.SameWindow,\n            ...get(properties, 'presentation', {})\n          },\n          viewParams\n        };\n\n        break;\n      case RX_SHELL.actions.navigateToState:\n        // LMA:: TODO:: Implement it later\n        // if (!isRuntime || rxAuthorization.isStateAuthorized(properties.state)) {\n        menuItem.name = properties.menuItemName;\n\n        const stateParameters = {\n          state: properties.state,\n          menuItemId: menuItem.id\n        };\n\n        menuItem.stateParameters = stateParameters;\n        menuItem.action = this.navigateToState.bind(this, stateParameters);\n        break;\n      case RX_SHELL.actions.navigateToSmartReporting:\n        menuItem.name = properties.menuItemName;\n        menuItem.action = this.navigateToSmartReporting.bind(this);\n        break;\n    }\n\n    menuItem.hide = has(properties, 'hidden') ? this.rxJsonParserService.tryParseJson(properties.hidden) : false;\n    menuItem.listClassName = properties.styles;\n    menuItem.className = this.getIconClass(properties.menuItemIcon, itemDefinition.type !== RX_SHELL.navBar.action);\n\n    return menuItem;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport {\n  IBundleDescriptor,\n  RX_APPLICATION,\n  RxComponentCanDeactivateGuard,\n  RxGlobalCacheService,\n  RxLocalizationService,\n  RxSessionService\n} from '@helix/platform/shared/api';\nimport { find, findIndex, get, head } from 'lodash';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { concatMap, map, switchMap, tap } from 'rxjs/operators';\nimport { RX_SHELL, RxShellService } from '../shell';\nimport { RxTreeService } from '@helix/platform/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxHomepageResolver implements CanActivate {\n  private unknownApplicationRoute = '/unknown-application';\n\n  constructor(\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxShellService: RxShellService,\n    private rxTreeService: RxTreeService,\n    private router: Router,\n    private rxSessionService: RxSessionService,\n    private rxComponentCanDeactivateGuard: RxComponentCanDeactivateGuard,\n    private rxLocalizationService: RxLocalizationService\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const bundleId = route.paramMap.get('bundleId');\n    const applicationId = head(route.url).path;\n    const useDefaultLang = applicationId === RX_APPLICATION.innovationStudioBundleId;\n    const initTranslations$ = this.rxLocalizationService.initTranslations(useDefaultLang);\n\n    // waiting for translations to resolve to make getShellConfig call with correct lang\n    return combineLatest([this.rxSessionService.sessionActive$, initTranslations$]).pipe(\n      switchMap(() => {\n        return this.rxGlobalCacheService\n          .getBundleDescriptors()\n          .pipe(concatMap((bundleDescriptors) => this.getBundleUrl(bundleDescriptors, bundleId)));\n      }),\n      tap(() => this.rxComponentCanDeactivateGuard.disable())\n    );\n  }\n\n  private getBundleUrl(bundleDescriptors: IBundleDescriptor[], bundleId: string): Observable<UrlTree | boolean> {\n    if (findIndex(bundleDescriptors, { id: bundleId }) !== -1) {\n      return this.rxShellService.getShellConfig(bundleId).pipe(\n        map((shellConfiguration) => {\n          const menuItems = get(\n            this.rxTreeService.flattenTree(shellConfiguration, 'navigationBarItems'),\n            '[0].flattenedMenuItems'\n          );\n\n          const defaultView = find(menuItems, {\n            type: RX_SHELL.actions.navigateToView\n          });\n\n          return this.generateUrl(defaultView, bundleId);\n        })\n      );\n    } else {\n      return of(this.router.parseUrl(this.unknownApplicationRoute));\n    }\n  }\n\n  private generateUrl(defaultView, bundleId): UrlTree {\n    return this.router.parseUrl(\n      defaultView\n        ? `/${bundleId}/view/${defaultView.viewUrl}`\n        : `/${bundleId}/view/${RX_APPLICATION.settingsBundleId}:Unknown Default View Error)}`\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { RxViewComponentRegistryService } from '../registries/view-component-registry.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxViewComponentResolver implements Resolve<any> {\n  constructor(private rxViewComponentRegistryService: RxViewComponentRegistryService) {}\n\n  resolve(): Observable<any> {\n    return this.rxViewComponentRegistryService.resolveAsyncDescriptors();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AdaptDeviceDetectionService } from '@bmc-ux/adapt-angular';\nimport { RxDevice } from './device.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxDeviceDetectionService {\n  private devices = [\n    {\n      type: RxDevice.Desktop,\n      isDetected: this.adaptDeviceDetectionService.deviceDesktop()\n    },\n    {\n      type: RxDevice.Tablet,\n      isDetected: this.adaptDeviceDetectionService.deviceTablet()\n    },\n    {\n      type: RxDevice.Mobile,\n      isDetected: this.adaptDeviceDetectionService.deviceMobile()\n    }\n  ];\n\n  currentDevice: RxDevice = this.devices.find((item) => item.isDetected)?.type;\n\n  constructor(private adaptDeviceDetectionService: AdaptDeviceDetectionService) {}\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["map","makeDecorator"],"mappings":";;;;;;;;;;;;;;;;IAAY;AAAZ,WAAY,yBAAyB;IACnC,wCAAW,CAAA;IACX,sCAAS,CAAA;AACX,CAAC,EAHW,yBAAyB,KAAzB,yBAAyB,QAGpC;IAEW;AAAZ,WAAY,wBAAwB;IAClC,qCAAS,CAAA;IACT,uCAAW,CAAA;IACX,uCAAW,CAAA;IACX,yCAAa,CAAA;IACb,qCAAS,CAAA;IACT,qCAAS,CAAA;IACT,qCAAS,CAAA;IACT,qCAAS,CAAA;AACX,CAAC,EATW,wBAAwB,KAAxB,wBAAwB,QASnC;MAMY,8BAA8B,GAAG;;MCbjC,sBAAsB,GAAG,OAAO;IAMjC;AAAZ,WAAY,mBAAmB;IAC7B,wCAAiB,CAAA;IACjB,wCAAiB,CAAA;IACjB,8CAAuB,CAAA;IACvB,sCAAe,CAAA;IACf,sCAAe,CAAA;IACf,sCAAe,CAAA;IACf,kCAAW,CAAA;AACb,CAAC,EARW,mBAAmB,KAAnB,mBAAmB;;ACb/B,MAAM,uBAAuB,GAAG,eAAe,CAAC;MAEnC,YAAY,GAAG;IAC1B,uBAAuB;;;ACGzB,MAAM,mBAAmB,GAAG,kBAAkB,CAAC;MAKlC,6BAA6B;IACxC,YACU,gBAAkC,EAClC,qBAA4C,EAC5C,iBAAoC;QAFpC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,sBAAiB,GAAjB,iBAAiB,CAAmB;KAC1C;IAEJ,iBAAiB;QACf,OAAO;YACL,cAAc,EAAE,KAAK;YACrB,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,YAAY,GAAG,mBAAmB;YACxC,OAAO,EAAE;gBACP;oBACE,MAAM;oBACN,QAAQ;oBACR,QAAQ;oBACR,WAAW;oBACX,GAAG;oBACH,cAAc;oBACd,cAAc;oBACd,SAAS;oBACT,QAAQ;oBACR,GAAG;oBACH,aAAa;oBACb,eAAe;oBACf,cAAc;oBACd,GAAG;oBACH,QAAQ;oBACR,QAAQ;oBACR,MAAM;oBACN,UAAU;oBACV,WAAW;iBACZ;aACF;YACD,SAAS,EAAE;gBACT;oBACE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,0DAA0D,CAAC;oBAC/F,OAAO,EAAE,IAAI;oBACb,UAAU,EAAE;wBACV,KAAK,EAAE,cAAc;qBACtB;iBACF;gBACD;oBACE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,sDAAsD,CAAC;oBAC3F,OAAO,EAAE,IAAI;oBACb,UAAU,EAAE;wBACV,KAAK,EAAE,UAAU;qBAClB;iBACF;gBACD;oBACE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,+DAA+D,CAAC;oBACpG,OAAO,EAAE,KAAK;oBACd,UAAU,EAAE;wBACV,KAAK,EAAE,oBAAoB;qBAC5B;iBACF;gBACD;oBACE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,oDAAoD,CAAC;oBACzF,OAAO,EAAE,MAAM;oBACf,UAAU,EAAE;wBACV,KAAK,EAAE,QAAQ;qBAChB;iBACF;gBACD;oBACE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,mDAAmD,CAAC;oBACxF,OAAO,EAAE,OAAO;iBACjB;gBACD;oBACE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,2DAA2D,CAAC;oBAChG,OAAO,EAAE,MAAM;iBAChB;gBACD;oBACE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,6DAA6D,CAAC;oBAClG,OAAO,EAAE,KAAK;iBACf;gBACD;oBACE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,yDAAyD,CAAC;oBAC9F,OAAO,EAAE,MAAM;iBAChB;gBACD;oBACE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,sDAAsD,CAAC;oBAC3F,OAAO,EAAE,KAAK;iBACf;gBACD;oBACE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,0DAA0D,CAAC;oBAC/F,OAAO,EAAE,KAAK;iBACf;gBACD;oBACE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,2DAA2D,CAAC;oBAChG,OAAO,EAAE,KAAK;iBACf;gBACD;oBACE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,wDAAwD,CAAC;oBAC7F,OAAO,EAAE,MAAM;iBAChB;gBACD;oBACE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,8DAA8D,CAAC;oBACnG,OAAO,EAAE,GAAG;iBACb;gBACD;oBACE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,2DAA2D,CAAC;oBAChG,OAAO,EAAE,OAAO;oBAChB,UAAU,EAAE;wBACV,WAAW,EAAE,GAAG;wBAChB,WAAW,EAAE,GAAG;wBAChB,KAAK,EAAE,eAAe;qBACvB;iBACF;gBACD;oBACE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,8DAA8D,CAAC;oBACnG,OAAO,EAAE,OAAO;oBAChB,UAAU,EAAE;wBACV,KAAK,EAAE,kBAAkB;qBAC1B;iBACF;gBACD;oBACE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,kEAAkE,CAAC;oBACvG,OAAO,EAAE,IAAI;oBACb,UAAU,EAAE;wBACV,KAAK,EAAE,sBAAsB;qBAC9B;iBACF;aACF;YACD,QAAQ,EAAE,IAAI,CAAC,qBAAqB,CAAC,aAAa;YAClD,WAAW,EAAE,gBAAgB;YAC7B,MAAM,EAAE,MAAM;SACf,CAAC;KACH;IAED,eAAe;QACb,OAAO;YACL,CAAC,EAAE,IAAI;YACP,MAAM,EAAE,IAAI;YACZ,EAAE,EAAE,IAAI;YACR,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,IAAI;YACP,EAAE,EAAE,IAAI;YACR,EAAE,EAAE,IAAI;YACR,EAAE,EAAE,IAAI;YACR,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,IAAI;YACV,GAAG,EAAE,IAAI;YACT,IAAI,EAAE,IAAI;YACV,GAAG,EAAE,IAAI;YACT,GAAG,EAAE,IAAI;YACT,GAAG,EAAE,IAAI;YACT,IAAI,EAAE,IAAI;YACV,CAAC,EAAE,IAAI;YACP,GAAG,EAAE,IAAI;YACT,EAAE,EAAE,IAAI;YACR,IAAI,EAAE;gBACJ,OAAO,EAAE,QAAQ;gBACjB,UAAU,EAAE,CAAC,YAAY,CAAC,uBAAuB,EAAE,iBAAiB,EAAE,OAAO,CAAC;gBAC9E,MAAM,EAAE,OAAO;aAChB;YACD,EAAE,EAAE,IAAI;YACR,EAAE,EAAE;gBACF,OAAO,EAAE,cAAc;aACxB;YACD,EAAE,EAAE;gBACF,OAAO,EAAE,UAAU;aACpB;YACD,GAAG,EAAE;gBACH,OAAO,EAAE,oBAAoB;aAC9B;YACD,CAAC,EAAE;gBACD,KAAK,EAAE,CAAC,OAAO,KAAK,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;gBAC7E,UAAU,EAAE;oBACV,QAAQ;oBACR,IAAI;oBACJ,KAAK;oBACL,WAAW;oBACX,MAAM;oBACN,UAAU;oBACV,OAAO;oBACP,MAAM;oBACN,SAAS;oBACT,KAAK;oBACL,MAAM;oBACN,MAAM;oBACN,OAAO;oBACP,OAAO;oBACP,UAAU;iBACX;aACF;YACD,4BAA4B,EAAE;gBAC5B,MAAM,EAAE,oCAAoC;aAC7C;SACqC,CAAC;KAC1C;;0HA9LU,6BAA6B;8HAA7B,6BAA6B,cAF5B,MAAM;2FAEP,6BAA6B;kBAHzC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;ICiGW;AAAZ,WAAY,yBAAyB;IACnC,gDAAmB,CAAA;IACnB,8CAAiB,CAAA;IACjB,8CAAiB,CAAA;IACjB,4CAAe,CAAA;IACf,8CAAiB,CAAA;AACnB,CAAC,EANW,yBAAyB,KAAzB,yBAAyB;;IC3GzB;AAAZ,WAAY,QAAQ;IAClB,+BAAmB,CAAA;IACnB,6BAAiB,CAAA;IACjB,6BAAiB,CAAA;AACnB,CAAC,EAJW,QAAQ,KAAR,QAAQ;;MCGP,iCAAiC,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;MAE5D,iCAAiC,GAAG,qBAAqB;MAEzD,qCAAqC,GAAG;IACnD,CAAC,iCAAiC,GAAG,iCAAiC;EACtE;MAEW,iCAAiC,GAAG;IAC/C,IAAI,EAAE,iCAAiC;IACvC,IAAI,EAAE,yBAAyB,CAAC,KAAK;IACrC,UAAU,EAAE,yBAAyB,CAAC,KAAK;;;MCdhC,qBAAqB,GAAG,WAAW;MAEnC,8BAA8B,GAAG;IAC5C,CAAC,qBAAqB,GAAG,GAAG;EAC5B;MAEW,qBAAqB,GAAG;IACnC,IAAI,EAAE,qBAAqB;IAC3B,0BAA0B,EAAE,IAAI;;;MCRrB,mBAAmB,GAAG,SAAS;MAE/B,4BAA4B,GAAG;IAC1C,CAAC,mBAAmB,GAAG,GAAG;EAC1B;MAEW,mBAAmB,GAAG;IACjC,IAAI,EAAE,mBAAmB;IACzB,0BAA0B,EAAE,IAAI;;;MCRrB,mBAAmB,GAAG,SAAS;MAE/B,4BAA4B,GAAG;IAC1C,CAAC,mBAAmB,GAAG,IAAI;EAC3B;MAEW,mBAAmB,GAAG;IACjC,IAAI,EAAE,mBAAmB;;;MCCd,sBAAsB,GAAG,CAAC,mBAAmB,EAAE,mBAAmB,EAAE,iCAAiC,EAAE;MAEvG,gCAAgC,iDACxC,4BAA4B,GAC5B,4BAA4B,GAC5B,qCAAqC;;MCD7B,yBAAyB;IAGpC;QAFA,oBAAe,GAA0C,EAAE,CAAC;QAG1D,SAAS,YAAY,CAAC,UAAkB;YACtC,OAAO,UAAU,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;SAC3C;QAED,SAAS,WAAW,CAAC,UAAkB;YACrC,OAAO,UAAU,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;SACzC;QAED,SAAS,UAAU,CAAC,UAAkB;YACpC,OAAO,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,kBAAkB,CAAC,EAAE,CAAC,CAAC;SAC1D;QAED,SAAS,WAAW,CAAC,UAAkB;YACrC,OAAO,UAAU,CAAC,OAAO,CAAC,OAAO,EAAE,kBAAkB,CAAC,GAAG,CAAC,CAAC;SAC5D;QAED,SAAS,YAAY,CAAC,UAAkB;YACtC,OAAO,UAAU,CAAC,OAAO,CAAC,QAAQ,EAAE,kBAAkB,CAAC,IAAI,CAAC,CAAC;SAC9D;QAED,SAAS,gBAAgB,CAAC,UAAU;YAClC,OAAO,UAAU,CAAC,OAAO,CAAC,YAAY,EAAE,kBAAkB,CAAC,QAAQ,CAAC,CAAC;SACtE;QAED,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,gBAAgB,CAAC,CAAC;KAC/G;IAED,aAAa,CAAC,KAAa,EAAE,GAAW,EAAE,UAAkB;QAC1D,MAAM,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAExC,OAAO;YACL,OAAO;YACP,UAAU,EAAE,UAAU,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;SAC3C,CAAC;KACH;IAED,YAAY,CAAC,OAAgC,EAAE,GAAW,EAAE,UAAkB;QAC5E,IAAI,OAAO,KAAK,IAAI,EAAE;YACpB,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK;gBACpB,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;aAC7C,CAAC,CAAC;SACJ;QAED,OAAO,UAAU,CAAC;KACnB;IAED,OAAO,CAAC,UAAkB;;QAExB,MAAM,mBAAmB,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;QAE/F,MAAM,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAC9C,oDAAoD,EACpD,sBAAsB,EACtB,mBAAmB,CACpB,CAAC;QAEF,qBAAqB,CAAC,OAAO,GAAG,GAAG,CAAC,qBAAqB,CAAC,OAAO,EAAE,IAAI,CAAC,wBAAwB,CAAC,CAAC;QAElG,MAAM,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,eAAe,EAAE,qBAAqB,CAAC,UAAU,CAAC,CAAC;QAE5G,IAAI,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAE3E,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,OAAO,EAAE,eAAe,EAAE,kBAAkB,CAAC,CAAC;QAE1G,OAAO,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,OAAO,EAAE,sBAAsB,EAAE,kBAAkB,CAAC,CAAC;KACrG;IAED,gBAAgB,CAAC,UAAkB;QACjC,OAAO,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,MAAM,EAAE,OAAO,KAAK,OAAO,CAAC,MAAM,CAAC,EAAE,UAAU,CAAC,CAAC;KACvF;IAEO,wBAAwB,CAAC,UAAkB;QACjD,MAAM,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;QAEjE,kBAAkB,CAAC,OAAO,CAAC,CAAC,iBAAiB;YAC3C,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAC,CAAC;YAEhE,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,iBAAiB,EAAE,CAAC,CAAC;SACpE,CAAC,CAAC;QAEH,OAAO,UAAU,CAAC;KACnB;IAEO,iBAAiB,CAAC,OAAyB,EAAE,GAAW,EAAE,UAAkB;QAClF,IAAI,OAAO,KAAK,IAAI,EAAE;YACpB,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK;gBACpB,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,KAAK,GAAG,CAAC,CAAC;aACvD,CAAC,CAAC;SACJ;QAED,OAAO,UAAU,CAAC;KACnB;;sHA/FU,yBAAyB;0HAAzB,yBAAyB,cAFxB,MAAM;2FAEP,yBAAyB;kBAHrC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCJY,oCAAoC;IAG/C;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QAClD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;QAGhD,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;;QAGhC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;;QAG7B,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;KACrC;IAED,SAAS,CAAC,UAAkB;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC9B;;iIAnCU,oCAAoC;qIAApC,oCAAoC,cAFnC,MAAM;2FAEP,oCAAoC;kBAHhD,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;ACHD,MAAM,mBAAmB,GAAwC;IAC/D;QACE,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,OAAO;QACjB,WAAW,EAAE,+DAA+D;QAC5E,UAAU,EAAE;YACV;gBACE,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,uBAAuB;aACrC;SACF;KACF;IACD;QACE,IAAI,EAAE,UAAU;QAChB,QAAQ,EAAE,OAAO;QACjB,WAAW,EAAE,sDAAsD;QACnE,UAAU,EAAE;YACV;gBACE,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,uBAAuB;aACrC;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,0BAA0B;aACxC;SACF;KACF;IACD;QACE,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,OAAO;QACjB,WAAW,EAAE,yBAAyB;QACtC,UAAU,EAAE;YACV;gBACE,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,uBAAuB;aACrC;SACF;KACF;CACF,CAAC;MAEW,uBAAuB,GAAwC,mBAAmB,CAAC,GAAG,CAAC,CAAC,UAAU;IAC7G,MAAM,MAAM,GAAG,GAAG,CAAC,UAAU,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAE7D,uCACK,UAAU,KACb,SAAS,EAAE,GAAG,UAAU,CAAC,IAAI,IAAI,MAAM,GAAG,IAC1C;AACJ,CAAC,EAAE;MAEU,qBAAqB,GAAG;IACnC,IAAI,EAAE,CAAC,UAAU,KAAK,KAAK,CAAC,UAAU,EAAE,CAAC,KAAK,KAAK,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC;IAC3E,QAAQ,EAAE,CAAC,UAAU,EAAE,KAAK,KAAK,QAAQ,CAAC,UAAU,EAAE,KAAK,CAAC;IAC5D,IAAI,EAAE,CAAC,UAAU,KAAK,IAAI,CAAC,UAAU,CAAC;;;MCzC3B,mCAAmC;IAqI9C,YACU,yBAAoD,EACpD,eAAgC,EAChC,oCAA0E;QAF1E,8BAAyB,GAAzB,yBAAyB,CAA2B;QACpD,oBAAe,GAAf,eAAe,CAAiB;QAChC,yCAAoC,GAApC,oCAAoC,CAAsC;QAvI5E,0BAAqB,GAAG,EAAE,CAAC;QAE3B,cAAS,GAAG;YAClB,CAAC,kBAAkB,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC/B,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;oBAC5B,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;iBACvB;qBAAM,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;oBACnC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;iBACvB;qBAAM;;oBAEL,OAAO,CAAC,IAAI,CAAC,CAAC;iBACf;aACF;YACD,CAAC,kBAAkB,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC7B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;oBACpD,OAAO,IAAI,CAAC;iBACb;qBAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;oBAC5D,OAAO,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;iBACjD;qBAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;oBAC5D,OAAO,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;iBACjD;;;gBAID,CAAC,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC7C,CAAC,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAE7C,OAAO,CAAC,GAAG,CAAC,CAAC;aACd;YACD,CAAC,kBAAkB,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC;gBAClC,IAAI,WAAW,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;oBAC9B,CAAC,GAAG,CAAC,CAAC;iBACP;gBAED,IAAI,WAAW,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;oBAC9B,CAAC,GAAG,CAAC,CAAC;iBACP;gBAED,OAAO,CAAC,GAAG,CAAC,CAAC;aACd;YACD,CAAC,kBAAkB,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC;gBAClC,IAAI,WAAW,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;oBAC9B,CAAC,GAAG,CAAC,CAAC;iBACP;gBAED,IAAI,WAAW,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;oBAC9B,CAAC,GAAG,CAAC,CAAC;iBACP;gBAED,OAAO,CAAC,GAAG,CAAC,CAAC;aACd;YACD,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC;gBAChC,IAAI,WAAW,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;oBAC5D,OAAO,CAAC,CAAC;iBACV;gBAED,OAAO,CAAC,GAAG,CAAC,CAAC;aACd;YACD,CAAC,kBAAkB,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC;gBAClC,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;oBAC5B,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;iBAChB;qBAAM,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;oBACnC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;iBAChB;qBAAM;oBACL,OAAO,CAAC,GAAG,CAAC,CAAC;iBACd;aACF;YACD,CAAC,kBAAkB,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC;gBACrC,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;oBAC5B,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;iBAChB;qBAAM,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;oBACnC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;iBAChB;qBAAM;oBACL,OAAO,CAAC,GAAG,CAAC,CAAC;iBACd;aACF;YACD,CAAC,kBAAkB,CAAC,kBAAkB,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC5C,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;oBAC5B,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBACjB;qBAAM,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;oBACnC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBACjB;qBAAM;oBACL,OAAO,CAAC,IAAI,CAAC,CAAC;iBACf;aACF;YACD,CAAC,kBAAkB,CAAC,eAAe,GAAG,CAAC,CAAC,EAAE,CAAC;gBACzC,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;oBAC5B,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBACjB;qBAAM,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;oBACnC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBACjB;qBAAM;oBACL,OAAO,CAAC,IAAI,CAAC,CAAC;iBACf;aACF;YACD,CAAC,kBAAkB,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC;gBAClC,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;oBAC5B,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;iBACxB;qBAAM,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;oBACnC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;iBACxB;qBAAM;;oBAEL,OAAO,CAAC,IAAI,CAAC,CAAC;iBACf;aACF;YACD,CAAC,kBAAkB,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;gBACnC,IAAI,WAAW,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;oBAC5D,OAAO,CAAC,CAAC;iBACV;gBAED,OAAO,CAAC,GAAG,CAAC,CAAC;aACd;YACD,CAAC,kBAAkB,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU;YACzC,CAAC,kBAAkB,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,UAAU;YACvD,CAAC,kBAAkB,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS;YACvC,CAAC,kBAAkB,CAAC,EAAE,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,SAAS;YACrD,CAAC,kBAAkB,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW;YAC3C,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,WAAW;YACzD,CAAC,kBAAkB,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW;YAC/C,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,WAAW;SAC9D,CAAC;QAEM,mBAAc,GAAG;YACvB,GAAG,EAAE,CAAC,KAAK;gBACT,IAAI,WAAW,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;oBACtC,OAAO,CAAC,CAAC;iBACV;qBAAM;oBACL,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;iBACvB;aACF;YACD,GAAG,EAAE,CAAC,KAAK,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;SAChC,CAAC;KAME;IAEJ,eAAe,CAAC,UAAkB;QAChC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,EAAE;YAC3C,MAAM,gBAAgB,GAAG,IAAI,CAAC,oCAAoC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YAEzF,IAAI,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,EAAE;gBACjD,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,GAAG,gBAAgB,CAAC;aAC3D;iBAAM;gBACL,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;aACnC;SACF;QAED,OAAO,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;KAC/C;IAED,QAAQ,CAAC,UAAkB,EAAE,IAAY;QACvC,IAAI,mBAAmB,GAAG,UAAU,CAAC;QAErC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QAE9B,IAAI,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE;YACrD,MAAM,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAC9E,IAAI,gBAAgB,CAAC;YAErB,IAAI;gBACF,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,CAAC;aAC7D;YAAC,OAAO,CAAC,EAAE;gBACV,MAAM,IAAI,KAAK,CAAC,4BAA4B,UAAU,MAAM,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC;aAC3E;YAED,IAAI;gBACF,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;aACvE;YAAC,OAAO,CAAC,EAAE;gBACV,MAAM,IAAI,KAAK,CAAC,+BAA+B,UAAU,MAAM,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC;aAC9E;SACF;aAAM;YACL,mBAAmB,GAAG,IAAI,CAAC;SAC5B;QAED,OAAO,mBAAmB,CAAC;KAC5B;IAEO,UAAU,CAAC,CAAC,EAAE,CAAC;QACrB,OAAO,OAAO,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;KACjC;IAEO,SAAS,CAAC,CAAC,EAAE,CAAC;QACpB,OAAO,OAAO,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;KACjC;IAEO,WAAW,CAAC,CAAC,EAAE,CAAC;QACtB,OAAO,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACvB;IAEO,sBAAsB,CAAC,IAAgB;QAC7C,IAAI,OAAO,GAAG,KAAK,CAAC;QAEpB,QAAQ,IAAI,CAAC,IAAI;YACf,KAAK,kBAAkB;gBACrB,OAAO;oBACL,IAAI,CAAC,sBAAsB,CAAE,IAAyB,CAAC,IAAI,CAAC;wBAC5D,IAAI,CAAC,sBAAsB,CAAE,IAAyB,CAAC,KAAK,CAAC,CAAC;gBAChE,MAAM;YAER,KAAK,iBAAiB;gBACpB,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAE,IAAwB,CAAC,QAAQ,CAAC,CAAC;gBAC1E,MAAM;YAER,KAAK,gBAAgB;gBACnB,OAAO,GAAG,KAAK,CAAC;gBAEhB,MAAM,YAAY,GAAG,IAAsB,CAAC;gBAC5C,MAAM,kBAAkB,GAAG,IAAI,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;gBAEhG,IAAI,kBAAkB,IAAI,YAAY,CAAC,SAAS,CAAC,MAAM,KAAK,kBAAkB,CAAC,UAAU,CAAC,MAAM,EAAE;oBAChG,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,QAAQ,KAAK,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAC9F;gBAED,MAAM;YAER,KAAK,SAAS;gBACZ,OAAO,GAAG,IAAI,CAAC;gBACf,MAAM;YAER,KAAK,YAAY;gBACf,OAAO,GAAG,iBAAiB,CAAC,IAAI,CAAE,IAAmB,CAAC,IAAI,CAAC,CAAC;gBAC5D,MAAM;SACT;QAED,OAAO,OAAO,CAAC;KAChB;IAEO,YAAY,CAAC,IAAgB,EAAE,IAAY;QACjD,QAAQ,IAAI,CAAC,IAAI;YACf,KAAK,kBAAkB;gBACrB,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAE,IAAyB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBACtE,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAE,IAAyB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBAExE,IAAI,IAAI,CAAC,SAAS,CAAE,IAAyB,CAAC,QAAQ,CAAC,EAAE;oBACvD,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAE,IAAyB,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;oBAEtF,IAAI,KAAK,CAAC,YAAY,CAAC,EAAE;wBACvB,MAAM,IAAI,KAAK,CACb,aAAc,IAAyB,CAAC,QAAQ,2BAA2B,IAAI,KAAK,KAAK,EAAE,CAC5F,CAAC;qBACH;yBAAM;wBACL,OAAO,YAAY,CAAC;qBACrB;iBACF;qBAAM;oBACL,MAAM,IAAI,KAAK,CAAC,4BAA6B,IAAyB,CAAC,QAAQ,EAAE,CAAC,CAAC;iBACpF;YAEH,KAAK,gBAAgB;gBACnB,IAAI,kBAAkB,GAAG,EAAE,CAAC;gBAC5B,MAAM,YAAY,GAAI,IAAuB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBAE7D,kBAAkB,GAAI,IAAuB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC;gBAE7G,IAAI,qBAAqB,CAAC,YAAY,CAAC,EAAE;oBACvC,OAAO,qBAAqB,CAAC,YAAY,CAAC,CAAC,GAAG,kBAAkB,CAAC,CAAC;iBACnE;qBAAM;oBACL,MAAM,IAAI,KAAK,CAAC,qBAAqB,YAAY,EAAE,CAAC,CAAC;iBACtD;YAEH,KAAK,SAAS;gBACZ,IAAI,SAAS,GAAI,IAAgB,CAAC,KAAK,CAAC;gBAExC,IAAI,QAAQ,CAAC,SAAmB,CAAC,EAAE;oBACjC,IAAI,kBAAkB,CAAC,IAAI,CAAC,SAAmB,CAAC,EAAE;wBAChD,SAAS,GAAG,MAAM,CAAC,IAAI,EAAG,SAAoB,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC9D;yBAAM;wBACL,MAAM,WAAW,GAAI,SAAoB,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;wBAErE,OAAO,CAAC,WAAW,EAAE,CAAC,UAAU;4BAC9B,MAAM,KAAK,GAAG,MAAM,CAAM,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;4BAEzD,SAAS,GAAI,SAAoB,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC;yBAClF,CAAC,CAAC;qBACJ;iBACF;gBAED,OAAO,SAAS,CAAC;YAEnB,KAAK,iBAAiB;gBACpB,IAAI,IAAI,CAAC,cAAc,CAAE,IAAwB,CAAC,QAAQ,CAAC,EAAE;oBAC3D,MAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAE,IAAwB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;oBACpF,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAE,IAAwB,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;oBAE7F,IAAI,KAAK,CAAC,WAAW,CAAC,EAAE;wBACtB,MAAM,IAAI,KAAK,CAAC,aAAc,IAAwB,CAAC,QAAQ,0BAA0B,eAAe,EAAE,CAAC,CAAC;qBAC7G;yBAAM;wBACL,OAAO,WAAW,CAAC;qBACpB;iBACF;qBAAM;oBACL,MAAM,IAAI,KAAK,CAAC,2BAA4B,IAAwB,CAAC,QAAQ,EAAE,CAAC,CAAC;iBAClF;YAEH;gBACE,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;SACrC;KACF;;gIA1SU,mCAAmC;oIAAnC,mCAAmC,cAFlC,MAAM;2FAEP,mCAAmC;kBAH/C,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCFY,mCAAmC;IAC9C,YACU,eAAgC,EAChC,mCAAwE,EACxE,yBAAoD;QAFpD,oBAAe,GAAf,eAAe,CAAiB;QAChC,wCAAmC,GAAnC,mCAAmC,CAAqC;QACxE,8BAAyB,GAAzB,yBAAyB,CAA2B;KAC1D;IAEJ,OAAO,CAAC,UAAkB,EAAE,sBAA6C;QACvE,MAAM,SAAS,GAAG,sBAAsB,IAAI,IAAI,CAAC,mCAAmC,CAAC;QACrF,IAAI,KAAK,GAAG,IAAI,CAAC;QAEjB,IAAI,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE;YAC9F,MAAM,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAE9E,IAAI;gBACF,SAAS,CAAC,eAAe,CAAC,kBAAkB,CAAC,CAAC;aAC/C;YAAC,OAAO,CAAC,EAAE;gBACV,KAAK,GAAG,KAAK,CAAC;aACf;SACF;QAED,OAAO,KAAK,CAAC;KACd;;gIAtBU,mCAAmC;oIAAnC,mCAAmC,cAFlC,MAAM;2FAEP,mCAAmC;kBAH/C,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCDY,4BAA4B;IACvC,YACU,QAAkB,EAClB,YAA0B,EAC1B,mCAAwE,EACxE,mCAAwE,EACxE,qBAA4C;QAJ5C,aAAQ,GAAR,QAAQ,CAAU;QAClB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,wCAAmC,GAAnC,mCAAmC,CAAqC;QACxE,wCAAmC,GAAnC,mCAAmC,CAAqC;QACxE,0BAAqB,GAArB,qBAAqB,CAAuB;KAClD;IAEJ,QAAQ,CAAC,UAAkB,EAAE,IAAa,EAAE,sBAA6C;QACvF,MAAM,SAAS,GAAG,sBAAsB,IAAI,IAAI,CAAC,mCAAmC,CAAC;QAErF,MAAM,mBAAmB,GAAG,SAAS,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAEjE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,wBAAwB,UAAU,KAAK,mBAAmB,EAAE,CAAC,CAAC;QAEtF,OAAO,mBAAmB,CAAC;KAC5B;IAED,WAAW,CACT,UAAkB,EAClB,IAAa,EACb,sBAA6C,EAC7C,eAAoB,IAAI;QAExB,IAAI,MAAM,GAAQ,YAAY,CAAC;QAE/B,IAAI;YACF,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,EAAE,sBAAsB,CAAC,CAAC;SAClE;QAAC,OAAO,KAAK,EAAE;YACd,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAC3D;QAED,OAAO,MAAM,CAAC;KACf;IAED,OAAO,CAAC,UAAU,EAAE,sBAA6C;QAC/D,OAAO,IAAI,CAAC,mCAAmC,CAAC,OAAO,CAAC,UAAU,EAAE,sBAAsB,CAAC,CAAC;KAC7F;;yHAtCU,4BAA4B;6HAA5B,4BAA4B,cAF3B,MAAM;2FAEP,4BAA4B;kBAHxC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCNY,uBAAuB,GAAG;IACrC,QAAQ,EAAE;QACR,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,aAAa;KACzB;IACD,8BAA8B,EAAE,4DAA4D;;;MCKjF,uCAAuC;IAsBlD,YACU,mCAAwE,EACxE,kBAA6C,EAC7C,eAAgC,EAChC,4BAA0D;QAH1D,wCAAmC,GAAnC,mCAAmC,CAAqC;QACxE,uBAAkB,GAAlB,kBAAkB,CAA2B;QAC7C,oBAAe,GAAf,eAAe,CAAiB;QAChC,iCAA4B,GAA5B,4BAA4B,CAA8B;QAzB5D,eAAU,GAAG,gBAAgB,CAAC;;;QAI9B,yBAAoB,GAAG,6BAA6B,CAAC;;QAOrD,gCAA2B,GAAG,IAAI,MAAM,CAC9C,YAAY,GAAG,uBAAuB,CAAC,8BAA8B,GAAG,aAAa,EACrF,GAAG,CACJ,CAAC;KAYE;IAEJ,QAAQ,CAAC,UAAkB,EAAE,IAAY;QACvC,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,yBAAyB,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,oCAAoC,GAAG,CAAC,CAAC;QAE9C,IAAI,mBAAmB,GAAG,IAAI,CAAC;QAE/B,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE;;;;YAIjD,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAClE,IAAI,CAAC,oBAAoB,EACzB,qBAAqB,CAAC,kBAAkB,EACxC,UAAU,CACX,CAAC;;;YAIF,IAAI,CAAC,uCAAuC,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAClF,IAAI,CAAC,2BAA2B,EAChC,kCAAkC,EAClC,IAAI,CAAC,uBAAuB,CAAC,UAAU,CACxC,CAAC;;;YAIF,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAC5D,IAAI,CAAC,UAAU,EACf,oBAAoB,EACpB,IAAI,CAAC,uCAAuC,CAAC,UAAU,CACxD,CAAC;;;YAIF,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;YAE5E,MAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAC3D,mCAAmC,EACnC,qBAAqB,CAAC,UAAU,EAChC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAClC,CAAC;YAEF,mBAAmB,GAAG,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,CAAC,qBAAqB,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO;gBACpG,MAAM,mBAAmB,GAAG,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;gBAGhE,IAAI,mBAAmB,EAAE;oBACvB,MAAM,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EACzE,iBAAiB,GAAG,IAAI,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC;oBAEtF,OAAO,GAAG,gBAAgB,SAAS,iBAAiB,EAAE,CAAC;iBACxD;qBAAM;oBACL,OAAO,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;iBAC5C;aACF,CAAC;iBACC,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC;iBACtC,OAAO,CACN,IAAI,MAAM,CAAC,GAAG,qBAAqB,CAAC,UAAU,EAAE,EAAE,GAAG,CAAC,EACtD,MAAM,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CACxD,CAAC;SACL;QAED,OAAO,mBAAmB,CAAC;KAC5B;;;;;;;;;;IAWO,eAAe,CAAC,OAAe,EAAE,IAAY,EAAE,gBAAyB,KAAK;QACnF,OAAO,MAAM,CACX;YACE,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC;YACzC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC;YAC3C,IAAI,CAAC,qCAAqC,CAAC,IAAI,CAAC,IAAI,CAAC;SACtD,EACD,CAAC,UAAU,EAAE,SAAS,KAAK,SAAS,CAAC,UAAU,EAAE,IAAI,EAAE,aAAa,CAAC,EACrE,OAAO,CACR,CAAC;KACH;IAEO,yBAAyB,CAAC,OAAe,EAAE,IAAY,EAAE,gBAAyB,KAAK;QAC7F,OAAO,OAAO,CAAC,OAAO,CAAC,qBAAqB,EAAE;YAC5C,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC,OAAO,CAC3E,IAAI,CAAC,UAAU,EACf,CAAC,KAAK,EAAE,QAAQ;gBACd,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;gBAEnC,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;oBACtB,OAAO,uBAAuB,CAAC,QAAQ,CAAC,SAAS,CAAC;iBACnD;qBAAM,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE,EAAE;oBACxC,OAAO,aAAa,GAAG,EAAE,GAAG,uBAAuB,CAAC,QAAQ,CAAC,IAAI,CAAC;iBACnE;qBAAM,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;oBAC1B,KAAK,GAAG,aAAa;0BACjB,IAAI,CAAC,4BAA4B,CAAC,mBAAmB,CAAC,KAAK,CAAC;0BAC5D,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBAC/B;gBAED,OAAO,aAAa,GAAG,KAAK,GAAG,IAAI,KAAK,GAAG,CAAC;aAC7C,CACF,CAAC;SACH,CAAC,CAAC;KACJ;IAEO,2BAA2B,CAAC,OAAe,EAAE,IAAY,EAAE,gBAAyB,KAAK;QAC/F,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,GAAG,qBAAqB,CAAC,kBAAkB,EAAE,EAAE,GAAG,CAAC,EAAE;YACrF,IAAI,gBAAgB,GAAG,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,IAAI,CAAC,yBAAyB,EAAE,CAAC,CAAC;YAE9F,IAAI,aAAa,EAAE;gBACjB,gBAAgB,GAAG,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;aAC9E;YAED,gBAAgB,GAAG,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,KAAK,EAAE,QAAQ;gBAC3E,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;gBAErC,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;oBAChB,OAAO,EAAE,CAAC;iBACX;qBAAM,IAAI,aAAa,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;oBAC3C,OAAO,IAAI,CAAC,4BAA4B,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;iBACrE;gBAED,OAAO,KAAK,CAAC;aACd,CAAC,CAAC;YAEH,IAAI,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,EAAE;gBAC/C,gBAAgB,GAAG,uBAAuB,CAAC,QAAQ,CAAC,IAAI,CAAC;aAC1D;YAED,OAAO,gBAAgB,CAAC;SACzB,CAAC,CAAC;KACJ;IAEO,qCAAqC,CAAC,OAAe;QAC3D,OAAO,OAAO,CAAC,OAAO,CAAC,mCAAmC,EAAE,MAC1D,IAAI,CAAC,uCAAuC,CAAC,OAAO,CAAC,IAAI,CAAC,oCAAoC,EAAE,CAAC,CAAC,OAAO,CACvG,IAAI,CAAC,2BAA2B,EAChC,CAAC,KAAK,EAAE,UAAU,EAAE,qBAAqB,EAAE,SAAS,KAAK,qBAAqB,CAC/E,CACF,CAAC;KACH;;oIA/KU,uCAAuC;wIAAvC,uCAAuC,cAFtC,MAAM;2FAEP,uCAAuC;kBAHnD,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCTY,eAAe,GAAiB;IAC3C,GAAG,EAAE,MAAM;IACX,SAAS,EAAE,aAAa;IACxB,IAAI,EAAE,MAAM;IACZ,IAAI,EAAE,cAAc;IACpB,MAAM,EAAE,OAAO;IACf,YAAY,EAAE,cAAc;IAC5B,IAAI,EAAE,QAAQ;IACd,iBAAiB,EAAE,oBAAoB;IACvC,mBAAmB,EAAE,sBAAsB;IAC3C,IAAI,EAAE,iBAAiB;IACvB,OAAO,EAAE,gBAAgB;IACzB,IAAI,EAAE,UAAU;IAChB,KAAK,EAAE,SAAS;IAChB,UAAU,EAAE,aAAa;IACzB,QAAQ,EAAE,WAAW;;;MCAV,8BAA8B;IAKzC,YACU,wBAAkD,EAClD,oBAA0C,EAC1C,oBAA0C,EAC1C,eAAgC,EAChC,YAA0B;QAJ1B,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAc;;QAR5B,yBAAoB,GAA0C,IAAI,GAAG,EAAE,CAAC;QACxE,8BAAyB,GAAwC,EAAE,CAAC;QAUpE,oBAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAC7EA,KAAG,CAAC,CAAC,iBAAiB,KACpB,iBAAiB,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE,gBAAgB;;YACxD,MAAA,gBAAgB,CAAC,SAAS,CAAC,cAAc,0CAAE,OAAO,CAAC,CAAC,iBAAyB;gBAC3E,cAAc,CAAC,iBAAiB,CAAC,GAAG,gBAAgB,CAAC,EAAE,CAAC;aACzD,CAAC,CAAC;YAEH,OAAO,cAAc,CAAC;SACvB,EAAE,EAAE,CAAC,CACP,EACD,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;KAbE;IAeJ,uBAAuB;QACrB,IAAI,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE;YACzC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,yBAAyB,CAAC,MAAM,kCAAkC,CAAC,CAAC;YAE9G,OAAO,KAAK,CAAC,MACX,IAAI,CACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW;gBAC3D,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU;oBAC7B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;iBAC/B,CAAC,CAAC;gBAEH,IAAI,CAAC,YAAY,CAAC,KAAK,CACrB,YAAY,WAAW,CAAC,MAAM,gCAAgC,WAAW;qBACtE,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;qBACxB,IAAI,CAAC,IAAI,CAAC,GAAG,CACjB,CAAC;gBAEF,OAAO,IAAI,CAAC,oBAAoB,CAAC;aAClC,CAAC,CACH,CACF,CAAC;SACH;aAAM;YACL,OAAO,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;SACtC;KACF;IAED,uBAAuB;QACrB,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;IAED,GAAG,CAAC,IAAY;QACd,OAAO,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KAC5C;IAED,QAAQ,CAAC,GAAG,oBAAsF;QAChG,oBAAoB,CAAC,OAAO,CAAC,CAAC,UAAU;YACtC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;SAClE,CAAC,CAAC;KACJ;IAED,YAAY,CAAC,UAAoC;;QAC/C,IAAI,MAAA,UAAU,CAAC,OAAO,0CAAE,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;YACjD,IAAI,CAAC,YAAY,CAAC,OAAO,CACvB,aAAa,UAAU,CAAC,IAAI,oEAAoE,CACjG,CAAC;YAEF,UAAU,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,IAAI,KAAK,UAAU,CAAC,IAAI,CAAC,CAAC;SACpF;QAED,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAE3D,MAAA,UAAU,CAAC,OAAO,0CAAE,OAAO,CAAC,CAAC,IAAI;YAC/B,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;SACjD,CAAC,CAAC;KACJ;IAED,yBAAyB,CAAC,mBAA6C;QACrE,OAAO,OAAO,CAAC,mBAAmB,CAAC,eAAe,CAAC,CAAC;KACrD;IAED,uBAAuB,CAAC,QAAgB,EAAE,cAAc,GAAG,KAAK;QAC9D,OAAO,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,CAAC,mBAA6C,KAC9F,mBAAmB,CAAC,eAAe,IAAI,OAAO,CAAC,mBAAmB,CAAC,kBAAkB,CAAC;cAClF,mBAAmB,CAAC,QAAQ,KAAK,QAAQ;cACzC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,QAAQ,EAAE,mBAAmB,CAAC,kBAAkB,CAAC,CACxD,CAAC;KACjC;IAED,qBAAqB,CAAC,cAAc,GAAG,KAAK;QAC1C,OAAO,IAAI,CAAC,oBAAoB;aAC7B,4BAA4B,EAAE;aAC9B,IAAI,CACHA,KAAG,CAAC,CAAC,iBAAiB,KACpB,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,MAAM,CACxC,CAAC,mBAAmB,KAClB,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,QAAQ,EAAE,iBAAiB,CAAC;YACtE,IAAI,CAAC,mCAAmC,CAAC,mBAAmB,CAAC,CAChE,CACF,CACF,CAAC;KACL;IAED,yBAAyB,CAAC,iBAAyB;QACjD,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAACA,KAAG,CAAC,CAAC,cAAc,KAAK,cAAc,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;KAC9F;IAEO,gBAAgB,CAAC,QAAgB,EAAE,iBAAsC;QAC/E,OAAO,QAAQ,KAAK,cAAc,CAAC,gBAAgB,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;KAClG;IAEO,mCAAmC,CAAC,mBAA6C;QACvF,QACE,OAAO,CAAC,mBAAmB,CAAC,kBAAkB,CAAC;YAC/C,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,mBAAmB,CAAC,kBAAkB,CAAC,EAC3G;KACH;IAEO,cAAc,CAAC,cAAc,GAAG,KAAK;QAC3C,OAAO,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC;;YAChF,IAAI,cAAc,IAAI,EAAC,MAAA,UAAU,CAAC,OAAO,0CAAE,QAAQ,CAAC,IAAI,CAAC,CAAA,EAAE;gBACzD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACzB;YAED,OAAO,MAAM,CAAC;SACf,EAAE,EAAE,CAAC,CAAC;KACR;;2HAnIU,8BAA8B;+HAA9B,8BAA8B,cAF7B,MAAM;2FAEP,8BAA8B;kBAH1C,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;IChBW;AAAZ,WAAY,kBAAkB;IAC5B,yCAAmB,CAAA;IACnB,qCAAe,CAAA;AACjB,CAAC,EAHW,kBAAkB,KAAlB,kBAAkB;;MCEjB,kBAAkB,GAAG;IAChC,KAAK,EAAE;QACL,OAAO,EAAE,kBAAkB,CAAC,OAAO;QACnC,KAAK,EAAE,kBAAkB,CAAC,KAAK;KAChC;IAED,aAAa,EAAE;QACb,aAAa,EAAE,+DAA+D;QAC9E,sBAAsB,EAAE,wEAAwE;KACjG;IAED,iBAAiB,EAAE,SAAS;IAE5B,oBAAoB,EAAE;QACpB,IAAI,EAAE,mBAAmB;KAC1B;IAED,uBAAuB,EAAE,CAAC;IAE1B,MAAM,EAAE;QACN,EAAE,EAAE,EAAE,cAAc,EAAE,IAAI,EAAE,WAAW,EAAE;QACzC,EAAE,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,YAAY,EAAE;QAC/C,EAAE,EAAE,EAAE,qBAAqB,EAAE,IAAI,EAAE,kBAAkB,EAAE;KACxD;;;MCVU,6BAA6B;IACxC,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;KAAI;IAEpD,aAAa,CACX,UAA+D,EAC/D,WAAW,GAAG,KAAK;QAEnB,MAAM,UAAU,GAAyC,EAAE,CAAC;QAE5D,IAAI,CAAC,WAAW,EAAE;YAChB,UAAU,CAAC,IAAI,CAAC;gBACd,mBAAmB,EAAE,UAAU;gBAC/B,yBAAyB,EAAE,IAAI;aACM,CAAC,CAAC;SAC1C;QAED,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,oBAAoB,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QAEhF,OAAO,UAAU,CAAC;KACnB;IAEO,iBAAiB,CACvB,oBAAyF,EACzF,UAAgD,EAChD,yBAA8E;QAE9E,oBAAoB,CAAC,OAAO,CAAC,CAAC,mBAAmB;YAC/C,UAAU,CAAC,IAAI,CAAC,EAAE,mBAAmB,EAAE,yBAAyB,EAAwC,CAAC,CAAC;YAE1G,IAAI,IAAI,CAAC,kCAAkC,CAAC,mBAAmB,CAAC,EAAE;gBAChE,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,oBAAoB,EAAE,UAAU,EAAE,mBAAmB,CAAC,CAAC;aACnG;SACF,CAAC,CAAC;KACJ;IAEO,kCAAkC,CACxC,mBAAiF;QAEjF,OAAQ,mBAAyD,CAAC,oBAAoB,KAAK,SAAS,CAAC;KACtG;IAED,6BAA6B,CAC3B,cAA+B,EAC/B,wBAA6D,EAC7D,SAA8D;QAE9D,MAAM,8BAA8B,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAC1E,IAAI,yBAAyB,CAAC;QAE9B,IAAI,kCAAkC,GAAG,8BAA8B,CAAC,IAAI,CAC1E,CAAC,IAAI,KAAK,IAAI,CAAC,mBAAmB,CAAC,IAAI,KAAK,wBAAwB,CAAC,IAAI,CAC1E,CAAC;QAEF,OAAO,kCAAkC,IAAI,CAAC,yBAAyB,EAAE;YACvE,IAAI,SAAS,CAAC,kCAAkC,CAAC,mBAAmB,CAAC,EAAE;gBACrE,yBAAyB,GAAG,kCAAkC,CAAC,mBAAmB,CAAC;aACpF;iBAAM;gBACL,kCAAkC,GAAG,8BAA8B,CAAC,IAAI,CACtE,CAAC,IAAI,KAAK,IAAI,CAAC,mBAAmB,CAAC,IAAI,KAAK,kCAAkC,CAAC,yBAAyB,CAAC,IAAI,CAC9G,CAAC;aACH;SACF;QAED,OAAO,yBAAyB,CAAC;KAClC;IAED,iBAAiB,CACf,sBAA2E,EAC3E,SAAsB;QAEtB,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,sBAAsB,EAAE,sBAAsB,CAAC,EAAE,SAAS,CAAC,CAAC;KACxG;;0HAvEU,6BAA6B;8HAA7B,6BAA6B,cAF5B,MAAM;2FAEP,6BAA6B;kBAHzC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCGY,2BAA2B;IACtC,YACU,oBAA0C,EAC1C,eAAgC,EAChC,oBAA0C;QAF1C,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,oBAAe,GAAf,eAAe,CAAiB;QAChC,yBAAoB,GAApB,oBAAoB,CAAsB;QAG5C,0BAAqB,GAAuC,IAAI,GAAG,EAAE,CAAC;QACtE,mBAAc,GAA0C,IAAI,GAAG,EAAE,CAAC;QAElE,oBAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAC7EA,KAAG,CAAC,CAAC,iBAAiB,KACpB,iBAAiB,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE,gBAAgB;;YACxD,MAAA,gBAAgB,CAAC,SAAS,CAAC,WAAW,0CAAE,OAAO,CAAC,CAAC,cAAsB;gBACrE,cAAc,CAAC,cAAc,CAAC,GAAG,gBAAgB,CAAC,EAAE,CAAC;aACtD,CAAC,CAAC;YAEH,OAAO,cAAc,CAAC;SACvB,EAAE,EAAE,CAAC,CACP,EACD,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;KAhBE;IAkBJ,QAAQ,CAAC,oBAA2C;QAClD,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE;YAC/B,oBAAoB,CAAC,KAAK,GAAG,oBAAoB,CAAC,IAAI,CAAC;SACxD;QAED,oBAAoB,CAAC,UAAU,GAAG,oBAAoB,CAAC,UAAU,IAAI,EAAE,CAAC;QAExE,oBAAoB,CAAC,UAAU,CAAC,IAAI,CAAC;YACnC,IAAI,EAAE,aAAa;YACnB,0BAA0B,EAAE,IAAI;SACjC,CAAC,CAAC;QAEH,oBAAoB,CAAC,UAAU,CAAC,IAAI,CAAC;YACnC,IAAI,EAAE,OAAO;YACb,UAAU,EAAE,yBAAyB,CAAC,MAAM;SAC7C,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,CAAC;KACjF;IAED,GAAG,CAAC,UAAkB;QACpB,OAAO,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;KACnD;IAED,oBAAoB;QAClB,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;IAED,kBAAkB;QAChB,OAAO,IAAI,CAAC,oBAAoB,CAAC,4BAA4B,EAAE,CAAC,IAAI,CAClEA,KAAG,CAAC,CAAC,iBAAiB;YACpB,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,gBAAgB;gBAC7E,QACE,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,QAAQ,EAAE,iBAAiB,CAAC;oBACnE,IAAI,CAAC,gCAAgC,CAAC,gBAAgB,CAAC,EACvD;aACH,CAAC,CAAC;SACJ,CAAC,CACH,CAAC;KACH;IAED,sBAAsB,CAAC,cAAsB;QAC3C,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAACA,KAAG,CAAC,CAAC,cAAc,KAAK,cAAc,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;KAC3F;IAEO,gBAAgB,CAAC,QAAgB,EAAE,iBAAsC;QAC/E,OAAO,QAAQ,KAAK,cAAc,CAAC,gBAAgB,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;KAClG;IAEO,gCAAgC,CAAC,gBAAuC;QAC9E,QACE,OAAO,CAAC,gBAAgB,CAAC,kBAAkB,CAAC;YAC5C,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,gBAAgB,CAAC,kBAAkB,CAAC,EACxG;KACH;IAED,qBAAqB,CAAC,iBAAyB;QAC7C,IAAI,uBAAuB,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAE1D,IAAI,CAAC,uBAAuB,EAAE;YAC5B,uBAAuB,mCAClB,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,KAClC,IAAI,EAAE,iBAAiB,GACxB,CAAC;YAEF,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC;SACxC;QAED,OAAO,uBAAuB,CAAC;KAChC;IAED,qBAAqB,CAAC,UAAkB,EAAE,oBAA8C;QACtF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,EAAE,oBAAoB,CAAC,CAAC;KAC3D;IAED,gBAAgB,CAAC,UAAkB;;QACjC,OAAO,MAAA,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,mCAAI,MAAA,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,aAAa,CAAC;KACzG;;wHApGU,2BAA2B;4HAA3B,2BAA2B,cAF1B,MAAM;2FAEP,2BAA2B;kBAHvC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;ICdW;AAAZ,WAAY,mBAAmB;IAC7B,kDAA2B,CAAA;IAC3B,wDAAiC,CAAA;IACjC,wDAAiC,CAAA;IACjC,2CAAoB,CAAA;IACpB,uCAAgB,CAAA;IAChB,oEAA6C,CAAA;IAC7C,iDAA0B,CAAA;IAC1B,gDAAyB,CAAA;IACzB,gDAAyB,CAAA;IACzB,wDAAiC,CAAA;IACjC,yCAAkB,CAAA;IAClB,sDAA+B,CAAA;IAC/B,6CAAsB,CAAA;IAEtB,qDAA8B,CAAA;IAC9B,2EAAoD,CAAA;IACpD,sDAA+B,CAAA;IAC/B,uDAAgC,CAAA;IAChC,6CAAsB,CAAA;IACtB,6CAAsB,CAAA;IACtB,mDAA4B,CAAA;IAC5B,qDAA8B,CAAA;IAC9B,mDAA4B,CAAA;IAC5B,mDAA4B,CAAA;IAC5B,yDAAkC,CAAA;IAClC,uDAAgC,CAAA;IAChC,0EAAmD,CAAA;IACnD,qDAA8B,CAAA;IAC9B,sDAA+B,CAAA;IAC/B,iEAA0C,CAAA;IAC1C,8DAAuC,CAAA;IACvC,qEAA8C,CAAA;IAC9C,oDAA6B,CAAA;AAC/B,CAAC,EAlCW,mBAAmB,KAAnB,mBAAmB,QAkC9B;IAEW;AAAZ,WAAY,oBAAoB;IAC9B,kEAA0C,CAAA;AAC5C,CAAC,EAFW,oBAAoB,KAApB,oBAAoB,QAE/B;MAYY,eAAe,GAA6BC,cAAa,CAAC,iBAAiB;;MC5B3E,mCAAmC;IAC9C,YACU,6BAA4D,EAC5D,8BAA8D,EAC9D,2BAAwD,EACxD,aAA4B,EAC5B,aAA4B;QAJ5B,kCAA6B,GAA7B,6BAA6B,CAA+B;QAC5D,mCAA8B,GAA9B,8BAA8B,CAAgC;QAC9D,gCAA2B,GAA3B,2BAA2B,CAA6B;QACxD,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAe;KAClC;IAEJ,iBAAiB,CAAC,cAA+B;QAC/C,MAAM,oBAAoB,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,cAAc,EAAE,sBAAsB,CAAC,CAAC;QAEhG,MAAM,qCAAqC,GAAuC,EAAE,CAAC;;;QAIrF,IAAI,CAAC,iCAAiC,CAAC,cAAc,EAAE,oBAAoB,CAAC,CAAC;QAE7E,oBAAoB,CAAC,OAAO,CAAC,CAAC,mBAAmB;YAC/C,MAAM,kBAAkB,GAAG,cAAc,CAAC,+BAA+B,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;YAEpG,MAAM,2BAA2B,GAAG,IAAI,CAAC,oCAAoC,CAC3E,mBAAmB,EACnB,kBAAkB,CACnB,CAAC;YAEF,IAAI,CAAC,OAAO,CAAC,2BAA2B,CAAC,EAAE;gBACzC,qCAAqC,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,2BAA2B,CAAC;aAC/F;SACF,CAAC,CAAC;QAEH,cAAc,CAAC,kCAAkC,GAAG,qCAAqC,CAAC;QAE1F,OAAO,cAAc,CAAC;KACvB;IAED,yBAAyB,CAAC,cAA+B;QACvD,MAAM,kBAAkB,GAA4B,EAAE,CAAC;QACvD,MAAM,kCAAkC,GAAG,cAAc,CAAC,kCAAkC,IAAI,EAAE,CAAC;QAEnG,IAAI,CAAC,6BAA6B;aAC/B,aAAa,CAAC,cAAc,EAAE,IAAI,CAAC;aACnC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,mBAAmB,CAAC;aACvC,MAAM,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,IAAI,IAAI,SAAS,CAAC,IAAI,KAAK,mBAAmB,CAAC,IAAI,CAAC;aACpF,OAAO,CAAC,CAAC,SAAqC;YAC7C,MAAM,mBAAmB,GAAG,IAAI,CAAC,8BAA8B,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACpF,MAAM,2BAA2B,GAAG,kCAAkC,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAC7F,MAAM,gBAAgB,GAAG,EAAE,CAAC;YAC5B,IAAI,wBAAwB,CAAC;YAE7B,IAAI,mBAAmB,CAAC,IAAI,KAAK,mBAAmB,CAAC,MAAM,EAAE;gBAC3D,MAAM,gBAAgB,GAAG,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAE/F,wBAAwB,GAAG,IAAI,CAAC,kCAAkC,CAAC,gBAAgB,CAAC,CAAC;aACtF;iBAAM;gBACL,wBAAwB,GAAG,IAAI,CAAC,oCAAoC,CAAC,mBAAmB,CAAC,CAAC;aAC3F;YAED,wBAAwB,CAAC,OAAO,CAAC,CAAC,uBAAuB;gBACvD,IAAI,SAAS,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,EAAE;oBACvD,MAAM,UAAU,GAAG,2BAA2B,CAAC,uBAAuB,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;oBAEzG,gBAAgB,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,CAAC;oBACnF,SAAS,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,GAAG,UAAU,CAAC;iBAClE;aACF,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE;gBAC9B,kBAAkB,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC;aACvD;SACF,CAAC,CAAC;QAEL,OAAO,kBAAkB,CAAC;KAC3B;IAEO,oCAAoC,CAC1C,mBAA6C,EAC7C,kBAAkB,GAAG,EAAE;QAEvB,OAAO,SAAS,CACd,mBAAmB,CAAC,gBAAgB,EACpC,CAAC,MAAM,EAAE,aAAqB,EAAE,YAAoB;YAClD,IAAI,kBAAkB,CAAC,aAAa,CAAC,EAAE;gBACrC,mBAAmB,CAAC,gBAAgB,CAAC,YAAY,CAAC,GAAG,kBAAkB,CAAC,aAAa,CAAC,CAAC;gBACvF,MAAM,CAAC,YAAY,CAAC,GAAG,aAAa,CAAC;aACtC;SACF,EACD,EAAE,CACH,CAAC;KACH;IAEO,kCAAkC,CAAC,gBAAuC;QAChF,OAAO,CAAC,gBAAgB,CAAC,UAAU,IAAI,EAAE,EAAE,MAAM,CAAW,CAAC,cAAc,EAAE,SAAS;YACpF,IAAI,SAAS,CAAC,WAAW,EAAE;gBACzB,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACrC;iBAAM,IAAI,SAAS,CAAC,UAAU,EAAE;gBAC/B,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,SAAS;oBACtC,IAAI,SAAS,CAAC,WAAW,EAAE;wBACzB,cAAc,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,IAAI,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC;qBAC5D;iBACF,CAAC,CAAC;aACJ;YAED,OAAO,cAAc,CAAC;SACvB,EAAE,EAAE,CAAC,CAAC;KACR;IAEO,oCAAoC,CAAC,mBAA6C;QACxF,OAAO,CAAC,mBAAmB,CAAC,UAAU,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC;KAC3G;;;;IAKO,iCAAiC,CACvC,cAA+B,EAC/B,oBAAkD;QAElD,oBAAoB;aACjB,MAAM,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,IAAI,KAAK,mBAAmB,CAAC,WAAW,CAAC;aACzE,OAAO,CAAC,CAAC,WAA8C;YACtD,WAAW,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,gBAAgB;gBACxD,IAAI,gBAAgB,CAAC,gBAAgB,CAAC,OAAO,EAAE;oBAC7C,MAAM,aAAa,GAAW,gBAAgB,CAAC,gBAAgB,CAAC,OAAO,CAAC;oBACxE,MAAM,aAAa,GAAW,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;oBAE5D,MAAM,cAAc,GAClB,cAAc,CAAC,+BAA+B,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC;;oBAGlF,gBAAgB,CAAC,gBAAgB,CAAC,KAAK,GAAG,aAAa,CAAC;;;oBAIxD,GAAG,CAAC,cAAc,CAAC,+BAA+B,EAAE,CAAC,gBAAgB,CAAC,IAAI,EAAE,aAAa,CAAC,EAAE,cAAc,CAAC,CAAC;;oBAG5G,OAAO,gBAAgB,CAAC,gBAAgB,CAAC,OAAO,CAAC;;oBAGjD,OAAO,cAAc,CAAC,+BAA+B,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC;iBACxF;aACF,CAAC,CAAC;;YAGH,IAAI,OAAO,CAAC,cAAc,CAAC,+BAA+B,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE;gBAC7E,OAAO,cAAc,CAAC,+BAA+B,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aACzE;SACF,CAAC,CAAC;KACN;;gIArJU,mCAAmC;oIAAnC,mCAAmC,cAFlC,MAAM;2FAEP,mCAAmC;kBAH/C,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;ICrBW;AAAZ,WAAY,cAAc;IACxB,mCAAiB,CAAA;IACjB,qCAAmB,CAAA;IACnB,mCAAiB,CAAA;AACnB,CAAC,EAJW,cAAc,KAAd,cAAc,QAIzB;IAEW;AAAZ,WAAY,WAAW;IACrB,oCAAqB,CAAA;IACrB,8BAAe,CAAA;AACjB,CAAC,EAHW,WAAW,KAAX,WAAW,QAGtB;AA4BD,MAAM,mBAAmB,GAAG;IAC1B,IAAI,EAAE,cAAc,CAAC,MAAM;IAC3B,MAAM,EAAE,EAAE;IACV,OAAO,EAAE,CAAC,cAAc,EAAE,CAAC;CAC5B,CAAC;AAEF,MAAM,mBAAmB,GAAG;IAC1B,IAAI,EAAE,cAAc,CAAC,MAAM;IAC3B,MAAM,EAAE,EAAE;IACV,OAAO,EAAE,CAAC,cAAc,EAAE,CAAC;CAC5B,CAAC;MAEW,eAAe,GAA0B;IACpD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,qBAAqB;QAC5B,MAAM,EAAE;YACN,OAAO,EAAE,CAAC,mBAAmB,EAAE,gBAAgB,EAAE,CAAC;SACnD;QACD,UAAU,EAAE,WAAW,CAAC,KAAK;KAC9B;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,8BAA8B;QACrC,MAAM,EAAE;YACN,OAAO,EAAE,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACvD;QACD,UAAU,EAAE,WAAW,CAAC,KAAK;KAC9B;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,8BAA8B;QACrC,MAAM,EAAE;YACN,OAAO,EAAE,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACvD;QACD,UAAU,EAAE,WAAW,CAAC,KAAK;KAC9B;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,8BAA8B;QACrC,MAAM,EAAE;YACN,OAAO,EAAE,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACvD;QACD,UAAU,EAAE,WAAW,CAAC,KAAK;KAC9B;IACD;QACE,EAAE,EAAE,EAAE;QACN,KAAK,EAAE,8BAA8B;QACrC,MAAM,EAAE;YACN,OAAO,EAAE,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACvD;QACD,UAAU,EAAE,WAAW,CAAC,KAAK;KAC9B;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,WAAW;QAClB,MAAM,EAAE;YACN,OAAO,EAAE,CAAC,gBAAgB,EAAE,CAAC;SAC9B;QACD,UAAU,EAAE,WAAW,CAAC,QAAQ;KACjC;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,mBAAmB;QAC1B,MAAM,EAAE;YACN,OAAO,EAAE,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAClC;QACD,UAAU,EAAE,WAAW,CAAC,KAAK;KAC9B;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,mBAAmB;QAC1B,MAAM,EAAE;YACN,OAAO,EAAE,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAClC;QACD,UAAU,EAAE,WAAW,CAAC,KAAK;KAC9B;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,mBAAmB;QAC1B,MAAM,EAAE;YACN,OAAO,EAAE,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAClC;QACD,UAAU,EAAE,WAAW,CAAC,KAAK;KAC9B;IACD;QACE,EAAE,EAAE,EAAE;QACN,KAAK,EAAE,mBAAmB;QAC1B,MAAM,EAAE;YACN,OAAO,EAAE,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAClC;QACD,UAAU,EAAE,WAAW,CAAC,KAAK;KAC9B;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,iBAAiB;QACxB,MAAM,EAAE;YACN,OAAO,EAAE,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACrC;QACD,UAAU,EAAE,WAAW,CAAC,KAAK;KAC9B;IACD;QACE,EAAE,EAAE,EAAE;QACN,KAAK,EAAE,6BAA6B;QACpC,MAAM,EAAE;YACN,OAAO,EAAE,CAAC,mBAAmB,EAAE,gBAAgB,EAAE,EAAE,mBAAmB,CAAC;SACxE;QACD,UAAU,EAAE,WAAW,CAAC,KAAK;KAC9B;IACD;QACE,EAAE,EAAE,EAAE;QACN,KAAK,EAAE,sCAAsC;QAC7C,MAAM,EAAE;YACN,OAAO,EAAE,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,mBAAmB,CAAC;SAC5E;QACD,UAAU,EAAE,WAAW,CAAC,KAAK;KAC9B;IACD;QACE,EAAE,EAAE,EAAE;QACN,KAAK,EAAE,sCAAsC;QAC7C,MAAM,EAAE;YACN,OAAO,EAAE,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,mBAAmB,CAAC;SAC5E;QACD,UAAU,EAAE,WAAW,CAAC,KAAK;KAC9B;IACD;QACE,EAAE,EAAE,EAAE;QACN,KAAK,EAAE,sCAAsC;QAC7C,MAAM,EAAE;YACN,OAAO,EAAE,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,mBAAmB,CAAC;SAC5E;QACD,UAAU,EAAE,WAAW,CAAC,KAAK;KAC9B;IACD;QACE,EAAE,EAAE,EAAE;QACN,KAAK,EAAE,sCAAsC;QAC7C,MAAM,EAAE;YACN,OAAO,EAAE,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,mBAAmB,CAAC;SAC5E;QACD,UAAU,EAAE,WAAW,CAAC,KAAK;KAC9B;CACF,CAAC,GAAG,CAAC,CAAC,MAA2B;IAChC,MAAM,CAAC,QAAQ,GAAG,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAEnD,OAAO,MAAM,CAAC;AAChB,CAAC,EAAE;SAEa,iBAAiB,CAAC,MAAmB;IACnD,MAAM,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,KAAK,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;IAC5G,IAAI,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,KAAK,cAAc,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;IAEjG,QAAQ,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,KAAK,cAAc,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;IAC9F,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,MAAM,QAAQ,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;IAEjF,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,SAAS,gBAAgB,CAAC,GAAG,UAAoB;IAC/C,OAAO;QACL,IAAI,EAAE,kBAAkB,CAAC,iBAAiB;QAC1C,OAAO,EAAE,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,cAAc,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC;KACrG,CAAC;AACJ,CAAC;AAED,SAAS,cAAc,CAAC,KAAwC;IAC9D,uBACE,QAAQ,EAAE,EAAE,IACT,KAAK,EACR;AACJ;;AC5MA;MACa,YAAY;IACvB,OAAO,6BAA6B,CAAC,QAAmB;QACtD,OAAO;YACL,OAAO,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;SAC1E,CAAC;KACH;IAED,OAAO,gCAAgC,CAAC,IAAwB;QAC9D,OAAO;YACL,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SACtD,CAAC;KACH;IAED,OAAO,4BAA4B,CAAC,OAA4B;QAC9D,OAAO;YACL,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM;gBAC1B,uCACK,MAAM,KACT,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,sCAAW,MAAM,KAAE,QAAQ,EAAE,EAAE,IAAG,CAAC,IACtE;aACH,CAAC;SACH,CAAC;KACH;IAED,OAAO,SAAS,CAAC,IAAI,GAAG,kBAAkB,CAAC,iBAAiB,EAAE,WAAqB,EAAE;QACnF,OAAO;YACL,IAAI;YACJ,OAAO,EAAE;gBACP;oBACE,QAAQ;iBACT;aACF;SACF,CAAC;KACH;IAED,OAAO,uBAAuB,CAAC,MAAmB,EAAE,UAAmB;QACrE,OAAO,MAAM,CACX,MAAM,CAAC,OAAO,EACd,CAAC,KAAK,EAAE,MAAM;YACZ,IAAI,CAAC,UAAU,IAAI,UAAU,KAAK,MAAM,CAAC,IAAI,EAAE;gBAC7C,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM;oBAC5B,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;iBAChC,CAAC,CAAC;aACJ;YAED,OAAO,KAAK,CAAC;SACd,EACD,EAAE,CACH,CAAC;KACH;IAED,OAAO,QAAQ,CAAC,MAAmB,EAAE,IAAY;QAC/C,OAAO,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;KACpF;IAED,OAAO,cAAc,CAAC,MAAyB,EAAE,IAAY;QAC3D,OAAO,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACjF;IAED,OAAO,qBAAqB,CAAC,cAAsB;QACjD,MAAM,UAAU,GACd,eAAe,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE,KAAK,cAAc,CAAC;YAC1D,eAAe,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE,KAAK,kBAAkB,CAAC,uBAAuB,CAAC,CAAC;QAEzF,OAAO,UAAU,CAAC,MAAM,CAAC;KAC1B;IAED,OAAO,aAAa,CAAC,MAAmB;QACtC,MAAM,QAAQ,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAC3C,MAAM,cAAc,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC;QAElF,OAAO,cAAc,GAAG,cAAc,CAAC,KAAK,GAAG,EAAE,CAAC;KACnD;IAED,OAAO,qBAAqB,CAAC,MAAmB,EAAE,YAAoB;QACpE,OAAO;YACL,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,sCAC9B,MAAM,KACT,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,sCAC9B,MAAM,KACT,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,SAAS,KAAK,SAAS,KAAK,YAAY,CAAC,IAC3E,CAAC,IACH,CAAC;SACJ,CAAC;KACH;;;MCvEU,2BAA2B,GAAG,wEAAwE;MACtG,+BAA+B,GAAG,wEAAwE;MAK1G,uBAAuB;IAIlC,YACU,UAAsB,EACtB,aAA4B,EAC5B,uBAAgD,EAChD,mCAAwE,EACxE,qBAA4C;QAJ5C,eAAU,GAAV,UAAU,CAAY;QACtB,kBAAa,GAAb,aAAa,CAAe;QAC5B,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,wCAAmC,GAAnC,mCAAmC,CAAqC;QACxE,0BAAqB,GAArB,qBAAqB,CAAuB;QAEpD,IAAI,CAAC,aAAa,GAAG,uBAAuB,CAAC,eAAe,CAAC,2BAA2B,CAAC,CAAC;QAC1F,IAAI,CAAC,0BAA0B,GAAG,uBAAuB,CAAC,eAAe,CAAC,+BAA+B,CAAC,CAAC;KAC5G;IAED,GAAG,CAAC,kBAA0B,EAAE,OAAwB;QACtD,MAAM,cAAc,GAAG,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,qBAAqB,CAAC,aAAa,EAAE,EAAE,CAAC;QAExF,OAAO,IAAI,CAAC,UAAU;aACnB,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,kCAC/B,cAAc,GACd,OAAO,EACV;aACD,IAAI,CACHD,KAAG,CAAC,CAAC,cAA+B,KAClC,IAAI,CAAC,mCAAmC,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAC3E,CACF,CAAC;KACL;IAED,MAAM,CAAC,cAAsB;QAC3B,OAAO,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC,CAAC;KACjE;IAED,MAAM,CAAC,cAA+B;QACpC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,cAAc,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;KAC3G;IAED,MAAM,CACJ,kBAA0B,EAC1B,cAA+B,EAC/B,OAMC;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;KACtF;IAED,MAAM,CAAC,kBAA0B;QAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC;KAChE;IAED,MAAM,CAAC,qBAA6B,EAAE,qBAA6B;QACjE,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;YAChC,IAAI,EAAE,qBAAqB;YAC3B,OAAO,EAAE,qBAAqB;SAC/B,CAAC,CAAC;KACJ;IAED,UAAU,CAAC,cAA+B;QACxC,QACE,cAAc,CAAC,oBAAoB,CAAC,MAAM,KAAK,CAAC;YAChD,cAAc,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,mBAAmB,CAAC,IAAI,EACxE;KACH;IAED,mBAAmB,CAAC,kBAA0B;QAC5C,OAAO,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,EAAE,kBAAkB,EAAE,CAAC,CAAC;KACxE;IAEO,MAAM,CAAC,kBAA2B;QACxC,OAAO,kBAAkB;cACrB,2CAA2C,kBAAkB,CAAC,kBAAkB,CAAC,EAAE;cACnF,yCAAyC,CAAC;KAC/C;IAEO,oBAAoB,CAAC,iBAAyB,kBAAkB,CAAC,uBAAuB;QAC9F,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YACnC,IAAI,EAAE,IAAI;YACV,WAAW,EAAE,IAAI;YACjB,oBAAoB,EAAE,EAAE;YACxB,WAAW,EAAE,EAAE;YACf,YAAY,EAAE,EAAE;YAChB,YAAY,EAAE,KAAK;YACnB,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,qBAAqB,CAAC,cAAc,CAAC,CAAC;YAC1E,WAAW,EAAE;gBACX;oBACE,OAAO,EAAE;wBACP,KAAK,EAAE,CAAC;wBACR,IAAI,EAAE,QAAQ;wBACd,IAAI,EAAE,OAAO;qBACd;oBACD,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,IAAI,EAAE,kBAAkB,CAAC,KAAK,CAAC,OAAO;YACtC,KAAK,EAAE,SAAS,CAAC,oBAAoB,CAAC,MAAM;YAC5C,wBAAwB,EAAE,IAAI;YAC9B,4BAA4B,EAAE,IAAI;YAClC,MAAM,EAAE,IAAI;SACb,CAAC;KACH;;oHA1GU,uBAAuB;wHAAvB,uBAAuB,cAFtB,MAAM;2FAEP,uBAAuB;kBAHnC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;ACpBD,MAAM,2BAA2B,GAAG,wEAAwE,CAAC;MAKhG,+BAAgC,SAAQ,QAAQ;IAC3D,YAAoB,QAAkB;QACpC,KAAK,CAAC,QAAQ,EAAE,2BAA2B,EAAE;YAC3C,MAAM,EAAE;gBACN,qBAAqB,EAAE,IAAI;aAC5B;SACF,CAAC,CAAC;QALe,aAAQ,GAAR,QAAQ,CAAU;KAMrC;;4HAPU,+BAA+B;gIAA/B,+BAA+B,cAF9B,MAAM;2FAEP,+BAA+B;kBAH3C,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCKY,4BAA4B;IAKvC,YACU,uBAAgD,EAChD,6BAA8D;QAD9D,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,kCAA6B,GAA7B,6BAA6B,CAAiC;QANhE,wBAAmB,GAA6C,IAAI,GAAG,EAAE,CAAC;QAC1E,6BAAwB,GAAsC,IAAI,GAAG,EAAE,CAAC;QACxE,cAAS,GAAG,IAAI,GAAG,EAAmB,CAAC;KAK3C;IAEJ,sBAAsB,CAAC,QAAgB;QACrC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YAChD,MAAM,oBAAoB,GAAG,IAAI,CAAC,6BAA6B;iBAC5D,GAAG,CAAC;gBACH,OAAO,EAAE,EAAE,sBAAsB,EAAE,QAAQ,EAAE;gBAC7C,MAAM,EAAE,EAAE,iBAAiB,EAAE,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE;aAC7D,CAAC;iBACD,IAAI,CACH,KAAK,CAAC,MAAM,CAAC,EACbA,KAAG,CAAC,CAAC,oBAAwC,KAC3C,oBAAoB,CAAC,GAAG,CAAC,CAAC,cAAc,KAAK,cAAc,CAAC,IAAI,CAAC,CAClE,EACD,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;YAEJ,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,QAAQ,EAAE,oBAAoB,CAAC,CAAC;SACnE;QAED,OAAO,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;KACpD;IAED,iBAAiB,CAAC,kBAA0B,EAAE,OAAwB;QACpE,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,kBAAkB,CAAC,EAAE;YACrD,MAAM,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YAE3G,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,kBAAkB,EAAE,eAAe,CAAC,CAAC;SACnE;QAED,OAAO,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;KACzD;IAED,gBAAgB,CAAC,gBAAiC;QAChD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAErC,gBAAgB,CAAC,SAAS,CAAC;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;YAExC,IAAI,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;gBAC3B,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;SACF,CAAC,CAAC;KACJ;IAEO,UAAU;QAChB,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC;QACjC,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,CAAC;KACvC;;yHAxDU,4BAA4B;6HAA5B,4BAA4B,cAF3B,MAAM;2FAEP,4BAA4B;kBAHxC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCRY,UAAU;IACrB,OAAO,kBAAkB,CAAC,UAAe;QACvC,OAAO;YACL,QAAQ,EAAE,UAAU;YACpB,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,YAAY;oBACrB,QAAQ,EAAE,CAAC,GAAG,UAAU,CAAC;iBAC1B;aACF;SACF,CAAC;KACH;;uGAXU,UAAU;wGAAV,UAAU;wGAAV,UAAU;2FAAV,UAAU;kBADtB,QAAQ;;;MCMI,mBAAmB;IAC9B,YAAoB,2BAAwD,EAAU,YAA0B;QAA5F,gCAA2B,GAA3B,2BAA2B,CAA6B;QAAU,iBAAY,GAAZ,YAAY,CAAc;KAAI;IAEpH,OAAO,CAAC,UAAkB,EAAE,UAAyB;QACnD,MAAM,oBAAoB,GAAG,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAE9E,IAAI,oBAAoB,EAAE;YACxB,IAAI,UAAU,CAAC,WAAW,KAAK,KAAK,EAAE;gBACpC,OAAO,oBAAoB,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;aACzD;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,UAAU,WAAW,CAAC,CAAC;gBAC9D,OAAO,KAAK,CAAC;aACd;SACF;aAAM;YACL,OAAO,UAAU,CAAC,eAAe,UAAU,aAAa,CAAC,CAAC;SAC3D;KACF;;gHAhBU,mBAAmB;oHAAnB,mBAAmB,cAFlB,MAAM;2FAEP,mBAAmB;kBAH/B,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCHY,cAAc,GAAG;IAC5B,eAAe,EAAE;QACf,QAAQ,EAAE,kBAAkB;QAC5B,SAAS,EAAE,mBAAmB;KAC/B;EACD;IAEU;AAAZ,WAAY,4BAA4B;IACtC,yDAAyB,CAAA;IACzB,uDAAuB,CAAA;AACzB,CAAC,EAHW,4BAA4B,KAA5B,4BAA4B,QAGvC;IAEW;AAAZ,WAAY,uBAAuB;IACjC,2CAAgB,CAAA;IAChB,0CAAe,CAAA;IACf,2CAAgB,CAAA;IAChB,0CAAe,CAAA;IACf,2CAAgB,CAAA;IAChB,6CAAkB,CAAA;IAClB,oDAAyB,CAAA;AAC3B,CAAC,EARW,uBAAuB,KAAvB,uBAAuB,QAQlC;IAEW;AAAZ,WAAY,kBAAkB;IAC5B,6CAAuB,CAAA;IACvB,qDAA+B,CAAA;IAC/B,yDAAmC,CAAA;IACnC,2DAAqC,CAAA;AACvC,CAAC,EALW,kBAAkB,KAAlB,kBAAkB,QAK7B;MAuBY,YAAY,GAA0BC,cAAa,CAAC,cAAc;;MCtDlE,kBAAkB,GAAG;IAChC,SAAS,EAAE;QACT,OAAO,EAAE,mBAAmB;QAC5B,KAAK,EAAE,WAAW;QAClB,MAAM,EAAE,QAAQ;KACjB;IACD,UAAU,EAAE;QACV,OAAO,EAAE,sBAAsB;QAC/B,KAAK,EAAE,YAAY;QACnB,MAAM,EAAE,OAAO;KAChB;IACD,WAAW,EAAE;QACX,OAAO,EAAE,0BAA0B;QACnC,KAAK,EAAE,aAAa;QACpB,MAAM,EAAE,SAAS;KAClB;IACD,cAAc,EAAE;QACd,OAAO,EAAE,qCAAqC;QAC9C,KAAK,EAAE,gBAAgB;QACvB,MAAM,EAAE,MAAM;KACf;;;MCdU,gCAAgC;IAG3C,eAAe,CAAC,mBAAsD;;QACpE,mBAAmB,CAAC,gBAAgB,CAAC,WAAW,GAAG,MAAA,mBAAmB,CAAC,gBAAgB,CAAC,WAAW,mCAAI,IAAI,CAAC;KAC7G;;6HALU,gCAAgC;iIAAhC,gCAAgC;2FAAhC,gCAAgC;kBAD5C,UAAU;;;MCIE,sBAAsB;IACjC,YACE,8BAA8D,EAC9D,kCAAsE,EACtE,gCAAkE;QAElE,kCAAkC,CAAC,qBAAqB,CACtD,mBAAmB,CAAC,MAAM,EAC1B,gCAAgC,CACjC,CAAC;QAEF,8BAA8B,CAAC,QAAQ,CAAC;YACtC,IAAI,EAAE,mBAAmB,CAAC,MAAM;YAChC,eAAe,EAAE,IAAI;YACrB,oBAAoB,EAAE,IAAI;SAC3B,CAAC,CAAC;KACJ;;mHAhBU,sBAAsB;oHAAtB,sBAAsB;oHAAtB,sBAAsB,aAFtB,CAAC,gCAAgC,CAAC;2FAElC,sBAAsB;kBAHlC,QAAQ;mBAAC;oBACR,SAAS,EAAE,CAAC,gCAAgC,CAAC;iBAC9C;;;MCFY,4CAA4C;IAHzD;QAIU,oBAAe,GAAoC,IAAI,GAAG,EAAE,CAAC;QAC7D,mBAAc,GAAoC,IAAI,GAAG,EAAE,CAAC;KAiBrE;IAfC,sBAAsB,CAAC,UAAkB,EAAE,OAA2B;QACpE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;KAC/C;IAED,qBAAqB,CAAC,UAAkB,EAAE,OAA2B;QACnE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;KAC9C;IAED,iBAAiB,CAAC,UAAkB;QAClC,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;KAC7C;IAED,gBAAgB,CAAC,UAAkB;QACjC,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;KAC5C;;yIAlBU,4CAA4C;6IAA5C,4CAA4C,cAF3C,MAAM;2FAEP,4CAA4C;kBAHxD,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;ICLW;AAAZ,WAAY,eAAe;IACzB,sCAAmB,CAAA;IACnB,mCAAgB,CAAA;IAChB,oCAAiB,CAAA;AACnB,CAAC,EAJW,eAAe,KAAf,eAAe;;MCad,wBAAwB;IACnC,YACU,oBAA0C,EAC1C,MAAc,EACd,eAAgC,EAChC,iBAAoC;QAHpC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAChC,sBAAiB,GAAjB,iBAAiB,CAAmB;KAC1C;IAEJ,eAAe,CAAC,kBAA0B,EAAE,cAAgC,EAAE;QAC5E,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC;QAExD,IAAI,WAAW,GAAG,eAAe,CAAC,OAAO,CAAC;QAE1C,IAAI,UAAU,CAAC,QAAQ,CAAC,IAAI,eAAe,CAAC,OAAO,GAAG,CAAC,EAAE;YACvD,WAAW,GAAG,eAAe,CAAC,OAAO,CAAC;SACvC;aAAM,IAAI,UAAU,CAAC,QAAQ,CAAC,IAAI,eAAe,CAAC,OAAO,GAAG,CAAC,EAAE;YAC9D,WAAW,GAAG,eAAe,CAAC,OAAO,CAAC;SACvC;QAED,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CACpC,IAAI,IAAI,CAAC,oBAAoB,CAAC,QAAQ,IAAI,WAAW,IAAI,kBAAkB,EAAE,EAC7E,WAAW,CACZ,CAAC;KACH;IAED,gBAAgB,CAAC,MAAqB;QACpC,IAAI,GAAG,GAAG,EAAE,CAAC;QAEb,IAAI,UAAU,CAAoB,MAAO,CAAC,eAAe,CAAC,EAAE;YAC1D,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAoB,MAAO,CAAC,eAAe,EAAE,CAAC,CAAC;SAC7E;aAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,EAAE;YACpG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,CAAC;SAC1C;aAAM,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE;YAC1D,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAiB,MAAM,CAAC,CAAC;SACvD;aAAM,IAAI,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE;YACxD,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAClB;aAAM,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,EAAE;YACvF,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;SACrB;QAED,OAAO,GAAG,CAAC;KACZ;IAED,kBAAkB,CAAC,IAAoB;QACrC,OAAO,IAAI,CAAC,CAAC,SAAS,KAAK,GAAG,CAAC,SAAS,EAAE,sBAAsB,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;KACzF;;qHA7CU,wBAAwB;yHAAxB,wBAAwB,cAFvB,MAAM;2FAEP,wBAAwB;kBAHpC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCIY,6BAA6B;IACxC,YAAoB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;KAAI;IAEhE,aAAa,CAAC,uBAA2D;QACvE,IAAI,IAAI,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,EAAE;YACtD,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,CAAC,mBAA0B,CAAC,CAAC;SAC5E;aAAM,IAAI,IAAI,CAAC,8BAA8B,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,EAAE;YAC3F,IAAI,CAAC,sBAAsB,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC;SAC1E;KACF;IAEO,oBAAoB,CAAC,mBAAuD;QAClF,OAAO,CAAC,mBAAmB,CAAC,yBAAyB,CAAC;KACvD;IAEO,iBAAiB,CAAC,cAA+B;QACvD,MAAM,MAAM,GAAmB,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAE5F,IAAI,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,GAAG,CAAC,MAAM,EAAE,iBAAiB,CAAC,EAAE;;YAElE,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;SAC7C;aAAM;;YAEL,MAAM,iBAAiB,GAAgC,GAAG,CAAC,MAAM,EAAE,qBAAqB,EAAE,EAAE,CAAC,CAAC;YAC9F,MAAM,OAAO,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;gBAC7C,IAAI,UAA6B,CAAC;gBAElC,IAAI,KAAK,CAAC,IAAI,EAAE;oBACd,UAAU,GAAG;wBACX,IAAI,EAAE,KAAK,CAAC,IAAI,KAAK,cAAc,CAAC,OAAO,GAAG,kBAAkB,CAAC,iBAAiB,GAAG,KAAK,CAAC,IAAI;wBAC/F,MAAM,EAAE,KAAK,CAAC,MAAM,IAAI,IAAI;wBAC5B,MAAM,EAAE,KAAK,CAAC,MAAM,IAAI,IAAI;wBAC5B,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,IAAI;wBACxB,OAAO,EAAE,CAAC,KAAK,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBACnE,CAAC;iBACH;qBAAM;;oBAEL,UAAU,GAAG;wBACX,IAAI,EAAE,UAAU,CAAC,EAAE;wBACnB,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,KAAK,CAAC,qBAAqB,CAAC,EAAE,CAAC;qBACvD,CAAC;iBACH;gBAED,OAAO,UAAU,CAAC;aACnB,CAAC,CAAC;YAEH,MAAM,SAAS,GAAgB,EAAE,OAAO,EAAE,CAAC;YAE3C,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;SACnD;KACF;IAEO,sBAAsB,CAAC,mBAAwE;QACrG,IAAI,mBAAmB,CAAC,MAAM,EAAE;YAC9B,MAAM,MAAM,GAAmB,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;;;YAIjG,MAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAC;YAEpD,IAAI,QAAQ,EAAE;gBACZ,mBAAmB,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC,CAAC;aACpF;YAED,IAAI,MAAM,IAAI,MAAM,CAAC,qBAAqB,EAAE;gBAC1C,MAAM,SAAS,GAAG;oBAChB,OAAO,EAAE;wBACP;4BACE,IAAI,EAAE,kBAAkB,CAAC,iBAAiB;4BAC1C,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBAC5D;qBACF;iBACF,CAAC;gBAEF,mBAAmB,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;aACxD;SACF;KACF;IAEO,wBAAwB,CAAC,MAAM;QACrC,MAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAC;QAEpD,IAAI,QAAQ,EAAE;YACZ,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG;gBAC1B;oBACE,QAAQ;iBACT;aACF,CAAC;YAEF,OAAO,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;SACnC;QAED,OAAO,MAAM,CAAC;KACf;IAEO,cAAc,CAAC,MAA4B;;;QAGjD,OAAO;YACL,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,IAAI;YACzB,QAAQ,EAAE,UAAU,MAAM,CAAC,IAAI,IAAI,EAAE,EAAE;YACvC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAG,CAC3B,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK,EAAE,8CAA8C,CAAC,IAAI,KAAK,CAAC,qBAAqB,CACrG;SACF,CAAC;KACH;IAEO,8BAA8B,CACpC,mBAA+C;QAE/C,OAAQ,mBAAyD,CAAC,oBAAoB,KAAK,SAAS,CAAC;KACtG;;0HA/GU,6BAA6B;8HAA7B,6BAA6B,cAF5B,MAAM;2FAEP,6BAA6B;kBAHzC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCfY,QAAQ,GAAG;IACtB,aAAa,EAAE,UAAU;IAEzB,MAAM,EAAE;QACN,QAAQ,EAAE,oBAAoB;QAC9B,MAAM,EAAE,iBAAiB;QACzB,SAAS,EAAE,qBAAqB;QAChC,QAAQ,EAAE,oBAAoB;KAC/B;IAED,OAAO,EAAE;QACP,SAAS,EAAE,wBAAwB;QACnC,cAAc,EAAE,6BAA6B;QAC7C,eAAe,EAAE,8BAA8B;QAC/C,wBAAwB,EAAE,uCAAuC;KAClE;IAED,OAAO,EAAE;QACP,OAAO,EAAE,SAAS;KACnB;;;MCeU,cAAc;IAiBzB,YACU,gBAAkC,EAClC,oBAA0C,EAC1C,4BAA0D,EAC1D,mBAAwC,EACxC,qBAA4C,EAC5C,oBAA0C,EAC1C,iBAAoC,EACpC,4BAA0D,EAC1D,6BAA4D,EAC5D,6BAA4D,EAC5D,gBAAkC;QAVlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,iCAA4B,GAA5B,4BAA4B,CAA8B;QAC1D,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,iCAA4B,GAA5B,4BAA4B,CAA8B;QAC1D,kCAA6B,GAA7B,6BAA6B,CAA+B;QAC5D,kCAA6B,GAA7B,6BAA6B,CAA+B;QAC5D,qBAAgB,GAAhB,gBAAgB,CAAkB;QA3BpC,eAAU,GAAG,CAAC,CAAC;QAEf,oCAA+B,GAAG,IAAI,OAAO,EAAQ,CAAC;QACtD,0BAAqB,GAAG,IAAI,OAAO,EAAoB,CAAC;QACxD,+BAA0B,GAAG,IAAI,OAAO,EAAQ,CAAC;QACjD,gCAA2B,GAAG,IAAI,OAAO,EAAQ,CAAC;QAClD,uBAAkB,GAAkC,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC;QACzE,oCAA+B,GAAG,IAAI,OAAO,EAAQ,CAAC;QAE9D,8BAAyB,GAAqB,IAAI,CAAC,+BAA+B,CAAC,YAAY,EAAE,CAAC;QAClG,oBAAe,GAAiC,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,CAAC;QAC1F,yBAAoB,GAAqB,IAAI,CAAC,0BAA0B,CAAC,YAAY,EAAE,CAAC;QACxF,0BAAqB,GAAqB,IAAI,CAAC,2BAA2B,CAAC,YAAY,EAAE,CAAC;QAC1F,iBAAY,GAA+B,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;QAClF,8BAAyB,GAAqB,IAAI,CAAC,+BAA+B,CAAC,YAAY,EAAE,CAAC;KAc9F;IAEJ,kBAAkB;QAChB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;KACrB;IAED,mBAAmB;QACjB,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;KAC1B;IAEO,aAAa,CAAC,MAAmB,EAAE,UAAU,GAAG,kBAAkB,CAAC,iBAAiB;QAC1F,OAAO,YAAY,CAAC,uBAAuB,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;KACjE;IAEO,YAAY,CAAC,IAAY,EAAE,IAAI,GAAG,IAAI;QAC5C,MAAM,MAAM,GAAG,GAAG,CAAC,eAAe,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAEhD,OAAO,MAAM,GAAG,UAAU,IAAI,GAAG,OAAO,GAAG,EAAE,EAAE,GAAG,MAAM,GAAG,EAAE,CAAC;KAC/D;IAED,cAAc,CAAC,QAAgB;QAC7B,MAAM,kBAAkB,GAAuB,EAAE,CAAC;QAClD,MAAM,kBAAkB,GAAuB,EAAE,CAAC;QAClD,MAAM,iBAAiB,GAAuB,EAAE,CAAC;QAEjD,MAAM,kBAAkB,GAAqB;YAC3C,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,oDAAoD,CAAC;YACzF,MAAM,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC3C,SAAS,EAAE,iBAAiB;YAC5B,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,EAAE;SACQ,CAAC;QAEtB,MAAM,2BAA2B,GAAqB;YACpD,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,+CAA+C,CAAC;YACpF,MAAM,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC;YAChD,SAAS,EAAE,sBAAsB;YACjC,IAAI,EAAE,KAAK;YACX,EAAE,EAAE,CAAC;YACL,OAAO,EAAE,EAAE;SACZ,CAAC;QAEF,MAAM,sBAAsB,GAAqB;YAC/C,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,qDAAqD,CAAC;YAC1F,MAAM,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC5C,IAAI,EAAE,KAAK;YACX,SAAS,EAAE,qBAAqB;YAChC,OAAO,EAAE,EAAE;SACQ,CAAC;QAEtB,IAAI,gBAA0C,CAAC;QAC/C,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC;QAEnD,OAAO,IAAI,CAAC,4BAA4B;aACrC,iBAAiB,CAAC,GAAG,QAAQ,IAAI,cAAc,CAAC,mBAAmB,EAAE,CAAC;aACtE,IAAI,CACH,SAAS,CAAC,CAAC,eAAe;YACxB,IAAI,CAAC,6BAA6B;iBAC/B,aAAa,CAAC,eAAe,CAAC;iBAC9B,OAAO,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,6BAA6B,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC;YAEzF,IAAI,eAAe,IAAI,eAAe,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE;gBAC9D,MAAM,MAAM,GAAG,eAAe,CAAC,oBAAoB,CAAC,CAAC,CAAsC,CAAC;gBAC5F,MAAM,MAAM,GAAgB,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBAEjF,gBAAgB,GAAI,MAAM,CAAC,gBAA6C,IAAI;oBAC1E,iBAAiB,EAAE,IAAI;oBACvB,sBAAsB,EAAE,IAAI;oBAC5B,oBAAoB,EAAE,IAAI;oBAC1B,mBAAmB,EAAE,IAAI;oBACzB,6BAA6B,EAAE,IAAI;iBACpC,CAAC;gBAEF,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI;oBACvC,MAAM,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE;wBAC3D,IAAI;qBACL,CAAsC,CAAC;oBAExC,IAAI,kBAAkB,EAAE;wBACtB,IAAI,QAA0B,CAAC;wBAE/B,QAAQ,kBAAkB,CAAC,IAAI;4BAC7B,KAAK,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;4BAC/B,KAAK,QAAQ,CAAC,MAAM,CAAC,QAAQ;gCAC3B,MAAM,OAAO,GAAG,EAAE,CAAC;gCAEnB,MAAM,WAAW,GACf,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,kBAAkB,CAAC,MAAM,CAAC;oCAChE,YAAY,CAAC,6BAA6B,CACxC,kBAAkB,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,IAAgC,KAAK,IAAI,CAAC,IAAI,CAAC,CAC7F,CAAC;gCAEJ,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAE,CAAC,SAAS;oCACjD,MAAM,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE;wCACtE,IAAI,EAAE,SAAS;qCAChB,CAAC,CAAC;oCAEH,IAAI,iBAAiB,EAAE;wCACrB,MAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;wCAE1D,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;;4CAErB,IAAI,kBAAkB,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE;gDACxD,OAAO,CAAC,SAAS,IAAI,GAAG,GAAG,OAAO,CAAC,aAAa,CAAC;6CAClD;iDAAM;gDACL,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;6CAClC;4CAED,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;yCACvB;qCACF;iCACF,CAAC,CAAC;gCAEH,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;;oCAEtB,QAAQ,GAAG;wCACT,IAAI,EAAE,GAAG,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,QAAQ,CAAC;8CACpD,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,MAAM,CAAC;8CACjF,KAAK;wCACT,aAAa,EAAE,GAAG,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,QAAQ,CAAC;wCACjE,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;wCACtF,IAAI,EAAE,kBAAkB,CAAC,gBAAgB,CAAC,aAAa;wCACvD,OAAO,EAAE,OAAO;wCAChB,EAAE,EAAE,IAAI,CAAC,mBAAmB,EAAE;qCAC/B,CAAC;iCACH;gCAED,MAAM;4BAER,KAAK,QAAQ,CAAC,MAAM,CAAC,QAAQ;gCAC3B,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;gCACtD,MAAM;yBACT;wBAED,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;4BACtB,IAAI,kBAAkB,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE;gCACxD,QAAQ,GAAG,QAAQ,CAAC;6BACrB;iCAAM;gCACL,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gCAClC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;6BACnC;yBACF;qBACF;iBACF,CAAC,CAAC;gBAEH,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI;oBACjE,MAAM,kBAAkB,GAAG,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,UAAU,KAAK,UAAU,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;oBAEtG,IAAI,kBAAkB,EAAE;wBACtB,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC,CAAC;qBACpE;iBACF,CAAC,CAAC;aACJ;YAED,IAAI,IAAI,CAAC,oBAAoB,CAAC,cAAc,EAAE,EAAE;gBAC9C,sBAAsB,CAAC,EAAE,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAEvD,IAAI,CAAC,QAAQ,EAAE;oBACb,QAAQ,GAAG;wBACT,OAAO,EAAE,EAAE;qBACZ,CAAC;iBACH;gBAED,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;aAC/C;YAED,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;gBAC7B,kBAAkB,CAAC,EAAE,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAEnD,IAAI,CAAC,QAAQ,EAAE;oBACb,QAAQ,GAAG;wBACT,OAAO,EAAE,EAAE;qBACZ,CAAC;iBACH;gBAED,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;aAC3C;YAED,IAAI,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,aAAa,CAAC,EAAE;gBACzD,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;aACpD;YAED,MAAM,MAAM,GAAG;gBACb,kBAAkB;gBAClB,kBAAkB;gBAClB,iBAAiB;gBACjB,QAAQ,EAAE,QAAQ,IAAI,EAAE;gBACxB,iBAAiB,EAAE,GAAG,CAAC,gBAAgB,EAAE,mBAAmB,CAAC;sBACzD,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,gBAAgB,CAAC,iBAAiB,CAAC;sBACzE,KAAK;gBACT,sBAAsB,EAAE,GAAG,CAAC,gBAAgB,EAAE,wBAAwB,CAAC;sBACnE,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,gBAAgB,CAAC,sBAAsB,CAAC;sBAC9E,IAAI;gBACR,6BAA6B,EAAE,gBAAgB,CAAC,6BAA6B,IAAI,EAAE;gBACnF,oBAAoB,EAAE,GAAG,CAAC,gBAAgB,EAAE,sBAAsB,CAAC;sBAC/D,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,gBAAgB,CAAC,oBAAoB,CAAC;sBAC5E,IAAI;gBACR,mBAAmB,EAAE,GAAG,CAAC,gBAAgB,EAAE,qBAAqB,CAAC;sBAC7D,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,gBAAgB,CAAC,mBAAmB,CAAC;sBAC3E,EAAE;;;;;;gBAON,iBAAiB,EAAE,mBAAmB;gBACtC,2BAA2B,EAAE,oBAAoB;aAClD,CAAC;;;YAIF,IACE,CAAC,MAAM,CAAC,oBAAoB;iBAC3B,CAAC,MAAM,CAAC,sBAAsB,IAAI,MAAM,CAAC,mBAAmB,CAAC,MAAM,KAAK,CAAC;qBACvE,CAAC,MAAM,CAAC,sBAAsB,IAAI,MAAM,CAAC,6BAA6B,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,EACxF;gBACA,MAAM,CAAC,oBAAoB,GAAG,IAAI,CAAC;aACpC;YAED,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAErC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC;SACnB,CAAC,CACH,CAAC;KACL;IAEO,mBAAmB;QACzB,IAAI,CAAC,0BAA0B,CAAC,IAAI,EAAE,CAAC;KACxC;IAEO,wBAAwB;QAC9B,IAAI,CAAC,+BAA+B,CAAC,IAAI,EAAE,CAAC;KAC7C;IAEO,oBAAoB;QAC1B,IAAI,CAAC,2BAA2B,CAAC,IAAI,EAAE,CAAC;KACzC;IAEO,cAAc,CAAC,UAAU;QAC/B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC7C;IAEO,eAAe;QACrB,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,gCAAgC,CAAC,CAAC;KAChF;IAEO,wBAAwB;QAC9B,IAAI,CAAC,+BAA+B,CAAC,IAAI,EAAE,CAAC;KAC7C;IAEO,iBAAiB,CAAC,cAAc;QACtC,MAAM,QAAQ,GAAqB,EAAsB,CAAC;QAE1D,MAAM,UAAU,GAA2B,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CACnF,cAAc,CAAC,gBAAgB,CACN,CAAC;QAE5B,QAAQ,CAAC,IAAI,GAAG,UAAU,CAAC,UAAU,CAAC;QACtC,QAAQ,CAAC,EAAE,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QACzC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC;QAE7B,QAAQ,UAAU,CAAC,UAAU;YAC3B,KAAK,QAAQ,CAAC,OAAO,CAAC,SAAS;gBAC7B,QAAQ,CAAC,IAAI,GAAG,UAAU,CAAC,YAAY,CAAC;gBACxC,QAAQ,CAAC,MAAM;oBACb,kBAAkB,CAAC,UAAU,CAAC,cAAc,IAAI,4BAA4B,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC;gBAEjG,IAAI,cAAc,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE;oBAClD,QAAQ,CAAC,MAAM,GAAG;wBAChB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;qBAC9C,CAAC;iBACH;qBAAM;oBACL,QAAQ,CAAC,IAAI,GAAG,UAAU,CAAC,GAAG,CAAC;iBAChC;gBAED,MAAM;YAER,KAAK,QAAQ,CAAC,OAAO,CAAC,cAAc;gBAClC,MAAM,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC;gBAEzC,OAAO,CAAC,UAAU,EAAE,CAAC,UAAkB,EAAE,aAAqB;oBAC5D,MAAM,UAAU,GAAG,IAAI,CAAC,4BAA4B,CAAC,WAAW,CAAC,UAAU,EAAE;wBAC3E,QAAQ,EAAE;4BACR,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM;4BAC/B,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,gBAAgB;yBAC5C;qBACF,CAAC,CAAC;oBAEH,UAAU,CAAC,aAAa,CAAC,GAAG,UAAU,CAAC;oBAEvC,OAAO,UAAU,CAAC;iBACnB,CAAC,CAAC;gBAEH,MAAM,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC,kBAAkB,EAAE,EAAE,UAAU,CAAC,CAAC;gBAE5F,QAAQ,CAAC,IAAI,GAAG,UAAU,CAAC,YAAY,CAAC;gBACxC,QAAQ,CAAC,OAAO,GAAG,GAAG,CAAC;gBACvB,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;gBAE3D,QAAQ,CAAC,cAAc,GAAG;oBACxB,kBAAkB,EAAE,UAAU,CAAC,kBAAkB;oBACjD,YAAY,kBACV,IAAI,EAAE,kBAAkB,CAAC,SAAS,EAClC,cAAc,EAAE,4BAA4B,CAAC,UAAU,IACpD,GAAG,CAAC,UAAU,EAAE,cAAc,EAAE,EAAE,CAAC,CACvC;oBACD,UAAU;iBACX,CAAC;gBAEF,MAAM;YACR,KAAK,QAAQ,CAAC,OAAO,CAAC,eAAe;;;gBAGnC,QAAQ,CAAC,IAAI,GAAG,UAAU,CAAC,YAAY,CAAC;gBAExC,MAAM,eAAe,GAAG;oBACtB,KAAK,EAAE,UAAU,CAAC,KAAK;oBACvB,UAAU,EAAE,QAAQ,CAAC,EAAE;iBACxB,CAAC;gBAEF,QAAQ,CAAC,eAAe,GAAG,eAAe,CAAC;gBAC3C,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;gBACnE,MAAM;YACR,KAAK,QAAQ,CAAC,OAAO,CAAC,wBAAwB;gBAC5C,QAAQ,CAAC,IAAI,GAAG,UAAU,CAAC,YAAY,CAAC;gBACxC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC3D,MAAM;SACT;QAED,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;QAC7G,QAAQ,CAAC,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC;QAC3C,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,EAAE,cAAc,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAEhH,OAAO,QAAQ,CAAC;KACjB;;2GA9WU,cAAc;+GAAd,cAAc,cAFb,MAAM;2FAEP,cAAc;kBAH1B,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCdY,kBAAkB;IAG7B,YACU,oBAA0C,EAC1C,cAA8B,EAC9B,aAA4B,EAC5B,MAAc,EACd,gBAAkC,EAClC,6BAA4D,EAC5D,qBAA4C;QAN5C,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QACd,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,kCAA6B,GAA7B,6BAA6B,CAA+B;QAC5D,0BAAqB,GAArB,qBAAqB,CAAuB;QAT9C,4BAAuB,GAAG,sBAAsB,CAAC;KAUrD;IAEJ,WAAW,CACT,KAA6B,EAC7B,KAA0B;QAE1B,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAChD,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;QAC3C,MAAM,cAAc,GAAG,aAAa,KAAK,cAAc,CAAC,wBAAwB,CAAC;QACjF,MAAM,iBAAiB,GAAG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;;QAGtF,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAClF,SAAS,CAAC;YACR,OAAO,IAAI,CAAC,oBAAoB;iBAC7B,oBAAoB,EAAE;iBACtB,IAAI,CAAC,SAAS,CAAC,CAAC,iBAAiB,KAAK,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;SAC3F,CAAC,EACF,GAAG,CAAC,MAAM,IAAI,CAAC,6BAA6B,CAAC,OAAO,EAAE,CAAC,CACxD,CAAC;KACH;IAEO,YAAY,CAAC,iBAAsC,EAAE,QAAgB;QAC3E,IAAI,SAAS,CAAC,iBAAiB,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE;YACzD,OAAO,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,IAAI,CACtDD,KAAG,CAAC,CAAC,kBAAkB;gBACrB,MAAM,SAAS,GAAG,GAAG,CACnB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,kBAAkB,EAAE,oBAAoB,CAAC,EACxE,wBAAwB,CACzB,CAAC;gBAEF,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,EAAE;oBAClC,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,cAAc;iBACtC,CAAC,CAAC;gBAEH,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;aAChD,CAAC,CACH,CAAC;SACH;aAAM;YACL,OAAO,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC;SAC/D;KACF;IAEO,WAAW,CAAC,WAAW,EAAE,QAAQ;QACvC,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CACzB,WAAW;cACP,IAAI,QAAQ,SAAS,WAAW,CAAC,OAAO,EAAE;cAC1C,IAAI,QAAQ,SAAS,cAAc,CAAC,gBAAgB,+BAA+B,CACxF,CAAC;KACH;;+GA5DU,kBAAkB;mHAAlB,kBAAkB,cAFjB,MAAM;2FAEP,kBAAkB;kBAH9B,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCVY,uBAAuB;IAClC,YAAoB,8BAA8D;QAA9D,mCAA8B,GAA9B,8BAA8B,CAAgC;KAAI;IAEtF,OAAO;QACL,OAAO,IAAI,CAAC,8BAA8B,CAAC,uBAAuB,EAAE,CAAC;KACtE;;oHALU,uBAAuB;wHAAvB,uBAAuB,cAFtB,MAAM;2FAEP,uBAAuB;kBAHnC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCAY,wBAAwB;IAkBnC,YAAoB,2BAAwD;;QAAxD,gCAA2B,GAA3B,2BAA2B,CAA6B;QAjBpE,YAAO,GAAG;YAChB;gBACE,IAAI,EAAE,QAAQ,CAAC,OAAO;gBACtB,UAAU,EAAE,IAAI,CAAC,2BAA2B,CAAC,aAAa,EAAE;aAC7D;YACD;gBACE,IAAI,EAAE,QAAQ,CAAC,MAAM;gBACrB,UAAU,EAAE,IAAI,CAAC,2BAA2B,CAAC,YAAY,EAAE;aAC5D;YACD;gBACE,IAAI,EAAE,QAAQ,CAAC,MAAM;gBACrB,UAAU,EAAE,IAAI,CAAC,2BAA2B,CAAC,YAAY,EAAE;aAC5D;SACF,CAAC;QAEF,kBAAa,GAAa,MAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,UAAU,CAAC,0CAAE,IAAI,CAAC;KAEG;;qHAlBrE,wBAAwB;yHAAxB,wBAAwB,cAFvB,MAAM;2FAEP,wBAAwB;kBAHpC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;ACND;;;;;;"}