{"version":3,"file":"helix-platform-association-designer.js","sources":["../../../../libs/platform/association/designer/association-designer.service.ts","../../../../libs/platform/association/designer/association-designer/+state/association-designer.actions.ts","../../../../libs/platform/association/designer/association-designer.constant.ts","../../../../libs/platform/association/designer/association-designer/+state/association-designer.selectors.ts","../../../../libs/platform/association/designer/association-designer/association-designer.component.ts","../../../../libs/platform/association/designer/association-designer/association-designer.component.html","../../../../libs/platform/association/designer/association-designer-page/association-designer-page.component.ts","../../../../libs/platform/association/designer/association-designer-page/association-designer-page.component.html","../../../../libs/platform/association/designer/association-designer/+state/association-designer.effects.ts","../../../../libs/platform/association/designer/association-designer/+state/association-designer-model.reducer.ts","../../../../libs/platform/association/designer/association-designer/association-designer.module.ts","../../../../libs/platform/association/designer/association-designer-page/association-designer-page.module.ts","../../../../libs/platform/association/designer/helix-platform-association-designer.ts"],"sourcesContent":["import { IAssociationDefinitionModel } from './association-designer.types';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  IRecordDefinition,\n  RX_RECORD_DEFINITION,\n  RxRecordDefinitionCacheService,\n  RxRecordDefinitionService\n} from '@helix/platform/record/api';\nimport { Injectable } from '@angular/core';\nimport { RxDefinitionNameService } from '@helix/platform/shared/api';\nimport { IAssociationDefinition, RX_ASSOCIATION_DEFINITION, RxModalityType } from '@helix/platform/association/api';\nimport { find } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AssociationDesignerService {\n  constructor(\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxRecordDefinitionService: RxRecordDefinitionService,\n    private rxRecordDefinitionCacheService: RxRecordDefinitionCacheService\n  ) {}\n\n  getDefinitionModelFromDefinition(definition: IAssociationDefinition): IAssociationDefinitionModel {\n    return {\n      cardinality: [find(Object.values(RX_ASSOCIATION_DEFINITION.cardinality), { value: definition.cardinality })],\n      customizationOptions: {\n        scope: definition.scope,\n        allowOverlay: definition.allowOverlay\n      },\n      description: definition.description,\n      guid: definition.guid,\n      isEnabled: definition.isEnabled,\n      lastChangedBy: definition.lastChangedBy,\n      lastUpdateTime: definition.lastUpdateTime,\n      name: definition.name,\n      nodeAId: definition.nodeAId,\n      nodeAKeys: definition.nodeAKeys,\n      nodeAModality: definition.nodeAModality,\n      nodeAName: definition.nodeAName,\n      nodeBId: definition.nodeBId,\n      nodeBKeys: definition.nodeBKeys,\n      nodeBName: definition.nodeBName,\n      overlayDescriptor: definition.overlayDescriptor,\n      overlayGroupId: definition.overlayGroupId,\n      shouldCascadeDelete: definition.shouldCascadeDelete,\n      tags: definition.tags\n    };\n  }\n\n  getDefinitionFromDefinitionModel(model: IAssociationDefinitionModel): IAssociationDefinition {\n    return {\n      allowOverlay: model.customizationOptions.allowOverlay,\n      cardinality: model.cardinality[0].value,\n      description: model.description,\n      guid: model.guid,\n      isEnabled: model.isEnabled,\n      name: model.name,\n      lastUpdateTime: model.lastUpdateTime,\n      nodeAId: model.nodeAId,\n      nodeAKeys: model.nodeAKeys,\n      nodeAModality:\n        model.cardinality[0].value === RX_ASSOCIATION_DEFINITION.cardinality.manyToMany.value\n          ? RxModalityType.Optional\n          : model.nodeAModality,\n      nodeAName: model.nodeAName,\n      nodeBId: model.nodeBId,\n      nodeBKeys:\n        model.cardinality[0].value === RX_ASSOCIATION_DEFINITION.cardinality.manyToMany.value\n          ? [RX_RECORD_DEFINITION.coreFieldIds.id]\n          : model.nodeBKeys,\n      nodeBName: model.nodeBName,\n      scope: model.customizationOptions.scope,\n      shouldCascadeDelete:\n        model.cardinality[0].value === RX_ASSOCIATION_DEFINITION.cardinality.manyToMany.value\n          ? false\n          : model.shouldCascadeDelete,\n      overlayDescriptor: model.overlayDescriptor,\n      overlayGroupId: model.overlayGroupId,\n      tags: model.tags\n    };\n  }\n\n  getRecordDefinition(name: string, forceReload = false): Observable<IRecordDefinition> {\n    return forceReload\n      ? this.rxRecordDefinitionService.get(name, {}, true)\n      : this.rxRecordDefinitionCacheService.getRecordDefinition(name);\n  }\n\n  getForeignKeyFieldName(definitionModel: IAssociationDefinitionModel): string {\n    const fieldNameBase =\n      definitionModel.nodeAName || this.rxDefinitionNameService.getDisplayName(definitionModel.nodeAId);\n\n    return fieldNameBase.toUpperCase() + '_ID';\n  }\n\n  getForeignKeyFieldId(definitionModel: IAssociationDefinitionModel, forceReload = false): Observable<number> {\n    return this.getRecordDefinition(definitionModel.nodeBId, forceReload).pipe(\n      map((recordDefinition: IRecordDefinition) => {\n        const foreignKeyFieldName = this.getForeignKeyFieldName(definitionModel);\n\n        return recordDefinition.fieldDefinitions.find((field) => field.name === foreignKeyFieldName)?.id as number;\n      })\n    );\n  }\n}\n","import { IAssociationDefinition } from '@helix/platform/association/api';\nimport { IRecordDefinition } from '@helix/platform/record/api';\nimport { createAction, props } from '@ngrx/store';\nimport { IAssociationDefinitionModel } from '../../association-designer.types';\nimport { IInitAssociationDesignerActionPayload } from './association-designer.types';\n\nexport const init = createAction(\n  '[Association Designer] Init',\n  props<{ payload: IInitAssociationDesignerActionPayload }>()\n);\n\nexport const loadDefinition = createAction('[Association Designer] Load Definition');\n\nexport const loadDefinitionSuccess = createAction(\n  '[Association Designer] Load Definition Success',\n  props<{ definition: IAssociationDefinition }>()\n);\n\nexport const initDefinitionData = createAction(\n  '[Association Designer] Init Definition Model',\n  props<{ definition: IAssociationDefinition; definitionModel: IAssociationDefinitionModel }>()\n);\n\nexport const updateDefinitionModelFromDesigner = createAction(\n  '[Association Designer] Update Definition Model From Designer',\n  props<{ definitionModelFromDesigner: IAssociationDefinitionModel }>()\n);\n\nexport const markDesignerPristine = createAction('[Association Designer] Mark Designer Pristine');\n\nexport const markDesignerDirty = createAction('[Association Designer] Mark Designer Dirty');\n\nexport const toggleDesignMode = createAction('[Association Designer] Toggle Design Mode');\n\nexport const revertCustomization = createAction('[Association Designer] Revert Customization');\n\nexport const saveDefinition = createAction('[Association Designer] Save Definition');\n\nexport const getRecordDefinition = createAction(\n  '[Association Designer] Get Record Definition',\n  props<{ checkForMissingFieldAction?: boolean; createForeignKeyFieldAction?: boolean }>()\n);\n\nexport const getRecordDefinitionError = createAction('[Association Designer] Get Record Definition Error');\n\nexport const getForeignKeyFieldIdError = createAction('[Association Designer] Get Foreign Key Field ID Error');\n\nexport const checkForMissingForeignKeyField = createAction(\n  '[Association Designer] Check For Missing Foreign Key Field',\n  props<{ definition: IRecordDefinition }>()\n);\n\nexport const foreignKeyFieldMissingCheckSuccess = createAction(\n  '[Association Designer] Foreign Key Field Missing Check Success',\n  props<{ payload: { isForeignKeyFieldMissing: boolean; updatedForeignKeyFieldId: number } }>()\n);\n\nexport const createForeignKeyField = createAction(\n  '[Association Designer] Create Foreign Key Field',\n  props<{ definition: IRecordDefinition }>()\n);\n\nexport const createForeignKeyFieldSuccess = createAction('[Association Designer] Create Foreign Key Field Success');\n\nexport const createForeignKeyFieldError = createAction('[Association Designer] Create Foreign Key Field Error');\n\nexport const getCreatedForeignKeyFieldId = createAction('[Association Designer] Get Created Foreign Key Field ID');\n\nexport const getCreatedForeignKeyFieldIdSuccess = createAction(\n  '[Association Designer] Get Created Foreign Key Field ID Success',\n  props<{ fieldId: number }>()\n);\n\nexport const getCreatedForeignKeyFieldIdError = createAction(\n  '[Association Designer] Get Created Foreign Key Field ID Error'\n);\n\nexport const createOrUpdateDefinition = createAction('[Association Designer] Create Or Update Definition');\n\nexport const getCreatedForeignKeyField = createAction('[Association Designer] Get Created Foreign Key Field');\n\nexport const getCreatedForeignKeyFieldError = createAction(\n  '[Association Designer] Get Created Foreign Key Field Error'\n);\n\nexport const removeCreatedForeignKeyField = createAction(\n  '[Association Designer] Remove Created Foreign Key Field',\n  props<{ foreignKeyFieldId: number; definition: IRecordDefinition }>()\n);\n\nexport const removeCreatedForeignKeyFieldSuccess = createAction(\n  '[Association Designer] Remove Created Foreign Key Field Success'\n);\n\nexport const removeCreatedForeignKeyFieldError = createAction(\n  '[Association Designer] Remove Created Foreign Key Field Error'\n);\n\nexport const saveDefinitionSuccess = createAction(\n  '[Association Designer] Save Definition Success',\n  props<{ savedDefinitionName: string }>()\n);\n\nexport const createDefinitionError = createAction('[Association Designer] Create Definition Error');\n\nexport const updateDefinitionError = createAction('[Association Designer] Update Definition Error');\n\nexport const destroy = createAction('[Association Designer] Destroy');\n","export const RX_ASSOCIATION_DESIGNER = {\n  featureSelector: 'associationDesigner'\n};\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { IAssociationDesignerModel, IAssociationDesignerState } from './association-designer.types';\nimport { RX_ASSOCIATION_DESIGNER } from '../../association-designer.constant';\n\nexport const associationDesignerStateSelector = createFeatureSelector<IAssociationDesignerState>(\n  RX_ASSOCIATION_DESIGNER.featureSelector\n);\n\nexport const associationDesignerModelSelector = createSelector(\n  associationDesignerStateSelector,\n  (associationDesignerState: IAssociationDesignerState) => associationDesignerState.model\n);\n\nexport const isDesignModeSelector = createSelector(\n  associationDesignerModelSelector,\n  (associationDesignerModel: IAssociationDesignerModel) => associationDesignerModel.isDesignMode\n);\n\nexport const bundleIdSelector = createSelector(\n  associationDesignerModelSelector,\n  (associationDesignerModel: IAssociationDesignerModel) => associationDesignerModel.bundleId\n);\n\nexport const definitionNameSelector = createSelector(\n  associationDesignerModelSelector,\n  (associationDesignerModel: IAssociationDesignerModel) => associationDesignerModel.definitionName\n);\n\nexport const definitionModelSelector = createSelector(\n  associationDesignerModelSelector,\n  (associationDesignerModel: IAssociationDesignerModel) => associationDesignerModel.definitionModel\n);\n\nexport const definitionModelFromDefinitionSelector = createSelector(\n  associationDesignerModelSelector,\n  (associationDesignerModel: IAssociationDesignerModel) => associationDesignerModel.definitionModelFromDefinition\n);\n\nexport const isDirtySelector = createSelector(\n  associationDesignerModelSelector,\n  (associationDesignerModel: IAssociationDesignerModel) => associationDesignerModel.isDirty\n);\n\nexport const isForeignKeyCreatedSelector = createSelector(\n  associationDesignerModelSelector,\n  (associationDesignerModel: IAssociationDesignerModel) => associationDesignerModel.isForeignKeyCreated\n);\n\nexport const isForeignKeyMissingSelector = createSelector(\n  associationDesignerModelSelector,\n  (associationDesignerModel: IAssociationDesignerModel) => associationDesignerModel.isForeignKeyMissing\n);\n\nexport const savedDefinitionNameSelector = createSelector(\n  associationDesignerModelSelector,\n  (associationDesignerModel: IAssociationDesignerModel) => associationDesignerModel.savedDefinitionName\n);\n\nexport const originalDefinitionSelector = createSelector(\n  associationDesignerModelSelector,\n  (associationDesignerModel: IAssociationDesignerModel) => associationDesignerModel.originalDefinition\n);\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AdaptRxControlLabelTooltip, RxSelectOption } from '@bmc-ux/adapt-angular';\nimport {\n  IAssociationDefinition,\n  ICardinality,\n  RX_ASSOCIATION_DEFINITION,\n  RxAssociationCardinalityPipe\n} from '@helix/platform/association/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\n\nimport {\n  ICustomizationOptions,\n  IDesignerConfiguration,\n  IFormBuilderEvent,\n  RxDefinitionNameService,\n  RxGlobalCacheService,\n  RxNotificationService,\n  RxOverlayService,\n  Tooltip\n} from '@helix/platform/shared/api';\nimport {\n  IDefinitionPickerComponentOptions,\n  IRevertCustomizationOptions,\n  RX_REVERT_CUSTOMIZATION,\n  RxDefinitionPickerScope,\n  RxDefinitionPickerType\n} from '@helix/platform/shared/components';\nimport {\n  IBreadcrumbItem,\n  IValidationIssue,\n  IValidationIssueSection,\n  ValidationIssueType\n} from '@helix/platform/ui-kit';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { find, isEmpty, isEqual, some, trim } from 'lodash';\nimport { BehaviorSubject, combineLatest, Observable, of, ReplaySubject } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  shareReplay,\n  skip,\n  startWith,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n  withLatestFrom\n} from 'rxjs/operators';\nimport { AssociationDesignerService } from '../association-designer.service';\nimport { IAssociationDefinitionModel } from '../association-designer.types';\nimport * as AssociationDesignerActions from './+state/association-designer.actions';\nimport {\n  bundleIdSelector,\n  definitionModelFromDefinitionSelector,\n  definitionModelSelector,\n  isDesignModeSelector,\n  isDirtySelector,\n  originalDefinitionSelector,\n  savedDefinitionNameSelector\n} from './+state/association-designer.selectors';\n\n@Component({\n  selector: 'rx-association-designer',\n  templateUrl: './association-designer.component.html',\n  styleUrls: ['./association-designer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RxAssociationDesignerComponent implements OnInit, OnChanges, OnDestroy {\n  @Input()\n  configuration: IDesignerConfiguration;\n\n  @Output()\n  definitionSaved: EventEmitter<string> = new EventEmitter();\n\n  @Output()\n  definitionErrorLoading: EventEmitter<void> = new EventEmitter();\n\n  @Output()\n  closeDesigner: EventEmitter<void> = new EventEmitter<void>();\n\n  private destroyed$ = new ReplaySubject<boolean>(1);\n\n  firstRecordDefinitionPickerOptions: IDefinitionPickerComponentOptions = {\n    availableDefinitionPickerStates: {\n      definitionButtonsGroups: [RxDefinitionPickerScope.Bundle, RxDefinitionPickerScope.All],\n      search: RxDefinitionPickerScope.All\n    },\n    definitionType: RxDefinitionPickerType.RegularDataRecord,\n    label: this.translateService.instant('com.bmc.arsys.rx.client.association-designer.first-record-field.label'),\n    required: true,\n    tooltip: new Tooltip(\n      this.translateService.instant('com.bmc.arsys.rx.client.association-designer.first-record-field.tooltip')\n    )\n  };\n\n  secondRecordDefinitionPickerOptions: IDefinitionPickerComponentOptions = {\n    availableDefinitionPickerStates: {\n      definitionButtonsGroups: [RxDefinitionPickerScope.Bundle, RxDefinitionPickerScope.Rx],\n      search: RxDefinitionPickerScope.Rx\n    },\n    definitionType: RxDefinitionPickerType.RegularDataRecord,\n    label: this.translateService.instant('com.bmc.arsys.rx.client.association-designer.second-record-field.label'),\n    required: true,\n    tooltip: new Tooltip(\n      this.translateService.instant('com.bmc.arsys.rx.client.association-designer.second-record-field.tooltip')\n    )\n  };\n\n  firstRecordDefinitionRoleTooltip: AdaptRxControlLabelTooltip = new Tooltip(\n    this.translateService.instant('com.bmc.arsys.rx.client.association-designer.first-record-role-field.tooltip')\n  );\n\n  secondRecordDefinitionRoleTooltip: AdaptRxControlLabelTooltip = new Tooltip(\n    this.translateService.instant('com.bmc.arsys.rx.client.association-designer.second-record-role-field.tooltip')\n  );\n\n  cascadeDeleteTooltip: AdaptRxControlLabelTooltip = new Tooltip(\n    this.translateService.instant('com.bmc.arsys.rx.client.association-designer.should-cascade-delete.tooltip')\n  );\n\n  cardinalities: ICardinality[] = Object.values(RX_ASSOCIATION_DEFINITION.cardinality);\n  validDefinitionNameRegex = RX_RECORD_DEFINITION.validDefinitionNameRegex;\n\n  associationForm: FormGroup = new FormGroup({\n    name: new FormControl(''),\n    description: new FormControl(),\n    nodeAId: new FormControl(),\n    nodeBId: new FormControl(),\n    nodeAName: new FormControl(),\n    nodeBName: new FormControl(),\n    nodeAModality: new FormControl(),\n    cardinality: new FormControl([RX_ASSOCIATION_DEFINITION.cardinality.oneToOne]),\n    shouldCascadeDelete: new FormControl(),\n    isEnabled: new FormControl(true),\n    customizationOptions: new FormControl()\n  });\n\n  private isSavingInProgressSubject = new BehaviorSubject<boolean>(false);\n  private isDesignMode$ = this.store$.select(isDesignModeSelector);\n  private isDirty$: Observable<boolean> = this.store$.select(isDirtySelector);\n  private originalDefinition$ = this.store$.select(originalDefinitionSelector);\n\n  private bundleFriendlyName$ = this.store$\n    .select(bundleIdSelector)\n    .pipe(switchMap((bundleId: string) => this.rxGlobalCacheService.getBundleFriendlyName(bundleId)));\n\n  private definitionModelFromDefinition$: Observable<IAssociationDefinitionModel> = this.store$.select(\n    definitionModelFromDefinitionSelector\n  );\n\n  private definitionModel$: Observable<IAssociationDefinitionModel> = this.store$.select(definitionModelSelector).pipe(\n    tap((definitionModel: IAssociationDefinitionModel) => {\n      this.associationForm.patchValue(\n        {\n          name: this.rxDefinitionNameService.getDisplayName(definitionModel.name),\n          description: definitionModel.description,\n          nodeAId: definitionModel.nodeAId,\n          nodeBId: definitionModel.nodeBId,\n          nodeAName: definitionModel.nodeAName,\n          nodeBName: definitionModel.nodeBName,\n          nodeAModality: definitionModel.nodeAModality === RX_ASSOCIATION_DEFINITION.modality.required,\n          cardinality: [this.getCardinalityByValue(definitionModel.cardinality[0].value)],\n          shouldCascadeDelete: definitionModel.shouldCascadeDelete,\n          isEnabled: definitionModel.isEnabled,\n          customizationOptions: {\n            allowOverlay: definitionModel.customizationOptions.allowOverlay,\n            scope: definitionModel.customizationOptions.scope\n          }\n        },\n        { emitEvent: false }\n      );\n    }),\n    shareReplay(1)\n  );\n\n  private isExistingDefinition$ = this.definitionModelFromDefinition$.pipe(\n    map((definitionModel) => Boolean(definitionModel.lastUpdateTime)),\n    shareReplay(1)\n  );\n\n  private isCustomizationEnabled$ = this.definitionModelFromDefinition$.pipe(\n    map((definitionModel) => this.rxOverlayService.isCustomizationEnabled(null, definitionModel))\n  );\n\n  private scopeCustomizationControlOptions$: Observable<ICustomizationOptions> =\n    this.definitionModelFromDefinition$.pipe(\n      map((definitionModel) => ({\n        allowOverlay: definitionModel.customizationOptions.allowOverlay,\n        scope: definitionModel.customizationOptions.scope,\n        overlayGroupId: definitionModel.overlayGroupId,\n        overlayDescriptor: definitionModel.overlayDescriptor,\n        isDisabled: !this.rxOverlayService.isCustomizationEnabled('allowOverlay', definitionModel),\n        definitionTypeDisplayName: this.translateService\n          .instant('com.bmc.arsys.rx.client.common.association-definition.label')\n          .toLowerCase()\n      }))\n    );\n\n  private revertCustomizationControlOptions$: Observable<IRevertCustomizationOptions> =\n    this.definitionModelFromDefinition$.pipe(\n      map((definitionModel) => ({\n        allowOverlay: definitionModel.customizationOptions.allowOverlay,\n        scope: definitionModel.customizationOptions.scope,\n        overlayGroupId: definitionModel.overlayGroupId,\n        overlayDescriptor: definitionModel.overlayDescriptor\n      }))\n    );\n\n  private validationIssues$: Observable<IValidationIssueSection[]> = combineLatest([\n    this.definitionModel$,\n    this.isExistingDefinition$\n  ]).pipe(\n    map(([definitionModel, isExistingDefinition]) => this.validate(definitionModel, isExistingDefinition)),\n    shareReplay(1)\n  );\n\n  private definitionFromDefinitionModel$: Observable<IAssociationDefinition> = this.definitionModel$.pipe(\n    map((definitionModel) => this.associationDesignerService.getDefinitionFromDefinitionModel(definitionModel))\n  );\n\n  private definitionForJsonViewer$: Observable<IAssociationDefinition> = this.isDesignMode$.pipe(\n    switchMap((isDesignMode: boolean) =>\n      isDesignMode\n        ? of(null)\n        : combineLatest([this.definitionFromDefinitionModel$, this.originalDefinition$]).pipe(\n            map(([definitionFromDefinitionModel, originalDefinition]) => ({\n              ...originalDefinition,\n              ...definitionFromDefinitionModel\n            }))\n          )\n    )\n  );\n\n  private areNewDefinitionsAllowed$ = this.store$\n    .select(bundleIdSelector)\n    .pipe(switchMap((bundleId) => this.rxOverlayService.areNewDefinitionsAllowed(bundleId)));\n\n  private isReadOnly$ = this.definitionFromDefinitionModel$.pipe(\n    filter((definition) => !!definition.lastUpdateTime),\n    withLatestFrom(this.areNewDefinitionsAllowed$),\n    map(\n      ([definition, areNewDefinitionsAllowed]) =>\n        !areNewDefinitionsAllowed || !this.rxOverlayService.isCustomizationEnabled('allowOverlay', definition)\n    ),\n    tap((isReadOnly: boolean) => {\n      if (isReadOnly) {\n        this.rxNotificationService.addWarningMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.designer.read-only-definition-warning.message')\n        );\n      }\n    }),\n    startWith(false),\n    shareReplay(1)\n  );\n\n  private hasValidationErrors$: Observable<boolean> = this.validationIssues$.pipe(\n    map((issueSections) =>\n      some(issueSections, {\n        issues: [{ type: ValidationIssueType.Error }]\n      })\n    )\n  );\n\n  private cascadeDeleteLabel$: Observable<string> = this.definitionModel$.pipe(\n    map((model: IAssociationDefinitionModel) =>\n      this.translateService.instant('com.bmc.arsys.rx.client.association-designer.should-cascade-delete.label', {\n        firstRecordDefinitionName: this.rxDefinitionNameService.getDisplayName(model.nodeAId),\n        firstRecordDefinitionRole: model.nodeAName\n          ? this.translateService.instant('com.bmc.arsys.rx.client.association-designer.node-name.label', {\n              nodeName: model.nodeAName\n            })\n          : '',\n        secondRecordDefinitionName: this.rxDefinitionNameService.getDisplayName(model.nodeBId),\n        secondRecordDefinitionRole: model.nodeBName\n          ? this.translateService.instant('com.bmc.arsys.rx.client.association-designer.node-name.label', {\n              nodeName: model.nodeBName\n            })\n          : ''\n      })\n    )\n  );\n\n  private recordAssociationLabel$: Observable<string> = this.definitionModel$.pipe(\n    map((model: IAssociationDefinitionModel) =>\n      this.translateService.instant('com.bmc.arsys.rx.client.association-designer.require-record-association.label', {\n        firstRecordDefinitionName: this.rxDefinitionNameService.getDisplayName(model.nodeAId),\n        firstRecordDefinitionRole: model.nodeAName\n          ? this.translateService.instant('com.bmc.arsys.rx.client.association-designer.node-name.label', {\n              nodeName: model.nodeAName\n            })\n          : '',\n        secondRecordDefinitionName: this.rxDefinitionNameService.getDisplayName(model.nodeBId),\n        secondRecordDefinitionRole: model.nodeBName\n          ? this.translateService.instant('com.bmc.arsys.rx.client.association-designer.node-name.label', {\n              nodeName: model.nodeBName\n            })\n          : ''\n      })\n    )\n  );\n\n  private isModalityDisabled$: Observable<boolean> = this.definitionModel$.pipe(\n    withLatestFrom(this.isCustomizationEnabled$),\n    map(\n      ([{ shouldCascadeDelete, nodeAId, nodeBId }, isCustomizationEnabled]) =>\n        !isCustomizationEnabled || !(shouldCascadeDelete && nodeAId && nodeBId)\n    )\n  );\n\n  private isSaveButtonDisabled$: Observable<boolean> = combineLatest([\n    this.isDirty$,\n    this.hasValidationErrors$,\n    this.isReadOnly$,\n    this.isSavingInProgressSubject\n  ]).pipe(\n    map(\n      ([isDirty, hasValidationErrors, isReadOnly, isSavingInProgress]) =>\n        !isDirty || hasValidationErrors || isReadOnly || isSavingInProgress\n    )\n  );\n\n  private breadcrumbItems$: Observable<IBreadcrumbItem[]> = this.definitionModel$.pipe(\n    filter(Boolean),\n    map((definitionModel: IAssociationDefinitionModel) => {\n      const definitionName = this.rxDefinitionNameService.getDisplayName(definitionModel.name);\n\n      return [\n        {\n          label:\n            definitionName ||\n            `<${this.translateService.instant('com.bmc.arsys.rx.client.association-designer.new-association.label')}>`,\n          data: {}\n        }\n      ];\n    })\n  );\n\n  private canCascadeDelete$: Observable<boolean> = this.definitionModel$.pipe(\n    takeUntil(this.destroyed$),\n    map(\n      (definitionModel: IAssociationDefinitionModel) =>\n        // If association type is many to many shouldCascadeDelete should be set to false\n        definitionModel.cardinality[0].value !== RX_ASSOCIATION_DEFINITION.cardinality.manyToMany.value\n    )\n  );\n\n  vm$ = combineLatest([\n    this.breadcrumbItems$,\n    this.bundleFriendlyName$,\n    this.canCascadeDelete$,\n    this.cascadeDeleteLabel$,\n    this.hasValidationErrors$,\n    this.isExistingDefinition$,\n    this.isModalityDisabled$,\n    this.isSaveButtonDisabled$,\n    this.recordAssociationLabel$,\n    this.revertCustomizationControlOptions$,\n    this.scopeCustomizationControlOptions$,\n    this.validationIssues$,\n    this.definitionForJsonViewer$,\n    this.isReadOnly$\n  ]).pipe(\n    map(\n      ([\n        breadcrumbItems,\n        bundleFriendlyName,\n        canCascadeDelete,\n        cascadeDeleteLabel,\n        hasValidationErrors,\n        isExistingDefinition,\n        isModalityDisabled,\n        isSaveButtonDisabled,\n        recordAssociationLabel,\n        revertCustomizationControlOptions,\n        scopeCustomizationControlOptions,\n        validationIssues,\n        definitionForJsonViewer,\n        isReadOnly\n      ]) => ({\n        breadcrumbItems,\n        bundleFriendlyName,\n        canCascadeDelete,\n        cascadeDeleteLabel,\n        hasValidationErrors,\n        isExistingDefinition,\n        isModalityDisabled,\n        isSaveButtonDisabled,\n        recordAssociationLabel,\n        revertCustomizationControlOptions,\n        scopeCustomizationControlOptions,\n        validationIssues,\n        definitionForJsonViewer,\n        isReadOnly\n      })\n    )\n  );\n\n  constructor(\n    private store$: Store<any>,\n    private associationDesignerService: AssociationDesignerService,\n    private rxGlobalCacheService: RxGlobalCacheService,\n    private rxAssociationCardinalityPipe: RxAssociationCardinalityPipe,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private translateService: TranslateService,\n    private rxOverlayService: RxOverlayService,\n    private rxNotificationService: RxNotificationService,\n    private renderer: Renderer2\n  ) {}\n\n  ngOnInit(): void {\n    this.associationForm.valueChanges\n      .pipe(\n        distinctUntilChanged(isEqual),\n        withLatestFrom(this.store$.select(bundleIdSelector)),\n        tap(([formValue, bundleId]) => {\n          this.store$.dispatch(\n            AssociationDesignerActions.updateDefinitionModelFromDesigner({\n              definitionModelFromDesigner: {\n                customizationOptions: formValue.customizationOptions,\n                description: formValue.description,\n                isEnabled: formValue.isEnabled,\n                nodeAId: formValue.nodeAId,\n                nodeAName: formValue.nodeAName,\n                nodeBId: formValue.nodeBId,\n                nodeBName: formValue.nodeBName,\n                shouldCascadeDelete: formValue.shouldCascadeDelete,\n                name: this.rxDefinitionNameService.getDefinitionName(bundleId, formValue.name),\n                cardinality: formValue.cardinality,\n                nodeAModality: formValue.nodeAModality\n                  ? RX_ASSOCIATION_DEFINITION.modality.required\n                  : RX_ASSOCIATION_DEFINITION.modality.optional\n              }\n            })\n          );\n        })\n      )\n      .subscribe();\n\n    this.definitionModel$\n      .pipe(\n        distinctUntilChanged(\n          (prev, cur) =>\n            prev.nodeBId === cur.nodeBId &&\n            prev.nodeAName === cur.nodeAName &&\n            prev.shouldCascadeDelete === cur.shouldCascadeDelete &&\n            prev.nodeAModality === cur.nodeAModality\n        ),\n        filter(\n          (definitionModel: IAssociationDefinitionModel) =>\n            !definitionModel.lastUpdateTime &&\n            !!definitionModel.nodeBId &&\n            definitionModel.cardinality[0].value !== RX_ASSOCIATION_DEFINITION.cardinality.manyToMany.value\n        ),\n        switchMap((definitionModel: IAssociationDefinitionModel) =>\n          this.associationDesignerService.getForeignKeyFieldId(definitionModel)\n        ),\n        withLatestFrom(this.definitionModel$),\n        tap(([fieldId, definitionModel]) => {\n          if (fieldId) {\n            this.store$.dispatch(\n              AssociationDesignerActions.updateDefinitionModelFromDesigner({\n                definitionModelFromDesigner: { ...definitionModel, nodeBKeys: [fieldId] }\n              })\n            );\n          } else {\n            this.store$.dispatch(\n              AssociationDesignerActions.updateDefinitionModelFromDesigner({\n                definitionModelFromDesigner: { ...definitionModel, nodeBKeys: [RX_RECORD_DEFINITION.coreFieldIds.id] }\n              })\n            );\n          }\n        }),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe();\n\n    this.associationForm\n      .get('shouldCascadeDelete')\n      .valueChanges.pipe(\n        takeUntil(this.destroyed$),\n        tap((shouldCascadeDelete) => {\n          if (!shouldCascadeDelete) {\n            this.associationForm.patchValue({\n              nodeAModality: false\n            });\n          }\n        })\n      )\n      .subscribe();\n\n    this.store$\n      .select(savedDefinitionNameSelector)\n      .pipe(skip(1), takeUntil(this.destroyed$))\n      .subscribe((savedDefinitionName: string) => {\n        this.definitionSaved.emit(savedDefinitionName);\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.configuration.currentValue) {\n      this.store$.dispatch(AssociationDesignerActions.init({ payload: this.configuration }));\n    }\n  }\n\n  canDeactivate(): boolean {\n    let canDeactivate = true;\n\n    this.isDirty$.pipe(take(1)).subscribe((isDirty) => {\n      canDeactivate = !isDirty;\n    });\n\n    return canDeactivate;\n  }\n\n  toggleDesignMode(): void {\n    this.store$.dispatch(AssociationDesignerActions.toggleDesignMode());\n  }\n\n  onCorrectIssue(validationIssue: IValidationIssue): void {\n    if (validationIssue.data.type === 'input') {\n      this.renderer.selectRootElement(`[rx-id=\"${validationIssue.data.id}\"] input`, true).focus();\n    } else {\n      this.renderer.selectRootElement(`[rx-id=\"${validationIssue.data.id}\"] [rx-id=\"toggle-button\"]`, true).click();\n    }\n  }\n\n  cardinalityOptionsFormatter = (option: RxSelectOption): string => {\n    return this.rxAssociationCardinalityPipe.transform(option.value);\n  };\n\n  private validate(\n    definitionModel: IAssociationDefinitionModel,\n    isExistingDefinition: boolean\n  ): IValidationIssueSection[] {\n    const validationIssues: IValidationIssue[] = [];\n\n    if (!isExistingDefinition) {\n      if (isEmpty(trim(this.rxDefinitionNameService.getDisplayName(definitionModel.name)))) {\n        validationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n            {\n              propertyName: this.translateService.instant(\n                'com.bmc.arsys.rx.client.association-designer.name-field.label'\n              )\n            }\n          ),\n          data: {\n            id: 'name',\n            type: 'input'\n          }\n        });\n      }\n\n      if (definitionModel.name && !RX_RECORD_DEFINITION.validFullDefinitionName.test(definitionModel.name)) {\n        validationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message',\n            {\n              propertyName: this.translateService.instant(\n                'com.bmc.arsys.rx.client.association-designer.name-field.label'\n              )\n            }\n          ),\n          data: {\n            id: 'name',\n            type: 'input'\n          }\n        });\n      }\n\n      if (isEmpty(definitionModel.nodeAId)) {\n        validationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n            {\n              propertyName: this.translateService.instant(\n                'com.bmc.arsys.rx.client.association-designer.first-record-field.label'\n              )\n            }\n          ),\n          data: {\n            id: 'first-record',\n            type: 'definition-picker'\n          }\n        });\n      }\n\n      if (isEmpty(definitionModel.nodeBId)) {\n        validationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant(\n            'com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message',\n            {\n              propertyName: this.translateService.instant(\n                'com.bmc.arsys.rx.client.association-designer.second-record-field.label'\n              )\n            }\n          ),\n          data: {\n            id: 'second-record',\n            type: 'definition-picker'\n          }\n        });\n      }\n    }\n\n    return validationIssues.length\n      ? [\n          {\n            title: this.translateService.instant('com.bmc.arsys.rx.client.association-designer.new-association.label'),\n            issues: validationIssues\n          }\n        ]\n      : [];\n  }\n\n  onRevertCustomization(event: IFormBuilderEvent): void {\n    if (event.type === RX_REVERT_CUSTOMIZATION.events.revertCustomization) {\n      this.store$.dispatch(AssociationDesignerActions.revertCustomization());\n    }\n  }\n\n  private getCardinalityByValue(value: string): ICardinality {\n    return find(this.cardinalities, { value: value } as ICardinality);\n  }\n\n  saveDefinition(): void {\n    this.store$.dispatch(AssociationDesignerActions.saveDefinition());\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n    this.isSavingInProgressSubject.complete();\n    this.store$.dispatch(AssociationDesignerActions.destroy());\n  }\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n  <rx-designer-header\n    [bundleName]=\"vm.bundleFriendlyName\"\n    [breadcrumbItems]=\"vm.breadcrumbItems\"\n    [isDesignMode]=\"!vm.definitionForJsonViewer\"\n    [isSaveButtonDisabled]=\"vm.isSaveButtonDisabled\"\n    (toggleDesignMode)=\"toggleDesignMode()\"\n    (save)=\"saveDefinition()\"\n    (closeDesigner)=\"closeDesigner.emit()\"\n  ></rx-designer-header>\n\n  <div class=\"rx-designer-component\" [hidden]=\"vm.definitionForJsonViewer\">\n    <adapt-sidebar position=\"right\" panelWidth=\"280px\" [openedId]=\"0\">\n      <adapt-sidebar-item\n        headerTitle=\"{{ 'com.bmc.arsys.rx.client.designer.validation-issues.label' | translate }}\"\n        tooltipText=\"{{ 'com.bmc.arsys.rx.client.designer.validation-issues.label' | translate }}\"\n        rx-id=\"validation-issues\"\n        [iconClass]=\"vm.hasValidationErrors ? 'd-icon-exclamation_triangle text-danger' : 'd-icon-exclamation_triangle'\"\n      >\n        <rx-validation-issues\n          [definitionTypeDisplayName]=\"'com.bmc.arsys.rx.client.common.association-definition.label' | translate\"\n          (correctIssue)=\"onCorrectIssue($event)\"\n          [issueSections]=\"vm.validationIssues\"\n        ></rx-validation-issues>\n      </adapt-sidebar-item>\n\n      <div class=\"main rx-designer-container h-100\">\n        <h1 class=\"mt-0\">\n          {{\n            vm.isExistingDefinition\n              ? ('com.bmc.arsys.rx.client.association-designer.edit-association.title' | translate)\n              : ('com.bmc.arsys.rx.client.association-designer.create-association.title' | translate)\n          }}\n        </h1>\n\n        <form class=\"rx-association-designer-form d-block\" [formGroup]=\"associationForm\">\n          <adapt-rx-textfield\n            class=\"d-block form-group\"\n            formControlName=\"name\"\n            label=\"{{ 'com.bmc.arsys.rx.client.association-designer.name-field.label' | translate }}\"\n            id=\"association-name\"\n            rx-id=\"name\"\n            [disabledStyleForReadonlyState]=\"true\"\n            [readonly]=\"vm.isExistingDefinition\"\n            [required]=\"true\"\n          ></adapt-rx-textfield>\n\n          <adapt-rx-textarea\n            rx-id=\"description\"\n            class=\"d-block form-group\"\n            [label]=\"'com.bmc.arsys.rx.client.common.description.label' | translate\"\n            formControlName=\"description\"\n            [disabled]=\"vm.isReadOnly\"\n          ></adapt-rx-textarea>\n\n          <div class=\"d-flex justify-center align-items-center w-100\">\n            <rx-definition-picker\n              rx-id=\"first-record\"\n              [options]=\"firstRecordDefinitionPickerOptions\"\n              [formControl]=\"associationForm.get('nodeAId')\"\n              [isDisabled]=\"vm.isExistingDefinition\"\n              required=\"true\"\n              class=\"form-group d-block flex-grow-1 rx-association-input\"\n            ></rx-definition-picker>\n\n            <div class=\"rx-association-designer-arrow-1\"></div>\n\n            <adapt-rx-select\n              rx-id=\"cardinality\"\n              [label]=\"'com.bmc.arsys.rx.client.association-designer.cardinality-field.label' | translate\"\n              [options]=\"cardinalities\"\n              [formControl]=\"associationForm.get('cardinality')\"\n              [optionFormatter]=\"cardinalityOptionsFormatter\"\n              [disabled]=\"vm.isExistingDefinition\"\n              class=\"form-group d-block flex-grow-1 rx-association-input\"\n            ></adapt-rx-select>\n\n            <div class=\"rx-association-designer-arrow-2\"></div>\n\n            <rx-definition-picker\n              rx-id=\"second-record\"\n              [options]=\"secondRecordDefinitionPickerOptions\"\n              [formControl]=\"associationForm.get('nodeBId')\"\n              [isDisabled]=\"vm.isExistingDefinition\"\n              required=\"true\"\n              class=\"form-group d-block flex-grow-1 rx-association-input\"\n            ></rx-definition-picker>\n          </div>\n\n          <div class=\"d-flex justify-center align-items-center w-100\">\n            <adapt-rx-textfield\n              rx-id=\"first-record-role\"\n              class=\"d-block form-group w-100\"\n              [label]=\"'com.bmc.arsys.rx.client.association-designer.first-record-role-field.label' | translate\"\n              formControlName=\"nodeAName\"\n              [disabled]=\"vm.isReadOnly\"\n              [tooltip]=\"firstRecordDefinitionRoleTooltip\"\n            ></adapt-rx-textfield>\n\n            <div class=\"rx-association-designer-arrow-placeholder\"></div>\n\n            <div class=\"flex-grow-1 w-100\"></div>\n\n            <div class=\"rx-association-designer-arrow-placeholder\"></div>\n\n            <adapt-rx-textfield\n              rx-id=\"second-record-role\"\n              class=\"d-block form-group w-100\"\n              [label]=\"'com.bmc.arsys.rx.client.association-designer.second-record-role-field.label' | translate\"\n              formControlName=\"nodeBName\"\n              [disabled]=\"vm.isReadOnly\"\n              [tooltip]=\"secondRecordDefinitionRoleTooltip\"\n            ></adapt-rx-textfield>\n          </div>\n\n          <div *ngIf=\"vm.canCascadeDelete\">\n            <adapt-rx-control-label\n              rx-id=\"add-constraints\"\n              [label]=\"'com.bmc.arsys.rx.client.association-designer.add-constraints-field.label' | translate\"\n              [tooltip]=\"cascadeDeleteTooltip\"\n            ></adapt-rx-control-label>\n\n            <adapt-rx-checkbox\n              rx-id=\"cascade-delete\"\n              formControlName=\"shouldCascadeDelete\"\n              [label]=\"vm.cascadeDeleteLabel\"\n              [readonly]=\"vm.isExistingDefinition\"\n            ></adapt-rx-checkbox>\n\n            <adapt-rx-checkbox\n              rx-id=\"required-association\"\n              formControlName=\"nodeAModality\"\n              [label]=\"vm.recordAssociationLabel\"\n              [readonly]=\"vm.isModalityDisabled || vm.isReadOnly\"\n            ></adapt-rx-checkbox>\n          </div>\n\n          <hr />\n\n          <rx-revert-customization\n            *ngIf=\"vm.revertCustomizationControlOptions\"\n            [options]=\"vm.revertCustomizationControlOptions\"\n            (events)=\"onRevertCustomization($event)\"\n          ></rx-revert-customization>\n\n          <rx-scope-customization-control\n            class=\"d-block mb-5\"\n            *ngIf=\"vm.scopeCustomizationControlOptions\"\n            [options]=\"vm.scopeCustomizationControlOptions\"\n            formControlName=\"customizationOptions\"\n          ></rx-scope-customization-control>\n\n          <adapt-rx-checkbox\n            rx-id=\"is-enabled\"\n            formControlName=\"isEnabled\"\n            [disabled]=\"vm.isReadOnly\"\n            [label]=\"'com.bmc.arsys.rx.client.association-designer.enable-association.label' | translate\"\n          ></adapt-rx-checkbox>\n        </form>\n      </div>\n    </adapt-sidebar>\n  </div>\n\n  <adapt-code-viewer\n    *ngIf=\"vm.definitionForJsonViewer\"\n    [code]=\"vm.definitionForJsonViewer | json\"\n    [lang]=\"'javascript'\"\n    [hasToolbar]=\"false\"\n    [theme]=\"'light'\"\n    class=\"full-size\"\n  ></adapt-code-viewer>\n</ng-container>\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  IComponentCanDeactivate,\n  IDesignerConfiguration,\n  RX_APPLICATION,\n  RxBundleCacheService,\n  RxComponentCanDeactivateGuard,\n  RxDefinitionNameService,\n  RxPageTitleService\n} from '@helix/platform/shared/api';\nimport { RxUtilityModalsService } from '@helix/platform/ui-kit';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs';\nimport { RxAssociationDesignerComponent } from '../association-designer/association-designer.component';\n\n@Component({\n  selector: 'rx-association-designer-page',\n  templateUrl: './association-designer-page.component.html'\n})\nexport class RxAssociationDesignerPageComponent implements OnInit, OnDestroy, IComponentCanDeactivate {\n  configuration: IDesignerConfiguration;\n  isInitialized = false;\n\n  private definitionsRoute = 'association-definitions';\n  private pageTitle = this.translateService.instant('com.bmc.arsys.rx.client.association-designer.title');\n\n  private isNewDefinition: boolean;\n  private subscription: Subscription;\n\n  @ViewChild(RxAssociationDesignerComponent)\n  private designerComponent: RxAssociationDesignerComponent;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private rxBundleCacheService: RxBundleCacheService,\n    private rxComponentCanDeactivateGuard: RxComponentCanDeactivateGuard,\n    private rxDefinitionNameService: RxDefinitionNameService,\n    private rxPageTitleService: RxPageTitleService,\n    private rxUtilityModalsService: RxUtilityModalsService,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit(): void {\n    this.rxComponentCanDeactivateGuard.setPageComponent(this);\n\n    this.subscription = this.activatedRoute.params.subscribe(({ definitionName, bundleId }) => {\n      this.rxBundleCacheService.bundleId = bundleId || this.rxDefinitionNameService.getBundleId(definitionName);\n\n      this.isInitialized = true;\n      this.isNewDefinition = !definitionName;\n\n      this.configuration = {\n        ...this.configuration,\n        bundleId: this.rxBundleCacheService.bundleId,\n        definitionName\n      };\n\n      this.rxPageTitleService.set([this.rxDefinitionNameService.getDisplayName(definitionName), this.pageTitle]);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n    this.rxComponentCanDeactivateGuard.setPageComponent(null);\n  }\n\n  canDeactivate(): boolean {\n    return this.designerComponent?.canDeactivate() ?? true;\n  }\n\n  confirmDeactivation(): Promise<boolean> {\n    return this.rxUtilityModalsService.confirmUnsavedChanges();\n  }\n\n  onCloseDesigner(): void {\n    this.router.navigate([\n      RX_APPLICATION.innovationStudioBundleId,\n      this.rxBundleCacheService.bundleId,\n      this.definitionsRoute\n    ]);\n  }\n\n  onDefinitionSaved(definitionName: string): void {\n    if (this.isNewDefinition) {\n      this.router.navigate(['edit2', definitionName], { relativeTo: this.activatedRoute.parent });\n    }\n  }\n\n  onDefinitionErrorLoading(): void {\n    this.router.navigate(['new2', this.rxBundleCacheService.bundleId], { relativeTo: this.activatedRoute.parent });\n  }\n}\n","<rx-association-designer\n  *ngIf=\"isInitialized\"\n  [configuration]=\"configuration\"\n  (definitionSaved)=\"onDefinitionSaved($event)\"\n  (definitionErrorLoading)=\"onDefinitionErrorLoading()\"\n  (closeDesigner)=\"onCloseDesigner()\"\n></rx-association-designer>\n","import { HttpResponse } from '@angular/common/http';\nimport { ErrorHandler, Injectable } from '@angular/core';\nimport {\n  IAssociationDefinition,\n  RX_ASSOCIATION_DEFINITION,\n  RxAssociationDefinitionService\n} from '@helix/platform/association/api';\nimport {\n  IFieldDefinition,\n  RecordFieldOption,\n  RX_RECORD_DEFINITION,\n  RxRecordDefinitionService\n} from '@helix/platform/record/api';\nimport {\n  RxComponentCanDeactivateGuard,\n  RxDefinitionUpdateService,\n  RxNotificationService\n} from '@helix/platform/shared/api';\nimport { RxModalService } from '@helix/platform/ui-kit';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { cloneDeep, last, reject, some } from 'lodash';\nimport { forkJoin, of } from 'rxjs';\nimport { catchError, filter, map, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { AssociationDesignerService } from '../../association-designer.service';\nimport { IAssociationDefinitionModel } from '../../association-designer.types';\nimport * as AssociationDesignerActions from './association-designer.actions';\nimport {\n  definitionModelSelector,\n  definitionNameSelector,\n  isForeignKeyCreatedSelector,\n  isForeignKeyMissingSelector,\n  originalDefinitionSelector\n} from './association-designer.selectors';\n\n@Injectable()\nexport class AssociationDesignerEffects {\n  constructor(\n    private store$: Store<any>,\n    private actions$: Actions,\n    private errorHandler: ErrorHandler,\n    private rxDefinitionUpdateService: RxDefinitionUpdateService,\n    private associationDesignerService: AssociationDesignerService,\n    private rxRecordDefinitionService: RxRecordDefinitionService,\n    private rxComponentCanDeactivateGuard: RxComponentCanDeactivateGuard,\n    private rxAssociationDefinitionService: RxAssociationDefinitionService,\n    private rxModalService: RxModalService,\n    private rxNotificationService: RxNotificationService,\n    private translateService: TranslateService\n  ) {}\n\n  initAssociationDesigner$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AssociationDesignerActions.init),\n      map(() => AssociationDesignerActions.loadDefinition())\n    )\n  );\n\n  loadDefinition$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AssociationDesignerActions.loadDefinition),\n      withLatestFrom(this.store$.select(definitionNameSelector)),\n      switchMap(([_, definitionName]) =>\n        definitionName\n          ? this.rxAssociationDefinitionService.get(definitionName)\n          : this.rxAssociationDefinitionService.getNew()\n      ),\n      map((definition: IAssociationDefinition) => AssociationDesignerActions.loadDefinitionSuccess({ definition }))\n    )\n  );\n\n  loadDefinitionSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AssociationDesignerActions.loadDefinitionSuccess),\n      map((action) =>\n        AssociationDesignerActions.initDefinitionData({\n          definition: action.definition,\n          definitionModel: this.associationDesignerService.getDefinitionModelFromDefinition(action.definition)\n        })\n      )\n    )\n  );\n\n  saveDefinition$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AssociationDesignerActions.saveDefinition),\n      withLatestFrom(this.store$.select(definitionModelSelector)),\n      map(([action, definitionModel]) =>\n        definitionModel.cardinality[0].value === RX_ASSOCIATION_DEFINITION.cardinality.manyToMany.value\n          ? AssociationDesignerActions.createOrUpdateDefinition()\n          : AssociationDesignerActions.getRecordDefinition({ checkForMissingFieldAction: true })\n      )\n    )\n  );\n\n  getRecordDefinition$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AssociationDesignerActions.getRecordDefinition),\n      withLatestFrom(this.store$.select(definitionModelSelector)),\n      switchMap(([action, definitionModel]: [any, IAssociationDefinitionModel]) =>\n        this.associationDesignerService.getRecordDefinition(definitionModel.nodeBId, true).pipe(\n          map((definition) => {\n            if (action.checkForMissingFieldAction) {\n              return AssociationDesignerActions.checkForMissingForeignKeyField({ definition });\n            } else if (action.createForeignKeyFieldAction) {\n              return AssociationDesignerActions.createForeignKeyField({ definition });\n            }\n          }),\n          catchError((error) => {\n            this.errorHandler.handleError(error);\n\n            return of(AssociationDesignerActions.getRecordDefinitionError());\n          })\n        )\n      )\n    )\n  );\n\n  checkForMissingForeignKeyField$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AssociationDesignerActions.checkForMissingForeignKeyField),\n      withLatestFrom(this.store$.select(definitionModelSelector)),\n      switchMap(([action, definitionModel]: [any, IAssociationDefinitionModel]) => {\n        if (!definitionModel.lastUpdateTime) {\n          return this.associationDesignerService.getForeignKeyFieldId(definitionModel, true).pipe(\n            map((foreignKeyFieldId: number) =>\n              // Update nodeBKeys again in case we get new foreign key field ID in force reload definition\n              AssociationDesignerActions.foreignKeyFieldMissingCheckSuccess({\n                payload: {\n                  updatedForeignKeyFieldId: foreignKeyFieldId,\n                  isForeignKeyFieldMissing: !foreignKeyFieldId\n                }\n              })\n            ),\n            catchError((error) => {\n              this.errorHandler.handleError(error);\n\n              return of(AssociationDesignerActions.getForeignKeyFieldIdError());\n            })\n          );\n        } else if (definitionModel.lastUpdateTime) {\n          const missingForeignKeyFields = reject(definitionModel.nodeBKeys, (fieldId) =>\n            some(action.definition.fieldDefinitions, { id: fieldId })\n          );\n\n          return [\n            AssociationDesignerActions.foreignKeyFieldMissingCheckSuccess({\n              payload: {\n                updatedForeignKeyFieldId: null,\n                isForeignKeyFieldMissing: missingForeignKeyFields.length > 0\n              }\n            })\n          ];\n        } else {\n          return [\n            AssociationDesignerActions.foreignKeyFieldMissingCheckSuccess({\n              payload: {\n                updatedForeignKeyFieldId: null,\n                isForeignKeyFieldMissing: false\n              }\n            })\n          ];\n        }\n      })\n    )\n  );\n\n  foreignKeyFieldMissingCheckSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AssociationDesignerActions.foreignKeyFieldMissingCheckSuccess),\n      withLatestFrom(this.store$.select(isForeignKeyMissingSelector)),\n      map(([action, isForeignKeyMissing]) =>\n        isForeignKeyMissing\n          ? AssociationDesignerActions.getRecordDefinition({ createForeignKeyFieldAction: true })\n          : AssociationDesignerActions.createOrUpdateDefinition()\n      )\n    )\n  );\n\n  createForeignKeyField$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AssociationDesignerActions.createForeignKeyField),\n      withLatestFrom(this.store$.select(definitionModelSelector)),\n      switchMap(([action, definitionModel]) => {\n        const definition = cloneDeep(action.definition);\n\n        definition.fieldDefinitions.push({\n          resourceType: RX_RECORD_DEFINITION.dataTypes.character.resourceType,\n          name: this.associationDesignerService.getForeignKeyFieldName(definitionModel),\n          description: null,\n          fieldOption: RecordFieldOption.Optional,\n          maxLength: 254,\n          defaultValue: null\n        } as IFieldDefinition);\n\n        return this.rxRecordDefinitionService.update(definition).pipe(\n          map(() => AssociationDesignerActions.createForeignKeyFieldSuccess()),\n          catchError((error) => {\n            this.errorHandler.handleError(error);\n\n            return of(AssociationDesignerActions.createForeignKeyFieldError());\n          })\n        );\n      })\n    )\n  );\n\n  createForeignKeyFieldSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AssociationDesignerActions.createForeignKeyFieldSuccess),\n      map(() => AssociationDesignerActions.getCreatedForeignKeyFieldId())\n    )\n  );\n\n  getCreatedForeignKeyFieldId$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AssociationDesignerActions.getCreatedForeignKeyFieldId),\n      withLatestFrom(this.store$.select(definitionModelSelector)),\n      switchMap(([action, definitionModel]) =>\n        this.associationDesignerService.getForeignKeyFieldId(definitionModel, true).pipe(\n          map((fieldId: number) => AssociationDesignerActions.getCreatedForeignKeyFieldIdSuccess({ fieldId })),\n          catchError((error) => {\n            this.errorHandler.handleError(error);\n\n            return of(AssociationDesignerActions.getCreatedForeignKeyFieldIdError());\n          })\n        )\n      )\n    )\n  );\n\n  getCreatedForeignKeyFieldIdSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AssociationDesignerActions.getCreatedForeignKeyFieldIdSuccess),\n      map(() => AssociationDesignerActions.createOrUpdateDefinition())\n    )\n  );\n\n  createOrUpdateDefinition$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AssociationDesignerActions.createOrUpdateDefinition),\n      withLatestFrom(this.store$.select(definitionModelSelector), this.store$.select(originalDefinitionSelector)),\n      switchMap(([action, definitionModel, originalDefinition]) => {\n        const definition = this.associationDesignerService.getDefinitionFromDefinitionModel(definitionModel);\n\n        return definitionModel.lastUpdateTime\n          ? this.rxDefinitionUpdateService\n              .execute(\n                this.rxAssociationDefinitionService.update.bind(this.rxAssociationDefinitionService, {\n                  ...originalDefinition,\n                  ...definition\n                })\n              )\n              .pipe(\n                map(() =>\n                  AssociationDesignerActions.saveDefinitionSuccess({\n                    savedDefinitionName: definitionModel.name\n                  })\n                ),\n                catchError((error) => {\n                  this.errorHandler.handleError(error);\n\n                  return of(AssociationDesignerActions.updateDefinitionError());\n                })\n              )\n          : this.rxAssociationDefinitionService.create(definition).pipe(\n              map((response: HttpResponse<any>) => {\n                const savedDefinitionName =\n                  decodeURIComponent(last(response?.headers?.get('location').split('/')) || '') || definitionModel.name;\n\n                return AssociationDesignerActions.saveDefinitionSuccess({\n                  savedDefinitionName\n                });\n              }),\n              catchError((error) => {\n                this.errorHandler.handleError(error);\n\n                // If POST of AssociationDefinition fails and the foreign key field has been added,\n                // that field will be removed via createDefinitionError action.\n                return of(AssociationDesignerActions.createDefinitionError());\n              })\n            );\n      })\n    )\n  );\n\n  createDefinitionError$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AssociationDesignerActions.createDefinitionError),\n      map(() => AssociationDesignerActions.getCreatedForeignKeyField())\n    )\n  );\n\n  getCreatedForeignKeyField$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AssociationDesignerActions.getCreatedForeignKeyField),\n      withLatestFrom(this.store$.select(isForeignKeyCreatedSelector)),\n      filter(([action, isForeignKeyCreated]) => isForeignKeyCreated),\n      withLatestFrom(this.store$.select(definitionModelSelector)),\n      switchMap(([action, definitionModel]) =>\n        forkJoin([\n          this.associationDesignerService.getForeignKeyFieldId(definitionModel, true),\n          this.associationDesignerService.getRecordDefinition(definitionModel.nodeBId, true)\n        ]).pipe(\n          map(([foreignKeyFieldId, definition]) => {\n            definition.fieldDefinitions = reject(definition.fieldDefinitions, {\n              id: foreignKeyFieldId\n            });\n\n            return AssociationDesignerActions.removeCreatedForeignKeyField({ foreignKeyFieldId, definition });\n          }),\n          catchError((error) => {\n            this.errorHandler.handleError(error);\n\n            return of(AssociationDesignerActions.getCreatedForeignKeyFieldError());\n          })\n        )\n      )\n    )\n  );\n\n  removeCreatedForeignKeyField$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AssociationDesignerActions.removeCreatedForeignKeyField),\n      withLatestFrom(this.store$.select(isForeignKeyCreatedSelector)),\n      filter(([action, isForeignKeyCreated]) => isForeignKeyCreated),\n      switchMap(([action]) => {\n        const definition = {\n          ...action.definition,\n          fieldDefinitions: reject(action.definition.fieldDefinitions, {\n            id: action.foreignKeyFieldId\n          })\n        };\n\n        return this.rxRecordDefinitionService.update(definition).pipe(\n          map(() => AssociationDesignerActions.removeCreatedForeignKeyFieldSuccess()),\n          catchError((error) => {\n            this.errorHandler.handleError(error);\n\n            return of(AssociationDesignerActions.removeCreatedForeignKeyFieldError());\n          })\n        );\n      })\n    )\n  );\n\n  saveDefinitionSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AssociationDesignerActions.saveDefinitionSuccess),\n      withLatestFrom(this.store$.select(definitionNameSelector)),\n      tap(() => {\n        this.rxNotificationService.addSuccessMessage(\n          this.translateService.instant('com.bmc.arsys.rx.client.designer.definition-saved-successfully.message', {\n            definitionTypeDisplayName: this.translateService.instant(\n              'com.bmc.arsys.rx.client.common.association-definition.label'\n            )\n          })\n        );\n      }),\n      filter(([_, definitionName]) => !!definitionName),\n      map(() => AssociationDesignerActions.loadDefinition())\n    )\n  );\n\n  revertCustomization$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AssociationDesignerActions.revertCustomization),\n        withLatestFrom(this.store$.select(definitionModelSelector)),\n        switchMap(([_, definitionModel]) =>\n          this.rxAssociationDefinitionService.revertCustomization(definitionModel.name)\n        ),\n        tap(() => {\n          this.rxComponentCanDeactivateGuard.disable();\n          window.location.reload();\n        })\n      ),\n    { dispatch: false }\n  );\n\n  markPristine$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        AssociationDesignerActions.initDefinitionData,\n        AssociationDesignerActions.saveDefinition,\n        AssociationDesignerActions.saveDefinitionSuccess\n      ),\n      map(() => AssociationDesignerActions.markDesignerPristine())\n    )\n  );\n\n  markDirty$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        AssociationDesignerActions.updateDefinitionModelFromDesigner,\n        AssociationDesignerActions.getRecordDefinitionError,\n        AssociationDesignerActions.getForeignKeyFieldIdError,\n        AssociationDesignerActions.createForeignKeyFieldError,\n        AssociationDesignerActions.getCreatedForeignKeyFieldError,\n        AssociationDesignerActions.createDefinitionError,\n        AssociationDesignerActions.updateDefinitionError,\n        AssociationDesignerActions.removeCreatedForeignKeyFieldError\n      ),\n      map(() => AssociationDesignerActions.markDesignerDirty())\n    )\n  );\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { initDefinitionData } from './association-designer.actions';\nimport { IAssociationDesignerModel } from './association-designer.types';\nimport * as AssociationDesignerActions from './association-designer.actions';\nimport { IAssociationDefinitionModel } from '../../association-designer.types';\nimport { RxCardinalityType, RxModalityType } from '@helix/platform/association/api';\nimport { RX_RECORD_DEFINITION } from '@helix/platform/record/api';\n\nconst initialDefinitionModel: IAssociationDefinitionModel = {\n  cardinality: [\n    {\n      value: RxCardinalityType.OneToOne,\n      labelKey: 'com.bmc.arsys.rx.client.association.cardinality.one-to-one.label'\n    }\n  ],\n  description: null,\n  guid: null,\n  isEnabled: true,\n  name: null,\n  nodeAId: null,\n  nodeAKeys: [RX_RECORD_DEFINITION.coreFieldIds.id],\n  nodeBKeys: [RX_RECORD_DEFINITION.coreFieldIds.id],\n  nodeAModality: RxModalityType.Optional,\n  nodeAName: null,\n  nodeBId: null,\n  nodeBName: null,\n  shouldCascadeDelete: false,\n  customizationOptions: { allowOverlay: true, scope: 'PUBLIC' }\n};\n\nexport const initialState: IAssociationDesignerModel = {\n  bundleId: null,\n  definitionName: null,\n  isDesignMode: true,\n  definitionModel: initialDefinitionModel,\n  definitionModelFromDefinition: initialDefinitionModel,\n  isDirty: false,\n  isForeignKeyMissing: false,\n  isForeignKeyCreated: false,\n  savedDefinitionName: null,\n  originalDefinition: null\n};\n\nconst reducer = createReducer(\n  initialState,\n\n  on(AssociationDesignerActions.init, (state: IAssociationDesignerModel, { payload }) => ({\n    ...initialState,\n    bundleId: payload.bundleId,\n    definitionName: payload.definitionName,\n    isForeignKeyCreated: false\n  })),\n\n  on(\n    AssociationDesignerActions.initDefinitionData,\n    (state: IAssociationDesignerModel, { definition, definitionModel }) => ({\n      ...state,\n      definitionModel,\n      definitionModelFromDefinition: definitionModel,\n      originalDefinition: definition\n    })\n  ),\n\n  on(\n    AssociationDesignerActions.updateDefinitionModelFromDesigner,\n    (state: IAssociationDesignerModel, { definitionModelFromDesigner }) => ({\n      ...state,\n      definitionModel: { ...state.definitionModel, ...definitionModelFromDesigner }\n    })\n  ),\n\n  on(AssociationDesignerActions.toggleDesignMode, (state: IAssociationDesignerModel) => ({\n    ...state,\n    isDesignMode: !state.isDesignMode\n  })),\n\n  on(\n    AssociationDesignerActions.foreignKeyFieldMissingCheckSuccess,\n    (state: IAssociationDesignerModel, { payload }) => ({\n      ...state,\n      isForeignKeyMissing: payload.isForeignKeyFieldMissing,\n      definitionModel: {\n        ...state.definitionModel,\n        nodeBKeys: payload.updatedForeignKeyFieldId\n          ? [payload.updatedForeignKeyFieldId]\n          : state.definitionModel.nodeBKeys\n      }\n    })\n  ),\n\n  on(AssociationDesignerActions.createForeignKeyFieldError, (state: IAssociationDesignerModel) => ({\n    ...state,\n    isForeignKeyCreated: false\n  })),\n\n  on(AssociationDesignerActions.createForeignKeyFieldSuccess, (state: IAssociationDesignerModel) => ({\n    ...state,\n    isForeignKeyCreated: true\n  })),\n\n  on(\n    AssociationDesignerActions.getCreatedForeignKeyFieldIdSuccess,\n    (state: IAssociationDesignerModel, { fieldId }) => ({\n      ...state,\n      definitionModel: { ...state.definitionModel, nodeBKeys: [fieldId] }\n    })\n  ),\n\n  on(AssociationDesignerActions.saveDefinitionSuccess, (state: IAssociationDesignerModel, { savedDefinitionName }) => ({\n    ...state,\n    savedDefinitionName\n  })),\n\n  on(AssociationDesignerActions.markDesignerPristine, (state: IAssociationDesignerModel) => ({\n    ...state,\n    isDirty: false\n  })),\n\n  on(AssociationDesignerActions.markDesignerDirty, (state: IAssociationDesignerModel) => ({\n    ...state,\n    isDirty: true\n  })),\n\n  on(AssociationDesignerActions.destroy, (state: IAssociationDesignerModel) => ({\n    ...initialState\n  }))\n);\n\nexport function associationDesignerModelReducer(state: IAssociationDesignerModel, action: Action) {\n  return reducer(state, action);\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AdaptCodeViewerModule, AdaptRxFormsModule, AdaptSidebarModule, AdaptTabsModule } from '@bmc-ux/adapt-angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { RxValidationIssuesModule } from '@helix/platform/ui-kit';\nimport {\n  CustomizationOptionsModule,\n  RxDefinitionPickerModule,\n  RxDesignerHeaderModule,\n  RxRevertCustomizationModule\n} from '@helix/platform/shared/components';\nimport { RxAssociationCardinalityPipe, RxAssociationPipesModule } from '@helix/platform/association/api';\nimport { RxDefinitionNamePipe } from '@helix/platform/shared/api';\nimport { RxAssociationDesignerComponent } from './association-designer.component';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AssociationDesignerEffects } from './+state/association-designer.effects';\nimport { RX_ASSOCIATION_DESIGNER } from '../association-designer.constant';\nimport { associationDesignerModelReducer } from './+state/association-designer-model.reducer';\n\n@NgModule({\n  declarations: [RxAssociationDesignerComponent],\n  imports: [\n    AdaptSidebarModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RxDesignerHeaderModule,\n    RxValidationIssuesModule,\n    RxDefinitionPickerModule,\n    RxAssociationPipesModule,\n    CustomizationOptionsModule,\n    RxRevertCustomizationModule,\n    AdaptTabsModule,\n    AdaptRxFormsModule,\n    AdaptCodeViewerModule,\n    TranslateModule,\n    StoreModule.forFeature(RX_ASSOCIATION_DESIGNER.featureSelector, {\n      model: associationDesignerModelReducer\n    }),\n    EffectsModule.forFeature([AssociationDesignerEffects])\n  ],\n  exports: [RxAssociationDesignerComponent],\n  providers: [RxAssociationCardinalityPipe, RxDefinitionNamePipe]\n})\nexport class RxAssociationDesignerModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RxAssociationDesignerPageComponent } from './association-designer-page.component';\nimport { RxAssociationDesignerModule } from '../association-designer';\n\n@NgModule({\n  declarations: [RxAssociationDesignerPageComponent],\n  imports: [CommonModule, RxAssociationDesignerModule],\n  exports: [RxAssociationDesignerPageComponent]\n})\nexport class RxAssociationDesignerPageModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["AssociationDesignerActions.updateDefinitionModelFromDesigner","AssociationDesignerActions.init","AssociationDesignerActions.toggleDesignMode","AssociationDesignerActions.revertCustomization","AssociationDesignerActions.saveDefinition","AssociationDesignerActions.destroy","AssociationDesignerActions.loadDefinition","AssociationDesignerActions.loadDefinitionSuccess","AssociationDesignerActions.initDefinitionData","AssociationDesignerActions.createOrUpdateDefinition","AssociationDesignerActions.getRecordDefinition","AssociationDesignerActions.checkForMissingForeignKeyField","AssociationDesignerActions.createForeignKeyField","AssociationDesignerActions.getRecordDefinitionError","AssociationDesignerActions.foreignKeyFieldMissingCheckSuccess","AssociationDesignerActions.getForeignKeyFieldIdError","AssociationDesignerActions.createForeignKeyFieldSuccess","AssociationDesignerActions.createForeignKeyFieldError","AssociationDesignerActions.getCreatedForeignKeyFieldId","AssociationDesignerActions.getCreatedForeignKeyFieldIdSuccess","AssociationDesignerActions.getCreatedForeignKeyFieldIdError","AssociationDesignerActions.saveDefinitionSuccess","AssociationDesignerActions.updateDefinitionError","AssociationDesignerActions.createDefinitionError","AssociationDesignerActions.getCreatedForeignKeyField","AssociationDesignerActions.removeCreatedForeignKeyField","AssociationDesignerActions.getCreatedForeignKeyFieldError","AssociationDesignerActions.removeCreatedForeignKeyFieldSuccess","AssociationDesignerActions.removeCreatedForeignKeyFieldError","AssociationDesignerActions.markDesignerPristine","AssociationDesignerActions.markDesignerDirty"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAiBa,0BAA0B;IACrC,YACU,uBAAgD,EAChD,yBAAoD,EACpD,8BAA8D;QAF9D,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,8BAAyB,GAAzB,yBAAyB,CAA2B;QACpD,mCAA8B,GAA9B,8BAA8B,CAAgC;KACpE;IAEJ,gCAAgC,CAAC,UAAkC;QACjE,OAAO;YACL,WAAW,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,yBAAyB,CAAC,WAAW,CAAC,EAAE,EAAE,KAAK,EAAE,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC;YAC5G,oBAAoB,EAAE;gBACpB,KAAK,EAAE,UAAU,CAAC,KAAK;gBACvB,YAAY,EAAE,UAAU,CAAC,YAAY;aACtC;YACD,WAAW,EAAE,UAAU,CAAC,WAAW;YACnC,IAAI,EAAE,UAAU,CAAC,IAAI;YACrB,SAAS,EAAE,UAAU,CAAC,SAAS;YAC/B,aAAa,EAAE,UAAU,CAAC,aAAa;YACvC,cAAc,EAAE,UAAU,CAAC,cAAc;YACzC,IAAI,EAAE,UAAU,CAAC,IAAI;YACrB,OAAO,EAAE,UAAU,CAAC,OAAO;YAC3B,SAAS,EAAE,UAAU,CAAC,SAAS;YAC/B,aAAa,EAAE,UAAU,CAAC,aAAa;YACvC,SAAS,EAAE,UAAU,CAAC,SAAS;YAC/B,OAAO,EAAE,UAAU,CAAC,OAAO;YAC3B,SAAS,EAAE,UAAU,CAAC,SAAS;YAC/B,SAAS,EAAE,UAAU,CAAC,SAAS;YAC/B,iBAAiB,EAAE,UAAU,CAAC,iBAAiB;YAC/C,cAAc,EAAE,UAAU,CAAC,cAAc;YACzC,mBAAmB,EAAE,UAAU,CAAC,mBAAmB;YACnD,IAAI,EAAE,UAAU,CAAC,IAAI;SACtB,CAAC;KACH;IAED,gCAAgC,CAAC,KAAkC;QACjE,OAAO;YACL,YAAY,EAAE,KAAK,CAAC,oBAAoB,CAAC,YAAY;YACrD,WAAW,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK;YACvC,WAAW,EAAE,KAAK,CAAC,WAAW;YAC9B,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,SAAS,EAAE,KAAK,CAAC,SAAS;YAC1B,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,cAAc,EAAE,KAAK,CAAC,cAAc;YACpC,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,SAAS,EAAE,KAAK,CAAC,SAAS;YAC1B,aAAa,EACX,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,yBAAyB,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK;kBACjF,cAAc,CAAC,QAAQ;kBACvB,KAAK,CAAC,aAAa;YACzB,SAAS,EAAE,KAAK,CAAC,SAAS;YAC1B,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,SAAS,EACP,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,yBAAyB,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK;kBACjF,CAAC,oBAAoB,CAAC,YAAY,CAAC,EAAE,CAAC;kBACtC,KAAK,CAAC,SAAS;YACrB,SAAS,EAAE,KAAK,CAAC,SAAS;YAC1B,KAAK,EAAE,KAAK,CAAC,oBAAoB,CAAC,KAAK;YACvC,mBAAmB,EACjB,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,yBAAyB,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK;kBACjF,KAAK;kBACL,KAAK,CAAC,mBAAmB;YAC/B,iBAAiB,EAAE,KAAK,CAAC,iBAAiB;YAC1C,cAAc,EAAE,KAAK,CAAC,cAAc;YACpC,IAAI,EAAE,KAAK,CAAC,IAAI;SACjB,CAAC;KACH;IAED,mBAAmB,CAAC,IAAY,EAAE,WAAW,GAAG,KAAK;QACnD,OAAO,WAAW;cACd,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;cAClD,IAAI,CAAC,8BAA8B,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;KACnE;IAED,sBAAsB,CAAC,eAA4C;QACjE,MAAM,aAAa,GACjB,eAAe,CAAC,SAAS,IAAI,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAEpG,OAAO,aAAa,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC;KAC5C;IAED,oBAAoB,CAAC,eAA4C,EAAE,WAAW,GAAG,KAAK;QACpF,OAAO,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,IAAI,CACxE,GAAG,CAAC,CAAC,gBAAmC;;YACtC,MAAM,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;YAEzE,OAAO,MAAA,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,IAAI,KAAK,mBAAmB,CAAC,0CAAE,EAAY,CAAC;SAC5G,CAAC,CACH,CAAC;KACH;;uHAxFU,0BAA0B;2HAA1B,0BAA0B,cAFzB,MAAM;2FAEP,0BAA0B;kBAHtC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;ACVM,MAAM,IAAI,GAAG,YAAY,CAC9B,6BAA6B,EAC7B,KAAK,EAAsD,CAC5D,CAAC;AAEK,MAAM,cAAc,GAAG,YAAY,CAAC,wCAAwC,CAAC,CAAC;AAE9E,MAAM,qBAAqB,GAAG,YAAY,CAC/C,gDAAgD,EAChD,KAAK,EAA0C,CAChD,CAAC;AAEK,MAAM,kBAAkB,GAAG,YAAY,CAC5C,8CAA8C,EAC9C,KAAK,EAAwF,CAC9F,CAAC;AAEK,MAAM,iCAAiC,GAAG,YAAY,CAC3D,8DAA8D,EAC9D,KAAK,EAAgE,CACtE,CAAC;AAEK,MAAM,oBAAoB,GAAG,YAAY,CAAC,+CAA+C,CAAC,CAAC;AAE3F,MAAM,iBAAiB,GAAG,YAAY,CAAC,4CAA4C,CAAC,CAAC;AAErF,MAAM,gBAAgB,GAAG,YAAY,CAAC,2CAA2C,CAAC,CAAC;AAEnF,MAAM,mBAAmB,GAAG,YAAY,CAAC,6CAA6C,CAAC,CAAC;AAExF,MAAM,cAAc,GAAG,YAAY,CAAC,wCAAwC,CAAC,CAAC;AAE9E,MAAM,mBAAmB,GAAG,YAAY,CAC7C,8CAA8C,EAC9C,KAAK,EAAmF,CACzF,CAAC;AAEK,MAAM,wBAAwB,GAAG,YAAY,CAAC,oDAAoD,CAAC,CAAC;AAEpG,MAAM,yBAAyB,GAAG,YAAY,CAAC,uDAAuD,CAAC,CAAC;AAExG,MAAM,8BAA8B,GAAG,YAAY,CACxD,4DAA4D,EAC5D,KAAK,EAAqC,CAC3C,CAAC;AAEK,MAAM,kCAAkC,GAAG,YAAY,CAC5D,gEAAgE,EAChE,KAAK,EAAwF,CAC9F,CAAC;AAEK,MAAM,qBAAqB,GAAG,YAAY,CAC/C,iDAAiD,EACjD,KAAK,EAAqC,CAC3C,CAAC;AAEK,MAAM,4BAA4B,GAAG,YAAY,CAAC,yDAAyD,CAAC,CAAC;AAE7G,MAAM,0BAA0B,GAAG,YAAY,CAAC,uDAAuD,CAAC,CAAC;AAEzG,MAAM,2BAA2B,GAAG,YAAY,CAAC,yDAAyD,CAAC,CAAC;AAE5G,MAAM,kCAAkC,GAAG,YAAY,CAC5D,iEAAiE,EACjE,KAAK,EAAuB,CAC7B,CAAC;AAEK,MAAM,gCAAgC,GAAG,YAAY,CAC1D,+DAA+D,CAChE,CAAC;AAEK,MAAM,wBAAwB,GAAG,YAAY,CAAC,oDAAoD,CAAC,CAAC;AAEpG,MAAM,yBAAyB,GAAG,YAAY,CAAC,sDAAsD,CAAC,CAAC;AAEvG,MAAM,8BAA8B,GAAG,YAAY,CACxD,4DAA4D,CAC7D,CAAC;AAEK,MAAM,4BAA4B,GAAG,YAAY,CACtD,yDAAyD,EACzD,KAAK,EAAgE,CACtE,CAAC;AAEK,MAAM,mCAAmC,GAAG,YAAY,CAC7D,iEAAiE,CAClE,CAAC;AAEK,MAAM,iCAAiC,GAAG,YAAY,CAC3D,+DAA+D,CAChE,CAAC;AAEK,MAAM,qBAAqB,GAAG,YAAY,CAC/C,gDAAgD,EAChD,KAAK,EAAmC,CACzC,CAAC;AAEK,MAAM,qBAAqB,GAAG,YAAY,CAAC,gDAAgD,CAAC,CAAC;AAE7F,MAAM,qBAAqB,GAAG,YAAY,CAAC,gDAAgD,CAAC,CAAC;AAE7F,MAAM,OAAO,GAAG,YAAY,CAAC,gCAAgC,CAAC;;AC3G9D,MAAM,uBAAuB,GAAG;IACrC,eAAe,EAAE,qBAAqB;CACvC;;ACEM,MAAM,gCAAgC,GAAG,qBAAqB,CACnE,uBAAuB,CAAC,eAAe,CACxC,CAAC;AAEK,MAAM,gCAAgC,GAAG,cAAc,CAC5D,gCAAgC,EAChC,CAAC,wBAAmD,KAAK,wBAAwB,CAAC,KAAK,CACxF,CAAC;AAEK,MAAM,oBAAoB,GAAG,cAAc,CAChD,gCAAgC,EAChC,CAAC,wBAAmD,KAAK,wBAAwB,CAAC,YAAY,CAC/F,CAAC;AAEK,MAAM,gBAAgB,GAAG,cAAc,CAC5C,gCAAgC,EAChC,CAAC,wBAAmD,KAAK,wBAAwB,CAAC,QAAQ,CAC3F,CAAC;AAEK,MAAM,sBAAsB,GAAG,cAAc,CAClD,gCAAgC,EAChC,CAAC,wBAAmD,KAAK,wBAAwB,CAAC,cAAc,CACjG,CAAC;AAEK,MAAM,uBAAuB,GAAG,cAAc,CACnD,gCAAgC,EAChC,CAAC,wBAAmD,KAAK,wBAAwB,CAAC,eAAe,CAClG,CAAC;AAEK,MAAM,qCAAqC,GAAG,cAAc,CACjE,gCAAgC,EAChC,CAAC,wBAAmD,KAAK,wBAAwB,CAAC,6BAA6B,CAChH,CAAC;AAEK,MAAM,eAAe,GAAG,cAAc,CAC3C,gCAAgC,EAChC,CAAC,wBAAmD,KAAK,wBAAwB,CAAC,OAAO,CAC1F,CAAC;AAEK,MAAM,2BAA2B,GAAG,cAAc,CACvD,gCAAgC,EAChC,CAAC,wBAAmD,KAAK,wBAAwB,CAAC,mBAAmB,CACtG,CAAC;AAEK,MAAM,2BAA2B,GAAG,cAAc,CACvD,gCAAgC,EAChC,CAAC,wBAAmD,KAAK,wBAAwB,CAAC,mBAAmB,CACtG,CAAC;AAEK,MAAM,2BAA2B,GAAG,cAAc,CACvD,gCAAgC,EAChC,CAAC,wBAAmD,KAAK,wBAAwB,CAAC,mBAAmB,CACtG,CAAC;AAEK,MAAM,0BAA0B,GAAG,cAAc,CACtD,gCAAgC,EAChC,CAAC,wBAAmD,KAAK,wBAAwB,CAAC,kBAAkB,CACrG;;MCoBY,8BAA8B;IA0UzC,YACU,MAAkB,EAClB,0BAAsD,EACtD,oBAA0C,EAC1C,4BAA0D,EAC1D,uBAAgD,EAChD,gBAAkC,EAClC,gBAAkC,EAClC,qBAA4C,EAC5C,QAAmB;QARnB,WAAM,GAAN,MAAM,CAAY;QAClB,+BAA0B,GAA1B,0BAA0B,CAA4B;QACtD,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,iCAA4B,GAA5B,4BAA4B,CAA8B;QAC1D,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,aAAQ,GAAR,QAAQ,CAAW;QA9U7B,oBAAe,GAAyB,IAAI,YAAY,EAAE,CAAC;QAG3D,2BAAsB,GAAuB,IAAI,YAAY,EAAE,CAAC;QAGhE,kBAAa,GAAuB,IAAI,YAAY,EAAQ,CAAC;QAErD,eAAU,GAAG,IAAI,aAAa,CAAU,CAAC,CAAC,CAAC;QAEnD,uCAAkC,GAAsC;YACtE,+BAA+B,EAAE;gBAC/B,uBAAuB,EAAE,CAAC,uBAAuB,CAAC,MAAM,EAAE,uBAAuB,CAAC,GAAG,CAAC;gBACtF,MAAM,EAAE,uBAAuB,CAAC,GAAG;aACpC;YACD,cAAc,EAAE,sBAAsB,CAAC,iBAAiB;YACxD,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,uEAAuE,CAAC;YAC7G,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,IAAI,OAAO,CAClB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,yEAAyE,CAAC,CACzG;SACF,CAAC;QAEF,wCAAmC,GAAsC;YACvE,+BAA+B,EAAE;gBAC/B,uBAAuB,EAAE,CAAC,uBAAuB,CAAC,MAAM,EAAE,uBAAuB,CAAC,EAAE,CAAC;gBACrF,MAAM,EAAE,uBAAuB,CAAC,EAAE;aACnC;YACD,cAAc,EAAE,sBAAsB,CAAC,iBAAiB;YACxD,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,wEAAwE,CAAC;YAC9G,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,IAAI,OAAO,CAClB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,0EAA0E,CAAC,CAC1G;SACF,CAAC;QAEF,qCAAgC,GAA+B,IAAI,OAAO,CACxE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,8EAA8E,CAAC,CAC9G,CAAC;QAEF,sCAAiC,GAA+B,IAAI,OAAO,CACzE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,+EAA+E,CAAC,CAC/G,CAAC;QAEF,yBAAoB,GAA+B,IAAI,OAAO,CAC5D,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,4EAA4E,CAAC,CAC5G,CAAC;QAEF,kBAAa,GAAmB,MAAM,CAAC,MAAM,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC;QACrF,6BAAwB,GAAG,oBAAoB,CAAC,wBAAwB,CAAC;QAEzE,oBAAe,GAAc,IAAI,SAAS,CAAC;YACzC,IAAI,EAAE,IAAI,WAAW,CAAC,EAAE,CAAC;YACzB,WAAW,EAAE,IAAI,WAAW,EAAE;YAC9B,OAAO,EAAE,IAAI,WAAW,EAAE;YAC1B,OAAO,EAAE,IAAI,WAAW,EAAE;YAC1B,SAAS,EAAE,IAAI,WAAW,EAAE;YAC5B,SAAS,EAAE,IAAI,WAAW,EAAE;YAC5B,aAAa,EAAE,IAAI,WAAW,EAAE;YAChC,WAAW,EAAE,IAAI,WAAW,CAAC,CAAC,yBAAyB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC9E,mBAAmB,EAAE,IAAI,WAAW,EAAE;YACtC,SAAS,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC;YAChC,oBAAoB,EAAE,IAAI,WAAW,EAAE;SACxC,CAAC,CAAC;QAEK,8BAAyB,GAAG,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;QAChE,kBAAa,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;QACzD,aAAQ,GAAwB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACpE,wBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC;QAErE,wBAAmB,GAAG,IAAI,CAAC,MAAM;aACtC,MAAM,CAAC,gBAAgB,CAAC;aACxB,IAAI,CAAC,SAAS,CAAC,CAAC,QAAgB,KAAK,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAE5F,mCAA8B,GAA4C,IAAI,CAAC,MAAM,CAAC,MAAM,CAClG,qCAAqC,CACtC,CAAC;QAEM,qBAAgB,GAA4C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC,IAAI,CAClH,GAAG,CAAC,CAAC,eAA4C;YAC/C,IAAI,CAAC,eAAe,CAAC,UAAU,CAC7B;gBACE,IAAI,EAAE,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC;gBACvE,WAAW,EAAE,eAAe,CAAC,WAAW;gBACxC,OAAO,EAAE,eAAe,CAAC,OAAO;gBAChC,OAAO,EAAE,eAAe,CAAC,OAAO;gBAChC,SAAS,EAAE,eAAe,CAAC,SAAS;gBACpC,SAAS,EAAE,eAAe,CAAC,SAAS;gBACpC,aAAa,EAAE,eAAe,CAAC,aAAa,KAAK,yBAAyB,CAAC,QAAQ,CAAC,QAAQ;gBAC5F,WAAW,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;gBAC/E,mBAAmB,EAAE,eAAe,CAAC,mBAAmB;gBACxD,SAAS,EAAE,eAAe,CAAC,SAAS;gBACpC,oBAAoB,EAAE;oBACpB,YAAY,EAAE,eAAe,CAAC,oBAAoB,CAAC,YAAY;oBAC/D,KAAK,EAAE,eAAe,CAAC,oBAAoB,CAAC,KAAK;iBAClD;aACF,EACD,EAAE,SAAS,EAAE,KAAK,EAAE,CACrB,CAAC;SACH,CAAC,EACF,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;QAEM,0BAAqB,GAAG,IAAI,CAAC,8BAA8B,CAAC,IAAI,CACtE,GAAG,CAAC,CAAC,eAAe,KAAK,OAAO,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,EACjE,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;QAEM,4BAAuB,GAAG,IAAI,CAAC,8BAA8B,CAAC,IAAI,CACxE,GAAG,CAAC,CAAC,eAAe,KAAK,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC,CAC9F,CAAC;QAEM,sCAAiC,GACvC,IAAI,CAAC,8BAA8B,CAAC,IAAI,CACtC,GAAG,CAAC,CAAC,eAAe,MAAM;YACxB,YAAY,EAAE,eAAe,CAAC,oBAAoB,CAAC,YAAY;YAC/D,KAAK,EAAE,eAAe,CAAC,oBAAoB,CAAC,KAAK;YACjD,cAAc,EAAE,eAAe,CAAC,cAAc;YAC9C,iBAAiB,EAAE,eAAe,CAAC,iBAAiB;YACpD,UAAU,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,cAAc,EAAE,eAAe,CAAC;YAC1F,yBAAyB,EAAE,IAAI,CAAC,gBAAgB;iBAC7C,OAAO,CAAC,6DAA6D,CAAC;iBACtE,WAAW,EAAE;SACjB,CAAC,CAAC,CACJ,CAAC;QAEI,uCAAkC,GACxC,IAAI,CAAC,8BAA8B,CAAC,IAAI,CACtC,GAAG,CAAC,CAAC,eAAe,MAAM;YACxB,YAAY,EAAE,eAAe,CAAC,oBAAoB,CAAC,YAAY;YAC/D,KAAK,EAAE,eAAe,CAAC,oBAAoB,CAAC,KAAK;YACjD,cAAc,EAAE,eAAe,CAAC,cAAc;YAC9C,iBAAiB,EAAE,eAAe,CAAC,iBAAiB;SACrD,CAAC,CAAC,CACJ,CAAC;QAEI,sBAAiB,GAA0C,aAAa,CAAC;YAC/E,IAAI,CAAC,gBAAgB;YACrB,IAAI,CAAC,qBAAqB;SAC3B,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,eAAe,EAAE,oBAAoB,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,oBAAoB,CAAC,CAAC,EACtG,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;QAEM,mCAA8B,GAAuC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CACrG,GAAG,CAAC,CAAC,eAAe,KAAK,IAAI,CAAC,0BAA0B,CAAC,gCAAgC,CAAC,eAAe,CAAC,CAAC,CAC5G,CAAC;QAEM,6BAAwB,GAAuC,IAAI,CAAC,aAAa,CAAC,IAAI,CAC5F,SAAS,CAAC,CAAC,YAAqB,KAC9B,YAAY;cACR,EAAE,CAAC,IAAI,CAAC;cACR,aAAa,CAAC,CAAC,IAAI,CAAC,8BAA8B,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,CACjF,GAAG,CAAC,CAAC,CAAC,6BAA6B,EAAE,kBAAkB,CAAC,sCACnD,kBAAkB,GAClB,6BAA6B,EAChC,CAAC,CACJ,CACN,CACF,CAAC;QAEM,8BAAyB,GAAG,IAAI,CAAC,MAAM;aAC5C,MAAM,CAAC,gBAAgB,CAAC;aACxB,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAEnF,gBAAW,GAAG,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAC5D,MAAM,CAAC,CAAC,UAAU,KAAK,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,EACnD,cAAc,CAAC,IAAI,CAAC,yBAAyB,CAAC,EAC9C,GAAG,CACD,CAAC,CAAC,UAAU,EAAE,wBAAwB,CAAC,KACrC,CAAC,wBAAwB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,cAAc,EAAE,UAAU,CAAC,CACzG,EACD,GAAG,CAAC,CAAC,UAAmB;YACtB,IAAI,UAAU,EAAE;gBACd,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAC1C,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,uEAAuE,CAAC,CACvG,CAAC;aACH;SACF,CAAC,EACF,SAAS,CAAC,KAAK,CAAC,EAChB,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;QAEM,yBAAoB,GAAwB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAC7E,GAAG,CAAC,CAAC,aAAa,KAChB,IAAI,CAAC,aAAa,EAAE;YAClB,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,mBAAmB,CAAC,KAAK,EAAE,CAAC;SAC9C,CAAC,CACH,CACF,CAAC;QAEM,wBAAmB,GAAuB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAC1E,GAAG,CAAC,CAAC,KAAkC,KACrC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,0EAA0E,EAAE;YACxG,yBAAyB,EAAE,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC;YACrF,yBAAyB,EAAE,KAAK,CAAC,SAAS;kBACtC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,8DAA8D,EAAE;oBAC5F,QAAQ,EAAE,KAAK,CAAC,SAAS;iBAC1B,CAAC;kBACF,EAAE;YACN,0BAA0B,EAAE,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC;YACtF,0BAA0B,EAAE,KAAK,CAAC,SAAS;kBACvC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,8DAA8D,EAAE;oBAC5F,QAAQ,EAAE,KAAK,CAAC,SAAS;iBAC1B,CAAC;kBACF,EAAE;SACP,CAAC,CACH,CACF,CAAC;QAEM,4BAAuB,GAAuB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAC9E,GAAG,CAAC,CAAC,KAAkC,KACrC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,+EAA+E,EAAE;YAC7G,yBAAyB,EAAE,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC;YACrF,yBAAyB,EAAE,KAAK,CAAC,SAAS;kBACtC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,8DAA8D,EAAE;oBAC5F,QAAQ,EAAE,KAAK,CAAC,SAAS;iBAC1B,CAAC;kBACF,EAAE;YACN,0BAA0B,EAAE,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC;YACtF,0BAA0B,EAAE,KAAK,CAAC,SAAS;kBACvC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,8DAA8D,EAAE;oBAC5F,QAAQ,EAAE,KAAK,CAAC,SAAS;iBAC1B,CAAC;kBACF,EAAE;SACP,CAAC,CACH,CACF,CAAC;QAEM,wBAAmB,GAAwB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAC3E,cAAc,CAAC,IAAI,CAAC,uBAAuB,CAAC,EAC5C,GAAG,CACD,CAAC,CAAC,EAAE,mBAAmB,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,sBAAsB,CAAC,KAClE,CAAC,sBAAsB,IAAI,EAAE,mBAAmB,IAAI,OAAO,IAAI,OAAO,CAAC,CAC1E,CACF,CAAC;QAEM,0BAAqB,GAAwB,aAAa,CAAC;YACjE,IAAI,CAAC,QAAQ;YACb,IAAI,CAAC,oBAAoB;YACzB,IAAI,CAAC,WAAW;YAChB,IAAI,CAAC,yBAAyB;SAC/B,CAAC,CAAC,IAAI,CACL,GAAG,CACD,CAAC,CAAC,OAAO,EAAE,mBAAmB,EAAE,UAAU,EAAE,kBAAkB,CAAC,KAC7D,CAAC,OAAO,IAAI,mBAAmB,IAAI,UAAU,IAAI,kBAAkB,CACtE,CACF,CAAC;QAEM,qBAAgB,GAAkC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAClF,MAAM,CAAC,OAAO,CAAC,EACf,GAAG,CAAC,CAAC,eAA4C;YAC/C,MAAM,cAAc,GAAG,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAEzF,OAAO;gBACL;oBACE,KAAK,EACH,cAAc;wBACd,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,oEAAoE,CAAC,GAAG;oBAC5G,IAAI,EAAE,EAAE;iBACT;aACF,CAAC;SACH,CAAC,CACH,CAAC;QAEM,sBAAiB,GAAwB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CACzE,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAC1B,GAAG,CACD,CAAC,eAA4C;;QAE3C,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,yBAAyB,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAClG,CACF,CAAC;QAEF,QAAG,GAAG,aAAa,CAAC;YAClB,IAAI,CAAC,gBAAgB;YACrB,IAAI,CAAC,mBAAmB;YACxB,IAAI,CAAC,iBAAiB;YACtB,IAAI,CAAC,mBAAmB;YACxB,IAAI,CAAC,oBAAoB;YACzB,IAAI,CAAC,qBAAqB;YAC1B,IAAI,CAAC,mBAAmB;YACxB,IAAI,CAAC,qBAAqB;YAC1B,IAAI,CAAC,uBAAuB;YAC5B,IAAI,CAAC,kCAAkC;YACvC,IAAI,CAAC,iCAAiC;YACtC,IAAI,CAAC,iBAAiB;YACtB,IAAI,CAAC,wBAAwB;YAC7B,IAAI,CAAC,WAAW;SACjB,CAAC,CAAC,IAAI,CACL,GAAG,CACD,CAAC,CACC,eAAe,EACf,kBAAkB,EAClB,gBAAgB,EAChB,kBAAkB,EAClB,mBAAmB,EACnB,oBAAoB,EACpB,kBAAkB,EAClB,oBAAoB,EACpB,sBAAsB,EACtB,iCAAiC,EACjC,gCAAgC,EAChC,gBAAgB,EAChB,uBAAuB,EACvB,UAAU,CACX,MAAM;YACL,eAAe;YACf,kBAAkB;YAClB,gBAAgB;YAChB,kBAAkB;YAClB,mBAAmB;YACnB,oBAAoB;YACpB,kBAAkB;YAClB,oBAAoB;YACpB,sBAAsB;YACtB,iCAAiC;YACjC,gCAAgC;YAChC,gBAAgB;YAChB,uBAAuB;YACvB,UAAU;SACX,CAAC,CACH,CACF,CAAC;QAmIF,gCAA2B,GAAG,CAAC,MAAsB;YACnD,OAAO,IAAI,CAAC,4BAA4B,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAClE,CAAC;KAzHE;IAEJ,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,YAAY;aAC9B,IAAI,CACH,oBAAoB,CAAC,OAAO,CAAC,EAC7B,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,EACpD,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClBA,iCAA4D,CAAC;gBAC3D,2BAA2B,EAAE;oBAC3B,oBAAoB,EAAE,SAAS,CAAC,oBAAoB;oBACpD,WAAW,EAAE,SAAS,CAAC,WAAW;oBAClC,SAAS,EAAE,SAAS,CAAC,SAAS;oBAC9B,OAAO,EAAE,SAAS,CAAC,OAAO;oBAC1B,SAAS,EAAE,SAAS,CAAC,SAAS;oBAC9B,OAAO,EAAE,SAAS,CAAC,OAAO;oBAC1B,SAAS,EAAE,SAAS,CAAC,SAAS;oBAC9B,mBAAmB,EAAE,SAAS,CAAC,mBAAmB;oBAClD,IAAI,EAAE,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,QAAQ,EAAE,SAAS,CAAC,IAAI,CAAC;oBAC9E,WAAW,EAAE,SAAS,CAAC,WAAW;oBAClC,aAAa,EAAE,SAAS,CAAC,aAAa;0BAClC,yBAAyB,CAAC,QAAQ,CAAC,QAAQ;0BAC3C,yBAAyB,CAAC,QAAQ,CAAC,QAAQ;iBAChD;aACF,CAAC,CACH,CAAC;SACH,CAAC,CACH;aACA,SAAS,EAAE,CAAC;QAEf,IAAI,CAAC,gBAAgB;aAClB,IAAI,CACH,oBAAoB,CAClB,CAAC,IAAI,EAAE,GAAG,KACR,IAAI,CAAC,OAAO,KAAK,GAAG,CAAC,OAAO;YAC5B,IAAI,CAAC,SAAS,KAAK,GAAG,CAAC,SAAS;YAChC,IAAI,CAAC,mBAAmB,KAAK,GAAG,CAAC,mBAAmB;YACpD,IAAI,CAAC,aAAa,KAAK,GAAG,CAAC,aAAa,CAC3C,EACD,MAAM,CACJ,CAAC,eAA4C,KAC3C,CAAC,eAAe,CAAC,cAAc;YAC/B,CAAC,CAAC,eAAe,CAAC,OAAO;YACzB,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,yBAAyB,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAClG,EACD,SAAS,CAAC,CAAC,eAA4C,KACrD,IAAI,CAAC,0BAA0B,CAAC,oBAAoB,CAAC,eAAe,CAAC,CACtE,EACD,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,EACrC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,eAAe,CAAC;YAC7B,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClBA,iCAA4D,CAAC;oBAC3D,2BAA2B,kCAAO,eAAe,KAAE,SAAS,EAAE,CAAC,OAAO,CAAC,GAAE;iBAC1E,CAAC,CACH,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClBA,iCAA4D,CAAC;oBAC3D,2BAA2B,kCAAO,eAAe,KAAE,SAAS,EAAE,CAAC,oBAAoB,CAAC,YAAY,CAAC,EAAE,CAAC,GAAE;iBACvG,CAAC,CACH,CAAC;aACH;SACF,CAAC,EACF,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B;aACA,SAAS,EAAE,CAAC;QAEf,IAAI,CAAC,eAAe;aACjB,GAAG,CAAC,qBAAqB,CAAC;aAC1B,YAAY,CAAC,IAAI,CAChB,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAC1B,GAAG,CAAC,CAAC,mBAAmB;YACtB,IAAI,CAAC,mBAAmB,EAAE;gBACxB,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;oBAC9B,aAAa,EAAE,KAAK;iBACrB,CAAC,CAAC;aACJ;SACF,CAAC,CACH;aACA,SAAS,EAAE,CAAC;QAEf,IAAI,CAAC,MAAM;aACR,MAAM,CAAC,2BAA2B,CAAC;aACnC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACzC,SAAS,CAAC,CAAC,mBAA2B;YACrC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;SAChD,CAAC,CAAC;KACN;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,aAAa,CAAC,YAAY,EAAE;YACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAACC,IAA+B,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;SACxF;KACF;IAED,aAAa;QACX,IAAI,aAAa,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO;YAC5C,aAAa,GAAG,CAAC,OAAO,CAAC;SAC1B,CAAC,CAAC;QAEH,OAAO,aAAa,CAAC;KACtB;IAED,gBAAgB;QACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAACC,gBAA2C,EAAE,CAAC,CAAC;KACrE;IAED,cAAc,CAAC,eAAiC;QAC9C,IAAI,eAAe,CAAC,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;YACzC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,WAAW,eAAe,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;SAC7F;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,WAAW,eAAe,CAAC,IAAI,CAAC,EAAE,4BAA4B,EAAE,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;SAC/G;KACF;IAMO,QAAQ,CACd,eAA4C,EAC5C,oBAA6B;QAE7B,MAAM,gBAAgB,GAAuB,EAAE,CAAC;QAEhD,IAAI,CAAC,oBAAoB,EAAE;YACzB,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;gBACpF,gBAAgB,CAAC,IAAI,CAAC;oBACpB,IAAI,EAAE,mBAAmB,CAAC,KAAK;oBAC/B,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACxC,qEAAqE,EACrE;wBACE,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACzC,+DAA+D,CAChE;qBACF,CACF;oBACD,IAAI,EAAE;wBACJ,EAAE,EAAE,MAAM;wBACV,IAAI,EAAE,OAAO;qBACd;iBACF,CAAC,CAAC;aACJ;YAED,IAAI,eAAe,CAAC,IAAI,IAAI,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE;gBACpG,gBAAgB,CAAC,IAAI,CAAC;oBACpB,IAAI,EAAE,mBAAmB,CAAC,KAAK;oBAC/B,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACxC,6EAA6E,EAC7E;wBACE,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACzC,+DAA+D,CAChE;qBACF,CACF;oBACD,IAAI,EAAE;wBACJ,EAAE,EAAE,MAAM;wBACV,IAAI,EAAE,OAAO;qBACd;iBACF,CAAC,CAAC;aACJ;YAED,IAAI,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE;gBACpC,gBAAgB,CAAC,IAAI,CAAC;oBACpB,IAAI,EAAE,mBAAmB,CAAC,KAAK;oBAC/B,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACxC,qEAAqE,EACrE;wBACE,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACzC,uEAAuE,CACxE;qBACF,CACF;oBACD,IAAI,EAAE;wBACJ,EAAE,EAAE,cAAc;wBAClB,IAAI,EAAE,mBAAmB;qBAC1B;iBACF,CAAC,CAAC;aACJ;YAED,IAAI,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE;gBACpC,gBAAgB,CAAC,IAAI,CAAC;oBACpB,IAAI,EAAE,mBAAmB,CAAC,KAAK;oBAC/B,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACxC,qEAAqE,EACrE;wBACE,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACzC,wEAAwE,CACzE;qBACF,CACF;oBACD,IAAI,EAAE;wBACJ,EAAE,EAAE,eAAe;wBACnB,IAAI,EAAE,mBAAmB;qBAC1B;iBACF,CAAC,CAAC;aACJ;SACF;QAED,OAAO,gBAAgB,CAAC,MAAM;cAC1B;gBACE;oBACE,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,oEAAoE,CAAC;oBAC1G,MAAM,EAAE,gBAAgB;iBACzB;aACF;cACD,EAAE,CAAC;KACR;IAED,qBAAqB,CAAC,KAAwB;QAC5C,IAAI,KAAK,CAAC,IAAI,KAAK,uBAAuB,CAAC,MAAM,CAAC,mBAAmB,EAAE;YACrE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAACC,mBAA8C,EAAE,CAAC,CAAC;SACxE;KACF;IAEO,qBAAqB,CAAC,KAAa;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,KAAK,EAAkB,CAAC,CAAC;KACnE;IAED,cAAc;QACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAACC,cAAyC,EAAE,CAAC,CAAC;KACnE;IAED,WAAW;QACT,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QAC3B,IAAI,CAAC,yBAAyB,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAACC,OAAkC,EAAE,CAAC,CAAC;KAC5D;;2HA5jBU,8BAA8B;+GAA9B,8BAA8B,mQCjF3C,6sOA4KA;2FD3Fa,8BAA8B;kBAN1C,SAAS;mBAAC;oBACT,QAAQ,EAAE,yBAAyB;oBACnC,WAAW,EAAE,uCAAuC;oBACpD,SAAS,EAAE,CAAC,uCAAuC,CAAC;oBACpD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;gXAGC,aAAa;sBADZ,KAAK;gBAIN,eAAe;sBADd,MAAM;gBAIP,sBAAsB;sBADrB,MAAM;gBAIP,aAAa;sBADZ,MAAM;;;MEvEI,kCAAkC;IAa7C,YACU,cAA8B,EAC9B,MAAc,EACd,oBAA0C,EAC1C,6BAA4D,EAC5D,uBAAgD,EAChD,kBAAsC,EACtC,sBAA8C,EAC9C,gBAAkC;QAPlC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,kCAA6B,GAA7B,6BAA6B,CAA+B;QAC5D,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,qBAAgB,GAAhB,gBAAgB,CAAkB;QAnB5C,kBAAa,GAAG,KAAK,CAAC;QAEd,qBAAgB,GAAG,yBAAyB,CAAC;QAC7C,cAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,oDAAoD,CAAC,CAAC;KAiBpG;IAEJ,QAAQ;QACN,IAAI,CAAC,6BAA6B,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAE1D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,cAAc,EAAE,QAAQ,EAAE;YACpF,IAAI,CAAC,oBAAoB,CAAC,QAAQ,GAAG,QAAQ,IAAI,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;YAE1G,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,eAAe,GAAG,CAAC,cAAc,CAAC;YAEvC,IAAI,CAAC,aAAa,mCACb,IAAI,CAAC,aAAa,KACrB,QAAQ,EAAE,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAC5C,cAAc,GACf,CAAC;YAEF,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SAC5G,CAAC,CAAC;KACJ;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChC,IAAI,CAAC,6BAA6B,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;KAC3D;IAED,aAAa;;QACX,OAAO,MAAA,MAAA,IAAI,CAAC,iBAAiB,0CAAE,aAAa,EAAE,mCAAI,IAAI,CAAC;KACxD;IAED,mBAAmB;QACjB,OAAO,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,EAAE,CAAC;KAC5D;IAED,eAAe;QACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACnB,cAAc,CAAC,wBAAwB;YACvC,IAAI,CAAC,oBAAoB,CAAC,QAAQ;YAClC,IAAI,CAAC,gBAAgB;SACtB,CAAC,CAAC;KACJ;IAED,iBAAiB,CAAC,cAAsB;QACtC,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,cAAc,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,CAAC;SAC7F;KACF;IAED,wBAAwB;QACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,CAAC;KAChH;;+HAxEU,kCAAkC;mHAAlC,kCAAkC,uHAUlC,8BAA8B,gDC9B3C,gRAOA;2FDaa,kCAAkC;kBAJ9C,SAAS;mBAAC;oBACT,QAAQ,EAAE,8BAA8B;oBACxC,WAAW,EAAE,4CAA4C;iBAC1D;0VAYS,iBAAiB;sBADxB,SAAS;uBAAC,8BAA8B;;;MEO9B,0BAA0B;IACrC,YACU,MAAkB,EAClB,QAAiB,EACjB,YAA0B,EAC1B,yBAAoD,EACpD,0BAAsD,EACtD,yBAAoD,EACpD,6BAA4D,EAC5D,8BAA8D,EAC9D,cAA8B,EAC9B,qBAA4C,EAC5C,gBAAkC;QAVlC,WAAM,GAAN,MAAM,CAAY;QAClB,aAAQ,GAAR,QAAQ,CAAS;QACjB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,8BAAyB,GAAzB,yBAAyB,CAA2B;QACpD,+BAA0B,GAA1B,0BAA0B,CAA4B;QACtD,8BAAyB,GAAzB,yBAAyB,CAA2B;QACpD,kCAA6B,GAA7B,6BAA6B,CAA+B;QAC5D,mCAA8B,GAA9B,8BAA8B,CAAgC;QAC9D,mBAAc,GAAd,cAAc,CAAgB;QAC9B,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,qBAAgB,GAAhB,gBAAgB,CAAkB;QAG5C,6BAAwB,GAAG,YAAY,CAAC,MACtC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAACJ,IAA+B,CAAC,EACvC,GAAG,CAAC,MAAMK,cAAyC,EAAE,CAAC,CACvD,CACF,CAAC;QAEF,oBAAe,GAAG,YAAY,CAAC,MAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAACA,cAAyC,CAAC,EACjD,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,EAC1D,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,cAAc,CAAC,KAC5B,cAAc;cACV,IAAI,CAAC,8BAA8B,CAAC,GAAG,CAAC,cAAc,CAAC;cACvD,IAAI,CAAC,8BAA8B,CAAC,MAAM,EAAE,CACjD,EACD,GAAG,CAAC,CAAC,UAAkC,KAAKC,qBAAgD,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC,CAC9G,CACF,CAAC;QAEF,2BAAsB,GAAG,YAAY,CAAC,MACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAACA,qBAAgD,CAAC,EACxD,GAAG,CAAC,CAAC,MAAM,KACTC,kBAA6C,CAAC;YAC5C,UAAU,EAAE,MAAM,CAAC,UAAU;YAC7B,eAAe,EAAE,IAAI,CAAC,0BAA0B,CAAC,gCAAgC,CAAC,MAAM,CAAC,UAAU,CAAC;SACrG,CAAC,CACH,CACF,CACF,CAAC;QAEF,oBAAe,GAAG,YAAY,CAAC,MAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAACJ,cAAyC,CAAC,EACjD,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC,EAC3D,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,eAAe,CAAC,KAC5B,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,yBAAyB,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK;cAC3FK,wBAAmD,EAAE;cACrDC,mBAA8C,CAAC,EAAE,0BAA0B,EAAE,IAAI,EAAE,CAAC,CACzF,CACF,CACF,CAAC;QAEF,yBAAoB,GAAG,YAAY,CAAC,MAClC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAACA,mBAA8C,CAAC,EACtD,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC,EAC3D,SAAS,CAAC,CAAC,CAAC,MAAM,EAAE,eAAe,CAAqC,KACtE,IAAI,CAAC,0BAA0B,CAAC,mBAAmB,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,IAAI,CACrF,GAAG,CAAC,CAAC,UAAU;YACb,IAAI,MAAM,CAAC,0BAA0B,EAAE;gBACrC,OAAOC,8BAAyD,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;aAClF;iBAAM,IAAI,MAAM,CAAC,2BAA2B,EAAE;gBAC7C,OAAOC,qBAAgD,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;aACzE;SACF,CAAC,EACF,UAAU,CAAC,CAAC,KAAK;YACf,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAErC,OAAO,EAAE,CAACC,wBAAmD,EAAE,CAAC,CAAC;SAClE,CAAC,CACH,CACF,CACF,CACF,CAAC;QAEF,oCAA+B,GAAG,YAAY,CAAC,MAC7C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAACF,8BAAyD,CAAC,EACjE,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC,EAC3D,SAAS,CAAC,CAAC,CAAC,MAAM,EAAE,eAAe,CAAqC;YACtE,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE;gBACnC,OAAO,IAAI,CAAC,0BAA0B,CAAC,oBAAoB,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC,IAAI,CACrF,GAAG,CAAC,CAAC,iBAAyB;;gBAE5BG,kCAA6D,CAAC;oBAC5D,OAAO,EAAE;wBACP,wBAAwB,EAAE,iBAAiB;wBAC3C,wBAAwB,EAAE,CAAC,iBAAiB;qBAC7C;iBACF,CAAC,CACH,EACD,UAAU,CAAC,CAAC,KAAK;oBACf,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;oBAErC,OAAO,EAAE,CAACC,yBAAoD,EAAE,CAAC,CAAC;iBACnE,CAAC,CACH,CAAC;aACH;iBAAM,IAAI,eAAe,CAAC,cAAc,EAAE;gBACzC,MAAM,uBAAuB,GAAG,MAAM,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,OAAO,KACxE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,gBAAgB,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,CAC1D,CAAC;gBAEF,OAAO;oBACLD,kCAA6D,CAAC;wBAC5D,OAAO,EAAE;4BACP,wBAAwB,EAAE,IAAI;4BAC9B,wBAAwB,EAAE,uBAAuB,CAAC,MAAM,GAAG,CAAC;yBAC7D;qBACF,CAAC;iBACH,CAAC;aACH;iBAAM;gBACL,OAAO;oBACLA,kCAA6D,CAAC;wBAC5D,OAAO,EAAE;4BACP,wBAAwB,EAAE,IAAI;4BAC9B,wBAAwB,EAAE,KAAK;yBAChC;qBACF,CAAC;iBACH,CAAC;aACH;SACF,CAAC,CACH,CACF,CAAC;QAEF,wCAAmC,GAAG,YAAY,CAAC,MACjD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAACA,kCAA6D,CAAC,EACrE,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,2BAA2B,CAAC,CAAC,EAC/D,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,mBAAmB,CAAC,KAChC,mBAAmB;cACfJ,mBAA8C,CAAC,EAAE,2BAA2B,EAAE,IAAI,EAAE,CAAC;cACrFD,wBAAmD,EAAE,CAC1D,CACF,CACF,CAAC;QAEF,2BAAsB,GAAG,YAAY,CAAC,MACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAACG,qBAAgD,CAAC,EACxD,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC,EAC3D,SAAS,CAAC,CAAC,CAAC,MAAM,EAAE,eAAe,CAAC;YAClC,MAAM,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAEhD,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC;gBAC/B,YAAY,EAAE,oBAAoB,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY;gBACnE,IAAI,EAAE,IAAI,CAAC,0BAA0B,CAAC,sBAAsB,CAAC,eAAe,CAAC;gBAC7E,WAAW,EAAE,IAAI;gBACjB,WAAW,EAAE,iBAAiB,CAAC,QAAQ;gBACvC,SAAS,EAAE,GAAG;gBACd,YAAY,EAAE,IAAI;aACC,CAAC,CAAC;YAEvB,OAAO,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAC3D,GAAG,CAAC,MAAMI,4BAAuD,EAAE,CAAC,EACpE,UAAU,CAAC,CAAC,KAAK;gBACf,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBAErC,OAAO,EAAE,CAACC,0BAAqD,EAAE,CAAC,CAAC;aACpE,CAAC,CACH,CAAC;SACH,CAAC,CACH,CACF,CAAC;QAEF,kCAA6B,GAAG,YAAY,CAAC,MAC3C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAACD,4BAAuD,CAAC,EAC/D,GAAG,CAAC,MAAME,2BAAsD,EAAE,CAAC,CACpE,CACF,CAAC;QAEF,iCAA4B,GAAG,YAAY,CAAC,MAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAACA,2BAAsD,CAAC,EAC9D,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC,EAC3D,SAAS,CAAC,CAAC,CAAC,MAAM,EAAE,eAAe,CAAC,KAClC,IAAI,CAAC,0BAA0B,CAAC,oBAAoB,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC,IAAI,CAC9E,GAAG,CAAC,CAAC,OAAe,KAAKC,kCAA6D,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,EACpG,UAAU,CAAC,CAAC,KAAK;YACf,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAErC,OAAO,EAAE,CAACC,gCAA2D,EAAE,CAAC,CAAC;SAC1E,CAAC,CACH,CACF,CACF,CACF,CAAC;QAEF,wCAAmC,GAAG,YAAY,CAAC,MACjD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAACD,kCAA6D,CAAC,EACrE,GAAG,CAAC,MAAMV,wBAAmD,EAAE,CAAC,CACjE,CACF,CAAC;QAEF,8BAAyB,GAAG,YAAY,CAAC,MACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAACA,wBAAmD,CAAC,EAC3D,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC,EAC3G,SAAS,CAAC,CAAC,CAAC,MAAM,EAAE,eAAe,EAAE,kBAAkB,CAAC;YACtD,MAAM,UAAU,GAAG,IAAI,CAAC,0BAA0B,CAAC,gCAAgC,CAAC,eAAe,CAAC,CAAC;YAErG,OAAO,eAAe,CAAC,cAAc;kBACjC,IAAI,CAAC,yBAAyB;qBAC3B,OAAO,CACN,IAAI,CAAC,8BAA8B,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,8BAA8B,kCAC9E,kBAAkB,GAClB,UAAU,EACb,CACH;qBACA,IAAI,CACH,GAAG,CAAC,MACFY,qBAAgD,CAAC;oBAC/C,mBAAmB,EAAE,eAAe,CAAC,IAAI;iBAC1C,CAAC,CACH,EACD,UAAU,CAAC,CAAC,KAAK;oBACf,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;oBAErC,OAAO,EAAE,CAACC,qBAAgD,EAAE,CAAC,CAAC;iBAC/D,CAAC,CACH;kBACH,IAAI,CAAC,8BAA8B,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CACzD,GAAG,CAAC,CAAC,QAA2B;;oBAC9B,MAAM,mBAAmB,GACvB,kBAAkB,CAAC,IAAI,CAAC,MAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,OAAO,0CAAE,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC;oBAExG,OAAOD,qBAAgD,CAAC;wBACtD,mBAAmB;qBACpB,CAAC,CAAC;iBACJ,CAAC,EACF,UAAU,CAAC,CAAC,KAAK;oBACf,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;;;oBAIrC,OAAO,EAAE,CAACE,qBAAgD,EAAE,CAAC,CAAC;iBAC/D,CAAC,CACH,CAAC;SACP,CAAC,CACH,CACF,CAAC;QAEF,2BAAsB,GAAG,YAAY,CAAC,MACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAACA,qBAAgD,CAAC,EACxD,GAAG,CAAC,MAAMC,yBAAoD,EAAE,CAAC,CAClE,CACF,CAAC;QAEF,+BAA0B,GAAG,YAAY,CAAC,MACxC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAACA,yBAAoD,CAAC,EAC5D,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,2BAA2B,CAAC,CAAC,EAC/D,MAAM,CAAC,CAAC,CAAC,MAAM,EAAE,mBAAmB,CAAC,KAAK,mBAAmB,CAAC,EAC9D,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC,EAC3D,SAAS,CAAC,CAAC,CAAC,MAAM,EAAE,eAAe,CAAC,KAClC,QAAQ,CAAC;YACP,IAAI,CAAC,0BAA0B,CAAC,oBAAoB,CAAC,eAAe,EAAE,IAAI,CAAC;YAC3E,IAAI,CAAC,0BAA0B,CAAC,mBAAmB,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC;SACnF,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,iBAAiB,EAAE,UAAU,CAAC;YAClC,UAAU,CAAC,gBAAgB,GAAG,MAAM,CAAC,UAAU,CAAC,gBAAgB,EAAE;gBAChE,EAAE,EAAE,iBAAiB;aACtB,CAAC,CAAC;YAEH,OAAOC,4BAAuD,CAAC,EAAE,iBAAiB,EAAE,UAAU,EAAE,CAAC,CAAC;SACnG,CAAC,EACF,UAAU,CAAC,CAAC,KAAK;YACf,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAErC,OAAO,EAAE,CAACC,8BAAyD,EAAE,CAAC,CAAC;SACxE,CAAC,CACH,CACF,CACF,CACF,CAAC;QAEF,kCAA6B,GAAG,YAAY,CAAC,MAC3C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAACD,4BAAuD,CAAC,EAC/D,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,2BAA2B,CAAC,CAAC,EAC/D,MAAM,CAAC,CAAC,CAAC,MAAM,EAAE,mBAAmB,CAAC,KAAK,mBAAmB,CAAC,EAC9D,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC;YACjB,MAAM,UAAU,mCACX,MAAM,CAAC,UAAU,KACpB,gBAAgB,EAAE,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,gBAAgB,EAAE;oBAC3D,EAAE,EAAE,MAAM,CAAC,iBAAiB;iBAC7B,CAAC,GACH,CAAC;YAEF,OAAO,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAC3D,GAAG,CAAC,MAAME,mCAA8D,EAAE,CAAC,EAC3E,UAAU,CAAC,CAAC,KAAK;gBACf,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBAErC,OAAO,EAAE,CAACC,iCAA4D,EAAE,CAAC,CAAC;aAC3E,CAAC,CACH,CAAC;SACH,CAAC,CACH,CACF,CAAC;QAEF,2BAAsB,GAAG,YAAY,CAAC,MACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAACP,qBAAgD,CAAC,EACxD,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,EAC1D,GAAG,CAAC;YACF,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAC1C,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,wEAAwE,EAAE;gBACtG,yBAAyB,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACtD,6DAA6D,CAC9D;aACF,CAAC,CACH,CAAC;SACH,CAAC,EACF,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,EACjD,GAAG,CAAC,MAAMf,cAAyC,EAAE,CAAC,CACvD,CACF,CAAC;QAEF,yBAAoB,GAAG,YAAY,CACjC,MACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAACH,mBAA8C,CAAC,EACtD,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC,EAC3D,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,KAC7B,IAAI,CAAC,8BAA8B,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,CAC9E,EACD,GAAG,CAAC;YACF,IAAI,CAAC,6BAA6B,CAAC,OAAO,EAAE,CAAC;YAC7C,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;SAC1B,CAAC,CACH,EACH,EAAE,QAAQ,EAAE,KAAK,EAAE,CACpB,CAAC;QAEF,kBAAa,GAAG,YAAY,CAAC,MAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CACJK,kBAA6C,EAC7CJ,cAAyC,EACzCiB,qBAAgD,CACjD,EACD,GAAG,CAAC,MAAMQ,oBAA+C,EAAE,CAAC,CAC7D,CACF,CAAC;QAEF,eAAU,GAAG,YAAY,CAAC,MACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CACJ7B,iCAA4D,EAC5Da,wBAAmD,EACnDE,yBAAoD,EACpDE,0BAAqD,EACrDS,8BAAyD,EACzDH,qBAAgD,EAChDD,qBAAgD,EAChDM,iCAA4D,CAC7D,EACD,GAAG,CAAC,MAAME,iBAA4C,EAAE,CAAC,CAC1D,CACF,CAAC;KApWE;;uHAbO,0BAA0B;2HAA1B,0BAA0B;2FAA1B,0BAA0B;kBADtC,UAAU;;;AC5BX,MAAM,sBAAsB,GAAgC;IAC1D,WAAW,EAAE;QACX;YACE,KAAK,EAAE,iBAAiB,CAAC,QAAQ;YACjC,QAAQ,EAAE,kEAAkE;SAC7E;KACF;IACD,WAAW,EAAE,IAAI;IACjB,IAAI,EAAE,IAAI;IACV,SAAS,EAAE,IAAI;IACf,IAAI,EAAE,IAAI;IACV,OAAO,EAAE,IAAI;IACb,SAAS,EAAE,CAAC,oBAAoB,CAAC,YAAY,CAAC,EAAE,CAAC;IACjD,SAAS,EAAE,CAAC,oBAAoB,CAAC,YAAY,CAAC,EAAE,CAAC;IACjD,aAAa,EAAE,cAAc,CAAC,QAAQ;IACtC,SAAS,EAAE,IAAI;IACf,OAAO,EAAE,IAAI;IACb,SAAS,EAAE,IAAI;IACf,mBAAmB,EAAE,KAAK;IAC1B,oBAAoB,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE;CAC9D,CAAC;AAEK,MAAM,YAAY,GAA8B;IACrD,QAAQ,EAAE,IAAI;IACd,cAAc,EAAE,IAAI;IACpB,YAAY,EAAE,IAAI;IAClB,eAAe,EAAE,sBAAsB;IACvC,6BAA6B,EAAE,sBAAsB;IACrD,OAAO,EAAE,KAAK;IACd,mBAAmB,EAAE,KAAK;IAC1B,mBAAmB,EAAE,KAAK;IAC1B,mBAAmB,EAAE,IAAI;IACzB,kBAAkB,EAAE,IAAI;CACzB,CAAC;AAEF,MAAM,OAAO,GAAG,aAAa,CAC3B,YAAY,EAEZ,EAAE,CAAC7B,IAA+B,EAAE,CAAC,KAAgC,EAAE,EAAE,OAAO,EAAE,sCAC7E,YAAY,KACf,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAC1B,cAAc,EAAE,OAAO,CAAC,cAAc,EACtC,mBAAmB,EAAE,KAAK,IAC1B,CAAC,EAEH,EAAE,CACAO,kBAA6C,EAC7C,CAAC,KAAgC,EAAE,EAAE,UAAU,EAAE,eAAe,EAAE,sCAC7D,KAAK,KACR,eAAe,EACf,6BAA6B,EAAE,eAAe,EAC9C,kBAAkB,EAAE,UAAU,IAC9B,CACH,EAED,EAAE,CACAR,iCAA4D,EAC5D,CAAC,KAAgC,EAAE,EAAE,2BAA2B,EAAE,sCAC7D,KAAK,KACR,eAAe,kCAAO,KAAK,CAAC,eAAe,GAAK,2BAA2B,KAC3E,CACH,EAED,EAAE,CAACE,gBAA2C,EAAE,CAAC,KAAgC,sCAC5E,KAAK,KACR,YAAY,EAAE,CAAC,KAAK,CAAC,YAAY,IACjC,CAAC,EAEH,EAAE,CACAY,kCAA6D,EAC7D,CAAC,KAAgC,EAAE,EAAE,OAAO,EAAE,sCACzC,KAAK,KACR,mBAAmB,EAAE,OAAO,CAAC,wBAAwB,EACrD,eAAe,kCACV,KAAK,CAAC,eAAe,KACxB,SAAS,EAAE,OAAO,CAAC,wBAAwB;cACvC,CAAC,OAAO,CAAC,wBAAwB,CAAC;cAClC,KAAK,CAAC,eAAe,CAAC,SAAS,OAErC,CACH,EAED,EAAE,CAACG,0BAAqD,EAAE,CAAC,KAAgC,sCACtF,KAAK,KACR,mBAAmB,EAAE,KAAK,IAC1B,CAAC,EAEH,EAAE,CAACD,4BAAuD,EAAE,CAAC,KAAgC,sCACxF,KAAK,KACR,mBAAmB,EAAE,IAAI,IACzB,CAAC,EAEH,EAAE,CACAG,kCAA6D,EAC7D,CAAC,KAAgC,EAAE,EAAE,OAAO,EAAE,sCACzC,KAAK,KACR,eAAe,kCAAO,KAAK,CAAC,eAAe,KAAE,SAAS,EAAE,CAAC,OAAO,CAAC,OACjE,CACH,EAED,EAAE,CAACE,qBAAgD,EAAE,CAAC,KAAgC,EAAE,EAAE,mBAAmB,EAAE,sCAC1G,KAAK,KACR,mBAAmB,IACnB,CAAC,EAEH,EAAE,CAACQ,oBAA+C,EAAE,CAAC,KAAgC,sCAChF,KAAK,KACR,OAAO,EAAE,KAAK,IACd,CAAC,EAEH,EAAE,CAACC,iBAA4C,EAAE,CAAC,KAAgC,sCAC7E,KAAK,KACR,OAAO,EAAE,IAAI,IACb,CAAC,EAEH,EAAE,CAACzB,OAAkC,EAAE,CAAC,KAAgC,wBACnE,YAAY,EACf,CAAC,CACJ,CAAC;SAEc,+BAA+B,CAAC,KAAgC,EAAE,MAAc;IAC9F,OAAO,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAChC;;MCnFa,2BAA2B;;wHAA3B,2BAA2B;yHAA3B,2BAA2B,iBAxBvB,8BAA8B,aAE3C,kBAAkB;QAClB,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,sBAAsB;QACtB,wBAAwB;QACxB,wBAAwB;QACxB,wBAAwB;QACxB,0BAA0B;QAC1B,2BAA2B;QAC3B,eAAe;QACf,kBAAkB;QAClB,qBAAqB;QACrB,eAAe,+DAMP,8BAA8B;yHAG7B,2BAA2B,aAF3B,CAAC,4BAA4B,EAAE,oBAAoB,CAAC,YArBtD;YACP,kBAAkB;YAClB,YAAY;YACZ,WAAW;YACX,mBAAmB;YACnB,sBAAsB;YACtB,wBAAwB;YACxB,wBAAwB;YACxB,wBAAwB;YACxB,0BAA0B;YAC1B,2BAA2B;YAC3B,eAAe;YACf,kBAAkB;YAClB,qBAAqB;YACrB,eAAe;YACf,WAAW,CAAC,UAAU,CAAC,uBAAuB,CAAC,eAAe,EAAE;gBAC9D,KAAK,EAAE,+BAA+B;aACvC,CAAC;YACF,aAAa,CAAC,UAAU,CAAC,CAAC,0BAA0B,CAAC,CAAC;SACvD;2FAIU,2BAA2B;kBAzBvC,QAAQ;mBAAC;oBACR,YAAY,EAAE,CAAC,8BAA8B,CAAC;oBAC9C,OAAO,EAAE;wBACP,kBAAkB;wBAClB,YAAY;wBACZ,WAAW;wBACX,mBAAmB;wBACnB,sBAAsB;wBACtB,wBAAwB;wBACxB,wBAAwB;wBACxB,wBAAwB;wBACxB,0BAA0B;wBAC1B,2BAA2B;wBAC3B,eAAe;wBACf,kBAAkB;wBAClB,qBAAqB;wBACrB,eAAe;wBACf,WAAW,CAAC,UAAU,CAAC,uBAAuB,CAAC,eAAe,EAAE;4BAC9D,KAAK,EAAE,+BAA+B;yBACvC,CAAC;wBACF,aAAa,CAAC,UAAU,CAAC,CAAC,0BAA0B,CAAC,CAAC;qBACvD;oBACD,OAAO,EAAE,CAAC,8BAA8B,CAAC;oBACzC,SAAS,EAAE,CAAC,4BAA4B,EAAE,oBAAoB,CAAC;iBAChE;;;MCnCY,+BAA+B;;4HAA/B,+BAA+B;6HAA/B,+BAA+B,iBAJ3B,kCAAkC,aACvC,YAAY,EAAE,2BAA2B,aACzC,kCAAkC;6HAEjC,+BAA+B,YAHjC,CAAC,YAAY,EAAE,2BAA2B,CAAC;2FAGzC,+BAA+B;kBAL3C,QAAQ;mBAAC;oBACR,YAAY,EAAE,CAAC,kCAAkC,CAAC;oBAClD,OAAO,EAAE,CAAC,YAAY,EAAE,2BAA2B,CAAC;oBACpD,OAAO,EAAE,CAAC,kCAAkC,CAAC;iBAC9C;;;ACVD;;;;;;"}