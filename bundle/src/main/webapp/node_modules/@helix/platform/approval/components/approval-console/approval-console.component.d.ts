import { OnDestroy, OnInit, TemplateRef } from '@angular/core';
import { Observable, Subject } from 'rxjs';
import { IRecordGridColumn, IRecordGridConfig, RecordGridComponent, RxRecordGridFilterService } from '@helix/platform/view/components';
import { RxRecordInstanceService, RxRecordInstanceDataPageService } from '@helix/platform/record/api';
import { TranslateService } from '@ngx-translate/core';
import { DataCellTemplateParams } from '@bmc-ux/adapt-table';
import { RxSignatureDetailDataPageService } from './signature-detail-data-page.service';
import { IDataPageResult, RxCurrentUserService, RxDefinitionNameService, RxNotificationService } from '@helix/platform/shared/api';
import { RxApprovalConsoleService } from './approval-console.service';
import { IApprovalRequestCounts, IApprovalRequestType } from './approval-console.types';
import { RxModalService } from '@helix/platform/ui-kit';
import { IRowDataItem } from '@helix/platform/view/api';
import { ActiveTabChangeEvent, AdaptModalService, AdaptTabsComponent, KeyValueObject } from '@bmc-ux/adapt-angular';
import { RxApprovalConsoleHelperService } from './approval-console-helper.service';
import { RxStringService } from '@helix/platform/utils';
import { BaseViewComponent } from '@helix/platform/view/runtime';
import * as i0 from "@angular/core";
export declare class ApprovalConsoleComponent extends BaseViewComponent implements OnInit, OnDestroy {
    private rxStringService;
    private rxApprovalConsoleHelperService;
    private rxCurrentUserService;
    private translateService;
    private rxModalService;
    private rxNotificationService;
    private rxApprovalConsoleService;
    private rxRecordInstanceService;
    private adaptModalService;
    private rxSignatureDetailDataPageService;
    private recordGridFilterService;
    private rxRecordInstanceDataPageService;
    protected rxDefinitionNameService: RxDefinitionNameService;
    gridConfig$: Observable<IRecordGridConfig>;
    requestDetailsTabs: AdaptTabsComponent;
    resolvedFieldCellTemplate: TemplateRef<DataCellTemplateParams>;
    definitionNameCellTemplate: TemplateRef<DataCellTemplateParams>;
    approvalRequestsGrid: RecordGridComponent;
    shouldShowGrid: boolean;
    selectedApprovalRequestsTab: IApprovalRequestType;
    approvalRequestTypes: IApprovalRequestType[];
    dataLoaded$: Subject<void>;
    selectedApprovalRequest: IRowDataItem;
    attentionGridParams: KeyValueObject;
    needAttentionRequestCount$: Observable<IDataPageResult<KeyValueObject<any>>>;
    availableRequestCount$: Observable<IApprovalRequestCounts>;
    activeTabIndex: number;
    selectedRecordIndex: number;
    private gridSubscription;
    private isReassignButtonDisabled;
    private selectedRecordsInSequence;
    constructor(rxStringService: RxStringService, rxApprovalConsoleHelperService: RxApprovalConsoleHelperService, rxCurrentUserService: RxCurrentUserService, translateService: TranslateService, rxModalService: RxModalService, rxNotificationService: RxNotificationService, rxApprovalConsoleService: RxApprovalConsoleService, rxRecordInstanceService: RxRecordInstanceService, adaptModalService: AdaptModalService, rxSignatureDetailDataPageService: RxSignatureDetailDataPageService, recordGridFilterService: RxRecordGridFilterService, rxRecordInstanceDataPageService: RxRecordInstanceDataPageService, rxDefinitionNameService: RxDefinitionNameService);
    ngOnInit(): void;
    onDataLoaded(): void;
    approveRequest(): void;
    rejectRequest(): void;
    holdRequest(): void;
    reassignRequest(): void;
    isHoldButtonDisabled(): boolean;
    get currentRequestId(): string;
    get selectedApprovalRequestCount(): number;
    fetchApprovalRequests(event: ActiveTabChangeEvent): void;
    showNextRequestDetails(): void;
    showPreviousRequestDetails(): void;
    isPreviousButtonDisabled(): boolean;
    isNextButtonDisabled(): boolean;
    isApprovalRequestGrid(): boolean;
    isNeedAttentionGrid(): boolean;
    onTabChanged(event: ActiveTabChangeEvent): void;
    needAttentionGridColumns(): IRecordGridColumn[];
    ngOnDestroy(): void;
    onQuestionSubmitted(): void;
    private getData;
    private getNeedAttentionData;
    private updateGridConfig;
    private prepareGridConfiguration;
    private getActionButtons;
    private reloadGridData;
    private openQuestionResponseDialog;
    private getColumns;
    private getRecordDefinition;
    static ɵfac: i0.ɵɵFactoryDeclaration<ApprovalConsoleComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ApprovalConsoleComponent, "rx-approval-console", never, {}, {}, never, never>;
}
