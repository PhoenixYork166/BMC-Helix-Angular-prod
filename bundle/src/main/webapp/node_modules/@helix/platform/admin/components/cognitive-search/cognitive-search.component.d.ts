import { ElementRef, OnInit, TemplateRef } from '@angular/core';
import { FormBuilder } from '@angular/forms';
import { DataCellTemplateParams } from '@bmc-ux/adapt-table';
import { RxRecordInstanceService, RxRecordInstanceDataPageService } from '@helix/platform/record/api';
import { RxBundleCacheService, RxCurrentUserService, RxDefinitionNameService, RxNotificationService } from '@helix/platform/shared/api';
import { RxModalService } from '@helix/platform/ui-kit';
import { IRowDataItem } from '@helix/platform/view/api';
import { IRecordGridConfig, RecordGridComponent } from '@helix/platform/view/components';
import { TranslateService } from '@ngx-translate/core';
import { Observable } from 'rxjs';
import { ISearchDataset } from './cognitive-search.interfaces';
import { BaseViewComponent } from '@helix/platform/view/runtime';
import * as i0 from "@angular/core";
export declare class CognitiveSearchAdminComponent extends BaseViewComponent implements OnInit {
    private formBuilder;
    private rxModalService;
    private rxCurrentUserService;
    private rxBundleCacheService;
    private rxNotificationService;
    private rxRecordInstanceService;
    private rxDefinitionNameService;
    private translateService;
    private rxRecordInstanceDataPageService;
    gridConfig: Observable<IRecordGridConfig>;
    searchDatasetTypes: ISearchDataset[];
    grid: RecordGridComponent;
    dropdownButton: ElementRef;
    searchDatasetConfigurationTemplate: TemplateRef<any>;
    definitionNameCellTemplate: TemplateRef<DataCellTemplateParams>;
    datasetTypeTemplate: TemplateRef<DataCellTemplateParams>;
    isAdministrator: boolean;
    constructor(formBuilder: FormBuilder, rxModalService: RxModalService, rxCurrentUserService: RxCurrentUserService, rxBundleCacheService: RxBundleCacheService, rxNotificationService: RxNotificationService, rxRecordInstanceService: RxRecordInstanceService, rxDefinitionNameService: RxDefinitionNameService, translateService: TranslateService, rxRecordInstanceDataPageService: RxRecordInstanceDataPageService);
    ngOnInit(): void;
    private getData;
    createNewSearchDataset(datasetType: number): void;
    editSearchDataset(selectedRecord: IRowDataItem): void;
    private deleteSearchDataset;
    formatDataSource(dataSource: string): string;
    getDatasetType(searchDatasetType: number): string;
    private getColumns;
    private openCognitiveSearchEditor;
    static ɵfac: i0.ɵɵFactoryDeclaration<CognitiveSearchAdminComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CognitiveSearchAdminComponent, "rx-cognitive-search", never, {}, {}, never, never>;
}
