{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport * as i1 from '@helix/platform/shared/api';\nimport { DataPage } from '@helix/platform/shared/api';\nclass RxWebApiDefinitionDataPageService extends DataPage {\n  constructor(injector) {\n    super(injector, 'com.bmc.arsys.rx.application.webapi.datapage.WebApiDefinitionDataPageQuery');\n    this.injector = injector;\n  }\n}\nRxWebApiDefinitionDataPageService.ɵfac = function RxWebApiDefinitionDataPageService_Factory(t) {\n  return new (t || RxWebApiDefinitionDataPageService)(i0.ɵɵinject(i0.Injector));\n};\nRxWebApiDefinitionDataPageService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxWebApiDefinitionDataPageService,\n  factory: RxWebApiDefinitionDataPageService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxWebApiDefinitionDataPageService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }];\n  }, null);\n})();\nclass RxWebApiDefinitionService {\n  constructor(rxCommandFactoryService) {\n    this.rxCommandFactoryService = rxCommandFactoryService;\n  }\n  rename(oldWebApiDefinitionName, newWebApiDefinitionName) {\n    const renameCommand = this.rxCommandFactoryService.forResourceType('com.bmc.arsys.rx.application.webapi.command.RenameWebApiDefinitionCommand');\n    return renameCommand.execute({\n      name: oldWebApiDefinitionName,\n      newName: newWebApiDefinitionName\n    });\n  }\n}\nRxWebApiDefinitionService.ɵfac = function RxWebApiDefinitionService_Factory(t) {\n  return new (t || RxWebApiDefinitionService)(i0.ɵɵinject(i1.RxCommandFactoryService));\n};\nRxWebApiDefinitionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxWebApiDefinitionService,\n  factory: RxWebApiDefinitionService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxWebApiDefinitionService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.RxCommandFactoryService\n    }];\n  }, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RxWebApiDefinitionDataPageService, RxWebApiDefinitionService };\n//# sourceMappingURL=helix-platform-web-api-api.js.map","map":{"version":3,"names":["i0","Injectable","i1","DataPage","RxWebApiDefinitionDataPageService","constructor","injector","ɵfac","RxWebApiDefinitionDataPageService_Factory","t","ɵɵinject","Injector","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","RxWebApiDefinitionService","rxCommandFactoryService","rename","oldWebApiDefinitionName","newWebApiDefinitionName","renameCommand","forResourceType","execute","name","newName","RxWebApiDefinitionService_Factory","RxCommandFactoryService"],"sources":["C:/projects/innovation-studio-developer/22.1/test210500/bundle/src/main/webapp/node_modules/@helix/platform/fesm2015/helix-platform-web-api-api.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport * as i1 from '@helix/platform/shared/api';\nimport { DataPage } from '@helix/platform/shared/api';\n\nclass RxWebApiDefinitionDataPageService extends DataPage {\n    constructor(injector) {\n        super(injector, 'com.bmc.arsys.rx.application.webapi.datapage.WebApiDefinitionDataPageQuery');\n        this.injector = injector;\n    }\n}\nRxWebApiDefinitionDataPageService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxWebApiDefinitionDataPageService, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nRxWebApiDefinitionDataPageService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxWebApiDefinitionDataPageService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxWebApiDefinitionDataPageService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }]; } });\n\nclass RxWebApiDefinitionService {\n    constructor(rxCommandFactoryService) {\n        this.rxCommandFactoryService = rxCommandFactoryService;\n    }\n    rename(oldWebApiDefinitionName, newWebApiDefinitionName) {\n        const renameCommand = this.rxCommandFactoryService.forResourceType('com.bmc.arsys.rx.application.webapi.command.RenameWebApiDefinitionCommand');\n        return renameCommand.execute({\n            name: oldWebApiDefinitionName,\n            newName: newWebApiDefinitionName\n        });\n    }\n}\nRxWebApiDefinitionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxWebApiDefinitionService, deps: [{ token: i1.RxCommandFactoryService }], target: i0.ɵɵFactoryTarget.Injectable });\nRxWebApiDefinitionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxWebApiDefinitionService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxWebApiDefinitionService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.RxCommandFactoryService }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RxWebApiDefinitionDataPageService, RxWebApiDefinitionService };\n//# sourceMappingURL=helix-platform-web-api-api.js.map\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAO,KAAKC,EAAE,MAAM,4BAA4B;AAChD,SAASC,QAAQ,QAAQ,4BAA4B;AAErD,MAAMC,iCAAiC,SAASD,QAAQ,CAAC;EACrDE,WAAWA,CAACC,QAAQ,EAAE;IAClB,KAAK,CAACA,QAAQ,EAAE,4EAA4E,CAAC;IAC7F,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC5B;AACJ;AACAF,iCAAiC,CAACG,IAAI,YAAAC,0CAAAC,CAAA;EAAA,YAAAA,CAAA,IAAwFL,iCAAiC,EAA3CJ,EAAE,CAAAU,QAAA,CAA2DV,EAAE,CAACW,QAAQ;AAAA,CAA6C;AACzOP,iCAAiC,CAACQ,KAAK,kBAD6EZ,EAAE,CAAAa,kBAAA;EAAAC,KAAA,EACYV,iCAAiC;EAAAW,OAAA,EAAjCX,iCAAiC,CAAAG,IAAA;EAAAS,UAAA,EAAc;AAAM,EAAG;AAC1L;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAFoHjB,EAAE,CAAAkB,iBAAA,CAE3Bd,iCAAiC,EAAc,CAAC;IAC/He,IAAI,EAAElB,UAAU;IAChBmB,IAAI,EAAE,CAAC;MACCJ,UAAU,EAAE;IAChB,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEG,IAAI,EAAEnB,EAAE,CAACW;IAAS,CAAC,CAAC;EAAE,CAAC;AAAA;AAE3E,MAAMU,yBAAyB,CAAC;EAC5BhB,WAAWA,CAACiB,uBAAuB,EAAE;IACjC,IAAI,CAACA,uBAAuB,GAAGA,uBAAuB;EAC1D;EACAC,MAAMA,CAACC,uBAAuB,EAAEC,uBAAuB,EAAE;IACrD,MAAMC,aAAa,GAAG,IAAI,CAACJ,uBAAuB,CAACK,eAAe,CAAC,2EAA2E,CAAC;IAC/I,OAAOD,aAAa,CAACE,OAAO,CAAC;MACzBC,IAAI,EAAEL,uBAAuB;MAC7BM,OAAO,EAAEL;IACb,CAAC,CAAC;EACN;AACJ;AACAJ,yBAAyB,CAACd,IAAI,YAAAwB,kCAAAtB,CAAA;EAAA,YAAAA,CAAA,IAAwFY,yBAAyB,EArB3BrB,EAAE,CAAAU,QAAA,CAqB2CR,EAAE,CAAC8B,uBAAuB;AAAA,CAA6C;AACxOX,yBAAyB,CAACT,KAAK,kBAtBqFZ,EAAE,CAAAa,kBAAA;EAAAC,KAAA,EAsBIO,yBAAyB;EAAAN,OAAA,EAAzBM,yBAAyB,CAAAd,IAAA;EAAAS,UAAA,EAAc;AAAM,EAAG;AAC1K;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAvBoHjB,EAAE,CAAAkB,iBAAA,CAuB3BG,yBAAyB,EAAc,CAAC;IACvHF,IAAI,EAAElB,UAAU;IAChBmB,IAAI,EAAE,CAAC;MACCJ,UAAU,EAAE;IAChB,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEG,IAAI,EAAEjB,EAAE,CAAC8B;IAAwB,CAAC,CAAC;EAAE,CAAC;AAAA;;AAE1F;AACA;AACA;;AAEA,SAAS5B,iCAAiC,EAAEiB,yBAAyB;AACrE"},"metadata":{},"sourceType":"module"}