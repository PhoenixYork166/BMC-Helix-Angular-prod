{"ast":null,"code":"import * as i5 from '@angular/common';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewChild, Input, NgModule, Injectable, ElementRef, ViewChildren, EventEmitter, Output } from '@angular/core';\nimport * as i6 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule, ReactiveFormsModule, Validators, FormControl } from '@angular/forms';\nimport * as i3 from '@bmc-ux/adapt-angular';\nimport { DismissReasons, AdaptTooltipModule, AdaptRxSelectModule, AdaptButtonModule, AdaptPopoverModule, AdaptIconModule, AdaptRxCheckboxModule, AdaptRxFormControlModule, AdaptRxTextfieldModule, AdaptAccordionModule, AdaptEmptyStateModule, AdaptAccordionTabComponent, AdaptSidebarComponent, AdaptCodeViewerModule, AdaptRxLabelModule, AdaptTabsModule, AdaptBusyModule, AdaptDropdownModule, AdaptSidebarModule, AdaptAlertModule, AdaptRxRadiobuttonModule, AdaptRxSwitchModule, AdaptRxListBuilderModule } from '@bmc-ux/adapt-angular';\nimport * as i4 from '@bmc-ux/adapt-table';\nimport { AdaptTableModule } from '@bmc-ux/adapt-table';\nimport * as i3$1 from '@helix/platform/record/api';\nimport { RX_RECORD_DEFINITION, RecordFieldOption, RxFieldDefinitionService, RxRecordDefinitionService, ArchiveType, AssociationSelectionType, RxRecordDefinitionCacheService, RxRecordDefinitionFieldOptionPipeModule } from '@helix/platform/record/api';\nimport * as i2$1 from '@helix/platform/shared/api';\nimport { RX_OVERLAY, RX_BUNDLE, RX_PERMISSION, Tooltip, RX_APPLICATION, RxExpressionConfigurator, ExpressionOperatorRowsByGroup, ExpressionOperatorGroup, RxDefinitionModule } from '@helix/platform/shared/api';\nimport * as i11 from '@helix/platform/shared/components';\nimport { ValueAccessor, TextFormControlComponent, TextareaFormControlComponent, SelectFormControlComponent, SwitchFormControlComponent, RxPermissionEditorComponent, LabelFormControlComponent, BooleanFormControlComponent, CounterFormControlComponent, RxDefinitionPickerComponent, RxDefinitionPickerType, DateFormControlComponent, DateTimeFormControlComponent, LocalizedCharacterFieldValueModalComponent, SelectionFieldOptionsComponent, TimeFormControlComponent, RxDefinitionPickerScope, RxDefinitionPickerModule, RxRevertCustomizationComponent, ExpressionFormControlComponent, RX_EXPRESSION_EDITOR, RxDesignerHeaderModule, RxFormBuilderModule } from '@helix/platform/shared/components';\nimport * as i1 from '@helix/platform/ui-kit';\nimport { RxModalClass, RX_MODAL, ValidationIssueType, RxModalModule, RxValidationIssuesModule } from '@helix/platform/ui-kit';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport * as i2 from '@ngx-translate/core';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { AdaptCheckbox2Module } from '@bmc-ux/obsolete';\nimport { includes, cloneDeep, find, noop, isEmpty, trim, isNumber, inRange, size, isNil, omitBy, forEach, union, keys, map as map$1, pick, remove, some, chain, reverse, reject, filter as filter$1, get, findIndex, omit, orderBy, intersection, concat, invert, capitalize, intersectionBy, isNull, isUndefined, isEqual, mapValues } from 'lodash';\nimport { BehaviorSubject, combineLatest, ReplaySubject, iif, of, forkJoin, Subject, from } from 'rxjs';\nimport { map, tap, mergeMap, switchMap, take, filter, shareReplay, defaultIfEmpty, startWith, takeUntil, pluck, distinctUntilChanged, withLatestFrom, scan, skip } from 'rxjs/operators';\nimport * as i1$1 from '@helix/platform/utils';\nimport { RxIdService, RX_NUMBER } from '@helix/platform/utils';\nimport { ComponentStore } from '@ngrx/component-store';\nimport * as i1$2 from '@ngrx/store';\nimport { createAction, props, createFeatureSelector, createSelector, createReducer, on, StoreModule } from '@ngrx/store';\nimport { RX_ASSOCIATION_DEFINITION } from '@helix/platform/association/api';\nimport { OpenViewActionModalSize } from '@helix/platform/view/api';\nimport moment from 'moment-es6';\nimport * as i2$2 from '@ngrx/effects';\nimport { createEffect, ofType, EffectsModule } from '@ngrx/effects';\nimport * as i1$3 from '@angular/router';\nconst _c0 = [\"recordCustomizationOptionsEditorForm\"];\nconst _c1 = [\"recordFieldsColumnTemplate\"];\nconst _c2 = function (a1) {\n  return {\n    iconName: \"question_circle_o\",\n    content: a1,\n    placement: \"bottom\",\n    popoverMode: true\n  };\n};\nconst _c3 = function (a0) {\n  return {\n    definitionType: a0\n  };\n};\nfunction RecordCustomizationOptionsEditorComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵelementStart(2, \"form\", null, 3);\n    i0.ɵɵelementStart(4, \"div\", 4);\n    i0.ɵɵelementStart(5, \"adapt-rx-select\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordCustomizationOptionsEditorComponent_ng_container_0_Template_adapt_rx_select_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.scope = $event;\n    })(\"ngModelChange\", function RecordCustomizationOptionsEditorComponent_ng_container_0_Template_adapt_rx_select_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onScopeChange($event);\n    });\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 6);\n    i0.ɵɵelementStart(9, \"h5\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"adapt-rx-checkbox\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordCustomizationOptionsEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.allowOverlay = $event;\n    })(\"ngModelChange\", function RecordCustomizationOptionsEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_12_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.handleAllowOverlayChange();\n    });\n    i0.ɵɵpipe(13, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 6);\n    i0.ɵɵelementStart(15, \"h6\");\n    i0.ɵɵtext(16);\n    i0.ɵɵpipe(17, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 8);\n    i0.ɵɵelementStart(19, \"div\", 9);\n    i0.ɵɵelementStart(20, \"div\");\n    i0.ɵɵelementStart(21, \"adapt-rx-checkbox\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordCustomizationOptionsEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_21_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.customizationOptions.allowOtherPropertiesOverlay = $event;\n    })(\"ngModelChange\", function RecordCustomizationOptionsEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_21_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onRecordCustomizationOptionChange();\n    });\n    i0.ɵɵpipe(22, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\");\n    i0.ɵɵelementStart(24, \"adapt-rx-checkbox\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordCustomizationOptionsEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_24_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.customizationOptions.allowPermissionsOverlay = $event;\n    })(\"ngModelChange\", function RecordCustomizationOptionsEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_24_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.onRecordCustomizationOptionChange();\n    });\n    i0.ɵɵpipe(25, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"div\", 9);\n    i0.ɵɵelementStart(27, \"div\");\n    i0.ɵɵelementStart(28, \"adapt-rx-checkbox\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordCustomizationOptionsEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_28_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.customizationOptions.allowIndexesOverlay = $event;\n    })(\"ngModelChange\", function RecordCustomizationOptionsEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_28_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.onRecordCustomizationOptionChange();\n    });\n    i0.ɵɵpipe(29, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"div\");\n    i0.ɵɵelementStart(31, \"adapt-rx-checkbox\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordCustomizationOptionsEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_31_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.customizationOptions.allowFieldsOverlay = $event;\n    })(\"ngModelChange\", function RecordCustomizationOptionsEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_31_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.onRecordCustomizationOptionChange();\n    });\n    i0.ɵɵpipe(32, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(33, \"adapt-table\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"div\", 15);\n    i0.ɵɵelementStart(35, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function RecordCustomizationOptionsEditorComponent_ng_container_0_Template_button_click_35_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.save();\n    });\n    i0.ɵɵtext(36);\n    i0.ɵɵpipe(37, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function RecordCustomizationOptionsEditorComponent_ng_container_0_Template_button_click_38_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.cancel();\n    });\n    i0.ɵɵtext(39);\n    i0.ɵɵpipe(40, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const vm_r3 = ctx.ngIf;\n    const _r4 = i0.ɵɵreference(3);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(6, 34, \"com.bmc.arsys.rx.client.record-designer.scope-customization-options-editor.scope.label\"));\n    i0.ɵɵproperty(\"options\", ctx_r0.scopeSelectionOptions)(\"optionFormatter\", ctx_r0.optionFormatter)(\"tooltip\", i0.ɵɵpureFunction1(57, _c2, i0.ɵɵpipeBind1(7, 36, \"com.bmc.arsys.rx.client.designer.scope-customization-options.scope.tooltip\")))(\"ngModel\", ctx_r0.scope)(\"disabled\", ctx_r0.isDisabled);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 38, \"com.bmc.arsys.rx.client.customization-options-editor.customization-options.label\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind2(13, 40, \"com.bmc.arsys.rx.client.customization-options-editor.allow-future-customization.label\", i0.ɵɵpureFunction1(59, _c3, ctx_r0.data.definitionTypeDisplayName)));\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.allowOverlay)(\"disabled\", vm_r3.areCustomizationOptionsDisabled);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(17, 43, \"com.bmc.arsys.rx.client.record-designer.scope-customization-options.allow-future-customizations-to.label\"), \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(22, 45, \"com.bmc.arsys.rx.client.record-designer.scope-customization-options.properties.label\"));\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.customizationOptions.allowOtherPropertiesOverlay)(\"disabled\", vm_r3.areCustomizationOptionsDisabled);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(25, 47, \"com.bmc.arsys.rx.client.record-designer.scope-customization-options.permissions.label\"));\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.customizationOptions.allowPermissionsOverlay)(\"disabled\", vm_r3.areCustomizationOptionsDisabled);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(29, 49, \"com.bmc.arsys.rx.client.record-designer.scope-customization-options.search-indexes.label\"));\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.customizationOptions.allowIndexesOverlay)(\"disabled\", vm_r3.areCustomizationOptionsDisabled);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(32, 51, \"com.bmc.arsys.rx.client.record-designer.scope-customization-options.fields.label\"));\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.customizationOptions.allowFieldsOverlay)(\"disabled\", vm_r3.areCustomizationOptionsDisabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", ctx_r0.fields)(\"columns\", ctx_r0.columns)(\"scrollable\", true)(\"sortable\", false)(\"resizableColumns\", false)(\"bordered\", false)(\"filterable\", false)(\"dataKey\", \"name\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !_r4.dirty);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(37, 53, \"com.bmc.arsys.rx.client.common.save.label\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(40, 55, \"com.bmc.arsys.rx.client.common.cancel.label\"), \" \");\n  }\n}\nfunction RecordCustomizationOptionsEditorComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelementStart(1, \"div\", 19);\n    i0.ɵɵelementStart(2, \"label\");\n    i0.ɵɵelementStart(3, \"input\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordCustomizationOptionsEditorComponent_ng_template_2_Template_input_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r23);\n      const dataItem_r20 = restoredCtx.dataItem;\n      const column_r21 = restoredCtx.column;\n      return (dataItem_r20[column_r21.field] = $event);\n    })(\"change\", function RecordCustomizationOptionsEditorComponent_ng_template_2_Template_input_change_3_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.onFieldsPropertyChange();\n    });\n    i0.ɵɵpipe(4, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dataItem_r20 = ctx.dataItem;\n    const column_r21 = ctx.column;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", dataItem_r20[column_r21.field])(\"disabled\", i0.ɵɵpipeBind1(4, 2, ctx_r2.isFieldsOverlayDisabled$));\n  }\n}\nconst _c4 = function (a0) {\n  return {\n    definitionScopeName: a0\n  };\n};\nconst _c5 = function (a0) {\n  return {\n    allowOverlayLabel: a0\n  };\n};\nfunction RecordCustomizationOptionsComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"adapt-button\", 1);\n    i0.ɵɵlistener(\"click\", function RecordCustomizationOptionsComponent_ng_container_0_Template_adapt_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.openCustomizationOptionsEditor();\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"adapt-icon\", 2);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementStart(6, \"p\", 3);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 4);\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const vm_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 4, \"com.bmc.arsys.rx.client.designer.scope-customization-options.title\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"adaptPopover\", i0.ɵɵpipeBind1(5, 6, \"com.bmc.arsys.rx.client.designer.scope-customization-options.scope.tooltip\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(8, 8, \"com.bmc.arsys.rx.client.designer.scope-customization-options.scope.label\", i0.ɵɵpureFunction1(14, _c4, vm_r1.definitionScopeName)), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(11, 11, \"com.bmc.arsys.rx.client.designer.scope-customization-options.customization.label\", i0.ɵɵpureFunction1(16, _c5, ctx_r0.allowOverlayLabel)), \" \");\n  }\n}\nfunction RecordInheritanceEditorComponent_ng_container_0_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"label\");\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"adapt-rx-checkbox\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordInheritanceEditorComponent_ng_container_0_div_11_Template_adapt_rx_checkbox_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return ctx_r3.isInheritingCoreFields = $event;\n    })(\"ngModelChange\", function RecordInheritanceEditorComponent_ng_container_0_div_11_Template_adapt_rx_checkbox_ngModelChange_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.onInheritCoreFieldsChange();\n    });\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"adapt-rx-checkbox\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordInheritanceEditorComponent_ng_container_0_div_11_Template_adapt_rx_checkbox_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.inheritanceDescriptor.isInheritingRules = $event;\n    })(\"ngModelChange\", function RecordInheritanceEditorComponent_ng_container_0_div_11_Template_adapt_rx_checkbox_ngModelChange_7_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.onInheritanceDescriptorChange();\n    });\n    i0.ɵɵpipe(8, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"adapt-rx-checkbox\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordInheritanceEditorComponent_ng_container_0_div_11_Template_adapt_rx_checkbox_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.inheritanceDescriptor.isInheritingFieldPermissions = $event;\n    })(\"ngModelChange\", function RecordInheritanceEditorComponent_ng_container_0_div_11_Template_adapt_rx_checkbox_ngModelChange_9_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return ctx_r9.onInheritanceDescriptorChange();\n    });\n    i0.ɵɵpipe(10, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"adapt-rx-checkbox\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordInheritanceEditorComponent_ng_container_0_div_11_Template_adapt_rx_checkbox_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.inheritanceDescriptor.isInheritingAssociations = $event;\n    })(\"ngModelChange\", function RecordInheritanceEditorComponent_ng_container_0_div_11_Template_adapt_rx_checkbox_ngModelChange_11_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.onInheritanceDescriptorChange();\n    });\n    i0.ɵɵpipe(12, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"adapt-rx-checkbox\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordInheritanceEditorComponent_ng_container_0_div_11_Template_adapt_rx_checkbox_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.inheritanceDescriptor.isInheritingFieldAuditOptions = $event;\n    })(\"ngModelChange\", function RecordInheritanceEditorComponent_ng_container_0_div_11_Template_adapt_rx_checkbox_ngModelChange_13_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.onInheritanceDescriptorChange();\n    });\n    i0.ɵɵpipe(14, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const vm_r1 = i0.ɵɵnextContext().ngIf;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 16, \"com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.inherit.label\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(6, 18, \"com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.core-fields.label\"));\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.isInheritingCoreFields)(\"disabled\", vm_r1.isCoreFieldsOptionDisabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(8, 20, \"com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.rules.label\"));\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.inheritanceDescriptor.isInheritingRules)(\"disabled\", vm_r1.isReadOnly);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(10, 22, \"com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.field-permissions.label\"));\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.inheritanceDescriptor.isInheritingFieldPermissions)(\"disabled\", vm_r1.isReadOnly);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(12, 24, \"com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.associations.label\"));\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.inheritanceDescriptor.isInheritingAssociations)(\"disabled\", vm_r1.isReadOnly);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(14, 26, \"com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.audit-field-properties.label\"));\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.inheritanceDescriptor.isInheritingFieldAuditOptions)(\"disabled\", vm_r1.isReadOnly);\n  }\n}\nfunction RecordInheritanceEditorComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"adapt-rx-checkbox\", 1);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordInheritanceEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.inheritanceOptions.isSharedInstanceStorage = $event;\n    })(\"ngModelChange\", function RecordInheritanceEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_1_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.onInheritanceOptionsChange();\n    });\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"adapt-rx-checkbox\", 1);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordInheritanceEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.inheritanceOptions.isAbstract = $event;\n    })(\"ngModelChange\", function RecordInheritanceEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_4_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.onInheritanceOptionsChange();\n    });\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"adapt-rx-checkbox\", 1);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordInheritanceEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.inheritanceOptions.isFinal = $event;\n    })(\"ngModelChange\", function RecordInheritanceEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_7_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.onInheritanceOptionsChange();\n    });\n    i0.ɵɵpipe(8, \"translate\");\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"rx-definition-picker\", 2);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordInheritanceEditorComponent_ng_container_0_Template_rx_definition_picker_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.inheritFrom = $event;\n    })(\"ngModelChange\", function RecordInheritanceEditorComponent_ng_container_0_Template_rx_definition_picker_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.onRecordDefinitionNameChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, RecordInheritanceEditorComponent_ng_container_0_div_11_Template, 15, 28, \"div\", 0);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const vm_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(2, 16, \"com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.share-data-with-inheritors.label\"));\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.inheritanceOptions.isSharedInstanceStorage)(\"disabled\", vm_r1.isSharedInstanceStorageDisabled)(\"tooltip\", i0.ɵɵpureFunction1(28, _c2, i0.ɵɵpipeBind1(3, 18, \"com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.share-data-with-inheritors.tooltip\")));\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(5, 20, \"com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.make-abstract.label\"));\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.inheritanceOptions.isAbstract)(\"disabled\", vm_r1.isReadOnly)(\"tooltip\", i0.ɵɵpureFunction1(30, _c2, i0.ɵɵpipeBind1(6, 22, \"com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.make-abstract.tooltip\")));\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(8, 24, \"com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.make-final.label\"));\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.inheritanceOptions.isFinal)(\"disabled\", vm_r1.isMakeFinalDisabled || vm_r1.isReadOnly)(\"tooltip\", i0.ɵɵpureFunction1(32, _c2, i0.ɵɵpipeBind1(9, 26, \"com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.make-final.tooltip\")));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"options\", ctx_r0.recordDefinitionPickerOptions)(\"ngModel\", ctx_r0.inheritFrom)(\"disabled\", vm_r1.isReadOnly);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.inheritFrom);\n  }\n}\nfunction SearchFieldEditorModalComponent_ng_container_0_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function SearchFieldEditorModalComponent_ng_container_0_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.addNewSearchField();\n    });\n    i0.ɵɵelement(1, \"span\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, \"com.bmc.arsys.rx.client.record-designer.search-fields.add-search-field.button.label\"), \" \");\n  }\n}\nfunction SearchFieldEditorModalComponent_ng_container_0_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelementStart(1, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function SearchFieldEditorModalComponent_ng_container_0_div_6_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.toggleOpen(true);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function SearchFieldEditorModalComponent_ng_container_0_div_6_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.toggleOpen(false);\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 2, \"com.bmc.arsys.rx.client.common.expand-all.label\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 4, \"com.bmc.arsys.rx.client.common.collapse-all.label\"), \" \");\n  }\n}\nfunction SearchFieldEditorModalComponent_ng_container_0_div_7_div_2_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function SearchFieldEditorModalComponent_ng_container_0_div_7_div_2_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const index_r15 = i0.ɵɵnextContext().index;\n      const ctx_r20 = i0.ɵɵnextContext(3);\n      return ctx_r20.onRemoveSearchField(index_r15);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"com.bmc.arsys.rx.client.common.remove.label\"), \" \");\n  }\n}\nfunction SearchFieldEditorModalComponent_ng_container_0_div_7_div_2_adapt_rx_textfield_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"adapt-rx-textfield\", 31);\n    i0.ɵɵlistener(\"ngModelChange\", function SearchFieldEditorModalComponent_ng_container_0_div_7_div_2_adapt_rx_textfield_12_Template_adapt_rx_textfield_ngModelChange_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext(4);\n      return ctx_r23.onSearchCategoryChange();\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(4);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(1, 2, \"com.bmc.arsys.rx.client.record-designer.search-fields.search-category-name.label\"));\n    i0.ɵɵproperty(\"disabled\", ctx_r19.isReadOnly);\n  }\n}\nfunction SearchFieldEditorModalComponent_ng_container_0_div_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelementStart(1, \"adapt-accordion-tab\", 20);\n    i0.ɵɵlistener(\"open\", function SearchFieldEditorModalComponent_ng_container_0_div_7_div_2_Template_adapt_accordion_tab_open_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const searchField_r14 = restoredCtx.$implicit;\n      return searchField_r14.get(\"isOpen\").setValue(true);\n    })(\"close\", function SearchFieldEditorModalComponent_ng_container_0_div_7_div_2_Template_adapt_accordion_tab_close_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const searchField_r14 = restoredCtx.$implicit;\n      return searchField_r14.get(\"isOpen\").setValue(false);\n    });\n    i0.ɵɵelementStart(2, \"div\", 21);\n    i0.ɵɵelementStart(3, \"div\", 22);\n    i0.ɵɵelementStart(4, \"div\", 23);\n    i0.ɵɵelementStart(5, \"div\", 24);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 25);\n    i0.ɵɵtemplate(8, SearchFieldEditorModalComponent_ng_container_0_div_7_div_2_button_8_Template, 3, 3, \"button\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 27);\n    i0.ɵɵelementStart(10, \"adapt-rx-select\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function SearchFieldEditorModalComponent_ng_container_0_div_7_div_2_Template_adapt_rx_select_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r28 = i0.ɵɵnextContext(3);\n      return ctx_r28.onSelectedFieldChange($event);\n    });\n    i0.ɵɵpipe(11, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, SearchFieldEditorModalComponent_ng_container_0_div_7_div_2_adapt_rx_textfield_12_Template, 2, 4, \"adapt-rx-textfield\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const searchField_r14 = ctx.$implicit;\n    const vm_r1 = i0.ɵɵnextContext(2).ngIf;\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", searchField_r14)(\"isOpen\", searchField_r14.get(\"isOpen\").value);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", searchField_r14.get(\"searchFieldName\").value[0] == null ? null : searchField_r14.get(\"searchFieldName\").value[0].name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r13.isReadOnly);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(11, 11, \"com.bmc.arsys.rx.client.record-designer.search-fields.field.label\"));\n    i0.ɵɵproperty(\"ngClass\", ctx_r13.recordDefinition.enableCognitiveSearch ? \"d-block col-12\" : \"d-block col-6\")(\"options\", vm_r1.availableFields)(\"optionFormatter\", ctx_r13.optionFormatter)(\"optionContentTemplate\", ctx_r13.optionTemplate)(\"disabled\", ctx_r13.isReadOnly);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r13.recordDefinition.enableCognitiveSearch && searchField_r14.get(\"isCategoryVisible\").value);\n  }\n}\nfunction SearchFieldEditorModalComponent_ng_container_0_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelementStart(1, \"adapt-accordion\", 17);\n    i0.ɵɵtemplate(2, SearchFieldEditorModalComponent_ng_container_0_div_7_div_2_Template, 13, 13, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const vm_r1 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"multiselect\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", vm_r1.searchFields);\n  }\n}\nfunction SearchFieldEditorModalComponent_ng_container_0_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵelement(1, \"adapt-empty-state\", 33);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(2, 1, \"com.bmc.arsys.rx.client.record-designer.search-fields.empty-state.message\"));\n  }\n}\nfunction SearchFieldEditorModalComponent_ng_container_0_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function SearchFieldEditorModalComponent_ng_container_0_div_10_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r31 = i0.ɵɵnextContext(2);\n      return ctx_r31.saveSearchFields();\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function SearchFieldEditorModalComponent_ng_container_0_div_10_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r33 = i0.ɵɵnextContext(2);\n      return ctx_r33.cancel();\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const vm_r1 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !vm_r1.isValid || !vm_r1.isDirty);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 3, \"com.bmc.arsys.rx.client.common.save.label\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 5, \"com.bmc.arsys.rx.client.common.cancel.label\"), \" \");\n  }\n}\nfunction SearchFieldEditorModalComponent_ng_container_0_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r36 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function SearchFieldEditorModalComponent_ng_container_0_button_11_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r36);\n      const ctx_r35 = i0.ɵɵnextContext(2);\n      return ctx_r35.cancel();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"com.bmc.arsys.rx.client.common.close.label\"), \" \");\n  }\n}\nfunction SearchFieldEditorModalComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 1);\n    i0.ɵɵelementStart(2, \"div\", 2);\n    i0.ɵɵelementStart(3, \"div\", 3);\n    i0.ɵɵelementStart(4, \"div\", 4);\n    i0.ɵɵtemplate(5, SearchFieldEditorModalComponent_ng_container_0_button_5_Template, 4, 3, \"button\", 5);\n    i0.ɵɵtemplate(6, SearchFieldEditorModalComponent_ng_container_0_div_6_Template, 7, 6, \"div\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, SearchFieldEditorModalComponent_ng_container_0_div_7_Template, 3, 2, \"div\", 7);\n    i0.ɵɵtemplate(8, SearchFieldEditorModalComponent_ng_container_0_div_8_Template, 3, 3, \"div\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 9);\n    i0.ɵɵtemplate(10, SearchFieldEditorModalComponent_ng_container_0_div_10_Template, 7, 7, \"div\", 0);\n    i0.ɵɵtemplate(11, SearchFieldEditorModalComponent_ng_container_0_button_11_Template, 3, 3, \"button\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const vm_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isReadOnly);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", vm_r1.searchFields.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", vm_r1.searchFields.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !vm_r1.searchFields.length);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isReadOnly);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isReadOnly);\n  }\n}\nconst _c6 = \"[_ngcontent-%COMP%]:root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}.designer-modal-body[_ngcontent-%COMP%]{height:645px;min-height:calc(100% - 61px)!important}.designer-modal-accordion-wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100%;overflow:auto;padding-top:10px}.designer-modal-accordion-content[_ngcontent-%COMP%]{position:relative}.designer-modal-accordion-content.cdk-drag-preview[_ngcontent-%COMP%]{z-index:1200!important}.designer-modal-drag-handle[_ngcontent-%COMP%]{cursor:move;position:absolute;top:0;left:0;height:46px;padding:14px 10px 14px 14px;z-index:1}.designer-modal-card-title-content[_ngcontent-%COMP%]{width:100%;display:flex}.designer-modal-card-title-content[_ngcontent-%COMP%]   .left-header-block[_ngcontent-%COMP%], .designer-modal-card-title-content[_ngcontent-%COMP%]   .right-header-block[_ngcontent-%COMP%]{display:flex;align-items:center}.designer-modal-card-title-content[_ngcontent-%COMP%]   .left-header-block[_ngcontent-%COMP%]{flex-grow:1;min-width:0;font-size:14px;padding-left:22px}.designer-modal-card-sub-title[_ngcontent-%COMP%]{color:#7c7f81;font-weight:normal}.designer-modal-card-title-index-buttons[_ngcontent-%COMP%]{display:flex;font-size:19px}.rx-card[_ngcontent-%COMP%]{overflow:auto}.rx-tree-draggable-node[_ngcontent-%COMP%]{cursor:pointer}.rx-tree-draggable-node.cdk-drag-preview[_ngcontent-%COMP%]{z-index:1200!important}.rx-tree-draggable-node.cdk-drag[_ngcontent-%COMP%]{opacity:1}.rx-tree-node-label[_ngcontent-%COMP%]{word-break:break-all}rx-form-builder[_ngcontent-%COMP%]{max-width:400px}\";\nfunction SearchFieldEditorControlComponent_adapt_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"adapt-button\", 2);\n    i0.ɵɵlistener(\"click\", function SearchFieldEditorControlComponent_adapt_button_0_Template_adapt_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.openEditor();\n    });\n    i0.ɵɵelement(1, \"span\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, \"com.bmc.arsys.rx.client.record-designer.search-fields.search-field-editor.title\"), \"\\n\");\n  }\n}\nfunction SearchFieldEditorControlComponent_div_1_div_1_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function SearchFieldEditorControlComponent_div_1_div_1_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const searchField_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.removeSearchField(searchField_r6);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SearchFieldEditorControlComponent_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"span\", 7);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, SearchFieldEditorControlComponent_div_1_div_1_button_4_Template, 1, 0, \"button\", 8);\n    i0.ɵɵelementStart(5, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function SearchFieldEditorControlComponent_div_1_div_1_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const searchField_r6 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.openEditor(searchField_r6.id);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 10);\n    i0.ɵɵelementStart(7, \"span\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const searchField_r6 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(searchField_r6.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.options.isReadOnly);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(9, 3, searchField_r6.searchDefinition.enableFTSSearch ? \"com.bmc.arsys.rx.client.record-designer.search-fields.full-text-search.label\" : \"com.bmc.arsys.rx.client.record-designer.search-fields.cognitive-search.label\"), \" \");\n  }\n}\nfunction SearchFieldEditorControlComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SearchFieldEditorControlComponent_div_1_div_1_Template, 10, 5, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const searchFields_r4 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", searchFields_r4);\n  }\n}\nconst _c7 = [\"nameCellTemplate\"];\nconst _c8 = [\"enforceCellTemplate\"];\nfunction ArchiveAssociationSelectorComponent_ng_template_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"rxDefinitionNamePipe\");\n  }\n  if (rf & 2) {\n    const dataItem_r4 = ctx.dataItem;\n    const column_r5 = ctx.column;\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(1, 1, dataItem_r4[column_r5.field]), \"\\n\");\n  }\n}\nfunction ArchiveAssociationSelectorComponent_ng_template_23_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"com.bmc.arsys.rx.client.common.yes.label\"));\n  }\n}\nfunction ArchiveAssociationSelectorComponent_ng_template_23_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"com.bmc.arsys.rx.client.common.no.label\"));\n  }\n}\nfunction ArchiveAssociationSelectorComponent_ng_template_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ArchiveAssociationSelectorComponent_ng_template_23_span_0_Template, 3, 3, \"span\", 12);\n    i0.ɵɵtemplate(1, ArchiveAssociationSelectorComponent_ng_template_23_span_1_Template, 3, 3, \"span\", 12);\n  }\n  if (rf & 2) {\n    const dataItem_r6 = ctx.dataItem;\n    const column_r7 = ctx.column;\n    i0.ɵɵproperty(\"ngIf\", dataItem_r6[column_r7.field]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !dataItem_r6[column_r7.field]);\n  }\n}\nfunction MissingArchiveDefinitionsModalComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"rxDefinitionNamePipe\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 2);\n    i0.ɵɵelementStart(5, \"a\", 8);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"rxDefinitionNamePipe\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const association_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 3, association_r1.name));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"href\", association_r1.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(7, 5, association_r1.secondRecord), \" \");\n  }\n}\nfunction RecordIndexesEditorComponent_ng_container_0_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function RecordIndexesEditorComponent_ng_container_0_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.addIndex();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"com.bmc.arsys.rx.client.record-designer.indexes.add-index.label\"), \" \");\n  }\n}\nfunction RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const index_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, index_r8.indexName || \"com.bmc.arsys.rx.client.record-designer.indexes.new-index.label\"), \" \");\n  }\n}\nconst _c9 = function (a0) {\n  return {\n    indexName: a0\n  };\n};\nfunction RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const index_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, \"com.bmc.arsys.rx.client.record-designer.indexes.automatic-index.label\", i0.ɵɵpureFunction1(4, _c9, index_r8.indexName)));\n  }\n}\nfunction RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_button_10_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const index_r8 = i0.ɵɵnextContext().$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      $event.stopPropagation();\n      return ctx_r15.removeIndex(index_r8.guid);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"com.bmc.arsys.rx.client.common.remove.label\"), \" \");\n  }\n}\nconst _c10 = function (a1) {\n  return {\n    iconName: \"question_circle_o\",\n    content: a1,\n    placement: \"top\",\n    popoverMode: true\n  };\n};\nfunction RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"adapt-accordion\", 11);\n    i0.ɵɵelementStart(1, \"div\", 12);\n    i0.ɵɵelementStart(2, \"adapt-accordion-tab\", 13);\n    i0.ɵɵlistener(\"open\", function RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_adapt_accordion_tab_open_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const index_r8 = restoredCtx.$implicit;\n      return index_r8.isOpen = true;\n    })(\"close\", function RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_adapt_accordion_tab_close_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const index_r8 = restoredCtx.$implicit;\n      return index_r8.isOpen = false;\n    });\n    i0.ɵɵelementStart(3, \"div\", 14);\n    i0.ɵɵelementStart(4, \"div\", 15);\n    i0.ɵɵelementStart(5, \"div\", 16);\n    i0.ɵɵelementStart(6, \"div\", 17);\n    i0.ɵɵtemplate(7, RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_span_7_Template, 3, 3, \"span\", 0);\n    i0.ɵɵtemplate(8, RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_span_8_Template, 3, 6, \"span\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 18);\n    i0.ɵɵtemplate(10, RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_button_10_Template, 3, 3, \"button\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"adapt-rx-checkbox\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_adapt_rx_checkbox_ngModelChange_11_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const index_r8 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return ctx_r21.updateIndexUniqueValue(index_r8, $event);\n    });\n    i0.ɵɵpipe(12, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"adapt-rx-checkbox\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_adapt_rx_checkbox_ngModelChange_13_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const index_r8 = restoredCtx.$implicit;\n      return index_r8.ignoreBlankValues = $event;\n    })(\"ngModelChange\", function RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_adapt_rx_checkbox_ngModelChange_13_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const index_r8 = restoredCtx.$implicit;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return ctx_r23.updateIndexIgnoreBlankValue(index_r8, $event);\n    });\n    i0.ɵɵpipe(14, \"translate\");\n    i0.ɵɵpipe(15, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 22);\n    i0.ɵɵelementStart(17, \"adapt-rx-select\", 23);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_adapt_rx_select_ngModelChange_17_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const index_r8 = restoredCtx.$implicit;\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return ctx_r24.onAvailableFieldsChange($event, index_r8);\n    });\n    i0.ɵɵpipe(18, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 24);\n    i0.ɵɵelementStart(20, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_button_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const index_r8 = restoredCtx.$implicit;\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return ctx_r25.moveToSelected(index_r8);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_button_click_21_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const index_r8 = restoredCtx.$implicit;\n      const ctx_r26 = i0.ɵɵnextContext(2);\n      return ctx_r26.moveToAvailable(index_r8);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"adapt-rx-list-builder\", 27);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_adapt_rx_list_builder_ngModelChange_22_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const index_r8 = restoredCtx.$implicit;\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return ctx_r27.onSelectedFieldsChange($event, index_r8);\n    })(\"listItemRemove\", function RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_adapt_rx_list_builder_listItemRemove_22_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const index_r8 = restoredCtx.$implicit;\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      return ctx_r28.onFieldRemove($event, index_r8);\n    })(\"dragend\", function RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_adapt_rx_list_builder_dragend_22_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return ctx_r29.onDragEnd();\n    });\n    i0.ɵɵpipe(23, \"translate\");\n    i0.ɵɵpipe(24, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const index_r8 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"multiselect\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"isOpen\", index_r8.isOpen);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"title\", index_r8.indexName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !index_r8.isAutomaticIndex);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", index_r8.isAutomaticIndex);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.isReadOnly && !index_r8.isAutomaticIndex);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(12, 32, \"com.bmc.arsys.rx.client.record-designer.indexes.unique-index-checkbox.label\"));\n    i0.ɵɵproperty(\"ngModel\", index_r8.unique)(\"disabled\", ctx_r3.isReadOnly || index_r8.isAutomaticIndex);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(14, 34, \"com.bmc.arsys.rx.client.record-designer.indexes.ignore-blank-values.label\"));\n    i0.ɵɵproperty(\"ngModel\", index_r8.ignoreBlankValues)(\"disabled\", ctx_r3.isReadOnly || index_r8.isAutomaticIndex)(\"tooltip\", i0.ɵɵpureFunction1(44, _c10, i0.ɵɵpipeBind1(15, 36, \"com.bmc.arsys.rx.client.record-designer.indexes.ignore-blank-values.tooltip\")));\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(18, 38, \"com.bmc.arsys.rx.client.record-designer.indexes.available-fields.label\"));\n    i0.ɵɵproperty(\"options\", index_r8.availableFields)(\"ngModel\", index_r8.checkedAvailableFields)(\"disabled\", ctx_r3.isReadOnly || index_r8.isAutomaticIndex)(\"deselectAllButton\", true)(\"selectAllButton\", true)(\"enableFilter\", true)(\"inline\", true)(\"multiple\", true)(\"singleSelectStyle\", \"marker\")(\"optionFormatter\", ctx_r3.optionFormatter);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !index_r8.checkedAvailableFields.length || index_r8.isAutomaticIndex);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !index_r8.isMoveToAvailableButtonEnabled || index_r8.isAutomaticIndex);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(24, 42, \"com.bmc.arsys.rx.client.record-designer.indexes.selected-fields.label\"));\n    i0.ɵɵproperty(\"ngModel\", index_r8.selectedFields)(\"disabled\", ctx_r3.isReadOnly || index_r8.isAutomaticIndex)(\"hideSearchField\", true)(\"hideEdit\", true)(\"tooltip\", i0.ɵɵpureFunction1(46, _c10, i0.ɵɵpipeBind1(23, 40, \"com.bmc.arsys.rx.client.record-designer.indexes.selected-fields.tooltip\")));\n  }\n}\nfunction RecordIndexesEditorComponent_ng_container_0_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function RecordIndexesEditorComponent_ng_container_0_div_15_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      return ctx_r30.save();\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function RecordIndexesEditorComponent_ng_container_0_div_15_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      return ctx_r32.cancel();\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const vm_r1 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !vm_r1.isDirty);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 3, \"com.bmc.arsys.rx.client.common.save.label\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 5, \"com.bmc.arsys.rx.client.common.cancel.label\"), \" \");\n  }\n}\nfunction RecordIndexesEditorComponent_ng_container_0_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function RecordIndexesEditorComponent_ng_container_0_div_16_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext(2);\n      return ctx_r34.cancel();\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, \"com.bmc.arsys.rx.client.common.close.label\"), \" \");\n  }\n}\nconst _c11 = function (a0) {\n  return {\n    content: a0,\n    variant: \"info\",\n    type: \"inline\"\n  };\n};\nfunction RecordIndexesEditorComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 1);\n    i0.ɵɵelement(2, \"adapt-alert\", 2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementStart(4, \"div\", 3);\n    i0.ɵɵtemplate(5, RecordIndexesEditorComponent_ng_container_0_button_5_Template, 3, 3, \"button\", 4);\n    i0.ɵɵelementStart(6, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function RecordIndexesEditorComponent_ng_container_0_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return ctx_r36.expandAll();\n    });\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function RecordIndexesEditorComponent_ng_container_0_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r38 = i0.ɵɵnextContext();\n      return ctx_r38.collapseAll();\n    });\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 7);\n    i0.ɵɵtemplate(13, RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template, 25, 48, \"adapt-accordion\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 9);\n    i0.ɵɵtemplate(15, RecordIndexesEditorComponent_ng_container_0_div_15_Template, 7, 7, \"div\", 0);\n    i0.ɵɵtemplate(16, RecordIndexesEditorComponent_ng_container_0_div_16_Template, 4, 3, \"div\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const vm_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"config\", i0.ɵɵpureFunction1(14, _c11, i0.ɵɵpipeBind1(3, 8, \"com.bmc.arsys.rx.client.record-designer.indexes.information\")));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isReadOnly);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(8, 10, \"com.bmc.arsys.rx.client.common.expand-all.label\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(11, 12, \"com.bmc.arsys.rx.client.common.collapse-all.label\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", vm_r1.indexes)(\"ngForTrackBy\", ctx_r0.trackByIndex);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isReadOnly);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isReadOnly);\n  }\n}\nfunction RecordIndexesControlComponent_div_4_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const index_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, index_r1.indexName || \"com.bmc.arsys.rx.client.record-designer.indexes.new-index.label\"));\n  }\n}\nfunction RecordIndexesControlComponent_div_4_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelement(4, \"adapt-icon\", 10);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const index_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(2, 2, \"com.bmc.arsys.rx.client.record-designer.indexes.automatic-index.label\", i0.ɵɵpureFunction1(9, _c9, i0.ɵɵpipeBind1(3, 5, index_r1.indexName || \"com.bmc.arsys.rx.client.record-designer.indexes.new-index.label\"))), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"adaptPopover\", i0.ɵɵpipeBind1(5, 7, \"com.bmc.arsys.rx.client.record-designer.indexes.system-index.tooltip\"));\n  }\n}\nfunction RecordIndexesControlComponent_div_4_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function RecordIndexesControlComponent_div_4_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const $index_r2 = i0.ɵɵnextContext().index;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.openIndexesEditor($index_r2);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RecordIndexesControlComponent_div_4_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function RecordIndexesControlComponent_div_4_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const $index_r2 = i0.ɵɵnextContext().index;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.removeIndex($index_r2);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c12 = function (a0) {\n  return {\n    fieldCount: a0\n  };\n};\nfunction RecordIndexesControlComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"div\", 4);\n    i0.ɵɵelementStart(2, \"span\", 5);\n    i0.ɵɵtemplate(3, RecordIndexesControlComponent_div_4_span_3_Template, 3, 3, \"span\", 6);\n    i0.ɵɵtemplate(4, RecordIndexesControlComponent_div_4_span_4_Template, 6, 11, \"span\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, RecordIndexesControlComponent_div_4_button_5_Template, 1, 0, \"button\", 7);\n    i0.ɵɵtemplate(6, RecordIndexesControlComponent_div_4_button_6_Template, 1, 0, \"button\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 9);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵpipe(10, \"translate\");\n    i0.ɵɵpipe(11, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const index_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"title\", index_r1.indexName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !index_r1.isAutomaticIndex);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", index_r1.isAutomaticIndex);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !index_r1.isAutomaticIndex);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.options.isReadOnly && !index_r1.isAutomaticIndex);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind1(9, 7, index_r1.unique ? \"com.bmc.arsys.rx.client.record-designer.indexes.unique-index.label\" : \"com.bmc.arsys.rx.client.record-designer.indexes.non-unique-index.label.value\"), \", \", index_r1.indexFieldIds.length === 1 ? i0.ɵɵpipeBind1(10, 9, \"com.bmc.arsys.rx.client.record-designer.indexes.one-field-index.label\") : i0.ɵɵpipeBind2(11, 11, \"com.bmc.arsys.rx.client.record-designer.indexes.many-fields-index.label\", i0.ɵɵpureFunction1(14, _c12, index_r1.indexFieldIds.length)), \" \");\n  }\n}\nconst _c13 = function (a0) {\n  return {\n    overriddenFields: a0\n  };\n};\nfunction InheritanceIssueInfoComponent_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ul\");\n    i0.ɵɵelementStart(5, \"li\");\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 2, \"com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.issues-info.message\"), \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(8, 4, \"com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.issues-overridden-properties-info.message\", i0.ɵɵpureFunction1(7, _c13, ctx_r1.overriddenRecordProperties.fields)));\n  }\n}\nconst _c14 = function (a0) {\n  return {\n    overriddenSecurityLabels: a0\n  };\n};\nfunction InheritanceIssueInfoComponent_ng_container_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ul\");\n    i0.ɵɵelementStart(5, \"li\");\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 2, \"com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.issues-overridden-security-labels-info.message\"), \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(8, 4, \"com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.issues-security-labels-info.message\", i0.ɵɵpureFunction1(7, _c14, ctx_r2.overriddenRecordProperties.securityLabels)));\n  }\n}\nfunction InheritanceIssueInfoComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, InheritanceIssueInfoComponent_ng_container_1_div_1_Template, 9, 9, \"div\", 1);\n    i0.ɵɵtemplate(2, InheritanceIssueInfoComponent_ng_container_1_div_2_Template, 9, 9, \"div\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.overriddenRecordProperties.fields.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.overriddenRecordProperties.securityLabels == null ? null : ctx_r0.overriddenRecordProperties.securityLabels.length) > 0);\n  }\n}\nfunction AddJoinFieldsEditorComponent_ng_container_0_adapt_alert_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"adapt-alert\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"config\", ctx_r2.alertConfig);\n  }\n}\nfunction AddJoinFieldsEditorComponent_ng_container_0_adapt_rx_select_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"adapt-rx-select\", 10);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    const vm_r1 = i0.ɵɵnextContext().ngIf;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"inline\", true)(\"multiple\", true)(\"options\", vm_r1.primaryAvailableFields)(\"optionFormatter\", ctx_r3.optionFormatter)(\"selectAllButton\", true)(\"deselectAllButton\", true)(\"texts\", ctx_r3.selectTexts)(\"popupMaxHeight\", \"100%\")(\"formControl\", ctx_r3.primarySelectedFieldsFormControl)(\"label\", i0.ɵɵpipeBind1(1, 10, \"com.bmc.arsys.rx.client.record-designer.definition-properties.primary.label\"));\n  }\n}\nfunction AddJoinFieldsEditorComponent_ng_container_0_adapt_rx_select_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"adapt-rx-select\", 11);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    const vm_r1 = i0.ɵɵnextContext().ngIf;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"inline\", true)(\"multiple\", true)(\"options\", vm_r1.secondaryAvailableFields)(\"optionFormatter\", ctx_r4.optionFormatter)(\"selectAllButton\", true)(\"deselectAllButton\", true)(\"texts\", ctx_r4.selectTexts)(\"popupMaxHeight\", \"100%\")(\"formControl\", ctx_r4.secondarySelectedFieldsFormControl)(\"label\", i0.ɵɵpipeBind1(1, 10, \"com.bmc.arsys.rx.client.record-designer.definition-properties.secondary.label\"));\n  }\n}\nfunction AddJoinFieldsEditorComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 1);\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtemplate(3, AddJoinFieldsEditorComponent_ng_container_0_adapt_alert_3_Template, 1, 1, \"adapt-alert\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 3);\n    i0.ɵɵtemplate(7, AddJoinFieldsEditorComponent_ng_container_0_adapt_rx_select_7_Template, 2, 12, \"adapt-rx-select\", 4);\n    i0.ɵɵtemplate(8, AddJoinFieldsEditorComponent_ng_container_0_adapt_rx_select_8_Template, 2, 12, \"adapt-rx-select\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 6);\n    i0.ɵɵelementStart(10, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function AddJoinFieldsEditorComponent_ng_container_0_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.save();\n    });\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AddJoinFieldsEditorComponent_ng_container_0_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.cancel();\n    });\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const vm_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", vm_r1.hasDuplicates);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.selectLabel);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", vm_r1.primaryAvailableFields);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", vm_r1.secondaryAvailableFields);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", vm_r1.selectedFields.length === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(12, 7, \"com.bmc.arsys.rx.client.common.save.label\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(15, 9, \"com.bmc.arsys.rx.client.common.cancel.label\"), \" \");\n  }\n}\nconst _c15 = [\"requiredCellTemplate\"];\nconst _c16 = [\"dataTypeCellTemplate\"];\nconst _c17 = [\"inheritedCellTemplate\"];\nfunction RecordDesignerComponent_ng_container_0_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵelementStart(1, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function RecordDesignerComponent_ng_container_0_div_22_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.openAddNewField();\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function RecordDesignerComponent_ng_container_0_div_22_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.deleteSelectedField();\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const vm_r9 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", vm_r9.isReadOnly);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 4, \"com.bmc.arsys.rx.client.common.new.label\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", vm_r9.isDeleteFieldButtonDisabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 6, \"com.bmc.arsys.rx.client.common.delete.label\"), \" \");\n  }\n}\nfunction RecordDesignerComponent_ng_container_0_div_23_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function RecordDesignerComponent_ng_container_0_div_23_button_6_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const dataType_r18 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(3);\n      return ctx_r19.addNewField(dataType_r18.resourceType);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dataType_r18 = ctx.$implicit;\n    const vm_r9 = i0.ɵɵnextContext(2).ngIf;\n    i0.ɵɵproperty(\"disabled\", !vm_r9.isFieldsCustomizationAllowed || vm_r9.isReadOnly);\n    i0.ɵɵattribute(\"rx-id\", \"field-data-type-\" + dataType_r18.shortName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", dataType_r18.displayName, \" \");\n  }\n}\nfunction RecordDesignerComponent_ng_container_0_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵelementStart(1, \"div\", 23);\n    i0.ɵɵelementStart(2, \"button\", 24);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 25);\n    i0.ɵɵtemplate(6, RecordDesignerComponent_ng_container_0_div_23_button_6_Template, 2, 3, \"button\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function RecordDesignerComponent_ng_container_0_div_23_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return ctx_r22.deleteSelectedField();\n    });\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function RecordDesignerComponent_ng_container_0_div_23_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return ctx_r24.copySelectedField();\n    });\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const vm_r9 = i0.ɵɵnextContext().ngIf;\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 6, \"com.bmc.arsys.rx.client.designer.new-field.button.label\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r11.dataTypes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", vm_r9.isDeleteFieldButtonDisabled || vm_r9.isReadOnly);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(9, 8, \"com.bmc.arsys.rx.client.common.delete.label\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", vm_r9.isCopyFieldButtonDisabled || vm_r9.isReadOnly);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(12, 10, \"com.bmc.arsys.rx.client.common.copy.label\"), \" \");\n  }\n}\nfunction RecordDesignerComponent_ng_container_0_adapt_code_viewer_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"adapt-code-viewer\", 29);\n    i0.ɵɵpipe(1, \"json\");\n  }\n  if (rf & 2) {\n    const vm_r9 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵproperty(\"code\", i0.ɵɵpipeBind1(1, 4, vm_r9.definitionForJsonViewer))(\"lang\", \"javascript\")(\"hasToolbar\", false)(\"theme\", \"light\");\n  }\n}\nfunction RecordDesignerComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0, 5);\n    i0.ɵɵelementStart(1, \"rx-designer-header\", 6);\n    i0.ɵɵlistener(\"save\", function RecordDesignerComponent_ng_container_0_Template_rx_designer_header_save_1_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return ctx_r27.saveDefinition();\n    })(\"closeDesigner\", function RecordDesignerComponent_ng_container_0_Template_rx_designer_header_closeDesigner_1_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return ctx_r29.closeDesigner.emit();\n    })(\"breadcrumbSelected\", function RecordDesignerComponent_ng_container_0_Template_rx_designer_header_breadcrumbSelected_1_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return ctx_r30.onBreadcrumbSelected();\n    })(\"toggleDesignMode\", function RecordDesignerComponent_ng_container_0_Template_rx_designer_header_toggleDesignMode_1_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return ctx_r31.toggleDesignMode();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"adapt-sidebar\", 7);\n    i0.ɵɵlistener(\"isPanelOpenedCurrently\", function RecordDesignerComponent_ng_container_0_Template_adapt_sidebar_isPanelOpenedCurrently_2_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return ctx_r32.onSidebarToggle($event);\n    });\n    i0.ɵɵelementStart(3, \"adapt-sidebar-item\", 8);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementStart(6, \"rx-form-builder\", 9);\n    i0.ɵɵlistener(\"modelChange\", function RecordDesignerComponent_ng_container_0_Template_rx_form_builder_modelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return ctx_r33.onDefinitionModelChange($event);\n    })(\"formInitialized\", function RecordDesignerComponent_ng_container_0_Template_rx_form_builder_formInitialized_6_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return ctx_r34.onFormInitialized();\n    })(\"editorEvent\", function RecordDesignerComponent_ng_container_0_Template_rx_form_builder_editorEvent_6_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r35 = i0.ɵɵnextContext();\n      return ctx_r35.onEditorEvent($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"adapt-sidebar-item\", 10);\n    i0.ɵɵpipe(8, \"translate\");\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵelementStart(10, \"rx-form-builder\", 11);\n    i0.ɵɵlistener(\"modelChange\", function RecordDesignerComponent_ng_container_0_Template_rx_form_builder_modelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return ctx_r36.onSelectedFieldModelChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"adapt-alert\", 12);\n    i0.ɵɵpipe(12, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"adapt-sidebar-item\", 13);\n    i0.ɵɵpipe(14, \"translate\");\n    i0.ɵɵpipe(15, \"translate\");\n    i0.ɵɵelementStart(16, \"rx-validation-issues\", 14);\n    i0.ɵɵlistener(\"correctIssue\", function RecordDesignerComponent_ng_container_0_Template_rx_validation_issues_correctIssue_16_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return ctx_r37.onCorrectIssue($event);\n    });\n    i0.ɵɵpipe(17, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 15);\n    i0.ɵɵelementStart(19, \"h1\", 16);\n    i0.ɵɵtext(20);\n    i0.ɵɵpipe(21, \"rxDefinitionNamePipe\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(22, RecordDesignerComponent_ng_container_0_div_22_Template, 7, 8, \"div\", 17);\n    i0.ɵɵtemplate(23, RecordDesignerComponent_ng_container_0_div_23_Template, 13, 12, \"div\", 17);\n    i0.ɵɵelementStart(24, \"adapt-table\", 18);\n    i0.ɵɵlistener(\"selectionChange\", function RecordDesignerComponent_ng_container_0_Template_adapt_table_selectionChange_24_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r38 = i0.ɵɵnextContext();\n      return ctx_r38.onSelectionChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(25, RecordDesignerComponent_ng_container_0_adapt_code_viewer_25_Template, 2, 6, \"adapt-code-viewer\", 19);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const vm_r9 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"bundleName\", vm_r9.bundleFriendlyName)(\"isSaveButtonDisabled\", vm_r9.isSaveButtonDisabled)(\"breadcrumbItems\", vm_r9.breadcrumbItems)(\"isDesignMode\", vm_r9.isDesignMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"openedId\", 0)(\"adjustMainContainerWidth\", true)(\"hidden\", vm_r9.definitionForJsonViewer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"headerTitle\", i0.ɵɵpipeBind1(4, 40, \"com.bmc.arsys.rx.client.common.properties.label\"))(\"tooltipText\", i0.ɵɵpipeBind1(5, 42, \"com.bmc.arsys.rx.client.common.properties.label\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"config\", vm_r9.definitionInspectorConfig)(\"model\", vm_r9.definitionModel)(\"focusEditor$\", ctx_r0.inspectorFocusEditor$);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"headerTitle\", i0.ɵɵpipeBind1(8, 44, \"com.bmc.arsys.rx.client.common.settings.label\"))(\"tooltipText\", i0.ɵɵpipeBind1(9, 46, \"com.bmc.arsys.rx.client.common.settings.label\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"config\", vm_r9.selectedFieldInspectorConfig)(\"model\", vm_r9.selectedFieldModel)(\"guid\", vm_r9.selectedFieldGuid)(\"focusEditor$\", ctx_r0.inspectorFocusEditor$);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", vm_r9.selectedFieldModel)(\"config\", i0.ɵɵpureFunction1(58, _c11, i0.ɵɵpipeBind1(12, 48, \"com.bmc.arsys.rx.client.designer.validation.no-field-selected.message\")));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"headerTitle\", i0.ɵɵpipeBind1(14, 50, \"com.bmc.arsys.rx.client.designer.validation-issues.label\"));\n    i0.ɵɵpropertyInterpolate(\"tooltipText\", i0.ɵɵpipeBind1(15, 52, \"com.bmc.arsys.rx.client.designer.validation-issues.label\"));\n    i0.ɵɵproperty(\"iconClass\", vm_r9.hasValidationErrors ? \"d-icon-exclamation_triangle text-danger\" : vm_r9.hasValidationWarnings ? \"d-icon-exclamation_triangle text-warning-icon\" : \"d-icon-exclamation_triangle\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"issueSections\", vm_r9.validationIssues)(\"definitionTypeDisplayName\", i0.ɵɵpipeBind1(17, 54, \"com.bmc.arsys.rx.client.record-definition.label\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(21, 56, ctx_r0.configuration.definitionName) || vm_r9.definitionDisplayName || ctx_r0.newTitle, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", vm_r9.isJoinOrExternalRecord);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !vm_r9.isJoinOrExternalRecord);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", vm_r9.fieldGridRows)(\"selection\", vm_r9.selectedFieldGridRows)(\"columns\", ctx_r0.columns)(\"scrollable\", true)(\"sortable\", true)(\"resizableColumns\", true)(\"bordered\", true)(\"filterable\", false)(\"dataKey\", \"guid\")(\"disableRowSelection\", false)(\"selectionMode\", \"single\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", vm_r9.definitionForJsonViewer);\n  }\n}\nfunction RecordDesignerComponent_ng_template_2_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 31);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"adaptPopover\", i0.ɵɵpipeBind1(1, 1, \"com.bmc.arsys.rx.client.record-designer.core-field.tooltip\"));\n  }\n}\nfunction RecordDesignerComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, RecordDesignerComponent_ng_template_2_span_0_Template, 2, 3, \"span\", 30);\n    i0.ɵɵtext(1);\n  }\n  if (rf & 2) {\n    const dataItem_r39 = ctx.dataItem;\n    i0.ɵɵproperty(\"ngIf\", dataItem_r39.isCoreField);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", dataItem_r39.resourceType, \"\\n\");\n  }\n}\nfunction RecordDesignerComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"rxRecordDefinitionFieldOption\");\n  }\n  if (rf & 2) {\n    const dataItem_r41 = ctx.dataItem;\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(1, 1, dataItem_r41.fieldOption), \"\\n\");\n  }\n}\nfunction RecordDesignerComponent_ng_template_6_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 33);\n  }\n}\nfunction RecordDesignerComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, RecordDesignerComponent_ng_template_6_span_0_Template, 1, 0, \"span\", 32);\n  }\n  if (rf & 2) {\n    const dataItem_r42 = ctx.dataItem;\n    i0.ɵɵproperty(\"ngIf\", dataItem_r42.isInherited);\n  }\n}\nfunction RecordDesignerComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const dataItem_r44 = ctx.dataItem;\n    i0.ɵɵtextInterpolate1(\" \", dataItem_r44.sourceRecord, \"\\n\");\n  }\n}\nfunction RecordDesignerPageComponent_rx_record_designer_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"rx-record-designer\", 1);\n    i0.ɵɵlistener(\"definitionSaved\", function RecordDesignerPageComponent_rx_record_designer_0_Template_rx_record_designer_definitionSaved_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.onDefinitionSaved($event);\n    })(\"definitionErrorLoading\", function RecordDesignerPageComponent_rx_record_designer_0_Template_rx_record_designer_definitionErrorLoading_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.onDefinitionErrorLoading();\n    })(\"closeDesigner\", function RecordDesignerPageComponent_rx_record_designer_0_Template_rx_record_designer_closeDesigner_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onCloseDesigner();\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"configuration\", ctx_r0.configuration);\n  }\n}\nclass RecordCustomizationOptionsEditorComponent extends RxModalClass {\n  constructor(rxModalService, activeModalRef, injector, translateService) {\n    super(activeModalRef, injector);\n    this.rxModalService = rxModalService;\n    this.activeModalRef = activeModalRef;\n    this.injector = injector;\n    this.translateService = translateService;\n    this.data = this.activeModalRef.getData();\n    this.scopeSelectionOptions = this.data.scopeSelectionOptions;\n    this.recordDefinition = this.data.recordDefinition;\n    this.customizationControlProperties = ['allowPermissionsOverlay', 'allowOtherPropertiesOverlay', 'allowIndexesOverlay', 'allowFieldsOverlay'];\n    this.initialCustomizationOptions = this.recordDefinition.customizationOptions;\n    this.allowOverlay = includes(Object.values(this.initialCustomizationOptions), true);\n    this.fields = cloneDeep(this.recordDefinition.fields);\n    this.customizationOptions = {\n      allowOtherPropertiesOverlay: this.initialCustomizationOptions.allowOtherPropertiesOverlay || false,\n      allowPermissionsOverlay: this.initialCustomizationOptions.allowPermissionsOverlay || false,\n      allowIndexesOverlay: this.initialCustomizationOptions.allowIndexesOverlay || false,\n      allowFieldsOverlay: this.initialCustomizationOptions.allowFieldsOverlay || false\n    };\n    this.isFieldsOverlayAllowedSubject = new BehaviorSubject(this.initialCustomizationOptions.allowFieldsOverlay);\n    this.isDisabled = this.data.overlayOperation !== RX_OVERLAY.operationTypes.createdInThisOverlayGroup;\n    this.definitionScopeName = find(this.scopeSelectionOptions, {\n      name: this.data.definitionScopeName\n    });\n    this.scope = [this.definitionScopeName];\n    this.isPublicSubject = new BehaviorSubject(this.scope[0].id === RX_BUNDLE.definitionScopes.public.type);\n    this.areCustomizationOptionsDisabled$ = this.isPublicSubject.pipe(map(isPublic => !isPublic || this.isDisabled));\n    this.isFieldsOverlayDisabled$ = combineLatest([this.areCustomizationOptionsDisabled$, this.isFieldsOverlayAllowedSubject]).pipe(map(([areCustomizationOptionsDisabled, isFieldsOverlayAllowed]) => areCustomizationOptionsDisabled || !isFieldsOverlayAllowed));\n    this.vm$ = this.areCustomizationOptionsDisabled$.pipe(map(areCustomizationOptionsDisabled => ({\n      areCustomizationOptionsDisabled\n    })));\n  }\n  onFieldsPropertyChange() {\n    this.recordCustomizationOptionsEditorForm.control.markAsDirty();\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.columns = [{\n      field: 'name',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label')\n    }, {\n      field: 'allowOtherPropertiesOverlay',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.scope-customization-options.allow-properties-customization.label'),\n      cellTemplate: this.recordFieldsColumnTemplate,\n      headerClass: 'pl-6'\n    }, {\n      field: 'allowPermissionsOverlay',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.scope-customization-options.allow-permissions-customization.label'),\n      cellTemplate: this.recordFieldsColumnTemplate,\n      headerClass: 'pl-6'\n    }];\n  }\n  optionFormatter(option) {\n    return option.name;\n  }\n  save() {\n    if (this.scope[0].id === RX_BUNDLE.definitionScopeTypes.public) {\n      this.rxModalService.confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.scope-customization-options.definition-scope-to-public.warning')\n      }).then(result => {\n        if (result) {\n          this.closeModal();\n        }\n      }).catch(noop);\n    } else if (this.data.definitionScopeName === RX_BUNDLE.definitionScopeNames.public) {\n      this.rxModalService.confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.scope-customization-options.change-scope-from-public-warning.message')\n      }).then(result => {\n        if (result) {\n          this.closeModal();\n        }\n      }).catch(noop);\n    } else {\n      this.closeModal();\n    }\n  }\n  onScopeChange(rxSelectionChangeEvent) {\n    this.isPublicSubject.next(rxSelectionChangeEvent[0].id === RX_BUNDLE.definitionScopes.public.type);\n  }\n  closeModal() {\n    const result = Object.assign(Object.assign({}, this.recordCustomizationOptionsEditorForm.form.value), {\n      fields: this.fields\n    });\n    result.scope = result.scope[0].id;\n    this.activeModalRef.close(result);\n  }\n  cancel() {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n  handleAllowOverlayChange() {\n    Object.keys(this.customizationOptions).forEach(option => this.customizationOptions[option] = this.allowOverlay);\n    this.isFieldsOverlayAllowedSubject.next(this.allowOverlay);\n  }\n  onRecordCustomizationOptionChange() {\n    this.allowOverlay = this.customizationOptions.allowFieldsOverlay || this.customizationOptions.allowIndexesOverlay || this.customizationOptions.allowOtherPropertiesOverlay || this.customizationOptions.allowPermissionsOverlay;\n    this.isFieldsOverlayAllowedSubject.next(this.customizationOptions.allowFieldsOverlay);\n  }\n  isDirty() {\n    return this.recordCustomizationOptionsEditorForm.dirty;\n  }\n  ngOnDestroy() {\n    this.isFieldsOverlayAllowedSubject.complete();\n    this.isPublicSubject.complete();\n  }\n}\nRecordCustomizationOptionsEditorComponent.ɵfac = function RecordCustomizationOptionsEditorComponent_Factory(t) {\n  return new (t || RecordCustomizationOptionsEditorComponent)(i0.ɵɵdirectiveInject(i1.RxModalService), i0.ɵɵdirectiveInject(i3.ActiveModalRef), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i2.TranslateService));\n};\nRecordCustomizationOptionsEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RecordCustomizationOptionsEditorComponent,\n  selectors: [[\"rx-record-customization-options-editor\"]],\n  viewQuery: function RecordCustomizationOptionsEditorComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.recordCustomizationOptionsEditorForm = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.recordFieldsColumnTemplate = _t.first);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 4,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [\"recordFieldsColumnTemplate\", \"\"], [1, \"designer-modal-body\", \"modal-body\"], [\"recordCustomizationOptionsEditorForm\", \"ngForm\"], [1, \"w-25\"], [\"rx-id\", \"scope-selection\", \"name\", \"scope\", 3, \"label\", \"options\", \"optionFormatter\", \"tooltip\", \"ngModel\", \"disabled\", \"ngModelChange\"], [1, \"w-100\"], [\"rx-id\", \"allow-customization-checkbox\", \"name\", \"allowOverlay\", 3, \"label\", \"ngModel\", \"disabled\", \"ngModelChange\"], [1, \"w-100\", \"d-flex\"], [1, \"w-50\"], [\"name\", \"allowOtherPropertiesOverlay\", \"rx-id\", \"properties-checkbox\", 3, \"label\", \"ngModel\", \"disabled\", \"ngModelChange\"], [\"name\", \"allowPermissionsOverlay\", \"rx-id\", \"permissions-checkbox\", 3, \"label\", \"ngModel\", \"disabled\", \"ngModelChange\"], [\"name\", \"allowIndexesOverlay\", \"rx-id\", \"search-indexes-checkbox\", 3, \"label\", \"ngModel\", \"disabled\", \"ngModelChange\"], [\"name\", \"allowFieldsOverlay\", \"rx-id\", \"fields-checkbox\", 3, \"label\", \"ngModel\", \"disabled\", \"ngModelChange\"], [\"scrollHeight\", \"340px\", 3, \"value\", \"columns\", \"scrollable\", \"sortable\", \"resizableColumns\", \"bordered\", \"filterable\", \"dataKey\"], [1, \"modal-footer\"], [\"rx-id\", \"save-button\", \"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [\"type\", \"button\", \"rx-id\", \"cancel-button\", 1, \"btn\", \"btn-secondary\", \"btn-sm\", 3, \"click\"], [1, \"checkbox\", \"m-0\", \"pl-4\"], [1, \"checkbox__label\", \"pl-6\", \"ml-6\"], [\"type\", \"checkbox\", \"role\", \"checkbox\", 1, \"checkbox__input\", 3, \"ngModel\", \"disabled\", \"ngModelChange\", \"change\"], [1, \"checkbox__item\"]],\n  template: function RecordCustomizationOptionsEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, RecordCustomizationOptionsEditorComponent_ng_container_0_Template, 41, 61, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtemplate(2, RecordCustomizationOptionsEditorComponent_ng_template_2_Template, 6, 4, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.vm$));\n    }\n  },\n  directives: [i5.NgIf, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.NgForm, i3.AdaptRxSelectComponent, i6.NgControlStatus, i6.NgModel, i3.AdaptRxCheckboxComponent, i4.AdaptTableComponent, i6.CheckboxControlValueAccessor],\n  pipes: [i5.AsyncPipe, i2.TranslatePipe],\n  styles: [\"[_ngcontent-%COMP%]:root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}.designer-modal-body[_ngcontent-%COMP%]{height:645px;min-height:calc(100% - 61px)!important}.designer-modal-accordion-wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100%;overflow:auto;padding-top:10px}.designer-modal-accordion-content[_ngcontent-%COMP%]{position:relative}.designer-modal-accordion-content.cdk-drag-preview[_ngcontent-%COMP%]{z-index:1200!important}.designer-modal-drag-handle[_ngcontent-%COMP%]{cursor:move;position:absolute;top:0;left:0;height:46px;padding:14px 10px 14px 14px;z-index:1}.designer-modal-card-title-content[_ngcontent-%COMP%]{width:100%;display:flex}.designer-modal-card-title-content[_ngcontent-%COMP%]   .left-header-block[_ngcontent-%COMP%], .designer-modal-card-title-content[_ngcontent-%COMP%]   .right-header-block[_ngcontent-%COMP%]{display:flex;align-items:center}.designer-modal-card-title-content[_ngcontent-%COMP%]   .left-header-block[_ngcontent-%COMP%]{flex-grow:1;min-width:0;font-size:14px;padding-left:22px}.designer-modal-card-sub-title[_ngcontent-%COMP%]{color:#7c7f81;font-weight:normal}.designer-modal-card-title-index-buttons[_ngcontent-%COMP%]{display:flex;font-size:19px}.rx-card[_ngcontent-%COMP%]{overflow:auto}.rx-tree-draggable-node[_ngcontent-%COMP%]{cursor:pointer}.rx-tree-draggable-node.cdk-drag-preview[_ngcontent-%COMP%]{z-index:1200!important}.rx-tree-draggable-node.cdk-drag[_ngcontent-%COMP%]{opacity:1}.rx-tree-node-label[_ngcontent-%COMP%]{word-break:break-all}rx-form-builder[_ngcontent-%COMP%]{max-width:400px}\"],\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RecordCustomizationOptionsEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-record-customization-options-editor',\n      templateUrl: './record-customization-options-editor.component.html',\n      styleUrls: ['./record-customization-options-editor.component.scss'],\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i1.RxModalService\n    }, {\n      type: i3.ActiveModalRef\n    }, {\n      type: i0.Injector\n    }, {\n      type: i2.TranslateService\n    }];\n  }, {\n    recordCustomizationOptionsEditorForm: [{\n      type: ViewChild,\n      args: ['recordCustomizationOptionsEditorForm']\n    }],\n    recordFieldsColumnTemplate: [{\n      type: ViewChild,\n      args: ['recordFieldsColumnTemplate', {\n        static: true\n      }]\n    }]\n  });\n})();\nclass RecordCustomizationOptionsComponent extends ValueAccessor {\n  constructor(rxModalService, rxBundleCacheService, rxOverlayService, translateService) {\n    super();\n    this.rxModalService = rxModalService;\n    this.rxBundleCacheService = rxBundleCacheService;\n    this.rxOverlayService = rxOverlayService;\n    this.translateService = translateService;\n    this.scopeNameSubject = new BehaviorSubject('');\n    this.scopeSelectionOptions$ = this.rxBundleCacheService.getDefinitionScopeSelectionOptions().pipe(map(scopeSelectionOptions => scopeSelectionOptions), tap(scopeSelectionOptions => this.scopeSelectionOptions = scopeSelectionOptions));\n    this.definitionScopeName$ = this.scopeNameSubject.pipe(mergeMap(scopeName => this.rxBundleCacheService.getDefinitionScopeName(scopeName).pipe(map(definitionScopeName => definitionScopeName), tap(definitionScopeName => this.definitionScopeName = definitionScopeName))));\n    this.vm$ = combineLatest([this.definitionScopeName$, this.scopeSelectionOptions$]).pipe(map(([definitionScopeName, scopeSelectionOptions]) => ({\n      definitionScopeName,\n      scopeSelectionOptions\n    })));\n  }\n  ngOnInit() {\n    if (this.options) {\n      this.updateValues();\n    }\n  }\n  ngOnChanges(changes) {\n    if (changes.options) {\n      this.updateValues();\n    }\n  }\n  getOverlayOperation() {\n    var _a;\n    return this.rxOverlayService.getOverlayOperation(this.options.recordDefinition.overlayGroupId, ((_a = this.options.recordDefinition.overlayDescriptor) === null || _a === void 0 ? void 0 : _a.parentOverlayGroupId) || null);\n  }\n  updateValues() {\n    this.setAllowOverlayLabel(this.options.recordDefinition.customizationOptions.allowOtherPropertiesOverlay);\n    this.scopeNameSubject.next(this.options.recordDefinition.customizationOptions.scope);\n    if (this.options.recordDefinition.overlayGroupId) {\n      this.overlayOperation = this.getOverlayOperation();\n    } else {\n      this.overlayOperation = RX_OVERLAY.operationTypes.createdInThisOverlayGroup;\n    }\n  }\n  openCustomizationOptionsEditor() {\n    this.rxModalService.openModal({\n      title: this.translateService.instant('com.bmc.arsys.rx.client.designer.scope-customization-options.title'),\n      content: RecordCustomizationOptionsEditorComponent,\n      blockKeyboard: false,\n      data: {\n        definitionScopeName: this.definitionScopeName,\n        allowOverlay: this.options.recordDefinition.customizationOptions.allowOtherPropertiesOverlay,\n        scopeSelectionOptions: this.scopeSelectionOptions,\n        isDisabled: this.options.isDisabled,\n        overlayOperation: this.overlayOperation,\n        definitionTypeDisplayName: this.options.definitionTypeDisplayName,\n        recordDefinition: this.options.recordDefinition\n      }\n    }).then(result => {\n      this.setAllowOverlayLabel(result.allowOverlay);\n      this.definitionScopeName = this.scopeSelectionOptions.find(value => value.id === result.scope).name;\n      this.value = result;\n    }).catch(noop);\n  }\n  setAllowOverlayLabel(allowOverlay) {\n    this.allowOverlayLabel = allowOverlay ? RX_OVERLAY.overlayAllowedLabels.allowed : RX_OVERLAY.overlayAllowedLabels.notAllowed;\n  }\n  ngOnDestroy() {\n    this.scopeNameSubject.complete();\n  }\n}\nRecordCustomizationOptionsComponent.ɵfac = function RecordCustomizationOptionsComponent_Factory(t) {\n  return new (t || RecordCustomizationOptionsComponent)(i0.ɵɵdirectiveInject(i1.RxModalService), i0.ɵɵdirectiveInject(i2$1.RxBundleCacheService), i0.ɵɵdirectiveInject(i2$1.RxOverlayService), i0.ɵɵdirectiveInject(i2.TranslateService));\n};\nRecordCustomizationOptionsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RecordCustomizationOptionsComponent,\n  selectors: [[\"rx-scope-record-customization-control\"]],\n  inputs: {\n    options: \"options\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: RecordCustomizationOptionsComponent,\n    multi: true\n  }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [\"btn-type\", \"tertiary\", \"rx-id\", \"open-customization-options-editor-link\", 1, \"p-0\", 3, \"click\"], [\"name\", \"question_circle_o\", \"placement\", \"right\", 1, \"ml-2\", 3, \"adaptPopover\"], [\"rx-id\", \"scope\", 1, \"mb-0\", \"pt-2\"], [\"rx-id\", \"customization\", 1, \"pt-2\"]],\n  template: function RecordCustomizationOptionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, RecordCustomizationOptionsComponent_ng_container_0_Template, 12, 18, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.vm$));\n    }\n  },\n  directives: [i5.NgIf, i3.AdaptButtonComponent, i3.AdaptIconComponent, i3.AdaptPopoverDirective],\n  pipes: [i5.AsyncPipe, i2.TranslatePipe],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RecordCustomizationOptionsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-scope-record-customization-control',\n      templateUrl: './record-customization-options.component.html',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: RecordCustomizationOptionsComponent,\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i1.RxModalService\n    }, {\n      type: i2$1.RxBundleCacheService\n    }, {\n      type: i2$1.RxOverlayService\n    }, {\n      type: i2.TranslateService\n    }];\n  }, {\n    options: [{\n      type: Input\n    }]\n  });\n})();\nclass RecordCustomizationOptionsModule {}\nRecordCustomizationOptionsModule.ɵfac = function RecordCustomizationOptionsModule_Factory(t) {\n  return new (t || RecordCustomizationOptionsModule)();\n};\nRecordCustomizationOptionsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: RecordCustomizationOptionsModule,\n  declarations: [RecordCustomizationOptionsComponent, RecordCustomizationOptionsEditorComponent],\n  imports: [CommonModule, FormsModule, AdaptTooltipModule, AdaptRxSelectModule, AdaptButtonModule, AdaptCheckbox2Module, AdaptPopoverModule, AdaptIconModule, AdaptRxCheckboxModule, ReactiveFormsModule, TranslateModule, AdaptTableModule],\n  exports: [RecordCustomizationOptionsComponent]\n});\nRecordCustomizationOptionsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule, AdaptTooltipModule, AdaptRxSelectModule, AdaptButtonModule, AdaptCheckbox2Module, AdaptPopoverModule, AdaptIconModule, AdaptRxCheckboxModule, ReactiveFormsModule, TranslateModule, AdaptTableModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RecordCustomizationOptionsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [RecordCustomizationOptionsComponent, RecordCustomizationOptionsEditorComponent],\n      exports: [RecordCustomizationOptionsComponent],\n      entryComponents: [RecordCustomizationOptionsComponent, RecordCustomizationOptionsEditorComponent],\n      imports: [CommonModule, FormsModule, AdaptTooltipModule, AdaptRxSelectModule, AdaptButtonModule, AdaptCheckbox2Module, AdaptPopoverModule, AdaptIconModule, AdaptRxCheckboxModule, ReactiveFormsModule, TranslateModule, AdaptTableModule]\n    }]\n  }], null, null);\n})();\nclass RxFieldDefinitionInspectorHelperService {\n  constructor(rxFieldDefinitionService, rxRecordDefinitionService) {\n    this.rxFieldDefinitionService = rxFieldDefinitionService;\n    this.rxRecordDefinitionService = rxRecordDefinitionService;\n  }\n  isFieldEditable(fieldDefinition) {\n    return !this.rxFieldDefinitionService.isReadOnly(fieldDefinition) && !this.rxFieldDefinitionService.isJoinedField(fieldDefinition) && this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition);\n  }\n  isNameEditable(fieldDefinition) {\n    return !this.rxFieldDefinitionService.isInheritedField(fieldDefinition) && this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition) && !(fieldDefinition.lastUpdateTime && this.rxFieldDefinitionService.isOverlayMode(fieldDefinition));\n  }\n  isDescriptionEditable(fieldDefinition, definitionModel) {\n    if (this.rxRecordDefinitionService.isJoinRecord(definitionModel)) {\n      return includes(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds, fieldDefinition.id) && this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition);\n    } else {\n      return !this.rxFieldDefinitionService.isReadOnly(fieldDefinition) && this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition);\n    }\n  }\n  isRequiredEditable(fieldDefinition) {\n    const isAlwaysRequiredNonSystemField = !this.rxFieldDefinitionService.isExternalRecordField(fieldDefinition) && includes(RX_RECORD_DEFINITION.alwaysRequiredNonSystemFieldIds, fieldDefinition.id);\n    return this.isFieldEditable(fieldDefinition) && !isAlwaysRequiredNonSystemField;\n  }\n  isSubmitEditable(fieldDefinition, definitionModel) {\n    return this.isFieldEditable(fieldDefinition) && !definitionModel.isAuditRecordDefinition;\n  }\n  arePermissionsEditable(fieldDefinition, definitionModel) {\n    return fieldDefinition.id !== RX_RECORD_DEFINITION.coreFieldIds.id && this.rxFieldDefinitionService.isPermissionsCustomizationEnabled(fieldDefinition) && !(this.rxFieldDefinitionService.isJoinedField(fieldDefinition) && fieldDefinition.id !== RX_RECORD_DEFINITION.coreFieldIds.displayId) && !definitionModel.isAuditRecordDefinition && !includes(RX_RECORD_DEFINITION.AR_AUDIT_FIELD_IDS, fieldDefinition.id) || fieldDefinition.allowPermissionsEdit;\n  }\n  isAuditingEditable(fieldDefinition, definitionModel) {\n    return !this.rxFieldDefinitionService.isJoinedField(fieldDefinition) && !this.rxFieldDefinitionService.isInheritedField(fieldDefinition) && !definitionModel.isAuditRecordDefinition;\n  }\n  isFieldIdDisabled(fieldDefinition, skipValidate = false) {\n    return Boolean(fieldDefinition.lastUpdateTime) || !this.rxFieldDefinitionService.isJoinedField(fieldDefinition) && (this.rxFieldDefinitionService.isReservedField(fieldDefinition, skipValidate) || this.rxFieldDefinitionService.isInheritedField(fieldDefinition));\n  }\n  isDefaultValueEditable(fieldDefinition, definitionModel) {\n    return !(this.rxFieldDefinitionService.isReadOnly(fieldDefinition) && fieldDefinition.id !== RX_RECORD_DEFINITION.coreFieldIds.displayId) && this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition) && !this.rxRecordDefinitionService.isJoinRecord(definitionModel) && !definitionModel.isAuditRecordDefinition;\n  }\n  isLengthEditable(fieldDefinition, definitionModel) {\n    let isEditable = false;\n    if (!this.rxRecordDefinitionService.isJoinRecord(definitionModel)) {\n      let isReadonlyField = false;\n      // As an exception, the Length of the Display ID field should be editable for Regular records (if customization is enabled)\n      if (fieldDefinition.id !== RX_RECORD_DEFINITION.coreFieldIds.displayId) {\n        isReadonlyField = this.rxFieldDefinitionService.isReadOnly(fieldDefinition) || includes(RX_RECORD_DEFINITION.AR_CORE_FIELD_IDS, fieldDefinition.id);\n      }\n      isEditable = !isReadonlyField && this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition) && !definitionModel.isAuditRecordDefinition;\n    }\n    return isEditable;\n  }\n  isStoreEncryptedVisible(fieldDefinition, definitionModel) {\n    return !this.rxRecordDefinitionService.isCustomRecord(definitionModel) && !this.rxFieldDefinitionService.isExternalRecordField(fieldDefinition);\n  }\n  isStoreEncryptedEditable(fieldDefinition) {\n    return this.isFieldEditable(fieldDefinition) && !includes(RX_RECORD_DEFINITION.keyFieldIds, fieldDefinition.id);\n  }\n  isStoreHashedVisible(fieldDefinition, definitionModel) {\n    return !this.rxRecordDefinitionService.isCustomRecord(definitionModel) && !this.rxFieldDefinitionService.isExternalRecordField(fieldDefinition);\n  }\n  isStoreHashedEditable(fieldDefinition, definitionModel) {\n    return this.isFieldEditable(fieldDefinition) && !includes(RX_RECORD_DEFINITION.coreFieldIds, fieldDefinition.id) && !definitionModel.isAuditRecordDefinition;\n  }\n  isNamedListEditable(fieldDefinition, definitionModel) {\n    return this.isFieldEditable(fieldDefinition) && !includes(RX_RECORD_DEFINITION.keyFieldIds, fieldDefinition.id) && !definitionModel.isAuditRecordDefinition;\n  }\n  isFieldMappingEditable(fieldDefinition) {\n    return this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition);\n  }\n}\nRxFieldDefinitionInspectorHelperService.ɵfac = function RxFieldDefinitionInspectorHelperService_Factory(t) {\n  return new (t || RxFieldDefinitionInspectorHelperService)(i0.ɵɵinject(i3$1.RxFieldDefinitionService), i0.ɵɵinject(i3$1.RxRecordDefinitionService));\n};\nRxFieldDefinitionInspectorHelperService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxFieldDefinitionInspectorHelperService,\n  factory: RxFieldDefinitionInspectorHelperService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxFieldDefinitionInspectorHelperService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i3$1.RxFieldDefinitionService\n    }, {\n      type: i3$1.RxRecordDefinitionService\n    }];\n  }, null);\n})();\nclass FieldOptionEditorComponent extends ValueAccessor {\n  ngOnInit() {\n    this.isRequired = this.value === RecordFieldOption.Required || this.value === RecordFieldOption.System;\n  }\n  onSelectionChange() {\n    this.value = this.isRequired ? RecordFieldOption.Required : RecordFieldOption.Optional;\n  }\n}\nFieldOptionEditorComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵFieldOptionEditorComponent_BaseFactory;\n  return function FieldOptionEditorComponent_Factory(t) {\n    return (ɵFieldOptionEditorComponent_BaseFactory || (ɵFieldOptionEditorComponent_BaseFactory = i0.ɵɵgetInheritedFactory(FieldOptionEditorComponent)))(t || FieldOptionEditorComponent);\n  };\n}();\nFieldOptionEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FieldOptionEditorComponent,\n  selectors: [[\"rx-field-option-editor\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: FieldOptionEditorComponent,\n    multi: true\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 5,\n  consts: [[3, \"label\"], [3, \"ngModel\", \"disabled\", \"ngModelChange\"]],\n  template: function FieldOptionEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"adapt-rx-control-label\", 0);\n      i0.ɵɵpipe(1, \"translate\");\n      i0.ɵɵelementStart(2, \"adapt-rx-switch\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function FieldOptionEditorComponent_Template_adapt_rx_switch_ngModelChange_2_listener($event) {\n        return ctx.isRequired = $event;\n      })(\"ngModelChange\", function FieldOptionEditorComponent_Template_adapt_rx_switch_ngModelChange_2_listener() {\n        return ctx.onSelectionChange();\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(1, 3, \"com.bmc.arsys.rx.client.record-designer.field-properties.required-field.label\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.isRequired)(\"disabled\", ctx.isDisabled);\n    }\n  },\n  directives: [i3.AdaptRxControlLabelComponent, i3.AdaptRxSwitchComponent, i6.NgControlStatus, i6.NgModel],\n  pipes: [i2.TranslatePipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FieldOptionEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-field-option-editor',\n      templateUrl: './field-option-editor.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: FieldOptionEditorComponent,\n        multi: true\n      }]\n    }]\n  }], null, null);\n})();\nclass RxBaseFieldDefinitionService {\n  constructor(injector) {\n    this.injector = injector;\n    this.translateService = this.injector.get(TranslateService);\n    this.rxIdService = this.injector.get(RxIdService);\n    this.rxFieldDefinitionService = this.injector.get(RxFieldDefinitionService);\n    this.rxFieldDefinitionInspectorHelperService = this.injector.get(RxFieldDefinitionInspectorHelperService);\n    this.rxRecordDefinitionService = this.injector.get(RxRecordDefinitionService);\n  }\n  getNewFieldDefinitionModel(fieldProperties) {\n    return Object.assign({\n      id: this.rxIdService.generate(),\n      name: this.translateService.instant('com.bmc.arsys.rx.client.designer.default-field-name.label'),\n      description: null,\n      fieldOption: RX_RECORD_DEFINITION.fieldOptions.optional,\n      defaultValue: null,\n      allowPermissionsOverlay: true,\n      allowOtherPropertiesOverlay: true,\n      resourceType: this.resourceType\n    }, fieldProperties);\n  }\n  getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n    const isJoinedField = this.rxFieldDefinitionService.isJoinedField(fieldModel);\n    const isExternalRecordField = this.rxFieldDefinitionService.isExternalRecordField(fieldModel);\n    return [{\n      label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n      controls: [{\n        name: 'name',\n        component: TextFormControlComponent,\n        isDisabled: !this.rxFieldDefinitionInspectorHelperService.isNameEditable(fieldModel),\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n          required: true\n        }\n      }, {\n        name: 'description',\n        component: TextareaFormControlComponent,\n        isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isDescriptionEditable(fieldModel, definitionModel),\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label')\n        }\n      }, {\n        name: 'resourceType',\n        component: SelectFormControlComponent,\n        isDisabled: true,\n        options: {\n          required: true,\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.data-type.label'),\n          options: [{\n            id: RX_RECORD_DEFINITION.dataTypes.attachment.resourceType,\n            name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.attachment.labelKey)\n          }, {\n            id: RX_RECORD_DEFINITION.dataTypes.boolean.resourceType,\n            name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.boolean.labelKey)\n          }, {\n            id: RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType,\n            name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.dateOnly.labelKey)\n          }, {\n            id: RX_RECORD_DEFINITION.dataTypes.dateTime.resourceType,\n            name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.dateTime.labelKey)\n          }, {\n            id: RX_RECORD_DEFINITION.dataTypes.decimal.resourceType,\n            name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.decimal.labelKey)\n          }, {\n            id: RX_RECORD_DEFINITION.dataTypes.real.resourceType,\n            name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.real.labelKey)\n          }, {\n            id: RX_RECORD_DEFINITION.dataTypes.integer.resourceType,\n            name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.integer.labelKey)\n          }, {\n            id: RX_RECORD_DEFINITION.dataTypes.localizedCharacter.resourceType,\n            name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.localizedCharacter.labelKey)\n          }, {\n            id: RX_RECORD_DEFINITION.dataTypes.selection.resourceType,\n            name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.selection.labelKey)\n          }, {\n            id: RX_RECORD_DEFINITION.dataTypes.character.resourceType,\n            name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.character.labelKey)\n          }, {\n            id: RX_RECORD_DEFINITION.dataTypes.timeOnly.resourceType,\n            name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.timeOnly.labelKey)\n          }]\n        }\n      }]\n    }, {\n      label: this.translateService.instant('com.bmc.arsys.rx.client.common.details.label'),\n      controls: [{\n        name: 'fieldOption',\n        component: FieldOptionEditorComponent,\n        isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isRequiredEditable(fieldModel)\n      }, {\n        name: 'anyUserAllowedToSubmit',\n        component: SwitchFormControlComponent,\n        isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isSubmitEditable(fieldModel, definitionModel),\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.allow-anyone-to-submit.label')\n        }\n      }, {\n        name: 'permissions',\n        component: RxPermissionEditorComponent,\n        isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.arePermissionsEditable(fieldModel, definitionModel),\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.permissions.label'),\n          type: 'config',\n          permissionScope: RX_PERMISSION.permissionScope.all\n        }\n      }, {\n        name: '',\n        component: LabelFormControlComponent,\n        options: {\n          labelKey: 'com.bmc.arsys.rx.client.record-designer.definition-properties.auditing.title'\n        }\n      }, {\n        name: 'audit',\n        component: BooleanFormControlComponent,\n        isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isAuditingEditable(fieldModel, definitionModel),\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.auditing-options.audit.label'),\n          tooltip: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.auditing-options.audit.tooltip'),\n          shouldDisplayAsCheckbox: true\n        }\n      }, {\n        name: 'copy',\n        component: BooleanFormControlComponent,\n        isDisabled: fieldModel.audit || isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isAuditingEditable(fieldModel, definitionModel),\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.auditing-options.copy.label'),\n          tooltip: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.auditing-options.copy.tooltip'),\n          shouldDisplayAsCheckbox: true\n        }\n      }, {\n        name: 'id',\n        component: CounterFormControlComponent,\n        isDisabled: this.rxFieldDefinitionInspectorHelperService.isFieldIdDisabled(fieldModel, fieldModel.isNewField),\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.common.field-id.label'),\n          allowIntegerOnly: true\n        }\n      }]\n    }];\n  }\n  validate(fieldModel, definitionModel) {\n    const issues = [];\n    if (isEmpty(trim(fieldModel.name))) {\n      issues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message', {\n          propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label')\n        }),\n        data: {\n          propertyName: 'name',\n          guid: fieldModel.guid\n        }\n      });\n    }\n    if (!RX_RECORD_DEFINITION.validDefinitionNameRegex.test(fieldModel.name)) {\n      issues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message', {\n          propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label')\n        }),\n        data: {\n          propertyName: 'name',\n          guid: fieldModel.guid\n        }\n      });\n    }\n    if (!fieldModel.lastUpdateTime && isNumber(fieldModel.id) && !this.rxFieldDefinitionService.isExternalRecordField(fieldModel) && inRange(fieldModel.id, 1, RX_RECORD_DEFINITION.AR_MAX_RESERVED_FIELD_ID + 1) && !includes(RX_RECORD_DEFINITION.AR_CORE_FIELD_IDS, fieldModel.id)) {\n      issues.push({\n        type: ValidationIssueType.Warning,\n        data: {\n          propertyName: 'id',\n          guid: fieldModel.guid\n        },\n        description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.field-id-in-bmc-reserved-range-warning.message')\n      });\n    }\n    if (fieldModel.id && !inRange(fieldModel.id, 1, RX_NUMBER.maxInteger + 1)) {\n      issues.push({\n        type: ValidationIssueType.Error,\n        data: {\n          propertyName: 'id',\n          guid: fieldModel.guid\n        },\n        description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.invalid-field-id-range.message', {\n          max: RX_NUMBER.maxInteger\n        })\n      });\n    }\n    return issues;\n  }\n}\nclass RxAttachmentFieldDefinitionService extends RxBaseFieldDefinitionService {\n  constructor(injector) {\n    super(injector);\n    this.resourceType = RX_RECORD_DEFINITION.dataTypes.attachment.resourceType;\n  }\n  getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n    // Adding controls specific to attachment field to Details section\n    inspectorConfig[1].controls.push({\n      name: 'maxSize',\n      component: CounterFormControlComponent,\n      isDisabled: isReadOnly,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.max-file-size.label'),\n        allowIntegerOnly: true,\n        minValue: 0,\n        maxValue: RX_NUMBER.maxInteger\n      }\n    });\n    return inspectorConfig;\n  }\n}\nRxAttachmentFieldDefinitionService.ɵfac = function RxAttachmentFieldDefinitionService_Factory(t) {\n  return new (t || RxAttachmentFieldDefinitionService)(i0.ɵɵinject(i0.Injector));\n};\nRxAttachmentFieldDefinitionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxAttachmentFieldDefinitionService,\n  factory: RxAttachmentFieldDefinitionService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxAttachmentFieldDefinitionService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }];\n  }, null);\n})();\nclass RxBooleanFieldDefinitionService extends RxBaseFieldDefinitionService {\n  constructor(injector) {\n    super(injector);\n    this.resourceType = RX_RECORD_DEFINITION.dataTypes.boolean.resourceType;\n  }\n  getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n    // Adding controls specific to boolean field to Details section\n    inspectorConfig[1].controls.push({\n      name: 'defaultValue',\n      component: SelectFormControlComponent,\n      isDisabled: isReadOnly,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n        emptyOption: true,\n        options: [{\n          id: '0',\n          name: this.translateService.instant('com.bmc.arsys.rx.client.common.true')\n        }, {\n          id: '1',\n          name: this.translateService.instant('com.bmc.arsys.rx.client.common.false')\n        }]\n      }\n    });\n    return inspectorConfig;\n  }\n}\nRxBooleanFieldDefinitionService.ɵfac = function RxBooleanFieldDefinitionService_Factory(t) {\n  return new (t || RxBooleanFieldDefinitionService)(i0.ɵɵinject(i0.Injector));\n};\nRxBooleanFieldDefinitionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxBooleanFieldDefinitionService,\n  factory: RxBooleanFieldDefinitionService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxBooleanFieldDefinitionService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }];\n  }, null);\n})();\nclass RxCharacterFieldDefinitionService extends RxBaseFieldDefinitionService {\n  constructor(injector, rxNumberUtilsService) {\n    super(injector);\n    this.rxNumberUtilsService = rxNumberUtilsService;\n    this.resourceType = RX_RECORD_DEFINITION.dataTypes.character.resourceType;\n  }\n  getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n    if (this.rxFieldDefinitionInspectorHelperService.isStoreEncryptedVisible(fieldModel, definitionModel)) {\n      inspectorConfig[1].controls.push({\n        name: 'shouldPersistEncrypted',\n        component: SwitchFormControlComponent,\n        isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isStoreEncryptedEditable(fieldModel),\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.store-encrypted.label')\n        }\n      });\n    }\n    if (this.rxFieldDefinitionInspectorHelperService.isStoreHashedVisible(fieldModel, definitionModel)) {\n      inspectorConfig[1].controls.push({\n        name: 'shouldPersistHashed',\n        component: SwitchFormControlComponent,\n        isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isStoreHashedEditable(fieldModel, definitionModel),\n        options: {\n          label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.store-hashed.label')\n        }\n      });\n    }\n    inspectorConfig[1].controls = inspectorConfig[1].controls.concat([{\n      name: 'namedListDefinition',\n      component: RxDefinitionPickerComponent,\n      isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isNamedListEditable(fieldModel, definitionModel),\n      options: {\n        definitionType: RxDefinitionPickerType.NamedList,\n        label: this.translateService.instant('com.bmc.arsys.rx.client.definition-type.named-list.label')\n      }\n    }, {\n      name: 'maxLength',\n      component: CounterFormControlComponent,\n      isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isLengthEditable(fieldModel, definitionModel),\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.length.label'),\n        tooltip: fieldModel.id === RX_RECORD_DEFINITION.coreFieldIds.displayId && !this.rxRecordDefinitionService.isJoinRecord(definitionModel) && !fieldModel.isNewField ? this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.display-id.length.tooltip') : undefined,\n        allowIntegerOnly: true,\n        minValue: 0\n      }\n    }, {\n      name: 'defaultValue',\n      component: TextFormControlComponent,\n      isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isDefaultValueEditable(fieldModel, definitionModel),\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n        tooltip: fieldModel.id === RX_RECORD_DEFINITION.coreFieldIds.displayId && !this.rxRecordDefinitionService.isJoinRecord(definitionModel) && !fieldModel.isNewField ? new Tooltip(this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.display-id.default-value.tooltip')) : undefined,\n        allowIntegerOnly: true\n      }\n    }, {\n      name: 'pattern',\n      component: SelectFormControlComponent,\n      isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isFieldEditable(fieldModel),\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.pattern.label'),\n        emptyOption: true,\n        options: [{\n          name: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.alphabetical.label'),\n          id: '$ALPHA$'\n        }, {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.alphanumeric.label'),\n          id: '$ALNUM$'\n        }, {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.lowercase.label'),\n          id: '$LOWER$'\n        }, {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.named-list.label'),\n          id: '$NAMEDLIST$'\n        }, {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.numeric.label'),\n          id: '$DIGIT$'\n        }, {\n          name: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.uppercase.label'),\n          id: '$UPPER$'\n        }]\n      }\n    }]);\n    return inspectorConfig;\n  }\n  validate(fieldModel, definitionModel) {\n    const validationIssues = super.validate(fieldModel, definitionModel);\n    if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxLength) && Number(fieldModel.maxLength) < 0) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.invalid-min-length-error.message'),\n        data: {\n          propertyName: 'maxLength',\n          guid: fieldModel.guid\n        }\n      });\n    }\n    if (fieldModel.id === RX_RECORD_DEFINITION.coreFieldIds.displayId && (this.rxRecordDefinitionService.isRegularRecord(definitionModel) || this.rxRecordDefinitionService.isExternalRecord(definitionModel))) {\n      if (!(fieldModel.maxLength === 1 || inRange(fieldModel.maxLength, 5, 16))) {\n        validationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.invalid-max-length.message'),\n          data: {\n            propertyName: 'maxLength',\n            guid: fieldModel.guid\n          }\n        });\n      }\n      if (fieldModel.maxLength !== 1 && fieldModel.maxLength <= size(fieldModel.defaultValue) || fieldModel.maxLength === 1 && size(fieldModel.defaultValue) >= 15) {\n        validationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.invalid-display-id-range.message'),\n          data: {\n            propertyName: 'maxLength',\n            guid: fieldModel.guid\n          }\n        });\n      }\n    }\n    return validationIssues;\n  }\n}\nRxCharacterFieldDefinitionService.ɵfac = function RxCharacterFieldDefinitionService_Factory(t) {\n  return new (t || RxCharacterFieldDefinitionService)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i1$1.RxNumberUtilsService));\n};\nRxCharacterFieldDefinitionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxCharacterFieldDefinitionService,\n  factory: RxCharacterFieldDefinitionService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxCharacterFieldDefinitionService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i1$1.RxNumberUtilsService\n    }];\n  }, null);\n})();\nclass RxDateOnlyFieldDefinitionService extends RxBaseFieldDefinitionService {\n  constructor(injector) {\n    super(injector);\n    this.resourceType = RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType;\n  }\n  getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n    // Adding controls specific to date only field to Details section\n    inspectorConfig[1].controls.push({\n      name: 'defaultValue',\n      isDisabled: isReadOnly,\n      component: DateFormControlComponent,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n      }\n    });\n    return inspectorConfig;\n  }\n}\nRxDateOnlyFieldDefinitionService.ɵfac = function RxDateOnlyFieldDefinitionService_Factory(t) {\n  return new (t || RxDateOnlyFieldDefinitionService)(i0.ɵɵinject(i0.Injector));\n};\nRxDateOnlyFieldDefinitionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxDateOnlyFieldDefinitionService,\n  factory: RxDateOnlyFieldDefinitionService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxDateOnlyFieldDefinitionService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }];\n  }, null);\n})();\nclass RxDateTimeFieldDefinitionService extends RxBaseFieldDefinitionService {\n  constructor(injector) {\n    super(injector);\n    this.resourceType = RX_RECORD_DEFINITION.dataTypes.dateTime.resourceType;\n  }\n  getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n    // Adding controls specific to date only field to Details section\n    inspectorConfig[1].controls.push({\n      name: 'defaultValue',\n      component: DateTimeFormControlComponent,\n      isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isFieldEditable(fieldModel),\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n      }\n    });\n    return inspectorConfig;\n  }\n}\nRxDateTimeFieldDefinitionService.ɵfac = function RxDateTimeFieldDefinitionService_Factory(t) {\n  return new (t || RxDateTimeFieldDefinitionService)(i0.ɵɵinject(i0.Injector));\n};\nRxDateTimeFieldDefinitionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxDateTimeFieldDefinitionService,\n  factory: RxDateTimeFieldDefinitionService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxDateTimeFieldDefinitionService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }];\n  }, null);\n})();\nclass RxNumericFieldDefinitionService extends RxBaseFieldDefinitionService {\n  constructor(injector, rxNumberUtilsService) {\n    super(injector);\n    this.rxNumberUtilsService = rxNumberUtilsService;\n  }\n  validate(fieldModel, definitionModel) {\n    const validationIssues = super.validate(fieldModel, definitionModel);\n    if (fieldModel.defaultValue && Number(fieldModel.defaultValue) < this.minValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message', {\n          propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n          minValue: this.minValue\n        }),\n        data: {\n          propertyName: 'defaultValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n    if (fieldModel.defaultValue && Number(fieldModel.defaultValue) > this.maxValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message', {\n          propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n          maxValue: this.maxValue\n        }),\n        data: {\n          propertyName: 'defaultValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n    if (fieldModel.minValue && Number(fieldModel.minValue) < this.minValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message', {\n          propertyName: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'),\n          minValue: this.minValue\n        }),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n    if (fieldModel.minValue && Number(fieldModel.minValue) > this.maxValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message', {\n          propertyName: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'),\n          maxValue: this.maxValue\n        }),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n    if (fieldModel.maxValue && Number(fieldModel.maxValue) < this.minValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message', {\n          propertyName: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'),\n          minValue: this.minValue\n        }),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n    if (fieldModel.maxValue && Number(fieldModel.maxValue) > this.maxValue) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message', {\n          propertyName: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'),\n          maxValue: this.maxValue\n        }),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n    if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.defaultValue) && this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.minValue) && Number(fieldModel.defaultValue) >= this.minValue && Number(fieldModel.defaultValue) < Number(fieldModel.minValue)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message', {\n          propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n          minValue: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label')\n        }),\n        data: {\n          propertyName: 'defaultValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n    if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.defaultValue) && this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxValue) && Number(fieldModel.defaultValue) <= this.maxValue && Number(fieldModel.defaultValue) > Number(fieldModel.maxValue)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message', {\n          propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n          maxValue: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label')\n        }),\n        data: {\n          propertyName: 'defaultValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n    if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.minValue) && this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxValue) && Number(fieldModel.minValue) > Number(fieldModel.maxValue)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message', {\n          propertyName: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'),\n          maxValue: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label')\n        }),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n    if (isNil(fieldModel.minValue)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message', {\n          propertyName: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label')\n        }),\n        data: {\n          propertyName: 'minValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n    if (isNil(fieldModel.maxValue)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message', {\n          propertyName: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label')\n        }),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n    if (this.resourceType !== RX_RECORD_DEFINITION.dataTypes.integer.resourceType && isNil(fieldModel.precision)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message', {\n          propertyName: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.precision.label')\n        }),\n        data: {\n          propertyName: 'maxValue',\n          guid: fieldModel.guid\n        }\n      });\n    }\n    return validationIssues;\n  }\n  getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n    // Adding controls specific to decimal field to Details section\n    inspectorConfig[1].controls = inspectorConfig[1].controls.concat([{\n      name: 'precision',\n      component: CounterFormControlComponent,\n      isDisabled: isReadOnly,\n      options: omitBy({\n        label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.precision.label'),\n        required: true,\n        allowIntegerOnly: true,\n        minValue: this.minPrecision,\n        maxValue: this.maxPrecision\n      }, isNil)\n    }, {\n      name: 'minValue',\n      component: CounterFormControlComponent,\n      isDisabled: isReadOnly,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'),\n        required: true,\n        allowIntegerOnly: this.allowOnlyInteger,\n        minValue: this.minValue,\n        maxValue: this.maxValue\n      }\n    }, {\n      name: 'maxValue',\n      component: CounterFormControlComponent,\n      isDisabled: isReadOnly,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'),\n        required: true,\n        allowIntegerOnly: this.allowOnlyInteger,\n        minValue: this.minValue,\n        maxValue: this.maxValue\n      }\n    }, {\n      name: 'defaultValue',\n      component: CounterFormControlComponent,\n      isDisabled: isReadOnly,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n        allowIntegerOnly: this.allowOnlyInteger,\n        minValue: this.minValue,\n        maxValue: this.maxValue\n      }\n    }]);\n    return inspectorConfig;\n  }\n}\nRxNumericFieldDefinitionService.ɵfac = function RxNumericFieldDefinitionService_Factory(t) {\n  return new (t || RxNumericFieldDefinitionService)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i1$1.RxNumberUtilsService));\n};\nRxNumericFieldDefinitionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxNumericFieldDefinitionService,\n  factory: RxNumericFieldDefinitionService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxNumericFieldDefinitionService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i1$1.RxNumberUtilsService\n    }];\n  }, null);\n})();\nclass RxDecimalFieldDefinitionService extends RxNumericFieldDefinitionService {\n  constructor() {\n    super(...arguments);\n    this.resourceType = RX_RECORD_DEFINITION.dataTypes.decimal.resourceType;\n    this.minPrecision = 0;\n    this.maxPrecision = 9;\n    this.minValue = RX_NUMBER.minDecimal;\n    this.maxValue = RX_NUMBER.maxDecimal;\n    this.allowOnlyInteger = false;\n  }\n  getNewFieldDefinitionModel(fieldProperties) {\n    return super.getNewFieldDefinitionModel(Object.assign(Object.assign({}, fieldProperties), {\n      precision: 2,\n      minValue: this.minValue,\n      maxValue: this.maxValue\n    }));\n  }\n  validate(fieldModel, definitionModel) {\n    const validationIssues = super.validate(fieldModel, definitionModel);\n    if (!inRange(fieldModel.precision, this.minPrecision, this.maxPrecision + 1)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.invalid-precision-range.message', {\n          min: this.minPrecision,\n          max: this.maxPrecision\n        }),\n        data: {\n          propertyName: 'precision',\n          guid: fieldModel.guid\n        }\n      });\n    }\n    return validationIssues;\n  }\n}\nRxDecimalFieldDefinitionService.ɵfac = /* @__PURE__ */function () {\n  let ɵRxDecimalFieldDefinitionService_BaseFactory;\n  return function RxDecimalFieldDefinitionService_Factory(t) {\n    return (ɵRxDecimalFieldDefinitionService_BaseFactory || (ɵRxDecimalFieldDefinitionService_BaseFactory = i0.ɵɵgetInheritedFactory(RxDecimalFieldDefinitionService)))(t || RxDecimalFieldDefinitionService);\n  };\n}();\nRxDecimalFieldDefinitionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxDecimalFieldDefinitionService,\n  factory: RxDecimalFieldDefinitionService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxDecimalFieldDefinitionService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass RxIntegerFieldDefinitionService extends RxNumericFieldDefinitionService {\n  constructor() {\n    super(...arguments);\n    this.resourceType = RX_RECORD_DEFINITION.dataTypes.integer.resourceType;\n    this.minPrecision = null;\n    this.maxPrecision = null;\n    this.minValue = RX_NUMBER.minInteger;\n    this.maxValue = RX_NUMBER.maxInteger;\n    this.allowOnlyInteger = true;\n  }\n  getNewFieldDefinitionModel(fieldProperties) {\n    return super.getNewFieldDefinitionModel(Object.assign(Object.assign({}, fieldProperties), {\n      minValue: this.minValue,\n      maxValue: this.maxValue\n    }));\n  }\n  getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n    // Removing Precision control not required for integer field\n    inspectorConfig[1].controls.splice(7, 1);\n    return inspectorConfig;\n  }\n}\nRxIntegerFieldDefinitionService.ɵfac = /* @__PURE__ */function () {\n  let ɵRxIntegerFieldDefinitionService_BaseFactory;\n  return function RxIntegerFieldDefinitionService_Factory(t) {\n    return (ɵRxIntegerFieldDefinitionService_BaseFactory || (ɵRxIntegerFieldDefinitionService_BaseFactory = i0.ɵɵgetInheritedFactory(RxIntegerFieldDefinitionService)))(t || RxIntegerFieldDefinitionService);\n  };\n}();\nRxIntegerFieldDefinitionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxIntegerFieldDefinitionService,\n  factory: RxIntegerFieldDefinitionService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxIntegerFieldDefinitionService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass LocalizedCharacterFieldEditorComponent extends ValueAccessor {\n  constructor(rxModalService, translateService) {\n    super();\n    this.rxModalService = rxModalService;\n    this.translateService = translateService;\n  }\n  localize() {\n    this.rxModalService.openModal({\n      title: this.translateService.instant('com.bmc.arsys.rx.client.view-components.localized-character-field.dialog.title'),\n      data: {\n        valueByLocale: Object.assign({}, this.value),\n        hideCurrentLocale: true,\n        isReadOnly: this.options.isReadOnly\n      },\n      size: 'sm',\n      content: LocalizedCharacterFieldValueModalComponent\n    }).then(data => {\n      if (data) {\n        this.value = data.valueByLocale;\n      }\n    }).catch(noop);\n  }\n}\nLocalizedCharacterFieldEditorComponent.ɵfac = function LocalizedCharacterFieldEditorComponent_Factory(t) {\n  return new (t || LocalizedCharacterFieldEditorComponent)(i0.ɵɵdirectiveInject(i1.RxModalService), i0.ɵɵdirectiveInject(i2.TranslateService));\n};\nLocalizedCharacterFieldEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LocalizedCharacterFieldEditorComponent,\n  selectors: [[\"rx-localized-character-field-editor\"]],\n  inputs: {\n    options: \"options\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: LocalizedCharacterFieldEditorComponent,\n    multi: true\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 4,\n  consts: [[\"type\", \"button\", 1, \"localize-button\", \"btn\", \"btn-link\", \"focusable\", \"d-icon-left-pencil\", \"p-0\", \"float-end\", 3, \"click\"], [1, \"pl-1\"]],\n  template: function LocalizedCharacterFieldEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵelementStart(1, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function LocalizedCharacterFieldEditorComponent_Template_button_click_1_listener() {\n        return ctx.localize();\n      });\n      i0.ɵɵtext(2);\n      i0.ɵɵpipe(3, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 1);\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 2, \"com.bmc.arsys.rx.client.view-components.localized-character-field.button.localize.label\"), \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.value[\"en-US\"]);\n    }\n  },\n  pipes: [i2.TranslatePipe],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LocalizedCharacterFieldEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-localized-character-field-editor',\n      templateUrl: './localized-character-field-editor.component.html',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: LocalizedCharacterFieldEditorComponent,\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i1.RxModalService\n    }, {\n      type: i2.TranslateService\n    }];\n  }, {\n    options: [{\n      type: Input\n    }]\n  });\n})();\nclass RxLocalizedCharacterFieldDefinitionService extends RxBaseFieldDefinitionService {\n  constructor(injector, rxNumberUtilsService) {\n    super(injector);\n    this.rxNumberUtilsService = rxNumberUtilsService;\n    this.resourceType = RX_RECORD_DEFINITION.dataTypes.localizedCharacter.resourceType;\n  }\n  getNewFieldDefinitionModel(fieldProperties) {\n    return super.getNewFieldDefinitionModel(Object.assign(Object.assign({}, fieldProperties), {\n      maxLength: 254\n    }));\n  }\n  getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n    inspectorConfig[1].controls = inspectorConfig[1].controls.concat([{\n      name: 'maxLength',\n      component: CounterFormControlComponent,\n      isDisabled: isReadOnly,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.length.label'),\n        minValue: 0,\n        maxValue: 254,\n        allowIntegerOnly: true\n      }\n    }, {\n      name: 'defaultValueByLocale',\n      component: LocalizedCharacterFieldEditorComponent,\n      options: {\n        isReadOnly: isReadOnly\n      }\n    }]);\n    return inspectorConfig;\n  }\n  validate(fieldModel, definitionModel) {\n    const validationIssues = super.validate(fieldModel, definitionModel);\n    if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxLength) && Number(fieldModel.maxLength) < 0) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.invalid-min-length-error.message'),\n        data: {\n          propertyName: 'maxLength',\n          guid: fieldModel.guid\n        }\n      });\n    }\n    return validationIssues;\n  }\n}\nRxLocalizedCharacterFieldDefinitionService.ɵfac = function RxLocalizedCharacterFieldDefinitionService_Factory(t) {\n  return new (t || RxLocalizedCharacterFieldDefinitionService)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i1$1.RxNumberUtilsService));\n};\nRxLocalizedCharacterFieldDefinitionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxLocalizedCharacterFieldDefinitionService,\n  factory: RxLocalizedCharacterFieldDefinitionService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxLocalizedCharacterFieldDefinitionService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i1$1.RxNumberUtilsService\n    }];\n  }, null);\n})();\nclass RxRealFieldDefinitionService extends RxNumericFieldDefinitionService {\n  constructor() {\n    super(...arguments);\n    this.resourceType = RX_RECORD_DEFINITION.dataTypes.real.resourceType;\n    this.maxPrecision = null;\n    this.minValue = -1.845e19;\n    this.maxValue = 1.845e19;\n    this.allowOnlyInteger = false;\n    this.AR_PRECISION_NONE = -1;\n  }\n  getNewFieldDefinitionModel(fieldProperties) {\n    return super.getNewFieldDefinitionModel(Object.assign(Object.assign({}, fieldProperties), {\n      precision: 6,\n      minValue: this.minValue,\n      maxValue: this.maxValue\n    }));\n  }\n  validate(fieldModel, definitionModel) {\n    const validationIssues = super.validate(fieldModel, definitionModel);\n    if (!isFinite(fieldModel.precision) || fieldModel.precision < 1 && fieldModel.precision != this.AR_PRECISION_NONE) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.invalid-real-field-precision-range.message'),\n        data: {\n          propertyName: 'precision',\n          guid: fieldModel.guid\n        }\n      });\n    }\n    return validationIssues;\n  }\n}\nRxRealFieldDefinitionService.ɵfac = /* @__PURE__ */function () {\n  let ɵRxRealFieldDefinitionService_BaseFactory;\n  return function RxRealFieldDefinitionService_Factory(t) {\n    return (ɵRxRealFieldDefinitionService_BaseFactory || (ɵRxRealFieldDefinitionService_BaseFactory = i0.ɵɵgetInheritedFactory(RxRealFieldDefinitionService)))(t || RxRealFieldDefinitionService);\n  };\n}();\nRxRealFieldDefinitionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxRealFieldDefinitionService,\n  factory: RxRealFieldDefinitionService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxRealFieldDefinitionService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass RxSelectionFieldDefinitionService extends RxBaseFieldDefinitionService {\n  constructor(injector) {\n    super(injector);\n    this.resourceType = RX_RECORD_DEFINITION.dataTypes.selection.resourceType;\n  }\n  getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n    inspectorConfig[1].controls.push({\n      name: 'selectionFieldOptionProperties',\n      component: SelectionFieldOptionsComponent,\n      options: {\n        isReadOnly: !this.rxFieldDefinitionInspectorHelperService.isFieldEditable(fieldModel)\n      }\n    });\n    return inspectorConfig;\n  }\n  validate(fieldModel, definitionModel) {\n    var _a;\n    const validationIssues = super.validate(fieldModel, definitionModel);\n    if (isEmpty((_a = fieldModel.selectionFieldOptionProperties) === null || _a === void 0 ? void 0 : _a.optionNamesById)) {\n      validationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message', {\n          propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.options.label')\n        }),\n        data: {\n          propertyName: 'selectionFieldOptionProperties',\n          guid: fieldModel.guid\n        }\n      });\n    }\n    return validationIssues;\n  }\n}\nRxSelectionFieldDefinitionService.ɵfac = function RxSelectionFieldDefinitionService_Factory(t) {\n  return new (t || RxSelectionFieldDefinitionService)(i0.ɵɵinject(i0.Injector));\n};\nRxSelectionFieldDefinitionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxSelectionFieldDefinitionService,\n  factory: RxSelectionFieldDefinitionService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxSelectionFieldDefinitionService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }];\n  }, null);\n})();\nclass RxTimeOnlyFieldDefinitionService extends RxBaseFieldDefinitionService {\n  constructor(injector) {\n    super(injector);\n    this.resourceType = RX_RECORD_DEFINITION.dataTypes.timeOnly.resourceType;\n  }\n  getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n    const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n    inspectorConfig[1].controls.push({\n      name: 'defaultValue',\n      isDisabled: isReadOnly,\n      component: TimeFormControlComponent,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n      }\n    });\n    return inspectorConfig;\n  }\n}\nRxTimeOnlyFieldDefinitionService.ɵfac = function RxTimeOnlyFieldDefinitionService_Factory(t) {\n  return new (t || RxTimeOnlyFieldDefinitionService)(i0.ɵɵinject(i0.Injector));\n};\nRxTimeOnlyFieldDefinitionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxTimeOnlyFieldDefinitionService,\n  factory: RxTimeOnlyFieldDefinitionService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxTimeOnlyFieldDefinitionService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }];\n  }, null);\n})();\nclass RxFieldDefinitionManagerService {\n  constructor(rxAttachmentFieldDefinitionService, rxBooleanFieldDefinitionService, rxCharacterFieldDefinitionService, rxLocalizedCharacterFieldDefinitionService, rxDateTimeFieldDefinitionService, rxDateOnlyFieldDefinitionService, rxTimeOnlyFieldDefinitionService, rxIntegerFieldDefinitionService, rxDecimalFieldDefinitionService, rxRealFieldDefinitionService, rxSelectionFieldDefinitionService) {\n    this.fieldServices = new Map();\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.attachment.resourceType, rxAttachmentFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.boolean.resourceType, rxBooleanFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.character.resourceType, rxCharacterFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.localizedCharacter.resourceType, rxLocalizedCharacterFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.dateTime.resourceType, rxDateTimeFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType, rxDateOnlyFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.timeOnly.resourceType, rxTimeOnlyFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.integer.resourceType, rxIntegerFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.decimal.resourceType, rxDecimalFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.real.resourceType, rxRealFieldDefinitionService);\n    this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.selection.resourceType, rxSelectionFieldDefinitionService);\n  }\n  getNewFieldDefinitionModel(resourceType, fieldProperties) {\n    return this.fieldServices.get(resourceType).getNewFieldDefinitionModel(fieldProperties);\n  }\n  getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n    return this.fieldServices.get(fieldModel.resourceType).getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n  }\n  validate(fieldModel, definitionModel) {\n    return this.fieldServices.get(fieldModel.resourceType).validate(fieldModel, definitionModel);\n  }\n}\nRxFieldDefinitionManagerService.ɵfac = function RxFieldDefinitionManagerService_Factory(t) {\n  return new (t || RxFieldDefinitionManagerService)(i0.ɵɵinject(RxAttachmentFieldDefinitionService), i0.ɵɵinject(RxBooleanFieldDefinitionService), i0.ɵɵinject(RxCharacterFieldDefinitionService), i0.ɵɵinject(RxLocalizedCharacterFieldDefinitionService), i0.ɵɵinject(RxDateTimeFieldDefinitionService), i0.ɵɵinject(RxDateOnlyFieldDefinitionService), i0.ɵɵinject(RxTimeOnlyFieldDefinitionService), i0.ɵɵinject(RxIntegerFieldDefinitionService), i0.ɵɵinject(RxDecimalFieldDefinitionService), i0.ɵɵinject(RxRealFieldDefinitionService), i0.ɵɵinject(RxSelectionFieldDefinitionService));\n};\nRxFieldDefinitionManagerService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxFieldDefinitionManagerService,\n  factory: RxFieldDefinitionManagerService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxFieldDefinitionManagerService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: RxAttachmentFieldDefinitionService\n    }, {\n      type: RxBooleanFieldDefinitionService\n    }, {\n      type: RxCharacterFieldDefinitionService\n    }, {\n      type: RxLocalizedCharacterFieldDefinitionService\n    }, {\n      type: RxDateTimeFieldDefinitionService\n    }, {\n      type: RxDateOnlyFieldDefinitionService\n    }, {\n      type: RxTimeOnlyFieldDefinitionService\n    }, {\n      type: RxIntegerFieldDefinitionService\n    }, {\n      type: RxDecimalFieldDefinitionService\n    }, {\n      type: RxRealFieldDefinitionService\n    }, {\n      type: RxSelectionFieldDefinitionService\n    }];\n  }, null);\n})();\nclass RecordInheritanceEditorComponent extends ValueAccessor {\n  constructor(translateService, rxFieldDefinitionManagerService, rxRecordDefinitionCacheService, rxNotificationService, rxGuidService, rxFieldDefinitionService) {\n    super();\n    this.translateService = translateService;\n    this.rxFieldDefinitionManagerService = rxFieldDefinitionManagerService;\n    this.rxRecordDefinitionCacheService = rxRecordDefinitionCacheService;\n    this.rxNotificationService = rxNotificationService;\n    this.rxGuidService = rxGuidService;\n    this.rxFieldDefinitionService = rxFieldDefinitionService;\n    this.inheritanceDescriptor = {\n      inheritingFrom: '',\n      isInheritingRules: true,\n      isInheritingFieldPermissions: true,\n      isInheritingAssociations: true,\n      isInheritingFieldAuditOptions: true\n    };\n    this.recordDefinitionPickerOptions = {\n      label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.record-to-inherit.label'),\n      definitionType: RxDefinitionPickerType.InheritableRecord,\n      availableDefinitionPickerStates: {\n        definitionButtonsGroups: [RxDefinitionPickerScope.Bundle, RxDefinitionPickerScope.All],\n        search: RxDefinitionPickerScope.All\n      }\n    };\n    this.destroyed$ = new ReplaySubject(1);\n    this.isReadOnlySubject = new BehaviorSubject(false);\n    this.isSharedInstanceStorageLockedSubject = new BehaviorSubject(true);\n    this.inheritingFromSubject = new BehaviorSubject('');\n    this.isMakeFinalDisabledSubject = new BehaviorSubject(false);\n    this.isSharedInstanceStorageDisabled$ = combineLatest([this.isReadOnlySubject, this.isSharedInstanceStorageLockedSubject]).pipe(map(([isReadOnly, isSharedInstanceStorage]) => isReadOnly || isSharedInstanceStorage));\n    this.inheritFromRecordDefinition$ = this.inheritingFromSubject.pipe(switchMap(recordDefinitionName => iif(() => Boolean(recordDefinitionName), this.rxRecordDefinitionCacheService.getRecordDefinition(recordDefinitionName), of(null))), tap(recordDefinition => {\n      if (recordDefinition) {\n        this.inheritFromRecordDefinition = recordDefinition;\n        this.isInheritingCoreFields = false;\n        if (recordDefinition.isSharedInstanceStorage) {\n          this.inheritanceOptions.isSharedInstanceStorage = true;\n          this.updateInheritanceOptions();\n          this.state.inheritCoreFieldsAutomatically = true;\n          this.isInheritingCoreFields = true;\n        } else {\n          if (this.isNew) {\n            this.inheritanceOptions.isSharedInstanceStorage = false;\n          }\n          this.state.inheritCoreFieldsAutomatically = false;\n        }\n        this.inheritanceDescriptor.isInheritingRules = true;\n        this.inheritedFieldDefinitions = this.getInheritedFieldDefinitions(recordDefinition);\n        forEach(recordDefinition.securityLabels, function (securityLabel) {\n          securityLabel.inherited = true;\n        });\n        this.setValue();\n      }\n    }));\n    this.isCoreFieldsOptionDisabled$ = combineLatest([this.isReadOnlySubject, this.inheritFromRecordDefinition$]).pipe(map(([isReadOnly, inheritingFromRecordDefinition]) => !this.inheritFrom || isReadOnly || this.state.inheritCoreFieldsAutomatically || this.state.lockCoreFieldInheritanceOption));\n    this.vm$ = combineLatest([this.isReadOnlySubject, this.isSharedInstanceStorageDisabled$, this.isMakeFinalDisabledSubject, this.isCoreFieldsOptionDisabled$]).pipe(map(([isReadOnly, isSharedInstanceStorageDisabled, isMakeFinalDisabled, isCoreFieldsOptionDisabled]) => ({\n      isReadOnly,\n      isSharedInstanceStorageDisabled,\n      isMakeFinalDisabled,\n      isCoreFieldsOptionDisabled\n    })));\n  }\n  ngOnInit() {\n    if (this.options) {\n      this.updateValues();\n    }\n  }\n  updateInheritanceOptions() {\n    this.isMakeFinalDisabledSubject.next(this.isReadOnlySubject.value || this.inheritanceOptions.isSharedInstanceStorage && !this.inheritingFromSubject.value);\n    if (this.inheritanceOptions.isSharedInstanceStorage && this.inheritanceOptions.isFinal && !this.inheritFromRecordDefinition) {\n      this.inheritanceOptions.isFinal = false;\n    }\n  }\n  onInheritanceOptionsChange() {\n    this.updateInheritanceOptions();\n    this.setValue();\n  }\n  onInheritanceDescriptorChange() {\n    if (this.inheritanceDescriptor.isInheritingFieldPermissions) {\n      this.inheritedFieldDefinitions = this.getInheritedFieldDefinitions(this.inheritFromRecordDefinition);\n    }\n    this.setValue();\n  }\n  ngOnChanges(changes) {\n    if (changes.options) {\n      this.updateValues();\n    }\n  }\n  onRecordDefinitionNameChange(recordDefinitionName) {\n    this.rxNotificationService.addInfoMessage(this.translateService.instant('com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.inherited-fields-remaining-info.message'));\n    if (recordDefinitionName) {\n      this.inheritingFromSubject.next(recordDefinitionName);\n    } else {\n      this.inheritedFieldDefinitions = [];\n      this.setValue();\n    }\n  }\n  onInheritCoreFieldsChange() {\n    this.inheritedFieldDefinitions = this.getInheritedFieldDefinitions(this.inheritFromRecordDefinition);\n    this.setValue();\n  }\n  getInheritedFieldDefinitions(recordDefinition) {\n    var _a;\n    const newFieldProperties = union(keys(this.rxFieldDefinitionManagerService.getNewFieldDefinitionModel(RX_RECORD_DEFINITION.resourceTypes.character, null)), ['isInherited', 'anyUserAllowedToSubmit', 'displayType', 'explicitPermissions', 'fieldMapping', 'fieldTypeName', 'maxLength', 'maxSize', 'maxValue', 'minValue', 'namedListDefinition', 'optionNamesById', 'optionLabelsById', 'precision', 'resourceType', 'searchable', 'shouldPersistEncrypted', 'shouldPersistHashed', 'tags', 'version']);\n    if ((_a = this.inheritanceDescriptor) === null || _a === void 0 ? void 0 : _a.isInheritingFieldPermissions) {\n      newFieldProperties.push('permissions');\n    }\n    const inheritedFieldDefinitions = map$1(recordDefinition.fieldDefinitions, fieldDefinition => {\n      fieldDefinition.isInherited = true;\n      return Object.assign(Object.assign({}, pick(fieldDefinition, newFieldProperties)), {\n        guid: this.rxGuidService.generate(),\n        isCoreField: this.rxFieldDefinitionService.isCoreField(fieldDefinition),\n        selectionFieldOptionProperties: fieldDefinition.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType ? {\n          defaultValue: null,\n          optionNamesById: fieldDefinition.optionNamesById,\n          optionLabelsById: fieldDefinition.optionLabelsById\n        } : null\n      });\n    });\n    if (!this.isInheritingCoreFields) {\n      remove(inheritedFieldDefinitions, function (fieldDefinition) {\n        return includes(RX_RECORD_DEFINITION.arCoreFieldIds, fieldDefinition.id);\n      });\n    }\n    return inheritedFieldDefinitions;\n  }\n  updateValues() {\n    var _a;\n    if (this.options) {\n      const recordDefinition = this.options.recordDefinition;\n      this.inheritanceOptions = Object.assign({}, recordDefinition.recordInheritanceSelector.inheritanceOptions);\n      if (recordDefinition.recordInheritanceSelector.inheritanceDescriptor) {\n        this.inheritanceDescriptor = Object.assign({}, recordDefinition.recordInheritanceSelector.inheritanceDescriptor);\n        this.inheritFrom = this.inheritanceDescriptor.inheritingFrom;\n      }\n      this.isNew = !recordDefinition.lastUpdateTime;\n      this.isReadOnlySubject.next(this.options.isReadOnly);\n      this.isSharedInstanceStorageLockedSubject.next(!this.isNew || !isEmpty(this.inheritFrom));\n      if ((_a = recordDefinition.inheritanceDescriptor) === null || _a === void 0 ? void 0 : _a.inheritingFrom) {\n        this.isSharedInstanceStorageLockedSubject.next(true);\n        this.rxRecordDefinitionCacheService.getRecordDefinition(recordDefinition.inheritanceDescriptor.inheritingFrom).pipe(take(1)).subscribe(inheritFromRecordDefinition => {\n          if (inheritFromRecordDefinition.isSharedInstanceStorage) {\n            this.state.inheritCoreFieldsAutomatically = true;\n            this.isInheritingCoreFields = true;\n          } else {\n            var fieldDefinitions = recordDefinition.fields;\n            this.isInheritingCoreFields = some(fieldDefinitions, function (fieldDefinition) {\n              return fieldDefinition.isInherited && includes(RX_RECORD_DEFINITION.arCoreFieldIds, fieldDefinition.id);\n            });\n          }\n        });\n      }\n      this.state = {\n        editMode: !this.isNew,\n        inheritCoreFieldsAutomatically: false,\n        lockCoreFieldInheritanceOption: !this.isNew\n      };\n    }\n  }\n  setValue() {\n    this.value = {\n      inheritanceOptions: this.inheritanceOptions,\n      inheritanceDescriptor: this.inheritFrom ? Object.assign(Object.assign({}, this.inheritanceDescriptor), {\n        inheritingFrom: this.inheritFrom\n      }) : null,\n      isInheritingCoreFields: this.inheritFrom ? this.isInheritingCoreFields : null,\n      inheritedFieldDefinitions: this.inheritedFieldDefinitions\n    };\n  }\n  ngOnDestroy() {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n    this.isReadOnlySubject.complete();\n    this.isSharedInstanceStorageLockedSubject.complete();\n    this.inheritingFromSubject.complete();\n    this.isMakeFinalDisabledSubject.complete();\n  }\n}\nRecordInheritanceEditorComponent.ɵfac = function RecordInheritanceEditorComponent_Factory(t) {\n  return new (t || RecordInheritanceEditorComponent)(i0.ɵɵdirectiveInject(i2.TranslateService), i0.ɵɵdirectiveInject(RxFieldDefinitionManagerService), i0.ɵɵdirectiveInject(i3$1.RxRecordDefinitionCacheService), i0.ɵɵdirectiveInject(i2$1.RxNotificationService), i0.ɵɵdirectiveInject(i1$1.RxGuidService), i0.ɵɵdirectiveInject(i3$1.RxFieldDefinitionService));\n};\nRecordInheritanceEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RecordInheritanceEditorComponent,\n  selectors: [[\"rx-record-inheritance-selector\"]],\n  inputs: {\n    options: \"options\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: RecordInheritanceEditorComponent,\n    multi: true\n  }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [3, \"label\", \"ngModel\", \"disabled\", \"tooltip\", \"ngModelChange\"], [\"name\", \"inherit-from\", \"rx-id\", \"record-definition-name-field\", 1, \"form-group\", \"d-block\", 3, \"options\", \"ngModel\", \"disabled\", \"ngModelChange\"], [3, \"label\", \"ngModel\", \"disabled\", \"ngModelChange\"]],\n  template: function RecordInheritanceEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, RecordInheritanceEditorComponent_ng_container_0_Template, 12, 34, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.vm$));\n    }\n  },\n  directives: [i5.NgIf, i3.AdaptRxCheckboxComponent, i6.NgControlStatus, i6.NgModel, i11.RxDefinitionPickerComponent],\n  pipes: [i5.AsyncPipe, i2.TranslatePipe],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RecordInheritanceEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-record-inheritance-selector',\n      templateUrl: './record-inheritance-editor.component.html',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: RecordInheritanceEditorComponent,\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i2.TranslateService\n    }, {\n      type: RxFieldDefinitionManagerService\n    }, {\n      type: i3$1.RxRecordDefinitionCacheService\n    }, {\n      type: i2$1.RxNotificationService\n    }, {\n      type: i1$1.RxGuidService\n    }, {\n      type: i3$1.RxFieldDefinitionService\n    }];\n  }, {\n    options: [{\n      type: Input\n    }]\n  });\n})();\nclass RecordInheritanceEditorModule {}\nRecordInheritanceEditorModule.ɵfac = function RecordInheritanceEditorModule_Factory(t) {\n  return new (t || RecordInheritanceEditorModule)();\n};\nRecordInheritanceEditorModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: RecordInheritanceEditorModule,\n  declarations: [RecordInheritanceEditorComponent],\n  imports: [CommonModule, FormsModule, AdaptTooltipModule, AdaptRxSelectModule, AdaptButtonModule, AdaptCheckbox2Module, AdaptPopoverModule, AdaptIconModule, AdaptRxCheckboxModule, ReactiveFormsModule, TranslateModule, AdaptTableModule, RxDefinitionPickerModule],\n  exports: [RecordInheritanceEditorComponent]\n});\nRecordInheritanceEditorModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule, AdaptTooltipModule, AdaptRxSelectModule, AdaptButtonModule, AdaptCheckbox2Module, AdaptPopoverModule, AdaptIconModule, AdaptRxCheckboxModule, ReactiveFormsModule, TranslateModule, AdaptTableModule, RxDefinitionPickerModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RecordInheritanceEditorModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [RecordInheritanceEditorComponent],\n      exports: [RecordInheritanceEditorComponent],\n      entryComponents: [RecordInheritanceEditorComponent],\n      imports: [CommonModule, FormsModule, AdaptTooltipModule, AdaptRxSelectModule, AdaptButtonModule, AdaptCheckbox2Module, AdaptPopoverModule, AdaptIconModule, AdaptRxCheckboxModule, ReactiveFormsModule, TranslateModule, AdaptTableModule, RxDefinitionPickerModule]\n    }]\n  }], null, null);\n})();\nclass SearchFieldEditorModalStore extends ComponentStore {\n  constructor() {\n    super({\n      searchFields: [],\n      isDirty: false,\n      isCategoryVisible: true,\n      isValid: true,\n      availableFields: [],\n      searchDefinition: {}\n    });\n    this.searchFields$ = this.select(state => state.searchFields);\n    this.availableFields$ = this.select(state => state.availableFields);\n    this.isDirty$ = this.select(state => state.isDirty);\n    this.isValid$ = this.select(state => state.isValid);\n    this.vm$ = this.select(this.availableFields$, this.searchFields$, this.isDirty$, this.isValid$, (availableFields, searchFields, isDirty, isValid) => ({\n      availableFields,\n      searchFields,\n      isDirty,\n      isValid\n    }));\n    this.toggleOpen = this.updater((state, toggleValue) => {\n      const searchFieldItems = [...state.searchFields];\n      searchFieldItems.forEach(control => {\n        control.get('isOpen').setValue(toggleValue);\n      });\n      return Object.assign(Object.assign({}, state), {\n        searchFields: searchFieldItems\n      });\n    });\n    this.updateFields = this.updater((state, field) => Object.assign(Object.assign({}, state), {\n      searchFields: [...state.searchFields, field],\n      isValid: false\n    }));\n    this.updateAvailableFields = this.updater((state, field) => {\n      const updatedSearchFields = [...state.searchFields];\n      updatedSearchFields.forEach(control => {\n        control.get('isCategoryVisible').setValue(find(state.availableFields, {\n          id: field.id\n        }).resourceType !== RX_RECORD_DEFINITION.resourceTypes.attachment);\n      });\n      return Object.assign(Object.assign({}, state), {\n        availableFields: state.availableFields.filter(availableField => availableField.id !== field.id),\n        isDirty: true,\n        searchFields: updatedSearchFields,\n        isValid: !state.searchFields.some(form => form.invalid)\n      });\n    });\n    this.removeSearchField = this.updater((state, fieldIndex) => Object.assign(Object.assign({}, state), {\n      isDirty: true,\n      searchFields: state.searchFields.filter((field, index) => fieldIndex !== index),\n      isValid: !state.searchFields.some(form => form.invalid)\n    }));\n    this.markDirty = this.updater(state => Object.assign(Object.assign({}, state), {\n      isDirty: true,\n      isValid: !state.searchFields.some(form => form.invalid)\n    }));\n  }\n}\nSearchFieldEditorModalStore.ɵfac = function SearchFieldEditorModalStore_Factory(t) {\n  return new (t || SearchFieldEditorModalStore)();\n};\nSearchFieldEditorModalStore.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SearchFieldEditorModalStore,\n  factory: SearchFieldEditorModalStore.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SearchFieldEditorModalStore, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\nclass SearchFieldEditorModalComponent extends RxModalClass {\n  constructor(searchFieldsEditorModalStore, activeModalRef, formBuilder, injector, rxFieldDefinitionService) {\n    super(activeModalRef, injector);\n    this.searchFieldsEditorModalStore = searchFieldsEditorModalStore;\n    this.activeModalRef = activeModalRef;\n    this.formBuilder = formBuilder;\n    this.injector = injector;\n    this.rxFieldDefinitionService = rxFieldDefinitionService;\n    this.vm$ = this.searchFieldsEditorModalStore.vm$;\n    this.destroyed$ = new ReplaySubject(1);\n    this.recordDefinition = this.activeModalRef.getData().recordDefinition;\n    this.isReadOnly = this.activeModalRef.getData().isReadOnly;\n  }\n  cancel() {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.searchFieldsEditorModalStore.isDirty$.pipe(filter(Boolean), take(1)).subscribe(() => {\n      this.markAsDirty();\n    });\n    const searchFields = this.activeModalRef.getData().searchFields.map((searchField, index) => this.formBuilder.group({\n      id: searchField.id,\n      searchFieldName: [[searchField], Validators.required],\n      category: searchField.searchDefinition.searchCategoryName,\n      isOpen: searchField.id === this.activeModalRef.getData().searchFieldIndex,\n      isCategoryVisible: searchField.resourceType !== RX_RECORD_DEFINITION.resourceTypes.attachment,\n      searchDefinition: searchField.searchDefinition\n    }));\n    const availableFields = this.recordDefinition.fields.filter(fieldDefinition => this.rxFieldDefinitionService.isSearchable(fieldDefinition, this.recordDefinition)).filter(fieldDefinition => searchFields.every(searchField => searchField.get('id').value !== fieldDefinition.id));\n    this.searchFieldsEditorModalStore.patchState({\n      searchFields,\n      availableFields\n    });\n  }\n  optionFormatter(selectOption) {\n    return selectOption.name;\n  }\n  toggleOpen(toggleValue) {\n    this.searchFieldsEditorModalStore.toggleOpen(toggleValue);\n  }\n  addNewSearchField() {\n    this.searchFieldsEditorModalStore.updateFields(this.formBuilder.group({\n      id: '',\n      searchFieldName: [[], Validators.required],\n      category: '',\n      isOpen: true,\n      isCategoryVisible: true,\n      searchDefinition: {\n        enableFTSSearch: false,\n        enableCognitiveSearch: false\n      }\n    }));\n  }\n  onSelectedFieldChange(field) {\n    this.searchFieldsEditorModalStore.updateAvailableFields(field[0]);\n  }\n  onSearchCategoryChange() {\n    this.searchFieldsEditorModalStore.markDirty();\n  }\n  onRemoveSearchField(fieldIndex) {\n    this.searchFieldsEditorModalStore.removeSearchField(fieldIndex);\n  }\n  saveSearchFields() {\n    this.searchFieldsEditorModalStore.searchFields$.pipe(take(1)).subscribe(searchFields => {\n      this.activeModalRef.close(searchFields);\n    });\n  }\n  ngOnDestroy() {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\nSearchFieldEditorModalComponent.ɵfac = function SearchFieldEditorModalComponent_Factory(t) {\n  return new (t || SearchFieldEditorModalComponent)(i0.ɵɵdirectiveInject(SearchFieldEditorModalStore), i0.ɵɵdirectiveInject(i3.ActiveModalRef), i0.ɵɵdirectiveInject(i6.FormBuilder), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i3$1.RxFieldDefinitionService));\n};\nSearchFieldEditorModalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SearchFieldEditorModalComponent,\n  selectors: [[\"rx-search-field-editor-modal\"]],\n  features: [i0.ɵɵProvidersFeature([SearchFieldEditorModalStore]), i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [1, \"designer-modal-body\", \"modal-body\", \"d-flex\", \"mh-100\"], [1, \"row\", \"flex-grow-1\", \"w-100\"], [1, \"d-flex\", \"flex-column\", \"mh-100\", \"col\"], [1, \"d-flex\", \"align-items-start\", \"justify-content-between\"], [\"adapt-button\", \"\", \"btn-type\", \"tertiary\", \"class\", \"mt-2 p-0\", \"rx-id\", \"add-new-search-field-button\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn-group ml-auto\", 4, \"ngIf\"], [\"class\", \"border-bottom pb-1 d-flex align-items-center\", \"id\", \"selected-search-field\", \"class\", \"designer-modal-accordion-wrapper\", 4, \"ngIf\"], [\"class\", \"d-flex justify-content-center h-100 align-items-center mt-2\", 4, \"ngIf\"], [1, \"modal-footer\"], [\"type\", \"button\", \"adapt-button\", \"\", \"btn-type\", \"secondary\", \"rx-id\", \"close-button\", 3, \"click\", 4, \"ngIf\"], [\"adapt-button\", \"\", \"btn-type\", \"tertiary\", \"rx-id\", \"add-new-search-field-button\", 1, \"mt-2\", \"p-0\", 3, \"click\"], [1, \"d-icon-plus_circle\"], [1, \"btn-group\", \"ml-auto\"], [\"adapt-button\", \"\", \"btn-type\", \"tertiary\", \"type\", \"button\", \"rx-id\", \"expand-all-button\", 3, \"click\"], [\"adapt-button\", \"\", \"btn-type\", \"tertiary\", \"type\", \"button\", \"rx-id\", \"collapse-all-button\", 3, \"click\"], [\"id\", \"selected-search-field\", 1, \"designer-modal-accordion-wrapper\"], [3, \"multiselect\"], [\"class\", \"designer-modal-accordion-content\", 4, \"ngFor\", \"ngForOf\"], [1, \"designer-modal-accordion-content\"], [1, \"d-block\", 3, \"formGroup\", \"isOpen\", \"open\", \"close\"], [1, \"card-title-text\", \"w-100\"], [1, \"designer-modal-card-title-content\"], [1, \"left-header-block\", \"pl-0\"], [\"rx-id\", \"card-title\"], [1, \"right-header-block\"], [\"class\", \"d-icon-left-cross_adapt p-1 pr-4 ml-3\", \"adapt-button\", \"\", \"size\", \"small\", \"type\", \"button\", \"rx-id\", \"remove-button\", 3, \"click\", 4, \"ngIf\"], [1, \"row\", \"form-group\"], [\"rx-id\", \"available-fields\", \"formControlName\", \"searchFieldName\", 3, \"ngClass\", \"label\", \"options\", \"optionFormatter\", \"optionContentTemplate\", \"disabled\", \"ngModelChange\"], [\"class\", \"d-block col-6\", \"rx-id\", \"search-field-category\", \"formControlName\", \"category\", 3, \"label\", \"disabled\", \"ngModelChange\", 4, \"ngIf\"], [\"adapt-button\", \"\", \"size\", \"small\", \"type\", \"button\", \"rx-id\", \"remove-button\", 1, \"d-icon-left-cross_adapt\", \"p-1\", \"pr-4\", \"ml-3\", 3, \"click\"], [\"rx-id\", \"search-field-category\", \"formControlName\", \"category\", 1, \"d-block\", \"col-6\", 3, \"label\", \"disabled\", \"ngModelChange\"], [1, \"d-flex\", \"justify-content-center\", \"h-100\", \"align-items-center\", \"mt-2\"], [\"type\", \"config\", 1, \"w-100\", 3, \"label\"], [\"adapt-button\", \"\", \"type\", \"button\", \"btn-type\", \"primary\", \"rx-id\", \"save-button\", 3, \"disabled\", \"click\"], [\"adapt-button\", \"\", \"type\", \"button\", \"btn-type\", \"secondary\", \"rx-id\", \"cancel-button\", 3, \"click\"], [\"type\", \"button\", \"adapt-button\", \"\", \"btn-type\", \"secondary\", \"rx-id\", \"close-button\", 3, \"click\"]],\n  template: function SearchFieldEditorModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, SearchFieldEditorModalComponent_ng_container_0_Template, 12, 6, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.vm$));\n    }\n  },\n  directives: [i5.NgIf, i3.AdaptButtonComponent, i3.AdaptAccordionComponent, i5.NgForOf, i3.AdaptAccordionTabComponent, i6.NgControlStatusGroup, i6.FormGroupDirective, i3.AdaptRxSelectComponent, i6.NgControlStatus, i6.FormControlName, i5.NgClass, i3.AdaptRxTextfieldComponent, i3.AdaptEmptyStateComponent],\n  pipes: [i5.AsyncPipe, i2.TranslatePipe],\n  styles: [_c6]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SearchFieldEditorModalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-search-field-editor-modal',\n      templateUrl: './search-field-editor-modal.component.html',\n      styleUrls: ['./search-field-editor-modal.component.scss'],\n      providers: [SearchFieldEditorModalStore]\n    }]\n  }], function () {\n    return [{\n      type: SearchFieldEditorModalStore\n    }, {\n      type: i3.ActiveModalRef\n    }, {\n      type: i6.FormBuilder\n    }, {\n      type: i0.Injector\n    }, {\n      type: i3$1.RxFieldDefinitionService\n    }];\n  }, null);\n})();\nclass SearchFieldEditorControlComponent extends ValueAccessor {\n  constructor(rxModalService, translateService) {\n    super();\n    this.rxModalService = rxModalService;\n    this.translateService = translateService;\n    this.searchFieldsSubject = new BehaviorSubject([]);\n    this.searchFields$ = this.searchFieldsSubject.asObservable().pipe(shareReplay(1));\n  }\n  ngOnInit() {\n    if (this.options) {\n      this.updateValues();\n    }\n  }\n  ngOnChanges(changes) {\n    if (changes.options) {\n      this.updateValues();\n    }\n  }\n  ngOnDestroy() {\n    this.searchFieldsSubject.complete();\n  }\n  updateValues() {\n    const searchFields = this.options.recordDefinitionModel.fields.filter(fieldDefinition => {\n      var _a, _b;\n      return (fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.character || fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.attachment) && Boolean(fieldDefinition.searchDefinition) && (((_a = fieldDefinition.searchDefinition) === null || _a === void 0 ? void 0 : _a.enableFTSSearch) || ((_b = fieldDefinition.searchDefinition) === null || _b === void 0 ? void 0 : _b.enableCognitiveSearch));\n    });\n    this.searchFieldsSubject.next(searchFields);\n  }\n  openEditor(searchFieldIndex) {\n    this.searchFields$.pipe(take(1)).subscribe(searchFields => {\n      this.rxModalService.openModal({\n        content: SearchFieldEditorModalComponent,\n        title: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.search-fields.search-field-editor.title'),\n        data: {\n          searchFields: searchFields,\n          fieldDefinitions: this.options.recordDefinitionModel.fields,\n          recordDefinition: this.options.recordDefinitionModel,\n          searchFieldIndex,\n          isReadOnly: this.options.isReadOnly\n        }\n      }).then(updatedSearchFields => {\n        const searchFieldDefinitions = updatedSearchFields.map(searchField => {\n          var _a;\n          const field = this.options.recordDefinitionModel.fields.find(fieldDefinition => {\n            var _a;\n            return ((_a = searchField.get('searchFieldName')) === null || _a === void 0 ? void 0 : _a.value[0].id) === fieldDefinition.id;\n          });\n          if (field) {\n            return Object.assign(Object.assign({}, field), {\n              searchDefinition: Object.assign(Object.assign({}, field.searchDefinition), {\n                enableCognitiveSearch: Boolean(this.options.recordDefinitionModel.enableCognitiveSearch),\n                enableFTSSearch: ((_a = field.searchDefinition) === null || _a === void 0 ? void 0 : _a.enableFTSSearch) || !Boolean(this.options.recordDefinitionModel.enableCognitiveSearch),\n                stripTagsForSearch: false,\n                enableLiteralSearch: false,\n                searchCategoryName: searchField.get('category').value\n              }),\n              overlayDescriptor: Object.assign(Object.assign({}, field.overlayDescriptor), {\n                otherPropertiesOverlayType: RX_OVERLAY.overlayTypes.overwrite\n              })\n            });\n          }\n        });\n        this.value = searchFieldDefinitions;\n        this.searchFieldsSubject.next(searchFieldDefinitions);\n      }).catch(noop);\n    });\n  }\n  removeSearchField(searchField) {\n    this.searchFields$.pipe(take(1)).subscribe(searchFields => {\n      this.rxModalService.confirm({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.search-fields.delete-confirmation.message', {\n          name: searchField.name\n        })\n      }).then(isDeleteConfirmed => {\n        if (isDeleteConfirmed) {\n          const searchFieldsList = searchFields.filter(fieldDefinition => fieldDefinition.name !== searchField.name);\n          this.value = searchFieldsList;\n          this.searchFieldsSubject.next(searchFieldsList);\n        }\n      });\n    });\n  }\n}\nSearchFieldEditorControlComponent.ɵfac = function SearchFieldEditorControlComponent_Factory(t) {\n  return new (t || SearchFieldEditorControlComponent)(i0.ɵɵdirectiveInject(i1.RxModalService), i0.ɵɵdirectiveInject(i2.TranslateService));\n};\nSearchFieldEditorControlComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SearchFieldEditorControlComponent,\n  selectors: [[\"rx-search-field-editor-control-control\"]],\n  inputs: {\n    options: \"options\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: SearchFieldEditorControlComponent,\n    multi: true\n  }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 4,\n  consts: [[\"type\", \"button\", \"class\", \"p-0 pb-1\", \"btn-type\", \"tertiary\", \"rx-id\", \"add-search-field-button\", 3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"button\", \"btn-type\", \"tertiary\", \"rx-id\", \"add-search-field-button\", 1, \"p-0\", \"pb-1\", 3, \"click\"], [1, \"d-icon-left-plus_circle\"], [\"class\", \"rx-search-field\", 4, \"ngFor\", \"ngForOf\"], [1, \"rx-search-field\"], [1, \"rx-selected-column__header-container\"], [\"rx-id\", \"card-title\", 1, \"rx-search-field__header-title\"], [\"type\", \"button\", \"class\", \"rx-button-unstyled d-icon-cross btn-link float-right\", \"rx-id\", \"remove-search-field\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"rx-id\", \"edit-button\", 1, \"rx-button-unstyled\", \"d-icon-left-pencil\", \"btn-link\", \"float-right\", 3, \"click\"], [\"rx-id\", \"search-field-type\", 1, \"rx-search-field-type\"], [\"type\", \"button\", \"rx-id\", \"remove-search-field\", 1, \"rx-button-unstyled\", \"d-icon-cross\", \"btn-link\", \"float-right\", 3, \"click\"]],\n  template: function SearchFieldEditorControlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, SearchFieldEditorControlComponent_adapt_button_0_Template, 4, 3, \"adapt-button\", 0);\n      i0.ɵɵtemplate(1, SearchFieldEditorControlComponent_div_1_Template, 2, 1, \"div\", 1);\n      i0.ɵɵpipe(2, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.isDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 2, ctx.searchFields$));\n    }\n  },\n  directives: [i5.NgIf, i3.AdaptButtonComponent, i5.NgForOf],\n  pipes: [i5.AsyncPipe, i2.TranslatePipe],\n  styles: [\"[_ngcontent-%COMP%]:root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}.rx-search-field[_ngcontent-%COMP%]{margin-bottom:5px;border:1px solid #d6d7d8;border-radius:2px;padding:5px 10px;word-break:break-all;font-weight:var(--font-weight-bold)}.rx-search-field__header-container[_ngcontent-%COMP%]{display:flex}.rx-search-field__header-title[_ngcontent-%COMP%]{flex:1 1 auto;overflow:hidden;text-overflow:ellipsis;font-size:14px}.rx-search-field-type[_ngcontent-%COMP%]{color:#959899;font-size:10px;overflow:hidden;text-overflow:ellipsis}.d-icon-cross[_ngcontent-%COMP%], .d-icon-left-pencil[_ngcontent-%COMP%]{cursor:pointer}.d-icon-cross[_ngcontent-%COMP%]:not(:hover), .d-icon-left-pencil[_ngcontent-%COMP%]:not(:hover){color:#313538}\"],\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SearchFieldEditorControlComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-search-field-editor-control-control',\n      templateUrl: './search-field-editor-control.component.html',\n      styleUrls: ['./search-field-editor-control.component.scss'],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: SearchFieldEditorControlComponent,\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i1.RxModalService\n    }, {\n      type: i2.TranslateService\n    }];\n  }, {\n    options: [{\n      type: Input\n    }]\n  });\n})();\nclass SearchFieldEditorModule {}\nSearchFieldEditorModule.ɵfac = function SearchFieldEditorModule_Factory(t) {\n  return new (t || SearchFieldEditorModule)();\n};\nSearchFieldEditorModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SearchFieldEditorModule,\n  declarations: [SearchFieldEditorControlComponent, SearchFieldEditorModalComponent],\n  imports: [CommonModule, AdaptTooltipModule, AdaptRxSelectModule, AdaptButtonModule, AdaptRxFormControlModule, AdaptRxTextfieldModule, AdaptAccordionModule, RxModalModule, ReactiveFormsModule, TranslateModule, AdaptEmptyStateModule],\n  exports: [SearchFieldEditorControlComponent, SearchFieldEditorModalComponent]\n});\nSearchFieldEditorModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, AdaptTooltipModule, AdaptRxSelectModule, AdaptButtonModule, AdaptRxFormControlModule, AdaptRxTextfieldModule, AdaptAccordionModule, RxModalModule, ReactiveFormsModule, TranslateModule, AdaptEmptyStateModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SearchFieldEditorModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [SearchFieldEditorControlComponent, SearchFieldEditorModalComponent],\n      exports: [SearchFieldEditorControlComponent, SearchFieldEditorModalComponent],\n      entryComponents: [SearchFieldEditorControlComponent, SearchFieldEditorModalComponent],\n      imports: [CommonModule, AdaptTooltipModule, AdaptRxSelectModule, AdaptButtonModule, AdaptRxFormControlModule, AdaptRxTextfieldModule, AdaptAccordionModule, RxModalModule, ReactiveFormsModule, TranslateModule, AdaptEmptyStateModule]\n    }]\n  }], null, null);\n})();\nconst init = createAction('[Record Designer] Init', props());\nconst loadDefinition = createAction('[Record Designer] Load Definition');\nconst clearSearchFields = createAction('[Record Designer] Clear Search Fields');\nconst loadDefinitionSuccess = createAction('[Record Designer] Load Definition Success', props());\nconst initDefinitionModel = createAction('[Record Designer] Init Definition Model', props());\nconst markDesignerPristine = createAction('[Record Designer] Mark Designer Pristine');\nconst markDesignerDirty = createAction('[Record Designer] Mark Designer Dirty');\nconst toggleDesignMode = createAction('[Record Designer] Toggle Design Mode');\nconst updateDefinitionModelFromDesigner = createAction('[Record Designer] Update Definition Model From Designer', props());\nconst updateSelectedFieldModel = createAction('[Record Designer] Update Selected Field Model', props());\nconst setInspectorTabIndex = createAction('[Record Designer] Set Inspector Tab Index', props());\nconst createNewFieldModel = createAction('[Record Designer] Create New Field Model', props());\nconst addFieldModel = createAction('[Record Designer] Add Field Model', props());\nconst addNewFieldModels = createAction('[Record Designer] Add New Field Models', props());\nconst setSelectedFieldGuid = createAction('[Record Designer] Set Selected Field GUID', props());\nconst clearSelectedFieldGuid = createAction('[Record Designer] Clear Selected Field GUID');\nconst deleteSelectedField = createAction('[Record Designer] Delete Selected Field');\nconst copySelectedField = createAction('[Record Designer] Copy Selected Field');\nconst checkIfFieldUsedByIndexes = createAction('[Record Designer] Check If Field Used By Indexes');\nconst deleteSelectedFieldSuccess = createAction('[Record Designer] Delete Selected Field Success');\nconst deleteSelectedFieldError = createAction('[Record Designer] Delete Selected Field Error');\nconst saveDefinition = createAction('[Record Designer] Save Definition');\nconst saveDefinitionSuccess = createAction('[Record Designer] Save Definition Success', props());\nconst destroy = createAction('[Record Designer] Destroy');\nconst RX_RECORD_DESIGNER = {\n  featureSelector: 'recordDesigner',\n  joinCriteriaPath: 'joinCriteria',\n  archiveDataCriteriaPath: 'archiveDataCriteria',\n  archiving: {\n    types: {\n      doNotArchive: {\n        nameKey: 'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.types.do-not-archive.label',\n        id: ArchiveType.None\n      },\n      archiveAndDeleteSourceRecord: {\n        nameKey: 'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.types.archive-and-delete-source-record.label',\n        id: ArchiveType.CopyToArchiveAndDeleteFromSource\n      },\n      deleteSourceRecord: {\n        nameKey: 'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.types.delete-source-record.label',\n        id: ArchiveType.DeleteFromSource\n      }\n    }\n  }\n};\nconst recordDesignerStateSelector = createFeatureSelector(RX_RECORD_DESIGNER.featureSelector);\nconst recordDesignerModelSelector = createSelector(recordDesignerStateSelector, recordDesignerState => recordDesignerState.model);\nconst definitionNameSelector = createSelector(recordDesignerModelSelector, recordDesignerModel => recordDesignerModel.definitionName);\nconst bundleIdSelector = createSelector(recordDesignerModelSelector, recordDesignerModel => recordDesignerModel.bundleId);\nconst isDesignModeSelector = createSelector(recordDesignerModelSelector, recordDesignerModel => recordDesignerModel.isDesignMode);\nconst isDirtySelector = createSelector(recordDesignerModelSelector, recordDesignerModel => recordDesignerModel.isDirty);\nconst inspectorTabIndexSelector = createSelector(recordDesignerModelSelector, recordDesignerModel => recordDesignerModel.inspectorTabIndex);\nconst definitionModelSelector = createSelector(recordDesignerModelSelector, recordDesignerModel => recordDesignerModel.definitionModel);\nconst definitionModelFromDefinitionSelector = createSelector(recordDesignerModelSelector, recordDesignerModel => recordDesignerModel.definitionModelFromDefinition);\nconst selectedFieldGuidSelector = createSelector(recordDesignerModelSelector, recordDesignerModel => recordDesignerModel.selectedFieldGuid);\nconst savedDefinitionNameSelector = createSelector(recordDesignerModelSelector, recordDesignerModel => recordDesignerModel.savedDefinitionName);\nclass RxRecordDefinitionValidatorService {\n  constructor(rxFieldDefinitionService, translateService, rxDefinitionNameService, rxFieldDefinitionManagerService) {\n    this.rxFieldDefinitionService = rxFieldDefinitionService;\n    this.translateService = translateService;\n    this.rxDefinitionNameService = rxDefinitionNameService;\n    this.rxFieldDefinitionManagerService = rxFieldDefinitionManagerService;\n  }\n  validate(definitionModel) {\n    var _a;\n    const duplicateFieldErrorMsg = this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.must-be-unique.message', {\n      propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label')\n    });\n    const definitionValidationIssues = [];\n    const fieldValidationIssueSections = [];\n    chain(definitionModel.fields).clone().reverse().forEach((fieldModel, index, fieldModels) => {\n      let issues = [];\n      if (find(fieldModels, model => fieldModel.name === model.name, index + 1)) {\n        issues.push({\n          type: ValidationIssueType.Error,\n          description: duplicateFieldErrorMsg,\n          data: {\n            propertyName: 'name',\n            guid: fieldModel.guid\n          }\n        });\n      }\n      if (fieldModel.id && find(fieldModels, model => fieldModel.id === model.id, index + 1)) {\n        issues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.duplicate-field-id-error.message'),\n          data: {\n            propertyName: 'id',\n            guid: fieldModel.guid\n          }\n        });\n      }\n      if (definitionModel.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType && !fieldModel.lastUpdateTime && !includes(RX_RECORD_DEFINITION.coreFieldIds, fieldModel.id) && includes(RX_RECORD_DEFINITION.AR_CORE_FIELD_IDS, fieldModel.id)) {\n        issues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.invalid-field-id.message', {\n            fieldId: fieldModel.id\n          }),\n          data: {\n            editFieldGroups: true,\n            guid: fieldModel.guid\n          }\n        });\n      }\n      issues = issues.concat(this.rxFieldDefinitionManagerService.validate(fieldModel, definitionModel));\n      if (issues.length) {\n        fieldValidationIssueSections.push({\n          title: fieldModel.name,\n          issues: issues\n        });\n      }\n    }).value();\n    if (isEmpty(trim(definitionModel.name))) {\n      definitionValidationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message', {\n          propertyName: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.record-name.label')\n        }),\n        data: {\n          propertyName: 'name'\n        }\n      });\n    }\n    if (!RX_RECORD_DEFINITION.validDefinitionNameRegex.test(definitionModel.name)) {\n      definitionValidationIssues.push({\n        type: ValidationIssueType.Error,\n        description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message', {\n          propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.record-definition.label')\n        }),\n        data: {\n          propertyName: 'name'\n        }\n      });\n    }\n    if (definitionModel === null || definitionModel === void 0 ? void 0 : definitionModel.isAuditingEnabled) {\n      const auditRecordDefinitionName = this.rxDefinitionNameService.getDisplayName(definitionModel.auditRecordDefinitionName);\n      if (isEmpty(trim(auditRecordDefinitionName))) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.invalid-audit-definition-name.message'),\n          data: {\n            propertyName: 'auditRecordDefinitionName'\n          }\n        });\n      }\n      if (!RX_RECORD_DEFINITION.validDefinitionNameRegex.test(auditRecordDefinitionName)) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message', {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.audit-record-definition-name.label')\n          }),\n          data: {\n            propertyName: 'auditRecordDefinitionName'\n          }\n        });\n      }\n    }\n    if (definitionModel.isArchivingEnabled && definitionModel.archiveType === RX_RECORD_DESIGNER.archiving.types.archiveAndDeleteSourceRecord.id) {\n      const archiveRecordDefinitionName = this.rxDefinitionNameService.getDisplayName(definitionModel.archiveRecordDefinitionName);\n      if (isEmpty(trim(archiveRecordDefinitionName))) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.invalid-archive-definition-name.message'),\n          data: {\n            propertyName: 'archiveRecordDefinitionName'\n          }\n        });\n      }\n      if (!RX_RECORD_DEFINITION.validDefinitionNameRegex.test(archiveRecordDefinitionName)) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message', {\n            propertyName: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archive-record-definition-name.label')\n          }),\n          data: {\n            propertyName: 'archiveRecordDefinitionName'\n          }\n        });\n      }\n    }\n    if (definitionModel.weightedRelevancyFields) {\n      const searchTitleField = find(definitionModel.fields, {\n        id: (_a = definitionModel.weightedRelevancyFields) === null || _a === void 0 ? void 0 : _a.TITLE\n      });\n      if (searchTitleField && !searchTitleField.searchDefinition) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.invalid-text-search-enabled-field.message'),\n          data: {\n            propertyName: 'searchTitleField'\n          }\n        });\n      }\n    }\n    forEach(definitionModel.indexDefinitions, (indexDefinitionModel, index) => {\n      if (!indexDefinitionModel.indexFieldIds.length) {\n        definitionValidationIssues.push({\n          type: ValidationIssueType.Error,\n          description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.indexes.no-field-selected.message', {\n            indexName: indexDefinitionModel.indexName || this.translateService.instant('com.bmc.arsys.rx.client.record-designer.indexes.new-index.label')\n          }),\n          data: {\n            indexToEditIndex: index,\n            propertyName: 'indexDefinitions'\n          }\n        });\n      }\n    });\n    let issues = [];\n    if (definitionValidationIssues.length) {\n      issues.push({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.record-definition.label'),\n        issues: definitionValidationIssues\n      });\n    }\n    issues = issues.concat(reverse(fieldValidationIssueSections));\n    return issues;\n  }\n}\nRxRecordDefinitionValidatorService.ɵfac = function RxRecordDefinitionValidatorService_Factory(t) {\n  return new (t || RxRecordDefinitionValidatorService)(i0.ɵɵinject(i3$1.RxFieldDefinitionService), i0.ɵɵinject(i2.TranslateService), i0.ɵɵinject(i2$1.RxDefinitionNameService), i0.ɵɵinject(RxFieldDefinitionManagerService));\n};\nRxRecordDefinitionValidatorService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxRecordDefinitionValidatorService,\n  factory: RxRecordDefinitionValidatorService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxRecordDefinitionValidatorService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i3$1.RxFieldDefinitionService\n    }, {\n      type: i2.TranslateService\n    }, {\n      type: i2$1.RxDefinitionNameService\n    }, {\n      type: RxFieldDefinitionManagerService\n    }];\n  }, null);\n})();\nclass ArchiveAssociationSelectorComponent extends RxModalClass {\n  constructor(activeModalRef, translateService, injector) {\n    super(activeModalRef, injector);\n    this.activeModalRef = activeModalRef;\n    this.translateService = translateService;\n    this.injector = injector;\n    this.isOverlayMode = this.activeModalRef.getData().isOverlayMode;\n    this.isReadOnly = this.activeModalRef.getData().isReadOnly;\n    this.actualAssociationsToFollow = this.activeModalRef.getData().actualAssociationsToFollow;\n    this.selectedAssociationsToFollow = this.activeModalRef.getData().selectedAssociationsToFollow;\n    this.associationType = this.selectedAssociationsToFollow.selectionType;\n    this.associationTypes = {\n      followParent: AssociationSelectionType.FollowParent,\n      selected: AssociationSelectionType.Selected,\n      allEnforced: AssociationSelectionType.AllEnforced,\n      all: AssociationSelectionType.All\n    };\n    this.columns = [];\n    this.associationGridRows = this.activeModalRef.getData().associationDefinitions.map(association => ({\n      name: association.name,\n      firstRecord: association.nodeAId,\n      secondRecord: association.nodeBId,\n      enforced: association.nodeAModality === RX_ASSOCIATION_DEFINITION.modality.required,\n      isSelectionDisabled: this.isReadOnly,\n      isAssociationSelectedInBase: this.isOverlayMode && this.actualAssociationsToFollow.specificAssociationNames.includes(association.name)\n    }));\n    this.selectedAssociationGridRows = [];\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.columns = [{\n      field: 'name',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n      cellTemplate: this.nameCellTemplate\n    }, {\n      field: 'firstRecord',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.association-first-record.label'),\n      cellTemplate: this.nameCellTemplate\n    }, {\n      field: 'secondRecord',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.association-second-record.label'),\n      cellTemplate: this.nameCellTemplate\n    }, {\n      field: 'enforced',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.enforced-association.label'),\n      cellTemplate: this.enforceCellTemplate\n    }];\n    this.selectAssociations();\n    this.selectedAssociationGridRows = this.selectedAssociationGridRows.concat(this.associationGridRows.filter(associationGridRow => includes(this.selectedAssociationsToFollow.specificAssociationNames, associationGridRow.name)));\n  }\n  cancel() {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n  onSelectionChange(selectedRows) {\n    this.markAsDirty();\n    this.selectedAssociationGridRows = selectedRows;\n  }\n  disabledRowSelectionResolver(rowData) {\n    return rowData.isSelectionDisabled || rowData.isAssociationSelectedInBase;\n  }\n  selectAssociations() {\n    this.selectedAssociationGridRows = [];\n    if (this.associationType === AssociationSelectionType.Selected) {\n      this.enableRowSelection();\n    } else if (this.associationType === AssociationSelectionType.All) {\n      this.selectedAssociationGridRows = [...this.associationGridRows];\n      this.disableRowSelection();\n    } else if (this.associationType === AssociationSelectionType.AllEnforced) {\n      this.selectedAssociationGridRows = this.associationGridRows.filter(row => row.enforced);\n      this.disableRowSelectionForEnforcedAssociations();\n    } else if (this.associationType === AssociationSelectionType.FollowParent) {\n      this.disableRowSelection();\n    }\n    if (this.isOverlayMode && (this.actualAssociationsToFollow.selectionType === AssociationSelectionType.AllEnforced || this.actualAssociationsToFollow.selectionType === AssociationSelectionType.Selected)) {\n      this.selectAssociationsFromBase();\n    }\n  }\n  selectAssociationsFromBase() {\n    this.selectedAssociationGridRows = this.selectedAssociationGridRows.concat(this.associationGridRows.filter(associationGridRow => includes(this.actualAssociationsToFollow.specificAssociationNames, associationGridRow.name)));\n  }\n  disableRowSelectionForEnforcedAssociations() {\n    this.associationGridRows.forEach(row => {\n      row.isSelectionDisabled = this.isReadOnly || row.enforced;\n    });\n  }\n  disableRowSelection() {\n    this.associationGridRows.forEach(row => {\n      row.isSelectionDisabled = true;\n    });\n  }\n  enableRowSelection() {\n    this.associationGridRows.forEach(row => {\n      row.isSelectionDisabled = this.isReadOnly;\n    });\n  }\n  save() {\n    let selectedAssociationNames = [];\n    if (this.associationType === AssociationSelectionType.Selected) {\n      selectedAssociationNames = map$1(this.selectedAssociationGridRows, 'name');\n    } else if (this.associationType === AssociationSelectionType.AllEnforced) {\n      selectedAssociationNames = this.selectedAssociationGridRows.filter(associationGridRow => !associationGridRow.enforced).map(associationGridRow => associationGridRow.name);\n    }\n    this.activeModalRef.close({\n      specificAssociationNames: selectedAssociationNames,\n      selectionType: this.associationType\n    });\n  }\n}\nArchiveAssociationSelectorComponent.ɵfac = function ArchiveAssociationSelectorComponent_Factory(t) {\n  return new (t || ArchiveAssociationSelectorComponent)(i0.ɵɵdirectiveInject(i3.ActiveModalRef), i0.ɵɵdirectiveInject(i2.TranslateService), i0.ɵɵdirectiveInject(i0.Injector));\n};\nArchiveAssociationSelectorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ArchiveAssociationSelectorComponent,\n  selectors: [[\"rx-archive-associations-editor\"]],\n  viewQuery: function ArchiveAssociationSelectorComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c7, 7);\n      i0.ɵɵviewQuery(_c8, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nameCellTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.enforceCellTemplate = _t.first);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 25,\n  vars: 43,\n  consts: [[1, \"modal-body\", \"designer-modal-body\", \"d-flex\", \"mh-100\", \"flex-column\"], [3, \"ngModel\", \"ngModelChange\"], [\"rx-id\", \"selected-associations\", 1, \"radio-inline\", 3, \"label\", \"value\", \"disabled\"], [\"rx-id\", \"all-associations\", 1, \"radio-inline\", 3, \"label\", \"value\", \"disabled\"], [\"rx-id\", \"all-enforced-associations\", 1, \"radio-inline\", 3, \"label\", \"value\", \"disabled\"], [\"rx-id\", \"follow-parent-association\", 1, \"radio-inline\", 3, \"label\", \"value\", \"disabled\"], [\"scrollHeight\", \"flex\", 3, \"value\", \"selection\", \"columns\", \"scrollable\", \"sortable\", \"resizableColumns\", \"bordered\", \"filterable\", \"dataKey\", \"disableRowSelection\", \"selectionMode\", \"disabledRowSelectionResolver\", \"selectionChange\"], [1, \"modal-footer\"], [\"type\", \"button\", \"adapt-button\", \"\", \"btn-type\", \"primary\", \"rx-id\", \"save-button\", 3, \"disabled\", \"click\"], [\"type\", \"button\", \"adapt-button\", \"\", \"btn-type\", \"secondary\", \"rx-id\", \"cancel-button\", 3, \"click\"], [\"nameCellTemplate\", \"\"], [\"enforceCellTemplate\", \"\"], [4, \"ngIf\"]],\n  template: function ArchiveAssociationSelectorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"span\");\n      i0.ɵɵtext(2);\n      i0.ɵɵpipe(3, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"adapt-rx-radiobutton-group\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function ArchiveAssociationSelectorComponent_Template_adapt_rx_radiobutton_group_ngModelChange_4_listener($event) {\n        return ctx.associationType = $event;\n      })(\"ngModelChange\", function ArchiveAssociationSelectorComponent_Template_adapt_rx_radiobutton_group_ngModelChange_4_listener() {\n        ctx.markAsDirty();\n        return ctx.selectAssociations();\n      });\n      i0.ɵɵelement(5, \"adapt-rx-radiobutton\", 2);\n      i0.ɵɵpipe(6, \"translate\");\n      i0.ɵɵelement(7, \"adapt-rx-radiobutton\", 3);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelement(9, \"adapt-rx-radiobutton\", 4);\n      i0.ɵɵpipe(10, \"translate\");\n      i0.ɵɵelement(11, \"adapt-rx-radiobutton\", 5);\n      i0.ɵɵpipe(12, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"adapt-table\", 6);\n      i0.ɵɵlistener(\"selectionChange\", function ArchiveAssociationSelectorComponent_Template_adapt_table_selectionChange_13_listener($event) {\n        return ctx.onSelectionChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 7);\n      i0.ɵɵelementStart(15, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function ArchiveAssociationSelectorComponent_Template_button_click_15_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(16);\n      i0.ɵɵpipe(17, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function ArchiveAssociationSelectorComponent_Template_button_click_18_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(19);\n      i0.ɵɵpipe(20, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(21, ArchiveAssociationSelectorComponent_ng_template_21_Template, 2, 3, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(23, ArchiveAssociationSelectorComponent_ng_template_23_Template, 2, 2, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 29, \"com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.select-associations-to-follow.message\"), \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.associationType);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(6, 31, \"com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.selected-associations.label\"));\n      i0.ɵɵproperty(\"value\", ctx.associationTypes.selected)(\"disabled\", ctx.isReadOnly || ctx.isOverlayMode && (ctx.actualAssociationsToFollow.selectionType === ctx.associationTypes.all || ctx.actualAssociationsToFollow.selectionType === ctx.associationTypes.allEnforced || ctx.actualAssociationsToFollow.selectionType === ctx.associationTypes.followParent));\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(8, 33, \"com.bmc.arsys.rx.client.common.all.label\"));\n      i0.ɵɵproperty(\"value\", ctx.associationTypes.all)(\"disabled\", ctx.isReadOnly || ctx.isOverlayMode && (ctx.actualAssociationsToFollow.selectionType === ctx.associationTypes.all || ctx.actualAssociationsToFollow.selectionType === ctx.associationTypes.followParent));\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(10, 35, \"com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.all-enforced-associations.label\"));\n      i0.ɵɵproperty(\"value\", ctx.associationTypes.allEnforced)(\"disabled\", ctx.isReadOnly || ctx.isOverlayMode && (ctx.actualAssociationsToFollow.selectionType === ctx.associationTypes.all || ctx.actualAssociationsToFollow.selectionType === ctx.associationTypes.followParent));\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(12, 37, \"com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.follow-parent-associations.label\"));\n      i0.ɵɵproperty(\"value\", ctx.associationTypes.followParent)(\"disabled\", ctx.isReadOnly || ctx.isOverlayMode && (ctx.actualAssociationsToFollow.selectionType === ctx.associationTypes.selected || ctx.actualAssociationsToFollow.selectionType === ctx.associationTypes.all || ctx.actualAssociationsToFollow.selectionType === ctx.associationTypes.allEnforced || ctx.actualAssociationsToFollow.selectionType === ctx.associationTypes.followParent));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", ctx.associationGridRows)(\"selection\", ctx.selectedAssociationGridRows)(\"columns\", ctx.columns)(\"scrollable\", true)(\"sortable\", true)(\"resizableColumns\", false)(\"bordered\", true)(\"filterable\", false)(\"dataKey\", \"name\")(\"disableRowSelection\", false)(\"selectionMode\", \"multiple\")(\"disabledRowSelectionResolver\", ctx.disabledRowSelectionResolver);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.isDirty());\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(17, 39, \"com.bmc.arsys.rx.client.common.save.label\"), \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(20, 41, \"com.bmc.arsys.rx.client.common.cancel.label\"), \" \");\n    }\n  },\n  directives: [i3.AdaptRxRadiobuttonGroupComponent, i6.NgControlStatus, i6.NgModel, i3.AdaptRxRadiobuttonComponent, i4.AdaptTableComponent, i3.AdaptButtonComponent, i5.NgIf],\n  pipes: [i2.TranslatePipe, i2$1.RxDefinitionNamePipe],\n  styles: [_c6],\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ArchiveAssociationSelectorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-archive-associations-editor',\n      templateUrl: './archive-association-selector.component.html',\n      styleUrls: ['./archive-association-selector.component.scss'],\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i3.ActiveModalRef\n    }, {\n      type: i2.TranslateService\n    }, {\n      type: i0.Injector\n    }];\n  }, {\n    nameCellTemplate: [{\n      type: ViewChild,\n      args: ['nameCellTemplate', {\n        static: true\n      }]\n    }],\n    enforceCellTemplate: [{\n      type: ViewChild,\n      args: ['enforceCellTemplate', {\n        static: true\n      }]\n    }]\n  });\n})();\nclass MissingArchiveDefinitionsModalComponent extends RxModalClass {\n  constructor(activeModalRef, injector) {\n    super(activeModalRef, injector);\n    this.activeModalRef = activeModalRef;\n    this.injector = injector;\n    this.missingAssociations = this.activeModalRef.getData().missingAssociations;\n  }\n  ngOnInit() {\n    super.ngOnInit();\n  }\n  close() {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\nMissingArchiveDefinitionsModalComponent.ɵfac = function MissingArchiveDefinitionsModalComponent_Factory(t) {\n  return new (t || MissingArchiveDefinitionsModalComponent)(i0.ɵɵdirectiveInject(i3.ActiveModalRef), i0.ɵɵdirectiveInject(i0.Injector));\n};\nMissingArchiveDefinitionsModalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MissingArchiveDefinitionsModalComponent,\n  selectors: [[\"rx-missing-archive-definitions-modal-selector\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 15,\n  vars: 10,\n  consts: [[1, \"modal-body\", \"pt-0\"], [1, \"row\"], [1, \"col-sm\"], [1, \"font-weight-bold\"], [\"class\", \"row mb-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"modal-footer\"], [\"type\", \"button\", \"adapt-button\", \"\", \"btn-type\", \"secondary\", \"rx-id\", \"close-button\", 3, \"click\"], [1, \"row\", \"mb-2\"], [\"target\", \"_blank\", 1, \"d-icon-left-pop_up\", 3, \"href\"]],\n  template: function MissingArchiveDefinitionsModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"h6\", 3);\n      i0.ɵɵtext(4);\n      i0.ɵɵpipe(5, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 2);\n      i0.ɵɵelementStart(7, \"h6\", 3);\n      i0.ɵɵtext(8);\n      i0.ɵɵpipe(9, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, MissingArchiveDefinitionsModalComponent_div_10_Template, 8, 7, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 5);\n      i0.ɵɵelementStart(12, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function MissingArchiveDefinitionsModalComponent_Template_button_click_12_listener() {\n        return ctx.close();\n      });\n      i0.ɵɵtext(13);\n      i0.ɵɵpipe(14, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(5, 4, \"com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.association-name.label\"), \" \");\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(9, 6, \"com.bmc.arsys.rx.client.common.record-definition-name.label\"), \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.missingAssociations);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(14, 8, \"com.bmc.arsys.rx.client.common.close.label\"), \" \");\n    }\n  },\n  directives: [i5.NgForOf, i3.AdaptButtonComponent],\n  pipes: [i2.TranslatePipe, i2$1.RxDefinitionNamePipe],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MissingArchiveDefinitionsModalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-missing-archive-definitions-modal-selector',\n      templateUrl: './missing-archive-definitions-modal.component.html'\n    }]\n  }], function () {\n    return [{\n      type: i3.ActiveModalRef\n    }, {\n      type: i0.Injector\n    }];\n  }, null);\n})();\nclass ArchiveAssociationsControlComponent extends ValueAccessor {\n  constructor(rxModalService, translateService, rxRecordDefinitionCacheService, rxNotificationService) {\n    super();\n    this.rxModalService = rxModalService;\n    this.translateService = translateService;\n    this.rxRecordDefinitionCacheService = rxRecordDefinitionCacheService;\n    this.rxNotificationService = rxNotificationService;\n    this.associationLabels = {\n      [AssociationSelectionType.Selected]: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.selected-associations.label'),\n      [AssociationSelectionType.All]: this.translateService.instant('com.bmc.arsys.rx.client.common.all.label'),\n      [AssociationSelectionType.AllEnforced]: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.all-enforced-associations.label'),\n      [AssociationSelectionType.FollowParent]: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.follow-parent-associations.label')\n    };\n    this.recordDefinitionNameSubject = new BehaviorSubject(null);\n    this.associationToFollowSubject = new BehaviorSubject({\n      specificAssociationNames: [],\n      selectionType: AssociationSelectionType.FollowParent\n    });\n    this.associationDefinitions$ = this.recordDefinitionNameSubject.pipe(switchMap(recordDefinitionName => recordDefinitionName ? this.rxRecordDefinitionCacheService.getRecordAssociationDefinitions(recordDefinitionName).pipe(map(recordAssociationDefinitions => reject(recordAssociationDefinitions[recordDefinitionName], {\n      cardinality: RX_ASSOCIATION_DEFINITION.cardinality.manyToMany\n    }).filter(association => association.nodeAId === recordDefinitionName))) : of([])), shareReplay(1));\n    this.validAssociations$ = this.associationDefinitions$.pipe(map(associationDefinitions => {\n      const selectedAssociationType = this.value.selectionType;\n      const selectedAssociations = associationDefinitions.filter(association => includes(this.value.specificAssociationNames, association.name));\n      let validAssociations = [];\n      if (selectedAssociationType === AssociationSelectionType.Selected) {\n        validAssociations = selectedAssociations;\n      } else if (selectedAssociationType === AssociationSelectionType.All) {\n        validAssociations = associationDefinitions;\n      } else if (selectedAssociationType === AssociationSelectionType.AllEnforced) {\n        validAssociations = associationDefinitions.filter(association => association.nodeAModality === RX_ASSOCIATION_DEFINITION.modality.required).concat(selectedAssociations);\n      }\n      return validAssociations;\n    }));\n    this.missingAssociations$ = this.validAssociations$.pipe(switchMap(associations => forkJoin(associations.map(association => this.rxRecordDefinitionCacheService.getRecordDefinition(association.nodeBId).pipe(filter(definition => {\n      var _a;\n      return !((_a = definition.archiveDescriptor) === null || _a === void 0 ? void 0 : _a.isEnabled);\n    }), map(() => ({\n      name: association.name,\n      secondRecord: association.nodeBId,\n      url: `${window.location.origin}/helix/index.html#/${RX_APPLICATION.innovationStudioBundleId}/record/edit2/${association.nodeBId}`\n    }))))).pipe(defaultIfEmpty([]))));\n    this.associationLabel$ = combineLatest([this.associationToFollowSubject, this.associationDefinitions$]).pipe(map(([associationToFollow, associationDefinitions]) => {\n      let selectedAssociationLabel;\n      if (associationToFollow.selectionType === AssociationSelectionType.AllEnforced) {\n        const selectedAssociations = filter$1(associationDefinitions, association => includes(associationToFollow.specificAssociationNames, association.name));\n        if (some(selectedAssociations, association => association.nodeAModality !== RX_ASSOCIATION_DEFINITION.modality.required)) {\n          selectedAssociationLabel = `${this.associationLabels[AssociationSelectionType.AllEnforced]} + ${this.associationLabels[AssociationSelectionType.Selected]}`;\n        } else {\n          selectedAssociationLabel = this.associationLabels[AssociationSelectionType.AllEnforced];\n        }\n      } else {\n        selectedAssociationLabel = this.associationLabels[associationToFollow.selectionType];\n      }\n      return selectedAssociationLabel;\n    }));\n  }\n  ngOnChanges(changes) {\n    var _a, _b;\n    const prevDefinitionName = changes.options.previousValue.definitionModel.lastUpdateTime ? `${changes.options.previousValue.bundleId}:${changes.options.previousValue.definitionModel.name}` : (_a = changes.options.previousValue.definitionModel.recordInheritanceSelector.inheritanceDescriptor) === null || _a === void 0 ? void 0 : _a.inheritingFrom;\n    const currentDefinitionName = changes.options.currentValue.definitionModel.lastUpdateTime ? `${changes.options.currentValue.bundleId}:${changes.options.currentValue.definitionModel.name}` : (_b = changes.options.currentValue.definitionModel.recordInheritanceSelector.inheritanceDescriptor) === null || _b === void 0 ? void 0 : _b.inheritingFrom;\n    if (currentDefinitionName !== prevDefinitionName) {\n      this.recordDefinitionNameSubject.next(currentDefinitionName);\n    }\n    if (!currentDefinitionName) {\n      this.value = {\n        specificAssociationNames: [],\n        selectionType: AssociationSelectionType.FollowParent\n      };\n      this.associationToFollowSubject.next(this.value);\n    }\n  }\n  ngOnInit() {\n    var _a;\n    const definitionName = this.options.definitionModel.lastUpdateTime ? `${this.options.bundleId}:${this.options.definitionModel.name}` : (_a = this.options.definitionModel.recordInheritanceSelector.inheritanceDescriptor) === null || _a === void 0 ? void 0 : _a.inheritingFrom;\n    this.recordDefinitionNameSubject.next(definitionName);\n    this.associationToFollowSubject.next(this.value);\n  }\n  openAssociationSelector() {\n    this.associationDefinitions$.pipe(take(1)).subscribe(associationDefinitions => {\n      this.rxModalService.openModal({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.associations-to-follow.label'),\n        data: {\n          associationDefinitions,\n          selectedAssociationsToFollow: this.value,\n          actualAssociationsToFollow: this.options.definitionModelFromDefinition.associationsToFollowForArchive,\n          isOverlayMode: this.options.isOverlayMode,\n          isReadOnly: this.options.isReadOnly\n        },\n        content: ArchiveAssociationSelectorComponent\n      }).then(result => {\n        this.value = result;\n        this.associationToFollowSubject.next(this.value);\n      }).catch(noop);\n    });\n  }\n  openMissingDefinitionsModal() {\n    this.missingAssociations$.pipe(take(1)).subscribe(missingAssociations => {\n      if (missingAssociations.length) {\n        this.rxModalService.openModal({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.missing-archive-definitions.label'),\n          data: {\n            missingAssociations\n          },\n          size: 'sm',\n          content: MissingArchiveDefinitionsModalComponent\n        }).catch(noop);\n      } else {\n        this.rxNotificationService.addInfoMessage(this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.no-missing-archive-definitions.message'));\n      }\n    });\n  }\n}\nArchiveAssociationsControlComponent.ɵfac = function ArchiveAssociationsControlComponent_Factory(t) {\n  return new (t || ArchiveAssociationsControlComponent)(i0.ɵɵdirectiveInject(i1.RxModalService), i0.ɵɵdirectiveInject(i2.TranslateService), i0.ɵɵdirectiveInject(i3$1.RxRecordDefinitionCacheService), i0.ɵɵdirectiveInject(i2$1.RxNotificationService));\n};\nArchiveAssociationsControlComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ArchiveAssociationsControlComponent,\n  selectors: [[\"rx-archive-associations\"]],\n  inputs: {\n    options: \"options\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: ArchiveAssociationsControlComponent,\n    multi: true\n  }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 15,\n  vars: 12,\n  consts: [[1, \"d-inline-flex\", \"align-items-center\", \"mb-1\"], [\"adapt-button\", \"\", \"type\", \"button\", \"btn-type\", \"tertiary\", \"rx-id\", \"associations-to-follow-button\", 1, \"d-icon-plus_circle\", \"p-0\", 3, \"click\"], [\"name\", \"question_circle_o\", \"placement\", \"right\", 1, \"ml-2\", 3, \"adaptPopover\"], [1, \"border\", \"pl-2\", \"p-1\", \"form-group\"], [1, \"d-icon-left-arrow_schema\", \"font-weight-bold\"], [1, \"d-inline-flex\", \"align-items-center\"], [\"name\", \"exclamation_triangle\", 1, \"text-warning-icon\"], [\"btn-type\", \"tertiary\", \"rx-id\", \"open-missing-definitions-button\", 1, \"p-0\", \"pl-1\", 3, \"click\"]],\n  template: function ArchiveAssociationsControlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ArchiveAssociationsControlComponent_Template_button_click_1_listener() {\n        return ctx.openAssociationSelector();\n      });\n      i0.ɵɵtext(2);\n      i0.ɵɵpipe(3, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"adapt-icon\", 2);\n      i0.ɵɵpipe(5, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 3);\n      i0.ɵɵelementStart(7, \"span\", 4);\n      i0.ɵɵtext(8);\n      i0.ɵɵpipe(9, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 5);\n      i0.ɵɵelement(11, \"adapt-icon\", 6);\n      i0.ɵɵelementStart(12, \"adapt-button\", 7);\n      i0.ɵɵlistener(\"click\", function ArchiveAssociationsControlComponent_Template_adapt_button_click_12_listener() {\n        return ctx.openMissingDefinitionsModal();\n      });\n      i0.ɵɵtext(13);\n      i0.ɵɵpipe(14, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 4, \"com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.associations-to-follow.label\"), \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"adaptPopover\", i0.ɵɵpipeBind1(5, 6, \"com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.associations-to-follow.tooltip\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(9, 8, ctx.associationLabel$), \" \");\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(14, 10, \"com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.missing-archive-definitions.label\"), \" \");\n    }\n  },\n  directives: [i3.AdaptButtonComponent, i3.AdaptIconComponent, i3.AdaptPopoverDirective],\n  pipes: [i2.TranslatePipe, i5.AsyncPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ArchiveAssociationsControlComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-archive-associations',\n      templateUrl: './archive-associations-control.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: ArchiveAssociationsControlComponent,\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i1.RxModalService\n    }, {\n      type: i2.TranslateService\n    }, {\n      type: i3$1.RxRecordDefinitionCacheService\n    }, {\n      type: i2$1.RxNotificationService\n    }];\n  }, {\n    options: [{\n      type: Input\n    }]\n  });\n})();\nclass RecordIndexesEditorStore extends ComponentStore {\n  constructor(rxGuidService) {\n    super({\n      indexes: [],\n      isDirty: false\n    });\n    this.rxGuidService = rxGuidService;\n    this.isDirty$ = this.select(state => state.isDirty);\n    this.indexes$ = this.select(state => state.indexes);\n    this.addIndex = this.updater((state, index) => Object.assign(Object.assign({}, state), {\n      indexes: [...state.indexes, index],\n      isDirty: true\n    }));\n    this.updateIndex = this.updater((state, indexToUpdate) => Object.assign(Object.assign({}, state), {\n      indexes: state.indexes.map(index => index.guid === indexToUpdate.guid ? Object.assign({}, indexToUpdate) : index),\n      isDirty: true\n    }));\n    this.removeIndex = this.updater((state, guid) => Object.assign(Object.assign({}, state), {\n      indexes: state.indexes.filter(field => field.guid !== guid),\n      isDirty: true\n    }));\n    this.checkAvailableFields = this.updater((state, payload) => Object.assign(Object.assign({}, state), {\n      indexes: state.indexes.map(index => index.guid === payload.indexGuid ? Object.assign(Object.assign({}, index), {\n        checkedAvailableFields: [...payload.checkedFields]\n      }) : index)\n    }));\n    this.toggleSelectedFieldChecked = this.updater((state, payload) => Object.assign(Object.assign({}, state), {\n      indexes: state.indexes.map(index => {\n        if (index.guid === payload.indexGuid) {\n          const selectedFields = index.selectedFields.map(field => field.id === payload.indexField.id ? Object.assign({}, field) : field);\n          return Object.assign(Object.assign({}, index), {\n            selectedFields,\n            isMoveToAvailableButtonEnabled: some(selectedFields, 'selected')\n          });\n        } else {\n          return index;\n        }\n      })\n    }));\n    this.assignCheckedFields = this.updater((state, indexToAssign) => {\n      return Object.assign(Object.assign({}, state), {\n        indexes: state.indexes.map(index => index.guid === indexToAssign.guid ? Object.assign(Object.assign({}, index), {\n          selectedFields: [...index.selectedFields, ...index.checkedAvailableFields].map((field, itemIndex) => Object.assign(Object.assign({}, field), {\n            selected: false,\n            fieldOrder: itemIndex++\n          })),\n          availableFields: [...index.availableFields.filter(field => !some(index.checkedAvailableFields, {\n            id: field.id\n          }))],\n          checkedAvailableFields: []\n        }) : index),\n        isDirty: true\n      });\n    });\n    this.unassignCheckedFields = this.updater((state, indexToAssign) => {\n      return Object.assign(Object.assign({}, state), {\n        indexes: state.indexes.map(index => index.guid === indexToAssign.guid ? Object.assign(Object.assign({}, index), {\n          selectedFields: index.selectedFields.filter(field => !field.selected),\n          availableFields: [...index.availableFields, ...index.selectedFields.filter(field => field.selected)].map(field => Object.assign(Object.assign({}, field), {\n            fieldOrder: null\n          })).sort((a, b) => a.name.localeCompare(b.name)),\n          isMoveToAvailableButtonEnabled: false\n        }) : index),\n        isDirty: true\n      });\n    });\n    this.sortSelectedFields = this.updater((state, payload) => Object.assign(Object.assign({}, state), {\n      indexes: state.indexes.map(index => index.guid === payload.indexGuid ? Object.assign(Object.assign({}, index), {\n        selectedFields: [...payload.fields.map((field, itemIndex) => Object.assign(Object.assign({}, field), {\n          fieldOrder: itemIndex\n        }))]\n      }) : index)\n    }));\n    this.removeField = this.updater((state, payload) => Object.assign(Object.assign({}, state), {\n      indexes: state.indexes.map(index => index.guid === payload.indexGuid ? Object.assign(Object.assign({}, index), {\n        selectedFields: index.selectedFields.filter(field => field.id !== payload.field.id),\n        availableFields: [...index.availableFields, payload.field].sort((a, b) => a.name.localeCompare(b.name))\n      }) : index),\n      isDirty: true\n    }));\n    this.expandAll = this.updater(state => Object.assign(Object.assign({}, state), {\n      indexes: state.indexes.map(field => Object.assign(Object.assign({}, field), {\n        isOpen: true\n      }))\n    }));\n    this.collapseAll = this.updater(state => Object.assign(Object.assign({}, state), {\n      indexes: state.indexes.map(field => Object.assign(Object.assign({}, field), {\n        isOpen: false\n      }))\n    }));\n    this.markDirty = this.updater(state => Object.assign(Object.assign({}, state), {\n      isDirty: true\n    }));\n    this.vm$ = this.select(this.indexes$, this.isDirty$, (indexes, isDirty) => ({\n      indexes,\n      isDirty\n    }));\n  }\n  initialize(indexesEditorOptions) {\n    this.patchState({\n      isDirty: false,\n      indexes: indexesEditorOptions.indexes.map((index, itemIndex) => Object.assign(Object.assign({}, index), {\n        availableFields: reject(indexesEditorOptions.fields, field => field.isNewField || index.indexFieldIds.includes(field.id)).map(field => ({\n          id: field.id,\n          name: field.name,\n          fieldOrder: null\n        })).sort((a, b) => a.name.localeCompare(b.name)),\n        checkedAvailableFields: [],\n        selectedFields: indexesEditorOptions.fields.filter(field => !field.isNewField && index.indexFieldIds.includes(field.id)).sort((a, b) => index.indexFieldIds.indexOf(a.id) - index.indexFieldIds.indexOf(b.id)).map((field, index) => ({\n          id: field.id,\n          name: field.name,\n          fieldOrder: index\n        })),\n        guid: this.rxGuidService.generate(),\n        isOpen: (indexesEditorOptions === null || indexesEditorOptions === void 0 ? void 0 : indexesEditorOptions.indexToEditIndex) === itemIndex,\n        isMoveToAvailableButtonEnabled: false\n      }))\n    });\n  }\n}\nRecordIndexesEditorStore.ɵfac = function RecordIndexesEditorStore_Factory(t) {\n  return new (t || RecordIndexesEditorStore)(i0.ɵɵinject(i1$1.RxGuidService));\n};\nRecordIndexesEditorStore.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RecordIndexesEditorStore,\n  factory: RecordIndexesEditorStore.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RecordIndexesEditorStore, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.RxGuidService\n    }];\n  }, null);\n})();\nclass RecordIndexesEditorComponent extends RxModalClass {\n  constructor(recordIndexesEditorStore, rxGuidService, activeModalRef, injector) {\n    super(activeModalRef, injector);\n    this.recordIndexesEditorStore = recordIndexesEditorStore;\n    this.rxGuidService = rxGuidService;\n    this.activeModalRef = activeModalRef;\n    this.injector = injector;\n    this.isReadOnly = this.activeModalRef.getData().isReadOnly;\n    this.indexesEditorOptions = this.activeModalRef.getData();\n    this.vm$ = this.recordIndexesEditorStore.vm$;\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.recordIndexesEditorStore.isDirty$.pipe(filter(Boolean), take(1)).subscribe(() => {\n      this.markAsDirty();\n    });\n    this.recordIndexesEditorStore.initialize(this.indexesEditorOptions);\n  }\n  ngAfterViewInit() {\n    var _a;\n    (_a = this.accordionTabEls.get(this.indexesEditorOptions.indexToEditIndex)) === null || _a === void 0 ? void 0 : _a.nativeElement.scrollIntoView({\n      block: 'nearest'\n    });\n  }\n  cancel() {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n  addIndex() {\n    this.recordIndexesEditorStore.addIndex({\n      guid: this.rxGuidService.generate(),\n      indexName: null,\n      unique: false,\n      ignoreBlankValues: false,\n      indexFieldIds: [],\n      availableFields: this.indexesEditorOptions.fields.filter(field => !field.isNewField).map(field => Object.assign(Object.assign({}, field), {\n        fieldOrder: null\n      })).sort((a, b) => a.name.localeCompare(b.name)),\n      checkedAvailableFields: [],\n      selectedFields: [],\n      isOpen: true,\n      isAutomaticIndex: false,\n      isMoveToAvailableButtonEnabled: false\n    });\n  }\n  updateIndexUniqueValue(index, unique) {\n    this.recordIndexesEditorStore.updateIndex(Object.assign(Object.assign({}, index), {\n      unique\n    }));\n  }\n  updateIndexIgnoreBlankValue(index, ignoreBlankValues) {\n    this.recordIndexesEditorStore.updateIndex(Object.assign(Object.assign({}, index), {\n      ignoreBlankValues\n    }));\n  }\n  removeIndex(guid) {\n    this.recordIndexesEditorStore.removeIndex(guid);\n  }\n  moveToSelected(index) {\n    this.recordIndexesEditorStore.assignCheckedFields(index);\n  }\n  moveToAvailable(index) {\n    this.recordIndexesEditorStore.unassignCheckedFields(index);\n  }\n  onAvailableFieldsChange(checkedFields, index) {\n    this.recordIndexesEditorStore.checkAvailableFields({\n      indexGuid: index.guid,\n      checkedFields\n    });\n  }\n  onSelectedFieldsChange(fields, index) {\n    fields.forEach(field => {\n      this.recordIndexesEditorStore.toggleSelectedFieldChecked({\n        indexGuid: index.guid,\n        indexField: field\n      });\n    });\n    this.recordIndexesEditorStore.sortSelectedFields({\n      indexGuid: index.guid,\n      fields\n    });\n  }\n  onDragEnd() {\n    this.recordIndexesEditorStore.markDirty();\n  }\n  onFieldRemove(removedField, index) {\n    this.recordIndexesEditorStore.removeField({\n      indexGuid: index.guid,\n      field: removedField\n    });\n  }\n  save() {\n    this.recordIndexesEditorStore.indexes$.pipe(take(1)).subscribe(indexes => {\n      this.activeModalRef.close(indexes.map(index => ({\n        isAutomaticIndex: index.isAutomaticIndex,\n        indexName: index.indexName,\n        unique: index.unique,\n        ignoreBlankValues: index.ignoreBlankValues,\n        indexFieldIds: map$1(index.selectedFields, 'id')\n      })));\n    });\n  }\n  expandAll() {\n    this.recordIndexesEditorStore.expandAll();\n  }\n  collapseAll() {\n    this.recordIndexesEditorStore.collapseAll();\n  }\n  trackByIndex($index) {\n    return $index;\n  }\n  optionFormatter(field) {\n    return field.name;\n  }\n}\nRecordIndexesEditorComponent.ɵfac = function RecordIndexesEditorComponent_Factory(t) {\n  return new (t || RecordIndexesEditorComponent)(i0.ɵɵdirectiveInject(RecordIndexesEditorStore), i0.ɵɵdirectiveInject(i1$1.RxGuidService), i0.ɵɵdirectiveInject(i3.ActiveModalRef), i0.ɵɵdirectiveInject(i0.Injector));\n};\nRecordIndexesEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RecordIndexesEditorComponent,\n  selectors: [[\"rx-record-indexes-editor\"]],\n  viewQuery: function RecordIndexesEditorComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(AdaptAccordionTabComponent, 5, ElementRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.accordionTabEls = _t);\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([RecordIndexesEditorStore]), i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [1, \"designer-modal-body\", \"modal-body\", \"d-flex\", \"mh-100\", \"flex-column\"], [1, \"flex-shrink-0\", 3, \"config\"], [1, \"text-right\", \"btn-group\"], [\"type\", \"button\", \"adapt-button\", \"\", \"btn-type\", \"tertiary\", \"rx-id\", \"add-index-button\", \"class\", \"d-icon-left-plus_circle float-left px-0\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"adapt-button\", \"\", \"btn-type\", \"tertiary\", \"rx-id\", \"expand-button\", 1, \"ml-auto\", 3, \"click\"], [\"type\", \"button\", \"adapt-button\", \"\", \"btn-type\", \"tertiary\", \"rx-id\", \"collapse-button\", 1, \"pr-0\", 3, \"click\"], [1, \"designer-modal-accordion-wrapper\"], [\"class\", \"d-block\", 3, \"multiselect\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"modal-footer\"], [\"type\", \"button\", \"adapt-button\", \"\", \"btn-type\", \"tertiary\", \"rx-id\", \"add-index-button\", 1, \"d-icon-left-plus_circle\", \"float-left\", \"px-0\", 3, \"click\"], [1, \"d-block\", 3, \"multiselect\"], [1, \"designer-modal-accordion-content\"], [1, \"d-block\", 3, \"isOpen\", \"open\", \"close\"], [1, \"card-title-text\", \"w-100\"], [1, \"designer-modal-card-title-content\"], [1, \"left-header-block\", \"pl-0\"], [\"rx-id\", \"card-title\", 1, \"rx-ellipsis\", 3, \"title\"], [1, \"right-header-block\"], [\"class\", \"d-icon-left-cross_adapt py-0 pr-3 btn btn-sm\", \"adapt-button\", \"\", \"size\", \"small\", \"type\", \"button\", \"rx-id\", \"remove-index-button\", 3, \"click\", 4, \"ngIf\"], [3, \"ngModel\", \"disabled\", \"label\", \"ngModelChange\"], [3, \"ngModel\", \"disabled\", \"label\", \"tooltip\", \"ngModelChange\"], [1, \"d-flex\", \"flex-fill\"], [\"popupMaxHeight\", \"100%\", \"rx-id\", \"available-field-list\", 1, \"flex-grow-1\", \"d-flex\", \"flex-column\", 3, \"options\", \"ngModel\", \"disabled\", \"deselectAllButton\", \"selectAllButton\", \"enableFilter\", \"inline\", \"label\", \"multiple\", \"singleSelectStyle\", \"optionFormatter\", \"ngModelChange\"], [1, \"mx-2\", \"d-flex\", \"flex-column\"], [\"type\", \"button\", \"adapt-button\", \"\", \"btn-type\", \"secondary\", \"rx-id\", \"move-to-selected-button\", 1, \"d-icon-right-angle_right\", \"mt-auto\", \"mb-2\", 3, \"disabled\", \"click\"], [\"type\", \"button\", \"adapt-button\", \"\", \"btn-type\", \"secondary\", \"rx-id\", \"move-to-available-button\", 1, \"d-icon-right-angle_left\", \"mb-auto\", 3, \"disabled\", \"click\"], [\"selectionMode\", \"multiple\", \"rx-id\", \"selected-field-list\", 1, \"flex-grow-1\", 3, \"ngModel\", \"disabled\", \"hideSearchField\", \"hideEdit\", \"tooltip\", \"label\", \"ngModelChange\", \"listItemRemove\", \"dragend\"], [\"adapt-button\", \"\", \"size\", \"small\", \"type\", \"button\", \"rx-id\", \"remove-index-button\", 1, \"d-icon-left-cross_adapt\", \"py-0\", \"pr-3\", \"btn\", \"btn-sm\", 3, \"click\"], [\"type\", \"button\", \"adapt-button\", \"\", \"btn-type\", \"primary\", \"rx-id\", \"save-button\", 1, \"mr-2\", 3, \"disabled\", \"click\"], [\"type\", \"button\", \"adapt-button\", \"\", \"btn-type\", \"secondary\", \"rx-id\", \"cancel-button\", 3, \"click\"], [\"type\", \"button\", \"adapt-button\", \"\", \"btn-type\", \"secondary\", \"rx-id\", \"close-button\", 3, \"click\"]],\n  template: function RecordIndexesEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, RecordIndexesEditorComponent_ng_container_0_Template, 17, 16, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.vm$));\n    }\n  },\n  directives: [i5.NgIf, i3.AdaptAlertComponent, i3.AdaptButtonComponent, i5.NgForOf, i3.AdaptAccordionComponent, i3.AdaptAccordionTabComponent, i3.AdaptRxCheckboxComponent, i6.NgControlStatus, i6.NgModel, i3.AdaptRxSelectComponent, i3.AdaptRxListBuilderComponent],\n  pipes: [i5.AsyncPipe, i2.TranslatePipe],\n  styles: [\"[_ngcontent-%COMP%]:root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}.designer-modal-body[_ngcontent-%COMP%]{height:645px;min-height:calc(100% - 61px)!important}.designer-modal-accordion-wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100%;overflow:auto;padding-top:10px}.designer-modal-accordion-content[_ngcontent-%COMP%]{position:relative}.designer-modal-accordion-content.cdk-drag-preview[_ngcontent-%COMP%]{z-index:1200!important}.designer-modal-drag-handle[_ngcontent-%COMP%]{cursor:move;position:absolute;top:0;left:0;height:46px;padding:14px 10px 14px 14px;z-index:1}.designer-modal-card-title-content[_ngcontent-%COMP%]{width:100%;display:flex}.designer-modal-card-title-content[_ngcontent-%COMP%]   .left-header-block[_ngcontent-%COMP%], .designer-modal-card-title-content[_ngcontent-%COMP%]   .right-header-block[_ngcontent-%COMP%]{display:flex;align-items:center}.designer-modal-card-title-content[_ngcontent-%COMP%]   .left-header-block[_ngcontent-%COMP%]{flex-grow:1;min-width:0;font-size:14px;padding-left:22px}.designer-modal-card-sub-title[_ngcontent-%COMP%]{color:#7c7f81;font-weight:normal}.designer-modal-card-title-index-buttons[_ngcontent-%COMP%]{display:flex;font-size:19px}.rx-card[_ngcontent-%COMP%]{overflow:auto}.rx-tree-draggable-node[_ngcontent-%COMP%]{cursor:pointer}.rx-tree-draggable-node.cdk-drag-preview[_ngcontent-%COMP%]{z-index:1200!important}.rx-tree-draggable-node.cdk-drag[_ngcontent-%COMP%]{opacity:1}.rx-tree-node-label[_ngcontent-%COMP%]{word-break:break-all}rx-form-builder[_ngcontent-%COMP%]{max-width:400px}[_nghost-%COMP%]  adapt-rx-select{width:30%}[_nghost-%COMP%]  adapt-rx-select .rx-select__options-wrapper{height:350px;flex:1 1 auto;overflow-y:auto;overflow-x:hidden}[_nghost-%COMP%]  adapt-rx-list-builder{width:30%}[_nghost-%COMP%]  adapt-rx-list-builder .adapt-list-builder{height:100%}[_nghost-%COMP%]  adapt-rx-list-builder .adapt-list-container{height:350px;flex-grow:1;overflow:auto}[_nghost-%COMP%]  adapt-rx-list-builder .adapt-list-builder, [_nghost-%COMP%]  adapt-rx-list-builder .adapt-list-builder__wrp{display:flex;flex-direction:column;height:100%}\"],\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RecordIndexesEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-record-indexes-editor',\n      templateUrl: './record-indexes-editor.component.html',\n      styleUrls: ['./record-indexes-editor.component.scss'],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [RecordIndexesEditorStore]\n    }]\n  }], function () {\n    return [{\n      type: RecordIndexesEditorStore\n    }, {\n      type: i1$1.RxGuidService\n    }, {\n      type: i3.ActiveModalRef\n    }, {\n      type: i0.Injector\n    }];\n  }, {\n    accordionTabEls: [{\n      type: ViewChildren,\n      args: [AdaptAccordionTabComponent, {\n        read: ElementRef\n      }]\n    }]\n  });\n})();\nclass RecordIndexesControlComponent extends ValueAccessor {\n  constructor(rxModalService, translateService) {\n    super();\n    this.rxModalService = rxModalService;\n    this.translateService = translateService;\n  }\n  openIndexesEditor(indexToEditIndex = null) {\n    this.rxModalService.openModal({\n      title: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.indexes.edit-indexes.label'),\n      data: {\n        indexes: this.value,\n        indexToEditIndex,\n        isReadOnly: this.options.isReadOnly,\n        fields: this.options.definitionModel.fields\n      },\n      content: RecordIndexesEditorComponent,\n      size: OpenViewActionModalSize.Large\n    }).then(indexes => {\n      this.value = indexes;\n    }).catch(noop);\n  }\n  removeIndex($index) {\n    this.rxModalService.confirm({\n      title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n      modalStyle: RX_MODAL.modalStyles.warning,\n      message: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.indexes.delete-index-confirmation.message')\n    }).then(result => {\n      if (result) {\n        this.value = this.value.filter((index, itemIndex) => itemIndex !== $index);\n      }\n    });\n  }\n  focus(data) {\n    if (data === null || data === void 0 ? void 0 : data.indexToEditIndex) {\n      this.openIndexesEditor(data.indexToEditIndex);\n    } else {\n      this.openIndexesEditor();\n    }\n  }\n}\nRecordIndexesControlComponent.ɵfac = function RecordIndexesControlComponent_Factory(t) {\n  return new (t || RecordIndexesControlComponent)(i0.ɵɵdirectiveInject(i1.RxModalService), i0.ɵɵdirectiveInject(i2.TranslateService));\n};\nRecordIndexesControlComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RecordIndexesControlComponent,\n  selectors: [[\"rx-record-indexes\"]],\n  inputs: {\n    options: \"options\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: RecordIndexesControlComponent,\n    multi: true\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 4,\n  consts: [[\"btn-type\", \"tertiary\", \"rx-id\", \"open-indexes-editor\", 1, \"p-0\", \"pb-1\", 3, \"click\"], [1, \"d-icon-plus_circle\"], [\"class\", \"record-index rounded mb-1 border font-weight-bold\", 4, \"ngFor\", \"ngForOf\"], [1, \"record-index\", \"rounded\", \"mb-1\", \"border\", \"font-weight-bold\"], [1, \"d-flex\", \"mb-1\"], [\"rx-id\", \"record-index-name\", 3, \"title\"], [4, \"ngIf\"], [\"class\", \"ml-auto rx-button-unstyled d-icon-left-pencil btn-link\", \"type\", \"button\", \"rx-id\", \"open-index-editor\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"rx-button-unstyled d-icon-cross btn-link\", \"rx-id\", \"remove-index\", 3, \"click\", 4, \"ngIf\"], [1, \"caption\", \"ellipsis\"], [\"name\", \"question_circle_o\", 1, \"ml-2\", 3, \"adaptPopover\"], [\"type\", \"button\", \"rx-id\", \"open-index-editor\", 1, \"ml-auto\", \"rx-button-unstyled\", \"d-icon-left-pencil\", \"btn-link\", 3, \"click\"], [\"type\", \"button\", \"rx-id\", \"remove-index\", 1, \"rx-button-unstyled\", \"d-icon-cross\", \"btn-link\", 3, \"click\"]],\n  template: function RecordIndexesControlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"adapt-button\", 0);\n      i0.ɵɵlistener(\"click\", function RecordIndexesControlComponent_Template_adapt_button_click_0_listener() {\n        return ctx.openIndexesEditor();\n      });\n      i0.ɵɵelement(1, \"span\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵpipe(3, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, RecordIndexesControlComponent_div_4_Template, 12, 16, \"div\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 2, \"com.bmc.arsys.rx.client.record-designer.indexes.edit-indexes.label\"), \"\\n\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.value);\n    }\n  },\n  directives: [i3.AdaptButtonComponent, i5.NgForOf, i5.NgIf, i3.AdaptIconComponent, i3.AdaptPopoverDirective],\n  pipes: [i2.TranslatePipe],\n  styles: [\"[_ngcontent-%COMP%]:root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}.record-index[_ngcontent-%COMP%]{padding:5px 10px;word-break:break-all}.record-index[_ngcontent-%COMP%]   .caption[_ngcontent-%COMP%]{color:#959899;font-size:10px}.d-icon-cross[_ngcontent-%COMP%], .d-icon-left-pencil[_ngcontent-%COMP%]{cursor:pointer}.d-icon-cross[_ngcontent-%COMP%]:not(:hover), .d-icon-left-pencil[_ngcontent-%COMP%]:not(:hover){color:#313538}\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RecordIndexesControlComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-record-indexes',\n      templateUrl: './record-indexes-control.component.html',\n      styleUrls: ['./record-indexes-control.component.scss'],\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: RecordIndexesControlComponent,\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i1.RxModalService\n    }, {\n      type: i2.TranslateService\n    }];\n  }, {\n    options: [{\n      type: Input\n    }]\n  });\n})();\nclass RxRecordDesignerInspectorService {\n  constructor(rxFieldDefinitionService, rxOverlayService, translateService) {\n    this.rxFieldDefinitionService = rxFieldDefinitionService;\n    this.rxOverlayService = rxOverlayService;\n    this.translateService = translateService;\n  }\n  getDefinitionInspectorConfig(isNewDefinition, definitionModel, definitionModelFromDefinition, bundleId, isPropertiesCustomizationAllowed, isIndexCustomizationAllowed, isPermissionsCustomizationAllowed, isFieldsCustomizationAllowed, isReadOnly, expressionConfigurator) {\n    var _a, _b;\n    let configs = [];\n    const isOverlayMode = !isNewDefinition && definitionModel.overlayOperation !== RX_OVERLAY.operationTypes.createdInThisOverlayGroup;\n    const isAuditRecordDefinition = Boolean(definitionModel.isAuditRecordDefinition);\n    const isDeleteSourceRecordOperation = definitionModel.archiveType === RX_RECORD_DESIGNER.archiving.types.deleteSourceRecord.id;\n    const doNotArchive = definitionModel.archiveType === RX_RECORD_DESIGNER.archiving.types.doNotArchive.id;\n    const archivingOptions = Object.values(RX_RECORD_DESIGNER.archiving.types).map(value => Object.assign(Object.assign({}, value), {\n      name: this.translateService.instant(value.nameKey)\n    }));\n    const joinTypeOptions = Object.values(RX_RECORD_DEFINITION.joinTypes).map(joinType => Object.assign(Object.assign({}, joinType), {\n      name: this.translateService.instant(joinType.displayName),\n      id: joinType.value\n    }));\n    const weightedRelevancyFields = [{\n      name: 'weightedRelevancyTitle',\n      component: SelectFormControlComponent,\n      isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.title-field.label'),\n        options: definitionModel.fields.filter(fieldDefinition => isNumber(fieldDefinition.id) && (get(fieldDefinition, 'searchDefinition.enableFTSSearch') || get(fieldDefinition, 'searchDefinition.enableCognitiveSearch')) && !includes([definitionModel.weightedRelevancyEnvironment, definitionModel.weightedRelevancyKeywords], fieldDefinition.id)).map(fieldDefinition => ({\n          name: fieldDefinition.name,\n          id: fieldDefinition.id\n        })),\n        tooltip: new Tooltip(this.translateService.instant(definitionModel.enableCognitiveSearch ? 'com.bmc.arsys.rx.client.record-designer.definition-properties.title-field-cognitive-search.tooltip' : 'com.bmc.arsys.rx.client.record-designer.definition-properties.title-field-fts.tooltip'))\n      }\n    }, {\n      name: 'weightedRelevancyEnvironment',\n      component: SelectFormControlComponent,\n      isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.environment-field.label'),\n        options: definitionModel.fields.filter(fieldDefinition => isNumber(fieldDefinition.id) && (get(fieldDefinition, 'searchDefinition.enableFTSSearch') || get(fieldDefinition, 'searchDefinition.enableCognitiveSearch')) && !includes([definitionModel.weightedRelevancyTitle, definitionModel.weightedRelevancyKeywords], fieldDefinition.id)).map(fieldDefinition => ({\n          name: fieldDefinition.name,\n          id: fieldDefinition.id\n        })),\n        tooltip: new Tooltip(this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.environment-field.tooltip'))\n      }\n    }, {\n      name: 'weightedRelevancyKeywords',\n      component: SelectFormControlComponent,\n      isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n      options: {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.keywords-field.label'),\n        options: definitionModel.fields.filter(fieldDefinition => isNumber(fieldDefinition.id) && (get(fieldDefinition, 'searchDefinition.enableFTSSearch') || get(fieldDefinition, 'searchDefinition.enableCognitiveSearch')) && !includes([definitionModel.weightedRelevancyTitle, definitionModel.weightedRelevancyEnvironment], fieldDefinition.id)).map(fieldDefinition => ({\n          name: fieldDefinition.name,\n          id: fieldDefinition.id\n        })),\n        tooltip: new Tooltip(this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.keywords-field.tooltip'))\n      }\n    }];\n    if (definitionModel.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType) {\n      configs = [{\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n        controls: [{\n          name: 'name',\n          component: TextFormControlComponent,\n          isDisabled: !isNewDefinition,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n            required: true\n          }\n        }, {\n          name: 'description',\n          component: TextareaFormControlComponent,\n          isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label'),\n            rows: 3\n          }\n        }, {\n          component: RxRevertCustomizationComponent,\n          options: {\n            overlayGroupId: definitionModel.overlayGroupId,\n            overlayDescriptor: definitionModel.overlayDescriptor\n          }\n        }, {\n          name: 'customizationOptions',\n          component: RecordCustomizationOptionsComponent,\n          isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n          options: {\n            definitionTypeDisplayName: this.translateService.instant('com.bmc.arsys.rx.client.record-definition.label').toLowerCase(),\n            recordDefinition: definitionModel\n          }\n        }, {\n          name: 'allowNonAdminToDeleteRecordInstances',\n          component: SwitchFormControlComponent,\n          isDisabled: isAuditRecordDefinition || isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.allow-non-admin-users-to-delete-records.label')\n          }\n        }, {\n          name: 'owner',\n          component: TextFormControlComponent,\n          isDisabled: true,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.common.owner.label')\n          }\n        }, {\n          name: 'lastUpdateTime',\n          component: TextFormControlComponent,\n          isDisabled: true,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.common.modified-date.label')\n          }\n        }, {\n          name: 'lastChangedBy',\n          component: TextFormControlComponent,\n          isDisabled: true,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.common.modified-by.label')\n          }\n        }, {\n          name: 'permissions',\n          component: RxPermissionEditorComponent,\n          isDisabled: !isPermissionsCustomizationAllowed || isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.common.permissions.label'),\n            type: RX_PERMISSION.editorContexts.record\n          }\n        }, {\n          name: 'shouldExportData',\n          component: SwitchFormControlComponent,\n          isDisabled: !isPropertiesCustomizationAllowed || isAuditRecordDefinition || isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.should-export-data.label'),\n            tooltip: new Tooltip(this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.should-export-data.tooltip'))\n          }\n        }]\n      }, {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.title'),\n        controls: [{\n          name: 'recordInheritanceSelector',\n          component: RecordInheritanceEditorComponent,\n          options: {\n            recordDefinition: definitionModel,\n            isReadOnly: isOverlayMode || !isPropertiesCustomizationAllowed || isAuditRecordDefinition\n          }\n        }]\n      }, {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.search.label'),\n        controls: [{\n          name: 'enableCognitiveSearch',\n          component: SwitchFormControlComponent,\n          isDisabled: isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.enable-cognitive-search.label')\n          }\n        }, {\n          name: 'recordSearchFields',\n          component: SearchFieldEditorControlComponent,\n          options: {\n            recordDefinitionModel: definitionModel,\n            isReadOnly: !isPropertiesCustomizationAllowed || isAuditRecordDefinition || isReadOnly\n          }\n        }, ...weightedRelevancyFields]\n      }, {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.indexes.title'),\n        controls: [{\n          name: 'indexDefinitions',\n          component: RecordIndexesControlComponent,\n          options: {\n            isReadOnly: !isIndexCustomizationAllowed || isReadOnly,\n            definitionModel\n          }\n        }]\n      }, {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.display-value.title'),\n        controls: [{\n          name: 'displayFieldIdInAssociation',\n          component: SelectFormControlComponent,\n          isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.associated-display-field.title'),\n            options: definitionModel.fields.filter(field => this.rxFieldDefinitionService.canBeAssociatedDisplayField(field)).map(field => ({\n              id: field.id,\n              name: field.name\n            })).sort((a, b) => a.name.localeCompare(b.name)),\n            tooltip: new Tooltip(this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.associated-display-field.tooltip'))\n          }\n        }]\n      }, {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.auditing.title'),\n        controls: [{\n          name: 'isAuditingEnabled',\n          component: SwitchFormControlComponent,\n          isDisabled: isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.enabled.label')\n          }\n        }, {\n          name: 'auditRecordDefinitionName',\n          component: TextFormControlComponent,\n          isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.audit-record-definition-name.label')\n          }\n        }, {\n          name: 'auditSourceRecordDefinitionName',\n          component: TextFormControlComponent,\n          isDisabled: true,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.audited-from.label')\n          }\n        }]\n      }, {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.title'),\n        controls: [{\n          name: 'isArchivingEnabled',\n          component: SwitchFormControlComponent,\n          isDisabled: !isPropertiesCustomizationAllowed || isOverlayMode || isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.enabled.label')\n          }\n        }, {\n          name: 'archiveType',\n          component: SelectFormControlComponent,\n          isDisabled: !isPropertiesCustomizationAllowed || isOverlayMode || isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.audit-record-operation.label'),\n            options: archivingOptions\n          }\n        }, {\n          name: 'includeAttachments',\n          component: BooleanFormControlComponent,\n          isDisabled: !isPropertiesCustomizationAllowed || doNotArchive || isOverlayMode || isDeleteSourceRecordOperation || isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.include-attachments.label'),\n            shouldDisplayAsCheckbox: true\n          }\n        }, {\n          name: 'archiveRecordDefinitionName',\n          component: TextFormControlComponent,\n          isDisabled: !isPropertiesCustomizationAllowed || doNotArchive || isOverlayMode || isDeleteSourceRecordOperation || isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archive-record-definition-name.label')\n          }\n        }, {\n          name: 'ageQualifierInDays',\n          component: CounterFormControlComponent,\n          isDisabled: !isPropertiesCustomizationAllowed || doNotArchive || isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.record-age.label'),\n            tooltip: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.record-age.tooltip'),\n            allowIntegerOnly: true\n          }\n        }, {\n          name: 'ageQualifierFieldId',\n          component: SelectFormControlComponent,\n          isDisabled: !isPropertiesCustomizationAllowed || doNotArchive || isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.record-age-field.label'),\n            options: definitionModel.fields.filter(field => field.resourceType === RX_RECORD_DEFINITION.resourceTypes.dateTime).map(fieldDefinition => ({\n              name: fieldDefinition.name,\n              id: fieldDefinition.id\n            })).sort((a, b) => a.name.localeCompare(b.name))\n          }\n        }, {\n          name: 'archiveDescription',\n          component: TextFormControlComponent,\n          isDisabled: !isPropertiesCustomizationAllowed || doNotArchive || isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label')\n          }\n        }, {\n          name: 'archiveDataCriteria',\n          component: ExpressionFormControlComponent,\n          isDisabled: !isPropertiesCustomizationAllowed || doNotArchive || isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.record-filter.label'),\n            dataDictionary$: expressionConfigurator.getDataDictionary(RX_RECORD_DESIGNER.archiveDataCriteriaPath),\n            operators: expressionConfigurator.getOperators(RX_RECORD_DESIGNER.archiveDataCriteriaPath),\n            tooltip: new Tooltip(this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.record-filter.tooltip'))\n          }\n        }, {\n          name: 'associationsToFollowForArchive',\n          component: ArchiveAssociationsControlComponent,\n          options: {\n            definitionModel,\n            definitionModelFromDefinition,\n            bundleId,\n            isOverlayMode,\n            isReadOnly: !isPropertiesCustomizationAllowed || doNotArchive\n          }\n        }]\n      }];\n    }\n    if (definitionModel.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.join.recordDefinitionType) {\n      configs = [{\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n        controls: [{\n          name: 'name',\n          component: TextFormControlComponent,\n          isDisabled: !isNewDefinition,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n            required: true\n          }\n        }, {\n          name: 'description',\n          component: TextareaFormControlComponent,\n          isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label'),\n            rows: 3\n          }\n        }, {\n          name: 'primaryRecordDefinitionName',\n          component: RxDefinitionPickerComponent,\n          isDisabled: true,\n          options: {\n            definitionType: RxDefinitionPickerType.Record,\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.primary-record.label')\n          }\n        }, {\n          name: 'secondaryRecordDefinitionName',\n          component: RxDefinitionPickerComponent,\n          isDisabled: true,\n          options: {\n            definitionType: RxDefinitionPickerType.Record,\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.secondary-record.label')\n          }\n        }, {\n          name: 'joinType',\n          component: SelectFormControlComponent,\n          isDisabled: true,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.join-type.label'),\n            options: joinTypeOptions\n          }\n        }, {\n          name: 'joinCriteria',\n          component: ExpressionFormControlComponent,\n          isDisabled: isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.join-criteria.label'),\n            dataDictionary$: expressionConfigurator.getDataDictionary(RX_RECORD_DESIGNER.joinCriteriaPath),\n            operators: expressionConfigurator.getOperators(RX_RECORD_DESIGNER.joinCriteriaPath)\n          }\n        }, {\n          component: RxRevertCustomizationComponent,\n          options: {\n            overlayGroupId: definitionModel.overlayGroupId,\n            overlayDescriptor: definitionModel.overlayDescriptor\n          }\n        }, {\n          name: 'customizationOptions',\n          component: RecordCustomizationOptionsComponent,\n          isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n          options: {\n            definitionTypeDisplayName: this.translateService.instant('com.bmc.arsys.rx.client.record-definition.label').toLowerCase(),\n            recordDefinition: definitionModel\n          }\n        }, {\n          name: 'owner',\n          component: TextFormControlComponent,\n          isDisabled: true,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.common.owner.label')\n          }\n        }, {\n          name: 'lastUpdateTime',\n          component: TextFormControlComponent,\n          isDisabled: true,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.common.modified-date.label')\n          }\n        }, {\n          name: 'lastChangedBy',\n          component: TextFormControlComponent,\n          isDisabled: true,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.common.modified-by.label')\n          }\n        }, {\n          name: 'permissions',\n          component: RxPermissionEditorComponent,\n          isDisabled: !isPermissionsCustomizationAllowed || isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.common.permissions.label'),\n            type: RX_PERMISSION.editorContexts.record\n          }\n        }, {\n          name: 'shouldExportData',\n          component: SwitchFormControlComponent,\n          isDisabled: !isPropertiesCustomizationAllowed || isAuditRecordDefinition || isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.should-export-data.label'),\n            tooltip: new Tooltip(this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.should-export-data.tooltip'))\n          }\n        }]\n      }, {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.common.search.label'),\n        controls: [{\n          name: 'enableCognitiveSearch',\n          component: SwitchFormControlComponent,\n          isDisabled: isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.enable-cognitive-search.label')\n          }\n        }, {\n          name: 'recordSearchFields',\n          component: SearchFieldEditorControlComponent,\n          options: {\n            recordDefinitionModel: definitionModel,\n            isReadOnly: !isPropertiesCustomizationAllowed || isAuditRecordDefinition || isReadOnly\n          }\n        }, ...weightedRelevancyFields]\n      }, {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.auditing.title'),\n        controls: [{\n          name: 'isAuditingEnabled',\n          component: SwitchFormControlComponent,\n          isDisabled: isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.enabled.label')\n          }\n        }, {\n          name: 'auditRecordDefinitionName',\n          component: TextFormControlComponent,\n          isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.audit-record-definition-name.label')\n          }\n        }, {\n          name: 'auditSourceRecordDefinitionName',\n          component: TextFormControlComponent,\n          isDisabled: true,\n          options: {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.audited-from.label')\n          }\n        }]\n      }];\n    }\n    if (isOverlayMode) {\n      (_a = configs[0]) === null || _a === void 0 ? void 0 : _a.controls.splice(findIndex(configs[0].controls, {\n        name: 'shouldExportData'\n      }), 1);\n    }\n    if (isNewDefinition) {\n      (_b = configs[0]) === null || _b === void 0 ? void 0 : _b.controls.splice(findIndex(configs[0].controls, {\n        name: 'owner'\n      }), 3);\n    }\n    return configs;\n  }\n}\nRxRecordDesignerInspectorService.ɵfac = function RxRecordDesignerInspectorService_Factory(t) {\n  return new (t || RxRecordDesignerInspectorService)(i0.ɵɵinject(i3$1.RxFieldDefinitionService), i0.ɵɵinject(i2$1.RxOverlayService), i0.ɵɵinject(i2.TranslateService));\n};\nRxRecordDesignerInspectorService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxRecordDesignerInspectorService,\n  factory: RxRecordDesignerInspectorService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxRecordDesignerInspectorService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i3$1.RxFieldDefinitionService\n    }, {\n      type: i2$1.RxOverlayService\n    }, {\n      type: i2.TranslateService\n    }];\n  }, null);\n})();\nclass InheritanceIssueInfoComponent extends RxModalClass {\n  constructor(injector, activeModalRef) {\n    super(activeModalRef, injector);\n    this.injector = injector;\n    this.activeModalRef = activeModalRef;\n    this.overriddenRecordProperties = this.activeModalRef.getData().overriddenRecordProperties;\n  }\n  close(value) {\n    this.activeModalRef.close(value);\n  }\n}\nInheritanceIssueInfoComponent.ɵfac = function InheritanceIssueInfoComponent_Factory(t) {\n  return new (t || InheritanceIssueInfoComponent)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i3.ActiveModalRef));\n};\nInheritanceIssueInfoComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: InheritanceIssueInfoComponent,\n  selectors: [[\"rx-localized-character-default-value-selector\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 12,\n  vars: 10,\n  consts: [[1, \"modal-body\"], [4, \"ngIf\"], [1, \"modal-footer\"], [\"adapt-button\", \"\", \"type\", \"button\", \"btn-type\", \"primary\", \"rx-id\", \"yes-button\", 3, \"click\"], [\"adapt-button\", \"\", \"type\", \"button\", \"btn-type\", \"secondary\", \"rx-id\", \"no-button\", 3, \"click\"]],\n  template: function InheritanceIssueInfoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, InheritanceIssueInfoComponent_ng_container_1_Template, 3, 2, \"ng-container\", 1);\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 2);\n      i0.ɵɵelementStart(6, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function InheritanceIssueInfoComponent_Template_button_click_6_listener() {\n        return ctx.close(\"continue\");\n      });\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function InheritanceIssueInfoComponent_Template_button_click_9_listener() {\n        return ctx.close(\"cancel\");\n      });\n      i0.ɵɵtext(10);\n      i0.ɵɵpipe(11, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.overriddenRecordProperties);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 4, \"com.bmc.arsys.rx.client.common.continue-confirmation.message\"), \" \");\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(8, 6, \"com.bmc.arsys.rx.client.common.yes.label\"), \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(11, 8, \"com.bmc.arsys.rx.client.common.no.label\"), \" \");\n    }\n  },\n  directives: [i5.NgIf, i3.AdaptButtonComponent],\n  pipes: [i2.TranslatePipe],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InheritanceIssueInfoComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-localized-character-default-value-selector',\n      templateUrl: './inheritance-issue-info.component.html'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i3.ActiveModalRef\n    }];\n  }, null);\n})();\nclass RxRecordDesignerService {\n  constructor(rxDefinitionNameService, rxFieldDefinitionService, rxGuidService, rxOverlayService, rxRecordDefinitionService, rxLocalizationService, rxDateUtilService) {\n    this.rxDefinitionNameService = rxDefinitionNameService;\n    this.rxFieldDefinitionService = rxFieldDefinitionService;\n    this.rxGuidService = rxGuidService;\n    this.rxOverlayService = rxOverlayService;\n    this.rxRecordDefinitionService = rxRecordDefinitionService;\n    this.rxLocalizationService = rxLocalizationService;\n    this.rxDateUtilService = rxDateUtilService;\n  }\n  // Convert \"$ID$ = 'ID'\" to ${Record1.PRIMARY_RECORD_DEFINITION.ID} = ${Record2.SECONDARY_RECORD_DEFINITION.ID}\n  getJoinCriteriaExpression(joinCriteria, primaryRecordDefinitionName, secondaryRecordDefinitionName) {\n    const primaryFieldRegExp = new RegExp('\\\\$(?!NULL)([\\\\w .]+)\\\\$', 'g');\n    const secondaryFieldRegExp = new RegExp(\"'([^']+)'\", 'g');\n    return (joinCriteria || '').replace(primaryFieldRegExp, '${' + this.rxDefinitionNameService.getDisplayName(primaryRecordDefinitionName) + '.' + RX_RECORD_DEFINITION.sourceRecordTypes.primary + '.$1}').replace(secondaryFieldRegExp, '${' + this.rxDefinitionNameService.getDisplayName(secondaryRecordDefinitionName) + '.' + RX_RECORD_DEFINITION.sourceRecordTypes.secondary + '.$1}');\n  }\n  // Convert ${Record1.PRIMARY_RECORD_DEFINITION.ID} = ${Record2.SECONDARY_RECORD_DEFINITION.ID} to \"$ID$ = 'ID'\"\n  getJoinCriteriaArExpression(joinCriteria, primaryRecordDefinitionName, secondaryRecordDefinitionName) {\n    const primaryFieldRegExp = new RegExp('\\\\${' + this.rxDefinitionNameService.getDisplayName(primaryRecordDefinitionName) + '\\\\.' + RX_RECORD_DEFINITION.sourceRecordTypes.primary + '\\\\.([^}]+)}', 'g');\n    const secondaryFieldRegExp = new RegExp('\\\\${' + this.rxDefinitionNameService.getDisplayName(secondaryRecordDefinitionName) + '\\\\.' + RX_RECORD_DEFINITION.sourceRecordTypes.secondary + '\\\\.([^}]+)}', 'g');\n    return (joinCriteria || '').replace(primaryFieldRegExp, '#$1#').replace(/#/g, '$').replace(secondaryFieldRegExp, \"'$1'\");\n  }\n  getDefinitionFromDefinitionModel(model, bundleId) {\n    var _a, _b, _c;\n    return {\n      allowFieldsOverlay: model.customizationOptions.allowFieldsOverlay,\n      allowNonAdminToDeleteRecordInstances: model.allowNonAdminToDeleteRecordInstances,\n      allowIndexesOverlay: model.customizationOptions.allowIndexesOverlay,\n      allowOtherPropertiesOverlay: model.customizationOptions.allowOtherPropertiesOverlay,\n      allowPermissionsOverlay: model.customizationOptions.allowPermissionsOverlay,\n      enableCognitiveSearch: model.enableCognitiveSearch,\n      description: model.description,\n      guid: model.guid,\n      indexDefinitions: model.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType ? model.indexDefinitions.map(indexDefinitionModel => omit(indexDefinitionModel, 'isAutomaticIndex')) : undefined,\n      inheritanceDescriptor: model.recordInheritanceSelector.inheritanceDescriptor,\n      isAbstract: (_a = model.recordInheritanceSelector.inheritanceOptions) === null || _a === void 0 ? void 0 : _a.isAbstract,\n      isFinal: (_b = model.recordInheritanceSelector.inheritanceOptions) === null || _b === void 0 ? void 0 : _b.isFinal,\n      isSharedInstanceStorage: (_c = model.recordInheritanceSelector.inheritanceOptions) === null || _c === void 0 ? void 0 : _c.isSharedInstanceStorage,\n      joinCriteria: model.joinCriteria ? this.getJoinCriteriaArExpression(model.joinCriteria, model.primaryRecordDefinitionName, model.secondaryRecordDefinitionName) : undefined,\n      joinType: model.joinType,\n      lastChangedBy: model.lastChangedBy,\n      lastUpdateTime: model.lastUpdateTime ? moment(model.lastUpdateTime).format() : null,\n      name: `${bundleId}:${model.name}`,\n      overlayGroupId: model.overlayGroupId,\n      owner: model.owner,\n      overlayDescriptor: model.overlayDescriptor,\n      permissions: model.permissions,\n      primaryRecordDefinitionName: model.primaryRecordDefinitionName,\n      resourceType: model.resourceType,\n      secondaryRecordDefinitionName: model.secondaryRecordDefinitionName,\n      shouldExportData: model.shouldExportData,\n      scope: model.customizationOptions.scope,\n      tags: model.tags,\n      version: model.version,\n      weightedRelevancyFields: {\n        TITLE: model.weightedRelevancyTitle,\n        ENVIRONMENT: model.weightedRelevancyEnvironment,\n        KEYWORDS: model.weightedRelevancyKeywords\n      },\n      displayFieldIdInAssociation: find(model.fields, {\n        id: model.displayFieldIdInAssociation\n      }) ? model.displayFieldIdInAssociation : null,\n      archiveDescriptor: {\n        ageQualifierFieldId: model.ageQualifierFieldId,\n        ageQualifierInDays: model.ageQualifierInDays,\n        archiveRecordDefinitionName: model.archiveRecordDefinitionName,\n        description: model.archiveDescription,\n        archiveType: model.archiveType,\n        includeAttachments: model.includeAttachments,\n        archiveDataCriteria: model.archiveDataCriteria,\n        isEnabled: model.isArchivingEnabled\n      },\n      associationsToFollowForArchive: model.associationsToFollowForArchive,\n      auditDescriptor: {\n        isEnabled: model.isAuditingEnabled,\n        auditRecordDefinitionName: model.auditRecordDefinitionName,\n        auditDataCriteria: model.auditDataCriteria,\n        associatedAuditFieldsByAssociationName: model.associatedAuditFieldsByAssociationName\n      },\n      auditSourceRecordDefinitionName: model.auditSourceRecordDefinitionName,\n      fieldDefinitions: model.fields.map(fieldModel => {\n        var _a, _b;\n        const field = {\n          resourceType: fieldModel.resourceType,\n          lastUpdateTime: fieldModel.lastUpdateTime,\n          lastChangedBy: fieldModel.lastChangedBy,\n          owner: fieldModel.owner,\n          name: fieldModel.name,\n          tags: fieldModel.tags,\n          description: fieldModel.description,\n          overlayGroupId: fieldModel.overlayGroupId,\n          id: isNumber(fieldModel.id) ? fieldModel.id : '',\n          fieldOption: fieldModel.fieldOption,\n          permissions: fieldModel.permissions,\n          fieldTypeName: fieldModel.fieldTypeName,\n          isInherited: fieldModel.isInherited,\n          explicitPermissions: fieldModel.explicitPermissions,\n          overlayDescriptor: fieldModel.overlayDescriptor,\n          fieldMapping: fieldModel.fieldMapping,\n          allowPermissionsOverlay: fieldModel.allowPermissionsOverlay,\n          allowOtherPropertiesOverlay: fieldModel.allowOtherPropertiesOverlay,\n          auditOption: fieldModel.audit ? 'AUDIT_AND_COPY' : fieldModel.copy ? 'COPY' : null,\n          allowPermissionsEdit: fieldModel.allowPermissionsEdit,\n          maxLength: fieldModel.maxLength,\n          searchDefinition: fieldModel.searchDefinition,\n          namedListDefinition: fieldModel.namedListDefinition,\n          shouldPersistEncrypted: fieldModel.shouldPersistEncrypted,\n          shouldPersistHashed: fieldModel.shouldPersistHashed,\n          pattern: fieldModel.pattern,\n          anyUserAllowedToSubmit: fieldModel.anyUserAllowedToSubmit\n        };\n        if (fieldModel.resourceType === RX_RECORD_DEFINITION.dataTypes.localizedCharacter.resourceType) {\n          field.defaultValueByLocale = fieldModel.defaultValueByLocale;\n        } else if (fieldModel.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType) {\n          field.defaultValue = fieldModel.selectionFieldOptionProperties.defaultValue;\n          field.optionNamesById = (_a = fieldModel.selectionFieldOptionProperties) === null || _a === void 0 ? void 0 : _a.optionNamesById;\n          field.optionLabelsById = (_b = fieldModel.selectionFieldOptionProperties) === null || _b === void 0 ? void 0 : _b.optionLabelsById;\n        } else if (fieldModel.resourceType !== RX_RECORD_DEFINITION.dataTypes.attachment.resourceType) {\n          field.defaultValue = fieldModel.defaultValue;\n        }\n        return field;\n      })\n      // TODO-VM: update when new custom component in inspector config is implemented\n    };\n  }\n  getDefinitionModelFromDefinition(recordDefinition) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n    return {\n      allowNonAdminToDeleteRecordInstances: recordDefinition.allowNonAdminToDeleteRecordInstances,\n      isArchivingEnabled: (_a = recordDefinition.archiveDescriptor) === null || _a === void 0 ? void 0 : _a.isEnabled,\n      ageQualifierFieldId: (_b = recordDefinition.archiveDescriptor) === null || _b === void 0 ? void 0 : _b.ageQualifierFieldId,\n      ageQualifierInDays: (_c = recordDefinition.archiveDescriptor) === null || _c === void 0 ? void 0 : _c.ageQualifierInDays,\n      archiveRecordDefinitionName: (_d = recordDefinition.archiveDescriptor) === null || _d === void 0 ? void 0 : _d.archiveRecordDefinitionName,\n      archiveDescription: (_e = recordDefinition.archiveDescriptor) === null || _e === void 0 ? void 0 : _e.description,\n      archiveType: (_f = recordDefinition.archiveDescriptor) === null || _f === void 0 ? void 0 : _f.archiveType,\n      includeAttachments: (_g = recordDefinition.archiveDescriptor) === null || _g === void 0 ? void 0 : _g.includeAttachments,\n      archiveDataCriteria: (_h = recordDefinition.archiveDescriptor) === null || _h === void 0 ? void 0 : _h.archiveDataCriteria,\n      associationsToFollowForArchive: {\n        specificAssociationNames: ((_j = recordDefinition.associationsToFollowForArchive) === null || _j === void 0 ? void 0 : _j.specificAssociationNames) || [],\n        selectionType: ((_k = recordDefinition.associationsToFollowForArchive) === null || _k === void 0 ? void 0 : _k.selectionType) || AssociationSelectionType.FollowParent\n      },\n      isAuditingEnabled: (_l = recordDefinition.auditDescriptor) === null || _l === void 0 ? void 0 : _l.isEnabled,\n      auditRecordDefinitionName: (_m = recordDefinition.auditDescriptor) === null || _m === void 0 ? void 0 : _m.auditRecordDefinitionName,\n      auditDataCriteria: (_o = recordDefinition.auditDescriptor) === null || _o === void 0 ? void 0 : _o.auditDataCriteria,\n      associatedAuditFieldsByAssociationName: (_p = recordDefinition.auditDescriptor) === null || _p === void 0 ? void 0 : _p.associatedAuditFieldsByAssociationName,\n      auditSourceRecordDefinitionName: recordDefinition.auditSourceRecordDefinitionName,\n      customizationOptions: {\n        allowFieldsOverlay: recordDefinition.allowFieldsOverlay,\n        allowIndexesOverlay: recordDefinition.allowIndexesOverlay,\n        allowOtherPropertiesOverlay: recordDefinition.allowOtherPropertiesOverlay,\n        allowPermissionsOverlay: recordDefinition.allowPermissionsOverlay,\n        allowOverlay: false,\n        fields: recordDefinition.fieldDefinitions,\n        scope: recordDefinition.scope\n      },\n      description: recordDefinition.description,\n      displayFieldIdInAssociation: recordDefinition.displayFieldIdInAssociation,\n      enableCognitiveSearch: recordDefinition.enableCognitiveSearch,\n      fullPermissions: recordDefinition.fullPermissions,\n      guid: recordDefinition.guid || this.rxGuidService.generate(),\n      indexDefinitions: (_q = recordDefinition.indexDefinitions) === null || _q === void 0 ? void 0 : _q.map(indexDefinition => Object.assign(Object.assign({}, indexDefinition), {\n        isAutomaticIndex: this.rxRecordDefinitionService.isAutomaticIndex(indexDefinition)\n      })),\n      isAuditRecordDefinition: recordDefinition.isAuditRecordDefinition,\n      joinCriteria: this.getJoinCriteriaExpression(recordDefinition.joinCriteria, recordDefinition.primaryRecordDefinitionName, recordDefinition.secondaryRecordDefinitionName),\n      joinType: recordDefinition.joinType,\n      lastUpdateTime: recordDefinition.lastUpdateTime ? this.rxDateUtilService.formatDate(recordDefinition.lastUpdateTime, 'medium') : recordDefinition.lastUpdateTime,\n      lastChangedBy: recordDefinition.lastChangedBy,\n      localizableStringsByFieldId: recordDefinition.localizableStringsByFieldId,\n      name: this.rxDefinitionNameService.getDisplayName(recordDefinition.name),\n      overlayDescriptor: recordDefinition.overlayDescriptor,\n      overlayGroupId: recordDefinition.overlayGroupId,\n      overlayOperation: this.rxOverlayService.getOverlayOperation(recordDefinition.overlayGroupId, recordDefinition.overlayDescriptor ? recordDefinition.overlayDescriptor.parentOverlayGroupId : null),\n      owner: recordDefinition.owner,\n      permissions: recordDefinition.permissions,\n      primaryRecordDefinitionName: recordDefinition.primaryRecordDefinitionName,\n      secondaryRecordDefinitionName: recordDefinition.secondaryRecordDefinitionName,\n      recordInheritanceSelector: {\n        inheritanceDescriptor: recordDefinition.inheritanceDescriptor,\n        inheritanceOptions: {\n          isAbstract: recordDefinition.isAbstract,\n          isSharedInstanceStorage: recordDefinition.isSharedInstanceStorage,\n          isFinal: recordDefinition.isFinal\n        },\n        isInheritingCoreFields: null,\n        inheritedFieldDefinitions: []\n      },\n      recordSearchFields: recordDefinition.fieldDefinitions.filter(field => field.searchDefinition),\n      recordInstancePrefix: recordDefinition.recordInstancePrefix,\n      recordTypeName: recordDefinition.recordTypeName,\n      resourceType: recordDefinition.resourceType,\n      rowSecurityPropagations: recordDefinition.rowSecurityPropagations,\n      securityLabels: recordDefinition.securityLabels,\n      shouldExportData: recordDefinition.shouldExportData,\n      tags: recordDefinition.tags,\n      upgradeVersion: recordDefinition.upgradeVersion,\n      version: recordDefinition.version,\n      weightedRelevancyTitle: (_r = recordDefinition.weightedRelevancyFields) === null || _r === void 0 ? void 0 : _r.TITLE,\n      weightedRelevancyEnvironment: (_s = recordDefinition.weightedRelevancyFields) === null || _s === void 0 ? void 0 : _s.ENVIRONMENT,\n      weightedRelevancyKeywords: (_t = recordDefinition.weightedRelevancyFields) === null || _t === void 0 ? void 0 : _t.KEYWORDS,\n      fields: recordDefinition.fieldDefinitions.map(fieldDefinition => ({\n        allowOtherPropertiesOverlay: fieldDefinition.allowOtherPropertiesOverlay,\n        allowPermissionsEdit: fieldDefinition.allowPermissionsEdit,\n        allowPermissionsOverlay: fieldDefinition.allowPermissionsOverlay,\n        anyUserAllowedToSubmit: fieldDefinition.anyUserAllowedToSubmit,\n        audit: fieldDefinition.auditOption === 'AUDIT_AND_COPY',\n        copy: fieldDefinition.auditOption === 'AUDIT_AND_COPY' || fieldDefinition.auditOption === 'COPY',\n        defaultValue: fieldDefinition.defaultValue,\n        defaultValueByLocale: fieldDefinition.defaultValueByLocale,\n        description: fieldDefinition.description,\n        explicitPermissions: fieldDefinition.explicitPermissions,\n        fieldMapping: fieldDefinition.fieldMapping,\n        fieldOption: fieldDefinition.fieldOption,\n        fieldTypeName: fieldDefinition.fieldTypeName,\n        guid: this.rxGuidService.generate(),\n        id: isNumber(fieldDefinition.id) ? fieldDefinition.id : fieldDefinition.customId || '',\n        isCoreField: this.rxFieldDefinitionService.isCoreField(fieldDefinition),\n        isInherited: fieldDefinition.isInherited,\n        isNewField: false,\n        lastChangedBy: fieldDefinition.lastChangedBy,\n        lastUpdateTime: fieldDefinition.lastUpdateTime,\n        maxLength: fieldDefinition.maxLength,\n        maxSize: fieldDefinition.maxSize,\n        maxValue: fieldDefinition.maxValue,\n        minValue: fieldDefinition.minValue,\n        name: fieldDefinition.name,\n        overlayDescriptor: fieldDefinition.overlayDescriptor,\n        overlayGroupId: fieldDefinition.overlayGroupId,\n        owner: fieldDefinition.owner,\n        permissions: fieldDefinition.permissions,\n        precision: fieldDefinition.precision,\n        resourceType: fieldDefinition.resourceType,\n        searchDefinition: fieldDefinition.searchDefinition,\n        selectionFieldOptionProperties: {\n          defaultValue: fieldDefinition.defaultValue,\n          optionNamesById: fieldDefinition.optionNamesById,\n          optionLabelsById: fieldDefinition.optionLabelsById\n        },\n        shouldPersistEncrypted: fieldDefinition.shouldPersistEncrypted,\n        shouldPersistHashed: fieldDefinition.shouldPersistHashed,\n        namedListDefinition: fieldDefinition.namedListDefinition,\n        pattern: fieldDefinition.pattern,\n        tags: fieldDefinition.tags\n      }))\n    };\n  }\n}\nRxRecordDesignerService.ɵfac = function RxRecordDesignerService_Factory(t) {\n  return new (t || RxRecordDesignerService)(i0.ɵɵinject(i2$1.RxDefinitionNameService), i0.ɵɵinject(i3$1.RxFieldDefinitionService), i0.ɵɵinject(i1$1.RxGuidService), i0.ɵɵinject(i2$1.RxOverlayService), i0.ɵɵinject(i3$1.RxRecordDefinitionService), i0.ɵɵinject(i2$1.RxLocalizationService), i0.ɵɵinject(i1$1.RxDateUtilsService));\n};\nRxRecordDesignerService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxRecordDesignerService,\n  factory: RxRecordDesignerService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxRecordDesignerService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i2$1.RxDefinitionNameService\n    }, {\n      type: i3$1.RxFieldDefinitionService\n    }, {\n      type: i1$1.RxGuidService\n    }, {\n      type: i2$1.RxOverlayService\n    }, {\n      type: i3$1.RxRecordDefinitionService\n    }, {\n      type: i2$1.RxLocalizationService\n    }, {\n      type: i1$1.RxDateUtilsService\n    }];\n  }, null);\n})();\nclass RecordDesignerExpressionConfigurator extends RxExpressionConfigurator {\n  constructor(injector) {\n    super();\n    this.injector = injector;\n    this.rxRecordDefinitionCacheService = this.injector.get(RxRecordDefinitionCacheService);\n    this.translateService = this.injector.get(TranslateService);\n    this.commonDataDictionary$ = of([]);\n    this.generalGroup = {\n      label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n      hidden: true,\n      children: [{\n        label: 'NULL',\n        icon: 'd-icon-dollar',\n        expression: '$NULL$'\n      }]\n    };\n  }\n  getDefaultConfig() {\n    return Object.assign(Object.assign({}, super.getDefaultConfig()), {\n      operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.AllClient)\n    });\n  }\n  recordExpressionDataDictionary(definitionModel, bundleId) {\n    const data = {\n      label: this.translateService.instant('com.bmc.arsys.rx.client.common.record-definition.label'),\n      expanded: true\n    };\n    return iif(() => !!definitionModel.lastUpdateTime, this.rxRecordDefinitionCacheService.getRecordDefinition(`${bundleId}:${definitionModel.name}`).pipe(map(definition => ({\n      fields: definition.fieldDefinitions\n    }))), of(definitionModel)).pipe(map(model => {\n      data.children = model.fields.filter(field => field.resourceType !== RX_RECORD_DEFINITION.dataTypes.attachment.resourceType).map(field => ({\n        label: field.name,\n        icon: 'd-icon-arrow_right_square_input',\n        expression: `'${field.name}'`\n      }));\n      return [data, this.generalGroup];\n    }));\n  }\n}\nclass AddJoinFieldsEditorComponent extends RxModalClass {\n  constructor(translateService, rxGuidService, rxRecordDefinitionService, activeModalRef, rxDefinitionNameService, rxFieldDefinitionService, injector) {\n    super(activeModalRef, injector);\n    this.translateService = translateService;\n    this.rxGuidService = rxGuidService;\n    this.rxRecordDefinitionService = rxRecordDefinitionService;\n    this.activeModalRef = activeModalRef;\n    this.rxDefinitionNameService = rxDefinitionNameService;\n    this.rxFieldDefinitionService = rxFieldDefinitionService;\n    this.injector = injector;\n    this.notificationMessage = this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.notification.message');\n    this.destroyed$ = new ReplaySubject(1);\n    this.primaryRecordDefinitionName = this.activeModalRef.getData().primaryRecordDefinitionName;\n    this.secondaryRecordDefinitionName = this.activeModalRef.getData().secondaryRecordDefinitionName;\n    this.selectLabel = this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.select.label', {\n      primaryRecordDefinitionName: this.rxDefinitionNameService.getDisplayName(this.primaryRecordDefinitionName),\n      secondaryRecordDefinitionName: this.rxDefinitionNameService.getDisplayName(this.secondaryRecordDefinitionName)\n    });\n    this.addedPrimaryFields = this.activeModalRef.getData().addedFields.filter(field => !includes(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds, field.id) && get(field, 'fieldMapping.source') === RX_RECORD_DEFINITION.sourceRecordTypes.primary);\n    this.addedSecondaryFields = this.activeModalRef.getData().addedFields.filter(field => !includes(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds, field.id) && get(field, 'fieldMapping.source') === RX_RECORD_DEFINITION.sourceRecordTypes.secondary);\n    this.primarySelectedFieldsFormControl = new FormControl([]);\n    this.secondarySelectedFieldsFormControl = new FormControl([]);\n    this.primarySelectedFields$ = this.primarySelectedFieldsFormControl.valueChanges.pipe(startWith([]), shareReplay(1));\n    this.secondarySelectedFields$ = this.secondarySelectedFieldsFormControl.valueChanges.pipe(startWith([]));\n    this.primaryAvailableFields$ = this.rxRecordDefinitionService.get(this.primaryRecordDefinitionName, {}, true).pipe(map(recordDefinition => orderBy(this.getJoinFieldDefinitions(recordDefinition, RX_RECORD_DEFINITION.sourceRecordTypes.primary).filter(field => !includes(map$1(this.addedPrimaryFields, this.getSourceFieldId), this.getSourceFieldId(field))), ['name'], ['asc'])));\n    this.secondaryAvailableFields$ = this.rxRecordDefinitionService.get(this.secondaryRecordDefinitionName, {}, true).pipe(map(recordDefinition => orderBy(this.getJoinFieldDefinitions(recordDefinition, RX_RECORD_DEFINITION.sourceRecordTypes.secondary).filter(field => !includes(map$1(this.addedSecondaryFields, this.getSourceFieldId), this.getSourceFieldId(field))), ['name'], ['asc'])));\n    this.duplicateNames$ = combineLatest([this.primarySelectedFields$, this.secondarySelectedFields$]).pipe(map(([primarySelectedFields, secondarySelectedFields]) => {\n      const selectedPrimaryFieldNames = [...map$1(primarySelectedFields, 'name'), ...map$1(this.addedPrimaryFields, 'name')];\n      const selectedSecondaryFieldNames = [...map$1(secondarySelectedFields, 'name'), ...map$1(this.addedSecondaryFields, 'name')];\n      return intersection(selectedPrimaryFieldNames, selectedSecondaryFieldNames).concat(intersection(map$1(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFields, 'name'), selectedPrimaryFieldNames.concat(selectedSecondaryFieldNames)));\n    }), shareReplay(1));\n    this.hasDuplicates$ = this.duplicateNames$.pipe(map(duplicateNames => !!duplicateNames.length));\n    this.selectedFields$ = combineLatest([this.primarySelectedFields$, this.secondarySelectedFields$, this.duplicateNames$]).pipe(map(([primarySelectedFields, secondarySelectedFields, duplicateNames]) => {\n      const nonRetainableFieldIds = chain(primarySelectedFields).concat(secondarySelectedFields).map('fieldMapping.sourceFieldId').filter((fieldId, index, selectedFieldIds) => includes(selectedFieldIds, fieldId, index + 1)).value();\n      return concat(primarySelectedFields, secondarySelectedFields).filter(fieldDefinition => this.rxFieldDefinitionService.isJoinedField(fieldDefinition)).map(fieldDefinition => {\n        const field = cloneDeep(fieldDefinition);\n        if (includes(duplicateNames, field.name)) {\n          if (field.fieldMapping.source === RX_RECORD_DEFINITION.sourceRecordTypes.primary) {\n            field.name = `${field.name} - ${this.rxDefinitionNameService.getDisplayName(this.primaryRecordDefinitionName)}`;\n          } else {\n            field.name = `${field.name} - ${this.rxDefinitionNameService.getDisplayName(this.secondaryRecordDefinitionName)}`;\n          }\n        }\n        if (!includes(nonRetainableFieldIds, field.fieldMapping.sourceFieldId)) {\n          field.customId = field.fieldMapping.sourceFieldId;\n        }\n        return field;\n      });\n    }), shareReplay(1));\n    this.vm$ = combineLatest([this.primaryAvailableFields$, this.secondaryAvailableFields$, this.hasDuplicates$, this.selectedFields$]).pipe(map(([primaryAvailableFields, secondaryAvailableFields, hasDuplicates, selectedFields]) => ({\n      primaryAvailableFields,\n      secondaryAvailableFields,\n      hasDuplicates,\n      selectedFields\n    })));\n    this.alertConfig = {\n      content: this.notificationMessage,\n      variant: 'info',\n      type: 'inline',\n      dismissible: false\n    };\n    this.selectTexts = {\n      headerText: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.select.header.label'),\n      numberOptionsText: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.select.fields.label'),\n      checked: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.select.selected.label'),\n      searchPlaceholder: this.translateService.instant('com.bmc.arsys.rx.client.common.search.label')\n    };\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.selectedFields$.pipe(takeUntil(this.destroyed$)).subscribe(selectedFields => this.selectedFields = selectedFields);\n  }\n  save() {\n    this.activeModalRef.close(this.selectedFields);\n  }\n  cancel() {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n  optionFormatter(field) {\n    return field.name;\n  }\n  getSourceFieldId(field) {\n    return field.fieldMapping.sourceFieldId;\n  }\n  getJoinFieldDefinitions(record, sourceType) {\n    return map$1(record === null || record === void 0 ? void 0 : record.fieldDefinitions, fieldDefinition => {\n      const joinFieldDefinition = cloneDeep(fieldDefinition);\n      joinFieldDefinition.fieldMapping = {\n        resourceType: RX_RECORD_DEFINITION.joinFieldMapping,\n        sourceFieldId: fieldDefinition.id,\n        source: sourceType\n      };\n      joinFieldDefinition.id = this.rxGuidService.generate('rx-');\n      // Join record should not carry forward FTS properties from primary and secondary record.\n      if (joinFieldDefinition.searchDefinition) {\n        joinFieldDefinition.searchDefinition = null;\n      }\n      delete joinFieldDefinition.lastUpdateTime;\n      return joinFieldDefinition;\n    });\n  }\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n}\nAddJoinFieldsEditorComponent.ɵfac = function AddJoinFieldsEditorComponent_Factory(t) {\n  return new (t || AddJoinFieldsEditorComponent)(i0.ɵɵdirectiveInject(i2.TranslateService), i0.ɵɵdirectiveInject(i1$1.RxGuidService), i0.ɵɵdirectiveInject(i3$1.RxRecordDefinitionService), i0.ɵɵdirectiveInject(i3.ActiveModalRef), i0.ɵɵdirectiveInject(i2$1.RxDefinitionNameService), i0.ɵɵdirectiveInject(i3$1.RxFieldDefinitionService), i0.ɵɵdirectiveInject(i0.Injector));\n};\nAddJoinFieldsEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AddJoinFieldsEditorComponent,\n  selectors: [[\"rx-add-join-fields-editor\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [1, \"modal-body\", \"d-flex\", \"flex-column\", \"mh-100\"], [\"class\", \"mb-3\", 3, \"config\", 4, \"ngIf\"], [1, \"d-flex\", \"flex-row\", \"select-container\"], [\"rx-id\", \"primary-fields\", \"class\", \"d-flex flex-column h-100\", \"enableFilter\", \"true\", 3, \"inline\", \"multiple\", \"options\", \"optionFormatter\", \"selectAllButton\", \"deselectAllButton\", \"texts\", \"popupMaxHeight\", \"formControl\", \"label\", 4, \"ngIf\"], [\"rx-id\", \"secondary-fields\", \"class\", \"ml-3 d-flex flex-column h-100\", \"enableFilter\", \"true\", 3, \"inline\", \"multiple\", \"options\", \"optionFormatter\", \"selectAllButton\", \"deselectAllButton\", \"texts\", \"popupMaxHeight\", \"formControl\", \"label\", 4, \"ngIf\"], [1, \"modal-footer\"], [\"adapt-button\", \"\", \"type\", \"button\", \"btn-type\", \"primary\", \"rx-id\", \"save-button\", 3, \"disabled\", \"click\"], [\"adapt-button\", \"\", \"type\", \"button\", \"btn-type\", \"secondary\", \"rx-id\", \"cancel-button\", 3, \"click\"], [1, \"mb-3\", 3, \"config\"], [\"rx-id\", \"primary-fields\", \"enableFilter\", \"true\", 1, \"d-flex\", \"flex-column\", \"h-100\", 3, \"inline\", \"multiple\", \"options\", \"optionFormatter\", \"selectAllButton\", \"deselectAllButton\", \"texts\", \"popupMaxHeight\", \"formControl\", \"label\"], [\"rx-id\", \"secondary-fields\", \"enableFilter\", \"true\", 1, \"ml-3\", \"d-flex\", \"flex-column\", \"h-100\", 3, \"inline\", \"multiple\", \"options\", \"optionFormatter\", \"selectAllButton\", \"deselectAllButton\", \"texts\", \"popupMaxHeight\", \"formControl\", \"label\"]],\n  template: function AddJoinFieldsEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AddJoinFieldsEditorComponent_ng_container_0_Template, 16, 11, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.vm$));\n    }\n  },\n  directives: [i5.NgIf, i3.AdaptButtonComponent, i3.AdaptAlertComponent, i3.AdaptRxSelectComponent, i6.NgControlStatus, i6.FormControlDirective],\n  pipes: [i5.AsyncPipe, i2.TranslatePipe],\n  styles: [\"[_ngcontent-%COMP%]:root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}[_nghost-%COMP%]{display:flex;flex-direction:column;position:relative;height:100%}[_nghost-%COMP%]   .modal-body[_ngcontent-%COMP%]{height:645px!important}[_nghost-%COMP%]     adapt-rx-select{width:100%;max-width:400px}[_nghost-%COMP%]     adapt-rx-select .rx-select__options-wrapper{flex:1 1 auto;overflow-y:auto;overflow-x:hidden;height:625px}.select-container[_ngcontent-%COMP%]{overflow:auto}\"],\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AddJoinFieldsEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-add-join-fields-editor',\n      templateUrl: './add-join-fields-editor.component.html',\n      styleUrls: ['./add-join-fields-editor.component.scss'],\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i2.TranslateService\n    }, {\n      type: i1$1.RxGuidService\n    }, {\n      type: i3$1.RxRecordDefinitionService\n    }, {\n      type: i3.ActiveModalRef\n    }, {\n      type: i2$1.RxDefinitionNameService\n    }, {\n      type: i3$1.RxFieldDefinitionService\n    }, {\n      type: i0.Injector\n    }];\n  }, null);\n})();\nclass RecordDesignerComponent {\n  constructor(store$, rxNotificationService, rxOverlayService, rxRecordDefinitionValidatorService, rxRecordDesignerInspectorService, rxDefinitionNameService, rxFieldDefinitionManagerService, rxRecordDefinitionService, rxGlobalCacheService, translateService, datePipe, rxModalService, rxFieldDefinitionService, rxRecordDesignerService, rxExpressionEditorService, rxRecordDefinitionCacheService, rxGuidService, injector) {\n    this.store$ = store$;\n    this.rxNotificationService = rxNotificationService;\n    this.rxOverlayService = rxOverlayService;\n    this.rxRecordDefinitionValidatorService = rxRecordDefinitionValidatorService;\n    this.rxRecordDesignerInspectorService = rxRecordDesignerInspectorService;\n    this.rxDefinitionNameService = rxDefinitionNameService;\n    this.rxFieldDefinitionManagerService = rxFieldDefinitionManagerService;\n    this.rxRecordDefinitionService = rxRecordDefinitionService;\n    this.rxGlobalCacheService = rxGlobalCacheService;\n    this.translateService = translateService;\n    this.datePipe = datePipe;\n    this.rxModalService = rxModalService;\n    this.rxFieldDefinitionService = rxFieldDefinitionService;\n    this.rxRecordDesignerService = rxRecordDesignerService;\n    this.rxExpressionEditorService = rxExpressionEditorService;\n    this.rxRecordDefinitionCacheService = rxRecordDefinitionCacheService;\n    this.rxGuidService = rxGuidService;\n    this.injector = injector;\n    this.definitionSaved = new EventEmitter();\n    this.definitionErrorLoading = new EventEmitter();\n    this.closeDesigner = new EventEmitter();\n    this.newTitle = `<${this.translateService.instant('com.bmc.arsys.rx.client.record-designer.new-record.title')}>`;\n    this.definition = null;\n    this.isInheritColumnHidden = true;\n    this.isJoinRecordDefinition = false;\n    this.dataTypes = [RX_RECORD_DEFINITION.dataTypes.attachment, RX_RECORD_DEFINITION.dataTypes.boolean, RX_RECORD_DEFINITION.dataTypes.character, RX_RECORD_DEFINITION.dataTypes.dateOnly, RX_RECORD_DEFINITION.dataTypes.dateTime, RX_RECORD_DEFINITION.dataTypes.localizedCharacter, RX_RECORD_DEFINITION.dataTypes.timeOnly, RX_RECORD_DEFINITION.dataTypes.integer, RX_RECORD_DEFINITION.dataTypes.selection, RX_RECORD_DEFINITION.dataTypes.decimal, RX_RECORD_DEFINITION.dataTypes.real].sort((a, b) => a.displayName.localeCompare(b.displayName));\n    this.inspectorTabIndexSubject = new Subject();\n    this.inspectorTabIndex$ = this.store$.select(inspectorTabIndexSelector);\n    this.selectedFieldGuid$ = this.store$.select(selectedFieldGuidSelector);\n    this.destroyed$ = new ReplaySubject(1);\n    this.inspectorFocusEditorSubject = new Subject();\n    this.inspectorFocusEditor$ = this.inspectorFocusEditorSubject.asObservable();\n    this.bundleId$ = this.store$.select(bundleIdSelector);\n    this.isDesignMode$ = this.store$.select(isDesignModeSelector);\n    this.definitionModel$ = this.store$.select(definitionModelSelector);\n    this.isDirty$ = this.store$.select(isDirtySelector);\n    this.bundleFriendlyName$ = this.bundleId$.pipe(switchMap(bundleId => this.rxGlobalCacheService.getBundleFriendlyName(bundleId)));\n    this.definitionDisplayName$ = this.definitionModel$.pipe(map(updatedModel => this.rxDefinitionNameService.getDisplayName(updatedModel.name)), startWith(null));\n    this.definitionModelFromDefinition$ = this.store$.select(definitionModelFromDefinitionSelector).pipe(shareReplay(1));\n    this.primaryRecordDefinition$ = this.definitionModelFromDefinition$.pipe(pluck('primaryRecordDefinitionName'), distinctUntilChanged(), filter(Boolean), switchMap(primaryRecordDefinitionName => this.rxRecordDefinitionCacheService.getRecordDefinition(primaryRecordDefinitionName)));\n    this.secondaryRecordDefinition$ = this.definitionModelFromDefinition$.pipe(pluck('secondaryRecordDefinitionName'), distinctUntilChanged(), filter(Boolean), switchMap(secondaryRecordDefinitionName => this.rxRecordDefinitionCacheService.getRecordDefinition(secondaryRecordDefinitionName)));\n    this.joinRecordDataDictionary$ = combineLatest([this.primaryRecordDefinition$, this.secondaryRecordDefinition$]).pipe(map(([primaryRecordDefinition, secondaryRecordDefinition]) => [{\n      recordDefinitionName: this.rxDefinitionNameService.getDisplayName(primaryRecordDefinition.name),\n      label: `(${this.translateService.instant('com.bmc.arsys.rx.innovation-studio.join-record-wizard.join-criteria.primary.label')})`,\n      type: RX_RECORD_DEFINITION.sourceRecordTypes.primary,\n      fieldDefinitions: primaryRecordDefinition.fieldDefinitions\n    }, {\n      recordDefinitionName: this.rxDefinitionNameService.getDisplayName(secondaryRecordDefinition.name),\n      label: `(${this.translateService.instant('com.bmc.arsys.rx.innovation-studio.join-record-wizard.join-criteria.secondary.label')})`,\n      type: RX_RECORD_DEFINITION.sourceRecordTypes.secondary,\n      fieldDefinitions: secondaryRecordDefinition.fieldDefinitions\n    }]), map(records => {\n      return records.map(record => ({\n        label: `${record.recordDefinitionName} ${record.label}`,\n        expanded: true,\n        children: chain(record.fieldDefinitions).map(fieldDefinition => {\n          if (fieldDefinition.resourceType !== RX_RECORD_DEFINITION.dataTypes.attachment.resourceType) {\n            return {\n              label: `${record.recordDefinitionName}.${fieldDefinition.name}`,\n              icon: 'd-icon-field_text',\n              expression: `\\${${record.recordDefinitionName}.${record.type}.${fieldDefinition.name}}`\n            };\n          }\n        }).compact().sortBy(item => item.label.toLocaleLowerCase()).value()\n      }));\n    }));\n    this.isNewDefinition$ = this.definitionModelFromDefinition$.pipe(map(definitionModel => !Boolean(definitionModel.lastUpdateTime)));\n    this.isJoinRecordDefinition$ = this.definitionModelFromDefinition$.pipe(map(definitionModel => this.rxRecordDefinitionService.isJoinRecord(definitionModel)), shareReplay(1));\n    this.definitionFromDefinitionModel$ = combineLatest([this.definitionModel$, this.bundleId$]).pipe(map(([definitionModel, bundleId]) => this.rxRecordDesignerService.getDefinitionFromDefinitionModel(definitionModel, bundleId)));\n    this.isFieldsCustomizationAllowed$ = this.definitionFromDefinitionModel$.pipe(map(recordDefinition => this.rxOverlayService.isCustomizationEnabled('allowFieldsOverlay', recordDefinition)), distinctUntilChanged(), shareReplay(1));\n    this.isPropertiesCustomizationAllowed$ = this.definitionFromDefinitionModel$.pipe(map(recordDefinition => this.rxOverlayService.isCustomizationEnabled('allowOtherPropertiesOverlay', recordDefinition)), distinctUntilChanged(), shareReplay(1));\n    this.isPermissionsCustomizationAllowed$ = this.definitionFromDefinitionModel$.pipe(map(recordDefinition => this.rxOverlayService.isCustomizationEnabled('allowPermissionsOverlay', recordDefinition)), distinctUntilChanged(), shareReplay(1));\n    this.isIndexCustomizationAllowed$ = this.definitionFromDefinitionModel$.pipe(map(recordDefinition => this.rxOverlayService.isCustomizationEnabled('allowIndexesOverlay', recordDefinition)), distinctUntilChanged(), shareReplay(1));\n    this.areNewDefinitionsAllowed$ = this.bundleId$.pipe(switchMap(bundleId => this.rxOverlayService.areNewDefinitionsAllowed(bundleId)));\n    this.isReadOnly$ = this.definitionFromDefinitionModel$.pipe(filter(definition => !!definition.lastUpdateTime), withLatestFrom(this.areNewDefinitionsAllowed$, this.isFieldsCustomizationAllowed$, this.isPropertiesCustomizationAllowed$, this.isPermissionsCustomizationAllowed$, this.isIndexCustomizationAllowed$), map(([definition, areNewDefinitionsAllowed, isFieldsCustomizationAllowed, isPropertiesCustomizationAllowed, isPermissionsCustomizationAllowed, isIndexCustomizationAllowed]) => !areNewDefinitionsAllowed || !isFieldsCustomizationAllowed && !isPropertiesCustomizationAllowed && !isPermissionsCustomizationAllowed && !isIndexCustomizationAllowed), tap(isReadOnly => {\n      if (isReadOnly) {\n        this.rxNotificationService.addWarningMessage(this.translateService.instant('com.bmc.arsys.rx.client.designer.read-only-definition-warning.message'));\n      }\n    }), startWith(false), shareReplay(1));\n    this.definitionInspectorConfig$ = combineLatest([this.isNewDefinition$, this.definitionModel$, this.definitionModelFromDefinition$, this.bundleId$, this.isPropertiesCustomizationAllowed$, this.isIndexCustomizationAllowed$, this.isPermissionsCustomizationAllowed$, this.isFieldsCustomizationAllowed$, this.isReadOnly$]).pipe(map(([isNewDefinition, definitionModel, definitionModelFromDefinition, bundleId, isPropertiesCustomizationAllowed, isIndexCustomizationAllowed, isPermissionsCustomizationAllowed, isFieldsCustomizationAllowed, isReadOnly]) => this.rxRecordDesignerInspectorService.getDefinitionInspectorConfig(isNewDefinition, definitionModel, definitionModelFromDefinition, bundleId, isPropertiesCustomizationAllowed, isIndexCustomizationAllowed, isPermissionsCustomizationAllowed, isFieldsCustomizationAllowed, isReadOnly, this.expressionConfigurator)));\n    this.fieldGridRows$ = this.definitionModel$.pipe(map(model => model.fields.map(field => {\n      var _a, _b;\n      const invertedSourceRecordTypes = invert(RX_RECORD_DEFINITION.sourceRecordTypes);\n      const type = invertedSourceRecordTypes[(_a = field.fieldMapping) === null || _a === void 0 ? void 0 : _a.source];\n      return {\n        guid: field.guid,\n        name: field.name,\n        id: isNumber(field.id) ? field.id : '',\n        isInherited: field.isInherited,\n        fieldOption: field.fieldOption,\n        defaultValue: field.resourceType === RX_RECORD_DEFINITION.resourceTypes.selection ? (_b = field.selectionFieldOptionProperties.optionNamesById) === null || _b === void 0 ? void 0 : _b[field.selectionFieldOptionProperties.defaultValue] : field.resourceType === RX_RECORD_DEFINITION.resourceTypes.dateOnly ? this.datePipe.transform(field.defaultValue) : field.resourceType === RX_RECORD_DEFINITION.resourceTypes.dateTime ? this.datePipe.transform(field.defaultValue, 'medium') : field.defaultValue,\n        resourceType: this.translateService.instant(find(RX_RECORD_DEFINITION.dataTypes, {\n          resourceType: field.resourceType\n        }).labelKey),\n        isCoreField: this.rxFieldDefinitionService.isCoreField(field),\n        sourceRecord: includes(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds, field.id) ? '' : this.translateService.instant('com.bmc.arsys.rx.client.record-designer.grid.column.source-record.label', {\n          recordName: this.rxDefinitionNameService.getDisplayName(model[type + 'RecordDefinitionName']),\n          recordType: capitalize(type)\n        })\n      };\n    })));\n    this.isExternalRecordDefinition$ = this.definitionModel$.pipe(map(definitionModel => this.rxRecordDefinitionService.isExternalRecord(definitionModel)));\n    this.selectedFieldGridRows$ = this.selectedFieldGuid$.pipe(withLatestFrom(this.fieldGridRows$), map(([guid, fieldGridRows]) => guid ? [find(fieldGridRows, {\n      guid\n    })] : []), startWith([]));\n    this.selectedFieldModel$ = combineLatest([this.selectedFieldGuid$, this.definitionModel$]).pipe(map(([guid, definitionModel]) => find(definitionModel.fields, {\n      guid\n    })), startWith(null), shareReplay(1));\n    this.selectedFieldInspectorConfig$ = this.selectedFieldModel$.pipe(withLatestFrom(this.definitionModel$, this.isReadOnly$), map(([fieldModel, definitionModel, isReadOnly]) => fieldModel ? this.rxFieldDefinitionManagerService.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) : null));\n    this.isJoinOrExternalRecord$ = combineLatest([this.isJoinRecordDefinition$, this.isExternalRecordDefinition$]).pipe(map(([isJoinRecordDefinition, isExternalRecordDefinition]) => isJoinRecordDefinition || isExternalRecordDefinition));\n    this.validationIssues$ = this.definitionModel$.pipe(map(definitionModel => this.rxRecordDefinitionValidatorService.validate(definitionModel)));\n    this.hasValidationErrors$ = this.validationIssues$.pipe(map(issueSections => some(issueSections, {\n      issues: [{\n        type: ValidationIssueType.Error\n      }]\n    })), distinctUntilChanged());\n    this.hasValidationWarnings$ = this.validationIssues$.pipe(map(issueSections => some(issueSections, {\n      issues: [{\n        type: ValidationIssueType.Warning\n      }]\n    })), distinctUntilChanged());\n    this.isSaveButtonDisabled$ = combineLatest([this.hasValidationErrors$, this.isDirty$, this.isReadOnly$]).pipe(map(([hasValidationErrors, isDirty, isReadOnly]) => hasValidationErrors || !isDirty || isReadOnly), startWith(true));\n    this.breadcrumbItems$ = combineLatest([this.definitionDisplayName$, this.selectedFieldModel$]).pipe(map(([definitionDisplayName, selectedFieldModel]) => {\n      var _a;\n      return [{\n        data: null,\n        label: this.rxDefinitionNameService.getDisplayName((_a = this.definition) === null || _a === void 0 ? void 0 : _a.name) || definitionDisplayName || this.newTitle\n      }, {\n        data: null,\n        label: selectedFieldModel === null || selectedFieldModel === void 0 ? void 0 : selectedFieldModel.name\n      }].filter(item => item.label);\n    }));\n    this.definitionForJsonViewer$ = this.isDesignMode$.pipe(switchMap(isDesignMode => isDesignMode ? of(null) : this.definitionFromDefinitionModel$));\n    this.overriddenRecordProperties$ = combineLatest([this.definitionModelFromDefinition$, this.definitionModel$]).pipe(scan((acc, [definitionModelFromDefinition, definitionModel]) => {\n      const overriddenRecordFields = intersectionBy(definitionModelFromDefinition.fields, definitionModel.recordInheritanceSelector.inheritedFieldDefinitions, 'id');\n      acc = Object.assign(Object.assign({}, acc), {\n        fields: map$1(overriddenRecordFields, 'name').join(', ')\n      });\n      return acc;\n    }, {}));\n    this.isDeleteFieldButtonDisabled$ = this.selectedFieldModel$.pipe(withLatestFrom(this.definitionModel$), map(([selectedFieldModel, definitionModel]) => !selectedFieldModel || definitionModel.isAuditRecordDefinition || this.rxFieldDefinitionService.isCoreField(selectedFieldModel) || selectedFieldModel.isInherited || !this.rxFieldDefinitionService.isFieldInUserOverlay(selectedFieldModel)));\n    this.isCopyFieldButtonDisabled$ = this.selectedFieldModel$.pipe(withLatestFrom(this.isFieldsCustomizationAllowed$, this.bundleId$), map(([selectedFieldModel, isFieldsCustomizationAllowed, bundleId]) => !selectedFieldModel || this.rxFieldDefinitionService.isCoreField(selectedFieldModel) || selectedFieldModel.isInherited || !isFieldsCustomizationAllowed || !this.rxOverlayService.isBundleEditable(bundleId)));\n    this.expressionConfigurator = new RecordDesignerExpressionConfigurator(this.injector);\n    this.dataDictionary$ = this.definitionModelFromDefinition$.pipe(withLatestFrom(this.store$.select(bundleIdSelector)), takeUntil(this.destroyed$), switchMap(([definitionModel, bundleId]) => this.expressionConfigurator.recordExpressionDataDictionary(definitionModel, bundleId)));\n    this.isInheritColumnHidden$ = this.definitionModel$.pipe(map(definitionModel => {\n      var _a;\n      return isEmpty((_a = definitionModel.recordInheritanceSelector) === null || _a === void 0 ? void 0 : _a.inheritedFieldDefinitions);\n    }), distinctUntilChanged(), startWith(true));\n    this.vm$ = combineLatest([this.breadcrumbItems$, this.bundleFriendlyName$, this.definitionDisplayName$, this.definitionInspectorConfig$, this.definitionModel$, this.hasValidationErrors$, this.hasValidationWarnings$, this.validationIssues$, this.isSaveButtonDisabled$, this.fieldGridRows$, this.selectedFieldGridRows$, this.definitionForJsonViewer$, this.isDesignMode$, this.selectedFieldModel$, this.selectedFieldInspectorConfig$, this.selectedFieldGuid$, this.isFieldsCustomizationAllowed$, this.isDeleteFieldButtonDisabled$, this.isCopyFieldButtonDisabled$, this.isJoinOrExternalRecord$, this.isReadOnly$]).pipe(map(([breadcrumbItems, bundleFriendlyName, definitionDisplayName, definitionInspectorConfig, definitionModel, hasValidationErrors, hasValidationWarnings, validationIssues, isSaveButtonDisabled, fieldGridRows, selectedFieldGridRows, definitionForJsonViewer, isDesignMode, selectedFieldModel, selectedFieldInspectorConfig, selectedFieldGuid, isFieldsCustomizationAllowed, isDeleteFieldButtonDisabled, isCopyFieldButtonDisabled, isJoinOrExternalRecord, isReadOnly]) => ({\n      breadcrumbItems,\n      bundleFriendlyName,\n      definitionDisplayName,\n      definitionInspectorConfig,\n      definitionModel,\n      hasValidationErrors,\n      hasValidationWarnings,\n      validationIssues,\n      isSaveButtonDisabled,\n      fieldGridRows,\n      selectedFieldGridRows,\n      definitionForJsonViewer,\n      isDesignMode,\n      selectedFieldModel,\n      selectedFieldInspectorConfig,\n      selectedFieldGuid,\n      isFieldsCustomizationAllowed,\n      isDeleteFieldButtonDisabled,\n      isCopyFieldButtonDisabled,\n      isJoinOrExternalRecord,\n      isReadOnly\n    })));\n    this.rxRecordDefinitionCacheService.registerConsumer(this.destroyed$);\n  }\n  ngOnInit() {\n    this.inspectorTabIndex$.pipe(skip(1), takeUntil(this.destroyed$)).subscribe(inspectorTabIndex => {\n      if (!isNull(inspectorTabIndex)) {\n        this.adaptSidebarComponent.openPanel(inspectorTabIndex);\n      }\n    });\n    this.inspectorTabIndexSubject.pipe(skip(1), takeUntil(this.destroyed$)).subscribe(inspectorTabIndex => {\n      this.store$.dispatch(setInspectorTabIndex({\n        inspectorTabIndex\n      }));\n    });\n    this.store$.select(savedDefinitionNameSelector).pipe(skip(1), takeUntil(this.destroyed$)).subscribe(savedDefinitionName => {\n      this.definitionSaved.emit(savedDefinitionName);\n    });\n    this.expressionConfigurator.configureForProperty({\n      propertyPath: RX_RECORD_DESIGNER.archiveDataCriteriaPath,\n      dataDictionary$: this.dataDictionary$,\n      operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.All)\n    });\n    this.expressionConfigurator.configureForProperty({\n      propertyPath: RX_RECORD_DESIGNER.joinCriteriaPath,\n      dataDictionary$: this.joinRecordDataDictionary$,\n      operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.All)\n    });\n    combineLatest([this.isInheritColumnHidden$, this.isJoinRecordDefinition$]).pipe(takeUntil(this.destroyed$)).subscribe(([isInheritColumnHidden, isJoinRecordDefinition]) => {\n      this.isInheritColumnHidden = isInheritColumnHidden;\n      this.isJoinRecordDefinition = isJoinRecordDefinition;\n    });\n    this.columns = [{\n      field: 'name',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label')\n    }, {\n      field: 'sourceRecord',\n      header: this.translateService.instant('Source Record'),\n      hidden: () => !this.isJoinRecordDefinition\n    }, {\n      field: 'id',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.common.field-id.label')\n    }, {\n      field: 'isInherited',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.grid.column.inherited.title'),\n      hidden: () => this.isInheritColumnHidden,\n      cellTemplate: this.inheritedCellTemplate\n    }, {\n      field: 'resourceType',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.grid.column.data-type.title'),\n      cellTemplate: this.dataTypeCellTemplate\n    }, {\n      field: 'fieldOption',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.grid.column.is-required-field.title'),\n      cellTemplate: this.requiredCellTemplate\n    }, {\n      field: 'defaultValue',\n      header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.grid.column.default-value.title')\n    }];\n  }\n  ngOnChanges(changes) {\n    if (changes.configuration.currentValue) {\n      this.store$.dispatch(init({\n        payload: this.configuration\n      }));\n    }\n  }\n  onEditorEvent(event) {\n    if (event.type === RX_EXPRESSION_EDITOR.events.openExpressionEditor && event.payload.propertyPath === RX_RECORD_DESIGNER.archiveDataCriteriaPath) {\n      this.definitionModel$.pipe(take(1)).subscribe(definitionModel => {\n        this.rxExpressionEditorService.openEditor({\n          property: {\n            path: RX_RECORD_DESIGNER.archiveDataCriteriaPath,\n            value: definitionModel.archiveDataCriteria,\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.record-filter.label')\n          },\n          isReadOnly: event.payload.isReadOnly,\n          expressionConfigurator: this.expressionConfigurator,\n          legend: [{\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.field-name.label'),\n            icon: 'd-icon-arrow_right_square_input'\n          }]\n        }).subscribe(expression => {\n          this.store$.dispatch(updateDefinitionModelFromDesigner({\n            definitionModelFromDesigner: {\n              archiveDataCriteria: expression.value\n            }\n          }));\n        });\n      });\n    }\n    if (event.type === RX_EXPRESSION_EDITOR.events.openExpressionEditor && event.payload.propertyPath === RX_RECORD_DESIGNER.joinCriteriaPath) {\n      this.definitionModel$.pipe(take(1)).subscribe(definitionModel => {\n        this.rxExpressionEditorService.openEditor({\n          property: {\n            path: RX_RECORD_DESIGNER.joinCriteriaPath,\n            value: definitionModel.joinCriteria,\n            label: this.translateService.instant('com.bmc.arsys.rx.innovation-studio.join-record-wizard.join-criteria.on-statement.label')\n          },\n          isReadOnly: event.payload.isReadOnly,\n          expressionConfigurator: this.expressionConfigurator,\n          legend: [{\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.field-name.label'),\n            icon: 'd-icon-arrow_right_square_input'\n          }]\n        }).subscribe(expression => {\n          this.store$.dispatch(updateDefinitionModelFromDesigner({\n            definitionModelFromDesigner: {\n              joinCriteria: expression.value\n            }\n          }));\n        });\n      });\n    }\n  }\n  onSelectionChange(selectedFieldModel) {\n    this.store$.dispatch(setSelectedFieldGuid({\n      guid: selectedFieldModel === null || selectedFieldModel === void 0 ? void 0 : selectedFieldModel.guid\n    }));\n  }\n  onDefinitionModelChange(newDefinitionModel) {\n    this.store$.dispatch(updateDefinitionModelFromDesigner({\n      definitionModelFromDesigner: newDefinitionModel\n    }));\n  }\n  onSelectedFieldModelChange(newSelectedFieldModel) {\n    this.store$.dispatch(updateSelectedFieldModel({\n      selectedFieldModel: newSelectedFieldModel\n    }));\n  }\n  toggleDesignMode() {\n    this.store$.dispatch(toggleDesignMode());\n  }\n  onSidebarToggle(event) {\n    this.inspectorTabIndexSubject.next(event.id);\n  }\n  addNewField(resourceType) {\n    this.store$.dispatch(createNewFieldModel({\n      resourceType: resourceType\n    }));\n  }\n  openAddNewField() {\n    this.definitionModel$.pipe(take(1)).subscribe(definitionModel => {\n      this.rxModalService.openModal({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.add-fields.title'),\n        content: AddJoinFieldsEditorComponent,\n        size: 'rx-md',\n        blockKeyboard: false,\n        data: {\n          primaryRecordDefinitionName: definitionModel.primaryRecordDefinitionName,\n          secondaryRecordDefinitionName: definitionModel.secondaryRecordDefinitionName,\n          addedFields: definitionModel.fields\n        }\n      }).then(fieldModels => {\n        const newFieldModels = fieldModels.map(newField => Object.assign(Object.assign({}, newField), {\n          guid: this.rxGuidService.generate(),\n          id: null,\n          defaultValueByLocale: {},\n          selectionFieldOptionProperties: newField.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType ? {\n            defaultValue: newField.defaultValue,\n            optionNamesById: newField.optionNamesById,\n            optionLabelsById: newField.optionLabelsById\n          } : null\n        }));\n        this.store$.dispatch(addNewFieldModels({\n          newFieldModels: newFieldModels\n        }));\n      }).catch(noop);\n    });\n  }\n  copySelectedField() {\n    this.store$.dispatch(copySelectedField());\n  }\n  deleteSelectedField() {\n    this.store$.dispatch(deleteSelectedField());\n  }\n  onBreadcrumbSelected() {\n    this.store$.dispatch(clearSelectedFieldGuid());\n  }\n  canDeactivate() {\n    let canDeactivate = true;\n    this.isDirty$.pipe(take(1)).subscribe(isDirty => {\n      canDeactivate = !isDirty;\n    });\n    return canDeactivate;\n  }\n  saveDefinition() {\n    combineLatest([this.definitionFromDefinitionModel$, this.isNewDefinition$, this.overriddenRecordProperties$]).pipe(take(1), switchMap(([definition, isNewDefinition, overriddenRecordProperties]) => {\n      if (isNewDefinition) {\n        return this.rxRecordDefinitionService.create(definition);\n      } else if (!isNewDefinition && !isEmpty(overriddenRecordProperties.fields)) {\n        return from(this.rxModalService.openModal({\n          title: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.inheritance-issue-modal.title'),\n          content: InheritanceIssueInfoComponent,\n          data: {\n            overriddenRecordProperties\n          },\n          size: 'sm'\n        })).pipe(filter(result => result === 'continue'), switchMap(() => this.rxRecordDefinitionService.update(definition)));\n      } else {\n        return this.rxRecordDefinitionService.update(definition);\n      }\n    }), withLatestFrom(this.store$.select(definitionModelSelector), this.store$.select(bundleIdSelector))).subscribe(([response, definitionModel, bundleId]) => {\n      this.store$.dispatch(saveDefinitionSuccess({\n        savedDefinitionName: `${bundleId}:${definitionModel.name}`\n      }));\n    });\n  }\n  onCorrectIssue(validationIssue) {\n    if (validationIssue.data.guid) {\n      this.store$.dispatch(setSelectedFieldGuid({\n        guid: validationIssue.data.guid\n      }));\n    } else {\n      this.store$.dispatch(setInspectorTabIndex({\n        inspectorTabIndex: 0\n      }));\n    }\n    setTimeout(() => this.inspectorFocusEditorSubject.next({\n      editorName: validationIssue.data.propertyName,\n      data: validationIssue.data\n    }), 10);\n  }\n  onFormInitialized() {\n    this.inspectorFocusEditorSubject.next({\n      editorName: 'name',\n      data: {}\n    });\n  }\n  ngOnDestroy() {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n    this.inspectorTabIndexSubject.complete();\n    this.inspectorFocusEditorSubject.complete();\n    this.store$.dispatch(destroy());\n  }\n}\nRecordDesignerComponent.ɵfac = function RecordDesignerComponent_Factory(t) {\n  return new (t || RecordDesignerComponent)(i0.ɵɵdirectiveInject(i1$2.Store), i0.ɵɵdirectiveInject(i2$1.RxNotificationService), i0.ɵɵdirectiveInject(i2$1.RxOverlayService), i0.ɵɵdirectiveInject(RxRecordDefinitionValidatorService), i0.ɵɵdirectiveInject(RxRecordDesignerInspectorService), i0.ɵɵdirectiveInject(i2$1.RxDefinitionNameService), i0.ɵɵdirectiveInject(RxFieldDefinitionManagerService), i0.ɵɵdirectiveInject(i3$1.RxRecordDefinitionService), i0.ɵɵdirectiveInject(i2$1.RxGlobalCacheService), i0.ɵɵdirectiveInject(i2.TranslateService), i0.ɵɵdirectiveInject(i5.DatePipe), i0.ɵɵdirectiveInject(i1.RxModalService), i0.ɵɵdirectiveInject(i3$1.RxFieldDefinitionService), i0.ɵɵdirectiveInject(RxRecordDesignerService), i0.ɵɵdirectiveInject(i11.RxExpressionEditorService), i0.ɵɵdirectiveInject(i3$1.RxRecordDefinitionCacheService), i0.ɵɵdirectiveInject(i1$1.RxGuidService), i0.ɵɵdirectiveInject(i0.Injector));\n};\nRecordDesignerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RecordDesignerComponent,\n  selectors: [[\"rx-record-designer\"]],\n  viewQuery: function RecordDesignerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(AdaptSidebarComponent, 5);\n      i0.ɵɵviewQuery(_c15, 7);\n      i0.ɵɵviewQuery(_c16, 7);\n      i0.ɵɵviewQuery(_c17, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.adaptSidebarComponent = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.requiredCellTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dataTypeCellTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inheritedCellTemplate = _t.first);\n    }\n  },\n  inputs: {\n    configuration: \"configuration\"\n  },\n  outputs: {\n    definitionSaved: \"definitionSaved\",\n    definitionErrorLoading: \"definitionErrorLoading\",\n    closeDesigner: \"closeDesigner\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 10,\n  vars: 3,\n  consts: [[\"class\", \"p-0\", 4, \"ngIf\"], [\"dataTypeCellTemplate\", \"\"], [\"requiredCellTemplate\", \"\"], [\"inheritedCellTemplate\", \"\"], [\"sourceFieldCellTemplate\", \"\"], [1, \"p-0\"], [3, \"bundleName\", \"isSaveButtonDisabled\", \"breadcrumbItems\", \"isDesignMode\", \"save\", \"closeDesigner\", \"breadcrumbSelected\", \"toggleDesignMode\"], [\"position\", \"right\", 1, \"h-100\", 3, \"openedId\", \"adjustMainContainerWidth\", \"hidden\", \"isPanelOpenedCurrently\"], [\"iconClass\", \"d-icon-pencil\", 3, \"headerTitle\", \"tooltipText\"], [3, \"config\", \"model\", \"focusEditor$\", \"modelChange\", \"formInitialized\", \"editorEvent\"], [\"iconClass\", \"d-icon-gear\", 3, \"headerTitle\", \"tooltipText\"], [3, \"config\", \"model\", \"guid\", \"focusEditor$\", \"modelChange\"], [1, \"p-3\", 3, \"hidden\", \"config\"], [3, \"iconClass\", \"headerTitle\", \"tooltipText\"], [3, \"issueSections\", \"definitionTypeDisplayName\", \"correctIssue\"], [1, \"main\", \"h-100\", \"d-flex\", \"flex-column\"], [1, \"mt-0\", \"mb-2\"], [\"class\", \"d-flex border border-bottom-0\", 4, \"ngIf\"], [\"scrollHeight\", \"flex\", 3, \"value\", \"selection\", \"columns\", \"scrollable\", \"sortable\", \"resizableColumns\", \"bordered\", \"filterable\", \"dataKey\", \"disableRowSelection\", \"selectionMode\", \"selectionChange\"], [\"class\", \"full-size\", 3, \"code\", \"lang\", \"hasToolbar\", \"theme\", 4, \"ngIf\"], [1, \"d-flex\", \"border\", \"border-bottom-0\"], [\"adapt-button\", \"\", \"type\", \"button\", \"btn-type\", \"tertiary\", \"rx-id\", \"new-field-button\", 1, \"d-icon-plus_circle\", \"align-self-start\", 3, \"disabled\", \"click\"], [\"adapt-button\", \"\", \"btn-type\", \"tertiary\", \"type\", \"button\", \"rx-id\", \"delete-field-button\", 1, \"d-icon-trash\", 3, \"disabled\", \"click\"], [\"adaptDropdown\", \"\", 1, \"dropdown\"], [\"adapt-button\", \"\", \"type\", \"button\", \"adaptDropdownToggle\", \"\", \"btn-type\", \"tertiary\", \"rx-id\", \"new-field-button\", 1, \"d-icon-plus_circle\"], [\"adaptDropdownMenu\", \"\", 1, \"dropdown-menu\"], [\"class\", \"dropdown-item\", 3, \"disabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"adapt-button\", \"\", \"btn-type\", \"tertiary\", \"type\", \"button\", \"rx-id\", \"copy-field-button\", 1, \"d-icon-list_ordered\", 3, \"disabled\", \"click\"], [1, \"dropdown-item\", 3, \"disabled\", \"click\"], [1, \"full-size\", 3, \"code\", \"lang\", \"hasToolbar\", \"theme\"], [\"class\", \"icon d-icon-lock pr-2\", 3, \"adaptPopover\", 4, \"ngIf\"], [1, \"icon\", \"d-icon-lock\", \"pr-2\", 3, \"adaptPopover\"], [\"class\", \"icon d-icon-check pr-2\", 4, \"ngIf\"], [1, \"icon\", \"d-icon-check\", \"pr-2\"]],\n  template: function RecordDesignerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, RecordDesignerComponent_ng_container_0_Template, 26, 60, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtemplate(2, RecordDesignerComponent_ng_template_2_Template, 2, 2, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(4, RecordDesignerComponent_ng_template_4_Template, 2, 3, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(6, RecordDesignerComponent_ng_template_6_Template, 1, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(8, RecordDesignerComponent_ng_template_8_Template, 1, 1, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.vm$));\n    }\n  },\n  directives: [i5.NgIf, i11.RxDesignerHeaderComponent, i3.AdaptSidebarComponent, i3.AdaptSidebarItemComponent, i11.FormBuilderComponent, i3.AdaptAlertComponent, i1.RxValidationIssuesComponent, i4.AdaptTableComponent, i3.AdaptButtonComponent, i3.AdaptDropdownDirective, i3.AdaptDropdownToggleDirective, i3.AdaptDropdownMenuDirective, i5.NgForOf, i3.AdaptCodeViewerComponent, i3.AdaptPopoverDirective],\n  pipes: [i5.AsyncPipe, i2.TranslatePipe, i2$1.RxDefinitionNamePipe, i5.JsonPipe, i3$1.RxRecordDefinitionFieldOptionPipe],\n  styles: [\"[_ngcontent-%COMP%]:root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}[_nghost-%COMP%]{display:flex;flex-direction:column;height:100%;width:100%}.rx-component-designer[_ngcontent-%COMP%]{display:flex;flex-grow:1;height:calc(100% - 50px);overflow:hidden}.rx-designer-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;flex-grow:1;overflow:auto;padding:1rem}[_nghost-%COMP%]     adapt-sidebar .adapt-sidebar-wrapper{border-top:0}[_nghost-%COMP%]     adapt-sidebar .adapt-sidebar-wrapper .adapt-sidebar-panel-content{padding:0}[_nghost-%COMP%]     adapt-sidebar .adapt-sidebar-wrapper .card{border-left:0;border-right:0}\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RecordDesignerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-record-designer',\n      templateUrl: './record-designer.component.html',\n      styleUrls: ['./record-designer.component.scss']\n    }]\n  }], function () {\n    return [{\n      type: i1$2.Store\n    }, {\n      type: i2$1.RxNotificationService\n    }, {\n      type: i2$1.RxOverlayService\n    }, {\n      type: RxRecordDefinitionValidatorService\n    }, {\n      type: RxRecordDesignerInspectorService\n    }, {\n      type: i2$1.RxDefinitionNameService\n    }, {\n      type: RxFieldDefinitionManagerService\n    }, {\n      type: i3$1.RxRecordDefinitionService\n    }, {\n      type: i2$1.RxGlobalCacheService\n    }, {\n      type: i2.TranslateService\n    }, {\n      type: i5.DatePipe\n    }, {\n      type: i1.RxModalService\n    }, {\n      type: i3$1.RxFieldDefinitionService\n    }, {\n      type: RxRecordDesignerService\n    }, {\n      type: i11.RxExpressionEditorService\n    }, {\n      type: i3$1.RxRecordDefinitionCacheService\n    }, {\n      type: i1$1.RxGuidService\n    }, {\n      type: i0.Injector\n    }];\n  }, {\n    adaptSidebarComponent: [{\n      type: ViewChild,\n      args: [AdaptSidebarComponent, {\n        static: false\n      }]\n    }],\n    requiredCellTemplate: [{\n      type: ViewChild,\n      args: ['requiredCellTemplate', {\n        static: true\n      }]\n    }],\n    dataTypeCellTemplate: [{\n      type: ViewChild,\n      args: ['dataTypeCellTemplate', {\n        static: true\n      }]\n    }],\n    inheritedCellTemplate: [{\n      type: ViewChild,\n      args: ['inheritedCellTemplate', {\n        static: true\n      }]\n    }],\n    configuration: [{\n      type: Input\n    }],\n    definitionSaved: [{\n      type: Output\n    }],\n    definitionErrorLoading: [{\n      type: Output\n    }],\n    closeDesigner: [{\n      type: Output\n    }]\n  });\n})();\nconst initialDefinitionModel = {\n  isArchivingEnabled: false,\n  archiveDescription: null,\n  ageQualifierFieldId: null,\n  ageQualifierInDays: null,\n  archiveRecordDefinitionName: null,\n  archiveType: ArchiveType.None,\n  includeAttachments: null,\n  archiveDataCriteria: null,\n  associationsToFollowForArchive: {\n    selectionType: AssociationSelectionType.FollowParent,\n    specificAssociationNames: []\n  },\n  isAuditingEnabled: false,\n  auditRecordDefinitionName: null,\n  auditDataCriteria: null,\n  associatedAuditFieldsByAssociationName: {},\n  customizationOptions: {\n    allowOverlay: false,\n    allowFieldsOverlay: false,\n    allowIndexesOverlay: false,\n    allowOtherPropertiesOverlay: false,\n    allowPermissionsOverlay: false,\n    fields: [],\n    scope: null\n  },\n  recordInheritanceSelector: {\n    inheritanceOptions: {\n      isSharedInstanceStorage: false,\n      isAbstract: false,\n      isFinal: false\n    },\n    inheritanceDescriptor: {\n      inheritingFrom: null,\n      isInheritingRules: false,\n      isInheritingFieldPermissions: false,\n      isInheritingAssociations: false,\n      isInheritingFieldAuditOptions: false\n    },\n    isInheritingCoreFields: false,\n    inheritedFieldDefinitions: []\n  },\n  recordSearchFields: [],\n  overlayOperation: null,\n  weightedRelevancyTitle: undefined,\n  weightedRelevancyKeywords: undefined,\n  weightedRelevancyEnvironment: undefined,\n  fields: [],\n  indexDefinitions: []\n};\nconst initialState = {\n  bundleId: null,\n  definitionName: null,\n  selectedFieldGuid: null,\n  inspectorTabIndex: 0,\n  isDesignMode: true,\n  definitionModel: initialDefinitionModel,\n  definitionModelFromDefinition: initialDefinitionModel,\n  isDirty: false,\n  savedDefinitionName: null\n};\nconst reducer = createReducer(initialState, on(init, (state, {\n  payload\n}) => Object.assign(Object.assign({}, initialState), {\n  bundleId: payload.bundleId,\n  definitionName: payload.definitionName\n})), on(initDefinitionModel, (state, {\n  definitionModelFromDefinition\n}) => Object.assign(Object.assign({}, state), {\n  definitionModelFromDefinition,\n  definitionModel: definitionModelFromDefinition\n})), on(updateDefinitionModelFromDesigner, (state, {\n  definitionModelFromDesigner\n}) => {\n  const updatedDefinitionModel = Object.assign(Object.assign({}, state.definitionModel), definitionModelFromDesigner);\n  const inheritedFieldDefinitions = updatedDefinitionModel.recordInheritanceSelector.inheritanceDescriptor ? updatedDefinitionModel.recordInheritanceSelector.inheritedFieldDefinitions : [];\n  return Object.assign(Object.assign({}, state), {\n    definitionModel: Object.assign(Object.assign({}, updatedDefinitionModel), {\n      includeAttachments: updatedDefinitionModel.archiveType === RX_RECORD_DESIGNER.archiving.types.deleteSourceRecord.id,\n      fields: chain(updatedDefinitionModel.fields).differenceBy(inheritedFieldDefinitions, 'id').concat(inheritedFieldDefinitions).map(field => {\n        const searchField = updatedDefinitionModel.recordSearchFields.find(searchField => searchField.id === field.id);\n        const searchDefinition = searchField ? searchField.searchDefinition : isUndefined(field.searchDefinition) ? undefined : null;\n        const customizationOptionField = updatedDefinitionModel.customizationOptions.allowFieldsOverlay && updatedDefinitionModel.customizationOptions.fields.find(customizationOptionsField => customizationOptionsField.id === field.id);\n        return Object.assign(Object.assign({}, field), {\n          searchDefinition,\n          allowOtherPropertiesOverlay: customizationOptionField ? customizationOptionField.allowOtherPropertiesOverlay : field.allowOtherPropertiesOverlay,\n          allowPermissionsOverlay: customizationOptionField ? customizationOptionField.allowPermissionsOverlay : field.allowPermissionsOverlay,\n          isInherited: field.isCoreField ? Boolean(updatedDefinitionModel.recordInheritanceSelector.isInheritingCoreFields) : field.isInherited\n        });\n      }).orderBy('id').value()\n    })\n  });\n}), on(updateSelectedFieldModel, (state, {\n  selectedFieldModel\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    definitionModel: Object.assign(Object.assign({}, state.definitionModel), {\n      fields: state.definitionModel.fields.map(field => {\n        return field.guid === selectedFieldModel.guid ? Object.assign(Object.assign({}, selectedFieldModel), {\n          copy: selectedFieldModel.audit ? true : selectedFieldModel.copy\n        }) : field;\n      })\n    })\n  });\n}), on(clearSearchFields, state => Object.assign(Object.assign({}, state), {\n  definitionModel: Object.assign(Object.assign({}, state.definitionModel), {\n    recordSearchFields: [],\n    fields: state.definitionModel.fields.map(field => {\n      return Object.assign(Object.assign({}, field), {\n        searchDefinition: isUndefined(field.searchDefinition) ? undefined : null\n      });\n    })\n  })\n})), on(toggleDesignMode, state => Object.assign(Object.assign({}, state), {\n  isDesignMode: !state.isDesignMode\n})), on(markDesignerPristine, state => Object.assign(Object.assign({}, state), {\n  isDirty: false\n})), on(markDesignerDirty, state => Object.assign(Object.assign({}, state), {\n  isDirty: true\n})), on(setInspectorTabIndex, (state, {\n  inspectorTabIndex\n}) => Object.assign(Object.assign({}, state), {\n  inspectorTabIndex\n})), on(setSelectedFieldGuid, (state, {\n  guid\n}) => Object.assign(Object.assign({}, state), {\n  selectedFieldGuid: guid,\n  inspectorTabIndex: guid && !isNull(state.inspectorTabIndex) ? 1 : state.inspectorTabIndex\n})), on(clearSelectedFieldGuid, state => Object.assign(Object.assign({}, state), {\n  selectedFieldGuid: null,\n  inspectorTabIndex: !isNull(state.inspectorTabIndex) ? 0 : state.inspectorTabIndex\n})), on(addFieldModel, (state, {\n  newFieldModel\n}) => Object.assign(Object.assign({}, state), {\n  definitionModel: Object.assign(Object.assign({}, state.definitionModel), {\n    fields: [...state.definitionModel.fields, Object.assign({}, newFieldModel)]\n  })\n})), on(addNewFieldModels, (state, {\n  newFieldModels\n}) => Object.assign(Object.assign({}, state), {\n  definitionModel: Object.assign(Object.assign({}, state.definitionModel), {\n    fields: [...state.definitionModel.fields, ...newFieldModels]\n  }),\n  isDirty: true\n})), on(deleteSelectedFieldSuccess, state => Object.assign(Object.assign({}, state), {\n  definitionModel: Object.assign(Object.assign({}, state.definitionModel), {\n    fields: state.definitionModel.fields.filter(field => field.guid !== state.selectedFieldGuid)\n  })\n})), on(saveDefinitionSuccess, (state, {\n  savedDefinitionName\n}) => Object.assign(Object.assign({}, state), {\n  savedDefinitionName\n})), on(destroy, state => Object.assign({}, initialState)));\nfunction recordDesignerModelReducer(state, action) {\n  return reducer(state, action);\n}\nclass RecordDesignerEffects {\n  constructor(store$, actions$, rxFieldDefinitionManagerService, rxRecordDefinitionService, rxModalService, rxNotificationService, translateService, rxGuidService, rxRecordDesignerService) {\n    this.store$ = store$;\n    this.actions$ = actions$;\n    this.rxFieldDefinitionManagerService = rxFieldDefinitionManagerService;\n    this.rxRecordDefinitionService = rxRecordDefinitionService;\n    this.rxModalService = rxModalService;\n    this.rxNotificationService = rxNotificationService;\n    this.translateService = translateService;\n    this.rxGuidService = rxGuidService;\n    this.rxRecordDesignerService = rxRecordDesignerService;\n    this.initRecordDesigner$ = createEffect(() => this.actions$.pipe(ofType(init), map(() => loadDefinition())));\n    this.loadDefinition$ = createEffect(() => this.actions$.pipe(ofType(loadDefinition), withLatestFrom(this.store$.select(definitionNameSelector)), switchMap(([action, definitionName]) => definitionName ? this.rxRecordDefinitionService.get(definitionName, {}, true) : this.rxRecordDefinitionService.getNew()), map(definition => loadDefinitionSuccess({\n      definition\n    }))));\n    this.loadDefinitionSuccess$ = createEffect(() => this.actions$.pipe(ofType(loadDefinitionSuccess), map(action => initDefinitionModel({\n      definitionModelFromDefinition: this.rxRecordDesignerService.getDefinitionModelFromDefinition(action.definition)\n    }))));\n    this.createNewFieldModel$ = createEffect(() => this.actions$.pipe(ofType(createNewFieldModel), withLatestFrom(this.store$.select(definitionModelSelector)), map(([action, definitionModel]) => {\n      let newFieldName;\n      let fieldNameSuffix = 0;\n      const defaultFieldName = this.translateService.instant('com.bmc.arsys.rx.client.designer.default-field-name.label');\n      do {\n        newFieldName = `${defaultFieldName} ${++fieldNameSuffix}`;\n      } while (some(definitionModel.fields, {\n        name: newFieldName\n      }));\n      const guid = this.rxGuidService.generate();\n      const newFieldModel = this.rxFieldDefinitionManagerService.getNewFieldDefinitionModel(action.resourceType, {\n        id: null,\n        isNewField: true,\n        name: newFieldName,\n        guid,\n        minValue: null,\n        maxValue: null,\n        defaultValueByLocale: {},\n        selectionFieldOptionProperties: action.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType ? {\n          defaultValue: null,\n          optionNamesById: null,\n          optionLabelsById: null\n        } : null\n      });\n      return addFieldModel({\n        newFieldModel\n      });\n    })));\n    this.clearSearchFields$ = createEffect(() => this.actions$.pipe(ofType(updateDefinitionModelFromDesigner), withLatestFrom(this.store$.select(definitionModelSelector)), map(([action, definitionModel]) => definitionModel), distinctUntilChanged((a, b) => isEqual(a.enableCognitiveSearch, b.enableCognitiveSearch)), filter(definitionModel => definitionModel.enableCognitiveSearch && !isEmpty(definitionModel.recordSearchFields)), switchMap(() => from(this.rxModalService.confirm({\n      title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n      modalStyle: RX_MODAL.modalStyles.warning,\n      message: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.search-fields.clear-search-fields-confirmation.message')\n    }))), filter(Boolean), map(() => clearSearchFields())));\n    this.addNewFieldModel$ = createEffect(() => this.actions$.pipe(ofType(addFieldModel), map(action => setSelectedFieldGuid({\n      guid: action.newFieldModel.guid\n    }))));\n    this.copySelectedField$ = createEffect(() => this.actions$.pipe(ofType(copySelectedField), withLatestFrom(this.store$.select(definitionModelSelector), this.store$.select(selectedFieldGuidSelector)), map(([action, definitionModel, selectedFieldGuid]) => {\n      const selectedField = definitionModel.fields.find(field => field.guid === selectedFieldGuid);\n      const selectedFieldCopy = Object.assign(Object.assign({}, selectedField), {\n        id: null,\n        guid: this.rxGuidService.generate(),\n        name: this.translateService.instant('com.bmc.arsys.rx.client.designer.default-field-copy-name.label', {\n          fieldName: selectedField.name\n        }),\n        selectionFieldOptionProperties: Object.assign(Object.assign({}, selectedField.selectionFieldOptionProperties), {\n          optionLabelsById: selectedField.resourceType === RX_RECORD_DEFINITION.resourceTypes.selection ? mapValues(selectedField.selectionFieldOptionProperties.optionNamesById, () => this.rxGuidService.generate()) : null\n        })\n      });\n      return addFieldModel({\n        newFieldModel: selectedFieldCopy\n      });\n    })));\n    this.deleteSelectedField$ = createEffect(() => this.actions$.pipe(ofType(deleteSelectedField), switchMap(() => from(this.rxModalService.confirm({\n      title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n      modalStyle: RX_MODAL.modalStyles.warning,\n      message: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.delete-field-warning.message')\n    }))), filter(Boolean), map(() => checkIfFieldUsedByIndexes())));\n    this.checkIfFieldUsedByIndexes$ = createEffect(() => this.actions$.pipe(ofType(checkIfFieldUsedByIndexes), withLatestFrom(this.store$.select(definitionModelSelector), this.store$.select(selectedFieldGuidSelector)), switchMap(([result, definitionModel, guid]) => {\n      const field = find(definitionModel.fields, {\n        guid\n      });\n      const isUsedByIndexes = some(definitionModel.indexDefinitions, indexDefinition => includes(indexDefinition.indexFieldIds, field.id));\n      return isUsedByIndexes ? from(this.rxModalService.alert({\n        title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n        modalStyle: RX_MODAL.modalStyles.warning,\n        message: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.indexes.field-used-by-indexes.message', {\n          fieldName: field.name\n        })\n      })).pipe(map(() => deleteSelectedFieldError())) : [deleteSelectedFieldSuccess()];\n    })));\n    this.saveDefinitionSuccess$ = createEffect(() => this.actions$.pipe(ofType(saveDefinitionSuccess), withLatestFrom(this.store$.select(definitionNameSelector), this.store$.select(bundleIdSelector)), tap(() => {\n      this.rxNotificationService.addSuccessMessage(this.translateService.instant('com.bmc.arsys.rx.client.designer.definition-saved-successfully.message', {\n        definitionTypeDisplayName: this.translateService.instant('com.bmc.arsys.rx.client.record-definition.label')\n      }));\n    }), filter(([action, definitionName, bundleId]) => !!definitionName), map(([action, definitionName, bundleId]) => init({\n      payload: {\n        definitionName,\n        bundleId\n      }\n    }))));\n    this.clearSelectedField$ = createEffect(() => this.actions$.pipe(ofType(initDefinitionModel, deleteSelectedFieldSuccess), map(() => clearSelectedFieldGuid())));\n    this.markPristine$ = createEffect(() => this.actions$.pipe(ofType(initDefinitionModel, saveDefinitionSuccess), map(() => markDesignerPristine())));\n    this.markDirty$ = createEffect(() => this.actions$.pipe(ofType(addFieldModel, updateDefinitionModelFromDesigner, updateSelectedFieldModel, deleteSelectedFieldSuccess), map(() => markDesignerDirty())));\n  }\n}\nRecordDesignerEffects.ɵfac = function RecordDesignerEffects_Factory(t) {\n  return new (t || RecordDesignerEffects)(i0.ɵɵinject(i1$2.Store), i0.ɵɵinject(i2$2.Actions), i0.ɵɵinject(RxFieldDefinitionManagerService), i0.ɵɵinject(i3$1.RxRecordDefinitionService), i0.ɵɵinject(i1.RxModalService), i0.ɵɵinject(i2$1.RxNotificationService), i0.ɵɵinject(i2.TranslateService), i0.ɵɵinject(i1$1.RxGuidService), i0.ɵɵinject(RxRecordDesignerService));\n};\nRecordDesignerEffects.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RecordDesignerEffects,\n  factory: RecordDesignerEffects.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RecordDesignerEffects, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$2.Store\n    }, {\n      type: i2$2.Actions\n    }, {\n      type: RxFieldDefinitionManagerService\n    }, {\n      type: i3$1.RxRecordDefinitionService\n    }, {\n      type: i1.RxModalService\n    }, {\n      type: i2$1.RxNotificationService\n    }, {\n      type: i2.TranslateService\n    }, {\n      type: i1$1.RxGuidService\n    }, {\n      type: RxRecordDesignerService\n    }];\n  }, null);\n})();\nclass RecordDesignerModule {}\nRecordDesignerModule.ɵfac = function RecordDesignerModule_Factory(t) {\n  return new (t || RecordDesignerModule)();\n};\nRecordDesignerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: RecordDesignerModule,\n  declarations: [RecordDesignerComponent, LocalizedCharacterFieldEditorComponent, InheritanceIssueInfoComponent, ArchiveAssociationsControlComponent, ArchiveAssociationSelectorComponent, MissingArchiveDefinitionsModalComponent, FieldOptionEditorComponent, AddJoinFieldsEditorComponent, RecordIndexesControlComponent, RecordIndexesEditorComponent],\n  imports: [AdaptCodeViewerModule, AdaptRxLabelModule, AdaptTabsModule, AdaptBusyModule, AdaptButtonModule, AdaptDropdownModule, AdaptRxCheckboxModule, AdaptRxSelectModule, AdaptRxTextfieldModule, AdaptPopoverModule, AdaptIconModule, CommonModule, FormsModule, RxDesignerHeaderModule, RxModalModule, RxValidationIssuesModule, TranslateModule, ReactiveFormsModule, RecordGridModule, RxFormBuilderModule, RxDefinitionModule, RxRecordDefinitionFieldOptionPipeModule, RecordCustomizationOptionsModule, RecordInheritanceEditorModule, SearchFieldEditorModule, AdaptTableModule, AdaptSidebarModule, i1$2.StoreFeatureModule, i2$2.EffectsFeatureModule, AdaptAlertModule, AdaptRxRadiobuttonModule, AdaptRxSwitchModule, AdaptPopoverModule, AdaptAccordionModule, AdaptRxListBuilderModule],\n  exports: [RecordDesignerComponent]\n});\nRecordDesignerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [DatePipe, RxRecordDesignerService],\n  imports: [[AdaptCodeViewerModule, AdaptRxLabelModule, AdaptTabsModule, AdaptBusyModule, AdaptButtonModule, AdaptDropdownModule, AdaptRxCheckboxModule, AdaptRxSelectModule, AdaptRxTextfieldModule, AdaptPopoverModule, AdaptIconModule, CommonModule, FormsModule, RxDesignerHeaderModule, RxModalModule, RxValidationIssuesModule, TranslateModule, ReactiveFormsModule, RecordGridModule, RxFormBuilderModule, RxDefinitionModule, RxRecordDefinitionFieldOptionPipeModule, RecordCustomizationOptionsModule, RecordInheritanceEditorModule, SearchFieldEditorModule, AdaptTableModule, AdaptSidebarModule, StoreModule.forFeature(RX_RECORD_DESIGNER.featureSelector, {\n    model: recordDesignerModelReducer\n  }), EffectsModule.forFeature([RecordDesignerEffects]), AdaptAlertModule, AdaptRxRadiobuttonModule, AdaptRxSwitchModule, AdaptPopoverModule, AdaptAccordionModule, AdaptRxListBuilderModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RecordDesignerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [RecordDesignerComponent, LocalizedCharacterFieldEditorComponent, InheritanceIssueInfoComponent, ArchiveAssociationsControlComponent, ArchiveAssociationSelectorComponent, MissingArchiveDefinitionsModalComponent, FieldOptionEditorComponent, AddJoinFieldsEditorComponent, RecordIndexesControlComponent, RecordIndexesEditorComponent],\n      exports: [RecordDesignerComponent],\n      imports: [AdaptCodeViewerModule, AdaptRxLabelModule, AdaptTabsModule, AdaptBusyModule, AdaptButtonModule, AdaptDropdownModule, AdaptRxCheckboxModule, AdaptRxSelectModule, AdaptRxTextfieldModule, AdaptPopoverModule, AdaptIconModule, CommonModule, FormsModule, RxDesignerHeaderModule, RxModalModule, RxValidationIssuesModule, TranslateModule, ReactiveFormsModule, RecordGridModule, RxFormBuilderModule, RxDefinitionModule, RxRecordDefinitionFieldOptionPipeModule, RecordCustomizationOptionsModule, RecordInheritanceEditorModule, SearchFieldEditorModule, AdaptTableModule, AdaptSidebarModule, StoreModule.forFeature(RX_RECORD_DESIGNER.featureSelector, {\n        model: recordDesignerModelReducer\n      }), EffectsModule.forFeature([RecordDesignerEffects]), AdaptAlertModule, AdaptRxRadiobuttonModule, AdaptRxSwitchModule, AdaptPopoverModule, AdaptAccordionModule, AdaptRxListBuilderModule],\n      providers: [DatePipe, RxRecordDesignerService]\n    }]\n  }], null, null);\n})();\nclass RecordDesignerPageComponent {\n  constructor(activatedRoute, rxBundleCacheService, rxDefinitionNameService, rxUtilityModalsService, rxPageTitleService, router, translateService, rxComponentCanDeactivateGuard) {\n    this.activatedRoute = activatedRoute;\n    this.rxBundleCacheService = rxBundleCacheService;\n    this.rxDefinitionNameService = rxDefinitionNameService;\n    this.rxUtilityModalsService = rxUtilityModalsService;\n    this.rxPageTitleService = rxPageTitleService;\n    this.router = router;\n    this.translateService = translateService;\n    this.rxComponentCanDeactivateGuard = rxComponentCanDeactivateGuard;\n    this.isInitialized = false;\n  }\n  ngOnInit() {\n    this.rxComponentCanDeactivateGuard.setPageComponent(this);\n    this.subscription = this.activatedRoute.params.subscribe(({\n      definitionName,\n      bundleId\n    }) => {\n      this.rxBundleCacheService.bundleId = bundleId || this.rxDefinitionNameService.getBundleId(definitionName);\n      this.isInitialized = true;\n      this.isNewRecord = !definitionName;\n      this.configuration = {\n        definitionName: definitionName,\n        bundleId: this.rxBundleCacheService.bundleId\n      };\n      this.rxPageTitleService.set([this.rxDefinitionNameService.getDisplayName(definitionName), this.translateService.instant('com.bmc.arsys.rx.client.record-designer.title')]);\n    });\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.rxComponentCanDeactivateGuard.setPageComponent(null);\n  }\n  onDefinitionSaved(recordDefinitionName) {\n    if (this.isNewRecord) {\n      this.router.navigate(['edit2', recordDefinitionName], {\n        relativeTo: this.activatedRoute.parent\n      });\n    }\n  }\n  onDefinitionErrorLoading() {\n    this.router.navigate(['new2', this.rxBundleCacheService.bundleId], {\n      relativeTo: this.activatedRoute.parent\n    });\n  }\n  onCloseDesigner() {\n    this.router.navigate([RX_APPLICATION.innovationStudioBundleId, this.rxBundleCacheService.bundleId, 'record-definitions']);\n  }\n  canDeactivate() {\n    var _a, _b;\n    return (_b = (_a = this.recordDesignerComponent) === null || _a === void 0 ? void 0 : _a.canDeactivate()) !== null && _b !== void 0 ? _b : true;\n  }\n  confirmDeactivation() {\n    return this.rxUtilityModalsService.confirmUnsavedChanges();\n  }\n}\nRecordDesignerPageComponent.ɵfac = function RecordDesignerPageComponent_Factory(t) {\n  return new (t || RecordDesignerPageComponent)(i0.ɵɵdirectiveInject(i1$3.ActivatedRoute), i0.ɵɵdirectiveInject(i2$1.RxBundleCacheService), i0.ɵɵdirectiveInject(i2$1.RxDefinitionNameService), i0.ɵɵdirectiveInject(i1.RxUtilityModalsService), i0.ɵɵdirectiveInject(i2$1.RxPageTitleService), i0.ɵɵdirectiveInject(i1$3.Router), i0.ɵɵdirectiveInject(i2.TranslateService), i0.ɵɵdirectiveInject(i2$1.RxComponentCanDeactivateGuard));\n};\nRecordDesignerPageComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RecordDesignerPageComponent,\n  selectors: [[\"rx-record-designer-page\"]],\n  viewQuery: function RecordDesignerPageComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(RecordDesignerComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.recordDesignerComponent = _t.first);\n    }\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"configuration\", \"definitionSaved\", \"definitionErrorLoading\", \"closeDesigner\", 4, \"ngIf\"], [3, \"configuration\", \"definitionSaved\", \"definitionErrorLoading\", \"closeDesigner\"]],\n  template: function RecordDesignerPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, RecordDesignerPageComponent_rx_record_designer_0_Template, 1, 1, \"rx-record-designer\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isInitialized);\n    }\n  },\n  directives: [i5.NgIf, RecordDesignerComponent],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RecordDesignerPageComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-record-designer-page',\n      templateUrl: './record-designer-page.component.html'\n    }]\n  }], function () {\n    return [{\n      type: i1$3.ActivatedRoute\n    }, {\n      type: i2$1.RxBundleCacheService\n    }, {\n      type: i2$1.RxDefinitionNameService\n    }, {\n      type: i1.RxUtilityModalsService\n    }, {\n      type: i2$1.RxPageTitleService\n    }, {\n      type: i1$3.Router\n    }, {\n      type: i2.TranslateService\n    }, {\n      type: i2$1.RxComponentCanDeactivateGuard\n    }];\n  }, {\n    recordDesignerComponent: [{\n      type: ViewChild,\n      args: [RecordDesignerComponent]\n    }]\n  });\n})();\nclass RecordDesignerPageModule {}\nRecordDesignerPageModule.ɵfac = function RecordDesignerPageModule_Factory(t) {\n  return new (t || RecordDesignerPageModule)();\n};\nRecordDesignerPageModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: RecordDesignerPageModule,\n  declarations: [RecordDesignerPageComponent],\n  imports: [CommonModule, RecordDesignerModule],\n  exports: [RecordDesignerPageComponent]\n});\nRecordDesignerPageModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, RecordDesignerModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RecordDesignerPageModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [RecordDesignerPageComponent],\n      exports: [RecordDesignerPageComponent],\n      imports: [CommonModule, RecordDesignerModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RecordDesignerComponent, RecordDesignerModule, RecordDesignerPageComponent, RecordDesignerPageModule, RxFieldDefinitionManagerService, RxRecordDesignerService };\n//# sourceMappingURL=helix-platform-record-designer.js.map","map":{"version":3,"names":["i5","CommonModule","DatePipe","i0","Component","ChangeDetectionStrategy","ViewChild","Input","NgModule","Injectable","ElementRef","ViewChildren","EventEmitter","Output","i6","NG_VALUE_ACCESSOR","FormsModule","ReactiveFormsModule","Validators","FormControl","i3","DismissReasons","AdaptTooltipModule","AdaptRxSelectModule","AdaptButtonModule","AdaptPopoverModule","AdaptIconModule","AdaptRxCheckboxModule","AdaptRxFormControlModule","AdaptRxTextfieldModule","AdaptAccordionModule","AdaptEmptyStateModule","AdaptAccordionTabComponent","AdaptSidebarComponent","AdaptCodeViewerModule","AdaptRxLabelModule","AdaptTabsModule","AdaptBusyModule","AdaptDropdownModule","AdaptSidebarModule","AdaptAlertModule","AdaptRxRadiobuttonModule","AdaptRxSwitchModule","AdaptRxListBuilderModule","i4","AdaptTableModule","i3$1","RX_RECORD_DEFINITION","RecordFieldOption","RxFieldDefinitionService","RxRecordDefinitionService","ArchiveType","AssociationSelectionType","RxRecordDefinitionCacheService","RxRecordDefinitionFieldOptionPipeModule","i2$1","RX_OVERLAY","RX_BUNDLE","RX_PERMISSION","Tooltip","RX_APPLICATION","RxExpressionConfigurator","ExpressionOperatorRowsByGroup","ExpressionOperatorGroup","RxDefinitionModule","i11","ValueAccessor","TextFormControlComponent","TextareaFormControlComponent","SelectFormControlComponent","SwitchFormControlComponent","RxPermissionEditorComponent","LabelFormControlComponent","BooleanFormControlComponent","CounterFormControlComponent","RxDefinitionPickerComponent","RxDefinitionPickerType","DateFormControlComponent","DateTimeFormControlComponent","LocalizedCharacterFieldValueModalComponent","SelectionFieldOptionsComponent","TimeFormControlComponent","RxDefinitionPickerScope","RxDefinitionPickerModule","RxRevertCustomizationComponent","ExpressionFormControlComponent","RX_EXPRESSION_EDITOR","RxDesignerHeaderModule","RxFormBuilderModule","i1","RxModalClass","RX_MODAL","ValidationIssueType","RxModalModule","RxValidationIssuesModule","RecordGridModule","i2","TranslateModule","TranslateService","AdaptCheckbox2Module","includes","cloneDeep","find","noop","isEmpty","trim","isNumber","inRange","size","isNil","omitBy","forEach","union","keys","map","map$1","pick","remove","some","chain","reverse","reject","filter","filter$1","get","findIndex","omit","orderBy","intersection","concat","invert","capitalize","intersectionBy","isNull","isUndefined","isEqual","mapValues","BehaviorSubject","combineLatest","ReplaySubject","iif","of","forkJoin","Subject","from","tap","mergeMap","switchMap","take","shareReplay","defaultIfEmpty","startWith","takeUntil","pluck","distinctUntilChanged","withLatestFrom","scan","skip","i1$1","RxIdService","RX_NUMBER","ComponentStore","i1$2","createAction","props","createFeatureSelector","createSelector","createReducer","on","StoreModule","RX_ASSOCIATION_DEFINITION","OpenViewActionModalSize","moment","i2$2","createEffect","ofType","EffectsModule","i1$3","_c0","_c1","_c2","a1","iconName","content","placement","popoverMode","_c3","a0","definitionType","RecordCustomizationOptionsEditorComponent_ng_container_0_Template","rf","ctx","_r6","ɵɵgetCurrentView","ɵɵelementContainerStart","ɵɵelementStart","ɵɵlistener","RecordCustomizationOptionsEditorComponent_ng_container_0_Template_adapt_rx_select_ngModelChange_5_listener","$event","ɵɵrestoreView","ctx_r5","ɵɵnextContext","scope","ctx_r7","onScopeChange","ɵɵpipe","ɵɵelementEnd","ɵɵtext","RecordCustomizationOptionsEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_12_listener","ctx_r8","allowOverlay","ctx_r9","handleAllowOverlayChange","RecordCustomizationOptionsEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_21_listener","ctx_r10","customizationOptions","allowOtherPropertiesOverlay","ctx_r11","onRecordCustomizationOptionChange","RecordCustomizationOptionsEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_24_listener","ctx_r12","allowPermissionsOverlay","ctx_r13","RecordCustomizationOptionsEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_28_listener","ctx_r14","allowIndexesOverlay","ctx_r15","RecordCustomizationOptionsEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_31_listener","ctx_r16","allowFieldsOverlay","ctx_r17","ɵɵelement","RecordCustomizationOptionsEditorComponent_ng_container_0_Template_button_click_35_listener","ctx_r18","save","RecordCustomizationOptionsEditorComponent_ng_container_0_Template_button_click_38_listener","ctx_r19","cancel","ɵɵelementContainerEnd","vm_r3","ngIf","_r4","ɵɵreference","ctx_r0","ɵɵadvance","ɵɵpropertyInterpolate","ɵɵpipeBind1","ɵɵproperty","scopeSelectionOptions","optionFormatter","ɵɵpureFunction1","isDisabled","ɵɵtextInterpolate","ɵɵpipeBind2","data","definitionTypeDisplayName","areCustomizationOptionsDisabled","ɵɵtextInterpolate1","fields","columns","dirty","RecordCustomizationOptionsEditorComponent_ng_template_2_Template","_r23","RecordCustomizationOptionsEditorComponent_ng_template_2_Template_input_ngModelChange_3_listener","restoredCtx","dataItem_r20","dataItem","column_r21","column","field","RecordCustomizationOptionsEditorComponent_ng_template_2_Template_input_change_3_listener","ctx_r24","onFieldsPropertyChange","ctx_r2","isFieldsOverlayDisabled$","_c4","definitionScopeName","_c5","allowOverlayLabel","RecordCustomizationOptionsComponent_ng_container_0_Template","_r3","RecordCustomizationOptionsComponent_ng_container_0_Template_adapt_button_click_1_listener","openCustomizationOptionsEditor","vm_r1","RecordInheritanceEditorComponent_ng_container_0_div_11_Template","RecordInheritanceEditorComponent_ng_container_0_div_11_Template_adapt_rx_checkbox_ngModelChange_5_listener","ctx_r3","isInheritingCoreFields","onInheritCoreFieldsChange","RecordInheritanceEditorComponent_ng_container_0_div_11_Template_adapt_rx_checkbox_ngModelChange_7_listener","ctx_r6","inheritanceDescriptor","isInheritingRules","onInheritanceDescriptorChange","RecordInheritanceEditorComponent_ng_container_0_div_11_Template_adapt_rx_checkbox_ngModelChange_9_listener","isInheritingFieldPermissions","RecordInheritanceEditorComponent_ng_container_0_div_11_Template_adapt_rx_checkbox_ngModelChange_11_listener","isInheritingAssociations","RecordInheritanceEditorComponent_ng_container_0_div_11_Template_adapt_rx_checkbox_ngModelChange_13_listener","isInheritingFieldAuditOptions","isCoreFieldsOptionDisabled","isReadOnly","RecordInheritanceEditorComponent_ng_container_0_Template","_r16","RecordInheritanceEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_1_listener","inheritanceOptions","isSharedInstanceStorage","onInheritanceOptionsChange","RecordInheritanceEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_4_listener","isAbstract","RecordInheritanceEditorComponent_ng_container_0_Template_adapt_rx_checkbox_ngModelChange_7_listener","ctx_r20","isFinal","ctx_r21","RecordInheritanceEditorComponent_ng_container_0_Template_rx_definition_picker_ngModelChange_10_listener","ctx_r22","inheritFrom","ctx_r23","onRecordDefinitionNameChange","ɵɵtemplate","isSharedInstanceStorageDisabled","isMakeFinalDisabled","recordDefinitionPickerOptions","SearchFieldEditorModalComponent_ng_container_0_button_5_Template","_r9","SearchFieldEditorModalComponent_ng_container_0_button_5_Template_button_click_0_listener","addNewSearchField","SearchFieldEditorModalComponent_ng_container_0_div_6_Template","_r11","SearchFieldEditorModalComponent_ng_container_0_div_6_Template_button_click_1_listener","toggleOpen","SearchFieldEditorModalComponent_ng_container_0_div_6_Template_button_click_4_listener","SearchFieldEditorModalComponent_ng_container_0_div_7_div_2_button_8_Template","_r22","SearchFieldEditorModalComponent_ng_container_0_div_7_div_2_button_8_Template_button_click_0_listener","index_r15","index","onRemoveSearchField","SearchFieldEditorModalComponent_ng_container_0_div_7_div_2_adapt_rx_textfield_12_Template","_r24","SearchFieldEditorModalComponent_ng_container_0_div_7_div_2_adapt_rx_textfield_12_Template_adapt_rx_textfield_ngModelChange_0_listener","onSearchCategoryChange","SearchFieldEditorModalComponent_ng_container_0_div_7_div_2_Template","_r26","SearchFieldEditorModalComponent_ng_container_0_div_7_div_2_Template_adapt_accordion_tab_open_1_listener","searchField_r14","$implicit","setValue","SearchFieldEditorModalComponent_ng_container_0_div_7_div_2_Template_adapt_accordion_tab_close_1_listener","SearchFieldEditorModalComponent_ng_container_0_div_7_div_2_Template_adapt_rx_select_ngModelChange_10_listener","ctx_r28","onSelectedFieldChange","value","name","recordDefinition","enableCognitiveSearch","availableFields","optionTemplate","SearchFieldEditorModalComponent_ng_container_0_div_7_Template","searchFields","SearchFieldEditorModalComponent_ng_container_0_div_8_Template","SearchFieldEditorModalComponent_ng_container_0_div_10_Template","_r32","SearchFieldEditorModalComponent_ng_container_0_div_10_Template_button_click_1_listener","ctx_r31","saveSearchFields","SearchFieldEditorModalComponent_ng_container_0_div_10_Template_button_click_4_listener","ctx_r33","isValid","isDirty","SearchFieldEditorModalComponent_ng_container_0_button_11_Template","_r36","SearchFieldEditorModalComponent_ng_container_0_button_11_Template_button_click_0_listener","ctx_r35","SearchFieldEditorModalComponent_ng_container_0_Template","length","_c6","SearchFieldEditorControlComponent_adapt_button_0_Template","SearchFieldEditorControlComponent_adapt_button_0_Template_adapt_button_click_0_listener","openEditor","SearchFieldEditorControlComponent_div_1_div_1_button_4_Template","_r10","SearchFieldEditorControlComponent_div_1_div_1_button_4_Template_button_click_0_listener","searchField_r6","removeSearchField","SearchFieldEditorControlComponent_div_1_div_1_Template","_r12","SearchFieldEditorControlComponent_div_1_div_1_Template_button_click_5_listener","id","options","searchDefinition","enableFTSSearch","SearchFieldEditorControlComponent_div_1_Template","searchFields_r4","_c7","_c8","ArchiveAssociationSelectorComponent_ng_template_21_Template","dataItem_r4","column_r5","ArchiveAssociationSelectorComponent_ng_template_23_span_0_Template","ArchiveAssociationSelectorComponent_ng_template_23_span_1_Template","ArchiveAssociationSelectorComponent_ng_template_23_Template","dataItem_r6","column_r7","MissingArchiveDefinitionsModalComponent_div_10_Template","association_r1","url","ɵɵsanitizeUrl","secondRecord","RecordIndexesEditorComponent_ng_container_0_button_5_Template","_r7","RecordIndexesEditorComponent_ng_container_0_button_5_Template_button_click_0_listener","addIndex","RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_span_7_Template","index_r8","indexName","_c9","RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_span_8_Template","RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_button_10_Template","_r17","RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_button_10_Template_button_click_0_listener","stopPropagation","removeIndex","guid","_c10","RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template","_r19","RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_adapt_accordion_tab_open_2_listener","isOpen","RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_adapt_accordion_tab_close_2_listener","RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_adapt_rx_checkbox_ngModelChange_11_listener","updateIndexUniqueValue","RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_adapt_rx_checkbox_ngModelChange_13_listener","ignoreBlankValues","updateIndexIgnoreBlankValue","RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_adapt_rx_select_ngModelChange_17_listener","onAvailableFieldsChange","RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_button_click_20_listener","ctx_r25","moveToSelected","RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_button_click_21_listener","ctx_r26","moveToAvailable","RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_adapt_rx_list_builder_ngModelChange_22_listener","ctx_r27","onSelectedFieldsChange","RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_adapt_rx_list_builder_listItemRemove_22_listener","onFieldRemove","RecordIndexesEditorComponent_ng_container_0_adapt_accordion_13_Template_adapt_rx_list_builder_dragend_22_listener","ctx_r29","onDragEnd","isAutomaticIndex","unique","checkedAvailableFields","isMoveToAvailableButtonEnabled","selectedFields","RecordIndexesEditorComponent_ng_container_0_div_15_Template","_r31","RecordIndexesEditorComponent_ng_container_0_div_15_Template_button_click_1_listener","ctx_r30","RecordIndexesEditorComponent_ng_container_0_div_15_Template_button_click_4_listener","ctx_r32","RecordIndexesEditorComponent_ng_container_0_div_16_Template","_r35","RecordIndexesEditorComponent_ng_container_0_div_16_Template_button_click_1_listener","ctx_r34","_c11","variant","type","RecordIndexesEditorComponent_ng_container_0_Template","_r37","RecordIndexesEditorComponent_ng_container_0_Template_button_click_6_listener","ctx_r36","expandAll","RecordIndexesEditorComponent_ng_container_0_Template_button_click_9_listener","ctx_r38","collapseAll","indexes","trackByIndex","RecordIndexesControlComponent_div_4_span_3_Template","index_r1","RecordIndexesControlComponent_div_4_span_4_Template","RecordIndexesControlComponent_div_4_button_5_Template","RecordIndexesControlComponent_div_4_button_5_Template_button_click_0_listener","$index_r2","openIndexesEditor","RecordIndexesControlComponent_div_4_button_6_Template","_r14","RecordIndexesControlComponent_div_4_button_6_Template_button_click_0_listener","_c12","fieldCount","RecordIndexesControlComponent_div_4_Template","ɵɵtextInterpolate2","indexFieldIds","_c13","overriddenFields","InheritanceIssueInfoComponent_ng_container_1_div_1_Template","ctx_r1","overriddenRecordProperties","_c14","overriddenSecurityLabels","InheritanceIssueInfoComponent_ng_container_1_div_2_Template","securityLabels","InheritanceIssueInfoComponent_ng_container_1_Template","AddJoinFieldsEditorComponent_ng_container_0_adapt_alert_3_Template","alertConfig","AddJoinFieldsEditorComponent_ng_container_0_adapt_rx_select_7_Template","primaryAvailableFields","selectTexts","primarySelectedFieldsFormControl","AddJoinFieldsEditorComponent_ng_container_0_adapt_rx_select_8_Template","ctx_r4","secondaryAvailableFields","secondarySelectedFieldsFormControl","AddJoinFieldsEditorComponent_ng_container_0_Template","_r8","AddJoinFieldsEditorComponent_ng_container_0_Template_button_click_10_listener","AddJoinFieldsEditorComponent_ng_container_0_Template_button_click_13_listener","hasDuplicates","selectLabel","_c15","_c16","_c17","RecordDesignerComponent_ng_container_0_div_22_Template","RecordDesignerComponent_ng_container_0_div_22_Template_button_click_1_listener","openAddNewField","RecordDesignerComponent_ng_container_0_div_22_Template_button_click_4_listener","deleteSelectedField","vm_r9","isDeleteFieldButtonDisabled","RecordDesignerComponent_ng_container_0_div_23_button_6_Template","_r20","RecordDesignerComponent_ng_container_0_div_23_button_6_Template_button_click_0_listener","dataType_r18","addNewField","resourceType","isFieldsCustomizationAllowed","ɵɵattribute","shortName","displayName","RecordDesignerComponent_ng_container_0_div_23_Template","RecordDesignerComponent_ng_container_0_div_23_Template_button_click_7_listener","RecordDesignerComponent_ng_container_0_div_23_Template_button_click_10_listener","copySelectedField","dataTypes","isCopyFieldButtonDisabled","RecordDesignerComponent_ng_container_0_adapt_code_viewer_25_Template","definitionForJsonViewer","RecordDesignerComponent_ng_container_0_Template","_r28","RecordDesignerComponent_ng_container_0_Template_rx_designer_header_save_1_listener","saveDefinition","RecordDesignerComponent_ng_container_0_Template_rx_designer_header_closeDesigner_1_listener","closeDesigner","emit","RecordDesignerComponent_ng_container_0_Template_rx_designer_header_breadcrumbSelected_1_listener","onBreadcrumbSelected","RecordDesignerComponent_ng_container_0_Template_rx_designer_header_toggleDesignMode_1_listener","toggleDesignMode","RecordDesignerComponent_ng_container_0_Template_adapt_sidebar_isPanelOpenedCurrently_2_listener","onSidebarToggle","RecordDesignerComponent_ng_container_0_Template_rx_form_builder_modelChange_6_listener","onDefinitionModelChange","RecordDesignerComponent_ng_container_0_Template_rx_form_builder_formInitialized_6_listener","onFormInitialized","RecordDesignerComponent_ng_container_0_Template_rx_form_builder_editorEvent_6_listener","onEditorEvent","RecordDesignerComponent_ng_container_0_Template_rx_form_builder_modelChange_10_listener","onSelectedFieldModelChange","RecordDesignerComponent_ng_container_0_Template_rx_validation_issues_correctIssue_16_listener","ctx_r37","onCorrectIssue","RecordDesignerComponent_ng_container_0_Template_adapt_table_selectionChange_24_listener","onSelectionChange","bundleFriendlyName","isSaveButtonDisabled","breadcrumbItems","isDesignMode","definitionInspectorConfig","definitionModel","inspectorFocusEditor$","selectedFieldInspectorConfig","selectedFieldModel","selectedFieldGuid","hasValidationErrors","hasValidationWarnings","validationIssues","configuration","definitionName","definitionDisplayName","newTitle","isJoinOrExternalRecord","fieldGridRows","selectedFieldGridRows","RecordDesignerComponent_ng_template_2_span_0_Template","RecordDesignerComponent_ng_template_2_Template","dataItem_r39","isCoreField","RecordDesignerComponent_ng_template_4_Template","dataItem_r41","fieldOption","RecordDesignerComponent_ng_template_6_span_0_Template","RecordDesignerComponent_ng_template_6_Template","dataItem_r42","isInherited","RecordDesignerComponent_ng_template_8_Template","dataItem_r44","sourceRecord","RecordDesignerPageComponent_rx_record_designer_0_Template","_r2","RecordDesignerPageComponent_rx_record_designer_0_Template_rx_record_designer_definitionSaved_0_listener","onDefinitionSaved","RecordDesignerPageComponent_rx_record_designer_0_Template_rx_record_designer_definitionErrorLoading_0_listener","onDefinitionErrorLoading","RecordDesignerPageComponent_rx_record_designer_0_Template_rx_record_designer_closeDesigner_0_listener","onCloseDesigner","RecordCustomizationOptionsEditorComponent","constructor","rxModalService","activeModalRef","injector","translateService","getData","customizationControlProperties","initialCustomizationOptions","Object","values","isFieldsOverlayAllowedSubject","overlayOperation","operationTypes","createdInThisOverlayGroup","isPublicSubject","definitionScopes","public","areCustomizationOptionsDisabled$","pipe","isPublic","isFieldsOverlayAllowed","vm$","recordCustomizationOptionsEditorForm","control","markAsDirty","ngOnInit","header","instant","cellTemplate","recordFieldsColumnTemplate","headerClass","option","definitionScopeTypes","confirm","title","modalStyle","modalStyles","warning","message","then","result","closeModal","catch","definitionScopeNames","rxSelectionChangeEvent","next","assign","form","close","dismiss","CLOSE_BTN","ngOnDestroy","complete","ɵfac","RecordCustomizationOptionsEditorComponent_Factory","t","ɵɵdirectiveInject","RxModalService","ActiveModalRef","Injector","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","RecordCustomizationOptionsEditorComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","RecordCustomizationOptionsEditorComponent_Template","ɵɵtemplateRefExtractor","directives","NgIf","ɵNgNoValidate","NgControlStatusGroup","NgForm","AdaptRxSelectComponent","NgControlStatus","NgModel","AdaptRxCheckboxComponent","AdaptTableComponent","CheckboxControlValueAccessor","pipes","AsyncPipe","TranslatePipe","styles","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","templateUrl","styleUrls","OnPush","static","RecordCustomizationOptionsComponent","rxBundleCacheService","rxOverlayService","scopeNameSubject","scopeSelectionOptions$","getDefinitionScopeSelectionOptions","definitionScopeName$","scopeName","getDefinitionScopeName","updateValues","ngOnChanges","changes","getOverlayOperation","_a","overlayGroupId","overlayDescriptor","parentOverlayGroupId","setAllowOverlayLabel","openModal","blockKeyboard","overlayAllowedLabels","allowed","notAllowed","RecordCustomizationOptionsComponent_Factory","RxBundleCacheService","RxOverlayService","inputs","ɵɵProvidersFeature","provide","useExisting","multi","ɵɵNgOnChangesFeature","RecordCustomizationOptionsComponent_Template","AdaptButtonComponent","AdaptIconComponent","AdaptPopoverDirective","encapsulation","providers","RecordCustomizationOptionsModule","RecordCustomizationOptionsModule_Factory","ɵmod","ɵɵdefineNgModule","declarations","imports","exports","ɵinj","ɵɵdefineInjector","entryComponents","RxFieldDefinitionInspectorHelperService","rxFieldDefinitionService","rxRecordDefinitionService","isFieldEditable","fieldDefinition","isJoinedField","isPropertiesCustomizationEnabled","isNameEditable","isInheritedField","lastUpdateTime","isOverlayMode","isDescriptionEditable","isJoinRecord","joinRecordDefinitionCoreFieldIds","isRequiredEditable","isAlwaysRequiredNonSystemField","isExternalRecordField","alwaysRequiredNonSystemFieldIds","isSubmitEditable","isAuditRecordDefinition","arePermissionsEditable","coreFieldIds","isPermissionsCustomizationEnabled","displayId","AR_AUDIT_FIELD_IDS","allowPermissionsEdit","isAuditingEditable","isFieldIdDisabled","skipValidate","Boolean","isReservedField","isDefaultValueEditable","isLengthEditable","isEditable","isReadonlyField","AR_CORE_FIELD_IDS","isStoreEncryptedVisible","isCustomRecord","isStoreEncryptedEditable","keyFieldIds","isStoreHashedVisible","isStoreHashedEditable","isNamedListEditable","isFieldMappingEditable","RxFieldDefinitionInspectorHelperService_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","FieldOptionEditorComponent","isRequired","Required","System","Optional","ɵFieldOptionEditorComponent_BaseFactory","FieldOptionEditorComponent_Factory","ɵɵgetInheritedFactory","FieldOptionEditorComponent_Template","FieldOptionEditorComponent_Template_adapt_rx_switch_ngModelChange_2_listener","AdaptRxControlLabelComponent","AdaptRxSwitchComponent","RxBaseFieldDefinitionService","rxIdService","rxFieldDefinitionInspectorHelperService","getNewFieldDefinitionModel","fieldProperties","generate","description","fieldOptions","optional","defaultValue","getFieldInspectorConfig","fieldModel","label","controls","component","required","attachment","labelKey","boolean","dateOnly","dateTime","decimal","real","integer","localizedCharacter","selection","character","timeOnly","permissionScope","all","tooltip","shouldDisplayAsCheckbox","audit","isNewField","allowIntegerOnly","validate","issues","push","Error","propertyName","validDefinitionNameRegex","test","AR_MAX_RESERVED_FIELD_ID","Warning","maxInteger","max","RxAttachmentFieldDefinitionService","inspectorConfig","minValue","maxValue","RxAttachmentFieldDefinitionService_Factory","RxBooleanFieldDefinitionService","emptyOption","RxBooleanFieldDefinitionService_Factory","RxCharacterFieldDefinitionService","rxNumberUtilsService","NamedList","undefined","isFiniteOrNumberString","maxLength","Number","isRegularRecord","isExternalRecord","RxCharacterFieldDefinitionService_Factory","RxNumberUtilsService","RxDateOnlyFieldDefinitionService","RxDateOnlyFieldDefinitionService_Factory","RxDateTimeFieldDefinitionService","RxDateTimeFieldDefinitionService_Factory","RxNumericFieldDefinitionService","precision","minPrecision","maxPrecision","allowOnlyInteger","RxNumericFieldDefinitionService_Factory","RxDecimalFieldDefinitionService","arguments","minDecimal","maxDecimal","min","ɵRxDecimalFieldDefinitionService_BaseFactory","RxDecimalFieldDefinitionService_Factory","RxIntegerFieldDefinitionService","minInteger","splice","ɵRxIntegerFieldDefinitionService_BaseFactory","RxIntegerFieldDefinitionService_Factory","LocalizedCharacterFieldEditorComponent","localize","valueByLocale","hideCurrentLocale","LocalizedCharacterFieldEditorComponent_Factory","LocalizedCharacterFieldEditorComponent_Template","LocalizedCharacterFieldEditorComponent_Template_button_click_1_listener","RxLocalizedCharacterFieldDefinitionService","RxLocalizedCharacterFieldDefinitionService_Factory","RxRealFieldDefinitionService","AR_PRECISION_NONE","isFinite","ɵRxRealFieldDefinitionService_BaseFactory","RxRealFieldDefinitionService_Factory","RxSelectionFieldDefinitionService","selectionFieldOptionProperties","optionNamesById","RxSelectionFieldDefinitionService_Factory","RxTimeOnlyFieldDefinitionService","RxTimeOnlyFieldDefinitionService_Factory","RxFieldDefinitionManagerService","rxAttachmentFieldDefinitionService","rxBooleanFieldDefinitionService","rxCharacterFieldDefinitionService","rxLocalizedCharacterFieldDefinitionService","rxDateTimeFieldDefinitionService","rxDateOnlyFieldDefinitionService","rxTimeOnlyFieldDefinitionService","rxIntegerFieldDefinitionService","rxDecimalFieldDefinitionService","rxRealFieldDefinitionService","rxSelectionFieldDefinitionService","fieldServices","Map","set","RxFieldDefinitionManagerService_Factory","RecordInheritanceEditorComponent","rxFieldDefinitionManagerService","rxRecordDefinitionCacheService","rxNotificationService","rxGuidService","inheritingFrom","InheritableRecord","availableDefinitionPickerStates","definitionButtonsGroups","Bundle","All","search","destroyed$","isReadOnlySubject","isSharedInstanceStorageLockedSubject","inheritingFromSubject","isMakeFinalDisabledSubject","isSharedInstanceStorageDisabled$","inheritFromRecordDefinition$","recordDefinitionName","getRecordDefinition","inheritFromRecordDefinition","updateInheritanceOptions","state","inheritCoreFieldsAutomatically","isNew","inheritedFieldDefinitions","getInheritedFieldDefinitions","securityLabel","inherited","isCoreFieldsOptionDisabled$","inheritingFromRecordDefinition","lockCoreFieldInheritanceOption","addInfoMessage","newFieldProperties","resourceTypes","fieldDefinitions","optionLabelsById","arCoreFieldIds","recordInheritanceSelector","subscribe","editMode","RecordInheritanceEditorComponent_Factory","RxNotificationService","RxGuidService","RecordInheritanceEditorComponent_Template","RecordInheritanceEditorModule","RecordInheritanceEditorModule_Factory","SearchFieldEditorModalStore","isCategoryVisible","searchFields$","select","availableFields$","isDirty$","isValid$","updater","toggleValue","searchFieldItems","updateFields","updateAvailableFields","updatedSearchFields","availableField","invalid","fieldIndex","markDirty","SearchFieldEditorModalStore_Factory","SearchFieldEditorModalComponent","searchFieldsEditorModalStore","formBuilder","searchField","group","searchFieldName","category","searchCategoryName","searchFieldIndex","isSearchable","every","patchState","selectOption","SearchFieldEditorModalComponent_Factory","FormBuilder","SearchFieldEditorModalComponent_Template","AdaptAccordionComponent","NgForOf","FormGroupDirective","FormControlName","NgClass","AdaptRxTextfieldComponent","AdaptEmptyStateComponent","SearchFieldEditorControlComponent","searchFieldsSubject","asObservable","recordDefinitionModel","_b","searchFieldDefinitions","stripTagsForSearch","enableLiteralSearch","otherPropertiesOverlayType","overlayTypes","overwrite","isDeleteConfirmed","searchFieldsList","SearchFieldEditorControlComponent_Factory","SearchFieldEditorControlComponent_Template","SearchFieldEditorModule","SearchFieldEditorModule_Factory","init","loadDefinition","clearSearchFields","loadDefinitionSuccess","initDefinitionModel","markDesignerPristine","markDesignerDirty","updateDefinitionModelFromDesigner","updateSelectedFieldModel","setInspectorTabIndex","createNewFieldModel","addFieldModel","addNewFieldModels","setSelectedFieldGuid","clearSelectedFieldGuid","checkIfFieldUsedByIndexes","deleteSelectedFieldSuccess","deleteSelectedFieldError","saveDefinitionSuccess","destroy","RX_RECORD_DESIGNER","featureSelector","joinCriteriaPath","archiveDataCriteriaPath","archiving","types","doNotArchive","nameKey","None","archiveAndDeleteSourceRecord","CopyToArchiveAndDeleteFromSource","deleteSourceRecord","DeleteFromSource","recordDesignerStateSelector","recordDesignerModelSelector","recordDesignerState","model","definitionNameSelector","recordDesignerModel","bundleIdSelector","bundleId","isDesignModeSelector","isDirtySelector","inspectorTabIndexSelector","inspectorTabIndex","definitionModelSelector","definitionModelFromDefinitionSelector","definitionModelFromDefinition","selectedFieldGuidSelector","savedDefinitionNameSelector","savedDefinitionName","RxRecordDefinitionValidatorService","rxDefinitionNameService","duplicateFieldErrorMsg","definitionValidationIssues","fieldValidationIssueSections","clone","fieldModels","recordDefinitionTypes","regular","recordDefinitionType","fieldId","editFieldGroups","isAuditingEnabled","auditRecordDefinitionName","getDisplayName","isArchivingEnabled","archiveType","archiveRecordDefinitionName","weightedRelevancyFields","searchTitleField","TITLE","indexDefinitions","indexDefinitionModel","indexToEditIndex","RxRecordDefinitionValidatorService_Factory","RxDefinitionNameService","ArchiveAssociationSelectorComponent","actualAssociationsToFollow","selectedAssociationsToFollow","associationType","selectionType","associationTypes","followParent","FollowParent","selected","Selected","allEnforced","AllEnforced","associationGridRows","associationDefinitions","association","firstRecord","nodeAId","nodeBId","enforced","nodeAModality","modality","isSelectionDisabled","isAssociationSelectedInBase","specificAssociationNames","selectedAssociationGridRows","nameCellTemplate","enforceCellTemplate","selectAssociations","associationGridRow","selectedRows","disabledRowSelectionResolver","rowData","enableRowSelection","disableRowSelection","row","disableRowSelectionForEnforcedAssociations","selectAssociationsFromBase","selectedAssociationNames","ArchiveAssociationSelectorComponent_Factory","ArchiveAssociationSelectorComponent_Query","ArchiveAssociationSelectorComponent_Template","ArchiveAssociationSelectorComponent_Template_adapt_rx_radiobutton_group_ngModelChange_4_listener","ArchiveAssociationSelectorComponent_Template_adapt_table_selectionChange_13_listener","ArchiveAssociationSelectorComponent_Template_button_click_15_listener","ArchiveAssociationSelectorComponent_Template_button_click_18_listener","AdaptRxRadiobuttonGroupComponent","AdaptRxRadiobuttonComponent","RxDefinitionNamePipe","MissingArchiveDefinitionsModalComponent","missingAssociations","MissingArchiveDefinitionsModalComponent_Factory","MissingArchiveDefinitionsModalComponent_Template","MissingArchiveDefinitionsModalComponent_Template_button_click_12_listener","ArchiveAssociationsControlComponent","associationLabels","recordDefinitionNameSubject","associationToFollowSubject","associationDefinitions$","getRecordAssociationDefinitions","recordAssociationDefinitions","cardinality","manyToMany","validAssociations$","selectedAssociationType","selectedAssociations","validAssociations","missingAssociations$","associations","definition","archiveDescriptor","isEnabled","window","location","origin","innovationStudioBundleId","associationLabel$","associationToFollow","selectedAssociationLabel","prevDefinitionName","previousValue","currentDefinitionName","currentValue","openAssociationSelector","associationsToFollowForArchive","openMissingDefinitionsModal","ArchiveAssociationsControlComponent_Factory","ArchiveAssociationsControlComponent_Template","ArchiveAssociationsControlComponent_Template_button_click_1_listener","ArchiveAssociationsControlComponent_Template_adapt_button_click_12_listener","RecordIndexesEditorStore","indexes$","updateIndex","indexToUpdate","checkAvailableFields","payload","indexGuid","checkedFields","toggleSelectedFieldChecked","indexField","assignCheckedFields","indexToAssign","itemIndex","fieldOrder","unassignCheckedFields","sort","a","b","localeCompare","sortSelectedFields","removeField","initialize","indexesEditorOptions","indexOf","RecordIndexesEditorStore_Factory","RecordIndexesEditorComponent","recordIndexesEditorStore","ngAfterViewInit","accordionTabEls","nativeElement","scrollIntoView","block","removedField","$index","RecordIndexesEditorComponent_Factory","RecordIndexesEditorComponent_Query","RecordIndexesEditorComponent_Template","AdaptAlertComponent","AdaptRxListBuilderComponent","read","RecordIndexesControlComponent","Large","focus","RecordIndexesControlComponent_Factory","RecordIndexesControlComponent_Template","RecordIndexesControlComponent_Template_adapt_button_click_0_listener","RxRecordDesignerInspectorService","getDefinitionInspectorConfig","isNewDefinition","isPropertiesCustomizationAllowed","isIndexCustomizationAllowed","isPermissionsCustomizationAllowed","expressionConfigurator","configs","isDeleteSourceRecordOperation","archivingOptions","joinTypeOptions","joinTypes","joinType","weightedRelevancyEnvironment","weightedRelevancyKeywords","weightedRelevancyTitle","rows","toLowerCase","editorContexts","record","canBeAssociatedDisplayField","dataDictionary$","getDataDictionary","operators","getOperators","join","Record","RxRecordDesignerInspectorService_Factory","InheritanceIssueInfoComponent","InheritanceIssueInfoComponent_Factory","InheritanceIssueInfoComponent_Template","InheritanceIssueInfoComponent_Template_button_click_6_listener","InheritanceIssueInfoComponent_Template_button_click_9_listener","RxRecordDesignerService","rxLocalizationService","rxDateUtilService","getJoinCriteriaExpression","joinCriteria","primaryRecordDefinitionName","secondaryRecordDefinitionName","primaryFieldRegExp","RegExp","secondaryFieldRegExp","replace","sourceRecordTypes","primary","secondary","getJoinCriteriaArExpression","getDefinitionFromDefinitionModel","_c","allowNonAdminToDeleteRecordInstances","lastChangedBy","format","owner","permissions","shouldExportData","tags","version","ENVIRONMENT","KEYWORDS","displayFieldIdInAssociation","ageQualifierFieldId","ageQualifierInDays","archiveDescription","includeAttachments","archiveDataCriteria","auditDescriptor","auditDataCriteria","associatedAuditFieldsByAssociationName","auditSourceRecordDefinitionName","fieldTypeName","explicitPermissions","fieldMapping","auditOption","copy","namedListDefinition","shouldPersistEncrypted","shouldPersistHashed","pattern","anyUserAllowedToSubmit","defaultValueByLocale","getDefinitionModelFromDefinition","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","fullPermissions","indexDefinition","formatDate","localizableStringsByFieldId","recordSearchFields","recordInstancePrefix","recordTypeName","rowSecurityPropagations","upgradeVersion","customId","maxSize","RxRecordDesignerService_Factory","RxLocalizationService","RxDateUtilsService","RecordDesignerExpressionConfigurator","commonDataDictionary$","generalGroup","hidden","children","icon","expression","getDefaultConfig","AllClient","recordExpressionDataDictionary","expanded","AddJoinFieldsEditorComponent","notificationMessage","addedPrimaryFields","addedFields","addedSecondaryFields","primarySelectedFields$","valueChanges","secondarySelectedFields$","primaryAvailableFields$","getJoinFieldDefinitions","getSourceFieldId","secondaryAvailableFields$","duplicateNames$","primarySelectedFields","secondarySelectedFields","selectedPrimaryFieldNames","selectedSecondaryFieldNames","joinRecordDefinitionCoreFields","hasDuplicates$","duplicateNames","selectedFields$","nonRetainableFieldIds","selectedFieldIds","source","sourceFieldId","dismissible","headerText","numberOptionsText","checked","searchPlaceholder","sourceType","joinFieldDefinition","joinFieldMapping","AddJoinFieldsEditorComponent_Factory","AddJoinFieldsEditorComponent_Template","FormControlDirective","RecordDesignerComponent","store$","rxRecordDefinitionValidatorService","rxRecordDesignerInspectorService","rxGlobalCacheService","datePipe","rxRecordDesignerService","rxExpressionEditorService","definitionSaved","definitionErrorLoading","isInheritColumnHidden","isJoinRecordDefinition","inspectorTabIndexSubject","inspectorTabIndex$","selectedFieldGuid$","inspectorFocusEditorSubject","bundleId$","isDesignMode$","definitionModel$","bundleFriendlyName$","getBundleFriendlyName","definitionDisplayName$","updatedModel","definitionModelFromDefinition$","primaryRecordDefinition$","secondaryRecordDefinition$","joinRecordDataDictionary$","primaryRecordDefinition","secondaryRecordDefinition","records","compact","sortBy","item","toLocaleLowerCase","isNewDefinition$","isJoinRecordDefinition$","definitionFromDefinitionModel$","isFieldsCustomizationAllowed$","isCustomizationEnabled","isPropertiesCustomizationAllowed$","isPermissionsCustomizationAllowed$","isIndexCustomizationAllowed$","areNewDefinitionsAllowed$","areNewDefinitionsAllowed","isReadOnly$","addWarningMessage","definitionInspectorConfig$","fieldGridRows$","invertedSourceRecordTypes","transform","recordName","recordType","isExternalRecordDefinition$","selectedFieldGridRows$","selectedFieldModel$","selectedFieldInspectorConfig$","isJoinOrExternalRecord$","isExternalRecordDefinition","validationIssues$","hasValidationErrors$","issueSections","hasValidationWarnings$","isSaveButtonDisabled$","breadcrumbItems$","definitionForJsonViewer$","overriddenRecordProperties$","acc","overriddenRecordFields","isDeleteFieldButtonDisabled$","isFieldInUserOverlay","isCopyFieldButtonDisabled$","isBundleEditable","isInheritColumnHidden$","registerConsumer","adaptSidebarComponent","openPanel","dispatch","configureForProperty","propertyPath","inheritedCellTemplate","dataTypeCellTemplate","requiredCellTemplate","event","events","openExpressionEditor","property","path","legend","definitionModelFromDesigner","newDefinitionModel","newSelectedFieldModel","newFieldModels","newField","canDeactivate","create","update","response","validationIssue","setTimeout","editorName","RecordDesignerComponent_Factory","Store","RxGlobalCacheService","RxExpressionEditorService","RecordDesignerComponent_Query","outputs","RecordDesignerComponent_Template","RxDesignerHeaderComponent","AdaptSidebarItemComponent","FormBuilderComponent","RxValidationIssuesComponent","AdaptDropdownDirective","AdaptDropdownToggleDirective","AdaptDropdownMenuDirective","AdaptCodeViewerComponent","JsonPipe","RxRecordDefinitionFieldOptionPipe","initialDefinitionModel","initialState","reducer","updatedDefinitionModel","differenceBy","customizationOptionField","customizationOptionsField","newFieldModel","recordDesignerModelReducer","action","RecordDesignerEffects","actions$","initRecordDesigner$","loadDefinition$","getNew","loadDefinitionSuccess$","createNewFieldModel$","newFieldName","fieldNameSuffix","defaultFieldName","clearSearchFields$","addNewFieldModel$","copySelectedField$","selectedField","selectedFieldCopy","fieldName","deleteSelectedField$","checkIfFieldUsedByIndexes$","isUsedByIndexes","alert","saveDefinitionSuccess$","addSuccessMessage","clearSelectedField$","markPristine$","markDirty$","RecordDesignerEffects_Factory","Actions","RecordDesignerModule","RecordDesignerModule_Factory","StoreFeatureModule","EffectsFeatureModule","forFeature","RecordDesignerPageComponent","activatedRoute","rxUtilityModalsService","rxPageTitleService","router","rxComponentCanDeactivateGuard","isInitialized","setPageComponent","subscription","params","getBundleId","isNewRecord","unsubscribe","navigate","relativeTo","parent","recordDesignerComponent","confirmDeactivation","confirmUnsavedChanges","RecordDesignerPageComponent_Factory","ActivatedRoute","RxUtilityModalsService","RxPageTitleService","Router","RxComponentCanDeactivateGuard","RecordDesignerPageComponent_Query","RecordDesignerPageComponent_Template","RecordDesignerPageModule","RecordDesignerPageModule_Factory"],"sources":["C:/projects/BMC-Helix-Angular-prod/bundle/src/main/webapp/node_modules/@helix/platform/fesm2015/helix-platform-record-designer.js"],"sourcesContent":["import * as i5 from '@angular/common';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewChild, Input, NgModule, Injectable, ElementRef, ViewChildren, EventEmitter, Output } from '@angular/core';\nimport * as i6 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule, ReactiveFormsModule, Validators, FormControl } from '@angular/forms';\nimport * as i3 from '@bmc-ux/adapt-angular';\nimport { DismissReasons, AdaptTooltipModule, AdaptRxSelectModule, AdaptButtonModule, AdaptPopoverModule, AdaptIconModule, AdaptRxCheckboxModule, AdaptRxFormControlModule, AdaptRxTextfieldModule, AdaptAccordionModule, AdaptEmptyStateModule, AdaptAccordionTabComponent, AdaptSidebarComponent, AdaptCodeViewerModule, AdaptRxLabelModule, AdaptTabsModule, AdaptBusyModule, AdaptDropdownModule, AdaptSidebarModule, AdaptAlertModule, AdaptRxRadiobuttonModule, AdaptRxSwitchModule, AdaptRxListBuilderModule } from '@bmc-ux/adapt-angular';\nimport * as i4 from '@bmc-ux/adapt-table';\nimport { AdaptTableModule } from '@bmc-ux/adapt-table';\nimport * as i3$1 from '@helix/platform/record/api';\nimport { RX_RECORD_DEFINITION, RecordFieldOption, RxFieldDefinitionService, RxRecordDefinitionService, ArchiveType, AssociationSelectionType, RxRecordDefinitionCacheService, RxRecordDefinitionFieldOptionPipeModule } from '@helix/platform/record/api';\nimport * as i2$1 from '@helix/platform/shared/api';\nimport { RX_OVERLAY, RX_BUNDLE, RX_PERMISSION, Tooltip, RX_APPLICATION, RxExpressionConfigurator, ExpressionOperatorRowsByGroup, ExpressionOperatorGroup, RxDefinitionModule } from '@helix/platform/shared/api';\nimport * as i11 from '@helix/platform/shared/components';\nimport { ValueAccessor, TextFormControlComponent, TextareaFormControlComponent, SelectFormControlComponent, SwitchFormControlComponent, RxPermissionEditorComponent, LabelFormControlComponent, BooleanFormControlComponent, CounterFormControlComponent, RxDefinitionPickerComponent, RxDefinitionPickerType, DateFormControlComponent, DateTimeFormControlComponent, LocalizedCharacterFieldValueModalComponent, SelectionFieldOptionsComponent, TimeFormControlComponent, RxDefinitionPickerScope, RxDefinitionPickerModule, RxRevertCustomizationComponent, ExpressionFormControlComponent, RX_EXPRESSION_EDITOR, RxDesignerHeaderModule, RxFormBuilderModule } from '@helix/platform/shared/components';\nimport * as i1 from '@helix/platform/ui-kit';\nimport { RxModalClass, RX_MODAL, ValidationIssueType, RxModalModule, RxValidationIssuesModule } from '@helix/platform/ui-kit';\nimport { RecordGridModule } from '@helix/platform/view/components';\nimport * as i2 from '@ngx-translate/core';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { AdaptCheckbox2Module } from '@bmc-ux/obsolete';\nimport { includes, cloneDeep, find, noop, isEmpty, trim, isNumber, inRange, size, isNil, omitBy, forEach, union, keys, map as map$1, pick, remove, some, chain, reverse, reject, filter as filter$1, get, findIndex, omit, orderBy, intersection, concat, invert, capitalize, intersectionBy, isNull, isUndefined, isEqual, mapValues } from 'lodash';\nimport { BehaviorSubject, combineLatest, ReplaySubject, iif, of, forkJoin, Subject, from } from 'rxjs';\nimport { map, tap, mergeMap, switchMap, take, filter, shareReplay, defaultIfEmpty, startWith, takeUntil, pluck, distinctUntilChanged, withLatestFrom, scan, skip } from 'rxjs/operators';\nimport * as i1$1 from '@helix/platform/utils';\nimport { RxIdService, RX_NUMBER } from '@helix/platform/utils';\nimport { ComponentStore } from '@ngrx/component-store';\nimport * as i1$2 from '@ngrx/store';\nimport { createAction, props, createFeatureSelector, createSelector, createReducer, on, StoreModule } from '@ngrx/store';\nimport { RX_ASSOCIATION_DEFINITION } from '@helix/platform/association/api';\nimport { OpenViewActionModalSize } from '@helix/platform/view/api';\nimport moment from 'moment-es6';\nimport * as i2$2 from '@ngrx/effects';\nimport { createEffect, ofType, EffectsModule } from '@ngrx/effects';\nimport * as i1$3 from '@angular/router';\n\nclass RecordCustomizationOptionsEditorComponent extends RxModalClass {\n    constructor(rxModalService, activeModalRef, injector, translateService) {\n        super(activeModalRef, injector);\n        this.rxModalService = rxModalService;\n        this.activeModalRef = activeModalRef;\n        this.injector = injector;\n        this.translateService = translateService;\n        this.data = this.activeModalRef.getData();\n        this.scopeSelectionOptions = this.data.scopeSelectionOptions;\n        this.recordDefinition = this.data.recordDefinition;\n        this.customizationControlProperties = [\n            'allowPermissionsOverlay',\n            'allowOtherPropertiesOverlay',\n            'allowIndexesOverlay',\n            'allowFieldsOverlay'\n        ];\n        this.initialCustomizationOptions = this.recordDefinition.customizationOptions;\n        this.allowOverlay = includes(Object.values(this.initialCustomizationOptions), true);\n        this.fields = cloneDeep(this.recordDefinition.fields);\n        this.customizationOptions = {\n            allowOtherPropertiesOverlay: this.initialCustomizationOptions.allowOtherPropertiesOverlay || false,\n            allowPermissionsOverlay: this.initialCustomizationOptions.allowPermissionsOverlay || false,\n            allowIndexesOverlay: this.initialCustomizationOptions.allowIndexesOverlay || false,\n            allowFieldsOverlay: this.initialCustomizationOptions.allowFieldsOverlay || false\n        };\n        this.isFieldsOverlayAllowedSubject = new BehaviorSubject(this.initialCustomizationOptions.allowFieldsOverlay);\n        this.isDisabled = this.data.overlayOperation !== RX_OVERLAY.operationTypes.createdInThisOverlayGroup;\n        this.definitionScopeName = find(this.scopeSelectionOptions, { name: this.data.definitionScopeName });\n        this.scope = [this.definitionScopeName];\n        this.isPublicSubject = new BehaviorSubject(this.scope[0].id === RX_BUNDLE.definitionScopes.public.type);\n        this.areCustomizationOptionsDisabled$ = this.isPublicSubject.pipe(map((isPublic) => !isPublic || this.isDisabled));\n        this.isFieldsOverlayDisabled$ = combineLatest([\n            this.areCustomizationOptionsDisabled$,\n            this.isFieldsOverlayAllowedSubject\n        ]).pipe(map(([areCustomizationOptionsDisabled, isFieldsOverlayAllowed]) => areCustomizationOptionsDisabled || !isFieldsOverlayAllowed));\n        this.vm$ = this.areCustomizationOptionsDisabled$.pipe(map((areCustomizationOptionsDisabled) => ({ areCustomizationOptionsDisabled })));\n    }\n    onFieldsPropertyChange() {\n        this.recordCustomizationOptionsEditorForm.control.markAsDirty();\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this.columns = [\n            {\n                field: 'name',\n                header: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label')\n            },\n            {\n                field: 'allowOtherPropertiesOverlay',\n                header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.scope-customization-options.allow-properties-customization.label'),\n                cellTemplate: this.recordFieldsColumnTemplate,\n                headerClass: 'pl-6'\n            },\n            {\n                field: 'allowPermissionsOverlay',\n                header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.scope-customization-options.allow-permissions-customization.label'),\n                cellTemplate: this.recordFieldsColumnTemplate,\n                headerClass: 'pl-6'\n            }\n        ];\n    }\n    optionFormatter(option) {\n        return option.name;\n    }\n    save() {\n        if (this.scope[0].id === RX_BUNDLE.definitionScopeTypes.public) {\n            this.rxModalService\n                .confirm({\n                title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n                modalStyle: RX_MODAL.modalStyles.warning,\n                message: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.scope-customization-options.definition-scope-to-public.warning')\n            })\n                .then((result) => {\n                if (result) {\n                    this.closeModal();\n                }\n            })\n                .catch(noop);\n        }\n        else if (this.data.definitionScopeName === RX_BUNDLE.definitionScopeNames.public) {\n            this.rxModalService\n                .confirm({\n                title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n                modalStyle: RX_MODAL.modalStyles.warning,\n                message: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.scope-customization-options.change-scope-from-public-warning.message')\n            })\n                .then((result) => {\n                if (result) {\n                    this.closeModal();\n                }\n            })\n                .catch(noop);\n        }\n        else {\n            this.closeModal();\n        }\n    }\n    onScopeChange(rxSelectionChangeEvent) {\n        this.isPublicSubject.next(rxSelectionChangeEvent[0].id === RX_BUNDLE.definitionScopes.public.type);\n    }\n    closeModal() {\n        const result = Object.assign(Object.assign({}, this.recordCustomizationOptionsEditorForm.form.value), { fields: this.fields });\n        result.scope = result.scope[0].id;\n        this.activeModalRef.close(result);\n    }\n    cancel() {\n        this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n    }\n    handleAllowOverlayChange() {\n        Object.keys(this.customizationOptions).forEach((option) => (this.customizationOptions[option] = this.allowOverlay));\n        this.isFieldsOverlayAllowedSubject.next(this.allowOverlay);\n    }\n    onRecordCustomizationOptionChange() {\n        this.allowOverlay =\n            this.customizationOptions.allowFieldsOverlay ||\n                this.customizationOptions.allowIndexesOverlay ||\n                this.customizationOptions.allowOtherPropertiesOverlay ||\n                this.customizationOptions.allowPermissionsOverlay;\n        this.isFieldsOverlayAllowedSubject.next(this.customizationOptions.allowFieldsOverlay);\n    }\n    isDirty() {\n        return this.recordCustomizationOptionsEditorForm.dirty;\n    }\n    ngOnDestroy() {\n        this.isFieldsOverlayAllowedSubject.complete();\n        this.isPublicSubject.complete();\n    }\n}\nRecordCustomizationOptionsEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordCustomizationOptionsEditorComponent, deps: [{ token: i1.RxModalService }, { token: i3.ActiveModalRef }, { token: i0.Injector }, { token: i2.TranslateService }], target: i0.ɵɵFactoryTarget.Component });\nRecordCustomizationOptionsEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: RecordCustomizationOptionsEditorComponent, selector: \"rx-record-customization-options-editor\", viewQueries: [{ propertyName: \"recordCustomizationOptionsEditorForm\", first: true, predicate: [\"recordCustomizationOptionsEditorForm\"], descendants: true }, { propertyName: \"recordFieldsColumnTemplate\", first: true, predicate: [\"recordFieldsColumnTemplate\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<ng-container *ngIf=\\\"vm$ | async as vm\\\">\\n  <div class=\\\"designer-modal-body modal-body\\\">\\n    <form #recordCustomizationOptionsEditorForm=\\\"ngForm\\\">\\n      <div class=\\\"w-25\\\">\\n        <adapt-rx-select\\n          label=\\\"{{\\n            'com.bmc.arsys.rx.client.record-designer.scope-customization-options-editor.scope.label' | translate\\n          }}\\\"\\n          rx-id=\\\"scope-selection\\\"\\n          [options]=\\\"scopeSelectionOptions\\\"\\n          [optionFormatter]=\\\"optionFormatter\\\"\\n          [tooltip]=\\\"{\\n            iconName: 'question_circle_o',\\n            content: 'com.bmc.arsys.rx.client.designer.scope-customization-options.scope.tooltip' | translate,\\n            placement: 'bottom',\\n            popoverMode: true\\n          }\\\"\\n          name=\\\"scope\\\"\\n          [(ngModel)]=\\\"scope\\\"\\n          (ngModelChange)=\\\"onScopeChange($event)\\\"\\n          [disabled]=\\\"isDisabled\\\"\\n        >\\n        </adapt-rx-select>\\n      </div>\\n\\n      <div class=\\\"w-100\\\">\\n        <h5>{{ 'com.bmc.arsys.rx.client.customization-options-editor.customization-options.label' | translate }}</h5>\\n        <adapt-rx-checkbox\\n          label=\\\"{{\\n            'com.bmc.arsys.rx.client.customization-options-editor.allow-future-customization.label'\\n              | translate: { definitionType: data.definitionTypeDisplayName }\\n          }}\\\"\\n          rx-id=\\\"allow-customization-checkbox\\\"\\n          name=\\\"allowOverlay\\\"\\n          [(ngModel)]=\\\"allowOverlay\\\"\\n          (ngModelChange)=\\\"handleAllowOverlayChange()\\\"\\n          [disabled]=\\\"vm.areCustomizationOptionsDisabled\\\"\\n        >\\n        </adapt-rx-checkbox>\\n      </div>\\n\\n      <div class=\\\"w-100\\\">\\n        <h6>\\n          {{\\n            'com.bmc.arsys.rx.client.record-designer.scope-customization-options.allow-future-customizations-to.label'\\n              | translate\\n          }}\\n        </h6>\\n\\n        <div class=\\\"w-100 d-flex\\\">\\n          <div class=\\\"w-50\\\">\\n            <div>\\n              <adapt-rx-checkbox\\n                label=\\\"{{\\n                  'com.bmc.arsys.rx.client.record-designer.scope-customization-options.properties.label' | translate\\n                }}\\\"\\n                name=\\\"allowOtherPropertiesOverlay\\\"\\n                [(ngModel)]=\\\"customizationOptions.allowOtherPropertiesOverlay\\\"\\n                (ngModelChange)=\\\"onRecordCustomizationOptionChange()\\\"\\n                [disabled]=\\\"vm.areCustomizationOptionsDisabled\\\"\\n                rx-id=\\\"properties-checkbox\\\"\\n              >\\n              </adapt-rx-checkbox>\\n            </div>\\n\\n            <div>\\n              <adapt-rx-checkbox\\n                label=\\\"{{\\n                  'com.bmc.arsys.rx.client.record-designer.scope-customization-options.permissions.label' | translate\\n                }}\\\"\\n                name=\\\"allowPermissionsOverlay\\\"\\n                [(ngModel)]=\\\"customizationOptions.allowPermissionsOverlay\\\"\\n                (ngModelChange)=\\\"onRecordCustomizationOptionChange()\\\"\\n                [disabled]=\\\"vm.areCustomizationOptionsDisabled\\\"\\n                rx-id=\\\"permissions-checkbox\\\"\\n              >\\n              </adapt-rx-checkbox>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"w-50\\\">\\n            <div>\\n              <adapt-rx-checkbox\\n                label=\\\"{{\\n                  'com.bmc.arsys.rx.client.record-designer.scope-customization-options.search-indexes.label' | translate\\n                }}\\\"\\n                name=\\\"allowIndexesOverlay\\\"\\n                [(ngModel)]=\\\"customizationOptions.allowIndexesOverlay\\\"\\n                (ngModelChange)=\\\"onRecordCustomizationOptionChange()\\\"\\n                [disabled]=\\\"vm.areCustomizationOptionsDisabled\\\"\\n                rx-id=\\\"search-indexes-checkbox\\\"\\n              >\\n              </adapt-rx-checkbox>\\n            </div>\\n\\n            <div>\\n              <adapt-rx-checkbox\\n                label=\\\"{{\\n                  'com.bmc.arsys.rx.client.record-designer.scope-customization-options.fields.label' | translate\\n                }}\\\"\\n                name=\\\"allowFieldsOverlay\\\"\\n                [(ngModel)]=\\\"customizationOptions.allowFieldsOverlay\\\"\\n                (ngModelChange)=\\\"onRecordCustomizationOptionChange()\\\"\\n                [disabled]=\\\"vm.areCustomizationOptionsDisabled\\\"\\n                rx-id=\\\"fields-checkbox\\\"\\n              >\\n              </adapt-rx-checkbox>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <adapt-table\\n        [value]=\\\"fields\\\"\\n        [columns]=\\\"columns\\\"\\n        [scrollable]=\\\"true\\\"\\n        scrollHeight=\\\"340px\\\"\\n        [sortable]=\\\"false\\\"\\n        [resizableColumns]=\\\"false\\\"\\n        [bordered]=\\\"false\\\"\\n        [filterable]=\\\"false\\\"\\n        [dataKey]=\\\"'name'\\\"\\n      >\\n      </adapt-table>\\n    </form>\\n  </div>\\n\\n  <div class=\\\"modal-footer\\\">\\n    <button\\n      class=\\\"btn btn-primary\\\"\\n      rx-id=\\\"save-button\\\"\\n      (click)=\\\"save()\\\"\\n      type=\\\"button\\\"\\n      [disabled]=\\\"!recordCustomizationOptionsEditorForm.dirty\\\"\\n    >\\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\\n    </button>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"cancel()\\\" rx-id=\\\"cancel-button\\\">\\n      {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\\n    </button>\\n  </div>\\n</ng-container>\\n\\n<ng-template #recordFieldsColumnTemplate let-dataItem=\\\"dataItem\\\" let-column=\\\"column\\\">\\n  <div class=\\\"checkbox m-0 pl-4\\\">\\n    <div class=\\\"checkbox__label pl-6 ml-6\\\">\\n      <label>\\n        <input\\n          type=\\\"checkbox\\\"\\n          role=\\\"checkbox\\\"\\n          class=\\\"checkbox__input\\\"\\n          [(ngModel)]=\\\"dataItem[column.field]\\\"\\n          [disabled]=\\\"isFieldsOverlayDisabled$ | async\\\"\\n          (change)=\\\"onFieldsPropertyChange()\\\"\\n        />\\n\\n        <div class=\\\"checkbox__item\\\"></div>\\n      </label>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\":root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}.designer-modal-body{height:645px;min-height:calc(100% - 61px)!important}.designer-modal-accordion-wrapper{display:flex;flex-direction:column;height:100%;overflow:auto;padding-top:10px}.designer-modal-accordion-content{position:relative}.designer-modal-accordion-content.cdk-drag-preview{z-index:1200!important}.designer-modal-drag-handle{cursor:move;position:absolute;top:0;left:0;height:46px;padding:14px 10px 14px 14px;z-index:1}.designer-modal-card-title-content{width:100%;display:flex}.designer-modal-card-title-content .left-header-block,.designer-modal-card-title-content .right-header-block{display:flex;align-items:center}.designer-modal-card-title-content .left-header-block{flex-grow:1;min-width:0;font-size:14px;padding-left:22px}.designer-modal-card-sub-title{color:#7c7f81;font-weight:normal}.designer-modal-card-title-index-buttons{display:flex;font-size:19px}.rx-card{overflow:auto}.rx-tree-draggable-node{cursor:pointer}.rx-tree-draggable-node.cdk-drag-preview{z-index:1200!important}.rx-tree-draggable-node.cdk-drag{opacity:1}.rx-tree-node-label{word-break:break-all}rx-form-builder{max-width:400px}\\n\"], components: [{ type: i3.AdaptRxSelectComponent, selector: \"adapt-rx-select\", inputs: [\"options\", \"emptyOption\", \"optionFormatter\", \"optionContentTemplate\", \"disabledOptionResolver\", \"titleFormatter\", \"focusFirst\", \"texts\", \"multiple\", \"singleSelectStyle\", \"enableFilter\", \"inline\", \"selectAllButton\", \"deselectAllButton\", \"loadMoreButton\", \"loadMoreCallback\", \"loadMoreInProgress\", \"loadingState\", \"placeholder\", \"size\", \"closeOnSelect\", \"placement\", \"appendToBody\", \"popupMaxHeight\", \"popupClass\", \"pageSize\", \"ariaInvalid\", \"virtualScroll\", \"virtualScrollItemSize\", \"virtualScrollTemplateCacheSize\", \"minBufferPx\", \"maxBufferPx\"], outputs: [\"onSelectionChange\", \"onPopupOpenChange\", \"onFilterValueChange\"] }, { type: i3.AdaptRxCheckboxComponent, selector: \"adapt-rx-checkbox\", inputs: [\"value\", \"checked\", \"indeterminate\"], outputs: [\"indeterminateChange\"] }, { type: i4.AdaptTableComponent, selector: \"adapt-table\", inputs: [\"sortable\", \"filterable\", \"triggerableFilters\", \"explicitSearchBtn\", \"enableReorderableRows\", \"suppressTooltip\", \"toolbarConfig\", \"dataColumnsColsTemplate\", \"dataColumnsHeaderTemplate\", \"dataColumnsDataCellsTemplate\", \"headerGroupsTemplate\", \"alwaysShowHeaderTooltip\", \"alwaysShowCellTooltip\", \"expandedCellClass\", \"expandedGroupsKeys\", \"nestedGroupPadding\", \"expandindCellInitialPadding\", \"groupValueDataCellTemplate\", \"tooltipInitialDelayMs\", \"tooltipClass\", \"rowsCustomClass\", \"paginatorAlign\", \"hasEmptyState\", \"enableInfiniteScrolling\", \"updateFirstColumnWidth\", \"busyConfig\", \"defaultFiltersMatchMode\", \"wrapCellText\", \"minBufferPx\", \"maxBufferPx\", \"testID\", \"headerSelectionMode\", \"disabledSelectedRowsCount\", \"disabledNotSelectedRowsCount\", \"disabledSelectedFilteredRowsCount\", \"disabledNotSelectedFilteredRowsCount\", \"selectedFilteredRowsCount\", \"totalRecordsInGroup\", \"disableRowSelection\", \"nestingStructureData\", \"nestingKey\", \"enableRowEditing\", \"autoScrollToTop\", \"paginationTexts\", \"toolbarTexts\", \"tableTexts\", \"filtersTexts\", \"headerCellMenuTexts\", \"texts\", \"loadingMore\", \"mergeColumns\", \"disabledRowSelectionResolver\", \"allowColumnReorderingResolver\", \"disableRowExpandingResolver\", \"rowAriaDataResolver\", \"tableWidthConfig\", \"expandedRowTemplate\", \"isRefreshingRowData\", \"value\", \"bordered\", \"paginator\", \"striped\", \"loading\"], outputs: [\"onLazyLoad\", \"rowDataRefresh\", \"savedRowEditing\", \"canceledRowEditing\", \"groupSelection\", \"allGroupedRowsSelection\", \"groupExpansion\", \"columnsVisibilityChange\", \"rowDragStart\", \"rowDragRelease\", \"rowDragEnd\", \"rowDragDrop\", \"export\", \"toolbarPopupAnimationDone\"] }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i6.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i6.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i6.NgForm, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: [\"ngFormOptions\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i6.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i6.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i6.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }], pipes: { \"async\": i5.AsyncPipe, \"translate\": i2.TranslatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordCustomizationOptionsEditorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-record-customization-options-editor',\n                    templateUrl: './record-customization-options-editor.component.html',\n                    styleUrls: ['./record-customization-options-editor.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i1.RxModalService }, { type: i3.ActiveModalRef }, { type: i0.Injector }, { type: i2.TranslateService }]; }, propDecorators: { recordCustomizationOptionsEditorForm: [{\n                type: ViewChild,\n                args: ['recordCustomizationOptionsEditorForm']\n            }], recordFieldsColumnTemplate: [{\n                type: ViewChild,\n                args: ['recordFieldsColumnTemplate', { static: true }]\n            }] } });\n\nclass RecordCustomizationOptionsComponent extends ValueAccessor {\n    constructor(rxModalService, rxBundleCacheService, rxOverlayService, translateService) {\n        super();\n        this.rxModalService = rxModalService;\n        this.rxBundleCacheService = rxBundleCacheService;\n        this.rxOverlayService = rxOverlayService;\n        this.translateService = translateService;\n        this.scopeNameSubject = new BehaviorSubject('');\n        this.scopeSelectionOptions$ = this.rxBundleCacheService.getDefinitionScopeSelectionOptions().pipe(map((scopeSelectionOptions) => scopeSelectionOptions), tap((scopeSelectionOptions) => (this.scopeSelectionOptions = scopeSelectionOptions)));\n        this.definitionScopeName$ = this.scopeNameSubject.pipe(mergeMap((scopeName) => this.rxBundleCacheService.getDefinitionScopeName(scopeName).pipe(map((definitionScopeName) => definitionScopeName), tap((definitionScopeName) => (this.definitionScopeName = definitionScopeName)))));\n        this.vm$ = combineLatest([this.definitionScopeName$, this.scopeSelectionOptions$]).pipe(map(([definitionScopeName, scopeSelectionOptions]) => ({\n            definitionScopeName,\n            scopeSelectionOptions\n        })));\n    }\n    ngOnInit() {\n        if (this.options) {\n            this.updateValues();\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes.options) {\n            this.updateValues();\n        }\n    }\n    getOverlayOperation() {\n        var _a;\n        return this.rxOverlayService.getOverlayOperation(this.options.recordDefinition.overlayGroupId, ((_a = this.options.recordDefinition.overlayDescriptor) === null || _a === void 0 ? void 0 : _a.parentOverlayGroupId) || null);\n    }\n    updateValues() {\n        this.setAllowOverlayLabel(this.options.recordDefinition.customizationOptions.allowOtherPropertiesOverlay);\n        this.scopeNameSubject.next(this.options.recordDefinition.customizationOptions.scope);\n        if (this.options.recordDefinition.overlayGroupId) {\n            this.overlayOperation = this.getOverlayOperation();\n        }\n        else {\n            this.overlayOperation = RX_OVERLAY.operationTypes.createdInThisOverlayGroup;\n        }\n    }\n    openCustomizationOptionsEditor() {\n        this.rxModalService\n            .openModal({\n            title: this.translateService.instant('com.bmc.arsys.rx.client.designer.scope-customization-options.title'),\n            content: RecordCustomizationOptionsEditorComponent,\n            blockKeyboard: false,\n            data: {\n                definitionScopeName: this.definitionScopeName,\n                allowOverlay: this.options.recordDefinition.customizationOptions.allowOtherPropertiesOverlay,\n                scopeSelectionOptions: this.scopeSelectionOptions,\n                isDisabled: this.options.isDisabled,\n                overlayOperation: this.overlayOperation,\n                definitionTypeDisplayName: this.options.definitionTypeDisplayName,\n                recordDefinition: this.options.recordDefinition\n            }\n        })\n            .then((result) => {\n            this.setAllowOverlayLabel(result.allowOverlay);\n            this.definitionScopeName = this.scopeSelectionOptions.find((value) => value.id === result.scope).name;\n            this.value = result;\n        })\n            .catch(noop);\n    }\n    setAllowOverlayLabel(allowOverlay) {\n        this.allowOverlayLabel = allowOverlay\n            ? RX_OVERLAY.overlayAllowedLabels.allowed\n            : RX_OVERLAY.overlayAllowedLabels.notAllowed;\n    }\n    ngOnDestroy() {\n        this.scopeNameSubject.complete();\n    }\n}\nRecordCustomizationOptionsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordCustomizationOptionsComponent, deps: [{ token: i1.RxModalService }, { token: i2$1.RxBundleCacheService }, { token: i2$1.RxOverlayService }, { token: i2.TranslateService }], target: i0.ɵɵFactoryTarget.Component });\nRecordCustomizationOptionsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: RecordCustomizationOptionsComponent, selector: \"rx-scope-record-customization-control\", inputs: { options: \"options\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: RecordCustomizationOptionsComponent,\n            multi: true\n        }\n    ], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-container *ngIf=\\\"vm$ | async as vm\\\">\\n  <adapt-button\\n    btn-type=\\\"tertiary\\\"\\n    rx-id=\\\"open-customization-options-editor-link\\\"\\n    (click)=\\\"openCustomizationOptionsEditor()\\\"\\n    class=\\\"p-0\\\"\\n  >\\n    {{ 'com.bmc.arsys.rx.client.designer.scope-customization-options.title' | translate }}\\n  </adapt-button>\\n\\n  <adapt-icon\\n    name=\\\"question_circle_o\\\"\\n    class=\\\"ml-2\\\"\\n    placement=\\\"right\\\"\\n    [adaptPopover]=\\\"'com.bmc.arsys.rx.client.designer.scope-customization-options.scope.tooltip' | translate\\\"\\n  >\\n  </adapt-icon>\\n\\n  <p rx-id=\\\"scope\\\" class=\\\"mb-0 pt-2\\\">\\n    {{\\n      'com.bmc.arsys.rx.client.designer.scope-customization-options.scope.label'\\n        | translate: { definitionScopeName: vm.definitionScopeName }\\n    }}\\n  </p>\\n\\n  <div rx-id=\\\"customization\\\" class=\\\"pt-2\\\">\\n    {{\\n      'com.bmc.arsys.rx.client.designer.scope-customization-options.customization.label'\\n        | translate: { allowOverlayLabel: allowOverlayLabel }\\n    }}\\n  </div>\\n</ng-container>\\n\", components: [{ type: i3.AdaptButtonComponent, selector: \"adapt-button, button[adapt-button], a[adapt-button]\", inputs: [\"btn-type\", \"size\", \"disabled\", \"type\", \"tabIndex\"], exportAs: [\"adaptBtn\"] }, { type: i3.AdaptIconComponent, selector: \"adapt-icon\", inputs: [\"name\", \"classList\", \"description\", \"testID\"] }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.AdaptPopoverDirective, selector: \"[adaptPopover]\", inputs: [\"adaptPopover\", \"popoverTitle\", \"placement\", \"fallbackPlacement\", \"triggers\", \"container\", \"appendToBody\", \"closeBtn\", \"popupDelay\", \"disablePopover\", \"popoverClass\", \"autoClose\", \"closeOnOutOfView\", \"maxWidth\", \"minWidth\"], outputs: [\"shown\", \"hidden\"], exportAs: [\"adaptPopover\"] }], pipes: { \"async\": i5.AsyncPipe, \"translate\": i2.TranslatePipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordCustomizationOptionsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-scope-record-customization-control',\n                    templateUrl: './record-customization-options.component.html',\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: RecordCustomizationOptionsComponent,\n                            multi: true\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i1.RxModalService }, { type: i2$1.RxBundleCacheService }, { type: i2$1.RxOverlayService }, { type: i2.TranslateService }]; }, propDecorators: { options: [{\n                type: Input\n            }] } });\n\nclass RecordCustomizationOptionsModule {\n}\nRecordCustomizationOptionsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordCustomizationOptionsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRecordCustomizationOptionsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordCustomizationOptionsModule, declarations: [RecordCustomizationOptionsComponent, RecordCustomizationOptionsEditorComponent], imports: [CommonModule,\n        FormsModule,\n        AdaptTooltipModule,\n        AdaptRxSelectModule,\n        AdaptButtonModule,\n        AdaptCheckbox2Module,\n        AdaptPopoverModule,\n        AdaptIconModule,\n        AdaptRxCheckboxModule,\n        ReactiveFormsModule,\n        TranslateModule,\n        AdaptTableModule], exports: [RecordCustomizationOptionsComponent] });\nRecordCustomizationOptionsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordCustomizationOptionsModule, imports: [[\n            CommonModule,\n            FormsModule,\n            AdaptTooltipModule,\n            AdaptRxSelectModule,\n            AdaptButtonModule,\n            AdaptCheckbox2Module,\n            AdaptPopoverModule,\n            AdaptIconModule,\n            AdaptRxCheckboxModule,\n            ReactiveFormsModule,\n            TranslateModule,\n            AdaptTableModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordCustomizationOptionsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [RecordCustomizationOptionsComponent, RecordCustomizationOptionsEditorComponent],\n                    exports: [RecordCustomizationOptionsComponent],\n                    entryComponents: [RecordCustomizationOptionsComponent, RecordCustomizationOptionsEditorComponent],\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        AdaptTooltipModule,\n                        AdaptRxSelectModule,\n                        AdaptButtonModule,\n                        AdaptCheckbox2Module,\n                        AdaptPopoverModule,\n                        AdaptIconModule,\n                        AdaptRxCheckboxModule,\n                        ReactiveFormsModule,\n                        TranslateModule,\n                        AdaptTableModule\n                    ]\n                }]\n        }] });\n\nclass RxFieldDefinitionInspectorHelperService {\n    constructor(rxFieldDefinitionService, rxRecordDefinitionService) {\n        this.rxFieldDefinitionService = rxFieldDefinitionService;\n        this.rxRecordDefinitionService = rxRecordDefinitionService;\n    }\n    isFieldEditable(fieldDefinition) {\n        return (!this.rxFieldDefinitionService.isReadOnly(fieldDefinition) &&\n            !this.rxFieldDefinitionService.isJoinedField(fieldDefinition) &&\n            this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition));\n    }\n    isNameEditable(fieldDefinition) {\n        return (!this.rxFieldDefinitionService.isInheritedField(fieldDefinition) &&\n            this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition) &&\n            !(fieldDefinition.lastUpdateTime && this.rxFieldDefinitionService.isOverlayMode(fieldDefinition)));\n    }\n    isDescriptionEditable(fieldDefinition, definitionModel) {\n        if (this.rxRecordDefinitionService.isJoinRecord(definitionModel)) {\n            return (includes(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds, fieldDefinition.id) &&\n                this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition));\n        }\n        else {\n            return (!this.rxFieldDefinitionService.isReadOnly(fieldDefinition) &&\n                this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition));\n        }\n    }\n    isRequiredEditable(fieldDefinition) {\n        const isAlwaysRequiredNonSystemField = !this.rxFieldDefinitionService.isExternalRecordField(fieldDefinition) &&\n            includes(RX_RECORD_DEFINITION.alwaysRequiredNonSystemFieldIds, fieldDefinition.id);\n        return this.isFieldEditable(fieldDefinition) && !isAlwaysRequiredNonSystemField;\n    }\n    isSubmitEditable(fieldDefinition, definitionModel) {\n        return this.isFieldEditable(fieldDefinition) && !definitionModel.isAuditRecordDefinition;\n    }\n    arePermissionsEditable(fieldDefinition, definitionModel) {\n        return ((fieldDefinition.id !== RX_RECORD_DEFINITION.coreFieldIds.id &&\n            this.rxFieldDefinitionService.isPermissionsCustomizationEnabled(fieldDefinition) &&\n            !(this.rxFieldDefinitionService.isJoinedField(fieldDefinition) &&\n                fieldDefinition.id !== RX_RECORD_DEFINITION.coreFieldIds.displayId) &&\n            !definitionModel.isAuditRecordDefinition &&\n            !includes(RX_RECORD_DEFINITION.AR_AUDIT_FIELD_IDS, fieldDefinition.id)) ||\n            fieldDefinition.allowPermissionsEdit);\n    }\n    isAuditingEditable(fieldDefinition, definitionModel) {\n        return (!this.rxFieldDefinitionService.isJoinedField(fieldDefinition) &&\n            !this.rxFieldDefinitionService.isInheritedField(fieldDefinition) &&\n            !definitionModel.isAuditRecordDefinition);\n    }\n    isFieldIdDisabled(fieldDefinition, skipValidate = false) {\n        return (Boolean(fieldDefinition.lastUpdateTime) ||\n            (!this.rxFieldDefinitionService.isJoinedField(fieldDefinition) &&\n                (this.rxFieldDefinitionService.isReservedField(fieldDefinition, skipValidate) ||\n                    this.rxFieldDefinitionService.isInheritedField(fieldDefinition))));\n    }\n    isDefaultValueEditable(fieldDefinition, definitionModel) {\n        return (!(this.rxFieldDefinitionService.isReadOnly(fieldDefinition) &&\n            fieldDefinition.id !== RX_RECORD_DEFINITION.coreFieldIds.displayId) &&\n            this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition) &&\n            !this.rxRecordDefinitionService.isJoinRecord(definitionModel) &&\n            !definitionModel.isAuditRecordDefinition);\n    }\n    isLengthEditable(fieldDefinition, definitionModel) {\n        let isEditable = false;\n        if (!this.rxRecordDefinitionService.isJoinRecord(definitionModel)) {\n            let isReadonlyField = false;\n            // As an exception, the Length of the Display ID field should be editable for Regular records (if customization is enabled)\n            if (fieldDefinition.id !== RX_RECORD_DEFINITION.coreFieldIds.displayId) {\n                isReadonlyField =\n                    this.rxFieldDefinitionService.isReadOnly(fieldDefinition) ||\n                        includes(RX_RECORD_DEFINITION.AR_CORE_FIELD_IDS, fieldDefinition.id);\n            }\n            isEditable =\n                !isReadonlyField &&\n                    this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition) &&\n                    !definitionModel.isAuditRecordDefinition;\n        }\n        return isEditable;\n    }\n    isStoreEncryptedVisible(fieldDefinition, definitionModel) {\n        return (!this.rxRecordDefinitionService.isCustomRecord(definitionModel) &&\n            !this.rxFieldDefinitionService.isExternalRecordField(fieldDefinition));\n    }\n    isStoreEncryptedEditable(fieldDefinition) {\n        return this.isFieldEditable(fieldDefinition) && !includes(RX_RECORD_DEFINITION.keyFieldIds, fieldDefinition.id);\n    }\n    isStoreHashedVisible(fieldDefinition, definitionModel) {\n        return (!this.rxRecordDefinitionService.isCustomRecord(definitionModel) &&\n            !this.rxFieldDefinitionService.isExternalRecordField(fieldDefinition));\n    }\n    isStoreHashedEditable(fieldDefinition, definitionModel) {\n        return (this.isFieldEditable(fieldDefinition) &&\n            !includes(RX_RECORD_DEFINITION.coreFieldIds, fieldDefinition.id) &&\n            !definitionModel.isAuditRecordDefinition);\n    }\n    isNamedListEditable(fieldDefinition, definitionModel) {\n        return (this.isFieldEditable(fieldDefinition) &&\n            !includes(RX_RECORD_DEFINITION.keyFieldIds, fieldDefinition.id) &&\n            !definitionModel.isAuditRecordDefinition);\n    }\n    isFieldMappingEditable(fieldDefinition) {\n        return this.rxFieldDefinitionService.isPropertiesCustomizationEnabled(fieldDefinition);\n    }\n}\nRxFieldDefinitionInspectorHelperService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxFieldDefinitionInspectorHelperService, deps: [{ token: i3$1.RxFieldDefinitionService }, { token: i3$1.RxRecordDefinitionService }], target: i0.ɵɵFactoryTarget.Injectable });\nRxFieldDefinitionInspectorHelperService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxFieldDefinitionInspectorHelperService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxFieldDefinitionInspectorHelperService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i3$1.RxFieldDefinitionService }, { type: i3$1.RxRecordDefinitionService }]; } });\n\nclass FieldOptionEditorComponent extends ValueAccessor {\n    ngOnInit() {\n        this.isRequired = this.value === RecordFieldOption.Required || this.value === RecordFieldOption.System;\n    }\n    onSelectionChange() {\n        this.value = this.isRequired ? RecordFieldOption.Required : RecordFieldOption.Optional;\n    }\n}\nFieldOptionEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: FieldOptionEditorComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nFieldOptionEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: FieldOptionEditorComponent, selector: \"rx-field-option-editor\", providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: FieldOptionEditorComponent,\n            multi: true\n        }\n    ], usesInheritance: true, ngImport: i0, template: \"<adapt-rx-control-label\\n  label=\\\"{{ 'com.bmc.arsys.rx.client.record-designer.field-properties.required-field.label' | translate }}\\\"\\n>\\n</adapt-rx-control-label>\\n\\n<adapt-rx-switch\\n  [(ngModel)]=\\\"isRequired\\\"\\n  [disabled]=\\\"isDisabled\\\"\\n  (ngModelChange)=\\\"onSelectionChange()\\\"\\n></adapt-rx-switch>\\n\", components: [{ type: i3.AdaptRxControlLabelComponent, selector: \"adapt-rx-control-label\", inputs: [\"for\", \"id\", \"label\", \"subLabel\", \"requiredLabel\", \"showRequiredLabel\", \"tooltip\", \"testID\"] }, { type: i3.AdaptRxSwitchComponent, selector: \"adapt-rx-switch\", inputs: [\"value\", \"size\", \"isLabelBefore\", \"checked\"] }], directives: [{ type: i6.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i6.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], pipes: { \"translate\": i2.TranslatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: FieldOptionEditorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-field-option-editor',\n                    templateUrl: './field-option-editor.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: FieldOptionEditorComponent,\n                            multi: true\n                        }\n                    ]\n                }]\n        }] });\n\nclass RxBaseFieldDefinitionService {\n    constructor(injector) {\n        this.injector = injector;\n        this.translateService = this.injector.get(TranslateService);\n        this.rxIdService = this.injector.get(RxIdService);\n        this.rxFieldDefinitionService = this.injector.get(RxFieldDefinitionService);\n        this.rxFieldDefinitionInspectorHelperService = this.injector.get(RxFieldDefinitionInspectorHelperService);\n        this.rxRecordDefinitionService = this.injector.get(RxRecordDefinitionService);\n    }\n    getNewFieldDefinitionModel(fieldProperties) {\n        return Object.assign({ id: this.rxIdService.generate(), name: this.translateService.instant('com.bmc.arsys.rx.client.designer.default-field-name.label'), description: null, fieldOption: RX_RECORD_DEFINITION.fieldOptions.optional, defaultValue: null, allowPermissionsOverlay: true, allowOtherPropertiesOverlay: true, resourceType: this.resourceType }, fieldProperties);\n    }\n    getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n        const isJoinedField = this.rxFieldDefinitionService.isJoinedField(fieldModel);\n        const isExternalRecordField = this.rxFieldDefinitionService.isExternalRecordField(fieldModel);\n        return [\n            {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n                controls: [\n                    {\n                        name: 'name',\n                        component: TextFormControlComponent,\n                        isDisabled: !this.rxFieldDefinitionInspectorHelperService.isNameEditable(fieldModel),\n                        options: {\n                            label: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n                            required: true\n                        }\n                    },\n                    {\n                        name: 'description',\n                        component: TextareaFormControlComponent,\n                        isDisabled: isReadOnly ||\n                            !this.rxFieldDefinitionInspectorHelperService.isDescriptionEditable(fieldModel, definitionModel),\n                        options: {\n                            label: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label')\n                        }\n                    },\n                    {\n                        name: 'resourceType',\n                        component: SelectFormControlComponent,\n                        isDisabled: true,\n                        options: {\n                            required: true,\n                            label: this.translateService.instant('com.bmc.arsys.rx.client.common.data-type.label'),\n                            options: [\n                                {\n                                    id: RX_RECORD_DEFINITION.dataTypes.attachment.resourceType,\n                                    name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.attachment.labelKey)\n                                },\n                                {\n                                    id: RX_RECORD_DEFINITION.dataTypes.boolean.resourceType,\n                                    name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.boolean.labelKey)\n                                },\n                                {\n                                    id: RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType,\n                                    name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.dateOnly.labelKey)\n                                },\n                                {\n                                    id: RX_RECORD_DEFINITION.dataTypes.dateTime.resourceType,\n                                    name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.dateTime.labelKey)\n                                },\n                                {\n                                    id: RX_RECORD_DEFINITION.dataTypes.decimal.resourceType,\n                                    name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.decimal.labelKey)\n                                },\n                                {\n                                    id: RX_RECORD_DEFINITION.dataTypes.real.resourceType,\n                                    name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.real.labelKey)\n                                },\n                                {\n                                    id: RX_RECORD_DEFINITION.dataTypes.integer.resourceType,\n                                    name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.integer.labelKey)\n                                },\n                                {\n                                    id: RX_RECORD_DEFINITION.dataTypes.localizedCharacter.resourceType,\n                                    name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.localizedCharacter.labelKey)\n                                },\n                                {\n                                    id: RX_RECORD_DEFINITION.dataTypes.selection.resourceType,\n                                    name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.selection.labelKey)\n                                },\n                                {\n                                    id: RX_RECORD_DEFINITION.dataTypes.character.resourceType,\n                                    name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.character.labelKey)\n                                },\n                                {\n                                    id: RX_RECORD_DEFINITION.dataTypes.timeOnly.resourceType,\n                                    name: this.translateService.instant(RX_RECORD_DEFINITION.dataTypes.timeOnly.labelKey)\n                                }\n                            ]\n                        }\n                    }\n                ]\n            },\n            {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.details.label'),\n                controls: [\n                    {\n                        name: 'fieldOption',\n                        component: FieldOptionEditorComponent,\n                        isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isRequiredEditable(fieldModel)\n                    },\n                    {\n                        name: 'anyUserAllowedToSubmit',\n                        component: SwitchFormControlComponent,\n                        isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isSubmitEditable(fieldModel, definitionModel),\n                        options: {\n                            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.allow-anyone-to-submit.label')\n                        }\n                    },\n                    {\n                        name: 'permissions',\n                        component: RxPermissionEditorComponent,\n                        isDisabled: isReadOnly ||\n                            !this.rxFieldDefinitionInspectorHelperService.arePermissionsEditable(fieldModel, definitionModel),\n                        options: {\n                            label: this.translateService.instant('com.bmc.arsys.rx.client.common.permissions.label'),\n                            type: 'config',\n                            permissionScope: RX_PERMISSION.permissionScope.all\n                        }\n                    },\n                    {\n                        name: '',\n                        component: LabelFormControlComponent,\n                        options: {\n                            labelKey: 'com.bmc.arsys.rx.client.record-designer.definition-properties.auditing.title'\n                        }\n                    },\n                    {\n                        name: 'audit',\n                        component: BooleanFormControlComponent,\n                        isDisabled: isReadOnly ||\n                            !this.rxFieldDefinitionInspectorHelperService.isAuditingEditable(fieldModel, definitionModel),\n                        options: {\n                            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.auditing-options.audit.label'),\n                            tooltip: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.auditing-options.audit.tooltip'),\n                            shouldDisplayAsCheckbox: true\n                        }\n                    },\n                    {\n                        name: 'copy',\n                        component: BooleanFormControlComponent,\n                        isDisabled: fieldModel.audit ||\n                            isReadOnly ||\n                            !this.rxFieldDefinitionInspectorHelperService.isAuditingEditable(fieldModel, definitionModel),\n                        options: {\n                            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.auditing-options.copy.label'),\n                            tooltip: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.auditing-options.copy.tooltip'),\n                            shouldDisplayAsCheckbox: true\n                        }\n                    },\n                    {\n                        name: 'id',\n                        component: CounterFormControlComponent,\n                        isDisabled: this.rxFieldDefinitionInspectorHelperService.isFieldIdDisabled(fieldModel, fieldModel.isNewField),\n                        options: {\n                            label: this.translateService.instant('com.bmc.arsys.rx.client.common.field-id.label'),\n                            allowIntegerOnly: true\n                        }\n                    }\n                ]\n            }\n        ];\n    }\n    validate(fieldModel, definitionModel) {\n        const issues = [];\n        if (isEmpty(trim(fieldModel.name))) {\n            issues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message', {\n                    propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label')\n                }),\n                data: {\n                    propertyName: 'name',\n                    guid: fieldModel.guid\n                }\n            });\n        }\n        if (!RX_RECORD_DEFINITION.validDefinitionNameRegex.test(fieldModel.name)) {\n            issues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message', {\n                    propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label')\n                }),\n                data: {\n                    propertyName: 'name',\n                    guid: fieldModel.guid\n                }\n            });\n        }\n        if (!fieldModel.lastUpdateTime &&\n            isNumber(fieldModel.id) &&\n            !this.rxFieldDefinitionService.isExternalRecordField(fieldModel) &&\n            inRange(fieldModel.id, 1, RX_RECORD_DEFINITION.AR_MAX_RESERVED_FIELD_ID + 1) &&\n            !includes(RX_RECORD_DEFINITION.AR_CORE_FIELD_IDS, fieldModel.id)) {\n            issues.push({\n                type: ValidationIssueType.Warning,\n                data: {\n                    propertyName: 'id',\n                    guid: fieldModel.guid\n                },\n                description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.field-id-in-bmc-reserved-range-warning.message')\n            });\n        }\n        if (fieldModel.id && !inRange(fieldModel.id, 1, RX_NUMBER.maxInteger + 1)) {\n            issues.push({\n                type: ValidationIssueType.Error,\n                data: {\n                    propertyName: 'id',\n                    guid: fieldModel.guid\n                },\n                description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.invalid-field-id-range.message', { max: RX_NUMBER.maxInteger })\n            });\n        }\n        return issues;\n    }\n}\n\nclass RxAttachmentFieldDefinitionService extends RxBaseFieldDefinitionService {\n    constructor(injector) {\n        super(injector);\n        this.resourceType = RX_RECORD_DEFINITION.dataTypes.attachment.resourceType;\n    }\n    getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n        const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n        // Adding controls specific to attachment field to Details section\n        inspectorConfig[1].controls.push({\n            name: 'maxSize',\n            component: CounterFormControlComponent,\n            isDisabled: isReadOnly,\n            options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.max-file-size.label'),\n                allowIntegerOnly: true,\n                minValue: 0,\n                maxValue: RX_NUMBER.maxInteger\n            }\n        });\n        return inspectorConfig;\n    }\n}\nRxAttachmentFieldDefinitionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxAttachmentFieldDefinitionService, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nRxAttachmentFieldDefinitionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxAttachmentFieldDefinitionService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxAttachmentFieldDefinitionService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }]; } });\n\nclass RxBooleanFieldDefinitionService extends RxBaseFieldDefinitionService {\n    constructor(injector) {\n        super(injector);\n        this.resourceType = RX_RECORD_DEFINITION.dataTypes.boolean.resourceType;\n    }\n    getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n        const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n        // Adding controls specific to boolean field to Details section\n        inspectorConfig[1].controls.push({\n            name: 'defaultValue',\n            component: SelectFormControlComponent,\n            isDisabled: isReadOnly,\n            options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n                emptyOption: true,\n                options: [\n                    {\n                        id: '0',\n                        name: this.translateService.instant('com.bmc.arsys.rx.client.common.true')\n                    },\n                    {\n                        id: '1',\n                        name: this.translateService.instant('com.bmc.arsys.rx.client.common.false')\n                    }\n                ]\n            }\n        });\n        return inspectorConfig;\n    }\n}\nRxBooleanFieldDefinitionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxBooleanFieldDefinitionService, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nRxBooleanFieldDefinitionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxBooleanFieldDefinitionService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxBooleanFieldDefinitionService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }]; } });\n\nclass RxCharacterFieldDefinitionService extends RxBaseFieldDefinitionService {\n    constructor(injector, rxNumberUtilsService) {\n        super(injector);\n        this.rxNumberUtilsService = rxNumberUtilsService;\n        this.resourceType = RX_RECORD_DEFINITION.dataTypes.character.resourceType;\n    }\n    getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n        const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n        if (this.rxFieldDefinitionInspectorHelperService.isStoreEncryptedVisible(fieldModel, definitionModel)) {\n            inspectorConfig[1].controls.push({\n                name: 'shouldPersistEncrypted',\n                component: SwitchFormControlComponent,\n                isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isStoreEncryptedEditable(fieldModel),\n                options: {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.store-encrypted.label')\n                }\n            });\n        }\n        if (this.rxFieldDefinitionInspectorHelperService.isStoreHashedVisible(fieldModel, definitionModel)) {\n            inspectorConfig[1].controls.push({\n                name: 'shouldPersistHashed',\n                component: SwitchFormControlComponent,\n                isDisabled: isReadOnly ||\n                    !this.rxFieldDefinitionInspectorHelperService.isStoreHashedEditable(fieldModel, definitionModel),\n                options: {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.store-hashed.label')\n                }\n            });\n        }\n        inspectorConfig[1].controls = inspectorConfig[1].controls.concat([\n            {\n                name: 'namedListDefinition',\n                component: RxDefinitionPickerComponent,\n                isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isNamedListEditable(fieldModel, definitionModel),\n                options: {\n                    definitionType: RxDefinitionPickerType.NamedList,\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.definition-type.named-list.label')\n                }\n            },\n            {\n                name: 'maxLength',\n                component: CounterFormControlComponent,\n                isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isLengthEditable(fieldModel, definitionModel),\n                options: {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.common.length.label'),\n                    tooltip: fieldModel.id === RX_RECORD_DEFINITION.coreFieldIds.displayId &&\n                        !this.rxRecordDefinitionService.isJoinRecord(definitionModel) &&\n                        !fieldModel.isNewField\n                        ? this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.display-id.length.tooltip')\n                        : undefined,\n                    allowIntegerOnly: true,\n                    minValue: 0\n                }\n            },\n            {\n                name: 'defaultValue',\n                component: TextFormControlComponent,\n                isDisabled: isReadOnly ||\n                    !this.rxFieldDefinitionInspectorHelperService.isDefaultValueEditable(fieldModel, definitionModel),\n                options: {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n                    tooltip: fieldModel.id === RX_RECORD_DEFINITION.coreFieldIds.displayId &&\n                        !this.rxRecordDefinitionService.isJoinRecord(definitionModel) &&\n                        !fieldModel.isNewField\n                        ? new Tooltip(this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.display-id.default-value.tooltip'))\n                        : undefined,\n                    allowIntegerOnly: true\n                }\n            },\n            {\n                name: 'pattern',\n                component: SelectFormControlComponent,\n                isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isFieldEditable(fieldModel),\n                options: {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.pattern.label'),\n                    emptyOption: true,\n                    options: [\n                        {\n                            name: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.alphabetical.label'),\n                            id: '$ALPHA$'\n                        },\n                        {\n                            name: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.alphanumeric.label'),\n                            id: '$ALNUM$'\n                        },\n                        {\n                            name: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.lowercase.label'),\n                            id: '$LOWER$'\n                        },\n                        {\n                            name: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.named-list.label'),\n                            id: '$NAMEDLIST$'\n                        },\n                        {\n                            name: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.numeric.label'),\n                            id: '$DIGIT$'\n                        },\n                        {\n                            name: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.pattern.options.uppercase.label'),\n                            id: '$UPPER$'\n                        }\n                    ]\n                }\n            }\n        ]);\n        return inspectorConfig;\n    }\n    validate(fieldModel, definitionModel) {\n        const validationIssues = super.validate(fieldModel, definitionModel);\n        if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxLength) && Number(fieldModel.maxLength) < 0) {\n            validationIssues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.invalid-min-length-error.message'),\n                data: {\n                    propertyName: 'maxLength',\n                    guid: fieldModel.guid\n                }\n            });\n        }\n        if (fieldModel.id === RX_RECORD_DEFINITION.coreFieldIds.displayId &&\n            (this.rxRecordDefinitionService.isRegularRecord(definitionModel) ||\n                this.rxRecordDefinitionService.isExternalRecord(definitionModel))) {\n            if (!(fieldModel.maxLength === 1 || inRange(fieldModel.maxLength, 5, 16))) {\n                validationIssues.push({\n                    type: ValidationIssueType.Error,\n                    description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.invalid-max-length.message'),\n                    data: {\n                        propertyName: 'maxLength',\n                        guid: fieldModel.guid\n                    }\n                });\n            }\n            if ((fieldModel.maxLength !== 1 && fieldModel.maxLength <= size(fieldModel.defaultValue)) ||\n                (fieldModel.maxLength === 1 && size(fieldModel.defaultValue) >= 15)) {\n                validationIssues.push({\n                    type: ValidationIssueType.Error,\n                    description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.invalid-display-id-range.message'),\n                    data: {\n                        propertyName: 'maxLength',\n                        guid: fieldModel.guid\n                    }\n                });\n            }\n        }\n        return validationIssues;\n    }\n}\nRxCharacterFieldDefinitionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxCharacterFieldDefinitionService, deps: [{ token: i0.Injector }, { token: i1$1.RxNumberUtilsService }], target: i0.ɵɵFactoryTarget.Injectable });\nRxCharacterFieldDefinitionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxCharacterFieldDefinitionService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxCharacterFieldDefinitionService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i1$1.RxNumberUtilsService }]; } });\n\nclass RxDateOnlyFieldDefinitionService extends RxBaseFieldDefinitionService {\n    constructor(injector) {\n        super(injector);\n        this.resourceType = RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType;\n    }\n    getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n        const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n        // Adding controls specific to date only field to Details section\n        inspectorConfig[1].controls.push({\n            name: 'defaultValue',\n            isDisabled: isReadOnly,\n            component: DateFormControlComponent,\n            options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n            }\n        });\n        return inspectorConfig;\n    }\n}\nRxDateOnlyFieldDefinitionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxDateOnlyFieldDefinitionService, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nRxDateOnlyFieldDefinitionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxDateOnlyFieldDefinitionService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxDateOnlyFieldDefinitionService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }]; } });\n\nclass RxDateTimeFieldDefinitionService extends RxBaseFieldDefinitionService {\n    constructor(injector) {\n        super(injector);\n        this.resourceType = RX_RECORD_DEFINITION.dataTypes.dateTime.resourceType;\n    }\n    getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n        const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n        // Adding controls specific to date only field to Details section\n        inspectorConfig[1].controls.push({\n            name: 'defaultValue',\n            component: DateTimeFormControlComponent,\n            isDisabled: isReadOnly || !this.rxFieldDefinitionInspectorHelperService.isFieldEditable(fieldModel),\n            options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n            }\n        });\n        return inspectorConfig;\n    }\n}\nRxDateTimeFieldDefinitionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxDateTimeFieldDefinitionService, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nRxDateTimeFieldDefinitionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxDateTimeFieldDefinitionService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxDateTimeFieldDefinitionService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }]; } });\n\nclass RxNumericFieldDefinitionService extends RxBaseFieldDefinitionService {\n    constructor(injector, rxNumberUtilsService) {\n        super(injector);\n        this.rxNumberUtilsService = rxNumberUtilsService;\n    }\n    validate(fieldModel, definitionModel) {\n        const validationIssues = super.validate(fieldModel, definitionModel);\n        if (fieldModel.defaultValue && Number(fieldModel.defaultValue) < this.minValue) {\n            validationIssues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message', {\n                    propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n                    minValue: this.minValue\n                }),\n                data: {\n                    propertyName: 'defaultValue',\n                    guid: fieldModel.guid\n                }\n            });\n        }\n        if (fieldModel.defaultValue && Number(fieldModel.defaultValue) > this.maxValue) {\n            validationIssues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message', {\n                    propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n                    maxValue: this.maxValue\n                }),\n                data: {\n                    propertyName: 'defaultValue',\n                    guid: fieldModel.guid\n                }\n            });\n        }\n        if (fieldModel.minValue && Number(fieldModel.minValue) < this.minValue) {\n            validationIssues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message', {\n                    propertyName: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'),\n                    minValue: this.minValue\n                }),\n                data: {\n                    propertyName: 'minValue',\n                    guid: fieldModel.guid\n                }\n            });\n        }\n        if (fieldModel.minValue && Number(fieldModel.minValue) > this.maxValue) {\n            validationIssues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message', {\n                    propertyName: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'),\n                    maxValue: this.maxValue\n                }),\n                data: {\n                    propertyName: 'minValue',\n                    guid: fieldModel.guid\n                }\n            });\n        }\n        if (fieldModel.maxValue && Number(fieldModel.maxValue) < this.minValue) {\n            validationIssues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message', {\n                    propertyName: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'),\n                    minValue: this.minValue\n                }),\n                data: {\n                    propertyName: 'maxValue',\n                    guid: fieldModel.guid\n                }\n            });\n        }\n        if (fieldModel.maxValue && Number(fieldModel.maxValue) > this.maxValue) {\n            validationIssues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message', {\n                    propertyName: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'),\n                    maxValue: this.maxValue\n                }),\n                data: {\n                    propertyName: 'maxValue',\n                    guid: fieldModel.guid\n                }\n            });\n        }\n        if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.defaultValue) &&\n            this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.minValue) &&\n            Number(fieldModel.defaultValue) >= this.minValue &&\n            Number(fieldModel.defaultValue) < Number(fieldModel.minValue)) {\n            validationIssues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.value-is-too-small-error.message', {\n                    propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n                    minValue: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label')\n                }),\n                data: {\n                    propertyName: 'defaultValue',\n                    guid: fieldModel.guid\n                }\n            });\n        }\n        if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.defaultValue) &&\n            this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxValue) &&\n            Number(fieldModel.defaultValue) <= this.maxValue &&\n            Number(fieldModel.defaultValue) > Number(fieldModel.maxValue)) {\n            validationIssues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message', {\n                    propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n                    maxValue: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label')\n                }),\n                data: {\n                    propertyName: 'defaultValue',\n                    guid: fieldModel.guid\n                }\n            });\n        }\n        if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.minValue) &&\n            this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxValue) &&\n            Number(fieldModel.minValue) > Number(fieldModel.maxValue)) {\n            validationIssues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.value-is-too-large-error.message', {\n                    propertyName: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'),\n                    maxValue: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label')\n                }),\n                data: {\n                    propertyName: 'minValue',\n                    guid: fieldModel.guid\n                }\n            });\n        }\n        if (isNil(fieldModel.minValue)) {\n            validationIssues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message', {\n                    propertyName: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label')\n                }),\n                data: {\n                    propertyName: 'minValue',\n                    guid: fieldModel.guid\n                }\n            });\n        }\n        if (isNil(fieldModel.maxValue)) {\n            validationIssues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message', {\n                    propertyName: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label')\n                }),\n                data: {\n                    propertyName: 'maxValue',\n                    guid: fieldModel.guid\n                }\n            });\n        }\n        if (this.resourceType !== RX_RECORD_DEFINITION.dataTypes.integer.resourceType && isNil(fieldModel.precision)) {\n            validationIssues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message', {\n                    propertyName: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.precision.label')\n                }),\n                data: {\n                    propertyName: 'maxValue',\n                    guid: fieldModel.guid\n                }\n            });\n        }\n        return validationIssues;\n    }\n    getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n        const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n        // Adding controls specific to decimal field to Details section\n        inspectorConfig[1].controls = inspectorConfig[1].controls.concat([\n            {\n                name: 'precision',\n                component: CounterFormControlComponent,\n                isDisabled: isReadOnly,\n                options: omitBy({\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.field-properties.precision.label'),\n                    required: true,\n                    allowIntegerOnly: true,\n                    minValue: this.minPrecision,\n                    maxValue: this.maxPrecision\n                }, isNil)\n            },\n            {\n                name: 'minValue',\n                component: CounterFormControlComponent,\n                isDisabled: isReadOnly,\n                options: {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-min-value.label'),\n                    required: true,\n                    allowIntegerOnly: this.allowOnlyInteger,\n                    minValue: this.minValue,\n                    maxValue: this.maxValue\n                }\n            },\n            {\n                name: 'maxValue',\n                component: CounterFormControlComponent,\n                isDisabled: isReadOnly,\n                options: {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.designer.field-properties.integer-max-value.label'),\n                    required: true,\n                    allowIntegerOnly: this.allowOnlyInteger,\n                    minValue: this.minValue,\n                    maxValue: this.maxValue\n                }\n            },\n            {\n                name: 'defaultValue',\n                component: CounterFormControlComponent,\n                isDisabled: isReadOnly,\n                options: {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label'),\n                    allowIntegerOnly: this.allowOnlyInteger,\n                    minValue: this.minValue,\n                    maxValue: this.maxValue\n                }\n            }\n        ]);\n        return inspectorConfig;\n    }\n}\nRxNumericFieldDefinitionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxNumericFieldDefinitionService, deps: [{ token: i0.Injector }, { token: i1$1.RxNumberUtilsService }], target: i0.ɵɵFactoryTarget.Injectable });\nRxNumericFieldDefinitionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxNumericFieldDefinitionService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxNumericFieldDefinitionService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i1$1.RxNumberUtilsService }]; } });\n\nclass RxDecimalFieldDefinitionService extends RxNumericFieldDefinitionService {\n    constructor() {\n        super(...arguments);\n        this.resourceType = RX_RECORD_DEFINITION.dataTypes.decimal.resourceType;\n        this.minPrecision = 0;\n        this.maxPrecision = 9;\n        this.minValue = RX_NUMBER.minDecimal;\n        this.maxValue = RX_NUMBER.maxDecimal;\n        this.allowOnlyInteger = false;\n    }\n    getNewFieldDefinitionModel(fieldProperties) {\n        return super.getNewFieldDefinitionModel(Object.assign(Object.assign({}, fieldProperties), { precision: 2, minValue: this.minValue, maxValue: this.maxValue }));\n    }\n    validate(fieldModel, definitionModel) {\n        const validationIssues = super.validate(fieldModel, definitionModel);\n        if (!inRange(fieldModel.precision, this.minPrecision, this.maxPrecision + 1)) {\n            validationIssues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.invalid-precision-range.message', {\n                    min: this.minPrecision,\n                    max: this.maxPrecision\n                }),\n                data: {\n                    propertyName: 'precision',\n                    guid: fieldModel.guid\n                }\n            });\n        }\n        return validationIssues;\n    }\n}\nRxDecimalFieldDefinitionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxDecimalFieldDefinitionService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nRxDecimalFieldDefinitionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxDecimalFieldDefinitionService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxDecimalFieldDefinitionService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass RxIntegerFieldDefinitionService extends RxNumericFieldDefinitionService {\n    constructor() {\n        super(...arguments);\n        this.resourceType = RX_RECORD_DEFINITION.dataTypes.integer.resourceType;\n        this.minPrecision = null;\n        this.maxPrecision = null;\n        this.minValue = RX_NUMBER.minInteger;\n        this.maxValue = RX_NUMBER.maxInteger;\n        this.allowOnlyInteger = true;\n    }\n    getNewFieldDefinitionModel(fieldProperties) {\n        return super.getNewFieldDefinitionModel(Object.assign(Object.assign({}, fieldProperties), { minValue: this.minValue, maxValue: this.maxValue }));\n    }\n    getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n        const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n        // Removing Precision control not required for integer field\n        inspectorConfig[1].controls.splice(7, 1);\n        return inspectorConfig;\n    }\n}\nRxIntegerFieldDefinitionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxIntegerFieldDefinitionService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nRxIntegerFieldDefinitionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxIntegerFieldDefinitionService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxIntegerFieldDefinitionService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass LocalizedCharacterFieldEditorComponent extends ValueAccessor {\n    constructor(rxModalService, translateService) {\n        super();\n        this.rxModalService = rxModalService;\n        this.translateService = translateService;\n    }\n    localize() {\n        this.rxModalService\n            .openModal({\n            title: this.translateService.instant('com.bmc.arsys.rx.client.view-components.localized-character-field.dialog.title'),\n            data: {\n                valueByLocale: Object.assign({}, this.value),\n                hideCurrentLocale: true,\n                isReadOnly: this.options.isReadOnly\n            },\n            size: 'sm',\n            content: LocalizedCharacterFieldValueModalComponent\n        })\n            .then((data) => {\n            if (data) {\n                this.value = data.valueByLocale;\n            }\n        })\n            .catch(noop);\n    }\n}\nLocalizedCharacterFieldEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: LocalizedCharacterFieldEditorComponent, deps: [{ token: i1.RxModalService }, { token: i2.TranslateService }], target: i0.ɵɵFactoryTarget.Component });\nLocalizedCharacterFieldEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: LocalizedCharacterFieldEditorComponent, selector: \"rx-localized-character-field-editor\", inputs: { options: \"options\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: LocalizedCharacterFieldEditorComponent,\n            multi: true\n        }\n    ], usesInheritance: true, ngImport: i0, template: \"<div>\\n  <button\\n    type=\\\"button\\\"\\n    class=\\\"localize-button btn btn-link focusable d-icon-left-pencil p-0 float-end\\\"\\n    (click)=\\\"localize()\\\"\\n  >\\n    {{ 'com.bmc.arsys.rx.client.view-components.localized-character-field.button.localize.label' | translate }}\\n  </button>\\n\\n  <div class=\\\"pl-1\\\">{{ value['en-US'] }}</div>\\n</div>\\n\", pipes: { \"translate\": i2.TranslatePipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: LocalizedCharacterFieldEditorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-localized-character-field-editor',\n                    templateUrl: './localized-character-field-editor.component.html',\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: LocalizedCharacterFieldEditorComponent,\n                            multi: true\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i1.RxModalService }, { type: i2.TranslateService }]; }, propDecorators: { options: [{\n                type: Input\n            }] } });\n\nclass RxLocalizedCharacterFieldDefinitionService extends RxBaseFieldDefinitionService {\n    constructor(injector, rxNumberUtilsService) {\n        super(injector);\n        this.rxNumberUtilsService = rxNumberUtilsService;\n        this.resourceType = RX_RECORD_DEFINITION.dataTypes.localizedCharacter.resourceType;\n    }\n    getNewFieldDefinitionModel(fieldProperties) {\n        return super.getNewFieldDefinitionModel(Object.assign(Object.assign({}, fieldProperties), { maxLength: 254 }));\n    }\n    getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n        const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n        inspectorConfig[1].controls = inspectorConfig[1].controls.concat([\n            {\n                name: 'maxLength',\n                component: CounterFormControlComponent,\n                isDisabled: isReadOnly,\n                options: {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.common.length.label'),\n                    minValue: 0,\n                    maxValue: 254,\n                    allowIntegerOnly: true\n                }\n            },\n            {\n                name: 'defaultValueByLocale',\n                component: LocalizedCharacterFieldEditorComponent,\n                options: {\n                    isReadOnly: isReadOnly\n                }\n            }\n        ]);\n        return inspectorConfig;\n    }\n    validate(fieldModel, definitionModel) {\n        const validationIssues = super.validate(fieldModel, definitionModel);\n        if (this.rxNumberUtilsService.isFiniteOrNumberString(fieldModel.maxLength) && Number(fieldModel.maxLength) < 0) {\n            validationIssues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.invalid-min-length-error.message'),\n                data: {\n                    propertyName: 'maxLength',\n                    guid: fieldModel.guid\n                }\n            });\n        }\n        return validationIssues;\n    }\n}\nRxLocalizedCharacterFieldDefinitionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxLocalizedCharacterFieldDefinitionService, deps: [{ token: i0.Injector }, { token: i1$1.RxNumberUtilsService }], target: i0.ɵɵFactoryTarget.Injectable });\nRxLocalizedCharacterFieldDefinitionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxLocalizedCharacterFieldDefinitionService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxLocalizedCharacterFieldDefinitionService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i1$1.RxNumberUtilsService }]; } });\n\nclass RxRealFieldDefinitionService extends RxNumericFieldDefinitionService {\n    constructor() {\n        super(...arguments);\n        this.resourceType = RX_RECORD_DEFINITION.dataTypes.real.resourceType;\n        this.maxPrecision = null;\n        this.minValue = -1.845e19;\n        this.maxValue = 1.845e19;\n        this.allowOnlyInteger = false;\n        this.AR_PRECISION_NONE = -1;\n    }\n    getNewFieldDefinitionModel(fieldProperties) {\n        return super.getNewFieldDefinitionModel(Object.assign(Object.assign({}, fieldProperties), { precision: 6, minValue: this.minValue, maxValue: this.maxValue }));\n    }\n    validate(fieldModel, definitionModel) {\n        const validationIssues = super.validate(fieldModel, definitionModel);\n        if (!isFinite(fieldModel.precision) ||\n            (fieldModel.precision < 1 && fieldModel.precision != this.AR_PRECISION_NONE)) {\n            validationIssues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.invalid-real-field-precision-range.message'),\n                data: {\n                    propertyName: 'precision',\n                    guid: fieldModel.guid\n                }\n            });\n        }\n        return validationIssues;\n    }\n}\nRxRealFieldDefinitionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxRealFieldDefinitionService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nRxRealFieldDefinitionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxRealFieldDefinitionService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxRealFieldDefinitionService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass RxSelectionFieldDefinitionService extends RxBaseFieldDefinitionService {\n    constructor(injector) {\n        super(injector);\n        this.resourceType = RX_RECORD_DEFINITION.dataTypes.selection.resourceType;\n    }\n    getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n        const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n        inspectorConfig[1].controls.push({\n            name: 'selectionFieldOptionProperties',\n            component: SelectionFieldOptionsComponent,\n            options: {\n                isReadOnly: !this.rxFieldDefinitionInspectorHelperService.isFieldEditable(fieldModel)\n            }\n        });\n        return inspectorConfig;\n    }\n    validate(fieldModel, definitionModel) {\n        var _a;\n        const validationIssues = super.validate(fieldModel, definitionModel);\n        if (isEmpty((_a = fieldModel.selectionFieldOptionProperties) === null || _a === void 0 ? void 0 : _a.optionNamesById)) {\n            validationIssues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message', { propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.options.label') }),\n                data: {\n                    propertyName: 'selectionFieldOptionProperties',\n                    guid: fieldModel.guid\n                }\n            });\n        }\n        return validationIssues;\n    }\n}\nRxSelectionFieldDefinitionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxSelectionFieldDefinitionService, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nRxSelectionFieldDefinitionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxSelectionFieldDefinitionService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxSelectionFieldDefinitionService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }]; } });\n\nclass RxTimeOnlyFieldDefinitionService extends RxBaseFieldDefinitionService {\n    constructor(injector) {\n        super(injector);\n        this.resourceType = RX_RECORD_DEFINITION.dataTypes.timeOnly.resourceType;\n    }\n    getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n        const inspectorConfig = super.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n        inspectorConfig[1].controls.push({\n            name: 'defaultValue',\n            isDisabled: isReadOnly,\n            component: TimeFormControlComponent,\n            options: {\n                label: this.translateService.instant('com.bmc.arsys.rx.client.common.default-value.label')\n            }\n        });\n        return inspectorConfig;\n    }\n}\nRxTimeOnlyFieldDefinitionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxTimeOnlyFieldDefinitionService, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nRxTimeOnlyFieldDefinitionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxTimeOnlyFieldDefinitionService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxTimeOnlyFieldDefinitionService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }]; } });\n\nclass RxFieldDefinitionManagerService {\n    constructor(rxAttachmentFieldDefinitionService, rxBooleanFieldDefinitionService, rxCharacterFieldDefinitionService, rxLocalizedCharacterFieldDefinitionService, rxDateTimeFieldDefinitionService, rxDateOnlyFieldDefinitionService, rxTimeOnlyFieldDefinitionService, rxIntegerFieldDefinitionService, rxDecimalFieldDefinitionService, rxRealFieldDefinitionService, rxSelectionFieldDefinitionService) {\n        this.fieldServices = new Map();\n        this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.attachment.resourceType, rxAttachmentFieldDefinitionService);\n        this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.boolean.resourceType, rxBooleanFieldDefinitionService);\n        this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.character.resourceType, rxCharacterFieldDefinitionService);\n        this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.localizedCharacter.resourceType, rxLocalizedCharacterFieldDefinitionService);\n        this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.dateTime.resourceType, rxDateTimeFieldDefinitionService);\n        this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.dateOnly.resourceType, rxDateOnlyFieldDefinitionService);\n        this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.timeOnly.resourceType, rxTimeOnlyFieldDefinitionService);\n        this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.integer.resourceType, rxIntegerFieldDefinitionService);\n        this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.decimal.resourceType, rxDecimalFieldDefinitionService);\n        this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.real.resourceType, rxRealFieldDefinitionService);\n        this.fieldServices.set(RX_RECORD_DEFINITION.dataTypes.selection.resourceType, rxSelectionFieldDefinitionService);\n    }\n    getNewFieldDefinitionModel(resourceType, fieldProperties) {\n        return this.fieldServices.get(resourceType).getNewFieldDefinitionModel(fieldProperties);\n    }\n    getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly) {\n        return this.fieldServices\n            .get(fieldModel.resourceType)\n            .getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly);\n    }\n    validate(fieldModel, definitionModel) {\n        return this.fieldServices.get(fieldModel.resourceType).validate(fieldModel, definitionModel);\n    }\n}\nRxFieldDefinitionManagerService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxFieldDefinitionManagerService, deps: [{ token: RxAttachmentFieldDefinitionService }, { token: RxBooleanFieldDefinitionService }, { token: RxCharacterFieldDefinitionService }, { token: RxLocalizedCharacterFieldDefinitionService }, { token: RxDateTimeFieldDefinitionService }, { token: RxDateOnlyFieldDefinitionService }, { token: RxTimeOnlyFieldDefinitionService }, { token: RxIntegerFieldDefinitionService }, { token: RxDecimalFieldDefinitionService }, { token: RxRealFieldDefinitionService }, { token: RxSelectionFieldDefinitionService }], target: i0.ɵɵFactoryTarget.Injectable });\nRxFieldDefinitionManagerService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxFieldDefinitionManagerService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxFieldDefinitionManagerService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: RxAttachmentFieldDefinitionService }, { type: RxBooleanFieldDefinitionService }, { type: RxCharacterFieldDefinitionService }, { type: RxLocalizedCharacterFieldDefinitionService }, { type: RxDateTimeFieldDefinitionService }, { type: RxDateOnlyFieldDefinitionService }, { type: RxTimeOnlyFieldDefinitionService }, { type: RxIntegerFieldDefinitionService }, { type: RxDecimalFieldDefinitionService }, { type: RxRealFieldDefinitionService }, { type: RxSelectionFieldDefinitionService }]; } });\n\nclass RecordInheritanceEditorComponent extends ValueAccessor {\n    constructor(translateService, rxFieldDefinitionManagerService, rxRecordDefinitionCacheService, rxNotificationService, rxGuidService, rxFieldDefinitionService) {\n        super();\n        this.translateService = translateService;\n        this.rxFieldDefinitionManagerService = rxFieldDefinitionManagerService;\n        this.rxRecordDefinitionCacheService = rxRecordDefinitionCacheService;\n        this.rxNotificationService = rxNotificationService;\n        this.rxGuidService = rxGuidService;\n        this.rxFieldDefinitionService = rxFieldDefinitionService;\n        this.inheritanceDescriptor = {\n            inheritingFrom: '',\n            isInheritingRules: true,\n            isInheritingFieldPermissions: true,\n            isInheritingAssociations: true,\n            isInheritingFieldAuditOptions: true\n        };\n        this.recordDefinitionPickerOptions = {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.record-to-inherit.label'),\n            definitionType: RxDefinitionPickerType.InheritableRecord,\n            availableDefinitionPickerStates: {\n                definitionButtonsGroups: [RxDefinitionPickerScope.Bundle, RxDefinitionPickerScope.All],\n                search: RxDefinitionPickerScope.All\n            }\n        };\n        this.destroyed$ = new ReplaySubject(1);\n        this.isReadOnlySubject = new BehaviorSubject(false);\n        this.isSharedInstanceStorageLockedSubject = new BehaviorSubject(true);\n        this.inheritingFromSubject = new BehaviorSubject('');\n        this.isMakeFinalDisabledSubject = new BehaviorSubject(false);\n        this.isSharedInstanceStorageDisabled$ = combineLatest([\n            this.isReadOnlySubject,\n            this.isSharedInstanceStorageLockedSubject\n        ]).pipe(map(([isReadOnly, isSharedInstanceStorage]) => isReadOnly || isSharedInstanceStorage));\n        this.inheritFromRecordDefinition$ = this.inheritingFromSubject.pipe(switchMap((recordDefinitionName) => iif(() => Boolean(recordDefinitionName), this.rxRecordDefinitionCacheService.getRecordDefinition(recordDefinitionName), of(null))), tap((recordDefinition) => {\n            if (recordDefinition) {\n                this.inheritFromRecordDefinition = recordDefinition;\n                this.isInheritingCoreFields = false;\n                if (recordDefinition.isSharedInstanceStorage) {\n                    this.inheritanceOptions.isSharedInstanceStorage = true;\n                    this.updateInheritanceOptions();\n                    this.state.inheritCoreFieldsAutomatically = true;\n                    this.isInheritingCoreFields = true;\n                }\n                else {\n                    if (this.isNew) {\n                        this.inheritanceOptions.isSharedInstanceStorage = false;\n                    }\n                    this.state.inheritCoreFieldsAutomatically = false;\n                }\n                this.inheritanceDescriptor.isInheritingRules = true;\n                this.inheritedFieldDefinitions = this.getInheritedFieldDefinitions(recordDefinition);\n                forEach(recordDefinition.securityLabels, function (securityLabel) {\n                    securityLabel.inherited = true;\n                });\n                this.setValue();\n            }\n        }));\n        this.isCoreFieldsOptionDisabled$ = combineLatest([this.isReadOnlySubject, this.inheritFromRecordDefinition$]).pipe(map(([isReadOnly, inheritingFromRecordDefinition]) => !this.inheritFrom ||\n            isReadOnly ||\n            this.state.inheritCoreFieldsAutomatically ||\n            this.state.lockCoreFieldInheritanceOption));\n        this.vm$ = combineLatest([\n            this.isReadOnlySubject,\n            this.isSharedInstanceStorageDisabled$,\n            this.isMakeFinalDisabledSubject,\n            this.isCoreFieldsOptionDisabled$\n        ]).pipe(map(([isReadOnly, isSharedInstanceStorageDisabled, isMakeFinalDisabled, isCoreFieldsOptionDisabled]) => ({\n            isReadOnly,\n            isSharedInstanceStorageDisabled,\n            isMakeFinalDisabled,\n            isCoreFieldsOptionDisabled\n        })));\n    }\n    ngOnInit() {\n        if (this.options) {\n            this.updateValues();\n        }\n    }\n    updateInheritanceOptions() {\n        this.isMakeFinalDisabledSubject.next(this.isReadOnlySubject.value ||\n            (this.inheritanceOptions.isSharedInstanceStorage && !this.inheritingFromSubject.value));\n        if (this.inheritanceOptions.isSharedInstanceStorage &&\n            this.inheritanceOptions.isFinal &&\n            !this.inheritFromRecordDefinition) {\n            this.inheritanceOptions.isFinal = false;\n        }\n    }\n    onInheritanceOptionsChange() {\n        this.updateInheritanceOptions();\n        this.setValue();\n    }\n    onInheritanceDescriptorChange() {\n        if (this.inheritanceDescriptor.isInheritingFieldPermissions) {\n            this.inheritedFieldDefinitions = this.getInheritedFieldDefinitions(this.inheritFromRecordDefinition);\n        }\n        this.setValue();\n    }\n    ngOnChanges(changes) {\n        if (changes.options) {\n            this.updateValues();\n        }\n    }\n    onRecordDefinitionNameChange(recordDefinitionName) {\n        this.rxNotificationService.addInfoMessage(this.translateService.instant('com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.inherited-fields-remaining-info.message'));\n        if (recordDefinitionName) {\n            this.inheritingFromSubject.next(recordDefinitionName);\n        }\n        else {\n            this.inheritedFieldDefinitions = [];\n            this.setValue();\n        }\n    }\n    onInheritCoreFieldsChange() {\n        this.inheritedFieldDefinitions = this.getInheritedFieldDefinitions(this.inheritFromRecordDefinition);\n        this.setValue();\n    }\n    getInheritedFieldDefinitions(recordDefinition) {\n        var _a;\n        const newFieldProperties = union(keys(this.rxFieldDefinitionManagerService.getNewFieldDefinitionModel(RX_RECORD_DEFINITION.resourceTypes.character, null)), [\n            'isInherited',\n            'anyUserAllowedToSubmit',\n            'displayType',\n            'explicitPermissions',\n            'fieldMapping',\n            'fieldTypeName',\n            'maxLength',\n            'maxSize',\n            'maxValue',\n            'minValue',\n            'namedListDefinition',\n            'optionNamesById',\n            'optionLabelsById',\n            'precision',\n            'resourceType',\n            'searchable',\n            'shouldPersistEncrypted',\n            'shouldPersistHashed',\n            'tags',\n            'version'\n        ]);\n        if ((_a = this.inheritanceDescriptor) === null || _a === void 0 ? void 0 : _a.isInheritingFieldPermissions) {\n            newFieldProperties.push('permissions');\n        }\n        const inheritedFieldDefinitions = map$1(recordDefinition.fieldDefinitions, (fieldDefinition) => {\n            fieldDefinition.isInherited = true;\n            return Object.assign(Object.assign({}, pick(fieldDefinition, newFieldProperties)), { guid: this.rxGuidService.generate(), isCoreField: this.rxFieldDefinitionService.isCoreField(fieldDefinition), selectionFieldOptionProperties: fieldDefinition.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType\n                    ? {\n                        defaultValue: null,\n                        optionNamesById: fieldDefinition.optionNamesById,\n                        optionLabelsById: fieldDefinition.optionLabelsById\n                    }\n                    : null });\n        });\n        if (!this.isInheritingCoreFields) {\n            remove(inheritedFieldDefinitions, function (fieldDefinition) {\n                return includes(RX_RECORD_DEFINITION.arCoreFieldIds, fieldDefinition.id);\n            });\n        }\n        return inheritedFieldDefinitions;\n    }\n    updateValues() {\n        var _a;\n        if (this.options) {\n            const recordDefinition = this.options.recordDefinition;\n            this.inheritanceOptions = Object.assign({}, recordDefinition.recordInheritanceSelector.inheritanceOptions);\n            if (recordDefinition.recordInheritanceSelector.inheritanceDescriptor) {\n                this.inheritanceDescriptor = Object.assign({}, recordDefinition.recordInheritanceSelector.inheritanceDescriptor);\n                this.inheritFrom = this.inheritanceDescriptor.inheritingFrom;\n            }\n            this.isNew = !recordDefinition.lastUpdateTime;\n            this.isReadOnlySubject.next(this.options.isReadOnly);\n            this.isSharedInstanceStorageLockedSubject.next(!this.isNew || !isEmpty(this.inheritFrom));\n            if ((_a = recordDefinition.inheritanceDescriptor) === null || _a === void 0 ? void 0 : _a.inheritingFrom) {\n                this.isSharedInstanceStorageLockedSubject.next(true);\n                this.rxRecordDefinitionCacheService\n                    .getRecordDefinition(recordDefinition.inheritanceDescriptor.inheritingFrom)\n                    .pipe(take(1))\n                    .subscribe((inheritFromRecordDefinition) => {\n                    if (inheritFromRecordDefinition.isSharedInstanceStorage) {\n                        this.state.inheritCoreFieldsAutomatically = true;\n                        this.isInheritingCoreFields = true;\n                    }\n                    else {\n                        var fieldDefinitions = recordDefinition.fields;\n                        this.isInheritingCoreFields = some(fieldDefinitions, function (fieldDefinition) {\n                            return fieldDefinition.isInherited && includes(RX_RECORD_DEFINITION.arCoreFieldIds, fieldDefinition.id);\n                        });\n                    }\n                });\n            }\n            this.state = {\n                editMode: !this.isNew,\n                inheritCoreFieldsAutomatically: false,\n                lockCoreFieldInheritanceOption: !this.isNew\n            };\n        }\n    }\n    setValue() {\n        this.value = {\n            inheritanceOptions: this.inheritanceOptions,\n            inheritanceDescriptor: this.inheritFrom\n                ? Object.assign(Object.assign({}, this.inheritanceDescriptor), { inheritingFrom: this.inheritFrom }) : null,\n            isInheritingCoreFields: this.inheritFrom ? this.isInheritingCoreFields : null,\n            inheritedFieldDefinitions: this.inheritedFieldDefinitions\n        };\n    }\n    ngOnDestroy() {\n        this.destroyed$.next(true);\n        this.destroyed$.complete();\n        this.isReadOnlySubject.complete();\n        this.isSharedInstanceStorageLockedSubject.complete();\n        this.inheritingFromSubject.complete();\n        this.isMakeFinalDisabledSubject.complete();\n    }\n}\nRecordInheritanceEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordInheritanceEditorComponent, deps: [{ token: i2.TranslateService }, { token: RxFieldDefinitionManagerService }, { token: i3$1.RxRecordDefinitionCacheService }, { token: i2$1.RxNotificationService }, { token: i1$1.RxGuidService }, { token: i3$1.RxFieldDefinitionService }], target: i0.ɵɵFactoryTarget.Component });\nRecordInheritanceEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: RecordInheritanceEditorComponent, selector: \"rx-record-inheritance-selector\", inputs: { options: \"options\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: RecordInheritanceEditorComponent,\n            multi: true\n        }\n    ], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-container *ngIf=\\\"vm$ | async as vm\\\">\\n  <adapt-rx-checkbox\\n    label=\\\"{{\\n      'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.share-data-with-inheritors.label' | translate\\n    }}\\\"\\n    [(ngModel)]=\\\"inheritanceOptions.isSharedInstanceStorage\\\"\\n    (ngModelChange)=\\\"onInheritanceOptionsChange()\\\"\\n    [disabled]=\\\"vm.isSharedInstanceStorageDisabled\\\"\\n    [tooltip]=\\\"{\\n      iconName: 'question_circle_o',\\n      content:\\n        'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.share-data-with-inheritors.tooltip'\\n        | translate,\\n      placement: 'bottom',\\n      popoverMode: true\\n    }\\\"\\n  >\\n  </adapt-rx-checkbox>\\n\\n  <adapt-rx-checkbox\\n    label=\\\"{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.make-abstract.label' | translate }}\\\"\\n    [(ngModel)]=\\\"inheritanceOptions.isAbstract\\\"\\n    (ngModelChange)=\\\"onInheritanceOptionsChange()\\\"\\n    [disabled]=\\\"vm.isReadOnly\\\"\\n    [tooltip]=\\\"{\\n      iconName: 'question_circle_o',\\n      content: 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.make-abstract.tooltip' | translate,\\n      placement: 'bottom',\\n      popoverMode: true\\n    }\\\"\\n  >\\n  </adapt-rx-checkbox>\\n\\n  <adapt-rx-checkbox\\n    label=\\\"{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.make-final.label' | translate }}\\\"\\n    [(ngModel)]=\\\"inheritanceOptions.isFinal\\\"\\n    (ngModelChange)=\\\"onInheritanceOptionsChange()\\\"\\n    [disabled]=\\\"vm.isMakeFinalDisabled || vm.isReadOnly\\\"\\n    [tooltip]=\\\"{\\n      iconName: 'question_circle_o',\\n      content: 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.make-final.tooltip' | translate,\\n      placement: 'bottom',\\n      popoverMode: true\\n    }\\\"\\n  >\\n  </adapt-rx-checkbox>\\n\\n  <rx-definition-picker\\n    class=\\\"form-group d-block\\\"\\n    name=\\\"inherit-from\\\"\\n    rx-id=\\\"record-definition-name-field\\\"\\n    [options]=\\\"recordDefinitionPickerOptions\\\"\\n    [(ngModel)]=\\\"inheritFrom\\\"\\n    (ngModelChange)=\\\"onRecordDefinitionNameChange($event)\\\"\\n    [disabled]=\\\"vm.isReadOnly\\\"\\n  >\\n  </rx-definition-picker>\\n\\n  <div *ngIf=\\\"inheritFrom\\\">\\n    <label>\\n      <span>{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.inherit.label' | translate }}</span>\\n    </label>\\n\\n    <adapt-rx-checkbox\\n      label=\\\"{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.core-fields.label' | translate }}\\\"\\n      [(ngModel)]=\\\"isInheritingCoreFields\\\"\\n      (ngModelChange)=\\\"onInheritCoreFieldsChange()\\\"\\n      [disabled]=\\\"vm.isCoreFieldsOptionDisabled\\\"\\n    >\\n    </adapt-rx-checkbox>\\n\\n    <adapt-rx-checkbox\\n      label=\\\"{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.rules.label' | translate }}\\\"\\n      [(ngModel)]=\\\"inheritanceDescriptor.isInheritingRules\\\"\\n      [disabled]=\\\"vm.isReadOnly\\\"\\n      (ngModelChange)=\\\"onInheritanceDescriptorChange()\\\"\\n    >\\n    </adapt-rx-checkbox>\\n\\n    <adapt-rx-checkbox\\n      label=\\\"{{\\n        'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.field-permissions.label' | translate\\n      }}\\\"\\n      [(ngModel)]=\\\"inheritanceDescriptor.isInheritingFieldPermissions\\\"\\n      [disabled]=\\\"vm.isReadOnly\\\"\\n      (ngModelChange)=\\\"onInheritanceDescriptorChange()\\\"\\n    >\\n    </adapt-rx-checkbox>\\n\\n    <adapt-rx-checkbox\\n      label=\\\"{{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.associations.label' | translate }}\\\"\\n      [(ngModel)]=\\\"inheritanceDescriptor.isInheritingAssociations\\\"\\n      [disabled]=\\\"vm.isReadOnly\\\"\\n      (ngModelChange)=\\\"onInheritanceDescriptorChange()\\\"\\n    >\\n    </adapt-rx-checkbox>\\n\\n    <adapt-rx-checkbox\\n      label=\\\"{{\\n        'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.audit-field-properties.label' | translate\\n      }}\\\"\\n      [(ngModel)]=\\\"inheritanceDescriptor.isInheritingFieldAuditOptions\\\"\\n      [disabled]=\\\"vm.isReadOnly\\\"\\n      (ngModelChange)=\\\"onInheritanceDescriptorChange()\\\"\\n    >\\n    </adapt-rx-checkbox>\\n  </div>\\n</ng-container>\\n\", components: [{ type: i3.AdaptRxCheckboxComponent, selector: \"adapt-rx-checkbox\", inputs: [\"value\", \"checked\", \"indeterminate\"], outputs: [\"indeterminateChange\"] }, { type: i11.RxDefinitionPickerComponent, selector: \"rx-definition-picker\", inputs: [\"options\", \"isDisabled\"] }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i6.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i6.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], pipes: { \"async\": i5.AsyncPipe, \"translate\": i2.TranslatePipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordInheritanceEditorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-record-inheritance-selector',\n                    templateUrl: './record-inheritance-editor.component.html',\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: RecordInheritanceEditorComponent,\n                            multi: true\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i2.TranslateService }, { type: RxFieldDefinitionManagerService }, { type: i3$1.RxRecordDefinitionCacheService }, { type: i2$1.RxNotificationService }, { type: i1$1.RxGuidService }, { type: i3$1.RxFieldDefinitionService }]; }, propDecorators: { options: [{\n                type: Input\n            }] } });\n\nclass RecordInheritanceEditorModule {\n}\nRecordInheritanceEditorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordInheritanceEditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRecordInheritanceEditorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordInheritanceEditorModule, declarations: [RecordInheritanceEditorComponent], imports: [CommonModule,\n        FormsModule,\n        AdaptTooltipModule,\n        AdaptRxSelectModule,\n        AdaptButtonModule,\n        AdaptCheckbox2Module,\n        AdaptPopoverModule,\n        AdaptIconModule,\n        AdaptRxCheckboxModule,\n        ReactiveFormsModule,\n        TranslateModule,\n        AdaptTableModule,\n        RxDefinitionPickerModule], exports: [RecordInheritanceEditorComponent] });\nRecordInheritanceEditorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordInheritanceEditorModule, imports: [[\n            CommonModule,\n            FormsModule,\n            AdaptTooltipModule,\n            AdaptRxSelectModule,\n            AdaptButtonModule,\n            AdaptCheckbox2Module,\n            AdaptPopoverModule,\n            AdaptIconModule,\n            AdaptRxCheckboxModule,\n            ReactiveFormsModule,\n            TranslateModule,\n            AdaptTableModule,\n            RxDefinitionPickerModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordInheritanceEditorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [RecordInheritanceEditorComponent],\n                    exports: [RecordInheritanceEditorComponent],\n                    entryComponents: [RecordInheritanceEditorComponent],\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        AdaptTooltipModule,\n                        AdaptRxSelectModule,\n                        AdaptButtonModule,\n                        AdaptCheckbox2Module,\n                        AdaptPopoverModule,\n                        AdaptIconModule,\n                        AdaptRxCheckboxModule,\n                        ReactiveFormsModule,\n                        TranslateModule,\n                        AdaptTableModule,\n                        RxDefinitionPickerModule\n                    ]\n                }]\n        }] });\n\nclass SearchFieldEditorModalStore extends ComponentStore {\n    constructor() {\n        super({\n            searchFields: [],\n            isDirty: false,\n            isCategoryVisible: true,\n            isValid: true,\n            availableFields: [],\n            searchDefinition: {}\n        });\n        this.searchFields$ = this.select((state) => state.searchFields);\n        this.availableFields$ = this.select((state) => state.availableFields);\n        this.isDirty$ = this.select((state) => state.isDirty);\n        this.isValid$ = this.select((state) => state.isValid);\n        this.vm$ = this.select(this.availableFields$, this.searchFields$, this.isDirty$, this.isValid$, (availableFields, searchFields, isDirty, isValid) => ({\n            availableFields,\n            searchFields,\n            isDirty,\n            isValid\n        }));\n        this.toggleOpen = this.updater((state, toggleValue) => {\n            const searchFieldItems = [...state.searchFields];\n            searchFieldItems.forEach((control) => {\n                control.get('isOpen').setValue(toggleValue);\n            });\n            return Object.assign(Object.assign({}, state), { searchFields: searchFieldItems });\n        });\n        this.updateFields = this.updater((state, field) => (Object.assign(Object.assign({}, state), { searchFields: [...state.searchFields, field], isValid: false })));\n        this.updateAvailableFields = this.updater((state, field) => {\n            const updatedSearchFields = [...state.searchFields];\n            updatedSearchFields.forEach((control) => {\n                control\n                    .get('isCategoryVisible')\n                    .setValue(find(state.availableFields, { id: field.id }).resourceType !== RX_RECORD_DEFINITION.resourceTypes.attachment);\n            });\n            return Object.assign(Object.assign({}, state), { availableFields: state.availableFields.filter((availableField) => availableField.id !== field.id), isDirty: true, searchFields: updatedSearchFields, isValid: !state.searchFields.some((form) => form.invalid) });\n        });\n        this.removeSearchField = this.updater((state, fieldIndex) => (Object.assign(Object.assign({}, state), { isDirty: true, searchFields: state.searchFields.filter((field, index) => fieldIndex !== index), isValid: !state.searchFields.some((form) => form.invalid) })));\n        this.markDirty = this.updater((state) => (Object.assign(Object.assign({}, state), { isDirty: true, isValid: !state.searchFields.some((form) => form.invalid) })));\n    }\n}\nSearchFieldEditorModalStore.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: SearchFieldEditorModalStore, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nSearchFieldEditorModalStore.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: SearchFieldEditorModalStore });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: SearchFieldEditorModalStore, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\n\nclass SearchFieldEditorModalComponent extends RxModalClass {\n    constructor(searchFieldsEditorModalStore, activeModalRef, formBuilder, injector, rxFieldDefinitionService) {\n        super(activeModalRef, injector);\n        this.searchFieldsEditorModalStore = searchFieldsEditorModalStore;\n        this.activeModalRef = activeModalRef;\n        this.formBuilder = formBuilder;\n        this.injector = injector;\n        this.rxFieldDefinitionService = rxFieldDefinitionService;\n        this.vm$ = this.searchFieldsEditorModalStore.vm$;\n        this.destroyed$ = new ReplaySubject(1);\n        this.recordDefinition = this.activeModalRef.getData().recordDefinition;\n        this.isReadOnly = this.activeModalRef.getData().isReadOnly;\n    }\n    cancel() {\n        this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this.searchFieldsEditorModalStore.isDirty$.pipe(filter(Boolean), take(1)).subscribe(() => {\n            this.markAsDirty();\n        });\n        const searchFields = this.activeModalRef.getData().searchFields.map((searchField, index) => this.formBuilder.group({\n            id: searchField.id,\n            searchFieldName: [[searchField], Validators.required],\n            category: searchField.searchDefinition.searchCategoryName,\n            isOpen: searchField.id === this.activeModalRef.getData().searchFieldIndex,\n            isCategoryVisible: searchField.resourceType !== RX_RECORD_DEFINITION.resourceTypes.attachment,\n            searchDefinition: searchField.searchDefinition\n        }));\n        const availableFields = this.recordDefinition.fields\n            .filter((fieldDefinition) => this.rxFieldDefinitionService.isSearchable(fieldDefinition, this.recordDefinition))\n            .filter((fieldDefinition) => searchFields.every((searchField) => searchField.get('id').value !== fieldDefinition.id));\n        this.searchFieldsEditorModalStore.patchState({ searchFields, availableFields });\n    }\n    optionFormatter(selectOption) {\n        return selectOption.name;\n    }\n    toggleOpen(toggleValue) {\n        this.searchFieldsEditorModalStore.toggleOpen(toggleValue);\n    }\n    addNewSearchField() {\n        this.searchFieldsEditorModalStore.updateFields(this.formBuilder.group({\n            id: '',\n            searchFieldName: [[], Validators.required],\n            category: '',\n            isOpen: true,\n            isCategoryVisible: true,\n            searchDefinition: {\n                enableFTSSearch: false,\n                enableCognitiveSearch: false\n            }\n        }));\n    }\n    onSelectedFieldChange(field) {\n        this.searchFieldsEditorModalStore.updateAvailableFields(field[0]);\n    }\n    onSearchCategoryChange() {\n        this.searchFieldsEditorModalStore.markDirty();\n    }\n    onRemoveSearchField(fieldIndex) {\n        this.searchFieldsEditorModalStore.removeSearchField(fieldIndex);\n    }\n    saveSearchFields() {\n        this.searchFieldsEditorModalStore.searchFields$.pipe(take(1)).subscribe((searchFields) => {\n            this.activeModalRef.close(searchFields);\n        });\n    }\n    ngOnDestroy() {\n        this.destroyed$.next(true);\n        this.destroyed$.complete();\n    }\n}\nSearchFieldEditorModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: SearchFieldEditorModalComponent, deps: [{ token: SearchFieldEditorModalStore }, { token: i3.ActiveModalRef }, { token: i6.FormBuilder }, { token: i0.Injector }, { token: i3$1.RxFieldDefinitionService }], target: i0.ɵɵFactoryTarget.Component });\nSearchFieldEditorModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: SearchFieldEditorModalComponent, selector: \"rx-search-field-editor-modal\", providers: [SearchFieldEditorModalStore], usesInheritance: true, ngImport: i0, template: \"<ng-container *ngIf=\\\"vm$ | async as vm\\\">\\n  <div class=\\\"designer-modal-body modal-body d-flex mh-100\\\">\\n    <div class=\\\"row flex-grow-1 w-100\\\">\\n      <div class=\\\"d-flex flex-column mh-100 col\\\">\\n        <div class=\\\"d-flex align-items-start justify-content-between\\\">\\n          <button\\n            adapt-button\\n            btn-type=\\\"tertiary\\\"\\n            class=\\\"mt-2 p-0\\\"\\n            rx-id=\\\"add-new-search-field-button\\\"\\n            *ngIf=\\\"!isReadOnly\\\"\\n            (click)=\\\"addNewSearchField()\\\"\\n          >\\n            <span class=\\\"d-icon-plus_circle\\\"></span>\\n            {{ 'com.bmc.arsys.rx.client.record-designer.search-fields.add-search-field.button.label' | translate }}\\n          </button>\\n\\n          <div *ngIf=\\\"vm.searchFields.length\\\" class=\\\"btn-group ml-auto\\\">\\n            <button adapt-button btn-type=\\\"tertiary\\\" type=\\\"button\\\" rx-id=\\\"expand-all-button\\\" (click)=\\\"toggleOpen(true)\\\">\\n              {{ 'com.bmc.arsys.rx.client.common.expand-all.label' | translate }}\\n            </button>\\n\\n            <button\\n              adapt-button\\n              btn-type=\\\"tertiary\\\"\\n              type=\\\"button\\\"\\n              rx-id=\\\"collapse-all-button\\\"\\n              (click)=\\\"toggleOpen(false)\\\"\\n            >\\n              {{ 'com.bmc.arsys.rx.client.common.collapse-all.label' | translate }}\\n            </button>\\n          </div>\\n        </div>\\n\\n        <div\\n          class=\\\"border-bottom pb-1 d-flex align-items-center\\\"\\n          *ngIf=\\\"vm.searchFields.length\\\"\\n          id=\\\"selected-search-field\\\"\\n          class=\\\"designer-modal-accordion-wrapper\\\"\\n        >\\n          <adapt-accordion [multiselect]=\\\"true\\\">\\n            <div\\n              *ngFor=\\\"let searchField of vm.searchFields; let index = index; let first = first; let last = last\\\"\\n              class=\\\"designer-modal-accordion-content\\\"\\n            >\\n              <adapt-accordion-tab\\n                class=\\\"d-block\\\"\\n                [formGroup]=\\\"searchField\\\"\\n                [isOpen]=\\\"searchField.get('isOpen').value\\\"\\n                (open)=\\\"searchField.get('isOpen').setValue(true)\\\"\\n                (close)=\\\"searchField.get('isOpen').setValue(false)\\\"\\n              >\\n                <div class=\\\"card-title-text w-100\\\">\\n                  <div class=\\\"designer-modal-card-title-content\\\">\\n                    <div class=\\\"left-header-block pl-0\\\">\\n                      <div rx-id=\\\"card-title\\\">\\n                        {{ searchField.get('searchFieldName').value[0]?.name }}\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"right-header-block\\\">\\n                      <button\\n                        class=\\\"d-icon-left-cross_adapt p-1 pr-4 ml-3\\\"\\n                        adapt-button\\n                        size=\\\"small\\\"\\n                        type=\\\"button\\\"\\n                        rx-id=\\\"remove-button\\\"\\n                        *ngIf=\\\"!isReadOnly\\\"\\n                        (click)=\\\"onRemoveSearchField(index)\\\"\\n                      >\\n                        {{ 'com.bmc.arsys.rx.client.common.remove.label' | translate }}\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row form-group\\\">\\n                  <adapt-rx-select\\n                    [ngClass]=\\\"recordDefinition.enableCognitiveSearch ? 'd-block col-12' : 'd-block col-6'\\\"\\n                    rx-id=\\\"available-fields\\\"\\n                    label=\\\"{{ 'com.bmc.arsys.rx.client.record-designer.search-fields.field.label' | translate }}\\\"\\n                    formControlName=\\\"searchFieldName\\\"\\n                    [options]=\\\"vm.availableFields\\\"\\n                    [optionFormatter]=\\\"optionFormatter\\\"\\n                    [optionContentTemplate]=\\\"optionTemplate\\\"\\n                    (ngModelChange)=\\\"onSelectedFieldChange($event)\\\"\\n                    [disabled]=\\\"isReadOnly\\\"\\n                  ></adapt-rx-select>\\n\\n                  <adapt-rx-textfield\\n                    *ngIf=\\\"!recordDefinition.enableCognitiveSearch && searchField.get('isCategoryVisible').value\\\"\\n                    class=\\\"d-block col-6\\\"\\n                    rx-id=\\\"search-field-category\\\"\\n                    label=\\\"{{\\n                      'com.bmc.arsys.rx.client.record-designer.search-fields.search-category-name.label' | translate\\n                    }}\\\"\\n                    formControlName=\\\"category\\\"\\n                    (ngModelChange)=\\\"onSearchCategoryChange()\\\"\\n                    [disabled]=\\\"isReadOnly\\\"\\n                  ></adapt-rx-textfield>\\n                </div>\\n              </adapt-accordion-tab>\\n            </div>\\n          </adapt-accordion>\\n        </div>\\n\\n        <div *ngIf=\\\"!vm.searchFields.length\\\" class=\\\"d-flex justify-content-center h-100 align-items-center mt-2\\\">\\n          <adapt-empty-state\\n            class=\\\"w-100\\\"\\n            label=\\\"{{ 'com.bmc.arsys.rx.client.record-designer.search-fields.empty-state.message' | translate }}\\\"\\n            type=\\\"config\\\"\\n          ></adapt-empty-state>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"modal-footer\\\">\\n    <div *ngIf=\\\"!isReadOnly\\\">\\n      <button\\n        adapt-button\\n        type=\\\"button\\\"\\n        btn-type=\\\"primary\\\"\\n        rx-id=\\\"save-button\\\"\\n        (click)=\\\"saveSearchFields()\\\"\\n        [disabled]=\\\"!vm.isValid || !vm.isDirty\\\"\\n      >\\n        {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\\n      </button>\\n      <button adapt-button type=\\\"button\\\" btn-type=\\\"secondary\\\" (click)=\\\"cancel()\\\" rx-id=\\\"cancel-button\\\">\\n        {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\\n      </button>\\n    </div>\\n\\n    <button type=\\\"button\\\" adapt-button btn-type=\\\"secondary\\\" rx-id=\\\"close-button\\\" (click)=\\\"cancel()\\\" *ngIf=\\\"isReadOnly\\\">\\n      {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\\n    </button>\\n  </div>\\n</ng-container>\\n\", styles: [\":root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}.designer-modal-body{height:645px;min-height:calc(100% - 61px)!important}.designer-modal-accordion-wrapper{display:flex;flex-direction:column;height:100%;overflow:auto;padding-top:10px}.designer-modal-accordion-content{position:relative}.designer-modal-accordion-content.cdk-drag-preview{z-index:1200!important}.designer-modal-drag-handle{cursor:move;position:absolute;top:0;left:0;height:46px;padding:14px 10px 14px 14px;z-index:1}.designer-modal-card-title-content{width:100%;display:flex}.designer-modal-card-title-content .left-header-block,.designer-modal-card-title-content .right-header-block{display:flex;align-items:center}.designer-modal-card-title-content .left-header-block{flex-grow:1;min-width:0;font-size:14px;padding-left:22px}.designer-modal-card-sub-title{color:#7c7f81;font-weight:normal}.designer-modal-card-title-index-buttons{display:flex;font-size:19px}.rx-card{overflow:auto}.rx-tree-draggable-node{cursor:pointer}.rx-tree-draggable-node.cdk-drag-preview{z-index:1200!important}.rx-tree-draggable-node.cdk-drag{opacity:1}.rx-tree-node-label{word-break:break-all}rx-form-builder{max-width:400px}\\n\"], components: [{ type: i3.AdaptButtonComponent, selector: \"adapt-button, button[adapt-button], a[adapt-button]\", inputs: [\"btn-type\", \"size\", \"disabled\", \"type\", \"tabIndex\"], exportAs: [\"adaptBtn\"] }, { type: i3.AdaptAccordionComponent, selector: \"adapt-accordion\", inputs: [\"config\", \"multiselect\", \"bordered\"], outputs: [\"openTab\", \"closeTab\"] }, { type: i3.AdaptAccordionTabComponent, selector: \"adapt-accordion-tab\", inputs: [\"title\", \"renderContentWhenClosed\", \"customClass\", \"multiline\", \"icon\", \"disabled\", \"isOpen\"], outputs: [\"open\", \"close\"] }, { type: i3.AdaptRxSelectComponent, selector: \"adapt-rx-select\", inputs: [\"options\", \"emptyOption\", \"optionFormatter\", \"optionContentTemplate\", \"disabledOptionResolver\", \"titleFormatter\", \"focusFirst\", \"texts\", \"multiple\", \"singleSelectStyle\", \"enableFilter\", \"inline\", \"selectAllButton\", \"deselectAllButton\", \"loadMoreButton\", \"loadMoreCallback\", \"loadMoreInProgress\", \"loadingState\", \"placeholder\", \"size\", \"closeOnSelect\", \"placement\", \"appendToBody\", \"popupMaxHeight\", \"popupClass\", \"pageSize\", \"ariaInvalid\", \"virtualScroll\", \"virtualScrollItemSize\", \"virtualScrollTemplateCacheSize\", \"minBufferPx\", \"maxBufferPx\"], outputs: [\"onSelectionChange\", \"onPopupOpenChange\", \"onFilterValueChange\"] }, { type: i3.AdaptRxTextfieldComponent, selector: \"adapt-rx-textfield\", inputs: [\"prepend\", \"append\", \"isPassword\", \"autocomplete\", \"placeholder\", \"size\", \"fieldTagText\", \"fieldTagType\", \"showValidState\", \"showValidStateIcon\", \"showInvalidStateIcon\", \"validStateMessage\", \"disabledStyleForReadonlyState\"] }, { type: i3.AdaptEmptyStateComponent, selector: \"adapt-empty-state\", inputs: [\"label\", \"type\", \"inverted\"] }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i5.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i6.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i6.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i6.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i6.FormControlName, selector: \"[formControlName]\", inputs: [\"disabled\", \"formControlName\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { type: i5.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], pipes: { \"async\": i5.AsyncPipe, \"translate\": i2.TranslatePipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: SearchFieldEditorModalComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-search-field-editor-modal',\n                    templateUrl: './search-field-editor-modal.component.html',\n                    styleUrls: ['./search-field-editor-modal.component.scss'],\n                    providers: [SearchFieldEditorModalStore]\n                }]\n        }], ctorParameters: function () { return [{ type: SearchFieldEditorModalStore }, { type: i3.ActiveModalRef }, { type: i6.FormBuilder }, { type: i0.Injector }, { type: i3$1.RxFieldDefinitionService }]; } });\n\nclass SearchFieldEditorControlComponent extends ValueAccessor {\n    constructor(rxModalService, translateService) {\n        super();\n        this.rxModalService = rxModalService;\n        this.translateService = translateService;\n        this.searchFieldsSubject = new BehaviorSubject([]);\n        this.searchFields$ = this.searchFieldsSubject.asObservable().pipe(shareReplay(1));\n    }\n    ngOnInit() {\n        if (this.options) {\n            this.updateValues();\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes.options) {\n            this.updateValues();\n        }\n    }\n    ngOnDestroy() {\n        this.searchFieldsSubject.complete();\n    }\n    updateValues() {\n        const searchFields = this.options.recordDefinitionModel.fields.filter((fieldDefinition) => {\n            var _a, _b;\n            return (fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.character ||\n                fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.attachment) &&\n                Boolean(fieldDefinition.searchDefinition) &&\n                (((_a = fieldDefinition.searchDefinition) === null || _a === void 0 ? void 0 : _a.enableFTSSearch) || ((_b = fieldDefinition.searchDefinition) === null || _b === void 0 ? void 0 : _b.enableCognitiveSearch));\n        });\n        this.searchFieldsSubject.next(searchFields);\n    }\n    openEditor(searchFieldIndex) {\n        this.searchFields$.pipe(take(1)).subscribe((searchFields) => {\n            this.rxModalService\n                .openModal({\n                content: SearchFieldEditorModalComponent,\n                title: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.search-fields.search-field-editor.title'),\n                data: {\n                    searchFields: searchFields,\n                    fieldDefinitions: this.options.recordDefinitionModel.fields,\n                    recordDefinition: this.options.recordDefinitionModel,\n                    searchFieldIndex,\n                    isReadOnly: this.options.isReadOnly\n                }\n            })\n                .then((updatedSearchFields) => {\n                const searchFieldDefinitions = updatedSearchFields.map((searchField) => {\n                    var _a;\n                    const field = this.options.recordDefinitionModel.fields.find((fieldDefinition) => { var _a; return ((_a = searchField.get('searchFieldName')) === null || _a === void 0 ? void 0 : _a.value[0].id) === fieldDefinition.id; });\n                    if (field) {\n                        return Object.assign(Object.assign({}, field), { searchDefinition: Object.assign(Object.assign({}, field.searchDefinition), { enableCognitiveSearch: Boolean(this.options.recordDefinitionModel.enableCognitiveSearch), enableFTSSearch: ((_a = field.searchDefinition) === null || _a === void 0 ? void 0 : _a.enableFTSSearch) ||\n                                    !Boolean(this.options.recordDefinitionModel.enableCognitiveSearch), stripTagsForSearch: false, enableLiteralSearch: false, searchCategoryName: searchField.get('category').value }), overlayDescriptor: Object.assign(Object.assign({}, field.overlayDescriptor), { otherPropertiesOverlayType: RX_OVERLAY.overlayTypes.overwrite }) });\n                    }\n                });\n                this.value = searchFieldDefinitions;\n                this.searchFieldsSubject.next(searchFieldDefinitions);\n            })\n                .catch(noop);\n        });\n    }\n    removeSearchField(searchField) {\n        this.searchFields$.pipe(take(1)).subscribe((searchFields) => {\n            this.rxModalService\n                .confirm({\n                title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n                modalStyle: RX_MODAL.modalStyles.warning,\n                message: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.search-fields.delete-confirmation.message', { name: searchField.name })\n            })\n                .then((isDeleteConfirmed) => {\n                if (isDeleteConfirmed) {\n                    const searchFieldsList = searchFields.filter((fieldDefinition) => fieldDefinition.name !== searchField.name);\n                    this.value = searchFieldsList;\n                    this.searchFieldsSubject.next(searchFieldsList);\n                }\n            });\n        });\n    }\n}\nSearchFieldEditorControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: SearchFieldEditorControlComponent, deps: [{ token: i1.RxModalService }, { token: i2.TranslateService }], target: i0.ɵɵFactoryTarget.Component });\nSearchFieldEditorControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: SearchFieldEditorControlComponent, selector: \"rx-search-field-editor-control-control\", inputs: { options: \"options\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: SearchFieldEditorControlComponent,\n            multi: true\n        }\n    ], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<adapt-button\\n  type=\\\"button\\\"\\n  class=\\\"p-0 pb-1\\\"\\n  btn-type=\\\"tertiary\\\"\\n  rx-id=\\\"add-search-field-button\\\"\\n  *ngIf=\\\"!isDisabled\\\"\\n  (click)=\\\"openEditor()\\\"\\n>\\n  <span class=\\\"d-icon-left-plus_circle\\\"> </span>\\n  {{ 'com.bmc.arsys.rx.client.record-designer.search-fields.search-field-editor.title' | translate }}\\n</adapt-button>\\n\\n<div *ngIf=\\\"searchFields$ | async as searchFields\\\">\\n  <div class=\\\"rx-search-field\\\" *ngFor=\\\"let searchField of searchFields\\\">\\n    <div class=\\\"rx-selected-column__header-container\\\">\\n      <span rx-id=\\\"card-title\\\" class=\\\"rx-search-field__header-title\\\">{{ searchField.name }}</span>\\n\\n      <button\\n        type=\\\"button\\\"\\n        (click)=\\\"removeSearchField(searchField)\\\"\\n        class=\\\"rx-button-unstyled d-icon-cross btn-link float-right\\\"\\n        *ngIf=\\\"!options.isReadOnly\\\"\\n        rx-id=\\\"remove-search-field\\\"\\n      ></button>\\n\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"rx-button-unstyled d-icon-left-pencil btn-link float-right\\\"\\n        rx-id=\\\"edit-button\\\"\\n        (click)=\\\"openEditor(searchField.id)\\\"\\n      ></button>\\n    </div>\\n\\n    <div class=\\\"rx-search-field-type\\\" rx-id=\\\"search-field-type\\\">\\n      <span>\\n        {{\\n          (searchField.searchDefinition.enableFTSSearch\\n            ? 'com.bmc.arsys.rx.client.record-designer.search-fields.full-text-search.label'\\n            : 'com.bmc.arsys.rx.client.record-designer.search-fields.cognitive-search.label'\\n          ) | translate\\n        }}\\n      </span>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\":root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}.rx-search-field{margin-bottom:5px;border:1px solid #d6d7d8;border-radius:2px;padding:5px 10px;word-break:break-all;font-weight:var(--font-weight-bold)}.rx-search-field__header-container{display:flex}.rx-search-field__header-title{flex:1 1 auto;overflow:hidden;text-overflow:ellipsis;font-size:14px}.rx-search-field-type{color:#959899;font-size:10px;overflow:hidden;text-overflow:ellipsis}.d-icon-cross,.d-icon-left-pencil{cursor:pointer}.d-icon-cross:not(:hover),.d-icon-left-pencil:not(:hover){color:#313538}\\n\"], components: [{ type: i3.AdaptButtonComponent, selector: \"adapt-button, button[adapt-button], a[adapt-button]\", inputs: [\"btn-type\", \"size\", \"disabled\", \"type\", \"tabIndex\"], exportAs: [\"adaptBtn\"] }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i5.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], pipes: { \"translate\": i2.TranslatePipe, \"async\": i5.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: SearchFieldEditorControlComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-search-field-editor-control-control',\n                    templateUrl: './search-field-editor-control.component.html',\n                    styleUrls: ['./search-field-editor-control.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: SearchFieldEditorControlComponent,\n                            multi: true\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i1.RxModalService }, { type: i2.TranslateService }]; }, propDecorators: { options: [{\n                type: Input\n            }] } });\n\nclass SearchFieldEditorModule {\n}\nSearchFieldEditorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: SearchFieldEditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSearchFieldEditorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: SearchFieldEditorModule, declarations: [SearchFieldEditorControlComponent, SearchFieldEditorModalComponent], imports: [CommonModule,\n        AdaptTooltipModule,\n        AdaptRxSelectModule,\n        AdaptButtonModule,\n        AdaptRxFormControlModule,\n        AdaptRxTextfieldModule,\n        AdaptAccordionModule,\n        RxModalModule,\n        ReactiveFormsModule,\n        TranslateModule,\n        AdaptEmptyStateModule], exports: [SearchFieldEditorControlComponent, SearchFieldEditorModalComponent] });\nSearchFieldEditorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: SearchFieldEditorModule, imports: [[\n            CommonModule,\n            AdaptTooltipModule,\n            AdaptRxSelectModule,\n            AdaptButtonModule,\n            AdaptRxFormControlModule,\n            AdaptRxTextfieldModule,\n            AdaptAccordionModule,\n            RxModalModule,\n            ReactiveFormsModule,\n            TranslateModule,\n            AdaptEmptyStateModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: SearchFieldEditorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [SearchFieldEditorControlComponent, SearchFieldEditorModalComponent],\n                    exports: [SearchFieldEditorControlComponent, SearchFieldEditorModalComponent],\n                    entryComponents: [SearchFieldEditorControlComponent, SearchFieldEditorModalComponent],\n                    imports: [\n                        CommonModule,\n                        AdaptTooltipModule,\n                        AdaptRxSelectModule,\n                        AdaptButtonModule,\n                        AdaptRxFormControlModule,\n                        AdaptRxTextfieldModule,\n                        AdaptAccordionModule,\n                        RxModalModule,\n                        ReactiveFormsModule,\n                        TranslateModule,\n                        AdaptEmptyStateModule\n                    ]\n                }]\n        }] });\n\nconst init = createAction('[Record Designer] Init', props());\nconst loadDefinition = createAction('[Record Designer] Load Definition');\nconst clearSearchFields = createAction('[Record Designer] Clear Search Fields');\nconst loadDefinitionSuccess = createAction('[Record Designer] Load Definition Success', props());\nconst initDefinitionModel = createAction('[Record Designer] Init Definition Model', props());\nconst markDesignerPristine = createAction('[Record Designer] Mark Designer Pristine');\nconst markDesignerDirty = createAction('[Record Designer] Mark Designer Dirty');\nconst toggleDesignMode = createAction('[Record Designer] Toggle Design Mode');\nconst updateDefinitionModelFromDesigner = createAction('[Record Designer] Update Definition Model From Designer', props());\nconst updateSelectedFieldModel = createAction('[Record Designer] Update Selected Field Model', props());\nconst setInspectorTabIndex = createAction('[Record Designer] Set Inspector Tab Index', props());\nconst createNewFieldModel = createAction('[Record Designer] Create New Field Model', props());\nconst addFieldModel = createAction('[Record Designer] Add Field Model', props());\nconst addNewFieldModels = createAction('[Record Designer] Add New Field Models', props());\nconst setSelectedFieldGuid = createAction('[Record Designer] Set Selected Field GUID', props());\nconst clearSelectedFieldGuid = createAction('[Record Designer] Clear Selected Field GUID');\nconst deleteSelectedField = createAction('[Record Designer] Delete Selected Field');\nconst copySelectedField = createAction('[Record Designer] Copy Selected Field');\nconst checkIfFieldUsedByIndexes = createAction('[Record Designer] Check If Field Used By Indexes');\nconst deleteSelectedFieldSuccess = createAction('[Record Designer] Delete Selected Field Success');\nconst deleteSelectedFieldError = createAction('[Record Designer] Delete Selected Field Error');\nconst saveDefinition = createAction('[Record Designer] Save Definition');\nconst saveDefinitionSuccess = createAction('[Record Designer] Save Definition Success', props());\nconst destroy = createAction('[Record Designer] Destroy');\n\nconst RX_RECORD_DESIGNER = {\n    featureSelector: 'recordDesigner',\n    joinCriteriaPath: 'joinCriteria',\n    archiveDataCriteriaPath: 'archiveDataCriteria',\n    archiving: {\n        types: {\n            doNotArchive: {\n                nameKey: 'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.types.do-not-archive.label',\n                id: ArchiveType.None\n            },\n            archiveAndDeleteSourceRecord: {\n                nameKey: 'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.types.archive-and-delete-source-record.label',\n                id: ArchiveType.CopyToArchiveAndDeleteFromSource\n            },\n            deleteSourceRecord: {\n                nameKey: 'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.types.delete-source-record.label',\n                id: ArchiveType.DeleteFromSource\n            }\n        }\n    }\n};\n\nconst recordDesignerStateSelector = createFeatureSelector(RX_RECORD_DESIGNER.featureSelector);\nconst recordDesignerModelSelector = createSelector(recordDesignerStateSelector, (recordDesignerState) => recordDesignerState.model);\nconst definitionNameSelector = createSelector(recordDesignerModelSelector, (recordDesignerModel) => recordDesignerModel.definitionName);\nconst bundleIdSelector = createSelector(recordDesignerModelSelector, (recordDesignerModel) => recordDesignerModel.bundleId);\nconst isDesignModeSelector = createSelector(recordDesignerModelSelector, (recordDesignerModel) => recordDesignerModel.isDesignMode);\nconst isDirtySelector = createSelector(recordDesignerModelSelector, (recordDesignerModel) => recordDesignerModel.isDirty);\nconst inspectorTabIndexSelector = createSelector(recordDesignerModelSelector, (recordDesignerModel) => recordDesignerModel.inspectorTabIndex);\nconst definitionModelSelector = createSelector(recordDesignerModelSelector, (recordDesignerModel) => recordDesignerModel.definitionModel);\nconst definitionModelFromDefinitionSelector = createSelector(recordDesignerModelSelector, (recordDesignerModel) => recordDesignerModel.definitionModelFromDefinition);\nconst selectedFieldGuidSelector = createSelector(recordDesignerModelSelector, (recordDesignerModel) => recordDesignerModel.selectedFieldGuid);\nconst savedDefinitionNameSelector = createSelector(recordDesignerModelSelector, (recordDesignerModel) => recordDesignerModel.savedDefinitionName);\n\nclass RxRecordDefinitionValidatorService {\n    constructor(rxFieldDefinitionService, translateService, rxDefinitionNameService, rxFieldDefinitionManagerService) {\n        this.rxFieldDefinitionService = rxFieldDefinitionService;\n        this.translateService = translateService;\n        this.rxDefinitionNameService = rxDefinitionNameService;\n        this.rxFieldDefinitionManagerService = rxFieldDefinitionManagerService;\n    }\n    validate(definitionModel) {\n        var _a;\n        const duplicateFieldErrorMsg = this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.must-be-unique.message', { propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label') });\n        const definitionValidationIssues = [];\n        const fieldValidationIssueSections = [];\n        chain(definitionModel.fields)\n            .clone()\n            .reverse()\n            .forEach((fieldModel, index, fieldModels) => {\n            let issues = [];\n            if (find(fieldModels, (model) => fieldModel.name === model.name, index + 1)) {\n                issues.push({\n                    type: ValidationIssueType.Error,\n                    description: duplicateFieldErrorMsg,\n                    data: {\n                        propertyName: 'name',\n                        guid: fieldModel.guid\n                    }\n                });\n            }\n            if (fieldModel.id && find(fieldModels, (model) => fieldModel.id === model.id, index + 1)) {\n                issues.push({\n                    type: ValidationIssueType.Error,\n                    description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.duplicate-field-id-error.message'),\n                    data: {\n                        propertyName: 'id',\n                        guid: fieldModel.guid\n                    }\n                });\n            }\n            if (definitionModel.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType &&\n                !fieldModel.lastUpdateTime &&\n                !includes(RX_RECORD_DEFINITION.coreFieldIds, fieldModel.id) &&\n                includes(RX_RECORD_DEFINITION.AR_CORE_FIELD_IDS, fieldModel.id)) {\n                issues.push({\n                    type: ValidationIssueType.Error,\n                    description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.invalid-field-id.message', { fieldId: fieldModel.id }),\n                    data: {\n                        editFieldGroups: true,\n                        guid: fieldModel.guid\n                    }\n                });\n            }\n            issues = issues.concat(this.rxFieldDefinitionManagerService.validate(fieldModel, definitionModel));\n            if (issues.length) {\n                fieldValidationIssueSections.push({\n                    title: fieldModel.name,\n                    issues: issues\n                });\n            }\n        })\n            .value();\n        if (isEmpty(trim(definitionModel.name))) {\n            definitionValidationIssues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.cannot-be-blank.message', {\n                    propertyName: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.record-name.label')\n                }),\n                data: {\n                    propertyName: 'name'\n                }\n            });\n        }\n        if (!RX_RECORD_DEFINITION.validDefinitionNameRegex.test(definitionModel.name)) {\n            definitionValidationIssues.push({\n                type: ValidationIssueType.Error,\n                description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message', { propertyName: this.translateService.instant('com.bmc.arsys.rx.client.common.record-definition.label') }),\n                data: {\n                    propertyName: 'name'\n                }\n            });\n        }\n        if (definitionModel === null || definitionModel === void 0 ? void 0 : definitionModel.isAuditingEnabled) {\n            const auditRecordDefinitionName = this.rxDefinitionNameService.getDisplayName(definitionModel.auditRecordDefinitionName);\n            if (isEmpty(trim(auditRecordDefinitionName))) {\n                definitionValidationIssues.push({\n                    type: ValidationIssueType.Error,\n                    description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.invalid-audit-definition-name.message'),\n                    data: {\n                        propertyName: 'auditRecordDefinitionName'\n                    }\n                });\n            }\n            if (!RX_RECORD_DEFINITION.validDefinitionNameRegex.test(auditRecordDefinitionName)) {\n                definitionValidationIssues.push({\n                    type: ValidationIssueType.Error,\n                    description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message', {\n                        propertyName: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.audit-record-definition-name.label')\n                    }),\n                    data: {\n                        propertyName: 'auditRecordDefinitionName'\n                    }\n                });\n            }\n        }\n        if (definitionModel.isArchivingEnabled &&\n            definitionModel.archiveType === RX_RECORD_DESIGNER.archiving.types.archiveAndDeleteSourceRecord.id) {\n            const archiveRecordDefinitionName = this.rxDefinitionNameService.getDisplayName(definitionModel.archiveRecordDefinitionName);\n            if (isEmpty(trim(archiveRecordDefinitionName))) {\n                definitionValidationIssues.push({\n                    type: ValidationIssueType.Error,\n                    description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.invalid-archive-definition-name.message'),\n                    data: {\n                        propertyName: 'archiveRecordDefinitionName'\n                    }\n                });\n            }\n            if (!RX_RECORD_DEFINITION.validDefinitionNameRegex.test(archiveRecordDefinitionName)) {\n                definitionValidationIssues.push({\n                    type: ValidationIssueType.Error,\n                    description: this.translateService.instant('com.bmc.arsys.rx.client.designer.validation.invalid-definition-name.message', {\n                        propertyName: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archive-record-definition-name.label')\n                    }),\n                    data: {\n                        propertyName: 'archiveRecordDefinitionName'\n                    }\n                });\n            }\n        }\n        if (definitionModel.weightedRelevancyFields) {\n            const searchTitleField = find(definitionModel.fields, { id: (_a = definitionModel.weightedRelevancyFields) === null || _a === void 0 ? void 0 : _a.TITLE });\n            if (searchTitleField && !searchTitleField.searchDefinition) {\n                definitionValidationIssues.push({\n                    type: ValidationIssueType.Error,\n                    description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.validation.invalid-text-search-enabled-field.message'),\n                    data: {\n                        propertyName: 'searchTitleField'\n                    }\n                });\n            }\n        }\n        forEach(definitionModel.indexDefinitions, (indexDefinitionModel, index) => {\n            if (!indexDefinitionModel.indexFieldIds.length) {\n                definitionValidationIssues.push({\n                    type: ValidationIssueType.Error,\n                    description: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.indexes.no-field-selected.message', {\n                        indexName: indexDefinitionModel.indexName ||\n                            this.translateService.instant('com.bmc.arsys.rx.client.record-designer.indexes.new-index.label')\n                    }),\n                    data: {\n                        indexToEditIndex: index,\n                        propertyName: 'indexDefinitions'\n                    }\n                });\n            }\n        });\n        let issues = [];\n        if (definitionValidationIssues.length) {\n            issues.push({\n                title: this.translateService.instant('com.bmc.arsys.rx.client.common.record-definition.label'),\n                issues: definitionValidationIssues\n            });\n        }\n        issues = issues.concat(reverse(fieldValidationIssueSections));\n        return issues;\n    }\n}\nRxRecordDefinitionValidatorService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxRecordDefinitionValidatorService, deps: [{ token: i3$1.RxFieldDefinitionService }, { token: i2.TranslateService }, { token: i2$1.RxDefinitionNameService }, { token: RxFieldDefinitionManagerService }], target: i0.ɵɵFactoryTarget.Injectable });\nRxRecordDefinitionValidatorService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxRecordDefinitionValidatorService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxRecordDefinitionValidatorService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i3$1.RxFieldDefinitionService }, { type: i2.TranslateService }, { type: i2$1.RxDefinitionNameService }, { type: RxFieldDefinitionManagerService }]; } });\n\nclass ArchiveAssociationSelectorComponent extends RxModalClass {\n    constructor(activeModalRef, translateService, injector) {\n        super(activeModalRef, injector);\n        this.activeModalRef = activeModalRef;\n        this.translateService = translateService;\n        this.injector = injector;\n        this.isOverlayMode = this.activeModalRef.getData().isOverlayMode;\n        this.isReadOnly = this.activeModalRef.getData().isReadOnly;\n        this.actualAssociationsToFollow = this.activeModalRef.getData().actualAssociationsToFollow;\n        this.selectedAssociationsToFollow = this.activeModalRef.getData().selectedAssociationsToFollow;\n        this.associationType = this.selectedAssociationsToFollow.selectionType;\n        this.associationTypes = {\n            followParent: AssociationSelectionType.FollowParent,\n            selected: AssociationSelectionType.Selected,\n            allEnforced: AssociationSelectionType.AllEnforced,\n            all: AssociationSelectionType.All\n        };\n        this.columns = [];\n        this.associationGridRows = this.activeModalRef.getData().associationDefinitions.map((association) => ({\n            name: association.name,\n            firstRecord: association.nodeAId,\n            secondRecord: association.nodeBId,\n            enforced: association.nodeAModality === RX_ASSOCIATION_DEFINITION.modality.required,\n            isSelectionDisabled: this.isReadOnly,\n            isAssociationSelectedInBase: this.isOverlayMode && this.actualAssociationsToFollow.specificAssociationNames.includes(association.name)\n        }));\n        this.selectedAssociationGridRows = [];\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this.columns = [\n            {\n                field: 'name',\n                header: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n                cellTemplate: this.nameCellTemplate\n            },\n            {\n                field: 'firstRecord',\n                header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.association-first-record.label'),\n                cellTemplate: this.nameCellTemplate\n            },\n            {\n                field: 'secondRecord',\n                header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.association-second-record.label'),\n                cellTemplate: this.nameCellTemplate\n            },\n            {\n                field: 'enforced',\n                header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.enforced-association.label'),\n                cellTemplate: this.enforceCellTemplate\n            }\n        ];\n        this.selectAssociations();\n        this.selectedAssociationGridRows = this.selectedAssociationGridRows.concat(this.associationGridRows.filter((associationGridRow) => includes(this.selectedAssociationsToFollow.specificAssociationNames, associationGridRow.name)));\n    }\n    cancel() {\n        this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n    }\n    onSelectionChange(selectedRows) {\n        this.markAsDirty();\n        this.selectedAssociationGridRows = selectedRows;\n    }\n    disabledRowSelectionResolver(rowData) {\n        return rowData.isSelectionDisabled || rowData.isAssociationSelectedInBase;\n    }\n    selectAssociations() {\n        this.selectedAssociationGridRows = [];\n        if (this.associationType === AssociationSelectionType.Selected) {\n            this.enableRowSelection();\n        }\n        else if (this.associationType === AssociationSelectionType.All) {\n            this.selectedAssociationGridRows = [...this.associationGridRows];\n            this.disableRowSelection();\n        }\n        else if (this.associationType === AssociationSelectionType.AllEnforced) {\n            this.selectedAssociationGridRows = this.associationGridRows.filter((row) => row.enforced);\n            this.disableRowSelectionForEnforcedAssociations();\n        }\n        else if (this.associationType === AssociationSelectionType.FollowParent) {\n            this.disableRowSelection();\n        }\n        if (this.isOverlayMode &&\n            (this.actualAssociationsToFollow.selectionType === AssociationSelectionType.AllEnforced ||\n                this.actualAssociationsToFollow.selectionType === AssociationSelectionType.Selected)) {\n            this.selectAssociationsFromBase();\n        }\n    }\n    selectAssociationsFromBase() {\n        this.selectedAssociationGridRows = this.selectedAssociationGridRows.concat(this.associationGridRows.filter((associationGridRow) => includes(this.actualAssociationsToFollow.specificAssociationNames, associationGridRow.name)));\n    }\n    disableRowSelectionForEnforcedAssociations() {\n        this.associationGridRows.forEach((row) => {\n            row.isSelectionDisabled = this.isReadOnly || row.enforced;\n        });\n    }\n    disableRowSelection() {\n        this.associationGridRows.forEach((row) => {\n            row.isSelectionDisabled = true;\n        });\n    }\n    enableRowSelection() {\n        this.associationGridRows.forEach((row) => {\n            row.isSelectionDisabled = this.isReadOnly;\n        });\n    }\n    save() {\n        let selectedAssociationNames = [];\n        if (this.associationType === AssociationSelectionType.Selected) {\n            selectedAssociationNames = map$1(this.selectedAssociationGridRows, 'name');\n        }\n        else if (this.associationType === AssociationSelectionType.AllEnforced) {\n            selectedAssociationNames = this.selectedAssociationGridRows\n                .filter((associationGridRow) => !associationGridRow.enforced)\n                .map((associationGridRow) => associationGridRow.name);\n        }\n        this.activeModalRef.close({\n            specificAssociationNames: selectedAssociationNames,\n            selectionType: this.associationType\n        });\n    }\n}\nArchiveAssociationSelectorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ArchiveAssociationSelectorComponent, deps: [{ token: i3.ActiveModalRef }, { token: i2.TranslateService }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\nArchiveAssociationSelectorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: ArchiveAssociationSelectorComponent, selector: \"rx-archive-associations-editor\", viewQueries: [{ propertyName: \"nameCellTemplate\", first: true, predicate: [\"nameCellTemplate\"], descendants: true, static: true }, { propertyName: \"enforceCellTemplate\", first: true, predicate: [\"enforceCellTemplate\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"modal-body designer-modal-body d-flex mh-100 flex-column\\\">\\n  <span>\\n    {{\\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.select-associations-to-follow.message'\\n        | translate\\n    }}\\n  </span>\\n\\n  <adapt-rx-radiobutton-group [(ngModel)]=\\\"associationType\\\" (ngModelChange)=\\\"markAsDirty(); selectAssociations()\\\">\\n    <adapt-rx-radiobutton\\n      class=\\\"radio-inline\\\"\\n      label=\\\"{{\\n        'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.selected-associations.label'\\n          | translate\\n      }}\\\"\\n      [value]=\\\"associationTypes.selected\\\"\\n      [disabled]=\\\"\\n        isReadOnly ||\\n        (isOverlayMode &&\\n          (actualAssociationsToFollow.selectionType === associationTypes.all ||\\n            actualAssociationsToFollow.selectionType === associationTypes.allEnforced ||\\n            actualAssociationsToFollow.selectionType === associationTypes.followParent))\\n      \\\"\\n      rx-id=\\\"selected-associations\\\"\\n    ></adapt-rx-radiobutton>\\n\\n    <adapt-rx-radiobutton\\n      class=\\\"radio-inline\\\"\\n      label=\\\"{{ 'com.bmc.arsys.rx.client.common.all.label' | translate }}\\\"\\n      [value]=\\\"associationTypes.all\\\"\\n      [disabled]=\\\"\\n        isReadOnly ||\\n        (isOverlayMode &&\\n          (actualAssociationsToFollow.selectionType === associationTypes.all ||\\n            actualAssociationsToFollow.selectionType === associationTypes.followParent))\\n      \\\"\\n      rx-id=\\\"all-associations\\\"\\n    ></adapt-rx-radiobutton>\\n\\n    <adapt-rx-radiobutton\\n      class=\\\"radio-inline\\\"\\n      label=\\\"{{\\n        'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.all-enforced-associations.label'\\n          | translate\\n      }}\\\"\\n      [value]=\\\"associationTypes.allEnforced\\\"\\n      [disabled]=\\\"\\n        isReadOnly ||\\n        (isOverlayMode &&\\n          (actualAssociationsToFollow.selectionType === associationTypes.all ||\\n            actualAssociationsToFollow.selectionType === associationTypes.followParent))\\n      \\\"\\n      rx-id=\\\"all-enforced-associations\\\"\\n    ></adapt-rx-radiobutton>\\n\\n    <adapt-rx-radiobutton\\n      class=\\\"radio-inline\\\"\\n      label=\\\"{{\\n        'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.follow-parent-associations.label'\\n          | translate\\n      }}\\\"\\n      [value]=\\\"associationTypes.followParent\\\"\\n      [disabled]=\\\"\\n        isReadOnly ||\\n        (isOverlayMode &&\\n          (actualAssociationsToFollow.selectionType === associationTypes.selected ||\\n            actualAssociationsToFollow.selectionType === associationTypes.all ||\\n            actualAssociationsToFollow.selectionType === associationTypes.allEnforced ||\\n            actualAssociationsToFollow.selectionType === associationTypes.followParent))\\n      \\\"\\n      rx-id=\\\"follow-parent-association\\\"\\n    ></adapt-rx-radiobutton>\\n  </adapt-rx-radiobutton-group>\\n\\n  <adapt-table\\n    [value]=\\\"associationGridRows\\\"\\n    [selection]=\\\"selectedAssociationGridRows\\\"\\n    [columns]=\\\"columns\\\"\\n    [scrollable]=\\\"true\\\"\\n    scrollHeight=\\\"flex\\\"\\n    [sortable]=\\\"true\\\"\\n    [resizableColumns]=\\\"false\\\"\\n    [bordered]=\\\"true\\\"\\n    [filterable]=\\\"false\\\"\\n    [dataKey]=\\\"'name'\\\"\\n    [disableRowSelection]=\\\"false\\\"\\n    [selectionMode]=\\\"'multiple'\\\"\\n    (selectionChange)=\\\"onSelectionChange($event)\\\"\\n    [disabledRowSelectionResolver]=\\\"disabledRowSelectionResolver\\\"\\n  >\\n  </adapt-table>\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" adapt-button btn-type=\\\"primary\\\" (click)=\\\"save()\\\" rx-id=\\\"save-button\\\" [disabled]=\\\"!isDirty()\\\">\\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\\n  </button>\\n\\n  <button type=\\\"button\\\" adapt-button btn-type=\\\"secondary\\\" (click)=\\\"cancel()\\\" rx-id=\\\"cancel-button\\\">\\n    {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\\n  </button>\\n</div>\\n\\n<ng-template #nameCellTemplate let-dataItem=\\\"dataItem\\\" let-column=\\\"column\\\">\\n  {{ dataItem[column.field] | rxDefinitionNamePipe }}\\n</ng-template>\\n\\n<ng-template #enforceCellTemplate let-dataItem=\\\"dataItem\\\" let-column=\\\"column\\\">\\n  <span *ngIf=\\\"dataItem[column.field]\\\">{{ 'com.bmc.arsys.rx.client.common.yes.label' | translate }}</span>\\n  <span *ngIf=\\\"!dataItem[column.field]\\\">{{ 'com.bmc.arsys.rx.client.common.no.label' | translate }}</span>\\n</ng-template>\\n\", styles: [\":root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}.designer-modal-body{height:645px;min-height:calc(100% - 61px)!important}.designer-modal-accordion-wrapper{display:flex;flex-direction:column;height:100%;overflow:auto;padding-top:10px}.designer-modal-accordion-content{position:relative}.designer-modal-accordion-content.cdk-drag-preview{z-index:1200!important}.designer-modal-drag-handle{cursor:move;position:absolute;top:0;left:0;height:46px;padding:14px 10px 14px 14px;z-index:1}.designer-modal-card-title-content{width:100%;display:flex}.designer-modal-card-title-content .left-header-block,.designer-modal-card-title-content .right-header-block{display:flex;align-items:center}.designer-modal-card-title-content .left-header-block{flex-grow:1;min-width:0;font-size:14px;padding-left:22px}.designer-modal-card-sub-title{color:#7c7f81;font-weight:normal}.designer-modal-card-title-index-buttons{display:flex;font-size:19px}.rx-card{overflow:auto}.rx-tree-draggable-node{cursor:pointer}.rx-tree-draggable-node.cdk-drag-preview{z-index:1200!important}.rx-tree-draggable-node.cdk-drag{opacity:1}.rx-tree-node-label{word-break:break-all}rx-form-builder{max-width:400px}\\n\"], components: [{ type: i3.AdaptRxRadiobuttonGroupComponent, selector: \"adapt-rx-radiobutton-group\", inputs: [\"formControlName\"] }, { type: i3.AdaptRxRadiobuttonComponent, selector: \"adapt-rx-radiobutton\", inputs: [\"name\", \"label\", \"id\", \"value\", \"checked\", \"disabled\", \"ariaLabel\", \"ariaLabeledBy\", \"ariaDescribedBy\", \"testID\", \"tabIndex\"], outputs: [\"onFocus\", \"onBlur\", \"checkedChange\"] }, { type: i4.AdaptTableComponent, selector: \"adapt-table\", inputs: [\"sortable\", \"filterable\", \"triggerableFilters\", \"explicitSearchBtn\", \"enableReorderableRows\", \"suppressTooltip\", \"toolbarConfig\", \"dataColumnsColsTemplate\", \"dataColumnsHeaderTemplate\", \"dataColumnsDataCellsTemplate\", \"headerGroupsTemplate\", \"alwaysShowHeaderTooltip\", \"alwaysShowCellTooltip\", \"expandedCellClass\", \"expandedGroupsKeys\", \"nestedGroupPadding\", \"expandindCellInitialPadding\", \"groupValueDataCellTemplate\", \"tooltipInitialDelayMs\", \"tooltipClass\", \"rowsCustomClass\", \"paginatorAlign\", \"hasEmptyState\", \"enableInfiniteScrolling\", \"updateFirstColumnWidth\", \"busyConfig\", \"defaultFiltersMatchMode\", \"wrapCellText\", \"minBufferPx\", \"maxBufferPx\", \"testID\", \"headerSelectionMode\", \"disabledSelectedRowsCount\", \"disabledNotSelectedRowsCount\", \"disabledSelectedFilteredRowsCount\", \"disabledNotSelectedFilteredRowsCount\", \"selectedFilteredRowsCount\", \"totalRecordsInGroup\", \"disableRowSelection\", \"nestingStructureData\", \"nestingKey\", \"enableRowEditing\", \"autoScrollToTop\", \"paginationTexts\", \"toolbarTexts\", \"tableTexts\", \"filtersTexts\", \"headerCellMenuTexts\", \"texts\", \"loadingMore\", \"mergeColumns\", \"disabledRowSelectionResolver\", \"allowColumnReorderingResolver\", \"disableRowExpandingResolver\", \"rowAriaDataResolver\", \"tableWidthConfig\", \"expandedRowTemplate\", \"isRefreshingRowData\", \"value\", \"bordered\", \"paginator\", \"striped\", \"loading\"], outputs: [\"onLazyLoad\", \"rowDataRefresh\", \"savedRowEditing\", \"canceledRowEditing\", \"groupSelection\", \"allGroupedRowsSelection\", \"groupExpansion\", \"columnsVisibilityChange\", \"rowDragStart\", \"rowDragRelease\", \"rowDragEnd\", \"rowDragDrop\", \"export\", \"toolbarPopupAnimationDone\"] }, { type: i3.AdaptButtonComponent, selector: \"adapt-button, button[adapt-button], a[adapt-button]\", inputs: [\"btn-type\", \"size\", \"disabled\", \"type\", \"tabIndex\"], exportAs: [\"adaptBtn\"] }], directives: [{ type: i6.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i6.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], pipes: { \"translate\": i2.TranslatePipe, \"rxDefinitionNamePipe\": i2$1.RxDefinitionNamePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ArchiveAssociationSelectorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-archive-associations-editor',\n                    templateUrl: './archive-association-selector.component.html',\n                    styleUrls: ['./archive-association-selector.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i3.ActiveModalRef }, { type: i2.TranslateService }, { type: i0.Injector }]; }, propDecorators: { nameCellTemplate: [{\n                type: ViewChild,\n                args: ['nameCellTemplate', { static: true }]\n            }], enforceCellTemplate: [{\n                type: ViewChild,\n                args: ['enforceCellTemplate', { static: true }]\n            }] } });\n\nclass MissingArchiveDefinitionsModalComponent extends RxModalClass {\n    constructor(activeModalRef, injector) {\n        super(activeModalRef, injector);\n        this.activeModalRef = activeModalRef;\n        this.injector = injector;\n        this.missingAssociations = this.activeModalRef.getData().missingAssociations;\n    }\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    close() {\n        this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n    }\n}\nMissingArchiveDefinitionsModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: MissingArchiveDefinitionsModalComponent, deps: [{ token: i3.ActiveModalRef }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\nMissingArchiveDefinitionsModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: MissingArchiveDefinitionsModalComponent, selector: \"rx-missing-archive-definitions-modal-selector\", usesInheritance: true, ngImport: i0, template: \"<div class=\\\"modal-body pt-0\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm\\\">\\n      <h6 class=\\\"font-weight-bold\\\">\\n        {{\\n          'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.association-name.label' | translate\\n        }}\\n      </h6>\\n    </div>\\n    <div class=\\\"col-sm\\\">\\n      <h6 class=\\\"font-weight-bold\\\">\\n        {{ 'com.bmc.arsys.rx.client.common.record-definition-name.label' | translate }}\\n      </h6>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row mb-2\\\" *ngFor=\\\"let association of missingAssociations\\\">\\n    <div class=\\\"col-sm\\\">{{ association.name | rxDefinitionNamePipe }}</div>\\n    <div class=\\\"col-sm\\\">\\n      <a target=\\\"_blank\\\" class=\\\"d-icon-left-pop_up\\\" [href]=\\\"association.url\\\">\\n        {{ association.secondRecord | rxDefinitionNamePipe }}\\n      </a>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" adapt-button btn-type=\\\"secondary\\\" (click)=\\\"close()\\\" rx-id=\\\"close-button\\\">\\n    {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\\n  </button>\\n</div>\\n\", components: [{ type: i3.AdaptButtonComponent, selector: \"adapt-button, button[adapt-button], a[adapt-button]\", inputs: [\"btn-type\", \"size\", \"disabled\", \"type\", \"tabIndex\"], exportAs: [\"adaptBtn\"] }], directives: [{ type: i5.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], pipes: { \"translate\": i2.TranslatePipe, \"rxDefinitionNamePipe\": i2$1.RxDefinitionNamePipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: MissingArchiveDefinitionsModalComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-missing-archive-definitions-modal-selector',\n                    templateUrl: './missing-archive-definitions-modal.component.html'\n                }]\n        }], ctorParameters: function () { return [{ type: i3.ActiveModalRef }, { type: i0.Injector }]; } });\n\nclass ArchiveAssociationsControlComponent extends ValueAccessor {\n    constructor(rxModalService, translateService, rxRecordDefinitionCacheService, rxNotificationService) {\n        super();\n        this.rxModalService = rxModalService;\n        this.translateService = translateService;\n        this.rxRecordDefinitionCacheService = rxRecordDefinitionCacheService;\n        this.rxNotificationService = rxNotificationService;\n        this.associationLabels = {\n            [AssociationSelectionType.Selected]: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.selected-associations.label'),\n            [AssociationSelectionType.All]: this.translateService.instant('com.bmc.arsys.rx.client.common.all.label'),\n            [AssociationSelectionType.AllEnforced]: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.all-enforced-associations.label'),\n            [AssociationSelectionType.FollowParent]: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.follow-parent-associations.label')\n        };\n        this.recordDefinitionNameSubject = new BehaviorSubject(null);\n        this.associationToFollowSubject = new BehaviorSubject({\n            specificAssociationNames: [],\n            selectionType: AssociationSelectionType.FollowParent\n        });\n        this.associationDefinitions$ = this.recordDefinitionNameSubject.pipe(switchMap((recordDefinitionName) => recordDefinitionName\n            ? this.rxRecordDefinitionCacheService.getRecordAssociationDefinitions(recordDefinitionName).pipe(map((recordAssociationDefinitions) => reject(recordAssociationDefinitions[recordDefinitionName], {\n                cardinality: RX_ASSOCIATION_DEFINITION.cardinality.manyToMany\n            }).filter((association) => association.nodeAId === recordDefinitionName)))\n            : of([])), shareReplay(1));\n        this.validAssociations$ = this.associationDefinitions$.pipe(map((associationDefinitions) => {\n            const selectedAssociationType = this.value.selectionType;\n            const selectedAssociations = associationDefinitions.filter((association) => includes(this.value.specificAssociationNames, association.name));\n            let validAssociations = [];\n            if (selectedAssociationType === AssociationSelectionType.Selected) {\n                validAssociations = selectedAssociations;\n            }\n            else if (selectedAssociationType === AssociationSelectionType.All) {\n                validAssociations = associationDefinitions;\n            }\n            else if (selectedAssociationType === AssociationSelectionType.AllEnforced) {\n                validAssociations = associationDefinitions\n                    .filter((association) => association.nodeAModality === RX_ASSOCIATION_DEFINITION.modality.required)\n                    .concat(selectedAssociations);\n            }\n            return validAssociations;\n        }));\n        this.missingAssociations$ = this.validAssociations$.pipe(switchMap((associations) => forkJoin(associations.map((association) => this.rxRecordDefinitionCacheService.getRecordDefinition(association.nodeBId).pipe(filter((definition) => { var _a; return !((_a = definition.archiveDescriptor) === null || _a === void 0 ? void 0 : _a.isEnabled); }), map(() => ({\n            name: association.name,\n            secondRecord: association.nodeBId,\n            url: `${window.location.origin}/helix/index.html#/${RX_APPLICATION.innovationStudioBundleId}/record/edit2/${association.nodeBId}`\n        }))))).pipe(defaultIfEmpty([]))));\n        this.associationLabel$ = combineLatest([\n            this.associationToFollowSubject,\n            this.associationDefinitions$\n        ]).pipe(map(([associationToFollow, associationDefinitions]) => {\n            let selectedAssociationLabel;\n            if (associationToFollow.selectionType === AssociationSelectionType.AllEnforced) {\n                const selectedAssociations = filter$1(associationDefinitions, (association) => includes(associationToFollow.specificAssociationNames, association.name));\n                if (some(selectedAssociations, (association) => association.nodeAModality !== RX_ASSOCIATION_DEFINITION.modality.required)) {\n                    selectedAssociationLabel = `${this.associationLabels[AssociationSelectionType.AllEnforced]} + ${this.associationLabels[AssociationSelectionType.Selected]}`;\n                }\n                else {\n                    selectedAssociationLabel = this.associationLabels[AssociationSelectionType.AllEnforced];\n                }\n            }\n            else {\n                selectedAssociationLabel = this.associationLabels[associationToFollow.selectionType];\n            }\n            return selectedAssociationLabel;\n        }));\n    }\n    ngOnChanges(changes) {\n        var _a, _b;\n        const prevDefinitionName = changes.options.previousValue.definitionModel.lastUpdateTime\n            ? `${changes.options.previousValue.bundleId}:${changes.options.previousValue.definitionModel.name}`\n            : (_a = changes.options.previousValue.definitionModel.recordInheritanceSelector.inheritanceDescriptor) === null || _a === void 0 ? void 0 : _a.inheritingFrom;\n        const currentDefinitionName = changes.options.currentValue.definitionModel.lastUpdateTime\n            ? `${changes.options.currentValue.bundleId}:${changes.options.currentValue.definitionModel.name}`\n            : (_b = changes.options.currentValue.definitionModel.recordInheritanceSelector.inheritanceDescriptor) === null || _b === void 0 ? void 0 : _b.inheritingFrom;\n        if (currentDefinitionName !== prevDefinitionName) {\n            this.recordDefinitionNameSubject.next(currentDefinitionName);\n        }\n        if (!currentDefinitionName) {\n            this.value = {\n                specificAssociationNames: [],\n                selectionType: AssociationSelectionType.FollowParent\n            };\n            this.associationToFollowSubject.next(this.value);\n        }\n    }\n    ngOnInit() {\n        var _a;\n        const definitionName = this.options.definitionModel.lastUpdateTime\n            ? `${this.options.bundleId}:${this.options.definitionModel.name}`\n            : (_a = this.options.definitionModel.recordInheritanceSelector.inheritanceDescriptor) === null || _a === void 0 ? void 0 : _a.inheritingFrom;\n        this.recordDefinitionNameSubject.next(definitionName);\n        this.associationToFollowSubject.next(this.value);\n    }\n    openAssociationSelector() {\n        this.associationDefinitions$.pipe(take(1)).subscribe((associationDefinitions) => {\n            this.rxModalService\n                .openModal({\n                title: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.associations-to-follow.label'),\n                data: {\n                    associationDefinitions,\n                    selectedAssociationsToFollow: this.value,\n                    actualAssociationsToFollow: this.options.definitionModelFromDefinition.associationsToFollowForArchive,\n                    isOverlayMode: this.options.isOverlayMode,\n                    isReadOnly: this.options.isReadOnly\n                },\n                content: ArchiveAssociationSelectorComponent\n            })\n                .then((result) => {\n                this.value = result;\n                this.associationToFollowSubject.next(this.value);\n            })\n                .catch(noop);\n        });\n    }\n    openMissingDefinitionsModal() {\n        this.missingAssociations$.pipe(take(1)).subscribe((missingAssociations) => {\n            if (missingAssociations.length) {\n                this.rxModalService\n                    .openModal({\n                    title: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.missing-archive-definitions.label'),\n                    data: {\n                        missingAssociations\n                    },\n                    size: 'sm',\n                    content: MissingArchiveDefinitionsModalComponent\n                })\n                    .catch(noop);\n            }\n            else {\n                this.rxNotificationService.addInfoMessage(this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.no-missing-archive-definitions.message'));\n            }\n        });\n    }\n}\nArchiveAssociationsControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ArchiveAssociationsControlComponent, deps: [{ token: i1.RxModalService }, { token: i2.TranslateService }, { token: i3$1.RxRecordDefinitionCacheService }, { token: i2$1.RxNotificationService }], target: i0.ɵɵFactoryTarget.Component });\nArchiveAssociationsControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: ArchiveAssociationsControlComponent, selector: \"rx-archive-associations\", inputs: { options: \"options\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: ArchiveAssociationsControlComponent,\n            multi: true\n        }\n    ], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"d-inline-flex align-items-center mb-1\\\">\\n  <button\\n    class=\\\"d-icon-plus_circle p-0\\\"\\n    adapt-button\\n    type=\\\"button\\\"\\n    btn-type=\\\"tertiary\\\"\\n    rx-id=\\\"associations-to-follow-button\\\"\\n    (click)=\\\"openAssociationSelector()\\\"\\n  >\\n    {{\\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.associations-to-follow.label' | translate\\n    }}\\n  </button>\\n\\n  <adapt-icon\\n    name=\\\"question_circle_o\\\"\\n    class=\\\"ml-2\\\"\\n    placement=\\\"right\\\"\\n    [adaptPopover]=\\\"\\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.associations-to-follow.tooltip'\\n        | translate\\n    \\\"\\n  >\\n  </adapt-icon>\\n</div>\\n\\n<div class=\\\"border pl-2 p-1 form-group\\\">\\n  <span class=\\\"d-icon-left-arrow_schema font-weight-bold\\\">\\n    {{ associationLabel$ | async }}\\n  </span>\\n</div>\\n\\n<div class=\\\"d-inline-flex align-items-center\\\">\\n  <adapt-icon name=\\\"exclamation_triangle\\\" class=\\\"text-warning-icon\\\"> </adapt-icon>\\n\\n  <adapt-button\\n    btn-type=\\\"tertiary\\\"\\n    rx-id=\\\"open-missing-definitions-button\\\"\\n    (click)=\\\"openMissingDefinitionsModal()\\\"\\n    class=\\\"p-0 pl-1\\\"\\n  >\\n    {{\\n      'com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.missing-archive-definitions.label'\\n        | translate\\n    }}\\n  </adapt-button>\\n</div>\\n\", components: [{ type: i3.AdaptButtonComponent, selector: \"adapt-button, button[adapt-button], a[adapt-button]\", inputs: [\"btn-type\", \"size\", \"disabled\", \"type\", \"tabIndex\"], exportAs: [\"adaptBtn\"] }, { type: i3.AdaptIconComponent, selector: \"adapt-icon\", inputs: [\"name\", \"classList\", \"description\", \"testID\"] }], directives: [{ type: i3.AdaptPopoverDirective, selector: \"[adaptPopover]\", inputs: [\"adaptPopover\", \"popoverTitle\", \"placement\", \"fallbackPlacement\", \"triggers\", \"container\", \"appendToBody\", \"closeBtn\", \"popupDelay\", \"disablePopover\", \"popoverClass\", \"autoClose\", \"closeOnOutOfView\", \"maxWidth\", \"minWidth\"], outputs: [\"shown\", \"hidden\"], exportAs: [\"adaptPopover\"] }], pipes: { \"translate\": i2.TranslatePipe, \"async\": i5.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ArchiveAssociationsControlComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-archive-associations',\n                    templateUrl: './archive-associations-control.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: ArchiveAssociationsControlComponent,\n                            multi: true\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i1.RxModalService }, { type: i2.TranslateService }, { type: i3$1.RxRecordDefinitionCacheService }, { type: i2$1.RxNotificationService }]; }, propDecorators: { options: [{\n                type: Input\n            }] } });\n\nclass RecordIndexesEditorStore extends ComponentStore {\n    constructor(rxGuidService) {\n        super({ indexes: [], isDirty: false });\n        this.rxGuidService = rxGuidService;\n        this.isDirty$ = this.select((state) => state.isDirty);\n        this.indexes$ = this.select((state) => state.indexes);\n        this.addIndex = this.updater((state, index) => (Object.assign(Object.assign({}, state), { indexes: [...state.indexes, index], isDirty: true })));\n        this.updateIndex = this.updater((state, indexToUpdate) => (Object.assign(Object.assign({}, state), { indexes: state.indexes.map((index) => (index.guid === indexToUpdate.guid ? Object.assign({}, indexToUpdate) : index)), isDirty: true })));\n        this.removeIndex = this.updater((state, guid) => (Object.assign(Object.assign({}, state), { indexes: state.indexes.filter((field) => field.guid !== guid), isDirty: true })));\n        this.checkAvailableFields = this.updater((state, payload) => (Object.assign(Object.assign({}, state), { indexes: state.indexes.map((index) => index.guid === payload.indexGuid\n                ? Object.assign(Object.assign({}, index), { checkedAvailableFields: [...payload.checkedFields] }) : index) })));\n        this.toggleSelectedFieldChecked = this.updater((state, payload) => (Object.assign(Object.assign({}, state), { indexes: state.indexes.map((index) => {\n                if (index.guid === payload.indexGuid) {\n                    const selectedFields = index.selectedFields.map((field) => field.id === payload.indexField.id ? Object.assign({}, field) : field);\n                    return Object.assign(Object.assign({}, index), { selectedFields, isMoveToAvailableButtonEnabled: some(selectedFields, 'selected') });\n                }\n                else {\n                    return index;\n                }\n            }) })));\n        this.assignCheckedFields = this.updater((state, indexToAssign) => {\n            return Object.assign(Object.assign({}, state), { indexes: state.indexes.map((index) => index.guid === indexToAssign.guid\n                    ? Object.assign(Object.assign({}, index), { selectedFields: [...index.selectedFields, ...index.checkedAvailableFields].map((field, itemIndex) => (Object.assign(Object.assign({}, field), { selected: false, fieldOrder: itemIndex++ }))), availableFields: [\n                            ...index.availableFields.filter((field) => !some(index.checkedAvailableFields, { id: field.id }))\n                        ], checkedAvailableFields: [] }) : index), isDirty: true });\n        });\n        this.unassignCheckedFields = this.updater((state, indexToAssign) => {\n            return Object.assign(Object.assign({}, state), { indexes: state.indexes.map((index) => index.guid === indexToAssign.guid\n                    ? Object.assign(Object.assign({}, index), { selectedFields: index.selectedFields.filter((field) => !field.selected), availableFields: [...index.availableFields, ...index.selectedFields.filter((field) => field.selected)]\n                            .map((field) => (Object.assign(Object.assign({}, field), { fieldOrder: null })))\n                            .sort((a, b) => a.name.localeCompare(b.name)), isMoveToAvailableButtonEnabled: false }) : index), isDirty: true });\n        });\n        this.sortSelectedFields = this.updater((state, payload) => (Object.assign(Object.assign({}, state), { indexes: state.indexes.map((index) => index.guid === payload.indexGuid\n                ? Object.assign(Object.assign({}, index), { selectedFields: [\n                        ...payload.fields.map((field, itemIndex) => (Object.assign(Object.assign({}, field), { fieldOrder: itemIndex })))\n                    ] }) : index) })));\n        this.removeField = this.updater((state, payload) => (Object.assign(Object.assign({}, state), { indexes: state.indexes.map((index) => index.guid === payload.indexGuid\n                ? Object.assign(Object.assign({}, index), { selectedFields: index.selectedFields.filter((field) => field.id !== payload.field.id), availableFields: [...index.availableFields, payload.field].sort((a, b) => a.name.localeCompare(b.name)) }) : index), isDirty: true })));\n        this.expandAll = this.updater((state) => (Object.assign(Object.assign({}, state), { indexes: state.indexes.map((field) => (Object.assign(Object.assign({}, field), { isOpen: true }))) })));\n        this.collapseAll = this.updater((state) => (Object.assign(Object.assign({}, state), { indexes: state.indexes.map((field) => (Object.assign(Object.assign({}, field), { isOpen: false }))) })));\n        this.markDirty = this.updater((state) => (Object.assign(Object.assign({}, state), { isDirty: true })));\n        this.vm$ = this.select(this.indexes$, this.isDirty$, (indexes, isDirty) => ({\n            indexes,\n            isDirty\n        }));\n    }\n    initialize(indexesEditorOptions) {\n        this.patchState({\n            isDirty: false,\n            indexes: indexesEditorOptions.indexes.map((index, itemIndex) => (Object.assign(Object.assign({}, index), { availableFields: reject(indexesEditorOptions.fields, (field) => field.isNewField || index.indexFieldIds.includes(field.id))\n                    .map((field) => ({ id: field.id, name: field.name, fieldOrder: null }))\n                    .sort((a, b) => a.name.localeCompare(b.name)), checkedAvailableFields: [], selectedFields: indexesEditorOptions.fields\n                    .filter((field) => !field.isNewField && index.indexFieldIds.includes(field.id))\n                    .sort((a, b) => index.indexFieldIds.indexOf(a.id) - index.indexFieldIds.indexOf(b.id))\n                    .map((field, index) => ({ id: field.id, name: field.name, fieldOrder: index })), guid: this.rxGuidService.generate(), isOpen: (indexesEditorOptions === null || indexesEditorOptions === void 0 ? void 0 : indexesEditorOptions.indexToEditIndex) === itemIndex, isMoveToAvailableButtonEnabled: false })))\n        });\n    }\n}\nRecordIndexesEditorStore.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordIndexesEditorStore, deps: [{ token: i1$1.RxGuidService }], target: i0.ɵɵFactoryTarget.Injectable });\nRecordIndexesEditorStore.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordIndexesEditorStore });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordIndexesEditorStore, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.RxGuidService }]; } });\n\nclass RecordIndexesEditorComponent extends RxModalClass {\n    constructor(recordIndexesEditorStore, rxGuidService, activeModalRef, injector) {\n        super(activeModalRef, injector);\n        this.recordIndexesEditorStore = recordIndexesEditorStore;\n        this.rxGuidService = rxGuidService;\n        this.activeModalRef = activeModalRef;\n        this.injector = injector;\n        this.isReadOnly = this.activeModalRef.getData().isReadOnly;\n        this.indexesEditorOptions = this.activeModalRef.getData();\n        this.vm$ = this.recordIndexesEditorStore.vm$;\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this.recordIndexesEditorStore.isDirty$.pipe(filter(Boolean), take(1)).subscribe(() => {\n            this.markAsDirty();\n        });\n        this.recordIndexesEditorStore.initialize(this.indexesEditorOptions);\n    }\n    ngAfterViewInit() {\n        var _a;\n        (_a = this.accordionTabEls.get(this.indexesEditorOptions.indexToEditIndex)) === null || _a === void 0 ? void 0 : _a.nativeElement.scrollIntoView({\n            block: 'nearest'\n        });\n    }\n    cancel() {\n        this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n    }\n    addIndex() {\n        this.recordIndexesEditorStore.addIndex({\n            guid: this.rxGuidService.generate(),\n            indexName: null,\n            unique: false,\n            ignoreBlankValues: false,\n            indexFieldIds: [],\n            availableFields: this.indexesEditorOptions.fields\n                .filter((field) => !field.isNewField)\n                .map((field) => (Object.assign(Object.assign({}, field), { fieldOrder: null })))\n                .sort((a, b) => a.name.localeCompare(b.name)),\n            checkedAvailableFields: [],\n            selectedFields: [],\n            isOpen: true,\n            isAutomaticIndex: false,\n            isMoveToAvailableButtonEnabled: false\n        });\n    }\n    updateIndexUniqueValue(index, unique) {\n        this.recordIndexesEditorStore.updateIndex(Object.assign(Object.assign({}, index), { unique }));\n    }\n    updateIndexIgnoreBlankValue(index, ignoreBlankValues) {\n        this.recordIndexesEditorStore.updateIndex(Object.assign(Object.assign({}, index), { ignoreBlankValues }));\n    }\n    removeIndex(guid) {\n        this.recordIndexesEditorStore.removeIndex(guid);\n    }\n    moveToSelected(index) {\n        this.recordIndexesEditorStore.assignCheckedFields(index);\n    }\n    moveToAvailable(index) {\n        this.recordIndexesEditorStore.unassignCheckedFields(index);\n    }\n    onAvailableFieldsChange(checkedFields, index) {\n        this.recordIndexesEditorStore.checkAvailableFields({ indexGuid: index.guid, checkedFields });\n    }\n    onSelectedFieldsChange(fields, index) {\n        fields.forEach((field) => {\n            this.recordIndexesEditorStore.toggleSelectedFieldChecked({ indexGuid: index.guid, indexField: field });\n        });\n        this.recordIndexesEditorStore.sortSelectedFields({ indexGuid: index.guid, fields });\n    }\n    onDragEnd() {\n        this.recordIndexesEditorStore.markDirty();\n    }\n    onFieldRemove(removedField, index) {\n        this.recordIndexesEditorStore.removeField({ indexGuid: index.guid, field: removedField });\n    }\n    save() {\n        this.recordIndexesEditorStore.indexes$.pipe(take(1)).subscribe((indexes) => {\n            this.activeModalRef.close(indexes.map((index) => ({\n                isAutomaticIndex: index.isAutomaticIndex,\n                indexName: index.indexName,\n                unique: index.unique,\n                ignoreBlankValues: index.ignoreBlankValues,\n                indexFieldIds: map$1(index.selectedFields, 'id')\n            })));\n        });\n    }\n    expandAll() {\n        this.recordIndexesEditorStore.expandAll();\n    }\n    collapseAll() {\n        this.recordIndexesEditorStore.collapseAll();\n    }\n    trackByIndex($index) {\n        return $index;\n    }\n    optionFormatter(field) {\n        return field.name;\n    }\n}\nRecordIndexesEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordIndexesEditorComponent, deps: [{ token: RecordIndexesEditorStore }, { token: i1$1.RxGuidService }, { token: i3.ActiveModalRef }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\nRecordIndexesEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: RecordIndexesEditorComponent, selector: \"rx-record-indexes-editor\", providers: [RecordIndexesEditorStore], viewQueries: [{ propertyName: \"accordionTabEls\", predicate: AdaptAccordionTabComponent, descendants: true, read: ElementRef }], usesInheritance: true, ngImport: i0, template: \"<ng-container *ngIf=\\\"vm$ | async as vm\\\">\\n  <div class=\\\"designer-modal-body modal-body d-flex mh-100 flex-column\\\">\\n    <adapt-alert\\n      class=\\\"flex-shrink-0\\\"\\n      [config]=\\\"{\\n        content: 'com.bmc.arsys.rx.client.record-designer.indexes.information' | translate,\\n        variant: 'info',\\n        type: 'inline'\\n      }\\\"\\n    ></adapt-alert>\\n\\n    <div class=\\\"text-right btn-group\\\">\\n      <button\\n        type=\\\"button\\\"\\n        adapt-button\\n        btn-type=\\\"tertiary\\\"\\n        rx-id=\\\"add-index-button\\\"\\n        class=\\\"d-icon-left-plus_circle float-left px-0\\\"\\n        (click)=\\\"addIndex()\\\"\\n        *ngIf=\\\"!isReadOnly\\\"\\n      >\\n        {{ 'com.bmc.arsys.rx.client.record-designer.indexes.add-index.label' | translate }}\\n      </button>\\n\\n      <button\\n        type=\\\"button\\\"\\n        adapt-button\\n        btn-type=\\\"tertiary\\\"\\n        rx-id=\\\"expand-button\\\"\\n        (click)=\\\"expandAll()\\\"\\n        class=\\\"ml-auto\\\"\\n      >\\n        {{ 'com.bmc.arsys.rx.client.common.expand-all.label' | translate }}\\n      </button>\\n\\n      <button\\n        type=\\\"button\\\"\\n        adapt-button\\n        btn-type=\\\"tertiary\\\"\\n        rx-id=\\\"collapse-button\\\"\\n        class=\\\"pr-0\\\"\\n        (click)=\\\"collapseAll()\\\"\\n      >\\n        {{ 'com.bmc.arsys.rx.client.common.collapse-all.label' | translate }}\\n      </button>\\n    </div>\\n\\n    <div class=\\\"designer-modal-accordion-wrapper\\\">\\n      <adapt-accordion\\n        [multiselect]=\\\"true\\\"\\n        class=\\\"d-block\\\"\\n        *ngFor=\\\"let index of vm.indexes; let $index = index; trackBy: trackByIndex\\\"\\n      >\\n        <div class=\\\"designer-modal-accordion-content\\\">\\n          <adapt-accordion-tab\\n            class=\\\"d-block\\\"\\n            [isOpen]=\\\"index.isOpen\\\"\\n            (open)=\\\"index.isOpen = true\\\"\\n            (close)=\\\"index.isOpen = false\\\"\\n          >\\n            <div class=\\\"card-title-text w-100\\\">\\n              <div class=\\\"designer-modal-card-title-content\\\">\\n                <div class=\\\"left-header-block pl-0\\\">\\n                  <div class=\\\"rx-ellipsis\\\" [title]=\\\"index.indexName\\\" rx-id=\\\"card-title\\\">\\n                    <span *ngIf=\\\"!index.isAutomaticIndex\\\">\\n                      {{\\n                        index.indexName || 'com.bmc.arsys.rx.client.record-designer.indexes.new-index.label' | translate\\n                      }}\\n                    </span>\\n                    <span *ngIf=\\\"index.isAutomaticIndex\\\">{{\\n                      'com.bmc.arsys.rx.client.record-designer.indexes.automatic-index.label'\\n                        | translate: { indexName: index.indexName }\\n                    }}</span>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"right-header-block\\\">\\n                  <button\\n                    class=\\\"d-icon-left-cross_adapt py-0 pr-3 btn btn-sm\\\"\\n                    adapt-button\\n                    size=\\\"small\\\"\\n                    type=\\\"button\\\"\\n                    (click)=\\\"$event.stopPropagation(); removeIndex(index.guid)\\\"\\n                    *ngIf=\\\"!isReadOnly && !index.isAutomaticIndex\\\"\\n                    rx-id=\\\"remove-index-button\\\"\\n                  >\\n                    {{ 'com.bmc.arsys.rx.client.common.remove.label' | translate }}\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <adapt-rx-checkbox\\n              [ngModel]=\\\"index.unique\\\"\\n              (ngModelChange)=\\\"updateIndexUniqueValue(index, $event)\\\"\\n              [disabled]=\\\"isReadOnly || index.isAutomaticIndex\\\"\\n              label=\\\"{{ 'com.bmc.arsys.rx.client.record-designer.indexes.unique-index-checkbox.label' | translate }}\\\"\\n            >\\n            </adapt-rx-checkbox>\\n\\n            <adapt-rx-checkbox\\n              [(ngModel)]=\\\"index.ignoreBlankValues\\\"\\n              (ngModelChange)=\\\"updateIndexIgnoreBlankValue(index, $event)\\\"\\n              [disabled]=\\\"isReadOnly || index.isAutomaticIndex\\\"\\n              label=\\\"{{ 'com.bmc.arsys.rx.client.record-designer.indexes.ignore-blank-values.label' | translate }}\\\"\\n              [tooltip]=\\\"{\\n                iconName: 'question_circle_o',\\n                content: 'com.bmc.arsys.rx.client.record-designer.indexes.ignore-blank-values.tooltip' | translate,\\n                placement: 'top',\\n                popoverMode: true\\n              }\\\"\\n            >\\n            </adapt-rx-checkbox>\\n\\n            <div class=\\\"d-flex flex-fill\\\">\\n              <adapt-rx-select\\n                class=\\\"flex-grow-1 d-flex flex-column\\\"\\n                popupMaxHeight=\\\"100%\\\"\\n                [options]=\\\"index.availableFields\\\"\\n                [ngModel]=\\\"index.checkedAvailableFields\\\"\\n                [disabled]=\\\"isReadOnly || index.isAutomaticIndex\\\"\\n                [deselectAllButton]=\\\"true\\\"\\n                [selectAllButton]=\\\"true\\\"\\n                [enableFilter]=\\\"true\\\"\\n                [inline]=\\\"true\\\"\\n                label=\\\"{{ 'com.bmc.arsys.rx.client.record-designer.indexes.available-fields.label' | translate }}\\\"\\n                [multiple]=\\\"true\\\"\\n                [singleSelectStyle]=\\\"'marker'\\\"\\n                [optionFormatter]=\\\"optionFormatter\\\"\\n                (ngModelChange)=\\\"onAvailableFieldsChange($event, index)\\\"\\n                rx-id=\\\"available-field-list\\\"\\n              ></adapt-rx-select>\\n\\n              <div class=\\\"mx-2 d-flex flex-column\\\">\\n                <button\\n                  type=\\\"button\\\"\\n                  adapt-button\\n                  class=\\\"d-icon-right-angle_right mt-auto mb-2\\\"\\n                  btn-type=\\\"secondary\\\"\\n                  (click)=\\\"moveToSelected(index)\\\"\\n                  [disabled]=\\\"!index.checkedAvailableFields.length || index.isAutomaticIndex\\\"\\n                  rx-id=\\\"move-to-selected-button\\\"\\n                ></button>\\n\\n                <button\\n                  type=\\\"button\\\"\\n                  adapt-button\\n                  class=\\\"d-icon-right-angle_left mb-auto\\\"\\n                  btn-type=\\\"secondary\\\"\\n                  (click)=\\\"moveToAvailable(index)\\\"\\n                  [disabled]=\\\"!index.isMoveToAvailableButtonEnabled || index.isAutomaticIndex\\\"\\n                  rx-id=\\\"move-to-available-button\\\"\\n                ></button>\\n              </div>\\n\\n              <adapt-rx-list-builder\\n                class=\\\"flex-grow-1\\\"\\n                [ngModel]=\\\"index.selectedFields\\\"\\n                selectionMode=\\\"multiple\\\"\\n                (ngModelChange)=\\\"onSelectedFieldsChange($event, index)\\\"\\n                (listItemRemove)=\\\"onFieldRemove($event, index)\\\"\\n                [disabled]=\\\"isReadOnly || index.isAutomaticIndex\\\"\\n                [hideSearchField]=\\\"true\\\"\\n                [hideEdit]=\\\"true\\\"\\n                (dragend)=\\\"onDragEnd()\\\"\\n                [tooltip]=\\\"{\\n                  iconName: 'question_circle_o',\\n                  content: 'com.bmc.arsys.rx.client.record-designer.indexes.selected-fields.tooltip' | translate,\\n                  placement: 'top',\\n                  popoverMode: true\\n                }\\\"\\n                label=\\\"{{ 'com.bmc.arsys.rx.client.record-designer.indexes.selected-fields.label' | translate }}\\\"\\n                rx-id=\\\"selected-field-list\\\"\\n              ></adapt-rx-list-builder>\\n            </div>\\n          </adapt-accordion-tab>\\n        </div>\\n      </adapt-accordion>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"modal-footer\\\">\\n    <div *ngIf=\\\"!isReadOnly\\\">\\n      <button\\n        class=\\\"mr-2\\\"\\n        type=\\\"button\\\"\\n        adapt-button\\n        btn-type=\\\"primary\\\"\\n        rx-id=\\\"save-button\\\"\\n        (click)=\\\"save()\\\"\\n        [disabled]=\\\"!vm.isDirty\\\"\\n      >\\n        {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\\n      </button>\\n\\n      <button type=\\\"button\\\" adapt-button btn-type=\\\"secondary\\\" rx-id=\\\"cancel-button\\\" (click)=\\\"cancel()\\\">\\n        {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\\n      </button>\\n    </div>\\n\\n    <div *ngIf=\\\"isReadOnly\\\">\\n      <button type=\\\"button\\\" adapt-button btn-type=\\\"secondary\\\" rx-id=\\\"close-button\\\" (click)=\\\"cancel()\\\">\\n        {{ 'com.bmc.arsys.rx.client.common.close.label' | translate }}\\n      </button>\\n    </div>\\n  </div>\\n</ng-container>\\n\", styles: [\":root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}.designer-modal-body{height:645px;min-height:calc(100% - 61px)!important}.designer-modal-accordion-wrapper{display:flex;flex-direction:column;height:100%;overflow:auto;padding-top:10px}.designer-modal-accordion-content{position:relative}.designer-modal-accordion-content.cdk-drag-preview{z-index:1200!important}.designer-modal-drag-handle{cursor:move;position:absolute;top:0;left:0;height:46px;padding:14px 10px 14px 14px;z-index:1}.designer-modal-card-title-content{width:100%;display:flex}.designer-modal-card-title-content .left-header-block,.designer-modal-card-title-content .right-header-block{display:flex;align-items:center}.designer-modal-card-title-content .left-header-block{flex-grow:1;min-width:0;font-size:14px;padding-left:22px}.designer-modal-card-sub-title{color:#7c7f81;font-weight:normal}.designer-modal-card-title-index-buttons{display:flex;font-size:19px}.rx-card{overflow:auto}.rx-tree-draggable-node{cursor:pointer}.rx-tree-draggable-node.cdk-drag-preview{z-index:1200!important}.rx-tree-draggable-node.cdk-drag{opacity:1}.rx-tree-node-label{word-break:break-all}rx-form-builder{max-width:400px}:host::ng-deep adapt-rx-select{width:30%}:host::ng-deep adapt-rx-select .rx-select__options-wrapper{height:350px;flex:1 1 auto;overflow-y:auto;overflow-x:hidden}:host::ng-deep adapt-rx-list-builder{width:30%}:host::ng-deep adapt-rx-list-builder .adapt-list-builder{height:100%}:host::ng-deep adapt-rx-list-builder .adapt-list-container{height:350px;flex-grow:1;overflow:auto}:host::ng-deep adapt-rx-list-builder .adapt-list-builder,:host::ng-deep adapt-rx-list-builder .adapt-list-builder__wrp{display:flex;flex-direction:column;height:100%}\\n\"], components: [{ type: i3.AdaptAlertComponent, selector: \"adapt-alert\", inputs: [\"config\"], outputs: [\"onClose\"] }, { type: i3.AdaptButtonComponent, selector: \"adapt-button, button[adapt-button], a[adapt-button]\", inputs: [\"btn-type\", \"size\", \"disabled\", \"type\", \"tabIndex\"], exportAs: [\"adaptBtn\"] }, { type: i3.AdaptAccordionComponent, selector: \"adapt-accordion\", inputs: [\"config\", \"multiselect\", \"bordered\"], outputs: [\"openTab\", \"closeTab\"] }, { type: i3.AdaptAccordionTabComponent, selector: \"adapt-accordion-tab\", inputs: [\"title\", \"renderContentWhenClosed\", \"customClass\", \"multiline\", \"icon\", \"disabled\", \"isOpen\"], outputs: [\"open\", \"close\"] }, { type: i3.AdaptRxCheckboxComponent, selector: \"adapt-rx-checkbox\", inputs: [\"value\", \"checked\", \"indeterminate\"], outputs: [\"indeterminateChange\"] }, { type: i3.AdaptRxSelectComponent, selector: \"adapt-rx-select\", inputs: [\"options\", \"emptyOption\", \"optionFormatter\", \"optionContentTemplate\", \"disabledOptionResolver\", \"titleFormatter\", \"focusFirst\", \"texts\", \"multiple\", \"singleSelectStyle\", \"enableFilter\", \"inline\", \"selectAllButton\", \"deselectAllButton\", \"loadMoreButton\", \"loadMoreCallback\", \"loadMoreInProgress\", \"loadingState\", \"placeholder\", \"size\", \"closeOnSelect\", \"placement\", \"appendToBody\", \"popupMaxHeight\", \"popupClass\", \"pageSize\", \"ariaInvalid\", \"virtualScroll\", \"virtualScrollItemSize\", \"virtualScrollTemplateCacheSize\", \"minBufferPx\", \"maxBufferPx\"], outputs: [\"onSelectionChange\", \"onPopupOpenChange\", \"onFilterValueChange\"] }, { type: i3.AdaptRxListBuilderComponent, selector: \"adapt-rx-list-builder\", inputs: [\"hideSearchField\", \"hideEdit\", \"hideDelete\", \"hideListAreaLabel\", \"customSort\", \"texts\", \"menuHeight\", \"listItemMaxLength\", \"generateListItemId\", \"itemValidation\", \"disabled\", \"treeStructure\", \"listItemFormatter\", \"listItemSetterProp\", \"listItemContentTemplate\", \"selectionMode\"], outputs: [\"listItemAdd\", \"listItemEdit\", \"listItemUpdate\", \"listItemRemove\"] }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i5.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i6.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i6.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], pipes: { \"async\": i5.AsyncPipe, \"translate\": i2.TranslatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordIndexesEditorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-record-indexes-editor',\n                    templateUrl: './record-indexes-editor.component.html',\n                    styleUrls: ['./record-indexes-editor.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [RecordIndexesEditorStore]\n                }]\n        }], ctorParameters: function () { return [{ type: RecordIndexesEditorStore }, { type: i1$1.RxGuidService }, { type: i3.ActiveModalRef }, { type: i0.Injector }]; }, propDecorators: { accordionTabEls: [{\n                type: ViewChildren,\n                args: [AdaptAccordionTabComponent, { read: ElementRef }]\n            }] } });\n\nclass RecordIndexesControlComponent extends ValueAccessor {\n    constructor(rxModalService, translateService) {\n        super();\n        this.rxModalService = rxModalService;\n        this.translateService = translateService;\n    }\n    openIndexesEditor(indexToEditIndex = null) {\n        this.rxModalService\n            .openModal({\n            title: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.indexes.edit-indexes.label'),\n            data: {\n                indexes: this.value,\n                indexToEditIndex,\n                isReadOnly: this.options.isReadOnly,\n                fields: this.options.definitionModel.fields\n            },\n            content: RecordIndexesEditorComponent,\n            size: OpenViewActionModalSize.Large\n        })\n            .then((indexes) => {\n            this.value = indexes;\n        })\n            .catch(noop);\n    }\n    removeIndex($index) {\n        this.rxModalService\n            .confirm({\n            title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n            modalStyle: RX_MODAL.modalStyles.warning,\n            message: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.indexes.delete-index-confirmation.message')\n        })\n            .then((result) => {\n            if (result) {\n                this.value = this.value.filter((index, itemIndex) => itemIndex !== $index);\n            }\n        });\n    }\n    focus(data) {\n        if (data === null || data === void 0 ? void 0 : data.indexToEditIndex) {\n            this.openIndexesEditor(data.indexToEditIndex);\n        }\n        else {\n            this.openIndexesEditor();\n        }\n    }\n}\nRecordIndexesControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordIndexesControlComponent, deps: [{ token: i1.RxModalService }, { token: i2.TranslateService }], target: i0.ɵɵFactoryTarget.Component });\nRecordIndexesControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: RecordIndexesControlComponent, selector: \"rx-record-indexes\", inputs: { options: \"options\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: RecordIndexesControlComponent,\n            multi: true\n        }\n    ], usesInheritance: true, ngImport: i0, template: \"<adapt-button btn-type=\\\"tertiary\\\" rx-id=\\\"open-indexes-editor\\\" class=\\\"p-0 pb-1\\\" (click)=\\\"openIndexesEditor()\\\">\\n  <span class=\\\"d-icon-plus_circle\\\"></span>\\n  {{ 'com.bmc.arsys.rx.client.record-designer.indexes.edit-indexes.label' | translate }}\\n</adapt-button>\\n\\n<div class=\\\"record-index rounded mb-1 border font-weight-bold\\\" *ngFor=\\\"let index of value; let $index = index\\\">\\n  <div class=\\\"d-flex mb-1\\\">\\n    <span rx-id=\\\"record-index-name\\\" [title]=\\\"index.indexName\\\">\\n      <span *ngIf=\\\"!index.isAutomaticIndex\\\">{{\\n        index.indexName || 'com.bmc.arsys.rx.client.record-designer.indexes.new-index.label' | translate\\n      }}</span>\\n      <span *ngIf=\\\"index.isAutomaticIndex\\\"\\n        >{{\\n          'com.bmc.arsys.rx.client.record-designer.indexes.automatic-index.label'\\n            | translate\\n              : {\\n                  indexName:\\n                    index.indexName || 'com.bmc.arsys.rx.client.record-designer.indexes.new-index.label' | translate\\n                }\\n        }}\\n        <adapt-icon\\n          name=\\\"question_circle_o\\\"\\n          class=\\\"ml-2\\\"\\n          [adaptPopover]=\\\"'com.bmc.arsys.rx.client.record-designer.indexes.system-index.tooltip' | translate\\\"\\n        >\\n        </adapt-icon>\\n      </span>\\n    </span>\\n\\n    <button\\n      class=\\\"ml-auto rx-button-unstyled d-icon-left-pencil btn-link\\\"\\n      type=\\\"button\\\"\\n      rx-id=\\\"open-index-editor\\\"\\n      (click)=\\\"openIndexesEditor($index)\\\"\\n      *ngIf=\\\"!index.isAutomaticIndex\\\"\\n    ></button>\\n\\n    <button\\n      type=\\\"button\\\"\\n      class=\\\"rx-button-unstyled d-icon-cross btn-link\\\"\\n      rx-id=\\\"remove-index\\\"\\n      (click)=\\\"removeIndex($index)\\\"\\n      *ngIf=\\\"!options.isReadOnly && !index.isAutomaticIndex\\\"\\n    ></button>\\n  </div>\\n\\n  <div class=\\\"caption ellipsis\\\">\\n    {{\\n      (index.unique\\n        ? 'com.bmc.arsys.rx.client.record-designer.indexes.unique-index.label'\\n        : 'com.bmc.arsys.rx.client.record-designer.indexes.non-unique-index.label.value'\\n      ) | translate\\n    }},\\n    {{\\n      index.indexFieldIds.length === 1\\n        ? ('com.bmc.arsys.rx.client.record-designer.indexes.one-field-index.label' | translate)\\n        : ('com.bmc.arsys.rx.client.record-designer.indexes.many-fields-index.label'\\n          | translate: { fieldCount: index.indexFieldIds.length })\\n    }}\\n  </div>\\n</div>\\n\", styles: [\":root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}.record-index{padding:5px 10px;word-break:break-all}.record-index .caption{color:#959899;font-size:10px}.d-icon-cross,.d-icon-left-pencil{cursor:pointer}.d-icon-cross:not(:hover),.d-icon-left-pencil:not(:hover){color:#313538}\\n\"], components: [{ type: i3.AdaptButtonComponent, selector: \"adapt-button, button[adapt-button], a[adapt-button]\", inputs: [\"btn-type\", \"size\", \"disabled\", \"type\", \"tabIndex\"], exportAs: [\"adaptBtn\"] }, { type: i3.AdaptIconComponent, selector: \"adapt-icon\", inputs: [\"name\", \"classList\", \"description\", \"testID\"] }], directives: [{ type: i5.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.AdaptPopoverDirective, selector: \"[adaptPopover]\", inputs: [\"adaptPopover\", \"popoverTitle\", \"placement\", \"fallbackPlacement\", \"triggers\", \"container\", \"appendToBody\", \"closeBtn\", \"popupDelay\", \"disablePopover\", \"popoverClass\", \"autoClose\", \"closeOnOutOfView\", \"maxWidth\", \"minWidth\"], outputs: [\"shown\", \"hidden\"], exportAs: [\"adaptPopover\"] }], pipes: { \"translate\": i2.TranslatePipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordIndexesControlComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-record-indexes',\n                    templateUrl: './record-indexes-control.component.html',\n                    styleUrls: ['./record-indexes-control.component.scss'],\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: RecordIndexesControlComponent,\n                            multi: true\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i1.RxModalService }, { type: i2.TranslateService }]; }, propDecorators: { options: [{\n                type: Input\n            }] } });\n\nclass RxRecordDesignerInspectorService {\n    constructor(rxFieldDefinitionService, rxOverlayService, translateService) {\n        this.rxFieldDefinitionService = rxFieldDefinitionService;\n        this.rxOverlayService = rxOverlayService;\n        this.translateService = translateService;\n    }\n    getDefinitionInspectorConfig(isNewDefinition, definitionModel, definitionModelFromDefinition, bundleId, isPropertiesCustomizationAllowed, isIndexCustomizationAllowed, isPermissionsCustomizationAllowed, isFieldsCustomizationAllowed, isReadOnly, expressionConfigurator) {\n        var _a, _b;\n        let configs = [];\n        const isOverlayMode = !isNewDefinition && definitionModel.overlayOperation !== RX_OVERLAY.operationTypes.createdInThisOverlayGroup;\n        const isAuditRecordDefinition = Boolean(definitionModel.isAuditRecordDefinition);\n        const isDeleteSourceRecordOperation = definitionModel.archiveType === RX_RECORD_DESIGNER.archiving.types.deleteSourceRecord.id;\n        const doNotArchive = definitionModel.archiveType === RX_RECORD_DESIGNER.archiving.types.doNotArchive.id;\n        const archivingOptions = Object.values(RX_RECORD_DESIGNER.archiving.types).map((value) => (Object.assign(Object.assign({}, value), { name: this.translateService.instant(value.nameKey) })));\n        const joinTypeOptions = Object.values(RX_RECORD_DEFINITION.joinTypes).map((joinType) => (Object.assign(Object.assign({}, joinType), { name: this.translateService.instant(joinType.displayName), id: joinType.value })));\n        const weightedRelevancyFields = [\n            {\n                name: 'weightedRelevancyTitle',\n                component: SelectFormControlComponent,\n                isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n                options: {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.title-field.label'),\n                    options: definitionModel.fields\n                        .filter((fieldDefinition) => isNumber(fieldDefinition.id) &&\n                        (get(fieldDefinition, 'searchDefinition.enableFTSSearch') ||\n                            get(fieldDefinition, 'searchDefinition.enableCognitiveSearch')) &&\n                        !includes([definitionModel.weightedRelevancyEnvironment, definitionModel.weightedRelevancyKeywords], fieldDefinition.id))\n                        .map((fieldDefinition) => ({\n                        name: fieldDefinition.name,\n                        id: fieldDefinition.id\n                    })),\n                    tooltip: new Tooltip(this.translateService.instant(definitionModel.enableCognitiveSearch\n                        ? 'com.bmc.arsys.rx.client.record-designer.definition-properties.title-field-cognitive-search.tooltip'\n                        : 'com.bmc.arsys.rx.client.record-designer.definition-properties.title-field-fts.tooltip'))\n                }\n            },\n            {\n                name: 'weightedRelevancyEnvironment',\n                component: SelectFormControlComponent,\n                isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n                options: {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.environment-field.label'),\n                    options: definitionModel.fields\n                        .filter((fieldDefinition) => isNumber(fieldDefinition.id) &&\n                        (get(fieldDefinition, 'searchDefinition.enableFTSSearch') ||\n                            get(fieldDefinition, 'searchDefinition.enableCognitiveSearch')) &&\n                        !includes([definitionModel.weightedRelevancyTitle, definitionModel.weightedRelevancyKeywords], fieldDefinition.id))\n                        .map((fieldDefinition) => ({\n                        name: fieldDefinition.name,\n                        id: fieldDefinition.id\n                    })),\n                    tooltip: new Tooltip(this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.environment-field.tooltip'))\n                }\n            },\n            {\n                name: 'weightedRelevancyKeywords',\n                component: SelectFormControlComponent,\n                isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n                options: {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.keywords-field.label'),\n                    options: definitionModel.fields\n                        .filter((fieldDefinition) => isNumber(fieldDefinition.id) &&\n                        (get(fieldDefinition, 'searchDefinition.enableFTSSearch') ||\n                            get(fieldDefinition, 'searchDefinition.enableCognitiveSearch')) &&\n                        !includes([definitionModel.weightedRelevancyTitle, definitionModel.weightedRelevancyEnvironment], fieldDefinition.id))\n                        .map((fieldDefinition) => ({\n                        name: fieldDefinition.name,\n                        id: fieldDefinition.id\n                    })),\n                    tooltip: new Tooltip(this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.keywords-field.tooltip'))\n                }\n            }\n        ];\n        if (definitionModel.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType) {\n            configs = [\n                {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n                    controls: [\n                        {\n                            name: 'name',\n                            component: TextFormControlComponent,\n                            isDisabled: !isNewDefinition,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n                                required: true\n                            }\n                        },\n                        {\n                            name: 'description',\n                            component: TextareaFormControlComponent,\n                            isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label'),\n                                rows: 3\n                            }\n                        },\n                        {\n                            component: RxRevertCustomizationComponent,\n                            options: {\n                                overlayGroupId: definitionModel.overlayGroupId,\n                                overlayDescriptor: definitionModel.overlayDescriptor\n                            }\n                        },\n                        {\n                            name: 'customizationOptions',\n                            component: RecordCustomizationOptionsComponent,\n                            isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n                            options: {\n                                definitionTypeDisplayName: this.translateService\n                                    .instant('com.bmc.arsys.rx.client.record-definition.label')\n                                    .toLowerCase(),\n                                recordDefinition: definitionModel\n                            }\n                        },\n                        {\n                            name: 'allowNonAdminToDeleteRecordInstances',\n                            component: SwitchFormControlComponent,\n                            isDisabled: isAuditRecordDefinition || isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.allow-non-admin-users-to-delete-records.label')\n                            }\n                        },\n                        {\n                            name: 'owner',\n                            component: TextFormControlComponent,\n                            isDisabled: true,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.common.owner.label')\n                            }\n                        },\n                        {\n                            name: 'lastUpdateTime',\n                            component: TextFormControlComponent,\n                            isDisabled: true,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.common.modified-date.label')\n                            }\n                        },\n                        {\n                            name: 'lastChangedBy',\n                            component: TextFormControlComponent,\n                            isDisabled: true,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.common.modified-by.label')\n                            }\n                        },\n                        {\n                            name: 'permissions',\n                            component: RxPermissionEditorComponent,\n                            isDisabled: !isPermissionsCustomizationAllowed || isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.common.permissions.label'),\n                                type: RX_PERMISSION.editorContexts.record\n                            }\n                        },\n                        {\n                            name: 'shouldExportData',\n                            component: SwitchFormControlComponent,\n                            isDisabled: !isPropertiesCustomizationAllowed || isAuditRecordDefinition || isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.should-export-data.label'),\n                                tooltip: new Tooltip(this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.should-export-data.tooltip'))\n                            }\n                        }\n                    ]\n                },\n                {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.title'),\n                    controls: [\n                        {\n                            name: 'recordInheritanceSelector',\n                            component: RecordInheritanceEditorComponent,\n                            options: {\n                                recordDefinition: definitionModel,\n                                isReadOnly: isOverlayMode || !isPropertiesCustomizationAllowed || isAuditRecordDefinition\n                            }\n                        }\n                    ]\n                },\n                {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.common.search.label'),\n                    controls: [\n                        {\n                            name: 'enableCognitiveSearch',\n                            component: SwitchFormControlComponent,\n                            isDisabled: isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.enable-cognitive-search.label')\n                            }\n                        },\n                        {\n                            name: 'recordSearchFields',\n                            component: SearchFieldEditorControlComponent,\n                            options: {\n                                recordDefinitionModel: definitionModel,\n                                isReadOnly: !isPropertiesCustomizationAllowed || isAuditRecordDefinition || isReadOnly\n                            }\n                        },\n                        ...weightedRelevancyFields\n                    ]\n                },\n                {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.indexes.title'),\n                    controls: [\n                        {\n                            name: 'indexDefinitions',\n                            component: RecordIndexesControlComponent,\n                            options: {\n                                isReadOnly: !isIndexCustomizationAllowed || isReadOnly,\n                                definitionModel\n                            }\n                        }\n                    ]\n                },\n                {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.display-value.title'),\n                    controls: [\n                        {\n                            name: 'displayFieldIdInAssociation',\n                            component: SelectFormControlComponent,\n                            isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.associated-display-field.title'),\n                                options: definitionModel.fields\n                                    .filter((field) => this.rxFieldDefinitionService.canBeAssociatedDisplayField(field))\n                                    .map((field) => ({ id: field.id, name: field.name }))\n                                    .sort((a, b) => a.name.localeCompare(b.name)),\n                                tooltip: new Tooltip(this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.associated-display-field.tooltip'))\n                            }\n                        }\n                    ]\n                },\n                {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.auditing.title'),\n                    controls: [\n                        {\n                            name: 'isAuditingEnabled',\n                            component: SwitchFormControlComponent,\n                            isDisabled: isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.enabled.label')\n                            }\n                        },\n                        {\n                            name: 'auditRecordDefinitionName',\n                            component: TextFormControlComponent,\n                            isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.audit-record-definition-name.label')\n                            }\n                        },\n                        {\n                            name: 'auditSourceRecordDefinitionName',\n                            component: TextFormControlComponent,\n                            isDisabled: true,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.audited-from.label')\n                            }\n                        }\n                    ]\n                },\n                {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.title'),\n                    controls: [\n                        {\n                            name: 'isArchivingEnabled',\n                            component: SwitchFormControlComponent,\n                            isDisabled: !isPropertiesCustomizationAllowed || isOverlayMode || isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.enabled.label')\n                            }\n                        },\n                        {\n                            name: 'archiveType',\n                            component: SelectFormControlComponent,\n                            isDisabled: !isPropertiesCustomizationAllowed || isOverlayMode || isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.audit-record-operation.label'),\n                                options: archivingOptions\n                            }\n                        },\n                        {\n                            name: 'includeAttachments',\n                            component: BooleanFormControlComponent,\n                            isDisabled: !isPropertiesCustomizationAllowed ||\n                                doNotArchive ||\n                                isOverlayMode ||\n                                isDeleteSourceRecordOperation ||\n                                isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.include-attachments.label'),\n                                shouldDisplayAsCheckbox: true\n                            }\n                        },\n                        {\n                            name: 'archiveRecordDefinitionName',\n                            component: TextFormControlComponent,\n                            isDisabled: !isPropertiesCustomizationAllowed ||\n                                doNotArchive ||\n                                isOverlayMode ||\n                                isDeleteSourceRecordOperation ||\n                                isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archive-record-definition-name.label')\n                            }\n                        },\n                        {\n                            name: 'ageQualifierInDays',\n                            component: CounterFormControlComponent,\n                            isDisabled: !isPropertiesCustomizationAllowed || doNotArchive || isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.record-age.label'),\n                                tooltip: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.record-age.tooltip'),\n                                allowIntegerOnly: true\n                            }\n                        },\n                        {\n                            name: 'ageQualifierFieldId',\n                            component: SelectFormControlComponent,\n                            isDisabled: !isPropertiesCustomizationAllowed || doNotArchive || isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.record-age-field.label'),\n                                options: definitionModel.fields\n                                    .filter((field) => field.resourceType === RX_RECORD_DEFINITION.resourceTypes.dateTime)\n                                    .map((fieldDefinition) => ({\n                                    name: fieldDefinition.name,\n                                    id: fieldDefinition.id\n                                }))\n                                    .sort((a, b) => a.name.localeCompare(b.name))\n                            }\n                        },\n                        {\n                            name: 'archiveDescription',\n                            component: TextFormControlComponent,\n                            isDisabled: !isPropertiesCustomizationAllowed || doNotArchive || isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label')\n                            }\n                        },\n                        {\n                            name: 'archiveDataCriteria',\n                            component: ExpressionFormControlComponent,\n                            isDisabled: !isPropertiesCustomizationAllowed || doNotArchive || isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.record-filter.label'),\n                                dataDictionary$: expressionConfigurator.getDataDictionary(RX_RECORD_DESIGNER.archiveDataCriteriaPath),\n                                operators: expressionConfigurator.getOperators(RX_RECORD_DESIGNER.archiveDataCriteriaPath),\n                                tooltip: new Tooltip(this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.record-filter.tooltip'))\n                            }\n                        },\n                        {\n                            name: 'associationsToFollowForArchive',\n                            component: ArchiveAssociationsControlComponent,\n                            options: {\n                                definitionModel,\n                                definitionModelFromDefinition,\n                                bundleId,\n                                isOverlayMode,\n                                isReadOnly: !isPropertiesCustomizationAllowed || doNotArchive\n                            }\n                        }\n                    ]\n                }\n            ];\n        }\n        if (definitionModel.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.join.recordDefinitionType) {\n            configs = [\n                {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n                    controls: [\n                        {\n                            name: 'name',\n                            component: TextFormControlComponent,\n                            isDisabled: !isNewDefinition,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.common.name.label'),\n                                required: true\n                            }\n                        },\n                        {\n                            name: 'description',\n                            component: TextareaFormControlComponent,\n                            isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.common.description.label'),\n                                rows: 3\n                            }\n                        },\n                        {\n                            name: 'primaryRecordDefinitionName',\n                            component: RxDefinitionPickerComponent,\n                            isDisabled: true,\n                            options: {\n                                definitionType: RxDefinitionPickerType.Record,\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.primary-record.label')\n                            }\n                        },\n                        {\n                            name: 'secondaryRecordDefinitionName',\n                            component: RxDefinitionPickerComponent,\n                            isDisabled: true,\n                            options: {\n                                definitionType: RxDefinitionPickerType.Record,\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.secondary-record.label')\n                            }\n                        },\n                        {\n                            name: 'joinType',\n                            component: SelectFormControlComponent,\n                            isDisabled: true,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.join-type.label'),\n                                options: joinTypeOptions\n                            }\n                        },\n                        {\n                            name: 'joinCriteria',\n                            component: ExpressionFormControlComponent,\n                            isDisabled: isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.join-criteria.label'),\n                                dataDictionary$: expressionConfigurator.getDataDictionary(RX_RECORD_DESIGNER.joinCriteriaPath),\n                                operators: expressionConfigurator.getOperators(RX_RECORD_DESIGNER.joinCriteriaPath)\n                            }\n                        },\n                        {\n                            component: RxRevertCustomizationComponent,\n                            options: {\n                                overlayGroupId: definitionModel.overlayGroupId,\n                                overlayDescriptor: definitionModel.overlayDescriptor\n                            }\n                        },\n                        {\n                            name: 'customizationOptions',\n                            component: RecordCustomizationOptionsComponent,\n                            isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n                            options: {\n                                definitionTypeDisplayName: this.translateService\n                                    .instant('com.bmc.arsys.rx.client.record-definition.label')\n                                    .toLowerCase(),\n                                recordDefinition: definitionModel\n                            }\n                        },\n                        {\n                            name: 'owner',\n                            component: TextFormControlComponent,\n                            isDisabled: true,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.common.owner.label')\n                            }\n                        },\n                        {\n                            name: 'lastUpdateTime',\n                            component: TextFormControlComponent,\n                            isDisabled: true,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.common.modified-date.label')\n                            }\n                        },\n                        {\n                            name: 'lastChangedBy',\n                            component: TextFormControlComponent,\n                            isDisabled: true,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.common.modified-by.label')\n                            }\n                        },\n                        {\n                            name: 'permissions',\n                            component: RxPermissionEditorComponent,\n                            isDisabled: !isPermissionsCustomizationAllowed || isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.common.permissions.label'),\n                                type: RX_PERMISSION.editorContexts.record\n                            }\n                        },\n                        {\n                            name: 'shouldExportData',\n                            component: SwitchFormControlComponent,\n                            isDisabled: !isPropertiesCustomizationAllowed || isAuditRecordDefinition || isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.should-export-data.label'),\n                                tooltip: new Tooltip(this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.should-export-data.tooltip'))\n                            }\n                        }\n                    ]\n                },\n                {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.common.search.label'),\n                    controls: [\n                        {\n                            name: 'enableCognitiveSearch',\n                            component: SwitchFormControlComponent,\n                            isDisabled: isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.enable-cognitive-search.label')\n                            }\n                        },\n                        {\n                            name: 'recordSearchFields',\n                            component: SearchFieldEditorControlComponent,\n                            options: {\n                                recordDefinitionModel: definitionModel,\n                                isReadOnly: !isPropertiesCustomizationAllowed || isAuditRecordDefinition || isReadOnly\n                            }\n                        },\n                        ...weightedRelevancyFields\n                    ]\n                },\n                {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.auditing.title'),\n                    controls: [\n                        {\n                            name: 'isAuditingEnabled',\n                            component: SwitchFormControlComponent,\n                            isDisabled: isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.enabled.label')\n                            }\n                        },\n                        {\n                            name: 'auditRecordDefinitionName',\n                            component: TextFormControlComponent,\n                            isDisabled: !isPropertiesCustomizationAllowed || isReadOnly,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.audit-record-definition-name.label')\n                            }\n                        },\n                        {\n                            name: 'auditSourceRecordDefinitionName',\n                            component: TextFormControlComponent,\n                            isDisabled: true,\n                            options: {\n                                label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.audited-from.label')\n                            }\n                        }\n                    ]\n                }\n            ];\n        }\n        if (isOverlayMode) {\n            (_a = configs[0]) === null || _a === void 0 ? void 0 : _a.controls.splice(findIndex(configs[0].controls, { name: 'shouldExportData' }), 1);\n        }\n        if (isNewDefinition) {\n            (_b = configs[0]) === null || _b === void 0 ? void 0 : _b.controls.splice(findIndex(configs[0].controls, { name: 'owner' }), 3);\n        }\n        return configs;\n    }\n}\nRxRecordDesignerInspectorService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxRecordDesignerInspectorService, deps: [{ token: i3$1.RxFieldDefinitionService }, { token: i2$1.RxOverlayService }, { token: i2.TranslateService }], target: i0.ɵɵFactoryTarget.Injectable });\nRxRecordDesignerInspectorService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxRecordDesignerInspectorService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxRecordDesignerInspectorService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i3$1.RxFieldDefinitionService }, { type: i2$1.RxOverlayService }, { type: i2.TranslateService }]; } });\n\nclass InheritanceIssueInfoComponent extends RxModalClass {\n    constructor(injector, activeModalRef) {\n        super(activeModalRef, injector);\n        this.injector = injector;\n        this.activeModalRef = activeModalRef;\n        this.overriddenRecordProperties = this.activeModalRef.getData().overriddenRecordProperties;\n    }\n    close(value) {\n        this.activeModalRef.close(value);\n    }\n}\nInheritanceIssueInfoComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: InheritanceIssueInfoComponent, deps: [{ token: i0.Injector }, { token: i3.ActiveModalRef }], target: i0.ɵɵFactoryTarget.Component });\nInheritanceIssueInfoComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: InheritanceIssueInfoComponent, selector: \"rx-localized-character-default-value-selector\", usesInheritance: true, ngImport: i0, template: \"<div class=\\\"modal-body\\\">\\n  <ng-container *ngIf=\\\"overriddenRecordProperties\\\">\\n    <div *ngIf=\\\"overriddenRecordProperties.fields.length > 0\\\">\\n      <p>\\n        {{ 'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.issues-info.message' | translate }}\\n      </p>\\n\\n      <ul>\\n        <li>\\n          <span>{{\\n            'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.issues-overridden-properties-info.message'\\n              | translate: { overriddenFields: overriddenRecordProperties.fields }\\n          }}</span>\\n        </li>\\n      </ul>\\n    </div>\\n\\n    <div *ngIf=\\\"overriddenRecordProperties.securityLabels?.length > 0\\\">\\n      <p>\\n        {{\\n          'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.issues-overridden-security-labels-info.message'\\n            | translate\\n        }}\\n      </p>\\n\\n      <ul>\\n        <li>\\n          <span>{{\\n            'com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.issues-security-labels-info.message'\\n              | translate: { overriddenSecurityLabels: overriddenRecordProperties.securityLabels }\\n          }}</span>\\n        </li>\\n      </ul>\\n    </div>\\n  </ng-container>\\n  <p>\\n    {{ 'com.bmc.arsys.rx.client.common.continue-confirmation.message' | translate }}\\n  </p>\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <button adapt-button type=\\\"button\\\" btn-type=\\\"primary\\\" rx-id=\\\"yes-button\\\" (click)=\\\"close('continue')\\\">\\n    {{ 'com.bmc.arsys.rx.client.common.yes.label' | translate }}\\n  </button>\\n\\n  <button adapt-button type=\\\"button\\\" btn-type=\\\"secondary\\\" rx-id=\\\"no-button\\\" (click)=\\\"close('cancel')\\\">\\n    {{ 'com.bmc.arsys.rx.client.common.no.label' | translate }}\\n  </button>\\n</div>\\n\", components: [{ type: i3.AdaptButtonComponent, selector: \"adapt-button, button[adapt-button], a[adapt-button]\", inputs: [\"btn-type\", \"size\", \"disabled\", \"type\", \"tabIndex\"], exportAs: [\"adaptBtn\"] }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], pipes: { \"translate\": i2.TranslatePipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: InheritanceIssueInfoComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-localized-character-default-value-selector',\n                    templateUrl: './inheritance-issue-info.component.html'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i3.ActiveModalRef }]; } });\n\nclass RxRecordDesignerService {\n    constructor(rxDefinitionNameService, rxFieldDefinitionService, rxGuidService, rxOverlayService, rxRecordDefinitionService, rxLocalizationService, rxDateUtilService) {\n        this.rxDefinitionNameService = rxDefinitionNameService;\n        this.rxFieldDefinitionService = rxFieldDefinitionService;\n        this.rxGuidService = rxGuidService;\n        this.rxOverlayService = rxOverlayService;\n        this.rxRecordDefinitionService = rxRecordDefinitionService;\n        this.rxLocalizationService = rxLocalizationService;\n        this.rxDateUtilService = rxDateUtilService;\n    }\n    // Convert \"$ID$ = 'ID'\" to ${Record1.PRIMARY_RECORD_DEFINITION.ID} = ${Record2.SECONDARY_RECORD_DEFINITION.ID}\n    getJoinCriteriaExpression(joinCriteria, primaryRecordDefinitionName, secondaryRecordDefinitionName) {\n        const primaryFieldRegExp = new RegExp('\\\\$(?!NULL)([\\\\w .]+)\\\\$', 'g');\n        const secondaryFieldRegExp = new RegExp(\"'([^']+)'\", 'g');\n        return (joinCriteria || '')\n            .replace(primaryFieldRegExp, '${' +\n            this.rxDefinitionNameService.getDisplayName(primaryRecordDefinitionName) +\n            '.' +\n            RX_RECORD_DEFINITION.sourceRecordTypes.primary +\n            '.$1}')\n            .replace(secondaryFieldRegExp, '${' +\n            this.rxDefinitionNameService.getDisplayName(secondaryRecordDefinitionName) +\n            '.' +\n            RX_RECORD_DEFINITION.sourceRecordTypes.secondary +\n            '.$1}');\n    }\n    // Convert ${Record1.PRIMARY_RECORD_DEFINITION.ID} = ${Record2.SECONDARY_RECORD_DEFINITION.ID} to \"$ID$ = 'ID'\"\n    getJoinCriteriaArExpression(joinCriteria, primaryRecordDefinitionName, secondaryRecordDefinitionName) {\n        const primaryFieldRegExp = new RegExp('\\\\${' +\n            this.rxDefinitionNameService.getDisplayName(primaryRecordDefinitionName) +\n            '\\\\.' +\n            RX_RECORD_DEFINITION.sourceRecordTypes.primary +\n            '\\\\.([^}]+)}', 'g');\n        const secondaryFieldRegExp = new RegExp('\\\\${' +\n            this.rxDefinitionNameService.getDisplayName(secondaryRecordDefinitionName) +\n            '\\\\.' +\n            RX_RECORD_DEFINITION.sourceRecordTypes.secondary +\n            '\\\\.([^}]+)}', 'g');\n        return (joinCriteria || '')\n            .replace(primaryFieldRegExp, '#$1#')\n            .replace(/#/g, '$')\n            .replace(secondaryFieldRegExp, \"'$1'\");\n    }\n    getDefinitionFromDefinitionModel(model, bundleId) {\n        var _a, _b, _c;\n        return {\n            allowFieldsOverlay: model.customizationOptions.allowFieldsOverlay,\n            allowNonAdminToDeleteRecordInstances: model.allowNonAdminToDeleteRecordInstances,\n            allowIndexesOverlay: model.customizationOptions.allowIndexesOverlay,\n            allowOtherPropertiesOverlay: model.customizationOptions.allowOtherPropertiesOverlay,\n            allowPermissionsOverlay: model.customizationOptions.allowPermissionsOverlay,\n            enableCognitiveSearch: model.enableCognitiveSearch,\n            description: model.description,\n            guid: model.guid,\n            indexDefinitions: model.resourceType === RX_RECORD_DEFINITION.recordDefinitionTypes.regular.recordDefinitionType\n                ? model.indexDefinitions.map((indexDefinitionModel) => omit(indexDefinitionModel, 'isAutomaticIndex'))\n                : undefined,\n            inheritanceDescriptor: model.recordInheritanceSelector.inheritanceDescriptor,\n            isAbstract: (_a = model.recordInheritanceSelector.inheritanceOptions) === null || _a === void 0 ? void 0 : _a.isAbstract,\n            isFinal: (_b = model.recordInheritanceSelector.inheritanceOptions) === null || _b === void 0 ? void 0 : _b.isFinal,\n            isSharedInstanceStorage: (_c = model.recordInheritanceSelector.inheritanceOptions) === null || _c === void 0 ? void 0 : _c.isSharedInstanceStorage,\n            joinCriteria: model.joinCriteria\n                ? this.getJoinCriteriaArExpression(model.joinCriteria, model.primaryRecordDefinitionName, model.secondaryRecordDefinitionName)\n                : undefined,\n            joinType: model.joinType,\n            lastChangedBy: model.lastChangedBy,\n            lastUpdateTime: model.lastUpdateTime ? moment(model.lastUpdateTime).format() : null,\n            name: `${bundleId}:${model.name}`,\n            overlayGroupId: model.overlayGroupId,\n            owner: model.owner,\n            overlayDescriptor: model.overlayDescriptor,\n            permissions: model.permissions,\n            primaryRecordDefinitionName: model.primaryRecordDefinitionName,\n            resourceType: model.resourceType,\n            secondaryRecordDefinitionName: model.secondaryRecordDefinitionName,\n            shouldExportData: model.shouldExportData,\n            scope: model.customizationOptions.scope,\n            tags: model.tags,\n            version: model.version,\n            weightedRelevancyFields: {\n                TITLE: model.weightedRelevancyTitle,\n                ENVIRONMENT: model.weightedRelevancyEnvironment,\n                KEYWORDS: model.weightedRelevancyKeywords\n            },\n            displayFieldIdInAssociation: find(model.fields, { id: model.displayFieldIdInAssociation })\n                ? model.displayFieldIdInAssociation\n                : null,\n            archiveDescriptor: {\n                ageQualifierFieldId: model.ageQualifierFieldId,\n                ageQualifierInDays: model.ageQualifierInDays,\n                archiveRecordDefinitionName: model.archiveRecordDefinitionName,\n                description: model.archiveDescription,\n                archiveType: model.archiveType,\n                includeAttachments: model.includeAttachments,\n                archiveDataCriteria: model.archiveDataCriteria,\n                isEnabled: model.isArchivingEnabled\n            },\n            associationsToFollowForArchive: model.associationsToFollowForArchive,\n            auditDescriptor: {\n                isEnabled: model.isAuditingEnabled,\n                auditRecordDefinitionName: model.auditRecordDefinitionName,\n                auditDataCriteria: model.auditDataCriteria,\n                associatedAuditFieldsByAssociationName: model.associatedAuditFieldsByAssociationName\n            },\n            auditSourceRecordDefinitionName: model.auditSourceRecordDefinitionName,\n            fieldDefinitions: model.fields.map((fieldModel) => {\n                var _a, _b;\n                const field = {\n                    resourceType: fieldModel.resourceType,\n                    lastUpdateTime: fieldModel.lastUpdateTime,\n                    lastChangedBy: fieldModel.lastChangedBy,\n                    owner: fieldModel.owner,\n                    name: fieldModel.name,\n                    tags: fieldModel.tags,\n                    description: fieldModel.description,\n                    overlayGroupId: fieldModel.overlayGroupId,\n                    id: isNumber(fieldModel.id) ? fieldModel.id : '',\n                    fieldOption: fieldModel.fieldOption,\n                    permissions: fieldModel.permissions,\n                    fieldTypeName: fieldModel.fieldTypeName,\n                    isInherited: fieldModel.isInherited,\n                    explicitPermissions: fieldModel.explicitPermissions,\n                    overlayDescriptor: fieldModel.overlayDescriptor,\n                    fieldMapping: fieldModel.fieldMapping,\n                    allowPermissionsOverlay: fieldModel.allowPermissionsOverlay,\n                    allowOtherPropertiesOverlay: fieldModel.allowOtherPropertiesOverlay,\n                    auditOption: fieldModel.audit ? 'AUDIT_AND_COPY' : fieldModel.copy ? 'COPY' : null,\n                    allowPermissionsEdit: fieldModel.allowPermissionsEdit,\n                    maxLength: fieldModel.maxLength,\n                    searchDefinition: fieldModel.searchDefinition,\n                    namedListDefinition: fieldModel.namedListDefinition,\n                    shouldPersistEncrypted: fieldModel.shouldPersistEncrypted,\n                    shouldPersistHashed: fieldModel.shouldPersistHashed,\n                    pattern: fieldModel.pattern,\n                    anyUserAllowedToSubmit: fieldModel.anyUserAllowedToSubmit\n                };\n                if (fieldModel.resourceType === RX_RECORD_DEFINITION.dataTypes.localizedCharacter.resourceType) {\n                    field.defaultValueByLocale = fieldModel.defaultValueByLocale;\n                }\n                else if (fieldModel.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType) {\n                    field.defaultValue = fieldModel.selectionFieldOptionProperties.defaultValue;\n                    field.optionNamesById = (_a = fieldModel.selectionFieldOptionProperties) === null || _a === void 0 ? void 0 : _a.optionNamesById;\n                    field.optionLabelsById = (_b = fieldModel.selectionFieldOptionProperties) === null || _b === void 0 ? void 0 : _b.optionLabelsById;\n                }\n                else if (fieldModel.resourceType !== RX_RECORD_DEFINITION.dataTypes.attachment.resourceType) {\n                    field.defaultValue = fieldModel.defaultValue;\n                }\n                return field;\n            })\n            // TODO-VM: update when new custom component in inspector config is implemented\n        };\n    }\n    getDefinitionModelFromDefinition(recordDefinition) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n        return {\n            allowNonAdminToDeleteRecordInstances: recordDefinition.allowNonAdminToDeleteRecordInstances,\n            isArchivingEnabled: (_a = recordDefinition.archiveDescriptor) === null || _a === void 0 ? void 0 : _a.isEnabled,\n            ageQualifierFieldId: (_b = recordDefinition.archiveDescriptor) === null || _b === void 0 ? void 0 : _b.ageQualifierFieldId,\n            ageQualifierInDays: (_c = recordDefinition.archiveDescriptor) === null || _c === void 0 ? void 0 : _c.ageQualifierInDays,\n            archiveRecordDefinitionName: (_d = recordDefinition.archiveDescriptor) === null || _d === void 0 ? void 0 : _d.archiveRecordDefinitionName,\n            archiveDescription: (_e = recordDefinition.archiveDescriptor) === null || _e === void 0 ? void 0 : _e.description,\n            archiveType: (_f = recordDefinition.archiveDescriptor) === null || _f === void 0 ? void 0 : _f.archiveType,\n            includeAttachments: (_g = recordDefinition.archiveDescriptor) === null || _g === void 0 ? void 0 : _g.includeAttachments,\n            archiveDataCriteria: (_h = recordDefinition.archiveDescriptor) === null || _h === void 0 ? void 0 : _h.archiveDataCriteria,\n            associationsToFollowForArchive: {\n                specificAssociationNames: ((_j = recordDefinition.associationsToFollowForArchive) === null || _j === void 0 ? void 0 : _j.specificAssociationNames) || [],\n                selectionType: ((_k = recordDefinition.associationsToFollowForArchive) === null || _k === void 0 ? void 0 : _k.selectionType) || AssociationSelectionType.FollowParent\n            },\n            isAuditingEnabled: (_l = recordDefinition.auditDescriptor) === null || _l === void 0 ? void 0 : _l.isEnabled,\n            auditRecordDefinitionName: (_m = recordDefinition.auditDescriptor) === null || _m === void 0 ? void 0 : _m.auditRecordDefinitionName,\n            auditDataCriteria: (_o = recordDefinition.auditDescriptor) === null || _o === void 0 ? void 0 : _o.auditDataCriteria,\n            associatedAuditFieldsByAssociationName: (_p = recordDefinition.auditDescriptor) === null || _p === void 0 ? void 0 : _p.associatedAuditFieldsByAssociationName,\n            auditSourceRecordDefinitionName: recordDefinition.auditSourceRecordDefinitionName,\n            customizationOptions: {\n                allowFieldsOverlay: recordDefinition.allowFieldsOverlay,\n                allowIndexesOverlay: recordDefinition.allowIndexesOverlay,\n                allowOtherPropertiesOverlay: recordDefinition.allowOtherPropertiesOverlay,\n                allowPermissionsOverlay: recordDefinition.allowPermissionsOverlay,\n                allowOverlay: false,\n                fields: recordDefinition.fieldDefinitions,\n                scope: recordDefinition.scope\n            },\n            description: recordDefinition.description,\n            displayFieldIdInAssociation: recordDefinition.displayFieldIdInAssociation,\n            enableCognitiveSearch: recordDefinition.enableCognitiveSearch,\n            fullPermissions: recordDefinition.fullPermissions,\n            guid: recordDefinition.guid || this.rxGuidService.generate(),\n            indexDefinitions: (_q = recordDefinition.indexDefinitions) === null || _q === void 0 ? void 0 : _q.map((indexDefinition) => (Object.assign(Object.assign({}, indexDefinition), { isAutomaticIndex: this.rxRecordDefinitionService.isAutomaticIndex(indexDefinition) }))),\n            isAuditRecordDefinition: recordDefinition.isAuditRecordDefinition,\n            joinCriteria: this.getJoinCriteriaExpression(recordDefinition.joinCriteria, recordDefinition.primaryRecordDefinitionName, recordDefinition.secondaryRecordDefinitionName),\n            joinType: recordDefinition.joinType,\n            lastUpdateTime: recordDefinition.lastUpdateTime\n                ? this.rxDateUtilService.formatDate(recordDefinition.lastUpdateTime, 'medium')\n                : recordDefinition.lastUpdateTime,\n            lastChangedBy: recordDefinition.lastChangedBy,\n            localizableStringsByFieldId: recordDefinition.localizableStringsByFieldId,\n            name: this.rxDefinitionNameService.getDisplayName(recordDefinition.name),\n            overlayDescriptor: recordDefinition.overlayDescriptor,\n            overlayGroupId: recordDefinition.overlayGroupId,\n            overlayOperation: this.rxOverlayService.getOverlayOperation(recordDefinition.overlayGroupId, recordDefinition.overlayDescriptor ? recordDefinition.overlayDescriptor.parentOverlayGroupId : null),\n            owner: recordDefinition.owner,\n            permissions: recordDefinition.permissions,\n            primaryRecordDefinitionName: recordDefinition.primaryRecordDefinitionName,\n            secondaryRecordDefinitionName: recordDefinition.secondaryRecordDefinitionName,\n            recordInheritanceSelector: {\n                inheritanceDescriptor: recordDefinition.inheritanceDescriptor,\n                inheritanceOptions: {\n                    isAbstract: recordDefinition.isAbstract,\n                    isSharedInstanceStorage: recordDefinition.isSharedInstanceStorage,\n                    isFinal: recordDefinition.isFinal\n                },\n                isInheritingCoreFields: null,\n                inheritedFieldDefinitions: []\n            },\n            recordSearchFields: recordDefinition.fieldDefinitions.filter((field) => field.searchDefinition),\n            recordInstancePrefix: recordDefinition.recordInstancePrefix,\n            recordTypeName: recordDefinition.recordTypeName,\n            resourceType: recordDefinition.resourceType,\n            rowSecurityPropagations: recordDefinition.rowSecurityPropagations,\n            securityLabels: recordDefinition.securityLabels,\n            shouldExportData: recordDefinition.shouldExportData,\n            tags: recordDefinition.tags,\n            upgradeVersion: recordDefinition.upgradeVersion,\n            version: recordDefinition.version,\n            weightedRelevancyTitle: (_r = recordDefinition.weightedRelevancyFields) === null || _r === void 0 ? void 0 : _r.TITLE,\n            weightedRelevancyEnvironment: (_s = recordDefinition.weightedRelevancyFields) === null || _s === void 0 ? void 0 : _s.ENVIRONMENT,\n            weightedRelevancyKeywords: (_t = recordDefinition.weightedRelevancyFields) === null || _t === void 0 ? void 0 : _t.KEYWORDS,\n            fields: recordDefinition.fieldDefinitions.map((fieldDefinition) => ({\n                allowOtherPropertiesOverlay: fieldDefinition.allowOtherPropertiesOverlay,\n                allowPermissionsEdit: fieldDefinition.allowPermissionsEdit,\n                allowPermissionsOverlay: fieldDefinition.allowPermissionsOverlay,\n                anyUserAllowedToSubmit: fieldDefinition.anyUserAllowedToSubmit,\n                audit: fieldDefinition.auditOption === 'AUDIT_AND_COPY',\n                copy: fieldDefinition.auditOption === 'AUDIT_AND_COPY' || fieldDefinition.auditOption === 'COPY',\n                defaultValue: fieldDefinition.defaultValue,\n                defaultValueByLocale: fieldDefinition.defaultValueByLocale,\n                description: fieldDefinition.description,\n                explicitPermissions: fieldDefinition.explicitPermissions,\n                fieldMapping: fieldDefinition.fieldMapping,\n                fieldOption: fieldDefinition.fieldOption,\n                fieldTypeName: fieldDefinition.fieldTypeName,\n                guid: this.rxGuidService.generate(),\n                id: isNumber(fieldDefinition.id) ? fieldDefinition.id : fieldDefinition.customId || '',\n                isCoreField: this.rxFieldDefinitionService.isCoreField(fieldDefinition),\n                isInherited: fieldDefinition.isInherited,\n                isNewField: false,\n                lastChangedBy: fieldDefinition.lastChangedBy,\n                lastUpdateTime: fieldDefinition.lastUpdateTime,\n                maxLength: fieldDefinition.maxLength,\n                maxSize: fieldDefinition.maxSize,\n                maxValue: fieldDefinition.maxValue,\n                minValue: fieldDefinition.minValue,\n                name: fieldDefinition.name,\n                overlayDescriptor: fieldDefinition.overlayDescriptor,\n                overlayGroupId: fieldDefinition.overlayGroupId,\n                owner: fieldDefinition.owner,\n                permissions: fieldDefinition.permissions,\n                precision: fieldDefinition.precision,\n                resourceType: fieldDefinition.resourceType,\n                searchDefinition: fieldDefinition.searchDefinition,\n                selectionFieldOptionProperties: {\n                    defaultValue: fieldDefinition.defaultValue,\n                    optionNamesById: fieldDefinition.optionNamesById,\n                    optionLabelsById: fieldDefinition.optionLabelsById\n                },\n                shouldPersistEncrypted: fieldDefinition.shouldPersistEncrypted,\n                shouldPersistHashed: fieldDefinition.shouldPersistHashed,\n                namedListDefinition: fieldDefinition.namedListDefinition,\n                pattern: fieldDefinition.pattern,\n                tags: fieldDefinition.tags\n            }))\n        };\n    }\n}\nRxRecordDesignerService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxRecordDesignerService, deps: [{ token: i2$1.RxDefinitionNameService }, { token: i3$1.RxFieldDefinitionService }, { token: i1$1.RxGuidService }, { token: i2$1.RxOverlayService }, { token: i3$1.RxRecordDefinitionService }, { token: i2$1.RxLocalizationService }, { token: i1$1.RxDateUtilsService }], target: i0.ɵɵFactoryTarget.Injectable });\nRxRecordDesignerService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxRecordDesignerService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxRecordDesignerService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i2$1.RxDefinitionNameService }, { type: i3$1.RxFieldDefinitionService }, { type: i1$1.RxGuidService }, { type: i2$1.RxOverlayService }, { type: i3$1.RxRecordDefinitionService }, { type: i2$1.RxLocalizationService }, { type: i1$1.RxDateUtilsService }]; } });\n\nclass RecordDesignerExpressionConfigurator extends RxExpressionConfigurator {\n    constructor(injector) {\n        super();\n        this.injector = injector;\n        this.rxRecordDefinitionCacheService = this.injector.get(RxRecordDefinitionCacheService);\n        this.translateService = this.injector.get(TranslateService);\n        this.commonDataDictionary$ = of([]);\n        this.generalGroup = {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.common.general-items.label'),\n            hidden: true,\n            children: [\n                {\n                    label: 'NULL',\n                    icon: 'd-icon-dollar',\n                    expression: '$NULL$'\n                }\n            ]\n        };\n    }\n    getDefaultConfig() {\n        return Object.assign(Object.assign({}, super.getDefaultConfig()), { operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.AllClient) });\n    }\n    recordExpressionDataDictionary(definitionModel, bundleId) {\n        const data = {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.common.record-definition.label'),\n            expanded: true\n        };\n        return iif(() => !!definitionModel.lastUpdateTime, this.rxRecordDefinitionCacheService.getRecordDefinition(`${bundleId}:${definitionModel.name}`).pipe(map((definition) => ({\n            fields: definition.fieldDefinitions\n        }))), of(definitionModel)).pipe(map((model) => {\n            data.children = model.fields\n                .filter((field) => field.resourceType !== RX_RECORD_DEFINITION.dataTypes.attachment.resourceType)\n                .map((field) => ({\n                label: field.name,\n                icon: 'd-icon-arrow_right_square_input',\n                expression: `'${field.name}'`\n            }));\n            return [data, this.generalGroup];\n        }));\n    }\n}\n\nclass AddJoinFieldsEditorComponent extends RxModalClass {\n    constructor(translateService, rxGuidService, rxRecordDefinitionService, activeModalRef, rxDefinitionNameService, rxFieldDefinitionService, injector) {\n        super(activeModalRef, injector);\n        this.translateService = translateService;\n        this.rxGuidService = rxGuidService;\n        this.rxRecordDefinitionService = rxRecordDefinitionService;\n        this.activeModalRef = activeModalRef;\n        this.rxDefinitionNameService = rxDefinitionNameService;\n        this.rxFieldDefinitionService = rxFieldDefinitionService;\n        this.injector = injector;\n        this.notificationMessage = this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.notification.message');\n        this.destroyed$ = new ReplaySubject(1);\n        this.primaryRecordDefinitionName = this.activeModalRef.getData().primaryRecordDefinitionName;\n        this.secondaryRecordDefinitionName = this.activeModalRef.getData().secondaryRecordDefinitionName;\n        this.selectLabel = this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.select.label', {\n            primaryRecordDefinitionName: this.rxDefinitionNameService.getDisplayName(this.primaryRecordDefinitionName),\n            secondaryRecordDefinitionName: this.rxDefinitionNameService.getDisplayName(this.secondaryRecordDefinitionName)\n        });\n        this.addedPrimaryFields = this.activeModalRef\n            .getData()\n            .addedFields.filter((field) => !includes(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds, field.id) &&\n            get(field, 'fieldMapping.source') === RX_RECORD_DEFINITION.sourceRecordTypes.primary);\n        this.addedSecondaryFields = this.activeModalRef\n            .getData()\n            .addedFields.filter((field) => !includes(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds, field.id) &&\n            get(field, 'fieldMapping.source') === RX_RECORD_DEFINITION.sourceRecordTypes.secondary);\n        this.primarySelectedFieldsFormControl = new FormControl([]);\n        this.secondarySelectedFieldsFormControl = new FormControl([]);\n        this.primarySelectedFields$ = this.primarySelectedFieldsFormControl.valueChanges.pipe(startWith([]), shareReplay(1));\n        this.secondarySelectedFields$ = this.secondarySelectedFieldsFormControl.valueChanges.pipe(startWith([]));\n        this.primaryAvailableFields$ = this.rxRecordDefinitionService\n            .get(this.primaryRecordDefinitionName, {}, true)\n            .pipe(map((recordDefinition) => orderBy(this.getJoinFieldDefinitions(recordDefinition, RX_RECORD_DEFINITION.sourceRecordTypes.primary).filter((field) => !includes(map$1(this.addedPrimaryFields, this.getSourceFieldId), this.getSourceFieldId(field))), ['name'], ['asc'])));\n        this.secondaryAvailableFields$ = this.rxRecordDefinitionService\n            .get(this.secondaryRecordDefinitionName, {}, true)\n            .pipe(map((recordDefinition) => orderBy(this.getJoinFieldDefinitions(recordDefinition, RX_RECORD_DEFINITION.sourceRecordTypes.secondary).filter((field) => !includes(map$1(this.addedSecondaryFields, this.getSourceFieldId), this.getSourceFieldId(field))), ['name'], ['asc'])));\n        this.duplicateNames$ = combineLatest([this.primarySelectedFields$, this.secondarySelectedFields$]).pipe(map(([primarySelectedFields, secondarySelectedFields]) => {\n            const selectedPrimaryFieldNames = [\n                ...map$1(primarySelectedFields, 'name'),\n                ...map$1(this.addedPrimaryFields, 'name')\n            ];\n            const selectedSecondaryFieldNames = [\n                ...map$1(secondarySelectedFields, 'name'),\n                ...map$1(this.addedSecondaryFields, 'name')\n            ];\n            return intersection(selectedPrimaryFieldNames, selectedSecondaryFieldNames).concat(intersection(map$1(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFields, 'name'), selectedPrimaryFieldNames.concat(selectedSecondaryFieldNames)));\n        }), shareReplay(1));\n        this.hasDuplicates$ = this.duplicateNames$.pipe(map((duplicateNames) => !!duplicateNames.length));\n        this.selectedFields$ = combineLatest([\n            this.primarySelectedFields$,\n            this.secondarySelectedFields$,\n            this.duplicateNames$\n        ]).pipe(map(([primarySelectedFields, secondarySelectedFields, duplicateNames]) => {\n            const nonRetainableFieldIds = chain(primarySelectedFields)\n                .concat(secondarySelectedFields)\n                .map('fieldMapping.sourceFieldId')\n                .filter((fieldId, index, selectedFieldIds) => includes(selectedFieldIds, fieldId, index + 1))\n                .value();\n            return concat(primarySelectedFields, secondarySelectedFields)\n                .filter((fieldDefinition) => this.rxFieldDefinitionService.isJoinedField(fieldDefinition))\n                .map((fieldDefinition) => {\n                const field = cloneDeep(fieldDefinition);\n                if (includes(duplicateNames, field.name)) {\n                    if (field.fieldMapping.source === RX_RECORD_DEFINITION.sourceRecordTypes.primary) {\n                        field.name = `${field.name} - ${this.rxDefinitionNameService.getDisplayName(this.primaryRecordDefinitionName)}`;\n                    }\n                    else {\n                        field.name = `${field.name} - ${this.rxDefinitionNameService.getDisplayName(this.secondaryRecordDefinitionName)}`;\n                    }\n                }\n                if (!includes(nonRetainableFieldIds, field.fieldMapping.sourceFieldId)) {\n                    field.customId = field.fieldMapping.sourceFieldId;\n                }\n                return field;\n            });\n        }), shareReplay(1));\n        this.vm$ = combineLatest([\n            this.primaryAvailableFields$,\n            this.secondaryAvailableFields$,\n            this.hasDuplicates$,\n            this.selectedFields$\n        ]).pipe(map(([primaryAvailableFields, secondaryAvailableFields, hasDuplicates, selectedFields]) => ({\n            primaryAvailableFields,\n            secondaryAvailableFields,\n            hasDuplicates,\n            selectedFields\n        })));\n        this.alertConfig = {\n            content: this.notificationMessage,\n            variant: 'info',\n            type: 'inline',\n            dismissible: false\n        };\n        this.selectTexts = {\n            headerText: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.select.header.label'),\n            numberOptionsText: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.select.fields.label'),\n            checked: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.select.selected.label'),\n            searchPlaceholder: this.translateService.instant('com.bmc.arsys.rx.client.common.search.label')\n        };\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this.selectedFields$\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe((selectedFields) => (this.selectedFields = selectedFields));\n    }\n    save() {\n        this.activeModalRef.close(this.selectedFields);\n    }\n    cancel() {\n        this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n    }\n    optionFormatter(field) {\n        return field.name;\n    }\n    getSourceFieldId(field) {\n        return field.fieldMapping.sourceFieldId;\n    }\n    getJoinFieldDefinitions(record, sourceType) {\n        return map$1(record === null || record === void 0 ? void 0 : record.fieldDefinitions, (fieldDefinition) => {\n            const joinFieldDefinition = cloneDeep(fieldDefinition);\n            joinFieldDefinition.fieldMapping = {\n                resourceType: RX_RECORD_DEFINITION.joinFieldMapping,\n                sourceFieldId: fieldDefinition.id,\n                source: sourceType\n            };\n            joinFieldDefinition.id = this.rxGuidService.generate('rx-');\n            // Join record should not carry forward FTS properties from primary and secondary record.\n            if (joinFieldDefinition.searchDefinition) {\n                joinFieldDefinition.searchDefinition = null;\n            }\n            delete joinFieldDefinition.lastUpdateTime;\n            return joinFieldDefinition;\n        });\n    }\n    ngOnDestroy() {\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n}\nAddJoinFieldsEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AddJoinFieldsEditorComponent, deps: [{ token: i2.TranslateService }, { token: i1$1.RxGuidService }, { token: i3$1.RxRecordDefinitionService }, { token: i3.ActiveModalRef }, { token: i2$1.RxDefinitionNameService }, { token: i3$1.RxFieldDefinitionService }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\nAddJoinFieldsEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: AddJoinFieldsEditorComponent, selector: \"rx-add-join-fields-editor\", usesInheritance: true, ngImport: i0, template: \"<ng-container *ngIf=\\\"vm$ | async as vm\\\">\\n  <div class=\\\"modal-body d-flex flex-column mh-100\\\">\\n    <div>\\n      <adapt-alert *ngIf=\\\"vm.hasDuplicates\\\" class=\\\"mb-3\\\" [config]=\\\"alertConfig\\\"></adapt-alert>\\n    </div>\\n\\n    <label>{{ selectLabel }}</label>\\n\\n    <div class=\\\"d-flex flex-row select-container\\\">\\n      <adapt-rx-select\\n        rx-id=\\\"primary-fields\\\"\\n        class=\\\"d-flex flex-column h-100\\\"\\n        *ngIf=\\\"vm.primaryAvailableFields\\\"\\n        [inline]=\\\"true\\\"\\n        [multiple]=\\\"true\\\"\\n        [options]=\\\"vm.primaryAvailableFields\\\"\\n        [optionFormatter]=\\\"optionFormatter\\\"\\n        [selectAllButton]=\\\"true\\\"\\n        [deselectAllButton]=\\\"true\\\"\\n        [texts]=\\\"selectTexts\\\"\\n        [popupMaxHeight]=\\\"'100%'\\\"\\n        [formControl]=\\\"primarySelectedFieldsFormControl\\\"\\n        enableFilter=\\\"true\\\"\\n        [label]=\\\"'com.bmc.arsys.rx.client.record-designer.definition-properties.primary.label' | translate\\\"\\n      >\\n      </adapt-rx-select>\\n\\n      <adapt-rx-select\\n        rx-id=\\\"secondary-fields\\\"\\n        class=\\\"ml-3 d-flex flex-column h-100\\\"\\n        *ngIf=\\\"vm.secondaryAvailableFields\\\"\\n        [inline]=\\\"true\\\"\\n        [multiple]=\\\"true\\\"\\n        [options]=\\\"vm.secondaryAvailableFields\\\"\\n        [optionFormatter]=\\\"optionFormatter\\\"\\n        [selectAllButton]=\\\"true\\\"\\n        [deselectAllButton]=\\\"true\\\"\\n        [texts]=\\\"selectTexts\\\"\\n        [popupMaxHeight]=\\\"'100%'\\\"\\n        [formControl]=\\\"secondarySelectedFieldsFormControl\\\"\\n        enableFilter=\\\"true\\\"\\n        [label]=\\\"'com.bmc.arsys.rx.client.record-designer.definition-properties.secondary.label' | translate\\\"\\n      >\\n      </adapt-rx-select>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"modal-footer\\\">\\n    <button\\n      adapt-button\\n      type=\\\"button\\\"\\n      btn-type=\\\"primary\\\"\\n      rx-id=\\\"save-button\\\"\\n      [disabled]=\\\"vm.selectedFields.length === 0\\\"\\n      (click)=\\\"save()\\\"\\n    >\\n      {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\\n    </button>\\n\\n    <button adapt-button type=\\\"button\\\" btn-type=\\\"secondary\\\" (click)=\\\"cancel()\\\" rx-id=\\\"cancel-button\\\">\\n      {{ 'com.bmc.arsys.rx.client.common.cancel.label' | translate }}\\n    </button>\\n  </div>\\n</ng-container>\\n\", styles: [\":root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}:host{display:flex;flex-direction:column;position:relative;height:100%}:host .modal-body{height:645px!important}:host ::ng-deep adapt-rx-select{width:100%;max-width:400px}:host ::ng-deep adapt-rx-select .rx-select__options-wrapper{flex:1 1 auto;overflow-y:auto;overflow-x:hidden;height:625px}.select-container{overflow:auto}\\n\"], components: [{ type: i3.AdaptAlertComponent, selector: \"adapt-alert\", inputs: [\"config\"], outputs: [\"onClose\"] }, { type: i3.AdaptRxSelectComponent, selector: \"adapt-rx-select\", inputs: [\"options\", \"emptyOption\", \"optionFormatter\", \"optionContentTemplate\", \"disabledOptionResolver\", \"titleFormatter\", \"focusFirst\", \"texts\", \"multiple\", \"singleSelectStyle\", \"enableFilter\", \"inline\", \"selectAllButton\", \"deselectAllButton\", \"loadMoreButton\", \"loadMoreCallback\", \"loadMoreInProgress\", \"loadingState\", \"placeholder\", \"size\", \"closeOnSelect\", \"placement\", \"appendToBody\", \"popupMaxHeight\", \"popupClass\", \"pageSize\", \"ariaInvalid\", \"virtualScroll\", \"virtualScrollItemSize\", \"virtualScrollTemplateCacheSize\", \"minBufferPx\", \"maxBufferPx\"], outputs: [\"onSelectionChange\", \"onPopupOpenChange\", \"onFilterValueChange\"] }, { type: i3.AdaptButtonComponent, selector: \"adapt-button, button[adapt-button], a[adapt-button]\", inputs: [\"btn-type\", \"size\", \"disabled\", \"type\", \"tabIndex\"], exportAs: [\"adaptBtn\"] }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i6.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i6.FormControlDirective, selector: \"[formControl]\", inputs: [\"disabled\", \"formControl\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }], pipes: { \"async\": i5.AsyncPipe, \"translate\": i2.TranslatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AddJoinFieldsEditorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-add-join-fields-editor',\n                    templateUrl: './add-join-fields-editor.component.html',\n                    styleUrls: ['./add-join-fields-editor.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i2.TranslateService }, { type: i1$1.RxGuidService }, { type: i3$1.RxRecordDefinitionService }, { type: i3.ActiveModalRef }, { type: i2$1.RxDefinitionNameService }, { type: i3$1.RxFieldDefinitionService }, { type: i0.Injector }]; } });\n\nclass RecordDesignerComponent {\n    constructor(store$, rxNotificationService, rxOverlayService, rxRecordDefinitionValidatorService, rxRecordDesignerInspectorService, rxDefinitionNameService, rxFieldDefinitionManagerService, rxRecordDefinitionService, rxGlobalCacheService, translateService, datePipe, rxModalService, rxFieldDefinitionService, rxRecordDesignerService, rxExpressionEditorService, rxRecordDefinitionCacheService, rxGuidService, injector) {\n        this.store$ = store$;\n        this.rxNotificationService = rxNotificationService;\n        this.rxOverlayService = rxOverlayService;\n        this.rxRecordDefinitionValidatorService = rxRecordDefinitionValidatorService;\n        this.rxRecordDesignerInspectorService = rxRecordDesignerInspectorService;\n        this.rxDefinitionNameService = rxDefinitionNameService;\n        this.rxFieldDefinitionManagerService = rxFieldDefinitionManagerService;\n        this.rxRecordDefinitionService = rxRecordDefinitionService;\n        this.rxGlobalCacheService = rxGlobalCacheService;\n        this.translateService = translateService;\n        this.datePipe = datePipe;\n        this.rxModalService = rxModalService;\n        this.rxFieldDefinitionService = rxFieldDefinitionService;\n        this.rxRecordDesignerService = rxRecordDesignerService;\n        this.rxExpressionEditorService = rxExpressionEditorService;\n        this.rxRecordDefinitionCacheService = rxRecordDefinitionCacheService;\n        this.rxGuidService = rxGuidService;\n        this.injector = injector;\n        this.definitionSaved = new EventEmitter();\n        this.definitionErrorLoading = new EventEmitter();\n        this.closeDesigner = new EventEmitter();\n        this.newTitle = `<${this.translateService.instant('com.bmc.arsys.rx.client.record-designer.new-record.title')}>`;\n        this.definition = null;\n        this.isInheritColumnHidden = true;\n        this.isJoinRecordDefinition = false;\n        this.dataTypes = [\n            RX_RECORD_DEFINITION.dataTypes.attachment,\n            RX_RECORD_DEFINITION.dataTypes.boolean,\n            RX_RECORD_DEFINITION.dataTypes.character,\n            RX_RECORD_DEFINITION.dataTypes.dateOnly,\n            RX_RECORD_DEFINITION.dataTypes.dateTime,\n            RX_RECORD_DEFINITION.dataTypes.localizedCharacter,\n            RX_RECORD_DEFINITION.dataTypes.timeOnly,\n            RX_RECORD_DEFINITION.dataTypes.integer,\n            RX_RECORD_DEFINITION.dataTypes.selection,\n            RX_RECORD_DEFINITION.dataTypes.decimal,\n            RX_RECORD_DEFINITION.dataTypes.real\n        ].sort((a, b) => a.displayName.localeCompare(b.displayName));\n        this.inspectorTabIndexSubject = new Subject();\n        this.inspectorTabIndex$ = this.store$.select(inspectorTabIndexSelector);\n        this.selectedFieldGuid$ = this.store$.select(selectedFieldGuidSelector);\n        this.destroyed$ = new ReplaySubject(1);\n        this.inspectorFocusEditorSubject = new Subject();\n        this.inspectorFocusEditor$ = this.inspectorFocusEditorSubject.asObservable();\n        this.bundleId$ = this.store$.select(bundleIdSelector);\n        this.isDesignMode$ = this.store$.select(isDesignModeSelector);\n        this.definitionModel$ = this.store$.select(definitionModelSelector);\n        this.isDirty$ = this.store$.select(isDirtySelector);\n        this.bundleFriendlyName$ = this.bundleId$.pipe(switchMap((bundleId) => this.rxGlobalCacheService.getBundleFriendlyName(bundleId)));\n        this.definitionDisplayName$ = this.definitionModel$.pipe(map((updatedModel) => this.rxDefinitionNameService.getDisplayName(updatedModel.name)), startWith(null));\n        this.definitionModelFromDefinition$ = this.store$\n            .select(definitionModelFromDefinitionSelector)\n            .pipe(shareReplay(1));\n        this.primaryRecordDefinition$ = this.definitionModelFromDefinition$.pipe(pluck('primaryRecordDefinitionName'), distinctUntilChanged(), filter(Boolean), switchMap((primaryRecordDefinitionName) => this.rxRecordDefinitionCacheService.getRecordDefinition(primaryRecordDefinitionName)));\n        this.secondaryRecordDefinition$ = this.definitionModelFromDefinition$.pipe(pluck('secondaryRecordDefinitionName'), distinctUntilChanged(), filter(Boolean), switchMap((secondaryRecordDefinitionName) => this.rxRecordDefinitionCacheService.getRecordDefinition(secondaryRecordDefinitionName)));\n        this.joinRecordDataDictionary$ = combineLatest([\n            this.primaryRecordDefinition$,\n            this.secondaryRecordDefinition$\n        ]).pipe(map(([primaryRecordDefinition, secondaryRecordDefinition]) => [\n            {\n                recordDefinitionName: this.rxDefinitionNameService.getDisplayName(primaryRecordDefinition.name),\n                label: `(${this.translateService.instant('com.bmc.arsys.rx.innovation-studio.join-record-wizard.join-criteria.primary.label')})`,\n                type: RX_RECORD_DEFINITION.sourceRecordTypes.primary,\n                fieldDefinitions: primaryRecordDefinition.fieldDefinitions\n            },\n            {\n                recordDefinitionName: this.rxDefinitionNameService.getDisplayName(secondaryRecordDefinition.name),\n                label: `(${this.translateService.instant('com.bmc.arsys.rx.innovation-studio.join-record-wizard.join-criteria.secondary.label')})`,\n                type: RX_RECORD_DEFINITION.sourceRecordTypes.secondary,\n                fieldDefinitions: secondaryRecordDefinition.fieldDefinitions\n            }\n        ]), map((records) => {\n            return records.map((record) => ({\n                label: `${record.recordDefinitionName} ${record.label}`,\n                expanded: true,\n                children: chain(record.fieldDefinitions)\n                    .map((fieldDefinition) => {\n                    if (fieldDefinition.resourceType !== RX_RECORD_DEFINITION.dataTypes.attachment.resourceType) {\n                        return {\n                            label: `${record.recordDefinitionName}.${fieldDefinition.name}`,\n                            icon: 'd-icon-field_text',\n                            expression: `\\${${record.recordDefinitionName}.${record.type}.${fieldDefinition.name}}`\n                        };\n                    }\n                })\n                    .compact()\n                    .sortBy((item) => item.label.toLocaleLowerCase())\n                    .value()\n            }));\n        }));\n        this.isNewDefinition$ = this.definitionModelFromDefinition$.pipe(map((definitionModel) => !Boolean(definitionModel.lastUpdateTime)));\n        this.isJoinRecordDefinition$ = this.definitionModelFromDefinition$.pipe(map((definitionModel) => this.rxRecordDefinitionService.isJoinRecord(definitionModel)), shareReplay(1));\n        this.definitionFromDefinitionModel$ = combineLatest([\n            this.definitionModel$,\n            this.bundleId$\n        ]).pipe(map(([definitionModel, bundleId]) => this.rxRecordDesignerService.getDefinitionFromDefinitionModel(definitionModel, bundleId)));\n        this.isFieldsCustomizationAllowed$ = this.definitionFromDefinitionModel$.pipe(map((recordDefinition) => this.rxOverlayService.isCustomizationEnabled('allowFieldsOverlay', recordDefinition)), distinctUntilChanged(), shareReplay(1));\n        this.isPropertiesCustomizationAllowed$ = this.definitionFromDefinitionModel$.pipe(map((recordDefinition) => this.rxOverlayService.isCustomizationEnabled('allowOtherPropertiesOverlay', recordDefinition)), distinctUntilChanged(), shareReplay(1));\n        this.isPermissionsCustomizationAllowed$ = this.definitionFromDefinitionModel$.pipe(map((recordDefinition) => this.rxOverlayService.isCustomizationEnabled('allowPermissionsOverlay', recordDefinition)), distinctUntilChanged(), shareReplay(1));\n        this.isIndexCustomizationAllowed$ = this.definitionFromDefinitionModel$.pipe(map((recordDefinition) => this.rxOverlayService.isCustomizationEnabled('allowIndexesOverlay', recordDefinition)), distinctUntilChanged(), shareReplay(1));\n        this.areNewDefinitionsAllowed$ = this.bundleId$.pipe(switchMap((bundleId) => this.rxOverlayService.areNewDefinitionsAllowed(bundleId)));\n        this.isReadOnly$ = this.definitionFromDefinitionModel$.pipe(filter((definition) => !!definition.lastUpdateTime), withLatestFrom(this.areNewDefinitionsAllowed$, this.isFieldsCustomizationAllowed$, this.isPropertiesCustomizationAllowed$, this.isPermissionsCustomizationAllowed$, this.isIndexCustomizationAllowed$), map(([definition, areNewDefinitionsAllowed, isFieldsCustomizationAllowed, isPropertiesCustomizationAllowed, isPermissionsCustomizationAllowed, isIndexCustomizationAllowed]) => !areNewDefinitionsAllowed ||\n            (!isFieldsCustomizationAllowed &&\n                !isPropertiesCustomizationAllowed &&\n                !isPermissionsCustomizationAllowed &&\n                !isIndexCustomizationAllowed)), tap((isReadOnly) => {\n            if (isReadOnly) {\n                this.rxNotificationService.addWarningMessage(this.translateService.instant('com.bmc.arsys.rx.client.designer.read-only-definition-warning.message'));\n            }\n        }), startWith(false), shareReplay(1));\n        this.definitionInspectorConfig$ = combineLatest([\n            this.isNewDefinition$,\n            this.definitionModel$,\n            this.definitionModelFromDefinition$,\n            this.bundleId$,\n            this.isPropertiesCustomizationAllowed$,\n            this.isIndexCustomizationAllowed$,\n            this.isPermissionsCustomizationAllowed$,\n            this.isFieldsCustomizationAllowed$,\n            this.isReadOnly$\n        ]).pipe(map(([isNewDefinition, definitionModel, definitionModelFromDefinition, bundleId, isPropertiesCustomizationAllowed, isIndexCustomizationAllowed, isPermissionsCustomizationAllowed, isFieldsCustomizationAllowed, isReadOnly]) => this.rxRecordDesignerInspectorService.getDefinitionInspectorConfig(isNewDefinition, definitionModel, definitionModelFromDefinition, bundleId, isPropertiesCustomizationAllowed, isIndexCustomizationAllowed, isPermissionsCustomizationAllowed, isFieldsCustomizationAllowed, isReadOnly, this.expressionConfigurator)));\n        this.fieldGridRows$ = this.definitionModel$.pipe(map((model) => model.fields.map((field) => {\n            var _a, _b;\n            const invertedSourceRecordTypes = invert(RX_RECORD_DEFINITION.sourceRecordTypes);\n            const type = invertedSourceRecordTypes[(_a = field.fieldMapping) === null || _a === void 0 ? void 0 : _a.source];\n            return {\n                guid: field.guid,\n                name: field.name,\n                id: isNumber(field.id) ? field.id : '',\n                isInherited: field.isInherited,\n                fieldOption: field.fieldOption,\n                defaultValue: field.resourceType === RX_RECORD_DEFINITION.resourceTypes.selection\n                    ? (_b = field.selectionFieldOptionProperties.optionNamesById) === null || _b === void 0 ? void 0 : _b[field.selectionFieldOptionProperties.defaultValue]\n                    : field.resourceType === RX_RECORD_DEFINITION.resourceTypes.dateOnly\n                        ? this.datePipe.transform(field.defaultValue)\n                        : field.resourceType === RX_RECORD_DEFINITION.resourceTypes.dateTime\n                            ? this.datePipe.transform(field.defaultValue, 'medium')\n                            : field.defaultValue,\n                resourceType: this.translateService.instant(find(RX_RECORD_DEFINITION.dataTypes, { resourceType: field.resourceType }).labelKey),\n                isCoreField: this.rxFieldDefinitionService.isCoreField(field),\n                sourceRecord: includes(RX_RECORD_DEFINITION.joinRecordDefinitionCoreFieldIds, field.id)\n                    ? ''\n                    : this.translateService.instant('com.bmc.arsys.rx.client.record-designer.grid.column.source-record.label', {\n                        recordName: this.rxDefinitionNameService.getDisplayName(model[type + 'RecordDefinitionName']),\n                        recordType: capitalize(type)\n                    })\n            };\n        })));\n        this.isExternalRecordDefinition$ = this.definitionModel$.pipe(map((definitionModel) => this.rxRecordDefinitionService.isExternalRecord(definitionModel)));\n        this.selectedFieldGridRows$ = this.selectedFieldGuid$.pipe(withLatestFrom(this.fieldGridRows$), map(([guid, fieldGridRows]) => (guid ? [find(fieldGridRows, { guid })] : [])), startWith([]));\n        this.selectedFieldModel$ = combineLatest([\n            this.selectedFieldGuid$,\n            this.definitionModel$\n        ]).pipe(map(([guid, definitionModel]) => find(definitionModel.fields, { guid })), startWith(null), shareReplay(1));\n        this.selectedFieldInspectorConfig$ = this.selectedFieldModel$.pipe(withLatestFrom(this.definitionModel$, this.isReadOnly$), map(([fieldModel, definitionModel, isReadOnly]) => fieldModel\n            ? this.rxFieldDefinitionManagerService.getFieldInspectorConfig(fieldModel, definitionModel, isReadOnly)\n            : null));\n        this.isJoinOrExternalRecord$ = combineLatest([\n            this.isJoinRecordDefinition$,\n            this.isExternalRecordDefinition$\n        ]).pipe(map(([isJoinRecordDefinition, isExternalRecordDefinition]) => isJoinRecordDefinition || isExternalRecordDefinition));\n        this.validationIssues$ = this.definitionModel$.pipe(map((definitionModel) => this.rxRecordDefinitionValidatorService.validate(definitionModel)));\n        this.hasValidationErrors$ = this.validationIssues$.pipe(map((issueSections) => some(issueSections, {\n            issues: [{ type: ValidationIssueType.Error }]\n        })), distinctUntilChanged());\n        this.hasValidationWarnings$ = this.validationIssues$.pipe(map((issueSections) => some(issueSections, {\n            issues: [{ type: ValidationIssueType.Warning }]\n        })), distinctUntilChanged());\n        this.isSaveButtonDisabled$ = combineLatest([\n            this.hasValidationErrors$,\n            this.isDirty$,\n            this.isReadOnly$\n        ]).pipe(map(([hasValidationErrors, isDirty, isReadOnly]) => hasValidationErrors || !isDirty || isReadOnly), startWith(true));\n        this.breadcrumbItems$ = combineLatest([\n            this.definitionDisplayName$,\n            this.selectedFieldModel$\n        ]).pipe(map(([definitionDisplayName, selectedFieldModel]) => {\n            var _a;\n            return [\n                {\n                    data: null,\n                    label: this.rxDefinitionNameService.getDisplayName((_a = this.definition) === null || _a === void 0 ? void 0 : _a.name) || definitionDisplayName || this.newTitle\n                },\n                { data: null, label: selectedFieldModel === null || selectedFieldModel === void 0 ? void 0 : selectedFieldModel.name }\n            ].filter((item) => item.label);\n        }));\n        this.definitionForJsonViewer$ = this.isDesignMode$.pipe(switchMap((isDesignMode) => (isDesignMode ? of(null) : this.definitionFromDefinitionModel$)));\n        this.overriddenRecordProperties$ = combineLatest([\n            this.definitionModelFromDefinition$,\n            this.definitionModel$\n        ]).pipe(scan((acc, [definitionModelFromDefinition, definitionModel]) => {\n            const overriddenRecordFields = intersectionBy(definitionModelFromDefinition.fields, definitionModel.recordInheritanceSelector.inheritedFieldDefinitions, 'id');\n            acc = Object.assign(Object.assign({}, acc), { fields: map$1(overriddenRecordFields, 'name').join(', ') });\n            return acc;\n        }, {}));\n        this.isDeleteFieldButtonDisabled$ = this.selectedFieldModel$.pipe(withLatestFrom(this.definitionModel$), map(([selectedFieldModel, definitionModel]) => !selectedFieldModel ||\n            definitionModel.isAuditRecordDefinition ||\n            this.rxFieldDefinitionService.isCoreField(selectedFieldModel) ||\n            selectedFieldModel.isInherited ||\n            !this.rxFieldDefinitionService.isFieldInUserOverlay(selectedFieldModel)));\n        this.isCopyFieldButtonDisabled$ = this.selectedFieldModel$.pipe(withLatestFrom(this.isFieldsCustomizationAllowed$, this.bundleId$), map(([selectedFieldModel, isFieldsCustomizationAllowed, bundleId]) => !selectedFieldModel ||\n            this.rxFieldDefinitionService.isCoreField(selectedFieldModel) ||\n            selectedFieldModel.isInherited ||\n            !isFieldsCustomizationAllowed ||\n            !this.rxOverlayService.isBundleEditable(bundleId)));\n        this.expressionConfigurator = new RecordDesignerExpressionConfigurator(this.injector);\n        this.dataDictionary$ = this.definitionModelFromDefinition$.pipe(withLatestFrom(this.store$.select(bundleIdSelector)), takeUntil(this.destroyed$), switchMap(([definitionModel, bundleId]) => this.expressionConfigurator.recordExpressionDataDictionary(definitionModel, bundleId)));\n        this.isInheritColumnHidden$ = this.definitionModel$.pipe(map((definitionModel) => { var _a; return isEmpty((_a = definitionModel.recordInheritanceSelector) === null || _a === void 0 ? void 0 : _a.inheritedFieldDefinitions); }), distinctUntilChanged(), startWith(true));\n        this.vm$ = combineLatest([\n            this.breadcrumbItems$,\n            this.bundleFriendlyName$,\n            this.definitionDisplayName$,\n            this.definitionInspectorConfig$,\n            this.definitionModel$,\n            this.hasValidationErrors$,\n            this.hasValidationWarnings$,\n            this.validationIssues$,\n            this.isSaveButtonDisabled$,\n            this.fieldGridRows$,\n            this.selectedFieldGridRows$,\n            this.definitionForJsonViewer$,\n            this.isDesignMode$,\n            this.selectedFieldModel$,\n            this.selectedFieldInspectorConfig$,\n            this.selectedFieldGuid$,\n            this.isFieldsCustomizationAllowed$,\n            this.isDeleteFieldButtonDisabled$,\n            this.isCopyFieldButtonDisabled$,\n            this.isJoinOrExternalRecord$,\n            this.isReadOnly$\n        ]).pipe(map(([breadcrumbItems, bundleFriendlyName, definitionDisplayName, definitionInspectorConfig, definitionModel, hasValidationErrors, hasValidationWarnings, validationIssues, isSaveButtonDisabled, fieldGridRows, selectedFieldGridRows, definitionForJsonViewer, isDesignMode, selectedFieldModel, selectedFieldInspectorConfig, selectedFieldGuid, isFieldsCustomizationAllowed, isDeleteFieldButtonDisabled, isCopyFieldButtonDisabled, isJoinOrExternalRecord, isReadOnly]) => ({\n            breadcrumbItems,\n            bundleFriendlyName,\n            definitionDisplayName,\n            definitionInspectorConfig,\n            definitionModel,\n            hasValidationErrors,\n            hasValidationWarnings,\n            validationIssues,\n            isSaveButtonDisabled,\n            fieldGridRows,\n            selectedFieldGridRows,\n            definitionForJsonViewer,\n            isDesignMode,\n            selectedFieldModel,\n            selectedFieldInspectorConfig,\n            selectedFieldGuid,\n            isFieldsCustomizationAllowed,\n            isDeleteFieldButtonDisabled,\n            isCopyFieldButtonDisabled,\n            isJoinOrExternalRecord,\n            isReadOnly\n        })));\n        this.rxRecordDefinitionCacheService.registerConsumer(this.destroyed$);\n    }\n    ngOnInit() {\n        this.inspectorTabIndex$.pipe(skip(1), takeUntil(this.destroyed$)).subscribe((inspectorTabIndex) => {\n            if (!isNull(inspectorTabIndex)) {\n                this.adaptSidebarComponent.openPanel(inspectorTabIndex);\n            }\n        });\n        this.inspectorTabIndexSubject.pipe(skip(1), takeUntil(this.destroyed$)).subscribe((inspectorTabIndex) => {\n            this.store$.dispatch(setInspectorTabIndex({ inspectorTabIndex }));\n        });\n        this.store$\n            .select(savedDefinitionNameSelector)\n            .pipe(skip(1), takeUntil(this.destroyed$))\n            .subscribe((savedDefinitionName) => {\n            this.definitionSaved.emit(savedDefinitionName);\n        });\n        this.expressionConfigurator.configureForProperty({\n            propertyPath: RX_RECORD_DESIGNER.archiveDataCriteriaPath,\n            dataDictionary$: this.dataDictionary$,\n            operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.All)\n        });\n        this.expressionConfigurator.configureForProperty({\n            propertyPath: RX_RECORD_DESIGNER.joinCriteriaPath,\n            dataDictionary$: this.joinRecordDataDictionary$,\n            operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.All)\n        });\n        combineLatest([this.isInheritColumnHidden$, this.isJoinRecordDefinition$])\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe(([isInheritColumnHidden, isJoinRecordDefinition]) => {\n            this.isInheritColumnHidden = isInheritColumnHidden;\n            this.isJoinRecordDefinition = isJoinRecordDefinition;\n        });\n        this.columns = [\n            {\n                field: 'name',\n                header: this.translateService.instant('com.bmc.arsys.rx.client.common.field-name.label')\n            },\n            {\n                field: 'sourceRecord',\n                header: this.translateService.instant('Source Record'),\n                hidden: () => !this.isJoinRecordDefinition\n            },\n            {\n                field: 'id',\n                header: this.translateService.instant('com.bmc.arsys.rx.client.common.field-id.label')\n            },\n            {\n                field: 'isInherited',\n                header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.grid.column.inherited.title'),\n                hidden: () => this.isInheritColumnHidden,\n                cellTemplate: this.inheritedCellTemplate\n            },\n            {\n                field: 'resourceType',\n                header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.grid.column.data-type.title'),\n                cellTemplate: this.dataTypeCellTemplate\n            },\n            {\n                field: 'fieldOption',\n                header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.grid.column.is-required-field.title'),\n                cellTemplate: this.requiredCellTemplate\n            },\n            {\n                field: 'defaultValue',\n                header: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.grid.column.default-value.title')\n            }\n        ];\n    }\n    ngOnChanges(changes) {\n        if (changes.configuration.currentValue) {\n            this.store$.dispatch(init({ payload: this.configuration }));\n        }\n    }\n    onEditorEvent(event) {\n        if (event.type === RX_EXPRESSION_EDITOR.events.openExpressionEditor &&\n            event.payload.propertyPath === RX_RECORD_DESIGNER.archiveDataCriteriaPath) {\n            this.definitionModel$.pipe(take(1)).subscribe((definitionModel) => {\n                this.rxExpressionEditorService\n                    .openEditor({\n                    property: {\n                        path: RX_RECORD_DESIGNER.archiveDataCriteriaPath,\n                        value: definitionModel.archiveDataCriteria,\n                        label: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.archiving.record-filter.label')\n                    },\n                    isReadOnly: event.payload.isReadOnly,\n                    expressionConfigurator: this.expressionConfigurator,\n                    legend: [\n                        {\n                            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.field-name.label'),\n                            icon: 'd-icon-arrow_right_square_input'\n                        }\n                    ]\n                })\n                    .subscribe((expression) => {\n                    this.store$.dispatch(updateDefinitionModelFromDesigner({\n                        definitionModelFromDesigner: { archiveDataCriteria: expression.value }\n                    }));\n                });\n            });\n        }\n        if (event.type === RX_EXPRESSION_EDITOR.events.openExpressionEditor &&\n            event.payload.propertyPath === RX_RECORD_DESIGNER.joinCriteriaPath) {\n            this.definitionModel$.pipe(take(1)).subscribe((definitionModel) => {\n                this.rxExpressionEditorService\n                    .openEditor({\n                    property: {\n                        path: RX_RECORD_DESIGNER.joinCriteriaPath,\n                        value: definitionModel.joinCriteria,\n                        label: this.translateService.instant('com.bmc.arsys.rx.innovation-studio.join-record-wizard.join-criteria.on-statement.label')\n                    },\n                    isReadOnly: event.payload.isReadOnly,\n                    expressionConfigurator: this.expressionConfigurator,\n                    legend: [\n                        {\n                            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.field-name.label'),\n                            icon: 'd-icon-arrow_right_square_input'\n                        }\n                    ]\n                })\n                    .subscribe((expression) => {\n                    this.store$.dispatch(updateDefinitionModelFromDesigner({\n                        definitionModelFromDesigner: { joinCriteria: expression.value }\n                    }));\n                });\n            });\n        }\n    }\n    onSelectionChange(selectedFieldModel) {\n        this.store$.dispatch(setSelectedFieldGuid({ guid: selectedFieldModel === null || selectedFieldModel === void 0 ? void 0 : selectedFieldModel.guid }));\n    }\n    onDefinitionModelChange(newDefinitionModel) {\n        this.store$.dispatch(updateDefinitionModelFromDesigner({\n            definitionModelFromDesigner: newDefinitionModel\n        }));\n    }\n    onSelectedFieldModelChange(newSelectedFieldModel) {\n        this.store$.dispatch(updateSelectedFieldModel({ selectedFieldModel: newSelectedFieldModel }));\n    }\n    toggleDesignMode() {\n        this.store$.dispatch(toggleDesignMode());\n    }\n    onSidebarToggle(event) {\n        this.inspectorTabIndexSubject.next(event.id);\n    }\n    addNewField(resourceType) {\n        this.store$.dispatch(createNewFieldModel({ resourceType: resourceType }));\n    }\n    openAddNewField() {\n        this.definitionModel$.pipe(take(1)).subscribe((definitionModel) => {\n            this.rxModalService\n                .openModal({\n                title: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.definition-properties.add-fields.title'),\n                content: AddJoinFieldsEditorComponent,\n                size: 'rx-md',\n                blockKeyboard: false,\n                data: {\n                    primaryRecordDefinitionName: definitionModel.primaryRecordDefinitionName,\n                    secondaryRecordDefinitionName: definitionModel.secondaryRecordDefinitionName,\n                    addedFields: definitionModel.fields\n                }\n            })\n                .then((fieldModels) => {\n                const newFieldModels = fieldModels.map((newField) => (Object.assign(Object.assign({}, newField), { guid: this.rxGuidService.generate(), id: null, defaultValueByLocale: {}, selectionFieldOptionProperties: newField.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType\n                        ? {\n                            defaultValue: newField.defaultValue,\n                            optionNamesById: newField.optionNamesById,\n                            optionLabelsById: newField.optionLabelsById\n                        }\n                        : null })));\n                this.store$.dispatch(addNewFieldModels({ newFieldModels: newFieldModels }));\n            })\n                .catch(noop);\n        });\n    }\n    copySelectedField() {\n        this.store$.dispatch(copySelectedField());\n    }\n    deleteSelectedField() {\n        this.store$.dispatch(deleteSelectedField());\n    }\n    onBreadcrumbSelected() {\n        this.store$.dispatch(clearSelectedFieldGuid());\n    }\n    canDeactivate() {\n        let canDeactivate = true;\n        this.isDirty$.pipe(take(1)).subscribe((isDirty) => {\n            canDeactivate = !isDirty;\n        });\n        return canDeactivate;\n    }\n    saveDefinition() {\n        combineLatest([this.definitionFromDefinitionModel$, this.isNewDefinition$, this.overriddenRecordProperties$])\n            .pipe(take(1), switchMap(([definition, isNewDefinition, overriddenRecordProperties]) => {\n            if (isNewDefinition) {\n                return this.rxRecordDefinitionService.create(definition);\n            }\n            else if (!isNewDefinition && !isEmpty(overriddenRecordProperties.fields)) {\n                return from(this.rxModalService.openModal({\n                    title: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.record-inheritance-selector.inheritance-issue-modal.title'),\n                    content: InheritanceIssueInfoComponent,\n                    data: { overriddenRecordProperties },\n                    size: 'sm'\n                })).pipe(filter((result) => result === 'continue'), switchMap(() => this.rxRecordDefinitionService.update(definition)));\n            }\n            else {\n                return this.rxRecordDefinitionService.update(definition);\n            }\n        }), withLatestFrom(this.store$.select(definitionModelSelector), this.store$.select(bundleIdSelector)))\n            .subscribe(([response, definitionModel, bundleId]) => {\n            this.store$.dispatch(saveDefinitionSuccess({\n                savedDefinitionName: `${bundleId}:${definitionModel.name}`\n            }));\n        });\n    }\n    onCorrectIssue(validationIssue) {\n        if (validationIssue.data.guid) {\n            this.store$.dispatch(setSelectedFieldGuid({ guid: validationIssue.data.guid }));\n        }\n        else {\n            this.store$.dispatch(setInspectorTabIndex({ inspectorTabIndex: 0 }));\n        }\n        setTimeout(() => this.inspectorFocusEditorSubject.next({\n            editorName: validationIssue.data.propertyName,\n            data: validationIssue.data\n        }), 10);\n    }\n    onFormInitialized() {\n        this.inspectorFocusEditorSubject.next({\n            editorName: 'name',\n            data: {}\n        });\n    }\n    ngOnDestroy() {\n        this.destroyed$.next(true);\n        this.destroyed$.complete();\n        this.inspectorTabIndexSubject.complete();\n        this.inspectorFocusEditorSubject.complete();\n        this.store$.dispatch(destroy());\n    }\n}\nRecordDesignerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordDesignerComponent, deps: [{ token: i1$2.Store }, { token: i2$1.RxNotificationService }, { token: i2$1.RxOverlayService }, { token: RxRecordDefinitionValidatorService }, { token: RxRecordDesignerInspectorService }, { token: i2$1.RxDefinitionNameService }, { token: RxFieldDefinitionManagerService }, { token: i3$1.RxRecordDefinitionService }, { token: i2$1.RxGlobalCacheService }, { token: i2.TranslateService }, { token: i5.DatePipe }, { token: i1.RxModalService }, { token: i3$1.RxFieldDefinitionService }, { token: RxRecordDesignerService }, { token: i11.RxExpressionEditorService }, { token: i3$1.RxRecordDefinitionCacheService }, { token: i1$1.RxGuidService }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\nRecordDesignerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: RecordDesignerComponent, selector: \"rx-record-designer\", inputs: { configuration: \"configuration\" }, outputs: { definitionSaved: \"definitionSaved\", definitionErrorLoading: \"definitionErrorLoading\", closeDesigner: \"closeDesigner\" }, viewQueries: [{ propertyName: \"adaptSidebarComponent\", first: true, predicate: AdaptSidebarComponent, descendants: true }, { propertyName: \"requiredCellTemplate\", first: true, predicate: [\"requiredCellTemplate\"], descendants: true, static: true }, { propertyName: \"dataTypeCellTemplate\", first: true, predicate: [\"dataTypeCellTemplate\"], descendants: true, static: true }, { propertyName: \"inheritedCellTemplate\", first: true, predicate: [\"inheritedCellTemplate\"], descendants: true, static: true }], usesOnChanges: true, ngImport: i0, template: \"<ng-container class=\\\"p-0\\\" *ngIf=\\\"vm$ | async as vm\\\">\\n  <rx-designer-header\\n    [bundleName]=\\\"vm.bundleFriendlyName\\\"\\n    [isSaveButtonDisabled]=\\\"vm.isSaveButtonDisabled\\\"\\n    (save)=\\\"saveDefinition()\\\"\\n    (closeDesigner)=\\\"closeDesigner.emit()\\\"\\n    [breadcrumbItems]=\\\"vm.breadcrumbItems\\\"\\n    (breadcrumbSelected)=\\\"onBreadcrumbSelected()\\\"\\n    (toggleDesignMode)=\\\"toggleDesignMode()\\\"\\n    [isDesignMode]=\\\"vm.isDesignMode\\\"\\n  ></rx-designer-header>\\n\\n  <adapt-sidebar\\n    [openedId]=\\\"0\\\"\\n    [adjustMainContainerWidth]=\\\"true\\\"\\n    position=\\\"right\\\"\\n    class=\\\"h-100\\\"\\n    [hidden]=\\\"vm.definitionForJsonViewer\\\"\\n    (isPanelOpenedCurrently)=\\\"onSidebarToggle($event)\\\"\\n  >\\n    <adapt-sidebar-item\\n      iconClass=\\\"d-icon-pencil\\\"\\n      [headerTitle]=\\\"'com.bmc.arsys.rx.client.common.properties.label' | translate\\\"\\n      [tooltipText]=\\\"'com.bmc.arsys.rx.client.common.properties.label' | translate\\\"\\n    >\\n      <rx-form-builder\\n        [config]=\\\"vm.definitionInspectorConfig\\\"\\n        [model]=\\\"vm.definitionModel\\\"\\n        [focusEditor$]=\\\"inspectorFocusEditor$\\\"\\n        (modelChange)=\\\"onDefinitionModelChange($event)\\\"\\n        (formInitialized)=\\\"onFormInitialized()\\\"\\n        (editorEvent)=\\\"onEditorEvent($event)\\\"\\n      ></rx-form-builder>\\n    </adapt-sidebar-item>\\n\\n    <adapt-sidebar-item\\n      iconClass=\\\"d-icon-gear\\\"\\n      [headerTitle]=\\\"'com.bmc.arsys.rx.client.common.settings.label' | translate\\\"\\n      [tooltipText]=\\\"'com.bmc.arsys.rx.client.common.settings.label' | translate\\\"\\n    >\\n      <rx-form-builder\\n        [config]=\\\"vm.selectedFieldInspectorConfig\\\"\\n        [model]=\\\"vm.selectedFieldModel\\\"\\n        (modelChange)=\\\"onSelectedFieldModelChange($event)\\\"\\n        [guid]=\\\"vm.selectedFieldGuid\\\"\\n        [focusEditor$]=\\\"inspectorFocusEditor$\\\"\\n      ></rx-form-builder>\\n\\n      <adapt-alert\\n        [hidden]=\\\"vm.selectedFieldModel\\\"\\n        class=\\\"p-3\\\"\\n        [config]=\\\"{\\n          content: 'com.bmc.arsys.rx.client.designer.validation.no-field-selected.message' | translate,\\n          variant: 'info',\\n          type: 'inline'\\n        }\\\"\\n      ></adapt-alert>\\n    </adapt-sidebar-item>\\n\\n    <adapt-sidebar-item\\n      [iconClass]=\\\"\\n        vm.hasValidationErrors\\n          ? 'd-icon-exclamation_triangle text-danger'\\n          : vm.hasValidationWarnings\\n          ? 'd-icon-exclamation_triangle text-warning-icon'\\n          : 'd-icon-exclamation_triangle'\\n      \\\"\\n      headerTitle=\\\"{{ 'com.bmc.arsys.rx.client.designer.validation-issues.label' | translate }}\\\"\\n      tooltipText=\\\"{{ 'com.bmc.arsys.rx.client.designer.validation-issues.label' | translate }}\\\"\\n    >\\n      <rx-validation-issues\\n        (correctIssue)=\\\"onCorrectIssue($event)\\\"\\n        [issueSections]=\\\"vm.validationIssues\\\"\\n        [definitionTypeDisplayName]=\\\"'com.bmc.arsys.rx.client.record-definition.label' | translate\\\"\\n      ></rx-validation-issues>\\n    </adapt-sidebar-item>\\n\\n    <div class=\\\"main h-100 d-flex flex-column\\\">\\n      <h1 class=\\\"mt-0 mb-2\\\">\\n        {{ (configuration.definitionName | rxDefinitionNamePipe) || vm.definitionDisplayName || newTitle }}\\n      </h1>\\n\\n      <div *ngIf=\\\"vm.isJoinOrExternalRecord\\\" class=\\\"d-flex border border-bottom-0\\\">\\n        <button\\n          adapt-button\\n          type=\\\"button\\\"\\n          btn-type=\\\"tertiary\\\"\\n          class=\\\"d-icon-plus_circle align-self-start\\\"\\n          rx-id=\\\"new-field-button\\\"\\n          (click)=\\\"openAddNewField()\\\"\\n          [disabled]=\\\"vm.isReadOnly\\\"\\n        >\\n          {{ 'com.bmc.arsys.rx.client.common.new.label' | translate }}\\n        </button>\\n\\n        <button\\n          adapt-button\\n          btn-type=\\\"tertiary\\\"\\n          type=\\\"button\\\"\\n          class=\\\"d-icon-trash\\\"\\n          rx-id=\\\"delete-field-button\\\"\\n          (click)=\\\"deleteSelectedField()\\\"\\n          [disabled]=\\\"vm.isDeleteFieldButtonDisabled\\\"\\n        >\\n          {{ 'com.bmc.arsys.rx.client.common.delete.label' | translate }}\\n        </button>\\n      </div>\\n\\n      <div *ngIf=\\\"!vm.isJoinOrExternalRecord\\\" class=\\\"d-flex border border-bottom-0\\\">\\n        <div class=\\\"dropdown\\\" adaptDropdown>\\n          <button\\n            adapt-button\\n            type=\\\"button\\\"\\n            adaptDropdownToggle\\n            btn-type=\\\"tertiary\\\"\\n            class=\\\"d-icon-plus_circle\\\"\\n            rx-id=\\\"new-field-button\\\"\\n          >\\n            {{ 'com.bmc.arsys.rx.client.designer.new-field.button.label' | translate }}\\n          </button>\\n\\n          <div class=\\\"dropdown-menu\\\" adaptDropdownMenu>\\n            <button\\n              *ngFor=\\\"let dataType of dataTypes\\\"\\n              class=\\\"dropdown-item\\\"\\n              (click)=\\\"addNewField(dataType.resourceType)\\\"\\n              [attr.rx-id]=\\\"'field-data-type-' + dataType.shortName\\\"\\n              [disabled]=\\\"!vm.isFieldsCustomizationAllowed || vm.isReadOnly\\\"\\n            >\\n              {{ dataType.displayName }}\\n            </button>\\n          </div>\\n        </div>\\n\\n        <button\\n          adapt-button\\n          btn-type=\\\"tertiary\\\"\\n          type=\\\"button\\\"\\n          class=\\\"d-icon-trash\\\"\\n          rx-id=\\\"delete-field-button\\\"\\n          (click)=\\\"deleteSelectedField()\\\"\\n          [disabled]=\\\"vm.isDeleteFieldButtonDisabled || vm.isReadOnly\\\"\\n        >\\n          {{ 'com.bmc.arsys.rx.client.common.delete.label' | translate }}\\n        </button>\\n\\n        <button\\n          adapt-button\\n          btn-type=\\\"tertiary\\\"\\n          type=\\\"button\\\"\\n          class=\\\"d-icon-list_ordered\\\"\\n          (click)=\\\"copySelectedField()\\\"\\n          rx-id=\\\"copy-field-button\\\"\\n          [disabled]=\\\"vm.isCopyFieldButtonDisabled || vm.isReadOnly\\\"\\n        >\\n          {{ 'com.bmc.arsys.rx.client.common.copy.label' | translate }}\\n        </button>\\n      </div>\\n\\n      <adapt-table\\n        [value]=\\\"vm.fieldGridRows\\\"\\n        [selection]=\\\"vm.selectedFieldGridRows\\\"\\n        [columns]=\\\"columns\\\"\\n        [scrollable]=\\\"true\\\"\\n        scrollHeight=\\\"flex\\\"\\n        [sortable]=\\\"true\\\"\\n        [resizableColumns]=\\\"true\\\"\\n        [bordered]=\\\"true\\\"\\n        [filterable]=\\\"false\\\"\\n        [dataKey]=\\\"'guid'\\\"\\n        [disableRowSelection]=\\\"false\\\"\\n        [selectionMode]=\\\"'single'\\\"\\n        (selectionChange)=\\\"onSelectionChange($event)\\\"\\n      >\\n      </adapt-table>\\n    </div>\\n  </adapt-sidebar>\\n\\n  <adapt-code-viewer\\n    *ngIf=\\\"vm.definitionForJsonViewer\\\"\\n    [code]=\\\"vm.definitionForJsonViewer | json\\\"\\n    [lang]=\\\"'javascript'\\\"\\n    [hasToolbar]=\\\"false\\\"\\n    [theme]=\\\"'light'\\\"\\n    class=\\\"full-size\\\"\\n  ></adapt-code-viewer>\\n</ng-container>\\n\\n<ng-template #dataTypeCellTemplate let-dataItem=\\\"dataItem\\\">\\n  <span\\n    class=\\\"icon d-icon-lock pr-2\\\"\\n    *ngIf=\\\"dataItem.isCoreField\\\"\\n    [adaptPopover]=\\\"'com.bmc.arsys.rx.client.record-designer.core-field.tooltip' | translate\\\"\\n  ></span>\\n  {{ dataItem.resourceType }}\\n</ng-template>\\n\\n<ng-template #requiredCellTemplate let-dataItem=\\\"dataItem\\\">\\n  {{ dataItem.fieldOption | rxRecordDefinitionFieldOption }}\\n</ng-template>\\n\\n<ng-template #inheritedCellTemplate let-dataItem=\\\"dataItem\\\">\\n  <span *ngIf=\\\"dataItem.isInherited\\\" class=\\\"icon d-icon-check pr-2\\\"></span>\\n</ng-template>\\n\\n<ng-template #sourceFieldCellTemplate let-dataItem=\\\"dataItem\\\">\\n  {{ dataItem.sourceRecord }}\\n</ng-template>\\n\", styles: [\":root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}:host{display:flex;flex-direction:column;height:100%;width:100%}.rx-component-designer{display:flex;flex-grow:1;height:calc(100% - 50px);overflow:hidden}.rx-designer-container{display:flex;flex-direction:column;flex-grow:1;overflow:auto;padding:1rem}:host ::ng-deep adapt-sidebar .adapt-sidebar-wrapper{border-top:0}:host ::ng-deep adapt-sidebar .adapt-sidebar-wrapper .adapt-sidebar-panel-content{padding:0}:host ::ng-deep adapt-sidebar .adapt-sidebar-wrapper .card{border-left:0;border-right:0}\\n\"], components: [{ type: i11.RxDesignerHeaderComponent, selector: \"rx-designer-header\", inputs: [\"bundleName\", \"breadcrumbItems\", \"isDesignMode\", \"isPreviewAvailable\", \"isSaveButtonDisabled\"], outputs: [\"breadcrumbSelected\", \"toggleDesignMode\", \"showPreview\", \"save\", \"closeDesigner\"] }, { type: i3.AdaptSidebarComponent, selector: \"adapt-sidebar\", inputs: [\"className\", \"navClassName\", \"panelWidth\", \"panel2Width\", \"position\", \"theme\", \"widthLimit\", \"openedId\", \"adjustMainContainerWidth\"], outputs: [\"openedIdChange\", \"isPanelOpenedCurrently\"], exportAs: [\"adaptSidebar\"] }, { type: i3.AdaptSidebarItemComponent, selector: \"adapt-sidebar-item\", inputs: [\"iconClass\", \"headerTitle\", \"tooltipText\", \"aria-label\"] }, { type: i11.FormBuilderComponent, selector: \"rx-form-builder\", inputs: [\"config\", \"model\", \"guid\", \"isReadOnly\", \"focusEditor$\"], outputs: [\"modelChange\", \"editorEvent\", \"formInitialized\"] }, { type: i3.AdaptAlertComponent, selector: \"adapt-alert\", inputs: [\"config\"], outputs: [\"onClose\"] }, { type: i1.RxValidationIssuesComponent, selector: \"rx-validation-issues\", inputs: [\"definitionTypeDisplayName\", \"issueSections\"], outputs: [\"correctIssue\"] }, { type: i3.AdaptButtonComponent, selector: \"adapt-button, button[adapt-button], a[adapt-button]\", inputs: [\"btn-type\", \"size\", \"disabled\", \"type\", \"tabIndex\"], exportAs: [\"adaptBtn\"] }, { type: i3.AdaptDropdownDirective, selector: \"adapt-dropdown, [adaptDropdown]\", inputs: [\"autoClose\", \"customClass\", \"closeOnEscape\", \"placement\", \"animationPlacement\", \"holdFocusInMenu\", \"holdFocusOnOpen\", \"autoFocusFirst\", \"restoreFocusAfterClose\", \"focusNextElementAfterClose\", \"appendToBody\", \"appendTo\", \"positionTo\", \"anchorPositionTrackingIntervalMs\", \"enableAnchorPositionTracking\", \"recalculatePositionOnElementResize\", \"setMobileState\", \"mobileView\"], outputs: [\"onOpen\", \"onClose\", \"anchorPositionChange\", \"popupAnimationDone\"], exportAs: [\"adaptDropdown\"] }, { type: i4.AdaptTableComponent, selector: \"adapt-table\", inputs: [\"sortable\", \"filterable\", \"triggerableFilters\", \"explicitSearchBtn\", \"enableReorderableRows\", \"suppressTooltip\", \"toolbarConfig\", \"dataColumnsColsTemplate\", \"dataColumnsHeaderTemplate\", \"dataColumnsDataCellsTemplate\", \"headerGroupsTemplate\", \"alwaysShowHeaderTooltip\", \"alwaysShowCellTooltip\", \"expandedCellClass\", \"expandedGroupsKeys\", \"nestedGroupPadding\", \"expandindCellInitialPadding\", \"groupValueDataCellTemplate\", \"tooltipInitialDelayMs\", \"tooltipClass\", \"rowsCustomClass\", \"paginatorAlign\", \"hasEmptyState\", \"enableInfiniteScrolling\", \"updateFirstColumnWidth\", \"busyConfig\", \"defaultFiltersMatchMode\", \"wrapCellText\", \"minBufferPx\", \"maxBufferPx\", \"testID\", \"headerSelectionMode\", \"disabledSelectedRowsCount\", \"disabledNotSelectedRowsCount\", \"disabledSelectedFilteredRowsCount\", \"disabledNotSelectedFilteredRowsCount\", \"selectedFilteredRowsCount\", \"totalRecordsInGroup\", \"disableRowSelection\", \"nestingStructureData\", \"nestingKey\", \"enableRowEditing\", \"autoScrollToTop\", \"paginationTexts\", \"toolbarTexts\", \"tableTexts\", \"filtersTexts\", \"headerCellMenuTexts\", \"texts\", \"loadingMore\", \"mergeColumns\", \"disabledRowSelectionResolver\", \"allowColumnReorderingResolver\", \"disableRowExpandingResolver\", \"rowAriaDataResolver\", \"tableWidthConfig\", \"expandedRowTemplate\", \"isRefreshingRowData\", \"value\", \"bordered\", \"paginator\", \"striped\", \"loading\"], outputs: [\"onLazyLoad\", \"rowDataRefresh\", \"savedRowEditing\", \"canceledRowEditing\", \"groupSelection\", \"allGroupedRowsSelection\", \"groupExpansion\", \"columnsVisibilityChange\", \"rowDragStart\", \"rowDragRelease\", \"rowDragEnd\", \"rowDragDrop\", \"export\", \"toolbarPopupAnimationDone\"] }, { type: i3.AdaptCodeViewerComponent, selector: \"adapt-code-viewer\", inputs: [\"code\", \"theme\", \"lang\", \"texts\", \"hasToolbar\"] }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.AdaptDropdownToggleDirective, selector: \"[adaptDropdownToggle]\", inputs: [\"showCaret\", \"dropdownTogglerType\"] }, { type: i3.AdaptDropdownMenuDirective, selector: \"[adaptDropdownMenu]\" }, { type: i5.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.AdaptPopoverDirective, selector: \"[adaptPopover]\", inputs: [\"adaptPopover\", \"popoverTitle\", \"placement\", \"fallbackPlacement\", \"triggers\", \"container\", \"appendToBody\", \"closeBtn\", \"popupDelay\", \"disablePopover\", \"popoverClass\", \"autoClose\", \"closeOnOutOfView\", \"maxWidth\", \"minWidth\"], outputs: [\"shown\", \"hidden\"], exportAs: [\"adaptPopover\"] }], pipes: { \"async\": i5.AsyncPipe, \"translate\": i2.TranslatePipe, \"rxDefinitionNamePipe\": i2$1.RxDefinitionNamePipe, \"json\": i5.JsonPipe, \"rxRecordDefinitionFieldOption\": i3$1.RxRecordDefinitionFieldOptionPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordDesignerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-record-designer',\n                    templateUrl: './record-designer.component.html',\n                    styleUrls: ['./record-designer.component.scss']\n                }]\n        }], ctorParameters: function () { return [{ type: i1$2.Store }, { type: i2$1.RxNotificationService }, { type: i2$1.RxOverlayService }, { type: RxRecordDefinitionValidatorService }, { type: RxRecordDesignerInspectorService }, { type: i2$1.RxDefinitionNameService }, { type: RxFieldDefinitionManagerService }, { type: i3$1.RxRecordDefinitionService }, { type: i2$1.RxGlobalCacheService }, { type: i2.TranslateService }, { type: i5.DatePipe }, { type: i1.RxModalService }, { type: i3$1.RxFieldDefinitionService }, { type: RxRecordDesignerService }, { type: i11.RxExpressionEditorService }, { type: i3$1.RxRecordDefinitionCacheService }, { type: i1$1.RxGuidService }, { type: i0.Injector }]; }, propDecorators: { adaptSidebarComponent: [{\n                type: ViewChild,\n                args: [AdaptSidebarComponent, { static: false }]\n            }], requiredCellTemplate: [{\n                type: ViewChild,\n                args: ['requiredCellTemplate', { static: true }]\n            }], dataTypeCellTemplate: [{\n                type: ViewChild,\n                args: ['dataTypeCellTemplate', { static: true }]\n            }], inheritedCellTemplate: [{\n                type: ViewChild,\n                args: ['inheritedCellTemplate', { static: true }]\n            }], configuration: [{\n                type: Input\n            }], definitionSaved: [{\n                type: Output\n            }], definitionErrorLoading: [{\n                type: Output\n            }], closeDesigner: [{\n                type: Output\n            }] } });\n\nconst initialDefinitionModel = {\n    isArchivingEnabled: false,\n    archiveDescription: null,\n    ageQualifierFieldId: null,\n    ageQualifierInDays: null,\n    archiveRecordDefinitionName: null,\n    archiveType: ArchiveType.None,\n    includeAttachments: null,\n    archiveDataCriteria: null,\n    associationsToFollowForArchive: {\n        selectionType: AssociationSelectionType.FollowParent,\n        specificAssociationNames: []\n    },\n    isAuditingEnabled: false,\n    auditRecordDefinitionName: null,\n    auditDataCriteria: null,\n    associatedAuditFieldsByAssociationName: {},\n    customizationOptions: {\n        allowOverlay: false,\n        allowFieldsOverlay: false,\n        allowIndexesOverlay: false,\n        allowOtherPropertiesOverlay: false,\n        allowPermissionsOverlay: false,\n        fields: [],\n        scope: null\n    },\n    recordInheritanceSelector: {\n        inheritanceOptions: {\n            isSharedInstanceStorage: false,\n            isAbstract: false,\n            isFinal: false\n        },\n        inheritanceDescriptor: {\n            inheritingFrom: null,\n            isInheritingRules: false,\n            isInheritingFieldPermissions: false,\n            isInheritingAssociations: false,\n            isInheritingFieldAuditOptions: false\n        },\n        isInheritingCoreFields: false,\n        inheritedFieldDefinitions: []\n    },\n    recordSearchFields: [],\n    overlayOperation: null,\n    weightedRelevancyTitle: undefined,\n    weightedRelevancyKeywords: undefined,\n    weightedRelevancyEnvironment: undefined,\n    fields: [],\n    indexDefinitions: []\n};\nconst initialState = {\n    bundleId: null,\n    definitionName: null,\n    selectedFieldGuid: null,\n    inspectorTabIndex: 0,\n    isDesignMode: true,\n    definitionModel: initialDefinitionModel,\n    definitionModelFromDefinition: initialDefinitionModel,\n    isDirty: false,\n    savedDefinitionName: null\n};\nconst reducer = createReducer(initialState, on(init, (state, { payload }) => (Object.assign(Object.assign({}, initialState), { bundleId: payload.bundleId, definitionName: payload.definitionName }))), on(initDefinitionModel, (state, { definitionModelFromDefinition }) => (Object.assign(Object.assign({}, state), { definitionModelFromDefinition, definitionModel: definitionModelFromDefinition }))), on(updateDefinitionModelFromDesigner, (state, { definitionModelFromDesigner }) => {\n    const updatedDefinitionModel = Object.assign(Object.assign({}, state.definitionModel), definitionModelFromDesigner);\n    const inheritedFieldDefinitions = updatedDefinitionModel.recordInheritanceSelector.inheritanceDescriptor\n        ? updatedDefinitionModel.recordInheritanceSelector.inheritedFieldDefinitions\n        : [];\n    return Object.assign(Object.assign({}, state), { definitionModel: Object.assign(Object.assign({}, updatedDefinitionModel), { includeAttachments: updatedDefinitionModel.archiveType === RX_RECORD_DESIGNER.archiving.types.deleteSourceRecord.id, fields: chain(updatedDefinitionModel.fields)\n                .differenceBy(inheritedFieldDefinitions, 'id')\n                .concat(inheritedFieldDefinitions)\n                .map((field) => {\n                const searchField = updatedDefinitionModel.recordSearchFields.find((searchField) => searchField.id === field.id);\n                const searchDefinition = searchField\n                    ? searchField.searchDefinition\n                    : isUndefined(field.searchDefinition)\n                        ? undefined\n                        : null;\n                const customizationOptionField = updatedDefinitionModel.customizationOptions.allowFieldsOverlay &&\n                    updatedDefinitionModel.customizationOptions.fields.find((customizationOptionsField) => customizationOptionsField.id === field.id);\n                return Object.assign(Object.assign({}, field), { searchDefinition, allowOtherPropertiesOverlay: customizationOptionField\n                        ? customizationOptionField.allowOtherPropertiesOverlay\n                        : field.allowOtherPropertiesOverlay, allowPermissionsOverlay: customizationOptionField\n                        ? customizationOptionField.allowPermissionsOverlay\n                        : field.allowPermissionsOverlay, isInherited: field.isCoreField\n                        ? Boolean(updatedDefinitionModel.recordInheritanceSelector.isInheritingCoreFields)\n                        : field.isInherited });\n            })\n                .orderBy('id')\n                .value() }) });\n}), on(updateSelectedFieldModel, (state, { selectedFieldModel }) => {\n    return Object.assign(Object.assign({}, state), { definitionModel: Object.assign(Object.assign({}, state.definitionModel), { fields: state.definitionModel.fields.map((field) => {\n                return field.guid === selectedFieldModel.guid\n                    ? Object.assign(Object.assign({}, selectedFieldModel), { copy: selectedFieldModel.audit ? true : selectedFieldModel.copy }) : field;\n            }) }) });\n}), on(clearSearchFields, (state) => (Object.assign(Object.assign({}, state), { definitionModel: Object.assign(Object.assign({}, state.definitionModel), { recordSearchFields: [], fields: state.definitionModel.fields.map((field) => {\n            return Object.assign(Object.assign({}, field), { searchDefinition: isUndefined(field.searchDefinition) ? undefined : null });\n        }) }) }))), on(toggleDesignMode, (state) => (Object.assign(Object.assign({}, state), { isDesignMode: !state.isDesignMode }))), on(markDesignerPristine, (state) => (Object.assign(Object.assign({}, state), { isDirty: false }))), on(markDesignerDirty, (state) => (Object.assign(Object.assign({}, state), { isDirty: true }))), on(setInspectorTabIndex, (state, { inspectorTabIndex }) => (Object.assign(Object.assign({}, state), { inspectorTabIndex }))), on(setSelectedFieldGuid, (state, { guid }) => (Object.assign(Object.assign({}, state), { selectedFieldGuid: guid, inspectorTabIndex: guid && !isNull(state.inspectorTabIndex) ? 1 : state.inspectorTabIndex }))), on(clearSelectedFieldGuid, (state) => (Object.assign(Object.assign({}, state), { selectedFieldGuid: null, inspectorTabIndex: !isNull(state.inspectorTabIndex) ? 0 : state.inspectorTabIndex }))), on(addFieldModel, (state, { newFieldModel }) => (Object.assign(Object.assign({}, state), { definitionModel: Object.assign(Object.assign({}, state.definitionModel), { fields: [...state.definitionModel.fields, Object.assign({}, newFieldModel)] }) }))), on(addNewFieldModels, (state, { newFieldModels }) => (Object.assign(Object.assign({}, state), { definitionModel: Object.assign(Object.assign({}, state.definitionModel), { fields: [...state.definitionModel.fields, ...newFieldModels] }), isDirty: true }))), on(deleteSelectedFieldSuccess, (state) => (Object.assign(Object.assign({}, state), { definitionModel: Object.assign(Object.assign({}, state.definitionModel), { fields: state.definitionModel.fields.filter((field) => field.guid !== state.selectedFieldGuid) }) }))), on(saveDefinitionSuccess, (state, { savedDefinitionName }) => (Object.assign(Object.assign({}, state), { savedDefinitionName }))), on(destroy, (state) => (Object.assign({}, initialState))));\nfunction recordDesignerModelReducer(state, action) {\n    return reducer(state, action);\n}\n\nclass RecordDesignerEffects {\n    constructor(store$, actions$, rxFieldDefinitionManagerService, rxRecordDefinitionService, rxModalService, rxNotificationService, translateService, rxGuidService, rxRecordDesignerService) {\n        this.store$ = store$;\n        this.actions$ = actions$;\n        this.rxFieldDefinitionManagerService = rxFieldDefinitionManagerService;\n        this.rxRecordDefinitionService = rxRecordDefinitionService;\n        this.rxModalService = rxModalService;\n        this.rxNotificationService = rxNotificationService;\n        this.translateService = translateService;\n        this.rxGuidService = rxGuidService;\n        this.rxRecordDesignerService = rxRecordDesignerService;\n        this.initRecordDesigner$ = createEffect(() => this.actions$.pipe(ofType(init), map(() => loadDefinition())));\n        this.loadDefinition$ = createEffect(() => this.actions$.pipe(ofType(loadDefinition), withLatestFrom(this.store$.select(definitionNameSelector)), switchMap(([action, definitionName]) => definitionName\n            ? this.rxRecordDefinitionService.get(definitionName, {}, true)\n            : this.rxRecordDefinitionService.getNew()), map((definition) => loadDefinitionSuccess({\n            definition\n        }))));\n        this.loadDefinitionSuccess$ = createEffect(() => this.actions$.pipe(ofType(loadDefinitionSuccess), map((action) => initDefinitionModel({\n            definitionModelFromDefinition: this.rxRecordDesignerService.getDefinitionModelFromDefinition(action.definition)\n        }))));\n        this.createNewFieldModel$ = createEffect(() => this.actions$.pipe(ofType(createNewFieldModel), withLatestFrom(this.store$.select(definitionModelSelector)), map(([action, definitionModel]) => {\n            let newFieldName;\n            let fieldNameSuffix = 0;\n            const defaultFieldName = this.translateService.instant('com.bmc.arsys.rx.client.designer.default-field-name.label');\n            do {\n                newFieldName = `${defaultFieldName} ${++fieldNameSuffix}`;\n            } while (some(definitionModel.fields, { name: newFieldName }));\n            const guid = this.rxGuidService.generate();\n            const newFieldModel = this.rxFieldDefinitionManagerService.getNewFieldDefinitionModel(action.resourceType, {\n                id: null,\n                isNewField: true,\n                name: newFieldName,\n                guid,\n                minValue: null,\n                maxValue: null,\n                defaultValueByLocale: {},\n                selectionFieldOptionProperties: action.resourceType === RX_RECORD_DEFINITION.dataTypes.selection.resourceType\n                    ? { defaultValue: null, optionNamesById: null, optionLabelsById: null }\n                    : null\n            });\n            return addFieldModel({ newFieldModel });\n        })));\n        this.clearSearchFields$ = createEffect(() => this.actions$.pipe(ofType(updateDefinitionModelFromDesigner), withLatestFrom(this.store$.select(definitionModelSelector)), map(([action, definitionModel]) => definitionModel), distinctUntilChanged((a, b) => isEqual(a.enableCognitiveSearch, b.enableCognitiveSearch)), filter((definitionModel) => definitionModel.enableCognitiveSearch && !isEmpty(definitionModel.recordSearchFields)), switchMap(() => from(this.rxModalService.confirm({\n            title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n            modalStyle: RX_MODAL.modalStyles.warning,\n            message: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.search-fields.clear-search-fields-confirmation.message')\n        }))), filter(Boolean), map(() => clearSearchFields())));\n        this.addNewFieldModel$ = createEffect(() => this.actions$.pipe(ofType(addFieldModel), map((action) => setSelectedFieldGuid({ guid: action.newFieldModel.guid }))));\n        this.copySelectedField$ = createEffect(() => this.actions$.pipe(ofType(copySelectedField), withLatestFrom(this.store$.select(definitionModelSelector), this.store$.select(selectedFieldGuidSelector)), map(([action, definitionModel, selectedFieldGuid]) => {\n            const selectedField = definitionModel.fields.find((field) => field.guid === selectedFieldGuid);\n            const selectedFieldCopy = Object.assign(Object.assign({}, selectedField), { id: null, guid: this.rxGuidService.generate(), name: this.translateService.instant('com.bmc.arsys.rx.client.designer.default-field-copy-name.label', {\n                    fieldName: selectedField.name\n                }), selectionFieldOptionProperties: Object.assign(Object.assign({}, selectedField.selectionFieldOptionProperties), { optionLabelsById: selectedField.resourceType === RX_RECORD_DEFINITION.resourceTypes.selection\n                        ? mapValues(selectedField.selectionFieldOptionProperties.optionNamesById, () => this.rxGuidService.generate())\n                        : null }) });\n            return addFieldModel({ newFieldModel: selectedFieldCopy });\n        })));\n        this.deleteSelectedField$ = createEffect(() => this.actions$.pipe(ofType(deleteSelectedField), switchMap(() => from(this.rxModalService.confirm({\n            title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n            modalStyle: RX_MODAL.modalStyles.warning,\n            message: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.delete-field-warning.message')\n        }))), filter(Boolean), map(() => checkIfFieldUsedByIndexes())));\n        this.checkIfFieldUsedByIndexes$ = createEffect(() => this.actions$.pipe(ofType(checkIfFieldUsedByIndexes), withLatestFrom(this.store$.select(definitionModelSelector), this.store$.select(selectedFieldGuidSelector)), switchMap(([result, definitionModel, guid]) => {\n            const field = find(definitionModel.fields, { guid });\n            const isUsedByIndexes = some(definitionModel.indexDefinitions, (indexDefinition) => includes(indexDefinition.indexFieldIds, field.id));\n            return isUsedByIndexes\n                ? from(this.rxModalService.alert({\n                    title: this.translateService.instant('com.bmc.arsys.rx.client.common.warning.label'),\n                    modalStyle: RX_MODAL.modalStyles.warning,\n                    message: this.translateService.instant('com.bmc.arsys.rx.client.record-designer.indexes.field-used-by-indexes.message', { fieldName: field.name })\n                })).pipe(map(() => deleteSelectedFieldError()))\n                : [deleteSelectedFieldSuccess()];\n        })));\n        this.saveDefinitionSuccess$ = createEffect(() => this.actions$.pipe(ofType(saveDefinitionSuccess), withLatestFrom(this.store$.select(definitionNameSelector), this.store$.select(bundleIdSelector)), tap(() => {\n            this.rxNotificationService.addSuccessMessage(this.translateService.instant('com.bmc.arsys.rx.client.designer.definition-saved-successfully.message', {\n                definitionTypeDisplayName: this.translateService.instant('com.bmc.arsys.rx.client.record-definition.label')\n            }));\n        }), filter(([action, definitionName, bundleId]) => !!definitionName), map(([action, definitionName, bundleId]) => init({\n            payload: { definitionName, bundleId }\n        }))));\n        this.clearSelectedField$ = createEffect(() => this.actions$.pipe(ofType(initDefinitionModel, deleteSelectedFieldSuccess), map(() => clearSelectedFieldGuid())));\n        this.markPristine$ = createEffect(() => this.actions$.pipe(ofType(initDefinitionModel, saveDefinitionSuccess), map(() => markDesignerPristine())));\n        this.markDirty$ = createEffect(() => this.actions$.pipe(ofType(addFieldModel, updateDefinitionModelFromDesigner, updateSelectedFieldModel, deleteSelectedFieldSuccess), map(() => markDesignerDirty())));\n    }\n}\nRecordDesignerEffects.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordDesignerEffects, deps: [{ token: i1$2.Store }, { token: i2$2.Actions }, { token: RxFieldDefinitionManagerService }, { token: i3$1.RxRecordDefinitionService }, { token: i1.RxModalService }, { token: i2$1.RxNotificationService }, { token: i2.TranslateService }, { token: i1$1.RxGuidService }, { token: RxRecordDesignerService }], target: i0.ɵɵFactoryTarget.Injectable });\nRecordDesignerEffects.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordDesignerEffects });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordDesignerEffects, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$2.Store }, { type: i2$2.Actions }, { type: RxFieldDefinitionManagerService }, { type: i3$1.RxRecordDefinitionService }, { type: i1.RxModalService }, { type: i2$1.RxNotificationService }, { type: i2.TranslateService }, { type: i1$1.RxGuidService }, { type: RxRecordDesignerService }]; } });\n\nclass RecordDesignerModule {\n}\nRecordDesignerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordDesignerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRecordDesignerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordDesignerModule, declarations: [RecordDesignerComponent,\n        LocalizedCharacterFieldEditorComponent,\n        InheritanceIssueInfoComponent,\n        ArchiveAssociationsControlComponent,\n        ArchiveAssociationSelectorComponent,\n        MissingArchiveDefinitionsModalComponent,\n        FieldOptionEditorComponent,\n        AddJoinFieldsEditorComponent,\n        RecordIndexesControlComponent,\n        RecordIndexesEditorComponent], imports: [AdaptCodeViewerModule,\n        AdaptRxLabelModule,\n        AdaptTabsModule,\n        AdaptBusyModule,\n        AdaptButtonModule,\n        AdaptDropdownModule,\n        AdaptRxCheckboxModule,\n        AdaptRxSelectModule,\n        AdaptRxTextfieldModule,\n        AdaptPopoverModule,\n        AdaptIconModule,\n        CommonModule,\n        FormsModule,\n        RxDesignerHeaderModule,\n        RxModalModule,\n        RxValidationIssuesModule,\n        TranslateModule,\n        ReactiveFormsModule,\n        RecordGridModule,\n        RxFormBuilderModule,\n        RxDefinitionModule,\n        RxRecordDefinitionFieldOptionPipeModule,\n        RecordCustomizationOptionsModule,\n        RecordInheritanceEditorModule,\n        SearchFieldEditorModule,\n        AdaptTableModule,\n        AdaptSidebarModule, i1$2.StoreFeatureModule, i2$2.EffectsFeatureModule, AdaptAlertModule,\n        AdaptRxRadiobuttonModule,\n        AdaptRxSwitchModule,\n        AdaptPopoverModule,\n        AdaptAccordionModule,\n        AdaptRxListBuilderModule], exports: [RecordDesignerComponent] });\nRecordDesignerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordDesignerModule, providers: [DatePipe, RxRecordDesignerService], imports: [[\n            AdaptCodeViewerModule,\n            AdaptRxLabelModule,\n            AdaptTabsModule,\n            AdaptBusyModule,\n            AdaptButtonModule,\n            AdaptDropdownModule,\n            AdaptRxCheckboxModule,\n            AdaptRxSelectModule,\n            AdaptRxTextfieldModule,\n            AdaptPopoverModule,\n            AdaptIconModule,\n            CommonModule,\n            FormsModule,\n            RxDesignerHeaderModule,\n            RxModalModule,\n            RxValidationIssuesModule,\n            TranslateModule,\n            ReactiveFormsModule,\n            RecordGridModule,\n            RxFormBuilderModule,\n            RxDefinitionModule,\n            RxRecordDefinitionFieldOptionPipeModule,\n            RecordCustomizationOptionsModule,\n            RecordInheritanceEditorModule,\n            SearchFieldEditorModule,\n            AdaptTableModule,\n            AdaptSidebarModule,\n            StoreModule.forFeature(RX_RECORD_DESIGNER.featureSelector, {\n                model: recordDesignerModelReducer\n            }),\n            EffectsModule.forFeature([RecordDesignerEffects]),\n            AdaptAlertModule,\n            AdaptRxRadiobuttonModule,\n            AdaptRxSwitchModule,\n            AdaptPopoverModule,\n            AdaptAccordionModule,\n            AdaptRxListBuilderModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordDesignerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        RecordDesignerComponent,\n                        LocalizedCharacterFieldEditorComponent,\n                        InheritanceIssueInfoComponent,\n                        ArchiveAssociationsControlComponent,\n                        ArchiveAssociationSelectorComponent,\n                        MissingArchiveDefinitionsModalComponent,\n                        FieldOptionEditorComponent,\n                        AddJoinFieldsEditorComponent,\n                        RecordIndexesControlComponent,\n                        RecordIndexesEditorComponent\n                    ],\n                    exports: [RecordDesignerComponent],\n                    imports: [\n                        AdaptCodeViewerModule,\n                        AdaptRxLabelModule,\n                        AdaptTabsModule,\n                        AdaptBusyModule,\n                        AdaptButtonModule,\n                        AdaptDropdownModule,\n                        AdaptRxCheckboxModule,\n                        AdaptRxSelectModule,\n                        AdaptRxTextfieldModule,\n                        AdaptPopoverModule,\n                        AdaptIconModule,\n                        CommonModule,\n                        FormsModule,\n                        RxDesignerHeaderModule,\n                        RxModalModule,\n                        RxValidationIssuesModule,\n                        TranslateModule,\n                        ReactiveFormsModule,\n                        RecordGridModule,\n                        RxFormBuilderModule,\n                        RxDefinitionModule,\n                        RxRecordDefinitionFieldOptionPipeModule,\n                        RecordCustomizationOptionsModule,\n                        RecordInheritanceEditorModule,\n                        SearchFieldEditorModule,\n                        AdaptTableModule,\n                        AdaptSidebarModule,\n                        StoreModule.forFeature(RX_RECORD_DESIGNER.featureSelector, {\n                            model: recordDesignerModelReducer\n                        }),\n                        EffectsModule.forFeature([RecordDesignerEffects]),\n                        AdaptAlertModule,\n                        AdaptRxRadiobuttonModule,\n                        AdaptRxSwitchModule,\n                        AdaptPopoverModule,\n                        AdaptAccordionModule,\n                        AdaptRxListBuilderModule\n                    ],\n                    providers: [DatePipe, RxRecordDesignerService]\n                }]\n        }] });\n\nclass RecordDesignerPageComponent {\n    constructor(activatedRoute, rxBundleCacheService, rxDefinitionNameService, rxUtilityModalsService, rxPageTitleService, router, translateService, rxComponentCanDeactivateGuard) {\n        this.activatedRoute = activatedRoute;\n        this.rxBundleCacheService = rxBundleCacheService;\n        this.rxDefinitionNameService = rxDefinitionNameService;\n        this.rxUtilityModalsService = rxUtilityModalsService;\n        this.rxPageTitleService = rxPageTitleService;\n        this.router = router;\n        this.translateService = translateService;\n        this.rxComponentCanDeactivateGuard = rxComponentCanDeactivateGuard;\n        this.isInitialized = false;\n    }\n    ngOnInit() {\n        this.rxComponentCanDeactivateGuard.setPageComponent(this);\n        this.subscription = this.activatedRoute.params.subscribe(({ definitionName, bundleId }) => {\n            this.rxBundleCacheService.bundleId = bundleId || this.rxDefinitionNameService.getBundleId(definitionName);\n            this.isInitialized = true;\n            this.isNewRecord = !definitionName;\n            this.configuration = {\n                definitionName: definitionName,\n                bundleId: this.rxBundleCacheService.bundleId\n            };\n            this.rxPageTitleService.set([\n                this.rxDefinitionNameService.getDisplayName(definitionName),\n                this.translateService.instant('com.bmc.arsys.rx.client.record-designer.title')\n            ]);\n        });\n    }\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n        this.rxComponentCanDeactivateGuard.setPageComponent(null);\n    }\n    onDefinitionSaved(recordDefinitionName) {\n        if (this.isNewRecord) {\n            this.router.navigate(['edit2', recordDefinitionName], { relativeTo: this.activatedRoute.parent });\n        }\n    }\n    onDefinitionErrorLoading() {\n        this.router.navigate(['new2', this.rxBundleCacheService.bundleId], { relativeTo: this.activatedRoute.parent });\n    }\n    onCloseDesigner() {\n        this.router.navigate([\n            RX_APPLICATION.innovationStudioBundleId,\n            this.rxBundleCacheService.bundleId,\n            'record-definitions'\n        ]);\n    }\n    canDeactivate() {\n        var _a, _b;\n        return (_b = (_a = this.recordDesignerComponent) === null || _a === void 0 ? void 0 : _a.canDeactivate()) !== null && _b !== void 0 ? _b : true;\n    }\n    confirmDeactivation() {\n        return this.rxUtilityModalsService.confirmUnsavedChanges();\n    }\n}\nRecordDesignerPageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordDesignerPageComponent, deps: [{ token: i1$3.ActivatedRoute }, { token: i2$1.RxBundleCacheService }, { token: i2$1.RxDefinitionNameService }, { token: i1.RxUtilityModalsService }, { token: i2$1.RxPageTitleService }, { token: i1$3.Router }, { token: i2.TranslateService }, { token: i2$1.RxComponentCanDeactivateGuard }], target: i0.ɵɵFactoryTarget.Component });\nRecordDesignerPageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: RecordDesignerPageComponent, selector: \"rx-record-designer-page\", viewQueries: [{ propertyName: \"recordDesignerComponent\", first: true, predicate: RecordDesignerComponent, descendants: true }], ngImport: i0, template: \"<rx-record-designer\\n  *ngIf=\\\"isInitialized\\\"\\n  [configuration]=\\\"configuration\\\"\\n  (definitionSaved)=\\\"onDefinitionSaved($event)\\\"\\n  (definitionErrorLoading)=\\\"onDefinitionErrorLoading()\\\"\\n  (closeDesigner)=\\\"onCloseDesigner()\\\"\\n></rx-record-designer>\\n\", components: [{ type: RecordDesignerComponent, selector: \"rx-record-designer\", inputs: [\"configuration\"], outputs: [\"definitionSaved\", \"definitionErrorLoading\", \"closeDesigner\"] }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordDesignerPageComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-record-designer-page',\n                    templateUrl: './record-designer-page.component.html'\n                }]\n        }], ctorParameters: function () { return [{ type: i1$3.ActivatedRoute }, { type: i2$1.RxBundleCacheService }, { type: i2$1.RxDefinitionNameService }, { type: i1.RxUtilityModalsService }, { type: i2$1.RxPageTitleService }, { type: i1$3.Router }, { type: i2.TranslateService }, { type: i2$1.RxComponentCanDeactivateGuard }]; }, propDecorators: { recordDesignerComponent: [{\n                type: ViewChild,\n                args: [RecordDesignerComponent]\n            }] } });\n\nclass RecordDesignerPageModule {\n}\nRecordDesignerPageModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordDesignerPageModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRecordDesignerPageModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordDesignerPageModule, declarations: [RecordDesignerPageComponent], imports: [CommonModule, RecordDesignerModule], exports: [RecordDesignerPageComponent] });\nRecordDesignerPageModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordDesignerPageModule, imports: [[CommonModule, RecordDesignerModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RecordDesignerPageModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [RecordDesignerPageComponent],\n                    exports: [RecordDesignerPageComponent],\n                    imports: [CommonModule, RecordDesignerModule]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RecordDesignerComponent, RecordDesignerModule, RecordDesignerPageComponent, RecordDesignerPageModule, RxFieldDefinitionManagerService, RxRecordDesignerService };\n//# sourceMappingURL=helix-platform-record-designer.js.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}