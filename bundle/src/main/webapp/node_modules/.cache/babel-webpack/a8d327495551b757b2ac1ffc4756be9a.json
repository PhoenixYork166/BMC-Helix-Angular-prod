{"ast":null,"code":"import * as i1 from '@angular/common/http';\nimport * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport * as i2 from '@ngx-translate/core';\nimport { of } from 'rxjs';\nvar ShowInLocationOptions;\n(function (ShowInLocationOptions) {\n  ShowInLocationOptions[\"Application\"] = \"Application\";\n  ShowInLocationOptions[\"InnovationStudio\"] = \"InnovationStudio\";\n  ShowInLocationOptions[\"Both\"] = \"Both\";\n  ShowInLocationOptions[\"None\"] = \"None\";\n})(ShowInLocationOptions || (ShowInLocationOptions = {}));\nvar ImpactRowVisibility;\n(function (ImpactRowVisibility) {\n  ImpactRowVisibility[\"User\"] = \"User\";\n  ImpactRowVisibility[\"None\"] = \"None\";\n})(ImpactRowVisibility || (ImpactRowVisibility = {}));\nclass RxConfigDefinitionService {\n  constructor(httpClient, translateService) {\n    this.httpClient = httpClient;\n    this.translateService = translateService;\n    this.url = '/api/rx/application/admin-settings/component';\n  }\n  getComponents() {\n    return this.httpClient.get('/api/rx/application/admin-settings/components-list');\n  }\n  get(componentName) {\n    return this.httpClient.get(`${this.url}/${encodeURIComponent(componentName)}`);\n  }\n  update(componentName, configDefinition) {\n    return this.httpClient.put(`${this.url}/${encodeURIComponent(componentName)}`, configDefinition);\n  }\n  create(configDefinition) {\n    return this.httpClient.post(`${this.url}`, configDefinition);\n  }\n  getNew(isApplication) {\n    return of({\n      viewToOpen: 'CommonSettings',\n      componentName: null,\n      externalLink: null,\n      impactRowVisibility: ImpactRowVisibility.None,\n      localeList: [{\n        componentLabel: this.translateService.instant('com.bmc.arsys.rx.client.config-designer.default-component-label.label'),\n        firstMenu: null,\n        locale: 'en',\n        secondMenu: null\n      }],\n      parentComponentName: null,\n      permissions: [],\n      registeredModuleName: null,\n      settingMetaData: [],\n      showInLocation: isApplication ? ShowInLocationOptions.Application : ShowInLocationOptions.InnovationStudio,\n      supportsMultiple: false,\n      viewComponent: false\n    });\n  }\n}\nRxConfigDefinitionService.ɵfac = function RxConfigDefinitionService_Factory(t) {\n  return new (t || RxConfigDefinitionService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TranslateService));\n};\nRxConfigDefinitionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxConfigDefinitionService,\n  factory: RxConfigDefinitionService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxConfigDefinitionService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: i2.TranslateService\n    }];\n  }, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ImpactRowVisibility, RxConfigDefinitionService, ShowInLocationOptions };\n//# sourceMappingURL=helix-platform-config-api.js.map","map":{"version":3,"names":["i1","i0","Injectable","i2","of","ShowInLocationOptions","ImpactRowVisibility","RxConfigDefinitionService","constructor","httpClient","translateService","url","getComponents","get","componentName","encodeURIComponent","update","configDefinition","put","create","post","getNew","isApplication","viewToOpen","externalLink","impactRowVisibility","None","localeList","componentLabel","instant","firstMenu","locale","secondMenu","parentComponentName","permissions","registeredModuleName","settingMetaData","showInLocation","Application","InnovationStudio","supportsMultiple","viewComponent","ɵfac","RxConfigDefinitionService_Factory","t","ɵɵinject","HttpClient","TranslateService","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args"],"sources":["C:/projects/BMC-Helix-Angular-prod/bundle/src/main/webapp/node_modules/@helix/platform/fesm2015/helix-platform-config-api.js"],"sourcesContent":["import * as i1 from '@angular/common/http';\nimport * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport * as i2 from '@ngx-translate/core';\nimport { of } from 'rxjs';\n\nvar ShowInLocationOptions;\n(function (ShowInLocationOptions) {\n    ShowInLocationOptions[\"Application\"] = \"Application\";\n    ShowInLocationOptions[\"InnovationStudio\"] = \"InnovationStudio\";\n    ShowInLocationOptions[\"Both\"] = \"Both\";\n    ShowInLocationOptions[\"None\"] = \"None\";\n})(ShowInLocationOptions || (ShowInLocationOptions = {}));\nvar ImpactRowVisibility;\n(function (ImpactRowVisibility) {\n    ImpactRowVisibility[\"User\"] = \"User\";\n    ImpactRowVisibility[\"None\"] = \"None\";\n})(ImpactRowVisibility || (ImpactRowVisibility = {}));\n\nclass RxConfigDefinitionService {\n    constructor(httpClient, translateService) {\n        this.httpClient = httpClient;\n        this.translateService = translateService;\n        this.url = '/api/rx/application/admin-settings/component';\n    }\n    getComponents() {\n        return this.httpClient.get('/api/rx/application/admin-settings/components-list');\n    }\n    get(componentName) {\n        return this.httpClient.get(`${this.url}/${encodeURIComponent(componentName)}`);\n    }\n    update(componentName, configDefinition) {\n        return this.httpClient.put(`${this.url}/${encodeURIComponent(componentName)}`, configDefinition);\n    }\n    create(configDefinition) {\n        return this.httpClient.post(`${this.url}`, configDefinition);\n    }\n    getNew(isApplication) {\n        return of({\n            viewToOpen: 'CommonSettings',\n            componentName: null,\n            externalLink: null,\n            impactRowVisibility: ImpactRowVisibility.None,\n            localeList: [\n                {\n                    componentLabel: this.translateService.instant('com.bmc.arsys.rx.client.config-designer.default-component-label.label'),\n                    firstMenu: null,\n                    locale: 'en',\n                    secondMenu: null\n                }\n            ],\n            parentComponentName: null,\n            permissions: [],\n            registeredModuleName: null,\n            settingMetaData: [],\n            showInLocation: isApplication ? ShowInLocationOptions.Application : ShowInLocationOptions.InnovationStudio,\n            supportsMultiple: false,\n            viewComponent: false\n        });\n    }\n}\nRxConfigDefinitionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxConfigDefinitionService, deps: [{ token: i1.HttpClient }, { token: i2.TranslateService }], target: i0.ɵɵFactoryTarget.Injectable });\nRxConfigDefinitionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxConfigDefinitionService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxConfigDefinitionService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: i2.TranslateService }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ImpactRowVisibility, RxConfigDefinitionService, ShowInLocationOptions };\n//# sourceMappingURL=helix-platform-config-api.js.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}